<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="npm">
    <body>
      <group id="npm">
        <trans-unit id="dbf5a23e661a33e80ed72ad7bc0863c0bb37c528" translate="yes" xml:space="preserve">
          <source>The command to use for git commands. If git is installed on the computer, but is not in the &lt;code&gt;PATH&lt;/code&gt;, then set this to the full path to the git binary.</source>
          <target state="translated">gitコマンドに使用するコマンド。gitがコンピューターにインストールされているが &lt;code&gt;PATH&lt;/code&gt; にはない場合は、これをgitバイナリーへの絶対パスに設定します。</target>
        </trans-unit>
        <trans-unit id="3cae97d07a75b25d20f430372768105937034dcb" translate="yes" xml:space="preserve">
          <source>The config file to read for global config options.</source>
          <target state="translated">グローバルコンフィグオプションのために読み込むコンフィグファイル。</target>
        </trans-unit>
        <trans-unit id="1f66b6d25ee8de625c31496955e767941ae78bdd" translate="yes" xml:space="preserve">
          <source>The deduplication algorithm walks the tree, moving each dependency as far up in the tree as possible, even if duplicates are not found. This will result in both a flat and deduplicated tree.</source>
          <target state="translated">重複排除アルゴリズムは、重複が見つからなくても、各依存関係を可能な限りツリーの上方に移動させながらツリーを探索します。これにより、平坦なツリーと重複排除されたツリーの両方が得られます。</target>
        </trans-unit>
        <trans-unit id="1401fb62356585f36e5fe1c3a38ac194bdaa161d" translate="yes" xml:space="preserve">
          <source>The default setting for new tokens is full-permission.</source>
          <target state="translated">新しいトークンのデフォルト設定はフルパーミッションです。</target>
        </trans-unit>
        <trans-unit id="98d1f9ca0fb9f3c611eea6d27b61bbb406ce6e6f" translate="yes" xml:space="preserve">
          <source>The default version is &quot;latest&quot; if unspecified.</source>
          <target state="translated">デフォルトのバージョンは、指定しない場合は &quot;最新版 &quot;です。</target>
        </trans-unit>
        <trans-unit id="c83669c694bf9ce15555fc056f43202f1066c2bf" translate="yes" xml:space="preserve">
          <source>The dependencies of this dependency, exactly as at the top level.</source>
          <target state="translated">この依存関係の依存関係は、トップレベルと全く同じです。</target>
        </trans-unit>
        <trans-unit id="68c7b1a73279dfcc73097bac56d1ef55b848ce4b" translate="yes" xml:space="preserve">
          <source>The depth to go when recursing directories for &lt;code&gt;npm ls&lt;/code&gt;, &lt;code&gt;npm cache ls&lt;/code&gt;, and &lt;code&gt;npm outdated&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm ls&lt;/code&gt; 、 &lt;code&gt;npm cache ls&lt;/code&gt; 、および &lt;code&gt;npm outdated&lt;/code&gt; ディレクトリを再帰するときに古くなるまでの深さ。</target>
        </trans-unit>
        <trans-unit id="41fff03cdef55a327cc7b2c216ba144dfbc645b2" translate="yes" xml:space="preserve">
          <source>The description of the vulnerability. For example, &quot;Denial of service&quot;.</source>
          <target state="translated">脆弱性の説明。例えば、「サービス拒否」など。</target>
        </trans-unit>
        <trans-unit id="656ac6f95a3d74510468c36c0b8daa1bd9f515d5" translate="yes" xml:space="preserve">
          <source>The developer will be able to access packages based on the teams they are on. Access is either read-write or read-only.</source>
          <target state="translated">開発者は、所属するチームに基づいてパッケージにアクセスできるようになります。アクセスは読み書きまたは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="a947085d51250fa82367d9322a92fe3a65c74918" translate="yes" xml:space="preserve">
          <source>The directories that npm uses, &lt;code&gt;node_modules&lt;/code&gt; (both locally and globally), exist and can be written by the current user.</source>
          <target state="translated">npmが使用するディレクトリ、 &lt;code&gt;node_modules&lt;/code&gt; （ローカルとグローバルの両方）が存在し、現在のユーザーが書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="8d9e15ad02608432fa09bee6d7c2a7566d38ccb6" translate="yes" xml:space="preserve">
          <source>The easier (and more awesome) way to add dependencies to your &lt;code&gt;package.json&lt;/code&gt; is to do so from the command line, flagging the &lt;code&gt;npm install&lt;/code&gt; command with either &lt;code&gt;--save-prod&lt;/code&gt; (assumed by default) or &lt;code&gt;--save-dev&lt;/code&gt;, depending on how you'd like to use that dependency.</source>
          <target state="translated">あなたに依存関係を追加する簡単な（そしてもっとすごい）方法 &lt;code&gt;package.json&lt;/code&gt; は低迷、コマンドラインからそうすることである &lt;code&gt;npm install&lt;/code&gt; のいずれかを使用してコマンドを &lt;code&gt;--save-prod&lt;/code&gt; （デフォルトでは仮定）、または &lt;code&gt;--save-dev&lt;/code&gt; の、依存しますその依存関係をどのように使用するかについて。</target>
        </trans-unit>
        <trans-unit id="817f0d4299f26a50744477ba786bf5df51113967" translate="yes" xml:space="preserve">
          <source>The easiest way is to replicate the couch database, and use the same (or similar) design doc to implement the APIs.</source>
          <target state="translated">最も簡単な方法は、カウチデータベースを複製し、APIを実装するために同じ(または類似した)デザインのdocを使用することです。</target>
        </trans-unit>
        <trans-unit id="0792115d3a82a3eafae15a7eaadab3148b386286" translate="yes" xml:space="preserve">
          <source>The easiest way to publish to and install from your company's npm Enterprise registry is to set it as your default registry.</source>
          <target state="translated">会社の npm Enterprise レジストリにパブリッシュしてインストールする最も簡単な方法は、デフォルトのレジストリに設定することです。</target>
        </trans-unit>
        <trans-unit id="08fdaa76a525b80ecfc1f636a276f38a6f3516c2" translate="yes" xml:space="preserve">
          <source>The error &lt;code&gt;Error: ENOENT, stat 'C:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm'&lt;/code&gt; on Windows 7 is a consequence of &lt;a href=&quot;https://github.com/joyent/node/issues/8141&quot;&gt;joyent/node#8141&lt;/a&gt;, and is an issue with the Node installer for Windows. The workaround is to ensure that &lt;code&gt;C:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm&lt;/code&gt; exists and is writable with your normal user account.</source>
          <target state="translated">エラー &lt;code&gt;Error: ENOENT, stat 'C:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm'&lt;/code&gt; on Windows 7は、&lt;a href=&quot;https://github.com/joyent/node/issues/8141&quot;&gt;joyent / node＃8141の&lt;/a&gt;結果であり、Windowsのノードインストーラーの問題です。回避策は、 &lt;code&gt;C:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm&lt;/code&gt; が存在し、通常のユーザーアカウントで書き込み可能であることを確認することです。</target>
        </trans-unit>
        <trans-unit id="4aa7842b1f3d8e363f930f607d9a31c83f43a934" translate="yes" xml:space="preserve">
          <source>The exact order of execution is as follows:</source>
          <target state="translated">正確な実行順序は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="fd16ca1fbd99ec13b56c9fd64463d34346e936ca" translate="yes" xml:space="preserve">
          <source>The file in the &quot;main&quot; field</source>
          <target state="translated">メイン」フィールドのファイル</target>
        </trans-unit>
        <trans-unit id="e8f6abbdd531ddeffd04878719ff326a060afe25" translate="yes" xml:space="preserve">
          <source>The filename &lt;em&gt;must&lt;/em&gt; use &lt;code&gt;.tar&lt;/code&gt;, &lt;code&gt;.tar.gz&lt;/code&gt;, or &lt;code&gt;.tgz&lt;/code&gt; as the extension.</source>
          <target state="translated">ファイル名に&lt;em&gt;は&lt;/em&gt;、拡張子として &lt;code&gt;.tar&lt;/code&gt; 、 &lt;code&gt;.tar.gz&lt;/code&gt; 、または &lt;code&gt;.tgz&lt;/code&gt; を使用する&lt;em&gt;必要があり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="766e6a00f7539dd0ea0f43ba04ef93f87420c82d" translate="yes" xml:space="preserve">
          <source>The following git environment variables are recognized by npm and will be added to the environment when running git:</source>
          <target state="translated">以下のgit環境変数はnpmで認識され、gitを実行すると環境に追加されます。</target>
        </trans-unit>
        <trans-unit id="ff4f7e12799fb6e3d2826c75d368f7981f853797" translate="yes" xml:space="preserve">
          <source>The following paths and files are never ignored, so adding them to &lt;code&gt;.npmignore&lt;/code&gt; is pointless:</source>
          <target state="translated">次のパスとファイルは無視されないため、 &lt;code&gt;.npmignore&lt;/code&gt; に追加しても意味がありません。</target>
        </trans-unit>
        <trans-unit id="904fda8b0fac02d5c794e3d3d0a3f22cd8ba9e5e" translate="yes" xml:space="preserve">
          <source>The following screen shot demonstrates these steps:</source>
          <target state="translated">以下のスクリーンショットは、これらの手順を示しています。</target>
        </trans-unit>
        <trans-unit id="f2ff9bb10a197eaf115fc5d0892ff8cf85e46c23" translate="yes" xml:space="preserve">
          <source>The following screen shot shows where the menu is if you want to explore the website, set up your profile, and get started right away:</source>
          <target state="translated">以下のスクリーンショットは、ウェブサイトを探索し、プロフィールを設定し、すぐに始めたい場合のメニューがどこにあるかを示しています。</target>
        </trans-unit>
        <trans-unit id="181cec331142b836f851c2fe0bd6dabc5627d4e3" translate="yes" xml:space="preserve">
          <source>The following shorthands are parsed on the command-line:</source>
          <target state="translated">以下の速記語はコマンドラインで解析されます。</target>
        </trans-unit>
        <trans-unit id="f90007f86324b0b0618dfe22db86ab74da79bd3a" translate="yes" xml:space="preserve">
          <source>The following table applies to customers who purchased &lt;a href=&quot;https://docs.npmjs.com/enterprise&quot;&gt;npm Enterprise&lt;/a&gt; after July 26, 2018.</source>
          <target state="translated">次の表は、2018年7月26日以降に&lt;a href=&quot;https://docs.npmjs.com/enterprise&quot;&gt;npmEnterprise&lt;/a&gt;を購入したお客様に適用されます。</target>
        </trans-unit>
        <trans-unit id="9c90b8ec2841e4127632b0669579e0d89b6f6dbe" translate="yes" xml:space="preserve">
          <source>The following table explains the token list.</source>
          <target state="translated">以下、トークンリストについて説明します。</target>
        </trans-unit>
        <trans-unit id="1ae8faa8eed22ae91503922e81ebc1473eed144c" translate="yes" xml:space="preserve">
          <source>The four relevant files are:</source>
          <target state="translated">関連するファイルは4つ。</target>
        </trans-unit>
        <trans-unit id="89d33250cb191fe59ca4071c90c9730501affba4" translate="yes" xml:space="preserve">
          <source>The group to use when running package scripts in global mode as the root user.</source>
          <target state="translated">グローバルモードでパッケージスクリプトをrootユーザとして実行する際に使用するグループです。</target>
        </trans-unit>
        <trans-unit id="f58b2dd5771fdbb7a93e2118b23439e865ce7189" translate="yes" xml:space="preserve">
          <source>The hook &lt;code&gt;id&lt;/code&gt; used by &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;rm&lt;/code&gt; are the IDs listed in &lt;code&gt;npm hook ls&lt;/code&gt; for that particular hook.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; および &lt;code&gt;rm&lt;/code&gt; で使用されるフック &lt;code&gt;id&lt;/code&gt; は、その特定のフックの &lt;code&gt;npm hook ls&lt;/code&gt; リストされているID です。</target>
        </trans-unit>
        <trans-unit id="f0c118a09758424652dfb8beed756a6049c7f33f" translate="yes" xml:space="preserve">
          <source>The host architecture is determined by &lt;code&gt;process.arch&lt;/code&gt;</source>
          <target state="translated">ホストアーキテクチャは、 &lt;code&gt;process.arch&lt;/code&gt; によって決定されます。</target>
        </trans-unit>
        <trans-unit id="c5eef749a5354a088676b173955f904711f925f4" translate="yes" xml:space="preserve">
          <source>The host operating system is determined by &lt;code&gt;process.platform&lt;/code&gt;</source>
          <target state="translated">ホストオペレーティングシステムは、 &lt;code&gt;process.platform&lt;/code&gt; によって決定されます。</target>
        </trans-unit>
        <trans-unit id="531917f9cffb5fdf890363f2887b8bb4db896d23" translate="yes" xml:space="preserve">
          <source>The init command is transformed to a corresponding &lt;code&gt;npx&lt;/code&gt; operation as follows:</source>
          <target state="translated">initコマンドは、次のように対応する &lt;code&gt;npx&lt;/code&gt; 操作に変換されます。</target>
        </trans-unit>
        <trans-unit id="1c46c6aa751d2f8dc0ff21f99a983917779ca3c8" translate="yes" xml:space="preserve">
          <source>The latest release of npm</source>
          <target state="translated">npmの最新リリース</target>
        </trans-unit>
        <trans-unit id="01a65c03e98ccb2a7a07a2c49b224785b39815dd" translate="yes" xml:space="preserve">
          <source>The list will avoid duplicated entries and will stack all packages that share the same type/url as a single entry. Given this nature the list is not going to have the same shape of the output from &lt;code&gt;npm ls&lt;/code&gt;.</source>
          <target state="translated">リストは重複したエントリを回避し、単一のエントリと同じタイプ/ URLを共有するすべてのパッケージをスタックします。この性質を考えると、リストは &lt;code&gt;npm ls&lt;/code&gt; からの出力と同じ形にはなりません。</target>
        </trans-unit>
        <trans-unit id="2cf60a2cb807364f6414e24fbace525e2fc0a7e0" translate="yes" xml:space="preserve">
          <source>The location of npm's cache directory. See &lt;a href=&quot;../commands/npm-cache&quot;&gt;&lt;code&gt;npm cache&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">npmのキャッシュディレクトリの場所。&lt;a href=&quot;../commands/npm-cache&quot;&gt; &lt;code&gt;npm cache&lt;/code&gt; &lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="890ef5293f552476f09b11cded6dde35f532fa07" translate="yes" xml:space="preserve">
          <source>The location of npm's cache directory. See &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">npmのキャッシュディレクトリの場所。 &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="caeef139e21b12e2c4540b30ddf767c19b368df1" translate="yes" xml:space="preserve">
          <source>The location of user-level configuration settings.</source>
          <target state="translated">ユーザーレベルの構成設定の場所。</target>
        </trans-unit>
        <trans-unit id="3044e5c0c82d60776d2b4958e57fb912069c184e" translate="yes" xml:space="preserve">
          <source>The location to install global items. If set on the command line, then it forces non-global commands to run in the specified folder.</source>
          <target state="translated">グローバルアイテムをインストールする場所。コマンドラインで設定した場合、グローバル以外のコマンドを指定したフォルダで強制的に実行させます。</target>
        </trans-unit>
        <trans-unit id="bbe3ff600e402dbb69ada9d6eee24ab25c624cc1" translate="yes" xml:space="preserve">
          <source>The main field is a module ID that is the primary entry point to your program. That is, if your package is named &lt;code&gt;foo&lt;/code&gt;, and a user installs it, and then does &lt;code&gt;require(&quot;foo&quot;)&lt;/code&gt;, then your main module's exports object will be returned.</source>
          <target state="translated">メインフィールドは、プログラムへの主要なエントリポイントであるモジュールIDです。つまり、パッケージの名前が &lt;code&gt;foo&lt;/code&gt; で、ユーザーがパッケージをインストールしてから &lt;code&gt;require(&quot;foo&quot;)&lt;/code&gt; を実行すると、メインモジュールのエクスポートオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="9b28b412c6ead8634bc49a9a0075fac8edf0ebf4" translate="yes" xml:space="preserve">
          <source>The maximum number of connections to use per origin (protocol/host/port combination). Passed to the &lt;code&gt;http&lt;/code&gt;&lt;code&gt;Agent&lt;/code&gt; used to make the request.</source>
          <target state="translated">オリジンごとに使用する接続の最大数（プロトコル/ホスト/ポートの組み合わせ）。リクエストの作成に使用される &lt;code&gt;http&lt;/code&gt; &lt;code&gt;Agent&lt;/code&gt; 渡されます。</target>
        </trans-unit>
        <trans-unit id="22cda19943230bada1fe3f4d7dd6ca1820ff4ee6" translate="yes" xml:space="preserve">
          <source>The maximum number of log files to store.</source>
          <target state="translated">保存するログファイルの最大数。</target>
        </trans-unit>
        <trans-unit id="7779767828629a8b1a1de7d18da1d1fd94dca69b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;.inc&lt;/code&gt; takes an additional &lt;code&gt;identifier&lt;/code&gt; string argument that will append the value of the string as a prerelease identifier:</source>
          <target state="translated">メソッド &lt;code&gt;.inc&lt;/code&gt; は、プレリリース識別子として文字列の値を追加する追加の &lt;code&gt;identifier&lt;/code&gt; 文字列引数を受け取ります。</target>
        </trans-unit>
        <trans-unit id="72dbe0179720463ea366edb7fc6fd2e4d4e83863" translate="yes" xml:space="preserve">
          <source>The minimum level of vulnerability for &lt;code&gt;npm audit&lt;/code&gt; to exit with a non-zero exit code.</source>
          <target state="translated">&lt;code&gt;npm audit&lt;/code&gt; がゼロ以外の終了コードで終了する脆弱性の最小レベル。</target>
        </trans-unit>
        <trans-unit id="a7f9de7cda37ca1d6af45767e0633cff722ccbf3" translate="yes" xml:space="preserve">
          <source>The module that the package with the vulnerability depends on.</source>
          <target state="translated">脆弱性を持つパッケージが依存しているモジュール。</target>
        </trans-unit>
        <trans-unit id="d37b5e6f15d750ad084aa1839076c27ec3e4621d" translate="yes" xml:space="preserve">
          <source>The module tree described by the package lock is reproduced. This means reproducing the structure described in the file, using the specific files referenced in &quot;resolved&quot; if available, falling back to normal package resolution using &quot;version&quot; if one isn't.</source>
          <target state="translated">パッケージロックで記述されたモジュールツリーを再現します。これは、ファイルに記述されている構造を再現することを意味し、&quot;resolve&quot; で参照されている特定のファイルがあればそれを使用し、なければ &quot;version&quot; を使用して通常のパッケージの解像度にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="ced44275a08def978e9a777b87adbda8e22804d3" translate="yes" xml:space="preserve">
          <source>The name can't start with a dot or an underscore.</source>
          <target state="translated">名前の先頭にドットやアンダースコアを付けることはできません。</target>
        </trans-unit>
        <trans-unit id="8d4be5f3ffdb929c39981c59617ddfed24fbf174" translate="yes" xml:space="preserve">
          <source>The name ends up being part of a URL, an argument on the command line, and a folder name. Therefore, the name can't contain any non-URL-safe characters.</source>
          <target state="translated">名前は、URL、コマンドラインの引数、フォルダ名の一部になります。したがって、名前にはURLセーフでない文字を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="924085891a487ba1e84e638855e4e74d6cb6e644" translate="yes" xml:space="preserve">
          <source>The name is what your thing is called.</source>
          <target state="translated">あなたのものの名前は何と呼ばれているのか。</target>
        </trans-unit>
        <trans-unit id="aaa63814afced2c494fcc32c84aea3356418cd95" translate="yes" xml:space="preserve">
          <source>The name must be less than or equal to 214 characters. This includes the scope for scoped packages.</source>
          <target state="translated">名前は214文字以下でなければなりません。これには、スコープされたパッケージのスコープも含まれます。</target>
        </trans-unit>
        <trans-unit id="225b224747a212e99da2345d52c5b9bc50f10558" translate="yes" xml:space="preserve">
          <source>The name of the package that contains the vulnerability.</source>
          <target state="translated">脆弱性を含むパッケージの名前。</target>
        </trans-unit>
        <trans-unit id="d203e38f716adcf1e693a9d10569dc0c3088a945" translate="yes" xml:space="preserve">
          <source>The name of the package this is a package-lock for. This must match what's in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">これがパッケージロックの対象となるパッケージの名前。これは &lt;code&gt;package.json&lt;/code&gt; の内容と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="e79d3f28fa5fd1c774388ab79c0b8dacc3c77bf5" translate="yes" xml:space="preserve">
          <source>The name will probably be passed as an argument to require(), so it should be something short, but also reasonably descriptive.</source>
          <target state="translated">名前はおそらく require()の引数として渡されるでしょうから、短いものであるべきですが、それなりに説明的なものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="d5e93d5f5110590a70e44b0fe5944a0473ec3ba1" translate="yes" xml:space="preserve">
          <source>The names of scoped packages can begin with a dot or an underscore. This is not permitted without a scope.</source>
          <target state="translated">スコープされたパッケージの名前は、ドットまたはアンダースコアで始めることができます。これはスコープなしでは許可されません。</target>
        </trans-unit>
        <trans-unit id="ac151ac06bbe0e6d8b52217c5c1fe1df05f721db" translate="yes" xml:space="preserve">
          <source>The next chapter explains how to install npm. After you install npm, you will use a terminal console to download packages. This is explained in later chapters.</source>
          <target state="translated">次の章では、npmのインストール方法を説明します。npmをインストールしたら、ターミナルコンソールを使ってパッケージをダウンロードします。これについては後の章で説明します。</target>
        </trans-unit>
        <trans-unit id="3913a9334c1ca67655577d717f454cf9d690340a" translate="yes" xml:space="preserve">
          <source>The next release of npm</source>
          <target state="translated">npmの次のリリースは</target>
        </trans-unit>
        <trans-unit id="8d06421bc5c51e19040e6aa2d0eb1f6ae3904d5d" translate="yes" xml:space="preserve">
          <source>The node version to use when checking a package's &lt;code&gt;engines&lt;/code&gt; map.</source>
          <target state="translated">パッケージの &lt;code&gt;engines&lt;/code&gt; マップをチェックするときに使用するノードバージョン。</target>
        </trans-unit>
        <trans-unit id="8a27614d0e88de1555ad5c78811af4d9417c2341" translate="yes" xml:space="preserve">
          <source>The non-reversible identifiers are a sha256 of a session-specific UUID and the value being replaced, ensuring a consistent value within the payload that is different between runs.</source>
          <target state="translated">非可逆的な識別子は、セッション固有のUUIDと置換される値のsha256であり、実行間で異なるペイロード内の一貫した値を保証します。</target>
        </trans-unit>
        <trans-unit id="64e706811b288058ddc783412e0442147032635e" translate="yes" xml:space="preserve">
          <source>The npm CLI automatically generates an access token for you when you run &lt;code&gt;npm login&lt;/code&gt;. You can also create an access token to give other tools (such as continuous integration testing environments) access to your npm packages. For example, GitHub Actions provides the ability to store &lt;a href=&quot;https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets&quot;&gt;secrets&lt;/a&gt;, like access tokens, that you can then use to authenticate. When your workflow runs, it will be able to complete npm tasks as you, including installing private packages you can access.</source>
          <target state="translated">&lt;code&gt;npm login&lt;/code&gt; を実行すると、npmCLIが自動的にアクセストークンを生成します。アクセストークンを作成して、他のツール（継続的インテグレーションテスト環境など）にnpmパッケージへのアクセスを許可することもできます。たとえば、GitHub Actionsは、アクセストークンなど、認証に使用できる&lt;a href=&quot;https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets&quot;&gt;シークレット&lt;/a&gt;を保存する機能を提供します。ワークフローが実行されると、アクセス可能なプライベートパッケージのインストールなど、npmタスクを実行できるようになります。</target>
        </trans-unit>
        <trans-unit id="a2a5a195eb441aec870786edfe0275445f3fef6c" translate="yes" xml:space="preserve">
          <source>The npm cache exists, and the package tarballs within it aren't corrupt.</source>
          <target state="translated">npm キャッシュは存在し、その中の tarball パッケージは壊れていません。</target>
        </trans-unit>
        <trans-unit id="d207a6d4c5b23b1e12686f188e05bd2f772db9e2" translate="yes" xml:space="preserve">
          <source>The npm cache is strictly a cache: it should not be relied upon as a persistent and reliable data store for package data. npm makes no guarantee that a previously-cached piece of data will be available later, and will automatically delete corrupted contents. The primary guarantee that the cache makes is that, if it does return data, that data will be exactly the data that was inserted.</source>
          <target state="translated">npm のキャッシュはあくまでもキャッシュであり、パッケージデータの永続的で信頼性の高いデータストアとして信頼すべきものではありません。 npm は、以前にキャッシュされたデータが後で利用可能になることを保証せず、破損したコンテンツを自動的に削除します。キャッシュが主に保証するのは、もしデータを返したとしても、そのデータが挿入されたデータと正確に一致するということです。</target>
        </trans-unit>
        <trans-unit id="f631bb7842bb091386aa5838506e3cb4886f3af4" translate="yes" xml:space="preserve">
          <source>The npm command line interface (CLI) is released on a regular cadence. We recommend installing the release that supports your workflow:</source>
          <target state="translated">npm コマンドラインインターフェイス (CLI)は定期的にリリースされています。ワークフローをサポートするリリースをインストールすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="9f5649a91a9e2ba997d6cda52a9938fb165b3c3f" translate="yes" xml:space="preserve">
          <source>The npm config files</source>
          <target state="translated">npm の設定ファイル</target>
        </trans-unit>
        <trans-unit id="01de449c9653f0b31fab2e417ee19b598245d82b" translate="yes" xml:space="preserve">
          <source>The npm config files.</source>
          <target state="translated">npmの設定ファイルです。</target>
        </trans-unit>
        <trans-unit id="58bbb384b8ca9e5ea8e662a46e40119b1a75f875" translate="yes" xml:space="preserve">
          <source>The npm public registry is powered by a CouchDB database, of which there is a public mirror at &lt;a href=&quot;https://skimdb.npmjs.com/registry&quot;&gt;https://skimdb.npmjs.com/registry&lt;/a&gt;. The code for the couchapp is available at &lt;a href=&quot;https://github.com/npm/npm-registry-couchapp&quot;&gt;https://github.com/npm/npm-registry-couchapp&lt;/a&gt;.</source>
          <target state="translated">npmパブリックレジストリはCouchDBデータベースを利用しており、&lt;a href=&quot;https://skimdb.npmjs.com/registry&quot;&gt;https：//skimdb.npmjs.com/registryに&lt;/a&gt;パブリックミラーがあります。couchappのコードは、&lt;a href=&quot;https://github.com/npm/npm-registry-couchapp&quot;&gt;https：//github.com/npm/npm-registry-couchapp&lt;/a&gt;で入手できます。</target>
        </trans-unit>
        <trans-unit id="da50bdab03df0628d24d8b5b789f14a4f3251d15" translate="yes" xml:space="preserve">
          <source>The npm registry contains packages, many of which are also Node modules, or contain Node modules. Read on to understand how they differ and how they interact.</source>
          <target state="translated">npm レジストリにはパッケージが含まれており、その多くは Node モジュールであったり、Node モジュールを含んでいます。これらのパッケージの違いと相互作用を理解するために読み進めてください。</target>
        </trans-unit>
        <trans-unit id="ddbeb18d24361c229e34e04f3236d666c9ffdb2a" translate="yes" xml:space="preserve">
          <source>The npm registry does not try to correlate the information in these headers with any authenticated accounts that may be used in the same requests.</source>
          <target state="translated">npm レジストリは、これらのヘッダの情報と、同じリクエストで使用される可能性のある認証済みアカウントとの関連付けを試みません。</target>
        </trans-unit>
        <trans-unit id="c017372e76b295e125fe30feb86acd2c110d08e8" translate="yes" xml:space="preserve">
          <source>The number of ms before cache folder lockfiles are considered stale.</source>
          <target state="translated">キャッシュフォルダのロックファイルが古いとみなされるまでのミリ秒数。</target>
        </trans-unit>
        <trans-unit id="f256d0b310ccacfeda313bbb54a752748c950be5" translate="yes" xml:space="preserve">
          <source>The official public npm registry is at &lt;a href=&quot;https://registry.npmjs.org/&quot;&gt;https://registry.npmjs.org/&lt;/a&gt;. It is powered by a CouchDB database, of which there is a public mirror at &lt;a href=&quot;https://skimdb.npmjs.com/registry&quot;&gt;https://skimdb.npmjs.com/registry&lt;/a&gt;. The code for the couchapp is available at &lt;a href=&quot;https://github.com/npm/npm-registry-couchapp&quot;&gt;https://github.com/npm/npm-registry-couchapp&lt;/a&gt;.</source>
          <target state="translated">公式のパブリックnpmレジストリは&lt;a href=&quot;https://registry.npmjs.org/&quot;&gt;https://registry.npmjs.org/にあります&lt;/a&gt;。 CouchDBデータベースを利用しており、&lt;a href=&quot;https://skimdb.npmjs.com/registry&quot;&gt;https：//skimdb.npmjs.com/registryに&lt;/a&gt;公開ミラーがあります。 couchappのコードは&lt;a href=&quot;https://github.com/npm/npm-registry-couchapp&quot;&gt;https://github.com/npm/npm-registry-couchapp&lt;/a&gt;で入手できます。</target>
        </trans-unit>
        <trans-unit id="fbe36bafd9f7a1d5c3d02b8f2f8f5968d4f146bb" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;files&lt;/code&gt; field is an array of file patterns that describes the entries to be included when your package is installed as a dependency. File patterns follow a similar syntax to &lt;code&gt;.gitignore&lt;/code&gt;, but reversed: including a file, directory, or glob pattern (&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**/*&lt;/code&gt;, and such) will make it so that file is included in the tarball when it's packed. Omitting the field will make it default to &lt;code&gt;[&quot;*&quot;]&lt;/code&gt;, which means it will include all files.</source>
          <target state="translated">オプションの &lt;code&gt;files&lt;/code&gt; フィールドは、パッケージが依存関係としてインストールされるときに含まれるエントリを記述するファイルパターンの配列です。ファイルパターンは &lt;code&gt;.gitignore&lt;/code&gt; と同様の構文に従いますが、逆になります。ファイル、ディレクトリ、またはグロブパターン（ &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;**/*&lt;/code&gt; など）を含めると、ファイルがパックされたときにtarballに含まれるようになります。フィールドを省略すると、デフォルトで &lt;code&gt;[&quot;*&quot;]&lt;/code&gt; になります。つまり、すべてのファイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="c9bd0c5b12efbecf59f18b7ecedda74ffb026ad5" translate="yes" xml:space="preserve">
          <source>The package contents should reside in a subfolder inside the tarball (usually it is called &lt;code&gt;package/&lt;/code&gt;). npm strips one directory layer when installing the package (an equivalent of &lt;code&gt;tar x --strip-components=1&lt;/code&gt; is run).</source>
          <target state="translated">パッケージのコンテンツは、tarball内のサブフォルダーに常駐する必要があります（通常、 &lt;code&gt;package/&lt;/code&gt; と呼ばれます）。npmは、パッケージのインストール時に1つのディレクトリレイヤーを &lt;code&gt;tar x --strip-components=1&lt;/code&gt; ます（tar x --strip-components = 1に相当するものが実行されます）。</target>
        </trans-unit>
        <trans-unit id="c7a1c761f02818d99cf5b00ce8a09e149e7e9f96" translate="yes" xml:space="preserve">
          <source>The package is not already installed globally, or</source>
          <target state="translated">パッケージがグローバルにインストールされていないか</target>
        </trans-unit>
        <trans-unit id="7da3f673b988e46b03dcc1c1556673e42a65a4df" translate="yes" xml:space="preserve">
          <source>The package must contain a &lt;code&gt;package.json&lt;/code&gt; file with &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; properties.</source>
          <target state="translated">パッケージには、 &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;version&lt;/code&gt; プロパティを含む &lt;code&gt;package.json&lt;/code&gt; ファイルが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="83c1fccab5547bc8696ed20cdd59d2ae2b5a6c47" translate="yes" xml:space="preserve">
          <source>The package name can be optionally prefixed with a scope. See &lt;a href=&quot;../using-npm/scope&quot;&gt;&lt;code&gt;scope&lt;/code&gt;&lt;/a&gt;. The scope must be preceded by an @-symbol and followed by a slash.</source>
          <target state="translated">パッケージ名の前にスコープを付けることができます。&lt;a href=&quot;../using-npm/scope&quot;&gt; &lt;code&gt;scope&lt;/code&gt; &lt;/a&gt;参照してください。スコープの前には@記号を付け、その後にスラッシュを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="0835e7c9ad6b78e1354ef995a30ca6441931e6e2" translate="yes" xml:space="preserve">
          <source>The package name can be optionally prefixed with a scope. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;. The scope must be preceded by an @-symbol and followed by a slash.</source>
          <target state="translated">オプションで、パッケージ名の前にスコープを付けることができます。 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; を参照してください。スコープの前には@記号を付け、その後にスラッシュを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="c5c795aaf0b5e2dbbcc0050ccd39aca69b65d032" translate="yes" xml:space="preserve">
          <source>The package owner and logged-in members of the Enterprise registry who have been granted read access to the package</source>
          <target state="translated">パッケージの所有者と Enterprise レジストリにログインしているメンバーで、パッケージへの読み取りアクセスを許可されているもの</target>
        </trans-unit>
        <trans-unit id="f14fbcd2a3350836bdedd5c2cb2f40148b5979fb" translate="yes" xml:space="preserve">
          <source>The package owner and logged-in members of the Enterprise registry who have been granted read and write access to the package</source>
          <target state="translated">パッケージの所有者と Enterprise レジストリにログインしているメンバーで、パッケージへの読み書きアクセスを許可されています。</target>
        </trans-unit>
        <trans-unit id="b12b900a0c4dc2fda344555a3812ead811893a89" translate="yes" xml:space="preserve">
          <source>The package owner and users who have been granted read access to the package</source>
          <target state="translated">パッケージの所有者と、パッケージへの読み取りアクセスを許可されているユーザー</target>
        </trans-unit>
        <trans-unit id="223ed84af6694afc6879b1f2c16005cd4b666120" translate="yes" xml:space="preserve">
          <source>The package owner and users who have been granted read and write access to the package</source>
          <target state="translated">パッケージの所有者と、パッケージへの読み書きアクセスを許可されているユーザー</target>
        </trans-unit>
        <trans-unit id="37ceff0dc9931da7b49be36503ae665194c14c21" translate="yes" xml:space="preserve">
          <source>The package will be removed from listings on the site within a few minutes of making it private.</source>
          <target state="translated">パッケージは非公開にしてから数分でサイトのリスティングから削除されます。</target>
        </trans-unit>
        <trans-unit id="cd8d1bccb23f58bbd972fba7b3d5c6f77d216adc" translate="yes" xml:space="preserve">
          <source>The package.json &quot;config&quot; keys are overwritten in the environment if there is a config param of &lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt;. For example, if the package.json has this:</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt; パラメーターがある場合、package.json &quot;config&quot;キーは環境で上書きされます。たとえば、package.jsonに次のような場合：</target>
        </trans-unit>
        <trans-unit id="04334ee9c160b44e1dc91f20944c2f1803c42b1d" translate="yes" xml:space="preserve">
          <source>The package.json File</source>
          <target state="translated">package.jsonファイル</target>
        </trans-unit>
        <trans-unit id="b697535570b02d55c6572fa72a1b5be12ba3839c" translate="yes" xml:space="preserve">
          <source>The package.json fields are tacked onto the &lt;code&gt;npm_package_&lt;/code&gt; prefix. So, for instance, if you had &lt;code&gt;{&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;}&lt;/code&gt; in your package.json file, then your package scripts would have the &lt;code&gt;npm_package_name&lt;/code&gt; environment variable set to &quot;foo&quot;, and the &lt;code&gt;npm_package_version&lt;/code&gt; set to &quot;1.2.5&quot;. You can access these variables in your code with &lt;code&gt;process.env.npm_package_name&lt;/code&gt; and &lt;code&gt;process.env.npm_package_version&lt;/code&gt;, and so on for other fields.</source>
          <target state="translated">package.jsonフィールドは &lt;code&gt;npm_package_&lt;/code&gt; プレフィックスに追加されます。したがって、たとえば、package.jsonファイルに &lt;code&gt;{&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;}&lt;/code&gt; がある場合、パッケージスクリプトの &lt;code&gt;npm_package_name&lt;/code&gt; 環境変数は &quot;foo&quot;に設定されます。そして &lt;code&gt;npm_package_version&lt;/code&gt; は「1.2.5」に設定します。他のフィールドについては、コードで &lt;code&gt;process.env.npm_package_name&lt;/code&gt; および &lt;code&gt;process.env.npm_package_version&lt;/code&gt; などを使用して、これらの変数にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="802f4781b985eef7776f1c283e1080abda840c8b" translate="yes" xml:space="preserve">
          <source>The path to the code that contains the vulnerability.</source>
          <target state="translated">脆弱性を含むコードへのパス。</target>
        </trans-unit>
        <trans-unit id="1e620ff2fae333f1325a2521f35f69cb53a2f3a6" translate="yes" xml:space="preserve">
          <source>The presence of a package lock changes the installation behavior such that:</source>
          <target state="translated">パッケージロックがあると、インストールの動作が変わります。</target>
        </trans-unit>
        <trans-unit id="1ea7dd04ff070eb43aa2884edd3481a5ee1b9c1f" translate="yes" xml:space="preserve">
          <source>The primary npm registry, &lt;code&gt;registry.npmjs.com&lt;/code&gt;, or another service that uses the registry API, is available.</source>
          <target state="translated">プライマリnpmレジストリ、 &lt;code&gt;registry.npmjs.com&lt;/code&gt; 、またはレジストリAPIを使用する別のサービスが利用可能です。</target>
        </trans-unit>
        <trans-unit id="707f3c058524a5a65c8ca2b32b8db9b2e0105259" translate="yes" xml:space="preserve">
          <source>The program to use to view help content.</source>
          <target state="translated">ヘルプコンテンツを表示するために使用するプログラムです。</target>
        </trans-unit>
        <trans-unit id="e6c2f65f573cd49594bbeaf9f38f0153e80a7e9e" translate="yes" xml:space="preserve">
          <source>The project &lt;strong&gt;must&lt;/strong&gt; have an existing &lt;code&gt;package-lock.json&lt;/code&gt; or &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;.</source>
          <target state="translated">このプロジェクトは、&lt;strong&gt;必要があり&lt;/strong&gt;、既存の持っている &lt;code&gt;package-lock.json&lt;/code&gt; または &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7698c19f40e295691edefd5012be000a9930f7f2" translate="yes" xml:space="preserve">
          <source>The public npm registry is a database of JavaScript packages, each comprised of software and metadata. Open source developers and developers at companies use the npm registry to contribute packages to the entire community or members of their organizations, and download packages to use in their own projects.</source>
          <target state="translated">公開されている npm レジストリは、ソフトウェアとメタデータで構成された JavaScript パッケージのデータベースです。オープンソースの開発者や企業の開発者は、npm レジストリを利用して、コミュニティ全体や組織のメンバーにパッケージを投稿したり、自分のプロジェクトで使用するためのパッケージをダウンロードしたりしています。</target>
        </trans-unit>
        <trans-unit id="b06b4c078fa7c2dceae074827cec8432c8de5cdb" translate="yes" xml:space="preserve">
          <source>The purpose for this behavior is twofold. First, prerelease versions frequently are updated very quickly, and contain many breaking changes that are (by the author's design) not yet fit for public consumption. Therefore, by default, they are excluded from range matching semantics.</source>
          <target state="translated">この動作の目的は2つあります。第一に、プレリリース版は頻繁に非常に迅速に更新され、(作者の設計によって)まだ一般消費には適していない多くの破壊的な変更が含まれています。そのため、デフォルトでは、それらは範囲マッチングのセマンティクスから除外されます。</target>
        </trans-unit>
        <trans-unit id="325c5946ddd62d8878a09f28825bd3c599cbe68c" translate="yes" xml:space="preserve">
          <source>The range &lt;code&gt;1.2.7 || &amp;gt;=1.2.9 &amp;lt;2.0.0&lt;/code&gt; would match the versions &lt;code&gt;1.2.7&lt;/code&gt;, &lt;code&gt;1.2.9&lt;/code&gt;, and &lt;code&gt;1.4.6&lt;/code&gt;, but not the versions &lt;code&gt;1.2.8&lt;/code&gt; or &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">範囲 &lt;code&gt;1.2.7 || &amp;gt;=1.2.9 &amp;lt;2.0.0&lt;/code&gt; バージョン一致し &lt;code&gt;1.2.7&lt;/code&gt; 、 &lt;code&gt;1.2.9&lt;/code&gt; および &lt;code&gt;1.4.6&lt;/code&gt; はなく、バージョン &lt;code&gt;1.2.8&lt;/code&gt; または &lt;code&gt;2.0.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be2f49fab5b3d5f5fb56dec08d654fe83582f26d" translate="yes" xml:space="preserve">
          <source>The readme file is created by the package developer. If done well, it explains the purpose of the package, and how to use it.</source>
          <target state="translated">readme ファイルはパッケージ開発者によって作成されます。うまくいけば、パッケージの目的や使い方を説明してくれます。</target>
        </trans-unit>
        <trans-unit id="7e949b5c0cab13fc1b44fb683c8942d1ea6a5616" translate="yes" xml:space="preserve">
          <source>The recommended use-case for &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; is applications deployed through the publishing process on the registry: for example, daemons and command-line tools intended as global installs or &lt;code&gt;devDependencies&lt;/code&gt;. It's strongly discouraged for library authors to publish this file, since that would prevent end users from having control over transitive dependency updates.</source>
          <target state="translated">&lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; の推奨されるユースケースは、レジストリの公開プロセスを通じてデプロイされたアプリケーションです。たとえば、グローバルインストールまたは &lt;code&gt;devDependencies&lt;/code&gt; を目的としたデーモンやコマンドラインツールです。エンドユーザーが推移的な依存関係の更新を制御できないため、ライブラリの作成者がこのファイルを公開することは強くお勧めしません。</target>
        </trans-unit>
        <trans-unit id="1e2413acac0a2b86aa89824837e669a7eede9735" translate="yes" xml:space="preserve">
          <source>The recovery procedure is explained below.</source>
          <target state="translated">以下、回復の手順を説明します。</target>
        </trans-unit>
        <trans-unit id="15e5ceb6b3b7d0f7bb87b647e0135a27ea1c6680" translate="yes" xml:space="preserve">
          <source>The registry URL used is determined by the scope of the package (see &lt;a href=&quot;scope&quot;&gt;&lt;code&gt;scope&lt;/code&gt;&lt;/a&gt;. If no scope is specified, the default registry is used, which is supplied by the &lt;code&gt;registry&lt;/code&gt; config parameter. See &lt;a href=&quot;../commands/npm-config&quot;&gt;&lt;code&gt;npm config&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../configuring-npm/npmrc&quot;&gt;&lt;code&gt;npmrc&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;config&quot;&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt; for more on managing npm's configuration.</source>
          <target state="translated">URLが使用されるレジストリは、パッケージの範囲によって決定された（参照&lt;a href=&quot;scope&quot;&gt; &lt;code&gt;scope&lt;/code&gt; &lt;/a&gt;。スコープが指定されていない場合、デフォルトのレジストリを使用した、によって供給され &lt;code&gt;registry&lt;/code&gt; 設定パラメータ。を参照してください。&lt;a href=&quot;../commands/npm-config&quot;&gt; &lt;code&gt;npm config&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../configuring-npm/npmrc&quot;&gt; &lt;code&gt;npmrc&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;config&quot;&gt; &lt;code&gt;config&lt;/code&gt; &lt;/a&gt;よりNPMの管理のため構成。</target>
        </trans-unit>
        <trans-unit id="0096058edfb5a1e4a18f19b29c58e0e55033d9ce" translate="yes" xml:space="preserve">
          <source>The registry URL used is determined by the scope of the package (see &lt;code&gt;&lt;a href=&quot;scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;). If no scope is specified, the default registry is used, which is supplied by the &lt;code&gt;registry&lt;/code&gt; config parameter. See &lt;code&gt;&lt;a href=&quot;../cli/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for more on managing npm's configuration.</source>
          <target state="translated">使用されるレジストリURLは、パッケージのスコープによって決定されます（ &lt;code&gt;&lt;a href=&quot;scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; を参照）。スコープが指定されていない場合、デフォルトのレジストリーが使用されます。これは、 &lt;code&gt;registry&lt;/code&gt; パラメーターによって提供されます。npmの構成の管理の詳細については、 &lt;code&gt;&lt;a href=&quot;../cli/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a3939408bbfae593730dd72d20cffb52684e34a1" translate="yes" xml:space="preserve">
          <source>The registry you installed from is no longer available, or allows mutation of versions (unlike the primary npm registry), and a different version of a package exists under the same version number now.</source>
          <target state="translated">インストール元のレジストリが利用できなくなったか、バージョンの変異を許可している (プライマリの npm レジストリとは異なります)ため、現在は異なるバージョンのパッケージが同じバージョン番号の下に存在しています。</target>
        </trans-unit>
        <trans-unit id="559e5c229b145c643f469b3ce510d7341ca8cafe" translate="yes" xml:space="preserve">
          <source>The registry you want to send cli metrics to if &lt;code&gt;send-metrics&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;send-metrics&lt;/code&gt; がtrueの場合に、cliメトリックを送信するレジストリ。</target>
        </trans-unit>
        <trans-unit id="666df3062df256cef99167f2b17611c095d94c85" translate="yes" xml:space="preserve">
          <source>The root cache folder.</source>
          <target state="translated">ルートキャッシュフォルダ。</target>
        </trans-unit>
        <trans-unit id="ed9a2781d98bba491623fb04817b10f26ccb5faa" translate="yes" xml:space="preserve">
          <source>The scope is optional and follows the usual rules for &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">スコープはオプションであり、 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; の通常のルールに従います。</target>
        </trans-unit>
        <trans-unit id="0e6aa8591762c7a597f8099ea3c554f10effabf4" translate="yes" xml:space="preserve">
          <source>The second line is the equivalent of doing:</source>
          <target state="translated">2行目は「する」ことに相当します。</target>
        </trans-unit>
        <trans-unit id="60a2a840ccc50f59dd9c59ef8b0aee3c9287767f" translate="yes" xml:space="preserve">
          <source>The semantic version range that describes which versions contain a fix for the vulnerability.</source>
          <target state="translated">どのバージョンに脆弱性の修正が含まれているかを記述した意味的なバージョン範囲です。</target>
        </trans-unit>
        <trans-unit id="40aef1b29a8ede5e3712dfc2e9d65c2c31bc1044" translate="yes" xml:space="preserve">
          <source>The semantic versioner for npm</source>
          <target state="translated">npm 用のセマンティックバージョナー</target>
        </trans-unit>
        <trans-unit id="1b4b668b40c2e51fa515ec5287c49bbc597981a9" translate="yes" xml:space="preserve">
          <source>The semantic versioner for npm.</source>
          <target state="translated">npm 用のセマンティックバージョナー。</target>
        </trans-unit>
        <trans-unit id="fbe530a06042228d2c8a0cb5856ee7abaad61c18" translate="yes" xml:space="preserve">
          <source>The severity of the vulnerability, determined by the impact and exploitability of the vulnerability in its most common use case.</source>
          <target state="translated">脆弱性の深刻度は、最も一般的なユースケースにおける脆弱性の影響度と悪用可能性によって決定されます。</target>
        </trans-unit>
        <trans-unit id="f5097eaac6451577b3a4a3bbda94587cc8e99adb" translate="yes" xml:space="preserve">
          <source>The shared secret will be sent along to the URL endpoint so you can verify the request came from your own configured hook.</source>
          <target state="translated">共有されたシークレットは URL エンドポイントに送られるので、リクエストが自分の設定したフックから来たことを確認できます。</target>
        </trans-unit>
        <trans-unit id="30a7ebf312f4ceb49f4e7fab5eb3641fe7aaf004" translate="yes" xml:space="preserve">
          <source>The shell to run for the &lt;code&gt;npm explore&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;npm explore&lt;/code&gt; コマンドで実行するシェル。</target>
        </trans-unit>
        <trans-unit id="76c1c67027051beb641c45fe3e8fab5867b2a449" translate="yes" xml:space="preserve">
          <source>The shell to use for scripts run with the &lt;code&gt;npm run&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;npm run&lt;/code&gt; コマンドで実行されるスクリプトに使用するシェル。</target>
        </trans-unit>
        <trans-unit id="a9a2f29747cf28fbd7beb5fe162efdb801fcb2fd" translate="yes" xml:space="preserve">
          <source>The simplest way to avoid semver problems with tags is to use tags that do not begin with a number or the letter &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">タグに関するいくつかの問題を回避する最も簡単な方法は、数字または文字 &lt;code&gt;v&lt;/code&gt; で始まらないタグ​​を使用することです。</target>
        </trans-unit>
        <trans-unit id="40cc24f9b907ce8f1c11334be85e728ce3530d85" translate="yes" xml:space="preserve">
          <source>The steps for logging in to your company's npm Enterprise registry will depend how you &lt;a href=&quot;configuring-your-registry-settings-as-an-npm-enterprise-user&quot;&gt;configured your npm registry settings&lt;/a&gt;.</source>
          <target state="translated">会社のnpmEnterpriseレジストリにログインする手順は&lt;a href=&quot;configuring-your-registry-settings-as-an-npm-enterprise-user&quot;&gt;、npmレジストリ設定を&lt;/a&gt;どのように構成したかによって異なります。</target>
        </trans-unit>
        <trans-unit id="a561a9ddcba2426edc04e285887cac38cbc9daed" translate="yes" xml:space="preserve">
          <source>The string that starts all the debugging log output.</source>
          <target state="translated">すべてのデバッグログ出力を開始する文字列。</target>
        </trans-unit>
        <trans-unit id="f66d25750206f6ec2e1aa2db778f68e14f901519" translate="yes" xml:space="preserve">
          <source>The super admin is the only person who can add users to the org because it impacts the monthly bill. The super admin will use the website to manage membership. Every org has a &lt;code&gt;developers&lt;/code&gt; team that all users are automatically added to.</source>
          <target state="translated">特権管理者は、毎月の請求に影響するため、組織にユーザーを追加できる唯一の人です。特権管理者は、ウェブサイトを使用してメンバーシップを管理します。すべての組織には、すべてのユーザーが自動的に追加される &lt;code&gt;developers&lt;/code&gt; チームがあります。</target>
        </trans-unit>
        <trans-unit id="f17731aa104655b3c9c267b933a3fc18b2eb8b9a" translate="yes" xml:space="preserve">
          <source>The synopsis above loads the completions into your current shell. Adding it to your ~/.bashrc or ~/.zshrc will make the completions available everywhere:</source>
          <target state="translated">上のシノプシスは、現在のシェルに補完をロードします。これを ~/.bashrc や ~/.zshrc に追加すると、どこでも補完が利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="1ead263200558cf5afddb7e97f5d0eb408f1639b" translate="yes" xml:space="preserve">
          <source>The team admin is the person who manages team creation, team membership, and package access for teams. The team admin grants package access to teams, not individuals.</source>
          <target state="translated">チーム管理者は、チームの作成、チームメンバーシップ、チームのパッケージアクセスを管理する人です。チーム管理者は、個人ではなくチームにパッケージアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="436a611a2e0e43ff49c3793780e640475430f423" translate="yes" xml:space="preserve">
          <source>The token is not derived from your password, but changing your password will invalidate all tokens. The token will be valid until the password is changed. You can also invalidate a single token by logging out on a machine that is logged in with that token.</source>
          <target state="translated">トークンはパスワードから派生したものではありませんが、パスワードを変更するとすべてのトークンが無効になります。トークンは、パスワードが変更されるまで有効です。また、そのトークンでログインしているマシンでログアウトすることで、1つのトークンを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="7209e1ab85f12bd0f869231592507b455056ba97" translate="yes" xml:space="preserve">
          <source>The tree is walked and any missing dependencies are installed in the usual fashion.</source>
          <target state="translated">ツリーが歩かれ、不足している依存関係は通常の方法でインストールされます。</target>
        </trans-unit>
        <trans-unit id="901a4e762caa7812f1008ebe29b6e595ce51ff59" translate="yes" xml:space="preserve">
          <source>The tree shown is the logical dependency tree, based on package dependencies, not the physical layout of your node_modules folder.</source>
          <target state="translated">表示されているツリーは、パッケージの依存関係に基づく論理的な依存関係ツリーであり、node_modulesフォルダの物理的なレイアウトではありません。</target>
        </trans-unit>
        <trans-unit id="91d481d638cade3bfeeeda3e13f6433f710db02a" translate="yes" xml:space="preserve">
          <source>The url to the project homepage.</source>
          <target state="translated">プロジェクトのホームページへのURL。</target>
        </trans-unit>
        <trans-unit id="3929799d0a19d05c1e8a3aa08955b9b5f8c01a19" translate="yes" xml:space="preserve">
          <source>The url to your project's issue tracker and / or the email address to which issues should be reported. These are helpful for people who encounter issues with your package.</source>
          <target state="translated">あなたのプロジェクトのイシュートラッカーへのURL、および/または問題が報告されるべき電子メールのアドレスです。これらは、あなたのパッケージで問題が発生したときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="34b0b3dc9483237c15e23719e8cdd7b65870f304" translate="yes" xml:space="preserve">
          <source>The username, password, and email are read in from prompts.</source>
          <target state="translated">ユーザー名、パスワード、メールはプロンプトから読み込まれます。</target>
        </trans-unit>
        <trans-unit id="542f55a20577b1bd7f2e7b5677fac1af8a89ef15" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's email.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; は、デフォルトでパッケージ作成者の電子メールに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9ddb785f8e73da89fbc62ae3da9bb4d53cf27641" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's homepage.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; は、デフォルトでパッケージ作成者のホームページに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="12f69f86bcde9d4c15acc7fcd919187887c941f4" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's name.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; は、デフォルトでパッケージ作成者の名前に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ea162733b47518881f1ee8ac35ee87f82f0d8ad" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package license.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; は、デフォルトでパッケージライセンスに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5e938bee267dfa2c942de7ecae952efd6db6542e" translate="yes" xml:space="preserve">
          <source>The value that &lt;code&gt;npm init&lt;/code&gt; should use by default for the package version number, if not already set in package.json.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; すでにpackage.jsonに設定されていない場合は、パッケージのバージョン番号にデフォルトで使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3262aca4feb9e7d5f88a9f66895415561511d6ba" translate="yes" xml:space="preserve">
          <source>The version of the package this is a package-lock for. This must match what's in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">これがパッケージロックの対象となるパッケージのバージョン。これは &lt;code&gt;package.json&lt;/code&gt; の内容と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="ca820b1c00068405b707b0523177e17868ea28de" translate="yes" xml:space="preserve">
          <source>The welcome message has links to helpful resources; you might want to flag it for later reference.</source>
          <target state="translated">ウェルカムメッセージには有用なリソースへのリンクがあります。</target>
        </trans-unit>
        <trans-unit id="2229e2aee127ce204a467ac0cfded102f8700e13" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;npm update&lt;/code&gt; will install &lt;code&gt;dep1@0.4.1&lt;/code&gt;, because that is the highest-sorting version that satisfies &lt;code&gt;^0.4.0&lt;/code&gt; (&lt;code&gt;&amp;gt;= 0.4.0 &amp;lt;0.5.0&lt;/code&gt;)</source>
          <target state="translated">次に、 &lt;code&gt;npm update&lt;/code&gt; は &lt;code&gt;dep1@0.4.1&lt;/code&gt; をインストールします。これは、 &lt;code&gt;^0.4.0&lt;/code&gt; （ &lt;code&gt;&amp;gt;= 0.4.0 &amp;lt;0.5.0&lt;/code&gt; ）を満たす最も高いソートバージョンであるためです。</target>
        </trans-unit>
        <trans-unit id="ae6a4d7cb01dc3e67960c5080562e924035de7d8" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;npm update&lt;/code&gt; will install &lt;code&gt;dep1@1.2.2&lt;/code&gt;, because &lt;code&gt;1.2.2&lt;/code&gt; is &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;1.2.2&lt;/code&gt; satisfies &lt;code&gt;^1.1.1&lt;/code&gt;.</source>
          <target state="translated">次に、 &lt;code&gt;1.2.2&lt;/code&gt; が &lt;code&gt;latest&lt;/code&gt; あり、 &lt;code&gt;1.2.2&lt;/code&gt; が &lt;code&gt;^1.1.1&lt;/code&gt; 満たすため、 &lt;code&gt;npm update&lt;/code&gt; は &lt;code&gt;dep1@1.2.2&lt;/code&gt; をインストールします。</target>
        </trans-unit>
        <trans-unit id="78c1b60bb64c343bf8092563acf190118600a330" translate="yes" xml:space="preserve">
          <source>Then go into the node-repl, and try using require(&quot;my-thing&quot;) to bring in your module's main module.</source>
          <target state="translated">それからnode-replに入って、require(&quot;my-thing&quot;)を使ってモジュールのメインモジュールを導入してみてください。</target>
        </trans-unit>
        <trans-unit id="41c4956c52a9e102eb2b215d8bea52527bf3f432" translate="yes" xml:space="preserve">
          <source>Then include a file named &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; at the top level of the package.</source>
          <target state="translated">次に、パッケージの最上位に &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; という名前のファイルを含めます。</target>
        </trans-unit>
        <trans-unit id="47997e7d7bdd4f7cbd4932dbe6ce4accf3fd4161" translate="yes" xml:space="preserve">
          <source>Then you can check in the &lt;a href=&quot;../files/npmrc&quot;&gt;&lt;code&gt;.npmrc&lt;/code&gt;&lt;/a&gt; file, replacing your token with the environment variable.</source>
          <target state="translated">次に、&lt;a href=&quot;../files/npmrc&quot;&gt; &lt;code&gt;.npmrc&lt;/code&gt; &lt;/a&gt;ファイルをチェックインして、トークンを環境変数に置き換えます。</target>
        </trans-unit>
        <trans-unit id="9894f0ca73f13327c0779c9a1569a914ead3e20a" translate="yes" xml:space="preserve">
          <source>There are a few things that you need to do above the simple steps that your users will do to install your program.</source>
          <target state="translated">あなたのユーザーがあなたのプログラムをインストールするために行う簡単なステップの上に、あなたが行う必要があるいくつかのことがあります。</target>
        </trans-unit>
        <trans-unit id="e91d83768505bced45095c83b9060d73c30bc285" translate="yes" xml:space="preserve">
          <source>There are additional resources for beginners and for everyone at the end of this chapter in the &quot;Learn More&quot; section.</source>
          <target state="translated">この章の最後には、初心者向けの追加リソースとみんなのためのリソースが「もっと詳しく」のセクションにあります。</target>
        </trans-unit>
        <trans-unit id="e1c1a11e380a4f3a26c31bd9924e5a0f626552c6" translate="yes" xml:space="preserve">
          <source>There are several settings that you can use in the new token. Please see this &lt;a href=&quot;../getting-started/working_with_tokens&quot;&gt;doc&lt;/a&gt; for details.</source>
          <target state="translated">新しいトークンで使用できる設定がいくつかあります。詳細については、この&lt;a href=&quot;../getting-started/working_with_tokens&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="69c2926ccb6d4e23d1e4f90c6f5d8a8b39cefb76" translate="yes" xml:space="preserve">
          <source>There are some special life cycle scripts that happen only in certain situations. These scripts happen in addtion to the &quot;pre&quot; and &quot;post&quot; script.</source>
          <target state="translated">特定の状況でのみ発生する特別なライフサイクルスクリプトがあります。これらのスクリプトは、「前」と「後」のスクリプトに加えて発生します。</target>
        </trans-unit>
        <trans-unit id="cea595242b6d9737506ca7d3fc2f9ce5012a4cac" translate="yes" xml:space="preserve">
          <source>There are some very rare and pathological edge-cases where a cycle can cause npm to try to install a never-ending tree of packages. Here is the simplest case:</source>
          <target state="translated">非常に稀で病的なエッジケースがあり、そのサイクルによって npm が無限に続くパッケージのツリーをインストールしようとすることがあります。ここに最も単純なケースがあります。</target>
        </trans-unit>
        <trans-unit id="f63ee96b3ad67d6780e295e796b912d1d387ce2d" translate="yes" xml:space="preserve">
          <source>There are three levels of org users:</source>
          <target state="translated">orgユーザーには3つのレベルがあります。</target>
        </trans-unit>
        <trans-unit id="c87d8271144729b0eb10540dd2798af68aeada7d" translate="yes" xml:space="preserve">
          <source>There are three roles in an organization:</source>
          <target state="translated">組織には3つの役割があります。</target>
        </trans-unit>
        <trans-unit id="f5bee0534c6f9bb2a0de1f990c02daa01b064916" translate="yes" xml:space="preserve">
          <source>There are two basic ways to create a package.json file.</source>
          <target state="translated">package.jsonファイルを作成するには、基本的に2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="cd4747399abfb3c1cd76a0a0544e9b48296a1504" translate="yes" xml:space="preserve">
          <source>There are two levels of authentication, &lt;em&gt;&lt;strong&gt;auth-only&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;auth-and-writes&lt;/strong&gt;&lt;/em&gt;.</source>
          <target state="translated">認証には、&lt;em&gt;&lt;strong&gt;auth-only&lt;/strong&gt;&lt;/em&gt;と&lt;em&gt;&lt;strong&gt;auth-and-writesの&lt;/strong&gt;&lt;/em&gt; 2つのレベルがあり&lt;em&gt;&lt;strong&gt;ます&lt;/strong&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="222abb41d8c271554b2c8ac41c6bb4a33f2f9632" translate="yes" xml:space="preserve">
          <source>There are two main commands:</source>
          <target state="translated">主に2つのコマンドがあります。</target>
        </trans-unit>
        <trans-unit id="44c65e0bc288743fc0090892e4b479905348a656" translate="yes" xml:space="preserve">
          <source>There are two ways to install npm packages: locally or globally. Choose which kind of installation to use based on how you want to use the package.</source>
          <target state="translated">npm パッケージをインストールするには、ローカルとグローバルの 2 つの方法があります。パッケージをどのように使いたいかに応じて、どちらのインストール方法を使うかを選択してください。</target>
        </trans-unit>
        <trans-unit id="f76c4bb8aee7179c5132d53a4f786447f0061dda" translate="yes" xml:space="preserve">
          <source>There is currently no method exposed through npm to inspect or directly manage the contents of this cache. In order to access it, &lt;code&gt;cacache&lt;/code&gt; must be used directly.</source>
          <target state="translated">現在、このキャッシュの内容を検査または直接管理するためのnpmを通じて公開されるメソッドはありません。アクセスするには、 &lt;code&gt;cacache&lt;/code&gt; を直接使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="168bdd4395c5e0196d9aa6f64ea3b08100050e83" translate="yes" xml:space="preserve">
          <source>There is nothing special about the way Node treats scope folders. This simply requires the &lt;code&gt;mypackage&lt;/code&gt; module in the folder named &lt;code&gt;@myorg&lt;/code&gt;.</source>
          <target state="translated">Nodeがスコープフォルダを処理する方法については、特別なことは何もありません。これには、 &lt;code&gt;@myorg&lt;/code&gt; という名前のフォルダーに &lt;code&gt;mypackage&lt;/code&gt; モジュールが必要です。</target>
        </trans-unit>
        <trans-unit id="056811685601e94a316aaea43434807672079179" translate="yes" xml:space="preserve">
          <source>There is plenty of room on the registry.</source>
          <target state="translated">登記簿には余裕があります。</target>
        </trans-unit>
        <trans-unit id="2979ebe51075c229a4def0f53c216e2ee22e955e" translate="yes" xml:space="preserve">
          <source>There sometimes arise cases where a user publishes a module, and then later, some other user wants to use that name. Here are some common ways that happens (each of these is based on actual events.)</source>
          <target state="translated">あるユーザがモジュールを公開した後、後になって他のユーザがその名前を使いたいと言ってくることがあります。以下にそのようなことが起こる一般的な方法をいくつか紹介します (それぞれの方法は実際のイベントに基づいています)。</target>
        </trans-unit>
        <trans-unit id="ca92da9acb9651a8eae3f374ed626c4b776241a1" translate="yes" xml:space="preserve">
          <source>These are just a few examples of ways developers use npm. If you'd like to add a bullet point, comment &lt;a href=&quot;https://github.com/npm/docs/issues/944&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">これらは、開発者がnpmを使用する方法のほんの一例です。箇条書きを追加する場合は、&lt;a href=&quot;https://github.com/npm/docs/issues/944&quot;&gt;ここ&lt;/a&gt;にコメントしてください。</target>
        </trans-unit>
        <trans-unit id="837b8dae6e13e43e63b6e6192eef075bfcd2f170" translate="yes" xml:space="preserve">
          <source>These are man pages. If you install npm, you should be able to then do &lt;code&gt;man npm-thing&lt;/code&gt; to get the documentation on a particular topic, or &lt;code&gt;npm help thing&lt;/code&gt; to see the same information.</source>
          <target state="translated">これらはマニュアルページです。npmをインストールすると、 &lt;code&gt;man npm-thing&lt;/code&gt; を実行して特定のトピックに関するドキュメントを取得したり、 &lt;code&gt;npm help thing&lt;/code&gt; 同じ情報を表示したりできるようになります。</target>
        </trans-unit>
        <trans-unit id="1c8d51c0147d0db3048439cbe2daeaf8b7ff50bd" translate="yes" xml:space="preserve">
          <source>These are the tabs available on the package page.</source>
          <target state="translated">パッケージページに掲載されているタブです。</target>
        </trans-unit>
        <trans-unit id="46637407c79889cfb4a0ca8d5c13ffbf3fd0f996" translate="yes" xml:space="preserve">
          <source>These things will be installed when doing &lt;code&gt;npm link&lt;/code&gt; or &lt;code&gt;npm install&lt;/code&gt; from the root of a package, and can be managed like any other npm configuration param. See &lt;a href=&quot;../using-npm/config&quot;&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt; for more on the topic.</source>
          <target state="translated">これらのことはやったときにインストールされる &lt;code&gt;npm link&lt;/code&gt; または &lt;code&gt;npm install&lt;/code&gt; パッケージのルートから、他のNPMの設定のparamのように管理することができます。このトピックの詳細については、&lt;a href=&quot;../using-npm/config&quot;&gt; &lt;code&gt;config&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="768e367934cb5d5861d7f176603333039bca62e8" translate="yes" xml:space="preserve">
          <source>These things will be installed when doing &lt;code&gt;npm link&lt;/code&gt; or &lt;code&gt;npm install&lt;/code&gt; from the root of a package, and can be managed like any other npm configuration param. See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for more on the topic.</source>
          <target state="translated">これらは、パッケージのルートから &lt;code&gt;npm link&lt;/code&gt; または &lt;code&gt;npm install&lt;/code&gt; を実行するとインストールされ、他のnpm構成パラメーターと同様に管理できます。このトピックの詳細については、 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="fd646328a6b75a63ec729fc40d9008100250d74b" translate="yes" xml:space="preserve">
          <source>This adds the expected &lt;code&gt;ARG NPM_TOKEN&lt;/code&gt;, but also copies the &lt;code&gt;.npmrc&lt;/code&gt; file, and removes it when &lt;code&gt;npm install&lt;/code&gt; completes.</source>
          <target state="translated">これにより、予期される &lt;code&gt;ARG NPM_TOKEN&lt;/code&gt; が追加されますが、 &lt;code&gt;.npmrc&lt;/code&gt; ファイルもコピーされ、 &lt;code&gt;npm install&lt;/code&gt; 完了すると削除されます。</target>
        </trans-unit>
        <trans-unit id="34e5dc65243c088bed309f501a3f8772b511a6e3" translate="yes" xml:space="preserve">
          <source>This adds the expected &lt;code&gt;ARG NPM_TOKEN&lt;/code&gt;, but also copies the &lt;code&gt;.npmrc&lt;/code&gt; file, and removes it when npm install completes.</source>
          <target state="translated">これにより、予想される &lt;code&gt;ARG NPM_TOKEN&lt;/code&gt; が追加されますが、 &lt;code&gt;.npmrc&lt;/code&gt; ファイルもコピーされ、npmのインストールが完了すると削除されます。</target>
        </trans-unit>
        <trans-unit id="2c276f40959315c8006cefd4a9e3b73bf93076de" translate="yes" xml:space="preserve">
          <source>This aims to provide a very forgiving translation of a non-semver string to semver. It looks for the first digit in a string, and consumes all remaining characters which satisfy at least a partial semver (e.g., &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;1.2&lt;/code&gt;, &lt;code&gt;1.2.3&lt;/code&gt;) up to the max permitted length (256 characters). Longer versions are simply truncated (&lt;code&gt;4.6.3.9.2-alpha2&lt;/code&gt; becomes &lt;code&gt;4.6.3&lt;/code&gt;). All surrounding text is simply ignored (&lt;code&gt;v3.4 replaces v3.3.1&lt;/code&gt; becomes &lt;code&gt;3.4.0&lt;/code&gt;). Only text which lacks digits will fail coercion (&lt;code&gt;version one&lt;/code&gt; is not valid). The maximum length for any semver component considered for coercion is 16 characters; longer components will be ignored (&lt;code&gt;10000000000000000.4.7.4&lt;/code&gt; becomes &lt;code&gt;4.7.4&lt;/code&gt;). The maximum value for any semver component is &lt;code&gt;Integer.MAX_SAFE_INTEGER || (2**53 - 1)&lt;/code&gt;; higher value components are invalid (&lt;code&gt;9999999999999999.4.7.4&lt;/code&gt; is likely invalid).</source>
          <target state="translated">これは、非サーバー文字列からサーバーへの非常に寛容な翻訳を提供することを目的としています。これは、文字列の最初の数字を探し、（例えば、少なくとも部分的semverを満たすすべての残りの文字を消費 &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;1.2&lt;/code&gt; 、 &lt;code&gt;1.2.3&lt;/code&gt; ）最大までの長さ（256文字）を許可します。長いバージョンは単に切り捨てられます（ &lt;code&gt;4.6.3.9.2-alpha2&lt;/code&gt; は &lt;code&gt;4.6.3&lt;/code&gt; になります）。すべての周囲のテキストは、単純に（無視される &lt;code&gt;v3.4 replaces v3.3.1&lt;/code&gt; なり &lt;code&gt;3.4.0&lt;/code&gt; ）。数字がないテキストのみが強制に失敗します（ &lt;code&gt;version one&lt;/code&gt; は無効です）。強制と見なされるサーバーコンポーネントの最大長は16文字です。長いコンポーネントは無視されます（ &lt;code&gt;10000000000000000.4.7.4&lt;/code&gt; は &lt;code&gt;4.7.4&lt;/code&gt; になります）。semverコンポーネントの最大値は &lt;code&gt;Integer.MAX_SAFE_INTEGER || (2**53 - 1)&lt;/code&gt; ; より高い値のコンポーネントは無効です（ &lt;code&gt;9999999999999999.4.7.4&lt;/code&gt; はおそらく無効です）。</target>
        </trans-unit>
        <trans-unit id="921e169b10085017ab398b40ae10f74337f62624" translate="yes" xml:space="preserve">
          <source>This aims to provide a very forgiving translation of a non-semver string to semver. It looks for the first digit in a string, and consumes all remaining characters which satisfy at least a partial semver (e.g., &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;1.2&lt;/code&gt;, &lt;code&gt;1.2.3&lt;/code&gt;) up to the max permitted length (256 characters). Longer versions are simply truncated (&lt;code&gt;4.6.3.9.2-alpha2&lt;/code&gt; becomes &lt;code&gt;4.6.3&lt;/code&gt;). All surrounding text is simply ignored (&lt;code&gt;v3.4 replaces v3.3.1&lt;/code&gt; becomes &lt;code&gt;3.4.0&lt;/code&gt;). Only text which lacks digits will fail coercion (&lt;code&gt;version one&lt;/code&gt; is not valid). The maximum length for any semver component considered for coercion is 16 characters; longer components will be ignored (&lt;code&gt;10000000000000000.4.7.4&lt;/code&gt; becomes &lt;code&gt;4.7.4&lt;/code&gt;). The maximum value for any semver component is &lt;code&gt;Number.MAX_SAFE_INTEGER || (2**53 - 1)&lt;/code&gt;; higher value components are invalid (&lt;code&gt;9999999999999999.4.7.4&lt;/code&gt; is likely invalid).</source>
          <target state="translated">これは、非semver文字列からsemverへの非常に寛容な翻訳を提供することを目的としています。これは、文字列の最初の数字を探し、（例えば、少なくとも部分的semverを満たすすべての残りの文字を消費 &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;1.2&lt;/code&gt; 、 &lt;code&gt;1.2.3&lt;/code&gt; ）最大までの長さ（256文字）を許可します。長いバージョンは単純に切り捨てられます（ &lt;code&gt;4.6.3.9.2-alpha2&lt;/code&gt; は &lt;code&gt;4.6.3&lt;/code&gt; になります）。すべての周囲のテキストは、単純に（無視される &lt;code&gt;v3.4 replaces v3.3.1&lt;/code&gt; なり &lt;code&gt;3.4.0&lt;/code&gt; ）。数字がないテキストのみが強制に失敗します（ &lt;code&gt;version one&lt;/code&gt; は無効です）。強制が考慮されるsemverコンポーネントの最大長は16文字です。長いコンポーネントは無視されます（ &lt;code&gt;10000000000000000.4.7.4&lt;/code&gt; は &lt;code&gt;4.7.4&lt;/code&gt; になります）。semverコンポーネントの最大値は &lt;code&gt;Number.MAX_SAFE_INTEGER || (2**53 - 1)&lt;/code&gt; ; 値の大きいコンポーネントは無効です（ &lt;code&gt;9999999999999999.4.7.4&lt;/code&gt; は無効である可能性があります）。</target>
        </trans-unit>
        <trans-unit id="de66c9dd6fd891da21f4434428dc0c3629bb977f" translate="yes" xml:space="preserve">
          <source>This allows a package maintainer to install all of their dependencies (and dev dependencies) locally, but only re-publish those items that cannot be found elsewhere. See &lt;a href=&quot;package-json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">これにより、パッケージメンテナは、すべての依存関係（および開発依存関係）をローカルにインストールできますが、他の場所では見つからないアイテムのみを再公開できます。詳細については、&lt;a href=&quot;package-json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="14ec159e42d4f170d244ed24b8513ae5fcdef97d" translate="yes" xml:space="preserve">
          <source>This allows a package maintainer to install all of their dependencies (and dev dependencies) locally, but only re-publish those items that cannot be found elsewhere. See &lt;code&gt;&lt;a href=&quot;package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; for more information.</source>
          <target state="translated">これにより、パッケージのメンテナは依存関係（およびdev依存関係）をすべてローカルにインストールできますが、他の場所では見つからないアイテムのみを再公開できます。詳細については、 &lt;code&gt;&lt;a href=&quot;package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ef53b30165ac0ab3986b24ada16e3ade5b44e9ea" translate="yes" xml:space="preserve">
          <source>This also applies to &lt;code&gt;npm dedupe&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;npm dedupe&lt;/code&gt; も適用されます。</target>
        </trans-unit>
        <trans-unit id="1f29394f617ab07e04b6fc5505564cd040272fa6" translate="yes" xml:space="preserve">
          <source>This assumes that you installed node and npm in the default place. If you configured node with a different &lt;code&gt;--prefix&lt;/code&gt;, or installed npm with a different prefix setting, then adjust the paths accordingly, replacing &lt;code&gt;/usr/local&lt;/code&gt; with your install prefix.</source>
          <target state="translated">これは、nodeとnpmがデフォルトの場所にインストールされていることを前提としています。異なる &lt;code&gt;--prefix&lt;/code&gt; でノードを構成した場合、または異なる接頭辞設定でnpmをインストールした場合は、それに応じてパスを調整し、 &lt;code&gt;/usr/local&lt;/code&gt; をインストール接頭辞に置き換えます。</target>
        </trans-unit>
        <trans-unit id="24421c181d1ac2fc874ce89714ddddf04e79052a" translate="yes" xml:space="preserve">
          <source>This can be caused by corporate proxies that give HTML responses to &lt;code&gt;package.json&lt;/code&gt; requests. Check npm's proxy &lt;a href=&quot;../misc/config&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;package.json&lt;/code&gt; リクエストにHTML応答を返す企業プロキシが原因である可能性があります。npmのプロキシ&lt;a href=&quot;../misc/config&quot;&gt;設定を&lt;/a&gt;確認します。</target>
        </trans-unit>
        <trans-unit id="394069c6cdf3187ab5b22b569734a067d5b5a168" translate="yes" xml:space="preserve">
          <source>This can be caused by corporate proxies that give HTML responses to &lt;code&gt;package.json&lt;/code&gt; requests. Check npm's proxy &lt;a href=&quot;cli/v6/using-npm/config&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;package.json&lt;/code&gt; リクエストにHTML応答を提供する企業プロキシが原因である可能性があります。npmのプロキシ&lt;a href=&quot;cli/v6/using-npm/config&quot;&gt;設定を&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="a1439087952585aaf1eee5cbb4016a2d10368205" translate="yes" xml:space="preserve">
          <source>This check is done against whichever registry you've configured (you can see what that is by running &lt;code&gt;npm config get registry&lt;/code&gt;), and if you're using a private registry that doesn't support the &lt;code&gt;/whoami&lt;/code&gt; endpoint supported by the primary registry, this check may fail.</source>
          <target state="translated">このチェックは、構成したレジストリー（ &lt;code&gt;npm config get registry&lt;/code&gt; を実行することにより、何であるかを確認できます）に対して行われます。また、プライマリレジストリーによってサポートされる &lt;code&gt;/whoami&lt;/code&gt; エンドポイントをサポートしないプライベートレジストリーを使用している場合は、このチェックは失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="c795538a89ec867f663c70341d9d56de724ec7a3" translate="yes" xml:space="preserve">
          <source>This command installs a package, and any packages that it depends on. If the package has a package-lock or shrinkwrap file, the installation of dependencies will be driven by that, with an &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; taking precedence if both files exist. See &lt;a href=&quot;../configuring-npm/package-lock-json&quot;&gt;package-lock.json&lt;/a&gt; and &lt;a href=&quot;npm-shrinkwrap&quot;&gt;&lt;code&gt;npm shrinkwrap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、パッケージと、それが依存するすべてのパッケージをインストールします。パッケージにpackage-lockまたはshrinkwrapファイルがある場合、依存関係のインストールはそれによって駆動され、両方のファイルが存在する場合は &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; が優先されます。参照&lt;a href=&quot;../configuring-npm/package-lock-json&quot;&gt;パッケージlock.json&lt;/a&gt;と&lt;a href=&quot;npm-shrinkwrap&quot;&gt; &lt;code&gt;npm shrinkwrap&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="772284da4676004bed770e85649641a8bc159b84" translate="yes" xml:space="preserve">
          <source>This command installs a package, and any packages that it depends on. If the package has a package-lock or shrinkwrap file, the installation of dependencies will be driven by that, with an &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; taking precedence if both files exist. See &lt;a href=&quot;../files/package-lock.json&quot;&gt;package-lock.json&lt;/a&gt; and &lt;a href=&quot;shrinkwrap&quot;&gt;npm-shrinkwrap&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、パッケージとそれに依存するパッケージをインストールします。パッケージにパッケージロックまたはシュリンクラップファイルがある場合、依存関係のインストールはそれによって行われ、両方のファイルが存在する場合は &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; が優先されます。&lt;a href=&quot;../files/package-lock.json&quot;&gt;package-lock.json&lt;/a&gt;および&lt;a href=&quot;shrinkwrap&quot;&gt;npm-shrinkwrapを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ade7e141effde82e04dbd30d81ccf08a139cd0aa" translate="yes" xml:space="preserve">
          <source>This command is similar to &lt;a href=&quot;npm-install&quot;&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/a&gt;, except it's meant to be used in automated environments such as test platforms, continuous integration, and deployment -- or any situation where you want to make sure you're doing a clean install of your dependencies. It can be significantly faster than a regular npm install by skipping certain user-oriented features. It is also more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed local environments of most npm users.</source>
          <target state="translated">このコマンドは&lt;a href=&quot;npm-install&quot;&gt; &lt;code&gt;npm install&lt;/code&gt; &lt;/a&gt;似ていますが、テストプラットフォーム、継続的インテグレーション、デプロイなどの自動化された環境、または依存関係のクリーンインストールを確実に実行する必要がある状況で使用することを目的としています。特定のユーザー指向の機能をスキップすることで、通常のnpmインストールよりも大幅に高速化できます。また、通常のインストールよりも厳密であるため、ほとんどのnpmユーザーの段階的にインストールされるローカル環境によって引き起こされるエラーや不整合を見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="88ae9bf5dadc0d57b0058365a5d223550dab7410" translate="yes" xml:space="preserve">
          <source>This command is similar to &lt;code&gt;&lt;a href=&quot;install&quot;&gt;npm-install&lt;/a&gt;&lt;/code&gt;, except it's meant to be used in automated environments such as test platforms, continuous integration, and deployment. It can be significantly faster than a regular npm install by skipping certain user-oriented features. It is also more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed local environments of most npm users.</source>
          <target state="translated">このコマンドは &lt;code&gt;&lt;a href=&quot;install&quot;&gt;npm-install&lt;/a&gt;&lt;/code&gt; に似ていますが、テストプラットフォーム、継続的インテグレーション、デプロイメントなどの自動化環境で使用されることを意図しています。特定のユーザー指向機能をスキップすることで、通常のnpmインストールよりも大幅に高速化できます。また、通常のインストールよりも厳格であり、ほとんどのnpmユーザーの増分インストールされるローカル環境によって引き起こされるエラーや不整合をキャッチするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="0534536ebb3aef46e7dba64831b1cdd7abdcace3" translate="yes" xml:space="preserve">
          <source>This command removes &quot;extraneous&quot; packages. If a package name is provided, then only packages matching one of the supplied names are removed.</source>
          <target state="translated">このコマンドは、「不要な」パッケージを削除します。パッケージ名が指定された場合は、指定された名前にマッチするパッケージのみが削除されます。</target>
        </trans-unit>
        <trans-unit id="bf5b6cb55ed41865ac798b8b5744cce183c35d16" translate="yes" xml:space="preserve">
          <source>This command repurposes &lt;code&gt;package-lock.json&lt;/code&gt; into a publishable &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; or simply creates a new one. The file created and updated by this command will then take precedence over any other existing or future &lt;code&gt;package-lock.json&lt;/code&gt; files. For a detailed explanation of the design and purpose of package locks in npm, see &lt;a href=&quot;../configuring-npm/package-locks&quot;&gt;package-locks&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;package-lock.json&lt;/code&gt; を公​​開可能な &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; に再利用するか、単に新しいものを作成します。このコマンドによって作成および更新されたファイルは、他の既存または将来の &lt;code&gt;package-lock.json&lt;/code&gt; ファイルよりも優先されます。 npmでのパッケージロックの設計と目的の詳細については、&lt;a href=&quot;../configuring-npm/package-locks&quot;&gt;package-locksを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4fda4f4fa4df7d52d775910e301291fa151860f1" translate="yes" xml:space="preserve">
          <source>This command repurposes &lt;code&gt;package-lock.json&lt;/code&gt; into a publishable &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; or simply creates a new one. The file created and updated by this command will then take precedence over any other existing or future &lt;code&gt;package-lock.json&lt;/code&gt; files. For a detailed explanation of the design and purpose of package locks in npm, see &lt;a href=&quot;../files/package-locks&quot;&gt;npm-package-locks&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;package-lock.json&lt;/code&gt; を発行可能な &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; に転用するか、単に新しいものを作成します。このコマンドによって作成および更新されたファイルは、他の既存または将来の &lt;code&gt;package-lock.json&lt;/code&gt; ファイルよりも優先されます。npmでのパッケージロックの設計と目的の詳細な説明については、&lt;a href=&quot;../files/package-locks&quot;&gt;npm-package-locksを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4564032cf9cb7fa6fad9f104cfe56a9515d52cc6" translate="yes" xml:space="preserve">
          <source>This command retrieves information on how to fund the dependencies of a given project. If no package name is provided, it will list all dependencies that are looking for funding in a tree-structure in which are listed the type of funding and the url to visit. If a package name is provided then it tries to open its funding url using the &lt;code&gt;--browser&lt;/code&gt; config param; if there are multiple funding sources for the package, the user will be instructed to pass the &lt;code&gt;--which&lt;/code&gt; command to disambiguate.</source>
          <target state="translated">このコマンドは、特定のプロジェクトの依存関係に資金を提供する方法に関する情報を取得します。パッケージ名が指定されていない場合は、資金の種類とアクセスするURLがリストされているツリー構造で、資金を探しているすべての依存関係がリストされます。パッケージ名が指定されている場合は、 &lt;code&gt;--browser&lt;/code&gt; を使用して資金調達URLを開こうとします。パッケージに複数の資金源がある場合、ユーザーは &lt;code&gt;--which&lt;/code&gt; コマンドを渡して曖昧さを解消するように指示されます。</target>
        </trans-unit>
        <trans-unit id="8489d502ad6cd7d0cf45fdd53452bf938f0bda69" translate="yes" xml:space="preserve">
          <source>This command runs an &lt;code&gt;npm ci&lt;/code&gt; followed immediately by an &lt;code&gt;npm test&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;npm ci&lt;/code&gt; を実行し、その後すぐに &lt;code&gt;npm test&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="7e61192655bbfe144f88d28f364046263b4edc9f" translate="yes" xml:space="preserve">
          <source>This command runs an &lt;code&gt;npm install&lt;/code&gt; followed immediately by an &lt;code&gt;npm test&lt;/code&gt;. It takes exactly the same arguments as &lt;code&gt;npm install&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;npm install&lt;/code&gt; 実行し、その後すぐに &lt;code&gt;npm test&lt;/code&gt; ます。 &lt;code&gt;npm install&lt;/code&gt; とまったく同じ引数を取ります。</target>
        </trans-unit>
        <trans-unit id="f881d9580b8154203f705fb27d7b396b426a0a28" translate="yes" xml:space="preserve">
          <source>This command runs the &lt;code&gt;npm build&lt;/code&gt; command on the matched folders. This is useful when you install a new version of node, and must recompile all your C++ addons with the new binary.</source>
          <target state="translated">このコマンドは、一致したフォルダーに対して &lt;code&gt;npm build&lt;/code&gt; コマンドを実行します。これは、nodeの新しいバージョンをインストールするときに役立ち、すべてのC ++アドオンを新しいバイナリで再コンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="a62d3f00d9a2299a688fb20ba88b8d5ecc9fbebb" translate="yes" xml:space="preserve">
          <source>This command shows data about a package and prints it to the stream referenced by the &lt;code&gt;outfd&lt;/code&gt; config, which defaults to stdout.</source>
          <target state="translated">このコマンドは、パッケージに関するデータを表示し、それを &lt;code&gt;outfd&lt;/code&gt; 構成によって参照されるストリームに出力します。デフォルトはstdoutです。</target>
        </trans-unit>
        <trans-unit id="91a15ed7d6a4f1cbeb2325ae00ecc09c913dad62" translate="yes" xml:space="preserve">
          <source>This command tries to guess at the likely location of a package's bug tracker URL, and then tries to open it using the &lt;code&gt;--browser&lt;/code&gt; config param. If no package name is provided, it will search for a &lt;code&gt;package.json&lt;/code&gt; in the current folder and use the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">このコマンドは、パッケージのバグトラッカーURLのありそうな場所を推測し、次にそれを使用してそれを開こうとします。 &lt;code&gt;--browser&lt;/code&gt; config パラメーター。パッケージ名が指定されていない場合は、現在のフォルダーで &lt;code&gt;package.json&lt;/code&gt; を検索し、 &lt;code&gt;name&lt;/code&gt; プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="e07fc4f8bc0170ebc9c088ee52eed2789acde974" translate="yes" xml:space="preserve">
          <source>This command tries to guess at the likely location of a package's documentation URL, and then tries to open it using the &lt;code&gt;--browser&lt;/code&gt; config param. You can pass multiple package names at once. If no package name is provided, it will search for a &lt;code&gt;package.json&lt;/code&gt; in the current folder and use the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">このコマンドは、パッケージのドキュメントURLのありそうな場所を推測し、次にそれを使用してそれを開こうとします &lt;code&gt;--browser&lt;/code&gt; config param。一度に複数のパッケージ名を渡すことができます。パッケージ名が指定されていない場合は、現在のフォルダーで &lt;code&gt;package.json&lt;/code&gt; を検索し、 &lt;code&gt;name&lt;/code&gt; プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="034f3b99e7666bc0bee3003c912f511116756161" translate="yes" xml:space="preserve">
          <source>This command tries to guess at the likely location of a package's repository URL, and then tries to open it using the &lt;code&gt;--browser&lt;/code&gt; config param. If no package name is provided, it will search for a &lt;code&gt;package.json&lt;/code&gt; in the current folder and use the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">このコマンドは、パッケージのリポジトリURLのありそうな場所を推測し、次に &lt;code&gt;--browser&lt;/code&gt; を使用してそれを開こうとします config。パッケージ名が指定されていない場合は、現在のフォルダーで &lt;code&gt;package.json&lt;/code&gt; を検索し、 &lt;code&gt;name&lt;/code&gt; プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="beeddd04cd3b333dd82ec0e3ddaaab57cdfda4f5" translate="yes" xml:space="preserve">
          <source>This command used to be known as &lt;code&gt;npm tag&lt;/code&gt;, which only created new tags, and so had a different syntax.</source>
          <target state="translated">このコマンドは、以前は &lt;code&gt;npm tag&lt;/code&gt; と呼ばれていましたが、新しいタグを作成するだけだったため、構文が異なりました。</target>
        </trans-unit>
        <trans-unit id="1d589e183f36773e70d0c4b76ed6d8111427df8d" translate="yes" xml:space="preserve">
          <source>This command will change the version number in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;package.json&lt;/code&gt; のバージョン番号を変更します。</target>
        </trans-unit>
        <trans-unit id="24dc416cd049e2f943001ae77444b986cbc84257" translate="yes" xml:space="preserve">
          <source>This command will check the registry to see if any (or, specific) installed packages are currently outdated.</source>
          <target state="translated">このコマンドはレジストリをチェックして、インストールされている (または特定の)パッケージが現在古くなっていないかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="ece5467b89c8979a71705cac79c3769ce6bfc911" translate="yes" xml:space="preserve">
          <source>This command will print to stdout all the versions of packages that are installed, as well as their dependencies, in a tree-structure.</source>
          <target state="translated">このコマンドは、インストールされているパッケージのすべてのバージョンとその依存関係をツリー構造で標準出力します。</target>
        </trans-unit>
        <trans-unit id="caff2defefdc012b925f942c3f9b6c2ee70e9064" translate="yes" xml:space="preserve">
          <source>This command will search the npm markdown documentation files for the terms provided, and then list the results, sorted by relevance.</source>
          <target state="translated">このコマンドは、提供された用語のために npm の markdown ドキュメントファイルを検索し、関連性の高い順に結果を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="ffc0297386751f05827046b6fa47f7129f295d3d" translate="yes" xml:space="preserve">
          <source>This command will update all the packages listed to the latest version (specified by the &lt;code&gt;tag&lt;/code&gt; config), respecting semver.</source>
          <target state="translated">このコマンドは、リストされているすべてのパッケージを、semverを考慮して、最新バージョン（ &lt;code&gt;tag&lt;/code&gt; 指定）に更新します。</target>
        </trans-unit>
        <trans-unit id="c00f269b27ddf71b00b5e93494b17b77dfbf23ad" translate="yes" xml:space="preserve">
          <source>This command will update the npm registry entry for a package, providing a deprecation warning to all who attempt to install it.</source>
          <target state="translated">このコマンドはパッケージの npm レジストリエントリを更新し、それをインストールしようとするすべての人に非推奨の警告を表示します。</target>
        </trans-unit>
        <trans-unit id="5cfa21ceade6984fb4d45759f0628b72f6b8d137" translate="yes" xml:space="preserve">
          <source>This defines an array of package names that will be bundled when publishing the package.</source>
          <target state="translated">これは、パッケージを公開する際にバンドルされるパッケージ名の配列を定義します。</target>
        </trans-unit>
        <trans-unit id="776ff823255cc656b88d43e139b480f566c74a1c" translate="yes" xml:space="preserve">
          <source>This document describes the steps that you should take to resolve module name disputes with other npm publishers. It also describes special steps you should take about names you think infringe your trademarks.</source>
          <target state="translated">この文書では、他の npm パブリッシャとのモジュール名の論争を解決するために取るべき手順を説明します。また、商標を侵害していると思われる名前についての特別な手順についても説明しています。</target>
        </trans-unit>
        <trans-unit id="1c5b8bb74185c8d746caab7affb31d886a738501" translate="yes" xml:space="preserve">
          <source>This document is a clarification of the acceptable behavior outlined in the &lt;a href=&quot;https://www.npmjs.com/policies/conduct&quot;&gt;npm Code of Conduct&lt;/a&gt;, and nothing in this document should be interpreted to contradict any aspect of the npm Code of Conduct.</source>
          <target state="translated">このドキュメントは、&lt;a href=&quot;https://www.npmjs.com/policies/conduct&quot;&gt;npmの行動規範&lt;/a&gt;で概説されている許容可能な動作を明確にしたものであり、このドキュメントのいかなる内容も、npmの行動規範のいかなる側面とも矛盾すると解釈されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="f356ded4389f56e18b39f33e4e1d3115f2281880" translate="yes" xml:space="preserve">
          <source>This document is all you need to know about what's required in your package.json file. It must be actual JSON, not just a JavaScript object literal.</source>
          <target state="translated">このドキュメントは、package.json ファイルに必要なものについて知っておく必要があるすべてのことを示しています。JavaScript オブジェクトリテラルだけではなく、実際の JSON でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f8419a12945a2186c92a79aca7874202c401de7b" translate="yes" xml:space="preserve">
          <source>This document may be reused under a Creative Commons Attribution-ShareAlike License.</source>
          <target state="translated">この文書は、クリエイティブ・コモンズ 表示-継承ライセンスの下で再利用することができます。</target>
        </trans-unit>
        <trans-unit id="e4c91e0cc2dffa10eb93c901ae1596dcde469d7e" translate="yes" xml:space="preserve">
          <source>This document will tell you what it puts where.</source>
          <target state="translated">この文書は、どこに何を置くかを教えてくれます。</target>
        </trans-unit>
        <trans-unit id="5fda163d43a6035927f4a33ae7aaf9d863ca2a0a" translate="yes" xml:space="preserve">
          <source>This ensures your package &lt;code&gt;tea-latte&lt;/code&gt; can be installed &lt;em&gt;along&lt;/em&gt; with the second major version of the host package &lt;code&gt;tea&lt;/code&gt; only. &lt;code&gt;npm install tea-latte&lt;/code&gt; could possibly yield the following dependency graph:</source>
          <target state="translated">これにより、パッケージ &lt;code&gt;tea-latte&lt;/code&gt; をホストパッケージ &lt;code&gt;tea&lt;/code&gt; 2番目のメジャーバージョンのみ&lt;em&gt;と共に&lt;/em&gt;インストールできるようになります。 &lt;code&gt;npm install tea-latte&lt;/code&gt; は、次の依存関係グラフを生成する可能性があります。</target>
        </trans-unit>
        <trans-unit id="34110c531d3a1525851d77852c62d755af53a879" translate="yes" xml:space="preserve">
          <source>This feature is currently experimental, and the output data structures for many commands is either not implemented in JSON yet, or subject to change. Only the output from &lt;code&gt;npm ls --json&lt;/code&gt; and &lt;code&gt;npm search --json&lt;/code&gt; are currently valid.</source>
          <target state="translated">この機能は現在実験段階であり、多くのコマンドの出力データ構造はまだJSONで実装されていないか、変更される可能性があります。 &lt;code&gt;npm ls --json&lt;/code&gt; および &lt;code&gt;npm search --json&lt;/code&gt; からの出力のみが現在有効です。</target>
        </trans-unit>
        <trans-unit id="56f1b55aee5112786cfb9f18e4ffa97783a984a4" translate="yes" xml:space="preserve">
          <source>This feature is helpful for local offline development and creating tests that require npm installing where you don't want to hit an external server, but should not be used when publishing packages to the public registry.</source>
          <target state="translated">この機能は、ローカルでのオフライン開発や、外部サーバにヒットさせたくない場所にnpmをインストールする必要のあるテストを作成する際に便利ですが、パブリックレジストリにパッケージを公開する際には使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="0b5ed1910d12675c725b4b652ce3d7efddc5e74e" translate="yes" xml:space="preserve">
          <source>This file describes an &lt;em&gt;exact&lt;/em&gt;, and more importantly &lt;em&gt;reproducible&lt;/em&gt;&lt;code&gt;node_modules&lt;/code&gt; tree. Once it's present, any future installation will base its work off this file, instead of recalculating dependency versions off &lt;a href=&quot;package-json&quot;&gt;package.json&lt;/a&gt;.</source>
          <target state="translated">このファイルは、&lt;em&gt;正確&lt;/em&gt;で、より重要な&lt;em&gt;再現性のある&lt;/em&gt; &lt;code&gt;node_modules&lt;/code&gt; ツリーについて説明しています。それが存在すると、将来のインストールでは、&lt;a href=&quot;package-json&quot;&gt;package.json&lt;/a&gt;から依存関係のバージョンを再計算するのではなく、このファイルに基づいて作業が行われます。</target>
        </trans-unit>
        <trans-unit id="7eba28b4e4a5021ccd5d232a001663f154e34815" translate="yes" xml:space="preserve">
          <source>This file describes an &lt;em&gt;exact&lt;/em&gt;, and more importantly &lt;em&gt;reproducible&lt;/em&gt;&lt;code&gt;node_modules&lt;/code&gt; tree. Once it's present, any future installation will base its work off this file, instead of recalculating dependency versions off &lt;a href=&quot;package.json&quot;&gt;package.json&lt;/a&gt;.</source>
          <target state="translated">このファイルは、&lt;em&gt;正確&lt;/em&gt;でより重要な&lt;em&gt;再現可能な&lt;/em&gt; &lt;code&gt;node_modules&lt;/code&gt; ツリーを記述します。存在する場合、将来のインストールでは、&lt;a href=&quot;package.json&quot;&gt;package.json&lt;/a&gt;から依存関係のバージョンを再計算するのではなく、このファイルに基づいて作業を行います。</target>
        </trans-unit>
        <trans-unit id="16abc1a5e3aac6e78c3875247bafaee19ba7366a" translate="yes" xml:space="preserve">
          <source>This file is intended to be committed into source repositories, and serves various purposes:</source>
          <target state="translated">このファイルはソースリポジトリにコミットされることを意図しており、様々な目的で使用されています。</target>
        </trans-unit>
        <trans-unit id="5e6f56da1a21901cc31797b0da6ab7bbcd364346" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://w3c.github.io/webappsec/specs/subresourceintegrity/&quot;&gt;Standard Subresource Integrity&lt;/a&gt; for this resource.</source>
          <target state="translated">これは、このリソースの&lt;a href=&quot;https://w3c.github.io/webappsec/specs/subresourceintegrity/&quot;&gt;標準サブ&lt;/a&gt;リソース整合性です。</target>
        </trans-unit>
        <trans-unit id="bacbc42e99b66af16341ca8aa3eaf9b40d2f2902" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://w3c.github.io/webappsec/specs/subresourceintegrity/&quot;&gt;subresource integrity&lt;/a&gt; value created from the &lt;code&gt;package.json&lt;/code&gt;. No preprocessing of the &lt;code&gt;package.json&lt;/code&gt; should be done. Subresource integrity strings can be produced by modules like &lt;a href=&quot;https://www.npmjs.com/package/ssri&quot;&gt;&lt;code&gt;ssri&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;package.json&lt;/code&gt; から作成された&lt;a href=&quot;https://w3c.github.io/webappsec/specs/subresourceintegrity/&quot;&gt;サブリソース整合性の&lt;/a&gt;値です。 &lt;code&gt;package.json&lt;/code&gt; の前処理は行わないでください。サブリソース整合性文字列は、&lt;a href=&quot;https://www.npmjs.com/package/ssri&quot;&gt; &lt;code&gt;ssri&lt;/code&gt; の&lt;/a&gt;ようなモジュールで作成できます。</target>
        </trans-unit>
        <trans-unit id="dadf1f8341e8b2d500be812f9d305bd8923ee144" translate="yes" xml:space="preserve">
          <source>This is a consequence of &lt;a href=&quot;https://github.com/joyent/node/issues/8141&quot;&gt;joyent/node#8141&lt;/a&gt;, and is an issue with the Node installer for Windows. The workaround is to ensure that &lt;code&gt;C:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm&lt;/code&gt; exists and is writable with your normal user account.</source>
          <target state="translated">これは&lt;a href=&quot;https://github.com/joyent/node/issues/8141&quot;&gt;joyent / node＃8141の&lt;/a&gt;結果であり、Windowsのノードインストーラーの問題です。回避策は、 &lt;code&gt;C:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm&lt;/code&gt; が存在し、通常のユーザーアカウントで書き込み可能であることを確認することです。</target>
        </trans-unit>
        <trans-unit id="14f732775cab19a2b0e35c71e0aee80d0e2bae01" translate="yes" xml:space="preserve">
          <source>This is a list of CIDR address to be used when configuring limited access tokens with the &lt;code&gt;npm token create&lt;/code&gt; command.</source>
          <target state="translated">これは、 &lt;code&gt;npm token create&lt;/code&gt; コマンドで制限付きアクセストークンを構成するときに使用されるCIDRアドレスのリストです。</target>
        </trans-unit>
        <trans-unit id="27608dfc55de2d81dcae72d2b2687c2e65f81437" translate="yes" xml:space="preserve">
          <source>This is a living document and may be updated from time to time. Please refer to the &lt;a href=&quot;https://github.com/npm/cli/commits/latest/doc/misc/npm-disputes.md&quot;&gt;git history for this document&lt;/a&gt; to view the changes.</source>
          <target state="translated">これは最新のドキュメントであり、随時更新される可能性があります。変更を確認するには、&lt;a href=&quot;https://github.com/npm/cli/commits/latest/doc/misc/npm-disputes.md&quot;&gt;このドキュメントのgit履歴を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="319ed8e80afca1b39c635b6500c7573b86743cc9" translate="yes" xml:space="preserve">
          <source>This is a mapping of module name to version. This is a list of everything this module requires, regardless of where it will be installed. The version should match via normal matching rules a dependency either in our &lt;code&gt;dependencies&lt;/code&gt; or in a level higher than us.</source>
          <target state="translated">これは、モジュール名とバージョンのマッピングです。これは、インストール先に関係なく、このモジュールに必要なすべてのリストです。バージョンは、通常のマッチングルールによって、依存 &lt;code&gt;dependencies&lt;/code&gt; または私たちよりも高いレベルの依存関係と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="33c00fbf880da1e30ef5480530879df7f960be54" translate="yes" xml:space="preserve">
          <source>This is a one-time password from a two-factor authenticator. It's needed when publishing or changing package permissions with &lt;code&gt;npm access&lt;/code&gt;.</source>
          <target state="translated">これは、2要素認証システムからのワンタイムパスワードです。 &lt;code&gt;npm access&lt;/code&gt; パッケージのアクセス許可を公開または変更するときに必要です。</target>
        </trans-unit>
        <trans-unit id="15c5831a467c4f1c0ee805c7b93de5ea3c5db7e3" translate="yes" xml:space="preserve">
          <source>This is a quick way to get to your page in the future.</source>
          <target state="translated">将来的に自分のページにたどり着くまでの時間を短縮することができます。</target>
        </trans-unit>
        <trans-unit id="0efc113feb820aa5a46def87d195508b6f2008be" translate="yes" xml:space="preserve">
          <source>This is a set of config values that will be used at publish-time. It's especially handy if you want to set the tag, registry or access, so that you can ensure that a given package is not tagged with &quot;latest&quot;, published to the global public registry or that a scoped module is private by default.</source>
          <target state="translated">これは公開時に使用される設定値のセットです。タグやレジストリ、アクセスを設定したい場合に特に便利です。これにより、与えられたパッケージに &quot;latest&quot; というタグが付けられていないこと、グローバルなパブリックレジストリに公開されていること、スコープされたモジュールがデフォルトでプライベートであることを確実にすることができます。</target>
        </trans-unit>
        <trans-unit id="5ad16ea6c1503081ce653a3e7716a613515ac416" translate="yes" xml:space="preserve">
          <source>This is a specifier that uniquely identifies this package and should be usable in fetching a new copy of it.</source>
          <target state="translated">これは、このパッケージを一意に識別するための指定子であり、新しいコピーを取得する際に使用できるはずです。</target>
        </trans-unit>
        <trans-unit id="e449ac83cc856b2defd07e61131fc171c29c026d" translate="yes" xml:space="preserve">
          <source>This is a way to prevent accidental publication of private repositories. If you would like to ensure that a given package is only ever published to a specific registry (for example, an internal registry), then use the &lt;code&gt;publishConfig&lt;/code&gt; dictionary described below to override the &lt;code&gt;registry&lt;/code&gt; config param at publish-time.</source>
          <target state="translated">これは、プライベートリポジトリが誤って公開されるのを防ぐ方法です。特定のパッケージが特定のレジストリー（例えば、内部レジストリー）にのみ公開されるようにしたい場合は、以下で説明する &lt;code&gt;publishConfig&lt;/code&gt; 辞書を使用して、公開時に &lt;code&gt;registry&lt;/code&gt; 構成パラメーターをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="ff186700f8eda808ef6023e8220512975e47cd04" translate="yes" xml:space="preserve">
          <source>This is an unchangeable &quot;builtin&quot; configuration file that npm keeps consistent across updates. Set fields in here using the &lt;code&gt;./configure&lt;/code&gt; script that comes with npm. This is primarily for distribution maintainers to override default configs in a standard and consistent manner.</source>
          <target state="translated">これは、npmが更新全体で一貫性を維持する変更不可能な「組み込み」構成ファイルです。npmに付属の &lt;code&gt;./configure&lt;/code&gt; スクリプトを使用して、ここにフィールドを設定します。これは主にディストリビューションのメンテナーが標準的で一貫した方法でデフォルトの設定を上書きするためのものです。</target>
        </trans-unit>
        <trans-unit id="257bdb5341ef7b3a4a5c79f53e7ca2aeb7fc25cd" translate="yes" xml:space="preserve">
          <source>This is controlled by the &lt;code&gt;cache&lt;/code&gt; configuration param.</source>
          <target state="translated">これは、 &lt;code&gt;cache&lt;/code&gt; 構成パラメーターによって制御されます。</target>
        </trans-unit>
        <trans-unit id="f0a8d8604b3410f332367224e24a7b1770052ee9" translate="yes" xml:space="preserve">
          <source>This is documented better in &lt;a href=&quot;../cli/adduser&quot;&gt;npm-adduser&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;../cli/adduser&quot;&gt;npm-adduserで&lt;/a&gt;よりよく文書化されています。</target>
        </trans-unit>
        <trans-unit id="68095f39a4d445dcbb412bd2ba00c366fb728697" translate="yes" xml:space="preserve">
          <source>This is documented better in &lt;a href=&quot;../commands/npm-adduser&quot;&gt;npm adduser&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;../commands/npm-adduser&quot;&gt;npmadduserで詳しく説明されてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="4364b3a26943af286e9f2160e80de77a683ed336" translate="yes" xml:space="preserve">
          <source>This is handy for installing your own stuff, so that you can work on it and test it iteratively without having to continually rebuild.</source>
          <target state="translated">これは自分のものをインストールするのに便利なので、継続的に再構築することなく、作業してテストを繰り返していくことができます。</target>
        </trans-unit>
        <trans-unit id="ad89a0fda526d5d9919deb9854bdf29094467ae8" translate="yes" xml:space="preserve">
          <source>This is particularly handy in the case of git submodules in the &lt;code&gt;node_modules&lt;/code&gt; folder:</source>
          <target state="translated">これは、 &lt;code&gt;node_modules&lt;/code&gt; フォルダー内のgitサブモジュールの場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="9e0c6f524b24dd8e1f80b4713407f0b266f6d95b" translate="yes" xml:space="preserve">
          <source>This is the behavior as of &lt;code&gt;npm&lt;/code&gt; major version 2. A change in this behavior will be accompanied by an increase in major version number</source>
          <target state="translated">これは、 &lt;code&gt;npm&lt;/code&gt; メジャーバージョン2での動作です。この動作が変更されると、メジャーバージョン番号が増加します。</target>
        </trans-unit>
        <trans-unit id="7423430bb5188f8ff76b904f0bb66ed9dbc051e1" translate="yes" xml:space="preserve">
          <source>This is the best way to avoid permissions issues. This is described in &lt;a href=&quot;installing-node&quot;&gt;Chapter 2&lt;/a&gt;. You do not need to remove your current version of npm or Node.js before installing a node version manager.</source>
          <target state="translated">これは、権限の問題を回避するための最良の方法です。これについては、&lt;a href=&quot;installing-node&quot;&gt;第2章&lt;/a&gt;で説明します。ノードバージョンマネージャーをインストールする前に、現在のバージョンのnpmまたはNode.jsを削除する必要はありません。</target>
        </trans-unit>
        <trans-unit id="57d705cfc1e89ccf94ea7c4c9924f8648f5d9c56" translate="yes" xml:space="preserve">
          <source>This is the best way to avoid permissions issues. To reinstall npm with a node version manager, follow the steps in &quot;&lt;a href=&quot;downloading-and-installing-node-js-and-npm&quot;&gt;Downloading and installing Node.js and npm&lt;/a&gt;&quot;. You do not need to remove your current version of npm or Node.js before installing a node version manager.</source>
          <target state="translated">これは、権限の問題を回避するための最良の方法です。ノードバージョンマネージャーを使用してnpmを再インストールするには、「&lt;a href=&quot;downloading-and-installing-node-js-and-npm&quot;&gt;Node.jsとnpmのダウンロードとインストール&lt;/a&gt;」の手順に従います。ノードバージョンマネージャーをインストールする前に、現在のバージョンのnpmまたはNode.jsを削除する必要はありません。</target>
        </trans-unit>
        <trans-unit id="ba329a270ec5148d151bb748ad2fe50ea67d6271" translate="yes" xml:space="preserve">
          <source>This is the plumbing command called by &lt;code&gt;npm link&lt;/code&gt; and &lt;code&gt;npm install&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;npm link&lt;/code&gt; および &lt;code&gt;npm install&lt;/code&gt; によって呼び出されるplumbコマンドです。</target>
        </trans-unit>
        <trans-unit id="09c18108230aab196ff3ec8ef195dcabb71a439a" translate="yes" xml:space="preserve">
          <source>This is the stream that is passed to the &lt;a href=&quot;https://github.com/npm/npmlog&quot;&gt;npmlog&lt;/a&gt; module at run time.</source>
          <target state="translated">これは、実行時に&lt;a href=&quot;https://github.com/npm/npmlog&quot;&gt;npmlog&lt;/a&gt;モジュールに渡されるストリームです。</target>
        </trans-unit>
        <trans-unit id="71dff68c93cef42a5b21a470c4419514c2cd3f9a" translate="yes" xml:space="preserve">
          <source>This is used to mark a token as unable to publish when configuring limited access tokens with the &lt;code&gt;npm token create&lt;/code&gt; command.</source>
          <target state="translated">これは、 &lt;code&gt;npm token create&lt;/code&gt; コマンドで制限付きアクセストークンを構成するときに、トークンを発行不可としてマークするために使用されます。</target>
        </trans-unit>
        <trans-unit id="f8473e63dc44ccff1011bd915ed55e9dc6f3b4be" translate="yes" xml:space="preserve">
          <source>This lets you list, create and revoke authentication tokens.</source>
          <target state="translated">これにより、認証トークンの一覧表示、作成、取り消しを行うことができます。</target>
        </trans-unit>
        <trans-unit id="40e13c80aba01cb893e194f23ac1979e420fed19" translate="yes" xml:space="preserve">
          <source>This list you list, create and revoke authentication tokens.</source>
          <target state="translated">このリストは、認証トークンをリストアップし、作成し、失効させます。</target>
        </trans-unit>
        <trans-unit id="cc7f3324e79ad31f41c8bdff3885abceb201c39b" translate="yes" xml:space="preserve">
          <source>This makes it easy to view information about a dependency with a bit of shell scripting. For example, to view all the data about the version of opts that ronn depends on, you can do this:</source>
          <target state="translated">これにより、少しのシェルスクリプトで依存関係の情報を簡単に見ることができます。例えば、ronn が依存している opts のバージョンに関するすべてのデータを表示するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="8302857ae239511ae56378078f0299bc185044a0" translate="yes" xml:space="preserve">
          <source>This may simply reinstall the current version, depending on the development cycle. Also, this early version is not final. So features may or may not match what is ultimately released.</source>
          <target state="translated">開発サイクルによっては、単に現在のバージョンを再インストールするだけの場合もあります。また、この初期バージョンは最終的なものではありません。そのため、機能は最終的にリリースされるものと一致するかどうかはわかりません。</target>
        </trans-unit>
        <trans-unit id="ad0afaeaa5bdd39a6005b88aa11909bdfe5a0e17" translate="yes" xml:space="preserve">
          <source>This method will generate a default &lt;code&gt;package.json&lt;/code&gt; using information extracted from the current directory.</source>
          <target state="translated">このメソッドは、現在のディレクトリから抽出された情報を使用してデフォルトの &lt;code&gt;package.json&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="34fe2aae0e18521e938d3f8c677fbb9810716698" translate="yes" xml:space="preserve">
          <source>This option can also be changed using the environment: colors are disabled when the environment variable &lt;code&gt;NO_COLOR&lt;/code&gt; is set to any value.</source>
          <target state="translated">このオプションは、環境を使用して変更することもできます。環境変数 &lt;code&gt;NO_COLOR&lt;/code&gt; が任意の値に設定されている場合、色は無効になります。</target>
        </trans-unit>
        <trans-unit id="cbf582e11b4019a2673af987dc94c185c5933bd6" translate="yes" xml:space="preserve">
          <source>This option is an alias for &lt;code&gt;--package-lock&lt;/code&gt;.</source>
          <target state="translated">このオプションは &lt;code&gt;--package-lock&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="d9ee7dd0669df7373c9fb52cfd302a7475587066" translate="yes" xml:space="preserve">
          <source>This option is an alias for &lt;code&gt;--shrinkwrap&lt;/code&gt;.</source>
          <target state="translated">このオプションは &lt;code&gt;--shrinkwrap&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="4c7fee1b67c75e3099d8f72b4297d5fb08c120d5" translate="yes" xml:space="preserve">
          <source>This option is effectively equivalent to &lt;code&gt;--cache-min=9999999&lt;/code&gt;.</source>
          <target state="translated">このオプションは、実質的に &lt;code&gt;--cache-min=9999999&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="771a6a4bf1bdcbfa21f8ea707eb42eb3f218e0ad" translate="yes" xml:space="preserve">
          <source>This option used to trigger an npm warning, but it will no longer warn. It is purely there for informational purposes. It is now recommended that you install any binaries as local devDependencies wherever possible.</source>
          <target state="translated">このオプションを使うと npm の警告が出ていましたが、警告が出なくなります。これは純粋に情報提供を目的としたものです。現在では、可能な限りローカルの devDependencies としてバイナリをインストールすることが推奨されています。</target>
        </trans-unit>
        <trans-unit id="fcf9c0da724362b581afa81ee847aab9d5c34b1c" translate="yes" xml:space="preserve">
          <source>This part's easy. In the root of your folder, do this:</source>
          <target state="translated">この部分は簡単です。フォルダのルートでは、次のようにします。</target>
        </trans-unit>
        <trans-unit id="6bbd8e276a4159fac820c625298fc7189245e2de" translate="yes" xml:space="preserve">
          <source>This problem will happen if you're running Node 0.6. Please upgrade to node 0.8 or above. &lt;a href=&quot;http://blog.npmjs.org/post/71267056460/fastly-manta-loggly-and-couchdb-attachments&quot;&gt;See this post for details&lt;/a&gt;.</source>
          <target state="translated">この問題は、Node 0.6を実行している場合に発生します。ノード0.8以上にアップグレードしてください。&lt;a href=&quot;http://blog.npmjs.org/post/71267056460/fastly-manta-loggly-and-couchdb-attachments&quot;&gt;詳細については、この投稿を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ee74331feafac91a05b8e5be7200e8901e92a72" translate="yes" xml:space="preserve">
          <source>This removes a package version from the registry, deleting its entry and removing the tarball.</source>
          <target state="translated">これは、レジストリからパッケージのバージョンを削除し、そのエントリを削除し、tarballを削除します。</target>
        </trans-unit>
        <trans-unit id="12a37ea01230d23aafb6523d4c74044ad3a8f34c" translate="yes" xml:space="preserve">
          <source>This restarts a package.</source>
          <target state="translated">パッケージを再起動します。</target>
        </trans-unit>
        <trans-unit id="9dc75cb445670fe9e6669ed2f46d19cfd4c1c2e6" translate="yes" xml:space="preserve">
          <source>This runs a package's &quot;stop&quot; script, if one was provided.</source>
          <target state="translated">これは、パッケージの &quot;stop&quot; スクリプトが提供されていた場合に実行します。</target>
        </trans-unit>
        <trans-unit id="aff3ce91fc5b456695463a665e153c9e161ea296" translate="yes" xml:space="preserve">
          <source>This runs a package's &quot;stop&quot;, &quot;restart&quot;, and &quot;start&quot; scripts, and associated pre- and post- scripts, in the order given below:</source>
          <target state="translated">これは、パッケージの &quot;stop&quot;、&quot;restart&quot;、&quot;start&quot; スクリプト、および関連する前後のスクリプトを、以下の順序で実行します。</target>
        </trans-unit>
        <trans-unit id="48e6b1632cd383a73553bf932f086c6bdb1e9a94" translate="yes" xml:space="preserve">
          <source>This runs a package's &quot;test&quot; script, if one was provided.</source>
          <target state="translated">これは、パッケージの &quot;test&quot; スクリプトが提供されていた場合に実行します。</target>
        </trans-unit>
        <trans-unit id="dd76ad3bff85d8a1e881fa456da6b8ab82874de9" translate="yes" xml:space="preserve">
          <source>This runs all your tests, and proceeds only if they pass. Then runs your &lt;code&gt;build&lt;/code&gt; script, and adds everything in the &lt;code&gt;dist&lt;/code&gt; directory to the commit. After the commit, it pushes the new commit and tag up to the server, and deletes the &lt;code&gt;build/temp&lt;/code&gt; directory.</source>
          <target state="translated">これはすべてのテストを実行し、テストが成功した場合にのみ続行されます。次に &lt;code&gt;build&lt;/code&gt; スクリプトを実行し、 &lt;code&gt;dist&lt;/code&gt; ディレクトリ内のすべてをコミットに追加します。コミット後、新しいコミットとタグをサーバーにプッシュし、 &lt;code&gt;build/temp&lt;/code&gt; ディレクトリを削除します。</target>
        </trans-unit>
        <trans-unit id="7a114d4bbbd9b5675d3bb0e1a8b6e976d027ac3d" translate="yes" xml:space="preserve">
          <source>This runs an arbitrary command from a package's &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; object. If no &lt;code&gt;&quot;command&quot;&lt;/code&gt; is provided, it will list the available scripts. &lt;code&gt;run[-script]&lt;/code&gt; is used by the test, start, restart, and stop commands, but can be called directly, as well. When the scripts in the package are printed out, they're separated into lifecycle (test, start, restart) and directly-run scripts.</source>
          <target state="translated">これにより、パッケージの &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; オブジェクトから任意のコマンドが実行されます。 &lt;code&gt;&quot;command&quot;&lt;/code&gt; が指定されていない場合は、使用可能なスクリプトが一覧表示されます。 &lt;code&gt;run[-script]&lt;/code&gt; は、test、start、restart、stopコマンドで使用されますが、直接呼び出すこともできます。パッケージ内のスクリプトが出力されると、それらはライフサイクル（テスト、開始、再起動）と直接実行されるスクリプトに分けられます。</target>
        </trans-unit>
        <trans-unit id="3b96df407084bb4489bb168c6b18563227148506" translate="yes" xml:space="preserve">
          <source>This runs an arbitrary command specified in the package's &lt;code&gt;&quot;start&quot;&lt;/code&gt; property of its &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; object. If no &lt;code&gt;&quot;start&quot;&lt;/code&gt; property is specified on the &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; object, it will run &lt;code&gt;node server.js&lt;/code&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; オブジェクトのパッケージの &lt;code&gt;&quot;start&quot;&lt;/code&gt; プロパティで指定された任意のコマンドが実行されます。 &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; オブジェクトに &lt;code&gt;&quot;start&quot;&lt;/code&gt; プロパティが指定されていない場合、 &lt;code&gt;node server.js&lt;/code&gt; が実行されます。</target>
        </trans-unit>
        <trans-unit id="e82ca1aa29d752884e07f65e5332f81d3535d538" translate="yes" xml:space="preserve">
          <source>This shortcut is only used if the exact same version would be installed in multiple nested &lt;code&gt;node_modules&lt;/code&gt; folders. It is still possible to have &lt;code&gt;a/node_modules/b/node_modules/a&lt;/code&gt; if the two &quot;a&quot; packages are different versions. However, without repeating the exact same package multiple times, an infinite regress will always be prevented.</source>
          <target state="translated">このショートカットは、まったく同じバージョンが複数のネストされた &lt;code&gt;node_modules&lt;/code&gt; フォルダーにインストールされる場合にのみ使用されます。2つの &quot;a&quot;パッケージのバージョンが異なる場合でも、 &lt;code&gt;a/node_modules/b/node_modules/a&lt;/code&gt; が存在する可能性があります。ただし、まったく同じパッケージを複数回繰り返すことなく、無限の退行が常に防止されます。</target>
        </trans-unit>
        <trans-unit id="373d1983807bf660f9499a1f6e3bafdbd791989d" translate="yes" xml:space="preserve">
          <source>This should be a module ID relative to the root of your package folder.</source>
          <target state="translated">これは、パッケージフォルダのルートからの相対的なモジュール ID でなければなりません。</target>
        </trans-unit>
        <trans-unit id="23510bf5254363a524d2a98aac857a89b3b51a22" translate="yes" xml:space="preserve">
          <source>This tarball will be downloaded and installed locally to your package at install time.</source>
          <target state="translated">この tarball は、インストール時にローカルにダウンロードされ、パッケージにインストールされます。</target>
        </trans-unit>
        <trans-unit id="b8e7235eb8825b4f7ff8de4acebc1a8f813fd556" translate="yes" xml:space="preserve">
          <source>This uninstalls a package, completely removing everything npm installed on its behalf.</source>
          <target state="translated">これはパッケージをアンインストールし、その代わりにインストールされた npm を完全に削除します。</target>
        </trans-unit>
        <trans-unit id="26ec378f86894ca35f3bd82abe04c61935c97992" translate="yes" xml:space="preserve">
          <source>This will build the Docker image with the current &lt;code&gt;NPM_TOKEN&lt;/code&gt; environment variable, so you can run &lt;code&gt;npm install&lt;/code&gt; inside your container as the current logged-in user.</source>
          <target state="translated">これは、現在でドッカーイメージを構築します &lt;code&gt;NPM_TOKEN&lt;/code&gt; のあなたが実行できるように、環境変数 &lt;code&gt;npm install&lt;/code&gt; 電流がログインしているように、ユーザーごコンテナ内。</target>
        </trans-unit>
        <trans-unit id="748973292b14f2ddc623267fa1874f5d9db195d4" translate="yes" xml:space="preserve">
          <source>This will configure the authenticator app for future use, linking authentication to the device that generated the authentication.</source>
          <target state="translated">これは、認証を生成したデバイスに認証をリンクさせて、将来使用するための認証アプリを設定します。</target>
        </trans-unit>
        <trans-unit id="b682c432d3dcc549085fc91526f2a4f314891848" translate="yes" xml:space="preserve">
          <source>This will create the &lt;code&gt;node_modules&lt;/code&gt; directory in your current directory (if one doesn't exist yet) and will download the package to that directory.</source>
          <target state="translated">これにより、現在のディレクトリに &lt;code&gt;node_modules&lt;/code&gt; ディレクトリが作成され（まだ存在しない場合）、パッケージがそのディレクトリにダウンロードされます。</target>
        </trans-unit>
        <trans-unit id="781435fd775dd7fac2232cef7236ca5ea2b1c736" translate="yes" xml:space="preserve">
          <source>This will ensure that all requests to that registry (including for tarballs) include an authorization header. This setting may be necessary for use with private registries where metadata and package tarballs are stored on hosts with different hostnames. See &lt;code&gt;always-auth&lt;/code&gt; in &lt;a href=&quot;../using-npm/config&quot;&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt; for more details on always-auth. Registry-specific configuration of &lt;code&gt;always-auth&lt;/code&gt; takes precedence over any global configuration.</source>
          <target state="translated">これにより、そのレジストリへのすべてのリクエスト（tarballを含む）に認証ヘッダーが含まれるようになります。この設定は、メタデータとパッケージtarballが異なるホスト名のホストに保存されているプラ​​イベートレジストリで使用するために必要になる場合があります。 &lt;code&gt;always-auth&lt;/code&gt; の詳細については、&lt;a href=&quot;../using-npm/config&quot;&gt; &lt;code&gt;config&lt;/code&gt; の&lt;/a&gt;always-authを参照してください。 &lt;code&gt;always-auth&lt;/code&gt; のレジストリ固有の構成は、どのグローバル構成よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="9e37f29dc4dc6aed578fb83140595abfd0b248e1" translate="yes" xml:space="preserve">
          <source>This will ensure that all requests to that registry (including for tarballs) include an authorization header. This setting may be necessary for use with private registries where metadata and package tarballs are stored on hosts with different hostnames. See &lt;code&gt;always-auth&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for more details on always-auth. Registry-specific configuration of &lt;code&gt;always-auth&lt;/code&gt; takes precedence over any global configuration.</source>
          <target state="translated">これにより、そのレジストリ（tarballを含む）へのすべてのリクエストに認証ヘッダーが含まれるようになります。この設定は、メタデータとパッケージのtarballが異なるホスト名のホストに格納されているプラ​​イベートレジストリで使用するために必要になる場合があります。 &lt;code&gt;always-auth&lt;/code&gt; の詳細については、 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; の always-authを参照してください。 &lt;code&gt;always-auth&lt;/code&gt; のレジストリ固有の構成は、グローバル構成よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="1b4126a01707abe3058a43f67a41639c36271a30" translate="yes" xml:space="preserve">
          <source>This will initiate a command line questionnaire that will conclude with the creation of a &lt;code&gt;package.json&lt;/code&gt; in the directory in which you initiated the command.</source>
          <target state="translated">これにより、コマンドラインアンケートが開始され、コマンドを開始したディレクトリに &lt;code&gt;package.json&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="d5bbf10d29e638c1a0b5d1ea8ba9ef08e0c39fbb" translate="yes" xml:space="preserve">
          <source>This will install the latest official, tested version of npm.</source>
          <target state="translated">これにより、最新の公式でテスト済みの npm がインストールされます。</target>
        </trans-unit>
        <trans-unit id="4bcb26b1de4541fccf11e6a65d20afa18705bcfe" translate="yes" xml:space="preserve">
          <source>This will set a registry for the given scope and login or create a user for that registry at the same time.</source>
          <target state="translated">これは、指定されたスコープのレジストリを設定し、同時にそのレジストリにログインしたり、ユーザーを作成したりします。</target>
        </trans-unit>
        <trans-unit id="1727f67b8ec333f95a0d3cd861f211d6555e5b48" translate="yes" xml:space="preserve">
          <source>This will take your current &lt;code&gt;NPM_TOKEN&lt;/code&gt; environment variable, and will build the Docker image using it, so you can run &lt;code&gt;npm install&lt;/code&gt; inside your container as the current logged in user!</source>
          <target state="translated">これにより、現在の &lt;code&gt;NPM_TOKEN&lt;/code&gt; 環境変数が取得され、それを使用してDockerイメージが構築されるため、現在ログインしているユーザーとしてコンテナー内で &lt;code&gt;npm install&lt;/code&gt; を実行できます。</target>
        </trans-unit>
        <trans-unit id="c2afd928ecfcd806a61191e9358f58b5b8ab51e9" translate="yes" xml:space="preserve">
          <source>Those styles are now deprecated. Instead, use SPDX expressions, like this:</source>
          <target state="translated">これらのスタイルは現在非推奨となっています。代わりに、以下のような SPDX 式を使用してください。</target>
        </trans-unit>
        <trans-unit id="0916441ad783a87e30d316fcaea1d056077abb4f" translate="yes" xml:space="preserve">
          <source>Tilde Dependencies</source>
          <target state="translated">ティルデの依存性</target>
        </trans-unit>
        <trans-unit id="0311b706476c28be9f9b10725f2f7bb1889f2ce4" translate="yes" xml:space="preserve">
          <source>Tilde Ranges &lt;code&gt;~1.2.3&lt;/code&gt;&lt;code&gt;~1.2&lt;/code&gt;&lt;code&gt;~1&lt;/code&gt;</source>
          <target state="translated">範囲チルダ &lt;code&gt;~1.2.3&lt;/code&gt; &lt;code&gt;~1.2&lt;/code&gt; &lt;code&gt;~1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d019c5d218c02ce8717355d485f6244300fba5a1" translate="yes" xml:space="preserve">
          <source>Tilde Ranges ~1.2.3 ~1.2 ~1</source>
          <target state="translated">ティルデレンジ ~1.2.3 ~1.2 ~1</target>
        </trans-unit>
        <trans-unit id="8cbde09e348bda01a2ce54e6dac5da9fdabfcd9e" translate="yes" xml:space="preserve">
          <source>Tip: Consider npx</source>
          <target state="translated">ヒント。npxを考慮する</target>
        </trans-unit>
        <trans-unit id="9dbbbd72a6ab54a687a4fe175d562f171c5f6c99" translate="yes" xml:space="preserve">
          <source>To add a business name, VAT number, address of record, or other information to your receipts, in the &quot;Extra Billing Information&quot; text box, type the information.</source>
          <target state="translated">領収書に事業名、VAT番号、記録住所、その他の情報を追加するには、「追加請求情報」テキストボックスに情報を入力します。</target>
        </trans-unit>
        <trans-unit id="1c835774d5ddc9fd8b69394380bf5b2014358a04" translate="yes" xml:space="preserve">
          <source>To add a collaborator to a package on the command line, run the following command, replacing &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; with the npm username of your collaborator, and &lt;code&gt;&amp;lt;your-package-name&amp;gt;&lt;/code&gt; with the name of the private package:</source>
          <target state="translated">コマンドラインでコラボレーターをパッケージに追加するには、次のコマンドを実行し、 &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; をコラボレーターのnpmユーザー名に置き換え、 &lt;code&gt;&amp;lt;your-package-name&amp;gt;&lt;/code&gt; をプライベートパッケージの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="b2c119d2b25823fce1fb12a79239f3c5339fbebe" translate="yes" xml:space="preserve">
          <source>To add a tag to a specific version of your package, use:</source>
          <target state="translated">特定のバージョンのパッケージにタグを追加するには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="22dafd9e64160274090da42e7ea6887bb3d44e87" translate="yes" xml:space="preserve">
          <source>To add an entry to the &lt;code&gt;&quot;dependencies&quot;&lt;/code&gt; attribute of a &lt;code&gt;package.json&lt;/code&gt; file, on the command line, run the following command:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルの &lt;code&gt;&quot;dependencies&quot;&lt;/code&gt; 属性にエントリを追加するには、コマンドラインで次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="fc6fdfea3aa7fd38a3d7154ec5f001f189323c9c" translate="yes" xml:space="preserve">
          <source>To add an entry to the &lt;code&gt;&quot;devDependencies&quot;&lt;/code&gt; attribute of a &lt;code&gt;package.json&lt;/code&gt; file, on the command line, run the following command:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルの &lt;code&gt;&quot;devDependencies&quot;&lt;/code&gt; 属性にエントリを追加するには、コマンドラインで次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="8e5ff4a4d9dd27304bccb42bb8f843384d3e0b4b" translate="yes" xml:space="preserve">
          <source>To add an entry to your &lt;code&gt;package.json&lt;/code&gt;'s &lt;code&gt;dependencies&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;dependencies&lt;/code&gt; エントリを追加するには：</target>
        </trans-unit>
        <trans-unit id="0d02fb002872451e176a9fab2c864e3df5eb38b8" translate="yes" xml:space="preserve">
          <source>To add an entry to your &lt;code&gt;package.json&lt;/code&gt;'s &lt;code&gt;devDependencies&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;devDependencies&lt;/code&gt; にエントリを追加するには：</target>
        </trans-unit>
        <trans-unit id="607c6c864a5d8e65328670fd092898014dbb921d" translate="yes" xml:space="preserve">
          <source>To add custom fields, using a text editor, add desired fields to the &lt;code&gt;.npm-init.js&lt;/code&gt; file:</source>
          <target state="translated">テキストエディタを使用してカスタムフィールドを追加するには、必要なフィールドを &lt;code&gt;.npm-init.js&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="c51c6e8c785a7e63e75771560771aa6e384d5203" translate="yes" xml:space="preserve">
          <source>To add custom questions, using a text editor, add questions with the &lt;code&gt;prompt&lt;/code&gt; function:</source>
          <target state="translated">テキストエディタを使用してカスタム質問を追加するには、 &lt;code&gt;prompt&lt;/code&gt; 機能を使用して質問を追加します。</target>
        </trans-unit>
        <trans-unit id="d686f2a556c260865288f4aba5e30dfc808fac93" translate="yes" xml:space="preserve">
          <source>To add dependencies and devDependencies to a &lt;code&gt;package.json&lt;/code&gt; file from the command line, you can install them in the root directory of your package using the &lt;code&gt;--save-prod&lt;/code&gt; flag for dependencies (the default behavior of &lt;code&gt;npm install&lt;/code&gt;) or the &lt;code&gt;--save-dev&lt;/code&gt; flag for devDependencies.</source>
          <target state="translated">依存関係とdevDependenciesを追加するには &lt;code&gt;package.json&lt;/code&gt; のコマンドラインからファイルを、あなたが使用して、パッケージのルートディレクトリにそれらをインストールすることができます &lt;code&gt;--save-prod&lt;/code&gt; 依存関係のためのフラグ（のデフォルトの動作 &lt;code&gt;npm install&lt;/code&gt; ）または &lt;code&gt;--save-dev&lt;/code&gt; フラグ。</target>
        </trans-unit>
        <trans-unit id="10e7735fbc83f84b6af2bace1af9ecd61be6b82b" translate="yes" xml:space="preserve">
          <source>To add dependencies to a &lt;code&gt;package.json&lt;/code&gt; file, in a text editor, add an attribute called &lt;code&gt;&quot;dependencies&quot;&lt;/code&gt; that references the name and &lt;a href=&quot;about-semantic-versioning&quot;&gt;semantic version&lt;/a&gt; of each dependency:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルに依存関係を追加するには、テキストエディターで、各依存関係の名前と&lt;a href=&quot;about-semantic-versioning&quot;&gt;セマンティックバージョン&lt;/a&gt;を参照する &lt;code&gt;&quot;dependencies&quot;&lt;/code&gt; という属性を追加します。</target>
        </trans-unit>
        <trans-unit id="59398c2afd05a940e233800b4ddcc45b46923f3f" translate="yes" xml:space="preserve">
          <source>To add devDependencies to a &lt;code&gt;package.json&lt;/code&gt; file, in a text editor, add an attribute called &lt;code&gt;&quot;devDependencies&quot;&lt;/code&gt; that references the name and &lt;a href=&quot;about-semantic-versioning&quot;&gt;semantic version&lt;/a&gt; of each devDependency:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルにdevDependenciesを追加するには、テキストエディターで、各devDependencyの名前と&lt;a href=&quot;about-semantic-versioning&quot;&gt;セマンティックバージョン&lt;/a&gt;を参照する &lt;code&gt;&quot;devDependencies&quot;&lt;/code&gt; という属性を追加します。</target>
        </trans-unit>
        <trans-unit id="1fa6d2bde2268f5d8db2490e7138c3e8ac4b8c17" translate="yes" xml:space="preserve">
          <source>To add npm to your authenticator application, using the device with the app, you can either:</source>
          <target state="translated">認証アプリにnpmを追加するには、アプリを搭載したデバイスを使用して、次のいずれかの方法があります。</target>
        </trans-unit>
        <trans-unit id="4103dca4c2cd716c2565299064ec86301c23c78d" translate="yes" xml:space="preserve">
          <source>To add the &quot;stable&quot; tag to the 1.4.0 version of the &quot;example-package&quot; package, you would run the following command:</source>
          <target state="translated">example-package」パッケージの1.4.0バージョンに「stable」タグを追加するには、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="31adb12d94e8e1966811010e15bfe30e1e57b96d" translate="yes" xml:space="preserve">
          <source>To add the OTP to a command, append it as shown:</source>
          <target state="translated">コマンドにOTPを追加するには、以下のように追加します。</target>
        </trans-unit>
        <trans-unit id="c974a04119510dbe2cbce0de57dcef1b78e37bc6" translate="yes" xml:space="preserve">
          <source>To address the vulnerability, you can</source>
          <target state="translated">脆弱性に対処するには</target>
        </trans-unit>
        <trans-unit id="9c86b06418b2e88991107042d12c9223080232f0" translate="yes" xml:space="preserve">
          <source>To avoid this situation, npm flat-out refuses to install any &lt;code&gt;name@version&lt;/code&gt; that is already present anywhere in the tree of package folder ancestors. A more correct, but more complex, solution would be to symlink the existing version into the new location. If this ever affects a real use-case, it will be investigated.</source>
          <target state="translated">この状況を回避するために、npm flat-out は、パッケージフォルダーの祖先のツリーのどこかにすでに存在する &lt;code&gt;name@version&lt;/code&gt; インストールを拒否します。より正確ですが、より複雑な解決策は、既存のバージョンを新しい場所にシンボリックリンクすることです。これが実際のユースケースに影響を与える場合は、調査されます。</target>
        </trans-unit>
        <trans-unit id="690ca3738c32b497ba73b8763535a417e3dc4b0d" translate="yes" xml:space="preserve">
          <source>To be loaded by the Node.js &lt;code&gt;require()&lt;/code&gt; function, a module must be one of the following:</source>
          <target state="translated">Node.js &lt;code&gt;require()&lt;/code&gt; 関数によってロードされるためには、モジュールは次のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="bf0c379b46ec1b803a1bcd8e01aa79b3fc6710ae" translate="yes" xml:space="preserve">
          <source>To be sure that this matches the latest version, scroll to the bottom of this page. If the version you see does not match the latest version, run:</source>
          <target state="translated">これが最新バージョンと一致していることを確認するには、このページの一番下までスクロールしてください。表示されたバージョンが最新バージョンと一致しない場合は、実行してください。</target>
        </trans-unit>
        <trans-unit id="a0f9959da2f6f09aaf21d9b4a3dfdd216be6236e" translate="yes" xml:space="preserve">
          <source>To build the image using the above Dockerfile and the npm authentication token, you can run the following command. Note the &lt;code&gt;.&lt;/code&gt; at the end to give &lt;code&gt;docker build&lt;/code&gt; the current directory as an argument.</source>
          <target state="translated">上記のDockerfileとnpm認証トークンを使用してイメージをビルドするには、次のコマンドを実行できます。に注意してください &lt;code&gt;.&lt;/code&gt; 最後に、 &lt;code&gt;docker build&lt;/code&gt; に現在のディレクトリを引数としてビルドさせます。</target>
        </trans-unit>
        <trans-unit id="3857b9a7fafca000f247f57087243bf54ab8f343" translate="yes" xml:space="preserve">
          <source>To build the image using this Dockerfile and the token, you can run the following (note the &lt;code&gt;.&lt;/code&gt; at the end to give docker build the current directory as an argument):</source>
          <target state="translated">このDockerfileとトークンを使用してイメージをビルドするには、次のコマンドを実行できます（最後に &lt;code&gt;.&lt;/code&gt; を指定すると、Docker は現在のディレクトリを引数としてビルドします）。</target>
        </trans-unit>
        <trans-unit id="948b3495aa3b151173a0e95fdb4df43694dfe6eb" translate="yes" xml:space="preserve">
          <source>To change the version number in &lt;code&gt;package.json&lt;/code&gt;, on the command line, in the package root directory, run the following command, replacing &lt;code&gt;&amp;lt;update_type&amp;gt;&lt;/code&gt; with one of the &lt;a href=&quot;about-semantic-versioning&quot;&gt;semantic versioning&lt;/a&gt; release types (patch, major, or minor):</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; のバージョン番号を変更するには、コマンドラインのパッケージルートディレクトリで、次のコマンドを実行し、 &lt;code&gt;&amp;lt;update_type&amp;gt;&lt;/code&gt; を&lt;a href=&quot;about-semantic-versioning&quot;&gt;セマンティックバージョニング&lt;/a&gt;リリースタイプ（パッチ、メジャー、またはマイナー）のいずれかに置き換えます。</target>
        </trans-unit>
        <trans-unit id="0063fb4debeed997ebf5feea1e634cdd22f5a4dc" translate="yes" xml:space="preserve">
          <source>To change your email address, go to &lt;a href=&quot;https://www.npmjs.com/email-edit&quot;&gt;https://www.npmjs.com/email-edit&lt;/a&gt;</source>
          <target state="translated">メールアドレスを変更するには、&lt;a href=&quot;https://www.npmjs.com/email-edit&quot;&gt;https：//www.npmjs.com/email-editにアクセス&lt;/a&gt;してください</target>
        </trans-unit>
        <trans-unit id="2b60e65bcf41e031f97f9f4d144667fb82417472" translate="yes" xml:space="preserve">
          <source>To change your npm username, &lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;contact npm Support&lt;/a&gt;.</source>
          <target state="translated">npmユーザー名を変更するには、&lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;npmサポート&lt;/a&gt;に連絡してください。</target>
        </trans-unit>
        <trans-unit id="85502caaac75d61b2e4359d53efbcc171c4ac86e" translate="yes" xml:space="preserve">
          <source>To confirm that &lt;code&gt;npm install&lt;/code&gt; worked correctly, check to see that a &lt;code&gt;node_modules&lt;/code&gt; directory exists and that it contains a directory for the package(s) you installed.</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; が正しく機能したことを確認するには、 &lt;code&gt;node_modules&lt;/code&gt; ディレクトリが存在し、インストールしたパッケージのディレクトリが含まれていることを確認します。</target>
        </trans-unit>
        <trans-unit id="1235a720110a6bdb79be1a938b50239444621724" translate="yes" xml:space="preserve">
          <source>To confirm that &lt;code&gt;npm install&lt;/code&gt; worked correctly, in your module directory, check that a &lt;code&gt;node_modules&lt;/code&gt; directory exists and that it contains a directory for the package(s) you installed:</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; が正しく機能したことを確認するには、モジュールディレクトリに &lt;code&gt;node_modules&lt;/code&gt; ディレクトリが存在し、インストールしたパッケージのディレクトリが含まれていることを確認します。</target>
        </trans-unit>
        <trans-unit id="a4cf64085f34abb79ee4391d4f37fb2494b59880" translate="yes" xml:space="preserve">
          <source>To confirm that &lt;code&gt;npm uninstall&lt;/code&gt; worked correctly, check that the &lt;code&gt;node_modules&lt;/code&gt; directory no longer contains a directory for the uninstalled package(s).</source>
          <target state="translated">&lt;code&gt;npm uninstall&lt;/code&gt; 正しく機能したことを確認するには、 &lt;code&gt;node_modules&lt;/code&gt; ディレクトリにアンインストールされたパッケージのディレクトリが含まれていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="d96ddd6bbd9b00b075d4e0efe4a372e75f41cf72" translate="yes" xml:space="preserve">
          <source>To confirm that &lt;code&gt;npm uninstall&lt;/code&gt; worked correctly, find the &lt;code&gt;node_modules&lt;/code&gt; directory. Be sure that it no longer contains a directory for the package(s) you uninstalled.</source>
          <target state="translated">&lt;code&gt;npm uninstall&lt;/code&gt; 正しく機能したことを確認するには、 &lt;code&gt;node_modules&lt;/code&gt; ディレクトリを見つけます。アンインストールしたパッケージのディレクトリが含まれていないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="34e991bc0388be6cc35a3e6ef8a1709a489a6661" translate="yes" xml:space="preserve">
          <source>To confirm that the token has been removed, run:</source>
          <target state="translated">トークンが削除されたことを確認するには、実行します。</target>
        </trans-unit>
        <trans-unit id="a50ddc1207c6db7cd2315f080b7ad013ddd1a66d" translate="yes" xml:space="preserve">
          <source>To control access to the package click the &lt;code&gt;+&lt;/code&gt; button under &lt;code&gt;Collaborators&lt;/code&gt; .</source>
          <target state="translated">パッケージへのアクセスを制御するには、[ &lt;code&gt;Collaborators&lt;/code&gt; ]の下の[ &lt;code&gt;+&lt;/code&gt; ]ボタンをクリックします。</target>
        </trans-unit>
        <trans-unit id="a0fbc1d46450912f8901484f76a1c80c4171d546" translate="yes" xml:space="preserve">
          <source>To create &quot;pre&quot; or &quot;post&quot; scripts for any scripts defined in the &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; section of the &lt;code&gt;package.json&lt;/code&gt;, simply create another script &lt;em&gt;with a matching name&lt;/em&gt; and add &quot;pre&quot; or &quot;post&quot; to the beginning of them.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; セクションで定義されているスクリプトの「pre」または「post」スクリプトを作成するに&lt;em&gt;は、名前が一致&lt;/em&gt;する別のスクリプト&lt;em&gt;を&lt;/em&gt;作成&lt;em&gt;し、&lt;/em&gt;それらの先頭に「pre」または「post」を追加します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46df0dc130b4a5a1b719e5e51a313a9c84d2f0c8" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;package.json&lt;/code&gt; file with values that you supply, use the &lt;code&gt;npm init&lt;/code&gt; command.</source>
          <target state="translated">指定した値を使用して &lt;code&gt;package.json&lt;/code&gt; ファイルを作成するには、 &lt;code&gt;npm init&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="c9b959e1179fd3506b81d0ff5144a042e4f02179" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;package.json&lt;/code&gt; file, on the command line, in the root directory of your Node.js module, run &lt;code&gt;npm init&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルを作成するには、コマンドラインのNode.jsモジュールのルートディレクトリで、npminitを実行し &lt;code&gt;npm init&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76d2f65d2a01322a94aaa981c59a78104bcfcb2d" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;package.json&lt;/code&gt; with values that you supply, run:</source>
          <target state="translated">指定した値で &lt;code&gt;package.json&lt;/code&gt; を作成するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="4517997a1a3c0472241cfc7ec3d69c867b914f4c" translate="yes" xml:space="preserve">
          <source>To create a CIDR-restricted token that is also read-only, type:</source>
          <target state="translated">読み取り専用の CIDR 制限付きトークンを作成するには、次のようにタイプします。</target>
        </trans-unit>
        <trans-unit id="35e2dd77c68fb34a3054c5f39f5b5f227b0ead31" translate="yes" xml:space="preserve">
          <source>To create a default &lt;code&gt;package.json&lt;/code&gt; using information extracted from the current directory, use the &lt;code&gt;npm init&lt;/code&gt; command with the &lt;code&gt;--yes&lt;/code&gt; or &lt;code&gt;-y&lt;/code&gt; flag. For a list of default values, see &quot;&lt;a href=&quot;#default-values-extracted-from-the-current-directory&quot;&gt;Default values extracted from the current directory&lt;/a&gt;&quot;.</source>
          <target state="translated">デフォルト作成するには &lt;code&gt;package.json&lt;/code&gt; カレントディレクトリから抽出された情報を使用して、使用 &lt;code&gt;npm init&lt;/code&gt; を使用してコマンドを &lt;code&gt;--yes&lt;/code&gt; または &lt;code&gt;-y&lt;/code&gt; フラグ。デフォルト値のリストについては、「&lt;a href=&quot;#default-values-extracted-from-the-current-directory&quot;&gt;現在のディレクトリから抽出されたデフォルト値&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="a9e12f17a5f57c0fa953f7f8bca65b5f55d55f16" translate="yes" xml:space="preserve">
          <source>To create a new full permission token, type:</source>
          <target state="translated">新しい完全なパーミッショントークンを作成するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="0a360cf344e7d451af6aeba33b5aa6bcc575add8" translate="yes" xml:space="preserve">
          <source>To create a new read-only token, type:</source>
          <target state="translated">新しい読み取り専用トークンを作成するには、次のようにタイプします。</target>
        </trans-unit>
        <trans-unit id="47f3832f6c7d9017445807efdf99361fa0261b9c" translate="yes" xml:space="preserve">
          <source>To create a new token, on the command line, run:</source>
          <target state="translated">新しいトークンを作成するには、コマンドラインで実行します。</target>
        </trans-unit>
        <trans-unit id="9a9afb7f904ccd461797c6c17024838c2ef6b024" translate="yes" xml:space="preserve">
          <source>To create a package hook, simply reference the package name.</source>
          <target state="translated">パッケージフックを作成するには、パッケージ名を参照するだけです。</target>
        </trans-unit>
        <trans-unit id="8136c058682d707123b3ad0e46cf5ecf76013775" translate="yes" xml:space="preserve">
          <source>To create a profile for the public registry, on the command line, run &lt;code&gt;npmrc -c name-of-profile&lt;/code&gt;. For example, to create a profile called &quot;open-source&quot;, run &lt;code&gt;npmrc -c open-source&lt;/code&gt;.</source>
          <target state="translated">パブリックレジストリのプロファイルを作成するには、コマンドラインで &lt;code&gt;npmrc -c name-of-profile&lt;/code&gt; 実行します。たとえば、「オープンソース」というプロファイルを作成するには、 &lt;code&gt;npmrc -c open-source&lt;/code&gt; -sourceを実行します。</target>
        </trans-unit>
        <trans-unit id="5f7df03c3db27d2f5e2788e4ab80b1fae160ca54" translate="yes" xml:space="preserve">
          <source>To create a scope hook, prefix the scope name with &lt;code&gt;@&lt;/code&gt; (as in, &lt;code&gt;@yourscope&lt;/code&gt;).</source>
          <target state="translated">スコープフックを作成するには、スコープ名の前に &lt;code&gt;@&lt;/code&gt; を付けます（例： &lt;code&gt;@yourscope&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8b9fb96d1d3109bf3b77fceb6d9ae730825a8005" translate="yes" xml:space="preserve">
          <source>To create a scoped package, you simply use a package name that starts with your scope.</source>
          <target state="translated">スコープされたパッケージを作成するには、スコープで始まるパッケージ名を使用するだけです。</target>
        </trans-unit>
        <trans-unit id="1c94e873b30bb0da219e07e3c87c4463bc474d25" translate="yes" xml:space="preserve">
          <source>To create an npm Enterprise profile, on the command line, run &lt;code&gt;npmrc -c name-of-profile&lt;/code&gt;. For example, to create a profile called &quot;work&quot;, run the following command:</source>
          <target state="translated">npm Enterpriseプロファイルを作成するには、コマンドラインで &lt;code&gt;npmrc -c name-of-profile&lt;/code&gt; 実行します。たとえば、「work」というプロファイルを作成するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="2721799c2313bb117b080c8cdfa6ee7616d3bd47" translate="yes" xml:space="preserve">
          <source>To create an organization scoped package, on the command line, run:</source>
          <target state="translated">組織スコープ付きパッケージを作成するには、コマンドラインで実行します。</target>
        </trans-unit>
        <trans-unit id="fb6007f5213a1eef1ef10c8a70b3102112f3ecfa" translate="yes" xml:space="preserve">
          <source>To create an owner hook, prefix the owner name with &lt;code&gt;~&lt;/code&gt; (as in, &lt;code&gt;~youruser&lt;/code&gt;).</source>
          <target state="translated">所有者フックを作成するには、所有者名の前に &lt;code&gt;~&lt;/code&gt; （例： &lt;code&gt;~youruser&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a18661c1164c32f30f7fb1c1728b389fedc2e1f5" translate="yes" xml:space="preserve">
          <source>To create and publish private scoped packages, see &quot;&lt;a href=&quot;creating-and-publishing-private-packages&quot;&gt;Creating and publishing private packages&lt;/a&gt;&quot;.</source>
          <target state="translated">プライベートスコープパッケージを作成および公開するには、「&lt;a href=&quot;creating-and-publishing-private-packages&quot;&gt;プライベートパッケージの作成と公開&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="17de7a21f2d064d7452cc03b57f0697284aa8097" translate="yes" xml:space="preserve">
          <source>To create and publish public scoped packages, see &quot;&lt;a href=&quot;creating-and-publishing-scoped-public-packages&quot;&gt;Creating and publishing scoped public packages&lt;/a&gt;&quot;.</source>
          <target state="translated">&lt;a href=&quot;creating-and-publishing-scoped-public-packages&quot;&gt;スコープ付きパブリックパッケージ&lt;/a&gt;を作成および公開するには、「スコープ付きパブリックパッケージの作成および公開」を参照してください。</target>
        </trans-unit>
        <trans-unit id="7fdf05b9f2594921b3541b369f3c52d4eaf34fbd" translate="yes" xml:space="preserve">
          <source>To delete an organization in npm Enterprise, the npm Enterprise admin should &lt;a href=&quot;mailto:enterprise@npmjs.com&quot;&gt;contact Enterprise Support&lt;/a&gt;.</source>
          <target state="translated">npm Enterpriseで組織を削除するには、npmEnterprise管理者が&lt;a href=&quot;mailto:enterprise@npmjs.com&quot;&gt;Enterpriseサポートに連絡する&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="250ae1459cee3b3aa5ae4168f9822f7b95f5f8d2" translate="yes" xml:space="preserve">
          <source>To delete an organization on the public registry, the organization owner should &lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;contact npm Support&lt;/a&gt;.</source>
          <target state="translated">パブリックレジストリ上の組織を削除するには、組織の所有者は&lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;npmサポートに連絡する&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="7fba275ae7463d9ea0c712fb7261f96a8c0d567c" translate="yes" xml:space="preserve">
          <source>To delete the old authenticator account, follow the steps for the authenticator.</source>
          <target state="translated">古い認証者アカウントを削除するには、認証者の手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="ab0e3b8e9a0ca6f4a9cec17b924f1f81dfe64237" translate="yes" xml:space="preserve">
          <source>To delete your npm user account, &lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;contact npm Support&lt;/a&gt;.</source>
          <target state="translated">npmユーザーアカウントを削除するには、&lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;npmサポート&lt;/a&gt;に連絡してください。</target>
        </trans-unit>
        <trans-unit id="12d66806407b3cea4ca598f095416d2463f9c685" translate="yes" xml:space="preserve">
          <source>To deprecate a package version, run the following command, replacing &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; with the name of your package, &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; with your version number, and &lt;code&gt;&quot;&amp;lt;message&amp;gt;&quot;&lt;/code&gt; with your deprecation message:</source>
          <target state="translated">パッケージバージョンを非推奨にするには、次のコマンドを実行し、 &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; をパッケージの名前に、 &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; をバージョン番号に、 &lt;code&gt;&quot;&amp;lt;message&amp;gt;&quot;&lt;/code&gt; を非推奨メッセージに置き換えます。</target>
        </trans-unit>
        <trans-unit id="a1e2e36860ceeea84b14566710ed2379a444af28" translate="yes" xml:space="preserve">
          <source>To deprecate an entire package, run the following command, replacing &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; with the name of your package, and &lt;code&gt;&quot;&amp;lt;message&amp;gt;&quot;&lt;/code&gt; with your deprecation message:</source>
          <target state="translated">パッケージ全体を非推奨にするには、次のコマンドを実行し、 &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; をパッケージの名前に置き換え、 &lt;code&gt;&quot;&amp;lt;message&amp;gt;&quot;&lt;/code&gt; を非推奨メッセージに置き換えます。</target>
        </trans-unit>
        <trans-unit id="de4478fa75e6bfdb487d391d2a25316c91f04c1a" translate="yes" xml:space="preserve">
          <source>To do this, you create a custom &lt;code&gt;.npm-init.js&lt;/code&gt; in your home directory &lt;code&gt;~/.npm-init.js&lt;/code&gt;.</source>
          <target state="translated">これを行うには、ホームディレクトリ &lt;code&gt;~/.npm-init.js&lt;/code&gt; カスタム &lt;code&gt;.npm-init.js&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="fc8b21803a373e1625d2767ea29ed30536cc629d" translate="yes" xml:space="preserve">
          <source>To do this:</source>
          <target state="translated">そのためには</target>
        </trans-unit>
        <trans-unit id="0b6bda05961c3b0f6386f831c482fa6ba71e6a29" translate="yes" xml:space="preserve">
          <source>To download a single receipt, find the row of the receipt you want to download, then click the PDF icon on the right side of the row.</source>
          <target state="translated">1枚の領収書をダウンロードするには、ダウンロードしたい領収書の行を見つけて、行の右側にあるPDFアイコンをクリックします。</target>
        </trans-unit>
        <trans-unit id="e48e1993a2af51da892fe882c296ce39f1f0b393" translate="yes" xml:space="preserve">
          <source>To download and install packages globally, on the command line, run the following command:</source>
          <target state="translated">グローバルにパッケージをダウンロードしてインストールするには、コマンドラインで以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="f45f514ba0d278371fa62a4e450be9a709ce0471" translate="yes" xml:space="preserve">
          <source>To download multiple receipts, first select the receipts that you wish to download by selecting the box next to the date. To select all receipts, select the checkbox next to the &quot;Date&quot; header. Then click &lt;strong&gt;Download Checked&lt;/strong&gt;.</source>
          <target state="translated">複数の領収書をダウンロードするには、最初に日付の横にあるボックスを選択して、ダウンロードする領収書を選択します。すべての領収書を選択するには、[日付]ヘッダーの横にあるチェックボックスを選択します。次に、[&lt;strong&gt;チェック済みのダウンロード&lt;/strong&gt;]をクリックします。</target>
        </trans-unit>
        <trans-unit id="9e14c90b7d3362753a7a9e2d85998ebdc1d162f1" translate="yes" xml:space="preserve">
          <source>To download packages globally, use the command &lt;code&gt;npm install -g &amp;lt;package&amp;gt;&lt;/code&gt;, e.g.:</source>
          <target state="translated">パッケージをグローバルにダウンロードするには、コマンド &lt;code&gt;npm install -g &amp;lt;package&amp;gt;&lt;/code&gt; を使用します。例：</target>
        </trans-unit>
        <trans-unit id="1c97265013b49461ffd582b844ebb2aa4a3f656d" translate="yes" xml:space="preserve">
          <source>To email a single receipt, find the row of the receipt you want to download, then, on the right side of the row, click the email icon.</source>
          <target state="translated">1つの領収書を電子メールで送信するには、ダウンロードしたい領収書の行を探して、行の右側にある電子メールアイコンをクリックします。</target>
        </trans-unit>
        <trans-unit id="5968ac8fb0681cc4c4730dcb5e0965c409a6c23c" translate="yes" xml:space="preserve">
          <source>To email multiple receipts, first select the receipts that you wish to download by selecting the box next to the date. To select all receipts, select the checkbox next to the &quot;Date&quot; header. Then click &lt;strong&gt;Email Checked&lt;/strong&gt;.</source>
          <target state="translated">複数の領収書をメールで送信するには、最初に日付の横にあるボックスを選択して、ダウンロードする領収書を選択します。すべての領収書を選択するには、[日付]ヘッダーの横にあるチェックボックスを選択します。次に、[&lt;strong&gt;チェック済みメール&lt;/strong&gt;]をクリックします。</target>
        </trans-unit>
        <trans-unit id="0161dee7431aff5de3f5185b2bf096ac6ed91e78" translate="yes" xml:space="preserve">
          <source>To enable 2FA for authorization and writes, type:</source>
          <target state="translated">認証と書き込みの2FAを有効にするには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="9b448723b0e8dcb7e6a417e485610c5f9a683c36" translate="yes" xml:space="preserve">
          <source>To enable 2FA for authorization only, type:</source>
          <target state="translated">認証のみのために 2FA を有効にするには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="63fc76e73e3b6f05a98bbd010ce6695dfcbdab8f" translate="yes" xml:space="preserve">
          <source>To enable 2FA with your npm account, you will need an application that can generate a One Time Password, or OTP. For example, &lt;a href=&quot;https://authy.com/download/&quot;&gt;Authy&lt;/a&gt; or &lt;a href=&quot;https://support.google.com/accounts/answer/1066447&quot;&gt;Google Authenticator&lt;/a&gt;, can generate one time passwords (OTP's). These products use a Time-Based One-Time Password Algorithm (TOTP) to create temporary codes. Install the application on a mobile device or a second laptop that will always be available when you work in your npm account. (Note: npm does not use SMS (text-to-phone) as a method for authenticating users.)</source>
          <target state="translated">npmアカウントで2FAを有効にするには、ワンタイムパスワード（OTP）を生成できるアプリケーションが必要です。たとえば、&lt;a href=&quot;https://authy.com/download/&quot;&gt;Authy&lt;/a&gt;または&lt;a href=&quot;https://support.google.com/accounts/answer/1066447&quot;&gt;Google Authenticatorは&lt;/a&gt;、ワンタイムパスワード（OTP）を生成できます。これらの製品は、時間ベースのワンタイムパスワードアルゴリズム（TOTP）を使用して一時コードを作成します。npmアカウントで作業するときに常に使用できるモバイルデバイスまたは2番目のラップトップにアプリケーションをインストールします。（注：npmは、ユーザーを認証する方法としてSMS（text-to-phone）を使用しません。）</target>
        </trans-unit>
        <trans-unit id="048d6a42a75dfe7f68914f41c1c69b9b3a348778" translate="yes" xml:space="preserve">
          <source>To enable, configure, and disable two-factor authentication from the command line, see &quot;&lt;a href=&quot;configuring-two-factor-authentication#configuring-2fa-from-the-command-line&quot;&gt;Configuring two-factor authentication&lt;/a&gt;&quot;.</source>
          <target state="translated">コマンドラインから2要素認証を有効、構成、および無効にするには、「&lt;a href=&quot;configuring-two-factor-authentication#configuring-2fa-from-the-command-line&quot;&gt;2要素認証の構成&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="14fcc06c7e3b80bf3b70e3de183c87845f4b3563" translate="yes" xml:space="preserve">
          <source>To ensure the integrity of a package version you download from the npm public registry, you can manually verify the &lt;a href=&quot;about-pgp-signatures-for-packages-in-the-public-registry&quot;&gt;PGP signature&lt;/a&gt; of the package.</source>
          <target state="translated">npmパブリックレジストリからダウンロードしたパッケージバージョンの整合性を確保するために、パッケージの&lt;a href=&quot;about-pgp-signatures-for-packages-in-the-public-registry&quot;&gt;PGP署名&lt;/a&gt;を手動で確認できます。</target>
        </trans-unit>
        <trans-unit id="cdc99680a6937915aa1331d5ffe6b16de5bd7858" translate="yes" xml:space="preserve">
          <source>To explore additional features and options, click &lt;a href=&quot;https://www.npmjs.com/pricing&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">その他の機能とオプションを確認するには、ここをクリックして&lt;a href=&quot;https://www.npmjs.com/pricing&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fa04b0334b00b1f97b6ecb1fcf982befc78d35e" translate="yes" xml:space="preserve">
          <source>To facilitate greater visibility of tree changes through readable source control diffs.</source>
          <target state="translated">読み取り可能なソース制御の diff を使用して、ツリーの変更をより可視化できるようにしました。</target>
        </trans-unit>
        <trans-unit id="2efe369eb70f54a9afc521cfc44cde5a345b625f" translate="yes" xml:space="preserve">
          <source>To find out more about node modules and packages, see &lt;a href=&quot;packages&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">ノードモジュールとパッケージの詳細については、&lt;a href=&quot;packages&quot;&gt;ここを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f7967e9ddf253b50346833f97cfd616804351df0" translate="yes" xml:space="preserve">
          <source>To find out which packages need to be updated, type:</source>
          <target state="translated">どのパッケージを更新する必要があるかを調べるには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="da76c523220602aede1d01e0ba911bc0e1cda48f" translate="yes" xml:space="preserve">
          <source>To find packages, start with the npm &lt;a href=&quot;https://www.npmjs.com&quot;&gt;search bar&lt;/a&gt;.</source>
          <target state="translated">パッケージを検索するには、npm &lt;a href=&quot;https://www.npmjs.com&quot;&gt;検索バー&lt;/a&gt;から始めます。</target>
        </trans-unit>
        <trans-unit id="005271320fc5d0e9cd1b6c4c31e79044771b9f30" translate="yes" xml:space="preserve">
          <source>To find the package that must be updated, check the &quot;Path&quot; field for the location of the package with the vulnerability, then check for the package that depends on it. For example, if the path to the vulnerability is &lt;code&gt;@package-name &amp;gt; dependent-package &amp;gt; package-with-vulnerability&lt;/code&gt;, you will need to update &lt;code&gt;dependent-package&lt;/code&gt;.</source>
          <target state="translated">更新する必要があるパッケージを見つけるには、脆弱性のあるパッケージの場所の「パス」フィールドを確認してから、それに依存するパッケージを確認します。たとえば、脆弱性へのパスが &lt;code&gt;@package-name &amp;gt; dependent-package &amp;gt; package-with-vulnerability&lt;/code&gt; である場合は、 &lt;code&gt;dependent-package&lt;/code&gt; を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="fb14dcec2ffcc6ffbf80622f1247726455554450" translate="yes" xml:space="preserve">
          <source>To fix this, run &lt;code&gt;npm install lodash&lt;/code&gt; in the same directory as your &lt;code&gt;index.js&lt;/code&gt;.</source>
          <target state="translated">これを修正するには、 &lt;code&gt;index.js&lt;/code&gt; と同じディレクトリで &lt;code&gt;npm install lodash&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="835a8c1d5bd125a1ea623da278d752a78cb9d201" translate="yes" xml:space="preserve">
          <source>To generate PGP signatures, we use &lt;a href=&quot;https://github.com/openpgpjs/openpgpjs&quot;&gt;openpgpjs&lt;/a&gt;, a pure JavaScript implementation of OpenPGP. To learn more about openpgpjs, see &lt;a href=&quot;https://openpgpjs.org/&quot;&gt;https://openpgpjs.org/&lt;/a&gt;.</source>
          <target state="translated">PGP署名を生成するには、OpenPGPの純粋なJavaScript実装である&lt;a href=&quot;https://github.com/openpgpjs/openpgpjs&quot;&gt;openpgpjs&lt;/a&gt;を使用します。openpgpjsの詳細については、&lt;a href=&quot;https://openpgpjs.org/&quot;&gt;https：&lt;/a&gt; //openpgpjs.org/を参照してください。</target>
        </trans-unit>
        <trans-unit id="2f77159865808ae4dff6729edba5fc59b431be5b" translate="yes" xml:space="preserve">
          <source>To get a default &lt;code&gt;package.json&lt;/code&gt;, run &lt;code&gt;npm init&lt;/code&gt; with the &lt;code&gt;--yes&lt;/code&gt; or &lt;code&gt;-y&lt;/code&gt; flag:</source>
          <target state="translated">デフォルトの &lt;code&gt;package.json&lt;/code&gt; を取得するには、 &lt;code&gt;--yes&lt;/code&gt; または &lt;code&gt;-y&lt;/code&gt; フラグを指定して &lt;code&gt;npm init&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="d57ee488d60a56c6104ab1257616fabb4700836e" translate="yes" xml:space="preserve">
          <source>To get around this, you can do &lt;strong&gt;one&lt;/strong&gt; of the following:</source>
          <target state="translated">これを回避するには、次の&lt;strong&gt;いずれか&lt;/strong&gt;を実行します。</target>
        </trans-unit>
        <trans-unit id="0c5921bb550b2339cc354bdb537ac4c322e0b94e" translate="yes" xml:space="preserve">
          <source>To get started with npm, you can &lt;a href=&quot;https://www.npmjs.com/signup&quot;&gt;create an account&lt;/a&gt;, which will be available at &lt;a href=&quot;http://www.npmjs.com/~*yourusername&quot;&gt;http://www.npmjs.com/~*yourusername&lt;/a&gt;*.</source>
          <target state="translated">npmの使用を開始&lt;a href=&quot;https://www.npmjs.com/signup&quot;&gt;するには、アカウント&lt;/a&gt;を作成できます。アカウントは&lt;a href=&quot;http://www.npmjs.com/~*yourusername&quot;&gt;http://www.npmjs.com/~*yourusername*&lt;/a&gt;で入手できます。</target>
        </trans-unit>
        <trans-unit id="b8ed2f79df997bf83514deb9d067baec0851092d" translate="yes" xml:space="preserve">
          <source>To get started with the registry, &lt;a href=&quot;https://www.npmjs.com/signup&quot;&gt;sign up for an npm account&lt;/a&gt; and check out the &quot;&lt;a href=&quot;getting-started&quot;&gt;Getting started&lt;/a&gt;&quot; and &lt;a href=&quot;cli/v6&quot;&gt;CLI&lt;/a&gt; documentation.</source>
          <target state="translated">レジストリの使用を開始するには&lt;a href=&quot;https://www.npmjs.com/signup&quot;&gt;、npmアカウントにサインアップ&lt;/a&gt;し、「&lt;a href=&quot;getting-started&quot;&gt;はじめに&lt;/a&gt;」と&lt;a href=&quot;cli/v6&quot;&gt;CLIの&lt;/a&gt;ドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="94e936fc1a447c6d54c469787a2e34501f6d5486" translate="yes" xml:space="preserve">
          <source>To give someone access without using an org, navigate to the package page. You can find it at:</source>
          <target state="translated">org を使わずにアクセスできるようにするには、パッケージのページに移動してください。で見つけることができます。</target>
        </trans-unit>
        <trans-unit id="ed8b57110bd1749662e18a4db67cb404a4e225be" translate="yes" xml:space="preserve">
          <source>To grant an npm user access to private organization packages, you must have an organization owner add them to your organization, then add them to a team that has access to the private package. For more information, see &quot;&lt;a href=&quot;adding-members-to-your-organization&quot;&gt;Adding members to your organization&lt;/a&gt;&quot;.</source>
          <target state="translated">npmユーザーにプライベート組織パッケージへのアクセスを許可するには、組織の所有者にそれらを組織に追加してもらい、プライベートパッケージにアクセスできるチームに追加する必要があります。詳細については、「&lt;a href=&quot;adding-members-to-your-organization&quot;&gt;組織へのメンバーの追加&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="0d3bfe73ff8eae6fe60061a41761a6ecad8991a3" translate="yes" xml:space="preserve">
          <source>To help developers who rely on your code, we recommend starting your package version at &lt;code&gt;1.0.0&lt;/code&gt; and incrementing as follows:</source>
          <target state="translated">コードに依存する開発者を支援するために、パッケージバージョンを &lt;code&gt;1.0.0&lt;/code&gt; から開始し、次のようにインクリメントすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7b9d055dd401378f7798c055f5272c43b52a406b" translate="yes" xml:space="preserve">
          <source>To help others find your packages on npm and have a good experience using your code in their projects, we recommend including a README file in your package directory. Your README file may include directions for installing, configuring, and using the code in your package, as well as any other information a user may find helpful. The README file will be shown on the package page.</source>
          <target state="translated">他の人が npm であなたのパッケージを見つけて、自分のプロジェクトであなたのコードを使って良い経験ができるようにするために、パッケージディレクトリに README ファイルを含めることをお勧めします。README ファイルには、パッケージ内のコードのインストール、設定、使用方法などの指示や、ユーザーが役に立つと思われるその他の情報が含まれています。README ファイルはパッケージのページに表示されます。</target>
        </trans-unit>
        <trans-unit id="f0e068e02d2c6ab3bfd09c60d636f15741086079" translate="yes" xml:space="preserve">
          <source>To increase confidence in the npm public registry, we add our &lt;a href=&quot;https://en.wikipedia.org/wiki/Pretty_Good_Privacy&quot;&gt;PGP&lt;/a&gt; signature to package metadata and publicize our public PGP key on &lt;a href=&quot;https://keybase.io&quot;&gt;Keybase&lt;/a&gt;. Our Keybase account is &quot;&lt;a href=&quot;https://keybase.io/npmregistry&quot;&gt;npmregistry&lt;/a&gt;&quot; and our public PGP key can be found at &lt;a href=&quot;https://keybase.io/npmregistry/pgp_keys.asc&quot;&gt;https://keybase.io/npmregistry/pgp_keys.asc&lt;/a&gt;</source>
          <target state="translated">npmパブリックレジストリの信頼性を高めるために、&lt;a href=&quot;https://en.wikipedia.org/wiki/Pretty_Good_Privacy&quot;&gt;PGP&lt;/a&gt;署名をパッケージメタデータに追加し、&lt;a href=&quot;https://keybase.io&quot;&gt;Keybaseで&lt;/a&gt;パブリックPGPキーを公開します。キーベースアカウントは「&lt;a href=&quot;https://keybase.io/npmregistry&quot;&gt;npmregistry&lt;/a&gt;」であり、公開PGPキーは&lt;a href=&quot;https://keybase.io/npmregistry/pgp_keys.asc&quot;&gt;https://keybase.io/npmregistry/pgp_keys.ascにあります。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aa15fa8354497fcb1999fd3cafb5fee4f72f6b4" translate="yes" xml:space="preserve">
          <source>To install a package, npm uses the following algorithm:</source>
          <target state="translated">パッケージをインストールするには、npmは以下のアルゴリズムを使用します。</target>
        </trans-unit>
        <trans-unit id="5a2bc1974d69954fe20ef1b461db1edc1fe1e949" translate="yes" xml:space="preserve">
          <source>To install a private packages, you must have access to the package. Then you can use install with the scoped package name.</source>
          <target state="translated">プライベートパッケージをインストールするには、そのパッケージへのアクセス権が必要です。そして、スコープされたパッケージ名を指定してinstallを使用することができます。</target>
        </trans-unit>
        <trans-unit id="042af4c8dbfc228e238e81073107b42b19ca4cc4" translate="yes" xml:space="preserve">
          <source>To install and manage npm and Node.js on Windows, we suggest &lt;a href=&quot;https://github.com/coreybutler/nvm-windows&quot;&gt;nvm-windows&lt;/a&gt;.</source>
          <target state="translated">WindowsにnpmとNode.jsをインストールして管理するには、&lt;a href=&quot;https://github.com/coreybutler/nvm-windows&quot;&gt;nvm-windows&lt;/a&gt;をお勧めします。</target>
        </trans-unit>
        <trans-unit id="c59412e2a6085aa5c2bdd8227f09407cf3b70a44" translate="yes" xml:space="preserve">
          <source>To install npmrc, on the command line, run</source>
          <target state="translated">npmrc をインストールするには、コマンドラインで</target>
        </trans-unit>
        <trans-unit id="7b70b316889bb7a38437dcaeb91c16668e14298a" translate="yes" xml:space="preserve">
          <source>To install private npm packages in a Docker container, you will need to use Docker's build-time variables.</source>
          <target state="translated">Dockerコンテナにプライベートなnpmパッケージをインストールするには、Dockerのビルドタイム変数を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d35cd58f95dff761d6cbca926b373f7493b4ac64" translate="yes" xml:space="preserve">
          <source>To keep the JavaScript ecosystem healthy, reliable, and secure, every time you make significant updates to an npm package you own, we recommend publishing a new version of the package with an updated version number in the &lt;a href=&quot;creating-a-package-json-file&quot;&gt;&lt;code&gt;package.json&lt;/code&gt; file&lt;/a&gt; that follows the &lt;a href=&quot;http://semver.org/&quot;&gt;semantic versioning spec&lt;/a&gt;. Following the semantic versioning spec helps other developers who depend on your code understand the extent of changes in a given version, and adjust their own code if necessary.</source>
          <target state="translated">JavaScriptエコシステムを健全で信頼性が高く安全に保つために、所有するnpmパッケージに大幅な更新を行うたびに、&lt;a href=&quot;http://semver.org/&quot;&gt;セマンティックバージョニングに&lt;/a&gt;続く&lt;a href=&quot;creating-a-package-json-file&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; ファイル&lt;/a&gt;で更新されたバージョン番号を持つ新しいバージョンのパッケージを公開することをお勧めしますスペック。セマンティックバージョニング仕様に従うと、コードに依存する他の開発者が特定のバージョンでの変更の範囲を理解し、必要に応じて独自のコードを調整するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="dedd3ccfee51ed46e24523a7efd93da39ee38069" translate="yes" xml:space="preserve">
          <source>To keep your account and packages secure, we strongly recommend revoking (deleting) tokens you no longer need or that have been compromised. You can revoke any token you have created.</source>
          <target state="translated">アカウントとパッケージの安全性を維持するために、不要になったトークンや漏洩したトークンを失効(削除)することを強くお勧めします。作成したトークンはすべて取り消すことができます。</target>
        </trans-unit>
        <trans-unit id="e982df7ecb5c6d0483510fc76099a102c828f298" translate="yes" xml:space="preserve">
          <source>To keep your account secure, we recommend you follow these best practices:</source>
          <target state="translated">アカウントを安全に保つために、以下のベストプラクティスに従うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a95abb71cc2c67f5798017a3fa49ec53e81403fc" translate="yes" xml:space="preserve">
          <source>To learn about semantic versioning, click &lt;a href=&quot;semantic-versioning&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">セマンティックバージョニングの詳細については、ここをクリックして&lt;a href=&quot;semantic-versioning&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd8f70cdd6124f754ed38bed51a956c86c5dcae1" translate="yes" xml:space="preserve">
          <source>To learn about tools to manage multiple packages and collaborators, see &lt;a href=&quot;https://www.npmjs.com/docs/orgs&quot;&gt;npm Orgs&lt;/a&gt;.</source>
          <target state="translated">複数のパッケージとコラボレーターを管理するツールについては、&lt;a href=&quot;https://www.npmjs.com/docs/orgs&quot;&gt;npm Orgsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3bc0f64642519d8675e8fc2f76d0163f16f83b24" translate="yes" xml:space="preserve">
          <source>To learn more about &lt;code&gt;package.json&lt;/code&gt; files, click &lt;a href=&quot;using-a-package.json&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルの詳細については、ここをクリックして&lt;a href=&quot;using-a-package.json&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0dd2439c1e47ec051463fb0ad0072902af543a76" translate="yes" xml:space="preserve">
          <source>To learn more about creating advanced &lt;code&gt;npm init&lt;/code&gt; customizations, see the &lt;a href=&quot;https://github.com/npm/init-package-json&quot;&gt;init-package-json&lt;/a&gt; GitHub repository.</source>
          <target state="translated">高度な &lt;code&gt;npm init&lt;/code&gt; カスタマイズの作成の詳細については、&lt;a href=&quot;https://github.com/npm/init-package-json&quot;&gt;init-package-jsonGitHub&lt;/a&gt;リポジトリを参照してください。</target>
        </trans-unit>
        <trans-unit id="e9fa529912801cbbfda6056cd3af61fcda031736" translate="yes" xml:space="preserve">
          <source>To learn more about how to create advanced customizations, check out the docs for &lt;a href=&quot;https://github.com/npm/init-package-json&quot;&gt;init-package-json&lt;/a&gt;</source>
          <target state="translated">高度なカスタマイズの作成方法の詳細については、&lt;a href=&quot;https://github.com/npm/init-package-json&quot;&gt;init-package-jsonの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="e9ecba6d6181068b43da0c9d0647b57f0f93a56a" translate="yes" xml:space="preserve">
          <source>To learn more about how to use node version manager, nvm, click &lt;a href=&quot;https://github.com/creationix/nvm/blob/master/README.md#usage&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">ノードバージョンマネージャーnvmの使用方法の詳細については、ここをクリックして&lt;a href=&quot;https://github.com/creationix/nvm/blob/master/README.md#usage&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="366087f7b0b69689e4eacc6f163062e5c4080b54" translate="yes" xml:space="preserve">
          <source>To learn more about how unpublish is treated on the npm registry, see our &lt;a href=&quot;https://www.npmjs.com/policies/unpublish&quot;&gt; unpublish policies&lt;/a&gt;.</source>
          <target state="translated">npmレジストリでunpublishがどのように扱われるかについて詳しくは、unpublish&lt;a href=&quot;https://www.npmjs.com/policies/unpublish&quot;&gt;ポリシーを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="07a1ede6fac575ad8c7e3d6b7800056aef714719" translate="yes" xml:space="preserve">
          <source>To learn more about naming, including how npm protects you against typosquat confusion, click &lt;a href=&quot;https://gist.github.com/ashleygwilliams/e466c1e9fd3be42545da511239edd554&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">npmがタイポスクワットの混乱からどのように保護するかを含め、命名の詳細については、ここをクリックして&lt;a href=&quot;https://gist.github.com/ashleygwilliams/e466c1e9fd3be42545da511239edd554&quot;&gt;ください&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67ab4c85effb212344956e4be99f99e8bebf4030" translate="yes" xml:space="preserve">
          <source>To learn more about npm Enterprise, click &lt;a href=&quot;https://npme.npmjs.com/docs&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">npm Enterpriseの詳細については、ここをクリックして&lt;a href=&quot;https://npme.npmjs.com/docs&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="714d724c0243340c27dbb7c79841dd66d4c2e27b" translate="yes" xml:space="preserve">
          <source>To learn more about npm as a product, new features on the way, and interesting uses of npm, sign up for our newsletter at &lt;a href=&quot;https://www.npmjs.com/npm-weekly&quot;&gt;npm-weekly&lt;/a&gt;, and be sure to follow @npmjs on twitter.</source>
          <target state="translated">製品としてのnpm、途中の新機能、npmの興味深い使用法の詳細については、&lt;a href=&quot;https://www.npmjs.com/npm-weekly&quot;&gt;npm-weekly&lt;/a&gt;でニュースレターに登録し、Twitterで@npmjsをフォローしてください。</target>
        </trans-unit>
        <trans-unit id="63d113ebe8203173aae3e4fd1bfe9f1782ca3e33" translate="yes" xml:space="preserve">
          <source>To learn more about npm as a product, upcoming new features, and interesting uses of npm, sign up for our newsletter at &lt;a href=&quot;https://www.npmjs.com/npm-weekly&quot;&gt;npm-weekly&lt;/a&gt;, and be sure to follow &lt;a href=&quot;https://twitter.com/npmjs&quot;&gt;@npmjs&lt;/a&gt; on Twitter.</source>
          <target state="translated">製品としてのnpm、今後の新機能、npmの興味深い使用法の詳細については、&lt;a href=&quot;https://www.npmjs.com/npm-weekly&quot;&gt;npm-weekly&lt;/a&gt;でニュースレターに&lt;a href=&quot;https://twitter.com/npmjs&quot;&gt;登録し&lt;/a&gt;、Twitterで@npmjsをフォローしてください。</target>
        </trans-unit>
        <trans-unit id="bb336a3763ed0cb6d9e054a58904c2ff863dbbc5" translate="yes" xml:space="preserve">
          <source>To learn more about semantic versioning, see &lt;a href=&quot;semantic-versioning&quot;&gt;Getting Started &quot;Semver&quot; page&lt;/a&gt;.</source>
          <target state="translated">セマンティックバージョニングの詳細については、「&lt;a href=&quot;semantic-versioning&quot;&gt;はじめに」の「Semver」ページをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85484077d2ec8ca42df5e3b19b75607177ba4df5" translate="yes" xml:space="preserve">
          <source>To learn more about tags, click &lt;a href=&quot;using-tags&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">タグの詳細については、ここをクリックして&lt;a href=&quot;using-tags&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2060002f85bb96b2e42b577b3041b38af70cbb5c" translate="yes" xml:space="preserve">
          <source>To learn more about the &lt;code&gt;install&lt;/code&gt; command, check out the &lt;a href=&quot;../cli/install&quot;&gt;CLI doc page&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;install&lt;/code&gt; コマンドの詳細については、&lt;a href=&quot;../cli/install&quot;&gt;CLIドキュメントページをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b29e6e93f03908102980aebff97e136baeb0b409" translate="yes" xml:space="preserve">
          <source>To limit the token so that it can only be used from specified ip addresses, you can create a CIDR-restricted token. CIDR is an acronym for Classless Inter-Domain Routing. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&quot;&gt;CIDR Wiki page&lt;/a&gt; will get you started.</source>
          <target state="translated">トークンを制限して、指定したIPアドレスからのみ使用できるようにするには、CIDR制限付きトークンを作成します。CIDRは、クラスレスドメイン間ルーティングの頭字語です。&lt;a href=&quot;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&quot;&gt;CIDR Wikiページは&lt;/a&gt;、あなたが開始されます。</target>
        </trans-unit>
        <trans-unit id="8d9b4bbedf69dbcd408685891a59a2692f31915e" translate="yes" xml:space="preserve">
          <source>To list packages according to a specific criteria, click its label under &lt;code&gt;Sort Packages&lt;/code&gt;. For example, to search by Popularity, click &lt;code&gt;Popularity&lt;/code&gt;.</source>
          <target state="translated">特定の基準に従ってパッケージを一覧表示するには、[ &lt;code&gt;Sort Packages&lt;/code&gt; ]の下のラベルをクリックします。例えば、人気によって検索するには、クリックし &lt;code&gt;Popularity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b08b3280dc4fdd6e4226fdfc2d1ef686da93af01" translate="yes" xml:space="preserve">
          <source>To list packages ranked according to &lt;a href=&quot;#package-search-rank-criteria&quot;&gt;package search rank criteria&lt;/a&gt;, in the left sidebar, under &quot;Sort packages&quot;, click the criterion. For example, to sort packages by popularity, click &quot;Popularity&quot;.</source>
          <target state="translated">&lt;a href=&quot;#package-search-rank-criteria&quot;&gt;パッケージ検索ランク基準&lt;/a&gt;に従ってランク付けされたパッケージを一覧表示するには、左側のサイドバーの[パッケージの並べ替え]の下で、基準をクリックします。たとえば、パッケージを人気順に並べ替えるには、[人気]をクリックします。</target>
        </trans-unit>
        <trans-unit id="5cb3c7f55bb75aa323ccf4b7b591d270e9054065" translate="yes" xml:space="preserve">
          <source>To make a private package public on the command line, run the following command, replacing &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; with the name of your package:</source>
          <target state="translated">コマンドラインでプライベートパッケージを公開するには、次のコマンドを実行し、 &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; をパッケージの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="4600267c9f1fd3b6b5a030ad840408813a785c27" translate="yes" xml:space="preserve">
          <source>To make a public package private on the command line, run the following command, replacing &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; with the name of your package:</source>
          <target state="translated">コマンドラインでパブリックパッケージをプライベートにするには、次のコマンドを実行して、 &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; をパッケージの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="5023a37ba72e17e50d0d0f3f7214c6603175c599" translate="yes" xml:space="preserve">
          <source>To make this more secure when pushing it up to the server, you can set this token as an environment variable on the server.</source>
          <target state="translated">これをサーバーにプッシュする際の安全性を高めるために、このトークンをサーバー上の環境変数として設定することができます。</target>
        </trans-unit>
        <trans-unit id="19c83b0f1106ff309c3e363838c7ad88d7c83f9d" translate="yes" xml:space="preserve">
          <source>To make this process seamless on git, consider installing &lt;a href=&quot;https://npm.im/npm-merge-driver&quot;&gt;&lt;code&gt;npm-merge-driver&lt;/code&gt;&lt;/a&gt;, which will teach git how to do this itself without any user interaction. In short: &lt;code&gt;$ npx npm-merge-driver install -g&lt;/code&gt; will let you do this, and even works with pre-&lt;code&gt;npm@5.7.0&lt;/code&gt; versions of npm 5, albeit a bit more noisily. Note that if &lt;code&gt;package.json&lt;/code&gt; itself conflicts, you will have to resolve that by hand and run &lt;code&gt;npm install&lt;/code&gt; manually, even with the merge driver.</source>
          <target state="translated">このプロセスをgitでシームレスにするには、&lt;a href=&quot;https://npm.im/npm-merge-driver&quot;&gt; &lt;code&gt;npm-merge-driver&lt;/code&gt; を&lt;/a&gt;インストールすることを検討してください。これにより、ユーザーが操作しなくてもgit自体でこれを行う方法がわかります。要するに： &lt;code&gt;$ npx npm-merge-driver install -g&lt;/code&gt; あなたがこれを行うようになる、とさえ事前に動作します &lt;code&gt;npm@5.7.0&lt;/code&gt; のより騒々しくビットいえ、NPM 5のバージョン。場合ことを注意 &lt;code&gt;package.json&lt;/code&gt; 自体が競合し、あなたが手と実行によってことを決意する必要があります &lt;code&gt;npm install&lt;/code&gt; でもマージドライバで、手動で。</target>
        </trans-unit>
        <trans-unit id="5911a28936545cab225166fd2660f7eed5778270" translate="yes" xml:space="preserve">
          <source>To meet the increasing need for strong digital security, npm introduced two-factor authentication (2FA) or (tfa) with version 5.5.1. Two-factor authentication prevents unauthorized access to your account by confirming your identity using two methods:</source>
          <target state="translated">強力なデジタルセキュリティのニーズの高まりに対応するため、npm はバージョン 5.5.5.1 で二要素認証 (2FA)または (tfa)を導入しました。二要素認証では、2 つの方法で本人確認を行うことでアカウントへの不正アクセスを防ぎます。</target>
        </trans-unit>
        <trans-unit id="baca9ebb8ac5d639fc1986665221ae6b14871724" translate="yes" xml:space="preserve">
          <source>To minimize the chance of permissions errors, you can configure npm to use a different directory. In this example, it will be a hidden directory on your home folder.</source>
          <target state="translated">パーミッションエラーの可能性を最小限にするために、別のディレクトリを使用するように npm を設定することができます。この例では、ホームフォルダ上の隠しディレクトリになります。</target>
        </trans-unit>
        <trans-unit id="9b1051c4632116855c1e359e2dc85c847d7919d1" translate="yes" xml:space="preserve">
          <source>To minimize the chance of permissions errors, you can configure npm to use a different directory. In this example, you will create and use hidden directory in your home directory.</source>
          <target state="translated">パーミッションエラーの可能性を最小限にするために、別のディレクトリを使用するように npm を設定することができます。この例では、ホームディレクトリに隠しディレクトリを作成して使用します。</target>
        </trans-unit>
        <trans-unit id="5092c125435e46caa22d4674bd13fb042b8fd5cc" translate="yes" xml:space="preserve">
          <source>To override this behavior, use &lt;code&gt;npm install &amp;lt;package_name&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt;. For example, to install the &lt;code&gt;example-package&lt;/code&gt; at the version tagged with &lt;code&gt;beta&lt;/code&gt;, you would run the following command:</source>
          <target state="translated">この動作をオーバーライドするには、 &lt;code&gt;npm install &amp;lt;package_name&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt; ます。たとえば、 &lt;code&gt;beta&lt;/code&gt; でタグ付けされたバージョンで &lt;code&gt;example-package&lt;/code&gt; をインストールするには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="52c986ac4fe31741dfb158d03a53a010b2be72f0" translate="yes" xml:space="preserve">
          <source>To parse columns, you can use for example &lt;code&gt;awk&lt;/code&gt;, and just print some of them:</source>
          <target state="translated">列を解析するには、たとえば &lt;code&gt;awk&lt;/code&gt; を使用して、それらのいくつかを出力します。</target>
        </trans-unit>
        <trans-unit id="2bb0b1c374606cf8bb45bf79bdad825af2561856" translate="yes" xml:space="preserve">
          <source>To prevent this potential issue, npm uses &lt;a href=&quot;package-lock-json&quot;&gt;package-lock.json&lt;/a&gt; or, if present, &lt;a href=&quot;shrinkwrap-json&quot;&gt;npm-shrinkwrap.json&lt;/a&gt;. These files are called package locks, or lockfiles.</source>
          <target state="translated">この潜在的な問題を防ぐために、npmは&lt;a href=&quot;package-lock-json&quot;&gt;package-lock.jsonを&lt;/a&gt;使用するか、存在する場合は&lt;a href=&quot;shrinkwrap-json&quot;&gt;npm-shrinkwrap.jsonを使用し&lt;/a&gt;ます。これらのファイルは、パッケージロックまたはロックファイルと呼ばれます。</target>
        </trans-unit>
        <trans-unit id="c31ac8a1fd7ef58b575352b071f3836ced3e79cb" translate="yes" xml:space="preserve">
          <source>To prevent this potential issue, npm uses &lt;a href=&quot;package-lock.json&quot;&gt;package-lock.json&lt;/a&gt; or, if present, &lt;a href=&quot;shrinkwrap.json&quot;&gt;npm-shrinkwrap.json&lt;/a&gt;. These files are called package locks, or lockfiles.</source>
          <target state="translated">この潜在的な問題を回避するために、npmは&lt;a href=&quot;package-lock.json&quot;&gt;package-lock.json&lt;/a&gt;または、存在する場合は&lt;a href=&quot;shrinkwrap.json&quot;&gt;npm-shrinkwrap.jsonを使用し&lt;/a&gt;ます。これらのファイルは、パッケージロックまたはロックファイルと呼ばれます。</target>
        </trans-unit>
        <trans-unit id="59f95b04cf8ac0ebcf36ebd043dc7724f1f43487" translate="yes" xml:space="preserve">
          <source>To protect your account, when you reset your password from the command line, it must:</source>
          <target state="translated">アカウントを保護するために、コマンドラインからパスワードをリセットするときは、それが必要です。</target>
        </trans-unit>
        <trans-unit id="dcb918a689b47bdef45c874ea5b281fdf889d216" translate="yes" xml:space="preserve">
          <source>To protect your packages, as a package publisher, you can require everyone who has write access to a package to have two-factor authentication (2FA) enabled. This will require that users provide a one-time password in addition to their login token when they publish the package. For more information, see &quot;&lt;a href=&quot;configuring-two-factor-authentication&quot;&gt;Configuring two-factor authentication&lt;/a&gt;&quot;.</source>
          <target state="translated">パッケージを保護するために、パッケージ発行者として、パッケージへの書き込みアクセス権を持つすべての人に2要素認証（2FA）を有効にするように要求できます。これには、ユーザーがパッケージを公開するときに、ログイントークンに加えてワンタイムパスワードを提供する必要があります。詳細については、「&lt;a href=&quot;configuring-two-factor-authentication&quot;&gt;2要素認証の構成&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="41c40627f5888aaea422b24528e328e7ed8c127c" translate="yes" xml:space="preserve">
          <source>To protect your packages, as a package publisher, you can require everyone who has write access to a package to provide a one-time password in addition to their login token when they publish the package to the registry or modify package settings.</source>
          <target state="translated">パッケージを保護するために、パッケージ発行者として、パッケージへの書き込みアクセス権を持つすべての人に、パッケージをレジストリに公開したり、パッケージの設定を変更したりする際に、ログイントークンに加えてワンタイムパスワードを提供するように要求することができます。</target>
        </trans-unit>
        <trans-unit id="38e7cedd6f4c84176430dbe9a839992c34aff301" translate="yes" xml:space="preserve">
          <source>To publish a package with the &quot;beta&quot; dist-tag, on the command line, run the following command in the root directory of your package:</source>
          <target state="translated">beta」の dist-tag を持つパッケージを公開するには、コマンドラインで以下のコマンドをパッケージのルートディレクトリで実行してください。</target>
        </trans-unit>
        <trans-unit id="18bef67332ea3e4170cdf123d06f7a23a4afe89c" translate="yes" xml:space="preserve">
          <source>To publish a private scoped package to the npm registry, you must have an &lt;a href=&quot;../../../creating-and-publishing-private-packages&quot;&gt;npm Private Modules&lt;/a&gt; account.</source>
          <target state="translated">プライベートスコープのパッケージをnpmレジストリに公開するには、&lt;a href=&quot;../../../creating-and-publishing-private-packages&quot;&gt;npmプライベートモジュール&lt;/a&gt;アカウントが必要です。</target>
        </trans-unit>
        <trans-unit id="5f99f7f38b399c51346fd4deffeeab4c4aed7c4a" translate="yes" xml:space="preserve">
          <source>To publish a private scoped package to the npm registry, you must have an &lt;a href=&quot;../private-modules/intro&quot;&gt;npm Private Modules&lt;/a&gt; account.</source>
          <target state="translated">プライベートスコープのパッケージをnpmレジストリに公開するには、&lt;a href=&quot;../private-modules/intro&quot;&gt;npmプライベートモジュール&lt;/a&gt;アカウントが必要です。</target>
        </trans-unit>
        <trans-unit id="cb96d8b1d33a75350ba8042ae508fee5771c6e5c" translate="yes" xml:space="preserve">
          <source>To publish a public scoped package, you must specify &lt;code&gt;--access public&lt;/code&gt; with the initial publication. This will publish the package and set access to &lt;code&gt;public&lt;/code&gt; as if you had run &lt;code&gt;npm access public&lt;/code&gt; after publishing.</source>
          <target state="translated">公開スコープパッケージを公開するには、最初の &lt;code&gt;--access public&lt;/code&gt; で--access publicを指定する必要があります。これにより、パッケージを公開し、 &lt;code&gt;npm access public&lt;/code&gt; 後にnpm access publicを実行したかのようにアクセスを &lt;code&gt;public&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="cbe321c18719325e6cbb5eb56dcd5b27d5b3afc6" translate="yes" xml:space="preserve">
          <source>To publish an organization scoped package as public, use &lt;code&gt;npm publish --access public&lt;/code&gt;.</source>
          <target state="translated">組織スコープのパッケージをパブリックとして公開するには、 &lt;code&gt;npm publish --access public&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="58f9402e494fca5bcd805153e9144bd1c2b98dd3" translate="yes" xml:space="preserve">
          <source>To publish and install packages to and from the public npm registry or your company's npm Enterprise registry, you must install Node.js and the npm command line interface using either a Node version manager or a Node installer. &lt;strong&gt;We strongly recommend using a Node version manager like &lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;nvm&lt;/a&gt; to install Node.js and npm.&lt;/strong&gt; We do not recommend using a Node installer, since the Node installation process installs npm in a directory with local permissions and can cause permissions errors when you run npm packages globally.</source>
          <target state="translated">パブリックnpmレジストリまたは会社のnpmEnterpriseレジストリとの間でパッケージを公開およびインストールするには、NodeバージョンマネージャーまたはNodeインストーラーを使用してNode.jsとnpmコマンドラインインターフェイスをインストールする必要があります。&lt;strong&gt;&lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;nvm&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;などのノードバージョンマネージャーを使用してNode.jsとnpmをインストールすることを強くお勧めします。&lt;/strong&gt; Nodeインストールプロセスはローカル権限を持つディレクトリにnpmをインストールし、npmパッケージをグローバルに実行すると権限エラーを引き起こす可能性があるため、Nodeインストーラーの使用はお勧めしません。</target>
        </trans-unit>
        <trans-unit id="ef478f049004c7f226a056cfb0c81687def420a4" translate="yes" xml:space="preserve">
          <source>To publish and install packages to and from the public npm registry, you must install Node.js and the npm command line interface using either a Node version manager or a Node installer. &lt;strong&gt;We strongly recommend using a Node version manager to install Node.js and npm.&lt;/strong&gt; We do not recommend using a Node installer, since the Node installation process installs npm in a directory with local permissions and can cause permissions errors when you run npm packages globally.</source>
          <target state="translated">パブリックnpmレジストリとの間でパッケージを公開およびインストールするには、NodeバージョンマネージャーまたはNodeインストーラーを使用してNode.jsとnpmコマンドラインインターフェイスをインストールする必要があります。&lt;strong&gt;Nodeバージョンマネージャーを使用してNode.jsとnpmをインストールすることを強くお勧めします。&lt;/strong&gt;Nodeインストールプロセスはローカル権限を持つディレクトリにnpmをインストールし、npmパッケージをグローバルに実行すると権限エラーを引き起こす可能性があるため、Nodeインストーラーの使用はお勧めしません。</target>
        </trans-unit>
        <trans-unit id="3767d51849dfb5459dfecb0fc40f4d630f27ea30" translate="yes" xml:space="preserve">
          <source>To publish or modify a package with the two factor authentication (2FA) setting enabled, a publisher must have 2FA enabled on their user account with &quot;Authorization and Publishing&quot; selected. For more information, see &quot;&lt;a href=&quot;using-two-factor-authentication&quot;&gt;How to use two-factor authentication&lt;/a&gt;&quot;.</source>
          <target state="translated">2要素認証（2FA）設定を有効にしてパッケージを発行または変更するには、発行者が「承認と発行」を選択したユーザーアカウントで2FAを有効にする必要があります。詳細については、「&lt;a href=&quot;using-two-factor-authentication&quot;&gt;2要素認証の使用方法&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="7ab2085352433443205324d48210a4d295f992e5" translate="yes" xml:space="preserve">
          <source>To publish your private package to the npm registry, run:</source>
          <target state="translated">プライベートパッケージを npm レジストリに公開するには、実行します。</target>
        </trans-unit>
        <trans-unit id="468b698cbd4541806bceaf6a7e3eb815bacbedce" translate="yes" xml:space="preserve">
          <source>To publish your public package to the npm registry, run:</source>
          <target state="translated">公開パッケージを npm レジストリに公開するには、実行します。</target>
        </trans-unit>
        <trans-unit id="3d285f5c29740592e779f628ac7acc001ad9672f" translate="yes" xml:space="preserve">
          <source>To publish your scoped public package to the npm registry, run:</source>
          <target state="translated">スコープした公開パッケージを npm レジストリに公開するには、以下のように実行します。</target>
        </trans-unit>
        <trans-unit id="696706a06375697f6959085bfc251d74bacf277e" translate="yes" xml:space="preserve">
          <source>To publish, you must be a user on the npm registry. If you aren't a user, create an account by using &lt;code&gt;npm adduser&lt;/code&gt;. If you created a user account on the site, use &lt;code&gt;npm login&lt;/code&gt; to access your account from your terminal.</source>
          <target state="translated">公開するには、npmレジストリのユーザーである必要があります。ユーザーでない場合は、 &lt;code&gt;npm adduser&lt;/code&gt; を使用してアカウントを作成します。サイトでユーザーアカウントを作成した場合は、 &lt;code&gt;npm login&lt;/code&gt; を使用して、ターミナルからアカウントにアクセスします。</target>
        </trans-unit>
        <trans-unit id="a5058ee365a7b98b87bc77a279d085e0d909d934" translate="yes" xml:space="preserve">
          <source>To reduce the chances of publishing bugs, we recommend testing your package before publishing it to the npm registry. To test your package, run &lt;code&gt;npm install&lt;/code&gt; with the full path to your package directory:</source>
          <target state="translated">バグを公開する可能性を減らすために、npmレジストリに公開する前にパッケージをテストすることをお勧めします。パッケージをテストするには、パッケージディレクトリへのフルパスを指定して &lt;code&gt;npm install&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="bef58a000d6224b26eae9686222db6ea455dd8dd" translate="yes" xml:space="preserve">
          <source>To remove 2FA from your profile, type this command:</source>
          <target state="translated">プロファイルから 2FA を削除するには、このコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="33af8493958945522a7d7da1a4c0fe652468f0c7" translate="yes" xml:space="preserve">
          <source>To remove a package from the dependencies in &lt;code&gt;package.json&lt;/code&gt;, use the &lt;code&gt;--save&lt;/code&gt; flag. Include the scope if the package is scoped.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; の依存関係からパッケージを削除するには、 &lt;code&gt;--save&lt;/code&gt; フラグを使用します。パッケージがスコープされている場合は、スコープを含めます。</target>
        </trans-unit>
        <trans-unit id="aac553304209471269773cea92e013f73345466e" translate="yes" xml:space="preserve">
          <source>To remove a package from your node_modules directory, on the command line, use the &lt;a href=&quot;cli/v6/commands/npm-uninstall&quot;&gt;&lt;code&gt;uninstall&lt;/code&gt; command&lt;/a&gt;. Include the scope if the package is scoped.</source>
          <target state="translated">node_modulesディレクトリからパッケージを削除するには、コマンドラインで&lt;a href=&quot;cli/v6/commands/npm-uninstall&quot;&gt; &lt;code&gt;uninstall&lt;/code&gt; コマンドを&lt;/a&gt;使用します。パッケージがスコープされている場合は、スコープを含めます。</target>
        </trans-unit>
        <trans-unit id="a50a0e53ef709e46d351b8347519564e05f2dfbd" translate="yes" xml:space="preserve">
          <source>To remove a package from your node_modules directory, use:</source>
          <target state="translated">node_modulesディレクトリからパッケージを削除するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="5154a99e444d4522cd11babf15291ec4f09264e8" translate="yes" xml:space="preserve">
          <source>To remove everything npm-related manually:</source>
          <target state="translated">npm関連のものをすべて手動で削除する。</target>
        </trans-unit>
        <trans-unit id="3779614125635502ad6d398280e83fee866e3abd" translate="yes" xml:space="preserve">
          <source>To remove it from the dependencies in &lt;code&gt;package.json&lt;/code&gt;, you will need to use the save flag:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; の依存関係から削除するには、保存フラグを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="faaf263e4995eff3fe3391a8de8df907c60561b4" translate="yes" xml:space="preserve">
          <source>To remove yourself as a maintainer, under the maintainers list, click the &quot;x&quot; next to your username.</source>
          <target state="translated">メンテナとして削除するには、メンテナリストの下のユーザー名の横にある &quot;x &quot;をクリックしてください。</target>
        </trans-unit>
        <trans-unit id="f67edf968516fa4d53218ff720cda44c3730b3dc" translate="yes" xml:space="preserve">
          <source>To rename an organization, as an organization owner, you must manually migrate your existing organization members, teams, and packages to a new organization, then &lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;contact npm Support&lt;/a&gt; to have the outdated packages unpublished and the previous organization deleted.</source>
          <target state="translated">組織の名前を変更するには、組織の所有者として、既存の組織のメンバー、チーム、およびパッケージを新しい組織に手動で移行してから、&lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;npmサポート&lt;/a&gt;に連絡して、古いパッケージを非公開にし、以前の組織を削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="79bf138983fc44bbdc4f72fc0bffd1a28814ac83" translate="yes" xml:space="preserve">
          <source>To reset your password, go to &lt;a href=&quot;https://www.npmjs.com/forgot&quot;&gt;https://www.npmjs.com/forgot&lt;/a&gt;</source>
          <target state="translated">パスワードをリセットするには、&lt;a href=&quot;https://www.npmjs.com/forgot&quot;&gt;https：//www.npmjs.com/forgotにアクセス&lt;/a&gt;してください</target>
        </trans-unit>
        <trans-unit id="760151a057c9525c7159f58fd64ea7e1da5e5b60" translate="yes" xml:space="preserve">
          <source>To resolve packages by name and version, npm talks to a registry website that implements the CommonJS Package Registry specification for reading package info.</source>
          <target state="translated">パッケージを名前とバージョンで解決するために、npmはパッケージ情報を読み取るためのCommonJS Package Registry仕様を実装したレジストリサイトに接続します。</target>
        </trans-unit>
        <trans-unit id="6a45a0c2df9153deba0e16c0b9d2d164aea94447" translate="yes" xml:space="preserve">
          <source>To run an offline verification of existing cache contents, use &lt;code&gt;npm cache verify&lt;/code&gt;.</source>
          <target state="translated">既存のキャッシュコンテンツのオフライン検証を実行するには、 &lt;code&gt;npm cache verify&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c3296dc9e130d62aa511130203bd862b0fc4ce88" translate="yes" xml:space="preserve">
          <source>To save your credit card information for other payments on npm, select &quot;Remember me&quot;.</source>
          <target state="translated">npmで他の支払い用にクレジットカード情報を保存する場合は、「Remember me」を選択します。</target>
        </trans-unit>
        <trans-unit id="9f38dd41bf07415604f1cd9787ae9eed88dc11fe" translate="yes" xml:space="preserve">
          <source>To see a list of your tokens, on the command line, run:</source>
          <target state="translated">トークンの一覧を見るには、コマンドラインで実行してください。</target>
        </trans-unit>
        <trans-unit id="0d9f540bb81474f191c9d3c682b8540b1d8d1793" translate="yes" xml:space="preserve">
          <source>To see if you already have Node.js and npm installed and check the installed version, run the following commands:</source>
          <target state="translated">既にNode.jsとnpmがインストールされているかどうか、インストールされているバージョンを確認するには、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="242dc3a4369c824e7c832f13b63dabf505908b7f" translate="yes" xml:space="preserve">
          <source>To see which global packages need to be updated, on the command line, run:</source>
          <target state="translated">どのグローバルパッケージを更新する必要があるかを確認するには、コマンドラインで実行します。</target>
        </trans-unit>
        <trans-unit id="93eefc764482d4ef6c461ee2d6c12270f38ccfd9" translate="yes" xml:space="preserve">
          <source>To see your current profile settings, type:</source>
          <target state="translated">現在のプロフィール設定を確認するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="72d80b782d92efaa74755b21862879f71257e0a7" translate="yes" xml:space="preserve">
          <source>To see your private package page, visit &lt;a href=&quot;https://npmjs.com/package/*package-name&quot;&gt;https://npmjs.com/package/*package-name&lt;/a&gt;&lt;em&gt;, replacing &lt;/em&gt;package-name* with the name of your package. Private packages will say &lt;code&gt;private&lt;/code&gt; below the package name on the npm website.</source>
          <target state="translated">プライベートパッケージページを表示するには、&lt;a href=&quot;https://npmjs.com/package/*package-name&quot;&gt;https：//npmjs.com/package/*package-nameにアクセスし&lt;/a&gt;&lt;em&gt;、&lt;/em&gt; package-name *をパッケージの名前&lt;em&gt;に置き換え&lt;/em&gt;ます。プライベートパッケージは言うだろう &lt;code&gt;private&lt;/code&gt; NPMのウェブサイト上のパッケージ名の下に。</target>
        </trans-unit>
        <trans-unit id="23fa41b57d7a013294fa09bc32b8f0e61ff4e652" translate="yes" xml:space="preserve">
          <source>To see your public package page, visit &lt;a href=&quot;https://npmjs.com/package/*package-name&quot;&gt;https://npmjs.com/package/*package-name&lt;/a&gt;&lt;em&gt;, replacing &lt;/em&gt;package-name* with the name of your package. Public packages will say &lt;code&gt;public&lt;/code&gt; below the package name on the npm website.</source>
          <target state="translated">公開パッケージページを表示するには、&lt;a href=&quot;https://npmjs.com/package/*package-name&quot;&gt;https：//npmjs.com/package/*package-nameにアクセスし&lt;/a&gt;&lt;em&gt;、&lt;/em&gt; package-name *をパッケージの名前&lt;em&gt;に置き換え&lt;/em&gt;ます。公共のパッケージは言うだろう &lt;code&gt;public&lt;/code&gt; NPMウェブサイト上のパッケージ名の下に。</target>
        </trans-unit>
        <trans-unit id="939e44ee2f9705f76212b7da808e74eb7299afc1" translate="yes" xml:space="preserve">
          <source>To set a password, type:</source>
          <target state="translated">パスワードを設定するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="396c571ed380757792b9113e0b2c40fac5fb835d" translate="yes" xml:space="preserve">
          <source>To set an npm Enterprise registry for the profile, run the following command, replacing your-company-registry with the name of your company's npm Enterprise registry:</source>
          <target state="translated">プロファイルに npm Enterprise レジストリを設定するには、次のコマンドを実行して、your-company-registry を会社の npm Enterprise レジストリの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="dcc9ba75f0ceec0938e6fa35e1c7046a7c84ff5c" translate="yes" xml:space="preserve">
          <source>To set other values, append them to the end of the line as shown:</source>
          <target state="translated">他の値を設定する場合は、図のように行末に追加します。</target>
        </trans-unit>
        <trans-unit id="2fd02978af75213f10178c333e49c0c48fa2317a" translate="yes" xml:space="preserve">
          <source>To set the public registry for your open source profile, run the following command:</source>
          <target state="translated">オープンソースプロファイルのパブリックレジストリを設定するには、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="e746737bf4b60305c6717c796b7639a228243426" translate="yes" xml:space="preserve">
          <source>To set up two-factor authentication, you can use either use:</source>
          <target state="translated">2ファクタ認証を設定するには、どちらを使用しても構いません。</target>
        </trans-unit>
        <trans-unit id="a5c1c8c586cb99b4b9c94b5e9fd2e7a12b2d2775" translate="yes" xml:space="preserve">
          <source>To set up your profile on npmjs.com, login.</source>
          <target state="translated">npmjs.com でプロファイルを設定するには、ログインします。</target>
        </trans-unit>
        <trans-unit id="a1e05a92e3fea949adc6602583f9dde294a14413" translate="yes" xml:space="preserve">
          <source>To share your code publicly in a user or organization namespace, you can publish public user-scoped or organization-scoped packages to the npm registry.</source>
          <target state="translated">ユーザーや組織の名前空間でコードを公開するには、ユーザーがスコープしたパッケージや組織がスコープしたパッケージを npm レジストリに公開することができます。</target>
        </trans-unit>
        <trans-unit id="c2dd77f48f09e0b15e0437a26ef32613732314ed" translate="yes" xml:space="preserve">
          <source>To share your code with a limited set of users or teams, you can publish private user-scoped or organization-scoped packages to the npm registry.</source>
          <target state="translated">限られたユーザやチームでコードを共有するには、ユーザスコープ付きのプライベートパッケージや組織スコープ付きのパッケージを npm レジストリに公開することができます。</target>
        </trans-unit>
        <trans-unit id="9aa75e59393048b180ee6293f73f19414548c13f" translate="yes" xml:space="preserve">
          <source>To show the &lt;code&gt;connect&lt;/code&gt; package version history, you can do this:</source>
          <target state="translated">&lt;code&gt;connect&lt;/code&gt; パッケージのバージョン履歴を表示するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="7cc068f05db9d4c4ecaa0e42a048c65792bd6c5d" translate="yes" xml:space="preserve">
          <source>To show the package registry entry for the &lt;code&gt;connect&lt;/code&gt; package, you can do this:</source>
          <target state="translated">&lt;code&gt;connect&lt;/code&gt; パッケージのパッケージレジストリエントリを表示するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="63bd3a8b593a4ee1b5c675efc4e8b89d1ab0bcb0" translate="yes" xml:space="preserve">
          <source>To solve both these issues, many developers opt to use a &lt;em&gt;node version manager&lt;/em&gt;, or &lt;em&gt;nvm&lt;/em&gt;, to install npm. The version manager will avoid permissions errors, and will solve the complexities of updating Node.js and npm.</source>
          <target state="translated">これらの両方の問題を解決するために、多くの開発者は、&lt;em&gt;ノードバージョンマネージャー&lt;/em&gt;または&lt;em&gt;nvm&lt;/em&gt;を使用してnpmをインストールすることを選択します。バージョンマネージャは権限エラーを回避し、Node.jsとnpmの更新の複雑さを解決します。</target>
        </trans-unit>
        <trans-unit id="f54491b45ae4a525796b3b58838364f6665cb9ff" translate="yes" xml:space="preserve">
          <source>To specify the packages your project depends on, you must list them as &lt;code&gt;&quot;dependencies&quot;&lt;/code&gt; or &lt;code&gt;&quot;devDependencies&quot;&lt;/code&gt; in your package's &lt;a href=&quot;cli/v6/configuring-npm/package-json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file. When you (or another user) run &lt;code&gt;npm install&lt;/code&gt;, npm will download dependencies and devDependencies that are listed in &lt;code&gt;package.json&lt;/code&gt; that meet the &lt;a href=&quot;about-semantic-versioning&quot;&gt;semantic version&lt;/a&gt; requirements listed for each. To see which versions of a package will be installed, use the &lt;a href=&quot;https://semver.npmjs.com/&quot;&gt;semver calculator&lt;/a&gt;.</source>
          <target state="translated">プロジェクトが依存するパッケージを指定するには、パッケージの&lt;a href=&quot;cli/v6/configuring-npm/package-json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;ファイルに &lt;code&gt;&quot;dependencies&quot;&lt;/code&gt; または &lt;code&gt;&quot;devDependencies&quot;&lt;/code&gt; としてリストする必要があります。あなた（または別のユーザー）が &lt;code&gt;npm install&lt;/code&gt; を実行すると、npmは &lt;code&gt;package.json&lt;/code&gt; にリストされている依存関係とdevDependenciesをダウンロードし、それぞれにリストされている&lt;a href=&quot;about-semantic-versioning&quot;&gt;セマンティックバージョンの&lt;/a&gt;要件を満たします。インストールされるパッケージのバージョンを確認するには、&lt;a href=&quot;https://semver.npmjs.com/&quot;&gt;semver計算機を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="547b4b96be753fef3fea4790b03bd90ebcd156d4" translate="yes" xml:space="preserve">
          <source>To specify the packages your project depends on, you need to list the packages you'd like to use in your &lt;code&gt;package.json&lt;/code&gt; file. There are 2 types of packages you can list:</source>
          <target state="translated">プロジェクトが依存するパッケージを指定するには、 &lt;code&gt;package.json&lt;/code&gt; ファイルに使用するパッケージをリストする必要があります。リストできるパッケージには2つのタイプがあります。</target>
        </trans-unit>
        <trans-unit id="cdbc2b80948aa87b5b6353fe90332876f3e95be6" translate="yes" xml:space="preserve">
          <source>To start go to the Tokens page.</source>
          <target state="translated">開始するには、トークンのページに移動します。</target>
        </trans-unit>
        <trans-unit id="6535887981d23564c6f2b5992e1cb91619e3898d" translate="yes" xml:space="preserve">
          <source>To switch profiles, on the command line, run the following command, replacing &lt;code&gt;profile-name&lt;/code&gt; with the name of your profile:</source>
          <target state="translated">プロファイルを切り替えるには、コマンドラインで次のコマンドを実行し、 &lt;code&gt;profile-name&lt;/code&gt; をプロファイルの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="b63489c20722865232653e6595029172bd35613b" translate="yes" xml:space="preserve">
          <source>To test a local install, go into some other folder, and then do:</source>
          <target state="translated">ローカルインストールをテストするには、他のフォルダに移動して、それを実行します。</target>
        </trans-unit>
        <trans-unit id="5979a1a4b0aa4419837294c2db143ebdf8bc1a5b" translate="yes" xml:space="preserve">
          <source>To test that you have successfully logged in, type &lt;code&gt;npm whoami&lt;/code&gt;.</source>
          <target state="translated">正常にログインしたことをテストするには、 &lt;code&gt;npm whoami&lt;/code&gt; と入力します。</target>
        </trans-unit>
        <trans-unit id="2599ee873054556bc24334850c86a9c84354c05d" translate="yes" xml:space="preserve">
          <source>To test that you have successfully logged in, type:</source>
          <target state="translated">ログインに成功したかどうかを確認するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="5b1d4ae861d3bd4c4bae77df1823957c0cb76fbb" translate="yes" xml:space="preserve">
          <source>To test the update, run the &lt;a href=&quot;cli/v6/commands/npm-outdated&quot;&gt;&lt;code&gt;outdated&lt;/code&gt; command&lt;/a&gt;. There should not be any output.</source>
          <target state="translated">更新をテストするには、&lt;a href=&quot;cli/v6/commands/npm-outdated&quot;&gt; &lt;code&gt;outdated&lt;/code&gt; コマンドを&lt;/a&gt;実行します。出力はありません。</target>
        </trans-unit>
        <trans-unit id="faa2799e6c3f66dff3c00280812bf324757fed06" translate="yes" xml:space="preserve">
          <source>To test your new account, type:</source>
          <target state="translated">新しいアカウントをテストするには、タイプします。</target>
        </trans-unit>
        <trans-unit id="ec61f70bbb5daa1da386866a7a015bb99fba9494" translate="yes" xml:space="preserve">
          <source>To test your new configuration, install a package globally without using &lt;code&gt;sudo&lt;/code&gt;:</source>
          <target state="translated">新しい構成をテストするには、 &lt;code&gt;sudo&lt;/code&gt; を使用せずにパッケージをグローバルにインストールします。</target>
        </trans-unit>
        <trans-unit id="d1d49e25dca6b94bfc48f9e52b92c1831bf7ab87" translate="yes" xml:space="preserve">
          <source>To test, run &lt;code&gt;npm -v&lt;/code&gt;.</source>
          <target state="translated">テストするには、 &lt;code&gt;npm -v&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="f83c45e4d8fa10bb85e8baec675eb851d55e0c5c" translate="yes" xml:space="preserve">
          <source>To transfer a package to another npm user using the CLI, run the &lt;a href=&quot;cli/v6/commands/npm-owner&quot;&gt;&lt;code&gt;npm owner add&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;rm&lt;/code&gt; commands in order, replacing &lt;code&gt;&amp;lt;their-username&amp;gt;&lt;/code&gt; with the other user's npm username, &lt;code&gt;&amp;lt;your-username&amp;gt;&lt;/code&gt; with your npm username, and &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; with the package you want to transfer:</source>
          <target state="translated">CLIを使用してパッケージを別のnpmユーザーに転送するには、&lt;a href=&quot;cli/v6/commands/npm-owner&quot;&gt; &lt;code&gt;npm owner add&lt;/code&gt; &lt;/a&gt;コマンドと &lt;code&gt;rm&lt;/code&gt; コマンドを順番に実行し、 &lt;code&gt;&amp;lt;their-username&amp;gt;&lt;/code&gt; を他のユーザーのnpmユーザー名に、 &lt;code&gt;&amp;lt;your-username&amp;gt;&lt;/code&gt; をnpmユーザー名に、 &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; に置き換えます。名前&amp;gt;転送するパッケージを使用：</target>
        </trans-unit>
        <trans-unit id="4d98dd27a2f21956bcd5d5f3c8b84c212714bd76" translate="yes" xml:space="preserve">
          <source>To transfer a package to the npm user account, run the following two commands in order, replacing &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; with your npm user name, and &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; with the package you want to transfer:</source>
          <target state="translated">パッケージをnpmユーザーアカウントに転送するには、次の2つのコマンドを順番に実行し、 &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; をnpmユーザー名に置き換え、 &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; を転送するパッケージに置き換えます。</target>
        </trans-unit>
        <trans-unit id="10f6641f1126e87df60ed6db1157516e7b3e30de" translate="yes" xml:space="preserve">
          <source>To transfer a package you own or maintain to another user, follow these steps:</source>
          <target state="translated">所有または管理しているパッケージを他のユーザーに転送するには、以下の手順に従います。</target>
        </trans-unit>
        <trans-unit id="abd459b748696e0282d944587aaa346e0a04b4bc" translate="yes" xml:space="preserve">
          <source>To turn off &lt;code&gt;npm audit&lt;/code&gt; when installing a single package, use the &lt;code&gt;--no-audit&lt;/code&gt; flag:</source>
          <target state="translated">単一のパッケージをインストールするときに &lt;code&gt;npm audit&lt;/code&gt; オフにするには、 &lt;code&gt;--no-audit&lt;/code&gt; フラグを使用します。</target>
        </trans-unit>
        <trans-unit id="68eee8cb3540e7a7c2398ca8b3c52ceb50de170f" translate="yes" xml:space="preserve">
          <source>To turn off &lt;code&gt;npm audit&lt;/code&gt; when installing all packages, set the &lt;code&gt;audit&lt;/code&gt; setting to &lt;code&gt;false&lt;/code&gt; in your user and global npmrc config files:</source>
          <target state="translated">すべてのパッケージをインストールするときに &lt;code&gt;npm audit&lt;/code&gt; オフにするには、ユーザーおよびグローバルnpmrc構成ファイルで &lt;code&gt;audit&lt;/code&gt; 設定を &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="646825c22606323b595ed196b57a283e49529099" translate="yes" xml:space="preserve">
          <source>To un-deprecate a package, specify an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) for the &lt;code&gt;message&lt;/code&gt; argument.</source>
          <target state="translated">パッケージの非推奨を解除するには、 &lt;code&gt;message&lt;/code&gt; 引数に空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）を指定します。</target>
        </trans-unit>
        <trans-unit id="66b1ee2cdf862057db48eb7da1a56e364c489320" translate="yes" xml:space="preserve">
          <source>To un-deprecate a package, specify an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) for the &lt;code&gt;message&lt;/code&gt; argument. Note that you must use double quotes with no space between them to format an empty string.</source>
          <target state="translated">パッケージの非推奨を解除するには、 &lt;code&gt;message&lt;/code&gt; 引数に空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）を指定します。空の文字列をフォーマットするには、間にスペースを入れずに二重引用符を使用する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d08a127ab462839acc95ee3dc20acf15bf9f55d9" translate="yes" xml:space="preserve">
          <source>To undeprecate a package, replace &lt;code&gt;&quot;&amp;lt;message&amp;gt;&quot;&lt;/code&gt; with &lt;code&gt;&quot;&quot;&lt;/code&gt; (an empty string) in one of the above commands.</source>
          <target state="translated">パッケージの非推奨を解除するには、上記のコマンドのいずれかで &lt;code&gt;&quot;&amp;lt;message&amp;gt;&quot;&lt;/code&gt; を &lt;code&gt;&quot;&quot;&lt;/code&gt; （空の文字列）に置き換えます。</target>
        </trans-unit>
        <trans-unit id="ec760180cc1fa0c79978481fe6cc3d9643a5c55f" translate="yes" xml:space="preserve">
          <source>To understand more about the power of package.json, see the video &quot;Installing npm packages locally&quot; which you can find in &lt;a href=&quot;installing-npm-packages-locally&quot;&gt;Chapter 4&lt;/a&gt;.</source>
          <target state="translated">package.jsonの機能の詳細については、&lt;a href=&quot;installing-npm-packages-locally&quot;&gt;第4章に&lt;/a&gt;あるビデオ「ローカルでのnpmパッケージのインストール」を参照してください。</target>
        </trans-unit>
        <trans-unit id="5ef2674efa42bf658dcba698bee42d01a3b8fa3d" translate="yes" xml:space="preserve">
          <source>To understand types of packages, click &lt;a href=&quot;packages&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">パッケージのタイプを理解するには、ここをクリックして&lt;a href=&quot;packages&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b326012fef8e8186e8dd285beea9b9bd247688ef" translate="yes" xml:space="preserve">
          <source>To uninstall a global package,type:</source>
          <target state="translated">グローバルパッケージをアンインストールするには</target>
        </trans-unit>
        <trans-unit id="596459046a3120fbc4ba2a9c621b9c8fce9070dd" translate="yes" xml:space="preserve">
          <source>To uninstall a package called jshint, you would type:</source>
          <target state="translated">jshint というパッケージをアンインストールするには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="2d60a486d3464e4019353ac651c72dab49cfa56e" translate="yes" xml:space="preserve">
          <source>To uninstall an unscoped global package, on the command line, use the &lt;code&gt;uninstall&lt;/code&gt; command with the &lt;code&gt;-g&lt;/code&gt; flag. Include the scope if the package is scoped.</source>
          <target state="translated">スコープ外のグローバルパッケージをアンインストールするには、コマンドラインで &lt;code&gt;-g&lt;/code&gt; フラグを指定して &lt;code&gt;uninstall&lt;/code&gt; コマンドを使用します。パッケージがスコープされている場合は、スコープを含めます。</target>
        </trans-unit>
        <trans-unit id="b6c72a857d1c3337a748579154fd6c99e6073537" translate="yes" xml:space="preserve">
          <source>To unpublish a single version of a package, run the following command, replacing &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; with the name of your package, and &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; with your version number:</source>
          <target state="translated">パッケージの単一バージョンを非公開にするには、次のコマンドを実行し、 &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; をパッケージの名前に置き換え、 &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; をバージョン番号に置き換えます。</target>
        </trans-unit>
        <trans-unit id="c8c6031f85a8e111bf2773056243eb34c2af2e63" translate="yes" xml:space="preserve">
          <source>To unpublish an entire package, run the following command, replacing &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; with the name of your package:</source>
          <target state="translated">パッケージ全体を非公開にするには、次のコマンドを実行して、 &lt;code&gt;&amp;lt;package-name&amp;gt;&lt;/code&gt; をパッケージの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="b4ec1ec83c8670ad7e84893e67c68f4eb5c48cc3" translate="yes" xml:space="preserve">
          <source>To update a single global package, on the command line, run:</source>
          <target state="translated">単一のグローバルパッケージを更新するには、コマンドラインで実行します。</target>
        </trans-unit>
        <trans-unit id="e478f3ef9718a245ad4cebeee899644f92c8d415" translate="yes" xml:space="preserve">
          <source>To update all global packages, on the command line, run:</source>
          <target state="translated">すべてのグローバルパッケージを更新するには、コマンドラインで実行します。</target>
        </trans-unit>
        <trans-unit id="cdee74d0c7f42ef7853a82ef63fbe70fbcf9dab1" translate="yes" xml:space="preserve">
          <source>To update all global packages, type:</source>
          <target state="translated">すべてのグローバルパッケージを更新するには、次のようにタイプします。</target>
        </trans-unit>
        <trans-unit id="9e82ab9d627eba7e05d5fcb9bffd665556ff3224" translate="yes" xml:space="preserve">
          <source>To update global packages, type:</source>
          <target state="translated">グローバルパッケージを更新するには</target>
        </trans-unit>
        <trans-unit id="1005fdf817279cc7f77156c4164f91f42da89dd8" translate="yes" xml:space="preserve">
          <source>To update the email address used for receipts, beside &quot;Send my receipts&quot;, select the checkbox and type the email address that should receive billing receipts.</source>
          <target state="translated">領収書に使用するメールアドレスを更新するには、「領収書を送信」の横にある「領収書を送信」のチェックボックスを選択し、請求書の領収書を受信するメールアドレスを入力します。</target>
        </trans-unit>
        <trans-unit id="e48996412b2096ec20a8ac71295d330ff7d2c67a" translate="yes" xml:space="preserve">
          <source>To update to the &lt;code&gt;next&lt;/code&gt; release of npm, on the command line, run:</source>
          <target state="translated">npmの &lt;code&gt;next&lt;/code&gt; リリースに更新するには、コマンドラインで次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="321c5e9a50713fc98e06f28c2c69acc0aefa50cf" translate="yes" xml:space="preserve">
          <source>To use a scoped package, simply include the scope wherever you use the package name.</source>
          <target state="translated">スコープされたパッケージを使用するには、パッケージ名を使用する際にスコープを含めるだけです。</target>
        </trans-unit>
        <trans-unit id="e26b72df351f06cadb2ed9923ad61ecc94462428" translate="yes" xml:space="preserve">
          <source>To use private packages, you must</source>
          <target state="translated">プライベートパッケージを利用するには</target>
        </trans-unit>
        <trans-unit id="b3d76e94667094e0f90f7dd3fce542086b726dff" translate="yes" xml:space="preserve">
          <source>To use teams to manage permissions on packages belonging to your organization, use the &lt;code&gt;npm access&lt;/code&gt; command to grant or revoke the appropriate permissions.</source>
          <target state="translated">チームを使用して組織に属するパッケージの権限を管理するには、 &lt;code&gt;npm access&lt;/code&gt; コマンドを使用して適切な権限を付与または取り消します。</target>
        </trans-unit>
        <trans-unit id="0ef2536067b8af2041d8a64d6c6dcfbc8c98507d" translate="yes" xml:space="preserve">
          <source>To use this, supply a &lt;code&gt;bin&lt;/code&gt; field in your package.json which is a map of command name to local file name. On install, npm will symlink that file into &lt;code&gt;prefix/bin&lt;/code&gt; for global installs, or &lt;code&gt;./node_modules/.bin/&lt;/code&gt; for local installs.</source>
          <target state="translated">これを使用するには、package.jsonにコマンド名とローカルファイル名のマップである &lt;code&gt;bin&lt;/code&gt; フィールドを指定します。インストール時に、npmはそのファイルをグローバルインストールの場合は &lt;code&gt;prefix/bin&lt;/code&gt; に、ローカルインストールの場合は &lt;code&gt;./node_modules/.bin/&lt;/code&gt; にシンボリックリンクします。</target>
        </trans-unit>
        <trans-unit id="69ce33b1493b254b4efb5ff103d047bac1e88427" translate="yes" xml:space="preserve">
          <source>To verify the package is using your organization scope, in a text editor, open the package's &lt;code&gt;package.json&lt;/code&gt; file and check that the name is &lt;code&gt;@your_org_name/&amp;lt;pkg_name&amp;gt;&lt;/code&gt;, replacing &lt;code&gt;your_org_name&lt;/code&gt; with the name of your organization.</source>
          <target state="translated">パッケージが組織スコープを使用していることを確認するには、テキストエディターでパッケージの &lt;code&gt;package.json&lt;/code&gt; ファイルを開き、名前が &lt;code&gt;@your_org_name/&amp;lt;pkg_name&amp;gt;&lt;/code&gt; であることを &lt;code&gt;your_org_name&lt;/code&gt; し、your_org_nameを組織の名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="bb78af8f3c57764094feb1b0f30e445fbbddec93" translate="yes" xml:space="preserve">
          <source>To view a single receipt, find the row of the receipt you want to view, then, on the right side of the row, click the view icon.</source>
          <target state="translated">1 つのレシートを表示するには、表示したいレシートの行を探して、行の右側にある表示アイコンをクリックします。</target>
        </trans-unit>
        <trans-unit id="ef3e91549eaadf685bb1abf71274c1aaf6d3b5ee" translate="yes" xml:space="preserve">
          <source>To view all tokens associated with your account, in the upper right corner of the page, click your profile picture, then click &lt;strong&gt;Access Tokens&lt;/strong&gt;.</source>
          <target state="translated">アカウントに関連付けられているすべてのトークンを表示するには、ページの右上隅にあるプロフィール写真をクリックしてから、[&lt;strong&gt;トークンへのアクセス&lt;/strong&gt;]をクリックします。</target>
        </trans-unit>
        <trans-unit id="31feeeb2658df5550814e56d57f9f398c844d048" translate="yes" xml:space="preserve">
          <source>To view all tokens associated with your account, on the command line, run the following command:</source>
          <target state="translated">アカウントに関連付けられたすべてのトークンを表示するには、コマンドラインで以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="d9caa615c61638ea673d60daffd5ec4ebf1f7417" translate="yes" xml:space="preserve">
          <source>To view and set profile properties from the Command Line Interface (CLI), use these commands:</source>
          <target state="translated">コマンドラインインタフェース(CLI)からプロファイルのプロパティを表示および設定するには、以下のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="716c4ed142daa788e5195de7ad97705733d86c54" translate="yes" xml:space="preserve">
          <source>To view the tokens associated with your account, type:</source>
          <target state="translated">アカウントに関連付けられたトークンを表示するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="be77979750ad502f0b40aced77252386f71fc1b5" translate="yes" xml:space="preserve">
          <source>To view your user profile settings from the CLI, on the command line, run the following command:</source>
          <target state="translated">CLIからユーザープロファイルの設定を表示するには、コマンドラインで以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="17e4f7b079547baa93016822d3fc01f2dce39669" translate="yes" xml:space="preserve">
          <source>Token attributes</source>
          <target state="translated">トークン属性</target>
        </trans-unit>
        <trans-unit id="55017d46c95f163df43834f0ace58b215aaff0a9" translate="yes" xml:space="preserve">
          <source>Token commands empower you to:</source>
          <target state="translated">トークンコマンドはあなたに力を与えます。</target>
        </trans-unit>
        <trans-unit id="cf9b4323d882774d35f9d0c18eacc9a8cfa481d8" translate="yes" xml:space="preserve">
          <source>Tools we use</source>
          <target state="translated">使用するツール</target>
        </trans-unit>
        <trans-unit id="05e8d1a3538b3e90690cad906240b5fa54e138df" translate="yes" xml:space="preserve">
          <source>Trademarks</source>
          <target state="translated">Trademarks</target>
        </trans-unit>
        <trans-unit id="37a3fa121c2f7d2a4d97c5e354ea8a33cc938d3f" translate="yes" xml:space="preserve">
          <source>Transfer packages owned by your user account to your new organization.</source>
          <target state="translated">ユーザーアカウントが所有するパッケージを新しい組織に転送します。</target>
        </trans-unit>
        <trans-unit id="1c6c7f3d4ae0eb7380712ad9ff3b1dd849618f6b" translate="yes" xml:space="preserve">
          <source>Transfer your existing organization and team memberships and contributor access settings to your new user account.</source>
          <target state="translated">既存の組織やチームのメンバーシップやコントリビューターのアクセス設定を新しいユーザーアカウントに移行します。</target>
        </trans-unit>
        <trans-unit id="28a960ef0d14dca18f03eac67a7d75e9e37bb383" translate="yes" xml:space="preserve">
          <source>Transferring a deprecated package to npm</source>
          <target state="translated">非推奨のパッケージを npm に移行する</target>
        </trans-unit>
        <trans-unit id="3b68f870ad5a20b02d917d840cd3682fdfafcd3e" translate="yes" xml:space="preserve">
          <source>Transferring a package from a user account to another user account</source>
          <target state="translated">ユーザーアカウントから別のユーザーアカウントへのパッケージの転送</target>
        </trans-unit>
        <trans-unit id="beee88e08fb2439cdfba5dbf4e8c7678eb47d318" translate="yes" xml:space="preserve">
          <source>Transferring a package from a user account to another user account on the command line</source>
          <target state="translated">コマンドラインでユーザーアカウントから別のユーザーアカウントにパッケージを転送する</target>
        </trans-unit>
        <trans-unit id="eca10a48a9618be8d79047b592a53331c5421cdf" translate="yes" xml:space="preserve">
          <source>Transferring a package from a user account to another user account on the website</source>
          <target state="translated">ウェブサイト上のユーザーアカウントから他のユーザーアカウントへのパッケージの転送</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="e92af587ea4daae7337cd151f2622a0ca2d3a746" translate="yes" xml:space="preserve">
          <source>Try clearing the npm cache</source>
          <target state="translated">npm キャッシュをクリアしてみてください。</target>
        </trans-unit>
        <trans-unit id="38a31b12267c63a846e46c42d2a3f5b386f165d5" translate="yes" xml:space="preserve">
          <source>Try not to use scripts to do what npm can do for you. Read through &lt;a href=&quot;../configuring-npm/package-json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; to see all the things that you can specify and enable by simply describing your package appropriately. In general, this will lead to a more robust and consistent state.</source>
          <target state="translated">npmがあなたのためにできることをするためにスクリプトを使わないようにしてください。&lt;a href=&quot;../configuring-npm/package-json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;を読んで、パッケージを適切に説明するだけで指定および有効化できるすべてのものを確認してください。一般に、これにより、より堅牢で一貫性のある状態になります。</target>
        </trans-unit>
        <trans-unit id="93affb5616fb7c7647ae8043b382d28430f4641b" translate="yes" xml:space="preserve">
          <source>Try not to use scripts to do what npm can do for you. Read through &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; to see all the things that you can specify and enable by simply describing your package appropriately. In general, this will lead to a more robust and consistent state.</source>
          <target state="translated">npmができることをするためにスクリプトを使用しないようにしてください。 &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; を読んで、パッケージを適切に記述するだけで指定および有効化できるすべてのことを確認してください。一般に、これはより堅牢で一貫した状態につながります。</target>
        </trans-unit>
        <trans-unit id="44885e60cd235a439b8945d8e128dfac9aa21bd3" translate="yes" xml:space="preserve">
          <source>Try the latest stable version of node</source>
          <target state="translated">最新の安定版のnodeを試してみてください。</target>
        </trans-unit>
        <trans-unit id="33a284c97a46c0c4f7b72104efdd1126ac1f26c6" translate="yes" xml:space="preserve">
          <source>Try the latest stable version of npm</source>
          <target state="translated">最新の安定版 npm を試してみてください。</target>
        </trans-unit>
        <trans-unit id="9ecec92941997e8666c7654e6af82c09b6e5f86b" translate="yes" xml:space="preserve">
          <source>Trying to install another plugin with a conflicting requirement will cause an error. For this reason, make sure your plugin requirement is as broad as possible, and not to lock it down to specific patch versions.</source>
          <target state="translated">要件が矛盾している別のプラグインをインストールしようとすると、エラーが発生します。このため、プラグインの要件を可能な限り広くし、特定のパッチバージョンに固定しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="a70d72ade0537002e1d7d86d04a50d8d31ae6fdd" translate="yes" xml:space="preserve">
          <source>Turning off &lt;code&gt;npm audit&lt;/code&gt; on package installation</source>
          <target state="translated">パッケージのインストール時に &lt;code&gt;npm audit&lt;/code&gt; をオフにする</target>
        </trans-unit>
        <trans-unit id="63f3c11f22c587f5edf7cea828684f6fd6d67697" translate="yes" xml:space="preserve">
          <source>Turning off npm audit on package installation</source>
          <target state="translated">パッケージインストール時のnpm監査をオフにする</target>
        </trans-unit>
        <trans-unit id="3a380d08f641a521748abbd5cb2f6506d036ae02" translate="yes" xml:space="preserve">
          <source>Twitter user name</source>
          <target state="translated">ツイッターユーザー名</target>
        </trans-unit>
        <trans-unit id="b70e1858ffeb51db979414b48f30c673ee8b2cdd" translate="yes" xml:space="preserve">
          <source>Two-factor authentication (2FA) protects against unauthorized access to your account by confirming your identity using:</source>
          <target state="translated">二要素認証(2FA)では、本人確認を利用してアカウントへの不正アクセスから保護します。</target>
        </trans-unit>
        <trans-unit id="ee07ee7aaaf0abf7df99a61d8f509ac77540f53b" translate="yes" xml:space="preserve">
          <source>Two-factor authentication is now available as a profile setting from the website.</source>
          <target state="translated">二要素認証は、ウェブサイトからプロファイル設定として利用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="6ce7ec79c15d30bd7f120ed4b226284a2e7ebe2f" translate="yes" xml:space="preserve">
          <source>Two-factor authentication modes on npm</source>
          <target state="translated">npm での二要素認証モード</target>
        </trans-unit>
        <trans-unit id="dd3d8a1058f0ed1e449df59fb7c6c25b746ebd12" translate="yes" xml:space="preserve">
          <source>Two-factor authentication multiplies the protection against attacks, and we recommend that you implement this with your npm account.</source>
          <target state="translated">二要素認証は攻撃に対する防御力を倍増させるので、npm アカウントでの実装をお勧めします。</target>
        </trans-unit>
        <trans-unit id="47902e116155a70c635fa3ccbd145e8eaa2c3773" translate="yes" xml:space="preserve">
          <source>Two-factor authentication on npm can be enabled for authorization only, or authorization and writes.</source>
          <target state="translated">npm での二要素認証は、認証のみ、または認証と書き込みを有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="f9d6a0edada9b3cece51bcff295a066786e3aa2e" translate="yes" xml:space="preserve">
          <source>Two-factor authentication status</source>
          <target state="translated">二要素認証の状態</target>
        </trans-unit>
        <trans-unit id="e03b1bd9d9b7c2b2307fdc14a4b22822d28895c2" translate="yes" xml:space="preserve">
          <source>Two-spaces. Tabs are better, but they look like hell in web browsers (and on GitHub), and node uses 2 spaces, so that's that.</source>
          <target state="translated">スペースが2つ。タブの方がいいのですが、ウェブブラウザ(とGitHub)では地獄のように見えますし、nodeは2つのスペースを使っているので、それだけです。</target>
        </trans-unit>
        <trans-unit id="3bd3038646c80be43387f2a5819377e7df025a7d" translate="yes" xml:space="preserve">
          <source>Type 'npm token delete 123456', where 123456 is the &lt;em&gt;token id&lt;/em&gt;. Note: The truncated version of the token will not work.</source>
          <target state="translated">「npm token delete 123456」と入力し&lt;em&gt;ます&lt;/em&gt;。123456は&lt;em&gt;トークンID&lt;/em&gt;です。注：トークンの切り捨てられたバージョンは機能しません。</target>
        </trans-unit>
        <trans-unit id="cb20835593b584f2a088967cadb510b3c079517e" translate="yes" xml:space="preserve">
          <source>Type 'npm token list' to confirm that the token has been removed.</source>
          <target state="translated">npm token list」と入力して、トークンが削除されたことを確認します。</target>
        </trans-unit>
        <trans-unit id="7044f81b5c96169b9215ea03b7fee2aaa5d82b1a" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;npm audit&lt;/code&gt; and press &lt;strong&gt;Enter&lt;/strong&gt;.</source>
          <target state="translated">入力 &lt;code&gt;npm audit&lt;/code&gt; 押しを&lt;strong&gt;入力します&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8f4bd77f81bc3f0a5c96bc6d1aebec51acbf82df" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;npm token list&lt;/code&gt;</source>
          <target state="translated">タイプ &lt;code&gt;npm token list&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef9eec2f1ea28024e3e24ba29f22782b60aa2685" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;npm whoami&lt;/code&gt; from a terminal to see if you are already logged in (technically, this also means that your credentials have been stored locally).</source>
          <target state="translated">端末から &lt;code&gt;npm whoami&lt;/code&gt; と入力して、すでにログインしているかどうかを確認します（技術的には、資格情報がローカルに保存されていることも意味します）。</target>
        </trans-unit>
        <trans-unit id="62e805c7115685b53fded8d1f0ca6edad94544a6" translate="yes" xml:space="preserve">
          <source>Type the command that meets the level of security you wish to apply (auth-and-writes is the default).</source>
          <target state="translated">適用するセキュリティのレベルに合わせてコマンドを入力します(自動書き込みがデフォルト)。</target>
        </trans-unit>
        <trans-unit id="0c644bf895233c71f660217ac9167f760c46d826" translate="yes" xml:space="preserve">
          <source>Type: 'oauth', 'saml', or null</source>
          <target state="translated">タイプを指定します。oauth'、'saml'、または null</target>
        </trans-unit>
        <trans-unit id="e03813247b223d8540c9f46c7cfa42ab382f9be1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;'legacy'&lt;/code&gt;, &lt;code&gt;'sso'&lt;/code&gt;, &lt;code&gt;'saml'&lt;/code&gt;, &lt;code&gt;'oauth'&lt;/code&gt;</source>
          <target state="translated">タイプ： &lt;code&gt;'legacy'&lt;/code&gt; 、 &lt;code&gt;'sso'&lt;/code&gt; 、 &lt;code&gt;'saml'&lt;/code&gt; 、 &lt;code&gt;'oauth'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="818db188488312cd5c36432a677803be36b39ff4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;'low'&lt;/code&gt;, &lt;code&gt;'moderate'&lt;/code&gt;, &lt;code&gt;'high'&lt;/code&gt;, &lt;code&gt;'critical'&lt;/code&gt;</source>
          <target state="translated">タイプ： &lt;code&gt;'low'&lt;/code&gt; 、 &lt;code&gt;'moderate'&lt;/code&gt; 、 &lt;code&gt;'high'&lt;/code&gt; 、 &lt;code&gt;'critical'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98564afe14794b34b53a0548c8a0d1c06d9baeb2" translate="yes" xml:space="preserve">
          <source>Type: Access</source>
          <target state="translated">タイプ アクセス</target>
        </trans-unit>
        <trans-unit id="5ad6268ff31b806c01d648ee8c4ff5eeb7db8607" translate="yes" xml:space="preserve">
          <source>Type: Boolean</source>
          <target state="translated">型を指定します。論理値</target>
        </trans-unit>
        <trans-unit id="39f0ccd8d76f34bb07ba2be2488768ec73b65736" translate="yes" xml:space="preserve">
          <source>Type: Boolean or &lt;code&gt;&quot;always&quot;&lt;/code&gt;</source>
          <target state="translated">タイプ：ブール値または &lt;code&gt;&quot;always&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a79091b6193e2a1fb881c2086833e7020a7054d" translate="yes" xml:space="preserve">
          <source>Type: Boolean, &lt;code&gt;&quot;auto&quot;&lt;/code&gt; or &lt;code&gt;&quot;warn-only&quot;&lt;/code&gt;</source>
          <target state="translated">タイプ：ブール、 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; または &lt;code&gt;&quot;warn-only&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c683dd41a03a93c951050963cee195cbc52354b" translate="yes" xml:space="preserve">
          <source>Type: Date</source>
          <target state="translated">タイプ 日付</target>
        </trans-unit>
        <trans-unit id="a86588db043d51f2705db62d068a573e96522378" translate="yes" xml:space="preserve">
          <source>Type: IP Address</source>
          <target state="translated">タイプ。IPアドレス</target>
        </trans-unit>
        <trans-unit id="61d1584852730f8a9a50293a5a05b80ac551a9ac" translate="yes" xml:space="preserve">
          <source>Type: Int</source>
          <target state="translated">タイプは以下の通りです。国際的な</target>
        </trans-unit>
        <trans-unit id="d226a0852f0303eba13078e76fee331bf241aa4f" translate="yes" xml:space="preserve">
          <source>Type: Number</source>
          <target state="translated">タイプ 数</target>
        </trans-unit>
        <trans-unit id="673bf5b6802b4cebbb91c97f56390e9cfc691748" translate="yes" xml:space="preserve">
          <source>Type: Octal numeric string in range 0000..0777 (0..511)</source>
          <target state="translated">タイプ タイプ:8進数文字列(範囲0000...0777 (0...511)</target>
        </trans-unit>
        <trans-unit id="53b79661b804c798c45929a976913b5dd03e70c7" translate="yes" xml:space="preserve">
          <source>Type: Stream</source>
          <target state="translated">タイプ 流れ</target>
        </trans-unit>
        <trans-unit id="1389ac15aae9a127e8c4372778a3c9c59b0875a8" translate="yes" xml:space="preserve">
          <source>Type: String</source>
          <target state="translated">タイプを指定します。文字列</target>
        </trans-unit>
        <trans-unit id="d5f855531e411617f4b3d1dceb2181d7d1dc43a4" translate="yes" xml:space="preserve">
          <source>Type: String or Array</source>
          <target state="translated">タイプ。文字列または配列</target>
        </trans-unit>
        <trans-unit id="5078f4f77fc3672f87b1870885f1e0cc91d5ad73" translate="yes" xml:space="preserve">
          <source>Type: String or Number</source>
          <target state="translated">タイプ。文字列または数値</target>
        </trans-unit>
        <trans-unit id="3a7e58fa2e21283cf21e204a83bbb501c6467a1c" translate="yes" xml:space="preserve">
          <source>Type: String, Array or null</source>
          <target state="translated">タイプ。文字列、配列、またはnull</target>
        </trans-unit>
        <trans-unit id="e64855b6ca5bfe8e827e0aa306ab4465ca664ab3" translate="yes" xml:space="preserve">
          <source>Type: String, Array, null</source>
          <target state="translated">タイプは以下の通りです。文字列、配列、null</target>
        </trans-unit>
        <trans-unit id="33642151de341e1b94245ecd43720c225b6de4fe" translate="yes" xml:space="preserve">
          <source>Type: boolean</source>
          <target state="translated">タイプ:boolean</target>
        </trans-unit>
        <trans-unit id="544012f27f826f14293d413425d670df78510057" translate="yes" xml:space="preserve">
          <source>Type: path</source>
          <target state="translated">タイプ:パス</target>
        </trans-unit>
        <trans-unit id="beed97812fa7e3aaf6d558dd54672c61e1c8221e" translate="yes" xml:space="preserve">
          <source>Type: semver</source>
          <target state="translated">タイプ:semver</target>
        </trans-unit>
        <trans-unit id="1d1b9fca59542248657a77d1dd2ac753aa678136" translate="yes" xml:space="preserve">
          <source>Type: semver or false</source>
          <target state="translated">タイプ:semver or false</target>
        </trans-unit>
        <trans-unit id="428936d719b5350a4ba25542d03d9af4ff0e0675" translate="yes" xml:space="preserve">
          <source>Type: url</source>
          <target state="translated">タイプ:url</target>
        </trans-unit>
        <trans-unit id="0e1c228fbda42d5ad91cf7851973be3e5b342539" translate="yes" xml:space="preserve">
          <source>URLs as Dependencies</source>
          <target state="translated">依存関係としての URL</target>
        </trans-unit>
        <trans-unit id="779e0a735250c0e18f70461ddf1dde988deb5b32" translate="yes" xml:space="preserve">
          <source>USE CASES</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="6eb0c61201a96afc99cbf180f1c8d93c0a9fd8c8" translate="yes" xml:space="preserve">
          <source>USER</source>
          <target state="translated">USER</target>
        </trans-unit>
        <trans-unit id="53d4a963e7d96aec35b371796e7f3b5c33d787c1" translate="yes" xml:space="preserve">
          <source>Undeprecating a package or version</source>
          <target state="translated">パッケージやバージョンの非推奨</target>
        </trans-unit>
        <trans-unit id="272f1aec04f0748481e1d0afc79fad9901844eb6" translate="yes" xml:space="preserve">
          <source>Under &quot;Are you sure?&quot;, click &lt;strong&gt;Downgrade to a free account&lt;/strong&gt;.</source>
          <target state="translated">[よろしいですか？]で、[&lt;strong&gt;無料アカウントにダウングレード&lt;/strong&gt;]をクリックし&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5bfe0aa9e5b86aec325283063d967fe6c532d286" translate="yes" xml:space="preserve">
          <source>Under &quot;Package Access&quot;, deselect &quot;Is Package Private?&quot;</source>
          <target state="translated">パッケージアクセス」で、「パッケージは非公開ですか」の選択を解除します。</target>
        </trans-unit>
        <trans-unit id="bc6b9191b4ff8a5636a31319c08f676f0f94a5d2" translate="yes" xml:space="preserve">
          <source>Under &quot;Package Access&quot;, select &quot;Is Package Private?&quot;</source>
          <target state="translated">パッケージアクセス」で「パッケージは非公開ですか?</target>
        </trans-unit>
        <trans-unit id="54161d227024925294a90605ac7836666ea8a331" translate="yes" xml:space="preserve">
          <source>Under &quot;Package Access&quot;, select &quot;Require Two Factor Authentication to publish or modify settings&quot;</source>
          <target state="translated">パッケージアクセス」で、「設定を公開または変更するには二要素認証を必要とする」を選択します。</target>
        </trans-unit>
        <trans-unit id="21f6ac9ab3242afe44863e68d8ffa5bffaef6282" translate="yes" xml:space="preserve">
          <source>Under &quot;Publishing access&quot;, select the requirements to publish a package.</source>
          <target state="translated">公開アクセス」で、パッケージを公開するための要件を選択します。</target>
        </trans-unit>
        <trans-unit id="898aecc14e077a2a21031b3017818b36e4981296" translate="yes" xml:space="preserve">
          <source>Under &quot;Want to upgrade?&quot;, click &lt;strong&gt;Enable Private Publishing for $7/mo&lt;/strong&gt;.</source>
          <target state="translated">[アップグレードしますか？]で、[&lt;strong&gt;プライベートパブリッシングを月額7ドルで有効&lt;/strong&gt;にする]をクリックします。</target>
        </trans-unit>
        <trans-unit id="049de2f787a8f90ee59a85846a9c862869601793" translate="yes" xml:space="preserve">
          <source>Under &quot;change plan&quot;, click &lt;strong&gt;Downgrade Plan&lt;/strong&gt;.</source>
          <target state="translated">[&lt;strong&gt;プランの&lt;/strong&gt;変更]で、[&lt;strong&gt;プランのダウングレード&lt;/strong&gt;]をクリックします。</target>
        </trans-unit>
        <trans-unit id="2315cc64dafa662f55e4c4cec2a922c3e0c810b5" translate="yes" xml:space="preserve">
          <source>Under &quot;change plan&quot;, click &lt;strong&gt;Upgrade Plan ($7/User)&lt;/strong&gt;.</source>
          <target state="translated">[&lt;strong&gt;プランの&lt;/strong&gt;変更]で、[&lt;strong&gt;プランのアップグレード（$ 7 /ユーザー）&lt;/strong&gt; ]をクリックします。</target>
        </trans-unit>
        <trans-unit id="65344656b055cb647c96eab530e2a69524c7b2ae" translate="yes" xml:space="preserve">
          <source>Under &quot;monthly bill&quot;, click &lt;strong&gt;Edit Payment Info&lt;/strong&gt;.</source>
          <target state="translated">[毎月の請求書]で、[&lt;strong&gt;支払い情報の編集&lt;/strong&gt;]をクリックします。</target>
        </trans-unit>
        <trans-unit id="8061e7a863037958c0ec7c0ac7f994816337716a" translate="yes" xml:space="preserve">
          <source>Under the &quot;Invitations&quot; field, click the &lt;strong&gt;X&lt;/strong&gt; next to the name of the user invitation you would like to revoke.</source>
          <target state="translated">[招待状]フィールドで、取り消すユーザー招待状の名前の横にある[ &lt;strong&gt;X&lt;/strong&gt; ]をクリックします。</target>
        </trans-unit>
        <trans-unit id="b2d51f2666c864e15528e37e3ee7a5fbc3d060a0" translate="yes" xml:space="preserve">
          <source>Under the &lt;strong&gt;Name&lt;/strong&gt; field, choose either the &quot;Unlimited private packages&quot; paid plan or the &quot;Unlimited public packages&quot; free plan and click &lt;strong&gt;Buy&lt;/strong&gt; or &lt;strong&gt;Create&lt;/strong&gt;.</source>
          <target state="translated">[&lt;strong&gt;名前]&lt;/strong&gt;フィールドで、[無制限のプライベートパッケージ]有料プランまたは[無制限のパブリックパッケージ]無料プランのいずれかを選択し、[&lt;strong&gt;購入&lt;/strong&gt;]または[&lt;strong&gt;作成&lt;/strong&gt;]をクリックし&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="dfbd2c669d0f17da8c9795396b117286c553f14f" translate="yes" xml:space="preserve">
          <source>Underneath &lt;code&gt;foo -&amp;gt; baz&lt;/code&gt; [D], quux's [E] folder tree is empty, because its dependency on bar is satisfied by the parent folder copy installed at [B].</source>
          <target state="translated">foo- &lt;code&gt;foo -&amp;gt; baz&lt;/code&gt; [D]の下では、[B]にインストールされている親フォルダーのコピーによってbarへの依存関係が満たされているため、quuxの[E]フォルダーツリーは空です。</target>
        </trans-unit>
        <trans-unit id="48772014d2e7cf581cb4827c2e89ea11d9256ad1" translate="yes" xml:space="preserve">
          <source>Underneath bar, the &lt;code&gt;baz -&amp;gt; quux -&amp;gt; bar&lt;/code&gt; dependency creates a cycle. However, because bar is already in quux's ancestry [B], it does not unpack another copy of bar into that folder.</source>
          <target state="translated">バーの下で、 &lt;code&gt;baz -&amp;gt; quux -&amp;gt; bar&lt;/code&gt; 依存関係はサイクルを作成します。ただし、barはすでにquuxの祖先にあるため[B]、barの別のコピーをそのフォルダーに解凍しません。</target>
        </trans-unit>
        <trans-unit id="5b3205877df744c31aaf48c8abc7e3d6d11753a9" translate="yes" xml:space="preserve">
          <source>Understand npm policies</source>
          <target state="translated">npm のポリシーを理解する</target>
        </trans-unit>
        <trans-unit id="3d5e0b0303fc630be2f430fee2f19e846c040e91" translate="yes" xml:space="preserve">
          <source>Understanding Packages and Modules</source>
          <target state="translated">パッケージとモジュールを理解する</target>
        </trans-unit>
        <trans-unit id="e81d62054c180c667cee67bb83833169d0647f6b" translate="yes" xml:space="preserve">
          <source>Uninstall &lt;code&gt;lodash&lt;/code&gt; with &lt;code&gt;npm uninstall&lt;/code&gt;. Confirm that it ran successfully by listing the contents of the &lt;code&gt;node_modules&lt;/code&gt; directory and confirming the absence of a directory called &lt;code&gt;lodash&lt;/code&gt;.</source>
          <target state="translated">アンインストール &lt;code&gt;lodash&lt;/code&gt; と &lt;code&gt;npm uninstall&lt;/code&gt; 。それは内容リストすることで正常に実行されたことを確認し &lt;code&gt;node_modules&lt;/code&gt; のディレクトリをと呼ばれるディレクトリが存在しないことを確認 &lt;code&gt;lodash&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="6ae4c2b298cf640fa0e0ac77fa3b55fa43900bba" translate="yes" xml:space="preserve">
          <source>Uninstall Lodash</source>
          <target state="translated">ロダッシュのアンインストール</target>
        </trans-unit>
        <trans-unit id="973c88704231b1adce5097619bccb21d91209fd3" translate="yes" xml:space="preserve">
          <source>Uninstalling global packages</source>
          <target state="translated">グローバルパッケージのアンインストール</target>
        </trans-unit>
        <trans-unit id="e05f1324eeddbca8a8242ffbde62cf15c5a50992" translate="yes" xml:space="preserve">
          <source>Uninstalling local packages</source>
          <target state="translated">ローカルパッケージのアンインストール</target>
        </trans-unit>
        <trans-unit id="30dc942104f8adb22f7c9eb043b5c4a8ecc89420" translate="yes" xml:space="preserve">
          <source>Uninstalling packages and dependencies</source>
          <target state="translated">パッケージと依存関係のアンインストール</target>
        </trans-unit>
        <trans-unit id="31e69262e60990225ea053dc7e282f72dab181ad" translate="yes" xml:space="preserve">
          <source>Unix system (such as OSX): &lt;code&gt;ls node_modules&lt;/code&gt;</source>
          <target state="translated">Unixシステム（OSXなど）： &lt;code&gt;ls node_modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="270c390f577a6ae9a9c2b8aa8625038aa7c78a7d" translate="yes" xml:space="preserve">
          <source>Unless the user has set the &lt;code&gt;engine-strict&lt;/code&gt; config flag, this field is advisory only and will only produce warnings when your package is installed as a dependency.</source>
          <target state="translated">ユーザーが &lt;code&gt;engine-strict&lt;/code&gt; 構成フラグを設定していない限り、このフィールドは助言のみであり、パッケージが依存関係としてインストールされている場合にのみ警告を生成します。</target>
        </trans-unit>
        <trans-unit id="ecd87ea44b577f57d907a311468ab4ae1970c135" translate="yes" xml:space="preserve">
          <source>Unpublish packages</source>
          <target state="translated">未発表のパッケージ</target>
        </trans-unit>
        <trans-unit id="61aeee6af3f9888eeb0dc1257fe6270569310fbd" translate="yes" xml:space="preserve">
          <source>Unpublishing a package permanently removes the package from the registry so it is no longer available for other users to install. Once a package is unpublished, it cannot be republished. If you've unpublished a package by mistake, we'd recommend publishing again under a different name, or for unpublished versions, bumping the version number and publishing again.</source>
          <target state="translated">パッケージの公開を解除すると、レジストリからパッケージが永久に削除され、他のユーザがインストールできなくなります。一度公開されたパッケージは再公開できません。誤ってパッケージをアンパブリッシュしてしまった場合は、別の名前で再発行するか、未発行のバージョンについてはバージョン番号を変更して再発行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="9510c07c7c69ffef902ec0e39eb4266610b4ca8e" translate="yes" xml:space="preserve">
          <source>Unpublishing a single version of a package</source>
          <target state="translated">パッケージの単一バージョンを公開しないこと</target>
        </trans-unit>
        <trans-unit id="b1e1dc1feb2dc64792402a43744371eaf82178ee" translate="yes" xml:space="preserve">
          <source>Unpublishing an entire package</source>
          <target state="translated">パッケージ全体を公開しない</target>
        </trans-unit>
        <trans-unit id="fac9da362b01ee0aac94e73b4a5ab64311ee3845" translate="yes" xml:space="preserve">
          <source>Unpublishing packages from the registry</source>
          <target state="translated">レジストリからパッケージの公開を解除する</target>
        </trans-unit>
        <trans-unit id="17aab7bfad1ab4495b2aac3a4760bf5f4a6f8e38" translate="yes" xml:space="preserve">
          <source>Unscoped</source>
          <target state="translated">Unscoped</target>
        </trans-unit>
        <trans-unit id="13f62513dfcaabc06a6fbb11a3a16f1f46557744" translate="yes" xml:space="preserve">
          <source>Unscoped package</source>
          <target state="translated">抜き書きパッケージ</target>
        </trans-unit>
        <trans-unit id="b12c704d013a7c60d4c13d53290352cec7ae371b" translate="yes" xml:space="preserve">
          <source>Unscoped packages are &lt;em&gt;always public&lt;/em&gt;.</source>
          <target state="translated">対象範囲外のパッケージは&lt;em&gt;常にパブリック&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="6e0e05cad3080e7109b998393f1334f3d903912e" translate="yes" xml:space="preserve">
          <source>Unscoped packages are always public, which means they can be searched for, downloaded, and installed by anyone. To install a public package, on the command line, run</source>
          <target state="translated">未スキャンのパッケージは常に公開されており、誰でも検索したりダウンロードしたりインストールしたりすることができます。パブリックパッケージをインストールするには、コマンドラインで</target>
        </trans-unit>
        <trans-unit id="d0206ac7135dd0ba5821ac0555c1c3188f28c0e0" translate="yes" xml:space="preserve">
          <source>Unscoped packages are always public.</source>
          <target state="translated">未収録のパッケージは常に公開されています。</target>
        </trans-unit>
        <trans-unit id="beea63b628f31e202205a92d12dd8fd47049d2f8" translate="yes" xml:space="preserve">
          <source>Unsolved. See &lt;a href=&quot;https://github.com/npm/npm/issues/9282&quot;&gt;https://github.com/npm/npm/issues/9282&lt;/a&gt;</source>
          <target state="translated">未解決。&lt;a href=&quot;https://github.com/npm/npm/issues/9282&quot;&gt;https://github.com/npm/npm/issues/9282を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="4df1f32a7578b64b9bdeb52c744e26dec8e7cf6d" translate="yes" xml:space="preserve">
          <source>Update a package</source>
          <target state="translated">パッケージの更新</target>
        </trans-unit>
        <trans-unit id="d38502130ede474c694a1205ae19263cd2434ec3" translate="yes" xml:space="preserve">
          <source>Update a package.</source>
          <target state="translated">パッケージを更新します。</target>
        </trans-unit>
        <trans-unit id="eb59b3948da21775829b7800eac924c4c9bc90cd" translate="yes" xml:space="preserve">
          <source>Update an existing hook's url:</source>
          <target state="translated">既存のフックのURLを更新します。</target>
        </trans-unit>
        <trans-unit id="e8d7c0a1abbc1d1e39dde94893ebb14840f02748" translate="yes" xml:space="preserve">
          <source>Update applications easily when underlying code is updated.</source>
          <target state="translated">基礎となるコードが更新されたときに、アプリケーションを簡単に更新することができます。</target>
        </trans-unit>
        <trans-unit id="4652909d777622bd3fe2bbac9fb348fe9f28fa49" translate="yes" xml:space="preserve">
          <source>Update dependent packages if a fix exists</source>
          <target state="translated">修正が存在する場合は依存パッケージを更新する</target>
        </trans-unit>
        <trans-unit id="1fe89e5eb3fb6b5c6d848e89e6ffd689df9c2acf" translate="yes" xml:space="preserve">
          <source>Update the Dockerfile</source>
          <target state="translated">Dockerfileを更新する</target>
        </trans-unit>
        <trans-unit id="ba0a0b6d62247785e41f88f21b4c95e3ef0dfe05" translate="yes" xml:space="preserve">
          <source>Update your npm client to version 5.5.1 or higher.</source>
          <target state="translated">npm クライアントをバージョン 5.5.5.1 以上にアップデートしてください。</target>
        </trans-unit>
        <trans-unit id="1b6e0df529656fba345b082faa11ca7dd98bd36a" translate="yes" xml:space="preserve">
          <source>Updating Globally-Installed Packages</source>
          <target state="translated">グローバルにインストールされたパッケージの更新</target>
        </trans-unit>
        <trans-unit id="ad7bfcb9aa0b0592afaabc2994011caf31aa683f" translate="yes" xml:space="preserve">
          <source>Updating a single global package</source>
          <target state="translated">単一のグローバルパッケージの更新</target>
        </trans-unit>
        <trans-unit id="b5289101dbb3497e04183d1a033a0e073cdd350b" translate="yes" xml:space="preserve">
          <source>Updating all globally-installed packages</source>
          <target state="translated">グローバルにインストールされているすべてのパッケージを更新する</target>
        </trans-unit>
        <trans-unit id="6cd3c322610c52279abf88a8a3c2e1b34b509132" translate="yes" xml:space="preserve">
          <source>Updating an existing package README file</source>
          <target state="translated">既存のパッケージの更新 READMEファイル</target>
        </trans-unit>
        <trans-unit id="9ed3a42e47eddfad159f397e945af676742e6fcd" translate="yes" xml:space="preserve">
          <source>Updating and managing your published packages</source>
          <target state="translated">公開されているパッケージの更新と管理</target>
        </trans-unit>
        <trans-unit id="461855d9909b8d617006a9657f0d85dba598ce9e" translate="yes" xml:space="preserve">
          <source>Updating billing receipt email and extra receipt information</source>
          <target state="translated">請求書の領収書メールとおまけの領収書情報の更新</target>
        </trans-unit>
        <trans-unit id="0963b807ab78cfbc09c71677b07e1df962a3f87e" translate="yes" xml:space="preserve">
          <source>Updating credit card information</source>
          <target state="translated">クレジットカード情報の更新</target>
        </trans-unit>
        <trans-unit id="54b10c4c004b64db6b71a3097f47f75d43408002" translate="yes" xml:space="preserve">
          <source>Updating globally-installed packages</source>
          <target state="translated">グローバルにインストールされたパッケージの更新</target>
        </trans-unit>
        <trans-unit id="44252590ad6e0e514d0a20792015d614d6978963" translate="yes" xml:space="preserve">
          <source>Updating local and global packages you downloaded from the registry helps keep your code and tools stable, usable, and secure.</source>
          <target state="translated">レジストリからダウンロードしたローカルパッケージやグローバルパッケージを更新することで、コードやツールの安定性、使いやすさ、安全性を維持することができます。</target>
        </trans-unit>
        <trans-unit id="9482d0ad671402a884a46aa0a68aa83bbd5dfe7f" translate="yes" xml:space="preserve">
          <source>Updating local packages</source>
          <target state="translated">ローカルパッケージの更新</target>
        </trans-unit>
        <trans-unit id="276a195cf56de0e81095df2c1753ea338d8b7ef9" translate="yes" xml:space="preserve">
          <source>Updating node on Linux</source>
          <target state="translated">Linuxでのノードの更新</target>
        </trans-unit>
        <trans-unit id="53d4c0a550877cdbadc11a6960f85c3af0ca2cd9" translate="yes" xml:space="preserve">
          <source>Updating node on OSX</source>
          <target state="translated">OSXでノードを更新する</target>
        </trans-unit>
        <trans-unit id="4999828c8035aef87780bb692e6fd13c7d2fb9ef" translate="yes" xml:space="preserve">
          <source>Updating node on Windows</source>
          <target state="translated">Windowsでノードを更新する</target>
        </trans-unit>
        <trans-unit id="bc2a17b67da11ed93d6c32d7ebe59e968a6fb27e" translate="yes" xml:space="preserve">
          <source>Updating organization billing settings</source>
          <target state="translated">組織の課金設定を更新する</target>
        </trans-unit>
        <trans-unit id="6bb9877e353201f9f0291f95ddf1e4ae94e73d95" translate="yes" xml:space="preserve">
          <source>Updating packages downloaded from the registry</source>
          <target state="translated">レジストリからダウンロードしたパッケージの更新</target>
        </trans-unit>
        <trans-unit id="1685756f3bababba990eca013d01ffbcb731a782" translate="yes" xml:space="preserve">
          <source>Updating user account billing settings</source>
          <target state="translated">ユーザーアカウントの課金設定の更新</target>
        </trans-unit>
        <trans-unit id="1561cfb2e2e07784d30090328b6c9af6a67af38f" translate="yes" xml:space="preserve">
          <source>Updating user account profile settings from the command line</source>
          <target state="translated">コマンドラインからユーザーアカウントのプロファイル設定を更新する</target>
        </trans-unit>
        <trans-unit id="c8c268b072c34adada0633fc8a1863b73404f980" translate="yes" xml:space="preserve">
          <source>Updating your published package version number</source>
          <target state="translated">公開されているパッケージのバージョン番号を更新する</target>
        </trans-unit>
        <trans-unit id="f870d1c5045faae7a4d5e3fb39baa9e58b864674" translate="yes" xml:space="preserve">
          <source>Upgrading on *nix (OSX, Linux, etc.)</source>
          <target state="translated">nix(OSX、Linuxなど)でのアップグレード</target>
        </trans-unit>
        <trans-unit id="ccb20624bab2f83e84bc8eafc91d5ed008b4706b" translate="yes" xml:space="preserve">
          <source>Upgrading on &lt;code&gt;*nix&lt;/code&gt; (OSX, Linux, etc.)</source>
          <target state="translated">&lt;code&gt;*nix&lt;/code&gt; でのアップグレード（OSX、Linuxなど）</target>
        </trans-unit>
        <trans-unit id="cf8505ed1c04806b4aa732a23e4b8da9e2f033b9" translate="yes" xml:space="preserve">
          <source>Upgrading on Windows</source>
          <target state="translated">Windowsでのアップグレード</target>
        </trans-unit>
        <trans-unit id="d0fed1dacd087cb7d22b7f54ce13e373603f8af8" translate="yes" xml:space="preserve">
          <source>Upgrading to a paid organization plan</source>
          <target state="translated">有料組織プランへのアップグレード</target>
        </trans-unit>
        <trans-unit id="db6555d24fe8a4f1a405037f6488d84520b3cbac" translate="yes" xml:space="preserve">
          <source>Upgrading to a paid user account plan</source>
          <target state="translated">有料ユーザーアカウントプランへのアップグレード</target>
        </trans-unit>
        <trans-unit id="88ae2a637da5e7b2adc1856bc63ae0be197e9a9a" translate="yes" xml:space="preserve">
          <source>Upon publishing, npm will look in the &lt;code&gt;node_modules&lt;/code&gt; folder. If any of the items there are not in the &lt;code&gt;bundledDependencies&lt;/code&gt; array, then they will not be included in the package tarball.</source>
          <target state="translated">公開すると、npmは &lt;code&gt;node_modules&lt;/code&gt; フォルダーを検索します。 &lt;code&gt;bundledDependencies&lt;/code&gt; 配列にない項目のいずれかがある場合、それらはパッケージtarballに含まれません。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="3caf2278936899448542bef199da261121a1812d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;CAPS_SNAKE_CASE&lt;/code&gt; for constants, things that should never change and are rarely used.</source>
          <target state="translated">定数には、 &lt;code&gt;CAPS_SNAKE_CASE&lt;/code&gt; を使用してください。変更すべきではなく、めったに使用されません。</target>
        </trans-unit>
        <trans-unit id="f60546a99b2e116d85526b4360458865ea713683" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;UpperCamelCase&lt;/code&gt; for class names (things that you'd pass to &quot;new&quot;).</source>
          <target state="translated">クラス名（ &quot;new&quot;に渡すもの）には、 &lt;code&gt;UpperCamelCase&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="643266ab149c16ab868f09e57e046b2a77bf52e5" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;all-lower-hyphen-css-case&lt;/code&gt; for multiword filenames and config keys.</source>
          <target state="translated">使用する &lt;code&gt;all-lower-hyphen-css-case&lt;/code&gt; マルチワードファイル名や設定キーのを。</target>
        </trans-unit>
        <trans-unit id="dac9eb223b1b6e1370dc2c1ed0e785682358ff8e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;lowerCamelCase&lt;/code&gt; for multiword identifiers when they refer to objects, functions, methods, properties, or anything not specified in this section.</source>
          <target state="translated">&lt;code&gt;lowerCamelCase&lt;/code&gt; ワード識別子がオブジェクト、関数、メソッド、プロパティ、またはこのセクションで指定されていないものを参照する場合は、lowerCamelCaseを使用します。</target>
        </trans-unit>
        <trans-unit id="0d4992dde850db62282db711fc30672da4768652" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;npm init&lt;/code&gt; to create &lt;code&gt;package.json&lt;/code&gt;. It will prompt you for values for fields. The two required fields are 'name' and 'version'. You'll also need to set a value for 'main'. You can use the default, &lt;code&gt;index.js&lt;/code&gt;. These steps are described in detail in &lt;a href=&quot;using-a-package.json&quot;&gt;Chapter 5&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;npm init&lt;/code&gt; を使用して &lt;code&gt;package.json&lt;/code&gt; を作成します。フィールドの値の入力を求められます。2つの必須フィールドは「名前」と「バージョン」です。また、 'main'の値を設定する必要があります。デフォルトの &lt;code&gt;index.js&lt;/code&gt; を使用できます。これらの手順については、&lt;a href=&quot;using-a-package.json&quot;&gt;第5章&lt;/a&gt;で詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="571578afe8ddf53eadb3d8594df712f692f0fbea" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;npm install blerg&lt;/code&gt; to install the latest version of &quot;blerg&quot;. Check out &lt;a href=&quot;npm-install&quot;&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/a&gt; for more info. It can do a lot of stuff.</source>
          <target state="translated">&lt;code&gt;npm install blerg&lt;/code&gt; を使用して、最新バージョンの「blerg」をインストールします。詳細については、&lt;a href=&quot;npm-install&quot;&gt; &lt;code&gt;npm install&lt;/code&gt; &lt;/a&gt;確認してください。それはたくさんのことをすることができます。</target>
        </trans-unit>
        <trans-unit id="7d99903a90405be14391c71e144be0f8471fb4f6" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;npm install blerg&lt;/code&gt; to install the latest version of &quot;blerg&quot;. Check out &lt;code&gt;&lt;a href=&quot;install&quot;&gt;npm-install&lt;/a&gt;&lt;/code&gt; for more info. It can do a lot of stuff.</source>
          <target state="translated">&lt;code&gt;npm install blerg&lt;/code&gt; を使用して、「blerg」の最新バージョンをインストールします。詳細については、 &lt;code&gt;&lt;a href=&quot;install&quot;&gt;npm-install&lt;/a&gt;&lt;/code&gt; を確認してください。多くのことができます。</target>
        </trans-unit>
        <trans-unit id="8be8059569a8f9a49a20a8f7fa4c4df57441bcd3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;npm ls -g&lt;/code&gt; to see if it's there.</source>
          <target state="translated">&lt;code&gt;npm ls -g&lt;/code&gt; を使用して、そこにあるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="b75ec939556cdf82cf4bd0a5d85f4c3dbb159c91" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;npm publish&lt;/code&gt; to publish the package.</source>
          <target state="translated">&lt;code&gt;npm publish&lt;/code&gt; を使用してパッケージを公開します。</target>
        </trans-unit>
        <trans-unit id="21b54693626b57b6ee78c388a0ae496f601e5dc7" translate="yes" xml:space="preserve">
          <source>Use `npm profile get' to confirm the new setting.</source>
          <target state="translated">新しい設定を確認するには、`npm profile get' を用いる。</target>
        </trans-unit>
        <trans-unit id="8f645a2723de6ea2973f156e5beb0f3c56502073" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;.npmignore&lt;/code&gt; file to keep stuff out of your package. If there's no &lt;code&gt;.npmignore&lt;/code&gt; file, but there &lt;em&gt;is&lt;/em&gt; a &lt;code&gt;.gitignore&lt;/code&gt; file, then npm will ignore the stuff matched by the &lt;code&gt;.gitignore&lt;/code&gt; file. If you &lt;em&gt;want&lt;/em&gt; to include something that is excluded by your &lt;code&gt;.gitignore&lt;/code&gt; file, you can create an empty &lt;code&gt;.npmignore&lt;/code&gt; file to override it. Like &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt; looks for &lt;code&gt;.npmignore&lt;/code&gt; and &lt;code&gt;.gitignore&lt;/code&gt; files in all subdirectories of your package, not only the root directory.</source>
          <target state="translated">&lt;code&gt;.npmignore&lt;/code&gt; ファイルを使用して、パッケージにものを入れないようにします。何がない場合 &lt;code&gt;.npmignore&lt;/code&gt; のファイルが、そこ&lt;em&gt;で&lt;/em&gt; &lt;code&gt;.gitignore&lt;/code&gt; のファイルは、その後、NPMは、マッチしたものを無視します &lt;code&gt;.gitignore&lt;/code&gt; のファイルを。あなたがいる場合&lt;em&gt;したい&lt;/em&gt;あなたによって除外される何か含まれるように &lt;code&gt;.gitignore&lt;/code&gt; のファイルを、あなたは空に作成することができ &lt;code&gt;.npmignore&lt;/code&gt; のそれを上書きするファイルを。 &lt;code&gt;git&lt;/code&gt; と同様に、 &lt;code&gt;npm&lt;/code&gt; は、ルートディレクトリだけでなく、パッケージのすべてのサブディレクトリで &lt;code&gt;.npmignore&lt;/code&gt; および &lt;code&gt;.gitignore&lt;/code&gt; ファイルを検索します。</target>
        </trans-unit>
        <trans-unit id="dd77ceb3d955e49bce9232d77e34a83aa69fd613" translate="yes" xml:space="preserve">
          <source>Use a password manager, such as &lt;a href=&quot;https://lastpass.com/&quot;&gt;LastPass&lt;/a&gt; or &lt;a href=&quot;https://1password.com/&quot;&gt;1Password&lt;/a&gt;, to generate a password more than 16 characters.</source>
          <target state="translated">&lt;a href=&quot;https://lastpass.com/&quot;&gt;LastPass&lt;/a&gt;や&lt;a href=&quot;https://1password.com/&quot;&gt;1Password&lt;/a&gt;などのパスワードマネージャーを使用して、16文字を超えるパスワードを生成します。</target>
        </trans-unit>
        <trans-unit id="938b7ae3767ec6c6197ac0b3bfd0e092d9fa43c7" translate="yes" xml:space="preserve">
          <source>Use a project-specific &lt;code&gt;.npmrc&lt;/code&gt; file with a variable for your token to securely authenticate your CI/CD server with npm.</source>
          <target state="translated">トークンの変数を &lt;code&gt;.npmrc&lt;/code&gt; プロジェクト固有の.npmrcファイルを使用して、npmでCI / CDサーバーを安全に認証します。</target>
        </trans-unit>
        <trans-unit id="4efadc94cb0b95768acf041e782632f9f5e83396" translate="yes" xml:space="preserve">
          <source>Use a project-specific &lt;code&gt;.npmrc&lt;/code&gt; file with a variable for your token to securely authenticate your Docker image with npm.</source>
          <target state="translated">トークンの変数を &lt;code&gt;.npmrc&lt;/code&gt; プロジェクト固有の.npmrcファイルを使用して、Dockerイメージをnpmで安全に認証します。</target>
        </trans-unit>
        <trans-unit id="d4f6685a872060a1cbb58be306fa4c2148797632" translate="yes" xml:space="preserve">
          <source>Use a single uppercase letter for function names where the function would normally be anonymous, but needs to call itself recursively. It makes it clear that it's a &quot;throwaway&quot; function.</source>
          <target state="translated">通常は匿名であるはずの関数が、再帰的に自分自身を呼び出す必要があるような関数名には、1つの大文字を使用します。これにより、それが「使い捨て」の関数であることが明確になります。</target>
        </trans-unit>
        <trans-unit id="47f0ab0df0717621edbf2a36738af75b1d70187f" translate="yes" xml:space="preserve">
          <source>Use appropriate log levels. See &lt;code&gt;&lt;a href=&quot;config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; and search for &quot;loglevel&quot;.</source>
          <target state="translated">適切なログレベルを使用してください。 &lt;code&gt;&lt;a href=&quot;config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照して、「loglevel」を検索してください。</target>
        </trans-unit>
        <trans-unit id="62a3be2acf38ca002a096c70f416ecd49c93dbaa" translate="yes" xml:space="preserve">
          <source>Use named functions. They make stack traces a lot easier to read.</source>
          <target state="translated">名前付き関数を使用してください。名前付き関数を使うことで、スタックトレースを読みやすくすることができます。</target>
        </trans-unit>
        <trans-unit id="5570acb4a1a369c75ad4f605eefa5ffff0b832aa" translate="yes" xml:space="preserve">
          <source>Use named functions. They make stack traces easier to follow.</source>
          <target state="translated">名前付き関数を使用します。名前付き関数を使うことで、スタックトレースの追跡が容易になります。</target>
        </trans-unit>
        <trans-unit id="6671216e470bec65bea0f29b33753a19faf54687" translate="yes" xml:space="preserve">
          <source>Use npm to . . .</source>
          <target state="translated">npm を使って .</target>
        </trans-unit>
        <trans-unit id="6851dedc196dd92ad87431c3c72ee9669e169f40" translate="yes" xml:space="preserve">
          <source>Use single quotes for strings except to avoid escaping.</source>
          <target state="translated">エスケープを避ける場合を除き、文字列には一重引用符を使用してください。</target>
        </trans-unit>
        <trans-unit id="1b2f3277a4c7b04a90ef1154d918f6adeac42cfe" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;cli/v6/commands/npm-adduser&quot;&gt;&lt;code&gt;npm login&lt;/code&gt;&lt;/a&gt; command to test logging in to your new account.</source>
          <target state="translated">&lt;a href=&quot;cli/v6/commands/npm-adduser&quot;&gt; &lt;code&gt;npm login&lt;/code&gt; &lt;/a&gt;コマンドを使用して、新しいアカウントへのログインをテストします。</target>
        </trans-unit>
        <trans-unit id="aad23fd16ae280cd6a023ec55199684504a0cc2b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://npmjs.com&quot;&gt;&lt;em&gt;website&lt;/em&gt;&lt;/a&gt; to discover packages, set up profiles, and manage other aspects of your npm experience. For example, you can set up &lt;a href=&quot;https://www.npmjs.com/features&quot;&gt;Orgs&lt;/a&gt; (organizations) to manage access to public or private packages.</source>
          <target state="translated">&lt;a href=&quot;https://npmjs.com&quot;&gt;&lt;em&gt;Webサイト&lt;/em&gt;&lt;/a&gt;を使用して、パッケージの検出、プロファイルのセットアップ、およびnpmエクスペリエンスの他の側面の管理を行います。たとえば、&lt;a href=&quot;https://www.npmjs.com/features&quot;&gt;組織&lt;/a&gt;（組織）を設定して、パブリックパッケージまたはプライベートパッケージへのアクセスを管理できます。</target>
        </trans-unit>
        <trans-unit id="c479b385cac7991d96393c221d9d780651b40685" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://npmjs.com&quot;&gt;&lt;em&gt;website&lt;/em&gt;&lt;/a&gt; to discover packages, set up profiles, and manage other aspects of your npm experience. For example, you can set up &lt;a href=&quot;https://www.npmjs.com/features&quot;&gt;organizations&lt;/a&gt; to manage access to public or private packages.</source>
          <target state="translated">&lt;a href=&quot;https://npmjs.com&quot;&gt;&lt;em&gt;Webサイト&lt;/em&gt;&lt;/a&gt;を使用して、パッケージの検出、プロファイルの設定、およびnpmエクスペリエンスの他の側面の管理を行います。たとえば、パブリックパッケージまたはプライベートパッケージへのアクセスを管理する&lt;a href=&quot;https://www.npmjs.com/features&quot;&gt;組織&lt;/a&gt;を設定できます。</target>
        </trans-unit>
        <trans-unit id="01d063d040c5155413b7a66f263d59f39dbae995" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;npm search&lt;/code&gt; command to show everything that's available. Use &lt;code&gt;npm ls&lt;/code&gt; to show everything you've installed.</source>
          <target state="translated">&lt;code&gt;npm search&lt;/code&gt; コマンドを使用して、利用可能なすべてのものを表示します。 &lt;code&gt;npm ls&lt;/code&gt; を使用して、インストールしたすべてを表示します。</target>
        </trans-unit>
        <trans-unit id="a7f4d26740a12faf14284a1abb8f0078dd47ec8c" translate="yes" xml:space="preserve">
          <source>Use the asynchronous/non-blocking versions of things as much as possible. It might make more sense for npm to use the synchronous fs APIs, but this way, the fs and http and child process stuff all uses the same callback-passing methodology.</source>
          <target state="translated">できるだけ非同期/ノンブロッキングのバージョンを使うようにしましょう。npm が同期 fs API を使う方が理にかなっているかもしれませんが、この方法では fs や http、子プロセスのものはすべて同じコールバックパス方式を使うことになります。</target>
        </trans-unit>
        <trans-unit id="6ce88aba1394ab844835e094977e68a89de5fee8" translate="yes" xml:space="preserve">
          <source>Used as &lt;code&gt;--no-description&lt;/code&gt;, disables search matching in package descriptions and suppresses display of that field in results.</source>
          <target state="translated">&lt;code&gt;--no-description&lt;/code&gt; として使用すると、パッケージの説明での検索マッチングが無効になり、結果にそのフィールドが表示されなくなります。</target>
        </trans-unit>
        <trans-unit id="6f3da599f430251a0def0fec109ef0b6650bbe53" translate="yes" xml:space="preserve">
          <source>Used to add, list, or clean the npm cache folder.</source>
          <target state="translated">npm cache フォルダを追加、リストアップ、クリーンアップするために使用します。</target>
        </trans-unit>
        <trans-unit id="e4b26a2083b1d8b545d2fe8b22a811e33cef925c" translate="yes" xml:space="preserve">
          <source>Used to manage teams in organizations, and change team memberships. Does not handle permissions for packages.</source>
          <target state="translated">組織内のチーム管理やチームメンバーの変更に使用します。パッケージのパーミッションは扱いません。</target>
        </trans-unit>
        <trans-unit id="fb7bf2b3519724dafb49e352bd2bb3bdac1dc51e" translate="yes" xml:space="preserve">
          <source>Used to set access controls on private packages.</source>
          <target state="translated">プライベートパッケージのアクセス制御を設定するために使用します。</target>
        </trans-unit>
        <trans-unit id="9f8a2389a20ca0752aa9e95093515517e90e194c" translate="yes" xml:space="preserve">
          <source>User</source>
          <target state="translated">User</target>
        </trans-unit>
        <trans-unit id="a724f6f593a3c963b425a792baedf9957c8a9039" translate="yes" xml:space="preserve">
          <source>User Configs: The file at $HOME/.npmrc is an ini-formatted list of configs. If present, it is parsed. If the &lt;code&gt;userconfig&lt;/code&gt; option is set in the cli or env, then that will be used instead.</source>
          <target state="translated">ユーザー構成：$ HOME / .npmrcにあるファイルは、ini形式の構成リストです。存在する場合は、解析されます。 &lt;code&gt;userconfig&lt;/code&gt; オプションがcliまたはenvで設定されている場合、代わりにそれが使用されます。</target>
        </trans-unit>
        <trans-unit id="4445ca0c9d146d93db6cff33b31ba7783d2b670d" translate="yes" xml:space="preserve">
          <source>Users can use the &lt;code&gt;npm fund&lt;/code&gt; subcommand to list the &lt;code&gt;funding&lt;/code&gt; URLs of all dependencies of their project, direct and indirect. A shortcut to visit each funding url is also available when providing the project name such as: &lt;code&gt;npm fund &amp;lt;projectname&amp;gt;&lt;/code&gt; (when there are multiple URLs, the first one will be visited)</source>
          <target state="translated">ユーザーは、 &lt;code&gt;npm fund&lt;/code&gt; サブコマンドを使用して、プロジェクトのすべての依存関係の直接および間接の &lt;code&gt;funding&lt;/code&gt; URLを一覧表示できます。 &lt;code&gt;npm fund &amp;lt;projectname&amp;gt;&lt;/code&gt; などのプロジェクト名を指定すると、各資金調達URLにアクセスするためのショートカットも利用できます（複数のURLがある場合は、最初のURLにアクセスします）</target>
        </trans-unit>
        <trans-unit id="853ee3742c7e125896ee178ed881f04f42c08b39" translate="yes" xml:space="preserve">
          <source>Using a CIDR restriction makes it possible for you to force anyone or any system using the token to either physically or remotely be within the specified IP address range.</source>
          <target state="translated">CIDR制限を使用すると、トークンを使用している人やシステムを、物理的またはリモートで指定されたIPアドレスの範囲内に強制的に配置することができます。</target>
        </trans-unit>
        <trans-unit id="9176f890a22bd3087cee0a1ed6a28a59d7feac46" translate="yes" xml:space="preserve">
          <source>Using a Node installer to install Node.js and npm</source>
          <target state="translated">Nodeインストーラを使ってNode.jsとnpmをインストールする</target>
        </trans-unit>
        <trans-unit id="4399518c2e970b00a9de98b329a3b1add69d9bdb" translate="yes" xml:space="preserve">
          <source>Using a Node version manager to install Node.js and npm</source>
          <target state="translated">Nodeバージョンマネージャを使ってNode.jsとnpmをインストールする</target>
        </trans-unit>
        <trans-unit id="d526fb58b68bc62ebb8fdb3bb2eac4bb1a33cffd" translate="yes" xml:space="preserve">
          <source>Using a Scoped Package</source>
          <target state="translated">スコープされたパッケージの使用</target>
        </trans-unit>
        <trans-unit id="ca4023d77149c3f9ab8dba04c09835dac37dfdee" translate="yes" xml:space="preserve">
          <source>Using a locked package is no different than using any package without a package lock: any commands that update &lt;code&gt;node_modules&lt;/code&gt; and/or &lt;code&gt;package.json&lt;/code&gt;'s dependencies will automatically sync the existing lockfile. This includes &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;npm rm&lt;/code&gt;, &lt;code&gt;npm update&lt;/code&gt;, etc. To prevent this update from happening, you can use the &lt;code&gt;--no-save&lt;/code&gt; option to prevent saving altogether, or &lt;code&gt;--no-shrinkwrap&lt;/code&gt; to allow &lt;code&gt;package.json&lt;/code&gt; to be updated while leaving &lt;code&gt;package-lock.json&lt;/code&gt; or &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; intact.</source>
          <target state="translated">ロックされたパッケージの使用は、パッケージロックのないパッケージの使用と違いはありません &lt;code&gt;node_modules&lt;/code&gt; や &lt;code&gt;package.json&lt;/code&gt; の依存関係を更新するコマンドは、既存のロックファイルを自動的に同期します。これには、 &lt;code&gt;npm install&lt;/code&gt; 、 &lt;code&gt;npm rm&lt;/code&gt; 、 &lt;code&gt;npm update&lt;/code&gt; などが含まれます。この更新が行われないようにするには、 &lt;code&gt;--no-shrinkwrap&lt;/code&gt; &lt;code&gt;--no-save&lt;/code&gt; オプションを使用して完全に保存しないようにするか、-no-shrinkwrapを使用して &lt;code&gt;package.json&lt;/code&gt; を更新できるようにします去る &lt;code&gt;package-lock.json&lt;/code&gt; または &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; そのまま。</target>
        </trans-unit>
        <trans-unit id="df3ee93cf1a876be7b1f0c8f8afb5ab6c23dc227" translate="yes" xml:space="preserve">
          <source>Using a version manager to install Node.js and npm</source>
          <target state="translated">バージョンマネージャを使ってNode.jsとnpmをインストールする</target>
        </trans-unit>
        <trans-unit id="dd815a9a33048c8296cd6b592c13799461baa7a1" translate="yes" xml:space="preserve">
          <source>Using deprecated packages</source>
          <target state="translated">非推奨パッケージの使用</target>
        </trans-unit>
        <trans-unit id="6593c14a1b8d3f349ec612397132860b721687d5" translate="yes" xml:space="preserve">
          <source>Using locked packages</source>
          <target state="translated">ロックされたパッケージの使用</target>
        </trans-unit>
        <trans-unit id="e8cff08e29703580b7ac86809f0f79615642a204" translate="yes" xml:space="preserve">
          <source>Using npm</source>
          <target state="translated">npmを使用して</target>
        </trans-unit>
        <trans-unit id="5621c5db24e395b3c0e6f66b50f29792bc643288" translate="yes" xml:space="preserve">
          <source>Using npm packages in your projects</source>
          <target state="translated">プロジェクトで npm パッケージを使う</target>
        </trans-unit>
        <trans-unit id="a55ba4523ac273e0f4e72bf80079aac3bfbd5b8b" translate="yes" xml:space="preserve">
          <source>Using npmrc to managing multiple profiles for different registries</source>
          <target state="translated">npmrc を使用して、異なるレジストリの複数のプロファイルを管理する</target>
        </trans-unit>
        <trans-unit id="5a7ff2c73099238094c1a5989ce8109747b3d4fd" translate="yes" xml:space="preserve">
          <source>Using private packages in a CI/CD workflow</source>
          <target state="translated">CI/CD ワークフローでのプライベートパッケージの使用</target>
        </trans-unit>
        <trans-unit id="961fe6e7b89c6e8425d30979f6ef9c6afc389c88" translate="yes" xml:space="preserve">
          <source>Using scoped packages in your projects</source>
          <target state="translated">スコープされたパッケージをプロジェクトで使用する</target>
        </trans-unit>
        <trans-unit id="5297f7c32ee25911ff00a0ef920935d2aaf7e52e" translate="yes" xml:space="preserve">
          <source>Using semantic versioning to specify update types your package can accept</source>
          <target state="translated">セマンティックバージョニングを使用して、パッケージが受け付けるアップデートタイプを指定します。</target>
        </trans-unit>
        <trans-unit id="fa0343e5ddee9a7ef505c141cf468d5670568da3" translate="yes" xml:space="preserve">
          <source>Using the Installed Package in Your Code</source>
          <target state="translated">インストール済みパッケージをコードで使用する</target>
        </trans-unit>
        <trans-unit id="d4bd7839ca480d1c413e953a7062c8c01bcc9ca8" translate="yes" xml:space="preserve">
          <source>Using the command line</source>
          <target state="translated">コマンドラインの使用</target>
        </trans-unit>
        <trans-unit id="68e5d88b1541861a5958f5a6cef4f8a1a0a610b5" translate="yes" xml:space="preserve">
          <source>Using the website</source>
          <target state="translated">ウェブサイトを利用して</target>
        </trans-unit>
        <trans-unit id="5ab66894c8bbb926442ecc2b6bee53b65aa58d17" translate="yes" xml:space="preserve">
          <source>Using unscoped packages in your projects</source>
          <target state="translated">プロジェクトでスコープなしのパッケージを使用する</target>
        </trans-unit>
        <trans-unit id="e16fde851f2c6b049410a8e178568c03b87edd0b" translate="yes" xml:space="preserve">
          <source>Using your authenticator app, enter an OTP at the prompt shown:</source>
          <target state="translated">認証アプリを使用して、表示されるプロンプトでOTPを入力します。</target>
        </trans-unit>
        <trans-unit id="244b956a05207ab8b37f9ec532ea72ea6d52cc26" translate="yes" xml:space="preserve">
          <source>Usually, the above instructions are sufficient. That will remove npm, but leave behind anything you've installed.</source>
          <target state="translated">通常は上記の手順で十分です。これでnpmは削除されますが、インストールしたものは残しておきます。</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="5d1dd9c8134a538f552352784a7c5c885ebc3f0e" translate="yes" xml:space="preserve">
          <source>Validate the checksums of cached packages</source>
          <target state="translated">キャッシュされたパッケージのチェックサムを検証する</target>
        </trans-unit>
        <trans-unit id="994aadc539e485c482dc3b8c0fe4c1cef32e75bb" translate="yes" xml:space="preserve">
          <source>Values: &quot;silent&quot;, &quot;error&quot;, &quot;warn&quot;, &quot;notice&quot;, &quot;http&quot;, &quot;timing&quot;, &quot;info&quot;, &quot;verbose&quot;, &quot;silly&quot;</source>
          <target state="translated">値を指定します。&quot;silent&quot;,&quot;error&quot;,&quot;warn&quot;,&quot;notice&quot;,&quot;http&quot;,&quot;timing&quot;,&quot;info&quot;,&quot;verbose&quot;,&quot;silly&quot;</target>
        </trans-unit>
        <trans-unit id="c676bb7a4bc486ff3180eac5da5dd56337836e98" translate="yes" xml:space="preserve">
          <source>Verify your email address</source>
          <target state="translated">メールアドレスの確認</target>
        </trans-unit>
        <trans-unit id="8cbb4715c46f29644e9ee1944c40619bb928e7b2" translate="yes" xml:space="preserve">
          <source>Verifying npm signatures for the public registry</source>
          <target state="translated">パブリックレジストリの npm 署名の検証</target>
        </trans-unit>
        <trans-unit id="5b9b9bde8ee745611bb53a24e607e8ad1f0c5156" translate="yes" xml:space="preserve">
          <source>Verifying the PGP signature of a package from the npm public registry</source>
          <target state="translated">npm パブリックレジストリからパッケージの PGP 署名を検証する</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="bc1e82e9c173efb11540b4beff72a770f360cab6" translate="yes" xml:space="preserve">
          <source>Version 6.x (LTS release)</source>
          <target state="translated">バージョン6.x (LTSリリース)</target>
        </trans-unit>
        <trans-unit id="ff1776375bc47468601a9d5d28bac1bd52cd47cf" translate="yes" xml:space="preserve">
          <source>Version 7.x (Development release)</source>
          <target state="translated">バージョン7.x(開発リリース</target>
        </trans-unit>
        <trans-unit id="6c1c09b878e072cfb3bd79d4cc67c3ebbead49d2" translate="yes" xml:space="preserve">
          <source>Version must be parseable by &lt;a href=&quot;https://github.com/isaacs/node-semver&quot;&gt;node-semver&lt;/a&gt;, which is bundled with npm as a dependency. (&lt;code&gt;npm install semver&lt;/code&gt; to use it yourself.)</source>
          <target state="translated">バージョンは、依存関係としてnpmにバンドルされている&lt;a href=&quot;https://github.com/isaacs/node-semver&quot;&gt;node-semver&lt;/a&gt;によって解析可能でなければなりません。（ &lt;code&gt;npm install semver&lt;/code&gt; to use it it。）</target>
        </trans-unit>
        <trans-unit id="a239107ef28f6efe13d8ea83e502da9aa8c43fbb" translate="yes" xml:space="preserve">
          <source>Versions</source>
          <target state="translated">Versions</target>
        </trans-unit>
        <trans-unit id="d551651c44b4450029f9a215ed5b7ee23d184578" translate="yes" xml:space="preserve">
          <source>View Packages</source>
          <target state="translated">パッケージを見る</target>
        </trans-unit>
        <trans-unit id="479a18836b917a832a2085c569dbb1fb4d5617bb" translate="yes" xml:space="preserve">
          <source>View packages marked as favorites</source>
          <target state="translated">お気に入りにマークされたパッケージを表示</target>
        </trans-unit>
        <trans-unit id="ee446ee8d4513b9c3f071dc16ecae152eba97576" translate="yes" xml:space="preserve">
          <source>View packages marked as favorites.</source>
          <target state="translated">お気に入りにマークされたパッケージを表示します。</target>
        </trans-unit>
        <trans-unit id="c7667dfb2aa53b7229b38de4c206b3c4e36fffc3" translate="yes" xml:space="preserve">
          <source>View registry info</source>
          <target state="translated">レジストリ情報を見る</target>
        </trans-unit>
        <trans-unit id="61759216f5515d140cf293b4ac148ef238d0b7da" translate="yes" xml:space="preserve">
          <source>View registry info.</source>
          <target state="translated">レジストリ情報を見る</target>
        </trans-unit>
        <trans-unit id="031238809a40dc8ac47c14d7d469e2906cb55897" translate="yes" xml:space="preserve">
          <source>View tokens for easier tracking and management</source>
          <target state="translated">トークンの追跡と管理を容易にするためのビュートークン</target>
        </trans-unit>
        <trans-unit id="ace4d9ea9f1855f6015ef926f51edc553feaf11e" translate="yes" xml:space="preserve">
          <source>View tokens for easier tracking and management.</source>
          <target state="translated">トークンを表示して、トラッキングと管理を容易にします。</target>
        </trans-unit>
        <trans-unit id="804a19e4e28de1cc845d16a6084f43703720b4f8" translate="yes" xml:space="preserve">
          <source>Viewing &amp;amp; Setting Profile Values</source>
          <target state="translated">プロファイル値の表示と設定</target>
        </trans-unit>
        <trans-unit id="7d43e7e510c3dcc4caee194d62afb5c2069cf97a" translate="yes" xml:space="preserve">
          <source>Viewing Dependencies</source>
          <target state="translated">依存関係の表示</target>
        </trans-unit>
        <trans-unit id="2e4ba0cc9fa6db16a674a90ff0581ed2fd288575" translate="yes" xml:space="preserve">
          <source>Viewing Dependents</source>
          <target state="translated">依存関係を見る</target>
        </trans-unit>
        <trans-unit id="a034f211a7d0fcbae311796afbdcb36ce7e2b984" translate="yes" xml:space="preserve">
          <source>Viewing Readme</source>
          <target state="translated">Readmeを見る</target>
        </trans-unit>
        <trans-unit id="449f9bac0db729ab8731b237136c25048c3b2f55" translate="yes" xml:space="preserve">
          <source>Viewing Versions</source>
          <target state="translated">バージョンを見る</target>
        </trans-unit>
        <trans-unit id="5d77260ec5f4b91da1c7f7389578005d76c54cca" translate="yes" xml:space="preserve">
          <source>Viewing access tokens</source>
          <target state="translated">アクセストークンの表示</target>
        </trans-unit>
        <trans-unit id="2ab1693d77c646e3940a3973e12bebd42bf16f8f" translate="yes" xml:space="preserve">
          <source>Viewing receipts</source>
          <target state="translated">レシートを見る</target>
        </trans-unit>
        <trans-unit id="7286039512f302b4a1d79a8e2fc6931422c5cba9" translate="yes" xml:space="preserve">
          <source>Viewing tokens on the CLI</source>
          <target state="translated">CLIでトークンを表示する</target>
        </trans-unit>
        <trans-unit id="0f76fcaa8c3bd549bfefd61d0a5622c72831ce88" translate="yes" xml:space="preserve">
          <source>Viewing tokens on the website</source>
          <target state="translated">ウェブサイト上でのトークンの閲覧</target>
        </trans-unit>
        <trans-unit id="5fe90f2e0fa6f2cf37694e8ecea6c605dc5c7901" translate="yes" xml:space="preserve">
          <source>Viewing user account profile settings from the command line</source>
          <target state="translated">コマンドラインからユーザーアカウントのプロファイル設定を表示する</target>
        </trans-unit>
        <trans-unit id="990af59dd8d6d36f5bb1118fb69532a60faed5f0" translate="yes" xml:space="preserve">
          <source>Viewing, downloading, and emailing receipts for your npm user account</source>
          <target state="translated">npm ユーザーアカウントのレシートの表示、ダウンロード、メール送信</target>
        </trans-unit>
        <trans-unit id="cfd5cadc4006f3fb315d74c5ccc81332c42fb331" translate="yes" xml:space="preserve">
          <source>Viewing, downloading, and emailing receipts for your organization</source>
          <target state="translated">組織の領収書の閲覧、ダウンロード、電子メール送信</target>
        </trans-unit>
        <trans-unit id="ea41dc843a8a369291f9847bca15db20ba3d88b1" translate="yes" xml:space="preserve">
          <source>Violations of copyright or licenses (for example, cloning an MIT-licensed program, and then removing or changing the copyright and license statement).</source>
          <target state="translated">著作権やライセンスへの違反(例えば、MITでライセンスされたプログラムを複製して、著作権やライセンスに関する記述を削除したり変更したりすること)。</target>
        </trans-unit>
        <trans-unit id="c93b6f787857f1a6a7c393b7b336445e9dc40f8f" translate="yes" xml:space="preserve">
          <source>Visibility of npm packages depends on the scope (namespace) in which the package is contained, and the access level (private or public) set for the package.</source>
          <target state="translated">npm パッケージの可視性は、パッケージが含まれるスコープ (名前空間)と、そのパッケージに設定されているアクセスレベル (プライベートかパブリックか)に依存します。</target>
        </trans-unit>
        <trans-unit id="ab6ce9704f864a8ffec57123ca0978f4b50c3883" translate="yes" xml:space="preserve">
          <source>Vulnerability table fields</source>
          <target state="translated">脆弱性テーブルのフィールド</target>
        </trans-unit>
        <trans-unit id="fd3edc641024a335a508fdacefb5f51ded5905cc" translate="yes" xml:space="preserve">
          <source>WARNING</source>
          <target state="translated">WARNING</target>
        </trans-unit>
        <trans-unit id="2ce15092265c7ffd4210321d98dfe27c4f0bbade" translate="yes" xml:space="preserve">
          <source>Want to rename a package. (The only way to rename a package is to re-publish it under a new name)</source>
          <target state="translated">パッケージの名前を変更したい (パッケージの名前を変更する唯一の方法は、新しい名前で再発行することです)</target>
        </trans-unit>
        <trans-unit id="dc2479a8c6ec3df27a1194e4048bb5c58045e6af" translate="yes" xml:space="preserve">
          <source>Wanted to test npm.</source>
          <target state="translated">npmをテストしたいと思っていました。</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="765824ef206564ede72ac9b18d9c12413908510f" translate="yes" xml:space="preserve">
          <source>We have to take advantage of a different way of passing environment variables to Docker, available since Docker 1.9. We'll use the slightly confusingly named &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#arg&quot;&gt;ARG parameter&lt;/a&gt;.</source>
          <target state="translated">Docker 1.9以降で利用可能な、Dockerに環境変数を渡す別の方法を利用する必要があります。少し紛らわしい名前の&lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#arg&quot;&gt;ARGパラメータを使用します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0057e41eb37901c04462ab6f4361fae474f85bbf" translate="yes" xml:space="preserve">
          <source>We recommend regularly updating the local packages your project depends on to improve your code as improvements to its dependencies are made.</source>
          <target state="translated">プロジェクトが依存しているローカルパッケージを定期的に更新して、依存関係が改善されたときにコードを改善することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7df8b8fd1ba8ef57e32bdbd3ba38b7c873c680da" translate="yes" xml:space="preserve">
          <source>We use Keybase to publicize our PGP key and give you confidence that the npm registry you install from is the same registry that signs packages.</source>
          <target state="translated">Keybase を使って PGP キーを公開し、インストールする npm レジストリがパッケージを署名するレジストリと同じものであることを確信しています。</target>
        </trans-unit>
        <trans-unit id="94aa7d3226534926e5641c10382869394d5e53a9" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve established proofs on Keybase that we control &lt;a href=&quot;https://twitter.com/npmjs&quot;&gt;@npmjs&lt;/a&gt; on Twitter, the domain &lt;a href=&quot;https://npmjs.com&quot;&gt;npmjs.com&lt;/a&gt;, and the domain &lt;a href=&quot;https://npmjs.org&quot;&gt;npmjs.org&lt;/a&gt;. Verifying these proofs won&amp;rsquo;t tell you who owns those domains, but it does establish that the same entity controls them and the PGP key advertised on Keybase.</source>
          <target state="translated">我々は、我々がコントロールすることKeybase上の証明を確立してきました&lt;a href=&quot;https://twitter.com/npmjs&quot;&gt;@npmjs&lt;/a&gt; Twitterで、ドメイン&lt;a href=&quot;https://npmjs.com&quot;&gt;npmjs.com&lt;/a&gt;、およびドメイン&lt;a href=&quot;https://npmjs.org&quot;&gt;npmjs.orgを&lt;/a&gt;。これらの証明を検証しても、誰がそれらのドメインを所有しているかはわかりませんが、同じエンティティがドメインとKeybaseでアドバタイズされたPGPキーを制御していることは確認できます。</target>
        </trans-unit>
        <trans-unit id="aef2950c8ea1bf7517d97dee9d69e47682f4a649" translate="yes" xml:space="preserve">
          <source>What authentication strategy to use with &lt;code&gt;adduser&lt;/code&gt;/&lt;code&gt;login&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;adduser&lt;/code&gt; / &lt;code&gt;login&lt;/code&gt; で使用する認証戦略。</target>
        </trans-unit>
        <trans-unit id="e0375963479977ab0254f653d3720d4d5a8b8214" translate="yes" xml:space="preserve">
          <source>What authentication strategy to use with &lt;code&gt;adduser&lt;/code&gt;/&lt;code&gt;login&lt;/code&gt;. Some npm registries (for example, npmE) might support alternative auth strategies besides classic username/password entry in legacy npm.</source>
          <target state="translated">&lt;code&gt;adduser&lt;/code&gt; / &lt;code&gt;login&lt;/code&gt; で使用する認証戦略。一部のnpmレジストリ（たとえば、npmE）は、レガシーnpmの従来のユーザー名/パスワードエントリ以外の代替の認証戦略をサポートする場合があります。</target>
        </trans-unit>
        <trans-unit id="51a3a867d87ea5dab2246c6f2503b8dd166077c5" translate="yes" xml:space="preserve">
          <source>What is a &lt;code&gt;module&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; とは？</target>
        </trans-unit>
        <trans-unit id="498bc1693aa1918cda45326b626933c1af0a5f71" translate="yes" xml:space="preserve">
          <source>What is a &lt;code&gt;package&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;package&lt;/code&gt; とは</target>
        </trans-unit>
        <trans-unit id="6a63cccaee16987d4099b8c49c9085a1a7a4c777" translate="yes" xml:space="preserve">
          <source>What is a &lt;code&gt;package&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;package&lt;/code&gt; とは？</target>
        </trans-unit>
        <trans-unit id="c69e48637856aab0726cc572fc41bc22cac0fe81" translate="yes" xml:space="preserve">
          <source>What is a package</source>
          <target state="translated">パッケージとは</target>
        </trans-unit>
        <trans-unit id="79d16c37ff17b549679274c2d88eb13eb2796ac9" translate="yes" xml:space="preserve">
          <source>What is npm?</source>
          <target state="translated">npmとは何ですか?</target>
        </trans-unit>
        <trans-unit id="35818a4b284ef5edde9f9c9be62a57b21319b70d" translate="yes" xml:space="preserve">
          <source>What level of logs to report. On failure, &lt;em&gt;all&lt;/em&gt; logs are written to &lt;code&gt;npm-debug.log&lt;/code&gt; in the current working directory.</source>
          <target state="translated">レポートするログのレベル。失敗すると、&lt;em&gt;すべての&lt;/em&gt;ログが現在の作業ディレクトリの &lt;code&gt;npm-debug.log&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="39670e913bc7b5638e8e1b1096ee935191283c6b" translate="yes" xml:space="preserve">
          <source>When &quot;dev&quot; or &quot;development&quot; and running local &lt;code&gt;npm install&lt;/code&gt; without any arguments, only devDependencies (and their dependencies) are installed.</source>
          <target state="translated">「dev」または「development」を実行し、引数なしでローカル &lt;code&gt;npm install&lt;/code&gt; を実行すると、devDependencies（およびその依存関係）のみがインストールされます。</target>
        </trans-unit>
        <trans-unit id="0c0769b6f54b66d88d971e6db9b23694a572291e" translate="yes" xml:space="preserve">
          <source>When &quot;dev&quot; or &quot;development&quot; and running local &lt;code&gt;npm ls&lt;/code&gt;, &lt;code&gt;npm outdated&lt;/code&gt;, or &lt;code&gt;npm update&lt;/code&gt;, is an alias for &lt;code&gt;--dev&lt;/code&gt;.</source>
          <target state="translated">&quot;dev&quot;または &quot;development&quot;でローカルの &lt;code&gt;npm ls&lt;/code&gt; 、 &lt;code&gt;npm outdated&lt;/code&gt; &lt;code&gt;--dev&lt;/code&gt; 、または &lt;code&gt;npm update&lt;/code&gt; を実行している場合は、-- devのエイリアスです。</target>
        </trans-unit>
        <trans-unit id="4493b4c17f5194476ba9dc09ece0ec5f171f538f" translate="yes" xml:space="preserve">
          <source>When &quot;dev&quot; or &quot;development&quot; and running local &lt;code&gt;npm shrinkwrap&lt;/code&gt;, &lt;code&gt;npm outdated&lt;/code&gt;, or &lt;code&gt;npm update&lt;/code&gt;, is an alias for &lt;code&gt;--dev&lt;/code&gt;.</source>
          <target state="translated">&quot;dev&quot;または &quot;development&quot;でローカルの &lt;code&gt;npm shrinkwrap&lt;/code&gt; を実行している場合、 &lt;code&gt;npm outdated&lt;/code&gt; outdatedまたは &lt;code&gt;npm update&lt;/code&gt; は &lt;code&gt;--dev&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="4cc9c3da43536fbb6a3c3d5f2ae83320fd893c85" translate="yes" xml:space="preserve">
          <source>When &quot;dev&quot; or &quot;development&quot;, is an alias to &lt;code&gt;dev&lt;/code&gt;.</source>
          <target state="translated">「dev」または「development」の場合、は &lt;code&gt;dev&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="d41204b6b181789a9076408e4bcf599aa3be5fd6" translate="yes" xml:space="preserve">
          <source>When &quot;prod&quot; or &quot;production&quot; and running local &lt;code&gt;npm install&lt;/code&gt; without any arguments, only non-devDependencies (and their dependencies) are installed.</source>
          <target state="translated">「PROD」又は「製造」と実行しているローカルの場合は &lt;code&gt;npm install&lt;/code&gt; 引数なしで、唯一の非devDependencies（およびその依存関係）がインストールされています。</target>
        </trans-unit>
        <trans-unit id="3312ad860f56b6d102519ffd9dc8901cd9ef7aac" translate="yes" xml:space="preserve">
          <source>When &quot;prod&quot; or &quot;production&quot; and running local &lt;code&gt;npm ls&lt;/code&gt;, &lt;code&gt;npm outdated&lt;/code&gt;, or &lt;code&gt;npm update&lt;/code&gt;, is an alias for &lt;code&gt;--production&lt;/code&gt;.</source>
          <target state="translated">「prod」または「production」で、ローカルの &lt;code&gt;npm ls&lt;/code&gt; 、 &lt;code&gt;npm outdated&lt;/code&gt; &lt;code&gt;--production&lt;/code&gt; 、または &lt;code&gt;npm update&lt;/code&gt; を実行している場合、-productionのエイリアスです。</target>
        </trans-unit>
        <trans-unit id="6a35983ca3126f2ce3424683d96b0deb34822e0d" translate="yes" xml:space="preserve">
          <source>When &quot;prod&quot; or &quot;production&quot;, is an alias to &lt;code&gt;production&lt;/code&gt;.</source>
          <target state="translated">「prod」または「production」の場合は、 &lt;code&gt;production&lt;/code&gt; のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="2f789307233faa5f865d7382d3f03f0582513b1b" translate="yes" xml:space="preserve">
          <source>When &quot;true&quot; displays the message at the end of each &lt;code&gt;npm install&lt;/code&gt; acknowledging the number of dependencies looking for funding. See &lt;a href=&quot;../commands/npm-fund&quot;&gt;&lt;code&gt;npm fund&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">「true」の場合、各 &lt;code&gt;npm install&lt;/code&gt; 最後に、資金を探している依存関係の数を確認するメッセージが表示されます。詳細については、&lt;a href=&quot;../commands/npm-fund&quot;&gt; &lt;code&gt;npm fund&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="343ba620689b4d6e036c4bff9d819d57912ccdfa" translate="yes" xml:space="preserve">
          <source>When &quot;true&quot; submit audit reports alongside &lt;code&gt;npm install&lt;/code&gt; runs to the default registry and all registries configured for scopes. See the documentation for &lt;a href=&quot;../cli/audit&quot;&gt;npm-audit&lt;/a&gt; for details on what is submitted.</source>
          <target state="translated">「true」の場合、 &lt;code&gt;npm install&lt;/code&gt; とともにデフォルトのレジストリおよびスコープ用に構成されたすべてのレジストリに対して監査レポートを送信します。送信される内容の詳細については、&lt;a href=&quot;../cli/audit&quot;&gt;npm-auditの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1d1f065a44dffe2890415b7702eacfac23fa7ab0" translate="yes" xml:space="preserve">
          <source>When &quot;true&quot; submit audit reports alongside &lt;code&gt;npm install&lt;/code&gt; runs to the default registry and all registries configured for scopes. See the documentation for &lt;a href=&quot;../commands/npm-audit&quot;&gt;&lt;code&gt;npm audit&lt;/code&gt;&lt;/a&gt; for details on what is submitted.</source>
          <target state="translated">「true」の場合、 &lt;code&gt;npm install&lt;/code&gt; と一緒に監査レポートを送信すると、デフォルトのレジストリとスコープ用に構成されたすべてのレジストリが実行されます。提出される内容の詳細については、&lt;a href=&quot;../commands/npm-audit&quot;&gt; &lt;code&gt;npm audit&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="67044ff3714d726dea76a6c9da8723ec70afb0bd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;COMP_CWORD&lt;/code&gt;, &lt;code&gt;COMP_LINE&lt;/code&gt;, and &lt;code&gt;COMP_POINT&lt;/code&gt; are defined in the environment, &lt;code&gt;npm completion&lt;/code&gt; acts in &quot;plumbing mode&quot;, and outputs completions based on the arguments.</source>
          <target state="translated">とき &lt;code&gt;COMP_CWORD&lt;/code&gt; 、 &lt;code&gt;COMP_LINE&lt;/code&gt; 、および &lt;code&gt;COMP_POINT&lt;/code&gt; は、環境に定義されている、 &lt;code&gt;npm completion&lt;/code&gt; 「配管モード」で動作し、出力の完了は、引数に基づいて。</target>
        </trans-unit>
        <trans-unit id="0ede9b56c766fba16f11c44024114aac7401fd17" translate="yes" xml:space="preserve">
          <source>When Will npm Require the Second Factor?</source>
          <target state="translated">npm はいつ第二の要素を必要とするのでしょうか?</target>
        </trans-unit>
        <trans-unit id="af289a567d98f3def3b5d41bf864fba3ddcee044" translate="yes" xml:space="preserve">
          <source>When a package fails to install or publish, the npm CLI will generate an &lt;code&gt;npm-debug.log&lt;/code&gt; file. This log file can help you (and &lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;npm Support&lt;/a&gt;) figure out what went wrong.</source>
          <target state="translated">パッケージのインストールまたは公開に失敗すると、npmCLIは &lt;code&gt;npm-debug.log&lt;/code&gt; ファイルを生成します。このログファイルは、何が悪かったのかを理解するのに役立ちます（および&lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;npmサポート&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4fb09ed9eb9d711fd63d942366a4b81d2d3f2889" translate="yes" xml:space="preserve">
          <source>When a package is updated, a list of previous versions appear.</source>
          <target state="translated">パッケージが更新されると、以前のバージョンの一覧が表示されます。</target>
        </trans-unit>
        <trans-unit id="e30dd911797c70c55b40a5fe989e404dd070e57b" translate="yes" xml:space="preserve">
          <source>When a token is read-only, it cannot be used to make changes to a package. If a token is not explicitly set to read-only, it has full permissions, including publish and modification rights.</source>
          <target state="translated">トークンが読み取り専用に設定されている場合、そのトークンを使ってパッケージに変更を加えることはできません。トークンが明示的に読み取り専用に設定されていない場合は、公開権や変更権を含む完全な権限が与えられます。</target>
        </trans-unit>
        <trans-unit id="844b96eef97f5604cfc5f41ab9307209a8628fd6" translate="yes" xml:space="preserve">
          <source>When an npm package is published, the publishing process generates a checksum that npm uses at install time to verify that the package didn't get corrupted in transit. &lt;code&gt;npm doctor&lt;/code&gt; uses these checksums to validate the package tarballs in your local cache (you can see where that cache is located with &lt;code&gt;npm config get cache&lt;/code&gt;, and see what's in that cache with &lt;code&gt;npm cache ls&lt;/code&gt; &amp;ndash; probably more than you were expecting!). In the event that there are corrupt packages in your cache, you should probably run &lt;code&gt;npm cache clean&lt;/code&gt; and reset the cache.</source>
          <target state="translated">npmパッケージが公開されると、公開プロセスはnpmがインストール時に使用するチェックサムを生成し、パッケージが転送中に破損していないことを確認します。 &lt;code&gt;npm doctor&lt;/code&gt; はこれらのチェックサムを使用して、ローカルキャッシュ内のパッケージtarballを検証します（ &lt;code&gt;npm config get cache&lt;/code&gt; を使用してそのキャッシュの場所を確認し、 &lt;code&gt;npm cache ls&lt;/code&gt; を使用してそのキャッシュの内容を確認できます-おそらく予想以上の数です！）。キャッシュに破損したパッケージがある場合、おそらく &lt;code&gt;npm cache clean&lt;/code&gt; を実行してキャッシュをリセットする必要があります。</target>
        </trans-unit>
        <trans-unit id="7ec936f6f4e29fa6fed4209a9c0cd3463676d396" translate="yes" xml:space="preserve">
          <source>When choosing a name for your package, choose a name that</source>
          <target state="translated">パッケージの名前を選ぶときは、以下のような名前を選びましょう。</target>
        </trans-unit>
        <trans-unit id="3adf067517e72d8ef3fc1133af39462e84617cfc" translate="yes" xml:space="preserve">
          <source>When creating tarballs for &lt;code&gt;npm publish&lt;/code&gt;, the linked packages are &quot;snapshotted&quot; to their current state by resolving the symbolic links.</source>
          <target state="translated">&lt;code&gt;npm publish&lt;/code&gt; の tarballを作成するとき、リンクされたパッケージは、シンボリックリンクを解決することにより、現在の状態に「スナップショット」されます。</target>
        </trans-unit>
        <trans-unit id="84522255c0c22ce89320a33eaa68d118e934f8d4" translate="yes" xml:space="preserve">
          <source>When in global mode, executables are linked into &lt;code&gt;{prefix}/bin&lt;/code&gt; on Unix, or directly into &lt;code&gt;{prefix}&lt;/code&gt; on Windows.</source>
          <target state="translated">グローバルモードの場合、実行可能ファイルは、UNIXでは &lt;code&gt;{prefix}/bin&lt;/code&gt; にリンクされ、Windowsでは &lt;code&gt;{prefix}&lt;/code&gt; に直接リンクされます。</target>
        </trans-unit>
        <trans-unit id="4a68bd60503dce2d11e61e4ca6c85ca1bdb57804" translate="yes" xml:space="preserve">
          <source>When in global mode, man pages are linked into &lt;code&gt;{prefix}/share/man&lt;/code&gt;.</source>
          <target state="translated">グローバルモードの場合、manページは &lt;code&gt;{prefix}/share/man&lt;/code&gt; にリンクされます。</target>
        </trans-unit>
        <trans-unit id="8d7cfc6d5f82ac94dcde589df6ef535f5ec1283e" translate="yes" xml:space="preserve">
          <source>When in local mode, executables are linked into &lt;code&gt;./node_modules/.bin&lt;/code&gt; so that they can be made available to scripts run through npm. (For example, so that a test runner will be in the path when you run &lt;code&gt;npm test&lt;/code&gt;.)</source>
          <target state="translated">ローカルモードでは、実行可能ファイルは &lt;code&gt;./node_modules/.bin&lt;/code&gt; にリンクされ、npmを介して実行されるスクリプトで使用できるようになります。（たとえば、 &lt;code&gt;npm test&lt;/code&gt; を実行すると、テストランナーがパスに含まれるようになります。）</target>
        </trans-unit>
        <trans-unit id="1a4c8dd8acb9c2423f0067bfc623604a7d063e5e" translate="yes" xml:space="preserve">
          <source>When in local mode, man pages are not installed.</source>
          <target state="translated">ローカルモードの場合、マンページはインストールされません。</target>
        </trans-unit>
        <trans-unit id="3bd72cff4ed58f8e6df53af7f04897bb009bfd03" translate="yes" xml:space="preserve">
          <source>When installing dependencies, a preferred tagged version may be specified:</source>
          <target state="translated">依存関係をインストールする際に、優先的にタグ付けされたバージョンを指定することができます。</target>
        </trans-unit>
        <trans-unit id="de4a31001dedd3344572344c68fdba95b88f835d" translate="yes" xml:space="preserve">
          <source>When installing locally, npm first tries to find an appropriate &lt;code&gt;prefix&lt;/code&gt; folder. This is so that &lt;code&gt;npm install foo@1.2.3&lt;/code&gt; will install to the sensible root of your package, even if you happen to have &lt;code&gt;cd&lt;/code&gt;ed into some other folder.</source>
          <target state="translated">ローカルにインストールする場合、npmは最初に適切な &lt;code&gt;prefix&lt;/code&gt; フォルダーを見つけようとします。これは、他のフォルダに &lt;code&gt;cd&lt;/code&gt; した場合でも、 &lt;code&gt;npm install foo@1.2.3&lt;/code&gt; がパッケージの適切なルートにインストールされるようにするためです。</target>
        </trans-unit>
        <trans-unit id="d4c06f9b9669e1a3f0d33bf59f16e3979562eb4d" translate="yes" xml:space="preserve">
          <source>When listed as a dependent in a &lt;code&gt;package.json&lt;/code&gt; file, scoped packages are preceded by their scope name. The scope name is everything between the &lt;code&gt;@&lt;/code&gt; and the slash:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルに依存関係としてリストされている場合、スコープ付きパッケージの前にはスコープ名が付きます。スコープ名は、 &lt;code&gt;@&lt;/code&gt; とスラッシュの間のすべてです。</target>
        </trans-unit>
        <trans-unit id="cb66687d0636911ae5dc99fbc4ca18db8458999f" translate="yes" xml:space="preserve">
          <source>When logged into a legacy registry that uses username and password authentication, this will clear the credentials in your user configuration. In this case, it will &lt;em&gt;only&lt;/em&gt; affect the current environment.</source>
          <target state="translated">ユーザー名とパスワードの認証を使用するレガシーレジストリにログインすると、ユーザー設定の認証情報が消去されます。この場合、現在の環境に&lt;em&gt;のみ&lt;/em&gt;影響します。</target>
        </trans-unit>
        <trans-unit id="5123f0df116ebf85f97190b42da54072ee61819b" translate="yes" xml:space="preserve">
          <source>When logged into a registry that supports token-based authentication, tell the server to end this token's session. This will invalidate the token everywhere you're using it, not just for the current environment.</source>
          <target state="translated">トークンベースの認証をサポートしているレジストリにログインした場合は、このトークンのセッションを終了するようにサーバに指示します。これにより、現在の環境だけでなく、トークンを使用しているすべての場所でトークンが無効になります。</target>
        </trans-unit>
        <trans-unit id="0428e6417752e51add8e56bbd91b9bab3cb8ba8a" translate="yes" xml:space="preserve">
          <source>When making requests of the registry npm adds two headers with information about your environment:</source>
          <target state="translated">npm はレジストリのリクエストを行う際に、環境に関する情報を含む 2 つのヘッダを追加します。</target>
        </trans-unit>
        <trans-unit id="77bc383d3a541f9ee5c1913178340cfe3043647f" translate="yes" xml:space="preserve">
          <source>When package package-locks are disabled, automatic pruning of extraneous modules will also be disabled. To remove extraneous modules with package-locks disabled use &lt;code&gt;npm prune&lt;/code&gt;.</source>
          <target state="translated">パッケージpackage-locksを無効にすると、無関係なモジュールの自動プルーニングも無効になります。パッケージロックを無効にして不要なモジュールを削除するには、 &lt;code&gt;npm prune&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="61b81dd8dd29aadddef5fcb7d46cb483023b7018" translate="yes" xml:space="preserve">
          <source>When parsing caret ranges, a missing &lt;code&gt;patch&lt;/code&gt; value desugars to the number &lt;code&gt;0&lt;/code&gt;, but will allow flexibility within that value, even if the major and minor versions are both &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">キャレット範囲を解析する場合、欠落している &lt;code&gt;patch&lt;/code&gt; 値は数値 &lt;code&gt;0&lt;/code&gt; にデガーしますが、メジャーバージョンとマイナーバージョンが両方とも &lt;code&gt;0&lt;/code&gt; であっても、その値内で柔軟性を持たせることができます。</target>
        </trans-unit>
        <trans-unit id="ed973c4c087f011bc5fcac9a1b1566b573322eba" translate="yes" xml:space="preserve">
          <source>When prompted for a one-time password, enter a password from your authenticator app:</source>
          <target state="translated">ワンタイムパスワードの入力を求められたら、認証アプリからパスワードを入力します。</target>
        </trans-unit>
        <trans-unit id="4e7246f6d17efef7777f2df36bc716d4610718af" translate="yes" xml:space="preserve">
          <source>When prompted for an OTP, enter a recovery code.</source>
          <target state="translated">OTP の入力を求められたら、回復コードを入力します。</target>
        </trans-unit>
        <trans-unit id="e1c281bd63bd0377b1b77a474e9b98615e5b1157" translate="yes" xml:space="preserve">
          <source>When prompted to add an OTP code from your authenticator, on the command line, enter a one-time password generated by your authenticator app.</source>
          <target state="translated">認証機能から OTP コードを追加するように促されたら、コマンドラインで、認証機能アプリで生成されたワンタイムパスワードを入力します。</target>
        </trans-unit>
        <trans-unit id="401698f07f699a814eb735d5b33b4a91c90b07a4" translate="yes" xml:space="preserve">
          <source>When prompted, enter your npm password:</source>
          <target state="translated">プロンプトが表示されたら、npm のパスワードを入力します。</target>
        </trans-unit>
        <trans-unit id="a1030d6b7e1750115b4a7123918f51b2cc7055b2" translate="yes" xml:space="preserve">
          <source>When prompted, enter your password.</source>
          <target state="translated">プロンプトが表示されたら、パスワードを入力します。</target>
        </trans-unit>
        <trans-unit id="58a82df7e221edd64d8046005a33a21ed8a84832" translate="yes" xml:space="preserve">
          <source>When prompted, enter your username, password, and email address.</source>
          <target state="translated">プロンプトが表示されたら、ユーザー名、パスワード、メールアドレスを入力してください。</target>
        </trans-unit>
        <trans-unit id="0891d543faff20569e57ca57820e1e3d70fb8d58" translate="yes" xml:space="preserve">
          <source>When prompted, provide your SSO credentials.</source>
          <target state="translated">プロンプトが表示されたら、SSO 認証情報を入力します。</target>
        </trans-unit>
        <trans-unit id="09bc4d9191833bac2d94e66944778f2b0e0e43e9" translate="yes" xml:space="preserve">
          <source>When prompted, provide your current password.</source>
          <target state="translated">プロンプトが表示されたら、現在のパスワードを入力してください。</target>
        </trans-unit>
        <trans-unit id="3b8ff083447b33a79f551d92d08549d0d8deb926" translate="yes" xml:space="preserve">
          <source>When prompted, type a new password.</source>
          <target state="translated">プロンプトが表示されたら、新しいパスワードを入力します。</target>
        </trans-unit>
        <trans-unit id="07ca73d1441af0f9fcb23f37a2ce11434bc7e779" translate="yes" xml:space="preserve">
          <source>When publishing scoped packages, the access level defaults to &lt;code&gt;restricted&lt;/code&gt;. If you want your scoped package to be publicly viewable (and installable) set &lt;code&gt;--access=public&lt;/code&gt;. The only valid values for &lt;code&gt;access&lt;/code&gt; are &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;restricted&lt;/code&gt;. Unscoped packages &lt;em&gt;always&lt;/em&gt; have an access level of &lt;code&gt;public&lt;/code&gt;.</source>
          <target state="translated">スコープ指定されたパッケージを公開する場合、アクセスレベルはデフォルトで &lt;code&gt;restricted&lt;/code&gt; ます。スコープ指定したパッケージを公開（およびインストール）できるようにするには、-- &lt;code&gt;--access=public&lt;/code&gt; 設定します。 &lt;code&gt;access&lt;/code&gt; 有効な値は &lt;code&gt;public&lt;/code&gt; と &lt;code&gt;restricted&lt;/code&gt; のみです。対象範囲外のパッケージのアクセスレベルは&lt;em&gt;常に&lt;/em&gt; &lt;code&gt;public&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ae2ec071101361f64fd7f37041762a3084a639d5" translate="yes" xml:space="preserve">
          <source>When run as &lt;code&gt;ll&lt;/code&gt; or &lt;code&gt;la&lt;/code&gt;, it shows extended information by default.</source>
          <target state="translated">&lt;code&gt;ll&lt;/code&gt; または &lt;code&gt;la&lt;/code&gt; として実行すると、デフォルトで拡張情報が表示されます。</target>
        </trans-unit>
        <trans-unit id="fce64033e5be292ec60317534313d06f11bc1809" translate="yes" xml:space="preserve">
          <source>When running scripts (see &lt;a href=&quot;scripts&quot;&gt;&lt;code&gt;scripts&lt;/code&gt;&lt;/a&gt;) the package.json &quot;config&quot; keys are overwritten in the environment if there is a config param of &lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt;. For example, if the package.json has this:</source>
          <target state="translated">（参照スクリプトを実行すると&lt;a href=&quot;scripts&quot;&gt; &lt;code&gt;scripts&lt;/code&gt; &lt;/a&gt;）の設定のparamがある場合package.json「設定」キーが環境に上書きされ &lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt; 。たとえば、package.jsonに次のようなものがある場合：</target>
        </trans-unit>
        <trans-unit id="aa093e4b3e31ff66fb798b276fceb4d46c6c368b" translate="yes" xml:space="preserve">
          <source>When running scripts (see &lt;code&gt;&lt;a href=&quot;scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt;) the package.json &quot;config&quot; keys are overwritten in the environment if there is a config param of &lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt;. For example, if the package.json has this:</source>
          <target state="translated">スクリプトを実行するとき（ &lt;code&gt;&lt;a href=&quot;scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; を参照）、 &lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt; パラメーターがある場合、package.json &quot;config&quot;キーは環境で上書きされます。たとえば、package.jsonに次のような場合：</target>
        </trans-unit>
        <trans-unit id="36780dd914d71e408f2cff71e6a78870d203c219" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, npm will display a progress bar during time intensive operations, if &lt;code&gt;process.stderr&lt;/code&gt; is a TTY.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、 &lt;code&gt;process.stderr&lt;/code&gt; がTTY である場合、npmは時間のかかる操作中に進行状況バーを表示します。</target>
        </trans-unit>
        <trans-unit id="ed07498757440b4adeedb407674d847c5adca7f0" translate="yes" xml:space="preserve">
          <source>When set to true, npm uses unicode characters in the tree output. When false, it uses ascii characters to draw trees.</source>
          <target state="translated">true に設定すると、npm はツリー出力で unicode 文字を使用します。false に設定すると、ツリーの描画に ASCII 文字を使用します。</target>
        </trans-unit>
        <trans-unit id="a1a35a07542f571566a831e5b15e8048093a606e" translate="yes" xml:space="preserve">
          <source>When something is intentionally missing or removed, set it to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">意図的に何かが欠けている、または削除されている場合は、 &lt;code&gt;null&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="15847af7812cdc073e15c215b74c3db99b6703b2" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;global&lt;/code&gt; flag is set, npm installs things into this prefix. When it is not set, it uses the root of the current package, or the current working directory if not in a package already.</source>
          <target state="translated">ときに &lt;code&gt;global&lt;/code&gt; フラグが設定され、NPMはこのプレフィックスに物事をインストールします。設定されていない場合は、現在のパッケージのルート、またはパッケージ内にない場合は現在の作業ディレクトリを使用します。</target>
        </trans-unit>
        <trans-unit id="b88c148a2f34f6c9030e4a63ecabf247848cc9d2" translate="yes" xml:space="preserve">
          <source>When to deprecate</source>
          <target state="translated">非推奨にする場合</target>
        </trans-unit>
        <trans-unit id="188dbd1859c66530d4aaa591b5bf549d484b7b94" translate="yes" xml:space="preserve">
          <source>When to unpublish</source>
          <target state="translated">公開を中止するタイミング</target>
        </trans-unit>
        <trans-unit id="0efa73ce00777ed3efdd090f84885befbe91274f" translate="yes" xml:space="preserve">
          <source>When used with SSO-enabled &lt;code&gt;auth-type&lt;/code&gt;s, configures how regularly the registry should be polled while the user is completing authentication.</source>
          <target state="translated">SSOが有効な &lt;code&gt;auth-type&lt;/code&gt; で使用する場合、ユーザーが認証を完了している間にレジストリをポーリングする頻度を構成します。</target>
        </trans-unit>
        <trans-unit id="1f16e5d261d996f54f88ffea58fc89c658a1bf76" translate="yes" xml:space="preserve">
          <source>When used with the &lt;code&gt;npm rm&lt;/code&gt; command, it removes it from the &lt;code&gt;dependencies&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;npm rm&lt;/code&gt; コマンドと共に使用すると、 &lt;code&gt;dependencies&lt;/code&gt; オブジェクトから削除されます。</target>
        </trans-unit>
        <trans-unit id="4de9b5620e86cdff2f786c33ae257363bb7fbd38" translate="yes" xml:space="preserve">
          <source>When used with the &lt;code&gt;npm rm&lt;/code&gt; command, it removes it from the &lt;code&gt;devDependencies&lt;/code&gt; object.</source>
          <target state="translated">で使用する場合 &lt;code&gt;npm rm&lt;/code&gt; コマンドで、それはから削除 &lt;code&gt;devDependencies&lt;/code&gt; のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="be80a143d0dd654364129e2946d4a6599c14b978" translate="yes" xml:space="preserve">
          <source>When used with the &lt;code&gt;npm rm&lt;/code&gt; command, it removes it from the bundledDependencies list.</source>
          <target state="translated">&lt;code&gt;npm rm&lt;/code&gt; コマンドと一緒に使用すると、bundledDependenciesリストから削除されます。</target>
        </trans-unit>
        <trans-unit id="e040b0c0b1a3c3e88c6b9998085e2d991af268ab" translate="yes" xml:space="preserve">
          <source>When using any of the above options to save dependencies to your package.json, there are two additional, optional flags:</source>
          <target state="translated">上記のオプションのいずれかを使って依存関係を package.json に保存する際には、追加のオプションのフラグが 2 つあります。</target>
        </trans-unit>
        <trans-unit id="3b8e9ab19f19149619e90a0a3299652da3dc272f" translate="yes" xml:space="preserve">
          <source>When working locally in a project, a &lt;code&gt;.npmrc&lt;/code&gt; file in the root of the project (ie, a sibling of &lt;code&gt;node_modules&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt;) will set config values specific to this project.</source>
          <target state="translated">プロジェクトでローカルに作業する場合、プロジェクトのルートにある &lt;code&gt;.npmrc&lt;/code&gt; ファイル（つまり、 &lt;code&gt;node_modules&lt;/code&gt; と &lt;code&gt;package.json&lt;/code&gt; の兄弟）は、このプロジェクトに固有の構成値を設定します。</target>
        </trans-unit>
        <trans-unit id="e657384becb84be3d16fd5860f65a3f633ecb345" translate="yes" xml:space="preserve">
          <source>When you add a member to your organization, they are sent an email inviting them to the organization.</source>
          <target state="translated">組織にメンバーを追加すると、メンバーには組織への招待メールが送信されます。</target>
        </trans-unit>
        <trans-unit id="5b0637639708af7b0e8b34895a3df3b8b3f2e7eb" translate="yes" xml:space="preserve">
          <source>When you choose a package, more information appears. This information is written by the package author(s) so details vary. This is where you can discover how to use this package. Developers often provide contact information as well.</source>
          <target state="translated">パッケージを選択すると、より多くの情報が表示されます。この情報はパッケージの作者によって書かれたものなので、詳細は様々です。ここでは、このパッケージの使い方を知ることができます。開発者の連絡先もここに記載されていることが多いです。</target>
        </trans-unit>
        <trans-unit id="f40d0fe5169d446d60e5b09b2bf32599954e0183" translate="yes" xml:space="preserve">
          <source>When you deprecate a version fo a package, a red message will be displayed on that version's package page, similar to deprecating an entire package.</source>
          <target state="translated">パッケージのバージョンを非推奨にすると、パッケージ全体を非推奨にするのと同じように、そのバージョンのパッケージページに赤いメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="58b88a02f773bc3c863eb7bebf784f81404343e6" translate="yes" xml:space="preserve">
          <source>When you enable 2FA, we will prompt you for a unique one-time password when you perform certain actions on your account or on packages to which you have write access, depending on your 2FA configuration.</source>
          <target state="translated">2FA を有効にすると、2FA の設定に応じて、アカウントまたは書き込みアクセス権を持つパッケージで特定のアクションを実行する際に、固有のワンタイムパスワードの入力を求められます。</target>
        </trans-unit>
        <trans-unit id="198618e4f7b4d64dd68672aacdb525a982eafadb" translate="yes" xml:space="preserve">
          <source>When you find issues, please report them:</source>
          <target state="translated">問題点を見つけたら報告してください。</target>
        </trans-unit>
        <trans-unit id="4ff3fb55480206ec94f500881e7d47f3195d9ec0" translate="yes" xml:space="preserve">
          <source>When you have two-factor access enabled on your account, and you lose the ability to provide the one-time password, you may be able to recover your account.</source>
          <target state="translated">アカウントで二要素アクセスを有効にしていて、ワンタイムパスワードを提供する機能を失った場合、アカウントを復旧できる可能性があります。</target>
        </trans-unit>
        <trans-unit id="f92d3b692a286522a44e78d9d600df3f8decfe63" translate="yes" xml:space="preserve">
          <source>When you install node.js, npm is automatically installed. However, npm gets updated more frequently than Node.js, so be sure that you have the latest version.</source>
          <target state="translated">node.jsをインストールすると、自動的にnpmがインストールされます。ただし、node.jsよりもnpmの方が頻繁に更新されるので、最新版があるかどうか確認しておきましょう。</target>
        </trans-unit>
        <trans-unit id="1850403c89174f5a02a382f2ea2d82b2c7795320" translate="yes" xml:space="preserve">
          <source>When you make changes, you can update the package using</source>
          <target state="translated">変更を加える際には、パッケージを更新するために</target>
        </trans-unit>
        <trans-unit id="4694cacd4c7408eb6ca3b46398305b54f89f876d" translate="yes" xml:space="preserve">
          <source>When you make significant changes to a published package, we recommend updating the version number to communicate the extent of the changes to others who rely on your code.</source>
          <target state="translated">公開されているパッケージに重要な変更を加えた場合は、バージョン番号を更新して、コードに依存している他の人に変更の程度を伝えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="eacc9f6abc38275c5eb2b89c0844a6b6c89c052b" translate="yes" xml:space="preserve">
          <source>When you publish, this documentation will display on the web page where people download your package.</source>
          <target state="translated">公開すると、このドキュメントはパッケージをダウンロードするウェブページに表示されます。</target>
        </trans-unit>
        <trans-unit id="87afba9713193d93d37a38a5c9a77f0070fb4cd1" translate="yes" xml:space="preserve">
          <source>When you reset your password from the CLI, it must:</source>
          <target state="translated">CLIからパスワードをリセットするときには、それが必要です。</target>
        </trans-unit>
        <trans-unit id="1fcd5c290720d12afab2f2e19b5eb5b46152b04a" translate="yes" xml:space="preserve">
          <source>When you reset your password from the website, it must:</source>
          <target state="translated">ウェブサイトからパスワードをリセットするときは、それが必要です。</target>
        </trans-unit>
        <trans-unit id="ef1910cb3d974ddae9864c6ddb19f5e703b0ee9c" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;npm install foo@1.2.3&lt;/code&gt;, then the package is loaded into the cache, and then unpacked into &lt;code&gt;./node_modules/foo&lt;/code&gt;. Then, any of foo's dependencies are similarly unpacked into &lt;code&gt;./node_modules/foo/node_modules/...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm install foo@1.2.3&lt;/code&gt; を実行すると、パッケージがキャッシュにロードされ、次に &lt;code&gt;./node_modules/foo&lt;/code&gt; に解凍されます。次に、fooの依存関係が同様に &lt;code&gt;./node_modules/foo/node_modules/...&lt;/code&gt; に解凍されます。</target>
        </trans-unit>
        <trans-unit id="7722c6a49f23f7a0048de3e7961e290d98606255" translate="yes" xml:space="preserve">
          <source>When you sign up for an npm user account or create an organization, you are granted a scope that matches your user or organization name. You can use this scope as a namespace for related packages.</source>
          <target state="translated">npm のユーザーアカウントにサインアップしたり、組織を作成したりすると、ユーザー名や組織名と一致するスコープが与えられます。このスコープは、関連するパッケージの名前空間として使用できます。</target>
        </trans-unit>
        <trans-unit id="a8942290f5497065f5e5a14eda6879b52270952c" translate="yes" xml:space="preserve">
          <source>When you sign up for private modules as an individual user, your scope is your username. If you create an npm Org, the orgname can be the scope. Orgs can be free or paid. Using a public Org is the only free way to use scopes in package names.</source>
          <target state="translated">個人ユーザとしてプライベートモジュールにサインアップする場合、スコープはユーザ名になります。npm Org を作成した場合は、orgname がスコープになります。Org は無料でも有料でも構いません。パッケージ名にスコープを使用する唯一の自由な方法は、公開のOrgを使用することです。</target>
        </trans-unit>
        <trans-unit id="f3f39551236a270b18e79fe5a915e94d7872d5fb" translate="yes" xml:space="preserve">
          <source>When you type a password to sign in, create an account, or change your password, npm will check if the password you entered is considered weak according to datasets like HaveIBeenPwned. The password may be identified as weak even if you have never used that password before.</source>
          <target state="translated">サインインやアカウントの作成、パスワードの変更のためにパスワードを入力すると、npmはHaveIBeenPwnedのようなデータセットに従って、入力したパスワードが弱いとみなされるかどうかをチェックします。そのパスワードを一度も使ったことがなくても、そのパスワードが弱いと判断されることがあります。</target>
        </trans-unit>
        <trans-unit id="c1f84168319ce4d351a28be69d77524617f1ae63" translate="yes" xml:space="preserve">
          <source>When you want to restrict write access, it is almost always better to set the default permissions to read-only and create separate teams for managing write permissions.</source>
          <target state="translated">書き込みアクセスを制限したい場合は、ほとんどの場合、デフォルトのパーミッションを読み取り専用に設定し、書き込みパーミッションを管理するために別々のチームを作成した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="f67e9e5a0dba0fd46796178e40a6d0b0f9efa386" translate="yes" xml:space="preserve">
          <source>Whenever you login to npm, an authentication token is generated. Tokens give you rights to publish and access your modules.</source>
          <target state="translated">npm にログインするたびに認証トークンが生成されます。トークンはモジュールを公開したりアクセスしたりする権限を与えてくれます。</target>
        </trans-unit>
        <trans-unit id="3cc48c297ca1aeee1d3ce0b32e0fa396f72c53e7" translate="yes" xml:space="preserve">
          <source>Whenever you run &lt;code&gt;npm install&lt;/code&gt;, npm generates or updates your package lock, which will look something like this:</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; を実行するたびに、npmは次のようなパッケージロックを生成または更新します。</target>
        </trans-unit>
        <trans-unit id="30b276a7eb49af25f95216e051ce7f4909c2da6e" translate="yes" xml:space="preserve">
          <source>Where do I Start?</source>
          <target state="translated">どこから始めればいいの?</target>
        </trans-unit>
        <trans-unit id="b50c192c27c05834f1182d2be2d69867cbfb5384" translate="yes" xml:space="preserve">
          <source>Where to store temporary files and folders. All temp files are deleted on success, but left behind on failure for forensic purposes.</source>
          <target state="translated">一時ファイルとフォルダを保存する場所。すべての一時ファイルは成功時には削除されますが、失敗時にはフォレンジック目的のために残されます。</target>
        </trans-unit>
        <trans-unit id="75a20c1003d03c415977a24d8d573581461f09ab" translate="yes" xml:space="preserve">
          <source>Whether or not to do SSL key validation when making requests to the registry via https.</source>
          <target state="translated">https経由でレジストリへのリクエストを行う際に、SSLキーの検証を行うかどうか。</target>
        </trans-unit>
        <trans-unit id="805826af14b247cc59a09a966479718721b09495" translate="yes" xml:space="preserve">
          <source>Whether or not to output JSON data, rather than the normal output.</source>
          <target state="translated">通常の出力ではなく、JSONデータを出力するかどうか。</target>
        </trans-unit>
        <trans-unit id="d02c654b506b4a638674b817816c1a9762614f1f" translate="yes" xml:space="preserve">
          <source>Whether to represent the tree structure using unicode characters. Set it to &lt;code&gt;false&lt;/code&gt; in order to use all-ansi output.</source>
          <target state="translated">Unicode文字を使用してツリー構造を表すかどうか。all-ansi出力を使用するには、 &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="39d7183a43cf16f278c8b25d7207de26c771f427" translate="yes" xml:space="preserve">
          <source>Whether to represent the tree structure using unicode characters. Set it to false in order to use all-ansi output.</source>
          <target state="translated">ツリー構造を unicode 文字で表現するかどうか。all-ansi出力を使用するには、falseに設定します。</target>
        </trans-unit>
        <trans-unit id="c49922077e932b9e5aeedc7da38991a3156a7d04" translate="yes" xml:space="preserve">
          <source>Which Version of the Package is Installed?</source>
          <target state="translated">どのバージョンのパッケージがインストールされていますか?</target>
        </trans-unit>
        <trans-unit id="130111d3addd3ccce758ba63c3746ad9a2413773" translate="yes" xml:space="preserve">
          <source>Which then can be used to increment further:</source>
          <target state="translated">これは、さらにインクリメントするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="34e73d08f87d0d9a1e2dd8f8daf88132c3347a03" translate="yes" xml:space="preserve">
          <source>Which will use the RisingStack &lt;a href=&quot;https://hub.docker.com/r/risingstack/alpine/&quot;&gt;Alpine Node.JS Docker image&lt;/a&gt;, copy the &lt;code&gt;package.json&lt;/code&gt; into our container, installs dependencies, copies the source files and runs the start command as specified in the &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">これにより、RisingStack &lt;a href=&quot;https://hub.docker.com/r/risingstack/alpine/&quot;&gt;Alpine Node.JS Dockerイメージ&lt;/a&gt;が使用され、 &lt;code&gt;package.json&lt;/code&gt; がコンテナーにコピーされ、依存関係がインストールされ、ソースファイルがコピーされ、 &lt;code&gt;package.json&lt;/code&gt; で指定されているとおりに開始コマンドが実行されます。</target>
        </trans-unit>
        <trans-unit id="dacf25d49fed5b44141b8634e5a346b8e382e634" translate="yes" xml:space="preserve">
          <source>While Node.js may come bundled with a particular version of npm, it's the policy of the CLI team that we recommend all users run &lt;code&gt;npm@latest&lt;/code&gt; if they can. As the CLI is maintained by a small team of contributors, there are only resources for a single line of development, so npm's own long-term support releases typically only receive critical security and regression fixes. The team believes that the latest tested version of npm is almost always likely to be the most functional and defect-free version of npm.</source>
          <target state="translated">Node.jsはnpmの特定のバージョンにバンドルされている場合がありますが、可能であればすべてのユーザーが &lt;code&gt;npm@latest&lt;/code&gt; 実行することをお勧めするのはCLIチームのポリシーです。 CLIは寄稿者の小さなチームによって管理されているため、単一の開発ラインにしかリソースがないため、npm独自の長期サポートリリースは、通常、重要なセキュリティと回帰の修正のみを受け取ります。チームは、npmの最新のテスト済みバージョンが、ほとんどの場合、npmの最も機能的で欠陥のないバージョンであると考えています。</target>
        </trans-unit>
        <trans-unit id="c83516bac60af0023d217f8fe138fe8fbd5130ce" translate="yes" xml:space="preserve">
          <source>While it's documented in the README, it may not be obvious that npm needs Git installed to do many of the things that it does. Also, in some cases &amp;ndash; especially on Windows &amp;ndash; you may have Git set up in such a way that it's not accessible via your &lt;code&gt;PATH&lt;/code&gt; so that npm can find it. This check ensures that Git is available.</source>
          <target state="translated">READMEに記載されていますが、npmが実行する多くのことを実行するためにnpmにGitをインストールする必要があることは明らかではありません。また、場合によっては（特にWindowsの場合）、npmがGit を検出できるように、 &lt;code&gt;PATH&lt;/code&gt; 経由でアクセスできないようにGitを設定している場合があります。このチェックにより、Gitが使用可能であることを確認します。</target>
        </trans-unit>
        <trans-unit id="123fdc2a5724786369fd7eb2c2671081180d6c23" translate="yes" xml:space="preserve">
          <source>While relevant CLI commands are covered throughout this user documentation, the CLI includes command line help, its own &lt;a href=&quot;../cli/help&quot;&gt;documentation section, and instant help (man pages)&lt;/a&gt;. When you click a doc about &lt;a href=&quot;../cli/help-search&quot;&gt;any CLI command&lt;/a&gt;, a list of all CLI commands appears in the left-hand side bar. You can also access the list of CLI commands by scrolling to CLI Commands on the &lt;a href=&quot;https://docs.npmjs.com&quot;&gt;docs home page&lt;/a&gt;.</source>
          <target state="translated">関連するCLIコマンドはこのユーザーマニュアル全体でカバーされていますが、CLIにはコマンドラインヘルプ、独自の&lt;a href=&quot;../cli/help&quot;&gt;ドキュメントセクション、およびインスタントヘルプ（マニュアルページ）が含まれてい&lt;/a&gt;ます。&lt;a href=&quot;../cli/help-search&quot;&gt;CLIコマンド&lt;/a&gt;に関するドキュメントをクリックすると、すべてのCLIコマンドのリストが左側のバーに表示されます。&lt;a href=&quot;https://docs.npmjs.com&quot;&gt;docsホームページの&lt;/a&gt; CLIコマンドにスクロールして、CLIコマンドのリストにアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="e06a03b682e491fd06a372931075cde01c473978" translate="yes" xml:space="preserve">
          <source>While relevant CLI commands are covered throughout this user documentation, the CLI includes command line help, its own &lt;a href=&quot;cli/v6&quot;&gt;documentation section, and instant help (man pages)&lt;/a&gt;.</source>
          <target state="translated">関連するCLIコマンドは、このユーザードキュメント全体で説明されていますが、CLIには、コマンドラインヘルプ、独自の&lt;a href=&quot;cli/v6&quot;&gt;ドキュメントセクション、およびインスタントヘルプ（マニュアルページ）が含まれてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="875072eacab189ff3447a1006a9b0e9900f007c0" translate="yes" xml:space="preserve">
          <source>While you are granted a scope by default when you create an organization, you can also use organizations to manage unscoped packages, or packages under a different scope (such as a user scope).</source>
          <target state="translated">組織を作成する際のデフォルトではスコープが付与されていますが、組織を使用してスコープのないパッケージや、別のスコープ (ユーザースコープなど)のパッケージを管理することもできます。</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="82a3a7296b2885f64d6a905466859e2b09f8d198" translate="yes" xml:space="preserve">
          <source>Why isn't npm running the latest version on my Windows machine?</source>
          <target state="translated">Windows マシン上で npm が最新版を実行していないのはなぜですか?</target>
        </trans-unit>
        <trans-unit id="247d868aa0ad6dd2a697e6893adc828ec654977f" translate="yes" xml:space="preserve">
          <source>Will you replicate from my registry into the public one?</source>
          <target state="translated">私のレジストリから公開されているものに複製してくれますか?</target>
        </trans-unit>
        <trans-unit id="62c3074a1d4c7642eda950324164f426f082f089" translate="yes" xml:space="preserve">
          <source>Windows Node version managers</source>
          <target state="translated">Windowsノードのバージョンマネージャ</target>
        </trans-unit>
        <trans-unit id="ddea7f6e09baffcac5d1aa19ddce978b987135d4" translate="yes" xml:space="preserve">
          <source>Windows systems: &lt;code&gt;dir node_modules&lt;/code&gt;</source>
          <target state="translated">Windowsシステム： &lt;code&gt;dir node_modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1ce50b6557d83c39ca0f6f9de34772380b31bc5" translate="yes" xml:space="preserve">
          <source>Windows: If you're on Windows and you have a broken installation, the easiest thing to do is to reinstall node from the official installer (see &lt;a href=&quot;try-the-latest-stable-version-of-npm#upgrading-on-windows&quot;&gt;this note about installing the latest stable version&lt;/a&gt;).</source>
          <target state="translated">Windows：Windowsを使用していて、インストールが壊れている場合、最も簡単な方法は、公式インストーラーからノードを再インストールすることです（&lt;a href=&quot;try-the-latest-stable-version-of-npm#upgrading-on-windows&quot;&gt;最新の安定バージョンのインストールに関するこのメモを&lt;/a&gt;参照してください）。</target>
        </trans-unit>
        <trans-unit id="782c60e49a4134ba9b3c8c13fb3a443092bfbebc" translate="yes" xml:space="preserve">
          <source>With npm private packages, you can use the npm registry to host code that is only visible to you and chosen collaborators, allowing you to manage and use private code alongside public code in your projects.</source>
          <target state="translated">npm プライベートパッケージを使用すると、npm レジストリを使用して、自分と選ばれた共同作業者だけが見ることができるコードをホストすることができ、プライベートコードをプロジェクトでパブリックコードと並べて管理・使用することができます。</target>
        </trans-unit>
        <trans-unit id="e367fb454451688f0b3a63bc25623cc91bd55b98" translate="yes" xml:space="preserve">
          <source>With npm private packages, you can use the npm registry to host your own private code and the npm command line to manage it. This makes it easy to use public packages like Express and Browserify side-by-side with your own private code.</source>
          <target state="translated">npm プライベートパッケージを使うと、npm レジストリを使って独自のプライベートコードをホストし、npm コマンドラインで管理することができます。これにより、Express や Browserify のようなパブリックパッケージを独自のプライベートコードと並べて使うことが簡単になります。</target>
        </trans-unit>
        <trans-unit id="bae1450b70a513f7498d4a63ecf47e341953f26a" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--production&lt;/code&gt; flag (or when the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable is set to &lt;code&gt;production&lt;/code&gt;), npm will not install modules listed in &lt;code&gt;devDependencies&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--production&lt;/code&gt; フラグ（またはとき &lt;code&gt;NODE_ENV&lt;/code&gt; の環境変数に設定する &lt;code&gt;production&lt;/code&gt; ）、NPMはにリストされたモジュールはインストールされません &lt;code&gt;devDependencies&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="42a1deb699fdca6d06a87deddb05c5d7052218b6" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--production&lt;/code&gt; flag (or when the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable is set to &lt;code&gt;production&lt;/code&gt;), npm will not install modules listed in &lt;code&gt;devDependencies&lt;/code&gt;. To install all modules listed in both &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;devDependencies&lt;/code&gt; when &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable is set to &lt;code&gt;production&lt;/code&gt;, you can use &lt;code&gt;--production=false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--production&lt;/code&gt; フラグ（またはとき &lt;code&gt;NODE_ENV&lt;/code&gt; の環境変数に設定する &lt;code&gt;production&lt;/code&gt; ）、NPMはにリストされたモジュールはインストールされません &lt;code&gt;devDependencies&lt;/code&gt; を。両方に記載されているすべてのモジュールをインストールするには &lt;code&gt;dependencies&lt;/code&gt; と &lt;code&gt;devDependencies&lt;/code&gt; とき &lt;code&gt;NODE_ENV&lt;/code&gt; の環境変数に設定する &lt;code&gt;production&lt;/code&gt; 、あなたが使用することができます &lt;code&gt;--production=false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4237a64620d398cc35195bb370c43e95028ab49" translate="yes" xml:space="preserve">
          <source>With the default registry (&lt;code&gt;registry.npmjs.org&lt;/code&gt;), unpublish is only allowed with versions published in the last 72 hours. Similarly, new versions of unpublished packages may not be republished until 72 hours have passed. If you are trying to unpublish a version published longer ago than that, contact &lt;a href=&quot;../cdn-cgi/l/email-protection#fb888e8b8b94898fbb958b969188d5989496&quot;&gt;support@npmjs.com&lt;/a&gt;.</source>
          <target state="translated">デフォルトのレジストリ（ &lt;code&gt;registry.npmjs.org&lt;/code&gt; ）では、過去72時間に公開されたバージョンでのみ非公開が許可されます。同様に、未公開パッケージの新しいバージョンは、72時間経過するまで再公開されない場合があります。それよりも前に公開されたバージョンを非公開にする場合は、&lt;a href=&quot;../cdn-cgi/l/email-protection#fb888e8b8b94898fbb958b969188d5989496&quot;&gt;support@npmjs.comにお問い合わせください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69d199d38aca2a7aac030550a90cd4c2864574eb" translate="yes" xml:space="preserve">
          <source>With these &lt;code&gt;dependencies&lt;/code&gt;:</source>
          <target state="translated">これらの &lt;code&gt;dependencies&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ade772c16901af018c926abf1ae5cd0b86a7e28e" translate="yes" xml:space="preserve">
          <source>With this option, a maintainer can publish a package or change the package settings whether they have two-factor authentication enabled or not. This is the least secure setting.</source>
          <target state="translated">このオプションを使うと、メンテナは二要素認証を有効にしているかどうかに関わらず、 パッケージを公開したり、パッケージの設定を変更したりすることができます。これは最も安全性の低い設定です。</target>
        </trans-unit>
        <trans-unit id="18020fbc2946a91f4c0c9327f0117e6f2393d841" translate="yes" xml:space="preserve">
          <source>With this option, a maintainer must have two-factor authentication enabled for their account, and they must publish interactively. Maintainers will be required to enter a one-time passcode when they perform the publish.</source>
          <target state="translated">このオプションを使用するには、メンテナはアカウントの二要素認証を有効にして、対話的に公開する必要があります。メンテナは公開を実行する際にワンタイムパスコードを入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="e537e5a205d60552f5cbfddf7bcebd5ada526d79" translate="yes" xml:space="preserve">
          <source>With this option, maintainers must have two-factor authentication enabled for their account. If they publish a package interactively, using the &lt;code&gt;npm publish&lt;/code&gt; command, they will be required to enter a one-time passcode when they perform the publish. However, maintainers may also create an [automation token][creating-tokens] and use that to publish. A one-time passcode is &lt;em&gt;not&lt;/em&gt; required when using an automation token, making it useful for continuous integration and continuous deployment workflows.</source>
          <target state="translated">このオプションを使用する場合、メンテナはアカウントで2要素認証を有効にする必要があります。 &lt;code&gt;npm publish&lt;/code&gt; コマンドを使用してパッケージをインタラクティブに公開する場合は、公開を実行するときにワンタイムパスコードを入力する必要があります。ただし、メンテナは[自動化トークン] [作成トークン]を作成し、それを使用して公開することもできます。ワンタイムパスコードがされ&lt;em&gt;ていない&lt;/em&gt;継続的インテグレーションと連続展開ワークフローのために、それは有用なものに、自動化トークンを使用する場合に必要。</target>
        </trans-unit>
        <trans-unit id="80a6283d70d0b8025e4f507b9e250c4f5aa26ffb" translate="yes" xml:space="preserve">
          <source>Without all of these working properly, npm may not work properly. Many issues are often attributable to things that are outside npm's code base, so &lt;code&gt;npm doctor&lt;/code&gt; confirms that the npm installation is in a good state.</source>
          <target state="translated">これらがすべて正しく機能しないと、npmが正しく機能しない可能性があります。多くの問題はnpmのコードベース外にあることが原因であることが多いため、 &lt;code&gt;npm doctor&lt;/code&gt; はnpmインストールが良好な状態であることを確認します。</target>
        </trans-unit>
        <trans-unit id="adf031edf254b937e08fe511a79317be16fe46ae" translate="yes" xml:space="preserve">
          <source>Working with Org Scopes</source>
          <target state="translated">Org スコープでの作業</target>
        </trans-unit>
        <trans-unit id="d52d7ea3edc4d357e50b30f2aa8c8d7c22b94f6c" translate="yes" xml:space="preserve">
          <source>Working with Teams &amp;amp; Orgs</source>
          <target state="translated">チームと組織との連携</target>
        </trans-unit>
        <trans-unit id="5f9f62d2ccd15c6331014af4a62e9e3c91d22725" translate="yes" xml:space="preserve">
          <source>Working with Teams &amp;amp; Orgs.</source>
          <target state="translated">チームと組織での作業。</target>
        </trans-unit>
        <trans-unit id="a81dc7a3ab5212410ebd7d03b3c7f03688fabb37" translate="yes" xml:space="preserve">
          <source>Working with package.json</source>
          <target state="translated">package.json での作業</target>
        </trans-unit>
        <trans-unit id="d3d63039917e4971af0ec37cb2892f9f34b29c1f" translate="yes" xml:space="preserve">
          <source>Working with private packages</source>
          <target state="translated">プライベートパッケージでの作業</target>
        </trans-unit>
        <trans-unit id="756b3e2373b9b02d9e0edab22c7ad2b57c1fb720" translate="yes" xml:space="preserve">
          <source>Working with teams &amp;amp; organizations</source>
          <target state="translated">チームや組織との協力</target>
        </trans-unit>
        <trans-unit id="2dd3974071fbd73cd020e7f5f6832e1fdba71b7e" translate="yes" xml:space="preserve">
          <source>Working with tokens from the CLI</source>
          <target state="translated">CLIからのトークンの操作</target>
        </trans-unit>
        <trans-unit id="a2b964142fb7462a389c6e17447a6798f077c2f6" translate="yes" xml:space="preserve">
          <source>Working with tokens from the web</source>
          <target state="translated">ウェブからのトークンの操作</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="f7508a5d079f3d96561107b5cb554801c04c95b0" translate="yes" xml:space="preserve">
          <source>X-Ranges 1.2.x 1.X 1.2.* *</source>
          <target state="translated">Xレンジ 1.2.x 1.X 1.2.2.</target>
        </trans-unit>
        <trans-unit id="f6ffe97a0b8968ad9128151594a202e381d0dfb0" translate="yes" xml:space="preserve">
          <source>X-Ranges &lt;code&gt;1.2.x&lt;/code&gt;&lt;code&gt;1.X&lt;/code&gt;&lt;code&gt;1.2.*&lt;/code&gt;&lt;code&gt;*&lt;/code&gt;</source>
          <target state="translated">X範囲 &lt;code&gt;1.2.x&lt;/code&gt; &lt;code&gt;1.X&lt;/code&gt; &lt;code&gt;1.2.*&lt;/code&gt; &lt;code&gt;*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f389f62ef8183b95929465eccede2d64911df251" translate="yes" xml:space="preserve">
          <source>Yellow indicates that there's a newer version above your semver requirements (usually new major, or new 0.x minor) so proceed with caution.</source>
          <target state="translated">黄色は、あなたのsemverの要件よりも新しいバージョン(通常は新しいメジャー、または新しい0.xマイナー)があることを示しているので、注意して進めてください。</target>
        </trans-unit>
        <trans-unit id="ee33f374675522a91be7d6eacf2f658b43a6f135" translate="yes" xml:space="preserve">
          <source>Yes!</source>
          <target state="translated">Yes!</target>
        </trans-unit>
        <trans-unit id="2e08130e2fc6caa890f27066f09f687276434586" translate="yes" xml:space="preserve">
          <source>Yes, head over to &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;</source>
          <target state="translated">はい、&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https：//www.npmjs.com/にアクセス&lt;/a&gt;してください</target>
        </trans-unit>
        <trans-unit id="c53c562dab4b33b3e42f3bc4d8e5719439a9c155" translate="yes" xml:space="preserve">
          <source>Yes.</source>
          <target state="translated">Yes.</target>
        </trans-unit>
        <trans-unit id="bc2fb77748324ed6bf59c48889651a9568a7cf10" translate="yes" xml:space="preserve">
          <source>You also use the scoped package name when requiring it.</source>
          <target state="translated">また、必要なときにはスコープ付きのパッケージ名を使用します。</target>
        </trans-unit>
        <trans-unit id="7c5926c222404757eb1aacb5df7d4db0c4463fe3" translate="yes" xml:space="preserve">
          <source>You are a member of the team that owns a scope.</source>
          <target state="translated">スコープを所有しているチームのメンバーです。</target>
        </trans-unit>
        <trans-unit id="624e102c089a158e212b9f11fb590dfcc790312a" translate="yes" xml:space="preserve">
          <source>You are an owner of an unscoped or scoped package.</source>
          <target state="translated">スコープされていないパッケージやスコップされていないパッケージの持ち主なんですね。</target>
        </trans-unit>
        <trans-unit id="0a310060380beafd3d9225db12854538f4eea2e9" translate="yes" xml:space="preserve">
          <source>You are trying to install on a drive that either has no space, or has no permission to write.</source>
          <target state="translated">スペースがないか、書き込み権限がないドライブにインストールしようとしています。</target>
        </trans-unit>
        <trans-unit id="a03005f3e2f0aede3daef55afacb66c005ea3a94" translate="yes" xml:space="preserve">
          <source>You are trying to talk SSL to an unencrypted endpoint. More often than not, this is due to a &lt;a href=&quot;../misc/config#proxy&quot;&gt;proxy&lt;/a&gt;&lt;a href=&quot;../misc/config#https-proxy&quot;&gt;configuration&lt;/a&gt;&lt;a href=&quot;../misc/config#cafile&quot;&gt;error&lt;/a&gt; (see also &lt;a href=&quot;http://jjasonclark.com/how-to-setup-node-behind-web-proxy&quot;&gt;this helpful, if dated, guide&lt;/a&gt;). In this case, you do &lt;strong&gt;not&lt;/strong&gt; want to disable &lt;code&gt;strict-ssl&lt;/code&gt; &amp;ndash; you may need to set up a CA / CA file for use with your proxy, but it's much better to take the time to figure that out than disabling SSL protection.</source>
          <target state="translated">暗号化されていないエンドポイントとSSLで通信しようとしています。多くの場合、これは&lt;a href=&quot;../misc/config#proxy&quot;&gt;プロキシ&lt;/a&gt;&lt;a href=&quot;../misc/config#https-proxy&quot;&gt;設定&lt;/a&gt;&lt;a href=&quot;../misc/config#cafile&quot;&gt;エラーが原因です&lt;/a&gt;（&lt;a href=&quot;http://jjasonclark.com/how-to-setup-node-behind-web-proxy&quot;&gt;日付がある場合は、これ&lt;/a&gt;も参考にしてください）。この場合は、あなたが&lt;strong&gt;いない&lt;/strong&gt;無効にする &lt;code&gt;strict-ssl&lt;/code&gt; -あなたはあなたのプロキシで使用するためのCA / CAファイルを設定する必要があるかもしれませんが、それはSSL保護を無効にするよりも、アウトその数字に時間がかかるためにはるかに良いです。</target>
        </trans-unit>
        <trans-unit id="84de4bf2808093658eadda3cc708e00e20cdddc1" translate="yes" xml:space="preserve">
          <source>You are trying to talk SSL to an unencrypted endpoint. More often than not, this is due to a &lt;a href=&quot;cli/v6/using-npm/config#proxy&quot;&gt;proxy&lt;/a&gt;&lt;a href=&quot;cli/v6/using-npm/config#https-proxy&quot;&gt;configuration&lt;/a&gt;&lt;a href=&quot;cli/v6/using-npm/config#cafile&quot;&gt;error&lt;/a&gt; (see also &lt;a href=&quot;http://jjasonclark.com/how-to-setup-node-behind-web-proxy&quot;&gt;this helpful, if dated, guide&lt;/a&gt;). In this case, you do &lt;strong&gt;not&lt;/strong&gt; want to disable &lt;code&gt;strict-ssl&lt;/code&gt; &amp;ndash; you may need to set up a CA / CA file for use with your proxy, but it's much better to take the time to figure that out than disabling SSL protection.</source>
          <target state="translated">暗号化されていないエンドポイントとSSLを通信しようとしています。多くの場合、これは&lt;a href=&quot;cli/v6/using-npm/config#proxy&quot;&gt;プロキシ&lt;/a&gt;&lt;a href=&quot;cli/v6/using-npm/config#https-proxy&quot;&gt;構成&lt;/a&gt;&lt;a href=&quot;cli/v6/using-npm/config#cafile&quot;&gt;エラーが原因です&lt;/a&gt;（&lt;a href=&quot;http://jjasonclark.com/how-to-setup-node-behind-web-proxy&quot;&gt;日付が記載されている場合は、この役立つガイド&lt;/a&gt;も参照してください）。この場合は、あなたが&lt;strong&gt;いない&lt;/strong&gt;無効にする &lt;code&gt;strict-ssl&lt;/code&gt; -あなたはあなたのプロキシで使用するためのCA / CAファイルを設定する必要があるかもしれませんが、それはSSL保護を無効にするよりも、アウトその数字に時間がかかるためにはるかに良いです。</target>
        </trans-unit>
        <trans-unit id="735a3a6d1e8a6ba66ea259821054db9fe0155051" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;#creating-access-tokens&quot;&gt;create&lt;/a&gt; and &lt;a href=&quot;#viewing-access-tokens&quot;&gt;view&lt;/a&gt; access tokens from the website and command line interface (CLI).</source>
          <target state="translated">あなたはできます&lt;a href=&quot;#creating-access-tokens&quot;&gt;作成&lt;/a&gt;し、&lt;a href=&quot;#viewing-access-tokens&quot;&gt;ビュー&lt;/a&gt;のウェブサイトおよびコマンドラインインターフェイス（CLI）からアクセストークンを。</target>
        </trans-unit>
        <trans-unit id="a43d7ee0819bd9ad2a8579804025d827ffde85d9" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;cli/v6/install&quot;&gt;install&lt;/a&gt; a package locally if you want to depend on the package from your own module, using something like Node.js &lt;code&gt;require&lt;/code&gt;. This is &lt;code&gt;npm install&lt;/code&gt;'s default behavior.</source>
          <target state="translated">Node.js &lt;code&gt;require&lt;/code&gt; のようなものを使用して、独自のモジュールのパッケージに依存する場合は、パッケージをローカルに&lt;a href=&quot;cli/v6/install&quot;&gt;インストール&lt;/a&gt;できます。これは &lt;code&gt;npm install&lt;/code&gt; のデフォルトの動作です。</target>
        </trans-unit>
        <trans-unit id="91added2a7669ee7d90124d2b82492aa978bc0c1" translate="yes" xml:space="preserve">
          <source>You can add a &lt;code&gt;package.json&lt;/code&gt; file to your package to make it easy for others to manage and install. Packages published to the registry must contain a &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルをパッケージに追加して、他のユーザーが簡単に管理およびインストールできるようにすることができます。レジストリに公開されるパッケージには、 &lt;code&gt;package.json&lt;/code&gt; ファイルが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="81b3a7e6a82ae62a1727365c245e7e2151d1b6d0" translate="yes" xml:space="preserve">
          <source>You can add dependencies to a &lt;code&gt;package.json&lt;/code&gt; file from the command line or by manually editing the &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">コマンドラインから、または &lt;code&gt;package.json&lt;/code&gt; ファイルを手動で編集することにより、 &lt;code&gt;package.json&lt;/code&gt; ファイルに依存関係を追加できます。</target>
        </trans-unit>
        <trans-unit id="a6f8ab58abb53bd9322e4c69f687e5f46a22c4b4" translate="yes" xml:space="preserve">
          <source>You can also add collaborators on the command line:</source>
          <target state="translated">コマンドラインで協力者を追加することもできます。</target>
        </trans-unit>
        <trans-unit id="24966ae8c986b7663665effdaadf9a5fd1c2c2f9" translate="yes" xml:space="preserve">
          <source>You can also associate a scope with a registry using &lt;code&gt;npm config&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;npm config&lt;/code&gt; を使用して、スコープをレジストリに関連付けることもできます。</target>
        </trans-unit>
        <trans-unit id="c93031e715e64daabb13fd1eee5b78024e440e12" translate="yes" xml:space="preserve">
          <source>You can also blacklist instead of whitelist operating systems, just prepend the blacklisted os with a '!':</source>
          <target state="translated">ホワイトリストの代わりにブラックリストにすることもできます。</target>
        </trans-unit>
        <trans-unit id="b567557428cab15d3c259c447808aaaaa6463a57" translate="yes" xml:space="preserve">
          <source>You can also customize the questions by using the &lt;code&gt;prompt&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;prompt&lt;/code&gt; 機能を使用して質問をカスタマイズすることもできます。</target>
        </trans-unit>
        <trans-unit id="4ec8614cf67f0bb214d472829ddef60bb56c47aa" translate="yes" xml:space="preserve">
          <source>You can also have npm automatically fix the vulnerabilities by running &lt;code&gt;npm audit fix&lt;/code&gt;. Note that some vulnerabilities cannot be fixed automatically and will require manual intervention or review. Also note that since &lt;code&gt;npm audit fix&lt;/code&gt; runs a full-fledged &lt;code&gt;npm install&lt;/code&gt; under the hood, all configs that apply to the installer will also apply to &lt;code&gt;npm install&lt;/code&gt; -- so things like &lt;code&gt;npm audit fix --package-lock-only&lt;/code&gt; will work as expected.</source>
          <target state="translated">&lt;code&gt;npm audit fix&lt;/code&gt; を実行して、npmに脆弱性を自動的に修正させることもできます。一部の脆弱性は自動的に修正できず、手動による介入または確認が必要になることに注意してください。また、 &lt;code&gt;npm audit fix&lt;/code&gt; はフードの下で本格的な &lt;code&gt;npm install&lt;/code&gt; するため、インストーラーに適用されるすべての構成は &lt;code&gt;npm install&lt;/code&gt; も適用されるため、 &lt;code&gt;npm audit fix --package-lock-only&lt;/code&gt; は期待どおりに機能します。</target>
        </trans-unit>
        <trans-unit id="011ffe6b9a219a8cc3fe89952f52df841f320820" translate="yes" xml:space="preserve">
          <source>You can also manage package access via the command line:</source>
          <target state="translated">また、コマンドラインからパッケージへのアクセスを管理することもできます。</target>
        </trans-unit>
        <trans-unit id="a833c35c0827b3d65b42cf7f0c583fb4cc946eda" translate="yes" xml:space="preserve">
          <source>You can also map different scopes to different npm registries. For example, to use the scope &lt;code&gt;@company-scope&lt;/code&gt; from your npm Enterprise registry, while continuing to install public packages from the public npm registry, run the following command, replacing &lt;code&gt;@company-scope&lt;/code&gt; with the scope, and &lt;code&gt;company-registry&lt;/code&gt; with the name of your company's npm Enterprise registry:</source>
          <target state="translated">さまざまなスコープをさまざまなnpmレジストリにマップすることもできます。たとえば、npm Enterpriseレジストリからスコープ &lt;code&gt;@company-scope&lt;/code&gt; を使用し、パブリックnpmレジストリからパブリックパッケージをインストールし続けるには、次のコマンドを実行し、 &lt;code&gt;@company-scope&lt;/code&gt; をスコープに置き換え、 &lt;code&gt;company-registry&lt;/code&gt; を名前に置き換えます。あなたの会社のnpmEnterpriseレジストリの：</target>
        </trans-unit>
        <trans-unit id="cfb116b145824c6482735181edc2089a4229c8aa" translate="yes" xml:space="preserve">
          <source>You can also provide a &lt;code&gt;.npmignore&lt;/code&gt; file in the root of your package or in subdirectories, which will keep files from being included. At the root of your package it will not override the &quot;files&quot; field, but in subdirectories it will. The &lt;code&gt;.npmignore&lt;/code&gt; file works just like a &lt;code&gt;.gitignore&lt;/code&gt;. If there is a &lt;code&gt;.gitignore&lt;/code&gt; file, and &lt;code&gt;.npmignore&lt;/code&gt; is missing, &lt;code&gt;.gitignore&lt;/code&gt;'s contents will be used instead.</source>
          <target state="translated">パッケージのルートまたはサブディレクトリに &lt;code&gt;.npmignore&lt;/code&gt; ファイルを提供することもできます。これにより、ファイルが含まれなくなります。パッケージのルートでは、「files」フィールドはオーバーライドされませんが、サブディレクトリではオーバーライドされます。 &lt;code&gt;.npmignore&lt;/code&gt; のファイルは、同じように動作します &lt;code&gt;.gitignore&lt;/code&gt; 。 &lt;code&gt;.gitignore&lt;/code&gt; ファイルがあり、 &lt;code&gt;.npmignore&lt;/code&gt; がない場合は、代わりに &lt;code&gt;.gitignore&lt;/code&gt; のコンテンツが使用されます。</target>
        </trans-unit>
        <trans-unit id="29bc8650e57186e54a3221599594fa95216de0a5" translate="yes" xml:space="preserve">
          <source>You can also set several config options for the init command. Some useful ones:</source>
          <target state="translated">init コマンドにはいくつかの設定オプションを設定することもできます。便利なものをいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="2d2238ce6c115615a078efe3f422f45f42c86e49" translate="yes" xml:space="preserve">
          <source>You can also use the &quot;engines&quot; field to specify which versions of npm are capable of properly installing your program. For example:</source>
          <target state="translated">また、&quot;engine&quot; フィールドを使って、プログラムを適切にインストールできる npm のバージョンを指定することもできます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="f83b983f270baa1aa76b5f9d7d49ec7d0264820f" translate="yes" xml:space="preserve">
          <source>You can associate a scope with a registry at login, e.g.</source>
          <target state="translated">ログイン時にスコープをレジストリに関連付けることができます。</target>
        </trans-unit>
        <trans-unit id="8969e0616b7cb8650f9e978de3c799bdf68bbb73" translate="yes" xml:space="preserve">
          <source>You can change the visibility of a scoped package from the website or command line.</source>
          <target state="translated">スコープされたパッケージの可視性をウェブサイトやコマンドラインから変更することができます。</target>
        </trans-unit>
        <trans-unit id="03c9fe1088c173560c00dde428e079e5b3c0e5b0" translate="yes" xml:space="preserve">
          <source>You can check &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;the full list of SPDX license IDs&lt;/a&gt;. Ideally you should pick one that is &lt;a href=&quot;https://opensource.org/licenses/alphabetical&quot;&gt;OSI&lt;/a&gt; approved.</source>
          <target state="translated">&lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDXライセンスIDの完全なリストを&lt;/a&gt;確認できます。理想的には、&lt;a href=&quot;https://opensource.org/licenses/alphabetical&quot;&gt;OSIが&lt;/a&gt;承認したものを選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="e7df37d2a77acc3088a99b5cc7288dcde93b3899" translate="yes" xml:space="preserve">
          <source>You can configure npm to use any compatible registry you like, and even run your own registry. Use of someone else's registry may be governed by their terms of use.</source>
          <target state="translated">互換性のある任意のレジストリを使用するように npm を設定することができ、独自のレジストリを実行することもできます。他人のレジストリを使用する場合は、そのレジストリの利用規約に従うことになります。</target>
        </trans-unit>
        <trans-unit id="5e5b3b566fa9be72f4d7de4fd259f6bf2cceeef5" translate="yes" xml:space="preserve">
          <source>You can configure your npm client to publish to and install from your private npm Enterprise registry by:</source>
          <target state="translated">npmクライアントがプライベートのnpm Enterpriseレジストリにパブリッシュしてインストールするように設定するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="5d3de0e13681eca67fde3b46c80adb0f24707947" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;package.json&lt;/code&gt; file by running a CLI questionnaire or creating a default &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルを作成するには、CLIアンケートを実行するか、デフォルトの &lt;code&gt;package.json&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="5a0797ec9b60fc7456176f0b81a44b8f04dbeaa5" translate="yes" xml:space="preserve">
          <source>You can create tokens with read-only permissions or read and publish permissions with the CLI; you cannot currently create automation tokens.</source>
          <target state="translated">読み取り専用のパーミッションを持つトークンを作成したり、CLIで読み取りと公開のパーミッションを持つトークンを作成することができますが、現在はオートメーション・トークンを作成することはできません。</target>
        </trans-unit>
        <trans-unit id="031972e87bb375a7a83ea3210258bb6e3d66251f" translate="yes" xml:space="preserve">
          <source>You can delete (revoke) a token, regardless of when it was created. This allows you to gain control of access you may wish to take back.</source>
          <target state="translated">トークンは、いつ作成されたかにかかわらず、削除(取り消し)することができます。これにより、取り戻したいアクセスを制御することができます。</target>
        </trans-unit>
        <trans-unit id="2040222b7c1c7940c31e327f7a1cc66fdf443311" translate="yes" xml:space="preserve">
          <source>You can depend on &lt;code&gt;coffee-script&lt;/code&gt; as a &lt;code&gt;devDependency&lt;/code&gt;, and thus your users don't need to have it installed.</source>
          <target state="translated">&lt;code&gt;devDependency&lt;/code&gt; として &lt;code&gt;coffee-script&lt;/code&gt; に依存できるため、ユーザーはそれをインストールする必要はありません。</target>
        </trans-unit>
        <trans-unit id="a593cfddc15b1f1ac244e724428cc9e13fce0d98" translate="yes" xml:space="preserve">
          <source>You can do this by running:</source>
          <target state="translated">これは実行することでできます。</target>
        </trans-unit>
        <trans-unit id="ce38a396cbcc8247dab82dc7fed865542f5ed8e1" translate="yes" xml:space="preserve">
          <source>You can enable and disable two-factor authentication from the command line, or from the web, using the steps described &lt;a href=&quot;using-two-factor-authentication&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;using-two-factor-authentication&quot;&gt;ここで&lt;/a&gt;説明する手順を使用して、コマンドラインまたはWebから2要素認証を有効または無効にできます。</target>
        </trans-unit>
        <trans-unit id="615be065cb1afc7b047f0476541cd40f5fee77f1" translate="yes" xml:space="preserve">
          <source>You can enable two-factor authentication (2FA) on your npm user account to protect against unauthorized access to your account and packages.</source>
          <target state="translated">npm ユーザアカウントで二要素認証 (2FA)を有効にすることで、アカウントやパッケージへの不正アクセスから保護することができます。</target>
        </trans-unit>
        <trans-unit id="2434d5daf223301c26276fbb95072c0049539483" translate="yes" xml:space="preserve">
          <source>You can end patterns with a forward slash &lt;code&gt;/&lt;/code&gt; to specify a directory.</source>
          <target state="translated">パターンをスラッシュ &lt;code&gt;/&lt;/code&gt; で終了して、ディレクトリを指定できます。</target>
        </trans-unit>
        <trans-unit id="56ef262924a3d7163fe7a45e4343999776c05878" translate="yes" xml:space="preserve">
          <source>You can find more in depth information about scopes in the &lt;a href=&quot;../misc/scope#publishing-public-scoped-packages-to-the-public-npm-registry&quot;&gt;CLI documentation&lt;/a&gt;.</source>
          <target state="translated">スコープの詳細については、&lt;a href=&quot;../misc/scope#publishing-public-scoped-packages-to-the-public-npm-registry&quot;&gt;CLIのドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="6392ce4a9c0d4c18267e68c6b7aca02a8bc659b1" translate="yes" xml:space="preserve">
          <source>You can find the &lt;code&gt;npm-debug.log&lt;/code&gt; file in your &lt;code&gt;.npm&lt;/code&gt; directory. To find your &lt;code&gt;.npm&lt;/code&gt; directory, use &lt;code&gt;npm config get cache&lt;/code&gt;.</source>
          <target state="translated">あなたは見つけることができます &lt;code&gt;npm-debug.log&lt;/code&gt; あなたの中のファイル &lt;code&gt;.npm&lt;/code&gt; ディレクトリを。 &lt;code&gt;.npm&lt;/code&gt; ディレクトリを見つけるには、 &lt;code&gt;npm config get cache&lt;/code&gt; getcacheを使用します。</target>
        </trans-unit>
        <trans-unit id="8952d71f0beec5101994b281de396c0b0fa3e0ad" translate="yes" xml:space="preserve">
          <source>You can give publish a url to a tarball, or a filename of a tarball, or a path to a folder.</source>
          <target state="translated">公開には tarball への url、tarball のファイル名、フォルダへのパスを指定することができます。</target>
        </trans-unit>
        <trans-unit id="53bde596d8f6a4f5fbe30d3b8127984e744d659b" translate="yes" xml:space="preserve">
          <source>You can manage settings for your user account profile from the web or command line.</source>
          <target state="translated">ユーザーアカウントプロファイルの設定は、Webまたはコマンドラインから管理できます。</target>
        </trans-unit>
        <trans-unit id="6f379628399ef8737346ab6fe26679bc811366a0" translate="yes" xml:space="preserve">
          <source>You can manually edit your &lt;code&gt;package.json&lt;/code&gt;. You'll need to create an attribute in the package object called &lt;code&gt;dependencies&lt;/code&gt; that points to an object. This object will hold attributes that name the packages you'd like to use. It will point to a &lt;a href=&quot;semantic-versioning&quot;&gt;semver&lt;/a&gt; expression that specifies the versions of that project that are compatible with your project.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; を手動で編集できます。オブジェクトを指す &lt;code&gt;dependencies&lt;/code&gt; と呼ばれる属性をパッケージオブジェクトに作成する必要があります。このオブジェクトは、使用するパッケージに名前を付ける属性を保持します。これは、プロジェクトと互換性のあるそのプロジェクトのバージョンを指定する&lt;a href=&quot;semantic-versioning&quot;&gt;semver&lt;/a&gt;式を指します。</target>
        </trans-unit>
        <trans-unit id="9b598daf4bb4ec75b881294481aad393e491e014" translate="yes" xml:space="preserve">
          <source>You can negate a pattern by starting it with an exclamation point &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">感嘆符で始まるパターンを無効にすることができます &lt;code&gt;!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="663b003fcccc5ddcc07d5494991d985412ec781a" translate="yes" xml:space="preserve">
          <source>You can publish any directory that has a &lt;code&gt;package.json&lt;/code&gt; file. This chapter explains how to publish a package for the first time, and how to update it later.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; ファイルがある任意のディレクトリを公開できます。この章では、パッケージを初めて公開する方法と、後で更新する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="ab3e6891540059e86fd00ec83211f7db2e576660" translate="yes" xml:space="preserve">
          <source>You can set a single package to pass &lt;code&gt;--access public &lt;/code&gt; to every &lt;code&gt;npm publish&lt;/code&gt; command that you issue for that package.</source>
          <target state="translated">単一のパッケージを設定して、そのパッケージに対して &lt;code&gt;npm publish&lt;/code&gt; するすべての &lt;code&gt;--access public &lt;/code&gt; コマンドに--accesspublicを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="6911e4bfc19afddf8daf15d686fd5c3f486f266b" translate="yes" xml:space="preserve">
          <source>You can set all packages to pass &lt;code&gt;--access public &lt;/code&gt; to every &lt;code&gt;npm publish&lt;/code&gt; command that you issue for that package.</source>
          <target state="translated">すべてのパッケージを設定して、そのパッケージに対して &lt;code&gt;npm publish&lt;/code&gt; するすべての &lt;code&gt;--access public &lt;/code&gt; コマンドに--accesspublicを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a2edfadc44641d59144fa21a102c085a36af11bf" translate="yes" xml:space="preserve">
          <source>You can set default config options for the init command. For example, to set the default author email, author name, and license, on the command line, run the following commands:</source>
          <target state="translated">initコマンドにデフォルトの設定オプションを設定することができます。例えば、コマンドラインでデフォルトの著者メールアドレス、著者名、ライセンスを設定するには、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="0c0888aecb821fc0d1e1ff1b7b67fa2dbb747c3a" translate="yes" xml:space="preserve">
          <source>You can set or modify the following profile properties from the command line:</source>
          <target state="translated">コマンドラインから以下のプロファイルプロパティを設定または変更することができます。</target>
        </trans-unit>
        <trans-unit id="093897589d425b1d1cc73ecd3b8a0f05dec00db8" translate="yes" xml:space="preserve">
          <source>You can specify an object containing an URL that provides up-to-date information about ways to help fund development of your package, or a string URL, or an array of these:</source>
          <target state="translated">パッケージの開発に資金を提供する方法についての最新情報を提供する URL を含むオブジェクトを指定したり、 文字列 URL、またはこれらの配列を指定することができます。</target>
        </trans-unit>
        <trans-unit id="dea27fbf679eac502041b85cd2a526d9a38bc3a6" translate="yes" xml:space="preserve">
          <source>You can specify either one or both values. If you want to provide only a url, you can specify the value for &quot;bugs&quot; as a simple string instead of an object.</source>
          <target state="translated">値はどちらか一方を指定しても、両方を指定しても構いません。URL のみを指定したい場合は、&quot;bugs&quot; の値をオブジェクトではなく単純な文字列で指定することができます。</target>
        </trans-unit>
        <trans-unit id="1873fbff3c7ab248b692d0162759a6e4148854a4" translate="yes" xml:space="preserve">
          <source>You can specify the version of node that your stuff works on:</source>
          <target state="translated">あなたのものが動作するノードのバージョンを指定することができます。</target>
        </trans-unit>
        <trans-unit id="48692b1ba55f39711ee043063d53679d5270a2f6" translate="yes" xml:space="preserve">
          <source>You can specify which operating systems your module will run on:</source>
          <target state="translated">モジュールが動作するオペレーティングシステムを指定することができます。</target>
        </trans-unit>
        <trans-unit id="e4ed13f337d85ae3f83b7fd15561ce1f3686661b" translate="yes" xml:space="preserve">
          <source>You can specify which update types your package can accept from dependencies in your package's &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">パッケージの &lt;code&gt;package.json&lt;/code&gt; ファイルの依存関係からパッケージが受け入れることができる更新タイプを指定できます。</target>
        </trans-unit>
        <trans-unit id="bfb39915aec79c3b52dce4b25baa6206271ed85e" translate="yes" xml:space="preserve">
          <source>You can then publish the module with &lt;code&gt;npm publish&lt;/code&gt; or &lt;code&gt;npm publish --access restricted&lt;/code&gt;, and it will be present in the npm registry, with restricted access. You can then change the access permissions, if desired, with &lt;code&gt;npm access&lt;/code&gt; or on the npmjs.com website.</source>
          <target state="translated">次に、 &lt;code&gt;npm publish&lt;/code&gt; または &lt;code&gt;npm publish --access restricted&lt;/code&gt; を使用してモジュールを公開できます。これは、アクセスが制限されたnpmレジストリに存在します。その後、必要に応じて、 &lt;code&gt;npm access&lt;/code&gt; またはnpmjs.com Webサイトでアクセス許可を変更できます。</target>
        </trans-unit>
        <trans-unit id="15f198a5301bebb99b668b033984ed579787dbf2" translate="yes" xml:space="preserve">
          <source>You can update the credit card used to pay for your paid user account plan. Updating your credit card will not change your billing cycle date, and the new credit card will be charged on the next billing cycle.</source>
          <target state="translated">有料ユーザーアカウントプランの支払いに使用したクレジットカードを更新することができます。クレジットカードを更新しても請求サイクルの日付は変更されず、新しいクレジットカードは次の請求サイクルで請求されます。</target>
        </trans-unit>
        <trans-unit id="3aec28153e5fea7d843d77d7b45739cfaffaa035" translate="yes" xml:space="preserve">
          <source>You can update the email address used for receipts, and add extra information to the receipt for your paid user account plan, such as your business name, VAT identification number, or address of record. Updated billing information will appear on all receipts immediately.</source>
          <target state="translated">領収書に使用するメールアドレスを更新したり、有料ユーザーアカウントプランの領収書にビジネス名、VAT識別番号、記録住所などの追加情報を追加したりすることができます。更新された請求情報は、すぐにすべての領収書に表示されます。</target>
        </trans-unit>
        <trans-unit id="0accf7902f3aed2234c6a7e4c3b30bf9fd452e65" translate="yes" xml:space="preserve">
          <source>You can upgrade to the latest version of npm using:</source>
          <target state="translated">を使って最新版のnpmにアップグレードすることができます。</target>
        </trans-unit>
        <trans-unit id="db3115745ec3d806be8fdff41eb1cb8372a914c6" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;npm init&lt;/code&gt; in the root of your package in order to get you started with a pretty basic package.json file. See &lt;a href=&quot;../commands/npm-init&quot;&gt;&lt;code&gt;npm init&lt;/code&gt;&lt;/a&gt; for more info.</source>
          <target state="translated">かなり基本的なpackage.jsonファイルを使い始めるために、パッケージのルートで &lt;code&gt;npm init&lt;/code&gt; を使用できます。詳細については、&lt;a href=&quot;../commands/npm-init&quot;&gt; &lt;code&gt;npm init&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b3b0844ba23c82acb1104da98e5e8f57068328ff" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;npm init&lt;/code&gt; in the root of your package in order to get you started with a pretty basic package.json file. See &lt;code&gt;&lt;a href=&quot;../cli/init&quot;&gt;npm-init&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">パッケージのルートで &lt;code&gt;npm init&lt;/code&gt; を使用して、かなり基本的なpackage.jsonファイルから始めることができます。詳細については、 &lt;code&gt;&lt;a href=&quot;../cli/init&quot;&gt;npm-init&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="00deca609b6977ed6f5020e533390d0cef1cf3b8" translate="yes" xml:space="preserve">
          <source>You can use access tokens to test private npm packages with continuous integration (CI) systems, or deploy them using continuous deployment (CD) systems.</source>
          <target state="translated">アクセストークンを使って、継続的インテグレーション (CI)システムでプライベート npm パッケージをテストしたり、継続的デプロイ (CD)システムを使ってデプロイしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="aae6bf55df181211c611e428f3f6e6a554f1f001" translate="yes" xml:space="preserve">
          <source>You can use scopes to:</source>
          <target state="translated">スコープを使って</target>
        </trans-unit>
        <trans-unit id="b45454137a65667f028580ad512b1aaf7fce0439" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--if-present&lt;/code&gt; flag to avoid exiting with a non-zero exit code when the script is undefined. This lets you run potentially undefined scripts without breaking the execution chain.</source>
          <target state="translated">&lt;code&gt;--if-present&lt;/code&gt; フラグを使用すると、スクリプトが未定義の場合にゼロ以外の終了コードで終了することを回避できます。これにより、実行チェーンを中断することなく、潜在的に未定義のスクリプトを実行できます。</target>
        </trans-unit>
        <trans-unit id="0960bab213c4b52dac578f9fa732e9bdf0a50023" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--silent&lt;/code&gt; flag to prevent showing &lt;code&gt;npm ERR!&lt;/code&gt; output on error.</source>
          <target state="translated">&lt;code&gt;--silent&lt;/code&gt; フラグを使用して、 &lt;code&gt;npm ERR!&lt;/code&gt; を表示しないようにすることができます。エラー時に出力します。</target>
        </trans-unit>
        <trans-unit id="72dc2cba6021f9700570abe1463bb391586f3194" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;npm org&lt;/code&gt; commands to manage and view users of an organization. It supports adding and removing users, changing their roles, listing them, and finding specific ones and their roles.</source>
          <target state="translated">&lt;code&gt;npm org&lt;/code&gt; コマンドを使用して、組織のユーザーを管理および表示できます。ユーザーの追加と削除、役割の変更、ユーザーの一覧表示、特定のユーザーとその役割の検索をサポートします。</target>
        </trans-unit>
        <trans-unit id="a6082c811887a937bef482ad23a915a5dab23bf8" translate="yes" xml:space="preserve">
          <source>You can use the npm search bar to find packages to use in your projects. npm search uses npms and the npms analyzer; for more information on both, see &lt;a href=&quot;https://npms.io/about&quot;&gt;https://npms.io/about&lt;/a&gt;.</source>
          <target state="translated">npm検索バーを使用して、プロジェクトで使用するパッケージを見つけることができます。npm検索では、npmsとnpmsアナライザーを使用します。両方の詳細については、&lt;a href=&quot;https://npms.io/about&quot;&gt;https：//npms.io/aboutを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d72e6a6e5c43e23169e08412868917399771f2ab" translate="yes" xml:space="preserve">
          <source>You can use the package PGP signature and our public PGP key to verify that the same entity who published the key (npm) also signed the package you downloaded from the npm public registry. For more information, see &quot;&lt;a href=&quot;verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry&quot;&gt;Verifying the PGP signature of a package from the npm public registry&lt;/a&gt;&quot;.</source>
          <target state="translated">パッケージのPGP署名と公開PGP鍵を使用して、鍵（npm）を公開した同じエンティティがnpm公開レジストリからダウンロードしたパッケージにも署名したことを確認できます。詳細について&lt;a href=&quot;verifying-the-pgp-signature-for-a-package-from-the-npm-public-registry&quot;&gt;は、&lt;/a&gt;「npmパブリックレジストリからのパッケージのPGP署名の確認」を参照してください。</target>
        </trans-unit>
        <trans-unit id="86f8ea7827a1b526f83a620b96382fc3bb6240a3" translate="yes" xml:space="preserve">
          <source>You can view child fields by separating them with a period. To view the git repository URL for the latest version of npm, you could do this:</source>
          <target state="translated">ピリオドで区切ることで子フィールドを表示することができます。npmの最新バージョンのgitリポジトリのURLを表示するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="5064198b6366695cf796ad9043bd7885ccfd77a1" translate="yes" xml:space="preserve">
          <source>You can view, download, and email receipts for the complete billing history of your npm user account.</source>
          <target state="translated">npm ユーザーアカウントの完全な課金履歴の領収書を表示、ダウンロード、メールで送信することができます。</target>
        </trans-unit>
        <trans-unit id="9db4c2062e581fe8cf51e9f49a6301e038d9b67e" translate="yes" xml:space="preserve">
          <source>You can work with tokens from the web or the CLI, whichever is easiest. What you do in each environment will be reflected in the other environment.</source>
          <target state="translated">トークンを使って作業するには、ウェブまたはCLIのどちらか簡単な方から行うことができます。それぞれの環境で行ったことは、他の環境にも反映されます。</target>
        </trans-unit>
        <trans-unit id="06467d6dbf1ca259d4ab970eb5061fd28672a179" translate="yes" xml:space="preserve">
          <source>You cannot install private npm packages in a Docker container using only runtime variables. Consider the following Dockerfile:</source>
          <target state="translated">ランタイム変数だけを使って、プライベートなnpmパッケージをDockerコンテナにインストールすることはできません。次のようなDockerfileを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="3b7e07bed9ad5a793c7cb117e6343956cbd17349" translate="yes" xml:space="preserve">
          <source>You could also try these workarounds: &lt;code&gt;npm config set ca &quot;&quot;&lt;/code&gt; or &lt;code&gt;npm config set strict-ssl false&lt;/code&gt;</source>
          <target state="translated">次の回避策を試すこともできます： &lt;code&gt;npm config set ca &quot;&quot;&lt;/code&gt; または &lt;code&gt;npm config set strict-ssl false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9616be144a581acbe589af5925f861c3117e96b3" translate="yes" xml:space="preserve">
          <source>You don't need to include minifiers in your package, reducing the size for your users.</source>
          <target state="translated">ミニファイヤーをパッケージに入れなくても、ユーザーのためにサイズを小さくすることができます。</target>
        </trans-unit>
        <trans-unit id="9b70e1f1db5b3eefefc682c9daaecb2c5d112281" translate="yes" xml:space="preserve">
          <source>You don't need to rely on your users having &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt; or other system tools on the target machines.</source>
          <target state="translated">ユーザーが &lt;code&gt;curl&lt;/code&gt; 、 &lt;code&gt;wget&lt;/code&gt; 、またはその他のシステムツールをターゲットマシンに持っていることに依存する必要はありません。</target>
        </trans-unit>
        <trans-unit id="9f904f6e4520ce4d22c594d0867cadaa5be0d456" translate="yes" xml:space="preserve">
          <source>You have an outdated npm. &lt;a href=&quot;try-the-latest-stable-version-of-npm&quot;&gt;Please update to the latest stable npm&lt;/a&gt;.</source>
          <target state="translated">古いnpmがあります。&lt;a href=&quot;try-the-latest-stable-version-of-npm&quot;&gt;最新の安定したnpmに更新してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ebde5b4aa1111d3ffac3bd98dadcc42914ebb9a" translate="yes" xml:space="preserve">
          <source>You have been given read-write privileges for a package, either as a member of a team or directly as an owner.</source>
          <target state="translated">あなたは、チームのメンバーとして、または直接オーナーとして、パッケージの読み書き権限を与えられています。</target>
        </trans-unit>
        <trans-unit id="4c51d0158cb2ca086019231f7bb952aeb939299a" translate="yes" xml:space="preserve">
          <source>You have the option to use a different email address than the one that received the invitation to join the organization.</source>
          <target state="translated">組織に参加するための招待状を受け取ったものとは別のメールアドレスを使用するオプションがあります。</target>
        </trans-unit>
        <trans-unit id="8e2d222fa0297a6882f2244938ec3b7f8d618e61" translate="yes" xml:space="preserve">
          <source>You may also choose to allow publishing with either two-factor authentication &lt;em&gt;or&lt;/em&gt; with [automation tokens][creating-tokens]. This lets you configure automation tokens in a CI/CD workflow, but requires two-factor authentication from interactive publishes.</source>
          <target state="translated">また、2要素認証&lt;em&gt;または&lt;/em&gt;[自動化トークン] [作成トークン]のいずれかを使用して公開を許可することもできます。これにより、CI / CDワークフローで自動化トークンを構成できますが、インタラクティブな公開からの2要素認証が必要です。</target>
        </trans-unit>
        <trans-unit id="a6cb1e72fac6d3983b9eeb5e667f4501153d1e05" translate="yes" xml:space="preserve">
          <source>You may also shortcut the two steps in one. For example, to do the above use-case in a shorter way:</source>
          <target state="translated">また、2つのステップを1つにまとめてショートカットすることもできます。例えば、上記のユースケースをショートカットで行う場合。</target>
        </trans-unit>
        <trans-unit id="2b4395288fa9cee522a748d9d918d27eb6e20800" translate="yes" xml:space="preserve">
          <source>You may also use numeric indices in square braces to specifically select an item in an array field. To just get the email address of the first contributor in the list, you can do this:</source>
          <target state="translated">また、中括弧内の数値インデックスを使用して、配列フィールド内の項目を具体的に選択することもできます。リストの最初の投稿者のメールアドレスを取得するだけなら、このようにすることができます。</target>
        </trans-unit>
        <trans-unit id="41f7cfb41bdf26a8b699ec15f7af1c8999e5acec" translate="yes" xml:space="preserve">
          <source>You may also want to see your friend's favorite packages, in this case you will most certainly enjoy this command.</source>
          <target state="translated">また、あなたの友人のお気に入りのパッケージを見たいと思うかもしれませんが、この場合、あなたは最も確かにこのコマンドを楽しむことができます。</target>
        </trans-unit>
        <trans-unit id="26d79bf4f2fc6ac704011d98b7e5d519b0c97f0d" translate="yes" xml:space="preserve">
          <source>You may combine multiple arguments, and even multiple types of arguments. For example:</source>
          <target state="translated">複数の引数を組み合わせてもよいし、複数の種類の引数を組み合わせてもよい。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="046c77fa5d96a214e56333ab285302277916d245" translate="yes" xml:space="preserve">
          <source>You may of course also pipe the output of &lt;code&gt;npm completion&lt;/code&gt; to a file such as &lt;code&gt;/usr/local/etc/bash_completion.d/npm&lt;/code&gt; or &lt;code&gt;/etc/bash_completion.d/npm&lt;/code&gt; if you have a system that will read that file for you.</source>
          <target state="translated">あなたは、パイプの出力も当然のかもしれ &lt;code&gt;npm completion&lt;/code&gt; のようなファイルへの &lt;code&gt;/usr/local/etc/bash_completion.d/npm&lt;/code&gt; か &lt;code&gt;/etc/bash_completion.d/npm&lt;/code&gt; あなたがあなたのためにそのファイルを読み込みますシステムを持っている場合。</target>
        </trans-unit>
        <trans-unit id="9a81aaf2e3266466852ccf920d98e4852af010fb" translate="yes" xml:space="preserve">
          <source>You may of course also pipe the output of npm completion to a file such as &lt;code&gt;/usr/local/etc/bash_completion.d/npm&lt;/code&gt; if you have a system that will read that file for you.</source>
          <target state="translated">もちろん、ファイルを読み取るシステムがある場合は、npm完了の出力を &lt;code&gt;/usr/local/etc/bash_completion.d/npm&lt;/code&gt; などのファイルにパイプすることもできます。</target>
        </trans-unit>
        <trans-unit id="a9a04bda262b98ef78637731e945e443865d9357" translate="yes" xml:space="preserve">
          <source>You may specify a tarball URL in place of a version range.</source>
          <target state="translated">バージョン範囲の代わりにtarballのURLを指定することができます。</target>
        </trans-unit>
        <trans-unit id="5f40ea5c39b56c7e7964bbdc3b17bccba8313116" translate="yes" xml:space="preserve">
          <source>You may use this command multiple times with the same user account to authorize on a new machine. When authenticating on a new machine, the username, password and email address must all match with your existing record.</source>
          <target state="translated">新しいマシンで認証を行うには、同じユーザーアカウントでこのコマンドを複数回使用することができます。新しいマシンで認証する場合、ユーザ名、パスワード、メールアドレスはすべて既存のレコードと一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="bf7e5f249fbefea75d753e025043bc6bc6d03aff" translate="yes" xml:space="preserve">
          <source>You may want to check the npm registry to see if there's something by that name already, before you get too attached to it. &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;</source>
          <target state="translated">npmレジストリに接続する前に、npmレジストリをチェックして、その名前の何かがすでに存在するかどうかを確認することをお勧めします。&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da9abb4bc9cfabcb42b1e75209223a6f778fc581" translate="yes" xml:space="preserve">
          <source>You might want to unpublish a package because you:</source>
          <target state="translated">パッケージをアンインストールしたくなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c06575f4828f8322485e5cede31da41374a26e39" translate="yes" xml:space="preserve">
          <source>You must be the owner of the user account or organization that owns the package in order to change package visibility.</source>
          <target state="translated">パッケージの可視性を変更するには、パッケージを所有するユーザーアカウントまたは組織の所有者である必要があります。</target>
        </trans-unit>
        <trans-unit id="5ae668cd6f4e90259155ab83c5dab3f10ab93d4d" translate="yes" xml:space="preserve">
          <source>You must choose or generate a password for your npm account that:</source>
          <target state="translated">あなたは、あなたのnpmアカウントのパスワードを選択するか、または生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="f5e750ac73a01256f5eae4a2770ae38bf6fb5b85" translate="yes" xml:space="preserve">
          <source>You must have privileges to set the access of a package:</source>
          <target state="translated">パッケージのアクセス権を設定するには、権限が必要です。</target>
        </trans-unit>
        <trans-unit id="e5512e1d3901fba0611ffb85aed846e8fb67432d" translate="yes" xml:space="preserve">
          <source>You need to &lt;a href=&quot;http://git-scm.com/book/en/Getting-Started-Installing-Git&quot;&gt;install git&lt;/a&gt;. Or, you may need to add your git information to your npm profile. You can do this from the &lt;a href=&quot;../getting-started/modifying_your_profile_from_command_line&quot;&gt;command line&lt;/a&gt; or from the website.</source>
          <target state="translated">&lt;a href=&quot;http://git-scm.com/book/en/Getting-Started-Installing-Git&quot;&gt;git&lt;/a&gt;をインストールする必要があります。または、git情報をnpmプロファイルに追加する必要がある場合があります。これは、&lt;a href=&quot;../getting-started/modifying_your_profile_from_command_line&quot;&gt;コマンドライン&lt;/a&gt;またはWebサイトから実行できます。</target>
        </trans-unit>
        <trans-unit id="26998bf6098d09e71778d06b60b9a5041efac01d" translate="yes" xml:space="preserve">
          <source>You need to &lt;a href=&quot;http://git-scm.com/book/en/Getting-Started-Installing-Git&quot;&gt;install git&lt;/a&gt;. Or, you may need to add your git information to your npm profile. You can do this from the command line or the website. For more information, see &quot;&lt;a href=&quot;managing-your-profile-settings&quot;&gt;Managing your profile settings&lt;/a&gt;&quot;.</source>
          <target state="translated">&lt;a href=&quot;http://git-scm.com/book/en/Getting-Started-Installing-Git&quot;&gt;git&lt;/a&gt;をインストールする必要があります。または、git情報をnpmプロファイルに追加する必要がある場合があります。これは、コマンドラインまたはWebサイトから実行できます。詳細については、「&lt;a href=&quot;managing-your-profile-settings&quot;&gt;プロファイル設定の管理&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="ed3615598c8aa98a5b5eabc3365161520f04a913" translate="yes" xml:space="preserve">
          <source>You need to have a &lt;code&gt;package.json&lt;/code&gt; file in the root of your project to do much of anything with npm. That is basically the whole interface.</source>
          <target state="translated">npmでほとんどのことを行うには、プロジェクトのルートに &lt;code&gt;package.json&lt;/code&gt; ファイルが必要です。基本的にはインターフェース全体です。</target>
        </trans-unit>
        <trans-unit id="31606d14cb53700acc778be847a5a4039b00e03a" translate="yes" xml:space="preserve">
          <source>You now have a login account. Here are a few things you can do before (or after) you install npm:</source>
          <target state="translated">これでログインアカウントができました。npm をインストールする前(または後)にできることをいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="58bd401984b28087880eb1d0747af9886d5afde5" translate="yes" xml:space="preserve">
          <source>You probably got npm because you want to install stuff.</source>
          <target state="translated">インストールしたいものがあるからnpmを入れたのでしょう。</target>
        </trans-unit>
        <trans-unit id="5c7c9a6373e848c62ce38e131e019d82fe1ed455" translate="yes" xml:space="preserve">
          <source>You should specify a license for your package so that people know how they are permitted to use it, and any restrictions you're placing on it.</source>
          <target state="translated">パッケージのライセンスを指定して、どのように使用が許可されているのか、また制限事項があるのかを知ってもらう必要があります。</target>
        </trans-unit>
        <trans-unit id="c909e406c7e797e2241cf5f9fa107aaaefd620a5" translate="yes" xml:space="preserve">
          <source>You want to use bar codes (QR codes) in your application. Rather than spend weeks figuring out how to do this, why not see if someone has posted a package that creates QR codes? Start by entering a value in the search bar:</source>
          <target state="translated">あなたはアプリケーションでバーコード(QRコード)を使いたいと思っています。これを行う方法を考え出すのに数週間を費やすよりも、誰かがQRコードを作成するパッケージを投稿しているかどうかを見てみませんか?検索バーに値を入力することから始めましょう。</target>
        </trans-unit>
        <trans-unit id="5501a4efab6556484351e02709cba456a2608fe0" translate="yes" xml:space="preserve">
          <source>You will also need to add this to your environment variables on your development machine. In OSX or Linux, you would add this line to your &lt;code&gt;~/.profile&lt;/code&gt;:</source>
          <target state="translated">これを開発マシンの環境変数に追加する必要もあります。OSXまたはLinuxでは、この行を &lt;code&gt;~/.profile&lt;/code&gt; 追加します。</target>
        </trans-unit>
        <trans-unit id="1c7eca4fbb5d53b0e8a9ffbbef3fbc1e0167dadb" translate="yes" xml:space="preserve">
          <source>You will be prompted for your username, password, and email. Be sure to spell your username exactly the same way as you entered it on the website, or you will create a new account.</source>
          <target state="translated">ユーザー名、パスワード、Eメールの入力を求められます。ユーザー名は、ウェブサイトで入力したものと全く同じスペルで入力してください。</target>
        </trans-unit>
        <trans-unit id="9660691383b2e7c3d8cbf3fc1bdc9e4c686dbb5f" translate="yes" xml:space="preserve">
          <source>You will be prompted to log into your npm user account. If you don't have an npm user account, you can sign up for one.</source>
          <target state="translated">npm のユーザーアカウントへのログインを求められます。npm ユーザーアカウントを持っていない場合は、サインアップすることができます。</target>
        </trans-unit>
        <trans-unit id="128df06404cf58a5ebca4d5c0b96c78dc9916890" translate="yes" xml:space="preserve">
          <source>Your First Package Page</source>
          <target state="translated">最初のパッケージページ</target>
        </trans-unit>
        <trans-unit id="15ace4d795e7e6ad3b0bb34bbe1f2b4f7ecb2a07" translate="yes" xml:space="preserve">
          <source>Your cache must be readable and writable by the user running npm.</source>
          <target state="translated">キャッシュは npm を実行しているユーザーが読み書きできるようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="927f09cc2bb30da13081c5b88a7e9519df892e1b" translate="yes" xml:space="preserve">
          <source>Your local &lt;code&gt;node_modules&lt;/code&gt; path, if you're running &lt;code&gt;npm doctor&lt;/code&gt; with a project directory, must be readable and writable by the user running npm.</source>
          <target state="translated">ローカルの &lt;code&gt;node_modules&lt;/code&gt; パスは、プロジェクトディレクトリで &lt;code&gt;npm doctor&lt;/code&gt; を実行している場合、npmを実行しているユーザーが読み取りおよび書き込みできる必要があります。</target>
        </trans-unit>
        <trans-unit id="ab4b24922ebc70f72d05b39c7d76db3e545c893a" translate="yes" xml:space="preserve">
          <source>Your npm username should be displayed.</source>
          <target state="translated">npm のユーザー名が表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="118edeb5439e3ce6e603d28b4c1b7e5cb111e433" translate="yes" xml:space="preserve">
          <source>Your paid plan and billing cycle will start when you submit your credit card information, and you will be charged for the first month immediately.</source>
          <target state="translated">クレジットカード情報を提出した時点で有料プランと請求サイクルが開始され、すぐに初月分の請求が行われます。</target>
        </trans-unit>
        <trans-unit id="fed01e319bb6b809e48310d9445083a86704b3b0" translate="yes" xml:space="preserve">
          <source>Your token may have permission to read private packages, publish new packages on your behalf, or change user or package settings. Protect your token.</source>
          <target state="translated">あなたのトークンは、プライベートパッケージの読み込み、新しいパッケージの公開、ユーザやパッケージの設定の変更などの権限を持っているかもしれません。トークンを保護してください。</target>
        </trans-unit>
        <trans-unit id="868ac519dd9bf318a1ee4d0a83e79c2ac7c7b573" translate="yes" xml:space="preserve">
          <source>Yusuf writes a 10-line flow-control library, and calls it &lt;code&gt;foo&lt;/code&gt;, and publishes it to the npm registry. Being a simple little thing, it never really has to be updated. Alice works for Foo Inc, the makers of the critically acclaimed and widely-marketed &lt;code&gt;foo&lt;/code&gt; JavaScript toolkit framework. They publish it to npm as &lt;code&gt;foojs&lt;/code&gt;, but people are routinely confused when &lt;code&gt;npm install foo&lt;/code&gt; is some different thing.</source>
          <target state="translated">Yusufは10行のフロー制御ライブラリを作成し、それを &lt;code&gt;foo&lt;/code&gt; と呼び、npmレジストリに公開します。簡単なことなので、実際に更新する必要はありません。アリスは、高く評価され広く市場に出回っている &lt;code&gt;foo&lt;/code&gt; JavaScriptツールキットフレームワークのメーカーであるFoo Incで働いています。彼らはそれを &lt;code&gt;foojs&lt;/code&gt; としてnpmに公開しますが、 &lt;code&gt;npm install foo&lt;/code&gt; が別のことであると、人々は日常的に混乱しています。</target>
        </trans-unit>
        <trans-unit id="f4a95c8c0f7c31e92feb76bff5564bdaa2e22dfd" translate="yes" xml:space="preserve">
          <source>Yusuf writes a parser for the widely-known &lt;code&gt;foo&lt;/code&gt; file format, because he needs it for work. Then, he gets a new job, and never updates the prototype. Later on, Alice writes a much more complete &lt;code&gt;foo&lt;/code&gt; parser, but can't publish, because Yusuf's &lt;code&gt;foo&lt;/code&gt; is in the way.</source>
          <target state="translated">Yusufは、広く知られている &lt;code&gt;foo&lt;/code&gt; ファイル形式のパーサーを作成します。彼は仕事のためにそれを必要とするからです。その後、彼は新しい仕事を得て、プロトタイプを更新することはありません。後で、アリスははるかに完全な &lt;code&gt;foo&lt;/code&gt; パーサーを作成しますが、Yusufの &lt;code&gt;foo&lt;/code&gt; が邪魔をしているため公開できません。</target>
        </trans-unit>
        <trans-unit id="806616fafa5084410369f8a3f71c88f58b611104" translate="yes" xml:space="preserve">
          <source>Yusuf writes an npm module &lt;code&gt;foo&lt;/code&gt;, and publishes it. Perhaps much later, Alice finds a bug in &lt;code&gt;foo&lt;/code&gt;, and fixes it. She sends a pull request to Yusuf, but Yusuf doesn't have the time to deal with it, because he has a new job and a new baby and is focused on his new Erlang project, and kind of not involved with node any more. Alice would like to publish a new &lt;code&gt;foo&lt;/code&gt;, but can't, because the name is taken.</source>
          <target state="translated">Yusufはnpmモジュール &lt;code&gt;foo&lt;/code&gt; を作成して公開します。おそらくもっと後で、アリスは &lt;code&gt;foo&lt;/code&gt; にバグを見つけて修正します。彼女はプルリクエストをYusufに送信しますが、Yusufは新しい仕事と新しい赤ちゃんがあり、彼の新しいErlangプロジェクトに集中しており、ノードにはもう関与していないため、それに対処する時間はありません。アリスは新しい &lt;code&gt;foo&lt;/code&gt; を公​​開したいのですが、名前が取られているため公開できません。</target>
        </trans-unit>
        <trans-unit id="f91d984b571f80ec3f40a2b42f325d2765716a55" translate="yes" xml:space="preserve">
          <source>`npm token revoke' is a better choice. For instructions, &lt;a href=&quot;../getting-started/working_with_tokens&quot;&gt;see&lt;/a&gt;.</source>
          <target state="translated">`npm token revoke 'はより良い選択です。手順については、を&lt;a href=&quot;../getting-started/working_with_tokens&quot;&gt;参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95e0fab913402e0c51b6c9fcdf2ccf33bfafd337" translate="yes" xml:space="preserve">
          <source>a new version of a direct semver-range package may have been published since the last time your packages were installed, and thus a newer version will be used.</source>
          <target state="translated">ダイレクトセムバーレンジパッケージの新バージョンが、前回のインストール時から公開されている可能性があり、新しいバージョンが使用されます。</target>
        </trans-unit>
        <trans-unit id="c7e07608f660564dca4ef5f992659f6d08ece524" translate="yes" xml:space="preserve">
          <source>a) A folder containing a program described by a &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">a） &lt;code&gt;package.json&lt;/code&gt; ファイルで記述されたプログラムを含むフォルダー。</target>
        </trans-unit>
        <trans-unit id="3c573c8e3d6eb05ac853e43669bccf4eb8351206" translate="yes" xml:space="preserve">
          <source>a) a folder containing a program described by a &lt;a href=&quot;../configuring-npm/package-json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file</source>
          <target state="translated">a）&lt;a href=&quot;../configuring-npm/package-json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;ファイルで記述されたプログラムを含むフォルダー</target>
        </trans-unit>
        <trans-unit id="608cb9a3e93e54d6722fcfe3c0dbb0e6e9e32016" translate="yes" xml:space="preserve">
          <source>a) a folder containing a program described by a &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; file</source>
          <target state="translated">a） &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; ファイルで記述されたプログラムを含むフォルダー</target>
        </trans-unit>
        <trans-unit id="3d9211da18247ce91302cf3ae6b276413203c7bb" translate="yes" xml:space="preserve">
          <source>a) a folder containing a program described by a package.json file</source>
          <target state="translated">a)package.jsonファイルで記述されたプログラムを含むフォルダ</target>
        </trans-unit>
        <trans-unit id="0f12541afcce175fb34bb05a79c95b76e765488b" translate="yes" xml:space="preserve">
          <source>access</source>
          <target state="translated">access</target>
        </trans-unit>
        <trans-unit id="e0843c0f6f9f57a62081a9922dd08fa4f53305bc" translate="yes" xml:space="preserve">
          <source>access (CLI)</source>
          <target state="translated">アクセス</target>
        </trans-unit>
        <trans-unit id="0f1af2a1d031d9f0a8b669a44236975239e5e93c" translate="yes" xml:space="preserve">
          <source>add / rm: Add a user to an existing team, or remove a user from a team they belong to.</source>
          <target state="translated">追加/rm.既存のチームにユーザーを追加したり、所属するチームからユーザーを削除したりします。</target>
        </trans-unit>
        <trans-unit id="8b1e0d39e49a04917d4adeb8cf7d8b99ab10d239" translate="yes" xml:space="preserve">
          <source>add: Add a new user as a maintainer of a package. This user is enabled to modify metadata, publish new versions, and add other owners.</source>
          <target state="translated">を追加します。パッケージのメンテナとして新しいユーザを追加します。このユーザは、メタデータの変更、新しいバージョンの公開、他の所有者の追加を行うことができます。</target>
        </trans-unit>
        <trans-unit id="d3170f718ce1177663186350658d35309194cf01" translate="yes" xml:space="preserve">
          <source>add: Add the specified package to the local cache. This command is primarily intended to be used internally by npm, but it can provide a way to add data to the local installation cache explicitly.</source>
          <target state="translated">を追加します。指定したパッケージをローカルキャッシュに追加します。このコマンドは主に npm が内部的に使用することを意図していますが、ローカルのインストールキャッシュに明示的にデータを追加する方法を提供することができます。</target>
        </trans-unit>
        <trans-unit id="00c9818c1cd40248c0ef9ebfc6193e6749d517c9" translate="yes" xml:space="preserve">
          <source>add: Tags the specified version of the package with the specified tag, or the &lt;code&gt;--tag&lt;/code&gt; config if not specified. If the tag you're adding is &lt;code&gt;latest&lt;/code&gt; and you have two-factor authentication on auth-and-writes then you'll need to include an otp on the command line with &lt;code&gt;--otp&lt;/code&gt;.</source>
          <target state="translated">add：指定されたタグでパッケージの指定されたバージョンをタグ付けします。指定されていない場合は &lt;code&gt;--tag&lt;/code&gt; config 追加するタグが &lt;code&gt;latest&lt;/code&gt; 、auth-and-writesで2要素認証を使用している場合は、コマンドラインで &lt;code&gt;--otp&lt;/code&gt; を使用してotpを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="9450563c61c7e174eeabec9274344c4f0a02cfd0" translate="yes" xml:space="preserve">
          <source>add: Tags the specified version of the package with the specified tag, or the &lt;code&gt;--tag&lt;/code&gt; config if not specified. If you have two-factor authentication on auth-and-writes then you&amp;rsquo;ll need to include a one-time password on the command line with &lt;code&gt;--otp &amp;lt;one-time password&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">add：指定されたバージョンのパッケージに指定されたタグをタグ付けするか、指定されていない場合は &lt;code&gt;--tag&lt;/code&gt; configをタグ付けします。auth-and-writesで2要素認証を使用している場合は、コマンドラインに &lt;code&gt;--otp &amp;lt;one-time password&amp;gt;&lt;/code&gt; 使用してワンタイムパスワードを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="470b4fc2edb900437ce81972d6366f75ef3a74cb" translate="yes" xml:space="preserve">
          <source>added to the &lt;a href=&quot;about-developers-team&quot;&gt;&quot;developers&quot; team&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;about-developers-team&quot;&gt;「開発者」チームに&lt;/a&gt;追加されました</target>
        </trans-unit>
        <trans-unit id="85575d32a3b1492986bfb644e743db4ac3e96259" translate="yes" xml:space="preserve">
          <source>adduser (CLI)</source>
          <target state="translated">アドユーザ</target>
        </trans-unit>
        <trans-unit id="7c2fe8da864d15a0f4ba117148d1d87605b34810" translate="yes" xml:space="preserve">
          <source>adduser: Create an account or log in. Credentials are stored in the user config file.</source>
          <target state="translated">adduserを追加します。アカウントを作成するか、ログインします。資格情報はユーザー設定ファイルに保存されます。</target>
        </trans-unit>
        <trans-unit id="ef909ce8fa96144eaf664d1ed05ab8d838860304" translate="yes" xml:space="preserve">
          <source>all lowercase</source>
          <target state="translated">全小文字</target>
        </trans-unit>
        <trans-unit id="6c52fd3b624c0c2df6a24c9a193bb5cd6b0fb08d" translate="yes" xml:space="preserve">
          <source>allow-same-version</source>
          <target state="translated">allow-same-version</target>
        </trans-unit>
        <trans-unit id="3cd10bfe3039186569bb8f2e1fc158a3d33b1729" translate="yes" xml:space="preserve">
          <source>allows you to specify the versions of a package that your project can use using &lt;a href=&quot;semantic-versioning&quot;&gt;semantic versioning rules&lt;/a&gt;.</source>
          <target state="translated">プロジェクトで&lt;a href=&quot;semantic-versioning&quot;&gt;セマンティックバージョニングルールを&lt;/a&gt;使用して使用できるパッケージのバージョンを指定できます。</target>
        </trans-unit>
        <trans-unit id="09706c418809f1f4cfda992435ca1438eddaaeed" translate="yes" xml:space="preserve">
          <source>also</source>
          <target state="translated">also</target>
        </trans-unit>
        <trans-unit id="f029c29b3f4ee98ce14f1de64785597a073cda90" translate="yes" xml:space="preserve">
          <source>always-auth</source>
          <target state="translated">always-auth</target>
        </trans-unit>
        <trans-unit id="89cd0c7325926d6a1adf70a03381dd4aa3904083" translate="yes" xml:space="preserve">
          <source>and it generally seems to work.</source>
          <target state="translated">と一般的にはうまくいっているようです。</target>
        </trans-unit>
        <trans-unit id="cbeb3f0fed9d4b518b2b2780364556e6d74e51ed" translate="yes" xml:space="preserve">
          <source>and package C:</source>
          <target state="translated">とパッケージCを作成しています。</target>
        </trans-unit>
        <trans-unit id="37b8514806e4b2cd9cfe38ab02110086432419ac" translate="yes" xml:space="preserve">
          <source>and the server.js is this:</source>
          <target state="translated">で、server.jsはこれです。</target>
        </trans-unit>
        <trans-unit id="9e71303719267bb36a375b78073f43364f76476c" translate="yes" xml:space="preserve">
          <source>and then follow the prompts.</source>
          <target state="translated">をクリックして、プロンプトに従ってください。</target>
        </trans-unit>
        <trans-unit id="9ad26d0608a818a7333847a96c3dfc4080d17632" translate="yes" xml:space="preserve">
          <source>and then had a &quot;start&quot; command that then referenced the &lt;code&gt;npm_package_config_port&lt;/code&gt; environment variable, then the user could override that by doing &lt;code&gt;npm config set foo:port 8001&lt;/code&gt;.</source>
          <target state="translated">次に、「start」コマンドを使用して &lt;code&gt;npm_package_config_port&lt;/code&gt; 環境変数を参照し、ユーザーは &lt;code&gt;npm config set foo:port 8001&lt;/code&gt; を実行してそれをオーバーライドできました。</target>
        </trans-unit>
        <trans-unit id="126e3f4d03643ae6b1956e7b6a1a2c794a348e50" translate="yes" xml:space="preserve">
          <source>and then refresh your environment variables:</source>
          <target state="translated">を実行して、環境変数をリフレッシュします。</target>
        </trans-unit>
        <trans-unit id="fadb49a89727436eaea60b7642944dc3afd27bd7" translate="yes" xml:space="preserve">
          <source>assigned the role of &quot;&lt;a href=&quot;organization-roles-and-permissions&quot;&gt;member&lt;/a&gt;&quot;</source>
          <target state="translated">「&lt;a href=&quot;organization-roles-and-permissions&quot;&gt;メンバー&lt;/a&gt;」の役割を割り当てられました</target>
        </trans-unit>
        <trans-unit id="0ddf4aa477b38a7962a403aa9db780382c6c3bf0" translate="yes" xml:space="preserve">
          <source>assuming the new version did not modify B's dependencies. Of course, the new version of B could include a new version of C and any number of new dependencies. If such changes are undesirable, the author of A could specify a dependency on &lt;a href=&quot;mailto:B@0.0.1.&quot;&gt;B@0.0.1.&lt;/a&gt; However, if A's author and B's author are not the same person, there's no way for A's author to say that he or she does not want to pull in newly published versions of C when B hasn't changed at all.</source>
          <target state="translated">新しいバージョンがBの依存関係を変更しなかったと仮定します。もちろん、新しいバージョンのBには、新しいバージョンのCと任意の数の新しい依存関係を含めることができます。このような変更が望ましくない場合、Aの作成者は&lt;a href=&quot;mailto:B@0.0.1.&quot;&gt;B@0.0.1&lt;/a&gt;への依存関係を指定できます。ただし、Aの作成者とBの作成者が同じ人物でない場合、Bがまったく変更されていないのに、Aの作成者が新しく公開されたバージョンのCを取り込みたくないと言う方法はありません。</target>
        </trans-unit>
        <trans-unit id="8c935176a8898e8307decdc3425eb122f190c019" translate="yes" xml:space="preserve">
          <source>assuming the new version did not modify B's dependencies. Of course, the new version of B could include a new version of C and any number of new dependencies. If such changes are undesirable, the author of A could specify a dependency on B@0.0.1. However, if A's author and B's author are not the same person, there's no way for A's author to say that he or she does not want to pull in newly published versions of C when B hasn't changed at all.</source>
          <target state="translated">は、新しいバージョンが B の依存関係を変更していないと仮定しています。もちろん、Bの新しいバージョンには、Cの新しいバージョンと任意の数の新しい依存関係が含まれる可能性があります。そのような変更が望ましくない場合、Aの作者は、B@0.0.1 に依存関係を指定することができます。しかし、Aの作者とBの作者が同一人物ではない場合、Bが全く変更されていないのに、Aの作者が新たに公開されたバージョンのCを引っ張ってきたくないと言うことはあり得ません。</target>
        </trans-unit>
        <trans-unit id="7876153ada8274a24c48647e87674701755f9d09" translate="yes" xml:space="preserve">
          <source>audit</source>
          <target state="translated">audit</target>
        </trans-unit>
        <trans-unit id="5d1651945ae5b096fb07000ee278093072e8c955" translate="yes" xml:space="preserve">
          <source>audit (CLI)</source>
          <target state="translated">監査</target>
        </trans-unit>
        <trans-unit id="90eefdacef9c54bb7ccb139b8976fc19666df801" translate="yes" xml:space="preserve">
          <source>audit-level</source>
          <target state="translated">audit-level</target>
        </trans-unit>
        <trans-unit id="2171b97999fab80ad0e3b375b77d284faefed0c2" translate="yes" xml:space="preserve">
          <source>auth-type</source>
          <target state="translated">auth-type</target>
        </trans-unit>
        <trans-unit id="3f01b24d1cf89488752bb21fc9ebe27cc13fe555" translate="yes" xml:space="preserve">
          <source>author: Take some credit.</source>
          <target state="translated">作者は?手柄を立てろ</target>
        </trans-unit>
        <trans-unit id="9ec2a977612f3958661550a137c1903987ae7abc" translate="yes" xml:space="preserve">
          <source>b) A gzipped tarball containing (a).</source>
          <target state="translated">b)(a)を含む gzip された tarball。</target>
        </trans-unit>
        <trans-unit id="344e0b13713694b903b6de64a83c8bb9ec133043" translate="yes" xml:space="preserve">
          <source>b) a gzipped tarball containing (a)</source>
          <target state="translated">b)(a)を含む gzip された tarball</target>
        </trans-unit>
        <trans-unit id="85a8b027dc55a598c5f5f8508263842d8a887c3d" translate="yes" xml:space="preserve">
          <source>be longer than 10 characters</source>
          <target state="translated">十文字以上である</target>
        </trans-unit>
        <trans-unit id="79c0e2dc8902391426535389fbe1ff6cd0bf0b2d" translate="yes" xml:space="preserve">
          <source>be longer than 7 characters</source>
          <target state="translated">7文字以上である</target>
        </trans-unit>
        <trans-unit id="445a0f6acf85b6d1e01c0f3f21d0336770f1ba36" translate="yes" xml:space="preserve">
          <source>be using npm version 2.7.0 or greater. To upgrade, on the command line, run</source>
          <target state="translated">は npm バージョン 2.7.0 以上を使用している必要があります。アップグレードするには、コマンドラインで</target>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="translated">before</target>
        </trans-unit>
        <trans-unit id="9a5d56716d566997fa290054d161af96305aff9a" translate="yes" xml:space="preserve">
          <source>bin</source>
          <target state="translated">bin</target>
        </trans-unit>
        <trans-unit id="55a07da867e8f88deb775e04e0b8881d0d0aad48" translate="yes" xml:space="preserve">
          <source>bin (CLI)</source>
          <target state="translated">ビン</target>
        </trans-unit>
        <trans-unit id="c07d85be7e1c9f2916525d21503916381b9d321b" translate="yes" xml:space="preserve">
          <source>bin files are linked to &lt;code&gt;{prefix}/bin&lt;/code&gt;</source>
          <target state="translated">binファイルは &lt;code&gt;{prefix}/bin&lt;/code&gt; にリンクされています</target>
        </trans-unit>
        <trans-unit id="8f32d12368e49cbad03608eb637b32f90cbe17a6" translate="yes" xml:space="preserve">
          <source>bin-links</source>
          <target state="translated">bin-links</target>
        </trans-unit>
        <trans-unit id="ef98362b8a6b0c8cd804b0d227aa1ffeaba89786" translate="yes" xml:space="preserve">
          <source>browser</source>
          <target state="translated">browser</target>
        </trans-unit>
        <trans-unit id="3e38e5ce4283f06de4b83ad13af081abc5e16740" translate="yes" xml:space="preserve">
          <source>bugs</source>
          <target state="translated">bugs</target>
        </trans-unit>
        <trans-unit id="a9112a49787623e2d7966df6e208a4dd155b86ab" translate="yes" xml:space="preserve">
          <source>bugs (CLI)</source>
          <target state="translated">バグ</target>
        </trans-unit>
        <trans-unit id="df6f5a1f86ba925474efca1477c2ac2ec8f4e1e9" translate="yes" xml:space="preserve">
          <source>build (CLI)</source>
          <target state="translated">ビルド</target>
        </trans-unit>
        <trans-unit id="929eddcd2241b0129c23051059b663633546561b" translate="yes" xml:space="preserve">
          <source>bundle (CLI)</source>
          <target state="translated">バンドル</target>
        </trans-unit>
        <trans-unit id="4dc857c67cde542fc527885bb4cbcd1507ac95ba" translate="yes" xml:space="preserve">
          <source>bundled</source>
          <target state="translated">bundled</target>
        </trans-unit>
        <trans-unit id="01225f2dbdc8b3fb1bd9bf0836d11905ab837b3e" translate="yes" xml:space="preserve">
          <source>bundled dependencies: Regardless of source, this is a version number that is purely for informational purposes.</source>
          <target state="translated">バンドルされている依存関係。ソースに関わらず、これは純粋に情報提供を目的としたバージョン番号です。</target>
        </trans-unit>
        <trans-unit id="cce6745319577203361f9870c764a7547547bf24" translate="yes" xml:space="preserve">
          <source>bundledDependencies</source>
          <target state="translated">bundledDependencies</target>
        </trans-unit>
        <trans-unit id="8301ca77c8d3226bf79a7b43362c06cf01708647" translate="yes" xml:space="preserve">
          <source>c) A URL that resolves to (b).</source>
          <target state="translated">c)(b)に解決するURL。</target>
        </trans-unit>
        <trans-unit id="817cd8e6b6d3a080fda4134e6b0e4b9407e02c24" translate="yes" xml:space="preserve">
          <source>c) A url that resolves to (b).</source>
          <target state="translated">c)(b)に解決するURL。</target>
        </trans-unit>
        <trans-unit id="3daa0f8f0e96046d361525082be8a5c0cc7b6b23" translate="yes" xml:space="preserve">
          <source>c) a url that resolves to (b)</source>
          <target state="translated">c)(b)に解決するURL</target>
        </trans-unit>
        <trans-unit id="1c42c72cf95aa1b76609b585b34baf6b501d713e" translate="yes" xml:space="preserve">
          <source>ca</source>
          <target state="translated">ca</target>
        </trans-unit>
        <trans-unit id="b03592806efabfeeb709f5a70a7c172669b00538" translate="yes" xml:space="preserve">
          <source>cache</source>
          <target state="translated">cache</target>
        </trans-unit>
        <trans-unit id="b6b3ae0925ee6a1a9759a7a98f62139852825f8a" translate="yes" xml:space="preserve">
          <source>cache (CLI)</source>
          <target state="translated">キャッシュ</target>
        </trans-unit>
        <trans-unit id="c65ce5cfea42a4e9c968c98dd841ce78b1585c23" translate="yes" xml:space="preserve">
          <source>cache-lock-retries</source>
          <target state="translated">cache-lock-retries</target>
        </trans-unit>
        <trans-unit id="349345cd16b645c430b289cbac1ac93dbbb12f0d" translate="yes" xml:space="preserve">
          <source>cache-lock-stale</source>
          <target state="translated">cache-lock-stale</target>
        </trans-unit>
        <trans-unit id="5b5002747847d71f0f1236d1f4ec0265ebfcb03a" translate="yes" xml:space="preserve">
          <source>cache-lock-wait</source>
          <target state="translated">cache-lock-wait</target>
        </trans-unit>
        <trans-unit id="424ba9748df8a9ebd4e1e19a80a66a645122887d" translate="yes" xml:space="preserve">
          <source>cache-max</source>
          <target state="translated">cache-max</target>
        </trans-unit>
        <trans-unit id="51295dba0e792c20bb12c2b677fb146830b8b2fe" translate="yes" xml:space="preserve">
          <source>cache-min</source>
          <target state="translated">cache-min</target>
        </trans-unit>
        <trans-unit id="cbaf9cdda9b4ba6fc8fc74690f3d2a220a16b3c0" translate="yes" xml:space="preserve">
          <source>cafile</source>
          <target state="translated">cafile</target>
        </trans-unit>
        <trans-unit id="88869e915e73a6284374e58429d5420bd6a68298" translate="yes" xml:space="preserve">
          <source>cb() never called! when using shrinkwrapped dependencies</source>
          <target state="translated">シュリンクラップされた依存関係を使用している場合、cb()は決して呼び出されません。</target>
        </trans-unit>
        <trans-unit id="cd1b5069963d9878f92f1cfbe77f8912cdd5b2ed" translate="yes" xml:space="preserve">
          <source>cert</source>
          <target state="translated">cert</target>
        </trans-unit>
        <trans-unit id="934b76e8013d0a0a51c41d5bfa96896cfcd104d5" translate="yes" xml:space="preserve">
          <source>change access</source>
          <target state="translated">チェンジアクセス</target>
        </trans-unit>
        <trans-unit id="8036a39e86289147a46017685aee51c380c0e095" translate="yes" xml:space="preserve">
          <source>change your password</source>
          <target state="translated">パスワードを変更する</target>
        </trans-unit>
        <trans-unit id="7c194ad401724cf0541a25e9cdd4c366144a1683" translate="yes" xml:space="preserve">
          <source>change your profile</source>
          <target state="translated">プロフィールを変える</target>
        </trans-unit>
        <trans-unit id="33668c5456855539aac577ff35fbac25a7322682" translate="yes" xml:space="preserve">
          <source>check &lt;a href=&quot;https://github.com/nodesource/distributions&quot;&gt;NodeSource's binary distributions&lt;/a&gt; to see if there's a more recent version that works with your system.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/nodesource/distributions&quot;&gt;NodeSourceのバイナリディストリビューション&lt;/a&gt;をチェックして、システムで動作するより新しいバージョンがあるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="60ca9cbc673ab3326d12f63d61c382f21dd3815b" translate="yes" xml:space="preserve">
          <source>ci (CLI)</source>
          <target state="translated">ci</target>
        </trans-unit>
        <trans-unit id="4eb9cce141a55d8170899236645a8ad6a6a4230d" translate="yes" xml:space="preserve">
          <source>cidr</source>
          <target state="translated">cidr</target>
        </trans-unit>
        <trans-unit id="dbf67b6f986d88abc420dcc15de327a3e8b50f86" translate="yes" xml:space="preserve">
          <source>clean: Delete all data out of the cache folder.</source>
          <target state="translated">をクリーンにします。キャッシュフォルダからすべてのデータを削除します。</target>
        </trans-unit>
        <trans-unit id="fdff799cd857b533acd59f87d96bdea982f240bc" translate="yes" xml:space="preserve">
          <source>click &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;here&lt;/a&gt; to install npm for Linux in the way many Linux developers prefer.</source>
          <target state="translated">多くのLinux開発者が好む方法でLinux用のnpmをインストールするには、ここをクリックして&lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34f8dffd3506bafe40a4ce6c47cf67905c491a89" translate="yes" xml:space="preserve">
          <source>coding-style</source>
          <target state="translated">coding-style</target>
        </trans-unit>
        <trans-unit id="6dd0fe8001145bec4a12d0e22da711c4970d000b" translate="yes" xml:space="preserve">
          <source>color</source>
          <target state="translated">color</target>
        </trans-unit>
        <trans-unit id="a76d96d47098b9daee8e4f826a76fc7aaeed7744" translate="yes" xml:space="preserve">
          <source>command-line example:</source>
          <target state="translated">コマンドラインの例です。</target>
        </trans-unit>
        <trans-unit id="6439c7064dbb4df5c3517077da11dd945189ea4d" translate="yes" xml:space="preserve">
          <source>commit-hooks</source>
          <target state="translated">commit-hooks</target>
        </trans-unit>
        <trans-unit id="04be8f8c9cd3c8734eea1a53e4ec788119d1eb95" translate="yes" xml:space="preserve">
          <source>completion (CLI)</source>
          <target state="translated">完了</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="1c302949a27e44b0e08f7e367aaef3a014f23ffd" translate="yes" xml:space="preserve">
          <source>config (CLI)</source>
          <target state="translated">コンフィグ</target>
        </trans-unit>
        <trans-unit id="ebcaba5c3244979136b694bac01ec0e490869d62" translate="yes" xml:space="preserve">
          <source>config: access</source>
          <target state="translated">コンフィグ:アクセス</target>
        </trans-unit>
        <trans-unit id="0db9883c9592cd1ddbd7a608af7b77d811dfb59a" translate="yes" xml:space="preserve">
          <source>config: allow-same-version</source>
          <target state="translated">config:allow-same-version</target>
        </trans-unit>
        <trans-unit id="4080d930c8b2fb16810ef99d3b41dda4e7daed62" translate="yes" xml:space="preserve">
          <source>config: also</source>
          <target state="translated">config:また</target>
        </trans-unit>
        <trans-unit id="6e3d88f9ed7ac668fc75f7e7b4afd98bcb1f3032" translate="yes" xml:space="preserve">
          <source>config: always-auth</source>
          <target state="translated">config:always-auth</target>
        </trans-unit>
        <trans-unit id="e46eb33186cc876697d8bb91f119490d660516c7" translate="yes" xml:space="preserve">
          <source>config: audit</source>
          <target state="translated">設定:監査</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
