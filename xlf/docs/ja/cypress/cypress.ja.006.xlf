<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="9747f0ed594c9375b5488666b1886defe05defc7" translate="yes" xml:space="preserve">
          <source>Network XHR Requests</source>
          <target state="translated">ネットワークXHRリクエスト</target>
        </trans-unit>
        <trans-unit id="5b10e6f550f2b5b63058d3b037b51be856d701eb" translate="yes" xml:space="preserve">
          <source>Network requests in Kitchen Sink example</source>
          <target state="translated">キッチンシンクでのネットワークリクエスト例</target>
        </trans-unit>
        <trans-unit id="80c3052d33ccdee15ffaaa110c5c39072495fe63" translate="yes" xml:space="preserve">
          <source>Never</source>
          <target state="translated">Never</target>
        </trans-unit>
        <trans-unit id="727da35b772915d16f0be7fd55bf558b6f956678" translate="yes" xml:space="preserve">
          <source>Nevertheless, if you &lt;strong&gt;did&lt;/strong&gt; want to write a test in Cypress, you already have the tools to do this without involving the UI.</source>
          <target state="translated">それでも、サイプレスでテストを記述&lt;strong&gt;し&lt;/strong&gt;たい場合&lt;strong&gt;は&lt;/strong&gt;、UIを使用せずにこれを行うためのツールがすでに用意されています。</target>
        </trans-unit>
        <trans-unit id="5add408b5e4bcec582f1bccaff5cb1b25bb8aea7" translate="yes" xml:space="preserve">
          <source>Nevertheless, it is useful if your command can work in multiple ways - either with an existing subject or without one.</source>
          <target state="translated">それにもかかわらず、コマンドが複数の方法で動作する場合、既存のサブジェクトを使用しても、サブジェクトを使用しなくても、どちらでも動作する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="5623546efbfd7982de21607d02a7a20acfe8f552" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;.scrollIntoView()&amp;rdquo;</source>
          <target state="translated">新しい「.scrollIntoView（）」</target>
        </trans-unit>
        <trans-unit id="e0a66b791889a58e42d204ab7dc1a3dff26a1467" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;.trigger()&amp;rdquo;</source>
          <target state="translated">新しい「.trigger（）」</target>
        </trans-unit>
        <trans-unit id="b11235404026cea94c965fa477255344baa5b4c7" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;Catalog of Events&amp;rdquo;</source>
          <target state="translated">新しい「イベントのカタログ」</target>
        </trans-unit>
        <trans-unit id="48e7e007baf22fdeecebb2e2b6e81b0c61fad499" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;Cypress.Commands&amp;rdquo;</source>
          <target state="translated">新しい「Cypress.Commands」</target>
        </trans-unit>
        <trans-unit id="66df5a0b16ae1791ab99c356063f69f065ba8e80" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;Cypress.log&amp;rdquo;</source>
          <target state="translated">新しい「Cypress.log」</target>
        </trans-unit>
        <trans-unit id="79a92c7c66ee582b9058fd5fc553efb82f6784cb" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;Module API&amp;rdquo; doc</source>
          <target state="translated">新しい「モジュールAPI」ドキュメント</target>
        </trans-unit>
        <trans-unit id="e8bd1252f42e4fca4c6f8c22a10c97df31c87907" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;cy.scrollTo()&amp;rdquo;</source>
          <target state="translated">新しい「cy.scrollTo（）」</target>
        </trans-unit>
        <trans-unit id="b52b08cd047ce32efc9e565d8c671f3272a9cdd2" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt;&lt;code&gt;.scrollIntoView()&lt;/code&gt;&lt;/a&gt; command. Useful for scrolling an element into view. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/498&quot;&gt;#498&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/313&quot;&gt;#313&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/519&quot;&gt;#519&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt; &lt;code&gt;.scrollIntoView()&lt;/code&gt; &lt;/a&gt;コマンド。要素をスクロールして表示するのに便利です。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/498&quot;&gt;＃498&lt;/a&gt;＆&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/313&quot;&gt;＃313&lt;/a&gt;＆&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/519&quot;&gt;＃519を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b7e8d0643ac2842fa896462c58262be2feebb1a2" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../../api/commands/scrollto&quot;&gt;&lt;code&gt;cy.scrollTo()&lt;/code&gt;&lt;/a&gt; command. Useful for having a container scroll to a specific position. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/497&quot;&gt;#497&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/313&quot;&gt;#313&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../../api/commands/scrollto&quot;&gt; &lt;code&gt;cy.scrollTo()&lt;/code&gt; &lt;/a&gt;コマンド。コンテナを特定の位置までスクロールさせるのに役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/497&quot;&gt;＃497&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/313&quot;&gt;＃313を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4636a29df1b03ce68f001c75d68df33a20fadda0" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; command. Useful for triggering arbitrary events. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/406&quot;&gt;#406&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt;コマンド。任意のイベントをトリガーするのに役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/406&quot;&gt;＃406を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0c4966b657880f92ffedb3a818a05218a9361bfe" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;Retryability&lt;/a&gt; doc &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1278&quot;&gt;#1278&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;再試行可能性&lt;/a&gt;ドキュメント&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1278&quot;&gt;＃1278&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6224abd6d37e4b7df6d8246615dc2e521f2908e" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../tooling/code-coverage&quot;&gt;Code Coverage&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1744&quot;&gt;#1744&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../tooling/code-coverage&quot;&gt;コードカバレッジ&lt;/a&gt;ドキュメント。&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1744&quot;&gt;＃1744で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="c06c51e5ad34aca96b655ef329585dcce09bcbb3" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../tooling/visual-testing&quot;&gt;Visual Testing&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1536&quot;&gt;#1744&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../tooling/visual-testing&quot;&gt;ビジュアルテスト&lt;/a&gt;ドキュメント。&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1536&quot;&gt;＃1744で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="45a9bfcb0bae540505a183166364c68991379059" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;https://docs.cypress.io/examples/media/courses-media.html&quot;&gt;Courses&lt;/a&gt; doc to list online courses that teach end-to-end testing with Cypress. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1766&quot;&gt;#1766&lt;/a&gt;.</source>
          <target state="translated">サイプレスによるエンドツーエンドのテストを教えるオンラインコースをリストする新しい&lt;a href=&quot;https://docs.cypress.io/examples/media/courses-media.html&quot;&gt;コース&lt;/a&gt;ドキュメント。&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1766&quot;&gt;＃1766で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="c01771f4befd1d341915bfa2ad870e4c15335501" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;proxy-configuration&quot;&gt;Proxy Configuration&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1486&quot;&gt;#1486&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;proxy-configuration&quot;&gt;プロキシ設定&lt;/a&gt;ドキュメント。&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1486&quot;&gt;＃1486で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="c527fb79cbaeebb2b4d7e342ffe60b64f0c2be75" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;Screenshot API&lt;/code&gt; doc</source>
          <target state="translated">新しい &lt;code&gt;Screenshot API&lt;/code&gt; ドキュメント</target>
        </trans-unit>
        <trans-unit id="fb1f191336063c46e75bf06b257f420bddc66788" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;cy.message&lt;/code&gt; and &lt;code&gt;cy.msg&lt;/code&gt; commands in preparation for &lt;code&gt;cypress-ruby&lt;/code&gt;, &lt;code&gt;cypress-node&lt;/code&gt;, &lt;code&gt;cypress-*&lt;/code&gt; packages/gem to talk directly to your back end.</source>
          <target state="translated">&lt;code&gt;cypress-ruby&lt;/code&gt; 、 &lt;code&gt;cypress-node&lt;/code&gt; 、 &lt;code&gt;cypress-*&lt;/code&gt; packages / gemがバックエンドと直接通信するための新しい &lt;code&gt;cy.message&lt;/code&gt; および &lt;code&gt;cy.msg&lt;/code&gt; コマンド。</target>
        </trans-unit>
        <trans-unit id="ccf0fb932c68af719e0a3d8893b501ddb1476526" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;cy.task()&lt;/code&gt; doc</source>
          <target state="translated">新しい &lt;code&gt;cy.task()&lt;/code&gt; ドキュメント</target>
        </trans-unit>
        <trans-unit id="186b048c1fffc54afa5ae5b45c6126f9121aeb12" translate="yes" xml:space="preserve">
          <source>New Example CircleCI Orb</source>
          <target state="translated">新しい例 サークルCIオーブ</target>
        </trans-unit>
        <trans-unit id="b2467835ef4ced59e6a3bb4425ddfca35436f27a" translate="yes" xml:space="preserve">
          <source>New chromium upgrade fixes situation where extremely long CI runs would sometimes randomly crash.</source>
          <target state="translated">新しい chromium のアップグレードで、非常に長い CI の実行が時々ランダムにクラッシュしていた状況を修正しました。</target>
        </trans-unit>
        <trans-unit id="3b0e81f655692a4b78802718e1525f4e3835cb13" translate="yes" xml:space="preserve">
          <source>New chromium upgrade prevents synchronous XHR freezes.</source>
          <target state="translated">新しいchromiumのアップグレードで、同期しているXHRのフリーズを防ぐ。</target>
        </trans-unit>
        <trans-unit id="1fdfb5d0314648f4a63cf251b79e32ac9cc3ef54" translate="yes" xml:space="preserve">
          <source>New error message added about policy settings to our &lt;a href=&quot;error-messages&quot;&gt;Error Messages&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1754&quot;&gt;#1567&lt;/a&gt;.</source>
          <target state="translated">ポリシー設定に関する新しいエラーメッセージが&lt;a href=&quot;error-messages&quot;&gt;エラーメッセージ&lt;/a&gt;ドキュメントに追加されました。&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1754&quot;&gt;＃1567で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="e7d56bb4dd4e297805352880152d0c5342017f31" translate="yes" xml:space="preserve">
          <source>New kind of testing</source>
          <target state="translated">新種のテスト</target>
        </trans-unit>
        <trans-unit id="caca8abdda6b7542ba4c27d38eba79a35954c0b3" translate="yes" xml:space="preserve">
          <source>New testing approaches not possible before</source>
          <target state="translated">これまでにない新しいテストアプローチ</target>
        </trans-unit>
        <trans-unit id="c5f21993ea2385024912dcdd7a29e743d3166f67" translate="yes" xml:space="preserve">
          <source>New traversal commands &lt;a href=&quot;../../api/commands/nextall&quot;&gt;&lt;code&gt;.nextAll()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/nextuntil&quot;&gt;&lt;code&gt;.nextUntil()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/parentsuntil&quot;&gt;&lt;code&gt;.parentsUntil()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/prevall&quot;&gt;&lt;code&gt;.prevAll()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/prevuntil&quot;&gt;&lt;code&gt;.prevUntil()&lt;/code&gt;&lt;/a&gt; have been added. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/432&quot;&gt;#432&lt;/a&gt;.</source>
          <target state="translated">新トラバーサルコマンド&lt;a href=&quot;../../api/commands/nextall&quot;&gt; &lt;code&gt;.nextAll()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/nextuntil&quot;&gt; &lt;code&gt;.nextUntil()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/parentsuntil&quot;&gt; &lt;code&gt;.parentsUntil()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/prevall&quot;&gt; &lt;code&gt;.prevAll()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../api/commands/prevuntil&quot;&gt; &lt;code&gt;.prevUntil()&lt;/code&gt; が&lt;/a&gt;追加されました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/432&quot;&gt;＃432&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18528c67a4d488dec41975e8099583755bdee915" translate="yes" xml:space="preserve">
          <source>New users to Cypress may initially find it challenging to work with the asynchronous nature of our APIs.</source>
          <target state="translated">Cypress を初めて利用するユーザーは、最初は API の非同期性を利用するのが難しいと感じるかもしれません。</target>
        </trans-unit>
        <trans-unit id="a7f33b9b463e7684059101ae962fbdc5db1e5eb2" translate="yes" xml:space="preserve">
          <source>Newer CLI versions will not work on versions of Cypress &amp;lt; &lt;code&gt;0.19.0&lt;/code&gt; (but we don&amp;rsquo;t know why this would ever even happen).</source>
          <target state="translated">新しいCLIバージョンは、サイプレス &lt;code&gt;0.19.0&lt;/code&gt; 未満のバージョンでは機能しません（ただし、これが発生する理由さえわかりません）。</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">次のステップ</target>
        </trans-unit>
        <trans-unit id="d9441960e4fb0272e22515014d077fe67c2c191b" translate="yes" xml:space="preserve">
          <source>No Args</source>
          <target state="translated">アルグなし</target>
        </trans-unit>
        <trans-unit id="4702ee68581472fd4527dd9500e19add3644dbf5" translate="yes" xml:space="preserve">
          <source>No Arguments</source>
          <target state="translated">議論の余地なし</target>
        </trans-unit>
        <trans-unit id="a1b7763da3d955e87848a6114813163fb8ded722" translate="yes" xml:space="preserve">
          <source>No code changes to your server or client code</source>
          <target state="translated">サーバーやクライアントのコードを変更する必要はありません。</target>
        </trans-unit>
        <trans-unit id="af6e4ce551c0eb1d83b368d3f348545f83330e27" translate="yes" xml:space="preserve">
          <source>No guarantee your stubbed responses match the actual data the server sends</source>
          <target state="translated">スタブ化されたレスポンスがサーバーが送信する実際のデータと一致する保証はありません。</target>
        </trans-unit>
        <trans-unit id="43930eae8e41956ec9cbaac1e2bb044c5f664376" translate="yes" xml:space="preserve">
          <source>No longer force &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; to navigate to &lt;code&gt;about:blank&lt;/code&gt; prior to navigating to the real url. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/208&quot;&gt;#208&lt;/a&gt;.</source>
          <target state="translated">実際のURLに移動する前に、&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;に &lt;code&gt;about:blank&lt;/code&gt; への移動を強制しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/208&quot;&gt;＃208を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e094a3bccff8bff43909d7b73794f40dad03e972" translate="yes" xml:space="preserve">
          <source>No longer send back a 500 message when initial response status code is 4xx.</source>
          <target state="translated">初期応答ステータスコードが4xxの場合に500メッセージを返信しないようになりました。</target>
        </trans-unit>
        <trans-unit id="cd0af6cfca75c5899cf7e65ad84cc8da0f0de726" translate="yes" xml:space="preserve">
          <source>No matches</source>
          <target state="translated">一致するものはありません。</target>
        </trans-unit>
        <trans-unit id="8ac2290a52ee02b49ea6e0279864b4588412aa0f" translate="yes" xml:space="preserve">
          <source>No matter what is returned in the callback function, &lt;code&gt;.each()&lt;/code&gt; will always yield the original array.</source>
          <target state="translated">コールバック関数で何が返されても、 &lt;code&gt;.each()&lt;/code&gt; は常に元の配列を生成します。</target>
        </trans-unit>
        <trans-unit id="c31694cf5d9a2189eff15a33f1789ab2d94a82f3" translate="yes" xml:space="preserve">
          <source>No need to use &lt;code&gt;cypress-cli&lt;/code&gt; anymore to manage Cypress versions. &lt;strong&gt;You will need to uninstall the &lt;code&gt;cypress-cli&lt;/code&gt; by running &lt;code&gt;npm uninstall -g cypress-cli&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">サイプレスのバージョンを管理するために &lt;code&gt;cypress-cli&lt;/code&gt; を使用する必要はもうありません。&lt;strong&gt; &lt;code&gt;npm uninstall -g cypress-cli&lt;/code&gt; を&lt;/strong&gt;&lt;strong&gt;実行して&lt;/strong&gt;&lt;strong&gt;、 &lt;code&gt;cypress-cli&lt;/code&gt; をアンインストールする必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f65df38c7e949221b62a26df819cc0c36acb4fad" translate="yes" xml:space="preserve">
          <source>No need to use &lt;code&gt;window.location&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;window.location&lt;/code&gt; を使用する必要はありません</target>
        </trans-unit>
        <trans-unit id="92121508d5b64ac294a224e238d7f7498cbc576a" translate="yes" xml:space="preserve">
          <source>No test coverage on some server endpoints</source>
          <target state="translated">一部のサーバエンドポイントでテストカバレッジがない</target>
        </trans-unit>
        <trans-unit id="89c328f07e40d30f614e6be57ebfe6bc97f6ebe0" translate="yes" xml:space="preserve">
          <source>No tests found in your file</source>
          <target state="translated">ファイルにテストが見つかりませんでした</target>
        </trans-unit>
        <trans-unit id="bd8da0e92eefcdc8f7fd083b2c8b0072d320891a" translate="yes" xml:space="preserve">
          <source>No. You shouldn&amp;rsquo;t do that.</source>
          <target state="translated">いいえ、それを行うべきではありません。</target>
        </trans-unit>
        <trans-unit id="8d2610c4471324b190316825676fc0d1a3cc45a5" translate="yes" xml:space="preserve">
          <source>Node module dependencies updated. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1674&quot;&gt;#1674&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1942&quot;&gt;#1942&lt;/a&gt;.</source>
          <target state="translated">ノードモジュールの依存関係が更新されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1674&quot;&gt;＃1674&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1942&quot;&gt;＃1942を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c0ec20d7d237f7dd2bed4aa1a814f5612442a295" translate="yes" xml:space="preserve">
          <source>Noisy Promise demonstration. Not valid code.</source>
          <target state="translated">ノイジープロミスのデモ。有効なコードではありません。</target>
        </trans-unit>
        <trans-unit id="2a722c38749360de9de7d36887717cd5c07dd04b" translate="yes" xml:space="preserve">
          <source>None of the above commands are &lt;em&gt;idempotent&lt;/em&gt;; they all cause side effects. Racing commands is not possible because commands must be run in a controlled, serial manner in order to create consistency. Because integration and e2e tests primarily mimic the actions of a real user, Cypress models its command execution model after a real user working step by step.</source>
          <target state="translated">上記のコマンドはいずれも&lt;em&gt;べき等&lt;/em&gt;ではありません。それらはすべて副作用を引き起こします。一貫性を保つためにコマンドは制御されたシリアル方式で実行する必要があるため、レーシングコマンドは不可能です。統合およびe2eテストは主に実際のユーザーのアクションを模倣するため、サイプレスは実際のユーザーが段階的に作業した後、コマンド実行モデルをモデル化します。</target>
        </trans-unit>
        <trans-unit id="136e1359b2167ed4940dc7011f47c048ebbf84a5" translate="yes" xml:space="preserve">
          <source>Normally Cypress would return the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; since that is the &lt;em&gt;deepest&lt;/em&gt; element that contains &amp;ldquo;apples&amp;rdquo;.</source>
          <target state="translated">通常、サイプレスは最初の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; を返します。これは、「りんご」を含む&lt;em&gt;最も深い&lt;/em&gt;要素だからです。</target>
        </trans-unit>
        <trans-unit id="fbb80e5c1388bb43baa21d06596eac6b5b6750f1" translate="yes" xml:space="preserve">
          <source>Normally when the browser detects a cross-origin HTTP request, it will send an &lt;code&gt;OPTIONS&lt;/code&gt; preflight check to ensure the server allows cross-origin requests, but &lt;code&gt;cy.request()&lt;/code&gt; bypasses CORS entirely.</source>
          <target state="translated">通常、ブラウザーはクロスオリジンHTTPリクエストを検出すると、サーバーがクロスオリジンリクエストを許可するように &lt;code&gt;OPTIONS&lt;/code&gt; プリフライトチェックを送信しますが、 &lt;code&gt;cy.request()&lt;/code&gt; はCORSを完全にバイパスします。</target>
        </trans-unit>
        <trans-unit id="60c68d02159f6c09765eb2d51789a8bc8a91e260" translate="yes" xml:space="preserve">
          <source>Normally when writing code in Node, you typically have to restart the process after changing any files.</source>
          <target state="translated">通常、Nodeでコードを書くときは、ファイルを変更した後にプロセスを再起動しなければなりません。</target>
        </trans-unit>
        <trans-unit id="5895514fbcf3d6a0a79d277bea6c345ee0e68fd4" translate="yes" xml:space="preserve">
          <source>Normally, as a user, all of your test code, your application, and Cypress commands are executed in the browser. But Cypress is also a Node process that plugins can use.</source>
          <target state="translated">通常、ユーザーとしては、テストコードもアプリケーションもCypressのコマンドもすべてブラウザ上で実行されます。しかし、Cypressはプラグインが利用できるNodeプロセスでもあります。</target>
        </trans-unit>
        <trans-unit id="f85f0b503b65b1678bdce73ea41fe49e76217e0f" translate="yes" xml:space="preserve">
          <source>Not all config values can be changed at all times</source>
          <target state="translated">すべての設定値を常に変更できるわけではありません。</target>
        </trans-unit>
        <trans-unit id="28cb651d278e081430effd741894a40be95a885e" translate="yes" xml:space="preserve">
          <source>Not all configuration values can be changed during runtime. See &lt;a href=&quot;#Notes&quot;&gt;Notes&lt;/a&gt; below for details.</source>
          <target state="translated">実行時にすべての構成値を変更できるわけではありません。詳細については、下記の&lt;a href=&quot;#Notes&quot;&gt;注を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="85fd0d0ffa97e270a4ab26d63942281b93421215" translate="yes" xml:space="preserve">
          <source>Not animating</source>
          <target state="translated">アニメーション化しない</target>
        </trans-unit>
        <trans-unit id="5366b56df28a7932bc55b4017c02a8b44da0b7bd" translate="yes" xml:space="preserve">
          <source>Not as obvious where values come from versus the other options.</source>
          <target state="translated">価値観がどこから来るのか、他の選択肢と比較しても明らかではない。</target>
        </trans-unit>
        <trans-unit id="1c349d5ff60c494ffad3b9f757b51009d93ef609" translate="yes" xml:space="preserve">
          <source>Not as useful if you&amp;rsquo;re using traditional server side HTML rendering</source>
          <target state="translated">従来のサーバー側のHTMLレンダリングを使用している場合はそれほど役に立ちません</target>
        </trans-unit>
        <trans-unit id="da1f35a0206cefa29e7666c416ac420783e39328" translate="yes" xml:space="preserve">
          <source>Not being covered</source>
          <target state="translated">カバーされていない</target>
        </trans-unit>
        <trans-unit id="a163b430350a9df04cde13de3a705eb78295db95" translate="yes" xml:space="preserve">
          <source>Not being disabled</source>
          <target state="translated">障害者ではないこと</target>
        </trans-unit>
        <trans-unit id="cd731ff87fc20c23d0d1b846dad17c1b59fdba80" translate="yes" xml:space="preserve">
          <source>Not being hidden</source>
          <target state="translated">隠れていない</target>
        </trans-unit>
        <trans-unit id="368c42f19cbb713ff7e310c6608e770c006cf667" translate="yes" xml:space="preserve">
          <source>Not every command is retried</source>
          <target state="translated">すべてのコマンドが再試行されるわけではありません</target>
        </trans-unit>
        <trans-unit id="a33a096a90c1b37a8c60d11eddfac93efa5ecd1f" translate="yes" xml:space="preserve">
          <source>Not only is this an anti-pattern, but it&amp;rsquo;s an actual logical fallacy.</source>
          <target state="translated">これはアンチパターンであるだけでなく、実際の論理的な誤りでもあります。</target>
        </trans-unit>
        <trans-unit id="7b35de0a431c4174b24ed042b20257be5bcce575" translate="yes" xml:space="preserve">
          <source>Not sure what a part of the URL a host is? &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_strings_and_url_objects&quot;&gt;Use this guide as a reference.&lt;/a&gt;</source>
          <target state="translated">ホストがURLのどの部分かわからない場合は、&lt;a href=&quot;https://nodejs.org/api/url.html#url_url_strings_and_url_objects&quot;&gt;このガイドを参考にしてください。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c49d64a3504b2d01592e1f16bdeb1bbc1991fc31" translate="yes" xml:space="preserve">
          <source>Not working for you? Don&amp;rsquo;t know how to set your token? If you still need to be able to be redirected to your SSO server, you can read about &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disabling web security&lt;/a&gt;.</source>
          <target state="translated">あなたのために働いていませんか？トークンの設定方法がわかりませんか？それでもSSOサーバーにリダイレクトできるようにする必要がある場合は、&lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;Webセキュリティの無効化&lt;/a&gt;について読むことができます。</target>
        </trans-unit>
        <trans-unit id="47dc41d0b3977e9e3b8385257e5356565087cc58" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;cy.clock()&lt;/code&gt; only applies to the &lt;code&gt;top&lt;/code&gt; window on a web page. It will not override the time functions of any &lt;code&gt;iframe&lt;/code&gt; embedded on the page.</source>
          <target state="translated">&lt;code&gt;cy.clock()&lt;/code&gt; はWebページの &lt;code&gt;top&lt;/code&gt; ウィンドウにのみ適用されることに注意してください。ページに埋め込まれた &lt;code&gt;iframe&lt;/code&gt; の時間関数を上書きしません。</target>
        </trans-unit>
        <trans-unit id="87651ea2e0d84f0f10bc925332a3b282754cef2c" translate="yes" xml:space="preserve">
          <source>Note that some implementations may rely on the &lt;code&gt;input&lt;/code&gt; event instead, which is fired as a user moves the slider, but is not supported by some browsers.</source>
          <target state="translated">実装によっては、代わりに &lt;code&gt;input&lt;/code&gt; イベントに依存する場合があることに注意してください。これは、ユーザーがスライダーを動かすと発生しますが、一部のブラウザーではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e99c89f5564fd39e1eb10d60903f06d0aec1f3e7" translate="yes" xml:space="preserve">
          <source>Note that you must specify &lt;code&gt;Date&lt;/code&gt; in order to override the current datetime. The example below just affects the current datetime without affecting scheduled timers.</source>
          <target state="translated">現在の日時を上書きするには、 &lt;code&gt;Date&lt;/code&gt; を指定する必要があることに注意してください。以下の例は、スケジュールされたタイマーに影響を与えることなく、現在の日時にのみ影響します。</target>
        </trans-unit>
        <trans-unit id="71ec3c80bcdb34ce90a7bc671a4276d3079d0125" translate="yes" xml:space="preserve">
          <source>Note the use of the standard function syntax. Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt; to access aliases via &lt;code&gt;this&lt;/code&gt; won&amp;rsquo;t work because of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#No_separate_this&quot;&gt;the lexical binding&lt;/a&gt; of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">標準関数構文の使用に注意してください。使用して&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;矢印の機能を&lt;/a&gt;経由してアクセスエイリアスに &lt;code&gt;this&lt;/code&gt; ためではないだろう作品&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#No_separate_this&quot;&gt;結合字句&lt;/a&gt;の &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e141c018aca524e87e39832519a7ec93ce1f73ed" translate="yes" xml:space="preserve">
          <source>Note: we are still updating all of the docs to reflect all the 0.20.0 changes.</source>
          <target state="translated">注:0.20.0の変更をすべて反映させるために、まだすべてのドキュメントを更新しています。</target>
        </trans-unit>
        <trans-unit id="702c4b52cb899216c608d3c5323569745437248e" translate="yes" xml:space="preserve">
          <source>Note: we recommend deleting all files from the &lt;code&gt;cypress/results&lt;/code&gt; folder before running this command, since each run will output new XML files. For example, we can add the npm script commands below to our &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">注：実行するたびに新しいXMLファイルが出力されるため、このコマンドを実行する前に、 &lt;code&gt;cypress/results&lt;/code&gt; フォルダーからすべてのファイルを削除することをお勧めします。たとえば、以下のnpmスクリプトコマンドを &lt;code&gt;package.json&lt;/code&gt; に追加できます。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="3deb92bf54af02cc1eec5104e1ad9e096cd8041f" translate="yes" xml:space="preserve">
          <source>Nothing slows a test suite down like having to log in, but all the good parts of your application most likely require an authenticated user! Here are some tips.</source>
          <target state="translated">ログインしなければならないようなテストスイートを遅くするものはありませんが、あなたのアプリケーションの良い部分はすべて認証済みのユーザを必要とする可能性が高いです! ここにいくつかのヒントがあります。</target>
        </trans-unit>
        <trans-unit id="1f4d0504f06214721b4cc87be5bcd3a4fe6afec9" translate="yes" xml:space="preserve">
          <source>Notice Cypress displays a message about this being the default page &lt;a href=&quot;../core-concepts/test-runner#Application-Under-Test&quot;&gt;on the righthand side&lt;/a&gt;. Cypress assumes you&amp;rsquo;ll want to go out and &lt;a href=&quot;../../api/commands/visit&quot;&gt;visit&lt;/a&gt; a URL on the internet - but it can also work just fine without that.</source>
          <target state="translated">サイプレスがこれがデフォルトのページ&lt;a href=&quot;../core-concepts/test-runner#Application-Under-Test&quot;&gt;である&lt;/a&gt;ことを示すメッセージを右側に表示することに注意してください。サイプレスは外出してインターネット上のURLに&lt;a href=&quot;../../api/commands/visit&quot;&gt;アクセス&lt;/a&gt;することを想定していますが、それがなくても問題なく機能します。</target>
        </trans-unit>
        <trans-unit id="22652f894a9c82a24b8671df27088b0aeac39e3d" translate="yes" xml:space="preserve">
          <source>Notice Cypress displays the message that it couldn&amp;rsquo;t find any tests. This is normal - we haven&amp;rsquo;t written any tests! Sometimes you&amp;rsquo;ll also see this message if there was an error parsing your test file. You can always open your &lt;strong&gt;Dev Tools&lt;/strong&gt; to inspect the Console for any syntax or parsing errors that prevented Cypress from reading your tests.</source>
          <target state="translated">サイプレスがテストを見つけられなかったというメッセージを表示することに注意してください。これは正常です-テストを作成していません。テストファイルの解析中にエラーが発生した場合にも、このメッセージが表示されることがあります。いつでも&lt;strong&gt;Dev Tools&lt;/strong&gt;を開いてコンソールを検査し、サイプレスによるテストの読み取りを妨げた構文または解析エラーを確認できます。</target>
        </trans-unit>
        <trans-unit id="33c3bfdf64f122f7b954198ce15c9be09f144ac8" translate="yes" xml:space="preserve">
          <source>Notice how the &lt;strong&gt;ADD_TODO&lt;/strong&gt; action was executed 3 times - because our test has added 3 todo items, and the &lt;strong&gt;COMPLETE_TODO&lt;/strong&gt; action was executed just once - because our test has marked 1 todo item as completed.</source>
          <target state="translated">テストで3つの&lt;strong&gt;ToDo&lt;/strong&gt;アイテムが追加されたため、&lt;strong&gt;ADD_TODO&lt;/strong&gt;アクションが3回実行されたことに注目してください。テストで1つのToDoアイテムが完了としてマークされているため、&lt;strong&gt;COMPLETE_TODO&lt;/strong&gt;アクションが1回だけ実行されました。</target>
        </trans-unit>
        <trans-unit id="fe42e5841f7dd5db49be4591cec035f4c039baf3" translate="yes" xml:space="preserve">
          <source>Notice it highlights in purple. This did three things worth noting&amp;hellip;</source>
          <target state="translated">紫色で強調表示されています。これは注目に値する3つのことを行いました&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="238657d12f0a7b02a469ac4e3a4519d186623156" translate="yes" xml:space="preserve">
          <source>Notice that the Cypress &lt;code&gt;npm&lt;/code&gt; package is a wrapper around the Cypress binary. The version of the &lt;code&gt;npm&lt;/code&gt; package determines the version of the binary downloaded.</source>
          <target state="translated">サイプレス &lt;code&gt;npm&lt;/code&gt; パッケージはサイプレスバイナリのラッパーであることに注意してください。バージョン &lt;code&gt;npm&lt;/code&gt; パッケージは、バイナリダウンロードのバージョンを決定します。</target>
        </trans-unit>
        <trans-unit id="9903bd272894a0e9daec4e2d6b6900a9810ad430" translate="yes" xml:space="preserve">
          <source>Notice that this timeout has flowed down to all assertions and Cypress will now wait &lt;em&gt;up to 10 seconds total&lt;/em&gt; for all of them to pass.</source>
          <target state="translated">このタイムアウトがすべてのアサーションに流れ込み、サイプレスはすべてのアサーションが通過するまで&lt;em&gt;合計&lt;/em&gt;で&lt;em&gt;最大10秒&lt;/em&gt;待機&lt;em&gt;すること&lt;/em&gt;に注意してください。</target>
        </trans-unit>
        <trans-unit id="3b8adffbbb12a9d3f3e55a8a61bf959f11057efd" translate="yes" xml:space="preserve">
          <source>Notice that when adding up the spec&amp;rsquo;s run times (&lt;strong&gt;0:55&lt;/strong&gt;), they add up to less than the total time for the run to complete (&lt;strong&gt;1:51&lt;/strong&gt;) . There is extra time in the run for each spec: starting the browser, encoding and uploading the video to the dashboard, requesting the next spec to run.</source>
          <target state="translated">スペックの実行時間（&lt;strong&gt;0:55&lt;/strong&gt;）を合計すると、実行が完了するまでの合計時間（&lt;strong&gt;1:51&lt;/strong&gt;）よりも短くなることに注意してください。各仕様の実行には、ブラウザーの起動、ビデオのエンコードとダッシュボードへのアップロード、実行する次の仕様の要求など、余分な時間がかかります。</target>
        </trans-unit>
        <trans-unit id="9624ce694f9532e0a1f18bdfdac0b62b0a3c119f" translate="yes" xml:space="preserve">
          <source>Notice the calls to &lt;code&gt;cov_18hmhptych.s[0]++&lt;/code&gt; and &lt;code&gt;cov_18hmhptych.s[1]++&lt;/code&gt; that increment the statement counters. All counters and additional book-keeping information is stored in a single object attached to the browser&amp;rsquo;s &lt;code&gt;window&lt;/code&gt; object. We can see the counters if we serve the &lt;code&gt;instrumented&lt;/code&gt; folder instead of &lt;code&gt;src&lt;/code&gt; and open the application.</source>
          <target state="translated">ステートメントカウンターをインクリメントする &lt;code&gt;cov_18hmhptych.s[0]++&lt;/code&gt; および &lt;code&gt;cov_18hmhptych.s[1]++&lt;/code&gt; の呼び出しに注意してください。すべてのカウンタと追加の簿記情報は、ブラウザの &lt;code&gt;window&lt;/code&gt; オブジェクトにアタッチされた単一のオブジェクトに格納されます。 &lt;code&gt;src&lt;/code&gt; の代わりに &lt;code&gt;instrumented&lt;/code&gt; フォルダーを提供してアプリケーションを開くと、カウンターを確認できます。</target>
        </trans-unit>
        <trans-unit id="de412f24bbb31a65dd952f9c05bace08a5b750da" translate="yes" xml:space="preserve">
          <source>Notice there is also a funny looking Log called: &lt;code&gt;(PAGE LOAD)&lt;/code&gt; followed by another entry for &lt;code&gt;(NEW URL)&lt;/code&gt;. Neither of these was a command that we issued - rather Cypress itself will log out important events from your application when they occur. Notice these look different (they are gray and without a number).</source>
          <target state="translated">&lt;code&gt;(PAGE LOAD)&lt;/code&gt; という名前の面白いログがあり、その後に &lt;code&gt;(NEW URL)&lt;/code&gt; の別のエントリが続くことに注意してください。これらのどちらも、私たちが発行したコマンドではありませんでした。むしろ、サイプレス自体が重要なイベントが発生すると、アプリケーションからログアウトします。これらは異なって見えることに注意してください（灰色で番号なし）。</target>
        </trans-unit>
        <trans-unit id="24cdc108df5164363adcb76832f8e0d0e38369f2" translate="yes" xml:space="preserve">
          <source>Notification center</source>
          <target state="translated">通知センター</target>
        </trans-unit>
        <trans-unit id="e3b82040565bb4be6b11f778a2e3df327ed20a3b" translate="yes" xml:space="preserve">
          <source>Now</source>
          <target state="translated">Now</target>
        </trans-unit>
        <trans-unit id="0ba27239348a0b8a7c3cf9341f29b0bfe7c93ada" translate="yes" xml:space="preserve">
          <source>Now Cypress provides us a UI (similar to debugger) to step forward through each command.</source>
          <target state="translated">Cypress は、各コマンドをステップアップするための UI (デバッガに似ています)を提供してくれます。</target>
        </trans-unit>
        <trans-unit id="266f3950523b343bd5c5677017facb6866ab80f4" translate="yes" xml:space="preserve">
          <source>Now Cypress will skip its install phase once the npm module is installed.</source>
          <target state="translated">npmモジュールがインストールされると、Cypressはインストールフェーズをスキップするようになりました。</target>
        </trans-unit>
        <trans-unit id="49c8371146058b533c1499d33f31da187dcac8a0" translate="yes" xml:space="preserve">
          <source>Now What?</source>
          <target state="translated">今は何を?</target>
        </trans-unit>
        <trans-unit id="7fa182979af5cac1ec7bf0589ad69639c606aafd" translate="yes" xml:space="preserve">
          <source>Now click on the &lt;code&gt;home_page_spec.js&lt;/code&gt; file and watch Cypress open your browser.</source>
          <target state="translated">次に、 &lt;code&gt;home_page_spec.js&lt;/code&gt; ファイルをクリックして、サイプレスがブラウザーを開くのを確認します。</target>
        </trans-unit>
        <trans-unit id="2dfbc1e12d5e26a42c257dd231c78514f58bf2fc" translate="yes" xml:space="preserve">
          <source>Now if you remember at the end of the test we ended up on a different URL:</source>
          <target state="translated">今、テストの最後に覚えているなら、私たちは別のURLに行き着いた。</target>
        </trans-unit>
        <trans-unit id="b3ba9f46bbe2a37812dd34fb8f1df86ac794d0e9" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s time to write our first test. We&amp;rsquo;re going to:</source>
          <target state="translated">それでは、最初のテストを作成します。に行っていました：</target>
        </trans-unit>
        <trans-unit id="216a4c11ea65937fd8b60a10401654c21c6737dd" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s create our own spec file called &lt;code&gt;home_page_spec.js&lt;/code&gt;.</source>
          <target state="translated">次に、 &lt;code&gt;home_page_spec.js&lt;/code&gt; という独自のスペックファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="8563b7b571860be5a8cfa144d4f84d4faf733115" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s test out &lt;code&gt;**&lt;/code&gt; support.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; サポートをテストしてみましょう。</target>
        </trans-unit>
        <trans-unit id="255bec658b34ad387514345f89f1abf76c973b27" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s write our first failing test.</source>
          <target state="translated">では、最初の失敗したテストを書いてみましょう。</target>
        </trans-unit>
        <trans-unit id="995f8411e28ba80a702fad3dcc54d3dbaba88eee" translate="yes" xml:space="preserve">
          <source>Now that we understand the real reason behind the flaky test, we need to think about why the default retry-ability has not helped us in this situation. Why hasn&amp;rsquo;t Cypress found the 2 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements after the second one was added?</source>
          <target state="translated">不安定なテストの背後にある本当の理由を理解したところで、この状況でデフォルトの再試行機能が役に立たなかった理由を考える必要があります。2番目の要素が追加された後、サイプレスが2つの &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 要素を見つけなかったのはなぜですか？</target>
        </trans-unit>
        <trans-unit id="b46e50ef610c979ce2b8f47e16658fb4b9f70a23" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve got a page loaded, we need to take some action on it. Why don&amp;rsquo;t we click a link on the page? Sounds easy enough, let&amp;rsquo;s go look for one we like&amp;hellip; how about &lt;code&gt;type&lt;/code&gt;?</source>
          <target state="translated">ページが読み込まれたので、ページに何らかのアクションを実行する必要があります。ページのリンクをクリックしてみませんか？簡単そうに聞こえるので、好きなものを探しましょう... &lt;code&gt;type&lt;/code&gt; どうですか？</target>
        </trans-unit>
        <trans-unit id="46bd4086c35d1a0a0419b97130003bbdbfdfb479" translate="yes" xml:space="preserve">
          <source>Now there is not even a need to do conditional testing since you are able to know ahead of time what campaign was sent. Yes, this may require server side updates, but you have to make an untestable app testable if you want to test it!</source>
          <target state="translated">どのキャンペーンが送られてきたかを事前に知ることができるようになったので、条件付きテストをする必要すらなくなりました。はい、これはサーバー側のアップデートが必要になるかもしれませんが、テストしたいのであれば、テスト不可能なアプリをテスト可能なものにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="957e1785a201ad0e252eced449556775304b7836" translate="yes" xml:space="preserve">
          <source>Now we can assert something about this new page!</source>
          <target state="translated">これで、この新しいページについて何かを主張することができるようになりました。</target>
        </trans-unit>
        <trans-unit id="e96096fb7f7005ab49c42a203dbfeb9051f1cb72" translate="yes" xml:space="preserve">
          <source>Now we can put an &lt;code&gt;.only&lt;/code&gt; on this test and it will run successfully irrespective of any other test. The ideal Cypress workflow is writing and iterating on a single test at a time.</source>
          <target state="translated">これで、このテストに &lt;code&gt;.only&lt;/code&gt; を置くことができ、他のテストに関係なく正常に実行されます。理想的なサイプレスワークフローは、一度に1つのテストを記述および反復することです。</target>
        </trans-unit>
        <trans-unit id="d23a28df61541bff515f2a089246b970b7cbda0d" translate="yes" xml:space="preserve">
          <source>Now we know exactly why our test failed. It had nothing to do with the DOM. Instead we can see that either our request never went out or a request went out to the wrong URL.</source>
          <target state="translated">テストが失敗した理由がわかりました。それは DOM とは何の関係もありませんでした。代わりに、リクエストが出てこなかったか、リクエストが間違った URL に出てしまったかのどちらかであることがわかります。</target>
        </trans-unit>
        <trans-unit id="6081c1c3d3e8cf637f9851c8f48bc235a9ecfe55" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;re in business! The first time through, &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; chain (with its &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; attached) are enqueued for Cypress to execute. The &lt;code&gt;it&lt;/code&gt; block exits, and Cypress starts its work:</source>
          <target state="translated">今、私たちはビジネスをしています！最初に、&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;チェーン（&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; が&lt;/a&gt;アタッチされている）は、サイプレスが実行するためにキューに入れられます。 &lt;code&gt;it&lt;/code&gt; 終了をブロックし、サイプレスは、その作業を開始します。</target>
        </trans-unit>
        <trans-unit id="6346f423c98bd78f8a03335522a1fef94fa618db" translate="yes" xml:space="preserve">
          <source>Now when Cypress logs cookies they will only include the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">これで、サイプレスがCookieをログに記録するときに、 &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="5029d6be001ccee71bc634614aecc53d7da7d5bd" translate="yes" xml:space="preserve">
          <source>Now when you click the giant yellow failure messages if the error is a &lt;code&gt;CypressError&lt;/code&gt; instead of logging nothing it will now find the command associated to that error and display the same message as if you clicked the failed command.</source>
          <target state="translated">エラーが何も記録せずに &lt;code&gt;CypressError&lt;/code&gt; である場合に巨大な黄色のエラーメッセージをクリックすると、そのエラーに関連付けられたコマンドが検索され、失敗したコマンドをクリックした場合と同じメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="498258ae1992a17e6d44069d5f999af0dce7fada" translate="yes" xml:space="preserve">
          <source>Now you can create parent, dual, and child commands using the same &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;&lt;code&gt;Cypress.Commands.add()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">同じ&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt; &lt;code&gt;Cypress.Commands.add()&lt;/code&gt; &lt;/a&gt;コマンドを使用して、親、デュアル、および子のコマンドを作成できるようになりました。</target>
        </trans-unit>
        <trans-unit id="603b03047f2e00b82e57c8b074d14b7126ccf5c5" translate="yes" xml:space="preserve">
          <source>Now you can invoke the command from your project root like so:</source>
          <target state="translated">これで、プロジェクトのルートから以下のようにコマンドを呼び出すことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="2058e831fd601da2f65563ddd1ac46c697b4bdfd" translate="yes" xml:space="preserve">
          <source>Now you can omit the &lt;code&gt;--key&lt;/code&gt; flag.</source>
          <target state="translated">これで、 &lt;code&gt;--key&lt;/code&gt; フラグを省略できます。</target>
        </trans-unit>
        <trans-unit id="af51545390e59575c0deca7a0e6e036d9a5e4b3a" translate="yes" xml:space="preserve">
          <source>Now you can open Cypress from your &lt;strong&gt;project root&lt;/strong&gt; one of the following ways:</source>
          <target state="translated">これで、&lt;strong&gt;プロジェクトルート&lt;/strong&gt;から次のいずれかの方法でサイプレスを開くことができます。</target>
        </trans-unit>
        <trans-unit id="376832d2b7e49b3bb27ada5cb0d457814ec1003e" translate="yes" xml:space="preserve">
          <source>Now you can select the error text in the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/344&quot;&gt;#344&lt;/a&gt;.</source>
          <target state="translated">これで、GUIでエラーテキストを選択できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/344&quot;&gt;＃344を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="43a0dc8aaf42def2f849b846d113b2dea48018d5" translate="yes" xml:space="preserve">
          <source>Now you may be thinking, &lt;em&gt;This sounds like a problem with Cypress because when I work with my application outside of Cypress it works just fine.&lt;/em&gt;😒</source>
          <target state="translated">さて、あなたは考えているかもしれません、&lt;em&gt;これはサイプレスの問題のように聞こえ&lt;/em&gt;ます。&lt;em&gt;なぜなら、私がサイプレスの外で私のアプリケーションで作業するとき、それはうまく機能するからです。&lt;/em&gt;😒</target>
        </trans-unit>
        <trans-unit id="3a698bf27667db64b11c913c5a6b57513f656804" translate="yes" xml:space="preserve">
          <source>Now you should see a view explaining how to record your first run.</source>
          <target state="translated">今、あなたの最初のランを記録する方法を説明するビューが表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="7be3c60885c07c6fe478a6044314f3cda9005978" translate="yes" xml:space="preserve">
          <source>Now you&amp;rsquo;ll need to add in the following code in your test file to visit your server:</source>
          <target state="translated">サーバーにアクセスするには、テストファイルに次のコードを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="c061855a4a69d4fb8ffbb939fd779556fe668065" translate="yes" xml:space="preserve">
          <source>Now, by default, screenshots are nested within a folder with the name of &lt;strong&gt;the spec file&lt;/strong&gt; that is currently running. Example - the spec named &lt;code&gt;cypress/integration/foo/bar_spec.js&lt;/code&gt; will save screenshots inside of this directory: &lt;code&gt;cypress/screenshots/foo/bar_spec.js/*&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1826&quot;&gt;#1826&lt;/a&gt;.</source>
          <target state="translated">現在、デフォルトでは、スクリーンショットは、現在実行中の&lt;strong&gt;スペックファイルの&lt;/strong&gt;名前を持つフォルダー内にネストされています。例 &lt;code&gt;cypress/integration/foo/bar_spec.js&lt;/code&gt; という名前の仕様は、スクリーンショットをこのディレクトリ内に保存します： &lt;code&gt;cypress/screenshots/foo/bar_spec.js/*&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1826&quot;&gt;＃1826を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="21e7e0067872c260164232cb882c681393d0d766" translate="yes" xml:space="preserve">
          <source>Now, once you have your login completely tested - you may be tempted to think:</source>
          <target state="translated">さて、一度、あなたのログインを完全にテストしてみましょう-あなたは考えたくなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="7f300c87bed90c9de7fc494ed2e4fa7d5c944d91" translate="yes" xml:space="preserve">
          <source>Nrwl Extensions for Angular</source>
          <target state="translated">Angular用のNrwl拡張機能</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="f6b7c67f781e67d4b5afb7ed0380ce22801f45ad" translate="yes" xml:space="preserve">
          <source>Nx</source>
          <target state="translated">Nx</target>
        </trans-unit>
        <trans-unit id="b8a395c809fba1242259e67ea1bc89b4a0df8989" translate="yes" xml:space="preserve">
          <source>OSX: &lt;code&gt;~/Library/Caches/Cypress&lt;/code&gt;</source>
          <target state="translated">OSX： &lt;code&gt;~/Library/Caches/Cypress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="0663c41ca4dea7fa2729e92795c2f74803c9a968" translate="yes" xml:space="preserve">
          <source>Object of environment variables to set before the command executes (e.g. &lt;code&gt;{USERNAME: 'johndoe'}&lt;/code&gt;). Will be merged with existing system environment variables</source>
          <target state="translated">コマンドの実行前に設定する環境変数のオブジェクト（例： &lt;code&gt;{USERNAME: 'johndoe'}&lt;/code&gt; ）。既存のシステム環境変数とマージされます</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="830ad4a68bd68f89d259b1167a36d1ce2a7ece85" translate="yes" xml:space="preserve">
          <source>Obvious where environment variables come from.</source>
          <target state="translated">環境変数がどこから来るのかは明らかです。</target>
        </trans-unit>
        <trans-unit id="cad6113d4f785fa6b5d4006b8600f370384f24de" translate="yes" xml:space="preserve">
          <source>Occurs after a screenshot is taken.</source>
          <target state="translated">スクリーンショットを撮影した後に発生します。</target>
        </trans-unit>
        <trans-unit id="460f72be573a9be21a00ed92514fd9e7585f488c" translate="yes" xml:space="preserve">
          <source>Occurs immediately before launching a browser.</source>
          <target state="translated">ブラウザを起動する直前に発生します。</target>
        </trans-unit>
        <trans-unit id="97770d10be3ad225c8bd3f73d871f94fd003ad08" translate="yes" xml:space="preserve">
          <source>Occurs in conjunction with the &lt;code&gt;cy.task&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;cy.task&lt;/code&gt; コマンドと一緒に発生します。</target>
        </trans-unit>
        <trans-unit id="161995ee88691351003567301a068f04cd9a2e56" translate="yes" xml:space="preserve">
          <source>Occurs when a spec or spec-related file needs to be transpiled for the browser.</source>
          <target state="translated">仕様や仕様関連のファイルをブラウザ用にトランスパイルする必要がある場合に発生します。</target>
        </trans-unit>
        <trans-unit id="cff6dc2c4b5039c6d00804a3c902a3bd511124e0" translate="yes" xml:space="preserve">
          <source>Of course if the form&amp;rsquo;s &lt;code&gt;submit&lt;/code&gt; event is &lt;code&gt;preventedDefault&lt;/code&gt; the form will not actually be submitted.</source>
          <target state="translated">もちろん、フォームの &lt;code&gt;submit&lt;/code&gt; イベントが &lt;code&gt;preventedDefault&lt;/code&gt; た場合、デフォルトではフォームは実際には送信されません。</target>
        </trans-unit>
        <trans-unit id="351fc6e919ca093fd9846ffd4579c0946ebf85e4" translate="yes" xml:space="preserve">
          <source>Official Cypress Orb for CircleCI configuration.</source>
          <target state="translated">CircleCI設定用の公式サイプレスオーブ。</target>
        </trans-unit>
        <trans-unit id="2a8de9843a8452c8548953e50430e01db1ee690a" translate="yes" xml:space="preserve">
          <source>Official TypeScript definitions for the Cypress API.</source>
          <target state="translated">Cypress API の公式 TypeScript 定義。</target>
        </trans-unit>
        <trans-unit id="3f80ea00ca969abbe7141b32ca301328d0eef806" translate="yes" xml:space="preserve">
          <source>Official docs</source>
          <target state="translated">公式ドキュメント</target>
        </trans-unit>
        <trans-unit id="ba74c0d98b3c935325911caff8c06dfd49274be9" translate="yes" xml:space="preserve">
          <source>Often a Cypress command has built-in assertions that will cause the command to be retried. For example, the &lt;a href=&quot;../../api/commands/eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; command will be retried even without any attached assertions until it finds an element with the given index in the previously yielded list of elements.</source>
          <target state="translated">多くの場合、サイプレスのコマンドには、コマンドを再試行させる組み込みのアサーションがあります。たとえば、&lt;a href=&quot;../../api/commands/eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt;コマンドは、アサーションがアタッチされていなくても、以前に生成された要素のリストで特定のインデックスを持つ要素が見つかるまで再試行されます。</target>
        </trans-unit>
        <trans-unit id="095fe852c11931fb45e6b0673836e9f0e2292216" translate="yes" xml:space="preserve">
          <source>Often times you may load a fixture in a &lt;code&gt;beforeEach&lt;/code&gt; hook but want to utilize the values in your tests.</source>
          <target state="translated">フィクスチャを &lt;code&gt;beforeEach&lt;/code&gt; フックにロードすることがよくありますが、テストで値を利用したい場合があります。</target>
        </trans-unit>
        <trans-unit id="6bd7a2b8347b7e2e3f6affb1a0ae760cbc0793b1" translate="yes" xml:space="preserve">
          <source>Oftentimes either the &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element is covering the exact coordinate we&amp;rsquo;re attempting to interact with. In those cases, the event fires on the child. We even note this for you in the &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt;.</source>
          <target state="translated">多くの場合、 &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; 要素または &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 要素は、操作しようとしている正確な座標をカバーしています。これらの場合、イベントは子供に発生します。これについては、&lt;a href=&quot;test-runner#Command-Log&quot;&gt;コマンドログに&lt;/a&gt;も記録されています。</target>
        </trans-unit>
        <trans-unit id="926d845073c8f0facacd7def3f70e1f5256c1d6c" translate="yes" xml:space="preserve">
          <source>Oftentimes it can be much easier to programmatically control and boot your servers with a Node script.</source>
          <target state="translated">多くの場合、プログラムでノードスクリプトを使ってサーバを制御したり起動したりする方がはるかに簡単です。</target>
        </trans-unit>
        <trans-unit id="fc379aaefa770f8d370e09688c1e21a79f108a6c" translate="yes" xml:space="preserve">
          <source>Oftentimes it&amp;rsquo;s much simpler and conveys what you&amp;rsquo;re trying to test by just using &lt;code&gt;.focus()&lt;/code&gt; directly.</source>
          <target state="translated">多くの場合、それははるかに単純であり、 &lt;code&gt;.focus()&lt;/code&gt; を直接使用するだけでテストしようとしていることを伝えます。</target>
        </trans-unit>
        <trans-unit id="aa205ab96f8bc058412ba2d91b4a4e6078193115" translate="yes" xml:space="preserve">
          <source>Oftentimes it&amp;rsquo;s much simpler and conveys what you&amp;rsquo;re trying to test by just using &lt;code&gt;.submit()&lt;/code&gt; directly.</source>
          <target state="translated">多くの場合、それははるかに単純であり、 &lt;code&gt;.submit()&lt;/code&gt; を直接使用するだけでテストしようとしていることを伝えます。</target>
        </trans-unit>
        <trans-unit id="b1322e59d7c8d278fafe91aefb9c8efbe888dbeb" translate="yes" xml:space="preserve">
          <source>Oftentimes we see users run into problems targeting their elements because:</source>
          <target state="translated">多くの場合、ユーザーが自分の要素をターゲットにすることに問題を抱えているのを目にします。</target>
        </trans-unit>
        <trans-unit id="8ddbd9a737d531ab0fe4a0d9c2415dcae46bda41" translate="yes" xml:space="preserve">
          <source>Oftentimes we see users wanting the ability to use multiple reporters. When running in CI, you might want to generate a report for &lt;code&gt;junit&lt;/code&gt; and perhaps a &lt;code&gt;json&lt;/code&gt; report. This is great, but by setting this reporter you won&amp;rsquo;t receive any additional feedback while the tests are running!</source>
          <target state="translated">多くの場合、ユーザーは複数のレポーターを使用する機能を望んでいます。CIで実行している場合、 &lt;code&gt;junit&lt;/code&gt; のレポートと、おそらく &lt;code&gt;json&lt;/code&gt; レポートを生成することができます。これはすばらしいことですが、このレポーターを設定することで、テストの実行中に追加のフィードバックを受け取ることはありません。</target>
        </trans-unit>
        <trans-unit id="0847e15501719f2aed4a76c1e2f7f53a85939c43" translate="yes" xml:space="preserve">
          <source>Oftentimes you can use &lt;a href=&quot;trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; to show the element before you perform the action.</source>
          <target state="translated">多くの場合、あなたは使用することができます&lt;a href=&quot;trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; を&lt;/a&gt;使用すると、アクションを実行する前に要素を表示します。</target>
        </trans-unit>
        <trans-unit id="6aa7ca4e8e533dee077aa2089b66e61dfe7632fa" translate="yes" xml:space="preserve">
          <source>Oftentimes your application may make initial requests immediately when it loads (such as authenticating a user). Cypress makes it possible to start your server and define routes before a &lt;a href=&quot;visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. Upon the next visit, the server + routes will be instantly applied before your application loads.</source>
          <target state="translated">多くの場合、アプリケーションは、ロードするとすぐに初期リクエストを行う場合があります（ユーザーの認証など）。サイプレスは、サーバーを起動し、&lt;a href=&quot;visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; の&lt;/a&gt;前にルートを定義することを可能にします。次のアクセス時に、サーバー+ルートはアプリケーションがロードされる前に即座に適用されます。</target>
        </trans-unit>
        <trans-unit id="cbefb02e9289d6b26c3cdba50db23715a316dd42" translate="yes" xml:space="preserve">
          <source>Oftentimes, once you have a proper e2e test around logging in, there&amp;rsquo;s no reason to continue to &lt;code&gt;cy.visit()&lt;/code&gt; the login and wait for the entire page to load all associated resources before running any other commands. Doing so can slow down our entire test suite.</source>
          <target state="translated">ログインに関して適切なe2eテストを行った後は、ログインの &lt;code&gt;cy.visit()&lt;/code&gt; を続行し、ページ全体が関連するすべてのリソースをロードするのを待ってから、他のコマンドを実行する必要はありません。これを行うと、テストスイート全体が遅くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b92a8e77c84c136fb698b3705e19c9c1271dd21c" translate="yes" xml:space="preserve">
          <source>Ok, now we want to click on the link we found. How do we do that? You could almost guess this one: just add a &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; command to the end of the previous command, like so:</source>
          <target state="translated">では、見つけたリンクをクリックします。どうすればよいですか？あなたはこれをほぼ推測することができます：次のように、前のコマンドの最後に&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;コマンドを追加するだけです：</target>
        </trans-unit>
        <trans-unit id="4818681e1c851cc4c1a4841177b7bfed26ca79be" translate="yes" xml:space="preserve">
          <source>Ok, we&amp;rsquo;re done talking. Now dive in and get started testing your app!</source>
          <target state="translated">OK、話し終えました。さあ、潜入してアプリのテストを始めましょう！</target>
        </trans-unit>
        <trans-unit id="ac801b81820eacd9039b1a5ed340d48f18649ea0" translate="yes" xml:space="preserve">
          <source>Okay but let&amp;rsquo;s say you&amp;rsquo;re worried about &lt;code&gt;google.com&lt;/code&gt; serving up the right HTML content. How would you test that? Easy! Just make a &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; directly to it. &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;NOT bound to CORS or same-origin policy&lt;/em&gt;.</source>
          <target state="translated">では、 &lt;code&gt;google.com&lt;/code&gt; が適切なHTMLコンテンツを提供することについて心配しているとしましょう。どのようにテストしますか？かんたん！ただ、作る&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;直接に。&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;は&lt;em&gt;CORSまたは同一生成元ポリシーにバインドされていません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b0e29f88362e22e9b7b6132e499444626c8fe13d" translate="yes" xml:space="preserve">
          <source>Older CLI versions will continue to work on &lt;code&gt;0.19.0&lt;/code&gt; except for the &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; command - and will we print a warning to nudge you to upgrade.</source>
          <target state="translated">古いバージョンのCLI は、&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;コマンドを除いて &lt;code&gt;0.19.0&lt;/code&gt; でも引き続き機能します-アップグレードを促す警告を出力します。</target>
        </trans-unit>
        <trans-unit id="4960ddea9f2b277980f54fc15581a1068616a876" translate="yes" xml:space="preserve">
          <source>Omit the fixture file&amp;rsquo;s extension</source>
          <target state="translated">フィクスチャファイルの拡張子を省略</target>
        </trans-unit>
        <trans-unit id="ad01d2cca702011e7b3a083f1f8fd956523749d2" translate="yes" xml:space="preserve">
          <source>On Linux CI you should install the binary from the &amp;ldquo;Testing new linux x64 &amp;hellip;&amp;rdquo; commit.</source>
          <target state="translated">Linux CIでは、「Testing new linux x64&amp;hellip;」コミットからバイナリをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="4823186d4fda336b2a1c959f4230e5aa047019f5" translate="yes" xml:space="preserve">
          <source>On Linux, Cypress scans your &lt;code&gt;PATH&lt;/code&gt; for a number of different binary names. If the browser you are trying to use does not exist under one of the expected binary names, Cypress will not be able to find it.</source>
          <target state="translated">Linuxでは、サイプレスは &lt;code&gt;PATH&lt;/code&gt; をスキャンして、さまざまなバイナリ名を探します。使用しようとしているブラウザーが予期されるバイナリー名のいずれかで存在しない場合、サイプレスはそれを見つけることができません。</target>
        </trans-unit>
        <trans-unit id="1f6f26baba59812cd46044aafda98a99712bee59" translate="yes" xml:space="preserve">
          <source>On Mac, Cypress attempts to find installed browsers by their bundle identifier. If this does not succeed, it will fall back to the Linux browser detection method.</source>
          <target state="translated">Mac では、Cypress はインストールされているブラウザをバンドル識別子で検出しようとします。これが成功しない場合は、Linux ブラウザの検出方法にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="c9440f32e464df5490d7f051ac6f485c1eb689af" translate="yes" xml:space="preserve">
          <source>On Windows, Cypress scans the following locations to try to find each browser:</source>
          <target state="translated">Windowsの場合、Cypressは以下の場所をスキャンして各ブラウザを探そうとします。</target>
        </trans-unit>
        <trans-unit id="84c278636de46335194dd53c093e1de81d16fea3" translate="yes" xml:space="preserve">
          <source>Onboarding dialogs will never show up again once they are dismissed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/522&quot;&gt;#522&lt;/a&gt;.</source>
          <target state="translated">オンボーディングダイアログは、いったん閉じると再び表示されることはありません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/522&quot;&gt;＃522を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="011291e4053e1d9577cd2af8a844ab4c3d02736c" translate="yes" xml:space="preserve">
          <source>Once Cypress detects that a matching XHR has begun its request, it then switches over to the 2nd waiting period. This duration is configured by the &lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt;&lt;code&gt;responseTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;20000&lt;/code&gt; ms.</source>
          <target state="translated">サイプレスは、一致するXHRが要求を開始したことを検出すると、2番目の待機期間に切り替えます。この期間は、&lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt; &lt;code&gt;responseTimeout&lt;/code&gt; &lt;/a&gt;オプションによって構成されます-デフォルトは &lt;code&gt;20000&lt;/code&gt; ミリ秒です。</target>
        </trans-unit>
        <trans-unit id="a20f076e5f8777c9a90eb34904dfed267efc1b9b" translate="yes" xml:space="preserve">
          <source>Once a GitHub repository is associated with a Cypress project, the GitHub integration will be immediately enabled:</source>
          <target state="translated">GitHub リポジトリが Cypress プロジェクトに関連付けられると、GitHub の統合がすぐに有効になります。</target>
        </trans-unit>
        <trans-unit id="bef603f59418eebc2acc2bfa125e9641b628d3d1" translate="yes" xml:space="preserve">
          <source>Once again - we will need another reliable way to achieve this without involving the DOM.</source>
          <target state="translated">もう一度言いますが、DOM を介さずにこれを実現するためには、別の信頼できる方法が必要です。</target>
        </trans-unit>
        <trans-unit id="645c5a6978abf81195f86cc762a7fe7f5f83f59a" translate="yes" xml:space="preserve">
          <source>Once multiple machines are available within your CI environment, you can pass the &lt;a href=&quot;command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag to have your tests run in parallel.</source>
          <target state="translated">CI環境内で複数のマシンが使用可能になったら、&lt;a href=&quot;command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;フラグを渡して、テストを並行して実行できます。</target>
        </trans-unit>
        <trans-unit id="2ebca00326fdb0328843c14d5ba3ccf576f2681d" translate="yes" xml:space="preserve">
          <source>Once multiple machines are available within your CI environment, you can pass the &lt;a href=&quot;command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; key to &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; to have your recorded tests parallelized.</source>
          <target state="translated">CI環境内で複数のマシンが利用可能になったら、&lt;a href=&quot;command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;キーを&lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;に渡して、記録されたテストを並列化できます。</target>
        </trans-unit>
        <trans-unit id="a0063b89d560c8734a0aae5368a8fb9babfd9be2" translate="yes" xml:space="preserve">
          <source>Once that file is created, you should see it in the list of spec files.</source>
          <target state="translated">そのファイルが作成されると、specファイルのリストに表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="4b4069f115b00eed842becb70feb85e3b0ca0a33" translate="yes" xml:space="preserve">
          <source>Once the element is in focus, Cypress will begin firing keyboard events.</source>
          <target state="translated">要素がフォーカスされると、Cypressはキーボードイベントの発射を開始します。</target>
        </trans-unit>
        <trans-unit id="d7e0df75c076e76cc2478a82baa7346d1159d690" translate="yes" xml:space="preserve">
          <source>Once the tests finish, the coverage object can be serialized and saved to disk so that a human-friendly report can be generated. The collected coverage information can also be sent to external services and help during pull request reviews.</source>
          <target state="translated">テストが終了すると、カバレッジオブジェクトをシリアライズしてディスクに保存し、人間に優しいレポートを生成することができます。収集したカバレッジ情報は、外部サービスに送信したり、プルリクエストのレビュー中にヘルプを提供したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="ddcb2e576d529613bdd06656d9cc403d561a1443" translate="yes" xml:space="preserve">
          <source>Once we&amp;rsquo;ve created that file, we should see the Cypress Test Runner immediately display it in the list of Integration Tests. Cypress monitors your spec files for any changes and automatically displays any changes.</source>
          <target state="translated">そのファイルを作成すると、Cypress Test Runnerが統合テストのリストにすぐに表示するのがわかります。サイプレスはスペックファイルの変更を監視し、変更を自動的に表示します。</target>
        </trans-unit>
        <trans-unit id="6e953bed8817624325b42831edb261b7b98b8305" translate="yes" xml:space="preserve">
          <source>Once you get the hang of async code you&amp;rsquo;ll realize you can do everything you could do synchronously, without your code doing any backflips.</source>
          <target state="translated">非同期コードのこつをつかめば、コードでバックフリップを実行しなくても、同期で実行できるすべてのことを実行できることに気付くでしょう。</target>
        </trans-unit>
        <trans-unit id="0399eb7b0a8466dcf593574f482f0bf09a763b19" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;code&gt;stub&lt;/code&gt; or a &lt;code&gt;spy&lt;/code&gt; in hand, you can then create assertions about them.</source>
          <target state="translated">あなたが持ってたら &lt;code&gt;stub&lt;/code&gt; や &lt;code&gt;spy&lt;/code&gt; 手にし、あなたはその後、それらについてのアサーションを作成することができます。</target>
        </trans-unit>
        <trans-unit id="6ad1296add3d2fee8297511b1e2c6c31f26c0009" translate="yes" xml:space="preserve">
          <source>Once you log in to the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt; you can view any &lt;a href=&quot;projects#Public-vs-Private&quot;&gt;public project&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;ダッシュボードサービスに&lt;/a&gt;ログインすると、&lt;a href=&quot;projects#Public-vs-Private&quot;&gt;パブリックプロジェクトを&lt;/a&gt;表示できます。</target>
        </trans-unit>
        <trans-unit id="66d0e71aeeae9c09bf48576ac479ea9f39b5aec9" translate="yes" xml:space="preserve">
          <source>Once you save again, you&amp;rsquo;ll see Cypress display the failing test in red since &lt;code&gt;true&lt;/code&gt; does not equal &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">もう一度保存すると、 &lt;code&gt;true&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; と等しくないため、サイプレスは失敗したテストを赤で表示します。</target>
        </trans-unit>
        <trans-unit id="7be564fe5aafaa3b0e8ce7145d3c03a77422dcd2" translate="yes" xml:space="preserve">
          <source>Once you save this file you should see the browser reload.</source>
          <target state="translated">このファイルを保存すると、ブラウザがリロードされます。</target>
        </trans-unit>
        <trans-unit id="61bd7090d8718a3dd009b4e986354c4a9a9de5ad" translate="yes" xml:space="preserve">
          <source>Once you set up your project to record, we generate a unique &lt;code&gt;projectId&lt;/code&gt; for your project and automatically insert it into your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">記録するプロジェクトをセットアップすると、プロジェクトに一意の &lt;code&gt;projectId&lt;/code&gt; が生成され、 &lt;code&gt;cypress.json&lt;/code&gt; ファイルに自動的に挿入されます。</target>
        </trans-unit>
        <trans-unit id="43018e251fa63222ebc94f97be8c612cdbcfe078" translate="yes" xml:space="preserve">
          <source>Once you start a server with &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt;, all requests will be controllable for the remainder of the test. When a new test runs, Cypress will restore the default behavior and remove all routing and stubbing. For a complete reference of the API and options, refer to the documentation for each command.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;でサーバーを起動すると、残りのテストの間、すべてのリクエストを制御できます。新しいテストを実行すると、サイプレスはデフォルトの動作を復元し、ルーティングとスタブをすべて削除します。APIとオプションの完全なリファレンスについては、各コマンドのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9c2bd277f31482bc5354dbd9f9d14fe0ad057d8f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re set up to record test runs, we automatically generate a &lt;em&gt;Record Key&lt;/em&gt; for the project.</source>
          <target state="translated">テストの実行を記録するように設定すると、プロジェクトの&lt;em&gt;記録キーが&lt;/em&gt;自動的に生成されます。</target>
        </trans-unit>
        <trans-unit id="65115baa350039d4bef2d656ae17e1944d8acaa5" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve enabled &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; you can control time by &lt;strong&gt;ticking&lt;/strong&gt; it ahead by milliseconds.</source>
          <target state="translated">あなたが有効にしたら&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;あなたは、時間を制御することができ&lt;strong&gt;カチカチ&lt;/strong&gt;ミリ秒単位で先にそれを。</target>
        </trans-unit>
        <trans-unit id="90c10f46aeeea8c2a71abb45e9f26f3d163137bb" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve established it&amp;rsquo;s working you can then use stubs to test all of the edge cases and additional scenarios. There are no benefits to using real data in the vast majority of cases. We recommend that the vast majority of tests use stub data. They will be orders of magnitude faster, and much less complex.</source>
          <target state="translated">それが機能していることを確認したら、スタブを使用して、すべてのエッジケースと追加のシナリオをテストできます。ほとんどの場合、実際のデータを使用してもメリットはありません。テストの大部分はスタブデータを使用することをお勧めします。それらは桁違いに速く、はるかに複雑ではありません。</target>
        </trans-unit>
        <trans-unit id="56fafd8d718991ba5c8832f5c726ccc5587e41f7" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve read through the documentation below, we invite you to experience the power of Cypress reporters via &lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress/blob/master/slides/09-reporters/PITCHME.md&quot;&gt;Section 9&lt;/a&gt; of our open source &lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress&quot;&gt;testing workshop for Cypress&lt;/a&gt;.</source>
          <target state="translated">以下のドキュメントをお読みになりましたら、サイプレスのオープンソース&lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress&quot;&gt;テストワークショップの&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress/blob/master/slides/09-reporters/PITCHME.md&quot;&gt;セクション9&lt;/a&gt;でサイプレスレポーターの力を体験してください。</target>
        </trans-unit>
        <trans-unit id="df157874970327fef8f9a7b22d9180ff38fd346e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve started the GitHub App installation process &lt;a href=&quot;#Install-via-organization-integration-settings&quot;&gt;via a Cypress organization's settings&lt;/a&gt; or &lt;a href=&quot;#Install-via-project-settings&quot;&gt;a project's settings&lt;/a&gt;, you will be directed to GitHub.com to complete the installation:</source>
          <target state="translated">&lt;a href=&quot;#Install-via-organization-integration-settings&quot;&gt;サイプレス組織の設定&lt;/a&gt;または&lt;a href=&quot;#Install-via-project-settings&quot;&gt;プロジェクトの設定&lt;/a&gt;を介してGitHubアプリのインストールプロセスを開始すると、GitHub.comに移動してインストールを完了します。</target>
        </trans-unit>
        <trans-unit id="ef066aebc4725ac85c7003ac5b1e6845f4ee4226" translate="yes" xml:space="preserve">
          <source>Once your server is running, it&amp;rsquo;s time to visit it.</source>
          <target state="translated">サーバーが実行されたら、次にアクセスします。</target>
        </trans-unit>
        <trans-unit id="3a18e89d10a438c45e22b562ec9ef6caa981ee4e" translate="yes" xml:space="preserve">
          <source>One Superdomain per Test</source>
          <target state="translated">テストごとに1つのスーパードメイン</target>
        </trans-unit>
        <trans-unit id="d8ca14dc5c9bc4a29e0e98ac529afdc92830cb5d" translate="yes" xml:space="preserve">
          <source>One advantage of declaratively waiting for responses is that it decreases test flake. You can think of &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; as a guard that indicates to Cypress when you expect a request to be made that matches a specific routing alias. This prevents the next commands from running until responses come back and it guards against situations where your requests are initially delayed.</source>
          <target state="translated">宣言的に応答を待つことの1つの利点は、テストフレークが減少することです。&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;は、特定のルーティングエイリアスに一致するリクエストが行われると予想されるときにサイプレスに指示するガードと考えることができます。これにより、応答が返ってくるまで次のコマンドが実行されなくなり、要求が最初に遅延する状況から保護されます。</target>
        </trans-unit>
        <trans-unit id="99fbabcaf5016959edd6e7659e1949fbbee545fd" translate="yes" xml:space="preserve">
          <source>One check per &lt;a href=&quot;../guides/parallelization#Grouping-test-runs&quot;&gt;run group&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/parallelization#Grouping-test-runs&quot;&gt;実行グループ&lt;/a&gt;ごとに1つのチェック。</target>
        </trans-unit>
        <trans-unit id="7bcb5f0dc971ff33d07dfedb7418ee56f85d5f9c" translate="yes" xml:space="preserve">
          <source>One common scenario Cypress supports is visiting a remote page and also preventing any Ajax requests from immediately going out.</source>
          <target state="translated">Cypressがサポートしている一般的なシナリオは、リモートページを訪問し、Ajaxリクエストがすぐに外に出ないようにすることです。</target>
        </trans-unit>
        <trans-unit id="5ab08fdaa1121402661faf3f153de76b816f92fc" translate="yes" xml:space="preserve">
          <source>One final question you should ask yourself is - is resetting the state even necessary? Remember, Cypress already automatically clears &lt;a href=&quot;../../api/commands/clearlocalstorage&quot;&gt;&lt;code&gt;localStorage&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;cookies&lt;/a&gt;, sessions, etc before each test. Make sure you are not trying to clean up state that is already cleaned up by Cypress automatically.</source>
          <target state="translated">あなたが自問すべき最後の1つの質問は、状態をリセットすることは必要ですか？サイプレスは、各テストの前に&lt;a href=&quot;../../api/commands/clearlocalstorage&quot;&gt; &lt;code&gt;localStorage&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;Cookie&lt;/a&gt;、セッションなどをすでに自動的に消去していることに注意してください。サイプレスが既に自動的にクリーンアップしている状態をクリーンアップしようとしていないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="33cfe5e191ba0a56ee0afcff13839288db466f93" translate="yes" xml:space="preserve">
          <source>One group can be called &lt;code&gt;package/admin&lt;/code&gt;:</source>
          <target state="translated">1つのグループは &lt;code&gt;package/admin&lt;/code&gt; と呼ぶことができます：</target>
        </trans-unit>
        <trans-unit id="c6a3eb70df3cbaaa6934879c33c8e92b96116084" translate="yes" xml:space="preserve">
          <source>One last thing to consider here is that every once in a while we discover bugs in Cypress that lead to &lt;code&gt;cross origin&lt;/code&gt; errors that can otherwise be fixed. If you think you&amp;rsquo;re experiencing a bug, &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;come into our chat&lt;/a&gt; or &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;open an issue&lt;/a&gt;.</source>
          <target state="translated">ここで最後に考慮すべきことの1つは、サイプレスのバグを発見することがあり、他の方法では修正できる &lt;code&gt;cross origin&lt;/code&gt; エラーにつながることです。バグが発生していると思われる場合は&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;、チャットに参加する&lt;/a&gt;か&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;、問題を開い&lt;/a&gt;てください。</target>
        </trans-unit>
        <trans-unit id="dea7df5aa0d1d03d862bdc311a977082dc295e02" translate="yes" xml:space="preserve">
          <source>One of the &lt;strong&gt;best&lt;/strong&gt; parts of Cypress is its emphasis on debuggability. Unlike other testing tools - when your tests end - you are left with your working application at the exact point where your test finished.</source>
          <target state="translated">サイプレスの&lt;strong&gt;優れた点の&lt;/strong&gt; 1つは、デバッグ可能性に重点を置いていることです。他のテストツールとは異なり、テストが終了すると、テストが終了した正確な時点で作業アプリケーションが残ります。</target>
        </trans-unit>
        <trans-unit id="0096c1d79bb67b777dba0d7d1ac6863a9ae96235" translate="yes" xml:space="preserve">
          <source>One of the first (and arguably one of the hardest) hurdles you&amp;rsquo;ll have to overcome is testing logging into your application.</source>
          <target state="translated">あなたが克服しなければならない最初の（そして間違いなく最も難しい）ハードルの1つは、アプリケーションへのログインのテストです。</target>
        </trans-unit>
        <trans-unit id="c8229342ccbc579a23cd59bab8b73537a2a26607" translate="yes" xml:space="preserve">
          <source>One of the first things many of our users attempt to do is involve 3rd party servers in their tests.</source>
          <target state="translated">多くのユーザーが最初にやろうとしていることの一つは、サードパーティのサーバーをテストに参加させることです。</target>
        </trans-unit>
        <trans-unit id="9d8bcb0207134d49a9e3f55925befc6393c9fc00" translate="yes" xml:space="preserve">
          <source>One thing you may notice though is that Cypress still enforces visiting a single superdomain with &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, but there is an &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/944&quot;&gt;issue open&lt;/a&gt; to change this restriction.</source>
          <target state="translated">ただし、サイプレスはまだ&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;を使用して単一のスーパードメインへのアクセスを強制していることに気づくかもしれませんが、この制限を変更するために未&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/944&quot;&gt;解決の問題&lt;/a&gt;があります。</target>
        </trans-unit>
        <trans-unit id="457ab9a26866612d36a45121ce34a18db2475033" translate="yes" xml:space="preserve">
          <source>Only the &lt;em&gt;first&lt;/em&gt; matched element will be returned</source>
          <target state="translated">&lt;em&gt;最初に&lt;/em&gt;一致した要素のみが返されます</target>
        </trans-unit>
        <trans-unit id="5aff459157afcaf73e456dcae0a96b977982d896" translate="yes" xml:space="preserve">
          <source>Only the last command is retried</source>
          <target state="translated">最後のコマンドのみ再試行</target>
        </trans-unit>
        <trans-unit id="9496a560deca4edbd47eedf83e966a2ccc9af00b" translate="yes" xml:space="preserve">
          <source>Only valid when providing a &lt;code&gt;--group&lt;/code&gt; or &lt;code&gt;--parallel&lt;/code&gt; flag. Read our &lt;a href=&quot;parallelization&quot;&gt;parallelization&lt;/a&gt; documentation to learn more.</source>
          <target state="translated">&lt;code&gt;--group&lt;/code&gt; または &lt;code&gt;--parallel&lt;/code&gt; フラグを指定する場合にのみ有効です。詳細については、&lt;a href=&quot;parallelization&quot;&gt;並列&lt;/a&gt;化のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="adedc0e77ab345ac5fba97224bb370e27193c174" translate="yes" xml:space="preserve">
          <source>Only works for values that should be the same on across all machines.</source>
          <target state="translated">すべてのマシンで同じ値でなければならない場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="d1df40d932308f58d1eb31e3ca3803824eb1a869" translate="yes" xml:space="preserve">
          <source>Open Cypress in detached mode</source>
          <target state="translated">アタッチモードでサイプレスを開く</target>
        </trans-unit>
        <trans-unit id="549a3606dec10c5fbc820ae7919714e2a25f6119" translate="yes" xml:space="preserve">
          <source>Open Cypress via &lt;code&gt;cypress open&lt;/code&gt;</source>
          <target state="translated">サイプレスオープン経由でサイプレスを &lt;code&gt;cypress open&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa0a1b82caad1cbc6f27f1e611b6a4651948b916" translate="yes" xml:space="preserve">
          <source>Open Source Plan</source>
          <target state="translated">オープンソースプラン</target>
        </trans-unit>
        <trans-unit id="6cc3364a242cbf9be7ce547554de30d92585b0cd" translate="yes" xml:space="preserve">
          <source>Open source</source>
          <target state="translated">オープンソース</target>
        </trans-unit>
        <trans-unit id="7feeb6405514b8dd84fd1151a4fdc736f529b33b" translate="yes" xml:space="preserve">
          <source>Open sourced another core repo: &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;Cypress Core Test Runner&lt;/a&gt; which makes up the Cypress Desktop Application.</source>
          <target state="translated">オープンソースの別のコアリポジトリ：サイプレスデスクトップアプリケーションを構成するサイプレス&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;コアテストランナー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="787657c640af126142117ee9a64a489a980b9f3e" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;cypress.json&lt;/code&gt;, which you will find in your project root (where you installed Cypress.) It starts out empty:</source>
          <target state="translated">プロジェクトのルート（Cypressをインストールした場所）にある &lt;code&gt;cypress.json&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="322aa3b169a8824e905342ea6f1bf4d2c8949463" translate="yes" xml:space="preserve">
          <source>Open up Registry Editor by pressing WinKey+R and typing &lt;code&gt;regedit.exe&lt;/code&gt;</source>
          <target state="translated">WinKey + Rを押し、 &lt;code&gt;regedit.exe&lt;/code&gt; と入力して、レジストリエディターを開きます。</target>
        </trans-unit>
        <trans-unit id="358d384c0eba45a65af1c353ab0d4eb9b978ba85" translate="yes" xml:space="preserve">
          <source>Open up your Dev Tools and click on the &lt;code&gt;GET&lt;/code&gt; for the &lt;code&gt;.action-email&lt;/code&gt; class selector.</source>
          <target state="translated">開発ツールを開き、 &lt;code&gt;.action-email&lt;/code&gt; クラスセレクターの &lt;code&gt;GET&lt;/code&gt; をクリックします。</target>
        </trans-unit>
        <trans-unit id="e388bf6b6d29ece502d5c6eb8fde2f43021194fc" translate="yes" xml:space="preserve">
          <source>Open up your favorite IDE and add the code below to our &lt;code&gt;sample_spec.js&lt;/code&gt; test file.</source>
          <target state="translated">お気に入りのIDEを開き、以下のコードを &lt;code&gt;sample_spec.js&lt;/code&gt; テストファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="38a84cf82b69c037086a0394837dbdbd077a4315" translate="yes" xml:space="preserve">
          <source>Open up your project in Cypress via &lt;code&gt;cypress open&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cypress open&lt;/code&gt; を介してサイプレスでプロジェクトを開きます。</target>
        </trans-unit>
        <trans-unit id="9939506f8a17c9637f3d8b4761737922b0c38e2f" translate="yes" xml:space="preserve">
          <source>Opening Cypress</source>
          <target state="translated">オープニングサイプレス</target>
        </trans-unit>
        <trans-unit id="00a7e00440d823f7dd5d2321c2f4cedcf2a9d5c9" translate="yes" xml:space="preserve">
          <source>Opening Cypress in global mode is useful if you have multiple nested projects but want to share a single global installation of Cypress. In this case you can add each nested project to the Cypress in global mode, thus giving you a nice UI to switch between them.</source>
          <target state="translated">Cypressをグローバルモードで開くのは、複数の入れ子になったプロジェクトを持っているが、一つのCypressのグローバルインストールを共有したい場合に便利です。この場合、入れ子になっている各プロジェクトをグローバルモードでCypressに追加することができます。</target>
        </trans-unit>
        <trans-unit id="5de73a2b39ef7eb2ae43ad368b796a0ae5a25b42" translate="yes" xml:space="preserve">
          <source>Opens the Cypress Test Runner in interactive mode.</source>
          <target state="translated">インタラクティブモードで Cypress Test Runner を開きます。</target>
        </trans-unit>
        <trans-unit id="d8623dd1b7e9d853708b7d57679c46236fb6c059" translate="yes" xml:space="preserve">
          <source>Operating system version</source>
          <target state="translated">オペレーティングシステムのバージョン</target>
        </trans-unit>
        <trans-unit id="83517ba1df481bff4d5f44fa1fd8f3f8f0740ddb" translate="yes" xml:space="preserve">
          <source>Operating system version and browser version.</source>
          <target state="translated">オペレーティングシステムのバージョンとブラウザのバージョン。</target>
        </trans-unit>
        <trans-unit id="c025e1e57b8199e6351b41f7949ac3b6927005cd" translate="yes" xml:space="preserve">
          <source>Operation system name</source>
          <target state="translated">運用システム名</target>
        </trans-unit>
        <trans-unit id="8aac54081d0a934ec893c1a88295f5f6e352678f" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; の&lt;/a&gt;反対</target>
        </trans-unit>
        <trans-unit id="2f48120db6999232566be38e94c8ea0907727771" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;a href=&quot;not&quot;&gt;&lt;code&gt;.not()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;not&quot;&gt; &lt;code&gt;.not()&lt;/code&gt; の&lt;/a&gt;反対</target>
        </trans-unit>
        <trans-unit id="7343562a97828c8398dd9d230b8e463de1025253" translate="yes" xml:space="preserve">
          <source>Opt out of sending exception data to Cypress</source>
          <target state="translated">サイプレスへの例外データ送信のオプトアウト</target>
        </trans-unit>
        <trans-unit id="039129dcc8892ac781a6d577f4bb1f3fe8e579d4" translate="yes" xml:space="preserve">
          <source>Opt out on Linux or macOS</source>
          <target state="translated">LinuxやmacOSでのオプトアウト</target>
        </trans-unit>
        <trans-unit id="a64df27ddf187fd87993b59cd1f6b0e38f8c0f07" translate="yes" xml:space="preserve">
          <source>Opt out on Windows</source>
          <target state="translated">Windowsでのオプトアウト</target>
        </trans-unit>
        <trans-unit id="09524cb8114203476e925e19331a84b8bb0785c7" translate="yes" xml:space="preserve">
          <source>Optimized first test run after hard refresh.</source>
          <target state="translated">ハードリフレッシュ後の最初のテスト実行を最適化しました。</target>
        </trans-unit>
        <trans-unit id="c3bcf47692f749ede7fe7aba18645d0061f390d4" translate="yes" xml:space="preserve">
          <source>Optimized performance for hovering / exiting commands. Heavily reduced the CPU on revert / restore the DOM.</source>
          <target state="translated">コマンドのホバリング/終了時のパフォーマンスを最適化しました。リバート/リストア時のCPUを大幅に削減しました。</target>
        </trans-unit>
        <trans-unit id="522858793295427c7800f3482d3abb70024373e9" translate="yes" xml:space="preserve">
          <source>Optimized performance of command lists.</source>
          <target state="translated">コマンドリストのパフォーマンスを最適化しました。</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="1f034c31204d862f3fafd97195c6f6818c48fd9b" translate="yes" xml:space="preserve">
          <source>Option #1: &lt;code&gt;cypress.json&lt;/code&gt;</source>
          <target state="translated">オプション＃1： &lt;code&gt;cypress.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f028893a48daebc2deaaac90b65fd94fc68c910" translate="yes" xml:space="preserve">
          <source>Option #2: &lt;code&gt;cypress.env.json&lt;/code&gt;</source>
          <target state="translated">オプション＃2： &lt;code&gt;cypress.env.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acc7c2e11bcf1c107b7e26c1f684644f3a3cc738" translate="yes" xml:space="preserve">
          <source>Option #3: &lt;code&gt;CYPRESS_*&lt;/code&gt;</source>
          <target state="translated">オプション＃3： &lt;code&gt;CYPRESS_*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a64457d06c7bc99cbaefc6a9533a870ca642a111" translate="yes" xml:space="preserve">
          <source>Option #4: &lt;code&gt;--env&lt;/code&gt;</source>
          <target state="translated">オプション＃4：-- &lt;code&gt;--env&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f471d69777771b5ee06f9e62ff05b7cf24245fae" translate="yes" xml:space="preserve">
          <source>Option #5: Plugins</source>
          <target state="translated">オプション#5:プラグイン</target>
        </trans-unit>
        <trans-unit id="1a14a0d7b093514d6c33982fdca31a9bf14d464c" translate="yes" xml:space="preserve">
          <source>Optional with Types</source>
          <target state="translated">タイプでオプション</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="1244c0634596c218c84666eb43b95bbb27f0ae5f" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;cypress open&lt;/code&gt; will automatically be applied to the project you open. These persist on all projects until you quit the Cypress Test Runner. These options will also override values in &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cypress open&lt;/code&gt; 渡されたオプションは、開いているプロジェクトに自動的に適用されます。これらは、サイプレステストランナーを終了するまで、すべてのプロジェクトで持続します。これらのオプションは、 &lt;code&gt;cypress.json&lt;/code&gt; の値もオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="8941428310c6eee57bc8705cffaf426d3a2e5406" translate="yes" xml:space="preserve">
          <source>Or Chrome Canary:</source>
          <target state="translated">もしくはクロームカナリア。</target>
        </trans-unit>
        <trans-unit id="69d8e4068a02f7b7ff38ecfe7805f2cb9370bcdd" translate="yes" xml:space="preserve">
          <source>Or in the Given, When, Then syntax:</source>
          <target state="translated">あるいは Given,When,Then の構文で。</target>
        </trans-unit>
        <trans-unit id="075d46ef0da1626f74ef520838cdbd8dad2c09e5" translate="yes" xml:space="preserve">
          <source>Or one check per spec file.</source>
          <target state="translated">または、スペックファイルごとに1つのチェック。</target>
        </trans-unit>
        <trans-unit id="d1de00c730d787028891cd81f075376b7d6ea81c" translate="yes" xml:space="preserve">
          <source>Or set record key as environment variable</source>
          <target state="translated">または、環境変数としてレコードキーを設定</target>
        </trans-unit>
        <trans-unit id="31fdfb86e72c3486dc20ada33b8560b64105f920" translate="yes" xml:space="preserve">
          <source>Or via &lt;code&gt;this.clock&lt;/code&gt;:</source>
          <target state="translated">または &lt;code&gt;this.clock&lt;/code&gt; を介して：</target>
        </trans-unit>
        <trans-unit id="07605242f7a070b43bdc103189dccf6a5cc43506" translate="yes" xml:space="preserve">
          <source>Organizations</source>
          <target state="translated">Organizations</target>
        </trans-unit>
        <trans-unit id="1de172d9322cfcfe717f545e2ecb33091c256184" translate="yes" xml:space="preserve">
          <source>Organizations are used to group projects and manage access to those projects.</source>
          <target state="translated">組織は、プロジェクトをグループ化し、それらのプロジェクトへのアクセスを管理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a9c85825e284e10a0f3e973d528398d4faeffeae" translate="yes" xml:space="preserve">
          <source>Organize desktop vs mobile tests separately</source>
          <target state="translated">デスクトップとモバイルのテストを別々に整理する</target>
        </trans-unit>
        <trans-unit id="e6edb79bd3299492851baf099d1440283a3e86f2" translate="yes" xml:space="preserve">
          <source>Organize projects</source>
          <target state="translated">プロジェクトの整理</target>
        </trans-unit>
        <trans-unit id="f0336ca0b112897804e1308b65551001120f1017" translate="yes" xml:space="preserve">
          <source>Organized files around in preparation for OS release.</source>
          <target state="translated">OSリリースに向けて、ファイルの整理をしました。</target>
        </trans-unit>
        <trans-unit id="3661d984d680ac44e98a3b8527c0fd1ef2eede8a" translate="yes" xml:space="preserve">
          <source>Organizing</source>
          <target state="translated">Organizing</target>
        </trans-unit>
        <trans-unit id="3f5c63b2b821d22bce8f1aeeadafe5bb2c7ba1bd" translate="yes" xml:space="preserve">
          <source>Organizing Tests, Logging In, Controlling State</source>
          <target state="translated">テストの整理、ログイン、状態の制御</target>
        </trans-unit>
        <trans-unit id="86e4e3875420cdee95d08d4472073493729a7aee" translate="yes" xml:space="preserve">
          <source>Orientation</source>
          <target state="translated">Orientation</target>
        </trans-unit>
        <trans-unit id="718591843f9ba65a328acf7e21cfb68fa2042427" translate="yes" xml:space="preserve">
          <source>Other Events</source>
          <target state="translated">その他のイベント</target>
        </trans-unit>
        <trans-unit id="a0f0ed667090e2b4da8a08677ee6af9717b63780" translate="yes" xml:space="preserve">
          <source>Other Library Utilities</source>
          <target state="translated">その他のライブラリユーティリティ</target>
        </trans-unit>
        <trans-unit id="9633103b8382b75b3eaa31a6dbe6ab1d02153685" translate="yes" xml:space="preserve">
          <source>Other commands have other default assertions not related to the DOM.</source>
          <target state="translated">他のコマンドは、DOM に関係のない他のデフォルトのアサーションを持っています。</target>
        </trans-unit>
        <trans-unit id="134fb8d2ae04d2d3c9a9a4af6ad1692000839276" translate="yes" xml:space="preserve">
          <source>Other header edge cases fixed.</source>
          <target state="translated">その他のヘッダのエッジケースを修正しました。</target>
        </trans-unit>
        <trans-unit id="9a74839fb329210cefc15f752a6622604d7bd388" translate="yes" xml:space="preserve">
          <source>Other scenarios are fixed where command options would show incorrect number of object keys due to a bug in underscore&amp;rsquo;s &lt;code&gt;reduce&lt;/code&gt; with an object that has a &lt;code&gt;length&lt;/code&gt; key. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/35&quot;&gt;#35&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; キーを持つオブジェクトを &lt;code&gt;reduce&lt;/code&gt; したアンダースコアの削減のバグが原因で、コマンドオプションが誤った数のオブジェクトキーを表示する他のシナリオが修正されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/35&quot;&gt;＃35を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b1b918a54461b6ca203ece2f7ef887446cdd145c" translate="yes" xml:space="preserve">
          <source>Other than that, you&amp;rsquo;ll have to wait for us to implement APIs to support this (check our &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/136&quot;&gt;open issue&lt;/a&gt;), or you can &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disable web security&lt;/a&gt;.</source>
          <target state="translated">それ以外は、これをサポートするAPIを実装するまで待つ必要があります（&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/136&quot;&gt;未解決の問題を&lt;/a&gt;確認してください）。または、&lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;Webセキュリティ&lt;/a&gt;を無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="a6a1d57adbc55a74cd8d7e46f6465f90cae14723" translate="yes" xml:space="preserve">
          <source>Others, such as DOM based commands will automatically &lt;a href=&quot;retry-ability&quot;&gt;retry&lt;/a&gt; and wait for their corresponding elements to exist before failing.</source>
          <target state="translated">DOMベースのコマンドなどの他のものは、自動的に&lt;a href=&quot;retry-ability&quot;&gt;再試行し&lt;/a&gt;、失敗する前に対応する要素が存在するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="b64eeb9f052228eb6127e939fd69a0fcd34b7810" translate="yes" xml:space="preserve">
          <source>Our &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;&amp;ldquo;Node Modules&amp;rdquo; recipes&lt;/a&gt; show you how to modify the support file.</source>
          <target state="translated">私たちの&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;「ノードモジュール」のレシピは、&lt;/a&gt;サポートファイルを変更する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d8cf6c038b7ecc3bd2037fbd2a871b0c1e37a427" translate="yes" xml:space="preserve">
          <source>Our &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat&lt;/a&gt; has now been directly integrated into Cypress&amp;rsquo;s nav. Clicking on the &lt;code&gt;chat&lt;/code&gt; icon will immediately display the current gitter chat log.</source>
          <target state="translated">これで、&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;チャット&lt;/a&gt;がサイプレスのナビゲーションに直接統合されました。 &lt;code&gt;chat&lt;/code&gt; アイコンをクリックすると、現在のGitterチャットログがすぐに表示されます。</target>
        </trans-unit>
        <trans-unit id="b84dd6ed27ebbb24161fb20cd13e9c9446790489" translate="yes" xml:space="preserve">
          <source>Our algorithm &lt;em&gt;should&lt;/em&gt; always be able to scroll until the element is not covered.</source>
          <target state="translated">要素がカバーされなくなるまで、アルゴリズム&lt;em&gt;は&lt;/em&gt;常にスクロールできる&lt;em&gt;必要&lt;/em&gt;があります。</target>
        </trans-unit>
        <trans-unit id="a870abe4c860977f849cc1f630781f46ffcd7fba" translate="yes" xml:space="preserve">
          <source>Our application correctly processing the response.</source>
          <target state="translated">当社のアプリケーションは、応答を正しく処理しています。</target>
        </trans-unit>
        <trans-unit id="04b5c88478c6a72f90ab7e86e7bf14012bd5b57b" translate="yes" xml:space="preserve">
          <source>Our application inserting the results into the DOM.</source>
          <target state="translated">私たちのアプリケーションは、結果をDOMに挿入します。</target>
        </trans-unit>
        <trans-unit id="a3ddf5a85c47d7464247fdd4ad5f82292ed8284e" translate="yes" xml:space="preserve">
          <source>Our application making a request to the correct URL.</source>
          <target state="translated">正しいURLへのリクエストを行っている当社のアプリケーション。</target>
        </trans-unit>
        <trans-unit id="af3d530a585a8e1bc006a72ddbadc9663b1582e9" translate="yes" xml:space="preserve">
          <source>Our build and testing processes have been upgraded to accommodate Linux builds.</source>
          <target state="translated">私たちのビルドとテストプロセスは、Linuxビルドに対応するようにアップグレードされました。</target>
        </trans-unit>
        <trans-unit id="079b47f75703a22d5288bf3ca08f7f9e8baf8b77" translate="yes" xml:space="preserve">
          <source>Our internal proxy no longer strips &lt;code&gt;HttpOnly&lt;/code&gt; cookie flags.</source>
          <target state="translated">内部プロキシは、 &lt;code&gt;HttpOnly&lt;/code&gt; Cookieフラグを削除しなくなりました。</target>
        </trans-unit>
        <trans-unit id="0f2b1d5242f8bd9da93bf9465b342f83bf4228db" translate="yes" xml:space="preserve">
          <source>Our mission</source>
          <target state="translated">私たちの使命</target>
        </trans-unit>
        <trans-unit id="5faefe610314fb559126eea0cf9344887304000f" translate="yes" xml:space="preserve">
          <source>Our mission is to build a thriving, open source ecosystem that enhances productivity, makes testing an enjoyable experience, and generates developer happiness. We hold ourselves accountable to champion a testing process &lt;strong&gt;that actually works&lt;/strong&gt;.</source>
          <target state="translated">私たちの使命は、生産性を高め、テストを楽しい体験にして、開発者の幸福を生み出す、繁栄しているオープンソースのエコシステムを構築することです。私たちは&lt;strong&gt;、実際に機能&lt;/strong&gt;するテストプロセスを擁護する責任を負っています。</target>
        </trans-unit>
        <trans-unit id="c36f22791b58a721576a2ea6c34e8bd392f10c81" translate="yes" xml:space="preserve">
          <source>Our mission, and what we believe in</source>
          <target state="translated">私たちの使命、私たちが信じていること</target>
        </trans-unit>
        <trans-unit id="764a968fc502f358b28aeda7baffb35af3131b9f" translate="yes" xml:space="preserve">
          <source>Our official list of Cypress plugins.</source>
          <target state="translated">Cypressプラグインの公式リストです。</target>
        </trans-unit>
        <trans-unit id="3f30a4728b3ddc300ec54d283646606d6079b0eb" translate="yes" xml:space="preserve">
          <source>Our run will generate files &lt;code&gt;cypress/results/mochawesome.json, cypress/results/mochawesome_001.json, ...&lt;/code&gt;. Then we can combine them using the &lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt; utility.</source>
          <target state="translated">実行すると、ファイル &lt;code&gt;cypress/results/mochawesome.json, cypress/results/mochawesome_001.json, ...&lt;/code&gt; が生成されます。次に、&lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt;ユーティリティを使用してそれらを組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="828b52eb03deb7deb2c7275716d13c839d78b132" translate="yes" xml:space="preserve">
          <source>Our team is always planning and working on really &amp;ldquo;big&amp;rdquo; upcoming features. Priorities can change as we move forward, but here is an outline of where Cypress is headed now.</source>
          <target state="translated">私たちのチームは、常に「大きな」今後の機能を計画し、取り組んでいます。私たちが前進するにつれて優先順位は変わる可能性がありますが、これはサイプレスが現在向かっているところの概要です。</target>
        </trans-unit>
        <trans-unit id="900f285ccd208a81b53230dc6914a439983fdea3" translate="yes" xml:space="preserve">
          <source>Our test can confirm the property was properly set.</source>
          <target state="translated">当社のテストでは、物件が正しく設定されているかどうかを確認することができます。</target>
        </trans-unit>
        <trans-unit id="41d947e0f7db689e7999246dec22a51df898a054" translate="yes" xml:space="preserve">
          <source>Our test should now display &lt;code&gt;CONTAINS&lt;/code&gt; in the &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; and still be green.</source>
          <target state="translated">これでテストの&lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;コマンドログに&lt;/a&gt; &lt;code&gt;CONTAINS&lt;/code&gt; が表示され、緑色のままになります。</target>
        </trans-unit>
        <trans-unit id="6dc11a421caea45bb7bf80b53ddf9ed997ebaa3d" translate="yes" xml:space="preserve">
          <source>Our unit test is hitting the line we could not reach from the end-to-end tests, and if we execute all spec files - we will get 100% code coverage.</source>
          <target state="translated">私たちのユニットテストは、エンドツーエンドのテストでは到達できなかったラインにヒットしており、すべてのスペックファイルを実行すれば-100%のコードカバレッジを得ることができます。</target>
        </trans-unit>
        <trans-unit id="de107cd8214241da67abb1dce8f61cdc7e52cba4" translate="yes" xml:space="preserve">
          <source>Our users are typically developers or QA engineers building web applications using modern JavaScript frameworks.</source>
          <target state="translated">当社のユーザーは、通常、最新のJavaScriptフレームワークを使用してWebアプリケーションを構築する開発者やQAエンジニアです。</target>
        </trans-unit>
        <trans-unit id="cfd6eb0a6f58dc56f19f16cac6a2b6c5603d3e4e" translate="yes" xml:space="preserve">
          <source>Output both the versions of the installed Cypress binary application and the npm module.</source>
          <target state="translated">インストールされたCypressバイナリアプリケーションとnpmモジュールの両方のバージョンを出力します。</target>
        </trans-unit>
        <trans-unit id="287dd0e59f15cdc3294daad256a1cd713cd10158" translate="yes" xml:space="preserve">
          <source>Output usage information</source>
          <target state="translated">使用情報を出力します。</target>
        </trans-unit>
        <trans-unit id="7a7557c64edbf1ae6e0c7582c591925bad209743" translate="yes" xml:space="preserve">
          <source>Outputs Key Events Table to console on click</source>
          <target state="translated">クリックするとキーイベントテーブルをコンソールに出力</target>
        </trans-unit>
        <trans-unit id="b87f621eb3bd3b9d4273639f1afa66324d564e12" translate="yes" xml:space="preserve">
          <source>Over in the &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; you&amp;rsquo;ll see Cypress display the suite, the test and your first assertion (which should be passing in green).</source>
          <target state="translated">以上で&lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;コマンドログ&lt;/a&gt;あなたはサイプレススイート、テストおよび（緑に渡すべきである）あなたの最初のアサーションを表示する表示されます。</target>
        </trans-unit>
        <trans-unit id="ce131b5f054db4860bc0e21b9f9d5edf6321df5f" translate="yes" xml:space="preserve">
          <source>Overhauled the entire subsystem dealing with an element&amp;rsquo;s visibility state. Previously we were using jQuery&amp;rsquo;s &lt;code&gt;.is(&quot;:visible&quot;)&lt;/code&gt; selector which was ineffective at truly determining when an element is &amp;ldquo;visible&amp;rdquo;. Our changes now differ significantly from jQuery, but they match what a real user would consider visible, and the rules are fairly easy to explain. In other words these rules should just &amp;ldquo;make sense&amp;rdquo;.</source>
          <target state="translated">要素の表示状態を処理するサブシステム全体を見直しました。以前は、jQueryの &lt;code&gt;.is(&quot;:visible&quot;)&lt;/code&gt; セレクターを使用していましたが、これは要素がいつ「可視」かを正確に判断するのに効果がありませんでした。今回の変更はjQueryと大きく異なりますが、実際のユーザーが目に見えると見なすものと一致し、ルールの説明はかなり簡単です。つまり、これらのルールは「意味をなす」だけです。</target>
        </trans-unit>
        <trans-unit id="ea5df8734b78a704d09b18622f7793039329d295" translate="yes" xml:space="preserve">
          <source>Overkill for 1 or 2 environment variables.</source>
          <target state="translated">1つまたは2つの環境変数のためのオーバーキル。</target>
        </trans-unit>
        <trans-unit id="2acc0cb53bf75fb575fd79d5044494ca1c739f83" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;url&lt;/code&gt; glob matching options</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; globマッチングオプションを上書きする</target>
        </trans-unit>
        <trans-unit id="ac7a1564c38cb88838b8d574a746b7686662e3d0" translate="yes" xml:space="preserve">
          <source>Override default Mocha timeout handling, replaced with custom logic. Removes many bizarre edge cases.</source>
          <target state="translated">デフォルトのMochaタイムアウト処理をオーバーライドし、カスタムロジックに置き換えました。多くの奇妙なエッジケースを削除します。</target>
        </trans-unit>
        <trans-unit id="bba26f010298017d7596195a44abf189ea2f7ba1" translate="yes" xml:space="preserve">
          <source>Override default port</source>
          <target state="translated">デフォルトのポートをオーバーライド</target>
        </trans-unit>
        <trans-unit id="dbfae8106e4520016392671e88563d001da61afc" translate="yes" xml:space="preserve">
          <source>Override the selectors that are returned per element</source>
          <target state="translated">要素ごとに返されるセレクタを上書きする</target>
        </trans-unit>
        <trans-unit id="c056a4e8c8b5ded25fd5c1de1e24443e6cab17c0" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;name&lt;/code&gt; only for display purposes.</source>
          <target state="translated">表示目的でのみ &lt;code&gt;name&lt;/code&gt; オーバーライドします。</target>
        </trans-unit>
        <trans-unit id="0de2f7df9a1182e3371193832e9ffbda0ba1cf73" translate="yes" xml:space="preserve">
          <source>Overrides the global &lt;code&gt;requestTimeout&lt;/code&gt; for this request. Defaults to &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">このリクエストのグローバル &lt;code&gt;requestTimeout&lt;/code&gt; をオーバーライドします。デフォルトは &lt;code&gt;timeout&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="34b11a7aa4a58c64096833a3770ff786f1acbda0" translate="yes" xml:space="preserve">
          <source>Overrides the global &lt;code&gt;responseTimeout&lt;/code&gt; for this request. Defaults to &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">このリクエストのグローバル &lt;code&gt;responseTimeout&lt;/code&gt; をオーバーライドします。デフォルトは &lt;code&gt;timeout&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bc533440e33f7e93c5572bc348f0389559438897" translate="yes" xml:space="preserve">
          <source>Overriding Configuration</source>
          <target state="translated">設定の上書き</target>
        </trans-unit>
        <trans-unit id="d13fa98479a1b2e41a0dd81028d7125dee6b7be4" translate="yes" xml:space="preserve">
          <source>Overriding Options</source>
          <target state="translated">オーバーライドオプション</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="5d1061667d68f65ca9a24abf5bb68fe6608d538d" translate="yes" xml:space="preserve">
          <source>Overview -</source>
          <target state="translated">概要</target>
        </trans-unit>
        <trans-unit id="66a410f3471068bac3a522089b7d1674fc867f4c" translate="yes" xml:space="preserve">
          <source>Overview:</source>
          <target state="translated">Overview:</target>
        </trans-unit>
        <trans-unit id="380d7b9e8db236251941584dcac13331a990fa25" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;screenshot&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;screenshot&lt;/code&gt; 上書きするコマンド</target>
        </trans-unit>
        <trans-unit id="fe55ff3990602e8a382186152e84bf5417950bd2" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;visit&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;visit&lt;/code&gt; コマンドを上書き</target>
        </trans-unit>
        <trans-unit id="c6b2f04ca28a0bbf26ecf770f4a432fd6fd1eccb" translate="yes" xml:space="preserve">
          <source>Overwrite Existing Commands</source>
          <target state="translated">既存のコマンドを上書きする</target>
        </trans-unit>
        <trans-unit id="14e092b6505d8076a0e4cf7586f230f4cdc06706" translate="yes" xml:space="preserve">
          <source>Overwrites all other forms of setting env variables.</source>
          <target state="translated">他のすべての形式の env 変数の設定を上書きします。</target>
        </trans-unit>
        <trans-unit id="55af20415ead0ddd417f37fa91a4c767b749ee34" translate="yes" xml:space="preserve">
          <source>PR</source>
          <target state="translated">PR</target>
        </trans-unit>
        <trans-unit id="d625e512af00f2c3d22d6c1e5f20c004a9fabed3" translate="yes" xml:space="preserve">
          <source>PR comments and failure screenshot thumbnails are optional, and can be disabled if not needed within a project&amp;rsquo;s GitHub Integration settings:</source>
          <target state="translated">PRのコメントと失敗のスクリーンショットのサムネイルはオプションであり、プロジェクトのGitHub統合設定で不要な場合は無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="7914cd03c604d20e425177927205bc571e20082a" translate="yes" xml:space="preserve">
          <source>Page Load Errors</source>
          <target state="translated">ページロードエラー</target>
        </trans-unit>
        <trans-unit id="3765bfd5d7bd998258438c0b7893f18862adbecf" translate="yes" xml:space="preserve">
          <source>Page Loads</source>
          <target state="translated">ページの読み込み</target>
        </trans-unit>
        <trans-unit id="1fca89dd57d703cf1a653a18dfa94add93e1ce84" translate="yes" xml:space="preserve">
          <source>Page Navigation</source>
          <target state="translated">ページナビゲーション</target>
        </trans-unit>
        <trans-unit id="8b5b1ded6410ecf095ecbabe4bbdfd1434a68849" translate="yes" xml:space="preserve">
          <source>Page events</source>
          <target state="translated">ページイベント</target>
        </trans-unit>
        <trans-unit id="29b18fd430fb6dbbedb01b3cb9c534dbbee44ce3" translate="yes" xml:space="preserve">
          <source>Page load events no longer forcibly &lt;code&gt;null&lt;/code&gt; out the current subject. This was very unexpected and difficult to debug. Now stale elements or other objects from previous pages are yielded to you.</source>
          <target state="translated">ページ読み込みイベントは、現在の件名を強制的に &lt;code&gt;null&lt;/code&gt; することはなくなりました。これは予想外であり、デバッグが困難でした。これで、前のページの古い要素または他のオブジェクトが生成されます。</target>
        </trans-unit>
        <trans-unit id="d352b7dfb32b85185978769c09f84cfe59d257e0" translate="yes" xml:space="preserve">
          <source>Pain to write the &lt;code&gt;--env&lt;/code&gt; options everywhere you use Cypress.</source>
          <target state="translated">サイプレスを使用する &lt;code&gt;--env&lt;/code&gt; の場所で--envオプションを記述するのは面倒です。</target>
        </trans-unit>
        <trans-unit id="fb7f75a523427d81e3000ff59131b5a7d5e28db6" translate="yes" xml:space="preserve">
          <source>Parallelization</source>
          <target state="translated">Parallelization</target>
        </trans-unit>
        <trans-unit id="1ffd2f8d4759391168c0a25163e739ef59d84cf2" translate="yes" xml:space="preserve">
          <source>Parallelization process</source>
          <target state="translated">並列化処理</target>
        </trans-unit>
        <trans-unit id="0071f7c6e61d24f7681f55d5de9b246688d675d0" translate="yes" xml:space="preserve">
          <source>Parallelization settings</source>
          <target state="translated">並列化の設定</target>
        </trans-unit>
        <trans-unit id="e78977b0d2b7295348fb2111c8c0aed1c15bf0bd" translate="yes" xml:space="preserve">
          <source>Parallelizing our tests across 2 machines saved us almost 50% of the total run time, and we can further decrease the build time by adding more machines.</source>
          <target state="translated">2台のマシンでテストを並列化することで、総実行時間の50%近くを節約することができ、さらにマシンを追加することでビルド時間をさらに短縮することができます。</target>
        </trans-unit>
        <trans-unit id="7b61933b5151f96fe8f08b1892fb206db0c69f36" translate="yes" xml:space="preserve">
          <source>Parent Commands</source>
          <target state="translated">親コマンド</target>
        </trans-unit>
        <trans-unit id="6d813481d0e2765edac3b22ef65af035c97bd900" translate="yes" xml:space="preserve">
          <source>Parent commands always &lt;strong&gt;begin&lt;/strong&gt; a new chain of commands. Even if you&amp;rsquo;ve chained it off of a previous command, parent commands will always start a new chain, and ignore previously yielded subjects.</source>
          <target state="translated">親コマンドは常に新しいコマンドチェーンを&lt;strong&gt;開始&lt;/strong&gt;します。前のコマンドからチェインした場合でも、親コマンドは常に新しいチェインを開始し、以前に生成されたサブジェクトを無視します。</target>
        </trans-unit>
        <trans-unit id="726bec5e8a61a888b556fb08e09589f15c6497ae" translate="yes" xml:space="preserve">
          <source>Parse special characters for strings surrounded by &lt;code&gt;{}&lt;/code&gt;, such as &lt;code&gt;{esc}&lt;/code&gt;. Set to &lt;code&gt;false&lt;/code&gt; to type the literal characters instead</source>
          <target state="translated">&lt;code&gt;{esc}&lt;/code&gt; など、{ &lt;code&gt;{}&lt;/code&gt; で囲まれた文字列の特殊文字を解析します。代わりにリテラル文字を入力するには &lt;code&gt;false&lt;/code&gt; に設定します</target>
        </trans-unit>
        <trans-unit id="7f65b13784e740a4319a207b36f6d3ebf1191822" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;{animationDistanceThreshold: 20}&lt;/code&gt; to decrease the sensitivity of detecting if an element is animating. By increasing the threshold this enables your element to move farther on the page without causing Cypress to continuously retry.</source>
          <target state="translated">&lt;code&gt;{animationDistanceThreshold: 20}&lt;/code&gt; を渡して、要素がアニメーションかどうかを検出する感度を下げます。しきい値を上げることにより、サイプレスに継続的に再試行させることなく、エレメントをページ上でさらに移動させることができます。</target>
        </trans-unit>
        <trans-unit id="6e3c4f2fd7e8d3c49dd7759238695f4e1271b28d" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;{force: true}&lt;/code&gt;. This disables &lt;em&gt;all&lt;/em&gt; error checking</source>
          <target state="translated">&lt;code&gt;{force: true}&lt;/code&gt; 渡します。これにより、&lt;em&gt;すべての&lt;/em&gt;エラーチェックが無効に&lt;em&gt;なり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7954dfd274f9fe4fbfb315ff96ad047a4c1c7738" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;{waitForAnimations: false}&lt;/code&gt; to disable animation error checking</source>
          <target state="translated">パス &lt;code&gt;{waitForAnimations: false}&lt;/code&gt; 無効にアニメーションエラーチェックに</target>
        </trans-unit>
        <trans-unit id="42a14d42feb62693eb0d570ec87fed2c3979285a" translate="yes" xml:space="preserve">
          <source>Pass a function that can have any number of explicit assertions within it. Whatever was passed to the function is what is yielded.</source>
          <target state="translated">関数を渡して、その中にいくつでも明示的なアサーションを持つことができます。関数に渡されたものが何であれ、その結果が得られます。</target>
        </trans-unit>
        <trans-unit id="b7970c2432353e0ed7d38f33f8f53b87bbd51c68" translate="yes" xml:space="preserve">
          <source>Pass a function that expands the array into its arguments.</source>
          <target state="translated">配列を引数に展開する関数を渡します。</target>
        </trans-unit>
        <trans-unit id="9695fea0c70832d4dbc5486f1028ee09d482e97b" translate="yes" xml:space="preserve">
          <source>Pass a function that is invoked with the following arguments:</source>
          <target state="translated">以下の引数で呼び出される関数を渡します。</target>
        </trans-unit>
        <trans-unit id="48a526df05a88ca4659c2b3bed048b44d80bfdaf" translate="yes" xml:space="preserve">
          <source>Pass a function that receives the arguments passed to the command.</source>
          <target state="translated">コマンドに渡された引数を受け取る関数を渡します。</target>
        </trans-unit>
        <trans-unit id="1702bd7343a24ebfd3728dbd6ea3445e739f20f1" translate="yes" xml:space="preserve">
          <source>Pass a function that takes the current yielded subject as its first argument.</source>
          <target state="translated">現在の生成されたサブジェクトを第一引数に取る関数を渡します。</target>
        </trans-unit>
        <trans-unit id="89b5efc7fbcfc8e82e4f3f7b2a16815750d4be7b" translate="yes" xml:space="preserve">
          <source>Pass a function that takes the previously yielded subject as its first argument.</source>
          <target state="translated">前に生成されたサブジェクトを第 1 引数に取る関数を渡します。</target>
        </trans-unit>
        <trans-unit id="b53ee1e2da26c3ad158135a09e1e5043e9bff542" translate="yes" xml:space="preserve">
          <source>Pass a single string variable.</source>
          <target state="translated">1つの文字列変数を渡します。</target>
        </trans-unit>
        <trans-unit id="a9883256c0e1a4e71c3f1ed9505e84dea67bc010" translate="yes" xml:space="preserve">
          <source>Pass an object as a JSON in a string.</source>
          <target state="translated">オブジェクトをJSONとして文字列で渡します。</target>
        </trans-unit>
        <trans-unit id="899c3df738db5eb28c8614c44887a337fe4a13cc" translate="yes" xml:space="preserve">
          <source>Pass in an options object</source>
          <target state="translated">オプションオブジェクトを渡す</target>
        </trans-unit>
        <trans-unit id="081085aaf38a112f2493ac4b0e4b0cb79e3f59d5" translate="yes" xml:space="preserve">
          <source>Pass in an options object to &lt;code&gt;Cypress.log()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを &lt;code&gt;Cypress.log()&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="30ce724b997ece17d42c30137b18429e840ca749" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.blur&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.blur&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="62d2c52785d24cfbb304812547fc0ac32efd8985" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.check()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.check()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="a81fa5b3e26185decdb933b9b334502b022e14a8" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.children()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.children()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="66a0bd38e1ab2e0d45d1c23ff87015a8fb7713b5" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.clear()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.clear()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="5d7c52f9e5d8fda425242e1b8979de9625daa8f5" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.click()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="824c84851489b0bdf01185f5dee4ac1d8ca53c86" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.closest()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.closest()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="db4e6a9e5a7456e312ae8f301c8b7c92bab8decf" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="531e37b609ab1ecde77405892c15f6063f827f15" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.dblclick()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="6e99909a352c5eec870d34926405770f1c665753" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.debug()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.debug()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="b7720b5be271d33cb3a5b6abc7392249fa21567b" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.eq()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.eq()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="decd6f2e7ed526173f58b3cdd3859563a440b1dd" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.filter()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.filter()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="2c544301b56ae5b6844d408877eed8aaf505bf59" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.find()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.find()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="23d30c9a3ab905680019ae050e190aebab2c6b4a" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.first()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="9fd5eef1cba712f7111e8eb177e251687159701f" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.focus()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="30786191033ad23c2474fcb28d7bf4d25f54d932" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.last()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.last()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="e9981eec7cee39bacee115b368aa65ee6a0c8525" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.next()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.next()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="11ba2f7017804272febc9f9a6ac4e566cd5e4cf6" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.nextAll()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.nextAll()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="aac7bde659146227e3b76efef14122a7f1ea9aae" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.nextUntil()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.nextUntil()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="2c253e4feab239bd8fe7fecdd559faf749a2e40a" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.not()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.not()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="6d25ec9eb07dfaec871023a32a6deaaac6f7477d" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.parent()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.parent()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="c33e0c6b040dadddb4633ce5073d64c0a813e8df" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.parents()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.parents()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="bbe598d3cb93d53b650dffcbe9d6ff2d103a6423" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.parentsUntil()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.parentsUntil()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="7570812497f8d6cc7ff73ace45fd97ef04d304ae" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.pause()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.pause()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="38b5b245a6ebf30a3d9066eaa2e6aa78c8b2bff0" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.prev()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prev()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="c9e019d8555469f6bfdf99f44395a6b6f9efbbb2" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.prevAll()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.prevAll()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="d0542820839cca64e93ec2964361172068a8ece9" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.prevUntil()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.prevUntil()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="844e98f33020e5a5035aeb16471cd140a5539d49" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.root()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.root()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="ca32f53deb86caadd83e1a30e99d313867eb32a5" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.screenshot()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.screenshot()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="5d49eedad382d0576b6f4627e86acacbc828d49e" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.scrollIntoView()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.scrollIntoView()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="6c2f76534929466219f95880ef2f6a0dbbd171b2" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.select()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="871085391d777200c076007b5256c795e0f24cbf" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.siblings()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.siblings()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="b8bf0662609b2c9a842aec4828a686cbf84631c2" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.spread()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="39690814b7c99824694e93f69500d1c416c312a3" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.submit()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="eeb2ca7b2e91a0d1cb8400f50848c4791f0583c0" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.then()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="784dd183f7d382897e5ddb96d5c1d2810128fdd0" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.trigger()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;.trigger()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="10fda6502e5068fe2fc6c54ca659218c35c6c7f9" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.type()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="1e469daa59e840b9a4fc9dec6fd1c2c8659da186" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.uncheck()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="0fddbec78b4aef46fe4cd9a9155e1278f642fd37" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.within()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.within()&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="6435c4587dc25d1bfc5b77b25355cf5360f9fbc1" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;Cypress.Server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.Server&lt;/code&gt; のデフォルトの動作を変更するには、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="3d6fd7da7530c84ad082e04565cf2def05cbf5ef" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.clearCookie()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.clearCookie()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="f7d4babbf55a79a3f301160437760d4ef1611286" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.clearCookies()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.clearCookies()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="528b4bed432fa91d59ecb500f2dd6969fd0f8ff6" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.clearLocalStorage()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="9e6ff6b20d3650d01c40e79de0757019fc709000" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.clock()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.clock()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="096eca008c661d4b61f1838f41f6dc99963abed3" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.document()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.document()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="dd53bed0e0ec9d9cc8cb5cf2a9bc94b935974be0" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.exec()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.exec()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="87ebb0a24d2266aa9742068e087e879d23e0d39b" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.fixture()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.fixture()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="ffe87ced458c9671d801f18b981d0e9229c16a6a" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.focused()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.focused()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="65d3fad618d2bdd6f6a2a3cbfa73399a159ca924" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.get()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.get()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="81b83beb016cf65489c365d0c010e7551709a85c" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.getCookie()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.getCookie()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="3cf2d8c891c190299a223cdd9e6e9bfa9a3fa76c" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.getCookies()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.getCookies()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="15e7f3b1524ab8df206562b87a6d3561edb1ab45" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.go()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.go()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="bec8997204f0714bccde8dc9491b654ccb7c6a89" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.hash()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.hash()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="3adef0ee5564641d7effa8e4f5ac2ce7f9e620fe" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.location()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.location()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="0894d38e8eb8dd3ed591b190e5094260e0532d3f" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.readFile()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.readFile()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="2cd61981c4e5f7569b8bb6c4e81ad0755c52436c" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.request()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.request()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="0796d9e49ff075a5a112c7c9f9ab7bf7bbebea30" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.route()&lt;/code&gt;. By default &lt;code&gt;cy.route()&lt;/code&gt; inherits its options from &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.route()&lt;/code&gt; のデフォルトの動作を変更します。デフォルトでは、 &lt;code&gt;cy.route()&lt;/code&gt; は&lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;からオプションを継承します。</target>
        </trans-unit>
        <trans-unit id="cd8a7eadf23467dcaffea046ecdd96556c870f52" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.scrollTo()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.scrollTo()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="fba0bf5c5d2986b2741b31b04866ef24cd1cda21" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.server()&lt;/code&gt;. These options are used for 2 different purposes:</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.server()&lt;/code&gt; のデフォルトの動作を変更します。これらのオプションは、2つの異なる目的で使用されます。</target>
        </trans-unit>
        <trans-unit id="a51fceafda770434be15f23de14926afbcafe94f" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.setCookie()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.setCookie()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="66d5221d4d0bc1e2d68b8724f97a5c6e3621a07c" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.task()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.task()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="449b2d688a6c14d35b4e0c260366a340adffdf69" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.title()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.title()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="caed7f0d01d78c23e8cce867eb8fae96b3da6994" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.url()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.url()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="664e19ab597babb0662b770c6f9f65b3176a7ce6" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.viewport()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.viewport()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="a6bc84c114277a3003d4885ddc69cbfbeab2c52d" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.wait()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.wait()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="7f777b570adc6d2726d8c51582e46bed57137c03" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.window()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.window()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="f4f429f846ef5aa2b5cec253870bd81df7610fc1" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.wrap()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.wrap()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="991e215579e2fe4e001b41fe07fc5d623ae5a222" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;cy.writeFile()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.writeFile()&lt;/code&gt; のデフォルトの動作を変更します。</target>
        </trans-unit>
        <trans-unit id="83392c850b66844e355a7ee3cd75fdf73716a75b" translate="yes" xml:space="preserve">
          <source>Pass in an options object to control the behavior of &lt;code&gt;cy.visit()&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトを渡して、 &lt;code&gt;cy.visit()&lt;/code&gt; の動作を制御します。</target>
        </trans-unit>
        <trans-unit id="f5c5ca95829fc0ceb25d1781aa464a4030b8017b" translate="yes" xml:space="preserve">
          <source>Pass in an options object to define the implicit behavior of the custom command.</source>
          <target state="translated">カスタムコマンドの暗黙の動作を定義するために、オプションオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="64d13b24c77bd21daed50fc4df61bd86cfc4ad2b" translate="yes" xml:space="preserve">
          <source>Pass in the CLI as `--env`</source>
          <target state="translated">CLIでは `--env` として渡します。</target>
        </trans-unit>
        <trans-unit id="1f58967937147e6a3ce49c0d5ace03b5c7a2905f" translate="yes" xml:space="preserve">
          <source>Pass only the host</source>
          <target state="translated">ホストのみを渡す</target>
        </trans-unit>
        <trans-unit id="d082a80325d9b061c3924a071afd1bd052988211" translate="yes" xml:space="preserve">
          <source>Pass several variables using commas and no spaces. Numbers are automatically converted from strings.</source>
          <target state="translated">カンマとスペースを使わずに複数の変数を渡します。数値は自動的に文字列から変換されます。</target>
        </trans-unit>
        <trans-unit id="c7c180ed551d10c6c560fa9a70358197fa1089d6" translate="yes" xml:space="preserve">
          <source>Pass the command to boot your server, the url your server is hosted on and your Cypress test command.</source>
          <target state="translated">サーバーを起動するコマンド、サーバーがホストされている URL、Cypress テストコマンドを渡してください。</target>
        </trans-unit>
        <trans-unit id="c746b9cffb0cb7abd997173f6498ec817993578e" translate="yes" xml:space="preserve">
          <source>Passes timeout through to &lt;a href=&quot;should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; assertion</source>
          <target state="translated">タイムアウトを&lt;a href=&quot;should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;アサーションに渡します</target>
        </trans-unit>
        <trans-unit id="36531592788bfb2abd40661fb29f6f2b575068c6" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check({ force: true })&lt;/code&gt;&lt;/a&gt; no longer requires the checkbox or radio to be visible. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1376&quot;&gt;#1376&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check({ force: true })&lt;/code&gt; &lt;/a&gt;渡すときに、チェックボックスまたはラジオを表示する必要がなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1376&quot;&gt;＃1376を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="477d9902f829ad53937fa5e62252ac71c09bb228" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;--headed&lt;/code&gt; will force Electron to be shown. This matches how you run Electron in interactive mode.</source>
          <target state="translated">&lt;code&gt;--headed&lt;/code&gt; を渡すと、Electronが表示されます。これは、Electronをインタラクティブモードで実行する方法と一致します。</target>
        </trans-unit>
        <trans-unit id="9a0f6d79ee238023e75ef1898b1eea9a862346e2" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;--reporter&lt;/code&gt; can now reference an absolute path instead of just relative. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/658&quot;&gt;#658&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--reporter&lt;/code&gt; を渡すと、相対パスではなく絶対パスを参照できるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/658&quot;&gt;＃658を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="fcb934f3b4f827cafd629d5d790e494a67dcf085" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;cy.route({stub: false})&lt;/code&gt; or &lt;code&gt;cy.server({stub: false})&lt;/code&gt; is now deprecated.</source>
          <target state="translated">通過 &lt;code&gt;cy.route({stub: false})&lt;/code&gt; または &lt;code&gt;cy.server({stub: false})&lt;/code&gt; 廃止されています。</target>
        </trans-unit>
        <trans-unit id="0c90bcbc5af4b402e5fc47c6709a1bac0f794bb9" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;foo/bar/baz&lt;/code&gt; as the fileName arg to &lt;a href=&quot;../../api/commands/screenshot#Take-a-screenshot-and-save-in-a-specific-directory&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; inside a spec, &lt;code&gt;app.spec.js&lt;/code&gt;, will now result in the screenshot being saved to a nested folder path such as: &lt;code&gt;cypress/screenshots/app.spec.js/foo/bar/baz.png&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1771&quot;&gt;#1771&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/668&quot;&gt;#668&lt;/a&gt;.</source>
          <target state="translated">通過 &lt;code&gt;foo/bar/baz&lt;/code&gt; するファイル名を引数として&lt;a href=&quot;../../api/commands/screenshot#Take-a-screenshot-and-save-in-a-specific-directory&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;、スペック内部 &lt;code&gt;app.spec.js&lt;/code&gt; ：、今のようなネストされたフォルダのパスに保存されているスクリーンショットをもたらす &lt;code&gt;cypress/screenshots/app.spec.js/foo/bar/baz.png&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1771&quot;&gt;＃1771&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/668&quot;&gt;＃668を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0951f3ddd875ca3104e0a23f3b1a4199f9bf4fee" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;{force: true}&lt;/code&gt; to &lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; now logs correctly in the Command Log.</source>
          <target state="translated">渡す &lt;code&gt;{force: true}&lt;/code&gt; に&lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt;今コマンドログに正しく記録されます。</target>
        </trans-unit>
        <trans-unit id="06b51056cebdf0311833f2b0916f14b7446dcbe8" translate="yes" xml:space="preserve">
          <source>Passing a browser path containing spaces now works properly when passed to the &lt;code&gt;--browser&lt;/code&gt; argument. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3979&quot;&gt;#3979&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--browser&lt;/code&gt; 引数に渡されたときに、スペースを含むブラウザーパスを渡すことが正しく機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3979&quot;&gt;＃3979の&lt;/a&gt;修正</target>
        </trans-unit>
        <trans-unit id="34dc74e4f4e91192039d936625b0aef6317bc006" translate="yes" xml:space="preserve">
          <source>Passing a function to &lt;code&gt;.and()&lt;/code&gt; enables you to assert on the yielded subject. This gives you the opportunity to &lt;em&gt;massage&lt;/em&gt; what you&amp;rsquo;d like to assert.</source>
          <target state="translated">関数を &lt;code&gt;.and()&lt;/code&gt; に渡すと、生成されたサブジェクトをアサートできます。これはあなたが主張したいことを&lt;em&gt;マッサージ&lt;/em&gt;する機会をあなたに与えます。</target>
        </trans-unit>
        <trans-unit id="9c0ecd1ae63fc91721ff666d4d0a1ea40a5200f5" translate="yes" xml:space="preserve">
          <source>Passing a function to &lt;code&gt;.should()&lt;/code&gt; enables you to make multiple assertions on the yielded subject. This also gives you the opportunity to &lt;em&gt;massage&lt;/em&gt; what you&amp;rsquo;d like to assert on.</source>
          <target state="translated">関数を &lt;code&gt;.should()&lt;/code&gt; に渡すと、生成されたサブジェクトに対して複数のアサーションを作成できます。これはまた、あなたが主張したいことを&lt;em&gt;マッサージ&lt;/em&gt;する機会をあなたに与えます。</target>
        </trans-unit>
        <trans-unit id="01e8466e648413fe3d9d9c73e8cbaf6cc6e32f3d" translate="yes" xml:space="preserve">
          <source>Passing an array of strings to &lt;code&gt;ignoreTestFiles&lt;/code&gt; no longer causes an error to throw. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4312&quot;&gt;#4312&lt;/a&gt;.</source>
          <target state="translated">文字列の配列を &lt;code&gt;ignoreTestFiles&lt;/code&gt; に渡すと、エラーがスローされなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4312&quot;&gt;＃4312を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="41f8650848d52a9ac0855cd7aaae3562480b20ce" translate="yes" xml:space="preserve">
          <source>Passing cy.route({stub: false}) or cy.server({stub: false}) is now deprecated.</source>
          <target state="translated">cy.route({stub:false})や cy.server({stub:false})を渡すことは非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="064ae2343ee1de68e5a187a813b7f8162d86ff6a" translate="yes" xml:space="preserve">
          <source>Passing multiple arguments to &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; now throws and suggests you use &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/147&quot;&gt;#147&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; に&lt;/a&gt;複数の引数を渡すと、スローされ、&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; の&lt;/a&gt;使用が提案されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/147&quot;&gt;＃147を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8ed0560c95a313213676c844528c68d14b1a03c8" translate="yes" xml:space="preserve">
          <source>Password complexity requirements</source>
          <target state="translated">パスワードの複雑さの要件</target>
        </trans-unit>
        <trans-unit id="209dd2c36947131bb6d74731bf5d34d289b40cd4" translate="yes" xml:space="preserve">
          <source>Path to a specific project</source>
          <target state="translated">特定のプロジェクトへのパス</target>
        </trans-unit>
        <trans-unit id="28342992dd2a62bb25ae057621d8fbaba6f739dd" translate="yes" xml:space="preserve">
          <source>Path to file to load before test files load. This file is compiled and bundled. (Pass &lt;code&gt;false&lt;/code&gt; to disable)</source>
          <target state="translated">テストファイルをロードする前にロードするファイルへのパス。このファイルはコンパイルされ、バンドルされています。（無効にするには &lt;code&gt;false&lt;/code&gt; を渡します）</target>
        </trans-unit>
        <trans-unit id="77208b5553341314884ce5f0113ace22126b111e" translate="yes" xml:space="preserve">
          <source>Path to folder containing fixture files (Pass &lt;code&gt;false&lt;/code&gt; to disable)</source>
          <target state="translated">フィクスチャファイルを含むフォルダーへのパス（無効にするには &lt;code&gt;false&lt;/code&gt; を渡します）</target>
        </trans-unit>
        <trans-unit id="7a5952febfad017848e7a81f7cbe0bc908d457d7" translate="yes" xml:space="preserve">
          <source>Path to folder containing integration test files</source>
          <target state="translated">統合テストファイルを含むフォルダへのパス</target>
        </trans-unit>
        <trans-unit id="a1441bccdfa66b6d982e226e35e2b611be9f3d63" translate="yes" xml:space="preserve">
          <source>Path to folder where application files will attempt to be served from</source>
          <target state="translated">アプリケーションファイルを提供しようとするフォルダへのパス</target>
        </trans-unit>
        <trans-unit id="67622f226533dfdcc43d8260865427d1e3af59c7" translate="yes" xml:space="preserve">
          <source>Path to folder where screenshots will be saved from &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; command or after a test fails during &lt;code&gt;cypress run&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;コマンドから、または &lt;code&gt;cypress run&lt;/code&gt; 中にテストが失敗した後にスクリーンショットが保存されるフォルダーへのパス</target>
        </trans-unit>
        <trans-unit id="58aa9473147a1a28f2c4693aca74119a483aee00" translate="yes" xml:space="preserve">
          <source>Path to folder where videos will be saved during &lt;code&gt;cypress run&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 中に動画が保存されるフォルダーへのパス</target>
        </trans-unit>
        <trans-unit id="d71a042af14d15daace6f63f5d7375e788996570" translate="yes" xml:space="preserve">
          <source>Path to plugins file. (Pass &lt;code&gt;false&lt;/code&gt; to disable)</source>
          <target state="translated">プラグインファイルへのパス。（無効にするには &lt;code&gt;false&lt;/code&gt; を渡します）</target>
        </trans-unit>
        <trans-unit id="475eff16e7a2d7d2d588d1fe307c0bddb5c2e200" translate="yes" xml:space="preserve">
          <source>Pause after assertion</source>
          <target state="translated">アサーションの後のポーズ</target>
        </trans-unit>
        <trans-unit id="dde6d1e4128bd369bf30229c6b6750b317ab1560" translate="yes" xml:space="preserve">
          <source>Pause and step through each &lt;code&gt;.click()&lt;/code&gt; command</source>
          <target state="translated">各 &lt;code&gt;.click()&lt;/code&gt; コマンドを一時停止してステップ実行</target>
        </trans-unit>
        <trans-unit id="9076c1cbe8ac934c669fb4febbb4208cad28fcbd" translate="yes" xml:space="preserve">
          <source>Pause commands and step through them iteratively.</source>
          <target state="translated">コマンドを一時停止し、反復的にステップアップします。</target>
        </trans-unit>
        <trans-unit id="2c3b9ae3b89306df3bef6a15f103cc5e19135d6d" translate="yes" xml:space="preserve">
          <source>Pause with debugger after &lt;code&gt;.get()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.get()&lt;/code&gt; の後にデバッガーで一時停止</target>
        </trans-unit>
        <trans-unit id="eaee5dbb2380e149473b75d24aa2f2f7276950fd" translate="yes" xml:space="preserve">
          <source>Pay for all of your projects usage.</source>
          <target state="translated">プロジェクトの使用料をすべて支払います。</target>
        </trans-unit>
        <trans-unit id="44f57af634e4c364b986e9297b0015a05884215f" translate="yes" xml:space="preserve">
          <source>Pay for your selected billing plan.</source>
          <target state="translated">選択した課金プランの支払いを行います。</target>
        </trans-unit>
        <trans-unit id="3edf3916cb57faa549bfb70803a78a2f09b010dc" translate="yes" xml:space="preserve">
          <source>Pending commands are now visually distinguishable.</source>
          <target state="translated">保留中のコマンドが視覚的に区別できるようになりました。</target>
        </trans-unit>
        <trans-unit id="61b6cd1258641f0b4de19e16db4a9ed827fe2c16" translate="yes" xml:space="preserve">
          <source>Percy</source>
          <target state="translated">Percy</target>
        </trans-unit>
        <trans-unit id="4a9d876a02d9b104dfddaaab1d4e83ee19aba818" translate="yes" xml:space="preserve">
          <source>Percy&amp;rsquo;s Cypress documentation</source>
          <target state="translated">パーシーのサイプレスのドキュメント</target>
        </trans-unit>
        <trans-unit id="5698ead71b605c90964060d962bc4ef1e0ee3303" translate="yes" xml:space="preserve">
          <source>Percy&amp;rsquo;s Cypress tutorial</source>
          <target state="translated">パーシーのサイプレスチュートリアル</target>
        </trans-unit>
        <trans-unit id="33a33e9bf24e0bcec1bb4b14f5f602787fb11a4e" translate="yes" xml:space="preserve">
          <source>Perfect for JSON APIs</source>
          <target state="translated">JSON APIに最適</target>
        </trans-unit>
        <trans-unit id="f2a923c1a2978ed33d50ae78fe4e34f69962a877" translate="yes" xml:space="preserve">
          <source>Perform a click action on that element</source>
          <target state="translated">その要素に対してクリックアクションを実行する</target>
        </trans-unit>
        <trans-unit id="c8b431aa6827911731f3fa378f61658b57de2038" translate="yes" xml:space="preserve">
          <source>Perform a click action on that element.</source>
          <target state="translated">その要素に対してクリックアクションを実行します。</target>
        </trans-unit>
        <trans-unit id="3ea1571928177b5de7b2136b689be85f1ca647fa" translate="yes" xml:space="preserve">
          <source>Perform custom logic prior to making the assertion.</source>
          <target state="translated">アサーションを行う前にカスタム・ロジックを実行します。</target>
        </trans-unit>
        <trans-unit id="697200646d68821a1982ce45d978c5f57ce06a50" translate="yes" xml:space="preserve">
          <source>Performance improvements on successive runnable iterations.</source>
          <target state="translated">連続して実行可能な反復処理のパフォーマンスを向上させました。</target>
        </trans-unit>
        <trans-unit id="75fbc5c30da07f1356bcf407f1026c09ad8550fb" translate="yes" xml:space="preserve">
          <source>Performance testing</source>
          <target state="translated">パフォーマンステスト</target>
        </trans-unit>
        <trans-unit id="39baea0e65db354781795eac2861eaaf7957022a" translate="yes" xml:space="preserve">
          <source>Performing parallel tasks (like making multiple http requests outside of Cypress)</source>
          <target state="translated">並列タスクを実行する (Cypress 以外で複数の http リクエストを作成するような)</target>
        </trans-unit>
        <trans-unit id="e54ea0f4629dc4719b0bb5b5cd8ffd7d8b3093db" translate="yes" xml:space="preserve">
          <source>Performing parallel tasks, like making multiple http requests outside of Cypress.</source>
          <target state="translated">Cypress の外で複数の http リクエストを作成するような並列タスクを実行します。</target>
        </trans-unit>
        <trans-unit id="117fb3441b652cd7563e98d5174b6ac4ba9feabe" translate="yes" xml:space="preserve">
          <source>Perhaps an even easier way to test this is if your server sent the campaign in a session cookie that you could read off.</source>
          <target state="translated">おそらく、これをテストするもっと簡単な方法は、あなたのサーバーがあなたが読み取ることができるセッションクッキーでキャンペーンを送信した場合です。</target>
        </trans-unit>
        <trans-unit id="093c63fe695993f50b43dc5a2ad0a4f5cf93373d" translate="yes" xml:space="preserve">
          <source>Perhaps you&amp;rsquo;ll need to generate a user, and seed them with associations and records. You may be familiar with using things such as fixtures or factories.</source>
          <target state="translated">おそらく、ユーザーを生成し、それらに関連付けとレコードをシードする必要があります。備品や工場などを使い慣れているかもしれません。</target>
        </trans-unit>
        <trans-unit id="2ce361f49778c0abe898cc4c6f28f72daf096655" translate="yes" xml:space="preserve">
          <source>Permanent trade-offs</source>
          <target state="translated">恒久的なトレードオフ</target>
        </trans-unit>
        <trans-unit id="caeea2ef36f6225a486625903b9dc2e07fda1e15" translate="yes" xml:space="preserve">
          <source>Permanent trade-offs:</source>
          <target state="translated">恒久的なトレードオフ。</target>
        </trans-unit>
        <trans-unit id="93637db0365bf0685d1d9db2f4c3e1af4ec768b6" translate="yes" xml:space="preserve">
          <source>Permanently change the default options for all &lt;a href=&quot;../commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; instances</source>
          <target state="translated">すべての&lt;a href=&quot;../commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;インスタンスのデフォルトオプションを永続的に変更する</target>
        </trans-unit>
        <trans-unit id="1785713451d01948bc96b1f6cd729251ba4dfe64" translate="yes" xml:space="preserve">
          <source>Permission</source>
          <target state="translated">Permission</target>
        </trans-unit>
        <trans-unit id="630230dbc19c968662fc7a233225993c4eeb3abc" translate="yes" xml:space="preserve">
          <source>Permissions are now restored during a cypress update for the &lt;code&gt;logs&lt;/code&gt; and &lt;code&gt;cache&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;logs&lt;/code&gt; と &lt;code&gt;cache&lt;/code&gt; サイプレス更新中に権限が復元されるようになりました。</target>
        </trans-unit>
        <trans-unit id="563c7dc068dbcc4c3b3b79033cff558b52cac44d" translate="yes" xml:space="preserve">
          <source>Personal Orgs</source>
          <target state="translated">個人組織</target>
        </trans-unit>
        <trans-unit id="a873773a53a7a3ca58113f6de2c11cb94341b24b" translate="yes" xml:space="preserve">
          <source>PickleJS</source>
          <target state="translated">PickleJS</target>
        </trans-unit>
        <trans-unit id="b43dc8cf4d05a9bfd53c20c25a80b04e311975f8" translate="yes" xml:space="preserve">
          <source>Plain Objects</source>
          <target state="translated">プレーンオブジェクト</target>
        </trans-unit>
        <trans-unit id="7432c9e1b93e3e3d0091201a630138c455833d82" translate="yes" xml:space="preserve">
          <source>Playing MP3 file</source>
          <target state="translated">MP3ファイルの再生</target>
        </trans-unit>
        <trans-unit id="a9aaab3cd36e9c7fe8404c087e651cc0fd3e26ed" translate="yes" xml:space="preserve">
          <source>Please be aware that Cypress only currently supports intercepting XMLHttpRequests. Requests using the Fetch API and other types of network requests like page loads and &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags will not be intercepted or visible in the Command Log. See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/95&quot;&gt;#95&lt;/a&gt; for more details and temporary workarounds.</source>
          <target state="translated">サイプレスは現在、XMLHttpRequestのインターセプトのみをサポートしていることに注意してください。Fetch APIを使用したリクエストと、ページの読み込みや &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; タグなどの他のタイプのネットワークリクエストは、傍受されず、コマンドログに表示されません。参照してください&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/95&quot;&gt;＃95を&lt;/a&gt;詳細かつ一時的な回避策のために。</target>
        </trans-unit>
        <trans-unit id="08aa0eb21000e15d56dfae473277eda0dd6fa3e5" translate="yes" xml:space="preserve">
          <source>Please check out our API docs for modifying configuration here.</source>
          <target state="translated">設定の変更については、こちらのAPIドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="7bb7f91ca9afdf86f497581f2c0a9d100194a40d" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;.parent()&lt;/code&gt; only travels a single level up the DOM tree as opposed to the &lt;a href=&quot;parents&quot;&gt;.parents()&lt;/a&gt; command.</source>
          <target state="translated">それに注意してください &lt;code&gt;.parent()&lt;/code&gt; とは対照的に、唯一のDOMツリーまで単一のレベルを移動する&lt;a href=&quot;parents&quot;&gt;.parents（）&lt;/a&gt;コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="34ba40845fd22fe6fcd2cad3358661e2015ba0f3" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;.parents()&lt;/code&gt; travels multiple levels up the DOM tree as opposed to the &lt;a href=&quot;parent&quot;&gt;.parent&lt;br/&gt;()&lt;/a&gt; command which travels a single level up the DOM tree.</source>
          <target state="translated">ことに注意してください &lt;code&gt;.parents()&lt;/code&gt; とは対照的に、DOMツリーまで複数のレベルを移動&lt;a href=&quot;parent&quot;&gt;.parent &lt;br/&gt;（）&lt;/a&gt; DOMツリーアップ単一レベルを移動するコマンド。</target>
        </trans-unit>
        <trans-unit id="337d7e7e55674bdc60b2d108d75b0e0562fd6e85" translate="yes" xml:space="preserve">
          <source>Please read our &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;new documentation on writing custom commands&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;カスタムコマンドの記述に関する新しいドキュメントを&lt;/a&gt;お読みください。</target>
        </trans-unit>
        <trans-unit id="546f7b8ff63c7a2e0571086b059e3e4ff4d7453c" translate="yes" xml:space="preserve">
          <source>Please read our &lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt; docs for help installing Cypress in CI. When running in linux you&amp;rsquo;ll need to install some &lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;system dependencies&lt;/a&gt; or you can just use our &lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;Docker images&lt;/a&gt; which have everything you need prebuilt.</source>
          <target state="translated">CIへのサイプレスのインストールについては、&lt;a href=&quot;../guides/continuous-integration&quot;&gt;継続的インテグレーションの&lt;/a&gt;ドキュメントをご覧ください。Linuxで実行する場合は、いくつかの&lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;システム依存関係&lt;/a&gt;をインストールする必要があります。または、必要なものがすべて事前にビルドされている&lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;Dockerイメージ&lt;/a&gt;を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="b7888d81209c4caf27d98f04b2fcd6288191f2ca" translate="yes" xml:space="preserve">
          <source>Please read our &lt;a href=&quot;../guides/network-requests&quot;&gt;Guide on Network Requests&lt;/a&gt; for a much more thorough analysis and approach to accomplishing this.</source>
          <target state="translated">これを達成するためのより徹底的な分析とアプローチについては、&lt;a href=&quot;../guides/network-requests&quot;&gt;ネットワークリクエスト&lt;/a&gt;に関するガイドをお読みください。</target>
        </trans-unit>
        <trans-unit id="7302496c92807bc89ac9a244820844947dd4ee97" translate="yes" xml:space="preserve">
          <source>Please read our &lt;a href=&quot;../references/best-practices#Selecting-Elements&quot;&gt;Best Practices guide&lt;/a&gt; on helping you target elements and prevent tests from breaking on CSS or JS changes.</source>
          <target state="translated">要素をターゲットにして、テストがCSSまたはJSの変更に違反しないようにするための&lt;a href=&quot;../references/best-practices#Selecting-Elements&quot;&gt;ベストプラクティスガイド&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="d78f473cd883fab3bb8737bcb0ed77df12a70ae6" translate="yes" xml:space="preserve">
          <source>Please read the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; documentation for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; の&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="84152dc1468ff7cb7d45ccf4668fff6361af1c37" translate="yes" xml:space="preserve">
          <source>Please read this link in the &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor#modifying-default-options&quot;&gt;Browserify preprocessor&lt;/a&gt; repo for instructions on modifying these.</source>
          <target state="translated">これらを変更する方法については、&lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor#modifying-default-options&quot;&gt;Browserifyプリプロセッサ&lt;/a&gt;リポジトリのこのリンクを参照してください。</target>
        </trans-unit>
        <trans-unit id="68edd23a168701560ecf55fb48b4f19dc31c35e8" translate="yes" xml:space="preserve">
          <source>Please refer to your code editor in &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;TypeScript&amp;rsquo;s Editor Support doc&lt;/a&gt; and follow the instructions for your IDE to get TypeScript support and &lt;a href=&quot;intelligent-code-completion&quot;&gt;intelligent code completion&lt;/a&gt; configured in your developer environment before continuing. TypeScript support is built in for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;, &lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt;, and &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt; - all other editors require extra setup.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;TypeScriptのエディターサポートドキュメント&lt;/a&gt;でコードエディターを参照し、IDEの指示に従ってTypeScriptサポートと&lt;a href=&quot;intelligent-code-completion&quot;&gt;インテリジェントなコード補完を&lt;/a&gt;開発者環境で構成してから続行してください。TypeScriptサポートは、&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;、&lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt;、および&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStormに&lt;/a&gt;組み込まれています。他のすべてのエディターには追加の設定が必要です。</target>
        </trans-unit>
        <trans-unit id="80fe6ef598361a791fc28af190d3bfc9e0260eab" translate="yes" xml:space="preserve">
          <source>Please review &lt;a href=&quot;../guides/parallelization#Grouping-test-runs&quot;&gt;grouping test runs&lt;/a&gt; documentation to learn more.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../guides/parallelization#Grouping-test-runs&quot;&gt;グループ化テスト実行の&lt;/a&gt;ドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="d915ddf3c36914629d327d2c68dfde909743460e" translate="yes" xml:space="preserve">
          <source>Please review our &lt;a href=&quot;../guides/parallelization&quot;&gt;parallelization&lt;/a&gt; documentation to learn more.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../guides/parallelization&quot;&gt;並列&lt;/a&gt;化のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="648ce9f7bfae23a160b0908245319db566b723f6" translate="yes" xml:space="preserve">
          <source>Please review our &lt;a href=&quot;../guides/parallelization#Grouping-test-runs&quot;&gt;grouping test runs&lt;/a&gt; documentation to learn more.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../guides/parallelization#Grouping-test-runs&quot;&gt;グループ化テストの実行&lt;/a&gt;に関するドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="be6507fa53943d340c7520bd623ecbdeab4dec46" translate="yes" xml:space="preserve">
          <source>Plugin Types</source>
          <target state="translated">プラグインの種類</target>
        </trans-unit>
        <trans-unit id="126bf5857fbb57e48571caa0258195b7725cf0a0" translate="yes" xml:space="preserve">
          <source>Plugin files</source>
          <target state="translated">プラグインファイル</target>
        </trans-unit>
        <trans-unit id="17b8e861f07b1ea2ddb0549e072a4750bb59bad5" translate="yes" xml:space="preserve">
          <source>Plugin for snapshot tests in Cypress. Same API as Jest, but with graphical interface for reviewing and approving changes.</source>
          <target state="translated">Cypress のスナップショットテスト用プラグイン。Jest と同じ API ですが、変更をレビューして承認するためのグラフィカルなインターフェイスを備えています。</target>
        </trans-unit>
        <trans-unit id="df0faf551cce2c46fc2bf78f85a108f0b663a112" translate="yes" xml:space="preserve">
          <source>Plugin that prints all browser console logs to the terminal while running Cypress tests. Currently, only Chrome is supported.</source>
          <target state="translated">Cypressのテストを実行中に、すべてのブラウザのコンソールログをターミナルに出力するプラグイン。現在、Chrome のみサポートされています。</target>
        </trans-unit>
        <trans-unit id="7c7335d872b9a5af31500b90d265684b87a2e163" translate="yes" xml:space="preserve">
          <source>Plugin to save code coverage collected during Cypress tests</source>
          <target state="translated">Cypressテスト中に収集したコードカバレッジを保存するプラグイン</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="d53f615a261b24f12949a1edfe9bf95dc9edd719" translate="yes" xml:space="preserve">
          <source>Plugins API</source>
          <target state="translated">API プラグイン</target>
        </trans-unit>
        <trans-unit id="982718d564e434e35c713b5fc51a7fa37f0c0c20" translate="yes" xml:space="preserve">
          <source>Plugins Guide</source>
          <target state="translated">ガイドプラグイン</target>
        </trans-unit>
        <trans-unit id="68b46a0bb9ea89c2b2c403d0a4a31086e471abef" translate="yes" xml:space="preserve">
          <source>Plugins are a &amp;ldquo;seam&amp;rdquo; for you to write your own custom code that executes during particular stages of the Cypress lifecycle.</source>
          <target state="translated">プラグインは、サイプレスライフサイクルの特定の段階で実行する独自のカスタムコードを作成するための「シーム」です。</target>
        </trans-unit>
        <trans-unit id="b5ae5fd3b892d3187e0ca88420c9a41bd2935b2d" translate="yes" xml:space="preserve">
          <source>Plugins can now return a &lt;code&gt;Promise&lt;/code&gt; and modify the yielded &lt;code&gt;config&lt;/code&gt; to set new configuration values and environment variables. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1042&quot;&gt;#1042&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/909&quot;&gt;#909&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/576&quot;&gt;#576&lt;/a&gt;.</source>
          <target state="translated">プラグインは &lt;code&gt;Promise&lt;/code&gt; を返し、生成された &lt;code&gt;config&lt;/code&gt; を変更して新しい設定値と環境変数を設定できるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1042&quot;&gt;＃1042&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/909&quot;&gt;＃909&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/576&quot;&gt;＃576を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="d746c1b6d54176c34b63f189b0c373dd2f441bbd" translate="yes" xml:space="preserve">
          <source>Plugins enable you to tap into the &lt;code&gt;node&lt;/code&gt; process running outside of the browser.</source>
          <target state="translated">プラグインを使用すると、ブラウザの外部で実行されている &lt;code&gt;node&lt;/code&gt; プロセスを利用できます。</target>
        </trans-unit>
        <trans-unit id="910330aae876aa8ce0b7d0d14ddc0f9fbd78259e" translate="yes" xml:space="preserve">
          <source>Plugins enable you to tap into, modify, or extend the internal behavior of Cypress.</source>
          <target state="translated">プラグインを使用すると、Cypress の内部動作を利用したり、変更したり、拡張したりすることができます。</target>
        </trans-unit>
        <trans-unit id="e12e8114a462f4f8ff5fda6e2211e528f6347b23" translate="yes" xml:space="preserve">
          <source>Plugins from our &lt;a href=&quot;../../plugins/index&quot;&gt;official list&lt;/a&gt; are just npm modules. This enables them to be versioned and updated separately without needing to update Cypress itself.</source>
          <target state="translated">私たちの&lt;a href=&quot;../../plugins/index&quot;&gt;公式リスト&lt;/a&gt;からのプラグインは、単にnpmモジュールです。これにより、サイプレス自体を更新する必要なく、それらを個別にバージョン管理および更新できます。</target>
        </trans-unit>
        <trans-unit id="9bbc771b9e4d2ff4b3fc1d1b790b3783cf56e890" translate="yes" xml:space="preserve">
          <source>Plugins now emit a &lt;a href=&quot;../tooling/plugins-guide#Browser-Launching&quot;&gt;&lt;code&gt;before:browser:launch&lt;/code&gt;&lt;/a&gt; event exposing you the browser that will be launched and its launch arguments. This enables you to modify the arguments prior to launching the browser. You can also use these arguments to modify how Chrome runs and to also test Chrome extensions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/691&quot;&gt;#691&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/298&quot;&gt;#298&lt;/a&gt;.</source>
          <target state="translated">プラグインは、起動するブラウザとその起動引数を公開する&lt;a href=&quot;../tooling/plugins-guide#Browser-Launching&quot;&gt; &lt;code&gt;before:browser:launch&lt;/code&gt; &lt;/a&gt;イベントを発行するようになりました。これにより、ブラウザを起動する前に引数を変更できます。これらの引数を使用して、Chromeの実行方法を変更したり、Chrome拡張機能をテストしたりすることもできます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/691&quot;&gt;＃691&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/298&quot;&gt;＃298を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a8c5d73e15b41313c635222c925b80ca0963b8f6" translate="yes" xml:space="preserve">
          <source>Plugins provide a way to support and extend the behavior of Cypress. Follow these instructions to &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/blob/develop/CONTRIBUTING.md#adding-plugins&quot;&gt;submit your own plugin&lt;/a&gt;.</source>
          <target state="translated">プラグインは、サイプレスの動作をサポートおよび拡張する方法を提供します。以下の手順に従って&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/blob/develop/CONTRIBUTING.md#adding-plugins&quot;&gt;、独自のプラグイン&lt;/a&gt;を送信してください。</target>
        </trans-unit>
        <trans-unit id="22d2bc1092a6e00bdee8d097d8f10b951a507661" translate="yes" xml:space="preserve">
          <source>Port used to host Cypress. Normally this is a randomly generated port</source>
          <target state="translated">Cypress のホストに使用されるポート。通常はランダムに生成されるポート</target>
        </trans-unit>
        <trans-unit id="12df6daba2058b99689eb1b0b44a15b22a05c755" translate="yes" xml:space="preserve">
          <source>Ported all links to use the new Cypress CDN.</source>
          <target state="translated">すべてのリンクを新しいCypress CDNを使用するために移植しました。</target>
        </trans-unit>
        <trans-unit id="cf1c85adba548e8d681255278976584a7e4a44de" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="translated">Position</target>
        </trans-unit>
        <trans-unit id="565296789f5f499125251d7d82bffd57f7aea412" translate="yes" xml:space="preserve">
          <source>Position and dimensions (in pixels) used to crop the final screenshot image. Should have the following shape: &lt;code&gt;{ x: 0, y: 0, width: 100, height: 100 }&lt;/code&gt;</source>
          <target state="translated">最終的なスクリーンショット画像のトリミングに使用される位置と寸法（ピクセル単位）。次の形状である必要があります： &lt;code&gt;{ x: 0, y: 0, width: 100, height: 100 }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5328e2eab4a4367659a0bfb8a1b7bc9cbc43555e" translate="yes" xml:space="preserve">
          <source>Pre-release binary URL format</source>
          <target state="translated">リリース前のバイナリURL形式</target>
        </trans-unit>
        <trans-unit id="9dfd349ebee555eb8d652be20dad971cae439eca" translate="yes" xml:space="preserve">
          <source>Preferences</source>
          <target state="translated">Preferences</target>
        </trans-unit>
        <trans-unit id="ad054850bd4647bb52b3bc5211b5a6a2f58b33bb" translate="yes" xml:space="preserve">
          <source>Prefixes</source>
          <target state="translated">Prefixes</target>
        </trans-unit>
        <trans-unit id="fd3354ea8dd6b5793efefeef4be187da40f3da9c" translate="yes" xml:space="preserve">
          <source>Preprocessors</source>
          <target state="translated">Preprocessors</target>
        </trans-unit>
        <trans-unit id="bcf6eed52229706a519d31a94306de659bf8bc81" translate="yes" xml:space="preserve">
          <source>Preprocessors API</source>
          <target state="translated">プリプロセッサ API</target>
        </trans-unit>
        <trans-unit id="47d82dbb50e017e85c282ecc34e79e6e4d9ac4b4" translate="yes" xml:space="preserve">
          <source>Preserve Once</source>
          <target state="translated">一度保存</target>
        </trans-unit>
        <trans-unit id="98783ad148238eaf202e943052f9a547906f201a" translate="yes" xml:space="preserve">
          <source>Preserve cookies through multiple tests</source>
          <target state="translated">複数のテストによるクッキーの保存</target>
        </trans-unit>
        <trans-unit id="bca788763dd46b6bb079756ca4b68a206414f9a1" translate="yes" xml:space="preserve">
          <source>Preset</source>
          <target state="translated">Preset</target>
        </trans-unit>
        <trans-unit id="61d932405e26585cc918cbeeb328b99a79b5a857" translate="yes" xml:space="preserve">
          <source>Prevent 3rd party windows from gaining focus over main window.</source>
          <target state="translated">サードパーティのウィンドウがメインウィンドウに集中しないようにします。</target>
        </trans-unit>
        <trans-unit id="ef4d0747f586d604761156026f076119757df479" translate="yes" xml:space="preserve">
          <source>Prevent &lt;a href=&quot;../../api/commands/pause&quot;&gt;&lt;code&gt;.pause()&lt;/code&gt;&lt;/a&gt; from actually pausing during &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">防止は、&lt;a href=&quot;../../api/commands/pause&quot;&gt; &lt;code&gt;.pause()&lt;/code&gt; &lt;/a&gt;実際に中に一時停止から &lt;code&gt;cypress run&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61accf285947c03d09b0204f6d99face976b4732" translate="yes" xml:space="preserve">
          <source>Prevent &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; from slurping up Angular async template GETs.</source>
          <target state="translated">防ぎ&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;角度非同期テンプレートをズルズルから取得します。</target>
        </trans-unit>
        <trans-unit id="ae49ea58a9b55837fffba93cb8f9c37ff6e37de1" translate="yes" xml:space="preserve">
          <source>Prevent &lt;a href=&quot;../../api/commands/url&quot;&gt;&lt;code&gt;cy.url()&lt;/code&gt;&lt;/a&gt; from accessing the URL during transition phase and throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/356&quot;&gt;#356&lt;/a&gt;.</source>
          <target state="translated">防ぎ&lt;a href=&quot;../../api/commands/url&quot;&gt; &lt;code&gt;cy.url()&lt;/code&gt; &lt;/a&gt;遷移段階中URLにアクセスして、エラーをスローします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/356&quot;&gt;＃356を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="12d47ac24c43423344977c75ef2ad671cd358765" translate="yes" xml:space="preserve">
          <source>Prevent &lt;code&gt;Host&lt;/code&gt; header from having its port appended when request was for port &lt;code&gt;80&lt;/code&gt; or &lt;code&gt;443&lt;/code&gt; which lead to 3rd party reverse proxy problems such as with &lt;code&gt;zeit.co&lt;/code&gt; hosting. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/222&quot;&gt;#222&lt;/a&gt;.</source>
          <target state="translated">防ぎ &lt;code&gt;Host&lt;/code&gt; 要求がポートのためだった場合、そのポートを有するからヘッダが付加さ &lt;code&gt;80&lt;/code&gt; 又は &lt;code&gt;443&lt;/code&gt; そのような場合と同様に、サードパーティリバースプロキシの問題につながる &lt;code&gt;zeit.co&lt;/code&gt; がホスティング。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/222&quot;&gt;＃222を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="efa4ce25df5037ebaa6c1b4e1ca14abf1b6f0bd9" translate="yes" xml:space="preserve">
          <source>Prevent &lt;code&gt;NODE_ENV&lt;/code&gt; from being set to &lt;code&gt;undefined&lt;/code&gt; when parent process did not have it defined. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1223&quot;&gt;#1223&lt;/a&gt;.</source>
          <target state="translated">防止 &lt;code&gt;NODE_ENV&lt;/code&gt; に設定してから &lt;code&gt;undefined&lt;/code&gt; 親プロセスが定義されていなかったとき。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1223&quot;&gt;＃1223を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2ac0b4630784800cb5a9d23d897989ccfc05dbdd" translate="yes" xml:space="preserve">
          <source>Prevent &lt;code&gt;undefined&lt;/code&gt; error when attempting to &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; an element which is fixed position when it is covered by another element. Cypress now correctly provides why it cannot click the element in question. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/90&quot;&gt;#90&lt;/a&gt;.</source>
          <target state="translated">防止は &lt;code&gt;undefined&lt;/code&gt; しようとするとエラー&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;それは他の要素で覆われているときに位置固定されている要素。サイプレスは、問題の要素をクリックできない理由を正しく提供するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/90&quot;&gt;＃90を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8145e593091f0bdd344cb89ebaab60725784eb4d" translate="yes" xml:space="preserve">
          <source>Prevent XHR / Ajax requests before a remote page initially loads</source>
          <target state="translated">リモートページが最初にロードされる前に XHR/Ajax リクエストを防ぐ</target>
        </trans-unit>
        <trans-unit id="5ef06cd623964d4bcdf54bd2098e2e4435a1df48" translate="yes" xml:space="preserve">
          <source>Prevent XHR&amp;rsquo;s from throwing errors on &lt;code&gt;arraybuffer&lt;/code&gt; content. Properly set &lt;code&gt;xhr.responseBody&lt;/code&gt; for &lt;code&gt;XML&lt;/code&gt;, &lt;code&gt;blob&lt;/code&gt;, and &lt;code&gt;arraybuffer&lt;/code&gt;.</source>
          <target state="translated">XHRが &lt;code&gt;arraybuffer&lt;/code&gt; コンテンツでエラーをスローしないようにします。正しく設定 &lt;code&gt;xhr.responseBody&lt;/code&gt; をするために &lt;code&gt;XML&lt;/code&gt; 、 &lt;code&gt;blob&lt;/code&gt; 、および &lt;code&gt;arraybuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4d3b1ec01f63ffce4284293d8672a67dd34f71d" translate="yes" xml:space="preserve">
          <source>Prevent a bug with &lt;code&gt;node-sass&lt;/code&gt; on OSX + Windows when local &lt;code&gt;node&lt;/code&gt; version does not match bundled &lt;code&gt;node&lt;/code&gt; when importing components directly in spec files. The underlying issue was because we forgot to update &lt;code&gt;Buildkite&lt;/code&gt; and &lt;code&gt;Appveyor&lt;/code&gt; when we upgraded &lt;code&gt;Electron&lt;/code&gt; in &lt;code&gt;2.0.0&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1387&quot;&gt;#1387&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1390&quot;&gt;#1390&lt;/a&gt;.</source>
          <target state="translated">スペックファイルにコンポーネントを直接インポートするときに、ローカル &lt;code&gt;node&lt;/code&gt; バージョンがバンドルされた &lt;code&gt;node&lt;/code&gt; 一致しない場合のOSX + Windows での &lt;code&gt;node-sass&lt;/code&gt; のバグを防止します。根本的な問題は、 &lt;code&gt;Electron&lt;/code&gt; を &lt;code&gt;2.0.0&lt;/code&gt; にアップグレードしたときに &lt;code&gt;Buildkite&lt;/code&gt; と &lt;code&gt;Appveyor&lt;/code&gt; を更新するのを忘れていたためです。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1387&quot;&gt;＃1387&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1390&quot;&gt;＃1390を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="53b8da4c48c9e4b4bc35d95052dea0eab1cd8601" translate="yes" xml:space="preserve">
          <source>Prevent accidental mutation of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; options when &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; was provided options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/84&quot;&gt;#84&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/85&quot;&gt;#85&lt;/a&gt;.</source>
          <target state="translated">防止の偶発変異&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;のオプション&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;のオプションを提供しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/84&quot;&gt;＃84&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/85&quot;&gt;＃85を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="18d575fb79f264e40ede1a06196a300ac3595c80" translate="yes" xml:space="preserve">
          <source>Prevent app crashing when &lt;code&gt;cypress.json&lt;/code&gt; could not be read or written to when adding a project.</source>
          <target state="translated">プロジェクトの追加時に &lt;code&gt;cypress.json&lt;/code&gt; を読み書きできなかったときにアプリがクラッシュするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="8ee32636219690bc3f94434df32efeaf150ecc50" translate="yes" xml:space="preserve">
          <source>Prevent cypress.app from showing in taskbar.</source>
          <target state="translated">タスクバーに cypress.app が表示されないようにします。</target>
        </trans-unit>
        <trans-unit id="cecb86f9ca09a738ff4fa2cd16166e842394d5b6" translate="yes" xml:space="preserve">
          <source>Prevent edge case where &lt;code&gt;aliasing&lt;/code&gt; in the Command Log was aliasing the wrong command</source>
          <target state="translated">コマンドログのエイリアスが間違ったコマンドの &lt;code&gt;aliasing&lt;/code&gt; であったエッジケースを防止</target>
        </trans-unit>
        <trans-unit id="1498d3eb5a04761f8492d5cc7e01af904d90b054" translate="yes" xml:space="preserve">
          <source>Prevent error during element stringification on &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/93&quot;&gt;#93&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; での要素の文字列化中のエラーを防止します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/93&quot;&gt;＃93を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b9a26a8f9e4f623386517c3b2ed0eacb7ba35cad" translate="yes" xml:space="preserve">
          <source>Prevent error during verification in the CLI on Linux / OSX. Also makes terminal colors work again. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/717&quot;&gt;#717&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/718&quot;&gt;#718&lt;/a&gt;.</source>
          <target state="translated">Linux / OSXのCLIでの検証中のエラーを防止します。また、端末の色を再び機能させます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/717&quot;&gt;＃717&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/718&quot;&gt;＃718を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6f2491c6306137441f5cd488a0b47e6245a22c51" translate="yes" xml:space="preserve">
          <source>Prevent error from being thrown when &lt;code&gt;.only&lt;/code&gt;&amp;lsquo;s are switched in between active test runs.</source>
          <target state="translated">アクティブなテスト実行間で &lt;code&gt;.only&lt;/code&gt; が切り替えられたときにエラーがスローされないようにします。</target>
        </trans-unit>
        <trans-unit id="52914189e510d4b500bb952d3bd5a3c2918ad3c5" translate="yes" xml:space="preserve">
          <source>Prevent failed &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;cy.to&lt;/code&gt; from outputting a second error&amp;rsquo;d command log.</source>
          <target state="translated">失敗した&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;および &lt;code&gt;cy.to&lt;/code&gt; が2番目のエラーのコマンドログを出力しないようにします。</target>
        </trans-unit>
        <trans-unit id="1a1773cc0a5afd8758d20a7bb236f4efc63b191c" translate="yes" xml:space="preserve">
          <source>Prevent fixtures from being accidentally overwritten and having their content blanked out. There was a very subtle chance due to node&amp;rsquo;s async file writing that as a file was being written with a formatted fixture, that another call to the same fixture would read in at that exact moment. If this happened the 2nd read would resolve with zero bytes, which would then end up rewriting the file back with zero bytes.</source>
          <target state="translated">フィクスチャが誤って上書きされ、その内容が空白になるのを防ぎます。ノードの非同期ファイルがフォーマットされたフィクスチャでファイルが書き込まれているときに、同じフィクスチャへの別の呼び出しがその瞬間に読み込まれるという非常に微妙な可能性がありました。これが発生した場合、2番目の読み取りはゼロバイトで解決され、ファイルはゼロバイトで書き直されます。</target>
        </trans-unit>
        <trans-unit id="a9384a224330fa6b5c197c20e2476d44186636c9" translate="yes" xml:space="preserve">
          <source>Prevent headless / CI from throwing errors on &lt;code&gt;history.pushState&lt;/code&gt; and &lt;code&gt;history.replaceState&lt;/code&gt;.</source>
          <target state="translated">ヘッドレス/ CIが &lt;code&gt;history.pushState&lt;/code&gt; および &lt;code&gt;history.replaceState&lt;/code&gt; でエラーをスローするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="5431db811c0f7395db3708777309135794702f03" translate="yes" xml:space="preserve">
          <source>Prevent infinite loop due to a trifecta of rare circumstances with &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;. Clicking will now retry sync after it attempts to scroll past the element covering up the desired clickable element. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/46&quot;&gt;#46&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;を使用して、まれな状況の3部による無限ループを防止します。クリックすると、目的のクリック可能な要素を覆う要素を超えてスクロールしようとした後、同期が再試行されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/46&quot;&gt;＃46を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="01b10c1f675c9f2c9cda0e63dbe718084a0ff5a1" translate="yes" xml:space="preserve">
          <source>Prevent infinite loop in edge cases when checking whether an element was hidden.</source>
          <target state="translated">要素が隠されているかどうかをチェックする際に、エッジケースでの無限ループを防ぐ。</target>
        </trans-unit>
        <trans-unit id="b9823a45c7137191bd9eedc5df46372db04937da" translate="yes" xml:space="preserve">
          <source>Prevent memory leak with Cypress helper listeners on every re-run of the tests.</source>
          <target state="translated">テストの再実行のたびにCypressヘルパーリスナーを使用してメモリリークを防止します。</target>
        </trans-unit>
        <trans-unit id="9f82e6cd1e0c13483f178a3cd34817fe532c5726" translate="yes" xml:space="preserve">
          <source>Prevent memory leak with custom 3rd party Cypress listeners in spec windows on every re-run of the tests.</source>
          <target state="translated">テストを再実行するたびに、カスタムサードパーティのCypressリスナーを仕様ウィンドウに配置してメモリリークを防止します。</target>
        </trans-unit>
        <trans-unit id="1b18f9112d37bf84065f9e4fdeb219daaa97bd29" translate="yes" xml:space="preserve">
          <source>Prevent newer versions of Chrome from prompting you to save passwords and suppressed other extension related popups for Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/704&quot;&gt;#704&lt;/a&gt;.</source>
          <target state="translated">Chromeの新しいバージョンがパスワードの保存を要求するのを防ぎ、Windows用の他の拡張機能関連ポップアップを抑制します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/704&quot;&gt;＃704を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6ab07f49f20c1e00888276ca95c8dfc544a06ba2" translate="yes" xml:space="preserve">
          <source>Prevent passing &lt;code&gt;{multiple: true}&lt;/code&gt; incorrectly showing up in Command Log. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/88&quot;&gt;#88&lt;/a&gt;.</source>
          <target state="translated">コマンドログに誤って表示される &lt;code&gt;{multiple: true}&lt;/code&gt; を渡すのを防ぎます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/88&quot;&gt;＃88を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5e07da297f484793cfa4e463e59124b9cf10b824" translate="yes" xml:space="preserve">
          <source>Prevent regression with not automatically scaling the viewport to fit into the window size</source>
          <target state="translated">ビューポートを自動的にウィンドウサイズに合わせてスケーリングしないことによる回帰を防ぐ</target>
        </trans-unit>
        <trans-unit id="80c78db01b10034089d42fe3be15eab85a9c4d4f" translate="yes" xml:space="preserve">
          <source>Prevent rejected promise from causing error about invalid API key during a CI run.</source>
          <target state="translated">CI実行中に無効なAPIキーに関するエラーが発生しないようにしました。</target>
        </trans-unit>
        <trans-unit id="130fa154434a426db703b93031f0fdd45c2595c4" translate="yes" xml:space="preserve">
          <source>Prevent removing trailing new lines on fixtures after formatting.</source>
          <target state="translated">フォーマット後のフィクスチャ上の末尾の改行を削除しないようにする。</target>
        </trans-unit>
        <trans-unit id="4863fce00668b1afab3388c8adc62bf783894cf0" translate="yes" xml:space="preserve">
          <source>Prevent reverting the DOM while tests are running. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/28&quot;&gt;#28&lt;/a&gt;.</source>
          <target state="translated">テストの実行中にDOMが元に戻らないようにします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/28&quot;&gt;＃28を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0281b6bbeaaa9231c16aa025b6cba761b2eb2f1a" translate="yes" xml:space="preserve">
          <source>Prevent server from opening and immediately closing + re-opening when project is missing a Project ID and one is generated.</source>
          <target state="translated">プロジェクトにプロジェクトIDがなく、プロジェクトIDが生成された場合に、サーバーが開いたり、すぐに閉じたり、再オープンしたりしないようにする。</target>
        </trans-unit>
        <trans-unit id="3dd1bb27c63d12cea5da3f5331f006c58bbae7e7" translate="yes" xml:space="preserve">
          <source>Prevented accidentally setting &lt;code&gt;domain&lt;/code&gt; cookies when they were really &lt;code&gt;hostOnly&lt;/code&gt; cookies, thus duplicating the number of cookies sent on requests. Kudos to &lt;a href=&quot;https://github.com/bahmutov&quot;&gt;@bahmutov&lt;/a&gt; for finding this one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/207&quot;&gt;#207&lt;/a&gt;.</source>
          <target state="translated">実際に &lt;code&gt;hostOnly&lt;/code&gt; Cookieであったときに &lt;code&gt;domain&lt;/code&gt; Cookieを誤って設定することを防ぎ、リクエストで送信されたCookieの数を重複させました。これを見つけるための&lt;a href=&quot;https://github.com/bahmutov&quot;&gt;@bahmutov&lt;/a&gt;への称賛。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/207&quot;&gt;＃207を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="189d405cd0ea0eb772da51b1fda828ada9105625" translate="yes" xml:space="preserve">
          <source>Prevented bug where the assertion message: &lt;code&gt;expected &amp;lt;x&amp;gt; element to exist&lt;/code&gt; would log over and over again when Cypress retried querying for a DOM element.</source>
          <target state="translated">サイプレスがDOM要素のクエリを再試行したときに、アサーションメッセージ： &lt;code&gt;expected &amp;lt;x&amp;gt; element to exist&lt;/code&gt; はずの&amp;lt;x&amp;gt;要素が何度も何度もログに記録されるというバグを防止しました。</target>
        </trans-unit>
        <trans-unit id="aac7ed455037a3c8067762930dfa6f00f3b3158d" translate="yes" xml:space="preserve">
          <source>Prevented edge case with &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; where it would not be able to be canceled without throwing an unhandled rejection error.</source>
          <target state="translated">未処理の拒否エラーをスローせずにキャンセルできない&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;によるエッジケースを防止しました。</target>
        </trans-unit>
        <trans-unit id="35f2a9243cca482f02f4a98062b3b557097174b5" translate="yes" xml:space="preserve">
          <source>Prevented external &lt;code&gt;NODE_ENV&lt;/code&gt; mutations causing problems in CI.</source>
          <target state="translated">CIで問題を引き起こす外部 &lt;code&gt;NODE_ENV&lt;/code&gt; 変異を防止しました。</target>
        </trans-unit>
        <trans-unit id="a780476355b26b6b152627e3c708b4c9dd4dfdcf" translate="yes" xml:space="preserve">
          <source>Preventing &lt;code&gt;mousedown&lt;/code&gt; does not prevent typing</source>
          <target state="translated">&lt;code&gt;mousedown&lt;/code&gt; 防止してもタイピングは防止されません</target>
        </trans-unit>
        <trans-unit id="4bcaa8b47d261cf0ede8d92b944f1c6ceff5906e" translate="yes" xml:space="preserve">
          <source>Preventing default action on &lt;code&gt;mousedown&lt;/code&gt; will no longer give focus as per the spec.</source>
          <target state="translated">&lt;code&gt;mousedown&lt;/code&gt; 時のデフォルトのアクションを防止すると、仕様に従ってフォーカスがなくなります。</target>
        </trans-unit>
        <trans-unit id="b459814200bb52a4c322d574a38ac0c3dd81e106" translate="yes" xml:space="preserve">
          <source>Previously Cypress would send the &lt;code&gt;auth&lt;/code&gt; header to any URLs that match the CORS origin of the original &lt;code&gt;auth&lt;/code&gt; header. We now correctly only send the &lt;code&gt;auth&lt;/code&gt; headers when there is an exact match on the &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-2.2&quot;&gt;protection space&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4267&quot;&gt;#4267&lt;/a&gt;.</source>
          <target state="translated">以前は、サイプレスは元の &lt;code&gt;auth&lt;/code&gt; ヘッダーのCORSオリジンに一致するすべてのURLに &lt;code&gt;auth&lt;/code&gt; ヘッダーを送信していました。&lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-2.2&quot;&gt;保護スペースが&lt;/a&gt;完全に一致する場合にのみ、 &lt;code&gt;auth&lt;/code&gt; ヘッダーを正しく送信するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4267&quot;&gt;＃4267を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="192f8df202b75e24b9db923588dd054d065fbc3e" translate="yes" xml:space="preserve">
          <source>Previously to record runs you had the environment variable: &lt;code&gt;CYPRESS_CI_KEY&lt;/code&gt; or you wrote:</source>
          <target state="translated">以前は実行を記録するために、環境変数 &lt;code&gt;CYPRESS_CI_KEY&lt;/code&gt; を持っているか、次のように記述しました。</target>
        </trans-unit>
        <trans-unit id="7791eb2c2cd2a05f749d3b2a20ef03b7549e23af" translate="yes" xml:space="preserve">
          <source>Previously using &lt;code&gt;eventually.have.length&lt;/code&gt; was impossible (and this would throw an error), but now this works as you&amp;rsquo;d expect with the default &lt;code&gt;should('have.length')&lt;/code&gt;.</source>
          <target state="translated">以前使用して &lt;code&gt;eventually.have.length&lt;/code&gt; を不可能にして（これはエラーをスローします）が、今のように、この作品は、デフォルトで期待 &lt;code&gt;should('have.length')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d35b607a04295d2e4a24932e7c57b6c313a84e77" translate="yes" xml:space="preserve">
          <source>Previously we instrumented the application code (either using a build step or inserting a plugin into the Babel pipeline). In the example above, we are NOT loading an application, instead we are only running the test files by themselves.</source>
          <target state="translated">以前は、アプリケーションコードのインストルメントを行いました(ビルドステップを使用するか、Babelパイプラインにプラグインを挿入するかのいずれか)。上の例では、アプリケーションをロードしておらず、代わりにテストファイルだけを実行しています。</target>
        </trans-unit>
        <trans-unit id="ec550f09a30d725fa10475a44e2c863a75cb5367" translate="yes" xml:space="preserve">
          <source>Previously, we auto-magically included all files within &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Folder-Structure&quot;&gt;&lt;code&gt;cypress/support&lt;/code&gt;&lt;/a&gt;. This has now &lt;a href=&quot;error-messages&quot;&gt;gone away&lt;/a&gt; and we&amp;rsquo;ve simplified this to automatically including a single &lt;code&gt;cypress/support/index.js&lt;/code&gt; file. That single file acts as the entry point meaning you should &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; the other support files you&amp;rsquo;d like to include. Although this is still &amp;ldquo;automatic&amp;rdquo; it&amp;rsquo;s much less magical and we&amp;rsquo;ll be updating all of our docs to reflect this. The purpose of &lt;code&gt;cypress/support&lt;/code&gt; hasn&amp;rsquo;t really changed, just the implementation of it has. We will automatically seed a &lt;code&gt;cypress/support/index.js&lt;/code&gt; file for you (even on existing projects). The file location of &lt;code&gt;cypress/support/index.js&lt;/code&gt; can be changed with the new &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; option in your &lt;code&gt;cypress.json&lt;/code&gt;. This feature can also be turned off by specifying &lt;code&gt;supportFile: false&lt;/code&gt;.</source>
          <target state="translated">以前は、すべてのファイルを自動的に&lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Folder-Structure&quot;&gt; &lt;code&gt;cypress/support&lt;/code&gt; &lt;/a&gt;に含めていました。これは&lt;a href=&quot;error-messages&quot;&gt;廃止され&lt;/a&gt;、単一の &lt;code&gt;cypress/support/index.js&lt;/code&gt; ファイルを自動的に含めるように簡略化しました。その1つのファイルがエントリポイントとして機能し、他のサポートファイルを &lt;code&gt;import&lt;/code&gt; たり、含めたり &lt;code&gt;require&lt;/code&gt; ます。これはまだ「自動」ですが、それほど魔法ではありません。これを反映するためにすべてのドキュメントを更新します。 &lt;code&gt;cypress/support&lt;/code&gt; の目的は実際には変更されていませんが、実装だけが変更されています。自動的に &lt;code&gt;cypress/support/index.js&lt;/code&gt; ファイルをシードします（既存のプロジェクトでも）。ファイルの場所 &lt;code&gt;cypress/support/index.js&lt;/code&gt; は、 &lt;code&gt;cypress.json&lt;/code&gt; の新しい&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;オプションで変更できます。この機能は、 &lt;code&gt;supportFile: false&lt;/code&gt; 指定してオフにすることもできます。</target>
        </trans-unit>
        <trans-unit id="efd0d785568ad62a14d73e5501dc9dee29e79107" translate="yes" xml:space="preserve">
          <source>Print DEBUG logs</source>
          <target state="translated">DEBUGログの印刷</target>
        </trans-unit>
        <trans-unit id="71527d3a8e156e59029605cc720a3674482b7794" translate="yes" xml:space="preserve">
          <source>Print a message to the Command Log.</source>
          <target state="translated">コマンドログにメッセージを印刷します。</target>
        </trans-unit>
        <trans-unit id="b2f154d7ab5cb6d6025da00890ba1943ca622426" translate="yes" xml:space="preserve">
          <source>Print a message to the Cypress Command Log.</source>
          <target state="translated">Cypress コマンドログにメッセージを印刷します。</target>
        </trans-unit>
        <trans-unit id="9eb95f3ecc1465eb841cf15ef6da779ec4b8036c" translate="yes" xml:space="preserve">
          <source>Print a message with arguments to the Command Log.</source>
          <target state="translated">コマンドログに引数を指定してメッセージを印刷します。</target>
        </trans-unit>
        <trans-unit id="623745b7264bb9f44bb5af709633dae690bfec0c" translate="yes" xml:space="preserve">
          <source>Print all env vars:</source>
          <target state="translated">すべての環境変数を表示します。</target>
        </trans-unit>
        <trans-unit id="234fed8955268e9bb6a16adba89aa82b96c674fe" translate="yes" xml:space="preserve">
          <source>Print all existing installed versions of Cypress. The output will be a &lt;strong&gt;space delimited&lt;/strong&gt; list of version numbers.</source>
          <target state="translated">サイプレスの既存のインストール済みバージョンをすべて印刷します。出力は、&lt;strong&gt;スペースで区切られた&lt;/strong&gt;バージョン番号のリストになります。</target>
        </trans-unit>
        <trans-unit id="44d37a0fdc6df252ae5ff1a9e7a38c7ccb79c107" translate="yes" xml:space="preserve">
          <source>Print environment variables with &lt;code&gt;proxy&lt;/code&gt; (case insensitive) in the name:</source>
          <target state="translated">名前に &lt;code&gt;proxy&lt;/code&gt; （大文字と小文字を区別しない）を含む環境変数を出力します。</target>
        </trans-unit>
        <trans-unit id="6a9381d22c70f783470bbd5bc5dc27f8fa0b2354" translate="yes" xml:space="preserve">
          <source>Print messages with arguments to the Command Log.</source>
          <target state="translated">コマンドログへの引数を持つメッセージを印刷します。</target>
        </trans-unit>
        <trans-unit id="621c820fbababb457a7c5d015864dd8ca015076b" translate="yes" xml:space="preserve">
          <source>Print the &lt;code&gt;path&lt;/code&gt; to the Cypress cache folder.</source>
          <target state="translated">サイプレスキャッシュフォルダーへの &lt;code&gt;path&lt;/code&gt; を印刷します。</target>
        </trans-unit>
        <trans-unit id="2cdac2d39566827dc1afb2c565aa630e6decd602" translate="yes" xml:space="preserve">
          <source>Prior to issuing any of the commands, we check the current state of the DOM and take some actions to ensure the DOM element is &amp;ldquo;ready&amp;rdquo; to receive the action.</source>
          <target state="translated">コマンドを発行する前に、DOMの現在の状態を確認し、DOM要素がアクションを受け取る準備ができていることを確認するためのアクションを実行します。</target>
        </trans-unit>
        <trans-unit id="3601827f9ae81803e311b1e69b75667f3d0f1d8e" translate="yes" xml:space="preserve">
          <source>Problematic &lt;code&gt;headers&lt;/code&gt; are now automatically stripped from remote responses.</source>
          <target state="translated">問題のある &lt;code&gt;headers&lt;/code&gt; がリモート応答から自動的に削除されるようになりました。</target>
        </trans-unit>
        <trans-unit id="fcee6d2b8044d83d1bb14ec8fbb7a98c47dbf470" translate="yes" xml:space="preserve">
          <source>Problems logging in through GitHub in the Test Runner have been fixed. The GitHub login window no longer shows the browser support banner and the &amp;ldquo;Authorize cypress-io&amp;rdquo; button is no longer disabled. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1251&quot;&gt;#1251&lt;/a&gt;.</source>
          <target state="translated">テストランナーのGitHubを介したログインの問題が修正されました。GitHubログインウィンドウにブラウザーサポートバナーが表示されなくなり、[サイプレスioの認証]ボタンが無効になりなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1251&quot;&gt;＃1251を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1d30cd1b51b1d212f02de2178ad2b8c01852f4b3" translate="yes" xml:space="preserve">
          <source>Project ID</source>
          <target state="translated">プロジェクトID</target>
        </trans-unit>
        <trans-unit id="727ba3f4233a06464d39f0869dadba010a46f06d" translate="yes" xml:space="preserve">
          <source>Project ID&amp;rsquo;s and &lt;code&gt;cypress.json&lt;/code&gt; are now only generated once you start your Cypress server. Previously they were created initially when you choose the project folder. This now means you won&amp;rsquo;t have to cleanup excess files if you accidentally select the wrong folder. Additionally you can now use Cypress 100% offline. Previously the GUI would block until the project had an ID but this restriction has been lifted.</source>
          <target state="translated">プロジェクトIDと &lt;code&gt;cypress.json&lt;/code&gt; は、サイプレスサーバーを起動したときにのみ生成されるようになりました。以前は、プロジェクトフォルダを選択したときに最初に作成されていました。これは、誤って間違ったフォルダを選択した場合に、余分なファイルをクリーンアップする必要がないことを意味します。さらに、サイプレスを100％オフラインで使用できるようになりました。以前は、プロジェクトにIDが付与されるまでGUIはブロックされましたが、この制限は解除されました。</target>
        </trans-unit>
        <trans-unit id="c685b753b926ec8849affcb8d421cb1028eb8751" translate="yes" xml:space="preserve">
          <source>Project ID&amp;rsquo;s can be programmatically set now.</source>
          <target state="translated">プロジェクトIDをプログラムで設定できるようになりました。</target>
        </trans-unit>
        <trans-unit id="aaf624c34f99193add0b679f5f92c5d6ec30b835" translate="yes" xml:space="preserve">
          <source>Project analytics</source>
          <target state="translated">プロジェクト分析</target>
        </trans-unit>
        <trans-unit id="53e890d5f0fffe09587c55dce74e9a6febf59b5c" translate="yes" xml:space="preserve">
          <source>Projects</source>
          <target state="translated">Projects</target>
        </trans-unit>
        <trans-unit id="e123aa6a4ff8eadc96d3bd56a245b6a03340c357" translate="yes" xml:space="preserve">
          <source>Projects are either &lt;strong&gt;public&lt;/strong&gt; with their runs being publicly viewable by anyone, or &lt;strong&gt;private&lt;/strong&gt; which restricts their access to only users you&amp;rsquo;ve invited. All &lt;strong&gt;existing&lt;/strong&gt; projects were set to &lt;strong&gt;private&lt;/strong&gt; by default.</source>
          <target state="translated">プロジェクトは&lt;strong&gt;公開されて&lt;/strong&gt;おり、実行は誰でも閲覧できますが、&lt;strong&gt;プライベート&lt;/strong&gt;にすると、招待したユーザーだけにアクセスが制限されます。&lt;strong&gt;既存の&lt;/strong&gt;プロジェクトはすべてデフォルトで&lt;strong&gt;非公開&lt;/strong&gt;に設定されていました。</target>
        </trans-unit>
        <trans-unit id="11be675374b689349152bea4dbed00bb5f3a588f" translate="yes" xml:space="preserve">
          <source>Projects will no longer automatically acquire a &lt;code&gt;projectId&lt;/code&gt; when being added. There is now a very explicit &lt;strong&gt;opt-in&lt;/strong&gt; process where you setup your project to record. This should make it much clearer what&amp;rsquo;s going on behind the scenes.</source>
          <target state="translated">プロジェクトは、追加時に &lt;code&gt;projectId&lt;/code&gt; を自動的に取得しなくなりました。これで、プロジェクトを記録するように設定する非常に明示的な&lt;strong&gt;オプトイン&lt;/strong&gt;プロセスがあります。これにより、舞台裏で何が起こっているかがより明確になります。</target>
        </trans-unit>
        <trans-unit id="009db11daac7a300479cc448cbcb0d968ba5acd6" translate="yes" xml:space="preserve">
          <source>Projects without an ID now error correctly when running in CI.</source>
          <target state="translated">IDのないプロジェクトがCIで実行されたときに正しくエラーが出るようになりました。</target>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="b1d472e424c03ff52490d1edc8a0e23f95babb92" translate="yes" xml:space="preserve">
          <source>Promises</source>
          <target state="translated">Promises</target>
        </trans-unit>
        <trans-unit id="f53f97a25137053ff155df3b0aeedae4354f9ae4" translate="yes" xml:space="preserve">
          <source>Properly whitelist resource like XHR&amp;rsquo;s which have query params such as jquery&amp;rsquo;s &lt;code&gt;{cache: false}&lt;/code&gt; option.</source>
          <target state="translated">jqueryの &lt;code&gt;{cache: false}&lt;/code&gt; オプションなどのクエリパラメータを持つXHRなどの適切にホワイトリストリソース。</target>
        </trans-unit>
        <trans-unit id="5d58e92ced2490c9c3fd7a5c6380f1eaa80be67f" translate="yes" xml:space="preserve">
          <source>Properties list with intelligent defaults</source>
          <target state="translated">インテリジェントなデフォルトを持つプロパティリスト</target>
        </trans-unit>
        <trans-unit id="a0e626588ff760431b1dc4e504ac484903e46765" translate="yes" xml:space="preserve">
          <source>Properties that are functions are invoked</source>
          <target state="translated">関数であるプロパティが呼び出される</target>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">Property</target>
        </trans-unit>
        <trans-unit id="c538ecf0d030ce8fe61a4d6de437ff0c82fd35d5" translate="yes" xml:space="preserve">
          <source>Property help when writing and hovering on configuration keys</source>
          <target state="translated">設定キーへの書き込みとホバリング時のプロパティヘルプ</target>
        </trans-unit>
        <trans-unit id="1ed77c3f7ffc41a33eadccef5727dc7c97079235" translate="yes" xml:space="preserve">
          <source>Protocol</source>
          <target state="translated">Protocol</target>
        </trans-unit>
        <trans-unit id="5562dbfecb174e5ab79bfee9537f5c59d37c83a1" translate="yes" xml:space="preserve">
          <source>Protocol can be omitted from common hosts</source>
          <target state="translated">一般的なホストからプロトコルを省略できる</target>
        </trans-unit>
        <trans-unit id="f4252a87fe560d6c55080f4b1abd2ad22a7aae61" translate="yes" xml:space="preserve">
          <source>Provide a &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; を&lt;/a&gt;提供する</target>
        </trans-unit>
        <trans-unit id="a24e40f04dc129e12ddd570fc8b83ac90bbbbedc" translate="yes" xml:space="preserve">
          <source>Provide an &lt;code&gt;onBeforeLoad&lt;/code&gt; callback function</source>
          <target state="translated">&lt;code&gt;onBeforeLoad&lt;/code&gt; コールバック関数を提供する</target>
        </trans-unit>
        <trans-unit id="8e396f01e5d8a3cf02a29c733e6c36b2bfd6873e" translate="yes" xml:space="preserve">
          <source>Provide an &lt;code&gt;onLoad&lt;/code&gt; callback function</source>
          <target state="translated">&lt;code&gt;onLoad&lt;/code&gt; コールバック関数を提供する</target>
        </trans-unit>
        <trans-unit id="92e0024d2d056f40ec4976413bd8a46dd9fd1265" translate="yes" xml:space="preserve">
          <source>Provide record key directly:</source>
          <target state="translated">レコードキーを直接提供する。</target>
        </trans-unit>
        <trans-unit id="62e92c58462d2e993937dbdf7c5c0b422139296c" translate="yes" xml:space="preserve">
          <source>Provide the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; in the &lt;code&gt;auth&lt;/code&gt; object. Then all subsequent requests matching the origin you&amp;rsquo;re testing will have these attached at the network level.</source>
          <target state="translated">提供し &lt;code&gt;username&lt;/code&gt; と &lt;code&gt;password&lt;/code&gt; で &lt;code&gt;auth&lt;/code&gt; オブジェクトを。次に、テストしているオリジンに一致する後続のすべてのリクエストに、これらがネットワークレベルでアタッチされます。</target>
        </trans-unit>
        <trans-unit id="7ceee3f3615a2bbe4ce0ac5a269a311e4821daf4" translate="yes" xml:space="preserve">
          <source>Provider</source>
          <target state="translated">Provider</target>
        </trans-unit>
        <trans-unit id="4fbde6abd937efc8d9d10cd0eccd82fc0077cd42" translate="yes" xml:space="preserve">
          <source>Providing a &amp;ldquo;number-string&amp;rdquo; as in: &lt;code&gt;should(&quot;have.length&quot;, &quot;1&quot;)&lt;/code&gt; will no longer throw an error.</source>
          <target state="translated">「number-string」を次のように指定すると、 &lt;code&gt;should(&quot;have.length&quot;, &quot;1&quot;)&lt;/code&gt; がエラーをスローしなくなります。</target>
        </trans-unit>
        <trans-unit id="c89db5f779b08afdca192a3dbd1421457249ac1f" translate="yes" xml:space="preserve">
          <source>Proxied &lt;code&gt;moment&lt;/code&gt; onto &lt;code&gt;cy&lt;/code&gt; as &lt;code&gt;cy.moment&lt;/code&gt;.</source>
          <target state="translated">プロキシ &lt;code&gt;moment&lt;/code&gt; 上に &lt;code&gt;cy&lt;/code&gt; として &lt;code&gt;cy.moment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45d43624afc5906949bd590bcd2ea1d86beec13e" translate="yes" xml:space="preserve">
          <source>Proxied jQuery: &lt;code&gt;$&lt;/code&gt; onto &lt;code&gt;cy&lt;/code&gt; as &lt;code&gt;cy.$&lt;/code&gt; and specific class methods: &lt;code&gt;Event&lt;/code&gt;, &lt;code&gt;Deferred&lt;/code&gt;, &lt;code&gt;ajax&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getJSON&lt;/code&gt;, &lt;code&gt;getScript&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;.</source>
          <target state="translated">プロキシさjQueryの： &lt;code&gt;$&lt;/code&gt; へ &lt;code&gt;cy&lt;/code&gt; として &lt;code&gt;cy.$&lt;/code&gt; と、特定のクラスのメソッド： &lt;code&gt;Event&lt;/code&gt; 、 &lt;code&gt;Deferred&lt;/code&gt; 、 &lt;code&gt;ajax&lt;/code&gt; 、 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;getJSON&lt;/code&gt; 、 &lt;code&gt;getScript&lt;/code&gt; 、 &lt;code&gt;post&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e702b7df3c3ad916e9c7139dc807f2f2ecf7d4f9" translate="yes" xml:space="preserve">
          <source>Proxies all HTTP / HTTPS traffic.</source>
          <target state="translated">すべての HTTP/HTTPS トラフィックをプロキシします。</target>
        </trans-unit>
        <trans-unit id="a35368c1396a694234df9920133fb1c8c63fa2ac" translate="yes" xml:space="preserve">
          <source>Proxy Auto-Configuration (PAC) files are not currently supported. If your organization uses a PAC file, contact a network administrator to ask what HTTP proxy you should be using to access the general Internet, then use that proxy with Cypress.</source>
          <target state="translated">プロキシ自動設定 (PAC)ファイルは現在サポートされていません。組織で PAC ファイルを使用している場合は、ネットワーク管理者に連絡して、一般的なインターネットにアクセスするためにどの HTTP プロキシを使用すべきかを聞いてから、Cypress でそのプロキシを使用してください。</target>
        </trans-unit>
        <trans-unit id="d09abac432b513ff542994e5bd7e696e15df4399" translate="yes" xml:space="preserve">
          <source>Proxy Configuration</source>
          <target state="translated">プロキシの設定</target>
        </trans-unit>
        <trans-unit id="0c80f9f6e7964082601ba0ed84099bf9fe38a122" translate="yes" xml:space="preserve">
          <source>Proxy environment variables</source>
          <target state="translated">プロキシ環境変数</target>
        </trans-unit>
        <trans-unit id="02148ef61cca8a3dff18ee341eb44198e05bcf16" translate="yes" xml:space="preserve">
          <source>Proxy policies: &lt;code&gt;ProxySettings, ProxyMode, ProxyServerMode, ProxyServer, ProxyPacUrl, ProxyBypassList&lt;/code&gt;</source>
          <target state="translated">プロキシポリシー： &lt;code&gt;ProxySettings, ProxyMode, ProxyServerMode, ProxyServer, ProxyPacUrl, ProxyBypassList&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7990a69e260996369755d69a1f7d9da28c83ea6" translate="yes" xml:space="preserve">
          <source>Public vs Private</source>
          <target state="translated">公立と私立</target>
        </trans-unit>
        <trans-unit id="4111f561ade801e43609dfdd106eb889b0803b49" translate="yes" xml:space="preserve">
          <source>Publish preprocessors to &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; with the naming convention &lt;code&gt;cypress-*-preprocessor&lt;/code&gt; (e.g. cypress-clojurescript-preprocessor).</source>
          <target state="translated">命名規則 &lt;code&gt;cypress-*-preprocessor&lt;/code&gt; （例：cypress-clojurescript-preprocessor）を使用して、プリプロセッサを&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmに&lt;/a&gt;公開します。</target>
        </trans-unit>
        <trans-unit id="338b45a6751558a0e49cb2d757f64736adc58f12" translate="yes" xml:space="preserve">
          <source>Publishing</source>
          <target state="translated">Publishing</target>
        </trans-unit>
        <trans-unit id="ccf237feb701289107382aad9996e59d87a23ae0" translate="yes" xml:space="preserve">
          <source>Pull request comments</source>
          <target state="translated">プルリクエストコメント</target>
        </trans-unit>
        <trans-unit id="dee12fca750947a081e53fa502678006c9f5289c" translate="yes" xml:space="preserve">
          <source>Pushstate application routing now works 100% reliably with NO hacky overrides in all browsers.</source>
          <target state="translated">Pushstateアプリケーションのルーティングは、すべてのブラウザでハッキングによるオーバーライドがなく、100%確実に動作するようになりました。</target>
        </trans-unit>
        <trans-unit id="fadc08d01f33fa3d57824aa5bd24cdb57242a391" translate="yes" xml:space="preserve">
          <source>Put an &lt;code&gt;.only&lt;/code&gt; on the test and refresh the browser.</source>
          <target state="translated">テストに &lt;code&gt;.only&lt;/code&gt; を置き、ブラウザを更新します。</target>
        </trans-unit>
        <trans-unit id="308774f2797822d41fc2c40c14e75259d5b78253" translate="yes" xml:space="preserve">
          <source>Queries for the element &lt;code&gt;.mobile-nav&lt;/code&gt;</source>
          <target state="translated">要素 &lt;code&gt;.mobile-nav&lt;/code&gt; のクエリ</target>
        </trans-unit>
        <trans-unit id="4b31dfc10b8a42f639f419a94c464361bd057648" translate="yes" xml:space="preserve">
          <source>Query for an element.</source>
          <target state="translated">要素に対するクエリ。</target>
        </trans-unit>
        <trans-unit id="2250d3823e9e3e166cb201c79de0862ec776dfba" translate="yes" xml:space="preserve">
          <source>Query parameters to append to the &lt;code&gt;url&lt;/code&gt; of the request</source>
          <target state="translated">リクエストの &lt;code&gt;url&lt;/code&gt; に追加するクエリパラメータ</target>
        </trans-unit>
        <trans-unit id="ca06626ca97f0fb7da5292b17786ef0d871c4b3c" translate="yes" xml:space="preserve">
          <source>Querying Elements</source>
          <target state="translated">要素の問い合わせ</target>
        </trans-unit>
        <trans-unit id="6d98dfd7df8cccd05f5e18ebc5d40fc4090718ce" translate="yes" xml:space="preserve">
          <source>Querying by Text Content</source>
          <target state="translated">テキスト内容による問い合わせ</target>
        </trans-unit>
        <trans-unit id="1533e3d888ecd0d70dbc0a41daf0c4fb2593751a" translate="yes" xml:space="preserve">
          <source>Quickly export some values.</source>
          <target state="translated">いくつかの値を素早くエクスポートします。</target>
        </trans-unit>
        <trans-unit id="be61a786d1dd34c18896217a7e7ecd64f55a7a25" translate="yes" xml:space="preserve">
          <source>Re-query for newly added DOM elements</source>
          <target state="translated">新しく追加された DOM 要素の再問い合わせ</target>
        </trans-unit>
        <trans-unit id="5231c9eaef1849dff724fa9c3b75d03b392087bd" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Commands-Run-Serially&quot;&gt;Guide: Introduction to Cypress&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Commands-Run-Serially&quot;&gt;ガイド&lt;/a&gt;を読む：サイプレスの概要</target>
        </trans-unit>
        <trans-unit id="c0be1f47852efbba1246d087b999cedd5d8128e6" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;../guides/launching-browsers&quot;&gt;Launching Browsers&lt;/a&gt; for more information on how Cypress controls a real browser during end-to-end tests.</source>
          <target state="translated">読んで&lt;a href=&quot;../guides/launching-browsers&quot;&gt;ブラウザを起動&lt;/a&gt;サイプレスは、エンドツーエンドのテスト中に実際のブラウザを制御する方法の詳細については。</target>
        </trans-unit>
        <trans-unit id="6c8d38df31a96dab4e8d7db7d49ab1334bd1d169" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://glebbahmutov.com/blog/cypress-should-callback/&quot;&gt;Cypress should callback&lt;/a&gt; blog post to see more variations of the above example.</source>
          <target state="translated">上記の例のさまざまなバリエーションを確認するには、&lt;a href=&quot;https://glebbahmutov.com/blog/cypress-should-callback/&quot;&gt;サイプレスのコールバック&lt;/a&gt;ブログ投稿をお読みください。</target>
        </trans-unit>
        <trans-unit id="e1b589157c33d8958730d9704c9a95a4c0180e6c" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;.txt&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;.txt&lt;/code&gt; ファイルを読み取る</target>
        </trans-unit>
        <trans-unit id="2f8f4fd6c2eff759de929e1b33a0c93f0ad87d8d" translate="yes" xml:space="preserve">
          <source>Read a file and yield its contents.</source>
          <target state="translated">ファイルを読み込んで、その内容を生成します。</target>
        </trans-unit>
        <trans-unit id="bdfaf2ad87efbe813f545ebd944f74b19bb334ef" translate="yes" xml:space="preserve">
          <source>Read a file that might not exist</source>
          <target state="translated">存在しないかもしれないファイルを読み込む</target>
        </trans-unit>
        <trans-unit id="9f94bf9f58e3f7b1d72cc96c77d24a58030dd8ab" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;../../guides/references/best-practices#Setting-a-global-baseUrl&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="translated">こちらで&lt;a href=&quot;../../guides/references/best-practices#Setting-a-global-baseUrl&quot;&gt;ベストプラクティス&lt;/a&gt;についてお読みください。</target>
        </trans-unit>
        <trans-unit id="15f360c7ef254e4117cfa195c65f15b8118537a0" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;../../guides/references/best-practices#Unnecessary-Waiting&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="translated">こちらで&lt;a href=&quot;../../guides/references/best-practices#Unnecessary-Waiting&quot;&gt;ベストプラクティス&lt;/a&gt;についてお読みください。</target>
        </trans-unit>
        <trans-unit id="45d99688e8b9d4c43e06949cb61a9e7c4740f646" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;../../guides/references/best-practices#Web-Servers&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="translated">こちらで&lt;a href=&quot;../../guides/references/best-practices#Web-Servers&quot;&gt;ベストプラクティス&lt;/a&gt;についてお読みください。</target>
        </trans-unit>
        <trans-unit id="49686a98ac99841ebcfde28419337a4ca5c996fc" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;../references/best-practices&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="translated">こちらで&lt;a href=&quot;../references/best-practices&quot;&gt;ベストプラクティス&lt;/a&gt;についてお読みください。</target>
        </trans-unit>
        <trans-unit id="52b01e3f67cda5da0b0bfa4501b8f321ae8ef7f6" translate="yes" xml:space="preserve">
          <source>Read about configuration first.</source>
          <target state="translated">まずは設定について読んでみてください。</target>
        </trans-unit>
        <trans-unit id="e5d31190449c1567fc540b417b548d075549fda7" translate="yes" xml:space="preserve">
          <source>Read in configuration files using the built in &lt;code&gt;fs&lt;/code&gt; lib</source>
          <target state="translated">組み込みの &lt;code&gt;fs&lt;/code&gt; lib を使用して構成ファイルを読み込む</target>
        </trans-unit>
        <trans-unit id="0e02dcd44313883c58d21bbaa76651bd56fe2f40" translate="yes" xml:space="preserve">
          <source>Read more &lt;a href=&quot;command-line#Debugging-commands&quot;&gt;about the CLI options here&lt;/a&gt; and &lt;a href=&quot;https://glebbahmutov.com/blog/good-logging/&quot;&gt;Good Logging&lt;/a&gt; blog post.</source>
          <target state="translated">&lt;a href=&quot;command-line#Debugging-commands&quot;&gt;CLIオプションの&lt;/a&gt;詳細については、こちらと&lt;a href=&quot;https://glebbahmutov.com/blog/good-logging/&quot;&gt;Good Logging&lt;/a&gt;ブログ投稿をご覧ください。</target>
        </trans-unit>
        <trans-unit id="9000f60ea984374a7ea08324d0c72bfd8ffa5b30" translate="yes" xml:space="preserve">
          <source>Read more about &lt;a href=&quot;environment-variables&quot;&gt;environment variables&lt;/a&gt; and &lt;a href=&quot;../references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;environment-variables&quot;&gt;環境変数&lt;/a&gt;と&lt;a href=&quot;../references/configuration&quot;&gt;設定の&lt;/a&gt;詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="28341f3d0a581ae568c398117f104df34a25a1c0" translate="yes" xml:space="preserve">
          <source>Read more about creating symbolic links on Windows</source>
          <target state="translated">Windowsでのシンボリックリンクの作成についての詳細はこちら</target>
        </trans-unit>
        <trans-unit id="c8b3ec7457b6d885ed76aa1ecf82bcc4ca495df4" translate="yes" xml:space="preserve">
          <source>Read more about grouping.</source>
          <target state="translated">グルーピングの詳細はこちら</target>
        </trans-unit>
        <trans-unit id="d5782f3a9c282572eccb240641858af6be6afeff" translate="yes" xml:space="preserve">
          <source>Read more about how to use &lt;code&gt;cy.spy()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.spy()&lt;/code&gt; の使い方の詳細を読む</target>
        </trans-unit>
        <trans-unit id="14d3da4dcb5b864905507e581ac2462429c44fb4" translate="yes" xml:space="preserve">
          <source>Read more about how to use &lt;code&gt;cy.stub()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.stub()&lt;/code&gt; の使用方法についての詳細を読む</target>
        </trans-unit>
        <trans-unit id="37bdcc525a153cc26c4f3fdbbd4f93f53134b5d9" translate="yes" xml:space="preserve">
          <source>Read more about using plugins to extend Cypress behavior.</source>
          <target state="translated">Cypress の動作を拡張するためのプラグインの使用についての詳細はこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="d6a8af21f72feaca4fce49bf33de335ea8b9d6f3" translate="yes" xml:space="preserve">
          <source>Read on to learn about &lt;a href=&quot;web-security#Common-Workarounds&quot;&gt;working around these common problems&lt;/a&gt; or even &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disabling web security&lt;/a&gt; altogether.</source>
          <target state="translated">&lt;a href=&quot;web-security#Common-Workarounds&quot;&gt;これらの一般的な問題を回避&lt;/a&gt;する方法、または&lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;Webセキュリティを&lt;/a&gt;完全に無効にする方法について学習します。</target>
        </trans-unit>
        <trans-unit id="4af9ef63c75a669532061a30fa14e0287663d3c9" translate="yes" xml:space="preserve">
          <source>Read our &lt;a href=&quot;parallelization&quot;&gt;parallelization&lt;/a&gt; documentation to learn more.</source>
          <target state="translated">詳細については、&lt;a href=&quot;parallelization&quot;&gt;並列&lt;/a&gt;化のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="daf450a7a1cecf6d1d49d55a4644f17ab537d8c1" translate="yes" xml:space="preserve">
          <source>Read the full guide on parallelization.</source>
          <target state="translated">並列化に関する完全ガイドを読む。</target>
        </trans-unit>
        <trans-unit id="ff05eb257104932296294e363b6663f790d2d599" translate="yes" xml:space="preserve">
          <source>Read the full guide on the Dashboard Service.</source>
          <target state="translated">ダッシュボードサービスの完全ガイドをお読みください。</target>
        </trans-unit>
        <trans-unit id="30eb0d881c0e61be4b20f5bf881408ee6e86ed12" translate="yes" xml:space="preserve">
          <source>Readable error messages help you to debug quickly. You also have access to all the developer tools you know and love.</source>
          <target state="translated">読み取り可能なエラーメッセージは、迅速なデバッグに役立ちます。また、おなじみのすべての開発者ツールにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="1d920fff58ef0d0f937aa8908a1de256cc4799ab" translate="yes" xml:space="preserve">
          <source>Readonly</source>
          <target state="translated">Readonly</target>
        </trans-unit>
        <trans-unit id="8f3b9b32c1d21f976898868befadf56ba5b0261f" translate="yes" xml:space="preserve">
          <source>Receive additional output about each command.</source>
          <target state="translated">各コマンドに関する追加出力を受信します。</target>
        </trans-unit>
        <trans-unit id="309aff75968f4631024a5c2ee2e61412fbdd7ad7" translate="yes" xml:space="preserve">
          <source>Receiving &amp;lsquo;close&amp;rsquo; event</source>
          <target state="translated">「クローズ」イベントの受信</target>
        </trans-unit>
        <trans-unit id="147a2db19ee1f7ea2bf52bfdfd9ec89797fb43e3" translate="yes" xml:space="preserve">
          <source>Recipe: Bootstrapping App Test Data</source>
          <target state="translated">レシピ:アプリのテストデータをブートストラップする</target>
        </trans-unit>
        <trans-unit id="8785e7f52a495f6677517be629edfa98443783c5" translate="yes" xml:space="preserve">
          <source>Recipe: Bootstrapping your App</source>
          <target state="translated">レシピです。アプリのブートストラップ</target>
        </trans-unit>
        <trans-unit id="8fc67246bf5c8318c970e94d6ad6c3a42be76f6b" translate="yes" xml:space="preserve">
          <source>Recipe: Hover and Hidden Elements</source>
          <target state="translated">レシピ:ホバーと隠し要素</target>
        </trans-unit>
        <trans-unit id="5891ad436d39204f60d8c226a2369b6f83035819" translate="yes" xml:space="preserve">
          <source>Recipe: Logging In</source>
          <target state="translated">レシピ:ログイン</target>
        </trans-unit>
        <trans-unit id="8a04e759aa87f460d7679985a2da0aae27bae720" translate="yes" xml:space="preserve">
          <source>Recipe: Logging In - CSRF Tokens</source>
          <target state="translated">レシピ:ログイン-CSRF トークン</target>
        </trans-unit>
        <trans-unit id="93fedd81d98a2f381f246e5eaff05dfc78bd25c3" translate="yes" xml:space="preserve">
          <source>Recipe: Logging In - HTML Web Form</source>
          <target state="translated">レシピ:ログイン-HTML Web フォーム</target>
        </trans-unit>
        <trans-unit id="d6be84ccbb11002b0501ed1b3c8f8887d36d0a42" translate="yes" xml:space="preserve">
          <source>Recipe: Logging In - Single Sign on</source>
          <target state="translated">レシピ。ログイン-シングルサインオン</target>
        </trans-unit>
        <trans-unit id="0138b7318cf5210ba5b812384dbf26d1f8ed5fac" translate="yes" xml:space="preserve">
          <source>Recipe: Logging In - XHR Web Form</source>
          <target state="translated">レシピ:ログイン-XHR ウェブフォーム</target>
        </trans-unit>
        <trans-unit id="e6dc42f8ad79463928cc3104e7bbfb070f0cf48f" translate="yes" xml:space="preserve">
          <source>Recipe: Logging in - XHR Web Forms</source>
          <target state="translated">レシピ:ログイン-XHR Web フォーム</target>
        </trans-unit>
        <trans-unit id="08e776d3507710c2ca0becae511757c2ab93b319" translate="yes" xml:space="preserve">
          <source>Recipe: Stubbing &lt;code&gt;window.fetch&lt;/code&gt;</source>
          <target state="translated">レシピ： &lt;code&gt;window.fetch&lt;/code&gt; のスタブ</target>
        </trans-unit>
        <trans-unit id="9ecd57bd65c6137dfc75ac8ba3d0000c3eca0876" translate="yes" xml:space="preserve">
          <source>Recipe: Stubbing, Spying</source>
          <target state="translated">レシピ。スタブ、スパイ</target>
        </trans-unit>
        <trans-unit id="daa02680f9c726b508e5b5d52c740f526295fd65" translate="yes" xml:space="preserve">
          <source>Recipe: Unit Test - Stubbing Dependencies</source>
          <target state="translated">レシピ。ユニットテスト-依存関係のスタブ</target>
        </trans-unit>
        <trans-unit id="9fb1092f32d4fcbf9e061ffd718d4ec689c6c95e" translate="yes" xml:space="preserve">
          <source>Recipes</source>
          <target state="translated">Recipes</target>
        </trans-unit>
        <trans-unit id="8284b9c5c8d8627f06539bc8429404714f34cc54" translate="yes" xml:space="preserve">
          <source>Recipes: Logging In - Single Sign On</source>
          <target state="translated">レシピ ログイン-シングルサインオン</target>
        </trans-unit>
        <trans-unit id="d0e2c5221e12e5f2827fa8819318109dc9aa8d70" translate="yes" xml:space="preserve">
          <source>Recognize the need for visual testing</source>
          <target state="translated">視覚的なテストの必要性を認識する</target>
        </trans-unit>
        <trans-unit id="9ef937556efe782b8e9bf8ef16e540c185c5bf00" translate="yes" xml:space="preserve">
          <source>Recommended</source>
          <target state="translated">Recommended</target>
        </trans-unit>
        <trans-unit id="981e4913c775c446c8998836bc5a11248798d02a" translate="yes" xml:space="preserve">
          <source>Record key</source>
          <target state="translated">レコードキー</target>
        </trans-unit>
        <trans-unit id="95fedddd3b118b9abb6962566d21b86552b2368b" translate="yes" xml:space="preserve">
          <source>Record keys</source>
          <target state="translated">レコードキー</target>
        </trans-unit>
        <trans-unit id="7b62123f288fa10b2ba3d0d6f7628eefaf8d4aa9" translate="yes" xml:space="preserve">
          <source>Record tests</source>
          <target state="translated">テストの記録</target>
        </trans-unit>
        <trans-unit id="b13daeb66eb568de57fcb4a79a16c8b064e359c9" translate="yes" xml:space="preserve">
          <source>Record video of tests running after &lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;setting up your project to record&lt;/a&gt;. After setting up your project you will be given a &lt;strong&gt;Record Key&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;プロジェクトを記録するよう&lt;/a&gt;に設定した後に実行されるテストのビデオを記録します。プロジェクトを設定すると、&lt;strong&gt;レコードキー&lt;/strong&gt;が提供されます。</target>
        </trans-unit>
        <trans-unit id="ad0f1ad6c1aa5ab51e91a6884a257a8f24693882" translate="yes" xml:space="preserve">
          <source>Recorded runs capture the results from your test runs.</source>
          <target state="translated">記録された実行は、テスト実行の結果をキャプチャします。</target>
        </trans-unit>
        <trans-unit id="1dc49378cf503420bb341a9415a7c13724e0e6f9" translate="yes" xml:space="preserve">
          <source>Recording tests allow you to:</source>
          <target state="translated">テストを記録することで、以下のことが可能になります。</target>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="translated">Redirects</target>
        </trans-unit>
        <trans-unit id="4c79ab45b9a43f148231b935d2e783c3b52cbd08" translate="yes" xml:space="preserve">
          <source>Reduce noise in logs.</source>
          <target state="translated">ログのノイズを減らす。</target>
        </trans-unit>
        <trans-unit id="0612a817ee28f038238b8969414fd7aea3e54bba" translate="yes" xml:space="preserve">
          <source>Reduced the frequency the app checked for updates. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/713&quot;&gt;#713&lt;/a&gt;.</source>
          <target state="translated">アプリが更新を確認する頻度を減らしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/713&quot;&gt;＃713を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="04d4065d06f1651315a9b4019f6346ee7589f062" translate="yes" xml:space="preserve">
          <source>Reduced the number of internal Cypress network requests in the &amp;ldquo;Network Panel&amp;rdquo; of Dev Tools. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/606&quot;&gt;#606&lt;/a&gt;.</source>
          <target state="translated">開発ツールの「ネットワークパネル」でサイプレスの内部ネットワーク要求の数を減らしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/606&quot;&gt;＃606を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8dcc386118c05850330174b4be97a77dfbe689d1" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;../references/configuration#Environment-Variables&quot;&gt;Environment Variables recipe&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;../references/configuration#Environment-Variables&quot;&gt;環境変数のレシピ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="32580b39a5c8a918f81189ca4356579a09ed75bc" translate="yes" xml:space="preserve">
          <source>Refer to the dedicated &lt;a href=&quot;environment-variables&quot;&gt;Environment Variables Guide&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、専用の&lt;a href=&quot;environment-variables&quot;&gt;環境変数ガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="284bb0a9f7e10500efabe70a1710a215fd5c5421" translate="yes" xml:space="preserve">
          <source>Refer to your CI provider&amp;rsquo;s documentation on how to set up multiple machines to run in your CI environment.</source>
          <target state="translated">CI環境で実行する複数のマシンを設定する方法については、CIプロバイダーのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a8bd83ebf221867f048d7ea599df4181dfebd191" translate="yes" xml:space="preserve">
          <source>Reference type declarations via &lt;code&gt;tsconfig&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tsconfig&lt;/code&gt; による参照型宣言</target>
        </trans-unit>
        <trans-unit id="3e949929fb8fb8d73af0762c7d96c3a63fad6182" translate="yes" xml:space="preserve">
          <source>Reference: List of Assertions</source>
          <target state="translated">参考にしてください。アサーション一覧</target>
        </trans-unit>
        <trans-unit id="ba7a4b4670d8e3b13abee2427df70c5940ab38e6" translate="yes" xml:space="preserve">
          <source>Refreshing and loading the page</source>
          <target state="translated">ページの更新と読み込み</target>
        </trans-unit>
        <trans-unit id="ca5db4fe93ba98fe1b576309acf2388052f2a36a" translate="yes" xml:space="preserve">
          <source>RegExp</source>
          <target state="translated">RegExp</target>
        </trans-unit>
        <trans-unit id="cf3a84b8f17a1f2c9379eb330cb84b62a06495ef" translate="yes" xml:space="preserve">
          <source>RegExp arguments are now properly formatted in the Command Log.</source>
          <target state="translated">RegExp 引数がコマンドログで適切にフォーマットされるようになりました。</target>
        </trans-unit>
        <trans-unit id="34bf4fca14bd78765332c70f36914e37ea2507b6" translate="yes" xml:space="preserve">
          <source>Registering to listen on an event looks like this:</source>
          <target state="translated">イベントでの試聴登録はこんな感じです。</target>
        </trans-unit>
        <trans-unit id="469415c626b697430fa86fc9993ad32f63927e1f" translate="yes" xml:space="preserve">
          <source>Regular Expression</source>
          <target state="translated">正規表現</target>
        </trans-unit>
        <trans-unit id="38c5e6a18e5ede365c58aaff3fc6a213d673ea75" translate="yes" xml:space="preserve">
          <source>Regular XHR&amp;rsquo;s can now be aliased and waited on without actually being stubbed by passing &lt;code&gt;{stub: false}&lt;/code&gt; to the &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;{stub: false}&lt;/code&gt; を&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; に&lt;/a&gt;渡すことで、通常のXHRにエイリアスを付けて実際にスタブすることなく待機することができます。</target>
        </trans-unit>
        <trans-unit id="b038ce9774ad4247ab4424c5c1958a7e658b4d56" translate="yes" xml:space="preserve">
          <source>Release behavior</source>
          <target state="translated">解除動作</target>
        </trans-unit>
        <trans-unit id="cca2c283a5be71292d2dacf4e6f0251d422c090a" translate="yes" xml:space="preserve">
          <source>Reload the browser and see debug messages within the Developer Tools console. You will only see the &amp;ldquo;cypress:driver&amp;rdquo; package logs that run in the browser, as you can see below.</source>
          <target state="translated">ブラウザをリロードして、デベロッパーツールコンソール内のデバッグメッセージを確認します。以下に示すように、ブラウザで実行される「cypress：driver」パッケージログのみが表示されます。</target>
        </trans-unit>
        <trans-unit id="072f6d70f63d2d1ce117e4f80c35887ff1605560" translate="yes" xml:space="preserve">
          <source>Reload the page as if the user clicked &amp;lsquo;Refresh&amp;rsquo;</source>
          <target state="translated">ユーザーが「更新」をクリックしたかのようにページを再読み込みします</target>
        </trans-unit>
        <trans-unit id="48eab8379899991b940604cdabd5e66c63087c1d" translate="yes" xml:space="preserve">
          <source>Reload the page without using the cache</source>
          <target state="translated">キャッシュを使わずにページをリロードする</target>
        </trans-unit>
        <trans-unit id="9c8f56145d092eade5784409d0ffd4e6c787ae9c" translate="yes" xml:space="preserve">
          <source>Reload the page.</source>
          <target state="translated">ページをリロードします。</target>
        </trans-unit>
        <trans-unit id="2ab38c449c278b274b0f95cace492db29bf44b42" translate="yes" xml:space="preserve">
          <source>Reloads Cypress when one of the watched files changes</source>
          <target state="translated">ウォッチしているファイルが変更された場合に Cypress をリロードします。</target>
        </trans-unit>
        <trans-unit id="0af35bed276d461fb7fd97d08f045fa1b0c0b69d" translate="yes" xml:space="preserve">
          <source>Remember because assertions are used to describe a condition of the previous commands - the &lt;code&gt;timeout&lt;/code&gt; modification goes on the previous commands &lt;em&gt;not the assertions&lt;/em&gt;.</source>
          <target state="translated">アサーションは前のコマンドの状態を説明するために使用されるため、 &lt;code&gt;timeout&lt;/code&gt; 変更は&lt;em&gt;アサーションではなく&lt;/em&gt;前のコマンドに適用される&lt;em&gt;ことに注意してください&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e3120fa15114fd30af0041049a1f97d82f126fd6" translate="yes" xml:space="preserve">
          <source>Remember that &lt;strong&gt;Cypress commands are async&lt;/strong&gt;, including &lt;code&gt;.as()&lt;/code&gt;.</source>
          <target state="translated">ことを忘れないでください&lt;strong&gt;サイプレスコマンドがある非同期&lt;/strong&gt;含め、 &lt;code&gt;.as()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="086fd29d296966c6e67ebebd4d2d533ce5b785c6" translate="yes" xml:space="preserve">
          <source>Remember the delay we introduced into our application code that causes the test to time out? We added a 100ms delay before the UI rerenders itself.</source>
          <target state="translated">テストがタイムアウトする原因となる遅延をアプリケーションコードに導入したことを覚えていますか?UI が再レンダリングする前に 100ms の遅延を追加しました。</target>
        </trans-unit>
        <trans-unit id="b1eff0e086e02a0b7b08d7c133c387f75d1826fc" translate="yes" xml:space="preserve">
          <source>Remember to use &lt;a href=&quot;writing-and-organizing-tests#Excluding-and-Including-Tests&quot;&gt;&lt;code&gt;.only&lt;/code&gt;&lt;/a&gt; to limit which tests are run: this can be especially useful when you&amp;rsquo;ve got a lot of tests in a single spec file that you&amp;rsquo;re constantly editing; consider also splitting your tests into smaller files each dealing with logically related behavior.</source>
          <target state="translated">実行するテストを制限するために&lt;a href=&quot;writing-and-organizing-tests#Excluding-and-Including-Tests&quot;&gt; &lt;code&gt;.only&lt;/code&gt; &lt;/a&gt;を使用することを忘れないでください。これは、常に編集している単一のスペックファイルに多数のテストがある場合に特に役立ちます。テストをより小さなファイルに分割して、それぞれが論理的に関連する動作を処理することも検討してください。</target>
        </trans-unit>
        <trans-unit id="b95da686f4515f7c432aaad952f5c4fb5ba19736" translate="yes" xml:space="preserve">
          <source>Remember, any changes that you make to configuration using this API will only be in effect for the remainder of the tests &lt;em&gt;in the same spec file.&lt;/em&gt;</source>
          <target state="translated">このAPIを使用して構成に加えた変更&lt;em&gt;は、同じスペックファイル内の&lt;/em&gt;残りのテストに対してのみ有効になることに注意して&lt;em&gt;ください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6fed12693d26de0613515cc56ba26846ce03f710" translate="yes" xml:space="preserve">
          <source>Remember, any changes that you make to environment variables using this API will only be in effect for the remainder of the tests &lt;em&gt;in the same spec file.&lt;/em&gt;</source>
          <target state="translated">このAPIを使用して環境変数に加えた変更&lt;em&gt;は、同じスペックファイル内の&lt;/em&gt;残りのテストに対してのみ有効になることに注意して&lt;em&gt;ください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cffb7eb3465f1717cf54d007f47d44693d4e5023" translate="yes" xml:space="preserve">
          <source>Remote: &lt;code&gt;COMMIT_INFO_REMOTE&lt;/code&gt;</source>
          <target state="translated">リモート： &lt;code&gt;COMMIT_INFO_REMOTE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5a0060a56062dee79afa36ed358dfc968b54eab" translate="yes" xml:space="preserve">
          <source>Remove &amp;lsquo;admin&amp;rsquo; from organization</source>
          <target state="translated">組織から「admin」を削除します</target>
        </trans-unit>
        <trans-unit id="b4c1fdfe626dd4f2daf94eb54c7c6b5cae3a77f5" translate="yes" xml:space="preserve">
          <source>Remove &amp;lsquo;member&amp;rsquo; from organization</source>
          <target state="translated">組織から「メンバー」を削除します</target>
        </trans-unit>
        <trans-unit id="1925a1f4667fa2cbb8e6ea5b39975fc9c2566864" translate="yes" xml:space="preserve">
          <source>Remove &amp;lsquo;owner&amp;rsquo; from organization</source>
          <target state="translated">組織から「所有者」を削除します</target>
        </trans-unit>
        <trans-unit id="6ae49b94d0678ab1c49734089426155c0ff15cd6" translate="yes" xml:space="preserve">
          <source>Remove accidental &lt;code&gt;debugger&lt;/code&gt; left in &lt;code&gt;uncaught&lt;/code&gt; overloads (used only in Dev).</source>
          <target state="translated">&lt;code&gt;uncaught&lt;/code&gt; れていないオーバーロードに残っている偶発的な &lt;code&gt;debugger&lt;/code&gt; 削除します（Devでのみ使用）。</target>
        </trans-unit>
        <trans-unit id="cea02b80399ca4bba24c66c28ef0c4b921d959dd" translate="yes" xml:space="preserve">
          <source>Remove the need to ever do conditional testing.</source>
          <target state="translated">条件付きテストを行う必要性を排除します。</target>
        </trans-unit>
        <trans-unit id="a3570d4b4968961c75d28a9dbe49113bcfa93b51" translate="yes" xml:space="preserve">
          <source>Removed &lt;a href=&quot;bundled-tools#Chai-jQuery&quot;&gt;&lt;code&gt;chai-jQuery&lt;/code&gt;&lt;/a&gt; and rewrote it from scratch.</source>
          <target state="translated">&lt;a href=&quot;bundled-tools#Chai-jQuery&quot;&gt; &lt;code&gt;chai-jQuery&lt;/code&gt; &lt;/a&gt;を削除し、ゼロから書き直しました。</target>
        </trans-unit>
        <trans-unit id="73ca8031914466d922fcd5cd42557baae1b9579f" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;Cypress.addParentCommand()&lt;/code&gt;, &lt;code&gt;Cypress.addChildCommand()&lt;/code&gt;, and &lt;code&gt;Cypress.addDualCommand()&lt;/code&gt; in favor of the &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;new custom command interface&lt;/a&gt;.</source>
          <target state="translated">削除さ &lt;code&gt;Cypress.addParentCommand()&lt;/code&gt; 、 &lt;code&gt;Cypress.addChildCommand()&lt;/code&gt; 、および &lt;code&gt;Cypress.addDualCommand()&lt;/code&gt; の賛成で&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;新しいカスタムコマンド・インタフェース&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af887d4c8608d9e040afdc659077ddcf131938a6" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;cy.assign&lt;/code&gt;, this has been folded into &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.assign&lt;/code&gt; を削除しました。これは&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;に組み込まれました。</target>
        </trans-unit>
        <trans-unit id="2e0c00895a9e66299c21ecc290bd09acffa7d90b" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;cy.inspect&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;cy.inspect&lt;/code&gt; コマンドを削除しました。</target>
        </trans-unit>
        <trans-unit id="2a36e7c42ce952c4e3a2cb99111454c8c78bd66c" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;cy.to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.to&lt;/code&gt; を削除しました。</target>
        </trans-unit>
        <trans-unit id="5774f3700a141845985263e487020ac3edef4502" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;electron-positioner&lt;/code&gt; since it was no longer being used. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4502&quot;&gt;#4502&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;electron-positioner&lt;/code&gt; ポジショナは使用されなくなったため、削除しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4502&quot;&gt;＃4502で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="dd1a0c421e8abb42514496e96c538eb86a12af7b" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;fa-refresh&lt;/code&gt; icons next to suites and tests until this behavior has been reimplemented due to ID removal.</source>
          <target state="translated">削除された &lt;code&gt;fa-refresh&lt;/code&gt; この動作が原因IDの除去に再実装されましたまで、次のスイートとテストにアイコンを。</target>
        </trans-unit>
        <trans-unit id="4d4bf356b327825c78a414e16245cce500c6ee5f" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;iframe&lt;/code&gt; and &lt;code&gt;link[rel=stylesheet]&lt;/code&gt; elements during DOM revert.</source>
          <target state="translated">DOMの復元中に &lt;code&gt;iframe&lt;/code&gt; および &lt;code&gt;link[rel=stylesheet]&lt;/code&gt; 要素を削除しました。</target>
        </trans-unit>
        <trans-unit id="4f557179a0500d82b26e36c9c16a3b43e58e3046" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;method-override&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4209&quot;&gt;#4209&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;method-override&lt;/code&gt; を削除しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4209&quot;&gt;＃4209で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="94f15a1e6df5b9053d0beb8bd634d1b9fa852612" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;numElements&lt;/code&gt; label on assertions which indicated the number of elements found if &amp;gt; 1. This was annoying and redundant since the inked command already had this number.</source>
          <target state="translated">1 &lt;code&gt;numElements&lt;/code&gt; 場合に見つかった要素の数を示すアサーションのnumElementsラベルを削除しました。これは、インクされたコマンドにすでにこの数が含まれていたため、煩わしく冗長でした。</target>
        </trans-unit>
        <trans-unit id="19086edcc0ceb4684642a9d5d7740047deb6c009" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;progress&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2733&quot;&gt;#2733&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;progress&lt;/code&gt; &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2733&quot;&gt;＃2733を&lt;/a&gt;削除しました。</target>
        </trans-unit>
        <trans-unit id="da6236b320f13c18d7da22d3274d349dde7024da" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;string-to-stream&lt;/code&gt; since it was no longer being used. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4619&quot;&gt;#4619&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;string-to-stream&lt;/code&gt; は使用されなくなったため、削除されました。で対処&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4619&quot;&gt;＃4619&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b3327889f79ccbb8a5d713760026cdcbbf3202e" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;tar-fs&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4148&quot;&gt;#4148&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tar-fs&lt;/code&gt; を削除しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4148&quot;&gt;＃4148で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="514c49e629917fde6baa553d89eedc806372ef24" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;{stub: false}&lt;/code&gt; option from &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;. Cypress will now log a deprecation warning when you use the this option. Removing this option helps simplify the API because now Cypress can figure out whether you really want to stub the route based on whether you&amp;rsquo;ve provided a response or not. If you have not provided a response, the default behavior will be to not stub. If you do provide a response, Cypress will stub the route.</source>
          <target state="translated">除去 &lt;code&gt;{stub: false}&lt;/code&gt; からオプション&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;。このオプションを使用すると、サイプレスは非推奨の警告をログに記録するようになります。このオプションを削除するとAPIの簡素化に役立ちます。サイプレスは、応答を提供したかどうかに基づいてルートをスタブしたいかどうかを判断できるようになったためです。応答を提供していない場合、デフォルトの動作はスタブにならないことです。応答を提供すると、サイプレスはルートをスタブします。</target>
        </trans-unit>
        <trans-unit id="4844e7b1d7a5961a2e90c2d2b90ab16112f9d944" translate="yes" xml:space="preserve">
          <source>Removed an extraneous error display from Electron during &lt;code&gt;cypress run&lt;/code&gt; about a &amp;ldquo;transparent titlebar&amp;rdquo; setting. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1745&quot;&gt;#1745&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 中に「透明なタイトルバー」設定に関する無関係なエラー表示をElectronから削除しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1745&quot;&gt;＃1745を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c13aa37c5e3f782e4bb6cdaa914b2a35c30683d6" translate="yes" xml:space="preserve">
          <source>Removed cy proxy commands: &lt;code&gt;each&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;. These didn&amp;rsquo;t really &amp;ldquo;fit&amp;rdquo; into the concept of a command, and with &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; they&amp;rsquo;re accessible anyway, so nothing is really lost.</source>
          <target state="translated">削除されたcyプロキシコマンド： &lt;code&gt;each&lt;/code&gt; 、 &lt;code&gt;map&lt;/code&gt; 。これらはコマンドの概念に実際には「適合」していませんでした&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;を使用すると、いずれにせよそれらにアクセスできるため、何も失われることはありません。</target>
        </trans-unit>
        <trans-unit id="eeac78c6bf275ca8912959a5507d8eae9fca086b" translate="yes" xml:space="preserve">
          <source>Removed factoring in the total time a test has been running when determining when its command timeout. This fixes a bug where commands down he chain would timeout earlier than their specified &lt;code&gt;{timeout: num}&lt;/code&gt; option.</source>
          <target state="translated">コマンドがいつタイムアウトするかを決定するときにテストが実行されている合計時間の因数分解を削除しました。これにより、チェーンの下のコマンドが、指定された &lt;code&gt;{timeout: num}&lt;/code&gt; オプションよりも早くタイムアウトするというバグが修正されます。</target>
        </trans-unit>
        <trans-unit id="97bd41d5cdb1e90884b82276a161dab1a59f5134" translate="yes" xml:space="preserve">
          <source>Removed memory leaks surrounding Mocha runner.</source>
          <target state="translated">モカランナー周辺のメモリリークを削除しました。</target>
        </trans-unit>
        <trans-unit id="e98c305f3b6fb7185d4291d68651f90d644bee92" translate="yes" xml:space="preserve">
          <source>Removed nested &lt;code&gt;cypress&lt;/code&gt; object in the &lt;code&gt;cypress.json&lt;/code&gt;. Existing &lt;code&gt;cypress.json&lt;/code&gt; files are transparently rewritten on the next server boot, so you can check in the modified &lt;code&gt;cypress.json&lt;/code&gt; and all will be well. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/82&quot;&gt;#82&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 内のネストされた &lt;code&gt;cypress&lt;/code&gt; オブジェクトを削除しました。既存の &lt;code&gt;cypress.json&lt;/code&gt; ファイルは、次回のサーバー起動時に透過的に書き換えられるため、変更された &lt;code&gt;cypress.json&lt;/code&gt; をチェックインでき、すべて正常に動作します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/82&quot;&gt;＃82を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4bc0f4477f8e39c06f9765122d5832d068cc01ab" translate="yes" xml:space="preserve">
          <source>Removed problematic &lt;code&gt;content-security-policy&lt;/code&gt; headers</source>
          <target state="translated">問題のある &lt;code&gt;content-security-policy&lt;/code&gt; ヘッダーを削除</target>
        </trans-unit>
        <trans-unit id="b7ee83f57aa051bd0f08d42b0b160343a742c32d" translate="yes" xml:space="preserve">
          <source>Removed resetting the runnable timeout when a &lt;code&gt;page load&lt;/code&gt; event resolves. This prevents an edge case where the next test may show as timed out during &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;page load&lt;/code&gt; イベントが解決したときの実行可能タイムアウトのリセットを削除しました。これにより、 &lt;code&gt;cypress run&lt;/code&gt; 中に次のテストがタイムアウトしたと表示される可能性のある問題を回避できます。</target>
        </trans-unit>
        <trans-unit id="4d0da88b125dc272fdbb3d6799d927a0f5d59ee8" translate="yes" xml:space="preserve">
          <source>Removed sending &lt;code&gt;sinon&lt;/code&gt; on every &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">送信取り除か &lt;code&gt;sinon&lt;/code&gt; をすべての上&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cca12ce427cdae46cfaef2561da0d40461e3427d" translate="yes" xml:space="preserve">
          <source>Removed several aliases from our browser detector. These were not implemented properly and not needed - and thus only caused indirection. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1023&quot;&gt;#1023&lt;/a&gt;.</source>
          <target state="translated">ブラウザの検出機能からいくつかのエイリアスを削除しました。これらは適切に実装されておらず、必要もありませんでした。したがって、間接的なもののみが発生しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1023&quot;&gt;＃1023を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5c801933630bbf6b0c89362deb8bf5d545492d34" translate="yes" xml:space="preserve">
          <source>Removed several libs that used to handle typing simulation and rewrote typing from scratch.</source>
          <target state="translated">タイピングシミュレーションを扱っていたいくつかのlibを削除し、ゼロからタイピングを書き直しました。</target>
        </trans-unit>
        <trans-unit id="e5297cdc877f0973ebf7137e4ed31a670cc725eb" translate="yes" xml:space="preserve">
          <source>Removed special logic for &lt;em&gt;Angular&lt;/em&gt; which tapped into its digest cycle for queueing commands. This had unpredictable results when there was n &lt;code&gt;interval&lt;/code&gt; set, and is now superseded by the new queueing system anyway (which is more performant).</source>
          <target state="translated">コマンドをキューに入れるためにダイジェストサイクルを利用する&lt;em&gt;Angularの&lt;/em&gt;特別なロジックを削除しました。これは、n個の &lt;code&gt;interval&lt;/code&gt; 設定されている場合に予測できない結果をもたらし、とにかく新しいキューイングシステムによって置き換えられます（パフォーマンスが向上します）。</target>
        </trans-unit>
        <trans-unit id="22529c30ac09c88caab4e3df9a49e473b90b9497" translate="yes" xml:space="preserve">
          <source>Removed stack traces on &lt;code&gt;AssertionErrors&lt;/code&gt; in the console since those come from &lt;code&gt;chai&lt;/code&gt; and are basically useless.</source>
          <target state="translated">それらは &lt;code&gt;chai&lt;/code&gt; から来て基本的に役に立たないため、コンソールの &lt;code&gt;AssertionErrors&lt;/code&gt; のスタックトレースを削除しました。</target>
        </trans-unit>
        <trans-unit id="33de642481e03d5b6688936818ef35209bb111b4" translate="yes" xml:space="preserve">
          <source>Removed support for &lt;code&gt;Cypress.Cookies.get&lt;/code&gt;, &lt;code&gt;Cypress.Cookies.set&lt;/code&gt; and &lt;code&gt;Cypress.Cookies.remove&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.Cookies.get&lt;/code&gt; 、 &lt;code&gt;Cypress.Cookies.set&lt;/code&gt; および &lt;code&gt;Cypress.Cookies.remove&lt;/code&gt; のサポートを削除しました</target>
        </trans-unit>
        <trans-unit id="b80603fd13f8ffddf05288bed2e5b74f85a2904c" translate="yes" xml:space="preserve">
          <source>Removed support for &lt;code&gt;Cypress.Cookies.get&lt;/code&gt;, &lt;code&gt;Cypress.Cookies.set&lt;/code&gt; and &lt;code&gt;Cypress.Cookies.remove&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.Cookies.get&lt;/code&gt; 、 &lt;code&gt;Cypress.Cookies.set&lt;/code&gt; および &lt;code&gt;Cypress.Cookies.remove&lt;/code&gt; のサポートを削除しました。</target>
        </trans-unit>
        <trans-unit id="106ac1e6d3a0b2de27db12dcdc1da72b756b32b4" translate="yes" xml:space="preserve">
          <source>Removed the &lt;code&gt;cookies&lt;/code&gt; option from &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; because cookies are now &lt;em&gt;always&lt;/em&gt; get/set on requests. This option really never made any sense to have. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/320&quot;&gt;#320&lt;/a&gt;.</source>
          <target state="translated">cookieは&lt;em&gt;常に&lt;/em&gt;リクエストで取得/設定されるようになったため、&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;から &lt;code&gt;cookies&lt;/code&gt; オプションを削除しました。このオプションは本当に意味がありませんでした。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/320&quot;&gt;＃320を&lt;/a&gt;修正。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f12c2afad9afd227f73809bc6239568b5b7734b" translate="yes" xml:space="preserve">
          <source>Removed the &lt;code&gt;eventually&lt;/code&gt; flag in assertions as now this is the default behavior on normal assertions.</source>
          <target state="translated">これが通常のアサーションのデフォルトの動作であるため、アサーションの &lt;code&gt;eventually&lt;/code&gt; フラグを削除しました。</target>
        </trans-unit>
        <trans-unit id="7ca5b3b17615f200b23cee79382e95b7f097a465" translate="yes" xml:space="preserve">
          <source>Removed the flag &lt;code&gt;--disable-background-networking&lt;/code&gt; from the Chrome launch args to fix problems in CI that would throttle XHR callbacks by up to 20-30 seconds. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1320&quot;&gt;#1320&lt;/a&gt;.</source>
          <target state="translated">Chromeの起動引数からフラグ &lt;code&gt;--disable-background-networking&lt;/code&gt; を削除して、XHRコールバックを最大20〜30秒スロットルするCIの問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1320&quot;&gt;＃1320を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2269d4d5a43b6d52107d5944fb9dc1251dc38576" translate="yes" xml:space="preserve">
          <source>Removed the message about private projects requiring a paid account in the future. There will be a free tier including private projects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/827&quot;&gt;#827&lt;/a&gt;.</source>
          <target state="translated">将来有料アカウントを必要とするプライベートプロジェクトに関するメッセージを削除しました。プライベートプロジェクトを含む無料枠があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/827&quot;&gt;＃827を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a20e8a8d212594d73403c53b62ed980ed4dbb0de" translate="yes" xml:space="preserve">
          <source>Removed the word &amp;lsquo;already&amp;rsquo; from the Cypress install message in order to be less confusing. Adresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2754&quot;&gt;#2754&lt;/a&gt;.</source>
          <target state="translated">混乱を少なくするために、サイプレスインストールメッセージから「すでに」という単語を削除しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2754&quot;&gt;＃2754&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c365ca7e6acf8a9d2cbece98ba978dde67347730" translate="yes" xml:space="preserve">
          <source>Rename the screenshot</source>
          <target state="translated">スクリーンショットの名前を変更する</target>
        </trans-unit>
        <trans-unit id="dd4c4473d81874be1f934ddf50a71388bddced31" translate="yes" xml:space="preserve">
          <source>Renamed &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; option &lt;code&gt;visitTimeout&lt;/code&gt; to &lt;code&gt;pageLoadTimeout&lt;/code&gt;. You don&amp;rsquo;t need to change anything. If you were specifically setting &lt;code&gt;visitTimeout&lt;/code&gt; in your &lt;code&gt;cypress.json&lt;/code&gt; file it will be transparently rewritten &lt;code&gt;pageLoadTimeout&lt;/code&gt; on the next server boot. This option was renamed because now multiple commands &lt;code&gt;cy.visit()&lt;/code&gt;, &lt;code&gt;cy.go()&lt;/code&gt;, and &lt;code&gt;cy.reload()&lt;/code&gt; all depend on this timeout option.</source>
          <target state="translated">名前が変更された&lt;a href=&quot;configuration&quot;&gt;コンフィギュレーション・&lt;/a&gt;オプション &lt;code&gt;visitTimeout&lt;/code&gt; に &lt;code&gt;pageLoadTimeout&lt;/code&gt; 。何も変更する必要はありません。 &lt;code&gt;cypress.json&lt;/code&gt; ファイルで具体的に &lt;code&gt;visitTimeout&lt;/code&gt; を設定していた場合、次回のサーバー起動時に &lt;code&gt;pageLoadTimeout&lt;/code&gt; が透過的に書き換えられます。複数のコマンド &lt;code&gt;cy.visit()&lt;/code&gt; 、 &lt;code&gt;cy.go()&lt;/code&gt; 、および &lt;code&gt;cy.reload()&lt;/code&gt; がすべてこのタイムアウトオプションに依存するようになったため、このオプションの名前が変更されました。</target>
        </trans-unit>
        <trans-unit id="82d11a3664297f9e5df04fd72768444b8ec495fc" translate="yes" xml:space="preserve">
          <source>Renamed &lt;code&gt;environmentVariables&lt;/code&gt; to &lt;code&gt;env&lt;/code&gt; in the Desktop GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1052&quot;&gt;#1052&lt;/a&gt;.</source>
          <target state="translated">デスクトップGUIで、 &lt;code&gt;environmentVariables&lt;/code&gt; の名前を &lt;code&gt;env&lt;/code&gt; に変更しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1052&quot;&gt;＃1052を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="bdcaaecac912ca5e71094eddc8e498595f05e95b" translate="yes" xml:space="preserve">
          <source>Renamed &lt;code&gt;onConsole&lt;/code&gt; and &lt;code&gt;onRender&lt;/code&gt; Command Log options to &lt;code&gt;consoleProps&lt;/code&gt; and &lt;code&gt;renderProps&lt;/code&gt;. We still support the older property names for backwards compatibility.</source>
          <target state="translated">改名 &lt;code&gt;onConsole&lt;/code&gt; と &lt;code&gt;onRender&lt;/code&gt; にコマンドログオプション &lt;code&gt;consoleProps&lt;/code&gt; と &lt;code&gt;renderProps&lt;/code&gt; 。下位互換性のために、以前のプロパティ名も引き続きサポートしています。</target>
        </trans-unit>
        <trans-unit id="737d3bcd8b92cfe11471d163a98966eb3688c767" translate="yes" xml:space="preserve">
          <source>Renamed &lt;code&gt;supportFolder&lt;/code&gt; to &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;cypress.json&lt;/code&gt;. We will automatically rename your &lt;code&gt;cypress.json&lt;/code&gt; if this property was present on update.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; の&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; の&lt;/a&gt;名前を &lt;code&gt;supportFolder&lt;/code&gt; に変更しました。このプロパティが更新時に存在した場合、自動的に &lt;code&gt;cypress.json&lt;/code&gt; の名前を変更します。</target>
        </trans-unit>
        <trans-unit id="6cfce3255df5e47f543c06668a11d29cfa9aaf02" translate="yes" xml:space="preserve">
          <source>Renamed all remaining old references to &lt;code&gt;eclectus&lt;/code&gt;.</source>
          <target state="translated">残りのすべての古い参照の &lt;code&gt;eclectus&lt;/code&gt; をlectlectに変更しました。</target>
        </trans-unit>
        <trans-unit id="189dc0d97672da6de46e0fc37bd35475b76222a3" translate="yes" xml:space="preserve">
          <source>Renamed configuration option &lt;code&gt;commandTimeout&lt;/code&gt; to &lt;a href=&quot;configuration&quot;&gt;&lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt;. Cypress will transparently rewrite this if you have it in your &lt;code&gt;cypress.json&lt;/code&gt;, so you don&amp;rsquo;t have to do anything.</source>
          <target state="translated">名前変更後のコンフィギュレーションオプション &lt;code&gt;commandTimeout&lt;/code&gt; に&lt;a href=&quot;configuration&quot;&gt; &lt;code&gt;defaultCommandTimeout&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;cypress.json&lt;/code&gt; にある場合、サイプレスは透過的にこれを書き換えるため、何もする必要はありません。</target>
        </trans-unit>
        <trans-unit id="f3537b242c8df94ddead040039f7d30422b89e65" translate="yes" xml:space="preserve">
          <source>Replace a function, record its usage and control its behavior.</source>
          <target state="translated">関数を置換し、その使用法を記録し、その動作を制御します。</target>
        </trans-unit>
        <trans-unit id="691b271b62b0a2fda0d196f2cdee32de31a3729b" translate="yes" xml:space="preserve">
          <source>Replace a method with a function</source>
          <target state="translated">メソッドを関数に置き換える</target>
        </trans-unit>
        <trans-unit id="36c26409116e8c530f3546fe94dc52cd270a02f8" translate="yes" xml:space="preserve">
          <source>Replace a method with a stub</source>
          <target state="translated">メソッドをスタブに置き換える</target>
        </trans-unit>
        <trans-unit id="7f07c5b1feab99ffb8a148ce755ddf9196620b7a" translate="yes" xml:space="preserve">
          <source>Replace built-in window methods like prompt</source>
          <target state="translated">プロンプトのような組み込みのウィンドウメソッドを置き換える</target>
        </trans-unit>
        <trans-unit id="eb712897c74fd293d52fa0bb9bc30561d9175c57" translate="yes" xml:space="preserve">
          <source>Replaced Ruby / Compass with &lt;code&gt;node saas&lt;/code&gt;.</source>
          <target state="translated">Ruby / Compassを &lt;code&gt;node saas&lt;/code&gt; 置き換えました。</target>
        </trans-unit>
        <trans-unit id="5016f1e20f3c729404b26fc32e808120b680becc" translate="yes" xml:space="preserve">
          <source>Replaced use of &lt;code&gt;new Buffer&lt;/code&gt; with &lt;code&gt;Buffer.from&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2626&quot;&gt;#2626&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;new Buffer&lt;/code&gt; 使用を &lt;code&gt;Buffer.from&lt;/code&gt; に置き換えました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2626&quot;&gt;＃2626を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="af1bf79724a472bab09b98308230a8383606f579" translate="yes" xml:space="preserve">
          <source>Report per spec</source>
          <target state="translated">仕様ごとの報告</target>
        </trans-unit>
        <trans-unit id="73dba9bf1d29029d8e11e52763af5433bdfa126f" translate="yes" xml:space="preserve">
          <source>Reporter Options</source>
          <target state="translated">レポーターオプション</target>
        </trans-unit>
        <trans-unit id="4a28165bd85132c82d26771bbd29abef42ef343a" translate="yes" xml:space="preserve">
          <source>Reporters</source>
          <target state="translated">Reporters</target>
        </trans-unit>
        <trans-unit id="96b71dd3eccab778d3f0101217212429f416ee83" translate="yes" xml:space="preserve">
          <source>Reporters in CI can now be specified.</source>
          <target state="translated">CIのレポーターを指定できるようになりました。</target>
        </trans-unit>
        <trans-unit id="c9e579d6d1ba09edc7af3d2bf94ca4c747181eb4" translate="yes" xml:space="preserve">
          <source>Reporting</source>
          <target state="translated">Reporting</target>
        </trans-unit>
        <trans-unit id="e32c79be4160d49bfa696dd463fcba6b531a1fbf" translate="yes" xml:space="preserve">
          <source>Repurposed &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; to be an alias of &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; for chainability.</source>
          <target state="translated">再利用&lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt;の別名であることが&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; chainabilityため。</target>
        </trans-unit>
        <trans-unit id="e370d2dd5691184aaeed74f7096c560bcf524196" translate="yes" xml:space="preserve">
          <source>Repurposed &lt;code&gt;requestTimeout&lt;/code&gt; to now mean the time we wait for an XHR to be requested. Changed &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to now use &lt;code&gt;responseTimeout&lt;/code&gt; configuration value.</source>
          <target state="translated">再利用された &lt;code&gt;requestTimeout&lt;/code&gt; は、XHRがリクエストされるのを待つ時間を意味するようになりました。&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;を変更して、 &lt;code&gt;responseTimeout&lt;/code&gt; 設定値を使用するようになりました。</target>
        </trans-unit>
        <trans-unit id="6f8efc89e6f6a9e87f36cc737256c29fa6190621" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="translated">リクエストボディ</target>
        </trans-unit>
        <trans-unit id="55a5a3a473a983483fda97c0fa95aa132b4bc75a" translate="yes" xml:space="preserve">
          <source>Request Commands (now page events) have now been renamed to &amp;lsquo;XHR&amp;rsquo;.</source>
          <target state="translated">リクエストコマンド（現在はページイベント）の名前が「XHR」に変更されました。</target>
        </trans-unit>
        <trans-unit id="8a9b75d51b305b62b2a92206771adcb1d9505f68" translate="yes" xml:space="preserve">
          <source>Request Headers</source>
          <target state="translated">リクエストヘッダ</target>
        </trans-unit>
        <trans-unit id="9cbb3bfc06b863d35d290733ebee737cfd56fbe2" translate="yes" xml:space="preserve">
          <source>Request Polling</source>
          <target state="translated">リクエストポーリング</target>
        </trans-unit>
        <trans-unit id="b1b38174f79e40ef1d3fcda99919fbf8eee47f10" translate="yes" xml:space="preserve">
          <source>Request a page while disabling auto redirect</source>
          <target state="translated">自動リダイレクトを無効にした状態でページを要求する</target>
        </trans-unit>
        <trans-unit id="a87273c2bebc41c007428e04b36519b9ca3cf20c" translate="yes" xml:space="preserve">
          <source>Request is not displayed in the Network Tab of Developer Tools</source>
          <target state="translated">開発者ツールのネットワークタブにリクエストが表示されない</target>
        </trans-unit>
        <trans-unit id="900c35b7c349feb6c3d70194908903b1b80b6fc0" translate="yes" xml:space="preserve">
          <source>Requesting OSS plan for an org</source>
          <target state="translated">ある組織のOSS計画を依頼する</target>
        </trans-unit>
        <trans-unit id="f7194e6a0d0b838382b202853e7c198d693fbabc" translate="yes" xml:space="preserve">
          <source>Requests</source>
          <target state="translated">Requests</target>
        </trans-unit>
        <trans-unit id="b6e914e25789dd045c400788933748ee5d75a897" translate="yes" xml:space="preserve">
          <source>Requests that are not stubbed actually reach your server. By &lt;em&gt;not&lt;/em&gt; stubbing your responses, you are writing true &lt;em&gt;end-to-end&lt;/em&gt; tests. This means you are driving your application the same way a real user would.</source>
          <target state="translated">スタブ化されていないリクエストは実際にサーバーに到達します。ことで&lt;em&gt;はない&lt;/em&gt;、あなたの応答をスタブ、あなたは真の書いている&lt;em&gt;エンドツーエンド&lt;/em&gt;のテストを。これは、実際のユーザーと同じようにアプリケーションを駆動していることを意味します。</target>
        </trans-unit>
        <trans-unit id="171d9da1d31e1b21366580372b18afd56567f6f6" translate="yes" xml:space="preserve">
          <source>Requests that don&amp;rsquo;t match any routes</source>
          <target state="translated">どのルートにも一致しないリクエスト</target>
        </trans-unit>
        <trans-unit id="a80b9e020c8c121bbb8ca06d00f96ef528345c14" translate="yes" xml:space="preserve">
          <source>Requests that go through &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; are now automatically retried on &lt;code&gt;ENOTFOUND&lt;/code&gt; errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4424&quot;&gt;#4424&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1755&quot;&gt;#1755&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;を経由するリクエストは、 &lt;code&gt;ENOTFOUND&lt;/code&gt; エラーで自動的に再試行されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4424&quot;&gt;＃4424&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1755&quot;&gt;＃1755を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="15562a624fc3f5e4b22d65a2ec16b8bd0e7f9696" translate="yes" xml:space="preserve">
          <source>Requests that go through &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; are now automatically retried under the hood when the request fails. This more closely reflects Chrome&amp;rsquo;s default behavior on requests. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4013&quot;&gt;#4013&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/898&quot;&gt;#898&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1013&quot;&gt;#1013&lt;/a&gt;.</source>
          <target state="translated">通過する要求&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;要求が失敗したときに自動的にボンネットの下に再試行されます。これは、リクエストに対するChromeのデフォルトの動作をより厳密に反映しています。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4013&quot;&gt;＃4013&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/898&quot;&gt;＃898&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1013&quot;&gt;＃1013&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42671246ffd7e66924f939eeb938236b659e4d2c" translate="yes" xml:space="preserve">
          <source>Require Element</source>
          <target state="translated">必要な要素</target>
        </trans-unit>
        <trans-unit id="3adc09c4056c7e5dc9679e4955252e964b4ffb97" translate="yes" xml:space="preserve">
          <source>Require subject be of type: &lt;code&gt;element&lt;/code&gt;.</source>
          <target state="translated">サブジェクトのタイプが必須であること： &lt;code&gt;element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83e34cd699c56ba61b2c915bbe71f409de3976d3" translate="yes" xml:space="preserve">
          <source>Require subject be one of the following types: &lt;code&gt;element&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt; or &lt;code&gt;window&lt;/code&gt;</source>
          <target state="translated">件名は次のタイプのいずれかである必要があります： &lt;code&gt;element&lt;/code&gt; 、 &lt;code&gt;document&lt;/code&gt; または &lt;code&gt;window&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="c0ba3de21436328de29960c09fa7e0b4f9d542ea" translate="yes" xml:space="preserve">
          <source>Requires seeding data</source>
          <target state="translated">シードデータが必要</target>
        </trans-unit>
        <trans-unit id="e31a24e5ef31815d6b6990cd50d6806dca065b09" translate="yes" xml:space="preserve">
          <source>Rerun a single failing spec file</source>
          <target state="translated">1つの失敗したスペックファイルを再実行</target>
        </trans-unit>
        <trans-unit id="0ba69d68b8c10ed63a3cc3156bfdc92bce6a947a" translate="yes" xml:space="preserve">
          <source>Reruns Cypress tests when the back end server restarts</source>
          <target state="translated">バックエンドサーバーの再起動時にCypressテストを再実行する</target>
        </trans-unit>
        <trans-unit id="0d74075e8b96488698762a8ce44edf5d7614e47f" translate="yes" xml:space="preserve">
          <source>Resend invitation to invited user</source>
          <target state="translated">招待されたユーザーに招待状を再送</target>
        </trans-unit>
        <trans-unit id="98d53aa320bfa9f3ee95a18c9df1aa09adb7fddb" translate="yes" xml:space="preserve">
          <source>Reserved words</source>
          <target state="translated">予約語</target>
        </trans-unit>
        <trans-unit id="2ebf870b05f9d7d8d49ff66680ae7798889613c7" translate="yes" xml:space="preserve">
          <source>Reset or add more record keys</source>
          <target state="translated">レコードキーのリセットまたは追加</target>
        </trans-unit>
        <trans-unit id="e4e51724eea1409e346aea72877fe02e8d5f1727" translate="yes" xml:space="preserve">
          <source>Resetting tests is much slower than adding more assertions</source>
          <target state="translated">テストをリセットするのは、アサーションを追加するよりもはるかに遅い</target>
        </trans-unit>
        <trans-unit id="9bbeefa71d9e64f67270f66edeb5e1daaee32008" translate="yes" xml:space="preserve">
          <source>Resize the viewport to 1024px x 768px</source>
          <target state="translated">ビューポートのサイズを1024px x 768pxに変更する</target>
        </trans-unit>
        <trans-unit id="de0522d74e495e83e38aa80e57ecdaf90d660f19" translate="yes" xml:space="preserve">
          <source>Resize the viewport to iPhone 6 width and height</source>
          <target state="translated">ビューポートをiPhone 6の幅と高さにリサイズする</target>
        </trans-unit>
        <trans-unit id="a8c5f02da5d466774161653c167ad879c5c7bcca" translate="yes" xml:space="preserve">
          <source>Resolve with the absolute path to that file: &lt;code&gt;/Users/foo/tmp/spec.js&lt;/code&gt;</source>
          <target state="translated">そのファイルへの絶対パスで解決します： &lt;code&gt;/Users/foo/tmp/spec.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aad1fdd1990556fa5042b1482a3835b1b495ad38" translate="yes" xml:space="preserve">
          <source>Resolved Configuration</source>
          <target state="translated">解決済みの設定</target>
        </trans-unit>
        <trans-unit id="2445873f3d19c5243557ab7088371cc36c0b4a71" translate="yes" xml:space="preserve">
          <source>Resolved values will show up in your Settings tab.</source>
          <target state="translated">解決された値は、[設定]タブに表示されます。</target>
        </trans-unit>
        <trans-unit id="021493f340d35ce0d744f7a3a9e53445394e86a6" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="translated">Resource</target>
        </trans-unit>
        <trans-unit id="12118121ec72e1aab55c5649ad0ce79465135a01" translate="yes" xml:space="preserve">
          <source>Response Body</source>
          <target state="translated">レスポンスボディ</target>
        </trans-unit>
        <trans-unit id="05c8034c2db781cbbc4d7f947a1515974a3b26f8" translate="yes" xml:space="preserve">
          <source>Response Headers</source>
          <target state="translated">レスポンスヘッダー</target>
        </trans-unit>
        <trans-unit id="a01c6909801533f70f290ae3f8100b3741a64049" translate="yes" xml:space="preserve">
          <source>Response body when stubbing routes</source>
          <target state="translated">ルートスタブ時の応答体</target>
        </trans-unit>
        <trans-unit id="735007d240ee43c3e1ce35bab85244b294ddb27a" translate="yes" xml:space="preserve">
          <source>Response functions</source>
          <target state="translated">応答機能</target>
        </trans-unit>
        <trans-unit id="eadc61c602ee8910d97c3177673f43f3eae78cfe" translate="yes" xml:space="preserve">
          <source>Response headers for stubbed routes</source>
          <target state="translated">スタブルートのレスポンスヘッダ</target>
        </trans-unit>
        <trans-unit id="6a89f7fb6d4c63eca560e266c1c9c359f7aa7332" translate="yes" xml:space="preserve">
          <source>Response headers on XHR stubs will now automatically set their &lt;code&gt;Content-Type&lt;/code&gt; based on the stub response. Previously this would always set to the &lt;code&gt;Content-Type&lt;/code&gt; to &lt;code&gt;application/json&lt;/code&gt;. Now if you force a response to be text or html, the &lt;code&gt;Content-Type&lt;/code&gt; response header will be set appropriately.</source>
          <target state="translated">XHRスタブの応答ヘッダーは、スタブ応答に基づいて &lt;code&gt;Content-Type&lt;/code&gt; を自動的に設定するようになりました。以前は、これは常に &lt;code&gt;Content-Type&lt;/code&gt; を &lt;code&gt;application/json&lt;/code&gt; に設定していました。これで、応答をテキストまたはhtmlに強制すると、 &lt;code&gt;Content-Type&lt;/code&gt; 応答ヘッダーが適切に設定されます。</target>
        </trans-unit>
        <trans-unit id="f8f98059905a9a12655292b38857d9e11300ef8d" translate="yes" xml:space="preserve">
          <source>Response status code when stubbing routes</source>
          <target state="translated">ルートスタブ時の応答ステータスコード</target>
        </trans-unit>
        <trans-unit id="e34c8b969e2bc931bca15f658f21335dfe1d16de" translate="yes" xml:space="preserve">
          <source>Restore all overridden native functions. This is automatically called between tests, so should not generally be needed.</source>
          <target state="translated">オーバーライドされたすべてのネイティブ関数をリストアします。これはテストの間に自動的に呼び出されるので、一般的には必要ないはずです。</target>
        </trans-unit>
        <trans-unit id="42eb290872f6f7560b1e849ef7155347b2248a10" translate="yes" xml:space="preserve">
          <source>Restores</source>
          <target state="translated">Restores</target>
        </trans-unit>
        <trans-unit id="0dcc9602f263d730c4732a64bbc7e7e76a8cc268" translate="yes" xml:space="preserve">
          <source>Restyled the tests list.</source>
          <target state="translated">テストリストのスタイルを変更しました。</target>
        </trans-unit>
        <trans-unit id="13093e568fcffba32cbe1f9796a271c07111d626" translate="yes" xml:space="preserve">
          <source>Retries</source>
          <target state="translated">Retries</target>
        </trans-unit>
        <trans-unit id="cc1dce030b5bd46c754a6957d5e71344e50e61ef" translate="yes" xml:space="preserve">
          <source>Retry &lt;code&gt;cy.wrap()&lt;/code&gt; if &lt;code&gt;undefined&lt;/code&gt; when followed by &lt;a href=&quot;should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">リトライ &lt;code&gt;cy.wrap()&lt;/code&gt; 場合 &lt;code&gt;undefined&lt;/code&gt; 続く場合&lt;a href=&quot;should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a2cc83ac7da6616c53efb9b7be6346b135d525b" translate="yes" xml:space="preserve">
          <source>Retry-ability</source>
          <target state="translated">Retry-ability</target>
        </trans-unit>
        <trans-unit id="4c85d59c181a8bdfec393789d72d1942cf54846f" translate="yes" xml:space="preserve">
          <source>Return Values</source>
          <target state="translated">戻り値</target>
        </trans-unit>
        <trans-unit id="8f2d25a3f9038448423920c5a3234185a71b57ff" translate="yes" xml:space="preserve">
          <source>Return a Promise from an asynchronous task</source>
          <target state="translated">非同期タスクからプロミスを返す</target>
        </trans-unit>
        <trans-unit id="b3802d8b050d332e674b3f0c80f11216086ba723" translate="yes" xml:space="preserve">
          <source>Return early</source>
          <target state="translated">早期返却</target>
        </trans-unit>
        <trans-unit id="91462c066b672c69094b848f37359b9410569a2e" translate="yes" xml:space="preserve">
          <source>Return just a single configuration option value</source>
          <target state="translated">単一の設定オプション値のみを返します。</target>
        </trans-unit>
        <trans-unit id="5323c4931b1c8df4f7d4c111183f53b20c09aedb" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;null&lt;/code&gt; from a &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; will now change the subject to that. Previously returning &lt;code&gt;null&lt;/code&gt; would not cause subject changes.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;から &lt;code&gt;null&lt;/code&gt; を返すと、件名がそれに変更されます。以前は &lt;code&gt;null&lt;/code&gt; を返しても、サブジェクトは変更されませんでした。</target>
        </trans-unit>
        <trans-unit id="28568069da765542d90d0527893f4d996cd18bf6" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;undefined&lt;/code&gt; will not modify the yielded subject</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; を返しても、生成されたサブジェクトは変更されません</target>
        </trans-unit>
        <trans-unit id="b1a32903cc912a1ac688bb2df4600dab2f5a333b" translate="yes" xml:space="preserve">
          <source>Returning a promise in a custom command while also invoking cy commands now throws. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/435&quot;&gt;#435&lt;/a&gt;.</source>
          <target state="translated">cyコマンドを呼び出すと同時にカスタムコマンドでpromiseを返すと、スローされるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/435&quot;&gt;＃435を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="961cfc42d26746c0c53e29c8eb58cc183810a954" translate="yes" xml:space="preserve">
          <source>Returns JSON containing latest available CDN destinations</source>
          <target state="translated">最新の利用可能なCDNデスティネーションを含むJSONを返します</target>
        </trans-unit>
        <trans-unit id="85893e2d5a7f20bc9eeebd31f853972d9f9cdcc9" translate="yes" xml:space="preserve">
          <source>Returns you the selector value for a given element as determined by the selector strategy.</source>
          <target state="translated">セレクタ戦略によって決定された、指定された要素のセレクタ値を返します。</target>
        </trans-unit>
        <trans-unit id="62df73545d52f5ebd97b5e9db767c07d0c9601c5" translate="yes" xml:space="preserve">
          <source>Reverted &lt;code&gt;window.location&lt;/code&gt; overrides. This broke things in unexpected ways and after further testing would not have worked on &lt;code&gt;Firefox&lt;/code&gt; and &lt;code&gt;IE&lt;/code&gt;. It&amp;rsquo;s back to the drawing board (but I have some ideas). Apps using &lt;code&gt;pushState&lt;/code&gt; routing are broken again.</source>
          <target state="translated">差し戻し &lt;code&gt;window.location&lt;/code&gt; のをオーバーライド。これは予期しない方法で物事を壊し、さらなるテストの後、 &lt;code&gt;Firefox&lt;/code&gt; と &lt;code&gt;IE&lt;/code&gt; では機能しなかったでしょう。それは設計図に戻ります（しかし、いくつかのアイデアがあります）。 &lt;code&gt;pushState&lt;/code&gt; ルーティングを使用するアプリは再び機能しなくなります。</target>
        </trans-unit>
        <trans-unit id="db02a4018cecf8450ce07d4f343f065f8835575d" translate="yes" xml:space="preserve">
          <source>Reverted the Chrome argument that disabled &lt;code&gt;RootLayerScrolling&lt;/code&gt; which was used to prevent the application under test from &amp;ldquo;shaking&amp;rdquo; due to a bug in versions 66 and 67. This workaround inadvertently created a different and much more severe bug in Chrome 68 that would miscalculate pointer coordinates. This led to Cypress giving confusing errors about elements being covered up on action. This is still a bug in Chrome, and is fixed in Canary but has not yet been released to the stable Chrome 68 channel. Nevertheless, removing the &lt;code&gt;RootLayerScrolling&lt;/code&gt; flag does fix it. We did several experiments to try to ensure that the &amp;ldquo;shaking&amp;rdquo; behavior does not exhibit itself in Chrome 68. We have limited the &lt;code&gt;--disable-blink-features=RootLayerScrolling&lt;/code&gt; flag to Chrome 66 and Chrome 67. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2223&quot;&gt;#2223&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2215&quot;&gt;#2215&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2037&quot;&gt;#2037&lt;/a&gt;.</source>
          <target state="translated">バージョン66と67のバグが原因でテスト中のアプリケーションが「揺れる」のを防ぐために使用されていた &lt;code&gt;RootLayerScrolling&lt;/code&gt; を無効にするChromeの引数を元に戻しました。この回避策は、ポインター座標を誤って計算するChrome 68に別のはるかに深刻なバグを誤って作成しました。これにより、サイプレスは、アクションで隠されている要素について混乱するエラーを出しました。これはまだChromeのバグであり、Canaryで修正されていますが、安定したChrome 68チャネルにはまだリリースされていません。それでも、 &lt;code&gt;RootLayerScrolling&lt;/code&gt; フラグを削除すると修正されます。 「シェイク」動作がChrome 68で発生しないことを確認するために、いくつかの実験を &lt;code&gt;--disable-blink-features=RootLayerScrolling&lt;/code&gt; Chrome 66およびChrome 67へのフラグ。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2223&quot;&gt;＃2223&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2215&quot;&gt;＃2215&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2037&quot;&gt;＃2037&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5010ef8f44e8976ef4d4a90d43c7fe326f24e98b" translate="yes" xml:space="preserve">
          <source>Rewrote error message which is displayed when Cypress cannot parse your test / spec file. Now a list of suggestions are given and an external link is provided which further explains how this may happen.</source>
          <target state="translated">Cypress がテスト/スペックファイルを解析できない場合に表示されるエラーメッセージを書き換えました。提案のリストが与えられ、これがどのようにして起こるかを説明する外部リンクが提供されています。</target>
        </trans-unit>
        <trans-unit id="8119e7f319c9927b2cee6e398f0a78babf7eebdc" translate="yes" xml:space="preserve">
          <source>Roadmap</source>
          <target state="translated">Roadmap</target>
        </trans-unit>
        <trans-unit id="4999528efe0f94f8f66b1dc05aad8ebaaae7b2be" translate="yes" xml:space="preserve">
          <source>Route</source>
          <target state="translated">Route</target>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="translated">Routes</target>
        </trans-unit>
        <trans-unit id="ca305704111bf1efb4c8c9fdd5c3bbea520063ea" translate="yes" xml:space="preserve">
          <source>Routes no longer display as duplicated in between test runs when &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; is started prior to a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and you cause a full page refresh, which caused all routes to be re-bound.</source>
          <target state="translated">ルートは、もはやとき、テスト実行の間に重複して表示&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; は、&lt;/a&gt;前に開始されません&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;、あなたはすべてのルートが再結合させ、フルページの更新を引き起こします。</target>
        </trans-unit>
        <trans-unit id="1533e3c275ee1265d2044d08ae87250cc01d788d" translate="yes" xml:space="preserve">
          <source>Routes:</source>
          <target state="translated">Routes:</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="407d6e3bdfa0f2463b644213c830f0e4a2080e2f" translate="yes" xml:space="preserve">
          <source>Rubygem for using cypress.io with Ruby on Rails applications</source>
          <target state="translated">cypress.ioをRuby on Railsアプリケーションで使うためのRubygem</target>
        </trans-unit>
        <trans-unit id="bb11a8e3f8712e36e7cd9d1c615a4e3dbb03336a" translate="yes" xml:space="preserve">
          <source>Rules</source>
          <target state="translated">Rules</target>
        </trans-unit>
        <trans-unit id="ba860a256389a6ae38d7379703c80dbc812d4c29" translate="yes" xml:space="preserve">
          <source>Run Cypress command outside the test</source>
          <target state="translated">テスト外でCypressコマンドを実行</target>
        </trans-unit>
        <trans-unit id="aa43dfc2b4595d0b69faaae94ff266bdb8a3ee57" translate="yes" xml:space="preserve">
          <source>Run a build command</source>
          <target state="translated">ビルドコマンドの実行</target>
        </trans-unit>
        <trans-unit id="2dcd417a2f24f493dd3ebd07130f385ef61e8ef7" translate="yes" xml:space="preserve">
          <source>Run an arbitrary script and assert its output</source>
          <target state="translated">任意のスクリプトを実行し、その出力をアサートする</target>
        </trans-unit>
        <trans-unit id="417046dfb773aba3c737a3acaacf7c5d82b83a60" translate="yes" xml:space="preserve">
          <source>Run binary</source>
          <target state="translated">バイナリの実行</target>
        </trans-unit>
        <trans-unit id="abec849d3ddc076be9630aa3f36cac57b280d2ef" translate="yes" xml:space="preserve">
          <source>Run cancellation</source>
          <target state="translated">実行キャンセル</target>
        </trans-unit>
        <trans-unit id="1ce9228aa632a6eedc219f9a586bf0c472c96487" translate="yes" xml:space="preserve">
          <source>Run completion delay</source>
          <target state="translated">実行完了遅延</target>
        </trans-unit>
        <trans-unit id="610d9c8e1042f8567e3cc3ea69128291f9956f57" translate="yes" xml:space="preserve">
          <source>Run context details:</source>
          <target state="translated">コンテキストの詳細を実行します。</target>
        </trans-unit>
        <trans-unit id="20ee3a909c968210d7ef73232186e14b3d65ee04" translate="yes" xml:space="preserve">
          <source>Run cucumber/gherkin-syntaxed specs with cypress.io</source>
          <target state="translated">cucumber/gherkin-syntaxed specsをcypress.ioで実行します。</target>
        </trans-unit>
        <trans-unit id="e6487ca72b41a0ed962f92f31d0e923beb5ec871" translate="yes" xml:space="preserve">
          <source>Run details</source>
          <target state="translated">実行の詳細</target>
        </trans-unit>
        <trans-unit id="3135f8e3d921c489ca67d08c8c5a09e8423bdcca" translate="yes" xml:space="preserve">
          <source>Run failures:</source>
          <target state="translated">実行失敗。</target>
        </trans-unit>
        <trans-unit id="f281e9d7a0ed02b0da076e4d47b6f81b9920ebdd" translate="yes" xml:space="preserve">
          <source>Run in global mode</source>
          <target state="translated">グローバルモードでの実行</target>
        </trans-unit>
        <trans-unit id="a58bf481de42e1773c8fa3448c86e3c0ede30f5e" translate="yes" xml:space="preserve">
          <source>Run is not accepting any new groups</source>
          <target state="translated">Run は新しいグループを受け付けていません</target>
        </trans-unit>
        <trans-unit id="a7da029fdc3e942e32b0ab08a9efb01e9f992eab" translate="yes" xml:space="preserve">
          <source>Run must pass --parallel flag</source>
          <target state="translated">実行はパスしなければならない --パラレルフラグ</target>
        </trans-unit>
        <trans-unit id="8dc3c884fdd2d4cee9e2d5553f2f7fec1571161b" translate="yes" xml:space="preserve">
          <source>Run must pass &lt;code&gt;--parallel&lt;/code&gt; flag</source>
          <target state="translated">実行は &lt;code&gt;--parallel&lt;/code&gt; フラグを渡す必要があります</target>
        </trans-unit>
        <trans-unit id="16958a8dd451b44e8ac306fafac635d29d7a1d2e" translate="yes" xml:space="preserve">
          <source>Run recorded specs in &lt;a href=&quot;parallelization&quot;&gt;parallel&lt;/a&gt; across multiple machines</source>
          <target state="translated">記録された仕様を複数のマシンで&lt;a href=&quot;parallelization&quot;&gt;並行し&lt;/a&gt;て実行する</target>
        </trans-unit>
        <trans-unit id="558add2c5e29eec1753207da9e819cf609239806" translate="yes" xml:space="preserve">
          <source>Run recorded specs in &lt;a href=&quot;parallelization&quot;&gt;parallel&lt;/a&gt; across multiple machines.</source>
          <target state="translated">記録された仕様を複数のマシンで&lt;a href=&quot;parallelization&quot;&gt;並行し&lt;/a&gt;て実行します。</target>
        </trans-unit>
        <trans-unit id="782651cf04132d687a4e936d0097dc380c114ad1" translate="yes" xml:space="preserve">
          <source>Run recorded specs in parallel across multiple machines</source>
          <target state="translated">記録されたスペックを複数のマシンで並列に実行</target>
        </trans-unit>
        <trans-unit id="3c675297bf29b41558d464fc56d22d78d600646f" translate="yes" xml:space="preserve">
          <source>Run statistics, such as tests passed, failed, skipped, and over-limit.</source>
          <target state="translated">テストの合格、不合格、スキップ、オーバーリミットなどの統計を実行します。</target>
        </trans-unit>
        <trans-unit id="fcab481b05d6a1db01c2b0869ada3103ff798e52" translate="yes" xml:space="preserve">
          <source>Run tests</source>
          <target state="translated">テストの実行</target>
        </trans-unit>
        <trans-unit id="4bd2bc2103195024cb0f5ee0b20cc4585d5d08d3" translate="yes" xml:space="preserve">
          <source>Run tests in parallel</source>
          <target state="translated">並行してテストを実行する</target>
        </trans-unit>
        <trans-unit id="146aa3f3f33cee56ffb86338409e7753c675a77a" translate="yes" xml:space="preserve">
          <source>Run tests on multiple URLs at various viewport sizes.</source>
          <target state="translated">様々なビューポートサイズの複数のURLでテストを実行します。</target>
        </trans-unit>
        <trans-unit id="b42eadab37fcbb3c1213b2a33106f09cb30c08d6" translate="yes" xml:space="preserve">
          <source>Run tests specifying a single test file to run instead of all tests.</source>
          <target state="translated">すべてのテストではなく、一つのテストファイルを指定してテストを実行します。</target>
        </trans-unit>
        <trans-unit id="d3e8dc5c8a5eacff519ff837124bfc8f36b03f0f" translate="yes" xml:space="preserve">
          <source>Run tests specifying multiple test files to run.</source>
          <target state="translated">複数のテストファイルを指定してテストを実行します。</target>
        </trans-unit>
        <trans-unit id="4feccdc97f1bc06198f35519dbd9d8164d8138dd" translate="yes" xml:space="preserve">
          <source>Run tests within the folder matching the glob &lt;em&gt;(Note: Using double quotes is strongly recommended)&lt;/em&gt;.</source>
          <target state="translated">globに一致するフォルダー内でテストを実行します&lt;em&gt;（注：二重引用符の使用を強くお勧めします）&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="46e158403f8141d3df0213fcec12f7de94f2a0b3" translate="yes" xml:space="preserve">
          <source>Run the Cypress app by itself</source>
          <target state="translated">Cypressアプリを単独で実行する</target>
        </trans-unit>
        <trans-unit id="d1879049bcada5429841f7e20772732d649c4619" translate="yes" xml:space="preserve">
          <source>Run the same test using &lt;a href=&quot;command-line#cypress-run-browser-lt-browser-name-or-path-gt&quot;&gt;&lt;code&gt;--browser chrome&lt;/code&gt;&lt;/a&gt;. The problem might be isolated to the Electron browser.</source>
          <target state="translated">&lt;a href=&quot;command-line#cypress-run-browser-lt-browser-name-or-path-gt&quot;&gt; &lt;code&gt;--browser chrome&lt;/code&gt; &lt;/a&gt;を使用して同じテストを実行します。問題は、Electronブラウザーに特定されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="f276d7f97a0055f80d9160f21ba63f88f2b06516" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;npm install --save-dev cypress&lt;/code&gt; will automatically download the CLI + binary.</source>
          <target state="translated">実行 &lt;code&gt;npm install --save-dev cypress&lt;/code&gt; 自動的にCLI +バイナリをダウンロードします。</target>
        </trans-unit>
        <trans-unit id="a313b46b1e10ff26fbf570fcf6ec14fd67c9b069" translate="yes" xml:space="preserve">
          <source>Running Cypress in Continuous Integration is almost the same as running it locally in your terminal. You generally only need to do two things:</source>
          <target state="translated">Continuous Integration で Cypress を実行するのは、ターミナルでローカルに Cypress を実行するのとほぼ同じです。通常、必要なことは2つだけです。</target>
        </trans-unit>
        <trans-unit id="0ff88cf6f8226d7636f66326d41006f5077e7d89" translate="yes" xml:space="preserve">
          <source>Running Cypress in a linux VM on VirtualBox no longer displays &amp;ldquo;black screens&amp;rdquo;.</source>
          <target state="translated">VirtualBoxのLinux VMでサイプレスを実行すると、「黒い画面」が表示されなくなりました。</target>
        </trans-unit>
        <trans-unit id="4bb6a4b392de3d8065e6df2aa5b2cf32d1ea2c7a" translate="yes" xml:space="preserve">
          <source>Running Cypress via &lt;code&gt;cypress run&lt;/code&gt; now supports scripts of &lt;code&gt;type=&quot;module&quot;&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3696&quot;&gt;#3696&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; を介してサイプレスを実行すると、 &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; のスクリプトがサポートされるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3696&quot;&gt;＃3696を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8157bd60933758a04a4f315fc442baf1de5d0976" translate="yes" xml:space="preserve">
          <source>Running Experiments</source>
          <target state="translated">実験の実行</target>
        </trans-unit>
        <trans-unit id="1c152ddec507abf9737b4e6f694b8d2785646e77" translate="yes" xml:space="preserve">
          <source>Running a single test will now automatically expand to display its commands.</source>
          <target state="translated">単一のテストを実行すると、そのコマンドが自動的に展開されて表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="c9dfb5c6fa30bf917d7d066a8106d6b309daa4f9" translate="yes" xml:space="preserve">
          <source>Running a specific test won&amp;rsquo;t open/close immediately when starting up (fixes weird flickering effect).</source>
          <target state="translated">特定のテストを実行しても、起動時にすぐに開いたり閉じたりしません（奇妙なちらつきの影響を修正）。</target>
        </trans-unit>
        <trans-unit id="13f96700add65155355bf728249a9a4857981202" translate="yes" xml:space="preserve">
          <source>Running an external process (like spinning up a Webdriver instance of another browser like Firefox, Safari, or puppeteer)</source>
          <target state="translated">外部プロセスの実行(Firefox、Safari、puppeteer などの別のブラウザの Webdriver インスタンスの回転など)。</target>
        </trans-unit>
        <trans-unit id="efc768c72873d681c2365657bd5c2a76e3667718" translate="yes" xml:space="preserve">
          <source>Running an external process.</source>
          <target state="translated">外部プロセスを実行します。</target>
        </trans-unit>
        <trans-unit id="8a547152cce0b1661bd133466d4f0780404abaf6" translate="yes" xml:space="preserve">
          <source>Running build scripts</source>
          <target state="translated">ビルドスクリプトの実行</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">テストの実行</target>
        </trans-unit>
        <trans-unit id="e26bfdbd75ce579d9d7495ae0122004a5c035115" translate="yes" xml:space="preserve">
          <source>Running tests in Cypress now requires either Chrome, Chromium, or Canary to be installed on your OS environment. We intend to expand support for more browsers in the future, but for now, only these 3 are supported.</source>
          <target state="translated">Cypress でテストを実行するには、OS 環境に Chrome、Chromium、Canary のいずれかがインストールされている必要があります。将来的には、より多くのブラウザのサポートを拡大する予定ですが、今のところサポートされているのはこの3つのブラウザのみです。</target>
        </trans-unit>
        <trans-unit id="66bc6fc7525e76289df1310b4f912cc7f5b19b00" translate="yes" xml:space="preserve">
          <source>Running tests in parallel requires the &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;--record&lt;/code&gt; flag&lt;/a&gt; be passed. This ensures Cypress can properly collect the data needed to parallelize future runs. This also gives you the full benefit of seeing the results of your parallelized tests in our &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt;. If you have not set up your project to record, check out our &lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;setup guide&lt;/a&gt;.</source>
          <target state="translated">テストを並行して実行するには、&lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;--record&lt;/code&gt; フラグ&lt;/a&gt;を渡す必要があります。これにより、サイプレスは将来の実行を並列化するために必要なデータを適切に収集できるようになります。これにより、並列化されたテストの結果を&lt;a href=&quot;../dashboard/introduction&quot;&gt;ダッシュボードサービス&lt;/a&gt;で確認できるというメリットも十分に得られます。記録するプロジェクトを設定していない場合は、&lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;設定ガイドをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fcde5c325dc9b7dca9e824eac5ff1c72988f66e8" translate="yes" xml:space="preserve">
          <source>Runs</source>
          <target state="translated">Runs</target>
        </trans-unit>
        <trans-unit id="0d08a5d48ecf9d212007ba3433378ff1ac57df0c" translate="yes" xml:space="preserve">
          <source>Runs Cypress tests and resolve with all test results. See the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#cypress-module-api&quot;&gt;Cypress Module API recipe&lt;/a&gt;.</source>
          <target state="translated">サイプレステストを実行し、すべてのテスト結果で解決します。&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#cypress-module-api&quot;&gt;サイプレスモジュールAPIレシピを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1516931c0fbcd8e017d8ff6d635337fccc1e7cd9" translate="yes" xml:space="preserve">
          <source>Runs Cypress tests to completion. By default will run all tests headlessly in the &lt;code&gt;Electron&lt;/code&gt; browser.</source>
          <target state="translated">サイプレステストを最後まで実行します。デフォルトでは、 &lt;code&gt;Electron&lt;/code&gt; ブラウザーですべてのテストをヘッドレスで実行します。</target>
        </trans-unit>
        <trans-unit id="06a438a7117b45a35a93c711ff5256c178c55382" translate="yes" xml:space="preserve">
          <source>Runs linting via ESLint on your spec files as they are loaded and display errors in the console</source>
          <target state="translated">specファイルが読み込まれたときにESLint経由でリンティングを実行し、コンソールにエラーを表示します。</target>
        </trans-unit>
        <trans-unit id="572049dc4618ea1ba66e7430cceb976aab87a00c" translate="yes" xml:space="preserve">
          <source>Runs showing up in the &lt;code&gt;Runs&lt;/code&gt; tab now more closely match how they display in the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2060&quot;&gt;#2060&lt;/a&gt;.</source>
          <target state="translated">[ &lt;code&gt;Runs&lt;/code&gt; ]タブに表示される実行は、ダッシュボードでの表示とより密接に一致するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2060&quot;&gt;＃2060を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="acce39ad47725ce27f793030cc59f295fd0aff5a" translate="yes" xml:space="preserve">
          <source>SHA: &lt;code&gt;COMMIT_INFO_SHA&lt;/code&gt;</source>
          <target state="translated">SHA： &lt;code&gt;COMMIT_INFO_SHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4973f9dc1bfb6c05ce790de9c0b838acd4edfb1e" translate="yes" xml:space="preserve">
          <source>SOCKS proxies are not currently supported. A workaround is to set up an HTTP proxy locally that points to your SOCKS proxy, then using that HTTP proxy with Cypress. &lt;a href=&quot;https://superuser.com/questions/423563/convert-http-requests-to-socks5&quot;&gt;Read more about forwarding an HTTP proxy through SOCKS.&lt;/a&gt;</source>
          <target state="translated">SOCKSプロキシは現在サポートされていません。回避策は、SOCKSプロキシをポイントするHTTPプロキシをローカルにセットアップしてから、そのHTTPプロキシをサイプレスで使用することです。&lt;a href=&quot;https://superuser.com/questions/423563/convert-http-requests-to-socks5&quot;&gt;SOCKSを介したHTTPプロキシの転送の詳細をご覧ください。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34901735f381f0f98bec6417163cdef719fb4704" translate="yes" xml:space="preserve">
          <source>Same-origin</source>
          <target state="translated">Same-origin</target>
        </trans-unit>
        <trans-unit id="2957a948ae81ef5f0932cfbea38d5ee85c1a6339" translate="yes" xml:space="preserve">
          <source>Save details about the screenshot</source>
          <target state="translated">スクリーンショットの詳細を保存</target>
        </trans-unit>
        <trans-unit id="db8bebabdcd43507a4930b05841a9e166e85d8e3" translate="yes" xml:space="preserve">
          <source>Save the file and switch back over to the Cypress Test Runner. You might notice a few things:</source>
          <target state="translated">ファイルを保存して、Cypressテストランナーに切り替えます。いくつかのことに気づくかもしれません。</target>
        </trans-unit>
        <trans-unit id="a165641c99d90d2bb2e72b401eaa7195d6b6465f" translate="yes" xml:space="preserve">
          <source>Saves the Cypress test command log as a JSON file if a test fails.</source>
          <target state="translated">テストが失敗した場合、Cypress のテストコマンドログを JSON ファイルとして保存します。</target>
        </trans-unit>
        <trans-unit id="4c1403cebeaf112d1f0e9df9187260dfbd9270d2" translate="yes" xml:space="preserve">
          <source>Say you have the following directory structure:</source>
          <target state="translated">以下のようなディレクトリ構造になっているとします。</target>
        </trans-unit>
        <trans-unit id="aeac559db11645d9bcde173628fe1c45f197c7e3" translate="yes" xml:space="preserve">
          <source>Scaffolded &lt;code&gt;index.js&lt;/code&gt; and &lt;code&gt;commands.js&lt;/code&gt; have had their content updated to point to the custom commands API.</source>
          <target state="translated">Scaffolded &lt;code&gt;index.js&lt;/code&gt; および &lt;code&gt;commands.js&lt;/code&gt; のコンテンツは、カスタムコマンドAPIを指すように更新されました。</target>
        </trans-unit>
        <trans-unit id="6c301468b3b64e381e9dec5b063e25249628662f" translate="yes" xml:space="preserve">
          <source>Scaffolding new projects no longer generates a &lt;code&gt;default.js&lt;/code&gt; file.</source>
          <target state="translated">新しいプロジェクトをスキャフォールディングしても、 &lt;code&gt;default.js&lt;/code&gt; ファイルが生成されなくなりました。</target>
        </trans-unit>
        <trans-unit id="6788f7c59a388dfcfb309ce748ccca4d54582c6b" translate="yes" xml:space="preserve">
          <source>Scale &lt;code&gt;viewport&lt;/code&gt; and &lt;code&gt;fullPage&lt;/code&gt; captures</source>
          <target state="translated">スケール &lt;code&gt;viewport&lt;/code&gt; と &lt;code&gt;fullPage&lt;/code&gt; のキャプチャ</target>
        </trans-unit>
        <trans-unit id="0b4193c5fc389d597934531fe8b982ebfac719de" translate="yes" xml:space="preserve">
          <source>Scaling</source>
          <target state="translated">Scaling</target>
        </trans-unit>
        <trans-unit id="fe3b7cb78f8c08f2249412889c387dc122d41863" translate="yes" xml:space="preserve">
          <source>Scaling the app should not affect any calculations or behavior of your application (in fact it won&amp;rsquo;t even know it&amp;rsquo;s being scaled).</source>
          <target state="translated">アプリのスケーリングは、アプリケーションの計算や動作に影響を与えないようにする必要があります（実際、スケーリングされていることさえわかりません）。</target>
        </trans-unit>
        <trans-unit id="c23540e5fb551edff0ac95649a1d551f9736d55e" translate="yes" xml:space="preserve">
          <source>Scopes</source>
          <target state="translated">Scopes</target>
        </trans-unit>
        <trans-unit id="34a9994ce765acdbcb5386ce9d7ed7f0b0306b0b" translate="yes" xml:space="preserve">
          <source>Scopes all subsequent cy commands to within this element. Useful when working within a particular group of elements such as a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">後続のすべてのcyコマンドをこの要素内にスコープします。 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; などの特定の要素グループ内で作業する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="60c152d92dffce8349a5607ba93f33765033eb41" translate="yes" xml:space="preserve">
          <source>Screenshot</source>
          <target state="translated">Screenshot</target>
        </trans-unit>
        <trans-unit id="715fb1bee8136c6652899dc5e0ded7035e64d596" translate="yes" xml:space="preserve">
          <source>Screenshot &lt;code&gt;onAfterScreenshot&lt;/code&gt; and &lt;code&gt;onBeforeScreenshot&lt;/code&gt; callbacks ar enow invoked for failed tests. They include a &lt;code&gt;testFailure&lt;/code&gt; property to distinguish between automatic ones and your own use of &lt;code&gt;cy.screenshot()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2040&quot;&gt;#2040&lt;/a&gt;.</source>
          <target state="translated">スクリーンショットの &lt;code&gt;onAfterScreenshot&lt;/code&gt; および &lt;code&gt;onBeforeScreenshot&lt;/code&gt; コールバックは、失敗したテストに対して呼び出されます。これらには &lt;code&gt;testFailure&lt;/code&gt; プロパティが含まれており、自動プロパティと独自の &lt;code&gt;cy.screenshot()&lt;/code&gt; の使用を区別します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2040&quot;&gt;＃2040を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7ad48417ae80686ec9beeec68e8f206fb97486c7" translate="yes" xml:space="preserve">
          <source>Screenshot an element</source>
          <target state="translated">要素をスクリーンショットする</target>
        </trans-unit>
        <trans-unit id="5aeb8c3123a6f3f6b230f80b57919f5c2c057bb0" translate="yes" xml:space="preserve">
          <source>Screenshot handling</source>
          <target state="translated">スクリーンショットの取り扱い</target>
        </trans-unit>
        <trans-unit id="b6397a3dda9fe55326ef5ac0da5513178252014b" translate="yes" xml:space="preserve">
          <source>Screenshot names now include their parent titles, and invalid file system characters are scrubbed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/297&quot;&gt;#297&lt;/a&gt;.</source>
          <target state="translated">スクリーンショット名に親タイトルが含まれるようになり、無効なファイルシステム文字が削除されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/297&quot;&gt;＃297を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3de5c2db3d1888e060f873a4f37189271b8ddc7d" translate="yes" xml:space="preserve">
          <source>Screenshot naming follows these rules:</source>
          <target state="translated">スクリーンショットの命名は以下のルールに従います。</target>
        </trans-unit>
        <trans-unit id="07536a95c59769edddf159e78655422df5af0207" translate="yes" xml:space="preserve">
          <source>Screenshot thumbnails are also provided with each failure to conveniently provide context.</source>
          <target state="translated">スクリーンショットのサムネイルは、便利なコンテキストを提供するために、それぞれの障害にも提供されています。</target>
        </trans-unit>
        <trans-unit id="597b6356e6cec2dc6c115de0a3154ffa0f393e1d" translate="yes" xml:space="preserve">
          <source>Screenshots</source>
          <target state="translated">Screenshots</target>
        </trans-unit>
        <trans-unit id="9f98741e85fa99077b8f932314fdce3e6d1c1d15" translate="yes" xml:space="preserve">
          <source>Screenshots and Videos</source>
          <target state="translated">スクリーンショットとビデオ</target>
        </trans-unit>
        <trans-unit id="494adcd354b07cc76d60d6f5372ad7fc6d448c10" translate="yes" xml:space="preserve">
          <source>Screenshots are now taken during each runnable that fails. Errors in tests will happen there. Errors in hooks will also happen there. Previously a screenshot would only happen after everything (including hooks) ran. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/394&quot;&gt;#394&lt;/a&gt;</source>
          <target state="translated">失敗したランナブルごとにスクリーンショットが取得されるようになりました。テストでエラーが発生します。フックのエラーもそこで発生します。以前は、スクリーンショットはすべて（フックを含む）が実行された後にのみ発生しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/394&quot;&gt;＃394の&lt;/a&gt;修正</target>
        </trans-unit>
        <trans-unit id="0ab97f0342bebfda0fea03e0ae3bff4c1596450f" translate="yes" xml:space="preserve">
          <source>Screenshots are stored in the &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;screenshotsFolder&lt;/code&gt;&lt;/a&gt; which is set to &lt;code&gt;cypress/screenshots&lt;/code&gt; by default.</source>
          <target state="translated">スクリーンショットは、デフォルトで &lt;code&gt;cypress/screenshots&lt;/code&gt; に設定されている&lt;a href=&quot;../references/configuration#Screenshots&quot;&gt; &lt;code&gt;screenshotsFolder&lt;/code&gt; に&lt;/a&gt;保存されます。</target>
        </trans-unit>
        <trans-unit id="c1c8f0cc404ae136034381e8630de66027f44e9c" translate="yes" xml:space="preserve">
          <source>Screenshots in CI</source>
          <target state="translated">CIのスクリーンショット</target>
        </trans-unit>
        <trans-unit id="09061b94cbddf2394c9bdccf4914582b2a163ece" translate="yes" xml:space="preserve">
          <source>Screenshots taken with &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; on 2x DPI are now taken at the correct full size. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1857&quot;&gt;#1857&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2018&quot;&gt;#2018&lt;/a&gt;.</source>
          <target state="translated">2x DPI で&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; を使用&lt;/a&gt;して撮ったスクリーンショットが、正しいフルサイズで撮られるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1857&quot;&gt;＃1857&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2018&quot;&gt;＃2018を&lt;/a&gt;修正しました。</target>
        </trans-unit>
        <trans-unit id="e2f18f7126bf47b116abbb97ee8045ae70da2081" translate="yes" xml:space="preserve">
          <source>Scripting 3rd party sites</source>
          <target state="translated">サードパーティサイトのスクリプト化</target>
        </trans-unit>
        <trans-unit id="e9e2da7ca085e7755cd5b3ca729d2091785a3948" translate="yes" xml:space="preserve">
          <source>Scroll an element into view.</source>
          <target state="translated">要素をビューにスクロールします。</target>
        </trans-unit>
        <trans-unit id="9b6fdea741be21ec2cb65f8296bdc034aa8d6736" translate="yes" xml:space="preserve">
          <source>Scroll down to the &lt;strong&gt;GitHub Integration&lt;/strong&gt; section.</source>
          <target state="translated">&lt;strong&gt;GitHub統合&lt;/strong&gt;セクションまでスクロールします。</target>
        </trans-unit>
        <trans-unit id="677f93d29dc81fb0d678f5977ad05b626bc45b5e" translate="yes" xml:space="preserve">
          <source>Scroll down to the &lt;strong&gt;Transfer Ownership&lt;/strong&gt; section and click &lt;strong&gt;Transfer Ownership&lt;/strong&gt;.</source>
          <target state="translated">までスクロール&lt;strong&gt;所有権移転&lt;/strong&gt;セクションをクリックして&lt;strong&gt;所有権移転を&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="72fcd5e6c335033b1f0c3b30637d0f865bcf6d39" translate="yes" xml:space="preserve">
          <source>Scroll the element into view</source>
          <target state="translated">要素をビューにスクロールします。</target>
        </trans-unit>
        <trans-unit id="334f276959546b37248f34e899b2dd39a207e864" translate="yes" xml:space="preserve">
          <source>Scroll the element into view.</source>
          <target state="translated">要素をビューにスクロールします。</target>
        </trans-unit>
        <trans-unit id="a2df33163d0fa0639958cc586399469c9f480ab7" translate="yes" xml:space="preserve">
          <source>Scroll the page if still covered by an element with fixed position.</source>
          <target state="translated">位置が固定されている要素で覆われている場合は、ページをスクロールします。</target>
        </trans-unit>
        <trans-unit id="ef829c3f27ab44a372f13aba7d5d7c5c91807538" translate="yes" xml:space="preserve">
          <source>Scroll to a specific position.</source>
          <target state="translated">特定の位置までスクロールします。</target>
        </trans-unit>
        <trans-unit id="4d1ca07831fbabfdaef6c887d2cc54378d7c5ca8" translate="yes" xml:space="preserve">
          <source>Scroll to element over 2000ms</source>
          <target state="translated">2000ms以上の要素へのスクロール</target>
        </trans-unit>
        <trans-unit id="7da02207f9b2fad02ea3326977c45b371c65602c" translate="yes" xml:space="preserve">
          <source>Scrollbar styling is no longer hijacked by Cypress.</source>
          <target state="translated">スクロールバーのスタイリングは、もはやCypressに乗っ取られることはありません。</target>
        </trans-unit>
        <trans-unit id="156b2b4d9bc708c55fb5b68f1d70e2d191678cf6" translate="yes" xml:space="preserve">
          <source>Scrolling</source>
          <target state="translated">Scrolling</target>
        </trans-unit>
        <trans-unit id="422bf6efb05d5847f1c0920f8bda64d8108f04b1" translate="yes" xml:space="preserve">
          <source>Scrolls down</source>
          <target state="translated">下にスクロール</target>
        </trans-unit>
        <trans-unit id="dce053edb29a472844c254c615a4d9a3a4d15942" translate="yes" xml:space="preserve">
          <source>Scrolls over the duration (in ms)</source>
          <target state="translated">スクロール時間(ミリ秒</target>
        </trans-unit>
        <trans-unit id="f7957246fc40124be739d3dc7865e9bc3852e439" translate="yes" xml:space="preserve">
          <source>Scrolls up</source>
          <target state="translated">上にスクロールします。</target>
        </trans-unit>
        <trans-unit id="bb7d7f8ac1b38eb8a8a2d56ba3114e63a981bbc3" translate="yes" xml:space="preserve">
          <source>Search &lt;a href=&quot;https://stackoverflow.com/questions/tagged/cypress&quot;&gt;Stack Overflow&lt;/a&gt; for relevant answers</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/tagged/cypress&quot;&gt;スタックオーバーフロー&lt;/a&gt;で関連する回答を検索</target>
        </trans-unit>
        <trans-unit id="ff0f2a49caf4721d0e3ee4dc247e8a350f0e8729" translate="yes" xml:space="preserve">
          <source>Search Cypress&amp;rsquo;s documentation to quickly find what you need.</source>
          <target state="translated">サイプレスのドキュメントを検索して、必要なものをすばやく見つけます。</target>
        </trans-unit>
        <trans-unit id="56c9b4662936e95bab96fd6c7f8932b04a11e5ad" translate="yes" xml:space="preserve">
          <source>Search existing &lt;a href=&quot;https://github.com/cypress-io/cypress/issues&quot;&gt;GitHub issues&lt;/a&gt;</source>
          <target state="translated">既存の&lt;a href=&quot;https://github.com/cypress-io/cypress/issues&quot;&gt;GitHubの問題を&lt;/a&gt;検索</target>
        </trans-unit>
        <trans-unit id="817755163f9cccab10fbb84bc19a22ff588e56a6" translate="yes" xml:space="preserve">
          <source>Search this documentation (search is in the top right) 😉</source>
          <target state="translated">このドキュメントを検索すると(検索は右上にあります)😉</target>
        </trans-unit>
        <trans-unit id="fea24aa2c05f02a003039a5b0d40bab04e92a94a" translate="yes" xml:space="preserve">
          <source>Searching in the Test Runner now filters out any non-matching folders. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1706&quot;&gt;#1706&lt;/a&gt;.</source>
          <target state="translated">テストランナーでの検索で、一致しないフォルダーが除外されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1706&quot;&gt;＃1706を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="08dd08069e8f9e6c8564a7a88affbf0c73ccfda6" translate="yes" xml:space="preserve">
          <source>Second, open the source code at the following path in any code editor. Make sure to substitute &lt;code&gt;3.3.1&lt;/code&gt; for the desired version of the Test Runner you want to edit.</source>
          <target state="translated">次に、任意のコードエディターで、次のパスにあるソースコードを開きます。編集するテストランナーの目的のバージョンを &lt;code&gt;3.3.1&lt;/code&gt; に置き換えてください。</target>
        </trans-unit>
        <trans-unit id="5a7e16a31fdff6b989b98097eec6d01ec73c953c" translate="yes" xml:space="preserve">
          <source>Second, try a smoke test that verifies that the application has all its required dependencies present on the host machine:</source>
          <target state="translated">第二に、アプリケーションがホストマシン上に必要なすべての依存関係を持っていることを確認するスモークテストを試してみてください。</target>
        </trans-unit>
        <trans-unit id="cd99df6baad74aa10c436fd4980cd88399057cb7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Record-key&quot;&gt;Record key&lt;/a&gt; for a full description of how the record keys are used.</source>
          <target state="translated">&lt;a href=&quot;#Record-key&quot;&gt;レコードキーの&lt;/a&gt;使用方法の詳細については、レコードキーを参照してください。</target>
        </trans-unit>
        <trans-unit id="c3cef162aad3648a42d1a442a191eaee95f18f2b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../api/commands/server#Options&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt; options&lt;/a&gt; and &lt;a href=&quot;../../api/commands/route#Options&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt; options&lt;/a&gt; for instructions on how to stub responses.</source>
          <target state="translated">応答をスタブする方法については、&lt;a href=&quot;../../api/commands/server#Options&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; オプション&lt;/a&gt;および&lt;a href=&quot;../../api/commands/route#Options&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; オプション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b1b290f56c8da1aa020d6c2ee9a6813a98313062" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../references/configuration#Overriding-Options&quot;&gt;Configuration: Overriding Options&lt;/a&gt; for other examples of overriding this option. We do not recommend changing the command timeout globally. Instead, pass the inividual command&amp;rsquo;s &lt;code&gt;{ timeout: ms }&lt;/code&gt; option to retry for a different period of time. For example:</source>
          <target state="translated">このオプションをオーバーライドする他の例については、&lt;a href=&quot;../references/configuration#Overriding-Options&quot;&gt;構成：オプションのオーバーライドを&lt;/a&gt;参照してください。コマンドタイムアウトをグローバルに変更することはお勧めしません。代わりに、inividualコマンドの &lt;code&gt;{ timeout: ms }&lt;/code&gt; オプションを渡して、別の期間再試行します。例えば：</target>
        </trans-unit>
        <trans-unit id="eac2998892a531dfb34d088ec2af15d188cc02bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://download.cypress.io/desktop.json&quot;&gt;https://download.cypress.io/desktop.json&lt;/a&gt; for all available platforms.</source>
          <target state="translated">利用可能なすべてのプラットフォームについては、&lt;a href=&quot;https://download.cypress.io/desktop.json&quot;&gt;https：//download.cypress.io/desktop.json&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="50e621e02145bcc5a0aba073adad2fee9e929ebb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#fundamentals&quot;&gt;Adding Custom Commands&lt;/a&gt; example recipe.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#fundamentals&quot;&gt;カスタムコマンドの追加の&lt;/a&gt;サンプルレシピを参照してください。</target>
        </trans-unit>
        <trans-unit id="6cdfab65500fa4e6cec0ae4121890d1327aed97b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2284&quot;&gt;#2284&lt;/a&gt; for implementation.</source>
          <target state="translated">実装については&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2284&quot;&gt;＃2284&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8dd61cabb46aa59767270d0091d9d9792a9dc7e9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://glebbahmutov.com/blog/set-flag-to-start-tests/&quot;&gt;&amp;ldquo;Set flag to start tests&amp;rdquo;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;https://glebbahmutov.com/blog/set-flag-to-start-tests/&quot;&gt;「フラグを設定してテストを開始する」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="778daa6a334e36fffb7c87f98735088d2e6f7a76" translate="yes" xml:space="preserve">
          <source>See all currently set environment variables</source>
          <target state="translated">現在設定されているすべての環境変数を見る</target>
        </trans-unit>
        <trans-unit id="6f10d31597bf2d9d8eb5ae4be6d2d01b9bc6556b" translate="yes" xml:space="preserve">
          <source>See all the currently set environment variables</source>
          <target state="translated">現在設定されているすべての環境変数を見る</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">参照:</target>
        </trans-unit>
        <trans-unit id="9d9a0c7ea4c480f3710d75fad9d4274408296c88" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;Continuous Integration - Caching&lt;/a&gt; section in the documentation.</source>
          <target state="translated">ドキュメントの&lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;継続的インテグレーション-キャッシュ&lt;/a&gt;セクションもご覧ください。</target>
        </trans-unit>
        <trans-unit id="1a0ab9f590cf0a84d90cf1f29a5fcc3bc1e3cec6" translate="yes" xml:space="preserve">
          <source>See billing and usage information</source>
          <target state="translated">課金・利用情報を見る</target>
        </trans-unit>
        <trans-unit id="7df34626b15e2012e06bf53170fcb07a60f7d69a" translate="yes" xml:space="preserve">
          <source>See code coverage summary</source>
          <target state="translated">コードカバレッジのまとめを見る</target>
        </trans-unit>
        <trans-unit id="3856fc66ac640982dc9e0980b07cda8dbbb73245" translate="yes" xml:space="preserve">
          <source>See how fast your spec files ran within CI including whether they were run in parallel.</source>
          <target state="translated">スペックファイルが並列実行されたかどうかも含めて、CI内でどれくらいの速度で実行されたかを確認できます。</target>
        </trans-unit>
        <trans-unit id="fcff1baac0ff9ecd33cbccd45accaed784f45049" translate="yes" xml:space="preserve">
          <source>See it in action!</source>
          <target state="translated">実際に見てみてください!</target>
        </trans-unit>
        <trans-unit id="b5d93e1cf7fb465ac5ce42bf78d2955c0fbaa1e2" translate="yes" xml:space="preserve">
          <source>See our &lt;a href=&quot;../guides/web-security#Limitations&quot;&gt;Web Security&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;../guides/web-security#Limitations&quot;&gt;Webセキュリティの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="dbbbf5b85327608b030bcffa3fb0998b98720ebe" translate="yes" xml:space="preserve">
          <source>See our &lt;a href=&quot;github-integration&quot;&gt;GitHub Integration guide&lt;/a&gt; to learn more.</source>
          <target state="translated">詳細については、&lt;a href=&quot;github-integration&quot;&gt;GitHub統合ガイド&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="172ffea45b4e15f34c00c653d28cf9653f6d2713" translate="yes" xml:space="preserve">
          <source>See our &lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;examples&lt;/a&gt; for additional information on our maintained images and configurations on several CI providers.</source>
          <target state="translated">いくつかのCIプロバイダーで維持されているイメージと構成の詳細については、&lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;例&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2ba4daa62bc200cfc2f1e20ac880f138a2c16378" translate="yes" xml:space="preserve">
          <source>See record keys of projects</source>
          <target state="translated">プロジェクトのレコードキーを見る</target>
        </trans-unit>
        <trans-unit id="4db2b8ca100690e0a2de8a6883ce30838589f0e5" translate="yes" xml:space="preserve">
          <source>See related groupings of tests.</source>
          <target state="translated">テストの関連グループを参照してください。</target>
        </trans-unit>
        <trans-unit id="bc3141d342d9843cd7d97110bf785222f269de11" translate="yes" xml:space="preserve">
          <source>See retry-ability examples in the &lt;a href=&quot;https://glebbahmutov.com/blog/cypress-should-callback/&quot;&gt;Cypress should callback&lt;/a&gt; blog post.</source>
          <target state="translated">&lt;a href=&quot;https://glebbahmutov.com/blog/cypress-should-callback/&quot;&gt;サイプレスのコールバック&lt;/a&gt;ブログ投稿の再試行機能の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="8dc7d95b86e8d062748a9205581c45a5a69ae34a" translate="yes" xml:space="preserve">
          <source>See special &lt;code&gt;page events&lt;/code&gt; that happened.</source>
          <target state="translated">&lt;code&gt;page events&lt;/code&gt; した特別ページのイベントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="9007264c8d5caa4933c394048cc3113027aae2be" translate="yes" xml:space="preserve">
          <source>See test recordings of private projects</source>
          <target state="translated">民間プロジェクトのテスト録画を見る</target>
        </trans-unit>
        <trans-unit id="8bdc0d1c2973ddc62ea4b001bba47c9fd8f8f0db" translate="yes" xml:space="preserve">
          <source>See test run results</source>
          <target state="translated">テスト走行結果を見る</target>
        </trans-unit>
        <trans-unit id="87e054693de85e2729457066d27c2f9ebda68f15" translate="yes" xml:space="preserve">
          <source>See tests runs in the Test Runner</source>
          <target state="translated">テストランナーで実行されたテストを見る</target>
        </trans-unit>
        <trans-unit id="8412ca33896c05b7376435338674ebfcc013478a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#cypress-intellisense&quot;&gt;&lt;code&gt;cypress-example-todomvc&lt;/code&gt;&lt;/a&gt; repository for a working example.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#cypress-intellisense&quot;&gt; &lt;code&gt;cypress-example-todomvc&lt;/code&gt; &lt;/a&gt;については、cypress-example-todomvcリポジトリを参照してください。</target>
        </trans-unit>
        <trans-unit id="17e7fda7a674c8f57e3a65f21db4ab6c34bd28f1" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://glebbahmutov.com/blog/set-flag-to-start-tests/&quot;&gt;Set flag to start tests&lt;/a&gt; blog for the full example.</source>
          <target state="translated">完全な例については、&lt;a href=&quot;https://glebbahmutov.com/blog/set-flag-to-start-tests/&quot;&gt;テスト&lt;/a&gt;ブログを開始するSetフラグを参照してください。</target>
        </trans-unit>
        <trans-unit id="7dbf936b1fb8623a4b279afe18a9f74129878b7e" translate="yes" xml:space="preserve">
          <source>See the Command Line guide for more information about the &lt;code&gt;--browser&lt;/code&gt; arguments</source>
          <target state="translated">&lt;code&gt;--browser&lt;/code&gt; 引数の詳細については、コマンドラインガイドを参照してください</target>
        </trans-unit>
        <trans-unit id="23e9f10f49b45fcd21e7116f242f24580325b972" translate="yes" xml:space="preserve">
          <source>See the excellent advice on &lt;a href=&quot;https://basarat.gitbooks.io/typescript/docs/testing/cypress.html&quot;&gt;setting Cypress using TypeScript&lt;/a&gt; in the &lt;a href=&quot;https://basarat.gitbooks.io/typescript/content/&quot;&gt;TypeScript Deep Dive&lt;/a&gt; e-book by &lt;a href=&quot;https://twitter.com/basarat&quot;&gt;Basarat Syed&lt;/a&gt;. Take a look at &lt;a href=&quot;https://www.youtube.com/watch?v=1Vr1cAN_CLA&quot;&gt;this video&lt;/a&gt; Basarat has recorded and the accompanying repo &lt;a href=&quot;https://github.com/basarat/cypress-ts&quot;&gt;basarat/cypress-ts&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://twitter.com/basarat&quot;&gt;Basarat Syedに&lt;/a&gt;よる&lt;a href=&quot;https://basarat.gitbooks.io/typescript/content/&quot;&gt;TypeScript Deep Dive&lt;/a&gt;電子書籍でTypeScript &lt;a href=&quot;https://basarat.gitbooks.io/typescript/docs/testing/cypress.html&quot;&gt;を使用&lt;/a&gt;してサイプレスを設定することに関する優れたアドバイスを参照してください。Basaratが記録した&lt;a href=&quot;https://www.youtube.com/watch?v=1Vr1cAN_CLA&quot;&gt;このビデオ&lt;/a&gt;と、それに付随するrepo &lt;a href=&quot;https://github.com/basarat/cypress-ts&quot;&gt;basarat / cypress-tsをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6aa344d14070dfa73d7cab46b844e692b88a73d" translate="yes" xml:space="preserve">
          <source>See the number of failed, passing, pending and skipped tests.</source>
          <target state="translated">不合格、合格、保留、スキップテストの数を確認します。</target>
        </trans-unit>
        <trans-unit id="b87b1b5f2e5e707b0051b6300fa3b27bf2915b56" translate="yes" xml:space="preserve">
          <source>See the number of failed, pending and passing tests.</source>
          <target state="translated">不合格、保留、合格テストの数を見る。</target>
        </trans-unit>
        <trans-unit id="10cc3368d3a3133192a4b7f17767a1ec81c7392a" translate="yes" xml:space="preserve">
          <source>See usage details for each organization.</source>
          <target state="translated">各組織の使用方法の詳細を参照してください。</target>
        </trans-unit>
        <trans-unit id="429c456eed488e2c0fb11dbae2b3fb595d632d33" translate="yes" xml:space="preserve">
          <source>See user requests to join organization</source>
          <target state="translated">組織に参加するためのユーザーのリクエストを参照してください。</target>
        </trans-unit>
        <trans-unit id="f8b40acb7df222c05ed8723ee839e936e4c5d623" translate="yes" xml:space="preserve">
          <source>See users invited to organization</source>
          <target state="translated">組織に招待されたユーザーを見る</target>
        </trans-unit>
        <trans-unit id="088b7605595841ba9b46ece593cdaa9df0660d9c" translate="yes" xml:space="preserve">
          <source>See what element matches a string of text.</source>
          <target state="translated">どの要素がテキストの文字列にマッチするかを確認します。</target>
        </trans-unit>
        <trans-unit id="08223391444b902baef87c23f937f3d88d402be6" translate="yes" xml:space="preserve">
          <source>See what elements match a given selector.</source>
          <target state="translated">与えられたセレクタにマッチする要素を確認します。</target>
        </trans-unit>
        <trans-unit id="520d8b96985ab0f272e0c8854cd12ae417b03841" translate="yes" xml:space="preserve">
          <source>See which machines ran each test when &lt;a href=&quot;parallelization&quot;&gt;parallelized&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;parallelization&quot;&gt;並列&lt;/a&gt;化したときに各テストを実行したマシンを確認します。</target>
        </trans-unit>
        <trans-unit id="eea7fe90d05b6abd5c860e80da48cb20f5f4558f" translate="yes" xml:space="preserve">
          <source>Seed a database</source>
          <target state="translated">データベースをシードする</target>
        </trans-unit>
        <trans-unit id="347134b88e0097bf57dfeffca50ba687ce50db27" translate="yes" xml:space="preserve">
          <source>Seed the database and assert it was successful</source>
          <target state="translated">データベースに種を蒔き、成功したと断言する</target>
        </trans-unit>
        <trans-unit id="d76360a27ba51281f5ab9ce32644cdb52354016f" translate="yes" xml:space="preserve">
          <source>Seeded KitchenSink tests no longer fail. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1812&quot;&gt;#1812&lt;/a&gt;.</source>
          <target state="translated">シードされたKitchenSinkテストは失敗しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1812&quot;&gt;＃1812を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f7f0de3342633ebfb787c97331b97969e9a39716" translate="yes" xml:space="preserve">
          <source>Seeding data</source>
          <target state="translated">播種データ</target>
        </trans-unit>
        <trans-unit id="17758a44887967d68d490d90d757325492ffcb06" translate="yes" xml:space="preserve">
          <source>Seeding your test database</source>
          <target state="translated">テストデータベースの種付け</target>
        </trans-unit>
        <trans-unit id="ec9fc83dbb9c924145888d0100fa6bbad63614bf" translate="yes" xml:space="preserve">
          <source>Seeding your test database.</source>
          <target state="translated">テストデータベースに種を蒔きます。</target>
        </trans-unit>
        <trans-unit id="06776d35d3bed13ce3401c42ea52cb9ea505cbbb" translate="yes" xml:space="preserve">
          <source>Seeing IntelliSense in your spec files is as easy as adding a single special comment line. Read about &lt;a href=&quot;../tooling/intelligent-code-completion#Triple-slash-directives&quot;&gt;Intelligent Code Completion&lt;/a&gt;.</source>
          <target state="translated">仕様ファイルでIntelliSenseを表示するのは、1つの特別なコメント行を追加するのと同じくらい簡単です。&lt;a href=&quot;../tooling/intelligent-code-completion#Triple-slash-directives&quot;&gt;Intelligent Code Completion&lt;/a&gt;についてお読みください。</target>
        </trans-unit>
        <trans-unit id="b49fb1f01f652c6897280cae0610c18a215877db" translate="yes" xml:space="preserve">
          <source>Select a GitHub repository to associated with the project.</source>
          <target state="translated">プロジェクトに関連付けるGitHubリポジトリを選択します。</target>
        </trans-unit>
        <trans-unit id="cbadf1c79ded61f983a05eb52bdde18d7d2438b1" translate="yes" xml:space="preserve">
          <source>Select all radios</source>
          <target state="translated">すべてのラジオを選択</target>
        </trans-unit>
        <trans-unit id="c1d555558a6dc6c62661cc9989c5cd6f8bc32b11" translate="yes" xml:space="preserve">
          <source>Select an &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; within a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">選択し &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 内 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9da85525bf1f2c1e1533e9468f5086223b802c42" translate="yes" xml:space="preserve">
          <source>Select multiple options</source>
          <target state="translated">複数のオプションを選択</target>
        </trans-unit>
        <trans-unit id="1f1f3c3820b69b11b6931c15ba5acf7c10e07e45" translate="yes" xml:space="preserve">
          <source>Select the &lt;code&gt;option&lt;/code&gt; with the text &lt;code&gt;apples&lt;/code&gt;</source>
          <target state="translated">テキスト &lt;code&gt;apples&lt;/code&gt; &lt;code&gt;option&lt;/code&gt; を選択します</target>
        </trans-unit>
        <trans-unit id="0d058ab3b1543f34055930f8d3cfbc5457f1d329" translate="yes" xml:space="preserve">
          <source>Select the &lt;code&gt;option&lt;/code&gt; with the value &amp;ldquo;456&amp;rdquo;</source>
          <target state="translated">「456」という値の &lt;code&gt;option&lt;/code&gt; を選択します</target>
        </trans-unit>
        <trans-unit id="4988710ddeff6c08378c18b6d889ac9d6736f10a" translate="yes" xml:space="preserve">
          <source>Select the desired GitHub organization or account to integrate with your Cypress Dashboard organization.</source>
          <target state="translated">目的のGitHub組織またはアカウントを選択して、Cypress Dashboard組織と統合します。</target>
        </trans-unit>
        <trans-unit id="c0e40a6e78136d09248fb4d0f9a69a5ed9869f4d" translate="yes" xml:space="preserve">
          <source>Select the options with the texts &amp;ldquo;apples&amp;rdquo; and &amp;ldquo;bananas&amp;rdquo;</source>
          <target state="translated">「リンゴ」と「バナナ」のテキストが付いたオプションを選択します</target>
        </trans-unit>
        <trans-unit id="7f0844c77170c830c79e619b568f9bbc25953c60" translate="yes" xml:space="preserve">
          <source>Select the options with the values &amp;ldquo;456&amp;rdquo; and &amp;ldquo;457&amp;rdquo;</source>
          <target state="translated">「456」と「457」の値を持つオプションを選択します</target>
        </trans-unit>
        <trans-unit id="bbddf916312443f3ce40e6208980ec4ab839f182" translate="yes" xml:space="preserve">
          <source>Select the organization you wish to integrate with a GitHub account or GitHub organization.</source>
          <target state="translated">GitHubアカウントやGitHub組織と統合したい組織を選択します。</target>
        </trans-unit>
        <trans-unit id="6869297de7de5db497b1fd65684c7f488db70b47" translate="yes" xml:space="preserve">
          <source>Select the project you want to change access to.</source>
          <target state="translated">アクセス権を変更したいプロジェクトを選択します。</target>
        </trans-unit>
        <trans-unit id="aaaf9d85b73dac8cb6fe9eba5be184f865a95278" translate="yes" xml:space="preserve">
          <source>Select the project you want to remove.</source>
          <target state="translated">削除するプロジェクトを選択します。</target>
        </trans-unit>
        <trans-unit id="6b1ef19a66a676079ede415afbdbb4406ccdf061" translate="yes" xml:space="preserve">
          <source>Select the project you wish to integrate with a GitHub repository.</source>
          <target state="translated">GitHub リポジトリと統合したいプロジェクトを選択します。</target>
        </trans-unit>
        <trans-unit id="9d6716dc7500f582472f5c4d4207b643ff756869" translate="yes" xml:space="preserve">
          <source>Select the project you wish to transfer.</source>
          <target state="translated">転送するプロジェクトを選択します。</target>
        </trans-unit>
        <trans-unit id="ba8bc8664d70efea31d07c0e798c5a81e0a9ae5c" translate="yes" xml:space="preserve">
          <source>Select the radio with the value of &amp;lsquo;US&amp;rsquo;</source>
          <target state="translated">「US」の値を持つラジオを選択します</target>
        </trans-unit>
        <trans-unit id="63a15ff62114b6703dce3a37e485312819457d94" translate="yes" xml:space="preserve">
          <source>Select the user or organization, then click &lt;strong&gt;Transfer&lt;/strong&gt;.</source>
          <target state="translated">ユーザーまたは組織を選択し、[ &lt;strong&gt;転送&lt;/strong&gt; ]をクリックします。</target>
        </trans-unit>
        <trans-unit id="a87ded222f5247805bcafa863bcb5139d83f98d4" translate="yes" xml:space="preserve">
          <source>Selecting &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; inside &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; now works with &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/367&quot;&gt;#367&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 内で&amp;lt;option&amp;gt;を選択すると、&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; で機能するようになりました&lt;/a&gt;。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/367&quot;&gt;＃367を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7bd81cf8431bbb2960e94aabeae184064fc0b96c" translate="yes" xml:space="preserve">
          <source>Selecting Elements</source>
          <target state="translated">要素の選択</target>
        </trans-unit>
        <trans-unit id="b240d04328a96aac53d166b5299cca81675589d4" translate="yes" xml:space="preserve">
          <source>Selector</source>
          <target state="translated">Selector</target>
        </trans-unit>
        <trans-unit id="ee64cf08276699573216fe2386d117247ad340e9" translate="yes" xml:space="preserve">
          <source>Selector (the argument we used)</source>
          <target state="translated">セレクタ(使用した引数</target>
        </trans-unit>
        <trans-unit id="b97982b6dc806d410b300d99b57fa5e00ae2e09d" translate="yes" xml:space="preserve">
          <source>Selector Playground</source>
          <target state="translated">セレクターの遊び場</target>
        </trans-unit>
        <trans-unit id="6a4cb20293169d291d5a172c97759c3c0696fa40" translate="yes" xml:space="preserve">
          <source>Selector Priority</source>
          <target state="translated">セレクタの優先順位</target>
        </trans-unit>
        <trans-unit id="3ddb2db780f546dceb3e5de02eeb5eb9551dc25d" translate="yes" xml:space="preserve">
          <source>SelectorPlayground</source>
          <target state="translated">SelectorPlayground</target>
        </trans-unit>
        <trans-unit id="403e6be45e48fd740a70dbba27eb23906589ee32" translate="yes" xml:space="preserve">
          <source>Selects all text by creating a &lt;code&gt;selection range&lt;/code&gt;</source>
          <target state="translated">選択 &lt;code&gt;selection range&lt;/code&gt; 作成してすべてのテキストを選択します</target>
        </trans-unit>
        <trans-unit id="9cb881ab1cd188ae66aa99c3dc8228baeb938bc3" translate="yes" xml:space="preserve">
          <source>Semaphore</source>
          <target state="translated">Semaphore</target>
        </trans-unit>
        <trans-unit id="9ce20c9ec146b844124fc40b60c696ba6b9ff306" translate="yes" xml:space="preserve">
          <source>Send 404s on unmatched requests</source>
          <target state="translated">マッチングされていないリクエストに404を送信する</target>
        </trans-unit>
        <trans-unit id="5a8fbaee7300bcc6230b91a00a899cbeb404af9b" translate="yes" xml:space="preserve">
          <source>Send a &lt;code&gt;DELETE&lt;/code&gt; request</source>
          <target state="translated">&lt;code&gt;DELETE&lt;/code&gt; リクエストを送信する</target>
        </trans-unit>
        <trans-unit id="6df4d6b024375b95885139bfceea2c4bc84724ae" translate="yes" xml:space="preserve">
          <source>Send a &lt;code&gt;POST&lt;/code&gt; request with a JSON body</source>
          <target state="translated">JSONボディを含む &lt;code&gt;POST&lt;/code&gt; リクエストを送信する</target>
        </trans-unit>
        <trans-unit id="06415646d9ef0a5d9ed9286f09e3b75938e29ad4" translate="yes" xml:space="preserve">
          <source>Send a notification about failing tests with included screenshot images</source>
          <target state="translated">スクリーンショット画像を添付したテストの失敗に関する通知を送信する</target>
        </trans-unit>
        <trans-unit id="c6986f2421fa908f208d352f337003ed51195d37" translate="yes" xml:space="preserve">
          <source>Send specific arguments to the function</source>
          <target state="translated">関数に特定の引数を送る</target>
        </trans-unit>
        <trans-unit id="e4b3088e9a46bcf7344bb49ec13780c9ef15c3a6" translate="yes" xml:space="preserve">
          <source>Send valid http response errors, and display new lines correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/218&quot;&gt;#218&lt;/a&gt;.</source>
          <target state="translated">有効なhttp応答エラーを送信し、改行を正しく表示します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/218&quot;&gt;＃218を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e0ed841cb836850441fbdf65d083422ccd485293" translate="yes" xml:space="preserve">
          <source>Sending &amp;lsquo;rerun&amp;rsquo; event</source>
          <target state="translated">「再実行」イベントを送信する</target>
        </trans-unit>
        <trans-unit id="ee2e84812412b6301da36d4ee77843ad5409b5ee" translate="yes" xml:space="preserve">
          <source>Sending &lt;code&gt;{force: true}&lt;/code&gt; to &lt;code&gt;Action&lt;/code&gt; commands will no longer error out if the element is not visible. Forcing the action to take place now correctly removes all error checking prior to issuing the action and events.</source>
          <target state="translated">&lt;code&gt;{force: true}&lt;/code&gt; を &lt;code&gt;Action&lt;/code&gt; コマンドに送信しても、要素が表示されていない場合にエラーが発生しなくなりました。アクションを強制的に実行すると、アクションとイベントを発行する前にすべてのエラーチェックが正しく削除されるようになりました。</target>
        </trans-unit>
        <trans-unit id="5c8f4e0e1a2281faf562976c2410f76c3d8fbc95" translate="yes" xml:space="preserve">
          <source>Sequence</source>
          <target state="translated">Sequence</target>
        </trans-unit>
        <trans-unit id="9ad416238b46c447458b0318a6e74dcc3a4c7607" translate="yes" xml:space="preserve">
          <source>Serially click multiple elements</source>
          <target state="translated">複数の要素を連続的にクリックする</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">Server</target>
        </trans-unit>
        <trans-unit id="4d8898bf73187321fc737f753e8d8bedbdf86b7f" translate="yes" xml:space="preserve">
          <source>Server instrument now correctly displays the number of responses their corresponding routes have had.</source>
          <target state="translated">サーバー機器は、対応するルートが持っていた応答数を正しく表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="7b269a46ea58fd5bde5904029e000919ed440847" translate="yes" xml:space="preserve">
          <source>Server sent events now &lt;em&gt;finally&lt;/em&gt; work correctly in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1440&quot;&gt;#1440&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1111&quot;&gt;#1111&lt;/a&gt;.</source>
          <target state="translated">サーバー送信されたイベントは、今&lt;em&gt;ようやく&lt;/em&gt;サイプレスでは正しく動作します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1440&quot;&gt;＃1440&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1111&quot;&gt;＃1111を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ab5ab1acf5db0758245097e8fa3ad6f910f353a0" translate="yes" xml:space="preserve">
          <source>Server side rendering</source>
          <target state="translated">サーバーサイドレンダリング</target>
        </trans-unit>
        <trans-unit id="f0255a1bec9e70fc48c33ccf9257dd81f531f7bb" translate="yes" xml:space="preserve">
          <source>Server side rendering with no asynchronous JavaScript.</source>
          <target state="translated">非同期JavaScriptを使用しないサーバーサイドレンダリング。</target>
        </trans-unit>
        <trans-unit id="3099f0eeb83cf75985afe65abc98fc86fd2cea49" translate="yes" xml:space="preserve">
          <source>Server&amp;rsquo;s that send &lt;code&gt;Content-Encoding: br&lt;/code&gt; no longer cause Cypress to fail due to incorrect decoding. Cypress now strips encodings it cannot accept. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/535&quot;&gt;#535&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Content-Encoding: br&lt;/code&gt; を送信するサーバー：brは、正しくないデコードが原因でサイプレスが失敗することはなくなりました。サイプレスは、受け入れられないエンコーディングを削除するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/535&quot;&gt;＃535を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a0e8500b777f6fa2a0bb6498d04b4001b88133dd" translate="yes" xml:space="preserve">
          <source>Server-side redirects are now completely transparently handled and supported.</source>
          <target state="translated">サーバーサイドのリダイレクトが完全に透過的に処理され、サポートされるようになりました。</target>
        </trans-unit>
        <trans-unit id="afcd59f1fbd90fdc50c82fa27a0e0e6a4017ada5" translate="yes" xml:space="preserve">
          <source>Servers can now be disabled in the middle of a test. Previously once a server was started all XHR&amp;rsquo;s would be stubbed.</source>
          <target state="translated">テストの途中でサーバーを無効にできるようになりました。以前は、サーバーが起動すると、すべてのXHRがスタブされていました。</target>
        </trans-unit>
        <trans-unit id="67cc69de46dad62a95ca6c479469028a4a8e003b" translate="yes" xml:space="preserve">
          <source>Session id</source>
          <target state="translated">セッションID</target>
        </trans-unit>
        <trans-unit id="d64b7eb8f2f9347f3dab6c7674e6922eb3dc9b6b" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;force404&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;force404&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="46708b11f51885cfeafd0806673bbcc500ee524b" translate="yes" xml:space="preserve">
          <source>Set a &lt;code&gt;debugger&lt;/code&gt; and log what the previous command yields.</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; を設定し、前のコマンドの結果をログに記録します。</target>
        </trans-unit>
        <trans-unit id="149bdf7c6cc4f94dbef94309191e014deb7a765c" translate="yes" xml:space="preserve">
          <source>Set a browser cookie.</source>
          <target state="translated">ブラウザのクッキーを設定します。</target>
        </trans-unit>
        <trans-unit id="35ea43cff573905ac68baaaf5d8a228b7161e7d2" translate="yes" xml:space="preserve">
          <source>Set a cookie</source>
          <target state="translated">クッキーを設定する</target>
        </trans-unit>
        <trans-unit id="10278ad8376b85566427af384760d1f76efaa6b8" translate="yes" xml:space="preserve">
          <source>Set a custom function for determining the selector for an element. Falls back to default behavior if returning a falsey value.</source>
          <target state="translated">要素のセレクタを決定するためのカスタム関数を設定します。falsey値を返す場合はデフォルトの動作にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="b2f48d8af09d1a3a7bf01432f4808f9848add367" translate="yes" xml:space="preserve">
          <source>Set a custom request header for all requests</source>
          <target state="translated">すべてのリクエストにカスタムリクエストヘッダーを設定する</target>
        </trans-unit>
        <trans-unit id="9430863d02e07eefaff6c5f699b48fa60011e5c0" translate="yes" xml:space="preserve">
          <source>Set a proxy on Linux or macOS</source>
          <target state="translated">LinuxやmacOSでプロキシを設定する</target>
        </trans-unit>
        <trans-unit id="8878cde4d5b3f461ff93ffb9085dbddb71276b12" translate="yes" xml:space="preserve">
          <source>Set a proxy on Windows</source>
          <target state="translated">Windowsでプロキシを設定する</target>
        </trans-unit>
        <trans-unit id="11a184576b60236b0cb67ab3b31fbcffdc442079" translate="yes" xml:space="preserve">
          <source>Set a route by returning an object literal from a callback function. Functions that return a &lt;code&gt;Promise&lt;/code&gt; will automatically be awaited.</source>
          <target state="translated">コールバック関数からオブジェクトリテラルを返すことにより、ルートを設定します。 &lt;code&gt;Promise&lt;/code&gt; を返す関数は自動的に待機します。</target>
        </trans-unit>
        <trans-unit id="c20bf8c6beb7df3664e611ea734b19c71edbb531" translate="yes" xml:space="preserve">
          <source>Set a route matching the specific URL.</source>
          <target state="translated">特定のURLにマッチするルートを設定します。</target>
        </trans-unit>
        <trans-unit id="30cb15144fadb0c3e60ae6c5585459cde4253177" translate="yes" xml:space="preserve">
          <source>Set a token to &lt;code&gt;localStorage&lt;/code&gt; for login during Single Sign On</source>
          <target state="translated">シングルサインオン中にログインするためにトークンを &lt;code&gt;localStorage&lt;/code&gt; に設定する</target>
        </trans-unit>
        <trans-unit id="2eda6055885658fccb0a27f4ea7e00de718e1555" translate="yes" xml:space="preserve">
          <source>Set an environment variable for current session</source>
          <target state="translated">現在のセッションの環境変数を設定する</target>
        </trans-unit>
        <trans-unit id="8e5bf641893aaddb16c106d3f27cddc5390006ba" translate="yes" xml:space="preserve">
          <source>Set an environment variable for the current session</source>
          <target state="translated">現在のセッションの環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="908fc0452b1967a20fa0b0c5a63ac43ef41420a2" translate="yes" xml:space="preserve">
          <source>Set an environment variable within your plugins.</source>
          <target state="translated">プラグイン内の環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="e167298af9995424b7871633c2d95ddb9ca31485" translate="yes" xml:space="preserve">
          <source>Set defaults for all cookies, such as whitelisting a set of cookies to bypass being cleared before each test.</source>
          <target state="translated">各テストの前にクリアされないようにクッキーのセットをホワイトリスト化するなど、すべてのクッキーのデフォルトを設定します。</target>
        </trans-unit>
        <trans-unit id="fd44001805ad671f3e02b23affd80387d4f3ca2f" translate="yes" xml:space="preserve">
          <source>Set environment variable globally for all future sessions</source>
          <target state="translated">今後のすべてのセッションで環境変数をグローバルに設定する</target>
        </trans-unit>
        <trans-unit id="d700c1a92be0d0e795569c7dfe49073847694382" translate="yes" xml:space="preserve">
          <source>Set flag to start tests</source>
          <target state="translated">テストを開始するためのフラグを設定します。</target>
        </trans-unit>
        <trans-unit id="d5b1733f2a55d274f8289946f788592033b4cdc2" translate="yes" xml:space="preserve">
          <source>Set global default cookies</source>
          <target state="translated">グローバルデフォルトのクッキーを設定します。</target>
        </trans-unit>
        <trans-unit id="896a7edb9ba53b5020738a68a6a085c20cd2844b" translate="yes" xml:space="preserve">
          <source>Set in `cypress.json`</source>
          <target state="translated">cypress.json`で設定する。</target>
        </trans-unit>
        <trans-unit id="5958c1b1e5b576ac25414dc99aea105044eec108" translate="yes" xml:space="preserve">
          <source>Set multiple configuration options with an object literal.</source>
          <target state="translated">オブジェクトリテラルで複数の設定オプションを設定します。</target>
        </trans-unit>
        <trans-unit id="5c1353b58ca7c25d6d96081031242cee5c8c3589" translate="yes" xml:space="preserve">
          <source>Set multiple environment variables with an object literal.</source>
          <target state="translated">オブジェクトリテラルで複数の環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="66cd8dc201e67b64d85b03b770699e16f502bfdc" translate="yes" xml:space="preserve">
          <source>Set multiple values by passing an object literal</source>
          <target state="translated">オブジェクトリテラルを渡して複数の値を設定する</target>
        </trans-unit>
        <trans-unit id="0915ec3458234cab04b8892db98a323a9377d13a" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;../references/configuration#Global&quot;&gt;&lt;code&gt;watchForFileChanges&lt;/code&gt;&lt;/a&gt; configuration property to &lt;code&gt;false&lt;/code&gt; to disable file watching.</source>
          <target state="translated">ファイル監視を無効にするには、&lt;a href=&quot;../references/configuration#Global&quot;&gt; &lt;code&gt;watchForFileChanges&lt;/code&gt; &lt;/a&gt;構成プロパティを &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="b189852617ea89de6af309e192eea99925d39014" translate="yes" xml:space="preserve">
          <source>Set the routing options using a callback function</source>
          <target state="translated">コールバック機能を使ってルーティングオプションを設定する</target>
        </trans-unit>
        <trans-unit id="e5f5f37d193dddcde1f032526914ee46f94d622e" translate="yes" xml:space="preserve">
          <source>Set the selector priority to favor IDs, then classes, then attributes.</source>
          <target state="translated">セレクタの優先順位を、IDを優先するように設定し、次にクラスを優先し、次に属性を優先するように設定します。</target>
        </trans-unit>
        <trans-unit id="99bac98062472174cbf607fd0d487c841a374b6c" translate="yes" xml:space="preserve">
          <source>Set up &lt;a href=&quot;../tooling/intelligent-code-completion&quot;&gt;intelligent code completion&lt;/a&gt; for Cypress commands and assertions.</source>
          <target state="translated">サイプレスのコマンドとアサーションの&lt;a href=&quot;../tooling/intelligent-code-completion&quot;&gt;インテリジェントなコード補完&lt;/a&gt;をセットアップします。</target>
        </trans-unit>
        <trans-unit id="b70586bc0dc47adc004399f3e64d18e89194b7d9" translate="yes" xml:space="preserve">
          <source>Set up a project to record in the Dashboard</source>
          <target state="translated">ダッシュボードに記録するプロジェクトを設定する</target>
        </trans-unit>
        <trans-unit id="d68405ff69461b32a8f3b2ca8b5fee337a808304" translate="yes" xml:space="preserve">
          <source>Set up a project to record:</source>
          <target state="translated">記録するプロジェクトを設定します。</target>
        </trans-unit>
        <trans-unit id="11aaca41e5268be23ce166d1e36a2aa780e11930" translate="yes" xml:space="preserve">
          <source>Set up in your Dev Environment</source>
          <target state="translated">開発環境でのセットアップ</target>
        </trans-unit>
        <trans-unit id="3e9dab615d727b1228bbaa57bd9d3cb8db40930c" translate="yes" xml:space="preserve">
          <source>Set up in your Dev Environment:</source>
          <target state="translated">開発環境で設定します。</target>
        </trans-unit>
        <trans-unit id="0c66fc0e49d6958e3993ffd220eddee66b59cf45" translate="yes" xml:space="preserve">
          <source>Set up tests</source>
          <target state="translated">テストの設定</target>
        </trans-unit>
        <trans-unit id="82a50032527fa3c476b7bd437a78c51bfc91c864" translate="yes" xml:space="preserve">
          <source>Set up the application state.</source>
          <target state="translated">アプリケーションの状態を設定します。</target>
        </trans-unit>
        <trans-unit id="2d47db0eb28f4880e385a90647a03c184f56c69d" translate="yes" xml:space="preserve">
          <source>Set up your dev environment</source>
          <target state="translated">開発環境の設定</target>
        </trans-unit>
        <trans-unit id="a8fd0b5b36c2cca1d02e17c64bac5f84dd9d2fdb" translate="yes" xml:space="preserve">
          <source>Set up your project to record</source>
          <target state="translated">記録するプロジェクトを設定する</target>
        </trans-unit>
        <trans-unit id="fb449f71834cd30ec14d00c9d50ba85c232186d3" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="translated">Setting</target>
        </trans-unit>
        <trans-unit id="8b359caab501258cd39071ee3c96bd0d8857a2ee" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;NO_PROXY&lt;/code&gt; is now respected for HTTPS urls, as it should be. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4303&quot;&gt;#4303&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NO_PROXY&lt;/code&gt; の設定は、HTTPSのURLで尊重されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4303&quot;&gt;＃4303を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f96cf268f9421235d911b90d021c6d74bc99daf2" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;force&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the options disables checking whether the input is focusable or currently has focus.</source>
          <target state="translated">オプションで &lt;code&gt;force&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、入力がフォーカス可能かどうか、または現在フォーカスがあるかどうかのチェックが無効になります。</target>
        </trans-unit>
        <trans-unit id="00631d52d12a837408b97371ed4185a02d1a08f2" translate="yes" xml:space="preserve">
          <source>Setting a global baseUrl</source>
          <target state="translated">グローバルなbaseUrlの設定</target>
        </trans-unit>
        <trans-unit id="9b22753416aab126af2aa63779ec3be1b9431080" translate="yes" xml:space="preserve">
          <source>Setting environment variables in Windows is different depending on if you&amp;rsquo;re using &lt;em&gt;command prompt&lt;/em&gt; or &lt;em&gt;Powershell&lt;/em&gt;.</source>
          <target state="translated">Windowsでの環境変数の設定は、&lt;em&gt;コマンドプロンプト&lt;/em&gt;と&lt;em&gt;Powershellの&lt;/em&gt;どちらを使用しているかによって異なり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="92d9162585633b400b050f5a74814d5b13739522" translate="yes" xml:space="preserve">
          <source>Setting the environment variable &lt;code&gt;CYPRESS_RUN_BINARY&lt;/code&gt; overrides where the npm module finds the Cypress binary.</source>
          <target state="translated">環境変数 &lt;code&gt;CYPRESS_RUN_BINARY&lt;/code&gt; を設定すると、npmモジュールがサイプレスバイナリを見つける場所が上書きされます。</target>
        </trans-unit>
        <trans-unit id="d52739254a796f9347cba4eb29a31da2753e11d1" translate="yes" xml:space="preserve">
          <source>Setting up CI</source>
          <target state="translated">CIの設定</target>
        </trans-unit>
        <trans-unit id="8a164660ff7c0aea058ea9a4d65db581e8d4cbe7" translate="yes" xml:space="preserve">
          <source>Setting up tests</source>
          <target state="translated">テストの設定</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="2df60ab4dc72c4be0d9c27790f1f5cb5a0dc8b9d" translate="yes" xml:space="preserve">
          <source>Setup route to &lt;code&gt;POST&lt;/code&gt; to login</source>
          <target state="translated">ログインするための &lt;code&gt;POST&lt;/code&gt; へのルートを設定</target>
        </trans-unit>
        <trans-unit id="e7d6e16fae37c96bb4e89a8ee4a10e6044cee723" translate="yes" xml:space="preserve">
          <source>Setup route to error on &lt;code&gt;POST&lt;/code&gt; to login</source>
          <target state="translated">ログインする &lt;code&gt;POST&lt;/code&gt; のエラーへのルートを設定</target>
        </trans-unit>
        <trans-unit id="015f5a890162d908ef52ecc49a7ef02299b297fa" translate="yes" xml:space="preserve">
          <source>Setup/Teardown code was not properly running on nested Mocha &lt;code&gt;before&lt;/code&gt;hooks which caused the error: &lt;code&gt;The XHR server is unavailable or missing...&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;#80&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/86&quot;&gt;#86&lt;/a&gt;.</source>
          <target state="translated">セットアップ/ティアダウンコードが正しくネストされたモカ上で実行されていなかった &lt;code&gt;before&lt;/code&gt; 、エラーの原因となったフック： &lt;code&gt;The XHR server is unavailable or missing...&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;＃80&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/86&quot;&gt;＃86を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="32dd4dd3febf272295d995ace247074b862210bf" translate="yes" xml:space="preserve">
          <source>Several Capybara finders re-implemented in Cypress to locate UI elements by their text and labels.</source>
          <target state="translated">Cypressに再実装されたいくつかのCapybaraファインダは、テキストとラベルでUI要素を検索します。</target>
        </trans-unit>
        <trans-unit id="807b021f0e923dde553abf3da9c207ac828c425e" translate="yes" xml:space="preserve">
          <source>Several TypeScript typings were added, updated and fixed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1006&quot;&gt;#1006&lt;/a&gt;.</source>
          <target state="translated">いくつかのTypeScriptタイピングが追加、更新、修正されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1006&quot;&gt;＃1006を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ffc20cfbc85c5075bb0eda29fe861ac1f5a6d73e" translate="yes" xml:space="preserve">
          <source>Several color themes for Cypress test runner</source>
          <target state="translated">Cypressテストランナーのためのいくつかの色のテーマ</target>
        </trans-unit>
        <trans-unit id="ad4c3b63fb8dc77f3502cf00be98ac870bc706ff" translate="yes" xml:space="preserve">
          <source>Several common viewport presets have been added for convenience</source>
          <target state="translated">便利なように、いくつかの共通ビューポートプリセットが追加されました。</target>
        </trans-unit>
        <trans-unit id="555e2e37ff29b8613344b174e201ca9c50c6b4d3" translate="yes" xml:space="preserve">
          <source>Several improvements to TypeScript typings. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1881&quot;&gt;#1881&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2007&quot;&gt;#2007&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1899&quot;&gt;#1899&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1902&quot;&gt;#1902&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1897&quot;&gt;#1897&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1907&quot;&gt;#1907&lt;/a&gt;.</source>
          <target state="translated">TypeScriptタイピングに対するいくつかの改善。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1881&quot;&gt;＃1881&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2007&quot;&gt;＃2007&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1899&quot;&gt;＃1899&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1902&quot;&gt;＃1902&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1897&quot;&gt;＃1897&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1907&quot;&gt;＃1907を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="386d8c29b0e9b1f2a67d3ed67e2c608a53673921" translate="yes" xml:space="preserve">
          <source>Several instances of memory leaks were plugged up.</source>
          <target state="translated">メモリリークが突っ込まれた事例が何度かありました。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
