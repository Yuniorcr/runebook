<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="60f36509279d4c17207d1dc348d8c1f5325d200b" translate="yes" xml:space="preserve">
          <source>By default, Cypress will error if you&amp;rsquo;re trying to click multiple elements. By passing &lt;code&gt;{ multiple: true }&lt;/code&gt; Cypress will iteratively apply the click to each element and will also log to the &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">デフォルトでは、複数の要素をクリックしようとすると、サイプレスはエラーになります。 &lt;code&gt;{ multiple: true }&lt;/code&gt; を渡すことにより、サイプレスは各要素にクリックを繰り返し適用し、&lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;コマンドログに&lt;/a&gt;複数回記録します。</target>
        </trans-unit>
        <trans-unit id="ca8db2bd85e68f1147add871bae2bf1eaa392769" translate="yes" xml:space="preserve">
          <source>By default, Cypress will error if you&amp;rsquo;re trying to click multiple elements. By passing &lt;code&gt;{ multiple: true }&lt;/code&gt; Cypress will iteratively apply the click to each element and will also log to the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">デフォルトでは、複数の要素をクリックしようとすると、サイプレスはエラーになります。 &lt;code&gt;{ multiple: true }&lt;/code&gt; を渡すことにより、サイプレスは各要素にクリックを繰り返し適用し、&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;コマンドログにも&lt;/a&gt;複数回ログを記録します。</target>
        </trans-unit>
        <trans-unit id="4a5b0165d7fa914e6a05288cb84f384c5563603e" translate="yes" xml:space="preserve">
          <source>By default, Cypress will error if you&amp;rsquo;re trying to right click multiple elements. By passing &lt;code&gt;{ multiple: true }&lt;/code&gt; Cypress will iteratively apply the right click to each element and will also log to the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">デフォルトでは、複数の要素を右クリックしようとすると、サイプレスはエラーになります。 &lt;code&gt;{ multiple: true }&lt;/code&gt; を渡すことにより、サイプレスは各要素に右クリックを繰り返し適用し、&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;コマンドログにも&lt;/a&gt;複数回ログを記録します。</target>
        </trans-unit>
        <trans-unit id="72ad38b3930c438ea2669bb82bdc3ba449421a89" translate="yes" xml:space="preserve">
          <source>By default, Cypress will iteratively apply the double click to each element and will also log to the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">デフォルトでは、サイプレスは各要素にダブルクリックを繰り返し適用し、&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;コマンドログにも&lt;/a&gt;複数回ログを記録します。</target>
        </trans-unit>
        <trans-unit id="2eaa1b50e36b4ca02fd70aa93843f9d4af125355" translate="yes" xml:space="preserve">
          <source>By default, Cypress will run tests in Electron headlessly.</source>
          <target state="translated">デフォルトでは、CypressはElectronでテストをヘッドレスで実行します。</target>
        </trans-unit>
        <trans-unit id="020c7aea8e7fcdb3f70f080fc34e32edac970fc2" translate="yes" xml:space="preserve">
          <source>By default, JavaScript timers and CSS animations are disabled to try to prevent changes to your application under test while the screenshot is taken, but you can turn off this behavior.</source>
          <target state="translated">デフォルトでは、スクリーンショットが撮影されている間、テスト中のアプリケーションの変更を防ぐために、JavaScript のタイマーと CSS アニメーションは無効になっていますが、この動作をオフにすることができます。</target>
        </trans-unit>
        <trans-unit id="31d239b236e06bd32e82356597cd3678076349da" translate="yes" xml:space="preserve">
          <source>By default, a screenshot is saved to a file with a path relative to the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;screenshots folder&lt;/a&gt;, appended by a path relating to where the spec file exists, with a name including the current test&amp;rsquo;s suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</source>
          <target state="translated">デフォルトでは、スクリーンショットは、&lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;スクリーンショットフォルダー&lt;/a&gt;からの相対パスと、スペックファイルが存在する場所に関連するパスが現在のテストのスイートとテスト名を含む名前でファイルに保存されます： &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0749d0f73e94151b375df64ccc7eee6451592897" translate="yes" xml:space="preserve">
          <source>By default, a screenshot is saved to a file with a path relative to the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;screenshots folder&lt;/a&gt;, appended by a path relating to where the spec file exists, with a name including the current test&amp;rsquo;s suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</source>
          <target state="translated">デフォルトでは、スクリーンショットは&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;スクリーンショットフォルダーに&lt;/a&gt;相対的なパスでファイルに保存され、スペックファイルが存在する場所に関連するパスが追加され、現在のテストのスイートとテスト名を含む名前が付けられます： &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25b5c1248e79a26964e544280fa3ed4f30495142" translate="yes" xml:space="preserve">
          <source>By default, any environment variable that matches a corresponding configuration key will override the &lt;code&gt;cypress.json&lt;/code&gt; value.</source>
          <target state="translated">デフォルトでは、対応する構成キーに一致する環境変数は、 &lt;code&gt;cypress.json&lt;/code&gt; 値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="e4d0e8b3b87d13429a6c8955ad16b7c84cbf40a8" translate="yes" xml:space="preserve">
          <source>By default, every user of Cypress is given a personal organization - named after you. You cannot delete or edit the name of this default organization.</source>
          <target state="translated">デフォルトでは、Cypressのすべてのユーザーには、あなたの名前を冠した個人組織が与えられます。このデフォルトの組織名を削除したり編集したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="5063fbb288f3f5b4a8dd3fb04c4aabced23161da" translate="yes" xml:space="preserve">
          <source>By default, if your screen is not large enough to display all of the current dimension&amp;rsquo;s pixels, Cypress will scale and center your application within the Cypress runner to accommodate.</source>
          <target state="translated">デフォルトでは、現在の次元のすべてのピクセルを表示するのに画面が十分に大きくない場合、サイプレスは、それに合わせてサイプレスランナー内でアプリケーションをスケーリングおよび中央揃えします。</target>
        </trans-unit>
        <trans-unit id="56147af8f660e28c93278b32108de5247937fc54" translate="yes" xml:space="preserve">
          <source>By default, modifiers are released after each type command.</source>
          <target state="translated">デフォルトでは、各タイプコマンドの後に修飾子が解放されます。</target>
        </trans-unit>
        <trans-unit id="8f36f87fbe0c647d60dcf224cf359b9788daa6ff" translate="yes" xml:space="preserve">
          <source>By default, scaling the application under test is turned off during when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt; to prevent differences between screenshots on screens with different resolutions. You can turn scaling on and have your app scaled like it is during normal use of Cypress. This is always coerced to &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;capture&lt;/code&gt; オプションが &lt;code&gt;viewport&lt;/code&gt; ときは、テスト中のアプリケーションのスケーリングはオフになっています。これにより、解像度の異なる画面でのスクリーンショットの違いを防ぎます。スケーリングをオンにして、サイプレスの通常の使用時と同じようにアプリをスケーリングできます。 &lt;code&gt;capture&lt;/code&gt; オプションが &lt;code&gt;runner&lt;/code&gt; の場合、これは常に &lt;code&gt;true&lt;/code&gt; に強制されます。</target>
        </trans-unit>
        <trans-unit id="6f335479f6d588a3ec88fa2676dba6b4a72b2028" translate="yes" xml:space="preserve">
          <source>By default, the event will bubble up the DOM tree. This will prevent the event from bubbling.</source>
          <target state="translated">デフォルトでは、イベントは DOM ツリーの上にバブルアップします。これにより、イベントがバブリングしないようになります。</target>
        </trans-unit>
        <trans-unit id="4ee8175e75416cebdf4f5f2b3834c5eeb169de38" translate="yes" xml:space="preserve">
          <source>By default, until you issue a &lt;code&gt;cy.viewport()&lt;/code&gt; command, Cypress sets the width to &lt;code&gt;1000px&lt;/code&gt; and the height to &lt;code&gt;660px&lt;/code&gt; by default.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;cy.viewport()&lt;/code&gt; コマンドを発行するまで、サイプレスはデフォルトで幅を &lt;code&gt;1000px&lt;/code&gt; に、高さを &lt;code&gt;660px&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="31da1ef1646d02bd7e3e61c167ce21d28b35ce7b" translate="yes" xml:space="preserve">
          <source>By default, when running &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; from the CLI, we will launch Electron headlessly.</source>
          <target state="translated">デフォルトでは、CLIから&lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; を実行&lt;/a&gt;すると、Electronをヘッドレスで起動します。</target>
        </trans-unit>
        <trans-unit id="67d236dff9d0db2de50f277cfe461372f2b4cda7" translate="yes" xml:space="preserve">
          <source>By installing Cypress through &lt;code&gt;npm&lt;/code&gt; you also get access to many other CLI commands.</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; を介してサイプレスをインストールすると、他の多くのCLIコマンドにもアクセスできます。</target>
        </trans-unit>
        <trans-unit id="80da3b5dbdcbfc5eb2338707d70f4635caeec1bb" translate="yes" xml:space="preserve">
          <source>By passing a string or array of strings you can block requests made to one or more hosts.</source>
          <target state="translated">文字列や文字列の配列を渡すことで、1 つ以上のホストへのリクエストをブロックすることができます。</target>
        </trans-unit>
        <trans-unit id="493d0ab8830dca4d10e1ecc76a7769c195e5b760" translate="yes" xml:space="preserve">
          <source>By passing the &lt;code&gt;encoding: base64&lt;/code&gt; option, the &lt;code&gt;response.body&lt;/code&gt; will be base64-encoded content of the image. You can use this to construct a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs&quot;&gt;Data URI&lt;/a&gt; for use elsewhere.</source>
          <target state="translated">&lt;code&gt;encoding: base64&lt;/code&gt; オプションを渡すことにより、 &lt;code&gt;response.body&lt;/code&gt; は画像のbase64でエンコードされたコンテンツになります。これを使用して、他の場所で使用する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs&quot;&gt;データURI&lt;/a&gt;を作成できます。</target>
        </trans-unit>
        <trans-unit id="8e86f3164eb298ada78ad107f6b73d554f9e9e38" translate="yes" xml:space="preserve">
          <source>By passing the &lt;code&gt;encoding: binary&lt;/code&gt; option, the &lt;code&gt;response.body&lt;/code&gt; will be serialized binary content of the file. You can use this to access various file types via &lt;code&gt;.request()&lt;/code&gt; like &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.zip&lt;/code&gt;, or &lt;code&gt;.doc&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;encoding: binary&lt;/code&gt; オプションを渡すことにより、 &lt;code&gt;response.body&lt;/code&gt; はファイルのバイナリコンテンツにシリアル化されます。これを使用して、 &lt;code&gt;.pdf&lt;/code&gt; 、 &lt;code&gt;.zip&lt;/code&gt; 、 &lt;code&gt;.doc&lt;/code&gt; ファイルなどの &lt;code&gt;.request()&lt;/code&gt; を介してさまざまなファイルタイプにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="c215ae2b7035d4fc04619254745488563429289e" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;baseUrl&lt;/code&gt;, you can avoid this reload altogether. Cypress will load the main window in the &lt;code&gt;baseUrl&lt;/code&gt; you specified as soon as your tests start.</source>
          <target state="translated">&lt;code&gt;baseUrl&lt;/code&gt; を設定すると、この再読み込みを完全に回避できます。サイプレスは、テストが開始するとすぐに、指定した &lt;code&gt;baseUrl&lt;/code&gt; にメインウィンドウをロードします。</target>
        </trans-unit>
        <trans-unit id="52184d3398336fbb0d43496bd9f09ab0e9d17269" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;{ prevSubject: true }&lt;/code&gt;, our new &lt;code&gt;.console()&lt;/code&gt; command will require a subject.</source>
          <target state="translated">&lt;code&gt;{ prevSubject: true }&lt;/code&gt; 設定すると、新しい &lt;code&gt;.console()&lt;/code&gt; コマンドで件名が必要になります。</target>
        </trans-unit>
        <trans-unit id="3120251e5bc484923b3fd9e2b19995bc7bd41c27" translate="yes" xml:space="preserve">
          <source>By turning on debugging, Cypress will automatically generate logs to the console when it &lt;em&gt;sets&lt;/em&gt; or &lt;em&gt;clears&lt;/em&gt; cookie values. This is useful to help you understand how Cypress clears cookies before each test, and is useful to visualize how to handle preserving cookies in between tests.</source>
          <target state="translated">デバッグをオンにすることにより、サイプレスはCookie値を&lt;em&gt;設定&lt;/em&gt;または&lt;em&gt;クリアする&lt;/em&gt;ときに、コンソールにログを自動的に生成します。これは、サイプレスが各テストの前にCookieをクリアする方法を理解するのに役立ち、テスト間でCookieを保持する方法を視覚化するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="316130fed5f133da590e50589a6237514343d251" translate="yes" xml:space="preserve">
          <source>By turning on debugging, Cypress will automatically log out to the console when it &lt;em&gt;sets&lt;/em&gt; or &lt;em&gt;clears&lt;/em&gt; cookie values. This is useful to help you understand how Cypress clears cookies before each test, and is useful to visualize how to handle preserving cookies in between tests.</source>
          <target state="translated">デバッグをオンにすることにより、サイプレスはCookie値を&lt;em&gt;設定&lt;/em&gt;または&lt;em&gt;クリアする&lt;/em&gt;ときに、コンソールに自動的にログアウトします。これは、サイプレスが各テストの前にCookieをクリアする方法を理解するのに役立ち、テスト間でCookieの保持を処理する方法を視覚化するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="298fa88d04166bb6674ad4e0d3ccdf772b46c496" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; we avoid the use of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">使用して&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;私たちは、の使用を避ける &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18078552f603c5c6fab2d90bca20e9322ebefd72" translate="yes" xml:space="preserve">
          <source>By using callback functions we&amp;rsquo;ve created a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;closure&lt;/a&gt;. Closures enable us to keep references around to refer to work done in previous commands.</source>
          <target state="translated">コールバック関数を使用して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;クロージャー&lt;/a&gt;を作成しました。クロージャーを使用すると、前のコマンドで実行された作業を参照するために参照を保持できます。</target>
        </trans-unit>
        <trans-unit id="489e37d7dbee8b74c057ee1d2d38019f4c513b59" translate="yes" xml:space="preserve">
          <source>Bypassing your UI</source>
          <target state="translated">UIをバイパスする</target>
        </trans-unit>
        <trans-unit id="ff61c566a2ca6d712c906c28744ddcd1dba14009" translate="yes" xml:space="preserve">
          <source>CI Build ID environment variables by provider</source>
          <target state="translated">プロバイダ別CIビルドID環境変数</target>
        </trans-unit>
        <trans-unit id="fc69adcfecb8cb1dd5f155da62e87064402b4c2d" translate="yes" xml:space="preserve">
          <source>CI Configurations in Kitchen Sink Example</source>
          <target state="translated">キッチンシンクのCI構成例</target>
        </trans-unit>
        <trans-unit id="d01ac6617bafd8746500902dac96f7c5734ac2f0" translate="yes" xml:space="preserve">
          <source>CI Provider</source>
          <target state="translated">CI プロバイダ</target>
        </trans-unit>
        <trans-unit id="c662b79291f346f66148551da0ae0a7364ce29f5" translate="yes" xml:space="preserve">
          <source>CI machines contact the Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; to indicate which spec files to run in the project.</source>
          <target state="translated">CIマシンは、サイプレス&lt;a href=&quot;../dashboard/introduction&quot;&gt;ダッシュボードサービス&lt;/a&gt;に連絡して、プロジェクトで実行するスペックファイルを示します。</target>
        </trans-unit>
        <trans-unit id="2027f0b62c225f1fba06f13e84c73e654c595e88" translate="yes" xml:space="preserve">
          <source>CI parallelization interactions</source>
          <target state="translated">CI並列化相互作用</target>
        </trans-unit>
        <trans-unit id="434a666a92024e35fbc505bba0c2675be6990ff3" translate="yes" xml:space="preserve">
          <source>CLI Errors</source>
          <target state="translated">CLI エラー</target>
        </trans-unit>
        <trans-unit id="2b73128876956758fae01f88c425032451c06b72" translate="yes" xml:space="preserve">
          <source>CLI now displays the correct overridden &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; on first open. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/659&quot;&gt;#659&lt;/a&gt;.</source>
          <target state="translated">CLIは、最初のオープン &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; に、上書きされた正しいCYPRESS_BINARY_VERSIONを表示するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/659&quot;&gt;＃659を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5964dd4adab7594f2e1a2e9d973bbe2f7d161bc1" translate="yes" xml:space="preserve">
          <source>CLI shows help message when it is invoked with an unknown command like &lt;code&gt;$(npm bin)/cypress foo&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/641&quot;&gt;#641&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$(npm bin)/cypress foo&lt;/code&gt; のような不明なコマンドで呼び出された場合、CLIはヘルプメッセージを表示します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/641&quot;&gt;＃641を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="03f5dac5f9ec51daa2d44c63bd74508ea187e09e" translate="yes" xml:space="preserve">
          <source>CLI tools</source>
          <target state="translated">CLIツール</target>
        </trans-unit>
        <trans-unit id="2139aadec237bbecb581e62932f94bc3bce7a704" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="translated">CORS</target>
        </trans-unit>
        <trans-unit id="bc649576a4d3ad53cb4f5ae4e2787fadafe6b354" translate="yes" xml:space="preserve">
          <source>CORS Network Errors are now correctly caught.</source>
          <target state="translated">CORS ネットワーク エラーが正しく検出されるようになりました。</target>
        </trans-unit>
        <trans-unit id="70f64583fc76685812e87c4faa1cb1b507ca4146" translate="yes" xml:space="preserve">
          <source>CORS is bypassed</source>
          <target state="translated">CORSがバイパスされる</target>
        </trans-unit>
        <trans-unit id="ac7e57b7980c52be07d41cc077fc6f543ecb0e7f" translate="yes" xml:space="preserve">
          <source>CPU Architecture</source>
          <target state="translated">CPUアーキテクチャ</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="7c73fb96fc873b0e54bb33b427402eb6dae05fa0" translate="yes" xml:space="preserve">
          <source>CSS Improvements</source>
          <target state="translated">CSSの改善</target>
        </trans-unit>
        <trans-unit id="d7d5905637755f2600a18d5aff7b8c939f054ab1" translate="yes" xml:space="preserve">
          <source>CSS changes.</source>
          <target state="translated">CSSが変更されます。</target>
        </trans-unit>
        <trans-unit id="1a0d5a83a082583528756c941afe7d7ac4c8fee8" translate="yes" xml:space="preserve">
          <source>Cache the &lt;code&gt;~/.cache&lt;/code&gt; folder after running &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt;, &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; or equivalents as demonstrated in the configs below.</source>
          <target state="translated">以下の構成で示されているように、&lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt; &lt;code&gt;npm ci&lt;/code&gt; &lt;/a&gt; &lt;code&gt;npm install&lt;/code&gt; 、 &lt;code&gt;yarn&lt;/code&gt; 、npm ciまたは同等のものを実行した後、 &lt;code&gt;~/.cache&lt;/code&gt; フォルダーをキャッシュします。</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="552776a73910809012403d392d8679e0d673873d" translate="yes" xml:space="preserve">
          <source>Caching folders with npm modules saves a lot of time after the first build.</source>
          <target state="translated">npm モジュールでフォルダをキャッシュすることで、最初のビルド後の時間を大幅に節約できます。</target>
        </trans-unit>
        <trans-unit id="1fa16ca9debb97f6986680d1936a0fc501a513a5" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;cy.request()&lt;/code&gt; over and over again</source>
          <target state="translated">&lt;code&gt;cy.request()&lt;/code&gt; を何度も呼び出す</target>
        </trans-unit>
        <trans-unit id="827f02b84175cae4a4e46e6380f1464410138f6a" translate="yes" xml:space="preserve">
          <source>Callback function that filters requests from ever being logged or stubbed. By default this matches against asset-like requests such as for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">リクエストがログに記録されたりスタブされたりしないようにフィルタリングするコールバック関数。デフォルトでは、これは &lt;code&gt;.js&lt;/code&gt; 、 &lt;code&gt;.jsx&lt;/code&gt; 、 &lt;code&gt;.html&lt;/code&gt; 、 &lt;code&gt;.css&lt;/code&gt; ファイルなどのアセットのようなリクエストと照合されます。</target>
        </trans-unit>
        <trans-unit id="f93685d70a619e9e5640c0d9c00fcede507aa163" translate="yes" xml:space="preserve">
          <source>Callback function that whitelists requests from ever being logged or stubbed. By default this matches against asset-like requests such as for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">ログに記録されたりスタブされたりした要求をホワイトリストに登録するコールバック関数。デフォルトでは、これは &lt;code&gt;.js&lt;/code&gt; 、 &lt;code&gt;.jsx&lt;/code&gt; 、 &lt;code&gt;.html&lt;/code&gt; 、 &lt;code&gt;.css&lt;/code&gt; ファイルなどのアセットのようなリクエストと一致します。</target>
        </trans-unit>
        <trans-unit id="087dbaf08e0864a6ad0ad0adb86ee5ed58f3f116" translate="yes" xml:space="preserve">
          <source>Callback function when a request is sent</source>
          <target state="translated">リクエスト送信時のコールバック機能</target>
        </trans-unit>
        <trans-unit id="cf8d5c2978df66f3f394db8f6aab052e046024aa" translate="yes" xml:space="preserve">
          <source>Callback function when a response is returned</source>
          <target state="translated">レスポンスが返ってきたときのコールバック関数</target>
        </trans-unit>
        <trans-unit id="61dc26e9c1fe08638550698294266bd9f36dd5bb" translate="yes" xml:space="preserve">
          <source>Callback function which fires anytime an XHR is aborted</source>
          <target state="translated">XHR が中止されたときにいつでも発生するコールバック関数</target>
        </trans-unit>
        <trans-unit id="46ba14f15f9aae955fad56969dc285a9cd868127" translate="yes" xml:space="preserve">
          <source>Called before your page has loaded all of its resources.</source>
          <target state="translated">ページにすべてのリソースが読み込まれる前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6caed0da8cebe162cd765d1f7ebb277bdbcdff72" translate="yes" xml:space="preserve">
          <source>Called once your page has fired its load event.</source>
          <target state="translated">ページのロードイベントが発生した後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ef1a512a13b777a8aa598130fecc3d609c6fe0e3" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../../api/commands/focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../../api/commands/window&quot;&gt;&lt;code&gt;cy.window()&lt;/code&gt;&lt;/a&gt; no longer fires blur events on the &lt;code&gt;activeElement&lt;/code&gt; or causes it to become &lt;code&gt;body&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2234&quot;&gt;#2234&lt;/a&gt;.</source>
          <target state="translated">呼び出し&lt;a href=&quot;../../api/commands/focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;../../api/commands/window&quot;&gt; &lt;code&gt;cy.window()&lt;/code&gt; することは&lt;/a&gt;、もはや上のぼかしイベントを発生しない &lt;code&gt;activeElement&lt;/code&gt; またはそれになる原因となる &lt;code&gt;body&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2234&quot;&gt;＃2234を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="dfb1b743dea5451ffee7e0b29e93e9c9e02d727f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Cypress.$('button')&lt;/code&gt; will automatically query for elements in your remote &lt;code&gt;window&lt;/code&gt;. In other words, Cypress automatically sets the &lt;code&gt;document&lt;/code&gt; to be whatever you&amp;rsquo;ve currently navigated to via &lt;a href=&quot;../commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.$('button')&lt;/code&gt; を呼び出すと、リモート &lt;code&gt;window&lt;/code&gt; 要素が自動的にクエリされます。言い換えると、サイプレスは自動的に &lt;code&gt;document&lt;/code&gt; を&lt;a href=&quot;../commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;を介して現在移動したものに設定します。</target>
        </trans-unit>
        <trans-unit id="c85f18334b7491d85182e84efcffeac38212ea59" translate="yes" xml:space="preserve">
          <source>Can I pass in environment variables from the command line?</source>
          <target state="translated">コマンドラインから環境変数を渡すことはできますか?</target>
        </trans-unit>
        <trans-unit id="d10e5029c1e28bc1a973ff19ea668605abce3fd8" translate="yes" xml:space="preserve">
          <source>Can I recover from failed Cypress commands like if a &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t find an element?</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;が要素を見つけられない場合のように、失敗したサイプレスコマンドから回復できますか？</target>
        </trans-unit>
        <trans-unit id="52f60c07118b2ea2839c1265c591e221479eb96f" translate="yes" xml:space="preserve">
          <source>Can a user click on the element?</source>
          <target state="translated">ユーザーはその要素をクリックすることができますか?</target>
        </trans-unit>
        <trans-unit id="221fba3c424e5fc33582db258cdee25eeb4676e1" translate="yes" xml:space="preserve">
          <source>Can be stored in your &lt;code&gt;bash_profile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bash_profile&lt;/code&gt; に保存できます。</target>
        </trans-unit>
        <trans-unit id="1a3ada5d5fc85a9fb0a3b73f11e43f21f3bd7b67" translate="yes" xml:space="preserve">
          <source>Can call &lt;a href=&quot;focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;cy.window()&lt;/code&gt;</source>
          <target state="translated">呼び出すことができます&lt;a href=&quot;focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; を&lt;/a&gt;上 &lt;code&gt;cy.window()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b6610dd542aebfaabe19f83676053a2d9964417" translate="yes" xml:space="preserve">
          <source>Can force responses to take longer to simulate network delay</source>
          <target state="translated">ネットワーク遅延をシミュレートするために、応答に時間がかかるように強制することができます。</target>
        </trans-unit>
        <trans-unit id="ed8a1cb964cf3bae5d65002a7f9c02b0831945f9" translate="yes" xml:space="preserve">
          <source>Can only be called on a valid focusable element</source>
          <target state="translated">有効なフォーカス可能な要素に対してのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f99424e49fd08e81f2ce09d34ba877b9eeef249f" translate="yes" xml:space="preserve">
          <source>Can this be written as a function?</source>
          <target state="translated">これは関数として書けますか?</target>
        </trans-unit>
        <trans-unit id="4fc2d9b2678b5da75f54eee51b90a74226366c17" translate="yes" xml:space="preserve">
          <source>Can this just be written as a simple function?</source>
          <target state="translated">これは単純な関数として書けばいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="a24787ac55453ccdeca09cc237538938881ad9fe" translate="yes" xml:space="preserve">
          <source>Can time out because your browser did not receive any focus events</source>
          <target state="translated">ブラウザがフォーカスイベントを受信していないため、タイムアウトすることができます。</target>
        </trans-unit>
        <trans-unit id="715dd339a0f190c96e4c5aefda2eec96e223e77b" translate="yes" xml:space="preserve">
          <source>Can you read this? If you did, it might sound something like this:</source>
          <target state="translated">これを読めますか?読んだとしたら、こんな感じに聞こえるかもしれません。</target>
        </trans-unit>
        <trans-unit id="beb27c8e29d0525dbd2a4408dc6d33153c8dbd36" translate="yes" xml:space="preserve">
          <source>Can you see what Cypress is doing under the hood? It&amp;rsquo;s automatically waiting and retrying because it expects the content to &lt;strong&gt;eventually&lt;/strong&gt; be found in the DOM. It doesn&amp;rsquo;t immediately fail!</source>
          <target state="translated">サイプレスが内部で何をしているのかわかりますか？コンテンツが&lt;strong&gt;最終的&lt;/strong&gt;にDOMで検出されることを期待しているため、自動的に待機して再試行しています。それはすぐに失敗しません！</target>
        </trans-unit>
        <trans-unit id="711cd51206e2b20f7a7dcd2cc7ad8258724d1d0d" translate="yes" xml:space="preserve">
          <source>Can you think of any more?</source>
          <target state="translated">他に思い当たることはありますか?</target>
        </trans-unit>
        <trans-unit id="dad882c9c3e0a7a06ab377ce15833cf98595a06c" translate="yes" xml:space="preserve">
          <source>Canary</source>
          <target state="translated">Canary</target>
        </trans-unit>
        <trans-unit id="e760613087c145d4d43705311ebd5342caa91cd3" translate="yes" xml:space="preserve">
          <source>Cancel project transfer</source>
          <target state="translated">プロジェクトの転送をキャンセル</target>
        </trans-unit>
        <trans-unit id="319aaae4dec46a75861fd10bcf8d182f4a77298d" translate="yes" xml:space="preserve">
          <source>Cancellation</source>
          <target state="translated">Cancellation</target>
        </trans-unit>
        <trans-unit id="64b9d5a9e917dda829740003e994a492074b15af" translate="yes" xml:space="preserve">
          <source>Cannot &lt;code&gt;cy.visit()&lt;/code&gt; two different super domains in a single test</source>
          <target state="translated">1つのテストで2つの異なるスーパードメインを &lt;code&gt;cy.visit()&lt;/code&gt; することはできません</target>
        </trans-unit>
        <trans-unit id="abb5bfdc353c366a7efbee1fb7da8e11330c0b1a" translate="yes" xml:space="preserve">
          <source>Cannot connect to API server</source>
          <target state="translated">APIサーバーに接続できない</target>
        </trans-unit>
        <trans-unit id="52f1a833377675f9699a778739ccffab115d51ce" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests across environments</source>
          <target state="translated">環境間でテストを並列化できない</target>
        </trans-unit>
        <trans-unit id="8bd1413beeb2490640f9bb664bd3ce493819d2f9" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests in this group</source>
          <target state="translated">このグループではテストを並列化できない</target>
        </trans-unit>
        <trans-unit id="f19b9a94a23e75f0746294f4067e3bcf318dbd3d" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests on a stale run</source>
          <target state="translated">スタールランでテストを並列化できない</target>
        </trans-unit>
        <trans-unit id="ca09c54bff74a82bae543ebe259f7452ee8c5293" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
          <target state="translated">Capabilities</target>
        </trans-unit>
        <trans-unit id="bb0a25cc9790bc7fa5693c25569e769c8850a3b8" translate="yes" xml:space="preserve">
          <source>Captured remote page uncaught errors again which fail corresponding tests.</source>
          <target state="translated">対応するテストに失敗したリモートページのキャプチャされていないエラーが再び発生しました。</target>
        </trans-unit>
        <trans-unit id="48f2c0aca6c3bf7c2ed5abd3d76cf6978acf1777" translate="yes" xml:space="preserve">
          <source>Captured spec iframe errors again and preserve their stack trace.</source>
          <target state="translated">スペックiframeのエラーを再度キャプチャし、スタックトレースを保持します。</target>
        </trans-unit>
        <trans-unit id="26057558c8d1ceba1dfb290d88fd8159c1794732" translate="yes" xml:space="preserve">
          <source>Case Sensitivity</source>
          <target state="translated">ケース感度</target>
        </trans-unit>
        <trans-unit id="cc3c3e5a2cc3f39c50c5ba6661d886a70e3ca1c8" translate="yes" xml:space="preserve">
          <source>Catalog of Events</source>
          <target state="translated">イベントカタログ</target>
        </trans-unit>
        <trans-unit id="20c19aaf20441fa384633652a8389a543aec7485" translate="yes" xml:space="preserve">
          <source>Catch visual regressions and compare image diffs locally and in Cypress Dashboard.</source>
          <target state="translated">視覚的な回帰をキャッチし、ローカルおよびCypress Dashboardで画像の差分を比較します。</target>
        </trans-unit>
        <trans-unit id="03dcea7f9dee894e28d9a8873cb17690d773516d" translate="yes" xml:space="preserve">
          <source>Catching Test Failures</source>
          <target state="translated">テストの失敗をキャッチ</target>
        </trans-unit>
        <trans-unit id="1533667b844aeabc61af79e6389d6109dd4c1603" translate="yes" xml:space="preserve">
          <source>Cause + Effect commands are now logged in the correct order. IE, clicking something which causes another command to insert will be inserted correctly in the order they arrived</source>
          <target state="translated">原因+効果コマンドは正しい順序で記録されるようになりました。IE、何かをクリックして別のコマンドを挿入すると、それらが到着した順番で正しく挿入されます。</target>
        </trans-unit>
        <trans-unit id="d0d31283aa0e9299d14e7cac83e850d482500bb5" translate="yes" xml:space="preserve">
          <source>Centered the animating icon in the Test Runner when &amp;lsquo;running&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1695&quot;&gt;#1695&lt;/a&gt;.</source>
          <target state="translated">「実行」時に、テストランナーのアニメーションアイコンを中央に配置しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1695&quot;&gt;＃1695を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9fae277dee0479d19a4d4174ea2185ae54a626b9" translate="yes" xml:space="preserve">
          <source>Certain commands may have a specific requirement that causes them to immediately fail without retrying: such as &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定のコマンドには、&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;など、再試行せずにすぐに失敗する特定の要件がある場合があります。</target>
        </trans-unit>
        <trans-unit id="d10525a99b239e81e31412cc7b4c5dc1217f3627" translate="yes" xml:space="preserve">
          <source>Chai</source>
          <target state="translated">Chai</target>
        </trans-unit>
        <trans-unit id="20063bcb34e12094b0c2342fd9f9d64a0bd76ec4" translate="yes" xml:space="preserve">
          <source>Chai-jQuery</source>
          <target state="translated">Chai-jQuery</target>
        </trans-unit>
        <trans-unit id="b507de528ba917aa8f1aeb32108798635cce2a20" translate="yes" xml:space="preserve">
          <source>Chain assertions on the same subject</source>
          <target state="translated">同一テーマのチェーンアサーション</target>
        </trans-unit>
        <trans-unit id="c5022ed468cf246ff38b41ca1c5260a12cfd999b" translate="yes" xml:space="preserve">
          <source>Chain assertions when yield changes</source>
          <target state="translated">歩留まりが変化した場合の連鎖アサーション</target>
        </trans-unit>
        <trans-unit id="a5d758b8fa875a66cbc9934c7ee9483ed6de99b9" translate="yes" xml:space="preserve">
          <source>Chain off the screenshot to click the element captured</source>
          <target state="translated">キャプチャされた要素をクリックするためにスクリーンショットをチェーンオフにする</target>
        </trans-unit>
        <trans-unit id="657c40f2403784c009553c8544b91fc705a8214c" translate="yes" xml:space="preserve">
          <source>Chainable getters</source>
          <target state="translated">チェーン可能なゲッター</target>
        </trans-unit>
        <trans-unit id="273f575f4958f461d0f138115a61041b33e559e6" translate="yes" xml:space="preserve">
          <source>Chainer</source>
          <target state="translated">Chainer</target>
        </trans-unit>
        <trans-unit id="422de1722c9aa75f8bfed73fdcfb12bf76514cb5" translate="yes" xml:space="preserve">
          <source>Chainers</source>
          <target state="translated">Chainers</target>
        </trans-unit>
        <trans-unit id="04e698cea23e1b45cd3e12385b6d2ab527866116" translate="yes" xml:space="preserve">
          <source>Chaining more cy commands after using &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/114&quot;&gt;#114&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt;を使用した後、より多くのcyコマンドをチェーンすることが機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/114&quot;&gt;＃114を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9fd28c1d5a7993ba1e76db394b3c497fda73bb41" translate="yes" xml:space="preserve">
          <source>Chaining multiple assertions</source>
          <target state="translated">複数のアサーションを連結する</target>
        </trans-unit>
        <trans-unit id="2b6eea3213ea352f89364f5b731264b8ddbd83f1" translate="yes" xml:space="preserve">
          <source>Chains of Commands</source>
          <target state="translated">コマンドの鎖</target>
        </trans-unit>
        <trans-unit id="ff38765fb13efaef738615a48a439f19a5cd83a9" translate="yes" xml:space="preserve">
          <source>Challenges</source>
          <target state="translated">Challenges</target>
        </trans-unit>
        <trans-unit id="e9d5957fd0828bce48abe3b5750dbacb90724b17" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;headers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; 変更する</target>
        </trans-unit>
        <trans-unit id="b9702c122dfeba4337afc89a1f47864c80a57678" translate="yes" xml:space="preserve">
          <source>Change Event</source>
          <target state="translated">イベントの変更</target>
        </trans-unit>
        <trans-unit id="cb7dc796807b9ab5022a33275f9ee3c8e69c1814" translate="yes" xml:space="preserve">
          <source>Change defaults for &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; の&lt;/a&gt;デフォルトを変更する</target>
        </trans-unit>
        <trans-unit id="7faa5b6f1cfb58a5f5ce7885066d9e13a43e5c4a" translate="yes" xml:space="preserve">
          <source>Change download directory</source>
          <target state="translated">ダウンロードディレクトリの変更</target>
        </trans-unit>
        <trans-unit id="4e2c7472c7f118d13b6615c813ef5f3bb88bbfde" translate="yes" xml:space="preserve">
          <source>Change encoding of Image fixture</source>
          <target state="translated">画像フィクスチャのエンコーディング変更</target>
        </trans-unit>
        <trans-unit id="69f8af7a18ac0f9c63bdca983130f053e283c0bd" translate="yes" xml:space="preserve">
          <source>Change environment variables from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default) from within your tests</source>
          <target state="translated">テスト内から構成ファイル（デフォルトでは &lt;code&gt;cypress.json&lt;/code&gt; ）から環境変数を変更します</target>
        </trans-unit>
        <trans-unit id="fd1b85264fcbc4d17611b365be82d47f08fcd7f2" translate="yes" xml:space="preserve">
          <source>Change print media</source>
          <target state="translated">印刷媒体の変更</target>
        </trans-unit>
        <trans-unit id="a19816936e7591f2ed567c405afffb827b72b2c2" translate="yes" xml:space="preserve">
          <source>Change project access</source>
          <target state="translated">プロジェクトアクセスの変更</target>
        </trans-unit>
        <trans-unit id="4d8a452dd61108c4f9903188f2226e4895ac11ea" translate="yes" xml:space="preserve">
          <source>Change subject</source>
          <target state="translated">件名の変更</target>
        </trans-unit>
        <trans-unit id="a2264852d7b841eaadc2180f020ff98d66665845" translate="yes" xml:space="preserve">
          <source>Change the DOM using &lt;code&gt;onBeforeScreenshot&lt;/code&gt; and &lt;code&gt;onAfterScreenshot&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;onBeforeScreenshot&lt;/code&gt; および &lt;code&gt;onAfterScreenshot&lt;/code&gt; を使用してDOMを変更する</target>
        </trans-unit>
        <trans-unit id="f2dbfe168f59b09cdd3726a94e135012a9e0f249" translate="yes" xml:space="preserve">
          <source>Change the default delay for all routes</source>
          <target state="translated">すべてのルートのデフォルト遅延を変更する</target>
        </trans-unit>
        <trans-unit id="8ad3ce939cbcd7ee45d9591bbd05a840351af836" translate="yes" xml:space="preserve">
          <source>Change the default filtering</source>
          <target state="translated">デフォルトのフィルタリングを変更する</target>
        </trans-unit>
        <trans-unit id="f38779ae91156a63e5e148af488114e5555ae1b9" translate="yes" xml:space="preserve">
          <source>Change the default response headers for all routes</source>
          <target state="translated">すべてのルートのデフォルトの応答ヘッダーを変更する</target>
        </trans-unit>
        <trans-unit id="166c9a2aabc185e0327b5e474ad649f10cfff354" translate="yes" xml:space="preserve">
          <source>Change the default selector strategy</source>
          <target state="translated">デフォルトのセレクタ戦略の変更</target>
        </trans-unit>
        <trans-unit id="56c70055acbcb99d1f993ba5b54f607850d23ecf" translate="yes" xml:space="preserve">
          <source>Change the default timeout</source>
          <target state="translated">デフォルトのタイムアウトを変更する</target>
        </trans-unit>
        <trans-unit id="d91b15d72bf7b781f4f7f4eb99724ab2ed3f45f0" translate="yes" xml:space="preserve">
          <source>Change the default whitelisting</source>
          <target state="translated">デフォルトのホワイトリストの変更</target>
        </trans-unit>
        <trans-unit id="422ec7b5cef5a6d463c68aa1e381ae3ef5d0bce5" translate="yes" xml:space="preserve">
          <source>Change the download directory of files downloaded during Cypress tests.</source>
          <target state="translated">Cypress のテスト中にダウンロードしたファイルのダウンロードディレクトリを変更します。</target>
        </trans-unit>
        <trans-unit id="62ef1f9374437dfd6cc2b229251b2231dfd04e7b" translate="yes" xml:space="preserve">
          <source>Change the orientation to landscape</source>
          <target state="translated">向きを風景に変更する</target>
        </trans-unit>
        <trans-unit id="23f98c58cc44051fdbfdcba5fd6ae2a5007e02a3" translate="yes" xml:space="preserve">
          <source>Change the timeout</source>
          <target state="translated">タイムアウトの変更</target>
        </trans-unit>
        <trans-unit id="02325df05f0dab57c73c5f59302baaef6cfd7f63" translate="yes" xml:space="preserve">
          <source>Change the values of configuration options from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default) from within your tests</source>
          <target state="translated">テスト内から構成ファイル（デフォルトでは &lt;code&gt;cypress.json&lt;/code&gt; ）から構成オプションの値を変更します</target>
        </trans-unit>
        <trans-unit id="a70a7add1eb506ed4604875dbced1b0852644b98" translate="yes" xml:space="preserve">
          <source>Change the values of your configuration options from within tests</source>
          <target state="translated">設定オプションの値を tests 内から変更する</target>
        </trans-unit>
        <trans-unit id="760ddcbbe7326d7e60cf68e623be61a82b0e2e29" translate="yes" xml:space="preserve">
          <source>Change who can access your Cypress project</source>
          <target state="translated">Cypressプロジェクトにアクセスできる人を変更する</target>
        </trans-unit>
        <trans-unit id="71db0d5459437ab8a73c7cb7fb2e9838aab1352f" translate="yes" xml:space="preserve">
          <source>Changed &lt;code&gt;Linux&lt;/code&gt; build strategy which fixes not saving the internal &lt;code&gt;.cy cache&lt;/code&gt;. Also fixes not being able to update from the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/66&quot;&gt;#66&lt;/a&gt;.</source>
          <target state="translated">内部 &lt;code&gt;.cy cache&lt;/code&gt; 保存しないことを修正する &lt;code&gt;Linux&lt;/code&gt; ビルド戦略を変更しました。GUIから更新できない問題も修正されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/66&quot;&gt;＃66を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="002b928ed5585ac0c9d0ff7adc244b789bb0beee" translate="yes" xml:space="preserve">
          <source>Changed default &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;pageLoadTimeout&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;30000&lt;/code&gt; to &lt;code&gt;60000&lt;/code&gt;.</source>
          <target state="translated">デフォルトの&lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;pageLoadTimeout&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;30000&lt;/code&gt; から &lt;code&gt;60000&lt;/code&gt; に変更しました。</target>
        </trans-unit>
        <trans-unit id="96e3651e54fb00eae4cdfca3b79c948c8407ab99" translate="yes" xml:space="preserve">
          <source>Changed default &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;responseTimeout&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;20000&lt;/code&gt; to &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">デフォルトの&lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;responseTimeout&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;20000&lt;/code&gt; から &lt;code&gt;30000&lt;/code&gt; に変更しました。</target>
        </trans-unit>
        <trans-unit id="5980ecc2994212ae97d9590a418df179431f268c" translate="yes" xml:space="preserve">
          <source>Changed default port from &lt;code&gt;3000&lt;/code&gt; to &lt;code&gt;2020&lt;/code&gt; to avoid standard port conflicts with commonly used back ends. Afterall, using Cypress is testing with 2020 vision. ;-)</source>
          <target state="translated">一般的に使用されるバックエンドとの標準ポートの競合を回避するために、デフォルトポートを &lt;code&gt;3000&lt;/code&gt; から &lt;code&gt;2020&lt;/code&gt; に変更しました。結局、サイプレスの使用は2020年のビジョンでテストしています。;-)</target>
        </trans-unit>
        <trans-unit id="ffe9065d2640d272843465bb16ea3a38ef177621" translate="yes" xml:space="preserve">
          <source>Changed return of &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt; to return null (previously was returning Cookie that was cleared).</source>
          <target state="translated">変更リターン&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt;（クリアされた以前にクッキーを返していました）のリターンnullに。</target>
        </trans-unit>
        <trans-unit id="ed16957486bec94f03a359b34fe4fa8d84c626df" translate="yes" xml:space="preserve">
          <source>Changed return of &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt; to return an array of cookies, each with properties include name, value, etc.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/getcookies&quot;&gt; &lt;code&gt;cy.getCookies()&lt;/code&gt; の&lt;/a&gt;戻り値を変更して、それぞれに名前、値などのプロパティが含まれるCookieの配列を返すようにしました</target>
        </trans-unit>
        <trans-unit id="b9d187a27f74ad153f456df89c8ffd6ae4842fc8" translate="yes" xml:space="preserve">
          <source>Changed scrolling elements into view to use top strategy instead of bottom which fixes times where the middle of an element was not yet in he viewport. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/42&quot;&gt;#42&lt;/a&gt;.</source>
          <target state="translated">要素の中央がビューポートにまだない時間を修正する、下ではなく上戦略を使用するようにスクロール要素をビューに変更しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/42&quot;&gt;＃42を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="56a626b11951be7360d0da6dc57085d8f803fa53" translate="yes" xml:space="preserve">
          <source>Changed the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;Test Runner&lt;/a&gt; to use &lt;code&gt;JWT&lt;/code&gt; for authorization. &lt;strong&gt;You will have to log in again&lt;/strong&gt;.</source>
          <target state="translated">承認に &lt;code&gt;JWT&lt;/code&gt; を使用するように&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;テストランナー&lt;/a&gt;を変更しました。&lt;strong&gt;再度ログインする必要があります&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c07c367bdf8a3831c57704eca86fd8443094c7a0" translate="yes" xml:space="preserve">
          <source>Changed url strategy for sending down &lt;code&gt;spec&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;spec&lt;/code&gt; ファイルを送信するためのURL戦略を変更しました。</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Changelog</target>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Changes</target>
        </trans-unit>
        <trans-unit id="47cf14fbbe4e51d10d131aad5d8ffaa121098222" translate="yes" xml:space="preserve">
          <source>Changes the Cypress binary cache location</source>
          <target state="translated">Cypress のバイナリキャッシュの場所を変更します。</target>
        </trans-unit>
        <trans-unit id="c3627dab723119265222862e8a9135ba0363246c" translate="yes" xml:space="preserve">
          <source>Changes the hosted url to match that of the application under test.</source>
          <target state="translated">ホストされている URL を、テスト対象のアプリケーションと一致するように変更します。</target>
        </trans-unit>
        <trans-unit id="8222ecd09879a288cf29b6e9cc85ba14324321ef" translate="yes" xml:space="preserve">
          <source>Changing browser preferences:</source>
          <target state="translated">ブラウザの環境設定を変更します。</target>
        </trans-unit>
        <trans-unit id="1f068e5ae02669bb727f7da73d357bc2e22aa692" translate="yes" xml:space="preserve">
          <source>Changing the Browserify options lets you:</source>
          <target state="translated">Browserify のオプションを変更することで可能になります。</target>
        </trans-unit>
        <trans-unit id="f448405e7e77b87d4af0899aad87267f2b9de4ea" translate="yes" xml:space="preserve">
          <source>Check a custom property</source>
          <target state="translated">カスタムプロパティをチェックする</target>
        </trans-unit>
        <trans-unit id="dfa5e8a16c90c35d61537b6b69609b6aad883ea9" translate="yes" xml:space="preserve">
          <source>Check a token</source>
          <target state="translated">トークンをチェックする</target>
        </trans-unit>
        <trans-unit id="e50fa5ae6d6d5bcdbff5e8ef413067e159d7fccc" translate="yes" xml:space="preserve">
          <source>Check all checkboxes</source>
          <target state="translated">すべてのチェックボックスにチェックを入れる</target>
        </trans-unit>
        <trans-unit id="d32e13a4dc0d0ff2ccb96d057fcab5edef3cfdc4" translate="yes" xml:space="preserve">
          <source>Check an invisible checkbox</source>
          <target state="translated">見えないチェックボックスにチェックを入れる</target>
        </trans-unit>
        <trans-unit id="1f05d6c10010077750e1fb995ef82708b37c6245" translate="yes" xml:space="preserve">
          <source>Check case sensitivity</source>
          <target state="translated">ケースの感度をチェック</target>
        </trans-unit>
        <trans-unit id="61f4e80ba9d1f4a5d58f0877fb993108dc025089" translate="yes" xml:space="preserve">
          <source>Check checkbox(es) or radio(s).</source>
          <target state="translated">チェックボックスまたはラジオにチェックを入れます。</target>
        </trans-unit>
        <trans-unit id="4f3560bedeca72f288dc3b5f1567d03a628ac068" translate="yes" xml:space="preserve">
          <source>Check location for query params and pathname</source>
          <target state="translated">クエリのパラメータとパス名の場所をチェック</target>
        </trans-unit>
        <trans-unit id="4768131d00ff541288147c29afe6d12a0f388e57" translate="yes" xml:space="preserve">
          <source>Check other sources of truth (like your server or database).</source>
          <target state="translated">他の真実のソース(サーバーやデータベースなど)をチェックします。</target>
        </trans-unit>
        <trans-unit id="92fe2487cb19e7830005cf2f0ab6baab6da121e9" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://glebbahmutov.com/blog/keep-passwords-secret-in-e2e-tests/&quot;&gt;this blog&lt;/a&gt; to explore another way to keep passwords secret within your tests.</source>
          <target state="translated">&lt;a href=&quot;https://glebbahmutov.com/blog/keep-passwords-secret-in-e2e-tests/&quot;&gt;このブログ&lt;/a&gt;をチェックして、テスト内でパスワードを秘密にしておく別の方法を探ってください。</target>
        </trans-unit>
        <trans-unit id="82ec9274688488306135ddaf48212b3e595053fb" translate="yes" xml:space="preserve">
          <source>Check out our &amp;lsquo;XHR Web Forms&amp;rsquo; example recipe using &lt;code&gt;cy.route()&lt;/code&gt; to simulate a &lt;code&gt;503&lt;/code&gt; on &lt;code&gt;POST&lt;/code&gt; to login</source>
          <target state="translated">&lt;code&gt;cy.route()&lt;/code&gt; を使用して「XHR Web Forms」のサンプルレシピを確認し、ログインする &lt;code&gt;POST&lt;/code&gt; で &lt;code&gt;503&lt;/code&gt; をシミュレートします</target>
        </trans-unit>
        <trans-unit id="ae68238d2931f0991c3b6b6f22786eb45b69fa69" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;After Screenshot API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">このイベントの使用方法を説明した&lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;後のスクリーンショットAPIドキュメント&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="286570bd4a3d3cbc1beb60886c8c179abd17a319" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/browser-launch-api&quot;&gt;Browser Launch API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">このイベントの使用方法を説明した&lt;a href=&quot;../../api/plugins/browser-launch-api&quot;&gt;ブラウザ起動APIドキュメント&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="c51d0d90ced866ef2875f4023c58a1fa429c5dcf" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/configuration-api&quot;&gt;Configuration API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">このイベントの使用方法を説明した&lt;a href=&quot;../../api/plugins/configuration-api&quot;&gt;構成APIドキュメント&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="bf5361a399e5c488a33498468764383ba37c9adb" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;File Preprocessor API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">このイベントの使用方法を説明した&lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;File Preprocessor APIドキュメント&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="b0bc22ca4006e68be0287faab8c505b2a983cac7" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../guides/parallelization&quot;&gt;guide on parallelizing runs&lt;/a&gt; and when to use the &lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt;&lt;code&gt;--ci-build-id&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">&lt;a href=&quot;../guides/parallelization&quot;&gt;実行の並列&lt;/a&gt;化と&lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt; &lt;code&gt;--ci-build-id&lt;/code&gt; &lt;/a&gt;オプションを使用するタイミングに関するガイドを確認してください。</target>
        </trans-unit>
        <trans-unit id="4372d5c1ff331c99e413a0c0158593500e7f4d08" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../guides/tooling/plugins-guide&quot;&gt;Plugins Guide&lt;/a&gt; or our &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API docs&lt;/a&gt; for writing a plugin.</source>
          <target state="translated">&lt;a href=&quot;../guides/tooling/plugins-guide&quot;&gt;プラグインの作成については&lt;/a&gt;、プラグインガイドまたは&lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;APIドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="61c198a6e38d282d9792429e6a97d9393471d5ca" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;https://docs.cypress.io/guides/tooling/plugins-guide.html&quot;&gt;Plugins Guide&lt;/a&gt; or our &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API docs&lt;/a&gt; for writing a plugin.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/tooling/plugins-guide.html&quot;&gt;プラグインの作成については&lt;/a&gt;、プラグインガイドまたは&lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;APIドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="c0777442410cab66b3f5e9f950dca694e91849fa" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;https://github.com/cypress-io/eslint-plugin-cypress&quot;&gt;Cypress ESLint plugin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/eslint-plugin-cypress&quot;&gt;サイプレスのESLintプラグインを&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="52ba348f92ec1a2bf83ba118a90e17c390a5fab7" translate="yes" xml:space="preserve">
          <source>Check out our example recipe extending chai with new assertions.</source>
          <target state="translated">新しいアサーションでチャイを拡張したレシピ例をチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="e9b767f3449382c93b6af483e67e9ea4f4103526" translate="yes" xml:space="preserve">
          <source>Check out our example recipe of logging in by typing username and password in HTML web forms</source>
          <target state="translated">HTMLのWebフォームにユーザー名とパスワードを入力してログインする例のレシピをチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="b1d210aaba6af88f042bef8e02a138a36c9e3ba2" translate="yes" xml:space="preserve">
          <source>Check out our example recipe on testing &lt;code&gt;window.fetch&lt;/code&gt; using &lt;code&gt;.its()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; を使用したwindow.fetchのテスト &lt;code&gt;window.fetch&lt;/code&gt; レシピ例を確認してください。</target>
        </trans-unit>
        <trans-unit id="0070f68ee4c88cb3cac34493132a51937e6c55ad" translate="yes" xml:space="preserve">
          <source>Check out our example recipe on testing hover and working with hidden elements</source>
          <target state="translated">ホバーのテストと隠し要素を使った作業についてのレシピ例をチェックしてください。</target>
        </trans-unit>
        <trans-unit id="102ab3840ae24102693d4ee70faba36caa9f93fd" translate="yes" xml:space="preserve">
          <source>Check out our example recipe showing how to download and validate CSV and Excel files.</source>
          <target state="translated">CSVとExcelファイルをダウンロードして検証する方法を示す例のレシピをチェックしてください。</target>
        </trans-unit>
        <trans-unit id="06702834e58a81747257fb0ff404f4646b17c53c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe testing spying, stubbing and time</source>
          <target state="translated">スパイ、スタブ、時間をテストするレシピの例をチェックしてください。</target>
        </trans-unit>
        <trans-unit id="7cb3ce610a9707b35468d1778ec5be6b8b67d2c3" translate="yes" xml:space="preserve">
          <source>Check out our example recipe testing spying, stubbing and time.</source>
          <target state="translated">スパイ、スタブ、時間をテストするレシピ例をチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="5c934a22639debdd62befc7a82f85a5b57fc1fa6" translate="yes" xml:space="preserve">
          <source>Check out our example recipe triggering mouse and drag events to test drag and drop</source>
          <target state="translated">ドラッグ&amp;ドロップをテストするためにマウスとドラッグイベントをトリガーするレシピの例をチェックしてください。</target>
        </trans-unit>
        <trans-unit id="298273458e18e8e4608b67253b99d4e09c98258c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.fixture()&lt;/code&gt; to bootstrap data for our application.</source>
          <target state="translated">&lt;code&gt;cy.fixture()&lt;/code&gt; を使用してアプリケーションのデータをブートストラップするサンプルレシピを確認してください。</target>
        </trans-unit>
        <trans-unit id="a0b7d14f192ac95e2f293545c9c9da33dd7af366" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.request()&lt;/code&gt; for HTML web forms</source>
          <target state="translated">HTML Webフォームに &lt;code&gt;cy.request()&lt;/code&gt; を使用したレシピ例を確認してください</target>
        </trans-unit>
        <trans-unit id="8765838968fb1c10fc04109747e1b70375eb877a" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.route()&lt;/code&gt; to POST for login in HTML web forms</source>
          <target state="translated">HTML Webフォームにログインするために &lt;code&gt;cy.route()&lt;/code&gt; を使用してPOST するサンプルレシピを確認してください。</target>
        </trans-unit>
        <trans-unit id="b5faae065c8bab1b4694249567a38a6935110d0c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; to test clicking on a link without opening in a new tab</source>
          <target state="translated">新しいタブで開かずにリンクのクリックをテストするために &lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; を使用するサンプルレシピを確認してください</target>
        </trans-unit>
        <trans-unit id="16bb5114dd6875c392e5649e6af9c792cea778cd" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('show')&lt;/code&gt; and &lt;code&gt;cy.invoke('trigger')&lt;/code&gt; to click an element that is only visible on hover</source>
          <target state="translated">&lt;code&gt;cy.invoke('show')&lt;/code&gt; と &lt;code&gt;cy.invoke('trigger')&lt;/code&gt; を使用して、ホバーでのみ表示される要素をクリックするレシピ例を確認してください</target>
        </trans-unit>
        <trans-unit id="c6f3335e78ca0eeab36fff282ecf4f376fe5a662" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('text')&lt;/code&gt; to test against HTML content in &amp;lsquo;Bootstrapping your App&amp;rsquo;</source>
          <target state="translated">&lt;code&gt;cy.invoke('text')&lt;/code&gt; を使用して「アプリのブートストラップ」でHTMLコンテンツをテストするサンプルレシピを確認してください</target>
        </trans-unit>
        <trans-unit id="cb040939bb0d48e5c9567dae081783d1f9b6b468" translate="yes" xml:space="preserve">
          <source>Check out our example recipes for &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;unit testing&lt;/a&gt; and &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Unit-Testing&quot;&gt;unit testing React components&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;ユニットテスト&lt;/a&gt;と&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Unit-Testing&quot;&gt;Reactコンポーネントのユニットテストの&lt;/a&gt;レシピ例をご覧ください。</target>
        </trans-unit>
        <trans-unit id="bd3e75b3e26cef8f50ab48afe08c2033c68ea7db" translate="yes" xml:space="preserve">
          <source>Check out our example recipes using &lt;code&gt;cy.getCookie()&lt;/code&gt; to test &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in using HTML web forms&lt;/a&gt;, &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in using XHR web forms&lt;/a&gt; and &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in with single sign on&lt;/a&gt;</source>
          <target state="translated">使用して私たちの例のレシピチェックアウト &lt;code&gt;cy.getCookie()&lt;/code&gt; のテストに&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;HTMLのWebフォームを使用してログインし&lt;/a&gt;、&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;XHRのウェブフォーム使用してログイン&lt;/a&gt;し、&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;シングルサイン上でログを&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="144d8f82ec26f3470d0c20a09047cb7ce3b02584" translate="yes" xml:space="preserve">
          <source>Check out our example recipes using &lt;code&gt;cy.visit()&lt;/code&gt;&amp;lsquo;s &lt;code&gt;onBeforeLoad&lt;/code&gt; option to:</source>
          <target state="translated">次の &lt;code&gt;cy.visit()&lt;/code&gt; の &lt;code&gt;onBeforeLoad&lt;/code&gt; オプションを使用してサンプルレシピを確認してください。</target>
        </trans-unit>
        <trans-unit id="c65343a47883a3d046d980e83838ae5025ee993f" translate="yes" xml:space="preserve">
          <source>Check out our guide for working with spies, stubs, and clocks.</source>
          <target state="translated">スパイ、スタブ、時計を扱うためのガイドをチェックしてください。</target>
        </trans-unit>
        <trans-unit id="bbf99657b620f66bb8be3ff60e3326da8ce19528" translate="yes" xml:space="preserve">
          <source>Check out our guide to writing and organizing tests.</source>
          <target state="translated">テストの書き方や整理の仕方をチェックしてみましょう。</target>
        </trans-unit>
        <trans-unit id="76902887dbb29462ab50a1f72e3e4927bfa56b7f" translate="yes" xml:space="preserve">
          <source>Check out our recipe using &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;ES2015 and CommonJS modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;ES2015およびCommonJSモジュール&lt;/a&gt;を使用してレシピを確認してください。</target>
        </trans-unit>
        <trans-unit id="8cfe59349c9cb95a325115251fac516351c1ca53" translate="yes" xml:space="preserve">
          <source>Check that Chrome specific styles are applied</source>
          <target state="translated">Chrome特有のスタイルが適用されていることを確認する</target>
        </trans-unit>
        <trans-unit id="121b5622e02d6e75f99cc9af32ea26833a7911ad" translate="yes" xml:space="preserve">
          <source>Check the checkboxes with the values &amp;lsquo;ga&amp;rsquo; and &amp;lsquo;ca&amp;rsquo;</source>
          <target state="translated">値「ga」と「ca」のチェックボックスをオンにします</target>
        </trans-unit>
        <trans-unit id="d21db9ce409aea20bb57fa47caf8469d0091c897" translate="yes" xml:space="preserve">
          <source>Check the checkboxes with the values &amp;lsquo;subscribe&amp;rsquo; and &amp;lsquo;accept&amp;rsquo;</source>
          <target state="translated">値が「subscribe」および「accept」のチェックボックスをオンにします</target>
        </trans-unit>
        <trans-unit id="55921b8d3e5c24dfbea1f13d63a77430aaa43ba6" translate="yes" xml:space="preserve">
          <source>Check the element with id of &amp;lsquo;saveUserName&amp;rsquo;</source>
          <target state="translated">idが「saveUserName」の要素を確認してください</target>
        </trans-unit>
        <trans-unit id="3a547dcb1fef8a5633745d0e1bfe1ce7cc91ffb8" translate="yes" xml:space="preserve">
          <source>Check them out in &lt;a href=&quot;../references/configuration&quot;&gt;Configuration&lt;/a&gt;!</source>
          <target state="translated">&lt;a href=&quot;../references/configuration&quot;&gt;設定で&lt;/a&gt;確認してください！</target>
        </trans-unit>
        <trans-unit id="def993bb4bf6ee1b395f22333500dd821db19f5e" translate="yes" xml:space="preserve">
          <source>Check your Developer Tools Console for the actual error - it should be printed there.</source>
          <target state="translated">実際のエラーが表示されているかどうかは、Developer Tools Consoleで確認してください。</target>
        </trans-unit>
        <trans-unit id="0e541a2a7a257b0faf46be512c0eb02d487b617a" translate="yes" xml:space="preserve">
          <source>Checking your email to see if your server sent a &amp;ldquo;forgot password&amp;rdquo; email.</source>
          <target state="translated">メールをチェックして、サーバーが「パスワードを忘れた」メールを送信したかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="d3e9cd47db0cd4d5d3988727ebbd002b5963bffe" translate="yes" xml:space="preserve">
          <source>Child Commands</source>
          <target state="translated">子コマンド</target>
        </trans-unit>
        <trans-unit id="a645ef9de2489c3237beef1a5012a7941d8fffec" translate="yes" xml:space="preserve">
          <source>Child commands are always chained off of a &lt;strong&gt;parent&lt;/strong&gt; command, or another &lt;strong&gt;child&lt;/strong&gt; command.</source>
          <target state="translated">子コマンドは常に、&lt;strong&gt;親&lt;/strong&gt;コマンドまたは別の&lt;strong&gt;子&lt;/strong&gt;コマンドから切り離されます。</target>
        </trans-unit>
        <trans-unit id="21def181d7294faef1558f010f6a68c1edc82a8c" translate="yes" xml:space="preserve">
          <source>Choose to associate &lt;strong&gt;All repositories&lt;/strong&gt; or only select GitHub repositories with your Cypress GitHub App installation.</source>
          <target state="translated">&lt;strong&gt;すべてのリポジトリ&lt;/strong&gt;を関連付けるか、GitHubリポジトリのみをサイプレスGitHubアプリのインストールに関連付けるかを選択します。</target>
        </trans-unit>
        <trans-unit id="6d7d90f6786892c846565de2483085c6bcc3d6cb" translate="yes" xml:space="preserve">
          <source>Choose to not fail on non-zero exit and assert on code and stderr</source>
          <target state="translated">ゼロ以外の終了時には失敗しないようにし、コードと標準エラー時にはアサートするように選択します。</target>
        </trans-unit>
        <trans-unit id="cd582387a11c5e151923c7fd85abdb2884edf320" translate="yes" xml:space="preserve">
          <source>Choose whether this project is Public or Private.</source>
          <target state="translated">このプロジェクトが公共か民間かを選択してください。</target>
        </trans-unit>
        <trans-unit id="aa8351b817c778f9ed8a7afc280131e97fb365f6" translate="yes" xml:space="preserve">
          <source>Choose who owns the project. You can personally own it or select an organization you&amp;rsquo;ve created. If you do not have any organizations, click &lt;strong&gt;Create organization&lt;/strong&gt;. Organizations work just like they do in GitHub. They enable you to separate your personal and work projects. &lt;a href=&quot;organizations&quot;&gt;Read more about organizations&lt;/a&gt;.</source>
          <target state="translated">プロジェクトの所有者を選択します。個人的に所有することも、作成した組織を選択することもできます。組織がない場合は、[ &lt;strong&gt;組織の作成&lt;/strong&gt; ]をクリックし&lt;strong&gt;ます&lt;/strong&gt;。組織はGitHubと同じように機能します。これらを使用すると、個人プロジェクトと作業プロジェクトを分離できます。&lt;a href=&quot;organizations&quot;&gt;組織の詳細をご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="218e75c7a912404b048fff0747e40108873b6334" translate="yes" xml:space="preserve">
          <source>Chrome</source>
          <target state="translated">Chrome</target>
        </trans-unit>
        <trans-unit id="f4fa3ab76e5e90db09cca798babcdad498d4e5a5" translate="yes" xml:space="preserve">
          <source>Chrome Browsers</source>
          <target state="translated">クロームブラウザ</target>
        </trans-unit>
        <trans-unit id="ebacd7ba7696aa6ea2a56950abaffb0cdd6bb789" translate="yes" xml:space="preserve">
          <source>Chrome extension whitelisting</source>
          <target state="translated">Chrome 拡張機能のホワイトリスト化</target>
        </trans-unit>
        <trans-unit id="259443eb4b18369de67344ac935d9792e6e16d38" translate="yes" xml:space="preserve">
          <source>Chrome, Chromium, or Canary</source>
          <target state="translated">クロム、クロム、カナリア</target>
        </trans-unit>
        <trans-unit id="32166e83eed3818d45d2cbecbe2e6cf85528e265" translate="yes" xml:space="preserve">
          <source>Chromium</source>
          <target state="translated">Chromium</target>
        </trans-unit>
        <trans-unit id="04430e870444d2dad6fbd9f658cce21d46c2c802" translate="yes" xml:space="preserve">
          <source>Chromium-based browsers</source>
          <target state="translated">Chromium ベースのブラウザ</target>
        </trans-unit>
        <trans-unit id="1cc7820a08e28aa22dd2e6db74a83b75abc240f5" translate="yes" xml:space="preserve">
          <source>Circle</source>
          <target state="translated">Circle</target>
        </trans-unit>
        <trans-unit id="743a2d5609a7296d3d734c6e0b1f6d37a8c23170" translate="yes" xml:space="preserve">
          <source>CircleCI</source>
          <target state="translated">CircleCI</target>
        </trans-unit>
        <trans-unit id="6d5178edf78ebc81db787a70d73b948726802a59" translate="yes" xml:space="preserve">
          <source>CircleCI Cypress Orb</source>
          <target state="translated">CircleCI サイプレスオーブ</target>
        </trans-unit>
        <trans-unit id="0bda454dd959b1a0bf2d16693184fd413629861a" translate="yes" xml:space="preserve">
          <source>Clarified on errors related to not being able to run in CI. Previously there was a &amp;ldquo;catch all&amp;rdquo; error indicating your Cypress API Key was invalid. This was oftentimes incorrect. More specific errors have been added.</source>
          <target state="translated">CIで実行できないことに関連するエラーについて説明しました。以前は、Cypress APIキーが無効であることを示す「すべてをキャッチ」エラーがありました。これはしばしば不正確でした。より具体的なエラーが追加されました。</target>
        </trans-unit>
        <trans-unit id="f0d4ea6c62e18a1e68830b556b756bc25664729b" translate="yes" xml:space="preserve">
          <source>Clarified the &amp;ldquo;Default Message&amp;rdquo; page when you have not &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; your application yet.</source>
          <target state="translated">アプリケーションをまだ&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; し&lt;/a&gt;ていない場合の「デフォルトメッセージ」ページを明確にしました。</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="83d4ab2218e544353bc7c879f0f5971c5c7e5f33" translate="yes" xml:space="preserve">
          <source>Cleaned up the URL by removing some unused content.</source>
          <target state="translated">一部の未使用コンテンツを削除してURLをクリーンアップしました。</target>
        </trans-unit>
        <trans-unit id="a6a8e81a4fc837ec2fc226c8ea0d75c7628811be" translate="yes" xml:space="preserve">
          <source>Clear App Data</source>
          <target state="translated">アプリのデータをクリア</target>
        </trans-unit>
        <trans-unit id="8138a3e59340c16a058710e4394584afda1a8a3e" translate="yes" xml:space="preserve">
          <source>Clear Cypress cache</source>
          <target state="translated">サイプレスのキャッシュをクリア</target>
        </trans-unit>
        <trans-unit id="a6db0cada346552ec5eae029c9e1051d55fcf5e6" translate="yes" xml:space="preserve">
          <source>Clear a cookie after logging in</source>
          <target state="translated">ログイン後にクッキーをクリアする</target>
        </trans-unit>
        <trans-unit id="c12d3b38c18c36e38c58610a06ad7d4f4f8db7e5" translate="yes" xml:space="preserve">
          <source>Clear a specific browser cookie.</source>
          <target state="translated">特定のブラウザのクッキーをクリアします。</target>
        </trans-unit>
        <trans-unit id="3ca258140fb71fc08b2e62d3d742fb818922dc81" translate="yes" xml:space="preserve">
          <source>Clear all browser cookies for current domain and subdomain.</source>
          <target state="translated">現在のドメインとサブドメインのすべてのブラウザのクッキーをクリアします。</target>
        </trans-unit>
        <trans-unit id="9ef0896259882d1abdaf804bdc64b7450bc968d9" translate="yes" xml:space="preserve">
          <source>Clear all cookies after logging in</source>
          <target state="translated">ログイン後にすべてのクッキーをクリアする</target>
        </trans-unit>
        <trans-unit id="6a071e15fb440304023d8103523c431894ca230f" translate="yes" xml:space="preserve">
          <source>Clear all localStorage</source>
          <target state="translated">すべての localStorage をクリア</target>
        </trans-unit>
        <trans-unit id="487f99802f33ae77928cf631445338abdeb3542b" translate="yes" xml:space="preserve">
          <source>Clear all localStorage matching &lt;code&gt;/app-/&lt;/code&gt; RegExp</source>
          <target state="translated">&lt;code&gt;/app-/&lt;/code&gt; RegExpに一致するすべてのlocalStorageをクリアします</target>
        </trans-unit>
        <trans-unit id="87462777e65e17c8721efd27787a17e45f675eb3" translate="yes" xml:space="preserve">
          <source>Clear data in localStorage for current domain and subdomain.</source>
          <target state="translated">現在のドメインとサブドメインのデータをlocalStorageにクリアします。</target>
        </trans-unit>
        <trans-unit id="b3b763845e3000c5d17c6b2c69eca72c64c397e8" translate="yes" xml:space="preserve">
          <source>Clear localStorage with the key &amp;lsquo;appName&amp;rsquo;</source>
          <target state="translated">キー「appName」でlocalStorageをクリアします</target>
        </trans-unit>
        <trans-unit id="418791d7f5458588627ad5ef88fcbb506389e57a" translate="yes" xml:space="preserve">
          <source>Clear the contents of the Cypress cache. This is useful when you want Cypress to clear out all installed versions of Cypress that may be cached on your machine. After running this command, you will need to run &lt;code&gt;cypress install&lt;/code&gt; before running Cypress again.</source>
          <target state="translated">サイプレスキャッシュの内容をクリアします。これは、マシンにキャッシュされている可能性のあるサイプレスのすべてのインストール済みバージョンをサイプレスに消去させる場合に役立ちます。このコマンドを実行した後、サイプレスを再度実行 &lt;code&gt;cypress install&lt;/code&gt; 前に、サイプレスインストールを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="096b6f6e0e4881f86d8f079c46286c1b088fed27" translate="yes" xml:space="preserve">
          <source>Clear the input and type a new value</source>
          <target state="translated">入力をクリアして新しい値を入力します。</target>
        </trans-unit>
        <trans-unit id="e705e46ce8ca0eeadd70b31d6169e90a8aa809ae" translate="yes" xml:space="preserve">
          <source>Clear the value of an &lt;code&gt;input&lt;/code&gt; or &lt;code&gt;textarea&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; または &lt;code&gt;textarea&lt;/code&gt; の値をクリアします。</target>
        </trans-unit>
        <trans-unit id="9abd58c373f91bc8e076913f544b5f307d4214fc" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo;</source>
          <target state="translated">「次へ」をクリックします</target>
        </trans-unit>
        <trans-unit id="598d69e1e4c2af4e1dc4e74321c3ce6681b167df" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo; again</source>
          <target state="translated">もう一度「次へ」をクリックします</target>
        </trans-unit>
        <trans-unit id="1b6215eab430a61828fd367ea9c12ef226542655" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo; again, then &amp;lsquo;Resume&amp;rsquo;</source>
          <target state="translated">もう一度[次へ]をクリックし、[再開]をクリックします</target>
        </trans-unit>
        <trans-unit id="52ab6f1b8c88370737f264d45b627b49475818c1" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create New Key&lt;/strong&gt;. A new key will be automatically generated for your project.</source>
          <target state="translated">[ &lt;strong&gt;Create New Key]を&lt;/strong&gt;クリックし&lt;strong&gt;ます&lt;/strong&gt;。プロジェクトの新しいキーが自動的に生成されます。</target>
        </trans-unit>
        <trans-unit id="6061dade670fc2fa48f86af4e96c8d10313b7c09" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Delete&lt;/strong&gt; beside the record key you want to delete.</source>
          <target state="translated">&lt;strong&gt;削除&lt;/strong&gt;するレコードキーの横にある[ &lt;strong&gt;削除]を&lt;/strong&gt;クリックします。</target>
        </trans-unit>
        <trans-unit id="e00e0bffead7622e972ea8ef3df7b0b3d975d274" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Set up Project to Record&lt;/strong&gt;.</source>
          <target state="translated">[ &lt;strong&gt;記録するプロジェクトの設定]を&lt;/strong&gt;クリックします。</target>
        </trans-unit>
        <trans-unit id="c340e5a9ab9c7a60a37dd0f3e5716c3c3abcc2fc" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Setup Project&lt;/strong&gt;.</source>
          <target state="translated">[ &lt;strong&gt;セットアッププロジェクト]を&lt;/strong&gt;クリックし&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="94298b3a9fbede230280ca097e6943ce959fa1bc" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Users&lt;/strong&gt;, then &lt;strong&gt;Invite User&lt;/strong&gt;. &lt;em&gt;Note: you must have the &lt;a href=&quot;#User-roles&quot;&gt;role of 'owner' or 'admin'&lt;/a&gt; to invite users.&lt;/em&gt;</source>
          <target state="translated">[ &lt;strong&gt;ユーザー&lt;/strong&gt;&lt;strong&gt;]を&lt;/strong&gt;クリックし、[ &lt;strong&gt;ユーザー&lt;/strong&gt;を&lt;strong&gt;招待]を&lt;/strong&gt;クリックし&lt;strong&gt;ます&lt;/strong&gt;。&lt;em&gt;注：ユーザーを招待するに&lt;a href=&quot;#User-roles&quot;&gt;は、「所有者」または「管理者」の役割が&lt;/a&gt;必要です。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92ef54400efe775b2ca14012b53ad3792e80d7da" translate="yes" xml:space="preserve">
          <source>Click a DOM element.</source>
          <target state="translated">DOM 要素をクリックします。</target>
        </trans-unit>
        <trans-unit id="9b3fcb2b86daccb3720c9ae62f6a8a56e3941d71" translate="yes" xml:space="preserve">
          <source>Click a link in a nav</source>
          <target state="translated">ナビ内のリンクをクリック</target>
        </trans-unit>
        <trans-unit id="5467898d66466265eb5e6b64ab4791eb71104d92" translate="yes" xml:space="preserve">
          <source>Click all buttons found on the page</source>
          <target state="translated">ページにあるすべてのボタンをクリックします。</target>
        </trans-unit>
        <trans-unit id="c543376eaadfdb754045d7563ba32dd370cbc356" translate="yes" xml:space="preserve">
          <source>Click all elements with id starting with &amp;lsquo;btn&amp;rsquo;</source>
          <target state="translated">'btn'で始まるIDを持つすべての要素をクリックします</target>
        </trans-unit>
        <trans-unit id="419965f25c82bbbe5092bb182e2f07a13ea2fec4" translate="yes" xml:space="preserve">
          <source>Click events are now issued in the exact center of an element (taking into account 2d transforms) and provide the coordinates in the command console and in the actual event</source>
          <target state="translated">クリックイベントは、要素の正確な中心で発行されるようになりました(2次元変換を考慮しています)。</target>
        </trans-unit>
        <trans-unit id="3eefc209f30a5c33ca34d3dd8bc36144b5b8242b" translate="yes" xml:space="preserve">
          <source>Click events are now replicated &lt;em&gt;almost&lt;/em&gt; identically to the W3C click spec. They should behave for all intents and purposes, identically to real clicks in the browser.</source>
          <target state="translated">クリックイベントは、W3Cクリック仕様と&lt;em&gt;ほぼ&lt;/em&gt;同じように複製&lt;em&gt;される&lt;/em&gt;ようになりました。これらは、ブラウザでの実際のクリックと同じように、すべての意図と目的で動作する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e6b04f01e1f5a0bc6cfdffc3d40e6fcee740b2c" translate="yes" xml:space="preserve">
          <source>Click events now display event information about the &lt;code&gt;mousedown&lt;/code&gt; / &lt;code&gt;mouseup&lt;/code&gt; / &lt;code&gt;click&lt;/code&gt; default action + propagation in the command console.</source>
          <target state="translated">クリックイベントは、 &lt;code&gt;mousedown&lt;/code&gt; / &lt;code&gt;mouseup&lt;/code&gt; / &lt;code&gt;click&lt;/code&gt; デフォルトアクション+伝播に関するイベント情報をコマンドコンソールに表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="bd422ee18fc1fb0b047f765afb20776ce449d5d5" translate="yes" xml:space="preserve">
          <source>Click events now take into account whether the associated element is being covered up by another element, and will retry or fail with an exact error message if the click was unable to be issued due to this reason.</source>
          <target state="translated">クリックイベントは、関連付けられた要素が他の要素によって隠蔽されているかどうかを考慮するようになり、この理由でクリックを発行できなかった場合は、正確なエラーメッセージを表示して再試行または失敗します。</target>
        </trans-unit>
        <trans-unit id="3f3c88fcab7f5f3f182a08f90706ede6e6268f80" translate="yes" xml:space="preserve">
          <source>Click events will issue the click to the topmost element based on the click coordinates and not necessarily to the element you requested to e clicked (which simulates exactly how a real click works). If this happens it is noted in the command console and provides the &lt;code&gt;Actual Element Clicked&lt;/code&gt;.</source>
          <target state="translated">クリックイベントは、クリック座標に基づいて最上位の要素にクリックを発行します。必ずしもクリックするように要求した要素ではありません（実際のクリックの動作を正確にシミュレートします）。これが発生した場合は、コマンドコンソールに表示され、 &lt;code&gt;Actual Element Clicked&lt;/code&gt; た実際の要素が表示されます。</target>
        </trans-unit>
        <trans-unit id="36e220a74b271d8eb88adb9bf598b1f366ea7fbe" translate="yes" xml:space="preserve">
          <source>Click events will now intelligently provide &lt;code&gt;focus&lt;/code&gt; to the first focusable element on the stack at the click coordinates, or will give &lt;code&gt;focus&lt;/code&gt; to the window.</source>
          <target state="translated">クリックイベントは、クリック座標でスタック上の最初のフォーカス可能な要素にインテリジェントに &lt;code&gt;focus&lt;/code&gt; を提供するか、ウィンドウに &lt;code&gt;focus&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="4304df7b3622bb75a1caddfde8624611ee0cf5a4" translate="yes" xml:space="preserve">
          <source>Click it.</source>
          <target state="translated">それをクリックしてください。</target>
        </trans-unit>
        <trans-unit id="ea5282e32e71a8ee34394bdfc6dad20a963de697" translate="yes" xml:space="preserve">
          <source>Click link containing text</source>
          <target state="translated">テキストを含むリンクをクリック</target>
        </trans-unit>
        <trans-unit id="4d2ff8b106942392561b1a48333b5c5716140885" translate="yes" xml:space="preserve">
          <source>Click on it</source>
          <target state="translated">それをクリックしてください。</target>
        </trans-unit>
        <trans-unit id="b572ed50787e22e1a6e5dd0119b2848e714bc82a" translate="yes" xml:space="preserve">
          <source>Click on the &lt;strong&gt;Runs&lt;/strong&gt; tab of your project within the &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner&quot;&gt;テストランナー&lt;/a&gt;内でプロジェクトの[ &lt;strong&gt;実行&lt;/strong&gt; ]タブをクリックします。</target>
        </trans-unit>
        <trans-unit id="84160a3d588c297d3068218c5e5f6dfd8c536c64" translate="yes" xml:space="preserve">
          <source>Click on the element and its selector will appear at the top. From there, you can copy it to your clipboard () or print it to the console ().</source>
          <target state="translated">要素をクリックすると、そのセレクタが上部に表示されます。そこからクリップボード()にコピーしたり、コンソール()に印刷したりすることができます。</target>
        </trans-unit>
        <trans-unit id="e9e8aca9ba1b3e7eee41815434377173d1d45726" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;Proxy Settings&amp;rdquo; section to expand it and view the proxy settings that Cypress is currently using.</source>
          <target state="translated">「プロキシ設定」セクションをクリックして展開し、サイプレスが現在使用しているプロキシ設定を表示します。</target>
        </trans-unit>
        <trans-unit id="363442ac59194a543947af27cbec8013bc3db051" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;Settings&amp;rdquo; tab.</source>
          <target state="translated">「設定」タブをクリックします。</target>
        </trans-unit>
        <trans-unit id="3f3448b18fc56f113306514ebe1dd13d9d311959" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Install the Cypress GitHub App&lt;/strong&gt; button.</source>
          <target state="translated">[ &lt;strong&gt;サイプレスGitHubアプリのインストール&lt;/strong&gt; ]ボタンをクリックします。</target>
        </trans-unit>
        <trans-unit id="999575ef3960ae72d96b1dd0218e0e89fe9ccca9" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Install&lt;/strong&gt; button to complete the installation.</source>
          <target state="translated">[ &lt;strong&gt;インストール&lt;/strong&gt; ]ボタンをクリックして、&lt;strong&gt;インストール&lt;/strong&gt;を完了します。</target>
        </trans-unit>
        <trans-unit id="cb6ea07ceea62f07cc7a898341af41489d4993dd" translate="yes" xml:space="preserve">
          <source>Click the bottom center of the button.</source>
          <target state="translated">ボタンの下中央をクリックします。</target>
        </trans-unit>
        <trans-unit id="41a0dcc2a8a2fb5131ec50b956f28a100a8d5891" translate="yes" xml:space="preserve">
          <source>Click the button</source>
          <target state="translated">ボタンをクリック</target>
        </trans-unit>
        <trans-unit id="e289e57aa6e4d147925d3aa745b5da18b71b1df9" translate="yes" xml:space="preserve">
          <source>Click the top right corner of the button.</source>
          <target state="translated">ボタンの右上をクリックします。</target>
        </trans-unit>
        <trans-unit id="6b474668db39e948b35628fa8f54182cfccc937b" translate="yes" xml:space="preserve">
          <source>Click with key combinations</source>
          <target state="translated">キーの組み合わせでクリック</target>
        </trans-unit>
        <trans-unit id="722eae337c872677d616cb3599cb3d2e61ab5f27" translate="yes" xml:space="preserve">
          <source>Clicking giant yellow CypressError now displays associated XHR error in the console.</source>
          <target state="translated">巨大な黄色のCypressErrorをクリックすると、コンソールに関連するXHRエラーが表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="1f313222e0d8617915fd06f50a62cb3435598878" translate="yes" xml:space="preserve">
          <source>Clicking on Commands</source>
          <target state="translated">コマンドをクリックする</target>
        </trans-unit>
        <trans-unit id="b4a49650736fe53e5b286ec6a87d5e1b71843164" translate="yes" xml:space="preserve">
          <source>Clicking on svg elements is now working. 3.0.2 introduced a bug that would throw an &amp;lsquo;illegal invocation&amp;rsquo; error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2245&quot;&gt;#2245&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2252&quot;&gt;#2252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2258&quot;&gt;#2258&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2277&quot;&gt;#2277&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2288&quot;&gt;#2288&lt;/a&gt;.</source>
          <target state="translated">svg要素のクリックが機能するようになりました。3.0.2では、「不正な呼び出し」エラーをスローするバグが導入されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2245&quot;&gt;＃2245&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2252&quot;&gt;＃2252&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2258&quot;&gt;＃2258&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2277&quot;&gt;＃2277&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2288&quot;&gt;＃2288を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="ec5c2961cc9b10e26a2ce96cf3dd58994278ba71" translate="yes" xml:space="preserve">
          <source>Clicking on tray twice will toggle hide/show of app.</source>
          <target state="translated">トレイを2回クリックすると、アプリの非表示/非表示が切り替わります。</target>
        </trans-unit>
        <trans-unit id="8a0f56afb4abdcba196fd871e341ac08ca369e94" translate="yes" xml:space="preserve">
          <source>Clicking the &amp;lsquo;reload&amp;rsquo; icon next to a test that does not have an ID will not work anymore. We&amp;rsquo;re reworking this feature to work without the presence of IDs.</source>
          <target state="translated">IDがないテストの横にある「再読み込み」アイコンをクリックしても機能しなくなります。IDがなくても機能するように、この機能を作り直しています。</target>
        </trans-unit>
        <trans-unit id="09c13b625e14ca6d25a024b6c1602df1f4121052" translate="yes" xml:space="preserve">
          <source>Clicking the URL in the header of the runner now opens that URL in a new tab.</source>
          <target state="translated">ランナーのヘッダーでURLをクリックすると、そのURLが新しいタブで開きます。</target>
        </trans-unit>
        <trans-unit id="7c5ffc1d9e226110bbc9b5c62b76f69aba310ad3" translate="yes" xml:space="preserve">
          <source>Client side rendering</source>
          <target state="translated">クライアント側レンダリング</target>
        </trans-unit>
        <trans-unit id="1bd3bd675d34fadf02958dffd39505acd40fd25c" translate="yes" xml:space="preserve">
          <source>Clip</source>
          <target state="translated">Clip</target>
        </trans-unit>
        <trans-unit id="04f6b3ea183eb9d70981161c4424a6cf525afd9f" translate="yes" xml:space="preserve">
          <source>Clock</source>
          <target state="translated">Clock</target>
        </trans-unit>
        <trans-unit id="de3521c3c0054dffb3a82eaf024be86e11df70b9" translate="yes" xml:space="preserve">
          <source>Close Cypress and open it up again</source>
          <target state="translated">サイプレスを閉じて再度開く</target>
        </trans-unit>
        <trans-unit id="f0851c9573d3ae28dc894b75ca322c550d8b5d7c" translate="yes" xml:space="preserve">
          <source>Closing the &lt;code&gt;Electron&lt;/code&gt; browser and then opening &lt;code&gt;Chrome&lt;/code&gt; no longer causes &lt;code&gt;cy.screenshot()&lt;/code&gt; to fail. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1820&quot;&gt;#1820&lt;/a&gt;.</source>
          <target state="translated">閉会 &lt;code&gt;Electron&lt;/code&gt; ブラウザを開いて、その後、 &lt;code&gt;Chrome&lt;/code&gt; をもはやすることは発生しません &lt;code&gt;cy.screenshot()&lt;/code&gt; 失敗します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1820&quot;&gt;＃1820を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="b614f87a591b0ca42f98c4c903babaaa97f1d6a4" translate="yes" xml:space="preserve">
          <source>Code Coverage</source>
          <target state="translated">コードカバレッジ</target>
        </trans-unit>
        <trans-unit id="040eeb16b23b04c8d2d3fee2350384b271b2b4cd" translate="yes" xml:space="preserve">
          <source>Code Coverage by Parcel Bundler</source>
          <target state="translated">小包バンドラーによるコードカバレッジ</target>
        </trans-unit>
        <trans-unit id="2cb78b9322acceba6db0cc469d6079f0eed92e27" translate="yes" xml:space="preserve">
          <source>Code Coverage for End-to-end Tests</source>
          <target state="translated">エンドツーエンドテストのコードカバレッジ</target>
        </trans-unit>
        <trans-unit id="7023311626b913aa5afafda321dc14a64019dcd3" translate="yes" xml:space="preserve">
          <source>Code Signed Mac App to prevent &amp;ldquo;Unidentified Developer&amp;rdquo; message on open.</source>
          <target state="translated">開いたときに「不明な開発者」メッセージが表示されないようにコード署名されたMacアプリ。</target>
        </trans-unit>
        <trans-unit id="4978477ab3935b5b6e023524251fc7bb2e84ca25" translate="yes" xml:space="preserve">
          <source>Code coverage as a guide</source>
          <target state="translated">ガイドとしてのコードカバレッジ</target>
        </trans-unit>
        <trans-unit id="80e6b7863e159a80e05622e61fae964550d29e14" translate="yes" xml:space="preserve">
          <source>Code put in a &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;beforeEach&lt;/code&gt; hook will &lt;strong&gt;always&lt;/strong&gt; run prior to the test - even if you refreshed Cypress in the middle of an existing one!</source>
          <target state="translated">コードは入れ &lt;code&gt;before&lt;/code&gt; または &lt;code&gt;beforeEach&lt;/code&gt; ますフック&lt;strong&gt;常に&lt;/strong&gt;既存のものの途中でサイプレスをリフレッシュしていても-試験前に実行します！</target>
        </trans-unit>
        <trans-unit id="18e638137f5e1a28e4d63b7a6426544f9e6a2f33" translate="yes" xml:space="preserve">
          <source>CodeShip Pro</source>
          <target state="translated">コードシッププロ</target>
        </trans-unit>
        <trans-unit id="d785696bebfac569ce1b1f94fd6d1bc7a3f3a180" translate="yes" xml:space="preserve">
          <source>Codeship</source>
          <target state="translated">Codeship</target>
        </trans-unit>
        <trans-unit id="97c94f954eb9f58c1655ab090be6e49d7268049f" translate="yes" xml:space="preserve">
          <source>Codeship Basic</source>
          <target state="translated">コードシップの基本</target>
        </trans-unit>
        <trans-unit id="58f58d40db364e7e6b3ae2eec1caba3d10e21c88" translate="yes" xml:space="preserve">
          <source>Codeship Pro</source>
          <target state="translated">コードシッププロ</target>
        </trans-unit>
        <trans-unit id="fe887c11920bb16f1c28e209c31bd85615adc335" translate="yes" xml:space="preserve">
          <source>CoffeeScript 2 is supported via modifying the default options for the Browserify preprocessor. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/663&quot;&gt;#663&lt;/a&gt;.</source>
          <target state="translated">CoffeeScript 2は、Browserifyプリプロセッサーのデフォルトオプションを変更することでサポートされます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/663&quot;&gt;＃663を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="99793b40d2d5fff667bcfcaa8b962c9192ef1e9b" translate="yes" xml:space="preserve">
          <source>CoffeeScript &lt;code&gt;1.x.x&lt;/code&gt;</source>
          <target state="translated">CoffeeScript &lt;code&gt;1.x.x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6901a8efa68307d9e355cc6c7ca62e0d8af1e914" translate="yes" xml:space="preserve">
          <source>Combine multiple tests into one larger test.</source>
          <target state="translated">複数のテストを1つの大きなテストに結合します。</target>
        </trans-unit>
        <trans-unit id="e5b04e05c73af01968b4654d51eff2b8ba162905" translate="yes" xml:space="preserve">
          <source>Combined End-to-end and Unit Test Coverage</source>
          <target state="translated">エンドツーエンドとユニットテストの組み合わせ</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="8ff8896b49f3d1c0e7ce0f971b1ef8365b84bae3" translate="yes" xml:space="preserve">
          <source>Command (that was issued)</source>
          <target state="translated">コマンド(発行されたもの</target>
        </trans-unit>
        <trans-unit id="e1c8f7963bdb6829fd956422fc053e3dbec7c2e4" translate="yes" xml:space="preserve">
          <source>Command &lt;a href=&quot;readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; assumes the file exists. If you need to read a file that might not exist, use &lt;code&gt;cy.task&lt;/code&gt;.</source>
          <target state="translated">コマンド&lt;a href=&quot;readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt;は、ファイルが存在することを前提としています。存在しない可能性のあるファイルを読み取る必要がある場合は、 &lt;code&gt;cy.task&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="51c8e955d851be7f51e3a8d58bdc9d8a8f6386a5" translate="yes" xml:space="preserve">
          <source>Command Errors</source>
          <target state="translated">コマンドエラー</target>
        </trans-unit>
        <trans-unit id="59b0754344014d9d6347724f39bcacbaf47c2e7d" translate="yes" xml:space="preserve">
          <source>Command Line</source>
          <target state="translated">コマンドライン</target>
        </trans-unit>
        <trans-unit id="3220e89e03807a3230e626ebb638ab3aee0cccfb" translate="yes" xml:space="preserve">
          <source>Command Log</source>
          <target state="translated">コマンドログ</target>
        </trans-unit>
        <trans-unit id="4fd8fb2de4aa579d5f4841bef35957e560af05e1" translate="yes" xml:space="preserve">
          <source>Command Logging</source>
          <target state="translated">コマンドロギング</target>
        </trans-unit>
        <trans-unit id="f6fe35e209171bf42b301a97ecb399ad5a56cfaf" translate="yes" xml:space="preserve">
          <source>Command line</source>
          <target state="translated">コマンドライン</target>
        </trans-unit>
        <trans-unit id="fe07bd93ba143721c82060ee8fb91bb757ebc871" translate="yes" xml:space="preserve">
          <source>Command line:</source>
          <target state="translated">コマンドライン。</target>
        </trans-unit>
        <trans-unit id="03bddc3c9792f64cb2680dc74695a9d456f661d6" translate="yes" xml:space="preserve">
          <source>Command logging has been upgraded to support &amp;ldquo;page events&amp;rdquo;, which are different than commands. Now events which happen (XHR/page load/url change/spies/stubs/mocks) log out visually differently and do not use a command number. This should be easier to parse what was a real command and what was a page event.</source>
          <target state="translated">コマンドロギングは、コマンドとは異なる「ページイベント」をサポートするようにアップグレードされました。発生するイベント（XHR /ページの読み込み/ URLの変更/スパイ/スタブ/モック）は、視覚的に異なる方法でログアウトし、コマンド番号を使用しません。これは、実際のコマンドとページイベントを解析する方が簡単です。</target>
        </trans-unit>
        <trans-unit id="6701ca218d2c0d22af562c6e7ae348de3902e333" translate="yes" xml:space="preserve">
          <source>Command logging now works even if no &lt;code&gt;cy&lt;/code&gt; commands have been issued. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/37&quot;&gt;#37&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; コマンドが発行されていなくても、コマンドロギングが機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/37&quot;&gt;＃37を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e39d4db9ae516a060510157749e62f6a09582713" translate="yes" xml:space="preserve">
          <source>Command options &lt;code&gt;exist&lt;/code&gt; / &lt;code&gt;visible&lt;/code&gt; / &lt;code&gt;length&lt;/code&gt; have been deprecated, these were confusing and limiting, and the same result can now be achieved using normal assertions. The end result is much more robust and much easier to understand.</source>
          <target state="translated">コマンドオプション &lt;code&gt;exist&lt;/code&gt; / &lt;code&gt;visible&lt;/code&gt; / &lt;code&gt;length&lt;/code&gt; が廃止されました。これらは混乱を招き、制限されていました。現在、同じ結果を通常のアサーションを使用して達成できます。その結果、はるかに堅牢で理解しやすくなります。</target>
        </trans-unit>
        <trans-unit id="ff41aeacf00ca22deef1d852243226b7d57ddcfa" translate="yes" xml:space="preserve">
          <source>Command right click</source>
          <target state="translated">コマンド右クリック</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="3aa4606c34c244cc001b55f89d15fdb8bb3d98b3" translate="yes" xml:space="preserve">
          <source>Commands Are Asynchronous</source>
          <target state="translated">コマンドは非同期</target>
        </trans-unit>
        <trans-unit id="94f457c21cbe00fee4394ed6c39194ce49a8e54c" translate="yes" xml:space="preserve">
          <source>Commands Are Not Promises</source>
          <target state="translated">コマンドは約束ではない</target>
        </trans-unit>
        <trans-unit id="2380e6fdbaf9a19875cebc9de5f197b951b60014" translate="yes" xml:space="preserve">
          <source>Commands Are Promises</source>
          <target state="translated">コマンドは約束です</target>
        </trans-unit>
        <trans-unit id="b55d85a43e8de9f15158eef6002a1e52e26191cd" translate="yes" xml:space="preserve">
          <source>Commands Must Exit</source>
          <target state="translated">コマンドは終了しなければならない</target>
        </trans-unit>
        <trans-unit id="3642c607300c11d6c71ef8314ffec45c819ebb65" translate="yes" xml:space="preserve">
          <source>Commands Run Serially</source>
          <target state="translated">コマンドの連続実行</target>
        </trans-unit>
        <trans-unit id="f4dbd9d165d10424a15dcf3ef3c4eca57e21848a" translate="yes" xml:space="preserve">
          <source>Commands are also interactive. Go ahead and click on the &lt;code&gt;CLICK&lt;/code&gt; command.</source>
          <target state="translated">コマンドもインタラクティブです。先に進み、 &lt;code&gt;CLICK&lt;/code&gt; コマンドをクリックします。</target>
        </trans-unit>
        <trans-unit id="c72d0e0d77c7dec0a86b9dd2f9cc92d25237054c" translate="yes" xml:space="preserve">
          <source>Commands are not retried when they could potentially change the state of the application under test. For example, Cypress will not retry the &lt;a href=&quot;../../api/commands/click&quot;&gt;.click()&lt;/a&gt; command, because it could change something in the application.</source>
          <target state="translated">コマンドがテスト中のアプリケーションの状態を変更する可能性がある場合、コマンドは再試行されません。たとえば、サイプレスは&lt;a href=&quot;../../api/commands/click&quot;&gt;.click（）&lt;/a&gt;コマンドを再試行しません。これは、アプリケーションの何かを変更する可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="632789d4c61e2634269b10182e55c1ebebdf9ca7" translate="yes" xml:space="preserve">
          <source>Commands for managing the global Cypress cache. The Cypress cache applies to all installs of Cypress across your machine, global or not.</source>
          <target state="translated">グローバルなCypressキャッシュを管理するためのコマンド。Cypress キャッシュは、グローバルかどうかに関わらず、マシン全体の Cypress のすべてのインストールに適用されます。</target>
        </trans-unit>
        <trans-unit id="67255d55e8f0db78ddd835195c20c3cbc884d544" translate="yes" xml:space="preserve">
          <source>Commands text will no long cut off into ellipses when the Command Log is set to a wider width. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/528&quot;&gt;#528&lt;/a&gt;.</source>
          <target state="translated">コマンドログがより広い幅に設定されている場合、コマンドテキストが楕円形に切り取られなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/528&quot;&gt;＃528を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a98a7bd58a3000c66673bad7d7849f2404e52967" translate="yes" xml:space="preserve">
          <source>Commands that do not exit are not supported</source>
          <target state="translated">終了しないコマンドはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e7908d6df5a164fe22c46ab0e206caa40d57bc4f" translate="yes" xml:space="preserve">
          <source>Commands to work with &lt;code&gt;sessionStorage&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sessionStorage&lt;/code&gt; を操作するコマンド</target>
        </trans-unit>
        <trans-unit id="21f1c0d12abd113cbd1f180c9c5aea4937b716c6" translate="yes" xml:space="preserve">
          <source>Commands vs assertions</source>
          <target state="translated">コマンドとアサーション</target>
        </trans-unit>
        <trans-unit id="7751acfe2fcfee66c6353229f87d58758935fdd9" translate="yes" xml:space="preserve">
          <source>Commands which precede assertions will now look downstream at those assertions and not resolve until their subject&amp;rsquo;s state passes all assertions. Previously this was &lt;strong&gt;sort of&lt;/strong&gt; implemented using &lt;em&gt;Command Options&lt;/em&gt; and the &lt;code&gt;eventually&lt;/code&gt; flag, but now this is the default behavior. &lt;em&gt;Command Options&lt;/em&gt; only worked on DOM-based subjects, and now the new assertion verification works on everything else (including RL-based commands, etc). What this means is that Cypress can predict what you are requesting and automatically modifies its behavior until this state is reached. This prevents test brittleness / random test flake. Additionally this removes ever having to use &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait(Number)&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cy.wait(Function)&lt;/code&gt; (though this is still a valid command). As a side effect, you will now see commands + their assertions in the spinning pending blue state. When assertions fail their associated command also fails at the same time. This visually represents the coupling between these two concepts. Another side effect is that &lt;code&gt;timeout&lt;/code&gt; options do not need to be provided on the succeeding assertions, and can instead just be provided on the proceeding command. All of the coupled assertions will automatically be retried to the maximum &lt;code&gt;timeout&lt;/code&gt; setting. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/43&quot;&gt;#43&lt;/a&gt;.</source>
          <target state="translated">アサーションに先行するコマンドは、それらのアサーションを下流に向け、サブジェクトの状態がすべてのアサーションを通過するまで解決されません。以前はこれがされた&lt;strong&gt;ソートの&lt;/strong&gt;使用して実装&lt;em&gt;コマンドオプション&lt;/em&gt;と &lt;code&gt;eventually&lt;/code&gt; フラグを、今これがデフォルトの動作です。&lt;em&gt;コマンドオプション&lt;/em&gt;はDOMベースのサブジェクトでのみ機能し、新しいアサーション検証は他のすべて（RLベースのコマンドなどを含む）で機能します。これは、サイプレスが要求しているものを予測し、この状態に達するまでその動作を自動的に変更できることを意味します。これにより、テストの脆弱性/ランダムなテストフレークが防止されます。さらに、これにより、&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait(Number)&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;cy.wait(Function)&lt;/code&gt; を使用する必要がなくなります。（これはまだ有効なコマンドですが）。副作用として、回転している保留中の青い状態のコマンドとそのアサーションが表示されます。アサーションが失敗すると、関連するコマンドも同時に失敗します。これは、これら2つの概念のカップリングを視覚的に表しています。もう1つの副作用は、 &lt;code&gt;timeout&lt;/code&gt; オプションを後続のアサーションで提供する必要がなく、代わりに進行中のコマンドでのみ提供できることです。結合されたすべてのアサーションは自動的に最大 &lt;code&gt;timeout&lt;/code&gt; 設定に再試行されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/43&quot;&gt;＃43を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1b67fe8756eb553f295fb28d7514aa1ba4e57eae" translate="yes" xml:space="preserve">
          <source>Commands which were silenced with &lt;code&gt;{log: false}&lt;/code&gt; will now always display in the Command Log if they were part of a replayed chain of commands due to an alias reference becoming stale. Previously they would not display which was very confusing.</source>
          <target state="translated">&lt;code&gt;{log: false}&lt;/code&gt; サイレンスされたコマンドは、エイリアス参照が古くなるためにコマンドの再生チェーンの一部であった場合、常にコマンドログに表示されるようになりました。以前は表示されず、非常に混乱していました。</target>
        </trans-unit>
        <trans-unit id="e46f1c8aefb13180c91a4f4e324020c72d59a17c" translate="yes" xml:space="preserve">
          <source>Commit SHA linking to the GitHub commit</source>
          <target state="translated">GitHub のコミットにリンクするコミット SHA</target>
        </trans-unit>
        <trans-unit id="25865a272d6c4602de8da066e2d33da0e5341e0b" translate="yes" xml:space="preserve">
          <source>Common Assertions</source>
          <target state="translated">共通のアサーション</target>
        </trans-unit>
        <trans-unit id="a4fc17db82c672dbaa571a55e4d313945d530f14" translate="yes" xml:space="preserve">
          <source>Common Scenarios</source>
          <target state="translated">一般的なシナリオ</target>
        </trans-unit>
        <trans-unit id="f190d7b11dc66a51be8efb7071740c9fcf96d6f8" translate="yes" xml:space="preserve">
          <source>Common Workarounds</source>
          <target state="translated">共通の回避策</target>
        </trans-unit>
        <trans-unit id="ebb9ca9c15ab5b7e2560c86bd227cfc4d5329c32" translate="yes" xml:space="preserve">
          <source>Compare text values of two elements</source>
          <target state="translated">2つの要素のテキスト値を比較する</target>
        </trans-unit>
        <trans-unit id="9e6886f8f41648e0189b7be81b0f1612315da498" translate="yes" xml:space="preserve">
          <source>Comparison to &lt;code&gt;cy.route()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.route()&lt;/code&gt; との比較</target>
        </trans-unit>
        <trans-unit id="976e8d41b2971241ac1e4d546b47b53758e78b1b" translate="yes" xml:space="preserve">
          <source>Compile the CoffeeScript into JavaScript &lt;code&gt;spec.js&lt;/code&gt;</source>
          <target state="translated">CoffeeScriptをJavaScript &lt;code&gt;spec.js&lt;/code&gt; にコンパイルします。</target>
        </trans-unit>
        <trans-unit id="199262b85ab1cf1760553d29d5bb5a787f9cd66b" translate="yes" xml:space="preserve">
          <source>Complete WordPress Plugin Boilerplate including Cypress.io E2E tests.</source>
          <target state="translated">Cypress.io E2Eテストを含む完全なWordPressプラグインのボイラープレート。</target>
        </trans-unit>
        <trans-unit id="80bb2ea05fa48ef9fcf3abb3bc52f8beb680d0e3" translate="yes" xml:space="preserve">
          <source>Completely overhauled the URL and proxy system used to serve remote applications.</source>
          <target state="translated">リモートアプリケーションを提供するために使用されるURLとプロキシシステムを完全にオーバーホールしました。</target>
        </trans-unit>
        <trans-unit id="a6280a8092ffd6b1ba45e5e944246c874afb1893" translate="yes" xml:space="preserve">
          <source>Complex Async Example</source>
          <target state="translated">複雑な非同期の例</target>
        </trans-unit>
        <trans-unit id="998e6317b6fa148df91026296ec49dc9eade04a7" translate="yes" xml:space="preserve">
          <source>Complex Promise Example</source>
          <target state="translated">複雑なプロミスの例</target>
        </trans-unit>
        <trans-unit id="2dbce043918d35d9470549bbaa4939fb679a4bf3" translate="yes" xml:space="preserve">
          <source>Component Testing</source>
          <target state="translated">コンポーネントテスト</target>
        </trans-unit>
        <trans-unit id="b7159a32272ac35920d049fc30dc9f81832fe7b3" translate="yes" xml:space="preserve">
          <source>Component testing</source>
          <target state="translated">コンポーネントテスト</target>
        </trans-unit>
        <trans-unit id="3ab0fff92f04a237857d8954ccd4b2bbb77dd1a9" translate="yes" xml:space="preserve">
          <source>Computing the source code lines that were executed during the test is done through &lt;strong&gt;code coverage&lt;/strong&gt;. Code coverage requires inserting additional counters into your source code before running it. This step is called &lt;strong&gt;instrumentation&lt;/strong&gt;. Instrumentation takes code that looks likes this&amp;hellip;</source>
          <target state="translated">テスト中に実行されたソースコード行の計算は、&lt;strong&gt;コードカバレッジ&lt;/strong&gt;を通じて行われ&lt;strong&gt;ます&lt;/strong&gt;。コードカバレッジでは、実行する前にソースコードに追加のカウンターを挿入する必要があります。このステップは、&lt;strong&gt;インストルメンテーション&lt;/strong&gt;と呼ばれ&lt;strong&gt;ます&lt;/strong&gt;。インストルメンテーションは次のようなコードを受け取ります&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="f412de2bc0a3e649ebd0aa9b0c7daf0fb09876b0" translate="yes" xml:space="preserve">
          <source>Concourse</source>
          <target state="translated">Concourse</target>
        </trans-unit>
        <trans-unit id="0c2f5941357ea3957dbb70ba9f3995d297cefd71" translate="yes" xml:space="preserve">
          <source>Conditional Testing</source>
          <target state="translated">条件付き試験</target>
        </trans-unit>
        <trans-unit id="f6eb40cf389683812a0b9500584c22e43c7338b9" translate="yes" xml:space="preserve">
          <source>Conditional testing refers to the common programming pattern:</source>
          <target state="translated">条件付きテストとは、一般的なプログラミングパターンのことです。</target>
        </trans-unit>
        <trans-unit id="9ba9ed1bbe699365fc32d73023c9b43a78c723c9" translate="yes" xml:space="preserve">
          <source>Conditionally check whether an element has certain text:</source>
          <target state="translated">条件付きで要素に特定のテキストがあるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="4b7aee66483749043701d073392077b0d7e2cd0f" translate="yes" xml:space="preserve">
          <source>Conditionally wrap elements</source>
          <target state="translated">条件付きで要素を包む</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="0ceae88b4177bac1201240778027412fc5be44bb" translate="yes" xml:space="preserve">
          <source>Config overrides coming from the CLI or environment variables are now validated the same way as if they&amp;rsquo;ve been set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1783&quot;&gt;#1783&lt;/a&gt;.</source>
          <target state="translated">CLIまたは環境変数からの構成オーバーライドは、 &lt;code&gt;cypress.json&lt;/code&gt; で設定された場合と同じ方法で検証されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1783&quot;&gt;＃1783を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="4afa86921bd437ba67c78363d6c2564ff21becdb" translate="yes" xml:space="preserve">
          <source>Configuration API</source>
          <target state="translated">コンフィギュレーションAPI</target>
        </trans-unit>
        <trans-unit id="4d02407d4cc8189b34948d45af1b280eeaabe123" translate="yes" xml:space="preserve">
          <source>Configuration Values</source>
          <target state="translated">設定値</target>
        </trans-unit>
        <trans-unit id="c6f0e9dfe575fb25913b33c98a27840e0a99be95" translate="yes" xml:space="preserve">
          <source>Configuration set using &lt;code&gt;Cypress.config&lt;/code&gt;&lt;em&gt;is only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.config&lt;/code&gt; を使用して設定された構成&lt;em&gt;は、現在のスペックファイルのスコープ内にのみあります。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e23ad97b87cb183fd3eb0aaf079a00e736a0850a" translate="yes" xml:space="preserve">
          <source>Configuration to automatically force Cypress to wait for outstanding XHR&amp;rsquo;s (like it does for other Page Events). This would mean when testing more traditional apps without XHR stubbing, commands would automatically wait until all outstanding XHR&amp;rsquo;s complete. The internal retry loop needs to be rewritten to make this possible, but the XHR architecture is now there.</source>
          <target state="translated">サイプレスに未処理のXHRを自動的に待機させる構成（他のページイベントの場合と同様）。これは、XHRスタブなしで従来のアプリをテストする場合、コマンドはすべての未解決のXHRが完了するまで自動的に待機することを意味します。これを可能にするには、内部の再試行ループを書き換える必要がありますが、XHRアーキテクチャは現在あります。</target>
        </trans-unit>
        <trans-unit id="4b97dd6bf2dd45e5ab65e5a1323a4643295ad398" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;baseUrl&lt;/code&gt; in the &lt;code&gt;cypress.json&lt;/code&gt; file to prevent repeating yourself in every single &lt;code&gt;cy.visit()&lt;/code&gt; command. Read more about &lt;a href=&quot;../../guides/references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.visit()&lt;/code&gt; コマンドごとに自分が繰り返されないように、 &lt;code&gt;cypress.json&lt;/code&gt; ファイルで &lt;code&gt;baseUrl&lt;/code&gt; を設定します。&lt;a href=&quot;../../guides/references/configuration&quot;&gt;設定の&lt;/a&gt;詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="2e33a4a40c60e8a877a01db332d2209d2b7123fa" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;baseUrl&lt;/code&gt; in the your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; file (&lt;code&gt;cypress.json&lt;/code&gt; by default) to prevent repeating yourself in every &lt;code&gt;cy.visit()&lt;/code&gt; command.</source>
          <target state="translated">設定し &lt;code&gt;baseUrl&lt;/code&gt; にあなたの中に&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;、構成&lt;/a&gt;ファイル（ &lt;code&gt;cypress.json&lt;/code&gt; デフォルトでは）すべての中で自分自身を繰り返す防ぐため &lt;code&gt;cy.visit()&lt;/code&gt; コマンド。</target>
        </trans-unit>
        <trans-unit id="834b811351966050574089ced73dfbdb7ca6848a" translate="yes" xml:space="preserve">
          <source>Configure tsconfig.json</source>
          <target state="translated">tsconfig.jsonの設定</target>
        </trans-unit>
        <trans-unit id="26c9282bf4ad7fa68a504fae8e6c23d1c4572381" translate="yes" xml:space="preserve">
          <source>Confirm that you want to delete the project by clicking &lt;strong&gt;Yes, Remove Project&lt;/strong&gt;.</source>
          <target state="translated">[ &lt;strong&gt;はい、&lt;/strong&gt;プロジェクトを削除します]をクリックして、プロジェクトを削除することを確認します。</target>
        </trans-unit>
        <trans-unit id="06ba8be139efac680979823005c3a8e473971b01" translate="yes" xml:space="preserve">
          <source>Conflicting values will override values from &lt;code&gt;cypress.json&lt;/code&gt; and &lt;code&gt;cypress.env.json&lt;/code&gt; files.</source>
          <target state="translated">競合する値は、 &lt;code&gt;cypress.json&lt;/code&gt; および &lt;code&gt;cypress.env.json&lt;/code&gt; ファイルからの値を上書きします。</target>
        </trans-unit>
        <trans-unit id="01cd1b44c6d6673718a3a40a6be368681492da19" translate="yes" xml:space="preserve">
          <source>Connect with our community in &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;Gitter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;Gitterで&lt;/a&gt;コミュニティとつながる</target>
        </trans-unit>
        <trans-unit id="565e25b1be863570aa48357d4e37a3cb9b1014a4" translate="yes" xml:space="preserve">
          <source>Consider this example:</source>
          <target state="translated">この例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="2dd9f4cc14ec1bf52b6278d055d1483dda369c44" translate="yes" xml:space="preserve">
          <source>Console output</source>
          <target state="translated">コンソール出力</target>
        </trans-unit>
        <trans-unit id="7bf69cab90ca13888b120e7454484a178e4ef6c8" translate="yes" xml:space="preserve">
          <source>Console output from your apps is suppressed while running in the terminal.</source>
          <target state="translated">ターミナルで実行している間は、アプリからのコンソール出力が抑制されます。</target>
        </trans-unit>
        <trans-unit id="3cfbf8dc8f844f4d8d531e58d73ec57ab19a5b69" translate="yes" xml:space="preserve">
          <source>Console output of &lt;code&gt;.location()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.location()&lt;/code&gt; のコンソール出力</target>
        </trans-unit>
        <trans-unit id="716bba1f6fa2b1817371939a28928af71947092c" translate="yes" xml:space="preserve">
          <source>Console output of &lt;code&gt;window.location&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;window.location&lt;/code&gt; のコンソール出力</target>
        </trans-unit>
        <trans-unit id="33e15d008d511f3101566a2e25203ef2a3f605a0" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="translated">Contains</target>
        </trans-unit>
        <trans-unit id="4f9be057f0ea5d2ba72fd2c810e8d7b9aa98b469" translate="yes" xml:space="preserve">
          <source>Content</source>
          <target state="translated">Content</target>
        </trans-unit>
        <trans-unit id="2570a9f1f6766df091ea6a76ebb3b3d7bd48fed4" translate="yes" xml:space="preserve">
          <source>Continue to perform all default actions</source>
          <target state="translated">すべてのデフォルトアクションを実行し続ける</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">継続的インテグレーション</target>
        </trans-unit>
        <trans-unit id="0a95911fef9feab1279d57ccc20e090218e5b782" translate="yes" xml:space="preserve">
          <source>Continuous integration</source>
          <target state="translated">継続的な統合</target>
        </trans-unit>
        <trans-unit id="18b017e5b4b89d6ff684844a26fb098545f160cf" translate="yes" xml:space="preserve">
          <source>Contribute</source>
          <target state="translated">Contribute</target>
        </trans-unit>
        <trans-unit id="99085ed780334aa12947f103a83792aa2d5509b8" translate="yes" xml:space="preserve">
          <source>Control the size and orientation of the screen for your application.</source>
          <target state="translated">アプリケーションの画面のサイズと向きをコントロールします。</target>
        </trans-unit>
        <trans-unit id="baec3ef4d924a374d8f163c63b1280f6568b9bd2" translate="yes" xml:space="preserve">
          <source>Control whether you accept or reject confirmations</source>
          <target state="translated">確認を承認するか拒否するかを制御する</target>
        </trans-unit>
        <trans-unit id="8cb89ca43e98cfc3f9884ebd828302a5a51d3e80" translate="yes" xml:space="preserve">
          <source>Control which Chrome components are loaded</source>
          <target state="translated">どのChromeコンポーネントが読み込まれるかを制御する</target>
        </trans-unit>
        <trans-unit id="3b507368511566de769f5af5fbb3d0ae507418d9" translate="yes" xml:space="preserve">
          <source>Controls permissions for desktop notifications, geolocation, and other browser APIs</source>
          <target state="translated">デスクトップ通知、ジオロケーション、その他のブラウザ API の権限を制御します。</target>
        </trans-unit>
        <trans-unit id="54cc9832575c26ca63291217376ff51a496592d4" translate="yes" xml:space="preserve">
          <source>Converts WDIO automation tests to Cypress.</source>
          <target state="translated">WDIO オートメーションテストを Cypress に変換します。</target>
        </trans-unit>
        <trans-unit id="541e284f89a7d619632c3af914a97107eb31f72b" translate="yes" xml:space="preserve">
          <source>Cookie&amp;rsquo;s SameSite value. If set, should be one of &lt;code&gt;lax&lt;/code&gt;, &lt;code&gt;strict&lt;/code&gt;, or &lt;code&gt;no_restriction&lt;/code&gt;. Pass &lt;code&gt;undefined&lt;/code&gt; to use the browser&amp;rsquo;s default. Note: &lt;code&gt;no_restriction&lt;/code&gt; can only be used if the &lt;code&gt;secure&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">CookieのSameSite値。設定されている場合は、 &lt;code&gt;lax&lt;/code&gt; 、 &lt;code&gt;strict&lt;/code&gt; 、または &lt;code&gt;no_restriction&lt;/code&gt; のいずれかになります。ブラウザのデフォルトを使用するには、 &lt;code&gt;undefined&lt;/code&gt; を渡します。注： &lt;code&gt;no_restriction&lt;/code&gt; は、 &lt;code&gt;secure&lt;/code&gt; フラグが &lt;code&gt;true&lt;/code&gt; に設定されている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="524cf50b5df5f29161c0600989922de48abede70" translate="yes" xml:space="preserve">
          <source>Cookies</source>
          <target state="translated">Cookies</target>
        </trans-unit>
        <trans-unit id="acf3516687f68b9d3be80e8368cd13855a295dec" translate="yes" xml:space="preserve">
          <source>Cookies are automatically cleared between page refreshes, during app startup, and leaving the test page.</source>
          <target state="translated">クッキーは、ページの更新時、アプリの起動時、テストページを離れる時に自動的にクリアされます。</target>
        </trans-unit>
        <trans-unit id="e05873e1707d6581e6eee7e2a15fb0c0ecd9e055" translate="yes" xml:space="preserve">
          <source>Cookies are automatically sent and received</source>
          <target state="translated">クッキーは自動的に送受信されます</target>
        </trans-unit>
        <trans-unit id="8ebebca0195929f0e6604560db2d6f829dc20c86" translate="yes" xml:space="preserve">
          <source>Coordinates</source>
          <target state="translated">Coordinates</target>
        </trans-unit>
        <trans-unit id="e7b9657118fef7a1f45306c17d6e677df270e297" translate="yes" xml:space="preserve">
          <source>Coordinates and hitboxes are now logged and displayed on &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">座標とヒットボックスがログに記録され、&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; に&lt;/a&gt;表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="6356d7205b142f7c7c7d20113c08b32b386e304f" translate="yes" xml:space="preserve">
          <source>Copy / Paste now works when logging in on OSX. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/145&quot;&gt;#145&lt;/a&gt;.</source>
          <target state="translated">OSXにログインしたときにコピー/貼り付けが機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/145&quot;&gt;＃145を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c872753511d558c4ce512746cf585786dd025a3c" translate="yes" xml:space="preserve">
          <source>Core Concepts</source>
          <target state="translated">コアコンセプト</target>
        </trans-unit>
        <trans-unit id="9276d073588593df3449f1f21b0c39e9033d4bf1" translate="yes" xml:space="preserve">
          <source>Corrected a typo in the CLI for a warning message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2038&quot;&gt;#2038&lt;/a&gt;.</source>
          <target state="translated">警告メッセージのCLIのタイプミスを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2038&quot;&gt;＃2038を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8556152848968e44556c99c3fff98f2d6db69ebe" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;4xx&lt;/code&gt; and other bad http response codes when using Cypress as the file server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/219&quot;&gt;#219&lt;/a&gt;.</source>
          <target state="translated">サイプレスをファイルサーバーとして使用する場合、 &lt;code&gt;4xx&lt;/code&gt; およびその他の不正なhttp応答コードを正しく挿入します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/219&quot;&gt;＃219を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b9adb71f1d237db0587278b4a1e23572d8e501b7" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;5xx&lt;/code&gt; http response codes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/217&quot;&gt;#217&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;5xx&lt;/code&gt; http応答コードを正しく挿入します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/217&quot;&gt;＃217を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="abba92ebc6c6850ef892f769dc170ea8ef65f589" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;gzip&lt;/code&gt; errors from 3rd party servers doing unintended things. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/220&quot;&gt;#220&lt;/a&gt;.</source>
          <target state="translated">意図しない処理を行うサードパーティのサーバーからの &lt;code&gt;gzip&lt;/code&gt; エラーを正しく挿入します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/220&quot;&gt;＃220を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="bbc139f59ec256066c40a13acfb940f040262cc9" translate="yes" xml:space="preserve">
          <source>Correctly processes defaultButton click event, form submit event.</source>
          <target state="translated">defaultButtonクリックイベント、フォーム送信イベントを正しく処理します。</target>
        </trans-unit>
        <trans-unit id="77ba49c73b30efdf7845be17dba3544bfac24889" translate="yes" xml:space="preserve">
          <source>Correctly take into account &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag on XHR&amp;rsquo;s. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/89&quot;&gt;#89&lt;/a&gt;.</source>
          <target state="translated">XHRの &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; タグを正しく考慮します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/89&quot;&gt;＃89を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7ae3f335e548522a72b31d6709bd85642b226144" translate="yes" xml:space="preserve">
          <source>Coupled to the &lt;code&gt;name&lt;/code&gt; attribute which has HTML semantics.</source>
          <target state="translated">HTMLのセマンティクスを持つ &lt;code&gt;name&lt;/code&gt; 属性に結合されます。</target>
        </trans-unit>
        <trans-unit id="8b25d68c0b07d3dbf4f390e283585ad91fdda1c1" translate="yes" xml:space="preserve">
          <source>Covering</source>
          <target state="translated">Covering</target>
        </trans-unit>
        <trans-unit id="31ff08bf16c35d590ae328896c11be9dbe0e6a29" translate="yes" xml:space="preserve">
          <source>Create Org</source>
          <target state="translated">組織の作成</target>
        </trans-unit>
        <trans-unit id="0a76330fa7099993f77b270f5263237612c24f8e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;sample_spec.js&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;sample_spec.js&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="54aaec0d8958e9a15d7aa90864024a05abda7504" translate="yes" xml:space="preserve">
          <source>Create a `cypress.env.json`</source>
          <target state="translated">cypress.env.json` を作成します。</target>
        </trans-unit>
        <trans-unit id="530333cdf6ed80d16fb57efe75c7a81e75f361ef" translate="yes" xml:space="preserve">
          <source>Create a clean, pristine testing environment.</source>
          <target state="translated">清潔で原始的なテスト環境を作ります。</target>
        </trans-unit>
        <trans-unit id="b356d5c8892603555f802e6084774cb296edb2fa" translate="yes" xml:space="preserve">
          <source>Create a clock and move time to trigger a &lt;code&gt;setTimeout&lt;/code&gt;</source>
          <target state="translated">時計を作成し、時間を移動して &lt;code&gt;setTimeout&lt;/code&gt; をトリガーします</target>
        </trans-unit>
        <trans-unit id="0215eed7a89da9a6d3896c5402ec4060b10638f6" translate="yes" xml:space="preserve">
          <source>Create a clock and use it to trigger a &lt;code&gt;setInterval&lt;/code&gt;</source>
          <target state="translated">クロックを作成し、それを使用して &lt;code&gt;setInterval&lt;/code&gt; をトリガーします</target>
        </trans-unit>
        <trans-unit id="c9f4d8a4cc6b4d876ee791006ddbfe6b56b72df3" translate="yes" xml:space="preserve">
          <source>Create a stub and manually replace a function</source>
          <target state="translated">スタブを作成し、関数を手動で置き換える</target>
        </trans-unit>
        <trans-unit id="1a86d07315c59a10355c667fbd3cdd3d813aa476" translate="yes" xml:space="preserve">
          <source>Create a user</source>
          <target state="translated">ユーザーを作成する</target>
        </trans-unit>
        <trans-unit id="ff38358f3785f260a795fb12bc96902be50a5c6a" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;img&lt;/code&gt; element and set its &lt;code&gt;src&lt;/code&gt; to the &lt;code&gt;dataUrl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;img&lt;/code&gt; 要素を作成し、その &lt;code&gt;src&lt;/code&gt; を &lt;code&gt;dataUrl&lt;/code&gt; に設定します</target>
        </trans-unit>
        <trans-unit id="c4e02bbaa4e1006fb86887e071cb4da5a9670c70" translate="yes" xml:space="preserve">
          <source>Create an assertion. Assertions are automatically retried until they pass or time out.</source>
          <target state="translated">アサーションを作成します。アサーションは、通過するかタイムアウトするまで自動的に再試行されます。</target>
        </trans-unit>
        <trans-unit id="deb609dfe5aa29a17cf69b2b489923bcb4c0e2bd" translate="yes" xml:space="preserve">
          <source>Create custom commands using plain-old functions. Similar to `cy.then` but with retriability.</source>
          <target state="translated">古い関数を使ってカスタムコマンドを作成する。cy.then` に似ていますが、再帰性があります。</target>
        </trans-unit>
        <trans-unit id="db895a3da3bf5b0a271a63f2aa947d66bb9a036f" translate="yes" xml:space="preserve">
          <source>Create new record key</source>
          <target state="translated">新規レコードキーの作成</target>
        </trans-unit>
        <trans-unit id="59daec0fad23e8f1c6fdaeceb786f17de953945e" translate="yes" xml:space="preserve">
          <source>Create projects</source>
          <target state="translated">プロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="c419fdebbc74b72da21303a5c289d54c9963d7f0" translate="yes" xml:space="preserve">
          <source>Create, edit and delete organizations</source>
          <target state="translated">組織の作成、編集、削除</target>
        </trans-unit>
        <trans-unit id="4df1dedacc4030daf8f7117293a949c884449280" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Conditional Testing&amp;rdquo; core concept</source>
          <target state="translated">「条件付きテスト」のコアコンセプトを作成</target>
        </trans-unit>
        <trans-unit id="30f699233a45a35700337adb14a42c21811feea2" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Key Differences&amp;rdquo; core concept</source>
          <target state="translated">「主な違い」のコアコンセプトを作成</target>
        </trans-unit>
        <trans-unit id="cb3ea91e52bf3a936bd6f5f890714b0db2b77614" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;List of Plugins&amp;rdquo;</source>
          <target state="translated">「プラグインのリスト」を作成</target>
        </trans-unit>
        <trans-unit id="ea247c70fd48be47fbe66d1fb7557f6ff79378eb" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Plugins&amp;rdquo; guide</source>
          <target state="translated">「プラグイン」ガイドを作成</target>
        </trans-unit>
        <trans-unit id="26bd6570b4b29017a17447f2b75ad172f67bba2e" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Preprocessors API&amp;rdquo;</source>
          <target state="translated">「プリプロセッサAPI」を作成</target>
        </trans-unit>
        <trans-unit id="1d535ded95947d37850ceb6e1929c6d9722ece6c" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Testing React TodoMVC&amp;rdquo; tutorials</source>
          <target state="translated">「Testing React TodoMVC」チュートリアルを作成</target>
        </trans-unit>
        <trans-unit id="0968a2236d7936e5ebc1a74cbb3d145abafac7a2" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Variables and Aliases&amp;rdquo; core concept</source>
          <target state="translated">「変数とエイリアス」のコアコンセプトを作成</target>
        </trans-unit>
        <trans-unit id="7c7190e9e6b622065f70340f7b630b00e4474ea1" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Writing a Plugin&amp;rdquo; API</source>
          <target state="translated">「プラグインの作成」APIを作成</target>
        </trans-unit>
        <trans-unit id="b14ba5e141fd4b8fbd4e1094e2425e3e9125f7e9" translate="yes" xml:space="preserve">
          <source>Created new &lt;code&gt;Cypress.Log&lt;/code&gt; interface for greater control over the display of commands.</source>
          <target state="translated">コマンドの表示をより詳細に制御するための新しい &lt;code&gt;Cypress.Log&lt;/code&gt; インターフェースを作成しました。</target>
        </trans-unit>
        <trans-unit id="fffe2121a1559fa60200bf1454c0d748be25d246" translate="yes" xml:space="preserve">
          <source>Created new debugging command: &lt;a href=&quot;../../api/commands/pause&quot;&gt;&lt;code&gt;.pause()&lt;/code&gt;&lt;/a&gt; which will pause executing commands and allow you to resume or step into the next command one at a time.</source>
          <target state="translated">新しいデバッグコマンドを作成しました。コマンドの実行を一時停止し、一度に1つずつ次のコマンドを再開またはステップ&lt;a href=&quot;../../api/commands/pause&quot;&gt; &lt;code&gt;.pause()&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4ce48feaef42bf2c8b9b194bc8d2c155ebd58032" translate="yes" xml:space="preserve">
          <source>Creating &amp;ldquo;tiny&amp;rdquo; tests with a single assertion</source>
          <target state="translated">単一のアサーションで「小さな」テストを作成する</target>
        </trans-unit>
        <trans-unit id="49b1c035b7d0b6b1c7e35c111e5686682b53438c" translate="yes" xml:space="preserve">
          <source>Crop a screenshot to a specific position and size</source>
          <target state="translated">スクリーンショットを特定の位置とサイズに切り取る</target>
        </trans-unit>
        <trans-unit id="ce6299777967655de4ac662cea46d60086c8b277" translate="yes" xml:space="preserve">
          <source>Cross Browser Testing</source>
          <target state="translated">クロスブラウザテスト</target>
        </trans-unit>
        <trans-unit id="58cd1d73cdcaffc9483c858219c6fcb608902e6a" translate="yes" xml:space="preserve">
          <source>Cross-Origin requests are now proxied by Cypress. In other words their URL&amp;rsquo;s are transparently rewritten which bypasses CORS problems. This is a quick fix which should satisfy most of the problems users were having with CORS requests. However there is a much bigger change coming in &lt;code&gt;0.14.0&lt;/code&gt; where the entire proxy layer will be rewritten to accommodate CORS, &lt;code&gt;window.fetch&lt;/code&gt; and &lt;code&gt;domain cookies&lt;/code&gt; flawlessly. As it stands Cypress is prone to errors in complex setups.</source>
          <target state="translated">クロスオリジンリクエストはサイプレスによってプロキシされます。つまり、それらのURLは透過的に書き換えられ、CORSの問題を回避します。これは、ユーザーがCORSリクエストで抱えていた問題のほとんどを解決するクイックフィックスです。しかし、中に来てはるかに大きい変化がある &lt;code&gt;0.14.0&lt;/code&gt; 全体プロキシ層がCORS、対応するために書き換えられます &lt;code&gt;window.fetch&lt;/code&gt; と &lt;code&gt;domain cookies&lt;/code&gt; 完璧に。現状では、サイプレスは複雑なセットアップでエラーを起こしやすいです。</target>
        </trans-unit>
        <trans-unit id="fd97fba3d4697df4c06c84371d03fa2bb079269f" translate="yes" xml:space="preserve">
          <source>Cross-origin iframes</source>
          <target state="translated">クロスオリジンのiframe</target>
        </trans-unit>
        <trans-unit id="beaf53f88b4a7ad6cb57122f7f6bd4b9487586b3" translate="yes" xml:space="preserve">
          <source>Cross-platform, cross-browser screenshot testing for modern user interfaces.</source>
          <target state="translated">クロスプラットフォーム、クロスブラウザでのスクリーンショットテスト。</target>
        </trans-unit>
        <trans-unit id="2270b4873eb9e505087d1cdb7abf8226ebfab5a4" translate="yes" xml:space="preserve">
          <source>Cucumber</source>
          <target state="translated">Cucumber</target>
        </trans-unit>
        <trans-unit id="45a6d5bcf4e2724053e60f8d27b3f1f435224fae" translate="yes" xml:space="preserve">
          <source>Currently running tests now displays a spinner to indicate they are currently running.</source>
          <target state="translated">現在実行中のテストは、現在実行中であることを示すスピナーを表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="656c8a1b6a35438479cc20adce73c5c892061f49" translate="yes" xml:space="preserve">
          <source>Currently, only browsers in the Chrome family are supported.</source>
          <target state="translated">現在はChromeファミリーのブラウザのみ対応しています。</target>
        </trans-unit>
        <trans-unit id="d65215411d33fb1bb5d69ddda0d6b068f34bceeb" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;console&lt;/code&gt; command</source>
          <target state="translated">カスタム &lt;code&gt;console&lt;/code&gt; コマンド</target>
        </trans-unit>
        <trans-unit id="2416316065a37f271c32ddc7e7d94e55288b1523" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;login&lt;/code&gt; command</source>
          <target state="translated">カスタム &lt;code&gt;login&lt;/code&gt; コマンド</target>
        </trans-unit>
        <trans-unit id="c48e024e0cec2f563e6f2442f0eebafd432290c2" translate="yes" xml:space="preserve">
          <source>Custom Commands</source>
          <target state="translated">カスタムコマンド</target>
        </trans-unit>
        <trans-unit id="fb2ecfd0fee66ed3937499ef5f09ad6fcbe3f473" translate="yes" xml:space="preserve">
          <source>Custom Dual Command</source>
          <target state="translated">カスタムデュアルコマンド</target>
        </trans-unit>
        <trans-unit id="aa033ba591179178a4d4be85f52573a67add07ca" translate="yes" xml:space="preserve">
          <source>Custom Environment Variables</source>
          <target state="translated">カスタム環境変数</target>
        </trans-unit>
        <trans-unit id="ad94b13496fdf0b96efabeb86e685fdd89eada01" translate="yes" xml:space="preserve">
          <source>Custom Reporters</source>
          <target state="translated">カスタムレポーター</target>
        </trans-unit>
        <trans-unit id="91441fc1bd3bf4b1866bc35b9ceca54fe1864e57" translate="yes" xml:space="preserve">
          <source>Custom commands are a great way to abstract away setup (specific to your app). When doing those kinds of tasks, skip as much of the UI as possible. Use &lt;a href=&quot;../commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to login, set cookies or localStorage directly, stub and mock your applications functions, and / or trigger events programmatically.</source>
          <target state="translated">カスタムコマンドは、セットアップを抽象化する優れた方法です（アプリに固有）。これらの種類のタスクを実行するときは、UIをできるだけスキップしてください。&lt;a href=&quot;../commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;を使用して、ログイン、CookieまたはlocalStorageの直接設定、アプリケーション関数のスタブおよびモック、および/またはプログラムによるイベントのトリガーを行います。</target>
        </trans-unit>
        <trans-unit id="9ff9cc201d8a668d6026bc86cd694c4c3f7a170d" translate="yes" xml:space="preserve">
          <source>Custom commands for Firebase including Authentication and Database communication (both Real Time Database and Firestore).</source>
          <target state="translated">認証とデータベース通信(リアルタイムデータベースとFirestoreの両方)を含むFirebase用のカスタムコマンド。</target>
        </trans-unit>
        <trans-unit id="95cb8c0082b5c32081894d74e31262f8bc273dc6" translate="yes" xml:space="preserve">
          <source>Custom commands for interacting with iframes</source>
          <target state="translated">iframe を操作するためのカスタムコマンド</target>
        </trans-unit>
        <trans-unit id="23062675fd78748645d6c857dcbadcb80fe965d0" translate="yes" xml:space="preserve">
          <source>Custom commands for localStorage. Allows preserving localStorage between tests</source>
          <target state="translated">localStorage 用のカスタムコマンド。テスト間の localStorage の保存を可能にします。</target>
        </trans-unit>
        <trans-unit id="16cb3173d8cac1013803372ff53995a522a0105b" translate="yes" xml:space="preserve">
          <source>Custom commands for shadow DOM support</source>
          <target state="translated">シャドウ DOM サポート用のカスタムコマンド</target>
        </trans-unit>
        <trans-unit id="2ad6f8e3320f0e1c4b72b21d7099db3bc9f97635" translate="yes" xml:space="preserve">
          <source>Custom commands no longer error out if they are the very first &lt;code&gt;cy&lt;/code&gt; command.</source>
          <target state="translated">カスタムコマンドが最初の &lt;code&gt;cy&lt;/code&gt; コマンドである場合、エラーにならなくなりました。</target>
        </trans-unit>
        <trans-unit id="fa0414e6108472581ac1bc9edfe6d3c8fdbe6ee2" translate="yes" xml:space="preserve">
          <source>Custom commands to mock your GraphQL API at the network level. Using service-workers for complete isolation of the mock server.</source>
          <target state="translated">GraphQL APIをネットワークレベルでモックするためのカスタムコマンド。サービスワーカーを使用してモックサーバーを完全に分離します。</target>
        </trans-unit>
        <trans-unit id="67ae38e49b14cdb33c666c82189ec654f4a10342" translate="yes" xml:space="preserve">
          <source>Custom commands work well when you&amp;rsquo;re needing to describe behavior that&amp;rsquo;s desirable across &lt;strong&gt;all of your tests&lt;/strong&gt;. Examples would be a &lt;code&gt;cy.setup()&lt;/code&gt; or &lt;code&gt;cy.login()&lt;/code&gt; or extending your application&amp;rsquo;s behavior like &lt;code&gt;cy.get('.dropdown').dropdown('Apples')&lt;/code&gt;. These are specific to your application and can be used everywhere.</source>
          <target state="translated">カスタムコマンド&lt;strong&gt;は、すべてのテストで&lt;/strong&gt;望ましい動作を説明する必要がある場合に役立ち&lt;strong&gt;ます&lt;/strong&gt;。例としては、 &lt;code&gt;cy.setup()&lt;/code&gt; または &lt;code&gt;cy.login()&lt;/code&gt; や、 &lt;code&gt;cy.get('.dropdown').dropdown('Apples')&lt;/code&gt; などのアプリケーションの動作の拡張があります。これらはアプリケーションに固有であり、どこでも使用できます。</target>
        </trans-unit>
        <trans-unit id="b8708877030366a729d8be6d8ee1eff4b401e3a1" translate="yes" xml:space="preserve">
          <source>Custom headers and other headers &amp;ldquo;of interest&amp;rdquo; are rewritten for transparent compatibility.</source>
          <target state="translated">「関心のある」カスタムヘッダーおよびその他のヘッダーは、透過的な互換性のために書き直されます。</target>
        </trans-unit>
        <trans-unit id="9fb843f0908fc1e0c10cc0fc91dddc3bd9b77b44" translate="yes" xml:space="preserve">
          <source>Custom reporter for Teamcity which makes it possible to display test results in real-time and add them on the Tests tab of the Build Results page</source>
          <target state="translated">テスト結果をリアルタイムで表示し、Build Results ページの Tests タブに追加することが可能な Teamcity 用カスタムレポーター</target>
        </trans-unit>
        <trans-unit id="37df32d62fc505273d2829f38d6b5d5d2b3adda3" translate="yes" xml:space="preserve">
          <source>Custom reporter for publishing Cypress results to a TestRail test run.</source>
          <target state="translated">Cypressの結果をTestRailテストランに公開するためのカスタムレポーター。</target>
        </trans-unit>
        <trans-unit id="6ac6e340361eda697462e9bfce972b8be65e2a29" translate="yes" xml:space="preserve">
          <source>Customize available browsers</source>
          <target state="translated">利用可能なブラウザのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="60273f665dee8f8e4c45bdb2d21bb86f108c4685" translate="yes" xml:space="preserve">
          <source>Customize the &lt;code&gt;babel&lt;/code&gt; settings to add your own plugins.</source>
          <target state="translated">独自のプラグインを追加するには、 &lt;code&gt;babel&lt;/code&gt; 設定をカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="3f16d98fa8492ee7147a5316bfeb5c7d3644bb3b" translate="yes" xml:space="preserve">
          <source>Cypress</source>
          <target state="translated">Cypress</target>
        </trans-unit>
        <trans-unit id="9d6d4c9f7411879c74391a52006e7dedc051c39a" translate="yes" xml:space="preserve">
          <source>Cypress &lt;code&gt;.js&lt;/code&gt; files are no longer minified to make them easier to debug.</source>
          <target state="translated">サイプレスの &lt;code&gt;.js&lt;/code&gt; ファイルは、デバッグを容易にするために縮小されなくなりました。</target>
        </trans-unit>
        <trans-unit id="69bb979a44a573f92682a6ef967aa11acd1b71e0" translate="yes" xml:space="preserve">
          <source>Cypress &lt;code&gt;should&lt;/code&gt; callback</source>
          <target state="translated">サイプレス &lt;code&gt;should&lt;/code&gt; コールバックする必要があります</target>
        </trans-unit>
        <trans-unit id="dd834f87d55654636b544d559abbcd82fd34dc6e" translate="yes" xml:space="preserve">
          <source>Cypress API</source>
          <target state="translated">サイプレスエーピーアイ</target>
        </trans-unit>
        <trans-unit id="e79886eaef25ee1a767b7bbd89725a0c4a901c04" translate="yes" xml:space="preserve">
          <source>Cypress Angular Schematic</source>
          <target state="translated">Cypress Angularの回路図</target>
        </trans-unit>
        <trans-unit id="41077ca081d9da32474c23b44a47df79374161dd" translate="yes" xml:space="preserve">
          <source>Cypress Api</source>
          <target state="translated">サイプレスアピ</target>
        </trans-unit>
        <trans-unit id="52eefa9ba6e0ab14078c1c7a45dd3034112ecb45" translate="yes" xml:space="preserve">
          <source>Cypress CLI no longer requires &lt;code&gt;git&lt;/code&gt; to install. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/124&quot;&gt;#124&lt;/a&gt;</source>
          <target state="translated">サイプレスCLIは、 &lt;code&gt;git&lt;/code&gt; をインストールする必要がなくなりました。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/124&quot;&gt;＃124&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efff2180b6dd15d33a080426767cd53dfdf9ddd6" translate="yes" xml:space="preserve">
          <source>Cypress CLI wrapper where you can specify the total number of expected tests</source>
          <target state="translated">Cypress CLI ラッパーで、期待されるテストの総数を指定することができます。</target>
        </trans-unit>
        <trans-unit id="0aa0bdf7061e27bd73473d6ad095f5b4f6662e3d" translate="yes" xml:space="preserve">
          <source>Cypress Cookies API</source>
          <target state="translated">サイプレスクッキーAPI</target>
        </trans-unit>
        <trans-unit id="9959819eed1eec586e5deb5e88bbcbd379c21bb5" translate="yes" xml:space="preserve">
          <source>Cypress Daywalker</source>
          <target state="translated">サイプレスデイウォーカー</target>
        </trans-unit>
        <trans-unit id="35f838de597a062c7402e87c59292b2faf40dc9d" translate="yes" xml:space="preserve">
          <source>Cypress Errors in &lt;code&gt;hooks&lt;/code&gt; (&lt;code&gt;beforeEach&lt;/code&gt;, etc) will no longer cause Mocha to fire its &lt;code&gt;end&lt;/code&gt; event thus ending the entire run. In CI, this would cause the test suite to end early. Uncaught Mocha errors will however continue this behavior. Cypress does not yet have a &amp;ldquo;skipped&amp;rdquo; visual state for tests which were skipped, so at the moment it may look a little strange and unpredictable.</source>
          <target state="translated">&lt;code&gt;hooks&lt;/code&gt; 内のサイプレスエラー（ &lt;code&gt;beforeEach&lt;/code&gt; など）が原因でMochaが &lt;code&gt;end&lt;/code&gt; イベントを起動することがなくなり、実行全体が終了します。CIでは、これによりテストスイートが早期に終了します。ただし、キャッチされなかったMochaエラーはこの動作を継続します。サイプレスは、スキップされたテストの「スキップされた」視覚的状態をまだ備えていないため、現時点では、少し奇妙で予測できないように見える場合があります。</target>
        </trans-unit>
        <trans-unit id="88d186e76461bba8673c60f59e6c077762385c04" translate="yes" xml:space="preserve">
          <source>Cypress Events</source>
          <target state="translated">サイプレスのイベント</target>
        </trans-unit>
        <trans-unit id="e2ab950a9aafc22fbd239b148d5700dae7d411c7" translate="yes" xml:space="preserve">
          <source>Cypress GitHub app installation process</source>
          <target state="translated">Cypress GitHubアプリのインストール手順</target>
        </trans-unit>
        <trans-unit id="14e84b1e662b7143cad804dcdbedeb8d64f0ace8" translate="yes" xml:space="preserve">
          <source>Cypress Image Diff</source>
          <target state="translated">サイプレス画像の差分</target>
        </trans-unit>
        <trans-unit id="1421f38b06ab7db60339dbf7bc0a26d648b10c8a" translate="yes" xml:space="preserve">
          <source>Cypress Image Snapshot</source>
          <target state="translated">サイプレスイメージスナップショット</target>
        </trans-unit>
        <trans-unit id="a5c29edaa1a6568d26f4aa47714a618f2e21e08b" translate="yes" xml:space="preserve">
          <source>Cypress Is Simple</source>
          <target state="translated">サイプレスはシンプル</target>
        </trans-unit>
        <trans-unit id="54e181337e4191b37fff3e9b2ef307609878f430" translate="yes" xml:space="preserve">
          <source>Cypress Nuxt</source>
          <target state="translated">サイプレス・ナックス</target>
        </trans-unit>
        <trans-unit id="0b83e38e79f67bce5c1ce1c7ec8a6f4ecfea5015" translate="yes" xml:space="preserve">
          <source>Cypress Profile</source>
          <target state="translated">サイプレスのプロフィール</target>
        </trans-unit>
        <trans-unit id="b684aa809dec527ae9a9e296103b42a9ee59b092" translate="yes" xml:space="preserve">
          <source>Cypress Test Runner can wait for the property &lt;code&gt;window.appReady&lt;/code&gt; to be &lt;code&gt;true&lt;/code&gt; before every test</source>
          <target state="translated">サイプレステストランナーは、すべてのテストの前にプロパティ &lt;code&gt;window.appReady&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; になるのを待つことができます。</target>
        </trans-unit>
        <trans-unit id="f32db866bdbcb93c4b687393727d04dc28e1fad4" translate="yes" xml:space="preserve">
          <source>Cypress Test Runner is an Electron application, and its behavior (and the behavior of the bundled-in Electron browser) can be customized using command line switches. The supported switches depend on the Electron version, see &lt;a href=&quot;https://www.electronjs.org/docs/api/command-line-switches&quot;&gt;Electron documentation&lt;/a&gt;.</source>
          <target state="translated">Cypress Test RunnerはElectronアプリケーションであり、その動作（およびバンドルされているElectronブラウザーの動作）は、コマンドラインスイッチを使用してカスタマイズできます。サポートされているスイッチは、Electronのバージョンによって異なります&lt;a href=&quot;https://www.electronjs.org/docs/api/command-line-switches&quot;&gt;。Electronのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d5d22d719324ad24c3524d119c1d8ff6f95d8b8a" translate="yes" xml:space="preserve">
          <source>Cypress Visual Regression</source>
          <target state="translated">サイプレス視覚回帰</target>
        </trans-unit>
        <trans-unit id="bb4c1f9ea980a868e458efe31556ede34737e003" translate="yes" xml:space="preserve">
          <source>Cypress Watch Preprocessor</source>
          <target state="translated">サイプレスウォッチプリプロセッサ</target>
        </trans-unit>
        <trans-unit id="9cb0f68616a1ce91b2be26749d697804c1ae303f" translate="yes" xml:space="preserve">
          <source>Cypress additionally handles situations where a page load was not caused (such as hash routing) and will resolve immediately.</source>
          <target state="translated">Cypress はさらに、ページロードが発生しなかった状況 (ハッシュルーティングなど)を処理し、即座に解決します。</target>
        </trans-unit>
        <trans-unit id="de149d69317b64471762f15fe066156d0ba4a998" translate="yes" xml:space="preserve">
          <source>Cypress aims not only to make it easier to write tests, but after you build a test harness, it will make it easier to dive into failed tests (hat run in CI). This release paves the way for providing after-run results and allowing you to dive into those failures.</source>
          <target state="translated">Cypress はテストを書きやすくするだけでなく、テストハーネスを構築した後に、失敗したテスト (CI でのハットラン)に飛び込むことを容易にすることを目的としています。このリリースは、アフターランの結果を提供し、失敗したテストに飛び込むことができるようにするための道を開きます。</target>
        </trans-unit>
        <trans-unit id="27de11e0968111b28bb7427659b60e0f8f29cdce" translate="yes" xml:space="preserve">
          <source>Cypress allows you to control how a selector is determined.</source>
          <target state="translated">サイプレスでは、セレクターの決定方法を制御することができます。</target>
        </trans-unit>
        <trans-unit id="ec8c569f6f0f2b8d391c646f589ae52e51e38cd4" translate="yes" xml:space="preserve">
          <source>Cypress already sets some the Electron command line switches internally. See file &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/environment.js&quot;&gt;packages/server/lib/environment.js&lt;/a&gt;. There is no way to see all currently set switches after Electron&amp;rsquo;s launch.</source>
          <target state="translated">サイプレスはすでにいくつかのElectronコマンドラインスイッチを内部で設定しています。ファイル&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/environment.js&quot;&gt;packages / server / lib /environment.jsを&lt;/a&gt;参照してください。Electronの起動後、現在設定されているすべてのスイッチを表示する方法はありません。</target>
        </trans-unit>
        <trans-unit id="3800d9b000a1a2560d80b3707760dcf877eaed30" translate="yes" xml:space="preserve">
          <source>Cypress also bundles the following tools on the &lt;code&gt;Cypress&lt;/code&gt; object. These can be used anywhere inside of your tests.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;Cypress&lt;/code&gt; オブジェクトに以下のツールもバンドルしています。これらはテスト内のどこでも使用できます。</target>
        </trans-unit>
        <trans-unit id="b5c6824f5710b13d347fc599280c94c480c26953" translate="yes" xml:space="preserve">
          <source>Cypress also exposes a shortcut for debugging commands, &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;. Let&amp;rsquo;s rewrite the test above using this helper method:</source>
          <target state="translated">サイプレスは、デバッグコマンド&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; の&lt;/a&gt;ショートカットも公開しています。このヘルパーメソッドを使用して上記のテストを書き直してみましょう。</target>
        </trans-unit>
        <trans-unit id="7131ffb13e86e7e1beb68ebb5dca5c8e951fa339" translate="yes" xml:space="preserve">
          <source>Cypress also logs whether the XHR was stubbed or not to the console when you click on the command in the Command Log. It will indicate whether a request was stubbed, which url it matched or that it did not match any routes.</source>
          <target state="translated">Cypress は、コマンドログでコマンドをクリックすると、XHR がスタブされたかどうかをコンソールにログに記録します。これは、リクエストがスタブされたかどうか、どの URL にマッチしたか、またはどのルートにもマッチしなかったかを示します。</target>
        </trans-unit>
        <trans-unit id="c3039ff3ebae68304c6756b1cb2fcf0b0aec30cd" translate="yes" xml:space="preserve">
          <source>Cypress also operates at the network layer by reading and altering web traffic on the fly. This enables Cypress to not only modify everything coming in and out of the browser, but also to change code that may interfere with its ability to automate the browser.</source>
          <target state="translated">Cypress はネットワーク層でも動作し、ウェブトラフィックをその場で読み取って変更します。これにより、Cypress はブラウザに出入りするすべてのものを変更するだけでなく、ブラウザを自動化する能力を妨げる可能性のあるコードを変更することができます。</target>
        </trans-unit>
        <trans-unit id="205db03b575e9f29caf339ccf9dad818e09a328c" translate="yes" xml:space="preserve">
          <source>Cypress also provides hooks (borrowed from &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt;).</source>
          <target state="translated">サイプレスはフックも提供しています（&lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt;から借用）。</target>
        </trans-unit>
        <trans-unit id="cfdf94fdf7f006cca4ddbcad3ef0f56f8dbf81c1" translate="yes" xml:space="preserve">
          <source>Cypress also records videos when running tests.</source>
          <target state="translated">Cypressは、テストを実行する際に動画も記録しています。</target>
        </trans-unit>
        <trans-unit id="8683b31eafef2362a9bd609d16533413a684d140" translate="yes" xml:space="preserve">
          <source>Cypress also ships other &lt;a href=&quot;../../plugins/index&quot;&gt;file-watching preprocessors&lt;/a&gt;; you&amp;rsquo;ll have to configure these explicitly if you want to use them.</source>
          <target state="translated">サイプレスは他の&lt;a href=&quot;../../plugins/index&quot;&gt;ファイル監視プリプロセッサ&lt;/a&gt;も出荷しています。これらを使用する場合は、これらを明示的に構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="63a1f2f000f0dedbe564c6836a62c5ac80c45bc2" translate="yes" xml:space="preserve">
          <source>Cypress also supports &lt;code&gt;ES2015&lt;/code&gt; out of the box. You can use either &lt;code&gt;ES2015 modules&lt;/code&gt; or &lt;code&gt;CommonJS modules&lt;/code&gt;. This means you can &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; both &lt;strong&gt;npm packages&lt;/strong&gt; and &lt;strong&gt;local relative modules&lt;/strong&gt;.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;ES2015&lt;/code&gt; もサポートしています。 &lt;code&gt;ES2015 modules&lt;/code&gt; または &lt;code&gt;CommonJS modules&lt;/code&gt; いずれかを使用できます。つまり、&lt;strong&gt;npmパッケージ&lt;/strong&gt;と&lt;strong&gt;ローカルの相対モジュールの&lt;/strong&gt;両方を &lt;code&gt;import&lt;/code&gt; または &lt;code&gt;require&lt;/code&gt; でき&lt;strong&gt;ます&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce8f3aa96584d41b8d64e9de6ad649d3d8ed5b72" translate="yes" xml:space="preserve">
          <source>Cypress attempts to &lt;a href=&quot;launching-browsers&quot;&gt;automatically find installed Chrome versions for you&lt;/a&gt;. However, probing for browsers across different environments can be error-prone. If Cypress cannot find a browser but you know you have it installed, there are ways to ensure that Cypress can &amp;ldquo;see&amp;rdquo; it.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;launching-browsers&quot;&gt;インストールされているChromeバージョン&lt;/a&gt;を自動的に見つけようとします。ただし、さまざまな環境でブラウザーをプローブすると、エラーが発生しやすくなります。サイプレスがブラウザを検出できないが、それがインストールされていることがわかっている場合、サイプレスがブラウザを「認識」できるようにする方法があります。</target>
        </trans-unit>
        <trans-unit id="f462b9b54db2f04608eaf5243099335895e36206" translate="yes" xml:space="preserve">
          <source>Cypress authentication flows using social network providers</source>
          <target state="translated">ソーシャルネットワークプロバイダを利用したサイプレスの認証フロー</target>
        </trans-unit>
        <trans-unit id="c60704aea584b8ff4de70f2d2fa6f676195e4834" translate="yes" xml:space="preserve">
          <source>Cypress automates the browser with its own unique architecture - different from any other testing tool. While this unlocks the power to do things you will not find anywhere else, there are specific trade-offs that are made. There is no free lunch!</source>
          <target state="translated">Cypress は、他のテストツールとは異なる独自のアーキテクチャでブラウザを自動化します。これにより、他のどこにもないようなことができるようになりますが、特定のトレードオフがあります。無料のランチはありません!</target>
        </trans-unit>
        <trans-unit id="7faa7030aaa8dc43242e8b494135ff9c20a49f86" translate="yes" xml:space="preserve">
          <source>Cypress automatically accepts alerts but you can still assert on the text content.</source>
          <target state="translated">Cypress は自動的にアラートを受け付けますが、テキストの内容をアサートすることができます。</target>
        </trans-unit>
        <trans-unit id="34020ac87c66d74769afe6f62ac732712505ff9e" translate="yes" xml:space="preserve">
          <source>Cypress automatically bundles and wraps these libraries:</source>
          <target state="translated">Cypress はこれらのライブラリを自動的にバンドルしてラップします。</target>
        </trans-unit>
        <trans-unit id="4b9c8f425768b235449d1b7611cdef9610ff6beb" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear a specific cookie inside a single test.</source>
          <target state="translated">サイプレスは各テストの&lt;em&gt;前に&lt;/em&gt;すべてのCookieを自動的にクリアして、テスト間で状態が共有されるのを防ぎます。単一のテスト内の特定のCookieをクリアするために使用しない限り、このコマンドを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="8596d3363e8b48e4dde1dd500aa65bc2b5111190" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear all cookies inside a single test.</source>
          <target state="translated">サイプレスは各テストの&lt;em&gt;前に&lt;/em&gt;すべてのCookieを自動的にクリアして、テスト間で状態が共有されるのを防ぎます。単一のテスト内のすべてのCookieをクリアするために使用している場合を除き、このコマンドを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="952d12ab951895425a0272c9c486aab6d6f869cb" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;strong&gt;before&lt;/strong&gt; each test to prevent state from building up.</source>
          <target state="translated">サイプレスは、各テストの&lt;strong&gt;前に&lt;/strong&gt;すべてのCookieを自動的にクリアして、状態が構築されないようにします。</target>
        </trans-unit>
        <trans-unit id="288419f1b4e6447098e10f904e22da5ba405beb9" translate="yes" xml:space="preserve">
          <source>Cypress automatically collects the request &lt;code&gt;headers&lt;/code&gt; and the request &lt;code&gt;body&lt;/code&gt; and will make this available to you.</source>
          <target state="translated">サイプレスはリクエスト &lt;code&gt;headers&lt;/code&gt; とリクエスト &lt;code&gt;body&lt;/code&gt; を自動的に収集し、これを利用できるようにします。</target>
        </trans-unit>
        <trans-unit id="a13213c6c4378cce77d1695a5a59a88c4f1b7c43" translate="yes" xml:space="preserve">
          <source>Cypress automatically continues to persist the server and routing configuration even after a test ends. This means you can continue to use your application and still benefit from stubbing or other server configuration.</source>
          <target state="translated">Cypress は、テストが終了した後も、サーバーとルーティングの設定を自動的に持続させます。これは、アプリケーションを継続して使用することができ、スタブやその他のサーバー構成の恩恵を受けることができることを意味します。</target>
        </trans-unit>
        <trans-unit id="448e8a43ed6a0cdd95161a4d71ed4bf076e4e8eb" translate="yes" xml:space="preserve">
          <source>Cypress automatically detects available browsers on your OS. You can switch the browser in the Test Runner by using the drop down in the top right corner:</source>
          <target state="translated">Cypress は、お使いの OS で利用可能なブラウザを自動的に検出します。テストランナーでは、右上のドロップダウンを使ってブラウザを切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="195050812f55b35b744ecf4452211c1aab1e9622" translate="yes" xml:space="preserve">
          <source>Cypress automatically detects things like a &lt;code&gt;page transition event&lt;/code&gt; and will automatically &lt;strong&gt;halt&lt;/strong&gt; running commands until the next page has &lt;strong&gt;finished&lt;/strong&gt; loading.</source>
          <target state="translated">サイプレスは &lt;code&gt;page transition event&lt;/code&gt; などを自動的に検出し、次のページの読み込みが&lt;strong&gt;完了&lt;/strong&gt;するまで、実行中のコマンドを自動的に&lt;strong&gt;停止&lt;/strong&gt;します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d048d73b85c147a10d9165e637e967d8ea11293" translate="yes" xml:space="preserve">
          <source>Cypress automatically determines the encoding for the following file types:</source>
          <target state="translated">Cypress は、以下のファイルタイプのエンコーディングを自動的に決定します。</target>
        </trans-unit>
        <trans-unit id="f91e3ded351522df10339585b090b057e887db9d" translate="yes" xml:space="preserve">
          <source>Cypress automatically disables certain functionality in the Cypress launched browser that tend to get in the way of automated testing.</source>
          <target state="translated">サイプレスは、自動テストの邪魔になりがちなサイプレス起動ブラウザの特定の機能を自動的に無効化します。</target>
        </trans-unit>
        <trans-unit id="7c5ab06a36d25b1d990a6a9fcaa33ee49c405ccf" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.$&lt;/code&gt;.</source>
          <target state="translated">サイプレスは自動的に&lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt;を含め、それを &lt;code&gt;Cypress.$&lt;/code&gt; として公開します。</target>
        </trans-unit>
        <trans-unit id="3e4e794d0c17e362d2ad6d81b4671af0ca8eaece" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.moment&lt;/code&gt;.</source>
          <target state="translated">サイプレスは自動的に&lt;a href=&quot;http://momentjs.com/&quot;&gt;moment.jsを含め&lt;/a&gt;、それを &lt;code&gt;Cypress.moment&lt;/code&gt; として公開します。</target>
        </trans-unit>
        <trans-unit id="be2e28083826ddb01e8b7f9869ea6f9ddd83c22c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon.JS&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.sinon&lt;/code&gt;. Because commands &lt;a href=&quot;../commands/spy&quot;&gt;&lt;code&gt;cy.spy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../commands/stub&quot;&gt;&lt;code&gt;cy.stub&lt;/code&gt;&lt;/a&gt; are already wrapping Sinon methods, the most common use for &lt;code&gt;Cypress.sinon&lt;/code&gt; is to provide flexible &lt;a href=&quot;https://sinonjs.org/releases/latest/matchers/&quot;&gt;matchers&lt;/a&gt; when doing assertions.</source>
          <target state="translated">サイプレスは自動的に&lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon.JSをインクルードし&lt;/a&gt;、それを &lt;code&gt;Cypress.sinon&lt;/code&gt; として公開します。コマンドので&lt;a href=&quot;../commands/spy&quot;&gt; &lt;code&gt;cy.spy&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../commands/stub&quot;&gt; &lt;code&gt;cy.stub&lt;/code&gt; は&lt;/a&gt;すでにSinonメソッドをラップしている、の最も一般的な使用 &lt;code&gt;Cypress.sinon&lt;/code&gt; は柔軟提供することである&lt;a href=&quot;https://sinonjs.org/releases/latest/matchers/&quot;&gt;マッチャーを&lt;/a&gt;アサーションを行うとき。</target>
        </trans-unit>
        <trans-unit id="727141a325b329e459fc856f157377c20990812c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.minimatch&lt;/code&gt;.</source>
          <target state="translated">サイプレスは自動的に&lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;ミニマッチを組み込み&lt;/a&gt;、それを &lt;code&gt;Cypress.minimatch&lt;/code&gt; として公開します。</target>
        </trans-unit>
        <trans-unit id="142e71e26e63b3f70f407e6ea5b30330f96b0e42" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://github.com/petkaantonov/bluebird&quot;&gt;Bluebird&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.Promise&lt;/code&gt;.</source>
          <target state="translated">サイプレスは自動的に&lt;a href=&quot;https://github.com/petkaantonov/bluebird&quot;&gt;Bluebird&lt;/a&gt;を含め、それを &lt;code&gt;Cypress.Promise&lt;/code&gt; として公開します。</target>
        </trans-unit>
        <trans-unit id="7030562302ba8607ecbe737211e934ee0457002f" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; and exposes it as &lt;code&gt;Cypress._&lt;/code&gt;. Call any valid Lodash method on &lt;code&gt;Cypress._&lt;/code&gt;</source>
          <target state="translated">サイプレスは自動的に&lt;a href=&quot;https://lodash.com/&quot;&gt;lodashを含め&lt;/a&gt;、それを &lt;code&gt;Cypress._&lt;/code&gt; として公開します。サイプレスで有効なLodashメソッドを &lt;code&gt;Cypress._&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="751194527fc0f1f6027a3dbadb474533e44aa86c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes a &lt;a href=&quot;https://github.com/nolanlawson/blob-util&quot;&gt;Blob&lt;/a&gt; library and exposes it as &lt;code&gt;Cypress.Blob&lt;/code&gt;.</source>
          <target state="translated">サイプレスは自動的に&lt;a href=&quot;https://github.com/nolanlawson/blob-util&quot;&gt;Blob&lt;/a&gt;ライブラリを &lt;code&gt;Cypress.Blob&lt;/code&gt; それをCypress.Blobとして公開します。</target>
        </trans-unit>
        <trans-unit id="d7592108cf1b7d6d67b11f34d0f50eb01eb24858" translate="yes" xml:space="preserve">
          <source>Cypress automatically indicates when an XHR request happens in your application. These are always logged in the Command Log (regardless of whether it&amp;rsquo;s stubbed). Cypress indicates when a request has started and when it is finished. Additionally, Cypress takes a snapshot of the DOM at the moment the request is made and another snapshot at the moment the response returns.</source>
          <target state="translated">サイプレスは、アプリケーションでXHRリクエストが発生すると自動的に通知します。これらは常に（スタブされているかどうかに関係なく）コマンドログに記録されます。サイプレスは、リクエストの開始時と終了時を示します。さらに、サイプレスは、要求が行われた瞬間にDOMのスナップショットを取得し、応答が返された時点で別のスナップショットを取得します。</target>
        </trans-unit>
        <trans-unit id="089eedb4a06d8d7e3ea56740bc0c3c21e8a70dfa" translate="yes" xml:space="preserve">
          <source>Cypress automatically matches the spec and browser behavior for pressing the &lt;code&gt;{enter}&lt;/code&gt; key when the input belongs to a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">サイプレスは、入力が &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; に属しているときに &lt;code&gt;{enter}&lt;/code&gt; キーを押すための仕様とブラウザの動作を自動的に照合します。</target>
        </trans-unit>
        <trans-unit id="e441959f284c286707cdec9765ece95e7a137663" translate="yes" xml:space="preserve">
          <source>Cypress automatically normalizes the &lt;code&gt;cy.location()&lt;/code&gt; command and strips out extraneous values and properties found in &lt;code&gt;window.location&lt;/code&gt;. Also, the object literal yielded by &lt;code&gt;cy.location()&lt;/code&gt; is a basic object literal, not the special &lt;code&gt;window.location&lt;/code&gt; object.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;cy.location()&lt;/code&gt; コマンドを自動的に正規化し、window.locationにある無関係な値とプロパティを &lt;code&gt;window.location&lt;/code&gt; ます。また、 &lt;code&gt;cy.location()&lt;/code&gt; によって生成されるオブジェクトリテラルは、特別な &lt;code&gt;window.location&lt;/code&gt; オブジェクトではなく、基本的なオブジェクトリテラルです。</target>
        </trans-unit>
        <trans-unit id="7f145d0c0fa0ba06400026843839a67b825d3107" translate="yes" xml:space="preserve">
          <source>Cypress automatically normalizes the &lt;code&gt;cy.location()&lt;/code&gt; command and strips out extraneous values and properties found in &lt;code&gt;window.location&lt;/code&gt;. Also, the object literal yielded by &lt;code&gt;cy.location()&lt;/code&gt; is just a basic object literal, not the special &lt;code&gt;window.location&lt;/code&gt; object.</source>
          <target state="translated">サイプレスは &lt;code&gt;cy.location()&lt;/code&gt; コマンドを自動的に正規化し、window.locationにある無関係な値とプロパティを &lt;code&gt;window.location&lt;/code&gt; ます。また、 &lt;code&gt;cy.location()&lt;/code&gt; によって生成されるオブジェクトリテラルは、特別な &lt;code&gt;window.location&lt;/code&gt; オブジェクトではなく、単なる基本的なオブジェクトリテラルです。</target>
        </trans-unit>
        <trans-unit id="fe542103b183548d306ffcb355167f3b048a84f3" translate="yes" xml:space="preserve">
          <source>Cypress automatically prepends the &lt;code&gt;http://&lt;/code&gt; protocol to common hosts. If you&amp;rsquo;re not using one of these 3 hosts, then make sure to provide the protocol.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;http://&lt;/code&gt; プロトコルを一般的なホストに自動的に付加します。これら3つのホストのいずれかを使用していない場合は、必ずプロトコルを指定してください。</target>
        </trans-unit>
        <trans-unit id="babeb9d70f2af57eb60b9647c2cec2b5f4b05efc" translate="yes" xml:space="preserve">
          <source>Cypress automatically reads from your system&amp;rsquo;s &lt;code&gt;HTTP_PROXY&lt;/code&gt; environment variable and uses that proxy for all HTTP and HTTPS traffic. If an &lt;code&gt;HTTPS_PROXY&lt;/code&gt; environment variable is set, HTTPS traffic will use that proxy instead.</source>
          <target state="translated">サイプレスはシステムの &lt;code&gt;HTTP_PROXY&lt;/code&gt; 環境変数から自動的に読み取り、そのプロキシをすべてのHTTPおよびHTTPSトラフィックに使用します。場合 &lt;code&gt;HTTPS_PROXY&lt;/code&gt; の環境変数が設定され、HTTPSトラフィックは、代わりにそのプロキシを使用します。</target>
        </trans-unit>
        <trans-unit id="f83a4b79b348fb55a78e735598e4af406e143324" translate="yes" xml:space="preserve">
          <source>Cypress automatically retries &lt;code&gt;cypress verify&lt;/code&gt; and &lt;code&gt;cypress run&lt;/code&gt; commands by starting its own Xvfb server on Linux if the first attempt fails due to possible &lt;code&gt;DISPLAY&lt;/code&gt; misconfiguration. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4034&quot;&gt;#4034&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、可能性のある &lt;code&gt;DISPLAY&lt;/code&gt; の構成ミスにより最初の試行が失敗した場合、Linux上で独自のXvfbサーバーを起動 &lt;code&gt;cypress verify&lt;/code&gt; 、サイプレス検証および &lt;code&gt;cypress run&lt;/code&gt; コマンドを自動的に再試行します。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4034&quot;&gt;＃4034&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bea1daf076563864117140a361307480f75692cb" translate="yes" xml:space="preserve">
          <source>Cypress automatically runs this command &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear localStorage inside a single test.</source>
          <target state="translated">サイプレスは、各テストの&lt;em&gt;前に&lt;/em&gt;このコマンドを自動的に実行して、テスト間で状態が共有されるのを防ぎます。単一のテスト内でlocalStorageをクリアするために使用しない限り、このコマンドを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="59ba96363233abebd8a8d6249e317b340963d2f6" translate="yes" xml:space="preserve">
          <source>Cypress automatically scaffolds out a suggested folder structure for organizing your fixtures on every new project. By default it will create an &lt;code&gt;example.json&lt;/code&gt; file when you add your project to Cypress.</source>
          <target state="translated">サイプレスは、すべての新しいプロジェクトでフィクスチャを整理するための推奨フォルダー構造を自動的に足場します。デフォルトでは、プロジェクトをサイプレスに追加すると、 &lt;code&gt;example.json&lt;/code&gt; ファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="17eeec7102c0df2fcb69a2d62603edbeb383c0dd" translate="yes" xml:space="preserve">
          <source>Cypress automatically sets &lt;code&gt;Content-Length&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; based on the response &lt;code&gt;body&lt;/code&gt; you stub.</source>
          <target state="translated">サイプレスは、スタブしたレスポンス &lt;code&gt;body&lt;/code&gt; 基づいて &lt;code&gt;Content-Length&lt;/code&gt; と &lt;code&gt;Content-Type&lt;/code&gt; を自動的に設定します。</target>
        </trans-unit>
        <trans-unit id="8537b0319700a7c0b5584023688134eb9c4f8c3f" translate="yes" xml:space="preserve">
          <source>Cypress automatically traveled back in time to a snapshot of when that command resolved. Additionally, since &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; finds DOM elements on the page, Cypress also highlights the element and scrolls it into view (to the top of the page).</source>
          <target state="translated">サイプレスは、そのコマンドが解決されたときのスナップショットまで時間を遡って自動的に移動しました。さらに、&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;はページ上のDOM要素を見つけるので、サイプレスは要素を強調表示し、スクロールして（ページの上部に）表示します。</target>
        </trans-unit>
        <trans-unit id="78dc4e0c2575d42f4d4738679fbf1995e0d60fd2" translate="yes" xml:space="preserve">
          <source>Cypress automatically validates your fixtures. If your &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt; files contain syntax errors, they will be shown in the Command Log.</source>
          <target state="translated">サイプレスはフィクスチャを自動的に検証します。あなたの場合は &lt;code&gt;.json&lt;/code&gt; 、 &lt;code&gt;.js&lt;/code&gt; ファイル、または &lt;code&gt;.coffee&lt;/code&gt; ファイルは、構文エラーが含まれ、それらはコマンドログに表示されます。</target>
        </trans-unit>
        <trans-unit id="72b4f83152eb81b3029883b9f05f1707ebae0c08" translate="yes" xml:space="preserve">
          <source>Cypress automatically waits for the network call to complete before proceeding to the next command.</source>
          <target state="translated">Cypress は、次のコマンドに進む前に、ネットワークコールが完了するのを自動的に待ちます。</target>
        </trans-unit>
        <trans-unit id="1f239706295d2bc14c4317941e9e5548f210e527" translate="yes" xml:space="preserve">
          <source>Cypress binaries can now be pointed to a staging environment with &lt;code&gt;CYPRESS_ENV=staging&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/813&quot;&gt;#813&lt;/a&gt;.</source>
          <target state="translated">サイプレスバイナリは、 &lt;code&gt;CYPRESS_ENV=staging&lt;/code&gt; を使用してステージング環境をポイントできるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/813&quot;&gt;＃813を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="898b813e518d7e021000e6b2dfe3532750575a81" translate="yes" xml:space="preserve">
          <source>Cypress blurs other focused elements first</source>
          <target state="translated">サイプレスは、他の焦点を当てた要素を最初にぼかす</target>
        </trans-unit>
        <trans-unit id="80b9d7b438082a441faad059e0d4791d0912a368" translate="yes" xml:space="preserve">
          <source>Cypress builds on these popular tools and frameworks that you &lt;em&gt;hopefully&lt;/em&gt; already have some familiarity and knowledge of. If not, that&amp;rsquo;s okay too.</source>
          <target state="translated">サイプレスでは、これらの人気のツールとフレームワーク上に構築&lt;em&gt;できれば&lt;/em&gt;、すでにいくつかの親しみやすさと知識を持っています。そうでなければ、それも大丈夫です。</target>
        </trans-unit>
        <trans-unit id="9665b9dff61c3e494294b89d7bf8037283563ddb" translate="yes" xml:space="preserve">
          <source>Cypress bundles &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;&lt;code&gt;Chai&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../references/bundled-tools#Chai-jQuery&quot;&gt;&lt;code&gt;Chai-jQuery&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../references/bundled-tools#Sinon-Chai&quot;&gt;&lt;code&gt;Sinon-Chai&lt;/code&gt;&lt;/a&gt; to provide built-in assertions. You can see a comprehensive list of them in &lt;a href=&quot;../references/assertions&quot;&gt;the list of assertions reference&lt;/a&gt;. You can also &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;write your own assertions as Chai plugins&lt;/a&gt; and use them in Cypress.</source>
          <target state="translated">サイプレスは、組み込みアサーションを提供するために&lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt; &lt;code&gt;Chai&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../references/bundled-tools#Chai-jQuery&quot;&gt; &lt;code&gt;Chai-jQuery&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../references/bundled-tools#Sinon-Chai&quot;&gt; &lt;code&gt;Sinon-Chai&lt;/code&gt; &lt;/a&gt;をバンドルしています。これらの包括的なリストは&lt;a href=&quot;../references/assertions&quot;&gt;、アサーションリファレンスのリストで&lt;/a&gt;確認できます。&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;独自のアサーションをChaiプラグインとして記述&lt;/a&gt;し、サイプレスで使用することもできます。</target>
        </trans-unit>
        <trans-unit id="8bb48c90410e6d5e56a8225e337f6bcdbca2e881" translate="yes" xml:space="preserve">
          <source>Cypress bundles the popular &lt;a href=&quot;assertions#Chai&quot;&gt;Chai&lt;/a&gt; assertion library, as well as helpful extensions for &lt;a href=&quot;assertions#Sinon-Chai&quot;&gt;Sinon&lt;/a&gt; and &lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;jQuery&lt;/a&gt;, bringing you dozens of powerful assertions for free.</source>
          <target state="translated">サイプレスは、人気のある&lt;a href=&quot;assertions#Chai&quot;&gt;Chai&lt;/a&gt;アサーションライブラリのほか、&lt;a href=&quot;assertions#Sinon-Chai&quot;&gt;Sinon&lt;/a&gt;および&lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;jQueryの&lt;/a&gt;便利な拡張機能をバンドルしているため、数十の強力なアサーションを無料で利用できます。</target>
        </trans-unit>
        <trans-unit id="912b8a05d7641a5157a8ac62f883eb478cd4d4ac" translate="yes" xml:space="preserve">
          <source>Cypress can alternatively be downloaded / installed / managed through the CLI utility.</source>
          <target state="translated">Cypress は、CLI ユーティリティを介してダウンロード、インストール、管理することができます。</target>
        </trans-unit>
        <trans-unit id="60d75cf98a5f411854c3f6e1877aa625ee49a1a2" translate="yes" xml:space="preserve">
          <source>Cypress can now be run through the terminal.</source>
          <target state="translated">Cypressをターミナルから実行できるようになりました。</target>
        </trans-unit>
        <trans-unit id="e52e2dd568be1d72784cb2efddb9a6b58e7b0a3b" translate="yes" xml:space="preserve">
          <source>Cypress can now predict upcoming assertions and modifies its behavior until the intended state has been reached.</source>
          <target state="translated">Cypress は、今後のアサーションを予測し、意図した状態に達するまで動作を変更できるようになりました。</target>
        </trans-unit>
        <trans-unit id="e2ad329d390b4141f10aee1a1a3819d515c27308" translate="yes" xml:space="preserve">
          <source>Cypress can now run tests in parallel across multiple virtual machines, or can be parallelized on a single machine. Cypress will automatically figure out, detect, and load balance all of your specs in the fastest and most efficient way possible. There is no configuration other than passing a &lt;code&gt;--parallel&lt;/code&gt; flag and spinning up multiple machines on your CI provider. From our experiments you can expect to see approximately 40% reduction in overall run time &lt;strong&gt;per machine&lt;/strong&gt; you add. However, attempting to run in parallel on a single machine requires server grade hardware with dozens (or even hundreds) of CPU&amp;rsquo;s and GB of RAM to run efficiently. A much better and simpler approach is to use a cluster of docker containers that are all isolated from each other. Any standard CI service (CircleCI, TravisCI, etc) comes with the ability to do this. We automatically tap into their environment variables to make parallelization possible without you having to configure anything.</source>
          <target state="translated">サイプレスは、複数の仮想マシン間で並行してテストを実行したり、単一のマシン上で並列化したりできるようになりました。サイプレスは、可能な限り最速かつ最も効率的な方法で、すべての仕様を自動的に把握、検出、および負荷分散します。 &lt;code&gt;--parallel&lt;/code&gt; フラグを渡して、CIプロバイダーで複数のマシンを起動する以外に構成はありません。私たちの実験から、&lt;strong&gt;マシンあたりの&lt;/strong&gt;全体的な実行時間は約40％短縮されることが期待できます。&lt;strong&gt;&lt;/strong&gt;あなたが追加します。ただし、単一のマシンで並列実行を試みるには、効率的に実行するために、数十（または数百）のCPUとGBのRAMを備えたサーバーグレードのハードウェアが必要です。はるかに優れたシンプルなアプローチは、すべて互いに分離されたDockerコンテナーのクラスターを使用することです。標準のCIサービス（CircleCI、TravisCIなど）には、これを実行する機能が付属しています。何も設定しなくても、環境変数を自動的に利用して並列化を可能にします。</target>
        </trans-unit>
        <trans-unit id="23a5ef31242deab64e195adfbe1a38ad88d51a91" translate="yes" xml:space="preserve">
          <source>Cypress can optionally act as your web server</source>
          <target state="translated">Cypressは、オプションでWebサーバーとして動作することができます。</target>
        </trans-unit>
        <trans-unit id="52a1e735505baab89a80b2a04906c502f6810599" translate="yes" xml:space="preserve">
          <source>Cypress can record your tests and make the results available in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="translated">サイプレスはテストを記録し、&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;サイプレスダッシュボード&lt;/a&gt;で結果を利用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="3103ba5c9e66eaf766875de6213e0aa881db8c23" translate="yes" xml:space="preserve">
          <source>Cypress can run recorded tests in parallel across multiple machines since version &lt;a href=&quot;../references/changelog#3-1-0&quot;&gt;3.1.0&lt;/a&gt;. While parallel tests can also technically run on a single machine, we do not recommend it since this machine would require significant resources to run your tests efficiently.</source>
          <target state="translated">サイプレスは、バージョン&lt;a href=&quot;../references/changelog#3-1-0&quot;&gt;3.1.0&lt;/a&gt;以降、複数のマシン間で記録されたテストを並行して実行できます。並列テストは1台のマシンで技術的に実行することもできますが、このマシンはテストを効率的に実行するために大量のリソースを必要とするため、お勧めしません。</target>
        </trans-unit>
        <trans-unit id="2173f81e07457a0732a40f22e5ee36f61611b691" translate="yes" xml:space="preserve">
          <source>Cypress can run tests in parallel across multiple machines.</source>
          <target state="translated">Cypress は、複数のマシンで並行してテストを実行することができます。</target>
        </trans-unit>
        <trans-unit id="aa678a497e7e8bf52054c3a0c74b4695275f8108" translate="yes" xml:space="preserve">
          <source>Cypress can test anything that runs in a browser.</source>
          <target state="translated">サイプレスは、ブラウザで動作するものなら何でもテストできます。</target>
        </trans-unit>
        <trans-unit id="0d211cdcd1a5f322d6f4a14cc03cba0a9600ed4e" translate="yes" xml:space="preserve">
          <source>Cypress cannot execute commands outside a running test</source>
          <target state="translated">Cypress は実行中のテストの外でコマンドを実行できません。</target>
        </trans-unit>
        <trans-unit id="16683bbf2f77a2ab0c323cab4d75ab4ebba826e1" translate="yes" xml:space="preserve">
          <source>Cypress cannot yield you primitive values isolated away from other commands. That is because Cypress commands act internally like an asynchronous stream of data that only resolve after being affected and modified &lt;strong&gt;by other commands&lt;/strong&gt;. This means we cannot yield you discrete values in chunks because we have to know everything about what you expect before handing off a value.</source>
          <target state="translated">サイプレスは、他のコマンドから分離されたプリミティブ値を生成できません。これは、サイプレスのコマンドが&lt;strong&gt;、他のコマンドの&lt;/strong&gt;影響を受けて変更さ&lt;strong&gt;れた&lt;/strong&gt;後にのみ解決する非同期データストリームのように内部的に機能するためです。これは、値を渡す前に、ユーザーが期待することについてすべてを知っている必要があるため、チャンクで離散値を生成できないことを意味します。</target>
        </trans-unit>
        <trans-unit id="929411f923ca9e9e94dd67b3031d641004ccbf97" translate="yes" xml:space="preserve">
          <source>Cypress checks a lot of things to determine an element&amp;rsquo;s visibility.</source>
          <target state="translated">サイプレスは、要素の可視性を決定するために多くのことをチェックします。</target>
        </trans-unit>
        <trans-unit id="6d5100aad92c1ad903368d629fc93a277a4bbeb6" translate="yes" xml:space="preserve">
          <source>Cypress checks whether an element&amp;rsquo;s &lt;code&gt;disabled&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">サイプレスは、要素の &lt;code&gt;disabled&lt;/code&gt; プロパティが &lt;code&gt;true&lt;/code&gt; であるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="0383d22e8f7a1d254e65aabb4bc19e4542fe00c6" translate="yes" xml:space="preserve">
          <source>Cypress checks whether an element&amp;rsquo;s &lt;code&gt;readonly&lt;/code&gt; property is set during &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;中に要素の &lt;code&gt;readonly&lt;/code&gt; プロパティが設定されているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="9afb80f4962c57b5762a23322188807dbac49560" translate="yes" xml:space="preserve">
          <source>Cypress clears any existing screenshots before &lt;code&gt;cypress run&lt;/code&gt;. If you do not want to clear your screenshots folder before a run, you can set &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">サイプレスは、サイプレスを実行する前に、既存のスクリーンショットをすべてクリアし &lt;code&gt;cypress run&lt;/code&gt; 。実行前にスクリーンショットフォルダをクリアしたくない場合は、&lt;a href=&quot;../references/configuration#Screenshots&quot;&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;false&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="a71a5e72a4079ddb8202c2fec6ea8dad1d8104b0" translate="yes" xml:space="preserve">
          <source>Cypress clears any existing videos before a &lt;code&gt;cypress run&lt;/code&gt;. If you do not want to clear your videos folder before a run, you can set &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;cypress run&lt;/code&gt; 前に既存のビデオをすべてクリアします。実行前にビデオフォルダをクリアしたくない場合は、&lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;false&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="931fce5e101a0a8e25b78524da1887402fccf4cf" translate="yes" xml:space="preserve">
          <source>Cypress comes built in with the ability to stub and spy with &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; or modify your application&amp;rsquo;s time with &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; - which lets you manipulate &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;setTimeout&lt;/code&gt;, &lt;code&gt;setInterval&lt;/code&gt;, amongst others.</source>
          <target state="translated">サイプレスは、とスタブとスパイの能力とに建てています&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt;またはを使用して、アプリケーションの時間を変更&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;あなたが操作することができます- &lt;code&gt;Date&lt;/code&gt; 、 &lt;code&gt;setTimeout&lt;/code&gt; を、 &lt;code&gt;setInterval&lt;/code&gt; 、とりわけ。</target>
        </trans-unit>
        <trans-unit id="7bf7fe5af15a1269e870d3c1c6ecf84ef8120899" translate="yes" xml:space="preserve">
          <source>Cypress comes fully baked, batteries included. Here is a list of things it can do that no other testing framework can:</source>
          <target state="translated">Cypress は完全に焼き上げられており、電池も含まれています。他のテストフレームワークではできないことをリストアップします。</target>
        </trans-unit>
        <trans-unit id="ca3cc26261bd6489e55404d0b33fa67f81b9de37" translate="yes" xml:space="preserve">
          <source>Cypress comes with TypeScript &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;type declarations&lt;/a&gt; included. Modern text editors can use these type declarations to show IntelliSense inside spec files.</source>
          <target state="translated">サイプレスにはTypeScript &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;型宣言が&lt;/a&gt;含まれています。最新のテキストエディターは、これらの型宣言を使用して、仕様ファイル内のIntelliSenseを表示できます。</target>
        </trans-unit>
        <trans-unit id="3263deada359340d90252172c2459ae06008e43a" translate="yes" xml:space="preserve">
          <source>Cypress comes with a host of debugging tools to help you understand a test.</source>
          <target state="translated">Cypress には、テストを理解するのに役立つ多数のデバッグツールが付属しています。</target>
        </trans-unit>
        <trans-unit id="6918efc1ebd09db151521ea9cdcdd52f82b3c772" translate="yes" xml:space="preserve">
          <source>Cypress comes with an npm CLI module that parses the arguments, starts the Xvfb server (if necessary), and then opens the Test Runner application built on top of &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;. Some common situations on why you would want to do this are:</source>
          <target state="translated">サイプレスには、引数を解析し、Xvfbサーバーを起動し（必要な場合）、&lt;a href=&quot;https://electronjs.org/&quot;&gt;Electronの&lt;/a&gt;上に構築されたTest Runnerアプリケーションを開くnpm CLIモジュールが付属しています。なぜこれを行う必要があるのか​​についての一般的な状況は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="123d9e5825e33fa08bddda9f842051a34f825320" translate="yes" xml:space="preserve">
          <source>Cypress comes with its own API for creating custom commands and overwriting existing commands. The built in Cypress commands use the very same API that&amp;rsquo;s defined below.</source>
          <target state="translated">サイプレスには、カスタムコマンドを作成して既存のコマンドを上書きするための独自のAPIが付属しています。組み込みのサイプレスコマンドは、以下で定義されているものとまったく同じAPIを使用します。</target>
        </trans-unit>
        <trans-unit id="2bdfa9e9ef6ea9ad9dab228a342f18673f60c6f1" translate="yes" xml:space="preserve">
          <source>Cypress comes with the ability to take screenshots, whether you are running in interactive mode using &lt;code&gt;cypress open&lt;/code&gt; or run mode using &lt;code&gt;cypress run&lt;/code&gt;, even in CI.</source>
          <target state="translated">サイプレスには、CIでも、 &lt;code&gt;cypress open&lt;/code&gt; を使用してインタラクティブモードで実行しているか、 &lt;code&gt;cypress run&lt;/code&gt; を使用して実行モードで実行しているかに関係なく、スクリーンショットを撮ることができます。</target>
        </trans-unit>
        <trans-unit id="822e1455e6de84e64fde2cd2d3ce65cecb59965c" translate="yes" xml:space="preserve">
          <source>Cypress commands do not &lt;strong&gt;return&lt;/strong&gt; their subjects, they &lt;strong&gt;yield&lt;/strong&gt; them. Remember: Cypress commands are asynchronous and get queued for execution at a later time. During execution, subjects are yielded from one command to the next, and a lot of helpful Cypress code runs between each command to ensure everything is in order.</source>
          <target state="translated">サイプレスコマンドはサブジェクトを&lt;strong&gt;返さ&lt;/strong&gt;ず、&lt;strong&gt;生成&lt;/strong&gt;します。注意：サイプレスコマンドは非同期であり、後で実行するためにキューに入れられます。実行中、サブジェクトは1つのコマンドから次のコマンドに渡され、すべてのコマンドが正しいことを確認するために、各コマンド間で多くの役立つサイプレスコードが実行されます。</target>
        </trans-unit>
        <trans-unit id="d6e2e8ec24425307d65a940bd99d134e76ce9bef" translate="yes" xml:space="preserve">
          <source>Cypress commands for authenticate users with Keycloak Identity Provider</source>
          <target state="translated">Keycloak Identity Provider でユーザーを認証するための Cypress コマンド</target>
        </trans-unit>
        <trans-unit id="729afd450f7bf2e2cd6448908d04783640ee1a6a" translate="yes" xml:space="preserve">
          <source>Cypress commands now correctly execute in &lt;code&gt;after&lt;/code&gt; and &lt;code&gt;afterEach&lt;/code&gt; hooks on a failed test. Previously they would only run on passing tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/203&quot;&gt;#203&lt;/a&gt;.</source>
          <target state="translated">サイプレスコマンドは、失敗したテストの &lt;code&gt;after&lt;/code&gt; および &lt;code&gt;afterEach&lt;/code&gt; フックで正しく実行されるようになりました。以前は、合格したテストでのみ実行されていました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/203&quot;&gt;＃203を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e14e3d04185457907a347598c85d9c0d5ab87aa2" translate="yes" xml:space="preserve">
          <source>Cypress commands run &lt;a href=&quot;#Inside-the-browser&quot;&gt;inside of a browser&lt;/a&gt;.</source>
          <target state="translated">サイプレスのコマンド&lt;a href=&quot;#Inside-the-browser&quot;&gt;はブラウザ内で&lt;/a&gt;実行されます。</target>
        </trans-unit>
        <trans-unit id="4ab666a9f5afc5d30724737c6653f8db7ea4b824" translate="yes" xml:space="preserve">
          <source>Cypress consists of a free, &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;open source&lt;/a&gt;, &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;locally installed&lt;/a&gt; Test Runner &lt;strong&gt;and&lt;/strong&gt; a Dashboard Service for &lt;a href=&quot;../dashboard/introduction&quot;&gt;recording your tests&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、無料の&lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;オープンソース&lt;/a&gt;、&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;ローカルにインストールされた&lt;/a&gt;テストランナー&lt;strong&gt;、および&lt;/strong&gt;テストを&lt;a href=&quot;../dashboard/introduction&quot;&gt;記録する&lt;/a&gt;ためのダッシュボードサービスで構成されています。</target>
        </trans-unit>
        <trans-unit id="2ff4d303420678cfd6b7c0a4b073366dad8327c6" translate="yes" xml:space="preserve">
          <source>Cypress currently uses the following CI environment variables to determine a CI build ID for a test run:</source>
          <target state="translated">Cypressは現在、テスト実行のCIビルドIDを決定するために以下のCI環境変数を使用しています。</target>
        </trans-unit>
        <trans-unit id="8e8308f8a4321616d66f25bcee0ea95ba295ac41" translate="yes" xml:space="preserve">
          <source>Cypress custom command &quot;cy.api&quot; for HTTP API testing with server logs</source>
          <target state="translated">Cypress カスタムコマンド &quot;cy.api&quot; でサーバーログを使って HTTP API をテストする</target>
        </trans-unit>
        <trans-unit id="515af59aed8f8db0f27fc6db95f51d17827972fc" translate="yes" xml:space="preserve">
          <source>Cypress deprecations and warnings are now prefixed with: &lt;code&gt;Cypress Warning:&lt;/code&gt; to indicate this message is coming from Cypress</source>
          <target state="translated">サイプレスの非推奨と警告の前に次が追加されました： &lt;code&gt;Cypress Warning:&lt;/code&gt; このメッセージがサイプレスから送信されたことを示します</target>
        </trans-unit>
        <trans-unit id="763e595fb34a1f3baf6fbdd1895303cd890c533d" translate="yes" xml:space="preserve">
          <source>Cypress detected a cross-origin error happened on page load</source>
          <target state="translated">Cypress は、ページロード時に発生したクロスオリジンエラーを検出しました。</target>
        </trans-unit>
        <trans-unit id="e3f72a17b05bf4b133aa5c20a789480165bc6c04" translate="yes" xml:space="preserve">
          <source>Cypress detected policy settings on your computer that may cause issues</source>
          <target state="translated">問題が発生する可能性のあるコンピュータのポリシー設定を Cypress が検出しました。</target>
        </trans-unit>
        <trans-unit id="325dd4b2bfdf772a77b7097ad721056b251aafb4" translate="yes" xml:space="preserve">
          <source>Cypress detected that an uncaught error was thrown from a cross-origin script.</source>
          <target state="translated">Cypress は、クロスオリジン スクリプトからキャッチできないエラーがスローされたことを検出しました。</target>
        </trans-unit>
        <trans-unit id="07a47945ef9b212ecfabd712f70225db3723ff6c" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more &lt;code&gt;cy&lt;/code&gt; commands but returned a different value.</source>
          <target state="translated">サイプレスは、1つ以上の &lt;code&gt;cy&lt;/code&gt; コマンドを呼び出したが別の値を返したことを検出しました。</target>
        </trans-unit>
        <trans-unit id="a6e4d587eec2b6141ddce97b63ed14bf9f0d6415" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more &lt;code&gt;cy&lt;/code&gt; commands in a custom command but returned a different value.</source>
          <target state="translated">サイプレスは、カスタムコマンドで1つ以上の &lt;code&gt;cy&lt;/code&gt; コマンドを呼び出したことを検出しましたが、異なる値を返しました。</target>
        </trans-unit>
        <trans-unit id="e1d84a5590d4062daf8fa058059f7def2b68fbe0" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more cy commands but returned a different value.</source>
          <target state="translated">Cypress は、1 つ以上の cy コマンドを呼び出したが、異なる値を返したことを検出しました。</target>
        </trans-unit>
        <trans-unit id="7db96a42833e811427ab8d251534de0078a39f4f" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more cy commands in a custom command but returned a different value.</source>
          <target state="translated">Cypress は、カスタムコマンドで 1 つ以上の cy コマンドを呼び出したが、異なる値を返したことを検出しました。</target>
        </trans-unit>
        <trans-unit id="2712424c6f7cb8f02f97a54bddb0ea5f22a2f689" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.</source>
          <target state="translated">Cypress は、コマンドからプロミスを返しながら、そのプロミスの中で 1 つ以上の cy コマンドを呼び出したことを検出しました。</target>
        </trans-unit>
        <trans-unit id="f1a368b765b44c35b055793ab5286d6232416268" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise in a test, but also invoked one or more &lt;code&gt;cy&lt;/code&gt; commands inside of that promise.</source>
          <target state="translated">サイプレスは、テストでpromiseを返したことを検出しましたが、promise内で1つ以上の &lt;code&gt;cy&lt;/code&gt; コマンドを呼び出しました。</target>
        </trans-unit>
        <trans-unit id="dcbe57fedcb0ec8156a1a6797eb83f82e9a698b9" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise in a test, but also invoked one or more cy commands inside of that promise.</source>
          <target state="translated">Cypress は、あなたがテストで約束を返したことを検出しましたが、その約束の中で 1 つ以上の cy コマンドを呼び出したことも検出しました。</target>
        </trans-unit>
        <trans-unit id="dc83e94e17aa9ccc64dc59ece4b256378a6e3907" translate="yes" xml:space="preserve">
          <source>Cypress does NOT see how the page actually looks though. For example, Cypress will not see if the CSS class &lt;code&gt;completed&lt;/code&gt; grays out the label element and adds a strike-through line.</source>
          <target state="translated">ただし、サイプレスはページが実際にどのように表示されるかを認識しません。たとえば、サイプレスは、CSSクラスが &lt;code&gt;completed&lt;/code&gt; してラベル要素がグレー表示され、取り消し線が追加されているかどうかを確認しません。</target>
        </trans-unit>
        <trans-unit id="14c95b94d0b8fd7690eedfb33cea9df265051859" translate="yes" xml:space="preserve">
          <source>Cypress does not &lt;em&gt;actually&lt;/em&gt; make an XHR request from the browser. We are actually making the HTTP request from the Cypress Test Runner (in Node). So, you won&amp;rsquo;t see the request inside of your Developer Tools.</source>
          <target state="translated">サイプレスは&lt;em&gt;実際に&lt;/em&gt;はブラウザからXHRリクエストを行いません。実際には、サイプレステストランナー（ノード内）からHTTPリクエストを作成しています。そのため、デベロッパーツール内にリクエストは表示されません。</target>
        </trans-unit>
        <trans-unit id="d610cec1557cd166d9654c64cd8c224fc1afb70e" translate="yes" xml:space="preserve">
          <source>Cypress does not currently factor in &lt;code&gt;pointer-events: none&lt;/code&gt; in its clicking algorithm. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">サイプレスは現在、 &lt;code&gt;pointer-events: none&lt;/code&gt; 考慮していません。クリックアルゴリズムでは考慮していません。これを修正する必要がある場合は&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;、問題を開き&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3db74b0d98a1fbb4fd3339fa15414dfda2195948" translate="yes" xml:space="preserve">
          <source>Cypress does not have a &lt;strong&gt;cy.hover()&lt;/strong&gt; command. See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;Issue #10&lt;/a&gt;.</source>
          <target state="translated">サイプレスには、&lt;strong&gt;cy.hover（）&lt;/strong&gt;コマンドがありません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;Issue＃10を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="45075f56235c9a799b99f25b40f76f77e49428cc" translate="yes" xml:space="preserve">
          <source>Cypress does not instrument your code - you need to do it yourself. The golden standard for JavaScript code instrumentation is the battle-hardened &lt;a href=&quot;https://istanbul.js.org/&quot;&gt;Istanbul&lt;/a&gt; and, luckily, it plays very nicely with the Cypress Test Runner. You can instrument the code as a build step through one of two ways:</source>
          <target state="translated">サイプレスはコードをインストルメント化しません-自分で行う必要があります。JavaScriptコードインスツルメンテーションのゴールデンスタンダードは、強化された&lt;a href=&quot;https://istanbul.js.org/&quot;&gt;イスタンブールで&lt;/a&gt;あり、幸いなことに、サイプレステストランナーと非常にうまく連携します。次の2つの方法のいずれかを使用して、ビルドステップとしてコードを計測できます。</target>
        </trans-unit>
        <trans-unit id="27c33b9f4e03b79c3a7c63538042fedc9b0dafd8" translate="yes" xml:space="preserve">
          <source>Cypress does some pretty interesting things under the hood to make testing HTTPs sites work. Cypress enables you to control and stub at the network level. Therefore, Cypress must assign and manage browser certificates to be able to modify the traffic in real time. You&amp;rsquo;ll notice Chrome display a warning that the &amp;lsquo;SSL certificate does not match&amp;rsquo;. This is normal and correct. Under the hood we act as our own CA authority and issue certificates dynamically in order to intercept requests otherwise impossible to access. We only do this for the superdomain currently under test, and bypass other traffic. That&amp;rsquo;s why if you open a tab in Cypress to another host, the certificates match as expected.</source>
          <target state="translated">サイプレスは、HTTPSサイトのテストを機能させるために、内部でかなり興味深いことをいくつか行っています。サイプレスでは、ネットワークレベルで制御およびスタブを実行できます。したがって、リアルタイムでトラフィックを変更できるように、サイプレスはブラウザ証明書を割り当てて管理する必要があります。 Chromeに「SSL証明書が一致しない」という警告が表示されます。これは正常で正しいです。内部では、独自のCA機関として機能し、動的に証明書を発行して、アクセスできないリクエストを傍受します。現在テスト中のスーパードメインに対してのみこれを行い、他のトラフィックをバイパスします。そのため、サイプレスで別のホストのタブを開くと、証明書は期待どおりに一致します。</target>
        </trans-unit>
        <trans-unit id="c7c377ae138a280a8ad38fce02a4ffbef0682666" translate="yes" xml:space="preserve">
          <source>Cypress does this by spawning an independent &lt;code&gt;child_process&lt;/code&gt; which then &lt;code&gt;requires&lt;/code&gt; in your &lt;code&gt;pluginsFile&lt;/code&gt;. This is similar to the way Visual Studio Code or Atom works.</source>
          <target state="translated">サイプレスは、独立した産卵することによってこれを行う &lt;code&gt;child_process&lt;/code&gt; その後、 &lt;code&gt;requires&lt;/code&gt; あなたに &lt;code&gt;pluginsFile&lt;/code&gt; を。これは、Visual Studio CodeまたはAtomの動作に似ています。</target>
        </trans-unit>
        <trans-unit id="62cedf95982948885977cf1529c65d7d5f8dd2d2" translate="yes" xml:space="preserve">
          <source>Cypress doesn&amp;rsquo;t kick off the browser automation magic until the test function exits.</source>
          <target state="translated">サイプレスは、テスト機能が終了するまで、ブラウザの自動化マジックを開始しません。</target>
        </trans-unit>
        <trans-unit id="c3b5602f5ef228d78219ad3c8d29551d39bd9977" translate="yes" xml:space="preserve">
          <source>Cypress ecosystem</source>
          <target state="translated">檜の生態系</target>
        </trans-unit>
        <trans-unit id="52f1ef57db713a0be7dd35df852bfaaa169c649c" translate="yes" xml:space="preserve">
          <source>Cypress emits a series of events as it runs in your browser.</source>
          <target state="translated">Cypress は、ブラウザで実行されると一連のイベントを放出します。</target>
        </trans-unit>
        <trans-unit id="7697b2c3b28fc1b582d60ba45931016a20083da5" translate="yes" xml:space="preserve">
          <source>Cypress enables you to dynamically modify configuration values and environment variables from your plugin file.</source>
          <target state="translated">Cypressでは、プラグインファイルから設定値や環境変数を動的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="e9bc2ea98be122daf4c0d8f6c98e09eb5775e016" translate="yes" xml:space="preserve">
          <source>Cypress enables you to write all types of tests:</source>
          <target state="translated">Cypressでは、あらゆるタイプのテストを記述することができます。</target>
        </trans-unit>
        <trans-unit id="73ea9b80d973a18938bef296490ce112a6efdba0" translate="yes" xml:space="preserve">
          <source>Cypress errors because it can&amp;rsquo;t interact with &amp;ldquo;dead&amp;rdquo; elements - just like a real user could not do this either. Understanding how this happens is very important - and it is often easy to prevent.</source>
          <target state="translated">「死んだ」要素と相互作用できないため、サイプレスのエラー-実際のユーザーがこれを行うことができなかったのと同じように。これがどのように発生するかを理解することは非常に重要であり、多くの場合、簡単に防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="da4777d0266a47cfa11f194481866badc420bbef" translate="yes" xml:space="preserve">
          <source>Cypress executes the vast majority of its commands inside the browser, so there is no network lag. Commands execute and drive your application as fast as it is capable of rendering. To deal with modern JavaScript frameworks with complex UI&amp;rsquo;s, you use assertions to tell Cypress what the desired state of your application should be. Cypress will automatically wait for your application to reach this state before moving on. You are completely insulated from fussing with manual waits or retries. Cypress automatically waits for elements to exist and will never yield you stale elements that have been detached from the DOM.</source>
          <target state="translated">サイプレスはそのコマンドの大部分をブラウザ内で実行するため、ネットワークラグはありません。コマンドは、レンダリングが可能な限り速くアプリケーションを実行および駆動します。複雑なUIを持つ最新のJavaScriptフレームワークを処理するには、アサーションを使用して、アプリケーションの望ましい状態をサイプレスに伝えます。サイプレスは、アプリケーションがこの状態になるまで自動的に待機してから次に進みます。手動による待機や再試行による煩わしさから完全に保護されます。サイプレスは要素が存在するのを自動的に待機し、DOMから切り離された古い要素を生成することはありません。</target>
        </trans-unit>
        <trans-unit id="fe1b2870f950b3fde184e954b99191b6652e3367" translate="yes" xml:space="preserve">
          <source>Cypress generates its own isolated profile apart from your normal browser profile. This means things like &lt;code&gt;history&lt;/code&gt; entries, &lt;code&gt;cookies&lt;/code&gt;, and &lt;code&gt;3rd party extensions&lt;/code&gt; from your regular browsing session will not affect your tests in Cypress.</source>
          <target state="translated">サイプレスは、通常のブラウザプロファイルとは別に独自の独立したプロファイルを生成します。つまり、通常のブラウジングセッションからの &lt;code&gt;history&lt;/code&gt; エントリ、 &lt;code&gt;cookies&lt;/code&gt; 、 &lt;code&gt;3rd party extensions&lt;/code&gt; などは、サイプレスのテストに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="0a684e1df6a0cce82886d4de8be159f4fa97d4ce" translate="yes" xml:space="preserve">
          <source>Cypress gives you a simple interface to automatically preserve cookies for multiple tests. Cypress automatically clears all cookies before each new test starts by default.</source>
          <target state="translated">Cypress は、複数のテスト用にクッキーを自動的に保存するシンプルなインターフェイスを提供します。Cypress は、各新しいテストが開始される前に、デフォルトですべての Cookie を自動的にクリアします。</target>
        </trans-unit>
        <trans-unit id="1bc0558aaaab52186cf8343ff36f0cea33d3ab82" translate="yes" xml:space="preserve">
          <source>Cypress gives you an interface to automatically preserve cookies for multiple tests. Cypress automatically clears all cookies before each new test starts by default.</source>
          <target state="translated">Cypress は、複数のテスト用にクッキーを自動的に保存するインターフェースを提供します。Cypress はデフォルトで、新しいテストが開始されるたびに、すべての Cookie を自動的にクリアします。</target>
        </trans-unit>
        <trans-unit id="a4e6f4e326ff6f2fa866e28e8f182966cbc8b898" translate="yes" xml:space="preserve">
          <source>Cypress gives you the option to dynamically alter configuration values. This is helpful when running Cypress in multiple environments and on multiple developer machines.</source>
          <target state="translated">Cypressでは、設定値を動的に変更するオプションがあります。これは、複数の環境や複数の開発者マシンでCypressを実行する際に便利です。</target>
        </trans-unit>
        <trans-unit id="b5f2480b96f177a8e0b12efa536ecae6c9c752ec" translate="yes" xml:space="preserve">
          <source>Cypress guarantees that it will execute all of its commands &lt;em&gt;deterministically&lt;/em&gt; and identically every time they are run.</source>
          <target state="translated">サイプレスは、コマンドが実行されるたびに、すべてのコマンドを&lt;em&gt;確定的&lt;/em&gt;かつ同一に実行することを保証します。</target>
        </trans-unit>
        <trans-unit id="1597eb500d51c17b6e174846d06a9b1da2669b52" translate="yes" xml:space="preserve">
          <source>Cypress has adopted Mocha&amp;rsquo;s &lt;code&gt;bdd&lt;/code&gt; syntax, which fits perfectly with both integration and unit testing. All of the tests you&amp;rsquo;ll be writing sit on the fundamental harness Mocha provides, namely:</source>
          <target state="translated">サイプレスはMochaの &lt;code&gt;bdd&lt;/code&gt; 構文を採用しており、統合とユニットテストの両方に完全に適合します。これから作成するすべてのテストは、Mochaが提供する基本的なハーネスに基づいています。</target>
        </trans-unit>
        <trans-unit id="6660994651e3ce7098be26d760a8c7ebed6d298e" translate="yes" xml:space="preserve">
          <source>Cypress has also built-in &lt;a href=&quot;../../guides/references/bundled-tools#Sinon-Chai&quot;&gt;sinon-chai&lt;/a&gt; support, so any &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;assertions supported by &lt;code&gt;sinon-chai&lt;/code&gt;&lt;/a&gt; can be used without any configuration.</source>
          <target state="translated">サイプレスは、内蔵されてい&lt;a href=&quot;../../guides/references/bundled-tools#Sinon-Chai&quot;&gt;sinon-チャイ&lt;/a&gt;サポート、どのよう&lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;でサポートされているアサーション &lt;code&gt;sinon-chai&lt;/code&gt; &lt;/a&gt;任意の設定なしで使用することができます。</target>
        </trans-unit>
        <trans-unit id="7d63555c6a86c46a66d843fa55fb4a2ab8fbb574" translate="yes" xml:space="preserve">
          <source>Cypress has also built-in &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Sinon-Chai&quot;&gt;sinon-chai&lt;/a&gt; support, so any &lt;a href=&quot;https://docs.cypress.io/guides/references/assertions.html#Sinon-Chai&quot;&gt;assertions supported by &lt;code&gt;sinon-chai&lt;/code&gt;&lt;/a&gt; can be used without any configuration.</source>
          <target state="translated">サイプレスは、内蔵されてい&lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Sinon-Chai&quot;&gt;sinon-チャイ&lt;/a&gt;サポート、どのよう&lt;a href=&quot;https://docs.cypress.io/guides/references/assertions.html#Sinon-Chai&quot;&gt;でサポートされているアサーション &lt;code&gt;sinon-chai&lt;/code&gt; &lt;/a&gt;任意の設定なしで使用することができます。</target>
        </trans-unit>
        <trans-unit id="ab90686c4f8a5c947ec43bf80d8e641fef08c3e5" translate="yes" xml:space="preserve">
          <source>Cypress has many more configuration options you can use to customize its behavior. Things like where your tests live, default timeout periods, environment variables, which reporter to use, etc.</source>
          <target state="translated">Cypress には、動作をカスタマイズするために使用できる多くの設定オプションがあります。テストの保存場所、デフォルトのタイムアウト期間、環境変数、使用するレポーターなどです。</target>
        </trans-unit>
        <trans-unit id="990f07860a55dfadc515ee3da5925e89501a8259" translate="yes" xml:space="preserve">
          <source>Cypress has some added functionality for quickly referring back to past subjects called &lt;a href=&quot;variables-and-aliases&quot;&gt;Aliases&lt;/a&gt;. It looks something like this:</source>
          <target state="translated">サイプレスには、&lt;a href=&quot;variables-and-aliases&quot;&gt;エイリアス&lt;/a&gt;と呼ばれる過去の主題をすばやく参照するための追加機能がいくつかあります。次のようになります。</target>
        </trans-unit>
        <trans-unit id="bcdf9865a9d82424f395c52104c05b2069bcb5c1" translate="yes" xml:space="preserve">
          <source>Cypress helper that checks number of expected and actual assertions in the test</source>
          <target state="translated">テストで期待されるアサーションと実際のアサーションの数をチェックする Cypress ヘルパー</target>
        </trans-unit>
        <trans-unit id="8fba472528c23f86cb4086b98f22460e9770d00f" translate="yes" xml:space="preserve">
          <source>Cypress indicates whether an XHR sent back a stubbed response or actually went out to a server in its Command Log</source>
          <target state="translated">Cypress は、XHR がスタブ付き応答を送信したか、実際にサーバーに出て行ったかをコマンドログで表示します。</target>
        </trans-unit>
        <trans-unit id="9e449e9157a22090dbf2b4888a6b29849a9a5469" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element can be scrolled, &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、内部的に、このメソッドを使用して&lt;em&gt;どこにでも&lt;/em&gt;要素は、スクロールすることができるかどうかを把握するために&lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;、主にactionabilityため&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5c3c46985749ea03ef603b26782eb04f925aae3" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element can be scrolled, &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;主にアクション性のために&lt;/a&gt;、要素をスクロールできるかどうかを判断するために、内部でこのメソッドを&lt;em&gt;どこでも&lt;/em&gt;使用しています。</target>
        </trans-unit>
        <trans-unit id="edb85086ca242ec681a6590baf4669b8e7c421de" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element is hidden, &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、内部的に、このメソッドを使用して&lt;em&gt;、どこでも&lt;/em&gt;、要素が隠されているかどうかを把握するために&lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;、主にactionabilityため&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6dbf3f7f8fbdd4c2a824a4145593ba60dbc45cdc" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element is hidden, &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;主にアクション可能性のために&lt;/a&gt;、要素が非表示になっているかどうかを把握するために、内部でこのメソッドを&lt;em&gt;どこでも&lt;/em&gt;使用しています。</target>
        </trans-unit>
        <trans-unit id="aa2c81dd7d916fd7f1168707d93a4fc48cb0a18a" translate="yes" xml:space="preserve">
          <source>Cypress is &lt;em&gt;Not&lt;/em&gt; Like jQuery</source>
          <target state="translated">サイプレスは&lt;em&gt;ない&lt;/em&gt;ようにjQuery</target>
        </trans-unit>
        <trans-unit id="c1be48039075d67d805c9f9754271324d4667091" translate="yes" xml:space="preserve">
          <source>Cypress is Like jQuery</source>
          <target state="translated">CypressはjQueryのようなもの</target>
        </trans-unit>
        <trans-unit id="95e77f2456bfaf1b5e3e4af59168800202848f51" translate="yes" xml:space="preserve">
          <source>Cypress is a &lt;em&gt;functional&lt;/em&gt; Test Runner. It drives the web application the way a user would, and checks if the app &lt;em&gt;functions&lt;/em&gt; as expected: if the expected message appears, an element is removed, or a CSS class is added after the appropriate user action. A typical Cypress test, for example, can check if a toggled &amp;ldquo;Todo&amp;rdquo; item gets a class of &amp;ldquo;completed&amp;rdquo; after the &lt;code&gt;.toggle&lt;/code&gt; is checked:</source>
          <target state="translated">サイプレスは&lt;em&gt;機能&lt;/em&gt;テストランナーです。これは、ユーザーと同じようにWebアプリケーションを駆動し、アプリが期待どおりに&lt;em&gt;機能する&lt;/em&gt;かどうかをチェックします。期待されるメッセージが表示された場合、要素が削除されるか、適切なユーザーアクションの後にCSSクラスが追加されます。たとえば、典型的なサイプレステストでは、 &lt;code&gt;.toggle&lt;/code&gt; がチェックされた後、トグルされた「Todo」アイテムが「completed」のクラスを取得するかどうかをチェックできます。</target>
        </trans-unit>
        <trans-unit id="53c9f872511024718a8f82a94e79bff7a77d8892" translate="yes" xml:space="preserve">
          <source>Cypress is a desktop application that is installed on your computer. The desktop application supports these operating systems:</source>
          <target state="translated">Cypressは、お使いのコンピュータにインストールされるデスクトップアプリケーションです。デスクトップアプリケーションは、これらのオペレーティングシステムをサポートしています。</target>
        </trans-unit>
        <trans-unit id="6ff8be0e34d6ada96a6ab8cfbee1ade53884ea40" translate="yes" xml:space="preserve">
          <source>Cypress is a global object that persists for the entirety of all of your tests. Any events you bind to Cypress will apply to all tests, and will not be unbound unless you manually unbind them.</source>
          <target state="translated">Cypress はグローバルオブジェクトで、すべてのテストの全体にわたって持続します。Cypress にバインドしたイベントはすべてのテストに適用され、手動でバインドを解除しない限り、バインドが解除されることはありません。</target>
        </trans-unit>
        <trans-unit id="869d1c1fb28fbc8fb81e122dddb505e13fa8d5b1" translate="yes" xml:space="preserve">
          <source>Cypress is a next generation front end testing tool built for the modern web. We address the key pain points developers and QA engineers face when testing modern applications.</source>
          <target state="translated">Cypress は、現代のウェブのために構築された次世代のフロントエンドテストツールです。最新のアプリケーションをテストする際に開発者や QA エンジニアが直面する主な問題点を解決します。</target>
        </trans-unit>
        <trans-unit id="8e39beda401fbd4a89a2b2e926247dcba77a2870" translate="yes" xml:space="preserve">
          <source>Cypress is a rather large and complex project involving a dozen or more submodules, and the default output can be overwhelming.</source>
          <target state="translated">Cypressはかなり大規模で複雑なプロジェクトで、十数個以上のサブモジュールが含まれており、デフォルトの出力では圧倒されてしまうことがあります。</target>
        </trans-unit>
        <trans-unit id="0dec926db8824334e668f9586c17b1871fdafe4a" translate="yes" xml:space="preserve">
          <source>Cypress is a specialized tool that does one thing really well: end-to-end testing web applications while they are under development. You should not use Cypress for things it is not designed for such as:</source>
          <target state="translated">それは、開発中のウェブアプリケーションをエンドツーエンドでテストすることです。Cypressは、以下のような目的では使用しない方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="b5c264814ec44d1280406e94d0c1671c5b4b60a7" translate="yes" xml:space="preserve">
          <source>Cypress is built around creating &lt;strong&gt;reliable tests&lt;/strong&gt;. The secret to writing good tests is to provide as much &amp;ldquo;state&amp;rdquo; and &amp;ldquo;facts&amp;rdquo; to Cypress and to &amp;ldquo;guard it&amp;rdquo; from issuing new commands until your application has reached the desired state it needs to proceed.</source>
          <target state="translated">サイプレスは、&lt;strong&gt;信頼性の高いテストの&lt;/strong&gt;作成を中心に構築されてい&lt;strong&gt;ます&lt;/strong&gt;。優れたテストを作成する秘訣は、サイプレスにできるだけ多くの「状態」と「事実」を提供し、アプリケーションが続行する必要のある望ましい状態に達するまで新しいコマンドを発行しないようにすることです。</target>
        </trans-unit>
        <trans-unit id="b92cdd5b24a245c1191fdc720a8b79e88ca80485" translate="yes" xml:space="preserve">
          <source>Cypress is built on top of &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; and &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt;. We support both Chai&amp;rsquo;s &lt;code&gt;BDD&lt;/code&gt; and &lt;code&gt;TDD&lt;/code&gt; assertion styles. Tests you write in Cypress will mostly adhere to this style.</source>
          <target state="translated">サイプレスは&lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;モカ&lt;/a&gt;と&lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;チャイの&lt;/a&gt;上に構築されています。Chaiの &lt;code&gt;BDD&lt;/code&gt; および &lt;code&gt;TDD&lt;/code&gt; アサーションスタイルの両方をサポートしています。サイプレスで作成するテストは、ほとんどがこのスタイルに準拠します。</target>
        </trans-unit>
        <trans-unit id="4c57f41938cd9b0ac090b8bf45e2d2c936962329" translate="yes" xml:space="preserve">
          <source>Cypress is built using Promises that come from &lt;a href=&quot;http://bluebirdjs.com/&quot;&gt;Bluebird&lt;/a&gt;. However, Cypress commands do not return these typical Promise instances. Instead we return what&amp;rsquo;s called a &lt;code&gt;Chainer&lt;/code&gt; that acts like a layer sitting on top of the internal Promise instances.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;http://bluebirdjs.com/&quot;&gt;Bluebirdの&lt;/a&gt; Promiseを使用して構築されています。ただし、サイプレスコマンドはこれらの典型的なPromiseインスタンスを返しません。代わりに、内部のPromiseインスタンスの上にあるレイヤーのように機能する &lt;code&gt;Chainer&lt;/code&gt; と呼ばれるものを返します。</target>
        </trans-unit>
        <trans-unit id="4faf31a6757e1c4ae29431d3f8d489f1d20486fa" translate="yes" xml:space="preserve">
          <source>Cypress is built using the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; module. That means you can receive helpful debugging output by running Cypress with this turned on prior to running &lt;code&gt;cypress open&lt;/code&gt; or &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">サイプレスは&lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;デバッグ&lt;/a&gt;モジュールを使用して構築されています。つまり、 &lt;code&gt;cypress open&lt;/code&gt; または &lt;code&gt;cypress run&lt;/code&gt; を実行する前に、これをオンにしてサイプレスを実行することにより、有用なデバッグ出力を受け取ることができます。</target>
        </trans-unit>
        <trans-unit id="e365f28a29f12706b59bc9f0e67855dcd44e09df" translate="yes" xml:space="preserve">
          <source>Cypress is built using the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; module. That means you can receive helpful debugging output by running Cypress with this turned on. &lt;strong&gt;Note:&lt;/strong&gt; you will see a LOT of messages when running with &lt;code&gt;DEBUG=...&lt;/code&gt; setting.</source>
          <target state="translated">サイプレスは&lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;デバッグ&lt;/a&gt;モジュールを使用して構築されています。つまり、これをオンにした状態でサイプレスを実行すると、有用なデバッグ出力を受け取ることができます。&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;DEBUG=...&lt;/code&gt; 設定で実行すると、大量のメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="3b20921d7e731dea1322bc38fe6f6705c9fffcdf" translate="yes" xml:space="preserve">
          <source>Cypress is built, and optimized around being a tool for your daily local development. In fact, after you start using Cypress for awhile, we believe that you may find it useful to even do &lt;strong&gt;all of your development&lt;/strong&gt; in it.</source>
          <target state="translated">サイプレスは、日々のローカル開発のためのツールとして構築され、最適化されています。実際、しばらくの間サイプレスの使用を開始した後は、&lt;strong&gt;すべての開発を&lt;/strong&gt;行うことも役立つと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="ff357c77f2177aef35545ec53e59b68e24420ac0" translate="yes" xml:space="preserve">
          <source>Cypress is currently seeking to raise a Series A. This will enable us to grow the team and speed up development but seeking it has come at a ost for current development speed. If you have any VC connections &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#40333530302f323400233930322533336e292f&quot;&gt;please send them our way&lt;/a&gt;.</source>
          <target state="translated">サイプレスは現在、シリーズAの引き上げを模索しています。これにより、チームを成長させ、開発をスピードアップできるようになりますが、現在の開発スピードを求めることはできません。VC接続がある場合は、&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#40333530302f323400233930322533336e292f&quot;&gt;私たちの方法で送信してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6167ff978a76f79dcb98c7b0221f19ee3f15c2c1" translate="yes" xml:space="preserve">
          <source>Cypress is most often compared to Selenium; however Cypress is both fundamentally and architecturally different. Cypress is not constrained by the same restrictions as Selenium.</source>
          <target state="translated">Cypress は Selenium と比較されることが多いですが、Cypress は基本的にもアーキテクチャ的にも異なります。CypressはSeleniumと同じ制約を受けません。</target>
        </trans-unit>
        <trans-unit id="530766382e09d2dc10a8897366980430533ed9ac" translate="yes" xml:space="preserve">
          <source>Cypress is not a &lt;strong&gt;general purpose&lt;/strong&gt; web automation tool. It is poorly suited for scripting live, production websites not under your control.</source>
          <target state="translated">サイプレスは、&lt;strong&gt;汎用の&lt;/strong&gt; Web自動化ツールではありません。これは、管理されていないライブのプロダクションWebサイトのスクリプト作成にはあまり適していません。</target>
        </trans-unit>
        <trans-unit id="0e7f9f5cf0b1279f8cbe9aa37c8dc4bdb0444d3c" translate="yes" xml:space="preserve">
          <source>Cypress is not a general purpose &lt;a href=&quot;#Automation-restrictions&quot;&gt;automation tool&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、汎用の&lt;a href=&quot;#Automation-restrictions&quot;&gt;自動化ツールで&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="526615ae0ec1acf1d4f4fba790ad50d392856af2" translate="yes" xml:space="preserve">
          <source>Cypress is now &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;open source&lt;/a&gt;! This project is licensed under the terms of the &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE.md&quot;&gt;MIT License&lt;/a&gt;.</source>
          <target state="translated">サイプレスが&lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;オープンソースになりました&lt;/a&gt;！このプロジェクトは、&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE.md&quot;&gt;MITライセンスの&lt;/a&gt;条件に基づいてライセンスされます。</target>
        </trans-unit>
        <trans-unit id="e6870288c0bf703d92da969f4e9cef789d7d207c" translate="yes" xml:space="preserve">
          <source>Cypress is now able to run all the tests, run in the terminal, and includes support for Linux and CI. Additionally, most of the functionality of he GUI Desktop App can now be accessed through command line arguments.</source>
          <target state="translated">Cypress は、すべてのテストを実行し、ターミナルで実行できるようになり、Linux と CI のサポートが含まれています。さらに、GUIデスクトップアプリの機能のほとんどがコマンドライン引数からアクセスできるようになりました。</target>
        </trans-unit>
        <trans-unit id="01f66f8ecf2056a79949b16440d796098a547bcd" translate="yes" xml:space="preserve">
          <source>Cypress is versioned like any other dependency.</source>
          <target state="translated">Cypress は他の依存関係と同様にバージョン管理されています。</target>
        </trans-unit>
        <trans-unit id="b2a743ccd2b0f3716c26a35f4d7f80691926a4c2" translate="yes" xml:space="preserve">
          <source>Cypress knows and understands everything that happens in your application synchronously. It is notified the moment the page loads and the moment the page unloads. It is impossible for Cypress to miss elements when it fires events. Cypress even knows how fast an element is animating and will &lt;a href=&quot;../core-concepts/interacting-with-elements#Animations&quot;&gt;wait for it to stop animating&lt;/a&gt; on specific network requests to finish.</source>
          <target state="translated">サイプレスは、アプリケーションで同時に発生するすべてのことを理解しています。ページがロードされた瞬間と、ページがアンロードされた瞬間に通知されます。サイプレスがイベントを発生させるときに要素を見逃すことは不可能です。サイプレスは、要素がアニメーション化する速度を知っており、特定のネットワーク要求が終了するまで&lt;a href=&quot;../core-concepts/interacting-with-elements#Animations&quot;&gt;アニメーション化が停止するまで待機し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="528ba75aed4f434c47560bef9d6da9f2c39b28c1" translate="yes" xml:space="preserve">
          <source>Cypress launches the browser in a way that&amp;rsquo;s different from a regular browser environment. But it launches in a way that we believe makes testing &lt;em&gt;more reliable&lt;/em&gt; and &lt;em&gt;accessible&lt;/em&gt;.</source>
          <target state="translated">サイプレスは、通常のブラウザ環境とは異なる方法でブラウザを起動します。しかし、それは私たちがテストを&lt;em&gt;より信頼性が高く&lt;/em&gt;、&lt;em&gt;アクセスしやすい&lt;/em&gt;と信じている方法で起動し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="692a6e6fe5fbbcc9662d662e506defd16e9b5956" translate="yes" xml:space="preserve">
          <source>Cypress leverages jQuery&amp;rsquo;s powerful selector engine to help make tests familiar and readable for modern web developers.</source>
          <target state="translated">サイプレスは、jQueryの強力なセレクターエンジンを利用して、最新のWeb開発者にとってテストを使いやすく、読みやすくします。</target>
        </trans-unit>
        <trans-unit id="c67c67171ad18ef7700ef9747c888b650f8ac819" translate="yes" xml:space="preserve">
          <source>Cypress logo now displays in &lt;code&gt;About Page&lt;/code&gt;.</source>
          <target state="translated">サイプレスのロゴが[ &lt;code&gt;About Page&lt;/code&gt; 表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="be170162f705ad538e216bd722a36b248db5af6d" translate="yes" xml:space="preserve">
          <source>Cypress maintains an official list of plugins created by us and the community. You can &lt;code&gt;npm install&lt;/code&gt; any of the plugins listed below:</source>
          <target state="translated">サイプレスは、私たちとコミュニティが作成したプラグインの公式リストを保持しています。あなたはできる &lt;code&gt;npm install&lt;/code&gt; の下にリストされているプラグインのいずれかを：</target>
        </trans-unit>
        <trans-unit id="7eec7714886f23b4a245c4c60f1361922c90494d" translate="yes" xml:space="preserve">
          <source>Cypress maintains some local application data in order to save user preferences and more quickly start up. Sometimes this data can become corrupted. You may fix an issue you have by clearing this app data.</source>
          <target state="translated">Cypress は、ユーザーの設定を保存し、より迅速に起動するために、いくつかのローカルアプリケーションデータを保持しています。時々、このデータが破損することがあります。このアプリデータをクリアすることで、問題を解決することができます。</target>
        </trans-unit>
        <trans-unit id="8bf6b623e2ef01f75aa0ccc18ea5dd9742da0e38" translate="yes" xml:space="preserve">
          <source>Cypress makes it easier to chain assertions together.</source>
          <target state="translated">Cypressを使うと、アサーションを連鎖させるのが簡単になります。</target>
        </trans-unit>
        <trans-unit id="ce3a3c87011aaa111efec7a11f19ccd24c096ac8" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to chain assertions together.</source>
          <target state="translated">Cypressを使うと、アサーションを簡単に連鎖させることができます。</target>
        </trans-unit>
        <trans-unit id="4f13d8b6e04fe58a58be07c9d684afc3015bccf7" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to stub a network requests and have it respond instantly with fixture data.</source>
          <target state="translated">Cypress は、ネットワーク要求を簡単にスタブ化し、フィクスチャデータで即座に応答できるようにします。</target>
        </trans-unit>
        <trans-unit id="95b57339a0ea56ef3c65e019fc3c19d02f176b6c" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to stub a response and control the &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, or even delay.</source>
          <target state="translated">サイプレスは、応答をスタブ化し、 &lt;code&gt;body&lt;/code&gt; 、 &lt;code&gt;status&lt;/code&gt; 、 &lt;code&gt;headers&lt;/code&gt; 、または遅延さえも簡単に制御できるようにします。</target>
        </trans-unit>
        <trans-unit id="f38ca921828c241c4f255ac47fe69d10462a4f64" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to test the entire lifecycle of Ajax / XHR requests within your application. Cypress provides you direct access to the XHR objects, enabling you to make assertions about its properties. Additionally you can even stub and mock a request&amp;rsquo;s response.</source>
          <target state="translated">サイプレスは、アプリケーション内でAjax / XHRリクエストのライフサイクル全体を簡単にテストできるようにします。サイプレスはXHRオブジェクトへの直接アクセスを提供し、そのプロパティについてアサーションを作成できるようにします。さらに、リクエストの応答をスタブしてモックすることもできます。</target>
        </trans-unit>
        <trans-unit id="0c93ad14bb0246449f98429e08b415399b34829b" translate="yes" xml:space="preserve">
          <source>Cypress modifies these scripts at the network level, and therefore there is a tiny performance cost to search the response streams for these patterns.</source>
          <target state="translated">Cypress はこれらのスクリプトをネットワークレベルで変更するため、これらのパターンのレスポンスストリームを検索するためのパフォーマンスコストはわずかです。</target>
        </trans-unit>
        <trans-unit id="811fe4df65580b03d4eff943c841ead3135de3e1" translate="yes" xml:space="preserve">
          <source>Cypress needs Internet access to work. Many companies require the use of a corporate proxy to access the Internet. If your company does this, many functions of Cypress will not work until you&amp;rsquo;ve configured Cypress to use your proxy:</source>
          <target state="translated">サイプレスが機能するには、インターネットアクセスが必要です。多くの企業では、インターネットにアクセスするために企業プロキシを使用する必要があります。会社がこれを行う場合、プロキシを使用するようにサイプレスを構成するまで、サイプレスの多くの機能は機能しません。</target>
        </trans-unit>
        <trans-unit id="74d4eb6be970ea73f708382a54e311cdd6ea0869" translate="yes" xml:space="preserve">
          <source>Cypress no longer accidentally prints internal Electron logs when running &lt;code&gt;cypress run&lt;/code&gt;. This bug would exhibit itself when verifying and running Cypress the first time after installation. You may have seen these logs when running in CI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4255&quot;&gt;#4255&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; の実行中に、サイプレスが誤って内部Electronログを出力することはなくなりました。このバグは、サイプレスをインストール後に初めて確認して実行するときに発生します。CIで実行すると、これらのログが表示される場合があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4255&quot;&gt;＃4255を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="55cc51c2b2224b4f4a9daad94683dd639628d74b" translate="yes" xml:space="preserve">
          <source>Cypress no longer automatically takes screenshots of skipped tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2368&quot;&gt;#2368&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、スキップされたテストのスクリーンショットを自動的に取得しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2368&quot;&gt;＃2368を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3156d4bb4f630fc7fa73151537b9412a8d784f96" translate="yes" xml:space="preserve">
          <source>Cypress no longer copies screenshots and videos to artifacts for CircleCI. Copying artifacts should be left up to the user to &lt;a href=&quot;https://circleci.com/docs/2.0/artifacts/&quot;&gt;handle themselves in their &lt;code&gt;circle.yml&lt;/code&gt; file&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1592&quot;&gt;#1592&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、スクリーンショットとビデオをCircleCIのアーティファクトにコピーしなくなりました。アーティファクトのコピー&lt;a href=&quot;https://circleci.com/docs/2.0/artifacts/&quot;&gt;は、 &lt;code&gt;circle.yml&lt;/code&gt; ファイルで自分自身&lt;/a&gt;を処理するためにユーザーに任せる必要があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1592&quot;&gt;＃1592を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9a2ab12feaf129218f0f992204efb3d801ed5c29" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes on initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; when the 3rd party web server never ends the response. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/272&quot;&gt;#272&lt;/a&gt;.</source>
          <target state="translated">サードパーティのWebサーバーが応答を終了しない場合でも、サイプレスは最初の&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; で&lt;/a&gt;クラッシュしなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/272&quot;&gt;＃272を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b7b7f9d5a04383de07b5d3c1bd3a023d2e0ea9d1" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when a 3rd party server sends invalid &lt;code&gt;gzip&lt;/code&gt; content. Also fixed issues with incorrectly gunzipping multibyte characters which would potentially lead to serving invalid HTML or JS. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1396&quot;&gt;#1396&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1756&quot;&gt;#1756&lt;/a&gt;.</source>
          <target state="translated">サードパーティのサーバーが無効な &lt;code&gt;gzip&lt;/code&gt; コンテンツを送信しても、サイプレスはクラッシュしなくなりました。また、無効なHTMLまたはJSの提供につながる可能性のある、マルチバイト文字の誤ったガンジップに関する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1396&quot;&gt;＃1396&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1756&quot;&gt;＃1756を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="33a12afb076ef1e52aaca1bc10c8261a0f33b86c" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when attempting to proxy a WebSocket connection that fails. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/556&quot;&gt;#556&lt;/a&gt;.</source>
          <target state="translated">失敗したWebSocket接続をプロキシしようとしたときにサイプレスがクラッシュしなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/556&quot;&gt;＃556を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e33dea56f182ce0a958dfb8f69bd8cdad2615f6c" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when you click links in the on-boarding screen called &amp;ldquo;To help you get started&amp;hellip;&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/227&quot;&gt;#227&lt;/a&gt;.</source>
          <target state="translated">開始画面で「はじめに&amp;hellip;」というリンクをクリックしても、サイプレスはクラッシュしなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/227&quot;&gt;＃227を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5bf5e3314fe712144e121f79e85185a1edf085ad" translate="yes" xml:space="preserve">
          <source>Cypress no longer errors when you return a raw DOM element. It now correctly wraps this as the new subject.</source>
          <target state="translated">生の DOM 要素を返してもエラーにならないようになりました。これを新しいサブジェクトとして正しくラップするようになりました。</target>
        </trans-unit>
        <trans-unit id="662c993f158297753b787211ea7612cc9b9534aa" translate="yes" xml:space="preserve">
          <source>Cypress no longer incorrectly errors when calling &lt;code&gt;cy.window().screenshot()&lt;/code&gt;, &lt;code&gt;cy.window().scrollTo()&lt;/code&gt; or &lt;code&gt;cy.window().trigger()&lt;/code&gt; in an application with multiple iframes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4396&quot;&gt;#4396&lt;/a&gt;.</source>
          <target state="translated">複数のiframeを使用するアプリケーションで &lt;code&gt;cy.window().screenshot()&lt;/code&gt; 、 &lt;code&gt;cy.window().scrollTo()&lt;/code&gt; または &lt;code&gt;cy.window().trigger()&lt;/code&gt; を呼び出すときに、サイプレスが誤ってエラーを発生させることがなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4396&quot;&gt;＃4396を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2c9613de0a4beaefeee6631fab20cde459553391" translate="yes" xml:space="preserve">
          <source>Cypress no longer looks at your &lt;code&gt;tests&lt;/code&gt; directory for test files. Now, by default, it looks in the &lt;code&gt;cypress/integration&lt;/code&gt; directory.</source>
          <target state="translated">サイプレスはテストファイルの &lt;code&gt;tests&lt;/code&gt; ディレクトリを参照しなくなりました。現在、デフォルトでは、 &lt;code&gt;cypress/integration&lt;/code&gt; ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="81e39cec9615eb3ba1fd855e11e20064f46c86a3" translate="yes" xml:space="preserve">
          <source>Cypress no longer reports &lt;code&gt;Electron&lt;/code&gt; as the browser that ran in the Dashboard Service when a different browser was run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/854&quot;&gt;#854&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、別のブラウザーが実行されたときにダッシュボードサービスで実行されたブラウザーとして &lt;code&gt;Electron&lt;/code&gt; を報告しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/854&quot;&gt;＃854を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8db1224dd2fc491a7132708262abf66a09cf8278" translate="yes" xml:space="preserve">
          <source>Cypress no longer watches files when run using &lt;code&gt;cypress run&lt;/code&gt;. This will fix some runs that were crashing with an &lt;code&gt;ENOSPC&lt;/code&gt; error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4283&quot;&gt;#4283&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、サイプレス実行を使用して &lt;code&gt;cypress run&lt;/code&gt; ときにファイルを監視しなくなりました。これにより、 &lt;code&gt;ENOSPC&lt;/code&gt; エラーでクラッシュしていた一部の実行が修正されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4283&quot;&gt;＃4283を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6fd6ee3f44c165770366cf8839fc21620035e902" translate="yes" xml:space="preserve">
          <source>Cypress now &amp;ldquo;remembers&amp;rdquo; the last browser you had open and will suggest opening that whenever a project is opened. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;#193&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、最後に開いたブラウザを「記憶」し、プロジェクトが開かれるたびにそれを開くことを提案します。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;＃193&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c129370f1a849563b825fbfa153c09b7124dffc" translate="yes" xml:space="preserve">
          <source>Cypress now always updates the remote URL whenever your application changes its URL through the vast variety of ways it can do this.</source>
          <target state="translated">Cypress は、アプリケーションが URL を変更したときには常にリモート URL を更新するようになりました。</target>
        </trans-unit>
        <trans-unit id="3f120c7e6289fdd1715635ddb9c82ab8c8fdc496" translate="yes" xml:space="preserve">
          <source>Cypress now applies cookies to the browser which were cleared between redirects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/224&quot;&gt;#224&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、リダイレクトの間にクリアされたCookieをブラウザに適用するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/224&quot;&gt;＃224を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3603bc44f5cb1b55bb6efb44d02393248eb75beb" translate="yes" xml:space="preserve">
          <source>Cypress now auto reloads when spec files are modified in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/712&quot;&gt;#712&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、Windowsでスペックファイルが変更されたときに自動リロードするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/712&quot;&gt;＃712を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ed403f7be7af1f52f83aba547f1245b4f1fae132" translate="yes" xml:space="preserve">
          <source>Cypress now automatically detects and waits for an element which is animating to stop animating. The threshold that Cypress considers &lt;em&gt;animating&lt;/em&gt; is set to a distance of &lt;code&gt;5px&lt;/code&gt; per &lt;code&gt;60fps&lt;/code&gt;. In other words, if your element is moving too fast for a user to interact with, then Cypress considers the element animating and will wait until it finishes before attempting to interact with it. When we say &amp;lsquo;interact&amp;rsquo; we mean apply command actions like &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt;, etc. Waiting for animations prevents a series of edge cases and weird bugs where Cypress was interacting with elements &lt;strong&gt;too&lt;/strong&gt; quickly which might cause undesired side effects in your application which are hard to track down. The downside to this implementation is that for every action Cypress must wait at least 2 run loops before applying actions. This slows down every action command by about &lt;code&gt;32ms&lt;/code&gt;. If your app does not use animations you may wish to turn off this behavior in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">サイプレスは、アニメーション化している要素を自動的に検出して待機し、アニメーション化を停止します。サイプレスが&lt;em&gt;アニメーション&lt;/em&gt;と見なすしきい値は、 &lt;code&gt;60fps&lt;/code&gt; あたり &lt;code&gt;5px&lt;/code&gt; の距離に設定されています。言い換えると、ユーザーが要素を操作するには要素の動きが速すぎる場合、サイプレスは要素がアニメーションしていると見なし、操作が完了する前に要素が終了するまで待機します。私たちは「相互作用」を言うとき、私たちは、コマンドなどのアクションを適用する意味&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt;などの待機アニメーションの防止のためのサイプレスが相互作用したエッジケースと奇妙なバグのシリーズ要素&lt;strong&gt;も&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;これは、アプリケーションで追跡が困難な望ましくない副作用を引き起こす可能性があります。この実装の欠点は、すべてのアクションについて、サイプレスはアクションを適用する前に少なくとも2つの実行ループを待機する必要があることです。これにより、すべてのアクションコマンドが約 &lt;code&gt;32ms&lt;/code&gt; 遅くなります。アプリがアニメーションを使用しない場合は、 &lt;code&gt;cypress.json&lt;/code&gt; ファイルでこの動作をオフにすることができます。</target>
        </trans-unit>
        <trans-unit id="2ba3a64733b69b3e91faaceacb6498168dbdf3a1" translate="yes" xml:space="preserve">
          <source>Cypress now automatically reads from your system&amp;rsquo;s &lt;code&gt;HTTP_PROXY&lt;/code&gt;, &lt;code&gt;HTTPS_PROXY&lt;/code&gt;, and &lt;code&gt;NO_PROXY&lt;/code&gt; environment variables and proxies traffic accordingly through Cypress based on these values. This includes network traffic within your application under test, when downloading Cypress, and when accessing &amp;lsquo;Runs&amp;rsquo; within the Test Runner. Please read our new &lt;a href=&quot;proxy-configuration&quot;&gt;Proxy Configuration&lt;/a&gt; doc to understand more about proxy configuration in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/672&quot;&gt;#672&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/733&quot;&gt;#733&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/939&quot;&gt;#939&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1039&quot;&gt;#1039&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1459&quot;&gt;#1459&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;#1469&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1470&quot;&gt;#1470&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1541&quot;&gt;#1541&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1608&quot;&gt;#1608&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2295&quot;&gt;#2295&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3855&quot;&gt;#3855&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3865&quot;&gt;#3865&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1401&quot;&gt;#1401&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;#3857&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、システムの &lt;code&gt;HTTP_PROXY&lt;/code&gt; 、 &lt;code&gt;HTTPS_PROXY&lt;/code&gt; 、および &lt;code&gt;NO_PROXY&lt;/code&gt; 環境変数から自動的に読み取り、これらの値に基づいてサイプレスを介してトラフィックをプロキシします。これには、テスト中のアプリケーション内、サイプレスをダウンロードするとき、およびテストランナー内の「実行」にアクセスするときのネットワークトラフィックが含まれます。サイプレスのプロキシ構成の詳細については、新しい&lt;a href=&quot;proxy-configuration&quot;&gt;プロキシ構成&lt;/a&gt;ドキュメントをお読みください。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/672&quot;&gt;＃672&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/733&quot;&gt;＃733&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/939&quot;&gt;＃939&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1039&quot;&gt;＃1039&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1459&quot;&gt;＃1459&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;＃1469&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1470&quot;&gt;＃1470&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1541&quot;&gt;＃1541&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1608&quot;&gt;＃1608&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2295&quot;&gt;＃2295の&lt;/a&gt;修正、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3855&quot;&gt;＃3855&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3865&quot;&gt;＃3865&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1401&quot;&gt;＃1401&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;＃3857&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b2e6c8b6dea030866308e7fcc6cb0e7cf582019" translate="yes" xml:space="preserve">
          <source>Cypress now caches globally per version which prevents it from being installed multiple times across projects.</source>
          <target state="translated">Cypress はバージョンごとにグローバルにキャッシュされるようになり、プロジェクト間で何度もインストールされることがなくなりました。</target>
        </trans-unit>
        <trans-unit id="5ac2d5f8ebc9158a6a452af1a788c5b60982a897" translate="yes" xml:space="preserve">
          <source>Cypress now correctly exits during &lt;code&gt;cypress run&lt;/code&gt; in &lt;code&gt;linux&lt;/code&gt; when the browser fails to connect. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/333&quot;&gt;#333&lt;/a&gt;.</source>
          <target state="translated">サイプレスは正しく中に出て &lt;code&gt;cypress run&lt;/code&gt; 中 &lt;code&gt;linux&lt;/code&gt; ブラウザが接続に失敗したとき。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/333&quot;&gt;＃333を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="cc910ea870f10321b946d125ca2c44f5bbf17ed6" translate="yes" xml:space="preserve">
          <source>Cypress now correctly exits during &lt;code&gt;cypress run&lt;/code&gt; in &lt;code&gt;linux&lt;/code&gt; when there is a spec bundle error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/337&quot;&gt;#337&lt;/a&gt;.</source>
          <target state="translated">仕様バンドルエラーがある場合、サイプレスは &lt;code&gt;linux&lt;/code&gt; &lt;code&gt;cypress run&lt;/code&gt; 中に正しく終了するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/337&quot;&gt;＃337を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="17dd40825f41486cd8bcceeacbf6bccef7d8a9d6" translate="yes" xml:space="preserve">
          <source>Cypress now correctly handles &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events in situations where the browser has lost focus. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4039&quot;&gt;#4039&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1176&quot;&gt;#1176&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1486&quot;&gt;#1486&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、ブラウザーがフォーカスを失った状況で、 &lt;code&gt;blur&lt;/code&gt; と &lt;code&gt;focus&lt;/code&gt; イベントを正しく処理するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4039&quot;&gt;＃4039&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1176&quot;&gt;＃1176&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1486&quot;&gt;＃1486を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="de62baf1a6070a4d5f3a9edd4a54a31a88239cb7" translate="yes" xml:space="preserve">
          <source>Cypress now correctly injects and handles pages which are missing a &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, a &lt;code&gt;&amp;lt;body&lt;/code&gt;&amp;gt;, or even an &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag. Previously it would bomb on pages missing these tags.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;body&lt;/code&gt; &amp;gt;、さらには &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; タグが欠落しているページを正しく挿入して処理するようになりました。以前は、これらのタグがないページを爆撃していました。</target>
        </trans-unit>
        <trans-unit id="a4710a8994af4c326324976203ed3aeaa6712062" translate="yes" xml:space="preserve">
          <source>Cypress now correctly proxies WebSockets that are pointed at the local Cypress server (typically &lt;code&gt;localhost:2020&lt;/code&gt;). Because most users use &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.io&lt;/a&gt;, when Socket.io could not correctly connect over WebSockets it would fall back to XHR polling. You may notice many less XHR requests in your command log (which is the intended behavior).</source>
          <target state="translated">サイプレスは、ローカルサイプレスサーバー（通常は &lt;code&gt;localhost:2020&lt;/code&gt; ）を指すWebSocketを正しくプロキシするようになりました。ほとんどのユーザーは&lt;a href=&quot;http://socket.io/&quot;&gt;Socket.ioを&lt;/a&gt;使用するため、Socket.ioがWebSocket経由で正しく接続できなかった場合、XHRポーリングにフォールバックします。コマンドログでXHRリクエストが大幅に少ないことに気付く場合があります（これは意図された動作です）。</target>
        </trans-unit>
        <trans-unit id="1df56a88e64d6ea14f917641e8e78d9f267bd0e9" translate="yes" xml:space="preserve">
          <source>Cypress now correctly re-bundles files even when &lt;code&gt;watchForFileChanges&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/446&quot;&gt;#446&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/347&quot;&gt;#347&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;watchForFileChanges&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; に設定されている場合でも、ファイルを正しく再バンドルするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/446&quot;&gt;＃446&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/347&quot;&gt;＃347を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="91ae9e80a3f89597188fabb0e704a1964713f5da" translate="yes" xml:space="preserve">
          <source>Cypress now correctly sets cookies with &lt;code&gt;expirationDate&lt;/code&gt; in the past. Chrome did not handle these cookies as documented and our code did not take this into account. We also added a lot more &lt;code&gt;e2e&lt;/code&gt; tests around this behavior. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/266&quot;&gt;#266&lt;/a&gt;.</source>
          <target state="translated">サイプレスは過去に &lt;code&gt;expirationDate&lt;/code&gt; でCookieを正しく設定するようになりました。記載されているようにChromeはこれらのCookieを処理せず、コードではこれを考慮していませんでした。また、この動作に関する多くの &lt;code&gt;e2e&lt;/code&gt; テストを追加しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/266&quot;&gt;＃266を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="04ffe7bc1e7acc791633cbef90e171705686d984" translate="yes" xml:space="preserve">
          <source>Cypress now correctly works offline on Windows when visiting a localhost URL. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4763&quot;&gt;#4763&lt;/a&gt;.</source>
          <target state="translated">ローカルホストのURLにアクセスしたときに、サイプレスがWindowsでオフラインで正しく機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4763&quot;&gt;＃4763を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1b4143f2f941aff81c8c1ad7e2e56426ab6acfc5" translate="yes" xml:space="preserve">
          <source>Cypress now detects more instances of &lt;code&gt;browser&lt;/code&gt; installations. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3183&quot;&gt;#3183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3218&quot;&gt;#3218&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;browser&lt;/code&gt; インストールのインスタンスをさらに検出するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3183&quot;&gt;＃3183&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3218&quot;&gt;＃3218を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4727c0d09f1978f4104e9fcadc3eaba6f4d87811" translate="yes" xml:space="preserve">
          <source>Cypress now detects the difference between a forced async &lt;code&gt;done&lt;/code&gt; test timeout vs a regular command timeout, and will throw the appropriate message indicating whether the user forgot to invoke &lt;code&gt;done&lt;/code&gt; or whether the timeout happened due to a command.</source>
          <target state="translated">サイプレスは、強制非同期 &lt;code&gt;done&lt;/code&gt; テストタイムアウトと通常のコマンドタイムアウトの違いを検出し、ユーザーが &lt;code&gt;done&lt;/code&gt; を呼び出すのを忘れたかどうか、またはコマンドが原因でタイムアウトが発生したかどうかを示す適切なメッセージをスローします。</target>
        </trans-unit>
        <trans-unit id="a0cd94a433b93cba5bd34d281a5d67123524fdf7" translate="yes" xml:space="preserve">
          <source>Cypress now detects when an async test is passed and not all commands have finished running. It will throw an explicit error message in this situation.</source>
          <target state="translated">Cypress は、非同期テストに合格し、すべてのコマンドの実行が終了していない場合を検出するようになりました。この状況では、明示的なエラーメッセージがスローされます。</target>
        </trans-unit>
        <trans-unit id="744be5620fcce63aa0ae57f5536d83e6ae43f7cc" translate="yes" xml:space="preserve">
          <source>Cypress now displays a message when the Desktop App update is actually being applied instead of doing nothing and looking like it&amp;rsquo;s crashed.</source>
          <target state="translated">サイプレスは、何もせずクラッシュしたように見える代わりに、デスクトップアプリの更新が実際に適用されているときにメッセージを表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="b68bd8e8c63f9f2332a0feb1d4bf064ecdffde86" translate="yes" xml:space="preserve">
          <source>Cypress now errors when the &lt;code&gt;body&lt;/code&gt; paramater passed to &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; contains a circular reference. Fixed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4407&quot;&gt;#4407&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;に渡された &lt;code&gt;body&lt;/code&gt; パラメータが循環参照を含む場合、サイプレスはエラーを表示するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4407&quot;&gt;＃4407で&lt;/a&gt;修正されました。</target>
        </trans-unit>
        <trans-unit id="cf0cd2929ec215c5295db280668b3ec042888c7c" translate="yes" xml:space="preserve">
          <source>Cypress now forces the initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not to be cached by the browser. This was incorrectly being cached which meant when you changed the &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; it would not actually go out and fetch the new contents. Previously you had to check &lt;code&gt;Disable Cache&lt;/code&gt; in the &lt;code&gt;Network Tab&lt;/code&gt; inside of Chrome to prevent this bug. Unfortunately this has a significant performance drawback. If you use a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; before each test you will notice a degrade in performance because this request is no longer cached. This is a temporary problem until Cypress implements a more sophisticated caching strategy which optimizes these concerns. There is a lot to improve in this arena but it will take more time before it&amp;rsquo;s implemented.</source>
          <target state="translated">サイプレスは、最初の&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;がブラウザによってキャッシュされないように強制します。これは誤ってキャッシュされていたため、&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;を変更すると、実際には出て新しいコンテンツを取得しませんでした。以前は、このバグを防ぐために、Chromeの[ &lt;code&gt;Network Tab&lt;/code&gt; で[ &lt;code&gt;Disable Cache&lt;/code&gt; を無効にする]をオンにする必要がありました。残念ながら、これには重大なパフォーマンス上の欠点があります。各テストの前に&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;を使用すると、このリクエストがキャッシュされなくなるため、パフォーマンスが低下することに気付くでしょう。これは、サイプレスがこれらの懸念を最適化するより高度なキャッシュ戦略を実装するまでの一時的な問題です。この分野には改善すべき点がたくさんありますが、実装されるまでにはもっと時間がかかります。</target>
        </trans-unit>
        <trans-unit id="93202e47e1b4931127ee097a03291dfe2008d575" translate="yes" xml:space="preserve">
          <source>Cypress now handles &lt;code&gt;length&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; assertion chainers in a very specific way, providing a detailed message on failure, and utomatically slices out any stale element references.</source>
          <target state="translated">サイプレスは、非常に特定の方法で &lt;code&gt;length&lt;/code&gt; および &lt;code&gt;exist&lt;/code&gt; アサーションチェイナーを処理し、障害に関する詳細なメッセージを提供し、古い要素の参照を自動的に切り分けます。</target>
        </trans-unit>
        <trans-unit id="704f19938a8e4d948d29770a5393e4746cb56a92" translate="yes" xml:space="preserve">
          <source>Cypress now handles events property when a DOM element is removed during a &lt;code&gt;.click()&lt;/code&gt; event. As per the spec, if &lt;code&gt;mousedown&lt;/code&gt; causes element removal then &lt;code&gt;mouseup&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events will not be fired. Additionally if removal happens during &lt;code&gt;mouseup&lt;/code&gt; then &lt;code&gt;click&lt;/code&gt; event will not be fired. Also updated the &lt;code&gt;onConsole&lt;/code&gt; groups to only display and indicate the events which actually fired. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/109&quot;&gt;#109&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; イベント中にDOM要素が削除されると、サイプレスはイベントプロパティを処理するようになりました。仕様に従って、 &lt;code&gt;mousedown&lt;/code&gt; によって要素が削除された場合、 &lt;code&gt;mouseup&lt;/code&gt; および &lt;code&gt;click&lt;/code&gt; アンド &lt;code&gt;focus&lt;/code&gt; イベントは発生しません。さらに、 &lt;code&gt;mouseup&lt;/code&gt; 中に削除が発生した場合、 &lt;code&gt;click&lt;/code&gt; イベントは発生しません。また、実際に発生したイベントのみを表示および示すように、 &lt;code&gt;onConsole&lt;/code&gt; グループを更新しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/109&quot;&gt;＃109を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e9e766ccfbec7c10396d6d3727f724c0b970370c" translate="yes" xml:space="preserve">
          <source>Cypress now has first class support for &lt;code&gt;fixtures&lt;/code&gt; (official docs coming soon).</source>
          <target state="translated">サイプレスは現在、 &lt;code&gt;fixtures&lt;/code&gt; ファーストクラスサポートを提供しています（公式ドキュメントは近日公開予定）。</target>
        </trans-unit>
        <trans-unit id="4df17d172497053f90d37d5123e9f797232c685d" translate="yes" xml:space="preserve">
          <source>Cypress now logs out your project&amp;rsquo;s API key on a failed CI run.</source>
          <target state="translated">サイプレスは、失敗したCIの実行時にプロジェクトのAPIキーをログアウトするようになりました。</target>
        </trans-unit>
        <trans-unit id="8c99456315cf184735162f3a9cb2521c0d798d29" translate="yes" xml:space="preserve">
          <source>Cypress now looks for any npm proxy configuration values as a fallback when no other system proxy configuration is found. This brings this feature into parity with how npm reads off proxy configuration values during an &lt;code&gt;npm install&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4719&quot;&gt;#4719&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、他のシステムプロキシ構成が見つからない場合のフォールバックとして、npmプロキシ構成値を探します。これにより、この機能は、 &lt;code&gt;npm install&lt;/code&gt; 中にプロキシ設定値を読み取る方法と同等になります。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4719&quot;&gt;＃4719&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84f1b05b1d93c2600eed83e37778c98d2231e9a1" translate="yes" xml:space="preserve">
          <source>Cypress now only scans for spec changes when the watcher sees changes, rather than polling to scan. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3069&quot;&gt;#3069&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、ウォッチャーがスキャンをポーリングするのではなく、ウォッチャーが変更を見つけたときにのみスペック変更をスキャンするようになりました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3069&quot;&gt;＃3069&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42dd184af721037a9900e5add91157700bd646a5" translate="yes" xml:space="preserve">
          <source>Cypress now outputs its version when passed the &lt;code&gt;--version&lt;/code&gt; argument</source>
          <target state="translated">サイプレスは &lt;code&gt;--version&lt;/code&gt; 引数が渡されるとそのバージョンを出力するようになりました</target>
        </trans-unit>
        <trans-unit id="d7d4bec72af6de67265e487ea3f486ae4a571717" translate="yes" xml:space="preserve">
          <source>Cypress now overrides chai&amp;rsquo;s &lt;code&gt;match&lt;/code&gt; chainer and provides a specific error message when a non &lt;code&gt;regex&lt;/code&gt; value is provided. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/58&quot;&gt;#58&lt;/a&gt;.</source>
          <target state="translated">サイプレスは現在、chaiの &lt;code&gt;match&lt;/code&gt; チェーンをオーバーライドし、非 &lt;code&gt;regex&lt;/code&gt; 値が提供されたときに特定のエラーメッセージを提供します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/58&quot;&gt;＃58を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="24f4c6eaeb2cb8adabb7ab908bfbcd82e9477b99" translate="yes" xml:space="preserve">
          <source>Cypress now properly handles typing JavaScript object prototype methods (like &lt;code&gt;hasOwnProperty&lt;/code&gt;) into &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3423&quot;&gt;#3423&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、JavaScriptオブジェクトのプロトタイプメソッド（ &lt;code&gt;hasOwnProperty&lt;/code&gt; など）を&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; に&lt;/a&gt;正しく入力できるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3423&quot;&gt;＃3423を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3168f20b1f0b45a27954dab14b95622ac9f6188e" translate="yes" xml:space="preserve">
          <source>Cypress now properly parses environment variables with empty values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3742&quot;&gt;#3742&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、空の値を持つ環境変数を適切に解析するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3742&quot;&gt;＃3742を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="72f538943ef99235ac80dd5a7be8cdffbee23823" translate="yes" xml:space="preserve">
          <source>Cypress now properly supports partial matching of string values for assertions &lt;code&gt;contain.text&lt;/code&gt;, &lt;code&gt;contain.html&lt;/code&gt;, and &lt;code&gt;contain.value&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1969&quot;&gt;#1969&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、アサーションの &lt;code&gt;contain.text&lt;/code&gt; 、 &lt;code&gt;contain.html&lt;/code&gt; 、および &lt;code&gt;contain.value&lt;/code&gt; の文字列値の部分一致を適切にサポートするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1969&quot;&gt;＃1969を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="52b5d0535dd1a71e0c59cedac1a5feb173e910fe" translate="yes" xml:space="preserve">
          <source>Cypress now requires a viewport to be issued at all times. By default it is &lt;code&gt;1000x660&lt;/code&gt; but can be changed in your &lt;code&gt;cypress.json&lt;/code&gt; file with he keys: &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt;.</source>
          <target state="translated">サイプレスでは、常にビューポートを発行する必要があります。デフォルトでは、 &lt;code&gt;1000x660&lt;/code&gt; が、あなたの中で変更することができます &lt;code&gt;cypress.json&lt;/code&gt; の彼のキーを持つファイル： &lt;code&gt;viewportWidth&lt;/code&gt; と &lt;code&gt;viewportHeight&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f673d187b620c670db4b9b3aea919fd9a780c308" translate="yes" xml:space="preserve">
          <source>Cypress now retries multiple times (with a backoff strategy) when communicating with our API fails while recording runs. This will provide better feedback in situations when the API is temporarily unavailable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1590&quot;&gt;#1590&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、実行の記録中にAPIとの通信が失敗したときに（バックオフ戦略を使用して）複数回再試行するようになりました。これにより、APIが一時的に利用できない場合のフィードバックが向上します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1590&quot;&gt;＃1590を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1b1a9d74cfa3ac161a7aecfa151401c4c6e7cb8c" translate="yes" xml:space="preserve">
          <source>Cypress now retries up to 3 times for the browser to connect during &lt;code&gt;cypress run&lt;/code&gt;. The warning / error messages were also updated to be clearer. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/334&quot;&gt;#334&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、サイプレスの &lt;code&gt;cypress run&lt;/code&gt; 中にブラウザが接続するまで最大3回再試行するようになりました。警告/エラーメッセージもより明確になるように更新されました。部分的に&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/334&quot;&gt;＃334に&lt;/a&gt;対処します。</target>
        </trans-unit>
        <trans-unit id="e6d8726800d3f40efd84a65a018aab5ecc80b8d0" translate="yes" xml:space="preserve">
          <source>Cypress now scrolls all parent containers (not just &lt;code&gt;window&lt;/code&gt;) when attempting to &lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;check an element&amp;rsquo;s actionability&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/569&quot;&gt;#569&lt;/a&gt;.</source>
          <target state="translated">サイプレスは&lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;、要素のアクション可能性&lt;/a&gt;をチェックしようとするときに、 &lt;code&gt;window&lt;/code&gt; だけでなくすべての親コンテナをスクロールするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/569&quot;&gt;＃569を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="75c3210e180ed5b888dbaac9f9f2b823ad8e541d" translate="yes" xml:space="preserve">
          <source>Cypress now silently restarts the server whenever it detects a change to &lt;code&gt;cypress.json&lt;/code&gt; - meaning you no longer have to manually reboot the server for changes to be picked up.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;cypress.json&lt;/code&gt; への変更を検出すると、サイレントにサーバーを再起動するようになりました。つまり、変更を取得するためにサーバーを手動で再起動する必要がなくなりました。</target>
        </trans-unit>
        <trans-unit id="aeebc8b2da7b9ccb9e2e7bd76b842654098f814d" translate="yes" xml:space="preserve">
          <source>Cypress now throws a specific error message (with a link to further explanation) if you attempt to run commands outside of a test. Usually this happens accidentally when you write &lt;code&gt;cy.commands&lt;/code&gt; inside of a &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; block instead of the &lt;code&gt;it&lt;/code&gt;. I&amp;rsquo;ve wasted too much time and almost bombed entire presentations / demos so I&amp;rsquo;ve finally stopped this from ever happening again. If you ever see this error message, trust me, you will forever thank me.</source>
          <target state="translated">テスト外でコマンドを実行しようとすると、サイプレスは特定のエラーメッセージ（詳細な説明へのリンク付き）をスローするようになりました。あなたが書くとき、通常、これは偶然に起こる &lt;code&gt;cy.commands&lt;/code&gt; 内部の &lt;code&gt;describe&lt;/code&gt; や &lt;code&gt;context&lt;/code&gt; の代わりに、ブロック &lt;code&gt;it&lt;/code&gt; 。時間を無駄にしすぎて、プレゼンテーションやデモ全体を爆破しそうになったので、これが二度と起こらないようにようやく止めました。このエラーメッセージが表示された場合は、私を信じてください。永遠に私に感謝します。</target>
        </trans-unit>
        <trans-unit id="21ea85f8d7f19717172c574573373976dc8f7273" translate="yes" xml:space="preserve">
          <source>Cypress now throws on &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; if any DOM member isn&amp;rsquo;t in the DOM, except for &lt;code&gt;exist&lt;/code&gt; assertions.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;exist&lt;/code&gt; アサーションを除いて、DOMメンバーがDOMにない場合に&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="f8d94ca29f1aa37e5db8fe5c3b257d9755394b81" translate="yes" xml:space="preserve">
          <source>Cypress now throws on &lt;code&gt;eventually.have.length&lt;/code&gt; assertions. Use implicit &lt;code&gt;{length: n}&lt;/code&gt; command options instead.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;eventually.have.length&lt;/code&gt; .have.lengthアサーションをスローします。代わりに、暗黙的な &lt;code&gt;{length: n}&lt;/code&gt; コマンドオプションを使用してください。</target>
        </trans-unit>
        <trans-unit id="d3c42c31ebf42b105f44851eeae9239942c944df" translate="yes" xml:space="preserve">
          <source>Cypress now uses the body instead of headers to send external requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/148&quot;&gt;#148&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、ヘッダーの代わりに本文を使用して外部リクエストを送信するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/148&quot;&gt;＃148を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="56ec351e8d632a320060c36e80e1664a3d2bd1b5" translate="yes" xml:space="preserve">
          <source>Cypress now verifies it can run on your system prior to actually running. It&amp;rsquo;ll do this for each new version the first time you try to use it. Errors it receives from attempting to run will bubble up nicely, so you&amp;rsquo;ll get output for things like &lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;missing linux dependencies&lt;/a&gt; instead of absolutely &lt;em&gt;nothing&lt;/em&gt; like before.</source>
          <target state="translated">サイプレスは、実際に実行する前にシステムで実行できることを確認します。新しいバージョンを初めて使用するときに、これが行われます。実行しようとすることから受け取るエラーはうまく泡立つので、以前のようにまったく&lt;em&gt;何も&lt;/em&gt;&lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;するのでは&lt;/a&gt;なく、Linux依存&lt;em&gt;関係がない&lt;/em&gt;などの出力を取得します。</target>
        </trans-unit>
        <trans-unit id="984f4ffa7852c85c3302af6478a0498d6343532e" translate="yes" xml:space="preserve">
          <source>Cypress now waits &lt;code&gt;20s&lt;/code&gt; (which matches &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;) for the new page to load instead of &lt;code&gt;4s&lt;/code&gt; previously.</source>
          <target state="translated">サイプレスは、以前は &lt;code&gt;4s&lt;/code&gt; なく、新しいページが読み込まれるまで &lt;code&gt;20s&lt;/code&gt; （&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; に&lt;/a&gt;一致）待機します。</target>
        </trans-unit>
        <trans-unit id="01b0426deef0061b526f8597fa02ab47947651a5" translate="yes" xml:space="preserve">
          <source>Cypress now watches all the &lt;code&gt;plugins file&lt;/code&gt;&amp;lsquo;s entire dependency tree to make iterating on plugins easier. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1407&quot;&gt;#1407&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;plugins file&lt;/code&gt; 反復を容易にするために、すべてのプラグインファイルの依存関係ツリー全体を監視するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1407&quot;&gt;＃1407を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0561a236371729207fe6da2edefa2ac1e0c7e672" translate="yes" xml:space="preserve">
          <source>Cypress now works with JS applications that use &lt;code&gt;pushState&lt;/code&gt; and &lt;code&gt;replaceState&lt;/code&gt; routing (commonly known as &lt;code&gt;HTML5 History&lt;/code&gt;) without having to change any application code.</source>
          <target state="translated">サイプレスは、アプリケーションコードを変更することなく、 &lt;code&gt;pushState&lt;/code&gt; および &lt;code&gt;replaceState&lt;/code&gt; ルーティング（一般に &lt;code&gt;HTML5 History&lt;/code&gt; と呼ばれる）を使用するJSアプリケーションで動作するようになりました。</target>
        </trans-unit>
        <trans-unit id="328f444bd6f0a4d4b9f5d672125e108992bf7bae" translate="yes" xml:space="preserve">
          <source>Cypress offers several different timeout values based on the type of command.</source>
          <target state="translated">Cypress は、コマンドの種類に基づいていくつかの異なるタイムアウト値を提供しています。</target>
        </trans-unit>
        <trans-unit id="75c41c9b5e30ed427d48d319c908836d109428aa" translate="yes" xml:space="preserve">
          <source>Cypress only retries commands that query the DOM: &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;.contains()&lt;/code&gt;&lt;/a&gt;, etc. You can check if a particular command is retried by looking at the &amp;ldquo;Assertions&amp;rdquo; section in its API documentation. For example, &amp;ldquo;Assertions section&amp;rdquo; of &lt;a href=&quot;../../api/commands/first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; tells us that the command is retried until all assertions that follow it are passing.</source>
          <target state="translated">サイプレスは、クエリDOMというコマンドを再試行のみ：&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;.contains()&lt;/code&gt; &lt;/a&gt;などの特定のコマンドは、そのAPIドキュメントの「アサーション」のセクションを見て、再試行されている場合は、確認することができます。たとえば、&lt;a href=&quot;../../api/commands/first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; の&lt;/a&gt;「アサーションセクション」は、後続のすべてのアサーションが通過するまでコマンドが再試行されることを示しています。</target>
        </trans-unit>
        <trans-unit id="59e756cb2f95cf56d3bca3843c640a7f469ea40d" translate="yes" xml:space="preserve">
          <source>Cypress opens the test in a browser installed on your system. You can read more about how we do this in &lt;a href=&quot;../guides/launching-browsers&quot;&gt;Launching Browsers&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、システムにインストールされているブラウザでテストを開きます。これを行う方法の詳細については、&lt;a href=&quot;../guides/launching-browsers&quot;&gt;ブラウザの起動&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="f0173abbad11121f52075c8a906e19a118be30de" translate="yes" xml:space="preserve">
          <source>Cypress overrides chai &lt;code&gt;exist&lt;/code&gt; assertion to really mean: &amp;ldquo;does this subject exist in the document?&amp;rdquo;</source>
          <target state="translated">サイプレスはチャイ &lt;code&gt;exist&lt;/code&gt; アサーションをオーバーライドして、「この件名はドキュメントに存在しますか？」</target>
        </trans-unit>
        <trans-unit id="146ca552c9473ccc324088efa1279a8217bec4cc" translate="yes" xml:space="preserve">
          <source>Cypress overrides chai&amp;rsquo;s default inspection function for DOM elements meaning instead of seeing &lt;code&gt;{ Object (0, length, ...) }&lt;/code&gt; you will now ee the nicely formatted Cypress DOM element like: &lt;code&gt;&amp;lt;button#primary.btn-large&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cypressは、DOM &lt;code&gt;{ Object (0, length, ...) }&lt;/code&gt; に対するchaiのデフォルトの検査関数をオーバーライドします。{Object（0、length、...）}を表示する代わりに、 &lt;code&gt;&amp;lt;button#primary.btn-large&amp;gt;&lt;/code&gt; のような適切にフォーマットされたCypress DOM要素を使用します。</target>
        </trans-unit>
        <trans-unit id="b7afd5812efc2cb2bfbf2bce111de354aa70c6b4" translate="yes" xml:space="preserve">
          <source>Cypress plugin that adds &quot;extends&quot; support to the configuration file</source>
          <target state="translated">設定ファイルに &quot;extends&quot; サポートを追加する Cypress プラグイン</target>
        </trans-unit>
        <trans-unit id="211b9c09c3b0540e8cd94c7ce17d5bf126296d11" translate="yes" xml:space="preserve">
          <source>Cypress plugin that enables compatability with dotenv.</source>
          <target state="translated">dotenvとの互換性を可能にするCypressプラグイン。</target>
        </trans-unit>
        <trans-unit id="1ba12ffc00dffa77d9efcc522da0480f9945cd7b" translate="yes" xml:space="preserve">
          <source>Cypress preprocessor for bundling JavaScript via rollup</source>
          <target state="translated">ロールアップを介してJavaScriptをバンドルするためのCypressプリプロセッサ</target>
        </trans-unit>
        <trans-unit id="64d448eae4e8a6893333958b808048d2e7f256de" translate="yes" xml:space="preserve">
          <source>Cypress prevents you from being forced to always &amp;lsquo;act like a user&amp;rsquo; to generate the state of a given situation. With Cypress you can programmatically interact and control your application. You no longer have to use your UI to build up state.</source>
          <target state="translated">サイプレスは、特定の状況の状態を生成するために、常に「ユーザーのように振る舞う」ことを強いられることを防ぎます。サイプレスを使用すると、プログラムで対話してアプリケーションを制御できます。状態を構築するためにUIを使用する必要がなくなりました。</target>
        </trans-unit>
        <trans-unit id="0901f17f6a6bfd86ef0e8bdc9965616ef93b875d" translate="yes" xml:space="preserve">
          <source>Cypress prints out a table of key events that detail the keys that were pressed when clicking on type within the &lt;a href=&quot;#Command-Log&quot;&gt;Command Log&lt;/a&gt;. Each character will contain the &lt;code&gt;which&lt;/code&gt; character code and the events that happened as a result of that key press.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;#Command-Log&quot;&gt;コマンドログ&lt;/a&gt;内でタイプをクリックしたときに押されたキーの詳細を示すキーイベントの表を出力します。各文字には、 &lt;code&gt;which&lt;/code&gt; 文字コードと、そのキーを押した結果として発生したイベントが含まれます。</target>
        </trans-unit>
        <trans-unit id="30c4ca1628d1f2fc135ce180acaedd95781e4ac5" translate="yes" xml:space="preserve">
          <source>Cypress provides a nice &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt; that gives you a visual structure of suites, tests, and assertions. Soon you&amp;rsquo;ll also see commands, page events, network requests, and more.</source>
          <target state="translated">サイプレスは、スイート、テスト、およびアサーションの視覚的な構造を提供する素晴らしい&lt;a href=&quot;../core-concepts/test-runner&quot;&gt;テストランナー&lt;/a&gt;を提供します。すぐに、コマンド、ページイベント、ネットワークリクエストなども表示されます。</target>
        </trans-unit>
        <trans-unit id="5a5b7d9bd0b3cb9bb9f611633a4c8aae5b0ddab3" translate="yes" xml:space="preserve">
          <source>Cypress provides a simple but powerful algorithm when &lt;a href=&quot;interacting-with-elements&quot;&gt;interacting with elements.&lt;/a&gt;</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;interacting-with-elements&quot;&gt;要素を操作&lt;/a&gt;するときにシンプルで強力なアルゴリズムを提供します。</target>
        </trans-unit>
        <trans-unit id="7119a7722e27be27408050d772ff83cb2fc37abe" translate="yes" xml:space="preserve">
          <source>Cypress relies on many best-of-breed open source testing libraries to lend stability and familiarity to the platform from the get-go. If you&amp;rsquo;ve been testing in JavaScript, you&amp;rsquo;ll recognize many old friends in this list. Understand how we exploit them and hit the ground running with Cypress!</source>
          <target state="translated">サイプレスは、多くの最高のオープンソーステストライブラリを利用して、プラットフォームの安定性と親しみやすさを最初から提供しています。JavaScriptでテストしている場合は、このリストの多くの古い友達を認識できます。それらをどのように活用し、サイプレスで実行されているかを理解してください！</target>
        </trans-unit>
        <trans-unit id="94d62bad629e117914d487019b841c0cd760fd4c" translate="yes" xml:space="preserve">
          <source>Cypress respects all default browser behavior when events are canceled.</source>
          <target state="translated">Cypress は、イベントがキャンセルされたときのすべてのデフォルトのブラウザの動作を尊重します。</target>
        </trans-unit>
        <trans-unit id="1aca486d8a9674fc068dbb213faf1eb126b6bf8d" translate="yes" xml:space="preserve">
          <source>Cypress respects not firing subsequent events if previous ones were canceled.</source>
          <target state="translated">Cypressは、前のイベントがキャンセルされた場合、後続のイベントを発射しないことを尊重しています。</target>
        </trans-unit>
        <trans-unit id="6b8f0d859d277d8becfc00ac96e5e1d797ba607d" translate="yes" xml:space="preserve">
          <source>Cypress runs a series of async lifecycle events that reset state between tests</source>
          <target state="translated">Cypress は、テスト間で状態をリセットする一連の非同期ライフサイクルイベントを実行します。</target>
        </trans-unit>
        <trans-unit id="84eee613666e00d11cbbab69e67875033066feba" translate="yes" xml:space="preserve">
          <source>Cypress runs as fast as your browser can render content. You can watch tests run in real time as you develop your applications. TDD FTW!</source>
          <target state="translated">Cypress は、ブラウザがコンテンツをレンダリングできる速度で実行されます。アプリケーションを開発する際に、リアルタイムで実行されるテストを見ることができます。TDD FTW!</target>
        </trans-unit>
        <trans-unit id="652b35d8cbe457fb4f8dea21ac2f6bee59ef38af" translate="yes" xml:space="preserve">
          <source>Cypress runs each spec file in isolation: the browser is exited between specs. Configuration changed in one spec won&amp;rsquo;t be visible in other specs.</source>
          <target state="translated">サイプレスは各スペックファイルを個別に実行します。スペック間でブラウザが終了します。1つの仕様で変更された構成は、他の仕様では表示されません。</target>
        </trans-unit>
        <trans-unit id="993523b15d16a2320c718b9bd7eeab7048b6023f" translate="yes" xml:space="preserve">
          <source>Cypress runs each spec file in isolation: the browser is exited between specs. Environment variables added or changed in one spec won&amp;rsquo;t be visible in other specs.</source>
          <target state="translated">サイプレスは各スペックファイルを個別に実行します。スペック間でブラウザが終了します。1つの仕様で追加または変更された環境変数は、他の仕様では表示されません。</target>
        </trans-unit>
        <trans-unit id="1c2f59d18eff47414ce290463f65cbe49d47a359" translate="yes" xml:space="preserve">
          <source>Cypress runs several calculations to ensure an element can &lt;em&gt;actually&lt;/em&gt; be interacted with like a real user would. If you&amp;rsquo;re seeing this error, the solution is often obvious. You may need to &lt;em&gt;guard&lt;/em&gt; your commands (due to a timing or an animation issue).</source>
          <target state="translated">サイプレスはいくつかの計算を実行して、要素が&lt;em&gt;実際の&lt;/em&gt;ユーザーと同じように&lt;em&gt;実際&lt;/em&gt;に操作できるようにします。このエラーが表示される場合、解決策は多くの場合明白です。（タイミングまたはアニメーションの問題により）コマンドを&lt;em&gt;保護&lt;/em&gt;する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="a4f200198c8ba764235a6c2c637121db6109d4e7" translate="yes" xml:space="preserve">
          <source>Cypress runs tests in a unique interactive runner that allows you to see commands as they execute while also viewing the application under test.</source>
          <target state="translated">Cypress は、テスト中のアプリケーションを表示しながら、実行中のコマンドを見ることができる独自のインタラクティブランナーでテストを実行します。</target>
        </trans-unit>
        <trans-unit id="4e332a0c5a468947f22565f93f6dc999aed977f7" translate="yes" xml:space="preserve">
          <source>Cypress ships with &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;official type declarations&lt;/a&gt; for &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. This allows you to write your tests in TypeScript. All that is required is a little bit of configuration.</source>
          <target state="translated">サイプレスには、&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScriptの&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;公式の型宣言が&lt;/a&gt;付属しています。これにより、TypeScriptでテストを記述できます。必要なのは、構成のほんの少しです。</target>
        </trans-unit>
        <trans-unit id="5c9a32a140f11895887c01b52c52843f2ff296c2" translate="yes" xml:space="preserve">
          <source>Cypress should run on &lt;strong&gt;all&lt;/strong&gt; CI providers. We have provided some example projects and configuration for some CI providers to help you get started.</source>
          <target state="translated">サイプレスは&lt;strong&gt;すべての&lt;/strong&gt; CIプロバイダーで実行する必要があります。いくつかのサンプルプロジェクトと構成をいくつかのCIプロバイダーに提供して、開始を支援します。</target>
        </trans-unit>
        <trans-unit id="9f193d6f03ef2d0aa86e8bd9826847c232c8503a" translate="yes" xml:space="preserve">
          <source>Cypress should work with self signed SSL certificates now.</source>
          <target state="translated">Cypress は自己署名付き SSL 証明書で動作するようになりました。</target>
        </trans-unit>
        <trans-unit id="acc644f8041fb8424264f0835f0deccd81152ba2" translate="yes" xml:space="preserve">
          <source>Cypress spawns your &lt;code&gt;pluginsFile&lt;/code&gt; in its own child process so it is isolated away from the context that Cypress itself runs in. That means you cannot accidentally modify or change Cypress&amp;rsquo; own execution in any way.</source>
          <target state="translated">サイプレスは独自の子プロセスで &lt;code&gt;pluginsFile&lt;/code&gt; を生成するため、サイプレス自体が実行されるコンテキストから分離されます。つまり、サイプレスの実行を誤って変更または変更することは決してできません。</target>
        </trans-unit>
        <trans-unit id="6db4efc3fc67daf29a241dfe4721a71b035dbaa4" translate="yes" xml:space="preserve">
          <source>Cypress spawns your &lt;code&gt;pluginsFile&lt;/code&gt; in its own child process so it is isolated away from the context that Cypress itself runs in. That means you cannot accidentally modify or change Cypress&amp;rsquo;s own execution in any way.</source>
          <target state="translated">サイプレスは独自の子プロセスで &lt;code&gt;pluginsFile&lt;/code&gt; を生成するため、サイプレス自体が実行されているコンテキストから分離されます。つまり、サイプレス自身の実行を誤って変更したり変更したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="e5e547cc7614418821eb9d223a6953d496b64b40" translate="yes" xml:space="preserve">
          <source>Cypress supports both BDD (&lt;code&gt;expect&lt;/code&gt;/&lt;code&gt;should&lt;/code&gt;) and TDD (&lt;code&gt;assert&lt;/code&gt;) style assertions. &lt;a href=&quot;../references/assertions&quot;&gt;Read more about assertions.&lt;/a&gt;</source>
          <target state="translated">サイプレスは、BDD（ &lt;code&gt;expect&lt;/code&gt; / &lt;code&gt;should&lt;/code&gt; ）とTDD（ &lt;code&gt;assert&lt;/code&gt; ）スタイルのアサーションの両方をサポートしています。&lt;a href=&quot;../references/assertions&quot;&gt;アサーションの詳細をご覧ください。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff507ca9cfd843fa195d0094c8b6d5053885bb9e" translate="yes" xml:space="preserve">
          <source>Cypress supports both ES2015 modules and CommonJS modules. You can import/require npm modules as well as local modules:</source>
          <target state="translated">CypressはES2015モジュールとCommonJSモジュールの両方をサポートしています。ローカルモジュールだけでなく、npmモジュールをインポート/要求することができます。</target>
        </trans-unit>
        <trans-unit id="038e3f502d60c8beca841390c095d4561733318b" translate="yes" xml:space="preserve">
          <source>Cypress supports custom reporters, whether local to your project or installed through &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、プロジェクトのローカルであるか、&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;を通じてインストールされているかにかかわらず、カスタムレポーターをサポートしています。</target>
        </trans-unit>
        <trans-unit id="6fc9f13371034d720435a8eb69b7cd6ab176fb37" translate="yes" xml:space="preserve">
          <source>Cypress takes snapshots of your application and enables you to time travel back to the state it was in when commands ran.</source>
          <target state="translated">Cypress はアプリケーションのスナップショットを取得し、コマンドが実行されたときの状態にタイムトラベルすることができます。</target>
        </trans-unit>
        <trans-unit id="fe5be4836516e1e2770a2da478822eed0a699871" translate="yes" xml:space="preserve">
          <source>Cypress taskbar icon now displays correctly in OS X dark theme. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/132&quot;&gt;#132&lt;/a&gt;.</source>
          <target state="translated">サイプレスタスクバーアイコンがOS Xのダークテーマで正しく表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/132&quot;&gt;＃132を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d4972b25ec91ce75b0b59d3618328eb5e19b7cdd" translate="yes" xml:space="preserve">
          <source>Cypress tries to act like a human user would using the browser.</source>
          <target state="translated">Cypressは、ブラウザを使って人間のユーザーのように振る舞おうとします。</target>
        </trans-unit>
        <trans-unit id="479947688007d4c97106b916ae2f1db22b00a060" translate="yes" xml:space="preserve">
          <source>Cypress type definition now allow a &lt;code&gt;timeout&lt;/code&gt; option in &lt;a href=&quot;../../api/commands/hash&quot;&gt;&lt;code&gt;cy.hash()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3844&quot;&gt;#3844&lt;/a&gt;.</source>
          <target state="translated">サイプレスタイプの定義で、&lt;a href=&quot;../../api/commands/hash&quot;&gt; &lt;code&gt;cy.hash()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;timeout&lt;/code&gt; オプションが許可されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3844&quot;&gt;＃3844を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f88b9ca448ccd87f8b6ec70c9370c6e14674014d" translate="yes" xml:space="preserve">
          <source>Cypress ultimately controls the entire automation process from top to bottom, which puts it in the unique position of being able to understand everything happening in and outside of the browser. This means Cypress is capable of delivering more consistent results than any other testing tool.</source>
          <target state="translated">Cypress は、上から下までの自動化プロセス全体を最終的にコントロールしているため、ブラウザの内外で起こっていることをすべて理解できるというユニークな立場にあります。これは、Cypressが他のどのテストツールよりも一貫した結果を提供できることを意味します。</target>
        </trans-unit>
        <trans-unit id="4fc8460227cb9de3a009bcbf7aaffc8c72982fcb" translate="yes" xml:space="preserve">
          <source>Cypress used to automatically include any scripts in the &lt;code&gt;supportFolder&lt;/code&gt; before your test files. However, automatically including all the files in a certain directory is somewhat magical and unintuitive, and requires creating globals for the purpose of utility functions.</source>
          <target state="translated">サイプレスは、テストファイルの前に &lt;code&gt;supportFolder&lt;/code&gt; にスクリプトを自動的に含めていました。ただし、特定のディレクトリにすべてのファイルを自動的に含めることは、いくぶん不思議で直感的ではなく、ユーティリティ関数の目的でグローバルを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="c6c3d8c071e04804ec8f333122fd456ddd01a77a" translate="yes" xml:space="preserve">
          <source>Cypress uses 2 different windows.</source>
          <target state="translated">Cypressは2種類のウィンドウを使用しています。</target>
        </trans-unit>
        <trans-unit id="6853d537d62543dcc53050554902c96c0145fe4f" translate="yes" xml:space="preserve">
          <source>Cypress uses the &lt;a href=&quot;https://github.com/cypress-io/commit-info&quot;&gt;@cypress/commit-info&lt;/a&gt; package to extract git information to associate with the run (e.g. branch, commit message, author).</source>
          <target state="translated">サイプレスは&lt;a href=&quot;https://github.com/cypress-io/commit-info&quot;&gt;@ cypress / commit-info&lt;/a&gt;パッケージを使用して、実行に関連付けるgit情報（ブランチ、コミットメッセージ、作成者など）を抽出します。</target>
        </trans-unit>
        <trans-unit id="bb017039428bd9695548918b11321d9646f00783" translate="yes" xml:space="preserve">
          <source>Cypress uses the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/a&gt; node module for both the back end server process, and for everything running in the browser (called the driver).</source>
          <target state="translated">サイプレスは、バックエンドサーバープロセスと、ブラウザーで実行されているすべてのもの（ドライバーと呼ばれます）の両方に&lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt; &lt;code&gt;debug&lt;/code&gt; &lt;/a&gt;ノードモジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="97e22057dbd51fd0e4767f5d9d5b6fe56128a778" translate="yes" xml:space="preserve">
          <source>Cypress uses your &lt;a href=&quot;#Project-ID&quot;&gt;`projectId`&lt;/a&gt; and &lt;a href=&quot;#Record-key&quot;&gt;Record Key&lt;/a&gt; together to uniquely identify projects.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;#Project-ID&quot;&gt;`projectId`&lt;/a&gt;と&lt;a href=&quot;#Record-key&quot;&gt;レコードキーを&lt;/a&gt;一緒に使用して、プロジェクトを一意に識別します。</target>
        </trans-unit>
        <trans-unit id="d28e3238226e8e5bf814bfa4ea1724d3591929fa" translate="yes" xml:space="preserve">
          <source>Cypress utilizes a Chrome extension within the Test Runner in order to run properly. If you or your company whitelist specific Chrome extensions, this may cause problems with running Cypress. You will want to ask your administrator to whitelist the Cypress extension ID below:</source>
          <target state="translated">Cypressは適切に動作するためにテストランナー内のChrome拡張機能を利用しています。あなたやあなたの会社が特定のChrome拡張機能をホワイトリストに入れている場合、Cypressの実行に問題が生じる可能性があります。管理者に依頼して、下記のCypress拡張機能IDをホワイトリストに入れてもらうようにしてください。</target>
        </trans-unit>
        <trans-unit id="e675859d662a062a4c171a9f1d08c57a4ca629d7" translate="yes" xml:space="preserve">
          <source>Cypress waits for Promises to resolve before continuing</source>
          <target state="translated">サイプレスは、約束が解決するのを待ってから続行します。</target>
        </trans-unit>
        <trans-unit id="c8c00835f4dc24cefa4efa7561d09d2e10eaa482" translate="yes" xml:space="preserve">
          <source>Cypress webpack Preprocessor</source>
          <target state="translated">Cypress webpack プリプロセッサ</target>
        </trans-unit>
        <trans-unit id="54d4f75b63aca1715daf3b46c5b502c77d230338" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;not&lt;/em&gt; continue running any other commands until &lt;code&gt;cy.exec()&lt;/code&gt; has finished, so a long-running command will drastically slow down your test cycle.</source>
          <target state="translated">サイプレスはなり&lt;em&gt;ません&lt;/em&gt;まで、他のコマンドを実行し続ける &lt;code&gt;cy.exec()&lt;/code&gt; 長時間実行コマンドが大幅にあなたのテストサイクルが遅くなりますので、完了しました。</target>
        </trans-unit>
        <trans-unit id="0609de7c3cdae19760f6f992063e6008dfcf272f" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;not&lt;/em&gt; continue running any other commands until &lt;code&gt;cy.task()&lt;/code&gt; has finished, so a long-running command will drastically slow down your test runs.</source>
          <target state="translated">サイプレスはなり&lt;em&gt;ません&lt;/em&gt;まで、他のコマンドを実行し続ける &lt;code&gt;cy.task()&lt;/code&gt; 長時間実行コマンドが大幅にあなたのテストの実行が遅くなりますので、完了しました。</target>
        </trans-unit>
        <trans-unit id="406c613e6876b8de52afdd2fa25e20b62f46f937" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;strip off&lt;/em&gt; the &lt;code&gt;CYPRESS_&lt;/code&gt; when adding your environment variables.</source>
          <target state="translated">サイプレスはなり&lt;em&gt;はがす&lt;/em&gt; &lt;code&gt;CYPRESS_&lt;/code&gt; をご使用の環境変数を追加するとき。</target>
        </trans-unit>
        <trans-unit id="3b1e056fcee4b7be242d9b9374156e4ae810a750" translate="yes" xml:space="preserve">
          <source>Cypress will assign each spec file to an available machine based on our &lt;a href=&quot;#Balance-strategy&quot;&gt;balance strategy&lt;/a&gt;. Due to this balance strategy, the run order of the spec files is not guaranteed when parallelized.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;#Balance-strategy&quot;&gt;バランス戦略に&lt;/a&gt;基づいて、各スペックファイルを使用可能なマシンに割り当てます。このバランス戦略により、並列化されたときのスペックファイルの実行順序は保証されません。</target>
        </trans-unit>
        <trans-unit id="e71366c925d9bca56f0b4179d4e45622fb21fad9" translate="yes" xml:space="preserve">
          <source>Cypress will automatically &lt;em&gt;wait&lt;/em&gt; for elements to pass their default assertions. Just like with explicit assertions you&amp;rsquo;ve added, all of these assertions share the &lt;em&gt;same&lt;/em&gt; timeout values.</source>
          <target state="translated">サイプレスは、要素がデフォルトのアサーションを渡すのを自動的に&lt;em&gt;待ち&lt;/em&gt;ます。追加した明示的なアサーションと同様に、これらのアサーションはすべて&lt;em&gt;同じ&lt;/em&gt;タイムアウト値を共有します。</target>
        </trans-unit>
        <trans-unit id="8fc70e89236c64d2239c242879042a3d4d1d96bb" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the right authorization headers if you&amp;rsquo;re attempting to visit an application that requires &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication&quot;&gt;Basic Authentication&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication&quot;&gt;基本認証&lt;/a&gt;を必要とするアプリケーションにアクセスしようとすると、サイプレスは適切な認証ヘッダーを自動的に適用します。</target>
        </trans-unit>
        <trans-unit id="75afb223b9c8a43692cdba1ca3807b619bea5621" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the routes to the very next &lt;code&gt;cy.visit()&lt;/code&gt; and does so immediately before any of your application code runs.</source>
          <target state="translated">サイプレスは、ルートを次の &lt;code&gt;cy.visit()&lt;/code&gt; に自動的に適用し、アプリケーションコードが実行される直前に適用します。</target>
        </trans-unit>
        <trans-unit id="3f9bcdd8a00e9ea3873797d9d170893ab1ae4b55" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the server and routes to the very next &lt;code&gt;cy.visit()&lt;/code&gt; and does so immediately before any of your application code runs.</source>
          <target state="translated">サイプレスは自動的にサーバーを適用し、次のルートにルーティングします &lt;code&gt;cy.visit()&lt;/code&gt; アプリケーションコードが実行される直前にそうします。</target>
        </trans-unit>
        <trans-unit id="53fd4f3428ed96a217bfd6ea8fc4d1515e5cf2b8" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attach this header at the network proxy level, outside of the browser. Therefore you &lt;strong&gt;will not&lt;/strong&gt; see this header in the Dev Tools.</source>
          <target state="translated">サイプレスは、ブラウザ外のネットワークプロキシレベルでこのヘッダーを自動的に添付します。したがって、あなた&lt;strong&gt;はしません&lt;/strong&gt;、このヘッダーは開発ツールには表示。</target>
        </trans-unit>
        <trans-unit id="7bc5d5de171bd5c733d073e432447ea2ecbf16d3" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attempt to serve your files if you don&amp;rsquo;t provide a host and &lt;code&gt;baseUrl&lt;/code&gt;&lt;strong&gt;is not defined&lt;/strong&gt;. The path should be relative to your project&amp;rsquo;s root folder (where the &lt;code&gt;cypress.json&lt;/code&gt; file is generated by default).</source>
          <target state="translated">ホストを &lt;code&gt;baseUrl&lt;/code&gt; せず、baseUrl&lt;strong&gt;が定義され&lt;/strong&gt;ていない場合、サイプレスは自動的にファイルの提供を試みます。パスは、プロジェクトのルートフォルダー（デフォルトで &lt;code&gt;cypress.json&lt;/code&gt; ファイルが生成される場所）からの相対パスである必要があります。</target>
        </trans-unit>
        <trans-unit id="94c9314c2b4f0cc413e6e36af85e441eb6d5d3a6" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attempt to serve your files if you don&amp;rsquo;t provide a host. The path should be relative to your project&amp;rsquo;s root folder (where &lt;code&gt;cypress.json&lt;/code&gt; is located).</source>
          <target state="translated">ホストを提供しない場合、サイプレスは自動的にファイルの提供を試みます。パスはプロジェクトのルートフォルダー（ &lt;code&gt;cypress.json&lt;/code&gt; がある場所）。</target>
        </trans-unit>
        <trans-unit id="2d2f3c92bd2819310aa05480cbe7b24c2b403524" translate="yes" xml:space="preserve">
          <source>Cypress will automatically balance your spec files across the available machines in your CI provider. Cypress calculates which spec file to run based on the data collected from previous runs. This ensures that your spec files run as fast as possible, with no need for manual configuration.</source>
          <target state="translated">Cypress は、CI プロバイダ内の利用可能なマシン間で spec ファイルのバランスを自動的に調整します。Cypressは、以前の実行から収集したデータに基づいて、どのスペックファイルを実行するかを計算します。これにより、手動で設定する必要がなく、スペックファイルが可能な限り高速に実行されるようになります。</target>
        </trans-unit>
        <trans-unit id="f5bc0f3740be999ed993daff018d09755f5d0c0d" translate="yes" xml:space="preserve">
          <source>Cypress will automatically calculate a &lt;strong&gt;unique selector&lt;/strong&gt; to use targeted element by running through a series of selector strategies.</source>
          <target state="translated">サイプレスは、一連のセレクター戦略を実行することにより、ターゲット要素を使用するための&lt;strong&gt;一意のセレクター&lt;/strong&gt;を自動的に計算します。</target>
        </trans-unit>
        <trans-unit id="1c09141d31ee454fa40ad3e12fb02c509ba19807" translate="yes" xml:space="preserve">
          <source>Cypress will automatically clear all cookies &lt;strong&gt;before&lt;/strong&gt; each test run.</source>
          <target state="translated">サイプレスは、テストを実行する&lt;strong&gt;前に&lt;/strong&gt;すべてのCookieを自動的にクリアします。</target>
        </trans-unit>
        <trans-unit id="e5585ef906a49c34abd99817fa602271f93287bb" translate="yes" xml:space="preserve">
          <source>Cypress will automatically detect the type of browser supplied and launch it for you.</source>
          <target state="translated">Cypress は、提供されたブラウザの種類を自動的に検出して起動します。</target>
        </trans-unit>
        <trans-unit id="8b4fad3016d78365d8b99afdd0809a57b1a103ae" translate="yes" xml:space="preserve">
          <source>Cypress will automatically determine if an element is animating and wait until it stops.</source>
          <target state="translated">Cypressは、要素がアニメーションしているかどうかを自動的に判断し、停止するまで待ちます。</target>
        </trans-unit>
        <trans-unit id="23da5b17758d9e7d4f841343cbb8a6b0d4ff29bf" translate="yes" xml:space="preserve">
          <source>Cypress will continuously attempt to interact with the element until it eventually times out. If you&amp;rsquo;d like to force Cypress to interact with the element there are a few options:</source>
          <target state="translated">サイプレスは、最終的にタイムアウトするまで継続的に要素との相互作用を試みます。サイプレスに要素との相互作用を強制したい場合、いくつかのオプションがあります：</target>
        </trans-unit>
        <trans-unit id="37b891f51aad5b809dd4cf0e5e34f297407b2fdf" translate="yes" xml:space="preserve">
          <source>Cypress will create a &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;screenshotsFolder&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videosFolder&lt;/code&gt;&lt;/a&gt; to store the screenshots and videos taken during the testing of your application. Many users will opt to add these folders to their &lt;code&gt;.gitignore&lt;/code&gt; file. Additionally, if you are storing sensitive environment variables in your &lt;code&gt;cypress.json&lt;/code&gt; or &lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt;&lt;code&gt;cypress.env.json&lt;/code&gt;&lt;/a&gt;, these should also be ignored when you check into source control.</source>
          <target state="translated">サイプレスは、アプリケーションのテスト中に取得したスクリーンショットとビデオを保存するために、&lt;a href=&quot;../references/configuration#Screenshots&quot;&gt; &lt;code&gt;screenshotsFolder&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videosFolder&lt;/code&gt; &lt;/a&gt;を作成します。多くのユーザーは、これらのフォルダーを &lt;code&gt;.gitignore&lt;/code&gt; ファイルに追加することを選択します。さらに、 &lt;code&gt;cypress.json&lt;/code&gt; または&lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt; &lt;code&gt;cypress.env.json&lt;/code&gt; &lt;/a&gt;に機密性の高い環境変数を保存している場合、ソース管理にチェックインするときにこれらも無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="b1cb8fd34ae7f83f958af119167b50e6cf003b49" translate="yes" xml:space="preserve">
          <source>Cypress will error and exit with status 1 if no specs were found during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1585&quot;&gt;#1585&lt;/a&gt;.</source>
          <target state="translated">サイプレスの &lt;code&gt;cypress run&lt;/code&gt; 中に仕様が見つからなかった場合、サイプレスはエラーになり、ステータス1で終了します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1585&quot;&gt;＃1585を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="373c9016054078fb9acea27857f55ea29665668f" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;input&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if typing that key modifies or changes the value of the element.</source>
          <target state="translated">サイプレスは発火する &lt;code&gt;input&lt;/code&gt; &lt;em&gt;のみ&lt;/em&gt;タイピングキー修飾又は要素の値を変更している場合。</target>
        </trans-unit>
        <trans-unit id="627967f432d1ceb4757cb73a73a87d9091bc0d6f" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;keypress&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if that key is supposed to actually fire &lt;code&gt;keypress&lt;/code&gt;.</source>
          <target state="translated">サイプレスは、発火する &lt;code&gt;keypress&lt;/code&gt; &lt;em&gt;のみ&lt;/em&gt;、そのキーが実際に火災になっている場合は &lt;code&gt;keypress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c53d051fa8bc8d03d8f5d5133be0a37808127e2" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;textInput&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if typing that key would have inserted an actual character.</source>
          <target state="translated">サイプレスは、そのキーを入力すると実際の文字が挿入された場合に&lt;em&gt;のみ&lt;/em&gt;、 &lt;code&gt;textInput&lt;/code&gt; を起動します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7779f36036ddf9ea77e21c8f2ba5265d9196cc5e" translate="yes" xml:space="preserve">
          <source>Cypress will ignore this element preference order if you pass a selector argument to &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; にセレクター引数を渡した場合、サイプレスはこの要素の優先順位を無視します。</target>
        </trans-unit>
        <trans-unit id="49e77e0383d1aa1a1f3c782bd0489a86f9de8325" translate="yes" xml:space="preserve">
          <source>Cypress will immediately fail with the following test code:</source>
          <target state="translated">Cypressは以下のテストコードですぐに失敗します。</target>
        </trans-unit>
        <trans-unit id="48623dd3ef33bf76508adf868a3a2bad8137d3d3" translate="yes" xml:space="preserve">
          <source>Cypress will no longer incorrectly revert to a previous test run&amp;rsquo;s snapshot when tests are re-run.</source>
          <target state="translated">テストが再実行されたときに、サイプレスが以前のテスト実行のスナップショットに誤って戻ることはなくなりました。</target>
        </trans-unit>
        <trans-unit id="6fddad0e92489f19cbb4337c046170574053b9d4" translate="yes" xml:space="preserve">
          <source>Cypress will now &lt;a href=&quot;configuration#Resolved-Configuration&quot;&gt;display the &lt;strong&gt;resolved&lt;/strong&gt; configuration values when you open a project&lt;/a&gt;. This tells you the source of all config values.</source>
          <target state="translated">サイプレスは&lt;a href=&quot;configuration#Resolved-Configuration&quot;&gt;、プロジェクトを開いたときに&lt;/a&gt;、&lt;strong&gt;解決された&lt;/strong&gt;構成値を表示するようになりました。これにより、すべての構成値のソースがわかります。</target>
        </trans-unit>
        <trans-unit id="89dc61f3be6f61640026475b2ed988ca8ce68844" translate="yes" xml:space="preserve">
          <source>Cypress will now automatically prompt you to add a project when using &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a project that has not yet been added.</source>
          <target state="translated">サイプレスは、まだ追加されていないプロジェクトで&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;を使用するときに、プロジェクトを追加するように自動的に要求するようになりました。</target>
        </trans-unit>
        <trans-unit id="2bcf240396967ced122d7e48b9c1d58eb2ccc9b8" translate="yes" xml:space="preserve">
          <source>Cypress will now display &lt;code&gt;cypress.json&lt;/code&gt; parse errors when attempting to boot a project when there is a syntax error in &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">サイプレスは現在表示されます &lt;code&gt;cypress.json&lt;/code&gt; のに構文エラーがある場合、プロジェクトを起動しようとすると、解析エラーを &lt;code&gt;cypress.json&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="6f179a61c65d86072e367f13cd1cb9d33746394f" translate="yes" xml:space="preserve">
          <source>Cypress will now output its internal logger directly to the console when &lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env var is set.</source>
          <target state="translated">&lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env varが設定されている場合、サイプレスは内部ロガーを直接コンソールに出力するようになりました。</target>
        </trans-unit>
        <trans-unit id="2d1ef6bc49f222fca87099bb1aa6579caa469a68" translate="yes" xml:space="preserve">
          <source>Cypress will now scroll past multiple elements that cover up an element to be interacted with. It also now factors in elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/571&quot;&gt;#571&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/565&quot;&gt;#565&lt;/a&gt;.</source>
          <target state="translated">サイプレスは、相互作用する要素を覆う複数の要素を超えてスクロールします。また、 &lt;code&gt;position: sticky&lt;/code&gt; 要素を考慮に入れています：sticky。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/571&quot;&gt;＃571&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/565&quot;&gt;＃565を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="89757a0bd83b5d48651207fb2e50c0887e271566" translate="yes" xml:space="preserve">
          <source>Cypress will prefix the URL with the &lt;code&gt;baseUrl&lt;/code&gt; configured in your &lt;a href=&quot;../../guides/references/configuration#Global&quot;&gt;network options&lt;/a&gt; if you&amp;rsquo;ve set one.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;../../guides/references/configuration#Global&quot;&gt;ネットワークオプションで&lt;/a&gt;設定されている &lt;code&gt;baseUrl&lt;/code&gt; を URLの前に付けます（設定されている場合）。</target>
        </trans-unit>
        <trans-unit id="fcbd547a9a0cf787be48e7eb4c0cc9f187cd6025" translate="yes" xml:space="preserve">
          <source>Cypress will prefix the URL with the &lt;code&gt;baseUrl&lt;/code&gt; configured in your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Global&quot;&gt;network options&lt;/a&gt; if you&amp;rsquo;ve set one.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Global&quot;&gt;ネットワークオプションで&lt;/a&gt;設定されている &lt;code&gt;baseUrl&lt;/code&gt; をURLのプレフィックスとして付けます。</target>
        </trans-unit>
        <trans-unit id="2923d48f818119211f8df485af9cb43493e40b06" translate="yes" xml:space="preserve">
          <source>Cypress will resolve your command with whatever the final Cypress command yields.</source>
          <target state="translated">Cypress は、Cypress コマンドの最終的な結果が何であれ、あなたのコマンドを解決します。</target>
        </trans-unit>
        <trans-unit id="0b94a3e9f4bbac7f6edd3b8cd91bd0bd7542db67" translate="yes" xml:space="preserve">
          <source>Cypress will restore the viewport in the snapshot</source>
          <target state="translated">Cypressはスナップショットのビューポートを復元します。</target>
        </trans-unit>
        <trans-unit id="5bc72c81e5b0dbdb649a52327f5ae530b6783eac" translate="yes" xml:space="preserve">
          <source>Cypress will retry for up to 10 seconds to find a visible element of class &lt;code&gt;mobile-nav&lt;/code&gt; with text containing &amp;ldquo;Home&amp;rdquo;. For more examples, read the &lt;a href=&quot;introduction-to-cypress#Timeouts&quot;&gt;Timeouts&lt;/a&gt; section in the &amp;ldquo;Introduction to Cypress&amp;rdquo; guide.</source>
          <target state="translated">サイプレスは最大10秒間再試行して、「Home」を含むテキストを含む &lt;code&gt;mobile-nav&lt;/code&gt; クラスの可視要素を見つけます。その他の例については、「サイプレスの概要」ガイドの&lt;a href=&quot;introduction-to-cypress#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="14e1cf97edb633b6cef84f1bec344f3e26c2f25b" translate="yes" xml:space="preserve">
          <source>Cypress will then attempt to download a binary with this format: &lt;code&gt;https://www.example.com/desktop/:version?platform=p&lt;/code&gt;</source>
          <target state="translated">その後、サイプレスは次の形式のバイナリのダウンロードを試み &lt;code&gt;https://www.example.com/desktop/:version?platform=p&lt;/code&gt; ：//www.example.com/desktop/：version？platform = p</target>
        </trans-unit>
        <trans-unit id="ef5b8355a287fe73ff99a7efb88b3722d96d5950" translate="yes" xml:space="preserve">
          <source>Cypress will wait for the element to pass all of these checks for the duration of the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;&lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt; (described in depth in the &lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertions&lt;/a&gt; core concept guide).</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt; &lt;code&gt;defaultCommandTimeout&lt;/code&gt; &lt;/a&gt;の期間中、要素がこれらのすべてのチェックに合格するのを待ちます（&lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;デフォルトアサーションの&lt;/a&gt;コアコンセプトガイドで詳細に説明）。</target>
        </trans-unit>
        <trans-unit id="febb6785a1443da09d12c14f6b4fc04880e72315" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to connect to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; to log in or record test runs.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;../dashboard/introduction&quot;&gt;ダッシュボードサービス&lt;/a&gt;に接続して、ログインしたり、テストの実行を記録したりできません。</target>
        </trans-unit>
        <trans-unit id="031f5b422de01b60e0479e8e321945c6bf4e10ea" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to load web pages besides &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">サイプレスは &lt;code&gt;localhost&lt;/code&gt; 以外のWebページをロードできません。</target>
        </trans-unit>
        <trans-unit id="5ecc1917b985f6084f8df6dd1f46528c5b586781" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to warn you if your &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t available.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;baseUrl&lt;/code&gt; &lt;/a&gt;が利用できない場合、警告を出すことができません。</target>
        </trans-unit>
        <trans-unit id="75c2d8e90c94c986618f0cc3be1cee17c5de3951" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t resolve your commands until all of its assertions pass.</source>
          <target state="translated">サイプレスは、すべてのアサーションがパスするまでコマンドを解決しません。</target>
        </trans-unit>
        <trans-unit id="4fe3fb25bc32272d746a39562d1491cf3cb3c322" translate="yes" xml:space="preserve">
          <source>Cypress wraps all DOM queries with robust retry-and-timeout logic that better suits how real web apps work. We trade a minor change in how we find DOM elements for a major stability upgrade to all of our tests. Banishing flake for good!</source>
          <target state="translated">Cypress は、すべての DOM クエリを、実際のウェブアプリの動作に適した堅牢なリトライとタイムアウトのロジックでラップします。私たちは、DOM 要素の見つけ方を少し変更して、すべてのテストの安定性を大幅にアップグレードしました。永久にフレークを追放します。</target>
        </trans-unit>
        <trans-unit id="4100350f85b3c001978fb5bd18e2b8283720ba94" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo; internal &lt;code&gt;babel&lt;/code&gt; will no longer attempt to load your project&amp;rsquo;s &lt;code&gt;.babelrc&lt;/code&gt;. This helps avoid potential version conflicts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/312&quot;&gt;#312&lt;/a&gt;.</source>
          <target state="translated">サイプレスの内部 &lt;code&gt;babel&lt;/code&gt; は、プロジェクトの &lt;code&gt;.babelrc&lt;/code&gt; をロードしようとしなくなります。これにより、潜在的なバージョンの競合を回避できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/312&quot;&gt;＃312を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8f2db94bca79e7029cf2807d70ac5b3241fdde73" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo; parallelization strategy is file-based, so in order to utilize parallelization, your tests will need to be split across separate files.</source>
          <target state="translated">サイプレスの並列化戦略はファイルベースであるため、並列化を利用するには、テストを個別のファイルに分割する必要があります。</target>
        </trans-unit>
        <trans-unit id="abc99c30c06bda705ceec845c46d4a4e18c68fe2" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo;s APIs are built very differently from what you&amp;rsquo;re likely used to: but these design patterns are incredibly intentional. We&amp;rsquo;ll go into more detail later in this guide.</source>
          <target state="translated">サイプレスのAPIは、これまで使用していたものとは大きく異なりますが、これらのデザインパターンは非常に意図的なものです。このガイドの後半で詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="9a2cdd4f3bf1d8436b31a761930ca523a7747615" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo;s recognition of websites attempting framebusting has been updated to include framebusting code wrapped within &lt;code&gt;()&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3267&quot;&gt;#3267&lt;/a&gt;</source>
          <target state="translated">フレームバスティングを試みるWebサイトのサイプレスの認識が更新され、 &lt;code&gt;()&lt;/code&gt; でラップされたフレームバスティングコードが含まれるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3267&quot;&gt;＃3267&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66b17926d61640ed32ee971542023387239ac913" translate="yes" xml:space="preserve">
          <source>Cypress.$</source>
          <target state="translated">Cypress.$</target>
        </trans-unit>
        <trans-unit id="edf054799fd9a27e698e06bfb5c686d331620c52" translate="yes" xml:space="preserve">
          <source>Cypress.$ vs. cy.$$</source>
          <target state="translated">Cypress.$ vs.cy.$$</target>
        </trans-unit>
        <trans-unit id="189b5b340dd09a196c6d1da1bb40bed28e40e664" translate="yes" xml:space="preserve">
          <source>Cypress.Blob</source>
          <target state="translated">Cypress.Blob</target>
        </trans-unit>
        <trans-unit id="c1f7c100ebfa53ec89fd0852dc1ef6a6e5194998" translate="yes" xml:space="preserve">
          <source>Cypress.Cookies</source>
          <target state="translated">Cypress.Cookies</target>
        </trans-unit>
        <trans-unit id="bc363da76edadf66791aa9b232b5d879f34a7417" translate="yes" xml:space="preserve">
          <source>Cypress.Promise</source>
          <target state="translated">Cypress.Promise</target>
        </trans-unit>
        <trans-unit id="5ce7498b0244c0b2e293007e8df6457394962f77" translate="yes" xml:space="preserve">
          <source>Cypress.Screenshot</source>
          <target state="translated">Cypress.Screenshot</target>
        </trans-unit>
        <trans-unit id="e3f31cf625c64e519992fd9a557160bf7aacd536" translate="yes" xml:space="preserve">
          <source>Cypress.SelectorPlayground</source>
          <target state="translated">Cypress.SelectorPlayground</target>
        </trans-unit>
        <trans-unit id="34ae4903acad6585ae7e38b834b9236b5a51c37a" translate="yes" xml:space="preserve">
          <source>Cypress.Server</source>
          <target state="translated">Cypress.Server</target>
        </trans-unit>
        <trans-unit id="54d6f336939dfac4936db7a675545d1c454be51c" translate="yes" xml:space="preserve">
          <source>Cypress._</source>
          <target state="translated">Cypress._</target>
        </trans-unit>
        <trans-unit id="38aee7ce60c3cf0bfdbe493333480f2fc07f7dec" translate="yes" xml:space="preserve">
          <source>Cypress.addParentCommand() / Cypress.addDualCommand() / Cypress.addChildCommand() has been removed and replaced by Cypress.Commands.add()</source>
          <target state="translated">Cypress.addParentCommand()/Cypress.addDualCommand()/Cypress.addChildCommand()が削除され、Cypress.Commands.add()に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="8962d721dd9c7ac73251a37f00707f0c4fb16fb3" translate="yes" xml:space="preserve">
          <source>Cypress.arch</source>
          <target state="translated">Cypress.arch</target>
        </trans-unit>
        <trans-unit id="3be6d8c117d53974fe7883c45665db273d8130af" translate="yes" xml:space="preserve">
          <source>Cypress.browser</source>
          <target state="translated">Cypress.browser</target>
        </trans-unit>
        <trans-unit id="ae2b6d33ccd03711ee320fd83db92c1e20b462e4" translate="yes" xml:space="preserve">
          <source>Cypress.config</source>
          <target state="translated">Cypress.config</target>
        </trans-unit>
        <trans-unit id="718c9831c14fdf0f554ae6c92dfd790738648c97" translate="yes" xml:space="preserve">
          <source>Cypress.dom</source>
          <target state="translated">Cypress.dom</target>
        </trans-unit>
        <trans-unit id="e78d83f61d20ce8db3d99c52f7373d855d7162e6" translate="yes" xml:space="preserve">
          <source>Cypress.env</source>
          <target state="translated">Cypress.env</target>
        </trans-unit>
        <trans-unit id="389cf8bdebb3061a2da7f5b64c6500609c23c4f2" translate="yes" xml:space="preserve">
          <source>Cypress.isBrowser</source>
          <target state="translated">Cypress.isBrowser</target>
        </trans-unit>
        <trans-unit id="3f3a3836fb4094ee807d24662de168188d477d60" translate="yes" xml:space="preserve">
          <source>Cypress.isCy</source>
          <target state="translated">Cypress.isCy</target>
        </trans-unit>
        <trans-unit id="872e4ebcf7f8506b760930988f46ac8a5cfc904e" translate="yes" xml:space="preserve">
          <source>Cypress.log</source>
          <target state="translated">Cypress.log</target>
        </trans-unit>
        <trans-unit id="f9ed79a62532751aaf5257c1c6e3e389aa049fc8" translate="yes" xml:space="preserve">
          <source>Cypress.log()</source>
          <target state="translated">Cypress.log()</target>
        </trans-unit>
        <trans-unit id="13cbbc294769af7e07d4f4e358bab65f54aece6d" translate="yes" xml:space="preserve">
          <source>Cypress.minimatch</source>
          <target state="translated">Cypress.minimatch</target>
        </trans-unit>
        <trans-unit id="1378324e731b82bcc517e23f5825080965e600a0" translate="yes" xml:space="preserve">
          <source>Cypress.moment</source>
          <target state="translated">Cypress.moment</target>
        </trans-unit>
        <trans-unit id="efd21062160ac9c7215a8d85d8e0bf925f907e97" translate="yes" xml:space="preserve">
          <source>Cypress.platform</source>
          <target state="translated">Cypress.platform</target>
        </trans-unit>
        <trans-unit id="65bb8ad05023ed340ea18db3a543b83d5a06774d" translate="yes" xml:space="preserve">
          <source>Cypress.sinon</source>
          <target state="translated">Cypress.sinon</target>
        </trans-unit>
        <trans-unit id="ea4b110b0b641df79aff5ef4583b701477ded5a5" translate="yes" xml:space="preserve">
          <source>Cypress.spec</source>
          <target state="translated">Cypress.spec</target>
        </trans-unit>
        <trans-unit id="8b78be8c41500c1cc7b574e782c821c439f2705b" translate="yes" xml:space="preserve">
          <source>Cypress.version</source>
          <target state="translated">Cypress.version</target>
        </trans-unit>
        <trans-unit id="9dbaf1b497f642fc5077a00743bd4c592254a2cf" translate="yes" xml:space="preserve">
          <source>CypressError: Timed out retrying: Expected to find element: &amp;lsquo;&amp;hellip;&amp;rsquo;, but never found it. Queried from element: &amp;lt;&amp;hellip;&amp;gt;</source>
          <target state="translated">CypressError：再試行のタイムアウト：要素 '...'が見つかるはずですが、見つかりませんでした。要素からクエリ：&amp;lt;&amp;hellip;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="806b2ff53cd2bfa7527e0fceb87c041ecaccb1f3" translate="yes" xml:space="preserve">
          <source>DOM Elements</source>
          <target state="translated">DOM 要素</target>
        </trans-unit>
        <trans-unit id="46a30029edb9f134295b2bdef3e55f483f2e18a8" translate="yes" xml:space="preserve">
          <source>DOM commands which can retry now correctly support &lt;code&gt;{timeout: num}&lt;/code&gt; options which will raise the timeout beyond the standard &lt;code&gt;commandTimeout&lt;/code&gt; rom &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">再試行可能なDOMコマンドが &lt;code&gt;{timeout: num}&lt;/code&gt; オプションを正しくサポートするようになり、タイムアウトが標準の &lt;code&gt;commandTimeout&lt;/code&gt; rom &lt;code&gt;cypress.json&lt;/code&gt; を超えます。</target>
        </trans-unit>
        <trans-unit id="0550ac43b754afc13499c39a83489992e4a0f17d" translate="yes" xml:space="preserve">
          <source>DOM element</source>
          <target state="translated">DOM要素</target>
        </trans-unit>
        <trans-unit id="f873a1aac119c9afd1611e5c7de8d7ea8b257520" translate="yes" xml:space="preserve">
          <source>DOM state</source>
          <target state="translated">DOM状態</target>
        </trans-unit>
        <trans-unit id="e897a6e6446020dfb7ef098df202bcc255e30e9c" translate="yes" xml:space="preserve">
          <source>Dangling state is your friend:</source>
          <target state="translated">ぶら下がり状態はお友達です。</target>
        </trans-unit>
        <trans-unit id="d87f47b47e4d5794d53fe0734c49417bd046cde0" translate="yes" xml:space="preserve">
          <source>Dashboard</source>
          <target state="translated">Dashboard</target>
        </trans-unit>
        <trans-unit id="d76039c62c0c0760db5d9e7f5e49044f82b0485b" translate="yes" xml:space="preserve">
          <source>Dashboard Service</source>
          <target state="translated">ダッシュボードサービス</target>
        </trans-unit>
        <trans-unit id="170b64341d044d8b026478c6319fd302d29b2fdc" translate="yes" xml:space="preserve">
          <source>Dashboard redesign</source>
          <target state="translated">ダッシュボードの再設計</target>
        </trans-unit>
        <trans-unit id="160d689ae355cbd067de0a3700069f34acfbb9f2" translate="yes" xml:space="preserve">
          <source>Date Inputs</source>
          <target state="translated">日付入力</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="9a0e7dc97fa6276fd01e10ae6394c1eb8228de5e" translate="yes" xml:space="preserve">
          <source>Debug Tests</source>
          <target state="translated">デバッグテスト</target>
        </trans-unit>
        <trans-unit id="caff9ed2c3b1a608de7ce91dc511ac835a257f72" translate="yes" xml:space="preserve">
          <source>Debug just like you always do</source>
          <target state="translated">いつものようにデバッグ</target>
        </trans-unit>
        <trans-unit id="8df5e0f04e3242a95995ef4f5f6b88cd9f8c115a" translate="yes" xml:space="preserve">
          <source>Debug logs in the browser</source>
          <target state="translated">ブラウザのデバッグログ</target>
        </trans-unit>
        <trans-unit id="d36ec7235f19d642416fab523affd33299a76f5b" translate="yes" xml:space="preserve">
          <source>Debug the moment a test fails</source>
          <target state="translated">テストが失敗したときのデバッグ</target>
        </trans-unit>
        <trans-unit id="2582a032b66fb5fa3c7ff1b5cdce14c54e2e45d1" translate="yes" xml:space="preserve">
          <source>Debuggability</source>
          <target state="translated">Debuggability</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="18d225a83f7cd5b7c354d6876e5542ec3fee2ac2" translate="yes" xml:space="preserve">
          <source>Debugging commands</source>
          <target state="translated">デバッグコマンド</target>
        </trans-unit>
        <trans-unit id="359646351172857a2209695ce7e529c3651364e7" translate="yes" xml:space="preserve">
          <source>Debugging tests</source>
          <target state="translated">デバッグテスト</target>
        </trans-unit>
        <trans-unit id="fdb2fb41843843a2f3f6412acbde67da5de89b98" translate="yes" xml:space="preserve">
          <source>Debugging will be turned on until you explicitly turn it off.</source>
          <target state="translated">デバッグは明示的にオフにするまでオンになります。</target>
        </trans-unit>
        <trans-unit id="ccba18044ef6b943060a02194e24763943b748cc" translate="yes" xml:space="preserve">
          <source>Dedicated file just for environment variables.</source>
          <target state="translated">環境変数専用のファイル</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="002755c76d6ad9dbc7b8957cb1d21b29856bd9b1" translate="yes" xml:space="preserve">
          <source>Default Assertions</source>
          <target state="translated">デフォルトのアサーション</target>
        </trans-unit>
        <trans-unit id="d2b8594d4d7d046a39912315ba4f5c50bb8654e6" translate="yes" xml:space="preserve">
          <source>Default Encoding</source>
          <target state="translated">デフォルトのエンコーディング</target>
        </trans-unit>
        <trans-unit id="54e853e380fbb256af90f1b6701ddb337a923884" translate="yes" xml:space="preserve">
          <source>Default Values</source>
          <target state="translated">デフォルト値</target>
        </trans-unit>
        <trans-unit id="816c6ed867c46778e2c5120dd4115f09bf0fcfa6" translate="yes" xml:space="preserve">
          <source>Default file existence assertion</source>
          <target state="translated">デフォルトのファイル存在アサーション</target>
        </trans-unit>
        <trans-unit id="f62121ead15cd30f91da94221ba3e0061cb6d766" translate="yes" xml:space="preserve">
          <source>Default height in pixels for the application under tests&amp;rsquo; viewport (Override with &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command)</source>
          <target state="translated">テスト中のアプリケーションのデフォルトの高さ（ピクセル&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt;コマンドでオーバーライド）</target>
        </trans-unit>
        <trans-unit id="20d3505c9e34e3cf3574ca112bb4b9d4cabccb33" translate="yes" xml:space="preserve">
          <source>Default sizing</source>
          <target state="translated">デフォルトのサイジング</target>
        </trans-unit>
        <trans-unit id="6c152d7b3d697c79123206cbb3b89719b8bc6948" translate="yes" xml:space="preserve">
          <source>Default width in pixels for the application under tests&amp;rsquo; viewport. (Override with &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command)</source>
          <target state="translated">テスト対象のアプリケーションのビューポートのデフォルトの幅（ピクセル単位）。（&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt;コマンドでオーバーライド）</target>
        </trans-unit>
        <trans-unit id="428819bf9e83cebda50efafb08cd2534c1583949" translate="yes" xml:space="preserve">
          <source>Defaults</source>
          <target state="translated">Defaults</target>
        </trans-unit>
        <trans-unit id="bf1be2b7ad07bae2fe92475d10173eb638774def" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definition</target>
        </trans-unit>
        <trans-unit id="0f6d2dd789e22cb155c7072913772227f42e5717" translate="yes" xml:space="preserve">
          <source>Delay after each keypress</source>
          <target state="translated">各キープレス後のディレイ</target>
        </trans-unit>
        <trans-unit id="1494a9bc47eade4e713274d7308e8e61ac3da965" translate="yes" xml:space="preserve">
          <source>Delay for stubbed responses (in ms)</source>
          <target state="translated">スタブ応答の遅延 (単位:ms)</target>
        </trans-unit>
        <trans-unit id="6efc7502f2a86ff722fdd0112fb1115d4b074b07" translate="yes" xml:space="preserve">
          <source>Delaying a response</source>
          <target state="translated">レスポンスを遅らせる</target>
        </trans-unit>
        <trans-unit id="33be56c36fa5e38e5e688193ca7f6f702b826f70" translate="yes" xml:space="preserve">
          <source>Delete Org</source>
          <target state="translated">組織の削除</target>
        </trans-unit>
        <trans-unit id="420e6c8542560092e7fc39bbeb23e047d89d5246" translate="yes" xml:space="preserve">
          <source>Delete Project</source>
          <target state="translated">プロジェクトの削除</target>
        </trans-unit>
        <trans-unit id="3b1305de44f5d95c0a738507026058e37778d4e9" translate="yes" xml:space="preserve">
          <source>Delete everything in the &lt;code&gt;cy&lt;/code&gt; folder</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; フォルダ内のすべてを削除します</target>
        </trans-unit>
        <trans-unit id="2700d851334adc622290d4f549953756d2c513dc" translate="yes" xml:space="preserve">
          <source>Delete or rename any policy keys found. &lt;em&gt;Make sure to back up your registry before making any changes.&lt;/em&gt;</source>
          <target state="translated">見つかったポリシーキーを削除または名前変更します。&lt;em&gt;変更を行う前に、必ずレジストリをバックアップしてください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9746bd7b8996d19acab4816d5dec7e68b572f1a" translate="yes" xml:space="preserve">
          <source>Delete organization</source>
          <target state="translated">組織の削除</target>
        </trans-unit>
        <trans-unit id="af1456f256eb207ff5bde5300956b6698a8691f3" translate="yes" xml:space="preserve">
          <source>Delete project</source>
          <target state="translated">プロジェクトの削除</target>
        </trans-unit>
        <trans-unit id="0af4affe8515cf0856411712afe2f0527747a5de" translate="yes" xml:space="preserve">
          <source>Delete projects</source>
          <target state="translated">プロジェクトの削除</target>
        </trans-unit>
        <trans-unit id="feb33acc4731ff34926d72c31d06392b91d753e7" translate="yes" xml:space="preserve">
          <source>Delete record key</source>
          <target state="translated">レコードキーの削除</target>
        </trans-unit>
        <trans-unit id="92c32160a9388fa88af4b8a22260735c7b9003f6" translate="yes" xml:space="preserve">
          <source>Delete the recorded video if the spec passed</source>
          <target state="translated">仕様に合格した場合は、録画した動画を削除します。</target>
        </trans-unit>
        <trans-unit id="fcbc0dabff7727d2a87aae3bdba3f6bf52d70cc0" translate="yes" xml:space="preserve">
          <source>Deletes character to the left of the cursor</source>
          <target state="translated">カーソルの左側の文字を削除します。</target>
        </trans-unit>
        <trans-unit id="c34fdc5b502ecda0c1ed651ed848ae26646b39d6" translate="yes" xml:space="preserve">
          <source>Deletes character to the right of the cursor</source>
          <target state="translated">カーソルの右側の文字を削除します。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bb7f45f4c64879fbbc128a63557b3980aa0c08b7" translate="yes" xml:space="preserve">
          <source>Depending on how your application is built - it&amp;rsquo;s likely that your web application is going to be affected and controlled by the server.</source>
          <target state="translated">アプリケーションの構築方法によっては、Webアプリケーションがサーバーによって影響を受け、制御される可能性があります。</target>
        </trans-unit>
        <trans-unit id="62b3e653f740f4c749bb60f9032135226fe2bca4" translate="yes" xml:space="preserve">
          <source>Depending on which CI provider you use, you may need a config file. You&amp;rsquo;ll want to refer to your CI provider&amp;rsquo;s documentation to know where to add the commands to install and run Cypress. For more configuration examples check out our &lt;a href=&quot;#Examples&quot;&gt;examples&lt;/a&gt;.</source>
          <target state="translated">使用するCIプロバイダーによっては、構成ファイルが必要になる場合があります。サイプレスをインストールして実行するためのコマンドを追加する場所を知るには、CIプロバイダーのドキュメントを参照する必要があります。より多くの設定例については、当社のチェックアウト&lt;a href=&quot;#Examples&quot;&gt;の例を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c2d93153fa250fddf0385d9f74ce9c2c826d8d1" translate="yes" xml:space="preserve">
          <source>Depends</source>
          <target state="translated">Depends</target>
        </trans-unit>
        <trans-unit id="50abff28ab37908b3cf44d9dd0633b6d4b22b266" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;code&gt;Cypress.command&lt;/code&gt;, instead use &lt;code&gt;Cypress.Log.command&lt;/code&gt; to output a Command Log. Updated scaffolding on new projects to reflect this change.</source>
          <target state="translated">非推奨の &lt;code&gt;Cypress.command&lt;/code&gt; 。代わりに &lt;code&gt;Cypress.Log.command&lt;/code&gt; を使用してコマンドログを出力します。この変更を反映するために、新しいプロジェクトの足場を更新しました。</target>
        </trans-unit>
        <trans-unit id="ba54f6b3c94f4e85ea94aed4682b686d83030e3f" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;code&gt;failOnStatus&lt;/code&gt; property for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and renamed to &lt;code&gt;failOnStatusCode&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/323&quot;&gt;#323&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;failOnStatus&lt;/code&gt; プロパティを廃止し、failOnStatusCodeに名前を変更し &lt;code&gt;failOnStatusCode&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/323&quot;&gt;＃323を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="66770177d31590d18f83f5f18a84734f24f8f4e6" translate="yes" xml:space="preserve">
          <source>Deprecated all &lt;em&gt;Command Options&lt;/em&gt;. You will see a very nice and simple error message explaining how to convert these to assertions.</source>
          <target state="translated">すべての&lt;em&gt;コマンドオプションを非&lt;/em&gt;推奨にしました。これらをアサーションに変換する方法を説明する非常に素晴らしくシンプルなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="cf0084835e26a00ac74a24b9e2202ccebf7aef5f" translate="yes" xml:space="preserve">
          <source>Deprecated the undocumented &lt;code&gt;cy.agents&lt;/code&gt; function, but it will continue to work and will be officially removed later.</source>
          <target state="translated">ドキュメントに記載されていない &lt;code&gt;cy.agents&lt;/code&gt; 関数は非推奨になりましたが、引き続き機能し、後で正式に削除されます。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="4455c33618f7e8493a6b401536a49ec647474555" translate="yes" xml:space="preserve">
          <source>Desktop App debug logs no longer sort in the wrong direction.</source>
          <target state="translated">デスクトップアプリのデバッグログが間違った方向にソートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="988933533a2710eb7a91fcde76623e318e7fbdb7" translate="yes" xml:space="preserve">
          <source>Desktop windows that are transparent no longer lose their box shadow.</source>
          <target state="translated">透明になったデスクトップウィンドウは、ボックスの影を失わなくなりました。</target>
        </trans-unit>
        <trans-unit id="c524231967ba63ed27a4047efd69edcab3903bde" translate="yes" xml:space="preserve">
          <source>Despite the dozens of assertions Cypress makes available to you, sometimes the best test may make no assertions at all! How can this be? Aren&amp;rsquo;t assertions a basic part of testing?</source>
          <target state="translated">サイプレスが数十のアサーションを提供しているにもかかわらず、最良のテストではアサーションがまったく行われない場合があります！どうすればいいの？アサーションはテストの基本的な部分ではありませんか？</target>
        </trans-unit>
        <trans-unit id="43fd0711ccfe2275d37466226b0233e39e3bbc7f" translate="yes" xml:space="preserve">
          <source>Destination of Cypress binary that's downloaded and installed</source>
          <target state="translated">ダウンロードしてインストールしたCypressバイナリの保存先</target>
        </trans-unit>
        <trans-unit id="e07694df1980cebba49bc3ba950d5e71cf4c51ee" translate="yes" xml:space="preserve">
          <source>Detailed Logs</source>
          <target state="translated">詳細ログ</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="fb83fe74a2f1842353ec1873c1964e310a83b202" translate="yes" xml:space="preserve">
          <source>Details of each run are displayed including:</source>
          <target state="translated">を含む各走行の詳細が表示されます。</target>
        </trans-unit>
        <trans-unit id="bb7d191dd189fdfd0f18f9c2d05ca9e3ea5b13e0" translate="yes" xml:space="preserve">
          <source>Details of the run, including the project config, details about the browser and system, and the specs that will be run.</source>
          <target state="translated">プロジェクトの設定、ブラウザやシステムの詳細、実行するスペックなどの詳細。</target>
        </trans-unit>
        <trans-unit id="9ea2bc7838653962322403e558ce6613ae145664" translate="yes" xml:space="preserve">
          <source>Details of the spec file&amp;rsquo;s results, including numbers of passes/failures/etc and details on the tests themselves.</source>
          <target state="translated">合格/不合格などの数やテスト自体の詳細など、スペックファイルの結果の詳細。</target>
        </trans-unit>
        <trans-unit id="555cf46ca85f56bbbbe3bc74c3062bf6293a590f" translate="yes" xml:space="preserve">
          <source>Details of the spec file, including the following properties:</source>
          <target state="translated">以下のプロパティを含むスペックファイルの詳細。</target>
        </trans-unit>
        <trans-unit id="88d5d989139784b14dd3b3fa8b5147b2b7b5f797" translate="yes" xml:space="preserve">
          <source>Detection of installed browsers has been improved. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/511&quot;&gt;#511&lt;/a&gt;.</source>
          <target state="translated">インストールされているブラウザの検出が改善されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/511&quot;&gt;＃511を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="db851310f56d8f0ff1714344c6eb7c7fd6fb1d1b" translate="yes" xml:space="preserve">
          <source>Determine a unique selector for an element.</source>
          <target state="translated">要素の一意のセレクタを決定します。</target>
        </trans-unit>
        <trans-unit id="7bb199653d3610c7decb0d490dd2981c63993abc" translate="yes" xml:space="preserve">
          <source>Determines the order of preference for which selector is chosen for the element.</source>
          <target state="translated">要素に選択されるセレクタの優先順位を決定します。</target>
        </trans-unit>
        <trans-unit id="c659a411024775bc5400ece139ed7c5058937b1d" translate="yes" xml:space="preserve">
          <source>Development Tools</source>
          <target state="translated">開発ツール</target>
        </trans-unit>
        <trans-unit id="880a74266b48446f72c4dd1688a1a3b42f91fdb9" translate="yes" xml:space="preserve">
          <source>Did you know that you can control how your custom commands appear in the Command Log? Read more about &lt;a href=&quot;#Command-Logging&quot;&gt;Command Logging&lt;/a&gt;.</source>
          <target state="translated">カスタムコマンドがコマンドログに表示される方法を制御できることをご存知ですか？&lt;a href=&quot;#Command-Logging&quot;&gt;コマンドロギングの&lt;/a&gt;詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="29856a31b3d2a72b0f83ec3a5568909de02804cb" translate="yes" xml:space="preserve">
          <source>Did you know that you can use &lt;a href=&quot;#Multiple-Reporters&quot;&gt;multiple reporters&lt;/a&gt; with Mocha?</source>
          <target state="translated">Mochaで&lt;a href=&quot;#Multiple-Reporters&quot;&gt;複数のレポーター&lt;/a&gt;を使用できることをご存知ですか？</target>
        </trans-unit>
        <trans-unit id="5103b3848b34841b08aca075bb9ffb66a229c5d2" translate="yes" xml:space="preserve">
          <source>Difference between cy.spy() and cy.stub()</source>
          <target state="translated">cy.spy()と cy.stub()の違い</target>
        </trans-unit>
        <trans-unit id="af858e1241391fd569b50d644bb00507f74f4034" translate="yes" xml:space="preserve">
          <source>Differences</source>
          <target state="translated">Differences</target>
        </trans-unit>
        <trans-unit id="9f5371feae5752de4cf49862d8b24d4abe4ebb1c" translate="yes" xml:space="preserve">
          <source>Direct download</source>
          <target state="translated">直接ダウンロード</target>
        </trans-unit>
        <trans-unit id="fd8e45bac7d354790ec0a82d8a61341bf8acd055" translate="yes" xml:space="preserve">
          <source>Direction</source>
          <target state="translated">Direction</target>
        </trans-unit>
        <trans-unit id="f36e1d9fb25e334cc42e35e16df46e7fa41007dc" translate="yes" xml:space="preserve">
          <source>Directories within specs whose names contain &lt;code&gt;.&lt;/code&gt; are now correctly read as directories instead of spec files within the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2423&quot;&gt;#2423&lt;/a&gt;.</source>
          <target state="translated">名前にが含まれるスペック内のディレクトリ &lt;code&gt;.&lt;/code&gt; テストランナー内のスペックファイルではなく、ディレクトリとして正しく読み取られるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2423&quot;&gt;＃2423を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="398dcecfd4c36348d8d1fb304911cd0747f9e0d4" translate="yes" xml:space="preserve">
          <source>Disability</source>
          <target state="translated">Disability</target>
        </trans-unit>
        <trans-unit id="ed8e3cd3ce02e4410e6e12ca08ee83ae07f21784" translate="yes" xml:space="preserve">
          <source>Disable PR comments</source>
          <target state="translated">PRコメントを無効にする</target>
        </trans-unit>
        <trans-unit id="1146eac3b93e81381a07b19dcc792dd0463a1126" translate="yes" xml:space="preserve">
          <source>Disable logging to Command Log</source>
          <target state="translated">コマンドログへのロギングを無効にする</target>
        </trans-unit>
        <trans-unit id="90f205a7a44758815d3eeeb446e126d244dd81bc" translate="yes" xml:space="preserve">
          <source>Disable screenshots on run failures</source>
          <target state="translated">実行失敗時のスクリーンショットを無効にする</target>
        </trans-unit>
        <trans-unit id="5c8870696e9603555f5da0a578f2efe8889465bb" translate="yes" xml:space="preserve">
          <source>Disable status checks</source>
          <target state="translated">ステータスチェックを無効にする</target>
        </trans-unit>
        <trans-unit id="fd1c40c8e15a5906c64a3c1c5ea682eef54e14c7" translate="yes" xml:space="preserve">
          <source>Disabled Barriers</source>
          <target state="translated">障害者バリア</target>
        </trans-unit>
        <trans-unit id="8101160ef461e1039c24259bf2164be36683138c" translate="yes" xml:space="preserve">
          <source>Disables &amp;lsquo;Autofill forms and passwords&amp;rsquo;.</source>
          <target state="translated">「フォームとパスワードの自動入力」を無効にします。</target>
        </trans-unit>
        <trans-unit id="9b6a36172f19272186e514e359c9b8818b4e2b3c" translate="yes" xml:space="preserve">
          <source>Disables &amp;lsquo;Saving passwords&amp;rsquo;.</source>
          <target state="translated">「パスワードの保存」を無効にします。</target>
        </trans-unit>
        <trans-unit id="742385a8d2de3fd9fd56746a5254ec1868941389" translate="yes" xml:space="preserve">
          <source>Disables asking to become your primary browser.</source>
          <target state="translated">プライマリブラウザになるように要求することを無効にします。</target>
        </trans-unit>
        <trans-unit id="8820d327186eb9d36380d618891e1b140c1206c6" translate="yes" xml:space="preserve">
          <source>Disables background and renderer throttling.</source>
          <target state="translated">背景とレンダラーのスロットリングを無効にします。</target>
        </trans-unit>
        <trans-unit id="fdd97241499586fd718d26330dec9f95b9a31c0e" translate="yes" xml:space="preserve">
          <source>Disables background network traffic.</source>
          <target state="translated">バックグラウンドのネットワークトラフィックを無効にします。</target>
        </trans-unit>
        <trans-unit id="e78e3acd1f45b16a6377ece7fb25d3353f6d2137" translate="yes" xml:space="preserve">
          <source>Disables device discovery notifications.</source>
          <target state="translated">デバイス発見通知を無効にします。</target>
        </trans-unit>
        <trans-unit id="bc575ad94c2c5e877021630cd9e2523adb5baee0" translate="yes" xml:space="preserve">
          <source>Disables language translations.</source>
          <target state="translated">言語翻訳を無効にします。</target>
        </trans-unit>
        <trans-unit id="b4a57f31533828350e954cee620711fac5c8534c" translate="yes" xml:space="preserve">
          <source>Disables prompts requesting permission to use devices like cameras or mics</source>
          <target state="translated">カメラやマイクなどのデバイスの使用許可を要求するプロンプトを無効にします。</target>
        </trans-unit>
        <trans-unit id="42c5847cb77a853d027e61065fb060f5e06690de" translate="yes" xml:space="preserve">
          <source>Disables restoring sessions.</source>
          <target state="translated">セッションの復元を無効にします。</target>
        </trans-unit>
        <trans-unit id="89814cefec4768db1bc31f96b05c4c237b94cc5d" translate="yes" xml:space="preserve">
          <source>Disables user gesture requirements for autoplaying videos.</source>
          <target state="translated">動画の自動再生に必要なユーザー ジェスチャーを無効にします。</target>
        </trans-unit>
        <trans-unit id="d5e790b8e1c07601668944e5511a4907e8441ef9" translate="yes" xml:space="preserve">
          <source>Disabling Highlights</source>
          <target state="translated">無効化のハイライト</target>
        </trans-unit>
        <trans-unit id="cc630477b97f37b5346d341b023abd94ebc8ee13" translate="yes" xml:space="preserve">
          <source>Disabling Web Security</source>
          <target state="translated">ウェブセキュリティを無効にする</target>
        </trans-unit>
        <trans-unit id="331f9316062110e44524709e54652398a146845a" translate="yes" xml:space="preserve">
          <source>Display an empty message when there is no commit information on recorded runs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1809&quot;&gt;#1809&lt;/a&gt;.</source>
          <target state="translated">記録された実行に関するコミット情報がない場合、空のメッセージを表示します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1809&quot;&gt;＃1809を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="02b9e351e3ff0d8e4c1c347bf7595c58700ffbfb" translate="yes" xml:space="preserve">
          <source>Display insecure content</source>
          <target state="translated">不安な内容を表示する</target>
        </trans-unit>
        <trans-unit id="840ffbdb7da30d2d58783c09ae67907da14db616" translate="yes" xml:space="preserve">
          <source>Display the Electron browser instead of running headlessly</source>
          <target state="translated">ヘッドレスで実行するのではなく、Electronブラウザを表示する</target>
        </trans-unit>
        <trans-unit id="cbd09492de4e095dd361539936a9df005a6751c3" translate="yes" xml:space="preserve">
          <source>Displaying a credit card form from Stripe or Braintree.</source>
          <target state="translated">ストライプやブレインツリーからのクレジットカードフォームの表示</target>
        </trans-unit>
        <trans-unit id="48a624a965703205f1185b4de304082897da096c" translate="yes" xml:space="preserve">
          <source>Displaying an embedded login form from Auth0.</source>
          <target state="translated">Auth0からの埋め込みログインフォームを表示しています。</target>
        </trans-unit>
        <trans-unit id="a111098f149be53fc23d11071083e7908b8b4f8c" translate="yes" xml:space="preserve">
          <source>Displays the command in the &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;Command log&lt;/a&gt;</source>
          <target state="translated">コマンドを&lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;コマンドログに&lt;/a&gt;表示します</target>
        </trans-unit>
        <trans-unit id="038bf304321f982eba52b2ec76a631d488e51344" translate="yes" xml:space="preserve">
          <source>Displays the command in the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;Command log&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;コマンドログに&lt;/a&gt;コマンドを表示します</target>
        </trans-unit>
        <trans-unit id="15734e80c1b9ba09cae5e65347e5fe8e74b0dd80" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;NOT&lt;/strong&gt; include protocol: &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;</source>
          <target state="translated">プロトコルを含め&lt;strong&gt;ないで&lt;/strong&gt;ください： &lt;code&gt;http://&lt;/code&gt; または &lt;code&gt;https://&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f15f0f7d9eda009d36ae894bba131f289eb8ee8" translate="yes" xml:space="preserve">
          <source>Do It Yourself</source>
          <target state="translated">自分でやる</target>
        </trans-unit>
        <trans-unit id="1311dea644b9dfc4fba9ad13c38b9e662d415f4a" translate="yes" xml:space="preserve">
          <source>Do a shift + click</source>
          <target state="translated">シフト+クリックをする</target>
        </trans-unit>
        <trans-unit id="27463dbe2fac87e1ae66eeb86a8f018f866cde9d" translate="yes" xml:space="preserve">
          <source>Do not error if element is not scrollable</source>
          <target state="translated">要素がスクロールできない場合はエラーにならない</target>
        </trans-unit>
        <trans-unit id="d2da93e42ef992541100a9e65c6ecf631b9d82d9" translate="yes" xml:space="preserve">
          <source>Do not forget that &lt;strong&gt;Cypress commands are async&lt;/strong&gt;!</source>
          <target state="translated">&lt;strong&gt;サイプレスのコマンドは非同期である&lt;/strong&gt;ことを忘れないでください！</target>
        </trans-unit>
        <trans-unit id="8b10ee7030fa005a21358e27e3bfe05066e85aa6" translate="yes" xml:space="preserve">
          <source>Do not use &lt;strong&gt;your UI&lt;/strong&gt; to login before each test.</source>
          <target state="translated">各テストの前に&lt;strong&gt;、UI&lt;/strong&gt;を使用してログインしないで&lt;strong&gt;ください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bf2b432b6b037e09ea6c21f51f82ecc54cd52fc6" translate="yes" xml:space="preserve">
          <source>Do you see the difference? We were able to login without needing to actually use our UI. This saves an enormous amount of time visiting the login page, filling out the username, password, and waiting for the server to redirect us &lt;em&gt;before every test&lt;/em&gt;.</source>
          <target state="translated">違いがわかりますか？UIを実際に使用しなくてもログインできました。これにより、ログインページにアクセスしてユーザー名とパスワードを入力し、サーバーが&lt;em&gt;すべてのテストの前&lt;/em&gt;にリダイレクトするのを待つ時間を大幅に節約できます。</target>
        </trans-unit>
        <trans-unit id="f10bd5b89bb2c4162f229df774ba62b09745264e" translate="yes" xml:space="preserve">
          <source>Do you see the problem here? This test is non-deterministic. The &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; will sometimes have the class &lt;code&gt;active&lt;/code&gt; and sometimes not. In &lt;strong&gt;most&lt;/strong&gt; cases, you cannot rely on the state of the DOM to determine what you should conditionally do.</source>
          <target state="translated">ここで問題がわかりますか？このテストは非決定的です。 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 、時にはクラスを持つことになり &lt;code&gt;active&lt;/code&gt; 、時にはません。では&lt;strong&gt;、ほとんどの&lt;/strong&gt;場合、あなたは条件付きで何をすべきかを決定するためにDOMの状態に依存することはできません。</target>
        </trans-unit>
        <trans-unit id="9d2998beff4e0d0f955bfa075992fe40291e784c" translate="yes" xml:space="preserve">
          <source>Do you see what happened?</source>
          <target state="translated">何が起きたか分かるか?</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="53048861edcc441aef057cfdcf1945349c9c8194" translate="yes" xml:space="preserve">
          <source>Docker images &amp;amp; CI examples</source>
          <target state="translated">DockerイメージとCIの例</target>
        </trans-unit>
        <trans-unit id="3ab45e6d7829b9766d6ff47e9b891e5f334be013" translate="yes" xml:space="preserve">
          <source>Docker images providing all the dependencies to run Cypress in CI including browsers.</source>
          <target state="translated">ブラウザを含むCIでCypressを実行するためのすべての依存関係を提供するDockerイメージ。</target>
        </trans-unit>
        <trans-unit id="010995167a9dd41a6de0709b079946d48321e082" translate="yes" xml:space="preserve">
          <source>Docs have been updated for &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; to reflect these changes.</source>
          <target state="translated">これらの変更を反映するために、&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; の&lt;/a&gt;ドキュメントが更新されました。</target>
        </trans-unit>
        <trans-unit id="005a47d2fb03a50731ae30b6c4044b3033fcb234" translate="yes" xml:space="preserve">
          <source>Document how to accept or reject project transfers &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1474&quot;&gt;#1474&lt;/a&gt;</source>
          <target state="translated">プロジェクトの転送を承認または拒否する方法を文書化する&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1474&quot;&gt;＃1474&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="fc0c182915c26250a85f0f9ed6247e647f87d451" translate="yes" xml:space="preserve">
          <source>Documentation Changes:</source>
          <target state="translated">ドキュメントの変更。</target>
        </trans-unit>
        <trans-unit id="759ad5947a51fcfec123db9f79d9f3a1619fb67a" translate="yes" xml:space="preserve">
          <source>Documented new &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; flag and rewrote advanced install instructions to be clearer in &lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt;Installing Cypress doc&lt;/a&gt;.</source>
          <target state="translated">新しい &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; フラグを文書化し、&lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt;サイプレスのドキュメントのインストール&lt;/a&gt;でより明確になるように高度なインストール手順を書き直しました。</target>
        </trans-unit>
        <trans-unit id="804124d142a9215ba3fe1c6d4f221b741dd75b1e" translate="yes" xml:space="preserve">
          <source>Does NOT match &lt;code&gt;*.google.com&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*.google.com&lt;/code&gt; と一致しません</target>
        </trans-unit>
        <trans-unit id="4933311284cb076566e3c8a210bb8b0e9c4cf5f7" translate="yes" xml:space="preserve">
          <source>Does not require any changes to files or configuration.</source>
          <target state="translated">ファイルや設定を変更する必要はありません。</target>
        </trans-unit>
        <trans-unit id="41360c43377352d15fbf538e7feff1d8c8cb6950" translate="yes" xml:space="preserve">
          <source>Does not submit a form if the &lt;code&gt;submit&lt;/code&gt; button is disabled.</source>
          <target state="translated">&lt;code&gt;submit&lt;/code&gt; ボタンが無効になっている場合、フォームを送信しません。</target>
        </trans-unit>
        <trans-unit id="f001f441c49973f9c075e2f6c0d84e1d9a67af81" translate="yes" xml:space="preserve">
          <source>Does not submit a form if there are multiple inputs and no &lt;code&gt;submit&lt;/code&gt; button.</source>
          <target state="translated">複数の入力があり、 &lt;code&gt;submit&lt;/code&gt; ボタンがない場合、フォームを送信しません。</target>
        </trans-unit>
        <trans-unit id="e76d1639df01aabfd04987b2f19edd4123d24766" translate="yes" xml:space="preserve">
          <source>Does the element have the &lt;code&gt;disabled&lt;/code&gt; attribute?</source>
          <target state="translated">要素には &lt;code&gt;disabled&lt;/code&gt; 属性がありますか？</target>
        </trans-unit>
        <trans-unit id="4be96ac94609c064d42c764ea5a2fbc70050b26f" translate="yes" xml:space="preserve">
          <source>Doing conditional testing adds a huge problem - that the test writer themselves are unsure what the given state will be. In those situations, the only reliable way to have accurate tests is to embed this dynamic state in a reliable and consistent way.</source>
          <target state="translated">条件付きテストを行うと、テストを書く側自身が与えられた状態がどうなるかわからないという大きな問題が発生します。このような状況では、正確なテストを行うための唯一の信頼できる方法は、この動的な状態を信頼性の高い一貫した方法で埋め込むことです。</target>
        </trans-unit>
        <trans-unit id="ff36de09bae56472140cf3d594198b57d33cd6f6" translate="yes" xml:space="preserve">
          <source>Doing it this way can be faster, more accurate, and more scalable.</source>
          <target state="translated">この方法で行うと、より速く、より正確に、よりスケーラブルになります。</target>
        </trans-unit>
        <trans-unit id="b05a117580caa2d7c9bdbddcffb9e0b8adaa3c84" translate="yes" xml:space="preserve">
          <source>Doing so enables you to &lt;strong&gt;block&lt;/strong&gt; and &lt;strong&gt;guard&lt;/strong&gt; Cypress by ensuring the state of descendants matches what you expect without needing to query them individually with regular Cypress DOM commands.</source>
          <target state="translated">そうすることで、通常のサイプレスDOMコマンドを使用して子孫を個別にクエリする必要なく、子孫の状態を期待どおりに一致させることにより、サイプレスを&lt;strong&gt;ブロック&lt;/strong&gt;および&lt;strong&gt;保護&lt;/strong&gt;できます。</target>
        </trans-unit>
        <trans-unit id="9252a916f17f66e91f0c1ddeb683a3b645b64409" translate="yes" xml:space="preserve">
          <source>Domain cookies are now proxied better. There&amp;rsquo;s still more work to do before they are 100% fixed but now most typical domain cookie scenarios should &amp;lsquo;just work&amp;rsquo;.</source>
          <target state="translated">ドメインのCookieがプロキシ化されるようになりました。100％修正される前にやらなければならないことがまだまだありますが、現在、ほとんどの一般的なドメインCookieシナリオは「そのまま」機能するはずです。</target>
        </trans-unit>
        <trans-unit id="29326ddd74116cd0ed38dea8b81437470812e7e7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t Stub Responses</source>
          <target state="translated">応答をスタブしないでください</target>
        </trans-unit>
        <trans-unit id="2440793f4d8df673a75dda05cd016806ceec833b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t click &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; links in your tests that navigate outside of your application. Likely this isn&amp;rsquo;t worth testing anyway. You should ask yourself: &lt;em&gt;What&amp;rsquo;s the point of clicking and going to another app?&lt;/em&gt; Likely all you care about is that the &lt;code&gt;href&lt;/code&gt; attribute matches what you expect. So make an assertion about that. You can see more strategies on testing anchor links &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;in our &amp;ldquo;Tab Handling and Links&amp;rdquo; example recipe&lt;/a&gt;.</source>
          <target state="translated">アプリケーションの外部に移動するテストの &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; リンクをクリックしないでください。おそらくこれはとにかくテストする価値はありません。あなたは自分自身に問いかけるべきです：&lt;em&gt;クリックして別のアプリに行く意味は何ですか？&lt;/em&gt;おそらくあなたが気にするのは、 &lt;code&gt;href&lt;/code&gt; 属性があなたが期待するものと一致することだけです。だからそれについて断言してください。アンカーリンクのテストに関するその他の戦略について&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;は、「タブの処理とリンク」のサンプルレシピ&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="f69247364224e2809c5dcd08d586bba0a61fc8ee" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t do things like:</source>
          <target state="translated">次のようなことはしないでください。</target>
        </trans-unit>
        <trans-unit id="c7d6ca3f177805335da2804d73621c40575900f1" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t feel obligated to pick just one method. It is common to use one strategy for local development but another when running in &lt;a href=&quot;continuous-integration&quot;&gt;CI&lt;/a&gt;.</source>
          <target state="translated">1つの方法だけを選択する義務があると感じないでください。ローカル開発には1つの戦略を使用するのが一般的ですが、&lt;a href=&quot;continuous-integration&quot;&gt;CIで&lt;/a&gt;実行する場合は別の戦略を使用します。</target>
        </trans-unit>
        <trans-unit id="fd86068b6f186471e5286c2d8319748d9d3c7620" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t target elements based on CSS attributes such as: &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;tag&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 、 &lt;code&gt;class&lt;/code&gt; 、 &lt;code&gt;tag&lt;/code&gt; などのCSS属性に基づいて要素をターゲティングしないでください</target>
        </trans-unit>
        <trans-unit id="4f73a89bbc9d1ed1248febd0f7e5feb866c8c4f5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t target elements that may change their &lt;code&gt;textContent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;textContent&lt;/code&gt; を変更する可能性のある要素をターゲットにしないでください</target>
        </trans-unit>
        <trans-unit id="9d84a04c4d5f60e53855b9d15ea8d64e9b6d294e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to start a web server from &lt;code&gt;cy.exec()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; からWebサーバーを起動しようとしないでください。</target>
        </trans-unit>
        <trans-unit id="c9f4dd2e19ba725998261c574c1138fbc781fc82" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to start a web server from within Cypress scripts. Read about &lt;a href=&quot;../references/best-practices#Web-Servers&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="translated">サイプレススクリプト内からWebサーバーを起動しないでください。こちらで&lt;a href=&quot;../references/best-practices#Web-Servers&quot;&gt;ベストプラクティス&lt;/a&gt;についてお読みください。</target>
        </trans-unit>
        <trans-unit id="7b86dfe1262cedb7f475d85819953d5d837183ad" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use your UI to build up state! It&amp;rsquo;s enormously slow, cumbersome, and unnecessary.</source>
          <target state="translated">UIを使用して状態を構築しないでください。これは非常に遅く、扱いにくく、不必要です。</target>
        </trans-unit>
        <trans-unit id="2ed8bdfb9c67a2aaa6a686292bc2d7f0c1e38b98" translate="yes" xml:space="preserve">
          <source>Double click all buttons found on the page</source>
          <target state="translated">ページにあるすべてのボタンをダブルクリックします。</target>
        </trans-unit>
        <trans-unit id="c88cbfe5f88b710f974a3548e61fa24cf8310085" translate="yes" xml:space="preserve">
          <source>Double click an anchor link</source>
          <target state="translated">アンカーリンクをダブルクリック</target>
        </trans-unit>
        <trans-unit id="e6e36e36ac2ae01d2cda0107c467d31648a64c69" translate="yes" xml:space="preserve">
          <source>Double click with key combinations</source>
          <target state="translated">キーの組み合わせでダブルクリック</target>
        </trans-unit>
        <trans-unit id="2a748246d4c2e3297ee23c0ec852f041e00c6479" translate="yes" xml:space="preserve">
          <source>Double-click a DOM element.</source>
          <target state="translated">DOM 要素をダブルクリックします。</target>
        </trans-unit>
        <trans-unit id="5c0285fa241de4bebad9da16f25ff89480e20ef5" translate="yes" xml:space="preserve">
          <source>Downgraded &lt;code&gt;parse-domain&lt;/code&gt; from 2.1.7 to 2.0.0 to avoid a regression released in &lt;code&gt;parse-domain&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="translated">格下げ &lt;code&gt;parse-domain&lt;/code&gt; にリリース回帰避けるために、2.1.7から2.0.0に &lt;code&gt;parse-domain&lt;/code&gt; 。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;＃3717&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fdc046382f0bac99e80bf6003b655106ec0c9b7" translate="yes" xml:space="preserve">
          <source>Download Cypress at latest version (platform auto-detected)</source>
          <target state="translated">最新版のCypressをダウンロード(プラットフォームは自動検出されます</target>
        </trans-unit>
        <trans-unit id="b98524a2f0e7d53a662d72dce710b24cc0dcdf47" translate="yes" xml:space="preserve">
          <source>Download Cypress for a specific platform and/or architecture</source>
          <target state="translated">特定のプラットフォームやアーキテクチャ用のCypressをダウンロード</target>
        </trans-unit>
        <trans-unit id="f2c8d0d2447b20ae7d8d9d08b342e860a278ad5a" translate="yes" xml:space="preserve">
          <source>Download Cypress with a specified version</source>
          <target state="translated">指定されたバージョンのCypressをダウンロード</target>
        </trans-unit>
        <trans-unit id="993c99b190aced0f3d6b471f5798820a143aa044" translate="yes" xml:space="preserve">
          <source>Download Cypress with a specified version and platform and/or architecture</source>
          <target state="translated">指定されたバージョン、プラットフォーム、アーキテクチャでCypressをダウンロードする</target>
        </trans-unit>
        <trans-unit id="9c0282356e7a69a174a3186273098d4472cbbea9" translate="yes" xml:space="preserve">
          <source>Download URLs</source>
          <target state="translated">ダウンロードURL</target>
        </trans-unit>
        <trans-unit id="42c7ab0b8b55bc8433ac41acb3a54a3b232832db" translate="yes" xml:space="preserve">
          <source>Download a PDF file</source>
          <target state="translated">PDFファイルをダウンロードする</target>
        </trans-unit>
        <trans-unit id="57771ee1491d17f3a369db0bd6694ea5fd2d0c1f" translate="yes" xml:space="preserve">
          <source>Download a file</source>
          <target state="translated">ファイルのダウンロード</target>
        </trans-unit>
        <trans-unit id="2cce924335c43260c9cfe380ded635166e962e15" translate="yes" xml:space="preserve">
          <source>Download specific Chrome version</source>
          <target state="translated">特定のChromeのバージョンをダウンロードする</target>
        </trans-unit>
        <trans-unit id="592191bc433379314714980c1eed899a4bb7877f" translate="yes" xml:space="preserve">
          <source>Downloads the Cypress binary though a mirror server</source>
          <target state="translated">ミラーサーバーからCypressバイナリをダウンロードする</target>
        </trans-unit>
        <trans-unit id="c0ea9dbe7ad5c10534189f39f164e8c765c4d655" translate="yes" xml:space="preserve">
          <source>Drag and Drop</source>
          <target state="translated">ドラッグ&amp;ドロップ</target>
        </trans-unit>
        <trans-unit id="b4d31820c40549826ef6dcceb8523192b3223ade" translate="yes" xml:space="preserve">
          <source>Drastically improved file watching on large projects with many tests. Instead of choking the CPU at nearly 100% indefinitely we now optimally watch the current working files for changes.</source>
          <target state="translated">多数のテストを伴う大規模プロジェクトでのファイル監視が大幅に改善されました。CPU を無期限にほぼ 100% で窒息させるのではなく、現在の作業ファイルの変更を最適に監視するようになりました。</target>
        </trans-unit>
        <trans-unit id="94be820e65bd3d316f5354bf4a4bcbc3169d6b52" translate="yes" xml:space="preserve">
          <source>Drastically simplified the architecture required for proxying.</source>
          <target state="translated">プロキシに必要なアーキテクチャを大幅に簡素化しました。</target>
        </trans-unit>
        <trans-unit id="7816c4fc585f04f97450ce41299c72605c8c18bc" translate="yes" xml:space="preserve">
          <source>Drone</source>
          <target state="translated">Drone</target>
        </trans-unit>
        <trans-unit id="49569d6757d9473c3967128a5f81feb530b037cd" translate="yes" xml:space="preserve">
          <source>Dual Commands</source>
          <target state="translated">デュアルコマンド</target>
        </trans-unit>
        <trans-unit id="99fbfd5e6265cea1e87f277219810a1bfefac857" translate="yes" xml:space="preserve">
          <source>Due to security upgrades, adding projects in previous versions will no longer work. Upgrade and everything should be okay.</source>
          <target state="translated">セキュリティアップグレードのため、以前のバージョンのプロジェクトを追加しても動作しなくなりました。アップグレードすれば、すべて問題ないはずです。</target>
        </trans-unit>
        <trans-unit id="480288621e2aefc91c805fcebc413ddf7c259e72" translate="yes" xml:space="preserve">
          <source>Duplicate, subsequent logs in the Command Log are now collapsed and can be expanded to view all logs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1580&quot;&gt;#1580&lt;/a&gt;.</source>
          <target state="translated">コマンドログの重複する後続のログは折りたたまれ、展開してすべてのログを表示できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1580&quot;&gt;＃1580を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5dbba9e67374d2a30a91b1d549d55513b36c3412" translate="yes" xml:space="preserve">
          <source>Duration estimation is done separately for every browser the spec file was tested against. This is helpful since performance characteristics vary by browser, and therefore it is perfectly acceptable to see different duration estimates for each browser a spec file was tested against.</source>
          <target state="translated">持続時間の推定は、仕様ファイルがテストされたブラウザごとに個別に行われます。これはブラウザによってパフォーマンス特性が異なるため、Specファイルをテストしたブラウザごとに異なる持続時間の推定値を表示しても問題ありません。</target>
        </trans-unit>
        <trans-unit id="ef20b0a1babe355cc139c7fecf6f35f98f282dae" translate="yes" xml:space="preserve">
          <source>Duration taking and saving the screenshot (in milliseconds).</source>
          <target state="translated">スクリーンショットの撮影と保存にかかる時間(ミリ秒単位)。</target>
        </trans-unit>
        <trans-unit id="f657f89a392636e85ad17713e4c4933e5aff3a0b" translate="yes" xml:space="preserve">
          <source>During &lt;code&gt;cypress run&lt;/code&gt;, windows created with &lt;code&gt;window.open&lt;/code&gt; will no longer physically display. They are now correctly headless. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/123&quot;&gt;#123&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 中に、 &lt;code&gt;window.open&lt;/code&gt; で作成されたウィンドウが物理的に表示されなくなります。それらは正しくヘッドレスになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/123&quot;&gt;＃123を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9dca6ae612201a13c0f26e35f4d8b02dc0f672d7" translate="yes" xml:space="preserve">
          <source>During an update Cypress will now display the updating message in the same coordinates as when the app was open by clicking the tray icon.</source>
          <target state="translated">アップデート中にトレイアイコンをクリックすると、アプリを開いていた時と同じ座標にアップデートメッセージが表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="03c3424a49203624a3e5f0a2af756f5600c7fd3b" translate="yes" xml:space="preserve">
          <source>During install of cypress, the Cypress binary is now downloaded to a global cache. This prevents multiple projects from downloading the same Cypress version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1300&quot;&gt;#1300&lt;/a&gt;.</source>
          <target state="translated">サイプレスのインストール中に、サイプレスバイナリがグローバルキャッシュにダウンロードされるようになりました。これにより、複数のプロジェクトが同じサイプレスバージョンをダウンロードすることを防ぎます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1300&quot;&gt;＃1300を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4635ca402b107dc777e57a14a22ddf4d81058452" translate="yes" xml:space="preserve">
          <source>During parallelization mode or when grouping runs, Cypress will wait for a specified amount of time before completing the test run in case any more relevant work remains. This is to compensate for various scenarios where CI machines could be backed-up in a queue.</source>
          <target state="translated">並列化モードの間、または実行をグループ化するとき、Cypress は、関連する作業が残っている場合に備えて、テスト実行を完了する前に指定された時間だけ待機します。これは、CI マシンがキューにバックアップされる可能性のあるさまざまなシナリオを補うためです。</target>
        </trans-unit>
        <trans-unit id="7bf0facb87eaef3dc2db4a6f8672cede399a3f6a" translate="yes" xml:space="preserve">
          <source>During parallelization mode, the Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; interacts with your CI machines to orchestrate the parallelization of a test run via &lt;a href=&quot;#Balance-strategy&quot;&gt;load-balancing&lt;/a&gt; of specs across available CI machines by the following process:</source>
          <target state="translated">並列化モード中、サイプレス&lt;a href=&quot;../dashboard/introduction&quot;&gt;ダッシュボードサービスは&lt;/a&gt; CIマシンと対話して、次のプロセスにより、利用可能なCIマシン全体でスペックの&lt;a href=&quot;#Balance-strategy&quot;&gt;ロードバランシング&lt;/a&gt;を介してテスト実行の並列化を調整します。</target>
        </trans-unit>
        <trans-unit id="38ea8471b6348617d0fe3b9854870b2c1045b2aa" translate="yes" xml:space="preserve">
          <source>During the test, the &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; command quickly found the rendered &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; item - and that item was the first and only &amp;ldquo;todo A&amp;rdquo; item. Our application was waiting 100ms before appending the second item &amp;ldquo;todo B&amp;rdquo; to the list. By the time the second item was added, Cypress had already &amp;ldquo;moved on&amp;rdquo;, working only with the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element. It only searched for &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; inside the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element, completely ignoring the newly created 2nd item.</source>
          <target state="translated">テスト中に、 &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; コマンドは、レンダリングされた &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; アイテムをすばやく見つけました-そのアイテムは最初で唯一の「todo A」アイテムでした。アプリケーションは、2番目の項目「todo B」をリストに追加する前に100ミリ秒待機していました。2番目の項目が追加されるまでに、サイプレスはすでに「先に進んで」おり、最初の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 要素のみを処理していました。最初に作成された2番目の項目を完全に無視して、最初の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 要素内の &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; のみを検索しました。</target>
        </trans-unit>
        <trans-unit id="136a0fb8d8e75eaec9777cdc1797bac23955292a" translate="yes" xml:space="preserve">
          <source>Dynamic tests split across parallel CI nodes with Knapsack Pro Queue Mode to get faster CI builds. Note - this is 3rd party implementation, different from the Cypress Dashboard parallelization.</source>
          <target state="translated">Knapsack Pro Queue Modeを使用して並列CIノード間で動的テストを分割し、より高速なCIビルドを実現します。注意-これはサードパーティの実装であり、Cypress Dashboardの並列化とは異なります。</target>
        </trans-unit>
        <trans-unit id="5c898c36e7e7f0ca622b7e6a1f3fedf436b9bd87" translate="yes" xml:space="preserve">
          <source>Dynamic text</source>
          <target state="translated">動的テキスト</target>
        </trans-unit>
        <trans-unit id="ae28e511e8bc706bd1f00b92fc4ad20be0013475" translate="yes" xml:space="preserve">
          <source>Dynamically Generate Tests</source>
          <target state="translated">動的にテストを生成する</target>
        </trans-unit>
        <trans-unit id="8526ce101be1f36855e24aaecd2b2c6cf5f8d9d1" translate="yes" xml:space="preserve">
          <source>Dynamically stubbing a response</source>
          <target state="translated">レスポンスの動的スタブ</target>
        </trans-unit>
        <trans-unit id="32632163c90f645f5e238e58d67159c13482ef76" translate="yes" xml:space="preserve">
          <source>Dynamically test multiple viewports</source>
          <target state="translated">複数のビューポートを動的にテスト</target>
        </trans-unit>
        <trans-unit id="763e51fd3356790e7032b1ff2b69409ac670bcde" translate="yes" xml:space="preserve">
          <source>E2E and unit code coverage</source>
          <target state="translated">E2Eとユニットコードのカバレッジ</target>
        </trans-unit>
        <trans-unit id="48f9ca4e6a46e0c8336a615783b4683686e1e040" translate="yes" xml:space="preserve">
          <source>E2E code coverage</source>
          <target state="translated">E2E コードカバレッジ</target>
        </trans-unit>
        <trans-unit id="abce15448f71f2ff8fb44635244fd4a50b592045" translate="yes" xml:space="preserve">
          <source>ES2015 and JSX via Babel</source>
          <target state="translated">バベル経由のES2015とJSX</target>
        </trans-unit>
        <trans-unit id="4d1b2ce02ae9d644a9a1ccd831bbd61bcd878146" translate="yes" xml:space="preserve">
          <source>ES2015 via Babel</source>
          <target state="translated">バベルを経由したES2015</target>
        </trans-unit>
        <trans-unit id="387485c3637a014fbaa964164d0526497139ac1e" translate="yes" xml:space="preserve">
          <source>ESLint</source>
          <target state="translated">ESLint</target>
        </trans-unit>
        <trans-unit id="1370400c46faebf95aef65bacd78290720372c1e" translate="yes" xml:space="preserve">
          <source>ESLint plugin that sets globals for writing tests in Cypress.</source>
          <target state="translated">Cypress でテストを書くためのグローバルを設定する ESLint プラグイン。</target>
        </trans-unit>
        <trans-unit id="1a667eaf2cb96d97a1d0e9a8d21804d12d391390" translate="yes" xml:space="preserve">
          <source>Each API Command documents its behavior with assertions - such as how it retries or waits for assertions to pass.</source>
          <target state="translated">各 API コマンドは、アサーションを使った動作を文書化しています。</target>
        </trans-unit>
        <trans-unit id="c377f25ad057c7000470b58b06a4cf4c4f9d9d55" translate="yes" xml:space="preserve">
          <source>Each Cypress command (and chain of commands) returns immediately, having only been appended to a queue of commands to be executed at a later time.</source>
          <target state="translated">各 Cypress コマンド (およびコマンドの連鎖)はすぐに戻り、後から実行されるコマンドのキューに追加されるだけです。</target>
        </trans-unit>
        <trans-unit id="2d30182dccb6b31f8acf775660b9de4a71aa0512" translate="yes" xml:space="preserve">
          <source>Each command and assertion, when hovered over, restores the Application Under Test (righthand side) to the state it was in when that command executed. This allows you to &amp;lsquo;time-travel&amp;rsquo; back to previous states of your application when testing.</source>
          <target state="translated">各コマンドとアサーションは、カーソルを合わせると、テスト中のアプリケーション（右側）を、そのコマンドが実行されたときの状態に戻します。これにより、テスト時にアプリケーションの以前の状態に「タイムトラベル」することができます。</target>
        </trans-unit>
        <trans-unit id="1e1830c5ceb356707df5226b15717796e913493a" translate="yes" xml:space="preserve">
          <source>Each command will automatically restore the viewport to the dimensions at the time the command was issued. In other words, scrolling over each command will restore exactly what Cypress &amp;ldquo;saw&amp;rdquo; when it issued the command.</source>
          <target state="translated">各コマンドは、コマンドが発行されたときのビューポートを自動的に寸法に戻します。つまり、各コマンドをスクロールすると、サイプレスがコマンドを発行したときに「見た」ものを正確に復元できます。</target>
        </trans-unit>
        <trans-unit id="684c1fdc408df49cd48e5f43f063a2b481a255fe" translate="yes" xml:space="preserve">
          <source>Each command, assertion, or error, when clicked on, displays extra information in the dev tools console. Clicking also &amp;lsquo;pins&amp;rsquo; the Application Under Test (righthand side) to its previous state when the command executed.</source>
          <target state="translated">各コマンド、アサーション、またはエラーをクリックすると、開発ツールコンソールに追加情報が表示されます。また、コマンドをクリックすると、テスト中のアプリケーション（右側）が前の状態に「固定」されます。</target>
        </trans-unit>
        <trans-unit id="275993dbbd08f877b5a8ee165491e54db8467214" translate="yes" xml:space="preserve">
          <source>Each event documents its own argument signature. To understand how to use them, please &lt;a href=&quot;#List-of-events&quot;&gt;refer to the docs for each one&lt;/a&gt;.</source>
          <target state="translated">各イベントは、独自の引数の署名を文書化します。それらの使い方を理解するには&lt;a href=&quot;#List-of-events&quot;&gt;、それぞれのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e88c2ebb6cbb35ba1087b3274ea4feb73d229795" translate="yes" xml:space="preserve">
          <source>Each failed test links back to the associated failure within the Cypress Dashboard.</source>
          <target state="translated">各失敗したテストは、Cypress ダッシュボード内の関連する失敗にリンクしています。</target>
        </trans-unit>
        <trans-unit id="8b6f95f98b50c84456913db5f3adc7e79522a170" translate="yes" xml:space="preserve">
          <source>Each keypress is delayed 10ms by default in order to simulate how a very fast user types!</source>
          <target state="translated">各キープレスは、非常に速いユーザーがどのようにタイプするかをシミュレートするために、デフォルトでは10ミリ秒遅延されています。</target>
        </trans-unit>
        <trans-unit id="9e400bc814cb7a75a615fbd7190343f642f74521" translate="yes" xml:space="preserve">
          <source>Each nested command has access to the work done in previous commands. This ends up reading very nicely.</source>
          <target state="translated">入れ子になった各コマンドは、前のコマンドで行われた作業にアクセスすることができます。これは非常にきれいに読めてしまいます。</target>
        </trans-unit>
        <trans-unit id="99024aa822581486d6de74268616aa65f2fe2aed" translate="yes" xml:space="preserve">
          <source>Each of these environments would read in the configuration at these files:</source>
          <target state="translated">これらの環境のそれぞれは、これらのファイルの設定を読み込むことになります。</target>
        </trans-unit>
        <trans-unit id="520ea0c2aac8299f6c0b93e36d195747c0ff7dfa" translate="yes" xml:space="preserve">
          <source>Each of these likely requires a full blown e2e test.</source>
          <target state="translated">これらのそれぞれは、おそらく完全なe2eテストが必要になります。</target>
        </trans-unit>
        <trans-unit id="9d63f8c829aa417fbfafcd489edaa4d0a4e615e3" translate="yes" xml:space="preserve">
          <source>Each status check will report the number of test failures or passes, and the associated &lt;strong&gt;Details&lt;/strong&gt; link will direct you to the test run&amp;rsquo;s page within the Cypress Dashboard to help you dig deeper into the problem via error messages, stack traces, screenshots, and video recordings:</source>
          <target state="translated">各ステータスチェックは、テストの失敗または合格の数を報告し、関連する&lt;strong&gt;詳細&lt;/strong&gt;リンクは、サイプレスダッシュボード内のテスト実行のページに移動し、エラーメッセージ、スタックトレース、スクリーンショット、およびビデオの記録を介して問題をさらに&lt;strong&gt;詳しく&lt;/strong&gt;調べるのに役立ちます：</target>
        </trans-unit>
        <trans-unit id="6f9e6d76d99d863b08efd5c2699c22f48570a76d" translate="yes" xml:space="preserve">
          <source>Each test is bound to a &lt;a href=&quot;#Same-origin&quot;&gt;single origin&lt;/a&gt;.</source>
          <target state="translated">各テストは&lt;a href=&quot;#Same-origin&quot;&gt;単一のオリジンに&lt;/a&gt;バインドされています。</target>
        </trans-unit>
        <trans-unit id="80c603e712f509c60c424c0b15022265d200d65d" translate="yes" xml:space="preserve">
          <source>Each test is limited to only visiting a single superdomain.</source>
          <target state="translated">各テストは、1つのスーパードメインを訪問するだけに制限されています。</target>
        </trans-unit>
        <trans-unit id="7be3eadfca500682a804c06ad342ec8f4d4f3e00" translate="yes" xml:space="preserve">
          <source>Each time an alias in used with a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, Cypress will not resolve until the Nth request matching the outing alias responds. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4&quot;&gt;#4&lt;/a&gt;.</source>
          <target state="translated">エイリアスが&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;で使用されるたびに、サイプレスは、外部エイリアスと一致するN番目のリクエストが応答するまで解決しません。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4&quot;&gt;＃4&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="258b36b6173f6d83441d85265954566f57a760e8" translate="yes" xml:space="preserve">
          <source>Each time we use &lt;code&gt;cy.wait()&lt;/code&gt; for an alias, Cypress waits for the next nth matching request.</source>
          <target state="translated">エイリアスに &lt;code&gt;cy.wait()&lt;/code&gt; を使用するたびに、サイプレスは次のn番目の一致するリクエストを待ちます。</target>
        </trans-unit>
        <trans-unit id="6cbabaf3b7003a054a8aa0c182c7fc219164659c" translate="yes" xml:space="preserve">
          <source>Easily mock your REST API in Cypress by putting responses in the fixtures directory tree.</source>
          <target state="translated">レスポンスをフィクスチャディレクトリツリーに置くことで、Cypress で REST API を簡単にモックできます。</target>
        </trans-unit>
        <trans-unit id="a1b70f0ead660ad520a0fe4e108059f6483211c1" translate="yes" xml:space="preserve">
          <source>Easily: control which campaign gets sent, or provide a reliable means to know which one it is.</source>
          <target state="translated">簡単:どのキャンペーンが送られてくるかをコントロールしたり、どのキャンペーンかを知るための信頼できる手段を提供します。</target>
        </trans-unit>
        <trans-unit id="4faac50fbaf395b598751258e10615250e7ad966" translate="yes" xml:space="preserve">
          <source>Easy control of response bodies, status, and headers</source>
          <target state="translated">レスポンスボディ、ステータス、ヘッダーを簡単に制御</target>
        </trans-unit>
        <trans-unit id="143f10dc9c5ed39d716e4f2bd0ee7d24486a1820" translate="yes" xml:space="preserve">
          <source>Edge cases like locked / deleted accounts</source>
          <target state="translated">ロックされた/削除されたアカウントのようなエッジケース</target>
        </trans-unit>
        <trans-unit id="21ad68daa12d13b4ec9639b5c9446a62b81abc7b" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;admin&amp;rsquo; in organization</source>
          <target state="translated">組織の「管理者」を編集</target>
        </trans-unit>
        <trans-unit id="11d3c209993b025b25ba41f1164a7c6f9cae7bdc" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;member&amp;rsquo; in organization</source>
          <target state="translated">組織の「メンバー」を編集</target>
        </trans-unit>
        <trans-unit id="ac33bdcdccb67cdac31155d9d7f435ee323dc7a4" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;owner&amp;rsquo; in organization</source>
          <target state="translated">組織の「所有者」を編集</target>
        </trans-unit>
        <trans-unit id="c91ffb5f3ded95ed881a649db2def6919951d1e2" translate="yes" xml:space="preserve">
          <source>Edit billing information</source>
          <target state="translated">課金情報の編集</target>
        </trans-unit>
        <trans-unit id="e2befb843434b3c0a45eb78377cb1c3a9fd932b7" translate="yes" xml:space="preserve">
          <source>Edit organization name</source>
          <target state="translated">組織名の編集</target>
        </trans-unit>
        <trans-unit id="7f9c8e468af664d71704e88d65af4cc78aa8b101" translate="yes" xml:space="preserve">
          <source>Edit project name</source>
          <target state="translated">プロジェクト名の編集</target>
        </trans-unit>
        <trans-unit id="083a0a263e8bc798e23428cb98a349cb82c291a3" translate="yes" xml:space="preserve">
          <source>Edit project status (private/public}</source>
          <target state="translated">プロジェクトの状態を編集する (非公開/非公開)</target>
        </trans-unit>
        <trans-unit id="3b11ca85d872d994ddd774f033e3e4883c5374a4" translate="yes" xml:space="preserve">
          <source>Edit the installed Cypress code</source>
          <target state="translated">インストールされているCypressコードを編集する</target>
        </trans-unit>
        <trans-unit id="7ed50c7c9032a74ec0f4cb0dafc803eaa53c9af5" translate="yes" xml:space="preserve">
          <source>Editing a Selector</source>
          <target state="translated">セレクタの編集</target>
        </trans-unit>
        <trans-unit id="3f25a6c9ba41e83696296e7c77e66e2444e64051" translate="yes" xml:space="preserve">
          <source>Effect on default DOM assertions</source>
          <target state="translated">デフォルトの DOM アサーションへの影響</target>
        </trans-unit>
        <trans-unit id="3e63a9b7b308aed39d946483a401f46e77a9d1e3" translate="yes" xml:space="preserve">
          <source>Effectively leveraging test data</source>
          <target state="translated">テストデータを効果的に活用する</target>
        </trans-unit>
        <trans-unit id="32a90561af82abfa6e3aa54ef2f8e4b55202bd25" translate="yes" xml:space="preserve">
          <source>Electron</source>
          <target state="translated">Electron</target>
        </trans-unit>
        <trans-unit id="ab40dddcb86fc9f7d8f51cdd865f63924d21ba19" translate="yes" xml:space="preserve">
          <source>Electron Browser</source>
          <target state="translated">電子ブラウザ</target>
        </trans-unit>
        <trans-unit id="3a76e577299fc3c204205f6ee683d8a672a99478" translate="yes" xml:space="preserve">
          <source>Electron no longer reports the browser as out of focus when running via &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1939&quot;&gt;#1939&lt;/a&gt;.</source>
          <target state="translated">Electronは、 &lt;code&gt;cypress run&lt;/code&gt; を介して実行しているときに、ブラウザがフォーカス外れとして報告しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1939&quot;&gt;＃1939を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="628192e8fa718cca67ad9d3672c514fbb407a198" translate="yes" xml:space="preserve">
          <source>Electron rendering warnings are no longer printed to console output. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4288&quot;&gt;#4288&lt;/a&gt;.</source>
          <target state="translated">電子レンダリングの警告がコンソール出力に出力されなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4288&quot;&gt;＃4288を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ac1b516a5e7d2ec9129ab1809aa645c83ab99f4d" translate="yes" xml:space="preserve">
          <source>Element existence</source>
          <target state="translated">元素の存在</target>
        </trans-unit>
        <trans-unit id="67ac45c91d2984a846db24f392fd52e012b9fba1" translate="yes" xml:space="preserve">
          <source>Element preference order</source>
          <target state="translated">要素の優先順位</target>
        </trans-unit>
        <trans-unit id="8c1e32bf90c3fd5f9e28299e564c4b55b82a0acc" translate="yes" xml:space="preserve">
          <source>Element removal during &lt;code&gt;mousedown&lt;/code&gt; or &lt;code&gt;mouseup&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mousedown&lt;/code&gt; または &lt;code&gt;mouseup&lt;/code&gt; 中の要素の削除</target>
        </trans-unit>
        <trans-unit id="3d6147561440cd1b5919d02113d41dc053bfe9a4" translate="yes" xml:space="preserve">
          <source>Element to search for children in. If null, search begins from root-level DOM element</source>
          <target state="translated">検索対象の子要素。null の場合は、ルートレベルの DOM 要素から検索を開始します。</target>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="ab8036ec3220e8f26cf947a385c7f8e8b88aa005" translate="yes" xml:space="preserve">
          <source>Elements (the number of elements found)</source>
          <target state="translated">要素(見つかった要素数</target>
        </trans-unit>
        <trans-unit id="c921f06f52212a4281e5cb1397527903ac026c45" translate="yes" xml:space="preserve">
          <source>Elements that are covering up an element you targeted for &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; are now logged out in the command console.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; の&lt;/a&gt;対象となる要素を覆っている要素は、コマンドコンソールでログアウトされます。</target>
        </trans-unit>
        <trans-unit id="2f5b8ce8549efb6806df82766f80e1a2920d20de" translate="yes" xml:space="preserve">
          <source>Elements that are inside a parent with CSS &lt;code&gt;position: absolute&lt;/code&gt; which is itself inside of a parent element with &lt;code&gt;overflow: hidden&lt;/code&gt; are now properly considered visible. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4395&quot;&gt;#4395&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/755&quot;&gt;#755&lt;/a&gt;.</source>
          <target state="translated">CSS &lt;code&gt;position: absolute&lt;/code&gt; を持つ親の内部にある要素 &lt;code&gt;overflow: hidden&lt;/code&gt; を持つ親要素の内部にある絶対：非表示は、適切に可視と見なされるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4395&quot;&gt;＃4395&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/755&quot;&gt;＃755を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4da0ae126bc2a53908cf07a828a772793ec432d8" translate="yes" xml:space="preserve">
          <source>Elements that match the specified selectors will be blacked out from the screenshot, but only when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt;. &lt;code&gt;blackout&lt;/code&gt; is ignored if &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">指定されたセレクターに一致する要素はスクリーンショットから黒く塗りつぶされますが、 &lt;code&gt;capture&lt;/code&gt; オプションが &lt;code&gt;viewport&lt;/code&gt; 場合のみです。 &lt;code&gt;capture&lt;/code&gt; オプションが &lt;code&gt;runner&lt;/code&gt; 場合、 &lt;code&gt;blackout&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="6998029fced720e07b4684bb075b294b44e30ee1" translate="yes" xml:space="preserve">
          <source>Elements that match the specified selectors will be blacked out from the screenshot, but only when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt;. &lt;code&gt;blackout&lt;/code&gt; is ignored is &lt;code&gt;capture&lt;/code&gt; is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">指定されたセレクターに一致する要素はスクリーンショットから黒く表示されますが、 &lt;code&gt;capture&lt;/code&gt; オプションが &lt;code&gt;viewport&lt;/code&gt; の場合のみです。 &lt;code&gt;blackout&lt;/code&gt; は無視され、 &lt;code&gt;capture&lt;/code&gt; は &lt;code&gt;runner&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5e9ebbcc8c2d718bd1587c39876f43fd85937f84" translate="yes" xml:space="preserve">
          <source>Elements which are children of a container with &lt;code&gt;overflow&lt;/code&gt; are automatically scrolled prior to a click (which is an abstraction around real user behavior).</source>
          <target state="translated">&lt;code&gt;overflow&lt;/code&gt; のあるコンテナーの子である要素は、クリックの前に自動的にスクロールされます（これは実際のユーザーの動作に関する抽象化です）。</target>
        </trans-unit>
        <trans-unit id="4b356077ea501d4ebd48c4371f1a83dbcc1eb12f" translate="yes" xml:space="preserve">
          <source>Elements which are stringified during errors now indicate their text content (truncated to 10 characters) &lt;code&gt;&amp;lt;button&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/code&gt; or whether they contain children elements by indicating an ellipsis &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">エラー時に文字列化された要素は、テキストコンテンツ（10文字に切り捨て） &lt;code&gt;&amp;lt;button&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/code&gt; を示すか、省略記号 &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt; を示すことによって子要素を含むかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="26bf1b4484d000d8d5ae5549911ae978182472d5" translate="yes" xml:space="preserve">
          <source>Elements with a defined &lt;code&gt;contenteditable&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;contenteditable&lt;/code&gt; 属性が定義された要素。</target>
        </trans-unit>
        <trans-unit id="44667429769bd42ab172b16d15a51c492c3b74cb" translate="yes" xml:space="preserve">
          <source>Elements with a defined &lt;code&gt;tabindex&lt;/code&gt; attribute.</source>
          <target state="translated">定義された &lt;code&gt;tabindex&lt;/code&gt; 属性を持つ要素。</target>
        </trans-unit>
        <trans-unit id="c5016f42510d5ee58a2fc21e1db91bd76faabaef" translate="yes" xml:space="preserve">
          <source>Elm Batteries Included</source>
          <target state="translated">エルムの電池が含まれています</target>
        </trans-unit>
        <trans-unit id="af9767897d93c4978863eb928201ebd647a87432" translate="yes" xml:space="preserve">
          <source>Embed data in DOM:</source>
          <target state="translated">データをDOMに埋め込む。</target>
        </trans-unit>
        <trans-unit id="e39e9c84c2c2c0bee498ed6bf855df6becaa3631" translate="yes" xml:space="preserve">
          <source>Embed data in the DOM:</source>
          <target state="translated">データをDOMに埋め込む。</target>
        </trans-unit>
        <trans-unit id="e9b4c8862fdeedf485374f3150ae4c5a0e62da5b" translate="yes" xml:space="preserve">
          <source>Embed data into other places (cookies / local storage) you could read off.</source>
          <target state="translated">あなたが読み取ることができる他の場所(クッキー/ローカルストレージ)にデータを埋め込む。</target>
        </trans-unit>
        <trans-unit id="d919c765dfb166f5f96fd2b0f23f806e1d095b38" translate="yes" xml:space="preserve">
          <source>Embedding a Vimeo or YouTube video.</source>
          <target state="translated">VimeoやYouTubeの動画を埋め込みます。</target>
        </trans-unit>
        <trans-unit id="c4d67b7147f77128c418841b4c976644e812ca6f" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to send an encoding for images other than forcing the default encoding of &lt;code&gt;base64&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/373&quot;&gt;#373&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;を有効にして、 &lt;code&gt;base64&lt;/code&gt; のデフォルトのエンコーディングを強制する以外の画像のエンコーディングを送信します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/373&quot;&gt;＃373を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2c8ec935e875b88d51e3d58428ad460f4eb430a7" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; to pass an &lt;code&gt;encoding&lt;/code&gt; parameter when using &lt;code&gt;fx:fixture&lt;/code&gt; syntax. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/374&quot;&gt;#374&lt;/a&gt;.</source>
          <target state="translated">有効&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; を&lt;/a&gt;通過する &lt;code&gt;encoding&lt;/code&gt; 使用時のパラメータを &lt;code&gt;fx:fixture&lt;/code&gt; 構文。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/374&quot;&gt;＃374を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f0426f197113f21bed6a16a638614e6219dd849a" translate="yes" xml:space="preserve">
          <source>Enable or disable experimental chrome features</source>
          <target state="translated">実験的クローム機能の有効化・無効化</target>
        </trans-unit>
        <trans-unit id="8e2313b580fa33d278483393ce7eea83abf0c5a6" translate="yes" xml:space="preserve">
          <source>Enable passing &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; without using the CLI by invoking the binary directly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/820&quot;&gt;#820&lt;/a&gt;.</source>
          <target state="translated">バイナリを直接呼び出すことにより、CLIを使用せずに &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; を渡すことができるようにします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/820&quot;&gt;＃820を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5d3fbeb8872057dafd3be83b08840d1f47487360" translate="yes" xml:space="preserve">
          <source>Enables fail fast in Cypress, skipping the rest of tests on first failure.</source>
          <target state="translated">Cypress での高速フェイルを有効にし、最初の失敗時に残りのテストをスキップします。</target>
        </trans-unit>
        <trans-unit id="aa2e83b0da6d422f1bdb880cdbb1d737c2ba9d85" translate="yes" xml:space="preserve">
          <source>Enables you to generate this file from other build processes.</source>
          <target state="translated">他のビルドプロセスからこのファイルを生成できるようにします。</target>
        </trans-unit>
        <trans-unit id="0b6c051defe74066ab292a333fa676fa369cdd20" translate="yes" xml:space="preserve">
          <source>Enables you to override the default user agent the browser sends in all request headers. User agent values are typically used by servers to help identify the operating system, browser, and browser version. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent&quot;&gt;User-Agent MDN Documentation&lt;/a&gt; for example user agent values.</source>
          <target state="translated">ブラウザがすべてのリクエストヘッダーで送信するデフォルトのユーザーエージェントを上書きできます。ユーザーエージェントの値は通常、サーバーで使用され、オペレーティングシステム、ブラウザー、およびブラウザーのバージョンを識別します。ユーザーエージェントの値の例については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent&quot;&gt;ユーザーエージェントのMDNドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="c5754b46c040515f05e7e2cf7cd1cd37419a34f9" translate="yes" xml:space="preserve">
          <source>Enables you to work with the subject yielded from the previous command.</source>
          <target state="translated">前のコマンドで生成された被写体を操作できるようにします。</target>
        </trans-unit>
        <trans-unit id="558ddd63962b514580bf35502e16351fdbe839ab" translate="yes" xml:space="preserve">
          <source>Enabling GitHub integration for a project</source>
          <target state="translated">プロジェクトへの GitHub 統合を有効にする</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
