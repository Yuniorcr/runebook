<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="b0e02fe52a7524597a122925192b6eb5f21a197c" translate="yes" xml:space="preserve">
          <source>Targeting the element above by &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt; is very volatile and highly subject to change. You may swap out the element, you may refactor CSS and update ID&amp;rsquo;s, or you may add or remove classes that affect the style of the element.</source>
          <target state="translated">上記の要素を &lt;code&gt;tag&lt;/code&gt; 、 &lt;code&gt;class&lt;/code&gt; 、または &lt;code&gt;id&lt;/code&gt; でターゲティングすることは非常に不安定で、変更される可能性が高くなります。要素を交換したり、CSSをリファクタリングしてIDを更新したり、要素のスタイルに影響を与えるクラスを追加または削除したりできます。</target>
        </trans-unit>
        <trans-unit id="ed672f0d303bcf15159beca38483d0c2a2d11a4f" translate="yes" xml:space="preserve">
          <source>Tasks are merged automatically</source>
          <target state="translated">タスクは自動的にマージされる</target>
        </trans-unit>
        <trans-unit id="a06e62da0340bb602ffbe3e95da5882ac31107e3" translate="yes" xml:space="preserve">
          <source>Tasks must end</source>
          <target state="translated">タスクは終了しなければならない</target>
        </trans-unit>
        <trans-unit id="4501d02d62245855e16d36daca8a82e7db839dff" translate="yes" xml:space="preserve">
          <source>Tasks registered in the plugins file with the &amp;lsquo;task&amp;rsquo; event are merged with any tasks registered by previous calls to &lt;code&gt;on('task')&lt;/code&gt;, instead of overwriting the previous tasks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2284&quot;&gt;#2284&lt;/a&gt;.</source>
          <target state="translated">'task'イベントでプラグインファイルに登録されたタスクは、以前のタスクを上書きする代わりに、 &lt;code&gt;on('task')&lt;/code&gt; への以前の呼び出しによって登録されたタスクとマージされます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2284&quot;&gt;＃2284を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3183c1609c7e644095493678e46ceee67a34f8c3" translate="yes" xml:space="preserve">
          <source>Tasks that do not end are not supported</source>
          <target state="translated">終了しないタスクはサポートされていません</target>
        </trans-unit>
        <trans-unit id="658b6d3aca3d0b2d0a646705881424c846b0a1e4" translate="yes" xml:space="preserve">
          <source>Technically the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, and first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; in the example below all contain &amp;ldquo;apples&amp;rdquo;.</source>
          <target state="translated">技術的には、以下の例の &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 、最初の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; にはすべて「リンゴ」が含まれています。</target>
        </trans-unit>
        <trans-unit id="5f335cd60c716771bd7383f170ff4943875ed401" translate="yes" xml:space="preserve">
          <source>Temporarily ignoring the &lt;code&gt;--reporter&lt;/code&gt; option for headless / CI runs. Currently it is locked to the &lt;code&gt;spec&lt;/code&gt; reporter, which is the default. This will be fixed in the next few patch releases.</source>
          <target state="translated">ヘッドレス/ CI実行の &lt;code&gt;--reporter&lt;/code&gt; オプションを一時的に無視します。現在、これはデフォルトの &lt;code&gt;spec&lt;/code&gt; レポーターにロックされています。これは、次のいくつかのパッチリリースで修正される予定です。</target>
        </trans-unit>
        <trans-unit id="a0a01341c0f853915868524cf2486d0b5478d5e6" translate="yes" xml:space="preserve">
          <source>Temporary trade-offs:</source>
          <target state="translated">一時的なトレードオフ。</target>
        </trans-unit>
        <trans-unit id="1ecdafaa980fea1d90e97830ce7b1eb728dc022f" translate="yes" xml:space="preserve">
          <source>Test Angular component using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runnerを使ってAngularコンポーネントをテストする</target>
        </trans-unit>
        <trans-unit id="45b447602b36cf493856860d1acb9e37b9f5c43f" translate="yes" xml:space="preserve">
          <source>Test Code causing error</source>
          <target state="translated">エラーの原因となるテストコード</target>
        </trans-unit>
        <trans-unit id="b3b22029d6c82b1352e5e952f1c15a89c8280b8b" translate="yes" xml:space="preserve">
          <source>Test Configuration</source>
          <target state="translated">テスト構成</target>
        </trans-unit>
        <trans-unit id="684040738bd04ccfa68be014ee4a6b87c8ec87d2" translate="yes" xml:space="preserve">
          <source>Test Cycle.js components using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runnerを使ってCycle.jsのコンポーネントをテストする</target>
        </trans-unit>
        <trans-unit id="9ac21f97f2f4903c9ac59320708a58ef2ddcdc01" translate="yes" xml:space="preserve">
          <source>Test Failures</source>
          <target state="translated">テストの失敗</target>
        </trans-unit>
        <trans-unit id="cac96a74d0be4987ba8a26863c497ad605566650" translate="yes" xml:space="preserve">
          <source>Test File Errors</source>
          <target state="translated">テストファイルのエラー</target>
        </trans-unit>
        <trans-unit id="97c56f7b0b5b324631c5113e306924e2d7bb2150" translate="yes" xml:space="preserve">
          <source>Test Hyperapp components and applications using Cypress Test Runner</source>
          <target state="translated">Cypressテストランナーを使用したHyperappコンポーネントとアプリケーションのテスト</target>
        </trans-unit>
        <trans-unit id="1b3f6c43c3fdfa3791f14217f9bc76c0c9ffc66c" translate="yes" xml:space="preserve">
          <source>Test IDs have been removed. You will no longer see Cypress insert IDs into your test files. This was a feature we implemented on day 1 - the idea being we could track test performance and do regression analysis. Unfortunately, it will be a long time before we actually implement the data science to make this happen. For the time being, IDs presented unnecessary technical complexity and challenges with no real upside. We recommend you remove all of your existing IDs. We&amp;rsquo;ve added a new command to the CLI tool that can do this in one shot. &lt;code&gt;cypress remove:ids&lt;/code&gt; You may see IDs be reintroduced at a later time when we provide analytics.</source>
          <target state="translated">テストIDは削除されました。サイプレスがテストファイルにIDを挿入することはもうありません。これは、1日目に実装した機能でした。つまり、テストパフォーマンスを追跡し、回帰分析を行うことができます。残念ながら、これを実現するためにデータサイエンスを実際に実装するまでには長い時間がかかります。当面の間、IDは不必要な技術的な複雑さと課題を提示しましたが、実際の利点はありませんでした。既存のIDをすべて削除することをお勧めします。これを一度に実行できる新しいコマンドをCLIツールに追加しました。 &lt;code&gt;cypress remove:ids&lt;/code&gt; IDが分析を提供するときに、後で再導入される場合があります。</target>
        </trans-unit>
        <trans-unit id="079919ff5fc4373dfcb24a2ad44fd01025032425" translate="yes" xml:space="preserve">
          <source>Test React components using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runnerを使ってReactコンポーネントをテストする</target>
        </trans-unit>
        <trans-unit id="ba23c3620e9948b76588caefb2603502db66c5a1" translate="yes" xml:space="preserve">
          <source>Test Runner</source>
          <target state="translated">テストランナー</target>
        </trans-unit>
        <trans-unit id="cda4f532ce99974cb637e8d6f67e4706bfbe7571" translate="yes" xml:space="preserve">
          <source>Test Runner errors</source>
          <target state="translated">テストランナーのエラー</target>
        </trans-unit>
        <trans-unit id="a223bfbd68697f8e9fc89de83eefd9ae1e285aab" translate="yes" xml:space="preserve">
          <source>Test Structure</source>
          <target state="translated">テスト構造</target>
        </trans-unit>
        <trans-unit id="88dbcf96fc5b5729297cd88ad60e3d7f31ee5511" translate="yes" xml:space="preserve">
          <source>Test Svelte components using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runnerを使用してSvelteコンポーネントをテストする</target>
        </trans-unit>
        <trans-unit id="20dca8620c56eeea52221b877b96c856386b8250" translate="yes" xml:space="preserve">
          <source>Test Vue.js components using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runnerを使用してVue.jsコンポーネントをテストする</target>
        </trans-unit>
        <trans-unit id="3be2bd05b49605e590fd06cfc5eec534c08a69e6" translate="yes" xml:space="preserve">
          <source>Test WebSocket connections with Cypress</source>
          <target state="translated">CypressでWebSocket接続をテストする</target>
        </trans-unit>
        <trans-unit id="c3820dfcc1b257d6b9f196f52bf1a07e5340333c" translate="yes" xml:space="preserve">
          <source>Test configuration: &lt;code&gt;browser&lt;/code&gt;</source>
          <target state="translated">テスト構成： &lt;code&gt;browser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="785c5615fa9e747dec82330a8553899ccd55ddfd" translate="yes" xml:space="preserve">
          <source>Test coverage around server endpoints</source>
          <target state="translated">サーバーエンドポイント周辺のテスト範囲</target>
        </trans-unit>
        <trans-unit id="fe862656c41fd2b7f1ad701941cf16e817f5737e" translate="yes" xml:space="preserve">
          <source>Test duration is now correct and only updates when tests finish.</source>
          <target state="translated">テスト期間が正しくなり、テスト終了時にのみ更新されるようになりました。</target>
        </trans-unit>
        <trans-unit id="4c35b759a061459f65e34712cde826c33cc179bc" translate="yes" xml:space="preserve">
          <source>Test edge cases like &amp;lsquo;empty views&amp;rsquo; by forcing your server to send empty responses.</source>
          <target state="translated">サーバーに空の応答を送信させることにより、「空のビュー」などのエッジケースをテストします。</target>
        </trans-unit>
        <trans-unit id="5f8c2e3e872919f39dd711b1b7aa61d67dc9f0d5" translate="yes" xml:space="preserve">
          <source>Test email and SMS messages using Mailosaur</source>
          <target state="translated">Mailosaurを使ってメールとSMSメッセージをテストする</target>
        </trans-unit>
        <trans-unit id="13f59ca81ca01c147b6c425183bbd058e680331f" translate="yes" xml:space="preserve">
          <source>Test file</source>
          <target state="translated">テストファイル</target>
        </trans-unit>
        <trans-unit id="5cb661edf85cf7a89931f11d9df57469a7519ae8" translate="yes" xml:space="preserve">
          <source>Test file:</source>
          <target state="translated">テストファイル。</target>
        </trans-unit>
        <trans-unit id="b0aea331ff22ddf611bb144442b32469de7af26a" translate="yes" xml:space="preserve">
          <source>Test files</source>
          <target state="translated">テストファイル</target>
        </trans-unit>
        <trans-unit id="1c67907bb75ac9bc7af8d108be1e9ff81781d51a" translate="yes" xml:space="preserve">
          <source>Test files are located in &lt;code&gt;cypress/integration&lt;/code&gt; by default, but can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured&lt;/a&gt; to another directory. Test files may be written as:</source>
          <target state="translated">テストファイルはデフォルトで &lt;code&gt;cypress/integration&lt;/code&gt; にありますが、別のディレクトリに&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;設定&lt;/a&gt;することもできます。テストファイルは次のように記述できます。</target>
        </trans-unit>
        <trans-unit id="cff28057f5463951009da03ec203080455f94932" translate="yes" xml:space="preserve">
          <source>Test files with JS syntax errors are now &lt;a href=&quot;error-messages&quot;&gt;handled&lt;/a&gt; and we provide a GUI that points to the exact line/column number. Additionally we print these out during &lt;code&gt;cypress run&lt;/code&gt; and exit the process with &lt;code&gt;code 1&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/293&quot;&gt;#293&lt;/a&gt;.</source>
          <target state="translated">JS構文エラーのあるテストファイルが&lt;a href=&quot;error-messages&quot;&gt;処理されるように&lt;/a&gt;なり、正確な行/列番号を指すGUIが提供されます。さらに、 &lt;code&gt;cypress run&lt;/code&gt; 中にこれらを出力し、 &lt;code&gt;code 1&lt;/code&gt; プロセスを終了します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/293&quot;&gt;＃293を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="fc7bec86e616f154ed51616f33587b0101622fd3" translate="yes" xml:space="preserve">
          <source>Test how your application responds to errors on your server by &lt;a href=&quot;../../api/commands/route&quot;&gt;modifying response status codes to be 500&lt;/a&gt; so that timers or polls automatically fire without having to wait for the required time in your tests.</source>
          <target state="translated">テストで必要な時間を待たずにタイマーまたはポーリングが自動的に起動する&lt;a href=&quot;../../api/commands/route&quot;&gt;ように、応答ステータスコードを500に変更&lt;/a&gt;して、アプリケーションがサーバーのエラーにどのように応答するかをテストします。</target>
        </trans-unit>
        <trans-unit id="4d4924c788e474a6f6f835f31abc044aab8482c7" translate="yes" xml:space="preserve">
          <source>Test retries display</source>
          <target state="translated">テストリトライの表示</target>
        </trans-unit>
        <trans-unit id="f8a02496888c99a946d36ee9a569eec11d55f3a9" translate="yes" xml:space="preserve">
          <source>Test that your application was redirected</source>
          <target state="translated">アプリケーションがリダイレクトされたことをテストする</target>
        </trans-unit>
        <trans-unit id="3cb5130b197cdce7360c93e1118149d60b2bc107" translate="yes" xml:space="preserve">
          <source>TestRail Reporter which auto-set status for specific TestRun for Cypress.</source>
          <target state="translated">Cypressの特定のTestRunのステータスを自動設定するTestRail Reporter。</target>
        </trans-unit>
        <trans-unit id="a5fc42bb7b3a718d11213075b60c9ef2803237c1" translate="yes" xml:space="preserve">
          <source>Testing Strategies</source>
          <target state="translated">テスト戦略</target>
        </trans-unit>
        <trans-unit id="49e5de6fdda8606102fc8691dbe10c9bec340297" translate="yes" xml:space="preserve">
          <source>Testing Your App</source>
          <target state="translated">アプリのテスト</target>
        </trans-unit>
        <trans-unit id="87359bb81cb05c7edf5ce752c31754c53803626b" translate="yes" xml:space="preserve">
          <source>Testing a chart with Cypress and Applitools</source>
          <target state="translated">CypressとApplitoolsでチャートをテストする</target>
        </trans-unit>
        <trans-unit id="c44ae5dd646e7249556f2ac4515fec404f156bf8" translate="yes" xml:space="preserve">
          <source>Testing a datalist</source>
          <target state="translated">データリストのテスト</target>
        </trans-unit>
        <trans-unit id="9dcbec88eff56a20a82e5e2ead9ad80b847e97ab" translate="yes" xml:space="preserve">
          <source>Testing drag and drop is now possible using the new &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; command. See our &lt;a href=&quot;recipes#Form-Interactions&quot;&gt;new recipe&lt;/a&gt; for details on how. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/386&quot;&gt;#386&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt;コマンドを使用して、ドラッグアンドドロップをテストできるようになりました。方法の詳細については、&lt;a href=&quot;recipes#Form-Interactions&quot;&gt;新しいレシピ&lt;/a&gt;を参照してください。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/386&quot;&gt;＃386を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f26bd8c55d1a6f05d12859bc42e204f28166f380" translate="yes" xml:space="preserve">
          <source>Testing file downloads is application specific.</source>
          <target state="translated">ファイルダウンロードのテストはアプリケーション固有のものです。</target>
        </trans-unit>
        <trans-unit id="6218432ce729be2532355a40274a692c0797ea06" translate="yes" xml:space="preserve">
          <source>Testing file uploads is application specific.</source>
          <target state="translated">ファイルアップロードのテストはアプリケーション固有のものです。</target>
        </trans-unit>
        <trans-unit id="9323db978d34c408e5948d20005b479de390a5c5" translate="yes" xml:space="preserve">
          <source>Testing how an application renders a drawing with Cypress and Percy</source>
          <target state="translated">Cypress と Percy を使ってアプリケーションがどのように図面をレンダリングするかをテストする</target>
        </trans-unit>
        <trans-unit id="820f2385c6bb09513ada4d656767795478210480" translate="yes" xml:space="preserve">
          <source>Testing in Cypress is all about &lt;strong&gt;readability&lt;/strong&gt; and &lt;strong&gt;simplicity&lt;/strong&gt;. You don&amp;rsquo;t have to do that much actual programming to get a lot done. You also don&amp;rsquo;t need to worry about keeping your code as DRY as possible. Test code serves a different purpose than app code. Understandability and debuggability should be prioritized above all else.</source>
          <target state="translated">サイプレスでのテストはすべて、&lt;strong&gt;可読性&lt;/strong&gt;と&lt;strong&gt;シンプルさ&lt;/strong&gt;についてです。たくさんのことを成し遂げるために実際のプログラミングをそれほどする必要はありません。また、コードをできるだけDRYに保つことを心配する必要もありません。テストコードはアプリコードとは異なる目的を果たします。理解可能性とデバッグ可能性は何よりも優先されるべきです。</target>
        </trans-unit>
        <trans-unit id="987fb38c63f084d377d5e8e7b83c17d2bebe4c2c" translate="yes" xml:space="preserve">
          <source>Testing log in when your app uses another provider via OAuth.</source>
          <target state="translated">アプリが OAuth を介して別のプロバイダを使用している場合のログインをテストします。</target>
        </trans-unit>
        <trans-unit id="a0af8ba8d2ce34d8769504c4e3a1a1f0f04fed61" translate="yes" xml:space="preserve">
          <source>Testing strategies</source>
          <target state="translated">テスト戦略</target>
        </trans-unit>
        <trans-unit id="19a78762a693323b4863f8b567d657f5448f8977" translate="yes" xml:space="preserve">
          <source>Testing this in Cypress is possible.</source>
          <target state="translated">サイプレスでのテストは可能です。</target>
        </trans-unit>
        <trans-unit id="9f0d65a8af0949e08dc54174556e334ee7dac2c3" translate="yes" xml:space="preserve">
          <source>Testing web navigation, DOM querying, and writing assertions.</source>
          <target state="translated">ウェブナビゲーション、DOM クエリのテスト、アサーションの記述。</target>
        </trans-unit>
        <trans-unit id="767dc218c420e0ddc259107428118fa4f0ee6115" translate="yes" xml:space="preserve">
          <source>Tests are more robust with much less flake.</source>
          <target state="translated">試験はより強固で、フレークがより少なくなります。</target>
        </trans-unit>
        <trans-unit id="612ac8c57ae50bf5a7484b94d7275d3b10ef625d" translate="yes" xml:space="preserve">
          <source>Tests in the Command Log now automatically expand when specific commands take longer than &lt;code&gt;1000ms&lt;/code&gt; to run. Previously when running more than 1 test we did not expand commands until a test failed. Now they will be expanded and automatically collapsed whenever a single command is taking a long time to finish.</source>
          <target state="translated">特定のコマンドの実行に &lt;code&gt;1000ms&lt;/code&gt; 以上かかる場合、コマンドログのテストが自動的に展開されるようになりました。以前は、複数のテストを実行する場合、テストが失敗するまでコマンドを展開しませんでした。これで、1つのコマンドが終了するまでに長い時間がかかるたびに、展開されて自動的に折りたたまれます。</target>
        </trans-unit>
        <trans-unit id="b0169128041b3957ed44e94d98d0829e14961c16" translate="yes" xml:space="preserve">
          <source>Tests run</source>
          <target state="translated">テストの実行</target>
        </trans-unit>
        <trans-unit id="0bbcaca79f1e7b9635d46bb164447d7de370801c" translate="yes" xml:space="preserve">
          <source>Tests should reload inside of Cypress faster when they are changed.</source>
          <target state="translated">テストが変更された場合、Cypress 内でのリロードが速くなるようにしました。</target>
        </trans-unit>
        <trans-unit id="bcd4c87389930f2e529910fcb4bcf95e4dbdfc41" translate="yes" xml:space="preserve">
          <source>Tests written in Cypress are easy to read and understand. Our API comes fully baked, on top of tools you are familiar with already.</source>
          <target state="translated">Cypress で書かれたテストは読みやすく、理解しやすいです。当社の API は、すでに使い慣れたツールに加えて、完全にベイクドされています。</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="0ab4fd8cd60aba5aadde57dad2f92ed39a5a6668" translate="yes" xml:space="preserve">
          <source>Text Content</source>
          <target state="translated">テキストの内容</target>
        </trans-unit>
        <trans-unit id="8b07c7a76738a0d0742c58a0fd9c4b096a90a2dd" translate="yes" xml:space="preserve">
          <source>Text Content:</source>
          <target state="translated">テキストの内容。</target>
        </trans-unit>
        <trans-unit id="c913e1fc617797e412febd0a9835387588be75fd" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may also include any of these modifier character sequences:</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; に渡されるテキストには、次の修飾文字シーケンスのいずれかが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="004ee48204cbf8f6e50a249678385dc28deeafd1" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may include any of the special character sequences below.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; に渡されるテキストには、以下の特殊文字シーケンスを含めることができます。</target>
        </trans-unit>
        <trans-unit id="500a2afe5961bdf6037b8c8c1a71294834e1855b" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may include any of the special character sequences below. These characters will pass along the correct &lt;code&gt;keyCode&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, and &lt;code&gt;which&lt;/code&gt; codes to any events issued during &lt;code&gt;.type()&lt;/code&gt;. Some of the special character sequences may perform actions during typing such as &lt;code&gt;{movetoend}&lt;/code&gt;, &lt;code&gt;{movetostart}&lt;/code&gt;, or &lt;code&gt;{selectall}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; に渡されるテキストには、以下の特殊文字シーケンスのいずれかを含めることができます。これらの文字は正しい沿って通過し &lt;code&gt;keyCode&lt;/code&gt; 、 &lt;code&gt;key&lt;/code&gt; 、および中に発行されたすべてのイベントにコード &lt;code&gt;.type()&lt;/code&gt; 。特殊文字シーケンスの一部のような入力時にアクションを実行することができる &lt;code&gt;{movetoend}&lt;/code&gt; 、 &lt;code&gt;{movetostart}&lt;/code&gt; 、または &lt;code&gt;{selectall}&lt;/code&gt; 。 &lt;code&gt;which&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faf6dd9f5ae7bd37c385bcaa86a34ff7cccc7efc" translate="yes" xml:space="preserve">
          <source>That is fine - but even if this is the case, it should not go in an &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hook. Why? So far we have been talking about logging out, but let&amp;rsquo;s use a different example. Let&amp;rsquo;s use the pattern of needing to reset your database.</source>
          <target state="translated">これは問題ありませんが、たとえそうであっても、 &lt;code&gt;after&lt;/code&gt; または &lt;code&gt;afterEach&lt;/code&gt; フックに入れるべきではありません。どうして？これまではログアウトについて説明してきましたが、別の例を使用してみましょう。データベースをリセットする必要があるパターンを使用してみましょう。</target>
        </trans-unit>
        <trans-unit id="ea2ff1b57db012138aa92fb7e611c0e7d4186bdd" translate="yes" xml:space="preserve">
          <source>That is it! In any other circumstance you will have flaky tests if you try to rely on the state of the DOM for conditional testing.</source>
          <target state="translated">以上です! 他のどんな状況でも、条件付きテストのために DOM の状態に頼ろうとすると、欠陥テストが発生します。</target>
        </trans-unit>
        <trans-unit id="1300f8ec5ea171cc2d2f00e23cbbc505627c6df6" translate="yes" xml:space="preserve">
          <source>That leaves most other commands including all DOM based commands to time out by default after 4000ms.</source>
          <target state="translated">これにより、すべての DOM ベースのコマンドを含む他のほとんどのコマンドは、4000ms 後にデフォルトでタイムアウトすることになります。</target>
        </trans-unit>
        <trans-unit id="3b9c1d4c4a52e35083bd36e43700ea84e4aa5c6b" translate="yes" xml:space="preserve">
          <source>That means that your event listener callbacks will be invoked, but don&amp;rsquo;t expect the browser to actually &amp;ldquo;do&amp;rdquo; anything for these events. For the most part, it shouldn&amp;rsquo;t matter, which is why &lt;code&gt;.trigger()&lt;/code&gt; is an excellent stop-gap if the command / event you&amp;rsquo;re looking for hasn&amp;rsquo;t been implemented yet.</source>
          <target state="translated">つまり、イベントリスナーコールバックが呼び出されますが、ブラウザーがこれらのイベントに対して実際に「何もしない」ことを期待しないでください。ほとんどの場合、問題はないはずです。そのため、探しているコマンド/イベントがまだ実装されていない場合、 &lt;code&gt;.trigger()&lt;/code&gt; は優れたストップギャップです。</target>
        </trans-unit>
        <trans-unit id="b94b5f5a01c6059a803e03e24028191a3878f6cc" translate="yes" xml:space="preserve">
          <source>That means you do not have to visit a login page, type in a username and password and wait for the page to load and/or redirect for every test you run. Cypress gives you the ability to take shortcuts and programmatically log in. With commands like &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;, you can send HTTP requests directly, yet have those requests synchronized with the browser. Cookies are automatically sent and applied back. Worried about CORS? Don&amp;rsquo;t be, it is completely bypassed. The power to choose when to test like a user and when to skip slow and repetitive parts is yours.</source>
          <target state="translated">つまり、ログインページにアクセスし、ユーザー名とパスワードを入力して、実行するすべてのテストでページが読み込まれるかリダイレクトされるまで待つ必要はありません。サイプレスは、ショートカットを取得してプログラムでログインする機能を提供します&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;などのコマンドを使用すると、HTTP要求を直接送信しながら、それらの要求をブラウザーと同期させることができます。Cookieは自動的に送信され、適用されます。CORSが心配ですか？しないでください、それは完全にバイパスされます。ユーザーのようにテストするタイミングと、低速で反復的な部分をスキップするタイミングを選択する力は、あなた次第です。</target>
        </trans-unit>
        <trans-unit id="ba33067743b99d97ffad5f5bd4b128afc17a4664" translate="yes" xml:space="preserve">
          <source>That said, modern web testing has a few wrinkles that every team experiences, so here are some quick tips on common situations you&amp;rsquo;re likely to run into.</source>
          <target state="translated">とは言え、最新のWebテストにはすべてのチームが経験するいくつかのしわがあるので、ここでは、遭遇する可能性が高い一般的な状況に関するいくつかの簡単なヒントを示します。</target>
        </trans-unit>
        <trans-unit id="0ec74667e0e561a8e38fb999b86e217be3516b2b" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! It couldn&amp;rsquo;t be simpler!</source>
          <target state="translated">それでおしまい！それはもっと簡単なことではありません！</target>
        </trans-unit>
        <trans-unit id="fefe48b45c69ed04e4712438e1f0ac95b90bfac1" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s no problem - you just have to reinstall them &lt;strong&gt;once&lt;/strong&gt; in the Cypress launched browser. We&amp;rsquo;ll continue to use this Cypress testing profile on subsequent launches so all of your configuration will be preserved.</source>
          <target state="translated">それは問題ありません- サイプレスが起動したブラウザで&lt;strong&gt;一度&lt;/strong&gt;再インストールする&lt;strong&gt;だけ&lt;/strong&gt;です。今後の起動では、このサイプレステストプロファイルを引き続き使用するため、すべての構成が保持されます。</target>
        </trans-unit>
        <trans-unit id="65a6fe73a977ff8262258084d334745480bb8a09" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why the test should be written like this.</source>
          <target state="translated">そのため、テストはこのように作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="042507a703992c18597517c49feab94f84062bfe" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Can&amp;rsquo;t start server&amp;rdquo; error displayed in the Desktop-GUI no longer prevents you from interacting in the Desktop App. It now displays as a warning. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/407&quot;&gt;#407&lt;/a&gt;.</source>
          <target state="translated">デスクトップGUIに表示される「サーバーを起動できません」エラーは、デスクトップアプリでの対話を妨げなくなりました。警告として表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/407&quot;&gt;＃407を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f1cec37857697fa0e206424fca893a94130d50b5" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;browser&amp;rdquo; argument can be set to &amp;ldquo;chrome&amp;rdquo;, &amp;ldquo;canary&amp;rdquo;, &amp;ldquo;chromium&amp;rdquo;, or &amp;ldquo;electron&amp;rdquo; to launch a browser detected on your system. Cypress will attempt to automatically find the installed browser for you.</source>
          <target state="translated">「browser」引数を「chrome」、「canary」、「chromium」、または「electron」に設定して、システムで検出されたブラウザーを起動できます。サイプレスはインストールされたブラウザを自動的に見つけようとします。</target>
        </trans-unit>
        <trans-unit id="1be9b25201f7ea05530acb9b484716955fcce74c" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;browser&amp;rdquo; option allows you to specify the path to a custom browser to use with Cypress:</source>
          <target state="translated">「ブラウザー」オプションでは、サイプレスで使用するカスタムブラウザーへのパスを指定できます。</target>
        </trans-unit>
        <trans-unit id="5cb2b71ccaaec730e76706cfb04ac5382bce55f4" translate="yes" xml:space="preserve">
          <source>The --ci-build-id, --group, or --parallel flags can only be used when recording</source>
          <target state="translated">ci-build-id,--group,--parallel フラグは録音時にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="10271412ed48e7b2c3a821760f7f3e21fdc28ef8" translate="yes" xml:space="preserve">
          <source>The 3rd party site may be having issues outside of your control.</source>
          <target state="translated">サードパーティーサイトは、あなたのコントロール外の問題を抱えている可能性があります。</target>
        </trans-unit>
        <trans-unit id="45fa958b109e3120bb7b68f4af8ae88f264bebe1" translate="yes" xml:space="preserve">
          <source>The 3rd party site may be running A/B campaigns.</source>
          <target state="translated">サードパーティーサイトでは、A/Bキャンペーンを実施している場合があります。</target>
        </trans-unit>
        <trans-unit id="69b160a0d513b1031830e4e9865539c67f783654" translate="yes" xml:space="preserve">
          <source>The 3rd party site may detect you are testing via a script and block you.</source>
          <target state="translated">サードパーティのサイトでは、スクリプトでテストしていることを検知してブロックしている可能性があります。</target>
        </trans-unit>
        <trans-unit id="4ea95e01a638b35f63d896c5a28cc82c06705c81" translate="yes" xml:space="preserve">
          <source>The 3rd party site may have changed or updated its content.</source>
          <target state="translated">第3者のサイトでは、内容が変更または更新されている場合があります。</target>
        </trans-unit>
        <trans-unit id="5d1329eeccee5ff8ee28e3dfe3710d40f17336ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; to a new page</source>
          <target state="translated">新しいページへの&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47ae6fd59bc7328ff982b66e65bc0fee55a59d11" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; type definition now allows for type &lt;code&gt;Date&lt;/code&gt;. Fixed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4106&quot;&gt;#4106&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;型の定義は現在、タイプすることができます &lt;code&gt;Date&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4106&quot;&gt;＃4106で&lt;/a&gt;修正されました。</target>
        </trans-unit>
        <trans-unit id="d6da30a23ecacb7c6f53a464950ef025c72a82e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; command is capable of accessing aliases with a special syntax using the &lt;code&gt;@&lt;/code&gt; character:</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;コマンドは、使用して特別な構文で別名にアクセスすることが可能である &lt;code&gt;@&lt;/code&gt; の文字を：</target>
        </trans-unit>
        <trans-unit id="7260030afa06bcb585f32c860d142af2d281f369" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/route&quot;&gt;Routes instrument panel&lt;/a&gt; now displays the column: &lt;code&gt;Stubbed&lt;/code&gt; instead of &lt;code&gt;Status&lt;/code&gt;, which indicates whether a route is stubbing matching XHR&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt;ルートのインストルメントパネルは&lt;/a&gt;：今、カラム表示 &lt;code&gt;Stubbed&lt;/code&gt; の代わりに &lt;code&gt;Status&lt;/code&gt; 、ルートはXHRのをマッチングスタブされているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="1c5a8a7995f1ebf4a272d577387cd9a18f7268d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; command allows us to pass a callback function that takes the yielded subject as its first argument. This works just like &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;, except Cypress automatically &lt;strong&gt;waits and retries&lt;/strong&gt; for everything inside of the callback function to pass.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;コマンドは、私たちは、最初の引数として得られた被写体をとりコールバック関数を渡すことができます。これは&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;と同じように機能します&lt;strong&gt;が、&lt;/strong&gt;サイプレスはコールバック関数内のすべてのものが渡されるのを自動的に&lt;strong&gt;待機して再試行&lt;/strong&gt;します。</target>
        </trans-unit>
        <trans-unit id="b76fbb9133c48e761b008ec73d333358dd278227" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; type definition now expects its &lt;code&gt;options&lt;/code&gt; to be &lt;code&gt;ObjectLike&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3809&quot;&gt;#3809&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt;型の定義は現在、その期待する &lt;code&gt;options&lt;/code&gt; あることを &lt;code&gt;ObjectLike&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3809&quot;&gt;＃3809で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="d31d8614c0301eace71fcf608f563b71e4402d1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;subject&lt;/a&gt; must be a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;対象は&lt;/a&gt;なければなりません &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbd572b69828dfbeee72d0c970b6599bba7aa480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; exposes APIs that enable you to:</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/test-runner#Selector-Playground&quot;&gt;セレクタ遊び場&lt;/a&gt;にあなたを可能にするAPIを公開します。</target>
        </trans-unit>
        <trans-unit id="d6109af2426a8ff9fc0ddb8ef114204a07285fe4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variable&lt;/a&gt; guide</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;環境変数&lt;/a&gt;ガイド</target>
        </trans-unit>
        <trans-unit id="22c468919272bac2becb72a65e7a98a73d01814e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variable&lt;/a&gt; guide explains the other ways you can set them &lt;em&gt;outside of your tests&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;環境変数の&lt;/a&gt;ガイドは、あなたがそれらを設定することができ、他の方法を説明し&lt;em&gt;、あなたのテストの外側を&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ee7e4f35bd6916f173438d20a40cb83c1418c07b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variables&lt;/a&gt; guide explains common use cases.</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;環境変数の&lt;/a&gt;ガイドは、一般的な使用例を説明します。</target>
        </trans-unit>
        <trans-unit id="3f63fbe806d11f13628dfbdcf2b758df62e75aa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variables&lt;/a&gt; guide explains the other ways you can set environment variables for your tests.</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;環境変数の&lt;/a&gt;ガイドは、あなたのテストのための環境変数を設定することができ、他の方法を説明します。</target>
        </trans-unit>
        <trans-unit id="855b7d4fc17c92cd8289f3dbaa220fd75eb0f9ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; now shows the new &lt;code&gt;VISIT&lt;/code&gt; action.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;コマンドログは&lt;/a&gt;新しい示し &lt;code&gt;VISIT&lt;/code&gt; のアクションを。</target>
        </trans-unit>
        <trans-unit id="3369a25eaeb1be1170e917a3e514d3c00d809840" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; automatically follows these best practices.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;セレクタ遊び場は、&lt;/a&gt;自動的にこれらのベストプラクティスに従っています。</target>
        </trans-unit>
        <trans-unit id="1f6dc7d06c52601c5e1fac7e400ab08f50a3cca6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; has been updated to automatically prefer &lt;code&gt;data-cy&lt;/code&gt;, &lt;code&gt;data-test&lt;/code&gt; or &lt;code&gt;data-testid&lt;/code&gt; attributes when providing the unique selector for an element. Additionally it now exposes a &lt;a href=&quot;../../api/cypress-api/selector-playground-api&quot;&gt;public API&lt;/a&gt; that you can use to control how it determines which selector to use. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1135&quot;&gt;#1135&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;セレクタ遊び場が&lt;/a&gt;好む自動的に更新された &lt;code&gt;data-cy&lt;/code&gt; 、 &lt;code&gt;data-test&lt;/code&gt; または &lt;code&gt;data-testid&lt;/code&gt; 要素のためのユニークなセレクタを提供する際の属性を。さらに、使用するセレクターを決定する方法を制御するために使用できる&lt;a href=&quot;../../api/cypress-api/selector-playground-api&quot;&gt;パブリックAPI&lt;/a&gt;を公開します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1135&quot;&gt;＃1135を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2f21854dc14b78084e411eb4e6ac148235bd66e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line&quot;&gt;CLI&lt;/a&gt; now respects config values and environment variables put in your &lt;code&gt;.npmrc&lt;/code&gt; file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1399&quot;&gt;#1399&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1853&quot;&gt;#1853&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;CLIは、&lt;/a&gt;今の点設定値と環境変数は、あなたの中に入れ &lt;code&gt;.npmrc&lt;/code&gt; のファイル。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1399&quot;&gt;＃1399&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1853&quot;&gt;＃1853を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="78c61758652d29d3d43e3f3b0b9eedd5f1d294cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;&amp;ndash;reporter&lt;/code&gt;&lt;/a&gt; CLI option is now working again.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;&amp;ndash;reporter&lt;/code&gt; &lt;/a&gt; CLIオプションは今再び取り組んでいます。</target>
        </trans-unit>
        <trans-unit id="f8272a960aafd2cbeb1d57e33c88e32d94109494" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line#cypress-run-browser-lt-browser-name-or-path-gt&quot;&gt;&lt;code&gt;&amp;ndash;browser&lt;/code&gt; argument&lt;/a&gt; of the &lt;a href=&quot;../guides/command-line&quot;&gt;Command Line&lt;/a&gt; and the &lt;a href=&quot;../guides/module-api#cypress-run&quot;&gt;&lt;code&gt;browser&lt;/code&gt; argument&lt;/a&gt; of the &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt; have been updated to allow passing a &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1026&quot;&gt;#1026&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run-browser-lt-browser-name-or-path-gt&quot;&gt; &lt;code&gt;&amp;ndash;browser&lt;/code&gt; 引数&lt;/a&gt;の&lt;a href=&quot;../guides/command-line&quot;&gt;コマンドライン&lt;/a&gt;と&lt;a href=&quot;../guides/module-api#cypress-run&quot;&gt; &lt;code&gt;browser&lt;/code&gt; 引数&lt;/a&gt;の&lt;a href=&quot;../guides/module-api&quot;&gt;モジュールAPIは&lt;/a&gt;合格できるように更新されました &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1026&quot;&gt;＃1026&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc0b589727b107f46af4cb4c541a290c2d4ae35f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; module can be &lt;code&gt;required&lt;/code&gt;&lt;/a&gt; in your own node projects to programmatically control Cypress the same way you would from the command line.</source>
          <target state="translated">&lt;a href=&quot;../guides/module-api&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; モジュールをすることができます &lt;code&gt;required&lt;/code&gt; &lt;/a&gt;てプログラムサイプレスあなたがコマンドラインからと同じ方法を制御するために、独自のノードプロジェクトで。</target>
        </trans-unit>
        <trans-unit id="88ac78f61a4bedaff09c94fe6303968173baeebb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt; now returns the &lt;code&gt;runUrl&lt;/code&gt; from &lt;code&gt;cypress.run()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2596&quot;&gt;#2596&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/module-api&quot;&gt;モジュールのAPIが&lt;/a&gt;返すようになりまし &lt;code&gt;runUrl&lt;/code&gt; から &lt;code&gt;cypress.run()&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2596&quot;&gt;＃2596を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="cf6ef20cff3aa3022180f65f7370d9d0c0269c22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;module API&lt;/a&gt; accepts &lt;code&gt;reporterOptions&lt;/code&gt; as an object literal like it does for the &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;config&lt;/code&gt; properties. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/899&quot;&gt;#899&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/module-api&quot;&gt;モジュールのAPIは&lt;/a&gt;受け入れ &lt;code&gt;reporterOptions&lt;/code&gt; を、それがためないように、オブジェクトリテラルとして &lt;code&gt;env&lt;/code&gt; および &lt;code&gt;config&lt;/code&gt; のプロパティ。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/899&quot;&gt;＃899を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="cb9399edca685c170760ae9bb154627f3edc1ddc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../tooling/reporters&quot;&gt;reporter&lt;/a&gt; used during &lt;code&gt;cypress run&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../tooling/reporters&quot;&gt;記者&lt;/a&gt;の間に使用される &lt;code&gt;cypress run&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7a8815937b1293c5c1f5d85a143bb7125f94687" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../tooling/reporters#Reporter-Options&quot;&gt;reporter options&lt;/a&gt; used. Supported options depend on the reporter.</source>
          <target state="translated">&lt;a href=&quot;../tooling/reporters#Reporter-Options&quot;&gt;レポーターのオプションが&lt;/a&gt;使用されます。サポートされるオプションはレポーターによって異なります。</target>
        </trans-unit>
        <trans-unit id="53804cc5358f78ec057779b7130a1abeba81d611" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;error-messages&quot;&gt;error message when Cypress detects that a test has ended early&lt;/a&gt; (there are still commands left in the queue) now displays a list of these commands with a much improved explanation.</source>
          <target state="translated">&lt;a href=&quot;error-messages&quot;&gt;サイプレスがテストが早期に終了したことを検出したとき&lt;/a&gt;のエラーメッセージ（まだキューにコマンドが残っている）は、これらのコマンドのリストを表示し、説明が大幅に改善されました。</target>
        </trans-unit>
        <trans-unit id="f9ac329aa1bc70b0ac5cd96526f421ae18aef391" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://api.jquery.com/Types/#jQuery&quot;&gt;jQuery element&lt;/a&gt; that you want to get the selector value for.</source>
          <target state="translated">&lt;a href=&quot;http://api.jquery.com/Types/#jQuery&quot;&gt;jQueryの要素&lt;/a&gt;あなたがのためのセレクタ値を取得したいということ。</target>
        </trans-unit>
        <trans-unit id="0b58ad7025878c6b78f82e08d87a14a6003ff6a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;subject&lt;/a&gt; must be a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;対象は&lt;/a&gt;なければなりません &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8136b8e56a18e858f237cccdc2659669bab0f251" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; exposes APIs that enable you to:</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Selector-Playground&quot;&gt;セレクタ遊び場&lt;/a&gt;にあなたを可能にするAPIを公開します。</target>
        </trans-unit>
        <trans-unit id="62b65b90a6490ab08697c934663e0936da9572a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variable&lt;/a&gt; guide</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;環境変数&lt;/a&gt;ガイド</target>
        </trans-unit>
        <trans-unit id="938108c23113328e76f859569633f729a3f5eac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variable&lt;/a&gt; guide explains the other ways you can set them &lt;em&gt;outside of your tests&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;環境変数の&lt;/a&gt;ガイドは、あなたがそれらを設定することができ、他の方法を説明し&lt;em&gt;、あなたのテストの外側を&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="99c08f03e531700a6c091c0712998f0c21a9ad02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variables&lt;/a&gt; guide explains common use cases.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;環境変数の&lt;/a&gt;ガイドは、一般的な使用例を説明します。</target>
        </trans-unit>
        <trans-unit id="34c2e8d5702477aaef6c3b8705259158dfdb536f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variables&lt;/a&gt; guide explains the other ways you can set environment variables for your tests.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;環境変数の&lt;/a&gt;ガイドは、あなたのテストのための環境変数を設定することができ、他の方法を説明します。</target>
        </trans-unit>
        <trans-unit id="fbdd1bb81c0e215f5db1092415e1b120338d03b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;Kitchen Sink&lt;/a&gt; and &lt;code&gt;example_spec.js&lt;/code&gt; have been updated to reflect the newest changes and features of &lt;code&gt;0.17.1&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;キッチンシンク&lt;/a&gt;と &lt;code&gt;example_spec.js&lt;/code&gt; はの最新の変更や機能を反映するように更新されました &lt;code&gt;0.17.1&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="424ce0cb0605e2e5a09526573836f577f276c631" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/cypress.schema.json&quot;&gt;JSON schema file&lt;/a&gt; used for &lt;a href=&quot;https://on.cypress.io/intelligent-code-completion#Configuration&quot;&gt;intelligent code completion&lt;/a&gt; for the Cypress configuration file has been updated to match our documentation.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/cypress.schema.json&quot;&gt;JSONスキーマファイル&lt;/a&gt;に使用&lt;a href=&quot;https://on.cypress.io/intelligent-code-completion#Configuration&quot;&gt;インテリセンス&lt;/a&gt;サイプレス設定ファイルのは、私たちのドキュメントと一致するように更新されました。</target>
        </trans-unit>
        <trans-unit id="57d103b3c8a16c34ca59cbdbc7cdbfb17d28b855" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt; is a service that gives you access to recorded tests - typically when running Cypress tests from your &lt;a href=&quot;../guides/continuous-integration&quot;&gt;CI provider&lt;/a&gt;. The Dashboard provides you insight into what happened when your tests ran.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;サイプレスDashboardは&lt;/a&gt;あなたからサイプレステストを実行するとき、通常-あなたは記録のテストへのアクセスを提供するサービスである&lt;a href=&quot;../guides/continuous-integration&quot;&gt;CIプロバイダ&lt;/a&gt;。ダッシュボードは、テストの実行時に何が起こったかについての洞察を提供します。</target>
        </trans-unit>
        <trans-unit id="f03e8e973bc635caee6b5976e40bb423bb40d392" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt; enables you to view your recorded runs, manage projects, create organizations, invite users and set permissions.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;ダッシュボードには、&lt;/a&gt;あなたが、あなたの記録の実行を表示プロジェクトを管理、組織を作成し、ユーザーとセット許可を招待することができます。</target>
        </trans-unit>
        <trans-unit id="d6fa6a40a4314b29795b77940ebf6a3e2617e65b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; npm package&lt;/a&gt; now checks the currently installed version on &lt;code&gt;install&lt;/code&gt; and &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; and does not re-install Cypress if it is already installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/396&quot;&gt;#396&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; NPMパッケージは、&lt;/a&gt;今現在インストールされているバージョンチェック &lt;code&gt;install&lt;/code&gt; して&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt;、それがすでにインストールされている場合はサイプレスをして、再度インストールしませんが。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/396&quot;&gt;＃396を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9569367021c0f5bc9bf4cc681504592c8ee282dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/cypress-cli&quot;&gt;&lt;code&gt;cypress-cli&lt;/code&gt; npm package&lt;/a&gt; has been deprecated. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/316&quot;&gt;#316&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/cypress-cli&quot;&gt; &lt;code&gt;cypress-cli&lt;/code&gt; NPMパッケージが&lt;/a&gt;廃止されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/316&quot;&gt;＃316を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="41206f8abe72a1550e1a526c0fe07fadc405e902" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; shows both commands and assertions with passing assertions showing in green.</source>
          <target state="translated">&lt;a href=&quot;test-runner#Command-Log&quot;&gt;コマンドログは&lt;/a&gt;緑色で示したアサーションを渡すと、コマンドとアサーションの両方を示しています。</target>
        </trans-unit>
        <trans-unit id="33ff5c94b1e2a8e0b6dfaa5cdd075805268e673e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;types&quot;&lt;/code&gt; will tell the TypeScript compiler to only include type definitions from Cypress. This will address instances where the project also uses &lt;code&gt;@types/chai&lt;/code&gt; or &lt;code&gt;@types/jquery&lt;/code&gt;. Since &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; and &lt;a href=&quot;../references/bundled-tools#Other-Library-Utilities&quot;&gt;jQuery&lt;/a&gt; are namespaces (globals), incompatible versions will cause the package manager (&lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;npm&lt;/code&gt;) to nest and include multiple definitions and cause conflicts.</source>
          <target state="translated">&lt;code&gt;&quot;types&quot;&lt;/code&gt; のみサイプレスからタイプ定義を含めるように活字体コンパイラを教えてくれます。これは、プロジェクトが &lt;code&gt;@types/chai&lt;/code&gt; または &lt;code&gt;@types/jquery&lt;/code&gt; も使用するインスタンスに対処します。以来&lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;チャイ&lt;/a&gt;と&lt;a href=&quot;../references/bundled-tools#Other-Library-Utilities&quot;&gt;jQueryの&lt;/a&gt;名前空間（グローバル）されている、互換性のないバージョンでは、パッケージマネージャ（原因となる &lt;code&gt;yarn&lt;/code&gt; や &lt;code&gt;npm&lt;/code&gt; 入れ子にする）と、複数の定義と原因の競合が含まれています。</target>
        </trans-unit>
        <trans-unit id="e32f0411f34f26707ececffb5f88e36e3221840d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ci-build-id&lt;/code&gt; flag is used to either group or parallelize multiple runs together.</source>
          <target state="translated">&lt;code&gt;--ci-build-id&lt;/code&gt; フラグがいずれかのグループに使用されるか、または一緒に複数の実行を並列化されます。</target>
        </trans-unit>
        <trans-unit id="44eeb2a207152e869b8bea3c9a031509a4adbe25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ci-build-id&lt;/code&gt;, &lt;code&gt;--group&lt;/code&gt;, or &lt;code&gt;--parallel&lt;/code&gt; flags can only be used when recording</source>
          <target state="translated">&lt;code&gt;--ci-build-id&lt;/code&gt; 、 &lt;code&gt;--group&lt;/code&gt; 、又は &lt;code&gt;--parallel&lt;/code&gt; フラグを記録するときにのみ使用することができます</target>
        </trans-unit>
        <trans-unit id="043a9756e0778be585824f05b0212c11215f0e17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--silent&lt;/code&gt; flag should now be respected during &lt;code&gt;npm install cypress&lt;/code&gt; on all OSes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/817&quot;&gt;#817&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--silent&lt;/code&gt; フラグは、今の間に尊重されるべきである &lt;code&gt;npm install cypress&lt;/code&gt; すべてのOS上で。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/817&quot;&gt;＃817を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="09ff12ab5069dfb91af35ee8b5e56de69f1971ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--spec&lt;/code&gt; option is now normalized against the current working directory &lt;code&gt;cwd&lt;/code&gt; instead of the project that you are running Cypress in. That means passing a path from the command line to a spec file will now work even when the project path is not &lt;code&gt;cwd&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1159&quot;&gt;#1159&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--spec&lt;/code&gt; オプションは、現在の作業ディレクトリに対して正規化された &lt;code&gt;cwd&lt;/code&gt; あなたはサイプレスを実行していることをプロジェクトの代わりに。プロジェクトパスがされていない場合でも、スペックファイルにコマンドラインからのパスを渡す手段が今動作すること &lt;code&gt;cwd&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1159&quot;&gt;＃1159を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="30e277b186a082f5b8bce2da885a46971e208804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--spec&lt;/code&gt; option now works correctly. You now must pass a relative or absolute path to your spec file. This is much less confusing, allows you to easily autocomplete entries from bash, and will support &lt;code&gt;unitFolder&lt;/code&gt; later when it&amp;rsquo;s added. Assuming you want to run a spec file that is located in &lt;code&gt;cypress/integration/foo_spec.js&lt;/code&gt; you would pass: &lt;code&gt;cypress run --spec 'cypress/integration/foo_spec.js'&lt;/code&gt;. Previously you could just pass &lt;code&gt;--spec foo_spec.js&lt;/code&gt; which now no longer works (and was broken anyway). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/120&quot;&gt;#120&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; または &lt;code&gt;--spec&lt;/code&gt; オプションが正しく動作するようになりました。ここで、スペックファイルに相対パスまたは絶対パスを渡す必要があります。これは混乱がはるかに少なく、bashからエントリを簡単にオートコンプリートすることができ、後で追加された &lt;code&gt;unitFolder&lt;/code&gt; をサポートします。 &lt;code&gt;cypress/integration/foo_spec.js&lt;/code&gt; にあるスペックファイルを実行する場合、次のように渡します： &lt;code&gt;cypress run --spec 'cypress/integration/foo_spec.js'&lt;/code&gt; 。以前は &lt;code&gt;--spec foo_spec.js&lt;/code&gt; を渡すことができましたが、現在は機能していません（とにかく壊れていました）。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/120&quot;&gt;＃120を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4b8adb1081d10255096dd62976255ee26bd91555" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command may also be fired with key modifiers in combination with the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command in order to simulate character sequences while clicking, such as &lt;code&gt;ALT + click&lt;/code&gt;. In order to keep the modifier key active, &lt;code&gt;{release: false}&lt;/code&gt; should be passed to the options of the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; コマンドは、との組み合わせでキー修飾子で焼成してもよい&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;のような、クリックしながら、シミュレート文字列に順にコマンド &lt;code&gt;ALT + click&lt;/code&gt; 。修飾キーをアクティブに保つには、 &lt;code&gt;{release: false}&lt;/code&gt; &lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;コマンドのオプションに{release：false}を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="6f7b3f498b8757ad79ab4be5c015a892d23a15e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while clicking, such as &lt;code&gt;ALT + click&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; コマンドものような、クリックしながら、キーの組み合わせを保持してシミュレートするために、修飾キーで焼成してもよい &lt;code&gt;ALT + click&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="063ad032ddddf455cf82727b73ab8673b62c65a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command will automatically wait until multiple built-in assertion checks like these pass, and then it will attempt to click just once.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; コマンドは、自動的に内蔵されたアサーションチェックこれらのパスのように、複数になるまで待機します、そしてそれは一度だけクリックしようとします。</target>
        </trans-unit>
        <trans-unit id="70e519f352ed6ae4abc18571991a2b7de3a99b80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.dblclick()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while double clicking, such as &lt;code&gt;SHIFT + double click&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; コマンドは、キーの組み合わせを保持してシミュレートするために、修飾キーで発射することができるようなダブルクリック、しばらく &lt;code&gt;SHIFT + double click&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="550c4b5ffe42c6bf012845dba6df28e2e12ee5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.rightclick()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while right clicking, such as &lt;code&gt;ALT + rightclick&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.rightclick()&lt;/code&gt; コマンドは、キーの組み合わせを保持してシミュレートするためにキー修飾子を用いて焼成することができるような右クリック、一方 &lt;code&gt;ALT + rightclick&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db5c80bfb7ceeed915785b70debfbf07aec2fff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.shouldBeVisible()&lt;/code&gt; custom command isn&amp;rsquo;t worth the trouble or abstraction when it&amp;rsquo;s already as simple as typing: &lt;code&gt;.should('be.visible')&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.shouldBeVisible()&lt;/code&gt; カスタムコマンドには、タイピングのように、単純なようだすでに際のトラブルや抽象価値がない： &lt;code&gt;.should('be.visible')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb2b2e1a0c076d3d149f58db0f51fc1e9da22f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.shouldBeVisible()&lt;/code&gt; custom command isn&amp;rsquo;t worth the trouble or abstraction when you can already use: &lt;code&gt;.should('be.visible')&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.shouldBeVisible()&lt;/code&gt; カスタムコマンドがトラブルか、すでに使用できる抽象価値はありません。 &lt;code&gt;.should('be.visible')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98125cfaed04874547ce6ee322782dcab25e61ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;1x&lt;/code&gt;, &lt;code&gt;2x&lt;/code&gt;, &lt;code&gt;4x&lt;/code&gt; group prefix used here is an adopted convention to indicate the level of parallelism for each run, and &lt;em&gt;is not required or essential&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;1x&lt;/code&gt; 、 &lt;code&gt;2x&lt;/code&gt; 、 &lt;code&gt;4x&lt;/code&gt; のグループの接頭辞は、ここで使用される各実行のための並列処理のレベルを示すために採用した大会で、&lt;em&gt;必要または必須ではありません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="46225bb45e238c99bcdc7d8274950fa51f8d975e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env option has been removed in favor of the &lt;code&gt;debug&lt;/code&gt; module and &lt;a href=&quot;../guides/command-line#Debugging-commands&quot;&gt;&lt;code&gt;DEBUG=cypress:*&lt;/code&gt;&lt;/a&gt; usage.</source>
          <target state="translated">&lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; の ENVオプションはの賛成で削除された &lt;code&gt;debug&lt;/code&gt; モジュールと&lt;a href=&quot;../guides/command-line#Debugging-commands&quot;&gt; &lt;code&gt;DEBUG=cypress:*&lt;/code&gt; &lt;/a&gt;の使用。</target>
        </trans-unit>
        <trans-unit id="6f5844326f3b3e375be74d9d6317c78453492e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CYPRESS_VERSION&lt;/code&gt; environment variable is gone because now the version of the binary is controlled by the npm module version. If for some reason you want to download the binary of a different version you can use the new &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; environment variable - but you&amp;rsquo;ll get a warning message when the versions don&amp;rsquo;t match.</source>
          <target state="translated">&lt;code&gt;CYPRESS_VERSION&lt;/code&gt; のバイナリの今バージョンはNPMモジュールのバージョンによって制御されるため、環境変数がなくなっています。何らかの理由で別のバージョンのバイナリをダウンロードしたい場合は、新しい &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 環境変数を使用できますが、バージョンが一致しない場合は警告メッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="e5011852afde7df403868c3466295cfe652b2d3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Linux&lt;/code&gt; version of Cypress now works correctly for GUI Desktop versions (tested on Ubuntu Desktop). Previously it would only worked during &lt;code&gt;cypress run&lt;/code&gt; in server versions. The &lt;code&gt;tray&lt;/code&gt; used in OSX does not work with the &lt;code&gt;Linux&lt;/code&gt;, so in &lt;code&gt;Linux&lt;/code&gt; we just use a standard window + menu.</source>
          <target state="translated">&lt;code&gt;Linux&lt;/code&gt; サイプレスのバージョンは現在、GUIデスクトップ版（Ubuntuのデスクトップ上でテスト）のために正しく動作します。以前は、サーバーバージョンでの &lt;code&gt;cypress run&lt;/code&gt; 中にのみ機能しました。 &lt;code&gt;tray&lt;/code&gt; OSXで使用するには動作しません &lt;code&gt;Linux&lt;/code&gt; では、そうでは &lt;code&gt;Linux&lt;/code&gt; の私達はちょうど標準のウィンドウ+メニューを使用します。</target>
        </trans-unit>
        <trans-unit id="6b9dbead8280cc73432d72db75d4745f240556bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VISIT&lt;/code&gt; displays a &lt;strong&gt;blue pending state&lt;/strong&gt; until the page finishes loading.</source>
          <target state="translated">&lt;code&gt;VISIT&lt;/code&gt; のディスプレイ&lt;strong&gt;青保留状態&lt;/strong&gt;のページが終了するの読み込みまで。</target>
        </trans-unit>
        <trans-unit id="1dd2a1a80c2da68ac838583516aa38396e181f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__cypress.initial&lt;/code&gt; cookie should now be removed during any &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, which should fix some edge cases with the proxy accidentally injecting content when it shouldn&amp;rsquo;t. We also added a ton more e2e tests covering these edge cases and other behavior.</source>
          <target state="translated">&lt;code&gt;__cypress.initial&lt;/code&gt; クッキーは今どんな時に除去されなければならない&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;するとき、それはいけない、プロキシが誤ってコンテンツを注入すると、いくつかのエッジケースを修正する必要があり、。また、これらのエッジケースやその他の動作をカバーするe2eテストをさらに追加しました。</target>
        </trans-unit>
        <trans-unit id="daf8f5c114743a6ad859bf6d6e8f7dff388c080a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after:run&lt;/code&gt; event fires after a run is finished. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;after:run&lt;/code&gt; 実行が終了した後にイベントが発生します。このイベントは、 &lt;code&gt;cypress run&lt;/code&gt; を介して実行されている場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="c2581819beffec1be3cd9651d1c0427aa689e7b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after:spec&lt;/code&gt; event fires after a spec file is run. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;after:spec&lt;/code&gt; スペックファイルの後にイベントが発生しますが実行されます。このイベントは、 &lt;code&gt;cypress run&lt;/code&gt; を介して実行されている場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="6bfe4cb6c9e9f7a2ff4e7b5632ce48eff7cd26cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before:run&lt;/code&gt; event fires before a run starts. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;before:run&lt;/code&gt; 、実行を開始する前に、イベントが発生します。このイベントは、 &lt;code&gt;cypress run&lt;/code&gt; を介して実行されている場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="bf468fdd59ff7be0e5ec2caa895f89d5b107723e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before:spec&lt;/code&gt; event fires before a spec file is run. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;before:spec&lt;/code&gt; スペックファイルの前にイベント火災が実行されます。このイベントは、 &lt;code&gt;cypress run&lt;/code&gt; を介して実行されている場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="bd21065e604d16761bbd7ccfafc6fd4e5f8878fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blackout&lt;/code&gt; argument passed in via &lt;a href=&quot;../commands/screenshot#Arguments&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&amp;ldquo;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;blackout&lt;/code&gt; 経由で渡される引数&lt;a href=&quot;../commands/screenshot#Arguments&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; 「&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4967ffcb21a340a6a01361a7852171c5f58d68d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;button&lt;/code&gt; element is yielded</source>
          <target state="translated">&lt;code&gt;button&lt;/code&gt; 要素をもたらしています</target>
        </trans-unit>
        <trans-unit id="eabefb6080c3d4b47507ca37237114e43fda7e8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ciBuildId&lt;/code&gt; is automatically detected if you are running Cypress in most &lt;a href=&quot;../guides/continuous-integration#Examples&quot;&gt;CI providers&lt;/a&gt;. Please review the &lt;a href=&quot;../guides/parallelization#CI-Build-ID-environment-variables-by-provider&quot;&gt;natively recognized environment variables&lt;/a&gt; for your CI provider.</source>
          <target state="translated">&lt;code&gt;ciBuildId&lt;/code&gt; は、あなたが最もにサイプレスを実行している場合、自動的に検出された&lt;a href=&quot;../guides/continuous-integration#Examples&quot;&gt;CIプロバイダ&lt;/a&gt;。CIプロバイダーの&lt;a href=&quot;../guides/parallelization#CI-Build-ID-environment-variables-by-provider&quot;&gt;ネイティブに認識された環境変数&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="e37f910d367fbd5f303f01cbba5bd5998da27d4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; event now properly fires on &lt;code&gt;file&lt;/code&gt; when manually closing the browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1560&quot;&gt;#1560&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; イベントが正しくに発射し &lt;code&gt;file&lt;/code&gt; を手動ブラウザを閉じるとき。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1560&quot;&gt;＃1560を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9c96ee1c486e67f1cf2d1e8ccf94af0c5fef0970" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; object also includes the following extra values that are not part of the standard configuration. &lt;strong&gt;These values are read only and cannot be modified from the plugins file.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; オブジェクトは、標準構成の一部ではない以下の余分な値を含んでいます。&lt;strong&gt;これらの値は読み取り専用であり、プラグインファイルから変更することはできません。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d97dddea49f484c9f666e123441557cdabf1eaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contain&lt;/code&gt; assertion chainer from &lt;code&gt;chai-jquery&lt;/code&gt; has been extended to match the same selector logic as &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; - meaning it now checks the &lt;code&gt;value&lt;/code&gt; of &lt;code&gt;input[type=submit]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;contain&lt;/code&gt; からアサーションチェイナ &lt;code&gt;chai-jquery&lt;/code&gt; と同じセレクタ論理と一致するように拡張されている&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;チェック今それを意味する- &lt;code&gt;value&lt;/code&gt; の &lt;code&gt;input[type=submit]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40b8f07ad3eb8b4e9318ceffd2c25ecf2a1bddec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cy.now()&lt;/code&gt; command is an internal command and may change in the future.</source>
          <target state="translated">&lt;code&gt;cy.now()&lt;/code&gt; コマンドは、内部コマンドであり、将来的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="762732ec80ffe579ad3ccf14d5b85b189cfc61c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cy&lt;/code&gt; object is bound to each individual test. Events bound to &lt;code&gt;cy&lt;/code&gt; will &lt;strong&gt;automatically&lt;/strong&gt; be removed when the test ends. You don&amp;rsquo;t have to worry about cleanup, and your event listeners will only be called for the duration of the single test.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; オブジェクトは、個々のテストにバインドされています。 &lt;code&gt;cy&lt;/code&gt; にバインドされたイベントは、テストが終了すると&lt;strong&gt;自動的&lt;/strong&gt;に削除されます。クリーンアップについて心配する必要はありません。イベントリスナーは、単一のテストの間だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e0ddc08028d5b2d6b7847239cc1c09aa5b1f03da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cypress ci&lt;/code&gt; command has been deprecated</source>
          <target state="translated">&lt;code&gt;cypress ci&lt;/code&gt; コマンドが廃止されました</target>
        </trans-unit>
        <trans-unit id="da72614877d452a5438247d1993f841f5cb7d34c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cypress&lt;/code&gt; npm package now has the correct &lt;code&gt;engines&lt;/code&gt; set in &lt;code&gt;package.json&lt;/code&gt;. This was accidentally getting overwritten and caused errors when &lt;code&gt;engineStrict&lt;/code&gt; was set in environments using &lt;code&gt;node&lt;/code&gt; older than &lt;code&gt;8.2.1&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1373&quot;&gt;#1373&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress&lt;/code&gt; NPMパッケージが正しい持ち &lt;code&gt;engines&lt;/code&gt; に設定 &lt;code&gt;package.json&lt;/code&gt; を。 &lt;code&gt;8.2.1&lt;/code&gt; より前の &lt;code&gt;node&lt;/code&gt; を使用する環境で &lt;code&gt;engineStrict&lt;/code&gt; が設定されている場合、これが誤って上書きされてエラーが発生しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1373&quot;&gt;＃1373を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8cab61747885842a8f18b61546f3bf695d1c16e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data-cy&lt;/code&gt; attribute will not change from CSS style or JS behavioral changes, meaning it&amp;rsquo;s not coupled to the &lt;strong&gt;behavior&lt;/strong&gt; or &lt;strong&gt;styling&lt;/strong&gt; of an element.</source>
          <target state="translated">&lt;code&gt;data-cy&lt;/code&gt; 属性は、それに結合されていないという意味、CSSスタイルやJS行動の変化から変更されません&lt;strong&gt;行動&lt;/strong&gt;や&lt;strong&gt;スタイリング&lt;/strong&gt;要素の。</target>
        </trans-unit>
        <trans-unit id="e9302ffb632f7759378030d24e5769c551ef97fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;example_spec.js&lt;/code&gt; file that gets seeded on a new project no longer fails on &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/414&quot;&gt;#414&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;example_spec.js&lt;/code&gt; の新しいプロジェクトに播種しますファイルは、もはやに失敗し&lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/414&quot;&gt;＃414を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b78733791e2eef9567e667ecd468930a65f594d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; object passed to the callback function has the following properties:</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; コールバック関数に渡されたオブジェクトは、次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="052bc12176eb387ef261b7c38e9f2921641685aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; object passed to the callback function is an &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;Event Emitter&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; コールバック関数に渡されたオブジェクトがある&lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;イベント・エミッター&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab13214b3de1bf10b4be9e1c5b6c605fb7104e91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;includes&lt;/code&gt; assertion chainers now correctly work the same as &lt;code&gt;contain&lt;/code&gt; and &lt;code&gt;contains&lt;/code&gt; assertion chainers. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;#4833&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; と &lt;code&gt;includes&lt;/code&gt; アサーションchainersが正しくと同じように働く &lt;code&gt;contain&lt;/code&gt; と &lt;code&gt;contains&lt;/code&gt; アサーションchainersを。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;＃4833を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d585f72eba1877827974f6d07bab61ed42d3c32d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nyc&lt;/code&gt; and &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; only instrument the application code and not 3rd party dependencies from &lt;code&gt;node_modules&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nyc&lt;/code&gt; と &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; からのみ、機器、アプリケーション・コードではなく、サードパーティの依存関係 &lt;code&gt;node_modules&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8ef2e4215ce34afc26973dfcddb79af11b61795" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; that has the &lt;code&gt;method&lt;/code&gt; to be replaced.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がある &lt;code&gt;method&lt;/code&gt; 交換します。</target>
        </trans-unit>
        <trans-unit id="fa87337659ecf6f626ddfb0f5f234dff0425e19a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; that has the &lt;code&gt;method&lt;/code&gt; to be wrapped.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がある &lt;code&gt;method&lt;/code&gt; ラップされます。</target>
        </trans-unit>
        <trans-unit id="64ee58e2ef1b91755a13f5dcecdae2e7e19ea678" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onBeforeScreenshot&lt;/code&gt; and &lt;code&gt;onAfterScreenshot&lt;/code&gt; callbacks provide an opportunity to synchronously change the DOM to create a more consistent state for the screenshot.</source>
          <target state="translated">&lt;code&gt;onBeforeScreenshot&lt;/code&gt; と &lt;code&gt;onAfterScreenshot&lt;/code&gt; コールバックは同期のスクリーンショットのために、より一貫性の状態を作成するために、DOMを変更する機会を提供します。</target>
        </trans-unit>
        <trans-unit id="9cfb7f4e385fce64e67f24a24b145867511b78ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onChange&lt;/code&gt; event callback for React now works (again) on &lt;code&gt;input&lt;/code&gt; type &lt;code&gt;number&lt;/code&gt; or &lt;code&gt;email&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/816&quot;&gt;#816&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/770&quot;&gt;#770&lt;/a&gt;.</source>
          <target state="translated">React の &lt;code&gt;onChange&lt;/code&gt; イベントコールバックが、（再び） &lt;code&gt;input&lt;/code&gt; タイプ &lt;code&gt;number&lt;/code&gt; または &lt;code&gt;email&lt;/code&gt; で機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/816&quot;&gt;＃816&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/770&quot;&gt;＃770を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a8e4a18a77addd421bf47f34a9ccc7dbc68b4a8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onConsole&lt;/code&gt; information related to an XHR has been updated to make it easier to understand why a route was or was not stubbed, and its associated request and response headers.</source>
          <target state="translated">&lt;code&gt;onConsole&lt;/code&gt; の XHRに関連した情報は、ルートがあったか、またはスタブ、およびそれに関連するリクエストとレスポンスヘッダなかった理由、それは容易に理解するために作るように更新されました。</target>
        </trans-unit>
        <trans-unit id="c6604feee55fbaf272de5bf1af41cff42af8bbcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pluginsFile&lt;/code&gt; now supports an absolute path instead of just a relative one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1837&quot;&gt;#1837&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pluginsFile&lt;/code&gt; は今だけでなく、相対1の絶対パスをサポートしています。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1837&quot;&gt;＃1837を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3bcba02b0569457fff68717bd919b31b6b705f34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prevSubject&lt;/code&gt; accepts the following values:</source>
          <target state="translated">&lt;code&gt;prevSubject&lt;/code&gt; は、以下の値を受け付けます。</target>
        </trans-unit>
        <trans-unit id="0b0a9e330363566e36f525bfc270f9b6fcce68b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projectId&lt;/code&gt; in now displayed in the configuration in the Test Runner settings like all other configuration values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4500&quot;&gt;#4500&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;projectId&lt;/code&gt; 今では、他のすべての設定値などのテストランナーの設定での構成に表示しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4500&quot;&gt;＃4500を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b181b8b380eb43c7ae2b0e325431d558b459f24f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projectId&lt;/code&gt; is a 6 character string in your &lt;code&gt;cypress.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;projectId&lt;/code&gt; あなたの中に6文字の文字列である &lt;code&gt;cypress.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42765373465d4545e353b081cc42f44a711e296e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirectedToUrl&lt;/code&gt; property is a special Cypress property that normalizes the URL the browser would normally follow during a redirect.</source>
          <target state="translated">&lt;code&gt;redirectedToUrl&lt;/code&gt; のプロパティは、ブラウザが正常にリダイレクト中にたどるURLを正規化し、特殊なサイプレスプロパティです。</target>
        </trans-unit>
        <trans-unit id="668eca0dcf90d4d829112b3d5b89a66fcdec89ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reporter&lt;/code&gt; can now be resized. We persist this state locally so it should &amp;ldquo;stick&amp;rdquo; between browser launches / app restarts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/204&quot;&gt;#204&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;reporter&lt;/code&gt; 今リサイズすることができます。この状態をローカルに保持するため、ブラウザーの起動とアプリの再起動の間で「固定」されるはずです。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/204&quot;&gt;＃204を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4c3cb66ac6d9b1de6b74e7894fa4fa33571ee979" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routeHandler&lt;/code&gt; defines what will happen with a request if the &lt;a href=&quot;#routeMatcher-RouteMatcher&quot;&gt;`routeMatcher`&lt;/a&gt; matches. It can be used to &lt;a href=&quot;#Stubbing-a-response&quot;&gt;statically define a response&lt;/a&gt; for matching requests, or a function can be passed to &lt;a href=&quot;#Intercepting-a-request&quot;&gt;dynamically intercept the outgoing request&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;routeHandler&lt;/code&gt; があれば、要求に何が起こるかを定義し&lt;a href=&quot;#routeMatcher-RouteMatcher&quot;&gt;`routeMatcher`が&lt;/a&gt;一致しました。一致するリクエストの&lt;a href=&quot;#Stubbing-a-response&quot;&gt;応答&lt;/a&gt;を静的に定義するために使用したり、関数を渡して&lt;a href=&quot;#Intercepting-a-request&quot;&gt;発信リクエスト&lt;/a&gt;を動的にインターセプトしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="03124703c0ad29e37f8b4ef25df3f3bca3e798bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;supportFolder&lt;/code&gt; option was removed from Cypress in version &lt;a href=&quot;changelog#0-18-0&quot;&gt;&lt;code&gt;0.18.0&lt;/code&gt;&lt;/a&gt; and was replaced by module support and the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">&lt;code&gt;supportFolder&lt;/code&gt; のオプションは、バージョンにサイプレスから削除された&lt;a href=&quot;changelog#0-18-0&quot;&gt; &lt;code&gt;0.18.0&lt;/code&gt; &lt;/a&gt;とモジュールのサポートと置き換えられました&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; の&lt;/a&gt;設定オプション。</target>
        </trans-unit>
        <trans-unit id="dfeb06f53eff6ab5252769c37896097dc747f94c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; or text content of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; to be selected.</source>
          <target state="translated">選択する &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; の &lt;code&gt;value&lt;/code&gt; またはテキストコンテンツ。</target>
        </trans-unit>
        <trans-unit id="1b8a61c4209d89efa493d0ead6343e9969628fcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;watchForFileChanges&lt;/code&gt; property is only in effect when running Cypress using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;watchForFileChanges&lt;/code&gt; の使用サイプレスを実行しているときに、プロパティにのみ有効である&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fecf04c2f6948f8610e27add339db0cedcba4851" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whitelist&lt;/code&gt; callback function of &lt;a href=&quot;../../api/cypress-api/cookies#Defaults&quot;&gt;&lt;code&gt;Cypress.Cookies.defaults()&lt;/code&gt;&lt;/a&gt; now receives a &lt;code&gt;cookie object&lt;/code&gt; instead of just the &lt;code&gt;cookies name&lt;/code&gt; as a string.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cookies#Defaults&quot;&gt; &lt;code&gt;Cypress.Cookies.defaults()&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;whitelist&lt;/code&gt; コールバック関数は、 &lt;code&gt;cookies name&lt;/code&gt; だけではなく、 &lt;code&gt;cookie object&lt;/code&gt; を文字列として受け取るようになりました。</target>
        </trans-unit>
        <trans-unit id="ee83369615eb53c7a0cbfc50a828a09c40b458e6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;total&lt;/em&gt; amount of time Cypress will wait for &lt;em&gt;all&lt;/em&gt; of the assertions to pass is for the duration of the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;timeout&lt;/code&gt; (which is 4 seconds).</source>
          <target state="translated">&lt;em&gt;総&lt;/em&gt;時間サイプレスの量が待つであろう&lt;em&gt;すべての&lt;/em&gt;パスにアサーションの継続時間である&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;timeout&lt;/code&gt; （4秒）。</target>
        </trans-unit>
        <trans-unit id="4e160536966d7accaad011259f2eda48b6c0b432" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;before&lt;/strong&gt; snapshot is taken prior to the click event firing. The &lt;strong&gt;after&lt;/strong&gt; snapshot is taken immediately after the click event. Although this click event caused our browser to load a new page, it&amp;rsquo;s not an instantaneous transition. Depending on how fast your page loaded, you may still see the same page, or a blank screen as the page is unloading and in transition.</source>
          <target state="translated">&lt;strong&gt;前&lt;/strong&gt;のスナップショットは、クリックイベントを発火する前に取られます。&lt;strong&gt;後の&lt;/strong&gt;スナップショットは、クリックイベントの直後に取られています。このクリックイベントによってブラウザに新しいページが読み込まれましたが、これは瞬間的な遷移ではありません。ページの読み込み速度によっては、ページがアンロードされて移行中であっても、同じページが表示されるか、空白の画面が表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="6d7cc88ff7777390469d48f898273cd69d887962" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;only&lt;/strong&gt; way to do conditional testing on the DOM is if you are 100% sure that the state has &amp;ldquo;settled&amp;rdquo; and there is no possible way for it to change.</source>
          <target state="translated">&lt;strong&gt;唯一の&lt;/strong&gt;あなたは100％必ず状態が「定住」していると、それは変更するための可能な方法がないということであれば、DOMを条件とテストを行うための方法です。</target>
        </trans-unit>
        <trans-unit id="f751a1d4e12183e384450022e001882bf7637014" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;sweet spot&lt;/strong&gt; of Cypress is to be used as a tool to test your own application &lt;strong&gt;as you build it&lt;/strong&gt;. It is built for developers and QA engineers, not manual testers or exploratory testing.</source>
          <target state="translated">サイプレスの&lt;strong&gt;スイートスポット&lt;/strong&gt;は、独自のアプリケーション&lt;strong&gt;を構築しながら&lt;/strong&gt;テストするためのツールとして使用されます。開発者とQAエンジニア向けに構築されており、手動テスターや探索的テストではありません。</target>
        </trans-unit>
        <trans-unit id="ff8e3b379e3ce478ef2fb3e0214f73076e68396b" translate="yes" xml:space="preserve">
          <source>The AUT also displays in the size and orientation specified in your tests. You can change the size or orientation with the &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command or in your &lt;a href=&quot;../references/configuration#Viewport&quot;&gt;Cypress configuration&lt;/a&gt;. If the AUT does not fit within the current browser window, it is scaled appropriately to fit within the window.</source>
          <target state="translated">AUTは、テストで指定されたサイズと方向で表示されます。&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt;コマンドまたは&lt;a href=&quot;../references/configuration#Viewport&quot;&gt;サイプレス構成で&lt;/a&gt;サイズまたは向きを変更できます。AUTが現在のブラウザウィンドウに収まらない場合は、ウィンドウに収まるように適切にスケーリングされます。</target>
        </trans-unit>
        <trans-unit id="4e980d08fd113d90f36052ec1c8d470b3662ceaf" translate="yes" xml:space="preserve">
          <source>The Aurelia CLI is the official command line tool for Aurelia.</source>
          <target state="translated">Aurelia CLIはAureliaの公式コマンドラインツールです。</target>
        </trans-unit>
        <trans-unit id="9e737aee3a667e0afcffa08b6a9b485bbb2757bb" translate="yes" xml:space="preserve">
          <source>The Bar Chart View charts the lengths of each spec file. This view is helpful to determine which spec files or tests are running longer than others.</source>
          <target state="translated">バーチャートビューは、各スペックファイルの長さをチャート化します。このビューは、どのスペックファイルやテストが他よりも長く実行されているかを判断するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="66f6088f517b6bc02477752b800bccb6f630afce" translate="yes" xml:space="preserve">
          <source>The Bar Chart View visualizes the &lt;strong&gt;duration&lt;/strong&gt; of your spec files relative to each other.</source>
          <target state="translated">棒グラフビューは、スペックファイルの&lt;strong&gt;期間&lt;/strong&gt;を相対的に視覚化します。</target>
        </trans-unit>
        <trans-unit id="723da8cc4f043fdfe9576683583b7579ff227eba" translate="yes" xml:space="preserve">
          <source>The Browserify Preprocessor handles:</source>
          <target state="translated">Browserify プリプロセッサが処理します。</target>
        </trans-unit>
        <trans-unit id="5b3df72f1bedfcacc825ec2eb969c8aa30097437" translate="yes" xml:space="preserve">
          <source>The CLI command tells Cypress to use the &lt;code&gt;mocha-multi-reporters&lt;/code&gt; module and points at the config file.</source>
          <target state="translated">CLIコマンドはサイプレスに &lt;code&gt;mocha-multi-reporters&lt;/code&gt; モジュールを使用するように指示し、設定ファイルをポイントします。</target>
        </trans-unit>
        <trans-unit id="2a88f2beead5608e18be7764214944cf40ca64cb" translate="yes" xml:space="preserve">
          <source>The CLI now sends &lt;code&gt;arch&lt;/code&gt; parameter to the download server so we can build and serve multiple binaries for Windows + Linux.</source>
          <target state="translated">CLIは今、 &lt;code&gt;arch&lt;/code&gt; +パラメータをダウンロードサーバーに送信するため、Windows + Linux用の複数のバイナリをビルドして提供できます。</target>
        </trans-unit>
        <trans-unit id="48de35cf1f4bc591562ca5e714e9b8e7f03cd8fc" translate="yes" xml:space="preserve">
          <source>The CLI now treats &lt;code&gt;-h&lt;/code&gt; and &lt;code&gt;--help&lt;/code&gt; and &lt;code&gt;help&lt;/code&gt; as valid commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/645&quot;&gt;#645&lt;/a&gt;.</source>
          <target state="translated">CLIは &lt;code&gt;-h&lt;/code&gt; および &lt;code&gt;--help&lt;/code&gt; と &lt;code&gt;help&lt;/code&gt; を有効なコマンドとして扱うようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/645&quot;&gt;＃645を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e28b00e7a7757e089a846796d6c8fc308705808b" translate="yes" xml:space="preserve">
          <source>The Chrome browser is evergreen - meaning it will automatically update itself, sometimes causing a breaking change in your automated tests. We host &lt;a href=&quot;https://chromium.cypress.io&quot;&gt;chromium.cypress.io&lt;/a&gt; with links to download a specific released version of Chrome (dev, Canary and stable) for every platform.</source>
          <target state="translated">Chromeブラウザーは常緑樹です。つまり、自動的に更新され、自動テストに重大な変更が加えられることがあります。すべてのプラットフォームでChromeの特定のリリースバージョン（dev、Canary、stable）をダウンロードするためのリンクを&lt;a href=&quot;https://chromium.cypress.io&quot;&gt;含むchromium.cypress.io&lt;/a&gt;をホストしています。</target>
        </trans-unit>
        <trans-unit id="67cd4484df6cf7896131e72ec5ed216b322ca1e4" translate="yes" xml:space="preserve">
          <source>The Chromium Renderer process just crashed</source>
          <target state="translated">Chromium Rendererプロセスがクラッシュした</target>
        </trans-unit>
        <trans-unit id="7522c5445757f07f38c1d122c5b615225e543e80" translate="yes" xml:space="preserve">
          <source>The Cypress API is not an exact 1:1 implementation of Promises. They have Promise like qualities and yet there are important differences you should be aware of.</source>
          <target state="translated">Cypress API は Promises の正確な 1:1 実装ではありません。これらはPromiseのような品質を持っていますが、注意すべき重要な違いがあります。</target>
        </trans-unit>
        <trans-unit id="149fd7237e1bd703353a2a711876ba2f11bbfdd4" translate="yes" xml:space="preserve">
          <source>The Cypress Chrome extension now has a static ID of &lt;code&gt;caljajdfkjjjdehjdoimjkkakekklcck&lt;/code&gt;. This allows Cypress to be added to extension whitelists for those working under corporate policies that prohibit extensions. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3673&quot;&gt;#3673&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1239&quot;&gt;#1239&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2494&quot;&gt;#2494&lt;/a&gt;.</source>
          <target state="translated">サイプレスChrome拡張機能には、静的IDの &lt;code&gt;caljajdfkjjjdehjdoimjkkakekklcck&lt;/code&gt; があります。これにより、拡張機能を禁止する企業ポリシーの下で作業している人のために、サイプレスを拡張機能のホワイトリストに追加できます。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3673&quot;&gt;＃3673&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1239&quot;&gt;＃1239&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2494&quot;&gt;＃2494&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ce5dc2d981848beaf412425e818c7bd0de9c8ad" translate="yes" xml:space="preserve">
          <source>The Cypress CircleCI Orb is a piece of configuration set in your &lt;code&gt;circle.yml&lt;/code&gt; file to correctly install, cache and run Cypress with very little effort.</source>
          <target state="translated">サイプレスCircleCI Orbは、ほんの少しの労力でサイプレスを正しくインストール、キャッシュ、および実行するために、 &lt;code&gt;circle.yml&lt;/code&gt; ファイルに設定された構成の一部です。</target>
        </trans-unit>
        <trans-unit id="ed0f7f2cc7404f16f5197b863dce897487d0e154" translate="yes" xml:space="preserve">
          <source>The Cypress Dashboard can integrate your Cypress tests with your GitHub workflow via commit &lt;a href=&quot;#Status-checks&quot;&gt;status checks&lt;/a&gt; and &lt;a href=&quot;#Pull-request-comments&quot;&gt;pull-request comments&lt;/a&gt;.</source>
          <target state="translated">サイプレスダッシュボードは、コミット&lt;a href=&quot;#Status-checks&quot;&gt;ステータスチェック&lt;/a&gt;と&lt;a href=&quot;#Pull-request-comments&quot;&gt;プルリクエストコメント&lt;/a&gt;により、サイプレステストをGitHubワークフローと統合できます。</target>
        </trans-unit>
        <trans-unit id="734453ed8ccec92af8bcdb6d41aa861afb986659" translate="yes" xml:space="preserve">
          <source>The Cypress GitHub App can provide detailed test information within pull requests via comments that include:</source>
          <target state="translated">Cypress GitHubアプリでは、プルリクエスト内の詳細なテスト情報をコメントで提供することができます。</target>
        </trans-unit>
        <trans-unit id="3c0b9da1ca25904d85c4ce3b84414f74f15947d2" translate="yes" xml:space="preserve">
          <source>The Cypress GitHub App reports commit status checks in two separate styles:</source>
          <target state="translated">Cypress GitHubアプリでは、コミット状況のチェックを2つのスタイルに分けてレポートしています。</target>
        </trans-unit>
        <trans-unit id="6bfd4432efd54a8d4e5539e7e47d892a552fef1b" translate="yes" xml:space="preserve">
          <source>The Cypress Test Runner attempts to find all compatible browsers on the user&amp;rsquo;s machine. The drop down to select a different browser is in the top right corner of the Test Runner.</source>
          <target state="translated">サイプレステストランナーは、ユーザーのマシンで互換性のあるすべてのブラウザーを見つけようとします。別のブラウザーを選択するためのドロップダウンは、テストランナーの右上隅にあります。</target>
        </trans-unit>
        <trans-unit id="47e67ff0ae6e0340197ee3e515f8f8c3551ab353" translate="yes" xml:space="preserve">
          <source>The Cypress Test with &lt;code&gt;cy.invoke()&lt;/code&gt; awaiting the promise:</source>
          <target state="translated">約束を待っている &lt;code&gt;cy.invoke()&lt;/code&gt; によるサイプレステスト：</target>
        </trans-unit>
        <trans-unit id="57403cf681171cbc5d54f2059aa6f5b17a8fb36a" translate="yes" xml:space="preserve">
          <source>The Cypress launched browser automatically:</source>
          <target state="translated">サイプレスがブラウザを自動起動してくれました。</target>
        </trans-unit>
        <trans-unit id="737fa205c8e97015df823b61f461e49e1218db3e" translate="yes" xml:space="preserve">
          <source>The Cypress tray icon has been updated. It&amp;rsquo;s much better now.</source>
          <target state="translated">サイプレストレイアイコンが更新されました。今はずっといいです。</target>
        </trans-unit>
        <trans-unit id="2c71105207b76e74dbe9566bb0a0379bb96f1c97" translate="yes" xml:space="preserve">
          <source>The Cypress version</source>
          <target state="translated">サイプレス版</target>
        </trans-unit>
        <trans-unit id="c27e531e77f118432d98b83f1c7c78418516bf0d" translate="yes" xml:space="preserve">
          <source>The DOM element must be in an &amp;ldquo;interactable&amp;rdquo; state prior to the triggered event happening (it must be visible and not disabled).</source>
          <target state="translated">DOM要素は、トリガーされたイベントが発生する前に「対話可能な」状態になっている必要があります（可視であり、無効ではない必要があります）。</target>
        </trans-unit>
        <trans-unit id="a898b6897f6d5f115de55e773d31576e8bb04885" translate="yes" xml:space="preserve">
          <source>The DOM has not loaded yet.</source>
          <target state="translated">DOM はまだ読み込まれていません。</target>
        </trans-unit>
        <trans-unit id="c795b4540030ed3c1fb27937f96d645fe13e6a82" translate="yes" xml:space="preserve">
          <source>The DOM is unstable</source>
          <target state="translated">DOM が不安定</target>
        </trans-unit>
        <trans-unit id="c1283498102e3ae44ef34d23c876ef26e181e791" translate="yes" xml:space="preserve">
          <source>The Dashboard Service has been updated to show you more visual information about what happened during a run. You can see how specs were parallelized and you can calculate the effect of adding or removing machines to help reduce the overall run time.</source>
          <target state="translated">ダッシュボードサービスが更新され、実行中に何が起こったかについてより視覚的な情報が表示されるようになりました。スペックがどのように並列化されたかを確認したり、マシンを追加または削除した場合の効果を計算して全体の実行時間を短縮することができます。</target>
        </trans-unit>
        <trans-unit id="a15a48b8b370fe21d50fc87d225e055fc7a9b1f9" translate="yes" xml:space="preserve">
          <source>The Dashboard has been upgraded to make it easier to understand the results of each spec run. This was done in anticipation of providing you the ability to parallelize and load balance your spec files automatically in CI.</source>
          <target state="translated">ダッシュボードがアップグレードされ、各specの実行結果がより理解しやすくなりました。これは、CIで自動的にスペックファイルを並列化してロードバランスをとる機能を提供することを期待して行われました。</target>
        </trans-unit>
        <trans-unit id="8cecd28d4242ecf92652ccf3dd30cc3f87604e2d" translate="yes" xml:space="preserve">
          <source>The Desktop App has been re-skinned with misc GUI enhancements such as help text, popovers, clearer errors, better loading indicators, etc.</source>
          <target state="translated">デスクトップアプリは、ヘルプテキスト、ポップオーバー、より明確なエラー、より良いロードインジケータなどのような様々なGUIの強化で再スキン化されています。</target>
        </trans-unit>
        <trans-unit id="2dbe0afb9f448c35544cfcbecb8dadf4b7966aa7" translate="yes" xml:space="preserve">
          <source>The Desktop App&amp;rsquo;s file size is now much smaller and unzips much faster. In the next release there will be a special &lt;code&gt;CI&lt;/code&gt; build which removes the need to run Xvfb.</source>
          <target state="translated">デスクトップアプリのファイルサイズが大幅に小さくなり、解凍が速くなりました。次のリリースでは、Xvfbを実行する必要がなくなる特別な &lt;code&gt;CI&lt;/code&gt; ビルドがあります。</target>
        </trans-unit>
        <trans-unit id="322a0c3549e2d65cfa88fc4e401921dbe0b76b41" translate="yes" xml:space="preserve">
          <source>The Desktop GUI properly renders folders that contain specs in Windows now. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1335&quot;&gt;#1335&lt;/a&gt;.</source>
          <target state="translated">デスクトップGUIは、仕様を含むフォルダーをWindowsで正しくレンダリングするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1335&quot;&gt;＃1335を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3b59a45aad64c2e16e3562e274f463f18da4c99f" translate="yes" xml:space="preserve">
          <source>The Desktop-GUI has been updated to get the new routes provided by the Cypress API for runs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2189&quot;&gt;#2189&lt;/a&gt;.</source>
          <target state="translated">デスクトップGUIが更新され、実行用にサイプレスAPIによって提供される新しいルートを取得します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2189&quot;&gt;＃2189を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="667b7db9c90d2b1060bfb8a20f57db58ddb02ae8" translate="yes" xml:space="preserve">
          <source>The Electron browser has two unique advantages:</source>
          <target state="translated">Electronブラウザには2つのユニークな利点があります。</target>
        </trans-unit>
        <trans-unit id="267db1fbd681d2b01e896f01c955233c91006e2d" translate="yes" xml:space="preserve">
          <source>The Electron browser now runs Chrome Version 61. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4000&quot;&gt;#4000&lt;/a&gt;.</source>
          <target state="translated">ElectronブラウザーはChromeバージョン61を実行します。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4000&quot;&gt;＃4000&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc648f8d216380c9f950a407a9aef64ec1ba9dbc" translate="yes" xml:space="preserve">
          <source>The GitHub branch, pull request, author, commit sha and commit message associated with the run (if any)</source>
          <target state="translated">実行に関連する GitHub ブランチ、プルリクエスト、作者、コミット sha、コミットメッセージ (もしあれば)</target>
        </trans-unit>
        <trans-unit id="fed769fa3a9ac06f96b17d72858f9793bd1fae82" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the request</source>
          <target state="translated">リクエストで使用する HTTP メソッド</target>
        </trans-unit>
        <trans-unit id="9b56b8bf9001cef07a0a5ef756c9664463293789" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the visit. Can be &lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt;.</source>
          <target state="translated">訪問で使用するHTTPメソッド。 &lt;code&gt;GET&lt;/code&gt; または &lt;code&gt;POST&lt;/code&gt; にすることができます。</target>
        </trans-unit>
        <trans-unit id="85b3be1d0f546b15fb96b04375b14950022ced4d" translate="yes" xml:space="preserve">
          <source>The Kitchen Sink application has been loaded into the &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;App Preview&lt;/a&gt; pane.</source>
          <target state="translated">Kitchen Sinkアプリケーションが&lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;App Preview&lt;/a&gt;ペインに読み込まれました。</target>
        </trans-unit>
        <trans-unit id="1cf826e4a28ec68a0b9fe0bbf70fa4ea604cb28c" translate="yes" xml:space="preserve">
          <source>The Machines View charts spec files by the machines that executed them. This view makes it easy to evaluate the contribution of each machine to the overall test run.</source>
          <target state="translated">Machines Viewでは、スペックファイルを実行したマシンごとにチャートを表示します。このビューでは、テスト実行全体に対する各マシンの貢献度を簡単に評価することができます。</target>
        </trans-unit>
        <trans-unit id="4b89c8de24c9423ec96f6cb9acaa41f22e64f632" translate="yes" xml:space="preserve">
          <source>The OSX Cypress App was not being properly signed (since 0.10.0) due to an oversight in our deployment process. This has been fixed now and additional checks have been added to ensure the deployed version is properly signed. Updating within the app was unaffected. This bug only effected fresh downloads from the internet.</source>
          <target state="translated">OSX Cypressアプリは、デプロイプロセスでの見落としが原因で(0.10.0以降)適切に署名されていませんでした。これは現在修正されており、デプロイされたバージョンが適切に署名されていることを確認するための追加チェックが追加されています。アプリ内での更新は影響を受けませんでした。このバグは、インターネットからの新規ダウンロードにのみ影響します。</target>
        </trans-unit>
        <trans-unit id="12d6e108059d8871957f07700d81f0600f9b0b5f" translate="yes" xml:space="preserve">
          <source>The Plugins API allows you to hook into and extend Cypress behavior.</source>
          <target state="translated">Plugins API を使用すると、Cypress の動作をフックして拡張することができます。</target>
        </trans-unit>
        <trans-unit id="a79f306df4007f5975a6169f9220fffc377a922f" translate="yes" xml:space="preserve">
          <source>The Plugins API is relatively new.</source>
          <target state="translated">Plugins APIは比較的新しいものです。</target>
        </trans-unit>
        <trans-unit id="ef3ca6dc6414b0afa685947487c8bb95c3c647e8" translate="yes" xml:space="preserve">
          <source>The Runner UI no longer appears to be &amp;ldquo;running&amp;rdquo; when there is a spec bundle error in the &lt;code&gt;supportFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;supportFile&lt;/code&gt; に仕様バンドルエラーがある場合、ランナーUIが「実行中」のように見えなくなりました。</target>
        </trans-unit>
        <trans-unit id="58c9c4698fef81c10b7721bfbed6894597389fa3" translate="yes" xml:space="preserve">
          <source>The Screenshot API allows you set defaults for how screenshots are captured during &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;.screenshot&lt;/code&gt;&lt;/a&gt; and automatic screenshots taken during test failures. You can set defaults for the following:</source>
          <target state="translated">スクリーンショットAPIを使用すると、&lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;.screenshot&lt;/code&gt; &lt;/a&gt;中にスクリーンショットをキャプチャする方法のデフォルトと、テストに失敗したときに自動的にスクリーンショットをキャプチャする方法を設定できます。次のデフォルトを設定できます。</target>
        </trans-unit>
        <trans-unit id="8d5b7f375467dc1ceac8e6e7563ffc7b9e1dd29d" translate="yes" xml:space="preserve">
          <source>The Selector Playground is an interactive feature that helps you:</source>
          <target state="translated">セレクタープレイグラウンドは、あなたを助けるインタラクティブな機能です。</target>
        </trans-unit>
        <trans-unit id="d9852e853f52b99d210e86b2f56cc55c3202aeb4" translate="yes" xml:space="preserve">
          <source>The Selector Playground now works correctly in the Electron browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1086&quot;&gt;#1086&lt;/a&gt;.</source>
          <target state="translated">Selector PlaygroundがElectronブラウザーで正しく機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1086&quot;&gt;＃1086を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="18428e92a03294d76a3cba7d05f44d578b405863" translate="yes" xml:space="preserve">
          <source>The Test Runner</source>
          <target state="translated">テストランナー</target>
        </trans-unit>
        <trans-unit id="0df353fce0af4d6c4d300b3b9e4c8aae8cae1926" translate="yes" xml:space="preserve">
          <source>The Test Runner can now have projects added by being &amp;lsquo;dragged&amp;rsquo; in. Fixes</source>
          <target state="translated">テストランナーにプロジェクトを「ドラッグ」して追加できるようになりました。</target>
        </trans-unit>
        <trans-unit id="90b1002eaf26fdb995b6decdd2f3d04d22a92052" translate="yes" xml:space="preserve">
          <source>The Test Runner displays the scrollbar correctly when the update banner is displayed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/803&quot;&gt;#803&lt;/a&gt;.</source>
          <target state="translated">更新バナーが表示されると、テストランナーはスクロールバーを正しく表示します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/803&quot;&gt;＃803を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="01ff55d9ea08dd21f018dd51886c4ded0c930f3e" translate="yes" xml:space="preserve">
          <source>The Test Runner now accounts for cypress being installed per project as npm module. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/500&quot;&gt;#500&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/514&quot;&gt;#514&lt;/a&gt;.</source>
          <target state="translated">テストランナーは、サイプレスがnpmモジュールとしてプロジェクトごとにインストールされるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/500&quot;&gt;＃500&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/514&quot;&gt;＃514を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="15942512a9b81779474c6448b3e4e656adb2ead2" translate="yes" xml:space="preserve">
          <source>The Test Runner now displays &lt;code&gt;skipped&lt;/code&gt; tests differently than &lt;code&gt;pending&lt;/code&gt; tests. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/244&quot;&gt;#244&lt;/a&gt;.</source>
          <target state="translated">テストランナーは、 &lt;code&gt;skipped&lt;/code&gt; テストを &lt;code&gt;pending&lt;/code&gt; テストとは異なる方法で表示するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/244&quot;&gt;＃244&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ca2ba6d9a5a580951c21bc908bcac23b055a964" translate="yes" xml:space="preserve">
          <source>The Test Runner now enables you to collapse folders when displaying a list of specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/760&quot;&gt;#760&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/metcorne&quot;&gt;@metcorne&lt;/a&gt;.</source>
          <target state="translated">テストランナーでは、仕様のリストを表示するときにフォルダーを折りたたむことができるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/760&quot;&gt;＃760を&lt;/a&gt;修正。&lt;a href=&quot;https://github.com/metcorne&quot;&gt;@metcorne&lt;/a&gt;による寄稿。</target>
        </trans-unit>
        <trans-unit id="ae05cf351f79c4fbe6fb389278cb73a1930cd1dd" translate="yes" xml:space="preserve">
          <source>The Test Runner now retries node-originated errors from our internal API requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2341&quot;&gt;#2341&lt;/a&gt;</source>
          <target state="translated">テストランナーは、内部APIリクエストからのノードに起因するエラーを再試行するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2341&quot;&gt;＃2341の&lt;/a&gt;修正</target>
        </trans-unit>
        <trans-unit id="e1b0802754545c7dba149944410074df851d418b" translate="yes" xml:space="preserve">
          <source>The Test Runner update window now has messaging about &lt;code&gt;package.json&lt;/code&gt; versioning. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/513&quot;&gt;#513&lt;/a&gt;.</source>
          <target state="translated">テストランナーの更新ウィンドウに、 &lt;code&gt;package.json&lt;/code&gt; のバージョン管理に関するメッセージが表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/513&quot;&gt;＃513を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="74d4db61a84b73f5e5e7ae74d25c95179efd7242" translate="yes" xml:space="preserve">
          <source>The Test Runner will now display your email address when you have not set a name in GitHub.</source>
          <target state="translated">GitHubで名前を設定していない場合、テストランナーにメールアドレスが表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="203a719c5b14a76523e4796f4015f6f3493fdf4d" translate="yes" xml:space="preserve">
          <source>The Test Runner&amp;rsquo;s search now resets when switching between projects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2512&quot;&gt;#2512&lt;/a&gt;.</source>
          <target state="translated">プロジェクトを切り替えると、テストランナーの検索がリセットされるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2512&quot;&gt;＃2512を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e633f13624865ed1c7325dfe2aa98cd04d9f3ea0" translate="yes" xml:space="preserve">
          <source>The Timeline View charts your spec files as they ran relative to each other. This is especially helpful when you want to visualize how your tests ran chronologically across all available machines.</source>
          <target state="translated">タイムラインビューでは、スペックファイルの相対的な実行状況をチャートで表示します。これは、利用可能なすべてのマシンでテストがどのように時系列で実行されたかを視覚化したい場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="ec29c274c2bde9efcba2e7722fe78066d5108363" translate="yes" xml:space="preserve">
          <source>The Timeline View charts your spec files as they ran relative to each other. This is especially helpful when you want to visualize how your tests ran in &lt;a href=&quot;../guides/parallelization&quot;&gt;parallel&lt;/a&gt;.</source>
          <target state="translated">タイムラインビューは、スペックファイルが互いに相対的に実行されたときにグラフ化します。これは、テストがどのように&lt;a href=&quot;../guides/parallelization&quot;&gt;並行して&lt;/a&gt;実行されたかを視覚化するときに特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="bb1584aa60107a47c0411543f4232ea16f9fc261" translate="yes" xml:space="preserve">
          <source>The URL property on all XHR&amp;rsquo;s is now completely decoded, even on URLs which were originally encoded. The reason is for easier assertions and debugging. This URL property is specific to Cypress and does not actually affect the underlying XHR.</source>
          <target state="translated">すべてのXHRのURLプロパティは、元々エンコードされていたURLでも完全にデコードされるようになりました。その理由は、より簡単なアサーションとデバッグのためです。このURLプロパティはサイプレスに固有であり、実際に基礎となるXHRに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="f22b69fbf16b28ee54e3bc3fee5917aedd132e5c" translate="yes" xml:space="preserve">
          <source>The URL to make the request to</source>
          <target state="translated">へのリクエストを行うためのURL</target>
        </trans-unit>
        <trans-unit id="16849e6ba858750f570e0ac6074a29582bf3cb85" translate="yes" xml:space="preserve">
          <source>The URL to make the request to.</source>
          <target state="translated">リクエスト先のURLです。</target>
        </trans-unit>
        <trans-unit id="6803d6ac24b6a9b7e4de860a696b95f324248653" translate="yes" xml:space="preserve">
          <source>The URL to visit.</source>
          <target state="translated">訪問先のURLです。</target>
        </trans-unit>
        <trans-unit id="47224b103ed560a9d78a230a0199d46293d1fdf7" translate="yes" xml:space="preserve">
          <source>The URL to visit. Behaves the same as the &lt;code&gt;url&lt;/code&gt; argument.</source>
          <target state="translated">アクセスするURL。 &lt;code&gt;url&lt;/code&gt; 引数と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2d9bb6ecc650140fa45e8526eeca8f62fce701aa" translate="yes" xml:space="preserve">
          <source>The URL will now automatically be restored when hovering over the Command Log to indicate the state of the URL at the time the command ran.</source>
          <target state="translated">コマンドログにカーソルを合わせると、コマンド実行時のURLの状態を示すURLが自動的に復元されるようになりました。</target>
        </trans-unit>
        <trans-unit id="0c70c3de81fd42c77b414f73a363f84b76df0361" translate="yes" xml:space="preserve">
          <source>The URL will now highlight in a yellow background during a revert DOM snapshot.</source>
          <target state="translated">DOM スナップショットを元に戻す際に、URL が黄色の背景で強調表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="01257de0ccd29de0fd21eac3c466f390cedb0c38" translate="yes" xml:space="preserve">
          <source>The XHR object which is returned to you to via &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; is now more consistent with other return values such as &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. It should be much easier to work with &lt;code&gt;request body&lt;/code&gt;, &lt;code&gt;request headers&lt;/code&gt;, &lt;code&gt;response body&lt;/code&gt; and &lt;code&gt;response headers&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;を介してユーザーに返されるXHRオブジェクトは、&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;などの他の戻り値とより整合性があります。 &lt;code&gt;request body&lt;/code&gt; 、 &lt;code&gt;request headers&lt;/code&gt; 、 &lt;code&gt;response body&lt;/code&gt; 、 &lt;code&gt;response headers&lt;/code&gt; がはるかに簡単になるはずです。</target>
        </trans-unit>
        <trans-unit id="0ea80d625147d4e908537a921b72ad6f1fe1dea1" translate="yes" xml:space="preserve">
          <source>The XHR&amp;rsquo;s URL property will now always return you a &lt;code&gt;Fully Qualified Domain Name&lt;/code&gt; including the origin, port, host, etc. Previously the URL property represented whatever the XHR was opened with. We&amp;rsquo;ve worked around this difference by when checking whether an XHR should be stubbed, the origin is tested both as present and omitted.</source>
          <target state="translated">XHRのURLプロパティは常に、 &lt;code&gt;Fully Qualified Domain Name&lt;/code&gt; を返すようになりました。これには、起点、ポート、ホストなどが含まれます。以前は、URLプロパティはXHRを開いたときに使用したものを表していました。XHRをスタブ化する必要があるかどうかをチェックするときに、この違いを回避しました。オリジンは、存在するものと省略されているものの両方としてテストされます。</target>
        </trans-unit>
        <trans-unit id="adbb198ee5a2397ad030329fc6b5dd92db2b6f15" translate="yes" xml:space="preserve">
          <source>The ability to open the context menu to see &amp;ldquo;Inspect Element&amp;rdquo; has been reenabled in the Electron browser. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4002&quot;&gt;#4002&lt;/a&gt;.</source>
          <target state="translated">コンテキストメニューを開いて「要素の検査」を表示する機能は、Electronブラウザーで再度有効になりました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4002&quot;&gt;＃4002&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b90a9bb25749482764e4e2263bead3acde0547e8" translate="yes" xml:space="preserve">
          <source>The above &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; urls are temporary - they are purged after 30 days. The format of the url is as follows:</source>
          <target state="translated">上記の &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; の URLは一時的なもので、30日後に消去されます。URLの形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cab283e12e1349e25747a508574de2b72f0f9837" translate="yes" xml:space="preserve">
          <source>The above configuration will output the JUnit report to &lt;code&gt;STDOUT&lt;/code&gt; and save it into an XML file. Reporter options differ depending on the reporter (and may not be supported at all). Refer to the documentation for the reporter you are using for details on which options are supported.</source>
          <target state="translated">上記の構成では、JUnitレポートが &lt;code&gt;STDOUT&lt;/code&gt; に出力され、XMLファイルに保存されます。レポーターのオプションはレポーターによって異なります（まったくサポートされない場合があります）。サポートされているオプションの詳細については、使用しているレポーターのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2ca86aa9b0982e894455dd56eaa5d5687a162634" translate="yes" xml:space="preserve">
          <source>The above example is an oversimplification. Let&amp;rsquo;s look at a more complex example.</source>
          <target state="translated">上記の例は単純化しすぎです。より複雑な例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="1b0b651e666142d29f127e43f442376cddd42313" translate="yes" xml:space="preserve">
          <source>The absolute path to the image.</source>
          <target state="translated">画像への絶対パス。</target>
        </trans-unit>
        <trans-unit id="6f6168cdaa18c3d88d0ac6c39afc63867b920b5c" translate="yes" xml:space="preserve">
          <source>The absolute path to the spec file (e.g. &lt;code&gt;/Users/janelane/my-app/cypress/integration/login_spec.js&lt;/code&gt;)</source>
          <target state="translated">スペックファイルへの絶対パス（例： &lt;code&gt;/Users/janelane/my-app/cypress/integration/login_spec.js&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ba21fd66a205ce0682c59454a500efc0ec0c92d5" translate="yes" xml:space="preserve">
          <source>The algorithm for replaying aliased commands is now much more accurate, handles stale element references better, and will not replay commands which have a side effect (like action commands). The end result is Cypress will now almost always find the desired element by determining the minimum number of re-queries and is not susceptible to stale element references. Additionally using assertions on aliased elements now works (where previously using a &lt;em&gt;Command Option&lt;/em&gt; on an alias would just be ignored. This was very difficult to implement but should be 100% solid. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/36&quot;&gt;#36&lt;/a&gt;.</source>
          <target state="translated">エイリアスコマンドを再生するためのアルゴリズムがはるかに正確になり、古くなった要素参照をより適切に処理し、副作用のあるコマンド（アクションコマンドなど）を再生しなくなりました。最終結果として、サイプレスはほとんどの場合、再クエリの最小数を決定することで目的の要素を見つけ、古くなった要素参照の影響を受けなくなります。さらに、エイリアス要素でのアサーションの使用が機能するようになりました（以前はエイリアスで&lt;em&gt;コマンドオプション&lt;/em&gt;を使用しても無視されていました。これは実装が非常に困難でしたが、100％確実なはずです。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/36&quot;&gt;＃36&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="230d5bfb2e55eaae4e75347d1b9f82f06cc6cea1" translate="yes" xml:space="preserve">
          <source>The algorithm that ensures an element is not covered now calculates this at the center coordinates instead of the top left. This should yield more accurate results, be closer to the default expectations of users, and bypass fractional pixel problems we were having. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/655&quot;&gt;#655&lt;/a&gt;.</source>
          <target state="translated">要素がカバーされていないことを保証するアルゴリズムは、左上ではなく中心座標でこれを計算するようになりました。これにより、より正確な結果が得られ、ユーザーのデフォルトの期待値に近づき、発生していた部分的なピクセルの問題が回避されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/655&quot;&gt;＃655を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8023c7ade591c22761b1a5dbe56b000a52ddb297" translate="yes" xml:space="preserve">
          <source>The amount of time to wait in milliseconds.</source>
          <target state="translated">ミリ秒単位の待ち時間。</target>
        </trans-unit>
        <trans-unit id="6732f6ed22322fd0f9c08e2a03a4b4c06f4ce7af" translate="yes" xml:space="preserve">
          <source>The answer is usually &lt;strong&gt;yes&lt;/strong&gt;. Here&amp;rsquo;s an example:</source>
          <target state="translated">答えは通常、&lt;strong&gt;はい&lt;/strong&gt;。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="fef60c6ed9526c71cd3cfb41efef875280ec1f04" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;arg&lt;/code&gt; sent via &lt;code&gt;cy.task(name, arg)&lt;/code&gt; should be serializable; it cannot have circular dependencies (issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/5539&quot;&gt;#5539&lt;/a&gt;). If there are any special fields like &lt;code&gt;Date&lt;/code&gt;, you are responsible for their conversion (issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4980&quot;&gt;#4980&lt;/a&gt;):</source>
          <target state="translated">&lt;code&gt;cy.task(name, arg)&lt;/code&gt; を介して送信される引数 &lt;code&gt;arg&lt;/code&gt; は、シリアル化可能である必要があります。循環依存関係を持つことはできません（問題&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/5539&quot;&gt;＃5539&lt;/a&gt;）。 &lt;code&gt;Date&lt;/code&gt; ような特別なフィールドがある場合、あなたはそれらの変換に責任があります（問題&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4980&quot;&gt;＃4980&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="3a86971f643a552776be29192c39b703fc551bdb" translate="yes" xml:space="preserve">
          <source>The arguments, without transforming them (they are the real arguments)</source>
          <target state="translated">引数は、それらを変換せずに(それらは本当の引数です</target>
        </trans-unit>
        <trans-unit id="f303fdc44400b5249d2c24e01d26c966a4517603" translate="yes" xml:space="preserve">
          <source>The associated Cypress project</source>
          <target state="translated">関連するサイプレスプロジェクト</target>
        </trans-unit>
        <trans-unit id="9e4029d2b05a03bf22e19ee9ac0ea65731c08eb3" translate="yes" xml:space="preserve">
          <source>The auto generated &lt;code&gt;example_spec.js&lt;/code&gt; no longer errors on &lt;code&gt;cy.visit('app/index.html')&lt;/code&gt; since that file would likely not locally exist.</source>
          <target state="translated">自動生成された &lt;code&gt;example_spec.js&lt;/code&gt; は、 &lt;code&gt;cy.visit('app/index.html')&lt;/code&gt; でエラーになりません。そのファイルはローカルに存在しない可能性が高いためです。</target>
        </trans-unit>
        <trans-unit id="5d5f090dee7604485dcd59c8b000462d0bdb7258" translate="yes" xml:space="preserve">
          <source>The available functions on &lt;code&gt;req&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;req&lt;/code&gt; で使用可能な関数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f7ffb7105687b21bdd90113b22f435bec775c677" translate="yes" xml:space="preserve">
          <source>The available functions on &lt;code&gt;res&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;res&lt;/code&gt; で使用できる関数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c3ca22c7b0845719d5c1c36260d5657c5d4a1f60" translate="yes" xml:space="preserve">
          <source>The base name of the spec file (e.g. &lt;code&gt;login_spec.js&lt;/code&gt;)</source>
          <target state="translated">スペックファイルのベース名（例： &lt;code&gt;login_spec.js&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d81b05325b34deb81e363d64a96c30968573c6d7" translate="yes" xml:space="preserve">
          <source>The below example matches all &lt;code&gt;DELETE&lt;/code&gt; requests to &amp;ldquo;/users&amp;rdquo; and stubs a response with an empty JSON object.</source>
          <target state="translated">次の例では、すべての &lt;code&gt;DELETE&lt;/code&gt; リクエストを「/ users」に一致させ、空のJSONオブジェクトで応答をスタブ化しています。</target>
        </trans-unit>
        <trans-unit id="9b29ba2075d125bf31dabfdd6e054e9789810696" translate="yes" xml:space="preserve">
          <source>The below example will return the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; in the &lt;code&gt;#header&lt;/code&gt; since that is the &lt;em&gt;first&lt;/em&gt; element that contains the text &amp;ldquo;Jane Lane&amp;rdquo;.</source>
          <target state="translated">以下の例では、「Jane Lane」というテキストを含む&lt;em&gt;最初の&lt;/em&gt;要素であるため、 &lt;code&gt;#header&lt;/code&gt; で &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02420601b94e62e3629b9b542951288782b7a8bd" translate="yes" xml:space="preserve">
          <source>The binary cache now correctly works and will not reinstall Cypress if an existing version is already installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1813&quot;&gt;#1813&lt;/a&gt;.</source>
          <target state="translated">バイナリキャッシュが正しく機能するようになり、既存のバージョンがすでにインストールされている場合はサイプレスを再インストールしません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1813&quot;&gt;＃1813を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d572f92da6a17728ee2040b4736a6ef4833d8950" translate="yes" xml:space="preserve">
          <source>The box at the top that displays the selector is also a text input.</source>
          <target state="translated">セレクタを表示する上部のボックスもテキスト入力です。</target>
        </trans-unit>
        <trans-unit id="b532e903135e51091bdb69ca9d752c6c3b4889a8" translate="yes" xml:space="preserve">
          <source>The branch name is now properly collected when recording in Buildkite CI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/777&quot;&gt;#777&lt;/a&gt;.</source>
          <target state="translated">Buildkite CIで記録するときに、ブランチ名が適切に収集されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/777&quot;&gt;＃777を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="87e305fdc79003a9f2ed4c3c32a6b6bf6e8803a2" translate="yes" xml:space="preserve">
          <source>The browser and version</source>
          <target state="translated">ブラウザとバージョン</target>
        </trans-unit>
        <trans-unit id="7cd486cc860cf0e865d5c5fa67f6d827c8cd8fab" translate="yes" xml:space="preserve">
          <source>The build number and url to CI for tests run within &lt;a href=&quot;https://drone.io/&quot;&gt;Drone&lt;/a&gt; are now captured and displayed on the run within the Dashboard. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1709&quot;&gt;#1709&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://drone.io/&quot;&gt;Drone&lt;/a&gt;内で実行されたテストのビルド番号とCIのURL がキャプチャされ、ダッシュボード内の実行に表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1709&quot;&gt;＃1709&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8891e911caa1cb7218669a59d2a11ce43dcc620" translate="yes" xml:space="preserve">
          <source>The build process of the driver has been modernized. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/429&quot;&gt;#429&lt;/a&gt;.</source>
          <target state="translated">ドライバーのビルドプロセスが最新化されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/429&quot;&gt;＃429を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a4293704d7380861d3cb8690f9a39b0f91e496a7" translate="yes" xml:space="preserve">
          <source>The built in &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;&lt;code&gt;cypress-browserify-preprocessor&lt;/code&gt;&lt;/a&gt; was bumped to &lt;code&gt;1.1.0&lt;/code&gt;. This supports more JavaScript features by default, including async/await, object rest spread, and class properties. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2254&quot;&gt;#2254&lt;/a&gt;.</source>
          <target state="translated">組み込みの&lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt; &lt;code&gt;cypress-browserify-preprocessor&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;1.1.0&lt;/code&gt; に引き上げられました。これにより、非同期/待機、オブジェクトのレストスプレッド、クラスプロパティなど、より多くのJavaScript機能がデフォルトでサポートされます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2254&quot;&gt;＃2254を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="00c9bbca84b5320488a962eaea3e1912c2b1f8b4" translate="yes" xml:space="preserve">
          <source>The built in XHR response delay has been removed since now all requests really go over the HTTP stack, which inherently has its own delay. You can still optionally force responses to be delayed by a set amount.</source>
          <target state="translated">内蔵されていた XHR レスポンスの遅延は削除されました。オプションで、設定した量だけ応答を遅延させることもできます。</target>
        </trans-unit>
        <trans-unit id="5a98420d459273865977dedece36368e58b6cd00" translate="yes" xml:space="preserve">
          <source>The built in default &lt;code&gt;Electron&lt;/code&gt; browser has been bumped from version &lt;code&gt;53&lt;/code&gt; to &lt;code&gt;59&lt;/code&gt;. This version represents the version of &lt;code&gt;Chromium&lt;/code&gt; that Electron is using. In other words, running &lt;code&gt;cypress run&lt;/code&gt; (or via &lt;code&gt;Electron&lt;/code&gt;) will be like running your tests in &lt;code&gt;Chrome 59&lt;/code&gt; now. Although it is unlikely this would actually &lt;em&gt;break&lt;/em&gt; any of your tests - it is technically possible they could behave differently. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/895&quot;&gt;#895&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/891&quot;&gt;#891&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/823&quot;&gt;#823&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/860&quot;&gt;#860&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1011&quot;&gt;#1011&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1252&quot;&gt;#1252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1276&quot;&gt;#1276&lt;/a&gt;.</source>
          <target state="translated">組み込みのデフォルトの &lt;code&gt;Electron&lt;/code&gt; ブラウザは、バージョン &lt;code&gt;53&lt;/code&gt; から &lt;code&gt;59&lt;/code&gt; に引き上げられました。このバージョンは、エレクトロンが使用している &lt;code&gt;Chromium&lt;/code&gt; のバージョンを表しています。つまり、 &lt;code&gt;cypress run&lt;/code&gt; を（または &lt;code&gt;Electron&lt;/code&gt; 経由で）実行すると、 &lt;code&gt;Chrome 59&lt;/code&gt; でテストを実行するようになります。これが実際にテストのいずれかを&lt;em&gt;壊す&lt;/em&gt;ことはまずありませんが、技術的にはそれらが異なる動作をする可能性があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/895&quot;&gt;＃895&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/891&quot;&gt;＃891&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/823&quot;&gt;＃823&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/860&quot;&gt;＃860&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1011&quot;&gt;＃1011&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1252&quot;&gt;＃1252&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1276&quot;&gt;＃1276を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="c4328658648fdf26bd388b4844fda0d993d8a3ee" translate="yes" xml:space="preserve">
          <source>The bundled version of FFmpeg has now been bumped from &lt;code&gt;3.x.x&lt;/code&gt; to &lt;code&gt;4.x.x&lt;/code&gt;. This may help with some issues users were experiencing when recording videos. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1972&quot;&gt;#1972&lt;/a&gt;.</source>
          <target state="translated">FFmpegのバンドルバージョンが &lt;code&gt;3.x.x&lt;/code&gt; から &lt;code&gt;4.x.x&lt;/code&gt; れました。これは、ビデオを録画するときにユーザーが経験していたいくつかの問題に役立つ場合があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1972&quot;&gt;＃1972を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b03dc4395f907cf3c251df5831287b964700e570" translate="yes" xml:space="preserve">
          <source>The call count (and total number of calls)</source>
          <target state="translated">通話回数(および総通話回数)のことです。</target>
        </trans-unit>
        <trans-unit id="12a04970c45f32bb5eea0c0dffe2ac66672ffa5a" translate="yes" xml:space="preserve">
          <source>The callback function is called any time a file is requested by the browser. This happens on each run of the tests.</source>
          <target state="translated">コールバック関数は、ブラウザからファイルが要求されるたびに呼び出されます。これはテストを実行するたびに発生します。</target>
        </trans-unit>
        <trans-unit id="54dc858f124923023700410355f03e7529940fc3" translate="yes" xml:space="preserve">
          <source>The callback function should return one of the following:</source>
          <target state="translated">コールバック関数は、以下のいずれかを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="2abe30b400fb277b6ccb01d29db083dd9e2877f2" translate="yes" xml:space="preserve">
          <source>The callback function will be retried over and over again until no assertions within it throw.</source>
          <target state="translated">コールバック関数は、その中のアサーションがスローされなくなるまで何度も何度も再試行されます。</target>
        </trans-unit>
        <trans-unit id="edfc022c0645f5ff57f9e678bfa92155e52887db" translate="yes" xml:space="preserve">
          <source>The caret now correctly moves on &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1108&quot;&gt;#1108&lt;/a&gt;.</source>
          <target state="translated">キャレットが &lt;code&gt;[contenteditable]&lt;/code&gt; 要素上を正しく移動するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1108&quot;&gt;＃1108を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="65f95298189dcbd21a1b24e79e1994cd281bf75a" translate="yes" xml:space="preserve">
          <source>The chainers that come from &lt;a href=&quot;../../guides/references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; or &lt;a href=&quot;../../guides/references/bundled-tools#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; will always document what they return.</source>
          <target state="translated">&lt;a href=&quot;../../guides/references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt;または&lt;a href=&quot;../../guides/references/bundled-tools#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt;からのチェーンは常に、それらが返すものを文書化します。</target>
        </trans-unit>
        <trans-unit id="257e6622aad94b5474a2b25c4d50d371eba3f89e" translate="yes" xml:space="preserve">
          <source>The chainers that come from &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai&quot;&gt;Chai&lt;/a&gt; or &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; will always document what they return.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai&quot;&gt;Chai&lt;/a&gt;または&lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt;からのチェイナーは、常にそれらが返すものを文書化します。</target>
        </trans-unit>
        <trans-unit id="50161b2801a17ba2edc50dd76a5fe7b0391c260e" translate="yes" xml:space="preserve">
          <source>The changes in version &lt;a href=&quot;#01711-11162016&quot;&gt;&lt;code&gt;0.17.11&lt;/code&gt;&lt;/a&gt; below are in preparation for Cypress￢ﾀﾙ platform service: a portal where screenshots, videos, config, and logs of your builds are accessible.</source>
          <target state="translated">以下のバージョン&lt;a href=&quot;#01711-11162016&quot;&gt; &lt;code&gt;0.17.11&lt;/code&gt; で&lt;/a&gt;の変更は、Cypress￢ ﾀﾙプラットフォームサービスの準備です。ビルドのスクリーンショット、ビデオ、構成、およびログにアクセスできるポータルです。</target>
        </trans-unit>
        <trans-unit id="12b9db6cd52a6c5288eb66a7b667ae65cacfaa59" translate="yes" xml:space="preserve">
          <source>The click below will be issued inside of the element (15px from the left and 40px from the top).</source>
          <target state="translated">下のクリックは要素の内側(左から15px、上から40px)に発行されます。</target>
        </trans-unit>
        <trans-unit id="feffbf3db4f2aa3a96de8110d25691dc900d83d8" translate="yes" xml:space="preserve">
          <source>The clock object is also available via &lt;code&gt;this.clock&lt;/code&gt; in any &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">クロックオブジェクトは、任意の&lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;コールバックの &lt;code&gt;this.clock&lt;/code&gt; からも利用できます。</target>
        </trans-unit>
        <trans-unit id="12d527e46dab797c7b08982aaa8c907f0aeab918" translate="yes" xml:space="preserve">
          <source>The clock starts at the unix epoch (timestamp of 0). This means that when you instantiate &lt;code&gt;new Date&lt;/code&gt; in your application, it will have a time of &lt;code&gt;January 1st, 1970&lt;/code&gt;.</source>
          <target state="translated">クロックはUNIXエポック（0のタイムスタンプ）から始まります。これは、アプリケーションで &lt;code&gt;new Date&lt;/code&gt; をインスタンス化すると &lt;code&gt;January 1st, 1970&lt;/code&gt; 時間になることを意味します。</target>
        </trans-unit>
        <trans-unit id="49ad6a4c2e98e8b2d168cd5e8e8acca85b5148fa" translate="yes" xml:space="preserve">
          <source>The code above displays in the Command Log as shown below, with the console properties shown on click of the command.</source>
          <target state="translated">上記のコードは、コマンドをクリックするとコンソールのプロパティが表示され、以下のようにコマンドログに表示されます。</target>
        </trans-unit>
        <trans-unit id="6558692f7710b544a27041ca9277f785de11e73c" translate="yes" xml:space="preserve">
          <source>The code above will produce a suite with 4 tests:</source>
          <target state="translated">上のコードは、4つのテストを持つスイートを生成します。</target>
        </trans-unit>
        <trans-unit id="d0fb8faf7f819b5cd70df24f148a83c15cffb94c" translate="yes" xml:space="preserve">
          <source>The code contains comments that explain how it utilizes the preprocessor API.</source>
          <target state="translated">コードには、プリプロセッサAPIをどのように利用しているかを説明するコメントが含まれています。</target>
        </trans-unit>
        <trans-unit id="2cf720a27a083234446b5670de5305307937fdb7" translate="yes" xml:space="preserve">
          <source>The code coverage information in unit tests and end-to-end tests has the same format; the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; plugin automatically grabs both and saves the combined report. Thus we can see the code coverage from the &lt;code&gt;cypress/integration/selectors-spec.js&lt;/code&gt; file after running the test.</source>
          <target state="translated">単体テストとエンドツーエンドテストのコードカバレッジ情報は同じ形式です。&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt;プラグインは、自動的に両方をつかみ、複合レポートを保存します。したがって、テストを実行した後、 &lt;code&gt;cypress/integration/selectors-spec.js&lt;/code&gt; ファイルからコードカバレッジを確認できます。</target>
        </trans-unit>
        <trans-unit id="5bc7ae3b77cd0b515289d58070df8ad743f925ce" translate="yes" xml:space="preserve">
          <source>The command UI now displays pending requests as a &lt;code&gt;pending command&lt;/code&gt;.</source>
          <target state="translated">コマンドUIは、 &lt;code&gt;pending command&lt;/code&gt; 中の要求を保留中のコマンドとして表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="245021e0026bccf39d3ba8f1a9da62d8b1656c5f" translate="yes" xml:space="preserve">
          <source>The command above will display in the Command Log as:</source>
          <target state="translated">上記のコマンドは、コマンドログに以下のように表示されます。</target>
        </trans-unit>
        <trans-unit id="2f2e96cc6c8da251bc9647783d0cb79ff5e5e3af" translate="yes" xml:space="preserve">
          <source>The commands above will display in the Command Log as:</source>
          <target state="translated">上記のコマンドは、コマンドログに以下のように表示されます。</target>
        </trans-unit>
        <trans-unit id="f0725906d4c2b2ca52188d3ad8d1c30d5cd2bf7c" translate="yes" xml:space="preserve">
          <source>The commands outside of the &lt;code&gt;.then()&lt;/code&gt; will not run until all of the nested commands finish.</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 以外のコマンドは、ネストされたコマンドがすべて完了するまで実行されません。</target>
        </trans-unit>
        <trans-unit id="3f4a9031715a9c5d74d63d1a1c3ee1723f57d20c" translate="yes" xml:space="preserve">
          <source>The companion blog for the Cypress + Percy webinar</source>
          <target state="translated">サイプレス+パーシーのウェビナーのコンパニオンブログ</target>
        </trans-unit>
        <trans-unit id="4168d86596e0f6919fda725c4ea31e0613890cca" translate="yes" xml:space="preserve">
          <source>The companion slides for the Cypress + Percy webinar</source>
          <target state="translated">サイプレス+パーシーのウェビナーのコンパニオンスライド</target>
        </trans-unit>
        <trans-unit id="ee226a689fadf8930085a1220f1d39c15724f50d" translate="yes" xml:space="preserve">
          <source>The component responsible for the file-watching behavior in Cypress is the &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;Cypress Browserify Preprocessor&lt;/a&gt;. This is the default file-watcher packaged with Cypress.</source>
          <target state="translated">サイプレスのファイル監視動作を担当するコンポーネントは、&lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;サイプレスブラウザファイプリプロセッサ&lt;/a&gt;です。これはサイプレスに同梱されているデフォルトのファイルウォッチャーです。</target>
        </trans-unit>
        <trans-unit id="02e7ca3e2e6d1a4b6f203ba2b06c2581d64cf1f9" translate="yes" xml:space="preserve">
          <source>The compression step will be skipped completely, so the video will be large, but the processing should be faster.</source>
          <target state="translated">圧縮ステップは完全にスキップされるので、動画は大きくなりますが、処理は速くなるはずです。</target>
        </trans-unit>
        <trans-unit id="f3276a644711d9a23c186c57f7ef22d4aae4e8e6" translate="yes" xml:space="preserve">
          <source>The configuration includes the list of browsers found on your system that are available to Cypress.</source>
          <target state="translated">設定には、Cypress で利用可能なシステムで見つかったブラウザのリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="8da7d874dd5824a52d50687860fed9cc12482328" translate="yes" xml:space="preserve">
          <source>The console log when clicking on the &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command now displays its resolved &lt;code&gt;options&lt;/code&gt; arguments. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3721&quot;&gt;#3721&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;コマンドをクリックしたときのコンソールログに、解決された &lt;code&gt;options&lt;/code&gt; 引数が表示されるようになりました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3721&quot;&gt;＃3721&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d61a7f3b5c4b2caf0cc5e0e3bb469d54f06266e" translate="yes" xml:space="preserve">
          <source>The constructor for creating the event object (e.g. &lt;code&gt;MouseEvent&lt;/code&gt;, &lt;code&gt;KeyboardEvent&lt;/code&gt;)</source>
          <target state="translated">イベントオブジェクトを作成するためのコンストラクター（例： &lt;code&gt;MouseEvent&lt;/code&gt; 、 &lt;code&gt;KeyboardEvent&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c261841b981d947e574c27b1941722d29f151caf" translate="yes" xml:space="preserve">
          <source>The contents to be written to the file.</source>
          <target state="translated">ファイルに書き込む内容。</target>
        </trans-unit>
        <trans-unit id="b3f774babd27a472199a3b4de4db145c6fa70f1e" translate="yes" xml:space="preserve">
          <source>The context the function was invoked with</source>
          <target state="translated">関数が呼び出されたコンテキスト</target>
        </trans-unit>
        <trans-unit id="24f5d878b392be08728b21c455c6f6495f8a9dad" translate="yes" xml:space="preserve">
          <source>The contributing Readme&amp;rsquo;s have been updated and improved for each package. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/995&quot;&gt;#995&lt;/a&gt;.</source>
          <target state="translated">貢献するReadmeは、パッケージごとに更新および改善されています。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/995&quot;&gt;＃995を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="30d3170cf03d96b57aed3cf5f74972ae222dcd93" translate="yes" xml:space="preserve">
          <source>The cookie path</source>
          <target state="translated">クッキーのパス</target>
        </trans-unit>
        <trans-unit id="aac7d447ad2ee9ddbd748f064c60234ea6c1382c" translate="yes" xml:space="preserve">
          <source>The coordinates we fired the event at will generally be available when clicking the command in the &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt;.</source>
          <target state="translated">イベントを発生させた座標は、通常、&lt;a href=&quot;test-runner#Command-Log&quot;&gt;コマンドログで&lt;/a&gt;コマンドをクリックすると表示されます。</target>
        </trans-unit>
        <trans-unit id="8f4a61a68e3a2b1f2e6104af9f25e662e55b17d8" translate="yes" xml:space="preserve">
          <source>The correct way to write the above test code is using Mocha&amp;rsquo;s &lt;code&gt;done&lt;/code&gt; to signify it is asynchronous.</source>
          <target state="translated">上記のテストコードを記述する正しい方法は、Mochaの &lt;code&gt;done&lt;/code&gt; を使用して非同期であることを示すことです。</target>
        </trans-unit>
        <trans-unit id="dadcab1f323ca88bc211ec417914f0d0c1b622fe" translate="yes" xml:space="preserve">
          <source>The correct way to write the above test code would be to return our &lt;code&gt;Promise&lt;/code&gt;:</source>
          <target state="translated">上記のテストコードを記述する正しい方法は、 &lt;code&gt;Promise&lt;/code&gt; を返すことです。</target>
        </trans-unit>
        <trans-unit id="27c22bf4fb5535fec37a2a7fe63992d37be4f061" translate="yes" xml:space="preserve">
          <source>The current DOM element is yielded</source>
          <target state="translated">現在の DOM 要素は</target>
        </trans-unit>
        <trans-unit id="eebe03b2aca7630c1d74c0bfba491a55474b8327" translate="yes" xml:space="preserve">
          <source>The current size and scale of the AUT is displayed in the top right corner of the window.</source>
          <target state="translated">現在のAUTのサイズとスケールは、ウィンドウの右上に表示されます。</target>
        </trans-unit>
        <trans-unit id="4781942186930dff32c0d286ce4f66dc245b30bc" translate="yes" xml:space="preserve">
          <source>The current subject is yielded</source>
          <target state="translated">現在のお題は</target>
        </trans-unit>
        <trans-unit id="f50dd660e4239422730d72a74c0cce1293a692a8" translate="yes" xml:space="preserve">
          <source>The current subject that is yielded by the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; is exposed as the variable &lt;code&gt;subject&lt;/code&gt; within your Developer Tools so that you can interact with it in the console.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;によって生成された現在のサブジェクトは、コンソールで操作できるように、開発者ツール内で変数 &lt;code&gt;subject&lt;/code&gt; として公開されます。</target>
        </trans-unit>
        <trans-unit id="b383ab8ae28caca8c87a0868b45774437ee2d8b3" translate="yes" xml:space="preserve">
          <source>The currently running test is now scrolled into view. This behavior can be turned off by scrolling in the Command Log or selecting to disable auto-scroll at the top of the Command Log. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/194&quot;&gt;#194&lt;/a&gt;</source>
          <target state="translated">現在実行中のテストがスクロールして表示されます。この動作を無効にするには、コマンドログをスクロールするか、コマンドログの上部にある自動スクロールを無効にします。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/194&quot;&gt;＃194&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b05b04fac4794bff342571ce4f7b33076a445505" translate="yes" xml:space="preserve">
          <source>The cypress ci command has been deprecated</source>
          <target state="translated">cypress ci コマンドは非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="42db91dee6f849b3cf1c07fa68a38ba9b7ae8dd2" translate="yes" xml:space="preserve">
          <source>The date and time the screenshot was taken. ISO 8601 format in UTC (example: &lt;code&gt;'2020-03-09T07:30:37.686Z'&lt;/code&gt;)</source>
          <target state="translated">スクリーンショットが撮られた日時。UTCで &lt;code&gt;'2020-03-09T07:30:37.686Z'&lt;/code&gt; 形式（例：'2020-03-09T07：30：37.686Z'）</target>
        </trans-unit>
        <trans-unit id="f7adb7486d8b6a25dabea88934af9a5dcf464f77" translate="yes" xml:space="preserve">
          <source>The debug window now works again.</source>
          <target state="translated">デバッグウィンドウが再び動作するようになりました。</target>
        </trans-unit>
        <trans-unit id="87da6011496aa3691ab6b3d72205bb8349b58ecc" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;browserify&lt;/code&gt; plugin no longer fires &lt;code&gt;watched:file:changed&lt;/code&gt; twice leading to an uncaught exception that was popping up in the console. Also fixed a minor state bug in the &lt;code&gt;browserify&lt;/code&gt; package. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/968&quot;&gt;#968&lt;/a&gt;.</source>
          <target state="translated">デフォルトの &lt;code&gt;browserify&lt;/code&gt; プラグインが &lt;code&gt;watched:file:changed&lt;/code&gt; を 2回起動することがなくなり、キャッチされない例外がコンソールにポップアップされていました。 &lt;code&gt;browserify&lt;/code&gt; パッケージの小さな状態のバグも修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/968&quot;&gt;＃968を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="93e542c6c97f6e19c72fff0a9669a38634323629" translate="yes" xml:space="preserve">
          <source>The default XHR configuration can now be overwritten in a single area.</source>
          <target state="translated">デフォルトのXHR設定を1つのエリアで上書きできるようになりました。</target>
        </trans-unit>
        <trans-unit id="b220714521cf81a6fb967f162d7a8403c43f032d" translate="yes" xml:space="preserve">
          <source>The default behavior of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; has changed from &lt;code&gt;force404: true&lt;/code&gt; to become &lt;code&gt;force404: false&lt;/code&gt;. In other words, Cypress will no longer forcibly send XHR&amp;rsquo;s to 404 status when these XHR&amp;rsquo;s do not match any existing &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;. This change better aligns with predictable usage for most Cypress users.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;のデフォルトの動作がforce404 &lt;code&gt;force404: true&lt;/code&gt; から &lt;code&gt;force404: false&lt;/code&gt; 変更されました。つまり、これらのXHRが既存の&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; と&lt;/a&gt;一致しない場合、サイプレスはXHRを強制的に404ステータスに送信しなくなります。この変更は、ほとんどのサイプレスユーザーの予測可能な使用法とよりよく一致します。</target>
        </trans-unit>
        <trans-unit id="e4e9eda288d479899c5070e3fd8ca817076639f1" translate="yes" xml:space="preserve">
          <source>The default behavior of Cypress can be modified by supplying any of the following configuration options. Below is a list of available options and their default values.</source>
          <target state="translated">Cypress のデフォルトの動作は、以下の設定オプションのいずれかを指定することで変更することができます。以下に、利用可能なオプションとそのデフォルト値のリストを示します。</target>
        </trans-unit>
        <trans-unit id="dadbead9d9ff3ff83e3d3024df9c3fa5fbc08537" translate="yes" xml:space="preserve">
          <source>The default options passed to &lt;code&gt;minimatch&lt;/code&gt; when using glob strings to match URLs</source>
          <target state="translated">glob文字列を使用してURL を &lt;code&gt;minimatch&lt;/code&gt; ときにminimatchに渡されるデフォルトのオプション</target>
        </trans-unit>
        <trans-unit id="656569fc7a8c5735f9199c51324e2ff1e5b8d7a7" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;port&lt;/code&gt; within a project&amp;rsquo;s global &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; has changed from &lt;code&gt;2020&lt;/code&gt; to now being a random open port. You can still configure a specific &lt;code&gt;port&lt;/code&gt; if needed within the &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">プロジェクトのグローバル&lt;a href=&quot;configuration&quot;&gt;構成&lt;/a&gt;内の &lt;code&gt;port&lt;/code&gt; のデフォルト値は、 &lt;code&gt;2020&lt;/code&gt; 年からランダムに開いたポートに変更されました。構成内で必要に応じて、特定の &lt;code&gt;port&lt;/code&gt; 構成することもでき&lt;a href=&quot;configuration&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c045d97cef57725b7e5a1c7d7b084ee34492c3ec" translate="yes" xml:space="preserve">
          <source>The desktop application has been completely redesigned. We have moved from a tray application to a standard dock application. The list of projects is now in the same window as the list of tests in a project. As each test runs, the application highlights the currently running spec and displays the browser version running. The configuration of a project is now displayed in its own tab. There is now a Desktop Menu where you can logout, check for updates, or view help links.</source>
          <target state="translated">デスクトップアプリを一新しました。トレイアプリケーションから標準のドックアプリケーションに移行しました。プロジェクトのリストは、プロジェクト内のテストのリストと同じウィンドウに表示されるようになりました。各テストが実行されるたびに、アプリケーションは現在実行中の仕様をハイライトし、実行中のブラウザのバージョンを表示します。プロジェクトの設定は、それ自身のタブに表示されるようになりました。ログアウト、アップデートの確認、ヘルプリンクの表示ができるデスクトップメニューが追加されました。</target>
        </trans-unit>
        <trans-unit id="84620e58ffab27c5c7f1b25b98727dbe1c3688b5" translate="yes" xml:space="preserve">
          <source>The difference in running times and machines used is very clear when looking at the &lt;a href=&quot;#Machines-View&quot;&gt;Machines View&lt;/a&gt; on the Dashboard. Notice how the run parallelized across 2 machines automatically ran all specs based on their duration, while the run without parallelization did not.</source>
          <target state="translated">ダッシュボードの&lt;a href=&quot;#Machines-View&quot;&gt;[マシン]ビューを見る&lt;/a&gt;と、実行時間と使用するマシンの違いが非常に明確です。2つのマシン間で並列化された実行では、継続時間に基づいてすべてのスペックが自動的に実行されましたが、並列化なしの実行では実行されなかったことに注意してください。</target>
        </trans-unit>
        <trans-unit id="3c0e12d3e8a6e8a148ecd00e3f23503fa3043a15" translate="yes" xml:space="preserve">
          <source>The direct download will always grab the latest available version. Your platform will be detected automatically.</source>
          <target state="translated">直接ダウンロードは常に最新の利用可能なバージョンを取得します。あなたのプラットフォームは自動的に検出されます。</target>
        </trans-unit>
        <trans-unit id="aaa8453925f36821d210443898f7bbd43f7082ff" translate="yes" xml:space="preserve">
          <source>The direction to navigate.</source>
          <target state="translated">航行する方向。</target>
        </trans-unit>
        <trans-unit id="12955aeff648f9bf99b7d35972af5d6521b9b4df" translate="yes" xml:space="preserve">
          <source>The distance in pixels an element must exceed over time to be &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Animations&quot;&gt;considered animating&lt;/a&gt;.</source>
          <target state="translated">要素が&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Animations&quot;&gt;アニメーション化さ&lt;/a&gt;れていると見なされるには、時間の経過とともに要素が超える必要があるピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="87831849a3c72449502f9290e2e9d7a48fddbe79" translate="yes" xml:space="preserve">
          <source>The distance in pixels an element must exceed over time to be considered animating</source>
          <target state="translated">要素がアニメーション化されているとみなされるためには、時間の経過とともにピクセル単位の距離を超えなければなりません。</target>
        </trans-unit>
        <trans-unit id="9f00c259add40268007481b9b7b23cbe9f8f37c4" translate="yes" xml:space="preserve">
          <source>The distance in pixels from element&amp;rsquo;s left to trigger the event.</source>
          <target state="translated">イベントをトリガーする要素の左からのピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="84f9ead7c8116a292eee10ab3a179f8009806f93" translate="yes" xml:space="preserve">
          <source>The distance in pixels from element&amp;rsquo;s top to trigger the event.</source>
          <target state="translated">イベントをトリガーする要素の上部からのピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="2b5e5ea14de7c1d69850b4c258690bbfb398c989" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the click.</source>
          <target state="translated">クリックを発行する要素の左からのピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="8b0907a1b12c2afc11cfaabeda830378efead1d0" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the double click.</source>
          <target state="translated">ダブルクリックを発行するための要素の左からのピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="702a5646e5a77ea6d043ac06725e983326dab03c" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the right click.</source>
          <target state="translated">右クリックを発行するための要素の左からのピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="058daa11285b49de690704beee7e9e80583e10bd" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the click.</source>
          <target state="translated">クリックを発行する要素の上部からのピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="139cd6856b44a5da7370e9b28a38a10b8d73198f" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the double click.</source>
          <target state="translated">ダブルクリックを発行するための要素の上部からのピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="fc4ec431b6ade65c9a5c185be8c080616b5caa39" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the right click.</source>
          <target state="translated">右クリックを発行するための要素の上部からのピクセル単位の距離。</target>
        </trans-unit>
        <trans-unit id="2ceeaaaa0de1fae94612033134e1948a67423d8c" translate="yes" xml:space="preserve">
          <source>The distance in pixels from window/element&amp;rsquo;s left or percentage of the window/element&amp;rsquo;s width to scroll to.</source>
          <target state="translated">ウィンドウ/要素の左からのピクセル単位の距離、またはスクロールするウィンドウ/要素の幅の割合。</target>
        </trans-unit>
        <trans-unit id="5f90015069dd995c1aba9c1530ade43fb58b0772" translate="yes" xml:space="preserve">
          <source>The distance in pixels from window/element&amp;rsquo;s top or percentage of the window/element&amp;rsquo;s height to scroll to.</source>
          <target state="translated">スクロールするウィンドウ/要素の上部からの距離またはピクセル/ウィンドウ/要素の高さの割合。</target>
        </trans-unit>
        <trans-unit id="bc3ea69b7360744d05bb93f8ae6f767ffc990c02" translate="yes" xml:space="preserve">
          <source>The docs have not yet been updated to reflect the changes to &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ドキュメントは、&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;への変更を反映するようにまだ更新されていません。</target>
        </trans-unit>
        <trans-unit id="6cd8428dd11106d767a00d4a0975a15492a52aae" translate="yes" xml:space="preserve">
          <source>The domain the cookie is visible to</source>
          <target state="translated">クッキーが見えるドメイン</target>
        </trans-unit>
        <trans-unit id="10e5b447eb11390c3666876771f76899ac971dba" translate="yes" xml:space="preserve">
          <source>The double click below will be issued inside of the element (30px from the left and 10px from the top).</source>
          <target state="translated">下のダブルクリックは要素の内側(左から30px、上から10px)に発行されます。</target>
        </trans-unit>
        <trans-unit id="b5ad8169dbed2921957df939c24b0a9bd5dee0d7" translate="yes" xml:space="preserve">
          <source>The download server URL is &lt;code&gt;https://download.cypress.io&lt;/code&gt;.</source>
          <target state="translated">ダウンロードサーバーのURLは &lt;code&gt;https://download.cypress.io&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c0f5fafcb4e06713527bba1e2c4d16d7dfbefb70" translate="yes" xml:space="preserve">
          <source>The easiest way to check that this happened is likely with a unit or integration test at the server level and not at the end-to-end level. You generally do not need to test things only your server interacts with like side effects and services.</source>
          <target state="translated">これが起こったことを確認する最も簡単な方法は、エンドツーエンドではなく、サーバーレベルでユニットテストや統合テストを行うことでしょう。一般的には、副作用やサービスのようにサーバーが相互作用するものだけをテストする必要はありません。</target>
        </trans-unit>
        <trans-unit id="b11ce10c86a2197eaccc24d1e613d430b5f1cb3b" translate="yes" xml:space="preserve">
          <source>The el subject is changed with another command</source>
          <target state="translated">el の件名は別のコマンドで変更されます。</target>
        </trans-unit>
        <trans-unit id="77de30354c22e5ec8dd645947362de5b7cec125d" translate="yes" xml:space="preserve">
          <source>The element is being covered by another element</source>
          <target state="translated">要素が別の要素で覆われている</target>
        </trans-unit>
        <trans-unit id="1a632603f722d7f42f6e33adf0509d3384d6c9d6" translate="yes" xml:space="preserve">
          <source>The element is disabled</source>
          <target state="translated">要素は無効化されています。</target>
        </trans-unit>
        <trans-unit id="c7119acb5137f8a22445f07ef3629e78c9da3828" translate="yes" xml:space="preserve">
          <source>The element is not visible</source>
          <target state="translated">要素が表示されない</target>
        </trans-unit>
        <trans-unit id="5493bb07248f38cd959d9e153e545952c54d513b" translate="yes" xml:space="preserve">
          <source>The element is queried, and Cypress automatically waits and retries for a few moments if it isn&amp;rsquo;t found immediately.</source>
          <target state="translated">要素が照会され、サイプレスはすぐに見つからない場合、自動的にしばらく待ってから再試行します。</target>
        </trans-unit>
        <trans-unit id="2d4734d9db362c541365dbb5bf3af37bb8451ae6" translate="yes" xml:space="preserve">
          <source>The element must first reach actionability</source>
          <target state="translated">要素は最初にアクションアビリティに到達しなければなりません。</target>
        </trans-unit>
        <trans-unit id="62a2de0cf7b48d63f3d28689f77aa2911c184179" translate="yes" xml:space="preserve">
          <source>The element we want to &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; on could be covered by another element.</source>
          <target state="translated">私たちがしたい要素&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;には別の要素でカバーすることができます。</target>
        </trans-unit>
        <trans-unit id="51971fd36c549ea21390e40e13a475a94d591718" translate="yes" xml:space="preserve">
          <source>The element where you want finding next siblings to stop.</source>
          <target state="translated">次の兄弟を見つけてはやめてほしい要素。</target>
        </trans-unit>
        <trans-unit id="b2eaca189274f418348f69f9446ee71d73342006" translate="yes" xml:space="preserve">
          <source>The element where you want finding parent ancestors to stop.</source>
          <target state="translated">親の先祖探しを停止させたい要素。</target>
        </trans-unit>
        <trans-unit id="3dc1fd5f7be297c87f2069dc9187d17dede629c8" translate="yes" xml:space="preserve">
          <source>The element where you want finding previous siblings to stop.</source>
          <target state="translated">前の兄弟を見つけるのをやめてほしい要素。</target>
        </trans-unit>
        <trans-unit id="9517b492e4e12f5080cf5d8e24b162fe5c92bd53" translate="yes" xml:space="preserve">
          <source>The element&amp;rsquo;s center is hidden from view</source>
          <target state="translated">要素の中心が非表示になります</target>
        </trans-unit>
        <trans-unit id="bdde7add66a8402ff4a1b697154d2cb179f643ba" translate="yes" xml:space="preserve">
          <source>The encoding to be used when reading the file. The following encodings are supported:</source>
          <target state="translated">ファイルを読み込む際に使用するエンコーディング。以下のエンコーディングがサポートされています。</target>
        </trans-unit>
        <trans-unit id="a8b40510ed82ab023b00045c5eda22d07440c34a" translate="yes" xml:space="preserve">
          <source>The encoding to be used when serializing the response body. The following encodings are supported: &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;hex&lt;/code&gt;, &lt;code&gt;latin1&lt;/code&gt;, &lt;code&gt;utf8&lt;/code&gt;, &lt;code&gt;utf-8&lt;/code&gt;, &lt;code&gt;ucs2&lt;/code&gt;, &lt;code&gt;ucs-2&lt;/code&gt;, &lt;code&gt;utf16le&lt;/code&gt;, &lt;code&gt;utf-16le&lt;/code&gt;</source>
          <target state="translated">応答本文をシリアル化するときに使用されるエンコーディング。次のエンコーディングがサポートされています： &lt;code&gt;ascii&lt;/code&gt; 、 &lt;code&gt;base64&lt;/code&gt; 、 &lt;code&gt;binary&lt;/code&gt; 、 &lt;code&gt;hex&lt;/code&gt; 、 &lt;code&gt;latin1&lt;/code&gt; 、 &lt;code&gt;utf8&lt;/code&gt; 、 &lt;code&gt;utf-8&lt;/code&gt; 、 &lt;code&gt;ucs2&lt;/code&gt; 、 &lt;code&gt;ucs-2&lt;/code&gt; 、 &lt;code&gt;utf16le&lt;/code&gt; 、 &lt;code&gt;utf-16le&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96ca51aba74d07f5f8cf66230fc93720efa58ef0" translate="yes" xml:space="preserve">
          <source>The encoding to be used when writing to the file</source>
          <target state="translated">ファイルへの書き込み時に使用するエンコーディング</target>
        </trans-unit>
        <trans-unit id="e2fd717ca3b4626fc6e12af6ba37d567cb4e2448" translate="yes" xml:space="preserve">
          <source>The encoding to be used when writing to the file. The following encodings are supported:</source>
          <target state="translated">ファイルへの書き込み時に使用するエンコーディング。以下のエンコーディングがサポートされています。</target>
        </trans-unit>
        <trans-unit id="139e20870845dc46ba46bac9091f5cc25631ba50" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; has been removed. You should use the equivalent environment variable &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; instead.</source>
          <target state="translated">環境変数 &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; が削除されました。代わりに、同等の環境変数 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5be6368bc3a0e3503078cdfd866f0a19f0a6e570" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; has been removed. To skip the binary install, set &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt;.</source>
          <target state="translated">環境変数 &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; が削除されました。バイナリインストールをスキップするには、 &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="2ecdf036563a0aff74b83c357a4dcfe4ab1d7525" translate="yes" xml:space="preserve">
          <source>The error message when visiting a site with an invalid content-type now prints the correct content-type of the response Cypress received from the web server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;#3101&lt;/a&gt;.</source>
          <target state="translated">コンテンツタイプが無効なサイトにアクセスしたときのエラーメッセージは、サイプレスがWebサーバーから受け取った応答の正しいコンテンツタイプを出力するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;＃3101を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="14d255f944f14c38878f32d811f977f90001707d" translate="yes" xml:space="preserve">
          <source>The error message: &lt;code&gt;Cannot call cy.method() because the current subject has been removed or detached from the DOM.&lt;/code&gt; has been rewritten to provide much clearer information on why this is happening, including a string representation of your DOM element. Additionally it will have its own error page dedicated to explaining how this happens and what you can do to prevent it.</source>
          <target state="translated">エラーメッセージ： &lt;code&gt;Cannot call cy.method() because the current subject has been removed or detached from the DOM.&lt;/code&gt; DOM要素の文字列表現を含め、これが発生している理由についてより明確な情報を提供するように書き直されました。さらに、これがどのように発生し、それを防ぐために何ができるかを説明するための専用のエラーページがあります。</target>
        </trans-unit>
        <trans-unit id="75829d89fbb6e250c1bcb9fa477b161458e717b2" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;after:screenshot&lt;/code&gt; is called after a screenshot is taken and saved to disk.</source>
          <target state="translated">イベント &lt;code&gt;after:screenshot&lt;/code&gt; は、スクリーンショットが取得されてディスクに保存された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ef7a4925512fa023fe9bd6ef34d2a29ebf2c1281" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;before:browser:launch&lt;/code&gt; can be used to modify the launch arguments for each particular browser.</source>
          <target state="translated">&lt;code&gt;before:browser:launch&lt;/code&gt; イベントを使用して、特定の各ブラウザーの起動引数を変更できます。</target>
        </trans-unit>
        <trans-unit id="f3d99a46ca819e2e53166bba97742dd15e920a4a" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;file:preprocessor&lt;/code&gt; is used to customize how your test code is transpiled and sent to the browser. By default Cypress handles CoffeeScript and ES6 using &lt;code&gt;babel&lt;/code&gt; and then uses &lt;code&gt;browserify&lt;/code&gt; to package it for the browser.</source>
          <target state="translated">イベント &lt;code&gt;file:preprocessor&lt;/code&gt; は、テストコードを変換してブラウザに送信する方法をカスタマイズするために使用されます。デフォルトでは、サイプレスは &lt;code&gt;babel&lt;/code&gt; を使用してCoffeeScriptとES6を処理し、 &lt;code&gt;browserify&lt;/code&gt; を使用してブラウザーにパッケージ化します。</target>
        </trans-unit>
        <trans-unit id="bddb4f59232d188de74910418f286f2856636e48" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;task&lt;/code&gt; is used in conjunction with the &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command. It allows you to write arbitrary code in Node to accomplish tasks that aren&amp;rsquo;t possible in the browser.</source>
          <target state="translated">イベント &lt;code&gt;task&lt;/code&gt; は、&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;コマンドと組み合わせて使用​​されます。Nodeで任意のコードを記述して、ブラウザーでは実行できないタスクを実行できます。</target>
        </trans-unit>
        <trans-unit id="cb85755389a7698ff9f2131259f0b689236412dd" translate="yes" xml:space="preserve">
          <source>The event will fire each time &lt;code&gt;cypress run&lt;/code&gt; executes. As a result, if running your specs in &lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;parallel&lt;/a&gt;, the event will fire once for each machine on which &lt;code&gt;cypress run&lt;/code&gt; is called.</source>
          <target state="translated">このイベントは、 &lt;code&gt;cypress run&lt;/code&gt; 実行されるたびに発生します。その結果、スペックを&lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;並行して&lt;/a&gt;実行している場合、イベントは、 &lt;code&gt;cypress run&lt;/code&gt; が呼び出されたマシンごとに1回発生します。</target>
        </trans-unit>
        <trans-unit id="a341b7038edecf8e8d3556690dcac81893d12f6b" translate="yes" xml:space="preserve">
          <source>The event will fire each time &lt;code&gt;cypress run&lt;/code&gt; executes. As a result, if running your specs in &lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;parallel&lt;/a&gt;, the event will fire once for each machine on which the tests are run.</source>
          <target state="translated">このイベントは、 &lt;code&gt;cypress run&lt;/code&gt; 実行されるたびに発生します。その結果、スペックを&lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;並行して&lt;/a&gt;実行している場合、テストが実行されているマシンごとにイベントが1回発生します。</target>
        </trans-unit>
        <trans-unit id="a417040e835b0b4bf3df08c1b7eb5dbd3fea0707" translate="yes" xml:space="preserve">
          <source>The events are fired to spec, including the coordinates of where the event took place.</source>
          <target state="translated">イベントが発生した場所の座標を含めて仕様通りに発射されます。</target>
        </trans-unit>
        <trans-unit id="de7c385dad035257621ade048482ab3f07cac274" translate="yes" xml:space="preserve">
          <source>The exact default configuration options &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor#browserifyoptions&quot;&gt;can be found here&lt;/a&gt;.</source>
          <target state="translated">正確なデフォルト設定オプション&lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor#browserifyoptions&quot;&gt;はここにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="910bea55225cac32deb7ac98572ed969a1c517e6" translate="yes" xml:space="preserve">
          <source>The example above would resolve in the following order:</source>
          <target state="translated">上記の例では、以下の順番で解決します。</target>
        </trans-unit>
        <trans-unit id="b58ede9f165be804049ed9aa3d8d05f50412f5b2" translate="yes" xml:space="preserve">
          <source>The example below gets the text contained within one element and saves it in a closure variable. Then the test gets the text in another element and asserts that the two text values are the same after normalizing.</source>
          <target state="translated">以下の例では、1 つの要素に含まれるテキストを取得し、それをクロージャ変数に保存しています。次に、テストは別の要素内のテキストを取得し、正規化後に2つのテキスト値が同じであることを主張します。</target>
        </trans-unit>
        <trans-unit id="47e706104c1f7dc9f26c4beb05980501c2d936d7" translate="yes" xml:space="preserve">
          <source>The example below is a use case where we are asserting across multiple elements. Using a &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; callback function is a great way to query from a &lt;strong&gt;parent&lt;/strong&gt; into multiple children elements and assert something about their state.</source>
          <target state="translated">以下の例は、複数の要素にわたってアサートする使用例です。使用&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;コールバック関数は、クエリからの素晴らしい方法である&lt;strong&gt;親&lt;/strong&gt;の複数の子要素にし、それらの状態について何か主張しています。</target>
        </trans-unit>
        <trans-unit id="49acc9498a2a7c541c7d366c6fdc2ca30f545f46" translate="yes" xml:space="preserve">
          <source>The example below shows how to delete the recorded video for a spec with no failing tests.</source>
          <target state="translated">以下の例では、テストに失敗していないスペックの録画動画を削除する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4981ca5bd4758d48f00c30b0218bc04b93b9b47d" translate="yes" xml:space="preserve">
          <source>The example below will fail because you&amp;rsquo;ve forcibly terminated the test early with mocha&amp;rsquo;s &lt;code&gt;done&lt;/code&gt;.</source>
          <target state="translated">以下の例は、mocha's &lt;code&gt;done&lt;/code&gt; でテストを強制的に早期に終了したため失敗します。</target>
        </trans-unit>
        <trans-unit id="bc951f38f465f285721a93cef38e6e2654d44667" translate="yes" xml:space="preserve">
          <source>The example_spec from the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;kitchen-sink&lt;/a&gt; will never accidentally be seeded when running &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a brand new project.</source>
          <target state="translated">新しいプロジェクトで&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; を実行&lt;/a&gt;しているときに、&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;キッチンシンク&lt;/a&gt;のexample_spec が誤ってシードされることはありません。</target>
        </trans-unit>
        <trans-unit id="783659466354f78195d97cb44d5d0aae35d7873e" translate="yes" xml:space="preserve">
          <source>The examples below are from a run of our &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;Kitchen Sink Example&lt;/a&gt; project. You can see the results of this run on the &lt;a href=&quot;https://dashboard.cypress.io/#/projects/4b7344/runs/2929/specs&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="translated">以下の例は、&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;Kitchen Sink Example&lt;/a&gt;プロジェクトの実行からのものです。この実行の結果は、&lt;a href=&quot;https://dashboard.cypress.io/#/projects/4b7344/runs/2929/specs&quot;&gt;サイプレスダッシュボード&lt;/a&gt;で確認できます。</target>
        </trans-unit>
        <trans-unit id="0813eac0d04e75c8c78a9844e0f09353daf385a5" translate="yes" xml:space="preserve">
          <source>The existing &lt;code&gt;.cy&lt;/code&gt; cache and settings are now correctly copied again after an app update.</source>
          <target state="translated">既存の &lt;code&gt;.cy&lt;/code&gt; キャッシュと設定は、アプリの更新後に再び正しくコピーされるようになりました。</target>
        </trans-unit>
        <trans-unit id="72f0e27cd05c046a77ed8585ffd6cb1cc65b9462" translate="yes" xml:space="preserve">
          <source>The exported function is called whenever a project is opened either with &lt;a href=&quot;../../guides/guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../guides/guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エクスポートされた関数は、&lt;a href=&quot;../../guides/guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../guides/guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; で&lt;/a&gt;プロジェクトが開かれるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="55a3989fcb4da64675c724ee8d4e6a26b14baf01" translate="yes" xml:space="preserve">
          <source>The exported function is called whenever a project is opened either with &lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エクスポートされた関数は、プロジェクトが&lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;いずれかで開かれるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b7563b9989f1b2d437a36185b7a53dead9aed4fd" translate="yes" xml:space="preserve">
          <source>The file not existing</source>
          <target state="translated">存在しないファイル</target>
        </trans-unit>
        <trans-unit id="23a49b9ea91850653755c70fdf57eefa7c124be7" translate="yes" xml:space="preserve">
          <source>The first 10 failures are displayed with a link to more.</source>
          <target state="translated">最初の10件の失敗は、さらにリンクを貼って表示されます。</target>
        </trans-unit>
        <trans-unit id="06769657bc571e4f949e981a579c5c437feb6e92" translate="yes" xml:space="preserve">
          <source>The first and most important concept you should recognize is&amp;hellip;</source>
          <target state="translated">あなたが認識すべき最初で最も重要な概念は&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="0ff467d5777b46834de143161a318bc5b7fc4507" translate="yes" xml:space="preserve">
          <source>The first group can be called &lt;code&gt;Windows/Chrome 69&lt;/code&gt;.</source>
          <target state="translated">最初のグループは &lt;code&gt;Windows/Chrome 69&lt;/code&gt; と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="55ee8f7dd7dcbfa53e5e642cdd583c30e9c765ec" translate="yes" xml:space="preserve">
          <source>The first period waits for a matching request to leave the browser. This duration is configured by the &lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt;&lt;code&gt;requestTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;5000&lt;/code&gt; ms.</source>
          <target state="translated">最初の期間は、一致する要求がブラウザを離れるのを待ちます。この期間は&lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt; &lt;code&gt;requestTimeout&lt;/code&gt; &lt;/a&gt;オプションによって構成されます-デフォルトは &lt;code&gt;5000&lt;/code&gt; ミリ秒です。</target>
        </trans-unit>
        <trans-unit id="567af7f315e8ecb7312738fa618eda9e0172eb25" translate="yes" xml:space="preserve">
          <source>The first period waits for a matching request to leave the browser. This duration is configured by the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Timeouts&quot;&gt;&lt;code&gt;requestTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;5000&lt;/code&gt; ms.</source>
          <target state="translated">最初の期間は、一致するリクエストがブラウザを離れるのを待ちます。この期間は、&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Timeouts&quot;&gt; &lt;code&gt;requestTimeout&lt;/code&gt; &lt;/a&gt;オプションによって構成されます。デフォルトは &lt;code&gt;5000&lt;/code&gt; ミリ秒です。</target>
        </trans-unit>
        <trans-unit id="58ec06f0aaa09e291124df55221d849d361b8bb4" translate="yes" xml:space="preserve">
          <source>The first solution we recommend is to avoid unnecessarily splitting commands that query elements. In our case we first query elements using &lt;code&gt;cy.get()&lt;/code&gt; and then query from that list of elements using &lt;code&gt;.find()&lt;/code&gt;. We can combine two separate queries into one - forcing the combined query to be retried.</source>
          <target state="translated">推奨する最初のソリューションは、要素をクエリするコマンドを不必要に分割しないことです。我々の場合には使用して私たち最初のクエリ要素 &lt;code&gt;cy.get()&lt;/code&gt; してから使用して要素のリストからクエリ &lt;code&gt;.find()&lt;/code&gt; を。2つの別々のクエリを1つに結合できます-結合されたクエリを強制的に再試行します。</target>
        </trans-unit>
        <trans-unit id="e71cb3a301013cd595e3290885e5c7fab4c3f8c3" translate="yes" xml:space="preserve">
          <source>The folder, the files within the folder, and all child folders and their files (recursively) are watched.</source>
          <target state="translated">フォルダ、フォルダ内のファイル、およびすべての子フォルダとそのファイル(再帰的に)が監視されます。</target>
        </trans-unit>
        <trans-unit id="ae3bbb8555c8359e3faefc48ca2f99d8f8c4745b" translate="yes" xml:space="preserve">
          <source>The following XHR&amp;rsquo;s which were &lt;code&gt;xhr.open(...)&lt;/code&gt; with these URLs would:</source>
          <target state="translated">次のXHRは、これらのURLで &lt;code&gt;xhr.open(...)&lt;/code&gt; でした。</target>
        </trans-unit>
        <trans-unit id="7917b639dd89e87c70cf394ebb0d89f5bf79f91a" translate="yes" xml:space="preserve">
          <source>The following XHRs which were &lt;code&gt;xhr.open(...)&lt;/code&gt; with these URLs would:</source>
          <target state="translated">これらのURLで &lt;code&gt;xhr.open(...)&lt;/code&gt; であった次のXHRは次のようになります。</target>
        </trans-unit>
        <trans-unit id="fba11f3de4cc3cfbc18c034553c987492a50f8a3" translate="yes" xml:space="preserve">
          <source>The following calculations factor in CSS translations and transforms.</source>
          <target state="translated">以下の計算は、CSS の翻訳と変換を考慮しています。</target>
        </trans-unit>
        <trans-unit id="c08b63b39c67e0e98916e387da32b4be7861f1d8" translate="yes" xml:space="preserve">
          <source>The following events are available:</source>
          <target state="translated">以下のようなイベントを開催しています。</target>
        </trans-unit>
        <trans-unit id="646319b2697e628c52ae3f9eca7a2cf66dcf0f09" translate="yes" xml:space="preserve">
          <source>The following events will be fired based on what key was pressed identical to the event spec:</source>
          <target state="translated">イベント仕様と同一のキーが押されたことに基づいて、以下のイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="7a6d568435c548045433b9a553e45e05f3cc5f51" translate="yes" xml:space="preserve">
          <source>The following key can be combined with &lt;code&gt;.rightclick()&lt;/code&gt; through the &lt;code&gt;options&lt;/code&gt;..</source>
          <target state="translated">次のキーは、 &lt;code&gt;options&lt;/code&gt; ..を介して &lt;code&gt;.rightclick()&lt;/code&gt; と組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="4445f0557056b006b77daa78dbb61b44b3467902" translate="yes" xml:space="preserve">
          <source>The following keys can be combined with &lt;code&gt;.click()&lt;/code&gt; through the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">次のキーは、 &lt;code&gt;options&lt;/code&gt; して &lt;code&gt;.click()&lt;/code&gt; と組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="91b21ab704b594f6370b5796dde61db82f8eebae" translate="yes" xml:space="preserve">
          <source>The following modifiers can be combined with &lt;code&gt;.click()&lt;/code&gt;.</source>
          <target state="translated">以下の修飾子は &lt;code&gt;.click()&lt;/code&gt; と組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="887afe261a5c4479dd3dcdee34523debc4bf098d" translate="yes" xml:space="preserve">
          <source>The following modifiers can be combined with &lt;code&gt;.dblclick()&lt;/code&gt;.</source>
          <target state="translated">次の修飾子は、 &lt;code&gt;.dblclick()&lt;/code&gt; と組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="2bc92c734921c9a90f718550029eb698e194f027" translate="yes" xml:space="preserve">
          <source>The following options are merged in as default options to &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">次のオプションは、&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; の&lt;/a&gt;デフォルトオプションとしてマージされます。</target>
        </trans-unit>
        <trans-unit id="d34fe2e5b1592268188b96861ce12c62585addd1" translate="yes" xml:space="preserve">
          <source>The following options control the behavior of the server affecting all requests</source>
          <target state="translated">以下のオプションは、すべてのリクエストに影響を与えるサーバの動作を制御します。</target>
        </trans-unit>
        <trans-unit id="93f76fe41eee293d26c9929ac78caec13c4c6857" translate="yes" xml:space="preserve">
          <source>The following rules have been implemented that match real browser behavior (and the spec):</source>
          <target state="translated">実際のブラウザの動作(および仕様)に合わせて、以下のルールを実装しました。</target>
        </trans-unit>
        <trans-unit id="66894db59ad64d0d1a3e02e706341f7af869dda1" translate="yes" xml:space="preserve">
          <source>The full file path is now included in console output for &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">完全なファイルパスが&lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; の&lt;/a&gt;コンソール出力に含まれるようになりました。</target>
        </trans-unit>
        <trans-unit id="52dbe520b802a2b6d0ab935022601462043ae180" translate="yes" xml:space="preserve">
          <source>The full path to the source file.</source>
          <target state="translated">ソースファイルへのフルパス。</target>
        </trans-unit>
        <trans-unit id="2fb2662c58e729e5289edcd2c336a9de944bc0ce" translate="yes" xml:space="preserve">
          <source>The full source code for this guide can be found in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc-redux&quot;&gt;cypress-io/cypress-example-todomvc-redux&lt;/a&gt; repository.</source>
          <target state="translated">このガイドの完全なソースコードは、&lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc-redux&quot;&gt;cypress-io / cypress-example-todomvc-redux&lt;/a&gt;リポジトリにあります。</target>
        </trans-unit>
        <trans-unit id="44d4e77f37936b84589875e5484286e06463b50f" translate="yes" xml:space="preserve">
          <source>The full source code for this section can be found in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io/cypress-example-realworld&lt;/a&gt; repository.</source>
          <target state="translated">このセクションの完全なソースコードは、&lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io / cypress-example-realworld&lt;/a&gt;リポジトリにあります。</target>
        </trans-unit>
        <trans-unit id="3eb3b289e1a6ce3364f66d4f34c7dc1f3a8bbe33" translate="yes" xml:space="preserve">
          <source>The function passed to &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; is executed, with the found element yielded to it.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; に&lt;/a&gt;渡された関数が実行され、見つかった要素が生成されます。</target>
        </trans-unit>
        <trans-unit id="3dc420de6ac3a3d53b7ef1e6f1012fde08e99eb2" translate="yes" xml:space="preserve">
          <source>The function used to replace the &lt;code&gt;method&lt;/code&gt; on the &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">この関数は置き換えるために使用 &lt;code&gt;method&lt;/code&gt; に &lt;code&gt;object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="517d512f6e459bb09e8ff4252b8f0f79d55c5494" translate="yes" xml:space="preserve">
          <source>The good news here is that it is extremely rare to need to visit two different superdomains in a single test. Why? Because the browser has a natural security barrier called &lt;code&gt;origin policy&lt;/code&gt; that means that state like &lt;code&gt;localStorage&lt;/code&gt;, &lt;code&gt;cookies&lt;/code&gt;, &lt;code&gt;service workers&lt;/code&gt; and many other APIs are not shared between them.</source>
          <target state="translated">ここでの朗報は、1つのテストで2つの異なるスーパードメインにアクセスする必要があることは非常にまれであることです。どうして？ブラウザには、 &lt;code&gt;origin policy&lt;/code&gt; と呼ばれる自然なセキュリティバリアがあります。つまり、 &lt;code&gt;localStorage&lt;/code&gt; 、 &lt;code&gt;cookies&lt;/code&gt; 、 &lt;code&gt;service workers&lt;/code&gt; 、その他の多くのAPIなどの状態は、それらの間で共有されません。</target>
        </trans-unit>
        <trans-unit id="6038afe5773657ada3181c00c8ae95cc804bc98d" translate="yes" xml:space="preserve">
          <source>The good news is that we aren&amp;rsquo;t Selenium, nor are we a traditional e2e testing tool. That means we&amp;rsquo;re not bound to the same restrictions.</source>
          <target state="translated">良いニュースは、私たちがSeleniumではなく、従来のe2eテストツールでもないことです。つまり、同じ制限に縛られないということです。</target>
        </trans-unit>
        <trans-unit id="d3a05cd54e98b8eeab634eaef1dc6a2aac4c46e8" translate="yes" xml:space="preserve">
          <source>The idea is that we never want to interfere with static assets that are fetched via Ajax.</source>
          <target state="translated">Ajax経由でフェッチされる静的アセットには絶対に干渉したくないという考えです。</target>
        </trans-unit>
        <trans-unit id="af282f8e157d1b3edbaaa6794a00bde62a7f9081" translate="yes" xml:space="preserve">
          <source>The image below shows that our application is displaying at &lt;code&gt;1000px&lt;/code&gt; width, &lt;code&gt;660px&lt;/code&gt; height and scaled to &lt;code&gt;100%&lt;/code&gt;.</source>
          <target state="translated">以下の画像は、アプリケーションが幅 &lt;code&gt;660px&lt;/code&gt; 高さ &lt;code&gt;1000px&lt;/code&gt; で表示され、 &lt;code&gt;100%&lt;/code&gt; に拡大されていることを示しています。</target>
        </trans-unit>
        <trans-unit id="ecc51b70f97a0da9968b597d88238ff4b0320790" translate="yes" xml:space="preserve">
          <source>The implicit form is much shorter! So when would you want to use the explicit form?</source>
          <target state="translated">暗示形の方がはるかに短い!?では、どのような時に明示形を使いたいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="ba91399d40baecd72aa8838e29b4664ca133d2e9" translate="yes" xml:space="preserve">
          <source>The in-page JS (the application under test) could throw an error.</source>
          <target state="translated">ページ内JS(テスト対象のアプリケーション)がエラーを投げる可能性があります。</target>
        </trans-unit>
        <trans-unit id="ad438b013d33821acb075992087685309c90b75b" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">最初の&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f9e46f4c71463a3b7675e36d412ca68a59268dc" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; could respond with something other than success.</source>
          <target state="translated">最初の&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;は、成功以外の何かで応答する可能性があります。</target>
        </trans-unit>
        <trans-unit id="df74d0b2e050f81f7a98f7c81c5cc356fbb27628" translate="yes" xml:space="preserve">
          <source>The initial imported plugins file can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured to another file&lt;/a&gt;.</source>
          <target state="translated">最初にインポートされたプラグインファイルは&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;、別のファイルに設定&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="6bfa6b4e18e2d1d79e9b69ce6a6bdfda96703dee" translate="yes" xml:space="preserve">
          <source>The initial imported support file can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured to another file&lt;/a&gt;.</source>
          <target state="translated">最初にインポートされたサポートファイルは&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;、別のファイルに構成&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="3fa4db4ff7d088eca70cb22b7d83516e75e4fcb5" translate="yes" xml:space="preserve">
          <source>The input we want to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; into could be disabled.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;への入力を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="61ba64555e3bcf6c81720711aba0a9ce8c0ea5b4" translate="yes" xml:space="preserve">
          <source>The insanity that is URL parsing to figure out absolute, relative, absolute-path-relative, http, sub domains, and local files should work in most cases. In other words, Cypress has implemented the vast majority of url parsing based on the &lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;w3c URL spec&lt;/a&gt;.</source>
          <target state="translated">絶対、相対、絶対パス相対、http、サブドメイン、ローカルファイルを把握するためのURL解析である狂気は、ほとんどの場合に機能するはずです。言い換えると、サイプレスは&lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;w3c URL仕様に&lt;/a&gt;基づいたURL解析の大部分を実装しています。</target>
        </trans-unit>
        <trans-unit id="3c1430628b956c688b6d0241cc0bfaa3412293ac" translate="yes" xml:space="preserve">
          <source>The installed Test Runner comes with the fully transpiled, unobfuscated JavaScript source code that you can hack on. You might want to directly modify the installed Test Runner code to:</source>
          <target state="translated">インストールされた Test Runner には、ハックすることができるように、完全に転置された、難解でない JavaScript のソースコードが含まれています。インストールされているテストランナーのコードを直接変更することができます。</target>
        </trans-unit>
        <trans-unit id="0fc86127c7a522f90bf8e07dbcac1df2efc77009" translate="yes" xml:space="preserve">
          <source>The instructions in Cypress&amp;rsquo;s update window now include &lt;code&gt;yarn&lt;/code&gt; update instructions alongside &lt;code&gt;npm&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2871&quot;&gt;#2871&lt;/a&gt;.</source>
          <target state="translated">サイプレスの更新ウィンドウの指示には、 &lt;code&gt;npm&lt;/code&gt; とともに &lt;code&gt;yarn&lt;/code&gt; 更新指示が含まれるようになりました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2871&quot;&gt;＃2871&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="082ca562fdc4fdabd33a9b0843ebfe3adda58f63" translate="yes" xml:space="preserve">
          <source>The instrumentation takes your original code like this fragment&amp;hellip;</source>
          <target state="translated">インストルメンテーションは、このフラグメントのような元のコードを使用します&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="611ea9a5233c8e3b28251385dd27faf6dfab5c71" translate="yes" xml:space="preserve">
          <source>The intention of &lt;a href=&quot;request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; is to be used for checking endpoints on an actual, running server without having to start the front end application.</source>
          <target state="translated">&lt;a href=&quot;request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;の目的は、フロントエンドアプリケーションを起動せずに、実際に実行されているサーバー上のエンドポイントをチェックするために使用されます。</target>
        </trans-unit>
        <trans-unit id="a4a220d891bf10e366988261b97e540636287bc3" translate="yes" xml:space="preserve">
          <source>The intention of &lt;code&gt;cy.request()&lt;/code&gt; is to be used for checking endpoints on an actual, running server without having to start the front end application.</source>
          <target state="translated">&lt;code&gt;cy.request()&lt;/code&gt; の目的は、フロントエンドアプリケーションを起動する必要なしに、実行中の実際のサーバー上のエンドポイントをチェックするために使用されます。</target>
        </trans-unit>
        <trans-unit id="44694c765085a539b94664b5d15d4c92e4301eba" translate="yes" xml:space="preserve">
          <source>The intercept was registered too late</source>
          <target state="translated">インターセプトの登録が遅すぎた</target>
        </trans-unit>
        <trans-unit id="6cf9f7f7d3deb6aa4449b5dc10deb111b5d4be36" translate="yes" xml:space="preserve">
          <source>The interface for writing custom commands has been deprecated. &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;Please read our docs on the new custom commands interface&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/436&quot;&gt;#436&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/465&quot;&gt;#465&lt;/a&gt;.</source>
          <target state="translated">カスタムコマンドを作成するためのインターフェイスは廃止されました。&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;新しいカスタムコマンドインターフェースに関するドキュメントをお読みください&lt;/a&gt;。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/436&quot;&gt;＃436&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/465&quot;&gt;＃465を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1fe3b413647e5524cb9a8eb759e3711e3e2c7e6f" translate="yes" xml:space="preserve">
          <source>The internal Cypress proxy now forcibly responds to requests taking longer than &lt;code&gt;responseTimeout&lt;/code&gt;. Currently this sends back &lt;code&gt;text/html&lt;/code&gt; with the &lt;code&gt;ETIMEDOUT&lt;/code&gt; error, but this likely needs to be configurable. The reason we are now forcibly applying timeouts is to prevent &lt;code&gt;socket pooling exhaustion&lt;/code&gt; where tests are running and a 3rd party server never responds to the request.</source>
          <target state="translated">内部サイプレスプロキシは、 &lt;code&gt;responseTimeout&lt;/code&gt; よりも時間がかかるリクエストに強制的に応答するようになりました。現在、これは &lt;code&gt;ETIMEDOUT&lt;/code&gt; エラーで &lt;code&gt;text/html&lt;/code&gt; を送り返しますが、これはおそらく構成可能である必要があります。現在、強制的にタイムアウトを適用しているのは、テストが実行されていて、サードパーティのサーバーがリクエストに応答しないという &lt;code&gt;socket pooling exhaustion&lt;/code&gt; を防ぐためです。</target>
        </trans-unit>
        <trans-unit id="e78dd9a731fa9965824416262a86b07ce38f0d6e" translate="yes" xml:space="preserve">
          <source>The internal retry loop of Cypress now runs at &lt;code&gt;60fps&lt;/code&gt;, instead of &lt;code&gt;20fps&lt;/code&gt;.</source>
          <target state="translated">サイプレスの内部再試行ループが &lt;code&gt;20fps&lt;/code&gt; ではなく &lt;code&gt;60fps&lt;/code&gt; で実行されるようになりました。</target>
        </trans-unit>
        <trans-unit id="8b03e91dc47b3f73bfef22e00361142205f95b71" translate="yes" xml:space="preserve">
          <source>The internal version of &lt;code&gt;node&lt;/code&gt; which is built into Cypress is now &lt;code&gt;6.1.0&lt;/code&gt;.</source>
          <target state="translated">サイプレスに組み込まれている &lt;code&gt;node&lt;/code&gt; の内部バージョンは &lt;code&gt;6.1.0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="740e4a044ae31f522828c809213aba3c21bab974" translate="yes" xml:space="preserve">
          <source>The last group can be called &lt;code&gt;package/guest&lt;/code&gt;:</source>
          <target state="translated">最後のグループは &lt;code&gt;package/guest&lt;/code&gt; と呼ぶことができます：</target>
        </trans-unit>
        <trans-unit id="98c0cfacf75a55888963139cea9090dc420be18d" translate="yes" xml:space="preserve">
          <source>The last, and probably most important reason why you want to test against local servers, is the ability to &lt;strong&gt;control them&lt;/strong&gt;. When your application is running in production you can&amp;rsquo;t control it.</source>
          <target state="translated">ローカルサーバーに対してテストする最後の、おそらく最も重要な理由は、&lt;strong&gt;それら&lt;/strong&gt;を&lt;strong&gt;制御する機能&lt;/strong&gt;です。アプリケーションが本番環境で実行されている場合、それを制御することはできません。</target>
        </trans-unit>
        <trans-unit id="eb87a90f67a3d6751fca3c25e5bb985d9d1e73f0" translate="yes" xml:space="preserve">
          <source>The latest version of Cypress can be downloaded here: &lt;a href=&quot;http://download.cypress.io/latest&quot;&gt;http://download.cypress.io/latest&lt;/a&gt;.</source>
          <target state="translated">サイプレスの最新バージョンは&lt;a href=&quot;http://download.cypress.io/latest&quot;&gt;http://download.cypress.io/latestから&lt;/a&gt;ダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="4546e37121e645a0402d6434a03fbb4574bdb049" translate="yes" xml:space="preserve">
          <source>The latest version of the &lt;a href=&quot;../guides/command-line&quot;&gt;Cypress CLI&lt;/a&gt; now accepts passing arguments to &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt;. Example: &lt;code&gt;cypress open --config waitForAnimations=false --env foo=bar,baz=quux&lt;/code&gt;. This enables you to set and override local &lt;code&gt;cypress.json&lt;/code&gt; configuration and additionally set environment variables.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;サイプレスCLI&lt;/a&gt;の最新バージョンは、サイプレス&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;への引数の受け渡しを受け入れるようになりました。例： &lt;code&gt;cypress open --config waitForAnimations=false --env foo=bar,baz=quux&lt;/code&gt; 。これにより、ローカルの &lt;code&gt;cypress.json&lt;/code&gt; 構成を設定および上書きし、さらに環境変数を設定できます。</target>
        </trans-unit>
        <trans-unit id="08d2b1553d7b97a29336b7996cff75ccac5f23ed" translate="yes" xml:space="preserve">
          <source>The lefthand side of the Test Runner is a visual representation of your test suite. Each test block is properly nested and each test, when clicked, displays every Cypress command and assertion executed within the test&amp;rsquo;s block as well as any command or assertion executed in relevant &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;beforeEach&lt;/code&gt;, &lt;code&gt;afterEach&lt;/code&gt;, and &lt;code&gt;after&lt;/code&gt; hooks.</source>
          <target state="translated">テストランナーの左側は、テストスイートを視覚的に表したものです。各テストブロックは適切にネストされており、各テストをクリックすると、テストのブロック内で実行されたすべてのサイプレスコマンドとアサーション、および関連する &lt;code&gt;before&lt;/code&gt; 、 &lt;code&gt;beforeEach&lt;/code&gt; 、 &lt;code&gt;afterEach&lt;/code&gt; 、および &lt;code&gt;after&lt;/code&gt; フックで実行されたコマンドまたはアサーションが表示されます。</target>
        </trans-unit>
        <trans-unit id="5cad922a466bd845aaf9cf10c55d543fbfbc9dc9" translate="yes" xml:space="preserve">
          <source>The list of tests now automatically refresh when test files are renamed, deleted, or added. In addition, because the list of tests is now displayed in the desktop application, we now synchronize the state of the current running spec.</source>
          <target state="translated">テストファイルの名前を変更したり、削除したり、追加したりすると、テストのリストが自動的に更新されるようになりました。さらに、テストのリストがデスクトップアプリケーションに表示されるようになったので、現在実行中の仕様の状態を同期させるようになりました。</target>
        </trans-unit>
        <trans-unit id="89a9ec3f90b6a288c6858dc00bc808c3021e6805" translate="yes" xml:space="preserve">
          <source>The lists of spec files now display at the correct indentation level when they are nested more than 5 directories deep. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3652&quot;&gt;#3652&lt;/a&gt;.</source>
          <target state="translated">specファイルのリストは、5つ以上のディレクトリにネストされている場合、正しいインデントレベルで表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3652&quot;&gt;＃3652を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="84900bfd5a7a40ed2d96e85ee78e91e18e58cf2a" translate="yes" xml:space="preserve">
          <source>The main difference between &lt;code&gt;cy.spy()&lt;/code&gt; and &lt;a href=&quot;stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; is that &lt;code&gt;cy.spy()&lt;/code&gt; does not replace the method, it only wraps it. So, while invocations are recorded, the original method is still called. This can be very useful when testing methods on native browser objects. You can verify a method is being called by your test and still have the original method action invoked.</source>
          <target state="translated">&lt;code&gt;cy.spy()&lt;/code&gt; と&lt;a href=&quot;stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;の主な違いは、 &lt;code&gt;cy.spy()&lt;/code&gt; がメソッドを置き換えるのではなく、ラップするだけです。したがって、呼び出しが記録されている間も、元のメソッドが呼び出されます。これは、ネイティブブラウザオブジェクトのメソッドをテストするときに非常に役立ちます。テストによってメソッドが呼び出されていることを確認し、元のメソッドアクションを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="fc0eb4178b7ee7c54a3a37e5233234e3c9472584" translate="yes" xml:space="preserve">
          <source>The major version number of the browser.</source>
          <target state="translated">ブラウザのメジャーバージョン番号。</target>
        </trans-unit>
        <trans-unit id="1f457a081ab6043108c8709f568b57afe52f8959" translate="yes" xml:space="preserve">
          <source>The minimum viewport size has been lowered from &lt;code&gt;200&lt;/code&gt; pixels to &lt;code&gt;20&lt;/code&gt; pixels. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1169&quot;&gt;#1169&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1444&quot;&gt;#1444&lt;/a&gt;.</source>
          <target state="translated">最小ビューポートサイズが &lt;code&gt;200&lt;/code&gt; ピクセルから &lt;code&gt;20&lt;/code&gt; ピクセルに引き下げられました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1169&quot;&gt;＃1169&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1444&quot;&gt;＃1444を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d18c1a85deabc98e63b589386ea049cdb4f7afc1" translate="yes" xml:space="preserve">
          <source>The most common situation where you might encounter this error is when you click on an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; that navigates to another superdomain.</source>
          <target state="translated">このエラーが発生する最も一般的な状況は、別のスーパードメインに移動する &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; をクリックしたときです。</target>
        </trans-unit>
        <trans-unit id="2d934058e66d33283cabb50fd02646551ebc83cb" translate="yes" xml:space="preserve">
          <source>The most common use case for preserving cookies is to prevent having to log in to your application before each individual test. This is a problem if the majority of each test is spent logging in a user.</source>
          <target state="translated">クッキーを保存するための最も一般的な使用例は、各個別のテストの前にアプリケーションにログインする必要がないようにすることです。これは、各テストの大部分がユーザーのログインに費やされる場合に問題となります。</target>
        </trans-unit>
        <trans-unit id="495264eeb4f77fa4fe3af4e450d8fbe742f50db7" translate="yes" xml:space="preserve">
          <source>The most common use case for sharing context is when dealing with &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンテキストを共有する最も一般的な使用例は、&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;を処理する場合です。</target>
        </trans-unit>
        <trans-unit id="ac2d2a2b4a7a61df0b86a12cf22e7bdfe6243e23" translate="yes" xml:space="preserve">
          <source>The most common use case is adding your own chrome extension.</source>
          <target state="translated">最も一般的な使用例は、独自のクローム拡張機能を追加することです。</target>
        </trans-unit>
        <trans-unit id="b5585ccc99acb821be59403211430d659e6f8f7f" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;event&lt;/code&gt; to be triggered on the DOM element.</source>
          <target state="translated">DOM要素でトリガーされる &lt;code&gt;event&lt;/code&gt; の名前。</target>
        </trans-unit>
        <trans-unit id="f6a436a2e855f7d061597050a3f6aad039087dea" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;method&lt;/code&gt; on the &lt;code&gt;object&lt;/code&gt; to be wrapped.</source>
          <target state="translated">名前 &lt;code&gt;method&lt;/code&gt; の &lt;code&gt;object&lt;/code&gt; ラップされます。</target>
        </trans-unit>
        <trans-unit id="e1fce31618869e21b5dde0d27bcdbc06dad64b14" translate="yes" xml:space="preserve">
          <source>The name of the alias to be referenced later within a &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command using an &lt;code&gt;@&lt;/code&gt; prefix.</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; 接頭辞を使用して&lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;コマンド内で後で参照されるエイリアスの名前。</target>
        </trans-unit>
        <trans-unit id="d22f1965478b52c5923a415704ca6dd8e7b6b895" translate="yes" xml:space="preserve">
          <source>The name of the browser (case-insensitive) you want to check against. Name can be prepended with a &lt;code&gt;!&lt;/code&gt; character to inverse the check.</source>
          <target state="translated">チェックするブラウザの名前（大文字と小文字は区別されません）。名前の前に &lt;code&gt;!&lt;/code&gt; を付けることができます。チェックを逆にする文字。</target>
        </trans-unit>
        <trans-unit id="74483ed362b7641341a57573d6835a3a80146dca" translate="yes" xml:space="preserve">
          <source>The name of the command you&amp;rsquo;re either adding or overwriting.</source>
          <target state="translated">追加または上書きするコマンドの名前。</target>
        </trans-unit>
        <trans-unit id="66bebc87e8e746433b524d2a144338ea076869cd" translate="yes" xml:space="preserve">
          <source>The name of the configuration to get or set.</source>
          <target state="translated">取得または設定する設定の名前。</target>
        </trans-unit>
        <trans-unit id="f50face8ca9ecf422378ade1f59c1bed76d8a278" translate="yes" xml:space="preserve">
          <source>The name of the cookie to be cleared.</source>
          <target state="translated">クリアするクッキーの名前です。</target>
        </trans-unit>
        <trans-unit id="312258dd244dd26ca31529fca52bec44d240d4c2" translate="yes" xml:space="preserve">
          <source>The name of the cookie to get. Required.</source>
          <target state="translated">取得するクッキーの名前。必須。</target>
        </trans-unit>
        <trans-unit id="3d5793e8f6927c436df1e125e654bf9591dd0ce0" translate="yes" xml:space="preserve">
          <source>The name of the cookie to set.</source>
          <target state="translated">設定するクッキーの名前。</target>
        </trans-unit>
        <trans-unit id="4e52f119e0878b0d6164e957ceef736d5824b473" translate="yes" xml:space="preserve">
          <source>The name of the environment variable to get or set.</source>
          <target state="translated">取得または設定する環境変数の名前。</target>
        </trans-unit>
        <trans-unit id="b1e50cc91b0d9c692fdebf7b505ed959edf3978d" translate="yes" xml:space="preserve">
          <source>The name of the specfile where the screenshot was taken.</source>
          <target state="translated">スクリーンショットが撮影された specfile の名前です。</target>
        </trans-unit>
        <trans-unit id="6acbe8f46d7c5392dfd63aed2c6e3b9169beb27c" translate="yes" xml:space="preserve">
          <source>The names and purposes of the visual parts of the Cypress Test Runner</source>
          <target state="translated">サイプレステストランナーのビジュアルパーツの名称と目的</target>
        </trans-unit>
        <trans-unit id="820a57469c0c44fd27922b35e924334168df80c0" translate="yes" xml:space="preserve">
          <source>The number is yielded from previous command</source>
          <target state="translated">前のコマンドで得られた</target>
        </trans-unit>
        <trans-unit id="675422abbcf8973c5fdf35a28250ded7b25b8291" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;milliseconds&lt;/code&gt; to move the clock. Any timers within the affected range of time will be called.</source>
          <target state="translated">クロックを移動する &lt;code&gt;milliseconds&lt;/code&gt; 数。影響を受ける時間範囲内のタイマーが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="dbce6f2b24c7e0e0ff9e09c7912413a2dcdbee3b" translate="yes" xml:space="preserve">
          <source>The number of logs printed when installing Cypress in docker has been reduced. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1243&quot;&gt;#1243&lt;/a&gt;.</source>
          <target state="translated">サイプレスをドッカーにインストールするときに出力されるログの数が削減されました。部分的に&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1243&quot;&gt;＃1243に&lt;/a&gt;対処します。</target>
        </trans-unit>
        <trans-unit id="3f6360040d9a9b279f825ed1858e4e2caed850a3" translate="yes" xml:space="preserve">
          <source>The number of machines dedicated for each &lt;code&gt;cypress run&lt;/code&gt; call is based on your CI configuration for the project.</source>
          <target state="translated">各 &lt;code&gt;cypress run&lt;/code&gt; 呼び出し専用のマシンの数は、プロジェクトのCI構成に基づいています。</target>
        </trans-unit>
        <trans-unit id="7b899fd2822c2462e0dd5b3cbb3ba4c54a99da18" translate="yes" xml:space="preserve">
          <source>The number of skipped, pending, passing, and failing tests.</source>
          <target state="translated">飛び級数、保留数、合格数、不合格数。</target>
        </trans-unit>
        <trans-unit id="2af2fa800fac8319bf97a3540e05d1333f0f0b88" translate="yes" xml:space="preserve">
          <source>The number of tests for which snapshots and command data are kept in memory. Reduce this number if you are experiencing high memory consumption in your browser during a test run.</source>
          <target state="translated">スナップショットとコマンドデータがメモリに保存されるテストの数。テスト実行中にブラウザのメモリ消費量が多い場合は、この数を減らしてください。</target>
        </trans-unit>
        <trans-unit id="516a974004069c3d3277a625e9910084eb472b45" translate="yes" xml:space="preserve">
          <source>The number subject is changed by returning</source>
          <target state="translated">を返すことで番号の件名が変更されます。</target>
        </trans-unit>
        <trans-unit id="ceb05b37622137b6073eeb7df3db0cde0cbb11e6" translate="yes" xml:space="preserve">
          <source>The number subject is changed with another command</source>
          <target state="translated">別のコマンドで番号の件名を変更します。</target>
        </trans-unit>
        <trans-unit id="aa44bafd0eb0e05262574ed874ccaef3817a3c48" translate="yes" xml:space="preserve">
          <source>The object has the following properties:</source>
          <target state="translated">オブジェクトは以下のプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="9baca65f9cbd0fbc1015e93983d0544dfed81ca6" translate="yes" xml:space="preserve">
          <source>The object to test.</source>
          <target state="translated">テストする対象。</target>
        </trans-unit>
        <trans-unit id="db327ba030716ff0b1187a489e847e64de982175" translate="yes" xml:space="preserve">
          <source>The object you receive after waiting on an XHR alias is now different. Previously this was a &lt;code&gt;FakeXMLHttpRequest&lt;/code&gt; object which came from Sinon.js. Now it is a special &lt;code&gt;XMLHttpRequest&lt;/code&gt; object which comes from Cypress. You may need to rewrite some of your assertions but we&amp;rsquo;ve tried to keep the signatures as close as possible.</source>
          <target state="translated">XHRエイリアスで待機した後に受け取るオブジェクトが異なります。以前は、これは &lt;code&gt;FakeXMLHttpRequest&lt;/code&gt; からのFakeXMLHttpRequestオブジェクトでした。これは、サイプレスの特別な &lt;code&gt;XMLHttpRequest&lt;/code&gt; オブジェクトです。一部のアサーションを書き換える必要があるかもしれませんが、シグネチャをできるだけ近くに保つように努めています。</target>
        </trans-unit>
        <trans-unit id="531e904ce3710972156633b273597c7e834ce072" translate="yes" xml:space="preserve">
          <source>The official &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;@cypress/code-coverage&lt;/a&gt; plugin</source>
          <target state="translated">公式の&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;@ cypress / code-coverage&lt;/a&gt;プラグイン</target>
        </trans-unit>
        <trans-unit id="de6ef17207a672a527da92a709276b20d42a9114" translate="yes" xml:space="preserve">
          <source>The one exception to this rule is when you are dealing with mutable objects (that change state). When things change state you often want to compare an object&amp;rsquo;s previous value to the next value.</source>
          <target state="translated">この規則の1つの例外は、（状態を変更する）可変オブジェクトを処理する場合です。状態が変化すると、オブジェクトの以前の値を次の値と比較することがよくあります。</target>
        </trans-unit>
        <trans-unit id="6f078d69eccad934d447c9e7a151b423ab7fdab8" translate="yes" xml:space="preserve">
          <source>The only times you &lt;strong&gt;ever&lt;/strong&gt; need to clean up state, is if the operations that one test runs affects another test downstream. In only those cases do you need state cleanup.</source>
          <target state="translated">あなただけの時間&lt;strong&gt;、これまで&lt;/strong&gt; 1つのテストランが下流別のテストに影響を与えることを操作場合の状態をクリーンアップする必要があるが、あります。これらの場合のみ、状態のクリーンアップが必要ですか。</target>
        </trans-unit>
        <trans-unit id="8738834bbc79ac83a3be7ba8a32736a89ce6ffa9" translate="yes" xml:space="preserve">
          <source>The only way for you to easily &amp;ldquo;see&amp;rdquo; and debug why Cypress thought an element was not visible is to use a &lt;code&gt;debugger&lt;/code&gt; statement.</source>
          <target state="translated">サイプレスが要素が表示されないと考えた理由を簡単に「確認」してデバッグする唯一の方法は、 &lt;code&gt;debugger&lt;/code&gt; ステートメントを使用することです。</target>
        </trans-unit>
        <trans-unit id="c3c4d02deb75be8128a804ed27cb4cc25e389c74" translate="yes" xml:space="preserve">
          <source>The operating system and version</source>
          <target state="translated">オペレーティングシステムとバージョン</target>
        </trans-unit>
        <trans-unit id="c40284c070808a3ebe43d545e821f63222385a3e" translate="yes" xml:space="preserve">
          <source>The order of hook and test execution is as follows:</source>
          <target state="translated">フックとテストの実行順序は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e82e1e207597f80e52fbba928c04a568112dbd4b" translate="yes" xml:space="preserve">
          <source>The orientation of the screen. The &lt;em&gt;default orientation&lt;/em&gt; is &lt;code&gt;portrait&lt;/code&gt;. Pass &lt;code&gt;landscape&lt;/code&gt; as the orientation to reverse the width/height.</source>
          <target state="translated">画面の向き。&lt;em&gt;デフォルトの方向が&lt;/em&gt;ある &lt;code&gt;portrait&lt;/code&gt; 。幅/高さを逆にする向きとして &lt;code&gt;landscape&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="17a1b39f194f869a1407fe40768f7950fb624201" translate="yes" xml:space="preserve">
          <source>The page is visited, and Cypress waits for it to load.</source>
          <target state="translated">ページが訪問され、サイプレスはそれがロードされるのを待っています。</target>
        </trans-unit>
        <trans-unit id="d261216987cde9246824d716277997b8370d25d7" translate="yes" xml:space="preserve">
          <source>The parameters passed to &lt;code&gt;qs&lt;/code&gt; will be merged into existing query parameters on the &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;qs&lt;/code&gt; に渡されたパラメータは、 &lt;code&gt;url&lt;/code&gt; 既存のクエリパラメータにマージされます。</target>
        </trans-unit>
        <trans-unit id="815d0f6065479fe26708a4fd9c9eabd096b40e51" translate="yes" xml:space="preserve">
          <source>The path above is relative to where your &lt;code&gt;cypress.json&lt;/code&gt; is located.</source>
          <target state="translated">上記のパスは、 &lt;code&gt;cypress.json&lt;/code&gt; が配置されている場所からの相対パスです。</target>
        </trans-unit>
        <trans-unit id="4ba4f47e330246706360965944807d1b11cbd81a" translate="yes" xml:space="preserve">
          <source>The path to the spec file, relative to the project root (e.g. &lt;code&gt;cypress/integration/login_spec.js&lt;/code&gt;)</source>
          <target state="translated">プロジェクトルート（例： &lt;code&gt;cypress/integration/login_spec.js&lt;/code&gt; ）を基準にしたスペックファイルへのパス</target>
        </trans-unit>
        <trans-unit id="a130638fa195780908caff03f0a4195eb99701ff" translate="yes" xml:space="preserve">
          <source>The pattern of doing something conditionally based on whether or not certain text is present is identical to element existence above.</source>
          <target state="translated">特定のテキストが存在するか否かで条件付きで何かをするパターンは、上記の要素の存在と同一である。</target>
        </trans-unit>
        <trans-unit id="b7d1918499e2102e6875cc7688a3422e59ec7345" translate="yes" xml:space="preserve">
          <source>The patterns we&amp;rsquo;ll explore below are useful in and outside of Cypress.</source>
          <target state="translated">以下で説明するパターンは、サイプレスの内外で役立ちます。</target>
        </trans-unit>
        <trans-unit id="e192581f2c1a279eba5014c6a46a4cc9b977113e" translate="yes" xml:space="preserve">
          <source>The permissions for each user role for the Dashboard Service.</source>
          <target state="translated">ダッシュボードサービスの各ユーザーロールのパーミッションです。</target>
        </trans-unit>
        <trans-unit id="4cda402afdbe0e2dc78d05fe36b114811a5f2cea" translate="yes" xml:space="preserve">
          <source>The plugins file must export a function with the following signature:</source>
          <target state="translated">プラグインファイルは、以下のシグネチャを持つ関数をエクスポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="3e428c0a9a199a549aed23bdc8b71131b95597f5" translate="yes" xml:space="preserve">
          <source>The point of Cypress is to be a tool you use every day to build and test &lt;strong&gt;your own applications&lt;/strong&gt;.</source>
          <target state="translated">サイプレスのポイントは&lt;strong&gt;、独自のアプリケーションの&lt;/strong&gt;構築とテストに毎日使用するツールになること&lt;strong&gt;です&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="85e1417ef20e040c1d3f3506e725e5bc219947ad" translate="yes" xml:space="preserve">
          <source>The position where the click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">クリックが発行される位置。 &lt;code&gt;center&lt;/code&gt; 位置はデフォルトの位置です。有効な位置は、 &lt;code&gt;topLeft&lt;/code&gt; 、 &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;topRight&lt;/code&gt; 、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;center&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;bottomLeft&lt;/code&gt; 、 &lt;code&gt;bottom&lt;/code&gt; 、および &lt;code&gt;bottomRight&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a47e3cc02495212b1e603eb47937a7d4164472b2" translate="yes" xml:space="preserve">
          <source>The position where the double click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">ダブルクリックを発行する位置。 &lt;code&gt;center&lt;/code&gt; 位置はデフォルトの位置です。有効な位置は、 &lt;code&gt;topLeft&lt;/code&gt; 、 &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;topRight&lt;/code&gt; 、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;center&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;bottomLeft&lt;/code&gt; 、 &lt;code&gt;bottom&lt;/code&gt; 、および &lt;code&gt;bottomRight&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9ddfe3ba8ef846ad4188c609f43e29a9d0567472" translate="yes" xml:space="preserve">
          <source>The position where the event should be triggered. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">イベントがトリガーされる位置。 &lt;code&gt;center&lt;/code&gt; 位置はデフォルトの位置です。有効な位置は、 &lt;code&gt;topLeft&lt;/code&gt; 、 &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;topRight&lt;/code&gt; 、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;center&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;bottomLeft&lt;/code&gt; 、 &lt;code&gt;bottom&lt;/code&gt; 、および &lt;code&gt;bottomRight&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9335ae6ecf7e00e4cc44805a0e9a9b079342ca3f" translate="yes" xml:space="preserve">
          <source>The position where the right click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">右クリックを発行する位置。 &lt;code&gt;center&lt;/code&gt; 位置はデフォルトの位置です。有効な位置は、 &lt;code&gt;topLeft&lt;/code&gt; 、 &lt;code&gt;top&lt;/code&gt; 、 &lt;code&gt;topRight&lt;/code&gt; 、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;center&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、 &lt;code&gt;bottomLeft&lt;/code&gt; 、 &lt;code&gt;bottom&lt;/code&gt; 、および &lt;code&gt;bottomRight&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c0dfe71cebc9453363e766adae8104e56f89d272" translate="yes" xml:space="preserve">
          <source>The previous subject will automatically be yielded to the callback function.</source>
          <target state="translated">前のサブジェクトは自動的にコールバック関数にゆだねられます。</target>
        </trans-unit>
        <trans-unit id="8a9400005c3bca2486ac5d4f71c851ac612c4135" translate="yes" xml:space="preserve">
          <source>The problem</source>
          <target state="translated">問題点</target>
        </trans-unit>
        <trans-unit id="8c1f0715b111d17a87a9fce9693cba5938592b77" translate="yes" xml:space="preserve">
          <source>The problem is - what happens if your server takes time to boot? There is no guarantee that when the next command runs (&lt;code&gt;cypress run&lt;/code&gt;) that your web server is up and available. So your Cypress test may start and try to visit your local server before it is ready to be visited.</source>
          <target state="translated">問題は-サーバーの起動に時間がかかる場合はどうなりますか？次のコマンド（ &lt;code&gt;cypress run&lt;/code&gt; ）が実行されたときに、Webサーバーが稼働中であることは保証されていません。そのため、サイプレステストが開始され、ローカルサーバーにアクセスする準備ができる前に、ローカルサーバーにアクセスしようとする場合があります。</target>
        </trans-unit>
        <trans-unit id="12a59b57cc3fb45d5de325a58f3909addc756cc8" translate="yes" xml:space="preserve">
          <source>The problem is - while first appearing simple, writing tests in this fashion often leads to flaky tests, random failures, and difficult to track down edge cases.</source>
          <target state="translated">問題は、最初はシンプルなように見えても、このような方法でテストを書くと、しばしば欠陥のあるテスト、ランダムな失敗、エッジケースの追跡が困難になることです。</target>
        </trans-unit>
        <trans-unit id="e5fe82c8a50d60e49aeb9fad3ad7b188c41fd2a3" translate="yes" xml:space="preserve">
          <source>The problem looks weird - I can clearly see the label &amp;ldquo;todo B&amp;rdquo; present in the list, so why isn&amp;rsquo;t Cypress finding it? What is going on?</source>
          <target state="translated">問題は奇妙に見えます-リストに「todo B」というラベルがはっきりと表示されているのに、なぜサイプレスはそれを見つけないのですか？何が起こっている？</target>
        </trans-unit>
        <trans-unit id="ad0cbaf52f72d6fd201e9a44230036f52946b8b3" translate="yes" xml:space="preserve">
          <source>The problem with &lt;strong&gt;conditional testing&lt;/strong&gt; is that it can only be used when the state has stabilized. In modern day applications, knowing when state is stable is oftentimes impossible.</source>
          <target state="translated">&lt;strong&gt;条件付きテスト&lt;/strong&gt;の問題は、状態が安定した場合にのみ使用できることです。現代のアプリケーションでは、状態が安定していることを知ることはしばしば不可能です。</target>
        </trans-unit>
        <trans-unit id="a653f42cae2e012716d05927d4c3035de2a2636c" translate="yes" xml:space="preserve">
          <source>The problem with this is that if the wizard renders asynchronously (as it likely does) you cannot use the DOM to conditionally dismiss it.</source>
          <target state="translated">これの問題点は、ウィザードが非同期にレンダリングされた場合 (おそらくそうでしょう)、DOM を使用して条件付きで破棄することができないということです。</target>
        </trans-unit>
        <trans-unit id="c027ae8b3bc0fa16df969bd2198365f87e4d5c6c" translate="yes" xml:space="preserve">
          <source>The problem with this question is that this type of conditional control flow ends up being non-deterministic. This means it&amp;rsquo;s impossible for a script (or robot), to follow it 100% consistently.</source>
          <target state="translated">この質問の問題は、このタイプの条件付き制御フローが最終的に非決定性になることです。つまり、スクリプト（またはロボット）が100％一貫してそれに従うことは不可能です。</target>
        </trans-unit>
        <trans-unit id="b729d30e14c9badd23b8643d7abc79d9901a2424" translate="yes" xml:space="preserve">
          <source>The produced HTML report shows 99% code coverage</source>
          <target state="translated">生成された HTML レポートは 99% のコードカバレッジを示しています。</target>
        </trans-unit>
        <trans-unit id="ea2ebeced198abba4de7d35b582a8fde4fa5b269" translate="yes" xml:space="preserve">
          <source>The prompt to &amp;ldquo;Restore pages?&amp;rdquo; is no longer displayed within Chrome upon restarting a crashed Chrome window. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2048&quot;&gt;#2048&lt;/a&gt;.</source>
          <target state="translated">「ページを復元しますか？」というプロンプト クラッシュしたChromeウィンドウを再起動したときにChrome内にが表示されなくなりました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2048&quot;&gt;＃2048&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9095904993039bb7dc83a2bcde163a4d5fa021af" translate="yes" xml:space="preserve">
          <source>The proper error is now thrown when passing &lt;code&gt;{log: false}&lt;/code&gt; to a Cypress command that failed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3847&quot;&gt;#3847&lt;/a&gt;.</source>
          <target state="translated">失敗したサイプレスコマンドに &lt;code&gt;{log: false}&lt;/code&gt; を渡すと、適切なエラーがスローされるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3847&quot;&gt;＃3847​​を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="65ff1c8352b857304a62da31a7f96aee77a4676f" translate="yes" xml:space="preserve">
          <source>The properties will be merged into the screenshot details and passed to the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback (if defined with &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt; and/or &lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot()&lt;/a&gt;).</source>
          <target state="translated">プロパティはスクリーンショットの詳細にマージされ、 &lt;code&gt;onAfterScreenshot&lt;/code&gt; コールバックに渡されます（&lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults（）&lt;/a&gt;および/または&lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot（）で&lt;/a&gt;定義されている場合）。</target>
        </trans-unit>
        <trans-unit id="0071a0ee508b63fc99edce02b71dd4dce400dd71" translate="yes" xml:space="preserve">
          <source>The properties will be merged into the screenshot details and passed to the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback (if defined with &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt; and/or &lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot()&lt;/a&gt;). Any other properties besides &lt;em&gt;path&lt;/em&gt;, &lt;em&gt;size&lt;/em&gt;, and &lt;em&gt;dimensions&lt;/em&gt; will be ignored.</source>
          <target state="translated">特性は、スクリーンショット詳細にマージとに渡される &lt;code&gt;onAfterScreenshot&lt;/code&gt; （で定義されている場合、コールバック&lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults（）&lt;/a&gt;及び/又は&lt;a href=&quot;../commands/screenshot&quot;&gt;）（cy.screenshot&lt;/a&gt;）。&lt;em&gt;path&lt;/em&gt;、&lt;em&gt;size&lt;/em&gt;、および&lt;em&gt;dimension&lt;/em&gt;以外のプロパティはすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="cccd71717a8c41be41515296fe384b80356736c4" translate="yes" xml:space="preserve">
          <source>The proxy now restricts its injection to only &lt;code&gt;Content-Type: text/html&lt;/code&gt; headers so it will not accidentally inject into the wrong responses.</source>
          <target state="translated">プロキシは挿入を &lt;code&gt;Content-Type: text/html&lt;/code&gt; ヘッダーのみに制限するようになり、誤った応答に誤って挿入されなくなりました。</target>
        </trans-unit>
        <trans-unit id="86b1ae5b1f6582a5f613c8cfb4a4171bbd5ee43e" translate="yes" xml:space="preserve">
          <source>The proxy server can now correctly proxy content on a &lt;code&gt;ipv6&lt;/code&gt; host only. We had to patch node core to get this in, as by default node prefers &lt;code&gt;ipv4&lt;/code&gt;. We now concurrently test all hosts via &lt;code&gt;dns.lookup&lt;/code&gt; to find the first one that responds. This updated behavior now matches how other clients, like &lt;code&gt;curl&lt;/code&gt;, and browsers resolve hosts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/112&quot;&gt;#112&lt;/a&gt;.</source>
          <target state="translated">プロキシサーバーは、 &lt;code&gt;ipv6&lt;/code&gt; ホストでのみコンテンツを正しくプロキシできるようになりました。デフォルトでノードが &lt;code&gt;ipv4&lt;/code&gt; を好むため、これを取得するためにノードコアにパッチを適用する必要がありました。ここで、 &lt;code&gt;dns.lookup&lt;/code&gt; を介してすべてのホストを同時にテストし、最初に応答するホストを見つけます。この更新された動作は、 &lt;code&gt;curl&lt;/code&gt; などの他のクライアント、およびブラウザーがホストを解決する方法と一致します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/112&quot;&gt;＃112を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d9a2b43e63a034ee4997d095f86ad3f22788e8cb" translate="yes" xml:space="preserve">
          <source>The quality setting for the video compression, in Constant Rate Factor (CRF). The value can be &lt;code&gt;false&lt;/code&gt; to disable compression or a value between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;51&lt;/code&gt;, where a lower value results in better quality (at the expense of a higher file size).</source>
          <target state="translated">ビデオ圧縮の品質設定（一定レート係数（CRF））。値とすることができる &lt;code&gt;false&lt;/code&gt; 無効圧縮または間の値に &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;51&lt;/code&gt; 、（より高いファイルサイズを犠牲にして）より良い品質の低い値をもたらします。</target>
        </trans-unit>
        <trans-unit id="f89067c46de9cbac856617c606b8a987ed9c1132" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command is similar to how &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;&lt;code&gt;$(&amp;hellip;)&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt; &lt;code&gt;$(&amp;hellip;)&lt;/code&gt; の&lt;/a&gt;動作と似ています。</target>
        </trans-unit>
        <trans-unit id="a33d9384bde7f0377ea14bfe2d251644ad148160" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/children&quot;&gt;&lt;code&gt;.children()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/children&quot;&gt; &lt;code&gt;.children()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="9d8432f6da2e184cded12d9982a55d834b2ed898" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/closest&quot;&gt;&lt;code&gt;.closest()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/closest&quot;&gt; &lt;code&gt;.closest()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="bda6266f25e4ff6cd23feea5107bba5b6dbc8c4a" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; works in jQuery. Its behavior is also similar to that of the CSS pseudo-class &lt;a href=&quot;https://api.jquery.com/nth-child-selector/&quot;&gt;&lt;code&gt;:nth-child()&lt;/code&gt;&lt;/a&gt; selector.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。その動作も、CSSの疑似クラス&lt;a href=&quot;https://api.jquery.com/nth-child-selector/&quot;&gt; &lt;code&gt;:nth-child()&lt;/code&gt; &lt;/a&gt;セレクターの動作と似ています。</target>
        </trans-unit>
        <trans-unit id="6d0ef2d48a5d36dac1ca67fde341c0ba5c9ce1ef" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、&lt;a href=&quot;http://api.jquery.com/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="2a1ca271bf27573182e9ffe0716a9134d879fac3" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="c657bb7b5132132da2ed605362f91ee4cba6b4ea" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="fab41f8c308d7604317c8a3976edc0bcc6755220" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;&lt;code&gt;$(&amp;hellip;)&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt; &lt;code&gt;$(&amp;hellip;)&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="7a5a410ccc5435cfafbf7f43b72636408d7df049" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/last&quot;&gt;&lt;code&gt;.last()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/last&quot;&gt; &lt;code&gt;.last()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="299072e32b4b4670ebaafce9744ce963c508c9d2" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/next&quot;&gt;&lt;code&gt;.next()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/next&quot;&gt; &lt;code&gt;.next()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="6e6186d9908c77fd34884b3b46007e07fa29fc91" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/nextAll&quot;&gt;&lt;code&gt;.nextAll()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/nextAll&quot;&gt; &lt;code&gt;.nextAll()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="189cc06406542b8a4eadc96285d9469280712ee8" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/nextUntil&quot;&gt;&lt;code&gt;.nextUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/nextUntil&quot;&gt; &lt;code&gt;.nextUntil()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="94b85c123580764e2e7732b7c3e62fd80caa9ef6" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/not&quot;&gt;&lt;code&gt;.not()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/not&quot;&gt; &lt;code&gt;.not()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="777282d025492a0fd9c1baf0fc794b6dc5b53c3b" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parent&quot;&gt;&lt;code&gt;.parent()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/parent&quot;&gt; &lt;code&gt;.parent()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="d41943ec63c3f5f2d7e199b73d6d15ae1a2cce00" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parents&quot;&gt;&lt;code&gt;.parents()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/parents&quot;&gt; &lt;code&gt;.parents()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="544e3c939462bf691563593037c51fd6e522ef2c" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parentsUntil&quot;&gt;&lt;code&gt;.parentsUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/parentsUntil&quot;&gt; &lt;code&gt;.parentsUntil()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="ee9867ecc1e1b911af35ec08087f2eccb0a10657" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prev&quot;&gt;&lt;code&gt;.prev()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/prev&quot;&gt; &lt;code&gt;.prev()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="315998380b634a4d4b0a2f5ed2f482aba143a367" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prevAll&quot;&gt;&lt;code&gt;.prevAll()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/prevAll&quot;&gt; &lt;code&gt;.prevAll()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="25f3b4d78859b15e5a073181e251e9737d52f6f3" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prevUntil&quot;&gt;&lt;code&gt;.prevUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">このコマンドのクエリ動作は、jQueryでの&lt;a href=&quot;http://api.jquery.com/prevUntil&quot;&gt; &lt;code&gt;.prevUntil()&lt;/code&gt; の&lt;/a&gt;動作と正確に一致します。</target>
        </trans-unit>
        <trans-unit id="4628417eea51fed2b221bb2c01160482495b6d7b" translate="yes" xml:space="preserve">
          <source>The question is: how important is the &lt;code&gt;Submit&lt;/code&gt; text content to your test? If the text changed from &lt;code&gt;Submit&lt;/code&gt; to &lt;code&gt;Save&lt;/code&gt; - would you want the test to fail?</source>
          <target state="translated">問題は、テキストコンテンツをテストに &lt;code&gt;Submit&lt;/code&gt; することの重要性です。テキストが[ &lt;code&gt;Submit&lt;/code&gt; から[ &lt;code&gt;Save&lt;/code&gt; 変更された場合-テストを失敗させますか？</target>
        </trans-unit>
        <trans-unit id="832d0f608aa3dce489a24b42cbb16ea13c394135" translate="yes" xml:space="preserve">
          <source>The reason for using &lt;code&gt;const&lt;/code&gt; is because the &lt;code&gt;$span&lt;/code&gt; object is mutable. Whenever you have mutable objects and you&amp;rsquo;re trying to compare them, you&amp;rsquo;ll need to store their values. Using &lt;code&gt;const&lt;/code&gt; is a perfect way to do that.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; を使用する理由は、 &lt;code&gt;$span&lt;/code&gt; オブジェクトが変更可能であるためです。変更可能なオブジェクトがあり、それらを比較しようとしているときはいつでも、それらの値を保存する必要があります。これを行うには、 &lt;code&gt;const&lt;/code&gt; を使用するのが最適です。</target>
        </trans-unit>
        <trans-unit id="e2332863f7342ce8e194642f40c3469e1c70bcb6" translate="yes" xml:space="preserve">
          <source>The reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.</source>
          <target state="translated">これが警告ではなくエラーになるのは、Cypress が内部的にコマンドをシリアルにキューイングするのに対し、Promises はコマンドが呼び出されるとすぐに実行されるからです。これを調整しようとすると、Cypress が解決しなくなります。</target>
        </trans-unit>
        <trans-unit id="4f5c4809c9c27cdb18a1771b2867e3ac1e88ccd9" translate="yes" xml:space="preserve">
          <source>The reason this is even possible to do in the Promise world is because you have the power to execute multiple asynchronous actions in parallel. Under the hood, each promise &amp;lsquo;chain&amp;rsquo; returns a promise instance that tracks the relationship between linked parent and child instances.</source>
          <target state="translated">これがPromiseの世界でも可能である理由は、複数の非同期アクションを並行して実行する能力があるためです。内部では、各プロミス「チェーン」は、リンクされた親インスタンスと子インスタンス間の関係を追跡するプロミスインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="154c7ee9b9136ebf1eb2d12f5bf175d3c48376dc" translate="yes" xml:space="preserve">
          <source>The reason we scroll an element into view when hovering over a snapshot is just to help you to see which element(s) were found by that corresponding command. It&amp;rsquo;s a purely visual feature and does not necessarily reflect what your page looked like when the command ran.</source>
          <target state="translated">スナップショットにカーソルを合わせるときに要素をスクロールして表示するのは、対応するコマンドでどの要素が見つかったかを確認するためです。これは純粋に視覚的な機能であり、コマンドを実行したときのページの外観を必ずしも反映していません。</target>
        </trans-unit>
        <trans-unit id="741ce430257dc2797efcdc070f54bcde38cba49e" translate="yes" xml:space="preserve">
          <source>The recommended approach is to install Cypress with &lt;code&gt;npm&lt;/code&gt; because :</source>
          <target state="translated">推奨されるアプローチは、 &lt;code&gt;npm&lt;/code&gt; でサイプレスをインストールすることです：</target>
        </trans-unit>
        <trans-unit id="7d004abe4ea60408199e7d1090fa66306815c24a" translate="yes" xml:space="preserve">
          <source>The record key is used to authenticate that your project is &lt;em&gt;allowed&lt;/em&gt; to record tests to the Dashboard Service. As long as your record key stays &lt;em&gt;private&lt;/em&gt;, nobody will be able to record test runs for your project - even if they have your &lt;code&gt;projectId&lt;/code&gt;.</source>
          <target state="translated">レコードキーは、プロジェクトがダッシュボードサービスにテストを記録&lt;em&gt;できること&lt;/em&gt;を認証するために使用されます。レコードキーが&lt;em&gt;非公開&lt;/em&gt;である限り、たとえプロジェクト &lt;code&gt;projectId&lt;/code&gt; があっても、誰もプロジェクトのテスト実行を記録することはできません。</target>
        </trans-unit>
        <trans-unit id="782e934647aaf46e267b9e2994b503b6ceb94eae" translate="yes" xml:space="preserve">
          <source>The relationship between Cypress and your back end</source>
          <target state="translated">サイプレスとバックエンドの関係</target>
        </trans-unit>
        <trans-unit id="86767f6f9298a0ccef95be7ee182369b685aa005" translate="yes" xml:space="preserve">
          <source>The reporter now more intelligently scrolls to prevent commands from being cut off. Useful in screenshots / video recording. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/228&quot;&gt;#228&lt;/a&gt;.</source>
          <target state="translated">レポーターは、コマンドが途切れないように、よりインテリジェントにスクロールするようになりました。スクリーンショット/ビデオ録画で役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/228&quot;&gt;＃228を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="eb961ae4754815cd1b9d935db64457dd730740d1" translate="yes" xml:space="preserve">
          <source>The reporter now updates the duration every &lt;code&gt;100ms&lt;/code&gt; instead of only when a test changes.</source>
          <target state="translated">レポーターは、テストが変更されたときだけではなく、 &lt;code&gt;100ms&lt;/code&gt; ごとに期間を更新するようになりました。</target>
        </trans-unit>
        <trans-unit id="ebc26485c6e3c6b30603411dc1165d16fc408b87" translate="yes" xml:space="preserve">
          <source>The request matched multiple intercepts</source>
          <target state="translated">リクエストは複数のインターセプトと一致した</target>
        </trans-unit>
        <trans-unit id="1e0d76a96e8727bc65f9abd4125e82c8f2902dc4" translate="yes" xml:space="preserve">
          <source>The response was cached</source>
          <target state="translated">レスポンスがキャッシュされました</target>
        </trans-unit>
        <trans-unit id="d0039958a5af4a5799d4ea0cdb86070e4837053f" translate="yes" xml:space="preserve">
          <source>The retry-ability allows the tests to complete each command as soon as the assertion passes, without hard-coding waits. If your application takes a few milliseconds or even seconds to render each DOM element - no big deal, the test does not have to change at all. For example, let&amp;rsquo;s introduce an artificial delay of 3 seconds when refreshing the application&amp;rsquo;s UI below in an example TodoMVC model code:</source>
          <target state="translated">再試行機能により、テストは、ハードコーディングの待機なしで、アサーションが通過するとすぐに各コマンドを完了することができます。アプリケーションが各DOM要素のレンダリングに数ミリ秒または数秒かかる場合-大した問題ではないので、テストをまったく変更する必要はありません。たとえば、TodoMVCモデルコードの例で、以下のアプリケーションのUIを更新するときに3秒の人工的な遅延を導入しましょう。</target>
        </trans-unit>
        <trans-unit id="71bc331e6aac9e3eb2c8fe091951ba06336fb2eb" translate="yes" xml:space="preserve">
          <source>The return value of the function</source>
          <target state="translated">関数の戻り値</target>
        </trans-unit>
        <trans-unit id="5475168849b55756904f67ba5f5927702fc5cd88" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;launchOptions&lt;/code&gt; object will become the new launch options for the browser.</source>
          <target state="translated">返された &lt;code&gt;launchOptions&lt;/code&gt; オブジェクトは、ブラウザの新しい起動オプションになります。</target>
        </trans-unit>
        <trans-unit id="edcff548a201cf2cbeab03884e41ca15627351e5" translate="yes" xml:space="preserve">
          <source>The right click below will be issued inside of the element (15px from the left and 40px from the top).</source>
          <target state="translated">下の右クリックは要素の内側(左から15px、上から40px)に発行されます。</target>
        </trans-unit>
        <trans-unit id="2b348d0a86845c8ceb7394e67cb9264b277dac55" translate="yes" xml:space="preserve">
          <source>The righthand side of the Test Runner is used to display the Application Under Test (AUT): the application that was navigated to using a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; or any subsequent routing calls made from the visited application.</source>
          <target state="translated">テストランナーの右側は、テスト中のアプリケーション（AUT）を表示するために使用されます：&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;または訪問したアプリケーションから行われた後続のルーティング呼び出しを使用してナビゲートされたアプリケーション。</target>
        </trans-unit>
        <trans-unit id="20ccabfca08c80324032b660312bf288570f5f54" translate="yes" xml:space="preserve">
          <source>The root element yielded is &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; by default. However, when calling &lt;code&gt;.root()&lt;/code&gt; from a &lt;a href=&quot;within&quot;&gt;&lt;code&gt;.within()&lt;/code&gt;&lt;/a&gt; command, the root element will point to the element you are &amp;ldquo;within&amp;rdquo;.</source>
          <target state="translated">生成されるルート要素はデフォルトで &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; です。ただし、&lt;a href=&quot;within&quot;&gt; &lt;code&gt;.within()&lt;/code&gt; &lt;/a&gt;コマンドから &lt;code&gt;.root()&lt;/code&gt; を呼び出すと、ルート要素は「内部」にある要素を指します。</target>
        </trans-unit>
        <trans-unit id="5b1bd9a24b648423ec3686dbb22073a50661093e" translate="yes" xml:space="preserve">
          <source>The rules are:</source>
          <target state="translated">ルールは</target>
        </trans-unit>
        <trans-unit id="aadce9498b17e758a86f40d9ae98f9a3640bdcce" translate="yes" xml:space="preserve">
          <source>The run you are attempting access to is already complete and will not accept new groups.</source>
          <target state="translated">アクセスしようとしている実行はすでに完了しており、新しいグループは受け付けません。</target>
        </trans-unit>
        <trans-unit id="1b91f2dcdffa4ff0300650744bcc55d68af71bc7" translate="yes" xml:space="preserve">
          <source>The runner is now responsive. It will correctly scale down URLs on smaller screen sizes instead of looking completely broken in CSS. We also designed a much better loading indicator.</source>
          <target state="translated">ランナーがレスポンシブになりました。CSSで完全に壊れているように見えるのではなく、より小さな画面サイズでURLを正しくスケールダウンします。また、はるかに優れたローディングインジケーターもデザインしました。</target>
        </trans-unit>
        <trans-unit id="744f89a32257af4cef30575d297defcb2298d35b" translate="yes" xml:space="preserve">
          <source>The runner no longer appears to &amp;ldquo;hang&amp;rdquo; if a &lt;code&gt;before&lt;/code&gt; hook fails in a test with siblings. Previously the test would never generate a &lt;code&gt;status&lt;/code&gt; and look pending forever. This was a visual bug only. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1343&quot;&gt;#1343&lt;/a&gt;.</source>
          <target state="translated">兄弟のテストで &lt;code&gt;before&lt;/code&gt; フックが失敗した場合、ランナーが「ハング」しているように見えなくなりました。以前は、テストが &lt;code&gt;status&lt;/code&gt; を生成することはなく、永久に保留中のように見えました。これは視覚的なバグのみでした。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1343&quot;&gt;＃1343を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="58248b14b36017671f91d641a616c8f7c6655e6f" translate="yes" xml:space="preserve">
          <source>The same principles we introduced many times before apply to this situation. If you want to access what a command yields you have to do it in a closure using a &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以前に何度も紹介した同じ原則がこの状況に適用されます。コマンドが生成するものにアクセスしたい場合は、&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;を使用してクロージャで行う必要があります。</target>
        </trans-unit>
        <trans-unit id="da087ce901acf8f64536c6694cd13c6121e0a3c7" translate="yes" xml:space="preserve">
          <source>The same subject they were originally yielded: &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それらが最初に生成されたのと同じ主題：&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="616f1ebfb12be022e71b1e7312dc0657084c5e29" translate="yes" xml:space="preserve">
          <source>The scaffolded &lt;code&gt;spec_helper.js&lt;/code&gt; now correctly returns its object literal in the &lt;code&gt;onConsole&lt;/code&gt; callback.</source>
          <target state="translated">足場 &lt;code&gt;spec_helper.js&lt;/code&gt; は正しくでそのオブジェクトリテラルを返し &lt;code&gt;onConsole&lt;/code&gt; のコールバックを。</target>
        </trans-unit>
        <trans-unit id="77ec6af1d48ca1702a265ac799dd5b3e5f28002e" translate="yes" xml:space="preserve">
          <source>The screenshot will be stored in the &lt;code&gt;cypress/screenshots&lt;/code&gt; folder by default. You can change the directory where screenshots are saved in your &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">スクリーンショットは、デフォルトで &lt;code&gt;cypress/screenshots&lt;/code&gt; フォルダーに保存されます。&lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;設定&lt;/a&gt;でスクリーンショットが保存されるディレクトリを変更できます。</target>
        </trans-unit>
        <trans-unit id="2806f2f253541c74359b4b5eddeefd82c06c7ace" translate="yes" xml:space="preserve">
          <source>The screenshot will be stored in the &lt;code&gt;cypress/screenshots&lt;/code&gt; folder by default. You can change the directory where screenshots are saved in your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">スクリーンショットは、デフォルトで &lt;code&gt;cypress/screenshots&lt;/code&gt; フォルダーに保存されます。&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;構成&lt;/a&gt;でスクリーンショットが保存されるディレクトリを変更できます。</target>
        </trans-unit>
        <trans-unit id="1d6edcf18de10be4a2c17192050ea340363e0d60" translate="yes" xml:space="preserve">
          <source>The scrolling algorithm works by scrolling the top, leftmost point of the element we issued the command on to the top, leftmost scrollable point of its scrollable container.</source>
          <target state="translated">スクロールアルゴリズムは、コマンドを発行した要素の最上部、左端の点を、スクロール可能なコンテナの最上部、左端のスクロール可能な点にスクロールさせることで動作します。</target>
        </trans-unit>
        <trans-unit id="5522a3bf222d37bdd3cdf0c1b8d08578e5788f02" translate="yes" xml:space="preserve">
          <source>The second group can be called &lt;code&gt;Mac/Chrome 70&lt;/code&gt;.</source>
          <target state="translated">2番目のグループは &lt;code&gt;Mac/Chrome 70&lt;/code&gt; と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="9fc34125a565889afe865b6c9fd020b60647a340" translate="yes" xml:space="preserve">
          <source>The seeded &lt;code&gt;example_spec.js&lt;/code&gt; file has been replaced by an &lt;code&gt;examples&lt;/code&gt; folder with several spec files. This more closely reflects the recommended use of Cypress - as smaller groups of tests split among many files that will now be run in isolation. The tests were also updated from ES5 to ES6. You can see all changes in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;&lt;code&gt;cypress-example-kitchensink&lt;/code&gt; repo&lt;/a&gt; Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1460&quot;&gt;#1460&lt;/a&gt;.</source>
          <target state="translated">シードされた &lt;code&gt;example_spec.js&lt;/code&gt; ファイルは、いくつかのspecファイルを含む &lt;code&gt;examples&lt;/code&gt; フォルダーに置き換えられました。これはサイプレスの推奨される使用法をより厳密に反映しています。テストの小さなグループが、分離して実行される多くのファイルに分割されているためです。テストもES5からES6に更新されました。&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt; &lt;code&gt;cypress-example-kitchensink&lt;/code&gt; リポジトリの&lt;/a&gt;修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1460&quot;&gt;＃1460で&lt;/a&gt;すべての変更を確認できます。</target>
        </trans-unit>
        <trans-unit id="e0ff7ed00bb89a367e0369a10505032a1cf6dc2e" translate="yes" xml:space="preserve">
          <source>The seeded &lt;code&gt;example_spec.js&lt;/code&gt; file no longer fails in Windows on the &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; test. It now conditionally runs a command appropriate for Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1097&quot;&gt;#1097&lt;/a&gt;.</source>
          <target state="translated">シードされた &lt;code&gt;example_spec.js&lt;/code&gt; ファイルは、Windowsの&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;テストで失敗しなくなりました。Windowsに適したコマンドを条件付きで実行するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1097&quot;&gt;＃1097を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="298b205a13d32dbd7241fc9d144b1f1be96f75cd" translate="yes" xml:space="preserve">
          <source>The seeded Kitchen Sink examples have some new examples showing how to add a message to assertions, how to compare the text content of two elements, and how to make assertions about &lt;code&gt;data&lt;/code&gt; attributes. The examples also have some small typo fixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/502&quot;&gt;#502&lt;/a&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3272&quot;&gt;#3272&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3287&quot;&gt;#3287&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3700&quot;&gt;#3700&lt;/a&gt;.</source>
          <target state="translated">シードされたキッチンシンクの例には、メッセージをアサーションに追加する方法、2つの要素のテキストコンテンツを比較する方法、および &lt;code&gt;data&lt;/code&gt; 属性についてアサーションを作成する方法を示すいくつかの新しい例があります。例には、いくつかの小さなタイプミスの修正も含まれています。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/502&quot;&gt;＃502を&lt;/a&gt;修正。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3272&quot;&gt;＃3272&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3287&quot;&gt;＃3287&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3700&quot;&gt;＃3700で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="a092fcd3d2c2f2c51d80e6ddaaccfc4c4e6cb92e" translate="yes" xml:space="preserve">
          <source>The selector where you want finding next siblings to stop.</source>
          <target state="translated">次の兄弟を見つけて停止させたい場所のセレクタです。</target>
        </trans-unit>
        <trans-unit id="d2e7aba59dd21c2dbf43910b949e804cf99208b5" translate="yes" xml:space="preserve">
          <source>The selector where you want finding parent ancestors to stop.</source>
          <target state="translated">親の先祖探しを停止させたい場所のセレクタです。</target>
        </trans-unit>
        <trans-unit id="f8c13841a7cc9952554fbf15cca0f35f8a5b7f10" translate="yes" xml:space="preserve">
          <source>The selector where you want finding previous siblings to stop.</source>
          <target state="translated">前の兄弟姉妹の検索を停止させたい場所のセレクタです。</target>
        </trans-unit>
        <trans-unit id="5c3fa19e6d68b5c04ffb7d22b5766f6abf54c4dc" translate="yes" xml:space="preserve">
          <source>The simplest solution here is to move your reset code to &lt;strong&gt;before&lt;/strong&gt; the test runs.</source>
          <target state="translated">ここで最も簡単な解決策は、テストを実行する&lt;strong&gt;前に&lt;/strong&gt;リセットコードを移動することです。</target>
        </trans-unit>
        <trans-unit id="7326d486873e849329a7995dc389459b7a485672" translate="yes" xml:space="preserve">
          <source>The simplest way to find the pre-release version of the Test Runner matching this commit is to look at the commits made on our projects under test at &lt;a href=&quot;https://github.com/cypress-io/cypress-test-example-repos/commits/master&quot;&gt;cypress-test-example-repos&lt;/a&gt;. You will see individual commits for each built platform and architecture: &lt;code&gt;darwin&lt;/code&gt; (Mac), &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;win 32bit&lt;/code&gt; and &lt;code&gt;win 64bit&lt;/code&gt;. The built commit SHA &lt;code&gt;e5106d9&lt;/code&gt; is in the subject line of the test commit:</source>
          <target state="translated">このコミットに一致するテストランナーのプレリリースバージョンを見つける最も簡単な方法は、&lt;a href=&quot;https://github.com/cypress-io/cypress-test-example-repos/commits/master&quot;&gt;cypress-test-example-repos&lt;/a&gt;でテスト中のプロジェクトに対して行われたコミットを確認することです。ビルドされたプラットフォームとアーキテクチャごとに個別のコミットが表示されます： &lt;code&gt;darwin&lt;/code&gt; （Mac）、 &lt;code&gt;linux&lt;/code&gt; 、 &lt;code&gt;win 32bit&lt;/code&gt; および &lt;code&gt;win 64bit&lt;/code&gt; 。ビルドされたコミットSHA &lt;code&gt;e5106d9&lt;/code&gt; は、テストコミットの件名にあります。</target>
        </trans-unit>
        <trans-unit id="4922ad4546a0c80d9103f709606363d960023b10" translate="yes" xml:space="preserve">
          <source>The simplest way to see IntelliSense when typing a Cypress command or assertion is to add a &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/triple-slash-directives.html&quot;&gt;triple-slash directive&lt;/a&gt; to the head of your JavaScript or TypeScript testing file. This will turn the IntelliSense on a per file basis. Just copy the comment line below and paste it into your spec file.</source>
          <target state="translated">サイプレスコマンドまたはアサーションを入力するときにIntelliSenseを確認する最も簡単な方法は、JavaScriptまたはTypeScriptテストファイルの先頭に&lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/triple-slash-directives.html&quot;&gt;トリプルスラッシュディレクティブ&lt;/a&gt;を追加することです。これにより、ファイルごとにIntelliSenseが有効になります。以下のコメント行をコピーして、スペックファイルに貼り付けてください。</target>
        </trans-unit>
        <trans-unit id="6e005c42a16c60f4791cac1922a1de9a2c11e5a8" translate="yes" xml:space="preserve">
          <source>The situations</source>
          <target state="translated">状況</target>
        </trans-unit>
        <trans-unit id="bfecdae994d59e9351f4d782d3beba01301c1c39" translate="yes" xml:space="preserve">
          <source>The size of the image file (in bytes).</source>
          <target state="translated">画像ファイルのサイズ(バイト数)。</target>
        </trans-unit>
        <trans-unit id="7eece8a51628f7550e564a37f2924316f0112393" translate="yes" xml:space="preserve">
          <source>The solution</source>
          <target state="translated">解決策</target>
        </trans-unit>
        <trans-unit id="c05d2e56eb827cf6c977fe1d6b78afb5627a0ff8" translate="yes" xml:space="preserve">
          <source>The solution here is to use multiple reporters. You will have the benefit of both worlds.</source>
          <target state="translated">ここでの解決策は、複数のレポーターを使うことです。両方の世界の利点を得ることができます。</target>
        </trans-unit>
        <trans-unit id="db247f1f81db3157aef3cd6887ea3dc4e6d0c53c" translate="yes" xml:space="preserve">
          <source>The source line not covered by the end-to-end tests shows an edge case NOT reachable from the UI. Yet this switch case is definitely worth testing - at least to avoid accidentally changing its behavior during future refactoring.</source>
          <target state="translated">エンドツーエンドのテストではカバーされていないソースラインは、UI から到達できないエッジケースを示しています。しかし、このスイッチケースはテストする価値があります-少なくとも、将来のリファクタリングで誤って動作を変更しないようにするために。</target>
        </trans-unit>
        <trans-unit id="e420d2e02ca27a058dc670499b6960faa1c8a7d0" translate="yes" xml:space="preserve">
          <source>The sources line not covered marked in yellow (the switch cases the test missed) and red (regular statements) are a great guide for writing more end-to-end tests. We need tests that delete todo items, edit them, mark all of them as completed at once and clear completed items. When we cover every switch statement in &lt;code&gt;src/reducers/todos.js&lt;/code&gt; we probably will achieve close to 100% code coverage. Even more importantly, we will cover the main features of the application the user is expected to use.</source>
          <target state="translated">カバーされていないソース行は、黄色（スイッチがテストに失敗した場合）と赤（通常のステートメント）でマークされており、エンドツーエンドのテストをさらに記述するための優れたガイドです。ToDoアイテムを削除、編集、すべてを一度に完了としてマークし、完了したアイテムをクリアするテストが必要です。 &lt;code&gt;src/reducers/todos.js&lt;/code&gt; のすべてのswitchステートメントをカバーするとき、ほぼ100％のコードカバレッジを達成するでしょう。さらに重要なことは、ユーザーが使用することが期待されるアプリケーションの主な機能をカバーすることです。</target>
        </trans-unit>
        <trans-unit id="1ee947ce102f16e81ff6c392bd028cc14209fcfe" translate="yes" xml:space="preserve">
          <source>The spec defines the &amp;ldquo;submit&amp;rdquo; button as the first &lt;code&gt;input[type=submit]&lt;/code&gt; or &lt;code&gt;button[type!=button]&lt;/code&gt; from the form.</source>
          <target state="translated">仕様では、「送信」ボタンをフォームの最初の &lt;code&gt;input[type=submit]&lt;/code&gt; または &lt;code&gt;button[type!=button]&lt;/code&gt; として定義しています。</target>
        </trans-unit>
        <trans-unit id="aa52cfa7b66849aeb1e1e20a02c8323a892ac97d" translate="yes" xml:space="preserve">
          <source>The spec file&amp;rsquo;s font weight has been increased within the Test Runner for better readability. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3065&quot;&gt;#3065&lt;/a&gt;.</source>
          <target state="translated">スペックファイルのフォントの太さが読みやすくなるようにテストランナー内で増加しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3065&quot;&gt;＃3065で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="8ab5600bcf8258f904e13ebf56de677e7ac204b6" translate="yes" xml:space="preserve">
          <source>The spec states what should happen if the element clicked is removed from the DOM during &lt;code&gt;mousedown&lt;/code&gt; or &lt;code&gt;mouseup&lt;/code&gt;, but Cypress is not currently factoring this in. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">仕様は、クリックされた要素が &lt;code&gt;mousedown&lt;/code&gt; または &lt;code&gt;mouseup&lt;/code&gt; の間にDOMから削除された場合にどうなるかについて述べていますが、サイプレスは現在これを考慮していません。これを修正する必要がある場合は&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;、問題を開いて&lt;/a&gt;ください。</target>
        </trans-unit>
        <trans-unit id="05791ba30f36d790f5202b44eb7363004981a14e" translate="yes" xml:space="preserve">
          <source>The spinner animation should more smoothly spin when a command is pending in the Test Runner. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4005&quot;&gt;#4005&lt;/a&gt;.</source>
          <target state="translated">コマンドがテストランナーで保留中の場合、スピナーアニメーションはよりスムーズに回転するはずです。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4005&quot;&gt;＃4005で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="ee6e315f5406c519d65ceffeaf6709cf4dc537cf" translate="yes" xml:space="preserve">
          <source>The standard output has been redesigned to better visualize spec files running in isolation and to be more visually appealing. This may break any specialized logic written that expected the standard output to be structured in a specific way or contain specific words. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1588&quot;&gt;#1588&lt;/a&gt;.</source>
          <target state="translated">標準出力が再設計され、分離して実行されるスペックファイルをより視覚化し、より視覚的に魅力的になりました。これは、標準出力が特定の方法で構造化されるか、特定の単語を含むことを期待して書かれた特殊なロジックを壊す可能性があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1588&quot;&gt;＃1588を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4eba702a046b370fe55e1ae443a0698e1baa5c96" translate="yes" xml:space="preserve">
          <source>The strategies</source>
          <target state="translated">戦略</target>
        </trans-unit>
        <trans-unit id="5953668a2bc7e87a40e41d6bc6562ef18608eb9a" translate="yes" xml:space="preserve">
          <source>The suggested path for saving the preprocessed file to disk. This is unique to the source file. A preprocessor can choose to write the file elsewhere, but Cypress automatically provides you this value as a convenient default.</source>
          <target state="translated">前処理されたファイルをディスクに保存するための推奨パス。これはソースファイルに固有の値です。プリプロセッサはファイルを他の場所に書き込むことができますが、Cypress は自動的にこの値を便利なデフォルトとして提供します。</target>
        </trans-unit>
        <trans-unit id="cf4f68de9e3414117e00fe81f998018fef423d19" translate="yes" xml:space="preserve">
          <source>The support file is a great place to put reusable behavior such as Custom Commands or global overrides that you want applied and available to all of your spec files.</source>
          <target state="translated">サポートファイルは、カスタムコマンドやグローバルオーバーライドのような再利用可能な動作を、すべての仕様ファイルに適用して利用できるようにするのに最適な場所です。</target>
        </trans-unit>
        <trans-unit id="edf9fe7e13ebc4e1a9e695dcbee0a2f47e2da124" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;cy.task(name, arg, options)&lt;/code&gt; only has place for a single argument to be passed from the test code to the plugins code. In the situations where you would like to pass multiple arguments, place them into an object to be destructured inside the task code. For example, if you would like to execute a database query and pass the database profile name you could do:</source>
          <target state="translated">構文 &lt;code&gt;cy.task(name, arg, options)&lt;/code&gt; は、テストコードからプラグインコードに渡される単一の引数のみが含まれます。複数の引数を渡したい場合は、タスクコード内で非構造化するオブジェクトにそれらを配置します。たとえば、データベースクエリを実行してデータベースプロファイル名を渡したい場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="2dc5fb064027d5425dcb06031eb04d3f26b8ef98" translate="yes" xml:space="preserve">
          <source>The system command to be executed from the project root (the directory that contains &lt;code&gt;cypress.json&lt;/code&gt;).</source>
          <target state="translated">プロジェクトルート（ &lt;code&gt;cypress.json&lt;/code&gt; を含むディレクトリ）から実行されるシステムコマンド。</target>
        </trans-unit>
        <trans-unit id="5c2a51af150d91cd26df789000e0b2aff74aa3e2" translate="yes" xml:space="preserve">
          <source>The system command to be executed from the project root (the directory that contains the default &lt;code&gt;cypress.json&lt;/code&gt; configuration file).</source>
          <target state="translated">プロジェクトルート（デフォルトの &lt;code&gt;cypress.json&lt;/code&gt; 構成ファイルを含むディレクトリ）から実行されるシステムコマンド。</target>
        </trans-unit>
        <trans-unit id="a9ecfc5dbe854c8e87cfad618aa3452f417851ae" translate="yes" xml:space="preserve">
          <source>The test &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/runner&quot;&gt;runner&lt;/a&gt; has been rebuilt from the ground up in &lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt;. The left side of the runner called the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/reporter&quot;&gt;reporter&lt;/a&gt; is now a separate application. This, as well as other changes, markedly improved the performance of running tests. &lt;em&gt;Your tests will now run faster.&lt;/em&gt; This will also enable you to test your application in full screen. Additionally this paves the way for being able to spawn multiple browsers at once and synchronize testing across them. This also means we&amp;rsquo;ll be able to support mobile browsers. The UI for doing this hasn&amp;rsquo;t been implemented but the vast majority of the work to accomplish this is done now.</source>
          <target state="translated">テスト&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/runner&quot;&gt;ランナー&lt;/a&gt;は&lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt;でゼロから再構築されています。&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/reporter&quot;&gt;レポーター&lt;/a&gt;と呼ばれるランナーの左側は、別のアプリケーションになりました。これとその他の変更により、テストの実行パフォーマンスが著しく向上しました。&lt;em&gt;テストはより速く実行されます。&lt;/em&gt;これにより、アプリケーションを全画面でテストすることもできます。さらに、これにより、一度に複数のブラウザーを起動し、それらのブラウザー間でテストを同期できるようになります。これは、モバイルブラウザをサポートできることも意味します。これを行うためのUIは実装されていませんが、これを達成するための作業の大部分は現在行われています。</target>
        </trans-unit>
        <trans-unit id="1fde190f7aaf2b43a3df989474cb26010c916855" translate="yes" xml:space="preserve">
          <source>The test has finished but Cypress still has commands in its queue</source>
          <target state="translated">テストは終了しましたが、Cypress のキューにはまだコマンドが残っています。</target>
        </trans-unit>
        <trans-unit id="408e2a30fb8dbe380e7c5c68d1429ad4b2fa87ca" translate="yes" xml:space="preserve">
          <source>The test interface borrowed from &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; provides &lt;code&gt;describe()&lt;/code&gt;, &lt;code&gt;context()&lt;/code&gt;, &lt;code&gt;it()&lt;/code&gt; and &lt;code&gt;specify()&lt;/code&gt;.</source>
          <target state="translated">借りたテストインタフェース&lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;モカを&lt;/a&gt;提供 &lt;code&gt;describe()&lt;/code&gt; 、 &lt;code&gt;context()&lt;/code&gt; 、 &lt;code&gt;it()&lt;/code&gt; および &lt;code&gt;specify()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b2b83102a63a3d2cae202ad98c0882149e26154" translate="yes" xml:space="preserve">
          <source>The test is green, even though we made no assertions.</source>
          <target state="translated">何も主張していないのに、テストは緑です。</target>
        </trans-unit>
        <trans-unit id="3b26a746152c5e6951d14cd04a6705a9da5da25b" translate="yes" xml:space="preserve">
          <source>The test name text is now selectable inside the Command Log. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1476&quot;&gt;#1476&lt;/a&gt;.</source>
          <target state="translated">テスト名のテキストがコマンドログ内で選択できるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1476&quot;&gt;＃1476を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="677c13d47b66766d5de3330e8ee6846e01da614e" translate="yes" xml:space="preserve">
          <source>The test passes in Cypress without a hitch.</source>
          <target state="translated">サイプレスでは無事に合格。</target>
        </trans-unit>
        <trans-unit id="cebd2ba13455213fb1fd8eb55b2140bb21d388c3" translate="yes" xml:space="preserve">
          <source>The test passes, because the second &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; is retried with its own assertion now &lt;code&gt;.should('have.length', 2)&lt;/code&gt;. Only after successfully finding two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, the command &lt;code&gt;.find('label')&lt;/code&gt; and its assertion starts, and by now, the item with correct &amp;ldquo;todo B&amp;rdquo; label has been correctly queried.</source>
          <target state="translated">2番目の &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; が独自のアサーションで再試行されるため、テストは成功します &lt;code&gt;.should('have.length', 2)&lt;/code&gt; 。2つの &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 要素が正常に検出された後にのみ、コマンド &lt;code&gt;.find('label')&lt;/code&gt; とそのアサーションが開始され、正しい「todo B」ラベルが付いたアイテムが正しくクエリされます。</target>
        </trans-unit>
        <trans-unit id="55fad155c13bf4c36076952735aacf49f42a1326" translate="yes" xml:space="preserve">
          <source>The test passes, even if the there is no web application visited.</source>
          <target state="translated">訪問したWebアプリケーションがなくても、テストは通過します。</target>
        </trans-unit>
        <trans-unit id="de71d3aad8061eada0c3c81692d2f2152a641df7" translate="yes" xml:space="preserve">
          <source>The tests titles and headers in the Command Log no longer truncate with elipsis when the text is longer than that width of the Command Log. Instead the text wraps so that all text is shown. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3947&quot;&gt;#3947&lt;/a&gt;.</source>
          <target state="translated">コマンドログのテストのタイトルとヘッダーは、テキストがコマンドログの幅よりも長い場合に省略記号で切り捨てられなくなりました。代わりに、テキストが折り返されてすべてのテキストが表示されます。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3947&quot;&gt;＃3947&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bcb89de9b094a31924c4a38456d9bbb4c947bee1" translate="yes" xml:space="preserve">
          <source>The text to be typed into the DOM element.</source>
          <target state="translated">DOM 要素に入力するテキスト。</target>
        </trans-unit>
        <trans-unit id="9f9bdd3c02a97c74a6b21a32af18e5d40cea8f4f" translate="yes" xml:space="preserve">
          <source>The third group can be called &lt;code&gt;Linux/Electron&lt;/code&gt;. &lt;em&gt;Electron is the default browser used in Cypress runs&lt;/em&gt;.</source>
          <target state="translated">3番目のグループは &lt;code&gt;Linux/Electron&lt;/code&gt; と呼ばれます。&lt;em&gt;Electronは、サイプレスの実行で使用されるデフォルトのブラウザです&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3480a52688819ceb9188befe7f88086aa53ebf27" translate="yes" xml:space="preserve">
          <source>The time the run started and finished as well as the duration.</source>
          <target state="translated">ランの開始時間と終了時間だけでなく、持続時間も。</target>
        </trans-unit>
        <trans-unit id="789cf010b55608cf61521c415f3472efba58ac36" translate="yes" xml:space="preserve">
          <source>The times the run, each spec file, and test started and ended.</source>
          <target state="translated">ラン、各スペックファイル、テストの開始と終了の時間。</target>
        </trans-unit>
        <trans-unit id="1ab1f7ba5e441060b3e47ee6ec9ef1015a985796" translate="yes" xml:space="preserve">
          <source>The title of your project is now the title of the browser tab (so you can easily tell Cypress tabs from one another).</source>
          <target state="translated">プロジェクトのタイトルがブラウザタブのタイトルになりました(Cypressのタブを簡単に見分けられるようになりました)。</target>
        </trans-unit>
        <trans-unit id="aca5f31247cc57de12011ed72a9362d0578d654c" translate="yes" xml:space="preserve">
          <source>The trade-off here is that doing everything in the browser (basically all of your tests) is a much better experience in Cypress. But doing things outside of the browser may take a little extra work.</source>
          <target state="translated">ここでのトレードオフは、すべてのことをブラウザ(基本的にはすべてのテスト)で行うことで、Cypressの方がはるかに良い経験になるということです。しかし、ブラウザの外で何かをするには少し余分な作業が必要になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="66800d02a42414569d04adc313282995eafd7015" translate="yes" xml:space="preserve">
          <source>The tray icon in OSX will now change colors. It will turn blue when you&amp;rsquo;re running a Cypress project and red on any kind of failures such as syntax errors in &lt;code&gt;cypress.json&lt;/code&gt;. It will turn back black when nothing is actively running.</source>
          <target state="translated">OSXのトレイアイコンの色が変わります。サイプレスプロジェクトを実行している場合は青色になり、 &lt;code&gt;cypress.json&lt;/code&gt; の構文エラーなどのあらゆる種類の障害が発生した場合は赤色になります。何もアクティブに実行されていない場合は、黒に戻ります。</target>
        </trans-unit>
        <trans-unit id="a09aac7dae774f70172432961f1b259397ef93d1" translate="yes" xml:space="preserve">
          <source>The type definition for &lt;a href=&quot;../../api/commands/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; now correctly supports a function argument.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt;の型定義で、関数の引数が正しくサポートされるようになりました。</target>
        </trans-unit>
        <trans-unit id="13e70dc4fe63c68c728bf6572edb7d362407e557" translate="yes" xml:space="preserve">
          <source>The type definition for &lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt;&lt;code&gt;.scrollIntoView()&lt;/code&gt;&lt;/a&gt; no longer errors when passed a &lt;code&gt;duration&lt;/code&gt; option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1606&quot;&gt;#1606&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt; &lt;code&gt;.scrollIntoView()&lt;/code&gt; &lt;/a&gt;の型定義は、 &lt;code&gt;duration&lt;/code&gt; オプションを渡されたときにエラーになりません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1606&quot;&gt;＃1606を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e9d05cb6f9125a2a31db69026779516fc5793c3c" translate="yes" xml:space="preserve">
          <source>The types for the &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains(content, options)&lt;/code&gt;&lt;/a&gt; syntax have been added. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4727&quot;&gt;#4727&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains(content, options)&lt;/code&gt; &lt;/a&gt;構文のタイプが追加されました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4727&quot;&gt;＃4727&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8fc59ef10843743e04fa2db214438ec33017997" translate="yes" xml:space="preserve">
          <source>The updated hidden rules apply to all assertions like &lt;code&gt;should(&quot;be.hidden&quot;)&lt;/code&gt;, and how Cypress indicates an element is hidden displays in the Command Log.</source>
          <target state="translated">更新された非表示のルール &lt;code&gt;should(&quot;be.hidden&quot;)&lt;/code&gt; ようなすべてのアサーションに適用され、サイプレスが要素が非表示であることを示す方法はコマンドログに表示されます。</target>
        </trans-unit>
        <trans-unit id="739f9feb3c19d40dc4a125fe4555d7c28a426ec9" translate="yes" xml:space="preserve">
          <source>The upsides to this are that tests should consistently pass or fail regardless of a developers&amp;rsquo; screen size. Tests will also consistently run in &lt;code&gt;CI&lt;/code&gt; because all of the viewports will be the same no matter what machine Cypress runs on.</source>
          <target state="translated">これの利点は、テストが開発者の画面サイズに関係なく一貫して成功または失敗することです。Cypressが実行されているマシンに関係なく、すべてのビューポートが同じであるため、テストは &lt;code&gt;CI&lt;/code&gt; でも一貫して実行されます。</target>
        </trans-unit>
        <trans-unit id="b4caa8e4a8e4a89d3536d09c4562d45b2a718bd1" translate="yes" xml:space="preserve">
          <source>The url to view the run in the Dashboard is now printed to output during &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/494&quot;&gt;#494&lt;/a&gt;.</source>
          <target state="translated">ダッシュボードで実行を表示するためのURLが、 &lt;code&gt;cypress run&lt;/code&gt; 中に出力に出力されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/494&quot;&gt;＃494&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2b781df5aa0f1e73ea6e6bedbdf69961275a4e1" translate="yes" xml:space="preserve">
          <source>The user will receive an invitation email with a link to accept the invitation.</source>
          <target state="translated">ユーザーには、招待状を受け入れるためのリンクが記載された招待状メールが届きます。</target>
        </trans-unit>
        <trans-unit id="affe373c25c897b5146614a48726413036bbe8bd" translate="yes" xml:space="preserve">
          <source>The value of the configuration to set.</source>
          <target state="translated">設定する設定の値です。</target>
        </trans-unit>
        <trans-unit id="aee0eeb0ca06180df3004e90447f374c0f22b786" translate="yes" xml:space="preserve">
          <source>The value of the cookie to set.</source>
          <target state="translated">設定するクッキーの値。</target>
        </trans-unit>
        <trans-unit id="96934814cb0c76cf32368945ad1a8f1bf08f17e7" translate="yes" xml:space="preserve">
          <source>The value of the environment variable to set.</source>
          <target state="translated">設定する環境変数の値。</target>
        </trans-unit>
        <trans-unit id="7abae0cf181bef848fd2ad2b5706a9792a8085ec" translate="yes" xml:space="preserve">
          <source>The viewport dropdown helper in the Runner now displays string quoted JSON instead of an object literal. This better matches how you should write those options in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1350&quot;&gt;#1350&lt;/a&gt;.</source>
          <target state="translated">Runnerのビューポートドロップダウンヘルパーに、オブジェクトリテラルではなく、文字列で引用されたJSONが表示されるようになりました。これは、これらのオプションを &lt;code&gt;cypress.json&lt;/code&gt; でどのように記述するかによりよく一致します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1350&quot;&gt;＃1350を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0ee043998be1aa7cada273bf5c6e7d62842686f0" translate="yes" xml:space="preserve">
          <source>The viewport&amp;rsquo;s dimensions will now dynamically display accurately as they are changed in the header area.</source>
          <target state="translated">ビューポートの寸法がヘッダー領域で変更されると、動的に正確に表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="e257e09cebb37573b035d2956f13438f996c9c01" translate="yes" xml:space="preserve">
          <source>The viewport&amp;rsquo;s scale will now dynamically display accurately as it is changed.</source>
          <target state="translated">ビューポートのスケールは、変更されると動的に正確に表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="a9990208162ffe1f694e9cb04fd7f1fabeddcdd5" translate="yes" xml:space="preserve">
          <source>The visibility algorithm has been considerably improved. Should fix most if not all visibility problems. We accounted for CSS transforms, translations, and added a new branch of logic for &lt;code&gt;position: fixed&lt;/code&gt; elements which should be much more accurate. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/631&quot;&gt;#631&lt;/a&gt;.</source>
          <target state="translated">可視性アルゴリズムが大幅に改善されました。すべてではないにしてもほとんどの可視性の問題を修正する必要があります。CSS変換、翻訳を考慮し、 &lt;code&gt;position: fixed&lt;/code&gt; のロジックの新しいブランチを追加しました。固定要素はより正確でなければなりません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/631&quot;&gt;＃631を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a303c902d6e00e4ac0998294f99999c0f87a3cae" translate="yes" xml:space="preserve">
          <source>The warning messages when going over test recording limits have been updated to correctly display &amp;lsquo;monthly tests&amp;rsquo; and &amp;lsquo;private tests&amp;rsquo; where necessary. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4024&quot;&gt;#4024&lt;/a&gt;.</source>
          <target state="translated">テストの記録制限を超えた場合の警告メッセージが更新され、必要に応じて「月次テスト」と「プライベートテスト」が正しく表示されるようになりました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4024&quot;&gt;＃4024&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06c5b9fdf12dd7776c5bc6898db63e2835b8256a" translate="yes" xml:space="preserve">
          <source>The webpack preprocessor handles:</source>
          <target state="translated">webpackプリプロセッサが処理します。</target>
        </trans-unit>
        <trans-unit id="c2b6005e7b660fcea7a6dad3c772b094b3c4d62c" translate="yes" xml:space="preserve">
          <source>The whole intention of Cypress (and what makes it very different from other testing tools) is to create consistent, non-flaky tests that perform identically from one run to the next. Making this happen isn&amp;rsquo;t free - there are some trade-offs we make that may initially seem unfamiliar to developers accustomed to working with Promises.</source>
          <target state="translated">サイプレスの全体的な意図（およびそれが他のテストツールと大きく異なる点）は、ある実行から次の実行まで同じように実行される、一貫性のある不安定でないテストを作成することです。これを実現することは自由ではありません。Promiseでの作業に慣れている開発者にとって、最初はなじみのないトレードオフがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="cfc1dbc3bb5ced51aab772a3bb44a84bc81f7d0f" translate="yes" xml:space="preserve">
          <source>The width and height of the image in pixels (example: &lt;code&gt;{ width: 100, height: 50 }&lt;/code&gt;)</source>
          <target state="translated">画像の幅と高さ（ピクセル単位）（例： &lt;code&gt;{ width: 100, height: 50 }&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3ab08ea645e2bc37eccbd5f8e042d55feaec14d7" translate="yes" xml:space="preserve">
          <source>Then add a separate &lt;code&gt;reporter-config.json&lt;/code&gt; file that enables &lt;code&gt;spec&lt;/code&gt; and &lt;code&gt;junit&lt;/code&gt; reporters and directs the &lt;code&gt;junit&lt;/code&gt; reporter to save a separate XML files.</source>
          <target state="translated">次に、 &lt;code&gt;spec&lt;/code&gt; および &lt;code&gt;junit&lt;/code&gt; レポーターを有効にし、 &lt;code&gt;junit&lt;/code&gt; レポーターに個別のXMLファイルを保存するように指示する別の &lt;code&gt;reporter-config.json&lt;/code&gt; ファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="cb0a062de3d1ce91993195752db0dd65088d0498" translate="yes" xml:space="preserve">
          <source>Then add the code below to your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次に、以下のコードを&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; に&lt;/a&gt;追加します。</target>
        </trans-unit>
        <trans-unit id="9c13c428cd2b73a1a953b21ccf2210567f582d9a" translate="yes" xml:space="preserve">
          <source>Then the URL should include &lt;code&gt;/commands/actions&lt;/code&gt;</source>
          <target state="translated">次に、URLには &lt;code&gt;/commands/actions&lt;/code&gt; を含める必要があります</target>
        </trans-unit>
        <trans-unit id="dc0c66b1cd8a60e04a32da100b4c70789c97790f" translate="yes" xml:space="preserve">
          <source>Then you can add the &lt;code&gt;dataCy&lt;/code&gt; command to the global Cypress Chainable interface (so called because commands are chained together) by creating a new TypeScript definitions file beside your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt;, in this case at &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt;.</source>
          <target state="translated">次に、&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; の&lt;/a&gt;横に新しいTypeScript定義ファイル（この場合は &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt; ）を作成することにより、 &lt;code&gt;dataCy&lt;/code&gt; コマンドをグローバルサイプレスチェーン可能インターフェース（コマンドが一緒にチェーンされるため、いわゆる）に追加できます。</target>
        </trans-unit>
        <trans-unit id="ef83fb30a1896682f7e2738066df4c2466a7c41c" translate="yes" xml:space="preserve">
          <source>There are 5 different ways to set environment variables. Each has a slightly different use case.</source>
          <target state="translated">環境変数を設定する方法は5つあります。それぞれの使用例は若干異なります。</target>
        </trans-unit>
        <trans-unit id="68f6fd791a58783dfd93f03e91caaafe61553448" translate="yes" xml:space="preserve">
          <source>There are &lt;em&gt;likely&lt;/em&gt; better ways to do this, but this isn&amp;rsquo;t well documented at the moment. Every application is different and there is no one-size-fits-all solution. For the moment, if you&amp;rsquo;re using session-based cookies, this method will work.</source>
          <target state="translated">これを行うにはもっと良い方法があり&lt;em&gt;そう&lt;/em&gt;ですが、現時点では十分に文書化されていません。アプリケーションはそれぞれ異なり、万能なソリューションはありません。当面は、セッションベースのCookieを使用している場合、この方法が機能します。</target>
        </trans-unit>
        <trans-unit id="aa0ce497980c81746403a7cfdc4840a87b9f1596" translate="yes" xml:space="preserve">
          <source>There are &lt;em&gt;very&lt;/em&gt; specific reasons these limitations are built into the Cypress API.</source>
          <target state="translated">これらの制限がサイプレスAPIに組み込まれている&lt;em&gt;非常に&lt;/em&gt;特定の理由があります。</target>
        </trans-unit>
        <trans-unit id="e6f2a24a7884566fc57012f8f4ee95663731f417" translate="yes" xml:space="preserve">
          <source>There are a few simple workarounds to these common situations:</source>
          <target state="translated">これらの一般的な状況には、いくつかの簡単な回避策があります。</target>
        </trans-unit>
        <trans-unit id="180b50ce51e5cbede0052b127d76e4d9b09f4c59" translate="yes" xml:space="preserve">
          <source>There are a myriad of other events Cypress fires to communicate with the Node server process, automation servers, mocha, the runner, and the reporter. They are strictly internal to the way Cypress works and not useful for users.</source>
          <target state="translated">ノードサーバプロセス、自動化サーバ、モカ、ランナー、レポーターと通信するためにCypressが発射する他の無数のイベントがあります。これらはCypressの動作方法の厳密な内部的なものであり、ユーザーにとっては有用ではありません。</target>
        </trans-unit>
        <trans-unit id="da6d06463b0ec87461115a001155bf1163762085" translate="yes" xml:space="preserve">
          <source>There are actually dozens of methods attached to &lt;code&gt;Cypress.dom&lt;/code&gt; that are not documented below. These methods are used internally by Cypress in nearly every single built in command.</source>
          <target state="translated">&lt;code&gt;Cypress.dom&lt;/code&gt; には、以下に記載されていないメソッドが数十あります。これらのメソッドは、ほぼすべての組み込みコマンドでサイプレスによって内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="38d7f3b5c5785f106f663b2188928e8a30cc29d6" translate="yes" xml:space="preserve">
          <source>There are hundreds of custom error messages describing the exact reason Cypress failed your test.</source>
          <target state="translated">Cypress がテストに失敗した正確な理由を説明するカスタムエラーメッセージが何百もあります。</target>
        </trans-unit>
        <trans-unit id="c3d7a9f669cdb60f8f1826fa41f750e4c74ec667" translate="yes" xml:space="preserve">
          <source>There are many simple and easy ways to reference, compare and utilize the objects that Cypress commands yield you.</source>
          <target state="translated">サイプレスのコマンドがもたらすオブジェクトの参照・比較・活用方法は、簡単で簡単なものがたくさんあります。</target>
        </trans-unit>
        <trans-unit id="707a2b6aaec820af9fb8f45959f8f689e6ebd86f" translate="yes" xml:space="preserve">
          <source>There are newly added examples in the TypeScript definitions for &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;custom commands&lt;/a&gt;, &lt;a href=&quot;../../api/commands/location&quot;&gt;&lt;code&gt;cy.location()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3684&quot;&gt;#3684&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4715&quot;&gt;#4715&lt;/a&gt;.</source>
          <target state="translated">以下のための活字体の定義で新しく追加された例があります&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;カスタムコマンド&lt;/a&gt;、&lt;a href=&quot;../../api/commands/location&quot;&gt; &lt;code&gt;cy.location()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3684&quot;&gt;＃3684&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4715&quot;&gt;＃4715&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c43d9359f00be63d9d4867a4e526adb66611e41b" translate="yes" xml:space="preserve">
          <source>There are no more global, in-app updates. Versioning should be primarily &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;controlled via &lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; like every other package / dependency in your project. For users not using &lt;code&gt;npm&lt;/code&gt; you can manually download new versions of Cypress when they&amp;rsquo;re released.</source>
          <target state="translated">グローバルなアプリ内アップデートはありません。バージョン管理は、プロジェクト内の他のすべてのパッケージ/依存関係と同様に、主に&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt; &lt;code&gt;npm&lt;/code&gt; &lt;/a&gt;を介して制御する必要があります。 &lt;code&gt;npm&lt;/code&gt; を使用していないユーザーは、リリースされたサイプレスの新しいバージョンを手動でダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="ccaf6816c2014dcd825d2bb1d4794f2d218669c9" translate="yes" xml:space="preserve">
          <source>There are no servers, drivers, or any other dependencies to install or configure. You can write your first passing test in 60 seconds.</source>
          <target state="translated">サーバーやドライバなど、インストールや設定のための依存関係は一切ありません。最初の合格テストを60秒で書くことができます。</target>
        </trans-unit>
        <trans-unit id="4acfc9514edcd410f9982908c58e1120cfc1558d" translate="yes" xml:space="preserve">
          <source>There are now &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Getting Started&lt;/a&gt; docs including &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; for &lt;code&gt;cypress.json&lt;/code&gt;</source>
          <target state="translated">現在、 &lt;code&gt;cypress.json&lt;/code&gt; の&lt;a href=&quot;configuration&quot;&gt;設定&lt;/a&gt;を含む&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Getting Started&lt;/a&gt;ドキュメントがあります</target>
        </trans-unit>
        <trans-unit id="ca3f36279a85a1026ce410f83f3d9781f88382c3" translate="yes" xml:space="preserve">
          <source>There are now a series of checks that are run during download of Cypress to verify that the zip file downloaded is the correct file. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/812&quot;&gt;#812&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3515&quot;&gt;#3515&lt;/a&gt;.</source>
          <target state="translated">サイプレスのダウンロード中に一連のチェックが実行され、ダウンロードされたzipファイルが正しいファイルであることを確認します。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/812&quot;&gt;＃812&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3515&quot;&gt;＃3515&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="163ab5841ac9fe32c8ecb747fcbbfc2839409549" translate="yes" xml:space="preserve">
          <source>There are now several new CLI commands for interacting with the binary cache: &lt;a href=&quot;../guides/command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../guides/command-line#cypress-cache-list&quot;&gt;&lt;code&gt;cypress cache list&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../guides/command-line#cypress-cache-clear&quot;&gt;&lt;code&gt;cypress cache clear&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1856&quot;&gt;#1856&lt;/a&gt;.</source>
          <target state="translated">バイナリキャッシュを操作するための新しいCLIコマンドがいくつか追加されました&lt;a href=&quot;../guides/command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../guides/command-line#cypress-cache-list&quot;&gt; &lt;code&gt;cypress cache list&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../guides/command-line#cypress-cache-clear&quot;&gt; &lt;code&gt;cypress cache clear&lt;/code&gt; &lt;/a&gt;です。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1856&quot;&gt;＃1856を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e3378d57e3ba4d5c11a3fd553547fc1b207c24cb" translate="yes" xml:space="preserve">
          <source>There are other excellent tools that are optimized for doing each item listed above.</source>
          <target state="translated">上記の各項目を行うために最適化された優れたツールは他にもあります。</target>
        </trans-unit>
        <trans-unit id="5e53bc7e519f00c6fbc86ff1a8b6d370297971c0" translate="yes" xml:space="preserve">
          <source>There are several levels of &lt;code&gt;DEBUG&lt;/code&gt; messages</source>
          <target state="translated">&lt;code&gt;DEBUG&lt;/code&gt; メッセージにはいくつかのレベルがあります</target>
        </trans-unit>
        <trans-unit id="fded19319531f91063d0c2fc25a2c7285a3065a7" translate="yes" xml:space="preserve">
          <source>There are several new &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; properties for video recording: &lt;code&gt;videoRecording&lt;/code&gt;, &lt;code&gt;videoCompression&lt;/code&gt;, and &lt;code&gt;videosFolder&lt;/code&gt;.</source>
          <target state="translated">ビデオ録画には、いくつかの新しい&lt;a href=&quot;configuration&quot;&gt;構成&lt;/a&gt;プロパティがあります &lt;code&gt;videoRecording&lt;/code&gt; 、 &lt;code&gt;videoCompression&lt;/code&gt; 、および &lt;code&gt;videosFolder&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1a9864720db7294c00877158df389b1472455db7" translate="yes" xml:space="preserve">
          <source>There are several published, open source plugins, listed in the &lt;a href=&quot;../../plugins/index#visual-testing&quot;&gt;Visual Testing plugins&lt;/a&gt; section, and several commercial companies have developed visual testing solutions on top of the Cypress Test Runner listed below.</source>
          <target state="translated">&lt;a href=&quot;../../plugins/index#visual-testing&quot;&gt;ビジュアルテストプラグイン&lt;/a&gt;セクションにリストされているいくつかの公開されたオープンソースプラグインがあり、いくつかの商業企業が以下にリストされているサイプレステストランナーに加えてビジュアルテストソリューションを開発しています。</target>
        </trans-unit>
        <trans-unit id="fa0c09a5d907fc5a81651b57997ccf823a357828" translate="yes" xml:space="preserve">
          <source>There are situations when it is useful to control your application&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt; in order to override its behavior or avoid slow tests.</source>
          <target state="translated">アプリケーションの動作をオーバーライドしたり、遅いテストを回避したりするために、アプリケーションの &lt;code&gt;date&lt;/code&gt; と &lt;code&gt;time&lt;/code&gt; を制御すると便利な状況があります。</target>
        </trans-unit>
        <trans-unit id="1ec510a7115384622bdf806fc23045336183d411" translate="yes" xml:space="preserve">
          <source>There are times when you will encounter errors or unexpected behavior with Cypress itself. In this situation, we recommend checking these support resources &lt;strong&gt;first&lt;/strong&gt;.</source>
          <target state="translated">サイプレス自体でエラーや予期しない動作が発生する場合があります。このような状況で、我々はこれらのサポートリソースをお調べください&lt;strong&gt;最初&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="99819c525097a56827a5efaee0977c9b214c5fb3" translate="yes" xml:space="preserve">
          <source>There are two types of methods you can call in your Cypress tests: &lt;strong&gt;commands&lt;/strong&gt; and &lt;strong&gt;assertions&lt;/strong&gt;. For example, there are 6 commands and 2 assertions in the test below.</source>
          <target state="translated">サイプレステストで呼び出すことができるメソッドには、&lt;strong&gt;コマンド&lt;/strong&gt;と&lt;strong&gt;アサーションの&lt;/strong&gt; 2つのタイプがあります。たとえば、以下のテストには6つのコマンドと2つのアサーションがあります。</target>
        </trans-unit>
        <trans-unit id="edd0c8f24df34d4f4efd4882e258c13a5f0d27da" translate="yes" xml:space="preserve">
          <source>There are two ways to write assertions in Cypress:</source>
          <target state="translated">Cypressでアサーションを書くには2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="2f90a254bcdbcdf0217f289fa6fe55e32c8bd325" translate="yes" xml:space="preserve">
          <source>There have been situations where Cypress does not correctly allow you to interact with an element that should be interactable. If that&amp;rsquo;s the case, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt;.</source>
          <target state="translated">サイプレスが相互作用可能な要素との相互作用を正しく許可しない状況がありました。その場合は&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;、問題を開いてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="846f089ba2dceeca206f450533e974240eb00438" translate="yes" xml:space="preserve">
          <source>There is a better / more helpful experience around passing unknown options to the CLI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/837&quot;&gt;#837&lt;/a&gt;.</source>
          <target state="translated">不明なオプションをCLIに渡すことについて、より良い/より役立つエクスペリエンスがあります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/837&quot;&gt;＃837を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7cb0a4f82ff308a4a655e5df1ab9a5514c43c847" translate="yes" xml:space="preserve">
          <source>There is a new &amp;ldquo;Download Chromium&amp;rdquo; menu item in the &amp;ldquo;Help&amp;rdquo; menu of the Test Runner links to Cypress&amp;rsquo;s &lt;a href=&quot;https://on.cypress.io/chromium-downloads&quot;&gt;Chromium Download Tool&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3977&quot;&gt;#3977&lt;/a&gt;</source>
          <target state="translated">サイプレスの&lt;a href=&quot;https://on.cypress.io/chromium-downloads&quot;&gt;Chromiumダウンロードツール&lt;/a&gt;へのテストランナーリンクの[ヘルプ]メニューに、新しい[ダウンロードChromium]メニュー項目があります。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3977&quot;&gt;＃3977&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8a888938384b901f545ade5d304637c1fbd4789" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; command that can execute any arbitrary system command. Additionally there is a new &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;execTimeout&lt;/code&gt;&lt;/a&gt; configuration option which is set to &lt;code&gt;60s&lt;/code&gt; by default. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/126&quot;&gt;#126&lt;/a&gt;.</source>
          <target state="translated">任意のシステムコマンドを実行できる新しい&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;コマンドがあります。さらに、デフォルトで &lt;code&gt;60s&lt;/code&gt; &lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;execTimeout&lt;/code&gt; &lt;/a&gt;設定されている新しいexecTimeout構成オプションがあります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/126&quot;&gt;＃126を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8b695443b7ff680b400a74fdbb62042e3ed95a68" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command for executing any arbitrary &lt;code&gt;node&lt;/code&gt; code.</source>
          <target state="translated">任意の &lt;code&gt;node&lt;/code&gt; コードを実行するための新しい&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;コマンドがあります。</target>
        </trans-unit>
        <trans-unit id="acb4d381b0d91e1db21a6bee9a8bc26677281fa6" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command that enables you to go outside the browser to perform tasks directly in &lt;code&gt;node&lt;/code&gt;. This will make it easy to setup, scaffold, seed, talk to your database, or anything else useful on a back end.</source>
          <target state="translated">新しい&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;コマンドが追加されました。これにより、ブラウザーの外側に移動して、 &lt;code&gt;node&lt;/code&gt; で直接タスクを実行できます。これにより、セットアップ、足場、シード、データベースとのやり取り、またはバックエンドで役立つその他のことを簡単に行うことができます。</target>
        </trans-unit>
        <trans-unit id="080c45c55e1a8e8bc7f30cae801b7b6ff44731de" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/config&quot;&gt;&lt;code&gt;Cypress.config&lt;/code&gt;&lt;/a&gt; interface - akin to &lt;a href=&quot;../../api/cypress-api/env&quot;&gt;&lt;code&gt;Cypress.env&lt;/code&gt;&lt;/a&gt; which provides access to configuration values.</source>
          <target state="translated">新しい&lt;a href=&quot;../../api/cypress-api/config&quot;&gt; &lt;code&gt;Cypress.config&lt;/code&gt; &lt;/a&gt;インターフェースがあり、構成値へのアクセスを提供する&lt;a href=&quot;../../api/cypress-api/env&quot;&gt; &lt;code&gt;Cypress.env&lt;/code&gt; に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="29a89616a7b0bd75512c95d76eb76237279081ff" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;&lt;code&gt;Cypress.Cookies&lt;/code&gt;&lt;/a&gt; interface which enables you to &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and even &lt;code&gt;preserve&lt;/code&gt; cookies throughout your test. Useful to preserve cookie-based sessions between your tests. &lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;Documentation is written here&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt; &lt;code&gt;Cypress.Cookies&lt;/code&gt; &lt;/a&gt;インターフェースがあり、テストを通してCookie を &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、および &lt;code&gt;preserve&lt;/code&gt; することもできます。テスト間でCookieベースのセッションを保持するのに役立ちます。&lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;ドキュメントはここに書かれています&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bc11c9a3ea0446140035e06a82277064c463a3c" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Screenshot API&lt;/a&gt; and new &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; options that allow you set defaults for how screenshots are captured, whether to scale your app, disable timers and animations, or which elements to black out in the screenshot. You can also set defaults for whether to automatically take screenshots when there are test failures or whether to wait for the Command Log to synchronize before taking the screenshot. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1424&quot;&gt;#1424&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;スクリーンショットAPI&lt;/a&gt;と新しい&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;オプションがあり、スクリーンショットのキャプチャ方法、アプリのスケーリング、タイマーとアニメーションの無効化、スクリーンショットでブラックアウトする要素のデフォルトを設定できます。テストの失敗時に自動的にスクリーンショットを撮るか、またはスクリーンショットを撮る前にコマンドログが同期するのを待つかについて、デフォルトを設定することもできます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1424&quot;&gt;＃1424を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="79bb1d052f1ca789b903deb46d7befdbcd7171dd" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../getting-started/installing-cypress#Mirroring&quot;&gt;&lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt;&lt;/a&gt; environment variable for installing Cypress at a mirror url. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2609&quot;&gt;#2609&lt;/a&gt;.</source>
          <target state="translated">サイプレスをミラーURLにインストールするための新しい&lt;a href=&quot;../getting-started/installing-cypress#Mirroring&quot;&gt; &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; &lt;/a&gt;環境変数があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2609&quot;&gt;＃2609を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="83beffa5e35c0631c3a7b574f10ad9d102e5087a" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;&amp;ndash;browser&lt;/code&gt; option&lt;/a&gt; that lets you change the browser that runs from the command line. This works the same way as changing the browser in the GUI, with the exception that any browser other than the default &lt;code&gt;electron&lt;/code&gt; browser will &lt;strong&gt;not&lt;/strong&gt; record a video. This is solvable but requires more work.</source>
          <target state="translated">コマンドラインから実行するブラウザーを変更できる新しい&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;&amp;ndash;browser&lt;/code&gt; オプション&lt;/a&gt;があります。これは、GUIでブラウザーを変更するのと同じように機能しますが、デフォルトの &lt;code&gt;electron&lt;/code&gt; ブラウザー以外のブラウザーはビデオを記録し&lt;strong&gt;ません&lt;/strong&gt;。これは解決可能ですが、さらに作業が必要です。</target>
        </trans-unit>
        <trans-unit id="04b2955c1440e10490167f19b06f746205a4bc88" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; property called: &lt;del&gt;&lt;code&gt;trashAssetsBeforeHeadlessRuns&lt;/code&gt;&lt;/del&gt; (This was changed to &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; in &lt;a href=&quot;#3.0.0&quot;&gt;&lt;code&gt;3.0.0&lt;/code&gt;&lt;/a&gt;) that is set to &lt;code&gt;true&lt;/code&gt; by default and will automatically clear out screenshots + videos folders before each run. These files are not deleted, they are just moved to your trash.</source>
          <target state="translated">次の新しい&lt;a href=&quot;configuration&quot;&gt;設定&lt;/a&gt;プロパティがあります。&lt;del&gt; &lt;code&gt;trashAssetsBeforeHeadlessRuns&lt;/code&gt; &lt;/del&gt;（これは&lt;a href=&quot;#3.0.0&quot;&gt; &lt;code&gt;3.0.0&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; に変更されました）これはデフォルトで &lt;code&gt;true&lt;/code&gt; に設定されており、実行する前にスクリーンショット+ビデオフォルダーを自動的に消去します。これらのファイルは削除されず、ごみ箱に移動されるだけです。</target>
        </trans-unit>
        <trans-unit id="d06af4861e389b3f4b76596a41ef326764789959" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;blacklistHosts&lt;/code&gt;&lt;/a&gt; option in &lt;code&gt;cypress.json&lt;/code&gt; that allows you to block requests made to those hosts. Blocked requests will respond with a &lt;code&gt;503&lt;/code&gt; status code. This is useful for blocking 3rd party domains like Google Analytics. We have added a &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;new &amp;lsquo;Stubbing Google Analytics&amp;rsquo; recipe&lt;/a&gt; demonstrating this. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/442&quot;&gt;#442&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; に新しい&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;blacklistHosts&lt;/code&gt; &lt;/a&gt;オプションがあり、これらのホストへのリクエストをブロックできます。ブロックされたリクエストは、 &lt;code&gt;503&lt;/code&gt; ステータスコードで応答します。これは、Google Analyticsなどのサードパーティのドメインをブロックするのに役立ちます。これを示す&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;新しい「Stubbing Google Analytics」レシピ&lt;/a&gt;を追加しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/442&quot;&gt;＃442を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="71b68cacc333c70b80b6a6041d7af0737e4db7a7" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;userAgent&lt;/code&gt;&lt;/a&gt; option in &lt;code&gt;cypress.json&lt;/code&gt;. This enables you to change the &lt;code&gt;userAgent&lt;/code&gt; of the browser for the entire browsing session. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/364&quot;&gt;#364&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;userAgent&lt;/code&gt; &lt;/a&gt;新しいuserAgentオプションが &lt;code&gt;cypress.json&lt;/code&gt; ます。これにより、ブラウジングセッション全体でブラウザの &lt;code&gt;userAgent&lt;/code&gt; を変更できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/364&quot;&gt;＃364を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ae9764d255bdd93bf742848a0bb91319330c74db" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;numTestsKeptInMemory&lt;/code&gt;&lt;/a&gt; configuration option that controls how many test&amp;rsquo;s snapshots and command data is kept in memory while tests are running. Reducing this number will reduce the memory used in the browser while tests are running. Whatever this number is - is how many tests you can walk back in time when inspecting their snapshots and return values. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/142&quot;&gt;#142&lt;/a&gt;.</source>
          <target state="translated">テストの実行中にメモリに保持されるテストのスナップショットとコマンドデータの数を制御する新しい&lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;numTestsKeptInMemory&lt;/code&gt; &lt;/a&gt;構成オプションがあります。この数を減らすと、テストの実行中にブラウザで使用されるメモリが減ります。この数値が何であれ-スナップショットと戻り値を検査するときに時間を遡ることができるテストの数です。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/142&quot;&gt;＃142&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02ec5dfd34f0346bdb7f35c6274b1cdf4305181b" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;recipe showcasing these new features&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;これらの新機能を紹介&lt;/a&gt;する新しいレシピがあります。</target>
        </trans-unit>
        <trans-unit id="6ad10514dd752d91913d4759b5ee5e3aa5c451ca" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt; service that displays your recorded runs.</source>
          <target state="translated">記録された実行を表示する新しい&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;ダッシュボード&lt;/a&gt;サービスがあります。</target>
        </trans-unit>
        <trans-unit id="77e7f0018a19b9c64db1fa23dd2cf5d0368ab527" translate="yes" xml:space="preserve">
          <source>There is a new &lt;code&gt;--global&lt;/code&gt; option useful with &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; to force Cypress to open in global mode. This is helpful when you have multiple nested Cypress projects but only want to install Cypress once in the root project. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/889&quot;&gt;#889&lt;/a&gt;.</source>
          <target state="translated">サイプレスをグローバルモードで強制的に&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;ために使用する新しい &lt;code&gt;--global&lt;/code&gt; オプションがcypress openで役立ちます。これは、複数のネストされたサイプレスプロジェクトがあり、サイプレスをルートプロジェクトに一度だけインストールする場合に役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/889&quot;&gt;＃889を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="972bd5bca2f0bc5c2b24402e52b432f624b1be26" translate="yes" xml:space="preserve">
          <source>There is a new command &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; that reads files on your file system and changes the subject to the contents. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;#179&lt;/a&gt;.</source>
          <target state="translated">ファイルシステム上のファイルを読み取り、件名を内容に変更する新しいコマンド&lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt;があります。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;＃179&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f68ca9f2a891dbd0987580099aec34c7ea3695f8" translate="yes" xml:space="preserve">
          <source>There is a new command &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; that creates and/or writes contents to files on your file system. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;#179&lt;/a&gt;.</source>
          <target state="translated">ファイルシステムのファイルにコンテンツを作成および/または書き込む新しいコマンド&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt;があります。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;＃179&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f04cef119eadde70093d340e263053fbf3b48903" translate="yes" xml:space="preserve">
          <source>There is a new docs section related to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard&lt;/a&gt; and the new features.</source>
          <target state="translated">&lt;a href=&quot;../dashboard/introduction&quot;&gt;ダッシュボード&lt;/a&gt;と新機能に関連する新しいドキュメントセクションがあります。</target>
        </trans-unit>
        <trans-unit id="7cbc4a231272b5474fcb2e0ba0ed37f41073f64e" translate="yes" xml:space="preserve">
          <source>There is a performance tradeoff here: &lt;strong&gt;tests that have longer timeout periods take longer to fail&lt;/strong&gt;. Commands always proceed as soon as their expected criteria is met, so working tests will be performed as fast as your application allows. A test that fails due to timeout will consume the entire timeout period, by design. This means that while you &lt;em&gt;may&lt;/em&gt; want to increase your timeout period to suit specific parts of your app, you &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; want to make it &amp;ldquo;extra long, just in case&amp;rdquo;.</source>
          <target state="translated">ここにはパフォーマンスのトレードオフがあります。&lt;strong&gt;タイムアウト時間が長いテストは失敗するまでに時間がかかり&lt;/strong&gt;ます。コマンドは常に、期待される基準が満たされるとすぐに処理が進むため、実際のテストはアプリケーションで可能な限り速く実行されます。タイムアウトにより失敗したテストは、設計上、タイムアウト期間全体を消費します。これは、アプリの特定の部分に合わせてタイムアウト期間を長くしたい場合でも、「万が一に備えて」長くしたく&lt;em&gt;ない&lt;/em&gt;場合&lt;em&gt;が&lt;/em&gt;あることを意味します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd3a8251112c22a0bf1975273531d4e8b487f70c" translate="yes" xml:space="preserve">
          <source>There is a rich UI which visually shows you the command execution, assertions, network requests, spies, stubs, page loads, or URL changes.</source>
          <target state="translated">コマンド実行、アサーション、ネットワークリクエスト、スパイ、スタブ、ページロード、URL変更などを視覚的に表示するリッチなUIがあります。</target>
        </trans-unit>
        <trans-unit id="a27c68a7274ff829a1c32f0ddaa955ab21da8cd4" translate="yes" xml:space="preserve">
          <source>There is also a new menu panel. Some commands (like action commands) will take multiple snapshots: &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt;. We can now cycle through these.</source>
          <target state="translated">新しいメニューパネルもあります。（アクションコマンドのような）一部のコマンドは、複数のスナップショットを取る：&lt;strong&gt;前&lt;/strong&gt;と&lt;strong&gt;後&lt;/strong&gt;。これらを循環できます。</target>
        </trans-unit>
        <trans-unit id="eaa53acc79e5c716d6dacd70ed6a73be45bd0a23" translate="yes" xml:space="preserve">
          <source>There is another way to fix our flaky test. Whenever you write a longer test, we recommend alternating commands with assertions. In this case, I will add an assertion after the &lt;code&gt;cy.get()&lt;/code&gt; command, but before the &lt;code&gt;.find()&lt;/code&gt; command.</source>
          <target state="translated">不安定なテストを修正する別の方法があります。より長いテストを作成するときは常に、アサーション付きのコマンドを交互にすることをお勧めします。この場合、私は後にアサーションを追加します &lt;code&gt;cy.get()&lt;/code&gt; コマンドが、前 &lt;code&gt;.find()&lt;/code&gt; コマンド。</target>
        </trans-unit>
        <trans-unit id="a64be5e933222b58a58d0dc12fc430763fee796f" translate="yes" xml:space="preserve">
          <source>There is essentially never any reason to visit a site that you don&amp;rsquo;t control in your tests. It&amp;rsquo;s prone to error and slow.</source>
          <target state="translated">テストで制御できないサイトにアクセスする理由は基本的にありません。エラーが発生しやすく、処理が遅くなります。</target>
        </trans-unit>
        <trans-unit id="0f57c2f2f40538e31abaeb9ca943454fea6a83b3" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;cy.tab()&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;cy.tab()&lt;/code&gt; コマンドはありません。</target>
        </trans-unit>
        <trans-unit id="63c8a89efb3a159630b4a57805e55542e49129c6" translate="yes" xml:space="preserve">
          <source>There is no cross browser support other than Chrome and Electron.</source>
          <target state="translated">ChromeとElectron以外のクロスブラウザ対応はありません。</target>
        </trans-unit>
        <trans-unit id="f2888ef848492fdb6210260238b98e33f56f1761" translate="yes" xml:space="preserve">
          <source>There is no longer a separate &lt;code&gt;cypress install&lt;/code&gt; step, but this command still exists if you want to &lt;strong&gt;reinstall&lt;/strong&gt; the binary for whatever reason.</source>
          <target state="translated">個別の &lt;code&gt;cypress install&lt;/code&gt; 手順はなくなりましたが、何らかの理由でバイナリを&lt;strong&gt;再インストール&lt;/strong&gt;する場合は、このコマンドがまだ存在します。</target>
        </trans-unit>
        <trans-unit id="d7ee6819fe6735c70035545a66c943933e18f0a3" translate="yes" xml:space="preserve">
          <source>There is no longer an error when scaffolding a new Cypress project. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/326&quot;&gt;#326&lt;/a&gt;.</source>
          <target state="translated">新しいサイプレスプロジェクトを足場するときにエラーが発生しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/326&quot;&gt;＃326を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9e5b5cac87e35310da0c85810ef9686073735b2a" translate="yes" xml:space="preserve">
          <source>There is no need to ever &lt;code&gt;return&lt;/code&gt; Cypress commands.</source>
          <target state="translated">サイプレスのコマンドを &lt;code&gt;return&lt;/code&gt; 必要はありません。</target>
        </trans-unit>
        <trans-unit id="04248a622963ddde849ee6b6b3cc76f561cc2699" translate="yes" xml:space="preserve">
          <source>There is not any native or mobile events support.</source>
          <target state="translated">ネイティブやモバイルイベントのサポートはありません。</target>
        </trans-unit>
        <trans-unit id="56ba7b31c83ad7595d7e2a55b3d565c08e9e4369" translate="yes" xml:space="preserve">
          <source>There is now a &lt;a href=&quot;../../api/commands/log&quot;&gt;&lt;code&gt;cy.log()&lt;/code&gt;&lt;/a&gt; command for displaying an arbitrary message and args. Useful for providing context while testing and debugging long tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/342&quot;&gt;#342&lt;/a&gt;.</source>
          <target state="translated">現在、任意のメッセージと引数を表示するための&lt;a href=&quot;../../api/commands/log&quot;&gt; &lt;code&gt;cy.log()&lt;/code&gt; &lt;/a&gt;コマンドがあります。長いテストのテストおよびデバッグ中にコンテキストを提供するのに役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/342&quot;&gt;＃342を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1f598dc9501427974ff4c2428fff185f34c313be" translate="yes" xml:space="preserve">
          <source>There is now a &lt;a href=&quot;../tooling/plugins-guide&quot;&gt;Plugins API interface&lt;/a&gt;. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/684&quot;&gt;#684&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../tooling/plugins-guide&quot;&gt;プラグインAPIインターフェース&lt;/a&gt;が追加されました。一部は&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/684&quot;&gt;＃684に&lt;/a&gt;対応しています。</target>
        </trans-unit>
        <trans-unit id="cd8c373bd5d7046717bbf32038f260e70f1ce97d" translate="yes" xml:space="preserve">
          <source>There is now a &lt;code&gt;cy.cmd&lt;/code&gt; and &lt;code&gt;cy.command&lt;/code&gt; method which enables you to invoke commands by their string name. This is most useful when using &lt;em&gt;namespaced&lt;/em&gt; custom commands. So &lt;code&gt;Cypress.addParentCommand(&quot;dashboard.setSlider&quot;, ...)&lt;/code&gt; can be accessed by &lt;code&gt;cy.cmd(&quot;dashboard.setSlider&quot;, arg1, arg2)&lt;/code&gt;. (Docs have not been written yet).</source>
          <target state="translated">現在、文字列名でコマンドを呼び出すことができる &lt;code&gt;cy.cmd&lt;/code&gt; および &lt;code&gt;cy.command&lt;/code&gt; メソッドがあります。これは、&lt;em&gt;名前空間付きの&lt;/em&gt;カスタムコマンドを使用する場合に最も役立ちます。したがって、 &lt;code&gt;Cypress.addParentCommand(&quot;dashboard.setSlider&quot;, ...)&lt;/code&gt; は &lt;code&gt;cy.cmd(&quot;dashboard.setSlider&quot;, arg1, arg2)&lt;/code&gt; でアクセスできます。（ドキュメントはまだ書かれていません）。</target>
        </trans-unit>
        <trans-unit id="cf4dcd5d8ab032b57d20ae25b94743436a377785" translate="yes" xml:space="preserve">
          <source>There is now a &lt;code&gt;{ parseSpecialCharSequences: false }&lt;/code&gt; option to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;cy.type()&lt;/code&gt;&lt;/a&gt; that disables parsing the special character sequences found between the &lt;code&gt;{}&lt;/code&gt; characters. This will now type what you&amp;rsquo;ve provided literally without any special parsing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4287&quot;&gt;#4287&lt;/a&gt;.</source>
          <target state="translated">今があります &lt;code&gt;{ parseSpecialCharSequences: false }&lt;/code&gt; にオプション&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;cy.type()&lt;/code&gt; &lt;/a&gt;特殊文字シーケンスを解析無効がとの間に見られることを &lt;code&gt;{}&lt;/code&gt; 文字が。これにより、特別な解析を行わずに、提供されたものを文字どおりに入力できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4287&quot;&gt;＃4287を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f940c11367f334900f9fe9e3847e283e77bc3c67" translate="yes" xml:space="preserve">
          <source>There is now a Search Bar in the Desktop GUI that enables you to filter the list of specs. Helpful for projects with a ton of spec files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1098&quot;&gt;#1098&lt;/a&gt;.</source>
          <target state="translated">デスクトップのGUIに検索バーが追加され、スペックのリストをフィルタリングできるようになりました。大量のスペックファイルを含むプロジェクトに役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1098&quot;&gt;＃1098を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="da7265af3da9c2c16aa77c8b980a05010fcc3eda" translate="yes" xml:space="preserve">
          <source>There is now a default &lt;code&gt;cypress&lt;/code&gt; folder that contains your test files, a &lt;code&gt;fixtures&lt;/code&gt; folder with an example fixture, and a &lt;code&gt;support&lt;/code&gt; folder with example support files. Inside &lt;code&gt;cypress&lt;/code&gt; there is an &lt;code&gt;integration&lt;/code&gt; folder that will contain your integration tests.</source>
          <target state="translated">これで、テストファイルを含むデフォルトの &lt;code&gt;cypress&lt;/code&gt; フォルダ、サンプルのフィクスチャを含む &lt;code&gt;fixtures&lt;/code&gt; フォルダ、およびサンプルのサポートファイルを含む &lt;code&gt;support&lt;/code&gt; フォルダができました。 &lt;code&gt;cypress&lt;/code&gt; 内には、統合テストを含む &lt;code&gt;integration&lt;/code&gt; フォルダがあります。</target>
        </trans-unit>
        <trans-unit id="8067cf3b90d7d9883abc59cd1f0a83808d2633b4" translate="yes" xml:space="preserve">
          <source>There is now a download service to access the latest version of Cypress and previous versions.</source>
          <target state="translated">Cypressの最新版や旧バージョンにアクセスできるダウンロードサービスが登場しました。</target>
        </trans-unit>
        <trans-unit id="e83110a4355fa79db9a3fcdf83a41acfd6cb91aa" translate="yes" xml:space="preserve">
          <source>There is now a link to our &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat&lt;/a&gt; in the navigation of the web app.</source>
          <target state="translated">これで、Webアプリのナビゲーションに&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;チャット&lt;/a&gt;へのリンクがあります。</target>
        </trans-unit>
        <trans-unit id="6e09ba3f0dfb49b58e71d412e80b4a4f4ac968a2" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;../getting-started/installing-cypress#Skipping-installation&quot;&gt;&lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt;&lt;/a&gt; flag you can pass during &lt;code&gt;npm install&lt;/code&gt; which skips the binary installation after the &lt;code&gt;cypress&lt;/code&gt; npm module completes its installation. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1005&quot;&gt;#1005&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../getting-started/installing-cypress#Skipping-installation&quot;&gt; &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; &lt;/a&gt;フラグが &lt;code&gt;npm install&lt;/code&gt; 中に渡すことができるようになりました。これにより、 &lt;code&gt;cypress&lt;/code&gt; npmモジュールがインストールを完了した後、バイナリのインストールがスキップされます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1005&quot;&gt;＃1005を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d0c122f435064136c25d3c102646962651950d9f" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;configuration&quot;&gt;configuration option&lt;/a&gt;: &lt;code&gt;watchForFileChanges&lt;/code&gt; that, when set to &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;cypress.json&lt;/code&gt;, will prevent Cypress from attempting to watch for file changes and restart your tests.</source>
          <target state="translated">新しい&lt;a href=&quot;configuration&quot;&gt;構成オプションが追加されました&lt;/a&gt;： &lt;code&gt;watchForFileChanges&lt;/code&gt; は、 &lt;code&gt;cypress.json&lt;/code&gt; で &lt;code&gt;false&lt;/code&gt; に設定されている場合、サイプレスがファイルの変更を監視してテストを再開しようとするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="dfa7b44660cfd433a495758bb2afdce65afa3004" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;chromeWebSecurity&lt;/code&gt;&lt;/a&gt; option you can set in &lt;code&gt;cypress.json&lt;/code&gt; to turn off Chrome&amp;rsquo;s Web Security features. We&amp;rsquo;ve written a brand new reference that details why and how you could use this. &lt;a href=&quot;../guides/web-security&quot;&gt;Cypress Web Security&lt;/a&gt;. This option can be used for accessing &lt;code&gt;cross origin&lt;/code&gt;&lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; or if your application needs to test navigation across super domains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/262&quot;&gt;#262&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;chromeWebSecurity&lt;/code&gt; &lt;/a&gt;オプションが追加され、 &lt;code&gt;cypress.json&lt;/code&gt; で ChromeのWebセキュリティ機能をオフに設定できるようになりました。これを使用する理由と方法を詳しく説明した新しいリファレンスを作成しました。&lt;a href=&quot;../guides/web-security&quot;&gt;サイプレスウェブセキュリティ&lt;/a&gt;。このオプションは、 &lt;code&gt;cross origin&lt;/code&gt; &lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; にアクセスする場合、またはアプリケーションがスーパードメイン間のナビゲーションをテストする必要がある場合に使用できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/262&quot;&gt;＃262を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9c13d06cd6f7be441a440e0a5e52a3c17d46efa2" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;error-messages&quot;&gt;Error Messages Page&lt;/a&gt; which will provide additional explanation when you are getting errors from Cypress. These errors will be directly linked to (like how Angular provides errors).</source>
          <target state="translated">サイプレスからエラーが発生したときに追加の説明を提供する新しい&lt;a href=&quot;error-messages&quot;&gt;エラーメッセージページ&lt;/a&gt;が追加されました。これらのエラーは直接リンクされます（Angularがエラーを提供する方法など）。</target>
        </trans-unit>
        <trans-unit id="3da6d69e75441af501cee5b60ff76c2820e29e9d" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;code&gt;videoUploadOnPasses&lt;/code&gt; configuration option in &lt;code&gt;cypress.json&lt;/code&gt;. Turning this off will only compress and upload videos on failures. This only affects projects which are setup to record to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/460&quot;&gt;#460&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/carlos-granados&quot;&gt;@carlos-granados&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;videoUploadOnPasses&lt;/code&gt; 新しいvideoUploadOnPasses設定オプションが &lt;code&gt;cypress.json&lt;/code&gt; ます。これをオフにすると、失敗した動画のみが圧縮およびアップロードされます。これは、ダッシュボードに記録するように設定されているプロジェクトにのみ影響します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/460&quot;&gt;＃460を&lt;/a&gt;修正。&lt;a href=&quot;https://github.com/carlos-granados&quot;&gt;@ carlos-granados&lt;/a&gt;による寄稿。</target>
        </trans-unit>
        <trans-unit id="8b83ca6f75548f1429229de20a9aeb6fe96b722c" translate="yes" xml:space="preserve">
          <source>There is now an &lt;a href=&quot;configuration&quot;&gt;&lt;code&gt;ignoreTestFiles&lt;/code&gt;&lt;/a&gt; configuration option that accepts an array of &lt;code&gt;glob&lt;/code&gt; patterns. This enables you to ignore extraneous spec files that may be created during a build process. The default pattern is &lt;code&gt;*.hot-update.js&lt;/code&gt; which will ignore dynamically generated webpack hot module swapping files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/159&quot;&gt;#159&lt;/a&gt;.</source>
          <target state="translated">現在、 &lt;code&gt;glob&lt;/code&gt; パターンの配列を受け入れる&lt;a href=&quot;configuration&quot;&gt; &lt;code&gt;ignoreTestFiles&lt;/code&gt; &lt;/a&gt;構成オプションがあります。これにより、ビルドプロセス中に作成される可能性のある無関係なスペックファイルを無視できます。デフォルトのパターンは &lt;code&gt;*.hot-update.js&lt;/code&gt; で、動的に生成されたwebpackホットモジュールスワッピングファイルを無視します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/159&quot;&gt;＃159を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a99195291987f66dbf8c3f3569ecafb008dcf9e5" translate="yes" xml:space="preserve">
          <source>There is now an &lt;code&gt;example_spec.js&lt;/code&gt; file that is scaffolded on new projects. This allows new users to instantly see Cypress successfully running on an example project and will answer many questions on writing your first tests. This &lt;code&gt;example_spec.js&lt;/code&gt; file contains every single Cypress command and has approximately 70 tests.</source>
          <target state="translated">これで、新しいプロジェクトの足場となる &lt;code&gt;example_spec.js&lt;/code&gt; ファイルができました。これにより、新しいユーザーはサンプルプロジェクトでサイプレスが正常に実行されていることを即座に確認でき、最初のテストの作成に関する多くの質問に答えます。この &lt;code&gt;example_spec.js&lt;/code&gt; ファイルには、すべてのサイプレスコマンドが含まれ、約70のテストがあります。</target>
        </trans-unit>
        <trans-unit id="031d431a1eb00c36efe82a7c28512d172ecf63ac" translate="yes" xml:space="preserve">
          <source>There was a bug when checking / unchecking &lt;code&gt;:checkbox&lt;/code&gt; where it did not properly receive focus.</source>
          <target state="translated">&lt;code&gt;:checkbox&lt;/code&gt; をチェック/チェック解除するときにバグがあり、フォーカスが適切に受信されませんでした。</target>
        </trans-unit>
        <trans-unit id="a9e92b0b59182c86132b2dd07a89e0f5a3605c11" translate="yes" xml:space="preserve">
          <source>There was no performance penalty splitting up multiple tests because they run really fast</source>
          <target state="translated">複数のテストを分割しても、実行速度が速いため、パフォーマンス上のペナルティはありませんでした。</target>
        </trans-unit>
        <trans-unit id="c34832326aef46eb63697ba55a2cd1f3899baa6c" translate="yes" xml:space="preserve">
          <source>There will never be support for &lt;a href=&quot;#Multiple-tabs&quot;&gt;multiple browser tabs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Multiple-tabs&quot;&gt;複数のブラウザタブは&lt;/a&gt;サポートされません。</target>
        </trans-unit>
        <trans-unit id="18a6526be1610a630eea6faeec2d18843eba2750" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a new &amp;lsquo;canceled&amp;rsquo; XHR status shown on the Command Log to indicate the difference between calling &lt;code&gt;xhr.abort()&lt;/code&gt; and the browser canceling the request due to page navigation. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3973&quot;&gt;#3973&lt;/a&gt;.</source>
          <target state="translated">コマンドログに新しい「キャンセルされた」XHRステータスが表示され、 &lt;code&gt;xhr.abort()&lt;/code&gt; の呼び出しと、ページナビゲーションのためにリクエストをキャンセルするブラウザーとの違いが示されます。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3973&quot;&gt;＃3973&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecc8bbb3c2b7a877c0207765fdec3d2b56839b06" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a new warning when mouse interactions fail displaying that it failed due to the element having CSS &lt;code&gt;pointer-events: none&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3164&quot;&gt;#3164&lt;/a&gt;.</source>
          <target state="translated">要素のCSS &lt;code&gt;pointer-events: none&lt;/code&gt; があるために失敗したことを示すマウス操作が失敗すると、新しい警告が表示されます：なし。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3164&quot;&gt;＃3164&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9060e00ab79a3906c7c6bc48a22ab6f0c6b6395" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s an &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/205&quot;&gt;open discussion&lt;/a&gt; about this behavior.</source>
          <target state="translated">この動作については&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/205&quot;&gt;オープンな議論&lt;/a&gt;があります。</target>
        </trans-unit>
        <trans-unit id="fe5170237743e929b01a3f5de39d11c73b643c24" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s no reason to add this level of complexity when you&amp;rsquo;re only wrapping a couple commands.</source>
          <target state="translated">いくつかのコマンドをラップするだけの場合は、このレベルの複雑さを追加する理由はありません。</target>
        </trans-unit>
        <trans-unit id="18735493b2590b0d17f1fc15d89f5fca60430728" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s now a proper &amp;ldquo;empty view&amp;rdquo; when you go to setup your project to record on our Dashboard and you have not created any Organizations. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1306&quot;&gt;#1306&lt;/a&gt;.</source>
          <target state="translated">ダッシュボードに記録するためにプロジェクトをセットアップするときに、適切な「空のビュー」があり、組織を作成していません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1306&quot;&gt;＃1306を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4f7484ee1a39bf81b8695c10efcae8524d0b44cb" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s now an &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;&lt;code&gt;after:screenshot&lt;/code&gt; plugin event&lt;/a&gt; you can use in your &lt;code&gt;pluginsFile&lt;/code&gt; to work with screenshots after they are taken. This enables you to rename them, move their location, resize them, send them to a service, etc. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2039&quot;&gt;#2039&lt;/a&gt;.</source>
          <target state="translated">今あります&lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt; &lt;code&gt;after:screenshot&lt;/code&gt; イベントプラグイン&lt;/a&gt;あなたに使用できる &lt;code&gt;pluginsFile&lt;/code&gt; それらが取られた後のスクリーンショットで動作するように。これにより、名前の変更、場所の移動、サイズの変更、サービスへの送信などが可能になります。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2039&quot;&gt;＃2039&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="397710a06288d53d07c3614c5133df2eef06b538" translate="yes" xml:space="preserve">
          <source>Therefore it&amp;rsquo;s often much more efficient to test the blur behavior directly with &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="translated">したがって、 &lt;code&gt;.blur()&lt;/code&gt; を使用してブラーの動作を直接テストする方がはるかに効率的です。</target>
        </trans-unit>
        <trans-unit id="7214495cbcc91eebe33a6442febcf1a56b9f0eef" translate="yes" xml:space="preserve">
          <source>Therefore it&amp;rsquo;s oftentimes much easier and simpler to test the blur behavior directly with &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="translated">したがって、多くの場合、 &lt;code&gt;.blur()&lt;/code&gt; を使用してぼかしの動作を直接テストする方がはるかに簡単で簡単です。</target>
        </trans-unit>
        <trans-unit id="fc5e5447eb3b4803d9fc6039f9cde3ac326cd017" translate="yes" xml:space="preserve">
          <source>Therefore what you do on one site could not possibly affect another.</source>
          <target state="translated">そのため、あるサイトでやっていることは、他のサイトに影響を与えることはできません。</target>
        </trans-unit>
        <trans-unit id="85f6fdb916332f8ec1dc5dfa8588b7bda489bf11" translate="yes" xml:space="preserve">
          <source>These actions will always happen serially (one after the other), never in parallel (at the same time). Why?</source>
          <target state="translated">これらの行為は、常に連続的に(次から次へと)起こるものであり、決して平行して起こるものではありません(同時に)。なぜでしょうか?</target>
        </trans-unit>
        <trans-unit id="28743c5ca6bfcc7515dfeba2957983dc47734790" translate="yes" xml:space="preserve">
          <source>These are helpful to set conditions that you want to run before a set of tests or before each test. They&amp;rsquo;re also helpful to clean up conditions after a set of tests or after each test.</source>
          <target state="translated">これらは、一連のテストの前または各テストの前に実行する条件を設定するのに役立ちます。また、一連のテスト後または各テスト後に状態をクリーンアップするのにも役立ちます。</target>
        </trans-unit>
        <trans-unit id="45674c33ac9f89ac283ff637d8946d43e4731d26" translate="yes" xml:space="preserve">
          <source>These are just simple examples. Remember - you have the full power of Node at your disposal.</source>
          <target state="translated">これらは単純な例に過ぎません。覚えておいてください-あなたは自由にNodeのフルパワーを持っています。</target>
        </trans-unit>
        <trans-unit id="eb65f75ddd6fd4c1ccef4ce326b6f6c85b9af13c" translate="yes" xml:space="preserve">
          <source>These assertions are available for TDD assertions (&lt;code&gt;assert&lt;/code&gt;). You can see the entire list of available Chai assertions &lt;a href=&quot;http://chaijs.com/api/assert/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">これらのアサーションは、TDDアサーション（ &lt;code&gt;assert&lt;/code&gt; ）で使用できます。利用可能なChaiアサーションの全リストは&lt;a href=&quot;http://chaijs.com/api/assert/&quot;&gt;こちら&lt;/a&gt;で確認できます。</target>
        </trans-unit>
        <trans-unit id="4953b3893626062263f824a1960bd2a77b100e7a" translate="yes" xml:space="preserve">
          <source>These binary names should work for most Linux distributions. If your distribution packages browsers under a different binary name, you can add a symlink using the expected binary name so that Cypress can detect it.</source>
          <target state="translated">これらのバイナリ名は、ほとんどの Linux ディストリビューションで動作するはずです。ディストリビューションが異なるバイナリ名でブラウザをパッケージ化している場合、Cypress が検出できるように、期待されるバイナリ名を使ってシンボリックリンクを追加することができます。</target>
        </trans-unit>
        <trans-unit id="4a1196bf431f1cfe6164bd4d103522bb3a9b52e7" translate="yes" xml:space="preserve">
          <source>These chainers are available for BDD assertions (&lt;code&gt;expect&lt;/code&gt;/&lt;code&gt;should&lt;/code&gt;). Aliases listed can be used interchangeably with their original chainer. You can see the entire list of available BDD Chai assertions &lt;a href=&quot;http://chaijs.com/api/bdd/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">これらのchainersは（BDDアサーションのために利用可能な &lt;code&gt;expect&lt;/code&gt; / &lt;code&gt;should&lt;/code&gt; ）。リストされているエイリアスは、元のチェーンと互換的に使用できます。利用可能なBDD Chaiアサーションの完全なリストは、&lt;a href=&quot;http://chaijs.com/api/bdd/&quot;&gt;こちら&lt;/a&gt;で確認できます。</target>
        </trans-unit>
        <trans-unit id="0195e7b826291e8c9d2e6c2760f471b63c7092b4" translate="yes" xml:space="preserve">
          <source>These chainers are available when asserting about a DOM object.</source>
          <target state="translated">これらのチェーナは、DOM オブジェクトについてアサートする際に利用できます。</target>
        </trans-unit>
        <trans-unit id="68422c27f1633a2980af5c4c02cb2fc4a047c124" translate="yes" xml:space="preserve">
          <source>These chainers are used on assertions with &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのチェーンは&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; を&lt;/a&gt;使用したアサーションで使用されます。</target>
        </trans-unit>
        <trans-unit id="20515bec0d95724a47bc745c03c73fa522fbb5ff" translate="yes" xml:space="preserve">
          <source>These commands are useful when writing both &lt;strong&gt;unit tests&lt;/strong&gt; and &lt;strong&gt;integration tests&lt;/strong&gt;.</source>
          <target state="translated">これらのコマンドは、&lt;strong&gt;単体テスト&lt;/strong&gt;と&lt;strong&gt;統合テストの&lt;/strong&gt;両方を作成するときに役立ち&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="1cfb20200e9dc3b22d4476cb1bb20d5b8ced0ba3" translate="yes" xml:space="preserve">
          <source>These commands ensure &lt;a href=&quot;interacting-with-elements&quot;&gt;some guarantees&lt;/a&gt; about what the state of the elements should be prior to performing their actions.</source>
          <target state="translated">これらのコマンドは、アクションを実行する前に要素の状態を&lt;a href=&quot;interacting-with-elements&quot;&gt;保証し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="881d844366384bae117147c3598ae8922f86ef5b" translate="yes" xml:space="preserve">
          <source>These commands have their own particular timeout values which are documented in our &lt;a href=&quot;../references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">これらのコマンドには、独自のタイムアウト値があり、&lt;a href=&quot;../references/configuration&quot;&gt;設定に&lt;/a&gt;記載されています。</target>
        </trans-unit>
        <trans-unit id="83633488b1538060384db695faf6778dfd27c136" translate="yes" xml:space="preserve">
          <source>These commands simulate a user interacting with your application. Under the hood, Cypress fires the events a browser would fire thus causing your application&amp;rsquo;s event bindings to fire.</source>
          <target state="translated">これらのコマンドは、アプリケーションと対話するユーザーをシミュレートします。内部的には、サイプレスはブラウザが発生させるイベントを発生させ、アプリケーションのイベントバインディングを発生させます。</target>
        </trans-unit>
        <trans-unit id="52211a23efcbd36ca425b4c7bbb10e85f46d5957" translate="yes" xml:space="preserve">
          <source>These days modern JavaScript applications are highly dynamic and mutable. Their state and the DOM are continuously changing over a period of time.</source>
          <target state="translated">最近の JavaScript アプリケーションは非常に動的で変異可能です。その状態と DOM は、一定期間の間に継続的に変化しています。</target>
        </trans-unit>
        <trans-unit id="609ce6a7c382a53ea655a06896d2ab06c5aff2c2" translate="yes" xml:space="preserve">
          <source>These design patterns ensure we can create &lt;strong&gt;deterministic&lt;/strong&gt;, &lt;strong&gt;repeatable&lt;/strong&gt;, &lt;strong&gt;consistent&lt;/strong&gt; tests that are &lt;strong&gt;flake free&lt;/strong&gt;.</source>
          <target state="translated">これらの設計パターン&lt;strong&gt;により&lt;/strong&gt;、&lt;strong&gt;フレークフリーの&lt;/strong&gt;&lt;strong&gt;確定的&lt;/strong&gt;で&lt;strong&gt;再現性の&lt;/strong&gt;ある&lt;strong&gt;一貫した&lt;/strong&gt;テストを作成できます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="442e0ac562d6a14e9a81ecbfe21544963edd5783" translate="yes" xml:space="preserve">
          <source>These events are useful not only to control your application&amp;rsquo;s behavior, but also for debugging purposes.</source>
          <target state="translated">これらのイベントは、アプリケーションの動作を制御するだけでなく、デバッグにも役立ちます。</target>
        </trans-unit>
        <trans-unit id="b07694fc42f8b832051755f59f4778b9b5c2ff23" translate="yes" xml:space="preserve">
          <source>These events come from Cypress as it issues commands and reacts to their state. These are all useful to listen to for debugging purposes.</source>
          <target state="translated">これらのイベントは、Cypress がコマンドを発行し、その状態に反応するときに発生します。これらはすべて、デバッグ目的で聞くのに便利です。</target>
        </trans-unit>
        <trans-unit id="043a6687e4b1a3f18da73f4c9bfca2d806aa03f1" translate="yes" xml:space="preserve">
          <source>These events come from the application currently under test (your application). These are the most useful events for you to listen to.</source>
          <target state="translated">これらのイベントは、現在テスト中のアプリケーション(あなたのアプリケーション)からのものです。これらのイベントは、あなたが聞くのに最も便利なイベントです。</target>
        </trans-unit>
        <trans-unit id="359374f9c462810b631ecda55c5d66a04f382d01" translate="yes" xml:space="preserve">
          <source>These examples were implemented in &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;.</source>
          <target state="translated">これらの例は、&lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https：//github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;に実装されました。</target>
        </trans-unit>
        <trans-unit id="8d32cf151178383caef9aa8ad927132ef9f35294" translate="yes" xml:space="preserve">
          <source>These flags can only be used when recording to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt;.</source>
          <target state="translated">これらのフラグは、&lt;a href=&quot;../dashboard/introduction&quot;&gt;ダッシュボードサービス&lt;/a&gt;に記録するときにのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="d7e81141ee1393dfcb7b048723fc44e40ef45f80" translate="yes" xml:space="preserve">
          <source>These getters are also available for BDD assertions. They don&amp;rsquo;t actually do anything, but they enable you to write simple, english sentences.</source>
          <target state="translated">これらのゲッターは、BDDアサーションにも使用できます。実際には何もしませんが、簡単な英語の文章を書くことができます。</target>
        </trans-unit>
        <trans-unit id="d327b39b833509ec1e2b285b87bef79067b06fe0" translate="yes" xml:space="preserve">
          <source>These means you can do things like store multiple configuration files and switch between them like:</source>
          <target state="translated">これらは、複数の設定ファイルを保存したり、切り替えたりすることができることを意味します。</target>
        </trans-unit>
        <trans-unit id="fa5357b2c9c52398ef9491e8a83e910435c1ec16" translate="yes" xml:space="preserve">
          <source>These new APIs will work well in both &lt;code&gt;unit&lt;/code&gt; tests and &lt;code&gt;integration&lt;/code&gt; tests.</source>
          <target state="translated">これらの新しいAPIは、両方でうまく動作します &lt;code&gt;unit&lt;/code&gt; テストや &lt;code&gt;integration&lt;/code&gt; テスト。</target>
        </trans-unit>
        <trans-unit id="d28942c040600bc3ed5d1ad0f4c559d04b54555b" translate="yes" xml:space="preserve">
          <source>These patterns are pretty much the same as before:</source>
          <target state="translated">これらのパターンは、かなり前と同じです。</target>
        </trans-unit>
        <trans-unit id="ed3414d62d52af3e5b6b1c3baec988723b167eb7" translate="yes" xml:space="preserve">
          <source>These pre-release builds are platform-specific. Choose the platform that matches your platform; for example if you are on a Mac, click on the commit &amp;ldquo;Testing new darwin x64 &amp;hellip;&amp;rdquo;. This commit has a custom message that shows a special temporary URL of the built binary for Mac OS and the matching npm &lt;code&gt;cypress&lt;/code&gt; package.</source>
          <target state="translated">これらのプレリリースビルドはプラットフォーム固有です。ご使用のプラットフォームに一致するプラットフォームを選択してください。たとえば、Macを使用している場合は、[Testing new darwin x64&amp;hellip;]をクリックします。このコミットには、Mac OS用にビルドされたバイナリの特別な一時URLと対応するnpm &lt;code&gt;cypress&lt;/code&gt; パッケージを示すカスタムメッセージがあります。</target>
        </trans-unit>
        <trans-unit id="a0931e8b6577933aa64d3d15bef574bad710dfe9" translate="yes" xml:space="preserve">
          <source>These rules are pretty intuitive, and most commands give you the flexibility to override or bypass the default ways they can fail, typically by passing a &lt;code&gt;{force: true}&lt;/code&gt; option.</source>
          <target state="translated">これらのルールは非常に直感的であり、ほとんどのコマンドは、通常は &lt;code&gt;{force: true}&lt;/code&gt; オプションを渡すことで、失敗する可能性があるデフォルトの方法をオーバーライドまたはバイパスする柔軟性を提供します。</target>
        </trans-unit>
        <trans-unit id="c94d28aa75cb493037d863adcd2aa5c1fb923810" translate="yes" xml:space="preserve">
          <source>These script patterns are antiquated and deprecated security techniques to prevent clickjacking and framebusting. They are a relic of the past and are no longer necessary in modern browsers. However many sites and applications still implement them.</source>
          <target state="translated">これらのスクリプトパターンは、クリックジャッキングやフレームバスターを防ぐための、時代遅れで非推奨のセキュリティ技術です。これらは過去の遺物であり、現代のブラウザではもはや必要ありません。しかし、多くのサイトやアプリケーションではまだ実装されています。</target>
        </trans-unit>
        <trans-unit id="a6f5e5c1784077e3dd22aeace20664d5f86a292a" translate="yes" xml:space="preserve">
          <source>These string messages will be shown in the Command Log giving each assertion more context.</source>
          <target state="translated">これらの文字列メッセージは、コマンド・ログに表示され、各アサーションのコンテキストを提供します。</target>
        </trans-unit>
        <trans-unit id="137c32ae358ef4e80bd8c0f9d2bfd375c3b8c32d" translate="yes" xml:space="preserve">
          <source>These techniques prevent Cypress from working, and they can be safely removed without altering any of your application&amp;rsquo;s behavior.</source>
          <target state="translated">これらの手法はサイプレスの動作を妨げ、アプリケーションの動作を変更することなく安全に削除できます。</target>
        </trans-unit>
        <trans-unit id="ba8ab5864f9d929861e35ef5cdddeda01c8f1431" translate="yes" xml:space="preserve">
          <source>These two commands work together to control the behavior of your responses within the command&amp;rsquo;s options. &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; enables stubbing, while &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; provides a routing table so Cypress understands which response should go with which request.</source>
          <target state="translated">これら2つのコマンドは連携して、コマンドのオプション内での応答の動作を制御します。&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;はスタブを有効にしますが、&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;はルーティングテーブルを提供するため、サイプレスはどの応答がどのリクエストに対応するかを理解します。</target>
        </trans-unit>
        <trans-unit id="0f8e5a57c4af6b7a9d473a9ea0690cbaf075a71a" translate="yes" xml:space="preserve">
          <source>These various timeouts are defined in the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;Configuration&lt;/a&gt; document.</source>
          <target state="translated">これらのさまざまなタイムアウトは、&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;構成&lt;/a&gt;文書で定義されています。</target>
        </trans-unit>
        <trans-unit id="382ee2e21da5c19509b40972f28f3052b6936f0a" translate="yes" xml:space="preserve">
          <source>They are liable to change at any moment which will break tests.</source>
          <target state="translated">彼らはテストを壊すような瞬間に変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="7a56ac5d0ec9176f5af01c758c59cb008aea8f2f" translate="yes" xml:space="preserve">
          <source>They may detect you are a script and block your access (Google does this).</source>
          <target state="translated">彼らはあなたがスクリプトであることを検出し、あなたのアクセスをブロックする可能性があります(Googleはこれを行います)。</target>
        </trans-unit>
        <trans-unit id="9b893017ae4ab49a916aeb9e55edfb2e2e81b3ca" translate="yes" xml:space="preserve">
          <source>They may do A/B testing which makes it impossible to get consistent results.</source>
          <target state="translated">彼らは、一貫した結果を得ることができないA/Bテストを行うかもしれません。</target>
        </trans-unit>
        <trans-unit id="54f161b1dd790ed2c62a644ac0b51ec37f613527" translate="yes" xml:space="preserve">
          <source>They may have security features enabled which prevent Cypress from working.</source>
          <target state="translated">セキュリティ機能が有効になっている可能性があり、それによってサイプレスが機能しないようになっている可能性があります。</target>
        </trans-unit>
        <trans-unit id="c8166a5ce7e3f579f8602955ae86ac6e886a6270" translate="yes" xml:space="preserve">
          <source>Think of your record key as the key that enables you to &lt;em&gt;write and create&lt;/em&gt; runs. However, it has nothing to do with being able to &lt;em&gt;read or see&lt;/em&gt; runs once they are recorded.</source>
          <target state="translated">レコードキーは、ランの&lt;em&gt;作成と作成&lt;/em&gt;を可能にするキーと考えてください。ただし、実行が記録されると、実行の&lt;em&gt;読み取りまたは表示&lt;/em&gt;ができるようになることとは関係ありません。</target>
        </trans-unit>
        <trans-unit id="cb5d527fd6e86a1fa5b13a95c00fa9a30ee49021" translate="yes" xml:space="preserve">
          <source>Third Party Plugins</source>
          <target state="translated">サードパーティプラグイン</target>
        </trans-unit>
        <trans-unit id="beb22e8ea527b5438942d3117fcb17861927b5ef" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;CLI tool is now published on NPM&lt;/a&gt;, though the documentation still needs to be written.</source>
          <target state="translated">この&lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;CLIツールは現在、NPM&lt;/a&gt;で公開されていますが、ドキュメントを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b3e5b9b025b2c29064f0a9adbd48298a462718a" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;delay is 60 seconds by default&lt;/strong&gt;, but is &lt;a href=&quot;project&quot;&gt;configurable within the Dashboard&lt;/a&gt;.</source>
          <target state="translated">この&lt;strong&gt;遅延はデフォルト&lt;/strong&gt;で&lt;strong&gt;60秒です&lt;/strong&gt;が&lt;a href=&quot;project&quot;&gt;、ダッシュボード内&lt;/a&gt;で構成できます。</target>
        </trans-unit>
        <trans-unit id="62b7158c582db223557ebeec57ef5d313adb2953" translate="yes" xml:space="preserve">
          <source>This GitHub Action for npm enables arbitrary actions with the npm command-line client, including testing with cypress.io and publishing to a registry.</source>
          <target state="translated">この GitHub Action for npm は、cypress.io でのテストやレジストリへの公開など、npm コマンドラインクライアントを使った任意のアクションを可能にします。</target>
        </trans-unit>
        <trans-unit id="f502ab0df6197a9e24c93b25d8862a3da4752490" translate="yes" xml:space="preserve">
          <source>This above example is ideal because now we are resetting the state between each test and ensuring nothing in previous tests leaks into subsequent ones.</source>
          <target state="translated">この例は、各テストの間の状態をリセットして、以前のテストでは何も漏れないようにしているので、理想的です。</target>
        </trans-unit>
        <trans-unit id="8017be0f0fbcd16a8130b36b3cef709434d85acf" translate="yes" xml:space="preserve">
          <source>This above test will pass even if the &lt;code&gt;.active&lt;/code&gt; class is applied to the button asynchronously - or after a indeterminate period of time.</source>
          <target state="translated">この上記のテストは、 &lt;code&gt;.active&lt;/code&gt; クラスがボタンに非同期で適用された場合でも、または不確定な期間が経過した後でも合格します。</target>
        </trans-unit>
        <trans-unit id="8197155d64bb509765e88f2bc29f6dfabe8fd875" translate="yes" xml:space="preserve">
          <source>This allows you to inspect the web application, the DOM, the network, and any storage after each command to make sure everything happens as expected.</source>
          <target state="translated">これにより、ウェブアプリケーション、DOM、ネットワーク、ストレージを各コマンドの後に検査し、すべてが期待通りに行われていることを確認することができます。</target>
        </trans-unit>
        <trans-unit id="29a189af4537a7f46576d2e1073b9b0ce3ceb116" translate="yes" xml:space="preserve">
          <source>This allows you to isolate the problem a little better</source>
          <target state="translated">これにより、問題をもう少しうまく切り分けることができます。</target>
        </trans-unit>
        <trans-unit id="9248a84a17934c3b2e08562ecd3c59b31b003634" translate="yes" xml:space="preserve">
          <source>This allows you to record those details or manipulate the image as needed. You can also return updated details about the image.</source>
          <target state="translated">これにより、それらの詳細を記録したり、必要に応じて画像を操作したりすることができます。また、画像に関する最新の詳細情報を返すこともできます。</target>
        </trans-unit>
        <trans-unit id="006fa58cf505c99b58517df432b0dc5e3fdd2f4d" translate="yes" xml:space="preserve">
          <source>This allows you to record those details, manipulate the image as needed, and return the updated details about the image.</source>
          <target state="translated">これにより、それらの詳細を記録し、必要に応じて画像を操作し、画像に関する更新された詳細を返すことができます。</target>
        </trans-unit>
        <trans-unit id="bfa32b59fca9866e2a6798a8078e8df509bf9e96" translate="yes" xml:space="preserve">
          <source>This also applies to custom assertions such as when passing a callback:</source>
          <target state="translated">これは、コールバックを渡すときなどのカスタムアサーションにも適用されます。</target>
        </trans-unit>
        <trans-unit id="13b599015c16556bcb01f0b0b1af61920c3719eb" translate="yes" xml:space="preserve">
          <source>This also causes the commands to be queued on the wrong test. We will get the error in the next test that Cypress detected it had commands in its command queue.</source>
          <target state="translated">これはまた、間違ったテストでコマンドがキューに入ってしまう原因になります。Cypressがコマンドキューにコマンドがあることを検出した次のテストでエラーが出ます。</target>
        </trans-unit>
        <trans-unit id="c230dabe195bf9d8fb5f3a0be2b16160cde50bef" translate="yes" xml:space="preserve">
          <source>This also helps prevent flake when interacting with your application in tests. You can usually override this behavior with a &lt;code&gt;force&lt;/code&gt; option.</source>
          <target state="translated">これは、テストでアプリケーションとやり取りするときにフレークを防ぐのにも役立ちます。通常、このオプションは &lt;code&gt;force&lt;/code&gt; オプションで上書きできます。</target>
        </trans-unit>
        <trans-unit id="14448f79e0ac836cf66b84d5943d534b44db3bf7" translate="yes" xml:space="preserve">
          <source>This avoids ever needing a second open browser, but still gives you an end-to-end test that provides 100% confidence that the two clients can communicate with each other.</source>
          <target state="translated">これにより、2つ目のブラウザを開く必要はありませんが、2つのクライアントがお互いに通信できるという100%の信頼性を提供するエンドツーエンドのテストを行うことができます。</target>
        </trans-unit>
        <trans-unit id="ffcc27dd8d3d6805806d62fb4df70d8e4b4b2c7e" translate="yes" xml:space="preserve">
          <source>This avoids ever needing to touch the UI of another application.</source>
          <target state="translated">これにより、他のアプリケーションのUIに触れる必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="6e22effe331f1fdf51d1986d8d2bccff5c8400a8" translate="yes" xml:space="preserve">
          <source>This behavior can be turned off by setting &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in the &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt;.</source>
          <target state="translated">この動作は、&lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults（）&lt;/a&gt;で &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定することでオフにできます。</target>
        </trans-unit>
        <trans-unit id="b0566cbd883d43a8c86b451848b07afc8b7f203e" translate="yes" xml:space="preserve">
          <source>This behavior is defined here: &lt;a href=&quot;https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#implicit-submission&quot;&gt;Form Implicit Submission&lt;/a&gt;.</source>
          <target state="translated">この動作はここで定義されています：&lt;a href=&quot;https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#implicit-submission&quot;&gt;フォームの暗黙的な送信&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2116d7396edebf7fccda746381ebe5befffeb66e" translate="yes" xml:space="preserve">
          <source>This behavior is due to the function invocation &lt;code&gt;foo()&lt;/code&gt; and &lt;code&gt;bar()&lt;/code&gt;, which call the functions immediately to return a Promise.</source>
          <target state="translated">この動作は、関数呼び出し &lt;code&gt;foo()&lt;/code&gt; および &lt;code&gt;bar()&lt;/code&gt; によるもので、これらは関数をすぐに呼び出してPromiseを返します。</target>
        </trans-unit>
        <trans-unit id="7d1026fd09572361af21bed1bf4b794694e0898a" translate="yes" xml:space="preserve">
          <source>This callback function can and &lt;em&gt;will&lt;/em&gt; be called multiple times with the same &lt;code&gt;filePath&lt;/code&gt;.</source>
          <target state="translated">このコールバック関数は、とすることができ&lt;em&gt;ます&lt;/em&gt;それを複数回呼び出すこと &lt;code&gt;filePath&lt;/code&gt; に。</target>
        </trans-unit>
        <trans-unit id="2bac7b14e8624933e72c9418239623c0167ec9a4" translate="yes" xml:space="preserve">
          <source>This code below is just for demonstration.</source>
          <target state="translated">以下のコードはデモ用です。</target>
        </trans-unit>
        <trans-unit id="75615113c2d80617aac68b6dd269cb04f5d5ead7" translate="yes" xml:space="preserve">
          <source>This configuration contains all of the values that get passed into the browser for your project.</source>
          <target state="translated">この設定には、プロジェクトのブラウザに渡されるすべての値が含まれています。</target>
        </trans-unit>
        <trans-unit id="371ef096eb0b125d658a2f2ef3a3dd9f8a83043a" translate="yes" xml:space="preserve">
          <source>This delay could be the source of our flaky tests when the application is running on our CI server. Here is how to see the source of the problem. In the Command Log, hover over each command to see which elements Cypress found at each step.</source>
          <target state="translated">この遅延は、アプリケーションが CI サーバ上で実行されているときの欠陥テストの原因になる可能性があります。問題の原因を確認する方法は以下の通りです。コマンドログで、各コマンドにカーソルを合わせて、Cypressが各ステップで見つけた要素を確認してください。</target>
        </trans-unit>
        <trans-unit id="ff1b84f7cc713a7b67c14bf06ec7b03bbab39581" translate="yes" xml:space="preserve">
          <source>This document assumes you have &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;installed Cypress&lt;/a&gt;.</source>
          <target state="translated">このドキュメントは、&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;サイプレス&lt;/a&gt;がインストールされていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="020536ae917c3782dcc90d3dc111ecdfbdb2be36" translate="yes" xml:space="preserve">
          <source>This document is only a reference to every assertion Cypress supports.</source>
          <target state="translated">このドキュメントは、Cypress がサポートするすべてのアサーションへの参照に過ぎません。</target>
        </trans-unit>
        <trans-unit id="c1f0c96a94930859c838edf61cdb01af7f3809ed" translate="yes" xml:space="preserve">
          <source>This does not set a &lt;code&gt;debugger&lt;/code&gt; in your code, unlike &lt;a href=&quot;debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">これは、&lt;a href=&quot;debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt;とは異なり、コードに &lt;code&gt;debugger&lt;/code&gt; を設定しません</target>
        </trans-unit>
        <trans-unit id="9779d44142da4b1a1220ae52daf2de6e6e2862c9" translate="yes" xml:space="preserve">
          <source>This element must be an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with type &lt;code&gt;checkbox&lt;/code&gt; or &lt;code&gt;radio&lt;/code&gt;.</source>
          <target state="translated">この要素は、 &lt;code&gt;checkbox&lt;/code&gt; または &lt;code&gt;radio&lt;/code&gt; タイプの &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="6bc94d74173cda2d4b50e8be921b70e7926d0532" translate="yes" xml:space="preserve">
          <source>This element must currently be in focus. If you want to ensure an element is focused before blurring, try using &lt;a href=&quot;focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; before &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="translated">この要素は現在フォーカスされている必要があります。あなたは要素がぼかしの前に集中していることを確認したい場合は、使用してみてください&lt;a href=&quot;focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt;の前に &lt;code&gt;.blur()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b784395f09c8450da725aae7e805800788376c23" translate="yes" xml:space="preserve">
          <source>This enables you to &lt;strong&gt;write faster&lt;/strong&gt;, &lt;strong&gt;easier&lt;/strong&gt; and &lt;strong&gt;more reliable&lt;/strong&gt; tests.</source>
          <target state="translated">これにより、&lt;strong&gt;より&lt;/strong&gt;&lt;strong&gt;速く&lt;/strong&gt;、&lt;strong&gt;簡単&lt;/strong&gt;で&lt;strong&gt;信頼性の高い&lt;/strong&gt;テストを&lt;strong&gt;作成&lt;/strong&gt;できます。</target>
        </trans-unit>
        <trans-unit id="58a48b9c86e75737932d798f1146f66f67bd81bb" translate="yes" xml:space="preserve">
          <source>This enables you to do things like:</source>
          <target state="translated">などが可能になります。</target>
        </trans-unit>
        <trans-unit id="186a2861b069094eadc51cc83089bd154ae1d05e" translate="yes" xml:space="preserve">
          <source>This enables you to install Cypress in a top level &lt;code&gt;node_modules&lt;/code&gt; folder but run Cypress in a nested folder. This is also helpful when you have multiple Cypress projects in your repo.</source>
          <target state="translated">これにより、最上位の &lt;code&gt;node_modules&lt;/code&gt; フォルダーにサイプレスをインストールできますが、ネストされたフォルダーでサイプレスを実行できます。これは、リポジトリに複数のサイプレスプロジェクトがある場合にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="f3bcbd7c053354fdbf03492caa4697d8426f5606" translate="yes" xml:space="preserve">
          <source>This enables you to iterate on plugin code even with Cypress already running.</source>
          <target state="translated">これにより、Cypressが既に起動している状態でもプラグインコードの反復処理を行うことができます。</target>
        </trans-unit>
        <trans-unit id="89af8029028e4bfa24db3c32e987386c12cf4276" translate="yes" xml:space="preserve">
          <source>This enables you to test how your application reacts to accepted confirmations and rejected confirmations.</source>
          <target state="translated">これにより、承認された確認と拒否された確認に対してアプリケーションがどのように反応するかをテストすることができます。</target>
        </trans-unit>
        <trans-unit id="b5e605a365181abbfcfd3afe52eb12cc5e615006" translate="yes" xml:space="preserve">
          <source>This error likely appeared because:</source>
          <target state="translated">このエラーが発生したのは、おそらく以下の理由によるものと思われます。</target>
        </trans-unit>
        <trans-unit id="17994ab2d722939bcc1783a1da860dccd8bed388" translate="yes" xml:space="preserve">
          <source>This error means that your application navigated to a superdomain that Cypress was not bound to. Initially when you &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, Cypress changes the browser&amp;rsquo;s URL to match the &lt;code&gt;url&lt;/code&gt; passed to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. This enables Cypress to communicate with your application to bypasses all same-origin security policies among other things.</source>
          <target state="translated">このエラーは、サイプレスがバインドされていないスーパードメインにアプリケーションが移動したことを意味します。当初ときに&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;、サイプレスが一致するには、ブラウザのURLを変更し &lt;code&gt;url&lt;/code&gt; に渡される&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;。これにより、サイプレスはアプリケーションと通信して、特に同一生成元のセキュリティポリシーをすべてバイパスすることができます。</target>
        </trans-unit>
        <trans-unit id="925d43e1578a638a7a410d2181de40bc9404a475" translate="yes" xml:space="preserve">
          <source>This error occurs in CI when using &lt;code&gt;cypress run&lt;/code&gt; without a valid Cypress binary cache installed on the system (on linux that&amp;rsquo;s &lt;code&gt;~/.cache/Cypress&lt;/code&gt;).</source>
          <target state="translated">このエラーは、有効なサイプレスバイナリキャッシュがシステムにインストールされていない状態で &lt;code&gt;cypress run&lt;/code&gt; を使用すると、CIで発生します（Linuxでは &lt;code&gt;~/.cache/Cypress&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="994ed8888854f2fd39138521dca1154fcc2e6426" translate="yes" xml:space="preserve">
          <source>This event will yield you the &lt;code&gt;browser&lt;/code&gt; as an object, and &lt;code&gt;args&lt;/code&gt; which are the default arguments used to launch the browser.</source>
          <target state="translated">このイベントにより、 &lt;code&gt;browser&lt;/code&gt; がオブジェクトとして生成され、 &lt;code&gt;args&lt;/code&gt; がブラウザの起動に使用されるデフォルトの引数になります。</target>
        </trans-unit>
        <trans-unit id="8da72b14e09b80684c53759305f0abe88f30ec34" translate="yes" xml:space="preserve">
          <source>This event will yield you the &lt;code&gt;browser&lt;/code&gt; object, which gives you information about the browser, and the &lt;code&gt;launchOptions&lt;/code&gt; object, which allows you to modify how the browser is launched.</source>
          <target state="translated">このイベントにより、 &lt;code&gt;browser&lt;/code&gt; に関する情報を提供するブラウザーオブジェクトと、ブラウザーの起動方法を変更できる &lt;code&gt;launchOptions&lt;/code&gt; オブジェクトが生成されます。</target>
        </trans-unit>
        <trans-unit id="75ec60c1bbc3a89890c61d440fd22825efc368e0" translate="yes" xml:space="preserve">
          <source>This example below will only override &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;clearTimeout&lt;/code&gt; and leave the other time-related functions as they are.</source>
          <target state="translated">以下のこの例では、 &lt;code&gt;setTimeout&lt;/code&gt; と &lt;code&gt;clearTimeout&lt;/code&gt; のみをオーバーライドし、その他の時間関連関数はそのままにします。</target>
        </trans-unit>
        <trans-unit id="574a0ccd310c4f2791c6bc19528a452ac997edfb" translate="yes" xml:space="preserve">
          <source>This example comes from the recipe &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#testing-the-dom&quot;&gt;Root style&lt;/a&gt;. Imagine an application code where the method &lt;code&gt;setProperty&lt;/code&gt; is called to change a CSS variable:</source>
          <target state="translated">この例は、レシピ&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#testing-the-dom&quot;&gt;ルートスタイル&lt;/a&gt;からのものです。CSS変数を変更するためにメソッド &lt;code&gt;setProperty&lt;/code&gt; が呼び出されるアプリケーションコードを想像してみてください。</target>
        </trans-unit>
        <trans-unit id="a3797bf9144c86e8afbc5c97d4ced710dd36795e" translate="yes" xml:space="preserve">
          <source>This example is shown in the branch &lt;code&gt;spec-and-single-mochawesome-json&lt;/code&gt; in &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;. We want to output a &amp;ldquo;spec&amp;rdquo; report to &lt;code&gt;STDOUT&lt;/code&gt;, save an individual Mochawesome JSON file per test file, and then combine all JSON reports into a single report.</source>
          <target state="translated">この例は、&lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https：&lt;/a&gt; &lt;code&gt;spec-and-single-mochawesome-json&lt;/code&gt; ブランチに示されています。「スペック」レポートを &lt;code&gt;STDOUT&lt;/code&gt; に出力し、テストファイルごとに個別のMochawesome JSONファイルを保存して、すべてのJSONレポートを1つのレポートに結合します。</target>
        </trans-unit>
        <trans-unit id="80bfd23661913e232e1a163192ec31dab8b9b283" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;a href=&quot;../commands/contains&quot;&gt;&lt;code&gt;.contains()&lt;/code&gt;&lt;/a&gt; to always have the &lt;code&gt;matchCase&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この例では、&lt;a href=&quot;../commands/contains&quot;&gt; &lt;code&gt;.contains()&lt;/code&gt; &lt;/a&gt;を上書きして、 &lt;code&gt;matchCase&lt;/code&gt; オプションを常に &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="43e32c08a83188fd47e1f2906151fdee8dbb29bc" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to always wait until a certain element is visible.</source>
          <target state="translated">この例では、&lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;を上書きして、特定の要素が表示されるまで常に待機します。</target>
        </trans-unit>
        <trans-unit id="36289e0b721daa2e30700a485da483d10e11f60b" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;code&gt;screenshot&lt;/code&gt; to always wait until a certain element is visible.</source>
          <target state="translated">この例では、 &lt;code&gt;screenshot&lt;/code&gt; を上書きして、特定の要素が表示されるまで常に待機します。</target>
        </trans-unit>
        <trans-unit id="84b75cfc84db6a7cb9f50830b12a942ddc2e841b" translate="yes" xml:space="preserve">
          <source>This first custom command is really just wrapping &lt;code&gt;cy.get(selector).click()&lt;/code&gt;. Going down this route would lead to creating dozens or even hundreds of custom commands to cover every possible combination of element interactions. It&amp;rsquo;s completely unnecessary.</source>
          <target state="translated">この最初のカスタムコマンドは、実際には &lt;code&gt;cy.get(selector).click()&lt;/code&gt; をラップするだけです。このルートをたどると、要素の相互作用の可能なすべての組み合わせをカバーするために、数十または数百のカスタムコマンドが作成されます。それは完全に不要です。</target>
        </trans-unit>
        <trans-unit id="450bcc1e13c871a286e1c1ffe73e202b86f8a1f0" translate="yes" xml:space="preserve">
          <source>This first custom command is wrapping &lt;code&gt;cy.get(selector).click()&lt;/code&gt;. Going down this route would lead to creating dozens or even hundreds of custom commands to cover every possible combination of element interactions. It&amp;rsquo;s completely unnecessary.</source>
          <target state="translated">この最初のカスタムコマンドは、 &lt;code&gt;cy.get(selector).click()&lt;/code&gt; をラップしています。このルートをたどると、要素の相互作用のすべての可能な組み合わせをカバーするために、数十または数百ものカスタムコマンドが作成されます。それは完全に不要です。</target>
        </trans-unit>
        <trans-unit id="66709d66883cc344e666a243e5c265282a2f66a3" translate="yes" xml:space="preserve">
          <source>This first test below will pass and shows you that Cypress tries to prevent leaving commands behind in the queue in every test.</source>
          <target state="translated">以下の最初のテストは合格し、Cypress がすべてのテストでキューにコマンドを残さないようにしようとしていることを示しています。</target>
        </trans-unit>
        <trans-unit id="5384797d7b8aa061a7fe215e3014a87afd4afe7f" translate="yes" xml:space="preserve">
          <source>This following section utilizes a concept known as &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Aliasing&lt;/a&gt;. If you&amp;rsquo;re new to Cypress you might want to check that out first.</source>
          <target state="translated">この次のセクションでは、&lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;エイリアスと&lt;/a&gt;呼ばれる概念を利用します。サイプレスを初めて使用する場合は、まずそれを確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="cdf7aa1fdc9f5ad8166591e7a53d3e050c7b15d3" translate="yes" xml:space="preserve">
          <source>This gives you the best of both worlds - a fast error feedback loop when requests never go out and a much longer duration for the actual external response.</source>
          <target state="translated">これにより、リクエストが出ないときの高速なエラーフィードバックループと、実際の外部応答のためのはるかに長い持続時間という、両方の世界で最高のものを得ることができます。</target>
        </trans-unit>
        <trans-unit id="8e984abbd486f40e4b83a59f61e6a6bb728ea6e9" translate="yes" xml:space="preserve">
          <source>This gives you the option to do things like override the &lt;code&gt;baseUrl&lt;/code&gt; or environment variables.</source>
          <target state="translated">これにより、 &lt;code&gt;baseUrl&lt;/code&gt; または環境変数をオーバーライドするなどのオプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="7de14dd549d0c4ac1646e9e757ca22fee0f2cb69" translate="yes" xml:space="preserve">
          <source>This guide assumes you already have your project running and &lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;recording&lt;/a&gt; within Continuous Integration. If you have not set up your project yet, check out our &lt;a href=&quot;continuous-integration&quot;&gt;Continuous Integration guide&lt;/a&gt;.</source>
          <target state="translated">このガイドは、継続的インテグレーション内でプロジェクトがすでに実行および&lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;記録さ&lt;/a&gt;れていることを前提としています。プロジェクトをまだ設定していない場合は、&lt;a href=&quot;continuous-integration&quot;&gt;継続的インテグレーションガイドをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5db417ee2d08131fe1bd60293e19a7173370710" translate="yes" xml:space="preserve">
          <source>This guide assumes you&amp;rsquo;ve already read our &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Installing Cypress&lt;/a&gt; guide and installed Cypress as an &lt;code&gt;npm&lt;/code&gt; module. After installing you&amp;rsquo;ll be able to execute all of the commands in this document from your &lt;strong&gt;project root&lt;/strong&gt;.</source>
          <target state="translated">このガイドは、&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;サイプレスのインストール&lt;/a&gt;ガイドを既に読んでおり、サイプレスを &lt;code&gt;npm&lt;/code&gt; モジュールとしてインストール済みであることを前提としています。インストールすると、&lt;strong&gt;プロジェクトのルート&lt;/strong&gt;からこのドキュメントのすべてのコマンドを実行できるようになります。</target>
        </trans-unit>
        <trans-unit id="23ffdb834bcafffe7ee8957ab3cc85d02ae67258" translate="yes" xml:space="preserve">
          <source>This guide explains how to find what parts of your application code are covered by Cypress tests so you can have 100% confidence that your tests aren&amp;rsquo;t missing cruicial parts of your application. The collected information can be sent to external services, automatically run during pull request reviews, and integrated into CI.</source>
          <target state="translated">このガイドでは、サイプレステストでカバーされているアプリケーションコードの部分を見つける方法について説明します。これにより、テストでアプリケーションの重要な部分が欠落していないことを100％確信できます。収集された情報は、外部サービスに送信され、プルリクエストのレビュー中に自動的に実行され、CIに統合されます。</target>
        </trans-unit>
        <trans-unit id="486a389d6fb9cfc3cfed4c651f0e33830dc83379" translate="yes" xml:space="preserve">
          <source>This guide explains how to instrument the application source code using common tools. Then we show how to save the coverage information and generate reports using the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; Cypress plugin. After reading this guide you should be able to better target your tests using the code coverage information.</source>
          <target state="translated">このガイドでは、一般的なツールを使用してアプリケーションのソースコードを計測する方法について説明します。次に、&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt; Cypressプラグインを使用して、カバレッジ情報を保存し、レポートを生成する方法を示します。このガイドを読んだ後は、コードカバレッジ情報を使用して、テストをより的確にターゲットにできるはずです。</target>
        </trans-unit>
        <trans-unit id="7e61a970aa8707e6efff0947eea6f0b515f8b79a" translate="yes" xml:space="preserve">
          <source>This guide explores many common patterns for writing good Cypress code that can handle even the most complex situations.</source>
          <target state="translated">このガイドでは、最も複雑な状況にも対応できる優れた Cypress コードを書くための多くの一般的なパターンを探ります。</target>
        </trans-unit>
        <trans-unit id="8d863ff08437a4477f1f2d5887b49d9f900c8112" translate="yes" xml:space="preserve">
          <source>This helps us uniquely identify your project. If you manually alter this, &lt;strong&gt;Cypress will no longer be able to identify your project or find the recorded builds for it&lt;/strong&gt;.</source>
          <target state="translated">これにより、プロジェクトを一意に識別できます。これを手動で変更すると、&lt;strong&gt;サイプレスはプロジェクトを識別できなくなり、そのために記録されたビルドを見つけることができなくなります&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d3898e06d0b65989b6f12ff084eb3a12f8a3f6e0" translate="yes" xml:space="preserve">
          <source>This holds true for other special key combinations as well (that may be OS-specific). For example, on OSX, typing &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; creates the special character &lt;code&gt;&lt;/code&gt;. Like with capitalization, &lt;code&gt;.type()&lt;/code&gt; will not output &lt;code&gt;&lt;/code&gt;, but the letter &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">これは、他の特別なキーの組み合わせ（OS固有の場合もあります）にも当てはまります。たとえば、OSXでは、 &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; と入力すると、特殊文字 &lt;code&gt;&lt;/code&gt; が作成されます。大文字と小文字の区別と同様に、 &lt;code&gt;.type()&lt;/code&gt; は &lt;code&gt;&lt;/code&gt; を出力しませんが、文字 &lt;code&gt;k&lt;/code&gt; を出力します。</target>
        </trans-unit>
        <trans-unit id="d0131967fa7bae19e8e35274e046a4d4497764e8" translate="yes" xml:space="preserve">
          <source>This holds true for other special key combinations as well (that may be OS-specific). For example, on OSX, typing &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; creates the special character &lt;code&gt;&lt;/code&gt;. Like with capitalization, &lt;code&gt;.type()&lt;/code&gt; will not output &lt;code&gt;&lt;/code&gt;, but the letter &lt;code&gt;k&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need modifier effects to be implemented.</source>
          <target state="translated">これは、他の特別なキーの組み合わせ（OS固有の場合もある）にも当てはまります。たとえば、OSXでは、 &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; と入力すると、特殊文字 &lt;code&gt;&lt;/code&gt; が作成されます。時価総額と同様に、 &lt;code&gt;.type()&lt;/code&gt; を出力しません &lt;code&gt;&lt;/code&gt; が、文字 &lt;code&gt;k&lt;/code&gt; 。モディファイア効果を実装する必要がある場合は&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;、問題を開き&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="51b8d6d387613f057f58e9e27bfeb31b7ff6168f" translate="yes" xml:space="preserve">
          <source>This is a great way to &lt;em&gt;synchronously&lt;/em&gt; query for elements when debugging from Developer Tools.</source>
          <target state="translated">これは、開発者ツールからデバッグするときに、要素を&lt;em&gt;同期的に&lt;/em&gt;クエリするための優れた方法です。</target>
        </trans-unit>
        <trans-unit id="362d62d5a45488560fa7b7f004366ae919b1423d" translate="yes" xml:space="preserve">
          <source>This is a less complicated example. Remember - you have the full power of Node at your disposal.</source>
          <target state="translated">これはそれほど複雑ではない例です。覚えておいてください-あなたは自由にNodeのフルパワーを持っています。</target>
        </trans-unit>
        <trans-unit id="1b3b0521e3b98570ccae50fdf1b4baa4f16afd72" translate="yes" xml:space="preserve">
          <source>This is a relatively simple, straightforward test, but consider how much code has been covered by it, both on the client and the server!</source>
          <target state="translated">比較的シンプルでわかりやすいテストですが、クライアント側とサーバー側の両方で、どれだけのコードがカバーされているかを考えてみましょう!</target>
        </trans-unit>
        <trans-unit id="fe468e21d4548acdb1c6534bd40ad0d47b37fae5" translate="yes" xml:space="preserve">
          <source>This is actually much more intuitive than it sounds.</source>
          <target state="translated">これは実際には音よりもはるかに直感的です。</target>
        </trans-unit>
        <trans-unit id="1b50dfd2552d2381eb213119a8c24ed08a84b281" translate="yes" xml:space="preserve">
          <source>This is also a great opportunity to use &lt;a href=&quot;https://github.com/mochajs/mochajs.github.io/blob/master/index.md#root-level-hooks&quot;&gt;root level hooks in mocha&lt;/a&gt;. A perfect place to put these is in the &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Support-file&quot;&gt;&lt;code&gt;cypress/support/index.js&lt;/code&gt; file&lt;/a&gt; because it is always evaluated before any test code from your spec files.</source>
          <target state="translated">これは&lt;a href=&quot;https://github.com/mochajs/mochajs.github.io/blob/master/index.md#root-level-hooks&quot;&gt;、モカでルートレベルのフック&lt;/a&gt;を使用する絶好の機会でもあります。これらを配置するのに最適な場所は、&lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Support-file&quot;&gt; &lt;code&gt;cypress/support/index.js&lt;/code&gt; ファイルです&lt;/a&gt;。これは、スペックファイルのテストコードの前に常に評価されるためです。</target>
        </trans-unit>
        <trans-unit id="2493b234352cea3152aeec7ecbe290f832cbf4e4" translate="yes" xml:space="preserve">
          <source>This is an &lt;strong&gt;excellent&lt;/strong&gt; opportunity for you to &lt;strong&gt;use&lt;/strong&gt; your application in the state the tests finished! This enables you to write &lt;strong&gt;partial tests&lt;/strong&gt; that drive your application step by step, writing your test and application code at the same time.</source>
          <target state="translated">これは、テストが終了した状態でアプリケーションを&lt;strong&gt;使用&lt;/strong&gt;する&lt;strong&gt;絶好の&lt;/strong&gt;機会です。これにより、アプリケーションを段階&lt;strong&gt;的に&lt;/strong&gt;実行する&lt;strong&gt;部分テスト&lt;/strong&gt;を記述し、テストとアプリケーションコードを同時に記述できます。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73680df5ea2c8602ef7ff481daf3b10324c141d0" translate="yes" xml:space="preserve">
          <source>This is an alias of &lt;a href=&quot;location&quot;&gt;&lt;code&gt;cy.location('hash')&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">これは&lt;a href=&quot;location&quot;&gt; &lt;code&gt;cy.location('hash')&lt;/code&gt; の&lt;/a&gt;エイリアスです</target>
        </trans-unit>
        <trans-unit id="027a8a41afe59d5100370ece415b0888b1dab9c6" translate="yes" xml:space="preserve">
          <source>This is an alias of &lt;a href=&quot;location&quot;&gt;&lt;code&gt;cy.location('href')&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">これは&lt;a href=&quot;location&quot;&gt; &lt;code&gt;cy.location('href')&lt;/code&gt; の&lt;/a&gt;エイリアスです</target>
        </trans-unit>
        <trans-unit id="3090660a8417722f61bd0153ff0a62997ee753bd" translate="yes" xml:space="preserve">
          <source>This is because many commands have a built in &lt;a href=&quot;#Default-Assertions&quot;&gt;Default Assertion&lt;/a&gt; which offer you a high level of guarantee.</source>
          <target state="translated">これは、多くのコマンドに&lt;a href=&quot;#Default-Assertions&quot;&gt;デフォルトのアサーション&lt;/a&gt;が組み込まれており、高レベルの保証が提供されるためです。</target>
        </trans-unit>
        <trans-unit id="416bd3baca145a080a73741b07189669d2f382b6" translate="yes" xml:space="preserve">
          <source>This is difficult to do (if not impossible) without making changes to your application. You could use a library like &lt;a href=&quot;https://github.com/angular/zone.js/&quot;&gt;Zone.js&lt;/a&gt;, but even that does not capture every async possibility.</source>
          <target state="translated">アプリケーションに変更を加えずにこれを行うことは（不可能でないとしても）困難です。&lt;a href=&quot;https://github.com/angular/zone.js/&quot;&gt;Zone.jsの&lt;/a&gt;ようなライブラリを使用することもできますが、それでもすべての非同期の可能性をキャプチャできるわけではありません。</target>
        </trans-unit>
        <trans-unit id="c81c954c2ff8806221c8d9bad49ede745ce35336" translate="yes" xml:space="preserve">
          <source>This is especially useful when running in CI. Typically we see users using the default &lt;code&gt;spec&lt;/code&gt; reporter to show up in &lt;code&gt;stdout&lt;/code&gt; but then also generate an actual report file for &lt;code&gt;junit&lt;/code&gt;.</source>
          <target state="translated">これは、CIで実行する場合に特に便利です。通常、ユーザーはデフォルトの &lt;code&gt;spec&lt;/code&gt; レポーターを使用して &lt;code&gt;stdout&lt;/code&gt; に表示されますが、 &lt;code&gt;junit&lt;/code&gt; の実際のレポートファイルも生成します。</target>
        </trans-unit>
        <trans-unit id="937a71c3b5de9dc4ee2f1f1174e918095025ba20" translate="yes" xml:space="preserve">
          <source>This is helpful to modify, remove, or add your own arguments.</source>
          <target state="translated">これは、自分の引数を修正したり、削除したり、追加したりするのに便利です。</target>
        </trans-unit>
        <trans-unit id="4f480a1f1a006462f1044dbf874aff6ecf664e89" translate="yes" xml:space="preserve">
          <source>This is helpful when writing tests from the perspective of a user interacting with your app. They just know they want to click the button labeled &amp;ldquo;Submit&amp;rdquo;, they have no idea that it has a &lt;code&gt;type&lt;/code&gt; attribute of &lt;code&gt;submit&lt;/code&gt;, or a CSS class of &lt;code&gt;my-submit-button&lt;/code&gt;.</source>
          <target state="translated">これは、アプリを操作するユーザーの観点からテストを作成するときに役立ちます。彼らは「Submit」というラベルの付いたボタンをクリックしたいことを知っているだけで、それが &lt;code&gt;submit&lt;/code&gt; の &lt;code&gt;type&lt;/code&gt; 属性、または &lt;code&gt;my-submit-button&lt;/code&gt; の CSSクラスを持っていることを知りません。</target>
        </trans-unit>
        <trans-unit id="b792e8040301bd0acb2b395f7ea8abde6c91d0e4" translate="yes" xml:space="preserve">
          <source>This is known as a &lt;code&gt;timeout&lt;/code&gt;, and most commands can be customized with specific timeout periods (&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;the default timeout is 4 seconds&lt;/a&gt;). These Commands will list a &lt;code&gt;timeout&lt;/code&gt; option in their API documentation, detailing how to set the number of milliseconds you want to continue to try finding the element.</source>
          <target state="translated">これは &lt;code&gt;timeout&lt;/code&gt; と呼ばれ、ほとんどのコマンドは特定のタイムアウト期間でカスタマイズできます（&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;デフォルトのタイムアウトは4秒です&lt;/a&gt;）。これらのコマンドは、APIドキュメントに &lt;code&gt;timeout&lt;/code&gt; オプションをリストし、要素の検索を続行するミリ秒数を設定する方法を詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="9241cf6c65f3e1ca58164db9dd575dd8751913e6" translate="yes" xml:space="preserve">
          <source>This is probably the hardest situation to test because it&amp;rsquo;s usually happening due to another cause. You will need to figure out why your JavaScript code is redirecting. Perhaps you&amp;rsquo;re not logged in, and you need to handle that setup elsewhere? Perhaps you&amp;rsquo;re using a Single sign-on (SSO) server and you just need to read the previous section about working around that?</source>
          <target state="translated">これは通常、別の原因が原因で発生しているため、おそらくテストが最も難しい状況です。JavaScriptコードがリダイレクトする理由を理解する必要があります。おそらくあなたはログインしておらず、他の場所でその設定を処理する必要がありますか？おそらく、シングルサインオン（SSO）サーバーを使用していて、その回避策について前のセクションを読む必要があるだけでしょうか。</target>
        </trans-unit>
        <trans-unit id="16934bd6f87e620c0972f9bb2d9978c401b12b41" translate="yes" xml:space="preserve">
          <source>This is something Cypress will eventually do, which will match how Chrome&amp;rsquo;s responsive mobile browsing simulation works. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">これはサイプレスが最終的に行うことであり、これはChromeのレスポンシブモバイルブラウジングシミュレーションが機能する方法と一致します。これを修正する必要がある場合は&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;、問題を開き&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a26334daece3d32e2bf8919a447a066e4ae159bc" translate="yes" xml:space="preserve">
          <source>This is something Cypress will eventually do, which will match how Chrome&amp;rsquo;s responsive mobile browsing simulation works. Follow &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/7075&quot;&gt;#7075&lt;/a&gt; if you need this supported.</source>
          <target state="translated">これはサイプレスが最終的に行うことであり、Chromeのレスポンシブモバイルブラウジングシミュレーションの動作と一致します。これをサポートする必要がある場合は、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/7075&quot;&gt;＃7075に&lt;/a&gt;従ってください。</target>
        </trans-unit>
        <trans-unit id="6dcc7f6d030b58ad59ae4203de8bd28466d52447" translate="yes" xml:space="preserve">
          <source>This is the big secret of Cypress: we&amp;rsquo;ve taken our favorite pattern for composing JavaScript code, Promises, and built them right into the fabric of Cypress. Above, when we say we&amp;rsquo;re enqueuing actions to be taken later, we could restate that as &amp;ldquo;adding Promises to a chain of Promises&amp;rdquo;.</source>
          <target state="translated">これがサイプレスの大きな秘密です。JavaScriptコードを作成するためのお気に入りのパターンであるPromisesを採用し、サイプレスのファブリックに組み込みました。上記で、後で実行するアクションを待機していると言うとき、それを「プロミスをチェーンのプロミスに追加する」と言い換えることができます。</target>
        </trans-unit>
        <trans-unit id="3753eacdd29e84d634ea0cb12683093d1ef9dc7e" translate="yes" xml:space="preserve">
          <source>This is the heart of flaky tests. At Cypress we have designed our API to combat this type of flakiness at every step.</source>
          <target state="translated">これがフラキュラーテストの核心です。Cypress では、このようなフラッキネスに対抗するために、あらゆる段階で API を設計しました。</target>
        </trans-unit>
        <trans-unit id="0c5538cc1bd8f312a53608d9587f80a4d91e9323" translate="yes" xml:space="preserve">
          <source>This is the internal API for controlling what get&amp;rsquo;s printed to the Command Log.</source>
          <target state="translated">これは、コマンドログに出力される内容を制御するための内部APIです。</target>
        </trans-unit>
        <trans-unit id="bb71fb0e5b6458a3a3eb3b93c5f85351e8539b15" translate="yes" xml:space="preserve">
          <source>This is the internal API for controlling what gets printed to the Command Log.</source>
          <target state="translated">これは、コマンドログに出力される内容を制御するための内部APIです。</target>
        </trans-unit>
        <trans-unit id="1613df640b73f82e16e95dfa4a713357d7d07a31" translate="yes" xml:space="preserve">
          <source>This is useful against GraphQL endpoints to wait for specific Queries and Mutations.</source>
          <target state="translated">これは、特定のクエリや突然変異を待つための GraphQL エンドポイントに対して便利です。</target>
        </trans-unit>
        <trans-unit id="45ca3bef48f4448ec8509512e12d846cbd196204" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re debugging and just want to add a single &amp;ldquo;catch-all&amp;rdquo; event to track down things like test failures, or uncaught exceptions from your application.</source>
          <target state="translated">これは、デバッグ中に、単一の「キャッチオール」イベントを追加して、テストの失敗やアプリケーションからキャッチされなかった例外などを追跡する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="b188e0d93f1c48f7ac3cdada5298a2a3a0c9d878" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re debugging and want to add a single &amp;ldquo;catch-all&amp;rdquo; event to track down things like test failures, or uncaught exceptions from your application.</source>
          <target state="translated">これは、デバッグ中に単一の「キャッチオール」イベントを追加して、テストの失敗やアプリケーションからのキャッチされなかった例外などを追跡する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e17a8d466ede6a0c1ff320a52b0da9ab959f1373" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re polling a server for a response that may take awhile to complete.</source>
          <target state="translated">これは、完了するまでに時間がかかる可能性のある応答についてサーバーをポーリングする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="ee441496733ae8f12a6ec82934302047c786dd8b" translate="yes" xml:space="preserve">
          <source>This is usually unnecessary because Cypress is already configured to swap out a &lt;code&gt;baseUrl&lt;/code&gt; that both &lt;a href=&quot;../commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; use. Set the &lt;code&gt;baseUrl&lt;/code&gt; configuration property in your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; file (&lt;code&gt;cypress.json&lt;/code&gt; by default) and override it with the &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt; environment variable.</source>
          <target state="translated">サイプレスは、&lt;a href=&quot;../commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; の&lt;/a&gt;両方が使用する &lt;code&gt;baseUrl&lt;/code&gt; をスワップアウトするようにすでに構成されているため、これは通常は不要です。設定し &lt;code&gt;baseUrl&lt;/code&gt; には、あなたの中に構成プロパティを&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;設定&lt;/a&gt;ファイル（ &lt;code&gt;cypress.json&lt;/code&gt; デフォルト）とし、それを上書き &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt; の環境変数。</target>
        </trans-unit>
        <trans-unit id="c81f14f69a0d08483eccd3e2f9835a57c779454a" translate="yes" xml:space="preserve">
          <source>This is usually unnecessary because Cypress is already configured to swap out baseUrl&amp;rsquo;s that both &lt;code&gt;cy.visit()&lt;/code&gt; and &lt;code&gt;cy.request()&lt;/code&gt; use. Just set the &lt;code&gt;baseUrl&lt;/code&gt; config property in &lt;code&gt;cypress.json&lt;/code&gt; and override it with environment variable &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt;.</source>
          <target state="translated">サイプレスは、 &lt;code&gt;cy.visit()&lt;/code&gt; と &lt;code&gt;cy.request()&lt;/code&gt; の両方が使用するbaseUrlを交換するようにすでに構成されているため、これは通常不要です。ただ、設定 &lt;code&gt;baseUrl&lt;/code&gt; にするのconfigプロパティ &lt;code&gt;cypress.json&lt;/code&gt; をして、環境変数で上書き &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7438b0034ef2f49cda2d43dc6868ebe59057e7d" translate="yes" xml:space="preserve">
          <source>This is why all of our examples use the regular &lt;code&gt;function () {}&lt;/code&gt; syntax as opposed to the lambda &amp;ldquo;fat arrow&amp;rdquo; syntax &lt;code&gt;() =&amp;gt; {}&lt;/code&gt;.</source>
          <target state="translated">これが、ラムダの「太い矢印」構文 &lt;code&gt;() =&amp;gt; {}&lt;/code&gt; ではなく、通常の &lt;code&gt;function () {}&lt;/code&gt; 構文を使用する理由です。</target>
        </trans-unit>
        <trans-unit id="e40f1ff06970e07212ca7d1cf8bdc73d20b2d6ad" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a date input, but is a workaround since date input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM-dd&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#dates-and-times&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">これは、ユーザーが日付入力を入力する方法とは異なりますが、日付入力のサポートはブラウザーによって異なり、形式はロケールによって異なるため、回避策です。 &lt;code&gt;yyyy-MM-dd&lt;/code&gt; は、&lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#dates-and-times&quot;&gt;W3仕様で&lt;/a&gt;必要な形式であり、ブラウザーやロケールに関係なく、入力の &lt;code&gt;value&lt;/code&gt; が設定される形式です。</target>
        </trans-unit>
        <trans-unit id="50cafd2a717c2013a8367ce226bec9d3d9b1784c" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a date input, but is a workaround since date input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM-dd&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#sec-dates&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">これは、正確にユーザーが日付入力に入力する方法ではありませんが、日付入力のサポートはブラウザー間で異なり、形式はロケールに基づいて異なるため、回避策です。 &lt;code&gt;yyyy-MM-dd&lt;/code&gt; は&lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#sec-dates&quot;&gt;W3仕様で&lt;/a&gt;必要な形式であり、ブラウザーやロケールに関係なく入力の &lt;code&gt;value&lt;/code&gt; が設定されるものです。</target>
        </trans-unit>
        <trans-unit id="56d6913d4d90022dcb7f14c4fc76dccdbb9f5bdc" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a month input, but is a workaround since month input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#months&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">これは、ユーザーが月の入力に入力する方法とは異なりますが、月の入力のサポートはブラウザー間で異なり、形式はロケールによって異なるため、回避策です。 &lt;code&gt;yyyy-MM&lt;/code&gt; は&lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#months&quot;&gt;W3仕様で&lt;/a&gt;必要な形式であり、ブラウザーやロケールに関係なく入力の &lt;code&gt;value&lt;/code&gt; が設定されるものです。</target>
        </trans-unit>
        <trans-unit id="0c41513fff4a312d05254c97b1ee7ef44e64dbf7" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a week input, but is a workaround since week input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-Www&lt;/code&gt; is the format required by &lt;a href=&quot;https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">これは、ユーザーが週の入力を入力する方法とは異なりますが、週の入力のサポートはブラウザーによって異なり、形式はロケールによって異なるため、回避策です。 &lt;code&gt;yyyy-Www&lt;/code&gt; は、&lt;a href=&quot;https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string&quot;&gt;W3仕様で&lt;/a&gt;必要な形式であり、ブラウザーやロケールに関係なく、入力の &lt;code&gt;value&lt;/code&gt; が設定されます。</target>
        </trans-unit>
        <trans-unit id="bb901bfb0f0a8bc8800561d4444df892e7d03325" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a week input, but is a workaround since week input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-Www&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#valid-week-string&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">これは、ユーザーが1週間の入力に正確に入力する方法とは異なりますが、1週間の入力のサポートはブラウザーによって異なり、形式はロケールによって異なるため、回避策です。 &lt;code&gt;yyyy-Www&lt;/code&gt; は&lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#valid-week-string&quot;&gt;W3仕様で&lt;/a&gt;必要な形式であり、ブラウザーやロケールに関係なく入力の &lt;code&gt;value&lt;/code&gt; が設定される形式です。</target>
        </trans-unit>
        <trans-unit id="2617afa6cdf460caeefc66bad292f940a0fe3c98" translate="yes" xml:space="preserve">
          <source>This lets us reuse our DOM queries for faster tests when the element is still in the DOM, and it automatically handles re-querying the DOM for us when it is not immediately found in the DOM. This is particularly helpful when dealing with front end frameworks that do a lot of re-rendering!</source>
          <target state="translated">これにより、要素がまだ DOM にあるときに DOM クエリを再利用して高速なテストを行うことができ、また、要素がすぐに DOM で見つからないときには自動的に DOM の再クエリを処理してくれます。これは、再レンダリングを多用するフロントエンドフレームワークを扱う際に特に便利です。</target>
        </trans-unit>
        <trans-unit id="c8a4292c1ee5dcfa1ce525c64b1320cb2717c366" translate="yes" xml:space="preserve">
          <source>This limitation exists because Cypress switches to the domain under each specific test when it runs.</source>
          <target state="translated">この制限は、Cypressが実行時に特定のテストごとにドメインを切り替えるために存在します。</target>
        </trans-unit>
        <trans-unit id="a4ab29b9f338e4896f2d56159be7f3ea3b0eb64e" translate="yes" xml:space="preserve">
          <source>This machine is sending different environment parameters than the first machine that started this parallel run.</source>
          <target state="translated">このマシンは、この並列実行を開始した最初のマシンとは異なる環境パラメータを送信しています。</target>
        </trans-unit>
        <trans-unit id="d7287dd7490355f6bbed13566ea5931ebfad1e07" translate="yes" xml:space="preserve">
          <source>This makes Cypress robust and immune to dozens of common problems that occur in other testing tools. Consider all the circumstances that could cause querying a DOM element to fail:</source>
          <target state="translated">これにより、Cypress は堅牢で、他のテストツールで発生する多くの一般的な問題に影響を受けないようになっています。DOM 要素への問い合わせが失敗する原因となるすべての状況を考慮してください。</target>
        </trans-unit>
        <trans-unit id="a3c6624973b93aac7a03e0c0e00944970b402d26" translate="yes" xml:space="preserve">
          <source>This makes for a productive development experience because you can add and edit tests as you&amp;rsquo;re implementing a feature and the Cypress user interface will always reflect the results of your latest edits.</source>
          <target state="translated">これにより、機能を実装しているときにテストを追加および編集でき、サイプレスのユーザーインターフェイスには常に最新の編集結果が反映されるため、生産性の高い開発体験が得られます。</target>
        </trans-unit>
        <trans-unit id="0147dcdb70fd37741942d1f43bef0fcdb3d665dd" translate="yes" xml:space="preserve">
          <source>This may not work exactly as you are expecting. As you may remember from the &lt;a href=&quot;../core-concepts/introduction-to-cypress&quot;&gt;Introduction to Cypress&lt;/a&gt;, &lt;code&gt;cy&lt;/code&gt; commands enqueue an action to be taken later. Can you see what the test above will do given that perspective?</source>
          <target state="translated">これは期待どおりに機能しない場合があります。&lt;a href=&quot;../core-concepts/introduction-to-cypress&quot;&gt;サイプレス&lt;/a&gt;の概要から覚えているかもしれませんが、 &lt;code&gt;cy&lt;/code&gt; コマンドは後で実行するアクションをキューに入れます。その視点で上記のテストが何をするかわかりますか？</target>
        </trans-unit>
        <trans-unit id="062d06e3107076e15ff8f4f923613eb36257a315" translate="yes" xml:space="preserve">
          <source>This means Cypress will now wait up to 20 seconds for the external server to respond to this XHR. If no response is detected, you will get an error message that looks like this:</source>
          <target state="translated">これにより、Cypress は外部サーバーがこの XHR に応答するまで最大 20 秒間待機することになります。応答が検出されない場合、以下のようなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="01c5ed9fb27f63027e813cd9ccd0ac180d96f8f5" translate="yes" xml:space="preserve">
          <source>This means Cypress will now wait up to 20 seconds for the external server to respond to this request. If no response is detected, you will get an error message that looks like this:</source>
          <target state="translated">これにより、Cypress は外部サーバーがこのリクエストに応答するまで最大 20 秒間待機することになります。応答が検出されない場合は、次のようなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="d899e3c172fd29e29ee20eed6c45d53d6586c20f" translate="yes" xml:space="preserve">
          <source>This means that instead of resetting the database, or seeding it with the state we want, you can just force the server to respond with &lt;strong&gt;whatever&lt;/strong&gt; you want it to. In this way, we not only prevent needing to synchronize the state between the server and browser, but we also prevent mutating state from our tests. That means tests won&amp;rsquo;t build up state that may affect other tests.</source>
          <target state="translated">代わりに、データベースのリセット、または私たちが望む状態でそれを播種の、あなただけの応答にサーバーを強制することができ、この手段は、と&lt;strong&gt;何でも&lt;/strong&gt;あなたはそれをしたいです。このようにして、サーバーとブラウザーの間で状態を同期する必要をなくすだけでなく、テストから状態を変更することもできません。つまり、テストは他のテストに影響を与える可能性のある状態を構築しません。</target>
        </trans-unit>
        <trans-unit id="15f552af7b476efada5ccbe19d1e003e55815913" translate="yes" xml:space="preserve">
          <source>This means that when you begin waiting for an aliased XHR, Cypress will wait up to 5 seconds for a matching XHR to be created. If no matching XHR is found, you will get an error message that looks like this:</source>
          <target state="translated">これは、エイリアスされた XHR の待機を開始すると、Cypress は一致する XHR が作成されるまで最大 5 秒間待機することを意味します。一致するXHRが見つからない場合、以下のようなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="4f24977d0e87342872e59e80a5681fe9f5e8cfaf" translate="yes" xml:space="preserve">
          <source>This means that when you begin waiting for an aliased request, Cypress will wait up to 5 seconds for a matching request to be created. If no matching request is found, you will get an error message that looks like this:</source>
          <target state="translated">これは、エイリアスされたリクエストの待機を開始すると、Cypress は一致するリクエストが作成されるまで最大 5 秒間待機することを意味します。マッチするリクエストが見つからない場合は、以下のようなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="c235428eedeb2633f9060e29cabe9344635dec46" translate="yes" xml:space="preserve">
          <source>This means you can do things like store multiple configuration files and switch between them like:</source>
          <target state="translated">これは、複数の設定ファイルを保存したり、切り替えたりすることができることを意味します。</target>
        </trans-unit>
        <trans-unit id="3c325bd0857cc8cda3777f44fcc54da309e8e609" translate="yes" xml:space="preserve">
          <source>This means you can take advantage of &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; glob support. This makes it &lt;em&gt;much&lt;/em&gt; easier to route against dynamic segments without having to build up a complex &lt;code&gt;RegExp&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;*&lt;/code&gt; および &lt;code&gt;**&lt;/code&gt; globサポートを利用できることを意味します。これにより、複雑な &lt;code&gt;RegExp&lt;/code&gt; を構築する必要なく、動的セグメントに対してルーティングが&lt;em&gt;はるかに&lt;/em&gt;簡単になります。</target>
        </trans-unit>
        <trans-unit id="ecd0bd2485807bbf241a08719355878cf83ae353" translate="yes" xml:space="preserve">
          <source>This message means that Cypress encountered an error when compiling and/or bundling your test file. Cypress automatically compiles and bundles your test code so you can use ES2015, CoffeeScript, modules, etc.</source>
          <target state="translated">このメッセージは、Cypress がテストファイルをコンパイルおよび/またはバンドルする際にエラーが発生したことを意味します。Cypress はテストコードを自動的にコンパイルしてバンドルするので、ES2015、CoffeeScript、モジュールなどを使用することができます。</target>
        </trans-unit>
        <trans-unit id="cb55575187f576f80eac0bd90ecbd928dd31fb14" translate="yes" xml:space="preserve">
          <source>This message means that Cypress was unable to find tests in the specified file. You&amp;rsquo;ll likely get this message if you have an empty test file and have not yet written any tests.</source>
          <target state="translated">このメッセージは、サイプレスが指定されたファイルでテストを見つけることができなかったことを意味します。空のテストファイルがあり、まだテストを記述していない場合、このメッセージが表示される可能性があります。</target>
        </trans-unit>
        <trans-unit id="fbe65c9ea60d05bea293f697ec5b63a2a1bba347" translate="yes" xml:space="preserve">
          <source>This message means you tried to execute one or more Cypress commands outside of a currently running test. Cypress has to be able to associate commands to a specific test.</source>
          <target state="translated">このメッセージは、現在実行中のテストの外で 1 つ以上の Cypress コマンドを実行しようとしたことを意味します。Cypress は特定のテストにコマンドを関連付けることができなければなりません。</target>
        </trans-unit>
        <trans-unit id="26473ed6f3277cbaabd952641ad6cb2eef61f768" translate="yes" xml:space="preserve">
          <source>This open source plugin compares the baseline and the current images side by side within the Cypress Test Runner if pixel difference is above the threshold; notice how the baseline image (&lt;em&gt;Expected result&lt;/em&gt;) has the label text with the line through, while the new image (&lt;em&gt;Actual result&lt;/em&gt;) does not have it.</source>
          <target state="translated">このオープンソースプラグインは、ピクセルの差がしきい値を超えている場合、ベースラインと現在の画像をサイプレステストランナー内で並べて比較します。ベースライン画像（&lt;em&gt;期待される結果&lt;/em&gt;）には線が&lt;em&gt;引かれ&lt;/em&gt;たラベルテキストがあり、新しい画像（&lt;em&gt;実際の結果&lt;/em&gt;）にはないことがわかります。</target>
        </trans-unit>
        <trans-unit id="b1874ce110d1b622e8bf6df18a651ee21a552fa7" translate="yes" xml:space="preserve">
          <source>This overrides the default auto-positioning based on the element itself. Useful for events like &lt;code&gt;mousemove&lt;/code&gt; where you need the position to be outside the element itself.</source>
          <target state="translated">これは、要素自体に基づくデフォルトの自動配置を上書きします。要素自体の外に位置を配置する必要がある &lt;code&gt;mousemove&lt;/code&gt; などのイベントに役立ちます。</target>
        </trans-unit>
        <trans-unit id="18fce04b31ee489e860ee35e6ca5a37c91bfada2" translate="yes" xml:space="preserve">
          <source>This page is currently a work in progress and is not fully documented.</source>
          <target state="translated">このページは現在進行形であり、完全な文書化はされていません。</target>
        </trans-unit>
        <trans-unit id="d49acb671f06c70483fdc4771de2c9b01b581769" translate="yes" xml:space="preserve">
          <source>This part of the API is documented here.</source>
          <target state="translated">APIのこの部分については、ここに文書化されています。</target>
        </trans-unit>
        <trans-unit id="d4ee7aebde7b2957a142c631b053ee06988aee05" translate="yes" xml:space="preserve">
          <source>This pattern is especially useful for projects in a monorepo. Each segment of the monorepo can be assigned its own group, and larger segments can be parallelized to speed up their testing.</source>
          <target state="translated">このパターンは、モノレポ内のプロジェクトに特に有効です。モノレポの各セグメントにはそれぞれのグループを割り当てることができ、より大きなセグメントは並列化してテストを高速化することができます。</target>
        </trans-unit>
        <trans-unit id="d20be6f286a4b55595d0a69af5286da52cd24b61" translate="yes" xml:space="preserve">
          <source>This principle applies to everything in Cypress. Do not test what does not need testing. It is slow, brittle, and adds zero value. Only test the underlying thing that causes the behavior you care about testing.</source>
          <target state="translated">この原則は、サイプレスのすべてに当てはまります。テストの必要のないものはテストしないでください。時間がかかり、もろく、付加価値がゼロになります。テストに関心のある動作を引き起こす根本的なものだけをテストしてください。</target>
        </trans-unit>
        <trans-unit id="0085003eb564d3c84be846ee443b880929c5b062" translate="yes" xml:space="preserve">
          <source>This queries the entire &lt;code&gt;document&lt;/code&gt; for the content.</source>
          <target state="translated">これにより、 &lt;code&gt;document&lt;/code&gt; 全体にコンテンツが照会されます。</target>
        </trans-unit>
        <trans-unit id="031f0350d47d961e920a47e00907ab6be3352d0c" translate="yes" xml:space="preserve">
          <source>This release marks a major change in the underlying algorithms used to prevent testing flake. It is a major goal of Cypress to combat and prevent &lt;strong&gt;all&lt;/strong&gt; test flake. These algorithm changes go a long way towards making this a reality, and have been months in the making.</source>
          <target state="translated">このリリースは、フレークのテストを防ぐために使用される基本的なアルゴリズムに大きな変更を加えたものです。サイプレスの主要な目標は、&lt;strong&gt;すべての&lt;/strong&gt;テストフレークに対抗して防止することです。これらのアルゴリズムの変更は、これを実現するための長い道のりであり、作成には数ヶ月を要しました。</target>
        </trans-unit>
        <trans-unit id="12dc69acb18ebdb8295c65ef78b40c1e72a11b98" translate="yes" xml:space="preserve">
          <source>This scrolling logic only applies to &lt;a href=&quot;#Actionability&quot;&gt;commands that are actionable above&lt;/a&gt;. &lt;strong&gt;We do not scroll elements&lt;/strong&gt; into view when using DOM commands such as &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このスクロールロジックは、&lt;a href=&quot;#Actionability&quot;&gt;上記のアクション可能なコマンドに&lt;/a&gt;のみ適用されます。&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../api/commands/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt;などのDOMコマンドを使用する場合は、&lt;strong&gt;要素&lt;/strong&gt;を&lt;strong&gt;スクロール&lt;/strong&gt;して表示&lt;strong&gt;しません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="44d6a6a59cd93a62ba3def39d82319ec28c11d0b" translate="yes" xml:space="preserve">
          <source>This scrolls the &lt;code&gt;window&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;window&lt;/code&gt; スクロールします。</target>
        </trans-unit>
        <trans-unit id="0a81d3ecd936d4a0e1a59e4ac38ed570cfd8e6ae" translate="yes" xml:space="preserve">
          <source>This section refers to your operating system&amp;rsquo;s environment variables, &lt;em&gt;not&lt;/em&gt;&lt;a href=&quot;../guides/environment-variables&quot;&gt;Cypress environment variables&lt;/a&gt;</source>
          <target state="translated">このセクションは、&lt;a href=&quot;../guides/environment-variables&quot;&gt;サイプレス環境変数&lt;/a&gt;で&lt;em&gt;はなく&lt;/em&gt;、オペレーティングシステムの環境変数を参照します</target>
        </trans-unit>
        <trans-unit id="18b2bf87c76063db55cce706eb4eb526e575a0b8" translate="yes" xml:space="preserve">
          <source>This security vulnerability exists &lt;strong&gt;even if&lt;/strong&gt; your web server forces a &lt;code&gt;301 redirect&lt;/code&gt; back to the HTTPS site. The original HTTP request was still made once, exposing insecure session information.</source>
          <target state="translated">このセキュリティの脆弱性は、WebサーバーがHTTPSサイトに &lt;code&gt;301 redirect&lt;/code&gt; 強制的に戻した&lt;strong&gt;場合でも&lt;/strong&gt;存在します。元のHTTPリクエストはまだ1回行われ、安全でないセッション情報が公開されていました。</target>
        </trans-unit>
        <trans-unit id="12403c31a93ebd5156b8be6bc1e9a47fda0d2e36" translate="yes" xml:space="preserve">
          <source>This service has now been fully integrated into the Desktop Application. There is a new on-boarding process that helps you setup projects for recording.</source>
          <target state="translated">このサービスは現在、デスクトップアプリケーションに完全に統合されています。録画用のプロジェクトを設定するのに役立つ新しいオンボーディングプロセスが用意されています。</target>
        </trans-unit>
        <trans-unit id="ff80366bdd429c06afb5d5ecf245be6bfd01c8b8" translate="yes" xml:space="preserve">
          <source>This setting changes the display size of the screen and does not affect the &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt; set in the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt;. The &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt; only affect the size of the application under test displayed inside the Test Runner.</source>
          <target state="translated">この設定は、画面の表示サイズを変更し、&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;構成で&lt;/a&gt;設定された &lt;code&gt;viewportWidth&lt;/code&gt; と &lt;code&gt;viewportHeight&lt;/code&gt; には影響しません。 &lt;code&gt;viewportWidth&lt;/code&gt; と &lt;code&gt;viewportHeight&lt;/code&gt; にのみテストランナー内に表示テスト対象アプリケーションのサイズに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="2d09642a6e1d006cbc5410327b8aa5d639c52c4a" translate="yes" xml:space="preserve">
          <source>This single test has achieved 100% code coverage - every function and every statement has been executed at least once. Of course in real world applications, achieving 100% code coverage requires multiple tests.</source>
          <target state="translated">この1つのテストで100%のコードカバレッジを達成しています-すべての関数とすべてのステートメントが少なくとも1回は実行されています。もちろん、実世界のアプリケーションで100%のコードカバレッジを達成するには、複数のテストが必要です。</target>
        </trans-unit>
        <trans-unit id="53155aafe0d1b0cb4b1ae2fb540a7e7ae14216e9" translate="yes" xml:space="preserve">
          <source>This strategy is useful because if you add &lt;code&gt;cypress.env.json&lt;/code&gt; to your &lt;code&gt;.gitignore&lt;/code&gt; file, the values in here can be different for each developer machine.</source>
          <target state="translated">&lt;code&gt;.gitignore&lt;/code&gt; ファイルに &lt;code&gt;cypress.env.json&lt;/code&gt; を追加する場合、ここの値は開発者のマシンごとに異なる可能性があるため、この戦略は役立ちます。</target>
        </trans-unit>
        <trans-unit id="85e8c09c493e496ce61478ce7f468f70ff8ee2e6" translate="yes" xml:space="preserve">
          <source>This trade-off means it makes it a little bit harder to communicate with the back end - like your server or database. You will not be able to connect or import those server-side libraries or modules directly. Although you can of course require &lt;code&gt;node_modules&lt;/code&gt; which can be used in the browser. Additionally, you have the ability to use Node to import or talk directly to your back end scripts using &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;our Plugins API&lt;/a&gt; or &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このトレードオフにより、サーバーやデータベースなどのバックエンドとの通信が少し難しくなります。これらのサーバー側ライブラリまたはモジュールを直接接続またはインポートすることはできません。もちろん、ブラウザで使用できる &lt;code&gt;node_modules&lt;/code&gt; を要求することもできます。さらに、ノードを使用して&lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;、プラグインAPI&lt;/a&gt;または&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;を使用して、バックエンドスクリプトを直接インポートまたは対話することができます。</target>
        </trans-unit>
        <trans-unit id="ad1692a5205711f0259bd9a24e583d51b4a07fca" translate="yes" xml:space="preserve">
          <source>This update represents mostly a lot of internal structure changes. We swapped out the underlying Desktop architecture and refactored all of the back end code to prepare for an open source release.</source>
          <target state="translated">今回のアップデートは、ほとんどが内部構造の変更です。基本となるデスクトップアーキテクチャを交換し、オープンソースリリースに向けてバックエンドコードをすべてリファクタリングしました。</target>
        </trans-unit>
        <trans-unit id="bde9d67f7ea1b6bbffc28ee2eb2e11ccd499a09f" translate="yes" xml:space="preserve">
          <source>This utility may be useful when writing &lt;a href=&quot;../plugins/writing-a-plugin&quot;&gt;plugins&lt;/a&gt; for Cypress and you want to determine if a value is a valid Cypress chainable.</source>
          <target state="translated">このユーティリティは、サイプレス用の&lt;a href=&quot;../plugins/writing-a-plugin&quot;&gt;プラグイン&lt;/a&gt;を作成していて、値がサイプレスのチェーン可能であるかどうかを判断する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="c7fb18ad55637b4d42e7ee8e4e55a10f2c56dc30" translate="yes" xml:space="preserve">
          <source>This value should be automatically detected for most CI providers and is unnecessary to define unless Cypress is unable to determine it.</source>
          <target state="translated">この値は、ほとんどの CI プロバイダで自動的に検出され、Cypress が判断できない限り定義する必要はありません。</target>
        </trans-unit>
        <trans-unit id="460c60e8297ce00bb79384a1b188340507c62d70" translate="yes" xml:space="preserve">
          <source>This version of Node has &lt;strong&gt;nothing to do&lt;/strong&gt; with your locally installed versions. Therefore you have to write Node code which is compatible with this version.</source>
          <target state="translated">このバージョンのノードは、ローカルにインストールされたバージョンとは&lt;strong&gt;関係&lt;/strong&gt;あり&lt;strong&gt;ません&lt;/strong&gt;。したがって、このバージョンと互換性のあるノードコードを記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="458d2eb63e4e07f929764431b90c0c1732aa7aa3" translate="yes" xml:space="preserve">
          <source>This version of Node has &lt;strong&gt;nothing to do&lt;/strong&gt; with your locally installed versions. Therefore you may want to write Node code which is compatible with this version or document that the user of your plugin will need to set a specific &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Node-version&quot;&gt;&lt;code&gt;nodeVersion&lt;/code&gt;&lt;/a&gt; in their configuration.</source>
          <target state="translated">このバージョンのノードは、ローカルにインストールされたバージョンとは&lt;strong&gt;何の関係も&lt;/strong&gt;あり&lt;strong&gt;ません&lt;/strong&gt;。したがって、プラグインのユーザーが構成で特定の&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Node-version&quot;&gt; &lt;code&gt;nodeVersion&lt;/code&gt; &lt;/a&gt;を設定する必要がある、このバージョンまたはドキュメントと互換性のあるノードコードを記述したい場合があります。</target>
        </trans-unit>
        <trans-unit id="fd7496a752fe65eae6fe303dd223860cb20e04a0" translate="yes" xml:space="preserve">
          <source>This waiting period is called the &lt;strong&gt;run completion delay&lt;/strong&gt; and it begins after the last known CI machine has completed as shown in the diagram below:</source>
          <target state="translated">この待機期間は&lt;strong&gt;実行完了遅延&lt;/strong&gt;と呼ばれ、次の図に示すように、最後の既知のCIマシンが完了した後に開始されます。</target>
        </trans-unit>
        <trans-unit id="fdb244e4d607ad9461b14dfafbd9b9a5418ec674" translate="yes" xml:space="preserve">
          <source>This will automatically &lt;strong&gt;prefix&lt;/strong&gt;&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; commands with this baseUrl.</source>
          <target state="translated">これは自動的に&lt;strong&gt;接頭&lt;/strong&gt;&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; は&lt;/a&gt;と&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;このbaseUrlに持つコマンド。</target>
        </trans-unit>
        <trans-unit id="fdf8303387051e38b6dda431a745ea682a363a4f" translate="yes" xml:space="preserve">
          <source>This will clear out all installed versions of Cypress that may be cached on your machine.</source>
          <target state="translated">これにより、マシンにキャッシュされている可能性のあるCypressのインストールされたバージョンがすべてクリアされます。</target>
        </trans-unit>
        <trans-unit id="702164fa3d2706b7e206a0c8a954ebf0bcccfa22" translate="yes" xml:space="preserve">
          <source>This will create separate XML files in the &lt;code&gt;results&lt;/code&gt; folder. You can then merge the output reports using a separate step using 3rd party tool. For example, for &lt;a href=&quot;https://github.com/adamgruber/mochawesome&quot;&gt;Mochawesome&lt;/a&gt; reporter, there is &lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt; tool.</source>
          <target state="translated">これにより、 &lt;code&gt;results&lt;/code&gt; フォルダーに個別のXMLファイルが作成されます。次に、サードパーティツールを使用して別の手順で出力レポートをマージできます。たとえば、&lt;a href=&quot;https://github.com/adamgruber/mochawesome&quot;&gt;Mochawesome&lt;/a&gt;レポーターの場合、&lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt;ツールがあります。</target>
        </trans-unit>
        <trans-unit id="81652586dedbdddba4f333e7507b06fa12f2f254" translate="yes" xml:space="preserve">
          <source>This will install Cypress locally as a dev dependency for your project.</source>
          <target state="translated">これは、プロジェクトのためのdev依存関係としてローカルにCypressをインストールします。</target>
        </trans-unit>
        <trans-unit id="562c045e2090c70631e9ee513370681d27245006" translate="yes" xml:space="preserve">
          <source>This will query inside of the &lt;code&gt;&amp;lt;#checkout-container&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">これは、 &lt;code&gt;&amp;lt;#checkout-container&amp;gt;&lt;/code&gt; 要素内でクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="bf7d8c8672a29fbd843543b08f1be727b64d3de9" translate="yes" xml:space="preserve">
          <source>This will scroll the &lt;code&gt;&amp;lt;#checkout-items&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">これは &lt;code&gt;&amp;lt;#checkout-items&amp;gt;&lt;/code&gt; 要素をスクロールします。</target>
        </trans-unit>
        <trans-unit id="3f7e6174502ca4e71353d0fdc59742a115acf22e" translate="yes" xml:space="preserve">
          <source>This will set the height and width throughout the duration of the tests, then return it to the default &lt;code&gt;viewportHeight&lt;/code&gt; and &lt;code&gt;viewportWidth&lt;/code&gt; when complete.</source>
          <target state="translated">これにより、テスト期間中の高さと幅が設定され、完了するとデフォルトの &lt;code&gt;viewportHeight&lt;/code&gt; と &lt;code&gt;viewportWidth&lt;/code&gt; に戻ります。</target>
        </trans-unit>
        <trans-unit id="3838f6980902467f5951cb7c9281394b1303f24f" translate="yes" xml:space="preserve">
          <source>This will set the timeout throughout the duration of the tests, then return it to the default &lt;code&gt;execTimeout&lt;/code&gt; when complete.</source>
          <target state="translated">これにより、テスト期間全体でタイムアウトが設定され、完了するとデフォルトの &lt;code&gt;execTimeout&lt;/code&gt; に戻ります。</target>
        </trans-unit>
        <trans-unit id="5c8c134bbe5d879e028bc1975a535d01e136f6b7" translate="yes" xml:space="preserve">
          <source>This will set the timeout throughout the duration of the tests, then return it to the default &lt;code&gt;taskTimeout&lt;/code&gt; when complete.</source>
          <target state="translated">これにより、テスト期間全体でタイムアウトが設定され、完了するとデフォルトの &lt;code&gt;taskTimeout&lt;/code&gt; に戻ります。</target>
        </trans-unit>
        <trans-unit id="6a685a05ffe4ec927b0f3930ea8cd549596b1585" translate="yes" xml:space="preserve">
          <source>This will take you to the directory in your file system where your App Data is stored. If you cannot open Cypress, search your file system for a directory named &lt;code&gt;cy&lt;/code&gt; whose content should look something like this:</source>
          <target state="translated">これにより、アプリデータが保存されているファイルシステムのディレクトリに移動します。サイプレスを開けない場合は、ファイルシステムで &lt;code&gt;cy&lt;/code&gt; という名前のディレクトリを検索します。このディレクトリの内容は次のようになります。</target>
        </trans-unit>
        <trans-unit id="53030ab92091f2959fc411e78c94fbff8b824e20" translate="yes" xml:space="preserve">
          <source>This would enable you to do things like this:</source>
          <target state="translated">そうすることで、こんなことができるようになります。</target>
        </trans-unit>
        <trans-unit id="fdc82c657fa4b0f3a1abbb474c304fff3a5607dd" translate="yes" xml:space="preserve">
          <source>This would match the following blacklisted hosts:</source>
          <target state="translated">これは以下のブラックリストに登録されているホストと一致します。</target>
        </trans-unit>
        <trans-unit id="1c14ba4323cc66553ff74c0e8548fd3051b05554" translate="yes" xml:space="preserve">
          <source>Those folder paths refer to the &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;default folder paths&lt;/a&gt;. If you&amp;rsquo;ve configured Cypress to use different folder paths then the folders specific to your configuration will be watched.</source>
          <target state="translated">これらのフォルダーパスは、&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;デフォルトの&lt;/a&gt;フォルダーパスを参照します。異なるフォルダーパスを使用するようにサイプレスを構成した場合、構成に固有のフォルダーが監視されます。</target>
        </trans-unit>
        <trans-unit id="a203f3c60b0f975939f6724e53fff39f0e5d8faa" translate="yes" xml:space="preserve">
          <source>Though Cypress has built out &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;an excellent Test Runner&lt;/a&gt; to help you understand what is happening in your application and your tests, there&amp;rsquo;s no replacing all the amazing work browser teams have done on their built-in development tools. Once again, we see that Cypress goes &lt;em&gt;with&lt;/em&gt; the flow of the modern ecosystem, opting to leverage these tools wherever possible.</source>
          <target state="translated">サイプレスは、アプリケーションとテストで何が起こっているかを理解するのに役立つ&lt;a href=&quot;../core-concepts/test-runner&quot;&gt;優れたテストランナー&lt;/a&gt;を構築しましたが、組み込みの開発ツールでブラウザーチームが行ってきた驚くべき作業をすべて置き換えることはできません。もう一度、我々はサイプレスが行くことを確認&lt;em&gt;して&lt;/em&gt;、可能な限り、これらのツールを活用するために選ぶ、近代的な生態系の流れ。</target>
        </trans-unit>
        <trans-unit id="dd4ced4e9a7f501a1d4a421e58f7a96f07565df1" translate="yes" xml:space="preserve">
          <source>Though it may not look like much, this upgrade was a long time in the making. There were limitations in the way we were currently handling headless / CI builds which restricted our ability to make updates or fix bugs. Additionally CI runs would randomly crash for no good reason. We decided to split out the headless / CI process into its own independent Chromium application which is now independently controlled, and is much more reliable. This upgrade enables us to handle CI features coming down the pipe and was necessary for moving forward.</source>
          <target state="translated">大したことないように見えるかもしれませんが、このアップグレードには長い時間がかかっていました。現在のヘッドレス/CIビルドの扱い方には限界があり、アップデートやバグ修正の能力を制限していました。さらに、CI の実行は意味もなくランダムにクラッシュしてしまいます。そこで、ヘッドレス/CIプロセスを独立したChromiumアプリケーションに分割することにしました。このアップグレードにより、今後のCI機能を扱うことが可能になり、前進するために必要なものとなりました。</target>
        </trans-unit>
        <trans-unit id="05042fa7041f8b8530048a78d997204314cb21fa" translate="yes" xml:space="preserve">
          <source>Throw explicit error for &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, and &lt;code&gt;&quot;&quot;&lt;/code&gt; arguments to &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/24&quot;&gt;#24&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;undefined&lt;/code&gt; 、および &lt;code&gt;&quot;&quot;&lt;/code&gt; 引数に対して明示的なエラーをスローします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/24&quot;&gt;＃24を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="958bd43bc0312835eb96d1524baaf0627ec311d3" translate="yes" xml:space="preserve">
          <source>Throw on &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; when it cannot find a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;. Also throw when &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; or a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; is disabled. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/91&quot;&gt;#91&lt;/a&gt;.</source>
          <target state="translated">一致する &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; が見つからない場合は&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; を&lt;/a&gt;スローします。 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; または対応する &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; が無効になっている場合にもスローします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/91&quot;&gt;＃91を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a073142787a1c947c30eef810fce18423c0b95d1" translate="yes" xml:space="preserve">
          <source>Thus the Cypress &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get&lt;/code&gt;&lt;/a&gt; command has to be smarter and expect the application to potentially update. The &lt;code&gt;cy.get()&lt;/code&gt; queries the application&amp;rsquo;s DOM, finds the elements that match the selector, and then tries the assertion that follows it (in our case &lt;code&gt;should('have.length', 2)&lt;/code&gt;) against the list of found elements.</source>
          <target state="translated">したがって、サイプレスの&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get&lt;/code&gt; &lt;/a&gt;コマンドはよりスマートで、アプリケーションが更新される可能性があることを期待する必要があります。 &lt;code&gt;cy.get()&lt;/code&gt; は、アプリケーションのDOMを照会セレクタに一致する要素を見つけ、それを次の主張をしようとします（私たちの場合は &lt;code&gt;should('have.length', 2)&lt;/code&gt; 見つかった要素のリストに対して）。</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="fb377762792866dda43ce836874a2f28a7e96eac" translate="yes" xml:space="preserve">
          <source>Time Inputs</source>
          <target state="translated">時間入力</target>
        </trans-unit>
        <trans-unit id="88dc2535a499ed3b3baa756d368f078268ecf304" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.blur()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.blur()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e964b583c6245a8054356ca2602db72f45be6dee" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.check()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.check()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8714d68e6a41993a7a02e0d2ef5349b3e22bee97" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.children()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.children()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42766190d5f779a4954bcbb9d0224bd6fdb40b0d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.clear()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.clear()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65268e932e8c9b1e866d2e17a080138ae6a60d70" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.click()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.click()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c7ab1a4adedb3f88bd7975a6d8cacf2ae95686c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.closest()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.closest()&lt;/code&gt; を前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1304e9c7f6886fd442252d07b899ac84222857a9" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.contains()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.contains()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="420d4a0dfd4eb785a630b5557178281d091b5322" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.dblclick()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.dblclick()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e74f719ac6b1951693dfc64835b6fb3446d51a6" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.eq()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.eq()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a43fc4e1662ada497daff7acee2c0536b65e19f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.filter()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.filter()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="388def00bf32877141ecfc44a3a2b9dc39a85f01" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.find()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.find()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a6b781cd6bef6b4d558024a0c641b2fc1c3d915" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.first()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.first()&lt;/code&gt; の前に解決するには&lt;a href=&quot;#Timeouts&quot;&gt;、タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db750ae3c2ed952c29a8422390030149b1cc6750" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.focus()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.focus()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f38bb64c3fb466172860cca43b478619c72bc39" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.invoke()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.invoke()&lt;/code&gt; の前に解決するには&lt;a href=&quot;#Timeouts&quot;&gt;、タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a92aa5d45d13fa137a0e2d2265bc86bc9cfbf121" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.its()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.its()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="165f56b81fc569b196c1a161d610591ddce3b2e5" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.last()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.last()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5be1fbad6d7e9ad23221c675719e687049574f88" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.next()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.next()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ec5b908c2803245b687f0838f5eb4acc14c5078" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.nextAll()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.nextAll()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4f6affa595413b128383e184ff26391c9d4d2c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.nextUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.nextUntil()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a054f442cd6beddb622e8e8b413cf8b37c68671" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.not()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.not()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5549ec7792821c25ef4654b7a284633c02aa8d96" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parent()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.parent()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d618b75427451f917b68090a20cd882d8902c37" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parents()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.parents()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49afe551ecca44d819db4bb4320d50434717f654" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parentsUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.parentsUntil()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cfdb0e942557ddb11e9cca3de6cb6c7df1587fe" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prev()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.prev()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="410a3e98bfe875fe057e50db80a7c80bb5f99cb9" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prevAll()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.prevAll()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99f468fc82bed12efc1d6260bca2dbcccf0ad488" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prevUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.prevUntil()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fe4b0bfe7d09bf9b201d824d88750d98852d852" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.rightclick()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.rightclick()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b73a9bc8db50f3af07dc4c4cd94bb2474eeff58b" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.screenshot()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.screenshot()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="584ccb8fd673724e5045b7e6c5809fa6a7566382" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.scrollIntoView()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.scrollIntoView()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b09e275d45641fc6631c2bbbd2c89d02423a232" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.scrollTo()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.scrollTo()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de788277124c1cf9010adfd939cf84ed676c94ab" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.select()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.select()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65aa08d31a1e48f8a51ac5984a927546fd516295" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.siblings()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.siblings()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d3880cb58a04fb6b7a625660713643f33416ab4" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.spread()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.spread()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc89004ffc7de6417ea577a496ca395776e25bad" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.submit()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.submit()&lt;/code&gt; 前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4117b83b56d69fca2378861d045a33b6ce1b0ce" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.then()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.then()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0cf637f982bf1b2da1a81d816c3139428f1bf30" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.trigger()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.trigger()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b5c89f7a8fe1531f08b84d61ecc6842ed5158df" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.type()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.type()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd67bc722544edc6f172216ff8d9bd7c5826a064" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.uncheck()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.uncheck()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2c5c4ec69581238a100de43d5af9dddf3d5563d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.clearCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.clearCookie()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4053ef4b697063b4748025fa77e497c4f331855" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.clearCookies()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.clearCookies()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3d6db5918d4f148887a0e3c95ce9f9b6ff011ce" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.document()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.document()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e75155a30f951accc30abc04aeedc4275825b60c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.exec()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.exec()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="352b3ef87cfaf15c14d8a1c3e35bbbaf26b527b1" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.fixture()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.fixture()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bf773b6fc1b29d34746ddda1de614cb59aa805d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.focused()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.focused()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e3b71d0171d3d10899909459a165c2dc1af0e2f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.get()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.get()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53b1fe4a9c07e99e385dcf0404d30fedf5854e01" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.getCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.getCookie()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="505e9a66550a11fc305c7683ffd0c1c2b5b20521" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.getCookies()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.getCookies()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53ff75ff1641cbdbc2e36036c0dd13e1145beaa2" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.go()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.go()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8bd35228efe7bb55db2782771cd3032c54d12fc" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.hash()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.hash()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9eab7aa933d4d9be345ef1205e5b365b2e535fa8" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.location()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.location()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb4c680019f6d8740c8f5bb74deea7d37a9a6921" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.readFile()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.readFile()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aea5e14348cc5c6d94364feec8c429d8d62118cf" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.reload()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.reload()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e78c691f4793cade51b7c754c1635dce547fef" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.request()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.request()&lt;/code&gt; を前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1eac61a26416247dab8c13a4179f97bf42e600f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.root()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.root()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6784df3d3f8f434396c622aba69e10a5fe3178f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.setCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.setCookie()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63095a61eabe65c5fbfcd67ae7faf8c0177fa798" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.task()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.task()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a43ea5f07f0780bd49601af102865e8166ec4795" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.title()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.title()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b5e67ea51611f1769bfc9a11b1f4203b0706b07" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.url()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.url()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3fa63bd72e57894dc0b1ac8d09273c67d54a64f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.visit()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.visit()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cd89775a57ef2c3eca328667913bd52968cdf8b" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.wait()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.wait()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7c4a53d839c7221e60163da8643405315c31ee4" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.window()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.window()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3525850b0ceddc318ca744537e813b31ef3ec47" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.wrap()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.wrap()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="534f9712426325b6e244c8d63eebb857c08f63fa" translate="yes" xml:space="preserve">
          <source>Time travel</source>
          <target state="translated">タイムトラベル</target>
        </trans-unit>
        <trans-unit id="0d8585da73a6dab1f6352a0b062f08dc502b59da" translate="yes" xml:space="preserve">
          <source>Time traveling snapshots now preserve the styles of empty &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags with programmatically inserted CSS rules. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1226&quot;&gt;#1226&lt;/a&gt;.</source>
          <target state="translated">タイムトラベルスナップショットは、プログラムで挿入されたCSSルールを使用して、空の &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; タグのスタイルを保持するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1226&quot;&gt;＃1226を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="95e7882d490e20f536a21a152bb7b88fca473d5c" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for &lt;code&gt;page transition events&lt;/code&gt; or &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/reload&quot;&gt;&lt;code&gt;cy.reload()&lt;/code&gt;&lt;/a&gt; commands to fire their page &lt;code&gt;load&lt;/code&gt; events. Network requests are limited by the underlying operating system, and may still time out if this value is increased.</source>
          <target state="translated">&lt;code&gt;page transition events&lt;/code&gt; または&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/reload&quot;&gt; &lt;code&gt;cy.reload()&lt;/code&gt; &lt;/a&gt;コマンドがページ &lt;code&gt;load&lt;/code&gt; イベントを発生させるのを待つ時間（ミリ秒単位）。ネットワーク要求は、基盤となるオペレーティングシステムによって制限されており、この値を大きくするとタイムアウトになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="8e4546e794b872db0e7f830414bef8b6efa3d2ef" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for a system command to finish executing during a &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;コマンドの実行中にシステムコマンドの実行が完了するのを待機する時間（ミリ秒）</target>
        </trans-unit>
        <trans-unit id="0344658b2d3334f23a6c04344746702ee05e7675" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for a task to finish executing during a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;コマンドの実行中にタスクの実行が完了するまで待機する時間（ミリ秒）</target>
        </trans-unit>
        <trans-unit id="3c5906723e4f284c898154f299293697c6bfcd46" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for an XHR request to go out in a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">XHRリクエストが&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;コマンドで送信されるのを待つ時間（ミリ秒）</target>
        </trans-unit>
        <trans-unit id="6d1f46641205758c830e1f2ce073f3383d3a8c2d" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait until a response in a &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookie&quot;&gt;&lt;code&gt;cy.getCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/setcookie&quot;&gt;&lt;code&gt;cy.setCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookie&quot;&gt;&lt;code&gt;cy.clearCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; commands</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/getcookie&quot;&gt; &lt;code&gt;cy.getCookie()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/getcookies&quot;&gt; &lt;code&gt;cy.getCookies()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/setcookie&quot;&gt; &lt;code&gt;cy.setCookie()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/clearcookie&quot;&gt; &lt;code&gt;cy.clearCookie()&lt;/code&gt; &lt;/a&gt;応答まで待機する時間（ミリ秒単位）。 clearCookie（）、&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;コマンド</target>
        </trans-unit>
        <trans-unit id="bcb9984691d12ff5b389e5efd5cbdee4b151c661" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait until most DOM based commands are considered timed out</source>
          <target state="translated">ほとんどの DOM ベースのコマンドがタイムアウトしたとみなされるまでの待ち時間。</target>
        </trans-unit>
        <trans-unit id="4182206cc797a1bcb67e79ac48df54d729afa0e6" translate="yes" xml:space="preserve">
          <source>Timeline View</source>
          <target state="translated">タイムラインビュー</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="b76904852aa459926a2540777944b33a445df8b2" translate="yes" xml:space="preserve">
          <source>Timeouts can be modified per command and this will affect all default assertions and any assertions chained after that command.</source>
          <target state="translated">タイムアウトはコマンドごとに変更することができ、これはすべてのデフォルトのアサーションと、そのコマンドの後にチェーンされたアサーションに影響します。</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="c1ed8235cc72d513556db585f63b8b50c409da7a" translate="yes" xml:space="preserve">
          <source>To a human - if something changes 10ms or 100ms from now, we may not even notice this change and assume the state was always the same.</source>
          <target state="translated">人間にとっては、今から10ミリ秒後、100ミリ秒後に何かが変化しても、その変化に気づかず、常に同じ状態だったと思い込んでしまうかもしれません。</target>
        </trans-unit>
        <trans-unit id="27f0ffae9421d91f5eb31f78f9c0b061bfa92cc4" translate="yes" xml:space="preserve">
          <source>To a robot - even 10ms represents billions+ of clock cycles. The timescale difference is incredible.</source>
          <target state="translated">ロボットにとっては、10msであっても数十億以上のクロックサイクルに相当します。タイムスケールの違いは信じられないほどです。</target>
        </trans-unit>
        <trans-unit id="f08c1bb201c73b8dba3c1484535bd11c4ea25af7" translate="yes" xml:space="preserve">
          <source>To access the fixtures nested within the &lt;code&gt;images&lt;/code&gt; folder, include the folder in your &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; フォルダー内にネストされたフィクスチャーにアクセスするには、フォルダーを&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;コマンドに含めます。</target>
        </trans-unit>
        <trans-unit id="c9fed4e71db24e7c4149b57d7906a94f0e8a9eb6" translate="yes" xml:space="preserve">
          <source>To access what each Cypress command yields you use &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">各サイプレスコマンドの結果にアクセスするには、&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="1d143bbc2b45230f9eef594ce36d97ec57c0ced7" translate="yes" xml:space="preserve">
          <source>To accomplish the same thing in Powershell:</source>
          <target state="translated">Powershellで同じことを達成するために。</target>
        </trans-unit>
        <trans-unit id="166e710ba165eea3de8ec85b1e7054e579c0d1f5" translate="yes" xml:space="preserve">
          <source>To alias something you&amp;rsquo;d like to share use the &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">共有したいものにエイリアスを付けるには、&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="4393a0c96e6ef66b82cf156c3663950bdbd68985" translate="yes" xml:space="preserve">
          <source>To apply specific Cypress &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; values to a suite or test, you can pass a &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt; object to the test or suite function.</source>
          <target state="translated">特定のサイプレス&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;構成&lt;/a&gt;値をスイートまたはテストに適用するには、&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;テスト構成&lt;/a&gt;オブジェクトをテストまたはスイート関数に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b849f57310aa9d236088e30496763d15362e20a2" translate="yes" xml:space="preserve">
          <source>To blacklist a host:</source>
          <target state="translated">ホストをブラックリストに載せること。</target>
        </trans-unit>
        <trans-unit id="ae6908980609de5de702a7e380fd9f74d9923708" translate="yes" xml:space="preserve">
          <source>To bypass the proxy for certain domains, a &lt;code&gt;NO_PROXY&lt;/code&gt; environment variable can be set to a comma-separated list of domain names to not proxy traffic for. By default, traffic to &lt;code&gt;localhost&lt;/code&gt; will not be proxied.</source>
          <target state="translated">特定のドメインのプロキシをバイパスするには、 &lt;code&gt;NO_PROXY&lt;/code&gt; 環境変数を、トラフィックをプロキシしないドメイン名のコンマ区切りリストに設定できます。デフォルトでは、 &lt;code&gt;localhost&lt;/code&gt; へのトラフィックはプロキシされません。</target>
        </trans-unit>
        <trans-unit id="323c865f1f1a3f1f1618192abd40f0f9dd096a76" translate="yes" xml:space="preserve">
          <source>To calculate whether an element is animating we check the current and previous positions of the element itself. If the distance exceeds the &lt;a href=&quot;../references/configuration#Animations&quot;&gt;&lt;code&gt;animationDistanceThreshold&lt;/code&gt;&lt;/a&gt;, then we consider the element to be animating.</source>
          <target state="translated">要素がアニメーション化しているかどうかを計算するには、要素自体の現在の位置と以前の位置を確認します。距離が&lt;a href=&quot;../references/configuration#Animations&quot;&gt; &lt;code&gt;animationDistanceThreshold&lt;/code&gt; &lt;/a&gt;を超える場合、要素はアニメーションであると見なされます。</target>
        </trans-unit>
        <trans-unit id="ac0e341c5c9460191beed1f6898bcc274484d0fe" translate="yes" xml:space="preserve">
          <source>To calculate whether an element is animating we take a sample of the last positions it was at and calculate the element&amp;rsquo;s slope. You might remember this from 8th grade algebra. 😉</source>
          <target state="translated">要素がアニメーション化しているかどうかを計算するには、要素があった最後の位置のサンプルを取り、要素の傾きを計算します。8年生の代数から覚えているかもしれません。😉</target>
        </trans-unit>
        <trans-unit id="68b42cd41f72ca3ee00ee6ce82b38a9bb6118f00" translate="yes" xml:space="preserve">
          <source>To catch a single uncaught exception</source>
          <target state="translated">捕まえられない例外を1つキャッチするには</target>
        </trans-unit>
        <trans-unit id="bb659afe0807004757a7b576c8e20bda29a5fd70" translate="yes" xml:space="preserve">
          <source>To clear App Data</source>
          <target state="translated">アプリデータをクリアするには</target>
        </trans-unit>
        <trans-unit id="7825fc1e2b2f652c63c26c24c688acf9cc0e17cb" translate="yes" xml:space="preserve">
          <source>To confirm this, let&amp;rsquo;s remove the artificial delay to see what&amp;rsquo;s happening in the passing test.</source>
          <target state="translated">これを確認するために、人為的な遅延を取り除いて、合格したテストで何が起こっているかを確認します。</target>
        </trans-unit>
        <trans-unit id="0b6146f951a93d278cd3d940af0923b48d8c93c9" translate="yes" xml:space="preserve">
          <source>To disable parsing special characters sequences, set the &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">特殊文字シーケンスの解析を無効にするには、 &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; オプションを &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="37eac453f8695de56c3215e3eaae120d0cf07f2b" translate="yes" xml:space="preserve">
          <source>To do this - you would need a background process outside of the browser to make the underlying WebSocket connection that you can then communicate with and control.</source>
          <target state="translated">これを行うには、ブラウザの外にバックグラウンドプロセスが必要で、通信して制御できるWebSocket接続を作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="6e06070a0e4d6d166551de0e62761dab42de8bea" translate="yes" xml:space="preserve">
          <source>To express this in Cypress you&amp;rsquo;d write:</source>
          <target state="translated">これをサイプレスで表現するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="83049f38a853aca72cb58f3e189b3b2b3721623e" translate="yes" xml:space="preserve">
          <source>To express this with an assertion you&amp;rsquo;d write:</source>
          <target state="translated">これをアサーションで表現するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="96b23fbe50516013b6e01e4b9a35c1256f514102" translate="yes" xml:space="preserve">
          <source>To find this element by its contents, we&amp;rsquo;ll use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この要素をその内容で見つけるには、&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="149e9bbd69575b3273720fd628fbb128987d85a2" translate="yes" xml:space="preserve">
          <source>To fix this error, follow instructions on &lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;caching the cypress binary in CI&lt;/a&gt;, then bump the version of your CI cache to ensure a clean build.</source>
          <target state="translated">このエラーを修正するに&lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;は、サイプレスバイナリをCI&lt;/a&gt;にキャッシュする手順に従い、CIキャッシュのバージョンをバンプして、クリーンビルドを確実にします。</target>
        </trans-unit>
        <trans-unit id="7575ddba789b6b072835dcb92594fc7e2c7b843d" translate="yes" xml:space="preserve">
          <source>To get around these restrictions, Cypress implements some strategies involving JavaScript code, the browser&amp;rsquo;s internal APIs, and &lt;code&gt;network proxying&lt;/code&gt; to &lt;em&gt;play by the rules&lt;/em&gt; of &lt;code&gt;same-origin policy&lt;/code&gt;. It is our goal to fully automate the application under test without you needing to modify your application&amp;rsquo;s code - and we are &lt;em&gt;mostly&lt;/em&gt; able to do this.</source>
          <target state="translated">これらの制限を回避するために、サイプレスは、JavaScriptコード、ブラウザーの内部API、および &lt;code&gt;same-origin policy&lt;/code&gt; &lt;em&gt;ルール&lt;/em&gt;で&lt;em&gt;再生する&lt;/em&gt; &lt;code&gt;network proxying&lt;/code&gt; を含むいくつかの戦略を実装しています。アプリケーションのコードを変更する必要なしに、テスト中のアプリケーションを完全に自動化することが私たちの目標です-そして私たちは&lt;em&gt;ほとんど&lt;/em&gt;これを行うこと&lt;em&gt;が&lt;/em&gt;できます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9aeb9503bd3439b8e356bd49941cec1a2eb97780" translate="yes" xml:space="preserve">
          <source>To get started, open up this file:</source>
          <target state="translated">始めるには、このファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="fb9adb651d7d95d104ed2f1f7d71628ecf9bd8f2" translate="yes" xml:space="preserve">
          <source>To handle code coverage collected during each test, we created a &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; Cypress plugin. It merges coverage from each test and saves the combined result. It also calls &lt;code&gt;nyc&lt;/code&gt; (its peer dependency) to generate static HTML reports for human consumption.</source>
          <target state="translated">各テスト中に収集されたコードカバレッジを処理するために、&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt;サイプレスプラグインを作成しました。各テストのカバレッジをマージし、組み合わせた結果を保存します。また、 &lt;code&gt;nyc&lt;/code&gt; （そのピア依存関係）を呼び出して、人間が使用する静的HTMLレポートを生成します。</target>
        </trans-unit>
        <trans-unit id="280f8c6479cffa347916d707a00e83bf7e38e0ae" translate="yes" xml:space="preserve">
          <source>To help with these common challenges, the Selector Playground automatically prefers certain &lt;code&gt;data-*&lt;/code&gt; attributes when determining a unique selector.</source>
          <target state="translated">これらの一般的な課題を解決するために、セレクタープレイグラウンドは、一意のセレクターを決定するときに、特定の &lt;code&gt;data-*&lt;/code&gt; 属性を自動的に優先します。</target>
        </trans-unit>
        <trans-unit id="1e93657473d313debb6683ed7ed730e3c3c28a66" translate="yes" xml:space="preserve">
          <source>To illustrate this, let&amp;rsquo;s revisit that list of actions and expose some of the hidden &lt;strong&gt;✨ magic ✨&lt;/strong&gt; Cypress does for us at each step:</source>
          <target state="translated">これを説明するために、そのアクションのリストに&lt;strong&gt;戻り&lt;/strong&gt;、各ステップでサイプレスが&lt;strong&gt;実行&lt;/strong&gt;する非表示の&lt;strong&gt;✨マジック&lt;/strong&gt; exposeをいくつか公開します。</target>
        </trans-unit>
        <trans-unit id="2203f011ae04f2af8d4f15c66e1819faf35fc910" translate="yes" xml:space="preserve">
          <source>To illustrate this, let&amp;rsquo;s take a very simple example of trying to conditionally test unstable state.</source>
          <target state="translated">これを説明するために、不安定な状態を条件付きでテストする非常に簡単な例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="b793cfab7761a6eace3a477332c312e87ac064ac" translate="yes" xml:space="preserve">
          <source>To include code before your test files, set the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; path. By default, &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; is set to look for one of the following files:</source>
          <target state="translated">テストファイルの前にコードを含めるには、&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;パスを設定します。デフォルトでは、&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;は次のいずれかのファイルを検索するように設定されています。</target>
        </trans-unit>
        <trans-unit id="868c314890aef6646e5ee278ea0f8f20f34d6f59" translate="yes" xml:space="preserve">
          <source>To install this pre-release binary on Mac, you need to set the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to the shown &lt;code&gt;https://cdn.cypress.io/beta/binary/.../cypress.zip&lt;/code&gt; value and run &lt;code&gt;npm install https://cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz&lt;/code&gt;. The command in the terminal will be:</source>
          <target state="translated">このプレリリースバイナリをMacにインストールするには、 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 環境変数を表示されている &lt;code&gt;https://cdn.cypress.io/beta/binary/.../cypress.zip&lt;/code&gt; 値に設定し、 &lt;code&gt;npm install https://cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz&lt;/code&gt; を実行する必要があります。 /cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz。端末のコマンドは次のようになります。</target>
        </trans-unit>
        <trans-unit id="f3723db383e31a5a33ea33d689ddb173481ad5c9" translate="yes" xml:space="preserve">
          <source>To instrument the application code located in your &lt;code&gt;src&lt;/code&gt; folder and save it in an &lt;code&gt;instrumented&lt;/code&gt; folder use the following command:</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; フォルダーにあるアプリケーションコードをインストルメント化し、 &lt;code&gt;instrumented&lt;/code&gt; フォルダーに保存するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="48e22197bbbb6bd1d59b8937f02a4c9bca6a8bea" translate="yes" xml:space="preserve">
          <source>To interact with a range input (slider), we need to set its value and</source>
          <target state="translated">範囲入力(スライダー)と対話するには、その値を設定して</target>
        </trans-unit>
        <trans-unit id="c74ecb884f3f0bba1023c924193577e2a3820fc9" translate="yes" xml:space="preserve">
          <source>To keep a modifier activated between commands, specify &lt;code&gt;{release: false}&lt;/code&gt; in the options.</source>
          <target state="translated">コマンド間で修飾子をアクティブにしておくには、オプションで &lt;code&gt;{release: false}&lt;/code&gt; 指定します。</target>
        </trans-unit>
        <trans-unit id="dfc215f81a144908f83ffd1f95ded8c2bbc16ce1" translate="yes" xml:space="preserve">
          <source>To make a browser installed at a different path be auto-detected, create a symbolic link using &lt;code&gt;mklink&lt;/code&gt; in the location that Cypress expects to find your browser.</source>
          <target state="translated">別のパスにインストールされているブラウザーを自動検出するには、サイプレスがブラウザーを見つけることを期待している場所に &lt;code&gt;mklink&lt;/code&gt; を使用してシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="735f3bce713d52a0668f239c7df40905de18c181" translate="yes" xml:space="preserve">
          <source>To make these changes permanent, you can add these commands to your shell&amp;rsquo;s &lt;code&gt;~/.profile&lt;/code&gt; (&lt;code&gt;~/.zsh_profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, etc.) to run them on every login.</source>
          <target state="translated">これらの変更を永続的にするには、これらのコマンドをシェルの &lt;code&gt;~/.profile&lt;/code&gt; （ &lt;code&gt;~/.zsh_profile&lt;/code&gt; 、 &lt;code&gt;~/.bash_profile&lt;/code&gt; など）に追加して、ログインのたびに実行することができます。</target>
        </trans-unit>
        <trans-unit id="9892449df8e876b379575308ba31dcb1d0760ee9" translate="yes" xml:space="preserve">
          <source>To make these changes permanent, you can add this command to your shell&amp;rsquo;s &lt;code&gt;~/.profile&lt;/code&gt; (&lt;code&gt;~/.zsh_profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, etc.) to run them on every login.</source>
          <target state="translated">これらの変更を永続的にするには、シェルの &lt;code&gt;~/.profile&lt;/code&gt; （ &lt;code&gt;~/.zsh_profile&lt;/code&gt; 、 &lt;code&gt;~/.bash_profile&lt;/code&gt; など）にこのコマンドを追加して、ログインのたびに変更を実行します。</target>
        </trans-unit>
        <trans-unit id="fd116a294ad0316afe5fbd830ef0fa68c9d2bff9" translate="yes" xml:space="preserve">
          <source>To manually release modifiers within a test after using &lt;code&gt;{release: false}&lt;/code&gt;, use another &lt;code&gt;type&lt;/code&gt; command and the modifier will be released after it.</source>
          <target state="translated">&lt;code&gt;{release: false}&lt;/code&gt; を使用した後にテスト内で修飾子を手動で解放するには、別の &lt;code&gt;type&lt;/code&gt; コマンドを使用すると、修飾子はその後に解放されます。</target>
        </trans-unit>
        <trans-unit id="33f0c635785475347603f7c31f0d76543d069e7e" translate="yes" xml:space="preserve">
          <source>To match the behavior of web applications, Cypress is asynchronous and relies on timeouts to know when to stop waiting on an app to get into the expected state. Timeouts can be configured globally, or on a per-command basis.</source>
          <target state="translated">ウェブアプリケーションの動作に合わせて、Cypress は非同期で、期待される状態になるまでアプリの待機を止めるタイミングを知るためにタイムアウトに依存しています。タイムアウトは、グローバルに設定することも、コマンドごとに設定することもできます。</target>
        </trans-unit>
        <trans-unit id="a66861b2e0d92465797b2993cbfce9943d8be040" translate="yes" xml:space="preserve">
          <source>To modify configuration, you return an object from your plugins file exported function.</source>
          <target state="translated">設定を変更するには、プラグインファイルのエクスポート関数からオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="25fefb4701fe7ec06e7a1368d6ea6b43a7bd6fdf" translate="yes" xml:space="preserve">
          <source>To open the Selector Playground, click the  button next to the URL at the top of the runner. Hover over elements in your app to preview a unique selector for that element in the tooltip.</source>
          <target state="translated">セレクタのプレイグラウンドを開くには、ランナーの上部にあるURLの横にあるボタンをクリックします。アプリ内の要素にカーソルを合わせると、ツールチップでその要素に固有のセレクタがプレビューされます。</target>
        </trans-unit>
        <trans-unit id="cec5c4340ac471856a673e1e2a1916fda7189d74" translate="yes" xml:space="preserve">
          <source>To opt out of sending exception data on Linux or macOS, run the following command in a terminal before installing Cypress:</source>
          <target state="translated">LinuxやmacOSで例外データの送信をオプトアウトするには、Cypressをインストールする前にターミナルで以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="794937b9722bc56091f0141e5ef3d4d8b91bd73c" translate="yes" xml:space="preserve">
          <source>To opt out of sending exception data on Windows, run the following command in the Command Prompt before installing Cypress:</source>
          <target state="translated">Windowsで例外データの送信をオプトアウトするには、Cypressをインストールする前にコマンドプロンプトで以下のコマンドを実行してください。</target>
        </trans-unit>
        <trans-unit id="a267658a2fbeafb0312a4118f59352ac79d90469" translate="yes" xml:space="preserve">
          <source>To override the default cache folder, set the environment variable &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt;.</source>
          <target state="translated">デフォルトのキャッシュフォルダーを上書きするには、環境変数 &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="7ae5e98dfbf01bb2181d836a5d6ceb509c86bd19" translate="yes" xml:space="preserve">
          <source>To override the element that is yielded we can pass &amp;lsquo;ul&amp;rsquo; as the selector.</source>
          <target state="translated">生成される要素をオーバーライドするには、セレクターとして「ul」を渡します。</target>
        </trans-unit>
        <trans-unit id="e43dc7604ee983bf4ce996d64bb464513deece91" translate="yes" xml:space="preserve">
          <source>To prevent the Cypress Test Runner from exiting after running tests in a spec file, use &lt;code&gt;--no-exit&lt;/code&gt;.</source>
          <target state="translated">スペックファイルでテストを実行した後にサイプレステストランナーが終了しないようにするには、 &lt;code&gt;--no-exit&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="73ba966459bf9c759ae4852b9765ed45f475f18e" translate="yes" xml:space="preserve">
          <source>To record tests:</source>
          <target state="translated">テストを記録すること。</target>
        </trans-unit>
        <trans-unit id="81bc4daf465b70a92a11b8cd2af34e52acf069af" translate="yes" xml:space="preserve">
          <source>To reflect this behavior, Cypress also doesn&amp;rsquo;t ignore them.</source>
          <target state="translated">この動作を反映するために、サイプレスもそれらを無視しません。</target>
        </trans-unit>
        <trans-unit id="eed145b63831c1f5dd69fcc09b00d2c83cc1ab51" translate="yes" xml:space="preserve">
          <source>To run a command, you&amp;rsquo;ll need to prefix each command in order to properly locate the cypress executable.</source>
          <target state="translated">コマンドを実行するには、サイプレス実行可能ファイルを適切に見つけるために、各コマンドにプレフィックスを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="013480901aab9a34c9246bf54a2a68fdb6b17044" translate="yes" xml:space="preserve">
          <source>To run a specified suite or test, append &lt;code&gt;.only&lt;/code&gt; to the function. All nested suites will also be executed. This gives us the ability to run one test at a time and is the recommended way to write a test suite.</source>
          <target state="translated">指定したスイートまたはテストを実行するには、関数に &lt;code&gt;.only&lt;/code&gt; を追加します。すべてのネストされたスイートも実行されます。これにより、一度に1つのテストを実行できるようになり、テストスイートを作成するための推奨方法です。</target>
        </trans-unit>
        <trans-unit id="a4a27f3ee030ba3bdf456be284f4b1d13fad99e9" translate="yes" xml:space="preserve">
          <source>To save the &lt;code&gt;CYPRESS_CRASH_REPORTS&lt;/code&gt; variable for use in all new shells, use &lt;code&gt;setx&lt;/code&gt;:</source>
          <target state="translated">保存するには &lt;code&gt;CYPRESS_CRASH_REPORTS&lt;/code&gt; のすべての新しいシェルで使用するための変数を、使用が &lt;code&gt;setx&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1515397953b9965da8ef352a2a18a8169cc62ebd" translate="yes" xml:space="preserve">
          <source>To save the &lt;code&gt;HTTP_PROXY&lt;/code&gt; variable and use your proxy for all new shells, use &lt;code&gt;setx&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;HTTP_PROXY&lt;/code&gt; 変数を保存し、すべての新しいシェルにプロキシを使用するには、 &lt;code&gt;setx&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="670b3a49d3d07d27dc07cc48f7d6f1c265d954e7" translate="yes" xml:space="preserve">
          <source>To see a working example of this please check out our &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;Stubbing Google Analytics Recipe&lt;/a&gt;.</source>
          <target state="translated">これの実際の例を確認するには、&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;GoogleのStubbing Google Analyticsレシピ&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="d587950df7426b25ea8703c4e89ffe22361a63ca" translate="yes" xml:space="preserve">
          <source>To see an example of every command used in Cypress, open the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/cypress/integration/examples&quot;&gt;&lt;code&gt;example&lt;/code&gt; folder&lt;/a&gt; within your &lt;code&gt;cypress/integration&lt;/code&gt; folder.</source>
          <target state="translated">サイプレスで使用されるすべてのコマンドの&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/cypress/integration/examples&quot;&gt; &lt;code&gt;example&lt;/code&gt; 表示するに&lt;/a&gt;は、 &lt;code&gt;cypress/integration&lt;/code&gt; フォルダー内のサンプルフォルダーを開きます。</target>
        </trans-unit>
        <trans-unit id="53615b42ca9ca8d0e3552778d8ac61c80f14fc6e" translate="yes" xml:space="preserve">
          <source>To see debug logs from the browser launcher, run Cypress with the &lt;code&gt;DEBUG&lt;/code&gt; environment variable set to &lt;code&gt;cypress:launcher&lt;/code&gt;.</source>
          <target state="translated">ブラウザーランチャーからデバッグログを表示するには、 &lt;code&gt;DEBUG&lt;/code&gt; 環境変数を &lt;code&gt;cypress:launcher&lt;/code&gt; に設定してサイプレスを実行します。</target>
        </trans-unit>
        <trans-unit id="7472673057787f324c25909db2c45c497ecc45b4" translate="yes" xml:space="preserve">
          <source>To see the summary of the code coverage after tests run, run the command below.</source>
          <target state="translated">テスト実行後のコードカバレッジの概要を見るには、以下のコマンドを実行してください。</target>
        </trans-unit>
        <trans-unit id="7ab077afaa1dce1ee157f039e3720c1937173a77" translate="yes" xml:space="preserve">
          <source>To see this in action we&amp;rsquo;ve set up an &lt;a href=&quot;https://github.com/cypress-io/cypress-test-nested-projects&quot;&gt;example repo to demonstrate this here&lt;/a&gt;.</source>
          <target state="translated">この動作を確認するために、&lt;a href=&quot;https://github.com/cypress-io/cypress-test-nested-projects&quot;&gt;サンプルのリポジトリを&lt;/a&gt;設定して、これをここで説明します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
