<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="558ddd63962b514580bf35502e16351fdbe839ab" translate="yes" xml:space="preserve">
          <source>Enabling GitHub integration for a project</source>
          <target state="translated">プロジェクトへの GitHub 統合を有効にする</target>
        </trans-unit>
        <trans-unit id="919551597df30356944cafd212832256a8c0df11" translate="yes" xml:space="preserve">
          <source>Enabling this would mean that for every single command, it would recover from errors, but only after each applicable command timeout was reached. Since timeouts start at 4 seconds (and exceed from there), this means that it would only fail after a long, long time.</source>
          <target state="translated">これを有効にすると、コマンドごとにエラーから回復しますが、該当するコマンドのタイムアウトに達した後にのみ回復することになります。タイムアウトは 4 秒から始まり (そこから超過します)、長い長い時間が経過した後にのみ失敗することを意味します。</target>
        </trans-unit>
        <trans-unit id="7ea8c255859397cb43119394cba347868785c8a5" translate="yes" xml:space="preserve">
          <source>Encode a fixture with Protocol Buffers.</source>
          <target state="translated">プロトコルバッファを使用してフィクスチャをエンコードします。</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="b1adbe164ee63dd9c7f2a4593f50e7b7a78d2933" translate="yes" xml:space="preserve">
          <source>End a chain of commands.</source>
          <target state="translated">一連のコマンドを終了します。</target>
        </trans-unit>
        <trans-unit id="e6f6463c153c032ec57c13a6815c6707e987c657" translate="yes" xml:space="preserve">
          <source>End-to-end tests</source>
          <target state="translated">エンドツーエンドテスト</target>
        </trans-unit>
        <trans-unit id="dc9c95c5e8bc53a4dcd048eabe4c357d20b5606d" translate="yes" xml:space="preserve">
          <source>Enhanced &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; to accept &lt;code&gt;eventually&lt;/code&gt; flag to automatically retry assertions until timeout is reached.</source>
          <target state="translated">タイムアウトに達するまでアサーションを自動的に再試行するために &lt;code&gt;eventually&lt;/code&gt; フラグを受け入れるように&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;を拡張しました。</target>
        </trans-unit>
        <trans-unit id="0431e82b16187349449045f6f9626771e165eb50" translate="yes" xml:space="preserve">
          <source>Ensure element is scrollable. Error if element cannot scroll.</source>
          <target state="translated">要素がスクロール可能であることを確認します。要素がスクロールできないとエラーになります。</target>
        </trans-unit>
        <trans-unit id="ca79022eedafdc9baaf95b2b49cce41fcc1e6eea" translate="yes" xml:space="preserve">
          <source>Ensure it is not animating</source>
          <target state="translated">アニメーション化されていないことを確認する</target>
        </trans-unit>
        <trans-unit id="6bd28c56432380e3f912525f6af0f9c44b907e9b" translate="yes" xml:space="preserve">
          <source>Ensure it is not covered</source>
          <target state="translated">カバーされていないことを確認する</target>
        </trans-unit>
        <trans-unit id="b515507685300afd9564c5ff4e8053ea10beb757" translate="yes" xml:space="preserve">
          <source>Ensure it is not disabled</source>
          <target state="translated">無効になっていないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="22ec6995360904e0d3d9d4c55e765bcd0da7e133" translate="yes" xml:space="preserve">
          <source>Ensure it is not readonly</source>
          <target state="translated">読み取り専用ではないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="cfa8913f432e799e200d2a95b10e32335be7fa56" translate="yes" xml:space="preserve">
          <source>Ensure it is visible</source>
          <target state="translated">見えるようにする</target>
        </trans-unit>
        <trans-unit id="4310731e72eabf26a3eb446e02ef8579a5237f5d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not animating.</source>
          <target state="translated">要素がアニメーションしていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="b1007053ced6553c9fd1f6424bca2c3f220eca1e" translate="yes" xml:space="preserve">
          <source>Ensure the element is not covered.</source>
          <target state="translated">要素がカバーされていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="ccc1610572b26e8b08c6a4c34c737395f4333d8d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not disabled.</source>
          <target state="translated">要素が無効になっていないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="0d19677ee6acc9d5c50e9b91a94c4ed5155f590d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not hidden.</source>
          <target state="translated">要素が隠されていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="368fc70a50a93ced761903d47a41db1f3a8d3a17" translate="yes" xml:space="preserve">
          <source>Ensure the element is not readonly.</source>
          <target state="translated">要素が読み取り専用ではないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="f6926f03c557954977ef6356cd9d7fe3652d0014" translate="yes" xml:space="preserve">
          <source>Ensure the element you are trying to call &lt;code&gt;.focus()&lt;/code&gt; on is a &lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;focusable element&lt;/a&gt;.</source>
          <target state="translated">お電話しようとしている要素を確認してください &lt;code&gt;.focus()&lt;/code&gt; にすることである&lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;フォーカス可能な要素&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="384a6e9623ee89d57bf379a1678db79477e198f0" translate="yes" xml:space="preserve">
          <source>Environment Variable</source>
          <target state="translated">環境変数</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">環境変数</target>
        </trans-unit>
        <trans-unit id="aa508e9bef3af1389a3020abd9c7793caae33c76" translate="yes" xml:space="preserve">
          <source>Environment Variables recipe</source>
          <target state="translated">環境変数レシピ</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">環境変数</target>
        </trans-unit>
        <trans-unit id="fc92a9c3a64a7543ce72d138611445527c755578" translate="yes" xml:space="preserve">
          <source>Environment variables are great at pointing to external services and servers, or storing password or other credentials.</source>
          <target state="translated">環境変数は、外部サービスやサーバーを指し示したり、パスワードやその他の資格情報を保存したりするのに最適です。</target>
        </trans-unit>
        <trans-unit id="94f1956fc009fdce8d624d9e2835373ffa72501f" translate="yes" xml:space="preserve">
          <source>Environment variables are useful when:</source>
          <target state="translated">環境変数は次のようなときに便利です。</target>
        </trans-unit>
        <trans-unit id="f4ce0155cb72d83c03781b384f78b9b2272a0a9e" translate="yes" xml:space="preserve">
          <source>Environment variables can be changed easily - especially when running in CI.</source>
          <target state="translated">環境変数は簡単に変更できます。</target>
        </trans-unit>
        <trans-unit id="30333666567894e35870601003c548b606d3b2c8" translate="yes" xml:space="preserve">
          <source>Environment variables for Semaphore 2.0 are now captured when recording tests to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;#4671&lt;/a&gt;.</source>
          <target state="translated">テストをダッシュ​​ボードに記録するときに、Semaphore 2.0の環境変数が取得されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;＃4671を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3634cf23ae7c404597c456674b568879629b5ba7" translate="yes" xml:space="preserve">
          <source>Environment variables set using &lt;code&gt;Cypress.env&lt;/code&gt;&lt;em&gt;are only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.env&lt;/code&gt; を使用して設定された環境変数&lt;em&gt;は、現在のスペックファイルのスコープ内にのみあります。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd6cbbb19e47188e0f4a16c137fc8b4d198da3be" translate="yes" xml:space="preserve">
          <source>Environment variables that do not match configuration keys will instead be set as regular environment variables for use in your tests with &lt;code&gt;Cypress.env()&lt;/code&gt;.</source>
          <target state="translated">構成キーと一致しない環境変数は、代わりに &lt;code&gt;Cypress.env()&lt;/code&gt; を使用したテストで使用するための通常の環境変数として設定されます。</target>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="translated">エラーメッセージ</target>
        </trans-unit>
        <trans-unit id="6a18f05e0a5a1ef739509b16e48dcb60c926009f" translate="yes" xml:space="preserve">
          <source>Error Recovery</source>
          <target state="translated">エラー回復</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">エラー処理</target>
        </trans-unit>
        <trans-unit id="a7dadcb4736c27170931fdcf7841a1fb8de3a859" translate="yes" xml:space="preserve">
          <source>Error handling for invalid arguments passed to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; have been improved and will now suggest valid arguments that are acceptable.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; に&lt;/a&gt;渡される無効な引数のエラー処理が改善され、受け入れ可能な有効な引数を提案するようになりました。</target>
        </trans-unit>
        <trans-unit id="982e82df0e80e302edc2f8a09a70d717466a86e7" translate="yes" xml:space="preserve">
          <source>Error messages and command messages for &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; have been improved.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; の&lt;/a&gt;エラーメッセージとコマンドメッセージが改善されました。</target>
        </trans-unit>
        <trans-unit id="6109861390104b5df44cf97b43d8f8aa5eebfedf" translate="yes" xml:space="preserve">
          <source>Error messages no longer break within words.</source>
          <target state="translated">エラーメッセージが単語内で途切れなくなりました。</target>
        </trans-unit>
        <trans-unit id="76882bf98cee4086a1074b159fda3d1a5d2cd96c" translate="yes" xml:space="preserve">
          <source>Errors / crashes encountered when updating to newer versions through the app should be fixed now.</source>
          <target state="translated">アプリを介して新しいバージョンにアップデートする際に発生するエラー/クラッシュは、現在修正されているはずです。</target>
        </trans-unit>
        <trans-unit id="854f93a83e75f7d2544802812315f4ac785a5e0a" translate="yes" xml:space="preserve">
          <source>Errors coming from plugins now display correctly in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;#945&lt;/a&gt;.</source>
          <target state="translated">プラグインからのエラーがテストランナーで正しく表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;＃945を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4c711fa24b5948b08ce83b5f001b7e2dc18357dd" translate="yes" xml:space="preserve">
          <source>Errors from your plugins &lt;em&gt;will not crash&lt;/em&gt; Cypress.</source>
          <target state="translated">プラグインからのエラーはサイプレスを&lt;em&gt;クラッシュさせません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5add43a5bd5039885f5128e025a33fe0f420e4c4" translate="yes" xml:space="preserve">
          <source>Errors reading / writing &lt;code&gt;cypress.json&lt;/code&gt; on project add are now displayed inline.</source>
          <target state="translated">プロジェクトの追加時に &lt;code&gt;cypress.json&lt;/code&gt; の読み取り/書き込みエラーがインラインで表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="4d11088b337bf194afbbba34e3461bb6fd238912" translate="yes" xml:space="preserve">
          <source>Especially useful for CI environments.</source>
          <target state="translated">特にCI環境では便利です。</target>
        </trans-unit>
        <trans-unit id="c2c87aeb3c9446cb9afda9709099fc6367e9171f" translate="yes" xml:space="preserve">
          <source>Even a single end-to-end test can cover a lot of the application code. For example, let&amp;rsquo;s run the following test that adds a few items, then marks one of them as completed.</source>
          <target state="translated">単一のエンドツーエンドのテストでさえ、多くのアプリケーションコードをカバーできます。たとえば、いくつかの項目を追加し、そのうちの1つを完了としてマークする次のテストを実行してみましょう。</target>
        </trans-unit>
        <trans-unit id="070e5c4e1df907c99cad4f5f60301bb41273abf7" translate="yes" xml:space="preserve">
          <source>Even better, we can drill down into the individual source files to see what code we missed. In our example application, the main state logic is in the &lt;code&gt;src/reducers/todos.js&lt;/code&gt; file. Let&amp;rsquo;s see the code coverage in this file:</source>
          <target state="translated">さらに良いことに、個々のソースファイルにドリルダウンして、見落としたコードを確認できます。このサンプルアプリケーションでは、メインの状態ロジックは &lt;code&gt;src/reducers/todos.js&lt;/code&gt; ファイルにあります。このファイルのコードカバレッジを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="316c07239617168f09bbce549bb637e294cdddb8" translate="yes" xml:space="preserve">
          <source>Even if you decide to skip using a 3rd party image storage and comparison service, you can still perform visual testing. Follow the example &lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Visual Regression testing with Cypress and cypress-image-snapshot&lt;/a&gt; tutorial and do it all yourself.</source>
          <target state="translated">サードパーティの画像保存および比較サービスの使用をスキップすることを決定した場合でも、視覚的なテストを実行できます。&lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Cypressおよびcypress-image-snapshot&lt;/a&gt;チュートリアルを使用した視覚回帰テストの例に従って、すべて自分で実行してください。</target>
        </trans-unit>
        <trans-unit id="e7ca4e8e12e18c02a22ac44bcb7517ef6ada4084" translate="yes" xml:space="preserve">
          <source>Even if your project is JavaScript only, the JavaScript specs can know about the new command by referencing the file using the special tripple slash &lt;code&gt;reference path&lt;/code&gt; comment.</source>
          <target state="translated">プロジェクトがJavaScriptのみの場合でも、JavaScript仕様では、特別なトリプルスラッシュ &lt;code&gt;reference path&lt;/code&gt; コメントを使用してファイルを参照することにより、新しいコマンドについて知ることができます。</target>
        </trans-unit>
        <trans-unit id="34febeff692095a91412c9c2164509300bda3cb0" translate="yes" xml:space="preserve">
          <source>Even more - action commands will automatically wait for their element to reach an &lt;a href=&quot;interacting-with-elements&quot;&gt;actionable state&lt;/a&gt; before failing.</source>
          <target state="translated">さらに-アクションコマンドは、要素が&lt;a href=&quot;interacting-with-elements&quot;&gt;アクション可能な状態&lt;/a&gt;になるまで自動的に待機してから失敗します。</target>
        </trans-unit>
        <trans-unit id="5e33674133df3ccb1942dae043fe37b25ee9bc2c" translate="yes" xml:space="preserve">
          <source>Even the &lt;code&gt;Initiator&lt;/code&gt; is included, which is a stack trace to what caused the XHR to be sent.</source>
          <target state="translated">でも、 &lt;code&gt;Initiator&lt;/code&gt; 送信されるようにXHRを引き起こしたものにスタックトレースである、含まれています。</target>
        </trans-unit>
        <trans-unit id="b65e02a9c75ae05082f82517ba5d146b4be79ef3" translate="yes" xml:space="preserve">
          <source>Even then, it&amp;rsquo;s still possible a WebSocket message could come in&amp;hellip; so 5 minutes!</source>
          <target state="translated">それでも、WebSocketメッセージが届く可能性はあります&amp;hellip;5分です！</target>
        </trans-unit>
        <trans-unit id="eb047f8f50813fbd685a9d55a025552dce04a4fe" translate="yes" xml:space="preserve">
          <source>Even then, not enough, it&amp;rsquo;s possible a &lt;code&gt;setTimeout&lt;/code&gt; could trigger&amp;hellip; 60 minutes.</source>
          <target state="translated">それでも十分ではありませんが、 &lt;code&gt;setTimeout&lt;/code&gt; がトリガーする可能性があります&amp;hellip;60分。</target>
        </trans-unit>
        <trans-unit id="6aaba616433654358f7d68d07e61e99aed209f2d" translate="yes" xml:space="preserve">
          <source>Even though Cypress runs in the browser, it automatically makes this property available for use in your tests.</source>
          <target state="translated">Cypressはブラウザで動作しているにもかかわらず、このプロパティを自動的にテストで使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="25bd6c11f0c963778ec1e7e1fc7222fe8ad6ee0e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Age&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements over &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">にもかかわらず、 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; の最も深い「年齢」を含む要素、サイプレスの利回りである &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 以上の要素 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16a3ff57e8669d6ebb647842dac8efa08438293e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Search&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans.</source>
          <target state="translated">にもかかわらず、 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; の「検索」が含まれ、最も深い要素、サイプレスの利回りである &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; スパンにわたる要素。</target>
        </trans-unit>
        <trans-unit id="74d1d5127742b8f47d6030fa661dcfd34932aea1" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Sign Out&amp;rdquo;, Cypress yields anchor elements over spans.</source>
          <target state="translated">にもかかわらず、 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 「ログアウト」が含まれ、最も深い要素である、サイプレスは、スパンを超えるアンカー要素を生成します。</target>
        </trans-unit>
        <trans-unit id="ec3f99a18cc580ff52b143719737d0bc996537af" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains a &amp;ldquo;4&amp;rdquo;, Cypress automatically yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans because of its &lt;a href=&quot;#Preferences&quot;&gt;preferred element order&lt;/a&gt;.</source>
          <target state="translated">にもかかわらず &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 「4」を含む最も深い要素である、サイプレス自動的収率 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 、そのスパンの上の要素&lt;a href=&quot;#Preferences&quot;&gt;の好ましい要素の順序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d5310bf2439662720de316fb2282fea56d8b3b7" translate="yes" xml:space="preserve">
          <source>Even though we haven&amp;rsquo;t written any tests yet - that&amp;rsquo;s okay - let&amp;rsquo;s click on &lt;code&gt;sample_spec.js&lt;/code&gt; and watch Cypress launch your browser.</source>
          <target state="translated">テストはまだ作成していませんが、問題ありません &lt;code&gt;sample_spec.js&lt;/code&gt; をクリックして、サイプレスがブラウザーを起動するのを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="d2e7b642f1543fd59199a0e516117870146d988d" translate="yes" xml:space="preserve">
          <source>Even though we return a string in our test, Cypress automatically figures out that you&amp;rsquo;ve queued commands above and does not end the test until all cy commands have finished.</source>
          <target state="translated">テストでは文字列を返しますが、サイプレスは上記のコマンドをキューに入れたことを自動的に判断し、すべてのcyコマンドが完了するまでテストを終了しません。</target>
        </trans-unit>
        <trans-unit id="538a7cffc1912098499e098166d1acdfe6a5783e" translate="yes" xml:space="preserve">
          <source>Even when tests fail, the &lt;code&gt;Promise&lt;/code&gt; still resolves with the test results. The &lt;code&gt;Promise&lt;/code&gt; is only rejected if Cypress cannot run for some reason; for example if a binary has not been installed or it cannot find a module dependency. In that case, the &lt;code&gt;Promise&lt;/code&gt; will be rejected with a detailed error.</source>
          <target state="translated">テストが失敗した場合でも、 &lt;code&gt;Promise&lt;/code&gt; はテスト結果で解決します。 &lt;code&gt;Promise&lt;/code&gt; サイプレスが何らかの理由で実行できない場合にのみ拒否されます。たとえば、バイナリがインストールされていない場合や、モジュールの依存関係が見つからない場合などです。その場合、 &lt;code&gt;Promise&lt;/code&gt; は詳細なエラーで拒否されます。</target>
        </trans-unit>
        <trans-unit id="83e58ad59937dd85431ce7edc11b58f8d769de48" translate="yes" xml:space="preserve">
          <source>Even without adding an assertion, we know that everything is okay! This is because many of Cypress&amp;rsquo; commands are built to fail if they don&amp;rsquo;t find what they&amp;rsquo;re expecting to find. This is known as a &lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertion&lt;/a&gt;.</source>
          <target state="translated">アサーションを追加しなくても、すべてが大丈夫であることがわかります。これは、サイプレスのコマンドの多くが、期待通りのものが見つからない場合に失敗するように構築されているためです。これは、&lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;デフォルトアサーション&lt;/a&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="cba520496df229530fa8c523fecb833a3c475bcb" translate="yes" xml:space="preserve">
          <source>Even your non-technical collaborators can appreciate the way this reads!</source>
          <target state="translated">技術者ではない協力者でも、この読み方を評価することができます。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="d9a0263e8f89e8508419dc7101a0fe1b909f31d6" translate="yes" xml:space="preserve">
          <source>Event Cancellation</source>
          <target state="translated">イベントのキャンセルについて</target>
        </trans-unit>
        <trans-unit id="17ee02f7ce9b63351840d187299d0f76b5f9ece3" translate="yes" xml:space="preserve">
          <source>Event Firing</source>
          <target state="translated">イベント射撃</target>
        </trans-unit>
        <trans-unit id="b21caf606a0e2496ef0f5a053cbe76bec439daaf" translate="yes" xml:space="preserve">
          <source>Event Types</source>
          <target state="translated">イベントの種類</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="82c1c6b3f4b539d9a216b58656cd339328dddc4b" translate="yes" xml:space="preserve">
          <source>Events that are fired:</source>
          <target state="translated">クビになるイベント。</target>
        </trans-unit>
        <trans-unit id="da52eba1bd92bb873eb55802ea0324199e38da3c" translate="yes" xml:space="preserve">
          <source>Events that fire</source>
          <target state="translated">火災が発生するイベント</target>
        </trans-unit>
        <trans-unit id="e9d48c3fa29cd1b85026a0bddc44e28912df51d7" translate="yes" xml:space="preserve">
          <source>Events that should not fire on non input types such as elements with &lt;code&gt;tabindex&lt;/code&gt; do not fire their &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt; events. Only typing into elements which cause the actual value or text to change will fire those events.</source>
          <target state="translated">&lt;code&gt;tabindex&lt;/code&gt; を持つ要素などの非入力タイプで発生してはならないイベントは、 &lt;code&gt;textInput&lt;/code&gt; または &lt;code&gt;input&lt;/code&gt; イベントを発生しません。実際の値またはテキストを変更させる要素に入力するだけで、これらのイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="d3c9763723437cb0418c9553bac2a22f39077299" translate="yes" xml:space="preserve">
          <source>Events that were &lt;code&gt;defaultPrevented&lt;/code&gt; may prevent other events from firing and those will show up as empty. For instance, canceling &lt;code&gt;keydown&lt;/code&gt; will not fire &lt;code&gt;keypress&lt;/code&gt; or &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;, but will fire &lt;code&gt;keyup&lt;/code&gt; (which matches the spec).</source>
          <target state="translated">&lt;code&gt;defaultPrevented&lt;/code&gt; だったイベントは、他のイベントが発生するのを妨げ、それらは空として表示されます。例えば、キャンセル &lt;code&gt;keydown&lt;/code&gt; 火災ではないであろう &lt;code&gt;keypress&lt;/code&gt; 又は &lt;code&gt;textInput&lt;/code&gt; または &lt;code&gt;input&lt;/code&gt; が、発火する &lt;code&gt;keyup&lt;/code&gt; （仕様と一致します）。</target>
        </trans-unit>
        <trans-unit id="2bb4bcadb624b3f1c5ccf23432f4522d0f284974" translate="yes" xml:space="preserve">
          <source>Every custom command you write is generally an abstraction over a series of internal commands. That means you and your team members exert much more mental effort to understand what your custom command does.</source>
          <target state="translated">あなたが書くすべてのカスタムコマンドは、一般的に一連の内部コマンドを抽象化したものです。つまり、あなたとあなたのチームメンバーは、カスタムコマンドが何をするのかを理解するために、より多くの精神的な努力をしなければならないということです。</target>
        </trans-unit>
        <trans-unit id="6eee2af9481b18382f2ed15e769db1e4b28932dd" translate="yes" xml:space="preserve">
          <source>Every source file but 1 is covered at 100%. We can have great confidence in our application, and safely refactor the code knowing that we have a robust set of end-to-end tests.</source>
          <target state="translated">1つを除くすべてのソースファイルは100%カバーされています。私たちは、アプリケーションに大きな自信を持っており、エンドツーエンドのテストの堅牢なセットを持っていることを知っているので、コードを安全にリファクタリングすることができます。</target>
        </trans-unit>
        <trans-unit id="d130c3bba2c7cd2cc3eb07249e9d555f452fd6e3" translate="yes" xml:space="preserve">
          <source>Every test you write will include selectors for elements. To save yourself a lot of headaches, you should write selectors that are resilient to changes.</source>
          <target state="translated">あなたが書くすべてのテストには、要素のセレクタが含まれています。多くの頭痛の種を避けるために、変化に強いセレクタを書くべきです。</target>
        </trans-unit>
        <trans-unit id="40fa7455656b959a33b81cf03ae0e5b3c00d8df5" translate="yes" xml:space="preserve">
          <source>Every time your tests run, you&amp;rsquo;d have to work out the complexity around starting an already running web server.</source>
          <target state="translated">テストを実行するたびに、すでに実行中のWebサーバーの起動に関する複雑さを解決する必要があります。</target>
        </trans-unit>
        <trans-unit id="f5e54e38fa222d3ef6e281ccb610ecd33efb6668" translate="yes" xml:space="preserve">
          <source>Everything else; this includes, but isn&amp;rsquo;t limited to, the following:</source>
          <target state="translated">ほかのすべて; これには次のものが含まれますが、これらに限定されません。</target>
        </trans-unit>
        <trans-unit id="b1f2d5208c5c81ab49f2946d8ace5a2b336fa79c" translate="yes" xml:space="preserve">
          <source>Everything except for the &lt;code&gt;cypress driver&lt;/code&gt; is now minified.</source>
          <target state="translated">&lt;code&gt;cypress driver&lt;/code&gt; を除くすべてが縮小されました。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="cda106d93dbff058312ac5299adcb6cbbf071eb0" translate="yes" xml:space="preserve">
          <source>Example #1: Default Assertion</source>
          <target state="translated">例1:デフォルトのアサーション</target>
        </trans-unit>
        <trans-unit id="d3646043c0bbbc4ecbb7db5f6f77948b176d699b" translate="yes" xml:space="preserve">
          <source>Example #1: Existence and Actionability</source>
          <target state="translated">例1:存在感と行動力</target>
        </trans-unit>
        <trans-unit id="7f2c071addd085d3b7fb47c324ea0c508644162d" translate="yes" xml:space="preserve">
          <source>Example #2: Additional Assertions</source>
          <target state="translated">例2:追加のアサーション</target>
        </trans-unit>
        <trans-unit id="4cf4b889f372521e894a51bca1730c51da276fcc" translate="yes" xml:space="preserve">
          <source>Example #2: Reversing the Default Assertion</source>
          <target state="translated">例2:デフォルトアサーションの反転</target>
        </trans-unit>
        <trans-unit id="75ce43a785a0bad5e977237a8ef35938986ac4a3" translate="yes" xml:space="preserve">
          <source>Example #3: Modifying Timeouts</source>
          <target state="translated">例3:タイムアウトの変更</target>
        </trans-unit>
        <trans-unit id="cb0f113118ec1dd5f83253b2ddd81ed3dd43ce78" translate="yes" xml:space="preserve">
          <source>Example #3: Other Default Assertions</source>
          <target state="translated">例3:その他のデフォルトアサーション</target>
        </trans-unit>
        <trans-unit id="e20fe15406406c1193750bd9bd3a0aee71cb54ed" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;.travis.yml&lt;/code&gt; config file</source>
          <target state="translated">&lt;code&gt;.travis.yml&lt;/code&gt; 構成ファイルの例</target>
        </trans-unit>
        <trans-unit id="1871dd0e29111f57e365587213d50fd672171e1d" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file</source>
          <target state="translated">&lt;code&gt;circle.yml&lt;/code&gt; v2設定ファイルの例</target>
        </trans-unit>
        <trans-unit id="95e4f7e6b45a07a97f456a3f2cf9f253a8e8ab02" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file with &lt;code&gt;yarn&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yarn&lt;/code&gt; &lt;code&gt;circle.yml&lt;/code&gt; v2構成ファイルの例</target>
        </trans-unit>
        <trans-unit id="bc1515e6fa46ada277f22dc81464579676446a91" translate="yes" xml:space="preserve">
          <source>Example Config</source>
          <target state="translated">設定例</target>
        </trans-unit>
        <trans-unit id="4e8bfdee37016dc05dc3033eca4f4fa6aeac9298" translate="yes" xml:space="preserve">
          <source>Example Project</source>
          <target state="translated">プロジェクト例</target>
        </trans-unit>
        <trans-unit id="fa59e385a18703b72fb26ff502d8fc0c36eb16bf" translate="yes" xml:space="preserve">
          <source>Example below first asserts that there are 3 elements, and then checks the text content of each one.</source>
          <target state="translated">以下の例では、まず3つの要素があることを主張し、それぞれの要素のテキスト内容を確認しています。</target>
        </trans-unit>
        <trans-unit id="67013470cce4eefed122db16583e1484bfc70985" translate="yes" xml:space="preserve">
          <source>Example below first asserts that there are 3 elements, and then checks the text contents of each one.</source>
          <target state="translated">以下の例では、まず3つの要素があることを主張し、それぞれの要素のテキスト内容を確認しています。</target>
        </trans-unit>
        <trans-unit id="6c1bc8d0049021fee3c658cec1a5f287f38659ad" translate="yes" xml:space="preserve">
          <source>Example fixture is automatically created with every project.</source>
          <target state="translated">フィクスチャの例は、プロジェクトごとに自動的に作成されます。</target>
        </trans-unit>
        <trans-unit id="c1c84102101b31e7895a904c1ecf62219bfb13a9" translate="yes" xml:space="preserve">
          <source>Example of accessing insecure content</source>
          <target state="translated">安全でないコンテンツにアクセスした例</target>
        </trans-unit>
        <trans-unit id="687ea2dc8b338b1a173b77171b0ee6d2daa03308" translate="yes" xml:space="preserve">
          <source>Example of checking a hidden element</source>
          <target state="translated">隠し要素をチェックする例</target>
        </trans-unit>
        <trans-unit id="879f79211906adc49a6382606e537e73631e018c" translate="yes" xml:space="preserve">
          <source>Example of clicking on a hidden element</source>
          <target state="translated">隠し要素をクリックする例</target>
        </trans-unit>
        <trans-unit id="a72d714d0391ae914eb6abd8df5e7d50eaa9c8a5" translate="yes" xml:space="preserve">
          <source>Example of showing an element in order to perform action</source>
          <target state="translated">アクションを行うために要素を表示する例</target>
        </trans-unit>
        <trans-unit id="3e4c9ab1c6a1a122f79375261c0c3e58b80fa3a4" translate="yes" xml:space="preserve">
          <source>Example project &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvc custom commands&lt;/a&gt; uses custom commands to avoid boilerplate code.</source>
          <target state="translated">サンプルプロジェクト&lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvcカスタムコマンド&lt;/a&gt;は、ボイラープレートコードを回避するためにカスタムコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="cc604bfa71e82620908be6522acdac0ccf013433" translate="yes" xml:space="preserve">
          <source>Example projects</source>
          <target state="translated">プロジェクト例</target>
        </trans-unit>
        <trans-unit id="c73d9ecb9b954f124575aed910e40cb5c40c69cb" translate="yes" xml:space="preserve">
          <source>Example support files are now automatically created with every project.</source>
          <target state="translated">サンプルサポートファイルは、すべてのプロジェクトで自動的に作成されるようになりました。</target>
        </trans-unit>
        <trans-unit id="fbed259729114e24d3a96eb32f2bfe670fb1223b" translate="yes" xml:space="preserve">
          <source>Example using Q</source>
          <target state="translated">Qを使用した例</target>
        </trans-unit>
        <trans-unit id="7634761bc3fbdbca12db3a4aa128da7bf12da86d" translate="yes" xml:space="preserve">
          <source>Example using bluebird</source>
          <target state="translated">ブルーバードを使用した例</target>
        </trans-unit>
        <trans-unit id="c1aa442bf16eade0108fa19c3b02b6ed1bb1e93e" translate="yes" xml:space="preserve">
          <source>Example using jQuery deferred&amp;rsquo;s</source>
          <target state="translated">jQuery Deferredの使用例</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="74ee3363c3af54336f30ee9bf21c6e43f2077a43" translate="yes" xml:space="preserve">
          <source>Examples of child commands:</source>
          <target state="translated">子コマンドの例。</target>
        </trans-unit>
        <trans-unit id="880599b2a0d02b71b09ce07a47b86cc30497c14f" translate="yes" xml:space="preserve">
          <source>Examples of dual commands:</source>
          <target state="translated">デュアルコマンドの例。</target>
        </trans-unit>
        <trans-unit id="d204b0df57a68de79aef7f1fd315a2e7b2a9a438" translate="yes" xml:space="preserve">
          <source>Examples of parent commands:</source>
          <target state="translated">親コマンドの例。</target>
        </trans-unit>
        <trans-unit id="8c0d3ed4241015f9415aadcca1eb538de8674009" translate="yes" xml:space="preserve">
          <source>Examples of test cases that will error due to superdomain limitations</source>
          <target state="translated">スーパードメインの制限によりエラーになるテストケースの例</target>
        </trans-unit>
        <trans-unit id="aff42aefbbc0310909afd6be7b156eb54bb540f2" translate="yes" xml:space="preserve">
          <source>Examples of uses for cross-origin iframes</source>
          <target state="translated">クロスオリジンiframeの使用例</target>
        </trans-unit>
        <trans-unit id="33e9034158a2364c3c5b98c0752190049b235fcf" translate="yes" xml:space="preserve">
          <source>Examples of what Cypress does under the hood:</source>
          <target state="translated">サイプレスがフードの下でやっていることの例</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="22245bf552f5d1e2a656f31f439a800f6c9f57de" translate="yes" xml:space="preserve">
          <source>Excluding and Including Tests</source>
          <target state="translated">試験の除外・包含</target>
        </trans-unit>
        <trans-unit id="2205d33617d3487ee53d2f99d5ea8fab62b927bf" translate="yes" xml:space="preserve">
          <source>Execute a system command.</source>
          <target state="translated">システムコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="293192e5f7a60a5cbe28b76ed29b72afd3ab0c94" translate="yes" xml:space="preserve">
          <source>Execute code in &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node&lt;/a&gt; via the &lt;code&gt;task&lt;/code&gt; plugin event.</source>
          <target state="translated">&lt;code&gt;task&lt;/code&gt; プラグインイベントを介して&lt;a href=&quot;https://nodejs.org/&quot;&gt;ノードで&lt;/a&gt;コードを実行します。</target>
        </trans-unit>
        <trans-unit id="90e52bd11234a2f4997a4cb3136a71f017d930d1" translate="yes" xml:space="preserve">
          <source>Execution context</source>
          <target state="translated">実行コンテキスト</target>
        </trans-unit>
        <trans-unit id="284fa58481d3e55b48c5f0000e3ff2086a2419ac" translate="yes" xml:space="preserve">
          <source>Existence</source>
          <target state="translated">Existence</target>
        </trans-unit>
        <trans-unit id="588d3efad476bd665ea1113c22f9fa826dddbdf5" translate="yes" xml:space="preserve">
          <source>Expand an array into multiple arguments.</source>
          <target state="translated">配列を複数の引数に展開します。</target>
        </trans-unit>
        <trans-unit id="517e48c755df8c558e3a0004f395ad1b4a6a779a" translate="yes" xml:space="preserve">
          <source>Expand the array of aliased routes</source>
          <target state="translated">エイリアス化されたルートの配列を展開する</target>
        </trans-unit>
        <trans-unit id="c2b75ea762de66715d0880a384408dc20c0b3c27" translate="yes" xml:space="preserve">
          <source>Expand the array of cookies</source>
          <target state="translated">クッキーの配列を展開する</target>
        </trans-unit>
        <trans-unit id="9b7f7300fb810319c6b2aaae1a6dd6698c73be11" translate="yes" xml:space="preserve">
          <source>Expanded &lt;code&gt;matcher&lt;/code&gt; and &lt;code&gt;matchers&lt;/code&gt; arguments to assist in filtering browsers.</source>
          <target state="translated">ブラウザのフィルタリングを支援するために、 &lt;code&gt;matcher&lt;/code&gt; と &lt;code&gt;matchers&lt;/code&gt; 引数を拡張しました。</target>
        </trans-unit>
        <trans-unit id="bafef844945eb3c16eb95dc63d90a555f95ac65d" translate="yes" xml:space="preserve">
          <source>Expected Binary Name(s)</source>
          <target state="translated">期待されるバイナリ名</target>
        </trans-unit>
        <trans-unit id="5ee30f777a419d0761dc9182ee6ecf7d6de239b9" translate="yes" xml:space="preserve">
          <source>Expected Bundle Identifier</source>
          <target state="translated">期待されるバンドル識別子</target>
        </trans-unit>
        <trans-unit id="a66c03cd448547b57e1fca30f9bcec2391bbb658" translate="yes" xml:space="preserve">
          <source>Expected Executable</source>
          <target state="translated">期待される実行可能</target>
        </trans-unit>
        <trans-unit id="e26c182298228cb8abbe3f2ddd9eb69638d5d6ae" translate="yes" xml:space="preserve">
          <source>Expected Path</source>
          <target state="translated">期待される経路</target>
        </trans-unit>
        <trans-unit id="a23b41f77d0fb81d072c86413aa54d927a01952b" translate="yes" xml:space="preserve">
          <source>Explicit Subjects</source>
          <target state="translated">明示的な主題</target>
        </trans-unit>
        <trans-unit id="3d69f6e534c93f0e5d5c0e0762b1a67f56a0e324" translate="yes" xml:space="preserve">
          <source>Explicit assertions are great when you want to:</source>
          <target state="translated">明示的なアサーションは、そうしたい時には素晴らしいです。</target>
        </trans-unit>
        <trans-unit id="a6bc7ed5c90afc6a09277e9af44f3ba18a6f6940" translate="yes" xml:space="preserve">
          <source>Export as `CYPRESS_*`</source>
          <target state="translated">としてエクスポートします。</target>
        </trans-unit>
        <trans-unit id="0ee305a454b9b7fc3f84b4d3faf7ab6165973e05" translate="yes" xml:space="preserve">
          <source>Export cypress env variables from the command line</source>
          <target state="translated">コマンドラインから cypress 環境変数をエクスポート</target>
        </trans-unit>
        <trans-unit id="5aa226bf009dca3cc6b371340f08ea1acef8bbf8" translate="yes" xml:space="preserve">
          <source>Expose data stores (like in Redux) so you can programmatically alter the state of your application directly from your test code.</source>
          <target state="translated">(Redux のような)データストアを公開して、テストコードから直接アプリケーションの状態をプログラムで変更できるようにします。</target>
        </trans-unit>
        <trans-unit id="7f5899935f519c40597972d8a3546b6c97a34e4b" translate="yes" xml:space="preserve">
          <source>Exposed &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt;&lt;code&gt;Cypress.isCy()&lt;/code&gt;&lt;/a&gt; method to check if a value is a valid instance of &lt;code&gt;cy&lt;/code&gt; or a &lt;code&gt;cy&lt;/code&gt; chainable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;#3822&lt;/a&gt;.</source>
          <target state="translated">値が &lt;code&gt;cy&lt;/code&gt; の有効なインスタンスであるか &lt;code&gt;cy&lt;/code&gt; チェーン可能であるかをチェックするための&lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt; &lt;code&gt;Cypress.isCy()&lt;/code&gt; &lt;/a&gt;メソッドを公開しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;＃3822を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="97816fcca80f877e1dd8c8d4a9b6746975f3cd76" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; which holds the logic for determining an element&amp;rsquo;s visibility. Modify this to change the rules.</source>
          <target state="translated">要素の可視性を決定するためのロジックを保持する公開された &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; 。これを変更してルールを変更します。</target>
        </trans-unit>
        <trans-unit id="34f1aaf7cb56bdc17b80540dea6988478e8416f6" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;visitTimeout&lt;/code&gt; and &lt;code&gt;requestTimeout&lt;/code&gt;&lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">公開された &lt;code&gt;visitTimeout&lt;/code&gt; および &lt;code&gt;requestTimeout&lt;/code&gt; &lt;a href=&quot;configuration&quot;&gt;構成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a6541ac0205de7e153f9bdde35833e5943314f3" translate="yes" xml:space="preserve">
          <source>Exposing Cypress Binary should no longer be necessary when cypress is locally installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;#379&lt;/a&gt;.</source>
          <target state="translated">サイプレスがローカルにインストールされている場合、サイプレスバイナリを公開する必要がなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;＃379を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e718c76626048f58de044a2f8c12f3bab9df0749" translate="yes" xml:space="preserve">
          <source>Extending other testing frameworks</source>
          <target state="translated">他のテストフレームワークを拡張する</target>
        </trans-unit>
        <trans-unit id="aff31dec6da157357b783dcfac904369b48b36fc" translate="yes" xml:space="preserve">
          <source>Extension policies: &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</source>
          <target state="translated">拡張ポリシー： &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="494df28871f4062b348ebe4435b410b3dce90c80" translate="yes" xml:space="preserve">
          <source>Extensive memory profiling has been done and Cypress has implemented several strategies for aggressively causing garbage collection. The ebugging tools (which allow you to walk back in time through DOM snapshots, or access objects from previous tests) could exhaust all available emory in previous versions. This likely never affected most users, but if a user ran 1000&amp;rsquo;s of tests (which have been written in Cypress) it ould bomb. Now Cypress only stores data for up to 50 tests, and will begin purging data past that. When run in the terminal, Cypress doesn&amp;rsquo;t apply any of its debugging tools, so CI will be unaffected.</source>
          <target state="translated">広範なメモリプロファイリングが行われ、サイプレスは積極的にガベージコレクションを引き起こすためのいくつかの戦略を実装しました。デバッグツール（DOMスナップショットをさかのぼったり、以前のテストのオブジェクトにアクセスしたりできる）は、以前のバージョンで利用可能なすべてのエモリーを使い果たしてしまう可能性があった。これはおそらくほとんどのユーザーに影響を与えることはありませんが、ユーザーが1000個のテスト（サイプレスで作成されたもの）を実行した場合、爆弾が発生する可能性があります。現在、サイプレスは最大50のテストのデータのみを保存し、それを超えるデータのパージを開始します。ターミナルで実行する場合、サイプレスはそのデバッグツールを適用しないため、CIは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="d7470bcae7dc95c1672e3376b1d6f69778f458ce" translate="yes" xml:space="preserve">
          <source>External Navigation</source>
          <target state="translated">外部ナビゲーション</target>
        </trans-unit>
        <trans-unit id="2af280979e642a405f24bf2e6b6503a218b35f10" translate="yes" xml:space="preserve">
          <source>Extra whitespace and quotations are now stripped from the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to help prevent some unexpected results when set in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;#4506&lt;/a&gt;.</source>
          <target state="translated">Windowsで設定したときに予期しない結果が発生するのを防ぐために、余分な空白と引用符が &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 環境変数から削除されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;＃4506を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="89067fa664cb37a8a9e475b99e5cf190db554dca" translate="yes" xml:space="preserve">
          <source>Failing a hook will no longer continue to count the duration forever.</source>
          <target state="translated">フックを失敗すると、永遠に持続時間をカウントし続けることができなくなります。</target>
        </trans-unit>
        <trans-unit id="c940af38cb35879503e53721ac8014d87ca75a1d" translate="yes" xml:space="preserve">
          <source>Failing tests which become passing will automatically collapse again.</source>
          <target state="translated">合格となった試験に失敗すると、また自動的に崩れてしまいます。</target>
        </trans-unit>
        <trans-unit id="e9c4bd1d829292dc8565f6007a335c96eb1f722c" translate="yes" xml:space="preserve">
          <source>Failure messages are much more precise.</source>
          <target state="translated">失敗のメッセージは、より正確なものになります。</target>
        </trans-unit>
        <trans-unit id="3eec15825d37016fd28fda8986cbc917e7a33c68" translate="yes" xml:space="preserve">
          <source>Failures</source>
          <target state="translated">Failures</target>
        </trans-unit>
        <trans-unit id="79b1b853fcf18ff708b48a26d6bca547168086f2" translate="yes" xml:space="preserve">
          <source>Fast, &amp;lt; 20ms response times</source>
          <target state="translated">高速、20ms未満の応答時間</target>
        </trans-unit>
        <trans-unit id="8d8701b6c18329b6a2215e2ed7ea8428d157b3ee" translate="yes" xml:space="preserve">
          <source>Fast, easy and reliable visual UI testing with Cypress</source>
          <target state="translated">Cypress を使用した迅速、簡単、信頼性の高いビジュアル UI テスト</target>
        </trans-unit>
        <trans-unit id="b8dd84b887712a47a223e7acb621659657045025" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">他のより深い要素に対する &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; の優先</target>
        </trans-unit>
        <trans-unit id="bf73c4da1a11de431287bb2178a27739b085cd2a" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">他のより深い要素よりも &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; を優先</target>
        </trans-unit>
        <trans-unit id="00bd3404c5abcb1cca7ae893772036a47f83d02b" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">他のより深い要素よりも &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; を優先</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="5df81ffa82179b458e1d55e350db9d88805a69b2" translate="yes" xml:space="preserve">
          <source>Features:</source>
          <target state="translated">Features:</target>
        </trans-unit>
        <trans-unit id="b2da05997204759c0568480dcc216c1f835ad8c5" translate="yes" xml:space="preserve">
          <source>Feel free to &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;explore these additional logging in&lt;/a&gt; recipes.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;これらの追加のロギングの&lt;/a&gt;レシピを自由に探索してください。</target>
        </trans-unit>
        <trans-unit id="66de98b66dd6c45b26036329406669348c695928" translate="yes" xml:space="preserve">
          <source>Feel free to submit your published plugins to our &lt;a href=&quot;../../plugins/index&quot;&gt;list of plugins&lt;/a&gt;.</source>
          <target state="translated">公開されているプラ​​グインを&lt;a href=&quot;../../plugins/index&quot;&gt;プラグインのリストに&lt;/a&gt;自由に送信してください。</target>
        </trans-unit>
        <trans-unit id="663da9347806aa189f920ceb8b6f5cd33e8f3793" translate="yes" xml:space="preserve">
          <source>File changes</source>
          <target state="translated">ファイルの変更</target>
        </trans-unit>
        <trans-unit id="7687744db8976c35166c825d15906dc94662741b" translate="yes" xml:space="preserve">
          <source>File events</source>
          <target state="translated">ファイルイベント</target>
        </trans-unit>
        <trans-unit id="35c5bd3a1f18fe1dd0f0628bb953a4183220028e" translate="yes" xml:space="preserve">
          <source>File object</source>
          <target state="translated">ファイルオブジェクト</target>
        </trans-unit>
        <trans-unit id="feffac916d35a0e2a6b23d0031377f4f282551f9" translate="yes" xml:space="preserve">
          <source>File system flag as used with &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt;&lt;code&gt;fs.writeFile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt; &lt;code&gt;fs.writeFile&lt;/code&gt; で&lt;/a&gt;使用されるファイルシステムフラグ</target>
        </trans-unit>
        <trans-unit id="e91f50eead81f93d83448a8f1b714b149e54d231" translate="yes" xml:space="preserve">
          <source>File watching is fixed (again) when changing between specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;#1018&lt;/a&gt;.</source>
          <target state="translated">仕様間で変更するときのファイルの監視が（再度）修正されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;＃1018を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867" translate="yes" xml:space="preserve">
          <source>Filename</source>
          <target state="translated">Filename</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="e75c9effd39648002ee3fa4279bf21407b3ca86e" translate="yes" xml:space="preserve">
          <source>Fill in and submit the OSS plan request form.</source>
          <target state="translated">OSSプラン依頼書に必要事項を記入して提出してください。</target>
        </trans-unit>
        <trans-unit id="feb080a9f7cb2c3f7fe88c9ed4be9c41ef934c26" translate="yes" xml:space="preserve">
          <source>Fill in the name of your project (this is only for display purposes and can be changed later).</source>
          <target state="translated">プロジェクトの名前を記入します(これは表示のためだけのもので、後で変更することができます)。</target>
        </trans-unit>
        <trans-unit id="a865659c5e8630a023fa6bf42dbaabaf6c0c4f40" translate="yes" xml:space="preserve">
          <source>Fill in their email and select their &lt;a href=&quot;#User-roles&quot;&gt;role&lt;/a&gt; then click &lt;strong&gt;Invite User&lt;/strong&gt;&lt;em&gt;Note: only &amp;lsquo;owners can give other user&amp;rsquo;s &amp;lsquo;owner&amp;rsquo; access.&lt;/em&gt;</source>
          <target state="translated">メールを入力して&lt;a href=&quot;#User-roles&quot;&gt;役割&lt;/a&gt;を選択し、[ &lt;strong&gt;ユーザーを招待&lt;/strong&gt; ]をクリックします&lt;em&gt;。「所有者のみが他のユーザーの「所有者」にアクセス権を与えることができます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="098832ec24832f68e39ac3c1aa619064c4962e5c" translate="yes" xml:space="preserve">
          <source>Filter DOM element(s) from a set of DOM elements.</source>
          <target state="translated">DOM 要素のセットから DOM 要素をフィルタリングします。</target>
        </trans-unit>
        <trans-unit id="c470d8b4dfda0fe97907fa10ff672d681a05ed1c" translate="yes" xml:space="preserve">
          <source>Filter by text</source>
          <target state="translated">テキストでフィルタリング</target>
        </trans-unit>
        <trans-unit id="923928d715d63bece2975ad3f1107b4d534186ca" translate="yes" xml:space="preserve">
          <source>Filter one or multiple browsers by the browser properties. You can inspect the current browser&amp;rsquo;s properties by using the &lt;a href=&quot;browser&quot;&gt;&lt;code&gt;Cypress.browser&lt;/code&gt;&lt;/a&gt;. Supported properties are:</source>
          <target state="translated">ブラウザのプロパティで1つまたは複数のブラウザをフィルタリングします。&lt;a href=&quot;browser&quot;&gt; &lt;code&gt;Cypress.browser&lt;/code&gt; &lt;/a&gt;を使用して、現在のブラウザのプロパティを調べることができます。サポートされているプロパティは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b50b864ca2457f8d6f9fc854473b9edbbd945cd2" translate="yes" xml:space="preserve">
          <source>Filter the current subject to the elements with the class &amp;lsquo;active&amp;rsquo;</source>
          <target state="translated">現在のサブジェクトを「アクティブ」クラスの要素にフィルターします</target>
        </trans-unit>
        <trans-unit id="a27ab78e842f8d231922bc0a6c4ebfcbe7e1e1e2" translate="yes" xml:space="preserve">
          <source>Filtered out Ajax requests for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.css&lt;/code&gt; files by default.</source>
          <target state="translated">デフォルトで &lt;code&gt;.js&lt;/code&gt; 、 &lt;code&gt;.html&lt;/code&gt; 、 &lt;code&gt;.css&lt;/code&gt; ファイルのAjaxリクエストを除外しました。</target>
        </trans-unit>
        <trans-unit id="ad2cf4e08bb232e200ef4bc511c6b34132810357" translate="yes" xml:space="preserve">
          <source>Final run status (passed, failed, etc)</source>
          <target state="translated">最終的な実行状態(合格、失敗など</target>
        </trans-unit>
        <trans-unit id="688b6ff3fc931c6dd9c36d8b51fdc1ea3590d8a2" translate="yes" xml:space="preserve">
          <source>Finally tracked down and fixed edge case causing empty view to display when tests were not empty. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;#13&lt;/a&gt;</source>
          <target state="translated">最後に追跡され、エッジケースが修正され、テストが空でないときに空のビューが表示されていました。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;＃13&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37a5f5552afd89b23d9c52a20feccb3d490f76b6" translate="yes" xml:space="preserve">
          <source>Finally, we support creating your own custom reporters or using any kind of 3rd party reporter.</source>
          <target state="translated">最後に、独自のカスタムレポーターを作成したり、サードパーティ製のレポーターを使用したりすることができます。</target>
        </trans-unit>
        <trans-unit id="f7e11838bb265e408c3b20a233e6d4ca384ba884" translate="yes" xml:space="preserve">
          <source>Find 5 elements with the given data attribute</source>
          <target state="translated">与えられたデータ属性を持つ5つの要素を探す</target>
        </trans-unit>
        <trans-unit id="92368cf8c0b0b17d5bfdb96f8c843e1b7832f6ce" translate="yes" xml:space="preserve">
          <source>Find all of the &lt;code&gt;.active&lt;/code&gt; element&amp;rsquo;s ancestors until &lt;code&gt;.nav&lt;/code&gt;</source>
          <target state="translated">すべての検索 &lt;code&gt;.active&lt;/code&gt; まで、要素の先祖を &lt;code&gt;.nav&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c541c51d6a1a5c57200fc70b87a281be5d1da8d" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;#nuts&lt;/code&gt; until &lt;code&gt;#veggies&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#veggies&lt;/code&gt; 前から &lt;code&gt;#nuts&lt;/code&gt; までの要素の兄弟をすべて検索します</target>
        </trans-unit>
        <trans-unit id="9f61919f1581dec2bf2d5cf12c24826c0f271991" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;.third&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.third&lt;/code&gt; の前に要素の兄弟をすべて検索します</target>
        </trans-unit>
        <trans-unit id="cf397003d132ad643c0e26fc7fbcf78ecc493ec5" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;#veggies&lt;/code&gt; until &lt;code&gt;#nuts&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#veggies&lt;/code&gt; から &lt;code&gt;#nuts&lt;/code&gt; までの要素の兄弟をすべて検索します</target>
        </trans-unit>
        <trans-unit id="a4d29db1950969e3784a8c02e121a375d800fa05" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.second&lt;/code&gt; に続く要素の兄弟をすべて検索します</target>
        </trans-unit>
        <trans-unit id="81b19f789476d7ab74f3c3a8ad986e98fa7c56fb" translate="yes" xml:space="preserve">
          <source>Find all of the following siblings of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">各李の次の兄弟のすべてを見つけます。クラスを &lt;code&gt;selected&lt;/code&gt; したもののみを保持する</target>
        </trans-unit>
        <trans-unit id="c992ea11a8cf058b4435966e028bb9f7a37ed95f" translate="yes" xml:space="preserve">
          <source>Find all of the previous siblings of each &lt;code&gt;li&lt;/code&gt;. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">各 &lt;code&gt;li&lt;/code&gt; 前の兄弟のすべてを見つけます。クラスを &lt;code&gt;selected&lt;/code&gt; したもののみを保持する</target>
        </trans-unit>
        <trans-unit id="80ac7d74405f965af6b5783c7d44735681a64289" translate="yes" xml:space="preserve">
          <source>Find an element by its selector</source>
          <target state="translated">セレクタで要素を探す</target>
        </trans-unit>
        <trans-unit id="6104679c51c71ca5e3c4c8420302b383f5606442" translate="yes" xml:space="preserve">
          <source>Find an element by its selector.</source>
          <target state="translated">セレクタで要素を検索します。</target>
        </trans-unit>
        <trans-unit id="a0e5a3de1058594e24b5fa9435bc8f8c79a8e5ea" translate="yes" xml:space="preserve">
          <source>Find and click on a button inside the shadow DOM</source>
          <target state="translated">シャドウDOMの中にあるボタンを見つけてクリックします。</target>
        </trans-unit>
        <trans-unit id="7a120e47345559e817051b88761a5acfe8be6f7d" translate="yes" xml:space="preserve">
          <source>Find row with specific cell and confirm other cells in the row</source>
          <target state="translated">特定のセルで行を探し、他のセルを確認する</target>
        </trans-unit>
        <trans-unit id="adfac6dd422443d147406aa7dc4c9bde585b6026" translate="yes" xml:space="preserve">
          <source>Find the 2nd element within the elements</source>
          <target state="translated">要素の中から2番目の要素を探す</target>
        </trans-unit>
        <trans-unit id="4bd1d71d3c4462c2c514b8869c373720f113aefe" translate="yes" xml:space="preserve">
          <source>Find the 2nd from the last element within the elements</source>
          <target state="translated">要素の中から最後の要素から2番目を探す</target>
        </trans-unit>
        <trans-unit id="66febaf0d0deb961859132d85eec19f706c7fd31" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-body&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;post-body&lt;/code&gt; で &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; を見つけます。</target>
        </trans-unit>
        <trans-unit id="d10cbcf8128ccc542cc5f4d349272af73f1982d7" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-title&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;post-title&lt;/code&gt; で &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; を見つけます。</target>
        </trans-unit>
        <trans-unit id="5aa7a7a24fec1dd97f14855f0347bdb63199299d" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;h1&lt;/code&gt; tag, ensure it contains the text &amp;ldquo;My First Post&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;h1&lt;/code&gt; タグを見つけ、「My First Post」というテキストが含まれていることを確認します。</target>
        </trans-unit>
        <trans-unit id="0a629d480b77f87962de841533ac568613cca727" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;input[type='submit']&lt;/code&gt; by value</source>
          <target state="translated">&lt;code&gt;input[type='submit']&lt;/code&gt; を値で検索します</target>
        </trans-unit>
        <trans-unit id="b7c01ef4267a8207f2efc0f895e23cbf8c0c9dab" translate="yes" xml:space="preserve">
          <source>Find the TypeScript definition for the results object in the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;&lt;code&gt;cypress/cli/types&lt;/code&gt; folder&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt; &lt;code&gt;cypress/cli/types&lt;/code&gt; フォルダーで&lt;/a&gt; resultsオブジェクトのTypeScript定義を見つけます。</target>
        </trans-unit>
        <trans-unit id="10df2b3516f7e33c34a15898a97d21e45db73ca2" translate="yes" xml:space="preserve">
          <source>Find the closest element of &lt;code&gt;li.active&lt;/code&gt; with the class &amp;lsquo;nav&amp;rsquo;</source>
          <target state="translated">クラス「nav」で &lt;code&gt;li.active&lt;/code&gt; の最も近い要素を見つけます</target>
        </trans-unit>
        <trans-unit id="9903e70c221c495e32ab6ceb17ffcbc3dd4c75b2" translate="yes" xml:space="preserve">
          <source>Find the closest element of the &lt;code&gt;.error&lt;/code&gt; with the class &amp;lsquo;banner&amp;rsquo;</source>
          <target state="translated">クラス 'banner'で &lt;code&gt;.error&lt;/code&gt; の最も近い要素を見つける</target>
        </trans-unit>
        <trans-unit id="075f836a43dce9616ea5659aa81eaa8ad295ba3f" translate="yes" xml:space="preserve">
          <source>Find the complete CircleCI v2 example with caching and artifact upload in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle&lt;/a&gt; repo.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle&lt;/a&gt;リポジトリで、キャッシュとアーティファクトのアップロードを含む完全なCircleCI v2の例を見つけてください。</target>
        </trans-unit>
        <trans-unit id="d1cc283dc3702c8d3e6d222ab076e9bf3b77445a" translate="yes" xml:space="preserve">
          <source>Find the dropdown-menu and click it</source>
          <target state="translated">ドロップダウンメニューを見つけてクリックします。</target>
        </trans-unit>
        <trans-unit id="ebe6d0a917538cd5b8200bdc5503b9bfd7c54a8a" translate="yes" xml:space="preserve">
          <source>Find the element containing the text &lt;code&gt;Submit&lt;/code&gt;.</source>
          <target state="translated">テキスト &lt;code&gt;Submit&lt;/code&gt; を含む要素を見つけます。</target>
        </trans-unit>
        <trans-unit id="f45aaee6ddbabbbed5ee653102c34f6e299a862f" translate="yes" xml:space="preserve">
          <source>Find the element next to &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.second&lt;/code&gt; の隣の要素を見つけます</target>
        </trans-unit>
        <trans-unit id="b4bab536a6c5451fa8c798585ff1ed23fc2d2733" translate="yes" xml:space="preserve">
          <source>Find the element with content: &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">content： &lt;code&gt;type&lt;/code&gt; の要素を検索します</target>
        </trans-unit>
        <trans-unit id="a9fbb7af5c1b67383d92e9b8b2376530e800a405" translate="yes" xml:space="preserve">
          <source>Find the first &lt;code&gt;li&lt;/code&gt; descendent within a &lt;code&gt;ul&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ul&lt;/code&gt; 内の最初の &lt;code&gt;li&lt;/code&gt; 子孫を見つける</target>
        </trans-unit>
        <trans-unit id="9a5dc13574576534052754b465d51599a18744fe" translate="yes" xml:space="preserve">
          <source>Find the first element containing a number</source>
          <target state="translated">数字を含む最初の要素を見つける</target>
        </trans-unit>
        <trans-unit id="4ffee2601a6f1877a2e04498faf28aaf834aa5e2" translate="yes" xml:space="preserve">
          <source>Find the first element containing some text</source>
          <target state="translated">テキストを含む最初の要素を探す</target>
        </trans-unit>
        <trans-unit id="303d529ce52ae406adef3293db17ef34a6013e64" translate="yes" xml:space="preserve">
          <source>Find the first element with text matching the regular expression</source>
          <target state="translated">正規表現にマッチするテキストを持つ最初の要素を見つける</target>
        </trans-unit>
        <trans-unit id="6ecc00bc5ee2c880ee993d32184cdabaffb6010c" translate="yes" xml:space="preserve">
          <source>Find the link with an href attribute containing the word &amp;ldquo;questions&amp;rdquo; and click it</source>
          <target state="translated">「質問」という単語を含むhref属性のリンクを見つけてクリックします</target>
        </trans-unit>
        <trans-unit id="7b9ad828e76201eaec43c5bd8b7495a6b5e9aa1b" translate="yes" xml:space="preserve">
          <source>Find the previous element of the element with class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; クラスを持つ要素の前の要素を見つけます</target>
        </trans-unit>
        <trans-unit id="b050e5303f0aeff67972b597916c20cb954e472e" translate="yes" xml:space="preserve">
          <source>Find the previous element with a class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; クラスを持つ前の要素を見つけます</target>
        </trans-unit>
        <trans-unit id="f48ae5b1727499efa01b744170218b06cbf5a048" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">各李の次の兄弟を見つけます。クラスを &lt;code&gt;selected&lt;/code&gt; したもののみを保持する</target>
        </trans-unit>
        <trans-unit id="2d913fabe6d31a552f869448ec77af59ce7ab7ef" translate="yes" xml:space="preserve">
          <source>Finding Selectors</source>
          <target state="translated">セレクタを探す</target>
        </trans-unit>
        <trans-unit id="418d4574c491cab5e7bfcd22805c34f1a960026b" translate="yes" xml:space="preserve">
          <source>Fire other Event types.</source>
          <target state="translated">他のイベントタイプを発射します。</target>
        </trans-unit>
        <trans-unit id="3716d23e9ad7315ba3e5e070513375357d405fce" translate="yes" xml:space="preserve">
          <source>Fire the event at a descendent</source>
          <target state="translated">子孫でイベントを発生させる</target>
        </trans-unit>
        <trans-unit id="d0c8fbf533787f205ef74cb4ef685fa5336a95bd" translate="yes" xml:space="preserve">
          <source>Fire the event at the desired coordinates.</source>
          <target state="translated">目的の座標でイベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="b4ee6522335b033249255b4cc1d572993282aafb" translate="yes" xml:space="preserve">
          <source>Firefox</source>
          <target state="translated">Firefox</target>
        </trans-unit>
        <trans-unit id="015fc6ecc28be811b21b9209a8b9e660856657fe" translate="yes" xml:space="preserve">
          <source>Firefox: visit &lt;code&gt;about:config&lt;/code&gt; URL within your Firefox browser to see all available preferences.</source>
          <target state="translated">Firefox：Firefoxブラウザ内の &lt;code&gt;about:config&lt;/code&gt; URLにアクセスして、使用可能なすべての設定を確認してください。</target>
        </trans-unit>
        <trans-unit id="3297c2c690e3329a34b567de00181d54c48fdc24" translate="yes" xml:space="preserve">
          <source>Fires after all your resources have finished loading after a page transition. This fires at the exact same time as a &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onLoad&lt;/code&gt; callback.</source>
          <target state="translated">ページ遷移後にすべてのリソースの読み込みが完了した後に発生します。これは、 &lt;code&gt;cy.visit()&lt;/code&gt; &lt;code&gt;onLoad&lt;/code&gt; コールバックと同時に発生します。</target>
        </trans-unit>
        <trans-unit id="65bcba53d3ddc0803f41e82a2e2197390e4654af" translate="yes" xml:space="preserve">
          <source>Fires after the test and all &lt;strong&gt;afterEach&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt; hooks run.</source>
          <target state="translated">テストの後、すべての&lt;strong&gt;afterEach&lt;/strong&gt;とフックが実行された&lt;strong&gt;後に発生し&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b3b542efbb04e9cc7735acf1c6261c28a91865b0" translate="yes" xml:space="preserve">
          <source>Fires as the page begins to load, but before any of your applications JavaScript has executed. This fires at the exact same time as &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onBeforeLoad&lt;/code&gt; callback. Useful to modify the window on a page transition.</source>
          <target state="translated">ページの読み込みが開始されたときに、アプリケーションのJavaScriptが実行される前に発生します。これは、 &lt;code&gt;cy.visit()&lt;/code&gt; &lt;code&gt;onBeforeLoad&lt;/code&gt; コールバックと同時に発生します。ページ遷移時にウィンドウを変更するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d9f9dd1b33251212c25a404143902e006ee99261" translate="yes" xml:space="preserve">
          <source>Fires before the test and all &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;beforeEach&lt;/strong&gt; hooks run.</source>
          <target state="translated">テストの前とすべての&lt;strong&gt;beforeEach&lt;/strong&gt;フックが実行さ&lt;strong&gt;れる前&lt;/strong&gt;に&lt;strong&gt;発生し&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e3a3efcfbcbc43c00380e65ca6e41d27711c6f1b" translate="yes" xml:space="preserve">
          <source>Fires when a cy command is first invoked and enqueued to be run later. Useful for debugging purposes if you&amp;rsquo;re confused about the order in which commands will execute.</source>
          <target state="translated">cyコマンドが最初に呼び出され、後で実行するためにキューに入れられたときに発生します。コマンドの実行順序がわからない場合に、デバッグ目的で役立ちます。</target>
        </trans-unit>
        <trans-unit id="2dec5789ec4fa855297114ba75e3f8339135c7a5" translate="yes" xml:space="preserve">
          <source>Fires when an uncaught exception occurs in your application. Cypress will fail the test when this fires. Return &lt;code&gt;false&lt;/code&gt; from this event and Cypress will not fail the test. Also useful for debugging purposes because the actual &lt;code&gt;error&lt;/code&gt; instance is provided to you.</source>
          <target state="translated">アプリケーションでキャッチされない例外が発生したときに発生します。これが発生すると、サイプレスはテストに失敗します。このイベントから &lt;code&gt;false&lt;/code&gt; を返すと、サイプレスはテストに失敗しません。実際の &lt;code&gt;error&lt;/code&gt; インスタンスが提供されるため、デバッグにも役立ちます。</target>
        </trans-unit>
        <trans-unit id="8ca3ed7f57c3d04ed29b48a431210d5cfefd574d" translate="yes" xml:space="preserve">
          <source>Fires when cy begins actually running and executing your command. Useful for debugging and understanding how the command queue is async.</source>
          <target state="translated">cy が実際にコマンドを実行し始めたときに発生します。デバッグやコマンドキューが非同期であることを理解するのに便利です。</target>
        </trans-unit>
        <trans-unit id="8cf570e78794600150280ae9f2447cadfed546db" translate="yes" xml:space="preserve">
          <source>Fires when cy finishes running and executing your command. Useful for debugging and understanding how commands are handled.</source>
          <target state="translated">cy がコマンドの実行と実行を終了したときに発生します。デバッグやコマンドがどのように処理されるかを理解するのに便利です。</target>
        </trans-unit>
        <trans-unit id="afd7817fa57e4ccf201566aefa2db46574c9786d" translate="yes" xml:space="preserve">
          <source>Fires when the test has failed. It is technically possible to prevent the test from actually failing by binding to this event and invoking an async &lt;code&gt;done&lt;/code&gt; callback. However this is &lt;strong&gt;strongly discouraged&lt;/strong&gt;. Tests should never legitimately fail. This event exists because it&amp;rsquo;s extremely useful for debugging purposes.</source>
          <target state="translated">テストが失敗したときに発生します。このイベントにバインドして非同期 &lt;code&gt;done&lt;/code&gt; コールバックを呼び出すことにより、テストが実際に失敗するのを防ぐことが技術的に可能です。ただし、これは&lt;strong&gt;強くお勧めできません&lt;/strong&gt;。テストが合法的に失敗することはありません。このイベントは、デバッグに非常に役立つために存在します。</target>
        </trans-unit>
        <trans-unit id="20fcf72a456dcba1707986a3154aceaea166e797" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.alert()&lt;/code&gt; method. Cypress will auto accept alerts. You cannot change this behavior.</source>
          <target state="translated">アプリがグローバル &lt;code&gt;window.alert()&lt;/code&gt; メソッドを呼び出したときに発生します。サイプレスはアラートを自動的に受け入れます。この動作は変更できません。</target>
        </trans-unit>
        <trans-unit id="befd5f340a17860fcb8ef526396363696792b89c" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.confirm()&lt;/code&gt; method. Cypress will auto accept confirmations. Return &lt;code&gt;false&lt;/code&gt; from this event and the confirmation will be canceled.</source>
          <target state="translated">アプリがグローバル &lt;code&gt;window.confirm()&lt;/code&gt; メソッドを呼び出したときに発生します。サイプレスは確認を自動的に受け入れます。このイベントから &lt;code&gt;false&lt;/code&gt; を返すと、確認はキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="a215985211e48f8c81b8565a107db5825276df1f" translate="yes" xml:space="preserve">
          <source>Fires when your application has unloaded and is navigating away. The real event object is provided to you. This event is not cancelable.</source>
          <target state="translated">アプリケーションがアンロードされ、ナビゲートされたときに発生します。実際のイベントオブジェクトが提供されます。このイベントはキャンセルできません。</target>
        </trans-unit>
        <trans-unit id="20583e05027ccd1f90b17c009fed01d0cb0ba65a" translate="yes" xml:space="preserve">
          <source>Fires when your application is about to navigate away. The real event object is provided to you. Your app may have set a &lt;code&gt;returnValue&lt;/code&gt; on the event, which is useful to assert on.</source>
          <target state="translated">アプリケーションが移動しようとしているときに発生します。実際のイベントオブジェクトが提供されます。アプリがイベントに &lt;code&gt;returnValue&lt;/code&gt; を設定している可能性があります。これはアサートに役立ちます。</target>
        </trans-unit>
        <trans-unit id="63603917c7fb0ef19543583000876125715fc732" translate="yes" xml:space="preserve">
          <source>Fires when your application is has unloaded and is navigating away. The real event object is provided to you. This event is not cancelable.</source>
          <target state="translated">アプリケーションがアンロードされ、移動中に発生します。実際のイベントオブジェクトが提供されます。このイベントはキャンセルできません。</target>
        </trans-unit>
        <trans-unit id="395a5ae275d0ea21c36c59f721485c25305c611e" translate="yes" xml:space="preserve">
          <source>Fires whenever &lt;strong&gt;Cypress&lt;/strong&gt; is scrolling your application. This event is fired when Cypress is &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;waiting for and calculating actionability&lt;/a&gt;. It will scroll to &amp;lsquo;uncover&amp;rsquo; elements currently being covered. This event is extremely useful to debug why Cypress may think an element is not interactive.</source>
          <target state="translated">&lt;strong&gt;サイプレス&lt;/strong&gt;がアプリケーションをスクロールしているときに常に起動します。このイベントは、サイプレスが&lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;アクション可能性を待機して計算&lt;/a&gt;しているときに発生します。現在カバーされている「uncover」要素までスクロールします。このイベントは、サイプレスが要素がインタラクティブではないと考える理由をデバッグするのに非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="072a4279602433c5ea288781fece0864ee071c43" translate="yes" xml:space="preserve">
          <source>Fires whenever &lt;strong&gt;Cypress&lt;/strong&gt; is scrolling your application. This event is fired when Cypress is &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;waiting for and calculating actionability&lt;/a&gt;. It will scroll to &amp;lsquo;uncover&amp;rsquo; elements currently being covered. This event is extremely useful to debug why Cypress may think an element is not interactive.</source>
          <target state="translated">&lt;strong&gt;サイプレス&lt;/strong&gt;がアプリケーションをスクロールしているときに発生します。このイベントは、サイプレスが&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;アクション可能性を待機して計算&lt;/a&gt;しているときに発生します。現在カバーされている要素を「uncover」までスクロールします。このイベントは、サイプレスが要素がインタラクティブでないと考える理由をデバッグするのに非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="dc6f542e38ecdc0178d0083539cb84e9e36f9f9e" translate="yes" xml:space="preserve">
          <source>Fires whenever Cypress detects that your application&amp;rsquo;s URL has changed.</source>
          <target state="translated">サイプレスがアプリケーションのURLが変更されたことを検出したときに起動します。</target>
        </trans-unit>
        <trans-unit id="18fdf04e181c4d29f74c1cff8247a77392a18edf" translate="yes" xml:space="preserve">
          <source>Fires whenever a command begins its &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retrying routines&lt;/a&gt;. This is called on the trailing edge after Cypress has internally waited for the retry interval. Useful to understand &lt;strong&gt;why&lt;/strong&gt; a command is retrying, and generally includes the actual error causing the retry to happen. When commands fail the final error is the one that actually bubbles up to fail the test. This event is essentially to debug why Cypress is failing.</source>
          <target state="translated">コマンドが&lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;再試行ルーチンを&lt;/a&gt;開始するたびに発生します。これは、サイプレスが内部的に再試行間隔を待った後の後縁で呼び出されます。コマンドが再試行している&lt;strong&gt;理由&lt;/strong&gt;を理解するのに役立ち、通常、再試行を発生させる実際のエラーが含まれます。コマンドが失敗した場合、最終エラーは実際にバブルアップしてテストに失敗するエラーです。このイベントは本質的にサイプレスが失敗している理由をデバッグするためのものです。</target>
        </trans-unit>
        <trans-unit id="af8929223808a62242044b03a07bc71137d8fd9e" translate="yes" xml:space="preserve">
          <source>Fires whenever a command begins its &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/retry-ability.html&quot;&gt;retrying routines&lt;/a&gt;. This is called on the trailing edge after Cypress has internally waited for the retry interval. Useful to understand &lt;strong&gt;why&lt;/strong&gt; a command is retrying, and generally includes the actual error causing the retry to happen. When commands fail the final error is the one that actually bubbles up to fail the test. This event is essentially to debug why Cypress is failing.</source>
          <target state="translated">コマンドが&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/retry-ability.html&quot;&gt;再試行ルーチンを&lt;/a&gt;開始するたびに発生します。これは、サイプレスが内部で再試行間隔を待機した後、立ち下がりエッジで呼び出されます。コマンドが再試行される&lt;strong&gt;理由&lt;/strong&gt;を理解するのに役立ちます。通常、再試行の原因となる実際のエラーが含まれます。コマンドが失敗した場合、最終的なエラーは、実際にバブルしてテストに失敗するエラーです。このイベントは基本的に、サイプレスが失敗する理由をデバッグするためのものです。</target>
        </trans-unit>
        <trans-unit id="6e1b9e40db73c50b362b03b85fe6cb8f78a91a6a" translate="yes" xml:space="preserve">
          <source>Fires whenever a command emits this event so it can be displayed in the Command Log. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="translated">コマンドがこのイベントを発行するたびに発生するため、コマンドログに表示できます。内部サイプレスコマンドが&lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log（）&lt;/a&gt; API をどのように利用するかを確認するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="2a70e102286861560c039597e66d12a2e7a950a7" translate="yes" xml:space="preserve">
          <source>Fires whenever a command&amp;rsquo;s attributes changes. This event is debounced to prevent it from firing too quickly and too often. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="translated">コマンドの属性が変更されるたびに発生します。このイベントはデバウンスされて、あまりにも早く、頻繁に発生するのを防ぎます。内部サイプレスコマンドが&lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log（）&lt;/a&gt; API をどのように利用するかを確認するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="3fe5a40f60250d1365d6022a092e685ce47f4e8b" translate="yes" xml:space="preserve">
          <source>Fires whenever the viewport changes via a &lt;code&gt;cy.viewport()&lt;/code&gt; or naturally when Cypress resets the viewport to the default between tests. Useful for debugging purposes.</source>
          <target state="translated">&lt;code&gt;cy.viewport()&lt;/code&gt; を介してビューポートが変更されるたびに、またはサイプレスがテスト間でビューポートをデフォルトにリセットしたときに自然に発生します。デバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="216f7ec41381a4aea27403eb443a599bc0b9e418" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s visit a web page. We will visit our &lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;Kitchen Sink&lt;/a&gt; application in this example so that you can try Cypress out without needing to worry about finding a page to test.</source>
          <target state="translated">まず、ウェブページにアクセスしましょう。この例では、&lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;キッチンシンク&lt;/a&gt;アプリケーションにアクセスして、テストするページを見つけることを心配する必要なくサイプレスを試すことができるようにします。</target>
        </trans-unit>
        <trans-unit id="c51747a9109d9350312217267bedd3d22a3f73a4" translate="yes" xml:space="preserve">
          <source>First, print where the binary is installed using the &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">まず、&lt;a href=&quot;command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt;コマンドを使用して、バイナリがインストールされている場所を印刷します。</target>
        </trans-unit>
        <trans-unit id="2328b7180d662b87895b228f6df298db17f851a3" translate="yes" xml:space="preserve">
          <source>Fix capitalization of &lt;code&gt;Xvfb&lt;/code&gt; in error messages. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;#4262&lt;/a&gt;.</source>
          <target state="translated">エラーメッセージの &lt;code&gt;Xvfb&lt;/code&gt; の大文字化を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;＃4262で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="86af0c91e4d554a431841c4b48230d1e03a384e5" translate="yes" xml:space="preserve">
          <source>Fix edge case with forced focusing / blurring an element when document is not in focus and the element is no longer in the DOM.</source>
          <target state="translated">文書にピントが合っておらず、要素がDOM内にない場合に、強制的にピントを合わせたり、要素をぼかしたりするエッジケースを修正した。</target>
        </trans-unit>
        <trans-unit id="12bb69b63d17fe3ceb1c091b056c08de1d1091b6" translate="yes" xml:space="preserve">
          <source>Fix for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; SSL issues when host certificates were self signed.</source>
          <target state="translated">ホスト証明書が自己署名された場合の&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; SSL問題の修正。</target>
        </trans-unit>
        <trans-unit id="578717dae25898e735a633254852c0af1a4b25fb" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;__initial=true&lt;/code&gt; query param on initial redirects.</source>
          <target state="translated">最初のリダイレクトで欠落していた &lt;code&gt;__initial=true&lt;/code&gt; クエリパラメータを修正しました。</target>
        </trans-unit>
        <trans-unit id="3f4967afa344c3a7afc269d86cfd6e6d2855feee" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;moment.js&lt;/code&gt; from &lt;code&gt;bower.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;moment.js&lt;/code&gt; からの抜けているmoment.jsを修正し &lt;code&gt;bower.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5473e1c9b6b37c4c0e900c359ce20540eae846ba" translate="yes" xml:space="preserve">
          <source>Fix missing trailing slash from initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="translated">最初の&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;リクエストから欠落していた末尾のスラッシュを修正します。</target>
        </trans-unit>
        <trans-unit id="a01dce2ea309fbcd0cf6dc57ea3ce76e1385ec0f" translate="yes" xml:space="preserve">
          <source>Fix sourceMappingURL browser bug &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt;.</source>
          <target state="translated">sourceMappingURLブラウザーのバグ &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt; を修正します。</target>
        </trans-unit>
        <trans-unit id="11b0d124e84238ede72803d0137923b1e12efc87" translate="yes" xml:space="preserve">
          <source>Fix test titles not being escaped due to refactoring.</source>
          <target state="translated">リファクタリングのためにテストタイトルがエスケープされないのを修正。</target>
        </trans-unit>
        <trans-unit id="aafd288aaf76025069d7a6bb6e7b941f1fb9698a" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; breaking on chains when passing the same &lt;code&gt;options&lt;/code&gt; references. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;#365&lt;/a&gt;.</source>
          <target state="translated">同じ &lt;code&gt;options&lt;/code&gt; 参照を渡すときにチェーンで&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; が&lt;/a&gt;壊れるのを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;＃365を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a74b09d876152e4f811aefa8d06cec8d4ab086cb" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; inserting a rogue &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag after the first letter in &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;#1926&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[contenteditable]&lt;/code&gt; 要素の最初の文字の後に不正な &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; タグを挿入する&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;＃1926を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="52d62b10a280f839c5da56508e01deb48c1beb4e" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing &lt;code&gt;input&lt;/code&gt; event for &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; on versions 15.6.x. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;#536&lt;/a&gt;.</source>
          <target state="translated">バージョン15.6.xで&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;https://reactjs.org/&quot;&gt;Reactの&lt;/a&gt; &lt;code&gt;input&lt;/code&gt; イベントを起動しないのを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;＃536を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f662f8fac4741daea21d050277cd93e22c3d41e4" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;opener of undefined&lt;/code&gt; errors due to &lt;code&gt;page load&lt;/code&gt; events causing snapshots prior to the &lt;code&gt;load&lt;/code&gt; event of the remote application. Thanks to everyone who helped pitched in on this one! Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;#258&lt;/a&gt;.</source>
          <target state="translated">リモートアプリケーションの &lt;code&gt;load&lt;/code&gt; イベントの前にスナップショットを引き起こす &lt;code&gt;page load&lt;/code&gt; イベントによる &lt;code&gt;opener of undefined&lt;/code&gt; エラーのオープナーを修正しました。これを売り込むのを手伝ってくれた皆さんに感謝します！&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;＃258を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="235303e914ef7bbd134d04d6915d4bbb3dca43f8" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;selectionStart&lt;/code&gt; and &lt;code&gt;selectionEnd&lt;/code&gt; with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; when using &lt;code&gt;{leftarrow}&lt;/code&gt; or &lt;code&gt;{rightarrow}&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;#1234&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;{leftarrow}&lt;/code&gt; または &lt;code&gt;{rightarrow}&lt;/code&gt; を使用する場合の&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;での &lt;code&gt;selectionStart&lt;/code&gt; および &lt;code&gt;selectionEnd&lt;/code&gt; を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;＃1234を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="35d906e96dd65bcb3ff8c488e394665a96ee5e42" translate="yes" xml:space="preserve">
          <source>Fixed Cypress hanging in CI due to excessive and unnecessary globbing. We finally tracked down this issue which made it appear as if Cypress was &amp;ldquo;hanging&amp;rdquo; after closing a spec file and then attempting to open the next one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;#2183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt;.</source>
          <target state="translated">過度の不要なグロビングが原因でサイプレスがCIでハングする問題を修正しました。最終的にこの問題を追跡し、スペックファイルを閉じて次のファイルを開こうとした後、サイプレスが「ハング」しているように見えました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;＃2183&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;＃1905&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;＃1912を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ef17c202682eca1a169dad619332a8557814c664" translate="yes" xml:space="preserve">
          <source>Fixed Cypress not correctly aborting long running connections (such as server sent events) on proxied requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;#2612&lt;/a&gt;.</source>
          <target state="translated">プロキシされたリクエストでサイプレスが長時間実行されている接続（サーバーが送信したイベントなど）を正しく中止しないのを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;＃2612を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f9669770f306f25a505189c057478c54515db829" translate="yes" xml:space="preserve">
          <source>Fixed Test Code</source>
          <target state="translated">固定テストコード</target>
        </trans-unit>
        <trans-unit id="13a9fead295c05643d7ba8ee723e8713a1aa5903" translate="yes" xml:space="preserve">
          <source>Fixed Type error being thrown for users using TypeScript 3. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;#2363&lt;/a&gt;.</source>
          <target state="translated">TypeScript 3を使用しているユーザーに対してTypeエラーがスローされる問題を修正し&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;ました&lt;/a&gt;。＃2363を修正しました。</target>
        </trans-unit>
        <trans-unit id="2dc28540a862ccbf3f051f0f0ef94a933350e1c0" translate="yes" xml:space="preserve">
          <source>Fixed TypeScript error caused by &lt;code&gt;dtslint&lt;/code&gt; dependency introduced in 3.1.4. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;#3024&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;#3136&lt;/a&gt;.</source>
          <target state="translated">3.1.4で導入された &lt;code&gt;dtslint&lt;/code&gt; 依存関係によって引き起こされるTypeScriptエラーを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;＃3024&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;＃3136を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="dea00df4206deeacedda8d66d0f1517b23f5420c" translate="yes" xml:space="preserve">
          <source>Fixed URL proxy issue with subdomains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;#183&lt;/a&gt;.</source>
          <target state="translated">サブドメインに関するURLプロキシの問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;＃183を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5b9c7b352ca8a81eb3f730094b9d5febac64dfda" translate="yes" xml:space="preserve">
          <source>Fixed a bug causing screenshots saved via &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to be in different folders when you ran using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; vs &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; . Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;#2091&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;を使用して実行すると、&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;を介して保存されたスクリーンショットが別のフォルダーに保存されるバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;＃2091を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2ea194ebc7a0241467b7bb6eeb910f0701101a6c" translate="yes" xml:space="preserve">
          <source>Fixed a bug for users running external network proxies that prevented requests from completing. Requests should now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;#4257&lt;/a&gt;.</source>
          <target state="translated">外部ネットワークプロキシを実行しているユーザーがリクエストを完了できないバグを修正しました。リクエストはすべて正しく機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;＃4257を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="84701a971c52fe0ef5b810aad2a8c5a06fdc37b7" translate="yes" xml:space="preserve">
          <source>Fixed a bug in node core where Cypress would not show up in &lt;code&gt;Windows&lt;/code&gt; for users on &lt;code&gt;node &amp;gt;= 11&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt;.</source>
          <target state="translated">サイプレスが &lt;code&gt;Windows&lt;/code&gt; で &lt;code&gt;node &amp;gt;= 11&lt;/code&gt; ユーザーに対して表示されないノードコアのバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;＃2667を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e35385a2c12d0f71f7a53c301b5b3d47658ae821" translate="yes" xml:space="preserve">
          <source>Fixed a bug swallowing plugin errors due to undefined &lt;code&gt;reject&lt;/code&gt; function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;#934&lt;/a&gt;.</source>
          <target state="translated">未定義の &lt;code&gt;reject&lt;/code&gt; 機能によるプラグインエラーを飲み込むバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;＃934を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="90b94e0824d2385a70f66519b1a2622224be5d05" translate="yes" xml:space="preserve">
          <source>Fixed a bug that caused commands to time out on subsequent tests whenever there was an uncaught error + an assertion conflict. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;#238&lt;/a&gt;.</source>
          <target state="translated">キャッチされていないエラーとアサーションの競合が発生すると、後続のテストでコマンドがタイムアウトするバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;＃238を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="71d07b2b277c7a574b44ce7b49b691fb502615ec" translate="yes" xml:space="preserve">
          <source>Fixed a bug when dismissing pinned snapshots that would cause the page to be wiped with nothing rendered. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;#4864&lt;/a&gt;.</source>
          <target state="translated">何もレンダリングされずにページがワイプされる原因となるピン留めされたスナップショットを閉じるときのバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;＃4864を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="16717acc2ae6358676798e3692b5d47326a62da8" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress could get into a weird state and continuously error due to the &lt;code&gt;before:log&lt;/code&gt; event not being properly disposed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;#173&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;before:log&lt;/code&gt; イベントが適切に処理されないためにサイプレスが奇妙な状態になり、継続的にエラーになる可能性があるバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;＃173を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="caa86e87c6a9a9f15bdd343f3f770a5b166471b9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress would error when a secure cookie flag was set and then expired from an HTTPS url without the subsequent secure flag. Due to the way Cypress was constructing the url, this would fail to actually remove the cookie. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;#1264&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;#1321&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;#1799&lt;/a&gt;.</source>
          <target state="translated">安全なcookieフラグが設定され、その後に続く安全なフラグなしでHTTPS urlから期限切れになると、サイプレスがエラーになるバグを修正しました。サイプレスがURLを構築する方法が原因で、これは実際にCookieを削除できませんでした。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;＃1264&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;＃1321&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;＃1799を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1d50b3ebf539cc9de8a209eaf4f48b723bc843f9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where changing the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;integrationFolder&lt;/code&gt;&lt;/a&gt; in Windows would lead to errors with plugins. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;#1704&lt;/a&gt;.</source>
          <target state="translated">Windowsで&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;integrationFolder&lt;/code&gt; &lt;/a&gt;を変更するとプラグインでエラーが発生するバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;＃1704を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="46b9d234159f57e0c9b70792318f4c4aa09e9b06" translate="yes" xml:space="preserve">
          <source>Fixed a bug where invalid UTF-8 characters were being set in XHR headers which caused XHR&amp;rsquo;s to fail. We now properly encode and decode all values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;#168&lt;/a&gt;.</source>
          <target state="translated">無効なUTF-8文字がXHRヘッダーに設定されていて、XHRが失敗するバグを修正しました。すべての値を適切にエンコードおよびデコードするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;＃168を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1745cac84918b4aa3fcecaa76b4fcbe6bf490e60" translate="yes" xml:space="preserve">
          <source>Fixed a bug where the content of pages using non-UTF-8 character encoding would become corrupted when opened in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;#3479&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;#1543&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;#3650&lt;/a&gt;.</source>
          <target state="translated">サイプレスで開いたときに、UTF-8以外の文字エンコーディングを使用するページのコンテンツが破損するバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;＃3479&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;＃1543&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;＃3650を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="ded6e51b9b2958b84683311abf2544d7c477a842" translate="yes" xml:space="preserve">
          <source>Fixed a bug with Windows users seeing crashes with &lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;#1815&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;#1817&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt; クラッシュが関数ではないという Windowsユーザーのバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;＃1815&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;＃1817を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="eda5c8938aaac4d872e48df690c7dd43f41fdb20" translate="yes" xml:space="preserve">
          <source>Fixed a bug with issuing an additional &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; event when chaining &lt;code&gt;.clear().type(...)&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;#593&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.clear().type(...)&lt;/code&gt; チェーンするときに追加の &lt;code&gt;blur&lt;/code&gt; および &lt;code&gt;click&lt;/code&gt; イベントを発行するバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;＃593を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="469c74a2070f33b117fa7dca5c32e8f5f00b8745" translate="yes" xml:space="preserve">
          <source>Fixed a bug with trashing assets in linux that caused recursive &lt;code&gt;.Trash&lt;/code&gt; files to show up. We now have opted to actually &lt;code&gt;rm -rf&lt;/code&gt; the files in linux because trashing is too inconsistent between linux distros. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;#2742&lt;/a&gt;.</source>
          <target state="translated">再帰的な &lt;code&gt;.Trash&lt;/code&gt; ファイルが表示される原因となったLinuxのアセットのゴミ箱に関するバグを修正しました。Linuxディストリビューション間でのゴミ箱の一貫性が非常に低いため、Linuxでファイルを実際に &lt;code&gt;rm -rf&lt;/code&gt; することを選択しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;＃2742を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4c520262c89b3ac07c8baf1a654a558e6ed3db1b" translate="yes" xml:space="preserve">
          <source>Fixed a couple regressions in the Dashboard where timed out runs stayed &amp;ldquo;Pending&amp;rdquo; forever. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;#1891&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;#1952&lt;/a&gt;.</source>
          <target state="translated">タイムアウトした実行が永久に「保留」のままであったダッシュボードのいくつかのリグレッションを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;＃1891&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;＃1952を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="00fcb4eea65108e89c9c6443dade9cb50ba551ca" translate="yes" xml:space="preserve">
          <source>Fixed a deployment bug in the &lt;code&gt;core-desktop-gui&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;core-desktop-gui&lt;/code&gt; の展開バグを修正しました。</target>
        </trans-unit>
        <trans-unit id="f061b7f560d64349dba98a8aedb318738f61fbb4" translate="yes" xml:space="preserve">
          <source>Fixed a handful of scenarios and edge cases where cookies were not properly synchronized between external requests and the browser. This led to situations where cookies were either duplicated on requests, or were not sent. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;#357&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;#361&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;#362&lt;/a&gt;.</source>
          <target state="translated">Cookieが外部リクエストとブラウザ間で適切に同期されなかった少数のシナリオとエッジケースを修正しました。これにより、Cookieがリクエストで複製されるか、送信されない状況が発生しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;＃357&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;＃361&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;＃362を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="188f048d711e6696c9c8df5820c6c238970fcef3" translate="yes" xml:space="preserve">
          <source>Fixed a longstanding issue in Cypress where logging in from another computer would kill the session on all other computers, and prevent you from accessing &lt;code&gt;cypress get:key&lt;/code&gt; (amongst other things). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;#400&lt;/a&gt;.</source>
          <target state="translated">別のコンピューターからログインすると他のすべてのコンピューターのセッションが終了し、 &lt;code&gt;cypress get:key&lt;/code&gt; アクセスできなくなるというサイプレスの長期にわたる問題が修正されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;＃400を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="125f3c706233139b5634955a5661ec6e1d443e79" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused by &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; adhering to &lt;code&gt;maxlength&lt;/code&gt; incorrectly. Special character sequences were not respected. Now &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; works with special characters and implements a complete fix for &lt;code&gt;maxlength&lt;/code&gt;. In addition to it working, it now fires all applicable browser events without modifying the actual input value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;#955&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;maxlength&lt;/code&gt; に誤って付着することによって引き起こされるリグレッションを修正しました。特殊文字シーケンスは考慮されませんでした。現在、&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;は特殊文字を処理し、 &lt;code&gt;maxlength&lt;/code&gt; の完全な修正を実装しています。機能するだけでなく、実際の入力値を変更せずに、該当するすべてのブラウザーイベントを発生させるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;＃955を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="58f207b226d195fcbac964a5875c845dac2c2b05" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused in &lt;code&gt;3.1.1&lt;/code&gt; where we attempted to set a property on an invalid cookie sent from a server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;#2724&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;3.1.1&lt;/code&gt; でサーバーから送信された無効なCookieにプロパティを設定しようとしたときに発生したリグレッションを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;＃2724を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="79bc8296f43c8bf5bc550d085c1248af39a32c04" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing large requests such as &lt;code&gt;multipart/form-data&lt;/code&gt; uploads to hang. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;#4240&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;#4252&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;#4253&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0の&lt;/a&gt;リグレッションを修正して、 &lt;code&gt;multipart/form-data&lt;/code&gt; アップロードなどの大きなリクエストがハングする原因となりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;＃4240&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;＃4252&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;＃4253を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="718a1ff91ed67f4a43b3e64705ec6af59b8cc17c" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing some users using proxy to see the &amp;ldquo;Browser was not launched through Cypress&amp;rdquo; error during &lt;code&gt;cypress open&lt;/code&gt;. This was caused by incorrectly routing requests for Cypress&amp;rsquo;s internal server on &lt;code&gt;localhost&lt;/code&gt; through the user&amp;rsquo;s proxy. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;#4410&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0での&lt;/a&gt;リグレッションを修正し、プロキシを使用している一部のユーザーに、サイプレスを &lt;code&gt;cypress open&lt;/code&gt; ときに「ブラウザがサイプレスから起動されなかった」というエラーが表示される問題を修正しました。これは、 &lt;code&gt;localhost&lt;/code&gt; 上のサイプレスの内部サーバーへのリクエストを、ユーザーのプロキシ経由で誤ってルーティングしたために発生しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;＃4410を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="92bf3f7a02bd774b4f45bba54e1708bbbec88a77" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.1&lt;/code&gt; that was incorrectly setting &lt;code&gt;Cache&lt;/code&gt; headers. This &lt;em&gt;could&lt;/em&gt; cause a situation where you received an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; origin error. Additionally we now set &lt;code&gt;No-Cache&lt;/code&gt; headers whenever we inject content, but otherwise respect the headers coming from web servers. When using Cypress as the file server, we set &lt;code&gt;etags&lt;/code&gt; but prevent caching.</source>
          <target state="translated">誤って &lt;code&gt;Cache&lt;/code&gt; ヘッダーを設定していた &lt;code&gt;0.17.1&lt;/code&gt; のリグレッションを修正しました。これにより、 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; の発生エラー&lt;em&gt;が&lt;/em&gt;発生する&lt;em&gt;可能&lt;/em&gt;性&lt;em&gt;が&lt;/em&gt;あります。さらに、コンテンツを挿入するときは常に &lt;code&gt;No-Cache&lt;/code&gt; ヘッダーを設定しますが、それ以外の場合はWebサーバーからのヘッダーを尊重します。サイプレスをファイルサーバーとして使用する場合、 &lt;code&gt;etags&lt;/code&gt; を設定しますが、キャッシュは防止します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="797d082c75d18ab24086fb4a5aabff0a9d5357c0" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.2&lt;/code&gt; which caused &lt;strong&gt;separate&lt;/strong&gt; tests that were visiting the same URL not to actually visit the new URL and eventually time out. We&amp;rsquo;ve updated some of our internal QA processes around this because we rarely have regressions and they are a pretty big deal. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;#225&lt;/a&gt;.</source>
          <target state="translated">同じURLにアクセスしていた&lt;strong&gt;別の&lt;/strong&gt;テストが実際には新しいURLにアクセスせず、最終的に &lt;code&gt;0.17.2&lt;/code&gt; なる0.17.2のリグレッションを修正しました。回帰はほとんどなく、非常に大きな問題であるため、これに関連する内部QAプロセスの一部を更新しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;＃225を&lt;/a&gt;修正。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40060b269c8fc30e6502dd8d290d1f068f602ced" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;3.0.2&lt;/code&gt; that caused typing &lt;code&gt;{enter}&lt;/code&gt; not to submit a form when there were &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements other than &lt;code&gt;type='submit'&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;#2261&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;#2326&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;3.0.2&lt;/code&gt; で、 &lt;code&gt;type='submit'&lt;/code&gt; 以外の &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 要素がある場合に &lt;code&gt;{enter}&lt;/code&gt; と入力するとフォームが送信されないという問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;＃2261&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;＃2326を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="cda6d14158f1ca7ec8929275ab499aa9d41aac90" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to throw a &lt;code&gt;EISDIR&lt;/code&gt; error if a directory had the same name as a file within that same directory. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;#3739&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;で導入された、ディレクトリが同じディレクトリ内のファイルと同じ名前の場合に&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;EISDIR&lt;/code&gt; エラーをスローする原因となっていた回帰を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;＃3739を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="02f5df8f3f31bad1f7203993fb1b2f8f4b232bde" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; to no longer retry when it yields &lt;code&gt;undefined&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;#3837&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;で導入された、&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;undefined&lt;/code&gt; を生成したときに再試行しなくなった回帰を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;＃3837&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e0de1cc648e5d061dd3d9554106a7e7e22e8624" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused an error to throw when visiting domains with certain public suffixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;で導入された、特定のパブリックサフィックスを持つドメインにアクセスするとエラーが発生する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;＃3717を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2e56f00230509efa8dac3e3c46581c3dcdda0b82" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt; that caused an error to be thrown when chaining together multiple assertions using the &lt;code&gt;and&lt;/code&gt; chainable getter. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;#4833&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; チェイン可能ゲッターを使用して複数のアサーションをチェーニングするとエラーが発生する&lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt;で導入されたリグレッションを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;＃4833を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="fd475981c3a413149ca03f811cd7aeb4ada6f22a" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;code&gt;3.x.x&lt;/code&gt; where application code that used &lt;code&gt;setTimeout&lt;/code&gt; with a string argument would see the error &lt;code&gt;fn.apply is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;#1854&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;3.x.x&lt;/code&gt; で導入された、文字列引数を指定した &lt;code&gt;setTimeout&lt;/code&gt; を使用するアプリケーションコードでエラー &lt;code&gt;fn.apply is not a function&lt;/code&gt; ことが確認された回帰を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;＃1854を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="af27ef3a8c5b1eb360f49945fa5020fda8149632" translate="yes" xml:space="preserve">
          <source>Fixed a regression where tests that failed outside of a hook would incorrectly indicate themselves as a &lt;code&gt;before each&lt;/code&gt; hook. In addition, in the default &lt;code&gt;spec&lt;/code&gt;, reporter will now display the test name when a hook was the source of failure. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;#253&lt;/a&gt;.</source>
          <target state="translated">フックの外で失敗したテストが、 &lt;code&gt;before each&lt;/code&gt; フックの前にそれらを誤って示すという回帰を修正しました。さらに、デフォルトの &lt;code&gt;spec&lt;/code&gt; では、フックが失敗の原因であった場合、レポーターはテスト名を表示するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;＃253を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ad6a48c43848b909388100743330443ecff9d966" translate="yes" xml:space="preserve">
          <source>Fixed a runaway RegExp causing large &lt;code&gt;.js&lt;/code&gt; files to take dozens of seconds to process. This was a regression caused by &lt;code&gt;2.0.0&lt;/code&gt; with the new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; option. We&amp;rsquo;ve optimized the RegExp and the performance is back to being almost identical to transparently passing responses through. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;#1330&lt;/a&gt;.</source>
          <target state="translated">暴走するRegExpが原因で大きな &lt;code&gt;.js&lt;/code&gt; ファイルの処理に数十秒かかる問題を修正しました。これは、新しい&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt;オプションを使用した &lt;code&gt;2.0.0&lt;/code&gt; によって引き起こされたリグレッションです。RegExpを最適化しました。パフォーマンスは、透過的に応答を渡すのとほとんど同じです。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;＃1330を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ad28b2e2f139b4f56dd509edc39f63bc289fc0b8" translate="yes" xml:space="preserve">
          <source>Fixed a small visual bug where failed commands were not aligned to other commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;#2314&lt;/a&gt;.</source>
          <target state="translated">失敗したコマンドが他のコマンドと整列しない小さな視覚的なバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;＃2314を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="20b3da33f022c8918a8fee4cd409fa5b0fa5bc32" translate="yes" xml:space="preserve">
          <source>Fixed a very longstanding (!) issue where &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; would fail to click the center coordinates of elements with style &lt;code&gt;display: inline&lt;/code&gt;. Cypress would instead report that the element was being covered causing the error: &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;#210&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;がスタイル &lt;code&gt;display: inline&lt;/code&gt; の要素の中心座標をクリックできないという非常に長い間（！）の問題を修正しました：inline。代わりに、サイプレスはエラーの原因となっている要素が覆われていたことを報告します。 &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;＃210を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8488e4ff3fa99d45f5aac3d43763fd3bd4dc1c31" translate="yes" xml:space="preserve">
          <source>Fixed a visual bug when aliasing a non-route subject multiple times that would cause the Test Runner to show &amp;lsquo;undefined&amp;rsquo; alias with empty counts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;#4429&lt;/a&gt;.</source>
          <target state="translated">テストランナーが空のカウントで「未定義」エイリアスを表示する原因となる、非ルートサブジェクトに複数回エイリアスを設定するときの視覚的なバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;＃4429を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="eb032515c85605b59f3782be31262996bff85914" translate="yes" xml:space="preserve">
          <source>Fixed alt tray icon so it shows up correctly on click.</source>
          <target state="translated">Altトレイのアイコンがクリックしたときに正しく表示されるように修正した。</target>
        </trans-unit>
        <trans-unit id="313a913671a903142640a3d934767834ab3ee524" translate="yes" xml:space="preserve">
          <source>Fixed an edge case in the &lt;code&gt;driver&lt;/code&gt; that could lead to memory leaks. This happened when Command Logs updated from previously run tests. Normally, in headless mode, we automatically remove references to purge memory after each test, but when logs were updated after this, their references were merged back in again and held onto forever. If you were seeing long Cypress runs die or eventually halt, this was likely the cause. We did extensive memory regression analysis on Cypress and could not find any more memory leaks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;#301&lt;/a&gt;.</source>
          <target state="translated">メモリリークにつながる可能性がある &lt;code&gt;driver&lt;/code&gt; エッジケースを修正しました。これは、以前に実行されたテストからコマンドログが更新されたときに発生しました。通常、ヘッドレスモードでは、各テスト後に参照を自動的に削除してメモリを消去しますが、その後ログが更新されると、それらの参照は再びマージされ、永久に保持されます。サイプレスの長い実行が停止したり、最終的に停止したりする場合は、これが原因である可能性があります。サイプレスで広範なメモリ回帰分析を行いましたが、これ以上メモリリークは見つかりませんでした。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;＃301を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="eb080bbba9a5a85990fa91f1b178e3eb7cb2d0b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when hooks such as &lt;code&gt;beforeEach&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; threw an &lt;strong&gt;identical&lt;/strong&gt; error message, Cypress would hang indefinitely and never finish running the tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;#674&lt;/a&gt;.</source>
          <target state="translated">以下のようなフック時にエッジケースを固定 &lt;code&gt;beforeEach&lt;/code&gt; か &lt;code&gt;afterEach&lt;/code&gt; が投げた&lt;strong&gt;同じ&lt;/strong&gt;エラーメッセージを、サイプレスは無期限にハングアップしてテストを実行して終了しないでしょう。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;＃674を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2661a63af2ce07d2cc706e56312cdae37b3f6ed6" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when writing a test with a &lt;code&gt;done&lt;/code&gt; callback alongside &lt;code&gt;cy&lt;/code&gt; commands. This situation would always cause a timeout after 30 seconds even though the test would pass.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; コマンドと一緒に &lt;code&gt;done&lt;/code&gt; コールバックを使用してテストを作成する場合のエッジケースを修正しました。この状況では、テストに合格しても、30秒後に常にタイムアウトが発生します。</target>
        </trans-unit>
        <trans-unit id="c257669938ad8d8588a5d98ce4bc6d698f7e89b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case where assertions would incorrectly associate to a previously run assertion. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;#252&lt;/a&gt;.</source>
          <target state="translated">アサーションが以前に実行されたアサーションに誤って関連付けられるエッジケースを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;＃252を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="99f6b62fc97458e6561cf3b928ec860cd9b1dc47" translate="yes" xml:space="preserve">
          <source>Fixed an issue causing &lt;code&gt;Chrome&lt;/code&gt; to timeout when attempted to be run through our docker containers. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;#1031&lt;/a&gt;.</source>
          <target state="translated">Dockerコンテナーを介して実行しようとすると &lt;code&gt;Chrome&lt;/code&gt; がタイムアウトする問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;＃1031を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0acea776ba5899e734dd14a6a1309901365ecaf8" translate="yes" xml:space="preserve">
          <source>Fixed an issue when testing applications using older versions of jQuery. They now no longer throw &lt;code&gt;item.first is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;#2927&lt;/a&gt;.</source>
          <target state="translated">古いバージョンのjQueryを使用してアプリケーションをテストするときの問題を修正しました。現在、 &lt;code&gt;item.first is not a function&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;＃2927を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2df9794ea315081304a449996ce2c238d0a619fc" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress would inject content into the &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; tag instead of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;#2026&lt;/a&gt;.</source>
          <target state="translated">サイプレスが &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; タグではなく &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; タグにコンテンツを挿入する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;＃2026を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="503a7789189e2cc3fea11c127b7ef29ccf854e25" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress&amp;rsquo;s &lt;code&gt;devDependencies&lt;/code&gt; were being included in the Windows binary. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;#2896&lt;/a&gt;.</source>
          <target state="translated">サイプレスの &lt;code&gt;devDependencies&lt;/code&gt; がWindowsバイナリに含まれていた問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;＃2896を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9b9a67d1e1a1a3d9f46755d7554324c5b006cbfa" translate="yes" xml:space="preserve">
          <source>Fixed an issue where highlighting a command&amp;rsquo;s snapshot would throw an error when no application was rendered in the AUT frame. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;#4177&lt;/a&gt;.</source>
          <target state="translated">AUTフレームにアプリケーションがレンダリングされなかったときに、コマンドのスナップショットを強調表示するとエラーがスローされる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;＃4177を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8634090de3bb23f05d8348be273ac80a2f06895b" translate="yes" xml:space="preserve">
          <source>Fixed an issue where returning/resolving &lt;code&gt;undefined&lt;/code&gt; from a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; handler resulted in an incorrect runtime error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;#2553&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;ハンドラーから &lt;code&gt;undefined&lt;/code&gt; を返す/解決すると、誤ったランタイムエラーが発生する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;＃2553を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c620b3b816b83868106dcda7ca6573a168f7e4f2" translate="yes" xml:space="preserve">
          <source>Fixed an issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; not behaving the same as &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;#420&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; が&lt;/a&gt; &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt; と同じように動作しない問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;＃420を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ba35f7f430bc3eb760682eeba295aa9b02318261" translate="yes" xml:space="preserve">
          <source>Fixed an oversight where a specific framebusting check was not being properly stripped and removed by the default config option &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;#2030&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;#2059&lt;/a&gt;.</source>
          <target state="translated">特定のフレームバスティングチェックがデフォルトの構成オプション&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt;によって適切に削除および削除されなかった見落としを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;＃2030&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;＃2059を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a3feeb11c878c0b1b6c2b42b4926ba57769c0a27" translate="yes" xml:space="preserve">
          <source>Fixed another Dashboard regression where an error would throw when recording tests and sending a large list of specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;#1901&lt;/a&gt;.</source>
          <target state="translated">テストを記録し、仕様の大きなリストを送信するときにエラーがスローされる、別のダッシュボードの回帰を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;＃1901を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f95ba80c09d2573eaefec9828019f86ac7fc513f" translate="yes" xml:space="preserve">
          <source>Fixed another bug with Chrome that caused the &lt;code&gt;chromeWebSecurity: false&lt;/code&gt; option to not be respected. This was due to Chrome progressively rolling out trials of a new option that attempts to isolate sites (and iframes) in their own child process if their origins are different. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;#1951&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;#2001&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;#715&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;chromeWebSecurity: false&lt;/code&gt; オプションが尊重されない原因となったChromeの別のバグを修正しました。これは、出所が異なる場合に、独自の子プロセスでサイト（およびiframe）を分離しようとする新しいオプションの試行をChromeが段階的に展開したためです。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;＃1951&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;＃2001&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;＃715を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="94853bb9ca7c86396cbd9c57c0364c019a3f65d1" translate="yes" xml:space="preserve">
          <source>Fixed another issue in Chrome* versions &amp;gt;= 72 where a scrollable command log would cause the entire application to be scrollable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;#3253&lt;/a&gt;.</source>
          <target state="translated">スクロール可能なコマンドログが原因でアプリケーション全体がスクロール可能になるChrome *バージョン72以上の別の問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;＃3253を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="696f0ff4fbb232ea2e711589bbb9e959ff73ea3e" translate="yes" xml:space="preserve">
          <source>Fixed another regression in &lt;code&gt;3.1.1&lt;/code&gt; where passing &lt;code&gt;undefined&lt;/code&gt; to a &lt;code&gt;setTimeout&lt;/code&gt; caused Cypress to error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;#2719&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;3.1.1&lt;/code&gt; で、 &lt;code&gt;undefined&lt;/code&gt; を &lt;code&gt;setTimeout&lt;/code&gt; に渡すとサイプレスでエラーが発生する別のリグレッションを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;＃2719を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="aebadebc5158757be71142267de0bf16766d036c" translate="yes" xml:space="preserve">
          <source>Fixed bug in Mocha where it incorrectly associates &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; to the wrong &lt;code&gt;test&lt;/code&gt;. &lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;Mocha Issue&lt;/a&gt;.</source>
          <target state="translated">Mochaで &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; を誤った &lt;code&gt;test&lt;/code&gt; に誤って関連付けるバグを修正しました。&lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;モカ号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="612dfb9e3b3cdc617ab91ece26ddc8558ce3af03" translate="yes" xml:space="preserve">
          <source>Fixed bug when &lt;code&gt;Errors&lt;/code&gt; that threw with no arguments: &lt;code&gt;throw new Error()&lt;/code&gt; and had their messages appended would duplicate the message over and over again. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;#1338&lt;/a&gt;.</source>
          <target state="translated">ときバグを修正しました &lt;code&gt;Errors&lt;/code&gt; ：引数なしで投げた &lt;code&gt;throw new Error()&lt;/code&gt; とそれらのメッセージが何度も何度もメッセージを複製するだろう付加していました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;＃1338を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="918a3cf4f69c121b36ee0b2424185525b6d9ad4b" translate="yes" xml:space="preserve">
          <source>Fixed bug where mocked Dates using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; would not be an instance of &lt;code&gt;Date&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;#2570&lt;/a&gt;.</source>
          <target state="translated">使用して嘲笑日付バグを修正&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;のインスタンスではありません &lt;code&gt;Date&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;＃2570を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4ee9efa7d8a12b518bf4119349b5f2d9f0cde469" translate="yes" xml:space="preserve">
          <source>Fixed bug where only the first DOM element of an array of DOM elements would be blacked out after being passed as argument to &lt;code&gt;blackout&lt;/code&gt; within &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;#2508&lt;/a&gt;.</source>
          <target state="translated">DOM要素の配列の最初のDOM要素のみが&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;内の &lt;code&gt;blackout&lt;/code&gt; への引数として渡された後にブラックアウトされるバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;＃2508を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f661fc4b9db21728381b6001a9e54604f162657d" translate="yes" xml:space="preserve">
          <source>Fixed bug where tests were failing due to assertions causing Cypress to accidentally iterate through cross-origin iframes. If you were seeing &amp;ldquo;random&amp;rdquo; cross-origin errors, this likely fixes those issues. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;#2784&lt;/a&gt;.</source>
          <target state="translated">アサーションが原因でサイプレスがクロスオリジンのiframeを誤って反復するためにテストが失敗するバグを修正しました。「ランダムな」クロスオリジンエラーが表示された場合は、これらの問題が修正されている可能性があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;＃2784を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d9c19c5dbeb10fc37ea3887a8e9309cd3159aebf" translate="yes" xml:space="preserve">
          <source>Fixed bug with custom 3rd party Mocha reporters relying on &lt;code&gt;test.titlePath&lt;/code&gt; being a function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;#1142&lt;/a&gt;.</source>
          <target state="translated">関数である &lt;code&gt;test.titlePath&lt;/code&gt; に依存するカスタムのサードパーティMochaレポーターのバグを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;＃1142を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6e77d2327f9187fbef2c0ab464f495a2f7e023ca" translate="yes" xml:space="preserve">
          <source>Fixed bugs with Electron losing focus when running headlessly via &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; after navigation. Now the browser will always act as if it is focused no matter what and in all situations when running headlessly. If you were seeing focus related problems when running headlessly, this should fix them. Fixes issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;#2190&lt;/a&gt;.</source>
          <target state="translated">ナビゲーション後に&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;てヘッドレスで実行すると、Electronがフォーカスを失うバグを修正しました。これで、ブラウザは常に、ヘッドレスで実行しているときに、何があろうとすべての状況に集中しているように動作します。ヘッドレスで実行しているときにフォーカス関連の問題が発生した場合は、これで問題が解決するはずです。問題&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;＃2190を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7025ef6c77bddd2485fa875c1d5be6a4b45e734a" translate="yes" xml:space="preserve">
          <source>Fixed busted internal timers that caused random timeouts, proxy errors, incorrect delays, and long pauses when loading the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;#572&lt;/a&gt;.</source>
          <target state="translated">GUIのロード時にランダムなタイムアウト、プロキシエラー、誤った遅延、および長い一時停止を引き起こすバストされた内部タイマーを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;＃572を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="56be5cf5478837f13541225d0c7cd0fe3342d7ea" translate="yes" xml:space="preserve">
          <source>Fixed code example for google analytics stubbing &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;#1454&lt;/a&gt;</source>
          <target state="translated">Googleアナリティクススタブのコード例を修正しました&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;＃1454&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2742a044ddb90cd808739a321eebf8d6fcbc15bc" translate="yes" xml:space="preserve">
          <source>Fixed display of tooltips when selecting elements from the Selector Playground so that they display at the correct coordinates when scrolling. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;#1351&lt;/a&gt;.</source>
          <target state="translated">セレクターのプレイグラウンドから要素を選択するときのツールチップの表示が修正され、スクロール時に正しい座標で表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;＃1351を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="251641485084c6e1d7bc15a495074840c8bbd600" translate="yes" xml:space="preserve">
          <source>Fixed displaying &lt;code&gt;(null)&lt;/code&gt; contentType when a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; returned a &lt;code&gt;404&lt;/code&gt; status code. We now only display &lt;code&gt;contentType&lt;/code&gt; when one exists.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;404&lt;/code&gt; ステータスコードを返したときの &lt;code&gt;(null)&lt;/code&gt; contentTypeの表示を修正しました。 &lt;code&gt;contentType&lt;/code&gt; が存在する場合にのみ表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="6e0af6a0db32674c472a21c20d182a7188e2555d" translate="yes" xml:space="preserve">
          <source>Fixed domain parsing failures when &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;localhost&lt;/code&gt; was not used as a &lt;code&gt;tld&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;#1292&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;#1278&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; または &lt;code&gt;localhost&lt;/code&gt; が &lt;code&gt;tld&lt;/code&gt; として使用されなかった場合のドメイン解析エラーを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;＃1292&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;＃1278を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d8a8afb7ba2a95345f8cb179792976f988c1c4a1" translate="yes" xml:space="preserve">
          <source>Fixed edge case where Cypress would not correctly handle &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; requests with a JSON body. These requests would just hang and eventually time out.</source>
          <target state="translated">サイプレスがJSONボディで &lt;code&gt;POST&lt;/code&gt; または &lt;code&gt;PUT&lt;/code&gt; リクエストを正しく処理しないエッジケースを修正しました。これらのリクエストはハングし、最終的にタイムアウトになります。</target>
        </trans-unit>
        <trans-unit id="c2d7a413de44f197a54d70c4b3e138fc45ad09e8" translate="yes" xml:space="preserve">
          <source>Fixed edge case where XHR&amp;rsquo;s which were already aborted were aborted a 2nd time when tests end. Cypress now only aborts currently running XHR&amp;rsquo;s which have not already been aborted.</source>
          <target state="translated">既に中止されたXHRがテスト終了時に2回目に中止されたエッジの問題を修正しました。サイプレスは、現在中止されていない現在実行中のXHRのみを中止するようになりました。</target>
        </trans-unit>
        <trans-unit id="15db83a7134834b98a8112f0a9f994c44579c61c" translate="yes" xml:space="preserve">
          <source>Fixed edge case with &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; and command options &lt;code&gt;visible&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; where it would always fail ven though the matched element was in the correct state.</source>
          <target state="translated">固定エッジの場合&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;およびコマンドオプション &lt;code&gt;visible&lt;/code&gt; 及び &lt;code&gt;exist&lt;/code&gt; 整合要素が正しい状態にあったが、それが常にVEN失敗します。</target>
        </trans-unit>
        <trans-unit id="736d2fd6d67eea3c666645e76df7818015a827a3" translate="yes" xml:space="preserve">
          <source>Fixed error message on &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; when typing into non-typeable elements or clearing non-clearable elements to accurately list the elements allowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;#1650&lt;/a&gt;.</source>
          <target state="translated">型指定できない要素に入力するとき、または許可されていない要素を正確にリストするために型指定できない要素をクリアするときの&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; の&lt;/a&gt;エラーメッセージを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;＃1650を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="02b2238de0c84627cddc80afe17c2ea623cb3c16" translate="yes" xml:space="preserve">
          <source>Fixed error when recording and failing to parse the git commit message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;#847&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;#841&lt;/a&gt;.</source>
          <target state="translated">git commitメッセージを記録して解析に失敗したときのエラーを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;＃847&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;＃841を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3040a4458cc421fb2d22a8003bbe0b372f72da17" translate="yes" xml:space="preserve">
          <source>Fixed even more issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not inserting characters on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;#1381&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;input[type=number]&lt;/code&gt; 文字を挿入しない問題をさらに修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;＃1381を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ff4a60d5e898f49af55b20216c54316464791778" translate="yes" xml:space="preserve">
          <source>Fixed file watching when changing the &lt;code&gt;integrationFolder&lt;/code&gt; to something other than the default value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;#438&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;integrationFolder&lt;/code&gt; をデフォルト値以外に変更したときのファイル監視を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;＃438を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f71d3bd8125a553f32eb8e552ca0938dfda05a60" translate="yes" xml:space="preserve">
          <source>Fixed hook failure associated to wrong failed current test when &lt;code&gt;grep&lt;/code&gt; was set.</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; が設定されているときに、失敗した現在のテストの失敗に関連するフックの失敗を修正しました。</target>
        </trans-unit>
        <trans-unit id="773347c43b2905ce0adc0b80483b6cedf1665d7a" translate="yes" xml:space="preserve">
          <source>Fixed icons visually shifting when tests were running in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;#1983&lt;/a&gt;.</source>
          <target state="translated">テストランナーでテストが実行されているときにアイコンが視覚的にシフトするのを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;＃1983を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a639d3246f9660269f602500bc09f7512383b7c2" translate="yes" xml:space="preserve">
          <source>Fixed incomplete type definitions for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;#2305&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request&lt;/code&gt; の&lt;/a&gt;不完全な型定義を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;＃2305を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="55fe1fe1beaaad0ae95c08429f866661564ed878" translate="yes" xml:space="preserve">
          <source>Fixed incorrect JSDoc comments in type definition for &lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus()&lt;/a&gt; and better formatted comments in type definitions. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;#2975&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;#2954&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus（）の&lt;/a&gt;タイプ定義の不正なJSDocコメントと、タイプ定義のより適切にフォーマットされたコメントを修正しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;＃2975&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;＃2954&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="812109db35de49de7db730b131b54593ddd17605" translate="yes" xml:space="preserve">
          <source>Fixed incorrect error message on reverse visibility assertions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;#275&lt;/a&gt;.</source>
          <target state="translated">逆可視性アサーションの誤ったエラーメッセージを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;＃275を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5c069db9105c52c4f356c338dd1d13ea2ca1306f" translate="yes" xml:space="preserve">
          <source>Fixed incorrect type definition for options usage for &lt;a href=&quot;../../api/commands/then&quot;&gt;.then()&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;#3075&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt;.then（）の&lt;/a&gt;オプション使用法の誤ったタイプ定義を修正しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;＃3075&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86b030fdcb00b2f9bf3970fa4fbc426e90f71819" translate="yes" xml:space="preserve">
          <source>Fixed incorrectly setting &lt;code&gt;charCode&lt;/code&gt; and &lt;code&gt;keyCode&lt;/code&gt; when using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on a few different special characters such as &lt;code&gt;{&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;#2105&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt; などの&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;異なる特殊文字で.type（）を使用するときに &lt;code&gt;charCode&lt;/code&gt; および &lt;code&gt;keyCode&lt;/code&gt; を誤って設定するのを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;＃2105を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="14d73fb5c06694aa48acf2fc44c2e17262c62426" translate="yes" xml:space="preserve">
          <source>Fixed inserting the string &lt;code&gt;null&lt;/code&gt; into &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; urls when providing a &lt;code&gt;baseUrl&lt;/code&gt; in &lt;code&gt;cypress.json&lt;/code&gt; while origin could not be determined. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;#274&lt;/a&gt;.</source>
          <target state="translated">起点を特定できなかったときに &lt;code&gt;baseUrl&lt;/code&gt; で &lt;code&gt;cypress.json&lt;/code&gt; を提供するときに文字列 &lt;code&gt;null&lt;/code&gt; を&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; の&lt;/a&gt; URLに挿入するのを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;＃274を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="afeb42766edda55645ad3cb0a7d8d0216d4eb01b" translate="yes" xml:space="preserve">
          <source>Fixed internal Cypress tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;#2606&lt;/a&gt;.</source>
          <target state="translated">内部サイプレステストを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;＃2606を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1382c51c4ccba4ae45334849e71d4f3885625dc2" translate="yes" xml:space="preserve">
          <source>Fixed internal test error &lt;code&gt;beforeSpecRun is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;#2401&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;beforeSpecRun is not a function&lt;/code&gt; 内部テストエラーを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;＃2401を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2017dd059d0898c9d6a5369d875f74f7a20a1f79" translate="yes" xml:space="preserve">
          <source>Fixed issue of Cypress being unable to play videos with &lt;code&gt;autoplay&lt;/code&gt;. We now pass the &lt;code&gt;--no-user-gesture-required&lt;/code&gt; command line switch to Chrome. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;#2376&lt;/a&gt;.</source>
          <target state="translated">サイプレスが &lt;code&gt;autoplay&lt;/code&gt; 再生でビデオを再生できない問題を修正しました。 &lt;code&gt;--no-user-gesture-required&lt;/code&gt; コマンドラインスイッチをChromeに渡します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;＃2376を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d1454c9f7e105098250079b6197e4fc0d616f586" translate="yes" xml:space="preserve">
          <source>Fixed issue when using &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; and passing an object to a &lt;code&gt;.json&lt;/code&gt; file. The object is now correctly written to the JSON file instead of a string. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;#2373&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt;を使用してオブジェクトを &lt;code&gt;.json&lt;/code&gt; ファイルに渡す際の問題を修正しました。オブジェクトが文字列ではなくJSONファイルに正しく書き込まれるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;＃2373を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2c353974950c8f90d95bbad7cc4de3cde862a338" translate="yes" xml:space="preserve">
          <source>Fixed issue when using TypeScript that caused namespace errors to be thrown. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;#1627&lt;/a&gt;.</source>
          <target state="translated">TypeScriptを使用するときに名前空間エラーがスローされる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;＃1627を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1229a64e09bfdf46d6b860f6c4fd4b0b0c37d277" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; was failing when running Cypress in docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;#517&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;サイプレスを実行するとcy.exec（）が失敗する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;＃517を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f3853b829c65b8667819b5bb5a82df44fa46e42b" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; inputs were throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;#504&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;type=&quot;email&quot;&lt;/code&gt; 入力を&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;がエラーをスローしていた問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;＃504を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="615a0b78351a76d8edfafb3a29f2bd3dbac0de0f" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;event&lt;/code&gt; was undefined when using an &lt;code&gt;onload&lt;/code&gt; event handler. Fixed &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;#2859&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;onload&lt;/code&gt; イベントハンドラーを使用するときに &lt;code&gt;event&lt;/code&gt; が未定義だった問題を修正しました。修正済み&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;＃2859&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f19256491757bc321389a1dfb9fde2c16863ab68" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;stdout&lt;/code&gt; would not be displayed on a completed &lt;code&gt;cypress ci&lt;/code&gt; run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;#398&lt;/a&gt;.</source>
          <target state="translated">完了した &lt;code&gt;cypress ci&lt;/code&gt; 実行で &lt;code&gt;stdout&lt;/code&gt; が表示されない問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;＃398を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d5537ac05b50b1d9d5162eb0be6a42dadc20efb9" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; would return &lt;code&gt;undefined&lt;/code&gt; instead of an array within application code when using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;#3625&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;を使用すると、アプリケーションコード内で &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; が配列ではなく &lt;code&gt;undefined&lt;/code&gt; を返す問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;＃3625を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="55113d9d2801f6fddc9e5b2e5b21e5962d7abbdd" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress hanged due to Xvfb permissions. More intuitive output is given during install failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;#330&lt;/a&gt;.</source>
          <target state="translated">Xvfb権限が原因でサイプレスがハングする問題を修正しました。インストールの失敗時に、より直感的な出力が提供されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;＃330を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="af8382ebdd6683a30092c82e522e5fa69083d349" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would hang indefinitely when starting a new spec when in &lt;code&gt;cypress run&lt;/code&gt; mode. Additionally we have optimized the code path to not read in the local &lt;code&gt;state.json&lt;/code&gt; unnecessarily. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;#2013&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;#1890&lt;/a&gt;.</source>
          <target state="translated">サイプレス &lt;code&gt;cypress run&lt;/code&gt; モードで新しいスペックを開始すると、サイプレスが無期限にハングする問題を修正しました。さらに、ローカルの &lt;code&gt;state.json&lt;/code&gt; を不必要に読み取らないようにコードパスを最適化しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;＃2013&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;＃1912&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;＃1905&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;＃1890を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="c693ab41296c3860cbfeee8a1756daba46604250" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would inject a script tag before the &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; declaration when the document only contained the doctype declaration. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;#2617&lt;/a&gt;.</source>
          <target state="translated">ドキュメントにdoctype宣言のみが含まれている場合に、サイプレスが &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; 宣言の前にスクリプトタグを挿入する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;＃2617を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3b27680405327ff681dcf5185a3a98aa323ece7e" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would unnecessarily scroll when attempting to locate elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;#1475&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position: sticky&lt;/code&gt; 要素を見つけようとすると、サイプレスが不必要にスクロールしてしまう問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;＃1475を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c2b7eb108e49697e592b89d9e9807fdf2cb5d8f9" translate="yes" xml:space="preserve">
          <source>Fixed issue where XHR&amp;rsquo;s &lt;code&gt;onreadystatechange&lt;/code&gt; was not receiving the proper event arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;#2925&lt;/a&gt;.</source>
          <target state="translated">XHRの &lt;code&gt;onreadystatechange&lt;/code&gt; が適切なイベント引数を受け取っていなかった問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;＃2925を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c75325a7a749e1fc18b62df4e805e6f8f88e6325" translate="yes" xml:space="preserve">
          <source>Fixed issue where a fix included in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; did not pass the &lt;code&gt;windowsHide&lt;/code&gt; argument to the proper options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;#2809&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2に&lt;/a&gt;含まれる修正により、 &lt;code&gt;windowsHide&lt;/code&gt; 引数が適切なオプションに渡されなかった問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;＃2667&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;＃2809を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b14a57a15e2e6d2187b8c1897a452a081b129491" translate="yes" xml:space="preserve">
          <source>Fixed issue where all arguments passed to &lt;code&gt;setTimeout&lt;/code&gt; or &lt;code&gt;setInterval&lt;/code&gt; were not properly passed on to the target function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;#3592&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;setTimeout&lt;/code&gt; または &lt;code&gt;setInterval&lt;/code&gt; に渡されたすべての引数がターゲット関数に正しく渡されなかった問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;＃3592を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ea4ef4f116dcb42f5a217dc3ebfbfc859b67eb15" translate="yes" xml:space="preserve">
          <source>Fixed issue where an internal &lt;code&gt;layout.html&lt;/code&gt; file would inadvertently get loaded instead of the spec file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;#2891&lt;/a&gt;.</source>
          <target state="translated">内部の &lt;code&gt;layout.html&lt;/code&gt; ファイルが仕様ファイルの代わりに誤ってロードされる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;＃2891を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="61e2e78d63092fd0aaa0b59a93c82f55d29ec065" translate="yes" xml:space="preserve">
          <source>Fixed issue where applications programmatically stealing focus would lead to slow runs in Electron when running via &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;#1909&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;#1892&lt;/a&gt;.</source>
          <target state="translated">プログラムによってフォーカスを盗むアプリケーションが、 &lt;code&gt;cypress run&lt;/code&gt; を介して実行すると、Electronで実行が遅くなる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;＃1909&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;＃1892&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78e6597c87a7313be05729a497c7bfd4b42fb202" translate="yes" xml:space="preserve">
          <source>Fixed issue where change events with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; would not fire correctly for many more situations and edge cases. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;#651&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;を使用した変更イベントが、より多くの状況やエッジケースで正しく起動しない問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;＃651を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6082a19eab3879c28c8957cc98d4a27f61e03996" translate="yes" xml:space="preserve">
          <source>Fixed issue where changing any spec file (renaming, adding, deleting) would remove the highlighted styling of the currently active spec file in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;#547&lt;/a&gt;.</source>
          <target state="translated">スペックファイルを変更（名前の変更、追加、削除）すると、テストランナーで現在アクティブなスペックファイルの強調表示されたスタイルが削除される問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;＃547を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="23469c7b5f76bbf207e4c3d7030fc6fc6c2a0936" translate="yes" xml:space="preserve">
          <source>Fixed issue where clipped elements with &lt;code&gt;overflow-y: hidden&lt;/code&gt; were falsely passing as &amp;ldquo;visible&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;#563&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;overflow-y: hidden&lt;/code&gt; でクリップされた要素が誤って「可視」として渡される問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;＃563を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6343d4371cb8f9c21357792d33c5d7f89a53124d" translate="yes" xml:space="preserve">
          <source>Fixed issue where commands would retry and potentially exceed their timeout values during page transitions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;#594&lt;/a&gt;</source>
          <target state="translated">コマンドが再試行し、ページ遷移中にタイムアウト値を超える可能性がある問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;＃594の&lt;/a&gt;修正</target>
        </trans-unit>
        <trans-unit id="769e7ca2ba949f14f3ce789237c3e7e10b742074" translate="yes" xml:space="preserve">
          <source>Fixed issue where preprocessor errors were being swallowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;#1877&lt;/a&gt;.</source>
          <target state="translated">プリプロセッサエラーが飲み込まれる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;＃1877を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3119210afd00c5c5dc51ca602238f3d34a0039e0" translate="yes" xml:space="preserve">
          <source>Fixed issue where server error&amp;rsquo;s stack traces were being truncated in the Desktop app rendering them impossible to debug. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;#133&lt;/a&gt;.</source>
          <target state="translated">デスクトップエラーでサーバーエラーのスタックトレースが切り捨てられ、デバッグできなくなる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;＃133を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e9e189fc50c663b6981fb1654c5697d44b263104" translate="yes" xml:space="preserve">
          <source>Fixed issue where server routes were lost after page load if not initiated by a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;#177&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;コマンドによって開始されない場合、ページのロード後にサーバールートが失われる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;＃177の&lt;/a&gt;修正</target>
        </trans-unit>
        <trans-unit id="e69dc3681b067698e46ab13ea4db8ed44cdf0460" translate="yes" xml:space="preserve">
          <source>Fixed issue where setting &lt;code&gt;fixturesFolder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; would throw an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;#450&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fixturesFolder&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定するとエラーがスローされる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;＃450を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="50f490aa3955787ecd6045dae96e18a4ca0fd962" translate="yes" xml:space="preserve">
          <source>Fixed issue where some TTY characters were not properly formatted in the terminal for Windows during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;#1143&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;#1550&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 中に、一部のTTY文字がWindowsのターミナルで正しくフォーマットされなかった問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;＃1143&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;＃1550を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8fe62793640f8f0e386492283f323b52ec484dc1" translate="yes" xml:space="preserve">
          <source>Fixed issue where support for &lt;code&gt;have.focus&lt;/code&gt;, &lt;code&gt;not.have.focus&lt;/code&gt;, &lt;code&gt;be.focused&lt;/code&gt; and &lt;code&gt;not.be.focused&lt;/code&gt;&lt;a href=&quot;assertions&quot;&gt;assertions&lt;/a&gt; were not working. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;#4265&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;have.focus&lt;/code&gt; 、 &lt;code&gt;not.have.focus&lt;/code&gt; 、 &lt;code&gt;be.focused&lt;/code&gt; および &lt;code&gt;not.be.focused&lt;/code&gt; &lt;a href=&quot;assertions&quot;&gt;アサーションの&lt;/a&gt;サポートが機能しなかった問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;＃4265を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a7106ffbbd512163862ccb5d6274bfec4bb8c5d1" translate="yes" xml:space="preserve">
          <source>Fixed issue where the &lt;code&gt;onLoad&lt;/code&gt; event was never being called when calling &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; on the url Cypress is currently navigated to. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;#1311&lt;/a&gt;.</source>
          <target state="translated">サイプレスが現在移動しているURLで&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;を呼び出すときに &lt;code&gt;onLoad&lt;/code&gt; イベントが呼び出されなかった問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;＃1311を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7ab8e2b0380bae519febf7ace85d368f6eb6e2b7" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Chromium browser was not detected in Linux due to Cypress not distinguishing between Chrome and Chromium browsers with the same version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;#1400&lt;/a&gt;.</source>
          <target state="translated">サイプレスが同じバージョンのChromeブラウザーとChromiumブラウザーを区別しないために、LinuxでChromiumブラウザーが検出されなかった問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;＃1400を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b230f3bd283ba447a34dcf6083f2a7c9400b8949" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Cypress &lt;code&gt;window&lt;/code&gt; was being returned instead of AUT&amp;rsquo;s &lt;code&gt;window&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;#1436&lt;/a&gt;.</source>
          <target state="translated">AUTの &lt;code&gt;window&lt;/code&gt; ではなく、サイプレス &lt;code&gt;window&lt;/code&gt; が返される問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;＃1436を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="686a2f479eec0633cf642042cb9fe61613147511" translate="yes" xml:space="preserve">
          <source>Fixed issue where the contents of &lt;code&gt;state.json&lt;/code&gt; were emptied, which would cause a crash and loss of state information. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;#473&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;#474&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;state.json&lt;/code&gt; の内容が空になり、クラッシュして状態情報が失われる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;＃473&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;＃474を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c8025d1cc05af8c1db3cebb543fa817cdbc88f08" translate="yes" xml:space="preserve">
          <source>Fixed issue where using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on an input with a &lt;code&gt;type&lt;/code&gt; defined in uppercase (&lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt;) would throw an error and not type. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;#550&lt;/a&gt;.</source>
          <target state="translated">大文字で定義された &lt;code&gt;type&lt;/code&gt; （ &lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt; ）の入力で&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;を使用すると、タイプではなくエラーがスローされる問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;＃550を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0e4d146daf8133a0b16ea12603fb29188c6f270c" translate="yes" xml:space="preserve">
          <source>Fixed issue where videos would not be recorded when an object was returned from &lt;code&gt;before:browser:launch&lt;/code&gt; when in the Electron browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;#1992&lt;/a&gt;.</source>
          <target state="translated">Electronブラウザーで &lt;code&gt;before:browser:launch&lt;/code&gt; からオブジェクトが返されたときにビデオが記録されない問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;＃1992を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ff7cd280bca9001a56c43a9624644de7feee27b4" translate="yes" xml:space="preserve">
          <source>Fixed issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; inputs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;#490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt;および &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; 入力に関する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;＃490を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1f47175651ab56ab638ece075424b7507180fbf1" translate="yes" xml:space="preserve">
          <source>Fixed issue with loading fixture files containing more than one &lt;code&gt;.&lt;/code&gt; in their filename while not specifying the file extension. We are also displaying a clearer warning when a fixture file cannot be found. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;#1402&lt;/a&gt;.</source>
          <target state="translated">複数のを含むフィクスチャファイルのロードに関する問題を修正しました &lt;code&gt;.&lt;/code&gt; ファイル拡張子を指定せずにファイル名に。フィクスチャファイルが見つからない場合は、より明確な警告が表示されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;＃1402を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f1eafcab2c39c7bc18501c64d2171c4b3eb48ac0" translate="yes" xml:space="preserve">
          <source>Fixed issue with multiple &lt;code&gt;readyStateChanges&lt;/code&gt; with the same &lt;code&gt;readyState&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;#1150&lt;/a&gt;.</source>
          <target state="translated">同じ &lt;code&gt;readyState&lt;/code&gt; を持つ複数の &lt;code&gt;readyStateChanges&lt;/code&gt; の問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;＃1150を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="41c25c79688ff0690197673cdc2c4e9efaa4e51b" translate="yes" xml:space="preserve">
          <source>Fixed issues involving XHRs displaying as &amp;lsquo;aborted&amp;rsquo; in the Cypress Command Log when they were not actually aborted. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;#1652&lt;/a&gt;.</source>
          <target state="translated">サイプレスコマンドログでXHRが実際に中止されなかった場合に「中止」と表示される問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;＃1652を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f6119c94c4f2fd34d62c927a8b7e0d1b0b73dcec" translate="yes" xml:space="preserve">
          <source>Fixed issues where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; was not appending text properly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;#503&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;#568&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;がテキストを適切に追加しない問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;＃503&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;＃568を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b0e69a0ad1bef2e68406fab5ff999c0a0b85e190" translate="yes" xml:space="preserve">
          <source>Fixed issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing the &lt;code&gt;change&lt;/code&gt; event on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;#1171&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;input[type=number]&lt;/code&gt; &lt;code&gt;change&lt;/code&gt; イベントを起動しない問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;＃1171を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ec5062ddce1588be8e74acc91c85aa3ca70c8eb5" translate="yes" xml:space="preserve">
          <source>Fixed issues with typing into JS based text-mask plugins. Basically anything that would alter the &lt;code&gt;.value&lt;/code&gt; in response to certain events now works correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;#940&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;#1684&lt;/a&gt;.</source>
          <target state="translated">JSベースのテキストマスクプラグインへの入力に関する問題を修正しました。基本的に、特定のイベントに応答して &lt;code&gt;.value&lt;/code&gt; を変更するものはすべて正しく機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;＃940&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;＃1684を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5328ad377c6cc0c950ce0f104153a1169a508e90" translate="yes" xml:space="preserve">
          <source>Fixed many issues with typing into &lt;code&gt;[contenteditable]&lt;/code&gt; elements. WYSIWYG, &lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; based, and other HTML editors now work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;#596&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;#1686&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;#2096&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[contenteditable]&lt;/code&gt; 要素への入力に関する多くの問題を修正しました。WYSIWYG、&lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt;ベース、およびその他のHTMLエディターが正しく動作するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;＃596&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;＃1686&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;＃2096を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="9c9cc16289962ed52b63c65cfc10f5d7a7112ffa" translate="yes" xml:space="preserve">
          <source>Fixed missing &lt;code&gt;aliasType&lt;/code&gt; from primitives and some DOM aliases, which prevent the background color from displaying in the UI.</source>
          <target state="translated">プリミティブと一部のDOMエイリアスから欠落している &lt;code&gt;aliasType&lt;/code&gt; を修正しました。これにより、UIに背景色が表示されなくなります。</target>
        </trans-unit>
        <trans-unit id="c2d6f09dd07845b621667382b48aa0fbfa00c07a" translate="yes" xml:space="preserve">
          <source>Fixed missing dependency for CI.</source>
          <target state="translated">CIの依存関係の欠落を修正。</target>
        </trans-unit>
        <trans-unit id="2338274d63db423cc9c9f3c87f5c93d5d86ba839" translate="yes" xml:space="preserve">
          <source>Fixed missing files from deployment. Added tests around this.</source>
          <target state="translated">デプロイメントから欠落しているファイルを修正しました。このあたりのテストを追加しました。</target>
        </trans-unit>
        <trans-unit id="a7f782dd62aa8c332550fad64089662ab46e1e9d" translate="yes" xml:space="preserve">
          <source>Fixed more edge cases where legitimate JavaScript code was being modified unexpectedly by the &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; configuration. We&amp;rsquo;ve tightened up the RegExp even more and added 40 popular JS libraries to test against to ensure they are not modified. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;#1334&lt;/a&gt;.</source>
          <target state="translated">正規のJavaScriptコードが&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt;構成によって予期せず変更されていたエッジケースをさらに修正しました。RegExpをさらに強化し、40の人気のあるJSライブラリを追加して、それらが変更されていないことを確認します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;＃1334を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f0eb4a78d03cd66d4c95162944c3e65fc1ebb77c" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type into a &lt;code&gt;datetime-local&lt;/code&gt; input. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;#1366&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;datetime-local&lt;/code&gt; 入力に入力できないことを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;＃1366を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0343e78d24123f511becf5cb6a50acd615d5f5b7" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type negative numbers into &lt;code&gt;input[type=number]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;#2173&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=number]&lt;/code&gt; 要素に負の数を入力できないことを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;＃2173を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ce2ea5061ccbe451eaebd1b3886b9bdcfe937e20" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit URLs that used &lt;code&gt;*localhost&lt;/code&gt; such as &lt;code&gt;http://app.localhost:8080&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;#451&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;http://app.localhost:8080&lt;/code&gt; などの &lt;code&gt;*localhost&lt;/code&gt; を使用したURLにアクセスできない問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;＃451を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="bb85a7a8a915f26baefc92cd213832444d9dfb78" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit private TLD&amp;rsquo;s from the public suffix such as &lt;code&gt;github.io&lt;/code&gt;, &lt;code&gt;gitlab.io&lt;/code&gt; or &lt;code&gt;herokuapp.com&lt;/code&gt;. These now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;#380&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;#402&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;#802&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;#493&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;#1161&lt;/a&gt;.</source>
          <target state="translated">固定のような公共の接尾辞からプライベートTLDのを訪問することができない &lt;code&gt;github.io&lt;/code&gt; 、 &lt;code&gt;gitlab.io&lt;/code&gt; または &lt;code&gt;herokuapp.com&lt;/code&gt; 。これらはすべて正しく動作するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;＃380&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;＃402&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;＃802&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;＃493&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;＃1161を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="91faace71bc27b25103af821c4ed14338a407e27" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit subdomains when using 2nd level sub domains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;#1175&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;#600&lt;/a&gt;.</source>
          <target state="translated">第2レベルのサブドメインを使用しているときにサブドメインにアクセスできない問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;＃1175&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;＃600を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2fd5dc2da998e702c253abf33612dbfdee626943" translate="yes" xml:space="preserve">
          <source>Fixed not correctly passing the &lt;code&gt;timeout&lt;/code&gt; option for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. This should fix some instances where large &lt;code&gt;timeout&lt;/code&gt; values would cause &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;#2669&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;timeout&lt;/code&gt; オプションを正しく渡さないのを修正しました。これにより、 &lt;code&gt;timeout&lt;/code&gt; 値が大きいと &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; エラーが発生するいくつかのインスタンスが修正されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;＃2669を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c31591cd4d8d4ed564e72f3cb6296e78bb377c61" translate="yes" xml:space="preserve">
          <source>Fixed other event related issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; that were not firing correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;#1209&lt;/a&gt;.</source>
          <target state="translated">正しく実行されなかった&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; の&lt;/a&gt;その他のイベント関連の問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;＃1209を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="edefe93bf8f9c5871698c12af8e0696b38b68cad" translate="yes" xml:space="preserve">
          <source>Fixed problem with rewriting content on elements which contained &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; 要素を含む要素のコンテンツの書き換えに関する問題を修正しました。</target>
        </trans-unit>
        <trans-unit id="43ad4f25a3eed077befe9519dd732c427d562b46" translate="yes" xml:space="preserve">
          <source>Fixed putting an &lt;code&gt;.only&lt;/code&gt; on a large list of tests that would sometimes not clear the previous runnables in the UI.</source>
          <target state="translated">UIで以前の実行可能 &lt;code&gt;.only&lt;/code&gt; をクリアできないことがあるテストの大きなリストに.onlyを置くことを修正しました。</target>
        </trans-unit>
        <trans-unit id="a2caf8784be60677041b659dadea9400412e0693" translate="yes" xml:space="preserve">
          <source>Fixed regression caused by &lt;code&gt;0.16.2&lt;/code&gt; where a failed &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; would not be canceled and would continue to run and display failed assertions in between test runs (without a full page refresh). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;#174&lt;/a&gt;.</source>
          <target state="translated">失敗した&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;がキャンセルされず、実行を継続し、テスト実行の合間に失敗したアサーションを表示する &lt;code&gt;0.16.2&lt;/code&gt; によって引き起こされるリグレッションを修正しました（ページ全体の更新なし）。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;＃174を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4c9fbfe8fdbc7075beebaee40771e5a6e1c149db" translate="yes" xml:space="preserve">
          <source>Fixed regression causing invocations of &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; to error on subsequent tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;#2850&lt;/a&gt;.</source>
          <target state="translated">後続のテストで&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; の&lt;/a&gt;呼び出しでエラーが発生する原因となっていた回帰を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;＃2850を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="60f49a5a118e5920f657fbfe9b3154bb1fd56657" translate="yes" xml:space="preserve">
          <source>Fixed regression in &lt;code&gt;0.18.6&lt;/code&gt; that caused Cypress to fail when switching spec files when &lt;code&gt;baseUrl&lt;/code&gt; was set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;#403&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;0.18.6&lt;/code&gt; で &lt;code&gt;baseUrl&lt;/code&gt; が設定されているときにスペックファイルを切り替えるとサイプレスが失敗する原因となった0.18.6のリグレッションを修正し &lt;code&gt;cypress.json&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;＃403を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9add25a461f073babcc6b30c1b6633afbac49710" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; where Cypress would error because it could not find a type definition file for &amp;lsquo;../sinon&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;#4272&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;で導入された'../sinon'のタイプ定義ファイルが見つからなかったためにサイプレスがエラーを引き起こした回帰を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;＃4272を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ed748da281606e6ecf264dbc3e50b17da63ec753" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1&lt;/a&gt; with &lt;code&gt;requestAnimationFrame&lt;/code&gt; that caused some animations not to run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;#2725&lt;/a&gt;.</source>
          <target state="translated">一部のアニメーションが実行されない原因となった &lt;code&gt;requestAnimationFrame&lt;/code&gt; で&lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1に&lt;/a&gt;導入された回帰を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;＃2725を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3a8bf2ec79bf5b856e9d14b2d045c37061e87b42" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; that caused DOM elements passed to &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; to no longer yield the proper jQuery array instance. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;#2820&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt;で導入された回帰により、&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt;に渡されたDOM要素が適切なjQuery配列インスタンスを生成しなくなった問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;＃2820を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ef081df82fe02c1d21fbf3be3167db4dedd0a141" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;code&gt;3.1.4&lt;/code&gt; that caused an &lt;code&gt;InvalidStateError&lt;/code&gt; when visiting a page with an XHR request with a &lt;code&gt;responseType&lt;/code&gt; other than &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;#3008&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;3.1.4&lt;/code&gt; で導入された、 &lt;code&gt;text&lt;/code&gt; または &lt;code&gt;''&lt;/code&gt; 以外の &lt;code&gt;responseType&lt;/code&gt; を含むXHRリクエストを含むページにアクセスすると &lt;code&gt;InvalidStateError&lt;/code&gt; が発生する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;＃3008を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9fbf7ab71d1ad8d196ebbf6d38453f6febbccb19" translate="yes" xml:space="preserve">
          <source>Fixed regression related to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not re-visiting when current match matches remote url.</source>
          <target state="translated">現在の一致がリモートURLと一致するときに&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; に&lt;/a&gt;関連するリグレッションが再訪問しない問題を修正しました。</target>
        </trans-unit>
        <trans-unit id="20bad64bdf088500e5c0af6e99c92b091e7e853d" translate="yes" xml:space="preserve">
          <source>Fixed regression where multiple uses of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;before&lt;/code&gt; hook was throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;#80&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;#510&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;#595&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; フックで&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; を&lt;/a&gt;複数回使用するとエラーがスローされていた問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;＃80&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;＃510&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;＃595を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="1ddb4c351234ffa2349168a921fdc72bc078ef5e" translate="yes" xml:space="preserve">
          <source>Fixed server crash on improperly handled proxy error.</source>
          <target state="translated">不適切に処理されたプロキシエラーでサーバーがクラッシュする問題を修正しました。</target>
        </trans-unit>
        <trans-unit id="ecac16a391c930105a5e711ddaf722b02291363a" translate="yes" xml:space="preserve">
          <source>Fixed several issues in Chrome* versions &amp;gt;= 72 in the Cypress proxy that caused using &lt;code&gt;cy.visit()&lt;/code&gt; with &lt;code&gt;localhost&lt;/code&gt; to fail, or using &lt;code&gt;localhost&lt;/code&gt; inside of the &lt;code&gt;baseUrl&lt;/code&gt; configuration option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;#1872&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;#3252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;#1777&lt;/a&gt;.</source>
          <target state="translated">使用して発生するサイプレスプロキシでのバージョン&amp;gt; = 72 * Chromeでいくつかの問題を修正 &lt;code&gt;cy.visit()&lt;/code&gt; と &lt;code&gt;localhost&lt;/code&gt; の失敗する、または使用して &lt;code&gt;localhost&lt;/code&gt; の内部 &lt;code&gt;baseUrl&lt;/code&gt; にする設定オプションを。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;＃1872&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;＃3252&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;＃1777を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5f42bd80d6e2ce3f8d06f2af19a9e6ae58e4c500" translate="yes" xml:space="preserve">
          <source>Fixed situation where &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; would not restore correctly between tests. Previously this would cause subsequent tests to be issued at the modified &lt;code&gt;cy.viewport()&lt;/code&gt;. Now viewport is automatically restored to the settings in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">テスト間で&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt;が正しく復元されない状況を修正しました。以前は、変更された &lt;code&gt;cy.viewport()&lt;/code&gt; で後続のテストが発行されていました。これで、ビューポートが &lt;code&gt;cypress.json&lt;/code&gt; ファイルの設定に自動的に復元されます。</target>
        </trans-unit>
        <trans-unit id="b02f4bc11e465b4861e78fa180aac2c8fae16746" translate="yes" xml:space="preserve">
          <source>Fixed situation where Cypress was not injected correctly when &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag had attributes</source>
          <target state="translated">&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; タグに属性があるときにサイプレスが正しく挿入されなかった状況を修正しました</target>
        </trans-unit>
        <trans-unit id="82fcae25d4eeaf0c24c4f8bd7ea1fdb7b64e82c8" translate="yes" xml:space="preserve">
          <source>Fixed situation where an &lt;code&gt;Uncaught Error&lt;/code&gt; was not being properly handled. Cypress would incorrectly continue to retry commands instead of canceling them, which lead to incorrect errors downstream in other tests.</source>
          <target state="translated">&lt;code&gt;Uncaught Error&lt;/code&gt; されなかったエラーが適切に処理されなかった状況を修正しました。サイプレスは、コマンドを取り消すのではなく、誤って再試行し続け、他のテストの下流で誤ったエラーを引き起こしていました。</target>
        </trans-unit>
        <trans-unit id="1a805b2b9cd9f12618c568d08f8bfa058423cebd" translate="yes" xml:space="preserve">
          <source>Fixed situation where an error being thrown from an XHR was being improperly handled (in a slightly different way than the problem above).</source>
          <target state="translated">XHRから投げられるエラーが不適切に処理されていた状況を修正しました(上記の問題とは若干異なる方法で)。</target>
        </trans-unit>
        <trans-unit id="25f011fff74cccfe58470de3408473111e220183" translate="yes" xml:space="preserve">
          <source>Fixed situations where 3rd party libraries (such as &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt; were instrumenting XHR&amp;rsquo;s identical to Cypress&amp;rsquo; implementation. This caused an infinite loop which would crash the browser. We&amp;rsquo;ve updated how we instrument XHR&amp;rsquo;s to take this into account and deployed multiple fallbacks and strategies to prevent this kind of thing from happening in the future. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;#166&lt;/a&gt;.</source>
          <target state="translated">サードパーティのライブラリ（&lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt;など）がサイプレスの実装と同一のXHRを計測していた状況を修正しました。これにより無限ループが発生し、ブラウザーがクラッシュしました。これを考慮してXHRを計測する方法を更新し、複数のフォールバックと戦略を展開しましたこの種の問題が今後発生しないようにするための修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;＃166&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a90330d9d199513c3c1f697121f82d67ac9dcfbb" translate="yes" xml:space="preserve">
          <source>Fixed some areas of the Desktop GUI that did not display path names correctly in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;#1830&lt;/a&gt;.</source>
          <target state="translated">Windowsでパス名が正しく表示されなかったデスクトップGUIの一部の領域を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;＃1830を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7635003eb479c61bfa93d0fc555e7854d8689974" translate="yes" xml:space="preserve">
          <source>Fixed some edge cases in &lt;code&gt;cypress-core-extension&lt;/code&gt; where it threw errors when attempting to &lt;code&gt;executeScript&lt;/code&gt; on a tab with &lt;code&gt;about:blank&lt;/code&gt; or &lt;code&gt;chrome://&lt;/code&gt; urls.</source>
          <target state="translated">&lt;code&gt;cypress-core-extension&lt;/code&gt; の一部のエッジケースを修正しました &lt;code&gt;executeScript&lt;/code&gt; &lt;code&gt;about:blank&lt;/code&gt; または &lt;code&gt;chrome://&lt;/code&gt; の URL を含むタブでスクリプトを実行しようとするとエラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="9bd64d1ad2c64718c1c35c5a6bc71306ca4b20b9" translate="yes" xml:space="preserve">
          <source>Fixed some incorrect typings with TypeScript. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;#1219&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;#1186&lt;/a&gt;.</source>
          <target state="translated">TypeScriptでのいくつかの誤った入力を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;＃1219&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;＃1186を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="55c6d5e91f27e4bc6b9cbc8398af21c15ac18f36" translate="yes" xml:space="preserve">
          <source>Fixed some problems serializing objects during domain change caused by circular references. In this case &lt;code&gt;zone.js&lt;/code&gt; was the culprit. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;#741&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt;.</source>
          <target state="translated">循環参照によるドメイン変更中にオブジェクトをシリアル化する際のいくつかの問題を修正しました。この場合、 &lt;code&gt;zone.js&lt;/code&gt; が原因でした。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;＃741を&lt;/a&gt;修正。&lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt;によって提供されました。</target>
        </trans-unit>
        <trans-unit id="ddf78fe9549f499bc7176b4a4219579e669fe7ba" translate="yes" xml:space="preserve">
          <source>Fixed some scenarios where assertions would not be logged as a child command.</source>
          <target state="translated">アサーションが子コマンドとしてログに記録されないシナリオがあったのを修正しました。</target>
        </trans-unit>
        <trans-unit id="b9298b1875f43960fb08c18b6e1ce951e11833fc" translate="yes" xml:space="preserve">
          <source>Fixed switching between two different spec files from the desktop app causing &lt;code&gt;document.domain&lt;/code&gt; to be wrong. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;#276&lt;/a&gt;.</source>
          <target state="translated">デスクトップアプリからの2つの異なるスペックファイル間の切り替えが原因で &lt;code&gt;document.domain&lt;/code&gt; が間違っているのを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;＃276を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f3bbfab42be47f224b21071ed8d933508ef837ed" translate="yes" xml:space="preserve">
          <source>Fixed the incorrectly spelled chainer &lt;code&gt;descendents&lt;/code&gt;. It is now correctly spelled as &lt;code&gt;descendants&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;#642&lt;/a&gt;.</source>
          <target state="translated">誤ってつづられたチェーン &lt;code&gt;descendents&lt;/code&gt; 修正しました。 &lt;code&gt;descendants&lt;/code&gt; スペルが正しくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;＃642を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4396b312ac9ada54640275a453c976e5b4b65689" translate="yes" xml:space="preserve">
          <source>Fixed the vast majority of known issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;#1241&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;に関する既知の問題の大部分を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;＃1241を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="cd89959daffe5325a72d86a78445ddd2f3665adf" translate="yes" xml:space="preserve">
          <source>Fixed type definition for &lt;code&gt;match&lt;/code&gt; assertion so that it now only accepts &lt;code&gt;RegExp&lt;/code&gt; type arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;#2578&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; アサーションのタイプ定義が修正され、 &lt;code&gt;RegExp&lt;/code&gt; タイプの引数のみを受け入れるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;＃2578を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="31a2d12cdee595f72dbb70479095a595262b2ef8" translate="yes" xml:space="preserve">
          <source>Fixed typo in &lt;code&gt;cypress.schema.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;#1167&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.schema.json&lt;/code&gt; のタイプミスを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;＃1167を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f13e96255f478cbf579d384640d76990bf989276" translate="yes" xml:space="preserve">
          <source>Fixed typo in CLI deps error about Docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;#1136&lt;/a&gt;.</source>
          <target state="translated">Dockerに関するCLI depsエラーのタイプミスを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;＃1136を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="123a406e131050d5c46783cac9db4faa4b1adf80" translate="yes" xml:space="preserve">
          <source>Fixed typo in typing for &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger&lt;/code&gt;&lt;/a&gt; options. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;#3588&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger&lt;/code&gt; &lt;/a&gt;オプションのタイピングのタイプミスを修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;＃3588で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="4c6862d12df0492a8d47eb9f800cc435dca34ba5" translate="yes" xml:space="preserve">
          <source>Fixed using when using &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;cy.click()&lt;/code&gt;&lt;/a&gt; on an element that bound to the &lt;code&gt;focus&lt;/code&gt; event while the browser was currently &lt;em&gt;out of focus&lt;/em&gt;. We have now normalized &lt;strong&gt;all focus and blur events&lt;/strong&gt; to behave the same as if the browser is always in focus. This should fix the other batch of &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; issues that users have been experiencing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;#549&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;#2198&lt;/a&gt;.</source>
          <target state="translated">使用する際に使用して固定&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;cy.click()&lt;/code&gt; &lt;/a&gt;に結合することを要素に &lt;code&gt;focus&lt;/code&gt; ブラウザは、現在であったイベント&lt;em&gt;ピントの外れを&lt;/em&gt;。これで、&lt;strong&gt;すべてのfocusおよびblurイベント&lt;/strong&gt;が正規化され、ブラウザーが常にフォーカスされている場合と同じように動作します。これにより、ユーザーが経験していた他の &lt;code&gt;blur&lt;/code&gt; と &lt;code&gt;focus&lt;/code&gt; 問題が修正されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;＃549&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;＃2198を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e266b628f293db1e722b0b04069227dc5bc1d508" translate="yes" xml:space="preserve">
          <source>Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;#14&lt;/a&gt;.</source>
          <target state="translated">修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;＃14&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3e73107f01c45ba65469b717cdbdfd3673801c8" translate="yes" xml:space="preserve">
          <source>Fixes a race condition where async electron browser commands came in after the renderer had been destroyed, causing failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;#2321&lt;/a&gt;.</source>
          <target state="translated">レンダラーが破棄された後にasync electron browserコマンドが受信され、失敗の原因となる競合状態を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;＃2321を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b79957adcf9f3730b2dfc85a7ef0e7996d01b27b" translate="yes" xml:space="preserve">
          <source>Fixture</source>
          <target state="translated">Fixture</target>
        </trans-unit>
        <trans-unit id="31d84bd77e5cf1531a4306001f3e8c670196d59e" translate="yes" xml:space="preserve">
          <source>Fixture Files</source>
          <target state="translated">フィクスチャファイル</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="8b2b39b6f6f2024db961fda1285280a85334d5cf" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically formatted / indented for easy debugging.</source>
          <target state="translated">フィクスチャは自動的にフォーマットされ、デバッグを容易にするためにインデントされます。</target>
        </trans-unit>
        <trans-unit id="966639036f094c23a89188baf7bf20ba4d6fd0e2" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically validated, with error messages propagating up to the client.</source>
          <target state="translated">フィクスチャは自動的に検証され、エラーメッセージがクライアントに伝搬します。</target>
        </trans-unit>
        <trans-unit id="1e0b0d59a94207af47ec8f5dccde6051018f845d" translate="yes" xml:space="preserve">
          <source>Fixtures are used as external pieces of static data that can be used by your tests. Fixture files are located in &lt;code&gt;cypress/fixtures&lt;/code&gt; by default, but can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured&lt;/a&gt; to another directory.</source>
          <target state="translated">フィクスチャは、テストで使用できる静的データの外部ピースとして使用されます。フィクスチャファイルは、デフォルトでは &lt;code&gt;cypress/fixtures&lt;/code&gt; にありますが、別のディレクトリに&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;構成&lt;/a&gt;することもできます。</target>
        </trans-unit>
        <trans-unit id="57daed953824ba45abfcd5c87989fcded301dd2a" translate="yes" xml:space="preserve">
          <source>Fixtures can also be referenced directly without using the &lt;code&gt;.fixture()&lt;/code&gt; command by using the special keywords: &lt;code&gt;fixture:&lt;/code&gt; or &lt;code&gt;fx:&lt;/code&gt; within &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特別なキーワード&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;fixture:&lt;/code&gt; または &lt;code&gt;fx:&lt;/code&gt; をcy.route（）内で使用 &lt;code&gt;.fixture()&lt;/code&gt; を使用して、.fixture（）コマンドを使用せずにフィクスチャーを直接参照することもできます。</target>
        </trans-unit>
        <trans-unit id="43bf9da5a2cde3892e6fd38e31b665731bc53300" translate="yes" xml:space="preserve">
          <source>Fixtures can also be referenced directly without using the &lt;code&gt;.fixture()&lt;/code&gt; command by using the special property &lt;code&gt;fixture&lt;/code&gt; on the &lt;a href=&quot;intercept&quot;&gt;&lt;code&gt;cy.intercept()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;StaticResponse&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;fixture&lt;/code&gt; は、&lt;a href=&quot;intercept&quot;&gt; &lt;code&gt;cy.intercept()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;StaticResponse&lt;/code&gt; オブジェクトの特別なプロパティフィクスチャを使用して、 &lt;code&gt;.fixture()&lt;/code&gt; コマンドを使用せずに直接参照することもできます。</target>
        </trans-unit>
        <trans-unit id="076842db32152f6390a1de20bb1fbc6e90ec7ca2" translate="yes" xml:space="preserve">
          <source>Fixtures support &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, and &lt;code&gt;coffee&lt;/code&gt; files with image support coming soon.</source>
          <target state="translated">フィクスチャは &lt;code&gt;json&lt;/code&gt; 、 &lt;code&gt;js&lt;/code&gt; 、および &lt;code&gt;coffee&lt;/code&gt; ファイルをサポートし、画像のサポートもまもなく開始されます。</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="6ee2ec8b01f6a2d6ac9d639232c343a8f90182ba" translate="yes" xml:space="preserve">
          <source>Flake</source>
          <target state="translated">Flake</target>
        </trans-unit>
        <trans-unit id="d91efa73e5b91a88b6662bb37f8407309f3b7059" translate="yes" xml:space="preserve">
          <source>Flake resistant</source>
          <target state="translated">耐フレーク性</target>
        </trans-unit>
        <trans-unit id="fe7f55b8bf68fd47d248a271d541e7e183621010" translate="yes" xml:space="preserve">
          <source>Focus</source>
          <target state="translated">Focus</target>
        </trans-unit>
        <trans-unit id="504969e1329eefbbfdeeb59a6ddae1deec1b4aca" translate="yes" xml:space="preserve">
          <source>Focus is given to the first focusable element</source>
          <target state="translated">フォーカスは最初のフォーカス可能な要素に与えられます</target>
        </trans-unit>
        <trans-unit id="2e297c61dbffb1cb797e7780c079b71f4d5b829d" translate="yes" xml:space="preserve">
          <source>Focus is not an action command</source>
          <target state="translated">フォーカスはアクションコマンドではない</target>
        </trans-unit>
        <trans-unit id="05fe5fdddd29a27eba93a4eff2e3520554c5881d" translate="yes" xml:space="preserve">
          <source>Focus on a DOM element.</source>
          <target state="translated">DOM 要素にフォーカスします。</target>
        </trans-unit>
        <trans-unit id="210b73a2419ab094c9f12e186fddae826317c4cb" translate="yes" xml:space="preserve">
          <source>Focus on an input</source>
          <target state="translated">入力を重視する</target>
        </trans-unit>
        <trans-unit id="81d320705a2ddd9e662402bee5f10442bd02b78b" translate="yes" xml:space="preserve">
          <source>Focus, type, and blur a textarea</source>
          <target state="translated">テキストエリアのフォーカス、タイプ、ぼかし</target>
        </trans-unit>
        <trans-unit id="b590cd6b1e83fa70fd0a3de3bc09fc6af804a5cb" translate="yes" xml:space="preserve">
          <source>Focusable</source>
          <target state="translated">Focusable</target>
        </trans-unit>
        <trans-unit id="19137a2bc8511e2902e61e074e829a5d7f79b9b2" translate="yes" xml:space="preserve">
          <source>Folder Structure</source>
          <target state="translated">フォルダ構造</target>
        </trans-unit>
        <trans-unit id="19adc47be34bed86af37b8e8dc882af424402561" translate="yes" xml:space="preserve">
          <source>Folders</source>
          <target state="translated">Folders</target>
        </trans-unit>
        <trans-unit id="3778aa33bb0864f2f8fcc7c110b3e0e3cc013dfc" translate="yes" xml:space="preserve">
          <source>Folders / Files</source>
          <target state="translated">リーフレット/ファイル</target>
        </trans-unit>
        <trans-unit id="61370060bdb7d5e684f62aaa98a8a18eee47ce57" translate="yes" xml:space="preserve">
          <source>Follow the following process to request an OSS plan for your project:</source>
          <target state="translated">以下の手順に従って、プロジェクトのOSS計画を依頼してください。</target>
        </trans-unit>
        <trans-unit id="98df868c5fb316adc798790cfa5815b00c32e758" translate="yes" xml:space="preserve">
          <source>For &amp;lsquo;selecting&amp;rsquo; an option, just type it into the input.</source>
          <target state="translated">オプションを「選択」するには、入力に入力するだけです。</target>
        </trans-unit>
        <trans-unit id="e977c306cc77cda1ecdfaf0ddef7d8d79c99ed98" translate="yes" xml:space="preserve">
          <source>For JSON, the contents yielded are parsed into JavaScript and returned.</source>
          <target state="translated">JSONの場合、生成された内容はJavaScriptに解析されて返されます。</target>
        </trans-unit>
        <trans-unit id="d3681f0b1f80d660f99494942d5d9f15e68f3c5c" translate="yes" xml:space="preserve">
          <source>For a comprehensive list of all configuration values look here.</source>
          <target state="translated">すべての設定値の包括的なリストは、ここを参照してください。</target>
        </trans-unit>
        <trans-unit id="6fde55b197d8bc9171398408dd11058266e6428a" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;read more about aliasing here&lt;/a&gt;.</source>
          <target state="translated">エイリアシングの詳細については、&lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;ここ&lt;/a&gt;でエイリアシングの詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="6b747e493d60035aa88d9e5488eaf0d99b0cf5fc" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;read more about waiting on routes here&lt;/a&gt;.</source>
          <target state="translated">エイリアシングの詳細な説明については、&lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;ここでルート待機の&lt;/a&gt;詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="46aa6a9db14417356ce7d56cdff550006b66a46f" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html#Aliases&quot;&gt;read more about aliasing here&lt;/a&gt;.</source>
          <target state="translated">エイリアシングの詳細については、&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html#Aliases&quot;&gt;こちらをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ec6efa9208593a34a7a58d14a56e9617bb92fea" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html#Waiting&quot;&gt;read more about waiting on routes here&lt;/a&gt;.</source>
          <target state="translated">エイリアシングの詳細な説明については、&lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html#Waiting&quot;&gt;ここでルートの待機について詳しく読んでください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c112b29f653fa6da29b77c4076e2ef3e3a084105" translate="yes" xml:space="preserve">
          <source>For a failure screenshot, the default naming scheme is used and the name is appended with &lt;code&gt;(failed)&lt;/code&gt;: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</source>
          <target state="translated">失敗したスクリーンショットの場合、デフォルトの命名スキームが使用され、名前に &lt;code&gt;(failed)&lt;/code&gt; が追加されます： &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3622304f60b3021288d1c3d8d20c5a919b618c3" translate="yes" xml:space="preserve">
          <source>For a full example where invoke is used to await async Vuex store actions, visit the recipe: &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;Vue + Vuex + REST&lt;/a&gt;</source>
          <target state="translated">非同期Vuexストアアクションを待機するためにinvokeが使用される完全な例については、レシピにアクセスしてください：&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;Vue + Vuex + REST&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a665f1775461ab3d07e8409cfd0c265140d91e7f" translate="yes" xml:space="preserve">
          <source>For a more thorough explanation of Cypress&amp;rsquo;s Web Security model, &lt;a href=&quot;../guides/web-security&quot;&gt;please read our dedicated guide to it&lt;/a&gt;.</source>
          <target state="translated">サイプレスのWebセキュリティモデルの&lt;a href=&quot;../guides/web-security&quot;&gt;詳細については、専用のガイドをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81b646082a814f0faa4350f1e9fe72ba04d2d004" translate="yes" xml:space="preserve">
          <source>For a named screenshot, the name is used instead of the suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</source>
          <target state="translated">名前付きスクリーンショットの場合、スイートとテスト名の代わりに名前が使用されます： &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1875e2e03dcd0d2fa376d7793b62e8918bbb3dbf" translate="yes" xml:space="preserve">
          <source>For a variety of implementation reasons, Cypress commands &lt;strong&gt;only&lt;/strong&gt; retry the &lt;strong&gt;last command&lt;/strong&gt; before the assertion. In our test:</source>
          <target state="translated">さまざまな実装上の理由により、サイプレスコマンド&lt;strong&gt;は&lt;/strong&gt;、アサーションの前に&lt;strong&gt;最後の&lt;/strong&gt;コマンド&lt;strong&gt;のみを&lt;/strong&gt;再試行します。私たちのテストでは：</target>
        </trans-unit>
        <trans-unit id="d43c859b9e7c1c86f68c1d7527404d0b8d12f85a" translate="yes" xml:space="preserve">
          <source>For any duplicate screenshots (named or not), they will be appended with a number: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt;</source>
          <target state="translated">重複するスクリーンショット（名前付きかどうかにかかわらず）には、番号が追加されます： &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="580371d64b28a421d6f70048a5b3551ae4f827cc" translate="yes" xml:space="preserve">
          <source>For any file other than JSON, the contents of the file are returned.</source>
          <target state="translated">JSON以外のファイルについては、ファイルの内容を返します。</target>
        </trans-unit>
        <trans-unit id="91b613f768c593855e85ce87451fd66e1155cdb4" translate="yes" xml:space="preserve">
          <source>For any other server type, define a &lt;code&gt;GET /__coverage__&lt;/code&gt; endpoint and return the &lt;code&gt;global.__coverage__&lt;/code&gt; object.</source>
          <target state="translated">その他のサーバータイプの場合は、 &lt;code&gt;GET /__coverage__&lt;/code&gt; エンドポイントを定義し、 &lt;code&gt;global.__coverage__&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="ff6639c39228ded6347d1f488c7234eea10e2fb6" translate="yes" xml:space="preserve">
          <source>For brevity we&amp;rsquo;ve omitted the full path to the cypress executable in each command&amp;rsquo;s documentation.</source>
          <target state="translated">簡潔にするため、各コマンドのドキュメントではサイプレス実行可能ファイルへのフルパスを省略しています。</target>
        </trans-unit>
        <trans-unit id="201ee05c918022669060bbba7c946dd7db53a43e" translate="yes" xml:space="preserve">
          <source>For certain commands like &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;, an extra instrument panel is displayed above the test to give more information about the state of your tests.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt;などの特定のコマンドでは、テストの状態に関する詳細情報を提供する追加のインストルメントパネルがテストの上に表示されます。</target>
        </trans-unit>
        <trans-unit id="cae9b803221129b647d814f9c377a224266b68b3" translate="yes" xml:space="preserve">
          <source>For clarity you can pass a string message as a second argument to any &lt;code&gt;expect&lt;/code&gt; assertion, see &lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;Chai#expect&lt;/a&gt;.</source>
          <target state="translated">明確にするために、任意の &lt;code&gt;expect&lt;/code&gt; アサーションの2番目の引数として文字列メッセージを渡すことができます&lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;。Chai＃expectを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7df63eb79e11a90822227f06bac5c3df82d15fa8" translate="yes" xml:space="preserve">
          <source>For convenience, you can also omit any return value or return &lt;code&gt;undefined&lt;/code&gt; and Cypress will not error.</source>
          <target state="translated">便宜上、戻り値を省略したり、 &lt;code&gt;undefined&lt;/code&gt; を返すこともでき、サイプレスはエラーになりません。</target>
        </trans-unit>
        <trans-unit id="f9c0ce52609e0b7f8cfe8d5f39cd21cde114fb46" translate="yes" xml:space="preserve">
          <source>For example - say a command we wrote timed out: &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get('#element')&lt;/code&gt;&lt;/a&gt;. This causes your test to fail. Cypress then automatically takes a screenshot when the test fails, but it is possible something in your application changed within this &lt;code&gt;100ms&lt;/code&gt; timeframe. Hypothetically, your app could render the element you were originally expecting to be present. When this happens, the screenshot may provide confusing results. It is unlikely, but theoretically possible.</source>
          <target state="translated">たとえば、タイムアウトした書き込みコマンド&lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get('#element')&lt;/code&gt; としましょう&lt;/a&gt;。これにより、テストが失敗します。テストが失敗すると、サイプレスは自動的にスクリーンショットを撮りますが、この &lt;code&gt;100ms&lt;/code&gt; の時間内にアプリケーションの何かが変更される可能性があります。仮に、アプリは本来存在するはずだった要素をレンダリングする可能性があります。これが発生すると、スクリーンショットが混乱する結果をもたらす可能性があります。可能性は低いですが、理論的には可能です。</target>
        </trans-unit>
        <trans-unit id="263146ee5d217d189aa21d8fbdb6bfe0fbec8237" translate="yes" xml:space="preserve">
          <source>For example if you add the command &lt;code&gt;cy.dataCy&lt;/code&gt; into your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">たとえば、次のように&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; に&lt;/a&gt;コマンド &lt;code&gt;cy.dataCy&lt;/code&gt; を追加するとします。</target>
        </trans-unit>
        <trans-unit id="2758c38b95307263ee836b320324f26239fd0efb" translate="yes" xml:space="preserve">
          <source>For example, clicking a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; inside of a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; gives the focus to the button, since that&amp;rsquo;s what would happen in a real user scenario.</source>
          <target state="translated">たとえば、 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 内の&amp;lt;span&amp;gt;をクリックすると、ボタンにフォーカスが移動します。これは、実際のユーザーシナリオで発生することだからです。</target>
        </trans-unit>
        <trans-unit id="6f4fdb15c7328482d20e6ea99d6570ca3c31f0aa" translate="yes" xml:space="preserve">
          <source>For example, consider this HTML fragment.</source>
          <target state="translated">例えば、このHTMLの断片を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="764b75327a33cf0119b6f91796ffb927e6300398" translate="yes" xml:space="preserve">
          <source>For example, given a spec file located at &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt;:</source>
          <target state="translated">たとえば、 &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt; にあるスペックファイルがあるとします。</target>
        </trans-unit>
        <trans-unit id="aaa1105999961ee6003bd962c1a65b040bd5496f" translate="yes" xml:space="preserve">
          <source>For example, if the snapshot command is &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt;:</source>
          <target state="translated">たとえば、スナップショットコマンドが &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt; の場合：</target>
        </trans-unit>
        <trans-unit id="ab571a4f91aef38ebfa5eecac23a46306dfafc38" translate="yes" xml:space="preserve">
          <source>For example, if your distribution packages Google Chrome as &lt;code&gt;chrome&lt;/code&gt;, you could add a symlink to &lt;code&gt;google-chrome&lt;/code&gt; like this:</source>
          <target state="translated">たとえば、ディストリビューションでGoogle Chromeを &lt;code&gt;chrome&lt;/code&gt; としてパッケージ化する場合、次のように &lt;code&gt;google-chrome&lt;/code&gt; にシンボリックリンクを追加できます。</target>
        </trans-unit>
        <trans-unit id="644fe93693b828db3515767856da1bd3a29e87ab" translate="yes" xml:space="preserve">
          <source>For example, on a Linux machine:</source>
          <target state="translated">例えば、Linuxマシンで。</target>
        </trans-unit>
        <trans-unit id="e2158d33b661e52ec20e4eadf6ce104d3345fbd7" translate="yes" xml:space="preserve">
          <source>For example, on a Mac:</source>
          <target state="translated">例えば、Macの場合。</target>
        </trans-unit>
        <trans-unit id="374258cadc421fc853522a47d379c7f40972c75a" translate="yes" xml:space="preserve">
          <source>For example, one can use the &lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt; plugin and catch the following visual regression:</source>
          <target state="translated">たとえば、&lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt;プラグインを使用して、次の視覚的な退行をキャッチできます。</target>
        </trans-unit>
        <trans-unit id="52bff469061738de305a5c214d6bb7f6c8ad7f03" translate="yes" xml:space="preserve">
          <source>For example, the following test has &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; assertions. &lt;code&gt;.and()&lt;/code&gt; is an alias of the &lt;code&gt;.should()&lt;/code&gt; command, so the second assertion is really a custom callback assertion in the form of the &lt;a href=&quot;../../api/commands/should#Function&quot;&gt;&lt;code&gt;.should(cb)&lt;/code&gt;&lt;/a&gt; function with 2 &lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; assertions inside of it.</source>
          <target state="translated">たとえば、次のテストには&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;および.and &lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt;アサーションがあります。 &lt;code&gt;.and()&lt;/code&gt; の別名である &lt;code&gt;.should()&lt;/code&gt; 第二の主張は、実際の形式でカスタム・コールバック・アサーションであるので、コマンド&lt;a href=&quot;../../api/commands/should#Function&quot;&gt; &lt;code&gt;.should(cb)&lt;/code&gt; &lt;/a&gt; 2との機能&lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt; &lt;code&gt;expect&lt;/code&gt; &lt;/a&gt;それの内部アサーション。</target>
        </trans-unit>
        <trans-unit id="7f0d7592cbf7bfa92426baaef777c8467fdf810d" translate="yes" xml:space="preserve">
          <source>For example, to set the default command timeout to 10 seconds via command line:</source>
          <target state="translated">例えば、コマンドライン経由でデフォルトのコマンドタイムアウトを10秒に設定します。</target>
        </trans-unit>
        <trans-unit id="24e8f3f5bf287ec2abda1e46dac7e765408a08a9" translate="yes" xml:space="preserve">
          <source>For example, when writing a &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; command, Cypress ensures that the element is able to be interacted with (like a real user would). It will automatically wait until the element reaches an &amp;ldquo;actionable&amp;rdquo; state by:</source>
          <target state="translated">たとえば、&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;コマンドを記述する場合、サイプレスは要素が（実際のユーザーのように）対話できることを保証します。次のようにして、要素が「アクション可能な」状態になるまで自動的に待機します。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="2de5b291ad79324bcf505dc77ce99f3c250b6a66" translate="yes" xml:space="preserve">
          <source>For instance given a URL: &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt;</source>
          <target state="translated">たとえば、URLが指定されている場合： &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt; : //google.com/search?q=cypress</target>
        </trans-unit>
        <trans-unit id="af939d9ec5be005fdcff9cc5bafa9bc567dcc0c0" translate="yes" xml:space="preserve">
          <source>For instance the following will submit the form.</source>
          <target state="translated">例えば、以下のようにフォームを送信します。</target>
        </trans-unit>
        <trans-unit id="b5517d0b0ff724878ebb60576914cb82e4c4d83b" translate="yes" xml:space="preserve">
          <source>For instance there is:</source>
          <target state="translated">例えば、あります。</target>
        </trans-unit>
        <trans-unit id="69f7252ea2666904183520e01c4a6a37f7de72b6" translate="yes" xml:space="preserve">
          <source>For instance you may want to do this:</source>
          <target state="translated">例えば、こんなことをしてみたいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="252964127344b906890088ac3b58c00fbc7996d8" translate="yes" xml:space="preserve">
          <source>For instance, &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; requires that the property you&amp;rsquo;re asking about exists on the object.</source>
          <target state="translated">たとえば、&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;では、対象のプロパティがオブジェクトに存在する必要があります。</target>
        </trans-unit>
        <trans-unit id="9f2d3f0dc7271d3653fea606fcd0bdc4bb155b6d" translate="yes" xml:space="preserve">
          <source>For instance, an element could pass all of the previous checks, but a giant dialog could be covering the entire screen making interacting with the element impossible for any real user.</source>
          <target state="translated">例えば、ある要素はこれまでのチェックをすべてパスしても、巨大なダイアログが画面全体を覆っていて、実際のユーザーがその要素と対話することができない場合があります。</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="f82e17eccd0cd5b897a68561a0dfcf4a5a0d4cc8" translate="yes" xml:space="preserve">
          <source>For more complex use cases feel free to overwrite existing commands.</source>
          <target state="translated">より複雑な使用例については、既存のコマンドを自由に上書きしてください。</target>
        </trans-unit>
        <trans-unit id="9e02635601388e7c946b921e1e450b5a9dc0dde5" translate="yes" xml:space="preserve">
          <source>For more details on these options and to set some as defaults across all uses of &lt;code&gt;.screenshot()&lt;/code&gt;, see the &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API doc&lt;/a&gt;.</source>
          <target state="translated">これらのオプションの詳細、および &lt;code&gt;.screenshot()&lt;/code&gt; のすべての使用にわたっていくつかをデフォルトとして設定する&lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;方法&lt;/a&gt;については、Cypress.Screenshot APIドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="54d3a0513cfccad9eb5d6e0e78581670489941f0" translate="yes" xml:space="preserve">
          <source>For more information on writing plugins, please &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;check out our API docs here&lt;/a&gt;.</source>
          <target state="translated">プラグインの作成について詳しくは、こちらの&lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;APIドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="3d3310b65fdf0f0ced0b2000f01f790efbf2e93c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;Integrating Mochawesome reporter with Cypresss&lt;/a&gt;</source>
          <target state="translated">詳細については、&lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;Mochawesomeレポーターとサイプレスの統合を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a938ddb8b260b7907e6de8105877506b068906fa" translate="yes" xml:space="preserve">
          <source>For more options regarding screenshots, view the &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API&lt;/a&gt;.</source>
          <target state="translated">スクリーンショットに関するその他のオプションについては、&lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot APIをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09f377bc687a64f445d344af854cd956a6165063" translate="yes" xml:space="preserve">
          <source>For multiple runs to be grouped into a single run, it is required for CI machines to share a common CI build ID environment variable. Typically these CI machines will run in parallel or within the same build workflow or pipeline, but &lt;strong&gt;it is not required to use Cypress parallelization to group runs&lt;/strong&gt;. Grouping of runs can be utilized independently of Cypress parallelization.</source>
          <target state="translated">複数の実行を1つの実行にグループ化するには、CIマシンが共通のCIビルドID環境変数を共有する必要があります。通常、これらのCIマシンは並列に、または同じビルドワークフローまたはパイプライン内で実行されますが、実行&lt;strong&gt;をグループ化するためにサイプレスの並列化を使用する必要はありません&lt;/strong&gt;。実行のグループ化は、サイプレスの並列化とは無関係に利用できます。</target>
        </trans-unit>
        <trans-unit id="33169c378a8f3e8f01e7fbd26b9ee56ff477e933" translate="yes" xml:space="preserve">
          <source>For now, please visit the &lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;Catalog of Events&lt;/a&gt; page for examples how to turn off catching uncaught exceptions.</source>
          <target state="translated">とりあえず、キャッチされていない例外のキャッチをオフにする方法の例について&lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;は、イベント&lt;/a&gt;のカタログのページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="88158d5e9dc8f8941bd54f6e40953f96ad40d693" translate="yes" xml:space="preserve">
          <source>For other types of files, they will be read as &lt;code&gt;utf8&lt;/code&gt; by default, unless specified in the second argument of &lt;code&gt;cy.fixture()&lt;/code&gt;.</source>
          <target state="translated">他のタイプのファイルの場合、 &lt;code&gt;cy.fixture()&lt;/code&gt; の 2番目の引数で指定されていない限り、デフォルトで &lt;code&gt;utf8&lt;/code&gt; として読み取られます。</target>
        </trans-unit>
        <trans-unit id="d91ebd354dbfba00dacd289ac1a90f3e80f3b246" translate="yes" xml:space="preserve">
          <source>For reference, the &lt;code&gt;.babelrc&lt;/code&gt; file is shared between the example application and the spec files, thus Cypress tests are transpiled the same way the application code is transpiled.</source>
          <target state="translated">参考までに、 &lt;code&gt;.babelrc&lt;/code&gt; ファイルはサンプルアプリケーションとspecファイルの間で共有されるため、サイプレステストはアプリケーションコードがトランスパイルされるのと同じ方法でトランスパイルされます。</target>
        </trans-unit>
        <trans-unit id="a0f76861650d658435d862cebc0bc974dfdbebf1" translate="yes" xml:space="preserve">
          <source>For the moment, let&amp;rsquo;s assume that for some reason your application desperately &lt;strong&gt;needs&lt;/strong&gt; that last bit of &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; code to run. Let&amp;rsquo;s assume that if that code is not run - all is lost.</source>
          <target state="translated">現時点では、聞かせてのは、何らかの理由でアプリケーションが必死になっていることを前提と&lt;strong&gt;必要&lt;/strong&gt;の最後のビット &lt;code&gt;after&lt;/code&gt; または &lt;code&gt;afterEach&lt;/code&gt; 実行するようにコードを。そのコードが実行されない場合-すべてが失われたと仮定しましょう。</target>
        </trans-unit>
        <trans-unit id="c35e33effb9613124be59712e199c2b878568a36" translate="yes" xml:space="preserve">
          <source>For the most powerful matching, provide a regular expression</source>
          <target state="translated">最も強力なマッチングのために、正規表現を提供します。</target>
        </trans-unit>
        <trans-unit id="01260984a70b15e582d02ecbb77eb53567003e8b" translate="yes" xml:space="preserve">
          <source>For the remainder of this guide, we&amp;rsquo;ll explore the basics of Cypress that make this example work. We&amp;rsquo;ll demystify the rules Cypress follows so you can productively test your application to act as much like a user as possible, as well as discuss how to take shortcuts when it&amp;rsquo;s useful.</source>
          <target state="translated">このガイドの残りの部分では、この例を機能させるサイプレスの基本を探ります。サイプレスが従うルールをわかりやすく説明します。これにより、アプリケーションを生産的にテストして、可能な限りユーザーのように振る舞うことができます。また、必要に応じてショートカットを取る方法についても説明します。</target>
        </trans-unit>
        <trans-unit id="728229716acc9fc14a9907d5acafe87f6cdd5c23" translate="yes" xml:space="preserve">
          <source>For this reason we recommend &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;downloading Chromium&lt;/a&gt; or &lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;downloading Canary&lt;/a&gt;. These browsers both have different icons from the standard Chrome browser and it&amp;rsquo;ll be much easier to tell the difference. You can also use the bundled &lt;a href=&quot;#Electron-Browser&quot;&gt;Electron browser&lt;/a&gt;, which does not have a Dock icon.</source>
          <target state="translated">このため、&lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chromium&lt;/a&gt;または&lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;Canaryを&lt;/a&gt;ダウンロードすることをお勧めします。これらのブラウザーはどちらも、標準のChromeブラウザーとは異なるアイコンを備えており、違いを見分けるのがはるかに簡単になります。また、Dockアイコンのない、付属の&lt;a href=&quot;#Electron-Browser&quot;&gt;Electronブラウザを&lt;/a&gt;使用することもできます。</target>
        </trans-unit>
        <trans-unit id="205e71a20ed6c001f2d67335fcd4f33135185375" translate="yes" xml:space="preserve">
          <source>For this reason you cannot &lt;strong&gt;ever&lt;/strong&gt; return or assign anything useful from Cypress commands.</source>
          <target state="translated">このような理由から、あなたがすることはできません&lt;strong&gt;、これまで&lt;/strong&gt;サイプレスコマンドから有用な何かを返すか、割り当てます。</target>
        </trans-unit>
        <trans-unit id="d0b8219d8ed6c1e8024344c044ecea764b1dc5cf" translate="yes" xml:space="preserve">
          <source>For working with either of these patterns, please read our &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Variables and Aliases guide&lt;/a&gt;.</source>
          <target state="translated">これらのパターンのいずれかを使用する場合は、&lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;変数とエイリアスのガイド&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="58df072b14e502083ab5c85ba4c8f1d20ae6ccd5" translate="yes" xml:space="preserve">
          <source>Force Reload</source>
          <target state="translated">フォースリロード</target>
        </trans-unit>
        <trans-unit id="6009b160ba75d2e52bc0d8169e251b1536e4aa89" translate="yes" xml:space="preserve">
          <source>Force a click regardless of its actionable state</source>
          <target state="translated">アクション可能な状態に関わらずクリックを強制する</target>
        </trans-unit>
        <trans-unit id="501ae9dd8f1715a7ea40942df61d140bc1a7fd7e" translate="yes" xml:space="preserve">
          <source>Force a click with position argument</source>
          <target state="translated">位置引数でクリックを強制する</target>
        </trans-unit>
        <trans-unit id="f0f17bcdc15ad6b57ab2c842701861471bd496bc" translate="yes" xml:space="preserve">
          <source>Force a click with relative coordinates</source>
          <target state="translated">相対座標でクリックを強制する</target>
        </trans-unit>
        <trans-unit id="3f21fe7e580912b2cb72d35ec748a7a7363b3004" translate="yes" xml:space="preserve">
          <source>Force a double click regardless of its actionable state</source>
          <target state="translated">アクション可能な状態に関わらずダブルクリックを強制する</target>
        </trans-unit>
        <trans-unit id="e3fd021baf3d5a26bdc7db2d16f76b2550794e8b" translate="yes" xml:space="preserve">
          <source>Force a double click with position argument</source>
          <target state="translated">位置引数でダブルクリックを強制する</target>
        </trans-unit>
        <trans-unit id="f781217729dad48d4061dfce919713b00cf6513c" translate="yes" xml:space="preserve">
          <source>Force a double click with relative coordinates</source>
          <target state="translated">相対座標でダブルクリックを強制する</target>
        </trans-unit>
        <trans-unit id="2c3f51a6cb84667b76ee081ad795c0f7d6be6980" translate="yes" xml:space="preserve">
          <source>Force a right click regardless of its actionable state</source>
          <target state="translated">アクション可能な状態に関わらず、右クリックを強制的に行う</target>
        </trans-unit>
        <trans-unit id="3b1485264533345f8f2abaada7228dda3441bca8" translate="yes" xml:space="preserve">
          <source>Force a right click with position argument</source>
          <target state="translated">位置引数で右クリックを強制する</target>
        </trans-unit>
        <trans-unit id="e3f1611aec9cf61c4b343f3ba827008cdec4fdf7" translate="yes" xml:space="preserve">
          <source>Force a right click with relative coordinates</source>
          <target state="translated">相対座標で右クリックを強制する</target>
        </trans-unit>
        <trans-unit id="778a8734a9c3b42f5a7d9afcc008f81e492a3a8b" translate="yes" xml:space="preserve">
          <source>Force click</source>
          <target state="translated">強制クリック</target>
        </trans-unit>
        <trans-unit id="41e37a1f78aef985b21cad73b3082506a86c715b" translate="yes" xml:space="preserve">
          <source>Force exit codes that are &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;#184&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; の終了コードを &lt;code&gt;0&lt;/code&gt; に強制します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;＃184を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9345bedf1cea87fd7b943085b7226f014d46c650" translate="yes" xml:space="preserve">
          <source>Force select</source>
          <target state="translated">強制選択</target>
        </trans-unit>
        <trans-unit id="1a45b61c2dbe231a97475e5b31a52f41b5bf37f4" translate="yes" xml:space="preserve">
          <source>Force select a disabled &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;</source>
          <target state="translated">無効な &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; を強制的に選択します</target>
        </trans-unit>
        <trans-unit id="dacb0e4f8e0de0d6df18a2d70b6f266a299781bf" translate="yes" xml:space="preserve">
          <source>Force select a hidden &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;</source>
          <target state="translated">非表示の &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; を強制的に選択します</target>
        </trans-unit>
        <trans-unit id="3675b055af415697257a68145761329b09a120af" translate="yes" xml:space="preserve">
          <source>Force trailing slash on all &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; to fix relative links &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt;.</source>
          <target state="translated">すべての&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; で&lt;/a&gt;末尾のスラッシュを強制して、相対リンクを修正します &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="212605644c0b6c1945c9a3e7254761cd558173c5" translate="yes" xml:space="preserve">
          <source>Force typing regardless of its actionable state</source>
          <target state="translated">アクション可能な状態に関わらず、強制的にタイプする</target>
        </trans-unit>
        <trans-unit id="9133a83c2831ad21e3aa26f7912ae9117d231e31" translate="yes" xml:space="preserve">
          <source>Force your application to behave deterministically.</source>
          <target state="translated">アプリケーションを強制的に決定論的に動作させます。</target>
        </trans-unit>
        <trans-unit id="c22784e9b0a4a78c005e9a85b243521624424e2e" translate="yes" xml:space="preserve">
          <source>Forces the action, disables &lt;a href=&quot;#Assertions&quot;&gt;waiting for actionability&lt;/a&gt;</source>
          <target state="translated">アクションを強制し、アクション&lt;a href=&quot;#Assertions&quot;&gt;可能性の待機を&lt;/a&gt;無効にします</target>
        </trans-unit>
        <trans-unit id="d8e12d23ec3290a534ebbcf584e8eb235083c99c" translate="yes" xml:space="preserve">
          <source>Forces the action, disables checking if &lt;a href=&quot;#Requirements&quot;&gt;element is focused&lt;/a&gt;</source>
          <target state="translated">アクションを強制し、&lt;a href=&quot;#Requirements&quot;&gt;要素がフォーカスされている&lt;/a&gt;かどうかのチェックを無効にします</target>
        </trans-unit>
        <trans-unit id="c6aeb53d6057d030d1940ca8e7fb9f7eac6f7fb4" translate="yes" xml:space="preserve">
          <source>Forcibly fire the event at the element</source>
          <target state="translated">エレメントでイベントを強制的に発射</target>
        </trans-unit>
        <trans-unit id="22c717b7cf52642cd4402c97663c40e584fd7918" translate="yes" xml:space="preserve">
          <source>Forcibly send XHR&amp;rsquo;s a 404 status when the XHR&amp;rsquo;s do not match any existing &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">XHRが既存の&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; と&lt;/a&gt;一致しない場合、XHRを強制的に404ステータスで送信します。</target>
        </trans-unit>
        <trans-unit id="20885cc954853a82ab6c89688d9a6d691df54148" translate="yes" xml:space="preserve">
          <source>Forcibly send a 404 status when the XHR does not match any existing &lt;code&gt;cy.route()&lt;/code&gt;.</source>
          <target state="translated">XHRが既存の &lt;code&gt;cy.route()&lt;/code&gt; と一致しない場合、404ステータスを強制的に送信します。</target>
        </trans-unit>
        <trans-unit id="8e9b90f09f342388fa794ee597459cdfabb7b581" translate="yes" xml:space="preserve">
          <source>Forcing</source>
          <target state="translated">Forcing</target>
        </trans-unit>
        <trans-unit id="f8c2349f25011f3fb852e55a8b44e642923f7d87" translate="yes" xml:space="preserve">
          <source>Forcing a click overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">クリックを強制すると、サイプレスが適用する&lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;アクション可能なチェックが&lt;/a&gt;無効になり、自動的にイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="1203f45c3499183df76b622dc696323751b8498d" translate="yes" xml:space="preserve">
          <source>Forcing a click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">クリックを強制すると、サイプレスが適用する&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;アクション可能なチェックが&lt;/a&gt;上書きされ、イベントが自動的に発生します。</target>
        </trans-unit>
        <trans-unit id="c401155af17add2e4a1ac7619bf056122cb7782e" translate="yes" xml:space="preserve">
          <source>Forcing a double click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">ダブルクリックを強制すると、サイプレスが適用する&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;アクション可能なチェックが&lt;/a&gt;上書きされ、イベントが自動的に発生します。</target>
        </trans-unit>
        <trans-unit id="e27c6c6217538cdeb2a624444b935f5001caa3e4" translate="yes" xml:space="preserve">
          <source>Forcing a right click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">右クリックを強制すると、サイプレスが適用する&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;アクション可能なチェックが&lt;/a&gt;上書きされ、イベントが自動的に発生します。</target>
        </trans-unit>
        <trans-unit id="ce50bed2898545dff3bd82a789b80bd08baf4e2f" translate="yes" xml:space="preserve">
          <source>Forcing typing overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">タイピングを強制すると、サイプレスが適用する&lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;アクション可能なチェックが&lt;/a&gt;上書きされ、自動的にイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="dbbc7ab2b811ea1244db5ceb4308e5849195c7f1" translate="yes" xml:space="preserve">
          <source>Forcing typing overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">入力を強制すると、サイプレスが適用する&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;アクション可能なチェックが&lt;/a&gt;上書きされ、イベントが自動的に発生します。</target>
        </trans-unit>
        <trans-unit id="42440f0025c87af99f06a479298706346f7339fa" translate="yes" xml:space="preserve">
          <source>Form Submission</source>
          <target state="translated">フォームの提出</target>
        </trans-unit>
        <trans-unit id="53a11923bf4b30c2695146358bf573a9a81ef986" translate="yes" xml:space="preserve">
          <source>Form Submission Redirects</source>
          <target state="translated">フォーム送信のリダイレクト</target>
        </trans-unit>
        <trans-unit id="c29b61ca75f1c226b23fdb85ea8267be1b5f57ad" translate="yes" xml:space="preserve">
          <source>Form Submissions</source>
          <target state="translated">フォームの提出</target>
        </trans-unit>
        <trans-unit id="9dfc42ed63ca85b554caa7e220fd03b0c592b3d8" translate="yes" xml:space="preserve">
          <source>Form submission could result in a non-success status code.</source>
          <target state="translated">フォーム送信の結果、ステータスコードが失敗している可能性があります。</target>
        </trans-unit>
        <trans-unit id="8d016fe426ee3087e96153f2d1d6e6ebf0fc6765" translate="yes" xml:space="preserve">
          <source>Form with 1 input, no defaultButton.</source>
          <target state="translated">入力が1つのフォームで、defaultButtonはありません。</target>
        </trans-unit>
        <trans-unit id="8e9fba7056e53e85ae44895a33b9e115c05d0bb1" translate="yes" xml:space="preserve">
          <source>Form with 2 inputs, no defaultButton.</source>
          <target state="translated">2つの入力を持つフォーム、defaultButtonはありません。</target>
        </trans-unit>
        <trans-unit id="cf3f48103538a5822498e4ce69d4cd1cd1cbd15b" translate="yes" xml:space="preserve">
          <source>Form with disabled defaultButton.</source>
          <target state="translated">defaultButtonを無効にしたフォーム。</target>
        </trans-unit>
        <trans-unit id="fa6120162c6ff741a97b6f9f45021516e88399ea" translate="yes" xml:space="preserve">
          <source>Form with multiple defaultButtons.</source>
          <target state="translated">複数の defaultButtons を持つフォーム。</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="f123768a0be7e3519d5400f6ace516a3d22ef601" translate="yes" xml:space="preserve">
          <source>Fortunately, you don&amp;rsquo;t have to make your code do backflips. Cypress makes it easy to handle these situations.</source>
          <target state="translated">幸い、コードでバックフリップを実行する必要はありません。サイプレスは、これらの状況への対応を容易にします。</target>
        </trans-unit>
        <trans-unit id="4d98ce7637720e6e6410d48877f19b3b01766845" translate="yes" xml:space="preserve">
          <source>Framework tooling</source>
          <target state="translated">フレームワークツール</target>
        </trans-unit>
        <trans-unit id="09c17a26370171d23ce84d3552d846a3048206f8" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;cy&lt;/code&gt; only, meaning they do not operate on a subject: &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; からのみ、つまり、それらはサブジェクトに対して動作しないことを意味します：&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31f403c5a128ec2fd7eecd5f9c8314fb8737fe1f" translate="yes" xml:space="preserve">
          <source>From a plugin</source>
          <target state="translated">プラグインから</target>
        </trans-unit>
        <trans-unit id="ed641d7d4bd97215540ad6898e355fb5baec7c82" translate="yes" xml:space="preserve">
          <source>From both &lt;code&gt;cy&lt;/code&gt;&lt;em&gt;or&lt;/em&gt; from a subject-yielding command: &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; &lt;em&gt;または&lt;/em&gt;件名を&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;コマンドの両方から：cy.contains（）。</target>
        </trans-unit>
        <trans-unit id="2e722ad8ebb2888327ea48c45ad4d9f9f25a3a6c" translate="yes" xml:space="preserve">
          <source>From commands yielding particular kinds of subjects (like DOM elements): &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定の種類のサブジェクト（DOM要素など）を生成するコマンドから：&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9cebd6aa307387fd6af261554581a6553c4c0a6" translate="yes" xml:space="preserve">
          <source>From here you may want to explore some more of our guides:</source>
          <target state="translated">ここからは、私たちのガイドのいくつかの詳細を探索したい場合があります。</target>
        </trans-unit>
        <trans-unit id="5dba6095ab28643bdecd3fa748791bc981bf5a33" translate="yes" xml:space="preserve">
          <source>From now on, the front end code coverage collected during end-to-end tests will be merged with the code coverage from the instrumented back end code and saved in a single report. Here is an example report from the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io/cypress-example-realworld&lt;/a&gt; example:</source>
          <target state="translated">今後、エンドツーエンドのテスト中に収集されたフロントエンドのコードカバレッジは、計測されたバックエンドコードのコードカバレッジとマージされ、単一のレポートに保存されます。以下は、&lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io / cypress-example-realworldの&lt;/a&gt;例からのサンプルレポートです。</target>
        </trans-unit>
        <trans-unit id="0c3798d7d8f036440f97015d932834077be71636" translate="yes" xml:space="preserve">
          <source>From test file</source>
          <target state="translated">テストファイルから</target>
        </trans-unit>
        <trans-unit id="ab237c8d353bffac0346140b90b7b7a8b25ebce3" translate="yes" xml:space="preserve">
          <source>From the Dashboard you can:</source>
          <target state="translated">ダッシュボードからは、以下のことができます。</target>
        </trans-unit>
        <trans-unit id="11bd5b7d8d61f5366111bedb4345ae5776477e67" translate="yes" xml:space="preserve">
          <source>From the command line or CI</source>
          <target state="translated">コマンドラインまたはCIから</target>
        </trans-unit>
        <trans-unit id="deed2829df64b9417a7632480c32da477e7c2ff9" translate="yes" xml:space="preserve">
          <source>From your support file you should also &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; other files to keep things organized.</source>
          <target state="translated">サポートファイルから、他のファイルを &lt;code&gt;import&lt;/code&gt; か &lt;code&gt;require&lt;/code&gt; ファイルを整理しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="b83b790c6fc4ff8ca374201d19ae1e8204d8eb05" translate="yes" xml:space="preserve">
          <source>Full documentation can be found at the &lt;a href=&quot;https://github.com/cypress-io/circleci-orb&quot;&gt;&lt;code&gt;cypress-io/circleci-orb&lt;/code&gt;&lt;/a&gt; repo.</source>
          <target state="translated">完全なドキュメントは、&lt;a href=&quot;https://github.com/cypress-io/circleci-orb&quot;&gt; &lt;code&gt;cypress-io/circleci-orb&lt;/code&gt; &lt;/a&gt;リポジトリにあります。</target>
        </trans-unit>
        <trans-unit id="27be451352c8b9f273dc84e2012187216c61789d" translate="yes" xml:space="preserve">
          <source>Full page captures and fixed/sticky elements</source>
          <target state="translated">フルページキャプチャと固定/粘着要素</target>
        </trans-unit>
        <trans-unit id="034943d6789b4d9a66d1f7cf2a5a8320eb650fa6" translate="yes" xml:space="preserve">
          <source>Full stack code coverage</source>
          <target state="translated">スタックコードのフルカバレッジ</target>
        </trans-unit>
        <trans-unit id="ad91f657b5019ed1b548b39cdeb2914b715a3155" translate="yes" xml:space="preserve">
          <source>Full version.</source>
          <target state="translated">完全版です。</target>
        </trans-unit>
        <trans-unit id="ad82fc5446798eab3d3d1fdaaff1f48decfa74b2" translate="yes" xml:space="preserve">
          <source>Fully Qualified XHR&amp;rsquo;s which should be proxied are now correctly transparently rewritten to prevent CORS problems.</source>
          <target state="translated">CORSの問題を防ぐために、プロキシする必要がある完全修飾XHRが正しく透過的に書き直されるようになりました。</target>
        </trans-unit>
        <trans-unit id="4093edaeaabad68fa8b27b27cf89bc2a6385145f" translate="yes" xml:space="preserve">
          <source>Fully test the login flow &amp;ndash; but only once!</source>
          <target state="translated">ログインフローを完全にテストしますが、一度だけです！</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="dbfe0bee331f156c7ece93de6926384c2e325f16" translate="yes" xml:space="preserve">
          <source>Function names</source>
          <target state="translated">関数名</target>
        </trans-unit>
        <trans-unit id="36cd78d0eb64baf4c627d1e6a9a955d2ec5678d8" translate="yes" xml:space="preserve">
          <source>Function with Arguments</source>
          <target state="translated">引数を持つ関数</target>
        </trans-unit>
        <trans-unit id="ce82a00dda725a9597e8bcd97e8cf08fdb3c76d6" translate="yes" xml:space="preserve">
          <source>Functional vs visual testing</source>
          <target state="translated">機能テストと視覚テスト</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="468663fe629e5152ad5be2f4f4d1558cfeb168ab" translate="yes" xml:space="preserve">
          <source>Functions that return a &lt;code&gt;Promise&lt;/code&gt; will automatically be awaited.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; を返す関数は自動的に待機します。</target>
        </trans-unit>
        <trans-unit id="33851c1930f54c3f51d08dc5b642a96f9ca8647b" translate="yes" xml:space="preserve">
          <source>Functions that return promises are awaited</source>
          <target state="translated">約束を返す関数を待ち受けにしている</target>
        </trans-unit>
        <trans-unit id="8018e4b6436fbf898a5cd266c4d81b923fca90e4" translate="yes" xml:space="preserve">
          <source>Generally the server is responsible for sending responses that reflect some kind of &lt;strong&gt;state&lt;/strong&gt; it holds - generally in a database.</source>
          <target state="translated">通常、サーバーは、サーバーが保持しているある種の&lt;strong&gt;状態&lt;/strong&gt;を反映する応答を送信する責任があります（通常はデータベース内）。</target>
        </trans-unit>
        <trans-unit id="13c8927808b0572155f1b77ea1cae972ef9ce0c0" translate="yes" xml:space="preserve">
          <source>Generate HTTP Archive (HAR) while running tests.</source>
          <target state="translated">テスト実行中に HTTP アーカイブ (HAR)を生成します。</target>
        </trans-unit>
        <trans-unit id="715d08a843e5acb7dcfcc8e24b0c0cb0a4d75935" translate="yes" xml:space="preserve">
          <source>Generate the fixture stubs ahead of time</source>
          <target state="translated">フィクスチャのスタブを前もって生成する</target>
        </trans-unit>
        <trans-unit id="11a354d7971106c41270317a1366eb5df9e036d7" translate="yes" xml:space="preserve">
          <source>Get &lt;code&gt;length&lt;/code&gt; of title</source>
          <target state="translated">タイトルの &lt;code&gt;length&lt;/code&gt; を取得</target>
        </trans-unit>
        <trans-unit id="5e34727010ea8370b58971d714279bf8c32f0c85" translate="yes" xml:space="preserve">
          <source>Get &lt;code&gt;session_id&lt;/code&gt; cookie after logging in</source>
          <target state="translated">ログイン後に &lt;code&gt;session_id&lt;/code&gt; cookieを取得する</target>
        </trans-unit>
        <trans-unit id="ec2c63980222cc97289df6bba1d272938c5fedbe" translate="yes" xml:space="preserve">
          <source>Get A DOM element at a specific index in an array of elements.</source>
          <target state="translated">要素の配列中の特定のインデックスにある DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="78c744c3cf42801348368155de7d7cd17259ef6b" translate="yes" xml:space="preserve">
          <source>Get Cookies</source>
          <target state="translated">クッキーの取得</target>
        </trans-unit>
        <trans-unit id="69db1095ca8c07057a09db214ec350fd2355c3c7" translate="yes" xml:space="preserve">
          <source>Get Data URL of an image</source>
          <target state="translated">画像のデータURLを取得</target>
        </trans-unit>
        <trans-unit id="0c86560c49c46a484a21b0223713a7665b708f1c" translate="yes" xml:space="preserve">
          <source>Get Selector</source>
          <target state="translated">セレクタを取得</target>
        </trans-unit>
        <trans-unit id="b538f16cde1fda1eece5d2bedbebb8c4337c9821" translate="yes" xml:space="preserve">
          <source>Get a browser cookie by its name.</source>
          <target state="translated">ブラウザのクッキーを名前で取得します。</target>
        </trans-unit>
        <trans-unit id="614bbfebbe46a05ffc8be0b2c0eebb60088ff60b" translate="yes" xml:space="preserve">
          <source>Get a property&amp;rsquo;s value on the previously yielded subject.</source>
          <target state="translated">以前に生成されたサブジェクトのプロパティの値を取得します。</target>
        </trans-unit>
        <trans-unit id="8ba066fae08fe663607191f346ff763688eef943" translate="yes" xml:space="preserve">
          <source>Get all ancestors of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">マッチした DOM 要素のセットの中で、提供された要素までの、各 DOM 要素のすべての祖先を取得します(ただし、提供された要素は含まれません)。</target>
        </trans-unit>
        <trans-unit id="d878e7fb89bc9f6dd7e6ac1552c565e8284a506c" translate="yes" xml:space="preserve">
          <source>Get all configuration options</source>
          <target state="translated">すべての設定オプションを取得</target>
        </trans-unit>
        <trans-unit id="1a7e3fd03d2ba22ab645e0ec3b6b252dc9c88e9b" translate="yes" xml:space="preserve">
          <source>Get all configuration options from &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; file (&lt;code&gt;cypress.json&lt;/code&gt; by default)</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;構成&lt;/a&gt;ファイル（デフォルトでは &lt;code&gt;cypress.json&lt;/code&gt; ）からすべての構成オプションを取得します</target>
        </trans-unit>
        <trans-unit id="1e226b0bbb6ba1eb6dfa3e1b24fa3ff146eafff2" translate="yes" xml:space="preserve">
          <source>Get all environment variables from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default)</source>
          <target state="translated">構成ファイル（デフォルトでは &lt;code&gt;cypress.json&lt;/code&gt; ）からすべての環境変数を取得します</target>
        </trans-unit>
        <trans-unit id="726e1658d3160337c34366924865ffe6f9bdd1ee" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">提供された要素までのマッチした DOM 要素のセットの中で、各 DOM 要素の後続のすべての兄弟を取得します(ただし、提供された要素は含まれません)。</target>
        </trans-unit>
        <trans-unit id="d7f7fa2095055d8090ee656b4df2a277638eabf8" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each DOM element in a set of matched DOM elements.</source>
          <target state="translated">一致した DOM 要素の集合の中で、各 DOM 要素の以下のすべての兄弟を取得します。</target>
        </trans-unit>
        <trans-unit id="7bc2f9f01d4a3efa98a3539f5277214a45b34918" translate="yes" xml:space="preserve">
          <source>Get all of the browser cookies.</source>
          <target state="translated">ブラウザのクッキーをすべて取得します。</target>
        </trans-unit>
        <trans-unit id="1f3bf71544170547306f07fd6d9e4be1b80dbce9" translate="yes" xml:space="preserve">
          <source>Get all previous siblings of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">マッチした DOM 要素のセットの中で、提供された要素までの、各 DOM 要素の前の兄弟をすべて取得します(ただし、提供された要素は含まれていません)。</target>
        </trans-unit>
        <trans-unit id="7cbe9d7ff598a4b6dddb3f861a89466b797b5779" translate="yes" xml:space="preserve">
          <source>Get all previous siblings of each DOM element in a set of matched DOM elements.</source>
          <target state="translated">一致した DOM 要素の集合の中で、各 DOM 要素の前の兄弟をすべて取得します。</target>
        </trans-unit>
        <trans-unit id="6a1a9dba40d9c4360f21cbb955e0c97b34028a0c" translate="yes" xml:space="preserve">
          <source>Get console logs for commands</source>
          <target state="translated">コマンドのコンソールログを取得</target>
        </trans-unit>
        <trans-unit id="8ac45b30b6141f1393ac1fd70bc7d33985a73084" translate="yes" xml:space="preserve">
          <source>Get cookies after logging in</source>
          <target state="translated">ログイン後にクッキーを取得する</target>
        </trans-unit>
        <trans-unit id="c50f854379ad2f26c21e8143fa041867e87029df" translate="yes" xml:space="preserve">
          <source>Get document and do some work</source>
          <target state="translated">書類を入手して仕事をする</target>
        </trans-unit>
        <trans-unit id="ee42a9f61ba8ac813c6e1d42283792046defabaa" translate="yes" xml:space="preserve">
          <source>Get function as property</source>
          <target state="translated">関数をプロパティとして取得する</target>
        </trans-unit>
        <trans-unit id="8c624bfeaed069155b4110f7ae0ad280daa90b1e" translate="yes" xml:space="preserve">
          <source>Get in &lt;code&gt;.within()&lt;/code&gt;</source>
          <target state="translated">で取得 &lt;code&gt;.within()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="118e802b850a89ccdfde85858dec32f3dcb9ac44" translate="yes" xml:space="preserve">
          <source>Get index</source>
          <target state="translated">インデックスの取得</target>
        </trans-unit>
        <trans-unit id="38be7ea66340f5486705b3a39a0da2c3926d86e1" translate="yes" xml:space="preserve">
          <source>Get inputs within a form and submit the form</source>
          <target state="translated">フォーム内の入力を取得し、フォームを送信する</target>
        </trans-unit>
        <trans-unit id="bd9422f2aa9f16ac3a1a32184cd458092472011e" translate="yes" xml:space="preserve">
          <source>Get li&amp;rsquo;s within parent</source>
          <target state="translated">親の中で李を取得する</target>
        </trans-unit>
        <trans-unit id="cbcc8c52c4c250f457df77714f71518914bc7253" translate="yes" xml:space="preserve">
          <source>Get one or more DOM elements by selector or &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="translated">セレクターまたは&lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;エイリアス&lt;/a&gt;によって1つ以上のDOM要素を取得します。</target>
        </trans-unit>
        <trans-unit id="71050fa99e5dc614f5458e2c868a13aff223e89e" translate="yes" xml:space="preserve">
          <source>Get one or more DOM elements by selector or &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="translated">セレクターまたは&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html&quot;&gt;エイリアス&lt;/a&gt;によって1つ以上のDOM要素を取得します。</target>
        </trans-unit>
        <trans-unit id="3e1004041e1a059c6fb1665ffe39fbecfd81bb63" translate="yes" xml:space="preserve">
          <source>Get properties from the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback</source>
          <target state="translated">&lt;code&gt;onAfterScreenshot&lt;/code&gt; コールバックからプロパティを取得する</target>
        </trans-unit>
        <trans-unit id="5de4a2efd44753d384344f594f0e02076ab06b29" translate="yes" xml:space="preserve">
          <source>Get property</source>
          <target state="translated">プロパティを取得する</target>
        </trans-unit>
        <trans-unit id="5a778da1ceb2bf7380d32bfb39c3fa08f6b7ebac" translate="yes" xml:space="preserve">
          <source>Get root element</source>
          <target state="translated">ルート要素の取得</target>
        </trans-unit>
        <trans-unit id="4424013cfe8722d25920e58f61b21884fab59ce0" translate="yes" xml:space="preserve">
          <source>Get screenshot info from the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback</source>
          <target state="translated">&lt;code&gt;onAfterScreenshot&lt;/code&gt; コールバックからスクリーンショット情報を取得する</target>
        </trans-unit>
        <trans-unit id="3f259d00f4bc27a0f4a3394ffade7e812bbfbf47" translate="yes" xml:space="preserve">
          <source>Get sibling DOM elements.</source>
          <target state="translated">兄弟 DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="a5c8bf1a13b7c98b0440c65e229418e8af1765c7" translate="yes" xml:space="preserve">
          <source>Get siblings of element with class &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">クラスが &lt;code&gt;active&lt;/code&gt; 要素の兄弟を取得します</target>
        </trans-unit>
        <trans-unit id="90e40d504340834d9e79a4d800e45283591c5927" translate="yes" xml:space="preserve">
          <source>Get started</source>
          <target state="translated">始める</target>
        </trans-unit>
        <trans-unit id="abadd86dc407b8b817bae6800708bbc15c13c777" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;document.title&lt;/code&gt; property of the page that is currently active.</source>
          <target state="translated">現在アクティブなページの &lt;code&gt;document.title&lt;/code&gt; プロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="5f19f247800adb8bb9059ef2de19873ef2a100c7" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;length&lt;/code&gt; property of a DOM element</source>
          <target state="translated">DOM要素の &lt;code&gt;length&lt;/code&gt; プロパティを取得する</target>
        </trans-unit>
        <trans-unit id="cb63d757633ac03e332d40152b359ce165349574" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;user&lt;/code&gt; object of the response&amp;rsquo;s &lt;code&gt;body&lt;/code&gt;</source>
          <target state="translated">応答の &lt;code&gt;body&lt;/code&gt; &lt;code&gt;user&lt;/code&gt; オブジェクトを取得する</target>
        </trans-unit>
        <trans-unit id="da81c8910d0ff34f3f2b6bdfafe18d4b531eb4a6" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;window.document&lt;/code&gt; of the page that is currently active.</source>
          <target state="translated">現在アクティブなページの &lt;code&gt;window.document&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="60d973f4293d5ba6c6d9669aadf27ab51323a3ff" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;window&lt;/code&gt; object of the page that is currently active.</source>
          <target state="translated">現在アクティブなページの &lt;code&gt;window&lt;/code&gt; オブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="72157e5566acdc33186045e8ef45538711fdef56" translate="yes" xml:space="preserve">
          <source>Get the DOM element containing the content.</source>
          <target state="translated">コンテンツを含む DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="00ff576aeb22bef88d930d53413e5e1b6376ee0f" translate="yes" xml:space="preserve">
          <source>Get the DOM element containing the text. DOM elements can contain &lt;em&gt;more&lt;/em&gt; than the desired text and still match. Additionally, Cypress &lt;a href=&quot;#Notes&quot;&gt;prefers some DOM elements&lt;/a&gt; over the deepest element found.</source>
          <target state="translated">テキストを含むDOM要素を取得します。DOM要素を含むことができ&lt;em&gt;、より&lt;/em&gt;目的のテキストよりも、まだ一致しています。さらに、サイプレス&lt;a href=&quot;#Notes&quot;&gt;は&lt;/a&gt;、見つかった最も深い要素よりもいくつかのDOM要素を優先します。</target>
        </trans-unit>
        <trans-unit id="54436390ff23b5e34750cfbad8326fd2d5bd7fbe" translate="yes" xml:space="preserve">
          <source>Get the DOM element that is currently focused.</source>
          <target state="translated">現在フォーカスされている DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="9c2e34ba559a12ba698f82daaa9b18469e9b89ce" translate="yes" xml:space="preserve">
          <source>Get the DOM elements that match a specific selector.</source>
          <target state="translated">特定のセレクタにマッチする DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="5bbecf5096769375f60c7309fa55c045c2ee7d96" translate="yes" xml:space="preserve">
          <source>Get the URL</source>
          <target state="translated">URLの取得</target>
        </trans-unit>
        <trans-unit id="9f04b463709b531f2d2db4718e9e438c0459b50b" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;submitBtn&amp;rsquo; element</source>
          <target state="translated">エイリアスされた「submitBtn」要素を取得します</target>
        </trans-unit>
        <trans-unit id="7fc72a751216ef55861780a2f6f13fad91179f9f" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;todos&amp;rsquo; elements</source>
          <target state="translated">エイリアスの「todos」要素を取得する</target>
        </trans-unit>
        <trans-unit id="3cee94b3642e8bd68b14a141a897a02d85ae366d" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;users&amp;rsquo; fixture</source>
          <target state="translated">エイリアスされた「ユーザー」フィクスチャを取得する</target>
        </trans-unit>
        <trans-unit id="4f02da3142df47a50ddc16d28a6d9a538e83b4c9" translate="yes" xml:space="preserve">
          <source>Get the children of each DOM element within a set of DOM elements.</source>
          <target state="translated">DOM 要素の集合内の各 DOM 要素の子を取得します。</target>
        </trans-unit>
        <trans-unit id="da562ea984a5a6ff2ed1f866d781219feedbfc48" translate="yes" xml:space="preserve">
          <source>Get the children of the &lt;code&gt;.secondary-nav&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.secondary-nav&lt;/code&gt; の子を取得する</target>
        </trans-unit>
        <trans-unit id="6c7884f05dabc7ceaed23a05226a9da2830cd335" translate="yes" xml:space="preserve">
          <source>Get the children with class &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">クラスの子供たちを &lt;code&gt;active&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ad9349edc6a2083cef2ef42849f9d125e7f9206" translate="yes" xml:space="preserve">
          <source>Get the current URL hash of the page that is currently active.</source>
          <target state="translated">現在アクティブなページの現在のURLハッシュを取得します。</target>
        </trans-unit>
        <trans-unit id="905fa0469d43bcf9e018d417724b3101b0d60f46" translate="yes" xml:space="preserve">
          <source>Get the current URL of the page that is currently active.</source>
          <target state="translated">現在アクティブなページの現在のURLを取得します。</target>
        </trans-unit>
        <trans-unit id="9d2e7923b125ca989315b8b6abd855b8c8cda526" translate="yes" xml:space="preserve">
          <source>Get the descendent DOM elements of a specific selector.</source>
          <target state="translated">特定のセレクタの子孫の DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="e138d85fdf46192ed868043f0071b2f7413a8b6e" translate="yes" xml:space="preserve">
          <source>Get the element that is focused</source>
          <target state="translated">フォーカスされた要素を取得する</target>
        </trans-unit>
        <trans-unit id="eab5fe184d28c7c2ecf68762c00edbbc093d0afe" translate="yes" xml:space="preserve">
          <source>Get the entire stack trace of failed tests.</source>
          <target state="translated">失敗したテストのスタックトレース全体を取得します。</target>
        </trans-unit>
        <trans-unit id="6bc616aea4241cff030e7c37715a8854632d06fe" translate="yes" xml:space="preserve">
          <source>Get the first DOM element that matches the selector (whether it be itself or one of its ancestors).</source>
          <target state="translated">セレクタにマッチする最初の DOM 要素を取得します (それがそれ自身であろうとその祖先の一つであろうと)。</target>
        </trans-unit>
        <trans-unit id="7e385d52b355d218cf98e4732ef5b18c57dfb75d" translate="yes" xml:space="preserve">
          <source>Get the first DOM element within a set of DOM elements.</source>
          <target state="translated">DOM 要素の集合内の最初の DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="d5bd99c0258c4b20b204b1c45f46519ce91dd446" translate="yes" xml:space="preserve">
          <source>Get the first list item in a list</source>
          <target state="translated">リストの最初の項目を取得する</target>
        </trans-unit>
        <trans-unit id="f34949909727615718ccda785bec545aabb8fc5b" translate="yes" xml:space="preserve">
          <source>Get the form element and search in its descendants for the content &amp;ldquo;submit the form!&amp;rdquo;</source>
          <target state="translated">フォーム要素を取得し、その子孫で「フォームを送信する！」というコンテンツを検索します。</target>
        </trans-unit>
        <trans-unit id="7392349d6f790052fca9b4d3b42d0f2f1fb25e29" translate="yes" xml:space="preserve">
          <source>Get the global &lt;code&gt;window.location&lt;/code&gt; object of the page that is currently active.</source>
          <target state="translated">現在アクティブなページのグローバル &lt;code&gt;window.location&lt;/code&gt; オブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="efe40729566f375b25917940219aff3660d5d5be" translate="yes" xml:space="preserve">
          <source>Get the immediately following sibling of each DOM element within a set of DOM elements.</source>
          <target state="translated">DOM 要素の集合内の各 DOM 要素の直後の兄弟を取得します。</target>
        </trans-unit>
        <trans-unit id="2b1126846a91c4bd5ac0522f41161a995c4ea1ed" translate="yes" xml:space="preserve">
          <source>Get the immediately preceding sibling of each element in a set of the elements.</source>
          <target state="translated">要素の集合内の各要素の直前の兄弟を取得します。</target>
        </trans-unit>
        <trans-unit id="29c3bb9f9b6534cc0e7895265cb8352947478fb2" translate="yes" xml:space="preserve">
          <source>Get the input element</source>
          <target state="translated">入力要素を取得する</target>
        </trans-unit>
        <trans-unit id="0c145f6e975793aa3782c7f617231769287b7032" translate="yes" xml:space="preserve">
          <source>Get the input with the &lt;code&gt;.actions-email&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;.actions-email&lt;/code&gt; クラスで入力を取得する</target>
        </trans-unit>
        <trans-unit id="7701d53ab8276424e3f88d88710d714aa135808f" translate="yes" xml:space="preserve">
          <source>Get the last DOM element within a set of DOM elements.</source>
          <target state="translated">DOM 要素の集合内の最後の DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="0a13d53ee9c92eb6cc5de912f365adc402854faf" translate="yes" xml:space="preserve">
          <source>Get the last list item in a list</source>
          <target state="translated">リスト内の最後のリスト項目を取得する</target>
        </trans-unit>
        <trans-unit id="08a472ad16e7891f22a0739cedc8254734df3848" translate="yes" xml:space="preserve">
          <source>Get the parent DOM element of a set of DOM elements.</source>
          <target state="translated">DOM 要素の集合の親 DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="ee6f72f7615ce64ad8685303ddcaa1d2df52fa1b" translate="yes" xml:space="preserve">
          <source>Get the parent DOM elements of a set of DOM elements.</source>
          <target state="translated">DOM 要素の集合の親 DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="c5949833faa9184e9a9fc0d7e6b997563a690cea" translate="yes" xml:space="preserve">
          <source>Get the parent of the active &lt;code&gt;li&lt;/code&gt;</source>
          <target state="translated">アクティブな &lt;code&gt;li&lt;/code&gt; の親を取得します</target>
        </trans-unit>
        <trans-unit id="06e6a8cf49fd5e73acb5c7047924312de6542f1e" translate="yes" xml:space="preserve">
          <source>Get the parent with class &lt;code&gt;sub-nav&lt;/code&gt; of all &lt;code&gt;li&lt;/code&gt; elements</source>
          <target state="translated">すべての &lt;code&gt;li&lt;/code&gt; 要素の &lt;code&gt;sub-nav&lt;/code&gt; クラスを持つ親を取得する</target>
        </trans-unit>
        <trans-unit id="2eaea41a35788b4aefba0a72473f89ab1734ecc3" translate="yes" xml:space="preserve">
          <source>Get the parents of the active li</source>
          <target state="translated">活躍中のリリの親をゲット</target>
        </trans-unit>
        <trans-unit id="4e0d45fd2feaf7dd645a68f04d27cf8f69111d10" translate="yes" xml:space="preserve">
          <source>Get the parents with class &lt;code&gt;main-nav&lt;/code&gt; of the active li</source>
          <target state="translated">アクティブなliの &lt;code&gt;main-nav&lt;/code&gt; クラスで親を取得します</target>
        </trans-unit>
        <trans-unit id="7d3b39240396ab9d1dee1bcb8084eb07e95f7413" translate="yes" xml:space="preserve">
          <source>Get the root DOM element.</source>
          <target state="translated">ルートの DOM 要素を取得します。</target>
        </trans-unit>
        <trans-unit id="b9008603caf292e2e0363feaaea7415ec8278e95" translate="yes" xml:space="preserve">
          <source>Get the root element</source>
          <target state="translated">ルート要素を取得する</target>
        </trans-unit>
        <trans-unit id="5d7ca8a40ecaeec2c9e9caed5dad6b68fd0bd9a3" translate="yes" xml:space="preserve">
          <source>Get the root element in a &lt;a href=&quot;within&quot;&gt;&lt;code&gt;.within()&lt;/code&gt;&lt;/a&gt; callback function</source>
          <target state="translated">&lt;a href=&quot;within&quot;&gt; &lt;code&gt;.within()&lt;/code&gt; &lt;/a&gt;コールバック関数でルート要素を取得する</target>
        </trans-unit>
        <trans-unit id="e69e38dd0064ed46a8c0e015e5e3d1bbb250dd54" translate="yes" xml:space="preserve">
          <source>Get the siblings of each &lt;code&gt;li&lt;/code&gt;</source>
          <target state="translated">各 &lt;code&gt;li&lt;/code&gt; の兄弟を取得</target>
        </trans-unit>
        <trans-unit id="7e035e3b37ff46d424f4ec844dfac619669f8201" translate="yes" xml:space="preserve">
          <source>Get translation data from a YAML file</source>
          <target state="translated">YAMLファイルから翻訳データを取得する</target>
        </trans-unit>
        <trans-unit id="5e90edca4ba776ac79604979eab00c32de2c3843" translate="yes" xml:space="preserve">
          <source>Gets the element &lt;code&gt;.mobile-nav&lt;/code&gt;</source>
          <target state="translated">要素 &lt;code&gt;.mobile-nav&lt;/code&gt; を取得します</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">はじめに</target>
        </trans-unit>
        <trans-unit id="5c9beb9cf6f4471dd715843a254eca97861e4948" translate="yes" xml:space="preserve">
          <source>Getting dataUrl string</source>
          <target state="translated">dataUrl 文字列の取得</target>
        </trans-unit>
        <trans-unit id="50cf7528f5dddc0bad9e28fd703617a5f39fd683" translate="yes" xml:space="preserve">
          <source>Getting this errors means you&amp;rsquo;ve tried to interact with a &amp;ldquo;dead&amp;rdquo; DOM element - meaning it&amp;rsquo;s been detached or completely removed from the DOM.</source>
          <target state="translated">このエラーが発生するということは、「死んだ」DOM要素を操作しようとしたことを意味します。つまり、DOMから切り離されているか、完全にDOMから削除されています。</target>
        </trans-unit>
        <trans-unit id="6cac413cc1ca2ecd3e244ccdb1d759c2bacc9ff1" translate="yes" xml:space="preserve">
          <source>Git information</source>
          <target state="translated">Git情報</target>
        </trans-unit>
        <trans-unit id="61d9589bd9eca9f4c1edaef9fdf77cb98d356341" translate="yes" xml:space="preserve">
          <source>GitHub Enterprise is currently not supported. Please &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#e58d8089898aa5869c9597809696cb8c8a&quot;&gt;contact us&lt;/a&gt; if you are interested in Enterprise integration.</source>
          <target state="translated">GitHub Enterpriseは現在サポートされていません。エンタープライズ統合に関心がある場合は、お&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#e58d8089898aa5869c9597809696cb8c8a&quot;&gt;問い合わせください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aff159ec522fafdfb4fb97dbfb61a5f564258281" translate="yes" xml:space="preserve">
          <source>GitHub Integration</source>
          <target state="translated">GitHub の統合</target>
        </trans-unit>
        <trans-unit id="2dcf2739aea3970bd24b0f5ba2dddd7b33a5a8d2" translate="yes" xml:space="preserve">
          <source>GitHub Integration is dependent on your CI environment reliably providing commit SHA data (typically via an environment variable). This is not a problem for most users, but if you are facing GitHub integration issues with your CI setup, please make sure the git information is being sent properly by following &lt;a href=&quot;../guides/continuous-integration#Git-information&quot;&gt;these guidelines&lt;/a&gt;. If you are still facing issues after this, please &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#b2dad7dededdf2d1cbc2c0d7c1c19cdbdd&quot;&gt;contact us&lt;/a&gt;.</source>
          <target state="translated">GitHub統合はCI環境に依存しており、コミットSHAデータを確実に提供します（通常、環境変数を介して）。これはほとんどのユーザーにとって問題ではありませんが、CIセットアップでGitHub統合の問題に直面している場合は、次&lt;a href=&quot;../guides/continuous-integration#Git-information&quot;&gt;のガイドライン&lt;/a&gt;に従ってgit情報が適切に送信されていることを確認してください。それでも問題が解決しない場合は、までご&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#b2dad7dededdf2d1cbc2c0d7c1c19cdbdd&quot;&gt;連絡ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f18456fa25c55a5768acea0dbfb95c47ebafef57" translate="yes" xml:space="preserve">
          <source>GitHub integration</source>
          <target state="translated">GitHub の統合</target>
        </trans-unit>
        <trans-unit id="dc63b0e0240e56a49f15e4f20c7da68a0e50ae57" translate="yes" xml:space="preserve">
          <source>GitHub status checks are optional, and can be disabled within a project&amp;rsquo;s GitHub integration settings:</source>
          <target state="translated">GitHubステータスチェックはオプションであり、プロジェクトのGitHub統合設定内で無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="9a9b09d909186a1ea088b925aea4172596fea7db" translate="yes" xml:space="preserve">
          <source>GitLab</source>
          <target state="translated">GitLab</target>
        </trans-unit>
        <trans-unit id="f079a831cab27bcda7d81cd9b48296d0c3dd92ee" translate="yes" xml:space="preserve">
          <source>Gitlab</source>
          <target state="translated">Gitlab</target>
        </trans-unit>
        <trans-unit id="de9840e2e0ad5f0b4ed3f4f8f935d99a273fdaf3" translate="yes" xml:space="preserve">
          <source>Given a button that we want to interact with:</source>
          <target state="translated">対話したいボタンが与えられます。</target>
        </trans-unit>
        <trans-unit id="7d1b270b98ec03fdb9ae6f4853f43a1e81195b8e" translate="yes" xml:space="preserve">
          <source>Given a user visits &lt;code&gt;https://example.cypress.io&lt;/code&gt;</source>
          <target state="translated">ユーザーが &lt;code&gt;https://example.cypress.io&lt;/code&gt; にアクセスしたとします</target>
        </trans-unit>
        <trans-unit id="8b7dbb30a0d9171e0b82a9e0850f90ae943376f5" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;operationName&lt;/code&gt; property is optional in GraphQL requests, we can &lt;code&gt;alias&lt;/code&gt; with or without this property.</source>
          <target state="translated">ことを考える &lt;code&gt;operationName&lt;/code&gt; プロパティはGraphQL要求にオプションである、私たちすることができます &lt;code&gt;alias&lt;/code&gt; を持つか、このプロパティなし。</target>
        </trans-unit>
        <trans-unit id="d29667835da90fa638612f425739d1585f3fd63c" translate="yes" xml:space="preserve">
          <source>Given the following URLs:</source>
          <target state="translated">以下のURLが与えられています。</target>
        </trans-unit>
        <trans-unit id="29303fff62321f55c7d6f1c2952ab69b3c10d5ec" translate="yes" xml:space="preserve">
          <source>Given the remote URL, &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt;, all 3 of these assertions are the same.</source>
          <target state="translated">リモートURL &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt; を考えると、これらの3つのアサーションはすべて同じです。</target>
        </trans-unit>
        <trans-unit id="c9ce81ebe79a34ad916e0f10c82336b6c0417c7a" translate="yes" xml:space="preserve">
          <source>Given the remote URL, &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt;, these assertions are the same.</source>
          <target state="translated">リモートURL &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt; が与えられた場合、これらのアサーションは同じです。</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="9b2c45900d277c38ce7727bdb988069b357640ce" translate="yes" xml:space="preserve">
          <source>Global Shortcuts</source>
          <target state="translated">グローバルショートカット</target>
        </trans-unit>
        <trans-unit id="29153039833ad93fe8da4463c8dfd9ea642a76b6" translate="yes" xml:space="preserve">
          <source>Go back in browser&amp;rsquo;s history</source>
          <target state="translated">ブラウザの履歴に戻る</target>
        </trans-unit>
        <trans-unit id="d4d04da928ea7d145395f5a605ed4ac82f31ff8c" translate="yes" xml:space="preserve">
          <source>Go forward in browser&amp;rsquo;s history</source>
          <target state="translated">ブラウザの履歴を進めます</target>
        </trans-unit>
        <trans-unit id="5e0cd50da0482af647bdab8539432be67bc288d9" translate="yes" xml:space="preserve">
          <source>Go the &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;Organizations page&lt;/a&gt; to select the organization you want to associate with an OSS plan. If you have no organizations, you can create one by clicking the &lt;strong&gt;+ Add Organization&lt;/strong&gt; button.</source>
          <target state="translated">[ &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;組織]ページ&lt;/a&gt;に移動して、OSSプランに関連付ける組織を選択します。組織がない場合は、[ &lt;strong&gt;+組織&lt;/strong&gt;を&lt;strong&gt;追加&lt;/strong&gt; ]ボタンをクリックして組織を作成できます。</target>
        </trans-unit>
        <trans-unit id="0422a88129b73584266fdba6436ecad310c2c2b5" translate="yes" xml:space="preserve">
          <source>Go the &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;Organizations page&lt;/a&gt; to select the organization you want to invite a user to.</source>
          <target state="translated">[ &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;組織]ページ&lt;/a&gt;に移動して、ユーザーを招待する組織を選択します。</target>
        </trans-unit>
        <trans-unit id="50fe2f9896b5cfa3174a0747e961599f55e9a6d1" translate="yes" xml:space="preserve">
          <source>Go to &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;View App Data&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;View App Data&lt;/code&gt; 移動します</target>
        </trans-unit>
        <trans-unit id="ef97070b66184694477c4c1d1f7e3775a6a88973" translate="yes" xml:space="preserve">
          <source>Go to the &lt;strong&gt;Billing &amp;amp; Usage&lt;/strong&gt; page, and then click on the &lt;strong&gt;Apply for an open source plan&lt;/strong&gt; link at the bottom of the page.</source>
          <target state="translated">[ &lt;strong&gt;請求と使用状況]&lt;/strong&gt;ページに移動し、ページの下部にある[ &lt;strong&gt;オープンソースプランの申請&lt;/strong&gt; ] リンクをクリックします。</target>
        </trans-unit>
        <trans-unit id="d90837c2ffa1e3a74c04ba28a54937ca132e194b" translate="yes" xml:space="preserve">
          <source>Go to the Dashboard &lt;a href=&quot;https://dashboard.cypress.io/#/organizations&quot;&gt;Organizations page&lt;/a&gt;.</source>
          <target state="translated">[ダッシュボード&lt;a href=&quot;https://dashboard.cypress.io/#/organizations&quot;&gt;組織]ページに&lt;/a&gt;移動します。</target>
        </trans-unit>
        <trans-unit id="b0c5f3a254f4ca672d762eb0b946cf4ec41e8939" translate="yes" xml:space="preserve">
          <source>Go to the project&amp;rsquo;s &lt;strong&gt;Settings&lt;/strong&gt; page.</source>
          <target state="translated">プロジェクトの&lt;strong&gt;設定&lt;/strong&gt;ページに移動します。</target>
        </trans-unit>
        <trans-unit id="e6c228a4c86735512780e50842464125783195e4" translate="yes" xml:space="preserve">
          <source>Go to the project&amp;rsquo;s settings page.</source>
          <target state="translated">プロジェクトの設定ページに移動します。</target>
        </trans-unit>
        <trans-unit id="0c7d714e91cb5dec0b697e745aac61ae49ffc7fc" translate="yes" xml:space="preserve">
          <source>Go to your organization&amp;rsquo;s projects page.</source>
          <target state="translated">組織のプロジェクトページに移動します。</target>
        </trans-unit>
        <trans-unit id="db905633801ba81831ca6ef490064a11a12cbc63" translate="yes" xml:space="preserve">
          <source>Google or SSO (if configured) login is now supported in the Test Runner. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3519&quot;&gt;#3519&lt;/a&gt;.</source>
          <target state="translated">GoogleまたはSSO（構成されている場合）ログインがテストランナーでサポートされるようになりました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3519&quot;&gt;＃3519&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9016bddfd305a0134827b3dfd7076f8f1d0ee667" translate="yes" xml:space="preserve">
          <source>Grab only the &lt;code&gt;pathname&lt;/code&gt; and add an assertion.</source>
          <target state="translated">&lt;code&gt;pathname&lt;/code&gt; のみを取得して、アサーションを追加します。</target>
        </trans-unit>
        <trans-unit id="606c2c5478a69e14a2c28edf015d90cb8b64f0bd" translate="yes" xml:space="preserve">
          <source>Grab the URL and&amp;hellip;</source>
          <target state="translated">URLを取得して&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="cb2a7509d3d8ad91fde462b610d43ce1604d70ca" translate="yes" xml:space="preserve">
          <source>Grab the URL.</source>
          <target state="translated">URLを掴む。</target>
        </trans-unit>
        <trans-unit id="b8141f065645b4d27c77c60bcbb662968d8aab1f" translate="yes" xml:space="preserve">
          <source>Grab the browser URL, ensure it includes &lt;code&gt;/posts/my-first-post&lt;/code&gt;.</source>
          <target state="translated">ブラウザのURLを取得し、 &lt;code&gt;/posts/my-first-post&lt;/code&gt; が含まれていることを確認します。</target>
        </trans-unit>
        <trans-unit id="754846ed949aeb4a40716255893a342d2ab41d08" translate="yes" xml:space="preserve">
          <source>Grammar: &amp;lsquo;Login -&amp;gt; Log in&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/146&quot;&gt;#146&lt;/a&gt;.</source>
          <target state="translated">文法：「ログイン-&amp;gt;ログイン」。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/146&quot;&gt;＃146を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="22596aa55c61ecc9fa4d622e8d270ad994166133" translate="yes" xml:space="preserve">
          <source>Great for the &lt;em&gt;critical paths&lt;/em&gt; of your application</source>
          <target state="translated">以下のための偉大な&lt;em&gt;クリティカルパス&lt;/em&gt;、アプリケーションの</target>
        </trans-unit>
        <trans-unit id="1dea506717711a3a808d4dd849a7387ef002c478" translate="yes" xml:space="preserve">
          <source>Great for traditional server-side HTML rendering</source>
          <target state="translated">従来のサーバーサイドの HTML レンダリングに最適</target>
        </trans-unit>
        <trans-unit id="f200b907fe9cbc43dee52eef2e65b52b35ab61ee" translate="yes" xml:space="preserve">
          <source>Great for values that need to be checked into source control and remain the same on all machines.</source>
          <target state="translated">ソース・コントロールにチェックされ、すべてのマシンで同じ値を維持する必要がある値に最適です。</target>
        </trans-unit>
        <trans-unit id="b7f5c9d43c59a0710631cc2af91b18239e45dd00" translate="yes" xml:space="preserve">
          <source>Great! Everything should still be green.</source>
          <target state="translated">いいね!全てがまだ緑のままのはずなのに。</target>
        </trans-unit>
        <trans-unit id="8f99cc4f5dade89618cb8cd599b9d39c2074f03a" translate="yes" xml:space="preserve">
          <source>Group name has already been used for this run</source>
          <target state="translated">グループ名はすでにこの実行に使用されています</target>
        </trans-unit>
        <trans-unit id="37af3ea62a389951a11e57ad9b9fd4d8a8f3d47b" translate="yes" xml:space="preserve">
          <source>Group recorded tests together under a single run</source>
          <target state="translated">1回の実行で記録されたテストをグループ化する</target>
        </trans-unit>
        <trans-unit id="ea0e785ee6d24de70f0616d8f0b45dc98bd8b654" translate="yes" xml:space="preserve">
          <source>Grouping by browser</source>
          <target state="translated">ブラウザによるグループ化</target>
        </trans-unit>
        <trans-unit id="917da4b40c1fe1d2de4a4badba93ba4952ec5161" translate="yes" xml:space="preserve">
          <source>Grouping by spec context</source>
          <target state="translated">スペックコンテキストによるグループ化</target>
        </trans-unit>
        <trans-unit id="e969a6e3de6de600fa464cfb10c71fcede42a6db" translate="yes" xml:space="preserve">
          <source>Grouping test runs</source>
          <target state="translated">グループ化テストの実行</target>
        </trans-unit>
        <trans-unit id="7e7d209f0faef0e503b1528f689b098d74c74aba" translate="yes" xml:space="preserve">
          <source>Grouping to label parallelization</source>
          <target state="translated">並列化のラベルを付けるためのグループ化</target>
        </trans-unit>
        <trans-unit id="49f029bc01a7a39f9897aca0208942c0213feec8" translate="yes" xml:space="preserve">
          <source>Guaranteed to work in production</source>
          <target state="translated">本番での動作を保証</target>
        </trans-unit>
        <trans-unit id="7c7b20ed012ae265689f678882bfc339be15feed" translate="yes" xml:space="preserve">
          <source>Guide: Chains of Commands</source>
          <target state="translated">ガイド。コマンドの鎖</target>
        </trans-unit>
        <trans-unit id="90755a57130e1338eaaa1d890a9f746fc8101bf6" translate="yes" xml:space="preserve">
          <source>Guide: Introduction to Cypress</source>
          <target state="translated">ガイド。サイプレスの紹介</target>
        </trans-unit>
        <trans-unit id="ac2601113d60be5641759535a0cbe1066da08e7a" translate="yes" xml:space="preserve">
          <source>Guide: Network Requests</source>
          <target state="translated">ご案内 ネットワークリクエスト</target>
        </trans-unit>
        <trans-unit id="0a3e35f4c515206f708c2e4ee7169a8fef85c24b" translate="yes" xml:space="preserve">
          <source>Guide: Stubs, Spies and Clocks</source>
          <target state="translated">ガイド スタブ、スパイ、時計</target>
        </trans-unit>
        <trans-unit id="b03b1f909af009439dbbe4f95b24b552b8a24508" translate="yes" xml:space="preserve">
          <source>Guide: Using Closures to compare values</source>
          <target state="translated">ガイド。値を比較するためのクロージャの使用</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="eb5225848c1dc213f7e015ed498301ce638e7534" translate="yes" xml:space="preserve">
          <source>Guides: Aliases</source>
          <target state="translated">ガイド エイリアス</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="8e47c716e7195739d3b802b578903db7a84e2281" translate="yes" xml:space="preserve">
          <source>HTML fixtures will be prettified and saved back over the original.</source>
          <target state="translated">HTMLのフィクスチャはプリティ化され、元のものに戻って保存されます。</target>
        </trans-unit>
        <trans-unit id="5d7f586a796b0739316cb35088d091ccdea24ffc" translate="yes" xml:space="preserve">
          <source>HTML form submissions using form option</source>
          <target state="translated">フォームオプションを使用したHTMLフォーム送信</target>
        </trans-unit>
        <trans-unit id="19d29c8d4abf2f9577d1b135f72cb313e463241e" translate="yes" xml:space="preserve">
          <source>Hacking on Cypress</source>
          <target state="translated">サイプレスのハッキング</target>
        </trans-unit>
        <trans-unit id="b409ffb8a9b2f5025b32b98593bb74bdec8e970f" translate="yes" xml:space="preserve">
          <source>Had the &lt;strong&gt;next page&lt;/strong&gt; not finished its loading phase, Cypress would have ended the test and presented an error.</source>
          <target state="translated">していた&lt;strong&gt;次のページには、&lt;/strong&gt;そのロード・フェーズを終了していない、サイプレスは、テストを終了し、エラーを提示しているだろう。</target>
        </trans-unit>
        <trans-unit id="9e72d2f8e033b2bc19d2152ced751c57011c59d8" translate="yes" xml:space="preserve">
          <source>Had this request come back with a non &lt;code&gt;2xx&lt;/code&gt; status code such as &lt;code&gt;404&lt;/code&gt; or &lt;code&gt;500&lt;/code&gt;, or if there was a JavaScript error in the application&amp;rsquo;s code, the test would have failed.</source>
          <target state="translated">このリクエストが &lt;code&gt;404&lt;/code&gt; や &lt;code&gt;500&lt;/code&gt; などの &lt;code&gt;2xx&lt;/code&gt; 以外のステータスコードで返された場合、またはアプリケーションのコードにJavaScriptエラーがあった場合、テストは失敗します。</target>
        </trans-unit>
        <trans-unit id="bdac163073067a04614b1dcd8e54852f9518d989" translate="yes" xml:space="preserve">
          <source>Handle &lt;code&gt;javascripts&lt;/code&gt; and preprocess them as we do regular specs. Fixes: &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/15&quot;&gt;#15&lt;/a&gt;.</source>
          <target state="translated">ハンドル &lt;code&gt;javascripts&lt;/code&gt; と私たちは定期的なスペックがそうであるようにそれらを前処理します。修正：&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/15&quot;&gt;＃15&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="188b7a520a7805d0985a255f70328bf200fa9b99" translate="yes" xml:space="preserve">
          <source>Handle clearing cookies better when they are created on a path other than &lt;code&gt;/&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/104&quot;&gt;#104&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 以外のパスで作成されたCookieのクリア処理を改善します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/104&quot;&gt;＃104を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1f7d00f3a4411061aa502256c35717937897eb59" translate="yes" xml:space="preserve">
          <source>Handle errors gracefully when Electron window has been closed before paint events happen. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/705&quot;&gt;#705&lt;/a&gt;.</source>
          <target state="translated">ペイントイベントが発生する前にElectronウィンドウが閉じられたときに、エラーを適切に処理します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/705&quot;&gt;＃705を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="faae97f3e6bab5b1ec96249ffd6499b2f4a81a69" translate="yes" xml:space="preserve">
          <source>Handle relative path segments which walk up past the remote host &lt;code&gt;../../assets/app.css&lt;/code&gt;.</source>
          <target state="translated">リモートホスト &lt;code&gt;../../assets/app.css&lt;/code&gt; を通過する相対パスセグメントを処理します。</target>
        </trans-unit>
        <trans-unit id="87e156fe22633028b26828952fc5a73972531ea3" translate="yes" xml:space="preserve">
          <source>Happo</source>
          <target state="translated">Happo</target>
        </trans-unit>
        <trans-unit id="707f84ef4af310b25865654b98f5ddaeba05cb8e" translate="yes" xml:space="preserve">
          <source>Hardcoded versus using the configuration object</source>
          <target state="translated">ハードコード化と設定オブジェクトの使用</target>
        </trans-unit>
        <trans-unit id="e8496604be16d3a97f0c5f4ededacbcf975112e5" translate="yes" xml:space="preserve">
          <source>Harder to test edge cases</source>
          <target state="translated">エッジケースのテストが難しい</target>
        </trans-unit>
        <trans-unit id="314e78d2089598a32c2bc337ea0d65caa5b42212" translate="yes" xml:space="preserve">
          <source>Having Cypress serve your files is useful in simple projects and example apps, but isn&amp;rsquo;t recommended for real apps. It is always better to run your own server and provide the url to Cypress.</source>
          <target state="translated">サイプレスにファイルを提供させることは、単純なプロジェクトやサンプルアプリでは役立ちますが、実際のアプリでは推奨されません。独自のサーバーを実行し、サイプレスにURLを提供することは常に優れています。</target>
        </trans-unit>
        <trans-unit id="8732b7ce8d13baf2c7160be90b669808fcc6d15e" translate="yes" xml:space="preserve">
          <source>Having Cypress serve your files is useful in smaller projects and example apps, but isn&amp;rsquo;t recommended for production apps. It is always better to run your own server and provide the url to Cypress.</source>
          <target state="translated">サイプレスにファイルを提供させることは、小規模なプロジェクトやサンプルアプリでは役立ちますが、本番アプリにはお勧めしません。独自のサーバーを実行し、サイプレスにURLを提供することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f8fda48fd9a8d610b8e343195c17c7d81420c92b" translate="yes" xml:space="preserve">
          <source>Having a &lt;code&gt;baseUrl&lt;/code&gt; set gives you the added bonus of seeing an error if your server is not running during &lt;code&gt;cypress open&lt;/code&gt; at the specified &lt;code&gt;baseUrl&lt;/code&gt;.</source>
          <target state="translated">持つ &lt;code&gt;baseUrl&lt;/code&gt; にのセットは、あなたのサーバが中に実行されていない場合は、エラーを見ての追加ボーナス与え &lt;code&gt;cypress open&lt;/code&gt; 指定で &lt;code&gt;baseUrl&lt;/code&gt; にします。</target>
        </trans-unit>
        <trans-unit id="25521616f15e3679103b7d481184a8e78b0a89d4" translate="yes" xml:space="preserve">
          <source>Having custom commands repeat the same UI actions over and over again is slow, and unnecessary. Try to take as many shortcuts as possible.</source>
          <target state="translated">カスタムコマンドが何度も何度も同じUIアクションを繰り返すのは、時間がかかり、不必要です。できるだけ多くのショートカットを取るようにしてください。</target>
        </trans-unit>
        <trans-unit id="dc0ba226241679963d5991ee3e62354ceaed28a9" translate="yes" xml:space="preserve">
          <source>Having issues launching installed browsers? Read more about debugging browser launching</source>
          <target state="translated">インストールされているブラウザの起動に問題がありますか?ブラウザ起動のデバッグについての詳細はこちら</target>
        </trans-unit>
        <trans-unit id="055729b7e427eb94b8ee19ddc7e72e35d840070b" translate="yes" xml:space="preserve">
          <source>Having tests rely on the state of previous tests</source>
          <target state="translated">過去のテストの状態に頼ったテストをさせる</target>
        </trans-unit>
        <trans-unit id="e8ffc4a6bcc9a7209b2d269839aeaa55eeffa533" translate="yes" xml:space="preserve">
          <source>Having trouble launching a browser? Check out the debugging guide</source>
          <target state="translated">ブラウザの起動に問題がありますか?デバッグガイドをチェック</target>
        </trans-unit>
        <trans-unit id="fa3c3dfec6a870589222a61959c35c8dcce4351b" translate="yes" xml:space="preserve">
          <source>Having trouble with browser detection? Check out the debugging guide</source>
          <target state="translated">ブラウザの検出に問題がありますか?デバッグガイドをチェックしてください</target>
        </trans-unit>
        <trans-unit id="7f06f01af2e5d4df70fedd087311f9448c40f42f" translate="yes" xml:space="preserve">
          <source>Having ultimate control over your application, the network traffic, and native access to every host object unlocks a new way of testing that has never been possible before. Instead of being &amp;lsquo;locked out&amp;rsquo; of your application and not being able to easily control it - Cypress instead lets you alter any aspect of how your application works. Instead of slow and expensive tests, such as creating the state required for a given situation, you can create these states artificially like you would in an unit test. For instance you can:</source>
          <target state="translated">アプリケーション、ネットワークトラフィック、およびすべてのホストオブジェクトへのネイティブアクセスを最終的に制御することで、これまで不可能だった新しいテスト方法が実現します。アプリケーションから「ロックアウト」され、簡単に制御できない代わりに、サイプレスでは、アプリケーションの動作のあらゆる側面を変更できます。特定の状況に必要な状態を作成するなどの低速で費用のかかるテストの代わりに、単体テストの場合と同様に、これらの状態を人工的に作成できます。たとえば、次のことができます。</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="44dbaf5f60ddfa801984c4aeeb5f01f8bc965fe1" translate="yes" xml:space="preserve">
          <source>Headless frame rate is now correctly set to &lt;code&gt;20&lt;/code&gt; instead of resetting back to &lt;code&gt;60&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/303&quot;&gt;#303&lt;/a&gt;.</source>
          <target state="translated">ヘッドレスフレームレートは、 &lt;code&gt;60&lt;/code&gt; にリセットする代わりに、正しく &lt;code&gt;20&lt;/code&gt; に設定されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/303&quot;&gt;＃303を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6d1cfa2466365e73e8806958139027232b06905c" translate="yes" xml:space="preserve">
          <source>Headless running is now fixed in OSX. This was due to a bug with app signing + unzipping via the CLI.</source>
          <target state="translated">OSXでヘッドレスランニングが修正されました。これはCLI経由でアプリの署名+解凍のバグが原因でした。</target>
        </trans-unit>
        <trans-unit id="9ddaf1ef3557c9098d6fc1c783153f51a6a7072a" translate="yes" xml:space="preserve">
          <source>Height of viewport in pixels (must be a non-negative, finite number).</source>
          <target state="translated">ビューポートの高さをピクセル単位で表します(負でない有限数でなければなりません).</target>
        </trans-unit>
        <trans-unit id="a4d173f2281e941cb96e17520a3bb3be42fbc2cb" translate="yes" xml:space="preserve">
          <source>Height of viewport in pixels (must be between 20 and 3000).</source>
          <target state="translated">ビューポートの高さをピクセル単位で表示します(20~3000の間でなければなりません)。</target>
        </trans-unit>
        <trans-unit id="c0a190d8148898dfb82aea5eff410e02e64fc0fc" translate="yes" xml:space="preserve">
          <source>Helpful to have one test around the &lt;em&gt;happy path&lt;/em&gt; of a feature</source>
          <target state="translated">機能の&lt;em&gt;ハッピーパス&lt;/em&gt;について1つのテストを行うと役立つ</target>
        </trans-unit>
        <trans-unit id="030e3fd531a3dd2a43798fa2da6a512028001bfc" translate="yes" xml:space="preserve">
          <source>Helps test your applications for accessibility issues using axe-core.</source>
          <target state="translated">axe-coreを使用してアクセシビリティの問題に対応したアプリケーションのテストを支援します。</target>
        </trans-unit>
        <trans-unit id="63cb5f5226e20f0479eb88cadff241c34eefe06d" translate="yes" xml:space="preserve">
          <source>Here are args available for the currently supported browsers:</source>
          <target state="translated">現在サポートされているブラウザで利用できる引数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="14c03d0f56dc3738e282de0c2fa6eb02044ccaf5" translate="yes" xml:space="preserve">
          <source>Here are even more action commands Cypress provides to interact with your app:</source>
          <target state="translated">ここでは、Cypress がアプリと対話するために提供するアクションコマンドをさらにご紹介します。</target>
        </trans-unit>
        <trans-unit id="814aac263322eca84300fd7b981e83d37036b8a4" translate="yes" xml:space="preserve">
          <source>Here are options for the currently supported browsers:</source>
          <target state="translated">現在サポートされているブラウザのオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="8551a7bfd1ffde611a59e8b1641133ada87c9dc0" translate="yes" xml:space="preserve">
          <source>Here are preferences available for the currently supported browsers:</source>
          <target state="translated">ここでは、現在サポートされているブラウザで利用可能な環境設定をご紹介します。</target>
        </trans-unit>
        <trans-unit id="5d2e29737b3b8e7a7adcbef663631a1191844188" translate="yes" xml:space="preserve">
          <source>Here are some example use cases:</source>
          <target state="translated">ここでは、いくつかの使用例を紹介します。</target>
        </trans-unit>
        <trans-unit id="d8ffd06a20dfcdd79365aaa53ee7b6a2c44534e0" translate="yes" xml:space="preserve">
          <source>Here are some examples you can do with these events:</source>
          <target state="translated">これらのイベントでできる例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="b8b78a4f081fb766a8f336f837efb42783a2c1a0" translate="yes" xml:space="preserve">
          <source>Here are some further examples of using &lt;code&gt;.as()&lt;/code&gt; that illustrate the asynchronous behavior.</source>
          <target state="translated">次に、非同期動作を示す &lt;code&gt;.as()&lt;/code&gt; の使用例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="c013c06c3d685978853ca3d8f7364a4a590ab667" translate="yes" xml:space="preserve">
          <source>Here are some potential workarounds:</source>
          <target state="translated">ここでは、いくつかの回避策が考えられます。</target>
        </trans-unit>
        <trans-unit id="4ea77d70b27f359afe69803d5da3d579905e6a1a" translate="yes" xml:space="preserve">
          <source>Here are the available download URLs:</source>
          <target state="translated">ダウンロード可能なURLは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d31b9a6d1d14349df38c3fea339e2256a8c9a238" translate="yes" xml:space="preserve">
          <source>Here are the available properties on &lt;code&gt;StaticResponse&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;StaticResponse&lt;/code&gt; で使用可能なプロパティは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2cd666f2b9f17d73be1093e69a3dfeeef58b44cb" translate="yes" xml:space="preserve">
          <source>Here are two recipes using both webpack and Browserify to write your tests in TypeScript.</source>
          <target state="translated">ここでは、webpack と Browserify の両方を使って、TypeScript でテストを書くための 2 つのレシピを紹介します。</target>
        </trans-unit>
        <trans-unit id="2d7d5d86b4de31868e90f14a2b33271d3d299c09" translate="yes" xml:space="preserve">
          <source>Here is a list of common element assertions. Notice how we use these assertions (listed above) with &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;. You may also want to read about how Cypress &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;retries&lt;/a&gt; assertions.</source>
          <target state="translated">一般的な要素のアサーションのリストは次のとおりです。これらのアサーション（上記）を&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; で&lt;/a&gt;使用する方法に注意してください。サイプレスがアサーションを&lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;再試行&lt;/a&gt;する方法について読むこともできます。</target>
        </trans-unit>
        <trans-unit id="5ad1190353ae9da1d76a71d8104c8d1fe7f2dfdf" translate="yes" xml:space="preserve">
          <source>Here is a short test that demonstrates some flake.</source>
          <target state="translated">ここでは、いくつかのフレークを示す短いテストを行います。</target>
        </trans-unit>
        <trans-unit id="afa416d61c529492dbc90976ea7a74d0b1fc9ab5" translate="yes" xml:space="preserve">
          <source>Here is an example of aliasing routes and then subsequently waiting on them:</source>
          <target state="translated">ルートをエイリアス化して、その後に待機する例を示します。</target>
        </trans-unit>
        <trans-unit id="51dad279a09b747c179aba04441ea32fb4addc73" translate="yes" xml:space="preserve">
          <source>Here is an example of programmatically running a spec file:</source>
          <target state="translated">ここではspecファイルをプログラムで実行する例を示します。</target>
        </trans-unit>
        <trans-unit id="e2e8a7cd2dfdde9b6c69b6c5f115176d1baac676" translate="yes" xml:space="preserve">
          <source>Here is how you can launch Cypress application directly without the npm CLI module. First, find where the binary is installed using the &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">以下は、npm CLIモジュールなしでサイプレスアプリケーションを直接起動する方法です。まず、&lt;a href=&quot;command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt;コマンドを使用して、バイナリがインストールされている場所を見つけます。</target>
        </trans-unit>
        <trans-unit id="d14258feb2429db988a8d7509b13beb919384d30" translate="yes" xml:space="preserve">
          <source>Here is our test to confirm that the error is thrown.</source>
          <target state="translated">ここでは、エラーが発生したことを確認するためのテストを行います。</target>
        </trans-unit>
        <trans-unit id="80c20760fb3e28f4c6281bac6300036a33118a9e" translate="yes" xml:space="preserve">
          <source>Here is the problem: &lt;strong&gt;there is no guarantee that this code will run.&lt;/strong&gt;</source>
          <target state="translated">ここに問題&lt;strong&gt;があります。このコードが実行される保証はありません。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f44db513b84502f50769c879707f9e5d550385d" translate="yes" xml:space="preserve">
          <source>Here you will see a &lt;strong&gt;Record Keys&lt;/strong&gt; section</source>
          <target state="translated">ここに&lt;strong&gt;レコードキー&lt;/strong&gt;セクションが表示されます</target>
        </trans-unit>
        <trans-unit id="c16fff170ddf0ae5c454992c749b68f2bd467165" translate="yes" xml:space="preserve">
          <source>Here you will see a section displaying &lt;strong&gt;Access to Runs&lt;/strong&gt;. Choose the appropriate access you&amp;rsquo;d like to assign for the project here.</source>
          <target state="translated">ここに&lt;strong&gt;、実行へのアクセスを&lt;/strong&gt;表示するセクションが表示さ&lt;strong&gt;れます&lt;/strong&gt;。ここで、プロジェクトに割り当てる適切なアクセスを選択します。</target>
        </trans-unit>
        <trans-unit id="32e1d7a8806aeac84259628e771eb1a469fc257f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s 2 ways we can fix this:</source>
          <target state="translated">これを修正できる2つの方法を次に示します。</target>
        </trans-unit>
        <trans-unit id="55ee5b29e3d5024bc2e87add2856935ae88d33b9" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a great use case for a &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">これが &lt;code&gt;const&lt;/code&gt; の優れた使用例です。</target>
        </trans-unit>
        <trans-unit id="9c7425158c4e0010b706a7f38abe9fb6a8b9bedf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a more robust example:</source>
          <target state="translated">以下に、より堅牢な例を示します。</target>
        </trans-unit>
        <trans-unit id="3651308ec64fa280dbb96d37699802233519856c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example alongside seeding your database:</source>
          <target state="translated">データベースをシードする例を次に示します。</target>
        </trans-unit>
        <trans-unit id="fbc40dbabb34c752bd31e2992062533604057d06" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of aliasing a request and accessing its properties later.</source>
          <target state="translated">次に、リクエストにエイリアスを設定し、後でそのプロパティにアクセスする例を示します。</target>
        </trans-unit>
        <trans-unit id="898fe3f9aa85a77c3841827bf8d46925f884ed3f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of aliasing a route and waiting on it to complete.</source>
          <target state="translated">これは、ルートにエイリアスを付けて、完了するまで待機する例です。</target>
        </trans-unit>
        <trans-unit id="02f1cc5d7e8c943c34681b0b497bc1b7998007ac" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses &lt;code&gt;Cypress.env&lt;/code&gt; to access an environment variable that&amp;rsquo;s been &lt;a href=&quot;../../guides/guides/environment-variables#Option-5-Plugins&quot;&gt;dynamically set in a plugin&lt;/a&gt;.</source>
          <target state="translated">以下は、 &lt;code&gt;Cypress.env&lt;/code&gt; を使用&lt;a href=&quot;../../guides/guides/environment-variables#Option-5-Plugins&quot;&gt;して、プラグインで動的に設定された&lt;/a&gt;環境変数にアクセスする例です。</target>
        </trans-unit>
        <trans-unit id="3e5126e5981530cde0c62bf77e07d8e123bca185" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses &lt;code&gt;Cypress.env&lt;/code&gt; to access an environment variable that&amp;rsquo;s been &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html#Option-5-Plugins&quot;&gt;dynamically set in a plugin&lt;/a&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;Cypress.env&lt;/code&gt; を使用&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html#Option-5-Plugins&quot;&gt;して、プラグインに動的に設定されて&lt;/a&gt;いる環境変数にアクセスする例です。</target>
        </trans-unit>
        <trans-unit id="f4a9a5a371b2806648657252f2716891d11fed99" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses the selector to ensure that the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; remains the &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;subject&lt;/a&gt; for future chaining.</source>
          <target state="translated">以下は、セレクターを使用して、 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; が今後のチェーンの&lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;対象となる&lt;/a&gt;ようにする例です。</target>
        </trans-unit>
        <trans-unit id="3e4ee7188f92ca666a64300d94f9c2907fb465be" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses the selector to ensure that the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; remains the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;subject&lt;/a&gt; for future chaining.</source>
          <target state="translated">これは、セレクターを使用して、 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; が将来のチェーンの&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;対象の&lt;/a&gt;ままであることを確認する例です。</target>
        </trans-unit>
        <trans-unit id="f8457e8d4353144ee6edc87554d4672919261fc2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using the &lt;code&gt;matchCase&lt;/code&gt; option to ignore case sensitivity.</source>
          <target state="translated">大文字と小文字の区別を無視するために &lt;code&gt;matchCase&lt;/code&gt; オプションを使用する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="b055900551745b9e56dfba628f57c81d43ad590b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s another example.</source>
          <target state="translated">ここに別の例があります。</target>
        </trans-unit>
        <trans-unit id="e6260cef565ea487eb7d18e2f71bb7879a44efa2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what that looks like:</source>
          <target state="translated">これは次のようになります。</target>
        </trans-unit>
        <trans-unit id="d8d61e0439e635ed2b26dc3edd9a23512001bc32" translate="yes" xml:space="preserve">
          <source>Highlighting $el&amp;rsquo;s on DOM restore now works again.</source>
          <target state="translated">DOMの復元で$ elを強調表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="c3d2a77fef876d6fdceb5df31f51861be6fa380d" translate="yes" xml:space="preserve">
          <source>Hitbox is no longer covered up by element layers on DOM revert.</source>
          <target state="translated">ヒットボックスは、DOM のリバート時に要素レイヤーで覆われなくなった。</target>
        </trans-unit>
        <trans-unit id="a9edd6bc7d4fd9e35b4514d2f2f4982f3fc9d13f" translate="yes" xml:space="preserve">
          <source>Hitboxes are now displayed on the screen based on the actual coordinates where an &lt;code&gt;action command&lt;/code&gt; event took place.</source>
          <target state="translated">&lt;code&gt;action command&lt;/code&gt; イベントが発生した実際の座標に基づいて、ヒットボックスが画面に表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="98a9d3545c337cb4da39acf4ed80e7e6fcad2dec" translate="yes" xml:space="preserve">
          <source>Hmm, weird, why is Cypress only looking at the &lt;em&gt;first&lt;/em&gt; item? Let&amp;rsquo;s hover over the &amp;ldquo;GET .todo-list li&amp;rdquo; command to inspect what &lt;em&gt;that command found&lt;/em&gt;. Ohh, interesting - there was only one item at that moment.</source>
          <target state="translated">うーん、奇妙なことに、なぜサイプレスは&lt;em&gt;最初の&lt;/em&gt;アイテムしか見ないのですか？「GET .todo-list li」コマンドにカーソルを合わせて&lt;em&gt;、そのコマンドが見つけた&lt;/em&gt;ものを調べてみましょう。おお、おもしろい-現時点ではアイテムは1つしかなかった。</target>
        </trans-unit>
        <trans-unit id="52b847f30470700f7ad74d57aea71bd170f96298" translate="yes" xml:space="preserve">
          <source>Hold down modifier key and type a word</source>
          <target state="translated">修飾キーを押しながら単語を入力</target>
        </trans-unit>
        <trans-unit id="9b553bb93a72e5a40a2a4d68c61783f9a8cc09c9" translate="yes" xml:space="preserve">
          <source>Holding modifier keys and clicking an arbitrary element.</source>
          <target state="translated">モディファイアキーを押しながら任意の要素をクリックします。</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="f6c038aebd335df3d7a2cad9bfbde0df6072568d" translate="yes" xml:space="preserve">
          <source>Host header HTTPS protocol handling fixed.</source>
          <target state="translated">ホストヘッダのHTTPSプロトコルの処理を修正した。</target>
        </trans-unit>
        <trans-unit id="2159f595c2cbfb912f099f3985daad85d59e037d" translate="yes" xml:space="preserve">
          <source>Hover over the second &amp;ldquo;FIND label&amp;rdquo; command - something is wrong here. It found the &lt;em&gt;first label&lt;/em&gt;, then kept requerying to find the text &amp;ldquo;todo B&amp;rdquo;, but the first item always remains &amp;ldquo;todo A&amp;rdquo;.</source>
          <target state="translated">2番目の「FIND label」コマンドにカーソルを合わせます-ここで何かが間違っています。&lt;em&gt;最初のラベル&lt;/em&gt;を見つけ、次に「todo B」というテキストを検索するために再クエリを続けましたが、最初の項目は常に「todo A」のままです。</target>
        </trans-unit>
        <trans-unit id="cb0744435dfa3aa876ff9a4a933675ccbfca33e1" translate="yes" xml:space="preserve">
          <source>Hovering on Commands</source>
          <target state="translated">コマンドの上にカーソルを置く</target>
        </trans-unit>
        <trans-unit id="1eabf47d874bf62e5c6fcc8434c4d32a1d4d6b61" translate="yes" xml:space="preserve">
          <source>Hovering on commands which delay resolving their $el will now properly highlight again.</source>
          <target state="translated">el の解決が遅れているコマンドの上にカーソルを置くと、再び適切にハイライトされるようになりました。</target>
        </trans-unit>
        <trans-unit id="140059e62cf126a5e8eb67ead563a9f78d1c4949" translate="yes" xml:space="preserve">
          <source>How Cypress calculates visibility</source>
          <target state="translated">サイプレスが可視性を計算する方法</target>
        </trans-unit>
        <trans-unit id="cff8f2b6ae80cde85106bd6af47fc8045914af87" translate="yes" xml:space="preserve">
          <source>How Cypress can record a video of the entire run</source>
          <target state="translated">サイプレスがラン全体の動画を録画する方法</target>
        </trans-unit>
        <trans-unit id="98f7e0f748deb1443c93f7bd3659f5a1a3d30245" translate="yes" xml:space="preserve">
          <source>How Cypress captures screenshots of test failures automatically</source>
          <target state="translated">Cypress がテスト失敗のスクリーンショットを自動的にキャプチャする方法</target>
        </trans-unit>
        <trans-unit id="7b51268a03dd2542c0fb37b80bfa207ba156079d" translate="yes" xml:space="preserve">
          <source>How Cypress deals with animating elements</source>
          <target state="translated">Cypressがアニメーション要素をどのように扱うか</target>
        </trans-unit>
        <trans-unit id="73c01ab5564943d441ac44b574f4de674e11277e" translate="yes" xml:space="preserve">
          <source>How Cypress embraces the standard Developer Tools</source>
          <target state="translated">Cypressが標準のDeveloper Toolsをどのように採用しているか</target>
        </trans-unit>
        <trans-unit id="8fe045ca917a598758abb24d99aa57d13ddbf2ab" translate="yes" xml:space="preserve">
          <source>How Cypress enables you to stub out the back end with &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">サイプレスが&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; で&lt;/a&gt;バックエンドをスタブ化できるようにする方法</target>
        </trans-unit>
        <trans-unit id="28f4d1cbd51c15bde207780d3c358fc7db90eb47" translate="yes" xml:space="preserve">
          <source>How Cypress ensures elements are actionable</source>
          <target state="translated">Cypressが要素を実行可能な状態にする方法</target>
        </trans-unit>
        <trans-unit id="1b7167d8679a0646d51f127bd5e031240090b368" translate="yes" xml:space="preserve">
          <source>How Cypress handles unit tests vs integration tests.</source>
          <target state="translated">Cypress がユニットテストと統合テストをどのように扱うか。</target>
        </trans-unit>
        <trans-unit id="c57acce719c2789c985542d885b453696c112f3e" translate="yes" xml:space="preserve">
          <source>How Cypress improves and extends the included libraries</source>
          <target state="translated">Cypressがどのようにして同梱のライブラリを改善・拡張しているか</target>
        </trans-unit>
        <trans-unit id="6b10396109b42dddf93ce216777e847e5695f44f" translate="yes" xml:space="preserve">
          <source>How Cypress manages subjects and chains of commands</source>
          <target state="translated">サイプレスがどのように科目と命令の連鎖を管理しているか</target>
        </trans-unit>
        <trans-unit id="f180a802511f5b581b51f2e46acd1bd24af79a21" translate="yes" xml:space="preserve">
          <source>How Cypress queries the DOM</source>
          <target state="translated">Cypress が DOM を問い合わせる方法</target>
        </trans-unit>
        <trans-unit id="981c35f2168978f94f48cf143fdfb9ff4a245dc9" translate="yes" xml:space="preserve">
          <source>How Cypress really looks, Promises wrapped up and hidden from us.</source>
          <target state="translated">サイプレスの本当の姿は、約束は包まれて隠されている。</target>
        </trans-unit>
        <trans-unit id="e10734e8c9a0fc14fe97d7dbd378b93088722829" translate="yes" xml:space="preserve">
          <source>How Cypress retries commands and assertions</source>
          <target state="translated">Cypress がコマンドとアサーションを再試行する方法</target>
        </trans-unit>
        <trans-unit id="b142ad7f6b12640c3734dd748fc11f92fe06a187" translate="yes" xml:space="preserve">
          <source>How Cypress runs in the same event loop with your code, keeping debugging simple and understandable</source>
          <target state="translated">Cypress がコードと同じイベントループで実行され、デバッグがシンプルでわかりやすい状態を維持する方法</target>
        </trans-unit>
        <trans-unit id="d5369cf5312cd1c730e69e1fc331935705756e74" translate="yes" xml:space="preserve">
          <source>How Cypress visualizes network management in the Command Log</source>
          <target state="translated">Cypress がコマンドログでネットワーク管理を可視化する方法</target>
        </trans-unit>
        <trans-unit id="d0079e400a6f4000574481fcd130b5cd82f63366" translate="yes" xml:space="preserve">
          <source>How It Works:</source>
          <target state="translated">どのように機能するのか。</target>
        </trans-unit>
        <trans-unit id="b46ab0d4570fbb1a5ca62c3033583841a8f96810" translate="yes" xml:space="preserve">
          <source>How and when to use &lt;code&gt;debugger&lt;/code&gt; and the shorthand &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; と省略形の&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt;コマンドをいつどのように使用するか</target>
        </trans-unit>
        <trans-unit id="49881af9699516c6a6558ae5dd5eec081ab2d8bb" translate="yes" xml:space="preserve">
          <source>How do I create conditional control flow, using if/else? So that if an element does (or doesn&amp;rsquo;t) exist, I choose what to do?</source>
          <target state="translated">if / elseを使用して条件付き制御フローを作成するにはどうすればよいですか？要素が存在する（または存在しない）場合、どうすればよいですか？</target>
        </trans-unit>
        <trans-unit id="372621e6b633f9d84b19ba805f9e2fbec1ae747c" translate="yes" xml:space="preserve">
          <source>How do I do something different whether an element does or doesn&amp;rsquo;t exist?</source>
          <target state="translated">要素が存在するかどうかに関係なく、どうすれば別のことができますか？</target>
        </trans-unit>
        <trans-unit id="0a49f83912b71e85fae4e76c66882324a13f1211" translate="yes" xml:space="preserve">
          <source>How do I know which assertions change the subject and which keep it the same?</source>
          <target state="translated">どの主張が主語を変えて、どの主張が変わらないのかを知るにはどうすればいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="00f9c3604f08898f1e08ed93bce13a0d1411a6c2" translate="yes" xml:space="preserve">
          <source>How its architecture differs from Selenium</source>
          <target state="translated">Seleniumとのアーキテクチャの違い</target>
        </trans-unit>
        <trans-unit id="132403fdba9d78b8045faf2e2c5cc508eb092a07" translate="yes" xml:space="preserve">
          <source>How load-balancing of tests works</source>
          <target state="translated">テストの負荷分散の仕組み</target>
        </trans-unit>
        <trans-unit id="bbf98f9c894056a391916093f06903fc49846d50" translate="yes" xml:space="preserve">
          <source>How timeouts are applied to commands</source>
          <target state="translated">コマンドにタイムアウトをどのように適用するか</target>
        </trans-unit>
        <trans-unit id="da8fae9447fe19ebdeb8ae975828566266254e85" translate="yes" xml:space="preserve">
          <source>How to address some situations of flaky tests</source>
          <target state="translated">薄っぺらいテストのある状況への対処法</target>
        </trans-unit>
        <trans-unit id="260a7f6e2a1ad10ec946c518fa4beb0f2d672e80" translate="yes" xml:space="preserve">
          <source>How to avoid using Cypress commands inside the interceptor</source>
          <target state="translated">インターセプター内でサイプレスコマンドを使用しない方法</target>
        </trans-unit>
        <trans-unit id="6e71c52eead19906a2492efc4bd5b92583210cdd" translate="yes" xml:space="preserve">
          <source>How to configure Cypress in various CI Providers</source>
          <target state="translated">様々なCIプロバイダでCypressを設定する方法</target>
        </trans-unit>
        <trans-unit id="9a56bc7c5d7b1ecf09734a8224808953e3b05f11" translate="yes" xml:space="preserve">
          <source>How to configure Cypress to fit your app</source>
          <target state="translated">アプリに合わせてCypressを設定する方法</target>
        </trans-unit>
        <trans-unit id="a0b378f73f0f4518bb983f109061a3ff22f297b2" translate="yes" xml:space="preserve">
          <source>How to control time for deterministically testing code that is time-dependent</source>
          <target state="translated">時間に依存するコードを決定論的にテストするための時間を制御する方法</target>
        </trans-unit>
        <trans-unit id="02b3fb7ffd5593e72dfb603e73bb9a57a96752e2" translate="yes" xml:space="preserve">
          <source>How to deal with async commands</source>
          <target state="translated">非同期コマンドの扱い方</target>
        </trans-unit>
        <trans-unit id="f66605d25a8bfd0d115bd6d1b42ccc4f86c7805d" translate="yes" xml:space="preserve">
          <source>How to ensure the application is in consistent state before capturing an image</source>
          <target state="translated">画像をキャプチャする前にアプリケーションが一貫した状態であることを確認する方法</target>
        </trans-unit>
        <trans-unit id="77bd6674b1750fe89d903d4f784bcdb5cf958b52" translate="yes" xml:space="preserve">
          <source>How to group test runs</source>
          <target state="translated">テストランをグループ化する方法</target>
        </trans-unit>
        <trans-unit id="dc6052655c56f0bae7ec0d677c90f4b9ce3e2160" translate="yes" xml:space="preserve">
          <source>How to group your tests.</source>
          <target state="translated">テストのグループ分けの仕方</target>
        </trans-unit>
        <trans-unit id="70c94122258de8649c8010375de8724b7add48ec" translate="yes" xml:space="preserve">
          <source>How to implement visual diffing yourself or using 3rd party service</source>
          <target state="translated">ビジュアルディファレンシングを自分で実装する方法やサードパーティのサービスを利用する方法</target>
        </trans-unit>
        <trans-unit id="7d7acff91f253ba335e9f67889ba5612c75bc9a0" translate="yes" xml:space="preserve">
          <source>How to install Cypress via &lt;code&gt;npm&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; 経由でサイプレスをインストールする方法</target>
        </trans-unit>
        <trans-unit id="ad67610bccbd4f212f29cc9823f64e01be5c5db9" translate="yes" xml:space="preserve">
          <source>How to install Cypress via direct download</source>
          <target state="translated">Cypressを直接ダウンロードしてインストールする方法</target>
        </trans-unit>
        <trans-unit id="533e17da057d6e632957f697a3cc32fdb0e3d64c" translate="yes" xml:space="preserve">
          <source>How to instrument your application code</source>
          <target state="translated">アプリケーションコードをインストルメントする方法</target>
        </trans-unit>
        <trans-unit id="d56068d31cf6be5e49f64d6297eef0d2c9a5c0fc" translate="yes" xml:space="preserve">
          <source>How to launch other browsers</source>
          <target state="translated">他のブラウザを起動する方法</target>
        </trans-unit>
        <trans-unit id="319e419a30937e110cd5ba93f243dacd330155de" translate="yes" xml:space="preserve">
          <source>How to manually capture your own screenshot</source>
          <target state="translated">自分のスクリーンショットを手動でキャプチャする方法</target>
        </trans-unit>
        <trans-unit id="a12165bfb64939baa28efd2ae15c75035db16e20" translate="yes" xml:space="preserve">
          <source>How to organize your test and support files.</source>
          <target state="translated">テストファイルやサポートファイルの整理方法</target>
        </trans-unit>
        <trans-unit id="2180548f9b8e093d6ab6325745bf5a2b4b9e389a" translate="yes" xml:space="preserve">
          <source>How to overwrite interceptors</source>
          <target state="translated">インターセプターを上書きする方法</target>
        </trans-unit>
        <trans-unit id="214aead2e6bb7098443cbbceee1088718ba01f86" translate="yes" xml:space="preserve">
          <source>How to parallelize test runs</source>
          <target state="translated">テスト実行を並列化する方法</target>
        </trans-unit>
        <trans-unit id="41c573870ffb28ced2e266b4948b9efd24a1969b" translate="yes" xml:space="preserve">
          <source>How to record tests to the Cypress Dashboard</source>
          <target state="translated">Cypress ダッシュボードにテストを記録する方法</target>
        </trans-unit>
        <trans-unit id="2e449514a73dc442141c813cdcd8a5da9ed1a7ed" translate="yes" xml:space="preserve">
          <source>How to record your tests to the Dashboard</source>
          <target state="translated">ダッシュボードにテストを記録する方法</target>
        </trans-unit>
        <trans-unit id="1ab12406f23cc0752954752e43e98eaa8e51f38a" translate="yes" xml:space="preserve">
          <source>How to run Cypress from the command line</source>
          <target state="translated">コマンドラインからCypressを実行する方法</target>
        </trans-unit>
        <trans-unit id="ba28329c678d85633b092a0e1760fc11414f7f6b" translate="yes" xml:space="preserve">
          <source>How to run Cypress tests in Continuous Integration</source>
          <target state="translated">継続的インテグレーションでCypressテストを実行する方法</target>
        </trans-unit>
        <trans-unit id="52686d06a85bb4796e486179d006eb003335ea55" translate="yes" xml:space="preserve">
          <source>How to run commands</source>
          <target state="translated">コマンドの実行方法</target>
        </trans-unit>
        <trans-unit id="15f76dee5fe4b6fb3ccb13b71d9ffb59de2c7579" translate="yes" xml:space="preserve">
          <source>How to run tests in parallel on CI</source>
          <target state="translated">CIでテストを並列に実行する方法</target>
        </trans-unit>
        <trans-unit id="3702157431f18e379d0ee0eedb4513a9e9488381" translate="yes" xml:space="preserve">
          <source>How to save the coverage information collected during end-to-end and unit tests</source>
          <target state="translated">エンドツーエンドとユニットテストで収集したカバレッジ情報を保存する方法</target>
        </trans-unit>
        <trans-unit id="a1e454e6bb2abae199bd697d732b7d4e29a52ac6" translate="yes" xml:space="preserve">
          <source>How to solve this:</source>
          <target state="translated">どうやって解決するのか。</target>
        </trans-unit>
        <trans-unit id="a36e8c559ce303daa9e93c0b472f314af94760dd" translate="yes" xml:space="preserve">
          <source>How to specify which spec files to run</source>
          <target state="translated">実行するspecファイルを指定する方法</target>
        </trans-unit>
        <trans-unit id="ac500decf432728061d52221cabcb835b49d2f52" translate="yes" xml:space="preserve">
          <source>How to start testing a new project in Cypress.</source>
          <target state="translated">Cypressで新しいプロジェクトのテストを開始する方法。</target>
        </trans-unit>
        <trans-unit id="766c761536f469ed6b1c06015fa4eda589687e14" translate="yes" xml:space="preserve">
          <source>How to troubleshoot issues with Cypress itself</source>
          <target state="translated">サイプレス自体の問題をトラブルシューティングする方法</target>
        </trans-unit>
        <trans-unit id="99400be5514ca12cc3021d96a8b553856f2a4257" translate="yes" xml:space="preserve">
          <source>How to use Aliases for objects, elements and routes</source>
          <target state="translated">オブジェクト、要素、ルートのエイリアスの使い方</target>
        </trans-unit>
        <trans-unit id="54423de5a4a7aee9ab14f3d88c1c523c6c7a31c5" translate="yes" xml:space="preserve">
          <source>How to use Aliases to refer back to XHR requests and wait on them</source>
          <target state="translated">XHRリクエストを参照して待つためのAliasesの使い方</target>
        </trans-unit>
        <trans-unit id="42e7d8607c5b0624835a1e06031c28f5d6b15ff4" translate="yes" xml:space="preserve">
          <source>How to use Fixtures to reuse XHR responses</source>
          <target state="translated">XHRレスポンスを再利用するためのフィクスチャの使い方</target>
        </trans-unit>
        <trans-unit id="2897439c203386b13d5a87c7bec5f3007b9be90b" translate="yes" xml:space="preserve">
          <source>How to use spies for asserting that code was called without interfering with its execution</source>
          <target state="translated">コードの実行を妨げることなくコードが呼び出されたことを保証するためにスパイを使用する方法</target>
        </trans-unit>
        <trans-unit id="a7049b5ec4b6c139dd416508c50b29993e7f16c1" translate="yes" xml:space="preserve">
          <source>How to use stubs for asserting that code was called but preventing it from executing</source>
          <target state="translated">コードが呼び出されたが実行されないようにするためにスタブを使用する方法</target>
        </trans-unit>
        <trans-unit id="3aa5b629cbffa563a339dd2d2dc71c6721c9ec3f" translate="yes" xml:space="preserve">
          <source>How to use the Selector Playground for targeting your page elements</source>
          <target state="translated">ページ要素のターゲティングにセレクタのプレイグラウンドを使う方法</target>
        </trans-unit>
        <trans-unit id="94d1dd7f0cc3137fbd7a7ae32f865d7c0cc198b3" translate="yes" xml:space="preserve">
          <source>How to use the code coverage reports to guide writing tests</source>
          <target state="translated">テストの書き方をガイドするコードカバレッジレポートの使い方</target>
        </trans-unit>
        <trans-unit id="60ce170130b69c84ea581cd6de78335987bef241" translate="yes" xml:space="preserve">
          <source>How to version and run Cypress via &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; を介してサイプレスをバージョン管理および実行する方法</target>
        </trans-unit>
        <trans-unit id="0888c50c0d8d24b5720ec4abaee88531f08b3281" translate="yes" xml:space="preserve">
          <source>How to write declarative tests that resist flake</source>
          <target state="translated">フレークに抵抗する宣言型テストの書き方</target>
        </trans-unit>
        <trans-unit id="033b5a2e9eaf93b31bc883d97b83f6fd10b16e3d" translate="yes" xml:space="preserve">
          <source>How visual testing complements functional testing</source>
          <target state="translated">ビジュアルテストが機能テストをどのように補完するか</target>
        </trans-unit>
        <trans-unit id="02f0a3edfc8f45214f63d9154a007e7cf395f82b" translate="yes" xml:space="preserve">
          <source>How will we get access to &lt;code&gt;text&lt;/code&gt;?</source>
          <target state="translated">どうすれば &lt;code&gt;text&lt;/code&gt; にアクセスできますか？</target>
        </trans-unit>
        <trans-unit id="4605d5b8f0d728b0e3cee5dbb5634635d807da5a" translate="yes" xml:space="preserve">
          <source>How you can bypass these checks and force events</source>
          <target state="translated">これらのチェックをバイパスしてイベントを強制的に行う方法</target>
        </trans-unit>
        <trans-unit id="151c3817bac809b932840aefb9d1e0a7f9b85b8e" translate="yes" xml:space="preserve">
          <source>How you choose to edit the configuration is up to you. You don&amp;rsquo;t have to read off of the file system - you could store them all in memory inside of your &lt;code&gt;pluginsFile&lt;/code&gt; if you wanted.</source>
          <target state="translated">構成の編集方法はあなた次第です。ファイルシステムを読み取る必要はありません。必要に応じて、すべてを &lt;code&gt;pluginsFile&lt;/code&gt; 内のメモリに保存できます。</target>
        </trans-unit>
        <trans-unit id="02502caf66d61fb2be12437276c4b60307546155" translate="yes" xml:space="preserve">
          <source>How you choose to organize multiple configurations and sets of environment variables is up to you. You don&amp;rsquo;t even have to read off of the file system - you could store them all in memory inside of your &lt;code&gt;pluginsFile&lt;/code&gt; if you wanted to.</source>
          <target state="translated">複数の構成と環境変数のセットをどのように整理するかは、あなた次第です。ファイルシステムを読み取る必要もありません。必要に応じて、 &lt;code&gt;pluginsFile&lt;/code&gt; 内のすべてのメモリに保存できます。</target>
        </trans-unit>
        <trans-unit id="fd493ca6987aa63de9b538e19f69d051270f9fb9" translate="yes" xml:space="preserve">
          <source>How you choose to organize your configuration and environment variables is up to you.</source>
          <target state="translated">設定と環境変数をどのように整理するかは、あなた次第です。</target>
        </trans-unit>
        <trans-unit id="461e2656ef40aa6157b9664a2d21d9e574e08ed1" translate="yes" xml:space="preserve">
          <source>How you should rewrite those tests:</source>
          <target state="translated">それらのテストをどのように書き換えるべきか。</target>
        </trans-unit>
        <trans-unit id="d20898a161ddbf96b9db433f2d38a63402c62cb1" translate="yes" xml:space="preserve">
          <source>However - there is likely still a balance here where &lt;strong&gt;both&lt;/strong&gt; strategies are valid (and you should likely do them).</source>
          <target state="translated">ただし、&lt;strong&gt;両方の&lt;/strong&gt;戦略が有効である場合は、まだバランスが取れている可能性があります（そうする必要がある場合もあります）。</target>
        </trans-unit>
        <trans-unit id="cececcb38a71e217c8c57055fb4e98ffd9e27176" translate="yes" xml:space="preserve">
          <source>However between tests, when a new test runs, the previous configuration is restored to a clean state. No configuration leaks between tests.</source>
          <target state="translated">しかし、テストの間に新しいテストが実行されると、以前の設定はクリーンな状態に復元されます。テスト間で構成が漏れることはありません。</target>
        </trans-unit>
        <trans-unit id="c087602b2a65d508bc58fee8aea5154febb22693" translate="yes" xml:space="preserve">
          <source>However it &lt;strong&gt;is possible&lt;/strong&gt; to synchronize Cypress with another back end process - whether it is Selenium or Puppeteer to drive a 2nd open browser. We have actually seen this work together quite nicely!</source>
          <target state="translated">ただし、サイプレスを別のバックエンドプロセスと同期させること&lt;strong&gt;は可能&lt;/strong&gt;です。2番目に開いているブラウザを駆動するのがSeleniumでもPuppeteerでもかまいません。私たちは実際にこの作品を一緒に見事に見ています！</target>
        </trans-unit>
        <trans-unit id="7a7354c68d1ef513a1d7a089414b2acca1f54421" translate="yes" xml:space="preserve">
          <source>However, Cypress additionally handles situations where a child descendent is clicked inside of a focusable parent, but actually isn&amp;rsquo;t visually inside the parent (per the CSS Object Model). In those cases if no focusable parent is found the window is given focus instead (which matches real browser behavior).</source>
          <target state="translated">ただし、サイプレスは、子孫がフォーカス可能な親の内側でクリックされた状況をさらに処理しますが、実際には（CSSオブジェクトモデルに従って）親の内側ではありません。これらの場合、フォーカス可能な親が見つからない場合は、ウィンドウに代わりにフォーカスが与えられます（実際のブラウザーの動作と一致します）。</target>
        </trans-unit>
        <trans-unit id="f0ed85983e964dde15e6f765dec196a041a3843f" translate="yes" xml:space="preserve">
          <source>However, if you&amp;rsquo;re running this script locally you&amp;rsquo;ll have to do a bit more work to collect the backgrounded PID and then kill it after &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">ただし、このスクリプトをローカルで実行している場合は、バックグラウンドのPIDを収集するためにもう少し作業を行い、 &lt;code&gt;cypress run&lt;/code&gt; 後にそれを強制終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="3914ed8564f7fd77a505db78605705cf5c194a64" translate="yes" xml:space="preserve">
          <source>However, in most modern applications these days - when the &lt;code&gt;load&lt;/code&gt; event occurs, usually nothing has rendered on the screen. It is usually at this moment that your scripts begin to load dynamic content and begin to render asynchronously.</source>
          <target state="translated">ただし、最近のほとんどのアプリケーションでは、 &lt;code&gt;load&lt;/code&gt; イベントが発生したときに、画面に何も表示されていません。通常、この時点で、スクリプトが動的コンテンツの読み込みを開始し、非同期でレンダリングを開始します。</target>
        </trans-unit>
        <trans-unit id="282b28b735370a1c4b9379de32a065f5c2895985" translate="yes" xml:space="preserve">
          <source>However, passing &lt;code&gt;{ force: true }&lt;/code&gt; to &lt;code&gt;.select()&lt;/code&gt; will not override the actionability checks for selecting a disabled &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; or an option within a disabled &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt;. See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/107&quot;&gt;this issue&lt;/a&gt; for more detail.</source>
          <target state="translated">ただし、 &lt;code&gt;{ force: true }&lt;/code&gt; を &lt;code&gt;.select()&lt;/code&gt; に渡しても、無効な &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; または無効な &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 内のオプションを選択するためのアクション可能性チェックは上書きされません。詳細については、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/107&quot;&gt;この問題&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e068c156b2cb3f2a2e53be32d569f5fda08694fe" translate="yes" xml:space="preserve">
          <source>However, some chainers change the subject. In the example below, &lt;code&gt;.and()&lt;/code&gt; yields the string &lt;code&gt;sans-serif&lt;/code&gt; because the chainer &lt;code&gt;have.css, 'font-family'&lt;/code&gt; changes the subject.</source>
          <target state="translated">ただし、一部のチェーン業者は件名を変更します。次の例では、 &lt;code&gt;.and()&lt;/code&gt; は文字列 &lt;code&gt;sans-serif&lt;/code&gt; を生成します。これは、chainerの &lt;code&gt;have.css, 'font-family'&lt;/code&gt; が件名を変更するためです。</target>
        </trans-unit>
        <trans-unit id="2b1f8dc2a11c7c62c74c4284423b8a751303d2c0" translate="yes" xml:space="preserve">
          <source>However, some chainers change the subject. In the example below, the second &lt;code&gt;.should()&lt;/code&gt; yields the string &lt;code&gt;sans-serif&lt;/code&gt; because the chainer &lt;code&gt;have.css, 'font-family'&lt;/code&gt; changes the subject.</source>
          <target state="translated">ただし、一部のチェーン業者は件名を変更します。次の例では、2番目の &lt;code&gt;.should()&lt;/code&gt; は文字列 &lt;code&gt;sans-serif&lt;/code&gt; を生成します。これは、chainerの &lt;code&gt;have.css, 'font-family'&lt;/code&gt; が件名を変更するためです。</target>
        </trans-unit>
        <trans-unit id="c552e3bdb8492fc795ec03270d9e2edd9a83a4ae" translate="yes" xml:space="preserve">
          <source>However, the truth is, Cypress is exposing a &lt;em&gt;security vulnerability&lt;/em&gt; in your application, and you &lt;em&gt;want&lt;/em&gt; it to fail in Cypress.</source>
          <target state="translated">しかし、真実は、サイプレスがアプリケーションの&lt;em&gt;セキュリティの脆弱性&lt;/em&gt;を公開しており、サイプレスでそれを失敗さ&lt;em&gt;せたいという&lt;/em&gt;ことです。</target>
        </trans-unit>
        <trans-unit id="ece4690dc1b2e81429250810375309fb4c1c11b3" translate="yes" xml:space="preserve">
          <source>However, this is really the same question as asking to do conditional testing just wrapped up in a slightly different implementation detail.</source>
          <target state="translated">しかし、これは本当に、実装の詳細を少し変えただけで、条件付きテストをするようにお願いしているのと同じ質問です。</target>
        </trans-unit>
        <trans-unit id="98a86db69b9f4f568d2e36b4b993880fd23e8567" translate="yes" xml:space="preserve">
          <source>However, this pattern can be used and abused. Let&amp;rsquo;s not forget - writing Cypress tests is &lt;strong&gt;JavaScript&lt;/strong&gt;, and it&amp;rsquo;s often more efficient to write a function for repeatable behavior that&amp;rsquo;s specific to only &lt;strong&gt;a single spec file&lt;/strong&gt;.</source>
          <target state="translated">ただし、このパターンは使用および悪用される可能性があります。忘れないでください-サイプレステストの記述は&lt;strong&gt;JavaScript&lt;/strong&gt;であり&lt;strong&gt;、単一のスペックファイル&lt;/strong&gt;のみに固有の反復可能な動作のための関数を記述する方が効率的であることがよくあり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8d9ad91ce02b94a8159554d3425d61b0345d6e1f" translate="yes" xml:space="preserve">
          <source>However, this pattern can be used and abused. Let&amp;rsquo;s not forget - writing Cypress tests is just &lt;strong&gt;JavaScript&lt;/strong&gt;, and it&amp;rsquo;s often much easier just to write a simple function for repeatable behavior that&amp;rsquo;s specific to only &lt;strong&gt;a single spec file&lt;/strong&gt;.</source>
          <target state="translated">ただし、このパターンは使用および悪用される可能性があります。忘れないでください-サイプレステストの記述は単なる&lt;strong&gt;JavaScript&lt;/strong&gt;であり、多くの場合&lt;strong&gt;、単一のスペックファイル&lt;/strong&gt;のみに固有の反復可能な動作のための単純な関数を記述する方がはるかに簡単&lt;strong&gt;です&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="cfea422d4e353dbc7cc51c67487cf026e7b09f3c" translate="yes" xml:space="preserve">
          <source>However, you &lt;strong&gt;do not&lt;/strong&gt; need to use environment variables to point to the origin and domain under test. Use &lt;code&gt;baseUrl&lt;/code&gt; instead of environment variables.</source>
          <target state="translated">ただし、テスト中のオリジンとドメインを指すために環境変数を使用する必要&lt;strong&gt;は&lt;/strong&gt;あり&lt;strong&gt;ません&lt;/strong&gt;。環境変数の代わりに &lt;code&gt;baseUrl&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="5377a652000c5e4f2f6018179613a7ceec5d4e9e" translate="yes" xml:space="preserve">
          <source>However, you should &lt;strong&gt;never&lt;/strong&gt; use your UI or visit a 3rd party site when testing because:</source>
          <target state="translated">ただし、次の理由により、テスト中にUIを使用したり、サードパーティのサイトにアクセスしたりし&lt;strong&gt;ないで&lt;/strong&gt;ください。</target>
        </trans-unit>
        <trans-unit id="5d64a118b93be94aed704de801aa20887064339c" translate="yes" xml:space="preserve">
          <source>Href Shorthand</source>
          <target state="translated">Href略号</target>
        </trans-unit>
        <trans-unit id="040c22753068d31072a21010509a9ec7b7bca81b" translate="yes" xml:space="preserve">
          <source>Human-readable display name for the browser.</source>
          <target state="translated">ブラウザの人間が読める表示名。</target>
        </trans-unit>
        <trans-unit id="b3c199e83de5b1cdbb7e9d488cfe670ba8306ffa" translate="yes" xml:space="preserve">
          <source>I am trying to write dynamic tests that do something different based on the text on the page.</source>
          <target state="translated">ページ上のテキストに基づいて何か違うことをする動的テストを書こうとしています。</target>
        </trans-unit>
        <trans-unit id="a4ff058f4f8d43027ba07b7a2b8347f5eac0ac6b" translate="yes" xml:space="preserve">
          <source>I want to automatically find all &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; elements and based on which ones I find, I want to check that each link works.</source>
          <target state="translated">すべての &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 要素を自動的に検索し、どの要素に基づいて、各リンクが機能するかを確認したいと思います。</target>
        </trans-unit>
        <trans-unit id="1f632660ea9c7f61c79bdcc98d1bbcd62192d3b6" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m trying to test a chat application. Can I run more than one browser at a time with Cypress?</source>
          <target state="translated">チャットアプリケーションをテストしようとしています。サイプレスで一度に複数のブラウザを実行できますか？</target>
        </trans-unit>
        <trans-unit id="e373cdbb97766e004ffd13cfeb8d5ad0a3558402" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;, but always expects an array-like structure as its subject.</source>
          <target state="translated">&lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;と同じですが、常にサブジェクトとして配列のような構造を想定しています。</target>
        </trans-unit>
        <trans-unit id="9d2c7063088793c055fe015d3841d0cc2df8e788" translate="yes" xml:space="preserve">
          <source>Identification</source>
          <target state="translated">Identification</target>
        </trans-unit>
        <trans-unit id="4073341c254aad93eaa68ffa307f829ae4cdba47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cy.hover()&lt;/code&gt; is used, an error will display and redirect you to this page.</source>
          <target state="translated">場合 &lt;code&gt;cy.hover()&lt;/code&gt; が使用され、エラーが表示され、このページにリダイレクトされます。</target>
        </trans-unit>
        <trans-unit id="e7c07ae5597941ec98ed24852c7197dc22dc1c60" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cy.intercept()&lt;/code&gt; provides a response object, or a fixture, or calls &lt;code&gt;req.reply()&lt;/code&gt; then the request will NOT go to the server, and instead will be mocked from the test.</source>
          <target state="translated">場合 &lt;code&gt;cy.intercept()&lt;/code&gt; は応答オブジェクト、または取り付け具、または通話を提供 &lt;code&gt;req.reply()&lt;/code&gt; リクエストは、サーバーに行くことはありません、代わりにテストから嘲笑されます。</target>
        </trans-unit>
        <trans-unit id="80ab8047683c551b55320e61086e9cc54a10edca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.reply()&lt;/code&gt; is not explicitly called inside of a route callback, requests will pass to the next route callback until none are left.</source>
          <target state="translated">ルートコールバック内で &lt;code&gt;req.reply()&lt;/code&gt; が明示的に呼び出されていない場合、リクエストは、何も残らなくなるまで次のルートコールバックに渡されます。</target>
        </trans-unit>
        <trans-unit id="e7f1d4be4f9f7630bd0da38ea3bd8628e0fb96a4" translate="yes" xml:space="preserve">
          <source>If Cypress cannot determine the host it will throw an error.</source>
          <target state="translated">Cypress がホストを判断できない場合、エラーをスローします。</target>
        </trans-unit>
        <trans-unit id="108195455e83f85b78ae28041a8ca9ef29acc92e" translate="yes" xml:space="preserve">
          <source>If I had error handling, I could just try to find X and if X fails go find Y</source>
          <target state="translated">エラー処理があれば、X を見つけて、X が失敗したら Y を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="b9dc667d39beee3b0041eaa0efa4df413c650f0c" translate="yes" xml:space="preserve">
          <source>If I should always use data attributes, then when should I use &lt;code&gt;cy.contains()&lt;/code&gt;?</source>
          <target state="translated">常にデータ属性を使用する必要がある場合、 &lt;code&gt;cy.contains()&lt;/code&gt; を使用する必要がありますか？</target>
        </trans-unit>
        <trans-unit id="b970ebbac48b6821d2a09c1467c1cf6efb6dece7" translate="yes" xml:space="preserve">
          <source>If X, then Y, else Z</source>
          <target state="translated">XならばY、そうでなければZ</target>
        </trans-unit>
        <trans-unit id="7b119c466fcbd63e66770502c44eb530db83e46c" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;child&lt;/em&gt; of the element is covering it - that&amp;rsquo;s okay. In fact we&amp;rsquo;ll automatically issue the events we fire to that child.</source>
          <target state="translated">場合は&lt;em&gt;、子&lt;/em&gt;要素のは、それをカバーしている-それは大丈夫です。実際、その子に発生させるイベントを自動的に発行します。</target>
        </trans-unit>
        <trans-unit id="2bec4ecf6de25aec67c10ab97d2a2a2f9be96f78" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;&lt;code&gt;StaticResponse&lt;/code&gt; object&lt;/strong&gt; is passed, requests to the route will be fulfilled with a response using the values supplied in the &lt;code&gt;StaticResponse&lt;/code&gt;. A &lt;code&gt;StaticResponse&lt;/code&gt; can define the body of the response, as well as the headers, HTTP status code, and more. See &lt;a href=&quot;#With-a-StaticResponse-object&quot;&gt;Stubbing a response with a `StaticResponse` object&lt;/a&gt; for an example of how this is used.</source>
          <target state="translated">場合&lt;strong&gt; &lt;code&gt;StaticResponse&lt;/code&gt; のオブジェクトが&lt;/strong&gt;渡され、ルートへの要求がで供給された値使用して応答を成就されます &lt;code&gt;StaticResponse&lt;/code&gt; を。 A &lt;code&gt;StaticResponse&lt;/code&gt; は、応答のボディ、ならびにヘッダ、HTTPステータスコード、などを定義することができます。これがどのように使用されるかの例については&lt;a href=&quot;#With-a-StaticResponse-object&quot;&gt;、 `StaticResponse`オブジェクト&lt;/a&gt;を使用した応答のスタブを参照してください。</target>
        </trans-unit>
        <trans-unit id="0616b70dba24f254be973c7ed75e89bd4c3a86dd" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;function callback&lt;/strong&gt; is passed, it will be called whenever a request matching this route is received, with the first parameter being the request object. From inside the callback, you can modify the outgoing request, send a response, access the real response, and much more. See &lt;a href=&quot;#Intercepting-a-request&quot;&gt;Intercepting a request&lt;/a&gt; and &lt;a href=&quot;#Intercepting-a-response&quot;&gt;Intercepting a response&lt;/a&gt; for examples of dynamic interception.</source>
          <target state="translated">場合&lt;strong&gt;関数コールバックが&lt;/strong&gt;渡され、このルートに一致する要求が受信されるたびに、それは最初のパラメータがリクエストオブジェクトであると、呼び出されます。コールバック内から、送信リクエストの変更、レスポンスの送信、実際のレスポンスへのアクセスなどを行うことができます。参照&lt;a href=&quot;#Intercepting-a-request&quot;&gt;要求をインターセプト&lt;/a&gt;し、&lt;a href=&quot;#Intercepting-a-response&quot;&gt;応答インターセプト&lt;/a&gt;ダイナミック傍受の例のために。</target>
        </trans-unit>
        <trans-unit id="3738a635c5ba991abf5ef63240778cc5a70259cd" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed, requests to the route will be fulfilled with that string as the body. Passing &lt;code&gt;&quot;foo&quot;&lt;/code&gt; is equivalent to using a &lt;code&gt;StaticResponse&lt;/code&gt; object with &lt;code&gt;{ body: &quot;foo&quot; }&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;strong&gt;文字列が&lt;/strong&gt;渡され、ルートへのリクエストは、本体としてその文字列で満たされます。 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 渡すことは、 &lt;code&gt;{ body: &quot;foo&quot; }&lt;/code&gt; &lt;code&gt;StaticResponse&lt;/code&gt; オブジェクトを使用することと同じです。</target>
        </trans-unit>
        <trans-unit id="c3778295f0cff9ca75237cdd8fe3964feb4eece1" translate="yes" xml:space="preserve">
          <source>If a Promise is returned from the route callback, it will be awaited before continuing with the request.</source>
          <target state="translated">ルートコールバックからプロミスが返された場合は、リクエストを続行する前に待機します。</target>
        </trans-unit>
        <trans-unit id="afb2daad94f94302177f187ada89621da51cb213" translate="yes" xml:space="preserve">
          <source>If a Promise is returned from the route callback, it will be awaited before sending the response to the browser.</source>
          <target state="translated">ルートコールバックから Promise が返された場合は、ブラウザにレスポンスを送信する前に待機します。</target>
        </trans-unit>
        <trans-unit id="154c454bda4162e086691c63fa24404ceb70d1f2" translate="yes" xml:space="preserve">
          <source>If a URL is passed to &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; containing percent-encoded characters, we now display a warning explaining that &lt;code&gt;cy.route()&lt;/code&gt; expects a decoded URL. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2372&quot;&gt;#2372&lt;/a&gt;.</source>
          <target state="translated">URLが渡された場合&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;パーセントエンコード文字を含む、私たちは今、その説明警告表示 &lt;code&gt;cy.route()&lt;/code&gt; デコードされたURLを期待しています。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2372&quot;&gt;＃2372&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1753f8abfe2054727c73c297a51073fe562e58a0" translate="yes" xml:space="preserve">
          <source>If a page loads after a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; times out it will no longer cause an exception in the &lt;code&gt;onBeforeLoad&lt;/code&gt; handler.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; が&lt;/a&gt;タイムアウトした後にページが読み込まれると、 &lt;code&gt;onBeforeLoad&lt;/code&gt; ハンドラーで例外が発生しなくなります。</target>
        </trans-unit>
        <trans-unit id="d109a402f7aa1766081593fb085e44ea657a4ced" translate="yes" xml:space="preserve">
          <source>If a request doesn&amp;rsquo;t match any route then the behavior depends on the value of the &lt;code&gt;force404&lt;/code&gt; option on the &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">リクエストがどのルートとも一致しない場合、動作は&lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;force404&lt;/code&gt; オプションの値によって異なります。</target>
        </trans-unit>
        <trans-unit id="b0100c8e4ddc90a7aff71eada8600b58f1b7f3f4" translate="yes" xml:space="preserve">
          <source>If a site&amp;rsquo;s &lt;code&gt;content-type&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt; or cannot be determined during &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, we now look at the content of the site and evaluate whether it looks like HTML. If it does look like HTML we no longer error and continue as if it the site&amp;rsquo;s &lt;code&gt;content-type&lt;/code&gt; is &lt;code&gt;text/html&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1727&quot;&gt;#1727&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/773&quot;&gt;#773&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;#3101&lt;/a&gt;.</source>
          <target state="translated">サイトの &lt;code&gt;content-type&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;undefined&lt;/code&gt; または&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;で判別できない場合、サイトのコンテンツを調べ、HTMLのように見えるかどうかを評価します。HTMLのように見えても、エラーは発生せず、サイトの &lt;code&gt;content-type&lt;/code&gt; が &lt;code&gt;text/html&lt;/code&gt; であるかのように続行されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1727&quot;&gt;＃1727年&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/773&quot;&gt;＃773 &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;＃3101&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="534d9f03898c74831b7e79a73bb8c268fe8940d1" translate="yes" xml:space="preserve">
          <source>If an &lt;strong&gt;object with no &lt;code&gt;StaticResponse&lt;/code&gt; keys&lt;/strong&gt; is passed, it will be sent as a JSON response body. For example, passing &lt;code&gt;{ foo: 'bar' }&lt;/code&gt; is equivalent to passing &lt;code&gt;{ body: { foo: 'bar' } }&lt;/code&gt;.</source>
          <target state="translated">場合&lt;strong&gt;がないとオブジェクト &lt;code&gt;StaticResponse&lt;/code&gt; のキーが&lt;/strong&gt;渡され、それはJSONレスポンスボディとして送信されます。たとえば、 &lt;code&gt;{ foo: 'bar' }&lt;/code&gt; を渡すことは、 &lt;code&gt;{ body: { foo: 'bar' } }&lt;/code&gt; を渡すことと同じです。</target>
        </trans-unit>
        <trans-unit id="1162ad9192a81bb19247dc40e2267035c1cb5b3f" translate="yes" xml:space="preserve">
          <source>If an application takes a while to start, it might &amp;ldquo;signal&amp;rdquo; its readiness by setting a property that Cypress can wait for.</source>
          <target state="translated">アプリケーションの起動に時間がかかる場合、サイプレスが待機できるプロパティを設定することで、準備が整ったことを「通知」する場合があります。</target>
        </trans-unit>
        <trans-unit id="003378de06f395a1df16b48dcbbd88dc955ebc3d" translate="yes" xml:space="preserve">
          <source>If an error occurs during &lt;code&gt;cypress verify&lt;/code&gt;, we now kill the verification process after 10 seconds and print the error message. This should prevent some situations where Cypress would hang during installation or verification and never exit. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/819&quot;&gt;#819&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress verify&lt;/code&gt; 中にエラーが発生した場合、10秒後に検証プロセスを強制終了し、エラーメッセージを出力します。これにより、インストールまたは検証中にサイプレスがハングし、終了しないという状況が回避されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/819&quot;&gt;＃819を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="87492befc664d37679d463959dddbe8a5122f9f1" translate="yes" xml:space="preserve">
          <source>If an uppercase and a lowercase version of the proxy settings are supplied (for example, &lt;code&gt;HTTP_PROXY&lt;/code&gt; and &lt;code&gt;http_proxy&lt;/code&gt; are both set), the lowercase variable will be preferred.</source>
          <target state="translated">プロキシ設定の大文字と小文字のバージョンが指定されている場合（たとえば、 &lt;code&gt;HTTP_PROXY&lt;/code&gt; と &lt;code&gt;http_proxy&lt;/code&gt; の両方が設定されている場合）、小文字の変数が優先されます。</target>
        </trans-unit>
        <trans-unit id="b59523ab5ea3b305436d65b83bac76bf92dbb554" translate="yes" xml:space="preserve">
          <source>If any of an element&amp;rsquo;s parent&amp;rsquo;s overflow is &amp;lsquo;hidden&amp;rsquo;, we now calculate if the element is outside of the boundaries of that parent element and validate visibility assertions accordingly. This may cause some tests that were previously passing to now accurately fail. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/410&quot;&gt;#410&lt;/a&gt;.</source>
          <target state="translated">要素の親のオーバーフローのいずれかが「非表示」の場合、要素がその親要素の境界外にあるかどうかを計算し、それに応じて可視性アサーションを検証します。これにより、以前は合格していたいくつかのテストが正確に失敗する場合があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/410&quot;&gt;＃410を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3509bab7a88736566e6c11e7f82d6711b1b4bb77" translate="yes" xml:space="preserve">
          <source>If built-in assertions are not enough, you can easily write your own assertion function and pass it as a callback to the &lt;code&gt;.should()&lt;/code&gt; command. Cypress will automatically &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; the callback function until it passes or the command times out. See the &lt;a href=&quot;../../api/commands/should#Function&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">組み込みのアサーションでは不十分な場合は、独自のアサーション関数を簡単に記述し、それを &lt;code&gt;.should()&lt;/code&gt; コマンドへのコールバックとして渡すことができます。サイプレスは、コールバック関数が成功するか、コマンドがタイムアウトするまで、コールバック関数を自動的に&lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;再試行&lt;/a&gt;します。&lt;a href=&quot;../../api/commands/should#Function&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d4db028f339ba6881ac24e86ae72bf1514a2f9f7" translate="yes" xml:space="preserve">
          <source>If for some reason this new page errors Cypress will display the initial 500 error messages just like &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">何らかの理由でこの新しいページにエラーが発生した場合、サイプレスは&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; の&lt;/a&gt;ように最初の500エラーメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="8edd03621e98d5ed7e5b578879fc3050eab14a47" translate="yes" xml:space="preserve">
          <source>If going forward or back causes a full page refresh, Cypress will wait for the new page to load before moving on to new commands.</source>
          <target state="translated">前に進んだり戻ったりするとページが完全に更新される場合、Cypress は新しいページがロードされるのを待ってから新しいコマンドに移動します。</target>
        </trans-unit>
        <trans-unit id="c61904f70fabc710476e07aa51b2f8c182efb85c" translate="yes" xml:space="preserve">
          <source>If isolated to the Electron browser. Run the same tests in both Electron and Chrome, then compare the screenshots/videos. Look for and isolate any differences in the Command Log.</source>
          <target state="translated">Electronブラウザに隔離されている場合。ElectronとChromeの両方で同じテストを実行し、スクリーンショット/ビデオを比較します。コマンドログの違いを探して切り分けてください。</target>
        </trans-unit>
        <trans-unit id="019fa6ae9d87fdc48efc05c7f5b6b34bf50e30d9" translate="yes" xml:space="preserve">
          <source>If multiple screenshots are taken during a test that will result in the same filename, their file paths are now appended with a number, i.e. &lt;code&gt;test name (1).png&lt;/code&gt;. This prevents screenshot files with the same name from being overwritten. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1766&quot;&gt;#1766&lt;/a&gt;.</source>
          <target state="translated">同じファイル名になるテスト中に複数のスクリーンショットを撮った場合、それらのファイルパスに番号が追加されます。つまり、 &lt;code&gt;test name (1).png&lt;/code&gt; です。これにより、同じ名前のスクリーンショットファイルが上書きされなくなります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1766&quot;&gt;＃1766を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="48f21d21b635b05f7218a084eb7b7474b0d00544" translate="yes" xml:space="preserve">
          <source>If multiple task objects use the same key, the later registration will overwrite that particular key, just like merging multiple objects with duplicate keys will overwrite the first one.</source>
          <target state="translated">複数のタスクオブジェクトが同じキーを使用している場合、重複したキーを持つ複数のオブジェクトをマージすると最初のキーが上書きされるのと同じように、後から登録したものがその特定のキーを上書きします。</target>
        </trans-unit>
        <trans-unit id="1a7feafa943f17ac46557e57457f1578d825c644" translate="yes" xml:space="preserve">
          <source>If multiple task objects use the same key, the later registration will overwrite that particular key, similar to how merging multiple objects with duplicate keys will overwrite the first one.</source>
          <target state="translated">複数のタスクオブジェクトが同じキーを使用している場合、重複キーを持つ複数のオブジェクトをマージすると最初のキーが上書きされるのと同じように、後から登録したものがその特定のキーを上書きします。</target>
        </trans-unit>
        <trans-unit id="9f386e0d8fe5e0a3f3e67dae8088114a0ce832f4" translate="yes" xml:space="preserve">
          <source>If my machine is Windows 64bit, I will click on the &amp;ldquo;Testing new win32 x64 &amp;hellip;&amp;rdquo; commit and run the command below.</source>
          <target state="translated">私のマシンがWindows 64ビットの場合、「Testing new win32 x64&amp;hellip;」コミットをクリックして、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="8911843b2af6a7d71759e08877aa807eaf58b2a8" translate="yes" xml:space="preserve">
          <source>If no method is defined Cypress will match &lt;code&gt;GET&lt;/code&gt; requests by default.</source>
          <target state="translated">メソッドが定義されていない場合、サイプレスはデフォルトで &lt;code&gt;GET&lt;/code&gt; リクエストに一致します。</target>
        </trans-unit>
        <trans-unit id="fb1514fb2bf2748c7d457fbc378637318c9ca3c1" translate="yes" xml:space="preserve">
          <source>If possible, we advise implementing &lt;a href=&quot;visual-testing&quot;&gt;visual testing&lt;/a&gt; in addition to Cypress functional tests to avoid CSS and visual regressions.</source>
          <target state="translated">可能であれば、CSSと視覚回帰を回避するために、サイプレス機能&lt;a href=&quot;visual-testing&quot;&gt;テスト&lt;/a&gt;に加えて視覚テストを実装することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5693a5394cd0c32d5fca2f5d0ca482c3825e92b4" translate="yes" xml:space="preserve">
          <source>If status checks are enabled within a project&amp;rsquo;s GitHub integration settings, the Cypress Dashboard will report Cypress test statuses to GitHub for related commits. &lt;a href=&quot;https://help.github.com/en/articles/about-status-checks&quot;&gt;Status checks&lt;/a&gt; help prevent merging a commit or pull-request into the rest of your codebase until all your Cypress tests have passed.</source>
          <target state="translated">プロジェクトのGitHub統合設定内でステータスチェックが有効になっている場合、サイプレスダッシュボードは、関連するコミットについてサイプレステストステータスをGitHubに報告します。&lt;a href=&quot;https://help.github.com/en/articles/about-status-checks&quot;&gt;ステータスチェック&lt;/a&gt;は、すべてのサイプレステストに合格するまで、コミットまたはプルリクエストを残りのコードベースにマージしないようにするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="0470903e8ea33127f36709cbe3a4e684b3fa3a2d" translate="yes" xml:space="preserve">
          <source>If that&amp;rsquo;s the case, don&amp;rsquo;t worry - you can work around it with &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; is special because it is &lt;strong&gt;NOT bound to CORS or same-origin policy&lt;/strong&gt;.</source>
          <target state="translated">その場合でも、心配しないでください&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;で回避できます。&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;は&lt;strong&gt;、CORSまたは同一生成元ポリシーにバインドされ&lt;/strong&gt;てい&lt;strong&gt;ない&lt;/strong&gt;ため、特別です。</target>
        </trans-unit>
        <trans-unit id="f00015b725815345d742ff4cfd425cdaaec401c8" translate="yes" xml:space="preserve">
          <source>If the DOM element provided to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; is already in focus, Cypress no longer attempts to click on the DOM element. This allows you to call &lt;code&gt;.focus()&lt;/code&gt; on elements that are focusable, but not necessarily clickable and type into them using &lt;code&gt;.type()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3001&quot;&gt;#3001&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4420&quot;&gt;#4420&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; に&lt;/a&gt;提供されたDOM要素がすでにフォーカスされている場合、サイプレスはDOM要素をクリックすることを試みなくなりました。これは、あなたが呼び出すことができます &lt;code&gt;.focus()&lt;/code&gt; 使用して、それらの中にフォーカス可能な要素に、必ずしもクリック可能とタイプではない &lt;code&gt;.type()&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3001&quot;&gt;＃3001&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4420&quot;&gt;＃4420を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="05a60dc94de55f0f21f7b65bb0c1793834f5c2c8" translate="yes" xml:space="preserve">
          <source>If the HTML contains a &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-breaking_space&quot;&gt;non-breaking space&lt;/a&gt; entity &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; and the test uses the &lt;a href=&quot;https://api.jquery.com/contains-selector/&quot;&gt;jQuery :contains&lt;/a&gt; selector, then the test needs to use the Unicode value &lt;code&gt;\u00a0&lt;/code&gt; instead of &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;.</source>
          <target state="translated">HTMLに&lt;a href=&quot;https://en.wikipedia.org/wiki/Non-breaking_space&quot;&gt;ノーブレークスペース&lt;/a&gt;エンティティが含まれている場合 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; テストで&lt;a href=&quot;https://api.jquery.com/contains-selector/&quot;&gt;jQuery：contains&lt;/a&gt;セレクターを使用する場合、テストでは &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; の代わりにUnicode値 &lt;code&gt;\u00a0&lt;/code&gt; を使用する必要があります。。</target>
        </trans-unit>
        <trans-unit id="a9442152579bbaca4a152c5f96f083415fe21dd3" translate="yes" xml:space="preserve">
          <source>If the answer is &lt;strong&gt;no&lt;/strong&gt; because the text could be changed - then use &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; with data attributes. Changing the text to &lt;code&gt;Save&lt;/code&gt; would then not cause a test failure.</source>
          <target state="translated">テキストが変更される可能性があるために答えが「&lt;strong&gt;いいえ」の&lt;/strong&gt;場合- データ属性を指定して&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;を使用します。テキストを &lt;code&gt;Save&lt;/code&gt; 変更しても、テストは失敗しません。</target>
        </trans-unit>
        <trans-unit id="eb9073e63299a65bb50a13c26e05b60303111f2c" translate="yes" xml:space="preserve">
          <source>If the answer is &lt;strong&gt;yes&lt;/strong&gt; because the word &lt;code&gt;Submit&lt;/code&gt; is critical and should not be changed - then use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; to target the element. This way, if it is changed, the test will fail.</source>
          <target state="translated">答えが&lt;strong&gt;「はい」&lt;/strong&gt;という単語が重要であり、変更してはならないために &lt;code&gt;Submit&lt;/code&gt; &lt;strong&gt;はい」の&lt;/strong&gt;場合、要素をターゲットにするために&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;を使用します。このように、変更された場合、テストは失敗します。</target>
        </trans-unit>
        <trans-unit id="7c6208086921680f3ab3b5e099a8391aa7505f99" translate="yes" xml:space="preserve">
          <source>If the answer is no: then use a data attribute.</source>
          <target state="translated">答えがNOの場合は、データ属性を使用します。</target>
        </trans-unit>
        <trans-unit id="176a981f849e1e80afda3010fdd17ca4de01f357" translate="yes" xml:space="preserve">
          <source>If the answer is yes: then use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">答えが「はい」の場合：&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; を&lt;/a&gt;使用します</target>
        </trans-unit>
        <trans-unit id="7c3d99d8c672ed0f9a58631c763050ee1404649b" translate="yes" xml:space="preserve">
          <source>If the application sets a custom property, like:</source>
          <target state="translated">のように、アプリケーションがカスタムプロパティを設定した場合。</target>
        </trans-unit>
        <trans-unit id="a316af8049ce3ef58aa334d9b420904143029a18" translate="yes" xml:space="preserve">
          <source>If the commit information is missing in the Dashboard run then &lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub Integration&lt;/a&gt; or other tasks might not work correctly. To see the relevant Cypress debug logs, set the environment variable &lt;code&gt;DEBUG&lt;/code&gt; on your CI machine and inspect the terminal output to see why the commit information is unavailable.</source>
          <target state="translated">ダッシュボードの実行でコミット情報が欠落している場合、&lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub統合&lt;/a&gt;またはその他のタスクが正しく機能しない可能性があります。関連するサイプレスデバッグログを表示するには、CIマシンで環境変数 &lt;code&gt;DEBUG&lt;/code&gt; を設定し、端末出力を調べて、コミット情報が利用できない理由を確認します。</target>
        </trans-unit>
        <trans-unit id="87a064679b505fb4f43803ff8692c40151512b84" translate="yes" xml:space="preserve">
          <source>If the content of the element &lt;strong&gt;changed&lt;/strong&gt; would you want the test to fail?</source>
          <target state="translated">要素のコンテンツが&lt;strong&gt;変更された&lt;/strong&gt;場合、テストを失敗させますか？</target>
        </trans-unit>
        <trans-unit id="33f9944f451d168727113ae38f9ff940547f9483" translate="yes" xml:space="preserve">
          <source>If the element is currently not in focus, before issuing any keystrokes Cypress will first issue a &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; to the element to bring it into focus.</source>
          <target state="translated">要素が現在フォーカスされていない場合、キーストロークを発行する前に、サイプレスはまず要素に&lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;を発行して、要素をフォーカスします。</target>
        </trans-unit>
        <trans-unit id="bb08d23caa0ce128551b1591fbe53b1485f5d721" translate="yes" xml:space="preserve">
          <source>If the form&amp;rsquo;s &lt;code&gt;submit&lt;/code&gt; event is &lt;code&gt;preventedDefault&lt;/code&gt; the form will not actually be submitted.</source>
          <target state="translated">フォームの &lt;code&gt;submit&lt;/code&gt; イベントが &lt;code&gt;preventedDefault&lt;/code&gt; の場合、フォームは実際には送信されません。</target>
        </trans-unit>
        <trans-unit id="cba85eb42a78a04cd0f5fcd7cb354510b97c3c09" translate="yes" xml:space="preserve">
          <source>If the hover behavior depends on a JavaScript event like &lt;code&gt;mouseover&lt;/code&gt;, you can trigger the event to achieve that behavior.</source>
          <target state="translated">ホバー動作が &lt;code&gt;mouseover&lt;/code&gt; などのJavaScriptイベントに依存している場合は、イベントをトリガーしてその動作を実現できます。</target>
        </trans-unit>
        <trans-unit id="c69d8aa449aad6940de5679c36384ec0910135c1" translate="yes" xml:space="preserve">
          <source>If the machine is encoding the video slowly (which is often the case for virtual machines that use a single core), the encoding might take a long time. In this case, you can modify the &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videoCompression&lt;/code&gt;&lt;/a&gt; configuration to make the encoding a little bit faster. Here are some common scenarios:</source>
          <target state="translated">マシンがビデオをゆっくりとエンコードしている場合（これは、シングルコアを使用する仮想マシンの場合によくあることです）、エンコードに時間がかかることがあります。この場合は、&lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videoCompression&lt;/code&gt; &lt;/a&gt;構成を変更して、エンコーディングを少し速くすることができます。一般的なシナリオは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="281cd2310510ca7dc670ea99f125208e5de2f4ff" translate="yes" xml:space="preserve">
          <source>If the mousedown event has its default action prevented (&lt;code&gt;e.preventDefault()&lt;/code&gt;) then the element will not receive focus as per the spec.</source>
          <target state="translated">mousedownイベントのデフォルトアクションが防止されている場合（ &lt;code&gt;e.preventDefault()&lt;/code&gt; ）、要素は仕様に従ってフォーカスを受け取りません。</target>
        </trans-unit>
        <trans-unit id="7d95bd4923a76dfc8a1341411e5f28006de450fc" translate="yes" xml:space="preserve">
          <source>If the path to the file does not exist, the file and its path will be created. If the file already exists, it will be over-written.</source>
          <target state="translated">ファイルのパスが存在しない場合は、ファイルとそのパスが作成されます。ファイルが既に存在する場合は上書きされます。</target>
        </trans-unit>
        <trans-unit id="e59562e13c4c4576a50916d6f64e01ee0edc6d71" translate="yes" xml:space="preserve">
          <source>If the problem is seen during &lt;code&gt;cypress open&lt;/code&gt; you can print debug logs in the browser too. Open the browser&amp;rsquo;s Developer Tools and set a &lt;code&gt;localStorage&lt;/code&gt; property:</source>
          <target state="translated">&lt;code&gt;cypress open&lt;/code&gt; ときに問題が発生した場合は、ブラウザでデバッグログを印刷することもできます。ブラウザーの開発者ツールを開き、 &lt;code&gt;localStorage&lt;/code&gt; プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="5b1450f978b16536cdfe1e9955befeb5389a0e9f" translate="yes" xml:space="preserve">
          <source>If the server takes a very long time to start, we recommend trying the &lt;a href=&quot;https://github.com/bahmutov/start-server-and-test&quot;&gt;start-server-and-test&lt;/a&gt; module.</source>
          <target state="translated">サーバーの起動に非常に長い時間がかかる場合は、&lt;a href=&quot;https://github.com/bahmutov/start-server-and-test&quot;&gt;start-server-and-test&lt;/a&gt;モジュールを試すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0df65981151eafdb0359a584156434e4a653f8ad" translate="yes" xml:space="preserve">
          <source>If the smoke test fails to execute, check if a shared library is missing (a common problem on Linux machines without all of the Cypress dependencies present).</source>
          <target state="translated">スモークテストの実行に失敗した場合は、共有ライブラリがないかどうかを確認してください (Cypress の依存関係がすべて存在しない Linux マシンではよくある問題です)。</target>
        </trans-unit>
        <trans-unit id="3638d0b781a21c150d0b8e80ad4c8466d13bf479" translate="yes" xml:space="preserve">
          <source>If the state you are trying to clean lives on the server - by all means, clean that state. You will need to run these types of routines! But if the state is related to your application currently under test - you likely do not even need to clear it.</source>
          <target state="translated">クリーンアップしようとしている状態がサーバ上にある場合は、ぜひその状態をクリーンアップしてください。このようなルーチンを実行する必要があるでしょう! しかし、その状態が現在テスト中のアプリケーションに関連している場合は、おそらくクリアする必要はありません。</target>
        </trans-unit>
        <trans-unit id="e28022270e53482c54285d7e566763481f38c725" translate="yes" xml:space="preserve">
          <source>If the triple slash directive does not work, please refer to your code editor in &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;TypeScript&amp;rsquo;s Editor Support doc&lt;/a&gt; and follow the instructions for your IDE to get &lt;a href=&quot;typescript-support&quot;&gt;TypeScript support&lt;/a&gt; and intelligent code completion configured in your developer environment first. TypeScript support is built in for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;, &lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt;, and &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt; - all other editors require extra setup.</source>
          <target state="translated">トリプルスラッシュディレクティブが機能しない場合は、&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;TypeScriptのエディターサポートドキュメント&lt;/a&gt;でコードエディターを参照し、IDEの指示に従って&lt;a href=&quot;typescript-support&quot;&gt;TypeScriptサポート&lt;/a&gt;とインテリジェントなコード補完を開発者環境で構成してください。TypeScriptサポートは、&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;、&lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt;、および&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStormに&lt;/a&gt;組み込まれています。他のすべてのエディターには追加の設定が必要です。</target>
        </trans-unit>
        <trans-unit id="1cefc5abdc03d7c1487d91621dedca3abe32114d" translate="yes" xml:space="preserve">
          <source>If there is a missing dependency, the application should print an error message. You can see the Electron verbose log messages by setting an &lt;a href=&quot;https://electronjs.org/docs/api/environment-variables&quot;&gt;environment variable ELECTRON_ENABLE_LOGGING&lt;/a&gt;:</source>
          <target state="translated">依存関係が欠落している場合、アプリケーションはエラーメッセージを出力する必要があります。&lt;a href=&quot;https://electronjs.org/docs/api/environment-variables&quot;&gt;環境変数ELECTRON_ENABLE_LOGGINGを&lt;/a&gt;設定すると、Electronの詳細なログメッセージを確認できます。</target>
        </trans-unit>
        <trans-unit id="d1f6c10abf1c776360040b402a51392a4fa2eabb" translate="yes" xml:space="preserve">
          <source>If there is currently a different DOM element with focus, Cypress issues a &lt;code&gt;blur&lt;/code&gt; event to that element before running the &lt;code&gt;.focus()&lt;/code&gt; command.</source>
          <target state="translated">現在フォーカスのある別のDOM要素がある場合、サイプレスは &lt;code&gt;.focus()&lt;/code&gt; コマンドを実行する前にその要素に &lt;code&gt;blur&lt;/code&gt; イベントを発行します。</target>
        </trans-unit>
        <trans-unit id="6e1234aa938e58dfe72a380e41ba6249ce542bb3" translate="yes" xml:space="preserve">
          <source>If this is not the case, then you should refactor and change your approach.</source>
          <target state="translated">そうでない場合は、リファクタリングをしてアプローチを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="c5f3df466a815c48328c9910e040b787e9212736" translate="yes" xml:space="preserve">
          <source>If this state cleanup is &lt;strong&gt;truly&lt;/strong&gt; required, then the next test will instantly fail. Why? Because resetting the state never happened when you refreshed Cypress.</source>
          <target state="translated">この状態のクリーンアップが&lt;strong&gt;本当に&lt;/strong&gt;必要な場合、次のテストはすぐに失敗します。どうして？サイプレスを更新したときに状態をリセットすることは決してなかったからです。</target>
        </trans-unit>
        <trans-unit id="793da91db9fe4182e7562537ceb3f25907e00040" translate="yes" xml:space="preserve">
          <source>If this test can run &lt;strong&gt;by itself&lt;/strong&gt; and pass - congratulations you have written a good test.</source>
          <target state="translated">このテストが&lt;strong&gt;単独&lt;/strong&gt;で実行でき、合格した場合-おめでとうございます。優れたテストを作成しました。</target>
        </trans-unit>
        <trans-unit id="984bee3474a21ee2beb536e03cd95024d37ccb6e" translate="yes" xml:space="preserve">
          <source>If watching for file changes, emit &lt;code&gt;rerun&lt;/code&gt; after a file has finished being processed to let Cypress know to rerun the tests.</source>
          <target state="translated">ファイルの変更を監視する場合は、EMITは、 &lt;code&gt;rerun&lt;/code&gt; ファイルが完成ビーイングサイプレスは、テストを再実行するために知っているように処理した後。</target>
        </trans-unit>
        <trans-unit id="dbe5bfb32e8c85e274c247d854478d90f5cb3136" translate="yes" xml:space="preserve">
          <source>If we drill into the coverage object to see the statements executed in each file. For example the file &lt;code&gt;src/index.js&lt;/code&gt; has the following information:</source>
          <target state="translated">カバレッジオブジェクトをドリルダウンして、各ファイルで実行されたステートメントを確認する場合 たとえば、ファイル &lt;code&gt;src/index.js&lt;/code&gt; には次の情報があります。</target>
        </trans-unit>
        <trans-unit id="04e5458c212b25120f1a7febad7cf38e01764524" translate="yes" xml:space="preserve">
          <source>If we looked at the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; of our button again&amp;hellip;</source>
          <target state="translated">我々は見ている場合 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 、再び私たちのボタンの...</target>
        </trans-unit>
        <trans-unit id="9858bc3f84e402a92629ee149c76b95aca1c1c5c" translate="yes" xml:space="preserve">
          <source>If we want to collect the code coverage from the unit tests, we need to instrument the source code of &lt;em&gt;our spec files&lt;/em&gt;. The simplest way to do this is to use the same &lt;code&gt;.babelrc&lt;/code&gt; with &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt;&lt;code&gt;babel-plugin-istanbul&lt;/code&gt;&lt;/a&gt; and tell the Cypress built-in bundler to use &lt;code&gt;.babelrc&lt;/code&gt; when bundling specs. One can use the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; plugin again to do this by adding the code below to your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単体テストからコードカバレッジを収集する場合は&lt;em&gt;、スペックファイルの&lt;/em&gt;ソースコードをインストルメント化する必要があり&lt;em&gt;ます&lt;/em&gt;。これを行う最も簡単な方法は、同じ &lt;code&gt;.babelrc&lt;/code&gt; を&lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt; &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; &lt;/a&gt;で使用し、仕様をバンドルするときに &lt;code&gt;.babelrc&lt;/code&gt; を使用するようにサイプレスの組み込みバンドラーに指示することです。一つは使用することができ&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt;あなたに以下のコードを追加することにより、これを行うために、再度プラグインを&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e0bb96bcece0a11d9fd6ab15f70e21a2aa7f346" translate="yes" xml:space="preserve">
          <source>If we wrote this assertion in the explicit form &amp;ldquo;the long way&amp;rdquo;, it would look like this:</source>
          <target state="translated">このアサーションを「長い道のり」の明示的な形式で記述した場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="c60587c2f51cec786bb94efa29378e1b47736dd3" translate="yes" xml:space="preserve">
          <source>If you &lt;strong&gt;must&lt;/strong&gt; get a real token you can use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and use the &lt;strong&gt;programmatic&lt;/strong&gt; API that your OAuth provider provides. These APIs likely change &lt;strong&gt;more&lt;/strong&gt; infrequently and you avoid problems like throttling and A/B campaigns.</source>
          <target state="translated">あなたがいる場合&lt;strong&gt;しなければならない&lt;/strong&gt;本当のトークンを取得あなたは使用することができます&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;使い&lt;strong&gt;、プログラム&lt;/strong&gt;あなたのOAuthプロバイダーが提供するAPIを。これらのAPIはおそらく変更&lt;strong&gt;より&lt;/strong&gt;頻度が低いが、あなたはスロットリングおよびA / Bのキャンペーンのような問題を避けます。</target>
        </trans-unit>
        <trans-unit id="86e6371b7dcbb3f2107155cd65f37f6449ea72c1" translate="yes" xml:space="preserve">
          <source>If you already use webpack in your project, you can pass in your webpack config as &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#options&quot;&gt;shown here&lt;/a&gt;.</source>
          <target state="translated">プロジェクトですでにwebpackを使用している場合は、&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#options&quot;&gt;ここに示すように&lt;/a&gt;webpack構成を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="ef8a273650cfea97530f8a6c086790f21bed9916" translate="yes" xml:space="preserve">
          <source>If you are &lt;a href=&quot;#Record-tests&quot;&gt;recording your runs&lt;/a&gt; on a public project, you&amp;rsquo;ll want to protect your Record Key. &lt;a href=&quot;../dashboard/projects#Identification&quot;&gt;Learn why.&lt;/a&gt;</source>
          <target state="translated">公開プロジェクトで&lt;a href=&quot;#Record-tests&quot;&gt;実行&lt;/a&gt;を記録する場合は、記録キーを保護する必要があります。&lt;a href=&quot;../dashboard/projects#Identification&quot;&gt;理由をご覧ください。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5e14c0559d99023707eb7ea6dd9ee886d83873b" translate="yes" xml:space="preserve">
          <source>If you are an FFmpeg pro and want to see all the settings and debug messages during the encoding, run Cypress with the following environment variable: &lt;code&gt;DEBUG=cypress:server:video cypress run&lt;/code&gt;</source>
          <target state="translated">あなたがFFmpegプロで、エンコード中にすべての設定とデバッグメッセージを表示したい場合は、次の環境変数を使用してサイプレスを実行します &lt;code&gt;DEBUG=cypress:server:video cypress run&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab3d6619baa79a5c438b8e380d0b0b06ec739290" translate="yes" xml:space="preserve">
          <source>If you are experiencing any or all of these issues, you may need to configure Cypress with your proxy. Instructions are available for &lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;macOS&lt;/a&gt;, &lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;Linux&lt;/a&gt;, and &lt;a href=&quot;#Set-a-proxy-on-Windows&quot;&gt;Windows&lt;/a&gt;.</source>
          <target state="translated">これらの問題のいずれかまたはすべてが発生している場合は、プロキシでサイプレスを構成する必要がある場合があります。手順は&lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;macOS&lt;/a&gt;、&lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;Linux&lt;/a&gt;、および&lt;a href=&quot;#Set-a-proxy-on-Windows&quot;&gt;Windowsで&lt;/a&gt;利用できます。</target>
        </trans-unit>
        <trans-unit id="cc282e2bf3d131481f4925653232d0ba7bce1fc2" translate="yes" xml:space="preserve">
          <source>If you are new to Cypress and wanting to better understand how Commands work - &lt;a href=&quot;../core-concepts/introduction-to-cypress#Chains-of-Commands&quot;&gt;please read our Introduction to Cypress guide&lt;/a&gt;.</source>
          <target state="translated">サイプレスの初心者で、コマンドの仕組みをよりよく理解したい場合は、サイプレスの&lt;a href=&quot;../core-concepts/introduction-to-cypress#Chains-of-Commands&quot;&gt;概要ガイドをお読みください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59dd4ef47d09ebbfccf959062f71fe92d4528548" translate="yes" xml:space="preserve">
          <source>If you are not logged in on OSX, Cypress now issues a native system notification indicating to you that Cypress is running in your tray (many users often complained they could not tell Cypress was actually running)</source>
          <target state="translated">OSX でログインしていない場合、Cypress は、Cypress がトレイで実行されていることを知らせるネイティブのシステム通知を発行するようになりました(多くのユーザーが、Cypress が実際に実行されていることがわからないと不満を漏らしていました)。</target>
        </trans-unit>
        <trans-unit id="2a31a7f93c6105a63c0857b8887ac837c4f3d60f" translate="yes" xml:space="preserve">
          <source>If you are not sure if you have written a potentially flaky test, there is an easy way to figure it out. Repeat the test an excessive number of times, and then repeat by modifying the Developer Tools to throttle the Network and the CPU. This will create different loads that simulate different environments (like CI). If you&amp;rsquo;ve written a good test, it will pass or fail 100% of the time.</source>
          <target state="translated">不安定な可能性のあるテストを作成したかどうかが不明な場合は、簡単にそれを理解する方法があります。テストを何度も繰り返してから、ネットワークとCPUをスロットルするように開発者ツールを変更して繰り返します。これにより、さまざまな環境（CIなど）をシミュレートするさまざまな負荷が作成されます。良いテストを書いた場合、100％の確率で合格または不合格になります。</target>
        </trans-unit>
        <trans-unit id="80f8b0dc65b612b8d77f5f23e7305b050dd3ba02" translate="yes" xml:space="preserve">
          <source>If you are not using one of the above CI providers then make sure your system has these dependencies installed.</source>
          <target state="translated">上記のCIプロバイダを使用していない場合は、システムにこれらの依存関係がインストールされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="f30e8c13cff139efff8686cb98411fcf5a2ebfc1" translate="yes" xml:space="preserve">
          <source>If you are purposefully writing commands outside of a test, there is probably a better way to accomplish what you&amp;rsquo;re trying to do. Read through the &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;Examples&lt;/a&gt;, &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat with someone in our chat&lt;/a&gt;, or &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt;.</source>
          <target state="translated">テストの外で意図的にコマンドを記述している場合は、実行しようとしていることを達成するためのより良い方法がおそらくあります。&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;例&lt;/a&gt;を読んだり、&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;チャットで誰かとチャット&lt;/a&gt;したり&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;、問題を開い&lt;/a&gt;たりしてください。</target>
        </trans-unit>
        <trans-unit id="6acf38d6e064f86018b16cceea98d60fb261be5e" translate="yes" xml:space="preserve">
          <source>If you are running &lt;code&gt;Docker&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;there is a simple one line fix for this problem documented here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Docker&lt;/code&gt; を実行している場合&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;は、この問題の簡単な1行の修正がここに記載されています&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13d834a64d552181a1b3e28e131afb7882baa42e" translate="yes" xml:space="preserve">
          <source>If you are running Cypress tests using a Chromium-based browser, you can see ALL currently set command line switches and the browser version information by opening a new tab and typing &lt;code&gt;chrome://version&lt;/code&gt; url.</source>
          <target state="translated">Chromiumベースのブラウザを使用してサイプレステストを実行している場合は、新しいタブを開いて &lt;code&gt;chrome://version&lt;/code&gt; urlと入力すると、現在設定されているすべてのコマンドラインスイッチとブラウザのバージョン情報を確認できます。</target>
        </trans-unit>
        <trans-unit id="6eefafe82e977a212269471392c2d31efb3b313d" translate="yes" xml:space="preserve">
          <source>If you are running long runs on Docker, you need to set the &lt;code&gt;ipc&lt;/code&gt; to &lt;code&gt;host&lt;/code&gt; mode. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;This issue&lt;/a&gt; describes exactly what to do.</source>
          <target state="translated">Dockerで長時間実行している場合は、 &lt;code&gt;ipc&lt;/code&gt; を &lt;code&gt;host&lt;/code&gt; モードに設定する必要があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;この問題&lt;/a&gt;は、何をすべきかを正確に説明しています。</target>
        </trans-unit>
        <trans-unit id="7ea7149f5bda4f21e499135546b4b1f599c26ffb" translate="yes" xml:space="preserve">
          <source>If you are trying to parallelize this run, then also pass the &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag, else pass a different group name.</source>
          <target state="translated">この実行を並列化する場合は、&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;フラグも渡します。そうでない場合は、別のグループ名を渡します。</target>
        </trans-unit>
        <trans-unit id="658c2a9b48b7709fa6b97391757f69addcab4fd4" translate="yes" xml:space="preserve">
          <source>If you are typing into a password field, the password input is masked automatically within your application. But &lt;a href=&quot;../commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; automatically logs any typed content into the Test Runner&amp;rsquo;s Command Log.</source>
          <target state="translated">パスワードフィールドに入力している場合、パスワード入力はアプリケーション内で自動的にマスクされます。ただし、&lt;a href=&quot;../commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; は&lt;/a&gt;、入力されたコンテンツをテストランナーのコマンドログに自動的に記録します。</target>
        </trans-unit>
        <trans-unit id="be7a02908a97e6d893298ef87e83dcb692e7a2d1" translate="yes" xml:space="preserve">
          <source>If you are unable to guarantee that the DOM is stable - don&amp;rsquo;t worry, there are other ways you can do conditional testing or work around the problems inherent with it.</source>
          <target state="translated">DOMが安定していることを保証できない場合-心配しないでください。条件付きテストを実行したり、DOMに固有の問題を回避したりする方法は他にもあります。</target>
        </trans-unit>
        <trans-unit id="de6ee60d1ffc8d554d42900fed3e4ab199507dfb" translate="yes" xml:space="preserve">
          <source>If you are unfamiliar with code coverage or want to learn more, take a look at the &amp;ldquo;Understanding JavaScript Code Coverage&amp;rdquo; blog post &lt;a href=&quot;https://www.semantics3.com/blog/understanding-code-coverage-1074e8fccce0/&quot;&gt;Part 1&lt;/a&gt; and &lt;a href=&quot;https://www.semantics3.com/blog/understanding-javascript-code-coverage-part-2-9aedaa5119e5/&quot;&gt;Part 2&lt;/a&gt;.</source>
          <target state="translated">コードカバレッジに慣れていない場合、または詳細を知りたい場合は、「JavaScriptコードカバレッジについて」ブログ投稿&lt;a href=&quot;https://www.semantics3.com/blog/understanding-code-coverage-1074e8fccce0/&quot;&gt;パート1&lt;/a&gt;および&lt;a href=&quot;https://www.semantics3.com/blog/understanding-javascript-code-coverage-part-2-9aedaa5119e5/&quot;&gt;パート2&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="75eeccb6ebe4296c2870b6f50b692b7240315b31" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;jQuery&lt;/code&gt; then the &lt;code&gt;jQuery&lt;/code&gt; wrapped elements will automatically have your 3rd party plugins available to be called.</source>
          <target state="translated">&lt;code&gt;jQuery&lt;/code&gt; を使用している場合、 &lt;code&gt;jQuery&lt;/code&gt; でラップされた要素には、呼び出されるサードパーティのプラグインが自動的に用意されます。</target>
        </trans-unit>
        <trans-unit id="03bc3dfda3cbb44d47bdeeddac74222abfe0cd16" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;npm install&lt;/code&gt; in your build process, consider &lt;a href=&quot;https://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&quot;&gt;switching to &lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; and caching the &lt;code&gt;~/.npm&lt;/code&gt; directory for a faster and more reliable build.</source>
          <target state="translated">ビルドプロセスで &lt;code&gt;npm install&lt;/code&gt; を使用している場合は、&lt;a href=&quot;https://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&quot;&gt; &lt;code&gt;npm ci&lt;/code&gt; に&lt;/a&gt;切り替えて &lt;code&gt;~/.npm&lt;/code&gt; ディレクトリをキャッシュし、より高速で信頼性の高いビルドを検討してください。</target>
        </trans-unit>
        <trans-unit id="d0c4037ea4da2b6c2d166832c8fc4c38195b3c4e" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;yarn&lt;/code&gt;, caching &lt;code&gt;~/.cache&lt;/code&gt; will include both the &lt;code&gt;yarn&lt;/code&gt; and Cypress caches. Consider using &lt;code&gt;yarn install --frozen-lockfile&lt;/code&gt; as an &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; equivalent.</source>
          <target state="translated">&lt;code&gt;yarn&lt;/code&gt; を使用している場合、キャッシュ &lt;code&gt;~/.cache&lt;/code&gt; には &lt;code&gt;yarn&lt;/code&gt; とサイプレスキャッシュの両方が含まれます。&lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt; &lt;code&gt;npm ci&lt;/code&gt; の&lt;/a&gt;同等物として、 &lt;code&gt;yarn install --frozen-lockfile&lt;/code&gt; の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="2089f8651693845877f5144ee31856c6ae49d0fa" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;https://github.com/zkat/npx&quot;&gt;npx&lt;/a&gt; tool, you can invoke the locally installed Cypress tool directly:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zkat/npx&quot;&gt;npx&lt;/a&gt;ツールを使用している場合は、ローカルにインストールされたサイプレスツールを直接呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="0bdad0708407a849c5ab258a1cfa09a8ce0a2427" translate="yes" xml:space="preserve">
          <source>If you are writing a traditional server-side application where most of the responses are HTML you will likely have few stubbed responses. However, most modern applications that serve JSON can take advantage of stubbing.</source>
          <target state="translated">ほとんどのレスポンスが HTML である従来のサーバーサイドのアプリケーションを書いている場合、スタブ化されたレスポンスはほとんどないでしょう。しかし、JSON を提供する最新のアプリケーションのほとんどはスタブを利用することができます。</target>
        </trans-unit>
        <trans-unit id="a3e941a81cf8f9fc738a085fc37c0f10bfe84f2c" translate="yes" xml:space="preserve">
          <source>If you attempt to visit two different superdomains, Cypress will error. Visiting subdomains works fine. You can visit different superdomains in &lt;em&gt;different&lt;/em&gt; tests, just not the &lt;em&gt;same&lt;/em&gt; test.</source>
          <target state="translated">2つの異なるスーパードメインにアクセスしようとすると、サイプレスはエラーになります。サブドメインへのアクセスは問題なく機能します。&lt;em&gt;同じ&lt;/em&gt;テストではなく、&lt;em&gt;さまざまな&lt;/em&gt;テストで&lt;em&gt;さまざま&lt;/em&gt;なスーパードメインにアクセスできます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77a24f329974d4b45808483367181374b38e05cf" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;cy.clock()&lt;/code&gt; before visiting a page with &lt;a href=&quot;visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, the page&amp;rsquo;s native global functions will be overridden on window load, before any of your app code runs, so even if &lt;code&gt;setTimeout&lt;/code&gt;, for example, is called on page load, it can still be controlled via &lt;a href=&quot;tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt;. This also applies if, during the course of a test, the page under test is reloaded or changed.</source>
          <target state="translated">あなたが呼び出す場合 &lt;code&gt;cy.clock()&lt;/code&gt; でページを訪問する前に&lt;a href=&quot;visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;、ページのネイティブグローバル関数は、そうしても、アプリのコードの実行のいずれかの前に、窓負荷に上書きされます &lt;code&gt;setTimeout&lt;/code&gt; 、例えば、上と呼ばれていますページの読み込み、それはまだ&lt;a href=&quot;tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; を&lt;/a&gt;介して制御することができます。これは、テスト中にテスト中のページがリロードまたは変更された場合にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="86e73b2b1686e43558da6ec69e3a7ff0469f0839" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t figure out why your JavaScript code is redirecting you to a different superdomain, then you might want to just read about &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disabling web security&lt;/a&gt;.</source>
          <target state="translated">JavaScriptコードが別のスーパードメインにリダイレクトする理由がわからない場合は、&lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;ウェブセキュリティの無効化&lt;/a&gt;についてお読みください。</target>
        </trans-unit>
        <trans-unit id="7cfd4650a26bf4be0f68e73d66b61e5fcd4ea2dd" translate="yes" xml:space="preserve">
          <source>If you cannot accurately know the state of your application then no matter what programming idioms you have available - &lt;strong&gt;you cannot write 100% deterministic tests&lt;/strong&gt;.</source>
          <target state="translated">アプリケーションの状態を正確に把握できない場合は、利用可能なプログラミングイディオムに関係&lt;strong&gt;なく、100％確定的テストを作成することはできません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="fc24b08a14546c51dad9f4f79e13d2577080ffc7" translate="yes" xml:space="preserve">
          <source>If you chain any &lt;code&gt;.should()&lt;/code&gt; command, the default &lt;code&gt;.should('exist')&lt;/code&gt; is not asserted. This does not matter for most &lt;em&gt;positive&lt;/em&gt; assertions, such as &lt;code&gt;.should('have.class')&lt;/code&gt;, because those imply existence in the first place, but if you chain &lt;em&gt;negative&lt;/em&gt; assertions ,such as &lt;code&gt;.should('not.have.class')&lt;/code&gt;, they will pass even if the DOM element doesn&amp;rsquo;t exist:</source>
          <target state="translated">&lt;code&gt;.should()&lt;/code&gt; コマンドをチェーンすると、デフォルトの &lt;code&gt;.should('exist')&lt;/code&gt; はアサートされません。これは、ほとんどのために重要ではありません&lt;em&gt;正&lt;/em&gt;のようなアサーション、 &lt;code&gt;.should('have.class')&lt;/code&gt; それらが最初の場所で存在することを意味するものではので、しかし、あなたは、チェーン場合&lt;em&gt;、負&lt;/em&gt;のようなアサーション、 &lt;code&gt;.should('not.have.class')&lt;/code&gt; 、DOM要素が存在しない場合でも渡されます。</target>
        </trans-unit>
        <trans-unit id="f6e0dcb9f671e7a8fb00e89750fb01e410ef7928" translate="yes" xml:space="preserve">
          <source>If you change any of those properties of the image, you should include the new values in the returned object, so that the details are correctly reported in the test results. For example, if you crop the image, return the new size and dimensions of the image.</source>
          <target state="translated">画像のプロパティを変更した場合、テスト結果で詳細が正しく報告されるように、返されるオブジェクトに新しい値を含める必要があります。例えば、画像をトリミングした場合は、画像の新しいサイズと寸法を返します。</target>
        </trans-unit>
        <trans-unit id="b0fcff056e08339935fe5d6b0a70e3075836fffc" translate="yes" xml:space="preserve">
          <source>If you change the &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; or &lt;code&gt;dimensions&lt;/code&gt; of the image, you&amp;rsquo;ll want to update the new values so that the details are correctly reported in the test results. &lt;em&gt;Any other properties besides &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, and &lt;code&gt;dimensions&lt;/code&gt; will be ignored.&lt;/em&gt;</source>
          <target state="translated">あなたが変更した場合は &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; や &lt;code&gt;dimensions&lt;/code&gt; 画像のを、あなたは詳細が正しくテスト結果で報告されているように、新しい値を更新することをお勧めします。&lt;em&gt; &lt;code&gt;path&lt;/code&gt; &lt;/em&gt;&lt;em&gt;、&lt;/em&gt;&lt;em&gt; &lt;code&gt;size&lt;/code&gt; &lt;/em&gt;&lt;em&gt;、および&lt;/em&gt;&lt;em&gt; &lt;code&gt;dimensions&lt;/code&gt; &lt;/em&gt;&lt;em&gt;以外のその他のプロパティは無視されます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="752ee2bc76f52ed83626d5ff5af16d85c3d5a108" translate="yes" xml:space="preserve">
          <source>If you choose to install Cypress from the &lt;a href=&quot;../guides/command-line&quot;&gt;CLI Tool&lt;/a&gt; you must update to the latest version &lt;code&gt;0.9.1&lt;/code&gt;. Just run &lt;code&gt;npm install -g cypress&lt;/code&gt; and then you can run &lt;a href=&quot;../guides/command-line&quot;&gt;&lt;code&gt;cypress install&lt;/code&gt;&lt;/a&gt;. You don&amp;rsquo;t need to do anything if you update from within the Test Runner itself.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;CLIツール&lt;/a&gt;からサイプレスをインストールする場合は、最新バージョン &lt;code&gt;0.9.1&lt;/code&gt; に更新する必要があります。ただ、実行 &lt;code&gt;npm install -g cypress&lt;/code&gt; して、あなたが実行することができます&lt;a href=&quot;../guides/command-line&quot;&gt; &lt;code&gt;cypress install&lt;/code&gt; &lt;/a&gt;。テストランナー自体から更新する場合は、何もする必要はありません。</target>
        </trans-unit>
        <trans-unit id="c595939e58a62fa4e827148c888e6c83189e3727" translate="yes" xml:space="preserve">
          <source>If you choose to mirror the entire Cypress download site, you can specify &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; to set the download server URL from &lt;code&gt;https://download.cypress.io&lt;/code&gt; to your own mirror.</source>
          <target state="translated">サイプレスダウンロードサイト全体をミラーリングする場合は、 &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; を指定して、ダウンロードサーバーのURLを &lt;code&gt;https://download.cypress.io&lt;/code&gt; から独自のミラーに設定できます。</target>
        </trans-unit>
        <trans-unit id="bbf88490d53e76c288d488dc11f5e88ed5e9488e" translate="yes" xml:space="preserve">
          <source>If you do &lt;em&gt;not&lt;/em&gt; want these assets to be tracked by Cypress, you need to switch to using &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;. We will happily remove any build assets that are accidentally uploaded to us during the update transition.</source>
          <target state="translated">これらのアセットをサイプレスで追跡したく&lt;em&gt;ない&lt;/em&gt;場合は、サイプレス&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;を使用するように切り替える必要があります。アップデートの移行中に誤ってアップロードされたビルドアセットは、喜んで削除します。</target>
        </trans-unit>
        <trans-unit id="1b5689eafe488967a0af932b7d765f7d91ea4637" translate="yes" xml:space="preserve">
          <source>If you do not need to return a value, explicitly return &lt;code&gt;null&lt;/code&gt; to signal that the given event has been handled.</source>
          <target state="translated">値を返す必要がない場合は、明示的に &lt;code&gt;null&lt;/code&gt; を返し、特定のイベントが処理されたことを通知します。</target>
        </trans-unit>
        <trans-unit id="2acdb06a9fd83a2d7bbf16b6e94e8d1bcb23c390" translate="yes" xml:space="preserve">
          <source>If you do not pass a &lt;code&gt;response&lt;/code&gt; to a route, Cypress will pass the request through without stubbing it. We can still wait for the request to resolve later.</source>
          <target state="translated">ルートへの &lt;code&gt;response&lt;/code&gt; を渡さない場合、サイプレスはスタブせずに要求を通過させます。リクエストが後で解決するのを待つことができます。</target>
        </trans-unit>
        <trans-unit id="e925f27fe2f6b45420ea0c9bb472b5b6a85b6aa2" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t return an object, then configuration will not be modified.</source>
          <target state="translated">オブジェクトを返さない場合、構成は変更されません。</target>
        </trans-unit>
        <trans-unit id="ed38bca3a1bfd9a7f3e39271ca081de14c34dad6" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t use webpack in your project or would like to keep the majority of the default options, you can &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#modifying-default-options&quot;&gt;modify the default options&lt;/a&gt;. Editing the options allows you to do things like:</source>
          <target state="translated">プロジェクトでwebpackを使用しない場合、またはデフォルトオプションの大部分を保持したい場合は&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#modifying-default-options&quot;&gt;、デフォルトオプションを変更&lt;/a&gt;できます。オプションを編集すると、次のようなことができます。</target>
        </trans-unit>
        <trans-unit id="9312db5af2460191898cec54077b357142c7c10f" translate="yes" xml:space="preserve">
          <source>If you extend Cypress assertions, you can extend the assertion types to make the TypeScript compiler understand the new methods. See the &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;Recipe: Adding Chai Assertions&lt;/a&gt; for instructions.</source>
          <target state="translated">サイプレスアサーションを拡張する場合、アサーションタイプを拡張して、TypeScriptコンパイラに新しいメソッドを認識させることができます。手順については、&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;レシピ：Chaiアサーションの追加を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d5cfd6e8ecef7e170010676556edc9e236a0e225" translate="yes" xml:space="preserve">
          <source>If you find yourself stuck and can&amp;rsquo;t work around these issues you can just set this in your &lt;code&gt;cypress.json&lt;/code&gt; file. But before doing so you should really understand and &lt;a href=&quot;../guides/web-security&quot;&gt;read about the reasoning here&lt;/a&gt;.</source>
          <target state="translated">行き詰まってこれらの問題を回避できない場合は、 &lt;code&gt;cypress.json&lt;/code&gt; ファイルでこれを設定できます。しかし、そうする前に&lt;a href=&quot;../guides/web-security&quot;&gt;、ここで推論について&lt;/a&gt;本当に理解して読む必要があります。</target>
        </trans-unit>
        <trans-unit id="6a19f869c25d2794013e7c1387d40ede0389a6eb" translate="yes" xml:space="preserve">
          <source>If you forgot to start your server you&amp;rsquo;ll see the error below:</source>
          <target state="translated">サーバーを起動するのを忘れた場合、以下のエラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="3a04f4111181616dc0c9ed4028c92b80fb0ed3e0" translate="yes" xml:space="preserve">
          <source>If you get this error in a case where the element is definitely visible in the DOM, your document might contain malformed HTML. In such cases, &lt;code&gt;document.querySelector()&lt;/code&gt; will not find any elements that appear after the point where the HTML is malformed. Even if you feel certain your HTML is not malformed anywhere, check it anyway (line by line in the dev tools). Especially if you&amp;rsquo;ve exhausted all other possibilities.</source>
          <target state="translated">要素がDOMで確実に表示される場合にこのエラーが発生する場合、ドキュメントに不正な形式のHTMLが含まれている可能性があります。このような場合、 &lt;code&gt;document.querySelector()&lt;/code&gt; は、HTMLの形式が正しくないポイントの後に表示される要素を検出しません。HTMLがどこかに改ざんされていないと確信している場合でも、とにかく（開発ツールの行ごとに）チェックしてください。特に他のすべての可能性を使い果たした場合。</target>
        </trans-unit>
        <trans-unit id="50a9344dcb7c8f27a278716db4dd157f804f2039" translate="yes" xml:space="preserve">
          <source>If you had any failed tests, you can hover over the spec chart and click on the link to the failed test to go directly to its error message and stack trace.</source>
          <target state="translated">テストに失敗した場合は、スペックチャートの上にカーソルを置き、失敗したテストへのリンクをクリックすると、そのエラーメッセージとスタックトレースに直接アクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="9a9ee096d19e69e37fbffad4e7eb174e62c5e73f" translate="yes" xml:space="preserve">
          <source>If you have Local Administrator access to your computer, you may be able to delete the registry keys that are affecting Chrome. Here are some instructions:</source>
          <target state="translated">ローカル管理者がコンピュータにアクセスできる場合は、Chromeに影響を与えるレジストリ キーを削除できる可能性があります。以下に手順をご紹介します。</target>
        </trans-unit>
        <trans-unit id="63e4a448952599482dc8840bf1d4025b5dc425e4" translate="yes" xml:space="preserve">
          <source>If you have a public project you should &lt;em&gt;still&lt;/em&gt; keep your record key secret. If someone knows both your record key and your &lt;code&gt;projectId&lt;/code&gt;, they could record test runs for your project - which could mix up all of your results and be counted towards your usage during billing.</source>
          <target state="translated">公開プロジェクトがある場合&lt;em&gt;でも&lt;/em&gt;、レコードキーを秘密にし&lt;em&gt;て&lt;/em&gt;おく必要&lt;em&gt;があり&lt;/em&gt;ます。誰かがあなたの記録キーとあなたの &lt;code&gt;projectId&lt;/code&gt; の両方を知っている場合、彼らはあなたのプロジェクトのテスト実行を記録する可能性があります-これはあなたのすべての結果を混合し、請求中のあなたの使用にカウントされます。</target>
        </trans-unit>
        <trans-unit id="54a6bde689f1c4e79db2db1cd787836fb4a9aedb" translate="yes" xml:space="preserve">
          <source>If you have any questions regarding the OSS plan, please feel free &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#8ee6ebe2e2e1ceedf7fefcebfdfda0e7e1&quot;&gt;contact us&lt;/a&gt;.</source>
          <target state="translated">OSSプランについてご不明な点がございましたら、お気軽にお&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#8ee6ebe2e2e1ceedf7fefcebfdfda0e7e1&quot;&gt;問い合わせください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae6e013e7f7ef50fc0cef2b97a94cdc089024d3c" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t set up your project to record &lt;a href=&quot;projects#Setup&quot;&gt;read here&lt;/a&gt;.</source>
          <target state="translated">記録するプロジェクトを設定していない場合は、&lt;a href=&quot;projects#Setup&quot;&gt;こちら&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="3b6cc633bbfffea4fcc2a5b3a2ee15791267850e" translate="yes" xml:space="preserve">
          <source>If you install cypress globally using &lt;code&gt;npm install -g cypress&lt;/code&gt; we will warn you that you should check this in as a &lt;code&gt;devDependency&lt;/code&gt; but Cypress will continue to work in &amp;ldquo;global mode&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;npm install -g cypress&lt;/code&gt; を使用してサイプレスをグローバルにインストールする場合、これを &lt;code&gt;devDependency&lt;/code&gt; としてチェックインする必要があることを警告しますが、サイプレスは引き続き「グローバルモード」で動作します。</target>
        </trans-unit>
        <trans-unit id="a842235de66934aeaa622f41344721b9e2931803" translate="yes" xml:space="preserve">
          <source>If you installed a custom reporter through npm, specify the package name:</source>
          <target state="translated">npm経由でカスタムレポーターをインストールした場合は、パッケージ名を指定してください。</target>
        </trans-unit>
        <trans-unit id="fe2c757489ce4a0f7274ae1730d45810e99ceb0b" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; after visiting a page, Cypress assumes the url used for the &lt;code&gt;cy.visit()&lt;/code&gt; is the host.</source>
          <target state="translated">ページにアクセスした後で &lt;code&gt;cy.request()&lt;/code&gt; を実行すると、サイプレスは &lt;code&gt;cy.visit()&lt;/code&gt; に使用されるURL がホストであると想定します。</target>
        </trans-unit>
        <trans-unit id="8fc68779f7a10cce750509e7525ffbfe62a98a74" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; prior to visiting a page, Cypress uses the host configured as the &lt;code&gt;baseUrl&lt;/code&gt; property inside of &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">ページにアクセスする前に &lt;code&gt;cy.request()&lt;/code&gt; を行うと、サイプレスは &lt;code&gt;baseUrl&lt;/code&gt; 内の &lt;code&gt;cypress.json&lt;/code&gt; プロパティとして構成されたホストを使用します。</target>
        </trans-unit>
        <trans-unit id="b0963f152c033833fde35ce59916df0cd22425ac" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; prior to visiting a page, Cypress uses the host configured as the &lt;code&gt;baseUrl&lt;/code&gt; property inside of of your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration file&lt;/a&gt;.</source>
          <target state="translated">ページにアクセスする前に &lt;code&gt;cy.request()&lt;/code&gt; を作成すると、サイプレスは&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;構成ファイル&lt;/a&gt;内の &lt;code&gt;baseUrl&lt;/code&gt; プロパティとして構成されたホストを使用します。</target>
        </trans-unit>
        <trans-unit id="8f69d55a3f14f83cfc54a1836ade78cc35d09ad0" translate="yes" xml:space="preserve">
          <source>If you modify the list of browsers, you can see the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Resolved-Configuration&quot;&gt;resolved configuration&lt;/a&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab of the Test Runner.</source>
          <target state="translated">ブラウザのリストを変更すると、テストランナーの&lt;strong&gt;[設定&lt;/strong&gt;]タブで&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Resolved-Configuration&quot;&gt;解決された構成&lt;/a&gt;を確認できます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dcc5c531dc309815c89260b0f3c521b4dfc71087" translate="yes" xml:space="preserve">
          <source>If you move the location of the screenshot image, you&amp;rsquo;ll want to specify the new &lt;code&gt;path&lt;/code&gt; of the image.</source>
          <target state="translated">スクリーンショット画像の場所を移動する場合は、画像の新しい &lt;code&gt;path&lt;/code&gt; を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="891fc475ee8ba30f9e2373ce12ed3af9b6cc59fe" translate="yes" xml:space="preserve">
          <source>If you need further control of the file-watching behavior you can configure this preprocessor explicitly: it exposes options that allow you to configure behavior such as &lt;em&gt;what&lt;/em&gt; is watched and the delay before emitting an &amp;ldquo;update&amp;rdquo; event after a change.</source>
          <target state="translated">あなたはファイルウォッチング行動のさらなる制御が必要な場合は、明示的にこのプリプロセッサを設定することができます。それには、configureのような行動にあなたを許可するオプションが公開する&lt;em&gt;ものを&lt;/em&gt;見ていると、変更後に「更新」イベントを発するまでの遅延時間を。</target>
        </trans-unit>
        <trans-unit id="4e262a641a0559189be4fdfa01a8e8c66c400cfe" translate="yes" xml:space="preserve">
          <source>If you need the cookie value, for example to use in a subsequent call</source>
          <target state="translated">クッキーの値が必要な場合、例えば後続の呼び出しで使用するために</target>
        </trans-unit>
        <trans-unit id="58b1d6270a220e8a62522a448d084da074e9e73c" translate="yes" xml:space="preserve">
          <source>If you need to override the binary location for some reason, use &lt;a href=&quot;../getting-started/installing-cypress#Binary-cache&quot;&gt;&lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">何らかの理由でバイナリの場所を上書きする必要がある場合は、&lt;a href=&quot;../getting-started/installing-cypress#Binary-cache&quot;&gt; &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt; &lt;/a&gt;環境変数を使用します。</target>
        </trans-unit>
        <trans-unit id="7f55b2d14636345f6286b0a128493be0ddff303f" translate="yes" xml:space="preserve">
          <source>If you need to pass multiple arguments, use an object</source>
          <target state="translated">複数の引数を渡す必要がある場合は、オブジェクト</target>
        </trans-unit>
        <trans-unit id="2a6a23e285012aad77cd987572729f6560e998af" translate="yes" xml:space="preserve">
          <source>If you need to run a Cypress command straight from the Developer Tools console, you can use the internal command &lt;code&gt;cy.now('command name', ...arguments)&lt;/code&gt;. For example, to run the equivalent of &lt;code&gt;cy.task('database', 123)&lt;/code&gt; outside the normal execution command chain:</source>
          <target state="translated">サイプレスコマンドをDeveloper Toolsコンソールから直接実行する必要がある場合は、内部コマンド &lt;code&gt;cy.now('command name', ...arguments)&lt;/code&gt; を使用できます。たとえば、通常の実行コマンドチェーンの外部で &lt;code&gt;cy.task('database', 123)&lt;/code&gt; 相当するものを実行するには：</target>
        </trans-unit>
        <trans-unit id="06c6374e4d45b32383b9c79e232e9b2d251383c2" translate="yes" xml:space="preserve">
          <source>If you pass a &lt;code&gt;response&lt;/code&gt; to &lt;code&gt;cy.route()&lt;/code&gt;, Cypress will stub the response in the request.</source>
          <target state="translated">あなたが渡すと &lt;code&gt;response&lt;/code&gt; に &lt;code&gt;cy.route()&lt;/code&gt; 、サイプレスは、リクエストのレスポンスをスタブします。</target>
        </trans-unit>
        <trans-unit id="eadb340822b7453de4c2fa968ae10ef8145cfb90" translate="yes" xml:space="preserve">
          <source>If you provide a non fully qualified domain name (FQDN), Cypress will make its best guess as to which host you want &lt;code&gt;cy.request()&lt;/code&gt; to use in the url.</source>
          <target state="translated">完全修飾ドメイン名（FQDN）を提供しない場合、サイプレスは &lt;code&gt;cy.request()&lt;/code&gt; がURLで使用するホストを推測します。</target>
        </trans-unit>
        <trans-unit id="4939d05c3dea69f3c0696b39f689b3fbbc3453af" translate="yes" xml:space="preserve">
          <source>If you remove your application&amp;rsquo;s state after each test, then you instantly lose the ability to use your application in this mode. Logging out at the end would always leave you with the same login page at the end of the test. In order to debug your application or write a partial test, you would always be left commenting out your custom &lt;code&gt;cy.logout()&lt;/code&gt; command.</source>
          <target state="translated">各テスト後にアプリケーションの状態を削除すると、このモードでアプリケーションを使用できなくなります。最後にログアウトすると、テストの最後に常に同じログインページが表示されます。アプリケーションをデバッグしたり、部分的なテストを作成したりするには、常にカスタムの &lt;code&gt;cy.logout()&lt;/code&gt; コマンドをコメントアウトする必要があります。</target>
        </trans-unit>
        <trans-unit id="f6df17775c6544a7070882eab73096c48835dce3" translate="yes" xml:space="preserve">
          <source>If you return an empty list of browsers or &lt;code&gt;browsers: null&lt;/code&gt;, the default list will be restored automatically.</source>
          <target state="translated">ブラウザまたは &lt;code&gt;browsers: null&lt;/code&gt; 空のリスト：nullを返すと、デフォルトのリストが自動的に復元されます。</target>
        </trans-unit>
        <trans-unit id="9e19b775e5880b86ccc83dbd2e818ccef9558b3b" translate="yes" xml:space="preserve">
          <source>If you return or resolve with an object, Cypress will then merge this object into the &lt;code&gt;config&lt;/code&gt; which enables you to overwrite configuration or environment variables.</source>
          <target state="translated">あなたがオブジェクトを返すか、または解決された場合、サイプレスは、その後にこのオブジェクトをマージします &lt;code&gt;config&lt;/code&gt; 上書き設定や環境変数にできます。</target>
        </trans-unit>
        <trans-unit id="62f38afc23705af50d78b28d79ab4c0478795b7d" translate="yes" xml:space="preserve">
          <source>If you see this error, you may want to ensure that the main browser window is currently focused. This means not being focused in debugger or any other window when the command is run.</source>
          <target state="translated">このエラーが表示された場合、メインブラウザのウィンドウが現在フォーカスされていることを確認してください。これは、コマンド実行時にデバッガなどのウィンドウにフォーカスされていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="f4042cdde7b138d3f35ab964f31c8300e3842bf4" translate="yes" xml:space="preserve">
          <source>If you set the &lt;strong&gt;Record Key&lt;/strong&gt; as the environment variable &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt;, you can omit the &lt;code&gt;--key&lt;/code&gt; flag.</source>
          <target state="translated">&lt;strong&gt;Record Key&lt;/strong&gt;を環境変数 &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; として設定した場合、 &lt;code&gt;--key&lt;/code&gt; フラグを省略できます。</target>
        </trans-unit>
        <trans-unit id="9c00a2717fcd0be70d5846987e198e4a299aacb6" translate="yes" xml:space="preserve">
          <source>If you still haven&amp;rsquo;t found a solution, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;open an issue&lt;/a&gt;&lt;em&gt;with a reproducible example&lt;/em&gt;.</source>
          <target state="translated">それでも解決策が見つからない場合&lt;em&gt;は、再現可能な例で&lt;/em&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;問題&lt;/a&gt;&lt;em&gt;を&lt;/em&gt;開いてください。</target>
        </trans-unit>
        <trans-unit id="815ae2e8ac732d0e55e15cc5b8c6ea3b40638a48" translate="yes" xml:space="preserve">
          <source>If you store and access the fixture data using &lt;code&gt;this&lt;/code&gt; test context object, make sure to use &lt;code&gt;function () { ... }&lt;/code&gt; callbacks. Otherwise the test engine will NOT have &lt;code&gt;this&lt;/code&gt; pointing at the test context.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; テストコンテキストオブジェクトを使用してフィクスチャデータを格納してアクセスする場合は、必ず &lt;code&gt;function () { ... }&lt;/code&gt; コールバックを使用してください。そうでない場合、テストエンジンはありません &lt;code&gt;this&lt;/code&gt; テストコンテキストでポインティングを。</target>
        </trans-unit>
        <trans-unit id="2e41771328e6b27b794c8f710d1553a8a40a2a6a" translate="yes" xml:space="preserve">
          <source>If you store and/or persist whether to show the wizard on the server, then just ask it.</source>
          <target state="translated">サーバー上でウィザードを表示するかどうかを保存および/または永続化する場合は、それを求めるだけです。</target>
        </trans-unit>
        <trans-unit id="f8b502a9f59a207ff1bf6a7107a93811965fa6bd" translate="yes" xml:space="preserve">
          <source>If you think ahead, you&amp;rsquo;ll quickly realize that you&amp;rsquo;re going to be typing this URL a lot, since every test is going to need to visit some page of your application. Luckily, Cypress provides a &lt;a href=&quot;../references/configuration&quot;&gt;configuration option&lt;/a&gt; for this. Let&amp;rsquo;s leverage that now.</source>
          <target state="translated">先に考えると、すべてのテストでアプリケーションのいくつかのページにアクセスする必要があるため、このURLを何度も入力することにすぐに気付くでしょう。さいわい、サイプレスはこのための&lt;a href=&quot;../references/configuration&quot;&gt;構成オプション&lt;/a&gt;を提供しています。それを活用しましょう。</target>
        </trans-unit>
        <trans-unit id="ed371ecd9849733f0995b7cf088a4173800b3090" translate="yes" xml:space="preserve">
          <source>If you used &lt;code&gt;npm&lt;/code&gt; to install, Cypress has now been installed to your &lt;code&gt;./node_modules&lt;/code&gt; directory, with its binary executable accessible from &lt;code&gt;./node_modules/.bin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; を使用してインストールした場合、サイプレスは &lt;code&gt;./node_modules&lt;/code&gt; ディレクトリにインストールされ、バイナリ実行可能ファイルは &lt;code&gt;./node_modules/.bin&lt;/code&gt; からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="6739be634fbc0af49a35d96e92d4b398330a478c" translate="yes" xml:space="preserve">
          <source>If you want &lt;code&gt;bar()&lt;/code&gt; to execute after &lt;code&gt;foo()&lt;/code&gt; and the &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; commands, one solution is to chain off the final command using &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;foo()&lt;/code&gt; および&lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;コマンドの後に &lt;code&gt;bar()&lt;/code&gt; を実行する場合、1つの解決策は、&lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;を使用して最後のコマンドをチェーンオフすることです。</target>
        </trans-unit>
        <trans-unit id="c88984849702621314b8577ee1b3520c40840ab3" translate="yes" xml:space="preserve">
          <source>If you want more details about how to write a plugin, we&amp;rsquo;ve written API docs that show you how to work with each plugin event.</source>
          <target state="translated">プラグインの作成方法の詳細が必要な場合は、各プラグインイベントの操作方法を示すAPIドキュメントを用意しています。</target>
        </trans-unit>
        <trans-unit id="40e27bf5b702621afa36f37ab4dd2c0e41604e7d" translate="yes" xml:space="preserve">
          <source>If you want the other guarantees of waiting for an element to become actionable, you should use a different command like &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要素が実行可能になるのを待つという他の保証が必要な場合は、&lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;などの別のコマンドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d022579bf50db75611ad951fa6175bbb71248639" translate="yes" xml:space="preserve">
          <source>If you want the other guarantees of waiting for an element to become actionable, you should use a different command like &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要素が実行可能になるのを待つという他の保証が必要な場合は、&lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;などの別のコマンドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="eb10934dcd9f9f094ac02c58ac6ef7a739bde4a6" translate="yes" xml:space="preserve">
          <source>If you want to call a &lt;code&gt;function&lt;/code&gt; on the previously yielded subject, use &lt;a href=&quot;invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以前に生成された件名で &lt;code&gt;function&lt;/code&gt; を呼び出す場合は、&lt;a href=&quot;invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="4bd0e57f9bf5b98f8a5a67973d6143c187801894" translate="yes" xml:space="preserve">
          <source>If you want to dive into Cypress and edit the code yourself, you can do that. The Cypress code is open source and licensed under an &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;. There are a few tips on getting started that we&amp;rsquo;ve outlined below.</source>
          <target state="translated">サイプレスに飛び込んで自分でコードを編集したい場合は、それを行うことができます。サイプレスコードはオープンソースであり、&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE&quot;&gt;MITライセンスで&lt;/a&gt;ライセンスされています。以下に概要を示す、いくつかのヒントがあります。</target>
        </trans-unit>
        <trans-unit id="d976725e9451f0702dad5e61f02b270491fd5a17" translate="yes" xml:space="preserve">
          <source>If you want to download a specific Cypress version for a given platform (Operating System), you can get it from our CDN.</source>
          <target state="translated">特定のプラットフォーム(オペレーティングシステム)用のCypressのバージョンをダウンロードしたい場合は、当社のCDNから入手できます。</target>
        </trans-unit>
        <trans-unit id="e58beb5f6e1d56538516e0b82a79dd41bf84ddc5" translate="yes" xml:space="preserve">
          <source>If you want to get a property that is not a function on the previously yielded subject, use &lt;a href=&quot;its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以前に生成されたサブジェクトの関数ではないプロパティを取得する場合は、&lt;a href=&quot;its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="41c8e5baabf7ce6dec0fd975fca62b2ab17b92f7" translate="yes" xml:space="preserve">
          <source>If you want to permanently override these options you could do so by setting &lt;a href=&quot;../cypress-api/cypress-server&quot;&gt;&lt;code&gt;Cypress.Server.defaults()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのオプションを永続的に上書きしたい場合は、&lt;a href=&quot;../cypress-api/cypress-server&quot;&gt; &lt;code&gt;Cypress.Server.defaults()&lt;/code&gt; を&lt;/a&gt;設定することで可能です。</target>
        </trans-unit>
        <trans-unit id="115c8112ad21e39aa933cb191a3be97e55bec792" translate="yes" xml:space="preserve">
          <source>If you want to target a test or suite to run or be excluded when run in a specific browser, we suggest passing the &lt;code&gt;browser&lt;/code&gt; within the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt;. The &lt;code&gt;browser&lt;/code&gt; option accepts the same &lt;a href=&quot;#Arguments&quot;&gt;arguments&lt;/a&gt; as &lt;code&gt;Cypress.isBrowser()&lt;/code&gt;.</source>
          <target state="translated">特定のブラウザーで実行するか、実行時に除外するテストまたはスイートをターゲットにする場合は、&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;テスト構成&lt;/a&gt;内で &lt;code&gt;browser&lt;/code&gt; を渡すことをお勧めします。 &lt;code&gt;browser&lt;/code&gt; オプションは同じ受け入れる&lt;a href=&quot;#Arguments&quot;&gt;引数&lt;/a&gt;として &lt;code&gt;Cypress.isBrowser()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d44aa2f657e1e58fa32926dbb685b28edca850fd" translate="yes" xml:space="preserve">
          <source>If you wanted to select the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; instead, you could narrow the elements yielded before the &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="translated">代わりに &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; を選択したい場合は、 &lt;code&gt;.contains()&lt;/code&gt; の前に生成された要素を絞り込むことができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
