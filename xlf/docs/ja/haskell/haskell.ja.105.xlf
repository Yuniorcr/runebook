<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="4988a1d5f42174a3462012d39c8c4b4284841ee4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-fix&quot;&gt;Control.Monad.Fix&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-fix&quot;&gt;Control.Monad.Fixで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="1fbffe97bb635774e3d81e265268c6104ec55915" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-io-class&quot;&gt;Control.Monad.IO.Class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-io-class&quot;&gt;Control.Monad.IO.Classで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="45f408a4475552b3c0377bf0654c36b6e9a8d114" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-reader-class&quot;&gt;Control.Monad.Reader.Class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-reader-class&quot;&gt;Control.Monad.Reader.Classで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="26df13ecba7bd8ad65d4834779516b72a2c350f5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-rws-class&quot;&gt;Control.Monad.RWS.Class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-rws-class&quot;&gt;Control.Monad.RWS.Classで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="b42dc4e50a15d5704ec9024c7cae51b423e74467" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-st-lazy-imp&quot;&gt;Control.Monad.ST.Lazy.Imp&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-st-lazy-imp&quot;&gt;Control.Monad.ST.Lazy.Impで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="614b29571a8d65775ea6474e4db54cff09c65a0b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-state-class&quot;&gt;Control.Monad.State.Class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-state-class&quot;&gt;Control.Monad.State.Classで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="133497b483bb6f04e0b324a6bcd3e5ffc0e08ddd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-stm&quot;&gt;Control.Monad.STM&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-stm&quot;&gt;Control.Monad.STMで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="3987e078387c7a946f3eef09b33473c91bd48db1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-accum&quot;&gt;Control.Monad.Trans.Accum&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-accum&quot;&gt;Control.Monad.Trans.Accumで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="513c41523eb8d533bf346bad3214fd5ebca1fdb9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-cont&quot;&gt;Control.Monad.Trans.Cont&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-cont&quot;&gt;Control.Monad.Trans.Contで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="771430dce0dc8006cee9f6b975fd8ece88ffed7b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-error&quot;&gt;Control.Monad.Trans.Errorで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="f52e19239e9d6aaffd45aebd6aa2cd36b548aedb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Exceptで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="576966bb38a379130c90bb9e211c16a7d21c04da" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-identity&quot;&gt;Control.Monad.Trans.Identity&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-identity&quot;&gt;Control.Monad.Trans.Identityで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="00c46374eedcce81a66f77f116fee74665c0a0fa" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-list&quot;&gt;Control.Monad.Trans.List&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-list&quot;&gt;Control.Monad.Trans.Listで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="9607e2e17cbda9968c52faae7cf19ab8f79f9cb7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-maybe&quot;&gt;Control.Monad.Trans.Maybe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-maybe&quot;&gt;Control.Monad.Trans.Maybeで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="92d46a2c8bcf24db91b70313030f3e8e5b978313" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-reader&quot;&gt;Control.Monad.Trans.Reader&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-reader&quot;&gt;Control.Monad.Trans.Readerで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="fda8014cc38a4e9cf88c6ea1922ae5b5d481b9eb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPSで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f9079049ac9764c33632f9f89b4c94278efdcd0e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazyで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="3835a8446d0e8a8bff5cc9b42d1e3acb651be668" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-rws-strict&quot;&gt;Control.Monad.Trans.RWS.Strict&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-rws-strict&quot;&gt;Control.Monad.Trans.RWS.Strictで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="4b3e104db8a81761ccadc7e1d63271d3b1f3bc37" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-select&quot;&gt;Control.Monad.Trans.Select&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-select&quot;&gt;Control.Monad.Trans.Selectで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="e8ab7378f13e0aec114299684dfa54e74e2ea42a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-state-lazy&quot;&gt;Control.Monad.Trans.State.Lazy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-state-lazy&quot;&gt;Control.Monad.Trans.State.Lazyで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="c39e4d027b3adbe9a825aeb75099f85bcf9f453f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-state-strict&quot;&gt;Control.Monad.Trans.State.Strict&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-state-strict&quot;&gt;Control.Monad.Trans.State.Strictで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="94c9bad425355ad490dfeb81dc5cc32961d306d2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-writer-cps&quot;&gt;Control.Monad.Trans.Writer.CPS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-writer-cps&quot;&gt;Control.Monad.Trans.Writer.CPSで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="0c28f716c3beb11e74b62693ca2a1cfa6c7dfc0b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-writer-lazy&quot;&gt;Control.Monad.Trans.Writer.Lazy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-writer-lazy&quot;&gt;Control.Monad.Trans.Writer.Lazyで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="79f7751cb21b9411d38f795c3b25c732ed9fecb6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-trans-writer-strict&quot;&gt;Control.Monad.Trans.Writer.Strict&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-trans-writer-strict&quot;&gt;Control.Monad.Trans.Writer.Strictで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="6892601da85f61ea92ff04294fab15de727378d5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-writer-class&quot;&gt;Control.Monad.Writer.Class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-writer-class&quot;&gt;Control.Monad.Writer.Classで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="434ee96f0438970a6b86ae059a5fc9dc5f7d4431" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;control-monad-zip&quot;&gt;Control.Monad.Zipで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="8bf2b168e990c6cc77ffe9b3a5c28afdc11ba9ea" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-array-base&quot;&gt;Data.Array.Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-array-base&quot;&gt;Data.Array.Baseで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="33e8086a4cdb0e3352fcbf6f051a8f06136b614e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-array-io-internals&quot;&gt;Data.Array.IO.Internals&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-array-io-internals&quot;&gt;Data.Array.IO.Internalsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="fff9d3821b25d1d6b8ece11c212209cb9e3860e0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-array-storable-internals&quot;&gt;Data.Array.Storable.Internals&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-array-storable-internals&quot;&gt;Data.Array.Storable.Internalsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="a79d40b1027ef5fa568de371c8245cf72b2ce204" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bifoldable&quot;&gt;Data.Bifoldable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bifoldable&quot;&gt;Data.Bifoldableで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="528f092f29093c759842987e8bc8aeb0f68ca44e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bifunctor&quot;&gt;Data.Bifunctor&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bifunctor&quot;&gt;Data.Bifunctorで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="784931b79af702d9c0faf760d167b70cca8e2a46" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-binary-class&quot;&gt;Data.Binary.Class&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-binary-class&quot;&gt;Data.Binary.Classで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="5ba32a604e4fbb5c02121f730ced3fadab00230c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-binary-generic&quot;&gt;Data.Binary.Generic&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-binary-generic&quot;&gt;Data.Binary.Genericで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="57b457998e2abb6a164a26f61f55e906bf2732f8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-binary-put&quot;&gt;Data.Binary.Put&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-binary-put&quot;&gt;Data.Binary.Putで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="48e1212127f26339fc347b0b387c0c4ca38a27d5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bitraversable&quot;&gt;Data.Bitraversable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bitraversable&quot;&gt;Data.Bitraversableで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="a122dfb1be92b2ca517eb8cfa053b59a25704ec9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bits&quot;&gt;Data.Bits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bits&quot;&gt;Data.Bitsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f3ed9ccb487f0dd5c28cf3e53783a7187b925503" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-builder&quot;&gt;Data.ByteString.Builder&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bytestring-builder&quot;&gt;Data.ByteString.Builderで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="8f5c6c8958392e96cdd473536503b69f6732d8bb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-builder-internal&quot;&gt;Data.ByteString.Builder.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bytestring-builder-internal&quot;&gt;Data.ByteString.Builder.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="6101ae7cf44b974329d91b4da17069c466aafa07" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-internal&quot;&gt;Data.ByteString.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bytestring-internal&quot;&gt;Data.ByteString.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="be19b3d200ad3607e88e6c9d1f9fb73867cfb1dd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-lazy-internal&quot;&gt;Data.ByteString.Lazy.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bytestring-lazy-internal&quot;&gt;Data.ByteString.Lazy.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="b01335230cc86cdea72805b90d8bcdf3171f8957" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-bytestring-short-internal&quot;&gt;Data.ByteString.Short.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-bytestring-short-internal&quot;&gt;Data.ByteString.Short.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="5bc4c71c000dee726ed8bd707086dcf480a9b199" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-complex&quot;&gt;Data.Complex&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-complex&quot;&gt;Data.Complexで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="e6c56ae23c5fe8700d16b3bf6c9c9a3ecf6af60d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-data&quot;&gt;Data.Data&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-data&quot;&gt;Data.Dataで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="aede7f1b878e24a3449d5bbdc8cbbeeb99b7f2ee" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-dynamic&quot;&gt;Data.Dynamic&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-dynamic&quot;&gt;Data.Dynamicで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="6e5e902b6888e3b5460701e96e196615d9f560b8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-either&quot;&gt;Data.Either&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-either&quot;&gt;Data.Eitherで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f193bbd23d8b24a48e7ef312012974ec0bec7302" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-fixed&quot;&gt;Data.Fixed&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-fixed&quot;&gt;Data.Fixedで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="553d7f6f8a62869b04cc3e8182796beb24c2fba8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-foldable&quot;&gt;Data.Foldable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-foldable&quot;&gt;Data.Foldableで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="ce6f06fac20b64c928c404d8d591edd78747f475" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-classes&quot;&gt;Data.Functor.Classes&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-classes&quot;&gt;Data.Functor.Classesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="6728dbe7abc7ac6e4ab0388b846ac55d4e474e9b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-compose&quot;&gt;Data.Functor.Compose&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-compose&quot;&gt;Data.Functor.Composeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f4a378860896cc7edc11b10702e4b13af334f99d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-const&quot;&gt;Data.Functor.Const&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-const&quot;&gt;Data.Functor.Constで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="4913fee43165925ac7a994e54918ee07aadee214" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-constant&quot;&gt;Data.Functor.Constant&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-constant&quot;&gt;Data.Functor.Constantで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="2f1019ab328d855188c345cc827f321fccbcec11" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-contravariant&quot;&gt;Data.Functor.Contravariant&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-contravariant&quot;&gt;Data.Functor.Contravariantで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="b2c078a25fdea9572767758ec19da6dd0c71988d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-identity&quot;&gt;Data.Functor.Identity&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-identity&quot;&gt;Data.Functor.Identityで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="c91c09de6f5f34ae679f9041a67e935a4cc929ef" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-product&quot;&gt;Data.Functor.Product&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-product&quot;&gt;Data.Functor.Productで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="72ab7b6336077da00a21756c97d38936972d0b8b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-reverse&quot;&gt;Data.Functor.Reverse&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-reverse&quot;&gt;Data.Functor.Reverseで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="680b8fdf7f3228e3b7b9d611f80b35a6a9a291ff" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-functor-sum&quot;&gt;Data.Functor.Sum&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-functor-sum&quot;&gt;Data.Functor.Sumで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="dc49743b6fa86c31d6502d121054f12c793b9087" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-graph&quot;&gt;Data.Graph&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-graph&quot;&gt;Data.Graphで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="27b26aa080f9ea3306b3ebf84408d1794c7ce18a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-intset-internal&quot;&gt;Data.IntSet.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-intset-internal&quot;&gt;Data.IntSet.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="d4b878ee28c04131be605bd99382df8d5dcfd23b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-monoid&quot;&gt;Data.Monoid&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-monoid&quot;&gt;Data.Monoidで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="6e8c45077cc0d26e4b5915e6e4fda7d6e5b6e1d1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-ord&quot;&gt;Data.Ord&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-ord&quot;&gt;Data.Ordで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f17764fa8ecb4dce1b5431b653f92df2b29bae09" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-proxy&quot;&gt;Data.Proxy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-proxy&quot;&gt;Data.Proxyで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="393fbc56b056896665e0db2c24ca0e383478b0b1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-semigroup&quot;&gt;Data.Semigroup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-semigroup&quot;&gt;Data.Semigroupで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="aadf72b018e20e380a8bbc530f237e6169befdce" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-semigroup-internal&quot;&gt;Data.Semigroup.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-semigroup-internal&quot;&gt;Data.Semigroup.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="0eafecbafb613cfd772a0117c6120e1c8b0b8a68" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-string&quot;&gt;Data.String&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-string&quot;&gt;Data.Stringで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="338a22364e84c7e4d2c7855dd49ad52937a159ed" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text&quot;&gt;Data.Text&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text&quot;&gt;Data.Textで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="9aaab948dd2dbd6dd0fb194785d513f0109be910" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-encoding&quot;&gt;Data.Text.Encoding&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-encoding&quot;&gt;Data.Text.Encodingで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="e54a8d76bc217565336ae3e1f089405f9e9caa52" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-encoding-error&quot;&gt;Data.Text.Encoding.Error&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-encoding-error&quot;&gt;Data.Text.Encoding.Errorで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="9cbea779bbfb502e4a0a8514a95f1c38fb8b7683" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-foreign&quot;&gt;Data.Text.Foreign&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-foreign&quot;&gt;Data.Text.Foreignで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="7ad75ad0a3e31edcefcc14d939373744eddce296" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-internal-builder&quot;&gt;Data.Text.Internal.Builder&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-internal-builder&quot;&gt;Data.Text.Internal.Builderで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="d1e26d41bcc71f2d6d1eb238ac40c2f7fca95d16" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-internal-fusion-size&quot;&gt;Data.Text.Internal.Fusion.Size&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-internal-fusion-size&quot;&gt;Data.Text.Internal.Fusion.Sizeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="e5802d1e5467a9c436e553481ca60f7c4ca19e2a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-internal-fusion-types&quot;&gt;Data.Text.Internal.Fusion.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-internal-fusion-types&quot;&gt;Data.Text.Internal.Fusion.Typesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="969e6ea75217d749d39f2eaa74dd63d0af62bdca" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-internal-unsafe-shift&quot;&gt;Data.Text.Internal.Unsafe.Shift&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-internal-unsafe-shift&quot;&gt;Data.Text.Internal.Unsafe.Shiftで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="307fe85a9d7d77e86cb0167fbb9b1ca6b7331ede" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-lazy&quot;&gt;Data.Text.Lazy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-lazy&quot;&gt;Data.Text.Lazyで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="0da53578eccfe94e8e13a61e43068366a3bbe112" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-lazy-builder-realfloat&quot;&gt;Data.Text.Lazy.Builder.RealFloat&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-lazy-builder-realfloat&quot;&gt;Data.Text.Lazy.Builder.RealFloatで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="43af77d21a8f701fc389f0f751a73309c74fa2a3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-text-show&quot;&gt;Data.Text.Show&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-text-show&quot;&gt;Data.Text.Showで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="c4e8076e86d9280ca1884ef0ab583127b148260a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-calendar-calendardiffdays&quot;&gt;Data.Time.Calendar.CalendarDiffDays&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-calendar-calendardiffdays&quot;&gt;Data.Time.Calendar.CalendarDiffDaysで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="aada3c948bd6f50e3c41642b48a64db60f123625" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-calendar-days&quot;&gt;Data.Time.Calendar.Days&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-calendar-days&quot;&gt;Data.Time.Calendar.Daysで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="60adb7e9b29ae67e6e4a4368588dfabac5198f24" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-calendar-gregorian&quot;&gt;Data.Time.Calendar.Gregorian&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-calendar-gregorian&quot;&gt;Data.Time.Calendar.Gregorianで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="a051bc3fce5ce305d2f898b46d90a0ac786d2a56" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-calendar-week&quot;&gt;Data.Time.Calendar.Week&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-calendar-week&quot;&gt;Data.Time.Calendar.Weekで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="24c0fe891731f8cfa525684eaea64fd66455e01f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-absolutetime&quot;&gt;Data.Time.Clock.Internal.AbsoluteTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-clock-internal-absolutetime&quot;&gt;Data.Time.Clock.Internal.AbsoluteTimeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="5f525544c026311e78f4dd704c82f5ac66de443d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-difftime&quot;&gt;Data.Time.Clock.Internal.DiffTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-clock-internal-difftime&quot;&gt;Data.Time.Clock.Internal.DiffTimeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="4fa537532689066a31ffff4e785a6c30ce4a8e6e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-nominaldifftime&quot;&gt;Data.Time.Clock.Internal.NominalDiffTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-clock-internal-nominaldifftime&quot;&gt;Data.Time.Clock.Internal.NominalDiffTimeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="3bccf783899e9e197e7ec966500528c655608278" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-systemtime&quot;&gt;Data.Time.Clock.Internal.SystemTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-clock-internal-systemtime&quot;&gt;Data.Time.Clock.Internal.SystemTimeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="dbb1bbc3ceeb648306088142fea4cdb82e668662" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-universaltime&quot;&gt;Data.Time.Clock.Internal.UniversalTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-clock-internal-universaltime&quot;&gt;Data.Time.Clock.Internal.UniversalTimeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="fb350c3188c20246afdeaa674891704d6bac7cbd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-internal-utctime&quot;&gt;Data.Time.Clock.Internal.UTCTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-clock-internal-utctime&quot;&gt;Data.Time.Clock.Internal.UTCTimeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="3b653f156dab45f5528de7fd78d1f20e883225ca" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-clock-tai&quot;&gt;Data.Time.Clock.TAI&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-clock-tai&quot;&gt;Data.Time.Clock.TAIで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="2f93432402d486c4b0e72c50ccd37a5534a3d0b1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-format-instances&quot;&gt;Data.Time.Format.Format.Instances&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-format-format-instances&quot;&gt;Data.Time.Format.Format.Instancesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="76f46fa2d5770ed623bb6ff69ee0a2945cc87e65" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-iso8601&quot;&gt;Data.Time.Format.ISO8601&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-format-iso8601&quot;&gt;Data.Time.Format.ISO8601で&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="8b7a4a789c036f29be5d183d2d6b338242335528" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-locale&quot;&gt;Data.Time.Format.Locale&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-format-locale&quot;&gt;Data.Time.Format.Localeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="fe5e327677fe12bd5a7788d7b1f3715586bf6836" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-parse&quot;&gt;Data.Time.Format.Parse&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-format-parse&quot;&gt;Data.Time.Format.Parseで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="30afdd2d2b1ab66e47885c413982928ba8914fcc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-format-parse-instances&quot;&gt;Data.Time.Format.Parse.Instances&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-format-parse-instances&quot;&gt;Data.Time.Format.Parse.Instancesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="1965d414fb68f7a3e4771e232ad59dcc061c9d2f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-calendardifftime&quot;&gt;Data.Time.LocalTime.Internal.CalendarDiffTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-localtime-internal-calendardifftime&quot;&gt;Data.Time.LocalTime.Internal.CalendarDiffTimeで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="b67c3f78a91f12b737cc1abe6bdbb380bd5aee28" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-localtime&quot;&gt;Data.Time.LocalTime.Internal.LocalTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-localtime-internal-localtime&quot;&gt;Data.Time.LocalTime.Internal.LocalTimeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="a6ef43d8db2542b328f20bb336b03733fdadc922" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-timeofday&quot;&gt;Data.Time.LocalTime.Internal.TimeOfDay&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-localtime-internal-timeofday&quot;&gt;Data.Time.LocalTime.Internal.TimeOfDayで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="233968608065cbe693f16b5f67c51c819c2c63e9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-timezone&quot;&gt;Data.Time.LocalTime.Internal.TimeZone&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-localtime-internal-timezone&quot;&gt;Data.Time.LocalTime.Internal.TimeZoneで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="6a9c6d60b5107ea4f730e9914da4b78b4fd44b29" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-time-localtime-internal-zonedtime&quot;&gt;Data.Time.LocalTime.Internal.ZonedTime&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-time-localtime-internal-zonedtime&quot;&gt;Data.Time.LocalTime.Internal.ZonedTimeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="3ec144a81d4444ee88089ca20a4144c4afd6fc2c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-traversable&quot;&gt;Data.Traversable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-traversable&quot;&gt;Data.Traversableで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="dc4273371ed31c73cb1fb239b021eaebcc9a6cc3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-tree&quot;&gt;Data.Tree&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-tree&quot;&gt;Data.Treeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="5e9282f33eac95463b89b7cdad5289f3a4107edf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-type-coercion&quot;&gt;Data.Type.Coercion&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-type-coercion&quot;&gt;Data.Type.Coercionで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="2607972c3e25ba97b080ca97933829d6e5ff0df9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-type-equality&quot;&gt;Data.Type.Equality&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-type-equality&quot;&gt;Data.Type.Equalityで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="e1dfc48f1dce9870e45da7b9da27e581e9f5fe19" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-unique&quot;&gt;Data.Unique&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-unique&quot;&gt;Data.Uniqueで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="fc461e6906100b70605b16acdcfc0b5292c6451d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-version&quot;&gt;Data.Version&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-version&quot;&gt;Data.Versionで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="74ad645cb7e7e257e25ef5cd3912bcaa0db73eba" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;data-void&quot;&gt;Data.Void&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;data-void&quot;&gt;Data.Voidで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="82eb2e31cb30fa004af52e3871c253d6d448d768" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;foreign-c-error&quot;&gt;Foreign.C.Error&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;foreign-c-error&quot;&gt;Foreign.C.Errorで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="fda110d27b78824892bff40634ff5724247541ea" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;foreign-c-types&quot;&gt;Foreign.C.Typesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="21ae76aa176624892963f50cba7148a4e723cf93" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;foreign-ptr&quot;&gt;Foreign.Ptr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;foreign-ptr&quot;&gt;Foreign.Ptrで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="6e8ee20839bb6654240da7f90b643c9cdd82b547" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;foreign-storable&quot;&gt;Foreign.Storable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;foreign-storable&quot;&gt;Foreign.Storableで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="9df158bfb5e7549c703c9af36f1f4bfd198dbace" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-arr&quot;&gt;GHC.Arr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-arr&quot;&gt;GHC.Arrで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="e887a96e9f72595f3fceb351be893e83aae8daac" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-base&quot;&gt;GHC.Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-base&quot;&gt;GHC.Baseで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="b598d78aaa0f2f605e81a5d764be2f051f166e39" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-byteorder&quot;&gt;GHC.ByteOrder&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-byteorder&quot;&gt;GHC.ByteOrderで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="785904c1167bfbdfa26aeb1b84fd6bea4d73cd35" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-conc-sync&quot;&gt;GHC.Conc.Sync&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-conc-sync&quot;&gt;GHC.Conc.Syncで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="5dbf1375cf2b3f4607d84b6c5cbdb384b8af628d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-enum&quot;&gt;GHC.Enum&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-enum&quot;&gt;GHC.Enumで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="52ad0b6c10b2e5f5227ffa98bae9fb0b8e2866d1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-event-internal&quot;&gt;GHC.Event.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-event-internal&quot;&gt;GHC.Event.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="dfe243a8d1bb753af9bcc9730d21e981cf98c8f0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-event-manager&quot;&gt;GHC.Event.Manager&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-event-manager&quot;&gt;GHC.Event.Managerで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="63d59595b82ad1c127d61ff418e62dfb48629040" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-event-timermanager&quot;&gt;GHC.Event.TimerManager&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-event-timermanager&quot;&gt;GHC.Event.TimerManagerで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="b04343c2682c25c2e30f55cc2afeefc1c281f7b8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-exception&quot;&gt;GHC.Exception&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-exception&quot;&gt;GHC.Exceptionで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="be8f64e7029f952d0b48c825193c99899ba026bc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-exception-type&quot;&gt;GHC.Exception.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-exception-type&quot;&gt;GHC.Exception.Typeで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="192fdc3c251063859e3c1e03f8fd4dcd52ebd6f4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-exts&quot;&gt;GHC.Exts&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-exts&quot;&gt;GHC.Extsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="22097229e3c8469f3aa722df7acd512da8d4e6a6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-fingerprint-type&quot;&gt;GHC.Fingerprint.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-fingerprint-type&quot;&gt;GHC.Fingerprint.Typeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="3570f97fb48050b1c4ded216275ea0f2b3a69440" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-float&quot;&gt;GHC.Float&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-float&quot;&gt;GHC.Floatで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="5f8e0fd60252f003313e6b1bbc3307d65167dfe0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-foreignptr&quot;&gt;GHC.ForeignPtr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-foreignptr&quot;&gt;GHC.ForeignPtrで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="76390de265e2e3976fd13f834a69df94672bc367" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-generics&quot;&gt;GHC.Generics&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-generics&quot;&gt;GHC.Genericsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f40502a0d6b45e570f8414939b6b72033aab227d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ghci&quot;&gt;GHC.GHCi&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-ghci&quot;&gt;GHC.GHCiで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="8a6978473572fcac0a1f53398f048fdb6e48378b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-int&quot;&gt;GHC.Int&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-int&quot;&gt;GHC.Intで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="2babe8566954bb12aa752a8665b26d13275388ee" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-integer-type&quot;&gt;GHC.Integer.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-integer-type&quot;&gt;GHC.Integer.Typeで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="b084eee092b526e00758ceca81c1bbba69f90e9a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io&quot;&gt;GHC.IO&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io&quot;&gt;GHC.IOで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="8a17f5f572e474d1554915f1e4aa5a31ad8d109d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-buffer&quot;&gt;GHC.IO.Buffer&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-buffer&quot;&gt;GHC.IO.Bufferで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="24f31d59fb2567ecd23a30d61e53d2640e19d8d1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-device&quot;&gt;GHC.IO.Device&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-device&quot;&gt;GHC.IO.Deviceで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="8a6b577a1d3fc024ae21f3415354ebc9a7799f4f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-encoding-failure&quot;&gt;GHC.IO.Encoding.Failure&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-encoding-failure&quot;&gt;GHC.IO.Encoding.Failureで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f551752e238b993bb46dc1b83252ca3a73ac10d2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-exception&quot;&gt;GHC.IO.Exception&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-exception&quot;&gt;GHC.IO.Exceptionで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="5bac829434e873e28815ec815ec300d236821389" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-fd&quot;&gt;GHC.IO.FD&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-fd&quot;&gt;GHC.IO.FDで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="448ce0deee7866118225b76f973e0d69a5260ec2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-handle&quot;&gt;GHC.IO.Handle&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-handle&quot;&gt;GHC.IO.Handleで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="ef5a10d35be0117a2be109220272fe2bf729e210" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-handle-lock&quot;&gt;GHC.IO.Handle.Lock&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-handle-lock&quot;&gt;GHC.IO.Handle.Lockで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="a92ee38ea6b54d1d92b2d3b88aafe445253fb12a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-handle-lock-common&quot;&gt;GHC.IO.Handle.Lock.Common&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-handle-lock-common&quot;&gt;GHC.IO.Handle.Lock.Commonで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="41a0e5241140eff076d0b5ac2d5acfeffd617d4d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-handle-types&quot;&gt;GHC.IO.Handle.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-handle-types&quot;&gt;GHC.IO.Handle.Typesで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="21ff21ac93ba630a831b4edd13eb06785b10bc11" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-io-iomode&quot;&gt;GHC.IO.IOMode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-io-iomode&quot;&gt;GHC.IO.IOModeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="24bc368adedd77ec755cbd9ee90244d08e9fce6a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ioarray&quot;&gt;GHC.IOArray&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-ioarray&quot;&gt;GHC.IOArrayで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="69eab9c3f2232447ea682ace20e28f20f8e16a8c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ioref&quot;&gt;GHC.IORef&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-ioref&quot;&gt;GHC.IORefで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="7c08283df56cad5ae4b8d523f947f8948e92040a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ix&quot;&gt;GHC.Ix&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-ix&quot;&gt;GHC.Ixで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="474cc386548ad7f86ae5d2360a460afa5ba4776d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-maybe&quot;&gt;GHC.Maybe&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-maybe&quot;&gt;GHC.Maybeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="e13cef80cbdfb796439d42004734d08078be1cc8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-mvar&quot;&gt;GHC.MVar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-mvar&quot;&gt;GHC.MVarで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="b03425832656fa5fd811dccad754c8e3a02ffbbf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-natural&quot;&gt;GHC.Natural&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-natural&quot;&gt;GHC.Naturalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="a7da3358ca5cc547ba57e3e2b7e9a980483b0d2b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-num&quot;&gt;GHC.Num&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-num&quot;&gt;GHC.Numで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="7bf28569a8c766615ea5c7fecad6653aa9024d53" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-ptr&quot;&gt;GHC.Ptr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-ptr&quot;&gt;GHC.Ptrで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="ae4c556ad22cd48c7fd7c15cc074c07fbef196f6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-read&quot;&gt;GHC.Read&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-read&quot;&gt;GHC.Readで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="d18937c2518d454b2c2cc66493b00f6d7570d848" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-real&quot;&gt;GHC.Real&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-real&quot;&gt;GHC.Realで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f914494331110d07942dd08235d5088fa46fb909" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-rts-flags&quot;&gt;GHC.RTS.Flags&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-rts-flags&quot;&gt;GHC.RTS.Flagsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="3b0fc1faae93e15ae15929682dcb28eaee1670b9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-show&quot;&gt;GHC.Show&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-show&quot;&gt;GHC.Showで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="78844b9a7dadd03fbd69a74dd2b8e66b611b0637" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-st&quot;&gt;GHC.ST&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-st&quot;&gt;GHC.STで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="7e046eb2146e0cf778992eb417a34b55bc1c05af" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stable&quot;&gt;GHC.Stable&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-stable&quot;&gt;GHC.Stableで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="9da75d45401dd8f7e389ee402a2e007a7780800f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stablename&quot;&gt;GHC.StableName&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-stablename&quot;&gt;GHC.StableNameで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="a2e31fd61815cffa28275a4a64c0037ce236b9f8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stack-types&quot;&gt;GHC.Stack.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-stack-types&quot;&gt;GHC.Stack.Typesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="bee0214639da0b97eb60fe737e58efdcce0869c4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-staticptr&quot;&gt;GHC.StaticPtr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-staticptr&quot;&gt;GHC.StaticPtrで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="6442f5f054736524b9833cffe1db5d13debe8170" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stats&quot;&gt;GHC.Stats&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-stats&quot;&gt;GHC.Statsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="fe53f76fbf50f75e33baf8786d283118d4d48969" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-stref&quot;&gt;GHC.STRef&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-stref&quot;&gt;GHC.STRefで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="44a1ce2445b7704129aeaebb1e299c9690f1be6c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-typelits&quot;&gt;GHC.TypeLits&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-typelits&quot;&gt;GHC.TypeLitsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="918bfa4dd91e950051328a88cdc4bbd2f9c74909" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-typenats&quot;&gt;GHC.TypeNats&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-typenats&quot;&gt;GHC.TypeNatsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="eeca8524082d3a32acbbcedd108fc5c697f12eed" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-unicode&quot;&gt;GHC.Unicode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-unicode&quot;&gt;GHC.Unicodeで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="dcd1029f8124d49e0bc7f77ec957eac894eb6415" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghc-word&quot;&gt;GHC.Word&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghc-word&quot;&gt;GHC.Wordで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="d0dc4a0b334f7caf289183ef346c4583a9ddeb84" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghci-message&quot;&gt;GHCi.Message&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghci-message&quot;&gt;GHCi.Messageで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="841b67f32a9b94ab752ce6c1bf748a7c91d36b2b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghci-remotetypes&quot;&gt;GHCi.RemoteTypes&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghci-remotetypes&quot;&gt;GHCi.RemoteTypesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="71217839cec01d562cc0567cfd5565711ac5be73" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghci-resolvedbco&quot;&gt;GHCi.ResolvedBCO&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghci-resolvedbco&quot;&gt;GHCi.ResolvedBCOで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="95542f362de4081829e46a47a67567ac3d86959d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;ghci-th&quot;&gt;GHCi.TH&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ghci-th&quot;&gt;GHCi.THで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="efdca61d9f0c0527f2cc0ab824491239996706d7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html&quot;&gt;Control.Exception.Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html&quot;&gt;Control.Exception.Baseで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="507b53ef94469078b769f35f48fe9181c6946131" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Data-Typeable-Internal.html&quot;&gt;Data.Typeable.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Data-Typeable-Internal.html&quot;&gt;Data.Typeable.Internalで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="090cef9706b853cfc50c85b56812945c37476677" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/GHC-IO-Encoding-Types.html&quot;&gt;GHC.IO.Encoding.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/GHC-IO-Encoding-Types.html&quot;&gt;GHC.IO.Encoding.Typesで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="70c8dc23be39dbfc8119f3f9dc0b52ab90350eb9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/binary-0.8.8.0/Data-Binary-Get-Internal.html&quot;&gt;Data.Binary.Get.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/binary-0.8.8.0/Data-Binary-Get-Internal.html&quot;&gt;Data.Binary.Get.Internalで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="4bd6447147db3c22cc2312f633782d854d1f2629" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-IntMap-Internal.html&quot;&gt;Data.IntMap.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-IntMap-Internal.html&quot;&gt;Data.IntMap.Internalで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="6c94def961d4c606af5cbde0cb7f9e7068f7feb4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html&quot;&gt;Data.Map.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html&quot;&gt;Data.Map.Internalで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="fe73217bdf523e394688dc3a87cf49888f8ecf38" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html&quot;&gt;Data.Sequence.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html&quot;&gt;Data.Sequence.Internalで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="2dd06003378a943e0c5a7d6e936840009a39e511" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Set-Internal.html&quot;&gt;Data.Set.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Set-Internal.html&quot;&gt;Data.Set.Internalで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="57070f58add074649fce8a225a368ea9ef46a547" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-boot-th-8.10.2/GHC-ForeignSrcLang-Type.html&quot;&gt;GHC.ForeignSrcLang.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-boot-th-8.10.2/GHC-ForeignSrcLang-Type.html&quot;&gt;GHC.ForeignSrcLang.Typeで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="7a536437a45df1b87deeca8798b5ffffcc58222f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-boot-th-8.10.2/GHC-LanguageExtensions-Type.html&quot;&gt;GHC.LanguageExtensions.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-boot-th-8.10.2/GHC-LanguageExtensions-Type.html&quot;&gt;GHC.LanguageExtensions.Typeで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="cf165824efb2fefd016c29ff370351dc45948903" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Classes.html&quot;&gt;GHC.Classes&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Classes.html&quot;&gt;GHC.Classesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="3bac574f04ee37ed85f960f0cb6d6f3760fac365" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/unix-2.7.2.2/System-Posix-Process-Internals.html&quot;&gt;System.Posix.Process.Internals&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/unix-2.7.2.2/System-Posix-Process-Internals.html&quot;&gt;System.Posix.Process.Internalsで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="5b3a735048ab6cc6c2f029fa7f45640da05049a2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html&quot;&gt;Control.Exception.Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html&quot;&gt;Control.Exception.Baseで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="03e5aac50a59f399f334d6bb7c9fa00aafa1a7d4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Data-Typeable-Internal.html&quot;&gt;Data.Typeable.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Data-Typeable-Internal.html&quot;&gt;Data.Typeable.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="9222312d8767eb61173ec3602d630506bfe71345" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html&quot;&gt;GHC.IO.Encoding.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html&quot;&gt;GHC.IO.Encoding.Typesで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="7edac87e64577a5d345384d0db7b06acbe155061" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/binary-0.8.7.0/Data-Binary-Get-Internal.html&quot;&gt;Data.Binary.Get.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/binary-0.8.7.0/Data-Binary-Get-Internal.html&quot;&gt;Data.Binary.Get.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="dde4291117674bc9dbf05c614e8b9bdbbd73c1e7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-IntMap-Internal.html&quot;&gt;Data.IntMap.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-IntMap-Internal.html&quot;&gt;Data.IntMap.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="cabd8ebd6457f2b1a620ae2b4edbaa391a1be030" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html&quot;&gt;Data.Map.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html&quot;&gt;Data.Map.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="80b5dc97449865c0e964542c4cb16d8a5e03122b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html&quot;&gt;Data.Sequence.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html&quot;&gt;Data.Sequence.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="872c9226a52be8e1d66cc379a9126b90e21fb77a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Set-Internal.html&quot;&gt;Data.Set.Internal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Set-Internal.html&quot;&gt;Data.Set.Internalで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="0e0c9bc848e007e39a34222ede9adcd1c57a15a8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-boot-th-8.8.3/GHC-ForeignSrcLang-Type.html&quot;&gt;GHC.ForeignSrcLang.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-boot-th-8.8.3/GHC-ForeignSrcLang-Type.html&quot;&gt;GHC.ForeignSrcLang.Typeで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="dfaec02ec6b4c33c7335e731868e78964e563e6e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-boot-th-8.8.3/GHC-LanguageExtensions-Type.html&quot;&gt;GHC.LanguageExtensions.Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-boot-th-8.8.3/GHC-LanguageExtensions-Type.html&quot;&gt;GHC.LanguageExtensions.Typeで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="648ca89d64aa5f738d2accd8c52632382ac02737" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Classes.html&quot;&gt;GHC.Classes&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Classes.html&quot;&gt;GHC.Classesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="9d5ca4597c7ebb653cc23c3b399ad8d918e16e3c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/unix-2.7.2.2/System-Posix-Process-Internals.html&quot;&gt;System.Posix.Process.Internals&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/unix-2.7.2.2/System-Posix-Process-Internals.html&quot;&gt;System.Posix.Process.Internalsで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="d8806a05762a9619e68738bb367db2864fbfa42e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;language-haskell-th-ppr&quot;&gt;Language.Haskell.TH.Ppr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;language-haskell-th-ppr&quot;&gt;Language.Haskell.TH.Pprで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="45006e9b03867f6aeef3594cea0c932689c2a7f0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;language-haskell-th-pprlib&quot;&gt;Language.Haskell.TH.PprLib&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;language-haskell-th-pprlib&quot;&gt;Language.Haskell.TH.PprLibで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="7d22753b58dddce23e17b3e1bc3fabab7c588e8a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;language-haskell-th-syntax&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;language-haskell-th-syntax&quot;&gt;Language.Haskell.TH.Syntaxで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="2ee9fc93d28773ee8867d98216e5016242af8247" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-getopt&quot;&gt;System.Console.GetOpt&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-getopt&quot;&gt;System.Console.GetOpt&lt;/a&gt;で定義</target>
        </trans-unit>
        <trans-unit id="3bdf20f11811643b8d9c2c07b0ce52e1471eefbc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-completion&quot;&gt;System.Console.Haskeline.Completion&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-haskeline-completion&quot;&gt;System.Console.Haskeline.Completionで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="9c25546da44c9e18b585e4260d0e93e91c72b33f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-history&quot;&gt;System.Console.Haskeline.History&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-haskeline-history&quot;&gt;System.Console.Haskeline.Historyで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="5fd4dc2a85e62046ff81e920cce78667f0bf3bd5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-inputt&quot;&gt;System.Console.Haskeline.InputT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-haskeline-inputt&quot;&gt;System.Console.Haskeline.InputTで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="b30c9cc05bcc84451b9d9dde397e37eb90006f25" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-monadexception&quot;&gt;System.Console.Haskeline.MonadException&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-haskeline-monadexception&quot;&gt;System.Console.Haskeline.MonadExceptionで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="df6b5ff6c23f074e5c6b83779b3bda047c700c3a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-prefs&quot;&gt;System.Console.Haskeline.Prefs&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-haskeline-prefs&quot;&gt;System.Console.Haskeline.Prefs&lt;/a&gt;で定義</target>
        </trans-unit>
        <trans-unit id="e2806c25978e017225dfec7410aec5ed0f33148f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-haskeline-term&quot;&gt;System.Console.Haskeline.Term&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-haskeline-term&quot;&gt;System.Console.Haskeline.Termで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="79c21866a8f06dfb2bbd365f0036439775b15d22" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-terminfo-base&quot;&gt;System.Console.Terminfo.Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-terminfo-base&quot;&gt;System.Console.Terminfo.Baseで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="35193581351d8433ff3025a496b5e30635feff00" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-console-terminfo-color&quot;&gt;System.Console.Terminfo.Color&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-console-terminfo-color&quot;&gt;System.Console.Terminfo.Colorで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="9b33af59af873f57a8ca66dfc37436e1342d6813" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-directory-internal-common&quot;&gt;System.Directory.Internal.Common&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-directory-internal-common&quot;&gt;System.Directory.Internal.Commonで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="e154d61a0507623ea43812d2a58d9b6fddba4f54" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-dynamiclinker-prim&quot;&gt;System.Posix.DynamicLinker.Prim&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-posix-dynamiclinker-prim&quot;&gt;System.Posix.DynamicLinker.Primで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="cd4edf35a994595bfcb4f3180d9422b44415ab5d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-fcntl&quot;&gt;System.Posix.Fcntl&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-posix-fcntl&quot;&gt;System.Posix.Fcntlで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="3c7e267436d9afd19ef8953e026388df05c6a2ea" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-resource&quot;&gt;System.Posix.Resource&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-posix-resource&quot;&gt;System.Posix.Resourceで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="92528c09ad03d445dfdc2d7a40a3faefbe0d9928" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-types&quot;&gt;System.Posix.Types&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-posix-types&quot;&gt;System.Posix.Typesで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="2c2f5c5f56defd7192d1c7bf80d223d67b11f77a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-posix-user&quot;&gt;System.Posix.User&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-posix-user&quot;&gt;System.Posix.Userで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="14026564f0de381353f02e5a1ec33ccbcb79a22a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-process-common&quot;&gt;System.Process.Common&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-process-common&quot;&gt;System.Process.Commonで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="72c4f3559eee9df4a4bdc7b9b47d751dbaea4f38" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-timeout&quot;&gt;System.Timeout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-timeout&quot;&gt;System.Timeoutで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="bacb50c67d8a04e151589f7eb0836460dd9355e0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-automation-input&quot;&gt;System.Win32.Automation.Input&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-win32-automation-input&quot;&gt;System.Win32.Automation.Inputで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="91a13626edd3089b6f78391ce793dbf1904a1532" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-automation-input-mouse&quot;&gt;System.Win32.Automation.Input.Mouse&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-win32-automation-input-mouse&quot;&gt;System.Win32.Automation.Input.Mouseで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="ab7b1c8911ebc9520a20c592576d3985721aab9a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-file&quot;&gt;System.Win32.File&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-win32-file&quot;&gt;System.Win32.Fileで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="eb78450d65393862784e66a76a05cc21269ed72f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-info-version&quot;&gt;System.Win32.Info.Version&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-win32-info-version&quot;&gt;System.Win32.Info.Versionで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="830443d4f7af1671a343ec39a6e095c7f419f4ee" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;system-win32-simplemapi&quot;&gt;System.Win32.SimpleMAPI&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system-win32-simplemapi&quot;&gt;System.Win32.SimpleMAPIで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="8b4645ec52e96dec2dc509d9a7d5272217d8176f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsec-error&quot;&gt;Text.Parsec.Error&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-parsec-error&quot;&gt;Text.Parsec.Errorで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="b76c9166e075dca47e1266e3fffb751766d34eb3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsec-pos&quot;&gt;Text.Parsec.Pos&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-parsec-pos&quot;&gt;Text.Parsec.Posで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="659ac41858b16fe7d0276bb7d4d65c59c6741ae6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsec-prim&quot;&gt;Text.Parsec.Prim&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-parsec-prim&quot;&gt;Text.Parsec.Primで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="d8ce413d76b2ee4ca88d86c68bbd1fa1b84b6465" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsercombinators-readp&quot;&gt;Text.ParserCombinators.ReadP&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-parsercombinators-readp&quot;&gt;Text.ParserCombinators.ReadPで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="6176ffaff42639f1d816126a3568a7cd3d791283" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-parsercombinators-readprec&quot;&gt;Text.ParserCombinators.ReadPrec&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-parsercombinators-readprec&quot;&gt;Text.ParserCombinators.ReadPrecで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="5c8667ae642fb2e7f7f9736460deaefe559f9327" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-prettyprint-annotated-hughespj&quot;&gt;Text.PrettyPrint.Annotated.HughesPJ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-prettyprint-annotated-hughespj&quot;&gt;Text.PrettyPrint.Annotated.HughesPJで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="52da3be7d88654fdb841e5a1896de2a835667495" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-prettyprint-annotated-hughespjclass&quot;&gt;Text.PrettyPrint.Annotated.HughesPJClass&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-prettyprint-annotated-hughespjclass&quot;&gt;Text.PrettyPrint.Annotated.HughesPJClassで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="fd803acc4cbf625937fd727de63bf933b4d5e411" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-prettyprint-hughespj&quot;&gt;Text.PrettyPrint.HughesPJ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-prettyprint-hughespj&quot;&gt;Text.PrettyPrint.HughesPJで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="a18adb5287e0519dd50aa66b5532242f7d9b3677" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-prettyprint-hughespjclass&quot;&gt;Text.PrettyPrint.HughesPJClass&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-prettyprint-hughespjclass&quot;&gt;Text.PrettyPrint.HughesPJClassで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="17db054bc809ebc8aefba12852ef17b5778b00f5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-printf&quot;&gt;Text.Printf&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-printf&quot;&gt;Text.Printfで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="37f802642e8f3e3585dd801aa0e51bdbc9d36e40" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-read-lex&quot;&gt;Text.Read.Lex&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-read-lex&quot;&gt;Text.Read.Lexで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="1f831f1c11f790c03cf8fea822975cc957b7a031" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-show-functions&quot;&gt;Text.Show.Functions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-show-functions&quot;&gt;Text.Show.Functionsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="2d0f0d6149ea551886d0f5d7537b49c331efd09e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-xhtml-debug&quot;&gt;Text.XHtml.Debug&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-xhtml-debug&quot;&gt;Text.XHtml.Debugで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="cceefc38a36e7f1290512b45457089eb16b3fda9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-xhtml-extras&quot;&gt;Text.XHtml.Extras&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-xhtml-extras&quot;&gt;Text.XHtml.Extrasで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="726f7091d259ab2acd1f6fcc18e5bdc92b229d0b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-xhtml-internals&quot;&gt;Text.XHtml.Internals&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-xhtml-internals&quot;&gt;Text.XHtml.Internalsで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="aedef91b7633244f32a120c647b9ed8cf4c5e390" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;text-xhtml-table&quot;&gt;Text.XHtml.Table&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;text-xhtml-table&quot;&gt;Text.XHtml.Tableで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="f6936f6c55d8f3df715b9c6d76c0e7fad1d73fae" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;trace-hpc-mix&quot;&gt;Trace.Hpc.Mix&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;trace-hpc-mix&quot;&gt;Trace.Hpc.Mixで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="ed27984e141f65150271d79f12c4c60d16ac050c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;trace-hpc-tix&quot;&gt;Trace.Hpc.Tix&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;trace-hpc-tix&quot;&gt;Trace.Hpc.Tixで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="dcac20b347297fec4870a99a62aea0d7597e110b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;trace-hpc-util&quot;&gt;Trace.Hpc.Util&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;trace-hpc-util&quot;&gt;Trace.Hpc.Utilで&lt;/a&gt;定義</target>
        </trans-unit>
        <trans-unit id="de635231469414804de1ba6508d086ea2019a53f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;utils-containers-internal-bitqueue&quot;&gt;Utils.Containers.Internal.BitQueue&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;utils-containers-internal-bitqueue&quot;&gt;Utils.Containers.Internal.BitQueueで&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="548143259c39affc65a3f18775be20f0876215f3" translate="yes" xml:space="preserve">
          <source>Defines a macro to be applied to the Haskell source. Parameter names are comma-separated, not inside parens. Such macro is invoked as other &lt;code&gt;#&lt;/code&gt;-constructs, starting with &lt;code&gt;#name&lt;/code&gt;. The definition will be put in the C program inside parens as arguments of &lt;code&gt;printf&lt;/code&gt;. To refer to a parameter, close the quote, put a parameter name and open the quote again, to let C string literals concatenate. Or use &lt;code&gt;printf&lt;/code&gt;&amp;lsquo;s format directives. Values of arguments must be given as strings, unless the macro stringifies them itself using the C preprocessor&amp;rsquo;s &lt;code&gt;#parameter&lt;/code&gt; syntax.</source>
          <target state="translated">Haskellソースに適用されるマクロを定義します。パラメーター名は、括弧内ではなく、コンマ区切りです。そのようなマクロは、他のように呼び出された &lt;code&gt;#&lt;/code&gt; 1から始まる、記法 &lt;code&gt;#name&lt;/code&gt; 。定義は、 &lt;code&gt;printf&lt;/code&gt; の引数として括弧内のCプログラムに配置されます。パラメータを参照するには、引用符を閉じてパラメータ名を入力し、もう一度引用符を開いて、C文字列リテラルを連結します。または、 &lt;code&gt;printf&lt;/code&gt; のフォーマットディレクティブを使用します。引数の値は、マクロがCプリプロセッサの &lt;code&gt;#parameter&lt;/code&gt; 構文を使用してそれ自体を文字列化しない限り、文字列として指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="856b7022cc3fc506ac54a842d5f81f468c42e5cc" translate="yes" xml:space="preserve">
          <source>Defines a macro to be applied to the Haskell source. Parameter names are comma-separated, not inside parens. Such macro is invoked as other &lt;code&gt;#&lt;/code&gt;-constructs, starting with &lt;code&gt;#name&lt;/code&gt;. The definition will be put in the C program inside parens as arguments of &lt;code&gt;printf&lt;/code&gt;. To refer to a parameter, close the quote, put a parameter name and open the quote again, to let C string literals concatenate. Or use &lt;code&gt;printf&lt;/code&gt;&amp;rsquo;s format directives. Values of arguments must be given as strings, unless the macro stringifies them itself using the C preprocessor&amp;rsquo;s &lt;code&gt;#parameter&lt;/code&gt; syntax.</source>
          <target state="translated">Haskellソースに適用されるマクロを定義します。パラメーター名は、パラメーター内ではなく、コンマで区切られています。そのようなマクロは、他のように呼び出された &lt;code&gt;#&lt;/code&gt; 1から始まる、記法 &lt;code&gt;#name&lt;/code&gt; 。定義は、 &lt;code&gt;printf&lt;/code&gt; の引数としてparens内のCプログラムに配置されます。パラメータを参照するには、引用符を閉じ、パラメータ名を入力して再度引用符を開き、C文字列リテラルを連結します。または、 &lt;code&gt;printf&lt;/code&gt; のフォーマットディレクティブを使用します。マクロがCプリプロセッサの &lt;code&gt;#parameter&lt;/code&gt; 構文を使用して引数の値自体を文字列化しない限り、引数の値は文字列として指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="337219b8017f6e3901f09de41288884966bcbced" translate="yes" xml:space="preserve">
          <source>Defines a total ordering on a type as per &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; に従って、型の全体的な順序を定義します。</target>
        </trans-unit>
        <trans-unit id="ec06cbe93b74d2bf02c2a0f0181f042a49a369fb" translate="yes" xml:space="preserve">
          <source>Defines the exit codes that a program can return.</source>
          <target state="translated">プログラムが返すことができる終了コードを定義します。</target>
        </trans-unit>
        <trans-unit id="e004251e8479de822a929ee4db3ae66fec9b1588" translate="yes" xml:space="preserve">
          <source>Defining a particular instance is now as simple as saying</source>
          <target state="translated">特定のインスタンスの定義は、次のように言うだけで簡単になりました。</target>
        </trans-unit>
        <trans-unit id="07bbabba2767e48802fa0f6eba85fe141f331ba9" translate="yes" xml:space="preserve">
          <source>Defining datatype-generic functions</source>
          <target state="translated">データ型-汎用関数の定義</target>
        </trans-unit>
        <trans-unit id="8e2d2c9b9b2c6ec25e38219ce48e783855483642" translate="yes" xml:space="preserve">
          <source>Definition of a Proxy type (poly-kinded in GHC)</source>
          <target state="translated">プロキシ型の定義(GHCではポリキインド)</target>
        </trans-unit>
        <trans-unit id="e3781f414440de1e13f1687f4640c8c41c723e91" translate="yes" xml:space="preserve">
          <source>Definition of character</source>
          <target state="translated">文字の定義</target>
        </trans-unit>
        <trans-unit id="5f6789175d50ca62a576adb6becabc0d8ef276ee" translate="yes" xml:space="preserve">
          <source>Definition of propositional equality &lt;code&gt;(&lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt;)&lt;/code&gt;. Pattern-matching on a variable of type &lt;code&gt;(a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)&lt;/code&gt; produces a proof that &lt;code&gt;a '~' b&lt;/code&gt;.</source>
          <target state="translated">命題平等の定義 &lt;code&gt;(&lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt;)&lt;/code&gt; 。 タイプ &lt;code&gt;(a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)&lt;/code&gt; 変数のパターンマッチングは、a &lt;code&gt;a '~' b&lt;/code&gt; であることの証明を生成します。</target>
        </trans-unit>
        <trans-unit id="91c985d76d09aac5a0ebe08a1227c25f57c7b79a" translate="yes" xml:space="preserve">
          <source>Definition of representational equality (&lt;code&gt;&lt;a href=&quot;data-type-coercion#t:Coercion&quot;&gt;Coercion&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">表現的平等の定義（ &lt;code&gt;&lt;a href=&quot;data-type-coercion#t:Coercion&quot;&gt;Coercion&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a2ad566aa48d75e869e0c3f6a3732f5cb9790bb1" translate="yes" xml:space="preserve">
          <source>Definition of the generic representation types</source>
          <target state="translated">一般的な表現型の定義</target>
        </trans-unit>
        <trans-unit id="8ae8e4716d9ada48a95470d8bc20527701874b17" translate="yes" xml:space="preserve">
          <source>Definitions for the &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad and its friends.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; モナドとその仲間の定義。</target>
        </trans-unit>
        <trans-unit id="13e7a0925683dfc3e6cf46fe66aacbdd6ee02e0e" translate="yes" xml:space="preserve">
          <source>Deian Stefan &amp;lt;deian@cs.stanford.edu&amp;gt;</source>
          <target state="translated">Deian Stefan &amp;lt;deian@cs.stanford.edu&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5085f9c9884679e2abbcf4c4316c1f89fa3178dc" translate="yes" xml:space="preserve">
          <source>Delegate control-C handling. Use this for interactive console processes to let them handle control-C themselves (see below for details).</source>
          <target state="translated">control-Cの処理を委任します。これは対話型のコンソールプロセスに使用して、control-Cを自分たちで処理できるようにします (詳細は以下を参照してください)。</target>
        </trans-unit>
        <trans-unit id="4402b950b091b6e155c07442990bfcbc9f4f6add" translate="yes" xml:space="preserve">
          <source>Delete one or more breakpoints by number (use &lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt;&lt;code&gt;:show breaks&lt;/code&gt;&lt;/a&gt; to see the number of each breakpoint). The &lt;code&gt;*&lt;/code&gt; form deletes all the breakpoints.</source>
          <target state="translated">番号で1つ以上のブレークポイントを削除します（各ブレークポイントの番号を確認するには、&lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt; &lt;code&gt;:show breaks&lt;/code&gt; &lt;/a&gt;を使用します）。 &lt;code&gt;*&lt;/code&gt; フォームは、すべてのブレークポイントを削除します。</target>
        </trans-unit>
        <trans-unit id="12cdde96d0d70f02c9207fdbfebdd209d208088e" translate="yes" xml:space="preserve">
          <source>Delete the drive, if it exists.</source>
          <target state="translated">ドライブが存在する場合は、そのドライブを削除します。</target>
        </trans-unit>
        <trans-unit id="8ab906da44c7fff4202275d6362da2b15e83b3b1" translate="yes" xml:space="preserve">
          <source>Delete the semaphore with the given name.</source>
          <target state="translated">与えられた名前のセマフォを削除します。</target>
        </trans-unit>
        <trans-unit id="690b03848be456d1dc969aa15d3de8d6ee4aceb7" translate="yes" xml:space="preserve">
          <source>Delete the shared memory object with the given name.</source>
          <target state="translated">指定された名前の共有メモリオブジェクトを削除します。</target>
        </trans-unit>
        <trans-unit id="e5760a885df762d59ffdb1273af2f2f20823eb16" translate="yes" xml:space="preserve">
          <source>Deletion</source>
          <target state="translated">Deletion</target>
        </trans-unit>
        <trans-unit id="5cdaef2b804ee0628603ce6daa12b314ac2c47ea" translate="yes" xml:space="preserve">
          <source>Deletion/Update</source>
          <target state="translated">Deletion/Update</target>
        </trans-unit>
        <trans-unit id="07d0ea439ef27c51c496e2befab2d01a0406fc30" translate="yes" xml:space="preserve">
          <source>Delimited continuation operators are taken from Kenichi Asai and Oleg Kiselyov's tutorial at CW 2011, &quot;Introduction to programming with shift and reset&quot; (&lt;a href=&quot;http://okmij.org/ftp/continuations/#tutorial&quot;&gt;http://okmij.org/ftp/continuations/#tutorial&lt;/a&gt;).</source>
          <target state="translated">区切られた継続演算子は、浅井健一とOleg KiselyovのCW 2011でのチュートリアル「シフトとリセットを使用したプログラミングの概要」（&lt;a href=&quot;http://okmij.org/ftp/continuations/#tutorial&quot;&gt;http://okmij.org/ftp/continuations/#tutorial&lt;/a&gt;）から取得されます。</target>
        </trans-unit>
        <trans-unit id="4fee807155bdc6d26e62b1a2493396a0ce7b43b8" translate="yes" xml:space="preserve">
          <source>Delimited continuations</source>
          <target state="translated">限定された継続</target>
        </trans-unit>
        <trans-unit id="b4e535c5110278046f743276ff95809894ddf5e1" translate="yes" xml:space="preserve">
          <source>Denormal</source>
          <target state="translated">Denormal</target>
        </trans-unit>
        <trans-unit id="95d37de666d072852361b9697e530ed08e474acf" translate="yes" xml:space="preserve">
          <source>Dependencies also help to produce more accurate types for user defined functions, and hence to provide earlier detection of errors, and less cluttered types for programmers to work with. Recall the previous definition for a function &lt;code&gt;f&lt;/code&gt;:</source>
          <target state="translated">依存関係は、ユーザー定義関数のより正確な型を生成するのにも役立ちます。したがって、エラーを早期に検出し、プログラマーが操作する雑然とした型を少なくすることができます。関数 &lt;code&gt;f&lt;/code&gt; の前の定義を思い出してください。</target>
        </trans-unit>
        <trans-unit id="899a1ea3b9e3bbf05219b587fdabcda174851421" translate="yes" xml:space="preserve">
          <source>Dependency-generation mode. In this mode, GHC can be used to generate dependency information suitable for use in a &lt;code&gt;Makefile&lt;/code&gt;. See &lt;a href=&quot;separate_compilation#makefile-dependencies&quot;&gt;Dependency generation&lt;/a&gt;.</source>
          <target state="translated">依存関係生成モード。このモードでは、GHCを使用して &lt;code&gt;Makefile&lt;/code&gt; での使用に適した依存関係情報を生成できます。&lt;a href=&quot;separate_compilation#makefile-dependencies&quot;&gt;依存関係の生成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d1b1c3fcc2a3701c522192678f25f3732794ea9b" translate="yes" xml:space="preserve">
          <source>Depending on your workload and the other activity on the machine, this may or may not result in a performance improvement. We recommend trying it out and measuring the difference.</source>
          <target state="translated">お客様の作業負荷やマシン上の他の活動によっては、パフォーマンスの向上につながる場合もあれば、そうでない場合もあります。一度試してみて、その違いを測定してみることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="57be218ae72d75070c0d1ef3835f37b867fc97e5" translate="yes" xml:space="preserve">
          <source>Deposit bits to a word at locations specified by a mask.</source>
          <target state="translated">マスクで指定された位置にビットをワードにデポジットします。</target>
        </trans-unit>
        <trans-unit id="28b5395483b1a0a0cbdc76dcb0abbfa9e91f207c" translate="yes" xml:space="preserve">
          <source>Deposit bits to lower 16 bits of a word at locations specified by a mask.</source>
          <target state="translated">マスクで指定された位置のワードの下位16ビットにビットをデポジットします。</target>
        </trans-unit>
        <trans-unit id="31dfcf91b0052b013d24f8b42645f6f8d9b95620" translate="yes" xml:space="preserve">
          <source>Deposit bits to lower 32 bits of a word at locations specified by a mask.</source>
          <target state="translated">マスクで指定された位置のワードの下位32ビットにビットをデポジットします。</target>
        </trans-unit>
        <trans-unit id="b8d554eaa2d892e27fed45cd01e74567d55f67a8" translate="yes" xml:space="preserve">
          <source>Deposit bits to lower 8 bits of a word at locations specified by a mask.</source>
          <target state="translated">マスクで指定された位置のワードの下位8ビットにビットをデポジットします。</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="246bb74f28bee156fdef3bc603d3399cdf8d8554" translate="yes" xml:space="preserve">
          <source>Deprecated and unmentionable</source>
          <target state="translated">非推奨で言及されていない</target>
        </trans-unit>
        <trans-unit id="67b899be11715ab36cdec5b579ce021eba8d82ce" translate="yes" xml:space="preserve">
          <source>Deprecated extension to weaken checks intended to ensure instance resolution termination.</source>
          <target state="translated">インスタンス解決の終了を確実にすることを目的としたチェックを弱めるための非推奨の拡張機能。</target>
        </trans-unit>
        <trans-unit id="11d3e633516ce1af098fe4ff7ebdf4e7f3c34f38" translate="yes" xml:space="preserve">
          <source>Deprecated functions</source>
          <target state="translated">非推奨関数</target>
        </trans-unit>
        <trans-unit id="00d7d5a1634686016c0ad41fc613e6d35e8da5ff" translate="yes" xml:space="preserve">
          <source>Deprecated general combining function</source>
          <target state="translated">非推奨の一般的な結合関数</target>
        </trans-unit>
        <trans-unit id="b56856579baada6cadc258bee4e3a8031f2712d3" translate="yes" xml:space="preserve">
          <source>Deprecated name for &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:selectToContT&quot;&gt;selectToContT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:selectToContT&quot;&gt;selectToContT&lt;/a&gt;&lt;/code&gt; の非推奨の名前。</target>
        </trans-unit>
        <trans-unit id="437588858ba15fa833eee95f8c9ae903eed8cd61" translate="yes" xml:space="preserve">
          <source>Deprecated, does nothing. nullary (no parameter) type classes are now enabled using &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt;&lt;code&gt;MultiParamTypeClasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非推奨、何もしません。nullary（パラメーターなし）タイプのクラスは、&lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt; &lt;code&gt;MultiParamTypeClasses&lt;/code&gt; &lt;/a&gt;を使用して有効になりました。</target>
        </trans-unit>
        <trans-unit id="93b79ae1c7ab3d19b128e926a6e896d7c942955c" translate="yes" xml:space="preserve">
          <source>Deprecated. Enable kind polymorphism and datatype promotion.</source>
          <target state="translated">非推奨。kind polymorphism と datatype promotion を有効にします。</target>
        </trans-unit>
        <trans-unit id="1730fc6b2502cccb49319682075af17fe5347ee9" translate="yes" xml:space="preserve">
          <source>Deprecated. Enable most language extensions; see &lt;a href=&quot;glasgow_exts#options-language&quot;&gt;Language options&lt;/a&gt; for exactly which ones.</source>
          <target state="translated">非推奨。ほとんどの言語拡張を有効にします。正確な&lt;a href=&quot;glasgow_exts#options-language&quot;&gt;言語オプション&lt;/a&gt;については、言語オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="b94bb46bb69774a24d0752d8fbda0e50fd0fc969" translate="yes" xml:space="preserve">
          <source>Deprecated: &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; appends the call stack now</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; により呼び出しスタックが追加されます</target>
        </trans-unit>
        <trans-unit id="04ce87b4cd12deb8bf23aac0951d42670ab39da3" translate="yes" xml:space="preserve">
          <source>Deprecated: As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:StrictType&quot;&gt;StrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:BangType&quot;&gt;BangType&lt;/a&gt;&lt;/code&gt;. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bangType&quot;&gt;bangType&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">非推奨： &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt; 以降、 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:StrictType&quot;&gt;StrictType&lt;/a&gt;&lt;/code&gt; はBangTypeに置き換えられ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:BangType&quot;&gt;BangType&lt;/a&gt;&lt;/code&gt; 。代わりに &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bangType&quot;&gt;bangType&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="7c3ccf60b556fb58a3434970e15dec49e841fbdb" translate="yes" xml:space="preserve">
          <source>Deprecated: As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:StrictType&quot;&gt;StrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:BangType&quot;&gt;BangType&lt;/a&gt;&lt;/code&gt;. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprBangType&quot;&gt;pprBangType&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">非推奨： &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt; 以降、 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:StrictType&quot;&gt;StrictType&lt;/a&gt;&lt;/code&gt; はBangTypeに置き換えられ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:BangType&quot;&gt;BangType&lt;/a&gt;&lt;/code&gt; 。代わりに &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprBangType&quot;&gt;pprBangType&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="46df33720c28dd84dabcecfc3bad5e8d0527d43d" translate="yes" xml:space="preserve">
          <source>Deprecated: As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarStrictType&quot;&gt;VarStrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarBangType&quot;&gt;VarBangType&lt;/a&gt;&lt;/code&gt;. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:varBangType&quot;&gt;varBangType&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">非推奨： &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt; 以降、 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarStrictType&quot;&gt;VarStrictType&lt;/a&gt;&lt;/code&gt; はVarBangTypeに置き換えられ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarBangType&quot;&gt;VarBangType&lt;/a&gt;&lt;/code&gt; 。代わりに &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:varBangType&quot;&gt;varBangType&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="fc5fa3fd2c07f144432a09cbe9bd620938fef37d" translate="yes" xml:space="preserve">
          <source>Deprecated: As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarStrictType&quot;&gt;VarStrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarBangType&quot;&gt;VarBangType&lt;/a&gt;&lt;/code&gt;. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprVarBangType&quot;&gt;pprVarBangType&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">非推奨： &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt; 以降、 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarStrictType&quot;&gt;VarStrictType&lt;/a&gt;&lt;/code&gt; はVarBangTypeに置き換えられ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarBangType&quot;&gt;VarBangType&lt;/a&gt;&lt;/code&gt; 。代わりに &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprVarBangType&quot;&gt;pprVarBangType&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="27369f8a125013046843020705bad712eafa340b" translate="yes" xml:space="preserve">
          <source>Deprecated: As of template-haskell-2.10, constraint predicates (Pred) are just types (Type), in keeping with ConstraintKinds. Please see &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:equalityT&quot;&gt;equalityT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">非推奨：template-haskell-2.10以降、制約述語（Pred）は単なる型（Type）であり、ConstraintKindsに準拠しています。 &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:equalityT&quot;&gt;equalityT&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="24267cdd2cb2da28be13fa82976f6ab6ad489237" translate="yes" xml:space="preserve">
          <source>Deprecated: As of template-haskell-2.10, constraint predicates (Pred) are just types (Type), in keeping with ConstraintKinds. Please use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:conT&quot;&gt;conT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:appT&quot;&gt;appT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">非推奨：template-haskell-2.10以降、制約述語（Pred）は単なる型（Type）であり、ConstraintKindsに準拠しています。 &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:conT&quot;&gt;conT&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:appT&quot;&gt;appT&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="524362486ccd9d1fd2a47985e3d7043a035ec9b6" translate="yes" xml:space="preserve">
          <source>Deprecated: Do not use this function</source>
          <target state="translated">非推奨です。この関数を使用しないでください</target>
        </trans-unit>
        <trans-unit id="fb950c290b02e17008623cbd642c0453b8119ba2" translate="yes" xml:space="preserve">
          <source>Deprecated: If you think you know what you are doing, use &lt;code&gt;unsafePerformIO&lt;/code&gt;. If you are sure you know what you are doing, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;. If you enjoy sharing an address space with a malevolent agent of chaos, try &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:accursedUnutterablePerformIO&quot;&gt;accursedUnutterablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">非推奨：自分が何をしているかわかっている場合は、 &lt;code&gt;unsafePerformIO&lt;/code&gt; を使用してください。自分が何をしているかわかっている場合は、 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt; を使用してください。混乱の悪意のあるエージェントとアドレススペースを共有するのを楽しむ場合は、 &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:accursedUnutterablePerformIO&quot;&gt;accursedUnutterablePerformIO&lt;/a&gt;&lt;/code&gt; を試してください。</target>
        </trans-unit>
        <trans-unit id="d782dc22725474b6b861e2f7a5c2979ddeadf4fb" translate="yes" xml:space="preserve">
          <source>Deprecated: If you think you know what you are doing, use &lt;code&gt;unsafePerformIO&lt;/code&gt;. If you are sure you know what you are doing, use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt;. If you enjoy sharing an address space with a malevolent agent of chaos, try &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:accursedUnutterablePerformIO&quot;&gt;accursedUnutterablePerformIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">非推奨：自分が何をしているか知っていると思う場合は、 &lt;code&gt;unsafePerformIO&lt;/code&gt; を使用してください。自分が何をしているかが確実にわかっている場合は、 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafeDupablePerformIO&quot;&gt;unsafeDupablePerformIO&lt;/a&gt;&lt;/code&gt; を使用してください。悪意のある混沌としたエージェントとアドレス空間を共有することを楽しんでいる場合は、 &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:accursedUnutterablePerformIO&quot;&gt;accursedUnutterablePerformIO&lt;/a&gt;&lt;/code&gt; を試してください。</target>
        </trans-unit>
        <trans-unit id="cea6ff0ffe05107ddf6f5770742c45fcaeefbfa5" translate="yes" xml:space="preserve">
          <source>Deprecated: It is an internal function and should never have been exported. Use 'break (== x)' instead. (There are rewrite rules that handle this special case of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">非推奨：これは内部関数であり、エクスポートされるべきではありませんでした。代わりに 'break（== x）'を使用してください。（この特殊な &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; のケースを処理する書き換えルールがあります。）</target>
        </trans-unit>
        <trans-unit id="a64283095497c77fb8a0fb34296ab4c8134ff8ef" translate="yes" xml:space="preserve">
          <source>Deprecated: Please do not use this anymore, use the ordinary &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;. If you need the SIGINT handling, use delegate_ctlc = True (runGenProcess_ is now just an imperfectly emulated stub that probably duplicates or overrides your own signal handling).</source>
          <target state="translated">非推奨：もう使用しないでください。通常の &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt; を使用してください。SIGINT処理が必要な場合は、delegate_ctlc = Trueを使用します（runGenProcess_は、独自の信号処理を複製またはオーバーライドする、不完全にエミュレートされたスタブにすぎません）。</target>
        </trans-unit>
        <trans-unit id="84113d1b47c2c2415d68469c44ceb85c47ce2050" translate="yes" xml:space="preserve">
          <source>Deprecated: Please use &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:maybeParens&quot;&gt;maybeParens&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="translated">非推奨：代わりに &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:maybeParens&quot;&gt;maybeParens&lt;/a&gt;&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="a534244ab642b85ab0f2af16dde445bb53818446" translate="yes" xml:space="preserve">
          <source>Deprecated: Please use &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:maybeParens&quot;&gt;maybeParens&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="translated">非推奨：代わりに &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:maybeParens&quot;&gt;maybeParens&lt;/a&gt;&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="25447db7fb2297f2c852d45d8735aacd9359989c" translate="yes" xml:space="preserve">
          <source>Deprecated: Safe is now the default, please use Control.Monad.ST instead</source>
          <target state="translated">非推奨。セーフがデフォルトになったので、代わりにControl.Monad.STを使用してください。</target>
        </trans-unit>
        <trans-unit id="5d9bbb7622fb96366bac53d84ef01f1bc604efb3" translate="yes" xml:space="preserve">
          <source>Deprecated: Safe is now the default, please use Control.Monad.ST.Lazy instead</source>
          <target state="translated">非推奨。セーフがデフォルトになりましたので、代わりに Control.Monad.ST.Lazy を使用してください。</target>
        </trans-unit>
        <trans-unit id="30b6228674c72cb135b38c2756b15e9168691c66" translate="yes" xml:space="preserve">
          <source>Deprecated: Safe is now the default, please use Foreign.ForeignPtr instead</source>
          <target state="translated">非推奨。Safe がデフォルトになったので、代わりに Foreign.ForeignPtr を使用してください。</target>
        </trans-unit>
        <trans-unit id="1e16e0c54eb9e9fb4539f320a1b8036a55d52dfa" translate="yes" xml:space="preserve">
          <source>Deprecated: Safe is now the default, please use Foreign.Marshal instead</source>
          <target state="translated">非推奨。Safe がデフォルトになりましたので、代わりに Foreign.Marshal を使用してください。</target>
        </trans-unit>
        <trans-unit id="704d9633c0a9e36eb4a6c178610f617389dc89af" translate="yes" xml:space="preserve">
          <source>Deprecated: See GHC ticket #2496</source>
          <target state="translated">非推奨。GHC チケット #2496 を参照してください。</target>
        </trans-unit>
        <trans-unit id="f4eba82979df880ba8e29850542d3b0d37abd2d4" translate="yes" xml:space="preserve">
          <source>Deprecated: The use of color attibutes is deprecated in XHTML 1.0</source>
          <target state="translated">非推奨。XHTML 1.0 では、カラーアティビュートの使用は非推奨とされています。</target>
        </trans-unit>
        <trans-unit id="b9af07fda45da0df376ea0cc1826948fa2325b34" translate="yes" xml:space="preserve">
          <source>Deprecated: This attribute is deprecated in XHTML 1.0</source>
          <target state="translated">廃止予定。この属性は XHTML 1.0 では非推奨です。</target>
        </trans-unit>
        <trans-unit id="5e8e5abba3199458b7c9ea56379fbe9734d9d395" translate="yes" xml:space="preserve">
          <source>Deprecated: This constructor is never used, and will be removed.</source>
          <target state="translated">非推奨。このコンストラクタは決して使用されず、削除されます。</target>
        </trans-unit>
        <trans-unit id="26e5c9f6c8a05c601d166f5b788d5447b1dc9cb0" translate="yes" xml:space="preserve">
          <source>Deprecated: This element is deprecated in XHTML 1.0</source>
          <target state="translated">非推奨。この要素は XHTML 1.0 では非推奨です。</target>
        </trans-unit>
        <trans-unit id="db5706b2f7b2caa46200990622a8f4fad4759986" translate="yes" xml:space="preserve">
          <source>Deprecated: This exception is never used in practice, and will be removed.</source>
          <target state="translated">非推奨です。この例外は実際には使用されることはありませんので、削除されます。</target>
        </trans-unit>
        <trans-unit id="63c73c7b378b387e0763e88a4bceeeb892adf428" translate="yes" xml:space="preserve">
          <source>Deprecated: This function always throws an exception, and will be removed.</source>
          <target state="translated">非推奨。この関数は常に例外をスローし、削除されます。</target>
        </trans-unit>
        <trans-unit id="c33e385a80456b6c714d4425a345543c1a626170" translate="yes" xml:space="preserve">
          <source>Deprecated: This function is scheduled to be replaced by something different in the future, we therefore recommend that you do not use this version and use &lt;code&gt;&lt;a href=&quot;system-posix-process#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">非推奨：この関数は将来、別のものに置き換えられる予定です。そのため、このバージョンを使用 &lt;code&gt;&lt;a href=&quot;system-posix-process#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt;&lt;/code&gt; ず、代わりにcreateProcessGroupForを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7378b846cafb3f483cfb533d2fa0285d45357c9e" translate="yes" xml:space="preserve">
          <source>Deprecated: This function is scheduled to be replaced by something different in the future, we therefore recommend that you do not use this version and use &lt;code&gt;&lt;a href=&quot;system-posix-process#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">非推奨：この関数は将来、別のものに置き換えられる予定です。そのため、このバージョンを使用 &lt;code&gt;&lt;a href=&quot;system-posix-process#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt;&lt;/code&gt; ず、代わりにsetProcessGroupIDOfを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a35b8a8ad1be9bd7f8f44a2515f2b07acd1413d7" translate="yes" xml:space="preserve">
          <source>Deprecated: This function is scheduled to be replaced by something different in the future, we therefore recommend that you do not use this version and use &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">非推奨：この関数は将来、別のものに置き換えられる予定です。そのため、このバージョンを使用 &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt;&lt;/code&gt; ず、代わりにcreateProcessGroupForを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="33d16e33cfe28db6141c894d40b6da802c5cd136" translate="yes" xml:space="preserve">
          <source>Deprecated: This function is scheduled to be replaced by something different in the future, we therefore recommend that you do not use this version and use &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">非推奨：この関数は将来、別のものに置き換えられる予定です。そのため、このバージョンを使用 &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt;&lt;/code&gt; ず、代わりにsetProcessGroupIDOfを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="753130d4e203d167614f6d4143d46518b3c3d548" translate="yes" xml:space="preserve">
          <source>Deprecated: This module now contains no instances and will be removed in the future</source>
          <target state="translated">非推奨。このモジュールにはインスタンスが含まれておらず、将来的には削除される予定です。</target>
        </trans-unit>
        <trans-unit id="b3f00b60749d14ddd277a8cb7802f1c557fa9603" translate="yes" xml:space="preserve">
          <source>Deprecated: This transformer is invalid on most monads</source>
          <target state="translated">非推奨。この変換器はほとんどのモナドでは無効です。</target>
        </trans-unit>
        <trans-unit id="9c75bae1baaa2b545060c1660117b8144143437f" translate="yes" xml:space="preserve">
          <source>Deprecated: This will force all remaining input, don't use it.</source>
          <target state="translated">非推奨です。これは残りの入力をすべて強制的に行いますので、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="0fa2c343f2a5edfc38895e149c34e81bb4ac1c92" translate="yes" xml:space="preserve">
          <source>Deprecated: Use 'findWindow Nothing' instead.</source>
          <target state="translated">非推奨。代わりに 'findWindow Nothing' を使用してください。</target>
        </trans-unit>
        <trans-unit id="e8f0dce9df91fc24425d47d4e77d0953d8384279" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;a href=&quot;control-monad-except&quot;&gt;Control.Monad.Except&lt;/a&gt; instead</source>
          <target state="translated">非推奨：代わりに&lt;a href=&quot;control-monad-except&quot;&gt;Control.Monad.Except&lt;/a&gt;を使用してください</target>
        </trans-unit>
        <trans-unit id="3ef5ca2f0189e7abbe644e1f3ebb1f967527a641" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;a href=&quot;system-process&quot;&gt;System.Process&lt;/a&gt; instead</source>
          <target state="translated">非推奨：代わりに&lt;a href=&quot;system-process&quot;&gt;System.Process&lt;/a&gt;を使用してください</target>
        </trans-unit>
        <trans-unit id="33c1c0132fc3565f7f91a44c35a8129c010d4ce8" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getByteString&quot;&gt;getByteString&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getBytes&quot;&gt;getBytes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getBytes&quot;&gt;getBytes&lt;/a&gt;&lt;/code&gt; の代わりに &lt;code&gt;&lt;a href=&quot;data-binary-get#v:getByteString&quot;&gt;getByteString&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="e78a8a7a0f0007382d4289b097f6e3ede23ad043" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSizeMaybe&quot;&gt;bitSizeMaybe&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-bits#v:finiteBitSize&quot;&gt;finiteBitSize&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="translated">非推奨：代わりに &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSizeMaybe&quot;&gt;bitSizeMaybe&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;data-bits#v:finiteBitSize&quot;&gt;finiteBitSize&lt;/a&gt;&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="9f82b1e2ee957ce1775bb1a94b207ed9bbb9f17c" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinaryWith&quot;&gt;readsBinaryWith&lt;/a&gt;&lt;/code&gt; to define &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadsPrec&quot;&gt;liftReadsPrec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">非推奨：使用 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinaryWith&quot;&gt;readsBinaryWith&lt;/a&gt;&lt;/code&gt; が定義する &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadsPrec&quot;&gt;liftReadsPrec&lt;/a&gt;&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="d674f189e536ec546b41914231b504313e5423a8" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnaryWith&quot;&gt;readsUnaryWith&lt;/a&gt;&lt;/code&gt; to define &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadsPrec&quot;&gt;liftReadsPrec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">非推奨：使用 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnaryWith&quot;&gt;readsUnaryWith&lt;/a&gt;&lt;/code&gt; が定義する &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadsPrec&quot;&gt;liftReadsPrec&lt;/a&gt;&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="832d7d100f01f1fdf015ae415b229312e5b29168" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinaryWith&quot;&gt;showsBinaryWith&lt;/a&gt;&lt;/code&gt; to define &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftShowsPrec&quot;&gt;liftShowsPrec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">非推奨：使用 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinaryWith&quot;&gt;showsBinaryWith&lt;/a&gt;&lt;/code&gt; が定義する &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftShowsPrec&quot;&gt;liftShowsPrec&lt;/a&gt;&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="72d16fbf8ac25cc564c690166bc63353a8ece881" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnaryWith&quot;&gt;showsUnaryWith&lt;/a&gt;&lt;/code&gt; to define &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftShowsPrec&quot;&gt;liftShowsPrec&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">非推奨：使用 &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnaryWith&quot;&gt;showsUnaryWith&lt;/a&gt;&lt;/code&gt; が定義する &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftShowsPrec&quot;&gt;liftShowsPrec&lt;/a&gt;&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="a16b1e14436dd8f55a120dbc5a196776858e87a6" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEvent&quot;&gt;traceEvent&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEventIO&quot;&gt;traceEventIO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEvent&quot;&gt;traceEvent&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEventIO&quot;&gt;traceEventIO&lt;/a&gt;&lt;/code&gt; を使用</target>
        </trans-unit>
        <trans-unit id="c06035f5462368b6b15c0ad9be83de4295d64a79" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; を使用</target>
        </trans-unit>
        <trans-unit id="74c663a41f74d424456c94ec2da384abd9b13bf7" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&lt;/a&gt;. Example usage: 'bang noSourceUnpackedness noSourceStrictness'</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt; を使用してください。&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0を&lt;/a&gt;参照してください。使用例： 'bang noSourceUnpackedness noSourceStrictness'</target>
        </trans-unit>
        <trans-unit id="0d0a1b6645cf42c041d078c4f1cb7764f1f017ba" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&lt;/a&gt;. Example usage: 'bang noSourceUnpackedness sourceStrict'</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt; を使用してください。&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0を&lt;/a&gt;参照してください。使用例： 'bang noSourceUnpackedness sourceStrict'</target>
        </trans-unit>
        <trans-unit id="3c38676e17091dd362fd130a4f8e1d366eabf24d" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&lt;/a&gt;. Example usage: 'bang sourceUnpack sourceStrict'</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt; を使用してください。&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0&quot;&gt;https://ghc.haskell.org/trac/ghc/wiki/Migration/8.0を&lt;/a&gt;参照してください。使用例： 'bang sourceUnpack sourceStrict'</target>
        </trans-unit>
        <trans-unit id="602237e575ded087dae96cbf84f526bf7ec6e54d" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&quot;&gt;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&lt;/a&gt;. Example usage: 'bang noSourceUnpackedness noSourceStrictness'</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt; を使用してください。&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&quot;&gt;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0を&lt;/a&gt;参照してください。使用例： 'bang noSourceUnpackedness noSourceStrictness'</target>
        </trans-unit>
        <trans-unit id="9763cfc1a73e294e8612c5c8cc57200544b3d4c6" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&quot;&gt;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&lt;/a&gt;. Example usage: 'bang noSourceUnpackedness sourceStrict'</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt; を使用してください。&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&quot;&gt;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0を&lt;/a&gt;参照してください。使用例： 'bang noSourceUnpackedness sourceStrict'</target>
        </trans-unit>
        <trans-unit id="9de020188d0ab56b25b4e48e9722533da8c58689" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&quot;&gt;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&lt;/a&gt;. Example usage: 'bang sourceUnpack sourceStrict'</source>
          <target state="translated">非推奨： &lt;code&gt;&lt;a href=&quot;language-haskell-th-lib-internal#v:bang&quot;&gt;bang&lt;/a&gt;&lt;/code&gt; を使用してください。&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0&quot;&gt;https://gitlab.haskell.org/ghc/ghc/wikis/migration/8.0を&lt;/a&gt;参照してください。使用例： 'bang sourceUnpack sourceStrict'</target>
        </trans-unit>
        <trans-unit id="c054d451f03e0fe7b68451e90a3f80d110aa0077" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="translated">非推奨：代わりに &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="b2388c0eec0c4076c7c181343758542e3be3bd69" translate="yes" xml:space="preserve">
          <source>Deprecated: Use &lt;code&gt;&lt;a href=&quot;system-directory#v:pathIsSymbolicLink&quot;&gt;pathIsSymbolicLink&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="translated">非推奨：代わりに &lt;code&gt;&lt;a href=&quot;system-directory#v:pathIsSymbolicLink&quot;&gt;pathIsSymbolicLink&lt;/a&gt;&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="02d8fd2a62c15ff4d3416d9bdc3602dd82081c01" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Control.Monad.Trans.Except instead</source>
          <target state="translated">非推奨。代わりに Control.Monad.Trans.Except を使用してください。</target>
        </trans-unit>
        <trans-unit id="fec41ec3a6dce210c917edb0af6b2031808f905e" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Data.ByteString.Char8.hPutStrLn instead. (Functions that rely on ASCII encodings belong in Data.ByteString.Char8)</source>
          <target state="translated">非推奨。代わりに Data.ByteString.Char8.hPutStrLn を使用してください。(ASCIIエンコーディングに依存する関数はData.ByteString.Char8に属します)</target>
        </trans-unit>
        <trans-unit id="b02c7e4792fa881f7b522fd61737f9d17d13d51c" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Data.ByteString.Char8.putStrLn instead. (Functions that rely on ASCII encodings belong in Data.ByteString.Char8)</source>
          <target state="translated">非推奨。代わりに Data.ByteString.Char8.putStrLn を使用してください。(ASCIIエンコーディングに依存する関数はData.ByteString.Char8に属します)</target>
        </trans-unit>
        <trans-unit id="c19b9ff00dbb5f904737f8d8aae14b610c9e35a9" translate="yes" xml:space="preserve">
          <source>Deprecated: Use Data.ByteString.Lazy.Char8.putStrLn instead. (Functions that rely on ASCII encodings belong in Data.ByteString.Lazy.Char8)</source>
          <target state="translated">非推奨。代わりに Data.ByteString.Lazy.Char8.putStrLn を使用してください。(ASCII エンコーディングに依存する関数は Data.ByteString.Lazy.Char8 に属します)</target>
        </trans-unit>
        <trans-unit id="7e154adc1416fcc5f369659ef8acfc00a8f9691c" translate="yes" xml:space="preserve">
          <source>Deprecated: Use decodeUtf8 instead</source>
          <target state="translated">非推奨。代わりに decodeUtf8 を使用します。</target>
        </trans-unit>
        <trans-unit id="4534c43331de4672237e2e31e26511beae1d3687" translate="yes" xml:space="preserve">
          <source>Deprecated: Use reportError or reportWarning instead</source>
          <target state="translated">非推奨。代わりに reportError または reportWarning を使用してください。</target>
        </trans-unit>
        <trans-unit id="3db141d5473c2b60791d80f8e3e45192c20a8500" translate="yes" xml:space="preserve">
          <source>Deprecated: Use runGetIncremental instead. This function will be removed.</source>
          <target state="translated">非推奨。代わりに runGetIncremental を使用してください。この関数は削除されます。</target>
        </trans-unit>
        <trans-unit id="1b1e78389edeecf3c7a4a427aa14021d0e8fe28f" translate="yes" xml:space="preserve">
          <source>Deprecated: Use selectToContT instead</source>
          <target state="translated">非推奨。代わりに selectToContT を使用します。</target>
        </trans-unit>
        <trans-unit id="287f3eff5b52baac68a6ef50f143d430539cdc35" translate="yes" xml:space="preserve">
          <source>Deprecated: Use text instead</source>
          <target state="translated">非推奨。代わりにテキストを使用</target>
        </trans-unit>
        <trans-unit id="4115316b39dfce8c17d4aa30feffabccc6621ae5" translate="yes" xml:space="preserve">
          <source>Deprecated: Use unfoldr</source>
          <target state="translated">非推奨。unfoldr を使用する</target>
        </trans-unit>
        <trans-unit id="62929b9d0df82739069c397d0cdaa32e2e164b52" translate="yes" xml:space="preserve">
          <source>Deprecated: defaults to True</source>
          <target state="translated">非推奨:デフォルトは True</target>
        </trans-unit>
        <trans-unit id="89f28f6660fb66063bc1b2d12eab576c92222eb9" translate="yes" xml:space="preserve">
          <source>Deprecated: findSubstring is deprecated in favour of breakSubstring.</source>
          <target state="translated">非推奨:findSubstring は breakSubstring の代わりに非推奨です。</target>
        </trans-unit>
        <trans-unit id="f1692126beb3012d73cceff29eec58d781c3bd9b" translate="yes" xml:space="preserve">
          <source>Deprecated: findSubstrings is deprecated in favour of breakSubstring.</source>
          <target state="translated">非推奨:findSubstrings は非推奨です。</target>
        </trans-unit>
        <trans-unit id="bb9fe13a700414a261e1c450f21b8b60623d9755" translate="yes" xml:space="preserve">
          <source>Deprecated: menu generates strange XHTML, and is not flexible enough. Roll your own that suits your needs.</source>
          <target state="translated">Deprecated:menu は変な XHTML を生成し、柔軟性に欠けます。自分のニーズに合ったものをロールしてください。</target>
        </trans-unit>
        <trans-unit id="1c8844f732bc50b435bd69b6cced17f43ad791b5" translate="yes" xml:space="preserve">
          <source>Deprecated: use &quot;parseTimeM True&quot; instead</source>
          <target state="translated">非推奨:代わりに &quot;parseTimeM True&quot; を使用します。</target>
        </trans-unit>
        <trans-unit id="b0b78ecbf27b155d4468bc1b4997696452d98e82" translate="yes" xml:space="preserve">
          <source>Deprecated: use &quot;parseTimeOrError True&quot; instead</source>
          <target state="translated">非推奨:代わりに &quot;parseTimeOrError True&quot; を使用します。</target>
        </trans-unit>
        <trans-unit id="4b8ce4c54bc8def6340101539999801182b6814c" translate="yes" xml:space="preserve">
          <source>Deprecated: use &quot;readSTime True&quot; instead</source>
          <target state="translated">非推奨:代わりに &quot;readSTime True&quot; を使用します。</target>
        </trans-unit>
        <trans-unit id="88abc6f47f2836be4b85caa4c2b444d3248b42f5" translate="yes" xml:space="preserve">
          <source>Deprecated: use &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:mkWeakMVar&quot;&gt;mkWeakMVar&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="translated">非推奨：代わりに &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:mkWeakMVar&quot;&gt;mkWeakMVar&lt;/a&gt;&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="ceeff9bc814b9ae8a32a67d433eddbf7700418f7" translate="yes" xml:space="preserve">
          <source>Deprecated: use &lt;code&gt;&lt;a href=&quot;control-monad#v:void&quot;&gt;void&lt;/a&gt;&lt;/code&gt; instead</source>
          <target state="translated">非推奨：代わりに &lt;code&gt;&lt;a href=&quot;control-monad#v:void&quot;&gt;void&lt;/a&gt;&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="209fb51ea1ccc47da1276a8054804df6ba8aee47" translate="yes" xml:space="preserve">
          <source>Deprecated: use tiGetOutput instead.</source>
          <target state="translated">非推奨:代わりに tiGetOutput を使用してください。</target>
        </trans-unit>
        <trans-unit id="2b420d94e7cf1b10b8595706d2e901d797eea522" translate="yes" xml:space="preserve">
          <source>Dequeue an element, or discover the queue is empty.</source>
          <target state="translated">要素の待ち行列を解除したり、待ち行列が空であることを発見したりします。</target>
        </trans-unit>
        <trans-unit id="2702df1a174623fcd23351756efd3ef89a482612" translate="yes" xml:space="preserve">
          <source>Dereferences a static pointer.</source>
          <target state="translated">静的ポインタを参照します。</target>
        </trans-unit>
        <trans-unit id="e5827057a5f6893c3659fc9a91fb3a0873e22d3c" translate="yes" xml:space="preserve">
          <source>Dereferences a weak pointer. If the key is still alive, then &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; v&lt;/code&gt; is returned (where &lt;code&gt;v&lt;/code&gt; is the &lt;em&gt;value&lt;/em&gt; in the weak pointer), otherwise &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">弱いポインタを逆参照します。キーがまだ生きている場合、 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; v&lt;/code&gt; が返されます（ &lt;code&gt;v&lt;/code&gt; はウィークポインターの&lt;em&gt;値です&lt;/em&gt;）。そうでない場合は、 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="048e6b8b48c17572b47b7637ba6dabf53ce61daa" translate="yes" xml:space="preserve">
          <source>DerivClause</source>
          <target state="translated">DerivClause</target>
        </trans-unit>
        <trans-unit id="fa8d9afda7d78bde4d57fec4f5932dd133788b48" translate="yes" xml:space="preserve">
          <source>DerivClauseQ</source>
          <target state="translated">DerivClauseQ</target>
        </trans-unit>
        <trans-unit id="07b3bf228b0413d3d10d986b27f48e1edc3e79d3" translate="yes" xml:space="preserve">
          <source>DerivStrategy</source>
          <target state="translated">DerivStrategy</target>
        </trans-unit>
        <trans-unit id="d5cc8211843b0f5bb937f3ac37ad31783885a6ec" translate="yes" xml:space="preserve">
          <source>DerivStrategyQ</source>
          <target state="translated">DerivStrategyQ</target>
        </trans-unit>
        <trans-unit id="e651bd4bfd42dba8c0491c1c2a4f54374cfa7e1a" translate="yes" xml:space="preserve">
          <source>DeriveAnyClass</source>
          <target state="translated">DeriveAnyClass</target>
        </trans-unit>
        <trans-unit id="4b20e98ede21427ce48f73458f3f0989a7d4a88b" translate="yes" xml:space="preserve">
          <source>DeriveDataTypeable</source>
          <target state="translated">DeriveDataTypeable</target>
        </trans-unit>
        <trans-unit id="7c6f167c5767ca35afd81b7407e96d5ea3108a57" translate="yes" xml:space="preserve">
          <source>DeriveFoldable</source>
          <target state="translated">DeriveFoldable</target>
        </trans-unit>
        <trans-unit id="3c1a49ed45f17e263f797e5f7df7678221a70f8e" translate="yes" xml:space="preserve">
          <source>DeriveFunctor</source>
          <target state="translated">DeriveFunctor</target>
        </trans-unit>
        <trans-unit id="a590f29123b96375771729ef7651b541e577128d" translate="yes" xml:space="preserve">
          <source>DeriveGeneric</source>
          <target state="translated">DeriveGeneric</target>
        </trans-unit>
        <trans-unit id="dc60548614df4b77ca4ad53db5f45273f61e2a18" translate="yes" xml:space="preserve">
          <source>DeriveLift</source>
          <target state="translated">DeriveLift</target>
        </trans-unit>
        <trans-unit id="a2b5a54ef209a4de8f5f7f84170e188a814c1f06" translate="yes" xml:space="preserve">
          <source>DeriveTraversable</source>
          <target state="translated">DeriveTraversable</target>
        </trans-unit>
        <trans-unit id="1bac7a165bb951d1c4b6adf1ce99f2eb58f84dd6" translate="yes" xml:space="preserve">
          <source>Derived Builders</source>
          <target state="translated">派生ビルダー</target>
        </trans-unit>
        <trans-unit id="711869ad42991a628b6799ae512dce92f4334ae5" translate="yes" xml:space="preserve">
          <source>Derived and fundamental representation types</source>
          <target state="translated">派生表現タイプと基本表現タイプ</target>
        </trans-unit>
        <trans-unit id="1b61679fd1765a51288f1ecd616983df7a45d85b" translate="yes" xml:space="preserve">
          <source>Derived arrays</source>
          <target state="translated">派生配列</target>
        </trans-unit>
        <trans-unit id="37dacf08bd606e7b2e2a0251df71c640ae427b04" translate="yes" xml:space="preserve">
          <source>Derived combinators</source>
          <target state="translated">派生コンビネータ</target>
        </trans-unit>
        <trans-unit id="fc3db6e687e5b5760dfd813e0c89363121acee4f" translate="yes" xml:space="preserve">
          <source>Derived instance declarations for the class &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; are only possible for enumerations (i.e. datatypes having only nullary constructors) and single-constructor datatypes, including arbitrarily large tuples, whose constituent types are instances of &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; の派生インスタンス宣言は、列挙型（つまり、nullaryコンストラクタのみを持つデータ型）と、構成要素の型が &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; のインスタンスである任意の大きなタプルを含む単一コンストラクタのデータ型でのみ可能です。</target>
        </trans-unit>
        <trans-unit id="63f6847cd148c7625b4df0aabbec2b7466581978" translate="yes" xml:space="preserve">
          <source>Derived instance.</source>
          <target state="translated">派生インスタンス。</target>
        </trans-unit>
        <trans-unit id="08fc15991208961932242301ec57f012519a80c0" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは以下を満たします。</target>
        </trans-unit>
        <trans-unit id="b500f9fa57a68891dacadf88063c480e9b466d81" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; make the following assumptions, which derived instances of &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; obey:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; の派生インスタンスは次の仮定を行い、 &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6c527a7ab9ef1e489d46452276e994a0c135ec13" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;ghc-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; have the following properties, which are compatible with derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスには次のプロパティがあり、これらは &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; の派生インスタンスと互換性があります。</target>
        </trans-unit>
        <trans-unit id="9392cc1409704004675bb0fa3776f8621c90f025" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは以下を満たします。</target>
        </trans-unit>
        <trans-unit id="54c406abaeb6b7bd7b1daea316b04f024e1d80c4" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; make the following assumptions, which derived instances of &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; obey:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; の派生インスタンスは次の仮定を行い、 &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="39f041375292b2c5f8565b998e027651f132c059" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;prelude#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; have the following properties, which are compatible with derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスには次のプロパティがあり、これらは &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; の派生インスタンスと互換性があります。</target>
        </trans-unit>
        <trans-unit id="b0b2d5652466cbc5ab6ba89f95710ff148f623e8" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは以下を満たします。</target>
        </trans-unit>
        <trans-unit id="a6b59c2a24f70ab0117e6d82553cb44f5db5beaa" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; make the following assumptions, which derived instances of &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; obey:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; の派生インスタンスは次の仮定を行い、 &lt;code&gt;&lt;a href=&quot;text-show#v:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6947cc5e83ec08116f180f0084417ea9147b7ec8" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;ghc-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは以下を満たします。</target>
        </trans-unit>
        <trans-unit id="06759cd5f2f9ac1dee8725d2ed5c223be364fd0b" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;prelude#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは以下を満たします。</target>
        </trans-unit>
        <trans-unit id="684a097e34ae0d764b8c6d51d39b29b0bee71756" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; satisfy the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスは以下を満たします。</target>
        </trans-unit>
        <trans-unit id="d35280b93ea95fe4cfad9a5536bfcac8252796d5" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; have the following properties, which are compatible with derived instances of &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; の派生インスタンスには次のプロパティがあり、これらは &lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; の派生インスタンスと互換性があります。</target>
        </trans-unit>
        <trans-unit id="2d3eb08429b0f16f1c8d975887c13e374c0c7b2d" translate="yes" xml:space="preserve">
          <source>Derived instances of &lt;code&gt;Typeable&lt;/code&gt; may be declared if the &lt;a href=&quot;#extension-DeriveDataTypeable&quot;&gt;&lt;code&gt;DeriveDataTypeable&lt;/code&gt;&lt;/a&gt; extension is enabled, but they are ignored, and they may be reported as an error in a later version of the compiler.</source>
          <target state="translated">&lt;code&gt;Typeable&lt;/code&gt; の派生インスタンスは、&lt;a href=&quot;#extension-DeriveDataTypeable&quot;&gt; &lt;code&gt;DeriveDataTypeable&lt;/code&gt; &lt;/a&gt;拡張機能が有効な場合に宣言できますが、無視され、新しいバージョンのコンパイラでエラーとして報告される場合があります。</target>
        </trans-unit>
        <trans-unit id="a625a3b23199e215bf7df844e541ee51cd2c14af" translate="yes" xml:space="preserve">
          <source>Deriving Instances of &lt;code&gt;Ix&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ix&lt;/code&gt; のインスタンスの派生</target>
        </trans-unit>
        <trans-unit id="428fbad96d4b8ec2719fed6a4776f441996a9137" translate="yes" xml:space="preserve">
          <source>DerivingStrategies</source>
          <target state="translated">DerivingStrategies</target>
        </trans-unit>
        <trans-unit id="fe61dddbfff25d8c6f4e861cf329e0378c1227af" translate="yes" xml:space="preserve">
          <source>DerivingVia</source>
          <target state="translated">DerivingVia</target>
        </trans-unit>
        <trans-unit id="f419666b5473ff64b074baa6f839b4e5f716f4ea" translate="yes" xml:space="preserve">
          <source>Describes the behaviour of a thread when an asynchronous exception is received.</source>
          <target state="translated">非同期例外を受信したときのスレッドの動作を記述します。</target>
        </trans-unit>
        <trans-unit id="86900d9cb87f0a3aa156e73560563051573b4e85" translate="yes" xml:space="preserve">
          <source>Describes the command-line used to start the program.</source>
          <target state="translated">プログラムの起動に使用するコマンドラインを記述します。</target>
        </trans-unit>
        <trans-unit id="941b3bfdb3648c4b28d9fad695d39fad50af9b18" translate="yes" xml:space="preserve">
          <source>Describes the device that this file represents.</source>
          <target state="translated">このファイルが表すデバイスを記述します。</target>
        </trans-unit>
        <trans-unit id="11d01c4f36a0a75f8a99eb0de66f7d84bf6f2299" translate="yes" xml:space="preserve">
          <source>Describes the end of a block comment. Use the empty string if the language doesn't support block comments. For example &quot;*/&quot;.</source>
          <target state="translated">ブロックコメントの終わりを記述します。ブロックコメントをサポートしていない言語の場合は空文字列を使用します。例えば、&quot;*/&quot;のようになります。</target>
        </trans-unit>
        <trans-unit id="d7bff92e73c18f05e4411deb8d1a3718ab87200f" translate="yes" xml:space="preserve">
          <source>Describes the environment variables present in the program&amp;rsquo;s environment.</source>
          <target state="translated">プログラムの環境に存在する環境変数について説明します。</target>
        </trans-unit>
        <trans-unit id="ea0b90de96397190987435a48046f3bfb75ee3c5" translate="yes" xml:space="preserve">
          <source>Describes the name and version of the runtime system responsible for the indicated capability set.</source>
          <target state="translated">指定されたケイパビリティセットを担当するランタイムシステムの名前とバージョンを記述します。</target>
        </trans-unit>
        <trans-unit id="94cbf5af412213168fb9d1323337ae940fd5e4dd" translate="yes" xml:space="preserve">
          <source>Describes the occupancy of the &lt;em&gt;blk_sz&lt;/em&gt; sub-heap.</source>
          <target state="translated">&lt;em&gt;blk_szサブヒープ&lt;/em&gt;の占有率について説明します。</target>
        </trans-unit>
        <trans-unit id="fa3af7a3a791014a64cc184c4c9203e30dadf724" translate="yes" xml:space="preserve">
          <source>Describes the start of a block comment. Use the empty string if the language doesn't support block comments. For example &quot;/*&quot;.</source>
          <target state="translated">ブロックコメントの開始位置を指定します。ブロックコメントをサポートしていない言語の場合は空文字列を使用します。例えば、&quot;/*&quot;のように。</target>
        </trans-unit>
        <trans-unit id="59d11a1c054df2eb6d5242a65c23f393e88cf3af" translate="yes" xml:space="preserve">
          <source>Describes the start of a line comment. Use the empty string if the language doesn't support line comments. For example &quot;//&quot;.</source>
          <target state="translated">行コメントの開始位置を指定します。行コメントをサポートしていない言語の場合は空文字列を使用します。例えば &quot;//&quot; といった具合です。</target>
        </trans-unit>
        <trans-unit id="5dd24f6e6200b326116289a831774b916249d831" translate="yes" xml:space="preserve">
          <source>Describes whether an option takes an argument or not, and if so how the argument is injected into a value of type &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">オプションが引数をとるかどうかについて説明し、かつ引数は型の値に注入されるかもしそうなら &lt;code&gt;a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="5f24581e20094da08a0af1b1e32762dbc881fc4e" translate="yes" xml:space="preserve">
          <source>Description of field formatting for &lt;code&gt;&lt;a href=&quot;text-printf#v:formatArg&quot;&gt;formatArg&lt;/a&gt;&lt;/code&gt;. See UNIX &lt;code&gt;printf(3)&lt;/code&gt; for a description of how field formatting works.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-printf#v:formatArg&quot;&gt;formatArg&lt;/a&gt;&lt;/code&gt; のフィールド形式の説明。フィールドのフォーマットの仕組みについては、UNIXの &lt;code&gt;printf(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="cf9ea2204692c52628a518a3e5ebb549e5280444" translate="yes" xml:space="preserve">
          <source>Despite appearances &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;Constraint&lt;/code&gt; aren&amp;rsquo;t really distinct kinds in the compiler&amp;rsquo;s internal representation and can be unified producing unexpected results. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11715&quot;&gt;#11715&lt;/a&gt; for one example.</source>
          <target state="translated">外観にもかかわらず、 &lt;code&gt;*&lt;/code&gt; と &lt;code&gt;Constraint&lt;/code&gt; はコンパイラの内部表現では実際には異なる種類ではなく、統合して予期しない結果を生成する可能性があります。一例として&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11715&quot;&gt;＃11715&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c5aaf0f3b8a198bd1d899712fa287db57bbdb362" translate="yes" xml:space="preserve">
          <source>Despite appearances &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;Constraint&lt;/code&gt; aren&amp;rsquo;t really distinct kinds in the compiler&amp;rsquo;s internal representation and can be unified producing unexpected results. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11715&quot;&gt;Issue #11715&lt;/a&gt; for one example.</source>
          <target state="translated">外観 &lt;code&gt;*&lt;/code&gt; と &lt;code&gt;Constraint&lt;/code&gt; はコンパイラの内部表現では実際には明確な種類ではなく、統一して予期しない結果を生成する可能性があります。1つの例については、&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11715&quot;&gt;問題＃11715&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3e20cef624cada757ea9786710b628ae5d86a2bc" translate="yes" xml:space="preserve">
          <source>Despite sequences being structurally strict from a semantic standpoint, they are in fact implemented using laziness internally. As a result, many operations can be performed &lt;em&gt;incrementally&lt;/em&gt;, producing their results as they are demanded. This greatly improves performance in some cases. These functions include</source>
          <target state="translated">シーケンスは意味論的な観点から構造的に厳密であるにもかかわらず、実際には遅延を内部的に使用して実装されます。その結果、多くの操作を&lt;em&gt;段階的&lt;/em&gt;に実行&lt;em&gt;でき&lt;/em&gt;、要求に応じて結果を生成できます。これにより、パフォーマンスが大幅に向上する場合があります。これらの機能には、</target>
        </trans-unit>
        <trans-unit id="d42713493ca811109d8a2a18c46b93f70cff4c27" translate="yes" xml:space="preserve">
          <source>Destination</source>
          <target state="translated">Destination</target>
        </trans-unit>
        <trans-unit id="2a8acf95fbf5e4a22b63df20b3c2077c316bd245" translate="yes" xml:space="preserve">
          <source>Destination file</source>
          <target state="translated">宛先ファイル</target>
        </trans-unit>
        <trans-unit id="40bd946a96ec72755557f358fa5f47bc0ffa8544" translate="yes" xml:space="preserve">
          <source>Destination filename</source>
          <target state="translated">宛先ファイル名</target>
        </trans-unit>
        <trans-unit id="5539f35a8561f4131af1dc4fb9c1298a915c8d2b" translate="yes" xml:space="preserve">
          <source>Destination handle</source>
          <target state="translated">宛先ハンドル</target>
        </trans-unit>
        <trans-unit id="3f49bdaae42dfc22e5cd36ab1aed1e2ad22d1f82" translate="yes" xml:space="preserve">
          <source>Destination offset</source>
          <target state="translated">宛先オフセット</target>
        </trans-unit>
        <trans-unit id="86bf83cd5081d943de301e189d741852e800fda4" translate="yes" xml:space="preserve">
          <source>Detailed performance information</source>
          <target state="translated">詳細なパフォーマンス情報</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="d703cafc57e08c9f23093d31c197dc9a9c0f55a5" translate="yes" xml:space="preserve">
          <source>Details about the most recent GC</source>
          <target state="translated">直近のGCの詳細</target>
        </trans-unit>
        <trans-unit id="7136385935ff1570aefb13ece38b6782a9e64310" translate="yes" xml:space="preserve">
          <source>Detecting the end of input</source>
          <target state="translated">入力終了の検出</target>
        </trans-unit>
        <trans-unit id="6113c904a4bc89590f714d2c9c2b9d8e49c7c6e0" translate="yes" xml:space="preserve">
          <source>Determine the number of NUMA nodes (N) by querying the OS.</source>
          <target state="translated">OSを照会して、NUMAノードの数(N)を決定します。</target>
        </trans-unit>
        <trans-unit id="f1277b45c28500950a752d82f4685ae0833d4973" translate="yes" xml:space="preserve">
          <source>Determine the ordering relationship between two &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt;s, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; in the indeterminate case.</source>
          <target state="translated">2つの &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; 間の順序関係、または不確定の場合は &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; を決定します。</target>
        </trans-unit>
        <trans-unit id="47064c9e50a4f4913442f4cab22b8f5c9b59dec8" translate="yes" xml:space="preserve">
          <source>Determine the ordering relationship between two &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt;s, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; in the indeterminate case.</source>
          <target state="translated">2つの &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; 間の順序関係を決定するか、不確定な場合は &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 決定しません。</target>
        </trans-unit>
        <trans-unit id="214a854127ae5c1d43ac5aacd484fafbafee72c6" translate="yes" xml:space="preserve">
          <source>Determine whether a &lt;code&gt;ByteArray#&lt;/code&gt; is guaranteed not to move during GC.</source>
          <target state="translated">GC中に &lt;code&gt;ByteArray#&lt;/code&gt; が移動しないことが保証されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="3e300655b1ab00113c9e7e23b9ca3980c09ab173" translate="yes" xml:space="preserve">
          <source>Determine whether a &lt;code&gt;MutableByteArray#&lt;/code&gt; is guaranteed not to move during GC.</source>
          <target state="translated">&lt;code&gt;MutableByteArray#&lt;/code&gt; がGC中に移動しないことが保証されているかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="bc34627b7f335d0a986bd66dcbdc58081e4a1b06" translate="yes" xml:space="preserve">
          <source>Determine whether the given language extension is enabled in the &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">指定された言語拡張が &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; モナドで有効になっているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="72201c36036bffd54a64987e2b923c24e2ee1612" translate="yes" xml:space="preserve">
          <source>Determine whether the given language extension is enabled in the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">指定された言語拡張が &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; モナドで有効になっているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="aca9ce3b0f74c3bafc07e5ee5b59cd2fa1e7a809" translate="yes" xml:space="preserve">
          <source>Determines whether a character can be accurately encoded in a &lt;code&gt;&lt;a href=&quot;foreign-c-string#v:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-c-string#v:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; で文字を正確にエンコードできるかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="9495c2608dd8f0d1ca0a04adddfa4fc925722421" translate="yes" xml:space="preserve">
          <source>Determines whether all elements of the structure satisfy the predicate.</source>
          <target state="translated">構造体のすべての要素が述語を満たすかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="27984746c670fc9545d09ec3026387b389d946d0" translate="yes" xml:space="preserve">
          <source>Determines whether all elements of the structure satisfy their appropriate predicate argument.</source>
          <target state="translated">構造体のすべての要素が適切な述語引数を満たすかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="892f6b6fd734b6c09f0abee08ea5bc4f09d48ab2" translate="yes" xml:space="preserve">
          <source>Determines whether any element of the structure satisfies its appropriate predicate argument.</source>
          <target state="translated">構造体のいずれかの要素が適切な述語引数を満たすかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="47b5dd9822dde948bc1a29e16ea405a27b285feb" translate="yes" xml:space="preserve">
          <source>Determines whether any element of the structure satisfies the predicate.</source>
          <target state="translated">構造体のいずれかの要素が述語を満たすかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="5a44b1134e11e008b60f36bb4619c3d242202e8b" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler reports holes in partial type signatures as warnings. Has no effect unless &lt;a href=&quot;glasgow_exts#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;-XPartialTypeSignatures&lt;/code&gt;&lt;/a&gt; is enabled, which controls whether errors should be generated for holes in types or not. See &lt;a href=&quot;glasgow_exts#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;.</source>
          <target state="translated">コンパイラが部分的な型シグネチャのホールを警告として報告するかどうかを決定します。&lt;a href=&quot;glasgow_exts#extension-PartialTypeSignatures&quot;&gt; &lt;code&gt;-XPartialTypeSignatures&lt;/code&gt; &lt;/a&gt;が有効になっていないと効果がありません。これは、タイプのホールに対してエラーを生成するかどうかを制御します。&lt;a href=&quot;glasgow_exts#partial-type-signatures&quot;&gt;Partial Type Signaturesを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="97fc5cbf9de97707167dfe1f5761eaaf0989fc93" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler reports holes in partial type signatures as warnings. Has no effect unless &lt;a href=&quot;glasgow_exts#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;PartialTypeSignatures&lt;/code&gt;&lt;/a&gt; is enabled, which controls whether errors should be generated for holes in types or not. See &lt;a href=&quot;glasgow_exts#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;.</source>
          <target state="translated">コンパイラが部分型シグニチャの穴を警告として報告するかどうかを決定します。タイプの穴に対してエラーを生成するかどうかを制御する&lt;a href=&quot;glasgow_exts#extension-PartialTypeSignatures&quot;&gt; &lt;code&gt;PartialTypeSignatures&lt;/code&gt; &lt;/a&gt;が有効になっていない限り、効果はありません。&lt;a href=&quot;glasgow_exts#partial-type-signatures&quot;&gt;部分型シグネチャを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f431a9ba1bae1cfa166d77546d20920a103270f7" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler reports typed holes warnings. Has no effect unless typed holes errors are deferred until runtime. See &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; and &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt;</source>
          <target state="translated">コンパイラが型付きホールの警告を報告するかどうかを決定します。型穴エラーが実行時まで延期されない限り、効果はありません。&lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;型付きホール&lt;/a&gt;および&lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;型エラーのランタイムへの延期を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fc7beedb94964df847b4aa906db879eeba9578fe" translate="yes" xml:space="preserve">
          <source>Determining and changing the size of a file</source>
          <target state="translated">ファイルのサイズの決定と変更</target>
        </trans-unit>
        <trans-unit id="7f41f23ed4f57c117066f517ac4dc726235a4fbe" translate="yes" xml:space="preserve">
          <source>DeviceID</source>
          <target state="translated">DeviceID</target>
        </trans-unit>
        <trans-unit id="05bc2f368e09519a6203b8364adf1c1b8ccd2c30" translate="yes" xml:space="preserve">
          <source>DiffTime</source>
          <target state="translated">DiffTime</target>
        </trans-unit>
        <trans-unit id="b16f1f66543d3256c7320f66ff9ae94cbd849539" translate="yes" xml:space="preserve">
          <source>Difference</source>
          <target state="translated">Difference</target>
        </trans-unit>
        <trans-unit id="6b25764c6f644c28733592e6ddd01625443fe25e" translate="yes" xml:space="preserve">
          <source>Difference lists of a semigroup</source>
          <target state="translated">半群の差分リスト</target>
        </trans-unit>
        <trans-unit id="da462bf728a859cd53e329310195e79cca4ceae7" translate="yes" xml:space="preserve">
          <source>Different Haskell implementations have different characteristics with regard to which operations block &lt;em&gt;all&lt;/em&gt; threads.</source>
          <target state="translated">Haskellの実装が異なれば、どの操作が&lt;em&gt;すべての&lt;/em&gt;スレッドをブロックするかに関して、特性が異なります。</target>
        </trans-unit>
        <trans-unit id="bf981156eb7ca8624ed198fab08fb4abb9adf0d8" translate="yes" xml:space="preserve">
          <source>Different length lists means that the last cell gets padded. If you want more power, then use the system above, or build tables explicitly.</source>
          <target state="translated">長さの異なるリストは、最後のセルがパディングされることを意味します。より多くのパワーが必要な場合は、上記のシステムを使用するか、明示的にテーブルを構築してください。</target>
        </trans-unit>
        <trans-unit id="52728fe1ecbead3e66faefd7d9da5ae96ba8c9cc" translate="yes" xml:space="preserve">
          <source>Different operating systems and/or C libraries often support different values of &lt;code&gt;errno&lt;/code&gt;. This module defines the common values, but due to the open definition of &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; users may add definitions which are not predefined.</source>
          <target state="translated">オペレーティングシステムやCライブラリが異なると、多くの場合、 &lt;code&gt;errno&lt;/code&gt; の異なる値がサポートされます。このモジュールは一般的な値を定義しますが、 &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; のオープンな定義により、ユーザーは事前定義されていない定義を追加する場合があります。</target>
        </trans-unit>
        <trans-unit id="5699958536be85054b2076d4e7a7e8a82a2601d6" translate="yes" xml:space="preserve">
          <source>Dir Name</source>
          <target state="translated">監督名</target>
        </trans-unit>
        <trans-unit id="6bde2e9bac6af1c1cdb712cc851fdef9fdab0e53" translate="yes" xml:space="preserve">
          <source>Dir Names</source>
          <target state="translated">ディアー名</target>
        </trans-unit>
        <trans-unit id="29e04aa66e34d1ccd3a0ba74aacb689cffa8e89f" translate="yes" xml:space="preserve">
          <source>DirStream</source>
          <target state="translated">DirStream</target>
        </trans-unit>
        <trans-unit id="4a51e26d85d37a1b100bbb7d21a8a02eecf64c6c" translate="yes" xml:space="preserve">
          <source>DirStreamOffset</source>
          <target state="translated">DirStreamOffset</target>
        </trans-unit>
        <trans-unit id="77b27e4ec40fedbfbf0af6e0ce0421f51b392c1d" translate="yes" xml:space="preserve">
          <source>Direct &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; equivalent of &lt;code&gt;&lt;a href=&quot;data-list#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; と同等の直接 &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b892fe0c040fa8a944037d1d2817c41ab7da958" translate="yes" xml:space="preserve">
          <source>Directory</source>
          <target state="translated">Directory</target>
        </trans-unit>
        <trans-unit id="7f06a107ec78fc0edd366ec1c7a5d4a85eb86376" translate="yes" xml:space="preserve">
          <source>Directory in which to create the file</source>
          <target state="translated">ファイルを作成するディレクトリ</target>
        </trans-unit>
        <trans-unit id="c19c937f7b8beb14c248ef377833b4144600dcc0" translate="yes" xml:space="preserve">
          <source>Directory to execute in</source>
          <target state="translated">で実行するディレクトリ</target>
        </trans-unit>
        <trans-unit id="29aac0cc614a09bd8c59c51c1f4d8cfa14a498e5" translate="yes" xml:space="preserve">
          <source>DirectoryLink</source>
          <target state="translated">DirectoryLink</target>
        </trans-unit>
        <trans-unit id="7cf56260d9de1855a2a4e0f5584f4fa6e8c62629" translate="yes" xml:space="preserve">
          <source>Disable &lt;a href=&quot;http://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13&quot;&gt;pattern guards&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13&quot;&gt;パターンガードを&lt;/a&gt;無効にします。</target>
        </trans-unit>
        <trans-unit id="7bbf11b2c8f2d0f19f9a084bec0efba0128d1ab6" translate="yes" xml:space="preserve">
          <source>Disable all non-essential messages (this is the default).</source>
          <target state="translated">重要でないメッセージをすべて無効にします(これがデフォルトです)。</target>
        </trans-unit>
        <trans-unit id="c3554bdc6821d999726cb37748dc3d87ec341121" translate="yes" xml:space="preserve">
          <source>Disable all processing of RTS options. If &lt;code&gt;+RTS&lt;/code&gt; appears anywhere on the command line, then the program will abort with an error message. If the &lt;code&gt;GHCRTS&lt;/code&gt; environment variable is set, then the program will emit a warning message, &lt;code&gt;GHCRTS&lt;/code&gt; will be ignored, and the program will run as normal.</source>
          <target state="translated">RTSオプションのすべての処理を無効にします。場合は &lt;code&gt;+RTS&lt;/code&gt; は、コマンドライン上の任意の場所に表示され、プログラムはエラーメッセージを表示して中止されます。場合 &lt;code&gt;GHCRTS&lt;/code&gt; の環境変数が設定され、プログラムは、警告メッセージを発します &lt;code&gt;GHCRTS&lt;/code&gt; が無視され、プログラムは通常どおり実行されます。</target>
        </trans-unit>
        <trans-unit id="43655bd43ad758f0291fb7c2329ae7bf443548c3" translate="yes" xml:space="preserve">
          <source>Disable allocation limit processing for the current thread.</source>
          <target state="translated">現在のスレッドの割り当て制限処理を無効にします。</target>
        </trans-unit>
        <trans-unit id="6847234dec82ea3a4f7f8f9894b0e8288a53efb8" translate="yes" xml:space="preserve">
          <source>Disable automatic migration for load balancing. Normally the runtime will automatically try to schedule threads across the available CPUs to make use of idle CPUs; this option disables that behaviour. Note that migration only applies to threads; sparks created by &lt;code&gt;par&lt;/code&gt; are load-balanced separately by work-stealing.</source>
          <target state="translated">ロードバランシングの自動移行を無効にします。通常、ランタイムは自動的に使用可能なCPU全体でスレッドをスケジュールして、アイドル状態のCPUを利用しようとします。このオプションはその動作を無効にします。移行はスレッドにのみ適用されることに注意してください。 &lt;code&gt;par&lt;/code&gt; によって作成されたスパークは、ワークスティーリングによって個別に負荷分散されます。</target>
        </trans-unit>
        <trans-unit id="af28e4cac3862db95d9255f65a5b05d14c383530" translate="yes" xml:space="preserve">
          <source>Disable completion altogether.</source>
          <target state="translated">補完を完全に無効にします。</target>
        </trans-unit>
        <trans-unit id="df78952591e28060ba8968a01a7adf1a3322175e" translate="yes" xml:space="preserve">
          <source>Disable one or more breakpoints by number (use &lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt;&lt;code&gt;:show breaks&lt;/code&gt;&lt;/a&gt; to see the number and state of each breakpoint). The &lt;code&gt;*&lt;/code&gt; form disables all the breakpoints.</source>
          <target state="translated">1つ以上のブレークポイントを番号で無効にします（各ブレークポイントの番号と状態を確認するには、&lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt; &lt;code&gt;:show breaks&lt;/code&gt; &lt;/a&gt;を使用します）。 &lt;code&gt;*&lt;/code&gt; フォームは、すべてのブレークポイントを無効にします。</target>
        </trans-unit>
        <trans-unit id="2ea669916f99d9391d56c67c834b771a2ed90d80" translate="yes" xml:space="preserve">
          <source>Disable optimisations (default)</source>
          <target state="translated">最適化を無効にする(デフォルト</target>
        </trans-unit>
        <trans-unit id="4d9cc51168cfd10376ded1fd243416b8b3c0585d" translate="yes" xml:space="preserve">
          <source>Disable pattern guards. Implied by &lt;a href=&quot;#extension-Haskell98&quot;&gt;&lt;code&gt;Haskell98&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パターンガードを無効にします。&lt;a href=&quot;#extension-Haskell98&quot;&gt; &lt;code&gt;Haskell98&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="f65fbe541003015c3c31f4a5de6abc2b1102f444" translate="yes" xml:space="preserve">
          <source>Disable pattern guards. Implied by &lt;code&gt;Haskell98&lt;/code&gt;.</source>
          <target state="translated">パターンガードを無効にします。 &lt;code&gt;Haskell98&lt;/code&gt; によって暗示される。</target>
        </trans-unit>
        <trans-unit id="b0c1db6c578d0c7aa3363bb624d93f128e9c2288" translate="yes" xml:space="preserve">
          <source>Disable reading of &lt;code&gt;.ghci&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;.ghci&lt;/code&gt; ファイルの読み取りを無効にする</target>
        </trans-unit>
        <trans-unit id="528833c29584adc3559965f54fc01d57c2510947" translate="yes" xml:space="preserve">
          <source>Disable support for traditional record syntax (as supported by Haskell 98) &lt;code&gt;C {f = x}&lt;/code&gt;</source>
          <target state="translated">従来のレコード構文のサポートを無効にします（Haskell 98でサポートされています） &lt;code&gt;C {f = x}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ce61bde28943f4349e9623a98b59c15b9020a5b" translate="yes" xml:space="preserve">
          <source>Disable the monomorphism restriction.</source>
          <target state="translated">モノモーフィズム制限を無効にします。</target>
        </trans-unit>
        <trans-unit id="648cfd653017f3126e2003fd9dfd13eb8c6aaeaf" translate="yes" xml:space="preserve">
          <source>Disabled breakpoints can be (re-)enabled with the &lt;a href=&quot;#ghci-cmd-:enable&quot;&gt;&lt;code&gt;:enable&lt;/code&gt;&lt;/a&gt; command. The parameters of the &lt;a href=&quot;#ghci-cmd-:disable&quot;&gt;&lt;code&gt;:disable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ghci-cmd-:enable&quot;&gt;&lt;code&gt;:enable&lt;/code&gt;&lt;/a&gt; commands are identical.</source>
          <target state="translated">無効にされたブレークポイントは、&lt;a href=&quot;#ghci-cmd-:enable&quot;&gt; &lt;code&gt;:enable&lt;/code&gt; &lt;/a&gt;コマンドで（再）有効にできます。&lt;a href=&quot;#ghci-cmd-:disable&quot;&gt; &lt;code&gt;:disable&lt;/code&gt; &lt;/a&gt;コマンドと&lt;a href=&quot;#ghci-cmd-:enable&quot;&gt; &lt;code&gt;:enable&lt;/code&gt; &lt;/a&gt;コマンドのパラメーターは同じです。</target>
        </trans-unit>
        <trans-unit id="64707ce12094153150fea1d675adee54c3c59d87" translate="yes" xml:space="preserve">
          <source>Disables all processing of RTS options. Unlike &lt;code&gt;none&lt;/code&gt; this treats all RTS flags appearing on the command line the same way as regular arguments. (Passing them on to your program as arguments). &lt;code&gt;GHCRTS&lt;/code&gt; options will be processed normally.</source>
          <target state="translated">RTSオプションのすべての処理を無効にします。 &lt;code&gt;none&lt;/code&gt; とは異なり、これはコマンドラインに表示されるすべてのRTSフラグを通常の引数と同じ方法で扱います。（それらを引数としてプログラムに渡します）。 &lt;code&gt;GHCRTS&lt;/code&gt; オプションは通常どおり処理されます。</target>
        </trans-unit>
        <trans-unit id="eb7d302197ad1a9b0f46e77a955ef1dd60914bc2" translate="yes" xml:space="preserve">
          <source>Disables all warnings enabled by &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt;によって有効にされたすべての警告を無効にします。</target>
        </trans-unit>
        <trans-unit id="eac7b7c968689ca48aa206b857412f0368a124ff" translate="yes" xml:space="preserve">
          <source>Disables all warnings enabled by &lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt;によって有効にされたすべての警告を無効にします。</target>
        </trans-unit>
        <trans-unit id="b86bd129d8deed9d2707d728156b614d944d2936" translate="yes" xml:space="preserve">
          <source>Disables all warnings enabled by &lt;a href=&quot;using-warnings#ghc-flag--Wcompat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;using-warnings#ghc-flag--Wcompat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt;によって有効にされたすべての警告を無効にします。</target>
        </trans-unit>
        <trans-unit id="c21fa7cd41b8d79e39e0c052bfe9b3466f989b7e" translate="yes" xml:space="preserve">
          <source>Disables all warnings enabled by &lt;a href=&quot;using-warnings#ghc-flag--Wno-compat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;using-warnings#ghc-flag--Wno-compat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt;によって有効にされたすべての警告を無効にします。</target>
        </trans-unit>
        <trans-unit id="a4ee080902d234083bc8ff48dafed803edc5d0fc" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;#ghc-flag--fno-prof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghc-flag--fprof-auto-top&quot;&gt;&lt;code&gt;-fprof-auto-top&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#ghc-flag--fprof-auto-exported&quot;&gt;&lt;code&gt;-fprof-auto-exported&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">以前の&lt;a href=&quot;#ghc-flag--fno-prof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ghc-flag--fprof-auto-top&quot;&gt; &lt;code&gt;-fprof-auto-top&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#ghc-flag--fprof-auto-exported&quot;&gt; &lt;code&gt;-fprof-auto-exported&lt;/code&gt; &lt;/a&gt;オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="ed1bb6b149e62aa411f8f79bf450da5c51163f1e" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;#ghc-flag--fno-prof-cafs&quot;&gt;&lt;code&gt;-fprof-cafs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">以前の&lt;a href=&quot;#ghc-flag--fno-prof-cafs&quot;&gt; &lt;code&gt;-fprof-cafs&lt;/code&gt; &lt;/a&gt;オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="2f756aae6895abadc248bc8ab530c40af6fa9f3e" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;#ghc-flag--fprof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghc-flag--fprof-auto-top&quot;&gt;&lt;code&gt;-fprof-auto-top&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#ghc-flag--fprof-auto-exported&quot;&gt;&lt;code&gt;-fprof-auto-exported&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">以前の&lt;a href=&quot;#ghc-flag--fprof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ghc-flag--fprof-auto-top&quot;&gt; &lt;code&gt;-fprof-auto-top&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#ghc-flag--fprof-auto-exported&quot;&gt; &lt;code&gt;-fprof-auto-exported&lt;/code&gt; &lt;/a&gt;オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="288ab69ec018b5c48af064023237fdd6e2c36c0d" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;#ghc-flag--fprof-cafs&quot;&gt;&lt;code&gt;-fprof-cafs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">以前の&lt;a href=&quot;#ghc-flag--fprof-cafs&quot;&gt; &lt;code&gt;-fprof-cafs&lt;/code&gt; &lt;/a&gt;オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="d8bfef393675b76f8a2b81ce9e23e9ea8e089b4e" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;profiling#ghc-flag--fno-prof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;profiling#ghc-flag--fprof-auto-top&quot;&gt;&lt;code&gt;-fprof-auto-top&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;profiling#ghc-flag--fprof-auto-exported&quot;&gt;&lt;code&gt;-fprof-auto-exported&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">以前の&lt;a href=&quot;profiling#ghc-flag--fno-prof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;profiling#ghc-flag--fprof-auto-top&quot;&gt; &lt;code&gt;-fprof-auto-top&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;profiling#ghc-flag--fprof-auto-exported&quot;&gt; &lt;code&gt;-fprof-auto-exported&lt;/code&gt; &lt;/a&gt;オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="71430acfde73d239a283021b6fb7bb31842fd7a0" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;profiling#ghc-flag--fno-prof-cafs&quot;&gt;&lt;code&gt;-fprof-cafs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">以前の&lt;a href=&quot;profiling#ghc-flag--fno-prof-cafs&quot;&gt; &lt;code&gt;-fprof-cafs&lt;/code&gt; &lt;/a&gt;オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="4c4f20df362a2ff22da3d04daead7abe8aca2ab3" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;profiling#ghc-flag--fprof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;profiling#ghc-flag--fprof-auto-top&quot;&gt;&lt;code&gt;-fprof-auto-top&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;profiling#ghc-flag--fprof-auto-exported&quot;&gt;&lt;code&gt;-fprof-auto-exported&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">以前の&lt;a href=&quot;profiling#ghc-flag--fprof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;profiling#ghc-flag--fprof-auto-top&quot;&gt; &lt;code&gt;-fprof-auto-top&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;profiling#ghc-flag--fprof-auto-exported&quot;&gt; &lt;code&gt;-fprof-auto-exported&lt;/code&gt; &lt;/a&gt;オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="0854c1c52f3c3de17c4b81e5aa3621c74ccc811d" translate="yes" xml:space="preserve">
          <source>Disables any previous &lt;a href=&quot;profiling#ghc-flag--fprof-cafs&quot;&gt;&lt;code&gt;-fprof-cafs&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">以前の&lt;a href=&quot;profiling#ghc-flag--fprof-cafs&quot;&gt; &lt;code&gt;-fprof-cafs&lt;/code&gt; &lt;/a&gt;オプションを無効にします。</target>
        </trans-unit>
        <trans-unit id="f9c2a32c122872ba218265f195d9b5658b66219b" translate="yes" xml:space="preserve">
          <source>Disables showing a list of valid hole fits for typed holes in type error messages.</source>
          <target state="translated">タイプエラーメッセージでタイプされた穴に対して有効な穴フィットのリストを表示しないようにします。</target>
        </trans-unit>
        <trans-unit id="2504ef9edd5aa064161469bc4b453285677662a9" translate="yes" xml:space="preserve">
          <source>Disables the RTS&amp;rsquo;s normal behaviour of garbage-collecting CAFs (Constant Applicative Forms, in other words top-level expressions). This option is useful for specialised applications that do runtime dynamic linking, where code dynamically linked in the future might require the value of a CAF that would otherwise be garbage-collected.</source>
          <target state="translated">RTSのガベージコレクションCAF（Constant Applicative Forms、つまりトップレベルの式）の通常の動作を無効にします。このオプションは、将来動的にリンクされるコードがガベージコレクションされるCAFの値を必要とする可能性がある、ランタイム動的リンクを行う特殊なアプリケーションに役立ちます。</target>
        </trans-unit>
        <trans-unit id="73a88f9774a80f3e446c767977f8b962e2f3af78" translate="yes" xml:space="preserve">
          <source>Disables the sorting of the list of valid hole fits for typed holes in type error messages.</source>
          <target state="translated">タイプエラーメッセージでタイプされた穴の有効な穴フィットのリストのソートを無効にします。</target>
        </trans-unit>
        <trans-unit id="2e7d4ffecb0d4ef6b4a054f74984b146f763c3ab" translate="yes" xml:space="preserve">
          <source>Disallow use of record syntax.</source>
          <target state="translated">レコード構文の使用を禁止します。</target>
        </trans-unit>
        <trans-unit id="124fa9f39efa7c4b8000be08ba3b7a85a3c1d84f" translate="yes" xml:space="preserve">
          <source>DisambiguateRecordFields</source>
          <target state="translated">DisambiguateRecordFields</target>
        </trans-unit>
        <trans-unit id="973fb7fdcc867209f1bea4f98625a8bc33cbefa7" translate="yes" xml:space="preserve">
          <source>Discard the result of an &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; アクションの結果を破棄します。</target>
        </trans-unit>
        <trans-unit id="4e8c1602e460f8c2abe067ec7f516aa7b4b5e843" translate="yes" xml:space="preserve">
          <source>Discard the return value of an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; アクションの戻り値を破棄する</target>
        </trans-unit>
        <trans-unit id="60ee0a81ff5767711f12e71d66be39bfdc4ed3f4" translate="yes" xml:space="preserve">
          <source>Discard the type annotation and produce a plain Template Haskell expression</source>
          <target state="translated">型アノテーションを破棄し、プレーンなテンプレートHaskell式を生成します。</target>
        </trans-unit>
        <trans-unit id="d490a2102a5d94032dca75684dab9f5839e20b0e" translate="yes" xml:space="preserve">
          <source>Disjoint</source>
          <target state="translated">Disjoint</target>
        </trans-unit>
        <trans-unit id="fd84e33b9acb6770f15968d9176f3a6299e305da" translate="yes" xml:space="preserve">
          <source>Display a list of the cycles in the module graph. This is useful when trying to eliminate such cycles.</source>
          <target state="translated">モジュールグラフのサイクルのリストを表示します。これは、そのようなサイクルを排除しようとするときに便利です。</target>
        </trans-unit>
        <trans-unit id="8b51a5988be33f48aac63a10173d8b6f08d92477" translate="yes" xml:space="preserve">
          <source>Display a summary of the available flags and exit successfully.</source>
          <target state="translated">利用可能なフラグの概要を表示し、正常終了します。</target>
        </trans-unit>
        <trans-unit id="cb69db93cb7727c8208327260fe3f741e1f1b2f2" translate="yes" xml:space="preserve">
          <source>Display equation incompatibilities in closed type families</source>
          <target state="translated">閉じた型族における表示式の非互換性</target>
        </trans-unit>
        <trans-unit id="87a01a2d90029f7ec813289df19d8e72278f7de2" translate="yes" xml:space="preserve">
          <source>Display help</source>
          <target state="translated">ヘルプを表示する</target>
        </trans-unit>
        <trans-unit id="41c1ba6ec87ec36765c9e53b50cd13c7f4803ada" translate="yes" xml:space="preserve">
          <source>Display some stats after evaluating each expression, including the elapsed time and number of bytes allocated. NOTE: the allocation figure is only accurate to the size of the storage manager&amp;rsquo;s allocation area, because it is calculated at every GC. Hence, you might see values of zero if no GC has occurred.</source>
          <target state="translated">経過時間や割り当てられたバイト数など、各式を評価した後にいくつかの統計を表示します。注：割り当ての数値は、GCごとに計算されるため、ストレージマネージャーの割り当て領域のサイズに対してのみ正確です。したがって、GCが発生していない場合は、値がゼロになることがあります。</target>
        </trans-unit>
        <trans-unit id="095ebe4ebcb9b310b40079498b0d7af564dcfc43" translate="yes" xml:space="preserve">
          <source>Display the heap profile using a postscript viewer such as Ghostview, or print it out on a Postscript-capable printer.</source>
          <target state="translated">ヒーププロファイルをGhostviewなどのPostscriptビューアを使って表示したり、Postscript対応プリンタで印刷したりします。</target>
        </trans-unit>
        <trans-unit id="42ed514ac8dc6c7f2b5a0e7efded5f227d9a05b4" translate="yes" xml:space="preserve">
          <source>Display the history of evaluation steps. With a number, displays that many steps (default: 20). For use with &lt;a href=&quot;#ghci-cmd-:trace&quot;&gt;&lt;code&gt;:trace&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;#tracing&quot;&gt;Tracing and history&lt;/a&gt;. To set the number of history entries stored by GHCi, use the &lt;a href=&quot;#ghc-flag--fghci-hist-size=%E2%9F%A8n%E2%9F%A9&quot;&gt;&lt;code&gt;-fghci-hist-size=⟨n⟩&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">評価ステップの履歴を表示します。数値を指定すると、その数のステップが表示されます（デフォルト：20）。&lt;a href=&quot;#ghci-cmd-:trace&quot;&gt; &lt;code&gt;:trace&lt;/code&gt; で&lt;/a&gt;使用します。&lt;a href=&quot;#tracing&quot;&gt;トレースと履歴を&lt;/a&gt;参照してください。GHCiによって保存される履歴エントリの数を設定するには、&lt;a href=&quot;#ghc-flag--fghci-hist-size=%E2%9F%A8n%E2%9F%A9&quot;&gt; &lt;code&gt;-fghci-hist-size=⟨n⟩&lt;/code&gt; &lt;/a&gt;フラグを使用します。</target>
        </trans-unit>
        <trans-unit id="b8cfeba43652d20b5638feecf9437ecf8b9376dd" translate="yes" xml:space="preserve">
          <source>Display the internal structure of a lazy &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">遅延 &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 内部構造を表示します。</target>
        </trans-unit>
        <trans-unit id="7e6b712246e619a1b870cd3a0c97e6f1acc5850a" translate="yes" xml:space="preserve">
          <source>Display the type of each variable bound after a statement is entered at the prompt. If the statement is a single expression, then the only variable binding will be for the variable &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">プロンプトでステートメントを入力した後にバインドされた各変数のタイプを表示します。ステートメントが単一の式の場合、変数バインディングは変数 &lt;code&gt;it&lt;/code&gt; のみになります。</target>
        </trans-unit>
        <trans-unit id="7dda305b30fb3dbdd4efa96b217338aa714c6a16" translate="yes" xml:space="preserve">
          <source>Displays Safe Haskell information about the given module (or the current module if omitted). This includes the trust type of the module and its containing package.</source>
          <target state="translated">指定されたモジュール (省略された場合は現在のモジュール)についての安全な Haskell 情報を表示します。これには、モジュールのトラストタイプとそれを含むパッケージが含まれます。</target>
        </trans-unit>
        <trans-unit id="0903e2a9efe00f957be2b9970cc65b68dba2de82" translate="yes" xml:space="preserve">
          <source>Displays a list of the available commands.</source>
          <target state="translated">使用可能なコマンドの一覧を表示します。</target>
        </trans-unit>
        <trans-unit id="00f913d8e9427d6b6873bc6ec90e73b8e1bf395a" translate="yes" xml:space="preserve">
          <source>Displays all the class instances available to the argument ⟨type⟩. The command will match ⟨type⟩ with the first parameter of every instance and then check that all constraints are satisfiable.</source>
          <target state="translated">引数の atericatePs_27E8-assermansidetypeatericatePe_27E9-assermansideで利用可能なすべてのクラス・インスタンスを表示します。</target>
        </trans-unit>
        <trans-unit id="3f097a99f355d3baa3c2e92b951e6f2e97243b4e" translate="yes" xml:space="preserve">
          <source>Displays information about the given name(s). For example, if ⟨name⟩ is a class, then the class methods and their types will be printed; if ⟨name⟩ is a type constructor, then its definition will be printed; if ⟨name⟩ is a function, then its type will be printed. If ⟨name⟩ has been loaded from a source file, then GHCi will also display the location of its definition in the source.</source>
          <target state="translated">与えられた名前に関する情報を表示します。例えば、⟨name⟩ がクラスの場合は、クラスメソッドとその型が表示され、⟨name⟩ が型コンストラクタの場合は、その定義が表示されます。⟨name⟩がソースファイルから読み込まれた場合、GHCiはソースファイル内の定義の場所も表示します。</target>
        </trans-unit>
        <trans-unit id="1eb2d713386d408497901eec0a5c87552a0dd449" translate="yes" xml:space="preserve">
          <source>Displays the documentation for the given name. Currently the command is restricted to displaying the documentation directly on the declaration in question, ignoring documentation for arguments, constructors etc.</source>
          <target state="translated">指定された名前のドキュメントを表示します。現在このコマンドは、引数やコンストラクタなどのドキュメントを無視して、問題の宣言に直接ドキュメントを表示することに制限されています。</target>
        </trans-unit>
        <trans-unit id="0cab81b5bbad5c1379a099054e1e3e147089139c" translate="yes" xml:space="preserve">
          <source>Displays the identifiers exported by the module ⟨module⟩, which must be either loaded into GHCi or be a member of a package. If ⟨module⟩ is omitted, the most recently-loaded module is used.</source>
          <target state="translated">GHCiにロードされているか、パッケージのメンバでなければならないモジュール ⟨module⟩ でエクスポートされた識別子を表示します。⟨module⟩ を省略した場合は、直近にロードされたモジュールが使用されます。</target>
        </trans-unit>
        <trans-unit id="c07c0ac0aeeee456ea39d578dfc80e8faa06b52c" translate="yes" xml:space="preserve">
          <source>Displays the specified setting (see &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">指定された設定を表示します（&lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="dac6c3514011877960a86400d6ad6779a0444dee" translate="yes" xml:space="preserve">
          <source>Dissolve the association between the stable pointer and the Haskell value. Afterwards, if the stable pointer is passed to &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt;, the behaviour is undefined. However, the stable pointer may still be passed to &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt;, but the &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:Ptr&quot;&gt;Ptr&lt;/a&gt; ()&lt;/code&gt; value returned by &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt;, in this case, is undefined (in particular, it may be &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt;). Nevertheless, the call to &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; is guaranteed not to diverge.</source>
          <target state="translated">ステーブルポインターとHaskell値の間の関連付けを解消します。その後、安定したポインターが &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt; に渡された場合の動作は未定義です。しかし、安定したポインタは依然としてに渡すことができる &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; 、しかし &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:Ptr&quot;&gt;Ptr&lt;/a&gt; ()&lt;/code&gt; によって返される値 &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; は（特に、それがあってもよく、この場合、未定義で &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; ）。それにもかかわらず、 &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; の呼び出しは分岐しないことが保証されています。</target>
        </trans-unit>
        <trans-unit id="4078e7979db0e46b40bfa1c03f0ed005646b8c2f" translate="yes" xml:space="preserve">
          <source>Dissolve the association between the stable pointer and the Haskell value. Afterwards, if the stable pointer is passed to &lt;code&gt;&lt;a href=&quot;ghc-stable#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-stable#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt;, the behaviour is undefined. However, the stable pointer may still be passed to &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt;, but the &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:Ptr&quot;&gt;Ptr&lt;/a&gt; ()&lt;/code&gt; value returned by &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt;, in this case, is undefined (in particular, it may be &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt;). Nevertheless, the call to &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; is guaranteed not to diverge.</source>
          <target state="translated">ステーブルポインターとHaskell値の間の関連付けを解消します。その後、安定したポインターが &lt;code&gt;&lt;a href=&quot;ghc-stable#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;ghc-stable#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt; に渡された場合の動作は未定義です。しかし、安定したポインタは依然としてに渡すことができる &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; 、しかし &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:Ptr&quot;&gt;Ptr&lt;/a&gt; ()&lt;/code&gt; によって返される値 &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; は（特に、それがあってもよく、この場合、未定義で &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:nullPtr&quot;&gt;nullPtr&lt;/a&gt;&lt;/code&gt; ）。それにもかかわらず、 &lt;code&gt;&lt;a href=&quot;ghc-stable#v:castStablePtrToPtr&quot;&gt;castStablePtrToPtr&lt;/a&gt;&lt;/code&gt; の呼び出しは分岐しないことが保証されています。</target>
        </trans-unit>
        <trans-unit id="5f13e9a0d0cc1d2eed857d3ca8de0106c74f457a" translate="yes" xml:space="preserve">
          <source>Distinguish between equality relations when printing</source>
          <target state="translated">印刷時の平等関係の区別</target>
        </trans-unit>
        <trans-unit id="27db5ed42b204a0a3e614e52e6864b8444eff91c" translate="yes" xml:space="preserve">
          <source>Distrust all packages by default. See &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、すべてのパッケージを信頼しません。&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskellを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="828ed4fb7d499eca2ce8a3461d66b961315b9609" translate="yes" xml:space="preserve">
          <source>Ditto for C-- level.</source>
          <target state="translated">C-レベルの場合も同様です。</target>
        </trans-unit>
        <trans-unit id="529f8d920909015b979708e636eb1b0583481347" translate="yes" xml:space="preserve">
          <source>Ditto for C-\- level.</source>
          <target state="translated">Cレベルも同じ。</target>
        </trans-unit>
        <trans-unit id="afe8900fa287c03fd30dbd6b3a6829235fe8571c" translate="yes" xml:space="preserve">
          <source>Ditto for STG level.</source>
          <target state="translated">STGレベルも同様。</target>
        </trans-unit>
        <trans-unit id="fb7c5e4b77643e7474e2d21dd2896fc952052045" translate="yes" xml:space="preserve">
          <source>Div</source>
          <target state="translated">Div</target>
        </trans-unit>
        <trans-unit id="0e0428eb4b4eab54f44920a7df647e270ec33bbb" translate="yes" xml:space="preserve">
          <source>Divide two vectors element-wise.</source>
          <target state="translated">2つのベクトルを要素ごとに分割します。</target>
        </trans-unit>
        <trans-unit id="3e2e4874af75becbe44cb2b0a6d9f2352f708762" translate="yes" xml:space="preserve">
          <source>DivideByZero</source>
          <target state="translated">DivideByZero</target>
        </trans-unit>
        <trans-unit id="1ecabac4d0f19a622dc8aec70a1ba17d35bd21ce" translate="yes" xml:space="preserve">
          <source>Division (round down) of natural numbers. &lt;code&gt;Div x 0&lt;/code&gt; is undefined (i.e., it cannot be reduced).</source>
          <target state="translated">自然数の除算（切り捨て）。 &lt;code&gt;Div x 0&lt;/code&gt; は未定義です（つまり、縮小できません）。</target>
        </trans-unit>
        <trans-unit id="66b0fa82a2f7aee8b06be80588b47c3331c7e6d0" translate="yes" xml:space="preserve">
          <source>Divisor must be non-zero otherwise the GHC runtime will terminate with a division-by-zero fault.</source>
          <target state="translated">割り算は0以外の値でなければならず、そうしないとGHCランタイムは割り算×0のフォルトで終了します。</target>
        </trans-unit>
        <trans-unit id="cf24473d5239f6c1149dcebbe7d98b5f716e68dd" translate="yes" xml:space="preserve">
          <source>Do a prefix lookup on the list of built-in commands - if a built-in command matches, but a macro is defined with the same name as the built-in defined, pick the macro.</source>
          <target state="translated">ビルトインコマンドのリストで接頭辞検索を行います-ビルトインコマンドが一致するが、ビルトインで定義されたものと同じ名前のマクロが定義されている場合は、そのマクロを選択します。</target>
        </trans-unit>
        <trans-unit id="037d9991f38e83b758fc25c6be1e5f31fd146548" translate="yes" xml:space="preserve">
          <source>Do a prefix lookup on the list of built-in commands.</source>
          <target state="translated">ビルトインコマンドのリストの接頭辞検索を行います。</target>
        </trans-unit>
        <trans-unit id="8963462aecb5ee357d5df2911ad470bfc1bb7cf5" translate="yes" xml:space="preserve">
          <source>Do a prefix lookup on the list of defined macros.</source>
          <target state="translated">定義されたマクロのリストの接頭辞検索を行います。</target>
        </trans-unit>
        <trans-unit id="31d96ab2a5de1288ed2e70f884fb130e2a57d688" translate="yes" xml:space="preserve">
          <source>Do no newline translation at all.</source>
          <target state="translated">改行翻訳は一切しないでください。</target>
        </trans-unit>
        <trans-unit id="fb0d094004e4e74866bcf3d621d782be625c225a" translate="yes" xml:space="preserve">
          <source>Do not collect entry counts</source>
          <target state="translated">エントリーカウントを収集しないでください。</target>
        </trans-unit>
        <trans-unit id="736a6d9ac84a5d48ffc66785f18269f75f39b751" translate="yes" xml:space="preserve">
          <source>Do not embed the manifest in the executable (Windows only)</source>
          <target state="translated">マニフェストを実行ファイルに埋め込まないでください(Windows のみ</target>
        </trans-unit>
        <trans-unit id="5415eea28f1415b37d7e8be1c9b45f9616d70fd9" translate="yes" xml:space="preserve">
          <source>Do not garbage-collect CAFs (top-level expressions) at runtime</source>
          <target state="translated">実行時にCAF(トップレベル式)をガベージコレクトしないようにします。</target>
        </trans-unit>
        <trans-unit id="1ccdfa79f69f2e2c9d61bbc5ecbc0e4193e9335f" translate="yes" xml:space="preserve">
          <source>Do not generate a manifest file (Windows only)</source>
          <target state="translated">マニフェストファイルを生成しない(Windows のみ</target>
        </trans-unit>
        <trans-unit id="4466b2081efed55135f318c50f3327de278c969c" translate="yes" xml:space="preserve">
          <source>Do not mix &lt;code&gt;&lt;a href=&quot;control-monad-catch-pure#t:CatchT&quot;&gt;CatchT&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;. Choose one or the other for the bottom of your transformer stack!</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-catch-pure#t:CatchT&quot;&gt;CatchT&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; を混在させないでください。変圧器スタックの一番下にどちらかを選択してください！</target>
        </trans-unit>
        <trans-unit id="5392bc3c52b9fa354617880ddb7859d1b93664b7" translate="yes" xml:space="preserve">
          <source>Do not recompile modules just to match changes to HPC flags. This is especially useful for avoiding recompilation when using GHCi, and is enabled by default for GHCi.</source>
          <target state="translated">HPCフラグの変更に合わせるためだけにモジュールを再コンパイルしないでください。これはGHCiを使用する際に再コンパイルを避けるために特に有用であり、GHCiではデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="e46e9af60a96e738bb4c88cac87acbe426215d4f" translate="yes" xml:space="preserve">
          <source>Do not recompile modules just to match changes to optimisation flags. This is especially useful for avoiding recompilation when using GHCi, and is enabled by default for GHCi.</source>
          <target state="translated">最適化フラグの変更に合わせるためだけにモジュールを再コンパイルしないようにします。これはGHCiを使用する際に再コンパイルを避けるために特に有用であり、GHCiではデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="41f908f21de70ffede2089b76edda985f1ea753d" translate="yes" xml:space="preserve">
          <source>Do not retain CAFs. Everything reachable from foreign exports will be retained, due to the StablePtrs created by the module initialisation code. unloadObj frees these StablePtrs, which will allow the CAFs to be GC'd and the code to be removed.</source>
          <target state="translated">CAF を保持しないでください。unloadObj はこれらの StablePtr を解放し、CAF を GC 化してコードを削除できるようにします。</target>
        </trans-unit>
        <trans-unit id="07c09dc6b41b9db1639cff240740686e8a041a1a" translate="yes" xml:space="preserve">
          <source>Do not talk about &quot;safe&quot;! You do not know what is safe!</source>
          <target state="translated">安全」を語るな! 何が安全なのか分かっていない!</target>
        </trans-unit>
        <trans-unit id="b85e0c586de2cc364d439565dc8cfa050ca7477e" translate="yes" xml:space="preserve">
          <source>DoAndIfThenElse</source>
          <target state="translated">DoAndIfThenElse</target>
        </trans-unit>
        <trans-unit id="740ce5dce4c207feb69807b48d6241ef4b8ca2d8" translate="yes" xml:space="preserve">
          <source>DoCostCentres</source>
          <target state="translated">DoCostCentres</target>
        </trans-unit>
        <trans-unit id="78d51926f0369308927d7a960b8aca1c05154647" translate="yes" xml:space="preserve">
          <source>DoHeapProfile</source>
          <target state="translated">DoHeapProfile</target>
        </trans-unit>
        <trans-unit id="baa45cb7e6a3cef8d1fd896f21b79dcf75dea6e3" translate="yes" xml:space="preserve">
          <source>DoTrace</source>
          <target state="translated">DoTrace</target>
        </trans-unit>
        <trans-unit id="cdba60a525e91017acace2575a32341fe23198be" translate="yes" xml:space="preserve">
          <source>Doc</source>
          <target state="translated">Doc</target>
        </trans-unit>
        <trans-unit id="1c36a0c213108bbab0ac5b5c094f39ffb5618089" translate="yes" xml:space="preserve">
          <source>Document end.</source>
          <target state="translated">ドキュメント終了。</target>
        </trans-unit>
        <trans-unit id="4b337e3c24c7d3fec0dc81bc2bff801f3dc35c49" translate="yes" xml:space="preserve">
          <source>Does *not* include the call-site of &lt;code&gt;&lt;a href=&quot;ghc-stack#v:callStack&quot;&gt;callStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack#v:callStack&quot;&gt;callStack&lt;/a&gt;&lt;/code&gt; の呼び出しサイトは含まれません。</target>
        </trans-unit>
        <trans-unit id="39606dbe4b603cccba14523562abfc58e42d8ce9" translate="yes" xml:space="preserve">
          <source>Does a path have a drive.</source>
          <target state="translated">パスにはドライブがあるのか</target>
        </trans-unit>
        <trans-unit id="f1b9bc44e360eaf702a2c65231ae3f1eb8be34fa" translate="yes" xml:space="preserve">
          <source>Does automatic cleanup when the action finishes. If there is an exception in the body then it ensures that the process gets terminated and any &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s are closed. In particular this means that if the Haskell thread is killed (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt;), that the external process is also terminated.</source>
          <target state="translated">アクションの終了時に自動クリーンアップを実行します。本文に例外がある場合は、プロセスが終了し、すべての &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; が確実に閉じられます。特にこれは、Haskellスレッドがkillされた場合（たとえば &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; ）、外部プロセスも終了することを意味します。</target>
        </trans-unit>
        <trans-unit id="f5ff72bedcfa081bc6c44835f29f6bfea616ec97" translate="yes" xml:space="preserve">
          <source>Does automatic cleanup when the action finishes. If there is an exception in the body then it ensures that the process gets terminated and any &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s are closed. In particular this means that if the Haskell thread is killed (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt;), that the external process is also terminated.</source>
          <target state="translated">アクションが終了すると、自動クリーンアップを実行します。本文に例外がある場合は、プロセスが終了し、 &lt;code&gt;&lt;a href=&quot;system-process#v:CreatePipe&quot;&gt;CreatePipe&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; がすべて閉じられるようにします。特に、これは、Haskellスレッドが強制終了された場合（例： &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; ）、外部プロセスも終了することを意味します。</target>
        </trans-unit>
        <trans-unit id="4e324583d057fe2d54724a305a15cd269b994f12" translate="yes" xml:space="preserve">
          <source>Does the element occur in the structure?</source>
          <target state="translated">その要素は構造体の中に存在しますか?</target>
        </trans-unit>
        <trans-unit id="7462a03355a66c6cc7733858f716523c27b76845" translate="yes" xml:space="preserve">
          <source>Does the given filename have an extension?</source>
          <target state="translated">与えられたファイル名には拡張子がありますか?</target>
        </trans-unit>
        <trans-unit id="cb3186d40e2f31843ee738ec131900b0395f45bc" translate="yes" xml:space="preserve">
          <source>Does the given filename have the specified extension?</source>
          <target state="translated">与えられたファイル名は指定された拡張子を持っていますか?</target>
        </trans-unit>
        <trans-unit id="f459d72b3027c47a3cbe09793bd8bff6a34463ad" translate="yes" xml:space="preserve">
          <source>Doing I/O with &lt;code&gt;IOUArray&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;IOUArray&lt;/code&gt; を使用したI / O の実行</target>
        </trans-unit>
        <trans-unit id="22a1c09f4dcfe0f3391657f63999bd2faa2e4b34" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t assume this program contains &lt;code&gt;main&lt;/code&gt;</source>
          <target state="translated">このプログラムに &lt;code&gt;main&lt;/code&gt; が含まれているとは限りません</target>
        </trans-unit>
        <trans-unit id="7e8ddfddc306586c42eb0e231f9979a650f34685" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t automatically link in the base and rts packages.</source>
          <target state="translated">baseパッケージとrtsパッケージを自動的にリンクしないでください。</target>
        </trans-unit>
        <trans-unit id="a28495d847c5e5628a67e1b5272bca25d90662d8" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget to use the same &lt;code&gt;-package&lt;/code&gt; options on the &lt;code&gt;ghc -M&lt;/code&gt; command line as you would when compiling; this enables the dependency generator to locate any imported modules that come from packages. The package modules won&amp;rsquo;t be included in the dependencies generated, though (but see the &lt;code&gt;-include-pkg-deps&lt;/code&gt; option below).</source>
          <target state="translated">コンパイル時と同じ &lt;code&gt;-package&lt;/code&gt; に、 &lt;code&gt;ghc -M&lt;/code&gt; コマンドラインで同じ-packageオプションを使用することを忘れないでください。これにより、依存関係ジェネレーターは、パッケージからのインポートされたモジュールを見つけることができます。ただし、パッケージモジュールは生成された依存関係に含まれません（ただし、以下の &lt;code&gt;-include-pkg-deps&lt;/code&gt; オプションを参照してください）。</target>
        </trans-unit>
        <trans-unit id="75227b7f6fe7db5af00cd801b113e12971a2d1ab" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate an import library for a DLL (Windows only)</source>
          <target state="translated">DLLのインポートライブラリを生成しない（Windowsのみ）</target>
        </trans-unit>
        <trans-unit id="4453c66d4a1a97f6cad0665a9418492411c64ac3" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t generate interface pragmas. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O0&quot;&gt;&lt;code&gt;-O0&lt;/code&gt;&lt;/a&gt; only.</source>
          <target state="translated">インターフェイスプラグマを生成しません。&lt;a href=&quot;using-optimisation#ghc-flag--O0&quot;&gt; &lt;code&gt;-O0&lt;/code&gt; &lt;/a&gt;によってのみ暗黙指定されます。</target>
        </trans-unit>
        <trans-unit id="1fc04e1914ca12dca0b4ce5bbe8d203561ccadc5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t guess&amp;mdash;look it up.</source>
          <target state="translated">推測しないでください。調べてください。</target>
        </trans-unit>
        <trans-unit id="41f62d6c2ddb9dd50b8b7d440a270bcd71c1dd99" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t implicitly &lt;code&gt;import Prelude&lt;/code&gt;. Implied by &lt;a href=&quot;#extension-RebindableSyntax&quot;&gt;&lt;code&gt;RebindableSyntax&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">暗黙的に &lt;code&gt;import Prelude&lt;/code&gt; しないでください。&lt;a href=&quot;#extension-RebindableSyntax&quot;&gt; &lt;code&gt;RebindableSyntax&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="c68a69dd8f2ba8c15d4bd8740bcb119252369d38" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t import &lt;code&gt;Prelude&lt;/code&gt; by default.</source>
          <target state="translated">デフォルトでは &lt;code&gt;Prelude&lt;/code&gt; をインポートしないでください。</target>
        </trans-unit>
        <trans-unit id="d176a6874cc34f178506c7c284bbee21178b8c11" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t print RTS suggestions about linking with &lt;code&gt;-rtsopts[=⟨none|some|all|ignore|ignoreAll⟩]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-rtsopts[=⟨none|some|all|ignore|ignoreAll⟩]&lt;/code&gt; とのリンクに関するRTS提案を出力しません。</target>
        </trans-unit>
        <trans-unit id="5faa911d368e94e06d73bdb5789b5d465919a8ef" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t read either &lt;code&gt;./.ghci&lt;/code&gt; or the other startup files when starting up.</source>
          <target state="translated">起動時に &lt;code&gt;./.ghci&lt;/code&gt; やその他の起動ファイルを読み込まないでください。</target>
        </trans-unit>
        <trans-unit id="c2598a50a4502b0a29e358b93372146110ed0dfd" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use absolute paths in &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;configure&lt;/code&gt; &amp;amp; co if there is any chance that those might be passed to GHC (or to GHC-compiled programs). Relative paths are fine because cygwin tools are happy with them and GHC accepts &lt;code&gt;/&lt;/code&gt; as path-separator. And relative paths don&amp;rsquo;t depend on where Cygwin&amp;rsquo;s root directory is located, or on which partition or network drive your source tree happens to reside, as long as you &lt;code&gt;cd&lt;/code&gt; there first.</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; 、 &lt;code&gt;configure&lt;/code&gt; 、coでGHC（またはGHCコンパイル済みプログラム）に渡される可能性がある場合は、絶対パスを使用しないでください。cygwinツールはそれらに満足しており、GHCは &lt;code&gt;/&lt;/code&gt; をパス区切り文字として受け入れているため、相対パスは問題ありません。また、相対パスは、最初に &lt;code&gt;cd&lt;/code&gt; を実行する限り、Cygwinのルートディレクトリの場所や、ソースツリーが存在するパーティションまたはネットワークドライブに依存しません。</target>
        </trans-unit>
        <trans-unit id="8bb09fa2f1f1816bc53537ab9f5401dc72f90736" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use too much memory!</source>
          <target state="translated">メモリを使いすぎないでください。</target>
        </trans-unit>
        <trans-unit id="e564d92c057c9704dbb560fe9722f7cb93c81e7f" translate="yes" xml:space="preserve">
          <source>Don't assume this program contains &lt;code&gt;main&lt;/code&gt;</source>
          <target state="translated">このプログラムに &lt;code&gt;main&lt;/code&gt; が含まれていると思い込まないでください</target>
        </trans-unit>
        <trans-unit id="33a0f3ef8b5d6e2fa9f4e0a54d3aa0d4004a9a31" translate="yes" xml:space="preserve">
          <source>Don't automatically link in the base and rts packages.</source>
          <target state="translated">baseとrtsのパッケージで自動的にリンクしないようにしてください。</target>
        </trans-unit>
        <trans-unit id="2dd5162998b1834bcbae5757ca817a12eb3b53d6" translate="yes" xml:space="preserve">
          <source>Don't generate an import library for a DLL (Windows only)</source>
          <target state="translated">DLL用のインポートライブラリを生成しない(Windowsのみ)</target>
        </trans-unit>
        <trans-unit id="a71a6a9b99e9afc284ef82609f391b535c1cee76" translate="yes" xml:space="preserve">
          <source>Don't generate bindings for Typeable methods</source>
          <target state="translated">Typeableメソッドのバインディングを生成しない</target>
        </trans-unit>
        <trans-unit id="c702b7196e560516aca4439c1db56db549999ae3" translate="yes" xml:space="preserve">
          <source>Don't generate interface pragmas. Implied by &lt;code&gt;-O0&lt;/code&gt; only.</source>
          <target state="translated">インターフェイスプラグマを生成しないでください。 &lt;code&gt;-O0&lt;/code&gt; によってのみ暗示されます。</target>
        </trans-unit>
        <trans-unit id="faa62399bc1df205a2d3392983761eb1a762b020" translate="yes" xml:space="preserve">
          <source>Don't implicitly &lt;code&gt;import Prelude&lt;/code&gt;. Implied by &lt;a href=&quot;#extension-RebindableSyntax&quot;&gt;&lt;code&gt;RebindableSyntax&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import Prelude&lt;/code&gt; 暗黙的にインポートしないでください。&lt;a href=&quot;#extension-RebindableSyntax&quot;&gt; &lt;code&gt;RebindableSyntax&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="4fdedfba24394026760f3a1da02e404624b18d59" translate="yes" xml:space="preserve">
          <source>Don't print RTS suggestions about linking with &lt;code&gt;-rtsopts[=⟨none|some|all|ignore|ignoreAll⟩]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-rtsopts[=⟨none|some|all|ignore|ignoreAll⟩]&lt;/code&gt; とのリンクに関するRTSの提案を出力しないでください。</target>
        </trans-unit>
        <trans-unit id="e9b450d14bc2363d292c84f17cfad5cfbd58a458" translate="yes" xml:space="preserve">
          <source>Done</source>
          <target state="translated">Done</target>
        </trans-unit>
        <trans-unit id="213400b3ee4d6020b68a233e95fe1dd4e29e408e" translate="yes" xml:space="preserve">
          <source>DontRetainCAFs</source>
          <target state="translated">DontRetainCAFs</target>
        </trans-unit>
        <trans-unit id="81581597044514bf54d4f97266022fc991f3915e" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="translated">Double</target>
        </trans-unit>
        <trans-unit id="00311dcff3e799ccf5d3c2ac4d62afe57994747c" translate="yes" xml:space="preserve">
          <source>Double each element of a list:</source>
          <target state="translated">リストの各要素を2倍にします。</target>
        </trans-unit>
        <trans-unit id="3687347d7d57e49606871a3a6af4b47d9ec1a473" translate="yes" xml:space="preserve">
          <source>Double methods</source>
          <target state="translated">ダブルメソッド</target>
        </trans-unit>
        <trans-unit id="23f1d9a09da6fc8de594c342e86e01b153cb1588" translate="yes" xml:space="preserve">
          <source>Double#</source>
          <target state="translated">Double#</target>
        </trans-unit>
        <trans-unit id="7cf21adbef6d8f21393444145f63a3ea0ccfe6a6" translate="yes" xml:space="preserve">
          <source>Double-precision floating point numbers. It is desirable that this type be at least equal in range and precision to the IEEE double-precision type.</source>
          <target state="translated">倍精度浮動小数点数。この型は、少なくともIEEEE倍精度型と同等の範囲と精度であることが望ましい。</target>
        </trans-unit>
        <trans-unit id="2243a5207550c66bb35891b6dd6fb879fba1f299" translate="yes" xml:space="preserve">
          <source>Double/Int conversions, wrapped primops</source>
          <target state="translated">ダブル/インテット変換、ラップされたプリモプス</target>
        </trans-unit>
        <trans-unit id="92ea8780f2c88da169c501d9f5a6eafd910cb137" translate="yes" xml:space="preserve">
          <source>DoubleElemRep</source>
          <target state="translated">DoubleElemRep</target>
        </trans-unit>
        <trans-unit id="7217110a5c20b3a2f172c557a592ffb918982435" translate="yes" xml:space="preserve">
          <source>DoubleRep</source>
          <target state="translated">DoubleRep</target>
        </trans-unit>
        <trans-unit id="6c1febe2ce469f0565ae59196635387aa770ad72" translate="yes" xml:space="preserve">
          <source>DoubleX2#</source>
          <target state="translated">DoubleX2#</target>
        </trans-unit>
        <trans-unit id="63df93d7ebc4ec3e0887172bebf1f334a2a857c7" translate="yes" xml:space="preserve">
          <source>DoubleX4#</source>
          <target state="translated">DoubleX4#</target>
        </trans-unit>
        <trans-unit id="47b58b78faecef175261b9a5ad9e3442df9cb594" translate="yes" xml:space="preserve">
          <source>DoubleX8#</source>
          <target state="translated">DoubleX8#</target>
        </trans-unit>
        <trans-unit id="bf93e5ce8bc1228c2585b3f5a368053c9fe8346a" translate="yes" xml:space="preserve">
          <source>Down</source>
          <target state="translated">Down</target>
        </trans-unit>
        <trans-unit id="73cf3343ddf7ff2d3e85d01a3ba5669fa59ac42f" translate="yes" xml:space="preserve">
          <source>Drive functions</source>
          <target state="translated">ドライブ機能</target>
        </trans-unit>
        <trans-unit id="903b70fb4a770994ae91e55515970e768a05239a" translate="yes" xml:space="preserve">
          <source>DriveType</source>
          <target state="translated">DriveType</target>
        </trans-unit>
        <trans-unit id="7fd455412b98120fb90d79f2704908afa5eca57d" translate="yes" xml:space="preserve">
          <source>Drop a given number of elements in order, beginning with the smallest ones.</source>
          <target state="translated">与えられた数の要素を、小さいものから順にドロップします。</target>
        </trans-unit>
        <trans-unit id="2cecce9eaecfe88abb3c6fa1f98b1cd0ae12bb3d" translate="yes" xml:space="preserve">
          <source>Drop a given number of entries in key order, beginning with the smallest keys.</source>
          <target state="translated">指定した数のエントリを、小さいキーから順に削除します。</target>
        </trans-unit>
        <trans-unit id="bfedb66baeb222a48529aa5534e5dbd3b7123746" translate="yes" xml:space="preserve">
          <source>Drop a previous file descriptor registration, without waking the event manager thread. The return value indicates whether the event manager ought to be woken.</source>
          <target state="translated">イベントマネージャのスレッドを起動せずに、前のファイル記述子の登録を削除します。戻り値はイベントマネージャを起動すべきかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="f9015dacdb506ba00308d42d97360cfcbf78516d" translate="yes" xml:space="preserve">
          <source>Drop a previous file descriptor registration.</source>
          <target state="translated">前のファイルディスクリプタの登録を削除します。</target>
        </trans-unit>
        <trans-unit id="79e60d380f1468e5869091d0043510e56426b4f2" translate="yes" xml:space="preserve">
          <source>Drop all extensions.</source>
          <target state="translated">すべての拡張子を削除します。</target>
        </trans-unit>
        <trans-unit id="ec241b3fdfdd648035146e2048041d6e79937705" translate="yes" xml:space="preserve">
          <source>Drop all the entries whose keys are missing from the other map.</source>
          <target state="translated">他のマップからキーがなくなっているエントリをすべて削除します。</target>
        </trans-unit>
        <trans-unit id="5e790e96afa648e046b5c5782cf585b2082c53cc" translate="yes" xml:space="preserve">
          <source>Drop the filename. Unlike &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt;, this function will leave a trailing path separator on the directory.</source>
          <target state="translated">ファイル名を削除します。 &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt; とは異なり、この関数は、ディレクトリに末尾のパス区切り文字を残します。</target>
        </trans-unit>
        <trans-unit id="cd6eb14ec4ef74fb7103025e2ffb966000ac3cd3" translate="yes" xml:space="preserve">
          <source>Drop the filename. Unlike &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt;, this function will leave a trailing path separator on the directory.</source>
          <target state="translated">ファイル名を削除します。 &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt; とは異なり、この関数は、ディレクトリに末尾のパス区切り文字を残します。</target>
        </trans-unit>
        <trans-unit id="8ef03a6b16e0c0e0e0ab7dd465278c04304793d5" translate="yes" xml:space="preserve">
          <source>Drop the given extension from a FilePath, and the &lt;code&gt;&quot;.&quot;&lt;/code&gt; preceding it. Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the FilePath does not have the given extension, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; and the part before the extension if it does.</source>
          <target state="translated">指定された拡張子をFilePathからドロップし、 &lt;code&gt;&quot;.&quot;&lt;/code&gt; その前に。FilePathに指定された拡張子がない場合は &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; を返します。拡張子がある場合は、 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; および拡張子の前の部分を返します。</target>
        </trans-unit>
        <trans-unit id="cd867dbc57d5f49ae22b888e7af98e917ae162b2" translate="yes" xml:space="preserve">
          <source>Drop the given extension from a FilePath, and the &lt;code&gt;&quot;.&quot;&lt;/code&gt; preceding it. Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the FilePath does not have the given extension, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; and the part before the extension if it does.</source>
          <target state="translated">指定された拡張子をFilePathから削除し、 &lt;code&gt;&quot;.&quot;&lt;/code&gt; その前に。FilePathに指定された拡張子がない場合は &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; を返し、拡張子がある場合は &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; と拡張子の前の部分を返します。</target>
        </trans-unit>
        <trans-unit id="89e4fa7c6e21bf128815cf184349592868a477ce" translate="yes" xml:space="preserve">
          <source>Dual</source>
          <target state="translated">Dual</target>
        </trans-unit>
        <trans-unit id="655c0d6bf7281807bd22458afa1d00662a4a5f21" translate="yes" xml:space="preserve">
          <source>Dual arrows</source>
          <target state="translated">デュアルアロー</target>
        </trans-unit>
        <trans-unit id="2e543ebbb4af8cf0f7b3656d8911643d4d21f6a7" translate="yes" xml:space="preserve">
          <source>Dual function arrows.</source>
          <target state="translated">デュアル機能の矢印。</target>
        </trans-unit>
        <trans-unit id="f1468c9bed9c9c70d85acbb71f95a186f63482e4" translate="yes" xml:space="preserve">
          <source>Due to platform limitations, GHC may fail to produce profiled object files on 32-bit Windows (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/15934&quot;&gt;Issue #15934&lt;/a&gt;).</source>
          <target state="translated">プラットフォームの制限により、GHCは32ビットWindowsでプロファイルオブジェクトファイルの生成に失敗する場合があります（&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/15934&quot;&gt;問題＃15934を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="65d8a952cd925701fd59b3b3f4efd3613d4f5471" translate="yes" xml:space="preserve">
          <source>Due to the nature of GHC&amp;rsquo;s heap and the heavy optimization that it performs, it is quite difficult to probe the values of bindings at runtime. In this way, the debugging experience of a Haskell program with DWARF support is still a bit impoverished compared to typical imperative debuggers.</source>
          <target state="translated">GHCのヒープの性質とGHCが実行する高度な最適化により、実行時にバインディングの値をプローブすることは非常に困難です。このように、DWARFをサポートするHaskellプログラムのデバッグエクスペリエンスは、通常の命令型デバッガーと比較すると、依然として少し貧弱です。</target>
        </trans-unit>
        <trans-unit id="ba2139e8301d215890f5d68d2f42cdbee76e9754" translate="yes" xml:space="preserve">
          <source>Due to the semantic consistency guarantee of Safe Haskell, we must restrict the function of overlapping instances. We don&amp;rsquo;t restrict their ability to be defined, as this is a global property and not something we can determine by looking at a single module. Instead, when a module calls a function belonging to a type-class, we check that the instance resolution done is considered &amp;lsquo;safe&amp;rsquo;. This check is enforced for modules compiled with both &lt;code&gt;-XSafe&lt;/code&gt; and &lt;code&gt;-XTrustworthy&lt;/code&gt;.</source>
          <target state="translated">Safe Haskellのセマンティックの一貫性保証のため、重複するインスタンスの機能を制限する必要があります。これはグローバルプロパティであり、単一のモジュールを見て判断できるものではないため、定義する機能を制限しません。代わりに、モジュールが型クラスに属する関数を呼び出すときに、実行されたインスタンス解決が「安全」と見なされていることを確認します。このチェックは、 &lt;code&gt;-XSafe&lt;/code&gt; と &lt;code&gt;-XTrustworthy&lt;/code&gt; の両方でコンパイルされたモジュールに適用されます。</target>
        </trans-unit>
        <trans-unit id="4d0a40e820d02f2af4f8fa686fd0cc49b8c113f1" translate="yes" xml:space="preserve">
          <source>Due to this, it is suggested that when compiling untrusted source code that has had no manual inspection done, the following precautions be taken:</source>
          <target state="translated">このため、手動検査を行っていない信頼できないソースコードをコンパイルする際には、以下のような注意が必要です。</target>
        </trans-unit>
        <trans-unit id="0813c26645464878824800d05116758b8072b060" translate="yes" xml:space="preserve">
          <source>Dump &amp;ldquo;occurrence analysis&amp;rdquo; output</source>
          <target state="translated">「発生分析」出力のダンプ</target>
        </trans-unit>
        <trans-unit id="3c7b8e8db706a258b893fcfacdb2550d3aac68d0" translate="yes" xml:space="preserve">
          <source>Dump &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (without sign) to &lt;code&gt;&lt;em&gt;addr&lt;/em&gt;&lt;/code&gt; in base-256 representation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; （符号なし）をbase-256表現で &lt;code&gt;&lt;em&gt;addr&lt;/em&gt;&lt;/code&gt; にダンプします。</target>
        </trans-unit>
        <trans-unit id="e12efa200228ae8d5981ea2dc31d9b9fa120798b" translate="yes" xml:space="preserve">
          <source>Dump &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (without sign) to mutable byte-array in base-256 representation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; （符号なし）をbase-256表現の可変バイト配列にダンプします。</target>
        </trans-unit>
        <trans-unit id="9fb9e2ad65c9852b2a45c4d7c448785358eeee6f" translate="yes" xml:space="preserve">
          <source>Dump &lt;code&gt;foreign export&lt;/code&gt; stubs</source>
          <target state="translated">&lt;code&gt;foreign export&lt;/code&gt; スタブをダンプする</target>
        </trans-unit>
        <trans-unit id="c8afeb9e1140b7d0ae16be767a5b0a2c265f9e2e" translate="yes" xml:space="preserve">
          <source>Dump CSE output</source>
          <target state="translated">CSE出力をダンプ</target>
        </trans-unit>
        <trans-unit id="fb49d295916e05bed64252b939c8d43ae827d011" translate="yes" xml:space="preserve">
          <source>Dump LLVM intermediate code.</source>
          <target state="translated">LLVMの中間コードをダンプする。</target>
        </trans-unit>
        <trans-unit id="b6f787bc067d4542fcee491891c915b097d447db" translate="yes" xml:space="preserve">
          <source>Dump STG-to-C-\- output</source>
          <target state="translated">ダンプ STG-to-C-出力</target>
        </trans-unit>
        <trans-unit id="10f4f2b7f4fad48e04dfdc3deced740448e5d2f8" translate="yes" xml:space="preserve">
          <source>Dump TH spliced expressions, and what they evaluate to</source>
          <target state="translated">TH スプライスされた表現をダンプし、それが何を評価するのか</target>
        </trans-unit>
        <trans-unit id="e48a78682f63662da2108e21bc01e6c0bcc49b0a" translate="yes" xml:space="preserve">
          <source>Dump Template Haskell expressions that we splice in, and what Haskell code the expression evaluates to.</source>
          <target state="translated">ダンプテンプレート スプライスしたHaskell式と、その式がどのようなHaskellコードに評価されるかを示します。</target>
        </trans-unit>
        <trans-unit id="bba50fee96a6704c36476f0ad263c881d07fb4af" translate="yes" xml:space="preserve">
          <source>Dump a mapping of modules to where they come from, and how:</source>
          <target state="translated">モジュールがどこから来たのか、どのように来たのかをマッピングしたものをダンプします。</target>
        </trans-unit>
        <trans-unit id="11e57091ff18e5b2ebfb8dab55c0d2b6b2fa66d9" translate="yes" xml:space="preserve">
          <source>Dump a minimal set of imports</source>
          <target state="translated">最小限の輸入品のセットをダンプ</target>
        </trans-unit>
        <trans-unit id="37711c76dcf1b697cab593998275b607cfd202b0" translate="yes" xml:space="preserve">
          <source>Dump a type signature for each value defined at the top level of the module. The list is sorted alphabetically. Using &lt;a href=&quot;#ghc-flag--dppr-debug&quot;&gt;&lt;code&gt;-dppr-debug&lt;/code&gt;&lt;/a&gt; dumps a type signature for all the imported and system-defined things as well; useful for debugging the compiler.</source>
          <target state="translated">モジュールのトップレベルで定義された各値の型シグネチャをダンプします。リストはアルファベット順にソートされています。&lt;a href=&quot;#ghc-flag--dppr-debug&quot;&gt; &lt;code&gt;-dppr-debug&lt;/code&gt; &lt;/a&gt;を使用すると、インポートされ、システムで定義されたすべてのものの型シグネチャもダンプされます。コンパイラのデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="28c7cf2e47d59329fa85255bf0488930a43e3d06" translate="yes" xml:space="preserve">
          <source>Dump assembly augmented with register liveness</source>
          <target state="translated">レジスタの明るさで拡張されたダンプアセンブリ</target>
        </trans-unit>
        <trans-unit id="02188d511d5c3b4fbca6682ec2d233274f7ae9ef" translate="yes" xml:space="preserve">
          <source>Dump byte-code objects (BCOs) produced for the GHC&amp;rsquo;s byte-code interpreter.</source>
          <target state="translated">GHCのバイトコードインタープリター用に生成されたバイトコードオブジェクト（BCO）をダンプします。</target>
        </trans-unit>
        <trans-unit id="9b231f4c39ae6cc08daaa6815ab557a44252f01d" translate="yes" xml:space="preserve">
          <source>Dump common subexpression elimination (CSE) pass output</source>
          <target state="translated">共通副表現除去(CSE)パス出力のダンプ</target>
        </trans-unit>
        <trans-unit id="6868986664ce80714b911305183ec7357c71bdad" translate="yes" xml:space="preserve">
          <source>Dump derived instances</source>
          <target state="translated">派生インスタンスのダンプ</target>
        </trans-unit>
        <trans-unit id="24dc256cae601af2b000ee6d22955356a9285111" translate="yes" xml:space="preserve">
          <source>Dump deriving output</source>
          <target state="translated">ダンプ導出出力</target>
        </trans-unit>
        <trans-unit id="527e0a55856d6ed53d7367b6cefa5659f9ba0051" translate="yes" xml:space="preserve">
          <source>Dump desugarer output.</source>
          <target state="translated">出力をダンプします。</target>
        </trans-unit>
        <trans-unit id="c73448d87710f2966f233c39809e209e02e0da2b" translate="yes" xml:space="preserve">
          <source>Dump desugarer output. &lt;a href=&quot;#ghc-flag--ddump-ds&quot;&gt;&lt;code&gt;-ddump-ds&lt;/code&gt;&lt;/a&gt; dumps the output after the very simple optimiser has run (which discards a lot of clutter and hence is a sensible default. &lt;a href=&quot;#ghc-flag--ddump-ds-preopt&quot;&gt;&lt;code&gt;-ddump-ds-preopt&lt;/code&gt;&lt;/a&gt; shows the output after desugaring but before the very simple optimiser.</source>
          <target state="translated">デバッガ出力をダンプします。&lt;a href=&quot;#ghc-flag--ddump-ds&quot;&gt; &lt;code&gt;-ddump-ds&lt;/code&gt; &lt;/a&gt;は、非常に単純なオプティマイザの実行後に出力をダンプします（これにより、多くの混乱が破棄されるため、合理的なデフォルトです。&lt;a href=&quot;#ghc-flag--ddump-ds-preopt&quot;&gt; &lt;code&gt;-ddump-ds-preopt&lt;/code&gt; &lt;/a&gt;は、非常に単純なオプティマイザの前の出力を表示します。</target>
        </trans-unit>
        <trans-unit id="fccfe136ecfc96df4c44ed654e4f374fc75eefeb" translate="yes" xml:space="preserve">
          <source>Dump detailed rule firing info</source>
          <target state="translated">ルールの詳細な発射情報をダンプ</target>
        </trans-unit>
        <trans-unit id="ee562cb3b3b57360106f67130ddf642e7dd69749" translate="yes" xml:space="preserve">
          <source>Dump error messages as JSON documents</source>
          <target state="translated">エラーメッセージをJSON文書としてダンプ</target>
        </trans-unit>
        <trans-unit id="d283c606b0ed78618185162090d235c3b8ced04b" translate="yes" xml:space="preserve">
          <source>Dump error messages as JSON documents. This is intended to be consumed by external tooling. A good way to use it is in conjunction with &lt;a href=&quot;#ghc-flag--ddump-to-file&quot;&gt;&lt;code&gt;-ddump-to-file&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エラーメッセージをJSONドキュメントとしてダンプします。これは、外部ツールによって使用されることを意図しています。これを使用する良い方法は、&lt;a href=&quot;#ghc-flag--ddump-to-file&quot;&gt; &lt;code&gt;-ddump-to-file&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​することです。</target>
        </trans-unit>
        <trans-unit id="0050e0d60f3f1b7388eabf9c78cba92a236af143" translate="yes" xml:space="preserve">
          <source>Dump evaluated TH declarations into &lt;code&gt;*.th.hs&lt;/code&gt; files</source>
          <target state="translated">評価されたTH宣言を &lt;code&gt;*.th.hs&lt;/code&gt; ファイルにダンプする</target>
        </trans-unit>
        <trans-unit id="4ff607170d2b94843fed54c30cfe1789f84f3e44" translate="yes" xml:space="preserve">
          <source>Dump expansions of all top-level Template Haskell splices into &lt;code&gt;&lt;em&gt;module&lt;/em&gt;.th.hs&lt;/code&gt; for each file &lt;code&gt;&lt;em&gt;module&lt;/em&gt;.hs&lt;/code&gt;.</source>
          <target state="translated">すべてのトップレベルテンプレートHaskellのスプライスのダンプ拡張 &lt;code&gt;&lt;em&gt;module&lt;/em&gt;.th.hs&lt;/code&gt; 各ファイルのための &lt;code&gt;&lt;em&gt;module&lt;/em&gt;.hs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e829bb3f18b4b7ef7423614b071264be59184aa2" translate="yes" xml:space="preserve">
          <source>Dump final STG</source>
          <target state="translated">最終的なSTGのダンプ</target>
        </trans-unit>
        <trans-unit id="bf538e6fa8362c058449d980970d4120ef551407" translate="yes" xml:space="preserve">
          <source>Dump final assembly</source>
          <target state="translated">ダンプ最終組立</target>
        </trans-unit>
        <trans-unit id="b552a6d93b544d292febc1fb7b62ee990baf743a" translate="yes" xml:space="preserve">
          <source>Dump final simplifier output</source>
          <target state="translated">最終的な単純化器の出力をダンプ</target>
        </trans-unit>
        <trans-unit id="108559f7b61b62f2ad06e278fb303816ab78b2dc" translate="yes" xml:space="preserve">
          <source>Dump flags</source>
          <target state="translated">フラグのダンプ</target>
        </trans-unit>
        <trans-unit id="4db4a7ef3d79a2ae9f904af2f6ab167689ce9ed8" translate="yes" xml:space="preserve">
          <source>Dump foreign export stubs.</source>
          <target state="translated">外国人輸出の半券をダンプします。</target>
        </trans-unit>
        <trans-unit id="88bbfbce8dfd5f0f1ca845ff72cbe64d38fb53da" translate="yes" xml:space="preserve">
          <source>Dump information about inlining decisions</source>
          <target state="translated">インライン決定に関する情報をダンプする</target>
        </trans-unit>
        <trans-unit id="5f26f688516caea9d2e60902da05a55c993455af" translate="yes" xml:space="preserve">
          <source>Dump information about potential rule application</source>
          <target state="translated">潜在的なルール適用に関する情報をダンプ</target>
        </trans-unit>
        <trans-unit id="546d3dff3f41adc73d9301832312f9c2a91ac047" translate="yes" xml:space="preserve">
          <source>Dump initial assembly</source>
          <target state="translated">ダンプ初期組立</target>
        </trans-unit>
        <trans-unit id="59359efca9bf7ef3714b4dd5f0776dc9ef36494a" translate="yes" xml:space="preserve">
          <source>Dump inlining info</source>
          <target state="translated">ダンプインライン情報</target>
        </trans-unit>
        <trans-unit id="4fa0c9dc2733aa7a8af8adbf12df037001abeae9" translate="yes" xml:space="preserve">
          <source>Dump interpreter byte code</source>
          <target state="translated">インタプリタのバイトコードをダンプ</target>
        </trans-unit>
        <trans-unit id="d52abc7a027a69db0ee1117813843ae5c1fa6158" translate="yes" xml:space="preserve">
          <source>Dump module cycles</source>
          <target state="translated">ダンプモジュールのサイクル</target>
        </trans-unit>
        <trans-unit id="9770ea68ad1c287ebadf8bee22203cf4e887a3e6" translate="yes" xml:space="preserve">
          <source>Dump occurrence analysis output</source>
          <target state="translated">ダンプ発生解析出力</target>
        </trans-unit>
        <trans-unit id="0407ce5aa4d2aad65ba8327aa3d9c89e19c0c90d" translate="yes" xml:space="preserve">
          <source>Dump output from each simplifier iteration</source>
          <target state="translated">各単純化処理の繰り返しからの出力をダンプ</target>
        </trans-unit>
        <trans-unit id="9053208dacd524bac619745451a2b0135c51a259" translate="yes" xml:space="preserve">
          <source>Dump output from main C-- pipeline stages. In case of &lt;code&gt;.cmm&lt;/code&gt; compilation this also dumps the result of file parsing. Not included are passes run by the chosen backend. Currently only the NCG backends runs additional passes ( &lt;a href=&quot;#ghc-flag--ddump-opt-cmm&quot;&gt;&lt;code&gt;-ddump-opt-cmm&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">メインC--パイプラインステージからの出力をダンプします。 &lt;code&gt;.cmm&lt;/code&gt; コンパイルの場合、これはファイル解析の結果もダンプします。選択したバックエンドによって実行されるパスは含まれません。現在、NCGバックエンドのみが追加のパス（&lt;a href=&quot;#ghc-flag--ddump-opt-cmm&quot;&gt; &lt;code&gt;-ddump-opt-cmm&lt;/code&gt; &lt;/a&gt;）を実行します。</target>
        </trans-unit>
        <trans-unit id="100187303aacd37a6052d46415cf92d84ce9daa8" translate="yes" xml:space="preserve">
          <source>Dump output from main C-\- pipeline stages. In case of &lt;code&gt;.cmm&lt;/code&gt; compilation this also dumps the result of file parsing. Not included are passes run by the chosen backend. Currently only the NCG backends runs additional passes ( &lt;a href=&quot;#ghc-flag--ddump-opt-cmm&quot;&gt;&lt;code&gt;-ddump-opt-cmm&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">メインC-\-パイプラインステージからの出力をダンプします。 &lt;code&gt;.cmm&lt;/code&gt; コンパイルの場合、これはファイル解析の結果もダンプします。選択したバックエンドによって実行されるパスは含まれません。現在、NCGバックエンドのみが追加のパスを実行しています（&lt;a href=&quot;#ghc-flag--ddump-opt-cmm&quot;&gt; &lt;code&gt;-ddump-opt-cmm&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7debd784d3811d64f4787526bed485db7f829794" translate="yes" xml:space="preserve">
          <source>Dump output of Core preparation pass</source>
          <target state="translated">コア準備パスのダンプ出力</target>
        </trans-unit>
        <trans-unit id="0d591cc247d9b2299456acdb197fbdb5996c8d1a" translate="yes" xml:space="preserve">
          <source>Dump output of STG-to-STG passes</source>
          <target state="translated">STG-to-STGパスのダンプ出力</target>
        </trans-unit>
        <trans-unit id="a20db43cde7efdd9c836885644e37efb3de580fa" translate="yes" xml:space="preserve">
          <source>Dump output of specialisation pass</source>
          <target state="translated">専門化パスの出力をダンプ</target>
        </trans-unit>
        <trans-unit id="35403a77603331b84c3309f5f71430c1313c7e0b" translate="yes" xml:space="preserve">
          <source>Dump parse tree</source>
          <target state="translated">ダンプ解析ツリー</target>
        </trans-unit>
        <trans-unit id="2c5edc4f898e525772affb884da0812b91579f35" translate="yes" xml:space="preserve">
          <source>Dump parser output</source>
          <target state="translated">パーサ出力をダンプ</target>
        </trans-unit>
        <trans-unit id="a5eda7dfeb3755117a1f344805c6d4476d07135c" translate="yes" xml:space="preserve">
          <source>Dump parser output as a syntax tree</source>
          <target state="translated">構文ツリーとしてパーサ出力をダンプ</target>
        </trans-unit>
        <trans-unit id="35fa3c0e461755b2a0d0a191aad69300b0c15669" translate="yes" xml:space="preserve">
          <source>Dump per-pass timing and allocation statistics</source>
          <target state="translated">パスごとのタイミングと割り当ての統計情報をダンプ</target>
        </trans-unit>
        <trans-unit id="03fb42a7d1bea17007bc0ad2947b4a4e12e79b12" translate="yes" xml:space="preserve">
          <source>Dump prepared core</source>
          <target state="translated">用意されたコアをダンプ</target>
        </trans-unit>
        <trans-unit id="2d2836bf3489c0017fa48acabda4fe7b0df5e506" translate="yes" xml:space="preserve">
          <source>Dump raw C-\-</source>
          <target state="translated">Dump raw C-\-</target>
        </trans-unit>
        <trans-unit id="be02bd4aac8ff2ab8319bf407b32e1b5625971cd" translate="yes" xml:space="preserve">
          <source>Dump renamer output</source>
          <target state="translated">リナマー出力をダンプ</target>
        </trans-unit>
        <trans-unit id="4b4d9007442a6c2a7a100dc61dab9b5feb262db1" translate="yes" xml:space="preserve">
          <source>Dump renamer output as a syntax tree</source>
          <target state="translated">リナマーの出力を構文ツリーとしてダンプ</target>
        </trans-unit>
        <trans-unit id="2b3ce293442e38047f9b268435b905fc7a5e5be8" translate="yes" xml:space="preserve">
          <source>Dump rewrite rules</source>
          <target state="translated">書き換えルールのダンプ</target>
        </trans-unit>
        <trans-unit id="74c7d00a52516c084382f57d7dc19614b8bacf91" translate="yes" xml:space="preserve">
          <source>Dump rule firing info</source>
          <target state="translated">ダンプルール発射情報</target>
        </trans-unit>
        <trans-unit id="ce4a884762251353a363d7b56b87ded7bf25330f" translate="yes" xml:space="preserve">
          <source>Dump simplifier output (Core-to-Core passes)</source>
          <target state="translated">ダンプ・シンプリファイア出力(コア間パス</target>
        </trans-unit>
        <trans-unit id="b849659e6d93dee6e7e7a225ba7e42dccaf833ef" translate="yes" xml:space="preserve">
          <source>Dump simplifier stats</source>
          <target state="translated">単純化された統計情報をダンプする</target>
        </trans-unit>
        <trans-unit id="f60baa3d517607a881beb83f9211ec93c3595da6" translate="yes" xml:space="preserve">
          <source>Dump specialiser output</source>
          <target state="translated">ダンプ専門家出力</target>
        </trans-unit>
        <trans-unit id="5422c0dac9a7709e75f5ce194b43c3cde0b8c7e5" translate="yes" xml:space="preserve">
          <source>Dump statistics about how many of each kind of transformation took place. If you add &lt;a href=&quot;#ghc-flag--dppr-debug&quot;&gt;&lt;code&gt;-dppr-debug&lt;/code&gt;&lt;/a&gt; you get more detailed information.</source>
          <target state="translated">発生した各種類の変換の数に関する統計をダンプします。&lt;a href=&quot;#ghc-flag--dppr-debug&quot;&gt; &lt;code&gt;-dppr-debug&lt;/code&gt; &lt;/a&gt;を追加すると、より詳細な情報が得られます。</target>
        </trans-unit>
        <trans-unit id="9c89a39caac4abaa3527f07c29e08b722e5a625f" translate="yes" xml:space="preserve">
          <source>Dump statistics from the register allocator.</source>
          <target state="translated">レジスタアロケータから統計情報をダンプします。</target>
        </trans-unit>
        <trans-unit id="809e488abbdae36b02a8470bf29a560648b54387" translate="yes" xml:space="preserve">
          <source>Dump strictness analyser output</source>
          <target state="translated">厳密さの分析装置の出力をダンプします。</target>
        </trans-unit>
        <trans-unit id="46b875c223c6c0a291dd58758551fb6b8f7b078f" translate="yes" xml:space="preserve">
          <source>Dump strictness signatures</source>
          <target state="translated">厳しさのサインをダンプ</target>
        </trans-unit>
        <trans-unit id="e69e6e62000494f9e7cd883b10f96d4194c00e6d" translate="yes" xml:space="preserve">
          <source>Dump the &amp;ldquo;raw&amp;rdquo; C--.</source>
          <target state="translated">「生の」C--をダンプします。</target>
        </trans-unit>
        <trans-unit id="cf5c5d67a13de615b1b53e9bdedb0bd0c6cf664a" translate="yes" xml:space="preserve">
          <source>Dump the &amp;ldquo;raw&amp;rdquo; C-\-.</source>
          <target state="translated">「生の」C-\-をダンプします。</target>
        </trans-unit>
        <trans-unit id="bc7068e51f6dc64f22f2ab7797a295b2e53c36ea" translate="yes" xml:space="preserve">
          <source>Dump the assumed weights of the CFG.</source>
          <target state="translated">CFGの想定ウェイトをダンプします。</target>
        </trans-unit>
        <trans-unit id="5981b57fcba527ebdccbbf5c1b24f51dbc579264" translate="yes" xml:space="preserve">
          <source>Dump the build/spill stages of the &lt;a href=&quot;using-optimisation#ghc-flag--fregs-graph&quot;&gt;&lt;code&gt;-fregs-graph&lt;/code&gt;&lt;/a&gt; register allocator.</source>
          <target state="translated">&lt;a href=&quot;using-optimisation#ghc-flag--fregs-graph&quot;&gt; &lt;code&gt;-fregs-graph&lt;/code&gt; &lt;/a&gt;レジスタアロケータのビルド/スピルステージをダンプします。</target>
        </trans-unit>
        <trans-unit id="f2d33781661e3972ef831bcda5018dd028dfa035" translate="yes" xml:space="preserve">
          <source>Dump the code instrumented by HPC (&lt;a href=&quot;profiling#hpc&quot;&gt;Observing Code Coverage&lt;/a&gt;).</source>
          <target state="translated">HPC（&lt;a href=&quot;profiling#hpc&quot;&gt;コードカバレッジの監視&lt;/a&gt;）によって計測されたコードをダンプします。</target>
        </trans-unit>
        <trans-unit id="51d14e506ec9927066781b1d98b33f145735cceb" translate="yes" xml:space="preserve">
          <source>Dump the final C-\- output</source>
          <target state="translated">Dump the final C-\-output</target>
        </trans-unit>
        <trans-unit id="66d05181645e20167228dd9111eeebf923c7d626" translate="yes" xml:space="preserve">
          <source>Dump the final assembly produced by the native code generator.</source>
          <target state="translated">ネイティブコードジェネレータで生成された最終的なアセンブリをダンプします。</target>
        </trans-unit>
        <trans-unit id="1a2e30954ac8cbf1a9fc16d8df7cabb3a2f66baf" translate="yes" xml:space="preserve">
          <source>Dump the initial assembler output produced from C--.</source>
          <target state="translated">C--から生成された初期アセンブラ出力をダンプします。</target>
        </trans-unit>
        <trans-unit id="243303fe5999e1c4d1a52dd11619877c28d15c19" translate="yes" xml:space="preserve">
          <source>Dump the initial assembler output produced from C-\-.</source>
          <target state="translated">C-\-で生成された初期アセンブラ出力をダンプします。</target>
        </trans-unit>
        <trans-unit id="c128a39811af4e5abe74d87e7f534aa66d0b760e" translate="yes" xml:space="preserve">
          <source>Dump the new interface to stdout</source>
          <target state="translated">新しいインターフェイスを標準出力にダンプ</target>
        </trans-unit>
        <trans-unit id="5a09ccb21e02baf9fe334e37504f06acafcbf2c0" translate="yes" xml:space="preserve">
          <source>Dump the result of STG-to-C-- conversion</source>
          <target state="translated">STG-to-C--の変換結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="794c5493558c47b611a8466223be159dde0292b0" translate="yes" xml:space="preserve">
          <source>Dump the result of STG-to-C-\- conversion</source>
          <target state="translated">Dump of the result of STG-to-C-\-conversion.</target>
        </trans-unit>
        <trans-unit id="dbc8d8f66e05784518b254d4e5474ec211e366e9" translate="yes" xml:space="preserve">
          <source>Dump the result of register allocation</source>
          <target state="translated">レジスタの割り当て結果をダンプ</target>
        </trans-unit>
        <trans-unit id="434af440925b479c6546edd068e96cbf2ff5d924" translate="yes" xml:space="preserve">
          <source>Dump the result of the C-- pipeline processing</source>
          <target state="translated">C--パイプライン処理の結果をダンプする</target>
        </trans-unit>
        <trans-unit id="d85ab0c6627d51ea957889ce3b7d612b626f7263" translate="yes" xml:space="preserve">
          <source>Dump the result of the C-\- pipeline processing</source>
          <target state="translated">C-パイプライン処理の結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="8748d5ba6162ba24134740abfbbc90d9f3737d62" translate="yes" xml:space="preserve">
          <source>Dump the result of the register allocation pass.</source>
          <target state="translated">レジスタ割り当てパスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="4855ab0ef074dab6d138ebeaab56e4f4755a27fd" translate="yes" xml:space="preserve">
          <source>Dump the result of the register liveness pass.</source>
          <target state="translated">レジスタの活性化パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="bef11d513ae4c614691ca62a3829348766209052" translate="yes" xml:space="preserve">
          <source>Dump the result of the synthetic instruction expansion pass.</source>
          <target state="translated">合成命令展開パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="9151d7b10653889ad8f3d875e1225a7ec3b7ca18" translate="yes" xml:space="preserve">
          <source>Dump the results of C-- to C-- optimising passes performed by the NCG.</source>
          <target state="translated">NCGが実行したC--からC--への最適化パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="109c64c1f32b475b99a8917baba10cff166e6db3" translate="yes" xml:space="preserve">
          <source>Dump the results of C-\- to C-\- optimising passes</source>
          <target state="translated">C-\-to C-\-optimising passesの結果をダンプする。</target>
        </trans-unit>
        <trans-unit id="f41d481f2d49d2d74de572c00b7ce4747ad01cf3" translate="yes" xml:space="preserve">
          <source>Dump the results of C-\- to C-\- optimising passes performed by the NCG.</source>
          <target state="translated">NCGで実行したC-\-to C-\-optimising passの結果をダンプする。</target>
        </trans-unit>
        <trans-unit id="9702696af697d87684b9cf2929356b92e16b137c" translate="yes" xml:space="preserve">
          <source>Dump the results of common block elimination</source>
          <target state="translated">共通ブロック消去の結果をダンプ</target>
        </trans-unit>
        <trans-unit id="1ce37265406b886f2cf61a54d0cd477f74bdced3" translate="yes" xml:space="preserve">
          <source>Dump the results of proc-point analysis</source>
          <target state="translated">proc-point解析結果のダンプ</target>
        </trans-unit>
        <trans-unit id="7e624dbbb2faf7696d629efaa05ffc2846f517fd" translate="yes" xml:space="preserve">
          <source>Dump the results of switch lowering passes</source>
          <target state="translated">スイッチ下げパスの結果をダンプ</target>
        </trans-unit>
        <trans-unit id="c935ba943dd727826b180315560c0396d347ea8b" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- CAF analysis pass.</source>
          <target state="translated">C--CAF分析パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="62e3f97a9c2dc548e69776f06d988ce75c214241" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- Common Block Elimination (CBE) pass.</source>
          <target state="translated">C--共通ブロック排除(CBE)合格の結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="f034683077efee8edc7df23ce5d14f186c176789" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- control flow optimisation pass.</source>
          <target state="translated">C--制御フロー最適化パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="b4f3e766ca01c28a41520486336cc59bd810e3b9" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- info table augmentation pass.</source>
          <target state="translated">C--情報テーブル拡張パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="be8adabb8bfb0505c4506cf8ea098b6106abcbaa" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- proc-point analysis pass.</source>
          <target state="translated">C--proc-point分析パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="84011326d0f6be4b599112dc1a9f983e2ad6df67" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- proc-point map pass.</source>
          <target state="translated">C--proc-pointマップパスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="1c12152f187dce2e2794948b8ef9803b1f5e86fc" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- proc-point splitting pass.</source>
          <target state="translated">C--proc-point分割パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="6609d623524961b60582fc46a73616eec7bee483" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- sinking pass.</source>
          <target state="translated">C--シンキングパスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="977366cd86ca5f6f8813e37504f5b577ea55b54b" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- stack layout pass.</source>
          <target state="translated">C--スタックレイアウトパスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="bc3fef2cfdfa69747361b357a9e91f1538aeec97" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-- switch lowering pass.</source>
          <target state="translated">C--スイッチ下げパスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="31114fa4eca8f37a749752ea735e83cd26ff5476" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- CAF analysis pass.</source>
          <target state="translated">C--CAFの分析パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="9f0270e0f39faab667801f8b91e06aab79d85929" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- Common Block Elimination (CBE) pass.</source>
          <target state="translated">C-コモン・ブロック・エリミネーション(CBE)合格の結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="3edb6ec5581edc56df009c90eb8994d10b48a3a1" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- control flow optimisation pass.</source>
          <target state="translated">C-制御フロー最適化パスの結果をダンプする。</target>
        </trans-unit>
        <trans-unit id="2298ea815f68063944468111dfb9e9b06c506a87" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- info table augmentation pass.</source>
          <target state="translated">C-info table augmentation passの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="f4a61cc819f719687fe0d324bf86aa11b0c5a0e7" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- proc-point analysis pass.</source>
          <target state="translated">C-proc-point分析パスの結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="a683680869bbe5e1a58f09e64af36f1ee17f624d" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- proc-point map pass.</source>
          <target state="translated">C-proc-pointマップパスの結果をダンプする。</target>
        </trans-unit>
        <trans-unit id="bb26c0e187162e90ebb5faa57ecee094d35efe7f" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- proc-point splitting pass.</source>
          <target state="translated">C-proc-point splitting passの結果をダンプする。</target>
        </trans-unit>
        <trans-unit id="50a38d2827e2f6b8c9625f3686a3f60d389fc02c" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- sinking pass.</source>
          <target state="translated">C-sinking passの結果をダンプする。</target>
        </trans-unit>
        <trans-unit id="3ef2327f6f204e47a5bc0d1aef5b87baa9f07467" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- stack layout pass.</source>
          <target state="translated">C-スタック・レイアウト・パスの結果をダンプする。</target>
        </trans-unit>
        <trans-unit id="2fc80a5a82cef2ba0cdd824d4125007d8feebb1e" translate="yes" xml:space="preserve">
          <source>Dump the results of the C-\- switch lowering pass.</source>
          <target state="translated">C-スイッチ下げパスの結果をダンプする。</target>
        </trans-unit>
        <trans-unit id="edd3932935d93a1f0239c9baa7280de34918d385" translate="yes" xml:space="preserve">
          <source>Dump the results of the CPS pass</source>
          <target state="translated">CPS合格の結果をダンプ</target>
        </trans-unit>
        <trans-unit id="0fec6030b4a3f00cafb0b5d693a31af52511269f" translate="yes" xml:space="preserve">
          <source>Dump the results of the CPS pass.</source>
          <target state="translated">CPS合格の結果をダンプします。</target>
        </trans-unit>
        <trans-unit id="ebae1608b050aa340450d48e8dda70429ce6b29d" translate="yes" xml:space="preserve">
          <source>Dump the state of the module mapping database.</source>
          <target state="translated">モジュールマッピングデータベースの状態をダンプします。</target>
        </trans-unit>
        <trans-unit id="400aaf16f0eede4d584bcc7742e9f30d1098088e" translate="yes" xml:space="preserve">
          <source>Dump to files instead of stdout</source>
          <target state="translated">標準出力の代わりにファイルにダンプ</target>
        </trans-unit>
        <trans-unit id="58fb855feb0066ee1b181ffc0577bdb091ae4c1b" translate="yes" xml:space="preserve">
          <source>Dump to the file &lt;code&gt;&lt;em&gt;M&lt;/em&gt;.imports&lt;/code&gt; (where ⟨M⟩ is the name of the module being compiled) a &amp;ldquo;minimal&amp;rdquo; set of import declarations. The directory where the &lt;code&gt;.imports&lt;/code&gt; files are created can be controlled via the &lt;a href=&quot;#ghc-flag--dumpdir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt;&lt;code&gt;-dumpdir ⟨dir⟩&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;M&lt;/em&gt;.imports&lt;/code&gt; （「&lt;em&gt;M&lt;/em&gt;」はコンパイルされるモジュールの名前）のインポート宣言の「最小の」セットにダンプします。 &lt;code&gt;.imports&lt;/code&gt; ファイルが作成されるディレクトリは、&lt;a href=&quot;#ghc-flag--dumpdir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt; &lt;code&gt;-dumpdir ⟨dir⟩&lt;/code&gt; &lt;/a&gt;オプションを使用して制御できます。</target>
        </trans-unit>
        <trans-unit id="51d1b39768fb34b1975cfde813f64a5150dbdd8e" translate="yes" xml:space="preserve">
          <source>Dump type signatures</source>
          <target state="translated">ダンプタイプの署名</target>
        </trans-unit>
        <trans-unit id="3541c46d06060a469d5a67933901822d22730fa0" translate="yes" xml:space="preserve">
          <source>Dump typechecker output</source>
          <target state="translated">タイプチェッカーの出力をダンプ</target>
        </trans-unit>
        <trans-unit id="4cdd29a1f3c16f63f5d377910bfaf20f37fe06e8" translate="yes" xml:space="preserve">
          <source>Dump typechecker output as a syntax tree</source>
          <target state="translated">typechecker の出力を構文ツリーとしてダンプする</target>
        </trans-unit>
        <trans-unit id="23a07f98934136c2b5ab814007d007d3992ec543" translate="yes" xml:space="preserve">
          <source>Dump typechecker output. Note that this hides a great deal of detail by default; you might consider using this with &lt;a href=&quot;using#ghc-flag--fprint-typechecker-elaboration&quot;&gt;&lt;code&gt;-fprint-typechecker-elaboration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイプチェッカー出力をダンプします。これにより、デフォルトではかなりの詳細が非表示になることに注意してください。これを&lt;a href=&quot;using#ghc-flag--fprint-typechecker-elaboration&quot;&gt; &lt;code&gt;-fprint-typechecker-elaboration&lt;/code&gt; &lt;/a&gt;と一緒に使用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="b5c0ba3f2143944d55990ba68e18ef5e3e91aaa6" translate="yes" xml:space="preserve">
          <source>Dump worker-wrapper output</source>
          <target state="translated">ワーカーラッパーの出力をダンプ</target>
        </trans-unit>
        <trans-unit id="3c5141516fb7db7b134544c4dae8cdc3e506a772" translate="yes" xml:space="preserve">
          <source>Dump worker/wrapper split output</source>
          <target state="translated">ダンプワーカー/ラッパーの分割出力</target>
        </trans-unit>
        <trans-unit id="41c7d27084b2cd7a013b989d52cce82c765dc60a" translate="yes" xml:space="preserve">
          <source>Dumping out compiler intermediate structures</source>
          <target state="translated">コンパイラ中間構造体のダンプアウト</target>
        </trans-unit>
        <trans-unit id="5b3dfaf02fdf5f7e31315c383e384508021a0114" translate="yes" xml:space="preserve">
          <source>Dumps all rewrite rules specified in this module; see &lt;a href=&quot;glasgow_exts#controlling-rules&quot;&gt;Controlling what&amp;rsquo;s going on in rewrite rules&lt;/a&gt;.</source>
          <target state="translated">このモジュールで指定されたすべての書き換えルールをダンプします。&lt;a href=&quot;glasgow_exts#controlling-rules&quot;&gt;書き換えルールで何が起こっているかの制御を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c5171cd4d9fb57198c543082264a4ebbcb8f54d9" translate="yes" xml:space="preserve">
          <source>Dumps detailed information about all rules that fired in this module</source>
          <target state="translated">このモジュールで発生したすべてのルールの詳細情報をダンプします。</target>
        </trans-unit>
        <trans-unit id="965dc0e8c60c3ec615e97efdc15c76d7f8e22022" translate="yes" xml:space="preserve">
          <source>Dumps inlining info from the simplifier. Note that if used in conjunction with &lt;a href=&quot;#ghc-flag--dverbose-core2core&quot;&gt;&lt;code&gt;-dverbose-core2core&lt;/code&gt;&lt;/a&gt; the compiler will also dump the inlinings that it considers but passes up, along with its rationale.</source>
          <target state="translated">単純化プログラムからのインライン情報をダンプします。&lt;a href=&quot;#ghc-flag--dverbose-core2core&quot;&gt; &lt;code&gt;-dverbose-core2core&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​した場合、コンパイラーは、その根拠とともに、考慮に入れられたインライン化もダンプします。</target>
        </trans-unit>
        <trans-unit id="1196cdb7287e3f32506173e885bfbcb732b511f7" translate="yes" xml:space="preserve">
          <source>Dumps the CFG with weights used by the new block layout code. Each CFG is dumped in dot format graph making it easy to visualize them.</source>
          <target state="translated">新しいブロックレイアウトコードで使用される重み付きCFGをダンプします。各CFGはドット形式のグラフでダンプされるので、視覚的に見やすくなっています。</target>
        </trans-unit>
        <trans-unit id="f93c7d8e829621bfbb6714d4d1f0d5916fe88ade" translate="yes" xml:space="preserve">
          <source>Dumps the names of all rules that fired in this module</source>
          <target state="translated">このモジュールで発生したすべてのルールの名前をダンプします。</target>
        </trans-unit>
        <trans-unit id="89f444f89550ecc987b264d74ae875c03128d547" translate="yes" xml:space="preserve">
          <source>Dumps the new interface to standard output.</source>
          <target state="translated">新しいインターフェイスを標準出力にダンプします。</target>
        </trans-unit>
        <trans-unit id="fb6bd1b7fcaf9bad1bd2c83240bbfe2d8b9e7a66" translate="yes" xml:space="preserve">
          <source>Duplicate a &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;: the duplicate channel begins empty, but data written to either channel from then on will be available from both. Hence this creates a kind of broadcast channel, where data written by anyone is seen by everyone else.</source>
          <target state="translated">重複 &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; ：重複するチャンネルは空から始まるが、その後、上からいずれかのチャンネルに書き込まれたデータは、両方から利用できるようになります。したがって、これはある種のブロードキャストチャネルを作成し、だれかが書き込んだデータを他の誰もが見ることができるようにします。</target>
        </trans-unit>
        <trans-unit id="cef44fc7b8bfa4e990e594a92f03f940596f68cb" translate="yes" xml:space="preserve">
          <source>Duplicate a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;: the duplicate channel begins empty, but data written to either channel from then on will be available from both. Hence this creates a kind of broadcast channel, where data written by anyone is seen by everyone else.</source>
          <target state="translated">重複 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; ：重複するチャンネルは空から始まるが、その後、上からいずれかのチャンネルに書き込まれたデータは、両方から利用できるようになります。したがって、これはある種のブロードキャストチャネルを作成し、だれかが書き込んだデータを他の誰もが見ることができるようにします。</target>
        </trans-unit>
        <trans-unit id="132faeffc45103c317a99edeef034b25c6b7c438" translate="yes" xml:space="preserve">
          <source>DuplicateRecordFields</source>
          <target state="translated">DuplicateRecordFields</target>
        </trans-unit>
        <trans-unit id="1f2d301bb78760374d8d19151653e6586fc17308" translate="yes" xml:space="preserve">
          <source>Duplicates, and elements of the first list, are removed from the the second list, but if the first list contains duplicates, so will the result. It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">重複、および最初のリストの要素は2番目のリストから削除されますが、最初のリストに重複が含まれている場合、結果も削除されます。これは &lt;code&gt;&lt;a href=&quot;data-list#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt; の特殊なケースで、プログラマーが独自の等価テストを提供できるようにします。</target>
        </trans-unit>
        <trans-unit id="47fb6bcae78a3892081e57c651f9e890a89b96aa" translate="yes" xml:space="preserve">
          <source>Duplicates, and elements of the first list, are removed from the the second list, but if the first list contains duplicates, so will the result. It is a special case of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">重複、および最初のリストの要素は2番目のリストから削除されますが、最初のリストに重複が含まれている場合、結果も削除されます。これは &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt; の特殊なケースで、プログラマーが独自の等価テストを提供できるようにします。</target>
        </trans-unit>
        <trans-unit id="6d35b652ffd9612c4c69094c159289360ebfc712" translate="yes" xml:space="preserve">
          <source>Duplicating file descriptors</source>
          <target state="translated">ファイルディスクリプタの複製</target>
        </trans-unit>
        <trans-unit id="0a0f656186f4211a1d4b5028c23aaeca200bec49" translate="yes" xml:space="preserve">
          <source>Duration types</source>
          <target state="translated">持続時間の種類</target>
        </trans-unit>
        <trans-unit id="1c34669bc7ce5e24c6ddda27e23b30c8fac3dad9" translate="yes" xml:space="preserve">
          <source>During a multiline interaction, the user can interrupt and return to the top-level prompt.</source>
          <target state="translated">複数行の対話の間、ユーザーは中断してトップレベルのプロンプトに戻ることができます。</target>
        </trans-unit>
        <trans-unit id="7eebdebfc42373c2fb63090d5ad79b9b7a030f37" translate="yes" xml:space="preserve">
          <source>During constraint solving, GHC repeatedly calls &lt;code&gt;tcPluginSolve&lt;/code&gt;. This function is provided with the current set of constraints, and should return a &lt;code&gt;TcPluginResult&lt;/code&gt; that indicates whether a contradiction was found or progress was made. If the plugin solver makes progress, GHC will re-start the constraint solving pipeline, looping until a fixed point is reached.</source>
          <target state="translated">制約の解決中に、GHCは &lt;code&gt;tcPluginSolve&lt;/code&gt; を繰り返し呼び出します。この関数は現在の制約のセットで提供され、矛盾が見つかったか、進行したかを示す &lt;code&gt;TcPluginResult&lt;/code&gt; を返す必要があります。プラグインソルバーが進行すると、GHCは制約解決パイプラインを再起動し、固定点に到達するまでループします。</target>
        </trans-unit>
        <trans-unit id="042c122055066b89cce054fc335addc2fd2dd906" translate="yes" xml:space="preserve">
          <source>During typechecking, GHC will replace an occurrence of an overloaded label like &lt;code&gt;#foo&lt;/code&gt; with &lt;code&gt;fromLabel @&quot;foo&quot;&lt;/code&gt;. This will have some type &lt;code&gt;alpha&lt;/code&gt; and require the solution of a class constraint &lt;code&gt;IsLabel &quot;foo&quot; alpha&lt;/code&gt;.</source>
          <target state="translated">型 &lt;code&gt;#foo&lt;/code&gt; 中に、GHCは#fooなどのオーバーロードされたラベルを &lt;code&gt;fromLabel @&quot;foo&quot;&lt;/code&gt; ます。これには &lt;code&gt;alpha&lt;/code&gt; 型があり、クラス制約 &lt;code&gt;IsLabel &quot;foo&quot; alpha&lt;/code&gt; の解決が必要です。</target>
        </trans-unit>
        <trans-unit id="ceb739dfaa883916a2f3db6aaa122bce70006b53" translate="yes" xml:space="preserve">
          <source>Dynamic</source>
          <target state="translated">Dynamic</target>
        </trans-unit>
        <trans-unit id="58f56a133d75feb9fb85bc8122468a74f40762ee" translate="yes" xml:space="preserve">
          <source>Dynamic allocation</source>
          <target state="translated">動的割り当て</target>
        </trans-unit>
        <trans-unit id="c24e0b778ffbc04a50fcf88406bf389c322f4273" translate="yes" xml:space="preserve">
          <source>Dynamic binding constraints behave just like other type class constraints in that they are automatically propagated. Thus, when a function is used, its implicit parameters are inherited by the function that called it. For example, our &lt;code&gt;sort&lt;/code&gt; function might be used to pick out the least value in a list:</source>
          <target state="translated">動的バインディング制約は、他のタイプクラス制約と同じように動作し、それらは自動的に伝播されます。したがって、関数が使用される場合、その暗黙のパラメーターは、その関数を呼び出した関数によって継承されます。たとえば、 &lt;code&gt;sort&lt;/code&gt; 関数を使用して、リスト内の最小値を取得できます。</target>
        </trans-unit>
        <trans-unit id="8e2f14ceb4c7f3daaf1b4584e2c201e7ec71a3fb" translate="yes" xml:space="preserve">
          <source>Dynamic link libraries, Win32 DLLs, Win32 On Win32 platforms, the compiler is capable of both producing and using dynamic link libraries (DLLs) containing ghc-compiled code. This section shows you how to make use of this facility.</source>
          <target state="translated">ダイナミックリンクライブラリ、Win32 DLL、Win32 Win32 プラットフォーム上では、コンパイラは、 ghc でコンパイルされたコードを含むダイナミックリンクライブラリ (DLL)を生成したり、利用したりすることができます。このセクションでは、この機能を利用する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="12fb59bccf3f9eba38cf1b4ff2ca42f6c9c5369f" translate="yes" xml:space="preserve">
          <source>Dynamic linker support through dlopen()</source>
          <target state="translated">dlopen()による動的リンカのサポート</target>
        </trans-unit>
        <trans-unit id="3995867c81ed886e9eef2e83f19757df386aea2c" translate="yes" xml:space="preserve">
          <source>Dynamic: A dynamic flag may be used on the command line, in a &lt;code&gt;OPTIONS_GHC&lt;/code&gt; pragma in a source file, or set using &lt;a href=&quot;ghci#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; in GHCi.</source>
          <target state="translated">動的：動的フラグは、コマンドライン、ソースファイルの &lt;code&gt;OPTIONS_GHC&lt;/code&gt; プラグマ、またはGHCiの&lt;a href=&quot;ghci#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="31491dcd755ff3b5e68f67dbe3dbed5a36c073c7" translate="yes" xml:space="preserve">
          <source>Dynamically binding a variable (unhygenic)</source>
          <target state="translated">変数を動的に結合する(非遺伝性)</target>
        </trans-unit>
        <trans-unit id="f7769edcd8c3dfbb5b076a151df913664ac8ff89" translate="yes" xml:space="preserve">
          <source>E.g. translation:</source>
          <target state="translated">例:翻訳。</target>
        </trans-unit>
        <trans-unit id="ddb0b8bbf60b728fce9ace252db2a1eef68119c7" translate="yes" xml:space="preserve">
          <source>E0</source>
          <target state="translated">E0</target>
        </trans-unit>
        <trans-unit id="07460df10583e94e946fbaccc6e1e861aabd5e23" translate="yes" xml:space="preserve">
          <source>E1</source>
          <target state="translated">E1</target>
        </trans-unit>
        <trans-unit id="21812d19d24db4a9270f22c787d05c1e87579083" translate="yes" xml:space="preserve">
          <source>E12</source>
          <target state="translated">E12</target>
        </trans-unit>
        <trans-unit id="16d509a7146781ec37fe7fba349b58e79ee2f65b" translate="yes" xml:space="preserve">
          <source>E2</source>
          <target state="translated">E2</target>
        </trans-unit>
        <trans-unit id="04cf543b0b92601f0116cc36df4b8942b670408a" translate="yes" xml:space="preserve">
          <source>E3</source>
          <target state="translated">E3</target>
        </trans-unit>
        <trans-unit id="2b699093a4e81395e4b6239d9a24e1ac3f6e3726" translate="yes" xml:space="preserve">
          <source>E6</source>
          <target state="translated">E6</target>
        </trans-unit>
        <trans-unit id="bd9485408996478efd229b846194172187992fcc" translate="yes" xml:space="preserve">
          <source>E9</source>
          <target state="translated">E9</target>
        </trans-unit>
        <trans-unit id="cda4aab5bcbd0ed38717196ad5a3684cd59490a3" translate="yes" xml:space="preserve">
          <source>EOF</source>
          <target state="translated">EOF</target>
        </trans-unit>
        <trans-unit id="c41a4b4ae13ef007bf159e37752b1d297454b600" translate="yes" xml:space="preserve">
          <source>EQ</source>
          <target state="translated">EQ</target>
        </trans-unit>
        <trans-unit id="bb9cc4d2e2b7af57429adcc9ba853cc2aa4659a4" translate="yes" xml:space="preserve">
          <source>EUserInterrupt</source>
          <target state="translated">EUserInterrupt</target>
        </trans-unit>
        <trans-unit id="8dc0db4609110702fc87118461353c4c6d2a48a8" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL! DON'T USE.</source>
          <target state="translated">実験的だ!使用しないでください。</target>
        </trans-unit>
        <trans-unit id="54be8c783f08e7c58ac3b02f03bde20d63e77eae" translate="yes" xml:space="preserve">
          <source>Each (term) variable mentioned in a rule must either be in scope (e.g. &lt;code&gt;map&lt;/code&gt;), or bound by the &lt;code&gt;forall&lt;/code&gt; (e.g. &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;xs&lt;/code&gt;). The variables bound by the &lt;code&gt;forall&lt;/code&gt; are called the &lt;em&gt;pattern&lt;/em&gt; variables. They are separated by spaces, just like in a type &lt;code&gt;forall&lt;/code&gt;.</source>
          <target state="translated">ルールで言及されている各（term）変数は、スコープ（ &lt;code&gt;map&lt;/code&gt; など）内にあるか、 &lt;code&gt;forall&lt;/code&gt; によってバインドされている必要があります（ &lt;code&gt;f&lt;/code&gt; 、 &lt;code&gt;g&lt;/code&gt; 、 &lt;code&gt;xs&lt;/code&gt; など）。 &lt;code&gt;forall&lt;/code&gt; によってバインドされた変数は、&lt;em&gt;パターン&lt;/em&gt;変数と呼ばれます。タイプ &lt;code&gt;forall&lt;/code&gt; と同様に、スペースで区切られます。</target>
        </trans-unit>
        <trans-unit id="0f1b880de36f0e590e324a4b8637992dcd4b5339" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;system-console-getopt#t:OptDescr&quot;&gt;OptDescr&lt;/a&gt;&lt;/code&gt; describes a single option.</source>
          <target state="translated">各 &lt;code&gt;&lt;a href=&quot;system-console-getopt#t:OptDescr&quot;&gt;OptDescr&lt;/a&gt;&lt;/code&gt; は単一のオプションを記述します。</target>
        </trans-unit>
        <trans-unit id="11f6f94dd48069174e0ab16e6de6a00d0a3b140d" translate="yes" xml:space="preserve">
          <source>Each Haskell source module should be placed in a file on its own.</source>
          <target state="translated">各Haskellソースモジュールは、それ自身のファイルに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="baeff76bc6c21da93fc63e5ca7e4eeba38b13f1e" translate="yes" xml:space="preserve">
          <source>Each declaration group is mutually recursive only within the group. Declaration groups can refer to definitions within previous groups, but not later ones.</source>
          <target state="translated">各宣言グループは、グループ内でのみ相互に再帰的である。宣言グループは前のグループ内の定義を参照することができますが、後のグループの定義を参照することはできません。</target>
        </trans-unit>
        <trans-unit id="2819ca0cadcdc8cc3b23fe7e0ffdbdb30064f7e8" translate="yes" xml:space="preserve">
          <source>Each entry in &lt;code&gt;cost_centres&lt;/code&gt; is an object describing a cost-centre of the program having the following properies,</source>
          <target state="translated">&lt;code&gt;cost_centres&lt;/code&gt; の各エントリは、次のプロパティを持つプログラムのコストセンターを説明するオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="d63db4d1687a729641cee510563e2f601ae8d8b5" translate="yes" xml:space="preserve">
          <source>Each event is associated with a timestamp which is the number of nanoseconds since the start of executation of the running program. This is the elapsed time, not the CPU time.</source>
          <target state="translated">各イベントには、実行中のプログラムの実行開始からのナノ秒数であるタイムスタンプが関連付けられています。これは経過時間であり、CPU時間ではありません。</target>
        </trans-unit>
        <trans-unit id="4c88b19977dedb54c08a50d2d5aa67df8ce2c878" translate="yes" xml:space="preserve">
          <source>Each file system object is referenced by a &lt;em&gt;path&lt;/em&gt;. There is normally at least one absolute path to each file system object. In some operating systems, it may also be possible to have paths which are relative to the current directory.</source>
          <target state="translated">各ファイルシステムオブジェクトは、&lt;em&gt;パス&lt;/em&gt;によって参照され&lt;em&gt;ます&lt;/em&gt;。通常、各ファイルシステムオブジェクトへの絶対パスが少なくとも1つあります。一部のオペレーティングシステムでは、現在のディレクトリからの相対パスを使用できる場合もあります。</target>
        </trans-unit>
        <trans-unit id="f0aba67c3d4e3d2bff2623bdb806f3ca6971acd5" translate="yes" xml:space="preserve">
          <source>Each function has a variant, whose name is suffixed with -&lt;code&gt;With&lt;/code&gt;, that gives greater control over the handling of decoding errors. For instance, &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeUtf8&quot;&gt;decodeUtf8&lt;/a&gt;&lt;/code&gt; will throw an exception, but &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; allows the programmer to determine what to do on a decoding error.</source>
          <target state="translated">各関数にはバリアントがあり、その名前の末尾には-Withが付いています。 &lt;code&gt;With&lt;/code&gt; 、デコードエラーの処理をより細かく制御できます。たとえば、 &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeUtf8&quot;&gt;decodeUtf8&lt;/a&gt;&lt;/code&gt; は例外をスローしますが、 &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; を使用すると、プログラマはデコードエラーに対して何を行うかを決定できます。</target>
        </trans-unit>
        <trans-unit id="b781d3fecf13d8a18045c2932491a53246255cf7" translate="yes" xml:space="preserve">
          <source>Each function has a variant, whose name is suffixed with -&lt;code&gt;With&lt;/code&gt;, that gives greater control over the handling of decoding errors. For instance, &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8&quot;&gt;decodeUtf8&lt;/a&gt;&lt;/code&gt; will throw an exception, but &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; allows the programmer to determine what to do on a decoding error.</source>
          <target state="translated">各関数にはバリアントがあり、その名前の末尾には-Withが付いています。 &lt;code&gt;With&lt;/code&gt; 、デコードエラーの処理をより細かく制御できます。たとえば、 &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8&quot;&gt;decodeUtf8&lt;/a&gt;&lt;/code&gt; は例外をスローしますが、 &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; を使用すると、プログラマはデコードエラーに対して何を行うかを決定できます。</target>
        </trans-unit>
        <trans-unit id="bddcc921aad16288e5932e06c84e180129b74763" translate="yes" xml:space="preserve">
          <source>Each function in this module is careful to force values before installing them in a &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;. This is usually more efficient when laziness is not necessary. When laziness &lt;em&gt;is&lt;/em&gt; required, use the functions in &lt;a href=&quot;data-map-lazy&quot;&gt;Data.Map.Lazy&lt;/a&gt;.</source>
          <target state="translated">このモジュールの各関数は、 &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; にインストールする前に値を強制するように注意しています。これは通常、遅延が必要ない場合により効率的です。&lt;a href=&quot;data-map-lazy&quot;&gt;遅延&lt;/a&gt;&lt;em&gt;が&lt;/em&gt;必要な場合&lt;em&gt;は&lt;/em&gt;、Data.Map.Lazyの関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="01065edd435e0a8ab1f31c27f877162d2af1adff" translate="yes" xml:space="preserve">
          <source>Each function in this module is careful to force values before installing them in an &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This is usually more efficient when laziness is not necessary. When laziness &lt;em&gt;is&lt;/em&gt; required, use the functions in &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt;.</source>
          <target state="translated">このモジュールの各関数は、値を &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; にインストールする前に強制するように注意しています。これは通常、遅延が必要ない場合により効率的です。&lt;a href=&quot;data-intmap-lazy&quot;&gt;遅延&lt;/a&gt;&lt;em&gt;が&lt;/em&gt;必要な場合&lt;em&gt;は&lt;/em&gt;、Data.IntMap.Lazyの関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="a6e7ecec6ffa3690b78c0dfda9f07a670482c748" translate="yes" xml:space="preserve">
          <source>Each function in this module is careful to force values before installing them in an &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This is usually more efficient when laziness is not necessary. When laziness &lt;em&gt;is&lt;/em&gt; required, use the functions in &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt;.</source>
          <target state="translated">このモジュールの各関数は、値を &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; にインストールする前に強制するように注意しています。これは通常、遅延が必要ない場合により効率的です。&lt;a href=&quot;data-intmap-lazy&quot;&gt;遅延&lt;/a&gt;&lt;em&gt;が&lt;/em&gt;必要な場合&lt;em&gt;は&lt;/em&gt;、Data.IntMap.Lazyの関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="d1a815af3d2877eac4cb934e724aa6521c69d997" translate="yes" xml:space="preserve">
          <source>Each function in this module is documented with several examples, which are also used as tests.</source>
          <target state="translated">このモジュールの各関数は、いくつかの例を用いて文書化されており、テストとしても使用されています。</target>
        </trans-unit>
        <trans-unit id="6415e03e627926288b1d2c5583f7c32c2ac54ae3" translate="yes" xml:space="preserve">
          <source>Each installed package has a unique identifier (the &amp;ldquo;installed package ID&amp;rdquo;), which distinguishes it from all other installed packages on the system. To see the installed package IDs associated with each installed package, use &lt;code&gt;ghc-pkg list -v&lt;/code&gt;:</source>
          <target state="translated">インストールされた各パッケージには一意の識別子（「インストール済みパッケージID」）があり、システムにインストールされている他のすべてのパッケージと区別されます。インストールされている各パッケージに関連付けられているインストール済みパッケージIDを表示するには、 &lt;code&gt;ghc-pkg list -v&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="42fea67aafd63a00e9f18a101ef3edf8a6772532" translate="yes" xml:space="preserve">
          <source>Each line of a &lt;code&gt;.haskeline&lt;/code&gt; file defines one field of the &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; datatype; field names are case-insensitive and unparseable lines are ignored. For example:</source>
          <target state="translated">各ライン &lt;code&gt;.haskeline&lt;/code&gt; のファイル定義のフィールド &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; のデータ型。フィールド名は大文字と小文字を区別せず、解析できない行は無視されます。例えば：</target>
        </trans-unit>
        <trans-unit id="163beec3ec1c97a0d35d2abb6afc4e865af24b10" translate="yes" xml:space="preserve">
          <source>Each module provides an almost identical API, with the main difference being that the strict module uses &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; values for lengths and counts, while the lazy module uses &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; lengths.</source>
          <target state="translated">各モジュールはほぼ同じAPIを提供しますが、主な違いは、strictモジュールが長さとカウントに &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 値を使用するのに対し、lazyモジュールは &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; の長さを使用することです。</target>
        </trans-unit>
        <trans-unit id="5f6385a7915665fd9d1292d5abb94d072b3c768b" translate="yes" xml:space="preserve">
          <source>Each module provides an almost identical API, with the main difference being that the strict module uses &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; values for lengths and counts, while the lazy module uses &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; lengths.</source>
          <target state="translated">各モジュールはほぼ同じAPIを提供しますが、主な違いは、strictモジュールは長さとカウントに &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 値を使用するのに対し、lazyモジュールは &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#v:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; の長さを使用することです。</target>
        </trans-unit>
        <trans-unit id="97816826f892d968b2bbb56d0faa5ecdafa0fccb" translate="yes" xml:space="preserve">
          <source>Each monad transformer also comes with an operation &lt;code&gt;run&lt;/code&gt;&lt;em&gt;XXX&lt;/em&gt;&lt;code&gt;T&lt;/code&gt; to unwrap the transformer, exposing a computation of the inner monad. (Currently these functions are defined as field labels, but in the next major release they will be separate functions.)</source>
          <target state="translated">各モナドトランスフォーマーには、トランスフォーマーをアンラップするための操作 &lt;code&gt;run&lt;/code&gt; &lt;em&gt;XXX &lt;/em&gt; &lt;code&gt;T&lt;/code&gt; も付属しており、内部モナドの計算を公開します。（現在、これらの関数はフィールドラベルとして定義されていますが、次のメジャーリリースでは個別の関数になります。）</target>
        </trans-unit>
        <trans-unit id="196e4ec00a2cf167108ae0cfde65cddfc9eed197" translate="yes" xml:space="preserve">
          <source>Each of GHC&amp;rsquo;s command line options is classified as dynamic or mode:</source>
          <target state="translated">GHCの各コマンドラインオプションは、動的またはモードに分類されます。</target>
        </trans-unit>
        <trans-unit id="472e874ed8cb03d9e3d8a65e24430e1347e6df3f" translate="yes" xml:space="preserve">
          <source>Each of the monad transformers introduces relevant operations. In a sequence of monad transformers, most of these operations.can be lifted through other transformers using &lt;code&gt;&lt;a href=&quot;control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; or the &lt;code&gt;map&lt;/code&gt;&lt;em&gt;XXX&lt;/em&gt;&lt;code&gt;T&lt;/code&gt; combinator, but a few with more complex type signatures require specialized lifting combinators, called &lt;code&gt;lift&lt;/code&gt;&lt;em&gt;Op&lt;/em&gt; (see &lt;a href=&quot;control-monad-signatures&quot;&gt;Control.Monad.Signatures&lt;/a&gt;).</source>
          <target state="translated">各モナド変換子は関連する操作を導入します。モナドトランスフォーマーのシーケンスでは、これらの操作のほとんどは、 &lt;code&gt;&lt;a href=&quot;control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;map&lt;/code&gt; &lt;em&gt;XXX &lt;/em&gt; &lt;code&gt;T&lt;/code&gt; コンビ&lt;em&gt;ネーター&lt;/em&gt;を使用して他のトランスフォーマーを通して持ち上げることができますが、より複雑な型シグネチャを持ついくつかは、 &lt;code&gt;lift&lt;/code&gt; &lt;em&gt;Op&lt;/em&gt;と呼ばれる特別なリフティングコンビ&lt;a href=&quot;control-monad-signatures&quot;&gt;ネーターを&lt;/a&gt;必要とします（Control.Monad.Signaturesを参照））。</target>
        </trans-unit>
        <trans-unit id="c641f44835c555e61d6d59f7e4fcbafe86d8bbd8" translate="yes" xml:space="preserve">
          <source>Each of these functions is structured something like this:</source>
          <target state="translated">これらの関数のそれぞれは、次のような構造になっています。</target>
        </trans-unit>
        <trans-unit id="38a2b36fc82a511d40a5940bf1b9349a24ad2a6b" translate="yes" xml:space="preserve">
          <source>Each of these turn off path processing completely by the Win32 API and the paths are passed untouched to the filesystem.</source>
          <target state="translated">これらはそれぞれ Win32 API によるパス処理を完全にオフにし、パスはそのままファイルシステムに渡されます。</target>
        </trans-unit>
        <trans-unit id="94f7511a7c7bd26f41493475ebe3be46444fdcd3" translate="yes" xml:space="preserve">
          <source>Each quantified constraint, taken by itself, must satisfy the termination rules for an instance declaration.</source>
          <target state="translated">それぞれの定量化された制約は、それ自体で取られ、インスタンス宣言の終了規則を満たさなければなりません。</target>
        </trans-unit>
        <trans-unit id="ec1c93b2adf3ced89b8f6c17aa137104772cb785" translate="yes" xml:space="preserve">
          <source>Each reference is given a key which can be used to locate it at runtime with &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt; which uses a global and immutable table called the Static Pointer Table. The compiler includes entries in this table for all static forms found in the linked modules. The value can be obtained from the reference via &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr&lt;/a&gt;.</source>
          <target state="translated">各参照には、静的ポインタテーブルと呼ばれるグローバルで不変のテーブルを使用する&lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt;を使用して、実行時に参照を見つけるために使用できるキーが与えられます。コンパイラーは、リンクされたモジュールで見つかったすべての静的フォームについて、この表のエントリーを含めます。値は&lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr&lt;/a&gt;を介して参照から取得できます。</target>
        </trans-unit>
        <trans-unit id="30db01765587d860054796d9a32a8070a6271125" translate="yes" xml:space="preserve">
          <source>Each reference is given a key which can be used to locate it at runtime with &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt; which uses a global and immutable table called the Static Pointer Table. The compiler includes entries in this table for all static forms found in the linked modules. The value can be obtained from the reference via &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr&lt;/a&gt;.</source>
          <target state="translated">各参照には、静的ポインタテーブルと呼ばれるグローバルで不変のテーブルを使用する&lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;GHC.StaticPtr.unsafeLookupStaticPtr&lt;/a&gt;を使用して、実行時に参照を見つけるために使用できるキーが与えられます。コンパイラーは、リンクされたモジュールで見つかったすべての静的フォームのエントリーをこのテーブルに含めます。値は、&lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#v:deRefStaticPtr&quot;&gt;GHC.StaticPtr.deRefStaticPtr&lt;/a&gt;を介して参照から取得できます。</target>
        </trans-unit>
        <trans-unit id="2fa9a5ff05a6a6ba4b4f9df03bf11a8a1ceb9c49" translate="yes" xml:space="preserve">
          <source>Each rule has a name, enclosed in double quotes. The name itself has no significance at all. It is only used when reporting how many times the rule fired.</source>
          <target state="translated">各ルールには、二重引用符で囲まれた名前がついています。名前自体には何の意味もありません。ルールが何回発火したかを報告するときにのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="ad6e326c72d1a167df7655c39566d558a261e7ee" translate="yes" xml:space="preserve">
          <source>Each type in a &lt;code&gt;default&lt;/code&gt; declaration must be an instance of &lt;code&gt;Num&lt;/code&gt;&lt;em&gt;or&lt;/em&gt; of &lt;code&gt;IsString&lt;/code&gt;.</source>
          <target state="translated">内の各タイプ &lt;code&gt;default&lt;/code&gt; 宣言はのインスタンスでなければならない &lt;code&gt;Num&lt;/code&gt; &lt;em&gt;か&lt;/em&gt;の &lt;code&gt;IsString&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ff261534d92cf31184bbdd9017c8aa8f7d0a566" translate="yes" xml:space="preserve">
          <source>Each user-written type signature is subjected to an &lt;em&gt;ambiguity check&lt;/em&gt;. The ambiguity check rejects functions that can never be called; for example:</source>
          <target state="translated">ユーザー作成の型シグニチャーはそれぞれ、&lt;em&gt;あいまいさチェックを&lt;/em&gt;受けます。あいまいさチェックは、決して呼び出すことができない関数を拒否します。例えば：</target>
        </trans-unit>
        <trans-unit id="8d08dc1c124399643e88edb955dbfbbd4a38f946" translate="yes" xml:space="preserve">
          <source>Each value is expected to be a &lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code#graphics&quot;&gt;Select Graphic Rendition (SGR) substring&lt;/a&gt;. The formatting of each element can inherit from parent elements. For example, if &lt;code&gt;header&lt;/code&gt; is left empty, it will inherit the formatting of &lt;code&gt;message&lt;/code&gt;. Alternatively if &lt;code&gt;header&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt; (bold), it will be bolded but still inherits the color of &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">各値は、&lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code#graphics&quot;&gt;Select Graphic Rendition（SGR）substringである&lt;/a&gt;ことが期待されています。各要素のフォーマットは、親要素から継承できます。たとえば、 &lt;code&gt;header&lt;/code&gt; が空のままの場合、 &lt;code&gt;message&lt;/code&gt; のフォーマットを継承します。あるいは、 &lt;code&gt;header&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; （太字）に設定されている場合、太字になりますが、 &lt;code&gt;message&lt;/code&gt; の色を継承します。</target>
        </trans-unit>
        <trans-unit id="9c3844d15fa9fd775d876cb5f6cdd6036a19e4aa" translate="yes" xml:space="preserve">
          <source>Early versions of this function operated under the mistaken belief that setting an environment variable to the &lt;em&gt;empty string&lt;/em&gt; on Windows removes that environment variable from the environment. For the sake of compatibility, it adopted that behavior on POSIX. In particular</source>
          <target state="translated">この関数の初期のバージョンは、Windowsで環境変数を&lt;em&gt;空の文字列&lt;/em&gt;に設定すると、その環境変数が環境から削除されるという誤った考えの下で動作していました。互換性のために、POSIXでその動作を採用しました。特に</target>
        </trans-unit>
        <trans-unit id="02801ac97091cd1f6dc10ea0e42f596755df8b24" translate="yes" xml:space="preserve">
          <source>EchoErase</source>
          <target state="translated">EchoErase</target>
        </trans-unit>
        <trans-unit id="e65667cc87c5f78280b543ab589c321c06de8e54" translate="yes" xml:space="preserve">
          <source>EchoKill</source>
          <target state="translated">EchoKill</target>
        </trans-unit>
        <trans-unit id="2ff2fe0be286792fe70b32e0c745ec16205da699" translate="yes" xml:space="preserve">
          <source>EchoLF</source>
          <target state="translated">EchoLF</target>
        </trans-unit>
        <trans-unit id="8440b9eb7d03917b2509b5baeab2a299ce257eb0" translate="yes" xml:space="preserve">
          <source>Edge</source>
          <target state="translated">Edge</target>
        </trans-unit>
        <trans-unit id="fc2e145c24b2ba20bdeb2ad32eb2b5f28d08e575" translate="yes" xml:space="preserve">
          <source>Edward Kmett &amp;lt;ekmett@gmail.com&amp;gt;</source>
          <target state="translated">エドワードクメット&amp;lt;ekmett@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5bb9b7dcfd97e9a89509c0e3e9f08529d081c74e" translate="yes" xml:space="preserve">
          <source>Effects other than throwing an error are also overriden by the deeper layers. For example, &lt;code&gt;StateT s Maybe a&lt;/code&gt; represents a value of type &lt;code&gt;s -&amp;gt; Maybe (a,
 s)&lt;/code&gt;, so if an error thrown from &lt;code&gt;f&lt;/code&gt; causes this function to return &lt;code&gt;Nothing&lt;/code&gt;, any changes to the state which &lt;code&gt;f&lt;/code&gt; also performed will be erased. As a result, &lt;code&gt;g&lt;/code&gt; will see the state as it was before &lt;code&gt;f&lt;/code&gt;. Once &lt;code&gt;g&lt;/code&gt; completes, &lt;code&gt;f&lt;/code&gt;'s error will be rethrown, so &lt;code&gt;g&lt;/code&gt;' state changes will be erased as well. This is the normal interaction between effects in a monad transformer stack.</source>
          <target state="translated">エラーをスローする以外の効果も、より深いレイヤーによってオーバーライドされます。たとえば、 &lt;code&gt;StateT s Maybe a&lt;/code&gt; はタイプ &lt;code&gt;s -&amp;gt; Maybe (a, s)&lt;/code&gt; 値を表すため、 &lt;code&gt;f&lt;/code&gt; からスローされたエラーによってこの関数が &lt;code&gt;Nothing&lt;/code&gt; を返す場合、 &lt;code&gt;f&lt;/code&gt; も実行した状態への変更はすべて消去されます。その結果、 &lt;code&gt;g&lt;/code&gt; は &lt;code&gt;f&lt;/code&gt; の前の状態を確認します。いったん &lt;code&gt;g&lt;/code&gt; 完了、 &lt;code&gt;f&lt;/code&gt; 「のでsの誤差は、再スローになり &lt;code&gt;g&lt;/code&gt; 状態の変化も同様に消去されます」。これは、モナド変換子スタックの効果間の通常の相互作用です。</target>
        </trans-unit>
        <trans-unit id="66aeb9f404372ac311d4d671cb40871d11099a90" translate="yes" xml:space="preserve">
          <source>Efficiency note</source>
          <target state="translated">効率性ノート</target>
        </trans-unit>
        <trans-unit id="3df81390854254514ad0646369d182a75f3f5996" translate="yes" xml:space="preserve">
          <source>Efficiency note:</source>
          <target state="translated">効率化ノート。</target>
        </trans-unit>
        <trans-unit id="6fca2fd29db7761ae9ddc43141f7e2119736f412" translate="yes" xml:space="preserve">
          <source>Efficiency: When the same view function is applied in multiple branches of a function definition or a case expression (e.g., in &lt;code&gt;size&lt;/code&gt; above), GHC makes an attempt to collect these applications into a single nested case expression, so that the view function is only applied once. Pattern compilation in GHC follows the matrix algorithm described in Chapter 4 of &lt;a href=&quot;http://research.microsoft.com/~simonpj/Papers/slpj-book-1987/&quot;&gt;The Implementation of Functional Programming Languages&lt;/a&gt;. When the top rows of the first column of a matrix are all view patterns with the &amp;ldquo;same&amp;rdquo; expression, these patterns are transformed into a single nested case. This includes, for example, adjacent view patterns that line up in a tuple, as in</source>
          <target state="translated">効率：同じビュー関数が関数定義またはケース式の複数のブランチに適用される場合（上記の &lt;code&gt;size&lt;/code&gt; ）、GHCはこれらのアプリケーションを単一のネストされたケース式に収集しようとするため、ビュー関数は一度適用されます。 GHCでのパターンのコンパイルは&lt;a href=&quot;http://research.microsoft.com/~simonpj/Papers/slpj-book-1987/&quot;&gt;、関数型プログラミング言語の実装の&lt;/a&gt;第4章で説明されている行列アルゴリズムに従います。マトリックスの最初の列の一番上の行がすべて「同じ」式のビューパターンである場合、これらのパターンは1つのネストされたケースに変換されます。これには、たとえば、次のようにタプルに並ぶ隣接するビューパターンが含まれます。</target>
        </trans-unit>
        <trans-unit id="7893e8f884ad5b27e53b381462308df0b54cbfb3" translate="yes" xml:space="preserve">
          <source>Efficient construction of lazy &lt;code&gt;Text&lt;/code&gt; values. The principal operations on a &lt;code&gt;Builder&lt;/code&gt; are &lt;code&gt;singleton&lt;/code&gt;, &lt;code&gt;fromText&lt;/code&gt;, and &lt;code&gt;fromLazyText&lt;/code&gt;, which construct new builders, and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;, which concatenates two builders.</source>
          <target state="translated">遅延 &lt;code&gt;Text&lt;/code&gt; 値の効率的な構築。 &lt;code&gt;Builder&lt;/code&gt; の主な操作は、新しいビルダーを構築する &lt;code&gt;singleton&lt;/code&gt; 、 &lt;code&gt;fromText&lt;/code&gt; 、および &lt;code&gt;fromLazyText&lt;/code&gt; と、2つのビルダーを連結する &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="68d48c8394d584a5e8731db36c33bd50d868f17f" translate="yes" xml:space="preserve">
          <source>Efficient construction of lazy &lt;code&gt;Text&lt;/code&gt; values. The principal operations on a &lt;code&gt;Builder&lt;/code&gt; are &lt;code&gt;singleton&lt;/code&gt;, &lt;code&gt;fromText&lt;/code&gt;, and &lt;code&gt;fromLazyText&lt;/code&gt;, which construct new builders, and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;, which concatenates two builders.</source>
          <target state="translated">怠惰な &lt;code&gt;Text&lt;/code&gt; 値の効率的な構築。 &lt;code&gt;Builder&lt;/code&gt; の主な操作は、新しいビルダーを構築する &lt;code&gt;singleton&lt;/code&gt; 、 &lt;code&gt;fromText&lt;/code&gt; 、および &lt;code&gt;fromLazyText&lt;/code&gt; と、2つのビルダーを連結する &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7bd556c346e2026184f0b2652c49f750a4c67d40" translate="yes" xml:space="preserve">
          <source>Efficient constructions of lazy bytestrings.</source>
          <target state="translated">怠惰なバイトの効率的な構造。</target>
        </trans-unit>
        <trans-unit id="95be912ad55993cfcb1a9f4187870161bd10a608" translate="yes" xml:space="preserve">
          <source>Efficient encoding of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s as decimal numbers is performed by &lt;code&gt;intDec&lt;/code&gt;. Optimization potential exists for the escaping of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s. The above implementation has two optimization opportunities. First, the buffer-free checks of the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s for escaping double quotes and backslashes can be fused. Second, the concatenations performed by &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; can be eliminated. The following implementation exploits these optimizations.</source>
          <target state="translated">10進数としての &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; の効率的なエンコードは、 &lt;code&gt;intDec&lt;/code&gt; によって実行されます。 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; のエスケープには、最適化の可能性があります。上記の実装には、2つの最適化の機会があります。まず、二重引用符とバックスラッシュをエスケープするための &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; のバッファフリーチェックを融合できます。次に、 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; によって実行される連結を削除できます。次の実装は、これらの最適化を利用しています。</target>
        </trans-unit>
        <trans-unit id="e44bdca6e855940187dbb32c7e1a2676b810f5e7" translate="yes" xml:space="preserve">
          <source>Efficient encoding of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s as decimal numbers is performed by &lt;code&gt;intDec&lt;/code&gt;. Optimization potential exists for the escaping of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s. The above implementation has two optimization opportunities. First, the buffer-free checks of the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s for escaping double quotes and backslashes can be fused. Second, the concatenations performed by &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; can be eliminated. The following implementation exploits these optimizations.</source>
          <target state="translated">10進数としての &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; の効率的なエンコードは、 &lt;code&gt;intDec&lt;/code&gt; によって実行されます。 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; のエスケープには最適化の可能性があります。上記の実装には、2つの最適化の機会があります。まず、二重引用符と円記号をエスケープするための &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; のバッファフリーチェックを融合できます。次に、 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; によって実行される連結を排除できます。次の実装では、これらの最適化を活用しています。</target>
        </trans-unit>
        <trans-unit id="0c5abdbf896d89ff91516a7f19ba739a5afe7067" translate="yes" xml:space="preserve">
          <source>Efficient locale-sensitive support for lazy text I/O.</source>
          <target state="translated">遅延テキストI/Oの効率的なロケールセンシティブサポート。</target>
        </trans-unit>
        <trans-unit id="728147d66fb07c7c8ea62a639ad6f2059b2beb2d" translate="yes" xml:space="preserve">
          <source>Efficient locale-sensitive support for text I/O.</source>
          <target state="translated">テキストI/Oの効率的なロケールセンシティブサポート。</target>
        </trans-unit>
        <trans-unit id="09a4bcbb66b93da2b8aa39d16c65da958c56a911" translate="yes" xml:space="preserve">
          <source>Efficient serialisation for GHCi Instruction arrays</source>
          <target state="translated">GHCi命令配列の効率的なシリアライゼーション</target>
        </trans-unit>
        <trans-unit id="236872a34cfb9b32f593202813531293f45b2bc8" translate="yes" xml:space="preserve">
          <source>Efficient, machine-independent access to the components of a floating-point number.</source>
          <target state="translated">浮動小数点数の構成要素への効率的で機械に依存しないアクセス.</target>
        </trans-unit>
        <trans-unit id="ff6862489cd39e592fb63bf232ca8c04d8c28485" translate="yes" xml:space="preserve">
          <source>Efficiently read the entire contents of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; into a list. This function never retries.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; のコンテンツ全体を効率的にリストに読み込みます。この関数は再試行しません。</target>
        </trans-unit>
        <trans-unit id="c4b5400e4e4b35fe0b27486d02606bda28585c9c" translate="yes" xml:space="preserve">
          <source>Efficiently read the entire contents of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; into a list. This function never retries.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; のコンテンツ全体を効率的にリストに読み込みます。この関数は再試行しません。</target>
        </trans-unit>
        <trans-unit id="b3609dfc83c372cf57cfbb5c44f6fed5be88ca56" translate="yes" xml:space="preserve">
          <source>Efficiently write a byte into the output buffer</source>
          <target state="translated">効率的にバイトを出力バッファに書き込む</target>
        </trans-unit>
        <trans-unit id="7a0c100d8363db97a2bf761ba5ddd84de20eb9d0" translate="yes" xml:space="preserve">
          <source>Efficiently write a signed byte into the output buffer</source>
          <target state="translated">符号付きバイトを出力バッファに効率的に書き込む</target>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="translated">Either</target>
        </trans-unit>
        <trans-unit id="8c2dcf9f933e92cf2ad231fa70c163bc33d66ff9" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&quot;32&quot;&lt;/code&gt; or &lt;code&gt;&quot;64&quot;&lt;/code&gt;, reflecting the word size of the target platform.</source>
          <target state="translated">ターゲットプラットフォームのワードサイズを反映する &lt;code&gt;&quot;32&quot;&lt;/code&gt; または &lt;code&gt;&quot;64&quot;&lt;/code&gt; のいずれか。</target>
        </trans-unit>
        <trans-unit id="ca3894f874e2092ee02f84659d2912f6008fd9fb" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; のいずれか。</target>
        </trans-unit>
        <trans-unit id="89cf84a36bd2bee9686ff85afd2c344462b021ac" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; のいずれか。</target>
        </trans-unit>
        <trans-unit id="4a82fa6858921c60a5822b17571a31b5c49da1a6" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; のいずれか。</target>
        </trans-unit>
        <trans-unit id="73ace3176890c2a9fb09f0fce8f3e71a2393dd94" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; のいずれか。</target>
        </trans-unit>
        <trans-unit id="aeb17092582999cdf852ab53980b9e25cc4e32d5" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:hcat&quot;&gt;hcat&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; のいずれか。</target>
        </trans-unit>
        <trans-unit id="d16f2be83547edc8a7a20cfbe2ea62109fd8ba03" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:hsep&quot;&gt;hsep&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:vcat&quot;&gt;vcat&lt;/a&gt;&lt;/code&gt; のいずれか。</target>
        </trans-unit>
        <trans-unit id="eae768106e62c463cb756728f03a2fb1d55c1259" translate="yes" xml:space="preserve">
          <source>Either \(IX\) is &lt;em&gt;overlappable&lt;/em&gt;, or \(IY\) is &lt;em&gt;overlapping&lt;/em&gt;. (This &amp;ldquo;either/or&amp;rdquo; design, rather than a &amp;ldquo;both/and&amp;rdquo; design, allow a client to deliberately override an instance from a library, without requiring a change to the library.)</source>
          <target state="translated">\（IX \）が&lt;em&gt;オーバーラップ可能&lt;/em&gt;であるか、\（IY \）が&lt;em&gt;オーバーラップしてい&lt;/em&gt;ます。（「両方/」のデザインではなく、この「どちらか/または」のデザインにより、クライアントはライブラリを変更することなく、ライブラリからインスタンスを意図的にオーバーライドできます。）</target>
        </trans-unit>
        <trans-unit id="e108ebea64a42e14b97d7be81de9358fdfc63409" translate="yes" xml:space="preserve">
          <source>Either hcat or vcat</source>
          <target state="translated">hcatかvcatのどちらか</target>
        </trans-unit>
        <trans-unit id="4a34f5a5cb2d6ae98a36d4adf57cdcb0049a752c" translate="yes" xml:space="preserve">
          <source>Either hsep or vcat</source>
          <target state="translated">hsepかvcatのどちらか</target>
        </trans-unit>
        <trans-unit id="b09741fbf221c146ff8a067164108559586ca7d9" translate="yes" xml:space="preserve">
          <source>Element contents</source>
          <target state="translated">要素の内容</target>
        </trans-unit>
        <trans-unit id="778d63305633845c783ba5d6e454b0cfdcb9c51d" translate="yes" xml:space="preserve">
          <source>Element name</source>
          <target state="translated">要素名</target>
        </trans-unit>
        <trans-unit id="f59967abba502e964b7f020cc8b5a7f5325fe6de" translate="yes" xml:space="preserve">
          <source>Element of a SIMD vector type</source>
          <target state="translated">SIMD ベクトル型の要素</target>
        </trans-unit>
        <trans-unit id="f98aca35f2959af196794c23d01e912f92465447" translate="yes" xml:space="preserve">
          <source>Elements are arranged from from lowest to highest, keeping duplicates in the order they appeared in the input.</source>
          <target state="translated">要素は低い方から高い方へと配置され、重複は入力に現れた順に維持されます。</target>
        </trans-unit>
        <trans-unit id="0cd990c539a574eb461235d162a7c624f2540597" translate="yes" xml:space="preserve">
          <source>Elements are arranged from lowest to highest, keeping duplicates in the order they appeared in the input.</source>
          <target state="translated">要素は低い順に配置され、重複は入力に現れた順に維持されます。</target>
        </trans-unit>
        <trans-unit id="ae1b54ec88a25966ebe0451c5b086e8093800252" translate="yes" xml:space="preserve">
          <source>Elements in XHTML Strict</source>
          <target state="translated">XHTML の要素</target>
        </trans-unit>
        <trans-unit id="615f199cd3fbc38e1e27bbeea1e73fdb4abac6d5" translate="yes" xml:space="preserve">
          <source>Eliminate any candidate \(IX\) for which there is another candidate \(IY\) such that both of the following hold:</source>
          <target state="translated">Eliminate any candidate 候補を排除して、次の両方を保持するように。</target>
        </trans-unit>
        <trans-unit id="52b274f44ee359523469b15453109497a69e6fbc" translate="yes" xml:space="preserve">
          <source>Elimination</source>
          <target state="translated">Elimination</target>
        </trans-unit>
        <trans-unit id="ca9189e8b45feaa94cb4019195418b4ef3d7a93b" translate="yes" xml:space="preserve">
          <source>Eliminator for &lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-applicative-lift#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; エリミネーター。</target>
        </trans-unit>
        <trans-unit id="83dd28bfea5c32f2bf2c82619195683ac46076ea" translate="yes" xml:space="preserve">
          <source>Embed a simple state action into the monad.</source>
          <target state="translated">シンプルなステートアクションをモナドに埋め込みます。</target>
        </trans-unit>
        <trans-unit id="b340faa98a6b348180fa991a2183d51aae5e734c" translate="yes" xml:space="preserve">
          <source>Embed a strict state thread in an &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. The &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">厳格な状態のスレッドを &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; アクションに埋め込みます。 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; パラメータが使用する内部状態のことを示している &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; の計算は特別によって供給されたものである &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; モナドとの呼び出しで使用されるものから、したがって異なる &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c387e9378b498d788feea39b5ce84573125c480" translate="yes" xml:space="preserve">
          <source>Embed a strict state thread in an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. The &lt;code&gt;&lt;a href=&quot;control-monad-st#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">厳格な状態のスレッドを &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; アクションに埋め込みます。 &lt;code&gt;&lt;a href=&quot;control-monad-st#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; パラメータが使用する内部状態のことを示している &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; の計算は特別によって供給されたものである &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; モナドとの呼び出しで使用されるものから、したがって異なる &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f55737d101cc9f1d134f9358f73f0df04030c72" translate="yes" xml:space="preserve">
          <source>Embed a strict state thread in an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action. The &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">厳格な状態のスレッドを &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; アクションに埋め込みます。 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; パラメータが使用する内部状態のことを示している &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; の計算は特別によって供給されたものである &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; モナドとの呼び出しで使用されるものから、したがって異なる &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a6fc326f19cade7df34990008d8ecf6c0ee55c7" translate="yes" xml:space="preserve">
          <source>Emit a foreign file which will be compiled and linked to the object for the current module. Currently only languages that can be compiled with the C compiler are supported, and the flags passed as part of -optc will be also applied to the C compiler invocation that will compile them.</source>
          <target state="translated">コンパイルされ、現在のモジュールのオブジェクトにリンクされる外部ファイルを出力します。現在のところ、C コンパイラでコンパイルできる言語のみがサポートされており、 -optc の一部として渡されたフラグは、それらをコンパイルする C コンパイラの呼び出しにも適用されます。</target>
        </trans-unit>
        <trans-unit id="ddb34401314a7a78ca02c089f749afef294c419b" translate="yes" xml:space="preserve">
          <source>Emit debug information in object code. Currently only DWARF debug information is supported on x86-64 and i386. Currently debug levels 0 through 3 are accepted:</source>
          <target state="translated">オブジェクトコードのデバッグ情報を出力します。現在のところ、x86-64 および i386 では DWARF デバッグ情報のみがサポートされています。現在のところ、デバッグレベル 0 から 3 までを受け付けています。</target>
        </trans-unit>
        <trans-unit id="23e5ca18fb048a259419389c5fa109f10e636849" translate="yes" xml:space="preserve">
          <source>Emit profile samples to the &lt;a href=&quot;runtime_control#rts-eventlog&quot;&gt;GHC event log&lt;/a&gt;. This format is both more expressive than the old &lt;code&gt;.hp&lt;/code&gt; format and can be correlated with other events over the program&amp;rsquo;s runtime. See &lt;a href=&quot;eventlog-formats#heap-profiler-events&quot;&gt;Heap profiler event log output&lt;/a&gt; for details on the produced event structure.</source>
          <target state="translated">プロファイルサンプルを&lt;a href=&quot;runtime_control#rts-eventlog&quot;&gt;GHCイベントログに出力します&lt;/a&gt;。この形式は、古い &lt;code&gt;.hp&lt;/code&gt; 形式よりも表現力があり、プログラムのランタイムを通じて他のイベントと関連付けることができます。参照してください&lt;a href=&quot;eventlog-formats#heap-profiler-events&quot;&gt;ヒーププロファイライベントログ出力&lt;/a&gt;生成イベント構造の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="a579761215973983c3266981fb3734fda72fbddc" translate="yes" xml:space="preserve">
          <source>Emit the full description of every package, in the form of an &lt;code&gt;InstalledPackageInfo&lt;/code&gt;. Multiple package descriptions are separated by the string &lt;code&gt;---&lt;/code&gt; on a line by itself.</source>
          <target state="translated">すべてのパッケージの完全な説明を、 &lt;code&gt;InstalledPackageInfo&lt;/code&gt; の形式で出力します。複数のパッケージの説明は、1行に文字列 &lt;code&gt;---&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="eedc94b0824c69aeb74f17ea3571fc1dc9262b1d" translate="yes" xml:space="preserve">
          <source>Emit the full description of the specified package. The description is in the form of an &lt;code&gt;InstalledPackageInfo&lt;/code&gt;, the same as the input file format for &lt;code&gt;ghc-pkg register&lt;/code&gt;. See &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo: a package specification&lt;/a&gt; for details.</source>
          <target state="translated">指定されたパッケージの完全な説明を出力します。説明は、 &lt;code&gt;InstalledPackageInfo&lt;/code&gt; の形式であり、 &lt;code&gt;ghc-pkg register&lt;/code&gt; の入力ファイル形式と同じです。詳細については、&lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo：パッケージ仕様&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2a31f0708a9eb6b217864b6a042884e7d78ca64b" translate="yes" xml:space="preserve">
          <source>Emits a marker event via the RTS tracing framework. The contents of the event is the zero-terminated byte string passed as the first argument. The event will be emitted either to the &lt;code&gt;.eventlog&lt;/code&gt; file, or to stderr, depending on the runtime RTS flags.</source>
          <target state="translated">RTSトレースフレームワークを介してマーカーイベントを発生させます。イベントの内容は、最初の引数として渡されるゼロで終了するバイト文字列です。イベントは、ランタイムRTSフラグに応じて、 &lt;code&gt;.eventlog&lt;/code&gt; ファイルまたはstderrに出力されます。</target>
        </trans-unit>
        <trans-unit id="1e57bf33f4f40534adc2a346130d490b186fbe68" translate="yes" xml:space="preserve">
          <source>Emits a warning if GHC cannot specialise an overloaded function, usually because the function needs an &lt;code&gt;INLINABLE&lt;/code&gt; pragma. Reports all such situations.</source>
          <target state="translated">通常、関数が &lt;code&gt;INLINABLE&lt;/code&gt; プラグマを必要とするため、GHCがオーバーロードされた関数を特殊化できない場合に警告を発します。そのような状況をすべて報告します。</target>
        </trans-unit>
        <trans-unit id="fe8a4015db73a571dcf0a872bd93d8a88b777e6a" translate="yes" xml:space="preserve">
          <source>Emits a warning if GHC cannot specialise an overloaded function, usually because the function needs an &lt;code&gt;INLINABLE&lt;/code&gt; pragma. Reports when the situation arises during specialisation of an imported function.</source>
          <target state="translated">通常、関数が &lt;code&gt;INLINABLE&lt;/code&gt; プラグマを必要とするため、GHCがオーバーロードされた関数を特殊化できない場合に警告を発します。インポートされた関数の特殊化中に状況が発生した場合に報告します。</target>
        </trans-unit>
        <trans-unit id="81efd878636ba7b56197416e3998ec81ce5bd56b" translate="yes" xml:space="preserve">
          <source>Emits an event via the RTS tracing framework. The contents of the event is the binary object passed as the first argument with the the given length passed as the second argument. The event will be emitted to the &lt;code&gt;.eventlog&lt;/code&gt; file.</source>
          <target state="translated">RTSトレースフレームワークを介してイベントを発行します。イベントの内容は、指定された長さが2番目の引数として渡された最初の引数として渡されたバイナリオブジェクトです。イベントは &lt;code&gt;.eventlog&lt;/code&gt; ファイルに出力されます。</target>
        </trans-unit>
        <trans-unit id="abad5cfce117eeca2c66c0bbdaad4250524ee6c8" translate="yes" xml:space="preserve">
          <source>Emits an event via the RTS tracing framework. The contents of the event is the zero-terminated byte string passed as the first argument. The event will be emitted either to the &lt;code&gt;.eventlog&lt;/code&gt; file, or to stderr, depending on the runtime RTS flags.</source>
          <target state="translated">RTSトレースフレームワークを介してイベントを発行します。イベントの内容は、最初の引数として渡されるゼロで終了するバイト文字列です。イベントは、ランタイムRTSフラグに応じて、 &lt;code&gt;.eventlog&lt;/code&gt; ファイルまたはstderrに出力されます。</target>
        </trans-unit>
        <trans-unit id="6fdc5d4715bb601f6a4a08e47b3447c293e821ad" translate="yes" xml:space="preserve">
          <source>Employ rebindable syntax. Implies &lt;a href=&quot;#extension-NoImplicitPrelude&quot;&gt;&lt;code&gt;NoImplicitPrelude&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">再バインド可能な構文を使用します。意味&lt;a href=&quot;#extension-NoImplicitPrelude&quot;&gt; &lt;code&gt;NoImplicitPrelude&lt;/code&gt; は&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3159fe421b3221381b3c778dc1c3c26e4540be37" translate="yes" xml:space="preserve">
          <source>Empty</source>
          <target state="translated">Empty</target>
        </trans-unit>
        <trans-unit id="40ff3edd120c1ced1fce1c0e3fc3ee548054d166" translate="yes" xml:space="preserve">
          <source>Empty datatypes: &lt;code&gt;V1&lt;/code&gt;</source>
          <target state="translated">空のデータ型： &lt;code&gt;V1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d72b3ceb9581b4b61225c58829613c7b50aaf28b" translate="yes" xml:space="preserve">
          <source>Empty paths are treated as the current directory.</source>
          <target state="translated">空のパスはカレントディレクトリとして扱われます。</target>
        </trans-unit>
        <trans-unit id="33bd5284f3fdf0a1c04092ada20be09f70b844f3" translate="yes" xml:space="preserve">
          <source>Empty the import directory list</source>
          <target state="translated">インポートディレクトリリストを空にする</target>
        </trans-unit>
        <trans-unit id="3c6fa73218916bf9e5650f1088ae097d6d991448" translate="yes" xml:space="preserve">
          <source>EmptyCallStack</source>
          <target state="translated">EmptyCallStack</target>
        </trans-unit>
        <trans-unit id="d85d9c6b43aaa2442efab95ab8650d364ba56534" translate="yes" xml:space="preserve">
          <source>EmptyCase</source>
          <target state="translated">EmptyCase</target>
        </trans-unit>
        <trans-unit id="417d43f0c5b3fcc933643e9fb018ddfb8ad5da18" translate="yes" xml:space="preserve">
          <source>EmptyDataDecls</source>
          <target state="translated">EmptyDataDecls</target>
        </trans-unit>
        <trans-unit id="a5fae12a58d1ccb6a9471a85a20708d3fa493c44" translate="yes" xml:space="preserve">
          <source>EmptyDataDeriving</source>
          <target state="translated">EmptyDataDeriving</target>
        </trans-unit>
        <trans-unit id="113fee850c5dca5a7e5e7ea397edce2bd639098a" translate="yes" xml:space="preserve">
          <source>EmptyL</source>
          <target state="translated">EmptyL</target>
        </trans-unit>
        <trans-unit id="2a980ff896dd1960377c7d2f7ecf38b75e8da98a" translate="yes" xml:space="preserve">
          <source>EmptyR</source>
          <target state="translated">EmptyR</target>
        </trans-unit>
        <trans-unit id="f69258f941b24f0f2c7269217de659be06225b36" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Unsafe mode.</source>
          <target state="translated">&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Unsafeモードを有効にします。</target>
        </trans-unit>
        <trans-unit id="069ce88d7ccf1e2bfb7a2d33766b2a8b1d18d2e6" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; trusted package requirement for trustworthy modules.</source>
          <target state="translated">信頼できるモジュールに対して&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskellの&lt;/a&gt;信頼できるパッケージ要件を有効にします。</target>
        </trans-unit>
        <trans-unit id="f063bddb13a247daafa8897d3a96b2939bb2b007" translate="yes" xml:space="preserve">
          <source>Enable &lt;em&gt;all&lt;/em&gt; RTS option processing, both on the command line and through the &lt;code&gt;GHCRTS&lt;/code&gt; environment variable.</source>
          <target state="translated">コマンドラインと &lt;code&gt;GHCRTS&lt;/code&gt; 環境変数の両方で、&lt;em&gt;すべての&lt;/em&gt; RTSオプション処理を有効に&lt;em&gt;し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3ef9d4f847354709b1746e1615f525879cefea09" translate="yes" xml:space="preserve">
          <source>Enable Applicative do-notation desugaring</source>
          <target state="translated">アプリカティブ・ドゥーノテーション・デザイアリングを有効にします。</target>
        </trans-unit>
        <trans-unit id="eddf2f8555096c1ec853e903d2c0345c507bc972" translate="yes" xml:space="preserve">
          <source>Enable Cmm common block elimination. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cmm共通ブロックの除去を有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="50b4a085a4cd714922af488444cc6233a03ee900" translate="yes" xml:space="preserve">
          <source>Enable Cmm sinking. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cmmシンクを有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="c551cf97bec7897ab12112f2050b0d95e788d841" translate="yes" xml:space="preserve">
          <source>Enable GHC&amp;rsquo;s cunning generalised deriving mechanism for &lt;code&gt;newtype&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;newtype&lt;/code&gt; のGHCの巧妙な一般化された派生メカニズムを有効にする</target>
        </trans-unit>
        <trans-unit id="ba65d37a24d61ff44622efb5dd6a5c0c4e257d90" translate="yes" xml:space="preserve">
          <source>Enable Implicit Parameters.</source>
          <target state="translated">暗黙のパラメータを有効にします。</target>
        </trans-unit>
        <trans-unit id="0b525a2c8105aab9b18ed7c57bda3ea71f57609f" translate="yes" xml:space="preserve">
          <source>Enable Implicit Parameters. Implies &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">暗黙的なパラメータを有効にします。&lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; を&lt;/a&gt;意味します。</target>
        </trans-unit>
        <trans-unit id="fef928af9b9c30c1642025404a66357e046fb2a2" translate="yes" xml:space="preserve">
          <source>Enable NUMA-aware memory allocation in the runtime (only available with &lt;code&gt;-threaded&lt;/code&gt;, and only on Linux and Windows currently).</source>
          <target state="translated">ランタイムでNUMA対応のメモリ割り当てを有効にします（現在 &lt;code&gt;-threaded&lt;/code&gt; でのみ使用可能で、現在はLinuxおよびWindowsでのみ）。</target>
        </trans-unit>
        <trans-unit id="291b4fb36fad0712361533c59ea70c0605c66516" translate="yes" xml:space="preserve">
          <source>Enable Template Haskell Quasi-quotation syntax.</source>
          <target state="translated">テンプレートHaskellの準引用符構文を有効にします。</target>
        </trans-unit>
        <trans-unit id="ac80bd2cafc75b34f2bb8a394b32c1276e68b3d8" translate="yes" xml:space="preserve">
          <source>Enable Template Haskell&amp;rsquo;s splice and quotation syntax.</source>
          <target state="translated">テンプレートHaskellのスプライスと引用構文を有効にします。</target>
        </trans-unit>
        <trans-unit id="7d394c959731485258f393bf684401a5c5ac79ae" translate="yes" xml:space="preserve">
          <source>Enable Template Haskell.</source>
          <target state="translated">テンプレートHaskellを有効にします。</target>
        </trans-unit>
        <trans-unit id="28822fecbe1fad5f17ca8ff430bf88454401d40d" translate="yes" xml:space="preserve">
          <source>Enable a breakpoint</source>
          <target state="translated">ブレークポイントを有効にする</target>
        </trans-unit>
        <trans-unit id="9c459274135d3bd5f5c45d4ac444f4af2a38db67" translate="yes" xml:space="preserve">
          <source>Enable a kind of constraints.</source>
          <target state="translated">一種の制約を有効にします。</target>
        </trans-unit>
        <trans-unit id="76055f87cf54c2a66ffe8cf3790dc5a331545767" translate="yes" xml:space="preserve">
          <source>Enable all breakpoints and begin evaluating an expression in single-stepping mode. In this mode evaluation will be stopped after every reduction, allowing local variables to be inspected. If ⟨expr⟩ is not given, evaluation will resume at the last breakpoint. See &lt;a href=&quot;#single-stepping&quot;&gt;Single-stepping&lt;/a&gt;.</source>
          <target state="translated">すべてのブレークポイントを有効にして、シングルステップモードで式の評価を開始します。このモードでは、評価が削減されるたびに停止され、ローカル変数を検査できるようになります。「expr」を指定しない場合、評価は最後のブレークポイントから再開されます。&lt;a href=&quot;#single-stepping&quot;&gt;シングルステップを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8055dbadcd3b5579ede66a722ccbadd6da09583f" translate="yes" xml:space="preserve">
          <source>Enable arrow notation extension</source>
          <target state="translated">矢印表記の拡張を有効にする</target>
        </trans-unit>
        <trans-unit id="6be736051511fcf4febf53e62c4dabd115f20b9a" translate="yes" xml:space="preserve">
          <source>Enable arrow notation.</source>
          <target state="translated">矢印表記を有効にします。</target>
        </trans-unit>
        <trans-unit id="0c872500562e5ca75c4e55d785a878085588e1e7" translate="yes" xml:space="preserve">
          <source>Enable automatic deriving of instances for the &lt;code&gt;Data&lt;/code&gt; typeclass</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; クラスのインスタンスの自動派生を有効にする</target>
        </trans-unit>
        <trans-unit id="d7959a814cac78116290abc8478b2844f4d03800" translate="yes" xml:space="preserve">
          <source>Enable automatic deriving of instances for the &lt;code&gt;Lift&lt;/code&gt; typeclass for Template Haskell.</source>
          <target state="translated">テンプレートHaskellの &lt;code&gt;Lift&lt;/code&gt; タイプクラスのインスタンスの自動派生を有効にします。</target>
        </trans-unit>
        <trans-unit id="fa86dc099d47783f7d0a58549192b8b1097a006b" translate="yes" xml:space="preserve">
          <source>Enable bang patterns.</source>
          <target state="translated">バングパターンを有効にします。</target>
        </trans-unit>
        <trans-unit id="ce03f1b9615a0bdf3af1244ec00f58cf7e15705f" translate="yes" xml:space="preserve">
          <source>Enable call-arity analysis.</source>
          <target state="translated">コールアリティ解析を有効にします。</target>
        </trans-unit>
        <trans-unit id="a6d8cccdebeaa96f1c87e386dd213d85d8c4b3e4" translate="yes" xml:space="preserve">
          <source>Enable call-arity optimisation. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出しアリティ最適化を有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="edb3d168a7ff318fcc62f41abd3e0763c1a58347" translate="yes" xml:space="preserve">
          <source>Enable case-merging. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">大文字小文字のマージを有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="329be79f930f74bf497584814b87c2c155375955" translate="yes" xml:space="preserve">
          <source>Enable code coverage for the current module or modules being compiled.</source>
          <target state="translated">現在のモジュールまたはコンパイル中のモジュールのコードカバレッジを有効にします。</target>
        </trans-unit>
        <trans-unit id="3aff91029ec6e38fdb215c8e3b44b892e704d3dd" translate="yes" xml:space="preserve">
          <source>Enable common sub-expression elimination on the STG intermediate language</source>
          <target state="translated">STG中間言語で共通のサブ表現の排除を可能にする</target>
        </trans-unit>
        <trans-unit id="5f0b9143ca2f7eea23068bca92c859bebe41895d" translate="yes" xml:space="preserve">
          <source>Enable common sub-expression elimination. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一般的な部分式の削除を有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="5d3ed727245863b71054eb06acb626045606ec13" translate="yes" xml:space="preserve">
          <source>Enable constant folding in case expressions. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ケース式で定数の折りたたみを有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="13cd8c57ae87c71141911af34102116592fd7527" translate="yes" xml:space="preserve">
          <source>Enable constrained class methods.</source>
          <target state="translated">制約付きクラス・メソッドを有効にします。</target>
        </trans-unit>
        <trans-unit id="3fbc82f3bcf16c76192c7fb3b8ca8dbf4dbce0f9" translate="yes" xml:space="preserve">
          <source>Enable datatype promotion.</source>
          <target state="translated">データ型のプロモーションを有効にします。</target>
        </trans-unit>
        <trans-unit id="ff32c64c61689ffe5a6c40671818819d8191da4d" translate="yes" xml:space="preserve">
          <source>Enable default signatures.</source>
          <target state="translated">デフォルトの署名を有効にします。</target>
        </trans-unit>
        <trans-unit id="1c2941d8f6c9a6d5ec9b9eb1e900d02e6c1a708f" translate="yes" xml:space="preserve">
          <source>Enable default strict datatype fields.</source>
          <target state="translated">デフォルトの厳密なデータ型フィールドを有効にします。</target>
        </trans-unit>
        <trans-unit id="869e4b0536e0526fd5a85d8d25fcd822ba328f40" translate="yes" xml:space="preserve">
          <source>Enable deriving for any class.</source>
          <target state="translated">任意のクラスの導出を有効にします。</target>
        </trans-unit>
        <trans-unit id="e3ae1cb943b6225f86153e69258d71b5e21c711e" translate="yes" xml:space="preserve">
          <source>Enable deriving for the &lt;code&gt;Data&lt;/code&gt; class. Implied by (deprecated) &lt;code&gt;AutoDeriveTypeable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; クラスの派生を有効にします。（非推奨の） &lt;code&gt;AutoDeriveTypeable&lt;/code&gt; によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="49a68b363801cf0cc3bc177a831341d507a713b6" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Data class. Implied by (deprecated) &lt;code&gt;AutoDeriveTypeable&lt;/code&gt;.</source>
          <target state="translated">Dataクラスの派生を有効にします。（非推奨） &lt;code&gt;AutoDeriveTypeable&lt;/code&gt; によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="3c1b3b7cb3a9e77f53e391a5c1c0372d82968933" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Foldable class. Implied by &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Foldableクラスの派生を有効にします。&lt;a href=&quot;#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="007821c6a972fb297c8c9f2ef8491de0ee0e4f70" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Functor class. Implied by &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Functorクラスの派生を有効にします。&lt;a href=&quot;#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="79443ff4d96d3376b5cbb13a6027d47a8fe69bbe" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Generic class.</source>
          <target state="translated">Generic クラスの導出を有効にします。</target>
        </trans-unit>
        <trans-unit id="07948bf0a3eb1a3cc8f80ece5b9b75ce73b2fa96" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Lift class</source>
          <target state="translated">Lift クラスの導出を有効にする</target>
        </trans-unit>
        <trans-unit id="239f48f68a661aebbe8ede751ef0e9fb5a6a1982" translate="yes" xml:space="preserve">
          <source>Enable deriving for the Traversable class. Implies &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt;&lt;code&gt;DeriveFunctor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt;&lt;code&gt;DeriveFoldable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Traversableクラスの派生を有効にします。意味&lt;a href=&quot;#extension-DeriveFunctor&quot;&gt; &lt;code&gt;DeriveFunctor&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#extension-DeriveFoldable&quot;&gt; &lt;code&gt;DeriveFoldable&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ca186309ec5f9bab137da64b7e528c8f14f30ff" translate="yes" xml:space="preserve">
          <source>Enable deriving instances &lt;code&gt;via&lt;/code&gt; types of the same runtime representation. Implies &lt;a href=&quot;#extension-DerivingStrategies&quot;&gt;&lt;code&gt;DerivingStrategies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インスタンスを導出有効 &lt;code&gt;via&lt;/code&gt; 同じ実行時の表現のタイプ。DerivingStrategiesを&lt;a href=&quot;#extension-DerivingStrategies&quot;&gt; &lt;code&gt;DerivingStrategies&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="97e1b6323e539b78ba0ee5e17b3e87bbcbd4ea87" translate="yes" xml:space="preserve">
          <source>Enable detection of complete user-supplied kind signatures.</source>
          <target state="translated">ユーザーが提供した完全な種類のシグネチャの検出を可能にします。</target>
        </trans-unit>
        <trans-unit id="26b597a764796dacd29afee1df47f3d5f838f48f" translate="yes" xml:space="preserve">
          <source>Enable do not generalise local bindings. Implied by &lt;a href=&quot;#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-GADTs&quot;&gt;&lt;code&gt;GADTs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ローカルバインディングを一般化しないを有効にします。&lt;a href=&quot;#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#extension-GADTs&quot;&gt; &lt;code&gt;GADTs&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="a0be8cbc4d765a0837fafb8803bb02065cc1399b" translate="yes" xml:space="preserve">
          <source>Enable eta-reduction. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">eta-reductionを有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="ec8da65fee4b98e4b8c2714f873dc076859c7eee" translate="yes" xml:space="preserve">
          <source>Enable excess intermediate precision</source>
          <target state="translated">過剰な中間精度を有効にする</target>
        </trans-unit>
        <trans-unit id="850b8f3261961cee008dc7e870d004b739205cdd" translate="yes" xml:space="preserve">
          <source>Enable explicit universal quantification. Implied by &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#extension-LiberalTypeSynonyms&quot;&gt;&lt;code&gt;LiberalTypeSynonyms&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-ExistentialQuantification&quot;&gt;&lt;code&gt;ExistentialQuantification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">明示的なユニバーサル定量化を有効にします。&lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#extension-LiberalTypeSynonyms&quot;&gt; &lt;code&gt;LiberalTypeSynonyms&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#extension-ExistentialQuantification&quot;&gt; &lt;code&gt;ExistentialQuantification&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="d1e23f92b67b82dae5978c28208084dc00d729ba" translate="yes" xml:space="preserve">
          <source>Enable flexible contexts.</source>
          <target state="translated">柔軟なコンテキストを有効にします。</target>
        </trans-unit>
        <trans-unit id="4326272602235d776243b0be7267eabd4e4123f0" translate="yes" xml:space="preserve">
          <source>Enable flexible contexts. Implied by &lt;a href=&quot;#extension-ImplicitParams&quot;&gt;&lt;code&gt;ImplicitParams&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">柔軟なコンテキストを有効にします。&lt;a href=&quot;#extension-ImplicitParams&quot;&gt; &lt;code&gt;ImplicitParams&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="2bbf0112c1fe0e363a981405dda84c247bdba5ab" translate="yes" xml:space="preserve">
          <source>Enable flexible instances. Implies &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt;&lt;code&gt;TypeSynonymInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">柔軟なインスタンスを有効にします。意味&lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt; &lt;code&gt;TypeSynonymInstances&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3352a1b4750a9aa10f1917af624b39ab936b924e" translate="yes" xml:space="preserve">
          <source>Enable flexible instances. Implies &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt;&lt;code&gt;TypeSynonymInstances&lt;/code&gt;&lt;/a&gt;. Implied by &lt;a href=&quot;#extension-ImplicitParams&quot;&gt;&lt;code&gt;ImplicitParams&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">柔軟なインスタンスを有効にします。意味&lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt; &lt;code&gt;TypeSynonymInstances&lt;/code&gt; を&lt;/a&gt;。&lt;a href=&quot;#extension-ImplicitParams&quot;&gt; &lt;code&gt;ImplicitParams&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="41869def57dfc8e97f499d482e8a86e12eb096c1" translate="yes" xml:space="preserve">
          <source>Enable foreign function interface.</source>
          <target state="translated">外部関数インタフェースを有効にします。</target>
        </trans-unit>
        <trans-unit id="0f8cf2b2ab3b0a3fd67079783e6bea9aa1aac099" translate="yes" xml:space="preserve">
          <source>Enable functional dependencies. Implies &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt;&lt;code&gt;MultiParamTypeClasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">機能の依存関係を有効にします。意味&lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt; &lt;code&gt;MultiParamTypeClasses&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5e0f11a4cbb70ef7bbd7353f832b89ad0273ea4" translate="yes" xml:space="preserve">
          <source>Enable generalised algebraic data type syntax.</source>
          <target state="translated">一般化された代数データ型構文を有効にします。</target>
        </trans-unit>
        <trans-unit id="e5e6667007f1410282ee8aee1040f24c3e4a48dd" translate="yes" xml:space="preserve">
          <source>Enable generalised algebraic data types. Implies &lt;a href=&quot;#extension-GADTSyntax&quot;&gt;&lt;code&gt;GADTSyntax&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt;&lt;code&gt;MonoLocalBinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一般化代数データ型を有効にします。意味&lt;a href=&quot;#extension-GADTSyntax&quot;&gt; &lt;code&gt;GADTSyntax&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt; &lt;code&gt;MonoLocalBinds&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50529dff39e89ed3c622cc4057f4bb947711bdc1" translate="yes" xml:space="preserve">
          <source>Enable generalised list comprehensions.</source>
          <target state="translated">一般化されたリスト理解を可能にします。</target>
        </trans-unit>
        <trans-unit id="ad1061ac767434e280e0b9813bd1ee84f4e48a5f" translate="yes" xml:space="preserve">
          <source>Enable impredicative types. Implies &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">命令型を有効にします。意味&lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e41c57bb0980f5fdd76c940172f9efa34ea742d4" translate="yes" xml:space="preserve">
          <source>Enable incoherent instances. Implies &lt;a href=&quot;#extension-OverlappingInstances&quot;&gt;&lt;code&gt;OverlappingInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一貫性のないインスタンスを有効にします。&lt;a href=&quot;#extension-OverlappingInstances&quot;&gt; &lt;code&gt;OverlappingInstances&lt;/code&gt; を&lt;/a&gt;意味します。</target>
        </trans-unit>
        <trans-unit id="57cf64c8f515c1d111db120414d8daba9910d89d" translate="yes" xml:space="preserve">
          <source>Enable injective type families. Implies &lt;a href=&quot;#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単射型ファミリーを有効にします。意味&lt;a href=&quot;#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95405195ca714f7bd874c9fad51414b5d2df5941" translate="yes" xml:space="preserve">
          <source>Enable instance signatures.</source>
          <target state="translated">インスタンス署名を有効にします。</target>
        </trans-unit>
        <trans-unit id="f026ddefab7b52844aaa5c0a7c4d2299590328c7" translate="yes" xml:space="preserve">
          <source>Enable interruptible FFI.</source>
          <target state="translated">割り込み可能な FFI を有効にします。</target>
        </trans-unit>
        <trans-unit id="f8bec893b8de6e24dabe9baf592c86e228746d47" translate="yes" xml:space="preserve">
          <source>Enable kind polymorphism. Implies &lt;a href=&quot;#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">種多様性を有効にします。意味&lt;a href=&quot;#extension-KindSignatures&quot;&gt; &lt;code&gt;KindSignatures&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28c592367c7c5720ed04c4526a2bf15c61e75796" translate="yes" xml:space="preserve">
          <source>Enable kind signatures. Implied by &lt;a href=&quot;#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">親切な署名を有効にします。&lt;a href=&quot;#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#extension-PolyKinds&quot;&gt; &lt;code&gt;PolyKinds&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="cc71c763b3552a388011fca4127d28ce00a0eb1e" translate="yes" xml:space="preserve">
          <source>Enable lambda eta-expansion. Always enabled by default.</source>
          <target state="translated">ラムダ・エタ展開を有効にします。デフォルトでは常に有効になっています。</target>
        </trans-unit>
        <trans-unit id="689ead6570e480b4e1ffb504a261ea5b1e0ed010" translate="yes" xml:space="preserve">
          <source>Enable lambda-case expressions.</source>
          <target state="translated">ラムダケース式を有効にします。</target>
        </trans-unit>
        <trans-unit id="c06b11c156a14e83368d8563b0b34e00c0d677da" translate="yes" xml:space="preserve">
          <source>Enable late lambda lifting on the STG intermediate language. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O2&quot;&gt;&lt;code&gt;-O2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">STG中間言語で遅いラムダリフティングを有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O2&quot;&gt; &lt;code&gt;-O2&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="3633c2d467dbf2065cdace37c5a7616a0a0f2767" translate="yes" xml:space="preserve">
          <source>Enable level 1 optimisations</source>
          <target state="translated">レベル1の最適化を有効にする</target>
        </trans-unit>
        <trans-unit id="c47ff74ce4aab15323051d4ceb4d898c6d32f098" translate="yes" xml:space="preserve">
          <source>Enable level 2 optimisations</source>
          <target state="translated">レベル2の最適化を有効にする</target>
        </trans-unit>
        <trans-unit id="439cb1edc272b23893b8c0260417223d1cae4680" translate="yes" xml:space="preserve">
          <source>Enable lexical scoping of type variables explicitly introduced with &lt;code&gt;forall&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forall&lt;/code&gt; で明示的に導入された型変数の字句スコープを有効にします。</target>
        </trans-unit>
        <trans-unit id="9fa1fe31d1863a7ed67358a79bb9989a519db23c" translate="yes" xml:space="preserve">
          <source>Enable lexically-scoped type variables.</source>
          <target state="translated">辞書的にスコープされた型変数を有効にします。</target>
        </trans-unit>
        <trans-unit id="24f9edb5057a87aedc95c9bdc722b549a452ae19" translate="yes" xml:space="preserve">
          <source>Enable liberalised type synonyms.</source>
          <target state="translated">自由化されたタイプの同義語を有効にします。</target>
        </trans-unit>
        <trans-unit id="bfdaec126af72722e10a1c8b3eee19954a886d31" translate="yes" xml:space="preserve">
          <source>Enable list comprehension syntax for arbitrary monads.</source>
          <target state="translated">任意のモナドのリスト内包構文を有効にします。</target>
        </trans-unit>
        <trans-unit id="945cecd75646ac2b05bb1b2cc0c956dc0e8ca4cf" translate="yes" xml:space="preserve">
          <source>Enable monad comprehensions.</source>
          <target state="translated">モナド理解を可能にします。</target>
        </trans-unit>
        <trans-unit id="697b56ee8c9edbaa577fbb0c301b9944e1291bc8" translate="yes" xml:space="preserve">
          <source>Enable monadfail desugaring.</source>
          <target state="translated">モナドフェイルのデザイアリングを有効にします。</target>
        </trans-unit>
        <trans-unit id="650df673a1f730b2b32deb98dfea55a4a4e7231a" translate="yes" xml:space="preserve">
          <source>Enable multi parameter type classes. Implied by &lt;a href=&quot;#extension-FunctionalDependencies&quot;&gt;&lt;code&gt;FunctionalDependencies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マルチパラメータタイプクラスを有効にします。&lt;a href=&quot;#extension-FunctionalDependencies&quot;&gt; &lt;code&gt;FunctionalDependencies&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="75f6401e1cbb85d3018480be84448da53cee9797" translate="yes" xml:space="preserve">
          <source>Enable multi-way if-expressions.</source>
          <target state="translated">多元的なif式を有効にします。</target>
        </trans-unit>
        <trans-unit id="4a22cd162bf275df1679f9356e0b6ce892b43386" translate="yes" xml:space="preserve">
          <source>Enable named wildcards.</source>
          <target state="translated">名前付きワイルドカードを有効にします。</target>
        </trans-unit>
        <trans-unit id="269c68a2f9c2eaacb202b8ac73d35fbab7f80f1c" translate="yes" xml:space="preserve">
          <source>Enable newtype deriving.</source>
          <target state="translated">ニュータイプ導出を有効にします。</target>
        </trans-unit>
        <trans-unit id="c5bfd283c7c90abdc7195043d24e79fcf5733c81" translate="yes" xml:space="preserve">
          <source>Enable one or more disabled breakpoints by number (use &lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt;&lt;code&gt;:show breaks&lt;/code&gt;&lt;/a&gt; to see the number and state of each breakpoint). The &lt;code&gt;*&lt;/code&gt; form enables all the disabled breakpoints.</source>
          <target state="translated">1つ以上の無効なブレークポイントを番号で有効にします（各ブレークポイントの番号と状態を確認するには、&lt;a href=&quot;#ghci-cmd-:show%20breaks&quot;&gt; &lt;code&gt;:show breaks&lt;/code&gt; &lt;/a&gt;を使用します）。 &lt;code&gt;*&lt;/code&gt; フォームはすべて無効にブレークポイントを有効にします。</target>
        </trans-unit>
        <trans-unit id="9efaa31c4711f7aa0d53be180b0d6d7dcd212d60" translate="yes" xml:space="preserve">
          <source>Enable only Template Haskell&amp;rsquo;s quotation syntax.</source>
          <target state="translated">テンプレートHaskellの引用構文のみを有効にします。</target>
        </trans-unit>
        <trans-unit id="77f7c18a24e32054383c4147d6eed25085f3bc49" translate="yes" xml:space="preserve">
          <source>Enable only breakpoints in the current module and resume evaluation at the last breakpoint.</source>
          <target state="translated">現在のモジュールのブレークポイントのみを有効にし、最後のブレークポイントで評価を再開します。</target>
        </trans-unit>
        <trans-unit id="226341053ffc8cb7f6b6a76bdb04dd3185b7e9e9" translate="yes" xml:space="preserve">
          <source>Enable only breakpoints in the current top-level binding and resume evaluation at the last breakpoint. Continuation with &lt;a href=&quot;#ghci-cmd-:steplocal&quot;&gt;&lt;code&gt;:steplocal&lt;/code&gt;&lt;/a&gt; is not possible if this last breakpoint was hit by an error (&lt;a href=&quot;#ghc-flag--fbreak-on-error&quot;&gt;&lt;code&gt;-fbreak-on-error&lt;/code&gt;&lt;/a&gt;) or an exception (&lt;a href=&quot;#ghc-flag--fbreak-on-exception&quot;&gt;&lt;code&gt;-fbreak-on-exception&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">現在の最上位バインディングのブレークポイントのみを有効にし、最後のブレークポイントから評価を再開します。この最後のブレークポイントがエラー（&lt;a href=&quot;#ghc-flag--fbreak-on-error&quot;&gt; &lt;code&gt;-fbreak-on-error&lt;/code&gt; &lt;/a&gt;）または例外（&lt;a href=&quot;#ghc-flag--fbreak-on-exception&quot;&gt; &lt;code&gt;-fbreak-on-exception&lt;/code&gt; &lt;/a&gt;）によってヒットされた場合、&lt;a href=&quot;#ghci-cmd-:steplocal&quot;&gt; &lt;code&gt;:steplocal&lt;/code&gt; による&lt;/a&gt;継続は不可能です。</target>
        </trans-unit>
        <trans-unit id="7d8cf1812fdb008144911eca332e9b07e66bcaaf" translate="yes" xml:space="preserve">
          <source>Enable or disable a set of language extensions.</source>
          <target state="translated">言語拡張機能のセットを有効または無効にします。</target>
        </trans-unit>
        <trans-unit id="2c7e3b43e6842c61f6fe6edf51795fa10bd54f78" translate="yes" xml:space="preserve">
          <source>Enable overlapping instances.</source>
          <target state="translated">インスタンスの重複を有効にします。</target>
        </trans-unit>
        <trans-unit id="5e2791d5eaaaccedd90a9949c14b44bbbd93211e" translate="yes" xml:space="preserve">
          <source>Enable overloaded labels.</source>
          <target state="translated">オーバーロードされたラベルを有効にします。</target>
        </trans-unit>
        <trans-unit id="641b0cc24aa13f86fd26dcdc8abcf7da3131460f" translate="yes" xml:space="preserve">
          <source>Enable overloaded list syntax (e.g. desugaring of lists via the &lt;code&gt;IsList&lt;/code&gt; class).</source>
          <target state="translated">オーバーロードされたリスト構文を有効にします（例： &lt;code&gt;IsList&lt;/code&gt; クラスを介したリストのdesugaring ）。</target>
        </trans-unit>
        <trans-unit id="b63255c2a1397689b0ba26aa64b623dabb168284" translate="yes" xml:space="preserve">
          <source>Enable overloaded lists.</source>
          <target state="translated">オーバーロードされたリストを有効にします。</target>
        </trans-unit>
        <trans-unit id="b5bdf703c8f658e2365911c201df7fb2e9394e0e" translate="yes" xml:space="preserve">
          <source>Enable overloaded string literals (e.g. string literals desugared via the &lt;code&gt;IsString&lt;/code&gt; class).</source>
          <target state="translated">オーバーロードされた文字列リテラルを有効にします（例： &lt;code&gt;IsString&lt;/code&gt; クラスを介してデストリングされた文字列リテラル）。</target>
        </trans-unit>
        <trans-unit id="fc4205d1d9f1beedfb1fc204f80752496dd47ca1" translate="yes" xml:space="preserve">
          <source>Enable overloaded string literals.</source>
          <target state="translated">オーバーロードされた文字列リテラルを有効にします。</target>
        </trans-unit>
        <trans-unit id="f1d808f54af51a55c6a6292b94ade473c37c27d9" translate="yes" xml:space="preserve">
          <source>Enable package-qualified imports.</source>
          <target state="translated">パッケージ化されたインポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="55bc462a3b3673fab3a44a5354f3245f1525e80a" translate="yes" xml:space="preserve">
          <source>Enable parallel list comprehensions.</source>
          <target state="translated">並列リスト内包を有効にします。</target>
        </trans-unit>
        <trans-unit id="c274ac88417ae44be8662fc75bda264408b01b7a" translate="yes" xml:space="preserve">
          <source>Enable parsing of multiline commands. A multiline command is prompted for when the current input line contains open layout contexts (see &lt;a href=&quot;#ghci-multiline&quot;&gt;Multiline input&lt;/a&gt;).</source>
          <target state="translated">複数行コマンドの解析を有効にします。現在の入力行に開いているレイアウトコンテキストが含まれている場合、複数行コマンドが要求されます（複数行&lt;a href=&quot;#ghci-multiline&quot;&gt;入力を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="03fc9b03b528176197da9f66dcdc4951b4a029a2" translate="yes" xml:space="preserve">
          <source>Enable partial type signatures.</source>
          <target state="translated">部分的な型の署名を有効にします。</target>
        </trans-unit>
        <trans-unit id="678039de73b40ca6f06a8dfe6603f405d52d83e5" translate="yes" xml:space="preserve">
          <source>Enable pattern synonyms.</source>
          <target state="translated">パターン同義語を有効にします。</target>
        </trans-unit>
        <trans-unit id="f857aa688ce9ab4daed865d31f56108bd493683f" translate="yes" xml:space="preserve">
          <source>Enable postfix operators.</source>
          <target state="translated">postfix演算子を有効にします。</target>
        </trans-unit>
        <trans-unit id="15c1c905af86cff768f0755bc1a68c853ae506ac" translate="yes" xml:space="preserve">
          <source>Enable quasiquotation.</source>
          <target state="translated">準引用を有効にします。</target>
        </trans-unit>
        <trans-unit id="b7a8e551e6ca57f67e46c1da907086b96dcc303a" translate="yes" xml:space="preserve">
          <source>Enable quotation subset of &lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#template-haskell&quot;&gt;テンプレートHaskellの&lt;/a&gt;引用サブセットを有効にします。</target>
        </trans-unit>
        <trans-unit id="ebc1ef5709306d9971dcb9eda2236b99dc7d59a4" translate="yes" xml:space="preserve">
          <source>Enable rank-2 types. Synonym for &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ランク2タイプを有効にします。同義語&lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f13aafaba00d9d488792001162ff3906e6002af5" translate="yes" xml:space="preserve">
          <source>Enable rank-N types. Implied by &lt;a href=&quot;#extension-ImpredicativeTypes&quot;&gt;&lt;code&gt;ImpredicativeTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ランクNタイプを有効にします。&lt;a href=&quot;#extension-ImpredicativeTypes&quot;&gt; &lt;code&gt;ImpredicativeTypes&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="35d201b78f29300ae754944a4864d3e077be53c6" translate="yes" xml:space="preserve">
          <source>Enable rebinding of a variety of usually-built-in operations.</source>
          <target state="translated">通常組み込まれているさまざまな操作の再バインドを可能にします。</target>
        </trans-unit>
        <trans-unit id="eba90e2bda1bc60145ef2cb456c93bafe9dce514" translate="yes" xml:space="preserve">
          <source>Enable record field disambiguation. Implied by &lt;a href=&quot;#extension-RecordWildCards&quot;&gt;&lt;code&gt;RecordWildCards&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レコードフィールドの明確化を有効にします。&lt;a href=&quot;#extension-RecordWildCards&quot;&gt; &lt;code&gt;RecordWildCards&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="c9fffa2ce9dcd6b56aaae36fb207b3163dc5fe35" translate="yes" xml:space="preserve">
          <source>Enable record puns.</source>
          <target state="translated">ダジャレの記録を有効にします。</target>
        </trans-unit>
        <trans-unit id="08ed55fa823e92ab0f2dd6ff3b40e3583eb7b86a" translate="yes" xml:space="preserve">
          <source>Enable record wildcards. Implies &lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt;&lt;code&gt;DisambiguateRecordFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レコードのワイルドカードを有効にします。意味&lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt; &lt;code&gt;DisambiguateRecordFields&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af1aee07cc13edf44a2f7485797c3d50700fceab" translate="yes" xml:space="preserve">
          <source>Enable recursive do (mdo) notation.</source>
          <target state="translated">再帰的な do (mdo)記法を有効にします。</target>
        </trans-unit>
        <trans-unit id="0915be3c2ddaf49145787e8ab924f6a78739c9bf" translate="yes" xml:space="preserve">
          <source>Enable role annotations.</source>
          <target state="translated">ロールアノテーションを有効にします。</target>
        </trans-unit>
        <trans-unit id="019d98d3d4770ef574e87f03f5cdcae2b6cb8d5a" translate="yes" xml:space="preserve">
          <source>Enable runtime event tracing</source>
          <target state="translated">ランタイムイベントトレースを有効にする</target>
        </trans-unit>
        <trans-unit id="1d1749d20b52484ae18ca58af95d49ebe1d925ca" translate="yes" xml:space="preserve">
          <source>Enable shortcutting on assembly. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O2&quot;&gt;&lt;code&gt;-O2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アセンブリのショートカットを有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O2&quot;&gt; &lt;code&gt;-O2&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="9668de77754998933dd077a21972cda44cd10687" translate="yes" xml:space="preserve">
          <source>Enable standalone deriving.</source>
          <target state="translated">スタンドアロン導出を有効にします。</target>
        </trans-unit>
        <trans-unit id="2482a8aa9f2b1686343623a30bc0aeac1d9db536" translate="yes" xml:space="preserve">
          <source>Enable static pointers.</source>
          <target state="translated">静的ポインタを有効にします。</target>
        </trans-unit>
        <trans-unit id="08f61575d4970021c256263b7054dabd22fe0c95" translate="yes" xml:space="preserve">
          <source>Enable support for &amp;lsquo;fractional&amp;rsquo; integer literals.</source>
          <target state="translated">「分数」整数リテラルのサポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="88f7cfee7e3ae047f18724e5731359b05036df6d" translate="yes" xml:space="preserve">
          <source>Enable support for 'fractional' integer literals.</source>
          <target state="translated">小数」整数リテラルのサポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="2f1c5860147458c9c411dce48e0a991123369a9a" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;a href=&quot;#hex-float-literals&quot;&gt;hexadecimal floating point literals&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#hex-float-literals&quot;&gt;16進浮動小数点リテラルの&lt;/a&gt;サポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="f8c3de3c7f853349418e080d1b858062c189cb63" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;a href=&quot;#numeric-underscores&quot;&gt;numeric underscores&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numeric-underscores&quot;&gt;数値のアンダースコアの&lt;/a&gt;サポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="667eff18cad8e297ca4abf33aa62556fdeeac7fa" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;code&gt;n+k&lt;/code&gt; patterns. Implied by &lt;a href=&quot;#extension-Haskell98&quot;&gt;&lt;code&gt;Haskell98&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;n+k&lt;/code&gt; パターンのサポートを有効にします。&lt;a href=&quot;#extension-Haskell98&quot;&gt; &lt;code&gt;Haskell98&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="9a1c68e2c3edf441d78bf352f8acf0ee0a7ac228" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;code&gt;n+k&lt;/code&gt; patterns. Implied by &lt;code&gt;Haskell98&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n+k&lt;/code&gt; パターンのサポートを有効にします。 &lt;code&gt;Haskell98&lt;/code&gt; によって暗示される。</target>
        </trans-unit>
        <trans-unit id="7649e181db1c35c42e859bc3fa4b856831e31805" translate="yes" xml:space="preserve">
          <source>Enable support for binary literals.</source>
          <target state="translated">バイナリリテラルのサポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="415d32b3d2f203f6b845a097cdb0d0d61f76cc62" translate="yes" xml:space="preserve">
          <source>Enable support for negative literals.</source>
          <target state="translated">ネガティブリテラルのサポートを有効にします。</target>
        </trans-unit>
        <trans-unit id="189de576dfb6ff1d6f6ad811522267b7af45de77" translate="yes" xml:space="preserve">
          <source>Enable the &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Safe mode.</source>
          <target state="translated">&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Safeモードを有効にします。</target>
        </trans-unit>
        <trans-unit id="25743af593811888b0518508cbca8eade3f31a83" translate="yes" xml:space="preserve">
          <source>Enable the &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Trustworthy mode.</source>
          <target state="translated">&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; Trustworthyモードを有効にします。</target>
        </trans-unit>
        <trans-unit id="80e923385798897248e04ccad5edca39571e9258" translate="yes" xml:space="preserve">
          <source>Enable the C preprocessor.</source>
          <target state="translated">Cプリプロセッサを有効にします。</target>
        </trans-unit>
        <trans-unit id="dc9abd71cf353e243958088900a198f5ed332904" translate="yes" xml:space="preserve">
          <source>Enable the CAPI calling convention.</source>
          <target state="translated">CAPI 呼び出し規約を有効にします。</target>
        </trans-unit>
        <trans-unit id="f7495ced2060bbe81be5403148d082f6169f2708" translate="yes" xml:space="preserve">
          <source>Enable the concurrent mark-and-sweep garbage collector for old generation collectors. Typically GHC uses a stop-the-world copying garbage collector for all generations. This can cause long pauses in execution during major garbage collections. &lt;a href=&quot;#rts-flag---nonmoving-gc&quot;&gt;&lt;code&gt;--nonmoving-gc&lt;/code&gt;&lt;/a&gt; enables the use of a concurrent mark-and-sweep garbage collector for oldest generation collections. Under this collection strategy oldest-generation garbage collection can proceed concurrently with mutation.</source>
          <target state="translated">古い世代のコレクターに対して、マークアンドスイープの同時ガベージコレクターを有効にします。通常、GHCは、すべての世代にストップザワールドコピーガベージコレクターを使用します。これにより、主要なガベージコレクション中に実行が長時間停止する可能性があります。&lt;a href=&quot;#rts-flag---nonmoving-gc&quot;&gt; &lt;code&gt;--nonmoving-gc&lt;/code&gt; &lt;/a&gt;を使用すると、最も古い世代のコレクションにマークアンドスイープガベージコレクタを同時に使用できます。この収集戦略では、最も古い世代のガベージコレクションを突然変異と同時に進めることができます。</target>
        </trans-unit>
        <trans-unit id="67ee8d0579fc9a4c046a67aa96e53c7ab16186e4" translate="yes" xml:space="preserve">
          <source>Enable the use of Unicode characters in place of their equivalent ASCII sequences.</source>
          <target state="translated">等価の ASCII シーケンスの代わりに Unicode 文字を使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="2137854175d16983fc62d36f41242c31b90c4a78" translate="yes" xml:space="preserve">
          <source>Enable the use of a &lt;a href=&quot;phases#pre-processor&quot;&gt;pre-processor&lt;/a&gt; (set with &lt;code&gt;-pgmF ⟨cmd⟩&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;phases#pre-processor&quot;&gt;プリプロセッサーの&lt;/a&gt;使用を有効にします（ &lt;code&gt;-pgmF ⟨cmd⟩&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="749d1c5007a0d54b14b5649235afad1ebddb11aa" translate="yes" xml:space="preserve">
          <source>Enable the use of newtypes over types with non-lifted runtime representations.</source>
          <target state="translated">リフテッドされていないランタイム表現を持つ型の上にnewtypesを使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="c650956f9c6e6cf54a39137e8948643662ea120b" translate="yes" xml:space="preserve">
          <source>Enable the use of un-parenthesized negative numeric literals.</source>
          <target state="translated">括弧なしの負の数値リテラルの使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="c45610b771fe1f9a6fb3b1aacc4532670857c5e2" translate="yes" xml:space="preserve">
          <source>Enable the use of unboxed sum syntax.</source>
          <target state="translated">箱なし和構文の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="03679c5ccfe3358d6087ae69e2701d4ca5a4c2d2" translate="yes" xml:space="preserve">
          <source>Enable the use of unboxed tuple syntax.</source>
          <target state="translated">アンボックス化されたタプル構文の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="5a2b1709df1369d2b6be5f52fd59db2a6a7be699" translate="yes" xml:space="preserve">
          <source>Enable the worker-wrapper transformation after a strictness analysis pass. Implied by &lt;a href=&quot;#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;, and by &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt;&lt;code&gt;-fstrictness&lt;/code&gt;&lt;/a&gt;. Disabled by &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt;&lt;code&gt;-fno-strictness&lt;/code&gt;&lt;/a&gt;. Enabling &lt;a href=&quot;#ghc-flag--fworker-wrapper&quot;&gt;&lt;code&gt;-fworker-wrapper&lt;/code&gt;&lt;/a&gt; while strictness analysis is disabled (by &lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt;&lt;code&gt;-fno-strictness&lt;/code&gt;&lt;/a&gt;) has no effect.</source>
          <target state="translated">厳密性分析に合格した後、ワーカーラッパー変換を有効にします。暗黙&lt;a href=&quot;#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;、およびによって&lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt; &lt;code&gt;-fstrictness&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt; &lt;code&gt;-fno-strictness&lt;/code&gt; &lt;/a&gt;によって無効にされます。厳密性分析が無効になっているときに（&lt;a href=&quot;#ghc-flag--fstrictness&quot;&gt; &lt;code&gt;-fno-strictness&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#ghc-flag--fworker-wrapper&quot;&gt; &lt;code&gt;-fworker-wrapper&lt;/code&gt; &lt;/a&gt;を有効にしても、効果はありません。</target>
        </trans-unit>
        <trans-unit id="fa2a2dda0b31f9f928c6d58570c000540a18e432" translate="yes" xml:space="preserve">
          <source>Enable the worker-wrapper transformation.</source>
          <target state="translated">ワーカーラッパー変換を有効にします。</target>
        </trans-unit>
        <trans-unit id="9f93dd5661b6acbc1e51b9f475abea6695396ac8" translate="yes" xml:space="preserve">
          <source>Enable ticky-ticky profiling.</source>
          <target state="translated">チクチクするプロファイリングを有効にします。</target>
        </trans-unit>
        <trans-unit id="48ddd56d64e06a3b8ce12335f20c3fee95537562" translate="yes" xml:space="preserve">
          <source>Enable tuple sections.</source>
          <target state="translated">タプルセクションを有効にします。</target>
        </trans-unit>
        <trans-unit id="6dcf335b3bf4cfebf060e12a3add25aaf101fa39" translate="yes" xml:space="preserve">
          <source>Enable type application syntax in terms and types.</source>
          <target state="translated">用語とタイプでタイプアプリケーションの構文を有効にします。</target>
        </trans-unit>
        <trans-unit id="4a7ac86d0b32a41f907046e6e8c4f6bb355da9c9" translate="yes" xml:space="preserve">
          <source>Enable type families. Implies &lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt;&lt;code&gt;ExplicitNamespaces&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt;&lt;code&gt;MonoLocalBinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイプファミリーを有効にします。意味&lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt; &lt;code&gt;ExplicitNamespaces&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#extension-KindSignatures&quot;&gt; &lt;code&gt;KindSignatures&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt; &lt;code&gt;MonoLocalBinds&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f131239dcaeae55c90482a0ebe8d8ffa4c94719" translate="yes" xml:space="preserve">
          <source>Enable type operators. Implies &lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt;&lt;code&gt;ExplicitNamespaces&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイプ演算子を有効にします。&lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt; &lt;code&gt;ExplicitNamespaces&lt;/code&gt; を&lt;/a&gt;意味します。</target>
        </trans-unit>
        <trans-unit id="02d25617d434cac48bef1bb71b64ea74a3dab539" translate="yes" xml:space="preserve">
          <source>Enable type synonyms in instance heads. Implied by &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インスタンスヘッドで型の同義語を有効にします。&lt;a href=&quot;#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="2f256112b76d0ff73c0778a50bf9f7f749fa9546" translate="yes" xml:space="preserve">
          <source>Enable unboxed sums.</source>
          <target state="translated">箱なしの合計を有効にします。</target>
        </trans-unit>
        <trans-unit id="8950dbd6753cb55c68f3b36b9f54468dae288119" translate="yes" xml:space="preserve">
          <source>Enable undecidable instances.</source>
          <target state="translated">決定不可能なインスタンスを有効にします。</target>
        </trans-unit>
        <trans-unit id="86a271d0c6de75affc7b29be9c1a8526a871bbe4" translate="yes" xml:space="preserve">
          <source>Enable unicode syntax.</source>
          <target state="translated">ユニコード構文を有効にします。</target>
        </trans-unit>
        <trans-unit id="6ca85839b62537fed50de348574384ebdebe5e8f" translate="yes" xml:space="preserve">
          <source>Enable unlifted FFI types</source>
          <target state="translated">リフトされていないFFIタイプを有効にする</target>
        </trans-unit>
        <trans-unit id="867577b46e27e5ce64e3429f2edb8849a716ea71" translate="yes" xml:space="preserve">
          <source>Enable unlifted newtypes.</source>
          <target state="translated">アンリフトされていないニュータイプを有効にします。</target>
        </trans-unit>
        <trans-unit id="a3fc6982af8002e906b1fc895fc95f73b9bd1210" translate="yes" xml:space="preserve">
          <source>Enable use of &lt;code&gt;n+k&lt;/code&gt; patterns.</source>
          <target state="translated">&lt;code&gt;n+k&lt;/code&gt; パターンの使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="c3e458ca0803a00d717f91c063a373430c0b5912" translate="yes" xml:space="preserve">
          <source>Enable use of explicit namespaces in module export lists.</source>
          <target state="translated">モジュールのエクスポートリストで明示的な名前空間の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="368969223f79a3c9857720fbb2b722cc770acb6b" translate="yes" xml:space="preserve">
          <source>Enable use of the &lt;code&gt;#foo&lt;/code&gt; overloaded label syntax.</source>
          <target state="translated">&lt;code&gt;#foo&lt;/code&gt; オーバーロードされたラベル構文の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="17796a3400f2ffd4a892cd990173e9f4b6f2b2fd" translate="yes" xml:space="preserve">
          <source>Enable using the keyword &lt;code&gt;type&lt;/code&gt; to specify the namespace of entries in imports and exports (&lt;a href=&quot;#explicit-namespaces&quot;&gt;Explicit namespaces in import/export&lt;/a&gt;). Implied by &lt;a href=&quot;#extension-TypeOperators&quot;&gt;&lt;code&gt;TypeOperators&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-TypeFamilies&quot;&gt;&lt;code&gt;TypeFamilies&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キーワード &lt;code&gt;type&lt;/code&gt; を使用してインポートとエクスポートのエントリの名前空間を指定できるようにします（&lt;a href=&quot;#explicit-namespaces&quot;&gt;import / exportの明示的な名前空間&lt;/a&gt;）。&lt;a href=&quot;#extension-TypeOperators&quot;&gt; &lt;code&gt;TypeOperators&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#extension-TypeFamilies&quot;&gt; &lt;code&gt;TypeFamilies&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="ee2d0b320ebd6756514d2fec9373813030807f6e" translate="yes" xml:space="preserve">
          <source>Enable view patterns.</source>
          <target state="translated">表示パターンを有効にします。</target>
        </trans-unit>
        <trans-unit id="2f3ba31beddd336417507be0850e6e16844e3291" translate="yes" xml:space="preserve">
          <source>EnableEcho</source>
          <target state="translated">EnableEcho</target>
        </trans-unit>
        <trans-unit id="6b864fdbf8dc7330bc94244b55316332116a3627" translate="yes" xml:space="preserve">
          <source>EnableParity</source>
          <target state="translated">EnableParity</target>
        </trans-unit>
        <trans-unit id="9a6462b0bc14cae13883ef4d3fcb336fa2412048" translate="yes" xml:space="preserve">
          <source>Enabled by &lt;a href=&quot;#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt;, GHC supports explicit kind quantification, as in these examples:</source>
          <target state="translated">&lt;a href=&quot;#extension-PolyKinds&quot;&gt; &lt;code&gt;PolyKinds&lt;/code&gt; &lt;/a&gt;によって有効にされたGHCは、次の例のように、明示的な種類の数量化をサポートします。</target>
        </trans-unit>
        <trans-unit id="570db5bed1f35fb2ef71b63b8fc35d70e100a1c9" translate="yes" xml:space="preserve">
          <source>Enables an alternative algorithm for choosing where to use &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; in conjunction with the &lt;code&gt;ApplicativeDo&lt;/code&gt; language extension. This algorithm always finds the optimal solution, but it is expensive: &lt;code&gt;O(n^3)&lt;/code&gt;, so this option can lead to long compile times when there are very large &lt;code&gt;do&lt;/code&gt; expressions (over 100 statements). The default &lt;code&gt;ApplicativeDo&lt;/code&gt; algorithm is &lt;code&gt;O(n^2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ApplicativeDo&lt;/code&gt; 言語拡張と共に &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; を使用する場所を選択するための代替アルゴリズムを有効にします。このアルゴリズムは常に最適なソリューションを見つけますが、コストが高くなります： &lt;code&gt;O(n^3)&lt;/code&gt; なので、このオプションは、非常に大きな &lt;code&gt;do&lt;/code&gt; 式（100を超えるステートメント）がある場合にコンパイル時間を長くする可能性があります。デフォルトの &lt;code&gt;ApplicativeDo&lt;/code&gt; アルゴリズムは &lt;code&gt;O(n^2)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9260d5891afd6ba2346cc006c3967644a1da15f" translate="yes" xml:space="preserve">
          <source>Enables deriving strategies.</source>
          <target state="translated">戦略を導き出すことができます。</target>
        </trans-unit>
        <trans-unit id="4f809060a13ee7b99539f37d1ede8c8ded1cb5d3" translate="yes" xml:space="preserve">
          <source>Enables exitification optimisation. Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">終了の最適化を有効にします。&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;によって暗示されます。</target>
        </trans-unit>
        <trans-unit id="ac714ded291c5a5bdf8b9427e8d106e357ec5204" translate="yes" xml:space="preserve">
          <source>Enables the allocation counter to be treated as a limit for the current thread. When the allocation limit is enabled, if the allocation counter counts down below zero, the thread will be sent the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; asynchronous exception. When this happens, the counter is reinitialised (by default to 100K, but tunable with the &lt;code&gt;+RTS -xq&lt;/code&gt; option) so that it can handle the exception and perform any necessary clean up. If it exhausts this additional allowance, another &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is sent, and so forth. Like other asynchronous exceptions, the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is deferred while the thread is inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or an exception handler in &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">割り当てカウンターを現在のスレッドの制限として処理できるようにします。割り当て制限が有効になっている場合、割り当てカウンターがゼロ未満でカウントダウンすると、スレッドに &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 非同期例外が送信されます。これが発生すると、カウンターが再初期化され（デフォルトでは100Kですが、 &lt;code&gt;+RTS -xq&lt;/code&gt; オプションで調整可能）、例外を処理して必要なクリーンアップを実行できます。この追加の許容値を使い果たすと、別の &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 例外が送信されます。他の非同期例外と同様に、 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 例外は、スレッドが &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 内にあるか、 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; の例外ハンドラーにある間は延期されます。</target>
        </trans-unit>
        <trans-unit id="b3e75c6bf31a91bd7e99fda469599bdbd9828868" translate="yes" xml:space="preserve">
          <source>Enables the allocation counter to be treated as a limit for the current thread. When the allocation limit is enabled, if the allocation counter counts down below zero, the thread will be sent the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; asynchronous exception. When this happens, the counter is reinitialised (by default to 100K, but tunable with the &lt;code&gt;+RTS -xq&lt;/code&gt; option) so that it can handle the exception and perform any necessary clean up. If it exhausts this additional allowance, another &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is sent, and so forth. Like other asynchronous exceptions, the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; exception is deferred while the thread is inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or an exception handler in &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">現在のスレッドの制限として扱われる割り当てカウンターを有効にします。割り当て制限が有効になっている場合、割り当てカウンターがゼロ未満にカウントダウンすると、スレッドに &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 非同期例外が送信されます。これが発生すると、カウンターは再初期化され（デフォルトでは100Kですが、 &lt;code&gt;+RTS -xq&lt;/code&gt; オプションで調整可能）、例外を処理して必要なクリーンアップを実行できます。この追加の許容量を使い果たした場合、別の &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 例外が送信されます。他の非同期例外と同様に、 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:AllocationLimitExceeded&quot;&gt;AllocationLimitExceeded&lt;/a&gt;&lt;/code&gt; 例外は、スレッドが &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 内にあるか、 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; の例外ハンドラーにある間は延期されます。</target>
        </trans-unit>
        <trans-unit id="c451aa055a30393b99ffcf8ecd4bd4a1c53d6f21" translate="yes" xml:space="preserve">
          <source>Enables the common block elimination optimisation in the code generator. This optimisation attempts to find identical Cmm blocks and eliminate the duplicates.</source>
          <target state="translated">コード ジェネレーターの共通ブロック消去最適化を有効にします。この最適化は、同一のCmmブロックを見つけ、重複を排除しようとします。</target>
        </trans-unit>
        <trans-unit id="b8754a3b23474feb34e9367779a442f21260173e" translate="yes" xml:space="preserve">
          <source>Enables the common-sub-expression elimination optimisation on the STG intermediate language, where it is able to common up some subexpressions that differ in their types, but not their representation.</source>
          <target state="translated">STG 中間言語で共通部分式の除去を最適化できるようにします。この場合、型が異なるいくつかの部分式を共通化できますが、表現は異なります。</target>
        </trans-unit>
        <trans-unit id="15a6626910e73e8446327a51cfa672d3f5b20c56" translate="yes" xml:space="preserve">
          <source>Enables the common-sub-expression elimination optimisation on the STG intermediate language, where it is able to common up some subexpressions that differ in their types, but not their represetation.</source>
          <target state="translated">STG中間言語で共通部分式の除去を最適化できるようにします。これにより、型が異なるいくつかの部分式を共通化することができますが、レプリゼンセーションはできません。</target>
        </trans-unit>
        <trans-unit id="62ecd2ee2e18345e7bbf27c9add3700b4a4cfa3a" translate="yes" xml:space="preserve">
          <source>Enables the common-sub-expression elimination optimisation. Switching this off can be useful if you have some &lt;code&gt;unsafePerformIO&lt;/code&gt; expressions that you don&amp;rsquo;t want commoned-up.</source>
          <target state="translated">共通部分式除去の最適化を有効にします。これをオフに切り替えると、共通化したくない &lt;code&gt;unsafePerformIO&lt;/code&gt; 式がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="1dacc415c3e39c6361985f4ee72cac6e04e0bc70" translate="yes" xml:space="preserve">
          <source>Enables the floating of exit paths out of recursive functions.</source>
          <target state="translated">再帰関数の出口パスのフローティングを有効にします。</target>
        </trans-unit>
        <trans-unit id="a85b9ae8246d563a134d4be7b7f7ad268156d1cb" translate="yes" xml:space="preserve">
          <source>Enables the late lambda lifting optimisation on the STG intermediate language. This selectively lifts local functions to top-level by converting free variables into function parameters.</source>
          <target state="translated">STG中間言語で後期ラムダリフティング最適化を有効にします。これは、自由変数を関数パラメータに変換することで、ローカル関数を選択的にトップレベルに持ち上げます。</target>
        </trans-unit>
        <trans-unit id="ce87742ac7c2e01074dc14bd4196d2029c039582" translate="yes" xml:space="preserve">
          <source>Enables the sinking pass in the code generator. This optimisation attempts to find identical Cmm blocks and eliminate the duplicates attempts to move variable bindings closer to their usage sites. It also inlines simple expressions like literals or registers.</source>
          <target state="translated">コードジェネレーターのシンキングパスを有効にします。この最適化は、同一のCmmブロックを見つけて重複を排除し、変数バインディングを使用場所に近づけようとします。また、リテラルやレジスタのような単純な式をインライン化します。</target>
        </trans-unit>
        <trans-unit id="320405bad159b2f180b9746d6564118b20760520" translate="yes" xml:space="preserve">
          <source>Enables the use of the hash character (&lt;code&gt;#&lt;/code&gt;) as an identifier suffix.</source>
          <target state="translated">識別子の接尾辞としてハッシュ文字（ &lt;code&gt;#&lt;/code&gt; ）の使用を有効にします。</target>
        </trans-unit>
        <trans-unit id="e1a3dc388b226a3761de91a45ee12fa69de755b4" translate="yes" xml:space="preserve">
          <source>Enables warnings when the compiler encounters a &lt;code&gt;-W...&lt;/code&gt; flag that is not recognised.</source>
          <target state="translated">コンパイラが認識できない &lt;code&gt;-W...&lt;/code&gt; フラグを検出したときに警告を有効にします。</target>
        </trans-unit>
        <trans-unit id="d7b2a7511f8a93a2df5ff635ed4d40b97ea4e027" translate="yes" xml:space="preserve">
          <source>Enabling these options is the &lt;em&gt;only&lt;/em&gt; effect of &lt;code&gt;-fglasgow-exts&lt;/code&gt;. We are trying to move away from this portmanteau flag, and towards enabling features individually.</source>
          <target state="translated">これらのオプションを有効にすることは、 &lt;code&gt;-fglasgow-exts&lt;/code&gt; の&lt;em&gt;唯一の&lt;/em&gt;効果です。このportmanteauフラグから離れて、機能を個別に有効にする方向に向かっています。</target>
        </trans-unit>
        <trans-unit id="c59054451c27c7c8382d2bfe7777c9c79c5e1784" translate="yes" xml:space="preserve">
          <source>EnclosingMark</source>
          <target state="translated">EnclosingMark</target>
        </trans-unit>
        <trans-unit id="95e1c3c906cb41877e2dbf888df31b873a46619f" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; をネイティブホスト順およびホストエンディアンでエンコードします。</target>
        </trans-unit>
        <trans-unit id="8effb4dad1529c8c374a2ec7483d9cb11c1a1234" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; using 4 nibbles.</source>
          <target state="translated">4ニブルを使用して &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; をエンコードします。</target>
        </trans-unit>
        <trans-unit id="984671271f38042fd930198f3adbbcdd613bdf05" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; をネイティブホスト順およびホストエンディアンでエンコードします。</target>
        </trans-unit>
        <trans-unit id="5154b63d465f103690baa0ce617eef4b46780832" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; using 8 nibbles.</source>
          <target state="translated">8ニブルを使用して &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; をエンコードします。</target>
        </trans-unit>
        <trans-unit id="772213176284292f69eab1d53df9e417ea223f31" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; をネイティブホスト順およびホストエンディアンでエンコードします。</target>
        </trans-unit>
        <trans-unit id="e612065ea567739afa43a1778229e7adf4282157" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; using 16 nibbles.</source>
          <target state="translated">16ニブルを使用して &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; をエンコードします。</target>
        </trans-unit>
        <trans-unit id="a177299d2260ce8a6bdf4a2856599c60d1e24d4b" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; using 2 nibbles (hexadecimal digits).</source>
          <target state="translated">2ニブル（16進数）を使用して &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; をエンコードします。</target>
        </trans-unit>
        <trans-unit id="f70084aa63a8fdb7c33bdd336b6a6e5fee286c38" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; をビッグエンディアン形式でエンコードします。</target>
        </trans-unit>
        <trans-unit id="4e58ee0fcd9fbccd93c7c349daaf847fc4d73916" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in little endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; をリトルエンディアン形式でエンコードします。</target>
        </trans-unit>
        <trans-unit id="1917737b38a7a19c941c871a3e1ed45403953ba5" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; in native host order and host endianness.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; をネイティブホスト順およびホストエンディアンでエンコードします。</target>
        </trans-unit>
        <trans-unit id="3c547bac5eba32200290503c5236ff6fc0056c75" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using 4 nibbles.</source>
          <target state="translated">4ニブルを使用して &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; をエンコードします。</target>
        </trans-unit>
        <trans-unit id="0a1fee47953316027c274cda8e1e2e455d19e93a" translate="yes" xml:space="preserve">
          <source>Encode a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; in big endian format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; をビッグエンディアン形式でエンコードします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
