<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="05e6432034ef916c839ed453942007df9bbc7e35" translate="yes" xml:space="preserve">
          <source>If a relation name corresponds to multiple links, use an array to represent them.</source>
          <target state="translated">リレーション名が複数のリンクに対応する場合は、配列を使って表現します。</target>
        </trans-unit>
        <trans-unit id="07fc1fbe30461163a4d7edb3d7b9c41f2deb4130" translate="yes" xml:space="preserve">
          <source>If a relation query does not need modification, you may use the relation name as the array value.</source>
          <target state="translated">リレーションクエリを変更する必要がない場合は、リレーション名を配列の値として使用することができます。</target>
        </trans-unit>
        <trans-unit id="2893ac46b4db20dcedcb8dbcb59c152f70a87929" translate="yes" xml:space="preserve">
          <source>If a table name is given as &lt;code&gt;{{%TableName}}&lt;/code&gt;, then the percentage character &lt;code&gt;%&lt;/code&gt; will be replaced with the table prefix. For example, &lt;code&gt;{{%post}}&lt;/code&gt; becomes &lt;code&gt;{{tbl_post}}&lt;/code&gt;. The brackets around the table name are used for &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;quoting in an SQL query&lt;/a&gt;.</source>
          <target state="translated">テーブル名が &lt;code&gt;{{%TableName}}&lt;/code&gt; として指定されている場合、パーセント文字 &lt;code&gt;%&lt;/code&gt; はテーブルプレフィックスに置き換えられます。たとえば、 &lt;code&gt;{{%post}}&lt;/code&gt; は &lt;code&gt;{{tbl_post}}&lt;/code&gt; になります。テーブル名を囲む角括弧&lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;は、SQLクエリ&lt;/a&gt;での引用に使用されます。</target>
        </trans-unit>
        <trans-unit id="223600ba55b08146154a14f8154fbb1bbc5531c7" translate="yes" xml:space="preserve">
          <source>If a translation is not found, a &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt; event will be triggered.</source>
          <target state="translated">翻訳が見つからない場合、&lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt;イベントがトリガーされます。</target>
        </trans-unit>
        <trans-unit id="38ce3549db44a118e6b64c9cfe24960da7174370" translate="yes" xml:space="preserve">
          <source>If a type cannot be found in &lt;a href=&quot;yii-db-querybuilder#%24typeMap-detail&quot;&gt;$typeMap&lt;/a&gt;, it will be returned without any change.</source>
          <target state="translated">&lt;a href=&quot;yii-db-querybuilder#%24typeMap-detail&quot;&gt;$ typeMap&lt;/a&gt;で型が見つからない場合は、何も変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="95b2951225cd70cf76423e2a351e9210a631d915" translate="yes" xml:space="preserve">
          <source>If a value is &lt;code&gt;null&lt;/code&gt;, the corresponding attribute will not be rendered.</source>
          <target state="translated">値が &lt;code&gt;null&lt;/code&gt; の場合、対応する属性はレンダリングされません。</target>
        </trans-unit>
        <trans-unit id="3c08e7ad31eb045621b72a7b1ab5f79522b335b2" translate="yes" xml:space="preserve">
          <source>If a view is rendered within another view, the directory containing the other view file will be prefixed to the new view name to form the actual view file path. For example, &lt;code&gt;item&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/post/item.php&lt;/code&gt; if it is being rendered in the view &lt;code&gt;@app/views/post/index.php&lt;/code&gt;.</source>
          <target state="translated">ビューが別のビュー内でレンダリングされる場合、実際のビューファイルパスを形成するために、他のビューファイルを含むディレクトリの先頭に新しいビュー名が付けられます。たとえば、 &lt;code&gt;item&lt;/code&gt; がビュー &lt;code&gt;@app/views/post/index.php&lt;/code&gt; にレンダリングされている場合、アイテムは &lt;code&gt;@app/views/post/item.php&lt;/code&gt; 解決されます。</target>
        </trans-unit>
        <trans-unit id="a742dbe317b1b848b9f3c6ded469a88e7aa150e3" translate="yes" xml:space="preserve">
          <source>If access is granted</source>
          <target state="translated">アクセスが許可されている場合</target>
        </trans-unit>
        <trans-unit id="42e7d85c50bf4c4991b2a8033db2a13ae6a18d3e" translate="yes" xml:space="preserve">
          <source>If additional transformations are required or the way of getting value is complex, second argument could be specified as an anonymous function:</source>
          <target state="translated">追加の変換が必要な場合や、値の取得方法が複雑な場合は、第2引数に匿名関数を指定することができます。</target>
        </trans-unit>
        <trans-unit id="b9ceff565c106def18cbb9d250587250aa578794" translate="yes" xml:space="preserve">
          <source>If address is already in use</source>
          <target state="translated">アドレスが既に使用されている場合</target>
        </trans-unit>
        <trans-unit id="6ce5090ec8349b3b513dc3d84a59303a02cb6be7" translate="yes" xml:space="preserve">
          <source>If all the CRUD operations are managed together then it's a good idea to use a single permission, like &lt;code&gt;managePost&lt;/code&gt;, and check it in &lt;a href=&quot;yii-web-controller#beforeAction()-detail&quot;&gt;yii\web\Controller::beforeAction()&lt;/a&gt;.</source>
          <target state="translated">すべてのCRUD操作が一緒に管理される場合は、 &lt;code&gt;managePost&lt;/code&gt; などの単一の権限を使用して、&lt;a href=&quot;yii-web-controller#beforeAction()-detail&quot;&gt;yii \ web \ Controller :: beforeAction（）で&lt;/a&gt;確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6b2e25615ef256ccccfd5d502967e33985ff1a0d" translate="yes" xml:space="preserve">
          <source>If all you need is plain text then escaping is as easy as the following:</source>
          <target state="translated">必要なのがプレーンテキストだけならば、エスケープは以下のように簡単です。</target>
        </trans-unit>
        <trans-unit id="2c3dee110b5c42fa6eb43d86ddbcfcf0a649fcf2" translate="yes" xml:space="preserve">
          <source>If an attribute fails the validation, the method/function should call &lt;a href=&quot;yii-base-model#addError()-detail&quot;&gt;yii\base\Model::addError()&lt;/a&gt; to save the error message in the model so that it can be retrieved back later to present to end users.</source>
          <target state="translated">属性が検証に失敗した場合、メソッド/関数は&lt;a href=&quot;yii-base-model#addError()-detail&quot;&gt;yii \ base \ Model :: addError（）&lt;/a&gt;を呼び出してエラーメッセージをモデルに保存し、後で取得してエンドユーザーに提示できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="997fe1e2325ed5be0a8af05fc54f08dc290b7b4a" translate="yes" xml:space="preserve">
          <source>If an attribute value is an instance of &lt;a href=&quot;yii-db-activerecordinterface&quot;&gt;yii\db\ActiveRecordInterface&lt;/a&gt; or an array of such instances, the primary value(s) of the AR instance(s) will be returned instead.</source>
          <target state="translated">属性値が&lt;a href=&quot;yii-db-activerecordinterface&quot;&gt;yii \ db \ ActiveRecordInterfaceの&lt;/a&gt;インスタンスまたはそのようなインスタンスの配列である場合、ARインスタンスのプライマリ値が代わりに返されます。</target>
        </trans-unit>
        <trans-unit id="7d137b7f63db74e30d1896ed425bcda906a256fd" translate="yes" xml:space="preserve">
          <source>If an extension does not have a class autoloader but follows the &lt;a href=&quot;http://www.php-fig.org/psr/psr-4/&quot;&gt;PSR-4 standard&lt;/a&gt;, you may use the class autoloader provided by Yii to autoload the extension classes. All you need to do is just to declare a &lt;a href=&quot;guide-concept-aliases#defining-aliases&quot;&gt;root alias&lt;/a&gt; for the extension root directory. For example, assuming you have installed an extension in the directory &lt;code&gt;vendor/mycompany/myext&lt;/code&gt;, and the extension classes are under the &lt;code&gt;myext&lt;/code&gt; namespace, then you can include the following code in your application configuration:</source>
          <target state="translated">拡張機能にクラスオートローダーがなく、&lt;a href=&quot;http://www.php-fig.org/psr/psr-4/&quot;&gt;PSR-4標準に準拠&lt;/a&gt;している場合は、Yiiが提供するクラスオートローダーを使用して、拡張機能クラスを自動ロードできます。必要なのは、拡張機能のルートディレクトリの&lt;a href=&quot;guide-concept-aliases#defining-aliases&quot;&gt;ルートエイリアス&lt;/a&gt;を宣言することだけです。たとえば、ディレクトリ &lt;code&gt;vendor/mycompany/myext&lt;/code&gt; に拡張機能をインストールし、拡張機能クラスが &lt;code&gt;myext&lt;/code&gt; 名前空間の下にあると想定すると、アプリケーション構成に次のコードを含めることができます。</target>
        </trans-unit>
        <trans-unit id="c25ebc5293d0e152bf2e20dfb7ff919b2c15aa1a" translate="yes" xml:space="preserve">
          <source>If any of the above steps resolves into a controller, it is returned together with the rest part of the route which will be treated as the action ID. Otherwise, &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">上記のステップのいずれかがコントローラーに解決される場合、それはアクションIDとして扱われるルートの残りの部分とともに返されます。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3ec5aa866b1b32b89aad2e953478986516e2daf4" translate="yes" xml:space="preserve">
          <source>If any of the filters cancel the action execution, the filters (both pre-filters and post-filters) after it will not be applied.</source>
          <target state="translated">いずれかのフィルターがアクションの実行をキャンセルした場合、それ以降のフィルター(プリフィルターとポストフィルターの両方)は適用されません。</target>
        </trans-unit>
        <trans-unit id="a7a45bbff22367b061c745ed6d5e7b26e6210ab0" translate="yes" xml:space="preserve">
          <source>If array - request data, otherwise - request content.</source>
          <target state="translated">配列の場合-リクエストデータ、そうでない場合-リクエスト内容。</target>
        </trans-unit>
        <trans-unit id="f62c088ec033fbb93dcb286068f7ebdb02e96cf9" translate="yes" xml:space="preserve">
          <source>If array given, each element of it will be processed.</source>
          <target state="translated">配列が与えられた場合は、その各要素が処理されます。</target>
        </trans-unit>
        <trans-unit id="f11e980ab02eb3b139dff315ba27380bfafd2c82" translate="yes" xml:space="preserve">
          <source>If authentication fails, a response with HTTP status 401 will be sent back together with other appropriate headers (such as a &lt;code&gt;WWW-Authenticate&lt;/code&gt; header for HTTP Basic Auth).</source>
          <target state="translated">認証が失敗した場合、HTTPステータス401の応答は、他の適切なヘッダー（HTTP基本認証の &lt;code&gt;WWW-Authenticate&lt;/code&gt; ヘッダーなど）とともに返送されます。</target>
        </trans-unit>
        <trans-unit id="a559c001a5940e739fca0014d88e55097e606bdc" translate="yes" xml:space="preserve">
          <source>If authentication succeeds, the controller will perform other checks (such as rate limiting, authorization) and then run the action. The authenticated user identity information can be retrieved via &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt;.</source>
          <target state="translated">認証が成功すると、コントローラーは他のチェック（レート制限、承認など）を実行してから、アクションを実行します。認証されたユーザーID情報は &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt; 介して取得できます。</target>
        </trans-unit>
        <trans-unit id="7812529036e081ea6133baea3187ec5f297cd136" translate="yes" xml:space="preserve">
          <source>If base value is set</source>
          <target state="translated">ベース値が設定されている場合</target>
        </trans-unit>
        <trans-unit id="b6b4e127b6d8e4bcf8dd852f2b2a2081b7d3c9ea" translate="yes" xml:space="preserve">
          <source>If body is already set and its content type matches given one, it will be overridden, if content type miss match the multipart message will be composed.</source>
          <target state="translated">body が既に設定されていて、その content type が指定されたものと一致する場合は上書きされ、 content type が一致しない場合はマルチパートメッセージが作成されます。</target>
        </trans-unit>
        <trans-unit id="099aa1cd3808f580f4372e95a7c4d749a4dd6082" translate="yes" xml:space="preserve">
          <source>If both Last-Modified and ETag are null, returns false.</source>
          <target state="translated">Last-ModifiedとETagの両方がnullの場合は、falseを返します。</target>
        </trans-unit>
        <trans-unit id="b250fde6ec6530eee061bbc13257eb5eb95a76a7" translate="yes" xml:space="preserve">
          <source>If bundle should be published</source>
          <target state="translated">バンドルを公開する場合</target>
        </trans-unit>
        <trans-unit id="0517f838ae9ee8f77b88300f42a2b3f09eae86fa" translate="yes" xml:space="preserve">
          <source>If data is used to specify column names or table names the best thing to do is to allow only predefined set of values:</source>
          <target state="translated">データを使ってカラム名やテーブル名を指定する場合は、あらかじめ定義された値のセットのみを許可するのがベストです。</target>
        </trans-unit>
        <trans-unit id="031596c967f1eed4d6c72b62b771db2ff232f37d" translate="yes" xml:space="preserve">
          <source>If each array has an element with the same string key value, the latter will overwrite the former (different from array_merge_recursive). Recursive merging will be conducted if both arrays have an element of array type and are having the same key. For integer-keyed elements, the elements from the latter array will be appended to the former array. You can use &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii\helpers\UnsetArrayValue&lt;/a&gt; object to unset value from previous array or &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii\helpers\ReplaceArrayValue&lt;/a&gt; to force replace former value instead of recursive merging.</source>
          <target state="translated">各配列に同じ文字列キー値を持つ要素がある場合、後者は前者を上書きします（array_merge_recursiveとは異なります）。両方の配列に配列型の要素があり、同じキーがある場合、再帰的なマージが行われます。整数キー要素の場合、後者の配列の要素が前者の配列に追加されます。&lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii \ helpers \ UnsetArrayValue&lt;/a&gt;オブジェクトを使用して以前の配列から値を設定解除したり、&lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii \ helpers \ ReplaceArrayValue&lt;/a&gt;を使用して再帰的なマージの代わりに以前の値を強制的に置換したりできます。</target>
        </trans-unit>
        <trans-unit id="a30c1dbc1ae9c5879108573ac9579e937826a5e4" translate="yes" xml:space="preserve">
          <source>If error is one of fatal type</source>
          <target state="translated">エラーが致命的なタイプの場合</target>
        </trans-unit>
        <trans-unit id="7aa6da69fd6b2a24ac80f07abc11630fe37a3dc4" translate="yes" xml:space="preserve">
          <source>If existing file should be overwritten without backup</source>
          <target state="translated">既存のファイルをバックアップせずに上書きする場合</target>
        </trans-unit>
        <trans-unit id="a594b4be4fca8e7c5b2346783e67846f1d48aef4" translate="yes" xml:space="preserve">
          <source>If false carousel indicators (</source>
          <target state="translated">偽のカルーセルインジケータ(</target>
        </trans-unit>
        <trans-unit id="afa90e727a43a2ed8bd10b9879eba1564cb612ef" translate="yes" xml:space="preserve">
          <source>If intl extension is loaded</source>
          <target state="translated">intl拡張子がロードされている場合</target>
        </trans-unit>
        <trans-unit id="78ade4d7e982d95934c57c2a009b333e29b4a3c1" translate="yes" xml:space="preserve">
          <source>If intl extension isn't available uses fallback that converts latin characters only and removes the rest. You may customize characters map via $transliteration property of the helper.</source>
          <target state="translated">intl 拡張モジュールが利用できない場合は、ラテン文字のみを変換して残りの文字を削除するフォールバックを使用します。ヘルパーの $transliteration プロパティで文字マップをカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="2474b60b32e60e2e083dde1c95d1593a697cdc0a" translate="yes" xml:space="preserve">
          <source>If it is the first time you are releasing an extension, you should register it on a Composer repository, such as &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt;. After that, all you need to do is simply create a release tag (e.g. &lt;code&gt;v1.0.1&lt;/code&gt;) on the VCS repository of your extension and notify the Composer repository about the new release. People will then be able to find the new release, and install or update the extension through the Composer repository.</source>
          <target state="translated">拡張機能を初めてリリースする場合は、&lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt;などのComposerリポジトリに登録する必要があります。その後は、拡張機能のVCSリポジトリにリリースタグ（ &lt;code&gt;v1.0.1&lt;/code&gt; など）を作成し、新しいリリースについてComposerリポジトリに通知するだけです。その後、人々は新しいリリースを見つけ、Composerリポジトリを通じて拡張機能をインストールまたは更新できます。</target>
        </trans-unit>
        <trans-unit id="bdce04541a3e084a3c66dc7fd4de0a0f84a1805c" translate="yes" xml:space="preserve">
          <source>If it should be HTML we could get some help from HtmlPurifier:</source>
          <target state="translated">もしそれがHTMLであるべきならば、HtmlPurifierの助けを借りることができます。</target>
        </trans-unit>
        <trans-unit id="ecb86142fffc322bbba2009336aba359bb8dd102" translate="yes" xml:space="preserve">
          <source>If it's the case don't forget to deny access to everything except &lt;code&gt;web&lt;/code&gt;. If it can't be done consider hosting your application elsewhere.</source>
          <target state="translated">その場合は、 &lt;code&gt;web&lt;/code&gt; 以外のすべてへのアクセスを拒否することを忘れないでください。それができない場合は、他の場所でアプリケーションをホストすることを検討してください。</target>
        </trans-unit>
        <trans-unit id="8507a4cf09db708e4fbf14ec0335fbe6f901f5a0" translate="yes" xml:space="preserve">
          <source>If message was sent successfully.</source>
          <target state="translated">メッセージが正常に送信された場合。</target>
        </trans-unit>
        <trans-unit id="5f92506f19def9069d6a88ef5be3bcb4d1bf0df2" translate="yes" xml:space="preserve">
          <source>If most of your DB tables names share a common prefix, you may use the table prefix feature provided by Yii DAO.</source>
          <target state="translated">DB のテーブル名のほとんどが共通のプレフィックスを持っている場合、Yii DAO が提供するテーブルプレフィックス機能を利用することができます。</target>
        </trans-unit>
        <trans-unit id="73e3fd63985d864c72e16bb65657fa000e1864fb" translate="yes" xml:space="preserve">
          <source>If need to build models from log messages and refresh them.</source>
          <target state="translated">ログメッセージからモデルを構築し、更新する必要がある場合。</target>
        </trans-unit>
        <trans-unit id="1bb5f9bd79229e1bf9ddf5f5527086670488a827" translate="yes" xml:space="preserve">
          <source>If needed you can pass transaction isolation level as a second parameter:</source>
          <target state="translated">必要であれば、2 番目のパラメータとしてトランザクション分離レベルを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="24f76137c3d1ac0a7da27dfd4aae8dc782056714" translate="yes" xml:space="preserve">
          <source>If no error happens during deletion</source>
          <target state="translated">削除時にエラーが発生しない場合</target>
        </trans-unit>
        <trans-unit id="179b61a5213f3bcea415d706500dd7f533cc6a41" translate="yes" xml:space="preserve">
          <source>If no parameter is passed, the generated URL is relative. You can either pass &lt;code&gt;true&lt;/code&gt; to get an absolute URL for the current schema or specify a schema explicitly (&lt;code&gt;https&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;).</source>
          <target state="translated">パラメータが渡されない場合、生成されたURLは相対URLです。 &lt;code&gt;true&lt;/code&gt; を渡して現在のスキーマの絶対URLを取得するか、スキーマを明示的に指定できます（ &lt;code&gt;https&lt;/code&gt; 、 &lt;code&gt;http&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f9d379a49170ee8cca999f33f9b2c03d2170a703" translate="yes" xml:space="preserve">
          <source>If no renderer is available for the given view file, the view file will be treated as a normal PHP and rendered via &lt;a href=&quot;yii-base-view#renderPhpFile()-detail&quot;&gt;renderPhpFile()&lt;/a&gt;.</source>
          <target state="translated">指定されたビューファイルに使用できるレンダラーがない場合、ビューファイルは通常のPHPとして扱われ、&lt;a href=&quot;yii-base-view#renderPhpFile()-detail&quot;&gt;renderPhpFile（）を&lt;/a&gt;介してレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="e18ed81a57461e23b23fb56496f6f86cd9732a5a" translate="yes" xml:space="preserve">
          <source>If none of the above operators is detected, the &lt;code&gt;$defaultOperator&lt;/code&gt; will be used.</source>
          <target state="translated">上記の演算子がいずれも検出されない場合、 &lt;code&gt;$defaultOperator&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="4c47821db582b0de51f4d0ce64e727247b64ab77" translate="yes" xml:space="preserve">
          <source>If not listed by this method, attributes retrieved through &lt;a href=&quot;yii-elasticsearch-query#fields()-detail&quot;&gt;yii\elasticsearch\ActiveQuery::fields()&lt;/a&gt; will converted to a scalar value when the result array contains only one value.</source>
          <target state="translated">このメソッドでリストされていない場合、結果配列に値が1つしか含まれていない場合、&lt;a href=&quot;yii-elasticsearch-query#fields()-detail&quot;&gt;yii \ elasticsearch \ ActiveQuery :: fields（）で&lt;/a&gt;取得した属性はスカラー値に変換されます。</target>
        </trans-unit>
        <trans-unit id="9b2b751adffebf8c2af7b0a71526c135c0fdfa67" translate="yes" xml:space="preserve">
          <source>If not set - &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;yii\db\QueryInterface::one()&lt;/a&gt; will be used.</source>
          <target state="translated">設定されていない場合&lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;-yii \ db \ QueryInterface :: one（）&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="3e0ffcd889630e8aed7165b8c3be21bb87924e9a" translate="yes" xml:space="preserve">
          <source>If not set - application 'session' component will be used, but only, if it is available (e.g. in web application), otherwise - no session will be used and no data saving will be performed.</source>
          <target state="translated">設定されていない場合、アプリケーションの「セッション」コンポーネントが使用されますが、それが利用可能な場合にのみ使用されます(例:ウェブアプリケーション)。</target>
        </trans-unit>
        <trans-unit id="fb62da5c6478461f9eac123c021de7dab78d8b3f" translate="yes" xml:space="preserve">
          <source>If not set explicitly in the application config, this property will be populated with the contents of &lt;code&gt;@vendor/yiisoft/extensions.php&lt;/code&gt;.</source>
          <target state="translated">アプリケーション構成で明示的に設定されていない場合、このプロパティには &lt;code&gt;@vendor/yiisoft/extensions.php&lt;/code&gt; 内容が入力されます。</target>
        </trans-unit>
        <trans-unit id="9b6cb2dfb8e9531ebd9fe6253f3e645ad7009c7c" translate="yes" xml:space="preserve">
          <source>If not set or empty, it means this rule applies to all controllers.</source>
          <target state="translated">設定されていないか空の場合は、このルールがすべてのコントローラに適用されることを意味します。</target>
        </trans-unit>
        <trans-unit id="604e8c580e47b4ca19f15f2f42df59e2a727a9d9" translate="yes" xml:space="preserve">
          <source>If not set the default value will be taken from &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt;.</source>
          <target state="translated">設定しない場合、デフォルト値は &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="c979fcf344412c1700f08cf7587f16467c67969a" translate="yes" xml:space="preserve">
          <source>If not set unique slug will be generated adding incrementing suffix to the base slug.</source>
          <target state="translated">設定されていない場合は、ベーススラッグにサフィックスを付加したユニークなスラッグが生成されます。</target>
        </trans-unit>
        <trans-unit id="18f471cd3cabad13614fb92598ccdaa08ec91d8a" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-baseyii#getLogger()-detail&quot;&gt;Yii::getLogger()&lt;/a&gt; will be used.</source>
          <target state="translated">設定されていない場合、&lt;a href=&quot;yii-baseyii#getLogger()-detail&quot;&gt;Yii :: getLogger（）&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="d8652222a10e264a872f3456e5e838e863270f75" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-log-target#getMessagePrefix()-detail&quot;&gt;getMessagePrefix()&lt;/a&gt; will be used, which prefixes the message with context information such as user IP, user ID and session ID.</source>
          <target state="translated">設定されていない場合、メッセージの前にユーザーIP、ユーザーID、セッションIDなどのコンテキスト情報を&lt;a href=&quot;yii-log-target#getMessagePrefix()-detail&quot;&gt;付加するgetMessagePrefix（）&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="598244aad0b8b5a3d25dc3ad366072c313b162ad" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt; will receive a UNIX timestamp. If &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt; is not set, this property will be ignored.</source>
          <target state="translated">設定されていない場合、&lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$ timestampAttribute&lt;/a&gt;はUNIXタイムスタンプを受け取ります。&lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$ timestampAttribute&lt;/a&gt;が設定されていない場合、このプロパティは無視されます。</target>
        </trans-unit>
        <trans-unit id="6f0159300f503950ad0cafa083a6a5451887329c" translate="yes" xml:space="preserve">
          <source>If not set, attribute type map will be composed automatically from the owner validation rules.</source>
          <target state="translated">設定されていない場合、属性タイプマップは所有者検証ルールから自動的に構成されます。</target>
        </trans-unit>
        <trans-unit id="c7ba6cf13dbde30bbf876ef13767afa18e0f6f50" translate="yes" xml:space="preserve">
          <source>If not set, it will use the &lt;code&gt;controllers&lt;/code&gt; sub-namespace under the namespace of this module. For example, if the namespace of this module is &lt;code&gt;foo\bar&lt;/code&gt;, then the default controller namespace would be &lt;code&gt;foo\bar\controllers&lt;/code&gt;.</source>
          <target state="translated">設定されていない場合、このモジュールの名前空間の下にある &lt;code&gt;controllers&lt;/code&gt; サブ名前空間を使用します。たとえば、このモジュールの名前空間が &lt;code&gt;foo\bar&lt;/code&gt; 場合、デフォルトのコントローラー名前空間は &lt;code&gt;foo\bar\controllers&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="6cb28085c35f61ff67f1625031bdec1323c891ac" translate="yes" xml:space="preserve">
          <source>If not, use radio list:</source>
          <target state="translated">そうでない場合は、ラジオリストを使用します。</target>
        </trans-unit>
        <trans-unit id="79d598537e0ab26c10557e14982c6ecf0e1efced" translate="yes" xml:space="preserve">
          <source>If object tags should be added</source>
          <target state="translated">オブジェクトタグを追加する場合</target>
        </trans-unit>
        <trans-unit id="3cc4368a6f2e22b506c6355d54bb9b8354d29db8" translate="yes" xml:space="preserve">
          <source>If obsolete translations should be marked</source>
          <target state="translated">時代遅れの翻訳がマークされている場合</target>
        </trans-unit>
        <trans-unit id="ce2587abda112e3f1ab3670ea7fefe36f3c59a94" translate="yes" xml:space="preserve">
          <source>If obsolete translations should be removed</source>
          <target state="translated">時代遅れの翻訳を削除する場合</target>
        </trans-unit>
        <trans-unit id="927aca9111385a996b928446d5d0bd9c92ba6744" translate="yes" xml:space="preserve">
          <source>If one of the calls returns &lt;code&gt;false&lt;/code&gt;, the rest of the uncalled &lt;code&gt;beforeAction()&lt;/code&gt; methods will be skipped and the action execution will be cancelled.</source>
          <target state="translated">呼び出しの1つが &lt;code&gt;false&lt;/code&gt; を返す場合、呼び出されていない &lt;code&gt;beforeAction()&lt;/code&gt; メソッドの残りはスキップされ、アクションの実行はキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="4e2ffb22a05cead6ff0620f77d289bb40e0357e5" translate="yes" xml:space="preserve">
          <source>If partial match should be used</source>
          <target state="translated">部分一致を使用する場合</target>
        </trans-unit>
        <trans-unit id="075825610310b5c6cb6078260fc13ca717495d28" translate="yes" xml:space="preserve">
          <source>If partial match should be used.</source>
          <target state="translated">部分一致を使用する場合。</target>
        </trans-unit>
        <trans-unit id="91dd0765a1c03f17ceb419a01dcf89142fa16a49" translate="yes" xml:space="preserve">
          <source>If request failed</source>
          <target state="translated">リクエストが失敗した場合</target>
        </trans-unit>
        <trans-unit id="08a10fa4be221ceef987c0f17fc663e01d397fb0" translate="yes" xml:space="preserve">
          <source>If resolved to an abstract class or an interface (since 2.0.9)</source>
          <target state="translated">抽象クラスまたはインターフェイスに解決された場合(2.0.9以降</target>
        </trans-unit>
        <trans-unit id="cd9e4f2310e3dae8708c94347dc9c241334cde3a" translate="yes" xml:space="preserve">
          <source>If response body contains JSON and should be decoded</source>
          <target state="translated">レスポンスボディに JSON が含まれており、デコードされる必要がある場合</target>
        </trans-unit>
        <trans-unit id="fc99290efe0a7a2f4ade2f8d14a22f2dbee5af4c" translate="yes" xml:space="preserve">
          <source>If screen size could not be detected, or the indentation is greater than the screen size, the text will not be wrapped.</source>
          <target state="translated">画面サイズが検出できなかった場合や、インデントが画面サイズより大きい場合は、テキストは折り返されません。</target>
        </trans-unit>
        <trans-unit id="6b9028d582601ca15d2ae87a68345097e5b21da8" translate="yes" xml:space="preserve">
          <source>If set to true, returns the raw string without trimming</source>
          <target state="translated">true に設定されている場合、トリミングせずに生の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="5c8947b0d73bad0c2e5251344a1b78b894714e6c" translate="yes" xml:space="preserve">
          <source>If set, this forces a minimum position for javascript files. This will adjust depending assets javascript file position or fail if requirement can not be met. If this is null, asset bundles position settings will not be changed. See &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile()&lt;/a&gt; for more details on javascript position.</source>
          <target state="translated">設定すると、JavaScriptファイルの最小位置が強制されます。これは、依存するアセットのJavaScriptファイルの位置を調整するか、要件が満たされない場合は失敗します。これがnullの場合、アセットバンドルの位置設定は変更されません。JavaScriptの位置の詳細については、&lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile（）&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="738fd291d476f5f498d53a1de0155485cd11e05c" translate="yes" xml:space="preserve">
          <source>If simple HTML should be rendered</source>
          <target state="translated">シンプルな HTML を表示する場合</target>
        </trans-unit>
        <trans-unit id="b07125ba6075068db374f5180cb5266ac762a261" translate="yes" xml:space="preserve">
          <source>If some URL rules share the same prefix in their patterns or routes, you may consider using &lt;a href=&quot;yii-web-groupurlrule&quot;&gt;yii\web\GroupUrlRule&lt;/a&gt; so that they can be more efficiently examined by &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; as a group. This is often the case when your application is composed by modules, each having its own set of URL rules with module ID as their common prefixes.</source>
          <target state="translated">一部のURLルールがパターンまたはルートで同じプレフィックスを共有する場合は、&lt;a href=&quot;yii-web-groupurlrule&quot;&gt;yii \ web \ GroupUrlRuleを&lt;/a&gt;使用して、&lt;a href=&quot;yii-web-urlmanager&quot;&gt;URLマネージャー&lt;/a&gt;がグループとしてより効率的に検査できるようにすることを検討できます。これは、アプリケーションがモジュールで構成されており、それぞれが共通のプレフィックスとしてモジュールIDを持つ独自のURLルールのセットを持っている場合によく起こります。</target>
        </trans-unit>
        <trans-unit id="cce8dee872e81ca0756c094c1fac1e7f5426e5b7" translate="yes" xml:space="preserve">
          <source>If specified as a string an own query method with such name will be invoked, passing &lt;a href=&quot;yii-caching-dbquerydependency#%24db-detail&quot;&gt;$db&lt;/a&gt; value as its first argument. For example: &lt;code&gt;exists&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">文字列として指定した場合、そのような名前の独自のクエリメソッドが呼び出され、最初の引数として&lt;a href=&quot;yii-caching-dbquerydependency#%24db-detail&quot;&gt;$ db&lt;/a&gt;値が渡されます。例： &lt;code&gt;exists&lt;/code&gt; 、 &lt;code&gt;all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27208a4ad10ef5cbc8c2fb53fb3aa650f99cd1d1" translate="yes" xml:space="preserve">
          <source>If specified the value is used as a reference time instead of &lt;code&gt;now&lt;/code&gt; when &lt;code&gt;$value&lt;/code&gt; is not a &lt;code&gt;DateInterval&lt;/code&gt; object.</source>
          <target state="translated">指定された値は、代わりに基準時間として使用されている場合は &lt;code&gt;now&lt;/code&gt; とき &lt;code&gt;$value&lt;/code&gt; ない &lt;code&gt;DateInterval&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="80b76f8a6ebb8192019ecd47793c4e15a130b06a" translate="yes" xml:space="preserve">
          <source>If specified, this variable will be set to &lt;code&gt;true&lt;/code&gt; if $pathInfo was changed during normalization</source>
          <target state="translated">指定すると、正規化中に$ pathInfoが変更された場合、この変数は &lt;code&gt;true&lt;/code&gt; に設定されます</target>
        </trans-unit>
        <trans-unit id="ff1b7d6a0ddb8123caa86dd780a874c42e9cb6e3" translate="yes" xml:space="preserve">
          <source>If such a key exists, the corresponding value will be used to replace the corresponding part in the view file path;</source>
          <target state="translated">そのようなキーが存在する場合、対応する値がビューファイルパス内の対応する部分を置き換えるために使用されます。</target>
        </trans-unit>
        <trans-unit id="797d82aedf8008681fcc25e29412ef0ca6c8c64e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is not available, setting this property will have no effect.</source>
          <target state="translated">場合は&lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;、PHPの国際拡張モジュールが&lt;/a&gt;使用できない場合は、このプロパティを設定しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="0b63857e685d3fab747cd3889c9245f048f5dbcc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt; property of the controller is &lt;code&gt;null&lt;/code&gt;, search through all ancestor modules (including the application itself) of the controller and find the first module whose &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;layout&lt;/a&gt; property is not &lt;code&gt;null&lt;/code&gt;. Use that module and its &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;layout&lt;/a&gt; value as the context module and the chosen layout value. If such a module cannot be found, it means no layout will be applied.</source>
          <target state="translated">場合&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;のYii \ベース\コントローラー:: $レイアウト&lt;/a&gt;コントローラのプロパティがあり &lt;code&gt;null&lt;/code&gt; 、コントローラの（アプリケーション自体を含む）すべての祖先のモジュールを検索し、その最初のモジュールを見つける&lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;のレイアウト&lt;/a&gt;プロパティがない &lt;code&gt;null&lt;/code&gt; 。そのモジュールとその&lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;レイアウト&lt;/a&gt;値をコンテキストモジュールおよび選択したレイアウト値として使用します。そのようなモジュールが見つからない場合は、レイアウトが適用されないことを意味します。</target>
        </trans-unit>
        <trans-unit id="3c9cba2b12960d3694209b568c8e5b827f1dd561" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt; property of the controller is not &lt;code&gt;null&lt;/code&gt;, use it as the layout value and the &lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;module&lt;/a&gt; of the controller as the context module.</source>
          <target state="translated">場合&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;のYii \ベース\コントローラー:: $レイアウト&lt;/a&gt;コントローラのプロパティではない &lt;code&gt;null&lt;/code&gt; 、レイアウト値としてそれを使用する&lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;モジュール&lt;/a&gt;のコンテキストモジュールとしてコントローラの。</target>
        </trans-unit>
        <trans-unit id="15e659462542fcd8ac528aac9d835aacc6e70a24" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-elasticsearch-activerecord#primaryKey()-detail&quot;&gt;primary key&lt;/a&gt; is not set (null) during insertion, it will be populated with a &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#_automatic_id_generation&quot;&gt;randomly generated value&lt;/a&gt; after insertion.</source>
          <target state="translated">場合&lt;a href=&quot;yii-elasticsearch-activerecord#primaryKey()-detail&quot;&gt;主キーが&lt;/a&gt;挿入時（ヌル）に設定されていない場合、それが移入される&lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#_automatic_id_generation&quot;&gt;ランダムに生成された値を&lt;/a&gt;挿入した後。</target>
        </trans-unit>
        <trans-unit id="60c3e09752f4cccf4e25e0bc8b62b7ef3900924e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24not-detail&quot;&gt;$not&lt;/a&gt; property is set true, the validator will ensure the attribute value do NOT match the &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24pattern-detail&quot;&gt;$pattern&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;a href=&quot;yii-validators-regularexpressionvalidator#%24not-detail&quot;&gt;$でない&lt;/a&gt;プロパティがtrueに設定され、バリデータは、属性値が一致しないことを確認します&lt;a href=&quot;yii-validators-regularexpressionvalidator#%24pattern-detail&quot;&gt;$パターンを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b726822910d28d332236ad4e701764ee8dab2771" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$eagerLoading&lt;/code&gt; parameter is true, the method will also perform eager loading for the specified relations, which is equivalent to calling &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; using the specified relations.</source>
          <target state="translated">場合は &lt;code&gt;$eagerLoading&lt;/code&gt; パラメータがtrueの場合、この方法はまた、呼び出しに相当する、指定された関係のための積極的なロードを実行します&lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;（）で&lt;/a&gt;指定された関係を使用して。</target>
        </trans-unit>
        <trans-unit id="4b3e451a466028d2dddaffb05f79610042b56865" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$key&lt;/code&gt; attribute or its value for the particular element is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;$groups&lt;/code&gt; is not defined, the array element will be discarded. Otherwise, if &lt;code&gt;$groups&lt;/code&gt; is specified, array element will be added to the result array without any key.</source>
          <target state="translated">特定の要素の &lt;code&gt;$key&lt;/code&gt; 属性またはその値が &lt;code&gt;null&lt;/code&gt; で、 &lt;code&gt;$groups&lt;/code&gt; が定義されていない場合、配列要素は破棄されます。それ以外の場合、 &lt;code&gt;$groups&lt;/code&gt; を指定すると、配列要素がキーなしで結果の配列に追加されます。</target>
        </trans-unit>
        <trans-unit id="f833d8e783f409cda178c69f0e5fc2ce24108bdf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$key&lt;/code&gt; is specified as &lt;code&gt;null&lt;/code&gt; or a value of an element corresponding to the key is &lt;code&gt;null&lt;/code&gt; in addition to &lt;code&gt;$groups&lt;/code&gt; not specified then the element is discarded.</source>
          <target state="translated">&lt;code&gt;$key&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; として指定されている場合、または &lt;code&gt;$groups&lt;/code&gt; が指定されていないことに加えて、キーに対応する要素の値が &lt;code&gt;null&lt;/code&gt; の場合、要素は破棄されます。</target>
        </trans-unit>
        <trans-unit id="92f05b9592fa5b6440250467f8b030637944b9f9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;extends&lt;/code&gt; option is specified, it will also check if the class is a child class of the class represented by the &lt;code&gt;extends&lt;/code&gt; option.</source>
          <target state="translated">場合は &lt;code&gt;extends&lt;/code&gt; オプションが指定されていることにより、クラスが表すクラスの子クラスであれば、それはまた、チェックする &lt;code&gt;extends&lt;/code&gt; オプションを選択します。</target>
        </trans-unit>
        <trans-unit id="fb860477def6ff786d16a900f8897215f952839b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;init()&lt;/code&gt; method contains a lot of code initializing the module's properties, you may also save them in terms of a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; and load it with the following code in &lt;code&gt;init()&lt;/code&gt;:</source>
          <target state="translated">場合 &lt;code&gt;init()&lt;/code&gt; メソッドは、モジュールのプロパティを初期化するコードの多くが含まれている、あなたはまたの面でそれらを保存することが&lt;a href=&quot;guide-concept-configurations&quot;&gt;コンフィギュレーション&lt;/a&gt;と、次のコードでそれを読み込む &lt;code&gt;init()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4ccc9c9de135774c682ee962ad83a69c75ff0165" translate="yes" xml:space="preserve">
          <source>If the CSS class is already in the options, it will not be added again. If class specification at given options is an array, and some class placed there with the named (string) key, overriding of such key will have no effect. For example:</source>
          <target state="translated">CSS クラスが既にオプションに含まれている場合は、再度追加されることはありません。オプションに指定されたクラスが配列であり、そこに名前付き(文字列)のキーを持つクラスが配置されている場合、そのキーをオーバーライドしても何の効果もありません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="319699e7d35150aed7560472fd2a4efd71efb896" translate="yes" xml:space="preserve">
          <source>If the CSS class option is specified using the array style, you may use a named key to mark the logical purpose of the class. In this case, a class with the same key in the array style will be ignored in &lt;code&gt;Html::addCssClass()&lt;/code&gt;:</source>
          <target state="translated">CSSクラスオプションが配列スタイルを使用して指定されている場合、名前付きキーを使用してクラスの論理的な目的をマークできます。この場合、配列スタイルで同じキーを持つクラスは &lt;code&gt;Html::addCssClass()&lt;/code&gt; で無視されます。</target>
        </trans-unit>
        <trans-unit id="fe435042db98105dfeb61298abc6cb52667537ce" translate="yes" xml:space="preserve">
          <source>If the DB table does not declare any primary key, you should override this method to return the attributes that you want to use as primary keys for this AR class.</source>
          <target state="translated">DBテーブルが主キーを宣言していない場合は、このメソッドをオーバーライドして、このARクラスの主キーとして使用したい属性を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="7e7904588bfd946f23764cda2151317184f585d5" translate="yes" xml:space="preserve">
          <source>If the GET parameter does not exist, the second parameter passed to this method will be returned.</source>
          <target state="translated">GETパラメータが存在しない場合、このメソッドに渡された2番目のパラメータが返されます。</target>
        </trans-unit>
        <trans-unit id="831d7a47f15e87ddeb56c28687b69570124aca33" translate="yes" xml:space="preserve">
          <source>If the abstract type contains two or more parts separated by spaces (e.g. &quot;string NOT NULL&quot;), then only the first part will be converted, and the rest of the parts will be appended to the converted result. For example, 'string NOT NULL' is converted to 'varchar(255) NOT NULL'.</source>
          <target state="translated">抽象型がスペースで区切られた2つ以上の部分を含む場合 (例えば &quot;string NOT NULL&quot; など)、最初の部分だけが変換され、残りの部分は変換結果に追加されます。例えば、'string NOT NULL' は 'varchar(255)NOT NULL' に変換されます。</target>
        </trans-unit>
        <trans-unit id="34509f6ce379bc4a2ec1f4e2efa95f17d40bb35e" translate="yes" xml:space="preserve">
          <source>If the action ID is empty, the method will use &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;$defaultAction&lt;/a&gt;.</source>
          <target state="translated">アクションIDが空の場合、メソッドは&lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;$ defaultAction&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="46b7fb124fee260f3f8c361111dd42e02cc9788f" translate="yes" xml:space="preserve">
          <source>If the action ID is found in the &lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;action map&lt;/a&gt;, a standalone action will be created;</source>
          <target state="translated">アクションIDが&lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;アクションマップ&lt;/a&gt;で見つかった場合、スタンドアロンアクションが作成されます。</target>
        </trans-unit>
        <trans-unit id="0795366db3f4de44ba4856acc0a941ce474a80d9" translate="yes" xml:space="preserve">
          <source>If the action ID is found to match an action method, an inline action will be created;</source>
          <target state="translated">アクションIDがアクションメソッドと一致した場合、インラインアクションが作成されます。</target>
        </trans-unit>
        <trans-unit id="6caa330420e94f90c46774207afa96fbca0e9d4e" translate="yes" xml:space="preserve">
          <source>If the action ID is not specified, the &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;default action ID&lt;/a&gt; will be used.</source>
          <target state="translated">アクションIDが指定されていない場合、&lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;デフォルトのアクションID&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="e86c07d7c07aa69f441f7c0d2ac335abde6a1764" translate="yes" xml:space="preserve">
          <source>If the anonymous function requires some data from the outer scope, you can pass it with the &lt;code&gt;use&lt;/code&gt; statement. For example:</source>
          <target state="translated">無名関数が外部スコープからのデータを必要とする場合は、 &lt;code&gt;use&lt;/code&gt; ステートメントを使用してそれを渡すことができます。例えば：</target>
        </trans-unit>
        <trans-unit id="4d37b040e8c9d874ff5a34d05cde58a8b9cf80ab" translate="yes" xml:space="preserve">
          <source>If the asset is a directory, all files and subdirectories under it will be published recursively. Note, in case $forceCopy is false the method only checks the existence of the target directory to avoid repetitive copying (which is very expensive).</source>
          <target state="translated">アセットがディレクトリの場合、その下にあるすべてのファイルとサブディレクトリが再帰的に公開されます。forceCopyがfalseの場合、このメソッドはコピーの繰り返しを避けるためにターゲットディレクトリの存在のみをチェックすることに注意してください (これは非常に高価です)。</target>
        </trans-unit>
        <trans-unit id="7a9beab4c907cdc1337c3b83420284e62f0d48d3" translate="yes" xml:space="preserve">
          <source>If the asset is a file, its file modification time will be checked to avoid unnecessary file copying.</source>
          <target state="translated">アセットがファイルの場合は、不要なファイルコピーを避けるために、ファイルの修正時間をチェックします。</target>
        </trans-unit>
        <trans-unit id="43a15ff763a3efa8200fece736f8781e56a9022b" translate="yes" xml:space="preserve">
          <source>If the attribute is NOT a data attribute, the value will be JSON-encoded. For example, &lt;code&gt;['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; generates &lt;code&gt;params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}'&lt;/code&gt;.</source>
          <target state="translated">属性がデータ属性でない場合、値はJSONエンコードされます。たとえば、 &lt;code&gt;['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; は &lt;code&gt;params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}'&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="c21572ff46d266cfa6f711b9ed2f6e413847c270" translate="yes" xml:space="preserve">
          <source>If the attribute is a data attribute as listed in &lt;a href=&quot;yii-helpers-basehtml#%24dataAttributes-detail&quot;&gt;yii\helpers\Html::$dataAttributes&lt;/a&gt;, such as &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;ng&lt;/code&gt;, a list of attributes will be rendered, one for each element in the value array. For example, &lt;code&gt;'data' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; generates &lt;code&gt;data-id=&quot;1&quot; data-name=&quot;yii&quot;&lt;/code&gt;; and &lt;code&gt;'data' =&amp;gt; ['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii'], 'status' =&amp;gt; 'ok']&lt;/code&gt; generates &lt;code&gt;data-params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}' data-status=&quot;ok&quot;&lt;/code&gt;. Note that in the latter example JSON format is used to render a sub-array.</source>
          <target state="translated">属性が&lt;a href=&quot;yii-helpers-basehtml#%24dataAttributes-detail&quot;&gt;yii \ helpers \ Html :: $ dataAttributes&lt;/a&gt;にリストされているデータ属性（ &lt;code&gt;data&lt;/code&gt; や &lt;code&gt;ng&lt;/code&gt; など）の場合、値の配列の各要素に1つずつ、属性のリストがレンダリングされます。たとえば、 &lt;code&gt;'data' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; は &lt;code&gt;data-id=&quot;1&quot; data-name=&quot;yii&quot;&lt;/code&gt; を生成します。そして &lt;code&gt;'data' =&amp;gt; ['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii'], 'status' =&amp;gt; 'ok']&lt;/code&gt; は &lt;code&gt;data-params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}' data-status=&quot;ok&quot;&lt;/code&gt; 生成します： 1、 &quot;name&quot;： &quot;yii&quot;} 'data-status = &quot;ok&quot;。後者の例では、JSON形式を使用してサブ配列をレンダリングしています。</target>
        </trans-unit>
        <trans-unit id="f7eb995867a2b5c0f548cc0689286ae195f21536" translate="yes" xml:space="preserve">
          <source>If the attribute looks like &lt;code&gt;relatedModel.attribute&lt;/code&gt;, then the attribute will be received from the related model.</source>
          <target state="translated">属性が &lt;code&gt;relatedModel.attribute&lt;/code&gt; のように見える場合、属性は関連モデルから受信されます。</target>
        </trans-unit>
        <trans-unit id="991357ecb7a52cf2c1b0a8fcc6b21099023f377b" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value and expiration time will be preserved.</source>
          <target state="translated">キャッシュに既にそのようなキーが含まれている場合は、既存の値と有効期限が保存されます。</target>
        </trans-unit>
        <trans-unit id="f5328dbd14665e4d191562a915b68e87d3f63e77" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value and expiration time will be replaced with the new ones, respectively.</source>
          <target state="translated">キャッシュに既にそのようなキーが含まれている場合、既存の値と有効期限はそれぞれ新しいものに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="d4d29c734e6c7ab6e36766949e5193d4328bded3" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value will be replaced with the new ones. To add expiration and dependencies, use the &lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set()&lt;/a&gt; method. This method is required by the interface &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;.</source>
          <target state="translated">キャッシュにすでにそのようなキーが含まれている場合、既存の値は新しい値に置き換えられます。有効期限と依存関係を追加するには、&lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set（）&lt;/a&gt;メソッドを使用します。このメソッドは、インターフェイス&lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccessで&lt;/a&gt;必要です。</target>
        </trans-unit>
        <trans-unit id="71c6ecd8fecfd5bf5b80a4e9fa08aab627852f4c" translate="yes" xml:space="preserve">
          <source>If the class implements &lt;a href=&quot;yii-base-configurable&quot;&gt;yii\base\Configurable&lt;/a&gt;, the &lt;code&gt;$config&lt;/code&gt; parameter will be passed as the last parameter to the class constructor; Otherwise, the configuration will be applied &lt;em&gt;after&lt;/em&gt; the object is instantiated.</source>
          <target state="translated">クラスが実装する場合は&lt;a href=&quot;yii-base-configurable&quot;&gt;、\ベース\コンをYII&lt;/a&gt;、 &lt;code&gt;$config&lt;/code&gt; パラメータは、クラスのコンストラクタの最後のパラメータとして渡されます。それ以外の場合は、オブジェクトがインスタンス化された&lt;em&gt;後で&lt;/em&gt;構成が適用さ&lt;em&gt;れ&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ffb0e8dd94449e34cb4791fce13eb2f285ccd815" translate="yes" xml:space="preserve">
          <source>If the class is namespaced (e.g. &lt;code&gt;yii\base\Component&lt;/code&gt;), it will attempt to include the file associated with the corresponding path alias (e.g. &lt;code&gt;@yii/base/Component.php&lt;/code&gt;);</source>
          <target state="translated">クラスの名前空間が指定されている場合（例： &lt;code&gt;yii\base\Component&lt;/code&gt; ）、対応するパスエイリアスに関連付けられたファイル（例： &lt;code&gt;@yii/base/Component.php&lt;/code&gt; ）を含めようとします。</target>
        </trans-unit>
        <trans-unit id="46a49bf5074f1e23d2e11e0c2533c509d2543bd4" translate="yes" xml:space="preserve">
          <source>If the client is already authenticated and is simply not allowed to perform the action, consider using a 403 &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii\web\ForbiddenHttpException&lt;/a&gt; or 404 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt; instead.</source>
          <target state="translated">クライアントがすでに認証されていて、アクションの実行が許可されていない場合は、代わりに403 &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii \ web \ ForbiddenHttpException&lt;/a&gt;または404 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii \ web \ NotFoundHttpExceptionの&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="a4afb3ae4826775361cb53807e80ec0513aba0e3" translate="yes" xml:space="preserve">
          <source>If the column name contains prefix, the prefix will also be properly quoted. If the column name is already quoted or contains '(', '[[' or '{{', then this method will do nothing.</source>
          <target state="translated">カラム名に接頭辞が含まれている場合は、接頭辞も適切に引用符で囲まれます。カラム名が既に引用符で囲まれていたり、'('、'[['、'{{'を含む場合は、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="111ea23a815468b8542654d9ba8e50b3b2db6c86" translate="yes" xml:space="preserve">
          <source>If the column name contains prefix, the prefix will also be properly quoted. If the column name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">カラム名に接頭辞が含まれている場合は、接頭辞も適切に引用符で囲まれます。カラム名が既に引用符で囲まれていたり、'('、'[['、'{{'などの特殊文字が含まれている場合は、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="78ed0e45182c28a5a62d90af60d34815bfcb9387" translate="yes" xml:space="preserve">
          <source>If the controller is created successfully, it will be returned together with the requested action ID. Otherwise &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">コントローラーが正常に作成されると、コントローラーは要求されたアクションIDとともに返されます。それ以外の場合は &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="8df51f10a10aa23c96c3fbba561e221c7a96ad1e" translate="yes" xml:space="preserve">
          <source>If the current user is Jane with &lt;code&gt;ID=1&lt;/code&gt; we are starting at &lt;code&gt;createPost&lt;/code&gt; and trying to get to &lt;code&gt;Jane&lt;/code&gt;:</source>
          <target state="translated">現在のユーザーが &lt;code&gt;ID=1&lt;/code&gt; の Janeである場合、 &lt;code&gt;createPost&lt;/code&gt; から開始して &lt;code&gt;Jane&lt;/code&gt; に到達しようとします。</target>
        </trans-unit>
        <trans-unit id="f671841eb513a2d78326da7dc330c2d4543ccb40" translate="yes" xml:space="preserve">
          <source>If the cursor is already at the edge of the screen, this has no effect.</source>
          <target state="translated">カーソルがすでに画面の端にある場合、これは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="4f536e333a3f9ab34a0f84bbeffbce31a916292f" translate="yes" xml:space="preserve">
          <source>If the data file does not exist, an empty array will be returned.</source>
          <target state="translated">データファイルが存在しない場合は、空の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="9e07282e7c4fe55930d9abaedca212205f5be171" translate="yes" xml:space="preserve">
          <source>If the data model is not found, a 404 HTTP exception will be raised.</source>
          <target state="translated">データモデルが見つからない場合は、404 HTTP例外が発生します。</target>
        </trans-unit>
        <trans-unit id="1089463ec3410a7e5667dfdf26e0d44cbaa1c8e9" translate="yes" xml:space="preserve">
          <source>If the database supports transactions, you may also override &lt;a href=&quot;yii-db-migration#safeUp()-detail&quot;&gt;safeUp()&lt;/a&gt; and &lt;a href=&quot;yii-db-migration#safeDown()-detail&quot;&gt;safeDown()&lt;/a&gt; so that if anything wrong happens during the upgrading or downgrading, the whole migration can be reverted in a whole.</source>
          <target state="translated">データベースがトランザクションをサポートしている場合は、&lt;a href=&quot;yii-db-migration#safeUp()-detail&quot;&gt;safeUp（）&lt;/a&gt;および&lt;a href=&quot;yii-db-migration#safeDown()-detail&quot;&gt;safeDown（）を&lt;/a&gt;オーバーライドして、アップグレードまたはダウングレード中に問題が発生した場合に、全体の移行を元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="965be86d15b1c168d72ddc33107636b6de7a8c0d" translate="yes" xml:space="preserve">
          <source>If the default value of an option is of an array type and you set this option while running the command, the option value will be converted into an array by splitting the input string on any commas.</source>
          <target state="translated">オプションのデフォルト値が配列型で、コマンド実行中にこのオプションを設定した場合、オプションの値は入力文字列を任意のカンマで分割して配列に変換されます。</target>
        </trans-unit>
        <trans-unit id="18852f402d118c92ad33505eee22e5c4e36dac5e" translate="yes" xml:space="preserve">
          <source>If the exception that you want to throw is not among the above list, you may create one by extending from &lt;a href=&quot;yii-web-httpexception&quot;&gt;yii\web\HttpException&lt;/a&gt;, or directly throw it with a status code, for example,</source>
          <target state="translated">スローしたい例外が上記のリストにない場合は、&lt;a href=&quot;yii-web-httpexception&quot;&gt;yii \ web \ HttpException&lt;/a&gt;から拡張して作成するか、ステータスコードを使用して直接スローすることができます。たとえば、</target>
        </trans-unit>
        <trans-unit id="a167e3b831b3c5c7691a7a82b3b2435dccb0cf2c" translate="yes" xml:space="preserve">
          <source>If the extension displays messages intended for end users, the messages should be wrapped into &lt;code&gt;Yii::t()&lt;/code&gt; so that they can be translated. Messages meant for developers (such as internal exception messages) do not need to be translated.</source>
          <target state="translated">拡張機能がエンドユーザー向けのメッセージを表示する場合、メッセージを翻訳できるように、メッセージを &lt;code&gt;Yii::t()&lt;/code&gt; ラップする必要があります。開発者向けのメッセージ（内部例外メッセージなど）は翻訳する必要はありません。</target>
        </trans-unit>
        <trans-unit id="7268ec4ffbf2e0f2000f9e900ab403b03f3ecbea" translate="yes" xml:space="preserve">
          <source>If the extension displays numbers, dates, etc., they should be formatted using &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; with appropriate formatting rules.</source>
          <target state="translated">拡張機能が数字や日付などを表示する場合、適切なフォーマットルールで&lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt;を使用してフォーマットする必要があります。</target>
        </trans-unit>
        <trans-unit id="9ee396891cae37eb2190c50fe42731292e994321" translate="yes" xml:space="preserve">
          <source>If the extension is installed, the bootstrap information will be saved in &lt;a href=&quot;yii-base-application#%24extensions-detail&quot;&gt;yii\base\Application::$extensions&lt;/a&gt;.</source>
          <target state="translated">拡張機能がインストールされている場合、ブートストラップ情報は&lt;a href=&quot;yii-base-application#%24extensions-detail&quot;&gt;yii \ base \ Application :: $ extensionsに&lt;/a&gt;保存されます。</target>
        </trans-unit>
        <trans-unit id="c95b6ef1844724f6f2cef65a0c30130d32d60871" translate="yes" xml:space="preserve">
          <source>If the first segment of the route is a valid module ID as declared in &lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;$modules&lt;/a&gt;, call the module's &lt;code&gt;createController()&lt;/code&gt; with the rest part of the route;</source>
          <target state="translated">ルートの最初のセグメントが&lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;$ modules&lt;/a&gt;で宣言されている有効なモジュールIDである場合は、ルートの残りの部分でモジュールの &lt;code&gt;createController()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5682a6ad10f54d1ab8de6e8e26878747ecf83b26" translate="yes" xml:space="preserve">
          <source>If the first segment of the route is found in &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$controllerMap&lt;/a&gt;, create a controller based on the corresponding configuration found in &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$controllerMap&lt;/a&gt;;</source>
          <target state="translated">経路の最初のセグメントが中に発見された場合&lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$ controllerMap&lt;/a&gt;に見出さ対応する構成に基づいてコントローラ作成&lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$ controllerMapを&lt;/a&gt;、</target>
        </trans-unit>
        <trans-unit id="67c5b4daf81f8105e3129be53ee97325c66c6d89" translate="yes" xml:space="preserve">
          <source>If the given alias does not start with '@', it is returned back without change;</source>
          <target state="translated">与えられたエイリアスが '@' で始まらない場合は、そのまま返されます。</target>
        </trans-unit>
        <trans-unit id="e6299b014135cdc2ea19d847471fe7cf0a177496" translate="yes" xml:space="preserve">
          <source>If the given key is a string containing alphanumeric characters only and no more than 32 characters, then the key will be returned back prefixed with &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$keyPrefix&lt;/a&gt;. Otherwise, a normalized key is generated by serializing the given key, applying MD5 hashing, and prefixing with &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$keyPrefix&lt;/a&gt;.</source>
          <target state="translated">指定されたキーが英数字のみで32文字以下の文字列である場合、キーは&lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$ keyPrefixを&lt;/a&gt;プレフィックスとして返されます。それ以外の場合、正規化されたキーは、指定されたキーをシリアル化し、MD5ハッシュを適用し、&lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$ keyPrefix&lt;/a&gt;をプレフィックスとして付けることによって生成されます。</target>
        </trans-unit>
        <trans-unit id="d0725036f254f8eb438ca8c976d7d67fa9628356" translate="yes" xml:space="preserve">
          <source>If the given key is a string containing alphanumeric characters only and no more than 32 characters, then the key will be returned back prefixed with \yii\caching\keyPrefix. Otherwise, a normalized key is generated by serializing the given key, applying MD5 hashing, and prefixing with \yii\caching\keyPrefix.</source>
          <target state="translated">与えられた鍵が、英数字のみを含む文字列で、32文字以下であれば、その鍵は、前置修飾された「\yii\caching\keyPrefix」で返される。そうでなければ、正規化された鍵は、与えられた鍵をシリアライズし、MD5ハッシュを適用し、前置詞に「\yiiiiiicaching\keyPrefix」を付けて生成される。</target>
        </trans-unit>
        <trans-unit id="63a25578aee6a19c0bbc1e83352adb9b15a44c4d" translate="yes" xml:space="preserve">
          <source>If the index name contains schema prefix, the prefix will also be properly quoted. If the index name is already quoted or contains '(' or '{{', then this method will do nothing.</source>
          <target state="translated">インデックス名にスキーマ接頭辞が含まれている場合は、接頭辞も適切に引用符で囲まれます。インデックス名が既に引用符で囲まれていたり、 '(' や '{{' が含まれていたりする場合は、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="7b15c4cb7241e973ebeffe74ebed5ab0b57b9271" translate="yes" xml:space="preserve">
          <source>If the index name contains schema prefix, the prefix will also be properly quoted. If the index name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">インデックス名にスキーマ接頭辞が含まれている場合は、接頭辞も適切に引用符で囲まれます。インデックス名が既に引用符で囲まれていたり、'('、'[['、'{{'などの特殊文字が含まれている場合は、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="cb65208309929f0205b374bd46d3b2d18e00ca4a" translate="yes" xml:space="preserve">
          <source>If the intl extension is not installed, the data will not be localized.</source>
          <target state="translated">intl拡張子がインストールされていない場合、データはローカライズされません。</target>
        </trans-unit>
        <trans-unit id="eb04bced2b762b5611e2073ca497d3a3cec5aba0" translate="yes" xml:space="preserve">
          <source>If the item does not specify a rule, this method will return true. Otherwise, it will return the value of &lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;yii\rbac\Rule::execute()&lt;/a&gt;.</source>
          <target state="translated">アイテムがルールを指定していない場合、このメソッドはtrueを返します。それ以外の場合は、&lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;yii \ rbac \ Rule :: execute（）&lt;/a&gt;の値を返します。</target>
        </trans-unit>
        <trans-unit id="464d5c7723263a6e210a472995e8a1ef86cb868c" translate="yes" xml:space="preserve">
          <source>If the key does not exist in the array or object, the default value will be returned instead.</source>
          <target state="translated">配列やオブジェクトにキーが存在しない場合は、代わりにデフォルト値が返されます。</target>
        </trans-unit>
        <trans-unit id="28abaad2dab1c192a41509dcaa3373d20cbb10ff" translate="yes" xml:space="preserve">
          <source>If the last modification time of the file specified via &lt;a href=&quot;yii-caching-filedependency#%24fileName-detail&quot;&gt;$fileName&lt;/a&gt; is changed, the dependency is considered as changed.</source>
          <target state="translated">&lt;a href=&quot;yii-caching-filedependency#%24fileName-detail&quot;&gt;$ fileNameで&lt;/a&gt;指定されたファイルの最終変更時刻が変更された場合、依存関係は変更されたと見なされます。</target>
        </trans-unit>
        <trans-unit id="f10872e3d505c91361fc20a27e2e7c9f26a0e4ed" translate="yes" xml:space="preserve">
          <source>If the layout name does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">レイアウト名にファイル拡張子が含まれていない場合、デフォルトの &lt;code&gt;.php&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="1adfaa28635e75391026a3fab1af3f10b8633727" translate="yes" xml:space="preserve">
          <source>If the layout value does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">レイアウト値にファイル拡張子が含まれていない場合は、デフォルトの &lt;code&gt;.php&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="f99bbb69debee97ab3722854804d80e833c99f6d" translate="yes" xml:space="preserve">
          <source>If the message is not found, a &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt; event will be triggered. If there is an event handler, it may provide a &lt;a href=&quot;yii-i18n-missingtranslationevent#%24translatedMessage-detail&quot;&gt;fallback translation&lt;/a&gt;. If no fallback translation is provided this method will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">メッセージが見つからない場合、&lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt;イベントがトリガーされます。イベントハンドラーがある場合は、&lt;a href=&quot;yii-i18n-missingtranslationevent#%24translatedMessage-detail&quot;&gt;フォールバック変換を&lt;/a&gt;提供できます。フォールバック変換が提供されていない場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3e53480c37a69c20f9e07010c9df1433b41f36e9" translate="yes" xml:space="preserve">
          <source>If the migration name is of a special form, for example &lt;code&gt;create_xxx_table&lt;/code&gt; or &lt;code&gt;drop_xxx_table&lt;/code&gt; then the generated migration file will contain extra code, in this case for creating/dropping tables. In the following all variants of this feature are described.</source>
          <target state="translated">移行名が特殊な形式（例： &lt;code&gt;create_xxx_table&lt;/code&gt; または &lt;code&gt;drop_xxx_table&lt;/code&gt; )である場合、生成された移行ファイルには、この場合はテーブルを作成/削除するための追加のコードが含まれます。以下では、この機能のすべてのバリアントについて説明します。</target>
        </trans-unit>
        <trans-unit id="37737e37d6c6ba206e741a4a589339ee4135543e" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;add_xxx_column_to_yyy_table&lt;/code&gt; then the file content would contain &lt;code&gt;addColumn&lt;/code&gt; and &lt;code&gt;dropColumn&lt;/code&gt; statements necessary.</source>
          <target state="translated">移行名が &lt;code&gt;add_xxx_column_to_yyy_table&lt;/code&gt; の形式である場合、ファイルのコンテンツには必要な &lt;code&gt;addColumn&lt;/code&gt; および &lt;code&gt;dropColumn&lt;/code&gt; ステートメントが含まれます。</target>
        </trans-unit>
        <trans-unit id="83f6ba1dabb2953813fc6afa2504fa618fa75641" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;create_junction_table_for_xxx_and_yyy_tables&lt;/code&gt; or &lt;code&gt;create_junction_xxx_and_yyy_tables&lt;/code&gt; then code necessary to create junction table will be generated.</source>
          <target state="translated">移行名が &lt;code&gt;create_junction_table_for_xxx_and_yyy_tables&lt;/code&gt; または &lt;code&gt;create_junction_xxx_and_yyy_tables&lt;/code&gt; の形式の場合、ジャンクションテーブルの作成に必要なコードが生成されます。</target>
        </trans-unit>
        <trans-unit id="f2b52716cb6e3c3f42e5862aabb33951cbe297c4" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;drop_xxx_column_from_yyy_table&lt;/code&gt; then the file content would contain &lt;code&gt;addColumn&lt;/code&gt; and &lt;code&gt;dropColumn&lt;/code&gt; statements necessary.</source>
          <target state="translated">移行名が &lt;code&gt;drop_xxx_column_from_yyy_table&lt;/code&gt; の形式である場合、ファイルのコンテンツには必要な &lt;code&gt;addColumn&lt;/code&gt; および &lt;code&gt;dropColumn&lt;/code&gt; ステートメントが含まれます。</target>
        </trans-unit>
        <trans-unit id="9e25c9ac5a967181c247af86ad7118df11aa6fcf" translate="yes" xml:space="preserve">
          <source>If the model implements the &lt;a href=&quot;yii-web-linkable&quot;&gt;yii\web\Linkable&lt;/a&gt; interface, the resulting array will also have a &lt;code&gt;_link&lt;/code&gt; element which refers to a list of links as specified by the interface.</source>
          <target state="translated">モデルが&lt;a href=&quot;yii-web-linkable&quot;&gt;yii \ web \ Linkable&lt;/a&gt;インターフェースを実装している場合、結果の配列には、インターフェースで指定されたリンクのリストを参照する &lt;code&gt;_link&lt;/code&gt; 要素も含まれます。</target>
        </trans-unit>
        <trans-unit id="fc6fb379798cff43ff0d7eeb05a7a08c5f067acc" translate="yes" xml:space="preserve">
          <source>If the model implements the \yii\mongodb\Linkable interface, the resulting array will also have a &lt;code&gt;_link&lt;/code&gt; element which refers to a list of links as specified by the interface.</source>
          <target state="translated">モデルが\ yii \ mongodb \ Linkableインターフェースを実装している場合、結果の配列には、インターフェースで指定されたリンクのリストを参照する &lt;code&gt;_link&lt;/code&gt; 要素も含まれます。</target>
        </trans-unit>
        <trans-unit id="864c4315179c19afa9cbdfca598bd45ccabe9c46" translate="yes" xml:space="preserve">
          <source>If the module class is not currently requested, &lt;code&gt;null&lt;/code&gt; will be returned. This method is provided so that you access the module instance from anywhere within the module.</source>
          <target state="translated">モジュールクラスが現在要求されていない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。このメソッドは、モジュール内のどこからでもモジュールインスタンスにアクセスできるように提供されています。</target>
        </trans-unit>
        <trans-unit id="314f89ffb5629d58a0d8dd7cda2b215711d540f2" translate="yes" xml:space="preserve">
          <source>If the name component ends in suffix this will also be cut off.</source>
          <target state="translated">名前のコンポーネントが接尾辞で終わっている場合は、これもカットされます。</target>
        </trans-unit>
        <trans-unit id="b4f840a232a2bae8526e8bdc26da6fb04cecddde" translate="yes" xml:space="preserve">
          <source>If the name of such a property is the same as a class member variable, the latter will take precedence. For example, if the above &lt;code&gt;Foo&lt;/code&gt; class has a member variable &lt;code&gt;label&lt;/code&gt;, then the assignment &lt;code&gt;$object-&amp;gt;label = 'abc'&lt;/code&gt; will affect the &lt;em&gt;member variable&lt;/em&gt;&lt;code&gt;label&lt;/code&gt;; that line would not call the &lt;code&gt;setLabel()&lt;/code&gt; setter method.</source>
          <target state="translated">そのようなプロパティの名前がクラスメンバー変数と同じである場合、後者が優先されます。たとえば、上記の &lt;code&gt;Foo&lt;/code&gt; クラスにメンバー変数 &lt;code&gt;label&lt;/code&gt; がある場合、割り当て &lt;code&gt;$object-&amp;gt;label = 'abc'&lt;/code&gt; は&lt;em&gt;メンバー変数&lt;/em&gt; &lt;code&gt;label&lt;/code&gt; に影響し&lt;em&gt;ます&lt;/em&gt;。その行は &lt;code&gt;setLabel()&lt;/code&gt; セッターメソッドを呼び出しません。</target>
        </trans-unit>
        <trans-unit id="33b6177337aa1d78aed63ca0d334a34c3f7b86f6" translate="yes" xml:space="preserve">
          <source>If the named section is not supported, false will be returned.</source>
          <target state="translated">指定されたセクションがサポートされていない場合は、falseが返されます。</target>
        </trans-unit>
        <trans-unit id="c7ffd99a2666ace78a222547697eec2dbd191df2" translate="yes" xml:space="preserve">
          <source>If the option is not set, it will take the default value 60, which means the cached content will expire in 60 seconds.</source>
          <target state="translated">このオプションが設定されていない場合は、デフォルト値の60が使用され、キャッシュされたコンテンツは60秒で期限切れになります。</target>
        </trans-unit>
        <trans-unit id="991632dc9c80b91464d6917b5b70313af5d5a278" translate="yes" xml:space="preserve">
          <source>If the options already contain a &lt;code&gt;style&lt;/code&gt; element, the new style will be merged with the existing one. If a CSS property exists in both the new and the old styles, the old one may be overwritten if &lt;code&gt;$overwrite&lt;/code&gt; is true.</source>
          <target state="translated">オプションに既に &lt;code&gt;style&lt;/code&gt; 要素が含まれている場合、新しいスタイルは既存のスタイルとマージされます。CSSプロパティが新しいスタイルと古いスタイルの両方に存在する場合、 &lt;code&gt;$overwrite&lt;/code&gt; がtrueの場合、古いスタイルが上書きされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="bd38a58c74fc2e4fd0a9fb5cf2cdd1b5b9148919" translate="yes" xml:space="preserve">
          <source>If the parameter does not exist, the second parameter passed to this method will be returned.</source>
          <target state="translated">パラメータが存在しない場合、このメソッドに渡された 2 番目のパラメータが返されます。</target>
        </trans-unit>
        <trans-unit id="1bad09223aa6043f0b902569689ce7f36cf25067" translate="yes" xml:space="preserve">
          <source>If the primary key is null during insertion, it will be populated with the actual value after insertion.</source>
          <target state="translated">挿入中に主キーがNULLの場合は、挿入後に実際の値が入力されます。</target>
        </trans-unit>
        <trans-unit id="f93039cbd82996308b8ae0155db98d81f47dc18a" translate="yes" xml:space="preserve">
          <source>If the query result changes, the dependency is considered as changed. The query is specified via the &lt;a href=&quot;yii-caching-dbdependency#%24sql-detail&quot;&gt;$sql&lt;/a&gt; property.</source>
          <target state="translated">クエリ結果が変更された場合、依存関係は変更されたと見なされます。クエリは&lt;a href=&quot;yii-caching-dbdependency#%24sql-detail&quot;&gt;$ sql&lt;/a&gt;プロパティを介して指定されます。</target>
        </trans-unit>
        <trans-unit id="d9edfc64ae3639222067d216475f59e26ba12a8e" translate="yes" xml:space="preserve">
          <source>If the query result changes, the dependency is considered as changed. The query is specified via the &lt;a href=&quot;yii-caching-dbquerydependency#%24query-detail&quot;&gt;$query&lt;/a&gt; property.</source>
          <target state="translated">クエリ結果が変更された場合、依存関係は変更されたと見なされます。クエリは&lt;a href=&quot;yii-caching-dbquerydependency#%24query-detail&quot;&gt;$ query&lt;/a&gt;プロパティを介して指定されます。</target>
        </trans-unit>
        <trans-unit id="c8d80c07f2b1c4a22cf81655e5e4686316013a15" translate="yes" xml:space="preserve">
          <source>If the refresh is successful, an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_REFRESH-detail&quot;&gt;EVENT_AFTER_REFRESH&lt;/a&gt; event will be triggered. This event is available since version 2.0.8.</source>
          <target state="translated">更新が成功すると、&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_REFRESH-detail&quot;&gt;EVENT_AFTER_REFRESH&lt;/a&gt;イベントがトリガーされます。このイベントは、バージョン2.0.8以降で使用できます。</target>
        </trans-unit>
        <trans-unit id="77c3cf84bd28206a063a2d48b84454e1d467a717" translate="yes" xml:space="preserve">
          <source>If the relationship involves a junction table, a new row will be inserted into the junction table which contains the primary key values from both models.</source>
          <target state="translated">リレーションシップにジャンクション・テーブルが含まれる場合、両方のモデルの主キー値を含むジャンクション・テーブルに新しい行が挿入されます。</target>
        </trans-unit>
        <trans-unit id="0dfea4c4a20add74a144d414bb7319306468f13b" translate="yes" xml:space="preserve">
          <source>If the relationship involves a junction table, a new row will be inserted into the junction table which contains the primary key values from both records.</source>
          <target state="translated">リレーションシップにジャンクション・テーブルが含まれる場合、両方のレコードの主キー値を含むジャンクション・テーブルに新しい行が挿入されます。</target>
        </trans-unit>
        <trans-unit id="528b86f65ddcbc43111bc59039f52bef4d29816e" translate="yes" xml:space="preserve">
          <source>If the request is sent via secure channel (https)</source>
          <target state="translated">リクエストがセキュアチャネル(https)経由で送信された場合</target>
        </trans-unit>
        <trans-unit id="77171108b842023023b62901521e12fa2b85b6e6" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all (e.g. &lt;code&gt;index&lt;/code&gt;), it is considered to be an action ID of the current controller and will be prepended with &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii\web\Controller::$uniqueId&lt;/a&gt;;</source>
          <target state="translated">ルートにスラッシュがまったく含まれていない場合（例： &lt;code&gt;index&lt;/code&gt; ）、これは現在のコントローラーのアクションIDと見なされ、先頭に&lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii \ web \ Controller :: $ uniqueId&lt;/a&gt;が付加されます。</target>
        </trans-unit>
        <trans-unit id="0e4c11e702fe6ea152d353f6e5e8b5d29fc39bae" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all, it is considered to be an action ID of the current controller and will be prepended with &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii\web\Controller::$uniqueId&lt;/a&gt;;</source>
          <target state="translated">ルートにスラッシュがまったく含まれていない場合、ルートは現在のコントローラーのアクションIDと見なされ、先頭に&lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii \ web \ Controller :: $ uniqueId&lt;/a&gt;が付加されます。</target>
        </trans-unit>
        <trans-unit id="8f199c5dc9161b654aab2fa62e45c8429d419620" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all, it is considered to be an action ID of the current controller and will be prepended with the &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; value of the current controller;</source>
          <target state="translated">ルートにスラッシュがまったく含まれていない場合、ルートは現在のコントローラーのアクションIDと見&lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;なされ&lt;/a&gt;、現在のコントローラーのuniqueId値が前に付加されます。</target>
        </trans-unit>
        <trans-unit id="3838e013d15124b57ec37a951bf2edf7f0f06c01" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash (e.g. &lt;code&gt;site/index&lt;/code&gt;), it is considered to be a route relative to the current module and will be prepended with the module's &lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt;.</source>
          <target state="translated">ルートにスラッシュがない場合（例： &lt;code&gt;site/index&lt;/code&gt; ）、現在のモジュールからの相対ルートと見&lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;なされ&lt;/a&gt;、モジュールのuniqueIdが前に付加されます。</target>
        </trans-unit>
        <trans-unit id="c0f7f945f90ddfa6b8e8aac1248995518474c2d3" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash, it is considered to be a route relative to the current module and will be prepended with the &lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; value of the current module.</source>
          <target state="translated">ルートに先行スラッシュがない場合、そのルートは現在のモジュールに関連するルートと見なされ、現在のモジュールの&lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt;値が先頭に追加されます。</target>
        </trans-unit>
        <trans-unit id="dba2ca08b788d93a668b0cf04bccd5bc4bf84f9b" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash, it is considered to be a route relative to the current module and will be prepended with the module's uniqueId.</source>
          <target state="translated">ルートの先頭にスラッシュがない場合、それは現在のモジュールからの相対的なルートとみなされ、モジュールの uniqueId が前に付加されます。</target>
        </trans-unit>
        <trans-unit id="f9b0655708e7c7bc84f9755131ce868541ec8827" translate="yes" xml:space="preserve">
          <source>If the route is an empty string, the current &lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;route&lt;/a&gt; will be used;</source>
          <target state="translated">ルートが空の文字列の場合、現在の&lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;ルート&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="10fc382bcadef53e08e5b0075bb47c5977816c0b" translate="yes" xml:space="preserve">
          <source>If the route is an empty string, the currently requested &lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;route&lt;/a&gt; will be used;</source>
          <target state="translated">ルートが空の文字列の場合、現在リクエストされている&lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;ルート&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="6d390401d5a2f0927e56256fc5350845e3e02c05" translate="yes" xml:space="preserve">
          <source>If the route is empty, use &lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;$defaultRoute&lt;/a&gt;;</source>
          <target state="translated">ルートが空の場合は、&lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;$ defaultRouteを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="acf331fe50a8d9665060ecced5e6ae0ff505ab28" translate="yes" xml:space="preserve">
          <source>If the schema is not cached, or it is necessary to run other queries while the batch query is being processed, you can create a separate unbuffered connection to the database:</source>
          <target state="translated">スキーマがキャッシュされていない場合や、バッチクエリの処理中に他のクエリを実行する必要がある場合は、データベースへのバッファリングされていない接続を別個に作成することができます。</target>
        </trans-unit>
        <trans-unit id="4c1b85fdce45cf1b0309ee0e1142afc27a62e326" translate="yes" xml:space="preserve">
          <source>If the server should be flagged as online upon a failure.</source>
          <target state="translated">障害が発生したときにサーバーをオンラインにするかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="a2c301f0800ad79885ea318453a7929c4d6f23bb" translate="yes" xml:space="preserve">
          <source>If the server should be flagged as online upon a failure. This is used by memcache only.</source>
          <target state="translated">障害が発生したときにサーバをオンラインにするかどうかを指定します。これは memcache でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="cd09912a220042ec76431b08939b461985d7292a" translate="yes" xml:space="preserve">
          <source>If the session variable does not exist, the &lt;code&gt;$defaultValue&lt;/code&gt; will be returned.</source>
          <target state="translated">セッション変数が存在しない場合、 &lt;code&gt;$defaultValue&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b8af8fd9bf5ece008cfde6d5a5ff5e5ec4cd2c9d" translate="yes" xml:space="preserve">
          <source>If the specified migration has already been applied before, any later applied migrations will be reverted.</source>
          <target state="translated">指定されたマイグレーションが以前に既に適用されている場合、後から適用されたマイグレーションは全て元に戻されます。</target>
        </trans-unit>
        <trans-unit id="5c3984832c3d7b5cae3b14747a16e7d495d9306d" translate="yes" xml:space="preserve">
          <source>If the specified name already exists, the old value will be overwritten.</source>
          <target state="translated">指定した名前が既に存在する場合は、古い値が上書きされます。</target>
        </trans-unit>
        <trans-unit id="6dcf7e963583b93cd66a4735b0e5fa1a0a89d01f" translate="yes" xml:space="preserve">
          <source>If the table name contains schema prefix, the prefix will also be properly quoted. If the table name is already quoted or contains '(' or '{{', then this method will do nothing.</source>
          <target state="translated">テーブル名にスキーマ接頭辞が含まれている場合は、接頭辞も適切に引用符で囲まれます。テーブル名がすでに引用符で囲まれていたり、 '(' や '{{' が含まれていたりする場合は、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="a4b06fb2e4d3186151060a68c1c913150f1d75af" translate="yes" xml:space="preserve">
          <source>If the table name contains schema prefix, the prefix will also be properly quoted. If the table name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">テーブル名にスキーマ接頭辞が含まれている場合は、接頭辞も適切に引用符で囲まれます。テーブル名が既に引用符で囲まれていたり、'('、'[['、'{{'などの特殊文字が含まれている場合は、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="f91dae3e2c4249b13e68f7a97f7d516a7e97fd9b" translate="yes" xml:space="preserve">
          <source>If the table's primary key is auto-incremental and is &lt;code&gt;null&lt;/code&gt; during insertion, it will be populated with the actual value after insertion.</source>
          <target state="translated">テーブルの主キーが自動インクリメンタルであり、挿入時に &lt;code&gt;null&lt;/code&gt; の場合、挿入後に実際の値が入力されます。</target>
        </trans-unit>
        <trans-unit id="6c7b978da51a4ba24ea582ab630c0078fb0250b0" translate="yes" xml:space="preserve">
          <source>If the target and the source language codes are the same, the original file will be returned.</source>
          <target state="translated">ターゲットとソースの言語コードが同じであれば、元のファイルが返されます。</target>
        </trans-unit>
        <trans-unit id="8125400e5c5d70ac31f1d8f0d996fd9ffa3353f4" translate="yes" xml:space="preserve">
          <source>If the underlying DBMS supports transactions, you can perform transactional SQL queries like the following:</source>
          <target state="translated">基礎となるDBMSがトランザクションをサポートしている場合、以下のようなトランザクションSQLクエリを実行することができます。</target>
        </trans-unit>
        <trans-unit id="615abde542964e67dddd6c3082eddfd5364b4d99" translate="yes" xml:space="preserve">
          <source>If the user identity cannot be determined by session, this method will try to &lt;a href=&quot;yii-web-user#loginByCookie()-detail&quot;&gt;login by cookie&lt;/a&gt; if &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;$enableAutoLogin&lt;/a&gt; is true.</source>
          <target state="translated">セッションでユーザーIDを判別できない場合、&lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;$ enableAutoLogin&lt;/a&gt;がtrueであれば、このメソッドは&lt;a href=&quot;yii-web-user#loginByCookie()-detail&quot;&gt;Cookieでログイン&lt;/a&gt;を試みます。</target>
        </trans-unit>
        <trans-unit id="705592b8c2383f219608117cc81ad438abd7d266" translate="yes" xml:space="preserve">
          <source>If the user is a guest, it will call &lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;yii\web\User::loginRequired()&lt;/a&gt; to redirect the user browser to the login page.</source>
          <target state="translated">ユーザーがゲストの場合、&lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;yii \ web \ User :: loginRequired（）&lt;/a&gt;を呼び出してユーザーのブラウザーをログインページにリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="6af13fa95d246847d3bc07a440ae9cd0789781bb" translate="yes" xml:space="preserve">
          <source>If the user is already authenticated, it will throw a &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii\web\ForbiddenHttpException&lt;/a&gt;.</source>
          <target state="translated">ユーザーがすでに認証されている場合は、&lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii \ web \ ForbiddenHttpException&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="2e10aa866d4fbdb8c9c091aa3afb0a9ff74dd6f8" translate="yes" xml:space="preserve">
          <source>If the value is empty</source>
          <target state="translated">値が空の場合</target>
        </trans-unit>
        <trans-unit id="e3aebffcd1da079cb9b912016de5c6f7b6f93f05" translate="yes" xml:space="preserve">
          <source>If the value is null or an &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt;, it will not be converted.</source>
          <target state="translated">値がnullまたは&lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expressionの&lt;/a&gt;場合、変換されません。</target>
        </trans-unit>
        <trans-unit id="3d9dc1b09b963e65cfad2ba6083954b4fd87f8ea" translate="yes" xml:space="preserve">
          <source>If the value of an attribute is an array, it will be handled as follows:</source>
          <target state="translated">属性の値が配列の場合は、以下のように処理されます。</target>
        </trans-unit>
        <trans-unit id="9f91e357d1a5b97858654c415b39e699c66e7aa7" translate="yes" xml:space="preserve">
          <source>If the variable does not exist, the &lt;code&gt;$defaultValue&lt;/code&gt; will be returned.</source>
          <target state="translated">変数が存在しない場合、 &lt;code&gt;$defaultValue&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b4e0283136edc7546152648f82c7fe8973f97484" translate="yes" xml:space="preserve">
          <source>If the view is rendered with a &lt;a href=&quot;yii-base-view#%24context-detail&quot;&gt;context&lt;/a&gt; and the context implements &lt;a href=&quot;yii-base-viewcontextinterface&quot;&gt;yii\base\ViewContextInterface&lt;/a&gt;, the view file path is formed by prefixing the &lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;view path&lt;/a&gt; of the context to the view name. This mainly applies to the views rendered within controllers and widgets. For example, &lt;code&gt;about&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/site/about.php&lt;/code&gt; if the context is the controller &lt;code&gt;SiteController&lt;/code&gt;.</source>
          <target state="translated">ビューを用いてレンダリングされる場合&lt;a href=&quot;yii-base-view#%24context-detail&quot;&gt;、コンテキスト&lt;/a&gt;とコンテキスト実装&lt;a href=&quot;yii-base-viewcontextinterface&quot;&gt;のYii \ベース\ ViewContextInterface&lt;/a&gt;、ビューファイルパスを付けることによって形成される&lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;ビューのパス&lt;/a&gt;ビュー名にコンテキストを。これは主に、コントローラーとウィジェット内でレンダリングされるビューに適用されます。たとえば、コンテキストがコントローラー &lt;code&gt;SiteController&lt;/code&gt; の場合、 &lt;code&gt;about&lt;/code&gt; は &lt;code&gt;@app/views/site/about.php&lt;/code&gt; 解決されます。</target>
        </trans-unit>
        <trans-unit id="b07718384b1a789030f1bbc8e8c74be97baa6e2a" translate="yes" xml:space="preserve">
          <source>If the view name does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">ビュー名にファイル拡張子が含まれていない場合は、デフォルトの &lt;code&gt;.php&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="143675328ee1511cec615714266cf85228a771f7" translate="yes" xml:space="preserve">
          <source>If the view name starts with a single slash &lt;code&gt;/&lt;/code&gt;, the view file path is formed by prefixing the view name with the &lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;view path&lt;/a&gt; of the currently active &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt;. If there is no active module, &lt;code&gt;@app/views/ViewName&lt;/code&gt; will be used. For example, &lt;code&gt;/user/create&lt;/code&gt; will be resolved into &lt;code&gt;@app/modules/user/views/user/create.php&lt;/code&gt;, if the currently active module is &lt;code&gt;user&lt;/code&gt;. If there is no active module, the view file path would be &lt;code&gt;@app/views/user/create.php&lt;/code&gt;.</source>
          <target state="translated">ビュー名は、単一のスラッシュで始まる場合は &lt;code&gt;/&lt;/code&gt; 、ビューファイルパスが有するビューの名前を付けることによって形成される&lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;ビューのパス&lt;/a&gt;現在アクティブの&lt;a href=&quot;guide-structure-modules&quot;&gt;モジュール&lt;/a&gt;。アクティブなモジュールがない場合は、 &lt;code&gt;@app/views/ViewName&lt;/code&gt; が使用されます。たとえば、現在アクティブなモジュールが &lt;code&gt;user&lt;/code&gt; の場合、 &lt;code&gt;/user/create&lt;/code&gt; は &lt;code&gt;@app/modules/user/views/user/create.php&lt;/code&gt; に解決されます。アクティブなモジュールがない場合、ビューファイルのパスは &lt;code&gt;@app/views/user/create.php&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="35abd4ea596b4641d909b8e80a5f564e1ff92982" translate="yes" xml:space="preserve">
          <source>If the view name starts with double slashes &lt;code&gt;//&lt;/code&gt;, the corresponding view file path would be &lt;code&gt;@app/views/ViewName&lt;/code&gt;. That is, the view is looked for under the &lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;application's view path&lt;/a&gt;. For example, &lt;code&gt;//site/about&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/site/about.php&lt;/code&gt;.</source>
          <target state="translated">ビュー名がダブルスラッシュ &lt;code&gt;//&lt;/code&gt; で始まる場合、対応するビューファイルパスは &lt;code&gt;@app/views/ViewName&lt;/code&gt; ます。つまり、ビューは&lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;アプリケーションの&lt;/a&gt;ビューパスの下で検索されます。たとえば、 &lt;code&gt;//site/about&lt;/code&gt; は &lt;code&gt;@app/views/site/about.php&lt;/code&gt; 解決されます。</target>
        </trans-unit>
        <trans-unit id="170fa172f5ef290babcc98d20f22052ffd6efeb1" translate="yes" xml:space="preserve">
          <source>If there are any unapplied migrations earlier than the specified one, they will all be applied before the specified migration is applied.</source>
          <target state="translated">指定された移行よりも前に未適用の移行があった場合は、指定された移行が適用される前にすべて適用されます。</target>
        </trans-unit>
        <trans-unit id="3d6269efdd87d35e81a6e30b44c8c4d25feaf266" translate="yes" xml:space="preserve">
          <source>If there are existing flash messages with the same key, the new one will be appended to the existing message array.</source>
          <target state="translated">同じキーを持つ既存のフラッシュメッセージがある場合、新しいメッセージが既存のメッセージ配列に追加されます。</target>
        </trans-unit>
        <trans-unit id="675bacb81959d8deb64b51bb88241ea7a951784d" translate="yes" xml:space="preserve">
          <source>If there are less than count bytes available, return as many as are available. If no more data is available, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">使用可能なバイト数がcount未満の場合は、使用可能な数のバイトを返します。利用できるデータがなくなった場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f507778199bb49929c2f181eacac367bbb5b8865" translate="yes" xml:space="preserve">
          <source>If there is a match</source>
          <target state="translated">一致するものがあれば</target>
        </trans-unit>
        <trans-unit id="b7395b370d45629b7dc70fa54628e41910a9ce57" translate="yes" xml:space="preserve">
          <source>If there is already a cookie with the same name in the collection, it will be removed first.</source>
          <target state="translated">同じ名前のクッキーが既にコレクションにある場合は、それが最初に削除されます。</target>
        </trans-unit>
        <trans-unit id="37c9451c80c6201c31b145498ab546069975fb11" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, it will be replaced.</source>
          <target state="translated">すでに同じ名前のヘッダーがある場合は、それが置き換えられます。</target>
        </trans-unit>
        <trans-unit id="56742f49bb631ba105a20e59ff25c692c57251d4" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, the new one will be appended to it instead of replacing it.</source>
          <target state="translated">すでに同じ名前のヘッダがある場合は、それを置き換えるのではなく、新しいヘッダが追加されます。</target>
        </trans-unit>
        <trans-unit id="a77342df47cc04f34e01b7fc3f1a0ebbf922cef6" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, the new one will be ignored.</source>
          <target state="translated">すでに同じ名前のヘッダがある場合は、新しいヘッダは無視されます。</target>
        </trans-unit>
        <trans-unit id="3fb1daa693c715a7f944d8ae3cf782d4929b4458" translate="yes" xml:space="preserve">
          <source>If there is no corresponding themed file, the original file will be returned.</source>
          <target state="translated">対応するテーマファイルがない場合は、元のファイルが返されます。</target>
        </trans-unit>
        <trans-unit id="8e4ad10c5e73f8be318acbc44cbef562d5fb588f" translate="yes" xml:space="preserve">
          <source>If there is no validation error, an empty error summary markup will still be generated, but it will be hidden.</source>
          <target state="translated">バリデーションエラーがない場合は、空のエラーサマリーマークアップが生成されますが、非表示になります。</target>
        </trans-unit>
        <trans-unit id="5fe82a202e7d5bdd734ae4113e13e67b775c3c26" translate="yes" xml:space="preserve">
          <source>If there's active tab defined</source>
          <target state="translated">アクティブなタブが定義されている場合</target>
        </trans-unit>
        <trans-unit id="3283b3c2e482ab68171dc0341bb5983f400daef0" translate="yes" xml:space="preserve">
          <source>If this callback returns &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; instance, it will be used as action response, otherwise redirection to &lt;a href=&quot;yii-authclient-authaction#%24successUrl-detail&quot;&gt;$successUrl&lt;/a&gt; will be performed.</source>
          <target state="translated">このコールバックが&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt;インスタンスを返す場合は、アクションレスポンスとして使用されます。それ以外の場合は、&lt;a href=&quot;yii-authclient-authaction#%24successUrl-detail&quot;&gt;$ successUrl&lt;/a&gt;へのリダイレクトが実行されます。</target>
        </trans-unit>
        <trans-unit id="b8fc3244a33ca746e6b9ed2492e56036d2ddd8b6" translate="yes" xml:space="preserve">
          <source>If this field is not set - no host name check will be performed.</source>
          <target state="translated">このフィールドが設定されていない場合、ホスト名チェックは実行されません。</target>
        </trans-unit>
        <trans-unit id="0e866213638741762a83c4f351d7b8b96a6ec683" translate="yes" xml:space="preserve">
          <source>If this is an anonymous function, it will be called for each row and the return value will be used as the value to display for every data model. The signature of this function should be: &lt;code&gt;function ($model, $key, $index, $column)&lt;/code&gt;. Where &lt;code&gt;$model&lt;/code&gt;, &lt;code&gt;$key&lt;/code&gt;, and &lt;code&gt;$index&lt;/code&gt; refer to the model, key and index of the row currently being rendered and &lt;code&gt;$column&lt;/code&gt; is a reference to the &lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii\grid\DataColumn&lt;/a&gt; object.</source>
          <target state="translated">これが無名関数の場合、行ごとに呼び出され、戻り値はすべてのデータモデルに表示する値として使用されます。この関数のシグネチャは &lt;code&gt;function ($model, $key, $index, $column)&lt;/code&gt; なければなりません。ここで、 &lt;code&gt;$model&lt;/code&gt; 、 &lt;code&gt;$key&lt;/code&gt; 、および &lt;code&gt;$index&lt;/code&gt; は、現在レンダリングされている行のモデル、キー、およびインデックスを参照し、 &lt;code&gt;$column&lt;/code&gt; は&lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii \ grid \ DataColumn&lt;/a&gt;オブジェクトへの参照です。</target>
        </trans-unit>
        <trans-unit id="fbf6722cdafe67c212a5ddf61cafab63f5cb1cb2" translate="yes" xml:space="preserve">
          <source>If this is an array, it will be passed directly to &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt;. For example for passing an ID from the current request, you may use the following:</source>
          <target state="translated">これが配列の場合、直接&lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can（）に&lt;/a&gt;渡されます。たとえば、現在のリクエストからIDを渡すには、以下を使用できます。</target>
        </trans-unit>
        <trans-unit id="761eb1705ad22831150a87cc36264273756425bf" translate="yes" xml:space="preserve">
          <source>If this is not set, &lt;code&gt;$model[$attribute]&lt;/code&gt; will be used to obtain the value, where &lt;code&gt;$attribute&lt;/code&gt; is the value of &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt;.</source>
          <target state="translated">これが設定されていない場合、 &lt;code&gt;$model[$attribute]&lt;/code&gt; を使用して値が取得されます。ここで、 &lt;code&gt;$attribute&lt;/code&gt; は$ attributeの値&lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;です&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="794189c37f43f22f9917f60650b2dfcecb055bfd" translate="yes" xml:space="preserve">
          <source>If this is not set, the asset manager will use the default CRC32 and filemtime in the &lt;code&gt;hash&lt;/code&gt; method.</source>
          <target state="translated">これが設定されていない場合、アセットマネージャーはデフォルトのCRC32とfilemtimeを &lt;code&gt;hash&lt;/code&gt; 方式で使用します。</target>
        </trans-unit>
        <trans-unit id="c83721f74f2afcc718a014333d39fecdc6b37065" translate="yes" xml:space="preserve">
          <source>If this is not set, the following rules will be used to determine the keys of the data models:</source>
          <target state="translated">これが設定されていない場合は、以下のルールでデータモデルのキーを決定します。</target>
        </trans-unit>
        <trans-unit id="bf414659f003b83c3edf7f1c703c1d5b71419781" translate="yes" xml:space="preserve">
          <source>If this is not set, the keys of the &lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$models&lt;/a&gt; array will be used.</source>
          <target state="translated">これが設定されていない場合、&lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$ models&lt;/a&gt;配列のキーが使用されます。</target>
        </trans-unit>
        <trans-unit id="92a4fa48092d8c3b5d7bfd67fbd44b3aa340a186" translate="yes" xml:space="preserve">
          <source>If this method is called for the first time, it will try to open a master connection.</source>
          <target state="translated">このメソッドが初めて呼ばれた場合、マスター接続を開こうとします。</target>
        </trans-unit>
        <trans-unit id="e01642b6d332ec2ef8cf5bdc44df748cdf249d18" translate="yes" xml:space="preserve">
          <source>If this method is called for the first time, it will try to open a slave connection when &lt;a href=&quot;yii-db-connection#%24enableSlaves-detail&quot;&gt;$enableSlaves&lt;/a&gt; is true.</source>
          <target state="translated">このメソッドが初めて呼び出された場合、&lt;a href=&quot;yii-db-connection#%24enableSlaves-detail&quot;&gt;$ enableSlaves&lt;/a&gt;がtrueのときにスレーブ接続を開こうとします。</target>
        </trans-unit>
        <trans-unit id="4b7817e9aab2d820377ca6bbbbf78628c37fdfe5" translate="yes" xml:space="preserve">
          <source>If this method is overridden in a child class, it is recommended that</source>
          <target state="translated">このメソッドが子クラスでオーバーライドされる場合は</target>
        </trans-unit>
        <trans-unit id="c5725d8902bb45ae2616fbe9c182021cab28ca93" translate="yes" xml:space="preserve">
          <source>If this option is disabled by the web server, when this method is called a download configuration dialog will open but the downloaded file will have 0 bytes.</source>
          <target state="translated">このオプションがウェブサーバによって無効にされている場合、このメソッドが呼ばれるとダウンロード設定ダイアログが開きますが、ダウンロードされたファイルのバイト数は0になります。</target>
        </trans-unit>
        <trans-unit id="5ec8809778f160f65925278e47ba02f9f4c26b6b" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;null&lt;/code&gt;, a 403 HTTP exception will be raised when &lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;loginRequired()&lt;/a&gt; is called.</source>
          <target state="translated">このプロパティが &lt;code&gt;null&lt;/code&gt; の場合、&lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;loginRequired（）&lt;/a&gt;が呼び出されたときに403 HTTP例外が発生します。</target>
        </trans-unit>
        <trans-unit id="d3eb3feb60ffc05455aedb0bb8723cfe18b1b43a" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;null&lt;/code&gt;, then &lt;code&gt;session_cache_limiter()&lt;/code&gt; will not be called. As a result, PHP will send headers according to the &lt;code&gt;session.cache_limiter&lt;/code&gt; PHP ini setting.</source>
          <target state="translated">このプロパティが &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;session_cache_limiter()&lt;/code&gt; は呼び出されません。その結果、PHPは &lt;code&gt;session.cache_limiter&lt;/code&gt; PHP ini設定に従ってヘッダーを送信します。</target>
        </trans-unit>
        <trans-unit id="d8f6ebb990cfb2c3d2bed9d15e01ef3ff1669c27" translate="yes" xml:space="preserve">
          <source>If this property is an array, a dropdown list will be generated that uses this property value as the list options.</source>
          <target state="translated">このプロパティが配列の場合、このプロパティ値をリストオプションとして使用するドロップダウンリストが生成されます。</target>
        </trans-unit>
        <trans-unit id="8e67c42d2d158b7329818fac60a3394a4f446e33" translate="yes" xml:space="preserve">
          <source>If this property is empty or not set, language negotiation will be skipped.</source>
          <target state="translated">このプロパティが空か設定されていない場合、言語ネゴシエーションはスキップされます。</target>
        </trans-unit>
        <trans-unit id="ddb881d35c0a9793c4530636b14e5dc121a4bf66" translate="yes" xml:space="preserve">
          <source>If this property is empty or not set, response format negotiation will be skipped.</source>
          <target state="translated">このプロパティが空であるか、設定されていない場合、応答フォーマットのネゴシエーションはスキップされます。</target>
        </trans-unit>
        <trans-unit id="405afefe29b13f7aef198bc023c70a501085c899" translate="yes" xml:space="preserve">
          <source>If this property is empty, no authentication will be performed.</source>
          <target state="translated">このプロパティが空の場合、認証は行われません。</target>
        </trans-unit>
        <trans-unit id="6c328ce57a50b4e54b6d098d9573758322fbc020" translate="yes" xml:space="preserve">
          <source>If this property is false, it means the whole asset bundle feature is disabled and &lt;a href=&quot;yii-web-assetmanager#getBundle()-detail&quot;&gt;getBundle()&lt;/a&gt; will always return null.</source>
          <target state="translated">このプロパティがfalseの場合、アセットバンドル機能全体が無効になり、&lt;a href=&quot;yii-web-assetmanager#getBundle()-detail&quot;&gt;getBundle（）&lt;/a&gt;は常にnullを返します。</target>
        </trans-unit>
        <trans-unit id="aef0a3538f3df323434f2c81123afd00592192b5" translate="yes" xml:space="preserve">
          <source>If this property is not set or empty, it means this rule applies to all roles.</source>
          <target state="translated">このプロパティが設定されていないか空の場合、このルールがすべてのロールに適用されることを意味します。</target>
        </trans-unit>
        <trans-unit id="6c3529cc5dd62162c7cfc46f76acb9eecc8c5a0c" translate="yes" xml:space="preserve">
          <source>If this property is not set, a text field will be generated as the filter input;</source>
          <target state="translated">このプロパティが設定されていない場合、フィルタ入力としてテキストフィールドが生成されます。</target>
        </trans-unit>
        <trans-unit id="d2aa03b44febc64b0a26b4c7ef2415cc3db737a0" translate="yes" xml:space="preserve">
          <source>If this property is not set, button URLs will be created using &lt;a href=&quot;yii-grid-actioncolumn#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt;.</source>
          <target state="translated">このプロパティが設定されていない場合、ボタンのURLは&lt;a href=&quot;yii-grid-actioncolumn#createUrl()-detail&quot;&gt;createUrl（）&lt;/a&gt;を使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="3e69efef20b9de65aaf0a9d9599496343fb846f0" translate="yes" xml:space="preserve">
          <source>If this property is not set, the default value will be obtained from &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt;, see &lt;a href=&quot;yii-i18n-formatter#%24dateFormat-detail&quot;&gt;yii\i18n\Formatter::$dateFormat&lt;/a&gt; for details. Since version 2.0.8 the default value will be determined from different formats of the formatter class, dependent on the value of &lt;a href=&quot;yii-validators-datevalidator#%24type-detail&quot;&gt;$type&lt;/a&gt;:</source>
          <target state="translated">このプロパティが設定されていない場合、デフォルト値は &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt; から&lt;a href=&quot;yii-i18n-formatter#%24dateFormat-detail&quot;&gt;取得さ&lt;/a&gt;れます。詳細については、yii \ i18n \ Formatter :: $ dateFormatを参照してください。バージョン2.0.8以降、デフォルト値は&lt;a href=&quot;yii-validators-datevalidator#%24type-detail&quot;&gt;$ typeの&lt;/a&gt;値に応じて、フォーマッタクラスのさまざまなフォーマットから決定されます。</target>
        </trans-unit>
        <trans-unit id="98d105681c9d81a0809894b0464b26c0a4dd813a" translate="yes" xml:space="preserve">
          <source>If this property is not set, the resource arrays will be directly returned without using envelope. The pagination information as shown in &lt;code&gt;_links&lt;/code&gt; and &lt;code&gt;_meta&lt;/code&gt; can be accessed from the response HTTP headers.</source>
          <target state="translated">このプロパティが設定されていない場合、リソース配列はエンベロープを使用せずに直接返されます。 &lt;code&gt;_links&lt;/code&gt; と &lt;code&gt;_meta&lt;/code&gt; に示されているページ付け情報には、応答HTTPヘッダーからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f59858c6ae5ce0a9a0f7dd8716effab2652e820f" translate="yes" xml:space="preserve">
          <source>If this property is not set, the username information will be considered as an access token while the password information will be ignored. The &lt;a href=&quot;yii-web-user#loginByAccessToken()-detail&quot;&gt;yii\web\User::loginByAccessToken()&lt;/a&gt; method will be called to authenticate and login the user.</source>
          <target state="translated">このプロパティが設定されていない場合、ユーザー名情報はアクセストークンと見なされ、パスワード情報は無視されます。&lt;a href=&quot;yii-web-user#loginByAccessToken()-detail&quot;&gt;Yiiの\ウェブ\ユーザー:: loginByAccessToken（）&lt;/a&gt;メソッドは、ユーザを認証およびログインするために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1b11585caec536adf53c89c8d43d6fd0e82f525e" translate="yes" xml:space="preserve">
          <source>If this property is specified as a callback, it should have the following signature:</source>
          <target state="translated">このプロパティがコールバックとして指定されている場合は、以下のシグネチャを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="e58b23b2569be835f78c6402f0301eef9b4d3346" translate="yes" xml:space="preserve">
          <source>If this property is specified as an anonymous function, it should have the following signature:</source>
          <target state="translated">このプロパティが匿名関数として指定されている場合は、以下のシグネチャを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="a86cc1af09da5de44b3ddd37d7899250d535585a" translate="yes" xml:space="preserve">
          <source>If this record is the result of a query and the attribute is not loaded, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">このレコードがクエリの結果であり、属性がロードされていない場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="595d230f5bfe79f8070489d0205e83a77b43797f" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; などの特定のロケールコードの翻訳が見つからない場合は、より一般的な &lt;code&gt;en&lt;/code&gt; を試します。</target>
        </trans-unit>
        <trans-unit id="2a4191dd0e6f33b444f0dc7b6e1f2840830e59ac" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;. When both are present, the &lt;code&gt;en-US&lt;/code&gt; messages will be merged over &lt;code&gt;en&lt;/code&gt;. See &lt;a href=&quot;yii-i18n-gettextmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages()&lt;/a&gt; for details. If the $language is less specific than &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;, the method will try to load the messages for &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;. For example: &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt; is &lt;code&gt;en-GB&lt;/code&gt;, $language is &lt;code&gt;en&lt;/code&gt;. The method will load the messages for &lt;code&gt;en&lt;/code&gt; and merge them over &lt;code&gt;en-GB&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; などの特定のロケールコードの翻訳が見つからない場合は、より一般的な &lt;code&gt;en&lt;/code&gt; を試します。両方が存在する場合、 &lt;code&gt;en-US&lt;/code&gt; メッセージは &lt;code&gt;en&lt;/code&gt; を介してマージされます。詳細については、&lt;a href=&quot;yii-i18n-gettextmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages（）&lt;/a&gt;を参照してください。 $ languageが&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;よりも具体的でない場合、メソッドは&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguageの&lt;/a&gt;メッセージをロードしようとします。例：&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;は &lt;code&gt;en-GB&lt;/code&gt; 、$ languageは &lt;code&gt;en&lt;/code&gt; です。このメソッドは &lt;code&gt;en&lt;/code&gt; のメッセージをロードし、それらを &lt;code&gt;en-GB&lt;/code&gt; にマージします。</target>
        </trans-unit>
        <trans-unit id="bdaf153b5c170ff45ca76308bff663eff053e8ad" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;. When both are present, the &lt;code&gt;en-US&lt;/code&gt; messages will be merged over &lt;code&gt;en&lt;/code&gt;. See &lt;a href=&quot;yii-i18n-phpmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages()&lt;/a&gt; for details. If the $language is less specific than &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;, the method will try to load the messages for &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;. For example: &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt; is &lt;code&gt;en-GB&lt;/code&gt;, $language is &lt;code&gt;en&lt;/code&gt;. The method will load the messages for &lt;code&gt;en&lt;/code&gt; and merge them over &lt;code&gt;en-GB&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; などの特定のロケールコードの翻訳が見つからない場合は、より一般的な &lt;code&gt;en&lt;/code&gt; を試します。両方が存在する場合、 &lt;code&gt;en-US&lt;/code&gt; メッセージは &lt;code&gt;en&lt;/code&gt; を介してマージされます。詳細については、&lt;a href=&quot;yii-i18n-phpmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages（）&lt;/a&gt;を参照してください。 $ languageが&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;よりも具体的でない場合、メソッドは&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguageの&lt;/a&gt;メッセージをロードしようとします。例：&lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt;は &lt;code&gt;en-GB&lt;/code&gt; 、$ languageは &lt;code&gt;en&lt;/code&gt; です。このメソッドは &lt;code&gt;en&lt;/code&gt; のメッセージをロードし、それらを &lt;code&gt;en-GB&lt;/code&gt; にマージします。</target>
        </trans-unit>
        <trans-unit id="0851fde4b410d1ade4416c888f897ac84ba83813" translate="yes" xml:space="preserve">
          <source>If translations should be sorted</source>
          <target state="translated">翻訳がソートされている必要がある場合</target>
        </trans-unit>
        <trans-unit id="863ea3e36d5d2bad422712c1e74f66f72cd13c87" translate="yes" xml:space="preserve">
          <source>If true, context message will cached once it's been created.</source>
          <target state="translated">true の場合、コンテキストメッセージが作成されるとキャッシュされます。</target>
        </trans-unit>
        <trans-unit id="5942f3ab0aead82e8a4880596207dee1d0abae22" translate="yes" xml:space="preserve">
          <source>If true, context message will cached once it's been created. Makes sense to use with &lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$includeContext&lt;/a&gt;.</source>
          <target state="translated">trueの場合、作成されたコンテキストメッセージはキャッシュされます。&lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$ includeContextで&lt;/a&gt;使用するのは理にかなっています。</target>
        </trans-unit>
        <trans-unit id="2bc2f4eec112d8e1ca6337f23ea84dfde92d2572" translate="yes" xml:space="preserve">
          <source>If true, context will be included in every message.</source>
          <target state="translated">true の場合、すべてのメッセージにコンテキストが含まれます。</target>
        </trans-unit>
        <trans-unit id="d4f7d62a318fe9b61eb15a99b13fe92e8af72527" translate="yes" xml:space="preserve">
          <source>If true, context will be included in every message. This is convenient if you log application errors and analyze them with tools like Kibana.</source>
          <target state="translated">true の場合、すべてのメッセージにコンテキストが含まれます。これは、アプリケーションのエラーをログに記録したり、Kibana のようなツールで分析したりする場合に便利です。</target>
        </trans-unit>
        <trans-unit id="8588e71490d2b8f7b9be0e55dfd8e7a7e5aad9a4" translate="yes" xml:space="preserve">
          <source>If true, context will be logged as a separate message after all other messages.</source>
          <target state="translated">true の場合、コンテキストは他のすべてのメッセージの後に別のメッセージとして記録されます。</target>
        </trans-unit>
        <trans-unit id="48be22f667695315030c677c2aea101404ac6c6a" translate="yes" xml:space="preserve">
          <source>If true, shows the widget as an inline calendar and the input as a hidden field.</source>
          <target state="translated">trueの場合、ウィジェットはインラインカレンダーとして、入力は非表示フィールドとして表示されます。</target>
        </trans-unit>
        <trans-unit id="415f678f3922bf74cfc39f8b5a24ecb578df6a13" translate="yes" xml:space="preserve">
          <source>If two behaviors define the same property or method and they are both attached to the same component, the behavior that is attached to the component &lt;em&gt;first&lt;/em&gt; will take precedence when the property or method is accessed.</source>
          <target state="translated">2つの動作が同じプロパティまたはメソッドを定義し、両方が同じコンポーネントにアタッチされている場合、プロパティまたはメソッドにアクセスすると、&lt;em&gt;最初&lt;/em&gt;にコンポーネントにアタッチされた動作が優先されます。</target>
        </trans-unit>
        <trans-unit id="50f3e45b0f74d8f2394ec529276f40a2d3782bd7" translate="yes" xml:space="preserve">
          <source>If version is not explicitly set, &lt;a href=&quot;yii-base-module#defaultVersion()-detail&quot;&gt;defaultVersion()&lt;/a&gt; method will be used to determine its value.</source>
          <target state="translated">バージョンが明示的に設定されていない場合、&lt;a href=&quot;yii-base-module#defaultVersion()-detail&quot;&gt;defaultVersion（）&lt;/a&gt;メソッドを使用してその値が決定されます。</target>
        </trans-unit>
        <trans-unit id="e619fb3201f37a533d9bc1619294228a4621a868" translate="yes" xml:space="preserve">
          <source>If we are using fixture that loads data into database then these rows will be applied to &lt;code&gt;users&lt;/code&gt; table. If we are using nosql fixtures, for example &lt;code&gt;mongodb&lt;/code&gt; fixture, then this data will be applied to &lt;code&gt;users&lt;/code&gt; mongodb collection. In order to learn about implementing various loading strategies and more, refer to official &lt;a href=&quot;https://github.com/yiisoft/yii2/blob/master/docs/guide/test-fixtures.md&quot;&gt;documentation&lt;/a&gt;. Above fixture example was auto-generated by &lt;code&gt;yii2-faker&lt;/code&gt; extension, read more about it in these &lt;a href=&quot;#auto-generating-fixtures&quot;&gt;section&lt;/a&gt;. Fixture classes name should not be plural.</source>
          <target state="translated">データベースにデータをロードするフィクスチャを使用している場合、これらの行は &lt;code&gt;users&lt;/code&gt; テーブルに適用されます。 &lt;code&gt;mongodb&lt;/code&gt; フィクスチャなどのnosqlフィクスチャを使用している場合、このデータは &lt;code&gt;users&lt;/code&gt; mongodbコレクションに適用されます。さまざまな読み込み戦略の実装などについて学習するには、公式の&lt;a href=&quot;https://github.com/yiisoft/yii2/blob/master/docs/guide/test-fixtures.md&quot;&gt;ドキュメントを&lt;/a&gt;参照してください。上記のフィクスチャの例は、 &lt;code&gt;yii2-faker&lt;/code&gt; 拡張機能によって自動生成されました。詳細については、これらの&lt;a href=&quot;#auto-generating-fixtures&quot;&gt;セクションを&lt;/a&gt;ご覧ください。フィクスチャクラス名は複数であってはなりません。</target>
        </trans-unit>
        <trans-unit id="94b47be848c0711aef8f85ca6431d684f03c677a" translate="yes" xml:space="preserve">
          <source>If you access this controller from browser, you will see an error complaining the &lt;code&gt;BookingInterface&lt;/code&gt; cannot be instantiated. This is because you need to tell the DI container how to deal with this dependency:</source>
          <target state="translated">ブラウザからこのコントローラにアクセスすると、 &lt;code&gt;BookingInterface&lt;/code&gt; をインスタンス化できないというエラーが表示されます。これは、DIコンテナーにこの依存関係の処理方法を通知する必要があるためです。</target>
        </trans-unit>
        <trans-unit id="b65c7c3bf9c3c8458864283b217efb447132a6d3" translate="yes" xml:space="preserve">
          <source>If you already have a formatted body string, you may assign it to the &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;yii\web\Response::$content&lt;/a&gt; property of the response. For example,</source>
          <target state="translated">すでにフォーマットされた本文文字列がある場合は、それを&lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;応答のyii \ web \ Response :: $ content&lt;/a&gt;プロパティに割り当てることができます。例えば、</target>
        </trans-unit>
        <trans-unit id="0fb4988697011a42f159bad2641e0d77b8761b7a" translate="yes" xml:space="preserve">
          <source>If you already have an object, you may use &lt;a href=&quot;yii-baseyii#configure()-detail&quot;&gt;Yii::configure()&lt;/a&gt; to initialize the object's properties with a configuration array:</source>
          <target state="translated">すでにオブジェクトがある場合は、&lt;a href=&quot;yii-baseyii#configure()-detail&quot;&gt;Yii :: configure（）&lt;/a&gt;を使用して、構成配列でオブジェクトのプロパティを初期化できます。</target>
        </trans-unit>
        <trans-unit id="b5bc44656c8b621ae37e089b46f97b3fe69216b4" translate="yes" xml:space="preserve">
          <source>If you also need to support client-side conditional validation, you should configure the &lt;a href=&quot;yii-validators-validator#%24whenClient-detail&quot;&gt;whenClient&lt;/a&gt; property which takes a string representing a JavaScript function whose return value determines whether to apply the rule or not. For example,</source>
          <target state="translated">クライアント側の条件付き検証もサポートする必要がある場合は、戻り値がルールを適用するかどうかを決定するJavaScript関数を表す文字列を&lt;a href=&quot;yii-validators-validator#%24whenClient-detail&quot;&gt;受け取るwhenClient&lt;/a&gt;プロパティを構成する必要があります。例えば、</target>
        </trans-unit>
        <trans-unit id="015c2306247e95ea889ed473e6fce52b12b81385" translate="yes" xml:space="preserve">
          <source>If you are calling the file sending method in places other than an action method, you should also call the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method afterwards to ensure no extra content will be appended to the response.</source>
          <target state="translated">アクションメソッド以外の場所でファイル送信メソッドを呼び出す場合は、後で&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send（）&lt;/a&gt;メソッドを呼び出して、余分なコンテンツが応答に追加されないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="2b8119693bac426cf5390310731d2dd4315e59fb" translate="yes" xml:space="preserve">
          <source>If you are interested in the attribute values prior to their most recent modification, you may call &lt;a href=&quot;yii-db-baseactiverecord#getOldAttributes()-detail&quot;&gt;getOldAttributes()&lt;/a&gt; or &lt;a href=&quot;yii-db-baseactiverecord#getOldAttribute()-detail&quot;&gt;getOldAttribute()&lt;/a&gt;.</source>
          <target state="translated">最新の変更前の属性値に関心がある場合は、&lt;a href=&quot;yii-db-baseactiverecord#getOldAttributes()-detail&quot;&gt;getOldAttributes（）&lt;/a&gt;または&lt;a href=&quot;yii-db-baseactiverecord#getOldAttribute()-detail&quot;&gt;getOldAttribute（）を&lt;/a&gt;呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1576c65845d56e383650720054efede4cd92f6ad" translate="yes" xml:space="preserve">
          <source>If you are registering an asset bundle in other places, you should provide the needed view object. For example, to register an asset bundle in a &lt;a href=&quot;guide-structure-widgets&quot;&gt;widget&lt;/a&gt; class, you can get the view object by &lt;code&gt;$this-&amp;gt;view&lt;/code&gt;.</source>
          <target state="translated">他の場所でアセットバンドルを登録する場合は、必要なビューオブジェクトを提供する必要があります。たとえば、&lt;a href=&quot;guide-structure-widgets&quot;&gt;ウィジェット&lt;/a&gt;クラスにアセットバンドルを登録するには、 &lt;code&gt;$this-&amp;gt;view&lt;/code&gt; してビューオブジェクトを取得できます。</target>
        </trans-unit>
        <trans-unit id="e66182a77eb78e65351400c3acc25a8757dced18" translate="yes" xml:space="preserve">
          <source>If you are the developer of a redistributable &lt;a href=&quot;guide-structure-extensions&quot;&gt;extension&lt;/a&gt;, you can register dependencies in the bootstrapping class of the extension.</source>
          <target state="translated">再配布可能な&lt;a href=&quot;guide-structure-extensions&quot;&gt;拡張機能の&lt;/a&gt;開発者は、拡張機能のブートストラップクラスに依存関係を登録できます。</target>
        </trans-unit>
        <trans-unit id="88a0770ee0f1566f7b66faeaa988abce546693b8" translate="yes" xml:space="preserve">
          <source>If you are the developer of an application, you can register your dependencies using application configuration. Please, read the &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;Application Configurations&lt;/a&gt; subsection of the &lt;a href=&quot;guide-concept-configurations&quot;&gt;Configurations&lt;/a&gt; guide article.</source>
          <target state="translated">アプリケーションの開発者は、アプリケーション構成を使用して依存関係を登録できます。&lt;a href=&quot;guide-concept-configurations&quot;&gt;構成&lt;/a&gt;ガイド記事の&lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;アプリケーション構成&lt;/a&gt;サブセクションをお読みください。</target>
        </trans-unit>
        <trans-unit id="06902672b81cadfce97d71b07442604af26c59fb" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;http://codeception.com/&quot;&gt;Codeception&lt;/a&gt; to test your code, you should consider using the &lt;code&gt;yii2-codeception&lt;/code&gt; extension which has built-in support for loading and accessing fixtures. If you are using other testing frameworks, you may use &lt;a href=&quot;yii-test-fixturetrait&quot;&gt;yii\test\FixtureTrait&lt;/a&gt; in your test cases to achieve the same goal.</source>
          <target state="translated">&lt;a href=&quot;http://codeception.com/&quot;&gt;Codeception&lt;/a&gt;を使用してコードをテストしている場合は、フィクスチャのロードとアクセスのサポートが組み込まれている &lt;code&gt;yii2-codeception&lt;/code&gt; 拡張機能の使用を検討する必要があります。他のテストフレームワークを使用している場合は、テストケースで&lt;a href=&quot;yii-test-fixturetrait&quot;&gt;yii \ test \ FixtureTrait&lt;/a&gt;を使用して同じ目標を達成できます。</target>
        </trans-unit>
        <trans-unit id="d09c3d1a47aec1e68c234972666fda76e27c788e" translate="yes" xml:space="preserve">
          <source>If you are using RBAC (Role-Based Access Control), you may also specify role or permission names. In this case, &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt; will be called to check access.</source>
          <target state="translated">RBAC（役割ベースのアクセス制御）を使用している場合は、役割または権限名を指定することもできます。この場合、&lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can（）&lt;/a&gt;がアクセスを確認するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ad1c6d719e6dccd6b9958b5720f3b6a3500673c6" translate="yes" xml:space="preserve">
          <source>If you are using the array format to specify columns, you can also use the array keys to specify the column aliases. For example, the above code can be rewritten as follows,</source>
          <target state="translated">配列形式で列を指定する場合は、配列のキーを使って列のエイリアスを指定することもできます。例えば、上記のコードは以下のように書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="cca6006b06430b370aef7e215d362f4f853ce00b" translate="yes" xml:space="preserve">
          <source>If you are using the array format, you can also use the array keys to specify the table aliases, like the following:</source>
          <target state="translated">配列形式を使用している場合は、以下のように配列キーを使用してテーブルのエイリアスを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="cf272a02eda59adafb9739848242520368c3b760" translate="yes" xml:space="preserve">
          <source>If you can write to the root level directory i.e. where &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;logs&lt;/code&gt; and &lt;code&gt;www&lt;/code&gt; are, then upload &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;commands&lt;/code&gt; etc. as is to the root level directory.</source>
          <target state="translated">ルートレベルのディレクトリ（ &lt;code&gt;config&lt;/code&gt; 、 &lt;code&gt;logs&lt;/code&gt; 、 &lt;code&gt;www&lt;/code&gt; など）に書き込むことができる場合は、 &lt;code&gt;assets&lt;/code&gt; 、 &lt;code&gt;commands&lt;/code&gt; などをそのままルートレベルのディレクトリにアップロードします。</target>
        </trans-unit>
        <trans-unit id="df8767bc6311f37d43cc764bb148cd0b46cfb3c4" translate="yes" xml:space="preserve">
          <source>If you check the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt;&lt;code&gt;web/index.php&lt;/code&gt; of your application, you will find the following line, which essentially makes &lt;code&gt;YII_ENV_DEV&lt;/code&gt; to be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">アプリケーションの&lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;エントリスクリプト&lt;/a&gt; &lt;code&gt;web/index.php&lt;/code&gt; を確認すると、次の行が見つかり &lt;code&gt;true&lt;/code&gt; 。これにより、本質的に &lt;code&gt;YII_ENV_DEV&lt;/code&gt; がtrueになります。</target>
        </trans-unit>
        <trans-unit id="0e2b8995bac820139370c7025dec71f9ddc12641" translate="yes" xml:space="preserve">
          <source>If you do not already have Composer installed, you may do so by following the instructions at &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;getcomposer.org&lt;/a&gt;. On Linux and Mac OS X, you'll run the following commands:</source>
          <target state="translated">Composerをまだインストールしていない場合は、&lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;getcomposer.org&lt;/a&gt;の指示に従ってインストールできます。LinuxおよびMac OS Xでは、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="34e02e29d3b917fae8bc5e506145f3a5d872502e" translate="yes" xml:space="preserve">
          <source>If you do not call the &lt;a href=&quot;yii-db-query#select()-detail&quot;&gt;select()&lt;/a&gt; method when building a query, &lt;code&gt;*&lt;/code&gt; will be selected, which means selecting &lt;em&gt;all&lt;/em&gt; columns.</source>
          <target state="translated">クエリの作成時に&lt;a href=&quot;yii-db-query#select()-detail&quot;&gt;select（）&lt;/a&gt;メソッドを呼び出さない場合、 &lt;code&gt;*&lt;/code&gt; が選択されます。つまり、&lt;em&gt;すべての&lt;/em&gt;列が選択されます。</target>
        </trans-unit>
        <trans-unit id="9bbd9756599724c118670f73c6822737993caac2" translate="yes" xml:space="preserve">
          <source>If you do not set this property, it means the source asset files are located under &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="translated">このプロパティを設定しない場合は、ソースアセットファイルが&lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;$ basePathの&lt;/a&gt;下にあることを意味します。</target>
        </trans-unit>
        <trans-unit id="15df1e1bf52515ef5c414fda35e0f81dc0c5cf8b" translate="yes" xml:space="preserve">
          <source>If you do not specify a container, the method will first try &lt;code&gt;Yii::$app&lt;/code&gt; followed by &lt;code&gt;Yii::$container&lt;/code&gt;.</source>
          <target state="translated">コンテナーを指定しない場合、メソッドは最初に &lt;code&gt;Yii::$app&lt;/code&gt; 試行し、次に &lt;code&gt;Yii::$container&lt;/code&gt; 試行します。</target>
        </trans-unit>
        <trans-unit id="bbfbd8d8baef3ed91f59f15a458d0e79092210a1" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;categories&lt;/a&gt; property, it means the target will process messages of &lt;em&gt;any&lt;/em&gt; category.</source>
          <target state="translated">あなたが指定しない場合は&lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;カテゴリの&lt;/a&gt;プロパティを、そのターゲットはのメッセージを処理することを意味&lt;em&gt;任意の&lt;/em&gt;カテゴリを。</target>
        </trans-unit>
        <trans-unit id="c83976f53814a5c6e157693af42cd201c01528fa" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;a href=&quot;yii-log-target#%24levels-detail&quot;&gt;levels&lt;/a&gt; property, it means the target will process messages of &lt;em&gt;any&lt;/em&gt; severity level.</source>
          <target state="translated">&lt;a href=&quot;yii-log-target#%24levels-detail&quot;&gt;levels&lt;/a&gt;プロパティを指定しない場合、ターゲットが&lt;em&gt;任意の&lt;/em&gt;重大度レベルのメッセージを処理することを意味します。</target>
        </trans-unit>
        <trans-unit id="a0dc687b3f47759a70f2551c6991ad2949f4ffe4" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;on&lt;/code&gt; property, the rule would be applied in all scenarios. A rule is called an &lt;em&gt;active rule&lt;/em&gt; if it can be applied in the current &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;scenario&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;on&lt;/code&gt; プロパティを指定しない場合、ルールはすべてのシナリオに適用されます。現在の&lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;シナリオに&lt;/a&gt;適用できる場合、ルールは&lt;em&gt;アクティブルール&lt;/em&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="02e99cf5bbefbfce55e712a3a93d5a3e326a4e7e" translate="yes" xml:space="preserve">
          <source>If you do not want to use automatically generated labels, you may override &lt;a href=&quot;yii-base-model#attributeLabels()-detail&quot;&gt;yii\base\Model::attributeLabels()&lt;/a&gt; to explicitly declare attribute labels. For example,</source>
          <target state="translated">自動生成されたラベルを使用したくない場合は、&lt;a href=&quot;yii-base-model#attributeLabels()-detail&quot;&gt;yii \ base \ Model :: attributeLabels（）&lt;/a&gt;をオーバーライドして、属性ラベルを明示的に宣言できます。例えば、</target>
        </trans-unit>
        <trans-unit id="2233096be3004f1317ef8ce2d620d5044d2276ed" translate="yes" xml:space="preserve">
          <source>If you don't have access to the server configuration, you can setup &lt;a href=&quot;yii-filters-hostcontrol&quot;&gt;yii\filters\HostControl&lt;/a&gt; filter at application level in order to protect against such kind of attack:</source>
          <target state="translated">サーバー構成にアクセスできない場合は、そのような種類の攻撃から保護するために、アプリケーションレベルで&lt;a href=&quot;yii-filters-hostcontrol&quot;&gt;yii \ filters \ HostControl&lt;/a&gt;フィルターを設定できます。</target>
        </trans-unit>
        <trans-unit id="297fdf89d1ba18aa001365c462a967490eb1353d" translate="yes" xml:space="preserve">
          <source>If you don't want a filter for this data column, set this value to be false.</source>
          <target state="translated">このデータ列にフィルタをかけたくない場合は、この値を false に設定します。</target>
        </trans-unit>
        <trans-unit id="8f16ee7856b24b7e128f183542176ba6c98a7896" translate="yes" xml:space="preserve">
          <source>If you don't want to hardcode what users have certain roles, don't put &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; calls into the command. Instead, create either UI or console command to manage assignments.</source>
          <target state="translated">ユーザーが特定の役割を持っているものをハードコードしたくない場合は、コマンドに &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; 呼び出しを入れないでください。代わりに、UIまたはコンソールコマンドを作成して、割り当てを管理します。</target>
        </trans-unit>
        <trans-unit id="10dd3b49a623e880cab614b0f3f3f9cb137d0787" translate="yes" xml:space="preserve">
          <source>If you don't want to hardcode which users have certain roles, don't put &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; calls in migrations. Instead, create either UI or console command to manage assignments.</source>
          <target state="translated">特定の役割を持つユーザーをハードコーディングしたくない場合は、移行で &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; 呼び出しを行わないでください。代わりに、UIまたはコンソールコマンドを作成して、割り当てを管理します。</target>
        </trans-unit>
        <trans-unit id="75c1aeab64a68a337bfda4419659b6450aa83471" translate="yes" xml:space="preserve">
          <source>If you don't want to use migration and need SQL instead, files for all databases are in migrations directory.</source>
          <target state="translated">移行を使用せず、代わりに SQL が必要な場合は、すべてのデータベースのファイルが migrations ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="81567f29f5cd049f5d932ed4b5a9c26bb0d3983c" translate="yes" xml:space="preserve">
          <source>If you had Composer already installed before, make sure you use an up to date version. You can update Composer by running &lt;code&gt;composer self-update&lt;/code&gt;.</source>
          <target state="translated">以前にComposerがすでにインストールされている場合は、必ず最新バージョンを使用してください。 &lt;code&gt;composer self-update&lt;/code&gt; を実行すると、Composerを更新できます。</target>
        </trans-unit>
        <trans-unit id="226c85b94e088f58e757c44ac9999f77253a0581" translate="yes" xml:space="preserve">
          <source>If you have multiple migrations that use the same database, it is recommended that you create a base migration class with the above &lt;code&gt;init()&lt;/code&gt; code. Then each migration class can extend from this base class.</source>
          <target state="translated">同じデータベースを使用する複数の移行がある場合は、上記の &lt;code&gt;init()&lt;/code&gt; コードを使用して基本移行クラスを作成することをお勧めします。その後、各移行クラスはこの基本クラスから拡張できます。</target>
        </trans-unit>
        <trans-unit id="3ca820c6a3f148bcdc5cc2897e2506bd35c89231" translate="yes" xml:space="preserve">
          <source>If you have registered two aliases '@foo' and '@foo/bar'. Then translating '@foo/bar/config' would replace the part '@foo/bar' (instead of '@foo') with the corresponding registered path. This is because the longest alias takes precedence.</source>
          <target state="translated">二つのエイリアス '@foo' と '@foo/bar' を登録しているとします。すると、'@foo/bar/config' を翻訳すると、'@foo/bar' の部分が('@foo' の代わりに)対応する登録されたパスに置き換えられます。これは、最も長いエイリアスが優先されるためです。</target>
        </trans-unit>
        <trans-unit id="074a0067623a940403724020352ca9fff63461f7" translate="yes" xml:space="preserve">
          <source>If you have set up &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt;, you may set this field to &lt;code&gt;null&lt;/code&gt; in order to disable usage of migrations that are not namespaced.</source>
          <target state="translated">&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespaces&lt;/a&gt;を設定している場合は、このフィールドを &lt;code&gt;null&lt;/code&gt; に設定して、名前空間のない移行の使用を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="bf461844ffbd3c10d5abbe039431781f607e5f46" translate="yes" xml:space="preserve">
          <source>If you just want to use query caching for a single query, you can call &lt;a href=&quot;yii-db-command#cache()-detail&quot;&gt;yii\db\Command::cache()&lt;/a&gt; when building the command. For example,</source>
          <target state="translated">単一のクエリに対してクエリキャッシュを使用するだけの場合は、コマンドをビルドするときに&lt;a href=&quot;yii-db-command#cache()-detail&quot;&gt;yii \ db \ Command :: cache（）を&lt;/a&gt;呼び出すことができます。例えば、</target>
        </trans-unit>
        <trans-unit id="c5064b4e1cd50b3f1237adabca0cffd7e52dc8a2" translate="yes" xml:space="preserve">
          <source>If you know the input type in advance, it's more convenient to use the shortcut methods:</source>
          <target state="translated">事前に入力タイプがわかっていれば、ショートカットの方法を使った方が便利です。</target>
        </trans-unit>
        <trans-unit id="20205f9420f300877ed35da67fba58c90dbbbc0d" translate="yes" xml:space="preserve">
          <source>If you miss &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; or switch the order of &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; and &lt;code&gt;\Yii::endProfile('block2')&lt;/code&gt;, the performance profiling will not work.</source>
          <target state="translated">あなたが欠場した場合 &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; か、の順に切り替える &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; と &lt;code&gt;\Yii::endProfile('block2')&lt;/code&gt; 、パフォーマンスのプロファイリングは機能しません。</target>
        </trans-unit>
        <trans-unit id="17e6d86332962c0e1a0a19ec8415cad80fa6504b" translate="yes" xml:space="preserve">
          <source>If you need to build string dynamically combining multiple styles it's better to use &lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat()&lt;/a&gt;:</source>
          <target state="translated">複数のスタイルを動的に組み合わせて文字列を作成する必要がある場合は、&lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat（）&lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d50f41ee67e8569f928d2157e8866cbe9e336b7c" translate="yes" xml:space="preserve">
          <source>If you need to generate &lt;code&gt;mailto&lt;/code&gt; links, you can use the following code:</source>
          <target state="translated">&lt;code&gt;mailto&lt;/code&gt; リンクを生成する必要がある場合は、次のコードを使用できます。</target>
        </trans-unit>
        <trans-unit id="9b2f9aa5737990c5740d2b149e2d7b6b607e62f6" translate="yes" xml:space="preserve">
          <source>If you need to pass additional data to each view, you can use the &lt;a href=&quot;yii-widgets-listview#%24viewParams-detail&quot;&gt;$viewParams&lt;/a&gt; property to pass key value pairs like the following:</source>
          <target state="translated">各ビューに追加のデータを渡す必要がある場合は、&lt;a href=&quot;yii-widgets-listview#%24viewParams-detail&quot;&gt;$ viewParams&lt;/a&gt;プロパティを使用して、次のようなキーと値のペアを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="792f7deec5e7c3ac4cfae0908b2093492aab2f2e" translate="yes" xml:space="preserve">
          <source>If you need to perform asynchronous client-side validation, you can create &lt;a href=&quot;http://api.jquery.com/category/deferred-object/&quot;&gt;Deferred objects&lt;/a&gt;. For example, to perform a custom AJAX validation, you can use the following code:</source>
          <target state="translated">非同期のクライアント側検証を実行する必要がある場合は、&lt;a href=&quot;http://api.jquery.com/category/deferred-object/&quot;&gt;Deferredオブジェクト&lt;/a&gt;を作成できます。たとえば、カスタムAJAX検証を実行するには、次のコードを使用できます。</target>
        </trans-unit>
        <trans-unit id="d8a69e74f2142a7da431174b057d7c7fab686eff" translate="yes" xml:space="preserve">
          <source>If you need to perform multiple validations against several values, you can use &lt;a href=&quot;yii-base-dynamicmodel&quot;&gt;yii\base\DynamicModel&lt;/a&gt; which supports declaring both attributes and rules on the fly. Its usage is like the following:</source>
          <target state="translated">複数の値に対して複数の検証を実行する必要がある場合は、属性とルールの両方をその場で宣言することをサポートする&lt;a href=&quot;yii-base-dynamicmodel&quot;&gt;yii \ base \ DynamicModel&lt;/a&gt;を使用できます。その使用法は次のようになります。</target>
        </trans-unit>
        <trans-unit id="f08e17867db1f3d19412df39187a07c792cfbd39" translate="yes" xml:space="preserve">
          <source>If you only need to perform one type of validation (e.g. validating email addresses), you may call the &lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;validate()&lt;/a&gt; method of the desired validator, like the following:</source>
          <target state="translated">1種類の検証（たとえば、電子メールアドレスの検証）のみを実行する必要がある場合は、次のように、目的のバリデーターの&lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;validate（）&lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="92fe42db235098b77ea17bda7aa92d3f4609001d" translate="yes" xml:space="preserve">
          <source>If you only want to install the core framework and would like to build an entire application from scratch, you may follow the instructions as explained in &lt;a href=&quot;guide-tutorial-start-from-scratch&quot;&gt;Building Application from Scratch&lt;/a&gt;.</source>
          <target state="translated">あなたが唯一のコアフレームワークをインストールすると、最初からアプリケーション全体を構築したい場合で説明したように、あなたは指示に従うことができる&lt;a href=&quot;guide-tutorial-start-from-scratch&quot;&gt;スクラッチから構築アプリケーション&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5132167b73f3206327b1551caa7d3bd82c21435d" translate="yes" xml:space="preserve">
          <source>If you override the &lt;a href=&quot;yii-base-object#init()-detail&quot;&gt;yii\base\Object::init()&lt;/a&gt; method, make sure you call the parent implementation of &lt;code&gt;init()&lt;/code&gt;&lt;em&gt;at the beginning&lt;/em&gt; of your &lt;code&gt;init()&lt;/code&gt; method.</source>
          <target state="translated">あなたがオーバーライドする場合&lt;a href=&quot;yii-base-object#init()-detail&quot;&gt;のYii \ベース\オブジェクト::のinit（）&lt;/a&gt;メソッドを、必ず親の実装を呼び出し作る &lt;code&gt;init()&lt;/code&gt; メソッドを&lt;em&gt;最初に&lt;/em&gt;あなたの &lt;code&gt;init()&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="f5ff7ba9e299b08518cab5f6fc7a7b51d30603d9" translate="yes" xml:space="preserve">
          <source>If you override the constructor, specify a &lt;code&gt;$config&lt;/code&gt; parameter as the constructor's &lt;em&gt;last&lt;/em&gt; parameter, and then pass this parameter to the parent constructor.</source>
          <target state="translated">コンストラクターをオーバーライドする場合は、 &lt;code&gt;$config&lt;/code&gt; パラメーターをコンストラクターの&lt;em&gt;最後の&lt;/em&gt;パラメーターとして指定し、このパラメーターを親コンストラクターに渡します。</target>
        </trans-unit>
        <trans-unit id="cda60d790c37655ba5e4268ca2f7190265c10c83" translate="yes" xml:space="preserve">
          <source>If you override this method, make sure you call the parent implementation first.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、必ず最初に親の実装を呼び出すようにしてください。</target>
        </trans-unit>
        <trans-unit id="eef6866dec6da3b2206202cc146d4c98d8a132d8" translate="yes" xml:space="preserve">
          <source>If you override this method, make sure you call the parent implementation in the last.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、必ず最後に親の実装を呼び出すようにしてください。</target>
        </trans-unit>
        <trans-unit id="789a89c920137236a0377112c245ee793f9f0db7" translate="yes" xml:space="preserve">
          <source>If you override this method, please make sure you call the parent implementation.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、必ず親の実装を呼び出すようにしてください。</target>
        </trans-unit>
        <trans-unit id="00ca879ed9c67ca95fe8e219c8f8ea6b15834a0a" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the index.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、&lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData（）&lt;/a&gt;によって返されたデータをインデックスに入力できるように、親の実装を呼び出すことを検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="5d394008a8d1ec16ea61030a724ae789587aec39" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the index.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、&lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData（）&lt;/a&gt;によって返されたデータをインデックスに入力できるように、親の実装を呼び出すことを検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="fb5638ac19004d386e25e4df5ee6752ad149ab1d" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the table.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、&lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData（）&lt;/a&gt;によって返されたデータをテーブルに入力できるように、親実装を呼び出すことを検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="3524d4f731d1186bff33d0f612c1a67ae12da79a" translate="yes" xml:space="preserve">
          <source>If you override this method, your code should look like the following:</source>
          <target state="translated">このメソッドをオーバーライドすると、コードは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="41bdba2faa8095bf8604ac901078b7a369d4754b" translate="yes" xml:space="preserve">
          <source>If you previously created the &lt;code&gt;controllers/CountryController.php&lt;/code&gt; and &lt;code&gt;views/country/index.php&lt;/code&gt; files (in the databases section of the guide), check the &quot;overwrite&quot; box to replace them. (The previous versions did not have full CRUD support.)</source>
          <target state="translated">以前に &lt;code&gt;controllers/CountryController.php&lt;/code&gt; および &lt;code&gt;views/country/index.php&lt;/code&gt; ファイルを作成した場合（ガイドのデータベースセクションにある）、[上書き]チェックボックスをオンにして置き換えます。（以前のバージョンは完全なCRUDサポートを持っていませんでした。）</target>
        </trans-unit>
        <trans-unit id="4db19082b234b0490ce30c7c7c6df9fd6697790d" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the container element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">コンテナ要素にカスタム &lt;code&gt;id&lt;/code&gt; を設定する場合、それに応じて&lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selectors&lt;/a&gt;を調整する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="d635d4b83c6c1478ebc67e883a1fdc20f440e21b" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the error element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">エラー要素にカスタム &lt;code&gt;id&lt;/code&gt; を設定する場合、それに応じて&lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selectors&lt;/a&gt;を調整する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="af94c050f74ecdf042ac85674c3bdcad83c69f7d" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the input element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">input要素にカスタム &lt;code&gt;id&lt;/code&gt; を設定する場合、それに応じて&lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selectors&lt;/a&gt;を調整する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="75d36be3956961e96969f915a0b15f3fa2b95cbd" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the textarea element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">textarea要素にカスタム &lt;code&gt;id&lt;/code&gt; を設定する場合、それに応じて&lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selectors&lt;/a&gt;を調整する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="81d5471e4053253eb9f42280d7521cb6afd7d948" translate="yes" xml:space="preserve">
          <source>If you specify an invalid limit or offset (e.g. a negative value), it will be ignored.</source>
          <target state="translated">無効な制限値やオフセット(負の値など)を指定した場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="a34fe2f0885048bb9fe4db8cb3e69dd8b5091175" translate="yes" xml:space="preserve">
          <source>If you specify the query result to be indexed by some column via &lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;yii\db\Query::indexBy()&lt;/a&gt;, the batch query will still keep the proper index.</source>
          <target state="translated">クエリ結果を&lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;yii \ db \ Query :: indexBy（）&lt;/a&gt;を介していくつかの列でインデックスを付けるように指定した場合、バッチクエリは引き続き適切なインデックスを保持します。</target>
        </trans-unit>
        <trans-unit id="7ac4b149f8d3d808c930cc0b94116aa25c9764ca" translate="yes" xml:space="preserve">
          <source>If you specify view name as a scalar string, its rendering result will be used as HTML body, while plain text body will be composed by removing all HTML entities from HTML one.</source>
          <target state="translated">ビュー名をスカラ文字列で指定した場合は、そのレンダリング結果がHTMLボディとして使用され、プレーンテキストボディはHTMLからすべてのHTMLエンティティを削除して構成されます。</target>
        </trans-unit>
        <trans-unit id="eb19bfefe929b6c29848d7e1776c6d00c34d3cc5" translate="yes" xml:space="preserve">
          <source>If you use callback as an attribute value it will be called with the following three parameters:</source>
          <target state="translated">callbackを属性値として使用した場合、以下の3つのパラメータで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6543e55b509c45e792379a58952614f592b38291" translate="yes" xml:space="preserve">
          <source>If you use the &quot;yii&quot; JavaScript module, it will handle the AJAX redirection as described above. Otherwise, you should write the following JavaScript code to handle the redirection:</source>
          <target state="translated">yii&quot; JavaScriptモジュールを使う場合、上で説明したようにAJAXリダイレクトを処理します。そうでなければ、リダイレクトを処理するために以下のJavaScriptコードを書く必要があります。</target>
        </trans-unit>
        <trans-unit id="d48e18a9ccf2ddbe904498f6864ad878a0ea4b3a" translate="yes" xml:space="preserve">
          <source>If you want an action parameter to accept array values, you should type-hint it with &lt;code&gt;array&lt;/code&gt;, like the following:</source>
          <target state="translated">アクションパラメータで配列値を受け入れる場合は、次のように、 &lt;code&gt;array&lt;/code&gt; でタイプヒントを入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="9744fe362c811352b1b65a34f3e252ff2d358a3a" translate="yes" xml:space="preserve">
          <source>If you want multiple choices to be selectable, you can use a checkbox list:</source>
          <target state="translated">複数の選択肢を選択可能にしたい場合は、チェックボックスリストを使用することができます。</target>
        </trans-unit>
        <trans-unit id="caa73650d998bff5569c491747f3a175e8cd1f1e" translate="yes" xml:space="preserve">
          <source>If you want several migrations to be applied and tracked down completely separated from each other, you can configure multiple migration commands which will use different namespaces and migration history tables:</source>
          <target state="translated">複数の移行を適用し、完全に分離して追跡したい場合は、異なる名前空間と移行履歴テーブルを使用する複数の移行コマンドを設定することができます。</target>
        </trans-unit>
        <trans-unit id="3d46b091dc01e90d1a3c337e76eb07f5e2dbf441" translate="yes" xml:space="preserve">
          <source>If you want to access other data in layouts, you have to use the pull method as described in the &lt;a href=&quot;#accessing-data-in-views&quot;&gt;Accessing Data in Views&lt;/a&gt; subsection. If you want to pass data from a content view to a layout, you may use the method described in the &lt;a href=&quot;#sharing-data-among-views&quot;&gt;Sharing Data among Views&lt;/a&gt; subsection.</source>
          <target state="translated">レイアウト内の他のデータにアクセスする場合は&lt;a href=&quot;#accessing-data-in-views&quot;&gt;、ビューのデータへのアクセスの&lt;/a&gt;サブセクションで説明されているように、pullメソッドを使用する必要があります。コンテンツビューからレイアウトにデータを渡す場合は、&lt;a href=&quot;#sharing-data-among-views&quot;&gt;「ビュー間でのデータ&lt;/a&gt;の共有」サブセクションで説明されている方法を使用できます。</target>
        </trans-unit>
        <trans-unit id="96c97c9d156f964d584377c0f7dc4b51df7486ab" translate="yes" xml:space="preserve">
          <source>If you want to authenticate users using username and password, you should provide the &lt;a href=&quot;yii-filters-auth-httpbasicauth#%24auth-detail&quot;&gt;$auth&lt;/a&gt; function for example like the following:</source>
          <target state="translated">ユーザー名とパスワードを使用してユーザーを認証する場合は、たとえば次のように&lt;a href=&quot;yii-filters-auth-httpbasicauth#%24auth-detail&quot;&gt;$ auth&lt;/a&gt;関数を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="973062f3d1c199266c4bb56840280c6f05a20624" translate="yes" xml:space="preserve">
          <source>If you want to build UI element manually, you may use &lt;a href=&quot;yii-data-pagination#createUrl()-detail&quot;&gt;yii\data\Pagination::createUrl()&lt;/a&gt; to create URLs that would lead to different pages. The method requires a page parameter and will create a properly formatted URL containing the page parameter. For example,</source>
          <target state="translated">UI要素を手動で構築する場合は、&lt;a href=&quot;yii-data-pagination#createUrl()-detail&quot;&gt;yii \ data \ Pagination :: createUrl（）&lt;/a&gt;を使用して、異なるページにつながるURLを作成できます。このメソッドはページパラメータを必要とし、ページパラメータを含む適切にフォーマットされたURLを作成します。例えば、</target>
        </trans-unit>
        <trans-unit id="cfdac1c47758b755ae4fc2575033927454706401" translate="yes" xml:space="preserve">
          <source>If you want to configure it:</source>
          <target state="translated">設定したい場合は</target>
        </trans-unit>
        <trans-unit id="8784c117ab38842c5a718d041de7d5d60cdf83f5" translate="yes" xml:space="preserve">
          <source>If you want to create a URL with an anchor, you can use the array format with a &lt;code&gt;#&lt;/code&gt; parameter. For example,</source>
          <target state="translated">アンカー付きのURLを作成する場合は、 &lt;code&gt;#&lt;/code&gt; パラメーターを指定した配列形式を使用できます。例えば、</target>
        </trans-unit>
        <trans-unit id="4930d393b0bf6975b94b5fdf61801cb1fcd6e99a" translate="yes" xml:space="preserve">
          <source>If you want to ensure that the &lt;code&gt;$unbufferedDb&lt;/code&gt; has exactly the same PDO attributes like the original buffered &lt;code&gt;$db&lt;/code&gt; but the &lt;code&gt;PDO::MYSQL_ATTR_USE_BUFFERED_QUERY&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;https://github.com/yiisoft/yii2/issues/8420#issuecomment-301423833&quot;&gt;consider a deep copy of &lt;code&gt;$db&lt;/code&gt;&lt;/a&gt;, set it to false manually.</source>
          <target state="translated">&lt;code&gt;$unbufferedDb&lt;/code&gt; が元のバッファーされた &lt;code&gt;$db&lt;/code&gt; と同じPDO属性を持っているが、 &lt;code&gt;PDO::MYSQL_ATTR_USE_BUFFERED_QUERY&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; であることを確認したい場合は&lt;a href=&quot;https://github.com/yiisoft/yii2/issues/8420#issuecomment-301423833&quot;&gt;、 &lt;code&gt;$db&lt;/code&gt; &lt;/a&gt;ディープコピーを検討し、手動でfalseに設定します。</target>
        </trans-unit>
        <trans-unit id="ff5cf31e060bb3ae5d605ca84033c8473ea9f53c" translate="yes" xml:space="preserve">
          <source>If you want to show an error page telling the user that his request is invalid or unexpected, you may simply throw an &lt;a href=&quot;yii-web-httpexception&quot;&gt;HTTP exception&lt;/a&gt;, such as &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt;. The error handler will correctly set the HTTP status code of the response and use an appropriate error view to display the error message.</source>
          <target state="translated">リクエストが無効または予期しないものであることをユーザーに知らせるエラーページを表示する場合は、&lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii \ web \ NotFoundHttpException&lt;/a&gt;などの&lt;a href=&quot;yii-web-httpexception&quot;&gt;HTTP例外を&lt;/a&gt;スローするだけです。エラーハンドラーは、応答のHTTPステータスコードを正しく設定し、適切なエラービューを使用してエラーメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="d04941355e3e0b34ca78d75fc75e90af4a129166" translate="yes" xml:space="preserve">
          <source>If you want to specify additional properties of the style tag, pass an array of name-values to the second argument. The last argument is a unique ID that is used to identify the style block and make sure it is only added once in case the same style is registered from different places in the code.</source>
          <target state="translated">スタイルタグのプロパティを追加で指定したい場合は、第2引数に名前の値の配列を渡します。最後の引数には、スタイルブロックを識別するためのユニークなIDを指定し、コード内の異なる場所から同じスタイルが登録された場合に一度しか追加されないことを確認します。</target>
        </trans-unit>
        <trans-unit id="181efa07bdef332fb8a67bc20224485544c2983e" translate="yes" xml:space="preserve">
          <source>If you want to specify what meta tags to generate in content views, you can call &lt;a href=&quot;yii-web-view#registerMetaTag()-detail&quot;&gt;yii\web\View::registerMetaTag()&lt;/a&gt; in a content view, like the following:</source>
          <target state="translated">コンテンツビューで生成するメタタグを指定する場合は、次のようにコンテンツビューで&lt;a href=&quot;yii-web-view#registerMetaTag()-detail&quot;&gt;yii \ web \ View :: registerMetaTag（）&lt;/a&gt;を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="0df30b48387d57bac7fe29b7f26676c4821e6997" translate="yes" xml:space="preserve">
          <source>If you want to start a transaction with the slave connection, you should explicitly do so, like the following:</source>
          <target state="translated">スレーブ接続でトランザクションを開始したい場合は、以下のように明示的に行う必要があります。</target>
        </trans-unit>
        <trans-unit id="5ca04f49460e5df3ea9089fdbecfc9801486620f" translate="yes" xml:space="preserve">
          <source>If you want to start with a more sophisticated application, better suited to team development environments, you may consider installing the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt;.</source>
          <target state="translated">チーム開発環境により適した、より洗練されたアプリケーションから始めたい場合は、&lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Templateの&lt;/a&gt;インストールを検討してください。</target>
        </trans-unit>
        <trans-unit id="a4fbaac18f251bdf4e9cb8186739748bfd2b2b0c" translate="yes" xml:space="preserve">
          <source>If you want to support all three authentication methods explained above, you can use &lt;code&gt;CompositeAuth&lt;/code&gt; like the following,</source>
          <target state="translated">上記で説明した3つの認証方法すべてをサポートする場合は、次のように &lt;code&gt;CompositeAuth&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="a16ee12993c92cce650c40593db10383ad12ebe3" translate="yes" xml:space="preserve">
          <source>If you want to translate the messages for a module and avoid using a single translation file for all the messages, you can do it like the following:</source>
          <target state="translated">モジュールのメッセージを翻訳して、すべてのメッセージに単一の翻訳ファイルを使用しないようにしたい場合は、以下のようにすることができます。</target>
        </trans-unit>
        <trans-unit id="fc549bc1078d0feb282c28a7ae4502ae7a3a403c" translate="yes" xml:space="preserve">
          <source>If you want to turn off client-side validation completely, you may configure the &lt;a href=&quot;yii-widgets-activeform#%24enableClientValidation-detail&quot;&gt;yii\widgets\ActiveForm::$enableClientValidation&lt;/a&gt; property to be &lt;code&gt;false&lt;/code&gt;. You may also turn off client-side validation of individual input fields by configuring their &lt;a href=&quot;yii-widgets-activefield#%24enableClientValidation-detail&quot;&gt;yii\widgets\ActiveField::$enableClientValidation&lt;/a&gt; property to be false. When &lt;code&gt;enableClientValidation&lt;/code&gt; is configured at both the input field level and the form level, the former will take precedence.</source>
          <target state="translated">クライアント側の検証を完全にオフにする場合は、&lt;a href=&quot;yii-widgets-activeform#%24enableClientValidation-detail&quot;&gt;yii \ widgets \ ActiveForm :: $ enableClientValidation&lt;/a&gt;プロパティを &lt;code&gt;false&lt;/code&gt; に設定できます。また、&lt;a href=&quot;yii-widgets-activefield#%24enableClientValidation-detail&quot;&gt;yii \ widgets \ ActiveField :: $ enableClientValidation&lt;/a&gt;プロパティをfalseに設定して、個々の入力フィールドのクライアント側の検証をオフにすることもできます。場合 &lt;code&gt;enableClientValidation&lt;/code&gt; が入力フィールドレベルおよびフォームレベルの両方で構成され、前者が優先されます。</target>
        </trans-unit>
        <trans-unit id="4d5d579ce05e6854d9f90531c98c9e2a9306c487" translate="yes" xml:space="preserve">
          <source>If you want to use a different database connection other than the &lt;code&gt;db&lt;/code&gt; component, you should override the &lt;a href=&quot;yii-db-activerecord#getDb()-detail&quot;&gt;getDb()&lt;/a&gt; method:</source>
          <target state="translated">&lt;code&gt;db&lt;/code&gt; コンポーネント以外の別のデータベース接続を使用する場合は、&lt;a href=&quot;yii-db-activerecord#getDb()-detail&quot;&gt;getDb（）&lt;/a&gt;メソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="52f55d3c04e1f5c45cc778dbf626fbdf705ac5a9" translate="yes" xml:space="preserve">
          <source>If you want to use a widget that does not have &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;attribute&lt;/code&gt; properties, please use &lt;a href=&quot;yii-widgets-activefield#render()-detail&quot;&gt;render()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; と &lt;code&gt;attribute&lt;/code&gt; プロパティを持たないウィジェットを使用したい場合は、代わりに&lt;a href=&quot;yii-widgets-activefield#render()-detail&quot;&gt;render（）&lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="4232e534d47ba4fe2443dc263ccd877595f5005a" translate="yes" xml:space="preserve">
          <source>If you want to use an absolute url you can call &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii\helpers\Url::to()&lt;/a&gt; yourself, before passing the URL to this method, like this:</source>
          <target state="translated">絶対URLを使用する場合は、次のように、このメソッドにURLを渡す前に、自分で&lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii \ helpers \ Url :: to（）&lt;/a&gt;を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="9c00554841920360df5b674312015f71e11043fa" translate="yes" xml:space="preserve">
          <source>If you want to use an external style in a CSS file:</source>
          <target state="translated">CSSファイルで外部スタイルを使用したい場合。</target>
        </trans-unit>
        <trans-unit id="b3c0dd1714d3e1f73614955b786e10ad9946b51d" translate="yes" xml:space="preserve">
          <source>If you want your validator to support validating a value without a model, you should also override &lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;yii\validators\Validator::validate()&lt;/a&gt;. You may also override &lt;a href=&quot;yii-validators-validator#validateValue()-detail&quot;&gt;yii\validators\Validator::validateValue()&lt;/a&gt; instead of &lt;code&gt;validateAttribute()&lt;/code&gt; and &lt;code&gt;validate()&lt;/code&gt; because by default the latter two methods are implemented by calling &lt;code&gt;validateValue()&lt;/code&gt;.</source>
          <target state="translated">バリデーターがモデルなしの値の検証をサポートするようにしたい場合は、&lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;yii \ validators \ Validator :: validate（）&lt;/a&gt;もオーバーライドする必要があります。 &lt;code&gt;validateAttribute()&lt;/code&gt; および &lt;code&gt;validate()&lt;/code&gt; の代わりに&lt;a href=&quot;yii-validators-validator#validateValue()-detail&quot;&gt;yii \ validators \ Validator :: validateValue（）を&lt;/a&gt;オーバーライドすることもできます。デフォルトでは、後者の2つのメソッドは &lt;code&gt;validateValue()&lt;/code&gt; を呼び出すことで実装されているためです。</target>
        </trans-unit>
        <trans-unit id="75f25d4428efca03d2fa5ec005ba3811fa93de25" translate="yes" xml:space="preserve">
          <source>If you wish to render the report with your own representation, use &lt;a href=&quot;yiirequirementchecker#getResult()-detail&quot;&gt;getResult()&lt;/a&gt; instead of &lt;a href=&quot;yiirequirementchecker#render()-detail&quot;&gt;render()&lt;/a&gt;</source>
          <target state="translated">あなたがあなた自身の表現でレポートを表示したい場合は、使用&lt;a href=&quot;yiirequirementchecker#getResult()-detail&quot;&gt;のgetResultを（）&lt;/a&gt;の代わりに&lt;a href=&quot;yiirequirementchecker#render()-detail&quot;&gt;）（レンダリング&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aecdccc20549210b9767f57636f6f477e22ea4f8" translate="yes" xml:space="preserve">
          <source>If your DBMS supports Savepoint, you may nest multiple transactions like the following:</source>
          <target state="translated">DBMSがSavepointをサポートしている場合、以下のように複数のトランザクションをネストすることができます。</target>
        </trans-unit>
        <trans-unit id="dc1b68aacc536f7e825ed1e2f72965abafe596d3" translate="yes" xml:space="preserve">
          <source>If your application allows user signup you need to assign roles to these new users once. For example, in order for all signed up users to become authors in your advanced project template you need to modify &lt;code&gt;frontend\models\SignupForm::signup()&lt;/code&gt; as follows:</source>
          <target state="translated">アプリケーションでユーザーのサインアップが許可されている場合は、これらの新しいユーザーに一度ロールを割り当てる必要があります。たとえば、サインアップしたすべてのユーザーが高度なプロジェクトテンプレートの作成者になるためには、 &lt;code&gt;frontend\models\SignupForm::signup()&lt;/code&gt; を次のように変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c5f333f02e07ebac084592c1d7ddcf8419143df" translate="yes" xml:space="preserve">
          <source>If your application enables &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;pretty URLs&lt;/a&gt;, you can then access Gii via URL: &lt;code&gt;http://localhost/path/to/index.php/gii&lt;/code&gt;</source>
          <target state="translated">アプリケーションで&lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;プリティURLが&lt;/a&gt;有効になっている場合は、次のURLを介してGiiにアクセスできます： &lt;code&gt;http://localhost/path/to/index.php/gii&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe801a3b4f552be6a8d316446a768ffa0b9b757d" translate="yes" xml:space="preserve">
          <source>If your application supports multiple languages and you want to display pages in the language that is the most preferred by the end user, you may use the language negotiation method &lt;a href=&quot;yii-web-request#getPreferredLanguage()-detail&quot;&gt;yii\web\Request::getPreferredLanguage()&lt;/a&gt;. This method takes a list of languages supported by your application, compares them with &lt;a href=&quot;yii-web-request#%24acceptableLanguages-detail&quot;&gt;acceptableLanguages&lt;/a&gt;, and returns the most appropriate language.</source>
          <target state="translated">アプリケーションが複数の言語をサポートしていて、エンドユーザーが最も好む言語でページを表示したい場合は、言語ネゴシエーションメソッド&lt;a href=&quot;yii-web-request#getPreferredLanguage()-detail&quot;&gt;yii \ web \ Request :: getPreferredLanguage（）を使用でき&lt;/a&gt;ます。このメソッドは、アプリケーションでサポートされている言語のリストを取得し、それらを&lt;a href=&quot;yii-web-request#%24acceptableLanguages-detail&quot;&gt;acceptableLanguages&lt;/a&gt;と比較して、最も適切な言語を返します。</target>
        </trans-unit>
        <trans-unit id="30540e5536bbc5532e4ac632d4b4fbe84251097e" translate="yes" xml:space="preserve">
          <source>If your attribute name is different, you may configure the &lt;a href=&quot;yii-behaviors-sluggablebehavior#%24slugAttribute-detail&quot;&gt;$slugAttribute&lt;/a&gt; property like the following:</source>
          <target state="translated">属性名が異なる場合は、&lt;a href=&quot;yii-behaviors-sluggablebehavior#%24slugAttribute-detail&quot;&gt;$ slugAttribute&lt;/a&gt;プロパティを次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="d12f53fc7cc057edf533cc2d5d0b58fb6435d569" translate="yes" xml:space="preserve">
          <source>If your attribute names are different or you want to use a different way of calculating the timestamp, you may configure the &lt;a href=&quot;yii-behaviors-timestampbehavior#%24createdAtAttribute-detail&quot;&gt;$createdAtAttribute&lt;/a&gt;, &lt;a href=&quot;yii-behaviors-timestampbehavior#%24updatedAtAttribute-detail&quot;&gt;$updatedAtAttribute&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; properties like the following:</source>
          <target state="translated">属性名が異なる場合、またはタイムスタンプを計算する別の方法を使用したい場合は、&lt;a href=&quot;yii-behaviors-timestampbehavior#%24createdAtAttribute-detail&quot;&gt;$ createdAtAttribute&lt;/a&gt;、&lt;a href=&quot;yii-behaviors-timestampbehavior#%24updatedAtAttribute-detail&quot;&gt;$ updatedAtAttribute&lt;/a&gt;、および&lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$ value&lt;/a&gt;プロパティを次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="655f56fb704f928de2fb1d3f2cf3423caa814d2e" translate="yes" xml:space="preserve">
          <source>If your attribute names are different, you may configure the &lt;a href=&quot;yii-behaviors-blameablebehavior#%24createdByAttribute-detail&quot;&gt;$createdByAttribute&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-blameablebehavior#%24updatedByAttribute-detail&quot;&gt;$updatedByAttribute&lt;/a&gt; properties like the following:</source>
          <target state="translated">属性名が異なる場合は、&lt;a href=&quot;yii-behaviors-blameablebehavior#%24createdByAttribute-detail&quot;&gt;$ createdByAttribute&lt;/a&gt;プロパティと&lt;a href=&quot;yii-behaviors-blameablebehavior#%24updatedByAttribute-detail&quot;&gt;$ updatedByAttribute&lt;/a&gt;プロパティを次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="04e1fd7301c8b0a8c2eb130213b405fc33de7f48" translate="yes" xml:space="preserve">
          <source>If your code depends on jQuery, jQuery UI or Bootstrap, you should use these predefined asset bundles rather than creating your own versions. If the default setting of these bundles do not satisfy your needs, you may customize them as described in the &lt;a href=&quot;#customizing-asset-bundles&quot;&gt;Customizing Asset Bundle&lt;/a&gt; subsection.</source>
          <target state="translated">コードがjQuery、jQuery UIまたはBootstrapに依存している場合は、独自のバージョンを作成するのではなく、これらの事前定義されたアセットバンドルを使用する必要があります。これらのバンドルのデフォルト設定がニーズを満たさない場合は、&lt;a href=&quot;#customizing-asset-bundles&quot;&gt;アセットバンドル&lt;/a&gt;のカスタマイズのサブセクションの説明に従ってカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="4f2a41d12081f71e67635e96eb2364dde97bd614" translate="yes" xml:space="preserve">
          <source>If your controller class extends from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, you should set its &lt;a href=&quot;yii-rest-activecontroller#%24modelClass-detail&quot;&gt;modelClass&lt;/a&gt; property to be the name of the resource class that you plan to serve through this controller. The class must extend from &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;.</source>
          <target state="translated">コントローラークラスが&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;から拡張されている場合は、その&lt;a href=&quot;yii-rest-activecontroller#%24modelClass-detail&quot;&gt;modelClass&lt;/a&gt;プロパティを、このコントローラーを通じて提供する予定のリソースクラスの名前に設定する必要があります。クラスは&lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt;から拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="a0a95f72d004584eaac38eaddc0002f08046ec4b" translate="yes" xml:space="preserve">
          <source>If your controllers extend from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, you may override the &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess()&lt;/a&gt; method to perform authorization check. The method will be called by the built-in actions provided by &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;.</source>
          <target state="translated">コントローラーが&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;から拡張されている場合は、checkAccess &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;（）&lt;/a&gt;メソッドをオーバーライドして認証チェックを実行できます。このメソッドは、&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt;によって提供される組み込みアクションによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0e64627496264d0eb09507e6456eacd2317502a7" translate="yes" xml:space="preserve">
          <source>If your data needs to be formatted before sending it to end users, you should set both of the &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;format&lt;/a&gt; and &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;data&lt;/a&gt; properties. The &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;format&lt;/a&gt; property specifies in which format the &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;data&lt;/a&gt; should be formatted. For example,</source>
          <target state="translated">エンドユーザーに送信する前にデータをフォーマットする必要がある場合は、&lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;フォーマット&lt;/a&gt;と&lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;データ&lt;/a&gt;プロパティの両方を設定する必要があります。&lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;フォーマット&lt;/a&gt;された形式でプロパティで指定&lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;データを&lt;/a&gt;フォーマットする必要があります。例えば、</target>
        </trans-unit>
        <trans-unit id="57555b93a460402573dd29a7d141b6b53f3f5666" translate="yes" xml:space="preserve">
          <source>If your extension is a widget or a module, chances are that it may require some &lt;a href=&quot;guide-structure-assets&quot;&gt;assets&lt;/a&gt; to work. For example, a module may display some pages which contain images, JavaScript, and CSS. Because the files of an extension are all under the same directory which is not Web accessible when installed in an application, you have two choices to make the asset files directly accessible via Web:</source>
          <target state="translated">拡張機能がウィジェットまたはモジュールの場合、機能するためにいくつかの&lt;a href=&quot;guide-structure-assets&quot;&gt;アセット&lt;/a&gt;が必要になる可能性があります。たとえば、モジュールは、画像、JavaScript、CSSを含むいくつかのページを表示する場合があります。拡張機能のファイルはすべて、アプリケーションにインストールしたときにWebからアクセスできない同じディレクトリの下にあるため、Web経由で直接アセットファイルにアクセスできるようにする方法は2つあります。</target>
        </trans-unit>
        <trans-unit id="11dd86967cbdc21c7aa0e26aad43324a07db00ad" translate="yes" xml:space="preserve">
          <source>If your extension needs to create specific DB tables or make changes to DB schema, you should</source>
          <target state="translated">拡張機能で特定の DB テーブルを作成したり、DB スキーマに変更を加えたりする必要がある場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="2e89acf6ec364549e6dca3fd852fd80d97fad5ae" translate="yes" xml:space="preserve">
          <source>If your permissions hierarchy doesn't change at all and you have a fixed number of users you can create a -&lt;a href=&quot;guide-tutorial-console#create-command&quot;&gt;console command&lt;/a&gt; that will initialize authorization data once via APIs offered by &lt;code&gt;authManager&lt;/code&gt;:</source>
          <target state="translated">アクセス許可の階層がまったく変更されず、ユーザー数が決まっている場合は、 &lt;code&gt;authManager&lt;/code&gt; が提供するAPIを介して認証データを一度初期化する-console &lt;a href=&quot;guide-tutorial-console#create-command&quot;&gt;コマンド&lt;/a&gt;を作成できます。</target>
        </trans-unit>
        <trans-unit id="4b4c4ad4371c9bf3bf03e546c4781230762f2e6b" translate="yes" xml:space="preserve">
          <source>If your web application and console application share a lot of configuration parameters and values, you may consider moving the common parts into a separate file, and including this file in both of the application configurations (web and console). You can see an example of this in the advanced project template.</source>
          <target state="translated">ウェブアプリケーションとコンソールアプリケーションが多くの設定パラメータや値を共有している場合は、共通部分を別のファイルに移動して、このファイルをアプリケーションの両方の設定(ウェブとコンソール)に含めることを検討してみてください。この例は、高度なプロジェクトテンプレートで見ることができます。</target>
        </trans-unit>
        <trans-unit id="3a536ec1a08142297386e172ddffda41d5e2e56a" translate="yes" xml:space="preserve">
          <source>If your webserver is Apache you'll need to add an &lt;code&gt;.htaccess&lt;/code&gt; file with the following content to &lt;code&gt;web&lt;/code&gt; (or &lt;code&gt;public_html&lt;/code&gt; or whatever) (where the &lt;code&gt;index.php&lt;/code&gt; file is located):</source>
          <target state="translated">WebサーバーがApacheの場合、次の内容の &lt;code&gt;.htaccess&lt;/code&gt; ファイルを &lt;code&gt;web&lt;/code&gt; （または &lt;code&gt;public_html&lt;/code&gt; など）（ &lt;code&gt;index.php&lt;/code&gt; ファイルが置かれている場所）に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="ce6c30e230e10dcde1716030700b4f9b0a9510a5" translate="yes" xml:space="preserve">
          <source>Image contents</source>
          <target state="translated">画像内容</target>
        </trans-unit>
        <trans-unit id="9afbc432fdf4f4f29ea724144e64d868ea432467" translate="yes" xml:space="preserve">
          <source>Image contents in PNG format.</source>
          <target state="translated">PNG形式の画像コンテンツです。</target>
        </trans-unit>
        <trans-unit id="764dba28eb0f45ff3dd6549b0ba060aa2f9bdc8e" translate="yes" xml:space="preserve">
          <source>ImageValidator verifies if an attribute is receiving a valid image.</source>
          <target state="translated">ImageValidator は、属性が有効な画像を受信しているかどうかを検証します。</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="83c9906a6ba1c6eebe2d4c7b54d399618204b9c7" translate="yes" xml:space="preserve">
          <source>Implement &lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;yii\web\IdentityInterface::findIdentityByAccessToken()&lt;/a&gt; in your &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;user identity class&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;ユーザーIDクラスに&lt;/a&gt;&lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;yii \ web \ IdentityInterface :: findIdentityByAccessToken（）&lt;/a&gt;を実装します。</target>
        </trans-unit>
        <trans-unit id="99ac8896f0b8e4fb226d431e9d558d4b8b692dbe" translate="yes" xml:space="preserve">
          <source>Implementation in the &lt;code&gt;User&lt;/code&gt; model could look like the following:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; モデルの実装は次のようになります。</target>
        </trans-unit>
        <trans-unit id="eef447a098b65c07343d0573ed93bad4b771eec6" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;code&gt;findIdentityByAccessToken()&lt;/code&gt; is application specific. For example, in simple scenarios when each user can only have one access token, you may store the access token in an &lt;code&gt;access_token&lt;/code&gt; column in the user table. The method can then be readily implemented in the &lt;code&gt;User&lt;/code&gt; class as follows,</source>
          <target state="translated">&lt;code&gt;findIdentityByAccessToken()&lt;/code&gt; の実装はアプリケーション固有です。たとえば、各ユーザーが1つのアクセストークンしか持つことができない単純なシナリオでは、ユーザーテーブルの &lt;code&gt;access_token&lt;/code&gt; 列にアクセストークンを格納できます。このメソッドは、次に示すように、 &lt;code&gt;User&lt;/code&gt; クラスに簡単に実装できます。</target>
        </trans-unit>
        <trans-unit id="18fc5be5203380c325a1f096ff8242d1b6df5755" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;code&gt;validateChildrenFunds&lt;/code&gt; can be like this:</source>
          <target state="translated">&lt;code&gt;validateChildrenFunds&lt;/code&gt; の実装は次のようになります。</target>
        </trans-unit>
        <trans-unit id="75ac4ae1dbbdf0e323f5a3d365241165b3d30df4" translate="yes" xml:space="preserve">
          <source>Implementation of IdentityInterface</source>
          <target state="translated">IdentityInterfaceの実装</target>
        </trans-unit>
        <trans-unit id="eb88c33bd464bfa9f39365c0015e38ae930937f8" translate="yes" xml:space="preserve">
          <source>Implemented by</source>
          <target state="translated">によって実装されています。</target>
        </trans-unit>
        <trans-unit id="a15dbec766115594c5c0793a66731e33650eda71" translate="yes" xml:space="preserve">
          <source>Implementing &lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii\web\IdentityInterface&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii \ web \ IdentityInterfaceの&lt;/a&gt;実装</target>
        </trans-unit>
        <trans-unit id="5147dd8f9a2656c00a2bad55fbcf10f095123217" translate="yes" xml:space="preserve">
          <source>Implementing Client-Side Validation</source>
          <target state="translated">クライアントサイドバリデーションの実装</target>
        </trans-unit>
        <trans-unit id="9082f008cd6f06e66b87644eb0d48acef966f656" translate="yes" xml:space="preserve">
          <source>Implementing yii\web\IdentityInterface</source>
          <target state="translated">Implementing yii\\IdentityInterface</target>
        </trans-unit>
        <trans-unit id="8011cb5556f43ad7310267c2a3929ab7da14c6f2" translate="yes" xml:space="preserve">
          <source>Implements</source>
          <target state="translated">Implements</target>
        </trans-unit>
        <trans-unit id="7aeceabf8ce0c5bc87ccf00b716a69809e03e3eb" translate="yes" xml:space="preserve">
          <source>Implements HKDF specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc5869&quot;&gt;RFC 5869&lt;/a&gt;. Recommend use one of the SHA-2 hash algorithms: sha224, sha256, sha384 or sha512.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5869&quot;&gt;RFC 5869で&lt;/a&gt;指定されたHKDFを実装します。SHA-2ハッシュアルゴリズムのいずれかを使用することをお勧めします：sha224、sha256、sha384、またはsha512。</target>
        </trans-unit>
        <trans-unit id="4d38d0a1528b9d39c1ac239f1457a17b936d53d8" translate="yes" xml:space="preserve">
          <source>Implements HKDF2 specified in &lt;a href=&quot;http://tools.ietf.org/html/rfc2898#section-5.2&quot;&gt;RFC 2898&lt;/a&gt; Recommend use one of the SHA-2 hash algorithms: sha224, sha256, sha384 or sha512.</source>
          <target state="translated">&lt;a href=&quot;http://tools.ietf.org/html/rfc2898#section-5.2&quot;&gt;RFC 2898で&lt;/a&gt;指定されている HKDF2を実装します。SHA -2ハッシュアルゴリズムのいずれかを使用することをお勧めします：sha224、sha256、sha384、またはsha512。</target>
        </trans-unit>
        <trans-unit id="133507769129b57cd7e00743e5d80044b6d57f9f" translate="yes" xml:space="preserve">
          <source>Implements of User model with search method.</source>
          <target state="translated">ユーザーモデルの検索機能を実装しています。</target>
        </trans-unit>
        <trans-unit id="484ddd6d1a627d12739d48ff1825511be4a327a1" translate="yes" xml:space="preserve">
          <source>Important Properties</source>
          <target state="translated">重要な物件</target>
        </trans-unit>
        <trans-unit id="5b4287989d3a3b5906b72557b9cc98ebc73d0c1e" translate="yes" xml:space="preserve">
          <source>Improve code and make sure tests are still OK.</source>
          <target state="translated">コードを改善し、テストが問題ないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="df5792a70749c5238d889147e6729926aac96a68" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#accessing-relational-data&quot;&gt;Accessing Relational Data&lt;/a&gt;, we explained that you can access a relation property of an Active Record instance like accessing a normal object property. A SQL statement will be executed only when you access the relation property the first time. We call such relational data accessing method &lt;em&gt;lazy loading&lt;/em&gt;. For example,</source>
          <target state="translated">&lt;a href=&quot;#accessing-relational-data&quot;&gt;アクセスリレーショナルデータ&lt;/a&gt;、我々はあなたが通常のオブジェクトのプロパティにアクセスするようにActive Recordのインスタンスの関係プロパティにアクセスできることを説明しました。SQLステートメントは、初めてリレーションプロパティにアクセスしたときにのみ実行されます。このようなリレーショナルデータアクセスメソッドを&lt;em&gt;遅延読み込み&lt;/em&gt;と呼びます。例えば、</target>
        </trans-unit>
        <trans-unit id="637cef6e1625741ad246d70ea515a0955b16dc62" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;guide-db-query-builder&quot;&gt;Query Builder&lt;/a&gt;, we have explained that you may use &lt;em&gt;batch query&lt;/em&gt; to minimize your memory usage when querying a large amount of data from the database. You may use the same technique in Active Record. For example,</source>
          <target state="translated">では&lt;a href=&quot;guide-db-query-builder&quot;&gt;クエリビルダ&lt;/a&gt;、我々はあなたが使用することを説明した&lt;em&gt;バッチクエリを&lt;/em&gt;データベースから大量のデータを照会するとき、あなたのメモリ使用量を最小限にするために。Active Recordでも同じ手法を使用できます。例えば、</target>
        </trans-unit>
        <trans-unit id="207c9814e0b88206738f05e6de5079954856b9d0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;yii-web-application&quot;&gt;Web applications&lt;/a&gt;, controllers should extend from &lt;a href=&quot;yii-web-controller&quot;&gt;yii\web\Controller&lt;/a&gt; or its child classes. Similarly in &lt;a href=&quot;yii-console-application&quot;&gt;console applications&lt;/a&gt;, controllers should extend from &lt;a href=&quot;yii-console-controller&quot;&gt;yii\console\Controller&lt;/a&gt; or its child classes. The following code defines a &lt;code&gt;site&lt;/code&gt; controller:</source>
          <target state="translated">では&lt;a href=&quot;yii-web-application&quot;&gt;、Webアプリケーション&lt;/a&gt;、コントローラから拡張する必要があります&lt;a href=&quot;yii-web-controller&quot;&gt;Yiiの\ウェブ\コントローラ&lt;/a&gt;またはその子クラス。同様に、&lt;a href=&quot;yii-console-application&quot;&gt;コンソールアプリケーションでは&lt;/a&gt;、コントローラーは&lt;a href=&quot;yii-console-controller&quot;&gt;yii \ console \ Controller&lt;/a&gt;またはその子クラスから拡張する必要があります。次のコードは、 &lt;code&gt;site&lt;/code&gt; コントローラーを定義します。</target>
        </trans-unit>
        <trans-unit id="fe8e8664f862bd61570b2f16619d402eecb37bd1" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;search()&lt;/code&gt; you then just add another filter condition with:</source>
          <target state="translated">で &lt;code&gt;search()&lt;/code&gt; あなたはただで別のフィルタ条件を追加します。</target>
        </trans-unit>
        <trans-unit id="c8af23a07546714ca95ff73b5f3ab92ee0fb3ca9" translate="yes" xml:space="preserve">
          <source>In AJAX mode, this normally will not work as expected unless there are some client-side JavaScript code handling the redirection. To help achieve this goal, this method will send out a &quot;X-Redirect&quot; header instead of &quot;Location&quot;.</source>
          <target state="translated">AJAXモードでは、リダイレクトを処理するクライアント側のJavaScriptコードがない限り、通常は期待通りには動作しません。この目標を達成するために、このメソッドは &quot;Location &quot;の代わりに &quot;X-Redirect &quot;ヘッダーを送信します。</target>
        </trans-unit>
        <trans-unit id="c1f723e70c53be0cfc36d8849f10bdd614bba60f" translate="yes" xml:space="preserve">
          <source>In JavaScript, you may get the values of &lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$csrfParam&lt;/a&gt; and &lt;a href=&quot;yii-web-request#%24csrfToken-detail&quot;&gt;$csrfToken&lt;/a&gt; via &lt;code&gt;yii.getCsrfParam()&lt;/code&gt; and &lt;code&gt;yii.getCsrfToken()&lt;/code&gt;, respectively. The &lt;a href=&quot;yii-web-yiiasset&quot;&gt;yii\web\YiiAsset&lt;/a&gt; asset must be registered. You also need to include CSRF meta tags in your pages by using &lt;a href=&quot;yii-helpers-basehtml#csrfMetaTags()-detail&quot;&gt;yii\helpers\Html::csrfMetaTags()&lt;/a&gt;.</source>
          <target state="translated">JavaScriptでは、&lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$ csrfParam&lt;/a&gt;と&lt;a href=&quot;yii-web-request#%24csrfToken-detail&quot;&gt;$ csrfTokenの&lt;/a&gt;値を、それぞれ &lt;code&gt;yii.getCsrfParam()&lt;/code&gt; と &lt;code&gt;yii.getCsrfToken()&lt;/code&gt; を介して取得できます。&lt;a href=&quot;yii-web-yiiasset&quot;&gt;Yiiの\ウェブ\ YiiAssetの&lt;/a&gt;資産を登録する必要があります。また、&lt;a href=&quot;yii-helpers-basehtml#csrfMetaTags()-detail&quot;&gt;yii \ helpers \ Html :: csrfMetaTags（）&lt;/a&gt;を使用して、ページにCSRFメタタグを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="927e174e4106b452b588459c497c27e588b306a5" translate="yes" xml:space="preserve">
          <source>In PHP, class member variables are also called &lt;em&gt;properties&lt;/em&gt;. These variables are part of the class definition, and are used to represent the state of a class instance (i.e., to differentiate one instance of the class from another). In practice, you may often want to handle the reading or writing of properties in special ways. For example, you may want to always trim a string when it is being assigned to a &lt;code&gt;label&lt;/code&gt; property. You &lt;em&gt;could&lt;/em&gt; use the following code to achieve this task:</source>
          <target state="translated">PHPでは、クラスメンバー変数は&lt;em&gt;プロパティ&lt;/em&gt;とも呼ばれ&lt;em&gt;ます&lt;/em&gt;。これらの変数はクラス定義の一部であり、クラスインスタンスの状態を表すために使用されます（つまり、クラスのインスタンスを別のインスタンスと区別するため）。実際には、プロパティの読み取りまたは書き込みを特別な方法で処理することがよくあります。たとえば、 &lt;code&gt;label&lt;/code&gt; プロパティに割り当てられている文字列を常にトリミングする必要がある場合があります。あなたは&lt;em&gt;可能性があり&lt;/em&gt;、このタスクを達成するために次のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="672788c73a675b474b222103e325a67052f82755" translate="yes" xml:space="preserve">
          <source>In Yii most of database querying happens via &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; which properly uses PDO prepared statements internally. In case of prepared statements it's not possible to manipulate query as was demonstrated above.</source>
          <target state="translated">Yiiでは、データベースクエリのほとんどは、内部でPDOの準備済みステートメントを適切に使用する&lt;a href=&quot;guide-db-active-record&quot;&gt;アクティブレコード&lt;/a&gt;を介して行われます。準備されたステートメントの場合、上で説明したようにクエリを操作することはできません。</target>
        </trans-unit>
        <trans-unit id="bcef10dfa50886d5445e85ea30866f411cef3e02" translate="yes" xml:space="preserve">
          <source>In Yii, a service locator is simply an instance of &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii\di\ServiceLocator&lt;/a&gt; or a child class.</source>
          <target state="translated">Yiiでは、サービスロケーターは単に&lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii \ di \ ServiceLocator&lt;/a&gt;または子クラスのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="4d3b35ae790e3f70c92e6de5dd1c5ac31d086006" translate="yes" xml:space="preserve">
          <source>In Yii, most probably you'll use &lt;a href=&quot;guide-input-validation&quot;&gt;form validation&lt;/a&gt; to do alike checks.</source>
          <target state="translated">Yiiでは、おそらく&lt;a href=&quot;guide-input-validation&quot;&gt;フォーム検証&lt;/a&gt;を使用して同様のチェックを行います。</target>
        </trans-unit>
        <trans-unit id="8c8da1bb8dd752422ec6ddd77eea7e4d47261ff7" translate="yes" xml:space="preserve">
          <source>In Yii, we often use the term &quot;language&quot; to refer to a locale.</source>
          <target state="translated">Yiiでは、ロケールを指す言葉として「言語」という言葉をよく使います。</target>
        </trans-unit>
        <trans-unit id="12182fac915d3de68bdb4b7a44aa8181229eca83" translate="yes" xml:space="preserve">
          <source>In a controller action you may use this method like this:</source>
          <target state="translated">コントローラアクションでは、このようなメソッドを使用することができます。</target>
        </trans-unit>
        <trans-unit id="71be5b4661cbd45d7c73edf23249028eaad9aaad" translate="yes" xml:space="preserve">
          <source>In a message to be translated, you can embed one or multiple parameters (also called placeholders) so that they can be replaced by the given values. By giving different sets of values, you can variate the translated message dynamically. In the following example, the placeholder &lt;code&gt;{username}&lt;/code&gt; in the message &lt;code&gt;'Hello, {username}!'&lt;/code&gt; will be replaced by &lt;code&gt;'Alexander'&lt;/code&gt; and &lt;code&gt;'Qiang'&lt;/code&gt;, respectively.</source>
          <target state="translated">翻訳するメッセージに、1つまたは複数のパラメーター（プレースホルダーとも呼ばれます）を埋め込んで、指定した値で置き換えることができます。異なる値のセットを指定することにより、翻訳されたメッセージを動的に変化させることができます。次の例では、メッセージ &lt;code&gt;'Hello, {username}!'&lt;/code&gt; のプレースホルダー &lt;code&gt;{username}&lt;/code&gt; それぞれ &lt;code&gt;'Alexander'&lt;/code&gt; と &lt;code&gt;'Qiang'&lt;/code&gt; に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="8186cbab42cf501b8e19d36cbdb7970f39f6e830" translate="yes" xml:space="preserve">
          <source>In a well-designed application, controllers are often very thin, with each action containing only a few lines of code. If your controller is rather complicated, it usually indicates that you should refactor it and move some code to other classes.</source>
          <target state="translated">よく設計されたアプリケーションでは、コントローラは非常に薄く、各アクションには数行のコードしか含まれていないことがよくあります。コントローラがかなり複雑な場合、通常はリファクタリングしてコードを他のクラスに移動する必要があることを示しています。</target>
        </trans-unit>
        <trans-unit id="361806aa4dc4e336a54c75c305ea2b35f0ea29fc" translate="yes" xml:space="preserve">
          <source>In addition to column classes provided by Yii that we'll review below, you can create your own column classes.</source>
          <target state="translated">以下で説明する Yii が提供するカラムクラスに加えて、独自のカラムクラスを作成することができます。</target>
        </trans-unit>
        <trans-unit id="20146be38ec2d61dd7e5e5c3a117346dcc16a50e" translate="yes" xml:space="preserve">
          <source>In any application, you should at least configure two properties: &lt;a href=&quot;yii-base-module#%24id-detail&quot;&gt;id&lt;/a&gt; and &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt;.</source>
          <target state="translated">どのアプリケーションでも、少なくとも2つのプロパティ（&lt;a href=&quot;yii-base-module#%24id-detail&quot;&gt;id&lt;/a&gt;と&lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath）を&lt;/a&gt;構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="43c112b5f30a2205f4501ab1dd5da1007abdddde" translate="yes" xml:space="preserve">
          <source>In any place, you can get access to the &lt;a href=&quot;yii-base-view&quot;&gt;view&lt;/a&gt; application component by the expression &lt;code&gt;Yii::$app-&amp;gt;view&lt;/code&gt; and then call its aforementioned methods to render a view. For example,</source>
          <target state="translated">どの場所でも、式 &lt;code&gt;Yii::$app-&amp;gt;view&lt;/code&gt; によって&lt;a href=&quot;yii-base-view&quot;&gt;ビュー&lt;/a&gt;アプリケーションコンポーネントにアクセスし、その前述のメソッドを呼び出してビューをレンダリングできます。例えば、</target>
        </trans-unit>
        <trans-unit id="a03fbf90e5ee72f1d1b77e3333c2919a3335a850" translate="yes" xml:space="preserve">
          <source>In case &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationPath-detail&quot;&gt;$migrationPath&lt;/a&gt; is not set and no namespace is provided, the first entry of &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt; will be used.</source>
          <target state="translated">場合は&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationPath-detail&quot;&gt;$ migrationPathが&lt;/a&gt;設定されておらず、名前空間が提供されていない、の最初のエントリ&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespacesが&lt;/a&gt;使用されます。</target>
        </trans-unit>
        <trans-unit id="bbaeab39a9473a0d389ee5d972c286be4e2a1175" translate="yes" xml:space="preserve">
          <source>In case &lt;a href=&quot;yii-sphinx-query#showMeta()-detail&quot;&gt;yii\sphinx\Query::showMeta()&lt;/a&gt; is set ActiveDataProvider will fetch total count value from the query meta information, avoiding extra counting query:</source>
          <target state="translated">ここで&lt;a href=&quot;yii-sphinx-query#showMeta()-detail&quot;&gt;のYii \スフィンクス\照会:: showMeta（）&lt;/a&gt;余分なカウントクエリを避けて、クエリのメタ情報から、トータルカウント値をフェッチしますセットActiveDataProviderは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9257125a23fc2102e9c66cb31081137bf8a1bb9d" translate="yes" xml:space="preserve">
          <source>In case it's not possible, table and column names should be escaped. Yii has special syntax for such escaping which allows doing it the same way for all databases it supports:</source>
          <target state="translated">それができない場合は、テーブル名とカラム名をエスケープしなければなりません。Yii はこのようなエスケープのための特別な構文を持っており、サポートしている全てのデータベースで同じ方法でエスケープを行うことができます。</target>
        </trans-unit>
        <trans-unit id="6a24af6493e84ccab50c34b1ea726f95b8e7ff43" translate="yes" xml:space="preserve">
          <source>In case of Jane it is a bit simpler since she is an admin:</source>
          <target state="translated">Janeの場合、彼女は管理者なのでもう少し簡単です。</target>
        </trans-unit>
        <trans-unit id="78bf3afc6473cb67f16ebf2f2e28f02700f18047" translate="yes" xml:space="preserve">
          <source>In case of a single positional parameter its value could be specified without wrapping it into array:</source>
          <target state="translated">単一の位置パラメータの場合は、その値を配列にラップせずに指定することができます。</target>
        </trans-unit>
        <trans-unit id="2fe94a70a859a5f3af709c1d0d193919bdf947ae" translate="yes" xml:space="preserve">
          <source>In case of nginx you should not need any extra config files.</source>
          <target state="translated">nginx の場合、余分な設定ファイルは必要ありません。</target>
        </trans-unit>
        <trans-unit id="33ef5f5724a7f5d8ef33fc5c217e59be44e29506" translate="yes" xml:space="preserve">
          <source>In case the action should not run, the request should be handled inside of the &lt;code&gt;beforeAction&lt;/code&gt; code by either providing the necessary output or redirecting the request. Otherwise the response will be empty.</source>
          <target state="translated">アクションを実行しない場合は、必要な出力を提供するか、リクエストをリダイレクトすることにより、 &lt;code&gt;beforeAction&lt;/code&gt; コード内でリクエストを処理する必要があります。そうでない場合、応答は空になります。</target>
        </trans-unit>
        <trans-unit id="a92175de985d4aa65a968ba18cec6b69b9d7a504" translate="yes" xml:space="preserve">
          <source>In case the input is optional you may also want to add a &lt;a href=&quot;#default&quot;&gt;default value filter&lt;/a&gt; in addition to the date validator to ensure empty input is stored as &lt;code&gt;null&lt;/code&gt;. Otherwise you may end up with dates like &lt;code&gt;0000-00-00&lt;/code&gt; in your database or &lt;code&gt;1970-01-01&lt;/code&gt; in the input field of a date picker.</source>
          <target state="translated">入力がオプションの場合、日付バリデーターに加えて&lt;a href=&quot;#default&quot;&gt;デフォルト値フィルター&lt;/a&gt;を追加して、空の入力が &lt;code&gt;null&lt;/code&gt; として格納されるようにすることもできます。そうしないと、データベースの &lt;code&gt;0000-00-00&lt;/code&gt; または日付ピッカーの入力フィールドの &lt;code&gt;1970-01-01&lt;/code&gt; のような日付になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7a62b57857fce24824ce67d2d705d7a4638c4b59" translate="yes" xml:space="preserve">
          <source>In case there is no exception in the component, treat as the action has been invoked not from error handler, but by direct route, so '404 Not Found' error will be displayed.</source>
          <target state="translated">コンポーネントに例外がない場合は、エラーハンドラからではなくダイレクトルートでアクションが呼び出されたものとして扱い、「404 Not Found」エラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="eaabad93cc875ed73d4db3fe7213a9ced27c48d2" translate="yes" xml:space="preserve">
          <source>In case when the automatic pluralization does not meet your requirement, you may also configure the &lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;yii\rest\UrlRule::$controller&lt;/a&gt; property to explicitly specify how to map a name used in endpoint URLs to a controller ID. For example, the following code maps the name &lt;code&gt;u&lt;/code&gt; to the controller ID &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">自動複数化が要件を満たさない場合は、&lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;yii \ rest \ UrlRule :: $ controller&lt;/a&gt;プロパティを構成して、エンドポイントURLで使用される名前をコントローラーIDにマップする方法を明示的に指定することもできます。たとえば、次のコードは名前 &lt;code&gt;u&lt;/code&gt; をコントローラーID &lt;code&gt;user&lt;/code&gt; にマップします。</target>
        </trans-unit>
        <trans-unit id="48bf1ba46f667eb9a012fda9dc211446b54a6b72" translate="yes" xml:space="preserve">
          <source>In case you do not use the Yii autoloader, the Composer autoloader can still autoload extension classes for you.</source>
          <target state="translated">Yii オートローダを使用しない場合でも、Composer オートローダは拡張クラスをオートロードすることができます。</target>
        </trans-unit>
        <trans-unit id="c6d00d465c4acbcf00323e2f2c63667612e6d0e3" translate="yes" xml:space="preserve">
          <source>In case you need just an opening or closing tag, you can use the &lt;code&gt;Html::beginTag()&lt;/code&gt; and &lt;code&gt;Html::endTag()&lt;/code&gt; methods.</source>
          <target state="translated">開始タグまたは終了タグだけが必要な場合は、 &lt;code&gt;Html::beginTag()&lt;/code&gt; および &lt;code&gt;Html::endTag()&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="00f830d0b7596fcb1c0cd6d3e1fc337869d97177" translate="yes" xml:space="preserve">
          <source>In case you need permissions hierarchy to be formed dynamically you need a UI or a console command. API used to build the hierarchy itself won't be different.</source>
          <target state="translated">パーミッション階層を動的に形成したい場合は、UIやコンソールコマンドが必要です。階層を構築するために使用するAPI自体には違いはありません。</target>
        </trans-unit>
        <trans-unit id="6d5db19d05fdac2d3a12405b342322a54c0c4d8b" translate="yes" xml:space="preserve">
          <source>In case you use an &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt; object as in the example above, the attribute will not hold the timestamp value, but the Expression object itself after the record has been saved. If you need the value from DB afterwards you should call the &lt;a href=&quot;yii-db-baseactiverecord#refresh()-detail&quot;&gt;refresh()&lt;/a&gt; method of the record.</source>
          <target state="translated">上記の例のように&lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt;オブジェクトを使用する場合、属性はタイムスタンプ値を保持しませんが、レコードが保存された後のExpressionオブジェクト自体を保持します。後でDBからの値が必要な場合は、レコードの&lt;a href=&quot;yii-db-baseactiverecord#refresh()-detail&quot;&gt;refresh（）&lt;/a&gt;メソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2977971cc385b42b9e37d10b995aac7cc37c6fcf" translate="yes" xml:space="preserve">
          <source>In case you want to break the convention as described above, you may configure the &lt;a href=&quot;#controllerMap&quot;&gt;controllerMap&lt;/a&gt; property.</source>
          <target state="translated">上記の規則を破る場合は、&lt;a href=&quot;#controllerMap&quot;&gt;controllerMap&lt;/a&gt;プロパティを設定できます。</target>
        </trans-unit>
        <trans-unit id="5f7b7ba1b4cc2d45f36a4e78bddc7b63ad9e1add" translate="yes" xml:space="preserve">
          <source>In case you want to get the value and then immediately remove it from array you can use &lt;code&gt;remove&lt;/code&gt; method:</source>
          <target state="translated">値を取得してすぐに配列から削除する場合は、 &lt;code&gt;remove&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="d07a26e9cdda2d886061e951566fd2d2d3d86319" translate="yes" xml:space="preserve">
          <source>In case, when the &lt;a href=&quot;yii-behaviors-blameablebehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; property is &lt;code&gt;null&lt;/code&gt;, the value of &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; will be used as the value.</source>
          <target state="translated">とき場合には、&lt;a href=&quot;yii-behaviors-blameablebehavior#%24value-detail&quot;&gt;$値&lt;/a&gt;プロパティがある &lt;code&gt;null&lt;/code&gt; の値 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; 値として使用されます。</target>
        </trans-unit>
        <trans-unit id="d14a4bb43947d1b412fc5b1bd50ff4c675cf554d" translate="yes" xml:space="preserve">
          <source>In case, when the &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, the result of the PHP function &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time()&lt;/a&gt; will be used as value.</source>
          <target state="translated">&lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$ value&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、PHP関数&lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time（）の&lt;/a&gt;結果が値として使用されます。</target>
        </trans-unit>
        <trans-unit id="526054892fd32fe87d7f7de2e41a85c0aa4be415" translate="yes" xml:space="preserve">
          <source>In case, when the property is &lt;code&gt;null&lt;/code&gt;, the value of &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; will be used as the value.</source>
          <target state="translated">プロパティが &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; の値が値として使用されます。</target>
        </trans-unit>
        <trans-unit id="9564171aca75e76624dc565ca06192455459af18" translate="yes" xml:space="preserve">
          <source>In case, when the value is &lt;code&gt;null&lt;/code&gt;, the result of the PHP function &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time()&lt;/a&gt; will be used as value.</source>
          <target state="translated">値が &lt;code&gt;null&lt;/code&gt; の場合、PHP関数&lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time（）の&lt;/a&gt;結果が値として使用されます。</target>
        </trans-unit>
        <trans-unit id="9749a54364ea6fe5c6022ef4bd789bcf6fb12750" translate="yes" xml:space="preserve">
          <source>In classes which use service locator to obtain dependent objects.</source>
          <target state="translated">サービスロケータを使って依存オブジェクトを取得するクラスでは</target>
        </trans-unit>
        <trans-unit id="a28f37f1c5783111edd24e61758b73478c8a9e4e" translate="yes" xml:space="preserve">
          <source>In conjunction with &lt;a href=&quot;yii-sphinx-matchbuilder&quot;&gt;yii\sphinx\MatchBuilder&lt;/a&gt; this class provides ability to build sophisticated MATCH expressions. Instance of this class can be passed to &lt;a href=&quot;yii-sphinx-query#match()-detail&quot;&gt;yii\sphinx\Query::match()&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;yii-sphinx-matchbuilder&quot;&gt;yii \ sphinx \ MatchBuilder&lt;/a&gt;と組み合わせて、このクラスは高度なMATCH式を構築する機能を提供します。このクラスのインスタンスは&lt;a href=&quot;yii-sphinx-query#match()-detail&quot;&gt;yii \ sphinx \ Query :: match（）に&lt;/a&gt;渡すことができます。例えば：</target>
        </trans-unit>
        <trans-unit id="4e6a44c798c65c94fe27655e06212cb6fd0197bb" translate="yes" xml:space="preserve">
          <source>In contrast to the single model forms explained before, we are working with an array of models now. This array is passed to the view to display the input fields for each model in a table like style and we will use helper methods of &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; that allow loading and validating multiple models at once:</source>
          <target state="translated">前に説明した単一のモデルフォームとは対照的に、現在は一連のモデルを操作しています。この配列はビューに渡され、各モデルの入力フィールドをスタイルのようなテーブルに表示します。複数のモデルを一度にロードおよび検証できる&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Modelの&lt;/a&gt;ヘルパーメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="21c81d733976c0e859768c7761a3a5754aabe5c1" translate="yes" xml:space="preserve">
          <source>In database modelling, when the multiplicity between two related tables is many-to-many, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Junction_table&quot;&gt;junction table&lt;/a&gt; is usually introduced. For example, the &lt;code&gt;order&lt;/code&gt; table and the &lt;code&gt;item&lt;/code&gt; table may be related via a junction table named &lt;code&gt;order_item&lt;/code&gt;. One order will then correspond to multiple order items, while one product item will also correspond to multiple order items.</source>
          <target state="translated">データベースモデリングでは、2つの関連するテーブル間の多重度が多対多である場合、通常、&lt;a href=&quot;https://en.wikipedia.org/wiki/Junction_table&quot;&gt;ジャンクションテーブル&lt;/a&gt;が導入されます。たとえば、 &lt;code&gt;order&lt;/code&gt; テーブルと &lt;code&gt;item&lt;/code&gt; テーブルは、 &lt;code&gt;order_item&lt;/code&gt; という名前のジャンクションテーブルを介して関連付けられている場合があります。1つの注文は複数の注文アイテムに対応し、1つの商品アイテムは複数の注文アイテムにも対応します。</target>
        </trans-unit>
        <trans-unit id="f2c03dffbf661b3707cfb1ab25115b89be06fc51" translate="yes" xml:space="preserve">
          <source>In debug mode Yii shows quite verbose errors which are certainly helpful for development. The thing is that these verbose errors are handy for attacker as well since these could reveal database structure, configuration values and parts of your code. Never run production applications with &lt;code&gt;YII_DEBUG&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;index.php&lt;/code&gt;.</source>
          <target state="translated">デバッグモードでは、Yiiはかなり詳細なエラーを示し、開発に役立ちます。問題は、これらの詳細なエラーがデータベースの構造、構成値、コードの一部を明らかにする可能性があるため、攻撃者にとっても便利なことです。 &lt;code&gt;index.php&lt;/code&gt; で &lt;code&gt;YII_DEBUG&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定して本番アプリケーションを実行しないでください。</target>
        </trans-unit>
        <trans-unit id="f6476bed2efb8416e1f88656caa94a2df20ce1e5" translate="yes" xml:space="preserve">
          <source>In each &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; or &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt; that uses a model, define a concrete model class by extending from the corresponding base model class. The concrete model classes should contain rules and logic that are specific for that application or module.</source>
          <target state="translated">モデルを使用する各&lt;a href=&quot;guide-structure-applications&quot;&gt;アプリケーション&lt;/a&gt;または&lt;a href=&quot;guide-structure-modules&quot;&gt;モジュール&lt;/a&gt;で、対応する基本モデルクラスから拡張して、具象モデルクラスを定義します。具体的なモデルクラスには、そのアプリケーションまたはモジュールに固有のルールとロジックが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="9191020487ad3c1c36bba5781eeaa2c2ea995540" translate="yes" xml:space="preserve">
          <source>In each element, the key is one of the ciphers supported by OpenSSL (@see openssl_get_cipher_methods()). The value is an array of two integers, the first is the cipher's block size in bytes and the second is the key size in bytes.</source>
          <target state="translated">各要素において、鍵はOpenSSLがサポートする暗号のうちの1つです (@openssl_get_cipher_methods()を参照してください)。値は2つの整数の配列で、1つ目は暗号のブロックサイズ (バイト単位)、2つ目は鍵のサイズ (バイト単位)です。</target>
        </trans-unit>
        <trans-unit id="943aa28d921b00f4501d3a1aefac536b80c7cc7c" translate="yes" xml:space="preserve">
          <source>In general, to load migrations from different locations, &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt; is the preferable solution as the migration name contains the origin of the migration in the history, which is not the case when using multiple migration paths.</source>
          <target state="translated">一般に、異なる場所から移行をロードするには、移行名に履歴の移行元が含まれているため、&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespaces&lt;/a&gt;が適切なソリューションです。これは、複数の移行パスを使用する場合には当てはまりません。</target>
        </trans-unit>
        <trans-unit id="6dd2878d7d38e6005c4b2ddbc596fb6d9bf2e492" translate="yes" xml:space="preserve">
          <source>In most cases you should mainly deal with the &lt;code&gt;response&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; which is an instance of &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt;, by default. However, Yii also allows you to create your own response objects and send them to end users as we will explain in the following.</source>
          <target state="translated">ほとんどの場合、デフォルトでは主に&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Responseの&lt;/a&gt;インスタンスである &lt;code&gt;response&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;アプリケーションコンポーネント&lt;/a&gt;を処理する必要があります。ただし、以下で説明するように、Yiiでは独自の応答オブジェクトを作成してエンドユーザーに送信することもできます。</target>
        </trans-unit>
        <trans-unit id="7c39c0e0a62be9ff367056f057942d4b243801d6" translate="yes" xml:space="preserve">
          <source>In oder to acquire access token perform following sequence:</source>
          <target state="translated">アクセストークンを取得するためには、以下のシーケンスを実行します。</target>
        </trans-unit>
        <trans-unit id="7dfbc915ac708c96111ef4645795b450aeba23f1" translate="yes" xml:space="preserve">
          <source>In order for content to be displayed properly and securely in HTML, special characters in the content should be encoded. In PHP this is done with &lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars.php&quot;&gt;htmlspecialchars&lt;/a&gt; and &lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars-decode.php&quot;&gt;htmlspecialchars_decode&lt;/a&gt;. The issue with using these methods directly is that you have to specify encoding and extra flags all the time. Since these flags are the same all the time and the encoding should match the one of the application in order to prevent security issues, Yii provides two compact and simple-to-use methods:</source>
          <target state="translated">コンテンツをHTMLで適切かつ安全に表示するには、コンテンツ内の特殊文字をエンコードする必要があります。PHPでは、これは&lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars.php&quot;&gt;htmlspecialchars&lt;/a&gt;と&lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars-decode.php&quot;&gt;htmlspecialchars_decodeで&lt;/a&gt;行われます。これらのメソッドを直接使用する場合の問題は、常にエンコーディングと追加のフラグを指定する必要があることです。これらのフラグは常に同じであり、セキュリティの問題を防ぐためにエンコーディングはアプリケーションの1つと一致する必要があるため、Yiiは2つのコンパクトで使いやすいメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="de775412071f9c20514e596d5ac2742225c85839" translate="yes" xml:space="preserve">
          <source>In order for the command line utility to see your commands, you will need to change the &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii\base\Module::$controllerNamespace&lt;/a&gt; property, when Yii is executed in the console mode, and point it to your commands namespace.</source>
          <target state="translated">コマンドラインユーティリティでコマンドを表示するには、Yiiがコンソールモードで実行されているときに&lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii \ base \ Module :: $ controllerNamespace&lt;/a&gt;プロパティを変更し、コマンドの名前空間を指すようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="223a733e50855645d206d75e30009ecec04a494a" translate="yes" xml:space="preserve">
          <source>In order for your classes to be autoloaded by the Yii class autoloader or the Composer class autoloader, you should specify the &lt;code&gt;autoload&lt;/code&gt; entry in the &lt;code&gt;composer.json&lt;/code&gt; file, like shown below:</source>
          <target state="translated">クラスがYiiクラスオートローダーまたはComposerクラスオートローダーによってオートロードされるようにするには、次に示すように、 &lt;code&gt;composer.json&lt;/code&gt; ファイルで &lt;code&gt;autoload&lt;/code&gt; エントリを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b9a72656a0c3e94933c931a20d4250ae3b56ab9" translate="yes" xml:space="preserve">
          <source>In order to access server from remote machines use 0.0.0.0:8000. That is especially useful when running server in a virtual machine.</source>
          <target state="translated">リモートマシンからサーバにアクセスするには、0.0.0.0.0:8000 を使用します。これは特に仮想マシンでサーバを動かす場合に便利です。</target>
        </trans-unit>
        <trans-unit id="237b10302060d386286ebb41982352399dc836c5" translate="yes" xml:space="preserve">
          <source>In order to acquire access token perform following sequence:</source>
          <target state="translated">アクセストークンを取得するには、以下のシーケンスを実行します。</target>
        </trans-unit>
        <trans-unit id="eb0ef91de056ce90c7a709745fbc53b0cb04ead3" translate="yes" xml:space="preserve">
          <source>In order to add hash to all links use &lt;code&gt;array_merge($_GET, ['#' =&amp;gt; 'my-hash'])&lt;/code&gt;.</source>
          <target state="translated">すべてのリンクにハッシュを追加するには、 &lt;code&gt;array_merge($_GET, ['#' =&amp;gt; 'my-hash'])&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="e8bb3b39b17a730be5838452811e8932c7e28363" translate="yes" xml:space="preserve">
          <source>In order to avoid CSRF you should always:</source>
          <target state="translated">CSRFを避けるためには、必ず行う必要があります。</target>
        </trans-unit>
        <trans-unit id="9f7fe63f8a92b1bbe95650e847e93f1f6f78f73e" translate="yes" xml:space="preserve">
          <source>In order to build a map (key-value pairs) from a multidimensional array or an array of objects you can use &lt;code&gt;map&lt;/code&gt; method. The &lt;code&gt;$from&lt;/code&gt; and &lt;code&gt;$to&lt;/code&gt; parameters specify the key names or property names to set up the map. Optionally, one can further group the map according to a grouping field &lt;code&gt;$group&lt;/code&gt;. For example,</source>
          <target state="translated">多次元配列またはオブジェクトの配列からマップ（キーと値のペア）を構築するには、 &lt;code&gt;map&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;$from&lt;/code&gt; と &lt;code&gt;$to&lt;/code&gt; のパラメータは、マップを設定するには、キー名やプロパティ名を指定します。オプションで、グループ化フィールド &lt;code&gt;$group&lt;/code&gt; に従ってマップをさらにグループ化できます。例えば、</target>
        </trans-unit>
        <trans-unit id="5c6f8f27a6760964e4cd9f17ee909090deef18ab" translate="yes" xml:space="preserve">
          <source>In order to catch logs written by this class, you need to setup a log route for 'yii\swiftmailer\Logger::add' category. For example:</source>
          <target state="translated">このクラスで書かれたログをキャッチするためには、'yii\swiftmailer\Logger::add' カテゴリのログルートを設定する必要があります。例えば</target>
        </trans-unit>
        <trans-unit id="532468d261862f09dde4c5f58f7aebedd1786f90" translate="yes" xml:space="preserve">
          <source>In order to check if a user can update a post, we need to pass an extra parameter that is required by &lt;code&gt;AuthorRule&lt;/code&gt; described before:</source>
          <target state="translated">ユーザーが投稿を更新できるかどうかを確認するには、 &lt;code&gt;AuthorRule&lt;/code&gt; で必要な追加のパラメーターを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="9478d992d55e8b2e3148a336d2f884dcb660089f" translate="yes" xml:space="preserve">
          <source>In order to compose message content via view file simply pass view name to the &lt;code&gt;compose()&lt;/code&gt; method:</source>
          <target state="translated">ビューファイルを介してメッセージコンテンツを作成するには、ビュー名を &lt;code&gt;compose()&lt;/code&gt; メソッドに渡すだけです。</target>
        </trans-unit>
        <trans-unit id="1943811e5349383b3acc9d54937cd8ffdbfd5747" translate="yes" xml:space="preserve">
          <source>In order to create a URL to a given route use the &lt;code&gt;Url::toRoute()&lt;/code&gt; method. The method uses &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii\web\UrlManager&lt;/a&gt; to create a URL:</source>
          <target state="translated">特定のルートへのURLを作成するには、 &lt;code&gt;Url::toRoute()&lt;/code&gt; メソッドを使用します。このメソッドは&lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii \ web \ UrlManager&lt;/a&gt;を使用してURLを作成します。</target>
        </trans-unit>
        <trans-unit id="205bf34fb5e393be1b1a52ddab72aab973b52595" translate="yes" xml:space="preserve">
          <source>In order to create a form element in the form, along with the element's label, and any applicable JavaScript validation, the &lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;ActiveForm::field()&lt;/a&gt; method is called, which returns an instance of &lt;a href=&quot;yii-widgets-activefield&quot;&gt;yii\widgets\ActiveField&lt;/a&gt;. When the result of this method is echoed directly, the result is a regular (text) input. To customize the output, you can chain additional methods of &lt;a href=&quot;yii-widgets-activefield&quot;&gt;ActiveField&lt;/a&gt; to this call:</source>
          <target state="translated">フォームのフォーム要素を、要素のラベル、および適用可能なJavaScript検証とともに作成するために、&lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;ActiveForm :: field（）&lt;/a&gt;メソッドが呼び出され、&lt;a href=&quot;yii-widgets-activefield&quot;&gt;yii \ widgets \ ActiveFieldの&lt;/a&gt;インスタンスが返されます。このメソッドの結果が直接エコーされる場合、結果は通常の（テキスト）入力です。出力をカスタマイズするには、&lt;a href=&quot;yii-widgets-activefield&quot;&gt;ActiveFieldの&lt;/a&gt;追加のメソッドをこの呼び出しにチェーンできます。</target>
        </trans-unit>
        <trans-unit id="59a7f8340a18d3106127ee372ea417327d5ecb11" translate="yes" xml:space="preserve">
          <source>In order to create your own custom mail solution, you need to create 2 classes: one for the &lt;code&gt;Mailer&lt;/code&gt; and another one for the &lt;code&gt;Message&lt;/code&gt;. You can use &lt;code&gt;yii\mail\BaseMailer&lt;/code&gt; and &lt;code&gt;yii\mail\BaseMessage&lt;/code&gt; as the base classes for your solution. These classes already contain the basic logic, which is described in this guide. However, their usage is not mandatory, it is enough to implement &lt;code&gt;yii\mail\MailerInterface&lt;/code&gt; and &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; interfaces. Then you need to implement all the abstract methods to build your solution.</source>
          <target state="translated">独自のカスタムメールソリューションを作成するには、2つのクラスを作成する必要があります。1つは &lt;code&gt;Mailer&lt;/code&gt; 用、もう1つは &lt;code&gt;Message&lt;/code&gt; 用です。 &lt;code&gt;yii\mail\BaseMailer&lt;/code&gt; と &lt;code&gt;yii\mail\BaseMessage&lt;/code&gt; をソリューションの基本クラスとして使用できます。これらのクラスには、このガイドで説明されている基本的なロジックがすでに含まれています。ただし、それらの使用は必須ではなく、 &lt;code&gt;yii\mail\MailerInterface&lt;/code&gt; および &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; インターフェースを実装することで十分です。次に、ソリューションを構築するためにすべての抽象メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="9ba710a4251d38c946f9e6b5cfc456507763dab7" translate="yes" xml:space="preserve">
          <source>In order to display form errors from a model or models as a summary, you could use:</source>
          <target state="translated">モデルやモデルのフォームエラーをサマリーとして表示するには</target>
        </trans-unit>
        <trans-unit id="a76c921f704b6e4916193f4009429fc0fc00bc72" translate="yes" xml:space="preserve">
          <source>In order to enable cookie-based login, you need to configure &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;yii\web\User::$enableAutoLogin&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt; in the application configuration. You also need to provide a duration time parameter when calling the &lt;a href=&quot;yii-web-user#login()-detail&quot;&gt;yii\web\User::login()&lt;/a&gt; method.</source>
          <target state="translated">Cookieベースのログインを有効にするには、アプリケーション構成で&lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;yii \ web \ User :: $ enableAutoLogin&lt;/a&gt;を &lt;code&gt;true&lt;/code&gt; に構成する必要があります。また、&lt;a href=&quot;yii-web-user#login()-detail&quot;&gt;yii \ web \ User :: login（）&lt;/a&gt;メソッドを呼び出すときに、期間パラメーターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="a3d3196e1aa838b941845ee2fe6c315bdb0acfac" translate="yes" xml:space="preserve">
          <source>In order to enable this command you should adjust the configuration of your console application:</source>
          <target state="translated">このコマンドを有効にするには、コンソールアプリケーションの設定を調整する必要があります。</target>
        </trans-unit>
        <trans-unit id="0f567bfe6a52c32cfdda3ce9e688431db0552980" translate="yes" xml:space="preserve">
          <source>In order to enable this parser you should configure &lt;a href=&quot;yii-web-request#%24parsers-detail&quot;&gt;yii\web\Request::$parsers&lt;/a&gt; in the following way:</source>
          <target state="translated">このパーサーを有効にするには、次のように&lt;a href=&quot;yii-web-request#%24parsers-detail&quot;&gt;yii \ web \ Request :: $ parsers&lt;/a&gt;を設定する必要があります：</target>
        </trans-unit>
        <trans-unit id="75e77e1f49c52febe0442d63e1b6ac0342bb11a6" translate="yes" xml:space="preserve">
          <source>In order to encode or decode special characters in an array of strings into HTML entities you can use the following:</source>
          <target state="translated">文字列の配列の中の特殊文字を HTML エンティティにエンコードまたはデコードするには、以下のように使用できます。</target>
        </trans-unit>
        <trans-unit id="95c509395307e548e7fb57fa34c4904374080b8a" translate="yes" xml:space="preserve">
          <source>In order to ensure the above life cycles, if a child class of Object needs to override the constructor, it should be done like the following:</source>
          <target state="translated">上記のライフサイクルを確保するために、Objectの子クラスがコンストラクタをオーバーライドする必要がある場合は、以下のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="a99e8065744f9d2153d11083e290e5b89090d120" translate="yes" xml:space="preserve">
          <source>In order to generate a namespaced migration, you should specify a namespace before the migration's name. Note that backslash (&lt;code&gt;\&lt;/code&gt;) is usually considered a special character in the shell, so you need to escape it properly to avoid shell errors or incorrect behavior. For example:</source>
          <target state="translated">名前空間付きの移行を生成するには、移行の名前の前に名前空間を指定する必要があります。バックスラッシュ（ &lt;code&gt;\&lt;/code&gt; ）は通常シェルでは特殊文字と見なされるため、シェルエラーや不正な動作を回避するには、適切にエスケープする必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="40714802db4ad8dd55fad1e51be288ae9f84940a" translate="yes" xml:space="preserve">
          <source>In order to generate an image tag, use the following:</source>
          <target state="translated">画像タグを生成するには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="51028e7f8369a624bd567b83f02efaefb9f0b169" translate="yes" xml:space="preserve">
          <source>In order to generate buttons, you can use the following code:</source>
          <target state="translated">ボタンを生成するには、以下のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="429db4c04ca41454c5225407eba386dba119684d" translate="yes" xml:space="preserve">
          <source>In order to get ordered list, use &lt;code&gt;Html::ol()&lt;/code&gt; instead.</source>
          <target state="translated">順序付きリストを取得するには、代わりに &lt;code&gt;Html::ol()&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="aebe343be8ed8922ba43fdbc487945fdaf835974" translate="yes" xml:space="preserve">
          <source>In order to get the attribute name without suffixes or prefixes, one can use the following:</source>
          <target state="translated">接尾語や接頭語のない属性名を取得するには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="48e24505352b3b8e1745343538d99deacc73164f" translate="yes" xml:space="preserve">
          <source>In order to index an array according to a specified key, the &lt;code&gt;index&lt;/code&gt; method can be used. The input should be either multidimensional array or an array of objects. The &lt;code&gt;$key&lt;/code&gt; can be either a key name of the sub-array, a property name of object, or an anonymous function that must return the value that will be used as a key.</source>
          <target state="translated">指定されたキーに従って配列にインデックスを付けるには、 &lt;code&gt;index&lt;/code&gt; メソッドを使用できます。入力は、多次元配列またはオブジェクトの配列のいずれかである必要があります。 &lt;code&gt;$key&lt;/code&gt; 、サブ配列のキー名、オブジェクトのプロパティ名、またはキーとして使用される値を返す必要があります無名関数のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="8b4ec312165f3e9a304f2ff73d3818ed2e5992ac" translate="yes" xml:space="preserve">
          <source>In order to perform &quot;find&quot; queries use &lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii\mongodb\file\Query&lt;/a&gt; class.</source>
          <target state="translated">「検索」クエリを実行するには、&lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii \ mongodb \ file \ Query&lt;/a&gt;クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="59c8918b05350f0ee10ab16169e9539098c71a16" translate="yes" xml:space="preserve">
          <source>In order to perform &quot;find&quot; queries use &lt;a href=&quot;yii-mongodb-query&quot;&gt;yii\mongodb\Query&lt;/a&gt; class.</source>
          <target state="translated">「検索」クエリを実行するには、&lt;a href=&quot;yii-mongodb-query&quot;&gt;yii \ mongodb \ Query&lt;/a&gt;クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="bcfca2d3f7f9e1584749a3e58ee0618f650287e5" translate="yes" xml:space="preserve">
          <source>In order to provide increased security for user passwords, even in the worst case scenario (your application is breached), you need to use a hashing algorithm that is resilient against brute force attacks. The best current choice is &lt;code&gt;bcrypt&lt;/code&gt;. In PHP, you can create a &lt;code&gt;bcrypt&lt;/code&gt; hash using the &lt;a href=&quot;http://php.net/manual/en/function.crypt.php&quot;&gt;crypt function&lt;/a&gt;. Yii provides two helper functions which make using &lt;code&gt;crypt&lt;/code&gt; to securely generate and verify hashes easier.</source>
          <target state="translated">ユーザーパスワードのセキュリティを強化するには、最悪のシナリオ（アプリケーション違反）でも、ブルートフォース攻撃に強いハッシュアルゴリズムを使用する必要があります。現在最良の選択は &lt;code&gt;bcrypt&lt;/code&gt; です。 PHPでは、&lt;a href=&quot;http://php.net/manual/en/function.crypt.php&quot;&gt;crypt関数&lt;/a&gt;を使用して &lt;code&gt;bcrypt&lt;/code&gt; ハッシュを作成できます。 Yiiは、 &lt;code&gt;crypt&lt;/code&gt; を使用してハッシュを安全に生成および検証することを容易にする2つのヘルパー関数を提供します。</target>
        </trans-unit>
        <trans-unit id="551eb9be6a321036a10f20511e3a53e143c556b6" translate="yes" xml:space="preserve">
          <source>In order to run Yii, your webserver must meet its requirements. The very minimum requirement is PHP 5.4. In order to check the requirements copy &lt;code&gt;requirements.php&lt;/code&gt; from your root directory into the webroot directory and run it via browser using &lt;code&gt;http://example.com/requirements.php&lt;/code&gt; URL. Don't forget to delete the file afterwards.</source>
          <target state="translated">Yiiを実行するには、ウェブサーバーが要件を満たしている必要があります。最小要件はPHP 5.4です。要件を確認するためにコピー &lt;code&gt;requirements.php&lt;/code&gt; を webrootディレクトリにあなたのルートディレクトリからと使用してブラウザを経由して、それを実行 &lt;code&gt;http://example.com/requirements.php&lt;/code&gt; URLを。後でファイルを削除することを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="b00cce8aef0e2c6851c7189dd5989555ddf4021b" translate="yes" xml:space="preserve">
          <source>In order to setup Sphinx &quot;searchd&quot; to support MySQL protocol following configuration should be added:</source>
          <target state="translated">Sphinx &quot;searchd &quot;がMySQLプロトコルをサポートするように設定するためには、以下の設定を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="f6133ca192354c0e131ed1c794a686c48ed7e0dd" translate="yes" xml:space="preserve">
          <source>In order to theme modules, &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii\base\Theme::$pathMap&lt;/a&gt; can be configured like the following:</source>
          <target state="translated">モジュールのテーマを設定するには、&lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii \ base \ Theme :: $ pathMap&lt;/a&gt;を次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="a710788aa13f189276cb2a9a7f5410a30b5ca017" translate="yes" xml:space="preserve">
          <source>In order to theme widgets, you can configure &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii\base\Theme::$pathMap&lt;/a&gt; in the following way:</source>
          <target state="translated">ウィジェットのテーマを設定するには、次の方法で&lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii \ base \ Theme :: $ pathMap&lt;/a&gt;を構成できます。</target>
        </trans-unit>
        <trans-unit id="8ce27104e11d931a6691a80c425ae98e20fe3ffa" translate="yes" xml:space="preserve">
          <source>In order to use Facebook OAuth you must register your application at &lt;a href=&quot;https://developers.facebook.com/apps&quot;&gt;https://developers.facebook.com/apps&lt;/a&gt;.</source>
          <target state="translated">Facebook OAuthを使用するには、&lt;a href=&quot;https://developers.facebook.com/apps&quot;&gt;https：//developers.facebook.com/appsで&lt;/a&gt;アプリケーションを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="37aee35b502e65c15cd467eec8f3af7e8d304237" translate="yes" xml:space="preserve">
          <source>In order to use GitHub OAuth you must register your application at &lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;https://github.com/settings/applications/new&lt;/a&gt;.</source>
          <target state="translated">GitHub OAuthを使用するには、&lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;https：//github.com/settings/applications/newで&lt;/a&gt;アプリケーションを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="8b9dfb8de106378a14ebc735283dc1490d42850d" translate="yes" xml:space="preserve">
          <source>In order to use Google OAuth you must create a project at &lt;a href=&quot;https://console.developers.google.com/project&quot;&gt;https://console.developers.google.com/project&lt;/a&gt; and setup its credentials at https://console.developers.google.com/project/[yourProjectId]/apiui/credential. In order to enable using scopes for retrieving user attributes, you should also enable Google+ API at https://console.developers.google.com/project/[yourProjectId]/apiui/api/plus</source>
          <target state="translated">Google OAuthを使用するには、&lt;a href=&quot;https://console.developers.google.com/project&quot;&gt;https：//console.developers.google.com/project&lt;/a&gt;でプロジェクトを作成し、https： //console.developers.google.com/project/ [yourProjectId] / apiui /で認証情報を設定する必要があります資格。ユーザー属性を取得するためのスコープの使用を有効にするには、https：//console.developers.google.com/project/ [yourProjectId] / apiui / api / plusでもGoogle+ APIを有効にする必要があります</target>
        </trans-unit>
        <trans-unit id="6a0c5470f29449b1d799f1f989a2750c53e9170f" translate="yes" xml:space="preserve">
          <source>In order to use Microsoft Live OAuth you must register your application at &lt;a href=&quot;https://account.live.com/developers/applications&quot;&gt;https://account.live.com/developers/applications&lt;/a&gt;</source>
          <target state="translated">Microsoft Live OAuthを使用するには、&lt;a href=&quot;https://account.live.com/developers/applications&quot;&gt;https：//account.live.com/developers/applicationsで&lt;/a&gt;アプリケーションを登録する必要があります</target>
        </trans-unit>
        <trans-unit id="7b4a065e9f223269d86e3e030a91c75d11657c2a" translate="yes" xml:space="preserve">
          <source>In order to use Twitter OAuth you must register your application at &lt;a href=&quot;https://dev.twitter.com/apps/new&quot;&gt;https://dev.twitter.com/apps/new&lt;/a&gt;.</source>
          <target state="translated">Twitter OAuthを使用するには、&lt;a href=&quot;https://dev.twitter.com/apps/new&quot;&gt;https：//dev.twitter.com/apps/newで&lt;/a&gt;アプリケーションを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="19214c5bb0b0f85974868e73873ffa04d35f752c" translate="yes" xml:space="preserve">
          <source>In order to use VKontakte OAuth you must register your application at &lt;a href=&quot;http://vk.com/editapp?act=create&quot;&gt;http://vk.com/editapp?act=create&lt;/a&gt;.</source>
          <target state="translated">VKontakte OAuthを使用するには、アプリケーションを&lt;a href=&quot;http://vk.com/editapp?act=create&quot;&gt;http://vk.com/editapp?act=createで&lt;/a&gt;登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="d5a88e41c598b6680378cd0d6034da6c8b43c482" translate="yes" xml:space="preserve">
          <source>In order to use Yandex OAuth you must register your application at &lt;a href=&quot;https://oauth.yandex.ru/client/new&quot;&gt;https://oauth.yandex.ru/client/new&lt;/a&gt;.</source>
          <target state="translated">Yandex OAuthを使用するには、&lt;a href=&quot;https://oauth.yandex.ru/client/new&quot;&gt;https：//oauth.yandex.ru/client/newで&lt;/a&gt;アプリケーションを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="0c82ae15a36d8819e26fe9ee26b31e6fe1622bb0" translate="yes" xml:space="preserve">
          <source>In order to use linkedIn OAuth you must register your application at &lt;a href=&quot;https://www.linkedin.com/secure/developer&quot;&gt;https://www.linkedin.com/secure/developer&lt;/a&gt;.</source>
          <target state="translated">linkedIn OAuthを使用するには、&lt;a href=&quot;https://www.linkedin.com/secure/developer&quot;&gt;https：&lt;/a&gt; //www.linkedin.com/secure/developerでアプリケーションを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="de37b0661b2941b5f47798772a08d71eedec623f" translate="yes" xml:space="preserve">
          <source>In other places, if you want to send out the &quot;Location&quot; header immediately, you should use the following code:</source>
          <target state="translated">他の場所では、「Location」のヘッダをすぐに出したい場合は、以下のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="fb537221d2c1614f92fb897d078fe4c7c6b3c556" translate="yes" xml:space="preserve">
          <source>In particular, Security supports the following features:</source>
          <target state="translated">特に、Securityは以下の機能をサポートしています。</target>
        </trans-unit>
        <trans-unit id="2bbde8db494df90be702d5b5d346c75616dab39f" translate="yes" xml:space="preserve">
          <source>In places other than an action method, you should call &lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii\web\Response::redirect()&lt;/a&gt; directly followed by a chained call to the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method to ensure no extra content will be appended to the response.</source>
          <target state="translated">アクションメソッド以外の場所では、&lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii \ web \ Response :: redirect（）を&lt;/a&gt;直接呼び出してから、&lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send（）&lt;/a&gt;メソッドをチェーン呼び出しして、追加のコンテンツが応答。</target>
        </trans-unit>
        <trans-unit id="1fbdc15fb21ded0a3a54bf98d1312a1f30e24c1e" translate="yes" xml:space="preserve">
          <source>In practice, you usually want to enable pretty URLs and take advantage of HTTP verbs. For example, a request &lt;code&gt;POST /users&lt;/code&gt; would mean accessing the &lt;code&gt;user/create&lt;/code&gt; action. This can be done easily by configuring the &lt;code&gt;urlManager&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; in the application configuration like the following:</source>
          <target state="translated">実際には、通常はきれいなURLを有効にし、HTTP動詞を利用します。たとえば、要求 &lt;code&gt;POST /users&lt;/code&gt; は、 &lt;code&gt;user/create&lt;/code&gt; アクションにアクセスすることを意味します。これは、次のようにアプリケーション構成で &lt;code&gt;urlManager&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;アプリケーションコンポーネントを&lt;/a&gt;構成することで簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="a610654095da50b607045621c707cae0689602d0" translate="yes" xml:space="preserve">
          <source>In production mode, enable a bytecode cache, such as &lt;a href=&quot;http://php.net/manual/en/intro.opcache.php&quot;&gt;PHP OPcache&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;, to minimize the time needed for including and parsing PHP files.</source>
          <target state="translated">プロダクションモードで、&lt;a href=&quot;http://php.net/manual/en/intro.opcache.php&quot;&gt;PHP OPcache&lt;/a&gt;や&lt;a href=&quot;http://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;などのバイトコードキャッシュを有効にして、PHPファイルのインクルードと解析に必要な時間を最小限に抑えます。</target>
        </trans-unit>
        <trans-unit id="ef9067f0e8276f31c8e8537f005de545bcc6ff0c" translate="yes" xml:space="preserve">
          <source>In relational context ActiveQuery represents a relation between two Active Record classes.</source>
          <target state="translated">リレーショナルコンテキストでは、ActiveQueryは2つのActiveレコードクラス間の関係を表します。</target>
        </trans-unit>
        <trans-unit id="91fba3216272f1517910651b76fc3094fe4c7e95" translate="yes" xml:space="preserve">
          <source>In some cases any form of automated testing could be overkill:</source>
          <target state="translated">場合によっては、どのような形式の自動テストでもやり過ぎになることがあります。</target>
        </trans-unit>
        <trans-unit id="09ec95920ff23b38ff29ba5af603a969840f9a11" translate="yes" xml:space="preserve">
          <source>In some rare occasions, you may want to install some or all extensions manually, rather than relying on Composer. To do so, you should:</source>
          <target state="translated">まれに、一部またはすべての拡張機能を Composer に頼るのではなく、手動でインストールしたい場合があります。そのためには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="3ea81eac69c47ebc18ea5dc5ebea45220554b17b" translate="yes" xml:space="preserve">
          <source>In some scenarios, to ensure data consistency, you may want to enclose some or all of them in transactions. You can do so by overriding this method and returning the operations that need to be transactional. For example,</source>
          <target state="translated">シナリオによっては、データの一貫性を確保するために、一部またはすべてをトランザクションで囲みたい場合があります。このメソッドをオーバーライドして、トランザクションである必要がある操作を返すことでこれを行うことができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3ed8a59a56249cf24f13e7ffcf67fc4dcffea023" translate="yes" xml:space="preserve">
          <source>In summary, models</source>
          <target state="translated">要約すると、モデル</target>
        </trans-unit>
        <trans-unit id="61a2e894a6164c1560b05ee22a2faf1053a05402" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;guide-output-pagination&quot;&gt;Pagination&lt;/a&gt; and &lt;a href=&quot;guide-output-sorting&quot;&gt;Sorting&lt;/a&gt; sections, we have described how to allow end users to choose a particular page of data to display and sort them by some columns. Because the task of paginating and sorting data is very common, Yii provides a set of &lt;em&gt;data provider&lt;/em&gt; classes to encapsulate it.</source>
          <target state="translated">では&lt;a href=&quot;guide-output-pagination&quot;&gt;ページネーション&lt;/a&gt;と&lt;a href=&quot;guide-output-sorting&quot;&gt;ソート&lt;/a&gt;セクション、我々は、エンドユーザーが表示するデータの特定のページを選択し、いくつかの列によってそれらをソートすることを可能にする方法について述べました。データのページ付けとソートのタスクは非常に一般的であるため、Yiiはそれをカプセル化するための&lt;em&gt;データプロバイダー&lt;/em&gt;クラスのセットを&lt;em&gt;提供&lt;/em&gt;します。</target>
        </trans-unit>
        <trans-unit id="48ee1e4e346026fc9e757bff8e6e6cdaa606fd0e" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt;, class autoloaders for different libraries are registered. This includes the Composer autoloader through its &lt;code&gt;autoload.php&lt;/code&gt; file and the Yii autoloader through its &lt;code&gt;Yii&lt;/code&gt; class file. The entry script then loads the application &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; and creates an &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; instance.</source>
          <target state="translated">で&lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;エントリスクリプト&lt;/a&gt;、異なるライブラリのクラスオートローダーは登録されています。これには、 &lt;code&gt;autoload.php&lt;/code&gt; ファイルによるComposerオートローダーと &lt;code&gt;Yii&lt;/code&gt; クラスファイルによるYiiオートローダーが含まれます。次に、エントリスクリプトはアプリケーション&lt;a href=&quot;guide-concept-configurations&quot;&gt;構成&lt;/a&gt;をロードし、&lt;a href=&quot;guide-structure-applications&quot;&gt;アプリケーション&lt;/a&gt;インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="77e3595c24ae1d4de4f6354d101786dd64c6a0fd" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt;, each tier has its own root alias. For example, the front-end tier has a root alias &lt;code&gt;@frontend&lt;/code&gt;, while the back-end tier root alias is &lt;code&gt;@backend&lt;/code&gt;. As a result, you may put the front-end classes under the namespace &lt;code&gt;frontend&lt;/code&gt; while the back-end classes are under &lt;code&gt;backend&lt;/code&gt;. This will allow these classes to be autoloaded by the Yii autoloader.</source>
          <target state="translated">で&lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;高度なプロジェクトテンプレート&lt;/a&gt;、各階層には、独自のルートの別名を持っています。たとえば、フロントエンド層にはルートエイリアス &lt;code&gt;@frontend&lt;/code&gt; があり、バックエンド層のルートエイリアスは &lt;code&gt;@backend&lt;/code&gt; です。その結果、 &lt;code&gt;backend&lt;/code&gt; クラスがbackendの下にある間に、 &lt;code&gt;frontend&lt;/code&gt; クラスを名前空間frontendの下に置くことができます。これにより、これらのクラスがYiiオートローダーによってオートロードされるようになります。</target>
        </trans-unit>
        <trans-unit id="cccdafc371d04e0912238d3b7289c362d079b412" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;composer.json&lt;/code&gt; of your project, add the following lines:</source>
          <target state="translated">プロジェクトの &lt;code&gt;composer.json&lt;/code&gt; に、次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="c9d3dd633c3452ece02051a45be5a07698138947" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;create&lt;/code&gt; action (defined by the &lt;code&gt;actionCreate()&lt;/code&gt; method), the code is similar. It first tries to populate a new instance of the &lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; using the request data and save the model. If both succeed it will redirect the browser to the &lt;code&gt;view&lt;/code&gt; action with the ID of the newly created model. Otherwise it will display the &lt;code&gt;create&lt;/code&gt; view through which users can provide the needed input.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; （で定義されたアクション &lt;code&gt;actionCreate()&lt;/code&gt; メソッド）、コードも同様です。最初に、要求データを使用して&lt;a href=&quot;guide-structure-models&quot;&gt;モデルの&lt;/a&gt;新しいインスタンスを設定し、モデルを保存しようとします。両方が成功した場合、ブラウザは、新しく作成されたモデルのIDを持つ &lt;code&gt;view&lt;/code&gt; アクションにリダイレクトされます。それ以外の場合は、ユーザーが必要な入力を提供できる &lt;code&gt;create&lt;/code&gt; ビューが表示されます。</target>
        </trans-unit>
        <trans-unit id="d937606db7a455e2bb87dcde4e18035a444b3d63" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;update&lt;/code&gt; action, we first load the &lt;code&gt;$user&lt;/code&gt; and &lt;code&gt;$profile&lt;/code&gt; models to be updated from the database. We then call &lt;a href=&quot;yii-base-model#load()-detail&quot;&gt;yii\base\Model::load()&lt;/a&gt; to populate these two models with the user input. If loading is successful, we will validate the two models and then save them &amp;mdash; please note that we use &lt;code&gt;save(false)&lt;/code&gt; to skip over validations inside the models as the user input data have already been validated. If loading is not successful, we will render the &lt;code&gt;update&lt;/code&gt; view which has the following content:</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; アクションでは、最初に、更新する &lt;code&gt;$user&lt;/code&gt; モデルと &lt;code&gt;$profile&lt;/code&gt; モデルをデータベースからロードします。次に、&lt;a href=&quot;yii-base-model#load()-detail&quot;&gt;yii \ base \ Model :: load（）&lt;/a&gt;を呼び出して、これら2つのモデルにユーザー入力を入力します。ロードが成功した場合、2つのモデルを検証して保存します。ユーザー入力データは既に検証されている &lt;code&gt;save(false)&lt;/code&gt; を使用してモデル内の検証をスキップすることに注意してください。ロードが成功しない場合は、次の内容の &lt;code&gt;update&lt;/code&gt; ビューをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="abb70b6b8810a76c79b24275d41e814fa1614c65" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;view&lt;/code&gt; action (defined by the &lt;code&gt;actionView()&lt;/code&gt; method), the code first loads the &lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; according to the requested model ID; If the model is loaded successfully, it will display it using a &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt; named &lt;code&gt;view&lt;/code&gt;. Otherwise, it will throw an exception.</source>
          <target state="translated">&lt;code&gt;view&lt;/code&gt; アクション（によって定義 &lt;code&gt;actionView()&lt;/code&gt; メソッド）、コードが最初にロード&lt;a href=&quot;guide-structure-models&quot;&gt;モデル&lt;/a&gt;要求された機種IDに応じ。モデルが正常にロードされると、&lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt;という名前の &lt;code&gt;view&lt;/code&gt; を使用してモデルが表示されます。それ以外の場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="38741ea73b0ac314976a3a1c53ba3a0b26fa8acf" translate="yes" xml:space="preserve">
          <source>In the SQL statement, you can embed one or multiple parameter placeholders (e.g. &lt;code&gt;:id&lt;/code&gt; in the above example). A parameter placeholder should be a string starting with a colon. You may then call one of the following parameter binding methods to bind the parameter values:</source>
          <target state="translated">SQLステートメントでは、1つまたは複数のパラメータープレースホルダーを埋め込むことができます（上記の例では &lt;code&gt;:id&lt;/code&gt; ）。パラメータのプレースホルダは、コロンで始まる文字列である必要があります。次に、以下のパラメーターバインディングメソッドのいずれかを呼び出して、パラメーター値をバインドします。</target>
        </trans-unit>
        <trans-unit id="9b817ffd564bb4dc6ff99c9eff425cc1b63e04f7" translate="yes" xml:space="preserve">
          <source>In the Web form that collects the user input, add a hidden field that stores the lock version of the recording being updated.</source>
          <target state="translated">ユーザーの入力を収集するWebフォームでは、更新中の記録のロックバージョンを格納する隠しフィールドを追加します。</target>
        </trans-unit>
        <trans-unit id="a6e413a8811435732fdc1f5d13e97397205f6e39" translate="yes" xml:space="preserve">
          <source>In the Web form that takes user inputs, add a hidden field to store the current version number of the row being updated. Be sure your version attribute has input validation rules and validates successfully.</source>
          <target state="translated">ユーザーの入力を受け付ける Web フォームに、更新される行の現在のバージョン番号を格納する非表示フィールドを追加します。バージョン属性に入力の検証ルールがあり、正常に検証されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="92a0f38a4d2046996a85f125b92cd25b82aaa4fa" translate="yes" xml:space="preserve">
          <source>In the above &lt;code&gt;$attribute&lt;/code&gt; refers to the attribute currently being validated while &lt;code&gt;$params&lt;/code&gt; contains an array of validator configuration options such as &lt;code&gt;max&lt;/code&gt; in case of &lt;code&gt;string&lt;/code&gt; validator. The value of the attribute currently being validated can be accessed as &lt;code&gt;$this-&amp;gt;$attribute&lt;/code&gt;. Note the &lt;code&gt;$&lt;/code&gt; before &lt;code&gt;attribute&lt;/code&gt;; this is taking the value of the variable &lt;code&gt;$attribute&lt;/code&gt; and using it as the name of the property to access.</source>
          <target state="translated">上記の &lt;code&gt;$attribute&lt;/code&gt; は現在検証されている属性を示し、 &lt;code&gt;$params&lt;/code&gt; には &lt;code&gt;string&lt;/code&gt; バリデーターの場合の &lt;code&gt;max&lt;/code&gt; などのバリデーター構成オプションの配列が含まれています。現在検証されている属性の値には、 &lt;code&gt;$this-&amp;gt;$attribute&lt;/code&gt; としてアクセスできます。 &lt;code&gt;$&lt;/code&gt; before &lt;code&gt;attribute&lt;/code&gt; 注意してください。これは、変数 &lt;code&gt;$attribute&lt;/code&gt; 値を取得し、アクセスするプロパティの名前として使用しています。</target>
        </trans-unit>
        <trans-unit id="ee29e244aa41f83a1f032e5e3ffd0a11ce8e58bd" translate="yes" xml:space="preserve">
          <source>In the above &lt;code&gt;mailer&lt;/code&gt; is ID of the component that sends email and should be already configured.</source>
          <target state="translated">上記の &lt;code&gt;mailer&lt;/code&gt; は、電子メールを送信するコンポーネントのIDがあり、すでに設定されているはずです。</target>
        </trans-unit>
        <trans-unit id="468a966a350a2c46623415d1c74ea08b02a9c077" translate="yes" xml:space="preserve">
          <source>In the above code, &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm::begin()&lt;/a&gt; not only creates a form instance, but also marks the beginning of the form. All of the content placed between &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm::begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;ActiveForm::end()&lt;/a&gt; will be wrapped within the HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. As with any widget, you can specify some options as to how the widget should be configured by passing an array to the &lt;code&gt;begin&lt;/code&gt; method. In this case, an extra CSS class and identifying ID are passed to be used in the opening &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. For all available options, please refer to the API documentation of &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt;.</source>
          <target state="translated">上記のコードでは、&lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm :: begin（）&lt;/a&gt;はフォームインスタンスを作成するだけでなく、フォームの開始をマークします。&lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm :: begin（）&lt;/a&gt;と&lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;ActiveForm :: end（）の&lt;/a&gt;間に配置されたすべてのコンテンツは、HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; タグで囲まれます。他のウィジェットと同様に、配列を &lt;code&gt;begin&lt;/code&gt; メソッドに渡すことで、ウィジェットの構成方法に関するいくつかのオプションを指定できます。この場合、追加のCSSクラスと識別IDが渡され、 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; の開始タグで使用されます。利用可能なすべてのオプションについては、&lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii \ widgets \ ActiveFormの&lt;/a&gt; APIドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="aecd6b07c362c37a4a41f804d85cc593aa548092" translate="yes" xml:space="preserve">
          <source>In the above code, a message source supported by &lt;a href=&quot;yii-i18n-phpmessagesource&quot;&gt;yii\i18n\PhpMessageSource&lt;/a&gt; is being configured.</source>
          <target state="translated">上記のコードでは、&lt;a href=&quot;yii-i18n-phpmessagesource&quot;&gt;yii \ i18n \ PhpMessageSourceで&lt;/a&gt;サポートされるメッセージソースが構成されています。</target>
        </trans-unit>
        <trans-unit id="06c11d2674ddaa447071f06b82909700160d299e" translate="yes" xml:space="preserve">
          <source>In the above code, in the context of a view file, the &lt;code&gt;AppAsset&lt;/code&gt; bundle is registered on the current view (represented by &lt;code&gt;$this&lt;/code&gt;). When registering asset bundles from within a widget, you would pass the &lt;a href=&quot;yii-base-widget#%24view-detail&quot;&gt;$view&lt;/a&gt; of the widget instead (&lt;code&gt;$this-&amp;gt;view&lt;/code&gt;).</source>
          <target state="translated">上記のコードでは、ビューファイルのコンテキストで、 &lt;code&gt;AppAsset&lt;/code&gt; バンドルが現在のビュー（ &lt;code&gt;$this&lt;/code&gt; 表される）に登録されています。ウィジェット内からアセットバンドルを登録する場合、代わりにウィジェットの&lt;a href=&quot;yii-base-widget#%24view-detail&quot;&gt;$ view&lt;/a&gt;を渡します（ &lt;code&gt;$this-&amp;gt;view&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="47980e038a276420642b24d2763eecc4cb20ef1e" translate="yes" xml:space="preserve">
          <source>In the above code, the action method returns the result of the &lt;code&gt;redirect()&lt;/code&gt; method. As explained before, the response object returned by an action method will be used as the response sending to end users.</source>
          <target state="translated">上記のコードでは、アクションメソッドは &lt;code&gt;redirect()&lt;/code&gt; メソッドの結果を返します。前述のように、アクションメソッドによって返される応答オブジェクトは、エンドユーザーに送信する応答として使用されます。</target>
        </trans-unit>
        <trans-unit id="d5e58f85f4445c478e50307b833ef852f842dc29" translate="yes" xml:space="preserve">
          <source>In the above code, the array keys are column names while the array values are the corresponding order by directions. The PHP constant &lt;code&gt;SORT_ASC&lt;/code&gt; specifies ascending sort and &lt;code&gt;SORT_DESC&lt;/code&gt; descending sort.</source>
          <target state="translated">上記のコードでは、配列キーは列名であり、配列値は対応する方向別の順序です。PHP定数 &lt;code&gt;SORT_ASC&lt;/code&gt; は昇順の並べ替えと &lt;code&gt;SORT_DESC&lt;/code&gt; の降順の並べ替えを指定します。</target>
        </trans-unit>
        <trans-unit id="6465f501e9a43adc22b5ea2a23b8faee05dfcaa2" translate="yes" xml:space="preserve">
          <source>In the above code, two log targets are registered in the &lt;a href=&quot;yii-log-dispatcher#%24targets-detail&quot;&gt;yii\log\Dispatcher::$targets&lt;/a&gt; property:</source>
          <target state="translated">上記のコードでは、2つのログターゲットが&lt;a href=&quot;yii-log-dispatcher#%24targets-detail&quot;&gt;yii \ log \ Dispatcher :: $ targets&lt;/a&gt;プロパティに登録されています。</target>
        </trans-unit>
        <trans-unit id="1177a53bf1566d73d8297f0378bbb0c3a2f7fd89" translate="yes" xml:space="preserve">
          <source>In the above code, we have declared an &lt;code&gt;orders&lt;/code&gt; relation for the &lt;code&gt;Customer&lt;/code&gt; class, and a &lt;code&gt;customer&lt;/code&gt; relation for the &lt;code&gt;Order&lt;/code&gt; class.</source>
          <target state="translated">上記のコードでは、 &lt;code&gt;Customer&lt;/code&gt; クラスの &lt;code&gt;orders&lt;/code&gt; 関係と &lt;code&gt;Order&lt;/code&gt; クラスの &lt;code&gt;customer&lt;/code&gt; 関係を宣言しています。</target>
        </trans-unit>
        <trans-unit id="7a5ebc97c6876660b07545f44b5d99da277f6373" translate="yes" xml:space="preserve">
          <source>In the above code, when the form is submitted, the &lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;yii\web\UploadedFile::getInstance()&lt;/a&gt; method is called to represent the uploaded file as an &lt;code&gt;UploadedFile&lt;/code&gt; instance. We then rely on the model validation to make sure the uploaded file is valid and save the file on the server.</source>
          <target state="translated">上記のコードでは、フォームが送信されると、&lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;yii \ web \ UploadedFile :: getInstance（）&lt;/a&gt;メソッドが呼び出され、アップロードされたファイルが &lt;code&gt;UploadedFile&lt;/code&gt; インスタンスとして表されます。次に、モデルの検証を使用して、アップロードされたファイルが有効であることを確認し、サーバーにファイルを保存します。</target>
        </trans-unit>
        <trans-unit id="817ab8597a650262634bfec9b1d2bd4b35e7ce3f" translate="yes" xml:space="preserve">
          <source>In the above example the method &lt;code&gt;compose()&lt;/code&gt; creates an instance of the mail message, which then is populated and sent. You may put more complex logic in this process if needed:</source>
          <target state="translated">上記の例では、メソッド &lt;code&gt;compose()&lt;/code&gt; がメールメッセージのインスタンスを作成し、それを入力して送信します。必要に応じて、このプロセスにさらに複雑なロジックを含めることができます。</target>
        </trans-unit>
        <trans-unit id="60c490d6ea2de69fb4645106ce917af1ed70c92a" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt; is a Closure that will be evaluated when the access rule is checked, so the model will only be loaded when needed. If the creation of role parameters is a simple operation, you may just specify an array, like so:</source>
          <target state="translated">上記の例では、&lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt;はアクセスルールがチェックされたときに評価されるクロージャーであるため、モデルは必要な場合にのみロードされます。ロールパラメータの作成が単純な操作の場合は、次のように配列を指定するだけです。</target>
        </trans-unit>
        <trans-unit id="9c07ebedbca92612df62e48e0250c344a54260b7" translate="yes" xml:space="preserve">
          <source>In the above example, because you provide to &lt;a href=&quot;yii-data-activedataprovider&quot;&gt;yii\data\ActiveDataProvider&lt;/a&gt; an &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt; object, it is intelligent enough to return primary key values as the keys. You may also explicitly specify how the key values should be calculated by configuring &lt;a href=&quot;yii-data-activedataprovider#%24key-detail&quot;&gt;yii\data\ActiveDataProvider::$key&lt;/a&gt; with a column name or a callable calculating key values. For example,</source>
          <target state="translated">上記の例では、&lt;a href=&quot;yii-data-activedataprovider&quot;&gt;yii \ data \ ActiveDataProvider&lt;/a&gt;に&lt;a href=&quot;yii-db-activequery&quot;&gt;yii \ db \ ActiveQuery&lt;/a&gt;オブジェクトを提供しているため、主キーの値をキーとして返すのに十分にインテリジェントです。列名または呼び出し可能な計算キー値を使用して&lt;a href=&quot;yii-data-activedataprovider#%24key-detail&quot;&gt;yii \ data \ ActiveDataProvider :: $ key&lt;/a&gt;を構成することにより、キー値の計算方法を明示的に指定することもできます。例えば、</target>
        </trans-unit>
        <trans-unit id="72086c9910dd67f6c856d8e8f1850e851d969ab7" translate="yes" xml:space="preserve">
          <source>In the above example, no parameters are passed with the roles specified for accessing an action, but in case of the &lt;code&gt;updatePost&lt;/code&gt; permission, we need to pass a &lt;code&gt;post&lt;/code&gt; parameter for it to work properly. You can pass parameters to &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt; by specifying &lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt; on the access rule:</source>
          <target state="translated">上記の例では、アクションにアクセスするために指定されたロールでパラメーターが渡されていませんが、 &lt;code&gt;updatePost&lt;/code&gt; 権限の場合、適切に機能するために &lt;code&gt;post&lt;/code&gt; パラメーターを渡す必要があります。アクセスルールで&lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt;を指定することにより、パラメーターを&lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can（）に&lt;/a&gt;渡すことができます。</target>
        </trans-unit>
        <trans-unit id="6c78c95f5b923119ce871df7a517ee3991bbcd40" translate="yes" xml:space="preserve">
          <source>In the above example, the category &lt;code&gt;app/error&lt;/code&gt; is mapped to the PHP file &lt;code&gt;@app/messages/ru-RU/error.php&lt;/code&gt; (assuming &lt;code&gt;ru-RU&lt;/code&gt; is the target language). However, without this configuration the category would be mapped to &lt;code&gt;@app/messages/ru-RU/app/error.php&lt;/code&gt; instead.</source>
          <target state="translated">上記の例では、カテゴリ &lt;code&gt;app/error&lt;/code&gt; がPHPファイル &lt;code&gt;@app/messages/ru-RU/error.php&lt;/code&gt; マッピングされています（ &lt;code&gt;ru-RU&lt;/code&gt; がターゲット言語であると想定しています）。ただし、この構成がない場合、カテゴリは代わりに &lt;code&gt;@app/messages/ru-RU/app/error.php&lt;/code&gt; にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="f26e007eacc84b914e412c472dc2c19f2d4e6b88" translate="yes" xml:space="preserve">
          <source>In the above example, two attributes are declared for the &lt;a href=&quot;yii-data-sort&quot;&gt;Sort&lt;/a&gt; object: &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">上記の例では、&lt;a href=&quot;yii-data-sort&quot;&gt;Sort&lt;/a&gt;オブジェクトに対して2つの属性、 &lt;code&gt;age&lt;/code&gt; と &lt;code&gt;name&lt;/code&gt; が宣言されています。</target>
        </trans-unit>
        <trans-unit id="177e373efcb93ee3d29013397019cccb45a864b0" translate="yes" xml:space="preserve">
          <source>In the above step 1 and 3, events named &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_DELETE-detail&quot;&gt;EVENT_BEFORE_DELETE&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_DELETE-detail&quot;&gt;EVENT_AFTER_DELETE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">上記のステップ1および3では、&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_DELETE-detail&quot;&gt;EVENT_BEFORE_DELETE&lt;/a&gt;および&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_DELETE-detail&quot;&gt;EVENT_AFTER_DELETE&lt;/a&gt;という名前のイベントが、対応するメソッドによって発生します。</target>
        </trans-unit>
        <trans-unit id="28a44c7ea3ef235cbcd6d073a45e7541ff9d79f8" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;, and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">上記のステップ1、2、3、および5では、イベント&lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;、&lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;、&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;、および&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt;が対応するメソッドによって発生します。</target>
        </trans-unit>
        <trans-unit id="4a0c5e3b1be87b1c782054438d67f072025ad539" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;, and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">上記のステップ1、2、3、および5では、イベント&lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;、&lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;、&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;、および&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt;が対応するメソッドによって発生します。</target>
        </trans-unit>
        <trans-unit id="12e9a59d333bfe2b6a9e9f4df5571be4f4b28fa1" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; and &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">上記のステップ1、2、3、および5では、イベント&lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;、&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;、&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt;、および&lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;が対応するメソッドによって発生します。</target>
        </trans-unit>
        <trans-unit id="6d19d8d8dd4d6d48e978523e03bb1023a3bee9c5" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; and &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">上記のステップ1、2、3、および5では、イベント&lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;、&lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;、&lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt;および&lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;が対応するメソッドによって発生します。</target>
        </trans-unit>
        <trans-unit id="f847f6d8632888c1c5ff2d0944391dbaf1a9939f" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;$customer&lt;/code&gt; is a &lt;code&gt;Customer&lt;/code&gt; object while &lt;code&gt;$customers&lt;/code&gt; is an array of &lt;code&gt;Customer&lt;/code&gt; objects. They are all populated with the data retrieved from the &lt;code&gt;customer&lt;/code&gt; table.</source>
          <target state="translated">上記の &lt;code&gt;$customer&lt;/code&gt; は &lt;code&gt;Customer&lt;/code&gt; オブジェクトであり、 &lt;code&gt;$customers&lt;/code&gt; は &lt;code&gt;Customer&lt;/code&gt; オブジェクトの配列です。それらにはすべて、 &lt;code&gt;customer&lt;/code&gt; テーブルから取得したデータが入力されます。</target>
        </trans-unit>
        <trans-unit id="f74bb67034e86890a2d422c3c96fe8fa856db298" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;&amp;lt;route&amp;gt;&lt;/code&gt; refers to the route to the controller action. The options will populate the class properties and arguments are the parameters of the action method.</source>
          <target state="translated">上記の &lt;code&gt;&amp;lt;route&amp;gt;&lt;/code&gt; は、コントローラーアクションへのルートを指します。オプションはクラスプロパティを設定し、引数はアクションメソッドのパラメーターです。</target>
        </trans-unit>
        <trans-unit id="1a7628f6d0a0c48d3ea61a8a3d25fdde1730a198" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;text&lt;/code&gt; corresponds to &lt;a href=&quot;yii-i18n-formatter#asText()-detail&quot;&gt;yii\i18n\Formatter::asText()&lt;/a&gt;. The value of the column is passed as the first argument. In the second column definition, &lt;code&gt;date&lt;/code&gt; corresponds to &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;yii\i18n\Formatter::asDate()&lt;/a&gt;. The value of the column is, again, passed as the first argument while 'php:Y-m-d' is used as the second argument value.</source>
          <target state="translated">上記では、 &lt;code&gt;text&lt;/code&gt; は&lt;a href=&quot;yii-i18n-formatter#asText()-detail&quot;&gt;yii \ i18n \ Formatter :: asText（）に&lt;/a&gt;対応しています。列の値が最初の引数として渡されます。2番目の列の定義では、 &lt;code&gt;date&lt;/code&gt; は&lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;yii \ i18n \ Formatter :: asDate（）に対応してい&lt;/a&gt;ます。列の値は最初の引数として渡され、 'php：Ymd'は2番目の引数値として使用されます。</target>
        </trans-unit>
        <trans-unit id="1cec26f1484115686c1c006e4ac6624ae20e5ade" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;www&lt;/code&gt; is your webserver webroot directory. It could be named differently. Common names are: &lt;code&gt;www&lt;/code&gt;, &lt;code&gt;htdocs&lt;/code&gt;, and &lt;code&gt;public_html&lt;/code&gt;.</source>
          <target state="translated">上記の &lt;code&gt;www&lt;/code&gt; は、ウェブサーバーのウェブルートディレクトリです。別の名前にすることもできます。一般的な名前は、 &lt;code&gt;www&lt;/code&gt; 、 &lt;code&gt;htdocs&lt;/code&gt; 、および &lt;code&gt;public_html&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ef0b4ec31ea4811be604363ebf134034263baf6d" translate="yes" xml:space="preserve">
          <source>In the above, an anonymous function is attached to the &quot;update&quot; event of the post. You may attach the following types of event handlers:</source>
          <target state="translated">上記では、投稿の「更新」イベントに匿名関数をアタッチしています。以下のようなタイプのイベントハンドラをアタッチすることができます。</target>
        </trans-unit>
        <trans-unit id="9f81b5924ae8633ba936771163879bac06e1c572" translate="yes" xml:space="preserve">
          <source>In the above, both Step 2 and 3 occur at the end of the class constructor. It is recommended that you perform object initialization in the &lt;code&gt;init()&lt;/code&gt; method because at that stage, the object configuration is already applied.</source>
          <target state="translated">上記では、ステップ2と3の両方がクラスコンストラクターの最後にあります。 &lt;code&gt;init()&lt;/code&gt; メソッドでオブジェクトの初期化を実行することをお勧めします。その段階では、オブジェクト構成がすでに適用されているためです。</target>
        </trans-unit>
        <trans-unit id="3a865e97e29e600f5fb600a24b2e029e48fe4080" translate="yes" xml:space="preserve">
          <source>In the above, if the command name is not provided, all available commands will be displayed.</source>
          <target state="translated">上記では、コマンド名が指定されていない場合は、使用可能なコマンドを全て表示します。</target>
        </trans-unit>
        <trans-unit id="3c3e7963a7dd4d40b6df5a3b76080a9721df058b" translate="yes" xml:space="preserve">
          <source>In the above, the &lt;code&gt;deferred&lt;/code&gt; variable is provided by Yii, which is an array of Deferred objects. The &lt;code&gt;$.get()&lt;/code&gt; jQuery method creates a Deferred object which is pushed to the &lt;code&gt;deferred&lt;/code&gt; array.</source>
          <target state="translated">上記では、 &lt;code&gt;deferred&lt;/code&gt; 変数はYiiによって提供されます。これは、遅延オブジェクトの配列です。 &lt;code&gt;$.get()&lt;/code&gt; jQueryの方法はにプッシュされる繰延オブジェクト作成 &lt;code&gt;deferred&lt;/code&gt; 配列。</target>
        </trans-unit>
        <trans-unit id="41d890539b4bc592bd83034ef7d007fb18aed747" translate="yes" xml:space="preserve">
          <source>In the above, the first argument is the model, while the second one is the attribute expression. In its simplest form the expression is just an attribute name, but it can be an attribute name prefixed and/or suffixed with array indexes, which is mainly used for tabular input:</source>
          <target state="translated">上記では、第一引数はモデルであり、第二引数は属性式です。最も単純な形では、式は単なる属性名ですが、主に表形式の入力に使用される、配列のインデックスを接頭辞や接尾辞にした属性名であっても構いません。</target>
        </trans-unit>
        <trans-unit id="18c50d5918e7e82b04c55c829b22ffe4502a7861" translate="yes" xml:space="preserve">
          <source>In the above, there is an alternative way to configure the &lt;code&gt;search&lt;/code&gt; component. Instead of directly writing a PHP callback which builds a &lt;code&gt;SolrService&lt;/code&gt; instance, you can use a static class method to return such a callback, like shown as below:</source>
          <target state="translated">上記では、 &lt;code&gt;search&lt;/code&gt; コンポーネントを設定する別の方法があります。 &lt;code&gt;SolrService&lt;/code&gt; インスタンスを構築するPHPコールバックを直接作成する代わりに、静的クラスメソッドを使用して、次のようにそのようなコールバックを返すことができます。</target>
        </trans-unit>
        <trans-unit id="81a6020d8ad894793a9f072d8598bc5cf6cec1a7" translate="yes" xml:space="preserve">
          <source>In the above, two attributes are declared: &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;age&lt;/code&gt; attribute is a simple attribute which is equivalent to the following:</source>
          <target state="translated">上記では、 &lt;code&gt;age&lt;/code&gt; と &lt;code&gt;name&lt;/code&gt; の 2つの属性が宣言されています。 &lt;code&gt;age&lt;/code&gt; 属性は以下と等価である、単純な属性です。</target>
        </trans-unit>
        <trans-unit id="ed25307523e215dbfeb3bdb2d82f57dbf6ee70a7" translate="yes" xml:space="preserve">
          <source>In the above, two memcache servers are used: server1 and server2. You can configure more properties of each server, such as &lt;code&gt;persistent&lt;/code&gt;, &lt;code&gt;weight&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt;. Please see &lt;a href=&quot;yii-caching-memcacheserver&quot;&gt;yii\caching\MemCacheServer&lt;/a&gt; for available options.</source>
          <target state="translated">上記では、server1とserver2の2つのmemcacheサーバーが使用されています。 &lt;code&gt;persistent&lt;/code&gt; 、 &lt;code&gt;weight&lt;/code&gt; 、 &lt;code&gt;timeout&lt;/code&gt; など、各サーバーのプロパティをさらに構成できます。利用可能なオプションについては、&lt;a href=&quot;yii-caching-memcacheserver&quot;&gt;yii \ caching \ MemCacheServer&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a56fa7a3535171f417cfb3fc8c7dd673c7076fd7" translate="yes" xml:space="preserve">
          <source>In the above, we declare two &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$attributes&lt;/a&gt; that support sorting: &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;. We pass the sort information to the Article query so that the query results are sorted by the orders specified by the Sort object. In the view, we show two hyperlinks that can lead to pages with the data sorted by the corresponding attributes.</source>
          <target state="translated">上記では、ソートをサポートする2つの&lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$ attributes&lt;/a&gt;を宣言しています： &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;age&lt;/code&gt; 。クエリ情報がSortオブジェクトで指定された順序でソートされるように、Articleクエリにソート情報を渡します。ビューには、対応する属性でソートされたデータを含むページにつながる2つのハイパーリンクが表示されます。</target>
        </trans-unit>
        <trans-unit id="2cacbaf14d669acabadd0db9aece91da9e0ce9c4" translate="yes" xml:space="preserve">
          <source>In the above, we have described how to define and use fixtures. Below we summarize the typical workflow of running unit tests related with DB:</source>
          <target state="translated">上記では、フィクスチャの定義方法や使い方について説明しました。以下では、DBに関連したユニットテストを実行する際の典型的なワークフローをまとめてみました。</target>
        </trans-unit>
        <trans-unit id="81ced116e0947fe97060e14e70a25c32de0343f8" translate="yes" xml:space="preserve">
          <source>In the above, we have shown how to define a fixture about a DB table. To define a fixture not related with DB (e.g. a fixture about certain files and directories), you may extend from the more general base class &lt;a href=&quot;yii-test-fixture&quot;&gt;yii\test\Fixture&lt;/a&gt; and override the &lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load()&lt;/a&gt; and &lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload()&lt;/a&gt; methods.</source>
          <target state="translated">上記では、DBテーブルに関するフィクスチャを定義する方法を示しました。DBに関連しないフィクスチャ（特定のファイルやディレクトリに関するフィクスチャなど）を定義するには、より一般的な基本クラス&lt;a href=&quot;yii-test-fixture&quot;&gt;yii \ test \ Fixture&lt;/a&gt;から拡張して、&lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load（）&lt;/a&gt;および&lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload（）&lt;/a&gt;メソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="ddc41b8472e6c983809c0ebc64666cbc5076f64a" translate="yes" xml:space="preserve">
          <source>In the above, we specify the supported extended syntax via the &lt;a href=&quot;yii-web-assetconverter#%24commands-detail&quot;&gt;yii\web\AssetConverter::$commands&lt;/a&gt; property. The array keys are the file extension names (without leading dot), and the array values are the resulting asset file extension names and the commands for performing the asset conversion. The tokens &lt;code&gt;{from}&lt;/code&gt; and &lt;code&gt;{to}&lt;/code&gt; in the commands will be replaced with the source asset file paths and the target asset file paths.</source>
          <target state="translated">上記では、サポートされている拡張構文を&lt;a href=&quot;yii-web-assetconverter#%24commands-detail&quot;&gt;yii \ web \ AssetConverter :: $ commands&lt;/a&gt;プロパティで指定しています。配列キーはファイル拡張子名（先頭のドットなし）であり、配列値は結果のアセットファイル拡張子名とアセット変換を実行するためのコマンドです。コマンドのトークン &lt;code&gt;{from}&lt;/code&gt; と &lt;code&gt;{to}&lt;/code&gt; は、ソースアセットファイルのパスとターゲットアセットファイルのパスに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="26ebeb4f72567e250bbe931dc04eafce66c1cb0c" translate="yes" xml:space="preserve">
          <source>In the code above &quot;users&quot; is template name, after this command run, new file named same as template will be created under the &lt;code&gt;$fixtureDataPath&lt;/code&gt; folder. You can generate fixtures for all templates, for example:</source>
          <target state="translated">上記のコードで「users」はテンプレート名です。このコマンドを実行すると、テンプレートと同じ名前の新しいファイルが &lt;code&gt;$fixtureDataPath&lt;/code&gt; フォルダーの下に作成されます。すべてのテンプレートのフィクスチャを生成できます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="897bd332a9b46e74287f3d96b9c20447a13f4284" translate="yes" xml:space="preserve">
          <source>In the code above ACF is attached to the &lt;code&gt;site&lt;/code&gt; controller as a behavior. This is the typical way of using an action filter. The &lt;code&gt;only&lt;/code&gt; option specifies that the ACF should only be applied to the &lt;code&gt;login&lt;/code&gt;, &lt;code&gt;logout&lt;/code&gt; and &lt;code&gt;signup&lt;/code&gt; actions. All other actions in the &lt;code&gt;site&lt;/code&gt; controller are not subject to the access control. The &lt;code&gt;rules&lt;/code&gt; option lists the &lt;a href=&quot;yii-filters-accessrule&quot;&gt;access rules&lt;/a&gt;, which reads as follows:</source>
          <target state="translated">上記のコードでは、ACFはビヘイビアーとして &lt;code&gt;site&lt;/code&gt; コントローラーに接続されています。これは、アクションフィルターを使用する一般的な方法です。 &lt;code&gt;only&lt;/code&gt; ACFのみに適用されるべきであるとのオプションは、 &lt;code&gt;login&lt;/code&gt; 、 &lt;code&gt;logout&lt;/code&gt; および &lt;code&gt;signup&lt;/code&gt; アクション。 &lt;code&gt;site&lt;/code&gt; コントローラーの他のすべてのアクションは、アクセス制御の対象ではありません。 &lt;code&gt;rules&lt;/code&gt; オプションリスト&lt;a href=&quot;yii-filters-accessrule&quot;&gt;アクセスルール&lt;/a&gt;次のように読み取ります：</target>
        </trans-unit>
        <trans-unit id="8f79771a19a5d1563ceed68426976905ea509d12" translate="yes" xml:space="preserve">
          <source>In the code above we're using &lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;indexBy()&lt;/a&gt; when retrieving models from the database to populate an array indexed by models primary keys. These will be later used to identify form fields. &lt;a href=&quot;yii-base-model#loadMultiple()-detail&quot;&gt;Model::loadMultiple()&lt;/a&gt; fills multiple models with the form data coming from POST and &lt;a href=&quot;yii-base-model#validateMultiple()-detail&quot;&gt;Model::validateMultiple()&lt;/a&gt; validates all models at once. As we have validated our models before, using &lt;code&gt;validateMultiple()&lt;/code&gt;, we're now passing &lt;code&gt;false&lt;/code&gt; as a parameter to &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt; to not run validation twice.</source>
          <target state="translated">上記のコードでは、データベースからモデルを取得するときに&lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;indexBy（）&lt;/a&gt;を使用して、モデルの主キーでインデックス付けされた配列にデータを入力しています。これらは後でフォームフィールドを識別するために使用されます。&lt;a href=&quot;yii-base-model#loadMultiple()-detail&quot;&gt;Model :: loadMultiple（）&lt;/a&gt;は複数のモデルにPOSTからのフォームデータを入力し、&lt;a href=&quot;yii-base-model#validateMultiple()-detail&quot;&gt;Model :: validateMultiple（）&lt;/a&gt;はすべてのモデルを一度に検証します。以前に &lt;code&gt;validateMultiple()&lt;/code&gt; を使用してモデルを検証したので、検証を2回実行しないように、&lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save（）&lt;/a&gt;にパラメーターとして &lt;code&gt;false&lt;/code&gt; を渡しています。</target>
        </trans-unit>
        <trans-unit id="bd3f74ef35a1905aee6c542c505734e8c77c325c" translate="yes" xml:space="preserve">
          <source>In the code above, &lt;code&gt;$url&lt;/code&gt; is the URL that the column creates for the button, &lt;code&gt;$model&lt;/code&gt; is the model object being rendered for the current row, and &lt;code&gt;$key&lt;/code&gt; is the key of the model in the data provider array.</source>
          <target state="translated">上記のコードで、 &lt;code&gt;$url&lt;/code&gt; は列がボタン用に作成するURL、 &lt;code&gt;$model&lt;/code&gt; は現在の行にレンダリングされるモデルオブジェクト、 &lt;code&gt;$key&lt;/code&gt; はデータプロバイダー配列のモデルのキーです。</target>
        </trans-unit>
        <trans-unit id="32475e2479879768004e96a9e331fb94d0c500fd" translate="yes" xml:space="preserve">
          <source>In the code above, both Smarty and Twig are configured to be useable by the view files. But in order to get these extensions into your project, you need to also modify your &lt;code&gt;composer.json&lt;/code&gt; file to include them, too:</source>
          <target state="translated">上記のコードでは、SmartyとTwigの両方がビューファイルで使用できるように構成されています。ただし、これらの拡張機能をプロジェクトに組み込むには、 &lt;code&gt;composer.json&lt;/code&gt; ファイルを変更してそれらも含める必要があります。</target>
        </trans-unit>
        <trans-unit id="f877d21ab84581197677deed46e76a38d0cac6c5" translate="yes" xml:space="preserve">
          <source>In the code above, the &lt;code&gt;imageFile&lt;/code&gt; attribute is used to keep the uploaded file instance. It is associated with a &lt;code&gt;file&lt;/code&gt; validation rule which uses &lt;a href=&quot;yii-validators-filevalidator&quot;&gt;yii\validators\FileValidator&lt;/a&gt; to ensure a file with extension name &lt;code&gt;png&lt;/code&gt; or &lt;code&gt;jpg&lt;/code&gt; is uploaded. The &lt;code&gt;upload()&lt;/code&gt; method will perform the validation and save the uploaded file on the server.</source>
          <target state="translated">上記のコードでは、アップロードされたファイルインスタンスを保持するために &lt;code&gt;imageFile&lt;/code&gt; 属性が使用されています。これは&lt;a href=&quot;yii-validators-filevalidator&quot;&gt;yii \ validators \ FileValidator&lt;/a&gt;を使用して拡張子名 &lt;code&gt;png&lt;/code&gt; または &lt;code&gt;jpg&lt;/code&gt; のファイルがアップロードされるようにする &lt;code&gt;file&lt;/code&gt; 検証ルールに関連付けられています。 &lt;code&gt;upload()&lt;/code&gt; メソッドは、検証を実行し、サーバー上でアップロードされたファイルを保存します。</target>
        </trans-unit>
        <trans-unit id="f97d55983c247932583fb30aad343970e4e9b6a1" translate="yes" xml:space="preserve">
          <source>In the constructor of the application, the following bootstrapping work is done:</source>
          <target state="translated">アプリケーションのコンストラクタでは、以下のようなブートストラップ作業を行います。</target>
        </trans-unit>
        <trans-unit id="b1d0a045d632aa6fcc67d9e062e210d8b30ef29b" translate="yes" xml:space="preserve">
          <source>In the controller action that does the data updating, try to catch the &lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii\db\StaleObjectException&lt;/a&gt; and implement necessary business logic (e.g. merging the changes, prompting stated data) to resolve the conflict.</source>
          <target state="translated">データの更新を行うコントローラーアクションで、&lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii \ db \ StaleObjectException&lt;/a&gt;をキャッチし、必要なビジネスロジック（変更のマージ、指定されたデータのプロンプト表示など）を実装して競合を解決します。</target>
        </trans-unit>
        <trans-unit id="19aacb613a6bf0af3193525b4f5693e4dbad7203" translate="yes" xml:space="preserve">
          <source>In the controller action that updates the row using Active Record, try and catch the &lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii\db\StaleObjectException&lt;/a&gt; exception. Implement necessary business logic (e.g. merging the changes, prompting staled data) to resolve the conflict.</source>
          <target state="translated">Active Recordを使用して行を更新するコントローラーアクションで、&lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii \ db \ StaleObjectException&lt;/a&gt;例外を試行してキャッチします。必要なビジネスロジックを実装して（変更のマージ、データの停止など）、競合を解決します。</target>
        </trans-unit>
        <trans-unit id="83d499730cd38291506c9394c86f71f6247d0881" translate="yes" xml:space="preserve">
          <source>In the controller view, insert a &lt;a href=&quot;yii-captcha-captcha&quot;&gt;yii\captcha\Captcha&lt;/a&gt; widget in the form.</source>
          <target state="translated">コントローラービューで、フォームに&lt;a href=&quot;yii-captcha-captcha&quot;&gt;yii \ captcha \ Captcha&lt;/a&gt;ウィジェットを挿入します。</target>
        </trans-unit>
        <trans-unit id="1c44ac8125ea9f2a96b51a8beee2a5ab3b37fc1c" translate="yes" xml:space="preserve">
          <source>In the controller, we will pass an instance of that model to the view, wherein the &lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt; widget is used to display the form:</source>
          <target state="translated">コントローラで、そのモデルのインスタンスをビューに&lt;a href=&quot;yii-widgets-activeform&quot;&gt;渡し&lt;/a&gt;ます。ActiveFormウィジェットを使用してフォームを表示します。</target>
        </trans-unit>
        <trans-unit id="5c4414f85b4c33fd8923cfd169f0e323c9cc1dbd" translate="yes" xml:space="preserve">
          <source>In the example above &lt;code&gt;author_id:integer:notNull:foreignKey(user)&lt;/code&gt; will generate a column named &lt;code&gt;author_id&lt;/code&gt; with a foreign key to the &lt;code&gt;user&lt;/code&gt; table while &lt;code&gt;category_id:integer:defaultValue(1):foreignKey&lt;/code&gt; will generate a column &lt;code&gt;category_id&lt;/code&gt; with a foreign key to the &lt;code&gt;category&lt;/code&gt; table.</source>
          <target state="translated">上記の例では、 &lt;code&gt;author_id:integer:notNull:foreignKey(user)&lt;/code&gt; は &lt;code&gt;user&lt;/code&gt; テーブルへの外部キーを &lt;code&gt;author_id&lt;/code&gt; という名前の列を生成し、 &lt;code&gt;category_id:integer:defaultValue(1):foreignKey&lt;/code&gt; は外部キーを含む列 &lt;code&gt;category_id&lt;/code&gt; を生成します &lt;code&gt;category&lt;/code&gt; テーブル。</target>
        </trans-unit>
        <trans-unit id="b67e7f4075f261551e9dd87400a1e59bc66b8939" translate="yes" xml:space="preserve">
          <source>In the example above we are using wildcard for matching and then filtering each category per needed file. Instead of using &lt;code&gt;fileMap&lt;/code&gt;, you can simply use the convention of the category mapping to the same named file. Now you can use &lt;code&gt;Module::t('validation', 'your custom validation message')&lt;/code&gt; or &lt;code&gt;Module::t('form', 'some form label')&lt;/code&gt; directly.</source>
          <target state="translated">上記の例では、マッチングにワイルドカードを使用し、必要なファイルごとに各カテゴリをフィルタリングしています。 &lt;code&gt;fileMap&lt;/code&gt; を使用する代わりに、同じ名前のファイルへのカテゴリマッピングの規則を使用できます。今、あなたは使用することができる &lt;code&gt;Module::t('validation', 'your custom validation message')&lt;/code&gt; または &lt;code&gt;Module::t('form', 'some form label')&lt;/code&gt; を直接。</target>
        </trans-unit>
        <trans-unit id="0550ac988e107e5bdb246c879ed2d54a95bc1d83" translate="yes" xml:space="preserve">
          <source>In the examples shown above, the action results are all strings which will be treated as the response body to be sent to end users. The following example shows how an action can redirect the user browser to a new URL by returning a response object (because the &lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;redirect()&lt;/a&gt; method returns a response object):</source>
          <target state="translated">上記の例では、アクション結果はすべて文字列であり、エンドユーザーに送信される応答本文として扱われます。次の例は、アクションが応答オブジェクトを返すことによってユーザーのブラウザーを新しいURLにリダイレクトする方法を示しています（&lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;redirect（）&lt;/a&gt;メソッドが応答オブジェクトを返すため）。</target>
        </trans-unit>
        <trans-unit id="8f31d382030614295df897cf04c919e7fba1b667" translate="yes" xml:space="preserve">
          <source>In the expression above, both &lt;code&gt;female&lt;/code&gt; and &lt;code&gt;male&lt;/code&gt; are possible parameter values, while &lt;code&gt;other&lt;/code&gt; handles values that do not match either one of them. Following each possible parameter value, you should specify a phrase and enclose it in a pair of curly brackets.</source>
          <target state="translated">上記の式では、 &lt;code&gt;female&lt;/code&gt; と &lt;code&gt;male&lt;/code&gt; 両方が可能なパラメーター値ですが、 &lt;code&gt;other&lt;/code&gt; パラメーターはどちらにも一致しない値を処理します。可能な各パラメーター値の後に、フレーズを指定し、それを1組の中括弧で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="f7b82950ca3eb74c085ec39aa5d76079eb2a26c7" translate="yes" xml:space="preserve">
          <source>In the first step, it determines the layout name and the context module:</source>
          <target state="translated">最初のステップでは、レイアウト名とコンテキストモジュールを決定します。</target>
        </trans-unit>
        <trans-unit id="c4c20ec84413f9f817b768847f82c4c4c222f04b" translate="yes" xml:space="preserve">
          <source>In the first step, it determines the layout value and the context module:</source>
          <target state="translated">最初のステップでは、レイアウト値とコンテキストモジュールを決定します。</target>
        </trans-unit>
        <trans-unit id="0d03a44a8f83b3126ab36a60c6635d351ceeb16a" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;HelloWidget&lt;/code&gt; HTML-encodes and displays the content assigned to its &lt;code&gt;message&lt;/code&gt; property. If the property is not set, it will display &quot;Hello World&quot; by default.</source>
          <target state="translated">次の例では、 &lt;code&gt;HelloWidget&lt;/code&gt; は、 &lt;code&gt;message&lt;/code&gt; プロパティに割り当てられたコンテンツをHTMLエンコードして表示します。プロパティが設定されていない場合、デフォルトでは「Hello World」と表示されます。</target>
        </trans-unit>
        <trans-unit id="a647d4fa1c2d60d6e11de96eee8f2fc97c1d5384" translate="yes" xml:space="preserve">
          <source>In the following example, ContentNegotiator is configured to support JSON and XML response formats, and English (United States) and German languages.</source>
          <target state="translated">次の例では、ContentNegotiatorはJSONとXMLの応答フォーマット、英語(米国)とドイツ語をサポートするように設定されています。</target>
        </trans-unit>
        <trans-unit id="bf725dd452115361d74ea9e8fcc7de10d135c8e7" translate="yes" xml:space="preserve">
          <source>In the following example, an &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;identity class&lt;/a&gt; is implemented as an &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; class associated with the &lt;code&gt;user&lt;/code&gt; database table.</source>
          <target state="translated">次の例では、&lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;IDクラス&lt;/a&gt;は、 &lt;code&gt;user&lt;/code&gt; データベーステーブルに関連付けられた&lt;a href=&quot;guide-db-active-record&quot;&gt;アクティブレコード&lt;/a&gt;クラスとして実装されています。</target>
        </trans-unit>
        <trans-unit id="f45b7737e0f3b93eb2ce5e2c4a22789b33f27fe1" translate="yes" xml:space="preserve">
          <source>In the following example, any assets ending with &lt;code&gt;jquery.min.js&lt;/code&gt; will be replaced with &lt;code&gt;jquery/dist/jquery.js&lt;/code&gt; which is relative to &lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;$baseUrl&lt;/a&gt; and &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;jquery.min.js&lt;/code&gt; で終わるすべてのアセットが、&lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;$ baseUrl&lt;/a&gt;および&lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$ basePathに&lt;/a&gt;関連する &lt;code&gt;jquery/dist/jquery.js&lt;/code&gt; に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="26544fda077baba51d34d725ee9e838ad7c7dce2" translate="yes" xml:space="preserve">
          <source>In the following example, besides creating the &lt;code&gt;news&lt;/code&gt; table we also insert an initial row into this table.</source>
          <target state="translated">次の例では、 &lt;code&gt;news&lt;/code&gt; テーブルを作成する以外に、このテーブルに最初の行を挿入します。</target>
        </trans-unit>
        <trans-unit id="cca725f3af415949b4f3338963fc58a1ed58dd03" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;view&lt;/code&gt; action (an inline action) has declared two parameters: &lt;code&gt;$id&lt;/code&gt; and &lt;code&gt;$version&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;view&lt;/code&gt; アクション（インラインアクション）が &lt;code&gt;$id&lt;/code&gt; と &lt;code&gt;$version&lt;/code&gt; 2つのパラメーターを宣言しています。</target>
        </trans-unit>
        <trans-unit id="a01213e67d94863f63c6439ee835d7c80581123f" translate="yes" xml:space="preserve">
          <source>In the following example, we create a &lt;code&gt;StatusValidator&lt;/code&gt; which validates if an input is a valid status input against the existing status data. The validator supports both server-side and client-side validation.</source>
          <target state="translated">次の例では、入力が既存のステータスデータに対して有効なステータス入力であるかどうかを検証する &lt;code&gt;StatusValidator&lt;/code&gt; を作成します。バリデーターはサーバー側とクライアント側の両方の検証をサポートしています。</target>
        </trans-unit>
        <trans-unit id="bd2a966019903cdd109b89075a74858a08235878" translate="yes" xml:space="preserve">
          <source>In the following example, we declare an Active Record class named &lt;code&gt;Customer&lt;/code&gt; for the &lt;code&gt;customer&lt;/code&gt; database table.</source>
          <target state="translated">次の例では、 &lt;code&gt;customer&lt;/code&gt; データベーステーブルに &lt;code&gt;Customer&lt;/code&gt; という名前のアクティブレコードクラスを宣言しています。</target>
        </trans-unit>
        <trans-unit id="3d9adffb2c4b59d542dca0f3a2f98e46672747d9" translate="yes" xml:space="preserve">
          <source>In the following example, we show how a generic model can be used for a login form:</source>
          <target state="translated">以下の例では、ログインフォームに汎用モデルを使用する方法を示します。</target>
        </trans-unit>
        <trans-unit id="e94f6172c80c1ed223ed5c2e9252a5b74d834432" translate="yes" xml:space="preserve">
          <source>In the following examples, we assume the target &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;time zone&lt;/a&gt; is set as &lt;code&gt;Europe/Berlin&lt;/code&gt;.</source>
          <target state="translated">次の例では、ターゲットの&lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;タイムゾーン&lt;/a&gt;が &lt;code&gt;Europe/Berlin&lt;/code&gt; に設定されていると想定しています。</target>
        </trans-unit>
        <trans-unit id="63dff8635262222c8d1db6e4b2a14e6b3412d3df" translate="yes" xml:space="preserve">
          <source>In the following rule declaration, the &lt;code&gt;page&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt; parameters are both optional and will take the value of 1 and empty string, respectively, when they are not provided.</source>
          <target state="translated">次のルール宣言では、 &lt;code&gt;page&lt;/code&gt; パラメータと &lt;code&gt;tag&lt;/code&gt; パラメータはどちらもオプションであり、指定されていない場合はそれぞれ1の値と空の文字列を受け取ります。</target>
        </trans-unit>
        <trans-unit id="d9fdf281902e61d3446b55099e65b227216990e4" translate="yes" xml:space="preserve">
          <source>In the following we will describe how to write a &lt;code&gt;UserProfile&lt;/code&gt; unit test class using &lt;code&gt;yii2-codeception&lt;/code&gt;.</source>
          <target state="translated">以下では、 &lt;code&gt;yii2-codeception&lt;/code&gt; を使用して &lt;code&gt;UserProfile&lt;/code&gt; 単体テストクラスを作成する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="a2a25380e22ec4a9056e9aa4f46f274522493632" translate="yes" xml:space="preserve">
          <source>In the following you find some examples:</source>
          <target state="translated">以下では、いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="bb4317488c64a617db36451042d438ecffd0b026" translate="yes" xml:space="preserve">
          <source>In the following, a configuration is used to create and initialize a database connection:</source>
          <target state="translated">以下では、データベース接続を作成して初期化するための設定を使用します。</target>
        </trans-unit>
        <trans-unit id="34b24fa1e0b3e264622d2211c950bf562870a9b6" translate="yes" xml:space="preserve">
          <source>In the following, we introduce an approach to combine and compress asset files without the need to modify your existing application code.</source>
          <target state="translated">以下では、既存のアプリケーションコードを修正することなく、アセットファイルを結合して圧縮するアプローチを紹介します。</target>
        </trans-unit>
        <trans-unit id="006f6f0d755bfb0c4016b3c8b51f72b46caa7e76" translate="yes" xml:space="preserve">
          <source>In the following, we use an example to illustrate how you can build a set of RESTful APIs with some minimal coding effort.</source>
          <target state="translated">以下では、いくつかの最小限のコーディング作業でRESTful APIのセットを構築する方法を例に説明します。</target>
        </trans-unit>
        <trans-unit id="3b85145d55d27de74750582ebdc2fad9e8452ce9" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the features common to all log targets.</source>
          <target state="translated">以下では、すべてのログ対象に共通する機能について説明します。</target>
        </trans-unit>
        <trans-unit id="b08a026c58882ab85e8ff91613f612f1786333a7" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the main usage and properties of every core validator.</source>
          <target state="translated">以下では、各コアバリデータの主な使い方とプロパティについて説明します。</target>
        </trans-unit>
        <trans-unit id="6ede61bc57857e88e7216550c91ac20509a5e48f" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the usage of each query building method.</source>
          <target state="translated">以下では、各クエリ構築方法の使い方を説明します。</target>
        </trans-unit>
        <trans-unit id="593e237107fe1a364b93a34a2cc13596f7ad1482" translate="yes" xml:space="preserve">
          <source>In the following, we will show how you can create a form that would allow you to collect data for both &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Profile&lt;/code&gt; models.</source>
          <target state="translated">以下では、 &lt;code&gt;User&lt;/code&gt; モデルと &lt;code&gt;Profile&lt;/code&gt; モデルの両方のデータを収集できるフォームを作成する方法を示します。</target>
        </trans-unit>
        <trans-unit id="92d40b91f1c0b567e616eb289beb07faa00a1825" translate="yes" xml:space="preserve">
          <source>In the following, we will summarize the various Active Record life cycles and the methods/events that are involved in the life cycles.</source>
          <target state="translated">以下では、様々なActive Recordのライフサイクルと、そのライフサイクルに関わる方法/イベントについてまとめていきます。</target>
        </trans-unit>
        <trans-unit id="930ad6f754d1291a8567c57a0325259b09ef74bc" translate="yes" xml:space="preserve">
          <source>In the form model, declare an attribute to store user-entered verification code, and declare the attribute to be validated by the 'captcha' validator.</source>
          <target state="translated">フォームモデルでは、ユーザーが入力した検証コードを保存するための属性を宣言し、' captcha' バリデータによって検証される属性を宣言します。</target>
        </trans-unit>
        <trans-unit id="7798b4f07de510bb5f985bc6028cec3fe3961ddb" translate="yes" xml:space="preserve">
          <source>In the last subsection, we have explained how to combine all asset bundles into a single one in order to minimize the HTTP requests for asset files referenced in an application. This is not always desirable in practice. For example, imagine your application has a &quot;front end&quot; as well as a &quot;back end&quot;, each of which uses a different set of JavaScript and CSS files. In this case, combining all asset bundles from both ends into a single one does not make sense, because the asset bundles for the &quot;front end&quot; are not used by the &quot;back end&quot; and it would be a waste of network bandwidth to send the &quot;back end&quot; assets when a &quot;front end&quot; page is requested.</source>
          <target state="translated">最後のサブセクションでは、アプリケーションで参照されるアセットファイルに対するHTTPリクエストを最小限に抑えるために、すべてのアセットバンドルを1つにまとめる方法を説明しました。これは実際には必ずしも望ましいことではありません。例えば、あなたのアプリケーションが「フロントエンド」と「バックエンド」を持ち、それぞれが異なる JavaScript と CSS ファイルのセットを使用していると想像してみてください。この場合、「フロントエンド」用のアセットバンドルは「バックエンド」では使用されず、「フロントエンド」ページがリクエストされたときに「バックエンド」のアセットを送信するのはネットワークの帯域幅の無駄になるからです。</target>
        </trans-unit>
        <trans-unit id="01772b7e084f1afe8f8d19da7ef79b38926b9866" translate="yes" xml:space="preserve">
          <source>In the long term it usually gives you a good time-saving effect.</source>
          <target state="translated">長期的に見れば、通常は良い時間短縮効果が得られます。</target>
        </trans-unit>
        <trans-unit id="11181a7f8a9f99639c8791d18596ce6da30fb091" translate="yes" xml:space="preserve">
          <source>In the migration class, you are expected to write code in the &lt;code&gt;up()&lt;/code&gt; method that makes changes to the database structure. You may also want to write code in the &lt;code&gt;down()&lt;/code&gt; method to revert the changes made by &lt;code&gt;up()&lt;/code&gt;. The &lt;code&gt;up()&lt;/code&gt; method is invoked when you upgrade the database with this migration, while the &lt;code&gt;down()&lt;/code&gt; method is invoked when you downgrade the database. The following code shows how you may implement the migration class to create a &lt;code&gt;news&lt;/code&gt; table:</source>
          <target state="translated">移行クラスでは、データベース構造に変更を加えるコードを &lt;code&gt;up()&lt;/code&gt; メソッドに記述することが期待されています。また、 &lt;code&gt;up()&lt;/code&gt; によって行われた変更を元に戻すために、 &lt;code&gt;down()&lt;/code&gt; メソッドにコードを記述することもできます。 &lt;code&gt;up()&lt;/code&gt; あなたはこの移行を使用してデータベースをアップグレードするときながら、この方法は、呼び出された &lt;code&gt;down()&lt;/code&gt; データベースをダウングレードするときにメソッドが呼び出されます。次のコードは、移行テーブルを実装して &lt;code&gt;news&lt;/code&gt; テーブルを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="b5352f6e8746aecc5d93256d8c7969529f55442b" translate="yes" xml:space="preserve">
          <source>In the next request we can get URL remembered in the following way:</source>
          <target state="translated">次のリクエストでは、以下の方法でURLを記憶させることができます。</target>
        </trans-unit>
        <trans-unit id="0388b91d4a6be44e30e1cbd299bf00b4bfcc95f8" translate="yes" xml:space="preserve">
          <source>In the plural rule arguments above, &lt;code&gt;=&lt;/code&gt; means explicit value. So &lt;code&gt;=0&lt;/code&gt; means exactly zero, &lt;code&gt;=1&lt;/code&gt; means exactly one. &lt;code&gt;other&lt;/code&gt; stands for any other value. &lt;code&gt;#&lt;/code&gt; is replaced with the value of &lt;code&gt;n&lt;/code&gt; formatted according to target language.</source>
          <target state="translated">上記の複数のルール引数では、 &lt;code&gt;=&lt;/code&gt; は明示的な値を意味します。したがって、 &lt;code&gt;=0&lt;/code&gt; は正確にゼロを意味し、 &lt;code&gt;=1&lt;/code&gt; は正確に1を意味します。 &lt;code&gt;other&lt;/code&gt; はその他の値を表します。 &lt;code&gt;#&lt;/code&gt; は、ターゲット言語に従ってフォーマットされた &lt;code&gt;n&lt;/code&gt; の値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="e0137ded62f4a20b6e3f580da6808d8376faf51f" translate="yes" xml:space="preserve">
          <source>In the releases of your extension, in addition to code files, you should also consider including the following to help other people learn about and use your extension:</source>
          <target state="translated">あなたの拡張機能のリリースでは、コードファイルに加えて、他の人があなたの拡張機能について学び、使用するのを助けるために、以下のようなものを含めることも考慮すべきです。</target>
        </trans-unit>
        <trans-unit id="90d0b6f6db0613112ab59dc16feeb14ce715a152" translate="yes" xml:space="preserve">
          <source>In the second step, it determines the actual layout file according to the layout value and the context module determined in the first step. The layout value can be:</source>
          <target state="translated">第2のステップでは、レイアウト値と第1のステップで決定されたコンテキストモジュールに従って、実際のレイアウトファイルを決定します。レイアウト値は</target>
        </trans-unit>
        <trans-unit id="74162be168ede01b54358940789028f7eedc3694" translate="yes" xml:space="preserve">
          <source>In the second step, it determines the actual layout file according to the previously found layout name and context module. The layout name can be:</source>
          <target state="translated">第2ステップでは、以前に見つかったレイアウト名とコンテキスト・モジュールに従って、実際のレイアウト・ファイルを決定します。レイアウト名は、次のようにすることができます。</target>
        </trans-unit>
        <trans-unit id="e5e6e3e552627d5c595da898832c1ee3ecec7729" translate="yes" xml:space="preserve">
          <source>In the special case when you want to maintain extensions manually, you may configure this property as follows:</source>
          <target state="translated">拡張機能を手動でメンテナンスしたい特殊なケースでは、このプロパティを以下のように設定することができます。</target>
        </trans-unit>
        <trans-unit id="2d4938470f107ce0270bb4bfb3290c224b8ca98e" translate="yes" xml:space="preserve">
          <source>In the view file above, the current data model is available as &lt;code&gt;$model&lt;/code&gt;. Additionally the following variables are available:</source>
          <target state="translated">上記のビューファイルでは、現在のデータモデルは &lt;code&gt;$model&lt;/code&gt; として利用できます。さらに、次の変数を使用できます。</target>
        </trans-unit>
        <trans-unit id="0bb7197979c5d62d6e9876d2665e34a7b0d1a2d4" translate="yes" xml:space="preserve">
          <source>In the view file, you should add the &lt;code&gt;multiple&lt;/code&gt; option to the &lt;code&gt;fileInput()&lt;/code&gt; call so that the file upload field can receive multiple files:</source>
          <target state="translated">ビューファイルで、 &lt;code&gt;fileInput()&lt;/code&gt; 呼び出しに &lt;code&gt;multiple&lt;/code&gt; オプションを追加して、ファイルアップロードフィールドが複数のファイルを受信できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="dc1cc2dfa07b545938ca7e8c892c39c16846d199" translate="yes" xml:space="preserve">
          <source>In the view you can use javascript to add new input lines dynamically.</source>
          <target state="translated">ビューでは、javascriptを使用して新しい入力行を動的に追加することができます。</target>
        </trans-unit>
        <trans-unit id="8739cc5ba8a1e32ca4949a66c7709ae8161a6046" translate="yes" xml:space="preserve">
          <source>In this and the next few sections, we will describe how to install Yii with the so-called &lt;em&gt;Basic Project Template&lt;/em&gt; and how to implement new features on top of this template. Yii also provides another template called the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt; which is better used in a team development environment to develop applications with multiple tiers.</source>
          <target state="translated">このセクションと次のいくつかのセクションでは、いわゆる&lt;em&gt;基本プロジェクトテンプレート&lt;/em&gt;を使用してYiiをインストールする方法と、このテンプレートに新しい機能を実装する方法について説明します。Yiiは、&lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt;と呼ばれる別のテンプレートも提供します。これは、チーム開発環境で複数層のアプリケーションを開発するのに使用するのに適しています。</target>
        </trans-unit>
        <trans-unit id="4366eb881bb5453529c5307d54196f6265e320d4" translate="yes" xml:space="preserve">
          <source>In this case attributes &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; are required, but &lt;code&gt;secret&lt;/code&gt; must be assigned explicitly.</source>
          <target state="translated">この場合、属性 &lt;code&gt;username&lt;/code&gt; 、 &lt;code&gt;password&lt;/code&gt; および &lt;code&gt;secret&lt;/code&gt; 必要とされますが、 &lt;code&gt;secret&lt;/code&gt; 明示的に割り当てる必要があります。</target>
        </trans-unit>
        <trans-unit id="6d9a3494231bb923705dde8c50a9551ddc7f9752" translate="yes" xml:space="preserve">
          <source>In this case, the container will use a registered PHP callable to build new instances of a class. Each time when &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;yii\di\Container::get()&lt;/a&gt; is called, the corresponding callable will be invoked. The callable is responsible to resolve the dependencies and inject them appropriately to the newly created objects. For example,</source>
          <target state="translated">この場合、コンテナーは登録されたPHP呼び出し可能オブジェクトを使用して、クラスの新しいインスタンスを構築します。&lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;yii \ di \ Container :: get（）&lt;/a&gt;が呼び出されるたびに、対応するcallableが呼び出されます。呼び出し可能オブジェクトは、依存関係を解決し、それらを新しく作成されたオブジェクトに適切に挿入する責任があります。例えば、</target>
        </trans-unit>
        <trans-unit id="26eb690dbd2c78d43e9a964771ba439ac1acd7c3" translate="yes" xml:space="preserve">
          <source>In this case, the themed version could be either &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; or &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt;. The former has precedence over the latter if both files exist.</source>
          <target state="translated">この場合、テーマバージョンは &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; または &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt; いずれかになります。両方のファイルが存在する場合、前者が後者より優先されます。</target>
        </trans-unit>
        <trans-unit id="7c5fe2392a26a651ff9104e5951e87011d834326" translate="yes" xml:space="preserve">
          <source>In this case, the view &lt;code&gt;@app/views/site/index.php&lt;/code&gt; would be themed as either &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; or &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt;, depending on which themed file exists. If both themed files exist, the first one will take precedence. In practice, you would keep most themed view files in &lt;code&gt;@app/themes/basic&lt;/code&gt; and customize some of them in &lt;code&gt;@app/themes/christmas&lt;/code&gt;.</source>
          <target state="translated">この場合、ビュー &lt;code&gt;@app/views/site/index.php&lt;/code&gt; は、 &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; または &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt; どちらかにテーマが設定されます。テーマファイルが存在します。両方のテーマファイルが存在する場合は、最初のファイルが優先されます。実際には、ほとんどのテーマ付きビューファイルを &lt;code&gt;@app/themes/basic&lt;/code&gt; し、その一部を &lt;code&gt;@app/themes/christmas&lt;/code&gt; でカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="a965d447e60a37553486daddd7ee6fc9fef1cf3d" translate="yes" xml:space="preserve">
          <source>In this case, you should put the sub-query in an array and use the array key to specify the alias.</source>
          <target state="translated">この場合は、副問い合わせを配列に入れて、配列のキーでエイリアスを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad2adbe1e86cc2a2d6674dfccc81ce9cbc89e449" translate="yes" xml:space="preserve">
          <source>In this example we use an array to pass global configuration parameters from the PHP part of the application to the JS frontend code.</source>
          <target state="translated">この例では、配列を使用してアプリケーションの PHP 部分から JS フロントエンドコードにグローバルな設定パラメータを渡しています。</target>
        </trans-unit>
        <trans-unit id="be93219142dfb672afd6eb71e888ad89024c03cf" translate="yes" xml:space="preserve">
          <source>In this example, access is allowed for all the IPv4 and IPv6 addresses excluding the &lt;code&gt;192.168.10.0/24&lt;/code&gt; subnet. IPv4 address &lt;code&gt;192.168.10.128&lt;/code&gt; is also allowed, because it is listed before the restriction.</source>
          <target state="translated">この例では、 &lt;code&gt;192.168.10.0/24&lt;/code&gt; 24 サブネットを除くすべてのIPv4およびIPv6アドレスへのアクセスが許可されています。IPv4アドレス &lt;code&gt;192.168.10.128&lt;/code&gt; も制限の前にリストされているため許可されます。</target>
        </trans-unit>
        <trans-unit id="697384e31c1de90bd1e6bbc4532ab13e48f4f048" translate="yes" xml:space="preserve">
          <source>In this guide all composer commands assume you have installed composer &lt;a href=&quot;https://getcomposer.org/doc/00-intro.md#globally&quot;&gt;globally&lt;/a&gt; so that it is available as the &lt;code&gt;composer&lt;/code&gt; command. If you are using the &lt;code&gt;composer.phar&lt;/code&gt; in the local directory instead, you have to adjust the example commands accordingly.</source>
          <target state="translated">このガイドでは、すべてのcomposerコマンドは、 &lt;code&gt;composer&lt;/code&gt; コマンドとして使用できるようにcomposerを&lt;a href=&quot;https://getcomposer.org/doc/00-intro.md#globally&quot;&gt;グローバルに&lt;/a&gt;インストールしていることを前提としています。代わりにローカルディレクトリの &lt;code&gt;composer.phar&lt;/code&gt; を使用している場合は、それに応じてサンプルコマンドを調整する必要があります。</target>
        </trans-unit>
        <trans-unit id="5436fce9d897c4424437c2c9fbdd3b4a63f3cb1f" translate="yes" xml:space="preserve">
          <source>In this method, you may also want to return different lists of fields based on some context information. For example, depending on &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;$scenario&lt;/a&gt; or the privilege of the current application user, you may return different sets of visible fields or filter out some fields.</source>
          <target state="translated">このメソッドでは、いくつかのコンテキスト情報に基づいて、フィールドの異なるリストを返すこともできます。たとえば、&lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;$ scenario&lt;/a&gt;または現在のアプリケーションユーザーの権限に応じて、表示されるフィールドの異なるセットを返すか、一部のフィールドを除外できます。</target>
        </trans-unit>
        <trans-unit id="600a972a598e27df6b4dcb4d42c25bcb6044490a" translate="yes" xml:space="preserve">
          <source>In this method, you may also want to return different lists of fields based on some context information. For example, depending on the privilege of the current application user, you may return different sets of visible fields or filter out some fields.</source>
          <target state="translated">このメソッドでは、いくつかのコンテキスト情報に基づいて異なるフィールドのリストを返したい場合もあります。たとえば、現在のアプリケーションユーザの権限に応じて、異なる可視フィールドのセットを返したり、いくつかのフィールドをフィルタリングしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="0ad9d436ae6e4b37d8dfe306b7b3c4bf9e51af12" translate="yes" xml:space="preserve">
          <source>In this section we'll review the following security aspects:</source>
          <target state="translated">ここでは、以下のようなセキュリティ面について確認していきます。</target>
        </trans-unit>
        <trans-unit id="79675da0a827e23bf791e7a8383835c34be74fd3" translate="yes" xml:space="preserve">
          <source>In this section, we will describe how to compose and send responses to end users.</source>
          <target state="translated">ここでは、エンドユーザへの応答を構成して送信する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="ba259a8c8b10c6ee64d0185493b7c2b214d2502d" translate="yes" xml:space="preserve">
          <source>In this section, we will mainly describe how a resource class extending from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; (or its child classes) can specify what data may be returned via RESTful APIs. If the resource class does not extend from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;, then all its public member variables will be returned.</source>
          <target state="translated">このセクションでは、主に&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;（またはその子クラス）から拡張されたリソースクラスが、RESTful APIを介して返されるデータを指定する方法について説明します。リソースクラスが&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt;から拡張されていない場合、そのすべてのパブリックメンバー変数が返されます。</target>
        </trans-unit>
        <trans-unit id="7e6949cd2bd7b47ca2fa811fd8de9d13fb7e9d25" translate="yes" xml:space="preserve">
          <source>In this section, we will mainly describe the first two steps.</source>
          <target state="translated">ここでは、主に最初の2つのステップについて説明します。</target>
        </trans-unit>
        <trans-unit id="a46fcea3c9be5bbc6fbd46ca7954d4e8360c62cb" translate="yes" xml:space="preserve">
          <source>In this section, you have learned how to use Gii to generate the code that implements complete CRUD functionality for content stored in a database table.</source>
          <target state="translated">このセクションでは、データベーステーブルに格納されたコンテンツの完全な CRUD 機能を実装するコードを生成するために Gii を使用する方法を学びました。</target>
        </trans-unit>
        <trans-unit id="40046d0924f75606215143f4bec5d1df81fac54c" translate="yes" xml:space="preserve">
          <source>In this tutorial, we will mainly describe the usage of Active Record for relational databases. However, most content described here are also applicable to Active Record for NoSQL databases.</source>
          <target state="translated">このチュートリアルでは、主にリレーショナル データベース用の Active Record の使用法を説明します。しかし、ここで説明する内容のほとんどは、NoSQL データベース用の Active Record にも適用できます。</target>
        </trans-unit>
        <trans-unit id="874ffee33f1b020d8b8a956709a23e150e249d7b" translate="yes" xml:space="preserve">
          <source>In this way you will avoid collision of fixture data files between tests and use them as you need.</source>
          <target state="translated">この方法では、テスト間のフィクスチャデータファイルの衝突を避け、必要に応じてそれらを使用することができます。</target>
        </trans-unit>
        <trans-unit id="a1a5f71916336b95986d3d9bba5e7e86ead0ee52" translate="yes" xml:space="preserve">
          <source>In view files often the HTML code is not written out directly but generated by some PHP code dependent on the variables of the view. In order for the generated HTML to be manipulated with Javascript, the JS code has to contain dynamic parts too, for example the IDs of the jQuery selectors.</source>
          <target state="translated">ビューファイルでは、多くの場合、HTML コードは直接書き出されるのではなく、ビューの変数に依存する PHP コードによって生成されます。生成されたHTMLをJavascriptで操作するために、JSコードにはjQueryセレクタのIDなどの動的な部分も含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="e3f29f71c6c6618a65fcb7924a133f223e54a9ca" translate="yes" xml:space="preserve">
          <source>In which format should the value of each data model be displayed as (e.g. &lt;code&gt;&quot;raw&quot;&lt;/code&gt;, &lt;code&gt;&quot;text&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt;, &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt;).</source>
          <target state="translated">各データモデルの値をどの形式で表示するか（たとえば、 &lt;code&gt;&quot;raw&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;text&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;html&quot;&lt;/code&gt; 、 &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="02d4acf11ad177c49763e80afd208b4892f18537" translate="yes" xml:space="preserve">
          <source>In which format should the value of each data model be displayed as (e.g. &lt;code&gt;&quot;raw&quot;&lt;/code&gt;, &lt;code&gt;&quot;text&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt;, &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt;). Supported formats are determined by the &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;formatter&lt;/a&gt; used by the &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii\grid\GridView&lt;/a&gt;. Default format is &quot;text&quot; which will format the value as an HTML-encoded plain text when &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; is used as the &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;formatter&lt;/a&gt; of the GridView.</source>
          <target state="translated">各データモデルの値をどの形式で表示するか（たとえば、 &lt;code&gt;&quot;raw&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;text&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;html&quot;&lt;/code&gt; 、 &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt; ）。サポートされるフォーマットは、&lt;a href=&quot;yii-grid-gridview&quot;&gt;yii \ grid \ GridViewで&lt;/a&gt;使用される&lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;フォーマッター&lt;/a&gt;によって決まります。デフォルトのフォーマットは「テキスト」で、GridViewの&lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;フォーマッター&lt;/a&gt;として&lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt;が使用されている場合、値はHTMLエンコードされたプレーンテキストとしてフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="43f1840020864c280b6030185f71cbc6507de538" translate="yes" xml:space="preserve">
          <source>In your JavaScript code you can now access these like &lt;code&gt;yiiOptions.baseUrl&lt;/code&gt; or &lt;code&gt;yiiOptions.language&lt;/code&gt;.</source>
          <target state="translated">JavaScriptコードで、 &lt;code&gt;yiiOptions.baseUrl&lt;/code&gt; や &lt;code&gt;yiiOptions.language&lt;/code&gt; などにアクセスできるようになりました。</target>
        </trans-unit>
        <trans-unit id="00bd92117b61de092e8b53f27488ce9889f6f063" translate="yes" xml:space="preserve">
          <source>In your unit test class extending &lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii\codeception\DbTestCase&lt;/a&gt; or &lt;a href=&quot;yii-codeception-testcase&quot;&gt;yii\codeception\TestCase&lt;/a&gt;, declare which fixtures you want to use in the &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;fixtures()&lt;/a&gt; method. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii \ codeception \ DbTestCase&lt;/a&gt;または&lt;a href=&quot;yii-codeception-testcase&quot;&gt;yii \ codeception \ TestCaseを&lt;/a&gt;拡張する単体テストクラスで、&lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;fixtures（）&lt;/a&gt;メソッドで使用するフィクスチャを宣言します。例えば、</target>
        </trans-unit>
        <trans-unit id="73caa3358e297d4c512dad71b8f738fa3cc27275" translate="yes" xml:space="preserve">
          <source>Include file(s) before starting tinker shell</source>
          <target state="translated">ティンカーシェルを起動する前にファイルをインクルードします。</target>
        </trans-unit>
        <trans-unit id="724fc6eae7e32c77ed08a9cab9ea718258ffe375" translate="yes" xml:space="preserve">
          <source>Include the &lt;a href=&quot;yii&quot;&gt;Yii&lt;/a&gt; class file;</source>
          <target state="translated">&lt;a href=&quot;yii&quot;&gt;Yii&lt;/a&gt;クラスファイルを含めます。</target>
        </trans-unit>
        <trans-unit id="5c53f1d11bfa21025286f5120779565f88c97f72" translate="yes" xml:space="preserve">
          <source>Include the directory in the &lt;code&gt;$fpath&lt;/code&gt;, e.g. by adding it to &lt;code&gt;~/.zshrc&lt;/code&gt;</source>
          <target state="translated">ディレクトリを &lt;code&gt;$fpath&lt;/code&gt; に含めます。たとえば、 &lt;code&gt;~/.zshrc&lt;/code&gt; 追加します。</target>
        </trans-unit>
        <trans-unit id="5c0a29bb504a876c51cd7ad9a22fe9190f2ae7e9" translate="yes" xml:space="preserve">
          <source>Include the extension manifest file &lt;code&gt;vendor/yiisoft/extensions.php&lt;/code&gt;.</source>
          <target state="translated">拡張マニフェストファイル &lt;code&gt;vendor/yiisoft/extensions.php&lt;/code&gt; を含めます。</target>
        </trans-unit>
        <trans-unit id="c37d3c1a0bacc352c9589efc03a4fab916f3683f" translate="yes" xml:space="preserve">
          <source>Includes client assets of &lt;a href=&quot;https://github.com/RobinHerbots/Inputmask&quot;&gt;jQuery input mask plugin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/RobinHerbots/Inputmask&quot;&gt;jQuery定型入力プラグインの&lt;/a&gt;クライアントアセットが含まれています。</target>
        </trans-unit>
        <trans-unit id="15c22d169f90cb83d8893cd476573b43732b45a8" translate="yes" xml:space="preserve">
          <source>Includes the migration file for a given migration class name.</source>
          <target state="translated">指定されたマイグレーションクラス名のマイグレーションファイルを含みます。</target>
        </trans-unit>
        <trans-unit id="fef77fd0793d3c2cf3b857ff00cad601ec7a2695" translate="yes" xml:space="preserve">
          <source>Index metadata. &lt;code&gt;null&lt;/code&gt; - if the named index does not exist.</source>
          <target state="translated">インデックスメタデータ。 &lt;code&gt;null&lt;/code&gt; -名前付きインデックスが存在しない場合。</target>
        </trans-unit>
        <trans-unit id="27bf949a8c6bbf392cd9bbfb0a23ac87298c9ae6" translate="yes" xml:space="preserve">
          <source>Index name</source>
          <target state="translated">インデックス名</target>
        </trans-unit>
        <trans-unit id="e6bada87abc8ee10df4583463137a3f0b7f63d38" translate="yes" xml:space="preserve">
          <source>Index name or pattern, use &lt;code&gt;*&lt;/code&gt; in order to drop all indexes.</source>
          <target state="translated">インデックス名またはパターン。すべてのインデックスを削除するには、 &lt;code&gt;*&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="6e92b7a2785e378d347a5dbba4568f754e0b3cfb" translate="yes" xml:space="preserve">
          <source>Index name.</source>
          <target state="translated">インデックス名。</target>
        </trans-unit>
        <trans-unit id="82abe6b26544e9ff8eed1b4c2cd35852eb64f8ee" translate="yes" xml:space="preserve">
          <source>Index name. The index name may contain schema name if any. Do not quote the index name.</source>
          <target state="translated">インデックス名。インデックス名にはスキーマ名がある場合はスキーマ名を含むことができます。インデックス名を引用しないでください。</target>
        </trans-unit>
        <trans-unit id="bac2a9da8998703d93adb1d10003f51ef53e0fae" translate="yes" xml:space="preserve">
          <source>Index schema information. Null if the named index does not exist.</source>
          <target state="translated">インデックススキーマ情報。指定されたインデックスが存在しない場合はNull。</target>
        </trans-unit>
        <trans-unit id="b94962abe613b3ebfaaf8264a4cf8a31f00b0c22" translate="yes" xml:space="preserve">
          <source>Index that the document belogs to. Can be set to null if the command has a default index (&lt;a href=&quot;yii-elasticsearch-bulkcommand#%24index-detail&quot;&gt;yii\elasticsearch\BulkCommand::$index&lt;/a&gt;) assigned.</source>
          <target state="translated">ドキュメントがログに記録するインデックス。コマンドにデフォルトのインデックス（&lt;a href=&quot;yii-elasticsearch-bulkcommand#%24index-detail&quot;&gt;yii \ elasticsearch \ BulkCommand :: $ index&lt;/a&gt;）が割り当てられている場合は、nullに設定できます。</target>
        </trans-unit>
        <trans-unit id="f28c7134fe738b1baa2e6bc30b4ff32821809b3d" translate="yes" xml:space="preserve">
          <source>IndexAction implements the API endpoint for listing multiple models.</source>
          <target state="translated">IndexActionは、複数のモデルをリストアップするためのAPIエンドポイントを実装しています。</target>
        </trans-unit>
        <trans-unit id="ae7d1fe5edff93d934063cc390217314b9e2bb0a" translate="yes" xml:space="preserve">
          <source>Indexes and/or groups the array according to a specified key.</source>
          <target state="translated">指定されたキーに従って配列のインデックスを作成します.</target>
        </trans-unit>
        <trans-unit id="f77617d70f83cf7b1d1896f4cfb5f9927286bc2e" translate="yes" xml:space="preserve">
          <source>Indexes specification. Each specification should be an array in format: optionName =&amp;gt; value The main options are:</source>
          <target state="translated">インデックスの仕様。各指定は次の形式の配列である必要があります：optionName =&amp;gt; value主なオプションは次のとおりです：</target>
        </trans-unit>
        <trans-unit id="b1f3cbbf8d37f08e3d21cd4bc0a7ffe67e04ef6b" translate="yes" xml:space="preserve">
          <source>Indexes specifications.</source>
          <target state="translated">仕様をインデックス化しています。</target>
        </trans-unit>
        <trans-unit id="7fad0e26fd25542aa035943bb4dcf7b1bd89671d" translate="yes" xml:space="preserve">
          <source>Indexing Query Results</source>
          <target state="translated">クエリ結果の索引付け</target>
        </trans-unit>
        <trans-unit id="9e3d96a1631811addaed53777a78194601c63eac" translate="yes" xml:space="preserve">
          <source>Indicates if popup window should be used instead of direct links.</source>
          <target state="translated">直接リンクの代わりにポップアップウィンドウを使用するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="8fdca9d873a9836142abfa8fdd037626dd0ec980" translate="yes" xml:space="preserve">
          <source>Indicates if redirect should be performed even in case of popup window.</source>
          <target state="translated">ポップアップウィンドウの場合でもリダイレクトを行うかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="014c9e6f0fea8c9251e7ce51fd892a3b1ebde501" translate="yes" xml:space="preserve">
          <source>Indicates if widget content, should be rendered automatically.</source>
          <target state="translated">ウィジェットの内容が自動的にレンダリングされるべきかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="c6eebbca3ecf02356cd6356837f1a3edde7acdbb" translate="yes" xml:space="preserve">
          <source>Indicates if widget content, should be rendered automatically. Note: this value automatically set to 'false' at the first call of &lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl()&lt;/a&gt;</source>
          <target state="translated">ウィジェットのコンテンツが自動的にレンダリングされるかどうかを示します。注：この値は、&lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl（）の&lt;/a&gt;最初の呼び出し時に自動的に「false」に設定されます</target>
        </trans-unit>
        <trans-unit id="4da078df730dd61103f92529eb7beeeb860b245a" translate="yes" xml:space="preserve">
          <source>Indicates whether the table names generated should consider the &lt;code&gt;tablePrefix&lt;/code&gt; setting of the DB connection.</source>
          <target state="translated">生成されたテーブル名がDB接続の &lt;code&gt;tablePrefix&lt;/code&gt; 設定を考慮する必要があるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="182149604b0beba8e881df7dba223d823250da6e" translate="yes" xml:space="preserve">
          <source>Indicates whether the table names generated should consider the &lt;code&gt;tablePrefix&lt;/code&gt; setting of the DB connection. For example, if the table name is &lt;code&gt;post&lt;/code&gt; the generator wil return &lt;code&gt;{{%post}}&lt;/code&gt;.</source>
          <target state="translated">生成されたテーブル名がDB接続の &lt;code&gt;tablePrefix&lt;/code&gt; 設定を考慮する必要があるかどうかを示します。たとえば、テーブル名が &lt;code&gt;post&lt;/code&gt; の場合、ジェネレータは &lt;code&gt;{{%post}}&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cc43eabb9fc7f8889ee1414fb8485f7e4a474877" translate="yes" xml:space="preserve">
          <source>Inflector pluralizes and singularizes English nouns. It also contains some other useful methods.</source>
          <target state="translated">インフレクタは英語の名詞を複数形にしたり単数形にしたりします。他にもいくつかの便利な方法があります。</target>
        </trans-unit>
        <trans-unit id="f0ad3fca6ab05d833db8b58699b7e26836b20db6" translate="yes" xml:space="preserve">
          <source>Info attribute input search value</source>
          <target state="translated">情報属性入力検索値</target>
        </trans-unit>
        <trans-unit id="e64e08fc9d6921155de313395207352b842d485e" translate="yes" xml:space="preserve">
          <source>Info message.</source>
          <target state="translated">インフォメーションメッセージです。</target>
        </trans-unit>
        <trans-unit id="8e8955cb8a8c349fdc96dfe7fee4218234a6a552" translate="yes" xml:space="preserve">
          <source>Informational message level. An informational message is one that includes certain information for developers to review.</source>
          <target state="translated">インフォメーショナルメッセージのレベル。情報メッセージとは、開発者がレビューするための特定の情報が含まれているものです。</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="67eb7c4bdb557e17a2430101a293ded796c9767a" translate="yes" xml:space="preserve">
          <source>InitDbFixture represents the initial state needed for DB-related tests.</source>
          <target state="translated">InitDbFixtureは、DB関連のテストに必要な初期状態を表します。</target>
        </trans-unit>
        <trans-unit id="5a3ebe3b930b896810c07c00c18665e24d06eced" translate="yes" xml:space="preserve">
          <source>Initial property values for &lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii\widgets\FragmentCache&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii \ widgets \ FragmentCacheの&lt;/a&gt;初期プロパティ値</target>
        </trans-unit>
        <trans-unit id="ff527de3138c137e8846197e6df479c84e326d99" translate="yes" xml:space="preserve">
          <source>Initial value of the aggregation counter object.</source>
          <target state="translated">集計カウンタオブジェクトの初期値。</target>
        </trans-unit>
        <trans-unit id="7be9c79533ef1a080403e2d429e2019bb365e678" translate="yes" xml:space="preserve">
          <source>Initial values specified in &lt;a href=&quot;yii-web-request#%24csrfCookie-detail&quot;&gt;$csrfCookie&lt;/a&gt; will be applied to the generated cookie.</source>
          <target state="translated">&lt;a href=&quot;yii-web-request#%24csrfCookie-detail&quot;&gt;$ csrfCookieで&lt;/a&gt;指定された初期値は、生成されたCookieに適用されます。</target>
        </trans-unit>
        <trans-unit id="31d0bce9606c028997ba6db8124f4694480e575b" translate="yes" xml:space="preserve">
          <source>Initial values to be applied to the validator properties.</source>
          <target state="translated">バリデータのプロパティに適用する初期値。</target>
        </trans-unit>
        <trans-unit id="725d944eb21453b9e5e699e05ed30327e4078dd8" translate="yes" xml:space="preserve">
          <source>Initialize application properties using the given application configuration.</source>
          <target state="translated">与えられたアプリケーション構成を使用して、アプリケーションのプロパティを初期化します。</target>
        </trans-unit>
        <trans-unit id="81b5a3cd380686d55c9373b4efb4a8672465f50e" translate="yes" xml:space="preserve">
          <source>Initialize the application.</source>
          <target state="translated">アプリケーションを初期化します。</target>
        </trans-unit>
        <trans-unit id="6b0fabaec77b757d9c0aac60716f70308c134417" translate="yes" xml:space="preserve">
          <source>Initialize the fixtures</source>
          <target state="translated">フィクスチャの初期化</target>
        </trans-unit>
        <trans-unit id="74cf2ec766f57a4aea10a8bdc040b936b2d9d1e3" translate="yes" xml:space="preserve">
          <source>Initializes MySQL specific mutex component implementation.</source>
          <target state="translated">MySQL固有のミューテックスコンポーネントの実装を初期化します。</target>
        </trans-unit>
        <trans-unit id="19500c74e6bf616441c781164eb6aa77a9632058" translate="yes" xml:space="preserve">
          <source>Initializes Oracle specific mutex component implementation.</source>
          <target state="translated">Oracle固有のミューテックスコンポーネントの実装を初期化します。</target>
        </trans-unit>
        <trans-unit id="142836f24de27536e6e2f30ef6c1ba689666353f" translate="yes" xml:space="preserve">
          <source>Initializes PgSQL specific mutex component implementation.</source>
          <target state="translated">PgSQL 固有のミューテックスコンポーネントの実装を初期化します。</target>
        </trans-unit>
        <trans-unit id="bdf7e1762088769cadf6fce17e9594a394e41661" translate="yes" xml:space="preserve">
          <source>Initializes UrlManager.</source>
          <target state="translated">UrlManagerを初期化します。</target>
        </trans-unit>
        <trans-unit id="92f182596182178dc3ada47b35e212673ad6a5d2" translate="yes" xml:space="preserve">
          <source>Initializes authenticated user attributes.</source>
          <target state="translated">認証されたユーザの属性を初期化します。</target>
        </trans-unit>
        <trans-unit id="44eeead23e09f7100e24be51b647cde1ea01278f" translate="yes" xml:space="preserve">
          <source>Initializes client options</source>
          <target state="translated">クライアントオプションを初期化します。</target>
        </trans-unit>
        <trans-unit id="a4bcac598c2fb71446a83f3fddb78d24f4b86058" translate="yes" xml:space="preserve">
          <source>Initializes extensions and executes bootstrap components.</source>
          <target state="translated">拡張機能を初期化し、ブートストラップコンポーネントを実行します。</target>
        </trans-unit>
        <trans-unit id="63418b854aa1f329fbeefa31ed5abb9a7b5a0083" translate="yes" xml:space="preserve">
          <source>Initializes generic database table based mutex implementation.</source>
          <target state="translated">汎用データベーステーブルベースのミューテックス実装を初期化します。</target>
        </trans-unit>
        <trans-unit id="10a02dd3c4321f9e65c311349a9cb2c359b009d7" translate="yes" xml:space="preserve">
          <source>Initializes information about name and type of all index in the Sphinx.</source>
          <target state="translated">Sphinxの全インデックスの名前と型に関する情報を初期化します。</target>
        </trans-unit>
        <trans-unit id="2b41d5d488fe9dcb6877325d9accfa718c6f1cf3" translate="yes" xml:space="preserve">
          <source>Initializes mutex component implementation dedicated for UNIX, GNU/Linux, Mac OS X, and other UNIX-like operating systems.</source>
          <target state="translated">UNIX、GNU/Linux、Mac OS XなどのUNIX系OS専用のミューテックスコンポーネントの実装を初期化します。</target>
        </trans-unit>
        <trans-unit id="7c98cd73bd563886fd1e2f81255452e02f27b389" translate="yes" xml:space="preserve">
          <source>Initializes panels.</source>
          <target state="translated">パネルを初期化します。</target>
        </trans-unit>
        <trans-unit id="670253633ca7e20b6f0f6b5f28c9227280ccc507" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;$rules&lt;/a&gt; array by instantiating rule objects from configurations.</source>
          <target state="translated">構成からルールオブジェクトをインスタンス化して、&lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;$ rules&lt;/a&gt;配列を初期化します。</target>
        </trans-unit>
        <trans-unit id="df61805cefa87f9c38bfcd370e364975b0bf4586" translate="yes" xml:space="preserve">
          <source>Initializes the Cache component.</source>
          <target state="translated">Cache コンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="afd801846cdb45453ccfa7ae1d54ae5888d8076e" translate="yes" xml:space="preserve">
          <source>Initializes the DB connection component.</source>
          <target state="translated">DB接続コンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="0fccbe8193c2c2d4ed880169998161716239cbc4" translate="yes" xml:space="preserve">
          <source>Initializes the DB connection.</source>
          <target state="translated">DB接続を初期化します。</target>
        </trans-unit>
        <trans-unit id="ed92eeb27d8136d4280e370dc71fc9646f85b220" translate="yes" xml:space="preserve">
          <source>Initializes the DbCache component.</source>
          <target state="translated">DbCache コンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="1e64b09c712c76bf69c5a494164e3196c083dae0" translate="yes" xml:space="preserve">
          <source>Initializes the DbMessageSource component.</source>
          <target state="translated">DbMessageSourceコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="bc4f3187874b94367f57cd5f5611b9d2912e50c8" translate="yes" xml:space="preserve">
          <source>Initializes the DbSession component.</source>
          <target state="translated">DbSessionコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="b072eb061afed48d79161c46e362ef7d589978ef" translate="yes" xml:space="preserve">
          <source>Initializes the DbTarget component.</source>
          <target state="translated">DbTargetコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="fa7ee1ba32d1b9aeeb32240c349b3814c8f3f853" translate="yes" xml:space="preserve">
          <source>Initializes the FragmentCache object.</source>
          <target state="translated">FragmentCache オブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="e26884c940e732795e4852c157b5965968ea4cc6" translate="yes" xml:space="preserve">
          <source>Initializes the MongoDbTarget component.</source>
          <target state="translated">MongoDbTarget コンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="a6442f02945b02a93f74e91f049fc346ab458c8f" translate="yes" xml:space="preserve">
          <source>Initializes the Mutex component.</source>
          <target state="translated">Mutex コンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="b5bbe27ad7df4cc69816250d797a08a8da751035" translate="yes" xml:space="preserve">
          <source>Initializes the Session component.</source>
          <target state="translated">セッションコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="f8f3f4331bea110bce3dfea352ade952ca42f5c4" translate="yes" xml:space="preserve">
          <source>Initializes the action.</source>
          <target state="translated">アクションを初期化します。</target>
        </trans-unit>
        <trans-unit id="ce0c174ceb8af15700aff4a38c51e9f3544365eb" translate="yes" xml:space="preserve">
          <source>Initializes the application component.</source>
          <target state="translated">アプリケーションコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="e67c3be4e756ca776750317ad4bdea87d7f0d1b7" translate="yes" xml:space="preserve">
          <source>Initializes the bundle.</source>
          <target state="translated">バンドルを初期化します。</target>
        </trans-unit>
        <trans-unit id="7d1c6227a025cbe089f7a7774de272c245d7c24e" translate="yes" xml:space="preserve">
          <source>Initializes the component by configuring the default message categories.</source>
          <target state="translated">デフォルトのメッセージ・カテゴリを構成することで、コンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="e6bbd5d2931b613f33c3b48e6bdf504489c82050" translate="yes" xml:space="preserve">
          <source>Initializes the component.</source>
          <target state="translated">コンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="1ff780a75b126503c3778b4fa72703553277d654" translate="yes" xml:space="preserve">
          <source>Initializes the default button rendering callback for single button</source>
          <target state="translated">単一ボタン用のデフォルトのボタンレンダリングコールバックを初期化します。</target>
        </trans-unit>
        <trans-unit id="b6efa85a6a2aee4c2619bcaec1d820644f6cbb7a" translate="yes" xml:space="preserve">
          <source>Initializes the default button rendering callbacks.</source>
          <target state="translated">デフォルトのボタンレンダリングコールバックを初期化します。</target>
        </trans-unit>
        <trans-unit id="ded69346230122835907d0079fa1ea5d6a7a5578" translate="yes" xml:space="preserve">
          <source>Initializes the detail view.</source>
          <target state="translated">詳細ビューを初期化します。</target>
        </trans-unit>
        <trans-unit id="8d6b246f880a8ba9b5a365a42c5168734116c150" translate="yes" xml:space="preserve">
          <source>Initializes the grid view.</source>
          <target state="translated">グリッドビューを初期化します。</target>
        </trans-unit>
        <trans-unit id="76d148ef3491068666f35ec5925bc3a52a430190" translate="yes" xml:space="preserve">
          <source>Initializes the logger by registering &lt;a href=&quot;yii-log-logger#flush()-detail&quot;&gt;flush()&lt;/a&gt; as a shutdown function.</source>
          <target state="translated">&lt;a href=&quot;yii-log-logger#flush()-detail&quot;&gt;flush（）&lt;/a&gt;をシャットダウン関数として登録することにより、ロガーを初期化します。</target>
        </trans-unit>
        <trans-unit id="22acedcdcd5e351b54488486230c46378d043e28" translate="yes" xml:space="preserve">
          <source>Initializes the migration.</source>
          <target state="translated">マイグレーションを初期化します。</target>
        </trans-unit>
        <trans-unit id="a9d15a56f7e9305b63d8db596d0bc3df9076b5fc" translate="yes" xml:space="preserve">
          <source>Initializes the module.</source>
          <target state="translated">モジュールを初期化します。</target>
        </trans-unit>
        <trans-unit id="cc2058d972ac1ce9084f899484a2c772f989b0dc" translate="yes" xml:space="preserve">
          <source>Initializes the object with the given configuration &lt;code&gt;$config&lt;/code&gt;.</source>
          <target state="translated">指定された構成 &lt;code&gt;$config&lt;/code&gt; オブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="2a2ebcb62e07bfa23fe63ff902381554659598f7" translate="yes" xml:space="preserve">
          <source>Initializes the object.</source>
          <target state="translated">オブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="960f35e87f34e9197eb23444c1df22c411aac44c" translate="yes" xml:space="preserve">
          <source>Initializes the pager.</source>
          <target state="translated">ページャーを初期化します。</target>
        </trans-unit>
        <trans-unit id="585d5607f12a3969f864fd206d39423586de087e" translate="yes" xml:space="preserve">
          <source>Initializes the redis Cache component.</source>
          <target state="translated">redis Cache コンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="4162605a32d8a4305ce8b03449544e56cb73d0f7" translate="yes" xml:space="preserve">
          <source>Initializes the redis Mutex component.</source>
          <target state="translated">redis Mutexコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="f096e311f53101d14d480cbbbe0e8274e91821cc" translate="yes" xml:space="preserve">
          <source>Initializes the redis Session component.</source>
          <target state="translated">redis Sessionコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="300e055eaff3119ea26b221786e378f629b3f86f" translate="yes" xml:space="preserve">
          <source>Initializes the route.</source>
          <target state="translated">ルートを初期化します。</target>
        </trans-unit>
        <trans-unit id="3822532e5e6f3a373e145076be61482b2d2bf093" translate="yes" xml:space="preserve">
          <source>Initializes the sorter.</source>
          <target state="translated">ソーターを初期化します。</target>
        </trans-unit>
        <trans-unit id="a36e1f98155f489853f5269d54dcaa5575ce2010" translate="yes" xml:space="preserve">
          <source>Initializes the view component.</source>
          <target state="translated">ビューコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="e769f0ac978f54f6e8d71a32d13085bdc2e240de" translate="yes" xml:space="preserve">
          <source>Initializes the view.</source>
          <target state="translated">ビューを初期化します。</target>
        </trans-unit>
        <trans-unit id="daf999cf79369c4690f8c4173e650d121cd7901f" translate="yes" xml:space="preserve">
          <source>Initializes the widget options.</source>
          <target state="translated">ウィジェットのオプションを初期化します。</target>
        </trans-unit>
        <trans-unit id="5ee0a73357c706f6366227bda4effb01e2119791" translate="yes" xml:space="preserve">
          <source>Initializes the widget.</source>
          <target state="translated">ウィジェットを初期化します。</target>
        </trans-unit>
        <trans-unit id="d4350faccf44a9137e5b92ea075883a90d174d8c" translate="yes" xml:space="preserve">
          <source>Initializes this application component.</source>
          <target state="translated">このアプリケーションコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="c261c57f05a0c92c8c281423671937ed888f1ed6" translate="yes" xml:space="preserve">
          <source>Initializes this component by ensuring the existence of the cache path.</source>
          <target state="translated">キャッシュパスの存在を確認することで、このコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="de3bbc19e58e3ad4a69013a5f66908e913c75558" translate="yes" xml:space="preserve">
          <source>Initializes this component.</source>
          <target state="translated">このコンポーネントを初期化します。</target>
        </trans-unit>
        <trans-unit id="cb2999d9364098818b312b69cf21d725718ba247" translate="yes" xml:space="preserve">
          <source>Initializes this rule.</source>
          <target state="translated">このルールを初期化します。</target>
        </trans-unit>
        <trans-unit id="cef2cf7efb3d11b6e4f06ec176884d1144eea489" translate="yes" xml:space="preserve">
          <source>Inline Actions</source>
          <target state="translated">インラインアクション</target>
        </trans-unit>
        <trans-unit id="bb3336fa39fec4be365b76323158beafb5003a9c" translate="yes" xml:space="preserve">
          <source>Inline Validators</source>
          <target state="translated">インラインバリデータ</target>
        </trans-unit>
        <trans-unit id="97d4a8593c24cd6f8730add5bc1fbcdc6670657c" translate="yes" xml:space="preserve">
          <source>Inline actions are the most commonly defined actions because they take little effort to create. However, if you plan to reuse the same action in different places, or if you want to redistribute an action, you should consider defining it as a &lt;em&gt;standalone action&lt;/em&gt;.</source>
          <target state="translated">インラインアクションは、作成にほとんど労力を要しないため、最も一般的に定義されるアクションです。ただし、同じアクションを別の場所で再利用する場合、またはアクションを再配布する場合は、&lt;em&gt;スタンドアロンアクション&lt;/em&gt;として定義することを検討してください。</target>
        </trans-unit>
        <trans-unit id="642e40c88280f47676f64b5a4c250937145c873b" translate="yes" xml:space="preserve">
          <source>Inline actions refer to the actions that are defined in terms of action methods as we just described.</source>
          <target state="translated">インラインアクションとは、先ほど説明したようにアクションメソッドで定義されたアクションのことを指します。</target>
        </trans-unit>
        <trans-unit id="3bdfb11bae51f20f1ee7e1c1a1279cf43650c0f0" translate="yes" xml:space="preserve">
          <source>Inline scripts are useful for configuration, dynamically generated code and small snippets created by reusable frontend code contained in &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;. The &lt;a href=&quot;yii-web-view#registerJs()-detail&quot;&gt;registerJs()&lt;/a&gt; method for adding these can be used as follows:</source>
          <target state="translated">インラインスクリプトは、構成、動的に生成されるコード、および&lt;a href=&quot;guide-structure-widgets&quot;&gt;ウィジェットに&lt;/a&gt;含まれる再利用可能なフロントエンドコードによって作成される小さなスニペットに役立ちます。&lt;a href=&quot;yii-web-view#registerJs()-detail&quot;&gt;registerJs（）&lt;/a&gt;次のようにこれらを添加する方法を用いることができます。</target>
        </trans-unit>
        <trans-unit id="11c3b1b7ca351ef4ccdedeeccf19ed99c9c13436" translate="yes" xml:space="preserve">
          <source>InlineAction represents an action that is defined as a controller method.</source>
          <target state="translated">InlineActionは、コントローラメソッドとして定義されたアクションを表します。</target>
        </trans-unit>
        <trans-unit id="30c5649eded82d3e3be576f33d359cd9996ec234" translate="yes" xml:space="preserve">
          <source>InlineValidator represents a validator which is defined as a method in the object being validated.</source>
          <target state="translated">InlineValidator はバリデーションの対象となるオブジェクトのメソッドとして定義されているバリデータを表します。</target>
        </trans-unit>
        <trans-unit id="c03caeef02108c6f2afa47e5c5e2a5d0a67d8091" translate="yes" xml:space="preserve">
          <source>Inner joins with the specified relations.</source>
          <target state="translated">指定されたリレーションとの内部結合。</target>
        </trans-unit>
        <trans-unit id="c3e25ca576e396f7f7ca07c51c68d0045face42a" translate="yes" xml:space="preserve">
          <source>Input CSS file name.</source>
          <target state="translated">CSSファイル名を入力します。</target>
        </trans-unit>
        <trans-unit id="df5d437a42f572d0e0a1c5d22258b521cd8ca7e7" translate="yes" xml:space="preserve">
          <source>Input Fields</source>
          <target state="translated">入力フィールド</target>
        </trans-unit>
        <trans-unit id="48706e56aa935bef2083be3ad06d7a71f3624f45" translate="yes" xml:space="preserve">
          <source>Input Names and Values</source>
          <target state="translated">入力名と値</target>
        </trans-unit>
        <trans-unit id="0ccf7df786c4c24c937ef4429a0248a86f57588f" translate="yes" xml:space="preserve">
          <source>Input array with replaced placeholder keys</source>
          <target state="translated">プレースホルダキーを置換した入力配列</target>
        </trans-unit>
        <trans-unit id="6d206308e60db70d1b0e69e6818ee2fca5a79400" translate="yes" xml:space="preserve">
          <source>Input name.</source>
          <target state="translated">名前を入力します。</target>
        </trans-unit>
        <trans-unit id="b040d1819589fb36c90f50dd95e60c4dda95cac0" translate="yes" xml:space="preserve">
          <source>Input parameters (name =&amp;gt; value) for the SQL execution. See &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;yii\db\Command::execute()&lt;/a&gt; for more details.</source>
          <target state="translated">SQL実行の入力パラメーター（名前=&amp;gt;値）。詳細については、&lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;yii \ db \ Command :: execute（）&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2194413609b4f971534953bb2ee656c00a1de56c" translate="yes" xml:space="preserve">
          <source>Input string</source>
          <target state="translated">入力文字列</target>
        </trans-unit>
        <trans-unit id="58e49189baab320a0ada7a4875f1c82eb580df6d" translate="yes" xml:space="preserve">
          <source>Input string to check</source>
          <target state="translated">チェックするための入力文字列</target>
        </trans-unit>
        <trans-unit id="0dac1a70c96f388509f66290a3d22d9300e6b8e7" translate="yes" xml:space="preserve">
          <source>Input type, can be:</source>
          <target state="translated">入力タイプは、以下のようにすることができます。</target>
        </trans-unit>
        <trans-unit id="4247619c2cd9ede80b6fff35d0c3d7200393f8dd" translate="yes" xml:space="preserve">
          <source>Input type, can be: - 'checkbox' - 'radio'</source>
          <target state="translated">入力タイプは、次のようになります。-'チェックボックス'-'ラジオ'</target>
        </trans-unit>
        <trans-unit id="a9e020d632ebb33c3a6a2f5cc2af3d36d9ba1540" translate="yes" xml:space="preserve">
          <source>Input value</source>
          <target state="translated">入力値</target>
        </trans-unit>
        <trans-unit id="103b73f8b8612de7f92ed544d130aab2ccb3dead" translate="yes" xml:space="preserve">
          <source>Input value.</source>
          <target state="translated">入力値。</target>
        </trans-unit>
        <trans-unit id="72f802b268034dc5346369ad70e75693d101634f" translate="yes" xml:space="preserve">
          <source>InputWidget is the base class for widgets that collect user inputs.</source>
          <target state="translated">InputWidget は、ユーザーの入力を収集するウィジェットの基底クラスです。</target>
        </trans-unit>
        <trans-unit id="fe4fa9ffdbf4577fd592df056d6c2025eab35a46" translate="yes" xml:space="preserve">
          <source>Inserted data, each row will have &quot;_id&quot; key assigned to it.</source>
          <target state="translated">挿入されたデータは、各行に&quot;_id &quot;キーが割り当てられています。</target>
        </trans-unit>
        <trans-unit id="94403dc7609bd5e3d3fd6768c751909856bc73d9" translate="yes" xml:space="preserve">
          <source>Inserted record ID, &lt;code&gt;false&lt;/code&gt; - on failure.</source>
          <target state="translated">挿入されたレコードID、 &lt;code&gt;false&lt;/code&gt; -失敗した場合。</target>
        </trans-unit>
        <trans-unit id="9b0c3395b88187ccbfc85a2801cd30eb7752d408" translate="yes" xml:space="preserve">
          <source>Inserts a document into an index</source>
          <target state="translated">ドキュメントをインデックスに挿入します。</target>
        </trans-unit>
        <trans-unit id="f6e52cde7fa2f8dbd9923be91ebe47f32f99a080" translate="yes" xml:space="preserve">
          <source>Inserts a document into the associated index using the attribute values of this record.</source>
          <target state="translated">このレコードの属性値を使用して、関連するインデックスに文書を挿入します。</target>
        </trans-unit>
        <trans-unit id="dc4b8a44766f134b9d8265d8695b4c7f5c14b762" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated Mongo collection using the attribute values of this record.</source>
          <target state="translated">このレコードの属性値を使って、関連する Mongo コレクションに行を挿入します。</target>
        </trans-unit>
        <trans-unit id="ef32118a9ba09a14cc4516fb9f82a0bac1db006b" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated Sphinx index using the attribute values of this record.</source>
          <target state="translated">このレコードの属性値を使って、関連するSphinxインデックスに行を挿入します。</target>
        </trans-unit>
        <trans-unit id="1816c802c05f0969666a55e6312cd44681a7a500" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated database table using the attribute values of this record.</source>
          <target state="translated">このレコードの属性値を使用して、関連するデータベーステーブルに行を挿入します。</target>
        </trans-unit>
        <trans-unit id="11edb8fc62bf3fc7f91afbfe6371f2de6fe9cba9" translate="yes" xml:space="preserve">
          <source>Inserts an ActiveRecord into DB without considering transaction.</source>
          <target state="translated">トランザクションを考慮せずにActiveRecordをDBに挿入します。</target>
        </trans-unit>
        <trans-unit id="79d5584ce263b0b34b1786daea6d1120bc19fb32" translate="yes" xml:space="preserve">
          <source>Inserts batch of new documents into collection.</source>
          <target state="translated">新しいドキュメントのバッチをコレクションに挿入します。</target>
        </trans-unit>
        <trans-unit id="9dd12eaed0a08018acf670a1d47efe93c511313e" translate="yes" xml:space="preserve">
          <source>Inserts new data into collection.</source>
          <target state="translated">新しいデータをコレクションに挿入します。</target>
        </trans-unit>
        <trans-unit id="3cfbe27efcdaa47639c005f377696ad1e4271e1c" translate="yes" xml:space="preserve">
          <source>Inserts new document into collection.</source>
          <target state="translated">新しいドキュメントをコレクションに挿入します。</target>
        </trans-unit>
        <trans-unit id="1c9f5b8e44c7191e2537f31e05e12769d0067158" translate="yes" xml:space="preserve">
          <source>Inserts several new rows into collection.</source>
          <target state="translated">いくつかの新しい行をコレクションに挿入します。</target>
        </trans-unit>
        <trans-unit id="bf2eee84e640e4fd3496ccb0d9d8b0c2b5228815" translate="yes" xml:space="preserve">
          <source>Inserts the record into the database using the attribute values of this record.</source>
          <target state="translated">このレコードの属性値を使用してデータベースにレコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="95b5771df0479ee4cf97eb31d2fb3d39b695097c" translate="yes" xml:space="preserve">
          <source>Inside your controller there are a few ways to implement authorization. If you want granular permissions that separate access to adding and deleting, then you need to check access for each action. You can either use the above condition in each action method, or use &lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii\filters\AccessControl&lt;/a&gt;:</source>
          <target state="translated">コントローラーの内部には、承認を実装する方法がいくつかあります。追加と削除へのアクセスを分離するきめ細かなアクセス許可が必要な場合は、アクションごとにアクセス権を確認する必要があります。上記の条件を各アクションメソッドで使用するか、&lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii \ filters \ AccessControlを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="b53fd13b9fec1a5e462e7bd89731997206b86335" translate="yes" xml:space="preserve">
          <source>Installing Composer</source>
          <target state="translated">コンポーザーのインストール</target>
        </trans-unit>
        <trans-unit id="94192738c8065f994879b8b91734a6608f420e1f" translate="yes" xml:space="preserve">
          <source>Installing Extensions Manually</source>
          <target state="translated">拡張機能を手動でインストールする</target>
        </trans-unit>
        <trans-unit id="46b981e97a4ea8c2ec0403fa3c275b1fe8ccb413" translate="yes" xml:space="preserve">
          <source>Installing Yii</source>
          <target state="translated">Yiiのインストール</target>
        </trans-unit>
        <trans-unit id="3829a4b0a280f4637e0d3bd035e95fa412ce25a2" translate="yes" xml:space="preserve">
          <source>Installing Yii from an archive file involves three steps:</source>
          <target state="translated">アーカイブファイルから Yii をインストールするには、3 つのステップがあります。</target>
        </trans-unit>
        <trans-unit id="c1e820aecee17ad3e4d768df0da74050fd15d27b" translate="yes" xml:space="preserve">
          <source>Installing from an Archive File</source>
          <target state="translated">アーカイブファイルからのインストール</target>
        </trans-unit>
        <trans-unit id="85bf6a7d0b6bacb168397719f473b9ef92d613e3" translate="yes" xml:space="preserve">
          <source>Installing via Composer</source>
          <target state="translated">コンポーザー経由でのインストール</target>
        </trans-unit>
        <trans-unit id="190de99eb315315ab7a29177474e35d219cd57d3" translate="yes" xml:space="preserve">
          <source>Instance is mainly used in two places:</source>
          <target state="translated">インスタンスは主に2つの場所で使われています。</target>
        </trans-unit>
        <trans-unit id="b922dec9a4c45821cc2f06c79cd2b2ecfd56b685" translate="yes" xml:space="preserve">
          <source>Instance represents a reference to a named object in a dependency injection (DI) container or a service locator.</source>
          <target state="translated">インスタンスは、依存性注入(DI)コンテナまたはサービスロケータ内の名前付きオブジェクトへの参照を表します。</target>
        </trans-unit>
        <trans-unit id="f091fdab5a1a6500405887cdd5448baf822164da" translate="yes" xml:space="preserve">
          <source>Instantiates and configures the Smarty object.</source>
          <target state="translated">Smarty オブジェクトのインスタンスを作成し、設定します。</target>
        </trans-unit>
        <trans-unit id="54271f22dc7286475ff1ed18402d5835dc383898" translate="yes" xml:space="preserve">
          <source>Instead of actually applying or reverting migrations, sometimes you may simply want to mark that your database has been upgraded to a particular migration. This often happens when you manually change the database to a particular state and you do not want the migration(s) for that change to be re-applied later. You can achieve this goal with the following command:</source>
          <target state="translated">実際に移行を適用したり戻したりするのではなく、データベースが特定の移行にアップグレードされたことを単にマークしたい場合があります。これは、手動でデータベースを特定の状態に変更し、その変更のためのマイグレーションを後で再適用したくない場合によく起こります。この目的を達成するには、以下のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="87198a7795a15848a302a47e84e5f18c288b43df" translate="yes" xml:space="preserve">
          <source>Instead of directly writing CSS and/or JavaScript code, developers often write them in some extended syntax and use special tools to convert it into CSS/JavaScript. For example, for CSS code you may use &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; or &lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSS&lt;/a&gt;; and for JavaScript you may use &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;.</source>
          <target state="translated">CSSやJavaScriptコードを直接記述する代わりに、開発者はそれらを拡張構文で記述し、特別なツールを使用してCSS / JavaScriptに変換することがよくあります。たとえば、CSSコードの場合は&lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt;または&lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSSを&lt;/a&gt;使用できます。JavaScriptの場合は&lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScriptを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="61846135400171c7e17ff0131d792d10f4e7ead8" translate="yes" xml:space="preserve">
          <source>Instead of entering the same option values every time you run the migration command, you may configure it once for all in the application configuration like shown below:</source>
          <target state="translated">移行コマンドを実行するたびに同じオプション値を入力するのではなく、以下のようにアプリケーションの設定で一括して設定することができます。</target>
        </trans-unit>
        <trans-unit id="ba2b13e5d275bc7464ec9c952a2e787efa562747" translate="yes" xml:space="preserve">
          <source>Instead of publishing assets by file copying, you may consider using symbolic links, if your OS and Web server allow. This feature can be enabled by setting &lt;a href=&quot;yii-web-assetmanager#%24linkAssets-detail&quot;&gt;linkAssets&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ファイルのコピーによってアセットを公開する代わりに、OSとWebサーバーで許可されている場合は、シンボリックリンクの使用を検討してください。この機能を有効にするには、&lt;a href=&quot;yii-web-assetmanager#%24linkAssets-detail&quot;&gt;linkAssets&lt;/a&gt;を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="3a474af5236c02af7167b64236c27df9232b3c5c" translate="yes" xml:space="preserve">
          <source>Instead of supplying correct username attacker could give your applications something like &lt;code&gt;'; DROP TABLE user; --&lt;/code&gt;. Resulting SQL will be the following:</source>
          <target state="translated">正しいユーザー名を提供する代わりに、攻撃者はアプリケーションに &lt;code&gt;'; DROP TABLE user; --&lt;/code&gt; 。結果のSQLは次のようになります。</target>
        </trans-unit>
        <trans-unit id="a67d8d7c704681e689d46a9abdcea343d2bd9b06" translate="yes" xml:space="preserve">
          <source>Instead of translating individual text messages, sometimes you may want to translate a whole view script. To achieve this goal, simply translate the view and save it under a subdirectory whose name is the same as target language. For example, if you want to translate the view script &lt;code&gt;views/site/index.php&lt;/code&gt; and the target language is &lt;code&gt;ru-RU&lt;/code&gt;, you may translate the view and save it as the file &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt;. Now whenever you call &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;yii\base\View::renderFile()&lt;/a&gt; or any method that invoke this method (e.g. &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii\base\Controller::render()&lt;/a&gt;) to render the view &lt;code&gt;views/site/index.php&lt;/code&gt;, it will end up rendering the translated view &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt;, instead.</source>
          <target state="translated">個々のテキストメッセージを翻訳する代わりに、ビュースクリプト全体を翻訳したい場合があります。この目標を達成するには、ビューを翻訳して、ターゲット言語と同じ名前のサブディレクトリに保存します。たとえば、ビュースクリプト &lt;code&gt;views/site/index.php&lt;/code&gt; を翻訳する場合、ターゲット言語が &lt;code&gt;ru-RU&lt;/code&gt; であれば、ビューを翻訳してファイル &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt; として保存できます。今、あなたが呼び出すたび&lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;のYii \ベース\ビュー:: renderFile（）&lt;/a&gt;または任意のメソッドは、このメソッドInvoke（例えばという&lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;のYii \ベース\コントローラ::（）レンダリング&lt;/a&gt;）ビューレンダリングする &lt;code&gt;views/site/index.php&lt;/code&gt; 、それが終わるだろう代わりに、翻訳されたビュー &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt; をレンダリングします。</target>
        </trans-unit>
        <trans-unit id="40c2096e78beb32cbe63471aaba3fc0d8e0ea23e" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;fileMap&lt;/code&gt; you can simply use the convention of the category mapping to the same named file. Now you can use &lt;code&gt;Menu::t('messages', 'new messages {messages}', ['{messages}' =&amp;gt; 10])&lt;/code&gt; directly.</source>
          <target state="translated">&lt;code&gt;fileMap&lt;/code&gt; を使用する代わりに、同じ名前のファイルへのカテゴリマッピングの規則を使用できます。今、あなたは使用することができる &lt;code&gt;Menu::t('messages', 'new messages {messages}', ['{messages}' =&amp;gt; 10])&lt;/code&gt; を直接。</target>
        </trans-unit>
        <trans-unit id="1d79346606bd16622cb5ce534f3441a8504da23a" translate="yes" xml:space="preserve">
          <source>Interface for classes that parse the raw request body into a parameters array.</source>
          <target state="translated">生のリクエストボディをパラメータ配列に解析するクラスのためのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="2e64df73956dc9f366b6debf17bcc754875788f2" translate="yes" xml:space="preserve">
          <source>Interface yii\authclient\ClientInterface</source>
          <target state="translated">Interface yiiiiauthclientClientInterface</target>
        </trans-unit>
        <trans-unit id="47e6fa02edc4ef53d6701680e0509ea86bf1e4a1" translate="yes" xml:space="preserve">
          <source>Interface yii\authclient\StateStorageInterface</source>
          <target state="translated">Interface yiiiiauthclient,StateStorageInterface</target>
        </trans-unit>
        <trans-unit id="a0c2a283035c8447d452d140d608b3ea34a9ae44" translate="yes" xml:space="preserve">
          <source>Interface yii\base\Arrayable</source>
          <target state="translated">Interface yiiiibaseArrayable</target>
        </trans-unit>
        <trans-unit id="f9348fa8fea4b947559c8276e1c19882f6bf870c" translate="yes" xml:space="preserve">
          <source>Interface yii\base\BootstrapInterface</source>
          <target state="translated">Interface yiiiibaseBootstrapInterface</target>
        </trans-unit>
        <trans-unit id="f1a835b623f61839c543c4c354fb2437bbec6885" translate="yes" xml:space="preserve">
          <source>Interface yii\base\Configurable</source>
          <target state="translated">Interface yiii\baseConfigurable</target>
        </trans-unit>
        <trans-unit id="8145b87ccf48dd0a4d69b85f7037d177cf61e921" translate="yes" xml:space="preserve">
          <source>Interface yii\base\ViewContextInterface</source>
          <target state="translated">Interface yiiii\baseViewContextInterface</target>
        </trans-unit>
        <trans-unit id="434e73ec1f3c8f176b060bb141e7b710ecc68746" translate="yes" xml:space="preserve">
          <source>Interface yii\caching\CacheInterface</source>
          <target state="translated">Interface yiiiicachingCacheInterface</target>
        </trans-unit>
        <trans-unit id="96c6034e8e14d867e3fb530e5e9850e815420169" translate="yes" xml:space="preserve">
          <source>Interface yii\data\DataProviderInterface</source>
          <target state="translated">Interface yii\DataProviderInterface</target>
        </trans-unit>
        <trans-unit id="5252f5bd1cd9fb41d7b736dcbebacb24ecb235be" translate="yes" xml:space="preserve">
          <source>Interface yii\db\ActiveQueryInterface</source>
          <target state="translated">Yiidb\\ActiveQueryInterface</target>
        </trans-unit>
        <trans-unit id="613b51b10a0300d57ef23980ecb0418dc08b03ca" translate="yes" xml:space="preserve">
          <source>Interface yii\db\ActiveRecordInterface</source>
          <target state="translated">Interface yiiiidbActiveRecordInterface</target>
        </trans-unit>
        <trans-unit id="6f6bf76a7f1e077d267dad182984d3cd91ec202a" translate="yes" xml:space="preserve">
          <source>Interface yii\db\MigrationInterface</source>
          <target state="translated">Interface yiiiidbMigrationInterface</target>
        </trans-unit>
        <trans-unit id="d44f129e06b1fcff2c69051e092e1fe9023efe16" translate="yes" xml:space="preserve">
          <source>Interface yii\db\QueryInterface</source>
          <target state="translated">♪yiidb\\\_QueryInterface</target>
        </trans-unit>
        <trans-unit id="f5ed6426bfd34fc7569556b3cb9ae86477027907" translate="yes" xml:space="preserve">
          <source>Interface yii\debug\components\search\matchers\MatcherInterface</source>
          <target state="translated">Interface yiiii\debugebugcomponents</target>
        </trans-unit>
        <trans-unit id="a5b048f87c4ba8ec0c9eae493c7c7ce2f9d1151d" translate="yes" xml:space="preserve">
          <source>Interface yii\debug\models\search\UserSearchInterface</source>
          <target state="translated">Interface yiiii\debugmodels</target>
        </trans-unit>
        <trans-unit id="fa6aeb3fc2d12c482beb79bc7a25c199c1c8c1ef" translate="yes" xml:space="preserve">
          <source>Interface yii\filters\RateLimitInterface</source>
          <target state="translated">Interface yiiiifiltersRateLimitInterface</target>
        </trans-unit>
        <trans-unit id="70b21e72dcc7a7bc099e45ff68390ad2e6efd5b2" translate="yes" xml:space="preserve">
          <source>Interface yii\filters\auth\AuthInterface</source>
          <target state="translated">Interface yiii\filtersauthaututhInterface</target>
        </trans-unit>
        <trans-unit id="01a4c481c64d75df7379e9b57e9ecf30cc790f7e" translate="yes" xml:space="preserve">
          <source>Interface yii\httpclient\FormatterInterface</source>
          <target state="translated">Interface yii\httpclientFormatterInterface</target>
        </trans-unit>
        <trans-unit id="6e20152ef5f704bfb0398d3c2dcdf9e690424edb" translate="yes" xml:space="preserve">
          <source>Interface yii\httpclient\ParserInterface</source>
          <target state="translated">Interface yiiii\httpclientParserInterface</target>
        </trans-unit>
        <trans-unit id="0784064d46f0b15165ba8cf710a9a6f56ac68f2b" translate="yes" xml:space="preserve">
          <source>Interface yii\mail\MailerInterface</source>
          <target state="translated">Interface yiiiimailMailerInterface</target>
        </trans-unit>
        <trans-unit id="c96d3b021ab4844b56494f4f59b5b3fb9c0e0527" translate="yes" xml:space="preserve">
          <source>Interface yii\mail\MessageInterface</source>
          <target state="translated">Interface yiiiimail\\MessageInterface</target>
        </trans-unit>
        <trans-unit id="366f28ebb01ee88bdf4745ac927f364eec5b8714" translate="yes" xml:space="preserve">
          <source>Interface yii\rbac\CheckAccessInterface</source>
          <target state="translated">Interface yiiiirbacCheckAccessInterface</target>
        </trans-unit>
        <trans-unit id="80b3aa9add198313bdb04eebcdf27573d2b50db1" translate="yes" xml:space="preserve">
          <source>Interface yii\rbac\ManagerInterface</source>
          <target state="translated">Interface yiiiiRbacacManagerInterface</target>
        </trans-unit>
        <trans-unit id="dd9c12990586c7d349300b85c5abf58d22bdddaf" translate="yes" xml:space="preserve">
          <source>Interface yii\web\AssetConverterInterface</source>
          <target state="translated">Interface yiiiiweb\\\a</target>
        </trans-unit>
        <trans-unit id="17b9167faecd28e1fb2a0bbcb2a644b43c6899d8" translate="yes" xml:space="preserve">
          <source>Interface yii\web\IdentityInterface</source>
          <target state="translated">Interface yiiii\\\\\Otwitter.com</target>
        </trans-unit>
        <trans-unit id="90ae37c7b4ff7c57786e77c63323c9bdb1ebc8c9" translate="yes" xml:space="preserve">
          <source>Interface yii\web\Linkable</source>
          <target state="translated">Interface yiiiiweweLinkable</target>
        </trans-unit>
        <trans-unit id="251266ee55efea4f724611aa72115696d8ed7612" translate="yes" xml:space="preserve">
          <source>Interface yii\web\RequestParserInterface</source>
          <target state="translated">Interface yiiii\webRequestParserInterface</target>
        </trans-unit>
        <trans-unit id="1ae71e68adf3eb105abd5c8a9a4a317266872bab" translate="yes" xml:space="preserve">
          <source>Interface yii\web\ResponseFormatterInterface</source>
          <target state="translated">Interface yiiiweweResponseFormatterInterface</target>
        </trans-unit>
        <trans-unit id="45fbaa06ae92011d63ead7bc9e0b32a97f2e0b6a" translate="yes" xml:space="preserve">
          <source>Interface yii\web\UrlRuleInterface</source>
          <target state="translated">インタフェース yiiiiwebUrlRuleInterface</target>
        </trans-unit>
        <trans-unit id="c3a5ace31cf0a4fd6a24f272d8420df6f5f549e5" translate="yes" xml:space="preserve">
          <source>Internal HTTP client.</source>
          <target state="translated">内部HTTPクライアント。</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="55678c6233b4e8256403a6d87de8bda0e77808ff" translate="yes" xml:space="preserve">
          <source>Internationalization (I18N) refers to the process of designing a software application so that it can be adapted to various languages and regions without engineering changes. For Web applications, this is of particular importance because the potential users may be worldwide. Yii offers a full spectrum of I18N features that support message translation, view translation, date and number formatting.</source>
          <target state="translated">国際化(I18N)とは、エンジニアリングの変更なしに様々な言語や地域に適応できるようにソフトウェアアプリケーションを設計するプロセスを指します。ウェブアプリケーションでは、潜在的なユーザが世界中にいる可能性があるため、これは特に重要です。Yii は、メッセージ翻訳、ビュー翻訳、日付と数字のフォーマットをサポートする I18N 機能をフルに提供しています。</target>
        </trans-unit>
        <trans-unit id="ec41529ec988c31d48e2791253f7675f0f07663a" translate="yes" xml:space="preserve">
          <source>Internationalization and Localization</source>
          <target state="translated">国際化とローカライゼーション</target>
        </trans-unit>
        <trans-unit id="3b345225b8997a0b00986b3ccff1b1f8b9bab1b5" translate="yes" xml:space="preserve">
          <source>InvalidCallException represents an exception caused by calling a method in a wrong way.</source>
          <target state="translated">InvalidCallException は、間違った方法でメソッドを呼び出すことで発生する例外を表します。</target>
        </trans-unit>
        <trans-unit id="212caccaad772fbea21747ed08a5e69221b90f8d" translate="yes" xml:space="preserve">
          <source>InvalidConfigException represents an exception caused by incorrect object configuration.</source>
          <target state="translated">InvalidConfigException は、オブジェクトの構成が正しくないために発生した例外を表します。</target>
        </trans-unit>
        <trans-unit id="dd51af202c401c05f263fec1cf8d0ab7f4a2f1af" translate="yes" xml:space="preserve">
          <source>InvalidParamException represents an exception caused by invalid parameters passed to a method.</source>
          <target state="translated">InvalidParamException は、メソッドに渡されたパラメータが無効な場合に発生する例外を表します。</target>
        </trans-unit>
        <trans-unit id="0832988a1cf88136c2c529b068a1b86e9ca606f0" translate="yes" xml:space="preserve">
          <source>InvalidRouteException represents an exception caused by an invalid route.</source>
          <target state="translated">InvalidRouteException は、無効なルートに起因する例外を表します。</target>
        </trans-unit>
        <trans-unit id="5410323db3762a7d4ca4b3ee268a8421b445a052" translate="yes" xml:space="preserve">
          <source>InvalidValueException represents an exception caused by a function returning a value of unexpected type.</source>
          <target state="translated">InvalidValueException は、関数が予期しない型の値を返すことで発生する例外を表します。</target>
        </trans-unit>
        <trans-unit id="ed078df4d003d0b3cd855001e0db2c1f5865f3fc" translate="yes" xml:space="preserve">
          <source>Invalidates RBAC related cache</source>
          <target state="translated">RBAC 関連のキャッシュを無効にします。</target>
        </trans-unit>
        <trans-unit id="4137efe1ea3617156377ecbf8f099c49915a6a78" translate="yes" xml:space="preserve">
          <source>Invalidates all of the cached data items that are associated with any of the specified &lt;a href=&quot;yii-caching-tagdependency#%24tags-detail&quot;&gt;$tags&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;yii-caching-tagdependency#%24tags-detail&quot;&gt;$ tagsの&lt;/a&gt;いずれかに関連付けられているすべてのキャッシュデータ項目を無効にします。</target>
        </trans-unit>
        <trans-unit id="40eae926bb84850c7e2e401ca1aba8fefc88f58f" translate="yes" xml:space="preserve">
          <source>Invalidates precompiled script cache (such as OPCache or APC) for the given file.</source>
          <target state="translated">指定されたファイルのコンパイル済みスクリプトキャッシュ (OPCache や APC など)を無効にします。</target>
        </trans-unit>
        <trans-unit id="72a6aa2eb2ce4c79f3d15f1fe0bcf96592dbc4e2" translate="yes" xml:space="preserve">
          <source>Inverse Relations</source>
          <target state="translated">逆関係</target>
        </trans-unit>
        <trans-unit id="5237a71ae84eb0a88d8b429891cd78b9a5d46089" translate="yes" xml:space="preserve">
          <source>Inverts an SQL expressions with &lt;code&gt;NOT&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;NOT&lt;/code&gt; 演算子を使用してSQL式を反転します。</target>
        </trans-unit>
        <trans-unit id="81595013b8a47ec2d8e093b03d5f7bf04cbcd2cf" translate="yes" xml:space="preserve">
          <source>Invoke a callback with resolving dependencies in parameters.</source>
          <target state="translated">パラメータの依存関係を解決したコールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="91dca1b632934189d9d6c880aa7bc4214c9a6563" translate="yes" xml:space="preserve">
          <source>Ip attribute input search value</source>
          <target state="translated">Ip属性入力検索値</target>
        </trans-unit>
        <trans-unit id="302ef212e27e87db676e356a7b80c0951cfde119" translate="yes" xml:space="preserve">
          <source>Is the source data to extract a snippet from. It could be either a single string or array of strings.</source>
          <target state="translated">スニペットを抽出するソースデータです。単一の文字列または文字列の配列のいずれかです。</target>
        </trans-unit>
        <trans-unit id="eaa6ecd01685548632bbee726641854e5a1ab02d" translate="yes" xml:space="preserve">
          <source>Is token expired.</source>
          <target state="translated">トークンの有効期限が切れています。</target>
        </trans-unit>
        <trans-unit id="e4b33cfebdea4f3a0d4c2cd23cb8399beaaa2964" translate="yes" xml:space="preserve">
          <source>Is token valid.</source>
          <target state="translated">トークンは有効ですか?</target>
        </trans-unit>
        <trans-unit id="d35d4477210affed8cfe05ccd3595f4f940e7ea2" translate="yes" xml:space="preserve">
          <source>Issues no error when an insufficient number of arguments have been provided. Instead, the placeholders will not be substituted.</source>
          <target state="translated">引数の数が不足している場合にエラーを発行しません。その代わり、プレースホルダは代用されません。</target>
        </trans-unit>
        <trans-unit id="90fafd1df93c5da0d163104f07e23e90c26a073f" translate="yes" xml:space="preserve">
          <source>It accepts named arguments and mixed numeric and named arguments.</source>
          <target state="translated">これは、名前付き引数と、数値と名前付き引数が混在しているものを受け付けます。</target>
        </trans-unit>
        <trans-unit id="2f267867645da8df922bdc8b4c4f126a00b71b3b" translate="yes" xml:space="preserve">
          <source>It adds an additional WHERE condition for the given field and determines the comparison operator based on the first few characters of the given value. The condition is added in the same way as in &lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere()&lt;/a&gt; so &lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;empty values&lt;/a&gt; are ignored. The new condition and the existing one will be joined using the &lt;code&gt;AND&lt;/code&gt; operator.</source>
          <target state="translated">指定されたフィールドに追加のWHERE条件を追加し、指定された値の最初の数文字に基づいて比較演算子を決定します。条件は&lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere（）&lt;/a&gt;と同じ方法で追加されるため、&lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;空の値&lt;/a&gt;は無視されます。 &lt;code&gt;AND&lt;/code&gt; 演算子を使用して、新しい条件と既存の条件を結合します。</target>
        </trans-unit>
        <trans-unit id="c43a145728fee1444ace624821b3d4b822029b6f" translate="yes" xml:space="preserve">
          <source>It allows to define allowed HTTP request methods for each action and will throw an HTTP 405 error when the method is not allowed.</source>
          <target state="translated">各アクションに対して許可された HTTP リクエストメソッドを定義することができ、メソッドが許可されていない場合は HTTP 405 エラーをスローします。</target>
        </trans-unit>
        <trans-unit id="90f6b20cb43792a3f75521480aee97ff781b7cb2" translate="yes" xml:space="preserve">
          <source>It allows to fetch not only rows and total rows count, but also a meta information and facet results.</source>
          <target state="translated">行数や総行数だけでなく、メタ情報やファセット結果も取得できます。</target>
        </trans-unit>
        <trans-unit id="32d22bee08011b2ca7a95df3f084d49b8939aa57" translate="yes" xml:space="preserve">
          <source>It allows to fetch not only rows and total rows count, but full query results including aggregations and so on.</source>
          <target state="translated">行数や総行数だけでなく、集計などを含む完全なクエリ結果を取得することができます。</target>
        </trans-unit>
        <trans-unit id="1199a1616d7b035e2dae63f9388ce454979590ea" translate="yes" xml:space="preserve">
          <source>It also handles objects by using the PHP functions serialize() and unserialize().</source>
          <target state="translated">また、PHP の関数 serialize()および unserialize()を使用してオブジェクトを処理します。</target>
        </trans-unit>
        <trans-unit id="7a9217699b2832f178701bede490df16cdc08538" translate="yes" xml:space="preserve">
          <source>It also may change attribute's value if normalization of IPv6 expansion is enabled.</source>
          <target state="translated">また、IPv6 展開の正規化が有効になっている場合は、属性の値が変更されることがある。</target>
        </trans-unit>
        <trans-unit id="6a8c9f29b7655a6022e9fe1ec05b097999e21a6c" translate="yes" xml:space="preserve">
          <source>It also supports &lt;a href=&quot;http://redis.io/commands/auth&quot;&gt;the AUTH command&lt;/a&gt; of redis. When the server needs authentication, you can set the &lt;a href=&quot;yii-redis-connection#%24password-detail&quot;&gt;$password&lt;/a&gt; property to authenticate with the server after connect.</source>
          <target state="translated">また、redis &lt;a href=&quot;http://redis.io/commands/auth&quot;&gt;のAUTHコマンド&lt;/a&gt;もサポートしています。サーバーで認証が必要な場合、&lt;a href=&quot;yii-redis-connection#%24password-detail&quot;&gt;$ password&lt;/a&gt;プロパティを設定して、接続後にサーバーで認証することができます。</target>
        </trans-unit>
        <trans-unit id="d065b2a737f424b6bb2a086d524e74ef12a8d02a" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICUマニュアルで&lt;/a&gt;指定されているカスタム形式にすることもできます。</target>
        </trans-unit>
        <trans-unit id="454aa12e82d2bbc8154a8e17e87458a55b943ef0" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;. Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;http://php.net/manual/de/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICUマニュアルで&lt;/a&gt;指定されているカスタム形式にすることもできます。あるいは、これは &lt;code&gt;php:&lt;/code&gt; で始まる文字列にすることもできます。&lt;a href=&quot;http://php.net/manual/de/function.date.php&quot;&gt;これ&lt;/a&gt;は、PHPのdate（）関数で認識できる形式を表します。</target>
        </trans-unit>
        <trans-unit id="5133633d36549fbebf4958e0a82525110ad9f120" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;. Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICUマニュアルで&lt;/a&gt;指定されているカスタム形式にすることもできます。あるいは、これは &lt;code&gt;php:&lt;/code&gt; で始まる文字列にすることもできます。&lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;これ&lt;/a&gt;は、PHPのdate（）関数で認識できる形式を表します。</target>
        </trans-unit>
        <trans-unit id="75fe673e5394f576a5d11a8507b0c0b6ec22bfbf" translate="yes" xml:space="preserve">
          <source>It can also parse internationalized dates in a specific &lt;a href=&quot;yii-validators-datevalidator#%24locale-detail&quot;&gt;$locale&lt;/a&gt; like e.g. &lt;code&gt;12 мая 2014&lt;/code&gt; when &lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$format&lt;/a&gt; is configured to use a time pattern in ICU format.</source>
          <target state="translated">また、&lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$ format&lt;/a&gt;がICU形式の時間パターンを使用するように構成されている場合、たとえば &lt;code&gt;12 мая 2014&lt;/code&gt; ような特定の&lt;a href=&quot;yii-validators-datevalidator#%24locale-detail&quot;&gt;$ locale&lt;/a&gt;で国際化された日付を解析できます。</target>
        </trans-unit>
        <trans-unit id="a27990bf66f0d948f795885b7a43141c8f274077" translate="yes" xml:space="preserve">
          <source>It can correctly identify the recursively referenced objects in a complex object structure. It also has a recursive depth control to avoid indefinite recursive display of some peculiar variables.</source>
          <target state="translated">複雑なオブジェクト構造の中で再帰的に参照されるオブジェクトを正しく識別することができます。また、いくつかの特殊な変数の不定再帰的な表示を回避するために、再帰的な深さ制御を持っています。</target>
        </trans-unit>
        <trans-unit id="11d519ecbf2d2361f4b5d76a28bc37f5b72f996f" translate="yes" xml:space="preserve">
          <source>It checks if extension required is loaded.</source>
          <target state="translated">必要な拡張子がロードされているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="4e9a32e88c2062df79e089e3d217fcbbc68b2221" translate="yes" xml:space="preserve">
          <source>It could be useful to specify extra configuration that is applied to each rule contained within &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt;. A good example would be specifying defaults for &lt;code&gt;expand&lt;/code&gt; parameter:</source>
          <target state="translated">&lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii \ rest \ UrlRuleに&lt;/a&gt;含まれる各ルールに適用される追加の設定を指定すると役立つ場合があります。良い例は、 &lt;code&gt;expand&lt;/code&gt; パラメーターのデフォルトを指定することです：</target>
        </trans-unit>
        <trans-unit id="05e01bb517ce649066d217b8860059ba8c136db5" translate="yes" xml:space="preserve">
          <source>It creates the memcache instance and adds memcache servers.</source>
          <target state="translated">memcacheインスタンスを作成し、memcacheサーバを追加します。</target>
        </trans-unit>
        <trans-unit id="89899e1ef9b0fe529fde8aeaf6009c836cab54cb" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;a href=&quot;yii-web-request#%24baseUrl-detail&quot;&gt;yii\web\Request::$baseUrl&lt;/a&gt;. This is mainly used when &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$showScriptName&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;a href=&quot;yii-web-request#%24baseUrl-detail&quot;&gt; yii \ web \ Request :: $ baseUrl&lt;/a&gt;です。これは主に、&lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$ enablePrettyUrl&lt;/a&gt;が &lt;code&gt;true&lt;/code&gt; で、&lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$ showScriptName&lt;/a&gt;が &lt;code&gt;false&lt;/code&gt; の場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="8a728ca560a8aae336f221bc87c5181b5e5bee64" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;a href=&quot;yii-web-request#%24scriptUrl-detail&quot;&gt;yii\web\Request::$scriptUrl&lt;/a&gt;. This is mainly used when &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt; or &lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$showScriptName&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">デフォルトは&lt;a href=&quot;yii-web-request#%24scriptUrl-detail&quot;&gt;yii \ web \ Request :: $ scriptUrlです&lt;/a&gt;です。これは主に、&lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$ enablePrettyUrl&lt;/a&gt;が &lt;code&gt;false&lt;/code&gt; または&lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$ showScriptName&lt;/a&gt;が &lt;code&gt;true&lt;/code&gt; の場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="10c5c351d15f103b9bc17ac09e45ba4c8a30db99" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;UTC&lt;/code&gt; so you only have to adjust this value if you store datetime values in another time zone in your database.</source>
          <target state="translated">デフォルトでは &lt;code&gt;UTC&lt;/code&gt; なので、この値を調整する必要があるのは、データベースの別のタイムゾーンに日時値を格納する場合のみです。</target>
        </trans-unit>
        <trans-unit id="7e44ed7cf450651d283b26b3f88309329d180d35" translate="yes" xml:space="preserve">
          <source>It defaults to the directory containing the module class file.</source>
          <target state="translated">デフォルトでは、モジュールクラスファイルのあるディレクトリになります。</target>
        </trans-unit>
        <trans-unit id="0bc3a1d545b7a0e506f429cba21a5d92903d23e6" translate="yes" xml:space="preserve">
          <source>It does nothing if a DB connection has already been established.</source>
          <target state="translated">DB接続が既に確立されている場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="7cb4d76c2627f3ed0c1b85af950a217139857ca3" translate="yes" xml:space="preserve">
          <source>It does nothing if a MongoDB connection has already been established.</source>
          <target state="translated">MongoDB 接続がすでに確立されている場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="e5c06d71a780645ac1bafd69375220fdc4c7fde0" translate="yes" xml:space="preserve">
          <source>It does nothing if the connection is already closed.</source>
          <target state="translated">すでに接続が閉じられている場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="db179dae3eada9ef431dc9a5f2a9899c6f5be58a" translate="yes" xml:space="preserve">
          <source>It does the translation by looking up the message to be translated in a message source which stores the original messages and the translated messages. If the message is found, the corresponding translated message will be returned; otherwise the original message will be returned untranslated.</source>
          <target state="translated">元のメッセージと翻訳されたメッセージを保存しているメッセージソースの中から、 翻訳されるメッセージを探すことで翻訳を行います。メッセージが見つかった場合、対応する翻訳されたメッセージが返されます。</target>
        </trans-unit>
        <trans-unit id="389ac910ce18f55d0bdbc0a953df1628d698fa01" translate="yes" xml:space="preserve">
          <source>It encapsulates the $_SERVER variable and resolves its inconsistency among different Web servers. Also it provides an interface to retrieve request parameters from $_POST, $_GET, $_COOKIES and REST parameters sent via other HTTP methods like PUT or DELETE.</source>
          <target state="translated">これは $_SERVER 変数をカプセル化し、異なるウェブサーバ間での不整合を解決します。また、$_POST、$_GET、$_COOKIES、そしてPUTやDELETEのような他のHTTPメソッドを介して送信されたRESTパラメータからリクエストパラメータを取得するためのインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="c8ce105c040f1e461505a3672e95ceb67bd4300f" translate="yes" xml:space="preserve">
          <source>It encapsulates the parameters associated with an event. The &lt;a href=&quot;yii-base-event#%24sender-detail&quot;&gt;$sender&lt;/a&gt; property describes who raises the event. And the &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$handled&lt;/a&gt; property indicates if the event is handled. If an event handler sets &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$handled&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt;, the rest of the uninvoked handlers will no longer be called to handle the event.</source>
          <target state="translated">イベントに関連付けられたパラメーターをカプセル化します。&lt;a href=&quot;yii-base-event#%24sender-detail&quot;&gt;$送信者の&lt;/a&gt;プロパティには、イベントを発生させ方について説明します。また、&lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$ handled&lt;/a&gt;プロパティは、イベントが処理されるかどうかを示します。イベントハンドラが設定した場合&lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;に処理$&lt;/a&gt;であることを &lt;code&gt;true&lt;/code&gt; 、uninvokedハンドラの残りの部分は、もはやイベントを処理するために呼び出されません。</target>
        </trans-unit>
        <trans-unit id="8acc93b65ad30c37d9b974bd00555eb3cb6abbfa" translate="yes" xml:space="preserve">
          <source>It enhances the PHP built-in functions &lt;code&gt;json_encode()&lt;/code&gt; and &lt;code&gt;json_decode()&lt;/code&gt; by supporting encoding JavaScript expressions and throwing exceptions when decoding fails.</source>
          <target state="translated">これは、JavaScript式のエンコードをサポートし、デコードが失敗したときに例外をスローすることにより、PHP組み込み関数 &lt;code&gt;json_encode()&lt;/code&gt; および &lt;code&gt;json_decode()&lt;/code&gt; を拡張します。</target>
        </trans-unit>
        <trans-unit id="aed15eec7537c46d1666b1fb8fe89b67147949f3" translate="yes" xml:space="preserve">
          <source>It ensures &lt;a href=&quot;yii-swiftmailer-message#%24swiftMessage-detail&quot;&gt;$swiftMessage&lt;/a&gt; is also cloned.</source>
          <target state="translated">&lt;a href=&quot;yii-swiftmailer-message#%24swiftMessage-detail&quot;&gt;$ swiftMessage&lt;/a&gt;も確実に複製されます。</target>
        </trans-unit>
        <trans-unit id="db5e9c9e70524e8687126d5d61c516e0df75e517" translate="yes" xml:space="preserve">
          <source>It extends from &lt;a href=&quot;yii-baseyii&quot;&gt;yii\BaseYii&lt;/a&gt; which provides the actual implementation. By writing your own Yii class, you can customize some functionalities of &lt;a href=&quot;yii-baseyii&quot;&gt;yii\BaseYii&lt;/a&gt;.</source>
          <target state="translated">実際の実装を提供する&lt;a href=&quot;yii-baseyii&quot;&gt;yii \ BaseYii&lt;/a&gt;から拡張されます。独自のYiiクラスを作成することにより、&lt;a href=&quot;yii-baseyii&quot;&gt;yii \ BaseYiiの&lt;/a&gt;いくつかの機能をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="ded4a272ba4b68057d44447d9738be4d747e5d94" translate="yes" xml:space="preserve">
          <source>It first looks for a key in &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;$pathMap&lt;/a&gt; that is a substring of the given view file path;</source>
          <target state="translated">最初に、指定されたビューファイルパスの部分文字列である&lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;$ pathMap&lt;/a&gt;でキーを検索します。</target>
        </trans-unit>
        <trans-unit id="a5ad7cd4f17ed35ef1b100c9654872d1ba80d7aa" translate="yes" xml:space="preserve">
          <source>It has no content yet.</source>
          <target state="translated">まだ内容はありません。</target>
        </trans-unit>
        <trans-unit id="62b76ebe8d88156dc4de0944165d5ec409bd9e43" translate="yes" xml:space="preserve">
          <source>It has support for getting &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one()&lt;/a&gt; instance or &lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all()&lt;/a&gt;. Allows pagination via &lt;a href=&quot;yii-db-queryinterface#limit()-detail&quot;&gt;limit()&lt;/a&gt; and &lt;a href=&quot;yii-db-queryinterface#offset()-detail&quot;&gt;offset()&lt;/a&gt;. Sorting is supported via &lt;a href=&quot;yii-db-queryinterface#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; and items can be limited to match some conditions using &lt;a href=&quot;yii-db-queryinterface#where()-detail&quot;&gt;where()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one（）&lt;/a&gt;インスタンスまたは&lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all（）の&lt;/a&gt;取得をサポートしています。&lt;a href=&quot;yii-db-queryinterface#limit()-detail&quot;&gt;limit（）&lt;/a&gt;および&lt;a href=&quot;yii-db-queryinterface#offset()-detail&quot;&gt;offset（）&lt;/a&gt;を介したページ付けを許可します。並べ替えは&lt;a href=&quot;yii-db-queryinterface#orderBy()-detail&quot;&gt;orderBy（）で&lt;/a&gt;サポートされており、アイテムは&lt;a href=&quot;yii-db-queryinterface#where()-detail&quot;&gt;where（）&lt;/a&gt;を使用して一部の条件に一致するように制限できます。</target>
        </trans-unit>
        <trans-unit id="06b262991f92d5df8d52d9d96f779941475b6812" translate="yes" xml:space="preserve">
          <source>It holds the &lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;$headers&lt;/a&gt;, &lt;a href=&quot;yii-web-response#%24cookies-detail&quot;&gt;$cookies&lt;/a&gt; and &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;$content&lt;/a&gt; that is to be sent to the client. It also controls the HTTP &lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;status code&lt;/a&gt;.</source>
          <target state="translated">これは、クライアントに送信される&lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;$ headers&lt;/a&gt;、&lt;a href=&quot;yii-web-response#%24cookies-detail&quot;&gt;$ cookies&lt;/a&gt;、および&lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;$ content&lt;/a&gt;を保持します。また、HTTP &lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;ステータスコード&lt;/a&gt;も制御します。</target>
        </trans-unit>
        <trans-unit id="58c970be17232bf64859d3d2c88d274a68e51f85" translate="yes" xml:space="preserve">
          <source>It is a common task to increment or decrement a column in a database table. We call these columns &quot;counter columns&quot;. You can use &lt;a href=&quot;yii-db-baseactiverecord#updateCounters()-detail&quot;&gt;updateCounters()&lt;/a&gt; to update one or multiple counter columns. For example,</source>
          <target state="translated">データベーステーブルの列をインクリメントまたはデクリメントすることは一般的なタスクです。これらの列を「カウンター列」と呼びます。&lt;a href=&quot;yii-db-baseactiverecord#updateCounters()-detail&quot;&gt;updateCounters（）&lt;/a&gt;を使用して、1つまたは複数のカウンター列を更新できます。例えば、</target>
        </trans-unit>
        <trans-unit id="3c1e64d0ec1283fec7e84d0c14f8d11c2efb9848" translate="yes" xml:space="preserve">
          <source>It is a wrapper for the PHP &lt;code&gt;$_SERVER&lt;/code&gt; variable which holds information about the currently running PHP script and the command line arguments given to it.</source>
          <target state="translated">これは、PHP &lt;code&gt;$_SERVER&lt;/code&gt; 変数のラッパーであり、現在実行中のPHPスクリプトとそれに与えられたコマンドライン引数に関する情報を保持します。</target>
        </trans-unit>
        <trans-unit id="badd5c80e7a8585fdf6c7200f7a1b0a55ed4ef5d" translate="yes" xml:space="preserve">
          <source>It is also possible to just call &lt;code&gt;$query-&amp;gt;joinWith(['author']);&lt;/code&gt; when the alias is defined in the relation definition.</source>
          <target state="translated">&lt;code&gt;$query-&amp;gt;joinWith(['author']);&lt;/code&gt; 呼び出すだけでも可能です。エイリアスがリレーション定義で定義されている場合。</target>
        </trans-unit>
        <trans-unit id="2b93ff272f7cbc1df49d8d1c3f40d5c181296e78" translate="yes" xml:space="preserve">
          <source>It is also recommended that you use an ICU version equal or greater than version 49. This will ensure you can use all the features described in this document. For example, an ICU version below 49 does not support using &lt;code&gt;#&lt;/code&gt; placeholders in plural rules. Please refer to &lt;a href=&quot;http://site.icu-project.org/download&quot;&gt;http://site.icu-project.org/download&lt;/a&gt; for a complete list of available ICU versions. Note that the version numbering has changed after the 4.8 release (e.g., ICU 4.8, ICU 49, ICU 50, etc.)</source>
          <target state="translated">また、バージョン49以降のICUバージョンを使用することをお勧めします。これにより、このドキュメントで説明されているすべての機能を使用できるようになります。たとえば、49未満のICUバージョンは、複数のルールでの &lt;code&gt;#&lt;/code&gt; プレースホルダーの使用をサポートしていません。利用可能なICUバージョンの完全なリストについては、&lt;a href=&quot;http://site.icu-project.org/download&quot;&gt;http：//site.icu-project.org/download&lt;/a&gt;を参照してください。バージョン番号は4.8リリース後に変更されていることに注意してください（例：ICU 4.8、ICU 49、ICU 50など）。</target>
        </trans-unit>
        <trans-unit id="435705785b2f2b2097bdca619cf904bdadae211d" translate="yes" xml:space="preserve">
          <source>It is an action filter that can be added to a controller and handles the &lt;code&gt;beforeAction&lt;/code&gt; event.</source>
          <target state="translated">これは、コントローラーに追加できるアクションフィルターであり、 &lt;code&gt;beforeAction&lt;/code&gt; イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="f272a70db1a6bbedb3d2b2a8920bf62d946bc257" translate="yes" xml:space="preserve">
          <source>It is best used for displaying a model in a regular format (e.g. each model attribute is displayed as a row in a table). The model can be either an instance or subclass of &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; such as an &lt;a href=&quot;guide-db-active-record&quot;&gt;active record&lt;/a&gt; or an associative array.</source>
          <target state="translated">これは、モデルを通常の形式で表示するのに最適です（たとえば、各モデル属性はテーブルの行として表示されます）。モデルは、&lt;a href=&quot;guide-db-active-record&quot;&gt;アクティブなレコード&lt;/a&gt;や連想配列など、&lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Modelの&lt;/a&gt;インスタンスまたはサブクラスのいずれかです。</target>
        </trans-unit>
        <trans-unit id="2fc0c00c45d1f0f2a5d16046ddd364fec4d8b490" translate="yes" xml:space="preserve">
          <source>It is further possible to limit the date within a certain range using &lt;a href=&quot;yii-validators-datevalidator#%24min-detail&quot;&gt;$min&lt;/a&gt; and &lt;a href=&quot;yii-validators-datevalidator#%24max-detail&quot;&gt;$max&lt;/a&gt;.</source>
          <target state="translated">さらに、&lt;a href=&quot;yii-validators-datevalidator#%24min-detail&quot;&gt;$ min&lt;/a&gt;および&lt;a href=&quot;yii-validators-datevalidator#%24max-detail&quot;&gt;$ max&lt;/a&gt;を使用して、日付を特定の範囲内に制限することができます。</target>
        </trans-unit>
        <trans-unit id="9e29a18e20911f45dcf0ba7bfb1ce0c0f6b1e175" translate="yes" xml:space="preserve">
          <source>It is handy to know whether an array is indexed or an associative. Here's an example:</source>
          <target state="translated">配列がインデックス化されているのか連想配列なのかを知るのに便利です。以下に例を示します。</target>
        </trans-unit>
        <trans-unit id="e505bc9470131ba9fd9fa473d57301f150832431" translate="yes" xml:space="preserve">
          <source>It is highly recommended to use &lt;a href=&quot;guide-structure-assets&quot;&gt;asset bundles&lt;/a&gt; to register external CSS files rather than &lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;registerCssFile()&lt;/a&gt;. Using asset bundles allows you to combine and compress multiple CSS files, which is desirable for high traffic websites. It also provides more flexibility as all asset dependencies of your application are configured in one place.</source>
          <target state="translated">&lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;registerCssFile（）&lt;/a&gt;ではなく、&lt;a href=&quot;guide-structure-assets&quot;&gt;アセットバンドル&lt;/a&gt;を使用して外部CSSファイルを登録することを強くお勧めします。アセットバンドルを使用すると、複数のCSSファイルを組み合わせて圧縮できます。これは、トラフィックの多いWebサイトに適しています。また、アプリケーションのすべてのアセットの依存関係が1か所で構成されるため、柔軟性が向上します。</target>
        </trans-unit>
        <trans-unit id="ba5dd4d1609e1ccfe3332edf7a29eb242b331604" translate="yes" xml:space="preserve">
          <source>It is highly recommended to use &lt;a href=&quot;guide-structure-assets&quot;&gt;asset bundles&lt;/a&gt; to register external JS files rather than &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile()&lt;/a&gt; because these allow better flexibility and more granular dependency configuration. Also using asset bundles allows you to combine and compress multiple JS files, which is desirable for high traffic websites.</source>
          <target state="translated">&lt;a href=&quot;guide-structure-assets&quot;&gt;アセットバンドル&lt;/a&gt;を使用して、&lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile（）&lt;/a&gt;ではなく外部JSファイルを登録することを強くお勧めします。これにより、より優れた柔軟性とより詳細な依存関係構成が可能になります。また、アセットバンドルを使用すると、複数のJSファイルを結合および圧縮できます。これは、トラフィックの多いWebサイトに適しています。</target>
        </trans-unit>
        <trans-unit id="d756d6d1864092502123de800e04e1d1f88c6456" translate="yes" xml:space="preserve">
          <source>It is important that the fully qualified controller classes should be &lt;a href=&quot;guide-concept-autoloading&quot;&gt;autoloadable&lt;/a&gt; and the actual namespace of your controller classes match the value of this property. Otherwise, you will receive a &quot;Page Not Found&quot; error when accessing the application.</source>
          <target state="translated">完全修飾コントローラークラスが&lt;a href=&quot;guide-concept-autoloading&quot;&gt;オートロード可能で&lt;/a&gt;あり、コントローラークラスの実際の名前空間がこのプロパティの値と一致することが重要です。そうしないと、アプリケーションにアクセスするときに「ページが見つかりません」というエラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="3ec72f61b6feaf6c072e9a4bd04490913c9c7610" translate="yes" xml:space="preserve">
          <source>It is important that you specify the package type of your extension as &lt;code&gt;yii2-extension&lt;/code&gt; so that the package can be recognized as a Yii extension when being installed.</source>
          <target state="translated">インストール時にパッケージがYii拡張機能として認識されるように、 &lt;code&gt;yii2-extension&lt;/code&gt; 機能のパッケージタイプをyii2-extensionとして指定することが重要です。</target>
        </trans-unit>
        <trans-unit id="84e963549c8e0626ef39e6bd02a7ede21a869fa4" translate="yes" xml:space="preserve">
          <source>It is important to make sure that the pairs of &lt;code&gt;beginProfile&lt;/code&gt; and &lt;code&gt;endProfile&lt;/code&gt; are properly nested. For example,</source>
          <target state="translated">&lt;code&gt;beginProfile&lt;/code&gt; と &lt;code&gt;endProfile&lt;/code&gt; のペアが正しくネストされていることを確認することが重要です。例えば、</target>
        </trans-unit>
        <trans-unit id="062dc60dfbba51727d4a7e5335c0df3e49a9ed97" translate="yes" xml:space="preserve">
          <source>It is important to remember that you add the &lt;code&gt;enctype&lt;/code&gt; option to the form so that the file can be properly uploaded. The &lt;code&gt;fileInput()&lt;/code&gt; call will render a &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; tag which will allow users to select a file to upload.</source>
          <target state="translated">ファイルが適切にアップロードされるように、フォームに &lt;code&gt;enctype&lt;/code&gt; オプションを追加することを覚えておくことが重要です。 &lt;code&gt;fileInput()&lt;/code&gt; の呼び出しは、レンダリングされます &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; ユーザーがアップロードするファイルを選択することができますタグを。</target>
        </trans-unit>
        <trans-unit id="b68125c76b99aac4ae94a9acca2f53ca843b771b" translate="yes" xml:space="preserve">
          <source>It is important to understand the life cycles of Active Record when it is used for different purposes. During each life cycle, a certain sequence of methods will be invoked, and you can override these methods to get a chance to customize the life cycle. You can also respond to certain Active Record events triggered during a life cycle to inject your custom code. These events are especially useful when you are developing Active Record &lt;a href=&quot;guide-concept-behaviors&quot;&gt;behaviors&lt;/a&gt; which need to customize Active Record life cycles.</source>
          <target state="translated">さまざまな目的で使用される場合、アクティブレコードのライフサイクルを理解することが重要です。各ライフサイクル中に、特定の一連のメソッドが呼び出され、これらのメソッドをオーバーライドして、ライフサイクルをカスタマイズする機会を得ることができます。ライフサイクル中にトリガーされた特定のアクティブレコードイベントに応答して、カスタムコードを挿入することもできます。これらのイベントは、アクティブレコードのライフサイクルをカスタマイズする必要があるアクティブレコードの&lt;a href=&quot;guide-concept-behaviors&quot;&gt;動作&lt;/a&gt;を開発するときに特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="16541b98b077f4ebcb4c47fc17115652e92c0ac1" translate="yes" xml:space="preserve">
          <source>It is necessary to override PDO's method as some MSSQL PDO driver (e.g. dblib) does not support getting attributes</source>
          <target state="translated">いくつかの MSSQL PDO ドライバ (例:dblib)は属性の取得をサポートしていないので、PDO のメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="c8c70386e63814ee892359a581c8af4f52d03df7" translate="yes" xml:space="preserve">
          <source>It is often preferable to manage assets programmatically. For example, when you use the &lt;a href=&quot;yii-jui-datepicker&quot;&gt;yii\jui\DatePicker&lt;/a&gt; widget in a page, it will automatically include the required CSS and JavaScript files, instead of asking you to manually find these files and include them. And when you upgrade the widget to a new version, it will automatically use the new version of the asset files. In this tutorial, we will describe the powerful asset management capability provided in Yii.</source>
          <target state="translated">多くの場合、資産をプログラムで管理することをお勧めします。たとえば、ページで&lt;a href=&quot;yii-jui-datepicker&quot;&gt;yii \ jui \ DatePicker&lt;/a&gt;ウィジェットを使用すると、手動でこれらのファイルを見つけてインクルードする代わりに、必要なCSSファイルとJavaScriptファイルが自動的にインクルードされます。また、ウィジェットを新しいバージョンにアップグレードすると、新しいバージョンのアセットファイルが自動的に使用されます。このチュートリアルでは、Yiiで提供される強力な資産管理機能について説明します。</target>
        </trans-unit>
        <trans-unit id="9b38538428b5b6461dfc79ad3cb235d550c4d4b0" translate="yes" xml:space="preserve">
          <source>It is possible to configure multiple definitions at once, passing configuration array to &lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingletons()-detail&quot;&gt;setSingletons()&lt;/a&gt; method. Iterating over the configuration array, the methods will call &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt; respectively for each item.</source>
          <target state="translated">一度に複数の定義を構成し、構成配列を&lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions（）&lt;/a&gt;または&lt;a href=&quot;yii-di-container#setSingletons()-detail&quot;&gt;setSingletons（）&lt;/a&gt;メソッドに渡すことができます。メソッドは構成配列を反復処理し、各項目に対してそれぞれ&lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set（）&lt;/a&gt;または&lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton（）&lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="4a7b8db1916ecef5539d848d8928c2b1fb5795ae" translate="yes" xml:space="preserve">
          <source>It is possible to connect to a redis server using &lt;a href=&quot;yii-redis-connection#%24hostname-detail&quot;&gt;$hostname&lt;/a&gt; and &lt;a href=&quot;yii-redis-connection#%24port-detail&quot;&gt;$port&lt;/a&gt; or using a &lt;a href=&quot;yii-redis-connection#%24unixSocket-detail&quot;&gt;$unixSocket&lt;/a&gt;.</source>
          <target state="translated">使用してRedisのサーバーに接続することが可能である&lt;a href=&quot;yii-redis-connection#%24hostname-detail&quot;&gt;$ホスト名&lt;/a&gt;および&lt;a href=&quot;yii-redis-connection#%24port-detail&quot;&gt;$ポート&lt;/a&gt;または使用して&lt;a href=&quot;yii-redis-connection#%24unixSocket-detail&quot;&gt;$ unixSocketを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb05251de537836c044a98b48cc29adb29cddbc2" translate="yes" xml:space="preserve">
          <source>It is possible to include Web server names in the patterns of URL rules. This is mainly useful when your application should behave differently for different Web server names. For example, the following rules will parse the URL &lt;code&gt;http://admin.example.com/login&lt;/code&gt; into the route &lt;code&gt;admin/user/login&lt;/code&gt; and &lt;code&gt;http://www.example.com/login&lt;/code&gt; into &lt;code&gt;site/login&lt;/code&gt;.</source>
          <target state="translated">URLルールのパターンにWebサーバー名を含めることができます。これは主に、アプリケーションがWebサーバー名ごとに異なる動作をする必要がある場合に役立ちます。たとえば、次のルールがURL解析する &lt;code&gt;http://admin.example.com/login&lt;/code&gt; をルートに &lt;code&gt;admin/user/login&lt;/code&gt; および &lt;code&gt;http://www.example.com/login&lt;/code&gt; に &lt;code&gt;site/login&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07c53912dd5fa17c6ec70a347e1f858ac2f4433c" translate="yes" xml:space="preserve">
          <source>It is possible to map a single path to multiple paths. For example,</source>
          <target state="translated">1つのパスを複数のパスにマッピングすることが可能です。例えば</target>
        </trans-unit>
        <trans-unit id="a1bc5beceb79eedc2c43fcca4fc0eda27dfdafe7" translate="yes" xml:space="preserve">
          <source>It is possible to provide default way of converting object to array for a specific class by implementing &lt;a href=&quot;yii-base-arrayable&quot;&gt;Arrayable&lt;/a&gt; interface in that class.</source>
          <target state="translated">特定のクラスに&lt;a href=&quot;yii-base-arrayable&quot;&gt;Arrayable&lt;/a&gt;インターフェースを実装することにより、特定のクラスのオブジェクトを配列に変換するデフォルトの方法を提供することが可能です。</target>
        </trans-unit>
        <trans-unit id="a6783dea010b569b6ca1b14b387cebbf69baebd7" translate="yes" xml:space="preserve">
          <source>It is possible to use a specific mode of data fetching by setting &lt;a href=&quot;yii-db-datareader#%24fetchMode-detail&quot;&gt;$fetchMode&lt;/a&gt;. See the &lt;a href=&quot;http://www.php.net/manual/en/function.PDOStatement-setFetchMode.php&quot;&gt;PHP manual&lt;/a&gt; for more details about possible fetch mode.</source>
          <target state="translated">&lt;a href=&quot;yii-db-datareader#%24fetchMode-detail&quot;&gt;$ fetchModeを&lt;/a&gt;設定することにより、特定のデータフェッチモードを使用できます。可能なフェッチモードの詳細については、&lt;a href=&quot;http://www.php.net/manual/en/function.PDOStatement-setFetchMode.php&quot;&gt;PHPのマニュアル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a4fa2b2497794839540c020e4aaf1a9f8f690162" translate="yes" xml:space="preserve">
          <source>It is recommended that you create an extension in terms of a &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer package&lt;/a&gt; so that it can be more easily installed and used by other users, as described in the last subsection.</source>
          <target state="translated">最後のサブセクションで説明するように、他のユーザーが簡単にインストールして使用できるように、&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composerパッケージの&lt;/a&gt;観点から拡張機能を作成することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="9f21b449e6f28ed349d2e6d4e2b73523a8be3f48" translate="yes" xml:space="preserve">
          <source>It is recommended that you create various test cases to cover your extension code rather than relying on manual tests. Each time before you release a new version of your extension, you may simply run these test cases to make sure everything is in good shape. Yii provides testing support, which can help you to more easily write unit tests, acceptance tests and functionality tests. For more details, please refer to the &lt;a href=&quot;guide-test-overview&quot;&gt;Testing&lt;/a&gt; section.</source>
          <target state="translated">手動テストに頼るのではなく、拡張コードをカバーするさまざまなテストケースを作成することをお勧めします。拡張機能の新しいバージョンをリリースする前に、これらのテストケースを実行して、すべてが正常な状態であることを確認できます。Yiiは、単体テスト、受け入れテスト、機能テストをより簡単に作成するのに役立つテストサポートを提供します。詳細については、「&lt;a href=&quot;guide-test-overview&quot;&gt;テスト」&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="5463f47310fa33410358d0e2b962c1ff4e075c2b" translate="yes" xml:space="preserve">
          <source>It is recommended that you place assets belonging to an application in a Web directory to avoid the unnecessary asset publishing process. This is why &lt;code&gt;AppAsset&lt;/code&gt; in the prior example specifies &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; instead of &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;sourcePath&lt;/a&gt;.</source>
          <target state="translated">不要なアセットの公開プロセスを回避するために、アプリケーションに属するアセットをWebディレクトリに配置することをお勧めします。理由はここにあり &lt;code&gt;AppAsset&lt;/code&gt; 前の例指定で&lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;basePathを&lt;/a&gt;代わりに&lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;sourcePathは&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00f46f7066f9d224c48b366c7692131decdbb782" translate="yes" xml:space="preserve">
          <source>It is recommended that you specify a language in terms of an &lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF language tag&lt;/a&gt;. For example, &lt;code&gt;en&lt;/code&gt; stands for English, while &lt;code&gt;en-US&lt;/code&gt; stands for English (United States).</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF言語タグの&lt;/a&gt;観点から言語を指定することをお勧めします。たとえば、 &lt;code&gt;en&lt;/code&gt; は英語を表し、 &lt;code&gt;en-US&lt;/code&gt; は英語（米国）を表します。</target>
        </trans-unit>
        <trans-unit id="639559a18ed28fb96c7be7b03405b2b2f3819c61" translate="yes" xml:space="preserve">
          <source>It is supposed to be used in a class that implements the &lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii\db\QueryInterface&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii \ db \ QueryInterface&lt;/a&gt;を実装するクラスで使用されることになっています。</target>
        </trans-unit>
        <trans-unit id="c3ce90737a765c504ddd862b28787fa840b2fa68" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-mongodb-command&quot;&gt;yii\mongodb\Command&lt;/a&gt; for particular commands and queries composition.</source>
          <target state="translated">&lt;a href=&quot;yii-mongodb-command&quot;&gt;yii \ mongodb \ Command&lt;/a&gt;が特定のコマンドとクエリの構成のために使用します。</target>
        </trans-unit>
        <trans-unit id="c2b24adea233777ea9c2a4b4ee5ff3cb198c30fd" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt; to convert files after they have been published.</source>
          <target state="translated">&lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii \ web \ AssetManager&lt;/a&gt;によって、公開後にファイルを変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="516a53c699a38ed82299e7bb54464186143ca6cd" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; to format response data.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt;が応答データをフォーマットするために使用します。</target>
        </trans-unit>
        <trans-unit id="254ae0b615f45d6ec497d47e8ae361512b97982c" translate="yes" xml:space="preserve">
          <source>It is used to show data columns and allows &lt;a href=&quot;yii-grid-datacolumn#%24enableSorting-detail&quot;&gt;sorting&lt;/a&gt; and &lt;a href=&quot;yii-grid-datacolumn#%24filter-detail&quot;&gt;filtering&lt;/a&gt; them.</source>
          <target state="translated">データ列を表示するために使用され、それらを&lt;a href=&quot;yii-grid-datacolumn#%24enableSorting-detail&quot;&gt;ソート&lt;/a&gt;および&lt;a href=&quot;yii-grid-datacolumn#%24filter-detail&quot;&gt;フィルタリング&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="6902b56f58f3c5f376113def885af6be42675e73" translate="yes" xml:space="preserve">
          <source>It is usually created by calling &lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;yii\db\Connection::beginTransaction()&lt;/a&gt;.</source>
          <target state="translated">通常は、&lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;yii \ db \ Connection :: beginTransaction（）を&lt;/a&gt;呼び出すことで作成されます。</target>
        </trans-unit>
        <trans-unit id="ece9eaccb18f9d5abc0a0d696e3031c7914976f4" translate="yes" xml:space="preserve">
          <source>It needs to be configured with a redis &lt;a href=&quot;yii-redis-connection&quot;&gt;yii\redis\Connection&lt;/a&gt; that is also configured as an application component. By default it will use the &lt;code&gt;redis&lt;/code&gt; application component.</source>
          <target state="translated">アプリケーションコンポーネントとしても構成されているredis &lt;a href=&quot;yii-redis-connection&quot;&gt;yii \ redis \ Connection&lt;/a&gt;を使用して構成する必要があります。デフォルトでは、 &lt;code&gt;redis&lt;/code&gt; アプリケーションコンポーネントを使用します。</target>
        </trans-unit>
        <trans-unit id="b5b08891cccb4c34c0a495a0adc07afdfcf5204f" translate="yes" xml:space="preserve">
          <source>It often happens that the data being entered and/or displayed are in a format which is different from the one used in storing the data in a database. For example, in the database you are storing customers' birthdays as UNIX timestamps (which is not a good design, though), while in most cases you would like to manipulate birthdays as strings in the format of &lt;code&gt;'YYYY/MM/DD'&lt;/code&gt;. To achieve this goal, you can define &lt;em&gt;data transformation&lt;/em&gt; methods in the &lt;code&gt;Customer&lt;/code&gt; Active Record class like the following:</source>
          <target state="translated">入力および/または表示されているデータが、データベースへのデータの保存に使用されているものとは異なるフォーマットであることがよくあります。たとえば、データベースでは顧客の誕生日をUNIXタイムスタンプとして保存しますが（これは良い設計ではありません）、ほとんどの場合、誕生日を &lt;code&gt;'YYYY/MM/DD'&lt;/code&gt; の形式の文字列として操作します。この目標を達成するために、次のように &lt;code&gt;Customer&lt;/code&gt; Active Recordクラスで&lt;em&gt;データ変換&lt;/em&gt;メソッドを定義できます。</target>
        </trans-unit>
        <trans-unit id="bea8cfcbc4eac41533c4914ce2c490623e21b837" translate="yes" xml:space="preserve">
          <source>It opens a popup window for the client authentication process. By default this widget relies on presence of &lt;a href=&quot;yii-authclient-collection&quot;&gt;yii\authclient\Collection&lt;/a&gt; among application components to get auth clients information.</source>
          <target state="translated">クライアント認証プロセスのポップアップウィンドウが開きます。デフォルトでは、このウィジェットは、アプリケーションコンポーネント間の&lt;a href=&quot;yii-authclient-collection&quot;&gt;yii \ authclient \ Collectionの&lt;/a&gt;存在に依存して、認証クライアント情報を取得します。</target>
        </trans-unit>
        <trans-unit id="44a35c0bac74c7f72ab524e62d8ac9b6e7ad3795" translate="yes" xml:space="preserve">
          <source>It passes value to the inner iterator.</source>
          <target state="translated">内側のイテレータに値を渡します。</target>
        </trans-unit>
        <trans-unit id="34b1daeb190d978303ab027d93fc6cd4037bdc5c" translate="yes" xml:space="preserve">
          <source>It populate the table with the data returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData（）&lt;/a&gt;によって返されたデータをテーブルに入力します。</target>
        </trans-unit>
        <trans-unit id="f131bff557d2143a7c13fe1c9968b87b68f3b69c" translate="yes" xml:space="preserve">
          <source>It provides features like &lt;a href=&quot;yii-widgets-baselistview#%24sorter-detail&quot;&gt;sorting&lt;/a&gt;, &lt;a href=&quot;yii-widgets-baselistview#%24pager-detail&quot;&gt;paging&lt;/a&gt; and also &lt;a href=&quot;yii-grid-gridview#%24filterModel-detail&quot;&gt;filtering&lt;/a&gt; the data.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-baselistview#%24sorter-detail&quot;&gt;ソート&lt;/a&gt;、&lt;a href=&quot;yii-widgets-baselistview#%24pager-detail&quot;&gt;ページング&lt;/a&gt;、データの&lt;a href=&quot;yii-grid-gridview#%24filterModel-detail&quot;&gt;フィルタリング&lt;/a&gt;などの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="7424318227eb48acdef562d28f805170e4b866a2" translate="yes" xml:space="preserve">
          <source>It provides features like sorting, paging and also filtering the data.</source>
          <target state="translated">それは、ソート、ページング、またデータをフィルタリングするような機能を提供します。</target>
        </trans-unit>
        <trans-unit id="d5dc687d54aac6a85ffccb90ae2203ba202b7609" translate="yes" xml:space="preserve">
          <source>It provides functions to convert date format patterns between different conventions.</source>
          <target state="translated">日付フォーマットのパターンを異なる規約間で変換する機能を提供します。</target>
        </trans-unit>
        <trans-unit id="6748c3e79ef95cc29bfcba1c70beae706418e4c9" translate="yes" xml:space="preserve">
          <source>It provides workarounds for improperly implemented functionalities of the MSSQL and DBLIB drivers.</source>
          <target state="translated">MSSQLおよびDBLIBドライバの機能が不適切に実装された場合の回避策を提供します。</target>
        </trans-unit>
        <trans-unit id="8b6f6ebbb61b8c66f95755d69161a146eeceb44c" translate="yes" xml:space="preserve">
          <source>It provides workarounds for improperly implemented functionalities of the SQLSRV driver.</source>
          <target state="translated">SQLSRVドライバの機能が不適切に実装されている場合の回避策を提供します。</target>
        </trans-unit>
        <trans-unit id="802bf4f719e3360a0082db55583b249fcdc55f49" translate="yes" xml:space="preserve">
          <source>It redirects method call to inner iterator.</source>
          <target state="translated">メソッドの呼び出しを内側のイテレータにリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="e580b09190a2c303b5402ad9188dcf56c0dd8b0a" translate="yes" xml:space="preserve">
          <source>It removes all behaviors because they are attached to the old object.</source>
          <target state="translated">古いオブジェクトにくっついているため、すべてのビヘイビアを削除します。</target>
        </trans-unit>
        <trans-unit id="1e24a38f99fe0f09182e9bee4c537ed048247773" translate="yes" xml:space="preserve">
          <source>It returns value from the inner iterator.</source>
          <target state="translated">内側のイテレータの値を返します。</target>
        </trans-unit>
        <trans-unit id="e3020b1d152d6059769014c428299a6e3c5b5c24" translate="yes" xml:space="preserve">
          <source>It should have the same signature as &lt;a href=&quot;yii-widgets-listview#%24beforeItem-detail&quot;&gt;$beforeItem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-listview#%24beforeItem-detail&quot;&gt;$ beforeItem&lt;/a&gt;と同じ署名が必要です。</target>
        </trans-unit>
        <trans-unit id="7595018fc143457ecb0d164e5c783edc9a45b5c6" translate="yes" xml:space="preserve">
          <source>It supports &lt;a href=&quot;yii-authclient-openid&quot;&gt;yii\authclient\OpenId&lt;/a&gt;, &lt;a href=&quot;yii-authclient-oauth1&quot;&gt;yii\authclient\OAuth1&lt;/a&gt; and &lt;a href=&quot;yii-authclient-oauth2&quot;&gt;yii\authclient\OAuth2&lt;/a&gt; client types.</source>
          <target state="translated">それはサポートしてい&lt;a href=&quot;yii-authclient-openid&quot;&gt;Yiiの\ authclient \ OpenIDで&lt;/a&gt;、&lt;a href=&quot;yii-authclient-oauth1&quot;&gt;Yiiの\ authclient \ OAuth1&lt;/a&gt;と&lt;a href=&quot;yii-authclient-oauth2&quot;&gt;のYii \ authclient \のOAuth2&lt;/a&gt;クライアントタイプを。</target>
        </trans-unit>
        <trans-unit id="51cb992866e9a16606be035789f3c2b5e635e986" translate="yes" xml:space="preserve">
          <source>It uses the PHP intl extension's &lt;a href=&quot;http://www.php.net/manual/en/class.messageformatter.php&quot;&gt;MessageFormatter&lt;/a&gt; and works around some issues. If PHP intl is not installed a fallback will be used that supports a subset of the ICU message format.</source>
          <target state="translated">PHP intl拡張の&lt;a href=&quot;http://www.php.net/manual/en/class.messageformatter.php&quot;&gt;MessageFormatter&lt;/a&gt;を使用し、いくつかの問題を回避します。PHP intlがインストールされていない場合は、ICUメッセージ形式のサブセットをサポートするフォールバックが使用されます。</target>
        </trans-unit>
        <trans-unit id="5c418f46b6898971cd81466eec272703dcdddc1d" translate="yes" xml:space="preserve">
          <source>It uses the PHP intl extension's &lt;a href=&quot;http://www.php.net/manual/en/messageformatter.parsemessage.php&quot;&gt;MessageFormatter::parse()&lt;/a&gt; and adds support for named arguments. Usage of this method requires PHP intl extension to be installed.</source>
          <target state="translated">PHP intl拡張の&lt;a href=&quot;http://www.php.net/manual/en/messageformatter.parsemessage.php&quot;&gt;MessageFormatter :: parse（）&lt;/a&gt;を使用し、名前付き引数のサポートを追加します。このメソッドを使用するには、PHP intl拡張機能をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="de7d84e952f5373c3277dbce4a728b3ddf6d8d40" translate="yes" xml:space="preserve">
          <source>It will allow you to theme &lt;code&gt;@app/modules/blog/views/comment/index.php&lt;/code&gt; into &lt;code&gt;@app/themes/basic/modules/blog/views/comment/index.php&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@app/modules/blog/views/comment/index.php&lt;/code&gt; を &lt;code&gt;@app/themes/basic/modules/blog/views/comment/index.php&lt;/code&gt; にテーマ化することができます。</target>
        </trans-unit>
        <trans-unit id="4a69f4ab14d39fb98d118848d66da79417698347" translate="yes" xml:space="preserve">
          <source>It will also try to convert non-CSS or JS files (e.g. LESS, Sass) into the corresponding CSS or JS files using &lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;asset converter&lt;/a&gt;.</source>
          <target state="translated">また、CSSやJS以外のファイル（LESS、Sassなど）を、&lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;アセットコンバーター&lt;/a&gt;を使用して対応するCSSまたはJSファイルに変換しようとします。</target>
        </trans-unit>
        <trans-unit id="c29732523a5be5f4a01c51f1ab8b28d6f577e7d9" translate="yes" xml:space="preserve">
          <source>It will join all columns into a string with comma as separators.</source>
          <target state="translated">すべての列をカンマで区切って文字列に結合します。</target>
        </trans-unit>
        <trans-unit id="1cacf9359d6cad637a6a34b4805a0a69023006b3" translate="yes" xml:space="preserve">
          <source>It will then check if the updated view file exists or not. If so, that file will be used to replace the original view file.</source>
          <target state="translated">そして、更新されたビューファイルが存在するかどうかをチェックします。存在する場合は、そのファイルが元のビューファイルを置き換えるために使用されます。</target>
        </trans-unit>
        <trans-unit id="22dba5bdedd78fa7de659a7ce12a85deea2dbdd5" translate="yes" xml:space="preserve">
          <source>It's a good practice to define meaningful constants for your controller in case you have more error code types.</source>
          <target state="translated">エラーコードタイプが増えた場合に備えて、コントローラに意味のある定数を定義しておくと良いでしょう。</target>
        </trans-unit>
        <trans-unit id="b71a537ef5bb5a2eaf3606015fdc78eb142da6d4" translate="yes" xml:space="preserve">
          <source>It's a one-time project that will no longer be worked on.</source>
          <target state="translated">一回限りのプロジェクトで、もう仕事にならない。</target>
        </trans-unit>
        <trans-unit id="9425ca1cca62ec8a8bcdc958d3c1bbd5887e2772" translate="yes" xml:space="preserve">
          <source>It's also possible to use key instead of password via &lt;a href=&quot;yii-base-security#encryptByKey()-detail&quot;&gt;yii\base\Security::encryptByKey()&lt;/a&gt; and &lt;a href=&quot;yii-base-security#decryptByKey()-detail&quot;&gt;yii\base\Security::decryptByKey()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-base-security#encryptByKey()-detail&quot;&gt;yii \ base \ Security :: encryptByKey（）&lt;/a&gt;および&lt;a href=&quot;yii-base-security#decryptByKey()-detail&quot;&gt;yii \ base \ Security :: decryptByKey（）&lt;/a&gt;を使用して、パスワードの代わりにキーを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="14d5c9fde290fe01df6f45234cdc30f9759137af" translate="yes" xml:space="preserve">
          <source>Item 1</source>
          <target state="translated">項目1</target>
        </trans-unit>
        <trans-unit id="18ced5c76db797e1292c85b44d21d36295e5a2f8" translate="yes" xml:space="preserve">
          <source>Item 2</source>
          <target state="translated">項目2</target>
        </trans-unit>
        <trans-unit id="e44739c3e353a3ae73c55984dd40ae4b03f08097" translate="yes" xml:space="preserve">
          <source>Item 3</source>
          <target state="translated">項目3</target>
        </trans-unit>
        <trans-unit id="ed8246a860cdb8b17508b2b2e298eec6cac7ab35" translate="yes" xml:space="preserve">
          <source>Item 4</source>
          <target state="translated">項目4</target>
        </trans-unit>
        <trans-unit id="c0fcc554ccff879f567ef032a1d01802ce78956a" translate="yes" xml:space="preserve">
          <source>Item index.</source>
          <target state="translated">アイテムインデックス。</target>
        </trans-unit>
        <trans-unit id="29e34590c00f9404b818d318193cb5de69513705" translate="yes" xml:space="preserve">
          <source>Item label.</source>
          <target state="translated">アイテムラベル。</target>
        </trans-unit>
        <trans-unit id="6bc5eec04878d10b41059c11a4cce09c74455c81" translate="yes" xml:space="preserve">
          <source>Iterates over &lt;a href=&quot;yii-web-urlrule#%24placeholders-detail&quot;&gt;$placeholders&lt;/a&gt; and checks whether each placeholder exists as a key in $matches array.</source>
          <target state="translated">&lt;a href=&quot;yii-web-urlrule#%24placeholders-detail&quot;&gt;$ placeholders&lt;/a&gt;を反復処理し、各プレースホルダーが$ matches配列のキーとして存在するかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="78f1b4e4c6d73e121256eefe6748ba446c8487ee" translate="yes" xml:space="preserve">
          <source>Iterates through specified rules and calls &lt;a href=&quot;yii-web-compositeurlrule#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt; for each of them.</source>
          <target state="translated">指定されたルールを反復処理し、ルールごとに&lt;a href=&quot;yii-web-compositeurlrule#createUrl()-detail&quot;&gt;createUrl（）&lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="954c8b41c673d8226e3e3467a1a8343177ec64d1" translate="yes" xml:space="preserve">
          <source>Iteration number</source>
          <target state="translated">イテレーション数</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="9403aa5efbdb22c2f1977f9b3d45b6c23b569ce4" translate="yes" xml:space="preserve">
          <source>Its main task is to toggle integrity check of the database during data loading. This is needed by other DB-related fixtures (e.g. &lt;a href=&quot;yii-test-activefixture&quot;&gt;yii\test\ActiveFixture&lt;/a&gt;) so that they can populate data into the database without triggering integrity check errors.</source>
          <target state="translated">その主なタスクは、データのロード中にデータベースの整合性チェックを切り替えることです。これは他のDB関連のフィクスチャ（例：&lt;a href=&quot;yii-test-activefixture&quot;&gt;yii \ test \ ActiveFixture&lt;/a&gt;）で必要であり、整合性チェックエラーをトリガーすることなくデータベースにデータを入力できます。</target>
        </trans-unit>
        <trans-unit id="5766bfd5841dee1b6f2aaf89bbb921f60e7d1b6f" translate="yes" xml:space="preserve">
          <source>JSON format</source>
          <target state="translated">JSON形式</target>
        </trans-unit>
        <trans-unit id="adf3b32b70ceb32a9085598f64127c92241a1e9f" translate="yes" xml:space="preserve">
          <source>JWS algorithms, which are allowed to be used.</source>
          <target state="translated">使用が認められているJWSアルゴリズム。</target>
        </trans-unit>
        <trans-unit id="0bdbf91316a853d735e420a1dafcace50da7151a" translate="yes" xml:space="preserve">
          <source>JWS algorithms, which are allowed to be used. These are used by &lt;code&gt;spomky-labs/jose&lt;/code&gt; library for JWS validation/decryption. Make sure &lt;code&gt;spomky-labs/jose&lt;/code&gt; supports the particular algorithm before adding it here.</source>
          <target state="translated">使用が許可されているJWSアルゴリズム。これらは、JWS検証/復号化のために &lt;code&gt;spomky-labs/jose&lt;/code&gt; ライブラリによって使用されます。ここに追加する前に、 &lt;code&gt;spomky-labs/jose&lt;/code&gt; が特定のアルゴリズムをサポートしていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="394dea453fe0f2d46e856dd2664100b7169fa2e6" translate="yes" xml:space="preserve">
          <source>JWS underlying data.</source>
          <target state="translated">JWSの基礎データ。</target>
        </trans-unit>
        <trans-unit id="48bc7c7e77cc67e67c2a92ccb875a96515be001f" translate="yes" xml:space="preserve">
          <source>JavaScript button itself generated by \yii\authclient\clients\yii\authclient\widgets\GooglePlusButton widget. If you are using \yii\authclient\clients\yii\authclient\widgets\AuthChoice it will appear automatically. Otherwise you need to add it into your page manually. You may customize its appearance using 'widget' key at &lt;a href=&quot;yii-authclient-baseclient#%24viewOptions-detail&quot;&gt;$viewOptions&lt;/a&gt;:</source>
          <target state="translated">\ yii \ authclient \ clients \ yii \ authclient \ widgets \ GooglePlusButtonウィジェットによって生成されるJavaScriptボタン自体。\ yii \ authclient \ clients \ yii \ authclient \ widgets \ AuthChoiceを使用している場合は、自動的に表示されます。それ以外の場合は、手動でページに追加する必要があります。&lt;a href=&quot;yii-authclient-baseclient#%24viewOptions-detail&quot;&gt;$ viewOptions&lt;/a&gt;で 'widget'キーを使用して外観をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="9ee87f77ff1cd9a798e5b0c75ba2d2de50ea237d" translate="yes" xml:space="preserve">
          <source>JavaScript file compressor.</source>
          <target state="translated">JavaScriptのファイル圧縮機能。</target>
        </trans-unit>
        <trans-unit id="40da65be9a7c8710e9aa40b96f54c02232a955ba" translate="yes" xml:space="preserve">
          <source>JavaScript file compressor. If a string, it is treated as shell command template, which should contain placeholders {from} - source file name - and {to} - output file name. Otherwise, it is treated as PHP callback, which should perform the compression.</source>
          <target state="translated">JavaScript ファイル圧縮ツールです。文字列の場合はシェルコマンドのテンプレートとして扱われ、プレースホルダ {from}-ソースファイル名-出力ファイル名 {to}を含む必要があります。それ以外の場合は PHP コールバックとして扱われ、圧縮を実行します。</target>
        </trans-unit>
        <trans-unit id="0d8f160a6c2fd9ddf6bf32b0a9d0699412d032dc" translate="yes" xml:space="preserve">
          <source>JavaScript files are combined, compressed and written to &lt;code&gt;js/all-{hash}.js&lt;/code&gt; where {hash} is replaced with the hash of the resulting file.</source>
          <target state="translated">JavaScriptファイルは結合され、圧縮されて &lt;code&gt;js/all-{hash}.js&lt;/code&gt; に書き込まれます。ここで、{hash}は結果のファイルのハッシュに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="37fc744b377e37e4d25b618eb94f2e5961da9223" translate="yes" xml:space="preserve">
          <source>JavaScript function name.</source>
          <target state="translated">JavaScriptの関数名です。</target>
        </trans-unit>
        <trans-unit id="45104ab0da2643be241e111b35b858fab612105e" translate="yes" xml:space="preserve">
          <source>Joining with Relations</source>
          <target state="translated">関係性のある方への参加</target>
        </trans-unit>
        <trans-unit id="fe79a8c2a70073c5f85a3dd5282c58ea806f0110" translate="yes" xml:space="preserve">
          <source>Joins with the specified relations.</source>
          <target state="translated">指定した関係で結合します。</target>
        </trans-unit>
        <trans-unit id="0a553bfa58667cdae81434070798b551c5c7b08b" translate="yes" xml:space="preserve">
          <source>JsExpression marks a string as a JavaScript expression.</source>
          <target state="translated">JsExpressionは、文字列をJavaScriptの式としてマークします。</target>
        </trans-unit>
        <trans-unit id="a39c80ac4ae6093a2cb99575bc52b72b361ab4dd" translate="yes" xml:space="preserve">
          <source>Json is a helper class providing JSON data encoding and decoding.</source>
          <target state="translated">JsonはJSONデータのエンコードとデコードを提供するヘルパークラスです。</target>
        </trans-unit>
        <trans-unit id="3137c3bdc4254e2d689f3bae4bc9ec23609e2b89" translate="yes" xml:space="preserve">
          <source>Json string or array of data to store</source>
          <target state="translated">保存するデータの Json 文字列または配列</target>
        </trans-unit>
        <trans-unit id="f1f4129b55aad72ca05992463d9fae98f805894d" translate="yes" xml:space="preserve">
          <source>JsonResponseFormatter formats the given data into a JSON or JSONP response content.</source>
          <target state="translated">JsonResponseFormatter は、与えられたデータを JSON あるいは JSONP レスポンスコンテンツにフォーマットします。</target>
        </trans-unit>
        <trans-unit id="efada65b775773e67d70408dadefb1568f30d3e9" translate="yes" xml:space="preserve">
          <source>Keep Yii CSRF protection enabled.</source>
          <target state="translated">Yii の CSRF 保護を有効にしておく。</target>
        </trans-unit>
        <trans-unit id="abca61e71b2fade3d232154e06c85efccc13232b" translate="yes" xml:space="preserve">
          <source>Keep in mind that customization made via &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; is applied at the creation of the asset bundle, e.g. at object constructor stage. Thus any adjustments made to the bundle object after that will override the mapping setup at &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; level. In particular: adjustments made inside &lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii\web\AssetBundle::init()&lt;/a&gt; method or over the registered bundle object will take precedence over &lt;code&gt;AssetManager&lt;/code&gt; configuration. Here are the examples, where mapping set via &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; makes no effect:</source>
          <target state="translated">&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt;を介して行われたカスタマイズは、アセットバンドルの作成時、たとえばオブジェクトコンストラクター段階で適用されることに注意してください。したがって、その後バンドルオブジェクトに対して行われた調整は、&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt;レベルでのマッピング設定を上書きします。特に、&lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii \ web \ AssetBundle :: init（）&lt;/a&gt;メソッド内または登録されたバンドルオブジェクトに対して行われた調整は、 &lt;code&gt;AssetManager&lt;/code&gt; 構成よりも優先されます。以下に例を示し&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;ます。yii\ web \ AssetManager :: $ bundles&lt;/a&gt;を介して設定されたマッピングは無効です。</target>
        </trans-unit>
        <trans-unit id="d310f486f71abe6bf48b2e365d77a015524fdf48" translate="yes" xml:space="preserve">
          <source>Keeps you focused on one thing at a time which results in improved planning and implementation.</source>
          <target state="translated">一度に一つのことに集中して、計画と実行の改善につながります。</target>
        </trans-unit>
        <trans-unit id="9a5a2bb480940ca6c7e9aefe683b69c88e51f3b6" translate="yes" xml:space="preserve">
          <source>Kept to match &lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii\db\QueryInterface&lt;/a&gt;, its value is ignored.</source>
          <target state="translated">&lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii \ db \ QueryInterface&lt;/a&gt;と一致するように保持され、その値は無視されます。</target>
        </trans-unit>
        <trans-unit id="1eeffa78fdad9a849e09f54683bacf7438ed48cb" translate="yes" xml:space="preserve">
          <source>Key derivation using standard algorithms: &lt;a href=&quot;yii-base-security#pbkdf2()-detail&quot;&gt;pbkdf2()&lt;/a&gt; and &lt;a href=&quot;yii-base-security#hkdf()-detail&quot;&gt;hkdf()&lt;/a&gt;</source>
          <target state="translated">標準アルゴリズムを使用した鍵の導出：&lt;a href=&quot;yii-base-security#pbkdf2()-detail&quot;&gt;pbkdf2（）&lt;/a&gt;および&lt;a href=&quot;yii-base-security#hkdf()-detail&quot;&gt;hkdf（）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eacd56ec60f535fbfc83f6a9a35278b0ec2b3b14" translate="yes" xml:space="preserve">
          <source>Key identifying the flash message type</source>
          <target state="translated">フラッシュメッセージのタイプを識別するキー</target>
        </trans-unit>
        <trans-unit id="e3948cf0b8bb28a87e036f7a59e208c3d5160050" translate="yes" xml:space="preserve">
          <source>Key in &lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$params&lt;/a&gt; array, which stores token key.</source>
          <target state="translated">トークンキーを格納する&lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$ params&lt;/a&gt;配列のキー。</target>
        </trans-unit>
        <trans-unit id="965d2014aceeff49347b18d3699fd60c662d6412" translate="yes" xml:space="preserve">
          <source>Key in &lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$params&lt;/a&gt; array, which stores token secret key.</source>
          <target state="translated">トークンの秘密鍵を格納する&lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$ params&lt;/a&gt;配列の鍵。</target>
        </trans-unit>
        <trans-unit id="572f0e0eb3891af729345868f4e3bc5502ab39a3" translate="yes" xml:space="preserve">
          <source>Key name of the array element</source>
          <target state="translated">配列要素のキー名</target>
        </trans-unit>
        <trans-unit id="228ea3a37fec3998b56612bb0b1b43383fdf01ee" translate="yes" xml:space="preserve">
          <source>Key name of the array element, an array of keys or property name of the object, or an anonymous function returning the value. The anonymous function signature should be: &lt;code&gt;function($array, $defaultValue)&lt;/code&gt;. The possibility to pass an array of keys is available since version 2.0.4.</source>
          <target state="translated">配列要素のキー名、キーの配列、オブジェクトのプロパティ名、または値を返す無名関数。匿名関数のシグネチャは &lt;code&gt;function($array, $defaultValue)&lt;/code&gt; ます。キーの配列を渡す可能性は、バージョン2.0.4以降で利用可能です。</target>
        </trans-unit>
        <trans-unit id="5a9e0f9669aaad5f3d4171b4572a9606fb11bb05" translate="yes" xml:space="preserve">
          <source>Key-value array of options to choose from</source>
          <target state="translated">選択可能なオプションのキー値配列</target>
        </trans-unit>
        <trans-unit id="9eec3d361dacbe41c0e70149bbca3539358acd8d" translate="yes" xml:space="preserve">
          <source>Keywords and statistics</source>
          <target state="translated">キーワードと統計</target>
        </trans-unit>
        <trans-unit id="d2b1b5b3f5b6446d9521318155583acc76ce31db" translate="yes" xml:space="preserve">
          <source>LEVEL_ERROR</source>
          <target state="translated">LEVEL_ERROR</target>
        </trans-unit>
        <trans-unit id="659d13d5307a068a64cf185be136b0b17490214a" translate="yes" xml:space="preserve">
          <source>LEVEL_INFO</source>
          <target state="translated">LEVEL_INFO</target>
        </trans-unit>
        <trans-unit id="a72936db7d36c8346805ea98d4f6f40726fa2061" translate="yes" xml:space="preserve">
          <source>LEVEL_PROFILE</source>
          <target state="translated">LEVEL_PROFILE</target>
        </trans-unit>
        <trans-unit id="eb98608d5086f9b5c4d50e67ed41388a834ed080" translate="yes" xml:space="preserve">
          <source>LEVEL_PROFILE_BEGIN</source>
          <target state="translated">LEVEL_PROFILE_BEGIN</target>
        </trans-unit>
        <trans-unit id="a2e7efcc224d4ab029fba6835603957ebffe77ed" translate="yes" xml:space="preserve">
          <source>LEVEL_PROFILE_END</source>
          <target state="translated">LEVEL_PROFILE_END</target>
        </trans-unit>
        <trans-unit id="322e32ed2759b3527609622ac419af89b0abb6d2" translate="yes" xml:space="preserve">
          <source>LEVEL_TRACE</source>
          <target state="translated">LEVEL_TRACE</target>
        </trans-unit>
        <trans-unit id="040ff5de31b9f372ed7c317fd1dda33aa88925ff" translate="yes" xml:space="preserve">
          <source>LEVEL_WARNING</source>
          <target state="translated">LEVEL_WARNING</target>
        </trans-unit>
        <trans-unit id="29bc302e46b9e3593b40478f9b0a81df7e77d119" translate="yes" xml:space="preserve">
          <source>LINK_FIRST</source>
          <target state="translated">LINK_FIRST</target>
        </trans-unit>
        <trans-unit id="e7dfdf12c1a6de7352d6ba432245c486f12cd86a" translate="yes" xml:space="preserve">
          <source>LINK_LAST</source>
          <target state="translated">LINK_LAST</target>
        </trans-unit>
        <trans-unit id="42ac3a5f5e93bc6de89e295520640bd3aa2feb04" translate="yes" xml:space="preserve">
          <source>LINK_NEXT</source>
          <target state="translated">LINK_NEXT</target>
        </trans-unit>
        <trans-unit id="b39d244a1226958f318d091f41ebab07b04ab5bb" translate="yes" xml:space="preserve">
          <source>LINK_PREV</source>
          <target state="translated">LINK_PREV</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="c5344369303c85be0908c150ac1a540b775f9039" translate="yes" xml:space="preserve">
          <source>Label text. It will NOT be HTML-encoded. Therefore you can pass in HTML code such as an image tag. If this is is coming from end users, you should &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt; it to prevent XSS attacks.</source>
          <target state="translated">テキストにラベルを付けます。HTMLエンコードされません。したがって、イメージタグなどのHTMLコードを渡すことができます。これがエンドユーザーからのものである場合は、それを&lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode（）&lt;/a&gt;してXSS攻撃を防ぐ必要があります。</target>
        </trans-unit>
        <trans-unit id="a738fcb18716cbb58c41215f91444ae9df063b24" translate="yes" xml:space="preserve">
          <source>Label to be displayed in the &lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;header cell&lt;/a&gt; and also to be used as the sorting link label when sorting is enabled for this column.</source>
          <target state="translated">&lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;ヘッダーセルに&lt;/a&gt;表示されるラベル、およびこの列で並べ替えが有効な場合に並べ替えリンクのラベルとして使用されるラベル。</target>
        </trans-unit>
        <trans-unit id="3332875152d1f6e56c2b0f6d7ced5d53b540a47a" translate="yes" xml:space="preserve">
          <source>Label to be displayed in the &lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;header cell&lt;/a&gt; and also to be used as the sorting link label when sorting is enabled for this column. If it is not set and the models provided by the GridViews data provider are instances of &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;, the label will be determined using &lt;a href=&quot;yii-db-baseactiverecord#getAttributeLabel()-detail&quot;&gt;yii\db\ActiveRecord::getAttributeLabel()&lt;/a&gt;. Otherwise &lt;a href=&quot;yii-helpers-baseinflector#camel2words()-detail&quot;&gt;yii\helpers\Inflector::camel2words()&lt;/a&gt; will be used to get a label.</source>
          <target state="translated">&lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;ヘッダーセルに&lt;/a&gt;表示されるラベル、およびこの列で並べ替えが有効な場合に並べ替えリンクのラベルとして使用されるラベル。設定されておらず、GridViewsデータプロバイダーによって提供されるモデルが&lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecordの&lt;/a&gt;インスタンスである場合、ラベルは&lt;a href=&quot;yii-db-baseactiverecord#getAttributeLabel()-detail&quot;&gt;yii \ db \ ActiveRecord :: getAttributeLabel（）&lt;/a&gt;を使用して決定されます。それ以外の場合は、&lt;a href=&quot;yii-helpers-baseinflector#camel2words()-detail&quot;&gt;yii \ helpers \ Inflector :: camel2words（）&lt;/a&gt;を使用してラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="797385a38b7c23c4f8d9af4e72c95ca916ebef45" translate="yes" xml:space="preserve">
          <source>Labels and Errors</source>
          <target state="translated">ラベルとエラー</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="ff14617dcce78e689190623094ddf0b27d032404" translate="yes" xml:space="preserve">
          <source>Language to register translation file for</source>
          <target state="translated">翻訳ファイルを登録する言語</target>
        </trans-unit>
        <trans-unit id="809ffb8821d48d8016d76dc7b28ffe5e9e9fd2b0" translate="yes" xml:space="preserve">
          <source>Language to use when generating fixtures data.</source>
          <target state="translated">フィクスチャデータを生成する際に使用する言語。</target>
        </trans-unit>
        <trans-unit id="218ad5a5d35ce65484235ded24fe59527a857c58" translate="yes" xml:space="preserve">
          <source>Last argument is PHP sort flag that could take the same values as the ones passed to PHP &lt;a href=&quot;http://php.net/manual/en/function.sort.php&quot;&gt;sort()&lt;/a&gt;.</source>
          <target state="translated">最後の引数はPHPのsortフラグで、PHPの&lt;a href=&quot;http://php.net/manual/en/function.sort.php&quot;&gt;sort（）に&lt;/a&gt;渡されるものと同じ値を取ることができます。</target>
        </trans-unit>
        <trans-unit id="9d89f36b5bb4fe24ac35cf180d0a95954f3a3212" translate="yes" xml:space="preserve">
          <source>Last inserted ID value.</source>
          <target state="translated">最後に挿入されたIDの値。</target>
        </trans-unit>
        <trans-unit id="4312b9cdc22a0d8cf25ab213c9d034cee9ce16ee" translate="yes" xml:space="preserve">
          <source>Last-Modified</source>
          <target state="translated">Last-Modified</target>
        </trans-unit>
        <trans-unit id="d85f400bc21b862742e07779e4d34b5a43f231ee" translate="yes" xml:space="preserve">
          <source>Last-Modified Header</source>
          <target state="translated">最終更新されたヘッダー</target>
        </trans-unit>
        <trans-unit id="39353b2a101d4b28790e11da6d758cfa0cdeb81b" translate="yes" xml:space="preserve">
          <source>Later if you decide to change the thumbnail size, you only need to modify it in the application configuration; you don't need to touch any dependent code.</source>
          <target state="translated">後でサムネイルのサイズを変更する場合は、アプリケーションの設定で変更するだけです。</target>
        </trans-unit>
        <trans-unit id="7bda8fc960e092db98f8703723b250cddb1296fe" translate="yes" xml:space="preserve">
          <source>Layout view name or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;. If false, no layout will be applied.</source>
          <target state="translated">レイアウトビュー名または&lt;a href=&quot;guide-concept-aliases&quot;&gt;パスエイリアス&lt;/a&gt;。falseの場合、レイアウトは適用されません。</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="6b2a6fb47bfc0655afde70e1af2fdc52c76b1680" translate="yes" xml:space="preserve">
          <source>Layouts are a special type of views that represent the common parts of multiple views. For example, the pages for most Web applications share the same page header and footer. While you can repeat the same page header and footer in every view, a better way is to do this once in a layout and embed the rendering result of a content view at an appropriate place in the layout.</source>
          <target state="translated">レイアウトは、複数のビューの共通部分を表現するビューの特別なタイプです。例えば、ほとんどのWebアプリケーションのページは、同じページヘッダーとフッターを共有しています。すべてのビューで同じページヘッダーとフッターを繰り返すこともできますが、より良い方法は、レイアウト内で一度これを行い、コンテンツビューのレンダリング結果をレイアウト内の適切な場所に埋め込むことです。</target>
        </trans-unit>
        <trans-unit id="cd9fa8949a528c77e40f0fcf701086c4c2abe613" translate="yes" xml:space="preserve">
          <source>Lazy Loading and Eager Loading</source>
          <target state="translated">怠惰なローディングと熱心なローディング</target>
        </trans-unit>
        <trans-unit id="231cc2f077a23c082f774f5b05c49ed128af6ed2" translate="yes" xml:space="preserve">
          <source>Lazy loading is very convenient to use. However, it may suffer from a performance issue when you need to access the same relation property of multiple Active Record instances. Consider the following code example. How many SQL statements will be executed?</source>
          <target state="translated">遅延読み込みは非常に便利に使えます。しかし、複数のActive Recordインスタンスの同じリレーションプロパティにアクセスする必要がある場合、パフォーマンスの問題に悩まされることがあります。次のコード例を考えてみましょう。何個のSQL文が実行されるでしょうか?</target>
        </trans-unit>
        <trans-unit id="4afd149dcc08248cc4b4d3d72d4c42502e166254" translate="yes" xml:space="preserve">
          <source>Length for character types. This parameter is available since version 2.0.4.</source>
          <target state="translated">文字タイプの長さ。このパラメータはバージョン 2.0.4 以降で使用可能です。</target>
        </trans-unit>
        <trans-unit id="d3a2a067efb54eb5864893e7d51bbad1e563829c" translate="yes" xml:space="preserve">
          <source>Length of the data type</source>
          <target state="translated">データ型の長さ</target>
        </trans-unit>
        <trans-unit id="b757d3a9d080c4d44178dda4972fffb8c745b11c" translate="yes" xml:space="preserve">
          <source>Length of the output key in bytes. If 0, the output key is the length of the hash algorithm output.</source>
          <target state="translated">出力キーの長さをバイト単位で指定します。0の場合、出力キーはハッシュアルゴリズムの出力の長さになります。</target>
        </trans-unit>
        <trans-unit id="a6898ed257f17b315468150764d7ec6839eeee3c" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;$length&lt;/a&gt;.</source>
          <target state="translated">列の長さまたは精度。&lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;$ lengthを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="797bf1ffea40b9a1b9878306ce6dde8b7c67ad4a" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">列の長さまたは精度。&lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ ColumnSchemaBuilder :: $ lengthを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="835c5440c9d24f5ee57c0ff9f04ed20c76e24933" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\cubrid\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">列の長さまたは精度。&lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ cubrid \ ColumnSchemaBuilder :: $ lengthを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ddd7fbcf7caabfa012a3cd9a0e8a66723a8c5b21" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\mysql\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">列の長さまたは精度。&lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ mysql \ ColumnSchemaBuilder :: $ lengthを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4c558a3ab4ab5bb80daa2e9ff2fb5e2acbfa86f5" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\oci\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">列の長さまたは精度。&lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ oci \ ColumnSchemaBuilder :: $ lengthを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a7cdeddf2735ecbac1e196480e2de30811f85be3" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\sqlite\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">列の長さまたは精度。&lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ sqlite \ ColumnSchemaBuilder :: $ lengthを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="33b931e15d1b897ad63eb06842e636934b9dc9b6" translate="yes" xml:space="preserve">
          <source>Let the translators translate messages and store them in the message source(s).</source>
          <target state="translated">翻訳者がメッセージを翻訳し、メッセージソースに保存します。</target>
        </trans-unit>
        <trans-unit id="b9dda8dd777500112d0a3d6b488e1901110b75ba" translate="yes" xml:space="preserve">
          <source>Let's modify our example:</source>
          <target state="translated">例を修正してみましょう。</target>
        </trans-unit>
        <trans-unit id="ce7f8511a04f764e4ba9ea54216c405bc0e5cf4e" translate="yes" xml:space="preserve">
          <source>Let's say we need to check if the family income is enough for children. We can create inline validator &lt;code&gt;validateChildrenFunds&lt;/code&gt; for that which will run only when &lt;code&gt;childrenCount&lt;/code&gt; is more than 0.</source>
          <target state="translated">家族の収入が子供たちにとって十分であるかどうかをチェックする必要があるとしましょう。 &lt;code&gt;childrenCount&lt;/code&gt; が0より大きい場合にのみ実行されるインラインバリデータ &lt;code&gt;validateChildrenFunds&lt;/code&gt; を作成できます。</target>
        </trans-unit>
        <trans-unit id="f57406887eddf15717b6e8357580a6a092289d65" translate="yes" xml:space="preserve">
          <source>Let's start with the controller action:</source>
          <target state="translated">まずはコントローラーのアクションから見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="09f9976967e26045514aebbc88cac3cb535095c4" translate="yes" xml:space="preserve">
          <source>Let's use an example to further explain the above approach.</source>
          <target state="translated">上記の考え方をさらに説明するために、例を用いて説明しましょう。</target>
        </trans-unit>
        <trans-unit id="0496e84a828182064fc0adcd88efceb527d84020" translate="yes" xml:space="preserve">
          <source>Let's use some examples to illustrate how named parameters work. Assume we have declared the following three URL rules:</source>
          <target state="translated">名前付きパラメータがどのように動作するかを説明するために、いくつかの例を使用してみましょう。以下の3つのURLルールを宣言したとします。</target>
        </trans-unit>
        <trans-unit id="d5be32a05365447b9dc9613fb840f1e533d53ba2" translate="yes" xml:space="preserve">
          <source>Level filter and category filter are combinatorial, i.e., only messages satisfying both filter conditions will be handled. Additionally, you may specify &lt;a href=&quot;yii-log-target#%24except-detail&quot;&gt;$except&lt;/a&gt; to exclude messages of certain categories.</source>
          <target state="translated">レベルフィルターとカテゴリーフィルターは組み合わせです。つまり、両方のフィルター条件を満たすメッセージのみが処理されます。さらに、特定のカテゴリのメッセージを除外するために&lt;a href=&quot;yii-log-target#%24except-detail&quot;&gt;$ except&lt;/a&gt;を指定できます。</target>
        </trans-unit>
        <trans-unit id="b8784441607e9ae1e4a0d363f27f45028b927794" translate="yes" xml:space="preserve">
          <source>Licensed under the three clause BSD license.</source>
          <target state="translated">三節BSDライセンスでライセンスされています。</target>
        </trans-unit>
        <trans-unit id="91a0dc86d2f4bb13716169ba8cd98e33cccfe26c" translate="yes" xml:space="preserve">
          <source>Lighttpd v1.4: &lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/X-LIGHTTPD-send-file&quot;&gt;X-LIGHTTPD-send-file&lt;/a&gt;</source>
          <target state="translated">Lighttpd v1.4：&lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/X-LIGHTTPD-send-file&quot;&gt;X-LIGHTTPD-send-file&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2dceb54584b72164cfe0a96e11cc226e13c0ca1" translate="yes" xml:space="preserve">
          <source>Lighttpd v1.5: &lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/X-LIGHTTPD-send-file&quot;&gt;X-Sendfile&lt;/a&gt;</source>
          <target state="translated">Lighttpd v1.5：&lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/X-LIGHTTPD-send-file&quot;&gt;X-Sendfile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="482884c11d536f0dab53357909c0c907fbd842ac" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#registering-meta-tags&quot;&gt;meta tags&lt;/a&gt;, link tags are useful in many cases, such as customizing favicon, pointing to RSS feed or delegating OpenID to another server. You can work with link tags in the similar way as meta tags by using &lt;a href=&quot;yii-web-view#registerLinkTag()-detail&quot;&gt;yii\web\View::registerLinkTag()&lt;/a&gt;. For example, in a content view, you can register a link tag like follows,</source>
          <target state="translated">&lt;a href=&quot;#registering-meta-tags&quot;&gt;メタタグ&lt;/a&gt;と同様に、リンクタグは、ファビコンのカスタマイズ、RSSフィードのポイント、OpenIDの別のサーバーへの委任など、多くの場合に役立ちます。&lt;a href=&quot;yii-web-view#registerLinkTag()-detail&quot;&gt;yii \ web \ View :: registerLinkTag（）&lt;/a&gt;を使用すると、メタタグと同様にリンクタグを操作できます。たとえば、コンテンツビューでは、次のようにリンクタグを登録できます。</target>
        </trans-unit>
        <trans-unit id="2337907c5bba5b9e3ff0576a7608802b34561427" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;guide-caching-data&quot;&gt;data caching&lt;/a&gt;, a unique &lt;code&gt;$id&lt;/code&gt; is needed to identify a content cache.</source>
          <target state="translated">&lt;a href=&quot;guide-caching-data&quot;&gt;データキャッシュ&lt;/a&gt;と同様に、コンテンツキャッシュを識別するには一意の &lt;code&gt;$id&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="dae05612b3de910ef5e39063047988c22759df1a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;guide-caching-data#cache-dependencies&quot;&gt;data caching&lt;/a&gt;, content fragment being cached can also have dependencies. For example, the content of a post being displayed depends on whether or not the post is modified.</source>
          <target state="translated">&lt;a href=&quot;guide-caching-data#cache-dependencies&quot;&gt;データキャッシング&lt;/a&gt;と同様に、キャッシュされているコンテンツフラグメントにも依存関係がある場合があります。たとえば、表示されている投稿の内容は、投稿が変更されているかどうかによって異なります。</target>
        </trans-unit>
        <trans-unit id="cc03393f986360d65cf27f07982c09182f8930f4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;guide-runtime-requests&quot;&gt;requests&lt;/a&gt; and &lt;a href=&quot;guide-runtime-responses&quot;&gt;responses&lt;/a&gt;, you can get access to sessions via the &lt;code&gt;session&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; which is an instance of &lt;a href=&quot;yii-web-session&quot;&gt;yii\web\Session&lt;/a&gt;, by default.</source>
          <target state="translated">&lt;a href=&quot;guide-runtime-requests&quot;&gt;リクエスト&lt;/a&gt;や&lt;a href=&quot;guide-runtime-responses&quot;&gt;レスポンス&lt;/a&gt;と同様に、デフォルトでは&lt;a href=&quot;yii-web-session&quot;&gt;yii \ web \ Sessionの&lt;/a&gt;インスタンスである &lt;code&gt;session&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;アプリケーションコンポーネント&lt;/a&gt;を介してセッションにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="d979d2f6074ce4ff67f39867cd18ba940210aa0b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt; and &lt;a href=&quot;guide-structure-models&quot;&gt;models&lt;/a&gt;, there are conventions to organize views.</source>
          <target state="translated">&lt;a href=&quot;guide-structure-controllers&quot;&gt;コントローラ&lt;/a&gt;や&lt;a href=&quot;guide-structure-models&quot;&gt;モデル&lt;/a&gt;と同様に、ビューを整理するための規則があります。</target>
        </trans-unit>
        <trans-unit id="c1b6da1a8de29c6581cf1d21c54c38f071954f29" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt;, you can join with one or multiple relations; you may customize the relation queries on-the-fly; you may join with nested relations; and you may mix the use of &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; and &lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;joinWith()&lt;/a&gt;. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with（）&lt;/a&gt;と同様に、1つまたは複数のリレーションと結合できます。関係クエリをオンザフライでカスタマイズできます。ネストされた関係で結合できます。また、&lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with（）&lt;/a&gt;と&lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;joinWith（）&lt;/a&gt;の使用を混在させることもできます。例えば、</target>
        </trans-unit>
        <trans-unit id="94c94f83017eb3cbdaf2f4519fd53333e57bed8d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere()&lt;/a&gt; and &lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere()&lt;/a&gt;, you can use &lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere()&lt;/a&gt; and &lt;a href=&quot;yii-db-querytrait#orFilterWhere()-detail&quot;&gt;orFilterWhere()&lt;/a&gt; to append additional filter conditions to the existing one.</source>
          <target state="translated">同様&lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere（）&lt;/a&gt;と&lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere（）&lt;/a&gt;は、使用することができます&lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere（）&lt;/a&gt;と&lt;a href=&quot;yii-db-querytrait#orFilterWhere()-detail&quot;&gt;orFilterWhere（）を&lt;/a&gt;既存のものに追加のフィルタ条件を追加します。</target>
        </trans-unit>
        <trans-unit id="ef662e1b5e1beb2e90349f34328e9e70576fc69e" translate="yes" xml:space="preserve">
          <source>Like accessing controllers in an application, &lt;a href=&quot;guide-structure-controllers#routes&quot;&gt;routes&lt;/a&gt; are used to address controllers in a module. A route for a controller within a module must begin with the module ID followed by the &lt;a href=&quot;guide-structure-controllers#controller-ids&quot;&gt;controller ID&lt;/a&gt; and &lt;a href=&quot;structure-controllers.md#action-ids&quot;&gt;action ID&lt;/a&gt;. For example, if an application uses a module named &lt;code&gt;forum&lt;/code&gt;, then the route &lt;code&gt;forum/post/index&lt;/code&gt; would represent the &lt;code&gt;index&lt;/code&gt; action of the &lt;code&gt;post&lt;/code&gt; controller in the module. If the route only contains the module ID, then the &lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;yii\base\Module::$defaultRoute&lt;/a&gt; property, which defaults to &lt;code&gt;default&lt;/code&gt;, will determine which controller/action should be used. This means a route &lt;code&gt;forum&lt;/code&gt; would represent the &lt;code&gt;default&lt;/code&gt; controller in the &lt;code&gt;forum&lt;/code&gt; module.</source>
          <target state="translated">アプリケーション内のコントローラーへのアクセスと同様に、&lt;a href=&quot;guide-structure-controllers#routes&quot;&gt;ルート&lt;/a&gt;はモジュール内のコントローラーをアドレス指定するために使用されます。モジュール内のコントローラーのルートは、モジュールIDで始まり、その後に&lt;a href=&quot;guide-structure-controllers#controller-ids&quot;&gt;コントローラーID&lt;/a&gt;と&lt;a href=&quot;structure-controllers.md#action-ids&quot;&gt;アクションIDが&lt;/a&gt;続く必要があります。たとえば、アプリケーションが &lt;code&gt;forum&lt;/code&gt; という名前のモジュールを使用する場合、ルート &lt;code&gt;forum/post/index&lt;/code&gt; はモジュール内の &lt;code&gt;post&lt;/code&gt; コントローラーの &lt;code&gt;index&lt;/code&gt; アクションを表します。ルートにモジュールIDのみが含まれる場合、デフォルトで &lt;code&gt;default&lt;/code&gt; に設定されている&lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;yii \ base \ Module :: $ defaultRoute&lt;/a&gt;プロパティが、使用するコントローラー/アクションを決定します。これはルート &lt;code&gt;forum&lt;/code&gt; 意味します &lt;code&gt;forum&lt;/code&gt; モジュールの &lt;code&gt;default&lt;/code&gt; コントローラを表します。</target>
        </trans-unit>
        <trans-unit id="fe5373551bdb5d80f2496cb6e802026b7a419bf6" translate="yes" xml:space="preserve">
          <source>Like browser redirection, file sending is another feature that relies on specific HTTP headers. Yii provides a set of methods to support various file sending needs. They all have built-in support for the HTTP range header.</source>
          <target state="translated">ブラウザのリダイレクトと同様に、ファイル送信も特定の HTTP ヘッダに依存する機能です。Yii は様々なファイル送信のニーズに対応するためのメソッドを提供しています。これらのメソッドはすべて HTTP の範囲ヘッダをビルトインでサポートしています。</target>
        </trans-unit>
        <trans-unit id="65804e0016ba3e0c6503a7d96dc18a760df2c778" translate="yes" xml:space="preserve">
          <source>Like normal &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;, application configurations specify how to initialize properties of application objects. Because application configurations are often very complex, they usually are kept in &lt;a href=&quot;guide-concept-configurations#configuration-files&quot;&gt;configuration files&lt;/a&gt;, like the &lt;code&gt;web.php&lt;/code&gt; file in the above example.</source>
          <target state="translated">通常の&lt;a href=&quot;guide-concept-configurations&quot;&gt;構成&lt;/a&gt;と同様に、アプリケーション構成は、アプリケーションオブジェクトのプロパティを初期化する方法を指定します。アプリケーションの構成は非常に複雑なことが多いため、通常、上記の例の &lt;code&gt;web.php&lt;/code&gt; ファイルのように&lt;a href=&quot;guide-concept-configurations#configuration-files&quot;&gt;構成ファイル&lt;/a&gt;に保存されます。</target>
        </trans-unit>
        <trans-unit id="7cf89d3c1ef52311cdd7408cf24ee707b624de2f" translate="yes" xml:space="preserve">
          <source>Like normal &lt;a href=&quot;guide-structure-models&quot;&gt;models&lt;/a&gt;, Active Record instances also enjoy the &lt;a href=&quot;guide-structure-models#massive-assignment&quot;&gt;massive assignment feature&lt;/a&gt;. Using this feature, you can assign values to multiple attributes of an Active Record instance in a single PHP statement, like shown below. Do remember that only &lt;a href=&quot;guide-structure-models#safe-attributes&quot;&gt;safe attributes&lt;/a&gt; can be massively assigned, though.</source>
          <target state="translated">通常の&lt;a href=&quot;guide-structure-models&quot;&gt;モデル&lt;/a&gt;と同様に、Active Recordインスタンスも&lt;a href=&quot;guide-structure-models#massive-assignment&quot;&gt;大規模な割り当て機能を利用でき&lt;/a&gt;ます。この機能を使用すると、以下に示すように、単一のPHPステートメントでActive Recordインスタンスの複数の属性に値を割り当てることができます。ただし、大量に割り当てることができるのは&lt;a href=&quot;guide-structure-models#safe-attributes&quot;&gt;安全な属性&lt;/a&gt;のみであることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="a2bc4dcfcf66746759e460440884ea203327d5d3" translate="yes" xml:space="preserve">
          <source>Like other data providers, SqlDataProvider also supports sorting and pagination. It does so by modifying the given &lt;a href=&quot;yii-data-sqldataprovider#%24sql-detail&quot;&gt;$sql&lt;/a&gt; statement with &quot;ORDER BY&quot; and &quot;LIMIT&quot; clauses. You may configure the &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;$sort&lt;/a&gt; and &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;$pagination&lt;/a&gt; properties to customize sorting and pagination behaviors.</source>
          <target state="translated">他のデータプロバイダーと同様に、SqlDataProviderも並べ替えとページ付けをサポートしています。これは、指定された&lt;a href=&quot;yii-data-sqldataprovider#%24sql-detail&quot;&gt;$ sql&lt;/a&gt;ステートメントを &quot;ORDER BY&quot;および &quot;LIMIT&quot;句で変更することによって行われます。&lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;$ sort&lt;/a&gt;プロパティと&lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;$ pagination&lt;/a&gt;プロパティを構成して、並べ替えとページネーションの動作をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="9338779c08933a376067cbdeb6d3e58d970d4673" translate="yes" xml:space="preserve">
          <source>Like regular session data, you can store arbitrary data as flash data.</source>
          <target state="translated">通常のセッションデータと同様に、任意のデータをフラッシュデータとして保存することができます。</target>
        </trans-unit>
        <trans-unit id="71e126d0d7c3f09b4e0b83582f3862361b467a8c" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#language&quot;&gt;language&lt;/a&gt; property, you should configure this property in terms of an &lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF language tag&lt;/a&gt;. For example, &lt;code&gt;en&lt;/code&gt; stands for English, while &lt;code&gt;en-US&lt;/code&gt; stands for English (United States).</source>
          <target state="translated">&lt;a href=&quot;#language&quot;&gt;言語&lt;/a&gt;プロパティと同様に、このプロパティは&lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF言語タグ&lt;/a&gt;で構成する必要があります。たとえば、 &lt;code&gt;en&lt;/code&gt; は英語を表し、 &lt;code&gt;en-US&lt;/code&gt; は英語（米国）を表します。</target>
        </trans-unit>
        <trans-unit id="628670184009c73fd7b4f2706c21acfc8d32e72d" translate="yes" xml:space="preserve">
          <source>Like working with plain text inputs, to upload a single file you would create a model class and use an attribute of the model to keep the uploaded file instance. You should also declare a validation rule to validate the file upload. For example,</source>
          <target state="translated">プレーンテキスト入力を扱うように、単一のファイルをアップロードするには、モデルクラスを作成し、アップロードされたファイルのインスタンスを保持するためにモデルの属性を使用します。また、ファイルのアップロードを検証するための検証ルールを宣言する必要があります。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="f013cda76513264cfa583f0ca11bbe304d7f3a0e" translate="yes" xml:space="preserve">
          <source>Limitations of batch query in MySQL</source>
          <target state="translated">MySQLでのバッチクエリの制限</target>
        </trans-unit>
        <trans-unit id="7566f85bc7398a183c295a555beb9cffb0fa5ca6" translate="yes" xml:space="preserve">
          <source>Link HTML options.</source>
          <target state="translated">HTMLオプションをリンクします。</target>
        </trans-unit>
        <trans-unit id="0eaa4a7f34a5354401866258f3b38e3115f942d3" translate="yes" xml:space="preserve">
          <source>Link body. It will NOT be HTML-encoded. Therefore you can pass in HTML code such as an image tag. If this is coming from end users, you should consider &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt; it to prevent XSS attacks.</source>
          <target state="translated">リンク本文。HTMLエンコードされません。したがって、イメージタグなどのHTMLコードを渡すことができます。これがエンドユーザーからのものである場合は、XSS攻撃を防ぐために、&lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode（）&lt;/a&gt;を検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="1d2708f91272830e257be97266a06389c3e80d15" translate="yes" xml:space="preserve">
          <source>Link represents a link object as defined in &lt;a href=&quot;https://tools.ietf.org/html/draft-kelly-json-hal-03&quot;&gt;JSON Hypermedia API Language&lt;/a&gt;.</source>
          <target state="translated">Linkは、&lt;a href=&quot;https://tools.ietf.org/html/draft-kelly-json-hal-03&quot;&gt;JSON Hypermedia API Languageで&lt;/a&gt;定義されているリンクオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="32432a5d1fec70c525588e3aedb7e461abf59715" translate="yes" xml:space="preserve">
          <source>Link text, if not set - default value will be generated.</source>
          <target state="translated">リンクテキスト、設定されていない場合はデフォルト値が生成されます。</target>
        </trans-unit>
        <trans-unit id="2cb68fb93681c3eb52e4447dbd6af16744b1a6a7" translate="yes" xml:space="preserve">
          <source>LinkPager displays a list of hyperlinks that lead to different pages of target.</source>
          <target state="translated">リンクページャーは、ターゲットの異なるページにつながるハイパーリンクのリストを表示します。</target>
        </trans-unit>
        <trans-unit id="9f5dde2fe3a5b1bff3251f5d9639b0c4de9d7fcb" translate="yes" xml:space="preserve">
          <source>LinkPager works with a &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; object which specifies the total number of pages and the current page number.</source>
          <target state="translated">LinkPagerは、&lt;a href=&quot;yii-data-pagination&quot;&gt;ページ&lt;/a&gt;の総数と現在のページ番号を指定するyii \ data \ Paginationオブジェクトで動作します。</target>
        </trans-unit>
        <trans-unit id="95dfacf07c3b56e60b62ce5bd4ca9c9b1a1b4dcb" translate="yes" xml:space="preserve">
          <source>LinkSorter renders a list of sort links for the given sort definition.</source>
          <target state="translated">LinkSorterは、与えられたソート定義のためのソートリンクのリストを表示します。</target>
        </trans-unit>
        <trans-unit id="48bdaaa6866e1404161de03a8fd9c4a7de6e2104" translate="yes" xml:space="preserve">
          <source>LinkSorter will generate a hyperlink for every attribute declared in &lt;a href=&quot;yii-widgets-linksorter#%24sort-detail&quot;&gt;$sort&lt;/a&gt;.</source>
          <target state="translated">LinkSorterは、&lt;a href=&quot;yii-widgets-linksorter#%24sort-detail&quot;&gt;$ sortで&lt;/a&gt;宣言されたすべての属性のハイパーリンクを生成します。</target>
        </trans-unit>
        <trans-unit id="1abcf3efac2961bd6ee8a5da07cd75ac321766d6" translate="yes" xml:space="preserve">
          <source>Linkable is the interface that should be implemented by classes that typically represent locatable resources.</source>
          <target state="translated">Linkable は、一般的にロケータブルなリソースを表すクラスが実装すべきインタフェースです。</target>
        </trans-unit>
        <trans-unit id="5e253f97052f961c78cb839ac5145fcfa7b8f188" translate="yes" xml:space="preserve">
          <source>Linkified with HTML type/class name.</source>
          <target state="translated">HTMLの型・クラス名とリンクしています。</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="648024d2b05620106a8c9984529a47346df6045c" translate="yes" xml:space="preserve">
          <source>List all available controllers and actions in machine readable format.</source>
          <target state="translated">使用可能なすべてのコントローラとアクションを機械読み取り可能な形式でリストアップします。</target>
        </trans-unit>
        <trans-unit id="d4ef3ef4566f01fa81b7ad45415b207d83d0f662" translate="yes" xml:space="preserve">
          <source>List all available options for the $action in machine readable format.</source>
          <target state="translated">action で利用可能なすべてのオプションを、機械読み取り可能な形式でリストアップします。</target>
        </trans-unit>
        <trans-unit id="34dab8478695722f1cfea55a712d89281ba3253b" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii\i18n\MessageSource&lt;/a&gt; configurations or objects.</source>
          <target state="translated">&lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii \ i18n \ MessageSource&lt;/a&gt;構成またはオブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="3824a565b6d589fa09f737fec7b052f864f57e04" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii\i18n\MessageSource&lt;/a&gt; configurations or objects. The array keys are message category patterns, and the array values are the corresponding &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii\i18n\MessageSource&lt;/a&gt; objects or the configurations for creating the &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii\i18n\MessageSource&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii \ i18n \ MessageSource&lt;/a&gt;構成またはオブジェクトのリスト。配列のキーは、メッセージカテゴリのパターンであり、配列の値は、対応している&lt;a href=&quot;yii-i18n-messagesource&quot;&gt;のYii \ I18N \ MessageSource&lt;/a&gt;作成するためのオブジェクト又は構成&lt;a href=&quot;yii-i18n-messagesource&quot;&gt;のYii \ I18N \ MessageSource&lt;/a&gt;オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="3f8f051447597b283c71b4d9d7fdb2a3ba8c2304" translate="yes" xml:space="preserve">
          <source>List of CSS files that this bundle contains.</source>
          <target state="translated">このバンドルに含まれるCSSファイルの一覧です。</target>
        </trans-unit>
        <trans-unit id="943f4415ff4513c612a8ad38e00edadda2c57efc" translate="yes" xml:space="preserve">
          <source>List of CSS files that this bundle contains. Each CSS file can be specified in one of the three formats as explained in &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;$js&lt;/a&gt;.</source>
          <target state="translated">このバンドルに含まれるCSSファイルのリスト。各CSSファイルは、&lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;$ jsで&lt;/a&gt;説明されている3つの形式のいずれかで指定できます。</target>
        </trans-unit>
        <trans-unit id="f771c0bbea2209353980ab2d239220875acf76c6" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the &lt;code&gt;tab-content&lt;/code&gt; container.</source>
          <target state="translated">&lt;code&gt;tab-content&lt;/code&gt; コンテナのHTML属性のリスト。</target>
        </trans-unit>
        <trans-unit id="f7c9b1002953abbefde7b1b2490853e47f6b47c5" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the &lt;code&gt;tab-content&lt;/code&gt; container. This will always contain the CSS class &lt;code&gt;tab-content&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tab-content&lt;/code&gt; コンテナのHTML属性のリスト。これには常にCSSクラス &lt;code&gt;tab-content&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="9529d53f912f25efa400179349dd8c597d7caab9" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the header container tags.</source>
          <target state="translated">ヘッダーコンテナタグのHTML属性のリスト。</target>
        </trans-unit>
        <trans-unit id="5abba5dac1a4a64e4a3d796afb7fafa650e221fa" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the header container tags. This will be overwritten by the &quot;headerOptions&quot; set in individual &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;.</source>
          <target state="translated">ヘッダーコンテナタグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された「headerOptions」によって上書きされます。</target>
        </trans-unit>
        <trans-unit id="c1185d4557fd2432da672a2604cddf48e69403ba" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the header container tags. This will be overwritten by the &quot;headerOptions&quot; set in individual &lt;a href=&quot;yii-jui-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;.</source>
          <target state="translated">ヘッダーコンテナタグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-jui-tabs#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された「headerOptions」によって上書きされます。</target>
        </trans-unit>
        <trans-unit id="1cb71ade2d47a827d6fe3cce0dbaca61c12de041" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags.</source>
          <target state="translated">アイテムコンテナタグのHTML属性の一覧です。</target>
        </trans-unit>
        <trans-unit id="f15162ddd2f220173ef05a2e252f16f136cbaa55" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">アイテムコンテナタグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された「オプション」によって上書きされます。次の特別なオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="408fce264b71f4d4ac59ee746838d35540a4c8d5" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-jui-accordion#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">アイテムコンテナタグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-jui-accordion#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された「オプション」によって上書きされます。次の特別なオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="76ec4dd974d8bb1898dcf8d78de91ea1cf04938c" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-jui-selectable#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">アイテムコンテナタグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-jui-selectable#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された「オプション」によって上書きされます。次の特別なオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="a04b6e5e6f87670216a63fdfd92c4e203720d21e" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-jui-sortable#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">アイテムコンテナタグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-jui-sortable#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された「オプション」によって上書きされます。次の特別なオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="e73777739572a0b598482737c8083a27dd48c125" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-jui-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">アイテムコンテナタグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-jui-tabs#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された「オプション」によって上書きされます。次の特別なオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="48183e619bf765eba0a524889d105e528c00769f" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item header container tags.</source>
          <target state="translated">アイテムヘッダーコンテナタグのHTML属性の一覧です。</target>
        </trans-unit>
        <trans-unit id="5d804a1960621d5e35d6c363111325e3a69e0c75" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item header container tags. This will be overwritten by the &quot;headerOptions&quot; set in individual &lt;a href=&quot;yii-jui-accordion#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">アイテムヘッダーコンテナータグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-jui-accordion#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された「headerOptions」によって上書きされます。次の特別なオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="645b2c6af6a4f5a72ac955eb40a317939400ff78" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the tab header link tags.</source>
          <target state="translated">タブヘッダーのリンクタグのHTML属性の一覧です。</target>
        </trans-unit>
        <trans-unit id="733e382fa690255d5efe8fd015d9cc8ebb5a562c" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the tab header link tags. This will be overwritten by the &quot;linkOptions&quot; set in individual &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;.</source>
          <target state="translated">タブヘッダーリンクタグのHTML属性のリスト。これは、個々の&lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$ itemsに&lt;/a&gt;設定された &quot;linkOptions&quot;によって上書きされます。</target>
        </trans-unit>
        <trans-unit id="18a66158b032478c928e2098cc4671dba4d3fbb9" translate="yes" xml:space="preserve">
          <source>List of HTML attributes shared by all menu &lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$items&lt;/a&gt;.</source>
          <target state="translated">すべてのメニュー&lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$ items&lt;/a&gt;によって共有されるHTML属性のリスト。</target>
        </trans-unit>
        <trans-unit id="4d84af1e62d06939a01c8d6c8a199417cf0bdd9e" translate="yes" xml:space="preserve">
          <source>List of HTML attributes shared by all menu &lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$items&lt;/a&gt;. If any individual menu item specifies its &lt;code&gt;options&lt;/code&gt;, it will be merged with this property before being used to generate the HTML attributes for the menu item tag. The following special options are recognized:</source>
          <target state="translated">すべてのメニュー&lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$ items&lt;/a&gt;によって共有されるHTML属性のリスト。個々のメニュー項目がその &lt;code&gt;options&lt;/code&gt; 指定する場合、メニュー項目タグのHTML属性の生成に使用される前に、このプロパティとマージされます。次の特別なオプションが認識されます。</target>
        </trans-unit>
        <trans-unit id="9f8975482ad85f42ed3ea3552f75321c0969e4d0" translate="yes" xml:space="preserve">
          <source>List of HTTP status codes and the corresponding texts</source>
          <target state="translated">HTTPステータスコードとそれに対応するテキストのリスト</target>
        </trans-unit>
        <trans-unit id="a187876cdeee7199e74fcfe11f2ca1b7b10e1f82" translate="yes" xml:space="preserve">
          <source>List of JavaScript files that this bundle contains.</source>
          <target state="translated">このバンドルに含まれるJavaScriptファイルの一覧です。</target>
        </trans-unit>
        <trans-unit id="44068b0da7b01ed7762aaf082929c2193d3da56a" translate="yes" xml:space="preserve">
          <source>List of JavaScript files that this bundle contains. Each JavaScript file can be specified in one of the following formats:</source>
          <target state="translated">このバンドルに含まれるJavaScriptファイルのリスト。各JavaScriptファイルは、以下のいずれかの形式で指定することができます。</target>
        </trans-unit>
        <trans-unit id="1971a7c0a32e0139a7abb06b7566a5f473ff22a8" translate="yes" xml:space="preserve">
          <source>List of URI schemes which should be considered valid.</source>
          <target state="translated">有効とみなされるべきURIスキームのリスト。</target>
        </trans-unit>
        <trans-unit id="5df5595ae03f96eb3280b58bbd58201fc022a130" translate="yes" xml:space="preserve">
          <source>List of URI schemes which should be considered valid. By default, http and https are considered to be valid schemes.</source>
          <target state="translated">有効とみなされるべきURIスキームのリスト。デフォルトでは、http と https が有効なスキームとみなされます。</target>
        </trans-unit>
        <trans-unit id="f3b3af3ed85e014b879a624ba6c970d5f0b38fdd" translate="yes" xml:space="preserve">
          <source>List of acceptable actions.</source>
          <target state="translated">受け入れ可能な行動の一覧です。</target>
        </trans-unit>
        <trans-unit id="1c4a5225423ce40ecbf40b44bb95f1c56f30801a" translate="yes" xml:space="preserve">
          <source>List of acceptable actions. If not empty, only the actions within this array will have the corresponding URL rules created.</source>
          <target state="translated">受け入れ可能なアクションのリスト。空でなければ、この配列内のアクションのみが対応する URL ルールを作成します。</target>
        </trans-unit>
        <trans-unit id="cadeafbe0cfd0737272fdbc3af594787c13f4421" translate="yes" xml:space="preserve">
          <source>List of action IDs separated by commas or spaces</source>
          <target state="translated">カンマまたはスペースで区切られたアクションIDのリスト</target>
        </trans-unit>
        <trans-unit id="12be6d9f9c9d08722dd3c13a58607e4df7f22964" translate="yes" xml:space="preserve">
          <source>List of action IDs that this filter should apply to.</source>
          <target state="translated">このフィルタが適用されるべきアクションIDのリスト。</target>
        </trans-unit>
        <trans-unit id="c31de6d69574282c97def9e757c3148417f41b39" translate="yes" xml:space="preserve">
          <source>List of action IDs that this filter should apply to. If this property is not set, then the filter applies to all actions, unless they are listed in &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;$except&lt;/a&gt;. If an action ID appears in both &lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;$only&lt;/a&gt; and &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;$except&lt;/a&gt;, this filter will NOT apply to it.</source>
          <target state="translated">このフィルターが適用されるアクションIDのリスト。このプロパティが設定されていない場合、&lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;$ exceptに&lt;/a&gt;リストされていない限り、フィルターはすべてのアクションに適用されます。アクションIDが&lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;$ only&lt;/a&gt;と&lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;$ exceptの&lt;/a&gt;両方に表示される場合、このフィルターはそれに適用されません。</target>
        </trans-unit>
        <trans-unit id="9149a4c229706ee4d1e8380b4853d295706fb87a" translate="yes" xml:space="preserve">
          <source>List of action IDs that this filter should not apply to.</source>
          <target state="translated">このフィルタが適用してはいけないアクションIDのリスト。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
