<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="bbdd9e30005ec68a06acfb78c438075bacdbd22f" translate="yes" xml:space="preserve">
          <source>When no block is given, returns a new Enumerator:</source>
          <target state="translated">ブロックが与えられていない場合、新しいEnumeratorを返します。</target>
        </trans-unit>
        <trans-unit id="3bda538b07097c3dfc880d42c695c4b6cccf5b2e" translate="yes" xml:space="preserve">
          <source>When no block is given, returns the combinations as an Array of Arrays:</source>
          <target state="translated">ブロックが与えられていない場合は、組み合わせを配列の配列として返します。</target>
        </trans-unit>
        <trans-unit id="099f2836bd7e7cfd43f061c686ec59cd8b1bab6f" translate="yes" xml:space="preserve">
          <source>When no block is given, returns the object equivalent to:</source>
          <target state="translated">ブロックが与えられていない場合は、同等のオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="597b4d357e4f0aac9db6c7210869b7076258c360" translate="yes" xml:space="preserve">
          <source>When no data can be read without blocking it raises &lt;a href=&quot;ssl/sslerror&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLError&lt;/code&gt;&lt;/a&gt; extended by &lt;a href=&quot;../io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ブロックせずにデータを読み取ることができない場合は、&lt;a href=&quot;../io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt;によって拡張された&lt;a href=&quot;ssl/sslerror&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLError&lt;/code&gt; &lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="ee46527213386eb2bace679dd6450b5ed292f101" translate="yes" xml:space="preserve">
          <source>When no data can be written without blocking it raises &lt;a href=&quot;ssl/sslerror&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLError&lt;/code&gt;&lt;/a&gt; extended by &lt;a href=&quot;../io/waitreadable&quot;&gt;&lt;code&gt;IO::WaitReadable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../io/waitwritable&quot;&gt;&lt;code&gt;IO::WaitWritable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ブロックせずにデータを書き込めない場合は、&lt;a href=&quot;../io/waitreadable&quot;&gt; &lt;code&gt;IO::WaitReadable&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../io/waitwritable&quot;&gt; &lt;code&gt;IO::WaitWritable&lt;/code&gt; &lt;/a&gt;によって拡張された&lt;a href=&quot;ssl/sslerror&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLError&lt;/code&gt; &lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="cf24aed2036366e50bf2f33a7f6ce0da2e22908c" translate="yes" xml:space="preserve">
          <source>When no name is given, it will invoke the default command of the current class.</source>
          <target state="translated">名前が指定されていない場合は、現在のクラスのデフォルトコマンドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="ac85af1af7865b185dede50b059de6a9b67daaea" translate="yes" xml:space="preserve">
          <source>When non-negative Innteger argument &lt;code&gt;n&lt;/code&gt; is given, returns the last &lt;code&gt;n&lt;/code&gt; elements in a new Array:</source>
          <target state="translated">非負のInnteger引数 &lt;code&gt;n&lt;/code&gt; が指定されている場合、新しい配列の最後の &lt;code&gt;n&lt;/code&gt; 個の要素を返します。</target>
        </trans-unit>
        <trans-unit id="fed66c120fd9ce000dbd7fa6c0337068d77ddcef" translate="yes" xml:space="preserve">
          <source>When non-negative Integer argument &lt;code&gt;n&lt;/code&gt; is given, returns the first &lt;code&gt;n&lt;/code&gt; elements in a new Array:</source>
          <target state="translated">負でない整数引数 &lt;code&gt;n&lt;/code&gt; が指定されている場合、新しい配列の最初の &lt;code&gt;n&lt;/code&gt; 個の要素を返します。</target>
        </trans-unit>
        <trans-unit id="40be0895c6c616b96bee441f86ff0c03862cd086" translate="yes" xml:space="preserve">
          <source>When non-negative argument Integer &lt;code&gt;n&lt;/code&gt; is given, returns a new Array built by concatenating the &lt;code&gt;n&lt;/code&gt; copies of &lt;code&gt;self&lt;/code&gt;:</source>
          <target state="translated">非負整数引数とき &lt;code&gt;n&lt;/code&gt; が与えられ、連結することにより構築された新しい配列を返し &lt;code&gt;n&lt;/code&gt; 個のコピー &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faa5b6d76d91af11ffeec3f942785ba5a7b78f71" translate="yes" xml:space="preserve">
          <source>When not evaluated:</source>
          <target state="translated">評価されなかった場合</target>
        </trans-unit>
        <trans-unit id="c9b23416b6bbe3536a784479b2d9a189beed9f6a" translate="yes" xml:space="preserve">
          <source>When not passing a block, the return value will be the same object as the :buffer keyword argument.</source>
          <target state="translated">ブロックを渡さない場合、戻り値は :buffer キーワード引数と同じオブジェクトになります。</target>
        </trans-unit>
        <trans-unit id="ed3c90faa88e27addc794aa9b66568c2ee460b22" translate="yes" xml:space="preserve">
          <source>When not specified otherwise, the hook implementations are mandatory: if they are not implemented, the methods trying to call hook will fail. To provide backward compatibility, in the future hooks will be optional (if they are not implemented, due to the scheduler being created for the older Ruby version, the code which needs this hook will not fail, and will just behave in a blocking fashion).</source>
          <target state="translated">特に指定がない場合、フックの実装は必須です。後方互換性を提供するために、将来的にはフックはオプションになるでしょう (もし実装されていない場合、スケジューラが古いRubyバージョン用に作成されているため、このフックを必要とするコードは失敗せず、単にブロッキングのように振る舞うだけです)。</target>
        </trans-unit>
        <trans-unit id="c11f1f82ced9537001fb8f49906ec3c2de593bf9" translate="yes" xml:space="preserve">
          <source>When option &lt;code&gt;unconverted_fields&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, each returned row (Array or CSV::Row) has an added method, &lt;code&gt;unconverted_fields&lt;/code&gt;, that returns the unconverted field values:</source>
          <target state="translated">オプション &lt;code&gt;unconverted_fields&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、返される各行（ArrayまたはCSV :: Row）には、 &lt;code&gt;unconverted_fields&lt;/code&gt; されていないフィールド値を返すunconverted_fieldsというメソッドが追加されています。</target>
        </trans-unit>
        <trans-unit id="082ff7498fa88f5b254946e4ad5ce38ad3a7f958" translate="yes" xml:space="preserve">
          <source>When overriding `eql?` please preserve the behaviour as mentioned in docstring for `==` method.</source>
          <target state="translated">eql? ` をオーバーライドする際には、`==` メソッドの docstring で指定されている挙動を保持してください。</target>
        </trans-unit>
        <trans-unit id="e1234f25b74cf4928685dbdb1dfe173a45420c6c" translate="yes" xml:space="preserve">
          <source>When overriding `hash` please preserve the behaviour as mentioned in docstring for `==` method, i.e. two methods equal by above comparison should have same hash.</source>
          <target state="translated">hash` をオーバーライドする際には、docstringに記載されている `==` メソッドの振る舞いを維持してください。</target>
        </trans-unit>
        <trans-unit id="cd18e0e43304f650475121b866fa176ae4cb052a" translate="yes" xml:space="preserve">
          <source>When passing a block, the yielded chunks will be the same value as the :buffer keyword argument.</source>
          <target state="translated">ブロックを渡すと、生成されるチャンクは :buffer キーワード引数と同じ値になります。</target>
        </trans-unit>
        <trans-unit id="5274973fe592553bd353aa878fce2443ca4ced73" translate="yes" xml:space="preserve">
          <source>When positive Integer argument &lt;code&gt;n&lt;/code&gt; is given, removes the first &lt;code&gt;n&lt;/code&gt; elements; returns those elements in a new Array:</source>
          <target state="translated">正の整数引数 &lt;code&gt;n&lt;/code&gt; が指定されている場合、最初の &lt;code&gt;n&lt;/code&gt; 個の要素を削除します。これらの要素を新しい配列で返します。</target>
        </trans-unit>
        <trans-unit id="d51575f491f48c11d902a2494835a766e5c9eb98" translate="yes" xml:space="preserve">
          <source>When provided, &lt;code&gt;offset&lt;/code&gt; ensures that a header match occurs on or later than the &lt;code&gt;offset&lt;/code&gt; index. You can use this to find duplicate headers, without resorting to hard-coding exact indices.</source>
          <target state="translated">提供される場合、 &lt;code&gt;offset&lt;/code&gt; は、ヘッダーの一致が &lt;code&gt;offset&lt;/code&gt; インデックス以降で発生することを保証します。これを使用して、正確なインデックスをハードコーディングすることなく、重複するヘッダーを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="99a98b2713288492295269f4ebe1cf64641d3c54" translate="yes" xml:space="preserve">
          <source>When readpartial blocks, it waits data or EOF on the stream. If some data is reached, readpartial returns with the data. If EOF is reached, readpartial raises &lt;a href=&quot;eoferror&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">部分的にブロックする場合、ストリームでデータまたはEOFを待機します。一部のデータに到達すると、readpartialはそのデータを返します。EOFに達すると、readpartialは&lt;a href=&quot;eoferror&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;を送出します。</target>
        </trans-unit>
        <trans-unit id="c8b7c2a2be298ebf9278e94eb0ee1edb9b2ddf11" translate="yes" xml:space="preserve">
          <source>When readpartial doesn't blocks, it returns or raises immediately. If the byte buffer is not empty, it returns the data in the buffer. Otherwise if the stream has some content, it returns the data in the stream. Otherwise if the stream is reached to EOF, it raises &lt;a href=&quot;eoferror&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">readpartialがブロックしない場合は、すぐに戻るか発生します。バイトバッファーが空でない場合は、バッファー内のデータを返します。それ以外の場合、ストリームにコンテンツがある場合は、ストリーム内のデータを返します。それ以外の場合、ストリームがEOFに到達すると、&lt;a href=&quot;eoferror&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e3dcf0a572bcdb898978ac2d46a32c303106adb4" translate="yes" xml:space="preserve">
          <source>When recvfrom(2) returns 0, &lt;a href=&quot;basicsocket#method-i-recv_nonblock&quot;&gt;&lt;code&gt;Socket#recv_nonblock&lt;/code&gt;&lt;/a&gt; returns an empty string as data. The meaning depends on the socket: EOF on TCP, empty packet on UDP, etc.</source>
          <target state="translated">recvfrom（2）が0を返すと、&lt;a href=&quot;basicsocket#method-i-recv_nonblock&quot;&gt; &lt;code&gt;Socket#recv_nonblock&lt;/code&gt; &lt;/a&gt;は空の文字列をデータとして返します。意味はソケットに依存します。TCPではEOF、UDPでは空のパケットなど。</target>
        </trans-unit>
        <trans-unit id="cdd3ce28d91fbccaf00adcfb739469b177a4e026" translate="yes" xml:space="preserve">
          <source>When recvfrom(2) returns 0, &lt;a href=&quot;socket#method-i-recvfrom_nonblock&quot;&gt;&lt;code&gt;Socket#recvfrom_nonblock&lt;/code&gt;&lt;/a&gt; returns an empty string as data. It means an empty packet.</source>
          <target state="translated">recvfrom（2）が0を返すと、&lt;a href=&quot;socket#method-i-recvfrom_nonblock&quot;&gt; &lt;code&gt;Socket#recvfrom_nonblock&lt;/code&gt; &lt;/a&gt;は空の文字列をデータとして返します。空のパケットを意味します。</target>
        </trans-unit>
        <trans-unit id="a332a12095d21f4a49419e4733d83e7328de0521" translate="yes" xml:space="preserve">
          <source>When recvfrom(2) returns 0, &lt;a href=&quot;socket#method-i-recvfrom_nonblock&quot;&gt;&lt;code&gt;Socket#recvfrom_nonblock&lt;/code&gt;&lt;/a&gt; returns an empty string as data. The meaning depends on the socket: EOF on TCP, empty packet on UDP, etc.</source>
          <target state="translated">recvfrom（2）が0を返すと、&lt;a href=&quot;socket#method-i-recvfrom_nonblock&quot;&gt; &lt;code&gt;Socket#recvfrom_nonblock&lt;/code&gt; &lt;/a&gt;は空の文字列をデータとして返します。意味はソケットに依存します。TCPではEOF、UDPでは空のパケットなど。</target>
        </trans-unit>
        <trans-unit id="c5d107bc676439cdf718c9e7d5e98065992f0b44" translate="yes" xml:space="preserve">
          <source>When referencing constants in classes inheriting from &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; you do not need to use the full namespace. For example, referencing &lt;code&gt;File&lt;/code&gt; inside &lt;code&gt;YourClass&lt;/code&gt; will find the top-level &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;から継承するクラスの定数を参照する場合、完全な名前空間を使用する必要はありません。たとえば、 &lt;code&gt;YourClass&lt;/code&gt; 内で &lt;code&gt;File&lt;/code&gt; を参照すると、最上位の&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;クラスが見つかります。</target>
        </trans-unit>
        <trans-unit id="d294cbb2c35370010ee0e3178bc8cea3df7f5e05" translate="yes" xml:space="preserve">
          <source>When replacing with another hash, the initial order of our keys must come from the other hash -ordered or not.</source>
          <target state="translated">別のハッシュに置き換える場合、鍵の最初の順序は他のハッシュから来ていなければなりません。</target>
        </trans-unit>
        <trans-unit id="2afe04af0041ae5a0dae63d746255159f466f644" translate="yes" xml:space="preserve">
          <source>When ruby parses this expression it first encounters &lt;code&gt;a&lt;/code&gt; as a method call in the &amp;ldquo;then&amp;rdquo; expression, then later it sees the assignment to &lt;code&gt;a&lt;/code&gt; in the &amp;ldquo;test&amp;rdquo; expression and marks &lt;code&gt;a&lt;/code&gt; as a local variable.</source>
          <target state="translated">ルビーは、この式を解析して最初の遭遇「し、」表現、その後、それはへの割り当てを見ているのメソッド呼び出しとして「テスト」という表現やマークでローカル変数として。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="687962d2dcbe4935510e1a8fd61ff0356aaddd5e" translate="yes" xml:space="preserve">
          <source>When running a server, it is often desirable to disable client renegotiation entirely. You may use a callback as follows to implement this feature:</source>
          <target state="translated">サーバを実行する場合、クライアントのリネゴシエーションを完全に無効にすることが望ましい場合が多いです。この機能を実装するために、以下のようにコールバックを使用することができます。</target>
        </trans-unit>
        <trans-unit id="73c3f1dbe76b72b395f8d40eaf113c489a2f84cd" translate="yes" xml:space="preserve">
          <source>When running this line it first executes the &amp;ldquo;test&amp;rdquo; expression, &lt;code&gt;a = 0.zero?&lt;/code&gt;.</source>
          <target state="translated">この行を実行すると、最初に「テスト」式を実行し &lt;code&gt;a = 0.zero?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ccd9f8db78c980ef63d37f39aa370e10f6bc3672" translate="yes" xml:space="preserve">
          <source>When sending the second parameter, the same object will be used as the value for all the array elements:</source>
          <target state="translated">2 番目のパラメータを送信すると、すべての配列要素の値として同じオブジェクトが使用されます。</target>
        </trans-unit>
        <trans-unit id="154f2fe15b39164ebf07094d90647cc0ffea9fa0" translate="yes" xml:space="preserve">
          <source>When session processing has been completed for a request, the session should be closed using the close() method. This will store the session's state to persistent storage. If you want to store the session's state to persistent storage without finishing session processing for this request, call the update() method.</source>
          <target state="translated">リクエストに対するセッション処理が完了したら、close()メソッドを使ってセッションを閉じなければなりません。これにより、セッションの状態が永続的なストレージに保存されます。このリクエストのセッション処理を終了せずにセッションの状態を永続的なストレージに保存したい場合は、update()メソッドを呼び出してください。</target>
        </trans-unit>
        <trans-unit id="425ed0be50678fb3423ec807abcd59a39528f074" translate="yes" xml:space="preserve">
          <source>When set an object, any values of a blank string field is replaced by the set object.</source>
          <target state="translated">オブジェクトをセットすると、空白の文字列フィールドの値がセットされたオブジェクトに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="bd5007c9745532841f18ce3ee62f080a14a35154" translate="yes" xml:space="preserve">
          <source>When set an object, any values of an empty field are replaced by the set object, not nil.</source>
          <target state="translated">オブジェクトをセットすると、空のフィールドの値はすべてセットされたオブジェクトに置き換えられ、nilではありません。</target>
        </trans-unit>
        <trans-unit id="73b36fd071a90443a3da25f085c574191b8195eb" translate="yes" xml:space="preserve">
          <source>When set an object, any values of an empty field is replaced by the set object, not nil.</source>
          <target state="translated">オブジェクトをセットすると、空のフィールドの値は、nilではなく、セットされたオブジェクトに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="cc121f8a09f78ecfe8119f3861ce5bddb0af6e91" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, a message is printed on $stderr if an exception kills this &lt;code&gt;thr&lt;/code&gt;. See &lt;a href=&quot;thread#method-c-report_on_exception&quot;&gt;&lt;code&gt;::report_on_exception&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、例外によってこの &lt;code&gt;thr&lt;/code&gt; が強制終了された場合、メッセージが$ stderrに出力されます。詳細については、&lt;a href=&quot;thread#method-c-report_on_exception&quot;&gt; &lt;code&gt;::report_on_exception&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e747720f5f65dbf7681eaff8ec589d6e3b24b035" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, if any thread is aborted by an exception, the raised exception will be re-raised in the main thread.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、スレッドが例外によって中止された場合、発生した例外はメインスレッドで再度発生します。</target>
        </trans-unit>
        <trans-unit id="21f834ee3880300661d9249ac037f4869caa7f0a" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, if any thread is aborted by an exception, the raised exception will be re-raised in the main thread. Returns the new state.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、スレッドが例外によって中止された場合、発生した例外はメインスレッドで再度発生します。新しい状態を返します。</target>
        </trans-unit>
        <trans-unit id="6dea91cbd2722ba945de5b538b61458cf7ba58a9" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, if this &lt;code&gt;thr&lt;/code&gt; is aborted by an exception, the raised exception will be re-raised in the main thread.</source>
          <target state="translated">設定した場合 &lt;code&gt;true&lt;/code&gt; この場合、 &lt;code&gt;thr&lt;/code&gt; 例外で中止され、発生した例外は、メインスレッドで再引き上げとなります。</target>
        </trans-unit>
        <trans-unit id="1b314cc019e1cd041351ad068f4f3c6e86b5b02d" translate="yes" xml:space="preserve">
          <source>When set to a &lt;code&gt;true&lt;/code&gt; value, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will attempt to parse input not conformant with RFC 4180, such as double quotes in unquoted fields.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 値に設定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は、引用符で囲まれていないフィールドの二重引用符など、RFC 4180に準拠していない入力を解析しようとします。</target>
        </trans-unit>
        <trans-unit id="659aca5a707d4f27adb694c47ba65eb17b24b351" translate="yes" xml:space="preserve">
          <source>When set to a &lt;code&gt;true&lt;/code&gt; value, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will quote all &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; fields it creates.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は作成するすべての&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;フィールドを引用します。</target>
        </trans-unit>
        <trans-unit id="7b9d12ab607613800182df3768956448d2d49119" translate="yes" xml:space="preserve">
          <source>When set to a &lt;code&gt;true&lt;/code&gt; value, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will skip over any empty rows. Note that this setting will not skip rows that contain column separators, even if the rows contain no actual data. If you want to skip rows that contain separators but no content, consider using &lt;code&gt;:skip_lines&lt;/code&gt;, or inspecting fields.compact.empty? on each row.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は空の行をスキップします。この設定では、行に実際のデータが含まれていない場合でも、列区切り文字を含む行はスキップされません。セパレーターを含むがコンテンツを含まない行をスキップする場合は、 &lt;code&gt;:skip_lines&lt;/code&gt; を使用するか、fields.compact.empty？各行に。</target>
        </trans-unit>
        <trans-unit id="caca45c7ad3bb85595f066c7e2d6d4198bd597c9" translate="yes" xml:space="preserve">
          <source>When set to an object responding to &lt;code&gt;match&lt;/code&gt;, every line matching it is considered a comment and ignored during parsing. When set to a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, it is first converted to a &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;. When set to &lt;code&gt;nil&lt;/code&gt; no line is considered a comment. If the passed object does not respond to &lt;code&gt;match&lt;/code&gt;, &lt;code&gt;ArgumentError&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; に応答するオブジェクトに設定すると、それに一致するすべての行はコメントと見なされ、解析中に無視されます。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;に設定すると、最初に&lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; に&lt;/a&gt;変換されます。 &lt;code&gt;nil&lt;/code&gt; に設定すると、コメントと見なされる行はありません。渡されたオブジェクトが &lt;code&gt;match&lt;/code&gt; に応答しない場合、 &lt;code&gt;ArgumentError&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="89fbb89a502c792f6a787464cb1bbcdd179043df" translate="yes" xml:space="preserve">
          <source>When setting a &lt;code&gt;true&lt;/code&gt; value, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will attempt to parse input not conformant with RFC 4180, such as double quotes in unquoted fields.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 値を設定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は、引用符で囲まれていないフィールドの二重引用符など、RFC4180に準拠していない入力の解析を試みます。</target>
        </trans-unit>
        <trans-unit id="442ffc86b7d57eeafb3a299c68bd5bf897af7336" translate="yes" xml:space="preserve">
          <source>When setting a &lt;code&gt;true&lt;/code&gt; value, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will quote all &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; fields it creates.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 値を設定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は作成したすべての&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;フィールドを引用します。</target>
        </trans-unit>
        <trans-unit id="e55d31b1fe8e9e63dd605e442f2e122322258081" translate="yes" xml:space="preserve">
          <source>When setting a &lt;code&gt;true&lt;/code&gt; value, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will quote empty values with double quotes. When &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will emit an empty string for an empty field value.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 値を設定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は空の値を二重引用符で囲みます。 &lt;code&gt;false&lt;/code&gt; の場合、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は空のフィールド値に対して空の文字列を出力します。</target>
        </trans-unit>
        <trans-unit id="22949db9550c8431490ed65c3d349afa271c91b0" translate="yes" xml:space="preserve">
          <source>When setting a &lt;code&gt;true&lt;/code&gt; value, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will skip over any empty rows. Note that this setting will not skip rows that contain column separators, even if the rows contain no actual data. If you want to skip rows that contain separators but no content, consider using &lt;code&gt;:skip_lines&lt;/code&gt;, or inspecting fields.compact.empty? on each row.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 値を設定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は空の行をスキップします。この設定では、行に実際のデータが含まれていない場合でも、列区切り文字を含む行はスキップされないことに注意してください。区切り文字を含むがコンテンツを含まない行をスキップする場合は、 &lt;code&gt;:skip_lines&lt;/code&gt; を使用するか、fields.compact.emptyを検査することを検討してください。各行に。</target>
        </trans-unit>
        <trans-unit id="cd413ce50f7b87f6cbc7982d35a7641888eca78c" translate="yes" xml:space="preserve">
          <source>When setting a &lt;code&gt;true&lt;/code&gt; value, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will strip &amp;ldquo;trnfv&amp;rdquo; around the values. If you specify a string instead of &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will strip string. The length of the string must be 1.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 値を設定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は値の周囲の「trnfv」を取り除きます。 &lt;code&gt;true&lt;/code&gt; の代わりに文字列を指定すると、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は文字列を削除します。文字列の長さは1でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f9b278f8d0663f914973d3b7797fd51a5a9e3a5c" translate="yes" xml:space="preserve">
          <source>When setting an object responding to &lt;code&gt;match&lt;/code&gt;, every line matching it is considered a comment and ignored during parsing. When set to a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, it is first converted to a &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;. When set to &lt;code&gt;nil&lt;/code&gt; no line is considered a comment. If the passed object does not respond to &lt;code&gt;match&lt;/code&gt;, &lt;code&gt;ArgumentError&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; に応答するオブジェクトを設定する場合、それに一致するすべての行はコメントと見なされ、解析中に無視されます。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;に設定すると、最初に&lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;Regexp&lt;/code&gt; &lt;/a&gt;変換されます。 &lt;code&gt;nil&lt;/code&gt; に設定すると、コメントと見なされる行はありません。渡されたオブジェクトが &lt;code&gt;match&lt;/code&gt; に応答しない場合、 &lt;code&gt;ArgumentError&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="c8518d18d363cdb266ba44ba7c813e8d471a662e" translate="yes" xml:space="preserve">
          <source>When setting an object, any values of a blank string field is replaced by the set object.</source>
          <target state="translated">オブジェクトを設定すると、空白の文字列フィールドの値は、設定したオブジェクトに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="9a05774d0b11743708f71fe6a3193aa2d45dd181" translate="yes" xml:space="preserve">
          <source>When should you use &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and when should you use &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;?</source>
          <target state="translated">いつ&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;を使用し、いつ&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;を使用する必要がありますか？</target>
        </trans-unit>
        <trans-unit id="c3022c11ecdf575f4ea5fed7c8a3f91d2ee64a31" translate="yes" xml:space="preserve">
          <source>When stress mode is enabled, the &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; is invoked at every &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; opportunity: all memory and object allocations.</source>
          <target state="translated">ストレスモードが有効になっている場合、&lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt;はすべての&lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; &lt;/a&gt;機会、つまりすべてのメモリとオブジェクトの割り当てで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1165026bd2be265f91a08f940ff329ca06cc5bb1" translate="yes" xml:space="preserve">
          <source>When subclassing the &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; class, the &lt;code&gt;initialize&lt;/code&gt; method of your subclass will be ignored by &lt;a href=&quot;thread#method-c-start&quot;&gt;&lt;code&gt;::start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;thread#method-c-fork&quot;&gt;&lt;code&gt;::fork&lt;/code&gt;&lt;/a&gt;. Otherwise, be sure to call super in your &lt;code&gt;initialize&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt;クラスをサブクラス化するとき、サブクラスの &lt;code&gt;initialize&lt;/code&gt; メソッドは&lt;a href=&quot;thread#method-c-start&quot;&gt; &lt;code&gt;::start&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;thread#method-c-fork&quot;&gt; &lt;code&gt;::fork&lt;/code&gt; &lt;/a&gt;によって無視されます。それ以外の場合は、 &lt;code&gt;initialize&lt;/code&gt; メソッドで必ずsuperを呼び出してください。</target>
        </trans-unit>
        <trans-unit id="685802247db6080f5d262803388e82921699e0ab" translate="yes" xml:space="preserve">
          <source>When such a change is attempted the error is raised in different locations according to the platform.</source>
          <target state="translated">このような変更を試みると、プラットフォームに応じて異なる場所でエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="b853d314a2e7a70346f493d035214c0a9f1a6550" translate="yes" xml:space="preserve">
          <source>When surrounding with quotes, any character but that quote and newline (CR and/or LF) can be used as the identifier.</source>
          <target state="translated">引用符で囲む場合は、その引用符と改行(CRまたはLF)以外の任意の文字を識別子として使用することができます。</target>
        </trans-unit>
        <trans-unit id="8759492b710fa0f868940d2b01701715f9e738b8" translate="yes" xml:space="preserve">
          <source>When the Regexp argument &lt;code&gt;regexp&lt;/code&gt; is given, and the &lt;code&gt;capture&lt;/code&gt; argument is &lt;code&gt;0&lt;/code&gt;, returns the first matching substring found in &lt;code&gt;self&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt; if none found:</source>
          <target state="translated">&lt;code&gt;regexp&lt;/code&gt; 引数regexpが指定され、 &lt;code&gt;capture&lt;/code&gt; 引数が &lt;code&gt;0&lt;/code&gt; の場合、 &lt;code&gt;self&lt;/code&gt; で最初に一致する部分文字列を返します。見つからない場合は、 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="06c4aa5657fc901674baa2537a01fa338001f98a" translate="yes" xml:space="preserve">
          <source>When the access mode is &lt;code&gt;:col&lt;/code&gt;, calls the block with each column as a 2-element array containing the header and an Array of column fields:</source>
          <target state="translated">アクセスモードが &lt;code&gt;:col&lt;/code&gt; の場合、各列のブロックを、ヘッダーと列フィールドの配列を含む2要素配列として呼び出します。</target>
        </trans-unit>
        <trans-unit id="eea89ac6323aa04d37d06830b663663bc480b31e" translate="yes" xml:space="preserve">
          <source>When the access mode is &lt;code&gt;:row&lt;/code&gt; or &lt;code&gt;:col_or_row&lt;/code&gt;, calls the block with each CSV::Row object:</source>
          <target state="translated">アクセスモードが &lt;code&gt;:row&lt;/code&gt; または &lt;code&gt;:col_or_row&lt;/code&gt; の場合、CSV :: Rowオブジェクトごとにブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="757b22d2b3c8f83504f4d6431bb19925d3e1f5e7" translate="yes" xml:space="preserve">
          <source>When the argument count is an even number; returns a new Hash object wherein each successive pair of arguments has become a key-value entry:</source>
          <target state="translated">引数の数が偶数の場合、連続する引数の各ペアがキー値エントリになっている新しい Hash オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="3bffe22da945b216e32d878363a659c332d6d952" translate="yes" xml:space="preserve">
          <source>When the block returns zero, the order for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; is indeterminate, and may be unstable:</source>
          <target state="translated">ブロックがゼロを返す場合、 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の順序は不確定であり、不安定になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="68ef9da8413e9e1e29c5e3c18f723ad73876eaec" translate="yes" xml:space="preserve">
          <source>When the default proc for a Hash is set (i.e., not &lt;code&gt;nil&lt;/code&gt;), the default value returned by method &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt; is determined by the default proc alone.</source>
          <target state="translated">ハッシュのデフォルトprocが設定されている場合（つまり、 &lt;code&gt;nil&lt;/code&gt; ではない場合）、メソッド&lt;a href=&quot;hash#method-i-5B-5D&quot;&gt; &lt;code&gt;[]&lt;/code&gt; &lt;/a&gt;によって返されるデフォルト値は、デフォルトprocのみによって決定されます。</target>
        </trans-unit>
        <trans-unit id="b8022c762273772d28aefe9870788acd7b41d3c8" translate="yes" xml:space="preserve">
          <source>When the default proc is set (i.e., not &lt;code&gt;nil&lt;/code&gt;) and method &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt; is called with with a non-existent key, &lt;a href=&quot;hash#method-i-5B-5D&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/a&gt; calls the default proc with both the Hash object itself and the missing key, then returns the proc's return value:</source>
          <target state="translated">デフォルトのprocが設定され（つまり、 &lt;code&gt;nil&lt;/code&gt; ではない）、メソッド&lt;a href=&quot;hash#method-i-5B-5D&quot;&gt; &lt;code&gt;[]&lt;/code&gt; &lt;/a&gt;が存在しないキーで呼び出されると、&lt;a href=&quot;hash#method-i-5B-5D&quot;&gt; &lt;code&gt;[]&lt;/code&gt; &lt;/a&gt;はHashオブジェクト自体と欠落しているキーの両方でデフォルトのprocを呼び出し、procの戻り値を返します。</target>
        </trans-unit>
        <trans-unit id="047ee0a9f4d31ed20d6f6dbcbc2b32d68287bc01" translate="yes" xml:space="preserve">
          <source>When the execution in the non-blocking &lt;a href=&quot;../fiber&quot;&gt;&lt;code&gt;Fiber&lt;/code&gt;&lt;/a&gt; reaches some blocking operation (like sleep, wait for a process, or a non-ready I/O), it calls some of the scheduler's hook methods, listed below.</source>
          <target state="translated">非ブロッキング&lt;a href=&quot;../fiber&quot;&gt; &lt;code&gt;Fiber&lt;/code&gt; &lt;/a&gt;での実行が何らかのブロッキング操作（スリープ、プロセスの待機、準備ができていないI / Oなど）に達すると、以下に示すスケジューラーのフックメソッドの一部が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9ed08988e23ce19b2524e6c4330a526b71f1cc7a" translate="yes" xml:space="preserve">
          <source>When the given severity is not high enough (for this particular logger), log no message, and return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">指定された重大度が（この特定のロガーに対して）十分に高くない場合、メッセージをログに記録せずに &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a970a9c20c350de0e261c1c044abe556ba9ffc67" translate="yes" xml:space="preserve">
          <source>When the input &lt;code&gt;str&lt;/code&gt; is empty an empty &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; is returned as the string is considered to have no fields to split.</source>
          <target state="translated">入力 &lt;code&gt;str&lt;/code&gt; が空の場合、文字列は分割するフィールドがないと見なされるため、空の&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="49035dacde72437679cf65e1efc17fe4c26f1096" translate="yes" xml:space="preserve">
          <source>When the instance is garbage collected, the C function &lt;code&gt;func&lt;/code&gt; is called.</source>
          <target state="translated">インスタンスがガベージコレクションされると、C関数 &lt;code&gt;func&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d4a790a6a3f0631713d610d9dda46d77e83c86b9" translate="yes" xml:space="preserve">
          <source>When the method defines default arguments you do not need to supply all the arguments to the method. Ruby will fill in the missing arguments in-order.</source>
          <target state="translated">メソッドがデフォルトの引数を定義している場合、メソッドにすべての引数を与える必要はありません。Rubyは足りない引数を順番に埋めていきます。</target>
        </trans-unit>
        <trans-unit id="da95be4877e5242287757fd4a6747a66167b11c5" translate="yes" xml:space="preserve">
          <source>When the method name parameter is given as a string, the string is converted to a symbol.</source>
          <target state="translated">メソッド名のパラメータに文字列を与えると、その文字列は記号に変換されます。</target>
        </trans-unit>
        <trans-unit id="b3194d1fbab3f75347fc2ce2da1741d6f130878e" translate="yes" xml:space="preserve">
          <source>When the object is sent to and from the ractor, it is important to understand whether the object is shareable or unshareable. Most of objects are unshareable objects.</source>
          <target state="translated">ラクターとの間でオブジェクトの送受信を行う際には、そのオブジェクトが共有可能なオブジェクトなのか、非共有可能なオブジェクトなのかを理解することが重要です。ほとんどのオブジェクトは非共有可能なオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="ed437d44c63ced22c786d31b60ca0d84a7b28a89" translate="yes" xml:space="preserve">
          <source>When the only argument is a Range object &lt;code&gt;range&lt;/code&gt;, treats &lt;code&gt;range.min&lt;/code&gt; as &lt;code&gt;start&lt;/code&gt; above and &lt;code&gt;range.size&lt;/code&gt; as &lt;code&gt;length&lt;/code&gt; above:</source>
          <target state="translated">唯一の引数は、Rangeオブジェクトのとき &lt;code&gt;range&lt;/code&gt; 、扱いが &lt;code&gt;range.min&lt;/code&gt; として &lt;code&gt;start&lt;/code&gt; 上記と &lt;code&gt;range.size&lt;/code&gt; のように &lt;code&gt;length&lt;/code&gt; 上述：</target>
        </trans-unit>
        <trans-unit id="12bde725a4c5c5bd5daa9ce385fd356a2c89d5f4" translate="yes" xml:space="preserve">
          <source>When the only argument is an Integer &lt;code&gt;n&lt;/code&gt;, removes and returns the &lt;em&gt;nth&lt;/em&gt; element in &lt;code&gt;self&lt;/code&gt;:</source>
          <target state="translated">唯一の引数が整数 &lt;code&gt;n&lt;/code&gt; の場合、 &lt;code&gt;self&lt;/code&gt; の&lt;em&gt;n番目の&lt;/em&gt;要素を削除して返します。</target>
        </trans-unit>
        <trans-unit id="7657eee5413e59ef97db413616f62c3ff0471d52" translate="yes" xml:space="preserve">
          <source>When the only arguments are Integers &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt;, removes &lt;code&gt;length&lt;/code&gt; elements from &lt;code&gt;self&lt;/code&gt; beginning at offset &lt;code&gt;start&lt;/code&gt;; returns the deleted objects in a new Array:</source>
          <target state="translated">引数が整数の &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;length&lt;/code&gt; のみの場合、オフセットの &lt;code&gt;start&lt;/code&gt; から始まる &lt;code&gt;self&lt;/code&gt; から &lt;code&gt;length&lt;/code&gt; 要素を削除します。削除されたオブジェクトを新しい配列で返します。</target>
        </trans-unit>
        <trans-unit id="267fc12a5f8b3f45c10225998754fbc36d0eae9a" translate="yes" xml:space="preserve">
          <source>When the open mode of original &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; is read only, the mode cannot be changed to be writable. Similarly, the open mode cannot be changed from write only to readable.</source>
          <target state="translated">元の&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; の&lt;/a&gt;オープンモードが読み取り専用の場合、モードを書き込み可能に変更することはできません。同様に、オープンモードを書き込み専用から読み取り専用に変更することはできません。</target>
        </trans-unit>
        <trans-unit id="cb8a2177277e00486427aa34fef23cf7d72f9de9" translate="yes" xml:space="preserve">
          <source>When the optional &lt;code&gt;chomp&lt;/code&gt; keyword argument has a true value, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, and &lt;code&gt;\r\n&lt;/code&gt; will be removed from the end of each line.</source>
          <target state="translated">オプションの &lt;code&gt;chomp&lt;/code&gt; キーワード引数にtrue値がある場合、 &lt;code&gt;\n&lt;/code&gt; 、 &lt;code&gt;\r&lt;/code&gt; 、および &lt;code&gt;\r\n&lt;/code&gt; は各行の末尾から削除されます。</target>
        </trans-unit>
        <trans-unit id="09e15915dc2caa0e1fff2f8b3691769e5aa32d3a" translate="yes" xml:space="preserve">
          <source>When the optional &lt;code&gt;symbolize_names&lt;/code&gt; keyword argument is set to a true value, returns symbols for keys in &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; objects (default: strings).</source>
          <target state="translated">オプションの &lt;code&gt;symbolize_names&lt;/code&gt; キーワード引数がtrue値に設定されている場合、&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;オブジェクトのキーのシンボルを返します（デフォルト：文字列）。</target>
        </trans-unit>
        <trans-unit id="f07b4842d6b28ba39c076f7c3b0b5b130455ff5a" translate="yes" xml:space="preserve">
          <source>When the precision is negative, the returned value is an integer with at least &lt;code&gt;ndigits.abs&lt;/code&gt; trailing zeros.</source>
          <target state="translated">精度が負の場合、戻り値は少なくとも &lt;code&gt;ndigits.abs&lt;/code&gt; の後続ゼロを持つ整数です。</target>
        </trans-unit>
        <trans-unit id="6a39f049506816ce584ac64c6ea924d90713d72d" translate="yes" xml:space="preserve">
          <source>When the same day does not exist for the corresponding month, the last day of the month is used instead:</source>
          <target state="translated">対応する月に同じ日が存在しない場合は、その月の最終日が代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="65dc1b0d8ef68f7f6feaadf8c7747de4fdbcbb38" translate="yes" xml:space="preserve">
          <source>When the single Integer argument &lt;code&gt;index&lt;/code&gt; is given, returns the 1-character substring found in &lt;code&gt;self&lt;/code&gt; at offset &lt;code&gt;index&lt;/code&gt;:</source>
          <target state="translated">単一の整数引数 &lt;code&gt;index&lt;/code&gt; が指定されて &lt;code&gt;self&lt;/code&gt; 、オフセット &lt;code&gt;index&lt;/code&gt; でselfにある1文字の部分文字列を返します。</target>
        </trans-unit>
        <trans-unit id="b8da8fdd22a4ca83ef50194dcb0b7ffa7c6004a6" translate="yes" xml:space="preserve">
          <source>When the single Range argument &lt;code&gt;range&lt;/code&gt; is given, derives &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; values from the given &lt;code&gt;range&lt;/code&gt;, and returns values as above:</source>
          <target state="translated">単一のRange引数 &lt;code&gt;range&lt;/code&gt; が指定 &lt;code&gt;length&lt;/code&gt; 場合、指定された &lt;code&gt;range&lt;/code&gt; から &lt;code&gt;start&lt;/code&gt; 値と長さの値を導出し、上記の値を返します。</target>
        </trans-unit>
        <trans-unit id="4ba48ec1eb0bee76ec6ac71914214e2bf34c8c8e" translate="yes" xml:space="preserve">
          <source>When the single String argument &lt;code&gt;substring&lt;/code&gt; is given, returns the substring from &lt;code&gt;self&lt;/code&gt; if found, otherwise &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">単一のString引数の &lt;code&gt;substring&lt;/code&gt; が指定されて &lt;code&gt;self&lt;/code&gt; 場合、見つかった場合はselfから部分文字列を返し、それ以外の場合は &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ebf295b44be609be7092cad7889dd2a16f43b616" translate="yes" xml:space="preserve">
          <source>When the single given argument is a Hash, returns a new Hash populated with the entries from the given Hash.</source>
          <target state="translated">与えられた引数が単一のハッシュである場合、与えられたハッシュのエントリで構成された新しいハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="2e5d9f89e3ce60bafcd7d6eb4755d0e492927ab4" translate="yes" xml:space="preserve">
          <source>When the single given argument is an Array of 2-element Arrays, returns a new Hash object wherein each 2-element array forms a key-value entry:</source>
          <target state="translated">与えられた単一の引数が2要素配列の配列である場合、各2要素配列がキー値エントリを形成する新しいHashオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="5eb49acc1044618cfd141bb7a97e8cc8ecb2fbb3" translate="yes" xml:space="preserve">
          <source>When the source is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;, &lt;a href=&quot;json#method-i-generate&quot;&gt;&lt;code&gt;JSON.generate&lt;/code&gt;&lt;/a&gt; returns a String containing the corresponding JSON token:</source>
          <target state="translated">ソースが &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;false&lt;/code&gt; 、または &lt;code&gt;nil&lt;/code&gt; の場合、&lt;a href=&quot;json#method-i-generate&quot;&gt; &lt;code&gt;JSON.generate&lt;/code&gt; &lt;/a&gt;は対応するJSONトークンを含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e814229d6d02d5e96873d1563c79354775dc06c8" translate="yes" xml:space="preserve">
          <source>When the source is a JSON object, &lt;a href=&quot;json#method-i-parse&quot;&gt;&lt;code&gt;JSON.parse&lt;/code&gt;&lt;/a&gt; by default returns a Ruby Hash:</source>
          <target state="translated">ソースがJSONオブジェクトの場合、&lt;a href=&quot;json#method-i-parse&quot;&gt; &lt;code&gt;JSON.parse&lt;/code&gt; &lt;/a&gt;はデフォルトでRubyハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="333d135baceb15ac4f99f45bec9d5483ad9b137d" translate="yes" xml:space="preserve">
          <source>When the source is a JSON scalar (not an array or object), &lt;a href=&quot;json#method-i-parse&quot;&gt;&lt;code&gt;JSON.parse&lt;/code&gt;&lt;/a&gt; returns a Ruby scalar.</source>
          <target state="translated">ソースがJSONスカラー（配列やオブジェクトではない）の場合、&lt;a href=&quot;json#method-i-parse&quot;&gt; &lt;code&gt;JSON.parse&lt;/code&gt; &lt;/a&gt;はRubyスカラーを返します。</target>
        </trans-unit>
        <trans-unit id="ded6b97b813e56a3f6942c1b94a22cf3b90ab1d7" translate="yes" xml:space="preserve">
          <source>When the source is a Ruby Array, &lt;a href=&quot;json#method-i-generate&quot;&gt;&lt;code&gt;JSON.generate&lt;/code&gt;&lt;/a&gt; returns a String containing a JSON array:</source>
          <target state="translated">ソースがRuby配列の場合、&lt;a href=&quot;json#method-i-generate&quot;&gt; &lt;code&gt;JSON.generate&lt;/code&gt; &lt;/a&gt;はJSON配列を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="8b383aca2605c3b80e9ba0c8a85ebff060d01102" translate="yes" xml:space="preserve">
          <source>When the source is a Ruby Hash, &lt;a href=&quot;json#method-i-generate&quot;&gt;&lt;code&gt;JSON.generate&lt;/code&gt;&lt;/a&gt; returns a String containing a JSON object:</source>
          <target state="translated">ソースがRubyハッシュの場合、&lt;a href=&quot;json#method-i-generate&quot;&gt; &lt;code&gt;JSON.generate&lt;/code&gt; &lt;/a&gt;はJSONオブジェクトを含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="69593acda81fc101407a624d2b481891a1f12ec4" translate="yes" xml:space="preserve">
          <source>When the source is a Ruby Integer or Float, &lt;a href=&quot;json#method-i-generate&quot;&gt;&lt;code&gt;JSON.generate&lt;/code&gt;&lt;/a&gt; returns a String containing a JSON number:</source>
          <target state="translated">ソースが&lt;a href=&quot;json#method-i-generate&quot;&gt; &lt;code&gt;JSON.generate&lt;/code&gt; &lt;/a&gt;またはFloatの場合、JSON.generateはJSON番号を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="13146497f68ba9d4752edb5d40eca808b37d3f91" translate="yes" xml:space="preserve">
          <source>When the source is a Ruby String, &lt;a href=&quot;json#method-i-generate&quot;&gt;&lt;code&gt;JSON.generate&lt;/code&gt;&lt;/a&gt; returns a String containing a JSON string (with double-quotes):</source>
          <target state="translated">ソースがRuby文字列の場合、&lt;a href=&quot;json#method-i-generate&quot;&gt; &lt;code&gt;JSON.generate&lt;/code&gt; &lt;/a&gt;はJSON文字列（二重引用符付き）を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="110cdfc1ec0b8351e54dff75064bdec512a4e115" translate="yes" xml:space="preserve">
          <source>When the source is neither an Array nor a Hash, the generated JSON data depends on the class of the source.</source>
          <target state="translated">ソースがArrayでもHashでもない場合、生成されるJSONデータはソースのクラスに依存します。</target>
        </trans-unit>
        <trans-unit id="c8c19248f7d4bf1cdc7599f16090c178355e760f" translate="yes" xml:space="preserve">
          <source>When the source is none of the above, &lt;a href=&quot;json#method-i-generate&quot;&gt;&lt;code&gt;JSON.generate&lt;/code&gt;&lt;/a&gt; returns a String containing a JSON string representation of the source:</source>
          <target state="translated">ソースが上記のいずれでもない場合、&lt;a href=&quot;json#method-i-generate&quot;&gt; &lt;code&gt;JSON.generate&lt;/code&gt; &lt;/a&gt;はソースのJSON文字列表現を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="c6e9231384b4074f5188561c38fd440169683025" translate="yes" xml:space="preserve">
          <source>When the specifier is a 2-element Array &lt;code&gt;array&lt;/code&gt;, returns &lt;code&gt;self.field(array)&lt;/code&gt;L</source>
          <target state="translated">指定子が2要素の配列 &lt;code&gt;array&lt;/code&gt; 場合、 &lt;code&gt;self.field(array)&lt;/code&gt; Lを返します。</target>
        </trans-unit>
        <trans-unit id="c51c59e1ee0a9a78553b8172b01d59774bdde73c" translate="yes" xml:space="preserve">
          <source>When the specifier is a Range of Integers &lt;code&gt;range&lt;/code&gt;, returns &lt;code&gt;self.field(range)&lt;/code&gt;:</source>
          <target state="translated">指定子が &lt;code&gt;self.field(range)&lt;/code&gt; Integers &lt;code&gt;range&lt;/code&gt; の場合、self.field（range）を返します。</target>
        </trans-unit>
        <trans-unit id="6eb8def20282771ae48b02a18b159577e7e7a995" translate="yes" xml:space="preserve">
          <source>When the specifier is a Range of headers &lt;code&gt;range&lt;/code&gt;, forms a new Range &lt;code&gt;new_range&lt;/code&gt; from the indexes of &lt;code&gt;range.start&lt;/code&gt; and &lt;code&gt;range.end&lt;/code&gt;, and returns &lt;code&gt;self.field(new_range)&lt;/code&gt;:</source>
          <target state="translated">指定子がヘッダー &lt;code&gt;range&lt;/code&gt; である場合、 &lt;code&gt;range.start&lt;/code&gt; および &lt;code&gt;range.end&lt;/code&gt; のインデックスから新しい範囲 &lt;code&gt;new_range&lt;/code&gt; を形成し、 &lt;code&gt;self.field(new_range)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d693df35e022a5382c2c4ba35951ae7476762e03" translate="yes" xml:space="preserve">
          <source>When the specifier is a header &lt;code&gt;header&lt;/code&gt;, returns &lt;code&gt;self.field(header)&lt;/code&gt;L</source>
          <target state="translated">指定子がヘッダーヘッダーの &lt;code&gt;header&lt;/code&gt; 、 &lt;code&gt;self.field(header)&lt;/code&gt; Lを返します。</target>
        </trans-unit>
        <trans-unit id="dc3baee250a68c5ef24896646c883ddf694d81c5" translate="yes" xml:space="preserve">
          <source>When the specifier is an Integer &lt;code&gt;index&lt;/code&gt;, returns &lt;code&gt;self.field(index)&lt;/code&gt;L</source>
          <target state="translated">指定子が整数 &lt;code&gt;index&lt;/code&gt; 場合、 &lt;code&gt;self.field(index)&lt;/code&gt; Lを返します。</target>
        </trans-unit>
        <trans-unit id="6ab13de78c98e74d5376e0d764ae19f380e6bdfb" translate="yes" xml:space="preserve">
          <source>When the status is V_CERTSTATUS_REVOKED, the time at which the certificate was revoked can be retrieved by &lt;a href=&quot;singleresponse#method-i-revocation_time&quot;&gt;&lt;code&gt;revocation_time&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ステータスがV_CERTSTATUS_REVOKEDである場合、証明書が失効した時刻を取得できる&lt;a href=&quot;singleresponse#method-i-revocation_time&quot;&gt; &lt;code&gt;revocation_time&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5858dc5555150f39d338769ce025ef260de792d" translate="yes" xml:space="preserve">
          <source>When the subprocess is Ruby (opened via &lt;code&gt;&quot;|-&quot;&lt;/code&gt;), the &lt;code&gt;open&lt;/code&gt; call returns &lt;code&gt;nil&lt;/code&gt;. If a block is associated with the open call, that block will run twice &amp;mdash; once in the parent and once in the child.</source>
          <target state="translated">サブプロセスがRuby（ &lt;code&gt;&quot;|-&quot;&lt;/code&gt; で &lt;code&gt;open&lt;/code&gt; ）の場合、open呼び出しは &lt;code&gt;nil&lt;/code&gt; を返します。ブロックがopen呼び出しに関連付けられている場合、そのブロックは2回実行されます。1回は親で、もう1回は子で実行されます。</target>
        </trans-unit>
        <trans-unit id="83d25b2c9c6e86d84880c1e859a1d803cd355e84" translate="yes" xml:space="preserve">
          <source>When the thread is next woken up, it will attempt to reacquire the lock.</source>
          <target state="translated">次にスレッドが起動すると、ロックの再取得を試みます。</target>
        </trans-unit>
        <trans-unit id="12b55e9c134699569de5f51a4ea19a1e6d23a3f0" translate="yes" xml:space="preserve">
          <source>When the two Integer arguments &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; are given, returns the substring of the given &lt;code&gt;length&lt;/code&gt; found in &lt;code&gt;self&lt;/code&gt; at offset &lt;code&gt;start&lt;/code&gt;:</source>
          <target state="translated">ときに、2つの整数の引数を &lt;code&gt;start&lt;/code&gt; し、 &lt;code&gt;length&lt;/code&gt; 与えられ、与えられたのストリングを返します &lt;code&gt;length&lt;/code&gt; で見つかった &lt;code&gt;self&lt;/code&gt; オフセットで &lt;code&gt;start&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="301b75aa8a3a301bb845826a50552156cb45c7fd" translate="yes" xml:space="preserve">
          <source>When this is called, the source should try to fetch the specs and install from remote path.</source>
          <target state="translated">これが呼ばれると、ソースはリモートパスからスペックを取得してインストールしようとします。</target>
        </trans-unit>
        <trans-unit id="b735d3be5d495e45bb14a34d7b727cf7bd6cbd4e" translate="yes" xml:space="preserve">
          <source>When this is called, the source should try to fetch the specs and install from the path provided by `app_cache_path`.</source>
          <target state="translated">これが呼ばれると、ソースは `app_cache_path` で指定されたパスから仕様を取得してインストールしようとします。</target>
        </trans-unit>
        <trans-unit id="d7df911a39ec9ba1d84d631cc1db2d3af874b2f4" translate="yes" xml:space="preserve">
          <source>When this method is called at end of file, it returns &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt;, depending on &lt;em&gt;length&lt;/em&gt;: &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;read(nil)&lt;/code&gt;, and &lt;code&gt;read(0)&lt;/code&gt; return &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;read(&lt;em&gt;positive_integer&lt;/em&gt;)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">この方法は、ファイルの最後に呼び出されたとき、それは戻り &lt;code&gt;nil&lt;/code&gt; または &lt;code&gt;&quot;&quot;&lt;/code&gt; に応じて、&lt;em&gt;長さ&lt;/em&gt;： &lt;code&gt;read&lt;/code&gt; 、 &lt;code&gt;read(nil)&lt;/code&gt; 、そして &lt;code&gt;read(0)&lt;/code&gt; リターン &lt;code&gt;&quot;&quot;&lt;/code&gt; （ &lt;code&gt;read(&lt;em&gt;positive_integer&lt;/em&gt;)&lt;/code&gt; 戻り &lt;code&gt;nil&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="a2331f9cd60f825f98c71b0815368d3609568435" translate="yes" xml:space="preserve">
          <source>When this method is called with a block, it passes the &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; object to the block, and closes the TCP connection and &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; session after the block has been executed.</source>
          <target state="translated">このメソッドがブロックで呼び出されると、&lt;a href=&quot;http&quot;&gt; &lt;code&gt;Net::HTTP&lt;/code&gt; &lt;/a&gt;オブジェクトがブロックに渡され、ブロックが実行された後、TCP接続と&lt;a href=&quot;http&quot;&gt; &lt;code&gt;HTTP&lt;/code&gt; &lt;/a&gt;セッションが閉じます。</target>
        </trans-unit>
        <trans-unit id="5dc25288736709b499881c528c97ab74774b4931" translate="yes" xml:space="preserve">
          <source>When this methods is called with a block, the newly-started &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; object is yielded to the block, and automatically closed after the block call finishes. Otherwise, it is the caller's responsibility to close the session when finished.</source>
          <target state="translated">このメソッドがブロックで呼び出されると、新しく開始された&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;オブジェクトはブロックに委譲され、ブロックの呼び出しが終了すると自動的に閉じられます。それ以外の場合は、終了時にセッションを閉じるのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="61571a3e54c0788ce7e8c7242e114edacb53e74e" translate="yes" xml:space="preserve">
          <source>When this module is included in another, Ruby calls &lt;a href=&quot;module#method-i-append_features&quot;&gt;&lt;code&gt;append_features&lt;/code&gt;&lt;/a&gt; in this module, passing it the receiving module in &lt;em&gt;mod&lt;/em&gt;. Ruby's default implementation is to add the constants, methods, and module variables of this module to &lt;em&gt;mod&lt;/em&gt; if this module has not already been added to &lt;em&gt;mod&lt;/em&gt; or one of its ancestors. See also &lt;a href=&quot;module#method-i-include&quot;&gt;&lt;code&gt;Module#include&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールが別のモジュールに含まれている場合、Rubyはこのモジュールで&lt;a href=&quot;module#method-i-append_features&quot;&gt; &lt;code&gt;append_features&lt;/code&gt; &lt;/a&gt;を呼び出し、&lt;em&gt;modで&lt;/em&gt;受信モジュールを渡します。 Rubyのデフォルトの実装では、このモジュールが&lt;em&gt;mod&lt;/em&gt;またはその祖先のいずれかにまだ追加されていない場合、このモジュールの定数、メソッド、およびモジュール変数を&lt;em&gt;modに&lt;/em&gt;追加します。&lt;a href=&quot;module#method-i-include&quot;&gt; &lt;code&gt;Module#include&lt;/code&gt; &lt;/a&gt;も参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70b855e9b7850de44ff3cdaec60ee0395a37291a" translate="yes" xml:space="preserve">
          <source>When this module is included in another, Ruby calls &lt;code&gt;append_features&lt;/code&gt; in this module, passing it the receiving module in &lt;em&gt;mod&lt;/em&gt;. Ruby's default implementation is to add the constants, methods, and module variables of this module to &lt;em&gt;mod&lt;/em&gt; if this module has not already been added to &lt;em&gt;mod&lt;/em&gt; or one of its ancestors. See also &lt;code&gt;Module#include&lt;/code&gt;.</source>
          <target state="translated">このモジュールが別のモジュールに含まれている場合、Rubyはこのモジュールの &lt;code&gt;append_features&lt;/code&gt; を呼び出し、受信モジュールを&lt;em&gt;modに&lt;/em&gt;渡します。Rubyのデフォルトの実装では、このモジュールが&lt;em&gt;mod&lt;/em&gt;またはその祖先の1つにまだ追加されていない場合、このモジュールの定数、メソッド、およびモジュール変数を&lt;em&gt;modに&lt;/em&gt;追加します。 &lt;code&gt;Module#include&lt;/code&gt; も参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a8d9f1ad4a714a2a9bced0e2b33da26cb3a26159" translate="yes" xml:space="preserve">
          <source>When this module is prepended in another, Ruby calls &lt;a href=&quot;module#method-i-prepend_features&quot;&gt;&lt;code&gt;prepend_features&lt;/code&gt;&lt;/a&gt; in this module, passing it the receiving module in &lt;em&gt;mod&lt;/em&gt;. Ruby's default implementation is to overlay the constants, methods, and module variables of this module to &lt;em&gt;mod&lt;/em&gt; if this module has not already been added to &lt;em&gt;mod&lt;/em&gt; or one of its ancestors. See also &lt;a href=&quot;module#method-i-prepend&quot;&gt;&lt;code&gt;Module#prepend&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールが別のモジュールの先頭に追加されると、Rubyはこのモジュールの&lt;a href=&quot;module#method-i-prepend_features&quot;&gt; &lt;code&gt;prepend_features&lt;/code&gt; &lt;/a&gt;を呼び出し、&lt;em&gt;modの&lt;/em&gt;受信モジュールを渡します。Rubyのデフォルトの実装では、このモジュールが&lt;em&gt;mod&lt;/em&gt;またはその祖先のいずれかにまだ追加されていない場合、このモジュールの定数、メソッド、およびモジュール変数を&lt;em&gt;mod&lt;/em&gt;にオーバーレイします。&lt;a href=&quot;module#method-i-prepend&quot;&gt; &lt;code&gt;Module#prepend&lt;/code&gt; &lt;/a&gt;も参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1d7b26629fc02c7912ca0855f925c2ef1d41a94" translate="yes" xml:space="preserve">
          <source>When this module is prepended in another, Ruby calls &lt;code&gt;prepend_features&lt;/code&gt; in this module, passing it the receiving module in &lt;em&gt;mod&lt;/em&gt;. Ruby's default implementation is to overlay the constants, methods, and module variables of this module to &lt;em&gt;mod&lt;/em&gt; if this module has not already been added to &lt;em&gt;mod&lt;/em&gt; or one of its ancestors. See also &lt;code&gt;Module#prepend&lt;/code&gt;.</source>
          <target state="translated">このモジュールが別のモジュールの先頭に追加されると、Rubyはこのモジュールの &lt;code&gt;prepend_features&lt;/code&gt; を呼び出し、&lt;em&gt;modに&lt;/em&gt;受信モジュールを渡します。Rubyのデフォルトの実装では、このモジュールが&lt;em&gt;mod&lt;/em&gt;またはその祖先の1つにまだ追加されていない場合、このモジュールの定数、メソッド、およびモジュール変数を&lt;em&gt;mod&lt;/em&gt;にオーバーレイします。 &lt;code&gt;Module#prepend&lt;/code&gt; も参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d29e5d761f069ea451c1efdef280f258d8cb0b4" translate="yes" xml:space="preserve">
          <source>When this thread is executing</source>
          <target state="translated">このスレッドが実行中の場合</target>
        </trans-unit>
        <trans-unit id="d9b19babd50cd24c92752b8bd4e6e9f98f1d33ee" translate="yes" xml:space="preserve">
          <source>When this thread is terminated normally</source>
          <target state="translated">このスレッドが正常に終了した場合</target>
        </trans-unit>
        <trans-unit id="799756127998598bf92cc32cfe51e06c9ba6a58a" translate="yes" xml:space="preserve">
          <source>When true is given or the option itself is not specified, environment variable `scheme_proxy' is examined. `scheme' is replaced by `http', `https' or `ftp'.</source>
          <target state="translated">true が与えられた場合やオプション自体が指定されていない場合は、環境変数 `scheme_proxy' を調べます。scheme' は `http'、`https' または `ftp' に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="fb39fabd7cc833e91af4874cb6821a2de6f23552" translate="yes" xml:space="preserve">
          <source>When true then &lt;a href=&quot;sslserver#method-i-accept&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; works exactly the same as &lt;a href=&quot;../../tcpserver#method-i-accept&quot;&gt;&lt;code&gt;TCPServer#accept&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">trueの場合、&lt;a href=&quot;sslserver#method-i-accept&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;../../tcpserver#method-i-accept&quot;&gt; &lt;code&gt;TCPServer#accept&lt;/code&gt; &lt;/a&gt;とまったく同じように機能します</target>
        </trans-unit>
        <trans-unit id="68a5c1460c0b95642ede48ac608144f9710d9600" translate="yes" xml:space="preserve">
          <source>When true, shows only usage.</source>
          <target state="translated">true の場合、使用法のみを表示します。</target>
        </trans-unit>
        <trans-unit id="19930cfa87d49669f333c5446d9c08f7ffe5433f" translate="yes" xml:space="preserve">
          <source>When two Integer arguments &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; are given, returns a new Array of size &lt;code&gt;length&lt;/code&gt; containing successive elements beginning at offset &lt;code&gt;start&lt;/code&gt;:</source>
          <target state="translated">場合2つの整数の引数を &lt;code&gt;start&lt;/code&gt; し、 &lt;code&gt;length&lt;/code&gt; 与えられ、サイズの新しい配列を返し &lt;code&gt;length&lt;/code&gt; オフセットで始まる連続した要素を含むが &lt;code&gt;start&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="baac687eae25c661cfd890f68fa5fe90942a72f5" translate="yes" xml:space="preserve">
          <source>When used without any arguments &lt;code&gt;super&lt;/code&gt; uses the arguments given to the subclass method. To send no arguments to the superclass method use &lt;code&gt;super()&lt;/code&gt;. To send specific arguments to the superclass method provide them manually like &lt;code&gt;super(2)&lt;/code&gt;.</source>
          <target state="translated">引数なしで使用すると、 &lt;code&gt;super&lt;/code&gt; はサブクラスメソッドに指定された引数を使用します。スーパークラスメソッドに引数を送信しない場合は、 &lt;code&gt;super()&lt;/code&gt; を使用します。スーパークラスメソッドに特定の引数を送信するには、 &lt;code&gt;super(2)&lt;/code&gt; のように手動で指定します。</target>
        </trans-unit>
        <trans-unit id="3539b6058ffc72c7537de536ed925af26efcaf45" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt;, try to avoid exposing it over the network if possible. If this isn't possible and you need to expose &lt;a href=&quot;drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; to the world, you &lt;strong&gt;must&lt;/strong&gt; configure an appropriate security policy with &lt;code&gt;DRb::ACL&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt;を使用する場合は、可能であればネットワーク経由で公開しないようにしてください。これが不可能であり、&lt;a href=&quot;drb&quot;&gt; &lt;code&gt;DRb&lt;/code&gt; &lt;/a&gt;を公​​開する必要がある場合は、 &lt;code&gt;DRb::ACL&lt;/code&gt; を使用して適切なセキュリティポリシーを構成する&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="00d1dbdd6b258471f8d64372c38e49b514d66a24" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;io#method-i-scanf&quot;&gt;&lt;code&gt;IO#scanf&lt;/code&gt;&lt;/a&gt; under Windows, make sure you open your files in binary mode:</source>
          <target state="translated">Windowsで&lt;a href=&quot;io#method-i-scanf&quot;&gt; &lt;code&gt;IO#scanf&lt;/code&gt; &lt;/a&gt;を使用する場合は、ファイルを必ずバイナリモードで開いてください。</target>
        </trans-unit>
        <trans-unit id="559b2649615c3f178d71958d11c3e25dad09c57e" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;object#method-i-dup&quot;&gt;&lt;code&gt;dup&lt;/code&gt;&lt;/a&gt;, any modules that the object has been extended with will not be copied.</source>
          <target state="translated">&lt;a href=&quot;object#method-i-dup&quot;&gt; &lt;code&gt;dup&lt;/code&gt; &lt;/a&gt;を使用する場合、オブジェクトが拡張されたモジュールはコピーされません。</target>
        </trans-unit>
        <trans-unit id="3fb1a59e9a75801763a2033ed96fc52bc2af3532" translate="yes" xml:space="preserve">
          <source>When using introspection methods such as Kernel#method or Kernel#methods refinements are not honored.</source>
          <target state="translated">Kernel#method や Kernel#methods のようなイントロスペクションメソッドを使用している場合、リファインメントは優先されません。</target>
        </trans-unit>
        <trans-unit id="46e59b48041fc19040192cc42d5f8a52bf6ef75c" translate="yes" xml:space="preserve">
          <source>When using method assignment you must always have a receiver. If you do not have a receiver, Ruby assumes you are assigning to a local variable:</source>
          <target state="translated">メソッドの代入を使用する際には、必ずレシーバを用意しなければなりません。もしレシーバを持っていない場合、Ruby はローカル変数に代入しているとみなします。</target>
        </trans-unit>
        <trans-unit id="41900a6df8e958d3483a018cf0e10928e84845e0" translate="yes" xml:space="preserve">
          <source>When using the Dante libsocks/libsocksd implementation it is configured as SOCKS_SERVER env var.</source>
          <target state="translated">Dante libsocks/libsocksd の実装を使用する場合、SOCKS_SERVER env var として設定されます。</target>
        </trans-unit>
        <trans-unit id="ed9e84ace3b98730725bbf283a48e92f6b09ca6c" translate="yes" xml:space="preserve">
          <source>When we encounter :type attribute with a source block, we add a plugin by name bundler-source-&amp;lt;type&amp;gt; to list of plugins to be installed.</source>
          <target state="translated">sourceブロックのある：type属性に遭遇すると、インストールするプラグインのリストにbundler-source- &amp;lt;type&amp;gt;という名前のプラグインを追加します。</target>
        </trans-unit>
        <trans-unit id="fcc8974dd8251f9055dd8d110b1e480e47369db1" translate="yes" xml:space="preserve">
          <source>When working with auto-complete there are some strategies that work well. To get some ideas you can take a look at the &lt;a href=&quot;https://git.ruby-lang.org/ruby.git/tree/lib/irb/completion.rb&quot;&gt;completion.rb&lt;/a&gt; file for irb.</source>
          <target state="translated">オートコンプリートを使用する場合、うまく機能する戦略がいくつかあります。いくつかのアイデアを得るには、irbの&lt;a href=&quot;https://git.ruby-lang.org/ruby.git/tree/lib/irb/completion.rb&quot;&gt;completion.rb&lt;/a&gt;ファイルを見てください。</target>
        </trans-unit>
        <trans-unit id="867e4c0a1734287fba82c09d5dc03b8870e06811" translate="yes" xml:space="preserve">
          <source>When working with auto-complete there are some strategies that work well. To get some ideas you can take a look at the &lt;a href=&quot;https://svn.ruby-lang.org/repos/ruby/trunk/lib/irb/completion.rb&quot;&gt;completion.rb&lt;/a&gt; file for irb.</source>
          <target state="translated">オートコンプリートを使用する場合、うまくいくいくつかの戦略があります。いくつかのアイデアを得るには、irbの&lt;a href=&quot;https://svn.ruby-lang.org/repos/ruby/trunk/lib/irb/completion.rb&quot;&gt;completion.rb&lt;/a&gt;ファイルをご覧ください。</target>
        </trans-unit>
        <trans-unit id="bc1b3d126a67d4ee871006ebce51b1d0f7429212" translate="yes" xml:space="preserve">
          <source>When writing documentation, define unusual or critical concepts in simple language. Provide links to authoritative sources, or add a general description to the top-level documentation for the class or module.</source>
          <target state="translated">ドキュメントを書く際には、珍しい概念や重要な概念を簡単な言葉で定義してください。権威あるソースへのリンクを提供したり、クラスやモジュールのトップレベルのドキュメントに一般的な説明を追加したりします。</target>
        </trans-unit>
        <trans-unit id="277f770aba94a0b0ede1211f2409084c6327cda7" translate="yes" xml:space="preserve">
          <source>When you &amp;ldquo;round trip&amp;rdquo; a non-String object from Ruby to JSON and back, you have a new String, instead of the object you began with:</source>
          <target state="translated">文字列以外のオブジェクトをRubyからJSONに「往復」すると、最初のオブジェクトではなく、新しい文字列が作成されます。</target>
        </trans-unit>
        <trans-unit id="69162c1563db48d15ddb6114954a7a27ec1c0fdb" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;stringscanner#method-i-scan&quot;&gt;&lt;code&gt;scan&lt;/code&gt;&lt;/a&gt; for a pattern (a regular expression), the match must occur at the character after the scan pointer. If you use &lt;a href=&quot;stringscanner#method-i-scan_until&quot;&gt;&lt;code&gt;scan_until&lt;/code&gt;&lt;/a&gt;, then the match can occur anywhere after the scan pointer. In both cases, the scan pointer moves &lt;em&gt;just beyond&lt;/em&gt; the last character of the match, ready to scan again from the next character onwards. This is demonstrated by the example above.</source>
          <target state="translated">パターン（正規表現）を&lt;a href=&quot;stringscanner#method-i-scan&quot;&gt; &lt;code&gt;scan&lt;/code&gt; &lt;/a&gt;する場合、スキャンポインターの後の文字で一致が発生する必要があります。&lt;a href=&quot;stringscanner#method-i-scan_until&quot;&gt; &lt;code&gt;scan_until&lt;/code&gt; &lt;/a&gt;を使用する場合、スキャンポインターの後の任意の場所で一致が発生する可能性があります。どちらの場合も、スキャンポインターは一致の最後の文字を&lt;em&gt;越え&lt;/em&gt;て移動し、次の文字以降から再びスキャンする準備ができています。これは上記の例で示されています。</target>
        </trans-unit>
        <trans-unit id="3f74667d22cd42749a4d7bf11f1078c7c8ae031a" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;require 'x'&lt;/code&gt;, this is what happens:</source>
          <target state="translated">&lt;code&gt;require 'x'&lt;/code&gt; を呼び出すと、次のようになります。</target>
        </trans-unit>
        <trans-unit id="facaf559a8dfff9fa2a0a6d3b0df990fae6dab9b" translate="yes" xml:space="preserve">
          <source>When you create or set a name-value pair in &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt;, the name and value are immediately set in the environment variables.</source>
          <target state="translated">&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt;で名前と値のペアを作成または設定すると、名前と値はすぐに環境変数に設定されます。</target>
        </trans-unit>
        <trans-unit id="0014325280ccf569b20505cb5b014ac25fceb4a6" translate="yes" xml:space="preserve">
          <source>When you define #&amp;lt;=&amp;gt;, you can include &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; to gain the methods #&amp;lt;=, #&amp;lt;, #==, #&amp;gt;=, #&amp;gt; and between?.</source>
          <target state="translated">＃&amp;lt;=&amp;gt;を定義するときに、&lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;を含めて、メソッド＃&amp;lt;=、＃&amp;lt;、＃==、＃&amp;gt; =、＃&amp;gt;およびbetween？を取得できます。</target>
        </trans-unit>
        <trans-unit id="b236a3777cc0b563b6929bc02bf1fefaba772dc8" translate="yes" xml:space="preserve">
          <source>When you define &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;, you can include &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; to gain the methods &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;between?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; を定義するときに、&lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;を含めてメソッド &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; および &lt;code&gt;between?&lt;/code&gt; を取得できますか？。</target>
        </trans-unit>
        <trans-unit id="3e3ed273a2c7fafd955fedc0b496164c2b3ef633" translate="yes" xml:space="preserve">
          <source>When you delete a name-value pair in &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt;, it is immediately deleted from the environment variables.</source>
          <target state="translated">&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt;で名前と値のペアを削除すると、環境変数からすぐに削除されます。</target>
        </trans-unit>
        <trans-unit id="da3d71e07053ce865b24ef2bee354da5533392ee" translate="yes" xml:space="preserve">
          <source>When you do not have direct access to the &lt;code&gt;ruby&lt;/code&gt; command (e.g. +rails console+, &lt;code&gt;irb&lt;/code&gt;), you could applyoptions using the &lt;code&gt;RUBYOPT&lt;/code&gt; environment variable:</source>
          <target state="translated">&lt;code&gt;ruby&lt;/code&gt; コマンドに直接アクセスできない場合（+ rails console +、 &lt;code&gt;irb&lt;/code&gt; など）、 &lt;code&gt;RUBYOPT&lt;/code&gt; 環境変数を使用してオプションを適用できます。</target>
        </trans-unit>
        <trans-unit id="7828ba905f86779e3adeb9f0cd701c740a3c3f34" translate="yes" xml:space="preserve">
          <source>When you get the value for a name in &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt;, the value is retrieved from among the current environment variables.</source>
          <target state="translated">&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt;で名前の値を取得すると、その値は現在の環境変数の中から取得されます。</target>
        </trans-unit>
        <trans-unit id="06819a9dce45dbb7db0a16125e620982bcfbd61b" translate="yes" xml:space="preserve">
          <source>When you know that the actual encoding of the data of an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object is not the default external encoding, you can reset its external encoding with &lt;a href=&quot;io#method-i-set_encoding&quot;&gt;&lt;code&gt;IO#set_encoding&lt;/code&gt;&lt;/a&gt; or set it at &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object creation (see &lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt; options).</source>
          <target state="translated">&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt;オブジェクトのデータの実際のエンコーディングがデフォルトの外部エンコーディングでないことがわかっている場合は、&lt;a href=&quot;io#method-i-set_encoding&quot;&gt; &lt;code&gt;IO#set_encoding&lt;/code&gt; &lt;/a&gt;でその外部エンコーディングをリセットするか、&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt;オブジェクトの作成時に設定&lt;a href=&quot;io#method-c-new&quot;&gt; &lt;code&gt;IO.new&lt;/code&gt; &lt;/a&gt;ます（IO.newオプションを参照）。</target>
        </trans-unit>
        <trans-unit id="c445f4c13d27f2238c0bcedeb518bb4c6354cea3" translate="yes" xml:space="preserve">
          <source>When you require &lt;code&gt;bigdecimal/util&lt;/code&gt;, the &lt;a href=&quot;bigdecimal#method-i-to_d&quot;&gt;&lt;code&gt;to_d&lt;/code&gt;&lt;/a&gt; method will be available on &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; and the native &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; classes:</source>
          <target state="translated">&lt;code&gt;bigdecimal/util&lt;/code&gt; が必要な場合、&lt;a href=&quot;bigdecimal#method-i-to_d&quot;&gt; &lt;code&gt;to_d&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;とネイティブの&lt;a href=&quot;integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;クラスで使用できます。</target>
        </trans-unit>
        <trans-unit id="8ceebeb03b2e2ddfdae107013f337f81fed46a54" translate="yes" xml:space="preserve">
          <source>When you send a message, Ruby looks up the method that matches the name of the message for the receiver. Methods are stored in classes and modules so method lookup walks these, not the objects themselves.</source>
          <target state="translated">メッセージを送信すると、Ruby は受信者のためにメッセージの名前にマッチするメソッドを探します。メソッドはクラスやモジュールに格納されているので、メソッド検索はオブジェクトそのものではなく、これらを探索します。</target>
        </trans-unit>
        <trans-unit id="d77f574b97c6a46deea29b669b4b10acd63d4ed6" translate="yes" xml:space="preserve">
          <source>When you specify a field converter, each parsed field is passed to the converter; its return value becomes the stored value for the field. A converter might, for example, convert an integer embedded in a String into a true Integer. (In fact, that's what built-in field converter &lt;code&gt;:integer&lt;/code&gt; does.)</source>
          <target state="translated">フィールドコンバーターを指定すると、解析された各フィールドがコンバーターに渡されます。その戻り値は、フィールドに格納された値になります。コンバーターは、たとえば、文字列に埋め込まれた整数を真の整数に変換する場合があります。（実際、これは組み込みのフィールドコンバーター &lt;code&gt;:integer&lt;/code&gt; が行うことです。）</target>
        </trans-unit>
        <trans-unit id="4d85ae42bf153ee05c774208240ff56177b0d9ff" translate="yes" xml:space="preserve">
          <source>When you specify a write converter for generating CSV, each field to be written is passed to the converter; its return value becomes the new value for the field. A converter might, for example, strip whitespace from a field.</source>
          <target state="translated">CSVを生成するための書き込みコンバータを指定すると、書き込まれる各フィールドがコンバータに渡され、その戻り値がそのフィールドの新しい値になります。コンバータは、例えば、フィールドから空白を削除することができます。</target>
        </trans-unit>
        <trans-unit id="517389b69654d36b82bf68edc55f75eff49bf59d" translate="yes" xml:space="preserve">
          <source>When you use an exclusive range (&lt;code&gt;...&lt;/code&gt;), the off condition is evaluated on the following iteration:</source>
          <target state="translated">排他的な範囲（ &lt;code&gt;...&lt;/code&gt; ）を使用する場合、オフ条件は次の反復で評価されます。</target>
        </trans-unit>
        <trans-unit id="87d1aec63af40013565932358958938e30fc55d1" translate="yes" xml:space="preserve">
          <source>When you use an inclusive range (&lt;code&gt;..&lt;/code&gt;), the off condition is evaluated when the on condition changes:</source>
          <target state="translated">両端を含む範囲（ &lt;code&gt;..&lt;/code&gt; ）を使用すると、オン条件が変化したときにオフ条件が評価されます。</target>
        </trans-unit>
        <trans-unit id="e8ad467af2389f4657a5b4e41049d57157ac2ab0" translate="yes" xml:space="preserve">
          <source>When you want to deactivate the trace, you must use &lt;a href=&quot;tracepoint#method-i-disable&quot;&gt;&lt;code&gt;TracePoint#disable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">トレースを非アクティブ化する場合は、&lt;a href=&quot;tracepoint#method-i-disable&quot;&gt; &lt;code&gt;TracePoint#disable&lt;/code&gt; を&lt;/a&gt;使用する必要があります</target>
        </trans-unit>
        <trans-unit id="c4f5dccd2423ab652b294fde85d54f2c6922975b" translate="yes" xml:space="preserve">
          <source>When zlib returns a Z_MEM_ERROR, usually if there was not enough memory.</source>
          <target state="translated">zlib が Z_MEM_ERROR を返すとき、通常は十分なメモリがなかった場合です。</target>
        </trans-unit>
        <trans-unit id="e8aaeac2311be307c50611583697e3bac5768084" translate="yes" xml:space="preserve">
          <source>When zlib returns a Z_NEED_DICT if a preset dictionary is needed at this point.</source>
          <target state="translated">この時点でプリセット辞書が必要な場合、zlibがZ_NEED_DICTを返す。</target>
        </trans-unit>
        <trans-unit id="224c54d067a55d4f6ea9e10af9bfe90fb16dd24f" translate="yes" xml:space="preserve">
          <source>When zlib returns a Z_STREAM_END is return if the end of the compressed data has been reached and all uncompressed out put has been produced.</source>
          <target state="translated">zlib が Z_STREAM_END を返すときは、圧縮データの終端に到達し、圧縮されていない out put がすべて生成されている場合に Z_STREAM_END を返す。</target>
        </trans-unit>
        <trans-unit id="71577ed2257ab496d5eed82beca3c2b3d5caea57" translate="yes" xml:space="preserve">
          <source>When zlib returns a Z_STREAM_ERROR, usually if the stream state was inconsistent.</source>
          <target state="translated">zlib が Z_STREAM_ERROR を返すとき、通常はストリームの状態が一貫していない場合です。</target>
        </trans-unit>
        <trans-unit id="e45d02ac8a337e35233999c2e8ea3e38561b265a" translate="yes" xml:space="preserve">
          <source>When zlib returns a Z_VERSION_ERROR, usually if the zlib library version is incompatible with the version assumed by the caller.</source>
          <target state="translated">zlib が Z_VERSION_ERROR を返すとき、通常は zlib ライブラリのバージョンが呼び出し元のバージョンと互換性がない場合です。</target>
        </trans-unit>
        <trans-unit id="ed039419904dbcc23dfbb6ae0effe5d6cdc41b51" translate="yes" xml:space="preserve">
          <source>Where to look for Bundler::Thor files.</source>
          <target state="translated">Bundler::Thorのファイルを探す場所。</target>
        </trans-unit>
        <trans-unit id="f7ae55a0189fd08ec0f64cdd102e3e576db6b29b" translate="yes" xml:space="preserve">
          <source>Whereas in the following example 'and' has been anchored to a non-word boundary so instead of matching the first 'and' it matches from the fourth letter of 'demand' instead:</source>
          <target state="translated">次の例では、「and」は単語以外の境界線に固定されているので、最初の「and」にマッチするのではなく、「demand」の4文字目からマッチします。</target>
        </trans-unit>
        <trans-unit id="5c8da67ec92f19c07493952d84020e6b4e62bb9a" translate="yes" xml:space="preserve">
          <source>Whereas the following pattern matches a vowel followed by a word character, twice, i.e. &lt;code&gt;[aeiou]\w[aeiou]\w&lt;/code&gt;: 'enor'.</source>
          <target state="translated">一方、次のパターンは、母音の後に単語文字が2回続く、つまり &lt;code&gt;[aeiou]\w[aeiou]\w&lt;/code&gt; aeiou ] \ w： 'enor'と一致します。</target>
        </trans-unit>
        <trans-unit id="5a6dbc14aa5b9940279aac215f2af4a9d039bab6" translate="yes" xml:space="preserve">
          <source>Whether &lt;a href=&quot;pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt; should do its best to prevent file corruptions, even when under unlikely-to-occur error conditions such as out-of-space conditions and other unusual OS filesystem errors. Setting this flag comes at the price in the form of a performance loss.</source>
          <target state="translated">領域不足やその他の異常なOSファイルシステムエラーなど、発生する可能性が低いエラー状態でも、&lt;a href=&quot;pstore&quot;&gt; &lt;code&gt;PStore&lt;/code&gt; &lt;/a&gt;がファイルの破損を防ぐために最善を尽くすべきかどうか。このフラグを設定すると、パフォーマンスが低下するという犠牲が伴います。</target>
        </trans-unit>
        <trans-unit id="c05c8551b561bf0d7033f82c25a5037ffb95b0ba" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;scanner&lt;/code&gt; uses fixed anchor mode or not.</source>
          <target state="translated">&lt;code&gt;scanner&lt;/code&gt; が固定アンカーモードを使用するかどうか。</target>
        </trans-unit>
        <trans-unit id="0071e0d4d702052eb58598a8f8cd3337d3ea79cb" translate="yes" xml:space="preserve">
          <source>Whether GVL is needed to call this function</source>
          <target state="translated">この関数を呼び出すのにGVLが必要かどうか</target>
        </trans-unit>
        <trans-unit id="07cc92442f7fd245de5fcf82f4428afd37149d70" translate="yes" xml:space="preserve">
          <source>Whether all the specs in self are in other TODO: rename to &lt;a href=&quot;../enumerable#method-i-include-3F&quot;&gt;&lt;code&gt;include?&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">自分自身のすべての仕様が他のTODOにあるかどうか：&lt;a href=&quot;../enumerable#method-i-include-3F&quot;&gt; &lt;code&gt;include?&lt;/code&gt; &lt;/a&gt;名前に変更しますか？</target>
        </trans-unit>
        <trans-unit id="41a2cbe87c76dc15e038bb15390bdf0921df4da5" translate="yes" xml:space="preserve">
          <source>Whether an exception should be raised on invalid arguments. &lt;code&gt;true&lt;/code&gt; by default, if passed &lt;code&gt;false&lt;/code&gt;, just returns &lt;code&gt;nil&lt;/code&gt; for invalid.</source>
          <target state="translated">無効な引数に対して例外を発生させるかどうか。デフォルトで &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;false&lt;/code&gt; が渡された場合、無効の場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="eeca8f7f1a482f601488474d8471ab61b171cd0f" translate="yes" xml:space="preserve">
          <source>Whether or not debug messages should be printed. By default, whether or not the `MOLINILLO_DEBUG` environment variable is set.</source>
          <target state="translated">デバッグメッセージを印刷するかどうか。デフォルトでは、環境変数 `MOLINILLO_DEBUG` が設定されているかどうか。</target>
        </trans-unit>
        <trans-unit id="055050b3c42a5dfefe6c016f2fc526d168dcecf3" translate="yes" xml:space="preserve">
          <source>Whether processing will be required in binary vs text</source>
          <target state="translated">バイナリ対テキストでの処理が必要かどうか</target>
        </trans-unit>
        <trans-unit id="37b2693caf77e2d35d624ebe459c26d1b81ec6a8" translate="yes" xml:space="preserve">
          <source>Whether this is an official release build of &lt;a href=&quot;../bundler&quot;&gt;&lt;code&gt;Bundler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これが&lt;a href=&quot;../bundler&quot;&gt; &lt;code&gt;Bundler&lt;/code&gt; の&lt;/a&gt;公式リリースビルドかどうか。</target>
        </trans-unit>
        <trans-unit id="3424af2ae870d266aa12fc8f24375939d71aa692" translate="yes" xml:space="preserve">
          <source>Whether to check the server certificate is valid for the hostname.</source>
          <target state="translated">サーバー証明書がホスト名に対して有効かどうかを確認するかどうか。</target>
        </trans-unit>
        <trans-unit id="47eb481e0b9951a6fc386e29e9264ce46fd5f2a9" translate="yes" xml:space="preserve">
          <source>Whether to close the underlying socket as well, when the SSL/TLS connection is shut down. This defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">SSL / TLS接続がシャットダウンされたときに、基になるソケットも閉じるかどうか。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bbc5bdb0fb907eadac82100142988e9e3d1f2761" translate="yes" xml:space="preserve">
          <source>Which is equivalent to</source>
          <target state="translated">に相当するものです。</target>
        </trans-unit>
        <trans-unit id="a6a90edcdd952e51a23189bec4261048453c6495" translate="yes" xml:space="preserve">
          <source>Which specific SSL version to use</source>
          <target state="translated">どの特定のSSLバージョンを使用するか</target>
        </trans-unit>
        <trans-unit id="64e55f9adeed9fe02e78f3c11e7c01d9fee1e2a7" translate="yes" xml:space="preserve">
          <source>Which will find the first occurrence of the desired symbol using the default library search order</source>
          <target state="translated">これは、デフォルトのライブラリの検索順序を使用して、目的のシンボルの最初の出現を見つけます。</target>
        </trans-unit>
        <trans-unit id="2964622063e07c9000f8e31a1c61247ed754b470" translate="yes" xml:space="preserve">
          <source>Which will find the next occurrence of a function in the search order after the current library.</source>
          <target state="translated">これは、現在のライブラリの次の検索順序で関数の次の出現を見つけます。</target>
        </trans-unit>
        <trans-unit id="f3d51272e994a0abb811de55dd5a106a4c6c31bd" translate="yes" xml:space="preserve">
          <source>While all directives are locale independent since Ruby 1.9, %Z is platform dependent. So, the result may differ even if the same format string is used in other systems such as C.</source>
          <target state="translated">Ruby 1.9 以降、すべてのディレクティブはロケールに依存しませんが、%Z はプラットフォームに依存します。そのため、C などの他のシステムで同じ書式の文字列を使用していても、結果が異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="dd53ccee029e508d0cd2e1b17ffa195d2d0cfcc1" translate="yes" xml:space="preserve">
          <source>While comments are typically ignored by Ruby, special &amp;ldquo;magic comments&amp;rdquo; contain directives that affect how the code is interpreted.</source>
          <target state="translated">コメントは通常Rubyによって無視されますが、特別な「魔法のコメント」には、コードの解釈方法に影響を与えるディレクティブが含まれています。</target>
        </trans-unit>
        <trans-unit id="ba0d9f9b698ba7d8acd81df4ce5ac6dd9cb59d8f" translate="yes" xml:space="preserve">
          <source>While it might not be a good idea to call these with user inputs, methods that used to be vulnerable such as &lt;code&gt;to_sym&lt;/code&gt;, &lt;code&gt;respond_to?&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;instance_variable_get&lt;/code&gt;, &lt;code&gt;const_get&lt;/code&gt;, etc. are no longer a threat.</source>
          <target state="translated">これらをユーザー入力で呼び出すのは良い考えではないかもしれませんが、 &lt;code&gt;to_sym&lt;/code&gt; や &lt;code&gt;respond_to?&lt;/code&gt; など、以前は脆弱であったメソッドですか？、 &lt;code&gt;method&lt;/code&gt; 、 &lt;code&gt;instance_variable_get&lt;/code&gt; 、 &lt;code&gt;const_get&lt;/code&gt; などは脅威ではなくなりました。</target>
        </trans-unit>
        <trans-unit id="47d77e2e09ce9f5a8df68c6135a5b77cd551a78c" translate="yes" xml:space="preserve">
          <source>While strings created from these locations will have this encoding, the encoding may not be valid. Be sure to check &lt;a href=&quot;string#method-i-valid_encoding-3F&quot;&gt;&lt;code&gt;String#valid_encoding?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらの場所から作成された文字列にはこのエンコードが含まれますが、エンコードが有効でない場合があります。確認してください&lt;a href=&quot;string#method-i-valid_encoding-3F&quot;&gt; &lt;code&gt;String#valid_encoding?&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa4c0848e11e76eb6e0418227b8f3448308ff868" translate="yes" xml:space="preserve">
          <source>While the following code prints only the first file's name at first, and the contents with line number counted through all named files.</source>
          <target state="translated">以下のコードでは、最初のファイル名だけを表示し、名前のついたすべてのファイルを通した行番号付きの内容を表示していますが、このコードでは、最初のファイル名だけを表示します。</target>
        </trans-unit>
        <trans-unit id="bb3cf6c997ca9a215984ef3df2e9d92db73f083f" translate="yes" xml:space="preserve">
          <source>While the modifier and standard versions have both a &amp;ldquo;test&amp;rdquo; expression and a &amp;ldquo;then&amp;rdquo; expression, they are not exact transformations of each other due to parse order. Here is an example that shows the difference:</source>
          <target state="translated">修飾子バージョンと標準バージョンには「test」式と「then」式の両方がありますが、解析順序のため、これらは相互の正確な変換ではありません。違いを示す例を次に示します。</target>
        </trans-unit>
        <trans-unit id="2a10c6383fc56ba04c525ab4f2ff265526899607" translate="yes" xml:space="preserve">
          <source>While the modifier and standard versions have both a &amp;ldquo;test&amp;rdquo; expression and a &amp;ldquo;then&amp;rdquo; statement, they are not exact transformations of each other due to parse order. Here is an example that shows the difference:</source>
          <target state="translated">While the modifier and standard versions have both a &amp;ldquo;test&amp;rdquo; expression and a &amp;ldquo;then&amp;rdquo; statement, they are not exact transformations of each other due to parse order. Here is an example that shows the difference:</target>
        </trans-unit>
        <trans-unit id="6ab2ee81a612a1fa2d1a336dda17ee485558ef01" translate="yes" xml:space="preserve">
          <source>While the ternary if is much shorter to write than the more verbose form, for readability it is recommended that the ternary if is only used for simple conditionals. Also, avoid using multiple ternary conditions in the same expression as this can be confusing.</source>
          <target state="translated">三項式の if は、より冗長な形式よりもはるかに短く書くことができますが、可読性のために、三項式の if は単純な条件式にのみ使用することをお勧めします。また、同じ式の中で複数の三項式の条件を使用することは、混乱を招く可能性があるので避けてください。</target>
        </trans-unit>
        <trans-unit id="49ccc8e2ed1ad3fdb6b52cfd86d42420a3657d55" translate="yes" xml:space="preserve">
          <source>While this example will work, for best optimization review the flags for your specific time, memory usage and output space requirements.</source>
          <target state="translated">この例では動作しますが、最適化のために、特定の時間、メモリ使用量、および出力スペースの要件に応じたフラグを確認してください。</target>
        </trans-unit>
        <trans-unit id="e79d5e20c0b5e362b8889a3dae32de3ba0ab5d0e" translate="yes" xml:space="preserve">
          <source>While we are ignoring the &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; exception, it's safe to write our resource allocation code. Then, the ensure block is where we can safely deallocate your resources.</source>
          <target state="translated">&lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;例外は無視していますが、リソース割り当てコードを記述しても安全です。次に、ensureブロックは、リソースを安全に割り当て解除できる場所です。</target>
        </trans-unit>
        <trans-unit id="89dae832e586f7f398ae1fec3b6c695b59d9e3bb" translate="yes" xml:space="preserve">
          <source>While writing the file, the internal encoding is not specified as it is only necessary for reading. While reading the file both the internal and external encoding must be specified to obtain the correct result.</source>
          <target state="translated">ファイルの書き込み中は、読み込み時にのみ必要なので、内部エンコーディングは指定しません。ファイルの読み込み時には、正しい結果を得るために内部エンコーディングと外部エンコーディングの両方を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d10be061e31ef356ec62f8b6a14f7ea32288f3e9" translate="yes" xml:space="preserve">
          <source>Whitespace is defined as any of the following characters: null, horizontal tab, line feed, vertical tab, form feed, carriage return, space.</source>
          <target state="translated">空白は、次のいずれかの文字として定義されます:null、水平タブ、改行、垂直タブ、フォームフィード、キャリッジリターン、スペース。</target>
        </trans-unit>
        <trans-unit id="f2eb562f5f35afb6c2c2b86e34cfa5b1d4a9d212" translate="yes" xml:space="preserve">
          <source>Why Is &lt;code&gt;dig&lt;/code&gt; Better?</source>
          <target state="translated">なぜ &lt;code&gt;dig&lt;/code&gt; 良いのですか？</target>
        </trans-unit>
        <trans-unit id="a6ff992046bf45b29e0cd85cf4f9fbe2d1c296cd" translate="yes" xml:space="preserve">
          <source>Width for option list portion of summary. Must be &lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要約のオプションリスト部分の幅。&lt;a href=&quot;numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="985e079dbf02e0a2e87c9008565b063f49bd6603" translate="yes" xml:space="preserve">
          <source>Width of left side (option part). In other words, the right side (description part) starts after &lt;code&gt;width&lt;/code&gt; columns.</source>
          <target state="translated">左側の幅（オプション部分）。言い換えると、右側（説明部分）は &lt;code&gt;width&lt;/code&gt; 列の後に始まります。</target>
        </trans-unit>
        <trans-unit id="376efdcea01e09b642955b02747a4f035b56e9a1" translate="yes" xml:space="preserve">
          <source>Width of left side, defaults to @summary_width.</source>
          <target state="translated">デフォルトは @summary_width です。</target>
        </trans-unit>
        <trans-unit id="82d254ac30717883c4522177f3cad4ed3b39b5b7" translate="yes" xml:space="preserve">
          <source>Wifi status (Linux 3.3)</source>
          <target state="translated">Wifi の状態 (Linux 3.3)</target>
        </trans-unit>
        <trans-unit id="0d48379d5874887ea91cfb73d33f94d2689a688a" translate="yes" xml:space="preserve">
          <source>Wildcards in &lt;a href=&quot;../../file#method-c-fnmatch&quot;&gt;&lt;code&gt;File.fnmatch&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../dir#method-c-glob&quot;&gt;&lt;code&gt;Dir.glob&lt;/code&gt;&lt;/a&gt; patterns do not match directory separators</source>
          <target state="translated">&lt;a href=&quot;../../file#method-c-fnmatch&quot;&gt; &lt;code&gt;File.fnmatch&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../dir#method-c-glob&quot;&gt; &lt;code&gt;Dir.glob&lt;/code&gt; &lt;/a&gt;パターンのワイルドカードがディレクトリセパレーターと一致しない</target>
        </trans-unit>
        <trans-unit id="1eff3a7ac1727420d41a9c5e056271461d65930c" translate="yes" xml:space="preserve">
          <source>Will invoke the list command.</source>
          <target state="translated">リストコマンドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="8af1dddd6c2192a020edaa51d45191a8693034d0" translate="yes" xml:space="preserve">
          <source>Will produce:</source>
          <target state="translated">生産します。</target>
        </trans-unit>
        <trans-unit id="2cd8ef312ea28a21eb2974a59ce6f6cbe825a821" translate="yes" xml:space="preserve">
          <source>Will raise an &lt;a href=&quot;engine/engineerror&quot;&gt;&lt;code&gt;EngineError&lt;/code&gt;&lt;/a&gt; if the digest is unavailable.</source>
          <target state="translated">引き上げる&lt;a href=&quot;engine/engineerror&quot;&gt; &lt;code&gt;EngineError&lt;/code&gt; を&lt;/a&gt;ダイジェストが利用できない場合。</target>
        </trans-unit>
        <trans-unit id="418e5714b13791a66db6a1d9d239c8d2fbcc6561" translate="yes" xml:space="preserve">
          <source>Will raise an error if no handlers are open.</source>
          <target state="translated">ハンドラが開かれていない場合にエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="7b653c1a1342f29b6e1ca16ef44b1d14c98a11e3" translate="yes" xml:space="preserve">
          <source>Win32</source>
          <target state="translated">Win32</target>
        </trans-unit>
        <trans-unit id="67968380b39bd25eae60f0aeab80420991bd0a51" translate="yes" xml:space="preserve">
          <source>Windows Exceptions</source>
          <target state="translated">Windows の例外</target>
        </trans-unit>
        <trans-unit id="13b24b6f52b2cd8215371500a36c30e998c71153" translate="yes" xml:space="preserve">
          <source>Windows does not support execute permissions separately from read permissions. On Windows, a file is only considered executable if it ends in .bat, .cmd, .com, or .exe.</source>
          <target state="translated">Windowsは、読み取り権限とは別に実行権限をサポートしていません。Windowsでは、ファイルの末尾が.bat、.cmd、.com、または.exeで終わる場合にのみ、ファイルは実行可能とみなされます。</target>
        </trans-unit>
        <trans-unit id="b9559cbba0c7d805b8e798afb8a5dc54194219b6" translate="yes" xml:space="preserve">
          <source>Winds back to the beginning</source>
          <target state="translated">初心に帰る風</target>
        </trans-unit>
        <trans-unit id="a48075ec1eccdc74cf6b06cc8c7e6b202101523b" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#class-CSV-label-Option+headers&quot;&gt;option headers&lt;/a&gt; case.</source>
          <target state="translated">&lt;a href=&quot;#class-CSV-label-Option+headers&quot;&gt;オプションのヘッダー&lt;/a&gt;ケース。</target>
        </trans-unit>
        <trans-unit id="24e3f966486cdd1449ca9c6f05212bab9a37a948" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#class-CSV-label-Option+headers&quot;&gt;option headers&lt;/a&gt;, returns each row as a &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#class-CSV-label-Option+headers&quot;&gt;オプションヘッダ&lt;/a&gt;として各行を返す&lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="0963c2131ee7d6bc1e5fe5c67121aaa44e863062" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#class-CSV-label-Option+headers&quot;&gt;option headers&lt;/a&gt;, returns the first row as a &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#class-CSV-label-Option+headers&quot;&gt;オプションヘッダ&lt;/a&gt;として最初の行を返す&lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="b6683f042f017abd13fb3347a47a825e285cfeff" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;array#method-i-insert&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt; you can add a new element to an array at any position.</source>
          <target state="translated">では&lt;a href=&quot;array#method-i-insert&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;あなたは任意の位置で配列に新しい要素を追加することができます。</target>
        </trans-unit>
        <trans-unit id="5c87a9af2bd34a133b2ee8e48debaa3efba59f4c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="36b9f4119c7f1b2e960961f7ea02e00b47a28d56" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;liberal_parsing&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;liberal_parsing&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="16592e6080f4157a64f3a74b339473e702fbf6e9" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;write_headers&lt;/code&gt;&amp;ldquo;:</source>
          <target state="translated">&lt;code&gt;write_headers&lt;/code&gt; 「：</target>
        </trans-unit>
        <trans-unit id="827ce0e1ead4f44f686b9d49cc60f1edc1983e2d" translate="yes" xml:space="preserve">
          <source>With Integer argument &lt;code&gt;n&lt;/code&gt; and no block, returns a new Array with at most &lt;code&gt;n&lt;/code&gt; elements, in ascending order per method &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">整数引数 &lt;code&gt;n&lt;/code&gt; を使用し、ブロックがない場合、メソッドごとに昇順で、最大 &lt;code&gt;n&lt;/code&gt; 個の要素を持つ新しい配列を返します &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4864d6b17f00fe7da325519f8b9df6262e449f03" translate="yes" xml:space="preserve">
          <source>With Option &lt;code&gt;headers&lt;/code&gt;</source>
          <target state="translated">オプション &lt;code&gt;headers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5404dd7a67d77738933245fb168cff8234a3d1b8" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;dig&lt;/code&gt; method, you can write (still erroneously, but avoiding the exception):</source>
          <target state="translated">&lt;code&gt;dig&lt;/code&gt; 方法、あなたは（まだ誤っが、例外を回避）書くことができます。</target>
        </trans-unit>
        <trans-unit id="fbef09ebbac0b6b1e24424e967ab8f4d6b3b11b3" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;dig&lt;/code&gt; method, you can write:</source>
          <target state="translated">&lt;code&gt;dig&lt;/code&gt; 方法、あなたは書くことができます。</target>
        </trans-unit>
        <trans-unit id="53ab880206d4513903d619ccb9f5b5ff32834573" translate="yes" xml:space="preserve">
          <source>With a block and argument &lt;code&gt;size&lt;/code&gt;, returns an Array of the given size; the block is called with each successive integer &lt;code&gt;index&lt;/code&gt;; the element for that &lt;code&gt;index&lt;/code&gt; is the return value from the block:</source>
          <target state="translated">ブロックと引数の &lt;code&gt;size&lt;/code&gt; 、指定されたサイズの配列を返します。ブロックは、連続する整数 &lt;code&gt;index&lt;/code&gt; ごとに呼び出されます。その &lt;code&gt;index&lt;/code&gt; の要素は、ブロックからの戻り値です。</target>
        </trans-unit>
        <trans-unit id="27649d705a0b4790a45e1225365202504ac95eff" translate="yes" xml:space="preserve">
          <source>With a block and no argument, calls the block &lt;code&gt;self.size-1&lt;/code&gt; times to compare elements; returns the element having the maximum value per the block:</source>
          <target state="translated">ブロックがあり、引数がない場合、ブロック &lt;code&gt;self.size-1&lt;/code&gt; 回呼び出して、要素を比較します。ブロックごとに最大値を持つ要素を返します。</target>
        </trans-unit>
        <trans-unit id="12f893685369613038350c99d975f27d5fc85184" translate="yes" xml:space="preserve">
          <source>With a block and no argument, calls the block &lt;code&gt;self.size-1&lt;/code&gt; times to compare elements; returns the element having the minimum value per the block:</source>
          <target state="translated">ブロックがあり、引数がない場合、ブロック &lt;code&gt;self.size-1&lt;/code&gt; 回呼び出して、要素を比較します。ブロックごとに最小値を持つ要素を返します。</target>
        </trans-unit>
        <trans-unit id="afe5970cf4bde6d6b756eafb5018610be3600b0a" translate="yes" xml:space="preserve">
          <source>With a block and no argument, or a single argument &lt;code&gt;0&lt;/code&gt;, ignores the block and returns a new empty Array.</source>
          <target state="translated">ブロックがあり、引数がない場合、または単一の引数が &lt;code&gt;0&lt;/code&gt; の場合、ブロックは無視され、新しい空の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="06e5ffea0d928e0ae40862168fb7fe3e75350113" translate="yes" xml:space="preserve">
          <source>With a block given and no argument, calls the block with each element in &lt;code&gt;self&lt;/code&gt;; returns &lt;code&gt;true&lt;/code&gt; if the block a truthy value for exactly one element, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">ブロックが指定され、引数がない場合、 &lt;code&gt;self&lt;/code&gt; 内の各要素を使用してブロックを呼び出します。ブロックが正確に1つの要素の &lt;code&gt;true&lt;/code&gt; 値である場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fb1e4d8e08f5f0ad7e8b33175c141e6c9420e7e9" translate="yes" xml:space="preserve">
          <source>With a block given and no argument, calls the block with each element in &lt;code&gt;self&lt;/code&gt;; returns &lt;code&gt;true&lt;/code&gt; if the block returns any truthy value, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">ブロックが指定され、引数がない場合、 &lt;code&gt;self&lt;/code&gt; 内の各要素を使用してブロックを呼び出します。ブロックが &lt;code&gt;true&lt;/code&gt; 値を返す場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="09de47bd72edd58a57d9d8f597a9c4a69644099b" translate="yes" xml:space="preserve">
          <source>With a block given and no argument, calls the block with each element in &lt;code&gt;self&lt;/code&gt;; returns &lt;code&gt;true&lt;/code&gt; if the block returns no truthy value, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">ブロックが指定され、引数がない場合、 &lt;code&gt;self&lt;/code&gt; 内の各要素を使用してブロックを呼び出します。ブロックが &lt;code&gt;true&lt;/code&gt; 値を返さない場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="af16a5cc755f5a0ccde3240394016611410c6792" translate="yes" xml:space="preserve">
          <source>With a block given and no argument, calls the block with each element in &lt;code&gt;self&lt;/code&gt;; returns &lt;code&gt;true&lt;/code&gt; if the block returns only truthy values, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">ブロックが指定され、引数がない場合、 &lt;code&gt;self&lt;/code&gt; 内の各要素を使用してブロックを呼び出します。ブロックが &lt;code&gt;true&lt;/code&gt; 値のみを返す場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="30469deaf8f734445e3d0ded4776ed9244c9b6e9" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block for each element; identifies (using method &lt;code&gt;eql?&lt;/code&gt;) and omits duplicate values, that is, those elements for which the block returns the same value:</source>
          <target state="translated">ブロックを指定して、各要素のブロックを呼び出します。（メソッド &lt;code&gt;eql?&lt;/code&gt; を使用して）識別し、重複する値、つまり、ブロックが同じ値を返す要素を省略します。</target>
        </trans-unit>
        <trans-unit id="02041a3772666824cb8e5f3794e5867393650e00" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block for each element; identifies (using method &lt;code&gt;eql?&lt;/code&gt;) and removes elements for which the block returns duplicate values.</source>
          <target state="translated">ブロックを指定して、各要素のブロックを呼び出します。（メソッド &lt;code&gt;eql?&lt;/code&gt; を使用して）識別し、ブロックが重複する値を返す要素を削除します。</target>
        </trans-unit>
        <trans-unit id="96277f63c5a7881db9499ef7219b6a44834208e3" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block with each String value returned by successive calls to &lt;a href=&quot;string#method-i-succ&quot;&gt;&lt;code&gt;String#succ&lt;/code&gt;&lt;/a&gt;; the first value is &lt;code&gt;self&lt;/code&gt;, the next is &lt;code&gt;self.succ&lt;/code&gt;, and so on; the sequence terminates when value &lt;code&gt;other_string&lt;/code&gt; is reached; returns &lt;code&gt;self&lt;/code&gt;:</source>
          <target state="translated">ブロックを指定して、&lt;a href=&quot;string#method-i-succ&quot;&gt; &lt;code&gt;String#succ&lt;/code&gt; &lt;/a&gt;への連続した呼び出しによって返される各String値を使用してブロックを呼び出します。最初の値は &lt;code&gt;self&lt;/code&gt; 、次の値は &lt;code&gt;self.succ&lt;/code&gt; などです。値 &lt;code&gt;other_string&lt;/code&gt; に達すると、シーケンスは終了します。 &lt;code&gt;self&lt;/code&gt; 返します：</target>
        </trans-unit>
        <trans-unit id="b55f487654fb65fec241084bbfcaaeafb6f30af0" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block with each parsed row, which has been formed into a &lt;a href=&quot;csv/row&quot;&gt;&lt;code&gt;CSV::Row&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">ブロックを指定して、&lt;a href=&quot;csv/row&quot;&gt; &lt;code&gt;CSV::Row&lt;/code&gt; &lt;/a&gt;オブジェクトに形成された解析済みの各行でブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="bba1ed4c9404c7bd0d5a132bd2059d67228f864d" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block with each parsed row:</source>
          <target state="translated">ブロックが与えられている場合、解析された各行のブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="0bc77b04c89254534c409bf2db1329bc0d8c45fb" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block with each successive element of &lt;code&gt;self&lt;/code&gt;; stops if the block returns &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;; returns a new &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing those elements for which the block returned a truthy value:</source>
          <target state="translated">与えられたブロックで、 &lt;code&gt;self&lt;/code&gt; の連続する各要素でブロックを呼び出します; ブロックが &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; を返すと停止します; ブロックが真の値を返した要素を含む新しい&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="ea1f0b371ab52bf8529a1494b05734ea9b1064df" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block with each successive element of &lt;code&gt;self&lt;/code&gt;; stops if the block returns &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;; returns a new &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;&lt;em&gt;omitting&lt;/em&gt; those elements for which the block returned a truthy value:</source>
          <target state="translated">与えられたブロックで、 &lt;code&gt;self&lt;/code&gt; の連続する各要素でブロックを呼び出します; ブロックが &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; を返すと停止します; ブロックが真の値を返した要素を&lt;em&gt;省略し&lt;/em&gt;た新しい&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2517345fd9b62d4c9674eb5e43d21aac7f19e93" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block with the computed &lt;code&gt;matchdata&lt;/code&gt; and returns the block's return value:</source>
          <target state="translated">ブロックを指定すると、計算された &lt;code&gt;matchdata&lt;/code&gt; を使用してブロックを呼び出し、ブロックの戻り値を返します。</target>
        </trans-unit>
        <trans-unit id="99121959081d0471f36b99f5b358a6b031ec2210" translate="yes" xml:space="preserve">
          <source>With a block given, calls the block with the created CSV object; returns the block's return value:</source>
          <target state="translated">ブロックが与えられている場合、作成されたCSVオブジェクトでブロックを呼び出し、ブロックの戻り値を返します。</target>
        </trans-unit>
        <trans-unit id="cd7e2936a26238d4563121ccd48923fb58510cd6" translate="yes" xml:space="preserve">
          <source>With a block scanf returns a 'map'-like array of transformations from the block &amp;ndash; that is, an array reflecting what the block did with each yielded result from the iterative scanf operation. (See &amp;ldquo;Block usage&amp;rdquo;, above.)</source>
          <target state="translated">ブロックを使用すると、scanfはブロックから変換の「マップ」のような配列を返します。つまり、ブロックは、scanfの反復操作から得られた各結果でブロックが行ったことを反映する配列です。（上記の「ブロックの使用法」を参照してください。）</target>
        </trans-unit>
        <trans-unit id="a2d330f029764e1a51b3a110cbff13386b31ee85" translate="yes" xml:space="preserve">
          <source>With a block, calls the block with each element pair; for each element pair &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, the block should return an integer:</source>
          <target state="translated">ブロックを使用して、各要素ペアでブロックを呼び出します。要素のペア &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; ごとに、ブロックは整数を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="232471b91d8a71480fa9e418409e594d1a2d2078" translate="yes" xml:space="preserve">
          <source>With a block, defines and installs a custom field converter.</source>
          <target state="translated">ブロックを使用して、カスタムフィールドコンバータを定義してインストールします。</target>
        </trans-unit>
        <trans-unit id="9ec5734f22f76a697ed8c7b38b68e793b3e131f3" translate="yes" xml:space="preserve">
          <source>With a block, returns a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; whose items are determined by the block. Each name/value pair in &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; is yielded to the block. The block must return a 2-element &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; (name/value pair) that is added to the return &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; as a key and value:</source>
          <target state="translated">ブロックを使用すると、アイテムがブロックによって決定される&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;を返します。&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; の&lt;/a&gt;各名前/値のペアは、ブロックに渡されます。ブロックは、キーと値として戻り&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;追加される2要素の&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;（名前と値のペア）を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="631b65b772661730798da417e3a022748145ec8e" translate="yes" xml:space="preserve">
          <source>With a different object:</source>
          <target state="translated">別のオブジェクトで</target>
        </trans-unit>
        <trans-unit id="ddaf3367bbeefcbd7a2fca7ce03c269a0151dae8" translate="yes" xml:space="preserve">
          <source>With a write converter:</source>
          <target state="translated">書き込み変換器を使って</target>
        </trans-unit>
        <trans-unit id="56b7c3d5bc559b61365b274036f42b97f5641fd1" translate="yes" xml:space="preserve">
          <source>With an argument &lt;code&gt;n&lt;/code&gt; and a block, returns a new Array with at most &lt;code&gt;n&lt;/code&gt; elements, in ascending order per the block:</source>
          <target state="translated">引数 &lt;code&gt;n&lt;/code&gt; とブロックを使用して、ブロックごとに昇順で、最大 &lt;code&gt;n&lt;/code&gt; 個の要素を持つ新しい配列を返します。</target>
        </trans-unit>
        <trans-unit id="341f85d4facbf99448cb6bb194e012e108772aaf" translate="yes" xml:space="preserve">
          <source>With an argument &lt;code&gt;n&lt;/code&gt; and a block, returns a new Array with at most &lt;code&gt;n&lt;/code&gt; elements, in descending order per the block:</source>
          <target state="translated">引数 &lt;code&gt;n&lt;/code&gt; とブロックを使用して、ブロックごとに降順で、最大 &lt;code&gt;n&lt;/code&gt; 個の要素を持つ新しい配列を返します。</target>
        </trans-unit>
        <trans-unit id="13506368e7a49e0e55fc5558f260b06f44cc1a5d" translate="yes" xml:space="preserve">
          <source>With an argument Integer &lt;code&gt;n&lt;/code&gt; and no block, returns a new Array with at most &lt;code&gt;n&lt;/code&gt; elements, in descending order per method &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">引数が整数 &lt;code&gt;n&lt;/code&gt; でブロックがない場合、メソッドごとに降順で最大 &lt;code&gt;n&lt;/code&gt; 個の要素を持つ新しい配列を返します &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cb328b983b55cd1a2b110750d3eb8ef78b4574cd" translate="yes" xml:space="preserve">
          <source>With argument &lt;code&gt;header&lt;/code&gt; and a block given, returns the field value for the header (first found) if the header exists; otherwise calls the block and returns its return value:</source>
          <target state="translated">引数 &lt;code&gt;header&lt;/code&gt; とブロックが指定されている場合、ヘッダーが存在する場合は、ヘッダーのフィールド値（最初に見つかったもの）を返します。それ以外の場合は、ブロックを呼び出してその戻り値を返します。</target>
        </trans-unit>
        <trans-unit id="20478d1d2f4b125f635fdd2819e32399e005fc16" translate="yes" xml:space="preserve">
          <source>With argument &lt;code&gt;index&lt;/code&gt; and a block, returns the element at offset &lt;code&gt;index&lt;/code&gt; if index is in range (and the block is not called); otherwise calls the block with index and returns its return value:</source>
          <target state="translated">引数 &lt;code&gt;index&lt;/code&gt; とブロックを使用すると、indexが範囲内にある場合（およびブロックが呼び出されない場合）、オフセット &lt;code&gt;index&lt;/code&gt; の要素を返します。それ以外の場合は、インデックスを使用してブロックを呼び出し、その戻り値を返します。</target>
        </trans-unit>
        <trans-unit id="7e1e4504dafb1c67178234572ba6458446b06cbe" translate="yes" xml:space="preserve">
          <source>With argument &lt;code&gt;obj&lt;/code&gt; and a block given, issues a warning, ignores the block, and returns the count of elements &lt;code&gt;eql?&lt;/code&gt; to &lt;code&gt;obj&lt;/code&gt;:</source>
          <target state="translated">引数 &lt;code&gt;obj&lt;/code&gt; とブロックが指定されている場合、警告を発行し、ブロックを無視して、要素の数を返します &lt;code&gt;eql?&lt;/code&gt; &lt;code&gt;obj&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="710158f2f5284a854bb4e1a41e8c74e59ddb98df" translate="yes" xml:space="preserve">
          <source>With argument &lt;code&gt;obj&lt;/code&gt; and no block given, replaces all elements with that one object:</source>
          <target state="translated">引数 &lt;code&gt;obj&lt;/code&gt; を指定し、ブロックを指定しない場合、すべての要素をその1つのオブジェクトに置き換えます。</target>
        </trans-unit>
        <trans-unit id="e20766e602f192ef23aac93ed5d240c30353c860" translate="yes" xml:space="preserve">
          <source>With argument &lt;code&gt;obj&lt;/code&gt;, returns the count of elements &lt;code&gt;eql?&lt;/code&gt; to &lt;code&gt;obj&lt;/code&gt;:</source>
          <target state="translated">引数 &lt;code&gt;obj&lt;/code&gt; を使用して、要素の数 &lt;code&gt;eql?&lt;/code&gt; 返しますか？ &lt;code&gt;obj&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9456feb964941f03af1d4958b37d7491523cb61b" translate="yes" xml:space="preserve">
          <source>With argument &lt;code&gt;object&lt;/code&gt; and no block, returns &lt;code&gt;true&lt;/code&gt; if for any key &lt;code&gt;key&lt;/code&gt;&lt;code&gt;h.assoc(key) == object&lt;/code&gt;:</source>
          <target state="translated">引数 &lt;code&gt;object&lt;/code&gt; あり、ブロックが &lt;code&gt;true&lt;/code&gt; 場合、任意の &lt;code&gt;h.assoc(key) == object&lt;/code&gt; に対してtrueを返し &lt;code&gt;key&lt;/code&gt; h.assoc（key）== object：</target>
        </trans-unit>
        <trans-unit id="edd0962a8436f222decd4b2ae6aaad71a91c4e0a" translate="yes" xml:space="preserve">
          <source>With argument &lt;code&gt;start&lt;/code&gt; and a block given, calls the block with each index from offset &lt;code&gt;start&lt;/code&gt; to the end; replaces the corresponding element with the block's return value:</source>
          <target state="translated">引数 &lt;code&gt;start&lt;/code&gt; とブロックを指定して、オフセットの &lt;code&gt;start&lt;/code&gt; から終了までの各インデックスでブロックを呼び出します。対応する要素をブロックの戻り値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="4e75b4535e38a69cad23ac95d74a2c3d89591185" translate="yes" xml:space="preserve">
          <source>With arguments &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; given, returns the field value for the header (first found) if the header exists, otherwise returns &lt;code&gt;default&lt;/code&gt;:</source>
          <target state="translated">引数 &lt;code&gt;header&lt;/code&gt; と &lt;code&gt;default&lt;/code&gt; を指定すると、ヘッダーが存在する場合はヘッダー（最初に見つかった）のフィールド値を返し、それ以外の場合は &lt;code&gt;default&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b598af9c7fc7d7daaa43677a5fd48b3b6e3ee371" translate="yes" xml:space="preserve">
          <source>With arguments &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;default_value&lt;/code&gt;, returns the element at offset &lt;code&gt;index&lt;/code&gt; if index is in range, otherwise returns &lt;code&gt;default_value&lt;/code&gt;:</source>
          <target state="translated">引数 &lt;code&gt;index&lt;/code&gt; と &lt;code&gt;default_value&lt;/code&gt; を使用すると、インデックスが範囲内にある場合はオフセット &lt;code&gt;index&lt;/code&gt; の要素を返し、それ以外の場合は &lt;code&gt;default_value&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0bab1e0df86bcb3a7693da0b6b1797abe133e376" translate="yes" xml:space="preserve">
          <source>With arguments &lt;code&gt;obj&lt;/code&gt; and &lt;code&gt;range&lt;/code&gt;, and a block given, calls the block with each index in the given range; replaces the corresponding element with the block's return value.</source>
          <target state="translated">引数 &lt;code&gt;obj&lt;/code&gt; と &lt;code&gt;range&lt;/code&gt; 、および指定されたブロックを使用して、指定された範囲内の各インデックスでブロックを呼び出します。対応する要素をブロックの戻り値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="65f7bb0b3722333752e4a0d3a4daa28dc006caec" translate="yes" xml:space="preserve">
          <source>With arguments &lt;code&gt;obj&lt;/code&gt; and Integer &lt;code&gt;start&lt;/code&gt;, and no block given, replaces elements based on the given start.</source>
          <target state="translated">引数 &lt;code&gt;obj&lt;/code&gt; とIntegerstart &lt;code&gt;start&lt;/code&gt; 、ブロックを指定しない場合、指定されたstartに基づいて要素を置き換えます。</target>
        </trans-unit>
        <trans-unit id="ee45a8925ca428f34662dc4a0a2e927ac0cdd88c" translate="yes" xml:space="preserve">
          <source>With arguments &lt;code&gt;obj&lt;/code&gt; and Range &lt;code&gt;range&lt;/code&gt;, and no block given, replaces elements based on the given range.</source>
          <target state="translated">引数 &lt;code&gt;obj&lt;/code&gt; とRangerangeが &lt;code&gt;range&lt;/code&gt; 、ブロックが指定されていない場合、指定された範囲に基づいて要素が置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f2075ce7dec4db882e896d8338810409904698a0" translate="yes" xml:space="preserve">
          <source>With arguments &lt;code&gt;obj&lt;/code&gt;, Integer &lt;code&gt;start&lt;/code&gt;, and Integer &lt;code&gt;length&lt;/code&gt;, and no block given, replaces elements based on the given &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;obj&lt;/code&gt; 、Integer &lt;code&gt;start&lt;/code&gt; 、およびInteger &lt;code&gt;length&lt;/code&gt; を使用し、ブロックを指定しない場合、指定された &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;length&lt;/code&gt; に基づいて要素を置き換えます。</target>
        </trans-unit>
        <trans-unit id="b90aa832dbf287691abd1509dae3d56583ae3eb9" translate="yes" xml:space="preserve">
          <source>With arguments &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt;, and a block given, calls the block for each index specified by start length; replaces the corresponding element with the block's return value.</source>
          <target state="translated">引数 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;length&lt;/code&gt; を指定し、ブロックを指定すると、startlengthで指定された各インデックスのブロックが呼び出されます。対応する要素をブロックの戻り値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="4eff56198935856a0b3de8dff4c0fe0fad802be0" translate="yes" xml:space="preserve">
          <source>With arguments and a block:</source>
          <target state="translated">引数とブロックで</target>
        </trans-unit>
        <trans-unit id="a17e8057b517a7f6574404b1a1cf525d41796686" translate="yes" xml:space="preserve">
          <source>With arguments and no block:</source>
          <target state="translated">引数付きでブロックはありません。</target>
        </trans-unit>
        <trans-unit id="befad1dd8ac122d368041c7a5af610d95587f37e" translate="yes" xml:space="preserve">
          <source>With default value &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">デフォルト値が &lt;code&gt;false&lt;/code&gt; の場合：</target>
        </trans-unit>
        <trans-unit id="d2bf8097647e404bda57c8150c1a995f48c8acc4" translate="yes" xml:space="preserve">
          <source>With headers:</source>
          <target state="translated">ヘッダーを使って</target>
        </trans-unit>
        <trans-unit id="1b7fd4813f33458f45b1fb2d2e13dd1616dc9b96" translate="yes" xml:space="preserve">
          <source>With it, you can get a handle to the instructions that make up a method or a proc, compile strings of Ruby code down to VM instructions, and disassemble instruction sequences to strings for easy inspection. It is mostly useful if you want to learn how YARV works, but it also lets you control various settings for the Ruby iseq compiler.</source>
          <target state="translated">これを使うと、メソッドやプロックを構成する命令を把握したり、Rubyコードの文字列をVM命令までコンパイルしたり、命令列を文字列に分解して簡単に調べたりすることができます。YARV がどのように動作するかを知りたい場合に便利ですが、Ruby iseq コンパイラの様々な設定を制御することもできます。</target>
        </trans-unit>
        <trans-unit id="a7f11632b0b09433e98c249e0172b8a4f993a115" translate="yes" xml:space="preserve">
          <source>With it, you can get a handle to the instructions that make up a method or a proc, compile strings of Ruby code down to VM instructions, and disassemble instruction sequences to strings for easy inspection. It is mostly useful if you want to learn how the Ruby VM works, but it also lets you control various settings for the Ruby iseq compiler.</source>
          <target state="translated">これを使えば、メソッドやプロックを構成する命令を把握したり、Rubyコードの文字列をVM命令までコンパイルしたり、命令列を文字列に分解して簡単に調べたりすることができます。Ruby VM がどのように動作するかを知りたい場合に便利ですが、Ruby iseq コンパイラの様々な設定を制御することもできます。</target>
        </trans-unit>
        <trans-unit id="a6e8d5af6caf83786470d3bd665365a5a2b11a8c" translate="yes" xml:space="preserve">
          <source>With keyword &lt;code&gt;capacity&lt;/code&gt;, returns a copy of &lt;code&gt;str&lt;/code&gt;; the given &lt;code&gt;capacity&lt;/code&gt; may set the size of the internal buffer, which may affect performance:</source>
          <target state="translated">キーワード &lt;code&gt;capacity&lt;/code&gt; 、 &lt;code&gt;str&lt;/code&gt; のコピーを返します。指定された &lt;code&gt;capacity&lt;/code&gt; によって内部バッファのサイズが設定され、パフォーマンスに影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="ff3c1b4776fe3f28bee3d479b523d630de8cdf26" translate="yes" xml:space="preserve">
          <source>With keyword &lt;code&gt;encoding&lt;/code&gt;, returns a copy of &lt;code&gt;str&lt;/code&gt; with the specified encoding:</source>
          <target state="translated">キーワード &lt;code&gt;encoding&lt;/code&gt; を使用すると、指定されたエンコーディングの &lt;code&gt;str&lt;/code&gt; のコピーが返されます。</target>
        </trans-unit>
        <trans-unit id="61cf0d5158b8514c28d7ffa37b758d8963e77e30" translate="yes" xml:space="preserve">
          <source>With no argument and a block given, calls the block with each element; returns the count of elements for which the block returns a truthy value:</source>
          <target state="translated">引数がなく、ブロックが与えられた場合、各要素でブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="0756fca26481eb5076a51c3c1ff581e2bbe7a2ab" translate="yes" xml:space="preserve">
          <source>With no argument and a block, calls the block with each key-value pair; returns &lt;code&gt;true&lt;/code&gt; if the block returns any truthy value, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">引数とブロックがない場合、各キーと値のペアでブロックを呼び出します。ブロックが &lt;code&gt;true&lt;/code&gt; 値を返す場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="427e301b2e910b3ca5597b8b5149e52e12cb5964" translate="yes" xml:space="preserve">
          <source>With no argument and no block, returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is non-empty; &lt;code&gt;false&lt;/code&gt; if empty.</source>
          <target state="translated">引数もブロックもない場合、 &lt;code&gt;self&lt;/code&gt; が空でない場合は &lt;code&gt;true&lt;/code&gt; を返します。空の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91a60fde0256a58d398ebc9fdefed9562d35a89e" translate="yes" xml:space="preserve">
          <source>With no argument and no block, returns the count of all elements:</source>
          <target state="translated">引数なし、ブロックなしで、すべての要素の数を返します。</target>
        </trans-unit>
        <trans-unit id="8ed85e7b515613cab06442ab1303ad464b78f83c" translate="yes" xml:space="preserve">
          <source>With no argument and no block, returns the element in &lt;code&gt;self&lt;/code&gt; having the maximum value per method &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">引数もブロックもない場合、メソッドごとに最大値を持つ &lt;code&gt;self&lt;/code&gt; の要素を返します &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d3625f779b7eff3b09cbca7a7fd566686f47e53e" translate="yes" xml:space="preserve">
          <source>With no argument and no block, returns the element in &lt;code&gt;self&lt;/code&gt; having the minimum value per method &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">引数もブロックもない場合、メソッドごとに最小値を持つ &lt;code&gt;self&lt;/code&gt; の要素を返します &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e7b07bd3dbe3e25411ba32c483d91ff70e1e5495" translate="yes" xml:space="preserve">
          <source>With no argument, a &lt;code&gt;nil&lt;/code&gt; argument, or with negative argument &lt;code&gt;level&lt;/code&gt;, flattens all levels:</source>
          <target state="translated">引数なし、 &lt;code&gt;nil&lt;/code&gt; 引数、または負の引数 &lt;code&gt;level&lt;/code&gt; を使用すると、すべてのレベルがフラットになります。</target>
        </trans-unit>
        <trans-unit id="171febf0f9fc2f4589061588de8731e2e31b3664" translate="yes" xml:space="preserve">
          <source>With no argument, joins using the output field separator, &lt;code&gt;$,&lt;/code&gt;:</source>
          <target state="translated">引数なしで、出力フィールドセパレータ &lt;code&gt;$,&lt;/code&gt; :を使用して結合します。</target>
        </trans-unit>
        <trans-unit id="aec4782f5c052410654d3de62ed415b91e7f385b" translate="yes" xml:space="preserve">
          <source>With no argument, or if the argument is the same as the receiver, return the receiver. Otherwise, create a new exception object of the same class as the receiver, but with a message equal to &lt;code&gt;string.to_str&lt;/code&gt;.</source>
          <target state="translated">引数がない場合、または引数がレシーバーと同じ場合は、レシーバーを返します。それ以外の場合は、レシーバーと同じクラスの新しい例外オブジェクトを作成しますが、メッセージは &lt;code&gt;string.to_str&lt;/code&gt; に等しくなります。</target>
        </trans-unit>
        <trans-unit id="424ed77a5f1e905d1a5b87bb6bf57658a924c734" translate="yes" xml:space="preserve">
          <source>With no argument, returns a new empty Hash.</source>
          <target state="translated">引数なしで、新しい空のハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="9000a84c92e5d9f3b1dceb4868d5c0161b2f902d" translate="yes" xml:space="preserve">
          <source>With no argument, returns the current default value:</source>
          <target state="translated">引数を指定しない場合は、現在のデフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="39bb579d34fa321c9e9dd38f314d991e8f20d3f4" translate="yes" xml:space="preserve">
          <source>With no arguments and a block given, calls the block with each index; replaces the corresponding element with the block's return value:</source>
          <target state="translated">引数がなく、ブロックが与えられている場合、各インデックスでブロックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="5b7697e9fb555cdb5fd8117055382f529db4dc53" translate="yes" xml:space="preserve">
          <source>With no arguments, raises a &lt;code&gt;RuntimeError&lt;/code&gt;. With a single &lt;code&gt;String&lt;/code&gt; argument, raises a &lt;code&gt;RuntimeError&lt;/code&gt; with the string as a message. Otherwise, the first parameter should be the name of an &lt;code&gt;Exception&lt;/code&gt; class (or an object that returns an &lt;code&gt;Exception&lt;/code&gt; object when sent an &lt;code&gt;exception&lt;/code&gt; message). The optional second parameter sets the message associated with the exception, and the third parameter is an array of callback information. Exceptions are caught by the &lt;code&gt;rescue&lt;/code&gt; clause of &lt;code&gt;begin...end&lt;/code&gt; blocks.</source>
          <target state="translated">With no arguments, raises a &lt;code&gt;RuntimeError&lt;/code&gt; . With a single &lt;code&gt;String&lt;/code&gt; argument, raises a &lt;code&gt;RuntimeError&lt;/code&gt; with the string as a message. Otherwise, the first parameter should be the name of an &lt;code&gt;Exception&lt;/code&gt; class (or an object that returns an &lt;code&gt;Exception&lt;/code&gt; object when sent an &lt;code&gt;exception&lt;/code&gt; message). The optional second parameter sets the message associated with the exception, and the third parameter is an array of callback information. Exceptions are caught by the &lt;code&gt;rescue&lt;/code&gt; clause of &lt;code&gt;begin...end&lt;/code&gt; blocks.</target>
        </trans-unit>
        <trans-unit id="324e23f3ec729fd2e62c14cd7053a676a4afb7df" translate="yes" xml:space="preserve">
          <source>With no arguments, raises the exception in &lt;code&gt;$!&lt;/code&gt; or raises a &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;$!&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. With a single &lt;code&gt;String&lt;/code&gt; argument, raises a &lt;code&gt;RuntimeError&lt;/code&gt; with the string as a message. Otherwise, the first parameter should be an &lt;code&gt;Exception&lt;/code&gt; class (or another object that returns an &lt;code&gt;Exception&lt;/code&gt; object when sent an &lt;code&gt;exception&lt;/code&gt; message). The optional second parameter sets the message associated with the exception (accessible via &lt;a href=&quot;exception#method-i-message&quot;&gt;&lt;code&gt;Exception#message&lt;/code&gt;&lt;/a&gt;), and the third parameter is an array of callback information (accessible via &lt;a href=&quot;exception#method-i-backtrace&quot;&gt;&lt;code&gt;Exception#backtrace&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;cause&lt;/code&gt; of the generated exception (accessible via &lt;a href=&quot;exception#method-i-cause&quot;&gt;&lt;code&gt;Exception#cause&lt;/code&gt;&lt;/a&gt;) is automatically set to the &amp;ldquo;current&amp;rdquo; exception (&lt;code&gt;$!&lt;/code&gt;), if any. An alternative value, either an &lt;code&gt;Exception&lt;/code&gt; object or &lt;code&gt;nil&lt;/code&gt;, can be specified via the &lt;code&gt;:cause&lt;/code&gt; argument.</source>
          <target state="translated">With no arguments, raises the exception in &lt;code&gt;$!&lt;/code&gt; or raises a &lt;a href=&quot;runtimeerror&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt; if &lt;code&gt;$!&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; . With a single &lt;code&gt;String&lt;/code&gt; argument, raises a &lt;code&gt;RuntimeError&lt;/code&gt; with the string as a message. Otherwise, the first parameter should be an &lt;code&gt;Exception&lt;/code&gt; class (or another object that returns an &lt;code&gt;Exception&lt;/code&gt; object when sent an &lt;code&gt;exception&lt;/code&gt; message). The optional second parameter sets the message associated with the exception (accessible via &lt;a href=&quot;exception#method-i-message&quot;&gt; &lt;code&gt;Exception#message&lt;/code&gt; &lt;/a&gt;), and the third parameter is an array of callback information (accessible via &lt;a href=&quot;exception#method-i-backtrace&quot;&gt; &lt;code&gt;Exception#backtrace&lt;/code&gt; &lt;/a&gt;). The &lt;code&gt;cause&lt;/code&gt; of the generated exception (accessible via &lt;a href=&quot;exception#method-i-cause&quot;&gt; &lt;code&gt;Exception#cause&lt;/code&gt; &lt;/a&gt;) is automatically set to the &amp;ldquo;current&amp;rdquo; exception ( &lt;code&gt;$!&lt;/code&gt; ), if any. An alternative value, either an &lt;code&gt;Exception&lt;/code&gt; object or &lt;code&gt;nil&lt;/code&gt; , can be specified via the &lt;code&gt;:cause&lt;/code&gt; argument.</target>
        </trans-unit>
        <trans-unit id="0207c22e74f6ff7908b356164154488cb22efdb8" translate="yes" xml:space="preserve">
          <source>With no arguments, raises the exception in &lt;code&gt;$!&lt;/code&gt; or raises a &lt;code&gt;RuntimeError&lt;/code&gt; if &lt;code&gt;$!&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. With a single &lt;code&gt;String&lt;/code&gt; argument, raises a &lt;code&gt;RuntimeError&lt;/code&gt; with the string as a message. Otherwise, the first parameter should be the name of an &lt;code&gt;Exception&lt;/code&gt; class (or an object that returns an &lt;code&gt;Exception&lt;/code&gt; object when sent an &lt;code&gt;exception&lt;/code&gt; message). The optional second parameter sets the message associated with the exception, and the third parameter is an array of callback information. Exceptions are caught by the &lt;code&gt;rescue&lt;/code&gt; clause of &lt;code&gt;begin...end&lt;/code&gt; blocks.</source>
          <target state="translated">引数がない場合、 &lt;code&gt;$!&lt;/code&gt; 例外が発生します。または、 &lt;code&gt;$!&lt;/code&gt; の場合は &lt;code&gt;RuntimeError&lt;/code&gt; を送出します。は &lt;code&gt;nil&lt;/code&gt; です。単一の &lt;code&gt;String&lt;/code&gt; 引数を指定すると、文字列をメッセージとして &lt;code&gt;RuntimeError&lt;/code&gt; が発生します。それ以外の場合、最初のパラメータは、 &lt;code&gt;Exception&lt;/code&gt; クラス（または &lt;code&gt;exception&lt;/code&gt; メッセージが送信されたときに &lt;code&gt;Exception&lt;/code&gt; オブジェクトを返すオブジェクト）の名前である必要があります。オプションの2番目のパラメーターは、例外に関連付けられたメッセージを設定し、3番目のパラメーターはコールバック情報の配列です。例外は、 &lt;code&gt;begin...end&lt;/code&gt; ブロックの &lt;code&gt;rescue&lt;/code&gt; 句によってキャッチされます。</target>
        </trans-unit>
        <trans-unit id="0d3bd24e8259d40fd2f95904b120921ddbe88129" translate="yes" xml:space="preserve">
          <source>With no arguments, returns the empty string with the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;&lt;code&gt;ASCII-8BIT&lt;/code&gt;:</source>
          <target state="translated">引数なしで、&lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt; &lt;code&gt;ASCII-8BIT&lt;/code&gt; で空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="3800ff1e5eeaafb690d4d6d252e60fb1bd2c6681" translate="yes" xml:space="preserve">
          <source>With no arguments, sets the default visibility for subsequently defined methods to private. With arguments, sets the named methods to have private visibility. &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; arguments are converted to symbols.</source>
          <target state="translated">引数なしで、後で定義されるメソッドのデフォルトの可視性をプライベートに設定します。引数を使用して、名前付きメソッドをプライベートな可視性を持つように設定します。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;引数はシンボルに変換されます。</target>
        </trans-unit>
        <trans-unit id="c9a249a76aed413508cd1db4a55b513daa463b0c" translate="yes" xml:space="preserve">
          <source>With no arguments, sets the default visibility for subsequently defined methods to private. With arguments, sets the named methods to have private visibility. &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; arguments are converted to symbols. An &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Symbols and/or Strings are also accepted.</source>
          <target state="translated">引数なしで、後で定義されるメソッドのデフォルトの可視性をプライベートに設定します。引数を使用して、名前付きメソッドをプライベートな可視性を持つように設定します。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;引数は記号に変換されます。記号や文字列の&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;も受け入れられます。</target>
        </trans-unit>
        <trans-unit id="eadc8d9ac6a20a7ffb99c720806b8cfcb2de2eaf" translate="yes" xml:space="preserve">
          <source>With no arguments, sets the default visibility for subsequently defined methods to protected. With arguments, sets the named methods to have protected visibility. &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; arguments are converted to symbols.</source>
          <target state="translated">引数なしで、後で定義されるメソッドのデフォルトの可視性をprotectedに設定します。引数を使用して、名前付きメソッドを設定して、可視性を保護します。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;引数はシンボルに変換されます。</target>
        </trans-unit>
        <trans-unit id="585dae89a9a1348c080a111fbea24a36b3654165" translate="yes" xml:space="preserve">
          <source>With no arguments, sets the default visibility for subsequently defined methods to protected. With arguments, sets the named methods to have protected visibility. &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; arguments are converted to symbols. An &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Symbols and/or Strings are also accepted.</source>
          <target state="translated">引数なしで、後で定義されるメソッドのデフォルトの可視性を保護に設定します。引数を使用して、名前付きメソッドを保護された可視性を持つように設定します。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;引数は記号に変換されます。記号や文字列の&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;も受け入れられます。</target>
        </trans-unit>
        <trans-unit id="79768ab769f57c747897700ec63955406c96ed1e" translate="yes" xml:space="preserve">
          <source>With no arguments, sets the default visibility for subsequently defined methods to public. With arguments, sets the named methods to have public visibility. &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; arguments are converted to symbols.</source>
          <target state="translated">引数なしで、後で定義されるメソッドのデフォルトの可視性をpublicに設定します。引数を使用して、名前付きメソッドをパブリック可視性に設定します。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;引数はシンボルに変換されます。</target>
        </trans-unit>
        <trans-unit id="04cb8e600e5265fab298d6e9a96065de22e0f2bc" translate="yes" xml:space="preserve">
          <source>With no arguments, sets the default visibility for subsequently defined methods to public. With arguments, sets the named methods to have public visibility. &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; arguments are converted to symbols. An &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Symbols and/or Strings are also accepted.</source>
          <target state="translated">引数なしで、後で定義されるメソッドのデフォルトの可視性をパブリックに設定します。引数を使用して、名前付きメソッドを公開するように設定します。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;引数は記号に変換されます。記号や文字列の&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;も受け入れられます。</target>
        </trans-unit>
        <trans-unit id="7fd5327df4359720f0f1a848c138db6fc2b498df" translate="yes" xml:space="preserve">
          <source>With no arguments:</source>
          <target state="translated">議論なしで。</target>
        </trans-unit>
        <trans-unit id="61753c649f8e70b3b8a56f6925c9048be344f43d" translate="yes" xml:space="preserve">
          <source>With no associated block, &lt;a href=&quot;file#method-c-open&quot;&gt;&lt;code&gt;File.open&lt;/code&gt;&lt;/a&gt; is a synonym for &lt;a href=&quot;file#method-c-new&quot;&gt;&lt;code&gt;File.new&lt;/code&gt;&lt;/a&gt;. If the optional code block is given, it will be passed the opened &lt;code&gt;file&lt;/code&gt; as an argument and the &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object will automatically be closed when the block terminates. The value of the block will be returned from &lt;a href=&quot;file#method-c-open&quot;&gt;&lt;code&gt;File.open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">With no associated block, &lt;a href=&quot;file#method-c-open&quot;&gt; &lt;code&gt;File.open&lt;/code&gt; &lt;/a&gt; is a synonym for &lt;a href=&quot;file#method-c-new&quot;&gt; &lt;code&gt;File.new&lt;/code&gt; &lt;/a&gt;. If the optional code block is given, it will be passed the opened &lt;code&gt;file&lt;/code&gt; as an argument and the &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; object will automatically be closed when the block terminates. The value of the block will be returned from &lt;a href=&quot;file#method-c-open&quot;&gt; &lt;code&gt;File.open&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cc390c39d7c64c37e179421dab9c31148fc91e4d" translate="yes" xml:space="preserve">
          <source>With no associated block, &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;IO.open&lt;/code&gt;&lt;/a&gt; is a synonym for &lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt;. If the optional code block is given, it will be passed &lt;code&gt;io&lt;/code&gt; as an argument, and the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object will automatically be closed when the block terminates. In this instance, &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;IO.open&lt;/code&gt;&lt;/a&gt; returns the value of the block.</source>
          <target state="translated">With no associated block, &lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;IO.open&lt;/code&gt; &lt;/a&gt; is a synonym for &lt;a href=&quot;io#method-c-new&quot;&gt; &lt;code&gt;IO.new&lt;/code&gt; &lt;/a&gt;. If the optional code block is given, it will be passed &lt;code&gt;io&lt;/code&gt; as an argument, and the &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; object will automatically be closed when the block terminates. In this instance, &lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;IO.open&lt;/code&gt; &lt;/a&gt; returns the value of the block.</target>
        </trans-unit>
        <trans-unit id="07e7c6a6b853ed49275b9fb84e74e7a5b5d6e64c" translate="yes" xml:space="preserve">
          <source>With no associated block, &lt;code&gt;File.open&lt;/code&gt; is a synonym for &lt;a href=&quot;file#method-c-new&quot;&gt;&lt;code&gt;File.new&lt;/code&gt;&lt;/a&gt;. If the optional code block is given, it will be passed the opened &lt;code&gt;file&lt;/code&gt; as an argument and the &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object will automatically be closed when the block terminates. The value of the block will be returned from &lt;code&gt;File.open&lt;/code&gt;.</source>
          <target state="translated">無関連するブロックでは、 &lt;code&gt;File.open&lt;/code&gt; は同義語です&lt;a href=&quot;file#method-c-new&quot;&gt; &lt;code&gt;File.new&lt;/code&gt; &lt;/a&gt;。オプションのコードブロックを指定すると、開いている &lt;code&gt;file&lt;/code&gt; が引数として渡され、ブロックが終了すると&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトが自動的に閉じます。ブロックの値は &lt;code&gt;File.open&lt;/code&gt; から返されます。</target>
        </trans-unit>
        <trans-unit id="639adbe4f68ac58c7ae410f29329bedaa75ba186" translate="yes" xml:space="preserve">
          <source>With no associated block, &lt;code&gt;IO.open&lt;/code&gt; is a synonym for &lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt;. If the optional code block is given, it will be passed &lt;code&gt;io&lt;/code&gt; as an argument, and the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object will automatically be closed when the block terminates. In this instance, &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;IO.open&lt;/code&gt;&lt;/a&gt; returns the value of the block.</source>
          <target state="translated">無関連するブロックでは、 &lt;code&gt;IO.open&lt;/code&gt; は同義語です&lt;a href=&quot;io#method-c-new&quot;&gt; &lt;code&gt;IO.new&lt;/code&gt; &lt;/a&gt;。オプションのコードブロックが指定されている場合は、引数として &lt;code&gt;io&lt;/code&gt; が渡され、ブロックが終了すると&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt;オブジェクトが自動的に閉じられます。このインスタンスでは、&lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;IO.open&lt;/code&gt; &lt;/a&gt;はブロックの値を返します。</target>
        </trans-unit>
        <trans-unit id="64800e9470ab7e72c39e9fef77711beea2fb0e99" translate="yes" xml:space="preserve">
          <source>With no block and a single Array argument &lt;code&gt;array&lt;/code&gt;, returns a new Array formed from &lt;code&gt;array&lt;/code&gt;:</source>
          <target state="translated">ブロックがなく、単一の配列引数 &lt;code&gt;array&lt;/code&gt; 場合、 &lt;code&gt;array&lt;/code&gt; から形成された新しい配列を返します。</target>
        </trans-unit>
        <trans-unit id="0d36078dad2dfe06d3e0cd209359f555784d74cf" translate="yes" xml:space="preserve">
          <source>With no block and a single Integer argument &lt;code&gt;size&lt;/code&gt;, returns a new Array of the given size whose elements are all &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">ブロックがなく、整数の引数 &lt;code&gt;size&lt;/code&gt; 1つである場合、要素がすべて &lt;code&gt;nil&lt;/code&gt; である指定されたサイズの新しい配列を返します。</target>
        </trans-unit>
        <trans-unit id="c8b2b7941837d83fbb544de813f576bba5972edd" translate="yes" xml:space="preserve">
          <source>With no block and arguments &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;default_value&lt;/code&gt;, returns an Array of the given size; each element is that same &lt;code&gt;default_value&lt;/code&gt;:</source>
          <target state="translated">ブロックと引数の &lt;code&gt;size&lt;/code&gt; と &lt;code&gt;default_value&lt;/code&gt; がない場合、指定されたサイズの配列を返します。各要素は同じ &lt;code&gt;default_value&lt;/code&gt; です：</target>
        </trans-unit>
        <trans-unit id="b7e9fbed4f8617a69f4ea85eba992f2de3a7be36" translate="yes" xml:space="preserve">
          <source>With no block and no arguments, returns a new empty Array object.</source>
          <target state="translated">ブロックも引数もない場合は、新しい空の配列オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="6283a4f06f105cc53b3b8550a6de759182b961cb" translate="yes" xml:space="preserve">
          <source>With no block given and no argument, returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; contains only truthy elements, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">ブロックが指定されておらず、引数も指定されていない場合、 &lt;code&gt;self&lt;/code&gt; に &lt;code&gt;true&lt;/code&gt; 要素のみが含まれている場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="94bf2a78ff5dcaad3a9c8d09a4b3bc2c89479f63" translate="yes" xml:space="preserve">
          <source>With no block given and no argument, returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; has any truthy element, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">ブロックが指定されておらず、引数も指定されていない場合、 &lt;code&gt;self&lt;/code&gt; に &lt;code&gt;true&lt;/code&gt; 要素がある場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="253aa7850f340950ed39789b8af2bc953f033a7c" translate="yes" xml:space="preserve">
          <source>With no block given and no argument, returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; has exactly one truthy element, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">ブロックが指定されておらず、引数も指定されていない場合、 &lt;code&gt;self&lt;/code&gt; に &lt;code&gt;true&lt;/code&gt; 要素が1つだけある場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2d8d93eb19783d23dc46f4a547a6d007f6c312c8" translate="yes" xml:space="preserve">
          <source>With no block given and no argument, returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; has no truthy elements, &lt;code&gt;false&lt;/code&gt; otherwise:</source>
          <target state="translated">ブロックが指定されておらず、引数も指定されていない場合、 &lt;code&gt;self&lt;/code&gt; に &lt;code&gt;true&lt;/code&gt; 要素がない場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f30eec4eaaa7d3a1fdd5a9d6f49773387f5a2059" translate="yes" xml:space="preserve">
          <source>With no block given, identifies and omits duplicates using method &lt;code&gt;eql?&lt;/code&gt; to compare.</source>
          <target state="translated">ブロックが指定されていない場合、メソッド &lt;code&gt;eql?&lt;/code&gt; を使用して重複を識別して省略します。比べる。</target>
        </trans-unit>
        <trans-unit id="080b4790079bf3b688c5643bf5ea2222f7970d78" translate="yes" xml:space="preserve">
          <source>With no block given, identifies and removes elements using method &lt;code&gt;eql?&lt;/code&gt; to compare.</source>
          <target state="translated">ブロックが指定されていない場合、メソッド &lt;code&gt;eql?&lt;/code&gt; を使用して要素を識別および削除します。比べる。</target>
        </trans-unit>
        <trans-unit id="eb83f356819911ad483b1f8abe6b6702c3cf7c32" translate="yes" xml:space="preserve">
          <source>With no block given, returns a &lt;a href=&quot;csv/table&quot;&gt;&lt;code&gt;CSV::Table&lt;/code&gt;&lt;/a&gt; object formed from the source.</source>
          <target state="translated">ブロックが指定されていない場合、ソースから形成された&lt;a href=&quot;csv/table&quot;&gt; &lt;code&gt;CSV::Table&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="995adc08c60fe966a33959e73e6038030507c88f" translate="yes" xml:space="preserve">
          <source>With no block given, returns a CSV object.</source>
          <target state="translated">ブロックが指定されていない場合、CSVオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="0231c2a95f3705796eaf86c1be3f0f31d99457e6" translate="yes" xml:space="preserve">
          <source>With no block given, returns a new CSV object.</source>
          <target state="translated">ブロックが指定されていない場合、新しいCSVオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="7483f872c3e62470533e717ff9fcf5f6dc97060a" translate="yes" xml:space="preserve">
          <source>With no block given, returns a new Enumerator:</source>
          <target state="translated">ブロックが与えられていない場合、新しいEnumeratorを返します。</target>
        </trans-unit>
        <trans-unit id="74501fb6df5022fdb7949a54250fd96e6e96e8a8" translate="yes" xml:space="preserve">
          <source>With no block given, returns an Array of Arrays formed from the source.</source>
          <target state="translated">ブロックが指定されていない場合は、ソースから形成された配列の配列を返します。</target>
        </trans-unit>
        <trans-unit id="e93914dc874499375b60d5bf46ef6ec664466b2e" translate="yes" xml:space="preserve">
          <source>With no block given, returns the computed &lt;code&gt;matchdata&lt;/code&gt;:</source>
          <target state="translated">ブロックが指定されていない場合、計算された &lt;code&gt;matchdata&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="020457f984086724158f7a30532163bc4aa462c7" translate="yes" xml:space="preserve">
          <source>With no block, &lt;code&gt;open&lt;/code&gt; is a synonym for &lt;a href=&quot;dir#method-c-new&quot;&gt;&lt;code&gt;Dir::new&lt;/code&gt;&lt;/a&gt;. If a block is present, it is passed &lt;em&gt;aDir&lt;/em&gt; as a parameter. The directory is closed at the end of the block, and &lt;a href=&quot;dir#method-c-open&quot;&gt;&lt;code&gt;Dir::open&lt;/code&gt;&lt;/a&gt; returns the value of the block.</source>
          <target state="translated">With no block, &lt;code&gt;open&lt;/code&gt; is a synonym for &lt;a href=&quot;dir#method-c-new&quot;&gt; &lt;code&gt;Dir::new&lt;/code&gt; &lt;/a&gt;. If a block is present, it is passed &lt;em&gt;aDir&lt;/em&gt; as a parameter. The directory is closed at the end of the block, and &lt;a href=&quot;dir#method-c-open&quot;&gt; &lt;code&gt;Dir::open&lt;/code&gt; &lt;/a&gt; returns the value of the block.</target>
        </trans-unit>
        <trans-unit id="56d03a6831082c55424d499b230f1974c4805b1d" translate="yes" xml:space="preserve">
          <source>With no block, &lt;code&gt;open&lt;/code&gt; is a synonym for &lt;code&gt;Dir::new&lt;/code&gt;. If a block is present, it is passed &lt;em&gt;aDir&lt;/em&gt; as a parameter. The directory is closed at the end of the block, and &lt;code&gt;Dir::open&lt;/code&gt; returns the value of the block.</source>
          <target state="translated">ブロックがない場合、 &lt;code&gt;open&lt;/code&gt; は &lt;code&gt;Dir::new&lt;/code&gt; 同義語です。ブロックが存在する場合、&lt;em&gt;aDir&lt;/em&gt;がパラメーターとして渡されます。ディレクトリはブロックの最後で閉じられ、 &lt;code&gt;Dir::open&lt;/code&gt; はブロックの値を返します。</target>
        </trans-unit>
        <trans-unit id="5d0b10e7f41560eb4f5034ded8cd99ea8385a6e9" translate="yes" xml:space="preserve">
          <source>With no block, compares elements using operator &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; (see &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">ブロックがない場合、演算子 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; を使用して要素を比較します（&lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="000ab05f09582573142ec193eb35d2f1a882408b" translate="yes" xml:space="preserve">
          <source>With no block, installs a field converter (a Proc).</source>
          <target state="translated">ブロックがない場合は、フィールドコンバータ(Proc)をインストールします。</target>
        </trans-unit>
        <trans-unit id="9c0655b2a42440e3b4029598f4232f65d67423f8" translate="yes" xml:space="preserve">
          <source>With no block, installs a field converter:</source>
          <target state="translated">ブロックがなく、フィールドコンバータをインストールします。</target>
        </trans-unit>
        <trans-unit id="16748f0e012f6534271c9dae8ac6917112354d9a" translate="yes" xml:space="preserve">
          <source>With no block, returns a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; containing all name/value pairs from ENV:</source>
          <target state="translated">ブロックなしで、ENVからのすべての名前/値のペアを含む&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="cb69b287fcb8f6088f8e860a4e5a198ab8b384c7" translate="yes" xml:space="preserve">
          <source>With no conversion, all parsed fields in all rows become Strings:</source>
          <target state="translated">変換を行わない場合、すべての行のすべてのパースされたフィールドは文字列になります。</target>
        </trans-unit>
        <trans-unit id="a188011d3193b6ff725d5caf684ca7dea25bb773" translate="yes" xml:space="preserve">
          <source>With no write converter:</source>
          <target state="translated">書き込みコンバータがない状態で</target>
        </trans-unit>
        <trans-unit id="a873a3e1747ae6ce057518de6968d16a15ad30b6" translate="yes" xml:space="preserve">
          <source>With non-negative Integer argument &lt;code&gt;level&lt;/code&gt;, flattens recursively through &lt;code&gt;level&lt;/code&gt; levels:</source>
          <target state="translated">負でない整数引数 &lt;code&gt;level&lt;/code&gt; 、 &lt;code&gt;level&lt;/code&gt; レベルを通じて再帰的にフラット化されます。</target>
        </trans-unit>
        <trans-unit id="57ff788f1d15c5b2ec4a2a25062aeea0e169f196" translate="yes" xml:space="preserve">
          <source>With progname.</source>
          <target state="translated">プログネームで。</target>
        </trans-unit>
        <trans-unit id="dde30c97d760211268fce69bf5026121d049c127" translate="yes" xml:space="preserve">
          <source>With severity.</source>
          <target state="translated">厳しさと一緒に。</target>
        </trans-unit>
        <trans-unit id="55b4c1628b9a12f6ee57b2cca830aad0fb886f8d" translate="yes" xml:space="preserve">
          <source>With string argument &lt;code&gt;separator&lt;/code&gt;, joins using that separator:</source>
          <target state="translated">文字列引数 &lt;code&gt;separator&lt;/code&gt; を使用して、そのセパレータを使用して結合します。</target>
        </trans-unit>
        <trans-unit id="f5448dd74b3e50e938d841d1c4dbe1e3a381bd5b" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;../../exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; of OpenSSL::ASN1::EndOfContent, each &lt;a href=&quot;primitive&quot;&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; class constructor takes at least one parameter, the &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">OpenSSL :: ASN1 :: EndOfContent の&lt;a href=&quot;../../exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;により、各&lt;a href=&quot;primitive&quot;&gt; &lt;code&gt;Primitive&lt;/code&gt; &lt;/a&gt;クラスコンストラクターは、少なくとも1つのパラメーター、&lt;em&gt;valueを&lt;/em&gt;受け取り&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dd11f892b16989cd33603661c13df35c617b82d2" translate="yes" xml:space="preserve">
          <source>With the addition of the class method &lt;a href=&quot;thread#method-c-handle_interrupt&quot;&gt;&lt;code&gt;::handle_interrupt&lt;/code&gt;&lt;/a&gt;, you can now handle exceptions asynchronously with threads.</source>
          <target state="translated">クラスメソッド&lt;a href=&quot;thread#method-c-handle_interrupt&quot;&gt; &lt;code&gt;::handle_interrupt&lt;/code&gt; を&lt;/a&gt;追加すると、スレッドと非同期で例外を処理できるようになります。</target>
        </trans-unit>
        <trans-unit id="147d32a127a7dc6bc575baff2c2c9e64cd5fb734" translate="yes" xml:space="preserve">
          <source>With the default &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">デフォルトは &lt;code&gt;true&lt;/code&gt; です：</target>
        </trans-unit>
        <trans-unit id="a259ec0236532030c96f0d377bff7dc8bda42127" translate="yes" xml:space="preserve">
          <source>With the default, &lt;code&gt;&quot;&quot;&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;&quot;&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="638fb8f8b192398691792662eeacab21f5a48175" translate="yes" xml:space="preserve">
          <source>With the default, &lt;code&gt;100&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;100&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="aafe966e15d9bcd4505c173d67b7b019aba3b3ca" translate="yes" xml:space="preserve">
          <source>With the default, &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="98b557f3b42a1ef0ab61adeab315778be708d245" translate="yes" xml:space="preserve">
          <source>With the default, &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="29d6ad1fc70f6bd8b32e409fd8ea4533ba7dfffa" translate="yes" xml:space="preserve">
          <source>With the default, Array:</source>
          <target state="translated">デフォルトでは、Array</target>
        </trans-unit>
        <trans-unit id="c468087f1635a708fc0b87b527121099c1ecaacc" translate="yes" xml:space="preserve">
          <source>With the default, Hash:</source>
          <target state="translated">デフォルトでは、ハッシュ</target>
        </trans-unit>
        <trans-unit id="9b66ca3a145c557fc01c27566a1a743dbeeca788" translate="yes" xml:space="preserve">
          <source>With the option:</source>
          <target state="translated">オプションで。</target>
        </trans-unit>
        <trans-unit id="8b776ce7fb32b681fb56ceb6c5248f2063ab00d7" translate="yes" xml:space="preserve">
          <source>With the single Integer argument &lt;code&gt;index&lt;/code&gt;, returns the element at offset &lt;code&gt;index&lt;/code&gt;:</source>
          <target state="translated">単一の整数引数 &lt;code&gt;index&lt;/code&gt; 、オフセット &lt;code&gt;index&lt;/code&gt; 要素を返します。</target>
        </trans-unit>
        <trans-unit id="8f370fc63fb99e3aaf7443e4e0677ec476994719" translate="yes" xml:space="preserve">
          <source>With the single String argument &lt;code&gt;string&lt;/code&gt;, returns a copy of &lt;code&gt;string&lt;/code&gt; with the same encoding as &lt;code&gt;string&lt;/code&gt;:</source>
          <target state="translated">単一のString引数で &lt;code&gt;string&lt;/code&gt; のコピーを返し &lt;code&gt;string&lt;/code&gt; と同じエンコーディングを持つ &lt;code&gt;string&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c54fbf7bfda82eeedb3b33de89153aaedc43f1e8" translate="yes" xml:space="preserve">
          <source>With the single argument &lt;code&gt;header&lt;/code&gt;, returns the field value for that header (first found):</source>
          <target state="translated">単一の引数 &lt;code&gt;header&lt;/code&gt; 、そのヘッダー（最初に見つかった）のフィールド値を返します。</target>
        </trans-unit>
        <trans-unit id="358f873431c873d3e64f22154f18f2b132f94089" translate="yes" xml:space="preserve">
          <source>With this method, you can find memory leaks.</source>
          <target state="translated">この方法を使えば、メモリリークを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="cd374812156f3e3def053b28abd61b3ce9ad5052" translate="yes" xml:space="preserve">
          <source>With two write converters (called in order):</source>
          <target state="translated">2つの書き込みコンバータ(順番に呼ばれています)を持つ。</target>
        </trans-unit>
        <trans-unit id="5150712f718f55b8cb8101af347fd401053dbec6" translate="yes" xml:space="preserve">
          <source>With value &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">値が &lt;code&gt;true&lt;/code&gt; の場合：</target>
        </trans-unit>
        <trans-unit id="b38cf8b4b88c49ab32d35eece87f07ef683e58d2" translate="yes" xml:space="preserve">
          <source>Within a character class the hyphen (&lt;code&gt;-&lt;/code&gt;) is a metacharacter denoting an inclusive range of characters. &lt;code&gt;[abcd]&lt;/code&gt; is equivalent to &lt;code&gt;[a-d]&lt;/code&gt;. A range can be followed by another range, so &lt;code&gt;[abcdwxyz]&lt;/code&gt; is equivalent to &lt;code&gt;[a-dw-z]&lt;/code&gt;. The order in which ranges or individual characters appear inside a character class is irrelevant.</source>
          <target state="translated">文字クラス内のハイフン（ &lt;code&gt;-&lt;/code&gt; ）は、文字の包括的な範囲を示すメタ文字です。 &lt;code&gt;[abcd]&lt;/code&gt; は &lt;code&gt;[a-d]&lt;/code&gt; ]と同等です。範囲の後に別の範囲を &lt;code&gt;[abcdwxyz]&lt;/code&gt; ことができるため、[abcdwxyz]は &lt;code&gt;[a-dw-z]&lt;/code&gt; と同等です。範囲または個々の文字が文字クラス内に現れる順序は関係ありません。</target>
        </trans-unit>
        <trans-unit id="275b5f0e27ab494055a4691f86b5cb0bbfc56364" translate="yes" xml:space="preserve">
          <source>Within our &lt;code&gt;:string_literal&lt;/code&gt; you'll notice two &lt;code&gt;@tstring_content&lt;/code&gt;, this is the literal part for &lt;code&gt;Hello, &lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;. Between the two &lt;code&gt;@tstring_content&lt;/code&gt; statements is a &lt;code&gt;:string_embexpr&lt;/code&gt;, where &lt;em&gt;embexpr&lt;/em&gt; is an embedded expression. Our expression consists of a local variable, or &lt;code&gt;var_ref&lt;/code&gt;, with the identifier (&lt;code&gt;@ident&lt;/code&gt;) of &lt;code&gt;world&lt;/code&gt;.</source>
          <target state="translated">私たちの中で &lt;code&gt;:string_literal&lt;/code&gt; あなたは2気づく &lt;code&gt;@tstring_content&lt;/code&gt; を、これがためにリテラル部分で &lt;code&gt;Hello, &lt;/code&gt; と &lt;code&gt;!&lt;/code&gt; 。2つの &lt;code&gt;@tstring_content&lt;/code&gt; ステートメントの間に &lt;code&gt;:string_embexpr&lt;/code&gt; があり、&lt;em&gt;embexpr&lt;/em&gt;は埋め込み式です。この式は、 &lt;code&gt;var_ref&lt;/code&gt; の識別子（ &lt;code&gt;@ident&lt;/code&gt; ）を持つローカル変数またはvar_refで構成されてい &lt;code&gt;world&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f521732916fbb4cc29f6896249932483c7a58a0" translate="yes" xml:space="preserve">
          <source>Without &lt;a href=&quot;#class-CSV-label-Option+headers&quot;&gt;option headers&lt;/a&gt; case.</source>
          <target state="translated">&lt;a href=&quot;#class-CSV-label-Option+headers&quot;&gt;オプションヘッダー&lt;/a&gt;なし。</target>
        </trans-unit>
        <trans-unit id="6b0116d0ea5d7c037fa7d7d24e7c509a731abe11" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;headers&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; なし：</target>
        </trans-unit>
        <trans-unit id="c057b0b8a17a4ab874aea13235c19b0129c07e43" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;liberal_parsing&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;liberal_parsing&lt;/code&gt; なし：</target>
        </trans-unit>
        <trans-unit id="b23100fdef24cbdf97835bc8ff4ce510211b7009" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;write_headers&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;write_headers&lt;/code&gt; なし：</target>
        </trans-unit>
        <trans-unit id="a1623dc5be16f2d3acf83f5b63a49d57286612c5" translate="yes" xml:space="preserve">
          <source>Without Option &lt;code&gt;headers&lt;/code&gt;</source>
          <target state="translated">オプション &lt;code&gt;headers&lt;/code&gt; なし</target>
        </trans-unit>
        <trans-unit id="5c12e7943b30d41fd21a5df265b530ef6bffdedf" translate="yes" xml:space="preserve">
          <source>Without a &lt;code&gt;dig&lt;/code&gt; method, you can write, erroneously (raises &lt;code&gt;NoMethodError (undefined method `[]' for nil:NilClass)&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;dig&lt;/code&gt; メソッドがないと、誤って書き込むことができます（ &lt;code&gt;NoMethodError (undefined method `[]' for nil:NilClass)&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="fbad549f1a48e3f5476c9e8b77a4be7b2bf3977c" translate="yes" xml:space="preserve">
          <source>Without a &lt;code&gt;dig&lt;/code&gt; method, you can write:</source>
          <target state="translated">&lt;code&gt;dig&lt;/code&gt; メソッドがなければ、次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="6b3fdf0554f6096b1ad83ba212a52cc38ebf5968" translate="yes" xml:space="preserve">
          <source>Without a block, scanf returns an array containing all the conversions it has found. If none are found, scanf will return an empty array. An unsuccessful match is never ignored, but rather always signals the end of the scanning operation. If the first unsuccessful match takes place after one or more successful matches have already taken place, the returned array will contain the results of those successful matches.</source>
          <target state="translated">ブロックがなければ,scanfは,見つかったすべての変換を含む配列を返します。一致しない場合、scanfは空の配列を返します。一致しなかった場合は無視されることはなく,むしろ常にスキャン処理の終了を示します。1つ以上の成功したマッチが既に行われた後に最初の失敗したマッチが行われた場合,返される配列にはそれらの成功したマッチの結果が含まれます。</target>
        </trans-unit>
        <trans-unit id="cd0851724fa286364cffa658de1a9be549dbc46d" translate="yes" xml:space="preserve">
          <source>Without headers:</source>
          <target state="translated">ヘッダーなし。</target>
        </trans-unit>
        <trans-unit id="3420034006dace9175dcf1b5db927cdc5d963e2b" translate="yes" xml:space="preserve">
          <source>Without option &lt;code&gt;headers&lt;/code&gt;, returns each row as an Array object.</source>
          <target state="translated">オプション &lt;code&gt;headers&lt;/code&gt; ない場合、各行を配列オブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="21c9a348f89656c8c9098f2a8cd043a942b43a0e" translate="yes" xml:space="preserve">
          <source>Without option &lt;code&gt;headers&lt;/code&gt;, returns the first row as a new Array.</source>
          <target state="translated">オプション &lt;code&gt;headers&lt;/code&gt; ない場合、最初の行を新しい配列として返します。</target>
        </trans-unit>
        <trans-unit id="e2272c021a47f62886033907dfbbebf91b80eb33" translate="yes" xml:space="preserve">
          <source>Without the option:</source>
          <target state="translated">オプションなしで。</target>
        </trans-unit>
        <trans-unit id="1f323445dc6b6068ab3891f2729ca61ec8a02505" translate="yes" xml:space="preserve">
          <source>Workaround for missing &lt;a href=&quot;../../../../net/httpheader#method-i-connection_close-3F&quot;&gt;&lt;code&gt;Net::HTTPHeader#connection_close?&lt;/code&gt;&lt;/a&gt; on Ruby 1.8</source>
          <target state="translated">&lt;a href=&quot;../../../../net/httpheader#method-i-connection_close-3F&quot;&gt; &lt;code&gt;Net::HTTPHeader#connection_close?&lt;/code&gt; &lt;/a&gt;ない場合の回避策 Ruby 1.8</target>
        </trans-unit>
        <trans-unit id="33c2928f9622713949a0e56af5650506ea8b2ffe" translate="yes" xml:space="preserve">
          <source>Workaround for missing &lt;a href=&quot;../../../../net/httpheader#method-i-connection_keep_alive-3F&quot;&gt;&lt;code&gt;Net::HTTPHeader#connection_keep_alive?&lt;/code&gt;&lt;/a&gt; on Ruby 1.8</source>
          <target state="translated">&lt;a href=&quot;../../../../net/httpheader#method-i-connection_keep_alive-3F&quot;&gt; &lt;code&gt;Net::HTTPHeader#connection_keep_alive?&lt;/code&gt; &lt;/a&gt;ない場合の回避策 Ruby 1.8</target>
        </trans-unit>
        <trans-unit id="99edd8c8e615e373739d2cdd38a8942b8a573113" translate="yes" xml:space="preserve">
          <source>Worker</source>
          <target state="translated">Worker</target>
        </trans-unit>
        <trans-unit id="8c6270ba633c09e45a006103460ae690d33e07da" translate="yes" xml:space="preserve">
          <source>Worker#abort_threads</source>
          <target state="translated">Worker#abort_threads</target>
        </trans-unit>
        <trans-unit id="48440bf8cd69816dce892a51e4c78c3c7328a7a7" translate="yes" xml:space="preserve">
          <source>Worker#apply_func</source>
          <target state="translated">Worker#apply_func</target>
        </trans-unit>
        <trans-unit id="37b6c528c813dbdc7a8ef4023e7ab75ae9b5fdf6" translate="yes" xml:space="preserve">
          <source>Worker#create_threads</source>
          <target state="translated">Worker#create_threads</target>
        </trans-unit>
        <trans-unit id="d9407cd2e8b08efa53f346483efa47f7f57359ec" translate="yes" xml:space="preserve">
          <source>Worker#deq</source>
          <target state="translated">Worker#deq</target>
        </trans-unit>
        <trans-unit id="8fc48f166416ff9781d5bed2dee6465f375c1571" translate="yes" xml:space="preserve">
          <source>Worker#enq</source>
          <target state="translated">Worker#enq</target>
        </trans-unit>
        <trans-unit id="550821e3e92d205a428ea2318380fc05d1262c7a" translate="yes" xml:space="preserve">
          <source>Worker#name</source>
          <target state="translated">Worker#name</target>
        </trans-unit>
        <trans-unit id="b81a2ae623db49bee3a7e5eebd180790b9935ec2" translate="yes" xml:space="preserve">
          <source>Worker#process_queue</source>
          <target state="translated">Worker#process_queue</target>
        </trans-unit>
        <trans-unit id="53655c2a68733622559b86bccc59f52ae75c9e41" translate="yes" xml:space="preserve">
          <source>Worker#stop</source>
          <target state="translated">Worker#stop</target>
        </trans-unit>
        <trans-unit id="3db0d4830196fcbca346fa4e08686366890cbb14" translate="yes" xml:space="preserve">
          <source>Worker#stop_threads</source>
          <target state="translated">Worker#stop_threads</target>
        </trans-unit>
        <trans-unit id="3270ac59674048c36bca7b11fc9db5e06d84da3f" translate="yes" xml:space="preserve">
          <source>Worker::WrappedException</source>
          <target state="translated">Worker::WrappedException</target>
        </trans-unit>
        <trans-unit id="1d8d56a7bdbc4b914d9c27f78db73a70137adff9" translate="yes" xml:space="preserve">
          <source>Worker::WrappedException#exception</source>
          <target state="translated">Worker::WrappedException#exception</target>
        </trans-unit>
        <trans-unit id="ecde9c875ba3cefb1f83374ac69df0de8d894087" translate="yes" xml:space="preserve">
          <source>Worker::WrappedException::new</source>
          <target state="translated">Worker::WrappedException::new</target>
        </trans-unit>
        <trans-unit id="fcb66d6911e847141ea4a6b93c3fe1e538a086a6" translate="yes" xml:space="preserve">
          <source>Worker::new</source>
          <target state="translated">Worker::new</target>
        </trans-unit>
        <trans-unit id="51582a2170572ee7500dbfd779ff8919b12b11c8" translate="yes" xml:space="preserve">
          <source>Working with an instance of &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;インスタンスの操作</target>
        </trans-unit>
        <trans-unit id="c0f376c3577b2876d54a5931c8c9825f57f07a96" translate="yes" xml:space="preserve">
          <source>Works similar to &lt;a href=&quot;../../tcpserver#method-i-accept&quot;&gt;&lt;code&gt;TCPServer#accept&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../tcpserver#method-i-accept&quot;&gt; &lt;code&gt;TCPServer#accept&lt;/code&gt; &lt;/a&gt;と同様に機能します。</target>
        </trans-unit>
        <trans-unit id="048657ade0d92a9eaf527ecba268b865d4ba413b" translate="yes" xml:space="preserve">
          <source>Works similar to &lt;code&gt;parse&lt;/code&gt; except that instead of using a heuristic to detect the format of the input string, you provide a second argument that describes the format of the string.</source>
          <target state="translated">入力文字列の形式を検出するためにヒューリスティックを使用する代わりに、文字列の形式を説明する2番目の引数を提供することを除いて、 &lt;code&gt;parse&lt;/code&gt; と同様に機能します。</target>
        </trans-unit>
        <trans-unit id="29ba667a6aff192e321b2370df4e52e3e9285b01" translate="yes" xml:space="preserve">
          <source>Wrapper for arrays within a struct</source>
          <target state="translated">構造体内の配列のラッパー</target>
        </trans-unit>
        <trans-unit id="06548901e2a688b365ddfb7d6e1019368c4298b2" translate="yes" xml:space="preserve">
          <source>Wrapper method for getopts.rb.</source>
          <target state="translated">getopts.rb のラッパーメソッドです。</target>
        </trans-unit>
        <trans-unit id="fd9b054baa694c95bba32de9782f1e7bd156a7ab" translate="yes" xml:space="preserve">
          <source>Wraps the C pointer &lt;code&gt;addr&lt;/code&gt; as a C struct with the given &lt;code&gt;types&lt;/code&gt;.</source>
          <target state="translated">Cポインタ &lt;code&gt;addr&lt;/code&gt; を、指定された &lt;code&gt;types&lt;/code&gt; C構造体としてラップします。</target>
        </trans-unit>
        <trans-unit id="a83eacc73d4a986b94eef15e4f9f29dacda15031" translate="yes" xml:space="preserve">
          <source>Wraps the block in a single, VM-global &lt;a href=&quot;mutex#method-i-synchronize&quot;&gt;&lt;code&gt;Mutex.synchronize&lt;/code&gt;&lt;/a&gt;, returning the value of the block. A thread executing inside the exclusive section will only block other threads which also use the &lt;a href=&quot;thread#method-c-exclusive&quot;&gt;&lt;code&gt;Thread.exclusive&lt;/code&gt;&lt;/a&gt; mechanism.</source>
          <target state="translated">ブロックを単一のVM-global &lt;a href=&quot;mutex#method-i-synchronize&quot;&gt; &lt;code&gt;Mutex.synchronize&lt;/code&gt; &lt;/a&gt;でラップし、ブロックの値を返します。排他セクション内で実行されるスレッドは、&lt;a href=&quot;thread#method-c-exclusive&quot;&gt; &lt;code&gt;Thread.exclusive&lt;/code&gt; &lt;/a&gt;メカニズムを使用する他のスレッドのみをブロックします。</target>
        </trans-unit>
        <trans-unit id="df96bf1c35d58ab3a52579dc4c22836f3e00efb6" translate="yes" xml:space="preserve">
          <source>Write &amp;ldquo;canonical&amp;rdquo; YAML form (very verbose, yet strictly formal).</source>
          <target state="translated">「正規の」YAMLフォームを記述します（非常に冗長ですが、厳密に正式です）。</target>
        </trans-unit>
        <trans-unit id="c950bbe27a1db12edceae0a8ce2fd156eae20eed" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;%YAML [version]&lt;/code&gt; at the beginning of document.</source>
          <target state="translated">書き込み &lt;code&gt;%YAML [version]&lt;/code&gt; 文書の冒頭に。</target>
        </trans-unit>
        <trans-unit id="a184dbc699ff04cf1f8d068ff03a5ec2492ed830" translate="yes" xml:space="preserve">
          <source>Write Converters</source>
          <target state="translated">ライトコンバータ</target>
        </trans-unit>
        <trans-unit id="df6fa5ad2e1244b19d307d56643b1d64383503dd" translate="yes" xml:space="preserve">
          <source>Write a &lt;a href=&quot;../digest&quot;&gt;&lt;code&gt;Digest&lt;/code&gt;&lt;/a&gt; subclass in C</source>
          <target state="translated">Cで&lt;a href=&quot;../digest&quot;&gt; &lt;code&gt;Digest&lt;/code&gt; &lt;/a&gt;サブクラスを作成する</target>
        </trans-unit>
        <trans-unit id="64ab80585087567093754d27e7525f508c909e3b" translate="yes" xml:space="preserve">
          <source>WriteAdapter</source>
          <target state="translated">WriteAdapter</target>
        </trans-unit>
        <trans-unit id="a13da82443ff880e048b6a2d5dfc6cfd4bc10fcf" translate="yes" xml:space="preserve">
          <source>WriteAdapter#&amp;lt;&amp;lt;</source>
          <target state="translated">WriteAdapter#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7c07ddca26b4f5dab4bf8ed44cea41a862b70c34" translate="yes" xml:space="preserve">
          <source>WriteAdapter#inspect</source>
          <target state="translated">WriteAdapter#inspect</target>
        </trans-unit>
        <trans-unit id="25670c204fa24bdca0f1c7fc6f99d8de833bbc62" translate="yes" xml:space="preserve">
          <source>WriteAdapter#print</source>
          <target state="translated">WriteAdapter#print</target>
        </trans-unit>
        <trans-unit id="75b98586170ff26035677117f3baa9d1672c32e1" translate="yes" xml:space="preserve">
          <source>WriteAdapter#printf</source>
          <target state="translated">WriteAdapter#printf</target>
        </trans-unit>
        <trans-unit id="4c1263162fa4307e7c7b5243afe7ef4a25f422f4" translate="yes" xml:space="preserve">
          <source>WriteAdapter#puts</source>
          <target state="translated">WriteAdapter#puts</target>
        </trans-unit>
        <trans-unit id="394d7f058a9e0b0ff019736e2524d93275061377" translate="yes" xml:space="preserve">
          <source>WriteAdapter#write</source>
          <target state="translated">WriteAdapter#write</target>
        </trans-unit>
        <trans-unit id="cc0355a5f6e17a2c33fc6187e9e333d85a1b9f85" translate="yes" xml:space="preserve">
          <source>WriteAdapter::new</source>
          <target state="translated">WriteAdapter::new</target>
        </trans-unit>
        <trans-unit id="f64ea9475585d5c3764baf0bd87237e334c0db62" translate="yes" xml:space="preserve">
          <source>WriteTimeout</source>
          <target state="translated">WriteTimeout</target>
        </trans-unit>
        <trans-unit id="1f99694a0584072277ef61c4bc54e8b5559fe50c" translate="yes" xml:space="preserve">
          <source>WriteTimeout#io</source>
          <target state="translated">WriteTimeout#io</target>
        </trans-unit>
        <trans-unit id="f185385a6ffe4046c45035e6cf513c09a84f5275" translate="yes" xml:space="preserve">
          <source>WriteTimeout#message</source>
          <target state="translated">WriteTimeout#message</target>
        </trans-unit>
        <trans-unit id="6d066e50865d46fe54d509a8a2971919e68b29f1" translate="yes" xml:space="preserve">
          <source>WriteTimeout::new</source>
          <target state="translated">WriteTimeout::new</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="a00e0dd0142088d7d85e90b4a3218c81ea49fe5a" translate="yes" xml:space="preserve">
          <source>Writer#&amp;lt;&amp;lt;</source>
          <target state="translated">Writer#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="249804588981acf5ac9d807f10f2c15999640f9c" translate="yes" xml:space="preserve">
          <source>Writer#headers</source>
          <target state="translated">Writer#headers</target>
        </trans-unit>
        <trans-unit id="4ebb5135491f036160a9782ebf5a71b19b130db3" translate="yes" xml:space="preserve">
          <source>Writer#lineno</source>
          <target state="translated">Writer#lineno</target>
        </trans-unit>
        <trans-unit id="0244c5479aab107493cd339ad2fd390ecc42c476" translate="yes" xml:space="preserve">
          <source>Writer#prepare</source>
          <target state="translated">Writer#prepare</target>
        </trans-unit>
        <trans-unit id="b65c634ea52b5e2ba20fea37ecb34f23d59fa14f" translate="yes" xml:space="preserve">
          <source>Writer#prepare_format</source>
          <target state="translated">Writer#prepare_format</target>
        </trans-unit>
        <trans-unit id="d6f2c17bf5eb1db81fae69e3c72e0d2b1bd3ec08" translate="yes" xml:space="preserve">
          <source>Writer#prepare_header</source>
          <target state="translated">Writer#prepare_header</target>
        </trans-unit>
        <trans-unit id="634ab050c1500a2cb6f84d0e2568a5339f998a62" translate="yes" xml:space="preserve">
          <source>Writer#prepare_output</source>
          <target state="translated">Writer#prepare_output</target>
        </trans-unit>
        <trans-unit id="1fd1264918228e3f62d7739aebe6dd6fd68592fb" translate="yes" xml:space="preserve">
          <source>Writer#quote</source>
          <target state="translated">Writer#quote</target>
        </trans-unit>
        <trans-unit id="9359bb6d4c02bd4da47f0e18903b31745ae5ab00" translate="yes" xml:space="preserve">
          <source>Writer#quote_field</source>
          <target state="translated">Writer#quote_field</target>
        </trans-unit>
        <trans-unit id="3dc41e5c9258facced55befbc76573ae1a096e32" translate="yes" xml:space="preserve">
          <source>Writer#rewind</source>
          <target state="translated">Writer#rewind</target>
        </trans-unit>
        <trans-unit id="a409a7f9a5af02cee16f27991b4bd6680cef7204" translate="yes" xml:space="preserve">
          <source>Writer::new</source>
          <target state="translated">Writer::new</target>
        </trans-unit>
        <trans-unit id="af297047f39bcaf4e674c39f7ffd1cec69d47db4" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;contents&lt;/code&gt; to the file, opening it in binary mode.</source>
          <target state="translated">&lt;code&gt;contents&lt;/code&gt; をファイルに書き込み、バイナリモードで開きます。</target>
        </trans-unit>
        <trans-unit id="59dee01315a015e4e0dd03540f158d41b0ae8c96" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;contents&lt;/code&gt; to the file.</source>
          <target state="translated">&lt;code&gt;contents&lt;/code&gt; をファイルに書き込みます。</target>
        </trans-unit>
        <trans-unit id="7de109d103550a3179eac792ac4e33ca69a11a37" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;args&lt;/em&gt; to the stream along with a record separator.</source>
          <target state="translated">&lt;em&gt;args&lt;/em&gt;をレコードセパレータと共にストリームに書き込みます。</target>
        </trans-unit>
        <trans-unit id="159ae658cc3deb3dc3435de1c0dfbe57d69b0a21" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;args&lt;/em&gt; to the stream.</source>
          <target state="translated">&lt;em&gt;args&lt;/em&gt;をストリームに書き込みます。</target>
        </trans-unit>
        <trans-unit id="28835fb2c280432a3c615537a6201b3276da4149" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;s&lt;/em&gt; in the non-blocking manner.</source>
          <target state="translated">非ブロッキング方式で&lt;em&gt;s&lt;/em&gt;を書き込みます。</target>
        </trans-unit>
        <trans-unit id="cb2a6239766ced79b92bb4d95afe59cc3ddb6aa1" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;s&lt;/em&gt; to the buffer. When the buffer is full or &lt;a href=&quot;buffering#attribute-i-sync&quot;&gt;&lt;code&gt;sync&lt;/code&gt;&lt;/a&gt; is true the buffer is flushed to the underlying socket.</source>
          <target state="translated">&lt;em&gt;s&lt;/em&gt;をバッファに書き込みます。バッファーがいっぱいか&lt;a href=&quot;buffering#attribute-i-sync&quot;&gt; &lt;code&gt;sync&lt;/code&gt; &lt;/a&gt;がtrueの場合、バッファーは基礎となるソケットにフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="7f04125d32d17f2a5d913b05e3121bb150af0a33" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;s&lt;/em&gt; to the stream. &lt;em&gt;s&lt;/em&gt; will be converted to a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;.to_s&lt;/code&gt; method.</source>
          <target state="translated">&lt;em&gt;s&lt;/em&gt;をストリームに書き込みます。&lt;em&gt;s&lt;/em&gt;は &lt;code&gt;.to_s&lt;/code&gt; メソッドを使用して&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;変換されます。</target>
        </trans-unit>
        <trans-unit id="07e6abdbed0806bb12638a6c910c538e01577918" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;s&lt;/em&gt; to the stream. If the argument is not a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; it will be converted using &lt;code&gt;.to_s&lt;/code&gt; method. Returns the number of bytes written.</source>
          <target state="translated">&lt;em&gt;s&lt;/em&gt;をストリームに書き込みます。引数が&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;でない場合、 &lt;code&gt;.to_s&lt;/code&gt; メソッドを使用して変換されます。書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="b7992becf283eb4bfe1271ae55aa07c300f5b91e" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;string&lt;/em&gt; if inplace mode.</source>
          <target state="translated">インプレースモードの場合は&lt;em&gt;文字列を&lt;/em&gt;書き込みます。</target>
        </trans-unit>
        <trans-unit id="c2e10aa425d3bfb7bdb6f50ddd661c065c746b41" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;string&lt;/em&gt; to the &lt;a href=&quot;../ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; connection in a non-blocking manner. Raises an &lt;a href=&quot;sslerror&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; if writing would block.</source>
          <target state="translated">非ブロッキング方式で&lt;a href=&quot;../ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt;接続に&lt;em&gt;文字列&lt;/em&gt;を書き込み&lt;em&gt;ます&lt;/em&gt;。書き込みがブロックされると、&lt;a href=&quot;sslerror&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="56951c29f9eaf0e449aedbb5f85957e0152c7847" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;string&lt;/em&gt; to the &lt;a href=&quot;../ssl&quot;&gt;&lt;code&gt;SSL&lt;/code&gt;&lt;/a&gt; connection.</source>
          <target state="translated">&lt;a href=&quot;../ssl&quot;&gt; &lt;code&gt;SSL&lt;/code&gt; &lt;/a&gt;接続に&lt;em&gt;文字列&lt;/em&gt;を書き込み&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a874e07569ab0c375f474eda30e8364e6964d539" translate="yes" xml:space="preserve">
          <source>Writes a number of random generated bytes (currently 1024) to &lt;em&gt;filename&lt;/em&gt; which can be used to initialize the PRNG by calling &lt;a href=&quot;random#method-c-load_random_file&quot;&gt;&lt;code&gt;::load_random_file&lt;/code&gt;&lt;/a&gt; in a later session.</source>
          <target state="translated">ランダムに生成された多数のバイト（現在は1024）を&lt;em&gt;ファイル名に&lt;/em&gt;書き込み&lt;em&gt;ます。&lt;/em&gt;この&lt;em&gt;ファイル&lt;/em&gt;を使用して、後のセッションで&lt;a href=&quot;random#method-c-load_random_file&quot;&gt; &lt;code&gt;::load_random_file&lt;/code&gt; &lt;/a&gt;を呼び出し、PRNGを初期化できます。</target>
        </trans-unit>
        <trans-unit id="40db4e8d577a2d7b4b0430ada62d72c914f0b964" translate="yes" xml:space="preserve">
          <source>Writes the &lt;a href=&quot;profiler#method-c-result&quot;&gt;&lt;code&gt;GC::Profiler.result&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;$stdout&lt;/code&gt; or the given &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;profiler#method-c-result&quot;&gt; &lt;code&gt;GC::Profiler.result&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;$stdout&lt;/code&gt; または指定された&lt;a href=&quot;../io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt;オブジェクトに書き込みます。</target>
        </trans-unit>
        <trans-unit id="262e146d689ef7faf9a954630ee820a603675091" translate="yes" xml:space="preserve">
          <source>Writes the given object(s) to &lt;em&gt;ios&lt;/em&gt;. Returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクトを&lt;em&gt;iosに&lt;/em&gt;書き込みます。 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b09bbc772c1461f7253c384ad624b71e031f8aef" translate="yes" xml:space="preserve">
          <source>Writes the given object(s) to &lt;em&gt;ios&lt;/em&gt;. Writes a newline after any that do not already end with a newline sequence. Returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクトを&lt;em&gt;iosに&lt;/em&gt;書き込みます。改行シーケンスでまだ終了していない改行を書き込みます。 &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7bd8d02a4b166d1041207ad4a03e69228dca4579" translate="yes" xml:space="preserve">
          <source>Writes the given string to &lt;em&gt;ios&lt;/em&gt; at &lt;em&gt;offset&lt;/em&gt; using pwrite() system call. This is advantageous to combining &lt;a href=&quot;io#method-i-seek&quot;&gt;&lt;code&gt;IO#seek&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;IO#write&lt;/code&gt;&lt;/a&gt; in that it is atomic, allowing multiple threads/process to share the same &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object for reading the file at various locations. This bypasses any userspace buffering of the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; layer. Returns the number of bytes written. Raises &lt;a href=&quot;systemcallerror&quot;&gt;&lt;code&gt;SystemCallError&lt;/code&gt;&lt;/a&gt; on error and &lt;a href=&quot;notimplementederror&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if platform does not implement the system call.</source>
          <target state="translated">Writes the given string to &lt;em&gt;ios&lt;/em&gt; at &lt;em&gt;offset&lt;/em&gt; using pwrite() system call. This is advantageous to combining &lt;a href=&quot;io#method-i-seek&quot;&gt; &lt;code&gt;IO#seek&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;io#method-i-write&quot;&gt; &lt;code&gt;IO#write&lt;/code&gt; &lt;/a&gt; in that it is atomic, allowing multiple threads/process to share the same &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; object for reading the file at various locations. This bypasses any userspace buffering of the &lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; layer. Returns the number of bytes written. Raises &lt;a href=&quot;systemcallerror&quot;&gt; &lt;code&gt;SystemCallError&lt;/code&gt; &lt;/a&gt; on error and &lt;a href=&quot;notimplementederror&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt; if platform does not implement the system call.</target>
        </trans-unit>
        <trans-unit id="20e410932eba7a7a228a49d3b82ab2c4eb7aba8b" translate="yes" xml:space="preserve">
          <source>Writes the given string to &lt;em&gt;ios&lt;/em&gt; at &lt;em&gt;offset&lt;/em&gt; using pwrite() system call. This is advantageous to combining &lt;a href=&quot;io#method-i-seek&quot;&gt;&lt;code&gt;IO#seek&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#method-i-write&quot;&gt;&lt;code&gt;IO#write&lt;/code&gt;&lt;/a&gt; in that it is atomic, allowing multiple threads/process to share the same &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object for reading the file at various locations. This bypasses any userspace buffering of the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; layer. Returns the number of bytes written. Raises &lt;code&gt;SystemCallError&lt;/code&gt; on error and &lt;code&gt;NotImplementedError&lt;/code&gt; if platform does not implement the system call.</source>
          <target state="translated">与えられた文字列を書き込み&lt;em&gt;、IOS&lt;/em&gt;で&lt;em&gt;オフセット&lt;/em&gt;使用PWRITE（）システムコール。これは、アトミックであるという点で&lt;a href=&quot;io#method-i-seek&quot;&gt; &lt;code&gt;IO#seek&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;io#method-i-write&quot;&gt; &lt;code&gt;IO#write&lt;/code&gt; &lt;/a&gt;を組み合わせると有利です。これにより、複数のスレッド/プロセスが同じ&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt;オブジェクトを共有して、さまざまな場所でファイルを読み取ることができます。これにより、&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt;層のユーザー空間バッファリングがバイパスされます。書き込まれたバイト数を返します。発生させ &lt;code&gt;SystemCallError&lt;/code&gt; はエラーと上 &lt;code&gt;NotImplementedError&lt;/code&gt; プラットフォームは、システムコールを実装していない場合。</target>
        </trans-unit>
        <trans-unit id="bb42af3ad5c9bcf6d51b50e555da25a85b0b23fc" translate="yes" xml:space="preserve">
          <source>Writes the given string to &lt;em&gt;ios&lt;/em&gt; using a low-level write. Returns the number of bytes written. Do not mix with other methods that write to &lt;em&gt;ios&lt;/em&gt; or you may get unpredictable results. Raises &lt;a href=&quot;systemcallerror&quot;&gt;&lt;code&gt;SystemCallError&lt;/code&gt;&lt;/a&gt; on error.</source>
          <target state="translated">Writes the given string to &lt;em&gt;ios&lt;/em&gt; using a low-level write. Returns the number of bytes written. Do not mix with other methods that write to &lt;em&gt;ios&lt;/em&gt; or you may get unpredictable results. Raises &lt;a href=&quot;systemcallerror&quot;&gt; &lt;code&gt;SystemCallError&lt;/code&gt; &lt;/a&gt; on error.</target>
        </trans-unit>
        <trans-unit id="a87c81ec0278ee8ec50520fb98a8c3364ec19e4e" translate="yes" xml:space="preserve">
          <source>Writes the given string to &lt;em&gt;ios&lt;/em&gt; using a low-level write. Returns the number of bytes written. Do not mix with other methods that write to &lt;em&gt;ios&lt;/em&gt; or you may get unpredictable results. Raises &lt;code&gt;SystemCallError&lt;/code&gt; on error.</source>
          <target state="translated">低レベルの書き込みを使用して、指定された文字列を&lt;em&gt;iosに&lt;/em&gt;書き込みます。書き込まれたバイト数を返します。&lt;em&gt;iOSに&lt;/em&gt;書き込む他のメソッドと混合しないでください。予期しない結果が生じる可能性があります。発生させ &lt;code&gt;SystemCallError&lt;/code&gt; はエラーに。</target>
        </trans-unit>
        <trans-unit id="4a09d32babba1a2a313857b1a8f20e93e9a3c97e" translate="yes" xml:space="preserve">
          <source>Writes the given string to &lt;em&gt;ios&lt;/em&gt; using the write(2) system call after O_NONBLOCK is set for the underlying file descriptor.</source>
          <target state="translated">基礎となるファイル記述子にO_NONBLOCKが設定された後、write（2）システムコールを使用して、指定された文字列を&lt;em&gt;ios&lt;/em&gt;に書き込みます。</target>
        </trans-unit>
        <trans-unit id="e8014b148ced388da6cb076c85cb8e9e4774f3de" translate="yes" xml:space="preserve">
          <source>Writes the given strings to &lt;em&gt;ios&lt;/em&gt;. The stream must be opened for writing. Arguments that are not a string will be converted to a string using &lt;code&gt;to_s&lt;/code&gt;. Returns the number of bytes written in total.</source>
          <target state="translated">指定された文字列を&lt;em&gt;iosに&lt;/em&gt;書き込みます。書き込み用にストリームを開く必要があります。文字列でない引数は、 &lt;code&gt;to_s&lt;/code&gt; を使用して文字列に変換されます。合計で書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="d4bf2635fc1dc32f7659fd8ad0736949b0e61fa8" translate="yes" xml:space="preserve">
          <source>Writes warning message &lt;code&gt;msg&lt;/code&gt; to $stderr. This method is called by Ruby for all emitted warnings.</source>
          <target state="translated">警告メッセージ &lt;code&gt;msg&lt;/code&gt; を$ stderrに書き込みます。このメソッドは、発行されたすべての警告に対してRubyによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="67e5ca246a1519086a3ddb70fc259763cb8b6f6d" translate="yes" xml:space="preserve">
          <source>Writes warning message &lt;code&gt;msg&lt;/code&gt; to $stderr. This method is called by Ruby for all emitted warnings. A &lt;code&gt;category&lt;/code&gt; may be included with the warning.</source>
          <target state="translated">警告メッセージの書き込み &lt;code&gt;msg&lt;/code&gt; $ stderrに。このメソッドは、発行されたすべての警告に対してRubyによって呼び出されます。 &lt;code&gt;category&lt;/code&gt; 警告が含まれていてもよいです。</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="89a93540cc711d6d323766c89923356a310d7e79" translate="yes" xml:space="preserve">
          <source>Writing output</source>
          <target state="translated">書き込み出力</target>
        </trans-unit>
        <trans-unit id="9fb3670f4c1374b3811d72ff394ddd1083cc7db3" translate="yes" xml:space="preserve">
          <source>Writing to a Ruby structure</source>
          <target state="translated">Ruby構造体への書き込み</target>
        </trans-unit>
        <trans-unit id="629262f0003a3aeccecc8e68bf6e55abe260b7fc" translate="yes" xml:space="preserve">
          <source>Writing to a file</source>
          <target state="translated">ファイルへの書き込み</target>
        </trans-unit>
        <trans-unit id="fab14ebc09d58a4107ad9c627d461cfac743b2fd" translate="yes" xml:space="preserve">
          <source>Writing to a string</source>
          <target state="translated">文字列への書き込み</target>
        </trans-unit>
        <trans-unit id="b28e8c8103d74031f62b482a26190e8fc1f0499a" translate="yes" xml:space="preserve">
          <source>X.509 certificates are associated with a private/public key pair, typically a RSA, DSA or ECC key (see also &lt;a href=&quot;../pkey/rsa&quot;&gt;&lt;code&gt;OpenSSL::PKey::RSA&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../pkey/dsa&quot;&gt;&lt;code&gt;OpenSSL::PKey::DSA&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../pkey/ec&quot;&gt;&lt;code&gt;OpenSSL::PKey::EC&lt;/code&gt;&lt;/a&gt;), the public key itself is stored within the certificate and can be accessed in form of an &lt;a href=&quot;../pkey&quot;&gt;&lt;code&gt;OpenSSL::PKey&lt;/code&gt;&lt;/a&gt;. Certificates are typically used to be able to associate some form of identity with a key pair, for example web servers serving pages over HTTPs use certificates to authenticate themselves to the user.</source>
          <target state="translated">X.509証明書は、秘密鍵と公開鍵のペア、通常はRSA、DSA、またはECCキーに関連付けられています（&lt;a href=&quot;../pkey/rsa&quot;&gt; &lt;code&gt;OpenSSL::PKey::RSA&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../pkey/dsa&quot;&gt; &lt;code&gt;OpenSSL::PKey::DSA&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../pkey/ec&quot;&gt; &lt;code&gt;OpenSSL::PKey::EC&lt;/code&gt; &lt;/a&gt;参照）。公開鍵自体は証明書内に格納され、&lt;a href=&quot;../pkey&quot;&gt; &lt;code&gt;OpenSSL::PKey&lt;/code&gt; &lt;/a&gt;形式でアクセスできます。証明書は通常、何らかの形式のIDをキーペアに関連付けることができるように使用されます。たとえば、HTTPSを介してページを提供するWebサーバーは、証明書を使用してユーザーを認証します。</target>
        </trans-unit>
        <trans-unit id="a8d9fc06da98904260ef2c7dd462eb0542059e5e" translate="yes" xml:space="preserve">
          <source>X509::Attribute</source>
          <target state="translated">X509::Attribute</target>
        </trans-unit>
        <trans-unit id="dc26e51fd5cc364a9188fcff049916e75b31ca23" translate="yes" xml:space="preserve">
          <source>X509::Attribute#==</source>
          <target state="translated">X509::Attribute#==</target>
        </trans-unit>
        <trans-unit id="5563c521a729d2ca2d1ab1d680696cb05cdd2d8c" translate="yes" xml:space="preserve">
          <source>X509::Attribute#initialize_copy</source>
          <target state="translated">X509::Attribute#initialize_copy</target>
        </trans-unit>
        <trans-unit id="c3f2dae5fdb74edf7f10f040825be3198f2f753f" translate="yes" xml:space="preserve">
          <source>X509::Attribute#oid</source>
          <target state="translated">X509::Attribute#oid</target>
        </trans-unit>
        <trans-unit id="7790f7e262d904b17022dbf769a4ffa5af69cf9f" translate="yes" xml:space="preserve">
          <source>X509::Attribute#oid=</source>
          <target state="translated">X509::Attribute#oid=</target>
        </trans-unit>
        <trans-unit id="335a21f80e1a7c329594a9077a23cd5627f4130e" translate="yes" xml:space="preserve">
          <source>X509::Attribute#to_der</source>
          <target state="translated">X509::Attribute#to_der</target>
        </trans-unit>
        <trans-unit id="9a45c5123303ffd5dc67c2ce83e30632676e39f3" translate="yes" xml:space="preserve">
          <source>X509::Attribute#value</source>
          <target state="translated">X509::Attribute#value</target>
        </trans-unit>
        <trans-unit id="0606240e4c9615125a2bb5d189e5bd8eecc1f08c" translate="yes" xml:space="preserve">
          <source>X509::Attribute#value=</source>
          <target state="translated">X509::Attribute#value=</target>
        </trans-unit>
        <trans-unit id="e3913dbb2d58b5cbc593adff2e3c2ba3fd0537f1" translate="yes" xml:space="preserve">
          <source>X509::Attribute::new</source>
          <target state="translated">X509::Attribute::new</target>
        </trans-unit>
        <trans-unit id="84cff1e52873cadd5fb2ebf21baef34e37fa4479" translate="yes" xml:space="preserve">
          <source>X509::CRL</source>
          <target state="translated">X509::CRL</target>
        </trans-unit>
        <trans-unit id="fd30aa8bed6790ecbcadc34169c6427768e0f69a" translate="yes" xml:space="preserve">
          <source>X509::CRL#==</source>
          <target state="translated">X509::CRL#==</target>
        </trans-unit>
        <trans-unit id="3cb60f5963819c7860d84edd8c90ee9042bd2de6" translate="yes" xml:space="preserve">
          <source>X509::CRL#add_extension</source>
          <target state="translated">X509::CRL#add_extension</target>
        </trans-unit>
        <trans-unit id="9aa1974cb18fe0e7ba7a209e4a531513ed1c68fe" translate="yes" xml:space="preserve">
          <source>X509::CRL#add_revoked</source>
          <target state="translated">X509::CRL#add_revoked</target>
        </trans-unit>
        <trans-unit id="a48867479e72e7a7de1993760e028fe6290e3853" translate="yes" xml:space="preserve">
          <source>X509::CRL#extensions</source>
          <target state="translated">X509::CRL#extensions</target>
        </trans-unit>
        <trans-unit id="06e402bd4b33f2b37c6c8d5be647224318380f00" translate="yes" xml:space="preserve">
          <source>X509::CRL#extensions=</source>
          <target state="translated">X509::CRL#extensions=</target>
        </trans-unit>
        <trans-unit id="c46158b241acbdd2051f453c171967d19f7fd36e" translate="yes" xml:space="preserve">
          <source>X509::CRL#initialize_copy</source>
          <target state="translated">X509::CRL#initialize_copy</target>
        </trans-unit>
        <trans-unit id="b641c1c8919b9ba984a717032cdd83b530f01047" translate="yes" xml:space="preserve">
          <source>X509::CRL#issuer</source>
          <target state="translated">X509::CRL#issuer</target>
        </trans-unit>
        <trans-unit id="f700c1821ecca83aad379e4238afea39816035f6" translate="yes" xml:space="preserve">
          <source>X509::CRL#issuer=</source>
          <target state="translated">X509::CRL#issuer=</target>
        </trans-unit>
        <trans-unit id="6fc24bb6cf15fd38415e3013a7e503b866ca6bf7" translate="yes" xml:space="preserve">
          <source>X509::CRL#last_update</source>
          <target state="translated">X509::CRL#last_update</target>
        </trans-unit>
        <trans-unit id="9c76a9d11aa9b512eb0335354f01067aeddcfdd3" translate="yes" xml:space="preserve">
          <source>X509::CRL#last_update=</source>
          <target state="translated">X509::CRL#last_update=</target>
        </trans-unit>
        <trans-unit id="f31c189737aa544fc504a5515d26dfdb5a003908" translate="yes" xml:space="preserve">
          <source>X509::CRL#next_update</source>
          <target state="translated">X509::CRL#next_update</target>
        </trans-unit>
        <trans-unit id="5ea07a41ca9cda72f56195449197fb9371de99b6" translate="yes" xml:space="preserve">
          <source>X509::CRL#next_update=</source>
          <target state="translated">X509::CRL#next_update=</target>
        </trans-unit>
        <trans-unit id="f7cbcdd14234bb5bbd051fb082557b6f5aa45fc5" translate="yes" xml:space="preserve">
          <source>X509::CRL#revoked</source>
          <target state="translated">X509::CRL#revoked</target>
        </trans-unit>
        <trans-unit id="56275dd754b6cd5f2e166cf029c96c8ed98069f5" translate="yes" xml:space="preserve">
          <source>X509::CRL#revoked=</source>
          <target state="translated">X509::CRL#revoked=</target>
        </trans-unit>
        <trans-unit id="a740fed48630034b5e49d276d80b9bef6f1ed787" translate="yes" xml:space="preserve">
          <source>X509::CRL#sign</source>
          <target state="translated">X509::CRL#sign</target>
        </trans-unit>
        <trans-unit id="47b80bbeca40d8befb8ba8a7d8f5149c0e4f6106" translate="yes" xml:space="preserve">
          <source>X509::CRL#signature_algorithm</source>
          <target state="translated">X509::CRL#signature_algorithm</target>
        </trans-unit>
        <trans-unit id="18429c647b2f5e228018f8ac01f5c7bee7e9302c" translate="yes" xml:space="preserve">
          <source>X509::CRL#to_der</source>
          <target state="translated">X509::CRL#to_der</target>
        </trans-unit>
        <trans-unit id="61a9cd81f0d0e4068508906609696ddc6d0043d5" translate="yes" xml:space="preserve">
          <source>X509::CRL#to_pem</source>
          <target state="translated">X509::CRL#to_pem</target>
        </trans-unit>
        <trans-unit id="bc4af30cecdebbb3ee097760e6d3d2bdc350ca82" translate="yes" xml:space="preserve">
          <source>X509::CRL#to_s</source>
          <target state="translated">X509::CRL#to_s</target>
        </trans-unit>
        <trans-unit id="58e8948ad704a5a57f8d33732d6b1b74117f274c" translate="yes" xml:space="preserve">
          <source>X509::CRL#to_text</source>
          <target state="translated">X509::CRL#to_text</target>
        </trans-unit>
        <trans-unit id="3496bbe59d9d58ea42847f955b4ab7249e28984d" translate="yes" xml:space="preserve">
          <source>X509::CRL#verify</source>
          <target state="translated">X509::CRL#verify</target>
        </trans-unit>
        <trans-unit id="ea35ae299043470f3563c20dce5982462f257e32" translate="yes" xml:space="preserve">
          <source>X509::CRL#version=</source>
          <target state="translated">X509::CRL#version=</target>
        </trans-unit>
        <trans-unit id="3f6f83dc0d35d6b2a31b503300d763d5b2041cfe" translate="yes" xml:space="preserve">
          <source>X509::CRL::new</source>
          <target state="translated">X509::CRL::new</target>
        </trans-unit>
        <trans-unit id="31077e3b42db5521a8466c85e7e7f58345a53c6d" translate="yes" xml:space="preserve">
          <source>X509::Certificate</source>
          <target state="translated">X509::Certificate</target>
        </trans-unit>
        <trans-unit id="995ee4b87eb3e73da86f64944f63d91e0fec9e9f" translate="yes" xml:space="preserve">
          <source>X509::Certificate#==</source>
          <target state="translated">X509::Certificate#==</target>
        </trans-unit>
        <trans-unit id="4649824d15aaf83b6029995da083f49472b03a8b" translate="yes" xml:space="preserve">
          <source>X509::Certificate#add_extension</source>
          <target state="translated">X509::Certificate#add_extension</target>
        </trans-unit>
        <trans-unit id="34aea6b58f3c2efe7f7f5683ad8510a30c81af89" translate="yes" xml:space="preserve">
          <source>X509::Certificate#check_private_key</source>
          <target state="translated">X509::Certificate#check_private_key</target>
        </trans-unit>
        <trans-unit id="7fff74528b2d17d96eb38fadbb8944d3dd87d9d3" translate="yes" xml:space="preserve">
          <source>X509::Certificate#extensions</source>
          <target state="translated">X509::Certificate#extensions</target>
        </trans-unit>
        <trans-unit id="091cf845d1ee4a1086c617de8b421d0358e6719d" translate="yes" xml:space="preserve">
          <source>X509::Certificate#extensions=</source>
          <target state="translated">X509::Certificate#extensions=</target>
        </trans-unit>
        <trans-unit id="10e70a9a84a5c63468f107bde7a818f5b951b5ff" translate="yes" xml:space="preserve">
          <source>X509::Certificate#initialize_copy</source>
          <target state="translated">X509::Certificate#initialize_copy</target>
        </trans-unit>
        <trans-unit id="442b5aa2a63408e8a38f7a4d5e443a539d02490c" translate="yes" xml:space="preserve">
          <source>X509::Certificate#inspect</source>
          <target state="translated">X509::Certificate#inspect</target>
        </trans-unit>
        <trans-unit id="52a00e93f4e0286682cdcd4fd2a3e595ee4c6ff0" translate="yes" xml:space="preserve">
          <source>X509::Certificate#issuer</source>
          <target state="translated">X509::Certificate#issuer</target>
        </trans-unit>
        <trans-unit id="e08e8f4bde11fa192ed4907cd40bbf12a3781b4e" translate="yes" xml:space="preserve">
          <source>X509::Certificate#issuer=</source>
          <target state="translated">X509::Certificate#issuer=</target>
        </trans-unit>
        <trans-unit id="01010c3e16c7d91a3c02d10ce21d06b397163665" translate="yes" xml:space="preserve">
          <source>X509::Certificate#not_after</source>
          <target state="translated">X509::Certificate#not_after</target>
        </trans-unit>
        <trans-unit id="efea9f7f65ee7852adb13e22a8fb5a574a56bb43" translate="yes" xml:space="preserve">
          <source>X509::Certificate#not_after=</source>
          <target state="translated">X509::Certificate#not_after=</target>
        </trans-unit>
        <trans-unit id="c81fad3ac5665d9a2506544d262affe49ee85aaa" translate="yes" xml:space="preserve">
          <source>X509::Certificate#not_before</source>
          <target state="translated">X509::Certificate#not_before</target>
        </trans-unit>
        <trans-unit id="9cb87f649f24b290bac4617ac024a773ed410c11" translate="yes" xml:space="preserve">
          <source>X509::Certificate#not_before=</source>
          <target state="translated">X509::Certificate#not_before=</target>
        </trans-unit>
        <trans-unit id="e54abb7e4255dff22eec384ee4a898b2be5f419e" translate="yes" xml:space="preserve">
          <source>X509::Certificate#pretty_print</source>
          <target state="translated">X509::Certificate#pretty_print</target>
        </trans-unit>
        <trans-unit id="fcf49fcb8c7137ed22a42c9d43691b7dedf92022" translate="yes" xml:space="preserve">
          <source>X509::Certificate#public_key</source>
          <target state="translated">X509::Certificate#public_key</target>
        </trans-unit>
        <trans-unit id="26e3e383dc4d9752a2b30129a34ac573806a4925" translate="yes" xml:space="preserve">
          <source>X509::Certificate#public_key=</source>
          <target state="translated">X509::Certificate#public_key=</target>
        </trans-unit>
        <trans-unit id="80b11a565e0beb863d3195057d045b30f5dd343e" translate="yes" xml:space="preserve">
          <source>X509::Certificate#serial</source>
          <target state="translated">X509::Certificate#serial</target>
        </trans-unit>
        <trans-unit id="2892f2d3eb2eaea6390bfeb06b3f6134d0f06e4a" translate="yes" xml:space="preserve">
          <source>X509::Certificate#serial=</source>
          <target state="translated">X509::Certificate#serial=</target>
        </trans-unit>
        <trans-unit id="522c46f9879bfcc08956c31a473b6b21ccb35efe" translate="yes" xml:space="preserve">
          <source>X509::Certificate#sign</source>
          <target state="translated">X509::Certificate#sign</target>
        </trans-unit>
        <trans-unit id="641efc5a691a6a0e9f1b6e4205bf3b5f2ec02546" translate="yes" xml:space="preserve">
          <source>X509::Certificate#signature_algorithm</source>
          <target state="translated">X509::Certificate#signature_algorithm</target>
        </trans-unit>
        <trans-unit id="198becd730c5974fc217f73f9ef972588915232d" translate="yes" xml:space="preserve">
          <source>X509::Certificate#subject</source>
          <target state="translated">X509::Certificate#subject</target>
        </trans-unit>
        <trans-unit id="71e5651505df7407086d6168e2d88855b1a19c2d" translate="yes" xml:space="preserve">
          <source>X509::Certificate#subject=</source>
          <target state="translated">X509::Certificate#subject=</target>
        </trans-unit>
        <trans-unit id="d4b4671ea0f23b657668114d295dc1325a2a1e89" translate="yes" xml:space="preserve">
          <source>X509::Certificate#to_der</source>
          <target state="translated">X509::Certificate#to_der</target>
        </trans-unit>
        <trans-unit id="5702b951b7b24890c7bdd66d51c9251dd617193c" translate="yes" xml:space="preserve">
          <source>X509::Certificate#to_pem</source>
          <target state="translated">X509::Certificate#to_pem</target>
        </trans-unit>
        <trans-unit id="343afaae4809eabbaf45fe507e6d879250b44403" translate="yes" xml:space="preserve">
          <source>X509::Certificate#to_s</source>
          <target state="translated">X509::Certificate#to_s</target>
        </trans-unit>
        <trans-unit id="e94c80e6cbaaa1ca567abfd7ad0119ce565cd3cf" translate="yes" xml:space="preserve">
          <source>X509::Certificate#to_text</source>
          <target state="translated">X509::Certificate#to_text</target>
        </trans-unit>
        <trans-unit id="50648ad6a16f2374b5653ce7f8ab98f0f162d985" translate="yes" xml:space="preserve">
          <source>X509::Certificate#verify</source>
          <target state="translated">X509::Certificate#verify</target>
        </trans-unit>
        <trans-unit id="e83af42149038525a400fd39e9fd7724b04e4351" translate="yes" xml:space="preserve">
          <source>X509::Certificate#version=</source>
          <target state="translated">X509::Certificate#version=</target>
        </trans-unit>
        <trans-unit id="745c3ab45da9505d610f60ddd9415cadd78da44e" translate="yes" xml:space="preserve">
          <source>X509::Certificate::new</source>
          <target state="translated">X509::Certificate::new</target>
        </trans-unit>
        <trans-unit id="c3b177924ef17eb7d8cdce8c69a4318380d865f8" translate="yes" xml:space="preserve">
          <source>X509::Extension</source>
          <target state="translated">X509::Extension</target>
        </trans-unit>
        <trans-unit id="f42473ec715d82f7509dc982c3ec04651432d63d" translate="yes" xml:space="preserve">
          <source>X509::Extension#==</source>
          <target state="translated">X509::Extension#==</target>
        </trans-unit>
        <trans-unit id="e40b6cce16c47caeb75b3b112cf3e9635a9c63b3" translate="yes" xml:space="preserve">
          <source>X509::Extension#critical=</source>
          <target state="translated">X509::Extension#critical=</target>
        </trans-unit>
        <trans-unit id="a966153658ab68dca7e42f5dbbe55f9655b6118a" translate="yes" xml:space="preserve">
          <source>X509::Extension#critical?</source>
          <target state="translated">X509::Extension#critical?</target>
        </trans-unit>
        <trans-unit id="09a26c4928cb07416586c7a7aad0d0ba76215853" translate="yes" xml:space="preserve">
          <source>X509::Extension#initialize_copy</source>
          <target state="translated">X509::Extension#initialize_copy</target>
        </trans-unit>
        <trans-unit id="2471ed1b72d82a0d7bb9e95b6c9c79d1427a37e4" translate="yes" xml:space="preserve">
          <source>X509::Extension#oid</source>
          <target state="translated">X509::Extension#oid</target>
        </trans-unit>
        <trans-unit id="b81407f4b49c6e08567ba785863f2ffe47bd1578" translate="yes" xml:space="preserve">
          <source>X509::Extension#oid=</source>
          <target state="translated">X509::Extension#oid=</target>
        </trans-unit>
        <trans-unit id="1c363d63eb6b416e2fa46a08673a21672d9b108e" translate="yes" xml:space="preserve">
          <source>X509::Extension#to_a</source>
          <target state="translated">X509::Extension#to_a</target>
        </trans-unit>
        <trans-unit id="87b336861b4f963aeb650f9eb7df1b2931cfc31e" translate="yes" xml:space="preserve">
          <source>X509::Extension#to_der</source>
          <target state="translated">X509::Extension#to_der</target>
        </trans-unit>
        <trans-unit id="6d3b9faf29069613dde9df8dd468fd84478cc72d" translate="yes" xml:space="preserve">
          <source>X509::Extension#to_h</source>
          <target state="translated">X509::Extension#to_h</target>
        </trans-unit>
        <trans-unit id="232b5d8a9c28adcc94f75e2a501be3439c0008a9" translate="yes" xml:space="preserve">
          <source>X509::Extension#to_s</source>
          <target state="translated">X509::Extension#to_s</target>
        </trans-unit>
        <trans-unit id="05627fc6b7cfbcbc19ffcd07360ca6f6499613db" translate="yes" xml:space="preserve">
          <source>X509::Extension#value</source>
          <target state="translated">X509::Extension#value</target>
        </trans-unit>
        <trans-unit id="5232eee1e8a8259928f3492b056198ae630c66ca" translate="yes" xml:space="preserve">
          <source>X509::Extension#value=</source>
          <target state="translated">X509::Extension#value=</target>
        </trans-unit>
        <trans-unit id="a0989169006b862600da5c2f60a29308b30ae23e" translate="yes" xml:space="preserve">
          <source>X509::Extension::new</source>
          <target state="translated">X509::Extension::new</target>
        </trans-unit>
        <trans-unit id="c3e0df876491c27982dda1a2f109c6dbc278c783" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory</source>
          <target state="translated">X509::ExtensionFactory</target>
        </trans-unit>
        <trans-unit id="eb69da4fda72d39f3f50f569622abc531911d6d5" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#config</source>
          <target state="translated">X509::ExtensionFactory#config</target>
        </trans-unit>
        <trans-unit id="c9f330a474f68acaca38ed6139387cdf9237672d" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#create_ext</source>
          <target state="translated">X509::ExtensionFactory#create_ext</target>
        </trans-unit>
        <trans-unit id="570a9e28b57a1981c4d7b88a54d660b3b766c59f" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#create_ext_from_array</source>
          <target state="translated">X509::ExtensionFactory#create_ext_from_array</target>
        </trans-unit>
        <trans-unit id="22eab188b63aad193333525afcb9c2b000093a55" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#create_ext_from_hash</source>
          <target state="translated">X509::ExtensionFactory#create_ext_from_hash</target>
        </trans-unit>
        <trans-unit id="744eda68da21816efbe38b3463e71c3a1daa0a5b" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#create_ext_from_string</source>
          <target state="translated">X509::ExtensionFactory#create_ext_from_string</target>
        </trans-unit>
        <trans-unit id="9b301ce7fdfcce9577a145d32c5077722ae001e6" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#create_extension</source>
          <target state="translated">X509::ExtensionFactory#create_extension</target>
        </trans-unit>
        <trans-unit id="0658f371d47f57f61b068cd60ea035290b351def" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#crl</source>
          <target state="translated">X509::ExtensionFactory#crl</target>
        </trans-unit>
        <trans-unit id="11cd0e95615b3c66d71ee692a3eec58751ef79af" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#crl=</source>
          <target state="translated">X509::ExtensionFactory#crl=</target>
        </trans-unit>
        <trans-unit id="a1095391dfe5f39b2fb16376c69d556fe31e6c3a" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#issuer_certificate</source>
          <target state="translated">X509::ExtensionFactory#issuer_certificate</target>
        </trans-unit>
        <trans-unit id="18e79037884044c445cc6d72032b040f1fd53ee3" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#issuer_certificate=</source>
          <target state="translated">X509::ExtensionFactory#issuer_certificate=</target>
        </trans-unit>
        <trans-unit id="4e06b3c7d6bb4f578c8020fd2b624cc5e1ec2321" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#subject_certificate</source>
          <target state="translated">X509::ExtensionFactory#subject_certificate</target>
        </trans-unit>
        <trans-unit id="13702e5df3882f56dc3427de9ecf6e412378146a" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#subject_certificate=</source>
          <target state="translated">X509::ExtensionFactory#subject_certificate=</target>
        </trans-unit>
        <trans-unit id="9d987f902329e248d0132f7032492c3065723825" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#subject_request</source>
          <target state="translated">X509::ExtensionFactory#subject_request</target>
        </trans-unit>
        <trans-unit id="4dc15fba970f1c859cc275215c2ba967c1c4b4e8" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory#subject_request=</source>
          <target state="translated">X509::ExtensionFactory#subject_request=</target>
        </trans-unit>
        <trans-unit id="15b00e3ce6d614b77a8423bb4e79f8cb0f35b207" translate="yes" xml:space="preserve">
          <source>X509::ExtensionFactory::new</source>
          <target state="translated">X509::ExtensionFactory::new</target>
        </trans-unit>
        <trans-unit id="391b39565b797a8632b86abc1aabeaee732c42ad" translate="yes" xml:space="preserve">
          <source>X509::Name</source>
          <target state="translated">X509::Name</target>
        </trans-unit>
        <trans-unit id="b36aac77960bb664571e4993d627d65fdac3bc88" translate="yes" xml:space="preserve">
          <source>X509::Name#&amp;lt;=&amp;gt;</source>
          <target state="translated">X509::Name#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="eee60a19e00d39049a44b9a315b67e584cc67edb" translate="yes" xml:space="preserve">
          <source>X509::Name#add_entry</source>
          <target state="translated">X509::Name#add_entry</target>
        </trans-unit>
        <trans-unit id="24f4d68cee3c6d54b744cd98dcceb8d1d2156a80" translate="yes" xml:space="preserve">
          <source>X509::Name#cmp</source>
          <target state="translated">X509::Name#cmp</target>
        </trans-unit>
        <trans-unit id="322c333052fd1d18f429fa80cd50f49530ee536c" translate="yes" xml:space="preserve">
          <source>X509::Name#eql?</source>
          <target state="translated">X509::Name#eql?</target>
        </trans-unit>
        <trans-unit id="adf4fd5c3521a4199a0a4101185b3a34c99938e9" translate="yes" xml:space="preserve">
          <source>X509::Name#hash</source>
          <target state="translated">X509::Name#hash</target>
        </trans-unit>
        <trans-unit id="49431152956366efa495107a2ad863c7d39dd289" translate="yes" xml:space="preserve">
          <source>X509::Name#hash_old</source>
          <target state="translated">X509::Name#hash_old</target>
        </trans-unit>
        <trans-unit id="3ae07ef82af9a1c8e746a1ec1a2da803b9405591" translate="yes" xml:space="preserve">
          <source>X509::Name#initialize_copy</source>
          <target state="translated">X509::Name#initialize_copy</target>
        </trans-unit>
        <trans-unit id="fee1c16a26b9481bcc15fc8c87f67a5ae3c619be" translate="yes" xml:space="preserve">
          <source>X509::Name#pretty_print</source>
          <target state="translated">X509::Name#pretty_print</target>
        </trans-unit>
        <trans-unit id="9830482a0817c78f50896263edfdb5200841b590" translate="yes" xml:space="preserve">
          <source>X509::Name#to_a</source>
          <target state="translated">X509::Name#to_a</target>
        </trans-unit>
        <trans-unit id="26dc587044ad28d059605a80e95dc365e5d29fd0" translate="yes" xml:space="preserve">
          <source>X509::Name#to_der</source>
          <target state="translated">X509::Name#to_der</target>
        </trans-unit>
        <trans-unit id="e250d3b6ad28255fe2f1f62c17dc87c53795f839" translate="yes" xml:space="preserve">
          <source>X509::Name#to_s</source>
          <target state="translated">X509::Name#to_s</target>
        </trans-unit>
        <trans-unit id="eba0ac23bedbb0e2e7bdd14ceed1b42635dd700a" translate="yes" xml:space="preserve">
          <source>X509::Name#to_utf8</source>
          <target state="translated">X509::Name#to_utf8</target>
        </trans-unit>
        <trans-unit id="dd91bf9849c3fb68018024ca8275a7b23f29e619" translate="yes" xml:space="preserve">
          <source>X509::Name.new &amp;rarr; name &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">X509 :: Name.new&amp;rarr;name &lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9dd70357660cdf252fad6b771d54f4a3844fb8ab" translate="yes" xml:space="preserve">
          <source>X509::Name.new(der) &amp;rarr; name</source>
          <target state="translated">X509 :: Name.new（der）&amp;rarr;名前</target>
        </trans-unit>
        <trans-unit id="67558053a7c497a5c9b490191e77cf411c35a478" translate="yes" xml:space="preserve">
          <source>X509::Name.new(distinguished_name) &amp;rarr; name</source>
          <target state="translated">X509 :: Name.new（distinguished_name）&amp;rarr;名前</target>
        </trans-unit>
        <trans-unit id="c00a066f5023e3733274c472b1a2f96b27147a9f" translate="yes" xml:space="preserve">
          <source>X509::Name.new(distinguished_name, template) &amp;rarr; name</source>
          <target state="translated">X509 :: Name.new（distinguished_name、template）&amp;rarr;名前</target>
        </trans-unit>
        <trans-unit id="a7dd240aaa34649449aa5f25d4ab71cd4caddb83" translate="yes" xml:space="preserve">
          <source>X509::Name::RFC2253DN</source>
          <target state="translated">X509::Name::RFC2253DN</target>
        </trans-unit>
        <trans-unit id="1b43ab6fb2ea9b174a783c4d0c3398fb8c8a7a99" translate="yes" xml:space="preserve">
          <source>X509::Name::RFC2253DN#expand_hexstring</source>
          <target state="translated">X509::Name::RFC2253DN#expand_hexstring</target>
        </trans-unit>
        <trans-unit id="6a96d6b1a0e07f152adef054b581b279c0718766" translate="yes" xml:space="preserve">
          <source>X509::Name::RFC2253DN#expand_pair</source>
          <target state="translated">X509::Name::RFC2253DN#expand_pair</target>
        </trans-unit>
        <trans-unit id="bb7d24c09b8407f752b20ba746edd60b22887db3" translate="yes" xml:space="preserve">
          <source>X509::Name::RFC2253DN#expand_value</source>
          <target state="translated">X509::Name::RFC2253DN#expand_value</target>
        </trans-unit>
        <trans-unit id="6c60d9fbce096028ff8d0e56d36ebb8a6b9314c9" translate="yes" xml:space="preserve">
          <source>X509::Name::RFC2253DN#scan</source>
          <target state="translated">X509::Name::RFC2253DN#scan</target>
        </trans-unit>
        <trans-unit id="d05747a86cf55d2de9b69b92adc19c433cc88cb3" translate="yes" xml:space="preserve">
          <source>X509::Name::new</source>
          <target state="translated">X509::Name::new</target>
        </trans-unit>
        <trans-unit id="543b5d93c239e28ab1441e39871f9ed03ff7acef" translate="yes" xml:space="preserve">
          <source>X509::Name::parse</source>
          <target state="translated">X509::Name::parse</target>
        </trans-unit>
        <trans-unit id="e42bc1d900c60c969754f3a36234cb83da7acb55" translate="yes" xml:space="preserve">
          <source>X509::Name::parse_openssl</source>
          <target state="translated">X509::Name::parse_openssl</target>
        </trans-unit>
        <trans-unit id="bfd0afa8a004e6560a63d6e10d1382dd6ee41274" translate="yes" xml:space="preserve">
          <source>X509::Name::parse_rfc2253</source>
          <target state="translated">X509::Name::parse_rfc2253</target>
        </trans-unit>
        <trans-unit id="9e3bc18d40a273d908d2bff3edaf16a10ae4a580" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_ANY</source>
          <target state="translated">X509::PURPOSE_ANY</target>
        </trans-unit>
        <trans-unit id="e4e2c21510b38d5246c17556c9b31d16653ccd7f" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_CRL_SIGN</source>
          <target state="translated">X509::PURPOSE_CRL_SIGN</target>
        </trans-unit>
        <trans-unit id="f7420702399d612d83590c342096fa271ed0d27c" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_NS_SSL_SERVER</source>
          <target state="translated">X509::PURPOSE_NS_SSL_SERVER</target>
        </trans-unit>
        <trans-unit id="54bb6bb2bd8e9c21b60794700e517ec44eb7993f" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_OCSP_HELPER</source>
          <target state="translated">X509::PURPOSE_OCSP_HELPER</target>
        </trans-unit>
        <trans-unit id="905da11e9968e35320a6cabf1d7a6f31f20ba198" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_SMIME_ENCRYPT</source>
          <target state="translated">X509::PURPOSE_SMIME_ENCRYPT</target>
        </trans-unit>
        <trans-unit id="02d0f23910c14cf8ed7c60280249ec18bcd85354" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_SMIME_SIGN</source>
          <target state="translated">X509::PURPOSE_SMIME_SIGN</target>
        </trans-unit>
        <trans-unit id="4b2eed3ad1d1e71277dd4082cae8bb3738c85ffe" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_SSL_CLIENT</source>
          <target state="translated">X509::PURPOSE_SSL_CLIENT</target>
        </trans-unit>
        <trans-unit id="403593dfa560e0ca2c73cd8e1d8c6d5496155315" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_SSL_SERVER</source>
          <target state="translated">X509::PURPOSE_SSL_SERVER</target>
        </trans-unit>
        <trans-unit id="4805e6e33c703d306ee5301fee454fe73230d731" translate="yes" xml:space="preserve">
          <source>X509::PURPOSE_TIMESTAMP_SIGN</source>
          <target state="translated">X509::PURPOSE_TIMESTAMP_SIGN</target>
        </trans-unit>
        <trans-unit id="3f94c5407717b0979aa70803737d2d1deec4f1c9" translate="yes" xml:space="preserve">
          <source>X509::Request</source>
          <target state="translated">X509::Request</target>
        </trans-unit>
        <trans-unit id="e58a9ec6cf97399a1e18aacb96faf78b88421db9" translate="yes" xml:space="preserve">
          <source>X509::Request#==</source>
          <target state="translated">X509::Request#==</target>
        </trans-unit>
        <trans-unit id="509d121aea790368d84663d221358c8766e2670a" translate="yes" xml:space="preserve">
          <source>X509::Request#add_attribute</source>
          <target state="translated">X509::Request#add_attribute</target>
        </trans-unit>
        <trans-unit id="94483a6b97dc1c79ea4fb4763b8c671189bb5e84" translate="yes" xml:space="preserve">
          <source>X509::Request#attributes</source>
          <target state="translated">X509::Request#attributes</target>
        </trans-unit>
        <trans-unit id="6af71e053a0527bd5c5596adcc526c2dbfaaf5c6" translate="yes" xml:space="preserve">
          <source>X509::Request#attributes=</source>
          <target state="translated">X509::Request#attributes=</target>
        </trans-unit>
        <trans-unit id="004e2abcabaf0d2b58c6903f893d4d116e360432" translate="yes" xml:space="preserve">
          <source>X509::Request#initialize_copy</source>
          <target state="translated">X509::Request#initialize_copy</target>
        </trans-unit>
        <trans-unit id="4a03b4bd50b77a18087b6840c71f2bc88f3a1b38" translate="yes" xml:space="preserve">
          <source>X509::Request#public_key</source>
          <target state="translated">X509::Request#public_key</target>
        </trans-unit>
        <trans-unit id="9716310991e0ee338e9de8e7085f1205f6318bad" translate="yes" xml:space="preserve">
          <source>X509::Request#public_key=</source>
          <target state="translated">X509::Request#public_key=</target>
        </trans-unit>
        <trans-unit id="da3f337e876db0155d6663a6fa9bd0b9f7f3bc4d" translate="yes" xml:space="preserve">
          <source>X509::Request#sign</source>
          <target state="translated">X509::Request#sign</target>
        </trans-unit>
        <trans-unit id="471b7a3f5f1864c6be6ab8a595819c49fd428149" translate="yes" xml:space="preserve">
          <source>X509::Request#signature_algorithm</source>
          <target state="translated">X509::Request#signature_algorithm</target>
        </trans-unit>
        <trans-unit id="15423e209090be0113e1548663f28879b8dda563" translate="yes" xml:space="preserve">
          <source>X509::Request#subject</source>
          <target state="translated">X509::Request#subject</target>
        </trans-unit>
        <trans-unit id="a91c5b0a51d760dce2186b3d328e13a002ce54f1" translate="yes" xml:space="preserve">
          <source>X509::Request#subject=</source>
          <target state="translated">X509::Request#subject=</target>
        </trans-unit>
        <trans-unit id="2594c8d62dff617ba64ad4232b6f83adf4137dab" translate="yes" xml:space="preserve">
          <source>X509::Request#to_der</source>
          <target state="translated">X509::Request#to_der</target>
        </trans-unit>
        <trans-unit id="e79bb49f8a8d9bf9551cdefd267894a3e174a61a" translate="yes" xml:space="preserve">
          <source>X509::Request#to_pem</source>
          <target state="translated">X509::Request#to_pem</target>
        </trans-unit>
        <trans-unit id="5a8005a1a5cf8c681473d717daa8dc0f3c62dff7" translate="yes" xml:space="preserve">
          <source>X509::Request#to_s</source>
          <target state="translated">X509::Request#to_s</target>
        </trans-unit>
        <trans-unit id="95f8e2926e484da84f9b485cfece70d5315bac68" translate="yes" xml:space="preserve">
          <source>X509::Request#to_text</source>
          <target state="translated">X509::Request#to_text</target>
        </trans-unit>
        <trans-unit id="c20c659b0d095f5a72faa00a223bd2f7d1a6a4a5" translate="yes" xml:space="preserve">
          <source>X509::Request#verify</source>
          <target state="translated">X509::Request#verify</target>
        </trans-unit>
        <trans-unit id="9d4636d891c4c1eca438afd81ae3a5f4c1dfc561" translate="yes" xml:space="preserve">
          <source>X509::Request#version=</source>
          <target state="translated">X509::Request#version=</target>
        </trans-unit>
        <trans-unit id="e04776fccf8f767ae513c8f1fb6dfb53e2caf2a9" translate="yes" xml:space="preserve">
          <source>X509::Request::new</source>
          <target state="translated">X509::Request::new</target>
        </trans-unit>
        <trans-unit id="87d642a4fec0c5eb3fb692f5722ce20c837471b6" translate="yes" xml:space="preserve">
          <source>X509::Revoked</source>
          <target state="translated">X509::Revoked</target>
        </trans-unit>
        <trans-unit id="41329453d3437587f47aa5f96f6c436d96f22d26" translate="yes" xml:space="preserve">
          <source>X509::Revoked#==</source>
          <target state="translated">X509::Revoked#==</target>
        </trans-unit>
        <trans-unit id="666172c5c94273e14ec7254f7df02b6c8b6ac62a" translate="yes" xml:space="preserve">
          <source>X509::Revoked#add_extension</source>
          <target state="translated">X509::Revoked#add_extension</target>
        </trans-unit>
        <trans-unit id="0578bb2bc943166c2665e81cb2bc0d17d4b0194e" translate="yes" xml:space="preserve">
          <source>X509::Revoked#extensions</source>
          <target state="translated">X509::Revoked#extensions</target>
        </trans-unit>
        <trans-unit id="09407e62f014cd7a1ebaeeaa659d9106323e0d1c" translate="yes" xml:space="preserve">
          <source>X509::Revoked#extensions=</source>
          <target state="translated">X509::Revoked#extensions=</target>
        </trans-unit>
        <trans-unit id="c680e1266e2205e3e12f8cbc81dcf7f616800484" translate="yes" xml:space="preserve">
          <source>X509::Revoked#initialize_copy</source>
          <target state="translated">X509::Revoked#initialize_copy</target>
        </trans-unit>
        <trans-unit id="fc1fe3e0af440fbb44cdc3248776d493ef0a7e73" translate="yes" xml:space="preserve">
          <source>X509::Revoked#serial</source>
          <target state="translated">X509::Revoked#serial</target>
        </trans-unit>
        <trans-unit id="9500ae8d137edd825bbbd4f032466759e217a7cf" translate="yes" xml:space="preserve">
          <source>X509::Revoked#serial=</source>
          <target state="translated">X509::Revoked#serial=</target>
        </trans-unit>
        <trans-unit id="c5393d56bde907616278eb4407ceb659e5713903" translate="yes" xml:space="preserve">
          <source>X509::Revoked#time</source>
          <target state="translated">X509::Revoked#time</target>
        </trans-unit>
        <trans-unit id="c147193cde3005c3f2b906d9224022e530f7f91e" translate="yes" xml:space="preserve">
          <source>X509::Revoked#time=</source>
          <target state="translated">X509::Revoked#time=</target>
        </trans-unit>
        <trans-unit id="fe3c6f3d78aba3ced7f375872a128d326dde174b" translate="yes" xml:space="preserve">
          <source>X509::Revoked#to_der</source>
          <target state="translated">X509::Revoked#to_der</target>
        </trans-unit>
        <trans-unit id="1440fe947997815f39ea8bcadbc2d2d3ec18f0a0" translate="yes" xml:space="preserve">
          <source>X509::Revoked::new</source>
          <target state="translated">X509::Revoked::new</target>
        </trans-unit>
        <trans-unit id="b5758017fe1639844423909962c70d22616a3a34" translate="yes" xml:space="preserve">
          <source>X509::Store</source>
          <target state="translated">X509::Store</target>
        </trans-unit>
        <trans-unit id="8d559c2c10c985b85fd6dfb736fc38ecb60591e3" translate="yes" xml:space="preserve">
          <source>X509::Store#add_cert</source>
          <target state="translated">X509::Store#add_cert</target>
        </trans-unit>
        <trans-unit id="995d2f6069a9188d889839c747a5569b8f1d9327" translate="yes" xml:space="preserve">
          <source>X509::Store#add_crl</source>
          <target state="translated">X509::Store#add_crl</target>
        </trans-unit>
        <trans-unit id="db277e4ad6287d301555e61e5992b9ea49c3dc23" translate="yes" xml:space="preserve">
          <source>X509::Store#add_file</source>
          <target state="translated">X509::Store#add_file</target>
        </trans-unit>
        <trans-unit id="c7ae463b7dae0ea28712bb1cbf8a62075bf4ae40" translate="yes" xml:space="preserve">
          <source>X509::Store#add_path</source>
          <target state="translated">X509::Store#add_path</target>
        </trans-unit>
        <trans-unit id="92177020e5fe308133c603be5283bf800fbc97a4" translate="yes" xml:space="preserve">
          <source>X509::Store#chain</source>
          <target state="translated">X509::Store#chain</target>
        </trans-unit>
        <trans-unit id="28ecde4fa833892cfda4a9e8f75a0d6538c755fe" translate="yes" xml:space="preserve">
          <source>X509::Store#error</source>
          <target state="translated">X509::Store#error</target>
        </trans-unit>
        <trans-unit id="f209c77291c3a98834266c577a981f792ae87bac" translate="yes" xml:space="preserve">
          <source>X509::Store#error_string</source>
          <target state="translated">X509::Store#error_string</target>
        </trans-unit>
        <trans-unit id="9bdc790969d5ee49d3d7495797d9fc6213802c46" translate="yes" xml:space="preserve">
          <source>X509::Store#flags=</source>
          <target state="translated">X509::Store#flags=</target>
        </trans-unit>
        <trans-unit id="84078362866ada26ec0f0b41f8155d0d3d38c120" translate="yes" xml:space="preserve">
          <source>X509::Store#purpose=</source>
          <target state="translated">X509::Store#purpose=</target>
        </trans-unit>
        <trans-unit id="d3974bfa9d754a910aa4efaff871b589a06745e2" translate="yes" xml:space="preserve">
          <source>X509::Store#set_default_paths</source>
          <target state="translated">X509::Store#set_default_paths</target>
        </trans-unit>
        <trans-unit id="41b07f9728eb201ceecf7b99f938ebe109cc3b4d" translate="yes" xml:space="preserve">
          <source>X509::Store#time=</source>
          <target state="translated">X509::Store#time=</target>
        </trans-unit>
        <trans-unit id="2cc1887b7ccf4f3484c91b5f72626e8d6161d7fe" translate="yes" xml:space="preserve">
          <source>X509::Store#trust=</source>
          <target state="translated">X509::Store#trust=</target>
        </trans-unit>
        <trans-unit id="22217466deec42d6598c1ab62ffcfcdf55be842b" translate="yes" xml:space="preserve">
          <source>X509::Store#verify</source>
          <target state="translated">X509::Store#verify</target>
        </trans-unit>
        <trans-unit id="903e5fbe26dfed9b01c97e2570037090225803b1" translate="yes" xml:space="preserve">
          <source>X509::Store#verify_callback</source>
          <target state="translated">X509::Store#verify_callback</target>
        </trans-unit>
        <trans-unit id="007adca3cdcef6f53c9b18ad909fe0a0fb6fcbcf" translate="yes" xml:space="preserve">
          <source>X509::Store#verify_callback=</source>
          <target state="translated">X509::Store#verify_callback=</target>
        </trans-unit>
        <trans-unit id="304a422afc36dfa8c838e20186b5b8761768f5fc" translate="yes" xml:space="preserve">
          <source>X509::Store.new &amp;rarr; store &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">X509 :: Store.new&amp;rarr;store &lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f9eaf0b82bd5c197d3dff1ae017c731e3bd4898" translate="yes" xml:space="preserve">
          <source>X509::Store::new</source>
          <target state="translated">X509::Store::new</target>
        </trans-unit>
        <trans-unit id="a1453e1d9d69efa0f0698a1d85ebc5f207e3dbea" translate="yes" xml:space="preserve">
          <source>X509::StoreContext</source>
          <target state="translated">X509::StoreContext</target>
        </trans-unit>
        <trans-unit id="9996a5d5f669363c6f076813c998f76fa49fc92e" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#chain</source>
          <target state="translated">X509::StoreContext#chain</target>
        </trans-unit>
        <trans-unit id="f4dcbc03c1ca77ed7e1ec2b06ab30385dcc63027" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#cleanup</source>
          <target state="translated">X509::StoreContext#cleanup</target>
        </trans-unit>
        <trans-unit id="f6e9fd3498e895aedc5fee1ebc7676b9bedce1c2" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#current_cert</source>
          <target state="translated">X509::StoreContext#current_cert</target>
        </trans-unit>
        <trans-unit id="0b58fdd7a0a1ed71a83bfec079075633bb09a0c6" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#current_crl</source>
          <target state="translated">X509::StoreContext#current_crl</target>
        </trans-unit>
        <trans-unit id="4dcb70be572f0b9e102ef783ae8eda9b5c2c7c48" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#error</source>
          <target state="translated">X509::StoreContext#error</target>
        </trans-unit>
        <trans-unit id="3cc09e363117ba7b8811f5912833b977d717c2fa" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#error=</source>
          <target state="translated">X509::StoreContext#error=</target>
        </trans-unit>
        <trans-unit id="9366c259813c550d8286d23ba9ab9c3f0f868e24" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#error_depth</source>
          <target state="translated">X509::StoreContext#error_depth</target>
        </trans-unit>
        <trans-unit id="981bf4fc2cc56c67559f86e3729fbc14ac0e63fd" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#error_string</source>
          <target state="translated">X509::StoreContext#error_string</target>
        </trans-unit>
        <trans-unit id="fa8b4ad6b2e42f218244ac374741034b91eaddb1" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#flags=</source>
          <target state="translated">X509::StoreContext#flags=</target>
        </trans-unit>
        <trans-unit id="fa89ddb14b67d2bcc80e68c7a87e386fbf6a4df7" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#purpose=</source>
          <target state="translated">X509::StoreContext#purpose=</target>
        </trans-unit>
        <trans-unit id="5724ac1f0dc5eeef5cf1c3a994cc2c5a1268c786" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#time=</source>
          <target state="translated">X509::StoreContext#time=</target>
        </trans-unit>
        <trans-unit id="8a0abb717c6e721cd0bb276a26ef99f095cea28f" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#trust=</source>
          <target state="translated">X509::StoreContext#trust=</target>
        </trans-unit>
        <trans-unit id="27c227b416f9d045d0c1f61fc69d44ee66b73a08" translate="yes" xml:space="preserve">
          <source>X509::StoreContext#verify</source>
          <target state="translated">X509::StoreContext#verify</target>
        </trans-unit>
        <trans-unit id="6298d6612eeaa71b8cadb9e476261fc3bc891986" translate="yes" xml:space="preserve">
          <source>X509::StoreContext::new</source>
          <target state="translated">X509::StoreContext::new</target>
        </trans-unit>
        <trans-unit id="1c03b9654b2453733eea2e92dc7bd163aff77fb5" translate="yes" xml:space="preserve">
          <source>XEROX NS protocols</source>
          <target state="translated">ゼロックスエヌエスプロトコル</target>
        </trans-unit>
        <trans-unit id="08554941d83e46e328635e7c212bcf1077a2d622" translate="yes" xml:space="preserve">
          <source>XML_ATTR_CONTENT_DECORATOR</source>
          <target state="translated">XML_ATTR_CONTENT_DECORATOR</target>
        </trans-unit>
        <trans-unit id="17cc9310740d3b8ae5e0b4dba4192c28f5361e45" translate="yes" xml:space="preserve">
          <source>XML_ATTR_QUOTE_DECORATOR</source>
          <target state="translated">XML_ATTR_QUOTE_DECORATOR</target>
        </trans-unit>
        <trans-unit id="707546c4e3d448dc80c2c4e02742bde08af4331c" translate="yes" xml:space="preserve">
          <source>XML_TEXT_DECORATOR</source>
          <target state="translated">XML_TEXT_DECORATOR</target>
        </trans-unit>
        <trans-unit id="d66fc2dc6bb0474656735b57774af51c3357b3d1" translate="yes" xml:space="preserve">
          <source>XNS IDP</source>
          <target state="translated">エックスエヌエスアイディーピー</target>
        </trans-unit>
        <trans-unit id="fec273728c0190901988c2bdab1126f2ae2afec5" translate="yes" xml:space="preserve">
          <source>XOR (exclusive OR)</source>
          <target state="translated">XOR</target>
        </trans-unit>
        <trans-unit id="0d1a55aada492d11406db66d37552a1432c52381" translate="yes" xml:space="preserve">
          <source>Xpress Transport Protocol</source>
          <target state="translated">エックスプレストランスポートプロトコル</target>
        </trans-unit>
        <trans-unit id="ffbcb202b09db426bae56cf2ffb88f18594f2258" translate="yes" xml:space="preserve">
          <source>YAML</source>
          <target state="translated">YAML</target>
        </trans-unit>
        <trans-unit id="0900acd09de83408ebadb5dd11179c013f740775" translate="yes" xml:space="preserve">
          <source>YAML + &lt;a href=&quot;dbm&quot;&gt;&lt;code&gt;DBM&lt;/code&gt;&lt;/a&gt; = YDBM</source>
          <target state="translated">YAML + &lt;a href=&quot;dbm&quot;&gt; &lt;code&gt;DBM&lt;/code&gt; &lt;/a&gt; = YDBM</target>
        </trans-unit>
        <trans-unit id="54ad160850853c10aaf937bee36da78f13f52599" translate="yes" xml:space="preserve">
          <source>YAML Emitting</source>
          <target state="translated">ヤムルはっしん</target>
        </trans-unit>
        <trans-unit id="354dbdd4802c90bf3596670b90c8e76fffd2ac88" translate="yes" xml:space="preserve">
          <source>YAML Parsing</source>
          <target state="translated">YAML のパース</target>
        </trans-unit>
        <trans-unit id="78638045dbc01959c557cb162b7038187c297d58" translate="yes" xml:space="preserve">
          <source>YAML is a popular human readable data serialization format used by many Ruby programs for configuration and database persistence of Ruby object trees.</source>
          <target state="translated">YAMLは多くのRubyプログラムでRubyオブジェクトツリーの設定やデータベースの永続化のために使用されている一般的な人間が読めるデータのシリアライズ形式です。</target>
        </trans-unit>
        <trans-unit id="9e173e38a6b33682d1bf5a258e728ffabbb52441" translate="yes" xml:space="preserve">
          <source>YAML::DBM</source>
          <target state="translated">YAML::DBM</target>
        </trans-unit>
        <trans-unit id="34f51936222092d1cd8a4ed201d69d15e092c33a" translate="yes" xml:space="preserve">
          <source>YAML::Store</source>
          <target state="translated">YAML::Store</target>
        </trans-unit>
        <trans-unit id="be9221a8bbdf639c1ebb95cdf253f53636d6f052" translate="yes" xml:space="preserve">
          <source>YAML::Syck</source>
          <target state="translated">YAML::Syck</target>
        </trans-unit>
        <trans-unit id="ac33410759996411038b41e7a9e13f56fc2f45d2" translate="yes" xml:space="preserve">
          <source>YAMLSerializer</source>
          <target state="translated">YAMLSerializer</target>
        </trans-unit>
        <trans-unit id="0d4e7137ffecfa70a87aba9bd4845898cf2c835e" translate="yes" xml:space="preserve">
          <source>YAMLSerializer#convert_to_backward_compatible_key</source>
          <target state="translated">YAMLSerializer#convert_to_backward_compatible_key</target>
        </trans-unit>
        <trans-unit id="8bceeadb6a36d52f3dd99bed16dce0b62d43a836" translate="yes" xml:space="preserve">
          <source>YAMLSerializer#dump</source>
          <target state="translated">YAMLSerializer#dump</target>
        </trans-unit>
        <trans-unit id="22e0ed06407d20b7db6c03e3dfac6f25cb9cec95" translate="yes" xml:space="preserve">
          <source>YAMLSerializer#dump_hash</source>
          <target state="translated">YAMLSerializer#dump_hash</target>
        </trans-unit>
        <trans-unit id="04d7f5eac93874bfae40173c39e4854c03d5c5f0" translate="yes" xml:space="preserve">
          <source>YAMLSerializer#load</source>
          <target state="translated">YAMLSerializer#load</target>
        </trans-unit>
        <trans-unit id="f83a0e54478505513704d0569e61871e8b8b37a7" translate="yes" xml:space="preserve">
          <source>YELLOW</source>
          <target state="translated">YELLOW</target>
        </trans-unit>
        <trans-unit id="b54582ee48130f45773e8a75315adcea5b591629" translate="yes" xml:space="preserve">
          <source>YamlLibrarySyntaxError</source>
          <target state="translated">YamlLibrarySyntaxError</target>
        </trans-unit>
        <trans-unit id="87d89050677c716dec9c6ff6623fd0720e84ba84" translate="yes" xml:space="preserve">
          <source>YamlSyntaxError</source>
          <target state="translated">YamlSyntaxError</target>
        </trans-unit>
        <trans-unit id="68f76a9015510f07ae70c330d593845f92b2e41b" translate="yes" xml:space="preserve">
          <source>YamlSyntaxError#orig_exception</source>
          <target state="translated">YamlSyntaxError#orig_exception</target>
        </trans-unit>
        <trans-unit id="1b20aefb95809e3b76cdac1cf29621388331d49c" translate="yes" xml:space="preserve">
          <source>YamlSyntaxError::new</source>
          <target state="translated">YamlSyntaxError::new</target>
        </trans-unit>
        <trans-unit id="cf8c2932be74cdab8e273d7fd75ac8a7c562e9ca" translate="yes" xml:space="preserve">
          <source>Year which may include century, if provided</source>
          <target state="translated">年(提供されている場合は世紀を含むことができる</target>
        </trans-unit>
        <trans-unit id="10d3e8afe3cc66ccabb58db4ab6bef160ba97647" translate="yes" xml:space="preserve">
          <source>Year without a century (00..99)</source>
          <target state="translated">世紀のない年 (00.99)</target>
        </trans-unit>
        <trans-unit id="296c3f0bd2b1424980206fde998bc8c75bb14582" translate="yes" xml:space="preserve">
          <source>Yielder</source>
          <target state="translated">Yielder</target>
        </trans-unit>
        <trans-unit id="fff2fefa0268a0ff4658fca0c94bd7853e0c3368" translate="yes" xml:space="preserve">
          <source>Yielder#to_proc</source>
          <target state="translated">Yielder#to_proc</target>
        </trans-unit>
        <trans-unit id="b4ebc669ef6ff0756070804352d10c59e3716a47" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt; in non-blocking mode.</source>
          <target state="translated">収量の &lt;code&gt;self&lt;/code&gt; 非ブロックモードインチ</target>
        </trans-unit>
        <trans-unit id="5afdd7a45b1e6d3acc7c55150c865ed111b05dba" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt; with disabling echo back.</source>
          <target state="translated">収量の &lt;code&gt;self&lt;/code&gt; エコーバックを無効にしています。</target>
        </trans-unit>
        <trans-unit id="bc82b824b911fe1147b04cbd406f107d45a62d41" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt; within cooked mode.</source>
          <target state="translated">収量の &lt;code&gt;self&lt;/code&gt; 調理モード内。</target>
        </trans-unit>
        <trans-unit id="fa9b3613d0896737f1dd94e1cabc531c47aaba0d" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt; within raw mode, and returns the result of the block.</source>
          <target state="translated">Yields &lt;code&gt;self&lt;/code&gt; within raw mode, and returns the result of the block.</target>
        </trans-unit>
        <trans-unit id="a7fd738f0731992e29ad76b05150de5901072f2d" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;self&lt;/code&gt; within raw mode.</source>
          <target state="translated">利回り &lt;code&gt;self&lt;/code&gt; rawモード内。</target>
        </trans-unit>
        <trans-unit id="8cd52d01eb6dff385ed2e678d91233c83821fb10" translate="yes" xml:space="preserve">
          <source>Yields all attributes (as symbols) along with the corresponding values or returns an enumerator if no block is given.</source>
          <target state="translated">すべての属性を(シンボルとして)対応する値とともに返すか、ブロックが与えられていない場合は列挙子を返します。</target>
        </trans-unit>
        <trans-unit id="0e11f2007e17c54d9bc918de1f088c26e5278d9f" translate="yes" xml:space="preserve">
          <source>Yields all elements of the matrix, starting with those of the first row, or returns an &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; if no block given. Elements can be restricted by passing an argument:</source>
          <target state="translated">最初の行の要素から開始して、行列のすべての要素を生成するか、ブロックが指定されていない場合は&lt;a href=&quot;enumerator&quot;&gt; &lt;code&gt;Enumerator&lt;/code&gt; &lt;/a&gt;返します。要素を渡すには、引数を渡します。</target>
        </trans-unit>
        <trans-unit id="bda5b4cfe11730a9820cd06fd7b935bcf753e261" translate="yes" xml:space="preserve">
          <source>Yields control back to the context that resumed the fiber, passing along any arguments that were passed to it. The fiber will resume processing at this point when &lt;a href=&quot;fiber#method-i-resume&quot;&gt;&lt;code&gt;resume&lt;/code&gt;&lt;/a&gt; is called next. Any arguments passed to the next &lt;a href=&quot;fiber#method-i-resume&quot;&gt;&lt;code&gt;resume&lt;/code&gt;&lt;/a&gt; will be the value that this &lt;a href=&quot;fiber#method-c-yield&quot;&gt;&lt;code&gt;Fiber.yield&lt;/code&gt;&lt;/a&gt; expression evaluates to.</source>
          <target state="translated">Yields control back to the context that resumed the fiber, passing along any arguments that were passed to it. The fiber will resume processing at this point when &lt;a href=&quot;fiber#method-i-resume&quot;&gt; &lt;code&gt;resume&lt;/code&gt; &lt;/a&gt; is called next. Any arguments passed to the next &lt;a href=&quot;fiber#method-i-resume&quot;&gt; &lt;code&gt;resume&lt;/code&gt; &lt;/a&gt; will be the value that this &lt;a href=&quot;fiber#method-c-yield&quot;&gt; &lt;code&gt;Fiber.yield&lt;/code&gt; &lt;/a&gt; expression evaluates to.</target>
        </trans-unit>
        <trans-unit id="9734999ba1fe687be2d2f3255e9cd108569e7903" translate="yes" xml:space="preserve">
          <source>Yields control back to the context that resumed the fiber, passing along any arguments that were passed to it. The fiber will resume processing at this point when &lt;code&gt;resume&lt;/code&gt; is called next. Any arguments passed to the next &lt;code&gt;resume&lt;/code&gt; will be the value that this &lt;code&gt;Fiber.yield&lt;/code&gt; expression evaluates to.</source>
          <target state="translated">制御は、ファイバーを再開したコンテキストに制御を戻し、ファイバーに渡された引数を渡します。次に &lt;code&gt;resume&lt;/code&gt; が呼び出されると、ファイバーはこの時点で処理を再開します。次の &lt;code&gt;resume&lt;/code&gt; 渡される引数は、この &lt;code&gt;Fiber.yield&lt;/code&gt; 式が評価する値になります。</target>
        </trans-unit>
        <trans-unit id="6b0fd26c0e93acc1e80f5b60b2a124bd5c8aa80f" translate="yes" xml:space="preserve">
          <source>Yields each environment variable &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">各環境変数の &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ac6ab5460da0242449528a547e44c1173f63043" translate="yes" xml:space="preserve">
          <source>Yields each environment variable &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">各環境変数 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a619fd09984e8b85e094b4a49e6d79cb92659b7" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name and its value as a 2-element &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, deleting each entry for which the block returns &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;, and returning &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; if any deletions made, or &lt;code&gt;nil&lt;/code&gt; otherwise:</source>
          <target state="translated">2要素として各環境変数名とその値をもたらす&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;ブロック戻るための各エントリの削除、 &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; 、及び戻り&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; を&lt;/a&gt;任意削除が行った場合、または &lt;code&gt;nil&lt;/code&gt; をそうでなければ：</target>
        </trans-unit>
        <trans-unit id="d337ccffe98f54db10df4dd15720ffca70b0bd0d" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name and its value as a 2-element &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, deleting each environment variable for which the block returns &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;, and returning ENV:</source>
          <target state="translated">各環境変数名とその値を2要素&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;として生成し、ブロックが &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;nil&lt;/code&gt; を返す各環境変数を削除し、ENVを返します。</target>
        </trans-unit>
        <trans-unit id="fd50cef14a0e7650d0f4e8ed9ec62f1dbd02709e" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name and its value as a 2-element &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, deleting each environment variable for which the block returns a truthy value, and returning &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; (if any deletions) or &lt;code&gt;nil&lt;/code&gt; (if not):</source>
          <target state="translated">各環境変数名とその値を2要素の&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;として生成し、ブロックが真の値を返す各環境変数を削除し、&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; &lt;/a&gt;（削除がある場合）または &lt;code&gt;nil&lt;/code&gt; （そうでない場合）を返します。</target>
        </trans-unit>
        <trans-unit id="2ed0ac6afe4e5c2f5bc1f22cb4c671290a422e6c" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name and its value as a 2-element &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, deleting each environment variable for which the block returns a truthy value, and returning &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; (regardless of whether any deletions):</source>
          <target state="translated">各環境変数名とその値を2要素&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;として生成し、ブロックが真の値を返す各環境変数を削除し、&lt;a href=&quot;env&quot;&gt; &lt;code&gt;ENV&lt;/code&gt; を&lt;/a&gt;返します（削除があるかどうかに関係なく）。</target>
        </trans-unit>
        <trans-unit id="27cbf265f5a2f1faaa221173d4da1606fb37d846" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name and its value as a 2-element &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, returning a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of the names and values for which the block returns a truthy value:</source>
          <target state="translated">2要素として各環境変数名とその値をもたらす&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;戻り、&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;ブロックはtruthy値を返すための名前と値のを：</target>
        </trans-unit>
        <trans-unit id="3a7bc1b63ada7e0c882eaeed66f745498c0ecf5e" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name and its value as a 2-element &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; whose items are determined by the block. When the block returns a truthy value, the name/value pair is added to the return &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;; otherwise the pair is ignored:</source>
          <target state="translated">各環境変数名とその値を2要素の&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;ます。アイテムがブロックによって決定される&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;を返します。ブロックが真の値を返すと、名前と値のペアが戻り&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;追加されます。それ以外の場合、ペアは無視されます。</target>
        </trans-unit>
        <trans-unit id="a20ee915f511c1b39dba2f196d1e439775ca0b0c" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name and its value as a 2-element Array:</source>
          <target state="translated">各環境変数名とその値を2要素の配列として出力します。</target>
        </trans-unit>
        <trans-unit id="f0b5a21dff28b89318ea98475581bf7cc83d5e46" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name.</source>
          <target state="translated">各環境変数名を出力します。</target>
        </trans-unit>
        <trans-unit id="21f37dd7cf72813b39cbeaecabafb227fbfca0fc" translate="yes" xml:space="preserve">
          <source>Yields each environment variable name:</source>
          <target state="translated">各環境変数名を出力します。</target>
        </trans-unit>
        <trans-unit id="c50a9e5d123a3e53e59e307de3c533f926ef8752" translate="yes" xml:space="preserve">
          <source>Yields each environment variable value:</source>
          <target state="translated">各環境変数の値を取得します。</target>
        </trans-unit>
        <trans-unit id="836c5f5a0a387b5d29089c67fd1a350120b06c49" translate="yes" xml:space="preserve">
          <source>Yields each member value from the struct to the block and returns an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing the member values from the &lt;code&gt;struct&lt;/code&gt; for which the given block returns a true value (equivalent to &lt;a href=&quot;enumerable#method-i-select&quot;&gt;&lt;code&gt;Enumerable#select&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">構造体からブロックへの各メンバー値を生成し、指定されたブロックがtrue値を返す &lt;code&gt;struct&lt;/code&gt; からのメンバー値を含む&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;を返します（&lt;a href=&quot;enumerable#method-i-select&quot;&gt; &lt;code&gt;Enumerable#select&lt;/code&gt; &lt;/a&gt;と同等）。</target>
        </trans-unit>
        <trans-unit id="b3d9aee61a1af194c2d8e6630fcb74bfbc0bbdde" translate="yes" xml:space="preserve">
          <source>Yields each message to the passed-in block in turn. Equivalent to:</source>
          <target state="translated">渡されたブロックに順番に各メッセージを渡します。に相当します。</target>
        </trans-unit>
        <trans-unit id="116a5889432830e9fd0327b35e7b915581db77d6" translate="yes" xml:space="preserve">
          <source>Yields each pair of the row as header and field tuples (much like iterating over a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;). This method returns the row for chaining.</source>
          <target state="translated">行の各ペアをヘッダーとフィールドのタプルとして生成します（&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;反復するのとよく似ています）。このメソッドは、連鎖する行を返します。</target>
        </trans-unit>
        <trans-unit id="6b6fd615f1ab28a0e44d2786e40410ef47e94826" translate="yes" xml:space="preserve">
          <source>Yields each row of the data source in turn.</source>
          <target state="translated">データソースの各行を順番に生成します。</target>
        </trans-unit>
        <trans-unit id="1b721f6117786acc4f76b42c3048e845d755dfae" translate="yes" xml:space="preserve">
          <source>Yields event/tuple pairs until this &lt;a href=&quot;notifytemplateentry&quot;&gt;&lt;code&gt;NotifyTemplateEntry&lt;/code&gt;&lt;/a&gt; expires.</source>
          <target state="translated">この&lt;a href=&quot;notifytemplateentry&quot;&gt; &lt;code&gt;NotifyTemplateEntry&lt;/code&gt; &lt;/a&gt;が期限切れになるまで、イベント/タプルのペアを生成します。</target>
        </trans-unit>
        <trans-unit id="964c79cb29c40881eb83db61d75397569a52a155" translate="yes" xml:space="preserve">
          <source>Yields self to the block and returns the result of the block.</source>
          <target state="translated">ブロックに自己を渡し、ブロックの結果を返します。</target>
        </trans-unit>
        <trans-unit id="5137d4512f1079622d0250ca7ea6e834a9bf8368" translate="yes" xml:space="preserve">
          <source>Yields self to the block, and then returns self. The primary purpose of this method is to &amp;ldquo;tap into&amp;rdquo; a method chain, in order to perform operations on intermediate results within the chain.</source>
          <target state="translated">自分自身をブロックに譲り、自分自身を返します。このメソッドの主な目的は、チェーン内の中間結果に対して操作を実行するために、メソッドチェーンを「利用する」ことです。</target>
        </trans-unit>
        <trans-unit id="6d6ced42397dedfc3fec8ca495d408e81f325bb4" translate="yes" xml:space="preserve">
          <source>Yields the created &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resolver to the block, if given, otherwise returns it.</source>
          <target state="translated">作成された&lt;a href=&quot;dns&quot;&gt; &lt;code&gt;DNS&lt;/code&gt; &lt;/a&gt;リゾルバーが指定されている場合はブロックに渡し、そうでない場合はそれを返します。</target>
        </trans-unit>
        <trans-unit id="c12d1a59b449b3f4c2baff77032eef7f79d1a292" translate="yes" xml:space="preserve">
          <source>Yields the given block with padding.</source>
          <target state="translated">与えられたブロックにパディングを加えたものを返します。</target>
        </trans-unit>
        <trans-unit id="90d9442c2dd62a07663a121773caa8e5180d0d95" translate="yes" xml:space="preserve">
          <source>Yields the name and value of each struct member in order. If no block is given an enumerator is returned.</source>
          <target state="translated">各構造体メンバの名前と値を順に返します。ブロックが与えられていない場合は、列挙子が返されます。</target>
        </trans-unit>
        <trans-unit id="6fdbdc2fa102fac67731c6e2bcf23b5dd2ee8ffd" translate="yes" xml:space="preserve">
          <source>Yields the value of each struct member in order. If no block is given an enumerator is returned.</source>
          <target state="translated">各構造体メンバの値を順に返します。ブロックが与えられていない場合は、列挙子が返されます。</target>
        </trans-unit>
        <trans-unit id="c0dc638799c4b2e119883457b510d92742be966e" translate="yes" xml:space="preserve">
          <source>Yields to a block and preserves the previous set of objects being printed.</source>
          <target state="translated">ブロックを生成し、印刷されているオブジェクトの前のセットを保持します。</target>
        </trans-unit>
        <trans-unit id="20eb87e68c4682f5d0516ba95c95e6b1e91b46c0" translate="yes" xml:space="preserve">
          <source>You MUST close the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; session after sending messages, by calling the &lt;a href=&quot;smtp#method-i-finish&quot;&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">メッセージを送信した後は、&lt;a href=&quot;smtp#method-i-finish&quot;&gt; &lt;code&gt;finish&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;セッションを閉じる必要があります。</target>
        </trans-unit>
        <trans-unit id="92bab9783a75e872fa14faac59b6adf87cf95283" translate="yes" xml:space="preserve">
          <source>You can &amp;ldquo;chain&amp;rdquo; method calls by immediately following one method call with another.</source>
          <target state="translated">あるメソッド呼び出しの直後に別のメソッド呼び出しを続けることで、メソッド呼び出しを「連鎖」させることができます。</target>
        </trans-unit>
        <trans-unit id="179c564ad4a035d9b367f93b28b136b8a33e8c6b" translate="yes" xml:space="preserve">
          <source>You can add extensions to the certificate with OpenSSL::SSL::ExtensionFactory to indicate the purpose of the certificate.</source>
          <target state="translated">OpenSSL::SSL::ExtensionFactoryを使って証明書に拡張機能を追加し、証明書の目的を示すことができます。</target>
        </trans-unit>
        <trans-unit id="f3a3f6af18047e8562cd1c2e873260beda5776f5" translate="yes" xml:space="preserve">
          <source>You can also add the method and remove it from the command list:</source>
          <target state="translated">メソッドを追加したり、コマンドリストから削除したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="5b4709130f7edd40d9e80efd89ee8698dd149b7a" translate="yes" xml:space="preserve">
          <source>You can also combine &lt;code&gt;rescue&lt;/code&gt; with &lt;code&gt;ensure&lt;/code&gt; and/or &lt;code&gt;else&lt;/code&gt;, without &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;:</source>
          <target state="translated">You can also combine &lt;code&gt;rescue&lt;/code&gt; with &lt;code&gt;ensure&lt;/code&gt; and/or &lt;code&gt;else&lt;/code&gt; , without &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="414f58d7bf9f93402e506ec2e564e5131a657380" translate="yes" xml:space="preserve">
          <source>You can also create a new time using &lt;a href=&quot;time#method-c-at&quot;&gt;&lt;code&gt;Time.at&lt;/code&gt;&lt;/a&gt; which takes the number of seconds (with subsecond) since the &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Epoch&lt;/a&gt;.</source>
          <target state="translated">また、&lt;a href=&quot;time#method-c-at&quot;&gt; &lt;code&gt;Time.at&lt;/code&gt; &lt;/a&gt;を使用して新しい時刻を作成することもできます。これには、&lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unixエポック&lt;/a&gt;からの秒数（サブ秒を含む）がかかります。</target>
        </trans-unit>
        <trans-unit id="2cd43af37d80ff65c5ba157d1f6013b72bbc9649" translate="yes" xml:space="preserve">
          <source>You can also create a new time using &lt;a href=&quot;time#method-c-at&quot;&gt;&lt;code&gt;Time::at&lt;/code&gt;&lt;/a&gt; which takes the number of seconds (or fraction of seconds) since the &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Epoch&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unixエポック&lt;/a&gt;以降の秒数（または秒の端数）を取る&lt;a href=&quot;time#method-c-at&quot;&gt; &lt;code&gt;Time::at&lt;/code&gt; &lt;/a&gt;を使用して新しい時間を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="58401db6f8c075aaf0a5a5ef412152786ee62d42" translate="yes" xml:space="preserve">
          <source>You can also create complex object from floating-point numbers or strings.</source>
          <target state="translated">浮動小数点数や文字列から複雑なオブジェクトを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="75e49d139242379701550f48961e8d7b547e87af" translate="yes" xml:space="preserve">
          <source>You can also create rational objects from floating-point numbers or strings.</source>
          <target state="translated">また、浮動小数点数や文字列から有理オブジェクトを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="26fa29672f7a602999821f16638bdd0061f6b7ac" translate="yes" xml:space="preserve">
          <source>You can also create undefined values.</source>
          <target state="translated">未定義の値を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="4cdee2d6d2533ecc03350d1d33ba49c24818b1fe" translate="yes" xml:space="preserve">
          <source>You can also do standard functions like compare two times.</source>
          <target state="translated">2回の比較のような標準的な関数もできます。</target>
        </trans-unit>
        <trans-unit id="621eb5bd85257ffcf795ebbacde5b8b0ed5a93c3" translate="yes" xml:space="preserve">
          <source>You can also follow tilde and not (&lt;code&gt;!&lt;/code&gt;) unary methods with &lt;code&gt;@&lt;/code&gt;, but it is not required as there are no binary tilde and not operators.</source>
          <target state="translated">You can also follow tilde and not ( &lt;code&gt;!&lt;/code&gt; ) unary methods with &lt;code&gt;@&lt;/code&gt; , but it is not required as there are no binary tilde and not operators.</target>
        </trans-unit>
        <trans-unit id="2753d774b655b81559b345adc37a5aab4e116112" translate="yes" xml:space="preserve">
          <source>You can also mix non-string objects in the elements as allowed in &lt;a href=&quot;array#method-i-join&quot;&gt;&lt;code&gt;Array#join&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;array#method-i-join&quot;&gt; &lt;code&gt;Array#join&lt;/code&gt; で&lt;/a&gt;許可されているように、要素に文字列以外のオブジェクトを混在させることもできます。</target>
        </trans-unit>
        <trans-unit id="086bb3a846aa08f11d852216f7e1c384d1e5400a" translate="yes" xml:space="preserve">
          <source>You can also pass a &lt;code&gt;Hash&lt;/code&gt; of &lt;code&gt;options&lt;/code&gt; that you want to change, any options not present in the hash will be left unchanged.</source>
          <target state="translated">変更する &lt;code&gt;options&lt;/code&gt; &lt;code&gt;Hash&lt;/code&gt; を渡すこともできます。ハッシュに存在しないオプションは変更されません。</target>
        </trans-unit>
        <trans-unit id="194ebb191c25e9f8cef3c7c7c94e787f74807886" translate="yes" xml:space="preserve">
          <source>You can also pass a block:</source>
          <target state="translated">ブロックをパスすることもできます。</target>
        </trans-unit>
        <trans-unit id="13f7e31beeeffca85752e9729f7846ece176839a" translate="yes" xml:space="preserve">
          <source>You can also pass an options hash. Under the hood, &lt;a href=&quot;tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; creates the temporary file using &lt;code&gt;File.open&lt;/code&gt;. These options will be passed to &lt;code&gt;File.open&lt;/code&gt;. This is mostly useful for specifying encoding options, e.g.:</source>
          <target state="translated">オプションのハッシュを渡すこともできます。ボンネットの下では、&lt;a href=&quot;tempfile&quot;&gt; &lt;code&gt;Tempfile&lt;/code&gt; &lt;/a&gt;使用して一時ファイルを作成します &lt;code&gt;File.open&lt;/code&gt; を。これらのオプションは &lt;code&gt;File.open&lt;/code&gt; に渡されます。これは主にエンコーディングオプションを指定するのに役立ちます。例：</target>
        </trans-unit>
        <trans-unit id="827bf22064514400af7995225fbfd4f581f6704c" translate="yes" xml:space="preserve">
          <source>You can also run all modes of coverage simultaneously with this shortcut. Note that running all coverage modes does not run both lines and oneshot lines. Those modes cannot be run simultaneously. Lines coverage is run in this case, because you can still use it to determine whether or not a line was executed.</source>
          <target state="translated">このショートカットを使って、すべてのカバレッジモードを同時に実行することもできます。すべてのカバレッジモードを実行しても、ラインとオンショットラインの両方が実行されるわけではないことに注意してください。それらのモードを同時に実行することはできません。行カバレッジは、行が実行されたかどうかを判断するためにまだ使用できるため、この場合に実行されます。</target>
        </trans-unit>
        <trans-unit id="de92ed6d95bd0e7e744c9754b49b07db6eed1e74" translate="yes" xml:space="preserve">
          <source>You can also supply a block to customize how the option is going to be invoked. The block receives two parameters, an instance of the current class and the klass to be invoked.</source>
          <target state="translated">オプションの起動方法をカスタマイズするためにブロックを指定することもできます。このブロックは、現在のクラスのインスタンスと起動するクラスの 2 つのパラメータを受け取ります。</target>
        </trans-unit>
        <trans-unit id="556794128edaf73fe7a845ddafe7c49eb27da187" translate="yes" xml:space="preserve">
          <source>You can also supply the arguments, options and configuration values for the command to be invoked, if none is given, the same values used to initialize the invoker are used to initialize the invoked.</source>
          <target state="translated">また、起動するコマンドの引数、オプション、設定値を指定することもできます。何も指定しない場合は、起動者の初期化に使用したのと同じ値が起動されたコマンドの初期化に使用されます。</target>
        </trans-unit>
        <trans-unit id="4cc0ba09c204a3c1cd86f651e7099945068b4498" translate="yes" xml:space="preserve">
          <source>You can also terminate from a &lt;code&gt;while&lt;/code&gt; loop using &lt;code&gt;break&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; を使用して、 &lt;code&gt;while&lt;/code&gt; ループから終了することもできます。</target>
        </trans-unit>
        <trans-unit id="3b8dfa5498541bf0f76cb294749014156ef28de6" translate="yes" xml:space="preserve">
          <source>You can also try &lt;a href=&quot;thread#method-c-pass&quot;&gt;&lt;code&gt;::pass&lt;/code&gt;&lt;/a&gt;, which attempts to pass execution to another thread but is dependent on the OS whether a running thread will switch or not. The same goes for &lt;a href=&quot;thread#method-i-priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt;, which lets you hint to the thread scheduler which threads you want to take precedence when passing execution. This method is also dependent on the OS and may be ignored on some platforms.</source>
          <target state="translated">&lt;a href=&quot;thread#method-c-pass&quot;&gt; &lt;code&gt;::pass&lt;/code&gt; を&lt;/a&gt;試すこともできます。これは、実行を別のスレッドに渡そうとしますが、実行中のスレッドが切り替わるかどうかはOSに依存します。同じことが&lt;a href=&quot;thread#method-i-priority&quot;&gt; &lt;code&gt;priority&lt;/code&gt; &lt;/a&gt;にも当てはまり、実行を渡すときにどのスレッドを優先させたいかをスレッドスケジューラに示唆することができます。この方法もOSに依存しており、一部のプラットフォームでは無視される場合があります。</target>
        </trans-unit>
        <trans-unit id="9d1ec3a0fde41ddbd71b0af19095c70b7c54214e" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;thread#method-i-alive-3F&quot;&gt;&lt;code&gt;alive?&lt;/code&gt;&lt;/a&gt; to tell if the thread is running or sleeping, and &lt;a href=&quot;thread#method-i-stop-3F&quot;&gt;&lt;code&gt;stop?&lt;/code&gt;&lt;/a&gt; if the thread is dead or sleeping.</source>
          <target state="translated">&lt;a href=&quot;thread#method-i-alive-3F&quot;&gt; &lt;code&gt;alive?&lt;/code&gt; &lt;/a&gt;使うこともできますか？スレッドが実行中かスリープ中かを判断して&lt;a href=&quot;thread#method-i-stop-3F&quot;&gt; &lt;code&gt;stop?&lt;/code&gt; &lt;/a&gt;スレッドが停止しているか、スリープ状態の場合。</target>
        </trans-unit>
        <trans-unit id="de94648c0b8f9011001dc0e072cdb8154b67c2e7" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;time#method-c-gm&quot;&gt;&lt;code&gt;Time::gm&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-c-local&quot;&gt;&lt;code&gt;Time::local&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#method-c-utc&quot;&gt;&lt;code&gt;Time::utc&lt;/code&gt;&lt;/a&gt; to infer GMT, local and UTC timezones instead of using the current system setting.</source>
          <target state="translated">現在のシステム設定を使用する代わりに、&lt;a href=&quot;time#method-c-gm&quot;&gt; &lt;code&gt;Time::gm&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;time#method-c-local&quot;&gt; &lt;code&gt;Time::local&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;time#method-c-utc&quot;&gt; &lt;code&gt;Time::utc&lt;/code&gt; &lt;/a&gt;を使用して、GMT、ローカル、およびUTCタイムゾーンを推測することもできます。</target>
        </trans-unit>
        <trans-unit id="2f958e1c61bca0d66f0c1b5c18743f8dac0d2feb" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;time#method-c-local&quot;&gt;&lt;code&gt;Time.local&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#method-c-utc&quot;&gt;&lt;code&gt;Time.utc&lt;/code&gt;&lt;/a&gt; to infer local and UTC timezones instead of using the current system setting.</source>
          <target state="translated">現在のシステム設定を使用する代わりに、&lt;a href=&quot;time#method-c-local&quot;&gt; &lt;code&gt;Time.local&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;time#method-c-utc&quot;&gt; &lt;code&gt;Time.utc&lt;/code&gt; &lt;/a&gt;を使用してローカルおよびUTCタイムゾーンを推測することもできます。</target>
        </trans-unit>
        <trans-unit id="d7d0d3f56b1eeaf69b4a352b95e24792232779fe" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;#@foo&lt;/code&gt;, &lt;code&gt;#@@foo&lt;/code&gt; and &lt;code&gt;#$foo&lt;/code&gt; as a shorthand for, respectively, &lt;code&gt;#{ @foo }&lt;/code&gt;, &lt;code&gt;#{ @@foo }&lt;/code&gt; and &lt;code&gt;#{ $foo }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#@foo&lt;/code&gt; 、 &lt;code&gt;#@@foo&lt;/code&gt; 、および &lt;code&gt;#$foo&lt;/code&gt; を、それぞれ &lt;code&gt;#{ @foo }&lt;/code&gt; @ foo }、 &lt;code&gt;#{ @@foo }&lt;/code&gt; 、および &lt;code&gt;#{ $foo }&lt;/code&gt; 省略形として使用することもできます。</target>
        </trans-unit>
        <trans-unit id="9ac0dfedceec37d15ebaaabc495fa7e755280fdb" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;alias&lt;/code&gt; to alias global variables:</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; を使用して、グローバル変数に別名を付けることもできます。</target>
        </trans-unit>
        <trans-unit id="43608b7388d77cb267b734728acefc07e7631d44" translate="yes" xml:space="preserve">
          <source>You can also use a String in place of a bareword:</source>
          <target state="translated">ベアワードの代わりにStringを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="5bbb29875a3c6c673a512e03227364c4dccffa62" translate="yes" xml:space="preserve">
          <source>You can also use the block form of &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;/SMTP#start. This closes the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; session automatically:</source>
          <target state="translated">&lt;a href=&quot;smtp#method-c-start&quot;&gt; &lt;code&gt;SMTP.start&lt;/code&gt; &lt;/a&gt; / SMTP＃startのブロック形式を使用することもできます。これにより、&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;セッションが自動的に閉じます。</target>
        </trans-unit>
        <trans-unit id="268704975c41a9e3d3da2571cd1e36182062b491" translate="yes" xml:space="preserve">
          <source>You can assign multiple values on the right-hand side to multiple variables:</source>
          <target state="translated">右側の複数の値を複数の変数に代入することができます。</target>
        </trans-unit>
        <trans-unit id="983695c2606159acb46cca0195bd5d988084e600" translate="yes" xml:space="preserve">
          <source>You can assign the exception to a local variable by using &lt;code&gt;=&amp;gt; variable_name&lt;/code&gt; at the end of the &lt;code&gt;rescue&lt;/code&gt; line:</source>
          <target state="translated">&lt;code&gt;rescue&lt;/code&gt; 行の最後で &lt;code&gt;=&amp;gt; variable_name&lt;/code&gt; を使用して、ローカル変数に例外を割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="4d41ae8701a6dd94e8aa5088601f450cc07670d2" translate="yes" xml:space="preserve">
          <source>You can chain methods that are in different classes. This example chains methods &lt;a href=&quot;../hash#method-i-to_a&quot;&gt;&lt;code&gt;Hash#to_a&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../array#method-i-reverse&quot;&gt;&lt;code&gt;Array#reverse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">異なるクラスにあるメソッドを連鎖させることができます。この例では、メソッド&lt;a href=&quot;../hash#method-i-to_a&quot;&gt; &lt;code&gt;Hash#to_a&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../array#method-i-reverse&quot;&gt; &lt;code&gt;Array#reverse&lt;/code&gt; を&lt;/a&gt;チェーンします。</target>
        </trans-unit>
        <trans-unit id="e8a97c0314a1bbd243c6b56743a3f21f6c13cccf" translate="yes" xml:space="preserve">
          <source>You can convert a proc or lambda to a block argument with the &lt;code&gt;&amp;amp;&lt;/code&gt; (block conversion) operator:</source>
          <target state="translated">You can convert a proc or lambda to a block argument with the &lt;code&gt;&amp;amp;&lt;/code&gt; (block conversion) operator:</target>
        </trans-unit>
        <trans-unit id="a1a641893e2cbd93a7c8dec23233d1863ff78a89" translate="yes" xml:space="preserve">
          <source>You can convert a proc or lambda to a block argument with the &lt;code&gt;&amp;amp;&lt;/code&gt; operator:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 演算子を使用して、プロシージャまたはラムダをブロック引数に変換できます。</target>
        </trans-unit>
        <trans-unit id="86841d056b690a86aa960824992fae7d464c8157" translate="yes" xml:space="preserve">
          <source>You can create a &lt;a href=&quot;name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; by parsing a distinguished name &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or by supplying the distinguished name as an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;を作成するには、識別名&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; を&lt;/a&gt;解析するか、識別名を&lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;として指定します。</target>
        </trans-unit>
        <trans-unit id="36906744519a873d03ffbf0a9a08a319937466e5" translate="yes" xml:space="preserve">
          <source>You can create a Hash by calling method &lt;a href=&quot;hash#method-c-5B-5D&quot;&gt;&lt;code&gt;Hash.[]&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;hash#method-c-5B-5D&quot;&gt; &lt;code&gt;Hash.[]&lt;/code&gt; &lt;/a&gt;呼び出すことにより、ハッシュを作成できます。</target>
        </trans-unit>
        <trans-unit id="579dfc6b8a3ca1ed61a187022e43afb0bec5f1ff" translate="yes" xml:space="preserve">
          <source>You can create a Hash by calling method &lt;a href=&quot;hash#method-c-new&quot;&gt;&lt;code&gt;Hash.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;hash#method-c-new&quot;&gt; &lt;code&gt;Hash.new&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、ハッシュを作成できます。</target>
        </trans-unit>
        <trans-unit id="d6fb3e9bb02f6b0c7dfd96daadc6686c4147f215" translate="yes" xml:space="preserve">
          <source>You can create a Hash by using its literal form (curly braces).</source>
          <target state="translated">リテラル形式(中括弧)を使用してハッシュを作成することができます。</target>
        </trans-unit>
        <trans-unit id="72459fdb81806593668d227f4bc36b65b49bde0f" translate="yes" xml:space="preserve">
          <source>You can create a hash using symbol keys with the following syntax:</source>
          <target state="translated">シンボルキーを使用したハッシュは、以下の構文で作成することができます。</target>
        </trans-unit>
        <trans-unit id="14cfc3dde9f888310c8d656a7d4804c7c53bc39b" translate="yes" xml:space="preserve">
          <source>You can create a new instance of &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;time#method-c-new&quot;&gt;&lt;code&gt;Time.new&lt;/code&gt;&lt;/a&gt;. This will use the current system time. &lt;a href=&quot;time#method-c-now&quot;&gt;&lt;code&gt;Time.now&lt;/code&gt;&lt;/a&gt; is an alias for this. You can also pass parts of the time to &lt;a href=&quot;time#method-c-new&quot;&gt;&lt;code&gt;Time.new&lt;/code&gt;&lt;/a&gt; such as year, month, minute, etc. When you want to construct a time this way you must pass at least a year. If you pass the year with nothing else time will default to January 1 of that year at 00:00:00 with the current system timezone. Here are some examples:</source>
          <target state="translated">あなたはの新しいインスタンスを作成することができます&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;して&lt;a href=&quot;time#method-c-new&quot;&gt; &lt;code&gt;Time.new&lt;/code&gt; &lt;/a&gt;。これは、現在のシステム時刻を使用します。&lt;a href=&quot;time#method-c-now&quot;&gt; &lt;code&gt;Time.now&lt;/code&gt; &lt;/a&gt;はこのエイリアスです。年、月、分など、時間の一部を&lt;a href=&quot;time#method-c-new&quot;&gt; &lt;code&gt;Time.new&lt;/code&gt; に&lt;/a&gt;渡すこともできます。この方法で時間を作成する場合は、少なくとも1年を渡す必要があります。1年を何もせずに通過すると、現在のシステムタイムゾーンで、デフォルトでその年の1月1日の00:00:00になります。ここではいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="ba11dea81695756d88a5ae7f0d76cc33d991e789" translate="yes" xml:space="preserve">
          <source>You can create a new instance of &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;time#method-c-new&quot;&gt;&lt;code&gt;Time::new&lt;/code&gt;&lt;/a&gt;. This will use the current system time. &lt;a href=&quot;time#method-c-now&quot;&gt;&lt;code&gt;Time::now&lt;/code&gt;&lt;/a&gt; is an alias for this. You can also pass parts of the time to &lt;a href=&quot;time#method-c-new&quot;&gt;&lt;code&gt;Time::new&lt;/code&gt;&lt;/a&gt; such as year, month, minute, etc. When you want to construct a time this way you must pass at least a year. If you pass the year with nothing else time will default to January 1 of that year at 00:00:00 with the current system timezone. Here are some examples:</source>
          <target state="translated">&lt;a href=&quot;time#method-c-new&quot;&gt; &lt;code&gt;Time::new&lt;/code&gt; &lt;/a&gt;して、&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; の&lt;/a&gt;新しいインスタンスを作成できます。これは現在のシステム時刻を使用します。&lt;a href=&quot;time#method-c-now&quot;&gt; &lt;code&gt;Time::now&lt;/code&gt; &lt;/a&gt;はこのエイリアスです。年、月、分など、時間の一部を&lt;a href=&quot;time#method-c-new&quot;&gt; &lt;code&gt;Time::new&lt;/code&gt; &lt;/a&gt;渡すこともできます。この方法で時刻を作成する場合は、少なくとも1年は渡す必要があります。他に何も指定せずに年を渡すと、現在のシステムのタイムゾーンを使用して、デフォルトでその年の1月1日00:00:00になります。ここではいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="5891c50b45aec85b7fb86b8eabdd3219b170b734" translate="yes" xml:space="preserve">
          <source>You can decompose (unpack or extract values from) an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; using extra parentheses in the arguments:</source>
          <target state="translated">引数に追加の括弧を使用して、&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;を分解（値をアンパックまたは抽出）できます。</target>
        </trans-unit>
        <trans-unit id="b8538271c7ec4ca518650f9933990928fce44f40" translate="yes" xml:space="preserve">
          <source>You can decompose an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; as part of a larger multiple assignment:</source>
          <target state="translated">より大きな多重代入の一部として&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;を分解できます。</target>
        </trans-unit>
        <trans-unit id="676faaf2d9d63e00a8d3a08d88ccd753adcee5c1" translate="yes" xml:space="preserve">
          <source>You can define a custom field converter:</source>
          <target state="translated">カスタムフィールドコンバータを定義することができます。</target>
        </trans-unit>
        <trans-unit id="0dc8ed81d352bc9ca546eb863a8ffe0af099aa92" translate="yes" xml:space="preserve">
          <source>You can define a custom header converter:</source>
          <target state="translated">カスタムヘッダーコンバータを定義することができます。</target>
        </trans-unit>
        <trans-unit id="bf00d61b2ed92e9179ec47d7db78453398709ee4" translate="yes" xml:space="preserve">
          <source>You can define methods that will behave like assignment, for example:</source>
          <target state="translated">例えば、代入のように振る舞うメソッドを定義することができます。</target>
        </trans-unit>
        <trans-unit id="140f3ae2dde426b124ec92e56e62e5e88a15c227" translate="yes" xml:space="preserve">
          <source>You can end an expression with a &lt;code&gt;;&lt;/code&gt; (semicolon). Semicolons are most frequently used with &lt;code&gt;ruby -e&lt;/code&gt;.</source>
          <target state="translated">式は &lt;code&gt;;&lt;/code&gt; で終了できます。（セミコロン）。セミコロンは &lt;code&gt;ruby -e&lt;/code&gt; で最も頻繁に使用されます。</target>
        </trans-unit>
        <trans-unit id="09a499bf743c58544d76b1362b1d93bccfdd538f" translate="yes" xml:space="preserve">
          <source>You can even extend regular objects with Forwardable.</source>
          <target state="translated">Forwardableを使って、通常のオブジェクトを拡張することもできます。</target>
        </trans-unit>
        <trans-unit id="f2f131975a637f5c5e2f9599e4bd8444e3e4298f" translate="yes" xml:space="preserve">
          <source>You can exit the IRB session with the &lt;code&gt;exit&lt;/code&gt; command. Note that exiting will resume execution where &lt;code&gt;binding.irb&lt;/code&gt; had paused it, as you can see from the output printed to standard output in this example:</source>
          <target state="translated">You can exit the IRB session with the &lt;code&gt;exit&lt;/code&gt; command. Note that exiting will resume execution where &lt;code&gt;binding.irb&lt;/code&gt; had paused it, as you can see from the output printed to standard output in this example:</target>
        </trans-unit>
        <trans-unit id="eae096c812109d672f11ddba5af3ba3adf37ca92" translate="yes" xml:space="preserve">
          <source>You can exit the IRB session with the `exit` command. Note that exiting will resume execution where &lt;code&gt;binding.irb&lt;/code&gt; had paused it, as you can see from the output printed to standard output in this example:</source>
          <target state="translated">`exit`コマンドでIRBセッションを終了できます。この例では、出力から標準出力に出力されるように、終了すると &lt;code&gt;binding.irb&lt;/code&gt; が一時停止していたところから実行が再開されます。</target>
        </trans-unit>
        <trans-unit id="df604a96e91aae4b4a8b7fd5437168ad196d20ff" translate="yes" xml:space="preserve">
          <source>You can find the source for the VM instructions in &lt;code&gt;insns.def&lt;/code&gt; in the Ruby source.</source>
          <target state="translated">VM命令のソースは、Rubyソースの &lt;code&gt;insns.def&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="560c034623d0b3e78a607e1b4a78eca2499c9ba2" translate="yes" xml:space="preserve">
          <source>You can force a method call by using empty argument parentheses as shown above or by using an explicit receiver like &lt;code&gt;self.&lt;/code&gt;. Using an explicit receiver may raise a &lt;a href=&quot;../nameerror&quot;&gt;&lt;code&gt;NameError&lt;/code&gt;&lt;/a&gt; if the method's visibility is not public.</source>
          <target state="translated">上記のように空の引数括弧を使用するか、 &lt;code&gt;self.&lt;/code&gt; ような明示的なレシーバーを使用することにより、メソッド呼び出しを強制できます。。メソッドの可視性がパブリックでない場合、明示的なレシーバーを使用すると&lt;a href=&quot;../nameerror&quot;&gt; &lt;code&gt;NameError&lt;/code&gt; が発生&lt;/a&gt;する可能性があります。</target>
        </trans-unit>
        <trans-unit id="21f3f2019311058b9ac372eac4e1c3c2bf27d221" translate="yes" xml:space="preserve">
          <source>You can force a method call by using empty argument parentheses as shown above or by using an explicit receiver like &lt;code&gt;self&lt;/code&gt;. Using an explicit receiver may raise a &lt;a href=&quot;../nameerror&quot;&gt;&lt;code&gt;NameError&lt;/code&gt;&lt;/a&gt; if the method's visibility is not public or the receiver is the literal &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">You can force a method call by using empty argument parentheses as shown above or by using an explicit receiver like &lt;code&gt;self&lt;/code&gt; . Using an explicit receiver may raise a &lt;a href=&quot;../nameerror&quot;&gt; &lt;code&gt;NameError&lt;/code&gt; &lt;/a&gt; if the method's visibility is not public or the receiver is the literal &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="620db623a26fb535e01e0af1860167b090e3b64a" translate="yes" xml:space="preserve">
          <source>You can force shell invocation by adding &amp;ldquo;;&amp;rdquo; to the string (because &amp;ldquo;;&amp;rdquo; is a meta character).</source>
          <target state="translated">「;」を追加すると、シェルを強制的に呼び出すことができます。文字列に（「;」はメタ文字であるため）。</target>
        </trans-unit>
        <trans-unit id="e01fb2b1ebbded2788d38552e2149fb125e13ebf" translate="yes" xml:space="preserve">
          <source>You can get a hash of the specific section like so:</source>
          <target state="translated">このように特定のセクションのハッシュを取得することができます。</target>
        </trans-unit>
        <trans-unit id="9126791e30cfdd48421b292bb13e63daa6f45280" translate="yes" xml:space="preserve">
          <source>You can get a list of all digest algorithms supported on your system by running this command in your terminal:</source>
          <target state="translated">ターミナルでこのコマンドを実行することで、システムでサポートされているすべてのダイジェストアルゴリズムのリストを得ることができます。</target>
        </trans-unit>
        <trans-unit id="4857b69fd315c698e6787cc23b9810376913e346" translate="yes" xml:space="preserve">
          <source>You can get a specific value from the config if you know the &lt;em&gt;section&lt;/em&gt; and &lt;em&gt;key&lt;/em&gt; like so:</source>
          <target state="translated">&lt;em&gt;セクション&lt;/em&gt;と&lt;em&gt;キー&lt;/em&gt;がわかっている場合は、configから特定の値を取得できます。</target>
        </trans-unit>
        <trans-unit id="60bfd4e06417869986f2c827f41c23dcae9c3a87" translate="yes" xml:space="preserve">
          <source>You can get information from the parser with event-based style. Information such as abstract syntax trees or simple lexical analysis of the Ruby program.</source>
          <target state="translated">イベントベースのスタイルでパーサから情報を得ることができます。抽象構文木やRubyプログラムの簡単な字句解析などの情報。</target>
        </trans-unit>
        <trans-unit id="442acc0b754ae89c2afee5407be9d3f04973cd48" translate="yes" xml:space="preserve">
          <source>You can give :undefine =&amp;gt; true if you want commands the method to be undefined from the class as well.</source>
          <target state="translated">：undefine =&amp;gt; trueを指定すると、コマンドをクラスから未定義にすることもできます。</target>
        </trans-unit>
        <trans-unit id="6fe5e3fc80089bb1e9a442c2e12ac6fa8335838c" translate="yes" xml:space="preserve">
          <source>You can implicitly create an array by listing multiple values when assigning:</source>
          <target state="translated">代入時に複数の値をリストアップして暗黙のうちに配列を作成することができます。</target>
        </trans-unit>
        <trans-unit id="a085ac6664c00d9329ce3dd878e4ecf558e9510a" translate="yes" xml:space="preserve">
          <source>You can make sure to get a sorted unique &lt;a href=&quot;process/gid&quot;&gt;&lt;code&gt;GID&lt;/code&gt;&lt;/a&gt; list of the current process by this expression:</source>
          <target state="translated">次の式によって、現在のプロセスのソートされた一意の&lt;a href=&quot;process/gid&quot;&gt; &lt;code&gt;GID&lt;/code&gt; &lt;/a&gt;リストを確実に取得できます。</target>
        </trans-unit>
        <trans-unit id="1a3ae05122243a7954a8243adac460d40230034f" translate="yes" xml:space="preserve">
          <source>You can manipulate &lt;code&gt;ARGV&lt;/code&gt; yourself to control what &lt;code&gt;ARGF&lt;/code&gt; operates on. If you remove a file from &lt;code&gt;ARGV&lt;/code&gt;, it is ignored by &lt;code&gt;ARGF&lt;/code&gt;; if you add files to &lt;code&gt;ARGV&lt;/code&gt;, they are treated as if they were named on the command line. For example:</source>
          <target state="translated">自分で &lt;code&gt;ARGV&lt;/code&gt; を操作して、 &lt;code&gt;ARGF&lt;/code&gt; の操作対象を制御できます。 &lt;code&gt;ARGV&lt;/code&gt; からファイルを削除すると、そのファイルは &lt;code&gt;ARGF&lt;/code&gt; によって無視されます。ファイルを &lt;code&gt;ARGV&lt;/code&gt; に追加すると、それらはコマンドラインで指定されたものとして扱われます。例えば：</target>
        </trans-unit>
        <trans-unit id="6f1f836219bd983fe259c6d1025b8753c257837e" translate="yes" xml:space="preserve">
          <source>You can mix several of the operators and assignment. To add 1 to an object you can write:</source>
          <target state="translated">演算子と代入をいくつか混ぜることができます。オブジェクトに1を追加するには、以下のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="eb61c46102bfb8c7fe0b68d6f3c213370bfef332" translate="yes" xml:space="preserve">
          <source>You can nest decomposition arbitrarily:</source>
          <target state="translated">分解を任意に入れ子にすることができます。</target>
        </trans-unit>
        <trans-unit id="8288d55fa472e7bbcb10ae594634c13495767f04" translate="yes" xml:space="preserve">
          <source>You can notice that the method &amp;ldquo;foo&amp;rdquo; above invokes two commands: &amp;ldquo;bar&amp;rdquo;, which belongs to the same class and &amp;ldquo;hello&amp;rdquo; which belongs to the class B.</source>
          <target state="translated">上記のメソッド「foo」が、同じクラスに属する「bar」とクラスBに属する「hello」の2つのコマンドを呼び出すことがわかります。</target>
        </trans-unit>
        <trans-unit id="f0806ef6a902349cc1cf56f6dc54c1b6815d9341" translate="yes" xml:space="preserve">
          <source>You can now use &lt;code&gt;ARGF&lt;/code&gt; to work with a concatenation of each of these named files. For instance, &lt;code&gt;ARGF.read&lt;/code&gt; will return the contents of &lt;em&gt;file1&lt;/em&gt; followed by the contents of &lt;em&gt;file2&lt;/em&gt;.</source>
          <target state="translated">これで、 &lt;code&gt;ARGF&lt;/code&gt; を使用して、これらの名前付きファイルのそれぞれの連結を操作できます。たとえば、 &lt;code&gt;ARGF.read&lt;/code&gt; は&lt;em&gt;file1&lt;/em&gt;の内容に続いて&lt;em&gt;file2&lt;/em&gt;の内容を返します。</target>
        </trans-unit>
        <trans-unit id="407c34207a8dcccb7ee9c5c5d4a0111e3af20ba7" translate="yes" xml:space="preserve">
          <source>You can override the functionality of a superclass method by redefining the method:</source>
          <target state="translated">メソッドを再定義することで、スーパークラスのメソッドの機能をオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="a2cfe1df8db0669097d2f8bd87dd3d1171c64c63" translate="yes" xml:space="preserve">
          <source>You can parse a String containing JSON data using either of two methods:</source>
          <target state="translated">JSON データを含む String をパースするには、2 つのメソッドのいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="54f31ee1166c9ef4b4ebae03dcd795e1dfc6753e" translate="yes" xml:space="preserve">
          <source>You can parse get the serialized configuration using &lt;a href=&quot;config#method-i-to_s&quot;&gt;&lt;code&gt;to_s&lt;/code&gt;&lt;/a&gt; and then parse it later:</source>
          <target state="translated">&lt;a href=&quot;config#method-i-to_s&quot;&gt; &lt;code&gt;to_s&lt;/code&gt; &lt;/a&gt;を使用してシリアル化された構成を取得して解析し、後で解析することができます。</target>
        </trans-unit>
        <trans-unit id="f3b4c9d8ebf33ebc636d6262b31266b9ad89d417" translate="yes" xml:space="preserve">
          <source>You can pass a UTC offset:</source>
          <target state="translated">UTCオフセットを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="05b0a78fc6a450fb62ef2a1d88750b7f7e9534c7" translate="yes" xml:space="preserve">
          <source>You can pass several directories at a time in a list.</source>
          <target state="translated">リスト内の複数のディレクトリを一度に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="2a0d7ed2ab40b032618ca58b908ee4e31b3aab3c" translate="yes" xml:space="preserve">
          <source>You can prevent this by setting &lt;em&gt;pstore.ultra_safe = true&lt;/em&gt;. However, this results in a minor performance loss, and only works on platforms that support atomic file renames. Please consult the documentation for &lt;code&gt;ultra_safe&lt;/code&gt; for details.</source>
          <target state="translated">これを防ぐには、&lt;em&gt;pstore.ultra_safe = trueを&lt;/em&gt;設定し&lt;em&gt;ます&lt;/em&gt;。ただし、これによりパフォーマンスが若干低下し、アトミックファイルの名前変更をサポートするプラットフォームでのみ機能します。詳細については、 &lt;code&gt;ultra_safe&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8dce52889803bc33bdeecf31b0ff4ac5c4de2844" translate="yes" xml:space="preserve">
          <source>You can read more about the general principles on the Wikipedia page for &lt;a href=&quot;http://en.wikipedia.org/wiki/Monitor_%28synchronization%29&quot;&gt;Monitors&lt;/a&gt;</source>
          <target state="translated">一般的な原則の詳細については、&lt;a href=&quot;http://en.wikipedia.org/wiki/Monitor_%28synchronization%29&quot;&gt;モニターの&lt;/a&gt; Wikipediaページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="34c8232ce501e3a8e55e29052f1ff96bdc908c6e" translate="yes" xml:space="preserve">
          <source>You can register the converter in Converters Hash, which allows you to refer to it by name:</source>
          <target state="translated">コンバーターをConverters Hashに登録しておけば、名前で参照できるようになります。</target>
        </trans-unit>
        <trans-unit id="d019d1ec237bf0dc146243f10a16880a957db00f" translate="yes" xml:space="preserve">
          <source>You can register the converter in HeaderConverters Hash, which allows you to refer to it by name:</source>
          <target state="translated">HeaderConverters Hashにコンバータを登録しておけば、名前で参照できるようになります。</target>
        </trans-unit>
        <trans-unit id="0752337a5bf500cb2f56878b283650b31ab621db" translate="yes" xml:space="preserve">
          <source>You can repair the hash index using method &lt;code&gt;rehash&lt;/code&gt;:</source>
          <target state="translated">メソッド &lt;code&gt;rehash&lt;/code&gt; を使用してハッシュインデックスを修復できます。</target>
        </trans-unit>
        <trans-unit id="4cd2f70ae7059cea8277c037b2234adfcb1480c4" translate="yes" xml:space="preserve">
          <source>You can represent infinite numbers to &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; using the strings &lt;code&gt;'Infinity'&lt;/code&gt;, &lt;code&gt;'+Infinity'&lt;/code&gt; and &lt;code&gt;'-Infinity'&lt;/code&gt; (case-sensitive)</source>
          <target state="translated">文字列 &lt;code&gt;'Infinity'&lt;/code&gt; 、 &lt;code&gt;'+Infinity'&lt;/code&gt; および &lt;code&gt;'-Infinity'&lt;/code&gt; （大文字と小文字を区別）を使用して、&lt;a href=&quot;bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; に&lt;/a&gt;無限数を表すことができます。</target>
        </trans-unit>
        <trans-unit id="1c233576f7692171988360ddb9b0d8dc832b6955" translate="yes" xml:space="preserve">
          <source>You can require arguments for the proc as follows:</source>
          <target state="translated">procには以下のように引数を要求することができます。</target>
        </trans-unit>
        <trans-unit id="21216dfba04d828bb682c6a40cf15a15db0d384a" translate="yes" xml:space="preserve">
          <source>You can retrieve the default proc with method &lt;a href=&quot;hash#method-i-default_proc&quot;&gt;&lt;code&gt;default_proc&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">デフォルトのprocは、メソッド&lt;a href=&quot;hash#method-i-default_proc&quot;&gt; &lt;code&gt;default_proc&lt;/code&gt; で&lt;/a&gt;取得できます。</target>
        </trans-unit>
        <trans-unit id="170d497610bd2b175ab3d2ea864296d931ae9ceb" translate="yes" xml:space="preserve">
          <source>You can retrieve the default value with method &lt;a href=&quot;hash#method-i-default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">メソッド&lt;a href=&quot;hash#method-i-default&quot;&gt; &lt;code&gt;default&lt;/code&gt; を&lt;/a&gt;使用してデフォルト値を取得できます。</target>
        </trans-unit>
        <trans-unit id="96e2e42a78bfcf9596c3715583ba11042df25db3" translate="yes" xml:space="preserve">
          <source>You can see in the example above, the expression starts with &lt;code&gt;:program&lt;/code&gt;.</source>
          <target state="translated">上記の例では、式は &lt;code&gt;:program&lt;/code&gt; で始まります。</target>
        </trans-unit>
        <trans-unit id="9631f8efea17f4ab5de87fe1ef7ccc70f57f38a4" translate="yes" xml:space="preserve">
          <source>You can see that the thread-local &lt;code&gt;:foo&lt;/code&gt; carried over into the fiber and was changed to &lt;code&gt;2&lt;/code&gt; by the end of the thread.</source>
          <target state="translated">thread-local &lt;code&gt;:foo&lt;/code&gt; がファイバーに引き継がれ、スレッドの終わりまでに &lt;code&gt;2&lt;/code&gt; に変更されたことがわかります。</target>
        </trans-unit>
        <trans-unit id="7709ebd3a60c2f23978cec7c5bf090eb76a3653a" translate="yes" xml:space="preserve">
          <source>You can set addresses as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. The first element of the &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; is a multicast address and the second is an inbound interface address. If the second is omitted then '0.0.0.0' is used.</source>
          <target state="translated">アドレスを&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;として設定できます。&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;の最初の要素はマルチキャストアドレスで、2番目の要素は受信インターフェイスアドレスです。2番目を省略した場合は、「0.0.0.0」が使用されます。</target>
        </trans-unit>
        <trans-unit id="897b9262e7f97654bdb4e877d7747942a095d877" translate="yes" xml:space="preserve">
          <source>You can set the default proc by calling &lt;a href=&quot;hash#method-c-new&quot;&gt;&lt;code&gt;Hash.new&lt;/code&gt;&lt;/a&gt; with a block or calling the method &lt;a href=&quot;hash#method-i-default_proc-3D&quot;&gt;&lt;code&gt;default_proc=&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">ブロックを&lt;a href=&quot;hash#method-c-new&quot;&gt; &lt;code&gt;Hash.new&lt;/code&gt; &lt;/a&gt;してHash.newを呼び出すか、メソッド&lt;a href=&quot;hash#method-i-default_proc-3D&quot;&gt; &lt;code&gt;default_proc=&lt;/code&gt; &lt;/a&gt;呼び出すことにより、デフォルトのprocを設定できます。</target>
        </trans-unit>
        <trans-unit id="d8cc4d7b3209e16da50367002568c849477e82e4" translate="yes" xml:space="preserve">
          <source>You can set the default value by passing an argument to method &lt;a href=&quot;hash#method-c-new&quot;&gt;&lt;code&gt;Hash.new&lt;/code&gt;&lt;/a&gt; or with method &lt;a href=&quot;hash#method-i-default-3D&quot;&gt;&lt;code&gt;default=&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">メソッド&lt;a href=&quot;hash#method-c-new&quot;&gt; &lt;code&gt;Hash.new&lt;/code&gt; に&lt;/a&gt;引数を渡すか、メソッド&lt;a href=&quot;hash#method-i-default-3D&quot;&gt; &lt;code&gt;default=&lt;/code&gt; &lt;/a&gt;を使用して、デフォルト値を設定できます。</target>
        </trans-unit>
        <trans-unit id="2b6f8ad586b2b22398b6cb463a4507300f0faf66" translate="yes" xml:space="preserve">
          <source>You can set the hop count (or TTL) for multicast searches using &lt;a href=&quot;ringfinger#attribute-i-multicast_hops&quot;&gt;&lt;code&gt;multicast_hops&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">あなたは使用してマルチキャスト検索のホップ数（またはTTL）を設定することができ&lt;a href=&quot;ringfinger#attribute-i-multicast_hops&quot;&gt; &lt;code&gt;multicast_hops&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2242e8c3cac8a96fc47669a807de0f271917638c" translate="yes" xml:space="preserve">
          <source>You can set the value of &lt;em&gt;foo&lt;/em&gt; under the &lt;em&gt;default&lt;/em&gt; section to a new value:</source>
          <target state="translated">&lt;em&gt;デフォルト&lt;/em&gt;セクションの下の&lt;em&gt;foo&lt;/em&gt;の値を新しい値に設定できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7875c7ec901ca861529f185967f91cb99ab67d1" translate="yes" xml:space="preserve">
          <source>You can shut down the HTTP connections when done by calling &lt;a href=&quot;persistent#method-i-shutdown&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt;. You should name your &lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt; object if you intend to call this method.</source>
          <target state="translated">&lt;a href=&quot;persistent#method-i-shutdown&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;を呼び出して、HTTP接続をシャットダウンできます。このメソッドを呼び出す場合は、&lt;a href=&quot;persistent&quot;&gt; &lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt; &lt;/a&gt;オブジェクトに名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="d6fd5c3379e0ca73532816c33f9fb8c42d68e354" translate="yes" xml:space="preserve">
          <source>You can specify converters for parsing or generating in the &lt;code&gt;options&lt;/code&gt; argument to various CSV methods:</source>
          <target state="translated">さまざまなCSVメソッドの &lt;code&gt;options&lt;/code&gt; 引数で、解析または生成するコンバーターを指定できます。</target>
        </trans-unit>
        <trans-unit id="e1893ae4ae770f728a29a4c7dcd1eaba202706ac" translate="yes" xml:space="preserve">
          <source>You can splat anywhere in the right-hand side of the assignment:</source>
          <target state="translated">課題の右側のどこにでもスプラットできます。</target>
        </trans-unit>
        <trans-unit id="c1ebcafd99fad31201bd9fea7d8d06ef809d3f9d" translate="yes" xml:space="preserve">
          <source>You can tell a lambda from a regular proc by using the &lt;a href=&quot;proc#method-i-lambda-3F&quot;&gt;&lt;code&gt;lambda?&lt;/code&gt;&lt;/a&gt; instance method.</source>
          <target state="translated">ラムダを使用して、通常のプロシージャからラムダを区別できます&lt;a href=&quot;proc#method-i-lambda-3F&quot;&gt; &lt;code&gt;lambda?&lt;/code&gt; &lt;/a&gt;インスタンスメソッド。</target>
        </trans-unit>
        <trans-unit id="682d2c0257f6a8bbd0c008ba481882100333d52c" translate="yes" xml:space="preserve">
          <source>You can turn a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; into keyword arguments with the &lt;code&gt;**&lt;/code&gt; (keyword splat) operator:</source>
          <target state="translated">You can turn a &lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt; into keyword arguments with the &lt;code&gt;**&lt;/code&gt; (keyword splat) operator:</target>
        </trans-unit>
        <trans-unit id="e28d15a5493d536946040cb4dbceb4e0f5b1e53d" translate="yes" xml:space="preserve">
          <source>You can turn a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; into keyword arguments with the &lt;code&gt;**&lt;/code&gt; operator:</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; 演算子を使用すると、&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;をキーワード引数に変換できます。</target>
        </trans-unit>
        <trans-unit id="b7e710cfcdf68046a8039f17bbf855916332cfc9" translate="yes" xml:space="preserve">
          <source>You can turn an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; into an argument list with &lt;code&gt;*&lt;/code&gt; (or splat) operator:</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; （またはsplat）演算子を使用して、&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;を引数リストに変換できます。</target>
        </trans-unit>
        <trans-unit id="fdc93fbf7c337e7f8fcba72beaf85914a7ab5abe" translate="yes" xml:space="preserve">
          <source>You can type any valid Ruby code and it will be evaluated in the current context. This allows you to debug without having to run your code repeatedly:</source>
          <target state="translated">有効な Ruby コードを入力すると、現在のコンテキストで評価されます。これにより、コードを繰り返し実行することなくデバッグを行うことができます。</target>
        </trans-unit>
        <trans-unit id="94199e09f28cec92d335295b3a8b9514502a9831" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;logger#attribute-i-formatter&quot;&gt;&lt;code&gt;formatter=&lt;/code&gt;&lt;/a&gt; for escaping all data.</source>
          <target state="translated">すべてのデータをエスケープするために&lt;a href=&quot;logger#attribute-i-formatter&quot;&gt; &lt;code&gt;formatter=&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="7a9d82f6da0767a558a8d643fe799ba9665921c1" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;shellwords&quot;&gt;&lt;code&gt;Shellwords&lt;/code&gt;&lt;/a&gt; to parse a string into a Bourne shell friendly &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;shellwords&quot;&gt; &lt;code&gt;Shellwords&lt;/code&gt; &lt;/a&gt;を使用して、文字列をBourneシェルフレンドリーな&lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;に解析できます。</target>
        </trans-unit>
        <trans-unit id="5cb64c7f80164466ef2b0431213363d82a10b84e" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;*&lt;/code&gt; or the &amp;ldquo;splat&amp;rdquo; operator or unpack an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; when assigning. This is similar to multiple assignment:</source>
          <target state="translated">割り当てるときは、 &lt;code&gt;*&lt;/code&gt; または「splat」演算子を使用するか、&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;アンパックできます。これは複数割り当てに似ています：</target>
        </trans-unit>
        <trans-unit id="692f9135476233938f8dd9acb3a88dd296499ac0" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;*&lt;/code&gt; to gather extra values on the right-hand side of the assignment.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; を使用して、割り当ての右側にある追加の値を収集できます。</target>
        </trans-unit>
        <trans-unit id="e1cdf2818b94375442e8a5c93e7806580fa1a4ef" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; to create a &lt;code&gt;while&lt;/code&gt; loop that runs the body once before the condition:</source>
          <target state="translated">あなたは使用することができます &lt;code&gt;begin&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; を作成するために &lt;code&gt;while&lt;/code&gt; の条件の前に一度身体を走るループ：</target>
        </trans-unit>
        <trans-unit id="bea429436a283f40dcb56726e48cbed7feb13067" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;verify_mode&lt;/code&gt; to override any default values.</source>
          <target state="translated">&lt;code&gt;verify_mode&lt;/code&gt; を使用して、デフォルト値を上書きできます。</target>
        </trans-unit>
        <trans-unit id="3dc86cd71910ba0346324e1c731c290c6a950557" translate="yes" xml:space="preserve">
          <source>You can use JSON &lt;em&gt;additions&lt;/em&gt; to preserve the original object. The addition is an extension of a ruby class, so that:</source>
          <target state="translated">JSON&lt;em&gt;追加&lt;/em&gt;を使用して、元のオブジェクトを保持できます。この追加はrubyクラスの拡張であるため、次のようになります。</target>
        </trans-unit>
        <trans-unit id="dddee96452f3b6678d1c673ffe00ceea1b57dce6" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;*&lt;/code&gt; to collect the remaining arguments. This splits an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; into a first element and the rest:</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; を使用して、残りの引数を収集できます。これにより、&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;が最初の要素と残りの要素に分割されます。</target>
        </trans-unit>
        <trans-unit id="dcc1de0ccd8e916f75e3d1bb845d083b2b972f9e" translate="yes" xml:space="preserve">
          <source>You can use a Hash to give names to method arguments:</source>
          <target state="translated">メソッドの引数に名前を付けるには、ハッシュを使用することができます。</target>
        </trans-unit>
        <trans-unit id="1d8d65557697fc6d3b04f6c8bc899c3efb7e4721" translate="yes" xml:space="preserve">
          <source>You can use a Hash to give names to objects:</source>
          <target state="translated">ハッシュを使ってオブジェクトに名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="6624ca2ecdaf5e219c9e93d50fd0ed95f3f57dde" translate="yes" xml:space="preserve">
          <source>You can use a Hash to initialize an object:</source>
          <target state="translated">ハッシュを使ってオブジェクトを初期化することができます。</target>
        </trans-unit>
        <trans-unit id="97f1c34c84ac81c1fcc7536a0ecbadf9bea4f7b9" translate="yes" xml:space="preserve">
          <source>You can use a special prefix to write numbers in decimal, hexadecimal, octal or binary formats. For decimal numbers use a prefix of &lt;code&gt;0d&lt;/code&gt;, for hexadecimal numbers use a prefix of &lt;code&gt;0x&lt;/code&gt;, for octal numbers use a prefix of &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;0o&lt;/code&gt;, for binary numbers use a prefix of &lt;code&gt;0b&lt;/code&gt;. The alphabetic component of the number is not case-sensitive.</source>
          <target state="translated">特別なプレフィックスを使用して、10進数、16進数、8進数、または2進数形式で数値を書き込むことができます。10進数の場合は接頭辞 &lt;code&gt;0d&lt;/code&gt; を使用し、16進数の場合は接頭辞 &lt;code&gt;0x&lt;/code&gt; を使用し、8進数の場合は接頭辞 &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;0o&lt;/code&gt; を使用し、2進数の場合は接頭辞 &lt;code&gt;0b&lt;/code&gt; を使用します。数字のアルファベット部分は大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="0f88d75da564645feb566ccb97eb232f663bc717" translate="yes" xml:space="preserve">
          <source>You can use multiple assignment to swap two values in-place:</source>
          <target state="translated">複数の代入を使用して、2つの値を入れ替えることができます。</target>
        </trans-unit>
        <trans-unit id="d69d62d2cca247dc6ebab7830c2a7ff7e6a49f3a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;internalobjectwrapper#method-i-type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; method to check the type of the internal object.</source>
          <target state="translated">&lt;a href=&quot;internalobjectwrapper#method-i-type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;メソッドを使用して、内部オブジェクトのタイプを確認できます。</target>
        </trans-unit>
        <trans-unit id="68f20e16f7e469439efd39ba44c145164efa19c8" translate="yes" xml:space="preserve">
          <source>You can use the following keys:</source>
          <target state="translated">以下のキーを使用することができます。</target>
        </trans-unit>
        <trans-unit id="9a17c3c67cf58e3f190a682e751f20d2b8ea4094" translate="yes" xml:space="preserve">
          <source>You can use the following operators this way: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">この方法で次の演算子を使用できます： &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; 、 &lt;code&gt;**&lt;/code&gt; 、 &lt;code&gt;&amp;amp;&lt;/code&gt; 、 &lt;code&gt;|&lt;/code&gt; 、 &lt;code&gt;^&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71bbabd78aea5f897700206f39f93ad29327b132" translate="yes" xml:space="preserve">
          <source>You can use these formatting options to generate JSON data in a more open format, using whitespace. See also &lt;a href=&quot;json#method-i-pretty_generate&quot;&gt;&lt;code&gt;JSON.pretty_generate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのフォーマットオプションを使用すると、空白を使用して、よりオープンなフォーマットでJSONデータを生成できます。&lt;a href=&quot;json#method-i-pretty_generate&quot;&gt; &lt;code&gt;JSON.pretty_generate&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="ddde82c4aade243e9850f08689119d50a434d8a5" translate="yes" xml:space="preserve">
          <source>You can use this library in your application by requiring it:</source>
          <target state="translated">このライブラリを必要とすることで、アプリケーションで使用することができます。</target>
        </trans-unit>
        <trans-unit id="a28437b987c82e17e0d00fb5a4877153dc83ab18" translate="yes" xml:space="preserve">
          <source>You can use this method in two modes: a find-minimum mode and a find-any mode. In either case, the elements of the array must be monotone (or sorted) with respect to the block.</source>
          <target state="translated">このメソッドには,find-minimum モードと find-any モードの 2 つのモードがあります.どちらの場合も,配列の要素はブロックに対して単調でなければなりません(あるいはソートされていなければなりません).</target>
        </trans-unit>
        <trans-unit id="e26e3789376e56da9329bddb033a512617d24b7f" translate="yes" xml:space="preserve">
          <source>You can use this method in two use cases: a find-minimum mode and a find-any mode. In either case, the elements of the range must be monotone (or sorted) with respect to the block.</source>
          <target state="translated">このメソッドは、find-minimumモードとfind-anyモードの2つの場合に使用できます。どちらの場合も,範囲の要素はブロックに対して単調でなければなりません(あるいはソートされていなければなりません).</target>
        </trans-unit>
        <trans-unit id="882da81d91fa50902c2257137ba296525577d63c" translate="yes" xml:space="preserve">
          <source>You can use this method to build a complete command line out of an array of arguments.</source>
          <target state="translated">このメソッドを使用して、引数の配列から完全なコマンドラインを構築することができます。</target>
        </trans-unit>
        <trans-unit id="ca00ac6428ed30e3c89e9aa143c5f5d78f23a1b8" translate="yes" xml:space="preserve">
          <source>You can use this method to create an escaped string out of an array of tokens separated by a space. In this example we used the literal shortcut for &lt;a href=&quot;array#method-c-new&quot;&gt;&lt;code&gt;Array.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドを使用して、スペースで区切られたトークンの配列からエスケープ文字列を作成できます。この例では、&lt;a href=&quot;array#method-c-new&quot;&gt; &lt;code&gt;Array.new&lt;/code&gt; &lt;/a&gt;のリテラルショートカットを使用しました。</target>
        </trans-unit>
        <trans-unit id="89aadc4facbd2d2fef02acec6acaa841ca54757e" translate="yes" xml:space="preserve">
          <source>You can use this method to install a &lt;a href=&quot;csv#Converters&quot;&gt;&lt;code&gt;CSV::Converters&lt;/code&gt;&lt;/a&gt; built-in, or provide a block that handles a custom conversion.</source>
          <target state="translated">このメソッドを使用して、組み込みの&lt;a href=&quot;csv#Converters&quot;&gt; &lt;code&gt;CSV::Converters&lt;/code&gt; &lt;/a&gt;をインストールするか、カスタム変換を処理するブロックを提供できます。</target>
        </trans-unit>
        <trans-unit id="8d459cff02f35a2be4a488aae459ba338dbbd746" translate="yes" xml:space="preserve">
          <source>You can use this to implement an internal iterator as follows:</source>
          <target state="translated">これを利用して、以下のように内部イテレータを実装することができます。</target>
        </trans-unit>
        <trans-unit id="49d96073cb826c1835401a14991ee40089cf9a88" translate="yes" xml:space="preserve">
          <source>You can wrap a statement in parentheses to create an expression.</source>
          <target state="translated">ステートメントを括弧で囲むことで式を作成することができます。</target>
        </trans-unit>
        <trans-unit id="f1c150c892bb0f513e7bb6b2742f2b05d085edc2" translate="yes" xml:space="preserve">
          <source>You can write integers of any size as follows:</source>
          <target state="translated">次のように任意の大きさの整数を書くことができます。</target>
        </trans-unit>
        <trans-unit id="4f1733e707bf81ee915508efaf6ee1b45c30315a" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;resume&lt;/code&gt; on a fiber that has been transferred to. If you call &lt;code&gt;transfer&lt;/code&gt; on a fiber, and later call &lt;code&gt;resume&lt;/code&gt; on the the fiber, a &lt;code&gt;FiberError&lt;/code&gt; will be raised. Once you call &lt;code&gt;transfer&lt;/code&gt; on a fiber, the only way to resume processing the fiber is to call &lt;code&gt;transfer&lt;/code&gt; on it again.</source>
          <target state="translated">You cannot call &lt;code&gt;resume&lt;/code&gt; on a fiber that has been transferred to. If you call &lt;code&gt;transfer&lt;/code&gt; on a fiber, and later call &lt;code&gt;resume&lt;/code&gt; on the the fiber, a &lt;code&gt;FiberError&lt;/code&gt; will be raised. Once you call &lt;code&gt;transfer&lt;/code&gt; on a fiber, the only way to resume processing the fiber is to call &lt;code&gt;transfer&lt;/code&gt; on it again.</target>
        </trans-unit>
        <trans-unit id="5137b806807a8b3239442d9e94c3a09a509c7e16" translate="yes" xml:space="preserve">
          <source>You cannot mix column and row access.</source>
          <target state="translated">列と行のアクセスを混在させることはできません。</target>
        </trans-unit>
        <trans-unit id="9505ac0c642bcb69fa161f5d25eacfa3f63e8b2c" translate="yes" xml:space="preserve">
          <source>You cannot resume a fiber that transferred control to another one. This will cause a double resume error. You need to transfer control back to this fiber before it can yield and resume.</source>
          <target state="translated">制御を別のファイバに転送したファイバをレジュームすることはできません。これは、二重再開エラーの原因となります。ファイバが降伏して再開できるようになる前に、このファイバに制御を転送する必要があります。</target>
        </trans-unit>
        <trans-unit id="33bd26b1fa0d96b3ce834a7eb878498fefe4608f" translate="yes" xml:space="preserve">
          <source>You change how your commands are invoked:</source>
          <target state="translated">コマンドの起動方法を変更します。</target>
        </trans-unit>
        <trans-unit id="e85f91937f5ee2832f7832bf3a30df4045e7ae8b" translate="yes" xml:space="preserve">
          <source>You could also use the &lt;a href=&quot;tcpsocket&quot;&gt;&lt;code&gt;TCPSocket&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">&lt;a href=&quot;tcpsocket&quot;&gt; &lt;code&gt;TCPSocket&lt;/code&gt; &lt;/a&gt;クラスを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="ee1f95ea9c36b5488bb4fe65f8013f3c6337a5b3" translate="yes" xml:space="preserve">
          <source>You could use Forwardable as an alternative to inheritance, when you don't want to inherit all methods from the superclass. For instance, here is how you might add a range of &lt;code&gt;Array&lt;/code&gt; instance methods to a new class &lt;code&gt;Queue&lt;/code&gt;:</source>
          <target state="translated">You could use Forwardable as an alternative to inheritance, when you don't want to inherit all methods from the superclass. For instance, here is how you might add a range of &lt;code&gt;Array&lt;/code&gt; instance methods to a new class &lt;code&gt;Queue&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="10a1255b884121f8786cf3059d6269ba5bd957bc" translate="yes" xml:space="preserve">
          <source>You could write it as:</source>
          <target state="translated">みたいに書けばいいんじゃないかな。</target>
        </trans-unit>
        <trans-unit id="9eead2816bcb9cc10f308fe19b06fd26576b9eef" translate="yes" xml:space="preserve">
          <source>You don't need to use parenthesis with &lt;code&gt;defined?&lt;/code&gt;, but they are recommended due to the &lt;a href=&quot;precedence_rdoc&quot;&gt;low precedence&lt;/a&gt; of &lt;code&gt;defined?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defined?&lt;/code&gt; 括弧を使用する必要はありませんか？、しかしそれらは &lt;code&gt;defined?&lt;/code&gt; &lt;a href=&quot;precedence_rdoc&quot;&gt;優先順位&lt;/a&gt;が低いため推奨されますか？。</target>
        </trans-unit>
        <trans-unit id="65ab05c98279f798c79981d9c49de1e19d610779" translate="yes" xml:space="preserve">
          <source>You may activate refinements at top-level, and inside classes and modules. You may not activate refinements in method scope. Refinements are activated until the end of the current class or module definition, or until the end of the current file if used at the top-level.</source>
          <target state="translated">トップレベルでも、クラスやモジュールの内部でも、リファインメントを有効にすることができます。メソッドスコープ内では改良を有効にすることはできません。改良は、現在のクラスやモジュールの定義が終了するまで、トップレベルで使用されている場合は現在のファイルが終了するまで有効になります。</target>
        </trans-unit>
        <trans-unit id="8b4a02956842bd45caacb6034627b07d2078a6cf" translate="yes" xml:space="preserve">
          <source>You may activate refinements in a string passed to &lt;a href=&quot;../kernel#method-i-eval&quot;&gt;&lt;code&gt;Kernel#eval&lt;/code&gt;&lt;/a&gt;. Refinements are active until the end of the eval string.</source>
          <target state="translated">&lt;a href=&quot;../kernel#method-i-eval&quot;&gt; &lt;code&gt;Kernel#eval&lt;/code&gt; に&lt;/a&gt;渡された文字列で絞り込みを有効にすることができます。絞り込みは、eval文字列の終わりまでアクティブです。</target>
        </trans-unit>
        <trans-unit id="afc4217c5a95d2d493274b5a00b1cce0fcb4bf42" translate="yes" xml:space="preserve">
          <source>You may add an arbitrary number of extra tests to an if expression using &lt;code&gt;elsif&lt;/code&gt;. An &lt;code&gt;elsif&lt;/code&gt; executes when all tests above the &lt;code&gt;elsif&lt;/code&gt; are false.</source>
          <target state="translated">&lt;code&gt;elsif&lt;/code&gt; を使用して、任意の数の追加のテストをif式に追加できます。 &lt;code&gt;elsif&lt;/code&gt; 上記のすべてのテストを実行 &lt;code&gt;elsif&lt;/code&gt; falseです。</target>
        </trans-unit>
        <trans-unit id="8322b6b28c46c6f41c470e1962c4299f6f267bf9" translate="yes" xml:space="preserve">
          <source>You may also add an &lt;code&gt;else&lt;/code&gt; expression. If the test does not evaluate to true the &lt;code&gt;else&lt;/code&gt; expression will be executed:</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 式を追加することもできます。テストがtrueと評価されない場合、 &lt;code&gt;else&lt;/code&gt; 式が実行されます。</target>
        </trans-unit>
        <trans-unit id="8bde9c3f3c70792572ee604f1edbac7eef6a9fb1" translate="yes" xml:space="preserve">
          <source>You may also alias or undefine methods, but these operations are not restricted to modules or classes. See the &lt;a href=&quot;miscellaneous_rdoc&quot;&gt;miscellaneous syntax section&lt;/a&gt; for documentation.</source>
          <target state="translated">メソッドのエイリアスまたは未定義も可能ですが、これらの操作はモジュールまたはクラスに限定されません。ドキュメントについては、&lt;a href=&quot;miscellaneous_rdoc&quot;&gt;その他の構文セクション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="82462b3f296f9b756f73052d1f44fc4d49738fe1" translate="yes" xml:space="preserve">
          <source>You may also create a custom proxy:</source>
          <target state="translated">カスタムプロキシを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="64335d419fd18e4d6cd454c5d1a491f9c7450082" translate="yes" xml:space="preserve">
          <source>You may also create strings using &lt;code&gt;%&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; を使用して文字列を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="ee5acdd54f96bdddea073228661c4d9f1de197f6" translate="yes" xml:space="preserve">
          <source>You may also create symbols by interpolation:</source>
          <target state="translated">また、補間でシンボルを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="624d51b3bc650a7e2840b95069404458ad7dd1ab" translate="yes" xml:space="preserve">
          <source>You may also declare block-local arguments to a block using &lt;code&gt;;&lt;/code&gt; in the block arguments list. Assigning to a block-local argument will not override local arguments outside the block in the caller's scope:</source>
          <target state="translated">を使用して、ブロックローカル引数をブロックに宣言することもでき &lt;code&gt;;&lt;/code&gt; ブロック引数リスト内。ブロックローカル引数に割り当てても、呼び出し元のスコープ内のブロック外のローカル引数はオーバーライドされません。</target>
        </trans-unit>
        <trans-unit id="aef4846505a259eedded3bb138df8fabc2593596" translate="yes" xml:space="preserve">
          <source>You may also define inner modules using &lt;code&gt;::&lt;/code&gt; provided the outer modules (or classes) are already defined:</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; を使用して内部モジュールを定義することもできます。ただし、外部モジュール（またはクラス）がすでに定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="0380042bb359e0cfaa8568ca84c4663bc80f7d0c" translate="yes" xml:space="preserve">
          <source>You may also run some code when an exception is not raised:</source>
          <target state="translated">また、例外が発生しない場合には、いくつかのコードを実行することができます。</target>
        </trans-unit>
        <trans-unit id="20648999b25bc5048753fe8ac6be05e77a204694" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;::&lt;/code&gt; to designate a receiver, but this is rarely used due to the potential for confusion with &lt;code&gt;::&lt;/code&gt; for namespaces.</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; を使用してレシーバーを指定することもできますが、名前空間の &lt;code&gt;::&lt;/code&gt; と混同される可能性があるため、これが使用されることはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="7839d6f1f3b053824952d748b10fa045c350b478" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;**&lt;/code&gt; (described next) to convert a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; into keyword arguments.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; （次で説明）を使用して、&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;をキーワード引数に変換することもできます。</target>
        </trans-unit>
        <trans-unit id="dc9f21de9f2fe40426f1f1038de16d737c9992f7" translate="yes" xml:space="preserve">
          <source>You may also write a if-then-else expression using &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;:&lt;/code&gt;. This ternary if:</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; を使用してif-then-else式を記述することもできます。そして、 &lt;code&gt;:&lt;/code&gt; 。この三項：</target>
        </trans-unit>
        <trans-unit id="651591c825c1ca1933f4a5ec3aac2ce4e487164b" translate="yes" xml:space="preserve">
          <source>You may change the date and time format via &lt;a href=&quot;logger#method-i-datetime_format-3D&quot;&gt;&lt;code&gt;datetime_format=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;logger#method-i-datetime_format-3D&quot;&gt; &lt;code&gt;datetime_format=&lt;/code&gt; &lt;/a&gt;日付と時刻の形式を変更できます。</target>
        </trans-unit>
        <trans-unit id="360ea90afd489f46f69749f5a74391625b7559a6" translate="yes" xml:space="preserve">
          <source>You may create a range of any object. See the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; documentation for details on the methods you need to implement.</source>
          <target state="translated">任意のオブジェクトの範囲を作成できます。実装する必要があるメソッドの詳細については、&lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0731e169ff672eaffe7b582cb49ea5f6f2cc7eff" translate="yes" xml:space="preserve">
          <source>You may indent the ending identifier if you place a &amp;ldquo;-&amp;rdquo; after &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; の後に「-」を置くと、終了識別子をインデントできます。</target>
        </trans-unit>
        <trans-unit id="f1d3c9be0dd7e02782c624a0fb08ecd63d12e7f8" translate="yes" xml:space="preserve">
          <source>You may isolate variables in a block from the outer scope by listing them following a &lt;code&gt;;&lt;/code&gt; in the block's arguments. See the documentation for block local variables in the &lt;a href=&quot;calling_methods_rdoc&quot;&gt;calling methods&lt;/a&gt; documentation for an example.</source>
          <target state="translated">ブロック内の変数を外側のスコープから分離するには、変数を &lt;code&gt;;&lt;/code&gt; の後にリストします。ブロックの引数。例については、&lt;a href=&quot;calling_methods_rdoc&quot;&gt;呼び出しメソッドの&lt;/a&gt;ドキュメントのブロックローカル変数のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d78b38ed883e0f1223661f0248020723369e1bd6" translate="yes" xml:space="preserve">
          <source>You may need to perform some syslog.conf setup first. For a BSD machine add the following lines to /etc/syslog.conf:</source>
          <target state="translated">最初にいくつかの syslog.conf の設定を行う必要があるかもしれません。BSD マシンの場合、以下の行を /etc/syslog.conf に追加してください。</target>
        </trans-unit>
        <trans-unit id="38c98db851d4527f432fc98376934dca4631c0dd" translate="yes" xml:space="preserve">
          <source>You may not use &lt;code&gt;elsif&lt;/code&gt; with an &lt;code&gt;unless&lt;/code&gt; expression.</source>
          <target state="translated">あなたは使用することはできません &lt;code&gt;elsif&lt;/code&gt; で &lt;code&gt;unless&lt;/code&gt; 表現。</target>
        </trans-unit>
        <trans-unit id="8223b36292837bda0323dcd637fbb61015da51be" translate="yes" xml:space="preserve">
          <source>You may obtain information about the operation of the &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;gc/profiler&quot;&gt;&lt;code&gt;GC::Profiler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">あなたはの操作に関する情報入手することができる&lt;a href=&quot;gc&quot;&gt; &lt;code&gt;GC&lt;/code&gt; を&lt;/a&gt;経由&lt;a href=&quot;gc/profiler&quot;&gt; &lt;code&gt;GC::Profiler&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a24baa59359297fa85638b505ea5f25f92163019" translate="yes" xml:space="preserve">
          <source>You may open multiple heredocs on the same line, but this can be difficult to read:</source>
          <target state="translated">同一行に複数のヘレドクを開くことができますが、これは読みにくいかもしれません。</target>
        </trans-unit>
        <trans-unit id="06fe2e32e624d912dc76f8afdb0670e3161f2a1c" translate="yes" xml:space="preserve">
          <source>You may place expressions inside the array:</source>
          <target state="translated">配列の中に式を配置することができます。</target>
        </trans-unit>
        <trans-unit id="3b7702702966615d9ac3038da489f5fc0882ae1f" translate="yes" xml:space="preserve">
          <source>You may place multiple conditions on the same &lt;code&gt;when&lt;/code&gt;:</source>
          <target state="translated">あなたは同じで複数の条件を置くことができ &lt;code&gt;when&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fd32e69ad8d93f6867346d2956841353c2072c4a" translate="yes" xml:space="preserve">
          <source>You may reference a symbol using a colon: &lt;code&gt;:my_symbol&lt;/code&gt;.</source>
          <target state="translated">コロンは &lt;code&gt;:my_symbol&lt;/code&gt; を使用してシンボルを参照できます。</target>
        </trans-unit>
        <trans-unit id="e3898ac4044e8cf5d3f283d4e96b3ee13b285c38" translate="yes" xml:space="preserve">
          <source>You may rescue different types of exceptions in different ways:</source>
          <target state="translated">例外の種類が異なるものを、それぞれの方法で救済することができます。</target>
        </trans-unit>
        <trans-unit id="073eb94c3ed148391dc2fdbe59e5a3ee65569a30" translate="yes" xml:space="preserve">
          <source>You may retry rescued exceptions:</source>
          <target state="translated">救出された例外を再試行することができます。</target>
        </trans-unit>
        <trans-unit id="ba7647874078e7d4df3070f72ff2c2ecd5c79a3e" translate="yes" xml:space="preserve">
          <source>You may set any reading and/or writing preferences in the &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;. Available options are:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; &lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;で、読み取りと書き込みの設定を行うことができます。利用可能なオプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f566312de8c1da1da9a1cf685c09c2117a8bbc3a" translate="yes" xml:space="preserve">
          <source>You may undef multiple methods:</source>
          <target state="translated">複数のメソッドをundefすることができます。</target>
        </trans-unit>
        <trans-unit id="88c9444be9b193bfa82054843dda7ea1fa0deaef" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;alias&lt;/code&gt; in any scope.</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; はどのスコープでも使用できます。</target>
        </trans-unit>
        <trans-unit id="97545ea4e687b3d4cd20b55a900e824de649c012" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;then&lt;/code&gt; after the &lt;code&gt;when&lt;/code&gt; condition. This is most frequently used to place the body of the &lt;code&gt;when&lt;/code&gt; on a single line.</source>
          <target state="translated">あなたは使用することができ &lt;code&gt;then&lt;/code&gt; の後に &lt;code&gt;when&lt;/code&gt; の状態。これは、の本体を1行 &lt;code&gt;when&lt;/code&gt; 配置する場合に最もよく使用されます。</target>
        </trans-unit>
        <trans-unit id="7b0ed04264020642f511e9b0070428286521dea3" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;undef&lt;/code&gt; in any scope. See also &lt;a href=&quot;../module#method-i-undef_method&quot;&gt;&lt;code&gt;Module#undef_method&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;undef&lt;/code&gt; はどのスコープでも使用できます。&lt;a href=&quot;../module#method-i-undef_method&quot;&gt; &lt;code&gt;Module#undef_method&lt;/code&gt; &lt;/a&gt;も参照してください</target>
        </trans-unit>
        <trans-unit id="7f694f49a64923c58d9c041a60a59f1f150e2b7f" translate="yes" xml:space="preserve">
          <source>You may use an optional &lt;code&gt;then&lt;/code&gt; with &lt;code&gt;unless&lt;/code&gt; just like &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; のようにし &lt;code&gt;unless&lt;/code&gt; 、オプションの &lt;code&gt;then&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="a046de63053360022357736216cf16884dff77dc" translate="yes" xml:space="preserve">
          <source>You may use any identifier with a heredoc, but all-uppercase identifiers are typically used.</source>
          <target state="translated">ヘレドクであればどのような識別子を使用しても構いませんが、通常はすべて大文字の識別子が使用されます。</target>
        </trans-unit>
        <trans-unit id="87add3f0214a54cde517d7027a008b34350e2481" translate="yes" xml:space="preserve">
          <source>You may use symbols instead of method names:</source>
          <target state="translated">メソッド名の代わりにシンボルを使用することができます。</target>
        </trans-unit>
        <trans-unit id="1447db4a1679b70b77aa8af0c960cb249004e109" translate="yes" xml:space="preserve">
          <source>You may want to look at &lt;a href=&quot;openssl/digest&quot;&gt;&lt;code&gt;OpenSSL::Digest&lt;/code&gt;&lt;/a&gt; as it supports more algorithms.</source>
          <target state="translated">&lt;a href=&quot;openssl/digest&quot;&gt; &lt;code&gt;OpenSSL::Digest&lt;/code&gt; &lt;/a&gt;は、より多くのアルゴリズムをサポートしているので、調べてみてください。</target>
        </trans-unit>
        <trans-unit id="2bc7f2cc2fcb8cc197c014c64d8efd5b45d4e238" translate="yes" xml:space="preserve">
          <source>You must call &lt;a href=&quot;cipher#method-i-encrypt&quot;&gt;&lt;code&gt;encrypt&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#method-i-decrypt&quot;&gt;&lt;code&gt;decrypt&lt;/code&gt;&lt;/a&gt; before calling this method.</source>
          <target state="translated">このメソッドを呼び出す前に、&lt;a href=&quot;cipher#method-i-encrypt&quot;&gt; &lt;code&gt;encrypt&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cipher#method-i-decrypt&quot;&gt; &lt;code&gt;decrypt&lt;/code&gt; &lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="4bc9723cac461aa0725190a3634254e9325b9155" translate="yes" xml:space="preserve">
          <source>You must not mix the two modes at a time; the block must always return either true/false, or always return a number. It is undefined which value is actually picked up at each iteration.</source>
          <target state="translated">ブロックは常に真/偽のどちらかを返すか、常に数値を返さなければなりません。ブロックは常に真/偽のどちらかを返すか、常に数値を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="241b19ff396b81e22d71cbd48eef162e58c177bd" translate="yes" xml:space="preserve">
          <source>You must open a connection to an &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server before sending messages. The first argument is the address of your &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server, and the second argument is the port number. Using &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt; with a block is the simplest way to do this. This way, the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; connection is closed automatically after the block is executed.</source>
          <target state="translated">メッセージを送信する前に、&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;サーバーへの接続を開く必要があります。最初の引数は&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;サーバーのアドレスで、2番目の引数はポート番号です。これを行う最も簡単な方法は、ブロックで&lt;a href=&quot;smtp#method-c-start&quot;&gt; &lt;code&gt;SMTP.start&lt;/code&gt; &lt;/a&gt;を使用することです。このように、ブロックが実行された後、&lt;a href=&quot;smtp&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;接続は自動的に閉じられます。</target>
        </trans-unit>
        <trans-unit id="be59ffae6b51f87698b12e2234d0b10dd6d3446a" translate="yes" xml:space="preserve">
          <source>You must pass a &lt;code&gt;filename&lt;/code&gt; and may optionally add a &lt;code&gt;mode&lt;/code&gt; for Ruby's open(). You may also pass an optional &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; containing any &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands as the final argument.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; を渡す必要があり、オプションでRubyのopen（）の &lt;code&gt;mode&lt;/code&gt; を追加できます。また、&lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt;が最後の引数として理解する &lt;code&gt;options&lt;/code&gt; を含むオプションの&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="276501db5b305e5ffa7d0b2a55ee1ff68b7cf3cc" translate="yes" xml:space="preserve">
          <source>You must provide a &lt;code&gt;mode&lt;/code&gt; with an embedded &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; designator unless your data is in &lt;a href=&quot;encoding#method-c-default_external&quot;&gt;&lt;code&gt;Encoding::default_external()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will check the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; of the underlying &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object (set by the &lt;code&gt;mode&lt;/code&gt; you pass) to determine how to parse the data. You may provide a second &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; to have the data transcoded as it is read just as you can with a normal call to &lt;a href=&quot;io#method-c-open&quot;&gt;&lt;code&gt;IO::open()&lt;/code&gt;&lt;/a&gt;. For example, &lt;code&gt;&quot;rb:UTF-32BE:UTF-8&quot;&lt;/code&gt; would read UTF-32BE data from the file but transcode it to UTF-8 before &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; parses it.</source>
          <target state="translated">データが&lt;a href=&quot;encoding#method-c-default_external&quot;&gt; &lt;code&gt;Encoding::default_external()&lt;/code&gt; &lt;/a&gt;ない限り、埋め込まれた&lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt;指定子を使用して &lt;code&gt;mode&lt;/code&gt; を提供する必要があります。&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; &lt;/a&gt;は、（渡す &lt;code&gt;mode&lt;/code&gt; 設定された）基になる&lt;a href=&quot;io&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt;をチェックして、データの解析方法を決定します。&lt;a href=&quot;io#method-c-open&quot;&gt; &lt;code&gt;IO::open()&lt;/code&gt; &lt;/a&gt;への通常の呼び出しと同じように、データが読み取られるときにトランスコードされるように、2番目の&lt;a href=&quot;encoding&quot;&gt; &lt;code&gt;Encoding&lt;/code&gt; &lt;/a&gt;を提供できます。たとえば、 &lt;code&gt;&quot;rb:UTF-32BE:UTF-8&quot;&lt;/code&gt; はファイルからUTF-32BEデータを読み取りますが、&lt;a href=&quot;csv&quot;&gt; &lt;code&gt;CSV&lt;/code&gt; が&lt;/a&gt;解析する前にそれをUTF-8にトランスコードします。</target>
        </trans-unit>
        <trans-unit id="535b022406ea415ca1a76bb4c82842771f5dc3c2" translate="yes" xml:space="preserve">
          <source>You must require 'io/console' to use this method.</source>
          <target state="translated">このメソッドを使用するには 'io/console' が必要です。</target>
        </trans-unit>
        <trans-unit id="d95d648ab8aa37b1fce85d86114f5281325f010a" translate="yes" xml:space="preserve">
          <source>You must require 'time' to use this method.</source>
          <target state="translated">この方法を使用するには「時間」が必要です。</target>
        </trans-unit>
        <trans-unit id="8527ee4c2ca65d5a47b1fb8c201f76d778d0b29f" translate="yes" xml:space="preserve">
          <source>You must sign the request and resubmit</source>
          <target state="translated">リクエストに署名して再提出する必要があります。</target>
        </trans-unit>
        <trans-unit id="dd266e4d5782a2c63defe387f102a9aba569491d" translate="yes" xml:space="preserve">
          <source>You must use &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; you may not use &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">あなたは使用する必要があります &lt;code&gt;{&lt;/code&gt; と &lt;code&gt;}&lt;/code&gt; あなたが使用することはできません &lt;code&gt;do&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19dd5893c8812e8a79dea7e870c97a824fbe5be6" translate="yes" xml:space="preserve">
          <source>You need to &lt;code&gt;require 'objspace'&lt;/code&gt; to use this extension module.</source>
          <target state="translated">この拡張モジュールを使用するに &lt;code&gt;require 'objspace'&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="fc98bf2b7cae44275a118a27dd1f2db397ed1027" translate="yes" xml:space="preserve">
          <source>You pass your &lt;code&gt;str&lt;/code&gt; to read from, and an optional &lt;code&gt;options&lt;/code&gt; containing anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands.</source>
          <target state="translated">読み取る &lt;code&gt;str&lt;/code&gt; を渡し、&lt;a href=&quot;csv#method-c-new&quot;&gt; &lt;code&gt;CSV::new()&lt;/code&gt; &lt;/a&gt;理解できるものをすべて含むオプションの &lt;code&gt;options&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="09e865cb65b401123f98d19f2f5525d4844a1f09" translate="yes" xml:space="preserve">
          <source>You should be careful to avoid deadlocks. Since pipes are fixed length buffers, &lt;a href=&quot;open3#method-c-popen3&quot;&gt;&lt;code&gt;Open3.popen3&lt;/code&gt;&lt;/a&gt;(&amp;ldquo;prog&amp;rdquo;) {|i, o, e, t| o.read } deadlocks if the program generates too much output on stderr. You should read stdout and stderr simultaneously (using threads or &lt;a href=&quot;io#method-c-select&quot;&gt;&lt;code&gt;IO.select&lt;/code&gt;&lt;/a&gt;). However, if you don't need stderr output, you can use &lt;a href=&quot;open3#method-c-popen2&quot;&gt;&lt;code&gt;Open3.popen2&lt;/code&gt;&lt;/a&gt;. If merged stdout and stderr output is not a problem, you can use &lt;a href=&quot;open3#method-c-popen2e&quot;&gt;&lt;code&gt;Open3.popen2e&lt;/code&gt;&lt;/a&gt;. If you really need stdout and stderr output as separate strings, you can consider &lt;a href=&quot;open3#method-c-capture3&quot;&gt;&lt;code&gt;Open3.capture3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デッドロックを回避するように注意する必要があります。パイプは固定長のバッファーなので、&lt;a href=&quot;open3#method-c-popen3&quot;&gt; &lt;code&gt;Open3.popen3&lt;/code&gt; &lt;/a&gt;（&amp;ldquo; prog&amp;rdquo;）{| i、o、e、t | o.read}プログラムがstderrに生成する出力が多すぎる場合、デッドロック。stdoutとstderrを同時に読み取る必要があります（スレッドまたは&lt;a href=&quot;io#method-c-select&quot;&gt; &lt;code&gt;IO.select&lt;/code&gt; &lt;/a&gt;を使用）。ただし、stderr出力が必要ない場合は、&lt;a href=&quot;open3#method-c-popen2&quot;&gt; &lt;code&gt;Open3.popen2&lt;/code&gt; &lt;/a&gt;を使用できます。stdoutとstderrの出力のマージが問題にならない場合は、&lt;a href=&quot;open3#method-c-popen2e&quot;&gt; &lt;code&gt;Open3.popen2e&lt;/code&gt; &lt;/a&gt;を使用できます。stdoutとstderrの出力を別々の文字列として本当に必要な場合は、&lt;a href=&quot;open3#method-c-capture3&quot;&gt; &lt;code&gt;Open3.capture3&lt;/code&gt; &lt;/a&gt;を検討できます。</target>
        </trans-unit>
        <trans-unit id="e7d74ede9c5f6808db97f4ded25d6170697c4def" translate="yes" xml:space="preserve">
          <source>You should never call &lt;code&gt;send&lt;/code&gt; with user supplied input as the first parameter. Doing so can introduce a denial of service vulnerability:</source>
          <target state="translated">ユーザー提供の入力を最初のパラメーターとして &lt;code&gt;send&lt;/code&gt; を呼び出さないでください。これを行うと、サービス拒否の脆弱性が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4103c6875c8bd1ea1f57c9175e1f0a28289574c7" translate="yes" xml:space="preserve">
          <source>You should never redefine &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;Warning#warn&lt;/code&gt;&lt;/a&gt; (the instance method), as that will then no longer provide a way to use the default behavior.</source>
          <target state="translated">&lt;a href=&quot;warning#method-i-warn&quot;&gt; &lt;code&gt;Warning#warn&lt;/code&gt; &lt;/a&gt;（インスタンスメソッド）を再定義しないでください。再定義すると、デフォルトの動作を使用する方法が提供されなくなります。</target>
        </trans-unit>
        <trans-unit id="2e434e0c925677c2c414f968db78e0528777f17d" translate="yes" xml:space="preserve">
          <source>You should not load binary data provided by others. You should use binary data translated by yourself.</source>
          <target state="translated">他人から提供されたバイナリデータを読み込んではいけません。バイナリデータは自分で翻訳したものを使用してください。</target>
        </trans-unit>
        <trans-unit id="e0e29614fd606e4ce9605c5847813c5bc0e77038" translate="yes" xml:space="preserve">
          <source>You should only untaint a tainted object if your code has inspected it and determined that it is safe. To do so use &lt;a href=&quot;object#method-i-untaint&quot;&gt;&lt;code&gt;untaint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コードがオブジェクトを検査し、安全であると判断した場合にのみ、汚染されたオブジェクトの汚染を解除する必要があります。そのためには&lt;a href=&quot;object#method-i-untaint&quot;&gt; &lt;code&gt;untaint&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="2c0fe8d2c22d8124bff8b7f70168a8210d2f2daa" translate="yes" xml:space="preserve">
          <source>You should set Content-Type: header field for POST. If no Content-Type: field given, this method uses &amp;ldquo;application/x-www-form-urlencoded&amp;rdquo; by default.</source>
          <target state="translated">POSTにはContent-Type：ヘッダーフィールドを設定する必要があります。Content-Type：フィールドが指定されていない場合、このメソッドはデフォルトで「application / x-www-form-urlencoded」を使用します。</target>
        </trans-unit>
        <trans-unit id="26771292c7d8a4704cac126582eb9513f9d96e50" translate="yes" xml:space="preserve">
          <source>You typically won't use this module directly, you can see it implemented in &lt;a href=&quot;ssl/sslsocket&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常、このモジュールを直接使用することはありません&lt;a href=&quot;ssl/sslsocket&quot;&gt; &lt;code&gt;OpenSSL::SSL::SSLSocket&lt;/code&gt; &lt;/a&gt;実装されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="a25c2a3acf3f1a6e11fa5b26f033bea598a9954b" translate="yes" xml:space="preserve">
          <source>You will need to require 'scanf' to use &lt;a href=&quot;io#method-i-scanf&quot;&gt;&lt;code&gt;IO#scanf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;io#method-i-scanf&quot;&gt; &lt;code&gt;IO#scanf&lt;/code&gt; &lt;/a&gt;を使用するには 'scanf'を要求する必要があります。</target>
        </trans-unit>
        <trans-unit id="bea489950dd592bc713230adefa6b513e6daeade" translate="yes" xml:space="preserve">
          <source>You will need to require 'scanf' to use &lt;a href=&quot;kernel#method-i-scanf&quot;&gt;&lt;code&gt;Kernel#scanf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;kernel#method-i-scanf&quot;&gt; &lt;code&gt;Kernel#scanf&lt;/code&gt; &lt;/a&gt;を使用するには、 'scanf'を要求する必要があります。</target>
        </trans-unit>
        <trans-unit id="139cb1c57648a3cfcb2f0fca8aeb53cd999ef725" translate="yes" xml:space="preserve">
          <source>You will need to require 'scanf' to use &lt;a href=&quot;string#method-i-block_scanf&quot;&gt;&lt;code&gt;String#block_scanf&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;string#method-i-block_scanf&quot;&gt; &lt;code&gt;String#block_scanf&lt;/code&gt; &lt;/a&gt;を使用するには 'scanf'を要求する必要があります</target>
        </trans-unit>
        <trans-unit id="d9cfc335d04c96f58c5c5f901da3799ba6e83133" translate="yes" xml:space="preserve">
          <source>You will need to require 'scanf' to use &lt;a href=&quot;string#method-i-scanf&quot;&gt;&lt;code&gt;String#scanf&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;string#method-i-scanf&quot;&gt; &lt;code&gt;String#scanf&lt;/code&gt; &lt;/a&gt;を使用するには 'scanf'を要求する必要があります</target>
        </trans-unit>
        <trans-unit id="79b980e182af124af9b6af4d78bec59bb7c95f14" translate="yes" xml:space="preserve">
          <source>You will see ruby print &lt;code&gt;[1, 2, 3, 4]&lt;/code&gt;.</source>
          <target state="translated">ruby print &lt;code&gt;[1, 2, 3, 4]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="0ce87524a23e1275a93fab4fe17eff1c061c6e75" translate="yes" xml:space="preserve">
          <source>You will see ruby print &lt;code&gt;[1, 2, 5, 4]&lt;/code&gt;</source>
          <target state="translated">ルビーのプリントが表示されます &lt;code&gt;[1, 2, 5, 4]&lt;/code&gt; 1、2、5、4 ]</target>
        </trans-unit>
        <trans-unit id="7aac5234622e1c7b2dbb84851294dd83784c9ad0" translate="yes" xml:space="preserve">
          <source>You will see ruby print &lt;code&gt;[1, 5, 3, 6]&lt;/code&gt;.</source>
          <target state="translated">ruby print &lt;code&gt;[1, 5, 3, 6]&lt;/code&gt; 1、5、3、6 ]が表示されます。</target>
        </trans-unit>
        <trans-unit id="96efeba0f2bb78cee72e8f76640a79a3caebf658" translate="yes" xml:space="preserve">
          <source>You'll probably stick to the second form above, unless you want to provide a program name (which you can do with &lt;a href=&quot;logger#attribute-i-progname&quot;&gt;&lt;code&gt;progname=&lt;/code&gt;&lt;/a&gt; as well).</source>
          <target state="translated">プログラム名を提供したい場合（&lt;a href=&quot;logger#attribute-i-progname&quot;&gt; &lt;code&gt;progname=&lt;/code&gt; &lt;/a&gt;でも実行できます）を除き、おそらく上記の2番目の形式を使用します。</target>
        </trans-unit>
        <trans-unit id="155d1ad20ac7095b7a72ccc6fd0f7c17d4acfda1" translate="yes" xml:space="preserve">
          <source>Your commands can be invoked with a shortcut. Instead of:</source>
          <target state="translated">コマンドはショートカットで呼び出すことができます。その代わりに</target>
        </trans-unit>
        <trans-unit id="66640f8a2107cbb48847306bf8e768420e77ecbc" translate="yes" xml:space="preserve">
          <source>Your implementation of #&amp;lt;=&amp;gt; should return one of the following values: -1, 0, 1 or nil. -1 means self is smaller than other. 0 means self is equal to other. 1 means self is bigger than other. Nil means the two values could not be compared.</source>
          <target state="translated">Your implementation of #&amp;lt;=&amp;gt; should return one of the following values: -1, 0, 1 or nil. -1 means self is smaller than other. 0 means self is equal to other. 1 means self is bigger than other. Nil means the two values could not be compared.</target>
        </trans-unit>
        <trans-unit id="28c43e1dd3fcbcca10bcc016de5c90ae3570d8d2" translate="yes" xml:space="preserve">
          <source>Your implementation of &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; should return one of the following values: -1, 0, 1 or nil. -1 means self is smaller than other. 0 means self is equal to other. 1 means self is bigger than other. Nil means the two values could not be compared.</source>
          <target state="translated">&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; の実装は、-1、0、1、またはnilのいずれかの値を返す必要があります。-1は、自己が他よりも小さいことを意味します。0は、自己が他のものと等しいことを意味します。1は、自己が他よりも大きいことを意味します。Nilは、2つの値を比較できなかったことを意味します。</target>
        </trans-unit>
        <trans-unit id="933d796997ef8ce2912f08320d272ecbb56b9b8d" translate="yes" xml:space="preserve">
          <source>Your platform documentations (e.g. man open(2)) may describe more detailed information.</source>
          <target state="translated">あなたのプラットフォームのドキュメント (例:man open(2))には、より詳細な情報が記述されているかもしれません。</target>
        </trans-unit>
        <trans-unit id="0ed68cc5e0e07f05d7f2db76c393e5fde36c6f1d" translate="yes" xml:space="preserve">
          <source>Your request is unauthorized.</source>
          <target state="translated">あなたのリクエストは許可されていません。</target>
        </trans-unit>
        <trans-unit id="1a272fd282089fe514817567377ca24b72d0625f" translate="yes" xml:space="preserve">
          <source>ZERO</source>
          <target state="translated">ZERO</target>
        </trans-unit>
        <trans-unit id="943d66e38025028feaf913027382d859a02e1382" translate="yes" xml:space="preserve">
          <source>ZERO_SAFE_LEVELS</source>
          <target state="translated">ZERO_SAFE_LEVELS</target>
        </trans-unit>
        <trans-unit id="3ba11baddb4774ae99e023db559fddb30a799c50" translate="yes" xml:space="preserve">
          <source>ZLIB_VERSION</source>
          <target state="translated">ZLIB_VERSION</target>
        </trans-unit>
        <trans-unit id="88664ebe5db28608dd748ac9ef11f8effaa44f80" translate="yes" xml:space="preserve">
          <source>ZStream</source>
          <target state="translated">ZStream</target>
        </trans-unit>
        <trans-unit id="bc23495246d45c405197a09f7e802ab0932bdd53" translate="yes" xml:space="preserve">
          <source>ZStream#adler</source>
          <target state="translated">ZStream#adler</target>
        </trans-unit>
        <trans-unit id="efacb125eb3aecb7373dfce350113ff0e167d34c" translate="yes" xml:space="preserve">
          <source>ZStream#avail_in</source>
          <target state="translated">ZStream#avail_in</target>
        </trans-unit>
        <trans-unit id="ce0b4c0216d6ae68a256ae7ae5cd8cedc0817935" translate="yes" xml:space="preserve">
          <source>ZStream#avail_out</source>
          <target state="translated">ZStream#avail_out</target>
        </trans-unit>
        <trans-unit id="ec186f7ddec6f4c20d0e8b265588e0102e6ffe81" translate="yes" xml:space="preserve">
          <source>ZStream#avail_out=</source>
          <target state="translated">ZStream#avail_out=</target>
        </trans-unit>
        <trans-unit id="798d0d39e515e8d40307d3ace908398945df43db" translate="yes" xml:space="preserve">
          <source>ZStream#close</source>
          <target state="translated">ZStream#close</target>
        </trans-unit>
        <trans-unit id="a95f1c91c5af669ec058a2a9f283cbfdccc5d7ec" translate="yes" xml:space="preserve">
          <source>ZStream#closed?</source>
          <target state="translated">ZStream#closed?</target>
        </trans-unit>
        <trans-unit id="64a3ef8749b3dcad51c540d250d67cf705807c85" translate="yes" xml:space="preserve">
          <source>ZStream#data_type</source>
          <target state="translated">ZStream#data_type</target>
        </trans-unit>
        <trans-unit id="73df97d3094de73cf821c2cd8f6fe2748d824575" translate="yes" xml:space="preserve">
          <source>ZStream#end</source>
          <target state="translated">ZStream#end</target>
        </trans-unit>
        <trans-unit id="25e71886d7782293f5fd8b3df5d555f1667e2a3e" translate="yes" xml:space="preserve">
          <source>ZStream#ended?</source>
          <target state="translated">ZStream#ended?</target>
        </trans-unit>
        <trans-unit id="bf399d45a2e94daaf1cda37663065db7bb7fe9a0" translate="yes" xml:space="preserve">
          <source>ZStream#finish</source>
          <target state="translated">ZStream#finish</target>
        </trans-unit>
        <trans-unit id="9e7a8ea71a3f41868be3687da686241d525d7917" translate="yes" xml:space="preserve">
          <source>ZStream#finished?</source>
          <target state="translated">ZStream#finished?</target>
        </trans-unit>
        <trans-unit id="732996e6867657c86cc6d994f23746ddfb5b1168" translate="yes" xml:space="preserve">
          <source>ZStream#flush_next_in</source>
          <target state="translated">ZStream#flush_next_in</target>
        </trans-unit>
        <trans-unit id="61b57ea6c89b443802fb6bf6415858cfb9925ad6" translate="yes" xml:space="preserve">
          <source>ZStream#flush_next_out</source>
          <target state="translated">ZStream#flush_next_out</target>
        </trans-unit>
        <trans-unit id="9477c4becc117aa7ceb23af90bb535cea0d255d6" translate="yes" xml:space="preserve">
          <source>ZStream#reset</source>
          <target state="translated">ZStream#reset</target>
        </trans-unit>
        <trans-unit id="1d3e8352862a620352ecc0a7fe9185724bbcce3f" translate="yes" xml:space="preserve">
          <source>ZStream#stream_end?</source>
          <target state="translated">ZStream#stream_end?</target>
        </trans-unit>
        <trans-unit id="4f8c22a162dde960c99fd4d8111340e386ed34d5" translate="yes" xml:space="preserve">
          <source>ZStream#total_in</source>
          <target state="translated">ZStream#total_in</target>
        </trans-unit>
        <trans-unit id="a8686e05afbe32e112d3c9ce0734c3c570c0af66" translate="yes" xml:space="preserve">
          <source>ZStream#total_out</source>
          <target state="translated">ZStream#total_out</target>
        </trans-unit>
        <trans-unit id="a3eec64d91a1578e2ed06323479635a5a24d962c" translate="yes" xml:space="preserve">
          <source>Zach Dennis</source>
          <target state="translated">ザック・デニス</target>
        </trans-unit>
        <trans-unit id="fe6ed4c6e9f51ed69609605bd307871d200860b0" translate="yes" xml:space="preserve">
          <source>Zero or more quotaroots that affect the quota on the specified mailbox.</source>
          <target state="translated">指定されたメールボックスのクォータに影響を与えるクォータロットを0個以上指定します。</target>
        </trans-unit>
        <trans-unit id="d9149ff25217025dfea4fa89a763131758a3dbaf" translate="yes" xml:space="preserve">
          <source>Zero when &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equivalent.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; が等しい場合はゼロ。</target>
        </trans-unit>
        <trans-unit id="3bf3f71c4d3d91d72b09100088bc05f6648939f4" translate="yes" xml:space="preserve">
          <source>ZeroDivisionError</source>
          <target state="translated">ZeroDivisionError</target>
        </trans-unit>
        <trans-unit id="11bb391f0b17e28b6022b1e54849a09b53bb2edb" translate="yes" xml:space="preserve">
          <source>Zlib</source>
          <target state="translated">Zlib</target>
        </trans-unit>
        <trans-unit id="9a633e53f6b670da16b63413f8be13e3a4cd6e56" translate="yes" xml:space="preserve">
          <source>Zlib::BEST_COMPRESSION</source>
          <target state="translated">Zlib::BEST_COMPRESSION</target>
        </trans-unit>
        <trans-unit id="27dd7603b486bcc16f56727da4d003c58cba6e42" translate="yes" xml:space="preserve">
          <source>Zlib::BEST_SPEED</source>
          <target state="translated">Zlib::BEST_SPEED</target>
        </trans-unit>
        <trans-unit id="eb3032be547535b5602d79492b5d0666d4535c70" translate="yes" xml:space="preserve">
          <source>Zlib::BufError</source>
          <target state="translated">Zlib::BufError</target>
        </trans-unit>
        <trans-unit id="46e345ac19dfeea83936627a5fdebc587a07984d" translate="yes" xml:space="preserve">
          <source>Zlib::DEFAULT_COMPRESSION</source>
          <target state="translated">Zlib::DEFAULT_COMPRESSION</target>
        </trans-unit>
        <trans-unit id="b693b6737ec5226be51722e56b06d62367213f38" translate="yes" xml:space="preserve">
          <source>Zlib::DEFAULT_STRATEGY</source>
          <target state="translated">Zlib::DEFAULT_STRATEGY</target>
        </trans-unit>
        <trans-unit id="d81b49a652a4c6266f4ddd9c07593d229f17f889" translate="yes" xml:space="preserve">
          <source>Zlib::DEF_MEM_LEVEL</source>
          <target state="translated">Zlib::DEF_MEM_LEVEL</target>
        </trans-unit>
        <trans-unit id="dd547c08fb48ef143da2f6ec44e1ea9e2c8dcf2f" translate="yes" xml:space="preserve">
          <source>Zlib::DataError</source>
          <target state="translated">Zlib::DataError</target>
        </trans-unit>
        <trans-unit id="45d8a5fe42df8c517675093f341445a20f3bff05" translate="yes" xml:space="preserve">
          <source>Zlib::Deflate</source>
          <target state="translated">Zlib::Deflate</target>
        </trans-unit>
        <trans-unit id="94ca3b14c5a89c79a35e60bec37d1a6dfa603c35" translate="yes" xml:space="preserve">
          <source>Zlib::Deflate.deflate(string[, level])</source>
          <target state="translated">Zlib::Deflate.deflate(string[,level])</target>
        </trans-unit>
        <trans-unit id="4db924a2a49ba225d4ad8df92a2ec14f40a0cb01" translate="yes" xml:space="preserve">
          <source>Zlib::Deflate.new(level=DEFAULT_COMPRESSION, window_bits=MAX_WBITS, mem_level=DEF_MEM_LEVEL, strategy=DEFAULT_STRATEGY) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Zlib :: Deflate.new（level = DEFAULT_COMPRESSION、window_bits = MAX_WBITS、mem_level = DEF_MEM_LEVEL、strategy = DEFAULT_STRATEGY）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3264249d2ef7925fee4867250a0fb5dc15d9b46" translate="yes" xml:space="preserve">
          <source>Zlib::Error</source>
          <target state="translated">Zlib::Error</target>
        </trans-unit>
        <trans-unit id="67d8f5efb995a22e2f2e764df5acfc62d9e75daa" translate="yes" xml:space="preserve">
          <source>Zlib::FILTERED</source>
          <target state="translated">Zlib::FILTERED</target>
        </trans-unit>
        <trans-unit id="f4b09d1fd817f35292da6240c18a5cf9a53c7ada" translate="yes" xml:space="preserve">
          <source>Zlib::FINISH</source>
          <target state="translated">Zlib::FINISH</target>
        </trans-unit>
        <trans-unit id="1e4518e4b8cece34c47c9eb8342bb62ee89acf8b" translate="yes" xml:space="preserve">
          <source>Zlib::FIXED</source>
          <target state="translated">Zlib::FIXED</target>
        </trans-unit>
        <trans-unit id="818974d7d38ce14e1e0c540d109edc0e47e88473" translate="yes" xml:space="preserve">
          <source>Zlib::FULL_FLUSH</source>
          <target state="translated">Zlib::FULL_FLUSH</target>
        </trans-unit>
        <trans-unit id="c914f97e99560022ee19316f7a36e037a6bc6fc4" translate="yes" xml:space="preserve">
          <source>Zlib::GzipFile</source>
          <target state="translated">Zlib::GzipFile</target>
        </trans-unit>
        <trans-unit id="49cc3d7286e050192e038c232883d84f0fcc23a9" translate="yes" xml:space="preserve">
          <source>Zlib::GzipFile::CRCError</source>
          <target state="translated">Zlib::GzipFile::CRCError</target>
        </trans-unit>
        <trans-unit id="8163af64796f906ed6b32e5977102cb0d645738b" translate="yes" xml:space="preserve">
          <source>Zlib::GzipFile::Error</source>
          <target state="translated">Zlib::GzipFile::Error</target>
        </trans-unit>
        <trans-unit id="e16006471f67ed63d5c607d4158e0f1aebe9b90a" translate="yes" xml:space="preserve">
          <source>Zlib::GzipFile::LengthError</source>
          <target state="translated">Zlib::GzipFile::LengthError</target>
        </trans-unit>
        <trans-unit id="358bcae11d107f2bf0b90a979f7ec100968ed707" translate="yes" xml:space="preserve">
          <source>Zlib::GzipFile::NoFooter</source>
          <target state="translated">Zlib::GzipFile::NoFooter</target>
        </trans-unit>
        <trans-unit id="922ef40830b54e60d8de49c59faf26c47329ce28" translate="yes" xml:space="preserve">
          <source>Zlib::GzipReader</source>
          <target state="translated">Zlib::GzipReader</target>
        </trans-unit>
        <trans-unit id="7c27e52290989a4e1d12c4d7c92a413d26f28524" translate="yes" xml:space="preserve">
          <source>Zlib::GzipReader.new(io, options = {}) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Zlib :: GzipReader.new（io、options = {}）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0443e3f9968d718fbf29671344817deff0ff733f" translate="yes" xml:space="preserve">
          <source>Zlib::GzipReader.open(filename) {|gz| ... } &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Zlib :: GzipReader.open（filename）{| gz | ...} &lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ad863a6bbdb65ecb38872698fab99329d2d7dd9" translate="yes" xml:space="preserve">
          <source>Zlib::GzipReader.wrap(io, ...) { |gz| ... } &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Zlib :: GzipReader.wrap（io、...）{| gz | ...} &lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e56bdc8a767b85872e7dff93a9b6f73ea61b435" translate="yes" xml:space="preserve">
          <source>Zlib::GzipReader.zcat(io, options = {}) &amp;rarr; string</source>
          <target state="translated">Zlib :: GzipReader.zcat（io、options = {}）&amp;rarr;文字列</target>
        </trans-unit>
        <trans-unit id="e1c536a57e6a0d96416ffed70ac00a53ef91547c" translate="yes" xml:space="preserve">
          <source>Zlib::GzipReader.zcat(io, options = {}, &amp;amp;block) &amp;rarr; nil &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Zlib :: GzipReader.zcat（io、options = {}、＆block）&amp;rarr;nil&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2a557ccdc4bdae92a0778870c0adfd48b8792ac" translate="yes" xml:space="preserve">
          <source>Zlib::GzipWriter</source>
          <target state="translated">Zlib::GzipWriter</target>
        </trans-unit>
        <trans-unit id="1689168c54c02947a7a07fdee6f59bb789f7ee62" translate="yes" xml:space="preserve">
          <source>Zlib::GzipWriter.new(io, level = nil, strategy = nil, options = {}) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Zlib :: GzipWriter.new（io、level = nil、strategy = nil、options = {}）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4acf3d758b7bab87cf1abd27ee2f7b91a6b05a56" translate="yes" xml:space="preserve">
          <source>Zlib::GzipWriter.open(filename, level=nil, strategy=nil) { |gz| ... } &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Zlib :: GzipWriter.open（filename、level = nil、strategy = nil）{| gz | ...} &lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0192b7a46b57928f1993291a10665a43320f696c" translate="yes" xml:space="preserve">
          <source>Zlib::GzipWriter.wrap(io, ...) { |gz| ... }</source>
          <target state="translated">Zlib::GzipWriter.wrap(io,....){|gz| ...}</target>
        </trans-unit>
        <trans-unit id="8e689741bdd85c448101ea2694e64f5132baef13" translate="yes" xml:space="preserve">
          <source>Zlib::HUFFMAN_ONLY</source>
          <target state="translated">Zlib::HUFFMAN_ONLY</target>
        </trans-unit>
        <trans-unit id="0bb729e03a5dd5a9b46b0d86272ae19b83861f73" translate="yes" xml:space="preserve">
          <source>Zlib::Inflate</source>
          <target state="translated">Zlib::Inflate</target>
        </trans-unit>
        <trans-unit id="ed2176a001769d130724447094b2fbcc8a772c39" translate="yes" xml:space="preserve">
          <source>Zlib::Inflate.inflate(string)</source>
          <target state="translated">Zlib::Inflate.inflate(string)</target>
        </trans-unit>
        <trans-unit id="0aeb12aed2ce68e82e474fd1a7e8bac83e37c3cf" translate="yes" xml:space="preserve">
          <source>Zlib::Inflate.new(window_bits = Zlib::MAX_WBITS) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Zlib :: Inflate.new（window_bits = Zlib :: MAX_WBITS）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7302481fb2cd2ab8e3111e515ca3423e212e1eb1" translate="yes" xml:space="preserve">
          <source>Zlib::MAX_MEM_LEVEL</source>
          <target state="translated">Zlib::MAX_MEM_LEVEL</target>
        </trans-unit>
        <trans-unit id="b126e392ca08c53f9cfa72b8782eeda7bd2c3518" translate="yes" xml:space="preserve">
          <source>Zlib::MemError</source>
          <target state="translated">Zlib::MemError</target>
        </trans-unit>
        <trans-unit id="74043e0256b47f3616b159ae02a877e6cc29aac2" translate="yes" xml:space="preserve">
          <source>Zlib::NO_COMPRESSION</source>
          <target state="translated">Zlib::NO_COMPRESSION</target>
        </trans-unit>
        <trans-unit id="47ac95d9368a642e543249546558bc975467661e" translate="yes" xml:space="preserve">
          <source>Zlib::NO_FLUSH</source>
          <target state="translated">Zlib::NO_FLUSH</target>
        </trans-unit>
        <trans-unit id="a1c4b9170834134eb1d28093aa055d9c16c7c36e" translate="yes" xml:space="preserve">
          <source>Zlib::NeedDict</source>
          <target state="translated">Zlib::NeedDict</target>
        </trans-unit>
        <trans-unit id="387a6de3876a30d99d09aa179a97109467153727" translate="yes" xml:space="preserve">
          <source>Zlib::RLE</source>
          <target state="translated">Zlib::RLE</target>
        </trans-unit>
        <trans-unit id="60c7ed0c7407cb82f23cb2a32204766cf7a077a1" translate="yes" xml:space="preserve">
          <source>Zlib::SYNC_FLUSH</source>
          <target state="translated">Zlib::SYNC_FLUSH</target>
        </trans-unit>
        <trans-unit id="8ea094f75009529312ed2fafaf7b6c547ea87811" translate="yes" xml:space="preserve">
          <source>Zlib::StreamEnd</source>
          <target state="translated">Zlib::StreamEnd</target>
        </trans-unit>
        <trans-unit id="ef72642eca3b10edb2378daf111ea57141ce55ce" translate="yes" xml:space="preserve">
          <source>Zlib::StreamError</source>
          <target state="translated">Zlib::StreamError</target>
        </trans-unit>
        <trans-unit id="2930be90340516b0037ee47f1e045add5bfdecb7" translate="yes" xml:space="preserve">
          <source>Zlib::VersionError</source>
          <target state="translated">Zlib::VersionError</target>
        </trans-unit>
        <trans-unit id="301767d95eb6c1b131fa23f716221f79405dc897" translate="yes" xml:space="preserve">
          <source>Zlib::ZStream</source>
          <target state="translated">Zlib::ZStream</target>
        </trans-unit>
        <trans-unit id="b57f3638a35e449ec72ba367a59dfaa08fef96ba" translate="yes" xml:space="preserve">
          <source>Zlib::crc32</source>
          <target state="translated">Zlib::crc32</target>
        </trans-unit>
        <trans-unit id="faa4b57163ba6db17b6b2ca2b084421698bf0e23" translate="yes" xml:space="preserve">
          <source>Zlib::gzip</source>
          <target state="translated">Zlib::gzip</target>
        </trans-unit>
        <trans-unit id="73ffa11b12c9373bff8d9de82a1dddf99d196ee2" translate="yes" xml:space="preserve">
          <source>Zlib:Inflate is the class for decompressing compressed data. Unlike &lt;a href=&quot;deflate&quot;&gt;&lt;code&gt;Zlib::Deflate&lt;/code&gt;&lt;/a&gt;, an instance of this class is not able to duplicate (clone, dup) itself.</source>
          <target state="translated">Zlib：Inflateは圧縮データを解凍するためのクラスです。&lt;a href=&quot;deflate&quot;&gt; &lt;code&gt;Zlib::Deflate&lt;/code&gt; &lt;/a&gt;とは異なり、このクラスのインスタンスはそれ自体を複製（複製、複製）できません。</target>
        </trans-unit>
        <trans-unit id="1e5c2f367f02e47a8c160cda1cd9d91decbac441" translate="yes" xml:space="preserve">
          <source>[</source>
          <target state="translated">[</target>
        </trans-unit>
        <trans-unit id="73ce0cdde75da5b92369247507a159295885d88a" translate="yes" xml:space="preserve">
          <source>[:child, :out] can be used to merge stderr into stdout in &lt;a href=&quot;io#method-c-popen&quot;&gt;&lt;code&gt;IO.popen&lt;/code&gt;&lt;/a&gt;. In this case, &lt;a href=&quot;io#method-c-popen&quot;&gt;&lt;code&gt;IO.popen&lt;/code&gt;&lt;/a&gt; redirects stdout to a pipe in the child process and [:child, :out] refers the redirected stdout.</source>
          <target state="translated">[：child、：out]を使用して、&lt;a href=&quot;io#method-c-popen&quot;&gt; &lt;code&gt;IO.popen&lt;/code&gt; で&lt;/a&gt; stderrをstdoutにマージできます。この場合、&lt;a href=&quot;io#method-c-popen&quot;&gt; &lt;code&gt;IO.popen&lt;/code&gt; は&lt;/a&gt; stdoutを子プロセスのパイプにリダイレクトし、[：child、：out]はリダイレクトされたstdoutを参照します。</target>
        </trans-unit>
        <trans-unit id="c21e7f4cd1f377c72d5036885bc283102b1bef2d" translate="yes" xml:space="preserve">
          <source>[IMAP]</source>
          <target state="translated">[IMAP]</target>
        </trans-unit>
        <trans-unit id="9b2c3955abffc31243f3f32471bdd3db7a5e135b" translate="yes" xml:space="preserve">
          <source>[LANGUAGE-TAGS]</source>
          <target state="translated">[LANGUAGE-TAGS]</target>
        </trans-unit>
        <trans-unit id="7d978f5c04154479ccb2f68cf5067af24d4639b8" translate="yes" xml:space="preserve">
          <source>[MD5]</source>
          <target state="translated">[MD5]</target>
        </trans-unit>
        <trans-unit id="f5da7a00af59e2718ef54afe40b3bbbaa59a1eb4" translate="yes" xml:space="preserve">
          <source>[MIME-IMB]</source>
          <target state="translated">[MIME-IMB]</target>
        </trans-unit>
        <trans-unit id="b2d17d699fd8c205455bfd260b7808098e60c474" translate="yes" xml:space="preserve">
          <source>[OSSL]</source>
          <target state="translated">[OSSL]</target>
        </trans-unit>
        <trans-unit id="aa8a9158a50c22989fb1ed03ecd867502c8a5c9e" translate="yes" xml:space="preserve">
          <source>[RFC-2086]</source>
          <target state="translated">[RFC-2086]</target>
        </trans-unit>
        <trans-unit id="cae3153044f07426a375cae4b5c270510a59a872" translate="yes" xml:space="preserve">
          <source>[RFC-2087]</source>
          <target state="translated">[RFC-2087]</target>
        </trans-unit>
        <trans-unit id="e10d3675a65fa74f930a7b8433b3cb80d3594f76" translate="yes" xml:space="preserve">
          <source>[RFC-2195]</source>
          <target state="translated">[RFC-2195]</target>
        </trans-unit>
        <trans-unit id="946f9b14e317ef686e4101d2c7a8503e75b4992b" translate="yes" xml:space="preserve">
          <source>[RFC-822]</source>
          <target state="translated">[RFC-822]</target>
        </trans-unit>
        <trans-unit id="8ac3c69e36ba6312ea50d806d77934a5b3b1235c" translate="yes" xml:space="preserve">
          <source>[RSSL]</source>
          <target state="translated">[RSSL]</target>
        </trans-unit>
        <trans-unit id="06860507fe0dc86fbd637d928bff489072e3ca63" translate="yes" xml:space="preserve">
          <source>[SORT-THREAD-EXT]</source>
          <target state="translated">[SORT-THREAD-EXT]</target>
        </trans-unit>
        <trans-unit id="38cbd79a443462b2fda1783effb62239f9b36470" translate="yes" xml:space="preserve">
          <source>[UTF7]</source>
          <target state="translated">[UTF7]</target>
        </trans-unit>
        <trans-unit id="55a8ee9ba97d5caffae8e3a07ef702a51ff5a08d" translate="yes" xml:space="preserve">
          <source>[](*args)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（* args）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29303ab88fc0727311e17d736953d81f2c5e5a2f" translate="yes" xml:space="preserve">
          <source>[](*args, base: nil, sort: true)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（* args、base：nil、sort：true）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e79c25a918703dec7d21fcdd12f8108fa95d60e" translate="yes" xml:space="preserve">
          <source>[](*array)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（* array）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2338238ec7f5e477435ee59286a3f66a5ce462af" translate="yes" xml:space="preserve">
          <source>[](*ary)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（* ary）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="366758a6211bd762222f5cd0387b57721c9bfba8" translate="yes" xml:space="preserve">
          <source>[](*rows)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（* rows）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7cc96ab712a13bb7b942aed41cc3f0255f6a5d82" translate="yes" xml:space="preserve">
          <source>[](header_or_index, minimum_index = 0)</source>
          <target state="translated">[]（header_or_index、minimum_index = 0）</target>
        </trans-unit>
        <trans-unit id="c69335727d0a49c4f321a8a513dfe6000e49a7ba" translate="yes" xml:space="preserve">
          <source>[](i, j)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（i、j）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e1a7c34a4fb416d3768ee8a067bfffbfd423785" translate="yes" xml:space="preserve">
          <source>[](index)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（index）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59a5f85cca171c6e73da4c56c3dff4054ffbfd94" translate="yes" xml:space="preserve">
          <source>[](index_or_header)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（index_or_header）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="deddca9f22e39b78246c84667be501234206e907" translate="yes" xml:space="preserve">
          <source>[](k)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（k）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ed69e20ea8fb3aecad7f596e0eef182e823cec4" translate="yes" xml:space="preserve">
          <source>[](key)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（key）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65a8c89c37dc2924ed614ad9ab7b695876289cba" translate="yes" xml:space="preserve">
          <source>[](n) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（n）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6dfdf91051640d7d20de4f25086a84b49dc2b43" translate="yes" xml:space="preserve">
          <source>[](name)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（name）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f70f82e386e5e4569c827ccaec7aa89583ca98b5" translate="yes" xml:space="preserve">
          <source>[](object, opts = {})&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（object、opts = {}）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e196ff6d5c478e54aef52413efc2d8971aee4a5a" translate="yes" xml:space="preserve">
          <source>[](p1)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（p1）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5df6774d20fc992d7fcc72728fff9a7e499a6c0" translate="yes" xml:space="preserve">
          <source>[](query, base = nil)</source>
          <target state="translated">[]（クエリ、ベース= nil）</target>
        </trans-unit>
        <trans-unit id="c0eea63180927e952242d4a9d4ef3a81b1efe0b1" translate="yes" xml:space="preserve">
          <source>[](section)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（セクション）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bba08cda4cfe65390d7e558daf991ad7d1f6e1f" translate="yes" xml:space="preserve">
          <source>[](sym)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（sym）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="508495af9864266128502f51eb44c0864d206020" translate="yes" xml:space="preserve">
          <source>[](symbol)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[]（記号）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="516691eae30831d22da03f831bcef0c7a02a3668" translate="yes" xml:space="preserve">
          <source>[]=( header, offset, value )</source>
          <target state="translated">[] =（ヘッダー、オフセット、値）</target>
        </trans-unit>
        <trans-unit id="09a1937b44ac5f0eaf1adfb0e978ef35d8dc7497" translate="yes" xml:space="preserve">
          <source>[]=( header, value ) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（header、value）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc8e400aae4f5dffff77f249154f3a88deef5e92" translate="yes" xml:space="preserve">
          <source>[]=( index, value )</source>
          <target state="translated">[] =（インデックス、値）</target>
        </trans-unit>
        <trans-unit id="86d06ab26d147c9c56f90bc5eda431d3e0418cd9" translate="yes" xml:space="preserve">
          <source>[]=(*args)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（* args）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47df0c9a45c86e5e9650a7ee06a77db63e9f25bc" translate="yes" xml:space="preserve">
          <source>[]=(index, value)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（インデックス、値）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4a90f40fafcc8914c646c11506fb221ced9e820" translate="yes" xml:space="preserve">
          <source>[]=(index_or_header, value)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（index_or_header、value）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e093e6de55181d2f07ee9f61082f4625c970ff5b" translate="yes" xml:space="preserve">
          <source>[]=(key, v)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（key、v）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebbc2bea1b8210fea54a0a586ccf40b048ea2222" translate="yes" xml:space="preserve">
          <source>[]=(key, val)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（key、val）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d4ce19fdf0418efcf7544cd64322a651fe40638" translate="yes" xml:space="preserve">
          <source>[]=(key, value)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（key、value）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ec23bf0f85f6234e3b347946316e1b712604f62" translate="yes" xml:space="preserve">
          <source>[]=(name, val)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（name、val）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d97850469bd3cb7ce776fad29aed1cef199b4f2" translate="yes" xml:space="preserve">
          <source>[]=(name, value)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（名前、値）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="167f4bab632a76c8703986cc637e3e22271cdbb4" translate="yes" xml:space="preserve">
          <source>[]=(p1, p2)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（p1、p2）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8ed69e3f5cb8411b99bb4947dc1687b35967f7a" translate="yes" xml:space="preserve">
          <source>[]=(section, pairs)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（セクション、ペア）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="822c08dd67e50922df6be96b87e86ddd09679e85" translate="yes" xml:space="preserve">
          <source>[]=(sym, val)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">[] =（sym、val）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5648e8d5367d2b96eafecb3972cf7c750fc1d618" translate="yes" xml:space="preserve">
          <source>^(enum)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">^（列挙）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85ab7f2c678d52a54cf56e38be681dafd766202a" translate="yes" xml:space="preserve">
          <source>__ENCODING__</source>
          <target state="translated">__ENCODING__</target>
        </trans-unit>
        <trans-unit id="9d5d8995523b8b8951428baa81ea663ff0bd2c77" translate="yes" xml:space="preserve">
          <source>__FILE__</source>
          <target state="translated">__FILE__</target>
        </trans-unit>
        <trans-unit id="a51b95694c81c92580bff6f580f8e200ecf86661" translate="yes" xml:space="preserve">
          <source>__LINE__</source>
          <target state="translated">__LINE__</target>
        </trans-unit>
        <trans-unit id="d66b1d56d7e202ade5ea50d8dd4822cd33af328f" translate="yes" xml:space="preserve">
          <source>__callee__ &amp;rarr; symbol &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__callee__&amp;rarr;シンボル&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30105448fa0f21fd4d58a790b6705721682617aa" translate="yes" xml:space="preserve">
          <source>__dependencies()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__dependencies（）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f943398bd4d167ffba4f8dee329e67accf654c21" translate="yes" xml:space="preserve">
          <source>__dir__ &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__dir__&amp;rarr;文字列&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62dd286f05ef375052eaccd7049b091412b49077" translate="yes" xml:space="preserve">
          <source>__drbref()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__drbref（）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c49d2deae48ca0dbf3fa728e661770e0b93c68e" translate="yes" xml:space="preserve">
          <source>__drburi()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__drburi（）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8acf39c64bc8b4b9aaa5a3d1d5181fbdc4d1bb8" translate="yes" xml:space="preserve">
          <source>__getobj__() { || ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__getobj __（）{|| ...} &lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d436bb679c1360066ba35238a565bd73bac67351" translate="yes" xml:space="preserve">
          <source>__getobj__()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__getobj __（）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dce86908c605288bfa7568c64ba2adb9b240ccf7" translate="yes" xml:space="preserve">
          <source>__id__ &amp;rarr; integer &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__id__&amp;rarr;integer &lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2c663d08e0a3a8553119f3ed139db6132f68221" translate="yes" xml:space="preserve">
          <source>__id__(*args)</source>
          <target state="translated">__id__(*args)</target>
        </trans-unit>
        <trans-unit id="6966fcf3e6ac7362cbd30f7224f34ebe01d42388" translate="yes" xml:space="preserve">
          <source>__materialize__()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__materialize __（）&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="361b145ee23492550998eaad3e21203f5bcbbff6" translate="yes" xml:space="preserve">
          <source>__method__ &amp;rarr; symbol &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__method__&amp;rarr;シンボル&lt;a&gt;ソースを表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2c7b0dc2fef0a0cb2107f96bcb2eca0e8c2c64e" translate="yes" xml:space="preserve">
          <source>__platform[R]</source>
          <target state="translated">__platform[R]</target>
        </trans-unit>
        <trans-unit id="78c4fd20fdd45e9b26e0ec20130e6ae2660e039b" translate="yes" xml:space="preserve">
          <source>__raise__()</source>
          <target state="translated">__raise__()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
