<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="2e23abc3ee3c262a49b42bfda14d6aa71276ade7" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.peerIdentity' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.peerIdentity」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="22dabcbb6797b1b9078847ee878fa46f6df64124" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.pendingLocalDescription' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様での「RTCPeerConnection.pendingLocalDescription」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dba848a0d091c392a154900fa3fcfbffda75f654" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.pendingRemoteDescription' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.pendingRemoteDescription」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="16d4f1466a16f413d83584388c1f379fd4f379d9" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.remoteDescription' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.remoteDescription」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d45713089587a55bbf58cb9be683668057934ec7" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.removeStream()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.removeStream（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="abfda2c9d905b34260f65d96b8a35036b78ef43c" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.removeTrack()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.removeTrack（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="032ca2e578720947e6087f267d11361bd511e8f9" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.sctp' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.sctp」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="87b5d64d1b70886e8c77ad4dbb8304cce2838a07" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.setIdentityProvider()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.setIdentityProvider（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e3da3700132e3dfe31ab7ea988475522af60054d" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.setLocalDescription()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.setLocalDescription（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c60abb13143b39823606511a70252aa2c0092041" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.setRemoteDescription()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.setRemoteDescription（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dfda964f989dbd4d56d4e51edf34eac60192ec32" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnection.signalingState' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnection.signalingState」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="98d47524808722fc6f9de2a2cdd531f334455c0f" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnectionIceEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnectionIceEvent」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0bbb42c23f393374d6634d829941e46a8d036faa" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnectionIceEvent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnectionIceEvent（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="026fa7a9b2623be85056c9d7275d90c3c9964fd9" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCPeerConnectionIceEvent.candidate' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCPeerConnectionIceEvent.candidate」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c83eb142dbfb3f7695b6b63837164a672b7b24bd" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpContributingSource' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様での「RTCRtpContributingSource」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0a8dbfd1abe8537666993d034c729f06881d1d8e" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpReceiver' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpReceiver」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3723243571ae418f8398f5ebe97072b0b17311b5" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpReceiver.getStats()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpReceiver.getStats（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c87f88c4569c1441a0b3244394b138935249abe0" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpSender' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpSender」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2bd407f12211c0b9e4b31d625726a77c10766772" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpSender.dtmf' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpSender.dtmf」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="21e6ddba55ace7f29155f34da1092cafcb4ad3d2" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpSender.getStats()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpSender.getStats（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3288961714e475a0cdf61d676f87154cb18b56fa" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpSender.replaceTrack()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様での「RTCRtpSender.replaceTrack（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="08853a45b1c4fac8f7ac2be47eb428951e9ac73a" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpSynchronizationSource' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpSynchronizationSource」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="613ebc21c4206498e78a28e44bbb3f3423ca4933" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c01bc7c31b90101c688dbfd31dcd06b7103758a4" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver.currentDirection' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver.currentDirection」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dfb1314c71c1a678d53f6be9c8dde56313523f4a" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver.direction' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver.direction」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="933e6c573ae094944651a33e47c18a144c5e6a96" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver.mid' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver.mid」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="770f0bd2b1929aea2c59d1d8f58c6c6ef286008d" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver.receiver' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver.receiver」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="569b260c4888fd54834c001fa1e235e224c7f890" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver.sender' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver.sender」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1d63922f65b88f403778be498318dbe38820f9d1" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver.setCodecPreferences()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver.setCodecPreferences（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="827fb5dde65bb53442464515b3575b0ca33b0408" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver.stop()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver.stop（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="61ff405a02c4e0bd06a646f4bf2e9bbdff3b9fc1" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiver.stopped' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiver.stopped」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0adce9ad491e896e57e9b66e4be30251988849cc" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiverDirection' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiverDirection」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="989fa0072634e94d012c1384278920952da0ce27" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpTransceiverInit' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCRtpTransceiverInit」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="19ec75c0c9481e4de9ef76585e55427ad942edd8" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCSctpTransport' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCSctpTransport」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5a9ecb1ae931febb79e608d72ed7ee51424dae84" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCSessionDescription' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCSessionDescription」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ebbf0049efb8786d9d1fa65785bddab750b517ca" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCSessionDescription()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCSessionDescription（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="030201346d7ae32cf7b7a9c665b597bd43e36a7b" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCSessionDescription.sdp' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCSessionDescription.sdp」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9f59a765bfe4534710f46b03da17af1165662ddb" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCSessionDescription.type' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCSessionDescription.type」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="87afdbc0e5dd567e25c61aaced6faf2f9c8e8e4b" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCSessionDescription: toJSON()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCSessionDescription：toJSON（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0815cda888ad51defa599056a368c54e91ee2589" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCStats' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCStats」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ea3b912b2d1bdd01a46f3347351d40e5757b64bd" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCStats.id' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCStats.id」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e77417d47c2981e0a032d519a09f3ffc00bf3d2e" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCStats.timestamp' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCStats.timestamp」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d2c34098773ccceee3f27ab52490d9983f00651b" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCStats.type' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCStats.type」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4712d15c1f418ae99573da0bc730b0c463cafd46" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCStatsReport' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCStatsReport」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="312e71a764290f38f29eb839d0f03b9920994f25" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEvent」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2a461f9f1b0edda575b3df6d3cef9fa9e07f5a43" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEvent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEvent（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bfedb771dbd7efb9afb26cb60e235a8b4fed4f0b" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEvent.receiver' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEvent.receiver」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5306c6d572ebf1d8a96f79251c8af35410a7b885" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEvent.streams' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEvent.streams」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3558bd19ffdad824b837810d00722d12a133d44d" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEvent.track' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEvent.track」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="24c7bef15774772494ba264fd35a0d19df2ffece" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEvent.transceiver' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEvent.transceiver」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2aea0f5c0baa764c4af990aac3dc07d17c8e2dda" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEventInit' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEventInit」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8a74587c7dfa976a48fe870b0058f0cb391bae9b" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEventInit.receiver' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEventInit.receiver」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6392b540311321e43e7aa1ebef709c84bbb5dbf8" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEventInit.streams' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEventInit.streams」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d6a75a82dcb79a778605b5698a701437dc063aba" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'RTCTrackEventInit.track' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「RTCTrackEventInit.track」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c993243595f6a1ad81e901666240b38ef6b410b4" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'audioLevel' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「audioLevel」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="893f2ce0da1b2b93745f9e88e144138ebeec7eb8" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'createAnswer()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「createAnswer（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9d2a64b10dccd20d16c9e66e7e9d2b67c7b75d35" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'createDataChannel()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「createDataChannel（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c200637b90a5e83f1cbaa3db3bc3e60f59251e02" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'createOffer()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「createOffer（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b10ca6e98a7d276ca11c57ab8578cddf5f777ae" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'generateCertificate()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「generateCertificate（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6c31f69d452a7b5bffc147bb57f72c74589eb208" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'getConfiguration()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「getConfiguration（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="98076190dc7324fa5fba30113f8a0be0ddfaafc7" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'getContributingSources()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「getContributingSources（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="97ece2e32a747c92c02ef6a62ebc07baf08b59e1" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'getParameters()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「getParameters（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="aa605b391ca7b82d691a49c8b444af26c37b04f0" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'getSynchronizationSources()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「getSynchronizationSources（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2b823d4fe6e60e53a410c53b759b6f55b3865151" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'ontonechange' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「ontonechange」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5293f3f1535b8a517a29ff44ad3f28c484f4f031" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'setConfiguration()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「setConfiguration（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cd693914dab4b2310aed3a7851376f640aed0886" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'setParameters()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「setParameters（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cfeffb6714e251cd4a5b44350246a6d83b9e363e" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'source' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「ソース」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b2582ff4717898ab41725b998d3de656ac1cdee1" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'timestamp' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様での「タイムスタンプ」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d3c4c8763bc0971c79c0dcc370c205ce86a97d2e" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'track' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザ間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「トラック」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c36852ff96a6dec6cbceb91b473bd27d0f8cc1a8" translate="yes" xml:space="preserve">
          <source>WebRTC 1.0: Real-time Communication Between Browsers&lt;br/&gt;&lt;small&gt;The definition of 'voiceActivityFlag' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebRTC 1.0：ブラウザー間のリアルタイム通信&lt;br/&gt;&lt;small&gt;その仕様における「voiceActivityFlag」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f8358ae745f7d57210c46c0b98f65c455f6a2e95" translate="yes" xml:space="preserve">
          <source>WebRTC API</source>
          <target state="translated">ウェブアールティーシーエーピーアイ</target>
        </trans-unit>
        <trans-unit id="78a3d75e9cf522cd2a40689c70e908d56b5b6224" translate="yes" xml:space="preserve">
          <source>WebRTC API: Connectivity</source>
          <target state="translated">WebRTC API。接続性</target>
        </trans-unit>
        <trans-unit id="facc31e0f4a74710c2ea9bff936c7d8d25a99b2d" translate="yes" xml:space="preserve">
          <source>WebRTC API: Intro to RTP</source>
          <target state="translated">WebRTC API。RTP入門</target>
        </trans-unit>
        <trans-unit id="8b1761208a889c1424116a2507892f4855137bcc" translate="yes" xml:space="preserve">
          <source>WebRTC API: Protocols</source>
          <target state="translated">WebRTC API:プロトコル</target>
        </trans-unit>
        <trans-unit id="5075fbb85fae0280b4c6d742fb222272ddbf5aae" translate="yes" xml:space="preserve">
          <source>WebRTC API: Session lifetime</source>
          <target state="translated">WebRTC API。セッションの有効期限</target>
        </trans-unit>
        <trans-unit id="86d7955221150739591f0e2b89e16c8515a0d7a8" translate="yes" xml:space="preserve">
          <source>WebRTC API: Signaling and video calling</source>
          <target state="translated">WebRTC API。シグナリングとビデオ通話</target>
        </trans-unit>
        <trans-unit id="9ad738e0cdeaf59b5157919cd5ae285a02f7d14f" translate="yes" xml:space="preserve">
          <source>WebRTC API: Simple RTCDataChannel sample</source>
          <target state="translated">WebRTC APIです。簡易RTCDataChannelサンプル</target>
        </trans-unit>
        <trans-unit id="3d862bebd2c63fecd43f008ecbf7751e2b0c9c71" translate="yes" xml:space="preserve">
          <source>WebRTC API: Taking still photos</source>
          <target state="translated">WebRTC API。静止画の撮影</target>
        </trans-unit>
        <trans-unit id="58d911147b1d95f278fa31b4945f00703fb91072" translate="yes" xml:space="preserve">
          <source>WebRTC API: Using DTMF</source>
          <target state="translated">WebRTC API。DTMFの使用</target>
        </trans-unit>
        <trans-unit id="9981036ae8bc1f01b29b54a1534a088be3de80ef" translate="yes" xml:space="preserve">
          <source>WebRTC API: Using data channels</source>
          <target state="translated">WebRTC API。データチャネルの使用</target>
        </trans-unit>
        <trans-unit id="ecbff5a1529e8f88bbda45f8a0ff2e077e6a712f" translate="yes" xml:space="preserve">
          <source>WebRTC API: adapter.js</source>
          <target state="translated">WebRTC API:adapter.js</target>
        </trans-unit>
        <trans-unit id="4c7f3297fc78c69c75acf43313c735383c75e179" translate="yes" xml:space="preserve">
          <source>WebRTC architecture overview</source>
          <target state="translated">WebRTCアーキテクチャの概要</target>
        </trans-unit>
        <trans-unit id="6bc2aa86a2f80a3477760ed0642097f9ab216cfd" translate="yes" xml:space="preserve">
          <source>WebRTC concepts and usage</source>
          <target state="translated">WebRTCの概念と使い方</target>
        </trans-unit>
        <trans-unit id="0756d6a679b21d5362598f4fe045f53c269d37c5" translate="yes" xml:space="preserve">
          <source>WebRTC connectivity</source>
          <target state="translated">ウェブアールティーシー接続性</target>
        </trans-unit>
        <trans-unit id="3a186c33361f55c632b711ad2904fa8ddfba8206" translate="yes" xml:space="preserve">
          <source>WebRTC consists of several interrelated APIs and protocols which work together to achieve this. The documentation you'll find here will help you understand the fundamentals of WebRTC, how to set up and use both data and media connections, and more.</source>
          <target state="translated">WebRTC は、相互に関連するいくつかの API とプロトコルで構成されています。ここで紹介するドキュメントは、WebRTC の基礎、データ接続とメディア接続の設定と使用方法などを理解するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="04e80e24c439a580332f7ddf990f5a284eac9bb5" translate="yes" xml:space="preserve">
          <source>WebRTC data channels (see &lt;a href=&quot;rtcdatachannel/onmessage&quot;&gt;&lt;code&gt;RTCDataChannel.onmessage&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">WebRTCデータチャネル（&lt;a href=&quot;rtcdatachannel/onmessage&quot;&gt; &lt;code&gt;RTCDataChannel.onmessage&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b410d893d4781b12e727274958c7d94afb7abdec" translate="yes" xml:space="preserve">
          <source>WebRTC data channels support buffering of outbound data. This is handled automatically. While there's no way to control the size of the buffer, you can learn how much data is currently buffered, and you can choose to be notified by an event when the buffer starts to run low on queued data. This makes it easy to write efficient routines that make sure there's always data ready to send without over-using memory or swamping the channel completely.</source>
          <target state="translated">WebRTC データチャネルは、アウトバウンドデータのバッファリングをサポートしています。これは自動的に処理されます。バッファのサイズを制御する方法はありませんが、現在バッファリングされているデータの量を知ることができ、バッファがキューに入っているデータの量が少なくなったときにイベントで通知されるように選択することができます。これにより、メモリを使いすぎたり、チャネルを完全に浪費したりすることなく、常に送信可能なデータがあることを確認する効率的なルーチンを簡単に書くことができるようになります。</target>
        </trans-unit>
        <trans-unit id="c4925746b775b247833ae038640d782e23242406" translate="yes" xml:space="preserve">
          <source>WebRTC doesn't send DTMF codes as audio data. Instead, they're sent out-of-band, as RTP payloads. Note, however, that although it's possible to &lt;em&gt;send&lt;/em&gt; DTMF using WebRTC, there is currently no way to detect or receive &lt;em&gt;incoming&lt;/em&gt; DTMF. WebRTC currently ignores these payloads; this is because WebRTC's DTMF support is primarily intended for use with legacy telephone services that rely on DTMF tones to perform tasks such as:</source>
          <target state="translated">WebRTCは、DTMFコードをオーディオデータとして送信しません。代わりに、RTPペイロードとしてアウトオブバンドで送信されます。ただし、WebRTCを使用し&lt;em&gt;て&lt;/em&gt; DTMFを&lt;em&gt;送信&lt;/em&gt;する&lt;em&gt;ことは&lt;/em&gt;可能ですが、現在、&lt;em&gt;着信&lt;/em&gt; DTMF を検出または受信&lt;em&gt;する&lt;/em&gt;方法はありません。WebRTCは現在これらのペイロードを無視しています。これは、WebRTCのDTMFサポートが主に、DTMFトーンに依存して次のようなタスクを実行するレガシー電話サービスでの使用を目的としているためです。</target>
        </trans-unit>
        <trans-unit id="98f31e3acb2462a2e9a8791581d703e71fe715af" translate="yes" xml:space="preserve">
          <source>WebRTC interfaces</source>
          <target state="translated">ウェブアールティーシーインタフェース</target>
        </trans-unit>
        <trans-unit id="226b6f4e92677bc1f2b570c828b056fbbd0a3d78" translate="yes" xml:space="preserve">
          <source>WebRTC lets you build peer-to-peer communication of arbitrary data, audio, or video&amp;mdash;or any combination thereof&amp;mdash;into a browser application. In this article, we'll look at the lifetime of a WebRTC session, from establishing the connection all the way through closing the connection when it's no longer needed.</source>
          <target state="translated">WebRTCを使用すると、任意のデータ、オーディオ、ビデオ、またはそれらの任意の組み合わせのピアツーピア通信をブラウザアプリケーションに構築できます。この記事では、接続の確立から不要になった接続のクローズまで、WebRTCセッションの存続期間を見ていきます。</target>
        </trans-unit>
        <trans-unit id="c49098ed693b509d8e422578cbffce2c3edb7499" translate="yes" xml:space="preserve">
          <source>WebRTC serves multiple purposes, and overlaps substantially with the Media Capture and Streams API. Together, they provide powerful multimedia capabilities to the Web, including support for audio and video conferencing, file exchange, identity management, and interfacing with legacy telephone systems by sending &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DTMF&quot;&gt;DTMF&lt;/a&gt; signals. Connections between peers can be made without requiring any special drivers or plug-ins, and can often be made without any intermediary servers.</source>
          <target state="translated">WebRTCは複数の目的を果たし、Media CaptureおよびStreams APIと実質的に重複しています。これらを組み合わせることで、オーディオおよびビデオ会議、ファイル交換、ID管理、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DTMF&quot;&gt;DTMF&lt;/a&gt;信号の送信によるレガシー電話システムとのインターフェイスのサポートなど、強力なマルチメディア機能をWebに提供します。ピア間の接続は、特別なドライバーやプラグインを必要とせずに行うことができ、多くの場合、仲介サーバーなしで行うことができます。</target>
        </trans-unit>
        <trans-unit id="6a399d925b44802a8f9712657b960eb8a5b967ea" translate="yes" xml:space="preserve">
          <source>WebRTC's support for interacting with gateways that link to old-school telephone systems includes support for sending DTMF tones using the &lt;a href=&quot;rtcdtmfsender&quot;&gt;&lt;code&gt;RTCDTMFSender&lt;/code&gt;&lt;/a&gt; interface. This guide shows how to do so.</source>
          <target state="translated">古い学校の電話システムにリンクするゲートウェイとの対話に対するWebRTCのサポートには、&lt;a href=&quot;rtcdtmfsender&quot;&gt; &lt;code&gt;RTCDTMFSender&lt;/code&gt; &lt;/a&gt;インターフェイスを使用してDTMFトーンを送信するためのサポートが含まれます。このガイドでは、その方法を示します。</target>
        </trans-unit>
        <trans-unit id="ca36faf2305b4c44b364cab825d592b9dcaef084" translate="yes" xml:space="preserve">
          <source>WebRTC-proper protocols</source>
          <target state="translated">WebRTC-プロパープロトコル</target>
        </trans-unit>
        <trans-unit id="fd2fe2179b44fad347e37ec201d26ab520f15318" translate="yes" xml:space="preserve">
          <source>WebSocket</source>
          <target state="translated">WebSocket</target>
        </trans-unit>
        <trans-unit id="576299b897ca4628805815218b0baed1fb7b7632" translate="yes" xml:space="preserve">
          <source>WebSocket API Specification</source>
          <target state="translated">ウェブソケットAPI仕様書</target>
        </trans-unit>
        <trans-unit id="038986d5a9a9cbcf9565fef683bb53d6512064c8" translate="yes" xml:space="preserve">
          <source>WebSocket client applications use the &lt;a href=&quot;../websockets_api&quot;&gt;WebSocket API&lt;/a&gt; to communicate with &lt;a href=&quot;writing_websocket_servers&quot;&gt;WebSocket servers&lt;/a&gt; over the WebSocket protocol.</source>
          <target state="translated">WebSocketクライアントアプリケーションは、&lt;a href=&quot;../websockets_api&quot;&gt;WebSocket API&lt;/a&gt;を使用して、WebSocketプロトコルを介して&lt;a href=&quot;writing_websocket_servers&quot;&gt;WebSocketサーバー&lt;/a&gt;と通信します。</target>
        </trans-unit>
        <trans-unit id="ef5f4858a871335a8aa3461355c11222bf1f693f" translate="yes" xml:space="preserve">
          <source>WebSocket codes, extensions, subprotocols, etc. are registered at the &lt;a href=&quot;http://www.iana.org/assignments/websocket/websocket.xml&quot;&gt;IANA WebSocket Protocol Registry&lt;/a&gt;.</source>
          <target state="translated">WebSocketコード、拡張機能、サブ&lt;a href=&quot;http://www.iana.org/assignments/websocket/websocket.xml&quot;&gt;プロトコル&lt;/a&gt;などは、IANA WebSocket Protocol Registryに登録されています。</target>
        </trans-unit>
        <trans-unit id="3c45187c0b8bec5627c054882ec80f7caf91ccae" translate="yes" xml:space="preserve">
          <source>WebSocket codes, extensions, subprotocols, etc. are registered at the &lt;a href=&quot;https://www.iana.org/assignments/websocket/websocket.xml&quot;&gt;IANA WebSocket Protocol Registry&lt;/a&gt;.</source>
          <target state="translated">WebSocketコード、拡張機能、サブ&lt;a href=&quot;https://www.iana.org/assignments/websocket/websocket.xml&quot;&gt;プロトコル&lt;/a&gt;などは、IANAWebSocketプロトコルレジストリに登録されています。</target>
        </trans-unit>
        <trans-unit id="6224da2143fbb8efd488a6793e72cb526ad97b2c" translate="yes" xml:space="preserve">
          <source>WebSocket extensions and subprotocols are negotiated via headers during &lt;a href=&quot;#Handshake&quot;&gt;the handshake&lt;/a&gt;. Sometimes extensions and subprotocols seem too similar to be different things, but there is a clear distinction. Extensions control the WebSocket &lt;strong&gt;frame&lt;/strong&gt; and &lt;strong&gt;modify&lt;/strong&gt; the payload, while subprotocols structure the WebSocket &lt;strong&gt;payload&lt;/strong&gt; and &lt;strong&gt;never modify&lt;/strong&gt; anything. Extensions are optional and generalized (like compression); subprotocols are mandatory and localized (like ones for chat and for MMORPG games).</source>
          <target state="translated">WebSocket拡張機能とサブプロトコルは&lt;a href=&quot;#Handshake&quot;&gt;、ハンドシェイク&lt;/a&gt;中にヘッダーを介してネゴシエートされます。拡張機能とサブプロトコルは似ているように見えて異なるものにはならない場合もありますが、明確な違いがあります。拡張機能はWebSocket &lt;strong&gt;フレーム&lt;/strong&gt;を制御してペイロードを&lt;strong&gt;変更しますが&lt;/strong&gt;、サブプロトコルはWebSocket &lt;strong&gt;ペイロード&lt;/strong&gt;を構成し、何&lt;strong&gt;も変更&lt;/strong&gt;し&lt;strong&gt;ません&lt;/strong&gt;。拡張機能はオプションであり、一般化されています（圧縮など）。サブプロトコルは必須であり、ローカライズされています（チャット用やMMORPGゲーム用など）。</target>
        </trans-unit>
        <trans-unit id="41045a465a50dfc5d5dc8025fc8fcd1d4fd74d19" translate="yes" xml:space="preserve">
          <source>WebSocket handshake library in C++</source>
          <target state="translated">C++の WebSocket ハンドシェイクライブラリ</target>
        </trans-unit>
        <trans-unit id="39be1e3a1d449510eb1b828fe1847ba870790760" translate="yes" xml:space="preserve">
          <source>WebSocket.binaryType</source>
          <target state="translated">WebSocket.binaryType</target>
        </trans-unit>
        <trans-unit id="1424bf66ff76c342b95c7bab693a34fbcb7eb093" translate="yes" xml:space="preserve">
          <source>WebSocket.bufferedAmount</source>
          <target state="translated">WebSocket.bufferedAmount</target>
        </trans-unit>
        <trans-unit id="5123243db38955a29aa6997fd33a7a9c16f93fc8" translate="yes" xml:space="preserve">
          <source>WebSocket.close</source>
          <target state="translated">WebSocket.close</target>
        </trans-unit>
        <trans-unit id="71282c0a106934a46f1b46206c8e5cc95a916f79" translate="yes" xml:space="preserve">
          <source>WebSocket.constructor</source>
          <target state="translated">WebSocket.constructor</target>
        </trans-unit>
        <trans-unit id="65ff0efaaccf347156267dfcd559ff04e8f7c3f2" translate="yes" xml:space="preserve">
          <source>WebSocket.extensions</source>
          <target state="translated">WebSocket.extensions</target>
        </trans-unit>
        <trans-unit id="bca30ed1a797bae0d04d92518f1a416e243d6efb" translate="yes" xml:space="preserve">
          <source>WebSocket.onclose</source>
          <target state="translated">WebSocket.onclose</target>
        </trans-unit>
        <trans-unit id="76625fe619a50e208c2df30852585086ea13d0cf" translate="yes" xml:space="preserve">
          <source>WebSocket.onerror</source>
          <target state="translated">WebSocket.onerror</target>
        </trans-unit>
        <trans-unit id="47d69feb9f69fd5cf86fc2394efb8a5ab2ec8f65" translate="yes" xml:space="preserve">
          <source>WebSocket.onmessage</source>
          <target state="translated">WebSocket.onmessage</target>
        </trans-unit>
        <trans-unit id="cbae529b31272db2b5a2bcf4bf2f46a70df04060" translate="yes" xml:space="preserve">
          <source>WebSocket.onopen</source>
          <target state="translated">WebSocket.onopen</target>
        </trans-unit>
        <trans-unit id="30ada3de46b20297c98d799144c3001954ae1b8c" translate="yes" xml:space="preserve">
          <source>WebSocket.protocol</source>
          <target state="translated">WebSocket.protocol</target>
        </trans-unit>
        <trans-unit id="56f7dabc7d66c27b0b2c8b16e69e91633295ebfe" translate="yes" xml:space="preserve">
          <source>WebSocket.readyState</source>
          <target state="translated">WebSocket.readyState</target>
        </trans-unit>
        <trans-unit id="dfb673f4b33614106a2ed583024ee67aff538f14" translate="yes" xml:space="preserve">
          <source>WebSocket.send</source>
          <target state="translated">WebSocket.send</target>
        </trans-unit>
        <trans-unit id="da6cc56cf140f2ed0d8b14abefcba008bbbbac16" translate="yes" xml:space="preserve">
          <source>WebSocket.url</source>
          <target state="translated">WebSocket.url</target>
        </trans-unit>
        <trans-unit id="56d0e53e6a7114caaeb10b3ceba94b42ba2520e2" translate="yes" xml:space="preserve">
          <source>WebSockets</source>
          <target state="translated">WebSockets</target>
        </trans-unit>
        <trans-unit id="6710b14e8572af88f20d9c396cdde13b818c160a" translate="yes" xml:space="preserve">
          <source>WebSockets API: WebSocket Server Vb.NET</source>
          <target state="translated">WebSockets API:WebSocket Server Vb.NET</target>
        </trans-unit>
        <trans-unit id="251780f6314a16b99122edf56e7e086f4ffe87ce" translate="yes" xml:space="preserve">
          <source>WebSockets API: Writing WebSocket client applications</source>
          <target state="translated">WebSocket API。WebSocketクライアントアプリケーションの記述</target>
        </trans-unit>
        <trans-unit id="2e223500b3688e88b13fa2c7d0d5caf3dbef9649" translate="yes" xml:space="preserve">
          <source>WebSockets API: Writing WebSocket server</source>
          <target state="translated">WebSocket APIです。WebSocketサーバの記述</target>
        </trans-unit>
        <trans-unit id="393d3c1195f4edb188e45c88faf9ce82e583bf38" translate="yes" xml:space="preserve">
          <source>WebSockets API: Writing WebSocket servers</source>
          <target state="translated">WebSocketのAPIです。WebSocketサーバの記述</target>
        </trans-unit>
        <trans-unit id="564af2fd25d946939ac05c4015db0fa92f9d7eb4" translate="yes" xml:space="preserve">
          <source>WebSockets API: Writing a WebSocket server in Java</source>
          <target state="translated">WebSocket API。JavaでWebSocketサーバを書く</target>
        </trans-unit>
        <trans-unit id="cf3e411585d22cacb3a2cc9c820a62922ff3ab84" translate="yes" xml:space="preserve">
          <source>WebSockets communicate over a &lt;a href=&quot;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP (Transmission Control Protocol)&lt;/a&gt; connection. Java's &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/net/ServerSocket.html&quot;&gt;ServerSocket&lt;/a&gt; class is located in the &lt;em&gt;java.net&lt;/em&gt; package.</source>
          <target state="translated">WebSocketは、&lt;a href=&quot;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP（Transmission Control Protocol）&lt;/a&gt;接続を介して通信します。Javaの&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/net/ServerSocket.html&quot;&gt;ServerSocket&lt;/a&gt;クラスは、&lt;em&gt;java.net&lt;/em&gt;パッケージにあります。</target>
        </trans-unit>
        <trans-unit id="30004dae2680aec7f61f5f7429870caece3cc05d" translate="yes" xml:space="preserve">
          <source>WebSockets communicate over a &lt;a href=&quot;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP (Transmission Control Protocol)&lt;/a&gt; connection. Luckily, C# has a &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.net.sockets.tcplistener.aspx&quot;&gt;TcpListener&lt;/a&gt; class which does as the name suggests. It is in the &lt;em&gt;System.Net.Sockets&lt;/em&gt; namespace.</source>
          <target state="translated">WebSocketは、&lt;a href=&quot;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP（Transmission Control Protocol）&lt;/a&gt;接続を介して通信します。幸いなことに、C＃には&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.net.sockets.tcplistener.aspx&quot;&gt;TcpListener&lt;/a&gt;クラスがあり、名前が示すとおりです。これは、&lt;em&gt;System.Net.Sockets&lt;/em&gt;名前空間にあります。</target>
        </trans-unit>
        <trans-unit id="c6305fad2da81030208ae58b83ca52755adb4287" translate="yes" xml:space="preserve">
          <source>WebSockets communicate over a &lt;a href=&quot;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP (Transmission Control Protocol)&lt;/a&gt; connection. Java's &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/net/ServerSocket.html&quot;&gt;ServerSocket&lt;/a&gt; class is located in the &lt;em&gt;java.net&lt;/em&gt; package.</source>
          <target state="translated">WebSocketは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP（Transmission Control Protocol）&lt;/a&gt;接続を介して通信します。Javaの&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/net/ServerSocket.html&quot;&gt;ServerSocket&lt;/a&gt;クラスは、&lt;em&gt;java.net&lt;/em&gt;パッケージにあります。</target>
        </trans-unit>
        <trans-unit id="495ef5b5acadd64407d52ec44f82a67afb13f057" translate="yes" xml:space="preserve">
          <source>WebSockets communicate over a &lt;a href=&quot;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP (Transmission Control Protocol)&lt;/a&gt; connection. Luckily, C# has a &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.net.sockets.tcplistener.aspx&quot;&gt;TcpListener&lt;/a&gt; class which does as the name suggests. It is in the &lt;em&gt;System.Net.Sockets&lt;/em&gt; namespace.</source>
          <target state="translated">WebSocketは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;TCP（Transmission Control Protocol）&lt;/a&gt;接続を介して通信します。幸い、C＃には&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.net.sockets.tcplistener.aspx&quot;&gt;TcpListener&lt;/a&gt;クラスがあり、その名前が示すとおりに機能します。それはである&lt;em&gt;System.Net.Socketsの&lt;/em&gt;名前空間。</target>
        </trans-unit>
        <trans-unit id="7ea42ad424127dc4662c0210251ef537ed2eb8d0" translate="yes" xml:space="preserve">
          <source>WebSockets is an event-driven API; when messages are received, a &quot;message&quot; event is delivered to the &lt;code&gt;onmessage&lt;/code&gt; function. To begin listening for incoming data, you can do something like this:</source>
          <target state="translated">WebSocketsはイベント駆動型APIです。メッセージが受信されると、「メッセージ」イベントが &lt;code&gt;onmessage&lt;/code&gt; 関数に配信されます。着信データのリスニングを開始するには、次のようなことができます：</target>
        </trans-unit>
        <trans-unit id="c30be1272cfac37ff003a03ee52d247085a887f2" translate="yes" xml:space="preserve">
          <source>WebSockets should not be used in a mixed content environment; that is, you shouldn't open a non-secure WebSocket connection from a page loaded using HTTPS or vice-versa. In fact, some browsers explicitly forbid this, including Firefox 8 and later.</source>
          <target state="translated">つまり、HTTPS を使用して読み込まれたページから安全でない WebSocket 接続を開いたり、逆に HTTPS を使用して読み込まれたページから安全でない WebSocket 接続を開いたりしてはいけません。実際、Firefox 8 以降を含め、一部のブラウザではこれを明示的に禁止しています。</target>
        </trans-unit>
        <trans-unit id="cb1500981530133e78f412d5520c65354ad6934b" translate="yes" xml:space="preserve">
          <source>WebSockets support in Firefox is continuing to track the evolving WebSocket specification. Firefox 6 implements version 7 of the underlying protocol, while Firefox 7 implements version 8 (as specified by IETF draft 10). Firefox mobile received WebSocket support in Firefox mobile 7.0.</source>
          <target state="translated">Firefox での WebSocket のサポートは、進化する WebSocket 仕様に追従し続けています。Firefox 6 は基礎となるプロトコルのバージョン 7 を実装していますが、Firefox 7 はバージョン 8 を実装しています (IETF ドラフト 10 で指定されています)。Firefox mobile は Firefox mobile 7.0 で WebSocket のサポートを受けました。</target>
        </trans-unit>
        <trans-unit id="8e9de9acb012daf63fc0a1d108431b5ffdded290" translate="yes" xml:space="preserve">
          <source>WebUSB</source>
          <target state="translated">WebUSB</target>
        </trans-unit>
        <trans-unit id="a608db591212d3199a6fff48dbbd0894020c9461" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'USB' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「USB」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ed09961743d63f77ceb00e7e062521a8862292b5" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'USBDevice' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「USBDevice」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="05f34352157d7bde664f0c768283341c0480ef8f" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'claimInterface()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「claimInterface（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7dff949784afefb826c5fa8212aff088f90de262" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'clearHalt()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「clearHalt（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5fd925b6fefe42d679d4b884dd2e4855472c2bc7" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'close()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「close（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="775e67789647b45e52566bd8865a0216d6428847" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'configuration' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「構成」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e22804235bc3d222d6816fc28c320886d53c9919" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'configurations' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「構成」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="54204f9c9c2740e1aca5dced3aab9796fe2d0d8f" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'controlTransferIn()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「controlTransferIn（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d3eb229797fa3eaa942b1c3f9bd69ec26ff8fd40" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'controlTransferOut()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「controlTransferOut（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e77a57b40903fdd0783e89169fa7e57a164e43a9" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'deviceClass' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「deviceClass」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="91ea9a447be37a7864517fb80f70499fbf50a49f" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'deviceProtocol' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「deviceProtocol」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="feeba0f57b95a9b3d57a3ba8375f3d206bc11169" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'deviceSubclass' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「deviceSubclass」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1870b14aea3d70cf91c460231039023cb5c43e13" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'deviceVersionMajor' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「deviceVersionMajor」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="baf6ef0f4300283a3115c3ac7495e06da8e22313" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'deviceVersionMinor' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「deviceVersionMinor」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="af93e48d950e855dbcfb2679fbebac27eaa3a25a" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'deviceVersionSubminor' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「deviceVersionSubminor」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2dc6da783d74ef13a171cf60aa61655ebcb65cb6" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'getDevices' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「getDevices」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="83e71440c7b4b671346dc5473a44e5a09b60a1c0" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'isochronousTransferIn()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「isochronousTransferIn（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="45eb7ca94077b3b4d4a0cd476bb8a2afe77a8637" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'isochronousTransferOut()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「isochronousTransferOut（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="df37bebf7d000bb943f2bc07d60c8ff393a19987" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'manufacturerName' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様での「manufacturerName」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fc6f93ea5b7dc8830d37cd2606cc5ea0b0d3db7a" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'onconnect' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「onconnect」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="14875a19121e739e088ebb45893bf5bf06fdb633" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'ondisconnect' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「ondisconnect」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f686f24133c324b9de0aa0beeaafff5905f0e5db" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'open()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「open（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9df7df068b7606f46188b53d2fe92a5c340f8ab6" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'opened' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「オープン」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="33534827829fb5aef4c879ac1601f6044941297f" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'productID' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「productID」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="24c40fabef23e71749a23972bce37d245412406d" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'productName' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「productName」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="84c25bcade49b488757f25cadc34b31631665472" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'releaseInterface()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「releaseInterface（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bce868411500f924cd8a120698b8148e16a6ed8c" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'requestDevice' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「requestDevice」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4c446fd9fc5bd738e64296ca4a30c1f2d4a8eee7" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'reset()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「reset（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3bf1822240b3806672c51f9d4338bf7b14c5c3d7" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'selectAlternateInterface()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「selectAlternateInterface（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9119a841a8e47b99171c2a45e0260ad3325c6d43" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'selectConfiguration' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「selectConfiguration」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c70f9295d481445061df6996a0479610936e42b6" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'serialNumber' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「serialNumber」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9bb624ed43d11a9a30c24ec7d0ac4a949e4de7e6" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'transferIn()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「transferIn（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dbea2e3d88bd1ccd94c7f5d3c2be6b04bc9790ff" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'transferOut()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「transferOut（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bbe88668befda3e2583cf0dad1916477317fa370" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'usbVersionMajor' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「usbVersionMajor」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d492344b443ce8022d63c9f065bda5bb4069dcdc" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'usbVersionMinor' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「usbVersionMinor」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="058b0283beb775497ed9687887af388a355c834d" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'usbVersionSubminor' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「usbVersionSubminor」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dfa677d2b647dee84a47f279954539e362066f34" translate="yes" xml:space="preserve">
          <source>WebUSB&lt;br/&gt;&lt;small&gt;The definition of 'vendorID' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebUSB &lt;br/&gt;&lt;small&gt;その仕様における「vendorID」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cbf03bfb03463036b390c3040a60e17abcc0ae30" translate="yes" xml:space="preserve">
          <source>WebVR</source>
          <target state="translated">WebVR</target>
        </trans-unit>
        <trans-unit id="d5b3205d2f50f8459df98f434927a9961edb8576" translate="yes" xml:space="preserve">
          <source>WebVR 1.1</source>
          <target state="translated">WebVR 1.1</target>
        </trans-unit>
        <trans-unit id="59af5d9afd866430a0789c0448673b8b0c2fd755" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRDisplay' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRDisplay」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6d0a97cc40405483442ad2258f77adf38a2c437e" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRDisplayCapabilities' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRDisplayCapabilities」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2c13df3e98fb5d62896f5fb956461dae24275299" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRDisplayEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRDisplayEvent」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d7174db17e878100001003219f6119ada22e612a" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRDisplayEvent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRDisplayEvent（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1a9d6dae0a0952f0c52aae7ddae4f5a93658b568" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VREyeParameters' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VREyeParameters」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e67718560a458237243d01859c0d0c8b5714fb82" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRFieldOfView' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRFieldOfView」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1f216bc26867745a5ef57cc341962173f6ef6a73" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRFrameData()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRFrameData（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a379eaab341495736196732b4a2e511ae9b98016" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRLayerInit' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRLayerInit」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3d7cbb917837d5cf05c3ef8d660a6de634af5433" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRPose' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRPose」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fa9c130ba43855af0fc9068adaf297a051a24521" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'VRStageParameters' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「VRStageParameters」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="02397c4d95436837679656a59f4de18f98fbd724" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'angularAcceleration' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「angularAcceleration」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7751e0a0a33c8c4aa88c8296739906da87718ba9" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'angularVelocity' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「angularVelocity」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="26d0be1ba0207b8de23e26e4c4338ced7267aefd" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'canPresent' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「canPresent」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c9a1442d9e241f23e2a488ab201d71b37944ac9d" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'cancelAnimationFrame()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「cancelAnimationFrame（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="97c13d9586cd4af8d4f3331bbc675e12a5b22e53" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'capabilities' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「機能」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5f5097bfce6658d7271c15b9afc8dacfd385bfd0" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'depthFar' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「depthFar」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3c30dae77cc6eb3e60a7866737bfde52fd81cc50" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'depthNear' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「depthNear」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="048a4660e73c9373108c8d8a1b44fce493e0f889" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'display' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「表示」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c43e9f16f4b212865196d4057863ae23344bb5f6" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'displayId' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「displayId」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="be351235869e5db1ee952cfcf176653c5a50282d" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'displayName' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「displayName」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3616886548da3a0fd6ab0d487fc20e9bf1749d3d" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'downDegrees' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「downDegrees」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0f20b3e1c7ed3774664a8b6e360640072a552720" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'exitPresent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「exitPresent（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2db08dc214b7769da90a71ba62ff5704c82c5099" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'fieldOfView' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「fieldOfView」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a7958972975dd775f0b4b1d6aa47efa91ef8560f" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'getEyeParameters()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「getEyeParameters（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="603aac8e296bf98925a925995692453f8ac371e7" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'getLayers()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「getLayers（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f6ddd340002ffa81d28381595cafccbf7c387668" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'hasExternalDisplay' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「hasExternalDisplay」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="57b5a83d0ef11ab92ae93acda55a15baacce6b52" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'hasOrientation' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「hasOrientation」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2bb2cd9fc1b345d0bf43c85bcc47d91ba2793948" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'hasPosition' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「hasPosition」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3c655ea8a1f493d20fc7d2b29a23c8e36e282a1c" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'isConnected' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「isConnected」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="054b796a79ed97acdce35dcdb7778ad059039d1f" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'isPresenting' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「isPresenting」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a9e210b5adefc9895d56e04f63c20e4d469768ac" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'leftBounds' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「leftBounds」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="73a36651b292a577ff388616f2a6185cb927f395" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'leftDegrees' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「leftDegrees」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eda8cb7e67ea8bac7665b43b43ad4d59e7067021" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'leftProjectionMatrix' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「leftProjectionMatrix」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c03db19e5725ef4f47d3903bbd5180da0436ec6f" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'leftViewMatrix' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様の「leftViewMatrix」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c18d665818b649e071deb0ee41a4fedd2a63d1c0" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'linearAcceleration' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「linearAcceleration」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="31ee81ad0fb561f6975e5dcdff7b9b0938b7f46b" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'linearVelocity' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「linearVelocity」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8e865ac4afb98ac5d853118f510c3b86d52679e0" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'maxLayers' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「maxLayers」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3277d32dbb28a84ab80d8b293e4faffc1c081b71" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'offset' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「オフセット」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="956effa638eca1fe8ecea86bdcfe18312280eb99" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'onvrdisplayactivate' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「onvrdisplayactivate」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="11a01fbf76bdb37a438b2d8c87f8fa5b0d333bb1" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'onvrdisplayblur' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「onvrdisplayblur」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="13da7e3449a48e1bc4f67b404c218e02a54a0e58" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'onvrdisplayconnect' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「onvrdisplayconnect」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1401019741591bb28af4d3a9e60094eb6f0b6399" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'onvrdisplaydeactivate' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「onvrdisplaydeactivate」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d4e4f413e87cbd67e4dc75487dd8a9b448b05a47" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'onvrdisplaydisconnect' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「onvrdisplaydisconnect」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9c939bdbe987e07ae229a95cd709975931b38661" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'onvrdisplayfocus' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「onvrdisplayfocus」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="290087754c0f1a7bb82b030c763d864bbb2837ae" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'onvrdisplaypresentchange' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「onvrdisplaypresentchange」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6edb5940fcb9b37c59a0193b5e9e5018961c8d0a" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'orientation' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「向き」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="578c08be5e595f3f01da3e96ba21e87ae8a6e8c1" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'pose' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「ポーズ」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4605071136ee2c35f9cf951effd28953b56cf034" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'position' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「位置」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="81549592f51ae12f07f82d2672d9a53cad60dd49" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'reason' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「理由」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eace4f6e0a0eb1c161f8e11875ac21eb410d172c" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'renderHeight' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「renderHeight」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="96c53b77609cce3ccd487c2862ac6b8a910d6813" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'renderWidth' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「renderWidth」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fb66c2e79e8e33d0e83953ac3427527c07709f41" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'requestAnimationFrame()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「requestAnimationFrame（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="20ffb648bee7786403cc2e2ebc7fa1fe8e7865fd" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'requestPresent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「requestPresent（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d501c58b4e63d5f8b74a979e61903b9402eaff3a" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'rightBounds' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「rightBounds」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="203932b000d1df445a3c2e2d0dd24ef07ca20542" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'rightDegrees' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「rightDegrees」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9e1b7b827b4c9ce110adb8f40bf1aec761f7c4e9" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'rightProjectionMatrix' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「rightProjectionMatrix」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9d7ba20a0a5879c49f00182c0d5bb457fd30ee7b" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'rightViewMatrix' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「rightViewMatrix」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="944587eef3ca9e93714d2e0d7e33ca6a117e292b" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'sittingToStandingTransform' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「sittingToStandingTransform」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0628288f0ec8088ae9b99acdab34964e3ec24055" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'sizeX' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「sizeX」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="22f391c796d38f22d600c1921595134064dc899e" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'sizeY' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「sizeY」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ac1d6215cb523236e812f2646390a54e9f510bd4" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'source' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「ソース」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="93f5367c3e870018b79d56dfe9efcfb11f2c3a72" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'stageParameters' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「stageParameters」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5423f0cf44df3176b0d2917af91b8ddd1812e029" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'submitFrame()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「submitFrame（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4b2a78c38abc11f8a1e313a81f8684f69d6228cc" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'timestamp' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「タイムスタンプ」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3c81090b083e1e036b4362be80acf35414cd1cb0" translate="yes" xml:space="preserve">
          <source>WebVR 1.1&lt;br/&gt;&lt;small&gt;The definition of 'upDegrees' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVR 1.1 &lt;br/&gt;&lt;small&gt;その仕様における「upDegrees」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b84b1e6bc473c24bf5017e621c5e956c8688c42b" translate="yes" xml:space="preserve">
          <source>WebVR API</source>
          <target state="translated">ウェブヴアールエーピーアイ</target>
        </trans-unit>
        <trans-unit id="d20a4975ac1578b3770c2bd07e0b9bdb56bbced6" translate="yes" xml:space="preserve">
          <source>WebVR API homepage</source>
          <target state="translated">WebVR APIホームページ</target>
        </trans-unit>
        <trans-unit id="63bfac0c233bb36fd64ac2cddf05772e69db75b3" translate="yes" xml:space="preserve">
          <source>WebVR API: Concepts</source>
          <target state="translated">WebVR API。概念</target>
        </trans-unit>
        <trans-unit id="25b8a04b9e6b18aece64983b57aeefa1edc57f77" translate="yes" xml:space="preserve">
          <source>WebVR API: Using VR controllers with WebVR</source>
          <target state="translated">WebVRのAPI。WebVRでVRコントローラを使用する</target>
        </trans-unit>
        <trans-unit id="0deebb8fdd42ed0b0f6a55e8edee15465c61ca12" translate="yes" xml:space="preserve">
          <source>WebVR API: Using the WebVR API</source>
          <target state="translated">WebVR APIを使用しています。WebVR APIを使う</target>
        </trans-unit>
        <trans-unit id="95355cb293f200d590ef89c1bb18d2810b7a1314" translate="yes" xml:space="preserve">
          <source>WebVR Interfaces</source>
          <target state="translated">WebVRインターフェイス</target>
        </trans-unit>
        <trans-unit id="08da27ca1761cc40d26fbe4ed79f779cdb80a2e6" translate="yes" xml:space="preserve">
          <source>WebVR events</source>
          <target state="translated">WebVRイベント</target>
        </trans-unit>
        <trans-unit id="c65ceab5cd8fc9739026a6ca9e2d5c69d9a3cc7f" translate="yes" xml:space="preserve">
          <source>WebVR provides support for exposing virtual reality devices &amp;mdash; for example head-mounted displays like the Oculus Rift or HTC Vive &amp;mdash; to web apps, enabling developers to translate position and movement information from the display into movement around a 3D scene. This has numerous, interesting applications, from virtual product tours and interactive training apps to immersive first person games.</source>
          <target state="translated">WebVRは、仮想現実デバイス（Oculus RiftやHTC Viveなどのヘッドマウントディスプレイなど）をWebアプリに公開するためのサポートを提供し、開発者がディスプレイからの位置と動きの情報を3Dシーンの周りの動きに変換できるようにします。これには、仮想製品ツアーやインタラクティブなトレーニングアプリから没入型の一人称ゲームまで、数多くの興味深いアプリケーションがあります。</target>
        </trans-unit>
        <trans-unit id="6b46e11ab296ee8ef01c3f1f94fe9ffd64893f99" translate="yes" xml:space="preserve">
          <source>WebVR's dedicated &lt;a href=&quot;../vrdisplay/requestanimationframe&quot;&gt;&lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; method is used to run the app's rendering loop at the correct refresh rate for the display.</source>
          <target state="translated">WebVRの専用&lt;a href=&quot;../vrdisplay/requestanimationframe&quot;&gt; &lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、ディスプレイの正しいリフレッシュレートでアプリのレンダリングループを実行します。</target>
        </trans-unit>
        <trans-unit id="2edff5ace2bd2df4e5879898ff4ed40dc1e71983" translate="yes" xml:space="preserve">
          <source>WebVR's dedicated &lt;a href=&quot;vrdisplay/requestanimationframe&quot;&gt;&lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; method is used to run the app's rendering loop at the correct refresh rate for the display.</source>
          <target state="translated">WebVRの専用&lt;a href=&quot;vrdisplay/requestanimationframe&quot;&gt; &lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、ディスプレイの正しいリフレッシュレートでアプリのレンダリングループを実行します。</target>
        </trans-unit>
        <trans-unit id="4b493ef16fc72100a0de2047ed78ad4120e3f7f5" translate="yes" xml:space="preserve">
          <source>WebVTT</source>
          <target state="translated">WebVTT</target>
        </trans-unit>
        <trans-unit id="aa49c79d1247f2cf9b999d79795cfba011b37fb8" translate="yes" xml:space="preserve">
          <source>WebVTT API</source>
          <target state="translated">ウェブヴイティーティーエーピーアイ</target>
        </trans-unit>
        <trans-unit id="06047f0a2d403c41ecaef342cb431d9d7f7cb1c7" translate="yes" xml:space="preserve">
          <source>WebVTT body</source>
          <target state="translated">ウェブVTT本体</target>
        </trans-unit>
        <trans-unit id="39319eb7f217052b46d5b19784d9ca19a9c5a4ee" translate="yes" xml:space="preserve">
          <source>WebVTT comments</source>
          <target state="translated">WebVTTのコメント</target>
        </trans-unit>
        <trans-unit id="55fa4614ad2df3a23e5a6436d106b6bf0aa86308" translate="yes" xml:space="preserve">
          <source>WebVTT cues</source>
          <target state="translated">WebVTTキュー</target>
        </trans-unit>
        <trans-unit id="dc6e8d65518c3b714ffc7a0dfe21a5db12f58286" translate="yes" xml:space="preserve">
          <source>WebVTT files</source>
          <target state="translated">WebVTT ファイル</target>
        </trans-unit>
        <trans-unit id="0ece3d8d4336694ed4fb0bb94ada44a4951c85e8" translate="yes" xml:space="preserve">
          <source>WebVTT was implemented in Firefox 24 behind the preference &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Mozilla/Preferences/Preference_reference/media.webvtt.enabled&quot;&gt;media.webvtt.enabled&lt;/a&gt;&lt;/code&gt;, which is disabled by default; you can enable it by setting this preference to &lt;code&gt;true&lt;/code&gt;. WebVTT is enabled by default starting in Firefox 31 and can be disabled by setting the preference to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">WebVTTは、デフォルトで無効になっている設定 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Mozilla/Preferences/Preference_reference/media.webvtt.enabled&quot;&gt;media.webvtt.enabled&lt;/a&gt;&lt;/code&gt; の背後でFirefox 24に実装されました。この設定を &lt;code&gt;true&lt;/code&gt; に設定することで有効にできます。Firefox 31以降、WebVTTはデフォルトで有効になり、設定を &lt;code&gt;false&lt;/code&gt; に設定することで無効にできます。</target>
        </trans-unit>
        <trans-unit id="e72ae545706a44a8b42f44f11fc0b2e98a4feca3" translate="yes" xml:space="preserve">
          <source>WebVTT: The Web Video Text Tracks Format</source>
          <target state="translated">WebVTT:ウェブビデオテキストトラックフォーマット</target>
        </trans-unit>
        <trans-unit id="b3d7522e7cce897dd24e0e3fb95666bd89a1480d" translate="yes" xml:space="preserve">
          <source>WebVTT: The Web Video Text Tracks Format&lt;br/&gt;&lt;small&gt;The definition of 'VTTCue()' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVTT：Webビデオテキストトラック形式&lt;br/&gt;&lt;small&gt;その仕様における「VTTCue（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b2272fca31fc0ad8671945db7c893398c6da179d" translate="yes" xml:space="preserve">
          <source>WebVTT: The Web Video Text Tracks Format&lt;br/&gt;&lt;small&gt;The definition of 'mode' in that specification.&lt;/small&gt;</source>
          <target state="translated">WebVTT：Webビデオテキストトラック形式&lt;br/&gt;&lt;small&gt;その仕様における「モード」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d66de80c22964cdbfe40bf6069302060e26f38f3" translate="yes" xml:space="preserve">
          <source>Webkit-based browsers (Google Chrome and Safari, for example) do not fire keypress events on the arrow keys</source>
          <target state="translated">Webkit ベースのブラウザ(Google Chrome や Safari など)では、矢印キーのキープレス イベントが発生しません。</target>
        </trans-unit>
        <trans-unit id="4603a691679e550a20f0e8b14342fe643af35723" translate="yes" xml:space="preserve">
          <source>Webkit-based browsers don't follow the spec for the dialog box. An almost cross-browser working example would be close to the below example.</source>
          <target state="translated">Webkit ベースのブラウザはダイアログ ボックスの仕様に従っていません。ほぼクロスブラウザに近い動作例は、以下の例に近いでしょう。</target>
        </trans-unit>
        <trans-unit id="bf13209424bfcfc0d62650fecda1e87ee8878db3" translate="yes" xml:space="preserve">
          <source>Websockets API</source>
          <target state="translated">ウェブソケットエーピーアイ</target>
        </trans-unit>
        <trans-unit id="a488f96116afc1bde67c0b0faf728c1b719ded1a" translate="yes" xml:space="preserve">
          <source>What about Pointer Events?</source>
          <target state="translated">ポインターイベントは?</target>
        </trans-unit>
        <trans-unit id="9b0228c5d574144761e59b2167fc4ee012cfbf41" translate="yes" xml:space="preserve">
          <source>What adapter.js does</source>
          <target state="translated">どのようなアダプタ.jsが</target>
        </trans-unit>
        <trans-unit id="fde8cf68d9cdfff49c0221a1710d1371c2031b58" translate="yes" xml:space="preserve">
          <source>What are you hoping to achieve with this push notification?</source>
          <target state="translated">このプッシュ通知で何を実現したいのか?</target>
        </trans-unit>
        <trans-unit id="f1f54e2595da8ad8935eacab78952faec3da608b" translate="yes" xml:space="preserve">
          <source>What data can be passed to a USB device and how it is passed is particular and unique to each device.</source>
          <target state="translated">USBデバイスにどのようなデータをどのように渡すかは、それぞれのデバイスに特有のものであり、固有のものです。</target>
        </trans-unit>
        <trans-unit id="036bed5732956d0567ab813afba86c56a1848f23" translate="yes" xml:space="preserve">
          <source>What does the DOM Level 1 Core let me do?</source>
          <target state="translated">DOM Level 1 Coreは何をさせてくれるの?</target>
        </trans-unit>
        <trans-unit id="2f932432eff5106be70528a97b01a7ac600b6f24" translate="yes" xml:space="preserve">
          <source>What exactly happens when you set value of &lt;code&gt;innerHTML&lt;/code&gt;? Doing so causes the user agent to follow these steps:</source>
          <target state="translated">&lt;code&gt;innerHTML&lt;/code&gt; の値を設定すると、正確にはどうなりますか？これにより、ユーザーエージェントは次の手順に従います。</target>
        </trans-unit>
        <trans-unit id="3f3411d3cec9f45f01f629ac1a3dc8bdd6285a3e" translate="yes" xml:space="preserve">
          <source>What happens when a web page element needs to be visible on screen regardless of the visible portion of a web page? For example, what if you need a set of image controls to remain on screen regardless of the pinch zoom level of the device? Current browsers vary in how they handle this. Visual viewport lets web developers solve this by positioning elements relative to what's shown on screen.</source>
          <target state="translated">Webページの要素がWebページの可視部分に関係なく画面上に表示される必要がある場合はどうなりますか?例えば、デバイスのピンチズームレベルに関係なく、画像コントロールのセットを画面上に残す必要がある場合はどうなりますか?現在のブラウザでは、この処理方法が異なります。ビジュアル ビューポートを使用すると、Web 開発者は、画面に表示されているものに対して要素を相対的に配置することで、この問題を解決できます。</target>
        </trans-unit>
        <trans-unit id="713c03e5f5976173474700739054677d438ef529" translate="yes" xml:space="preserve">
          <source>What is a URL?</source>
          <target state="translated">URLとは何ですか?</target>
        </trans-unit>
        <trans-unit id="0eb38c512b62ab87543363903646483d96fa8df7" translate="yes" xml:space="preserve">
          <source>What is a content tree?</source>
          <target state="translated">コンテンツツリーとは?</target>
        </trans-unit>
        <trans-unit id="2fa02612a65a46913e3128a95626c5c036901574" translate="yes" xml:space="preserve">
          <source>What is a transformation matrix?</source>
          <target state="translated">変換行列とは?</target>
        </trans-unit>
        <trans-unit id="c78470ea04d7397e1b635563a52f407add3b34c3" translate="yes" xml:space="preserve">
          <source>What is the DOM?</source>
          <target state="translated">DOMとは何ですか?</target>
        </trans-unit>
        <trans-unit id="2f217a795fb3f8aa290c838106a4ca7a6fb9dea0" translate="yes" xml:space="preserve">
          <source>What is the JavaScript relationship between the main window and the secondary window?</source>
          <target state="translated">メインウィンドウとセカンダリウィンドウのJavaScriptの関係は?</target>
        </trans-unit>
        <trans-unit id="0b112cd6cd2cde8a3a6f88e66b9b3f8dff0510f2" translate="yes" xml:space="preserve">
          <source>What technologies use browser data storage?</source>
          <target state="translated">ブラウザのデータストレージはどのような技術を使っているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="6b6b287a85e933401b0201f18933c78a98ee5553" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s more, if we only wanted to specify the duration of the animation and not its iterations (by default, animations iterate once), we could pass in the milliseconds alone:</source>
          <target state="translated">さらに、アニメーションの継続時間のみを指定し、反復を指定しない場合（デフォルトでは、アニメーションは1回反復する）、ミリ秒のみを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="c6145b5e9cc0dbf52f495d0804afaf9484d39173" translate="yes" xml:space="preserve">
          <source>What's the size of the displayed content?</source>
          <target state="translated">表示されるコンテンツのサイズは?</target>
        </trans-unit>
        <trans-unit id="e3990fb381cffa32deefa8eea8b2d9a4fde47ff2" translate="yes" xml:space="preserve">
          <source>Whatever data the event was initialized with.</source>
          <target state="translated">イベントが初期化されたデータが何であれ</target>
        </trans-unit>
        <trans-unit id="ca2bd465b4479fcd4305d5529322e84da770b5f5" translate="yes" xml:space="preserve">
          <source>Whatever size the incoming video is, we're going to scale the resulting image to be 320 pixels wide.</source>
          <target state="translated">入ってくる動画のサイズがどうであれ、結果としての画像を320ピクセル幅に拡大縮小します。</target>
        </trans-unit>
        <trans-unit id="f6659608df6a4cd3b250e285d66a49c50d0e7861" translate="yes" xml:space="preserve">
          <source>Whatever type naturally results from the given expression.</source>
          <target state="translated">与えられた式から自然に得られる型が何であれ</target>
        </trans-unit>
        <trans-unit id="2f9a04144c12aa6a0a70aca28f6f197de1ab5301" translate="yes" xml:space="preserve">
          <source>WheelEvent</source>
          <target state="translated">WheelEvent</target>
        </trans-unit>
        <trans-unit id="fac1d1fe0b0eb1f81b9953da28f4aeedd86e0579" translate="yes" xml:space="preserve">
          <source>WheelEvent.constructor</source>
          <target state="translated">WheelEvent.constructor</target>
        </trans-unit>
        <trans-unit id="619d9aee0be6aff1b941215bce7beae317f5fe99" translate="yes" xml:space="preserve">
          <source>WheelEvent.deltaMode</source>
          <target state="translated">WheelEvent.deltaMode</target>
        </trans-unit>
        <trans-unit id="530df52f25e16ad15ad340a5b773eece6ddc3ee2" translate="yes" xml:space="preserve">
          <source>WheelEvent.deltaX</source>
          <target state="translated">WheelEvent.deltaX</target>
        </trans-unit>
        <trans-unit id="89b1d314d69781a23de7f5488f35d0044ad8b642" translate="yes" xml:space="preserve">
          <source>WheelEvent.deltaY</source>
          <target state="translated">WheelEvent.deltaY</target>
        </trans-unit>
        <trans-unit id="90f29909b596bdf728d01e3605ff4cb90d980f6d" translate="yes" xml:space="preserve">
          <source>WheelEvent.deltaZ</source>
          <target state="translated">WheelEvent.deltaZ</target>
        </trans-unit>
        <trans-unit id="b366f165fc87766c0508dfc10f0646226aea680a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;http://kb.mozillazine.org/Layout.scrollbar.side&quot;&gt;&lt;code&gt;layout.scrollbar.side&lt;/code&gt; preference&lt;/a&gt; is set to 1 or to 3 and when the text-direction is set to RTL, &lt;strong&gt;then the vertical scrollbar is positioned on the left&lt;/strong&gt; and this impacts the way clientLeft is computed.</source>
          <target state="translated">場合&lt;a href=&quot;http://kb.mozillazine.org/Layout.scrollbar.side&quot;&gt; &lt;code&gt;layout.scrollbar.side&lt;/code&gt; 嗜好は&lt;/a&gt; 1または3に設定され、テキスト方向はRTLに設定されている場合、&lt;strong&gt;その後、垂直スクロールバーが左側に位置している&lt;/strong&gt;と、この衝撃clientLeftが計算される方法。</target>
        </trans-unit>
        <trans-unit id="e488ef5c9a134f84e6efedf8ff60639bff9a986f" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; is in effect, many of the timing properties' values are returned as zero unless the server's access policy permits these values to be shared. This requires the server providing the resource to send the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin&quot;&gt;&lt;code&gt;Timing-Allow-Origin&lt;/code&gt;&lt;/a&gt; HTTP response header with a value specifying the origin or origins which are allowed to get the restricted timestamp values.</source>
          <target state="translated">とき&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORSが&lt;/a&gt;有効になっているサーバーのアクセスポリシーを共有することが、これらの値を許可しない限り、タイミングの多くのプロパティの値はゼロとして返されます。これには、リソースを提供するサーバーが、制限されたタイムスタンプ値の取得を許可される1つまたは複数のオリジンを指定する値とともに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin&quot;&gt; &lt;code&gt;Timing-Allow-Origin&lt;/code&gt; &lt;/a&gt; HTTP応答ヘッダーを送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="5a454513a6b81081f3d2aef6d48aad89ba8a4646" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; is in effect, many of these values are returned as zero unless the server's access policy permits these values to be shared. This requires the server providing the resource to send the &lt;code&gt;Timing-Allow-Origin&lt;/code&gt; HTTP response header with a value specifying the origin or origins which are allowed to get the restricted timestamp values.</source>
          <target state="translated">とき&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORSが&lt;/a&gt;有効になっているサーバのアクセスポリシーは、これらの値を共有することを可能にする場合を除き、これらの値の多くはゼロとして返されます。これには、リソースを提供するサーバーが、制限されたタイムスタンプ値の取得を許可される1つまたは複数のオリジンを指定する値とともに &lt;code&gt;Timing-Allow-Origin&lt;/code&gt; HTTP応答ヘッダーを送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="ce481846e8420903b17f96a18592dd80a1507e54" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;onmessage&quot;&gt;&lt;code&gt;ServiceWorkerContainer.onmessage&lt;/code&gt;&lt;/a&gt; is set up to handle the messages.</source>
          <target state="translated">とき&lt;a href=&quot;onmessage&quot;&gt; &lt;code&gt;ServiceWorkerContainer.onmessage&lt;/code&gt; は、&lt;/a&gt;メッセージを処理するように設定されています。</target>
        </trans-unit>
        <trans-unit id="37fd3604d60c32592bfbfaf24607fa98c4f3c539" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;requestdata&quot;&gt;&lt;code&gt;MediaRecorder.requestData()&lt;/code&gt;&lt;/a&gt; is called, all media data which has been captured since recording began or the last time a &lt;code&gt;dataavailable&lt;/code&gt; event occurred is delivered; then a new &lt;code&gt;Blob&lt;/code&gt; is created and media capture continues into that blob.</source>
          <target state="translated">とき&lt;a href=&quot;requestdata&quot;&gt; &lt;code&gt;MediaRecorder.requestData()&lt;/code&gt; &lt;/a&gt;と呼ばれ、記録が前回始まっまたは以降捕獲されたすべてのメディアデータ &lt;code&gt;dataavailable&lt;/code&gt; イベントが配信されて発生しました。次に、新しい &lt;code&gt;Blob&lt;/code&gt; が作成され、メディアキャプチャがそのBlobに続行されます。</target>
        </trans-unit>
        <trans-unit id="e8f6f1d5463a817a8412c973fc90283e44e94a28" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;stop&quot;&gt;&lt;code&gt;MediaRecorder.stop()&lt;/code&gt;&lt;/a&gt; is called, all media data which has been captured since recording began or the last time a &lt;code&gt;dataavailable&lt;/code&gt; event occurred is delivered in a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;; after this, capturing ends.</source>
          <target state="translated">とき&lt;a href=&quot;stop&quot;&gt; &lt;code&gt;MediaRecorder.stop()&lt;/code&gt; &lt;/a&gt;と呼ばれ、記録が始まったか、前回キャプチャされたすべてのメディアデータ &lt;code&gt;dataavailable&lt;/code&gt; イベントが発生したが、中に配信され&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;。この後、キャプチャが終了します。</target>
        </trans-unit>
        <trans-unit id="444d9ddf12c8b2fbe8221fd6a24193577f11408a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&amp;lt;my-paragraph&amp;gt;&lt;/code&gt; is used in the document, the slot is populated by a slotable element by including it inside the element with a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot&quot;&gt;slot&lt;/a&gt;&lt;/code&gt; attribute with the value &lt;code&gt;my-text&lt;/code&gt;. Here is one such example:</source>
          <target state="translated">ときに &lt;code&gt;&amp;lt;my-paragraph&amp;gt;&lt;/code&gt; 文書で使用され、スロットが持つ要素の内側にそれを含めることによって、slotable要素によって移入された &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot&quot;&gt;slot&lt;/a&gt;&lt;/code&gt; 値を持つ属性 &lt;code&gt;my-text&lt;/code&gt; 。以下はそのような例の1つです。</target>
        </trans-unit>
        <trans-unit id="04aa822d8bbcb068bdc21f48b0f5fdbce29cf5d3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;click()&lt;/code&gt; is used with supported elements (such as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;), it fires the element's click event. This event then bubbles up to elements higher in the document tree (or event chain) and fires their click events.</source>
          <target state="translated">ときに &lt;code&gt;click()&lt;/code&gt; （のようなサポートされている要素で使用される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;）、それは要素のクリックイベントを発生させます。次に、このイベントはドキュメントツリー（またはイベントチェーン）の上位の要素までバブルし、クリックイベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="65132caee31533c9af57be2ac85820664bff4824" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;createOffer()&lt;/code&gt; succeeds (fulfilling the promise), we pass the created offer information into &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;myPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;, which configures the connection and media configuration state for the caller's end of the connection.</source>
          <target state="translated">とき &lt;code&gt;createOffer()&lt;/code&gt; （約束を果たす）成功し、我々はに作成された提供情報を渡す&lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;myPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt;接続の呼び出し側の最後の接続やメディアの構成状態を設定し、。</target>
        </trans-unit>
        <trans-unit id="12ec6aa7138de9024fcd3345e1aa9a0dd14cd3b1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;deleteDatabase()&lt;/code&gt; is called, any other open connections to this particular database will get a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/versionchange_indexedDB&quot;&gt;versionchange&lt;/a&gt; event.</source>
          <target state="translated">とき &lt;code&gt;deleteDatabase()&lt;/code&gt; が呼び出されると、この特定のデータベースに他のオープン接続を取得します&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/versionchange_indexedDB&quot;&gt;versionchangeの&lt;/a&gt;イベントを。</target>
        </trans-unit>
        <trans-unit id="88e071aadd18ccb69785f866fc1f84d139dd262d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;getData()&lt;/code&gt; is run, we create a new request using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, then use it to fetch a specific &lt;code&gt;.txt&lt;/code&gt; file. When the fetch is successful, we read a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/USVString&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; (text) object out of the response using &lt;code&gt;text()&lt;/code&gt;, then set the &lt;a href=&quot;../element/innerhtml&quot;&gt;&lt;code&gt;innerHTML&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/a&gt; element equal to the text object.</source>
          <target state="translated">とき &lt;code&gt;getData()&lt;/code&gt; 実行され、私たちが使用して新しい要求を作成&lt;a href=&quot;../request/request&quot;&gt; &lt;code&gt;Request()&lt;/code&gt; &lt;/a&gt;コンストラクタを、その後、特定のフェッチするためにそれを使用する &lt;code&gt;.txt&lt;/code&gt; ファイルを。フェッチが成功したら、 &lt;code&gt;text()&lt;/code&gt; を使用して応答から&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/USVString&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;（text）オブジェクトを読み取り、次に&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt; &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の&lt;a href=&quot;../element/innerhtml&quot;&gt; &lt;code&gt;innerHTML&lt;/code&gt; &lt;/a&gt;をtextオブジェクトに等しく設定します。</target>
        </trans-unit>
        <trans-unit id="65336506141e49ced35ca01c93a7db42dd169288" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;gl.linkProgram&lt;/code&gt; is called, WebGL creates a list of active uniforms. These are possible values of the &lt;code&gt;name&lt;/code&gt; attribute of return values of &lt;a href=&quot;getactiveuniform&quot;&gt;&lt;code&gt;getActiveUniform&lt;/code&gt;&lt;/a&gt;. WebGL generates one or more entries in the list depending on the declared type of the uniform in the shader:</source>
          <target state="translated">とき &lt;code&gt;gl.linkProgram&lt;/code&gt; が呼ばれ、WebGLのは、アクティブな制服のリストを作成します。これらは、&lt;a href=&quot;getactiveuniform&quot;&gt; &lt;code&gt;getActiveUniform&lt;/code&gt; &lt;/a&gt;の戻り値の &lt;code&gt;name&lt;/code&gt; 属性の可能な値です。 WebGLは、シェーダー内のユニフォームの宣言されたタイプに応じて、リストに1つ以上のエントリを生成します。</target>
        </trans-unit>
        <trans-unit id="1c00a4a6c6d9b8d9fd384dfd4eb97749f8c59ee3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;key 2&lt;/code&gt; is pressed, another &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event is fired for this new key press, and the &lt;code&gt;key&lt;/code&gt; property value for the event is set to be the string &lt;code&gt;&quot;@&quot;&lt;/code&gt; for the U.S keyboard type and &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; for the UK keyboard type, because of the active modifier &lt;code&gt;shift&lt;/code&gt; key. The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeinput&quot;&gt;beforeinput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/input&quot;&gt;input&lt;/a&gt;&lt;/code&gt; events are fired next because a character key has been produced. As we keep holding the key, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event continues to fire repeatedly and the &lt;a href=&quot;repeat&quot;&gt;&lt;code&gt;KeyboardEvent.repeat&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;true&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeinput&quot;&gt;beforeinput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/input&quot;&gt;input&lt;/a&gt;&lt;/code&gt; events are fired repeatedly as well.</source>
          <target state="translated">場合は &lt;code&gt;key 2&lt;/code&gt; 押されると、別 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントがこの新しいキーを押して焼成されており、 &lt;code&gt;key&lt;/code&gt; イベントのプロパティ値を文字列に設定されている &lt;code&gt;&quot;@&quot;&lt;/code&gt; USキーボードの種類とのために &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 英国のキーボードタイプのため、理由アクティブな修飾の &lt;code&gt;shift&lt;/code&gt; キー。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeinput&quot;&gt;beforeinput&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/input&quot;&gt;input&lt;/a&gt;&lt;/code&gt; 文字キーが生成されているので、次回のイベントは解雇されている。我々は、キーを押し続けると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントが繰り返し発射し続け、&lt;a href=&quot;repeat&quot;&gt; &lt;code&gt;KeyboardEvent.repeat&lt;/code&gt; &lt;/a&gt;プロパティがに設定されている &lt;code&gt;true&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeinput&quot;&gt;beforeinput&lt;/a&gt;&lt;/code&gt; そして &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/input&quot;&gt;input&lt;/a&gt;&lt;/code&gt; イベントも繰り返し発生します。</target>
        </trans-unit>
        <trans-unit id="a6c34cb56b17056af52fb7c99cb87c7ae6314aa8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;key 2&lt;/code&gt; is pressed, another &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event is fired for this new key press, and the &lt;code&gt;key&lt;/code&gt; property value for the event is set to the string &lt;code&gt;&quot;@&quot;&lt;/code&gt; for the U.S keyboard type and &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; for the UK keyboard type, because of the active modifier &lt;code&gt;shift&lt;/code&gt; key. The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeinput&quot;&gt;beforeinput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/input&quot;&gt;input&lt;/a&gt;&lt;/code&gt; events are fired next because a character key has been produced.</source>
          <target state="translated">場合は &lt;code&gt;key 2&lt;/code&gt; 押すと、別 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントは、この新しいキープレスのために解雇され、 &lt;code&gt;key&lt;/code&gt; イベントのプロパティ値を文字列に設定されている &lt;code&gt;&quot;@&quot;&lt;/code&gt; USキーボードの種類と用 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; のため、英国のキーボードタイプのためにアクティブな修飾子 &lt;code&gt;shift&lt;/code&gt; 。文字キーが生成されたため、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeinput&quot;&gt;beforeinput&lt;/a&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/input&quot;&gt;input&lt;/a&gt;&lt;/code&gt; イベントが次に発生します。</target>
        </trans-unit>
        <trans-unit id="2c8480c2a81a09eeb0c87d28ff0a9ce7012aead0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;nodeValue&lt;/code&gt; is defined to be &lt;code&gt;null&lt;/code&gt;, setting it has no effect.</source>
          <target state="translated">とき &lt;code&gt;nodeValue&lt;/code&gt; なるように定義された &lt;code&gt;null&lt;/code&gt; 設定、それは効果がありません。</target>
        </trans-unit>
        <trans-unit id="e52de17b252d5880c31877f43fc934f53773c5e4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;observe()&lt;/code&gt; is called, the specified options are &lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;attributeOldValue&lt;/code&gt;, which means that changes to attribute values will be reported, and each mutation record will include the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/oldValue&quot;&gt;&lt;code&gt;oldValue&lt;/code&gt;&lt;/a&gt; property specifying the attribute's previous value.</source>
          <target state="translated">とき &lt;code&gt;observe()&lt;/code&gt; と呼ばれ、指定されたオプションは、 &lt;code&gt;attributes&lt;/code&gt; と &lt;code&gt;attributeOldValue&lt;/code&gt; 手段は、属性値の変更が報告されること、及び各変異レコードが含まれます&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/oldValue&quot;&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;/a&gt;属性の以前の値を指定するプロパティを。</target>
        </trans-unit>
        <trans-unit id="4b1c9bf5952bdd20fdec294520df81e00480d7f7" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;observe()&lt;/code&gt; is called, the specified options include both &lt;code&gt;attributeFilter&lt;/code&gt; and &lt;a href=&quot;subtree&quot;&gt;&lt;code&gt;subtree&lt;/code&gt;&lt;/a&gt;, so that we monitor the attribute values for all of the nodes contained within the subtree rooted at the node with the ID &lt;code&gt;&quot;userlist&quot;&lt;/code&gt;. The &lt;a href=&quot;attributeoldvalue&quot;&gt;&lt;code&gt;attributeOldValue&lt;/code&gt;&lt;/a&gt; option is set to &lt;code&gt;true&lt;/code&gt; because we want the prior value of the changed attributes recorded and reported in the mutation records we receive.</source>
          <target state="translated">とき &lt;code&gt;observe()&lt;/code&gt; と呼ばれ、指定されたオプションが両方含ま &lt;code&gt;attributeFilter&lt;/code&gt; と&lt;a href=&quot;subtree&quot;&gt; &lt;code&gt;subtree&lt;/code&gt; &lt;/a&gt;、我々はIDを持つノードをルートとするサブツリー内に含まれるノードのすべての属性値を監視するようにすることを、 &lt;code&gt;&quot;userlist&quot;&lt;/code&gt; 。&lt;a href=&quot;attributeoldvalue&quot;&gt; &lt;code&gt;attributeOldValue&lt;/code&gt; の&lt;/a&gt;オプションがに設定されている &lt;code&gt;true&lt;/code&gt; 私たちが受け取る突然変異レコードに記録されていると報告された変更された属性の前の値をしたいので。</target>
        </trans-unit>
        <trans-unit id="c9c343d598c9e96a7a03caf3c687ec12d1d09163" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;containsNode()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; when a part of the node is part of the selection. When &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;containsNode()&lt;/code&gt; only returns &lt;code&gt;true&lt;/code&gt; when the entire node is part of the selection. If not specified, the default value &lt;code&gt;false&lt;/code&gt; is used.</source>
          <target state="translated">場合 &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;containsNode()&lt;/code&gt; 戻り &lt;code&gt;true&lt;/code&gt; ノードの一部は、選択の一部である場合。 &lt;code&gt;false&lt;/code&gt; の場合、 &lt;code&gt;containsNode()&lt;/code&gt; は、ノード全体が選択の一部である場合にのみ &lt;code&gt;true&lt;/code&gt; を返します。指定しない場合、デフォルト値の &lt;code&gt;false&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="1757cf49fb75cb499296668fa0e7aa95bef7e4ac" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;enabled&lt;/code&gt; indicates that the track is permitted to render its actual media to the output. When &lt;code&gt;enabled&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, the track only generates empty frames.</source>
          <target state="translated">とき &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;enabled&lt;/code&gt; トラックが出力にその実際のメディアをレンダリングするために許可されていることを示します。ときに &lt;code&gt;enabled&lt;/code&gt; に設定されている &lt;code&gt;false&lt;/code&gt; 、トラックは空のフレームを生成します。</target>
        </trans-unit>
        <trans-unit id="345021d319f05760aca16e21f0fe5435e012d3af" translate="yes" xml:space="preserve">
          <source>When Mozilla parses a document, it builds a content tree and then uses it to display the document.</source>
          <target state="translated">Mozilla はドキュメントを解析すると、コンテンツツリーを構築し、それを使ってドキュメントを表示します。</target>
        </trans-unit>
        <trans-unit id="ca4d8728e537e63f8bff68b844691beb5929709a" translate="yes" xml:space="preserve">
          <source>When Pointer lock is enabled, the standard &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; properties &lt;a href=&quot;mouseevent/clientx&quot;&gt;&lt;code&gt;clientX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mouseevent/clienty&quot;&gt;&lt;code&gt;clientY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mouseevent/screenx&quot;&gt;&lt;code&gt;screenX&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;mouseevent/screeny&quot;&gt;&lt;code&gt;screenY&lt;/code&gt;&lt;/a&gt; are held constant, as if the mouse is not moving. The &lt;a href=&quot;mouseevent/movementx&quot;&gt;&lt;code&gt;movementX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mouseevent/movementy&quot;&gt;&lt;code&gt;movementY&lt;/code&gt;&lt;/a&gt; properties continue to provide the mouse's change in position. There is no limit to &lt;a href=&quot;mouseevent/movementx&quot;&gt;&lt;code&gt;movementX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mouseevent/movementy&quot;&gt;&lt;code&gt;movementY&lt;/code&gt;&lt;/a&gt; values if the mouse is continuously moving in a single direction. The concept of the mouse cursor does not exist and the cursor cannot move off the window or be clamped by a screen edge.</source>
          <target state="translated">ポインターロックを有効にすると、標準の&lt;a href=&quot;mouseevent&quot;&gt; &lt;code&gt;MouseEvent&lt;/code&gt; &lt;/a&gt;プロパティ&lt;a href=&quot;mouseevent/clientx&quot;&gt; &lt;code&gt;clientX&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;mouseevent/clienty&quot;&gt; &lt;code&gt;clientY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;mouseevent/screenx&quot;&gt; &lt;code&gt;screenX&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;mouseevent/screeny&quot;&gt; &lt;code&gt;screenY&lt;/code&gt; &lt;/a&gt;は、マウスが動いていないかのように一定に保たれます。&lt;a href=&quot;mouseevent/movementx&quot;&gt; &lt;code&gt;movementX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;mouseevent/movementy&quot;&gt; &lt;code&gt;movementY&lt;/code&gt; &lt;/a&gt;プロパティは、位置のマウスの変更を提供し続けます。マウスが一方向に連続的に移動している場合、&lt;a href=&quot;mouseevent/movementx&quot;&gt; &lt;code&gt;movementX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;mouseevent/movementy&quot;&gt; &lt;code&gt;movementY&lt;/code&gt; &lt;/a&gt;値に制限はありません。マウスカーソルの概念が存在せず、カーソルがウィンドウから移動したり、画面の端に固定されたりすることはありません。</target>
        </trans-unit>
        <trans-unit id="2cc019597471a6524f1bac1cf983ebeb02ba98ae" translate="yes" xml:space="preserve">
          <source>When a &quot;message&quot; event occurs on the remote channel, our &lt;code&gt;handleReceiveMessage()&lt;/code&gt; method is called as the event handler.</source>
          <target state="translated">リモートチャネルで「メッセージ」イベントが発生すると、 &lt;code&gt;handleReceiveMessage()&lt;/code&gt; メソッドがイベントハンドラーとして呼び出されます。</target>
        </trans-unit>
        <trans-unit id="db8d7aef4a6cbdd35681f9dc8ef8559bbe58481c" translate="yes" xml:space="preserve">
          <source>When a &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt; object is created, its &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnection-binarytype&quot;&gt;&lt;code&gt;binaryType&lt;/code&gt;&lt;/a&gt; IDL attribute &lt;em&gt;MUST&lt;/em&gt; be set to the string &quot;&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dom-binarytype-arraybuffer&quot;&gt;&lt;code&gt;arraybuffer&lt;/code&gt;&lt;/a&gt;&quot;. Upon getting, the attribute &lt;em&gt;MUST&lt;/em&gt; return its most recent value (the value it was last set as). Upon setting, the user agent &lt;em&gt;MUST&lt;/em&gt; set the IDL attribute to the new value.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnection&quot;&gt; &lt;code&gt;PresentationConnection&lt;/code&gt; &lt;/a&gt;オブジェクトが作成されるとき、その&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnection-binarytype&quot;&gt; &lt;code&gt;binaryType&lt;/code&gt; &lt;/a&gt; IDL属性は文字列 &quot; &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dom-binarytype-arraybuffer&quot;&gt; &lt;code&gt;arraybuffer&lt;/code&gt; &lt;/a&gt; &quot;に設定され&lt;em&gt;なければなりません（MUST）&lt;/em&gt;。取得すると、属性&lt;em&gt;は&lt;/em&gt;最新の値（最後に設定された値）を返す必要があります。設定すると、ユーザエージェントは、&lt;em&gt;しなければならない&lt;/em&gt;新しい値にIDL属性を設定します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c1ea3d0e0172f80b7df79e8cf8711be3effa5e2" translate="yes" xml:space="preserve">
          <source>When a &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationrequest&quot;&gt;&lt;code&gt;&lt;code&gt;PresentationRequest&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; is constructed, the given &lt;code&gt;urls&lt;/code&gt;&lt;em&gt;MUST&lt;/em&gt; be used as the list of</source>
          <target state="translated">場合&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationrequest&quot;&gt; &lt;code&gt;&lt;code&gt;PresentationRequest&lt;/code&gt;&lt;/code&gt; が&lt;/a&gt;構成され、与えられた &lt;code&gt;urls&lt;/code&gt; &lt;em&gt;しなければならない&lt;/em&gt;のリストとして使用すること</target>
        </trans-unit>
        <trans-unit id="f15de1917621493e40f0358221679fb1576990bf" translate="yes" xml:space="preserve">
          <source>When a &lt;a href=&quot;web_authentication_api&quot;&gt;WebAuthn&lt;/a&gt; authenticator creates a new &lt;a href=&quot;publickeycredential&quot;&gt;PublicKeyCredential&lt;/a&gt; via a &lt;a href=&quot;credentialscontainer/create&quot;&gt;create()&lt;/a&gt; call, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot;&gt;&lt;code&gt;PublicKeyCredential.response&lt;/code&gt;&lt;/a&gt; value will be an AuthenticatorAttestationResponse object. This object contains two properties: 1) a clientDataJSON property inherited from &lt;a href=&quot;authenticatorresponse&quot;&gt;AuthenticatorResponse&lt;/a&gt;; and 2) an attestationObject that is an authenticator's way of providing a root of trust for the newly created keypair.</source>
          <target state="translated">とき&lt;a href=&quot;web_authentication_api&quot;&gt;WebAuthnの&lt;/a&gt;オーセンティケータが新しい作成&lt;a href=&quot;publickeycredential&quot;&gt;PublicKeyCredentialを&lt;/a&gt;経て&lt;a href=&quot;credentialscontainer/create&quot;&gt;作成（）&lt;/a&gt;呼び出し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot;&gt; &lt;code&gt;PublicKeyCredential.response&lt;/code&gt; の&lt;/a&gt;値はAuthenticatorAttestationResponseオブジェクトになります。このオブジェクトには2つのプロパティが含まれています。1）&lt;a href=&quot;authenticatorresponse&quot;&gt;AuthenticatorResponse&lt;/a&gt;から継承されたclientDataJSONプロパティ。 2）新しく作成されたキーペアに信頼のルートを提供する認証システムの方法であるattestationObject。</target>
        </trans-unit>
        <trans-unit id="8e8dbe9d1d32e1d29a72a5f4a20a1d66a5043d36" translate="yes" xml:space="preserve">
          <source>When a &lt;a href=&quot;web_authentication_api&quot;&gt;WebAuthn&lt;/a&gt; authenticator peforms an authentication via the &lt;a href=&quot;credentialscontainer/get&quot;&gt;get()&lt;/a&gt; call, the result is a new &lt;a href=&quot;publickeycredential&quot;&gt;PublicKeyCredential&lt;/a&gt;, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot;&gt;&lt;code&gt;PublicKeyCredential.response&lt;/code&gt;&lt;/a&gt; value will be an AuthenticatorAssertionResponse object. This object contains both the client data (i.e. - browser data) for the authentication as well as the data from the authenticator to cryptographically prove that the authentication is valid.</source>
          <target state="translated">A &lt;a href=&quot;web_authentication_api&quot;&gt;WebAuthn&lt;/a&gt;を介した認証システムpeforms認証&lt;a href=&quot;credentialscontainer/get&quot;&gt;取得（）&lt;/a&gt;の呼び出し結果は新しいもので、&lt;a href=&quot;publickeycredential&quot;&gt;PublicKeyCredential&lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot;&gt; &lt;code&gt;PublicKeyCredential.response&lt;/code&gt; の&lt;/a&gt;値はAuthenticatorAssertionResponseオブジェクトになります。このオブジェクトには、認証用のクライアントデータ（つまり、ブラウザデータ）と、認証が有効であることを暗号で証明する認証システムからのデータの両方が含まれています。</target>
        </trans-unit>
        <trans-unit id="fa34bac4d5b78f5f1179d4b152cfc4ae7349c7a9" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event occurs, here's what happens:</source>
          <target state="translated">ときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントが発生し、ここでは何が起こるかです：</target>
        </trans-unit>
        <trans-unit id="f6d89216914f956d4fbebbcc7442ca653da053ff" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event is fired, different functions are called depending on the value of the event's &lt;code&gt;pressure&lt;/code&gt; property.</source>
          <target state="translated">とき &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; のイベントが発生し、異なる機能は、イベントのの値に応じて呼ばれている &lt;code&gt;pressure&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="d1bc0127174ea8c77a00aefc46589818ea9560ff" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event is fired, different functions are called depending on the value of the event's &lt;code&gt;tangentialPressure&lt;/code&gt; property.</source>
          <target state="translated">とき &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; のイベントが発生し、異なる機能は、イベントのの値に応じて呼ばれている &lt;code&gt;tangentialPressure&lt;/code&gt; のプロパティ。</target>
        </trans-unit>
        <trans-unit id="eaab6831a7831a72438145e6c037c253150aa3a7" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event is fired, different functions are called depending on the value of the event's &lt;code&gt;twist&lt;/code&gt; property.</source>
          <target state="translated">とき &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; のイベントが発生し、異なる機能は、イベントのの値に応じて呼ばれている &lt;code&gt;twist&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="c22521f8ba3e847b30e6eac77cb27b3d878f164a" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event occurs, indicating that a new touch on the surface has occurred, the &lt;code&gt;handleStart()&lt;/code&gt; function below is called.</source>
          <target state="translated">場合 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; のイベントは、表面上の新たなタッチが発生したことを示す、発生、 &lt;code&gt;handleStart()&lt;/code&gt; 以下の関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8a2d44dfe13d1de375d1c7d01d298004d9defbcc" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; event occurs, indicating that a new touch on the surface has occurred, the &lt;code&gt;handleStart()&lt;/code&gt; function below is called.</source>
          <target state="translated">場合 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; のイベントは、表面上の新たなタッチが発生したことを示す、発生、 &lt;code&gt;handleStart()&lt;/code&gt; 以下の関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4cdd910e97d79fa321f055c4dc8dfdbb7c055e66" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;MediaRecorder&lt;/code&gt; object&amp;rsquo;s &lt;code&gt;pause()&lt;/code&gt;method is called, the browser queues a task that runs the below steps:</source>
          <target state="translated">とき &lt;code&gt;MediaRecorder&lt;/code&gt; のオブジェクトの &lt;code&gt;pause()&lt;/code&gt; メソッドが呼び出されると、ブラウザは、ステップの下に実行するタスクをキューイングします：</target>
        </trans-unit>
        <trans-unit id="4cc16ebe21ea63886b323aaaf83b81d8d5338f84" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;MediaRecordingErrorEvent&lt;/code&gt; occurs, you can determine to some extent what went wrong by examining the &lt;code&gt;error&lt;/code&gt; property within the &lt;code&gt;MediaRecorderErrorEvent&lt;/code&gt; received by the &lt;code&gt;MediaRecorder&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event handler, &lt;a href=&quot;../mediarecorder/onerror&quot;&gt;&lt;code&gt;onerror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">とき &lt;code&gt;MediaRecordingErrorEvent&lt;/code&gt; が発生し、あなたが調べることによって、何が悪かったのか、ある程度判断することができ &lt;code&gt;error&lt;/code&gt; の中にプロパティを &lt;code&gt;MediaRecorderErrorEvent&lt;/code&gt; で受信し &lt;code&gt;MediaRecorder&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; イベントハンドラ、&lt;a href=&quot;../mediarecorder/onerror&quot;&gt; &lt;code&gt;onerror&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71f659da0089676b3e8bb144ea5c6b801b333ea1" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;MediaSource&lt;/code&gt; object is played by an HTML media element, this property will return a &lt;a href=&quot;timeranges&quot;&gt;&lt;code&gt;TimeRanges&lt;/code&gt;&lt;/a&gt; object that contains the time ranges that the user is able to seek to.</source>
          <target state="translated">とき &lt;code&gt;MediaSource&lt;/code&gt; ののオブジェクトはHTMLのメディア要素によって再生され、このプロパティが返されます&lt;a href=&quot;timeranges&quot;&gt; &lt;code&gt;TimeRanges&lt;/code&gt; &lt;/a&gt;時間を含むオブジェクトをユーザが求めることができることの範囲です。</target>
        </trans-unit>
        <trans-unit id="b974a471a5e235abc87ad5ee3a086ae97c3d72ba" translate="yes" xml:space="preserve">
          <source>When a &lt;strong&gt;JavaScript runtime error&lt;/strong&gt; (including syntax errors and exceptions thrown within handlers) occurs, an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event using interface &lt;a href=&quot;../errorevent&quot;&gt;&lt;code&gt;ErrorEvent&lt;/code&gt;&lt;/a&gt; is fired at &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;window.onerror()&lt;/code&gt; is invoked (as well as handlers attached by &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;window.addEventListener&lt;/code&gt;&lt;/a&gt; (not only capturing)).</source>
          <target state="translated">場合は&lt;strong&gt;JavaScriptのランタイムエラー&lt;/strong&gt;（ハンドラ内投げ構文エラーや例外を含む）が発生し、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; インタフェース使用して、イベント&lt;a href=&quot;../errorevent&quot;&gt; &lt;code&gt;ErrorEvent&lt;/code&gt; &lt;/a&gt;で焼成される&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;window.onerror()&lt;/code&gt; が呼び出さ（並びにによって取り付けハンドラさ&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;window.addEventListener&lt;/code&gt; &lt;/a&gt;（のみキャプチャではありません） ）。</target>
        </trans-unit>
        <trans-unit id="91d3918a3715a5bbab51c7f40a0a631eeb86426f" translate="yes" xml:space="preserve">
          <source>When a PublicKeyCredential has been created with the &lt;a href=&quot;credentialscontainer/create&quot;&gt;create()&lt;/a&gt; call, it will include an AuthenticatorAttestationResponse. This is the authenticator's way of providing a cryptographic root of trust for the new key pair that has been generated.</source>
          <target state="translated">&lt;a href=&quot;credentialscontainer/create&quot;&gt;create（）&lt;/a&gt;コールでPublicKeyCredentialが作成されると、AuthenticatorAttestationResponseが含まれます。これは、生成された新しいキーペアに暗号化された信頼のルートを提供する認証システムの方法です。</target>
        </trans-unit>
        <trans-unit id="da7b9855efbd15898a4a422fcac4f21fb9b47476" translate="yes" xml:space="preserve">
          <source>When a PublicKeyCredential is the result of a &lt;a href=&quot;credentialscontainer/get&quot;&gt;get()&lt;/a&gt; call, it will include an AuthenticatorAssertionResponse. This is the authenticator's way of proving to a service that it has the key pair and that the authentication request is valid and approved.</source>
          <target state="translated">PublicKeyCredentialが&lt;a href=&quot;credentialscontainer/get&quot;&gt;get（）&lt;/a&gt;呼び出しの結果である場合、AuthenticatorAssertionResponseが含まれます。これは、サービスにキーペアがあり、認証要求が有効で承認されていることをサービスに証明する認証システムの方法です。</target>
        </trans-unit>
        <trans-unit id="ab1f8980074555e16cfbb37c2ce666ecd656410c" translate="yes" xml:space="preserve">
          <source>When a binary message is received on the data channel, the resulting &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event's &lt;a href=&quot;../messageevent/data&quot;&gt;&lt;code&gt;MessageEvent.data&lt;/code&gt;&lt;/a&gt; property is an object of the type specified by the &lt;code&gt;binaryType&lt;/code&gt;.</source>
          <target state="translated">バイナリメッセージがデータチャネルで受信されると、結果の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; イベントの&lt;a href=&quot;../messageevent/data&quot;&gt; &lt;code&gt;MessageEvent.data&lt;/code&gt; &lt;/a&gt;プロパティは、 &lt;code&gt;binaryType&lt;/code&gt; で指定されたタイプのオブジェクトになります。</target>
        </trans-unit>
        <trans-unit id="ee33e03c75654a7dfc5bc4d68ca37f09202ca87b" translate="yes" xml:space="preserve">
          <source>When a buffer plays, you will hear the left most sample frame, and then the one right next to it, etc. In the case of stereo, you will hear both channels at the same time. Sample frames are very useful, because they are independent of the number of channels, and represent time, in a useful way for doing precise audio manipulation.</source>
          <target state="translated">バッファが再生されると、左端のサンプルフレーム、右端のサンプルフレームなどが聞こえます。ステレオの場合は、両方のチャンネルを同時に聞くことになります。サンプルフレームはチャンネル数に依存せず、時間を表すもので、正確なオーディオ操作を行うのに便利です。</target>
        </trans-unit>
        <trans-unit id="5919c1e5e00e624eabdba7fd27e2625bb0eb4713" translate="yes" xml:space="preserve">
          <source>When a button is pressed, the generation is stopped, the stream is closed using &lt;a href=&quot;../readablestreamdefaultcontroller/close&quot;&gt;&lt;code&gt;ReadableStreamDefaultController.close()&lt;/code&gt;&lt;/a&gt;, and another function is run, which reads the data back out of the stream.</source>
          <target state="translated">ボタンを押すと、生成が停止し、&lt;a href=&quot;../readablestreamdefaultcontroller/close&quot;&gt; &lt;code&gt;ReadableStreamDefaultController.close()&lt;/code&gt; &lt;/a&gt;を使用してストリームが閉じ、別の関数が実行されて、ストリームからデータを読み取ります。</target>
        </trans-unit>
        <trans-unit id="6ceabaaf43dd282fe0e74a6660b5b256c897f70e" translate="yes" xml:space="preserve">
          <source>When a button is pressed, the generation is stopped, the stream is closed using &lt;a href=&quot;close&quot;&gt;&lt;code&gt;ReadableStreamDefaultController.close()&lt;/code&gt;&lt;/a&gt;, and another function is run, which reads the data back out of the stream.</source>
          <target state="translated">ボタンを押すと、生成が停止し、&lt;a href=&quot;close&quot;&gt; &lt;code&gt;ReadableStreamDefaultController.close()&lt;/code&gt; &lt;/a&gt;を使用してストリームが閉じ、別の関数が実行されて、ストリームからデータを読み取ります。</target>
        </trans-unit>
        <trans-unit id="5f1b6e8981c958a39fac0d9a6265ac5fc03e11dc" translate="yes" xml:space="preserve">
          <source>When a button is pressed, the generation is stopped, the stream is closed using &lt;a href=&quot;readablestreamdefaultcontroller/close&quot;&gt;&lt;code&gt;ReadableStreamDefaultController.close()&lt;/code&gt;&lt;/a&gt;, and another function is run, which reads the data back out of the stream.</source>
          <target state="translated">ボタンを押すと、生成が停止し、&lt;a href=&quot;readablestreamdefaultcontroller/close&quot;&gt; &lt;code&gt;ReadableStreamDefaultController.close()&lt;/code&gt; &lt;/a&gt;を使用してストリームが閉じ、別の関数が実行されて、ストリームからデータを読み取ります。</target>
        </trans-unit>
        <trans-unit id="bb6938d0c8bb2150829e80674b04f1b098a9ab09" translate="yes" xml:space="preserve">
          <source>When a client connects to a server, it sends a GET request to upgrade the connection to a WebSocket from a simple HTTP request. This is known as handshaking.</source>
          <target state="translated">クライアントがサーバに接続すると、単純な HTTP リクエストから WebSocket にアップグレードするために GET リクエストを送信します。これはハンドシェイクとして知られています。</target>
        </trans-unit>
        <trans-unit id="be49d99cffd1e6757e32c1e4eaeba72132d012f7" translate="yes" xml:space="preserve">
          <source>When a database is first created, its version is the integer 1. Each database has one version at a time; a database can't exist in multiple versions at once. The only way to change the version is by opening it with a greater version than the current one. This will start a &lt;a href=&quot;../idbversionchangerequest&quot;&gt;&lt;code&gt;versionchange&lt;/code&gt;&lt;/a&gt;&lt;em&gt;transaction&lt;/em&gt; and fire an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/upgradeneeded_indexedDB&quot;&gt;&lt;code&gt;upgradeneeded&lt;/code&gt;&lt;/a&gt; event. The only place where the schema of the database can be updated is inside the handler of that event.</source>
          <target state="translated">データベースが最初に作成されるとき、そのバージョンは整数1です。各データベースには一度に1つのバージョンがあります。データベースは、一度に複数のバージョンで存在することはできません。バージョンを変更する唯一の方法は、現在のバージョンよりも新しいバージョンで開くことです。これにより、&lt;a href=&quot;../idbversionchangerequest&quot;&gt; &lt;code&gt;versionchange&lt;/code&gt; &lt;/a&gt;&lt;em&gt;トランザクション&lt;/em&gt;が開始され、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/upgradeneeded_indexedDB&quot;&gt; &lt;code&gt;upgradeneeded&lt;/code&gt; &lt;/a&gt;イベントが発生します。データベースのスキーマを更新できる唯一の場所は、そのイベントのハンドラー内です。</target>
        </trans-unit>
        <trans-unit id="c3cdcafef0d709455ed24ef9f1099fd59b09176a" translate="yes" xml:space="preserve">
          <source>When a drag occurs, a translucent image is generated from the drag target (the element the &quot;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt;&quot; event is fired at), and follows the mouse pointer during the drag. This image is created automatically, so you do not need to create it yourself. However, you can use &lt;a href=&quot;../datatransfer/setdragimage&quot;&gt;&lt;code&gt;setDragImage()&lt;/code&gt;&lt;/a&gt; to specify a custom drag feedback image.</source>
          <target state="translated">ドラッグが発生すると、ドラッグターゲット（「 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; 」イベントが発生する要素）から半透明の画像が生成され、ドラッグ中にマウスポインタを追跡します。このイメージは自動的に作成されるため、自分で作成する必要はありません。ただし、&lt;a href=&quot;../datatransfer/setdragimage&quot;&gt; &lt;code&gt;setDragImage()&lt;/code&gt; &lt;/a&gt;を使用して、カスタムドラッグフィードバック画像を指定できます。</target>
        </trans-unit>
        <trans-unit id="b766074238c14a92fcafc2b3f8a96a6e2c023745" translate="yes" xml:space="preserve">
          <source>When a drag occurs, a translucent image is generated from the drag target (the element the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event is fired at), and follows the mouse pointer during the drag. This image is created automatically, so you do not need to create it yourself. However, if a custom image is desired, the &lt;code&gt;DataTransfer.setDragImage()&lt;/code&gt; method can be used to set the custom image to be used.</source>
          <target state="translated">ドラッグが発生すると、ドラッグターゲット（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベントが発生する要素）から半透明の画像が生成され、ドラッグ中はマウスポインターに従います。このイメージは自動的に作成されるため、自分で作成する必要はありません。ただし、カスタム画像が必要な場合は、 &lt;code&gt;DataTransfer.setDragImage()&lt;/code&gt; メソッドを使用して、使用するカスタム画像を設定できます。</target>
        </trans-unit>
        <trans-unit id="c776bdeb340d9fa318a532c906d85aa61b493b96" translate="yes" xml:space="preserve">
          <source>When a drag occurs, data must be associated with the drag which identifies &lt;em&gt;what&lt;/em&gt; is being dragged. For example, when dragging the selected text within a textbox, the data associated with the &lt;em&gt;drag data item&lt;/em&gt; is the text itself. Similarly, when dragging a link on a web page, the drag data item is the URL of the link.</source>
          <target state="translated">ドラッグが発生した場合、データは、&lt;em&gt;何&lt;/em&gt;がドラッグされて&lt;em&gt;いるか&lt;/em&gt;を識別するドラッグに関連付けられている必要があります。たとえば、テキストボックス内で選択したテキストをドラッグする場合、&lt;em&gt;ドラッグデータアイテムに&lt;/em&gt;関連付けられている&lt;em&gt;データ&lt;/em&gt;はテキストそのものです。同様に、Webページ上のリンクをドラッグする場合、ドラッグデータアイテムはリンクのURLです。</target>
        </trans-unit>
        <trans-unit id="a11780b7bd6fe28eef00dc6958f4cd8f037839ea" translate="yes" xml:space="preserve">
          <source>When a frame &lt;a href=&quot;../performanceobserver&quot;&gt;&lt;code&gt;observer&lt;/code&gt;&lt;/a&gt; is invoked, the observer callback is given one argument that is a &lt;a href=&quot;../performanceobserverentrylist&quot;&gt;&lt;code&gt;PerformanceObserverEntryList&lt;/code&gt;&lt;/a&gt; object. This object has three methods to retrieve frame data:</source>
          <target state="translated">フレーム&lt;a href=&quot;../performanceobserver&quot;&gt; &lt;code&gt;observer&lt;/code&gt; &lt;/a&gt;が呼び出されると、オブザーバーコールバックには、&lt;a href=&quot;../performanceobserverentrylist&quot;&gt; &lt;code&gt;PerformanceObserverEntryList&lt;/code&gt; &lt;/a&gt;オブジェクトである1つの引数が与えられます。このオブジェクトには、フレームデータを取得するための3つのメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="042fbea73c1a13406e05a52337d95b9965f1a347" translate="yes" xml:space="preserve">
          <source>When a frame &lt;a href=&quot;performanceobserver&quot;&gt;&lt;code&gt;observer&lt;/code&gt;&lt;/a&gt; is invoked, frame &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entries&lt;/code&gt;&lt;/a&gt; can be retrieved by calling &lt;a href=&quot;performanceobserverentrylist/getentriesbytype&quot;&gt;&lt;code&gt;PerformanceObserverEntryList.getEntriesByType()&lt;/code&gt;&lt;/a&gt; with an argument of &quot;&lt;code&gt;frame&lt;/code&gt;&quot;. This method returns a list of &quot;&lt;code&gt;frame&lt;/code&gt;&quot; &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; objects. Each frame object's &lt;a href=&quot;performanceentry/duration&quot;&gt;&lt;code&gt;duration&lt;/code&gt;&lt;/a&gt; property returns the timestamp of two consecutive frames. If this value is greater than the time needed to provide a good user experience, further analysis might be warranted.</source>
          <target state="translated">フレーム&lt;a href=&quot;performanceobserver&quot;&gt; &lt;code&gt;observer&lt;/code&gt; &lt;/a&gt;が呼び出されると、引数「 &lt;code&gt;frame&lt;/code&gt; 」を指定して&lt;a href=&quot;performanceobserverentrylist/getentriesbytype&quot;&gt; &lt;code&gt;PerformanceObserverEntryList.getEntriesByType()&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、フレーム&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;performance entries&lt;/code&gt; &lt;/a&gt;を取得できます。このメソッドは、「 &lt;code&gt;frame&lt;/code&gt; 」&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;オブジェクトのリストを返します。各フレームオブジェクトの&lt;a href=&quot;performanceentry/duration&quot;&gt; &lt;code&gt;duration&lt;/code&gt; &lt;/a&gt;プロパティは、2つの連続するフレームのタイムスタンプを返します。この値が、優れたユーザーエクスペリエンスを提供するために必要な時間よりも大きい場合は、さらに分析する必要があります。</target>
        </trans-unit>
        <trans-unit id="b6b05eb447d40c5628cdff3ad6200c0663384f50" translate="yes" xml:space="preserve">
          <source>When a fullscreen request fails</source>
          <target state="translated">フルスクリーンのリクエストが失敗した場合</target>
        </trans-unit>
        <trans-unit id="fefc52221985e22854158222b2b4b4a5defd08e4" translate="yes" xml:space="preserve">
          <source>When a key is pressed and held down, it begins to auto-repeat. This results in a sequence of events similar to the following being dispatched:</source>
          <target state="translated">キーが押されたまま長押しすると、自動リピートが始まります。これにより、以下のような一連のイベントがディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="133685e99bcb9b218dcbb3752147ab7232da05c2" translate="yes" xml:space="preserve">
          <source>When a matching performance entry is recorded, the performance observer's callback function&amp;mdash;set when creating the &lt;a href=&quot;../performanceobserver&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt;&amp;mdash;is invoked.</source>
          <target state="translated">一致するパフォーマンスエントリが記録されると、&lt;a href=&quot;../performanceobserver&quot;&gt; &lt;code&gt;PerformanceObserver&lt;/code&gt; の&lt;/a&gt;作成時に設定されたパフォーマンスオブザーバーのコールバック関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4d198decaba87bd6ce67f8bf13e6212a66b1708c" translate="yes" xml:space="preserve">
          <source>When a member returns an object of type &lt;code&gt;document&lt;/code&gt; (e.g., the &lt;code&gt;ownerDocument&lt;/code&gt; property of an element returns the &lt;code&gt;document&lt;/code&gt; to which it belongs), this object is the root &lt;code&gt;document&lt;/code&gt; object itself. The &lt;a href=&quot;../document&quot;&gt;DOM &lt;code&gt;document&lt;/code&gt; Reference&lt;/a&gt; chapter describes the &lt;code&gt;document&lt;/code&gt; object.</source>
          <target state="translated">メンバーが &lt;code&gt;document&lt;/code&gt; 型のオブジェクトを返す場合（たとえば、要素の &lt;code&gt;ownerDocument&lt;/code&gt; プロパティがそれが属する &lt;code&gt;document&lt;/code&gt; を返す）、このオブジェクトはルート &lt;code&gt;document&lt;/code&gt; オブジェクトそのものです。&lt;a href=&quot;../document&quot;&gt;DOMの &lt;code&gt;document&lt;/code&gt; 参照&lt;/a&gt;章では、 &lt;code&gt;document&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="0e69a282b1bde286b333215515ee4bf3da48c9d5" translate="yes" xml:space="preserve">
          <source>When a message comes back through the port from the worker, we check what result type it is, then insert the calculation result inside the appropriate result paragraph.</source>
          <target state="translated">ワーカーからポートを介してメッセージが戻ってきたら、それがどのような結果タイプのものであるかを確認し、計算結果を適切な結果段落の中に挿入します。</target>
        </trans-unit>
        <trans-unit id="e7a23055becad5a5ab49e2c79537dfa81b4ff116" translate="yes" xml:space="preserve">
          <source>When a message is posted, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event will be dispatched to each &lt;a href=&quot;broadcastchannel&quot;&gt;&lt;code&gt;BroadcastChannel&lt;/code&gt;&lt;/a&gt; object connected to this channel. There is no action by default, but a new function can be implemented using the &lt;a href=&quot;broadcastchannel/onmessage&quot;&gt;&lt;code&gt;onmessage&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="translated">メッセージがポストされると、このチャネルに接続されている各&lt;a href=&quot;broadcastchannel&quot;&gt; &lt;code&gt;BroadcastChannel&lt;/code&gt; &lt;/a&gt;オブジェクトに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; イベントが送出されます。デフォルトではアクションはありませんが、&lt;a href=&quot;broadcastchannel/onmessage&quot;&gt; &lt;code&gt;onmessage&lt;/code&gt; &lt;/a&gt;イベントハンドラーを使用して新しい関数を実装できます。</target>
        </trans-unit>
        <trans-unit id="81ff5b65239523a22a2f35d28d53f3fd560e8ccb" translate="yes" xml:space="preserve">
          <source>When a message is received back from the IFrame confirming that the original message was received successfully, this simply outputs the confirmation to a paragraph and empties the text input ready for the next message to be sent.</source>
          <target state="translated">元のメッセージが正常に受信されたことを確認するメッセージを IFrame から受信した場合、この確認は単に段落に出力され、次のメッセージを送信する準備ができているテキスト入力を空にします。</target>
        </trans-unit>
        <trans-unit id="be50c957d65a4fa4d687ef1b2a8c69414c6771ad" translate="yes" xml:space="preserve">
          <source>When a message is received back from the IFrame, the &lt;code&gt;onMessage&lt;/code&gt; function simply outputs the message to a paragraph.</source>
          <target state="translated">IFrameからメッセージが返されると、 &lt;code&gt;onMessage&lt;/code&gt; 関数はメッセージを段落に出力します。</target>
        </trans-unit>
        <trans-unit id="728f0a5e189d08adedb9b6d267511274c079f761" translate="yes" xml:space="preserve">
          <source>When a message is received from the main page we create a list item and insert it in the unordered list, setting the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextContent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt; of the list item equal to the event's &lt;code&gt;data&lt;/code&gt; attribute (this contains the actual message).</source>
          <target state="translated">メインページからメッセージを受信したら、リストアイテムを作成し、それを順序付けられていないリストに挿入します。リストアイテムの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextContent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; &lt;/a&gt;をイベントの &lt;code&gt;data&lt;/code&gt; 属性に等しく設定します（これには実際のメッセージが含まれます）。</target>
        </trans-unit>
        <trans-unit id="636dd19456e18454dd44615b7ce025d00b407d41" translate="yes" xml:space="preserve">
          <source>When a native &lt;code&gt;TextEncoder&lt;/code&gt; implementation is not available, the most light-weight solution would be to use &lt;a href=&quot;https://github.com/coolaj86/TextEncoderLite&quot;&gt;TextEncoderLite&lt;/a&gt; with &lt;a href=&quot;https://github.com/beatgammit/base64-js&quot;&gt;base64-js&lt;/a&gt;. Use the browser implementation when you can.</source>
          <target state="translated">ネイティブの &lt;code&gt;TextEncoder&lt;/code&gt; 実装が利用できない場合、最も軽量なソリューションは、&lt;a href=&quot;https://github.com/coolaj86/TextEncoderLite&quot;&gt;TextEncoderLite&lt;/a&gt;を&lt;a href=&quot;https://github.com/beatgammit/base64-js&quot;&gt;base64-jsで&lt;/a&gt;使用することです。可能な場合はブラウザ実装を使用してください。</target>
        </trans-unit>
        <trans-unit id="7f673776cd153c79228324d5ca3fd61e3c251da1" translate="yes" xml:space="preserve">
          <source>When a new &lt;a href=&quot;../headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; object is created using the &lt;a href=&quot;../headers/headers&quot;&gt;&lt;code&gt;Headers()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/constructor&quot;&gt;constructor&lt;/a&gt;, its guard is set to &lt;code&gt;none&lt;/code&gt; (the default). When a &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object is created, it has an associated &lt;a href=&quot;../headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; object whose guard is set as summarized below:</source>
          <target state="translated">&lt;a href=&quot;../headers/headers&quot;&gt; &lt;code&gt;Headers()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/constructor&quot;&gt;コンストラクター&lt;/a&gt;を使用して新しい&lt;a href=&quot;../headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt;オブジェクトが作成されると、そのガードは &lt;code&gt;none&lt;/code&gt; （デフォルト）に設定されます。ときは&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;オブジェクトが作成され、それが関連している&lt;a href=&quot;../headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt;そのガード下にまとめとして設定されたオブジェクトを：</target>
        </trans-unit>
        <trans-unit id="cabe0c91d8040d5324bf88423d69380576cff377" translate="yes" xml:space="preserve">
          <source>When a new &lt;code&gt;Request&lt;/code&gt; object is constructed, you can pass it a &lt;a href=&quot;readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;body&lt;/code&gt; property of its &lt;code&gt;RequestInit&lt;/code&gt; dictionary. This &lt;code&gt;Request&lt;/code&gt; could then be passed to a &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; to commence fetching the stream.</source>
          <target state="translated">新しい &lt;code&gt;Request&lt;/code&gt; オブジェクトが構築されると、その &lt;code&gt;RequestInit&lt;/code&gt; 辞書の &lt;code&gt;body&lt;/code&gt; プロパティで&lt;a href=&quot;readablestream&quot;&gt; &lt;code&gt;ReadableStream&lt;/code&gt; &lt;/a&gt;を渡すことができます。次に、この &lt;code&gt;Request&lt;/code&gt; &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt;に渡して、ストリームのフェッチを開始できます。</target>
        </trans-unit>
        <trans-unit id="158b4de7c3246cceff025412ef67392dad8ad5d8" translate="yes" xml:space="preserve">
          <source>When a new ICE candidate is received by your signaling code from the remote peer, you need to construct the &lt;code&gt;RTCIceCandidate&lt;/code&gt; object that encapsulates it. This is done in the event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event. If your client-side signaling layer builds and transmits a JSON string including the candidate to the remote peer, the remote peer might handle receiving that JSON message like this:</source>
          <target state="translated">新しいICE候補がシグナリングコードによってリモートピアから受信された場合、それをカプセル化する &lt;code&gt;RTCIceCandidate&lt;/code&gt; オブジェクトを構築する必要があります。これは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラーで行われます。クライアント側のシグナリングレイヤーがビルドし、候補を含むJSON文字列をリモートピアに送信する場合、リモートピアは次のようにそのJSONメッセージの受信を処理する可能性があります。</target>
        </trans-unit>
        <trans-unit id="669e5c87da7047d5828d69e231022ad6513921d4" translate="yes" xml:space="preserve">
          <source>When a non-empty string is assigned to the &lt;code&gt;returnValue&lt;/code&gt; Event property, a dialog box appears, asking the users for confirmation to leave the page (see example below). When no value is provided, the event is processed silently. Some implementations only show the dialog box if the frame or any embedded frame receives a user gesture or user interaction. See &lt;a href=&quot;#Browser_compatibility&quot;&gt;Browser compatibility&lt;/a&gt; for more information.</source>
          <target state="translated">空でない文字列が &lt;code&gt;returnValue&lt;/code&gt; イベントプロパティに割り当てられると、ダイアログボックスが表示され、ユーザーにページを離れる確認を求めます（下の例を参照）。値が指定されていない場合、イベントはサイレントに処理されます。一部の実装では、フレームまたは埋め込みフレームがユーザージェスチャーまたはユーザーインタラクションを受け取った場合にのみダイアログボックスが表示されます。詳細については、&lt;a href=&quot;#Browser_compatibility&quot;&gt;ブラウザの互換性&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c4eccf648008c891ebef61dfd08acd3a932ab689" translate="yes" xml:space="preserve">
          <source>When a proxy is used, if a tunnel connection is established, this property returns the ALPN Protocol ID of the tunneled protocol. Otherwise, this property returns the ALPN Protocol ID of the first hop to the proxy.</source>
          <target state="translated">プロキシを使用する場合、トンネル接続が確立されている場合、このプロパティは、トンネルされたプロトコルの ALPN プロトコル ID を返します。そうでない場合、このプロパティはプロキシへの最初のホップの ALPN プロトコル ID を返します。</target>
        </trans-unit>
        <trans-unit id="403ec2b5941417a15ea748c74c346d7e0bc012a8" translate="yes" xml:space="preserve">
          <source>When a resource (such as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt;) &lt;strong&gt;fails to load&lt;/strong&gt;, an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event using interface &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; is fired at the element that initiated the load, and the &lt;code&gt;onerror()&lt;/code&gt; handler on the element is invoked. These error events do not bubble up to window, but (at least in Firefox) can be handled with a single capturing &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;window.addEventListener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リソース（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; など&lt;/a&gt;）&lt;strong&gt;がの読み込み&lt;/strong&gt;に&lt;strong&gt;失敗する&lt;/strong&gt;と、読み込みを開始した要素で&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; イベント&lt;/a&gt;インターフェイスを使用した &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; イベントが発生し、要素の &lt;code&gt;onerror()&lt;/code&gt; ハンドラーが呼び出されます。これらのエラーイベントはウィンドウに到達しませんが、（少なくともFirefoxでは）単一のキャプチャー&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;window.addEventListener&lt;/code&gt; で&lt;/a&gt;処理できます。</target>
        </trans-unit>
        <trans-unit id="cfc9969839577a4f8eca330fab60572ce9c27a5b" translate="yes" xml:space="preserve">
          <source>When a runtime error occurs in the worker, its &lt;code&gt;onerror&lt;/code&gt; event handler is called. It receives an event named &lt;code&gt;error&lt;/code&gt; which implements the &lt;code&gt;ErrorEvent&lt;/code&gt; interface.</source>
          <target state="translated">ワーカーでランタイムエラーが発生すると、 &lt;code&gt;onerror&lt;/code&gt; イベントハンドラーが呼び出されます。 &lt;code&gt;ErrorEvent&lt;/code&gt; インターフェイスを実装する &lt;code&gt;error&lt;/code&gt; というイベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="970b4e51027433267f3cf90a50675eb985d6c262" translate="yes" xml:space="preserve">
          <source>When a second argument is present: If the second argument evaluates to &lt;code&gt;true&lt;/code&gt;, add the specified class value, and if it evaluates to &lt;code&gt;false&lt;/code&gt;, remove it.</source>
          <target state="translated">2番目の引数が存在する場合：2番目の引数が &lt;code&gt;true&lt;/code&gt; と評価された場合は、指定されたクラス値を追加し、 &lt;code&gt;false&lt;/code&gt; と評価された場合は削除します。</target>
        </trans-unit>
        <trans-unit id="53e6d3428e5f0918f19321a59276085f24d3a592" translate="yes" xml:space="preserve">
          <source>When a service worker is initially registered, pages won't use it until they next load. The &lt;code&gt;claim()&lt;/code&gt; method causes those pages to be controlled immediately. Be aware that this results in your service worker controlling pages that loaded regularly over the network, or possibly via a different service worker.</source>
          <target state="translated">Service Workerが最初に登録されると、ページは次に読み込まれるまでそれを使用しません。 &lt;code&gt;claim()&lt;/code&gt; メソッドは、それらのページがすぐに制御されるようになります。これにより、ネットワーク経由で、または別のService Workerを介して定期的に読み込まれるページをService Workerが制御することに注意してください。</target>
        </trans-unit>
        <trans-unit id="df8554fb4c299242d90854e2bbaf813f88a104b3" translate="yes" xml:space="preserve">
          <source>When a single user interaction with an input device generates a series of different input events, the &lt;code&gt;sourceCapabilities&lt;/code&gt; property for all of them will point to the same instance of &lt;code&gt;InputDeviceCapabilities&lt;/code&gt;. For example, when a user lifts their finger off of a touchscreen, several UIEvents may be generated including &lt;code&gt;touchend&lt;/code&gt;, &lt;code&gt;mousedown&lt;/code&gt;, &lt;code&gt;click&lt;/code&gt;, and &lt;code&gt;focus&lt;/code&gt;. All of these events must have the same &lt;code&gt;sourceCapabilities&lt;/code&gt; representing the touchscreen.</source>
          <target state="translated">入力デバイスとの単一のユーザーインタラクションが一連の異なる入力イベントを生成すると、それらすべての &lt;code&gt;sourceCapabilities&lt;/code&gt; プロパティが &lt;code&gt;InputDeviceCapabilities&lt;/code&gt; の同じインスタンスを指します。たとえば、ユーザーがタッチスクリーンから指を &lt;code&gt;touchend&lt;/code&gt; 、 &lt;code&gt;mousedown&lt;/code&gt; 、mousedown、 &lt;code&gt;click&lt;/code&gt; 、focusなどのいくつかのUIEventsが生成される場合があり &lt;code&gt;focus&lt;/code&gt; 。これらのイベントはすべて、タッチスクリーンを表す同じ &lt;code&gt;sourceCapabilities&lt;/code&gt; を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="03af423f8479c469120bee40c436b45f37f71578" translate="yes" xml:space="preserve">
          <source>When a syntax&lt;strong&gt;(?)&lt;/strong&gt; error occurs in a script, loaded from a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;different origin&lt;/a&gt;, the details of the syntax error are not reported to prevent leaking information (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=363897&quot;&gt;bug 363897&lt;/a&gt;). Instead the error reported is simply &lt;code&gt;&lt;strong&gt;&quot;Script error.&quot;&lt;/strong&gt;&lt;/code&gt; This behavior can be overriden in some browsers using the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; attribute on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; and having the server send the appropriate &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;CORS&lt;/a&gt; HTTP response headers. A workaround is to isolate &quot;Script error.&quot; and handle it knowing that the error detail is only viewable in the browser console and not accessible via JavaScript.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;別のオリジン&lt;/a&gt;からロードされたスクリプトで構文&lt;strong&gt;（？）&lt;/strong&gt;エラーが発生した場合、情報の漏洩を防ぐために構文エラーの詳細は報告されません（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=363897&quot;&gt;バグ363897を&lt;/a&gt;参照）。代わりに、報告されるエラーは単に &lt;code&gt;&lt;strong&gt;&quot;Script error.&quot;&lt;/strong&gt;&lt;/code&gt; この動作は、一部のブラウザーで&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 属性を使用してオーバーライドし、サーバーに適切な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;CORS&lt;/a&gt; HTTP応答ヘッダーを送信させることができます。回避策は、「スクリプトエラー」を特定することです。エラーの詳細はブラウザコンソールでのみ表示され、JavaScriptからはアクセスできないことを認識して処理します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b324ca6e987a2a4bdc1ae63b3db4593c1860f48" translate="yes" xml:space="preserve">
          <source>When a table has its &lt;code&gt;dir&lt;/code&gt; set to &lt;code&gt;&quot;rtl&quot;&lt;/code&gt;, the column order is arranged from right to left.</source>
          <target state="translated">テーブルの &lt;code&gt;dir&lt;/code&gt; が &lt;code&gt;&quot;rtl&quot;&lt;/code&gt; に設定されている場合、列の順序は右から左に配置されます。</target>
        </trans-unit>
        <trans-unit id="abec9a1a8685db55cc230635f0f0ba89d164c690" translate="yes" xml:space="preserve">
          <source>When a tone finishes playing</source>
          <target state="translated">音色の再生が終了した場合</target>
        </trans-unit>
        <trans-unit id="866ab665a070b9ef16e08881606071408ab6a91a" translate="yes" xml:space="preserve">
          <source>When a user begins to drag, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event is fired. In this example the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; listener is added to the draggable element itself; however, you could listen to a higher ancestor as drag events bubble up as most other events do. Within the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event, you can specify the drag data, the feedback image, and the drag effects, all of which are described below. However, only the drag data is required; the default image and drag effects are suitable in many situations.</source>
          <target state="translated">ユーザーがドラッグを開始すると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベントが発生します。この例では、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; リスナーがドラッグ可能な要素自体に追加されています。ただし、ドラッグイベントが他のほとんどのイベントと同様にバブルアップするので、上位の祖先を聞くことができます。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベント内で、ドラッグデータ、フィードバック画像、およびドラッグエフェクトを指定できます。これらについてはすべて以下で説明します。ただし、必要なのはドラッグデータだけです。デフォルトの画像とドラッグ効果は多くの状況で適しています。</target>
        </trans-unit>
        <trans-unit id="f349802d88e07efb840260a3059d9b2644d98333" translate="yes" xml:space="preserve">
          <source>When a user clicks on a notification generated by an app, you will be notified of this event in two different ways, depending on the circumstance:</source>
          <target state="translated">アプリで生成された通知をユーザーがクリックすると、状況に応じて2通りの方法で通知されます。</target>
        </trans-unit>
        <trans-unit id="2a45702911c0b317c0f3c1bd1861825561f965d4" translate="yes" xml:space="preserve">
          <source>When a user holds their mouse down or presses their finger on the cake on a touch screen, we can now call &lt;code&gt;growAlice&lt;/code&gt; to make all the animations play:</source>
          <target state="translated">ユーザーがマウスを押したままにするか、タッチスクリーンのケーキを指で押すと、 &lt;code&gt;growAlice&lt;/code&gt; を呼び出してすべてのアニメーションを再生できます。</target>
        </trans-unit>
        <trans-unit id="20dd8949ca26d674218a330eef44fef26005a7e1" translate="yes" xml:space="preserve">
          <source>When a user starts a WebRTC call to another user, a special description is created called an &lt;strong&gt;offer&lt;/strong&gt;. This description includes all the information about the caller's proposed configuration for the call. The recipient then responds with an &lt;strong&gt;answer&lt;/strong&gt;, which is a description of their end of the call. In this way, both devices share with one another the information needed in order to exchange media data. This exchange is handled using Interactive Connectivity Establishment (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt;, a protocol which lets two devices use an intermediary to exchange offers and answers even if the two devices are separated by Network Address Translation (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT&lt;/a&gt;).</source>
          <target state="translated">ユーザーが別のユーザーへのWebRTC呼び出しを開始すると、&lt;strong&gt;オファー&lt;/strong&gt;と呼ばれる特別な説明が作成され&lt;strong&gt;ます&lt;/strong&gt;。この説明には、発信者が提案した通話の構成に関するすべての情報が含まれています。次に、受信者は応答を&lt;strong&gt;返します&lt;/strong&gt;。これは、通話の終了の説明です。このようにして、両方のデバイスは、メディアデータを交換するために必要な情報を互いに共有します。この交換は、2つのデバイスがネットワークアドレス変換（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT&lt;/a&gt;）で分離されている場合でも、2つのデバイスが仲介者を使用してオファーと応答を交換できるようにするプロトコルであるInteractive Connectivity Establishment（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt;）を使用して処理されます。</target>
        </trans-unit>
        <trans-unit id="371a0ba3dc469c6c8bb3908bda0b22274054ffa1" translate="yes" xml:space="preserve">
          <source>When a web site or app using &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; receives a new ICE candidate from the remote peer over its signaling channel, it delivers the newly-received candidate to the browser's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; agent by calling &lt;code&gt;&lt;strong&gt;RTCPeerConnection.addIceCandidate()&lt;/strong&gt;&lt;/code&gt;. This adds this new remote candidate to the &lt;code&gt;RTCPeerConnection&lt;/code&gt;'s remote description, which describes the state of the remote end of the connection.</source>
          <target state="translated">&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;を使用するWebサイトまたはアプリが、シグナリングチャネルを介してリモートピアから新しいICE候補を受信すると、 &lt;code&gt;&lt;strong&gt;RTCPeerConnection.addIceCandidate()&lt;/strong&gt;&lt;/code&gt; を呼び出して、新しく受信した候補をブラウザーの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt;エージェントに配信します。これにより、この新しいリモート候補が &lt;code&gt;RTCPeerConnection&lt;/code&gt; のリモート記述に追加されます。これは、接続のリモートエンドの状態を記述しています。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88565eca7559efba83c52264975d1ec20453c872" translate="yes" xml:space="preserve">
          <source>When a web site or app using &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; receives a new ICE candidate from the remote peer over its signaling channel, it delivers the newly-received candidate to the browser's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; agent by calling &lt;code&gt;&lt;strong&gt;RTCPeerConnection.addIceCandidate()&lt;/strong&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;を使用するWebサイトまたはアプリが、シグナリングチャネルを介してリモートピアから新しいICE候補を受信すると、 &lt;code&gt;&lt;strong&gt;RTCPeerConnection.addIceCandidate()&lt;/strong&gt;&lt;/code&gt; を呼び出して、新しく受信した候補をブラウザーの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt;エージェントに配信します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed2e4a83c718be1dd5a45ab96f19ce8a766b521" translate="yes" xml:space="preserve">
          <source>When a window is loaded in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt;, its parent is the window with the element embedding the window.</source>
          <target state="translated">ウィンドウが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt; &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt; &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; &lt;/a&gt;に読み込まれる場合、その親は、ウィンドウを埋め込む要素を持つウィンドウです。</target>
        </trans-unit>
        <trans-unit id="54a534817fac9161b0cf7b643b11d95186685ec8" translate="yes" xml:space="preserve">
          <source>When a window is opened from another window (using &lt;a href=&quot;open&quot;&gt;&lt;code&gt;Window.open&lt;/code&gt;&lt;/a&gt; or a link with its &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; attribute set), it maintains a reference to that first window as &lt;code&gt;&lt;strong&gt;window.opener&lt;/strong&gt;&lt;/code&gt;. If the current window has no opener, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ウィンドウが（&lt;a href=&quot;open&quot;&gt; &lt;code&gt;Window.open&lt;/code&gt; &lt;/a&gt;またはその &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 属性が設定されたリンクを使用して）別のウィンドウから開かれると、その最初のウィンドウへの参照が &lt;code&gt;&lt;strong&gt;window.opener&lt;/strong&gt;&lt;/code&gt; として維持されます。現在のウィンドウにオープナーがない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="46a9ca0fb610dce55642aedb923c4a90aea5ea16" translate="yes" xml:space="preserve">
          <source>When a writer is created and starts writing to a stream (an &lt;strong&gt;active writer&lt;/strong&gt;), it is said to be &lt;strong&gt;locked&lt;/strong&gt; to it. Only one writer can write to a writable stream at one time. If you want another writer to start writing to your stream, you typically need to abort it before you then attach another writer to it.</source>
          <target state="translated">ライターが作成され、ストリーム（&lt;strong&gt;アクティブなライター&lt;/strong&gt;）への書き込みを開始すると、&lt;strong&gt;ロックされ&lt;/strong&gt;ているといいます。書き込み可能なストリームに一度に書き込むことができるライターは1人だけです。別のライターにストリームへの書き込みを開始させる場合は、通常、ストリームを中止してから、別のライターにストリームをアタッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="e06683457253a33529df8734e44861ff2b6ce711" translate="yes" xml:space="preserve">
          <source>When abort is closed, any previously enqueued chunks are just thrown away immediately and then the stream is moved to an errored state. This also triggers any &lt;code&gt;abort()&lt;/code&gt; method specified in the &lt;code&gt;WritableStream()&lt;/code&gt; constructor to be invoked.</source>
          <target state="translated">アボートが閉じられると、以前にエンキューされたチャンクはすぐに破棄され、ストリームはエラー状態に移行します。これにより、 &lt;code&gt;WritableStream()&lt;/code&gt; コンストラクタで指定されたすべての &lt;code&gt;abort()&lt;/code&gt; メソッドも呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cda570069962d7f4e3a6a927f44c9fdbf9272c41" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;IntersectionObserver&lt;/code&gt; is created, it's configured to watch for given ratios of visibility within the root. The configuration cannot be changed once the &lt;code&gt;IntersectionObserver&lt;/code&gt; is created, so a given observer object is only useful for watching for specific changes in degree of visibility; however, you can watch multiple target elements with the same observer.</source>
          <target state="translated">とき &lt;code&gt;IntersectionObserver&lt;/code&gt; が作成され、ルート内の視認性を与えられた比率を監視するように設定されました。 &lt;code&gt;IntersectionObserver&lt;/code&gt; が作成されると構成を変更できないため、特定のオブザーバーオブジェクトは、可視性の程度の特定の変更を監視する場合にのみ役立ちます。ただし、同じオブザーバーで複数のターゲット要素を監視できます。</target>
        </trans-unit>
        <trans-unit id="51d8efeb3cba38ce566a8e9d561e4019de2631f5" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;attribute&lt;/code&gt; is returned by a member (e.g., by the &lt;code&gt;createAttribute()&lt;/code&gt; method), it is an object reference that exposes a special (albeit small) interface for attributes. Attributes are nodes in the DOM just like elements are, though you may rarely use them as such.</source>
          <target state="translated">メンバーによって（たとえば、 &lt;code&gt;createAttribute()&lt;/code&gt; メソッドによって） &lt;code&gt;attribute&lt;/code&gt; が返される場合、それはオブジェクト参照であり、属性の（小さいとはいえ）特別なインターフェースを公開します。属性は、要素と同じようにDOM内のノードですが、そのように使用することはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="903a5a1b65ebe370e7e8eb7764e8ba8dc906f3a6" translate="yes" xml:space="preserve">
          <source>When an HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt;&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt;&lt;/a&gt; tag is found in the document;</source>
          <target state="translated">ドキュメントでHTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt; &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; &lt;/a&gt;タグが見つかった場合。</target>
        </trans-unit>
        <trans-unit id="e612122137d18dae39e4f6e3595f7689bba611e4" translate="yes" xml:space="preserve">
          <source>When an HTML document has been switched to &lt;code&gt;&lt;a href=&quot;designmode&quot;&gt;designMode&lt;/a&gt;&lt;/code&gt;, its &lt;code&gt;document&lt;/code&gt; object exposes an &lt;code&gt;execCommand&lt;/code&gt; method to run commands that manipulate the current editable region, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;form inputs&lt;/a&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable&quot;&gt;contentEditable&lt;/a&gt;&lt;/code&gt; elements.</source>
          <target state="translated">HTMLドキュメントが &lt;code&gt;&lt;a href=&quot;designmode&quot;&gt;designMode&lt;/a&gt;&lt;/code&gt; に切り替えられると、その &lt;code&gt;document&lt;/code&gt; オブジェクトは &lt;code&gt;execCommand&lt;/code&gt; メソッドを公開して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;フォーム入力&lt;/a&gt;や &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable&quot;&gt;contentEditable&lt;/a&gt;&lt;/code&gt; 要素など、現在の編集可能な領域を操作するコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="81e5ac6dfb671acf25b9969d1cf4166072a97f3f" translate="yes" xml:space="preserve">
          <source>When an animation is cancelled, its &lt;a href=&quot;starttime&quot;&gt;&lt;code&gt;startTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;currenttime&quot;&gt;&lt;code&gt;currentTime&lt;/code&gt;&lt;/a&gt; are set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">アニメーションがキャンセルされると、その&lt;a href=&quot;starttime&quot;&gt; &lt;code&gt;startTime&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;currenttime&quot;&gt; &lt;code&gt;currentTime&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="e53d60f44bbc93773243d5eaea948fd212da7233" translate="yes" xml:space="preserve">
          <source>When an attribute is set, it's value is always converted into a string. For example &lt;code&gt;null&lt;/code&gt; is converted into the string &quot;null&quot;.</source>
          <target state="translated">属性が設定されると、その値は常に文字列に変換されます。たとえば、 &lt;code&gt;null&lt;/code&gt; は文字列「null」に変換されます。</target>
        </trans-unit>
        <trans-unit id="ea0ce4f0a286821a32375960340a04bc9603c700" translate="yes" xml:space="preserve">
          <source>When an audio signal is processed, &lt;strong&gt;sampling&lt;/strong&gt; means the conversion of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_signal&quot;&gt;continuous signal&lt;/a&gt; to a &lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_signal&quot;&gt;discrete signal&lt;/a&gt;; or put another way, a continuous sound wave, such as a band playing live, is converted to a sequence of samples (a discrete-time signal) that allow a computer to handle the audio in distinct blocks.</source>
          <target state="translated">オーディオ信号が処理されるとき、&lt;strong&gt;サンプリング&lt;/strong&gt;とは&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_signal&quot;&gt;連続信号&lt;/a&gt;を&lt;a href=&quot;https://en.wikipedia.org/wiki/Discrete_signal&quot;&gt;離散信号に&lt;/a&gt;変換することを意味します。別の言い方をすれば、ライブで演奏するバンドなどの連続的な音波は、コンピュータが別個のブロックでオーディオを処理できるようにする一連のサンプル（離散時間信号）に変換されます。</target>
        </trans-unit>
        <trans-unit id="9faebab65940967c2e6f9c4fd02d4a6fab07057c" translate="yes" xml:space="preserve">
          <source>When an authenticator registers a new key pair with a service, the authenticator signs the public key with an attestation certificate. The attestation certificate is built in to the authenticator during manufacturing time and is specific to a device model. That is, all &quot;Samsung Galaxy S8&quot; phones, manufactured at a specific time or particular manufacturing run, have the same attestation certificate.</source>
          <target state="translated">認証器がサービスで新しいキー・ペアを登録するとき、認証器は認証証明書で公開鍵に署名します。認証証明書は、製造時に認証者に組み込まれており、デバイスモデルに固有のものです。つまり、特定の時期または特定の製造時に製造された「Samsung Galaxy S8」のすべての携帯電話は、同じ認証証明書を持っています。</target>
        </trans-unit>
        <trans-unit id="81053fbdec3400a9964b77dd50e33ec3335b3152" translate="yes" xml:space="preserve">
          <source>When an element has its dir set to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, the direction of the element is determined based on its first strong directionality character, or default to the directionality of its parent element.</source>
          <target state="translated">要素のdirが &lt;code&gt;&quot;auto&quot;&lt;/code&gt; に設定されている場合、要素の方向は、最初の強い方向性文字に基づいて決定されるか、デフォルトで親要素の方向性に決定されます。</target>
        </trans-unit>
        <trans-unit id="bc0d2327121fb5c86c1043b0857e58fbf959aa4c" translate="yes" xml:space="preserve">
          <source>When an error occurs while attempting to add the ICE candidate, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by this method is rejected, returning one of the errors below as the &lt;a href=&quot;../domexception/name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute in the specified &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; object passed to the rejection handler.</source>
          <target state="translated">ICE候補を追加しようとしたときにエラーが発生した場合、このメソッドによって返された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;は拒否され、拒否ハンドラに渡された指定の&lt;a href=&quot;../domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../domexception/name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性として以下のエラーの1つを返します。</target>
        </trans-unit>
        <trans-unit id="cf27f65291186cc9d89e2e779675d8c18f1dd3b3" translate="yes" xml:space="preserve">
          <source>When an incoming connection is created, a &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-receiving-user-agent&quot;&gt;receiving user agent&lt;/a&gt;&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-firing-an-event&quot;&gt;fires&lt;/a&gt; a &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-trusted-event&quot;&gt;trusted event&lt;/a&gt;, named &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-connectionavailable&quot;&gt;&lt;code&gt;connectionavailable&lt;/code&gt;&lt;/a&gt;, on a &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationreceiver&quot;&gt;&lt;code&gt;PresentationReceiver&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-trusted-event&quot;&gt;trusted event&lt;/a&gt; is fired at the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-presentation-controllers-monitor&quot;&gt;presentation controller's monitor&lt;/a&gt;, using the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnectionavailableevent&quot;&gt;&lt;code&gt;PresentationConnectionAvailableEvent&lt;/code&gt;&lt;/a&gt; interface, with the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnectionavailableevent-connection&quot;&gt;&lt;code&gt;connection&lt;/code&gt;&lt;/a&gt; attribute set to the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnection&quot;&gt;&lt;code&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; object that was created.</source>
          <target state="translated">着信接続が作成されると、&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-receiving-user-agent&quot;&gt;受信するユーザエージェントは、&lt;/a&gt;&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-firing-an-event&quot;&gt;発火&lt;/a&gt;&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-trusted-event&quot;&gt;、信頼できるイベント&lt;/a&gt;の名前、&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-connectionavailable&quot;&gt; &lt;code&gt;connectionavailable&lt;/code&gt; の&lt;/a&gt;上、&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationreceiver&quot;&gt; &lt;code&gt;PresentationReceiver&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-trusted-event&quot;&gt;信頼されたイベントが&lt;/a&gt;で焼成された&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-presentation-controllers-monitor&quot;&gt;プレゼンテーションコントローラのモニター&lt;/a&gt;使用して、&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnectionavailableevent&quot;&gt; &lt;code&gt;PresentationConnectionAvailableEvent&lt;/code&gt; の&lt;/a&gt;で、インターフェースを&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnectionavailableevent-connection&quot;&gt; &lt;code&gt;connection&lt;/code&gt; &lt;/a&gt;する属性セット&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#idl-def-presentationconnection&quot;&gt; &lt;code&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/code&gt; の&lt;/a&gt;作成されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1265604bfd664331bda197329b2c494bff23064c" translate="yes" xml:space="preserve">
          <source>When an object or array is stored, the properties and values in that object or array can also be anything that is a valid value.</source>
          <target state="translated">オブジェクトや配列が格納されている場合、そのオブジェクトや配列のプロパティや値は、有効な値であれば何でも構いません。</target>
        </trans-unit>
        <trans-unit id="411678c3b54d93aaff6705f227fed426c41ab733" translate="yes" xml:space="preserve">
          <source>When an user chooses to log in to a service, the server sends a challenge and the authenticator signs over it with a key pair previously registered to that service. This creates an assertion. Unlike the attestation, the format of the assertion is always the same regardless of the device being used.</source>
          <target state="translated">ユーザがサービスへのログインを選択すると、サーバはチャレンジを送信し、認証機能はそのサービスに事前に登録されているキー・ペアでそれに署名します。これにより、アサーションが作成されます。認証とは異なり、アサーションの形式は、使用するデバイスに関係なく常に同じです。</target>
        </trans-unit>
        <trans-unit id="85ab0909ff1646029a52e229bfa6d68a560ba970" translate="yes" xml:space="preserve">
          <source>When called on an HTML document, &lt;code&gt;getElementsByTagName()&lt;/code&gt; lower-cases its argument before proceeding. This is undesirable when trying to match camelCase SVG elements in a subtree in an HTML document. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/getElementsByTagNameNS&quot;&gt;&lt;code&gt;document.getElementsByTagNameNS()&lt;/code&gt;&lt;/a&gt; is useful in that case. See also &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=499656&quot;&gt;bug 499656&lt;/a&gt;.</source>
          <target state="translated">HTMLドキュメントで呼び出されると、 &lt;code&gt;getElementsByTagName()&lt;/code&gt; は、続行する前に引数を小文字にします。これは、HTMLドキュメントのサブツリーでcamelCase SVG要素を一致させようとする場合は望ましくありません。その場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/getElementsByTagNameNS&quot;&gt; &lt;code&gt;document.getElementsByTagNameNS()&lt;/code&gt; &lt;/a&gt;が役立ちます。&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=499656&quot;&gt;バグ499656&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="5b471b97ba5c05c78e6b2c1d11787b884e9db030" translate="yes" xml:space="preserve">
          <source>When called on an HTML element in a DOM flagged as an HTML document, &lt;code&gt;getAttribute()&lt;/code&gt; lower-cases its argument before proceeding.</source>
          <target state="translated">HTMLドキュメントとしてフラグが設定されたDOM内のHTML要素で呼び出されると、 &lt;code&gt;getAttribute()&lt;/code&gt; は続行する前にその引数を小文字にします。</target>
        </trans-unit>
        <trans-unit id="5cc5bf1c9e7f7d38fd44810ce93519458e7f53a8" translate="yes" xml:space="preserve">
          <source>When called on an HTML element in a DOM flagged as an HTML document, &lt;code&gt;getAttributeNode&lt;/code&gt; lower-cases its argument before proceeding.</source>
          <target state="translated">HTMLドキュメントとしてフラグが設定されたDOMのHTML要素で呼び出されると、 &lt;code&gt;getAttributeNode&lt;/code&gt; は続行する前にその引数を小文字にします。</target>
        </trans-unit>
        <trans-unit id="bb5c037a6d7ef05123d621bcd49a8d0ff98b576a" translate="yes" xml:space="preserve">
          <source>When called on an HTML element in an HTML document, &lt;code&gt;getElementsByTagName&lt;/code&gt; lower-cases the argument before searching for it. This is undesirable when trying to match camel-cased SVG elements (such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient&quot;&gt;&amp;lt;linearGradient&amp;gt;&lt;/a&gt;&lt;/code&gt;) in an HTML document. Instead, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/getElementsByTagNameNS&quot;&gt;&lt;code&gt;Element.getElementsByTagNameNS()&lt;/code&gt;&lt;/a&gt;, which preserves the capitalization of the tag name.</source>
          <target state="translated">HTMLドキュメントのHTML要素で呼び出されると、 &lt;code&gt;getElementsByTagName&lt;/code&gt; は引数を検索する前に小文字にします。これは、HTMLドキュメントでキャメルケースのSVG要素（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient&quot;&gt;&amp;lt;linearGradient&amp;gt;&lt;/a&gt;&lt;/code&gt; など）を一致させる場合には望ましくありません。代わりに、タグ名の大文字化を保持する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/getElementsByTagNameNS&quot;&gt; &lt;code&gt;Element.getElementsByTagNameNS()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="816badb97c9734b8cbe51bdd349e805a002aae56" translate="yes" xml:space="preserve">
          <source>When cast to string, either by appending an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) or using &lt;a href=&quot;../selection/tostring&quot;&gt;&lt;code&gt;Selection.toString()&lt;/code&gt;&lt;/a&gt;, this object returns the text selected.</source>
          <target state="translated">空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）を追加するか、&lt;a href=&quot;../selection/tostring&quot;&gt; &lt;code&gt;Selection.toString()&lt;/code&gt; &lt;/a&gt;を使用して文字列にキャストすると、このオブジェクトは選択されたテキストを返します。</target>
        </trans-unit>
        <trans-unit id="e1dbf2de15b458ada3ef751c3a72df9fba9e96b1" translate="yes" xml:space="preserve">
          <source>When changing the description by calling &lt;code&gt;setLocalDescription()&lt;/code&gt; or &lt;code&gt;setRemoteDescription()&lt;/code&gt;, the specified description is set as the pending description, and the WebRTC layer begins to evaluate whether or not it's acceptable. Once the proposed description has been agreed upon, the value of &lt;code&gt;currentLocalDescription&lt;/code&gt; or &lt;code&gt;currentRemoteDescription&lt;/code&gt; is changed to the pending description, and the pending description is set to null again, indicating that there isn't a pending description.</source>
          <target state="translated">&lt;code&gt;setLocalDescription()&lt;/code&gt; または &lt;code&gt;setRemoteDescription()&lt;/code&gt; を呼び出して説明を変更すると、指定された説明が保留中の説明として設定され、WebRTCレイヤーがそれが受け入れ可能かどうかの評価を開始します。提案された説明が合意されると、 &lt;code&gt;currentLocalDescription&lt;/code&gt; または &lt;code&gt;currentRemoteDescription&lt;/code&gt; の値が保留中の説明に変更され、保留中の説明が再びnullに設定され、保留中の説明がないことを示します。</target>
        </trans-unit>
        <trans-unit id="e38e4089f23e3ef4d5c0fc14fa2f4b901475d06e" translate="yes" xml:space="preserve">
          <source>When changing the gain value of a &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;, Google Chrome prior to version 64 (January 2018) would perform a smooth interpolation to prevent dezippering. Starting with version 64, the value is changed instantly to bring it in line with the Web Audio spec. See &lt;a href=&quot;https://www.chromestatus.com/feature/5287995770929152&quot;&gt;Chrome Platform Status&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; の&lt;/a&gt;ゲイン値を変更する場合、バージョン64（2018年1月）より前のGoogle Chromeはスムーズな補間を実行して、解凍を防止していました。バージョン64以降、値は即座に変更され、Web Audio仕様に合わせられます。詳細については、&lt;a href=&quot;https://www.chromestatus.com/feature/5287995770929152&quot;&gt;Chromeプラットフォームのステータス&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="ddc976224eb774f41a2720b96b89e93aa27d49e7" translate="yes" xml:space="preserve">
          <source>When clearing site storage units, an origin's box is treated as a single entity; if the user agent needs to clear it and the user approves, the entire data store is cleared rather than providing some means of clearing only data from individual APIs.</source>
          <target state="translated">サイトストレージユニットをクリアする場合、オリジンのボックスは単一のエンティティとして扱われます。ユーザーエージェントがクリアする必要があり、ユーザーが承認した場合、個々のAPIからのデータのみをクリアする何らかの手段を提供するのではなく、データストア全体がクリアされます。</target>
        </trans-unit>
        <trans-unit id="f32e4911e272d05e79a05d66034ae9be65522134" translate="yes" xml:space="preserve">
          <source>When constructing an instance of the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt;, you are able to supply an custom id via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentDetailsInit&quot;&gt;&lt;code&gt;PaymentDetailsInit&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;id&lt;/code&gt; member. If none is provided, the browser automatically sets the id value to a UUID.</source>
          <target state="translated">&lt;a href=&quot;../paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest&lt;/code&gt; の&lt;/a&gt;インスタンスを作成するとき、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentDetailsInit&quot;&gt; &lt;code&gt;PaymentDetailsInit&lt;/code&gt; &lt;/a&gt;ディクショナリの &lt;code&gt;id&lt;/code&gt; メンバーを介してカスタムIDを提供できます。何も指定されていない場合、ブラウザはid値を自動的にUUIDに設定します。</target>
        </trans-unit>
        <trans-unit id="ecb8b41e45656211d9a015af5ac0f02efc16838d" translate="yes" xml:space="preserve">
          <source>When content overflows window viewport dimensions, then scrollbar(s) (or some scrolling mechanism) are necessary to ensure that content can be accessed by users. Content can overflow window dimensions for several reasons which are outside the control of web authors:</source>
          <target state="translated">コンテンツがウィンドウのビューポートの寸法をオーバーフローした場合、ユーザーがコンテンツにアクセスできるようにするためには、スクロールバー(または何らかのスクロール機構)が必要になります。コンテンツがウィンドウの寸法をオーバーフローすることがあるのは、いくつかの理由がありますが、それはウェブ制作者のコントロールの範囲外です。</target>
        </trans-unit>
        <trans-unit id="547dede46448d778fb1b2d3d4a1e76f56ac72076" translate="yes" xml:space="preserve">
          <source>When copying a directory, the copy is always recursive; you can't leave out subfolders.</source>
          <target state="translated">ディレクトリをコピーするとき、コピーは常に再帰的に行われます。</target>
        </trans-unit>
        <trans-unit id="4d3847c2cd2e45986477e1f72c1bfe78af504d9e" translate="yes" xml:space="preserve">
          <source>When creating a graph that has a cycle, it is mandatory to have at least one &lt;code&gt;DelayNode&lt;/code&gt; in the cycle, or the nodes taking part in the cycle will be muted.</source>
          <target state="translated">サイクルを持つグラフを作成する場合、サイクルに少なくとも1つの &lt;code&gt;DelayNode&lt;/code&gt; が必要です。そうしないと、サイクルに参加しているノードがミュートされます。</target>
        </trans-unit>
        <trans-unit id="2a437ce003ff81d7c01e0f2ba43107a075d4502c" translate="yes" xml:space="preserve">
          <source>When creating an IIR filter, we pass in the &lt;code&gt;feedforward&lt;/code&gt; and &lt;code&gt;feedback&lt;/code&gt; coefficients as options (coefficients is how we describe the values). Both of these parameters are arrays, neither of which can be larger than 20 items.</source>
          <target state="translated">IIRフィルターを作成するとき、 &lt;code&gt;feedforward&lt;/code&gt; 係数と &lt;code&gt;feedback&lt;/code&gt; 係数をオプションとして渡します（係数は値の記述方法です）。これらのパラメーターは両方とも配列であり、どちらも20項目を超えることはできません。</target>
        </trans-unit>
        <trans-unit id="0e07e5358a6134e954bdac49f2b8e2f8621ed48c" translate="yes" xml:space="preserve">
          <source>When creating the &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;, the filter object is passed in as the third parameter, and the object method &lt;code&gt;acceptNode(&lt;em&gt;node&lt;/em&gt;)&lt;/code&gt; is called on every single node to determine whether or not to accept it. This function should return the constant &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt; for cases when the node should be accepted and &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt; for cases when the node should be rejected.</source>
          <target state="translated">&lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;を作成するとき、フィルターオブジェクトは3番目のパラメーターとして渡され、オブジェクトメソッド &lt;code&gt;acceptNode(&lt;em&gt;node&lt;/em&gt;)&lt;/code&gt; がすべての単一ノードで呼び出されて、それを受け入れるかどうかを決定します。この関数は、ノードを受け入れる必要がある場合は定数 &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt; を、ノードを &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt; 必要がある場合はNodeFilter.FILTER_REJECTを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="a9bdad8d3b8ff0e476d64b1474adafe7bb9f43b0" translate="yes" xml:space="preserve">
          <source>When creating the &lt;code&gt;TreeWalker&lt;/code&gt;, the filter object is passed in as the third parameter, and its method &lt;a href=&quot;../nodefilter/acceptnode&quot;&gt;&lt;code&gt;NodeFilter.acceptNode()&lt;/code&gt;&lt;/a&gt; is called on every single node to determine whether or not to accept it.</source>
          <target state="translated">&lt;code&gt;TreeWalker&lt;/code&gt; を作成するとき、フィルターオブジェクトが3番目のパラメーターとして渡され、そのメソッド&lt;a href=&quot;../nodefilter/acceptnode&quot;&gt; &lt;code&gt;NodeFilter.acceptNode()&lt;/code&gt; &lt;/a&gt;がすべての単一ノードで呼び出されて、それを受け入れるかどうかが決定されます。</target>
        </trans-unit>
        <trans-unit id="a55232b0345014c3ebefa7487379a5c33f26eecd" translate="yes" xml:space="preserve">
          <source>When dealing with security, the whole &lt;strong&gt;system&lt;/strong&gt; must be considered. In the case of the Web Crypto API, Web developers shouldn't consider only the security of the script, but the security of the connection to the server, because using Web Crypto over HTTP is not secure. The overall security can't be stronger than the security of the weakest part of the overall system.</source>
          <target state="translated">セキュリティを扱うときは、&lt;strong&gt;システム&lt;/strong&gt;全体を考慮する必要があります。Web Crypto APIの場合、Web開発者はスクリプトのセキュリティだけでなく、サーバーへの接続のセキュリティも考慮する必要があります。HTTPを介したWeb Cryptoの使用は安全ではないためです。全体的なセキュリティは、システム全体の最も弱い部分のセキュリティよりも強くなることはできません。</target>
        </trans-unit>
        <trans-unit id="a0d22632065225e2a7e489aad461a84719ffd1c4" translate="yes" xml:space="preserve">
          <source>When defining the &lt;a href=&quot;#scope&quot;&gt;scope&lt;/a&gt;, specify only the object stores you need. This way, you can run multiple transactions with non-overlapping scopes concurrently.</source>
          <target state="translated">&lt;a href=&quot;#scope&quot;&gt;スコープを&lt;/a&gt;定義するときは、必要なオブジェクトストアのみを指定します。このようにして、重複しないスコープを持つ複数のトランザクションを同時に実行できます。</target>
        </trans-unit>
        <trans-unit id="99ba34fb991d0b4af72fe2e8cdb499b5e8f75197" translate="yes" xml:space="preserve">
          <source>When defining the scope, specify only the object stores you need. This way, you can run multiple transactions with non-overlapping scopes concurrently.</source>
          <target state="translated">スコープを定義する際には、必要なオブジェクト ストアのみを指定します。これにより、スコープが重複しない複数のトランザクションを同時に実行することができます。</target>
        </trans-unit>
        <trans-unit id="bde041ca7649d46132ca411c0292d941a4d98727" translate="yes" xml:space="preserve">
          <source>When describing a codec for an &lt;a href=&quot;rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;codecPayloadType&lt;/code&gt; is a single 8-bit byte (or octet) specifying the codec to use for sending the stream.</source>
          <target state="translated">&lt;a href=&quot;rtcrtpsender&quot;&gt; &lt;code&gt;RTCRtpSender&lt;/code&gt; の&lt;/a&gt;コーデックを記述する場合、 &lt;code&gt;codecPayloadType&lt;/code&gt; は、ストリームの送信に使用するコーデックを指定する単一の8ビットバイト（またはオクテット）です。</target>
        </trans-unit>
        <trans-unit id="8808ea74a5c2279ba6319595f36fe2e06fe5b174" translate="yes" xml:space="preserve">
          <source>When dragging text, use the &lt;code&gt;text/plain&lt;/code&gt; type. The data should be the string to drag. For example:</source>
          <target state="translated">テキストをドラッグするときは、 &lt;code&gt;text/plain&lt;/code&gt; タイプを使用します。データはドラッグする文字列でなければなりません。例えば：</target>
        </trans-unit>
        <trans-unit id="2954ff4e77855af015954dd82532bda673b7b4ab" translate="yes" xml:space="preserve">
          <source>When dragging, there are several operations that may be performed. The &lt;code&gt;copy&lt;/code&gt; operation is used to indicate that the data being dragged will be copied from its present location to the drop location. The &lt;code&gt;move&lt;/code&gt; operation is used to indicate that the data being dragged will be moved, and the &lt;code&gt;link&lt;/code&gt; operation is used to indicate that some form of relationship or connection will be created between the source and drop locations.</source>
          <target state="translated">ドラッグするとき、実行できるいくつかの操作があります。 &lt;code&gt;copy&lt;/code&gt; 操作は、ドラッグされるデータは、ドロップ位置に、その現在の位置からコピーされることを示すために使用されます。 &lt;code&gt;move&lt;/code&gt; 操作がドラッグされるデータが移動されることを示すために使用され、 &lt;code&gt;link&lt;/code&gt; 動作は関係または接続のいくつかのフォームをソースと、ドロップ位置の間で作成されることを示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="06ec3d3fadb5877cf06936dfc1d912ef1e4adffe" translate="yes" xml:space="preserve">
          <source>When each octave element has been built, it's appended to the keyboard.</source>
          <target state="translated">各オクターブ要素が構築されると、それがキーボードに追加されます。</target>
        </trans-unit>
        <trans-unit id="8812c50481c1e217f21b51f9cdc3812019218753" translate="yes" xml:space="preserve">
          <source>When each peer's ICE layer begins to send candidates, it enters into an exchange among the various points in the chain that looks like this:</source>
          <target state="translated">各ピアのICE層が候補者の送信を開始すると、チェーン内の様々なポイント間でこのような交換が行われます。</target>
        </trans-unit>
        <trans-unit id="4dfd6c654a0a0250253e02d1f153430ef3910bcf" translate="yes" xml:space="preserve">
          <source>When element has &lt;code&gt;display: inline&lt;/code&gt;, then &lt;code&gt;clientLeft&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt; regardless of the element's border.</source>
          <target state="translated">要素に &lt;code&gt;display: inline&lt;/code&gt; 場合、 &lt;code&gt;clientLeft&lt;/code&gt; は要素の境界線に関係なく &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="538ffb5a52d165254694445488d91a187d048b52" translate="yes" xml:space="preserve">
          <source>When extreme changes in context are explicitly identified before they occur, then the users can determine if they wish to proceed or so they can be prepared for the change: not only they will not be confused or feel disoriented, but more experienced users can better decide how to open such links (in a new window or not, in the same window, in a new tab or not, in &quot;background&quot; or not).</source>
          <target state="translated">文脈の極端な変化が起こる前に明示的に識別された場合、ユーザーはその変化に備えるために、進むかどうかを判断することができます:彼らは混乱したり、混乱を感じることがないだけでなく、より経験豊富なユーザーは、そのようなリンクをどのように開くか(新しいウィンドウで開くかどうか、同じウィンドウで開くかどうか、新しいタブで開くかどうか、&quot;バックグラウンド &quot;で開くかどうか)をよりよく判断することができます。</target>
        </trans-unit>
        <trans-unit id="85e428bd96cda0422ff18a3ca8b64602f93eeece" translate="yes" xml:space="preserve">
          <source>When fetching a resource, if there are multiple HTTP redirects, and any of the redirects have an origin that is different from the current document, and the timing allow check algorithm passes for each redirected resource, this property returns the time immediately after receiving the last byte of the response of the last redirect; otherwise, zero is returned.</source>
          <target state="translated">リソースをフェッチする際に、複数のHTTPリダイレクトがあり、いずれかのリダイレクトが現在のドキュメントとは異なるオリジンを持ち、各リダイレクトされたリソースに対してタイミング許容チェックアルゴリズムが通過している場合、このプロパティは、最後のリダイレクトのレスポンスの最後のバイトを受信した直後の時間を返します。</target>
        </trans-unit>
        <trans-unit id="3d73d4840da1d9031b50cfa8215efcb73b3c6b6a" translate="yes" xml:space="preserve">
          <source>When firing a CustomEvent from privileged code (i.e. an extension) to non-privileged code (i.e. a webpage), security issues should be considered. Firefox and other Gecko applications restrict an object created in one context from being directly used for another, which will automatically prevent security holes, but these restrictions may also prevent your code from running as expected.</source>
          <target state="translated">特権コード (拡張機能など)から非特権コード (ウェブページなど)に CustomEvent を実行する場合、セキュリティの問題を考慮する必要があります。Firefox や他の Gecko アプリケーションは、あるコンテキストで作成されたオブジェクトが別のコンテキストで直接使用されることを制限します。</target>
        </trans-unit>
        <trans-unit id="931d837e34bb032e20136eec2d3ae2d5e3429093" translate="yes" xml:space="preserve">
          <source>When fullscreen mode is successfully engaged, the document which contains the element receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; event. When fullscreen mode is exited, the document again receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; event. Note that the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; event doesn't provide any information itself as to whether the document is entering or exiting fullscreen mode, but if the document has a non null &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/fullscreenElement&quot;&gt;&lt;code&gt;fullscreenElement&lt;/code&gt;&lt;/a&gt;, you know you're in fullscreen mode.</source>
          <target state="translated">全画面モードが正常に開始されると、要素を含むドキュメントは &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; イベントを受け取ります。フルスクリーンモードが終了すると、ドキュメントは再び &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; イベントを受け取ります。注意 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; のイベントは、文書がフルスクリーンモードに入るか出ているかどうかについてどのような情報自体を提供していませんが、文書が非nullである場合&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/fullscreenElement&quot;&gt; &lt;code&gt;fullscreenElement&lt;/code&gt; を&lt;/a&gt;、あなたはフルスクリーンモードでいる知っています。</target>
        </trans-unit>
        <trans-unit id="60fe4a51fbe090f163da5e58b1c3a616f0cfe554" translate="yes" xml:space="preserve">
          <source>When getModifierState() returns true on Gecko?</source>
          <target state="translated">Gecko で getModifierState()が true を返すとき?</target>
        </trans-unit>
        <trans-unit id="1d83c9a78b9cb84edd50601936994946a34f9673" translate="yes" xml:space="preserve">
          <source>When getting data from &lt;code&gt;getFloatFrequencyData()&lt;/code&gt; or &lt;code&gt;getByteFrequencyData()&lt;/code&gt;, any frequencies with an amplitude of &lt;code&gt;maxDecibels&lt;/code&gt; or higher will be returned as &lt;code&gt;+1.0&lt;/code&gt; or &lt;code&gt;255&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;getFloatFrequencyData()&lt;/code&gt; または &lt;code&gt;getByteFrequencyData()&lt;/code&gt; からデータを取得する場合、 &lt;code&gt;maxDecibels&lt;/code&gt; 以上の振幅を持つ周波数は、それぞれ &lt;code&gt;+1.0&lt;/code&gt; または &lt;code&gt;255&lt;/code&gt; として返されます。</target>
        </trans-unit>
        <trans-unit id="b7503c6eee2649d91a08bc3af27dcaf170236ee9" translate="yes" xml:space="preserve">
          <source>When getting data from &lt;code&gt;getFloatFrequencyData()&lt;/code&gt; or &lt;code&gt;getByteFrequencyData()&lt;/code&gt;, any frequencies with an amplitude of &lt;code&gt;minDecibels&lt;/code&gt; or lower will be returned as &lt;code&gt;0.0&lt;/code&gt; or 0, respectively.</source>
          <target state="translated">&lt;code&gt;getFloatFrequencyData()&lt;/code&gt; または &lt;code&gt;getByteFrequencyData()&lt;/code&gt; からデータを取得する場合、 &lt;code&gt;minDecibels&lt;/code&gt; 以下の振幅を持つ周波数は、それぞれ &lt;code&gt;0.0&lt;/code&gt; または0 として返されます。</target>
        </trans-unit>
        <trans-unit id="15548a1742c25ed6b58a6ae244f9ddfee215eb08" translate="yes" xml:space="preserve">
          <source>When implementing PushManager subscriptions, it is vitally important that you protect against CSRF/XSRF issues in your app. See the following articles for more information:</source>
          <target state="translated">PushManager サブスクリプションを実装する際には、アプリ内の CSRF/XSRF 問題から保護することが非常に重要です。詳細については、以下の記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="215e93c5ac585100289cb5066a79c08d009bdcb1" translate="yes" xml:space="preserve">
          <source>When in quirks mode, the &lt;code&gt;scrollingElement&lt;/code&gt; attribute returns the HTML &lt;code&gt;body&lt;/code&gt; element if it exists and is not &lt;a href=&quot;https://drafts.csswg.org/cssom-view/#potentially-scrollable&quot;&gt;potentially scrollable&lt;/a&gt;, otherwise it returns null.</source>
          <target state="translated">癖モードでは、ときに &lt;code&gt;scrollingElement&lt;/code&gt; の属性は、HTMLを返す &lt;code&gt;body&lt;/code&gt; 、それが存在しない場合は要素を&lt;a href=&quot;https://drafts.csswg.org/cssom-view/#potentially-scrollable&quot;&gt;潜在的にスクロール可能&lt;/a&gt;、それ以外の場合はNULLを返します。</target>
        </trans-unit>
        <trans-unit id="f9d2f403fbee5a0371152e5fc775872d7db309a0" translate="yes" xml:space="preserve">
          <source>When inserting HTML into a page by using &lt;code&gt;insertAdjacentHTML&lt;/code&gt; be careful not to use user input that hasn't been escaped.</source>
          <target state="translated">&lt;code&gt;insertAdjacentHTML&lt;/code&gt; を使用してページにHTMLを挿入する場合は、エスケープされていないユーザー入力を使用しないように注意してください。</target>
        </trans-unit>
        <trans-unit id="2face5f0b7ed1967344712b4040f658774097aef" translate="yes" xml:space="preserve">
          <source>When invoked with a string consisting of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths&quot;&gt;SVG path&lt;/a&gt; data, a new path is created from that description.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths&quot;&gt;SVGパス&lt;/a&gt;データで構成される文字列で呼び出されると、その説明から新しいパスが作成されます。</target>
        </trans-unit>
        <trans-unit id="0fa37dd444c1b5ffb1f12145e2d0e3f7ca6c2394" translate="yes" xml:space="preserve">
          <source>When invoked with another &lt;code&gt;Path2D&lt;/code&gt; object, a copy of the &lt;code&gt;path&lt;/code&gt; argument is created.</source>
          <target state="translated">別の &lt;code&gt;Path2D&lt;/code&gt; オブジェクトで呼び出されると、 &lt;code&gt;path&lt;/code&gt; 引数のコピーが作成されます。</target>
        </trans-unit>
        <trans-unit id="a53e08ee8aa6ac62cf922d2234ff6a1c6f09852a" translate="yes" xml:space="preserve">
          <source>When invoked, will empty all keys out of the storage.</source>
          <target state="translated">起動されると、ストレージからすべてのキーを空にします。</target>
        </trans-unit>
        <trans-unit id="7c6de2a28bfed4b9ba32899cd8c2429a452cb375" translate="yes" xml:space="preserve">
          <source>When invoking this method directly, no submit event is raised (in particular, the form's &lt;code&gt;onsubmit&lt;/code&gt; event handler is not run), and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot;&gt;constraint validation&lt;/a&gt; is not triggered either.</source>
          <target state="translated">このメソッドを直接呼び出すと、送信イベントは発生せず（特に、フォームの &lt;code&gt;onsubmit&lt;/code&gt; イベントハンドラーは実行されません）、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot;&gt;制約の検証&lt;/a&gt;もトリガーされません。</target>
        </trans-unit>
        <trans-unit id="62d45ca92f9517f71a3f209b5b95a09ac458d113" translate="yes" xml:space="preserve">
          <source>When it gets this request, the &lt;strong&gt;server&lt;/strong&gt; should send a pretty odd-looking (but still HTTP) response that looks like this (remember each header ends with &lt;code&gt;\r\n&lt;/code&gt; and put an extra &lt;code&gt;\r\n&lt;/code&gt; after the last one):</source>
          <target state="translated">このリクエストを受け取ると、&lt;strong&gt;サーバー&lt;/strong&gt;は次のような奇妙に見える（ただしHTTPである）応答を送信する必要があります（各ヘッダーは &lt;code&gt;\r\n&lt;/code&gt; 終わり、最後のヘッダーの後に余分な &lt;code&gt;\r\n&lt;/code&gt; を置くことに注意してください）。</target>
        </trans-unit>
        <trans-unit id="1c1692e30bcef2404cee756389d9cea218936288" translate="yes" xml:space="preserve">
          <source>When it takes a positive value it is a real gain, when negative it is an attenuation.</source>
          <target state="translated">それが正の値を取るとき、それは実質的な利得であり、負の値を取るとき、それは減衰です。</target>
        </trans-unit>
        <trans-unit id="0ae5bee557d9c9272e102b88fbfad4d5a969d111" translate="yes" xml:space="preserve">
          <source>When its value changes, as the user's preferred languages are changed a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/languagechange&quot;&gt;languagechange&lt;/a&gt;&lt;/code&gt; event is fired on the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">その値が変更されると、ユーザーの優先言語が変更されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/languagechange&quot;&gt;languagechange&lt;/a&gt;&lt;/code&gt; イベントが&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;オブジェクトで発生します。</target>
        </trans-unit>
        <trans-unit id="90cf237ff8e56b11687a19c6737df3ce64a1017c" translate="yes" xml:space="preserve">
          <source>When looping is enabled, the sound begins playing at the time specified as the start point when &lt;a href=&quot;start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; is called. When the time specified by the &lt;a href=&quot;loopend&quot;&gt;&lt;code&gt;loopEnd&lt;/code&gt;&lt;/a&gt; property is reached, playback continues at the time specified by &lt;a href=&quot;loopstart&quot;&gt;&lt;code&gt;loopStart&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">ループが有効になっている場合、&lt;a href=&quot;start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに開始点として指定された時間にサウンドの再生が開始されます。&lt;a href=&quot;loopend&quot;&gt; &lt;code&gt;loopEnd&lt;/code&gt; &lt;/a&gt;プロパティで指定された時間に達すると、loopStartで指定された時間で再生が続行され&lt;a href=&quot;loopstart&quot;&gt; &lt;code&gt;loopStart&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6a2d424ecb60622519388a142a990319875abb6" translate="yes" xml:space="preserve">
          <source>When moving a directory, the move is always recursive; you can't leave out subfolders.</source>
          <target state="translated">ディレクトリを移動するとき、移動は常に再帰的に行われます。</target>
        </trans-unit>
        <trans-unit id="f1bf6915fcb0876cbfb452bd4523b334fcdef515" translate="yes" xml:space="preserve">
          <source>When new tracks are added to the &lt;code&gt;RTCPeerConnection&lt;/code&gt;&amp;mdash; either by calling its &lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt;&lt;code&gt;addTrack()&lt;/code&gt;&lt;/a&gt; method or because of renegotiation of the stream's format&amp;mdash;a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event is set to the &lt;code&gt;RTCPeerConnection&lt;/code&gt; for each track added to the connection. Making use of newly added media requires implementing a handler for the &lt;code&gt;track&lt;/code&gt; event. A common need is to attach the incoming media to an appropriate HTML element. In our example, we add the track's stream to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element that displays the incoming video:</source>
          <target state="translated">新しいトラックが追加されたとき &lt;code&gt;RTCPeerConnection&lt;/code&gt; -その呼び出すことによってのいずれか&lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt; &lt;code&gt;addTrack()&lt;/code&gt; &lt;/a&gt;メソッドのため、またはストリームのフォーマットの再ネゴシエーションの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; イベントに設定されている &lt;code&gt;RTCPeerConnection&lt;/code&gt; 接続に加えトラック毎。新しく追加されたメディアを利用するには、 &lt;code&gt;track&lt;/code&gt; イベントのハンドラーを実装する必要があります。一般的なニーズは、着信メディアを適切なHTML要素に添付することです。この例では、着信ビデオを表示する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にトラックのストリームを追加します。</target>
        </trans-unit>
        <trans-unit id="8fa282965910599814d2e295744e01e2115ba58e" translate="yes" xml:space="preserve">
          <source>When no pages are using the current version, the new worker activates and becomes responsible for fetches.</source>
          <target state="translated">現在のバージョンを使用しているページがない場合、新しいワーカーが起動し、フェッチの責任者となります。</target>
        </trans-unit>
        <trans-unit id="7b667f6155d8918de818445c7301cf5daf675998" translate="yes" xml:space="preserve">
          <source>When numbers are extremely large (or extremely small) on computers they begin to become less and less precise because there are only so many ones and zeros that are used to represent them. The more operations that are done on larger numbers, the more and more errors accumulate into the result. When dividing by w, this can effectively increase the precision of very large numbers by operating on two potentially smaller, less error-prone numbers.</source>
          <target state="translated">コンピュータ上で数値が極端に大きくなると(または極端に小さくなると)、数値を表現するのに使われる1と0の数が非常に多くなるため、精度が低下していきます。大きな数に対してより多くの演算を行えば行うほど、結果にはより多くの誤差が蓄積されます。wで割る場合、これは、潜在的に小さく、誤差の少ない2つの数を操作することで、非常に大きな数の精度を効果的に向上させることができます。</target>
        </trans-unit>
        <trans-unit id="081a8cdbc8e662c681be1eefd201a61d32f6a8d4" translate="yes" xml:space="preserve">
          <source>When only one argument is present: Toggle the class value; i.e., if the class exists then remove it and return &lt;code&gt;false&lt;/code&gt;, if not, then add it and return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">引数が1つしかない場合：クラス値を切り替えます。つまり、クラスが存在する場合は削除してから &lt;code&gt;false&lt;/code&gt; を返し、存在しない場合は追加して &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ad839b2f539650a13de37b86845dc0102ff323ec" translate="yes" xml:space="preserve">
          <source>When our button is clicked, we prevent the form from submitting as normal and then send the value entered in our text input to the IFrame via the &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ボタンがクリックされると、フォームが通常どおり送信されないようにし、テキスト入力に入力された値を&lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel&lt;/code&gt; &lt;/a&gt;経由でIFrameに送信します。</target>
        </trans-unit>
        <trans-unit id="37586336583587a213a08db4df01979dde4b3ffc" translate="yes" xml:space="preserve">
          <source>When passed a key name and value, will add that key to the storage, or update that key's value if it already exists.</source>
          <target state="translated">キー名と値を渡すと、そのキーをストレージに追加します。</target>
        </trans-unit>
        <trans-unit id="be2997d2b3ccc462a2263e8660cd2a4d0fa0ffe7" translate="yes" xml:space="preserve">
          <source>When passed a key name, will remove that key from the storage.</source>
          <target state="translated">キー名を渡すと、そのキーをストレージから削除します。</target>
        </trans-unit>
        <trans-unit id="7a49270cc6131e60ab2563477a2294fb09d3b2ca" translate="yes" xml:space="preserve">
          <source>When passed a key name, will return that key's value.</source>
          <target state="translated">キー名を渡すと、そのキーの値を返します。</target>
        </trans-unit>
        <trans-unit id="1113729c3b7579559ff96b61dada291309f8c0be" translate="yes" xml:space="preserve">
          <source>When passed a number n, this method will return the name of the nth key in the storage.</source>
          <target state="translated">数値 n を渡すと、このメソッドはストレージ内の n 番目のキーの名前を返します。</target>
        </trans-unit>
        <trans-unit id="8095e25b62d000e13eb6255863c379be3b074531" translate="yes" xml:space="preserve">
          <source>When passed a valid media configuration, it returns a promise with information as to whether the media type is supported, and whether decoding such media would be smooth and power efficient.</source>
          <target state="translated">有効なメディア設定が渡されると、メディアタイプがサポートされているかどうか、そのようなメディアのデコードがスムーズで電力効率が良いかどうかの情報を持つ約束を返します。</target>
        </trans-unit>
        <trans-unit id="d7cc6fdf4f61b0a31f3b2ea3f41b6a93345e0d8e" translate="yes" xml:space="preserve">
          <source>When passed a valid media configuration, it returns a promise with information as to whether the media type is supported, and whether encoding such media would be smooth and power efficient.</source>
          <target state="translated">有効なメディア設定を渡すと、メディアタイプがサポートされているかどうか、そのようなメディアのエンコードがスムーズで電力効率が良いかどうかなどの情報を含むプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="b5dbb8016e4e618bf1d6de3834052f9e1c14f2dd" translate="yes" xml:space="preserve">
          <source>When playing sound on the web, it's important to allow the user to control it. Depending on the use case, there's a myriad of options, but we'll provide functionality to play/pause the sound, alter the track's volume, and pan it from left to right.</source>
          <target state="translated">ウェブ上でサウンドを再生する場合、ユーザーがコントロールできるようにすることが重要です。用途にもよりますが、音の再生/一時停止、トラックの音量変更、左から右へのパンなどの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="25caa96ed56e35d7d2b9bc8eaa2fad4a2feb8036" translate="yes" xml:space="preserve">
          <source>When pointer capture is set, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerover&quot;&gt;&lt;code&gt;pointerover&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerout&quot;&gt;&lt;code&gt;pointerout&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerenter&quot;&gt;&lt;code&gt;pointerenter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerleave&quot;&gt;&lt;code&gt;pointerleave&lt;/code&gt;&lt;/a&gt; events are only generated when crossing the boundary of the element that has capture set since other elements can no longer be targeted by the pointer. This has the effect of suppressing these events on all other elements.</source>
          <target state="translated">ポインタキャプチャが設定されている場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerover&quot;&gt; &lt;code&gt;pointerover&lt;/code&gt; は&lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerout&quot;&gt; &lt;code&gt;pointerout&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerenter&quot;&gt; &lt;code&gt;pointerenter&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerleave&quot;&gt; &lt;code&gt;pointerleave&lt;/code&gt; &lt;/a&gt;他の要素はもはやポインタによって標的とすることができるので、キャプチャが設定されていない要素の境界を横断するときにイベントにのみ生成されます。これは、他のすべての要素でこれらのイベントを抑制する効果があります。</target>
        </trans-unit>
        <trans-unit id="803eb401ef9424c0dd1a55a8c44174f01a800482" translate="yes" xml:space="preserve">
          <source>When possible, avoid polling &lt;code&gt;muted&lt;/code&gt; to monitor the track's muting status. Instead, add event listeners for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mute&quot;&gt;mute&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unmute&quot;&gt;unmute&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="translated">可能であれば、トラックのミュート状態を監視するために &lt;code&gt;muted&lt;/code&gt; たポーリングを回避します。代わりに、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mute&quot;&gt;mute&lt;/a&gt;&lt;/code&gt; イベントとミュート &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unmute&quot;&gt;unmute&lt;/a&gt;&lt;/code&gt; イベントのイベントリスナーを追加します。</target>
        </trans-unit>
        <trans-unit id="b1912c7e2a7ad62198a0f08bd99551faf6ff11ae" translate="yes" xml:space="preserve">
          <source>When preparing to open an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, you can change the codec parameters from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent's&lt;/a&gt; default configuration by calling &lt;code&gt;setCodecParameters()&lt;/code&gt;&lt;em&gt;before&lt;/em&gt; calling either &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;createAnswer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;を開く準備をするとき、&lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt; &lt;code&gt;createAnswer()&lt;/code&gt; を&lt;/a&gt;呼び出す&lt;em&gt;前に&lt;/em&gt; &lt;code&gt;setCodecParameters()&lt;/code&gt; を呼び出すことにより、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザーエージェントの&lt;/a&gt;デフォルト設定からコーデックパラメータを変更できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ee6493009b6431b9980b49942a6355d2a9ef723" translate="yes" xml:space="preserve">
          <source>When problems occur (such as a network timeout or issues pertaining to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS&quot;&gt;access control&lt;/a&gt;), an error event is generated. You can take action on this programmatically by implementing the &lt;code&gt;onerror&lt;/code&gt; callback on the EventSource object:</source>
          <target state="translated">ネットワークタイムアウトや&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS&quot;&gt;アクセス制御&lt;/a&gt;に関する問題などの問題が発生すると、エラーイベントが生成されます。EventSourceオブジェクトに &lt;code&gt;onerror&lt;/code&gt; コールバックを実装することにより、プログラムでこれを実行できます。</target>
        </trans-unit>
        <trans-unit id="43967ee727b9fa7d551a4702810bf536a051500b" translate="yes" xml:space="preserve">
          <source>When put all together with the rest of the HTML and the CSS not shown above, it looks and works like this:</source>
          <target state="translated">残りのHTMLと上に表示されていないCSSと一緒にまとめてみると、こんな感じになります。</target>
        </trans-unit>
        <trans-unit id="1d22a87170e59c2c29ea0fb54d09a04db32671bb" translate="yes" xml:space="preserve">
          <source>When reading the description (returned by &lt;a href=&quot;../rtcpeerconnection/localdescription&quot;&gt;&lt;code&gt;RTCPeerConnection.localDescription&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcpeerconnection/remotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.remoteDescription&lt;/code&gt;&lt;/a&gt;), the returned value is the value of &lt;code&gt;pendingLocalDescription&lt;/code&gt;/&lt;code&gt;pendingRemoteDescription&lt;/code&gt; if there's a pending description (that is, the pending description isn't &lt;code&gt;null&lt;/code&gt;); otherwise, the current description (&lt;code&gt;currentLocalDescription&lt;/code&gt;/&lt;code&gt;currentRemoteDescription&lt;/code&gt;) is returned.</source>
          <target state="translated">説明（&lt;a href=&quot;../rtcpeerconnection/localdescription&quot;&gt; &lt;code&gt;RTCPeerConnection.localDescription&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../rtcpeerconnection/remotedescription&quot;&gt; &lt;code&gt;RTCPeerConnection.remoteDescription&lt;/code&gt; &lt;/a&gt;によって返される）を読み取るとき、保留中の説明がある（つまり、保留中の説明が &lt;code&gt;null&lt;/code&gt; ではない）場合、戻り値は &lt;code&gt;pendingLocalDescription&lt;/code&gt; / &lt;code&gt;pendingRemoteDescription&lt;/code&gt; の値です。それ以外の場合は、現在の説明（ &lt;code&gt;currentLocalDescription&lt;/code&gt; / &lt;code&gt;currentRemoteDescription&lt;/code&gt; ）が返されます。</target>
        </trans-unit>
        <trans-unit id="8612bf8e013b9fd3e94709a3077ed536e8f96a80" translate="yes" xml:space="preserve">
          <source>When recording has stopped, the &lt;code&gt;state&lt;/code&gt; property returns a value of &quot;inactive&quot;, and a stop event is fired. We register an event handler for this using &lt;a href=&quot;../mediarecorder/onstop&quot;&gt;&lt;code&gt;mediaRecorder.onstop&lt;/code&gt;&lt;/a&gt;, and finalize our blob there from all the chunks we have received:</source>
          <target state="translated">記録が停止すると、 &lt;code&gt;state&lt;/code&gt; プロパティは「非アクティブ」の値を返し、停止イベントが発生します。&lt;a href=&quot;../mediarecorder/onstop&quot;&gt; &lt;code&gt;mediaRecorder.onstop&lt;/code&gt; &lt;/a&gt;を使用してこのためのイベントハンドラーを登録し、受け取ったすべてのチャンクからブロブをファイナライズします。</target>
        </trans-unit>
        <trans-unit id="cdeaeeb318f26705d3a5c755ea0f3c87fa0ffab4" translate="yes" xml:space="preserve">
          <source>When retrieving a dropped link, you should ensure you handle the case where multiple links may have been dragged, including any comments that appear in the data. For convenience, the special type &lt;code&gt;URL&lt;/code&gt; may be used to refer to the first valid link within the data for the &lt;code&gt;text/uri-list&lt;/code&gt; type. You should not add data using the &lt;code&gt;URL&lt;/code&gt; type; attempting to do so will just set the value of the &lt;code&gt;text/uri-list&lt;/code&gt; type instead.</source>
          <target state="translated">ドロップされたリンクを取得するときは、データに表示されるコメントを含め、複数のリンクがドラッグされた可能性がある場合に対処する必要があります。便宜上、特別なタイプの &lt;code&gt;URL&lt;/code&gt; を使用して、 &lt;code&gt;text/uri-list&lt;/code&gt; タイプのデータ内の最初の有効なリンクを参照できます。 &lt;code&gt;URL&lt;/code&gt; タイプを使用してデータを追加しないでください。そうしようとすると、代わりに &lt;code&gt;text/uri-list&lt;/code&gt; タイプの値が設定されます。</target>
        </trans-unit>
        <trans-unit id="696d52160b1e3be1741d07cdf9d07723c2cf0c7f" translate="yes" xml:space="preserve">
          <source>When set to &lt;var&gt;no or 0&lt;/var&gt;, this feature removes the system close command icon and system close menu item. It will only work for dialog windows (&lt;code&gt;dialog&lt;/code&gt; feature set). &lt;code&gt;close=no&lt;/code&gt; will override &lt;code&gt;minimizable=yes&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;no or 0&lt;/var&gt; 設定すると、この機能はシステムの閉じるコマンドアイコンとシステムの閉じるメニュー項目を削除します。ダイアログウィンドウ（ &lt;code&gt;dialog&lt;/code&gt; 機能セット）でのみ機能します。 &lt;code&gt;close=no&lt;/code&gt; は &lt;code&gt;minimizable=yes&lt;/code&gt; をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="15ee8d812737b39143c7fb57d7614507069983a4" translate="yes" xml:space="preserve">
          <source>When setting &lt;code&gt;responseType&lt;/code&gt; to a particular value, the author should make sure that the server is actually sending a response compatible with that format. If the server returns data that is not compatible with the &lt;code&gt;responseType&lt;/code&gt; that was set, the value of &lt;a href=&quot;response&quot;&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;responseType&lt;/code&gt; を特定の値に設定する場合、作成者はサーバーがその形式と互換性のある応答を実際に送信していることを確認する必要があります。互換性のないサーバリターンデータ場合 &lt;code&gt;responseType&lt;/code&gt; 設定された、の値&lt;a href=&quot;response&quot;&gt; &lt;code&gt;response&lt;/code&gt; &lt;/a&gt;になり &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a590456297f1f8daa1809fc0ea3649d7f02dce02" translate="yes" xml:space="preserve">
          <source>When setting our coefficients, the &lt;code&gt;feedforward&lt;/code&gt; values can't all be set to zero, otherwise nothing would be sent to the filter. Something like this is acceptable:</source>
          <target state="translated">係数を設定するとき、 &lt;code&gt;feedforward&lt;/code&gt; 値をすべてゼロに設定することはできません。そうしないと、フィルターに何も送信されません。このようなものは許容されます：</target>
        </trans-unit>
        <trans-unit id="2319f30338438d879bc2e193b33159ccd9fe8936" translate="yes" xml:space="preserve">
          <source>When setting the value of &lt;code&gt;direction&lt;/code&gt;, the following exceptions can occur:</source>
          <target state="translated">&lt;code&gt;direction&lt;/code&gt; の値を設定すると、次の例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="98988dc7aa1cb1eb0462f1becd5ffb24aa01eb7d" translate="yes" xml:space="preserve">
          <source>When starting the signaling process, an &lt;strong&gt;offer&lt;/strong&gt; is created by the user initiating the call. This offer includes a session description, in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; format, and needs to be delivered to the receiving user, which we'll call the &lt;strong&gt;callee&lt;/strong&gt;. The callee responds to the offer with an &lt;strong&gt;answer&lt;/strong&gt; message, also containing an SDP description. Our signaling server will use WebSocket to transmit offer messages with the type &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt;, and answer messages with the type &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt;. These messages have the following fields:</source>
          <target state="translated">シグナリングプロセスを開始すると、コールを開始したユーザーによって&lt;strong&gt;オファー&lt;/strong&gt;が作成されます。このオファーには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt;形式のセッションの説明が含まれており、受信側のユーザーに配信する必要があります。これを&lt;strong&gt;呼び出し先&lt;/strong&gt;と呼びます。呼び出し先は、SDPの説明を含む&lt;strong&gt;応答&lt;/strong&gt;メッセージでオファーに&lt;strong&gt;応答し&lt;/strong&gt;ます。シグナリングサーバーは、WebSocketを使用して、タイプが &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; のオファーメッセージとタイプが &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt; の応答メッセージを送信します。これらのメッセージには次のフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="81bc27e6843e09c3f87f20bab3f68914edebd437" translate="yes" xml:space="preserve">
          <source>When testing you can get around the HTTPS restriction by checking the &quot;Enable Service Workers over HTTP (when toolbox is open)&quot; option in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Settings&quot;&gt;Firefox Developer Tools settings&lt;/a&gt;.</source>
          <target state="translated">テストする場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Settings&quot;&gt;Firefox Developer Tools設定の&lt;/a&gt; [HTTPを介してService Workersを有効にする（ツールボックスが開いている場合）]オプションをチェックすることにより、HTTPS制限を回避できます。</target>
        </trans-unit>
        <trans-unit id="3dce835c28213f3bb867cdb69f7c2acf000e9f3c" translate="yes" xml:space="preserve">
          <source>When that happens, we know the video has started playing, so we call our &lt;code&gt;getCurrentSettings()&lt;/code&gt; function (described above) to display the actual settings that the browser decided upon after considering our constraints and the capabilities of the hardware.</source>
          <target state="translated">これが発生すると、ビデオの再生が開始されたことがわかるため、 &lt;code&gt;getCurrentSettings()&lt;/code&gt; 関数（上記）を呼び出して、ハードウェアの制約と機能を考慮した後、ブラウザーが決定した実際の設定を表示します。</target>
        </trans-unit>
        <trans-unit id="170458374de8d9d34b21effc3f5cd7cf1d8ede7e" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object is created, &lt;code&gt;dropEffect&lt;/code&gt; is set to a string value. On getting, it returns its current value. On setting, if the new value is one of the values listed below, then the property's current value will be set to the new value and other values will be ignored.</source>
          <target state="translated">とき&lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt;オブジェクトが作成され、 &lt;code&gt;dropEffect&lt;/code&gt; プロパティは、文字列値に設定されています。取得すると、現在の値を返します。設定時に、新しい値が以下にリストされている値のいずれかである場合、プロパティの現在の値は新しい値に設定され、他の値は無視されます。</target>
        </trans-unit>
        <trans-unit id="1e4a897014deee64b512b044886966ea42c42661" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object's ICE connection state changes to &lt;code&gt;&quot;failed&quot;&lt;/code&gt;, you should try to trigger an &lt;a href=&quot;../webrtc_api/session_lifetime#ICE_restart&quot;&gt;ICE restart&lt;/a&gt;.</source>
          <target state="translated">とき&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;オブジェクトのICE接続状態に変わり &lt;code&gt;&quot;failed&quot;&lt;/code&gt; 、あなたがトリガするようにしてください&lt;a href=&quot;../webrtc_api/session_lifetime#ICE_restart&quot;&gt;ICEの再起動を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f2e55a38c36655d933210552203f47251809730" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;fetch request&lt;/a&gt; is initiated, we pass in the &lt;code&gt;AbortSignal&lt;/code&gt; as an option inside the request's options object (see &lt;code&gt;{signal}&lt;/code&gt;, below). This associates the signal and controller with the fetch request and allows us to abort it by calling &lt;a href=&quot;abort&quot;&gt;&lt;code&gt;AbortController.abort()&lt;/code&gt;&lt;/a&gt;, as seen below in the second event listener.</source>
          <target state="translated">場合&lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;フェッチ要求が&lt;/a&gt;開始され、我々は渡し &lt;code&gt;AbortSignal&lt;/code&gt; （参照要求のオプション・オブジェクト内のオプションとして &lt;code&gt;{signal}&lt;/code&gt; 以下）。これにより、信号とコントローラーがフェッチ要求に関連付けられ、以下の2番目のイベントリスナーに示されているように、&lt;a href=&quot;abort&quot;&gt; &lt;code&gt;AbortController.abort()&lt;/code&gt; を&lt;/a&gt;呼び出すことで信号とコントローラーを中止できます。</target>
        </trans-unit>
        <trans-unit id="bfb74bd244de5d5466e811370eee97f905789dcf" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;fetch request&lt;/a&gt; is initiated, we pass in the &lt;code&gt;AbortSignal&lt;/code&gt; as an option inside the request's options object (see &lt;code&gt;{signal}&lt;/code&gt;, below). This associates the signal and controller with the fetch request and allows us to abort it by calling &lt;a href=&quot;abortcontroller/abort&quot;&gt;&lt;code&gt;AbortController.abort()&lt;/code&gt;&lt;/a&gt;, as seen below in the second event listener.</source>
          <target state="translated">場合&lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;フェッチ要求が&lt;/a&gt;開始され、我々は渡し &lt;code&gt;AbortSignal&lt;/code&gt; （参照要求のオプション・オブジェクト内のオプションとして &lt;code&gt;{signal}&lt;/code&gt; 以下）。これにより、信号とコントローラーがフェッチ要求に関連付けられ、以下の2番目のイベントリスナーに示されているように、&lt;a href=&quot;abortcontroller/abort&quot;&gt; &lt;code&gt;AbortController.abort()&lt;/code&gt; を&lt;/a&gt;呼び出すことで信号とコントローラーを中止できます。</target>
        </trans-unit>
        <trans-unit id="0b4be292eea0d62bed233f932a55f02cfb7dc31c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; offer is received by the remote peer, it calls its &lt;code&gt;holdEnded()&lt;/code&gt; method:</source>
          <target state="translated">場合 &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; オファーがリモートピアによって受信され、その呼び出し &lt;code&gt;holdEnded()&lt;/code&gt; メソッドを：</target>
        </trans-unit>
        <trans-unit id="6e0833b39914236c0c18fdf6c35e8d2ad6272fdb" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">ときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントハンドラが終了し、ロードイベントが完了すると、それはです。このイベントがまだ送信されていないか、まだ完了していない場合は、 &lt;code&gt;0.&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="155be4bdc0e49aedda66d74b36e03f99a0570c78" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event was sent for the current document. If this event has not yet been sent, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">現在のドキュメントに対して &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントが送信されたとき。このイベントがまだ送信されていない場合は、 &lt;code&gt;0.&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="6cd684a1da502ba55e06034dbbe608b4c135ecec" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Mouseover&quot;&gt;&lt;code&gt;mouseover&lt;/code&gt;&lt;/a&gt; event occurs on a key, we want to start playing the corresponding note. The &lt;code&gt;notePressed()&lt;/code&gt; function is used as the event handler for these events.</source>
          <target state="translated">ときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Mouseover&quot;&gt; &lt;code&gt;mouseover&lt;/code&gt; &lt;/a&gt;イベントがキーに発生し、我々は対応するノートの再生を開始します。 &lt;code&gt;notePressed()&lt;/code&gt; 関数は、これらのイベントのイベントハンドラとして使用されています。</target>
        </trans-unit>
        <trans-unit id="42ebd58fc29230c0a260ba3031de970a3c61db76" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベントハンドラーが終了したとき。前のドキュメントがない場合、または前のドキュメント、または必要なリダイレクトの1つが同じ生成元でない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cc03a551d332d5cd1fa1a4ddf2018e191917b767" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event has been thrown, indicating the time at which the previous document in the window began to unload. If there is no previous document, or if the previous document or one of the needed redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">ときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベントは、ウィンドウ内の前のドキュメントがアンロードに開始された時刻を示す、スローされました。前のドキュメントがない場合、または前のドキュメントまたは必要なリダイレクトの1つが同じ生成元でない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2a47d8b540256fcfc3d14f8c14a13539b4826781" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;close&lt;/dfn&gt;()&lt;/code&gt; method is called on a &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; begins the process of closing the connection by sending an empty &lt;code&gt;closeMessage&lt;/code&gt; with the &lt;code&gt;closeReason&lt;/code&gt; set to &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;&lt;dfn&gt;close&lt;/dfn&gt;()&lt;/code&gt; メソッドは、上で呼び出され&lt;a href=&quot;../presentationconnection&quot;&gt; &lt;code&gt;PresentationConnection&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザエージェントは&lt;/a&gt;空送信することによって、接続を閉じる処理始まる &lt;code&gt;closeMessage&lt;/code&gt; を有する &lt;code&gt;closeReason&lt;/code&gt; 用に設定 &lt;code&gt;closed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42ffa15d469d09132a6b45fcbd902817e8aa2270" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; method is called, the user agent &lt;em&gt;MUST&lt;/em&gt; run the following steps:</source>
          <target state="translated">とき &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; メソッドが呼び出されると、ユーザエージェントは、&lt;em&gt;しなければならない&lt;/em&gt;、次の手順を実行します。</target>
        </trans-unit>
        <trans-unit id="4391a06c9d0f2338a7c223835dc8fc4b32ce1dd6" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; method is called, the user agent &lt;em&gt;MUST&lt;/em&gt; run the steps as the link.</source>
          <target state="translated">とき &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; メソッドが呼び出されると、ユーザエージェントは、&lt;em&gt;しなければならない&lt;/em&gt;リンクとしてのステップを実行します。</target>
        </trans-unit>
        <trans-unit id="15baee29e476d71d5e423c6e177f7644e49dc536" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;reconnect&lt;/dfn&gt;(presentationId)&lt;/code&gt; method is called on a &lt;code&gt;PresentationRequest&lt;/code&gt;&lt;var&gt;presentationRequest&lt;/var&gt;, the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-user-agents&quot;&gt;user agent&lt;/a&gt;&lt;em&gt;MUST&lt;/em&gt; run the following steps to</source>
          <target state="translated">ときに &lt;code&gt;&lt;dfn&gt;reconnect&lt;/dfn&gt;(presentationId)&lt;/code&gt; メソッドが呼び出された上 &lt;code&gt;PresentationRequest&lt;/code&gt; &lt;var&gt;presentationRequest&lt;/var&gt; 、&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-user-agents&quot;&gt;ユーザーエージェントは、&lt;/a&gt;&lt;em&gt;しなければならない&lt;/em&gt;のは、次の手順を実行します。</target>
        </trans-unit>
        <trans-unit id="2fea13ca177f96f2cce88b05d8eb364696e1f353" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;terminate&lt;/dfn&gt;()&lt;/code&gt; method is called on a &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; begins the process of terminating the presentation. The exact process differs depending on whether &lt;code&gt;terminate()&lt;/code&gt; is called in the controlling or the presenting context.</source>
          <target state="translated">ときに &lt;code&gt;&lt;dfn&gt;terminate&lt;/dfn&gt;()&lt;/code&gt; メソッドは、上で呼び出され&lt;a href=&quot;../presentationconnection&quot;&gt; &lt;code&gt;PresentationConnection&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザエージェントは、&lt;/a&gt;プレゼンテーションを終了するプロセスを開始します。正確なプロセスは、 &lt;code&gt;terminate()&lt;/code&gt; が制御コンテキストで呼び出されるか、現在のコンテキストで呼び出されるかによって異なります。</target>
        </trans-unit>
        <trans-unit id="afab87a55a2cbb60584dec7012dd16c616599150" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;VRDisplay&lt;/code&gt; is not presenting a scene, this is functionally equivalent to &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VRDisplay&lt;/code&gt; がシーンを表示していない場合、これは機能的に&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;Window.requestAnimationFrame&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="9bacba41f7f222545591f6432c766b199d19e287" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;VRDisplay&lt;/code&gt; is presenting, the callback is called at its native refresh rate.</source>
          <target state="translated">とき &lt;code&gt;VRDisplay&lt;/code&gt; が提示され、コールバックがその本来のリフレッシュレートで呼ばれています。</target>
        </trans-unit>
        <trans-unit id="ce9c61230318f6b91dfe6f655b2ab29cd51199b8" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;mode&lt;/code&gt; of a shadow root is &quot;&lt;code&gt;closed&lt;/code&gt;&quot;, the shadow root&amp;rsquo;s implementation internals are inaccessible and unchangeable from JavaScript&amp;mdash;in the same way the implementation internals of, for example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element are inaccessible and unchangeable from JavaScript.</source>
          <target state="translated">とき &lt;code&gt;mode&lt;/code&gt; 影の根のが「 &lt;code&gt;closed&lt;/code&gt; 」、影のルートの実装の内部からアクセスできないと不変ですJavaScriptに同じ方法の実装の内部、例えば、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にはアクセスできないとJavaScriptから不変です。</target>
        </trans-unit>
        <trans-unit id="fc4934e8bd3a8da0e29e9d7f7b1ef67047ec5e45" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;oninstall&lt;/code&gt; handler completes, the service worker is considered installed.</source>
          <target state="translated">とき &lt;code&gt;oninstall&lt;/code&gt; ハンドラが完了すると、サービス従事者がインストールと考えられています。</target>
        </trans-unit>
        <trans-unit id="cf22449b85a37cdd14b29a36f972942979bbe90b" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;onunmute&lt;/code&gt; event handler is called, the track's &lt;a href=&quot;muted&quot;&gt;&lt;code&gt;muted&lt;/code&gt;&lt;/a&gt; flag is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">とき &lt;code&gt;onunmute&lt;/code&gt; イベントハンドラが呼び出され、トラックの&lt;a href=&quot;muted&quot;&gt; &lt;code&gt;muted&lt;/code&gt; &lt;/a&gt;フラグがある &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60dc0f2a025f4d10adf32869bc65b2b714c66281" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;requestData()&lt;/code&gt; method is invoked, the browser queues a task that runs the following steps:</source>
          <target state="translated">とき &lt;code&gt;requestData()&lt;/code&gt; メソッドが呼び出されると、ブラウザは、次の手順を実行するタスクをキューイングします：</target>
        </trans-unit>
        <trans-unit id="90885fc32dbfbad8b23af1666efeb791aeccac8b" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;resume()&lt;/code&gt; method is invoked, the browser queues a task that runs the following steps:</source>
          <target state="translated">場合には &lt;code&gt;resume()&lt;/code&gt; メソッドが呼び出されると、ブラウザは、次の手順を実行するタスクをキューイングします：</target>
        </trans-unit>
        <trans-unit id="d86262e8364e3cf4d9684f7eb30500de8684042d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;startRendering()&lt;/code&gt; promise resolves, rendering has completed and the output &lt;code&gt;AudioBuffer&lt;/code&gt; is returned out of the promise.</source>
          <target state="translated">とき &lt;code&gt;startRendering()&lt;/code&gt; 約束の解決さ、レンダリングが完了し、出力 &lt;code&gt;AudioBuffer&lt;/code&gt; は約束のうち返されます。</target>
        </trans-unit>
        <trans-unit id="c37cbd465b80e0d4ec473469eefaf3ae4e0eb9c3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;stop()&lt;/code&gt; method is invoked, the UA queues a task that runs the following steps:</source>
          <target state="translated">ときに &lt;code&gt;stop()&lt;/code&gt; メソッドが呼び出され、UAは、次の手順を実行するタスクをキューイングします：</target>
        </trans-unit>
        <trans-unit id="e63c9a36b0456d2f72f7188fa624ad4d35c38d6a" translate="yes" xml:space="preserve">
          <source>When the IFrame has loaded, we register an &lt;code&gt;onclick&lt;/code&gt; handler for our button and an &lt;code&gt;onmessage&lt;/code&gt; handler for &lt;a href=&quot;../messagechannel/port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt;. Finally we transfer &lt;a href=&quot;../messagechannel/port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the IFrame using the &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">IFrameが読み込まれたら、ボタンの &lt;code&gt;onclick&lt;/code&gt; ハンドラーと&lt;a href=&quot;../messagechannel/port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;onmessage&lt;/code&gt; ハンドラーを登録します。最後に、&lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;メソッドを使用して&lt;a href=&quot;../messagechannel/port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt;をIFrameに転送します。</target>
        </trans-unit>
        <trans-unit id="dc1fb33c3cdd6daf218a397fb6256d6ed43ebfc8" translate="yes" xml:space="preserve">
          <source>When the IFrame has loaded, we register an &lt;code&gt;onmessage&lt;/code&gt; handler for &lt;a href=&quot;messagechannel/port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt; and transfer &lt;a href=&quot;messagechannel/port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the IFrame using the &lt;a href=&quot;window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method along with a message.</source>
          <target state="translated">IFrameがロードされたら、&lt;a href=&quot;messagechannel/port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;onmessage&lt;/code&gt; ハンドラーを登録し、メッセージと一緒に&lt;a href=&quot;window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;メソッドを使用して&lt;a href=&quot;messagechannel/port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt;をIFrameに転送します。</target>
        </trans-unit>
        <trans-unit id="a7e4ad3a03781aabf88e28bcd4efb42210025bdc" translate="yes" xml:space="preserve">
          <source>When the MediaRecorder is recording, the &lt;a href=&quot;../mediarecorder/state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; property will return a value of &quot;recording&quot;.</source>
          <target state="translated">MediaRecorderが記録しているとき、&lt;a href=&quot;../mediarecorder/state&quot;&gt; &lt;code&gt;MediaRecorder.state&lt;/code&gt; &lt;/a&gt;プロパティは「recording」の値を返します。</target>
        </trans-unit>
        <trans-unit id="2bf78d4d77467531848593da2c12d66578716e7f" translate="yes" xml:space="preserve">
          <source>When the Pointer lock state changes&amp;mdash;for example, when calling &lt;a href=&quot;element/requestpointerlock&quot;&gt;&lt;code&gt;requestPointerLock()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;document/exitpointerlock&quot;&gt;&lt;code&gt;exitPointerLock()&lt;/code&gt;&lt;/a&gt;, the user pressing the ESC key, etc.&amp;mdash;the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; event is dispatched to the &lt;code&gt;document&lt;/code&gt;. This is a simple event and contains no extra data.</source>
          <target state="translated">場合ポインタロック状態の変化-例えば、呼び出すとき&lt;a href=&quot;element/requestpointerlock&quot;&gt; &lt;code&gt;requestPointerLock()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;document/exitpointerlock&quot;&gt; &lt;code&gt;exitPointerLock()&lt;/code&gt; &lt;/a&gt;、ESCキーを押すユーザは、等- &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; のイベントにディスパッチされる &lt;code&gt;document&lt;/code&gt; 。これは単純なイベントであり、追加のデータは含まれていません。</target>
        </trans-unit>
        <trans-unit id="4ea347fd70c4fb3150ede93f0a7797537c904ffe" translate="yes" xml:space="preserve">
          <source>When the Promise returned by &lt;code&gt;getUserMedia()&lt;/code&gt; is resolved, the preview &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; attribute is set to be the input stream, which causes the video being captured by the user's camera to be displayed in the preview box. Since the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element is muted, the audio won't play. The &quot;Download&quot; button's link is then set to refer to the stream as well. Then, in line 8, we arrange for &lt;code&gt;preview.captureStream()&lt;/code&gt; to call &lt;code&gt;preview.mozCaptureStream()&lt;/code&gt; so that our code will work on Firefox, on which the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/captureStream&quot;&gt;&lt;code&gt;MediaRecorder.captureStream()&lt;/code&gt;&lt;/a&gt; method is prefixed. Then a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves when the preview video starts to play is created and returned.</source>
          <target state="translated">&lt;code&gt;getUserMedia()&lt;/code&gt; によって返されたPromise が解決されると、プレビューの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; 属性が入力ストリームに設定され、ユーザーのカメラでキャプチャされたビデオがプレビューボックスに表示されます。以来 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 要素がミュートされ、音声が再生されません。 [ダウンロード]ボタンのリンクは、ストリームも参照するように設定されます。その後、8行目では、我々は手配 &lt;code&gt;preview.captureStream()&lt;/code&gt; 呼び出すこと &lt;code&gt;preview.mozCaptureStream()&lt;/code&gt; 我々のコードは、その上のFirefox上で動作するように&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/captureStream&quot;&gt; &lt;code&gt;MediaRecorder.captureStream()&lt;/code&gt; &lt;/a&gt;メソッドが付けられます。その後、新しい&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; プレビュービデオの再生が開始されるときに解決され、作成されて返されます。</target>
        </trans-unit>
        <trans-unit id="a615e8d216a008e09a0aaa6303aef7ad3335f0ba" translate="yes" xml:space="preserve">
          <source>When the amount of a target element which is visible within the root element crosses one of the visibility thresholds,</source>
          <target state="translated">ルート要素内で可視化されているターゲット要素の量が、可視化しきい値のいずれかを超えたときに、ルート要素内で可視化されているターゲット要素の量が、可視化しきい値のいずれかを超えたとき。</target>
        </trans-unit>
        <trans-unit id="32d7fed74aa3c9bf9e7b2463d00efc4b82768b3f" translate="yes" xml:space="preserve">
          <source>When the audio is played to the end, it loops, but you can control how long the loops last by altering &lt;code&gt;loopStart&lt;/code&gt; and &lt;code&gt;loopEnd&lt;/code&gt;. For example, if you set their values to 20 and 25, respectively, the audio will start to loop between 20 and 25 seconds in to the track.</source>
          <target state="translated">オーディオが最後まで再生されるとループしますが、 &lt;code&gt;loopStart&lt;/code&gt; と &lt;code&gt;loopEnd&lt;/code&gt; を変更することで、ループの持続時間を制御できます。たとえば、これらの値をそれぞれ20と25に設定すると、オーディオはトラックの20秒と25秒の間でループし始めます。</target>
        </trans-unit>
        <trans-unit id="e24b0cc32d22e2488193cf1bd94e74f452949ea5" translate="yes" xml:space="preserve">
          <source>When the audio is played to the end, it loops, but you can control how long the loops last by altering &lt;code&gt;loopStart&lt;/code&gt; and &lt;code&gt;loopEnd&lt;/code&gt;. For example, if you set their values to 20 and 25, respectively, then begin playback, the sound will play normally until it reaches the 25 second mark. Then the current play position will loop back to the 20 second mark and continue playing until the 25 second mark, ad infinitum (or at least until &lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; is called).</source>
          <target state="translated">オーディオが最後まで再生されるとループしますが、 &lt;code&gt;loopStart&lt;/code&gt; と &lt;code&gt;loopEnd&lt;/code&gt; を変更することで、ループの持続時間を制御できます。たとえば、値をそれぞれ20と25に設定して再生を開始すると、25秒のマークに達するまでサウンドは通常どおり再生されます。次に、現在の再生位置は20秒のマークにループバックし、25秒のマークまで、無限に（または、少なくとも&lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;が呼び出されるまで）再生を続けます。</target>
        </trans-unit>
        <trans-unit id="39d3f50da9c0d82ba411371bee723b13d4be77b5" translate="yes" xml:space="preserve">
          <source>When the available disk space is filled up, the quota manager will start clearing out data based on an LRU policy &amp;mdash; the least recently used origin will be deleted first, then the next one, until the browser is no longer over the limit.</source>
          <target state="translated">利用可能なディスク領域がいっぱいになると、クォータマネージャーはLRUポリシーに基づいてデータの消去を開始します。ブラウザーが制限を超えなくなるまで、最も使用頻度の低いオリジンが最初に削除され、次に次のオリジンが削除されます。</target>
        </trans-unit>
        <trans-unit id="f0b279040d65102fcafc743e176713b9b8be7341" translate="yes" xml:space="preserve">
          <source>When the browser adds a new &quot;&lt;code&gt;frame&lt;/code&gt;&quot; entry to the performance timeline, both of the observer callbacks will be invoked.</source>
          <target state="translated">ブラウザが新しい「 &lt;code&gt;frame&lt;/code&gt; 」エントリをパフォーマンスタイムラインに追加すると、両方のオブザーバーコールバックが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c4cbb2e1cb16505ffea56fb85c6e49a6dda278ae" translate="yes" xml:space="preserve">
          <source>When the browser detects that the target element (in our case, the one with the ID &lt;code&gt;&quot;box&quot;&lt;/code&gt;) has been unveiled or obscured such that its visibility ratio crosses one of the thresholds in our list, it calls our handler function, &lt;code&gt;handleIntersect()&lt;/code&gt;:</source>
          <target state="translated">ターゲット要素（この場合、ID &lt;code&gt;&quot;box&quot;&lt;/code&gt; の要素）が明らかにされた、または不明瞭になって、可視率がリスト内のしきい値の1つと交差したことをブラウザーが検出すると、ハンドラー関数 &lt;code&gt;handleIntersect()&lt;/code&gt; を呼び出します：</target>
        </trans-unit>
        <trans-unit id="8496a9863ad494d02d25096932d5f3577a3b859f" translate="yes" xml:space="preserve">
          <source>When the browser is ready to fetch the document using an HTTP request. This moment is &lt;em&gt;before&lt;/em&gt; the check to any application cache.</source>
          <target state="translated">ブラウザがHTTPリクエストを使用してドキュメントをフェッチする準備ができたとき。この瞬間は、アプリケーションキャッシュのチェックの&lt;em&gt;前&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="350a1fd062dc804995b1031003ef6f2de0f91e04" translate="yes" xml:space="preserve">
          <source>When the browser received the first byte of the response, from the server from a cache, or from a local resource.</source>
          <target state="translated">ブラウザがレスポンスの最初のバイトをキャッシュからサーバから、またはローカルリソースから受信した場合。</target>
        </trans-unit>
        <trans-unit id="105409482e116bc47983c4229d28d9dda32f73db" translate="yes" xml:space="preserve">
          <source>When the browser received the last byte of the response, or when the connection is closed if this happened first, from the server, the cache, or from a local resource.</source>
          <target state="translated">ブラウザがレスポンスの最後のバイトを受信したとき、または、サーバー、キャッシュ、またはローカルリソースのいずれかから先に発生した場合は接続が終了したとき。</target>
        </trans-unit>
        <trans-unit id="50ba4ed179b7791a1be1374a91e79aeb1d381644" translate="yes" xml:space="preserve">
          <source>When the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.</source>
          <target state="translated">ブラウザが実際の文書を取得するために要求を送信したとき,サーバから,あるいはキャッシュから。リクエストの開始後にトランスポート層が失敗して接続が再開された場合,このプロパティは新しいリクエストに対応する時間に設定される。</target>
        </trans-unit>
        <trans-unit id="beb363aa3681e984cec0e93d51cec6346c056a16" translate="yes" xml:space="preserve">
          <source>When the browser shuts down (because the user chose the Quit or Exit option), the disk containing the database is removed unexpectedly, or permissions are lost to the database store, the following things happen:</source>
          <target state="translated">ブラウザがシャットダウンしたとき(ユーザーが Quit または Exit オプションを選択したため)、データベースを含むディスクが予期せず削除されたとき、またはデータベースストアのパーミッションが失われたとき、次のようなことが起こります。</target>
        </trans-unit>
        <trans-unit id="61efc49afc4e840226c8362204bfe6b25d174615" translate="yes" xml:space="preserve">
          <source>When the button is clicked, the oscillator starts, and the &lt;code&gt;MediaRecorder&lt;/code&gt; is started. When the button is stopped, the oscillator and&lt;code&gt; MediaRecorder&lt;/code&gt; both stop. Stopping the &lt;code&gt;MediaRecorder&lt;/code&gt; causes the &lt;code&gt;dataavailable&lt;/code&gt; event to fire, and the event data is pushed into the &lt;code&gt;chunks&lt;/code&gt; array. After that, the &lt;code&gt;stop&lt;/code&gt; event fires, a new &lt;code&gt;blob&lt;/code&gt; is made of type opus &amp;mdash; which contains the data in the &lt;code&gt;chunks&lt;/code&gt; array, and a new window (tab) is then opened that points to a URL created from the blob.</source>
          <target state="translated">ボタンをクリックすると、オシレーターが起動し、 &lt;code&gt;MediaRecorder&lt;/code&gt; が起動します。ボタンを停止すると、オシレーターと &lt;code&gt; MediaRecorder&lt;/code&gt; の両方が停止します。 &lt;code&gt;MediaRecorder&lt;/code&gt; を停止すると、 &lt;code&gt;dataavailable&lt;/code&gt; イベントが発生し、イベントデータが &lt;code&gt;chunks&lt;/code&gt; 配列にプッシュされます。その後、 &lt;code&gt;stop&lt;/code&gt; イベントが発生し、 &lt;code&gt;chunks&lt;/code&gt; 配列のデータを含むopus型の新しい &lt;code&gt;blob&lt;/code&gt; が作成され、そのblobから作成されたURLを指す新しいウィンドウ（タブ）が開きます。</target>
        </trans-unit>
        <trans-unit id="533788242fd866bfaf98a429979be6b6c17e1071" translate="yes" xml:space="preserve">
          <source>When the button is pressed, the current position, orientation, etc. of the sensor/head mounted display is set to be 0 &amp;mdash; this makes the method useful for calibration when an app is first loaded.</source>
          <target state="translated">ボタンを押すと、センサー/ヘッドマウントディスプレイの現在の位置や向きなどが0に設定されます。これにより、アプリが最初に読み込まれたときのキャリブレーションにこのメソッドが役立ちます。</target>
        </trans-unit>
        <trans-unit id="aa3d1042776a40be3f647ebe46e6279e0edfe9dc" translate="yes" xml:space="preserve">
          <source>When the caller's &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICE layer comes up with a new candidate to propose, it issues an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event to &lt;code&gt;callerPC&lt;/code&gt;. The &lt;code&gt;icecandidate&lt;/code&gt; event handler's job is to transmit the candidate to the receiver. In our example, we are directly controlling both the caller and the receiver, so we can just directly add the candidate to the receiver by calling its &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;addIceCandidate()&lt;/code&gt;&lt;/a&gt; method. That's handled by &lt;code&gt;handleCallerIceEvent()&lt;/code&gt;:</source>
          <target state="translated">呼び出し元の &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICEレイヤーが提案する新しい候補を &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; 、icecandidateイベントを &lt;code&gt;callerPC&lt;/code&gt; に発行します。 &lt;code&gt;icecandidate&lt;/code&gt; のイベントハンドラの仕事は、受信機に候補者を送信することです。この例では、呼び出し側と受信側の両方を直接制御しているため、&lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;addIceCandidate()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで、候補を直接受信側に追加できます。これは、 &lt;code&gt;handleCallerIceEvent()&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="18d29ea866555b83f31f522311de83636997435a" translate="yes" xml:space="preserve">
          <source>When the calling &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; begins to receive media (after the microphone's stream is added to it), a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; event is delivered to the caller, letting it know that it's time to start negotiating the connection with the receiver. As previously mentioned, our example is simplified somewhat because we control both the caller and the receiver, so &lt;code&gt;handleCallerNegotiationNeeded()&lt;/code&gt; is able to quickly construct the connection by chaining the required calls together for both the caller and receiver, as shown below.</source>
          <target state="translated">呼び出すとき&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; は、&lt;/a&gt;（マイクの流れがそれに追加された後）メディアを受信し始め、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; イベントは、それが受信機との接続のネゴシエーションを開始する時が来たことを知らせる、呼び出し側に配信されます。前述のように、呼び出し元と受信者の両方を制御するため、この例は多少簡略化されています。以下に示すように、 &lt;code&gt;handleCallerNegotiationNeeded()&lt;/code&gt; は、呼び出し元と受信者の両方に必要な呼び出しをチェーンすることで接続をすばやく構築できます。</target>
        </trans-unit>
        <trans-unit id="c8cca7d1c8177e7f4f8aa1998030d5e56bd42c09" translate="yes" xml:space="preserve">
          <source>When the canvas is initialized or &lt;code&gt;beginPath()&lt;/code&gt; is called, you typically will want to use the &lt;code&gt;moveTo()&lt;/code&gt; function to place the starting point somewhere else. We could also use &lt;code&gt;moveTo()&lt;/code&gt; to draw unconnected paths. Take a look at the smiley face below.</source>
          <target state="translated">キャンバスが初期化されるか &lt;code&gt;beginPath()&lt;/code&gt; が呼び出されると、通常は &lt;code&gt;moveTo()&lt;/code&gt; 関数を使用して開始点を別の場所に配置します。 &lt;code&gt;moveTo()&lt;/code&gt; を使用して、接続されていないパスを描画することもできます。下のスマイリーフェイスを見てください。</target>
        </trans-unit>
        <trans-unit id="53eb8eba2a3daab13bf34be7e700aa658187cd56" translate="yes" xml:space="preserve">
          <source>When the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establishment end time is given. If a persistent connection is used, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.</source>
          <target state="translated">接続が開かれたネットワーク。トランスポート層がエラーを報告し、接続確立が再び開始された場合、最後の接続確立終了時刻が示されます。永続的な接続が使用されている場合、値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。すべての安全な接続ハンドシェイクまたはSOCKS認証が終了すると、接続は開いたと見なされます。</target>
        </trans-unit>
        <trans-unit id="76c9c3d99b351f029d70d5db9fd9568e6eb3a785" translate="yes" xml:space="preserve">
          <source>When the container does not scroll, but has overflowing children, these checks determine if the container can scroll:</source>
          <target state="translated">コンテナがスクロールしないが、オーバーフローしている子がある場合、これらのチェックは、コンテナがスクロールできるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="f999374b8edb4032b0a23c52bc5ae64b0f926872" translate="yes" xml:space="preserve">
          <source>When the current port receives a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MIDIMessage&quot;&gt;&lt;code&gt;MIDIMessage&lt;/code&gt;&lt;/a&gt; it triggers a call to this event handler.</source>
          <target state="translated">現在のポートが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MIDIMessage&quot;&gt; &lt;code&gt;MIDIMessage&lt;/code&gt; &lt;/a&gt;を受信すると、このイベントハンドラーへの呼び出しをトリガーします。</target>
        </trans-unit>
        <trans-unit id="612eb0282a020d53d02c4e2675af913b08ae504d" translate="yes" xml:space="preserve">
          <source>When the device proximity sensor detects a change between the device and an object, it notifies the browser of that change. When the browser gets such a notification, it fires a &lt;a href=&quot;deviceproximityevent&quot;&gt;&lt;code&gt;DeviceProximityEvent&lt;/code&gt;&lt;/a&gt; for any change, and a &lt;a href=&quot;userproximityevent&quot;&gt;&lt;code&gt;UserProximityEvent&lt;/code&gt;&lt;/a&gt; event in the case of a more rough change.</source>
          <target state="translated">デバイス近接センサーは、デバイスとオブジェクト間の変化を検出すると、その変化をブラウザーに通知します。ブラウザがこのような通知を受け取ると、それが発火&lt;a href=&quot;deviceproximityevent&quot;&gt; &lt;code&gt;DeviceProximityEvent&lt;/code&gt; を&lt;/a&gt;変更するために、そして&lt;a href=&quot;userproximityevent&quot;&gt; &lt;code&gt;UserProximityEvent&lt;/code&gt; の&lt;/a&gt;よりラフな変更の場合にイベント。</target>
        </trans-unit>
        <trans-unit id="6307cceb0ab0826ee9ad7c09c446be851e147976" translate="yes" xml:space="preserve">
          <source>When the dial button is clicked, &lt;code&gt;connectAndDial()&lt;/code&gt; is called. This starts building the WebRTC connection in preparation for sending the DTMF codes.</source>
          <target state="translated">ダイヤルボタンがクリックされると、 &lt;code&gt;connectAndDial()&lt;/code&gt; が呼び出されます。これにより、DTMFコードを送信する準備として、WebRTC接続の構築が開始されます。</target>
        </trans-unit>
        <trans-unit id="c7f73abc508f8682c32e1f3e323ea5afcdb1d543" translate="yes" xml:space="preserve">
          <source>When the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">ドメインの検索が終了したとき。永続的な接続が使用されている場合、または情報がキャッシュまたはローカルリソースに格納されている場合、値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="6ad592848fdf8928a7eb321d91c7c9a32dae5882" translate="yes" xml:space="preserve">
          <source>When the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">ドメインルックアップが開始されたとき。永続的な接続が使用されている場合、または情報がキャッシュまたはローカルリソースに格納されている場合、値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="9ce1a04e3c286d36884562c0642e05dc2a986176" translate="yes" xml:space="preserve">
          <source>When the element does not have a first child, then &lt;code&gt;firstChild&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. The element is still appended to the parent, after the last child. Since the parent element did not have a first child, it did not have a last child either. Consequently, the new element is the only element, after insertion.</source>
          <target state="translated">要素に最初の子がない場合、 &lt;code&gt;firstChild&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; です。要素は最後の子の後に親に追加されます。親要素には最初の子がないため、最後の子もありませんでした。したがって、挿入後の新しい要素は唯一の要素です。</target>
        </trans-unit>
        <trans-unit id="8eff7324c9524a5ccfee088b6bad52429f10f081" translate="yes" xml:space="preserve">
          <source>When the first HTTP redirect starts. If there is no redirect, or if one of the redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">最初のHTTPリダイレクトが開始したとき。リダイレクトがない場合、またはリダイレクトの1つが同じオリジンでない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ffba0997651e82706a57373f5ce453c0458a27a8" translate="yes" xml:space="preserve">
          <source>When the following code is used inside a service worker to respond to a push messages by sending the data received via &lt;a href=&quot;../pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; to the main context via a &lt;a href=&quot;../channel_messaging_api&quot;&gt;channel message&lt;/a&gt;, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ExtendableMessageEvent&lt;/code&gt;.</source>
          <target state="translated">次のコードを介して受信したデータを送信することにより、プッシュメッセージに応答するサービスワーカー内で使用される場合&lt;a href=&quot;../pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; を&lt;/a&gt;介して主コンテキストに&lt;a href=&quot;../channel_messaging_api&quot;&gt;チャネル・メッセージ&lt;/a&gt;のイベントオブジェクト &lt;code&gt;onmessage&lt;/code&gt; あろう &lt;code&gt;ExtendableMessageEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a84bb2c2165f75feccb7fb59ab1acd531f76be6e" translate="yes" xml:space="preserve">
          <source>When the following code is used inside a service worker to respond to a push messages by sending the data received via &lt;a href=&quot;pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; to the main context via a &lt;a href=&quot;channel_messaging_api&quot;&gt;channel message&lt;/a&gt;, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ExtendableMessageEvent&lt;/code&gt;.</source>
          <target state="translated">次のコードを介して受信したデータを送信することにより、プッシュメッセージに応答するサービスワーカー内で使用される場合&lt;a href=&quot;pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; を&lt;/a&gt;介して主コンテキストに&lt;a href=&quot;channel_messaging_api&quot;&gt;チャネル・メッセージ&lt;/a&gt;のイベントオブジェクト &lt;code&gt;onmessage&lt;/code&gt; あろう &lt;code&gt;ExtendableMessageEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f311172178989f9d4dc13b5188cf4041e8ebf5b" translate="yes" xml:space="preserve">
          <source>When the following code is used inside the main thread to set up a message channel between it and a service worker for sending messages between the two, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ServiceWorkerMessageEvent&lt;/code&gt;.</source>
          <target state="translated">メインスレッド内で次のコードを使用して、メインスレッドとService Workerの間にメッセージチャネルを設定し、2つの間でメッセージを送信すると、 &lt;code&gt;ServiceWorkerMessageEvent&lt;/code&gt; イベントオブジェクトは &lt;code&gt;onmessage&lt;/code&gt; なります。</target>
        </trans-unit>
        <trans-unit id="3bac4700ec5c761184b42bc84aedc27117745e7b" translate="yes" xml:space="preserve">
          <source>When the form is submitted, an event handler is run that puts the entered values into a ScrollToOptions dictionary, and then invokes the &lt;a href=&quot;../window/scrollto&quot;&gt;&lt;code&gt;Window.ScrollTo()&lt;/code&gt;&lt;/a&gt; method, passing the dictionary as a parameter:</source>
          <target state="translated">フォームが送信されると、入力された値をScrollToOptionsディクショナリに入れ、次にディクショナリをパラメーターとして渡して&lt;a href=&quot;../window/scrollto&quot;&gt; &lt;code&gt;Window.ScrollTo()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すイベントハンドラーが実行されます。</target>
        </trans-unit>
        <trans-unit id="699cc75134158d3a793326f96977d944bea59451" translate="yes" xml:space="preserve">
          <source>When the form is submitted, an event handler is run that puts the entered values into a ScrollToOptions dictionary, and then invokes the &lt;a href=&quot;window/scrollto&quot;&gt;&lt;code&gt;Window.ScrollTo()&lt;/code&gt;&lt;/a&gt; method, passing the dictionary as a parameter:</source>
          <target state="translated">フォームが送信されると、入力された値をScrollToOptionsディクショナリに入れ、次にディクショナリをパラメーターとして渡して&lt;a href=&quot;window/scrollto&quot;&gt; &lt;code&gt;Window.ScrollTo()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すイベントハンドラーが実行されます。</target>
        </trans-unit>
        <trans-unit id="902216d2ce5fc2ca7a98151ccb8cbfac79f84472" translate="yes" xml:space="preserve">
          <source>When the function returns &lt;code&gt;true&lt;/code&gt;, this prevents the firing of the default event handler.</source>
          <target state="translated">関数が &lt;code&gt;true&lt;/code&gt; を返すと、デフォルトのイベントハンドラーの起動が防止されます。</target>
        </trans-unit>
        <trans-unit id="ba06b9cdd699f177726e7f57bcdcd3cd88b9d315" translate="yes" xml:space="preserve">
          <source>When the intial message is received from the main page via the &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method, we run the &lt;code&gt;initPort&lt;/code&gt; function. This saves the transfered port and register an onmessage handler that will be called each time a message is passed through our &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メインページから&lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;メソッドを介して初期メッセージを受信すると、 &lt;code&gt;initPort&lt;/code&gt; 関数を実行します。これにより、転送されたポートが保存され、メッセージが&lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel&lt;/code&gt; &lt;/a&gt;を介して渡されるたびに呼び出されるonmessageハンドラーが登録されます。</target>
        </trans-unit>
        <trans-unit id="dfa418df41a8e2c804b46c47c170e8d2746bbbba" translate="yes" xml:space="preserve">
          <source>When the key is first depressed, the &lt;code&gt;keydown&lt;/code&gt; event is sent.</source>
          <target state="translated">キーが最初に押されたときに、 &lt;code&gt;keydown&lt;/code&gt; イベントが送信されます。</target>
        </trans-unit>
        <trans-unit id="9bf05f6fc0519d8976526ddb13344e76d19faee8" translate="yes" xml:space="preserve">
          <source>When the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">最後のHTTPリダイレクトが完了したとき、つまりHTTP応答の最後のバイトが受信されたときです。リダイレクトがない場合、またはリダイレクトの1つが同じオリジンでない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9b57ce896dfd5cd7a4903a914d77303cd695f765" translate="yes" xml:space="preserve">
          <source>When the light sensor of a device detects a change in the light level, it notifies the browser of that change. When the browser gets such a notification, it fires a &lt;a href=&quot;devicelightevent&quot;&gt;&lt;code&gt;DeviceLightEvent&lt;/code&gt;&lt;/a&gt; event that provides information about the exact light intensity (in lux units).</source>
          <target state="translated">デバイスの光センサーが光レベルの変化を検出すると、その変化をブラウザーに通知します。ブラウザーがこのような通知を&lt;a href=&quot;devicelightevent&quot;&gt; &lt;code&gt;DeviceLightEvent&lt;/code&gt; &lt;/a&gt;、正確な光度（ルクス単位）に関する情報を提供するDeviceLightEventイベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="560082e7dcd947cb29a93eede56e926881ba8fc5" translate="yes" xml:space="preserve">
          <source>When the local peer experiences an open or close event, the &lt;code&gt;handleSendChannelStatusChange()&lt;/code&gt; method is called:</source>
          <target state="translated">ローカルピアでopenまたはcloseイベントが発生すると、 &lt;code&gt;handleSendChannelStatusChange()&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="27a889f8a007c01abcb4faf6d63d40c5a15a91a5" translate="yes" xml:space="preserve">
          <source>When the local user clicks the interface widget to disable hold mode, the &lt;code&gt;disableHold()&lt;/code&gt; method is called to begin the process of restoring normal functionality.</source>
          <target state="translated">ローカルユーザーがインターフェースウィジェットをクリックしてホールドモードを無効にすると、 &lt;code&gt;disableHold()&lt;/code&gt; メソッドが呼び出され、通常の機能を復元するプロセスが開始されます。</target>
        </trans-unit>
        <trans-unit id="ebac40f6a72793796b91bcfc5c8b72b1f2b17b70" translate="yes" xml:space="preserve">
          <source>When the local user decides to enable hold mode, the &lt;code&gt;enableHold()&lt;/code&gt; method below is called. It accepts as input a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; containing the audio to play while the call is on hold.</source>
          <target state="translated">ローカルユーザーがホールドモードを有効にすることを決定すると、以下の &lt;code&gt;enableHold()&lt;/code&gt; メソッドが呼び出されます。コールが保留中に再生するオーディオを含む&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;を入力として受け入れます。</target>
        </trans-unit>
        <trans-unit id="d7f09e809f3f680076d45cee843a01c1fe3f673e" translate="yes" xml:space="preserve">
          <source>When the media stream ends, any media data not already delivered to your &lt;code&gt;ondataavailable&lt;/code&gt; handler is passed in a single &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メディアストリームが終了すると、 &lt;code&gt;ondataavailable&lt;/code&gt; ハンドラーにまだ配信されていないメディアデータは、単一の&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; で&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="200a112377c2d0da736664ec1a452098ea2f0425" translate="yes" xml:space="preserve">
          <source>When the mode is &lt;code&gt;&quot;showing&quot;&lt;/code&gt;, text tracks are performed differently depending on their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;. In general:</source>
          <target state="translated">モードが &lt;code&gt;&quot;showing&quot;&lt;/code&gt; 場合、テキストトラックはその&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;応じて異なる方法で実行されます。一般に：</target>
        </trans-unit>
        <trans-unit id="9b66bfe8f53f6ad854aabf7ab0116c143bf98838" translate="yes" xml:space="preserve">
          <source>When the mouse is unlocked, the system cursor can exit and re-enter the browser window. If that happens, &lt;a href=&quot;mouseevent/movementx&quot;&gt;&lt;code&gt;movementX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mouseevent/movementy&quot;&gt;&lt;code&gt;movementY&lt;/code&gt;&lt;/a&gt; could be set to zero.</source>
          <target state="translated">マウスのロックが解除されると、システムカーソルが終了してブラウザウィンドウに再び入ることができます。その場合は、&lt;a href=&quot;mouseevent/movementx&quot;&gt; &lt;code&gt;movementX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;mouseevent/movementy&quot;&gt; &lt;code&gt;movementY&lt;/code&gt; &lt;/a&gt;をゼロに設定できます。</target>
        </trans-unit>
        <trans-unit id="f915c69d3f7277d60c1e7e7d9711fc6729338a13" translate="yes" xml:space="preserve">
          <source>When the number of channels doesn't match between an input and an output, up- or down-mixing happens according the following rules. This can be somewhat controlled by setting the &lt;a href=&quot;../audionode/channelinterpretation&quot;&gt;&lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;speakers&lt;/code&gt; or &lt;code&gt;discrete&lt;/code&gt;:</source>
          <target state="translated">入力と出力の間でチャンネル数が一致しない場合、アップミックスまたはダウンミックスは次のルールに従って行われます。これは、&lt;a href=&quot;../audionode/channelinterpretation&quot;&gt; &lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt; &lt;/a&gt;プロパティを &lt;code&gt;speakers&lt;/code&gt; または &lt;code&gt;discrete&lt;/code&gt; 設定することで多少制御できます。</target>
        </trans-unit>
        <trans-unit id="91cf2afc707473bc973d50d6ca2efd4285a74d39" translate="yes" xml:space="preserve">
          <source>When the number of channels doesn't match between an input and an output, up- or down-mixing happens according the following rules. This can be somewhat controlled by setting the &lt;a href=&quot;channelinterpretation&quot;&gt;&lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;speakers&lt;/code&gt; or &lt;code&gt;discrete&lt;/code&gt;:</source>
          <target state="translated">入力と出力の間でチャンネル数が一致しない場合、アップミックスまたはダウンミックスは次のルールに従って行われます。これは、&lt;a href=&quot;channelinterpretation&quot;&gt; &lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt; &lt;/a&gt;プロパティを &lt;code&gt;speakers&lt;/code&gt; または &lt;code&gt;discrete&lt;/code&gt; 設定することで多少制御できます。</target>
        </trans-unit>
        <trans-unit id="8ad483e8bf409e425b58e8efd619abdc5050a0c3" translate="yes" xml:space="preserve">
          <source>When the observer (callback) is invoked, the callback's parameters include a &lt;em&gt;&lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt;&lt;/em&gt; that contains only &lt;em&gt;observed&lt;/em&gt;&lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entries&lt;/code&gt;&lt;/a&gt;. That is, the list contains entries only for the event types that were specified when the observer's &lt;a href=&quot;performanceobserver/observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; method was invoked. The &lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt; interface has the same three &lt;code&gt;getEntries*()&lt;/code&gt; methods as the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface. However, note there is one key difference with these methods; the &lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt; versions are used to retrieve &lt;em&gt;observed&lt;/em&gt; performance entries within the observer callback.</source>
          <target state="translated">オブザーバー（コールバック）が呼び出されると、コールバックのパラメーターには、&lt;em&gt;&lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt;&lt;/em&gt;&lt;em&gt;された&lt;/em&gt;&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;performance entries&lt;/code&gt; &lt;/a&gt;のみを含む&lt;em&gt;パフォーマンスオブザーバーエントリリスト&lt;/em&gt;が含ま&lt;em&gt;れ&lt;/em&gt;ます。つまり、リストには、オブザーバーの&lt;a href=&quot;performanceobserver/observe&quot;&gt; &lt;code&gt;observe()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときに指定されたイベントタイプのエントリのみが含まれます。&lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt;インタフェースは、同じ3つ持っ &lt;code&gt;getEntries*()&lt;/code&gt; などのメソッド&lt;a href=&quot;performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt;インターフェイスを。ただし、これらの方法には1つの重要な違いがあることに注意してください。&lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt;バージョンでは、取得するために使用されている&lt;em&gt;観測された&lt;/em&gt;観測者のコールバック内のパフォーマンスのエントリを。</target>
        </trans-unit>
        <trans-unit id="7175f21e5a2e17845e87b2f7b83e601c87827619" translate="yes" xml:space="preserve">
          <source>When the offer arrives, the callee's &lt;code&gt;handleVideoOfferMsg()&lt;/code&gt; function is called with the &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; message that was received. This function needs to do two things. First, it needs to create its own &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; and add the tracks containing the audio and video from its microphone and webcam to that. Second, it needs to process the received offer, constructing and sending its answer.</source>
          <target state="translated">オファーが到着すると、 &lt;code&gt;handleVideoOfferMsg()&lt;/code&gt; 者のhandleVideoOfferMsg（）関数が、受信された &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; メッセージを使用して呼び出されます。この関数は2つのことを行う必要があります。最初に、独自の&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;を作成し、マイクとWebカメラからのオーディオとビデオを含むトラックを追加する必要があります。次に、受け取ったオファーを処理し、回答を作成して送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="b0bec275fd0f6273c0d0acf797afd767ae95035d" translate="yes" xml:space="preserve">
          <source>When the opened database doesn't exist yet, the value of &lt;code&gt;oldVersion&lt;/code&gt; is 0.</source>
          <target state="translated">開いているデータベースがまだ存在しない場合、 &lt;code&gt;oldVersion&lt;/code&gt; の値は0です。</target>
        </trans-unit>
        <trans-unit id="ee5c225e0694b3df91bd7af04aec1826c22c80d2" translate="yes" xml:space="preserve">
          <source>When the page content finishes loading (e.g. on &lt;code&gt;DOMContentLoaded&lt;/code&gt;).</source>
          <target state="translated">ページコンテンツの読み込みが終了したとき（ &lt;code&gt;DOMContentLoaded&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="8e922759a0f9be599e7731ead610cb8c60760586" translate="yes" xml:space="preserve">
          <source>When the page is loaded, this code is run to set up an event listener to watch for the</source>
          <target state="translated">ページがロードされると、このコードが実行され、イベントリスナーを設定して</target>
        </trans-unit>
        <trans-unit id="14f06ff227348a175a5ecda369bb2dfb11462ebf" translate="yes" xml:space="preserve">
          <source>When the page loads, the &lt;code&gt;startup()&lt;/code&gt; function shown below should be called by our &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;onload&lt;/code&gt; attribute (but in the example we use a button to trigger it, due to limitations of the MDN live example system).</source>
          <target state="translated">ページがロードされると、以下に示す &lt;code&gt;startup()&lt;/code&gt; 関数が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;onload&lt;/code&gt; 属性によって呼び出される必要があります（ただし、この例では、MDNライブサンプルシステムの制限により、ボタンを使用してトリガーします）。</target>
        </trans-unit>
        <trans-unit id="f8d059be663cdcd4a12850cd2f6a0c99689b6fdf" translate="yes" xml:space="preserve">
          <source>When the page loads, this code runs to set up and run the example:</source>
          <target state="translated">ページがロードされると、このコードが実行され、サンプルの設定と実行が行われます。</target>
        </trans-unit>
        <trans-unit id="8986747220e0569aa52b83a6cd262503f62f9870" translate="yes" xml:space="preserve">
          <source>When the page loads, we do some basic setup: we fetch references to the dial button and the log output box elements, and we use &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt; to add an event listener to the dial button so that clicking it calls the &lt;code&gt;connectAndDial()&lt;/code&gt; function to begin the connection process.</source>
          <target state="translated">ページが読み込まれると、基本的な設定を行います。ダイヤルボタンとログ出力ボックスの要素への参照をフェッチし、&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt;を使用してイベントリスナーをダイヤルボタンに追加し、クリックすると &lt;code&gt;connectAndDial()&lt;/code&gt; 関数が呼び出されるようにします。接続プロセスを開始します。</target>
        </trans-unit>
        <trans-unit id="839549cedee1215fb2d0d740f0fd133bdc03411a" translate="yes" xml:space="preserve">
          <source>When the parameter's value finishes following the curve, its value is guaranteed to match the last value in the set of values specified in the &lt;code&gt;values&lt;/code&gt; parameter.</source>
          <target state="translated">パラメータの値が曲線に従って終了すると、その値は、 &lt;code&gt;values&lt;/code&gt; パラメータで指定された値のセットの最後の値と一致することが保証されます。</target>
        </trans-unit>
        <trans-unit id="3134eb9034ba0688c09d8933a0459e0314d97425" translate="yes" xml:space="preserve">
          <source>When the parser finished its work on the main document, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'complete'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">パーサーがメインドキュメントでの作業を完了すると、つまり、&lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'complete'&lt;/code&gt; 変わり、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされます。</target>
        </trans-unit>
        <trans-unit id="f808803da015941c4bf2374be53dabc0ea78103f" translate="yes" xml:space="preserve">
          <source>When the parser finished its work on the main document, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'interactive'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">パーサーがメインドキュメントでの作業を完了したとき、つまり、&lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'interactive'&lt;/code&gt; 変化し、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされたときです。</target>
        </trans-unit>
        <trans-unit id="dbb3c5d76fb79c825556e2cee9e32a2b42390e41" translate="yes" xml:space="preserve">
          <source>When the parser started its work, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'loading'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">パーサーが作業を開始したとき、つまり、&lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'loading'&lt;/code&gt; 変化し、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされたときです。</target>
        </trans-unit>
        <trans-unit id="21ee0794ad950a44e9f58b2c0a55f4df23b09dd1" translate="yes" xml:space="preserve">
          <source>When the port is started, both scripts post messages to the worker and handle messages sent from it using &lt;code&gt;port.postMessage()&lt;/code&gt; and &lt;code&gt;port.onmessage&lt;/code&gt;, respectively:</source>
          <target state="translated">ポートが開始されると、両方のスクリプトがワーカーにメッセージを送信し、ポートから送信されたメッセージをそれぞれ &lt;code&gt;port.postMessage()&lt;/code&gt; および &lt;code&gt;port.onmessage&lt;/code&gt; を使用して処理します。</target>
        </trans-unit>
        <trans-unit id="88d47ec674ecb886615c0be510f12c1e0ec92e38" translate="yes" xml:space="preserve">
          <source>When the preview video begins to play, we know there's media to record, so we respond by calling the &lt;code&gt;&lt;a href=&quot;#Starting_media_recording&quot;&gt;startRecording()&lt;/a&gt;&lt;/code&gt; function we created earlier, passing in the preview video stream (as the source media to be recorded) and &lt;code&gt;recordingTimeMS&lt;/code&gt; as the number of milliseconds of media to record. As mentioned before, &lt;code&gt;startRecording()&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; whose resolution handler is called (receiving as input an array of &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects containing the chunks of recorded media data) once recording has completed.</source>
          <target state="translated">プレビュービデオの再生が始まると、記録するメディアがあることがわかります。そのため、先に作成した &lt;code&gt;&lt;a href=&quot;#Starting_media_recording&quot;&gt;startRecording()&lt;/a&gt;&lt;/code&gt; 関数を呼び出して（記録するソースメディアとして）プレビュービデオストリームを渡し、数として &lt;code&gt;recordingTimeMS&lt;/code&gt; を渡します。記録するメディアのミリ秒。前述のように、 &lt;code&gt;startRecording()&lt;/code&gt; すると、startRecording（）は解決ハンドラーが呼び出された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;を返します（入力として、記録されたメディアデータのチャンクを含む&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;オブジェクトの配列を受け取ります）。</target>
        </trans-unit>
        <trans-unit id="d28c7be1ba200f05c9f79e1058a1e236de27ea78" translate="yes" xml:space="preserve">
          <source>When the problem is reported, the user agent may focus the element and change the scrolling position of the document or perform some other action that brings the element to the user's attention. User agents may report more than one constraint violation if this element suffers from multiple problems at once. If the element is not rendered, then the user agent may report the error for the running script instead of notifying the user.</source>
          <target state="translated">問題が報告されると、ユーザエージェントは、要素に焦点を当て、文書のスクロール位置を変更するか、または要素をユーザの注意を引く何らかの他のアクションを実行してもよい。ユーザエージェントは、この要素が一度に複数の問題に苦しむ場合、複数の制約違反を報告してもよい。要素がレンダリングされない場合,ユーザエージェントは,ユーザに通知する代わりに,実行中のスクリプトに対してエラーを報告してもよい。</target>
        </trans-unit>
        <trans-unit id="cd399f4e43d1fbff3051d2f3cc9db341694f374e" translate="yes" xml:space="preserve">
          <source>When the promise is fulfilled, the fulfillment handler receives a value of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">promiseが履行されると、履行ハンドラーは &lt;code&gt;undefined&lt;/code&gt; の値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="1a97df6b10a130f07c83f20a008316d901cdbda8" translate="yes" xml:space="preserve">
          <source>When the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">アンロードのプロンプトが同じブラウジングコンテキストの前のドキュメントで終了したとき。以前のドキュメントがない場合、この値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="adad6cb70dcae1a052aa53cd9c1eeeba06043a37" translate="yes" xml:space="preserve">
          <source>When the receiver begins to receive media, an event is delivered to the receiver's &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;receiverPC&lt;/code&gt;. As explained in &lt;a href=&quot;#Starting_the_connection_process&quot;&gt;Starting the connection process&lt;/a&gt;, the current WebRTC specification uses the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event for this, but some browsers haven't been updated to support this yet, so we also need to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; event. The &lt;code&gt;handleReceiverTrackEvent()&lt;/code&gt; and &lt;code&gt;handleReceiverAddStreamEvent()&lt;/code&gt; methods, shown below, handle these.</source>
          <target state="translated">レシーバーがメディアの受信を開始すると、イベントがレシーバーの&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;である &lt;code&gt;receiverPC&lt;/code&gt; に配信されます。&lt;a href=&quot;#Starting_the_connection_process&quot;&gt;接続プロセスの開始で&lt;/a&gt;説明したように、現在のWebRTC仕様はこれに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; イベントを使用しますが、これをサポートするようにまだ更新されていないブラウザーがあるため、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; イベントも処理する必要があります。 &lt;code&gt;handleReceiverTrackEvent()&lt;/code&gt; と &lt;code&gt;handleReceiverAddStreamEvent()&lt;/code&gt; 以下に示す方法は、これらを処理します。</target>
        </trans-unit>
        <trans-unit id="537c5b67511ced3deaf928994ad8df896145f723" translate="yes" xml:space="preserve">
          <source>When the receiver's &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICE layer comes up with a new candidate to propose, it issues an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event to &lt;code&gt;receiverPC&lt;/code&gt;. The &lt;code&gt;icecandidate&lt;/code&gt; event handler's job is to transmit the candidate to the caller. In our example, we are directly controlling both the caller and the receiver, so we can just directly add the candidate to the caller by calling its &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;addIceCandidate()&lt;/code&gt;&lt;/a&gt; method. That's handled by &lt;code&gt;handleReceiverIceEvent()&lt;/code&gt;.</source>
          <target state="translated">受信者の &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICEレイヤーが提案する新しい候補を &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; 、icecandidateイベントを &lt;code&gt;receiverPC&lt;/code&gt; に発行します。 &lt;code&gt;icecandidate&lt;/code&gt; のイベントハンドラの仕事は、呼び出し側に候補者を送信することです。この例では、呼び出し側と受信側の両方を直接制御しているため、&lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;addIceCandidate()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで、候補を呼び出し側に直接追加できます。これは、 &lt;code&gt;handleReceiverIceEvent()&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="3e08a7dedbb40b64e048a6926edb37c0ec6a93f0" translate="yes" xml:space="preserve">
          <source>When the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establishment start time is given. If a persistent connection is used, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">接続を開く要求がネットワークに送信されたとき。トランスポート層がエラーを報告し、接続確立が再開された場合、最後の接続確立開始時刻が示されます。永続的な接続が使用されている場合、値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="6330942dde22ea4f2ab3c7b78ab71f7dcc0e416d" translate="yes" xml:space="preserve">
          <source>When the sample is ready to play, the program sets up the UI so it is ready to go.</source>
          <target state="translated">サンプルが再生できる状態になると、プログラムがUIを設定してくれるので、すぐに再生できるようになります。</target>
        </trans-unit>
        <trans-unit id="fd95af1279863fef4276b2646716dcbc0614ae30" translate="yes" xml:space="preserve">
          <source>When the scissor test is enabled, only pixels within the scissor box can be modified by drawing commands.</source>
          <target state="translated">シザーテストを有効にすると、描画コマンドでシザーボックス内のピクセルのみを修正できるようになります。</target>
        </trans-unit>
        <trans-unit id="03fc356dce5942faad0d83681aaba03d171f758a" translate="yes" xml:space="preserve">
          <source>When the script is run, we set up an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event listener, so that once the page is fully loaded, our &lt;code&gt;startup()&lt;/code&gt; function is called.</source>
          <target state="translated">スクリプトが実行されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントリスナーが設定され、ページが完全にロードされると、 &lt;code&gt;startup()&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b0a37825790ba0caa1e8e247362ba97814c0ef39" translate="yes" xml:space="preserve">
          <source>When the second &lt;code&gt;restore()&lt;/code&gt; statement is called, the original state (the one we set up before the first call to &lt;code&gt;save&lt;/code&gt;) is restored and the last rectangle is once again drawn in black.</source>
          <target state="translated">2番目の &lt;code&gt;restore()&lt;/code&gt; ステートメントが呼び出されると、元の状態（ &lt;code&gt;save&lt;/code&gt; への最初の呼び出しの前に設定した状態）が復元され、最後の長方形がもう一度黒で描画されます。</target>
        </trans-unit>
        <trans-unit id="fc7bf41b6462d43688e17f92d02accf760e77236" translate="yes" xml:space="preserve">
          <source>When the secure connection handshake starts. If no such connection is requested, it returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">セキュア接続ハンドシェイクが開始したとき。そのような接続が要求されていない場合は、 &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="33155266d0c1586320b9d2840caac0f2b71eeadf" translate="yes" xml:space="preserve">
          <source>When the shift key is pressed, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event is first fired, and the &lt;code&gt;key&lt;/code&gt; property value is set to be the string &lt;code&gt;&quot;Shift&quot;&lt;/code&gt;. As we keep holding this key, the keydown event does not continue to fire repeatedly because it produced no character key.</source>
          <target state="translated">Shiftキーが押されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントが発生し、 &lt;code&gt;key&lt;/code&gt; プロパティ値が文字列 &lt;code&gt;&quot;Shift&quot;&lt;/code&gt; に設定されます。このキーを押し続けると、keydownイベントは文字キーを生成しなかったため、繰り返し発生しなくなります。</target>
        </trans-unit>
        <trans-unit id="c33925f313b9963274b88c6fe522b5dbd1c593f0" translate="yes" xml:space="preserve">
          <source>When the shift key is pressed, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event is first fired, and the &lt;code&gt;key&lt;/code&gt; property value is set to the string &lt;code&gt;&quot;Shift&quot;&lt;/code&gt;. As we keep holding this key, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event does not continue to fire repeatedly because it does not produce a character key.</source>
          <target state="translated">Shiftキーが押されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントが発生し、 &lt;code&gt;key&lt;/code&gt; プロパティ値が文字列 &lt;code&gt;&quot;Shift&quot;&lt;/code&gt; に設定されます。このキーを押し続けると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントは文字キーを生成しないため、繰り返し発生し続けることはありません。</target>
        </trans-unit>
        <trans-unit id="edb11773ee8c2aacfc99893b3087a6f719b5dae2" translate="yes" xml:space="preserve">
          <source>When the source stream ends, &lt;code&gt;state&lt;/code&gt; is set to &lt;code&gt;&quot;inactive&quot;&lt;/code&gt; and data gathering stops. A final &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;code&gt;MediaRecorder&lt;/code&gt;, followed by a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">ソースストリームが終了すると、 &lt;code&gt;state&lt;/code&gt; が &lt;code&gt;&quot;inactive&quot;&lt;/code&gt; 設定され、データ収集が停止します。最終 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; イベントがに送信され &lt;code&gt;MediaRecorder&lt;/code&gt; 続いて、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; イベント。</target>
        </trans-unit>
        <trans-unit id="6feee11ede65732d796f8f44eec1bdd622f546c7" translate="yes" xml:space="preserve">
          <source>When the stream is done (&lt;code&gt;if (done)&lt;/code&gt;), we run &lt;code&gt;reader.cancel()&lt;/code&gt; to cancel the stream, signalling that we don't need to use it any more.</source>
          <target state="translated">ストリームが完了し &lt;code&gt;if (done)&lt;/code&gt; ）、 &lt;code&gt;reader.cancel()&lt;/code&gt; を実行してストリームをキャンセルし、これ以上使用する必要がないことを通知します。</target>
        </trans-unit>
        <trans-unit id="c9605836e46f30a630e4532dbbfb1b2329dc5df4" translate="yes" xml:space="preserve">
          <source>When the stream is obtained, it's attached to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element so that it's visible on screen, and we grab the audio track and video track into the variables &lt;code&gt;audioTrack&lt;/code&gt; and &lt;code&gt;videoTrack&lt;/code&gt;.</source>
          <target state="translated">ストリームが取得されると、画面に表示されるように&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素に添付され、オーディオトラックとビデオトラックを変数 &lt;code&gt;audioTrack&lt;/code&gt; と &lt;code&gt;videoTrack&lt;/code&gt; に取り込みます。</target>
        </trans-unit>
        <trans-unit id="44380c5f983cc0aa64cc8e5f12f59ade351d3e24" translate="yes" xml:space="preserve">
          <source>When the user begins a drag by clicking and dragging from the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/vbox&quot;&gt;vbox&lt;/a&gt;&lt;/code&gt; above, the &lt;code&gt;startDrag()&lt;/code&gt; function below is called.</source>
          <target state="translated">ユーザーがクリックして上の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/vbox&quot;&gt;vbox&lt;/a&gt;&lt;/code&gt; からドラッグしてドラッグを開始すると、以下の &lt;code&gt;startDrag()&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a727dd034a906afe61a84778788e2557337f530d" translate="yes" xml:space="preserve">
          <source>When the user clicks on a username they want to call, the &lt;code&gt;invite()&lt;/code&gt; function is invoked as the event handler for that &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">ユーザーが呼び出したいユーザー名をクリックすると、 &lt;code&gt;invite()&lt;/code&gt; 関数がその &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラーとして呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1a9cb607dc7ab7c1e6a20774f9edcd5040f0b611" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Connect&quot; button, the &lt;code&gt;connectPeers()&lt;/code&gt; method is called. We're going to break this up and look at it a bit at a time, for clarity.</source>
          <target state="translated">ユーザーが「接続」ボタンをクリックすると、 &lt;code&gt;connectPeers()&lt;/code&gt; メソッドが呼び出されます。わかりやすくするために、これを分割して少しずつ見ていきます。</target>
        </trans-unit>
        <trans-unit id="6cf9ab1ead49e14d7101b88104637155345dba0b" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Disconnect&quot; button, the &lt;code&gt;disconnectPeers()&lt;/code&gt; method previously set as that button's handler is called.</source>
          <target state="translated">ユーザーが「切断」ボタンをクリックすると、そのボタンのハンドラーとして以前に設定された &lt;code&gt;disconnectPeers()&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="38f71e84f14303251b25fa9bc7c263c60c6e12ea" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Hang Up&quot; button to end the call, the &lt;code&gt;hangUpCall()&lt;/code&gt; function is called:</source>
          <target state="translated">ユーザーが[Hang Up]ボタンをクリックして通話を終了すると、 &lt;code&gt;hangUpCall()&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a0560da4e829067e55910d706beed3eb7c32acaf" translate="yes" xml:space="preserve">
          <source>When the user clicks the OK button, text entered in the input field is returned. If the user clicks OK without entering any text, an empty string is returned. If the user clicks the Cancel button, this function returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ユーザーが[OK]ボタンをクリックすると、入力フィールドに入力されたテキストが返されます。ユーザーがテキストを入力せずに[OK]をクリックすると、空の文字列が返されます。ユーザーが[キャンセル]ボタンをクリックすると、この関数は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0da7af71e9afccd4774acf1db4d7f301071f054e" translate="yes" xml:space="preserve">
          <source>When the user clicks the play/pause toggle button while the oscillators aren't playing, the &lt;code&gt;startOscillators()&lt;/code&gt; function gets called.</source>
          <target state="translated">オシレーターが再生されていないときにユーザーが再生/一時停止トグルボタンをクリックすると、 &lt;code&gt;startOscillators()&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="85a5b4ec0d907d93592cb3b8ce597a8b5f7e9392" translate="yes" xml:space="preserve">
          <source>When the user lifts a finger off the surface, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; event is sent. We handle this event by calling the &lt;code&gt;handleEnd()&lt;/code&gt; function below. Its job is to draw the last line segment for the touch that ended and remove the touch point from the ongoing touch list.</source>
          <target state="translated">ユーザーが指を表面から &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; と、pointerupイベントが送信されます。このイベントを処理するには、以下の &lt;code&gt;handleEnd()&lt;/code&gt; 関数を呼び出します。その仕事は、終了したタッチの最後の線分を描画し、進行中のタッチリストからタッチポイントを削除することです。</target>
        </trans-unit>
        <trans-unit id="6dbd3f962c7dae65fbc32df1e5d887467a22b95e" translate="yes" xml:space="preserve">
          <source>When the user lifts a finger off the surface, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; event is sent. We handle this by calling the &lt;code&gt;handleEnd()&lt;/code&gt; function below. Its job is to draw the last line segment for each touch that ended and remove the touch point from the ongoing touch list.</source>
          <target state="translated">ユーザーが指を表面から &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; と、touchendイベントが送信されます。これを処理するには、以下の &lt;code&gt;handleEnd()&lt;/code&gt; 関数を呼び出します。その仕事は、終了した各タッチの最後の線分を描画し、進行中のタッチリストからタッチポイントを削除することです。</target>
        </trans-unit>
        <trans-unit id="71d928d3e6a835e3c077144d6aedf206b3dd2962" translate="yes" xml:space="preserve">
          <source>When the user minimizes the window or switches to another tab, the API sends a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; event to let listeners know the state of the page has changed. You can detect the event and perform some actions or behave differently. For example, if your web app is playing a video, it can pause the video when the user puts the tab into the background, and resume playback when the user returns to the tab. The user doesn't lose their place in the video, the video's soundtrack doesn't interfere with audio in the new foreground tab, and the user doesn't miss any of the video in the meantime.</source>
          <target state="translated">ユーザーがウィンドウを最小化するか、別のタブに切り替えると、APIは &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; イベントを送信して、ページの状態が変更されたことをリスナーに通知します。イベントを検出して、いくつかのアクションを実行したり、動作を変更したりできます。たとえば、Webアプリがビデオを再生している場合、ユーザーがタブをバックグラウンドに置いたときにビデオを一時停止し、ユーザーがタブに戻ったときに再生を再開できます。ユーザーはビデオ内で場所を失うことはなく、ビデオのサウンドトラックが新しい前景タブのオーディオに干渉することはありません。その間、ユーザーはビデオを見逃しません。</target>
        </trans-unit>
        <trans-unit id="e9767aacd80e0e11093c6182eb78d14ae45fcb58" translate="yes" xml:space="preserve">
          <source>When the user presses the &quot;Send&quot; button, the sendMessage() method we've established as the handler for the button's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event is called. That method is simple enough:</source>
          <target state="translated">ユーザーが「送信」ボタンを押すと、ボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのハンドラーとして設定したsendMessage（）メソッドが呼び出されます。その方法は十分に単純です。</target>
        </trans-unit>
        <trans-unit id="691a84eb7e0015fcfba268cd3a31b2d0b4a6aad7" translate="yes" xml:space="preserve">
          <source>When the user releases the key, the &lt;code&gt;keyup&lt;/code&gt; event is sent.</source>
          <target state="translated">ユーザーがキーを &lt;code&gt;keyup&lt;/code&gt; と、keyupイベントが送信されます。</target>
        </trans-unit>
        <trans-unit id="046dc1872cb2544b6c632950577d726593ff414e" translate="yes" xml:space="preserve">
          <source>When the user releases the mouse, the drag and drop operation ends. If the mouse was released over an element that is a valid drop target, that is, one that cancelled the last &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event, and then the drop will be successful, and a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event will fire at the target. Otherwise, the drag operation is cancelled, and no &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event is fired.</source>
          <target state="translated">ユーザーがマウスを離すと、ドラッグアンドドロップ操作が終了します。有効なドロップターゲット、つまり最後の &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; または &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントをキャンセルした要素の上でマウスが離された場合、ドロップは成功し、 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントがターゲットで発生します。それ以外の場合、ドラッグ操作はキャンセルされ、 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントは発生しません。</target>
        </trans-unit>
        <trans-unit id="90cd70947355aae5353dbe81d9dacd074974261d" translate="yes" xml:space="preserve">
          <source>When the user selects a file, the &lt;code&gt;handleFiles()&lt;/code&gt; function gets called with a &lt;a href=&quot;../filelist&quot;&gt;&lt;code&gt;FileList&lt;/code&gt;&lt;/a&gt; object containing &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects representing the files selected by the user.</source>
          <target state="translated">ユーザーがファイルを選択すると、 &lt;code&gt;handleFiles()&lt;/code&gt; 関数が、ユーザーが選択したファイルを表す&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトを含む&lt;a href=&quot;../filelist&quot;&gt; &lt;code&gt;FileList&lt;/code&gt; &lt;/a&gt;オブジェクトで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8204c07806596cca627eedd95b13c66cb1a8f3e1" translate="yes" xml:space="preserve">
          <source>When the value of this property changes a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event fires on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このプロパティの値が変更されると、&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt;オブジェクトで &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="23287c04cee6187c8575338ae4ce1445f08cebdf" translate="yes" xml:space="preserve">
          <source>When the value of this property changes, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティの値が変更されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; イベントが&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; に&lt;/a&gt;送信されます。</target>
        </trans-unit>
        <trans-unit id="4aabbed96dc4375bad394b2d3431585bafa5eb9e" translate="yes" xml:space="preserve">
          <source>When the visibility of the specified element crosses over one of the observer's visibility thresholds (as listed in &lt;a href=&quot;thresholds&quot;&gt;&lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt;&lt;/a&gt;, the observer's callback is executed with an &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; representing the intersection change which occurred. Note that this design allows multiple elements' intersection changes to be processed by a single call to the callback using an array of &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; objects.</source>
          <target state="translated">指定された要素の可視性がオブザーバーの可視性しきい値の1つを超えると（&lt;a href=&quot;thresholds&quot;&gt; &lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt; &lt;/a&gt;にリストされているように）、オブザーバーのコールバックは、発生した交差変化を表す&lt;a href=&quot;../intersectionobserverentry&quot;&gt; &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; で&lt;/a&gt;実行されます。この設計では、複数の要素の交差変化を許可することに注意してください &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; オブジェクトの配列を使用してコールバックを1回呼び出すことで処理されます。</target>
        </trans-unit>
        <trans-unit id="d2941bdb6d2957bace5c69002a5658260596873c" translate="yes" xml:space="preserve">
          <source>When there is an error caused by calling &lt;a href=&quot;element/requestpointerlock&quot;&gt;&lt;code&gt;requestPointerLock()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;document/exitpointerlock&quot;&gt;&lt;code&gt;exitPointerLock()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; event is dispatched to the &lt;code&gt;document&lt;/code&gt;. This is a simple event and contains no extra data.</source>
          <target state="translated">呼び出すことによって生じる誤差がある場合&lt;a href=&quot;element/requestpointerlock&quot;&gt; &lt;code&gt;requestPointerLock()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;document/exitpointerlock&quot;&gt; &lt;code&gt;exitPointerLock()&lt;/code&gt; は&lt;/a&gt;、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; のイベントがに派遣され &lt;code&gt;document&lt;/code&gt; 。これは単純なイベントであり、追加のデータは含まれていません。</target>
        </trans-unit>
        <trans-unit id="33c0c76361bf9f839d684610f50b7454c7d59ae1" translate="yes" xml:space="preserve">
          <source>When there is no selection, the active element is the page's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">何も選択されていない場合、アクティブな要素はページの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="939ca88904b6a1bf7a85b5630413d3f6b194d620" translate="yes" xml:space="preserve">
          <source>When these transferable objects are transferred, they are 'neutered' on the previous context &amp;mdash; the one they previously belonged to. For instance a port, when is sent, cannot be used anymore by the original context. Note that the only two objects that can currently be transferred are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらの転送可能なオブジェクトが転送されると、それらは以前のコンテキスト（以前はそれらが属していたもの）で「無効」になります。たとえば、ポートが送信されると、元のコンテキストでは使用できなくなります。現在転送できるオブジェクトは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; の&lt;/a&gt; 2つだけであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="04293ceb4c72045381c1033f9d03a53a9fc46188" translate="yes" xml:space="preserve">
          <source>When this event is processed, the target's border is set to &lt;code&gt;dashed&lt;/code&gt; to provide a clear visual indication the element has received a move event.</source>
          <target state="translated">このイベントが処理されると、ターゲットの境界が &lt;code&gt;dashed&lt;/code&gt; に設定され、要素がmoveイベントを受け取ったことを視覚的に明確に示します。</target>
        </trans-unit>
        <trans-unit id="55306c9e63cf68f3a0947c7106d9b313abd34896" translate="yes" xml:space="preserve">
          <source>When this event returns (or sets the &lt;code&gt;returnValue&lt;/code&gt; property to) a value other than &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, the user is prompted to confirm the page unload. In some browsers, the return value of the event is displayed in this dialog. Starting with Firefox 44, Chrome 51, Opera 38 and Safari 9.1, a generic string not under the control of the webpage will be shown instead of the returned string. For example, Firefox displays the string &quot;This page is asking you to confirm that you want to leave - data you have entered may not be saved.&quot; (See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=588292&quot;&gt;bug 588292&lt;/a&gt;), and Chrome displays the string &quot;Do you want to leave this site? Changes you made may not be saved&quot; (see &lt;a href=&quot;https://www.chromestatus.com/feature/5349061406228480&quot;&gt;Chrome Platform Status&lt;/a&gt;).</source>
          <target state="translated">このイベントが &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; 以外の値を返す（または &lt;code&gt;returnValue&lt;/code&gt; プロパティを設定する）と、ユーザーはページのアンロードを確認するように求められます。一部のブラウザでは、イベントの戻り値がこのダイアログに表示されます。 Firefox 44、Chrome 51、Opera 38、およびSafari 9.1以降、返された文字列の代わりに、Webページの制御下にない一般的な文字列が表示されます。たとえば、Firefoxは文字列「このページでは、終了することを確認するように求めています-入力したデータは保存されない可能性があります。」を表示します。 （&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=588292&quot;&gt;バグ588292を&lt;/a&gt;参照）。Chromeに「このサイトから移動しますか？変更内容が保存されない可能性があります」という文字列が表示されます（&lt;a href=&quot;https://www.chromestatus.com/feature/5349061406228480&quot;&gt;Chromeプラットフォームのステータスを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b675ce375b683ebfefb729b81a7eb5944f8b8e72" translate="yes" xml:space="preserve">
          <source>When this example is executed, it begins by collecting references to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element as well as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; used to toggle playback on and off. It then sets up an event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the play toggle button and attempts to automatically begin playback by calling &lt;code&gt;playVideo()&lt;/code&gt;.</source>
          <target state="translated">この例が実行されると、まず&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素への参照と、再生のオンとオフを切り替えるために使用される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;への参照を収集します。次に、再生トグルボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラーを設定し、 &lt;code&gt;playVideo()&lt;/code&gt; を呼び出して自動的に再生を開始しようとします。</target>
        </trans-unit>
        <trans-unit id="d6963259b1639a97714b25bf71859ceda2efe355" translate="yes" xml:space="preserve">
          <source>When this is a new document created dynamically.</source>
          <target state="translated">これが動的に作成された新規ドキュメントの場合。</target>
        </trans-unit>
        <trans-unit id="a7cc7af49aee2c249093e11831d780c2917df107" translate="yes" xml:space="preserve">
          <source>When this property is used, font loading has a timeline with three periods. The lengths of the first two periods depend on the value of the property and the user agent. (See below.)</source>
          <target state="translated">こ のプ ロ パテ ィ を使用す る と 、 フ ォ ン ト 読み込みは 3 つの期間を持つ タ イ ム ラ イ ン を持ち ます。最初の 2 つの期間の長さは、プロパティの値とユーザーエージェントに依存します。(以下を参照)。</target>
        </trans-unit>
        <trans-unit id="d3b8d4c5e0bbbf65d205f57082e9e093bfa6a136" translate="yes" xml:space="preserve">
          <source>When this property's value changes, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connectionstatechange&quot;&gt;connectionstatechange&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">このプロパティの値が変更されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connectionstatechange&quot;&gt;connectionstatechange&lt;/a&gt;&lt;/code&gt; イベントが&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;インスタンスに送信されます。</target>
        </trans-unit>
        <trans-unit id="72fcf2f3217fcc81de10c510d68d0a69d72945d4" translate="yes" xml:space="preserve">
          <source>When this routine is called, the video element is displaying the most recent frame of video data, which looks like this:</source>
          <target state="translated">このルーチンが呼び出されると、video 要素には、以下のような動画データの最新フレームが表示されます。</target>
        </trans-unit>
        <trans-unit id="12da763f4582496e5d8fcc3f5219d4d93ab09a37" translate="yes" xml:space="preserve">
          <source>When this script gets executed, the image starts loading.</source>
          <target state="translated">このスクリプトが実行されると、画像の読み込みが開始されます。</target>
        </trans-unit>
        <trans-unit id="79065f4bd450dbbee8cbd4937d33d44eccde0b47" translate="yes" xml:space="preserve">
          <source>When time runs out, if there are still tasks left in the list, we call &lt;a href=&quot;window/requestidlecallback&quot;&gt;&lt;code&gt;requestIdleCallback()&lt;/code&gt;&lt;/a&gt; again so that we can continue to process the tasks the next time there's idle time available. If the queue is empty, we set taskHandle to 0 to indicate that we don't have a callback scheduled. That way, we'll know to request a callback next time &lt;code&gt;enqueueTask()&lt;/code&gt; is called.</source>
          <target state="translated">時間がなくなると、まだリストにタスクが残っている場合は、&lt;a href=&quot;window/requestidlecallback&quot;&gt; &lt;code&gt;requestIdleCallback()&lt;/code&gt; を&lt;/a&gt;再度呼び出して、次にアイドル時間があるときにタスクの処理を続行できるようにします。キューが空の場合は、taskHandleを0に設定して、コールバックがスケジュールされていないことを示します。そうすれば、次に &lt;code&gt;enqueueTask()&lt;/code&gt; が呼び出されたときにコールバックを要求することがわかります。</target>
        </trans-unit>
        <trans-unit id="0aac95d000954a3d204a1d1969ae467ca96ea7d4" translate="yes" xml:space="preserve">
          <source>When two or more pointer device types are being used concurrently, multiple pointers (one for each pointerType) are considered primary. For example, a touch contact and a mouse cursor moved simultaneously will produce pointers that are both considered primary. If there are multiple primary pointers, these pointers will all produce &lt;em&gt;compatibility mouse events&lt;/em&gt; (see &lt;a href=&quot;../pointer_events&quot;&gt;&lt;code&gt;Pointer_events&lt;/code&gt;&lt;/a&gt; for more information about pointer, mouse and touch interaction).</source>
          <target state="translated">2つ以上のポインターデバイスタイプが同時に使用されている場合、複数のポインター（各pointerTypeに1つ）がプライマリと見なされます。たとえば、タッチ接触とマウスカーソルを同時に動かすと、両方がプライマリと見なされるポインタが生成されます。複数のプライマリポインターがある場合、これらのポインターはすべて&lt;em&gt;互換性のあるマウスイベントを&lt;/em&gt;生成し&lt;em&gt;ます&lt;/em&gt;（ポインター、マウス、およびタッチ操作の詳細については、&lt;a href=&quot;../pointer_events&quot;&gt; &lt;code&gt;Pointer_events&lt;/code&gt; &lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="79146cc2fed45810d8933ee53b7f0d75b48acaa3" translate="yes" xml:space="preserve">
          <source>When two users running Firefox are communicating on a data channel, the message size limit is much larger than when Firefox and Chrome are communicating because Firefox implements a now deprecated technique for sending large messages in multiple SCTP messages, which Chrome does not. Chrome will instead see a series of messages that it believes are complete, and will deliver them to the receiving &lt;code&gt;RTCDataChannel&lt;/code&gt; as multiple messages.</source>
          <target state="translated">Firefoxを実行している2人のユーザーがデータチャネルで通信している場合、Firefoxは複数のSCTPメッセージで大きなメッセージを送信するための非推奨の手法を実装しているため、FirefoxとChromeが通信している場合よりもメッセージサイズの制限がはるかに大きくなります。代わりに、Chromeは完全であると考える一連のメッセージを確認し、それらを複数のメッセージとして受信 &lt;code&gt;RTCDataChannel&lt;/code&gt; に配信します。</target>
        </trans-unit>
        <trans-unit id="03ab3dc0897982abbf51b2d2f98ed4e141beaa2d" translate="yes" xml:space="preserve">
          <source>When user privacy is a concern, It is important that any web app implementation will invalidate cookie data after a certain timeout and won't rely on the browser clearing session cookies</source>
          <target state="translated">ユーザーのプライバシーが懸念される場合、ウェブアプリの実装では、一定のタイムアウト後にクッキーデータを無効にし、ブラウザがセッションクッキーをクリアすることに頼らないことが重要です。</target>
        </trans-unit>
        <trans-unit id="d2e5e3cd9b9145fc3fafcf8fa78521b8237792c4" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;attributeOldValue&lt;/code&gt;, setting the &lt;a href=&quot;attributes&quot;&gt;&lt;code&gt;attributes&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;true&lt;/code&gt; is optional.</source>
          <target state="translated">&lt;code&gt;attributeOldValue&lt;/code&gt; を使用する場合、&lt;a href=&quot;attributes&quot;&gt; &lt;code&gt;attributes&lt;/code&gt; &lt;/a&gt;オプションの &lt;code&gt;true&lt;/code&gt; への設定はオプションです。</target>
        </trans-unit>
        <trans-unit id="3c2c8af7b21e55d22c72205444d7779f95b876bc" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;fill&lt;/code&gt; (or &lt;a href=&quot;../../canvasrenderingcontext2d/clip&quot;&gt;&lt;code&gt;clip&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../canvasrenderingcontext2d/ispointinpath&quot;&gt;&lt;code&gt;isPointinPath&lt;/code&gt;&lt;/a&gt;) you can optionally provide a fill rule algorithm by which to determine if a point is inside or outside a path and thus if it gets filled or not. This is useful when a path intersects itself or is nested.</source>
          <target state="translated">使用する場合 &lt;code&gt;fill&lt;/code&gt; （または&lt;a href=&quot;../../canvasrenderingcontext2d/clip&quot;&gt; &lt;code&gt;clip&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../canvasrenderingcontext2d/ispointinpath&quot;&gt; &lt;code&gt;isPointinPath&lt;/code&gt; を&lt;/a&gt;）必要に応じて、それが満たされていない又は取得した場合ポイントは、内部または経路外したがってかどうかを決定することにより、塗りつぶしルールアルゴリズムを提供することができます。これは、パスがそれ自体と交差するか、ネストされている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5525b44cb435301e9e2d96a565462e3b7e7bd0de" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt; and the &lt;a href=&quot;../ext_color_buffer_float&quot;&gt;&lt;code&gt;EXT_color_buffer_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;と&lt;a href=&quot;../ext_color_buffer_float&quot;&gt; &lt;code&gt;EXT_color_buffer_float&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="c3a9d9ab629bb1bafb9d6af3f01a8328b78f7c95" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, a &lt;code&gt;gl.INVALID_OPERATION&lt;/code&gt; error is thrown if this vertex attribute is defined as a integer in the vertex shader (e.g. &lt;code&gt;uvec4&lt;/code&gt; or &lt;code&gt;ivec4&lt;/code&gt;, instead of &lt;code&gt;vec4&lt;/code&gt;).</source>
          <target state="translated">使用する際に&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGLの2コンテキストを&lt;/a&gt;、 &lt;code&gt;gl.INVALID_OPERATION&lt;/code&gt; のこの頂点属性（例えば頂点シェーダの整数として定義されている場合にエラーが発生し &lt;code&gt;uvec4&lt;/code&gt; 又は &lt;code&gt;ivec4&lt;/code&gt; 代わりに、 &lt;code&gt;vec4&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ef8a8674d827d3157a103d101c1065fd8d184038" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following value is available additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;を使用する場合、次の値を追加で使用できます。</target>
        </trans-unit>
        <trans-unit id="7fec16d0a877f1230719ce7d2e45502118b7fcce" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values are available additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;を使用する場合、次の値を追加で使用できます。</target>
        </trans-unit>
        <trans-unit id="cffddfb39d31b7f924328b8a24c9e1e7b124cdb2" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values are possible additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;を使用する場合、次の値も追加で使用できます。</target>
        </trans-unit>
        <trans-unit id="901bd858af36cd2f860d3cc5cf18b06261148069" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values can be returned additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;を使用する場合、次の値が追加で返される可能性があります。</target>
        </trans-unit>
        <trans-unit id="cfc5a807a16d8763a6af26723eb7f8de518d16c2" translate="yes" xml:space="preserve">
          <source>When using a user agent where no constructor has been implemented yet, it is possible to access such an object using the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;Window.URL&lt;/code&gt;&lt;/a&gt; properties (prefixed with Webkit-based browser as &lt;code&gt;Window.webkitURL&lt;/code&gt;).</source>
          <target state="translated">コンストラクターがまだ実装されていないユーザーエージェントを使用する場合、&lt;a href=&quot;url&quot;&gt; &lt;code&gt;Window.URL&lt;/code&gt; &lt;/a&gt;プロパティ（Webkitベースのブラウザーに &lt;code&gt;Window.webkitURL&lt;/code&gt; としてプレフィックスが付けられています）を使用して、そのようなオブジェクトにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="6059ede8763193571c8298041ada7ceb08b9b717" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../angle_instanced_arrays&quot;&gt;&lt;code&gt;ANGLE_instanced_arrays&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../angle_instanced_arrays&quot;&gt; &lt;code&gt;ANGLE_instanced_arrays&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="e240042b8c5547c103948c7d0738bdd865ac9dc0" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../ext_blend_minmax&quot;&gt;&lt;code&gt;EXT_blend_minmax&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../ext_blend_minmax&quot;&gt; &lt;code&gt;EXT_blend_minmax&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="71829a009bdbb443a69713bbf6ee5fb36b746c77" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../ext_srgb&quot;&gt;&lt;code&gt;EXT_sRGB&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../ext_srgb&quot;&gt; &lt;code&gt;EXT_sRGB&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="7e7f33789e2adf6a8f07c9c64b3d7ff1a06208b7" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_element_index_uint&quot;&gt;&lt;code&gt;OES_element_index_uint&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_element_index_uint&quot;&gt; &lt;code&gt;OES_element_index_uint&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="098c02e50b889a98a266cefa28187523880306a1" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_standard_derivatives&quot;&gt;&lt;code&gt;OES_standard_derivatives&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_standard_derivatives&quot;&gt; &lt;code&gt;OES_standard_derivatives&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="5878b2b9f9491e09388f470dce3148619add20d1" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_texture_half_float&quot;&gt;&lt;code&gt;OES_texture_half_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_texture_half_float&quot;&gt; &lt;code&gt;OES_texture_half_float&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="076f5831e432985cd0dab8de24bd154c44f98b1a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../rtcpeerconnection/rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection()&lt;/code&gt;&lt;/a&gt; constructor, we will specify an &lt;a href=&quot;../rtcconfiguration&quot;&gt;&lt;code&gt;RTCConfiguration&lt;/code&gt;&lt;/a&gt;-compliant object providing configuration parameters for the connection. We use only one of these in this example: &lt;code&gt;iceServers&lt;/code&gt;. This is an array of objects describing STUN and/or TURN servers for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; layer to use when attempting to establish a route between the caller and the callee. These servers are used to determine the best route and protocols to use when communicating between the peers, even if they're behind a firewall or using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT&lt;/a&gt;.</source>
          <target state="translated">使用している場合&lt;a href=&quot;../rtcpeerconnection/rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection()&lt;/code&gt; &lt;/a&gt;コンストラクタを、我々は指定されます&lt;a href=&quot;../rtcconfiguration&quot;&gt; &lt;code&gt;RTCConfiguration&lt;/code&gt; &lt;/a&gt;接続するための設定パラメータを提供準拠のオブジェクトを。この例では、 &lt;code&gt;iceServers&lt;/code&gt; の 1つのみを使用します。これは、呼び出し元と呼び出し先の間にルートを確立しようとするときに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt;レイヤーが使用するSTUNサーバーまたはTURNサーバー、あるいはその両方を記述するオブジェクトの配列です。これらのサーバーは、ファイアウォールの背後にある場合や&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT&lt;/a&gt;を使用している場合でも、ピア間の通信に使用する最適なルートとプロトコルを決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="151e0be03dfc6be359a3a921b91810424de829bd" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_color_buffer_float&quot;&gt;&lt;code&gt;WEBGL_color_buffer_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_color_buffer_float&quot;&gt; &lt;code&gt;WEBGL_color_buffer_float&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="f49ea6b64d516fee7209a8df82fcb44a2847417a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_astc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_astc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_astc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_astc&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="19823bedcb0c759e981165e869c32a435dc8cf88" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_atc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_atc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_atc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_atc&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="fa6ec0efb0979f86b9941a490dfa61c365c83a90" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_etc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_etc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_etc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_etc&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="13ceb5fa832db0a0aae7e9ef04d05aa0613e5dad" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_etc1&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_etc1&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_etc1&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_etc1&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="58f4f58fcbe5f1fe8252165cb77b50c134490559" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_pvrtc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_pvrtc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_pvrtc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_pvrtc&lt;/code&gt; &lt;/a&gt;拡張を使用する場合：</target>
        </trans-unit>
        <trans-unit id="38a9d850924d40adf91cade1e57a5f780ea720d5" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_s3tc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_s3tc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_s3tc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_s3tc&lt;/code&gt; &lt;/a&gt;拡張を使用する場合：</target>
        </trans-unit>
        <trans-unit id="7c6eca164002431deb6ae22b534fe06cd95bec1a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_s3tc_srgb&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_s3tc_srgb&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_s3tc_srgb&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_s3tc_srgb&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="e36293671aea26271a85137a0ba2bd84259355ed" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_depth_texture&quot;&gt;&lt;code&gt;WEBGL_depth_texture&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_depth_texture&quot;&gt; &lt;code&gt;WEBGL_depth_texture&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="1f392a7166e8e2ca483c3f6e047ee57b892fc9a3" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_draw_buffers&quot;&gt;&lt;code&gt;WEBGL_draw_buffers&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_draw_buffers&quot;&gt; &lt;code&gt;WEBGL_draw_buffers&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="0552f1ae794471fbf65586e2e2f7c6e7ef59bda7" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method it is possible to use the third optional parameter to pass a filename inside the &lt;code&gt;Content-Disposition&lt;/code&gt; header that is sent to the server. When no filename is specified (or the parameter isn't supported), the name &quot;blob&quot; is used.</source>
          <target state="translated">使用する際に&lt;a href=&quot;append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドをその内部にファイル名を渡すために第三のオプションのパラメータを使用することができる &lt;code&gt;Content-Disposition&lt;/code&gt; サーバに送信されるヘッダ。ファイル名が指定されていない場合（またはパラメーターがサポートされていない場合）、「blob」という名前が使用されます。</target>
        </trans-unit>
        <trans-unit id="8698e9a59e52f4976079a9d3a23753b4f05b604a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float&quot;&gt;&lt;code&gt;OES_texture_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float&quot;&gt; &lt;code&gt;OES_texture_float&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="488c629de7c8b1461d0e2a3edf0b7719602ab347" translate="yes" xml:space="preserve">
          <source>When using the deprecated callback-based version of &lt;code&gt;setLocalDescription()&lt;/code&gt;, the following exceptions may occur:</source>
          <target state="translated">廃止予定のコールバックベースのバージョンの &lt;code&gt;setLocalDescription()&lt;/code&gt; を使用すると、次の例外が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="4c11852cf7f6d35f27feb76f547f683d816548a6" translate="yes" xml:space="preserve">
          <source>When using the deprecated callback-based version of &lt;code&gt;setRemoteDescription()&lt;/code&gt;, the following exceptions may occur:</source>
          <target state="translated">廃止予定のコールバックベースのバージョンの &lt;code&gt;setRemoteDescription()&lt;/code&gt; を使用すると、次の例外が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="0f7a2d9bc03cf525798c002ab65cb112b9a6cf49" translate="yes" xml:space="preserve">
          <source>When using the inline HTML markup (&lt;code&gt;&amp;lt;body onerror=&quot;alert('an error occurred')&quot;&amp;gt;&lt;/code&gt;), the HTML specification requires arguments passed to &lt;code&gt;onerror&lt;/code&gt; to be named &lt;code&gt;event&lt;/code&gt;, &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;lineno&lt;/code&gt;, &lt;code&gt;colno&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;. In browsers that have not implemented this requirement, they can still be obtained via &lt;code&gt;arguments[0]&lt;/code&gt; through &lt;code&gt;arguments[2]&lt;/code&gt;.</source>
          <target state="translated">インラインHTMLマークアップ（ &lt;code&gt;&amp;lt;body onerror=&quot;alert('an error occurred')&quot;&amp;gt;&lt;/code&gt; ）を使用する場合、HTML仕様では、 &lt;code&gt;onerror&lt;/code&gt; に渡す引数に &lt;code&gt;event&lt;/code&gt; 、 &lt;code&gt;source&lt;/code&gt; 、 &lt;code&gt;lineno&lt;/code&gt; 、 &lt;code&gt;colno&lt;/code&gt; 、 &lt;code&gt;error&lt;/code&gt; という名前を付ける必要があります。この要件を実装していないブラウザでも、それらは &lt;code&gt;arguments[0]&lt;/code&gt; から &lt;code&gt;arguments[2]&lt;/code&gt; を介して取得できます。</target>
        </trans-unit>
        <trans-unit id="28da46c0755b3ffe2198514ad0b3aa40f4e11454" translate="yes" xml:space="preserve">
          <source>When viewing a document, an element with focus is always the &lt;a href=&quot;../documentorshadowroot/activeelement&quot;&gt;active element&lt;/a&gt; in the document, but an active element does not necessarily have focus. For example, an active element within a popup window that is not the foreground does not have focus.</source>
          <target state="translated">ドキュメントを表示するとき、フォーカスのある要素は常にドキュメント内の&lt;a href=&quot;../documentorshadowroot/activeelement&quot;&gt;アクティブな要素&lt;/a&gt;ですが、アクティブな要素は必ずしもフォーカスがあるとは限りません。たとえば、前景ではないポップアップウィンドウ内のアクティブな要素にはフォーカスがありません。</target>
        </trans-unit>
        <trans-unit id="a4ef80d4e5aef04ff5ba6df1ae55c5427bace4b5" translate="yes" xml:space="preserve">
          <source>When we come to call the &lt;code&gt;imgLoad()&lt;/code&gt; function, we call it with the url to the image we want to load, as we might expect, but the rest of the code is a little different:</source>
          <target state="translated">我々は呼び出すために来るとき &lt;code&gt;imgLoad()&lt;/code&gt; 関数を、私たちが想像のとおり、我々は、我々がロードしたい画像へのURLでそれを呼び出すが、コードの残りの部分は少し異なります。</target>
        </trans-unit>
        <trans-unit id="daa8612a0c9c45f58a41457196952f1438a32ef4" translate="yes" xml:space="preserve">
          <source>When we come to run the function, we do the following. This is because Firefox doesn't support &lt;a href=&quot;../speechsynthesis/onvoiceschanged&quot;&gt;&lt;code&gt;SpeechSynthesis.onvoiceschanged&lt;/code&gt;&lt;/a&gt;, and will just return a list of voices when &lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt; is fired. With Chrome however, you have to wait for the event to fire before populating the list, hence the if statement seen below.</source>
          <target state="translated">関数を実行するときは、次のことを行います。これは、Firefoxが&lt;a href=&quot;../speechsynthesis/onvoiceschanged&quot;&gt; &lt;code&gt;SpeechSynthesis.onvoiceschanged&lt;/code&gt; を&lt;/a&gt;サポートしておらず、&lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに音声のリストを返すだけだからです。ただしChromeでは、イベントが発生するのを待ってからリストにデータを入力する必要があるため、以下のifステートメントを使用します。</target>
        </trans-unit>
        <trans-unit id="0c95a9e8c24eeb31488c12c1c3406c5ae1c457e9" translate="yes" xml:space="preserve">
          <source>When we want to explicitly set a key&amp;rsquo;s offset from the other keys, we can specify an offset directly in the object, separated from the declaration with a comma. In the above example, to make sure that Alice&amp;rsquo;s color changes at 30% (not 50%) for the color change, we are giving it &lt;code&gt;offset: 0.3&lt;/code&gt;.</source>
          <target state="translated">他のキーからのキーのオフセットを明示的に設定したい場合は、宣言からコンマで区切って、オブジェクトに直接オフセットを指定できます。上記の例では、色の変化に対してアリスの色が30％（50％ではない）で変化することを確認するために、 &lt;code&gt;offset: 0.3&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="4bee466b9b61109435ee1146df9ef9dd231d861e" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLQuery&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">で作業する場合 &lt;code&gt;WebGLQuery&lt;/code&gt; のオブジェクトの以下のメソッド&lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; は&lt;/a&gt;便利です。</target>
        </trans-unit>
        <trans-unit id="43143ffc89e172f649dfaa01f74554ab08b5d302" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLSampler&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">で作業する場合 &lt;code&gt;WebGLSampler&lt;/code&gt; のオブジェクトの以下のメソッド&lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; は&lt;/a&gt;便利です。</target>
        </trans-unit>
        <trans-unit id="a204f461438b2bffcbacd97612b7d7dd04f3dc41" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLSync&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">で作業する場合 &lt;code&gt;WebGLSync&lt;/code&gt; のオブジェクトの以下のメソッド&lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; は&lt;/a&gt;便利です。</target>
        </trans-unit>
        <trans-unit id="999fea53b32cb0175886ac200d5445d5cc584f4f" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLTransformFeedback&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">で作業する場合 &lt;code&gt;WebGLTransformFeedback&lt;/code&gt; のオブジェクトの以下のメソッド&lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; は&lt;/a&gt;便利です。</target>
        </trans-unit>
        <trans-unit id="3909ef72341ca4702e501c73befc333a25b9763d" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLVertexArrayObject&lt;/code&gt; objects, the following methods are useful:</source>
          <target state="translated">&lt;code&gt;WebGLVertexArrayObject&lt;/code&gt; オブジェクトを操作する場合、次のメソッドが役立ちます。</target>
        </trans-unit>
        <trans-unit id="c678ee9895b7dbff3144d5dd35ada232c348f208" translate="yes" xml:space="preserve">
          <source>When working with MSE, the following tools are a must have:</source>
          <target state="translated">MSEで作業する際には、以下のツールが必須です。</target>
        </trans-unit>
        <trans-unit id="16bafe2426e5dc4186e26ad59cd9d6c052eec641" translate="yes" xml:space="preserve">
          <source>When working with an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;, if you create the audio context from inside a &lt;code&gt;click&lt;/code&gt; event the state should automatically be set to &lt;code&gt;running&lt;/code&gt;. Here is a simple example of creating the context from inside a &lt;code&gt;click&lt;/code&gt; event:</source>
          <target state="translated">で作業する場合&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;あなたが内側からオーディオコンテキストを作成する場合は、 &lt;code&gt;click&lt;/code&gt; イベントの状態を自動的に設定する必要が &lt;code&gt;running&lt;/code&gt; 。次に、 &lt;code&gt;click&lt;/code&gt; イベント内からコンテキストを作成する簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="ef480760ef4502ba63b9c5946d9bbb6f124b2d6e" translate="yes" xml:space="preserve">
          <source>When working with files, you are looking at either the grabbing the file from an &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; (i.e. an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element), or you're looking to fetch the file and decode it into a buffer. Both are legitimate ways of working, however, it's more common to use the former when you are working will full-length tracks, and the latter when working with shorter, more sample-like tracks.</source>
          <target state="translated">ファイルを操作するときは、&lt;a href=&quot;../htmlmediaelement&quot;&gt; &lt;code&gt;HTMLMediaElement&lt;/code&gt; &lt;/a&gt;（つまり、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素）からファイルを取得するか、ファイルをフェッチしてそれをバッファーにデコードすることを考えています。どちらも合法的な作業方法ですが、フルレングスのトラックで作業する場合は前者を使用し、サンプルのような短いトラックで作業する場合は後者を使用するのが一般的です。</target>
        </trans-unit>
        <trans-unit id="93563d9724827d60d0fc12b8c68aa5c0bbc5c2f9" translate="yes" xml:space="preserve">
          <source>When working with media source extensions, it is likely that you need to condition your assets before you can stream them. This article takes you through the requirements and shows you a toolchain you can use to encode your assets appropriately.</source>
          <target state="translated">メディアソース拡張機能を使用して作業する場合、ストリーミングする前にアセットを条件付けする必要があるでしょう。この記事では、要件を説明し、アセットを適切にエンコードするために使用できるツールチェーンを紹介します。</target>
        </trans-unit>
        <trans-unit id="b33f2b99a3d01e4dd9689a6763cfbebecd22daf0" translate="yes" xml:space="preserve">
          <source>When working with the keyboard, focus rings are a handy indicator to help navigating on a page. To draw focus rings on a canvas drawing, the &lt;code&gt;drawFocusIfNeeded&lt;/code&gt; property can be used.</source>
          <target state="translated">キーボードを操作する場合、フォーカスリングは、ページ内を移動するのに役立つ便利なインジケータです。キャンバスの描画にフォーカスリングを描画するには、 &lt;code&gt;drawFocusIfNeeded&lt;/code&gt; プロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="212d058f76197537c8637cc3abc9611b30b850f5" translate="yes" xml:space="preserve">
          <source>When writing code for the Web with JavaScript, there are a great many APIs available. Below is a list of all the interfaces (that is, types of objects) that you may be able to use while developing your Web app or site.</source>
          <target state="translated">JavaScript を使って Web 用のコードを書く場合、非常に多くの API が利用できます。以下に、Web アプリやサイトを開発している間に使用できる可能性のあるすべてのインターフェイス(つまり、オブジェクトの種類)のリストを示します。</target>
        </trans-unit>
        <trans-unit id="eb67b1e9a2a9d6fd72938c0bf3d17c62284c482d" translate="yes" xml:space="preserve">
          <source>When you are using an &lt;a href=&quot;../iirfilternode&quot;&gt;&lt;code&gt;IIRFilterNode&lt;/code&gt;&lt;/a&gt; instead of a &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; you are creating the filter yourself, rather than just choosing a pre-programmed type. So you can create a highpass filter, or a lowpass filter, or a more bespoke one. And this is where the IIR filter node is useful &amp;mdash; you can create your own if none of the alaready available settings is right for what you want. As well as this, if your audio graph needed a highpass and a bandpass filter within it, you could just use one IIR filter node in place of the two biquad filter nodes you would otherwise need for this.</source>
          <target state="translated">&lt;a href=&quot;../biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;../iirfilternode&quot;&gt; &lt;code&gt;IIRFilterNode&lt;/code&gt; &lt;/a&gt;を使用する場合、事前にプログラムされたタイプを選択するだけでなく、自分でフィルターを作成します。したがって、ハイパスフィルター、ローパスフィルター、またはより特注のフィルターを作成できます。そして、これがIIRフィルターノードが役立つ場所です。すでに利用可能な設定がどれも必要なものに適切でない場合は、独自に作成できます。これに加えて、オーディオグラフ内にハイパスフィルターとバンドパスフィルターが必要な場合は、2つのバイカッドフィルターノードの代わりに1つのIIRフィルターノードを使用します。</target>
        </trans-unit>
        <trans-unit id="7b6f3bdf5b3e9728f4dfa61f824b1bd8ddad1687" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;stop()&lt;/code&gt; on a transceiver, the sender immediately stops sending media and each of its RTP streams are closed using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP&lt;/a&gt;&lt;code&gt;&quot;BYE&quot;&lt;/code&gt; message. The receiver then stops receiving media; the receiver's &lt;a href=&quot;../rtcrtpreceiver/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; is stopped, and the transceiver's &lt;a href=&quot;stopped&quot;&gt;&lt;code&gt;stopped&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">あなたが呼び出すと &lt;code&gt;stop()&lt;/code&gt; トランシーバに、送信者はすぐにメディアの送信を停止し、そのRTPストリームのそれぞれは、使用して閉じられている&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP &lt;/a&gt; &lt;code&gt;&quot;BYE&quot;&lt;/code&gt; メッセージを。その後、レシーバーはメディアの受信を停止します。レシーバーの&lt;a href=&quot;../rtcrtpreceiver/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt;が停止し、トランシーバーの&lt;a href=&quot;stopped&quot;&gt; &lt;code&gt;stopped&lt;/code&gt; &lt;/a&gt;プロパティが &lt;code&gt;true&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="752816c410a167aa92af868f97203689aa5abf87" translate="yes" xml:space="preserve">
          <source>When you change the value of &lt;code&gt;direction&lt;/code&gt;, an &lt;code&gt;InvalidStateError&lt;/code&gt; exception will occur if the connection is closed or the receiver is stopped.</source>
          <target state="translated">あなたがの値を変更するとき &lt;code&gt;direction&lt;/code&gt; 、 &lt;code&gt;InvalidStateError&lt;/code&gt; の接続が閉じられるか、受信機が停止している場合は、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="575ee9c5def7c7753488ae6c2dfe0e6d80c78123" translate="yes" xml:space="preserve">
          <source>When you choose different options, the page is instantly updated; in addition, your choices are stored in &lt;code&gt;localStorage&lt;/code&gt;, so that when you leave the page and load it again, later on, your choices are remembered.</source>
          <target state="translated">別のオプションを選択すると、ページが即座に更新されます。さらに、選択内容は &lt;code&gt;localStorage&lt;/code&gt; に保存されるため、ページを離れて再度ロードすると、後で選択内容が記憶されます。</target>
        </trans-unit>
        <trans-unit id="d9140f42d6088c690941df0d4bd0d84684481de6" translate="yes" xml:space="preserve">
          <source>When you click on the &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; element and then the &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; element, you'll notice two things. First, the &lt;code&gt;composed&lt;/code&gt; property returns &lt;code&gt;true&lt;/code&gt; beause the &lt;code&gt;click&lt;/code&gt; event is always able to propagate across shadow boundaries. Second, you'll notice a difference in the value of &lt;code&gt;composedPath&lt;/code&gt; for the two elements. The &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; element's composed path is this:</source>
          <target state="translated">&lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; 要素をクリックしてから &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; 要素をクリックすると、2つのことに気づくでしょう。まず、 &lt;code&gt;composed&lt;/code&gt; プロパティが返す &lt;code&gt;true&lt;/code&gt; beause &lt;code&gt;click&lt;/code&gt; イベントは、常に影の境界を越えて伝播することができます。次に、2つの要素の &lt;code&gt;composedPath&lt;/code&gt; の値に違いがあることに気づくでしょう。 &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; 要素の合成パスは、この次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e50e7cd11e676bc9b9a31e2c689dc5beb22f1344" translate="yes" xml:space="preserve">
          <source>When you create a new database or increase the version number of an existing database (by specifying a higher version number than you did previously, when &lt;a href=&quot;#Opening_a_database&quot;&gt;Opening a database&lt;/a&gt;), the &lt;code&gt;onupgradeneeded&lt;/code&gt; event will be triggered and an &lt;a href=&quot;../idbversionchangeevent&quot;&gt;IDBVersionChangeEvent&lt;/a&gt; object will be passed to any &lt;code&gt;onversionchange&lt;/code&gt; event handler set up on &lt;code&gt;request.result&lt;/code&gt; (i.e., &lt;code&gt;db&lt;/code&gt; in the example). In the handler for the &lt;code&gt;upgradeneeded&lt;/code&gt; event, you should create the object stores needed for this version of the database:</source>
          <target state="translated">新しいデータベースを作成するか、既存のデータベースのバージョン番号を上げる（以前に&lt;a href=&quot;#Opening_a_database&quot;&gt;データベースを開く&lt;/a&gt;ときよりも高いバージョン番号を指定する）と、 &lt;code&gt;onupgradeneeded&lt;/code&gt; イベントがトリガーされ、&lt;a href=&quot;../idbversionchangeevent&quot;&gt;IDBVersionChangeEvent&lt;/a&gt;オブジェクトが &lt;code&gt;onversionchange&lt;/code&gt; イベントに渡されますハンドラーは、 &lt;code&gt;request.result&lt;/code&gt; （つまり、この例では &lt;code&gt;db&lt;/code&gt; )でセットアップされます。 &lt;code&gt;upgradeneeded&lt;/code&gt; イベントのハンドラーで、このバージョンのデータベースに必要なオブジェクトストアを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="374af22673faa85cdb234cce75182580d5b5ba0a" translate="yes" xml:space="preserve">
          <source>When you create a script&amp;ndash;whether it's inline in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element or included in the web page by means of a script loading instruction&amp;ndash;you can immediately begin using the API for the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; elements to manipulate the document itself or to get at the children of that document, which are the various elements in the web page. Your DOM programming may be something as simple as the following, which displays an alert message by using the &lt;a href=&quot;../window/alert&quot;&gt;&lt;code&gt;alert()&lt;/code&gt;&lt;/a&gt; function from the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object, or it may use more sophisticated DOM methods to actually create new content, as in the longer example below.</source>
          <target state="translated">&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 要素にインラインであるか、スクリプトの読み込み命令によってWebページに含まれているかにかかわらず、スクリプトを作成すると、&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt;要素のAPIをすぐに使用して、ドキュメント自体を操作したり取得したりできます。そのドキュメントの子で、これはWebページのさまざまな要素です。 DOMプログラミングは、&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../window/alert&quot;&gt; &lt;code&gt;alert()&lt;/code&gt; &lt;/a&gt;関数を使用してアラートメッセージを表示する次のような単純なものである場合もあれば、より長いDOMメソッドを使用して実際に新しいコンテンツを作成する場合もあります（下の長い例を参照）。</target>
        </trans-unit>
        <trans-unit id="4a26d422cfe918fc94972b2cddcce0d19cc79225" translate="yes" xml:space="preserve">
          <source>When you create an audio context (either offline or online) it is created with a &lt;code&gt;state&lt;/code&gt;, which can be &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, or &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="translated">オーディオコンテキスト（オフラインまたはオンライン）を作成すると、 &lt;code&gt;suspended&lt;/code&gt; 、 &lt;code&gt;running&lt;/code&gt; 、または &lt;code&gt;closed&lt;/code&gt; できる &lt;code&gt;state&lt;/code&gt; で作成されます。</target>
        </trans-unit>
        <trans-unit id="dedc19355c2c70e85291c33a0546eb73b75e7849" translate="yes" xml:space="preserve">
          <source>When you first create a WebGL context, the size of the viewport will match the size of the canvas. However, if you resize the canvas, you will need to tell the WebGL context a new viewport setting. In this situation, you can use &lt;code&gt;gl.viewport&lt;/code&gt;.</source>
          <target state="translated">最初にWebGLコンテキストを作成するとき、ビューポートのサイズはキャンバスのサイズと一致します。ただし、キャンバスのサイズを変更する場合は、WebGLコンテキストに新しいビューポート設定を通知する必要があります。この状況では、 &lt;code&gt;gl.viewport&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="d8bb6baedfd0b37f85b2cbecbee095bfc96babdd" translate="yes" xml:space="preserve">
          <source>When you get a reference to a &lt;code&gt;table&lt;/code&gt; object, as in the following example, you routinely use all three of these interfaces interchangeably on the object, perhaps without knowing it.</source>
          <target state="translated">次の例のように、 &lt;code&gt;table&lt;/code&gt; オブジェクトへの参照を取得するとき、これらの3つのインターフェイスすべてを日常的にオブジェクト上で交換可能に使用しています。</target>
        </trans-unit>
        <trans-unit id="76e487e4cdcfcfbcb00f9d7533125332467f8420" translate="yes" xml:space="preserve">
          <source>When you have a &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object you'd like to reference by URL from HTML, you can create an object URL for it like this:</source>
          <target state="translated">HTMLからURLで参照する&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトがある場合、次のようにそのオブジェクトのURLを作成できます。</target>
        </trans-unit>
        <trans-unit id="ced5e892d53e45c9af4b4e5f88747350156148d5" translate="yes" xml:space="preserve">
          <source>When you instantiate the ServerSocket class, it is bound to the port number you specified by the &lt;em&gt;port&lt;/em&gt; argument.</source>
          <target state="translated">ServerSocketクラスをインスタンス化すると、&lt;em&gt;port&lt;/em&gt;引数で指定したポート番号にバインドされます。</target>
        </trans-unit>
        <trans-unit id="62d0f0d62628b8ed9a95636e6c00dc90b7bef672" translate="yes" xml:space="preserve">
          <source>When you look through the source code of &lt;a href=&quot;https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/webgl-demo.js&quot;&gt;our demo's main JavaScript file&lt;/a&gt;, you can easily find the WebVR-specific parts by searching for the string &quot;WebVR&quot; in preceding comments.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/webgl-demo.js&quot;&gt;デモのメインJavaScriptファイルの&lt;/a&gt;ソースコードを確認すると、前のコメントで文字列「WebVR」を検索することで、WebVR固有の部分を簡単に見つけることができます。</target>
        </trans-unit>
        <trans-unit id="b6370283fec311ae4dd8ef646dac7e106c7c5f36" translate="yes" xml:space="preserve">
          <source>When you pass a method to &lt;code&gt;setInterval()&lt;/code&gt; or any other function, it is invoked with the wrong &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; value. This problem is explained in detail in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScript reference&lt;/a&gt;.</source>
          <target state="translated">メソッドを &lt;code&gt;setInterval()&lt;/code&gt; または他の関数に渡すと、間違った&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt;値で呼び出されます。この問題は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScriptリファレンス&lt;/a&gt;で詳しく説明されています。</target>
        </trans-unit>
        <trans-unit id="39e1a9153308bb8ee47af5cb3755e6a1d9bb81c5" translate="yes" xml:space="preserve">
          <source>When you pass a method to &lt;code&gt;setTimeout()&lt;/code&gt; (or any other function, for that matter), it will be invoked with a &lt;code&gt;this&lt;/code&gt; value that may differ from your expectation. This issue is explained in detail in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScript reference&lt;/a&gt;.</source>
          <target state="translated">メソッドを &lt;code&gt;setTimeout()&lt;/code&gt; （または他の関数、さらに言えば他の関数）に渡すと、期待とは異なる可能性がある &lt;code&gt;this&lt;/code&gt; 値で呼び出されます。この問題は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScriptリファレンス&lt;/a&gt;で詳しく説明されています。</target>
        </trans-unit>
        <trans-unit id="1225f7125b5ee57e4758124d1b46580cf6102326" translate="yes" xml:space="preserve">
          <source>When you trap events on the window, document, or other roomy elements, you can get the coordinates of that event (e.g., a click) and route it properly, as the following example demonstrates:</source>
          <target state="translated">ウィンドウ、ドキュメント、または他の部屋のような要素にイベントをトラップすると、次の例で示すように、そのイベントの座標(クリックなど)を取得して適切にルート化することができます。</target>
        </trans-unit>
        <trans-unit id="993d68d0d2cf41ae1b379f9d8014b2e37154b27b" translate="yes" xml:space="preserve">
          <source>When you want to remove an attribute, you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete&quot;&gt;delete operator&lt;/a&gt;.</source>
          <target state="translated">属性を削除する場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete&quot;&gt;削除演算子を&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="a23a487ac9773df26d204b78f917023c484472cb" translate="yes" xml:space="preserve">
          <source>When you want to stop sending messages down the channel, you can invoke &lt;a href=&quot;messageport/close&quot;&gt;&lt;code&gt;MessagePort.close&lt;/code&gt;&lt;/a&gt; to close the ports.</source>
          <target state="translated">チャネルを&lt;a href=&quot;messageport/close&quot;&gt; &lt;code&gt;MessagePort.close&lt;/code&gt; &lt;/a&gt;メッセージの送信を停止する場合は、MessagePort.closeを呼び出してポートを閉じることができます。</target>
        </trans-unit>
        <trans-unit id="7e41e085dc476e29380f021d890bfa6b70a87d89" translate="yes" xml:space="preserve">
          <source>When you wish to provide your own certificates for use by an &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; instead of having the &lt;code&gt;RTCPeerConnection&lt;/code&gt; generate them automatically, you do so through calls to &lt;a href=&quot;rtcpeerconnection/generatecertificate&quot;&gt;&lt;code&gt;RTCPeerConnection.generateCertificate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;RTCPeerConnection&lt;/code&gt; が自動的に証明書を生成するのではなく、&lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; が&lt;/a&gt;使用する独自の証明書を提供したい場合は、&lt;a href=&quot;rtcpeerconnection/generatecertificate&quot;&gt; &lt;code&gt;RTCPeerConnection.generateCertificate()&lt;/code&gt; &lt;/a&gt;を呼び出して行います。</target>
        </trans-unit>
        <trans-unit id="7d70a0a55d60c98f66c2029191d41371c303563d" translate="yes" xml:space="preserve">
          <source>When you've finished using the WebSocket connection, call the WebSocket method &lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">WebSocket接続の使用が終了したら、WebSocketメソッド&lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="a8f8ffeed03dc8f2d0cf7dbe3d3e9cdb7dc8637e" translate="yes" xml:space="preserve">
          <source>When your page loads, it might have a non-null state object. This can happen, for example, if the page sets a state object (using &lt;code&gt;pushState()&lt;/code&gt; or &lt;code&gt;replaceState()&lt;/code&gt;) and then the user restarts their browser. When your page reloads, the page will receive an onload event, but no popstate event. However, if you read the history.state property, you'll get back the state object you would have gotten if a popstate had fired.</source>
          <target state="translated">ページが読み込まれると、null以外の状態オブジェクトが含まれる場合があります。これは、たとえば、ページが（ &lt;code&gt;pushState()&lt;/code&gt; または &lt;code&gt;replaceState()&lt;/code&gt; を使用して）状態オブジェクトを設定し、ユーザーがブラウザを再起動した場合に発生する可能性があります。ページがリロードすると、ページはonloadイベントを受け取りますが、popstateイベントは受け取りません。ただし、history.stateプロパティを読み取ると、popstateが発生した場合に取得したはずの状態オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="062c9a4f9d449b003b7ca18c5f85fdfa9d1c09ed" translate="yes" xml:space="preserve">
          <source>When your web app changes in such a way that a version change is required for your database, you need to consider what happens if the user has the old version of your app open in one tab and then loads the new version of your app in another. When you call &lt;code&gt;open()&lt;/code&gt; with a greater version than the actual version of the database, all other open databases must explicitly acknowledge the request before you can start making changes to the database (an &lt;code&gt;onblocked&lt;/code&gt; event is fired until they are closed or reloaded). Here's how it works:</source>
          <target state="translated">データベースのバージョンを変更する必要があるようにWebアプリが変更された場合、ユーザーが1つのタブでアプリの古いバージョンを開いてから、別のアプリで新しいバージョンのアプリを読み込んだ場合にどうなるかを考慮する必要があります。 。データベースの実際のバージョンよりも &lt;code&gt;onblocked&lt;/code&gt; バージョンで &lt;code&gt;open()&lt;/code&gt; を呼び出す場合、他のすべての開いているデータベースは、データベースへの変更を開始する前に、要求を明示的に確認する必要があります（onblockedイベントは、データベースが閉じられるか再ロードされるまで発生します）。仕組みは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7f1519c231b2cc34c8d8a9d88c74b6cebf629c8e" translate="yes" xml:space="preserve">
          <source>Whenever a new value is assigned to the location object, a document will be loaded using the URL as if &lt;code&gt;location.assign()&lt;/code&gt; had been called with the modified URL. Note that security settings, like CORS, may prevent this to effectively happen.</source>
          <target state="translated">locationオブジェクトに新しい値が割り当てられると、変更されたURLで &lt;code&gt;location.assign()&lt;/code&gt; が呼び出されたかのように、URLを使用してドキュメントがロードされます。CORSのようなセキュリティ設定により、これが効果的に発生しない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="13d80bc77477a352d26e0b670a11509478d97d2e" translate="yes" xml:space="preserve">
          <source>Whenever the target meets a threshold specified for the &lt;code&gt;IntersectionObserver&lt;/code&gt;, the callback is invoked. The callback receives a list of &lt;a href=&quot;intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; objects and the observer:</source>
          <target state="translated">ターゲットが &lt;code&gt;IntersectionObserver&lt;/code&gt; に指定されたしきい値に達すると、コールバックが呼び出されます。コールバックは、&lt;a href=&quot;intersectionobserverentry&quot;&gt; &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; &lt;/a&gt;オブジェクトとオブザーバーのリストを受け取ります。</target>
        </trans-unit>
        <trans-unit id="12ec40acd39b349647f72e20d888bc02e7e928fa" translate="yes" xml:space="preserve">
          <source>Whenever this value decreases to fall to or below the value specified in the &lt;a href=&quot;bufferedamountlowthreshold&quot;&gt;&lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt;&lt;/a&gt; property, the user agent fires the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; event. This event may be used, for example, to implement code which queues more messages to be sent whenever there's room to buffer them.</source>
          <target state="translated">この値が減少して&lt;a href=&quot;bufferedamountlowthreshold&quot;&gt; &lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt; &lt;/a&gt;プロパティで指定された値以下になると、ユーザーエージェントは常に &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; イベントを発生させます。このイベントは、たとえば、メッセージをバッファリングする余地があるときに送信されるメッセージをさらにキューに入れるコードを実装するために使用できます。</target>
        </trans-unit>
        <trans-unit id="e0ebe48a3c94951af91835ac4308b7fb4af93ccb" translate="yes" xml:space="preserve">
          <source>Whenever you move the mouse, this example checks whether the cursor is in a circular &lt;code&gt;Path2D&lt;/code&gt; path. If yes, the circle becomes green, otherwise it is red.</source>
          <target state="translated">この例では、マウスを動かすたびに、カーソルが円形の &lt;code&gt;Path2D&lt;/code&gt; パス内にあるかどうかを確認します。はいの場合、円は緑になり、そうでない場合は赤になります。</target>
        </trans-unit>
        <trans-unit id="6929b561cca04bbe53d80605e1ebc2768bfd7f3e" translate="yes" xml:space="preserve">
          <source>Whenever you move the mouse, this example checks whether the cursor is in the stroke of an elliptical &lt;code&gt;Path2D&lt;/code&gt; path. If yes, the ellipse's stroke becomes green, otherwise it is red.</source>
          <target state="translated">この例では、マウスを動かすたびに、カーソルが楕円形の &lt;code&gt;Path2D&lt;/code&gt; パスのストローク内にあるかどうかを確認します。はいの場合、楕円のストロークは緑になり、それ以外の場合は赤になります。</target>
        </trans-unit>
        <trans-unit id="9d0d6636dc2bf750351fbd92bd9e1b711132900a" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">どこに &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; ある&lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; の&lt;/a&gt;オブジェクト、および &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; はときに呼び出される関数です &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; のイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="d36f0ff60574ff33b5a7a3e045701e8a6594f836" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">どこに &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; ある&lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; の&lt;/a&gt;オブジェクト、および &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; はときに呼び出される関数です &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt; のイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="9041a88cefdc3d77196d7812a51677ca7177b77b" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">ここで、 &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; は&lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; &lt;/a&gt;オブジェクトであり、 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; イベントが発生したときに呼び出される関数です。</target>
        </trans-unit>
        <trans-unit id="78e2d2de85cc3ccfef3a5b8e8a619265bd75004d" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">ここで、 &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; は&lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; &lt;/a&gt;オブジェクトであり、 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt; イベントが発生したときに呼び出される関数です。</target>
        </trans-unit>
        <trans-unit id="5a4eee02f3f097ff38a344dee19eb455de207db0" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; event occurs. These events are of type &lt;a href=&quot;../devicelightevent&quot;&gt;&lt;code&gt;DeviceLightEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どこ &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; はときに呼び出される関数です &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; のイベントが発生するが。これらのイベントのタイプは&lt;a href=&quot;../devicelightevent&quot;&gt; &lt;code&gt;DeviceLightEvent&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="855d6e97dd06c760bfc54cd0834a5b596826c2ff" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; event occurs. These events are of type &lt;a href=&quot;../deviceproximityevent&quot;&gt;&lt;code&gt;DeviceProximityEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どこ &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; はときに呼び出される関数です &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; のイベントが発生するが。これらのイベントのタイプは&lt;a href=&quot;../deviceproximityevent&quot;&gt; &lt;code&gt;DeviceProximityEvent&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="35ac77582d7c567f16c6980afcf32505c256f5d2" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;funcRef&lt;/code&gt; is a reference to a function.</source>
          <target state="translated">どこ &lt;code&gt;funcRef&lt;/code&gt; は、関数への参照です。</target>
        </trans-unit>
        <trans-unit id="1761a310ddf608c0f04bd115e2a97e1741cb1a59" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;funcRef&lt;/code&gt; is a reference to a function. This function receives a &lt;a href=&quot;../devicemotionevent&quot;&gt;&lt;code&gt;DeviceMotionEvent&lt;/code&gt;&lt;/a&gt; object describing the motion that occurred.</source>
          <target state="translated">どこ &lt;code&gt;funcRef&lt;/code&gt; は、関数への参照です。この関数は、発生したモーションを表す&lt;a href=&quot;../devicemotionevent&quot;&gt; &lt;code&gt;DeviceMotionEvent&lt;/code&gt; &lt;/a&gt;オブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="9b95aebddef29decaeb051575dfedfcbd4106ac8" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;width&lt;/code&gt; is a string representing the width in number of pixels or as a percentage value.</source>
          <target state="translated">ここで、 &lt;code&gt;width&lt;/code&gt; は幅をピクセル数またはパーセント値として表す文字列です。</target>
        </trans-unit>
        <trans-unit id="3285d96d1174e09478c085d5c0d23acce0ac2ef4" translate="yes" xml:space="preserve">
          <source>Where is the data stored?</source>
          <target state="translated">データはどこに保存されていますか?</target>
        </trans-unit>
        <trans-unit id="7467fe8dfca0de5a7e53e1ad793bbdec24383169" translate="yes" xml:space="preserve">
          <source>Where it matters for WebRTC purposes, these are dealt with in a variety of places within the WebRTC infrastructure. For example, RTCP handles QoS monitoring.</source>
          <target state="translated">WebRTC の目的で重要な場合は、WebRTC インフラストラクチャ内のさまざまな場所で処理されます。例えば、RTCP は QoS 監視を処理します。</target>
        </trans-unit>
        <trans-unit id="91a87fb79d960cece8f96056c2af6befa24f1c98" translate="yes" xml:space="preserve">
          <source>Where p and a are the tags which are used in HTML for paragraph and link, respectively and they can be replaced by identifiers which are used for Cues in WebVTT file.</source>
          <target state="translated">ここで p と a はそれぞれ HTML でパラグラフとリンクに使用されるタグであり、WebVTT ファイルの Cues に使用される識別子で置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="fddbe0cb10eaa8b4994516f5b590fa1ffe7d04b6" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;parent&quot;&gt;&lt;code&gt;window.parent&lt;/code&gt;&lt;/a&gt; property returns the immediate parent of the current window, &lt;code&gt;window.top&lt;/code&gt; returns the topmost window in the hierarchy of window objects.</source>
          <target state="translated">どこ&lt;a href=&quot;parent&quot;&gt; &lt;code&gt;window.parent&lt;/code&gt; &lt;/a&gt;プロパティは、現在のウィンドウの直接の親を返し、 &lt;code&gt;window.top&lt;/code&gt; は、ウィンドウオブジェクトの階層における最上位のウィンドウを返します。</target>
        </trans-unit>
        <trans-unit id="9033ce8d21ed06b1408ca216cffa39cc3f095102" translate="yes" xml:space="preserve">
          <source>Where the components are defined as follows:</source>
          <target state="translated">ここで、構成要素は以下のように定義される。</target>
        </trans-unit>
        <trans-unit id="574e95b6d8efa0022fbdde2c832cda5a47026661" translate="yes" xml:space="preserve">
          <source>Whereas the &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; element's composed path is a follows:</source>
          <target state="translated">これに対し &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; 要素の合成パスは、次の次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4711f67e3cc0bb19d232e4c530869b9832f09b6a" translate="yes" xml:space="preserve">
          <source>Whether a device uses hardware or software decoding impacts how smooth and power efficient the video decoding is and how efficient the playback will be. The Media Capabilities API enables determining which codecs are supported and how performant a media file will be both in terms of smoothness and power efficiency.</source>
          <target state="translated">デバイスがハードウェアデコードを使用するかソフトウェアデコードを使用するかは、ビデオデコードがどれだけスムーズで電力効率が良く、再生がどれだけ効率的になるかに影響します。Media Capabilities APIを使用すると、どのコーデックがサポートされているかを判断し、メディアファイルが滑らかさと電力効率の両方の面でどの程度のパフォーマンスを発揮するかを判断することができます。</target>
        </trans-unit>
        <trans-unit id="a0210f3057e96b2243ad943c8728ce49f3f1ec69" translate="yes" xml:space="preserve">
          <source>Whether an event can be canceled or not is something that's determined when that event is initialized.</source>
          <target state="translated">イベントをキャンセルできるかどうかは、そのイベントが初期化されたときに決まるものです。</target>
        </trans-unit>
        <trans-unit id="22a49a142295885bf2698e17d4e6b3207f89d2a5" translate="yes" xml:space="preserve">
          <source>Whether the animation runs forwards (&lt;code&gt;normal&lt;/code&gt;), backwards (&lt;code&gt;reverse&lt;/code&gt;), switches direction after each iteration (&lt;code&gt;alternate&lt;/code&gt;), or runs backwards and switches direction after each iteration (&lt;code&gt;alternate-reverse&lt;/code&gt;). Defaults to &lt;code&gt;&quot;normal&quot;&lt;/code&gt;.</source>
          <target state="translated">アニメーションが順方向（ &lt;code&gt;normal&lt;/code&gt; ）、逆方向（ &lt;code&gt;reverse&lt;/code&gt; ）、各反復後に方向を切り替える（ &lt;code&gt;alternate&lt;/code&gt; ）か、逆方向に移動して各反復後に方向を切り替える（ &lt;code&gt;alternate-reverse&lt;/code&gt; ）か。デフォルトは &lt;code&gt;&quot;normal&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1395955c5a2548d4a30efb6327390af52ac0ea32" translate="yes" xml:space="preserve">
          <source>Whether the mouse coordinates are within a particular area on the canvas, is a common problem to solve. The hit region API allows you to define an area of your canvas and provides another possibility to expose interactive content on a canvas to accessibility tools. It allows you to make hit detection easier and lets you route events to DOM elements. The API has the following three methods (which are still experimental in current web browsers; check the browser compatibility tables).</source>
          <target state="translated">マウス座標がキャンバス上の特定の領域内にあるかどうかは、解決すべき一般的な問題です。ヒットリージョン API を使用すると、キャンバスの領域を定義することができ、キャンバス上のインタラクティブ コンテンツをアクセシビリティ ツールに公開するための別の可能性を提供します。これにより、ヒット検出を容易にし、イベントを DOM 要素にルーティングすることができます。API には以下の 3 つのメソッドがあります (現在の Web ブラウザではまだ実験的なものです。)</target>
        </trans-unit>
        <trans-unit id="a750597dbe2dc313c41aabb70b3b34b1d1884551" translate="yes" xml:space="preserve">
          <source>Which array &lt;code&gt;forEach()&lt;/code&gt; is being applied to.</source>
          <target state="translated">どの配列 &lt;code&gt;forEach()&lt;/code&gt; が適用されているか。</target>
        </trans-unit>
        <trans-unit id="2fa608cfd082a248a72feb1d19024301841e78f2" translate="yes" xml:space="preserve">
          <source>Which is exactly the same as the &lt;code&gt;(z + 1) * scaleFactor&lt;/code&gt; that we used in the previous example.</source>
          <target state="translated">これは、前の例で使用した &lt;code&gt;(z + 1) * scaleFactor&lt;/code&gt; とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="9c325461434f28b91467db739ce54f53cecbbcde" translate="yes" xml:space="preserve">
          <source>Which must be greater than the start time</source>
          <target state="translated">開始時刻よりも大きくなければならない</target>
        </trans-unit>
        <trans-unit id="22aa7b656b3bc7c7d0b959e574f102d7aab0f495" translate="yes" xml:space="preserve">
          <source>Which of the two functions, &lt;code&gt;onsuccess()&lt;/code&gt; or &lt;code&gt;onerror()&lt;/code&gt;, gets called? If everything succeeds, a success event (that is, a DOM event whose &lt;code&gt;type&lt;/code&gt; property is set to &lt;code&gt;&quot;success&quot;&lt;/code&gt;) is fired with &lt;code&gt;request&lt;/code&gt; as its &lt;code&gt;target&lt;/code&gt;. Once it is fired, the &lt;code&gt;onsuccess()&lt;/code&gt; function on &lt;code&gt;request&lt;/code&gt; is triggered with the success event as its argument. Otherwise, if there was any problem, an error event (that is, a DOM event whose &lt;code&gt;type&lt;/code&gt; property is set to &lt;code&gt;&quot;error&quot;&lt;/code&gt;) is fired at &lt;code&gt;request&lt;/code&gt;. This triggers the &lt;code&gt;&lt;code&gt;onerror()&lt;/code&gt;&lt;/code&gt; function with the error event as its argument.</source>
          <target state="translated">2つの関数 &lt;code&gt;onsuccess()&lt;/code&gt; または &lt;code&gt;onerror()&lt;/code&gt; のどちらが呼び出されますか？すべてが成功すると、成功イベント（つまり、 &lt;code&gt;type&lt;/code&gt; プロパティが &lt;code&gt;&quot;success&quot;&lt;/code&gt; に設定されているDOMイベント）が、 &lt;code&gt;request&lt;/code&gt; を &lt;code&gt;target&lt;/code&gt; として発生します。 &lt;code&gt;onsuccess()&lt;/code&gt; れると、 &lt;code&gt;request&lt;/code&gt; てonsuccess（）関数が成功イベントを引数としてトリガーされます。それ以外の場合、問題が発生すると、エラーイベント（つまり、 &lt;code&gt;type&lt;/code&gt; プロパティが &lt;code&gt;&quot;error&quot;&lt;/code&gt; に設定されたDOMイベント）が &lt;code&gt;request&lt;/code&gt; 時に発生します。これにより、エラーイベントを引数として &lt;code&gt;&lt;code&gt;onerror()&lt;/code&gt;&lt;/code&gt; 関数がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="d86a5675cc6478e7030415aaa83cd72801292548" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">While</target>
        </trans-unit>
        <trans-unit id="c6e6f3689e2ba49330864598266c50c96132a904" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;addEventListener()&lt;/code&gt; will let you add the same listener more than once for the same type if the options are different, the only option &lt;code&gt;removeEventListener()&lt;/code&gt; checks is the &lt;code&gt;capture&lt;/code&gt;/&lt;code&gt;useCapture&lt;/code&gt; flag. Its value must match for &lt;code&gt;removeEventListener()&lt;/code&gt; to match, but the other values don't.</source>
          <target state="translated">一方で &lt;code&gt;addEventListener()&lt;/code&gt; オプションが異なっている場合、唯一のオプションの同じタイプのためにあなたが複数回同じリスナーを追加できるようになる &lt;code&gt;removeEventListener()&lt;/code&gt; をチェックすることで &lt;code&gt;capture&lt;/code&gt; / &lt;code&gt;useCapture&lt;/code&gt; のフラグ。 &lt;code&gt;removeEventListener()&lt;/code&gt; が一致するには、その値が一致する必要がありますが、他の値は一致しません。</target>
        </trans-unit>
        <trans-unit id="c1ad5174754f314bfbceffd519c9479861a974d5" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;self.skipWaiting()&lt;/code&gt; can be called at any point during the service worker's execution, it will only have an effect if there's a newly installed service worker that might otherwise remain in the &lt;code&gt;waiting&lt;/code&gt; state. Therefore, it's common to call &lt;code&gt;self.skipWaiting()&lt;/code&gt; from inside of an &lt;a href=&quot;../installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">一方で &lt;code&gt;self.skipWaiting()&lt;/code&gt; がサービスワーカーの実行中の任意の時点で呼び出すことができそうに残っているかもしれない、新しくインストールされたサービスワーカーがありますならば、それだけで効果があります &lt;code&gt;waiting&lt;/code&gt; 状態。そのため、&lt;a href=&quot;../installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt;ハンドラー内から &lt;code&gt;self.skipWaiting()&lt;/code&gt; を呼び出すのが一般的です。</target>
        </trans-unit>
        <trans-unit id="58b29086e504954a8dc55b56aaafed1688c8d4a5" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;textContent&lt;/code&gt; gets the content of all elements, including &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, &lt;code&gt;innerText&lt;/code&gt; does not, only showing &amp;ldquo;human-readable&amp;rdquo; elements.</source>
          <target state="translated">ながら &lt;code&gt;textContent&lt;/code&gt; 含むすべての要素の内容を取得&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を、 &lt;code&gt;innerText&lt;/code&gt; 、唯一の「人間が読める」の要素を示すものではありません。</target>
        </trans-unit>
        <trans-unit id="1677d5cb2e08363d28b42f87c2956814a4aa4b6c" translate="yes" xml:space="preserve">
          <source>While RTP is intended for use in latency-critical scenarios, it doesn't inherently offer any features that ensure QoS. Instead, it only offers the information necessary to allow QoS to be implemented elsewhere in the stack.</source>
          <target state="translated">RTP はレイテンシが重要なシナリオでの使用を意図していますが、QoS を保証する機能は本質的には提供していません。その代わり、スタックの他の場所で QoS を実装できるようにするために必要な情報のみを提供します。</target>
        </trans-unit>
        <trans-unit id="01b5afbf41773c3c75e65b325870d18afd092ed1" translate="yes" xml:space="preserve">
          <source>While a &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; is blurred it does not lose it&amp;rsquo;s presenting status (&lt;a href=&quot;../vrdisplay/ispresenting&quot;&gt;&lt;code&gt;VRDisplay.isPresenting&lt;/code&gt;&lt;/a&gt; continues to report &lt;code&gt;true&lt;/code&gt;) but &lt;a href=&quot;../vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; without updating the provided &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt;&lt;code&gt;VRDisplay.getPose()&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;null&lt;/code&gt; members.</source>
          <target state="translated">一方で&lt;a href=&quot;../vrdisplay&quot;&gt; &lt;code&gt;VRDisplay&lt;/code&gt; が&lt;/a&gt;ぼやけている、それが状況を提示しています失うことはありません（&lt;a href=&quot;../vrdisplay/ispresenting&quot;&gt; &lt;code&gt;VRDisplay.isPresenting&lt;/code&gt; は&lt;/a&gt;報告し続ける &lt;code&gt;true&lt;/code&gt; ）が、&lt;a href=&quot;../vrdisplay/getframedata&quot;&gt; &lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;false&lt;/code&gt; て更新せず&lt;a href=&quot;../vrframedata&quot;&gt; &lt;code&gt;VRFrameData&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt; &lt;code&gt;VRDisplay.getPose()&lt;/code&gt; &lt;/a&gt;返し&lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; を&lt;/a&gt;して &lt;code&gt;null&lt;/code&gt; メンバー。</target>
        </trans-unit>
        <trans-unit id="aed3e1ed6ba05d0bd2deb652db96e58b8fbc306e" translate="yes" xml:space="preserve">
          <source>While creating a CustomEvent object, you must create the object from the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/window&quot;&gt;window&lt;/a&gt;. The &lt;code&gt;detail&lt;/code&gt; attribute of your CustomEvent will be subjected to the same restrictions. String and Array values will be readable by the content without restrictions, but custom Objects will not. While using a custom Object, you will need to define the attributes of that object that are readable from the content script using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;Components.utils.cloneInto()&lt;/a&gt;.</source>
          <target state="translated">CustomEventオブジェクトを作成するときは、同じ&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/window&quot;&gt;ウィンドウ&lt;/a&gt;からオブジェクトを作成する必要があります。CustomEvent の &lt;code&gt;detail&lt;/code&gt; 属性にも同じ制限が適用されます。文字列と配列の値はコンテンツによって制限なしで読み取ることができますが、カスタムオブジェクトは読み取れません。カスタムオブジェクトを使用する場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;Components.utils.cloneInto（）&lt;/a&gt;を使用してコンテンツスクリプトから読み取り可能なそのオブジェクトの属性を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b78b9ed44c178f4579608dc427ab472e6c6b06b" translate="yes" xml:space="preserve">
          <source>While handling an asynchronous request, the value of &lt;code&gt;responseText&lt;/code&gt; always has the current content received from the server, even if it's incomplete because the data has not been completely received yet.</source>
          <target state="translated">非同期リクエストを処理している間、 &lt;code&gt;responseText&lt;/code&gt; の値には、データがまだ完全に受信されていないために不完全であっても、サーバーから受信した現在のコンテンツが常に含まれます。</target>
        </trans-unit>
        <trans-unit id="a90e109a6a6f027b28c605504e9754ef85c08a1d" translate="yes" xml:space="preserve">
          <source>While iframes work by default, &quot;sandboxed&quot; iframes block Pointer lock. The ability to avoid this limitation, in the form of the attribute/value combination &lt;code&gt;&amp;lt;iframe sandbox=&quot;allow-pointer-lock&quot;&amp;gt;&lt;/code&gt;, is expected to appear in Chrome soon.</source>
          <target state="translated">iframeはデフォルトで機能しますが、「サンドボックス化」されたiframeはポインターロックをブロックします。この制限を回避する機能は、属性と値の組み合わせ &lt;code&gt;&amp;lt;iframe sandbox=&quot;allow-pointer-lock&quot;&amp;gt;&lt;/code&gt; の形式で、まもなくChromeに表示される予定です。</target>
        </trans-unit>
        <trans-unit id="a4ee9cf3cfba692860032328902f2f45d9229ca6" translate="yes" xml:space="preserve">
          <source>While information about a user's cameras and microphones are inaccessible for privacy reasons, an application can request the camera and microphone capabilities it needs and wants, using additional constraints. The following expresses a preference for 1280x720 camera resolution:</source>
          <target state="translated">ユーザのカメラやマイクに関する情報は、プライバシー上の理由からアクセスできませんが、アプリケーションは、追加の制約を使用して、必要なカメラやマイクの機能を要求することができます。以下は、1280x720 のカメラ解像度を希望することを示しています。</target>
        </trans-unit>
        <trans-unit id="3bf401a186baf2c5f165729ade6c02a73c539e5c" translate="yes" xml:space="preserve">
          <source>While slightly painful when initially working with scalable 2D graphics, paying attention to the pixel grid and the position of paths ensures that your drawings will look correct regardless of scaling or any other transformations involved. A 1.0-width vertical line drawn at the correct position will become a crisp 2-pixel line when scaled up by 2, and will appear at the correct position.</source>
          <target state="translated">スケーラブルな 2D グラフィックスを扱う際には、最初は少々苦労しますが、ピクセルグリッドとパスの位置に注意を払うことで、スケーリングやその他の変換に関係なく、図面が正しく見えるようになります。正しい位置に描かれた 1.0 幅の垂直線は、2 倍に拡大すると鮮明な 2 ピクセルの線になり、正しい位置に表示されます。</target>
        </trans-unit>
        <trans-unit id="8e42a26e3e14767ec938e2efc79ed1a212618720" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/browsing-the-web.html#abort-a-document&quot;&gt;standard for aborting a document load&lt;/a&gt; is defined, &lt;a href=&quot;https://github.com/whatwg/html/issues/3525&quot;&gt;HTML issue #3525&lt;/a&gt; suggests that browsers do not currently fire the &quot;abort&quot; event on &lt;code&gt;window&lt;/code&gt; that would trigger &lt;code&gt;onabort&lt;/code&gt; to be called.</source>
          <target state="translated">&lt;a href=&quot;https://html.spec.whatwg.org/multipage/browsing-the-web.html#abort-a-document&quot;&gt;ドキュメントの読み込みを中止するため&lt;/a&gt;の標準が定義されていますが、&lt;a href=&quot;https://github.com/whatwg/html/issues/3525&quot;&gt;HTMLの問題＃3525&lt;/a&gt;は、ブラウザが &lt;code&gt;onabort&lt;/code&gt; の呼び出しをトリガーする &lt;code&gt;window&lt;/code&gt; で現在「abort」イベントを発生させないことを示唆しています。</target>
        </trans-unit>
        <trans-unit id="35cf1e475b7bded5eb2a8c85006f09a919173abe" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt; property doesn't have to be unique, this ID number is guaranteed to be unique among all data channels. Additionally, known implementations of WebRTC use the same ID on both peers. A unique ID makes it easier for your code to do its own out-of-band data channel-related signaling.</source>
          <target state="translated">一方で&lt;a href=&quot;label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt;プロパティは一意である必要はありません、このID番号は、すべてのデータ・チャネルの中で一意であることが保証されます。さらに、WebRTCの既知の実装では、両方のピアで同じIDを使用します。一意のIDを使用すると、コードで独自の帯域外データチャネル関連のシグナリングを簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="5e31addbffe614238773279550765fdb4361122e" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;ArrayBuffer&lt;/code&gt; can be filled with both integers and floats, the attributes will always be converted to a float when they are sent to the vertex shader. If you need to use integers in your vertex shader code, you can either cast the float back to an integer in the vertex shader (e.g. &lt;code&gt;(int) floatNumber&lt;/code&gt;), or use &lt;a href=&quot;../webgl2renderingcontext/vertexattribipointer&quot;&gt;&lt;code&gt;gl.vertexAttribIPointer()&lt;/code&gt;&lt;/a&gt; from WebGL2.</source>
          <target state="translated">一方で &lt;code&gt;ArrayBuffer&lt;/code&gt; は、整数と浮動小数点数の両方を充填することができるそれらは頂点シェーダに送られたとき、属性は常にfloatに変換されます。頂点シェーダーコードで整数を使用する必要がある場合は、浮動小数点を頂点シェーダーの整数にキャストし直すか（例： &lt;code&gt;(int) floatNumber&lt;/code&gt; ）、または&lt;a href=&quot;../webgl2renderingcontext/vertexattribipointer&quot;&gt; &lt;code&gt;gl.vertexAttribIPointer()&lt;/code&gt; &lt;/a&gt;からgl.vertexAttribIPointer （）を使用できます。</target>
        </trans-unit>
        <trans-unit id="5a20f42a68e5aecf135d2ea686e7f9f1237921a3" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;AudioParam&lt;/code&gt; named &lt;code&gt;offset&lt;/code&gt; is read-only, the &lt;code&gt;value&lt;/code&gt; property within is not. So you can change the value of &lt;code&gt;offset&lt;/code&gt; by setting the value of &lt;code&gt;ConstantSourceNode.offset.value&lt;/code&gt;:</source>
          <target state="translated">一方で &lt;code&gt;AudioParam&lt;/code&gt; という名前の &lt;code&gt;offset&lt;/code&gt; 読み取り専用で、 &lt;code&gt;value&lt;/code&gt; 内のプロパティではありません。したがって、 &lt;code&gt;ConstantSourceNode.offset.value&lt;/code&gt; の値を設定することで、 &lt;code&gt;offset&lt;/code&gt; の値を変更できます。</target>
        </trans-unit>
        <trans-unit id="97a5fb8cfae9e9a388d84f10512d99ad5f83304b" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;createWriter()&lt;/code&gt; method existed, it immediately called &lt;code&gt;errorCallback&lt;/code&gt; with the &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; error.</source>
          <target state="translated">一方で &lt;code&gt;createWriter()&lt;/code&gt; メソッドが存在し、それがすぐに呼ば &lt;code&gt;errorCallback&lt;/code&gt; で &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; のエラー。</target>
        </trans-unit>
        <trans-unit id="d37f7320e358b7e65dbf5f9cd612fb8b1f3dc4fc" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;removeRecursively()&lt;/code&gt; method existed, it immediately called the error callback with &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt;.</source>
          <target state="translated">一方で &lt;code&gt;removeRecursively()&lt;/code&gt; メソッドが存在し、それはすぐにとエラーコールバックと呼ばれる &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="bdebc4b3b3ef8b054b9215aa56ac45c65438bd54" translate="yes" xml:space="preserve">
          <source>While the WebRTC &lt;a href=&quot;http://www.w3.org/TR/webrtc/&quot;&gt;specification&lt;/a&gt; is relatively stable, not all browsers have fully implemented all of its features. In addition, some browsers still have prefixes on some or all WebRTC APIs. While you can manually code around these issues, there is an easier way. The WebRTC organization &lt;a href=&quot;https://github.com/webrtc/adapter/&quot;&gt;provides on GitHub the WebRTC adapter&lt;/a&gt; to work around compatibility issues in different browsers' WebRTC implementations. The adapter is a JavaScript shim which lets your code to be written to the specification so that it will &quot;just work&quot; in all browsers with WebRTC support. There's no need to conditionally use prefixed APIs or implement other workarounds.</source>
          <target state="translated">WebRTC &lt;a href=&quot;http://www.w3.org/TR/webrtc/&quot;&gt;仕様&lt;/a&gt;は比較的安定していますが、すべてのブラウザがその機能のすべてを完全に実装しているわけではありません。さらに、一部のブラウザーでは、一部またはすべてのWebRTC APIにプレフィックスが付いています。これらの問題は手動でコーディングできますが、より簡単な方法があります。 WebRTC組織&lt;a href=&quot;https://github.com/webrtc/adapter/&quot;&gt;は、GitHubでWebRTCアダプター&lt;/a&gt;を提供して、さまざまなブラウザーのWebRTC実装における互換性の問題を回避します。アダプターはJavaScriptシムであり、WebRTCをサポートするすべてのブラウザーで「そのまま動作する」ように、コードを仕様に書き込むことができます。接頭辞付きのAPIを条件付きで使用したり、他の回避策を実装したりする必要はありません。</target>
        </trans-unit>
        <trans-unit id="6787ba606a042d3b7fd034b3cf383efa8cb8b89c" translate="yes" xml:space="preserve">
          <source>While the WebRTC &lt;a href=&quot;https://www.w3.org/TR/webrtc/&quot;&gt;specification&lt;/a&gt; is relatively stable, not all browsers have fully implemented all of its features. In addition, some browsers still have prefixes on some or all WebRTC APIs. While you can manually code around these issues, there is an easier way. The WebRTC organization &lt;a href=&quot;https://github.com/webrtc/adapter/&quot;&gt;provides on GitHub the WebRTC adapter&lt;/a&gt; to work around compatibility issues in different browsers' WebRTC implementations. The adapter is a JavaScript shim which lets your code to be written to the specification so that it will &quot;just work&quot; in all browsers with WebRTC support. There's no need to conditionally use prefixed APIs or implement other workarounds.</source>
          <target state="translated">WebRTC&lt;a href=&quot;https://www.w3.org/TR/webrtc/&quot;&gt;仕様&lt;/a&gt;は比較的安定していますが、すべてのブラウザーがそのすべての機能を完全に実装しているわけではありません。さらに、一部のブラウザーには、一部またはすべてのWebRTCAPIにプレフィックスが付いています。これらの問題を手動でコーディングすることもできますが、もっと簡単な方法があります。 WebRTC組織&lt;a href=&quot;https://github.com/webrtc/adapter/&quot;&gt;は、GitHubでWebRTCアダプター&lt;/a&gt;を提供して、さまざまなブラウザーのWebRTC実装での互換性の問題を回避します。アダプターはJavaScriptシムであり、WebRTCをサポートするすべてのブラウザーで「正しく機能する」ようにコードを仕様に合わせて記述できます。プレフィックス付きAPIを条件付きで使用したり、他の回避策を実装したりする必要はありません。</target>
        </trans-unit>
        <trans-unit id="b6cad4644fa34e0054b44bf1d4207b28ebb5ac7d" translate="yes" xml:space="preserve">
          <source>While the article Using the MediaStream Recording API demonstrates using the &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; interface to capture a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; generated by a hardware device, as returned by &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt;, you can also use an HTML media element (namely &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;) as the source of the &lt;code&gt;MediaStream&lt;/code&gt; to be recorded. In this article, we'll look at an example that does just that.</source>
          <target state="translated">MediaStream Recording APIの使用に関する記事では、&lt;a href=&quot;../mediarecorder&quot;&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; &lt;/a&gt;インターフェイスを使用して、&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt; &lt;/a&gt;によって返されるハードウェアデバイスによって生成された&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;をキャプチャする方法を示していますが、HTMLメディア要素（つまり、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;）を使用することもできます。&amp;gt;）記録する &lt;code&gt;MediaStream&lt;/code&gt; のソースとして。この記事では、それを行う例を見ていきます。</target>
        </trans-unit>
        <trans-unit id="797b382246f26d1255a1cfed6292ce9f609e0c65" translate="yes" xml:space="preserve">
          <source>While the published specification describes this as an interface, it has since been changed to a dictionary in follow-up drafts.</source>
          <target state="translated">公開された仕様書ではこれをインターフェースとして記述していますが、その後の草稿では辞書に変更されています。</target>
        </trans-unit>
        <trans-unit id="feb6f214a2ac495b564c14534cad54174d2e6d80" translate="yes" xml:space="preserve">
          <source>While there's other CSS involved in this example, tparh that really matters for our purposes is the CSS that styles the &lt;code&gt;&quot;box&quot;&lt;/code&gt; element that we'll be animating. That CSS looks like this:</source>
          <target state="translated">この例には他のCSSが関係していますが、私たちの目的にとって本当に重要なtparhは、アニメーション化する &lt;code&gt;&quot;box&quot;&lt;/code&gt; 要素のスタイルを設定するCSSです。そのCSSは次のようになります。</target>
        </trans-unit>
        <trans-unit id="3f983776633f57cc6691d5d3fb869bba846d4d8b" translate="yes" xml:space="preserve">
          <source>While this article uses CSS3 for the ease of explanations, matrices are a core concept used by many different technologies including WebGL and shaders. This article is also available as an &lt;a href=&quot;https://github.com/TatumCreative/mdn-matrix-math&quot;&gt;MDN content kit&lt;/a&gt;. The live examples use a collection of &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;utility functions&lt;/a&gt; availabile under a global object named &quot;MDN&quot;.</source>
          <target state="translated">この記事では説明を簡単にするためにCSS3を使用しますが、マトリックスはWebGLやシェーダーなどのさまざまなテクノロジーで使用されるコアコンセプトです。この記事は、&lt;a href=&quot;https://github.com/TatumCreative/mdn-matrix-math&quot;&gt;MDNコンテンツキット&lt;/a&gt;としても入手できます。実際の例では、「MDN」という名前のグローバルオブジェクトの下で使用可能な&lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;ユーティリティ関数の&lt;/a&gt;コレクションを使用しています。</target>
        </trans-unit>
        <trans-unit id="de434f88a34e3c3a64dc0c79d1ce2d9a8963ab73" translate="yes" xml:space="preserve">
          <source>While this example is trivial, you can replace the simple output of &quot;Supported&quot; vs. &quot;Not supported&quot; with code to provide alternative methods for presenting the audiovisual information you want to share with the user or otherwise work with.</source>
          <target state="translated">この例は些細なものですが、「サポートされている」対「サポートされていない」の単純な出力をコードに置き換えて、ユーザーと共有したい視聴覚情報を提示するための代替方法を提供したり、他の方法で作業したりすることができます。</target>
        </trans-unit>
        <trans-unit id="73391f9feabc77b6f8f917fb779ffda3f8fa05b7" translate="yes" xml:space="preserve">
          <source>While this happens, the previous version is still responsible for fetches. The new version is installing in the background. We are calling the new cache &lt;code&gt;v2&lt;/code&gt;, so the previous &lt;code&gt;v1&lt;/code&gt; cache isn't disturbed.</source>
          <target state="translated">これが発生している間、以前のバージョンはまだフェッチを担当しています。新しいバージョンはバックグラウンドでインストールされます。新しいキャッシュを &lt;code&gt;v2&lt;/code&gt; と呼ぶので、以前の &lt;code&gt;v1&lt;/code&gt; キャッシュは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="0bfa65f684f8b28bb7488c726fd58c21e5193aa7" translate="yes" xml:space="preserve">
          <source>While this is an extremely simple example, imagine having a 32 oscillator synthesizer with multiple linked parameters in play across a number of patched nodes. Being able to shorten the number of operations to adjust them all will prove invaluable for code size and performance both.</source>
          <target state="translated">これは非常に単純な例ですが、32 個のオシレーターシンセサイザーに複数のパラメータがリンクされていて、複数のパッチされたノードにまたがって動作していることを想像してみてください。これらすべてを調整するための操作の数を短縮できることは、コードサイズとパフォーマンスの両方において非常に貴重なことです。</target>
        </trans-unit>
        <trans-unit id="15445e729aa96a028be12f8eeb34097c920be46d" translate="yes" xml:space="preserve">
          <source>While using document.evaluate() works in FF2, in FF3 one must use someXMLDoc.evaluate() if evaluating against something other than the current document.</source>
          <target state="translated">FF2ではdocument.evaluate()を使用しても動作しますが、FF3では現在のドキュメント以外で評価する場合はsomeXMLDoc.evaluate()を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f232a5ab3a83a44a1e973dbaef1ca3af873e08e9" translate="yes" xml:space="preserve">
          <source>While vertex attributes are usually used to specify values which are different for each vertex (using &lt;a href=&quot;vertexattribpointer&quot;&gt;&lt;code&gt;vertexAttribPointer&lt;/code&gt;&lt;/a&gt;), it can be useful to specify a constant value. For example, if you have a shader which has a &lt;code&gt;color&lt;/code&gt; vertex attribute, but you want to draw everything in a single color, you can use &lt;code&gt;vertexAttrib&lt;/code&gt; to achieve that without creating a buffer filled with only one value or having to create a separate shader which uses a uniform for the color.</source>
          <target state="translated">頂点属性は通常、各頂点ごとに異なる値を指定するために使用されますが（&lt;a href=&quot;vertexattribpointer&quot;&gt; &lt;code&gt;vertexAttribPointer&lt;/code&gt; &lt;/a&gt;を使用）、定数値を指定すると便利です。たとえば、 &lt;code&gt;color&lt;/code&gt; 頂点属性を持つシェーダーがあり、すべてを単一の色で描画したい場合は、 &lt;code&gt;vertexAttrib&lt;/code&gt; を使用して、1つの値だけで満たされたバッファーを作成したり、別のシェーダーを作成したりすることなく、それを実現できます。色にはユニフォームを使用します。</target>
        </trans-unit>
        <trans-unit id="9735502472fb8645f3f3ce406fb7680c8d1a15b4" translate="yes" xml:space="preserve">
          <source>While we can write CSS Animations with the Web Animations API, where the API really comes in handy is manipulating the animation&amp;rsquo;s playback. The Web Animations API provides several useful methods for controlling playback. Let&amp;rsquo;s take a look at pausing and playing animations in the Growing/Shrinking Alice game (check out the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ&quot;&gt;full code on Codepen&lt;/a&gt;):</source>
          <target state="translated">WebアニメーションAPIを使用してCSSアニメーションを記述できますが、APIが実際に役立つのは、アニメーションの再生を操作する場合です。WebアニメーションAPIは、再生を制御するためのいくつかの便利なメソッドを提供します。Growing / Shrinking Aliceゲームのアニメーションの一時停止と再生を見てみましょう（&lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ&quot;&gt;Codepenの完全なコードを&lt;/a&gt;確認してください）。</target>
        </trans-unit>
        <trans-unit id="cae912e54b7746f546892f38cc1a0efc0b468087" translate="yes" xml:space="preserve">
          <source>While we can write CSS Animations with the Web Animations API, where the API really comes in handy is manipulating the animation&amp;rsquo;s playback. The Web Animations API provides several useful methods for controlling playback. Let&amp;rsquo;s take a look at pausing and playing animations in the Growing/Shrinking Alice game (check out the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNYGZQ&quot;&gt;full code on Codepen&lt;/a&gt;):</source>
          <target state="translated">Web Animations APIを使用してCSSアニメーションを作成することはできますが、APIが非常に役立つのは、アニメーションの再生を操作することです。Web Animations APIは、再生を制御するためのいくつかの便利なメソッドを提供します。Growing / Shrinking Aliceゲームでのアニメーションの一時停止と再生を見てみましょう（&lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNYGZQ&quot;&gt;Codepenの完全なコードを&lt;/a&gt;確認してください）。</target>
        </trans-unit>
        <trans-unit id="ad808409f9233584eacb6f81aba6de2f8b0666c2" translate="yes" xml:space="preserve">
          <source>While working on your Web Audio API code, you may find that you need tools to analyze the graph of nodes you create or to otherwise debug your work. This article discusses tools available to help you do that.</source>
          <target state="translated">Web Audio APIのコードを作成していると、作成したノードのグラフを分析したり、作業をデバッグしたりするためのツールが必要になることがあります。この記事では、そのためのツールについて説明します。</target>
        </trans-unit>
        <trans-unit id="1affea20cdd4173ba4ba9192dd973a33d5530c24" translate="yes" xml:space="preserve">
          <source>While you can just &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel/main.js&quot;&gt;look at the code itself on GitHub&lt;/a&gt;, below we'll review the parts of the code that do the heavy lifting.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel/main.js&quot;&gt;GitHub&lt;/a&gt;でコード自体を確認することもできますが、以下では、コードの中で重要な部分を確認します。</target>
        </trans-unit>
        <trans-unit id="9d622eb69a5875a65853870e99381ca1c9e10477" translate="yes" xml:space="preserve">
          <source>While you should instead use the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing&quot;&gt;&lt;code&gt;border-spacing&lt;/code&gt;&lt;/a&gt; property, the obsolete &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;cellSpacing&lt;/strong&gt;&lt;/code&gt; property represents the spacing around the individual &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th&quot;&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;&lt;/a&gt; elements representing a table's cells. Any two cells are separated by the sum of the &lt;code&gt;cellSpacing&lt;/code&gt; of each of the two cells.</source>
          <target state="translated">代わりにCSSの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing&quot;&gt; &lt;code&gt;border-spacing&lt;/code&gt; &lt;/a&gt;プロパティを使用する必要がありますが、廃止された&lt;a href=&quot;../htmltableelement&quot;&gt; &lt;code&gt;HTMLTableElement&lt;/code&gt; &lt;/a&gt;インターフェイスの &lt;code&gt;&lt;strong&gt;cellSpacing&lt;/strong&gt;&lt;/code&gt; プロパティは、テーブルのセルを表す個々の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th&quot;&gt; &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt; &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の周りの間隔を表します。任意の2つのセルは、2つのセルのそれぞれの &lt;code&gt;cellSpacing&lt;/code&gt; の合計によって分離されます。</target>
        </trans-unit>
        <trans-unit id="f110937a31794d7af371747f9b664d4615df8d41" translate="yes" xml:space="preserve">
          <source>Why does WebVR have its own requestAnimationFrame()?</source>
          <target state="translated">なぜWebVRは独自のrequestAnimationFrame()を持っているのか?</target>
        </trans-unit>
        <trans-unit id="c6ddafdf36167a3465e231aba3ea6cd469e4d8dd" translate="yes" xml:space="preserve">
          <source>Why is my service worker failing to register?</source>
          <target state="translated">サービスマンが登録に失敗しているのはなぜですか?</target>
        </trans-unit>
        <trans-unit id="d7208f97a187e41a0f79c932e9258d95ba937eab" translate="yes" xml:space="preserve">
          <source>Why matrices are important</source>
          <target state="translated">行列が重要な理由</target>
        </trans-unit>
        <trans-unit id="930bf7e073fccab7f3f3f6f189b150f8ac14c0fb" translate="yes" xml:space="preserve">
          <source>Why use &lt;code&gt;addEventListener&lt;/code&gt;?</source>
          <target state="translated">なぜ使う &lt;code&gt;addEventListener&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="9ffeed44a345e5f320b12d679f8b1d74979925fe" translate="yes" xml:space="preserve">
          <source>Why use Beacon?</source>
          <target state="translated">なぜBeaconを使うのか?</target>
        </trans-unit>
        <trans-unit id="fbe7cc3ca81e30d0c2df2fb6ddd130b17a5108d1" translate="yes" xml:space="preserve">
          <source>Why, you may wonder, is something fundamental to the process of establishing a WebRTC connection left out of the specification? The answer is simple: since the two devices have no way to directly contact each other, and the specification can&amp;rsquo;t predict every possible use case for WebRTC, it makes more sense to let the developer select an appropriate networking technology and messaging protocol.</source>
          <target state="translated">なぜあなたは不思議に思うかもしれませんが、仕様から外れたWebRTC接続を確立するプロセスの基礎となるものがあるのですか？答えは簡単です。2つのデバイスは互いに直接連絡する方法がなく、仕様ではWebRTCの考えられるすべてのユースケースを予測できるわけではないため、開発者に適切なネットワークテクノロジーとメッセージングプロトコルを選択させる方が理にかなっています。</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="812eda1ec8a8550c1241c997b5510e45c2853039" translate="yes" xml:space="preserve">
          <source>WiFi Information API</source>
          <target state="translated">WiFi情報API</target>
        </trans-unit>
        <trans-unit id="82718d060967c684aa0c9faae3fa0070ecd6bea3" translate="yes" xml:space="preserve">
          <source>WiFi P2P API</source>
          <target state="translated">WiFi P2P API</target>
        </trans-unit>
        <trans-unit id="783c82091a962d6967bbaf9053f242f2256a974f" translate="yes" xml:space="preserve">
          <source>WiFi Tethering API</source>
          <target state="translated">WiFi テザリング API</target>
        </trans-unit>
        <trans-unit id="1642f118c8b0528714d276f4650abfce53ee0d45" translate="yes" xml:space="preserve">
          <source>Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar.</source>
          <target state="translated">ブラウザウィンドウのビューポートの幅 (ピクセル単位)で、レンダリングされている場合は垂直スクロールバーを含みます。</target>
        </trans-unit>
        <trans-unit id="6ed6746e16e9da7f183eb810cc239f5eb028a623" translate="yes" xml:space="preserve">
          <source>Width and height</source>
          <target state="translated">幅と高さ</target>
        </trans-unit>
        <trans-unit id="04517969e4e88b6ac77e48991dd3507a4b32fdc6" translate="yes" xml:space="preserve">
          <source>Width and height must be multiples of 4.</source>
          <target state="translated">幅と高さは4の倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="c32471fdfcc936eaef45f672707805517f43a478" translate="yes" xml:space="preserve">
          <source>Width and height must be powers of 2.</source>
          <target state="translated">幅と高さは2の累乗でなければなりません。</target>
        </trans-unit>
        <trans-unit id="adf48bc5d5aad8c317971b9e2c49d1baf4b4d0a7" translate="yes" xml:space="preserve">
          <source>Width of lines. Default &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">線の幅。デフォルト &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e6911ae8c2c39729fed25810c0c64aed59e4b53" translate="yes" xml:space="preserve">
          <source>Width of the rectangle to be painted. Defaults to the width of the image data.</source>
          <target state="translated">描画する矩形の幅。デフォルトは画像データの幅です。</target>
        </trans-unit>
        <trans-unit id="f0b2f802b10ce4db36dd6d0609fc630e8c7ea5cb" translate="yes" xml:space="preserve">
          <source>Wikipedia article on B&amp;eacute;zier curves</source>
          <target state="translated">ベジエ曲線に関するウィキペディアの記事</target>
        </trans-unit>
        <trans-unit id="cacc40419d0e71d22493f603adeb315123597bdc" translate="yes" xml:space="preserve">
          <source>Will always be &lt;code&gt;'SensorErrorEvent'&lt;/code&gt;.</source>
          <target state="translated">常に &lt;code&gt;'SensorErrorEvent'&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="c457525ac41d909f890bde5a63d11f13205d57cf" translate="yes" xml:space="preserve">
          <source>Will be stored in the array buffer as follows:</source>
          <target state="translated">以下のように配列バッファに格納されます。</target>
        </trans-unit>
        <trans-unit id="bb375493900031c658af955fbed577798f48ba2f" translate="yes" xml:space="preserve">
          <source>Will describe the color gamut, or the range of color, the screen can display (not currently supported anywhere).</source>
          <target state="translated">色域、または色の範囲、画面に表示できる色を説明します(現在はどこでもサポートされていません)。</target>
        </trans-unit>
        <trans-unit id="9932ab684ce0f7e2f7cf8d93016e7f5a37562a2d" translate="yes" xml:space="preserve">
          <source>Will describe the known luminance characteristics of the screen (not currently supported anywhere).</source>
          <target state="translated">画面の既知の輝度特性を記述する(現在はどこでもサポートされていない)。</target>
        </trans-unit>
        <trans-unit id="97b82711e660baa7cf3a85a7a46e0f3884daca1e" translate="yes" xml:space="preserve">
          <source>Will hold our &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; used to track the intersection between the ads and the &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element's bounds.</source>
          <target state="translated">広告と &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; 要素の境界の間の交差を追跡するために使用される&lt;a href=&quot;../intersectionobserver&quot;&gt; &lt;code&gt;IntersectionObserver&lt;/code&gt; を&lt;/a&gt;保持します。</target>
        </trans-unit>
        <trans-unit id="410a70e773546db24768ac427861e4b752ec5155" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element which contains the time the ad has been visible so far.</source>
          <target state="translated">これまでに広告が表示されていた時間を含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を保持します。</target>
        </trans-unit>
        <trans-unit id="d5a6580c3c1187e5dc9fdc06a7338a94d6e4571c" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2&quot;&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;&lt;/a&gt; element representing the ad's title.</source>
          <target state="translated">広告のタイトルを表す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2&quot;&gt; &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を保持します。</target>
        </trans-unit>
        <trans-unit id="e9bad46ef5286cdd60bef087b89ca4af12b8d41a" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the ad's body text.</source>
          <target state="translated">広告の本文テキストを表す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; を&lt;/a&gt;保持します。</target>
        </trans-unit>
        <trans-unit id="720f0131c6416ed9e457c366b630cd9b19bb0eae" translate="yes" xml:space="preserve">
          <source>Will log the time needed by the user to dismiss the alert box, log the time to the console, wait for the user to dismiss the second alert, and then log the ending time to the console:</source>
          <target state="translated">ユーザーがアラートボックスを解除するのに必要な時間を記録し、その時間をコンソールに記録し、ユーザーが2回目のアラートを解除するのを待ってから、終了時間をコンソールに記録します。</target>
        </trans-unit>
        <trans-unit id="cb306168f02adeddcbd30194a965ee718444d3e3" translate="yes" xml:space="preserve">
          <source>Will throw a &lt;code&gt;NS_ERROR_DOM_INVALID_CHARACTER_ERR&lt;/code&gt; exception if one tries to submit the closing CDATA sequence (&quot;]]&amp;gt;&quot;) as part of the data, so unescaped user-provided data cannot be safely used without with this method getting this exception (&lt;code&gt;&lt;a href=&quot;createtextnode&quot;&gt;createTextNode()&lt;/a&gt;&lt;/code&gt; can often be used in its place).</source>
          <target state="translated">スローされます &lt;code&gt;NS_ERROR_DOM_INVALID_CHARACTER_ERR&lt;/code&gt; のデータの一部としてクローズCDATAシーケンス（「]]&amp;gt;」を）提出する一つの試みは、そのエスケープユーザーが提供したデータは安全にこのメソッドは、この例外（取得とせずに使用することができない場合に例外を &lt;code&gt;&lt;a href=&quot;createtextnode&quot;&gt;createTextNode()&lt;/a&gt;&lt;/code&gt; が多いことができます代わりに使用されます）。</target>
        </trans-unit>
        <trans-unit id="5ac302cd37f782694646e0f66f5e065da2aaaeff" translate="yes" xml:space="preserve">
          <source>Will write to the console:</source>
          <target state="translated">コンソールに書き込みます。</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="6c058d9178cae138c823f18de3e8cd52c6d85cfd" translate="yes" xml:space="preserve">
          <source>Window events</source>
          <target state="translated">ウィンドウイベント</target>
        </trans-unit>
        <trans-unit id="47044b57cd8f08779dff853e0bbb5e3e1f639acf" translate="yes" xml:space="preserve">
          <source>Window features</source>
          <target state="translated">窓の特徴</target>
        </trans-unit>
        <trans-unit id="d7834573ce9a2f9c71d41b38388fd8af273a3626" translate="yes" xml:space="preserve">
          <source>Window functionality features</source>
          <target state="translated">ウィンドウ機能の特徴</target>
        </trans-unit>
        <trans-unit id="847fd5b0e7d19b54f0ebf121df83ee37523e321d" translate="yes" xml:space="preserve">
          <source>Window.localStorage</source>
          <target state="translated">Window.localStorage</target>
        </trans-unit>
        <trans-unit id="e06553da442fe83bb81f9d16d444ebaf29427291" translate="yes" xml:space="preserve">
          <source>Window.postMessage</source>
          <target state="translated">Window.postMessage</target>
        </trans-unit>
        <trans-unit id="730be718e137a1c210a0ee0fe5c0e5f9c2de5cc0" translate="yes" xml:space="preserve">
          <source>WindowBase64.Base64 encoding and decoding</source>
          <target state="translated">WindowBase64.Base64 エンコーディングとデコーディング</target>
        </trans-unit>
        <trans-unit id="ad1e0b4c85449d1543b482c415e6853a319bc6be" translate="yes" xml:space="preserve">
          <source>WindowClient</source>
          <target state="translated">WindowClient</target>
        </trans-unit>
        <trans-unit id="9d6627e726b5cd54a1cdade14ee86172c35a6398" translate="yes" xml:space="preserve">
          <source>WindowClient.focus</source>
          <target state="translated">WindowClient.focus</target>
        </trans-unit>
        <trans-unit id="ec8da8acf8bd50ef4044dfab3009d325a98d632a" translate="yes" xml:space="preserve">
          <source>WindowClient.focused</source>
          <target state="translated">WindowClient.focused</target>
        </trans-unit>
        <trans-unit id="1718e9d8b2b7bfa5a3830b3afea61429c64a9927" translate="yes" xml:space="preserve">
          <source>WindowClient.navigate</source>
          <target state="translated">WindowClient.navigate</target>
        </trans-unit>
        <trans-unit id="414bb71b657edc2dbb3e1b5db8e46d07f3c53362" translate="yes" xml:space="preserve">
          <source>WindowClient.visibilityState</source>
          <target state="translated">WindowClient.visibilityState</target>
        </trans-unit>
        <trans-unit id="1a6e732a37845c36fcda3afa6f1ba0d920b0ebca" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers</source>
          <target state="translated">WindowEventHandlers</target>
        </trans-unit>
        <trans-unit id="e0d5cb550a45faff2b9506f4b1765ed96267e3d0" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onafterprint</source>
          <target state="translated">WindowEventHandlers.onafterprint</target>
        </trans-unit>
        <trans-unit id="db85a0101308193e4bd8f57371bfe0436c9b17e9" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onbeforeprint</source>
          <target state="translated">WindowEventHandlers.onbeforeprint</target>
        </trans-unit>
        <trans-unit id="e444d73e40f34442ebc5f8ee36601c99cefeed62" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onbeforeunload</source>
          <target state="translated">WindowEventHandlers.onbeforeunload</target>
        </trans-unit>
        <trans-unit id="f5a28eaed2e9a3c4e1935f2031b3f4db7f6edac5" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onhashchange</source>
          <target state="translated">WindowEventHandlers.onhashchange</target>
        </trans-unit>
        <trans-unit id="ca66e4b89923d5faa447ef489205809bbe8c39f8" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onlanguagechange</source>
          <target state="translated">WindowEventHandlers.onlanguagechange</target>
        </trans-unit>
        <trans-unit id="2b858c20f019e6dc8a0ccff83249f8d8755a39ec" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onmessage</source>
          <target state="translated">WindowEventHandlers.onmessage</target>
        </trans-unit>
        <trans-unit id="80407d07cac41a8f7d9ca0dbc6a431d605e997d2" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onmessageerror</source>
          <target state="translated">WindowEventHandlers.onmessageerror</target>
        </trans-unit>
        <trans-unit id="1e6db104f8269652f6af517cad59bddb8ab54bd8" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onpopstate</source>
          <target state="translated">WindowEventHandlers.onpopstate</target>
        </trans-unit>
        <trans-unit id="b5295ee0cadfbc9f05a94859c94f84fd25dc8090" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onrejectionhandled</source>
          <target state="translated">WindowEventHandlers.onrejectionhandled</target>
        </trans-unit>
        <trans-unit id="29b824c41f886a5eaa4aa169891d4c0c368c473c" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onstorage</source>
          <target state="translated">WindowEventHandlers.onstorage</target>
        </trans-unit>
        <trans-unit id="1cc5da3986b0d97b681eb258ee732cdbaa51cf68" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onunhandledrejection</source>
          <target state="translated">WindowEventHandlers.onunhandledrejection</target>
        </trans-unit>
        <trans-unit id="4ee3a8b6d5951c23c66f22e4e25378ec88fcc7af" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onunload</source>
          <target state="translated">WindowEventHandlers.onunload</target>
        </trans-unit>
        <trans-unit id="4695cae95157eec4a2f36b8710914191b7160a60" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope</source>
          <target state="translated">WindowOrWorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="d763098d050b46b02a523444b14d83e6f520d9d4" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope mixin</source>
          <target state="translated">WindowOrWorkerGlobalScope ミキシン</target>
        </trans-unit>
        <trans-unit id="097752d5e348c24d5a189c3ca9fab78d55edd767" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.atob</source>
          <target state="translated">WindowOrWorkerGlobalScope.atob</target>
        </trans-unit>
        <trans-unit id="efc90a4cc92535fec2b748e4d0c3139ab6e37dc1" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.btoa</source>
          <target state="translated">WindowOrWorkerGlobalScope.btoa</target>
        </trans-unit>
        <trans-unit id="3d20e90dd0a29c76ced115f916d7a14a46329a5e" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.caches</source>
          <target state="translated">WindowOrWorkerGlobalScope.caches</target>
        </trans-unit>
        <trans-unit id="7dd146554d30a2996c66fae533a3e3c64a8c7159" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.clearInterval</source>
          <target state="translated">WindowOrWorkerGlobalScope.clearInterval</target>
        </trans-unit>
        <trans-unit id="62bdc2ee357307721b13e63db237f52f659efe11" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.clearTimeout</source>
          <target state="translated">WindowOrWorkerGlobalScope.clearTimeout</target>
        </trans-unit>
        <trans-unit id="b5be5c80eb9dcc1f179f98df9281505a83260eac" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.createImageBitmap</source>
          <target state="translated">WindowOrWorkerGlobalScope.createImageBitmap</target>
        </trans-unit>
        <trans-unit id="2ca6e3e1ac96b6d84d852f89047da28707a24b60" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.fetch</source>
          <target state="translated">WindowOrWorkerGlobalScope.fetch</target>
        </trans-unit>
        <trans-unit id="7cc7c43efcbd55a98bbced2e7dbf78253d2fa4e5" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.indexedDB</source>
          <target state="translated">WindowOrWorkerGlobalScope.indexedDB</target>
        </trans-unit>
        <trans-unit id="56962c266078a8dfca6eb0d27c27f1b8f74ec9a6" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.isSecureContext</source>
          <target state="translated">WindowOrWorkerGlobalScope.isSecureContext</target>
        </trans-unit>
        <trans-unit id="412904ea302f96e7e920b5afdf1e9c0dc1137495" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.origin</source>
          <target state="translated">WindowOrWorkerGlobalScope.origin</target>
        </trans-unit>
        <trans-unit id="7b2908b81e1bd458f36a12196a0149d1180c5c2c" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.setInterval</source>
          <target state="translated">WindowOrWorkerGlobalScope.setInterval</target>
        </trans-unit>
        <trans-unit id="20aa5c5c874ca192a5c0e6e9063131a2c6249f6e" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.setTimeout</source>
          <target state="translated">WindowOrWorkerGlobalScope.setTimeout</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="deebb7cd337d6895afb7ebc103c7f94f9207cd40" translate="yes" xml:space="preserve">
          <source>Windows 32-bit</source>
          <target state="translated">ウィンドウズ32ビット</target>
        </trans-unit>
        <trans-unit id="9cdfc54cc3b508486d3c59faddc9ea935b42584b" translate="yes" xml:space="preserve">
          <source>Windows 64-bit (32-bit build)</source>
          <target state="translated">Windows 64ビット(32ビットビルド</target>
        </trans-unit>
        <trans-unit id="2840441da35f1084b02fc6bd50f15074d123f5f4" translate="yes" xml:space="preserve">
          <source>Windows 64-bit (64-bit build)</source>
          <target state="translated">Windows 64 ビット (64 ビットビルド)</target>
        </trans-unit>
        <trans-unit id="ed4932a7d32c6b1177526419c99a7cb3119925da" translate="yes" xml:space="preserve">
          <source>Windows CE</source>
          <target state="translated">ウィンドウズシーイー</target>
        </trans-unit>
        <trans-unit id="336c28309e5afeb0c32155db22da77f63062ac51" translate="yes" xml:space="preserve">
          <source>Windows NT x.y</source>
          <target state="translated">ウィンドウズエヌティーエックスイー</target>
        </trans-unit>
        <trans-unit id="39f688fd5cdc12e1f9cfb5fdb1b6ddc424d6165f" translate="yes" xml:space="preserve">
          <source>Windows NT x.y; WOW64</source>
          <target state="translated">Windows NT x.y;WOW64</target>
        </trans-unit>
        <trans-unit id="84b88ff322a19609192efbdd1b51aaee788f69d8" translate="yes" xml:space="preserve">
          <source>Windows NT x.y; Win64; x64</source>
          <target state="translated">Windows NT x.y;Win64;x64</target>
        </trans-unit>
        <trans-unit id="794350602423fad8a09162b1af95c325f2cea71b" translate="yes" xml:space="preserve">
          <source>Windows are subjected to throttling after 30 seconds, with the same throttling delay rules as specified for window timers (again, see &lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;Reasons for delays longer than specified&lt;/a&gt;). In Chrome, this value is 10 seconds.</source>
          <target state="translated">ウィンドウタイマーは、ウィンドウタイマーに指定されたものと同じスロットル遅延ルールで30秒後にスロットリングされます（ここでも、&lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;指定されたよりも長い遅延の理由を&lt;/a&gt;参照してください）。Chromeでは、この値は10秒です。</target>
        </trans-unit>
        <trans-unit id="947f52a223f8d1c40cbde62959f38d0c2399e825" translate="yes" xml:space="preserve">
          <source>Windows support was enabled in Firefox 55.</source>
          <target state="translated">Firefox 55でWindowsのサポートが有効になっていました。</target>
        </trans-unit>
        <trans-unit id="ce5ccaad45e0b5f1fdae7ce25be2d15c9913d784" translate="yes" xml:space="preserve">
          <source>WindowsCE x.y&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">WindowsCE xy &lt;sup&gt;1&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b08b8379a55e1493f146e03b1df5f8c29cf0dad7" translate="yes" xml:space="preserve">
          <source>Wiring this up is the same as we've seen before. We create the &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt;, configure the properties we want for it and connect it through our graph. Different types of biquad filters have different properties &amp;mdash; for instance setting the frequency on a bandpass type adjusts the middle frequency, however on a lowpass it would set the top frequency.</source>
          <target state="translated">これを配線するのは、これまで見てきたのと同じです。&lt;a href=&quot;../biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; &lt;/a&gt;を作成し、必要なプロパティを構成して、グラフを介して接続します。タイプが異なるバイカッドフィルターは、プロパティが異なります。たとえば、バンドパスタイプで周波数を設定すると、中間周波数が調整されますが、ローパスでは、最高周波数が設定されます。</target>
        </trans-unit>
        <trans-unit id="e59274a3f1b62379fb3b23d357e01ab5b9203b2f" translate="yes" xml:space="preserve">
          <source>Wiring up our controls</source>
          <target state="translated">制御装置の配線</target>
        </trans-unit>
        <trans-unit id="11912a273673cc3dbd7f8d8470a2f28603227b0a" translate="yes" xml:space="preserve">
          <source>Wiring up out control buttons is comparatively simple &amp;mdash; now we can listen for a mouse event on our controls and run this function, as well as stop it when the mouse is released:</source>
          <target state="translated">コントロールボタンの配線は比較的簡単です。これで、コントロールでマウスイベントをリッスンしてこの関数を実行したり、マウスを離したときにそれを停止したりできます。</target>
        </trans-unit>
        <trans-unit id="587941514c3c716b9903ba75d1411936906c3587" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt;&lt;code&gt;scissor()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; we can demonstrate how the WebGL drawing buffer is affected by the size of the canvas.</source>
          <target state="translated">&lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt; &lt;code&gt;scissor()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;webglrenderingcontext/clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;私たちは、WebGLの描画バッファがキャンバスの大きさに影響される方法を示すことができます。</target>
        </trans-unit>
        <trans-unit id="b4034675f295cb5f3e8e6fdc87d027df0afb718b" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;globalAlpha&lt;/code&gt; applied this sets how shapes and images are drawn onto the existing bitmap.</source>
          <target state="translated">&lt;code&gt;globalAlpha&lt;/code&gt; 形やイメージは、既存のビットマップに描画されているどのようにこのセットを適用します。</target>
        </trans-unit>
        <trans-unit id="33042f6c0abb01a45c937d2e32999ac38c5e3e93" translate="yes" xml:space="preserve">
          <source>With Media Source Extensions (MSE), this is changing. MSE allows us to replace the usual single track &lt;code&gt;src&lt;/code&gt; value fed to media elements with a reference to a &lt;code&gt;MediaSource&lt;/code&gt; object, which is a container for information like the ready state of the media for being played, and references to multiple &lt;code&gt;SourceBuffer&lt;/code&gt; objects that represent the different chunks of media that make up the entire stream. MSE gives us finer grained control over how much and how often content is fetched, and some control over memory usage details, such as when buffers are evicted. It lays the groundwork for adaptive bitrate streaming clients (such as those using DASH or HLS) to be built on its extensible API.</source>
          <target state="translated">Media Source Extensions（MSE）では、これは変化しています。 MSEを使用すると、メディア要素に供給される通常の単一トラックの &lt;code&gt;src&lt;/code&gt; 値を、再生可能なメディアの準備状態などの情報のコンテナーである &lt;code&gt;MediaSource&lt;/code&gt; オブジェクトへの参照と、異なるものを表す複数の &lt;code&gt;SourceBuffer&lt;/code&gt; オブジェクトへの参照で置き換えることができますストリーム全体を構成するメディアのチャンク。 MSEを使用すると、コンテンツをフェッチする頻度と頻度をきめ細かく制御できます。また、バッファーがいつ削除されるかなど、メモリ使用量の詳細を制御できます。拡張可能なAPIに基づいて構築されるアダプティブビットレートストリーミングクライアント（DASHやHLSを使用するクライアントなど）の基礎を築きます。</target>
        </trans-unit>
        <trans-unit id="123c426ce26786c920eff725894b3adae3c6b111" translate="yes" xml:space="preserve">
          <source>With Streams being available to JavaScript, this all changes &amp;mdash; you can now start processing raw data with JavaScript bit by bit as soon as it is available on the client-side, without needing to generate a buffer, string, or blob.</source>
          <target state="translated">JavaScriptでStreamsを使用できるようになり、これによりすべての変更が加えられました。バッファ、文字列、またはBLOBを生成する必要なく、クライアント側で使用可能になり次第、JavaScriptで少しずつ生データの処理を開始できます。</target>
        </trans-unit>
        <trans-unit id="622e96cbd1a045b478716e13976a9a20bdac74dd" translate="yes" xml:space="preserve">
          <source>With animations, use &lt;a href=&quot;../../window/requestanimationframe&quot;&gt;&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../windoworworkerglobalscope/setinterval&quot;&gt;&lt;code&gt;window.setInterval()&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">アニメーションでは、&lt;a href=&quot;../../windoworworkerglobalscope/setinterval&quot;&gt; &lt;code&gt;window.setInterval()&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;../../window/requestanimationframe&quot;&gt; &lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="0585d73f5f04985cc96e7e4fc8ca2277bcc28ca2" translate="yes" xml:space="preserve">
          <source>With chrome privileges, the property is read-write, otherwise it is read-only. Bear in mind that if you try to set this property without chrome privileges, it will not throw an exception and instead just silently fail. This is to prevent scripts designed to set this property in Internet Explorer from breaking.</source>
          <target state="translated">クロームの権限があれば、このプロパティは読み書き可能で、それ以外の場合は読み取り専用です。クロームの権限がない状態でこのプロパティを設定しようとすると、例外は発生せず、ただ静かに失敗することに注意してください。これは、Internet Explorer でこのプロパティを設定するように設計されたスクリプトが壊れるのを防ぐためです。</target>
        </trans-unit>
        <trans-unit id="75db5ee23b5a65f08162a3cce882d3bcd3e6d83d" translate="yes" xml:space="preserve">
          <source>With each new circle, the opacity of the previous circles underneath is effectively increased. If we were to increase the step count (and thus draw more circles), the background would eventually disappear completely from the center of the image.</source>
          <target state="translated">新しい円を描くたびに、その下にある前の円の不透明度が効果的に増加します。ステップ数を増やすと(つまり、より多くの円を描くことになる)、最終的には背景が画像の中心から完全に消えてしまいます。</target>
        </trans-unit>
        <trans-unit id="58d6fd5a66be936878dc30d2be42354e8d08fffb" translate="yes" xml:space="preserve">
          <source>With our presentation request successful, we now want to start setting up to render content to present to the VRDisplay. First of all we set the canvas to the same size as the VR display area. We do this by getting the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; for both eyes using &lt;a href=&quot;../vrdisplay/geteyeparameters&quot;&gt;&lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プレゼンテーション要求が成功したので、VRDisplayに提示するコンテンツをレンダリングするための設定を開始します。まず、キャンバスをVR表示領域と同じサイズに設定します。これを行うには、&lt;a href=&quot;../vrdisplay/geteyeparameters&quot;&gt; &lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt; &lt;/a&gt;を使用して両眼の&lt;a href=&quot;../vreyeparameters&quot;&gt; &lt;code&gt;VREyeParameters&lt;/code&gt; &lt;/a&gt;を取得します。</target>
        </trans-unit>
        <trans-unit id="475c638ecca2e0aa5deab71cece409d7616d19c9" translate="yes" xml:space="preserve">
          <source>With service workers, the following steps are generally observed for basic set up:</source>
          <target state="translated">サービス業の方では、基本的には以下のような手順で設定していくのが一般的です。</target>
        </trans-unit>
        <trans-unit id="4ef018c89bac5a1f15c8d985b4c3db2ebf523806" translate="yes" xml:space="preserve">
          <source>With some payment handlers (e.g., Apple Pay), dispatched whenever the user changes payment instrument, like switching from a credit card to a debit card.</source>
          <target state="translated">いくつかの決済ハンドラ(例:Apple Pay)では、クレジットカードからデビットカードへの切り替えのように、ユーザーが決済手段を変更するたびにディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="d7b2cee01555913708425f8b4d2d83591aa39ba9" translate="yes" xml:space="preserve">
          <source>With some payment handlers (e.g., Apple Pay), this event handler is called to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; event, which is dispatched when the user agent requires that the merchant validate that the merchant or vendor requesting payment is legitimate.</source>
          <target state="translated">一部の支払いハンドラ（例えば、アップルペイ）では、このイベントハンドラを処理するために呼び出され &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; のユーザエージェントは、商人やベンダーが支払いを要求していることを商人の検証が正当であることを必要とするときに送出されるイベントを、。</target>
        </trans-unit>
        <trans-unit id="283c8f301ff63a2a1b520c116d14517c3c3e3aab" translate="yes" xml:space="preserve">
          <source>With tabbed browsing, there is a reasonable chance that any given webpage is in the background and thus not visible to the user. The Page Visibility API provides events you can watch for to know when a document becomes visible or hidden, as well as features to look at the current visibility state of the page.</source>
          <target state="translated">タブブラウジングでは、任意のウェブページがバックグラウンドにあるため、ユーザーからは見えない可能性があります。ページの可視性 API は、ドキュメントが可視または非表示になったときに知るためのイベントや、ページの現在の可視性の状態を見るための機能を提供しています。</target>
        </trans-unit>
        <trans-unit id="8f88bdd2d45f0f48ea15e71d299b791576eb1ed4" translate="yes" xml:space="preserve">
          <source>With that all in mind, let's take a look at the code to create an IIR filter with the Web Audio API.</source>
          <target state="translated">それでは、Web Audio API を使って IIR フィルタを作成するコードを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="824f585c959f8f70672e6232e46d690305fb4be1" translate="yes" xml:space="preserve">
          <source>With that in hand, we set the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; to 50-pixel-tall &quot;serif&quot; (the user's default &lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;serif&lt;/a&gt; font), then call &lt;code&gt;fillText()&lt;/code&gt; to draw the text &quot;Hello world,&quot; starting at the coordinates (50, 90).</source>
          <target state="translated">これを手にして、&lt;a href=&quot;font&quot;&gt; &lt;code&gt;font&lt;/code&gt; &lt;/a&gt;を高さ50ピクセルの「serif」（ユーザーのデフォルトの&lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;セリフ&lt;/a&gt;フォント）に設定し、 &lt;code&gt;fillText()&lt;/code&gt; を呼び出して、座標（50、90）から始まる「Hello world」というテキストを描画します。</target>
        </trans-unit>
        <trans-unit id="04ea948dd70fbbf6b77fcd91951fefee88e0fd3f" translate="yes" xml:space="preserve">
          <source>With that in hand, we set the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; to 50-pixel-tall &quot;serif&quot; (the user's default &lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;serif&lt;/a&gt; font), then call &lt;code&gt;strokeText()&lt;/code&gt; to draw the text &quot;Hello world,&quot; starting at the coordinates (50, 90).</source>
          <target state="translated">これを手にして、&lt;a href=&quot;font&quot;&gt; &lt;code&gt;font&lt;/code&gt; &lt;/a&gt;を高さ50ピクセルの「serif」（ユーザーのデフォルトの&lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;セリフ&lt;/a&gt;フォント）に設定し、 &lt;code&gt;strokeText()&lt;/code&gt; を呼び出して、座標（50、90）から始まる「Hello world」というテキストを描画します。</target>
        </trans-unit>
        <trans-unit id="524dce0be1ce55ccc6b932d6f3166cabf9853e0c" translate="yes" xml:space="preserve">
          <source>With that key, we will be able to compute the &lt;em&gt;mac&lt;/em&gt; of the data.</source>
          <target state="translated">そのキーを使用して、データの&lt;em&gt;MAC&lt;/em&gt;を計算できます。</target>
        </trans-unit>
        <trans-unit id="81e3cc29ef214d7f001756261741ed56bf894b75" translate="yes" xml:space="preserve">
          <source>With the &quot;Include local directory pass when uploading files to a server&quot; option enabled, IE will change the filename inside the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; on the fly. To have direct control of the sent filename, the developer should send the filename as the third parameter value, i.e. &lt;code&gt;formData.append(name, value, filename)&lt;/code&gt;.</source>
          <target state="translated">[サーバーにファイルをアップロードするときにローカルディレクトリパスを含める]オプションを有効にすると、IEは&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;内のファイル名をオンザフライで変更します。送信されたファイル名を直接制御するには、開発者はファイル名を3番目のパラメータ値として送信する必要があります。つまり、 &lt;code&gt;formData.append(name, value, filename)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0b2bd2ea3acafa99b467b627258375ddc9ca19c7" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event, the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property is initialized to the effect that the user is requesting. The user can modify the desired effect by pressing modifier keys. Although the exact keys used vary by platform, typically the Shift and Control keys would be used to switch between copying, moving, and linking. The mouse pointer will change to indicate which operation is desired; for instance, for a copy, the cursor might appear with a plus sign next to it.</source>
          <target state="translated">&lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベント、&lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; プロパティの&lt;/a&gt;プロパティは、ユーザーが要求していると効果に初期化されます。ユーザーは修飾キーを押すことにより、希望する効果を変更できます。使用される正確なキーはプラットフォームによって異なりますが、通常、ShiftキーとControlキーを使用して、コピー、移動、リンクを切り替えます。マウスポインタが変わり、必要な操作が示されます。たとえば、コピーの場合、カーソルの横にプラス記号が表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="90dd4ea9efa94f11d39366b3dc421afbcde1b22b" translate="yes" xml:space="preserve">
          <source>With the IIRFIlter node it's up to you to set what &lt;code&gt;feedforward&lt;/code&gt; and &lt;code&gt;feedback&lt;/code&gt; values the filter needs &amp;mdash; this determines the characteristics of the filter. The downside is that this involves some complex maths.</source>
          <target state="translated">IIRFIlterノードでは、フィルターに必要な &lt;code&gt;feedforward&lt;/code&gt; 値と &lt;code&gt;feedback&lt;/code&gt; 値を設定する必要があります。これにより、フィルターの特性が決まります。欠点は、これにはいくつかの複雑な数学が含まれることです。</target>
        </trans-unit>
        <trans-unit id="3c0e5e110d6fecbc0aa44994529f76d105b26872" translate="yes" xml:space="preserve">
          <source>With the Web Animations API, all you need to change is just one little property!</source>
          <target state="translated">Web Animations APIを使えば、変更する必要があるのは1つの小さなプロパティだけです。</target>
        </trans-unit>
        <trans-unit id="a85d0b6832368867becfacd793181be50c35ca7b" translate="yes" xml:space="preserve">
          <source>With the Web Animations API, we can move interactive animations from stylesheets to JavaScript, separating presentation from behavior. We no longer need to rely on DOM-heavy techniques such as writing CSS properties and scoping classes onto elements to control playback direction. And unlike pure, declarative CSS, JavaScript also lets us dynamically set values from properties to durations. For building custom animation libraries and creating interactive animations, the Web Animations API might be the perfect tool for the job. Let's see what it can do!</source>
          <target state="translated">Web Animations API を使用すると、インタラクティブなアニメーションをスタイルシートから JavaScript に移行し、プレゼンテーションとビヘイビアを分離することができます。CSS のプロパティを書いたり、再生方向を制御するために要素にクラスをスコープしたりといった、DOM を多用するテクニックに頼る必要はもうありません。また、純粋な宣言的CSSとは異なり、JavaScriptではプロパティからデュレーションまでの値を動的に設定することができます。カスタムアニメーションライブラリの構築やインタラクティブなアニメーションの作成には、Web Animations APIが最適なツールかもしれません。何ができるのか見てみましょう</target>
        </trans-unit>
        <trans-unit id="a54e82323c0ae7c79ee68042b2e1bb2d7ca8fd44" translate="yes" xml:space="preserve">
          <source>With the association in place between the vertex buffer for our shape and the &lt;code&gt;aVertexPosition&lt;/code&gt; attribute used to deliver vertexes one by one into the vertex shader, we're ready to draw the shape by calling &lt;a href=&quot;../webglrenderingcontext/drawarrays&quot;&gt;&lt;code&gt;drawArrays()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シェイプの頂点バッファーと頂点シェーダーに頂点を1つずつ配信するために使用される &lt;code&gt;aVertexPosition&lt;/code&gt; 属性の間に関連付けが設定されたら、&lt;a href=&quot;../webglrenderingcontext/drawarrays&quot;&gt; &lt;code&gt;drawArrays()&lt;/code&gt; を&lt;/a&gt;呼び出してシェイプを描画する準備が整います。</target>
        </trans-unit>
        <trans-unit id="55351da2e8fbca9c3979a774ef437b511c178f6e" translate="yes" xml:space="preserve">
          <source>With the association in place between the vertex buffer for our shape and the &lt;code&gt;aVertexPosition&lt;/code&gt; attribute used to deliver vertexes one by one into the vertex shader, we're ready to draw the shape by calling &lt;a href=&quot;drawarrays&quot;&gt;&lt;code&gt;drawArrays()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シェイプの頂点バッファーと頂点シェーダーに頂点を1つずつ配信するために使用される &lt;code&gt;aVertexPosition&lt;/code&gt; 属性の間に関連付けが設定されたら、&lt;a href=&quot;drawarrays&quot;&gt; &lt;code&gt;drawArrays()&lt;/code&gt; を&lt;/a&gt;呼び出してシェイプを描画する準備が整います。</target>
        </trans-unit>
        <trans-unit id="372fac645750cd24a713bdd67eb92870c39ea0b9" translate="yes" xml:space="preserve">
          <source>With the built-in popup blockers of Mozilla/Firefox and Internet Explorer 6 SP2, you have to check the return value of &lt;code&gt;window.open()&lt;/code&gt;: it will be &lt;var&gt;null&lt;/var&gt; if the window wasn't allowed to open. However, for most other popup blockers, there is no reliable way.</source>
          <target state="translated">Mozilla / FirefoxおよびInternet Explorer 6 SP2の組み込みポップアップブロッカーを使用して、 &lt;code&gt;window.open()&lt;/code&gt; の戻り値を確認する必要があり &lt;var&gt;null&lt;/var&gt; 。ウィンドウを開くことが許可されていない場合はnullになります。ただし、他のほとんどのポップアップブロッカーでは、信頼できる方法はありません。</target>
        </trans-unit>
        <trans-unit id="16e542e1cdcc282a5a2d4bd8bc7d1a8cf7f93967" translate="yes" xml:space="preserve">
          <source>With the chunks encoded, we then call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;Array/forEach&lt;/code&gt;&lt;/a&gt; on the resulting array. Inside this block we use &lt;a href=&quot;../writablestreamdefaultwriter/ready&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter.ready&lt;/code&gt;&lt;/a&gt; to check whether the writer is ready to have another chunk written to it. &lt;code&gt;ready&lt;/code&gt; returns a promise that fulfills when this is the case, inside of which we call &lt;a href=&quot;../writablestreamdefaultwriter/write&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter.write()&lt;/code&gt;&lt;/a&gt; to actually write the chunk to the stream. This also triggers the &lt;code&gt;write()&lt;/code&gt; method specified inside the &lt;code&gt;WritableStream()&lt;/code&gt; constructor, as discussed above.</source>
          <target state="translated">チャンクをエンコードした後、結果の配列に対して&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;Array/forEach&lt;/code&gt; &lt;/a&gt;を呼び出します。このブロック内では、&lt;a href=&quot;../writablestreamdefaultwriter/ready&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter.ready&lt;/code&gt; &lt;/a&gt;を使用して、ライターが別のチャンクを書き込む準備ができているかどうかを確認します。 &lt;code&gt;ready&lt;/code&gt; は、これが当てはまる場合に満たされるpromiseを返します。その中で&lt;a href=&quot;../writablestreamdefaultwriter/write&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter.write()&lt;/code&gt; &lt;/a&gt;を呼び出して、実際にチャンクをストリームに書き込みます。これにより、前述のように、 &lt;code&gt;WritableStream()&lt;/code&gt; コンストラクター内で指定された &lt;code&gt;write()&lt;/code&gt; メソッドもトリガーされます。</target>
        </trans-unit>
        <trans-unit id="5bb67e872994a46782754507025c87dd7ad6061a" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;../../canvasrenderingcontext2d/drawimage&quot;&gt;&lt;code&gt;drawImage()&lt;/code&gt;&lt;/a&gt; method, a second canvas and the &lt;a href=&quot;../../canvasrenderingcontext2d/imagesmoothingenabled&quot;&gt;&lt;code&gt;imageSmoothingEnabled&lt;/code&gt;&lt;/a&gt; property, we are able to zoom into our picture and see the details.</source>
          <target state="translated">助けを借りて&lt;a href=&quot;../../canvasrenderingcontext2d/drawimage&quot;&gt; &lt;code&gt;drawImage()&lt;/code&gt; &lt;/a&gt;メソッド、二キャンバスと&lt;a href=&quot;../../canvasrenderingcontext2d/imagesmoothingenabled&quot;&gt; &lt;code&gt;imageSmoothingEnabled&lt;/code&gt; &lt;/a&gt;財産、私たちは絵にズームして詳細を確認することができます。</target>
        </trans-unit>
        <trans-unit id="5bef082f7c4f61bc5cbafc769bef716c244ef51d" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;../fontface&quot;&gt;&lt;code&gt;FontFace&lt;/code&gt;&lt;/a&gt; API, you can explicitly load fonts before using it in canvas.</source>
          <target state="translated">助けを借りて&lt;a href=&quot;../fontface&quot;&gt; &lt;code&gt;FontFace&lt;/code&gt; の&lt;/a&gt; APIは、明示的にキャンバスにそれを使用する前に、フォントをロードすることができます。</target>
        </trans-unit>
        <trans-unit id="7af46fc9bd78e3c73ec4e832eac2cbd0e2ebf0c9" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;webgl_lose_context&quot;&gt;&lt;code&gt;WEBGL_lose_context&lt;/code&gt;&lt;/a&gt; extension, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; events:</source>
          <target state="translated">助けを借りて&lt;a href=&quot;webgl_lose_context&quot;&gt; &lt;code&gt;WEBGL_lose_context&lt;/code&gt; の&lt;/a&gt;拡張子は、シミュレートすることができ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; イベント：</target>
        </trans-unit>
        <trans-unit id="6326322bfbb8795b35ede077b61f6922dccb4109" translate="yes" xml:space="preserve">
          <source>With the help of this extension, privileged contexts are able to retrieve debugging information about about the user's graphic driver:</source>
          <target state="translated">この拡張機能の助けを借りて、特権コンテキストはユーザのグラフィックドライバに関するデバッグ情報を取得することができます。</target>
        </trans-unit>
        <trans-unit id="49c0612a2e28d43a1a66b95588c3d7754981bf08" translate="yes" xml:space="preserve">
          <source>With the help of this extension, you can now set the magnification or minification filter in the &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt;&lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt;&lt;/a&gt; method to one of &lt;code&gt;gl.LINEAR&lt;/code&gt;, &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt;, &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt;, or &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt;, and use floating-point textures.</source>
          <target state="translated">この拡張機能を利用して、&lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt; &lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt; &lt;/a&gt;メソッドの拡大または縮小フィルターを &lt;code&gt;gl.LINEAR&lt;/code&gt; 、 &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt; 、 &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt; 、または &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt; のいずれかに設定し、浮動小数点テクスチャを使用できるようになりました。 。</target>
        </trans-unit>
        <trans-unit id="a933ce180c6fad4edba3fab29ef2f91d8cad459f" translate="yes" xml:space="preserve">
          <source>With the help of this extension, you can now set the magnification or minification filter in the &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt;&lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt;&lt;/a&gt; method to one of &lt;code&gt;gl.LINEAR&lt;/code&gt;, &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt;, &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt;, or &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt;, and use half floating-point textures.</source>
          <target state="translated">この拡張機能を利用して、&lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt; &lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt; &lt;/a&gt;メソッドの拡大または縮小フィルターを &lt;code&gt;gl.LINEAR&lt;/code&gt; 、 &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt; 、 &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt; 、または &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt; のいずれかに設定し、半浮動小数点を使用できるようになりましたテクスチャ。</target>
        </trans-unit>
        <trans-unit id="2cc00bbddfb710fc0691818558c6fbcb71a5aa34" translate="yes" xml:space="preserve">
          <source>With the index of the vertex position attribute now available in &lt;code&gt;aVertexPosition&lt;/code&gt;, we call &lt;code&gt;enableVertexAttribArray()&lt;/code&gt; to enable the position attribute so it can be used by the shader program (in particular, by the vertex shader).</source>
          <target state="translated">頂点位置属性のインデックスが &lt;code&gt;aVertexPosition&lt;/code&gt; で利用できるようになったので、 &lt;code&gt;enableVertexAttribArray()&lt;/code&gt; を呼び出して位置属性を有効にし、シェーダープログラム（特に頂点シェーダー）で使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="7bf64d3949733da974c20eedab6fd34b775c6a3e" translate="yes" xml:space="preserve">
          <source>With the key generator, the key would be generated automatically as you add the value to the object store. The current number of a key generator is always set to 1 when the object store for that key generator is first created. Basically the newly auto-generated key is increased by 1 based on the previous key. The current number for a key generator never decreases, other than as a result of database operations being reverted, for example, the database transaction is aborted. Therefore deleting a record or even clearing all records from an object store never affects the object store's key generator.</source>
          <target state="translated">キー・ジェネレータでは、オブジェクト・ストアに値を追加すると自動的にキーが生成されます。キー・ジェネレータの現在の番号は、そのキー・ジェネレータのオブジェクト・ストアが最初に作成されたときに、常に1に設定されます。基本的に、新しく自動生成されたキーは、前のキーに基づいて1増加します。鍵生成器の現在の番号は、データベース操作が戻された結果、例えばデータベース・トランザクションが中止された場合を除いて、決して減少しない。したがって、レコードを削除したり、オブジェクト・ストアからすべてのレコードをクリアしたりしても、オブジェクト・ストアのキー・ジェネレータに影響を与えることはありません。</target>
        </trans-unit>
        <trans-unit id="9456e13ad3bc20d9d10f3fdc696c591711a62371" translate="yes" xml:space="preserve">
          <source>With the structure of the site defined, we turn to the styling for the site. Let's look at the style for each component of the page individually.</source>
          <target state="translated">サイトの構造が決まったので、次はサイトのスタイリングに移ります。ページの各コンポーネントのスタイルを個別に見てみましょう。</target>
        </trans-unit>
        <trans-unit id="c4766a07076583dc04214965503b8753a31349a4" translate="yes" xml:space="preserve">
          <source>With the target element in hand, we set the &lt;a href=&quot;../element/scrolltop&quot;&gt;&lt;code&gt;scrollTop&lt;/code&gt;&lt;/a&gt; of the frame's &lt;a href=&quot;../document/scrollingelement&quot;&gt;&lt;code&gt;scrollingElement&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/offsetTop&quot;&gt;&lt;code&gt;offsetTop&lt;/code&gt;&lt;/a&gt; of the target element. By doing so, we set the vertical scrolling position of the frame's document so that it's the same as the top edge of the target element.</source>
          <target state="translated">手にターゲット要素で、我々は設定&lt;a href=&quot;../element/scrolltop&quot;&gt; &lt;code&gt;scrollTop&lt;/code&gt; スプライト&lt;/a&gt;フレームのの&lt;a href=&quot;../document/scrollingelement&quot;&gt; &lt;code&gt;scrollingElement&lt;/code&gt; を&lt;/a&gt;する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/offsetTop&quot;&gt; &lt;code&gt;offsetTop&lt;/code&gt; &lt;/a&gt;ターゲット要素の。そうすることで、フレームのドキュメントの垂直スクロール位置を、ターゲット要素の上端と同じになるように設定します。</target>
        </trans-unit>
        <trans-unit id="e88e8622e274f1ebeb983438f7b26a2f87e8c5e7" translate="yes" xml:space="preserve">
          <source>With the user's permission through a prompt, turns on a camera or screensharing and/or a microphone on the system and provides a &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; containing a video track and/or an audio track with the input.</source>
          <target state="translated">プロンプトを介してユーザーの許可を得て、システムのカメラまたは画面&lt;a href=&quot;mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;やマイクをオンにし、ビデオトラックやオーディオトラックを含むMediaStreamに入力を提供します。</target>
        </trans-unit>
        <trans-unit id="1b468afcfdf19875b48968ca43a3849d0d8c0094" translate="yes" xml:space="preserve">
          <source>With the vertex data now provided to WebGL, we set &lt;code&gt;vertexNumComponents&lt;/code&gt; to the number of components in each vertex (2, since they're 2D vertexes) and &lt;code&gt;vertexCount&lt;/code&gt; to the number of vertexes in the vertex list.</source>
          <target state="translated">頂点データがWebGLに提供されたので、 &lt;code&gt;vertexNumComponents&lt;/code&gt; を各頂点のコンポーネントの数（2Dは2D頂点であるため2）に &lt;code&gt;vertexCount&lt;/code&gt; し、vertexCountを頂点リストの頂点の数に設定します。</target>
        </trans-unit>
        <trans-unit id="e585e1993bc271947d97639b9e2d7bd6073ffa57" translate="yes" xml:space="preserve">
          <source>With these big concepts under our belts, we can get to more concrete stuff.</source>
          <target state="translated">このような大きな概念があれば、より具体的なものにたどり着くことができます。</target>
        </trans-unit>
        <trans-unit id="39f05fb2284f0bc47f94036cb08c4e0ffa2afcae" translate="yes" xml:space="preserve">
          <source>With these big concepts under our belts, we can get to more concrete stuff. For a tutorial on how to use the API, see &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB&quot;&gt;Using IndexedDB&lt;/a&gt;.</source>
          <target state="translated">これらの大きな概念を身に付ければ、より具体的なものに到達できます。APIの使用方法に関するチュートリアルについては、&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB&quot;&gt;IndexedDBの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9bd411077698f97ffa81e2a28c9b9e7871ccf888" translate="yes" xml:space="preserve">
          <source>With this code in place, each time the user plugs in a camera, microphone, or other media device, or turns one on or off, we call &lt;code&gt;updateDeviceList()&lt;/code&gt; to redraw the list of connected devices.</source>
          <target state="translated">このコードを配置すると、ユーザーがカメラ、マイク、その他のメディアデバイスを接続したり、オンまたはオフにしたりする &lt;code&gt;updateDeviceList()&lt;/code&gt; 、updateDeviceList（）を呼び出して、接続されているデバイスのリストを再描画します。</target>
        </trans-unit>
        <trans-unit id="5d0732cf9cfe5b4099e1505216e0992ca0bde3ae" translate="yes" xml:space="preserve">
          <source>With this code in place, the result looks like this:</source>
          <target state="translated">このコードを配置すると、結果は次のようになります。</target>
        </trans-unit>
        <trans-unit id="ec0404607a980fd5b9cd16a3e85645b9a750988d" translate="yes" xml:space="preserve">
          <source>With this extension, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; events:</source>
          <target state="translated">この拡張機能を使用すると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; イベントをシミュレートできます。</target>
        </trans-unit>
        <trans-unit id="16ea8709d1511ba3b03fccc2295c99744fe633cb" translate="yes" xml:space="preserve">
          <source>With this method, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">このメソッドを使用すると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; イベントをシミュレートできます。</target>
        </trans-unit>
        <trans-unit id="88f3f7c0e22ab6115c9f43ac1615342d428a4b14" translate="yes" xml:space="preserve">
          <source>With this method, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">このメソッドを使用すると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; イベントをシミュレートできます。</target>
        </trans-unit>
        <trans-unit id="8a884c64cfc571fd48023eb4273cf6f26af1099e" translate="yes" xml:space="preserve">
          <source>With this table in place, we can find out the frequency for a given note in a particular octave quite easily. If we want the frequency for the note G# in octave 1, we simply use &lt;code&gt;noteFreq[1][&quot;G#&quot;]&lt;/code&gt; and get the value 51.9 as a result.</source>
          <target state="translated">このテーブルを配置すると、特定のオクターブの特定のノートの周波数を簡単に見つけることができます。オクターブ1のノートG＃の周波数が必要な場合は、 &lt;code&gt;noteFreq[1][&quot;G#&quot;]&lt;/code&gt; を使用して、結果として値51.9を取得します。</target>
        </trans-unit>
        <trans-unit id="892207f2edf7542576ac45a227a9c260fda91319" translate="yes" xml:space="preserve">
          <source>With those settings included it's time to directly draw to the screen using clip space coordinates.</source>
          <target state="translated">これらの設定をした上で、クリップスペース座標を使って直接画面に描画してみましょう。</target>
        </trans-unit>
        <trans-unit id="aa4b5acb4cc342c42949520deb37509c671e5bee" translate="yes" xml:space="preserve">
          <source>With your video properly encoded and adaptive bitrate media generated, you're now ready to begin adaptive bitrate streaming on the web using DASH and MSE.</source>
          <target state="translated">ビデオが適切にエンコードされ、アダプティブビットレートメディアが生成されたら、DASHとMSEを使ってウェブ上でアダプティブビットレートストリーミングを始める準備ができました。</target>
        </trans-unit>
        <trans-unit id="3cc479cbff77863350a14cd5e5acd16377352285" translate="yes" xml:space="preserve">
          <source>Within a web page, there are certain cases where a default drag behavior is used. These include text selections, images, and links. When an image or link is dragged, the URL of the image or link is set as the drag data, and a drag begins. For other elements, they must be part of a selection for a default drag to occur. To see this in effect, select an area of a webpage, and then click and hold the mouse and drag the selection. An OS-specific rendering of the selection will appear and follow the mouse pointer as the drag occurs. However, this behavior is only the default drag behavior, if no listeners adjust the data to be dragged.</source>
          <target state="translated">ウェブページ内では、デフォルトのドラッグ動作が使用される場合があります。テキスト選択、画像、リンクなどがそれにあたります。画像やリンクをドラッグすると、画像やリンクのURLがドラッグデータとして設定され、ドラッグが開始されます。その他の要素については、それらが選択範囲に含まれていないとデフォルトのドラッグが行われません。この効果を確認するには、ウェブページの領域を選択し、マウスをクリックしたまま選択範囲をドラッグします。ドラッグが行われると選択範囲のOS固有のレンダリングが表示され、 マウスポインタに沿って移動します。ただし、リスナーがドラッグするデータを調整していない場合は、この動作はデフォルトのドラッグ動作のみとなります。</target>
        </trans-unit>
        <trans-unit id="fc43be0e00e924dacd3bb06a355176e423ada085" translate="yes" xml:space="preserve">
          <source>Within site CSS</source>
          <target state="translated">サイト内CSS</target>
        </trans-unit>
        <trans-unit id="f493720c0b682bbd7dc9d44627e0f89f05f4be75" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events, you can check the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property to determine which effect was ultimately chosen. If the chosen effect were &quot;move&quot;, then the original data should be removed from the source of the drag within the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベント内で、&lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;プロパティを確認して、最終的に選択された効果を確認できます。選択した効果が「移動」の場合、ドラッグ &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベント内のドラッグのソースから元のデータを削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="1db54bc51e85b2de5417757bf5d36d3b98af01f1" translate="yes" xml:space="preserve">
          <source>Within the SVG DOM, a &amp;lt;coordinate&amp;gt; is represented as an &lt;a href=&quot;../svglength&quot;&gt;&lt;code&gt;SVGLength&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../svganimatedlength&quot;&gt;&lt;code&gt;SVGAnimatedLength&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SVG DOM内、&amp;lt;座標&amp;gt;として表される&lt;a href=&quot;../svglength&quot;&gt; &lt;code&gt;SVGLength&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;../svganimatedlength&quot;&gt; &lt;code&gt;SVGAnimatedLength&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d1a551c3e917b6a767f7fe289128cc7bc7c6772" translate="yes" xml:space="preserve">
          <source>Within the WebVTT file itself</source>
          <target state="translated">WebVTTファイル自体の中で</target>
        </trans-unit>
        <trans-unit id="e22f62d4eb22532f66fdef12a14f0847c636b79a" translate="yes" xml:space="preserve">
          <source>Without any boundary collision testing our ball runs out of the canvas quickly. We need to check if the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; position of the ball is out of the canvas dimensions and invert the direction of the velocity vectors. To do so, we add the following checks to the &lt;code&gt;draw&lt;/code&gt; method:</source>
          <target state="translated">境界衝突テストを行わないと、ボールがキャンバスからすぐに足りなくなります。私たちは、かどうかを確認する必要がある &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; のボールの位置がキャンバス寸法から外れていると速度ベクトルの方向を反転します。これを行うには、次のチェックを &lt;code&gt;draw&lt;/code&gt; メソッドに追加します。</target>
        </trans-unit>
        <trans-unit id="3e48fc16a05b9e5ec9cc58f341586b7b35b9759b" translate="yes" xml:space="preserve">
          <source>Workaround for event.newURL and event.oldURL</source>
          <target state="translated">event.newURL と event.oldURL の回避策</target>
        </trans-unit>
        <trans-unit id="97de39ae118b23bf5c7480efba0263d4b3523884" translate="yes" xml:space="preserve">
          <source>Workarounds</source>
          <target state="translated">Workarounds</target>
        </trans-unit>
        <trans-unit id="99edd8c8e615e373739d2cdd38a8942b8a573113" translate="yes" xml:space="preserve">
          <source>Worker</source>
          <target state="translated">Worker</target>
        </trans-unit>
        <trans-unit id="557ecc750b78133ef46c941190d2035f31c8e3ef" translate="yes" xml:space="preserve">
          <source>Worker Interface</source>
          <target state="translated">ワーカーインタフェース</target>
        </trans-unit>
        <trans-unit id="45f351551597f42a738de45d92186592bc96c2cb" translate="yes" xml:space="preserve">
          <source>Worker code</source>
          <target state="translated">作業者コード</target>
        </trans-unit>
        <trans-unit id="444702735f0fed9f8b96bd9c9c1a013dd2c0cf03" translate="yes" xml:space="preserve">
          <source>Worker context</source>
          <target state="translated">ワーカーコンテキスト</target>
        </trans-unit>
        <trans-unit id="27e5d7b86605ca1f916eb4c434ac66638402dfec" translate="yes" xml:space="preserve">
          <source>Worker feature detection</source>
          <target state="translated">作業者の特徴検出</target>
        </trans-unit>
        <trans-unit id="2817f9e4b4c7c7d617bb714ffa668284ae432a2b" translate="yes" xml:space="preserve">
          <source>Worker threads have access to a global function, &lt;code&gt;importScripts()&lt;/code&gt;, which lets them import scripts. It accepts zero or more URIs as parameters to resources to import; all of the following examples are valid:</source>
          <target state="translated">ワーカースレッドは、スクリプトをインポートできるグローバル関数 &lt;code&gt;importScripts()&lt;/code&gt; にアクセスできます。インポートするリソースへのパラメーターとして0個以上のURIを受け入れます。次の例はすべて有効です。</target>
        </trans-unit>
        <trans-unit id="7fcbf383d375a68e192d36f72dd2a7d644226b70" translate="yes" xml:space="preserve">
          <source>Worker.constructor</source>
          <target state="translated">Worker.constructor</target>
        </trans-unit>
        <trans-unit id="4cb08f8fcfe7ed6a88e084a618784110212fa831" translate="yes" xml:space="preserve">
          <source>Worker.onmessage</source>
          <target state="translated">Worker.onmessage</target>
        </trans-unit>
        <trans-unit id="bdca11fd9765dd33362e4e00434a69f88eefba00" translate="yes" xml:space="preserve">
          <source>Worker.onmessageerror</source>
          <target state="translated">Worker.onmessageerror</target>
        </trans-unit>
        <trans-unit id="c683d0df6a04846df93f030586bbc6677b85a85b" translate="yes" xml:space="preserve">
          <source>Worker.postMessage</source>
          <target state="translated">Worker.postMessage</target>
        </trans-unit>
        <trans-unit id="8d6799029efbbf3fd6883f5e6028ef4f7fb3c461" translate="yes" xml:space="preserve">
          <source>Worker.terminate</source>
          <target state="translated">Worker.terminate</target>
        </trans-unit>
        <trans-unit id="958d8e26e3b98c62cdd72e1f83e755dbf3211860" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope</source>
          <target state="translated">WorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="db121ff82e01165cc9576f7795aa88da975f66d1" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.importScripts</source>
          <target state="translated">WorkerGlobalScope.importScripts</target>
        </trans-unit>
        <trans-unit id="f6831b001a4cf6b39302eb0fcf3acea67134ff9a" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.location</source>
          <target state="translated">WorkerGlobalScope.location</target>
        </trans-unit>
        <trans-unit id="b1db2dc6f0b0033fceee51aa503e72d4920f6fa2" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.navigator</source>
          <target state="translated">WorkerGlobalScope.navigator</target>
        </trans-unit>
        <trans-unit id="e1a576f4e0b3ba4e6a55bfb7ff67483fc54ed716" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onclose</source>
          <target state="translated">WorkerGlobalScope.onclose</target>
        </trans-unit>
        <trans-unit id="95d483e3ff45af7d10447ed80ad2ba199c13f06d" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onerror</source>
          <target state="translated">WorkerGlobalScope.onerror</target>
        </trans-unit>
        <trans-unit id="5515d9288bba6547d8d55d05cf323a85411e5a85" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onlanguagechange</source>
          <target state="translated">WorkerGlobalScope.onlanguagechange</target>
        </trans-unit>
        <trans-unit id="4483f2487bbc8bb7f126184a5652ac4f8058eb7c" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onoffline</source>
          <target state="translated">WorkerGlobalScope.onoffline</target>
        </trans-unit>
        <trans-unit id="170c26198a9da8fca9fda3571dc105dc352da134" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.ononline</source>
          <target state="translated">WorkerGlobalScope.ononline</target>
        </trans-unit>
        <trans-unit id="2a557663b947a7e390e61d6222fe7a95a5383d6e" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.performance</source>
          <target state="translated">WorkerGlobalScope.performance</target>
        </trans-unit>
        <trans-unit id="0306d4b19bdff06aa9f87c973cfd2a1e15facbcd" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.self</source>
          <target state="translated">WorkerGlobalScope.self</target>
        </trans-unit>
        <trans-unit id="74a0d635bad8cb921832f022e80f37a47e5b135d" translate="yes" xml:space="preserve">
          <source>WorkerLocation</source>
          <target state="translated">WorkerLocation</target>
        </trans-unit>
        <trans-unit id="315e6d0000af41369aa07e54a100988d3fd17dee" translate="yes" xml:space="preserve">
          <source>WorkerNavigator</source>
          <target state="translated">WorkerNavigator</target>
        </trans-unit>
        <trans-unit id="e5fe3477ef2e6d808558d970bc78565c8048db91" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.connection</source>
          <target state="translated">WorkerNavigator.connection</target>
        </trans-unit>
        <trans-unit id="16145348d388cbf26ca66f7579a2ec82840071f0" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.locks</source>
          <target state="translated">WorkerNavigator.locks</target>
        </trans-unit>
        <trans-unit id="ee5a9e6beb452533d5f36a9d23c50fb23b5809da" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.permissions</source>
          <target state="translated">WorkerNavigator.permissions</target>
        </trans-unit>
        <trans-unit id="74dcc4d991545e8d02f0deeddbddf70e41880ee6" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.sendBeacon()</source>
          <target state="translated">WorkerNavigator.sendBeacon()</target>
        </trans-unit>
        <trans-unit id="b6ef3acd0f91c0c6e2a6bad2692c8aa84dfc4c73" translate="yes" xml:space="preserve">
          <source>Workers</source>
          <target state="translated">Workers</target>
        </trans-unit>
        <trans-unit id="92e96706f9c71190a5f854fa3bb63763988bbf36" translate="yes" xml:space="preserve">
          <source>Workers are considered to have their own execution context, distinct from the document that created them. For this reason they are, in general, not governed by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy&quot;&gt;content security policy&lt;/a&gt; of the document (or parent worker) that created them. So for example, suppose a document is served with the following header:</source>
          <target state="translated">ワーカーは、それらを作成したドキュメントとは異なり、独自の実行コンテキストを持つと見なされます。このため、一般に、それらを作成したドキュメント（または親ワーカー）の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy&quot;&gt;コンテンツセキュリティポリシー&lt;/a&gt;によって管理されていません。たとえば、ドキュメントに次のヘッダーが付いているとします。</target>
        </trans-unit>
        <trans-unit id="e0faa61746d2dc83992776547c3a106ba44e5fd4" translate="yes" xml:space="preserve">
          <source>Workers are mainly useful for allowing your code to perform processor-intensive calculations without blocking the user interface thread. In this example, a worker is used to calculate Fibonacci numbers.</source>
          <target state="translated">ワーカーは主に、ユーザー インターフェイス スレッドをブロックすることなく、プロセッサ集約的な計算をコードで実行できるようにするのに便利です。この例では、フィボナッチ数の計算にワーカーを使用しています。</target>
        </trans-unit>
        <trans-unit id="6de8a4ef2fd42f731bc7d4aba330b604b8dbf94e" translate="yes" xml:space="preserve">
          <source>Workers can also create a new URL using the &lt;a href=&quot;../url/url&quot;&gt;&lt;code&gt;URL()&lt;/code&gt;&lt;/a&gt; constructor and call any normal method on the returned object.</source>
          <target state="translated">ワーカーは、&lt;a href=&quot;../url/url&quot;&gt; &lt;code&gt;URL()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して新しいURLを作成し、返されたオブジェクトで通常のメソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="bbc0cd62c963e533e26d418859faf51d471ed093" translate="yes" xml:space="preserve">
          <source>Workers can use the static methods &lt;a href=&quot;../url/createobjecturl&quot;&gt;URL.createObjectURL&lt;/a&gt; and &lt;a href=&quot;../url/revokeobjecturl&quot;&gt;URL.revokeObjectURL&lt;/a&gt; with &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects accesible to the worker.</source>
          <target state="translated">労働者は、静的メソッドを使用することができます&lt;a href=&quot;../url/createobjecturl&quot;&gt;URL.createObjectURL&lt;/a&gt;と&lt;a href=&quot;../url/revokeobjecturl&quot;&gt;URL.revokeObjectURL&lt;/a&gt;との&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;労働者にづけしたオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="1ee8e17f609e5a3529e298faa3430175587745eb" translate="yes" xml:space="preserve">
          <source>Workers may in turn spawn new workers as long as those workers are hosted within the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;origin&lt;/a&gt; as the parent page (Note: nested workers are &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=22723&quot;&gt;currently not implemented in WebKit&lt;/a&gt;). In addition workers may use &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the stipulation that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ワーカーは、親ページと同じ&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;オリジン&lt;/a&gt;内でホストされている限り、順番に新しいワーカーを生成できます（注：&lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=22723&quot;&gt;現在、&lt;/a&gt;ネストされたワーカーはWebKitに実装されていません）。また、労働者が使用すること&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;することを規定して、ネットワークI / Oのため &lt;code&gt;responseXML&lt;/code&gt; と &lt;code&gt;channel&lt;/code&gt; 上の属性 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を常に返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74cee3adf91cebc05c18c7b9063880a5b0b27ca0" translate="yes" xml:space="preserve">
          <source>Workers may in turn spawn new workers, as long as those workers are hosted within the same origin as the parent page. In addition, workers may use &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the exception that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ワーカーが親ページと同じオリジン内でホストされている限り、ワーカーは新しいワーカーを生成できます。また、労働者が使用すること&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;することを除いて、ネットワークI / Oのため &lt;code&gt;responseXML&lt;/code&gt; と &lt;code&gt;channel&lt;/code&gt; 上の属性 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を常に返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e654449b2757a4fb08da980d01570baa564b70c" translate="yes" xml:space="preserve">
          <source>Workers may spawn more workers if they wish. So-called sub-workers must be hosted within the same origin as the parent page. Also, the URIs for subworkers are resolved relative to the parent worker's location rather than that of the owning page. This makes it easier for workers to keep track of where their dependencies are.</source>
          <target state="translated">ワーカーは、希望すればさらに多くのワーカーを産み出すことができます。いわゆるサブワーカーは、親ページと同じオリジン内でホストされていなければなりません。また、サブワーカーのURIは、所有するページのURIではなく、親ワーカーの場所を基準にして解決されます。これにより、ワーカーは依存関係がどこにあるかを簡単に追跡することができます。</target>
        </trans-unit>
        <trans-unit id="d5c4ce1a26a6e586b1bdb77deaef520b5287f1fd" translate="yes" xml:space="preserve">
          <source>Workers may, in turn, spawn new workers, as long as those workers are hosted within the same origin as the parent page. In addition, workers may use &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the exception that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ワーカーは、親ページと同じオリジン内でホストされている限り、順番に新しいワーカーを生成できます。また、労働者が使用すること&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;することを除いて、ネットワークI / Oのため &lt;code&gt;responseXML&lt;/code&gt; と &lt;code&gt;channel&lt;/code&gt; 上の属性 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を常に返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd81953275e4c603fc6e296163f16395c6ee5da7" translate="yes" xml:space="preserve">
          <source>Working Draft</source>
          <target state="translated">ワーキングドラフト</target>
        </trans-unit>
        <trans-unit id="d5d5132306a8d60e8bca8cc47a924e629d79ce94" translate="yes" xml:space="preserve">
          <source>Working with extensions</source>
          <target state="translated">拡張機能を使った作業</target>
        </trans-unit>
        <trans-unit id="3f431c547b0c92488c93507145ba5204b4cd4f9a" translate="yes" xml:space="preserve">
          <source>Working with windows in chrome code</source>
          <target state="translated">クロームコードでウィンドウズを操作する</target>
        </trans-unit>
        <trans-unit id="9a228d880b9910b61ce9bd91c7b7b322839414e9" translate="yes" xml:space="preserve">
          <source>Worklet</source>
          <target state="translated">Worklet</target>
        </trans-unit>
        <trans-unit id="3b5f27aab06de1e65689543feb5bb98725bd1b5d" translate="yes" xml:space="preserve">
          <source>Worklet types</source>
          <target state="translated">ワークレットの種類</target>
        </trans-unit>
        <trans-unit id="bea772fca721f599a72e792fcae363af6b27f58a" translate="yes" xml:space="preserve">
          <source>Worklet.addModule</source>
          <target state="translated">Worklet.addModule</target>
        </trans-unit>
        <trans-unit id="a04589c9de7934ee0efbd0faf239f57f555e123d" translate="yes" xml:space="preserve">
          <source>Worklets Level 1&lt;br/&gt;&lt;small&gt;The definition of 'Worklet' in that specification.&lt;/small&gt;</source>
          <target state="translated">ワークレットレベル1 &lt;br/&gt;&lt;small&gt;その仕様における「ワークレット」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d8e39a843fe2d3c37723b93c44e39e568b5f3fee" translate="yes" xml:space="preserve">
          <source>Worklets Level 1&lt;br/&gt;&lt;small&gt;The definition of 'addModule()' in that specification.&lt;/small&gt;</source>
          <target state="translated">ワークレットレベル1 &lt;br/&gt;&lt;small&gt;その仕様における「addModule（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1bdb94b6fa73b2bf71f07b2f00f3356bf3d0cd13" translate="yes" xml:space="preserve">
          <source>Worklets are restricted to specific use cases; they cannot be used for arbitrary computations like Web Workers. The &lt;code&gt;Worklet&lt;/code&gt; interface abstracts properties and methods common to all kind of worklets, and cannot be created directly. Instead, you can use one of the following classes:</source>
          <target state="translated">ワークレットは特定の使用例に制限されています。Webワーカーのような任意の計算には使用できません。 &lt;code&gt;Worklet&lt;/code&gt; のインターフェースはworkletsのすべての種類にプロパティとメソッドの共通の抽象化、および直接作成することはできません。代わりに、次のクラスのいずれかを使用できます。</target>
        </trans-unit>
        <trans-unit id="4f57fa8de020173285d4a3296513c8975f36ae41" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;r&lt;/code&gt;</source>
          <target state="translated">テクスチャ座標 &lt;code&gt;r&lt;/code&gt; のラッピング関数</target>
        </trans-unit>
        <trans-unit id="b85e9fbd902ae93fc7384ea883cf75e2df7fd24e" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">テクスチャ座標 &lt;code&gt;s&lt;/code&gt; のラッピング関数</target>
        </trans-unit>
        <trans-unit id="6511461a8f068e6307d98b1791e151f29af62ed9" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">テクスチャ座標 &lt;code&gt;t&lt;/code&gt; のラッピング関数</target>
        </trans-unit>
        <trans-unit id="4d77822dc5b91ca9ef4c744ff10647ed567f0c23" translate="yes" xml:space="preserve">
          <source>Wrapping up the startup() method</source>
          <target state="translated">startup()メソッドのラップアップ</target>
        </trans-unit>
        <trans-unit id="86793abc57b7f140d05eafeb0e1a06f397559249" translate="yes" xml:space="preserve">
          <source>Writable streams</source>
          <target state="translated">書き込み可能なストリーム</target>
        </trans-unit>
        <trans-unit id="cb1b8b7b4f6fe87b5560f6db7162aa9f8346d70f" translate="yes" xml:space="preserve">
          <source>WritableStream</source>
          <target state="translated">WritableStream</target>
        </trans-unit>
        <trans-unit id="d3da910dd66c5fbf6bc164bbb7e033ca3b00264d" translate="yes" xml:space="preserve">
          <source>WritableStream.abort</source>
          <target state="translated">WritableStream.abort</target>
        </trans-unit>
        <trans-unit id="5da357be5a24fb338c3c3656fc0d9e834e00cddf" translate="yes" xml:space="preserve">
          <source>WritableStream.constructor</source>
          <target state="translated">WritableStream.constructor</target>
        </trans-unit>
        <trans-unit id="257cc5b9714e97c085901c1434a3eb460f507fc2" translate="yes" xml:space="preserve">
          <source>WritableStream.getWriter</source>
          <target state="translated">WritableStream.getWriter</target>
        </trans-unit>
        <trans-unit id="f028b8f923b52c93fb6b368ce8826ad1c383f7b5" translate="yes" xml:space="preserve">
          <source>WritableStream.locked</source>
          <target state="translated">WritableStream.locked</target>
        </trans-unit>
        <trans-unit id="db95ad84de234c815c23a48ef5f26dbbb569c6e6" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController</source>
          <target state="translated">WritableStreamDefaultController</target>
        </trans-unit>
        <trans-unit id="ab0bc77d85967d53533c5d405c67eaa9da0762f9" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController.constructor</source>
          <target state="translated">WritableStreamDefaultController.constructor</target>
        </trans-unit>
        <trans-unit id="1481613ed0eb266f7b0325e8db8cce5e36c19680" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController.error</source>
          <target state="translated">WritableStreamDefaultController.error</target>
        </trans-unit>
        <trans-unit id="adb31476b8ab736ad37b323dc9b1bbba778122ca" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter</source>
          <target state="translated">WritableStreamDefaultWriter</target>
        </trans-unit>
        <trans-unit id="2baea71edd8514732824138dc1ba8c850eabae62" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.abort</source>
          <target state="translated">WritableStreamDefaultWriter.abort</target>
        </trans-unit>
        <trans-unit id="3195b8588306a7d1edf2e3573482c99902105917" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.close</source>
          <target state="translated">WritableStreamDefaultWriter.close</target>
        </trans-unit>
        <trans-unit id="373e63f5b29bdecdd6fa0d85622dba3930738807" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.closed</source>
          <target state="translated">WritableStreamDefaultWriter.closed</target>
        </trans-unit>
        <trans-unit id="49eca0322e57a91dcf7dc4612ac48cb31bb59265" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.constructor</source>
          <target state="translated">WritableStreamDefaultWriter.constructor</target>
        </trans-unit>
        <trans-unit id="8d5ec6fc733e411c6c35c8805d317d62d645fffb" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.desiredSize</source>
          <target state="translated">WritableStreamDefaultWriter.desiredSize</target>
        </trans-unit>
        <trans-unit id="bf49714da5a0ec81048719f0cd0bb9ad9ddc10bc" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.ready</source>
          <target state="translated">WritableStreamDefaultWriter.ready</target>
        </trans-unit>
        <trans-unit id="6792498dd73efaea90088575539b26425017a2c7" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.releaseLock</source>
          <target state="translated">WritableStreamDefaultWriter.releaseLock</target>
        </trans-unit>
        <trans-unit id="7da63f57b4561f0763d871ef19418a85b416780c" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.write</source>
          <target state="translated">WritableStreamDefaultWriter.write</target>
        </trans-unit>
        <trans-unit id="e04761e13f10b5a90ad2cb289d4340d058b4756e" translate="yes" xml:space="preserve">
          <source>Write a new cookie</source>
          <target state="translated">新しいクッキーを書く</target>
        </trans-unit>
        <trans-unit id="55543e48cc6534225c5388e5104b3f8151d092bb" translate="yes" xml:space="preserve">
          <source>Write it back as value of &lt;em&gt;Sec-WebSocket-Accept&lt;/em&gt; response header as part of a HTTP response.</source>
          <target state="translated">&lt;em&gt;Sec-WebSocket-Accept&lt;/em&gt;応答ヘッダーの値として、HTTP応答の一部として書き戻します。</target>
        </trans-unit>
        <trans-unit id="57369ff3e4f8ea463d1b55fdfacdc12457bb0376" translate="yes" xml:space="preserve">
          <source>Write the hash back as the value of &quot;Sec-WebSocket-Accept&quot; response header in an HTTP response</source>
          <target state="translated">HTTP レスポンスの &quot;Sec-WebSocket-Accept&quot; レスポンスヘッダの値としてハッシュを書き戻します。</target>
        </trans-unit>
        <trans-unit id="3931405017ef076792278ee97d7bcbdce21ddc10" translate="yes" xml:space="preserve">
          <source>Write your code, using WebRTC APIs per the specification, knowing that your code should work on all browsers.</source>
          <target state="translated">WebRTC APIを仕様書通りに使用して、すべてのブラウザで動作することを意識してコードを書いてください。</target>
        </trans-unit>
        <trans-unit id="c49376792985d1b88974dcb9ae087990ee557acf" translate="yes" xml:space="preserve">
          <source>Write your own code to negotiate the data transport and write your own code to signal to the other peer that it needs to connect to the new channel.</source>
          <target state="translated">データトランスポートをネゴシエートして、新しいチャネルに接続する必要があることを他のピアに信号を送るための独自のコードを書いてください。</target>
        </trans-unit>
        <trans-unit id="e18520123476873237d468e57f57ef6713062042" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;&lt;code&gt;len&lt;/code&gt;&lt;/em&gt; bytes from the specified byte array starting at offset &lt;em&gt;&lt;code&gt;off&lt;/code&gt;&lt;/em&gt; to this output stream.</source>
          <target state="translated">指定されたバイト配列からオフセット&lt;em&gt; &lt;code&gt;off&lt;/code&gt; で&lt;/em&gt;始まる&lt;em&gt; &lt;code&gt;len&lt;/code&gt; &lt;/em&gt;バイトをこの出力ストリームに書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e199aae15f0ab86109c1df2c22b120e8d8b4c7cb" translate="yes" xml:space="preserve">
          <source>Writes a line of text in a document.</source>
          <target state="translated">文書内のテキストの行を書き込みます。</target>
        </trans-unit>
        <trans-unit id="21e4b0d93e1e251813913ab939b119fed73858af" translate="yes" xml:space="preserve">
          <source>Writes a message to the console.</source>
          <target state="translated">コンソールにメッセージを書き込みます。</target>
        </trans-unit>
        <trans-unit id="947e9228b06c46f157db71cd1d04fc4bbfc5867f" translate="yes" xml:space="preserve">
          <source>Writes a passed chunk of data to a &lt;a href=&quot;writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt; and its underlying sink, then returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to indicate the success or failure of the write operation.</source>
          <target state="translated">渡されたデータのチャンクを&lt;a href=&quot;writablestream&quot;&gt; &lt;code&gt;WritableStream&lt;/code&gt; &lt;/a&gt;とその基礎となるシンクに書き込み、書き込み操作の成功または失敗を示すように解決する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="00253bf1b5322cad1ae84c2c63a59b81232f9bde" translate="yes" xml:space="preserve">
          <source>Writes a string of text followed by a newline character to a document.</source>
          <target state="translated">改行文字の後に続く文字列を文書に書き込みます。</target>
        </trans-unit>
        <trans-unit id="4cbc4a9a3fc44dfe4b8664ba2f2e541da673c3eb" translate="yes" xml:space="preserve">
          <source>Writes an error message to the console if the assertion is false. If the assertion is true, nothing happens.</source>
          <target state="translated">アサーションが false の場合、コンソールにエラーメッセージを書き込みます。アサーションが true の場合は何も起こりません。</target>
        </trans-unit>
        <trans-unit id="5b9d47ac2bdaa06766816480f2210af557454a7c" translate="yes" xml:space="preserve">
          <source>Writes arbitrary data to the system clipboard. This asynchronous operation signals that it's finished by resolving the returned &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">システムのクリップボードに任意のデータを書き込みます。この非同期操作は、返された &lt;code&gt;Promise&lt;/code&gt; を解決することによって終了したことを通知します。</target>
        </trans-unit>
        <trans-unit id="9b8960f32b77e4309090e69ebd8bcf8716bfcb95" translate="yes" xml:space="preserve">
          <source>Writes audio into the stream at the current offset. Returns the number of bytes actually written to the stream.</source>
          <target state="translated">オーディオを現在のオフセットでストリームに書き込みます。実際にストリームに書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="af189bf4e8f78eeda4d7eb768cffb60dedbf06fc" translate="yes" xml:space="preserve">
          <source>Writes bytes from buffer, offset and size determine length of message.</source>
          <target state="translated">バッファからのバイトの書き込み、オフセットとサイズがメッセージの長さを決定します。</target>
        </trans-unit>
        <trans-unit id="894fd94d264b246782aeb91490b3f4931370f6ec" translate="yes" xml:space="preserve">
          <source>Writes text in a document.</source>
          <target state="translated">文書内のテキストを書き込みます。</target>
        </trans-unit>
        <trans-unit id="e63dfb4f590be37465a41f92795c3a28f4596df0" translate="yes" xml:space="preserve">
          <source>Writes text to the system clipboard, returning a &lt;code&gt;Promise&lt;/code&gt; which is resolved once the text is fully copied into the clipboard.</source>
          <target state="translated">テキストをシステムのクリップボードに書き込み、テキストがクリップボードに完全にコピーされると解決される &lt;code&gt;Promise&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="75cb81f5d9005409ce4dbeb3d073ae62b20017a8" translate="yes" xml:space="preserve">
          <source>Writing CSS Animations with the Web Animations API</source>
          <target state="translated">Web Animations API を使って CSS アニメーションを書く</target>
        </trans-unit>
        <trans-unit id="7bd31533c664cad6c1d5c8b4117b72230f799269" translate="yes" xml:space="preserve">
          <source>Writing Web Audio API code that works in every browser</source>
          <target state="translated">すべてのブラウザで動作するWeb Audio APIコードを書く</target>
        </trans-unit>
        <trans-unit id="06265c3a1b120d66a122daab42a58ce9893ce343" translate="yes" xml:space="preserve">
          <source>Writing WebSocket client applications</source>
          <target state="translated">WebSocketクライアントアプリケーションの記述</target>
        </trans-unit>
        <trans-unit id="ec42012e65f141dfe4b612d0198c10447264de4e" translate="yes" xml:space="preserve">
          <source>Writing WebSocket servers</source>
          <target state="translated">WebSocketサーバの記述</target>
        </trans-unit>
        <trans-unit id="c53f56645448ed404ea76f0eb89de92b15cce24b" translate="yes" xml:space="preserve">
          <source>Writing to a document that has already loaded without calling &lt;a href=&quot;open&quot;&gt;&lt;code&gt;document.open()&lt;/code&gt;&lt;/a&gt; will automatically call &lt;code&gt;document.open&lt;/code&gt;. Once you have finished writing, it is recommended to call &lt;a href=&quot;close&quot;&gt;&lt;code&gt;document.close()&lt;/code&gt;&lt;/a&gt; to tell the browser to finish loading the page. The text you write is parsed into the document's structure model. In the example above, the &lt;code&gt;h1&lt;/code&gt; element becomes a node in the document.</source>
          <target state="translated">&lt;a href=&quot;open&quot;&gt; &lt;code&gt;document.open()&lt;/code&gt; &lt;/a&gt;を呼び出さずに既にロードされているドキュメントに書き込むと、自動的に &lt;code&gt;document.open&lt;/code&gt; が呼び出されます。書き込みが完了したら、&lt;a href=&quot;close&quot;&gt; &lt;code&gt;document.close()&lt;/code&gt; &lt;/a&gt;を呼び出して、ページのロードを完了するようブラウザに指示することをお勧めします。書き込んだテキストは、ドキュメントの構造モデルに解析されます。上記の例では、 &lt;code&gt;h1&lt;/code&gt; 要素がドキュメントのノードになります。</target>
        </trans-unit>
        <trans-unit id="45786e1c7f1ba36f6f3fa162ec9adc900dd40a60" translate="yes" xml:space="preserve">
          <source>Writing to the clipboard is available without permission in secure contexts and browser extensions, but only from user-initiated event callbacks. Browser extensions with the &lt;code&gt;&quot;clipboardWrite&quot;&lt;/code&gt; permission can write to the clipboard at any time.</source>
          <target state="translated">クリップボードへの書き込みは、安全なコンテキストとブラウザ拡張機能で許可なしに利用できますが、ユーザーが開始したイベントコールバックからのみ利用できます。 &lt;code&gt;&quot;clipboardWrite&quot;&lt;/code&gt; 権限を持つブラウザ拡張機能は、いつでもクリップボードに書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="c484f501ad8135e8cfa50666eb037c60fb38009d" translate="yes" xml:space="preserve">
          <source>X = Vx * sin(&amp;theta;/2)</source>
          <target state="translated">X = Vx * sin（&amp;theta;/ 2）</target>
        </trans-unit>
        <trans-unit id="1e01cba2f6638d438d27938366658f92af3051eb" translate="yes" xml:space="preserve">
          <source>X1 (back) Mouse</source>
          <target state="translated">X1 (背面)マウス</target>
        </trans-unit>
        <trans-unit id="237d1efafbc3e2759b36d1a298cdc97f81476996" translate="yes" xml:space="preserve">
          <source>X2 (forward) Mouse</source>
          <target state="translated">X2 (前方)マウス</target>
        </trans-unit>
        <trans-unit id="97e0a00fd8dc25a78eb8ea7c949d7d4e9c3f8c40" translate="yes" xml:space="preserve">
          <source>XDomain</source>
          <target state="translated">XDomain</target>
        </trans-unit>
        <trans-unit id="855e3d169b349a14867ed875f329653292225aef" translate="yes" xml:space="preserve">
          <source>XHR</source>
          <target state="translated">XHR</target>
        </trans-unit>
        <trans-unit id="14df91620c76417e3eabf9c3fc67337392f4a971" translate="yes" xml:space="preserve">
          <source>XHR in Android 4.0 sends empty content for &lt;code&gt;FormData&lt;/code&gt; with &lt;code&gt;blob&lt;/code&gt;.</source>
          <target state="translated">Android 4.0のXHRは、 &lt;code&gt;blob&lt;/code&gt; を &lt;code&gt;FormData&lt;/code&gt; してFormDataの空のコンテンツを送信します。</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="f48015ce22da2cb62dc55092e9e541944096e051" translate="yes" xml:space="preserve">
          <source>XML content may use the &lt;code&gt;text/xml&lt;/code&gt; type, but you should ensure that the data value is well-formed XML.</source>
          <target state="translated">XMLコンテンツでは &lt;code&gt;text/xml&lt;/code&gt; タイプを使用できますが、データ値が整形式のXMLであることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="cbfb5e9da4d4e953346b880559ac2756d402c79d" translate="yes" xml:space="preserve">
          <source>XMLHTTPRequest</source>
          <target state="translated">XMLHTTPRequest</target>
        </trans-unit>
        <trans-unit id="1a1dc754a10525066d7d47c74e38c2ea14cb7e3f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest</source>
          <target state="translated">XMLHttpRequest</target>
        </trans-unit>
        <trans-unit id="9c7ac98c5678de235355b246629689d55756876e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest - REST and the Rich User Experience</source>
          <target state="translated">XMLHttpRequest-REST とリッチユーザーエクスペリエンス</target>
        </trans-unit>
        <trans-unit id="d48537600e415d0b70f2c0c7986f879ac4ce3d8f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.HTML in XMLHttpRequest</source>
          <target state="translated">XMLHttpRequestのXMLHttpRequest.HTML</target>
        </trans-unit>
        <trans-unit id="184713aba0b06a3ef26cdf2cb1845a34d124e9c4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.Synchronous and Asynchronous Requests</source>
          <target state="translated">XMLHttpRequest.SynchronousとAsynchronousのリクエスト</target>
        </trans-unit>
        <trans-unit id="58c9e1ac412a8a9fd10ae2678a48305d78262c19" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.Using XMLHttpRequest</source>
          <target state="translated">XMLHttpRequest.Using XMLHttpRequestを使用する</target>
        </trans-unit>
        <trans-unit id="1e13e5f7185280de648b1bba241ab7dd98343fd9" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.abort</source>
          <target state="translated">XMLHttpRequest.abort</target>
        </trans-unit>
        <trans-unit id="8ade0ba8152baaa16000d1e18549499ac95853c1" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.channel</source>
          <target state="translated">XMLHttpRequest.channel</target>
        </trans-unit>
        <trans-unit id="955808f3ce72fee7425e29ce5ea98a4893fb1439" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.channel is an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIChannel&quot;&gt;nsIChannel&lt;/a&gt;&lt;/code&gt; that used by the object when performing the request. This is &lt;code&gt;null&lt;/code&gt; if the channel hasn't been created yet. In the case of a multi-part request, this is the initial channel, not the different parts in the multi-part request. &lt;strong&gt;Requires elevated privileges to access.&lt;/strong&gt;</source>
          <target state="translated">XMLHttpRequest.channelは、リクエストを実行するときにオブジェクトによって使用される &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIChannel&quot;&gt;nsIChannel&lt;/a&gt;&lt;/code&gt; です。チャネルがまだ作成されていない場合、これは &lt;code&gt;null&lt;/code&gt; です。マルチパートリクエストの場合、これは最初のチャネルであり、マルチパートリクエストの異なるパートではありません。&lt;strong&gt;アクセスするには管理者特権が必要です。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4de8f0cc699497a6e084c092f6a12589ab5e0ab1" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.getAllResponseHeaders</source>
          <target state="translated">XMLHttpRequest.getAllResponseHeaders</target>
        </trans-unit>
        <trans-unit id="ec6d6ea9ea7be9bb9fb3e2e596160ae59226845b" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.getResponseHeader</source>
          <target state="translated">XMLHttpRequest.getResponseHeader</target>
        </trans-unit>
        <trans-unit id="6a5ac3629b02948e0cbd31a9d356489be0d62208" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.init()</source>
          <target state="translated">XMLHttpRequest.init()</target>
        </trans-unit>
        <trans-unit id="e11ff8fe84349a0536b8ebea8e77eac02b3005f9" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.onreadystatechange</source>
          <target state="translated">XMLHttpRequest.onreadystatechange</target>
        </trans-unit>
        <trans-unit id="e885975abc209b2f1ced9f1478719dfdb114b4ac" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.open</source>
          <target state="translated">XMLHttpRequest.open</target>
        </trans-unit>
        <trans-unit id="9d89f2fe7c8fdaed4a1559a738c82167bcb1baf7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.openRequest()</source>
          <target state="translated">XMLHttpRequest.openRequest()</target>
        </trans-unit>
        <trans-unit id="403e8e5fd1686f5ac44560f3d25a44ad18d1b426" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.overrideMimeType</source>
          <target state="translated">XMLHttpRequest.overrideMimeType</target>
        </trans-unit>
        <trans-unit id="94e03029629a1a9f2efe6846d4342a49ea5447f7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.readyState</source>
          <target state="translated">XMLHttpRequest.readyState</target>
        </trans-unit>
        <trans-unit id="44aaffbcc2d83cf89c6d27cc6dc61baa7ea0760e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.response</source>
          <target state="translated">XMLHttpRequest.response</target>
        </trans-unit>
        <trans-unit id="e0d968fc57686669b874e373617f99a5a935bef5" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseText</source>
          <target state="translated">XMLHttpRequest.responseText</target>
        </trans-unit>
        <trans-unit id="6a076eabfc4893fca4a5829fff2a9a3ffcb690f5" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseType</source>
          <target state="translated">XMLHttpRequest.responseType</target>
        </trans-unit>
        <trans-unit id="57ceb2818770474b8c62e768fe7f9db2828f2b56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseURL</source>
          <target state="translated">XMLHttpRequest.responseURL</target>
        </trans-unit>
        <trans-unit id="8a1fae050423115e14607649d39e0caf9994a103" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseXML</source>
          <target state="translated">XMLHttpRequest.responseXML</target>
        </trans-unit>
        <trans-unit id="dd18743e28f021ed90fe5737b195efda13dc49ee" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.send</source>
          <target state="translated">XMLHttpRequest.send</target>
        </trans-unit>
        <trans-unit id="786937ed1c59de4db64b2a8f1a989c907ba3f1e6" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.sendAsBinary</source>
          <target state="translated">XMLHttpRequest.sendAsBinary</target>
        </trans-unit>
        <trans-unit id="24cf61a93bec456d364b4b240abe412fdea1243f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.setRequestHeader</source>
          <target state="translated">XMLHttpRequest.setRequestHeader</target>
        </trans-unit>
        <trans-unit id="4e6e73c0f575d9568da304e1e26216f373c2661d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.status</source>
          <target state="translated">XMLHttpRequest.status</target>
        </trans-unit>
        <trans-unit id="b5e4dd6c7e3d308c66492ffaa4033d54e5888852" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.statusText</source>
          <target state="translated">XMLHttpRequest.statusText</target>
        </trans-unit>
        <trans-unit id="f74cae9e57479e3b5b01d1766334502a7000f9b4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.timeout</source>
          <target state="translated">XMLHttpRequest.timeout</target>
        </trans-unit>
        <trans-unit id="49a6b171f9a873d7d116fe84d4fbbe8e5c47060d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.upload</source>
          <target state="translated">XMLHttpRequest.upload</target>
        </trans-unit>
        <trans-unit id="214c23a08b508fd38d9a8fc0b37887dddf4af9a2" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.withCredentials</source>
          <target state="translated">XMLHttpRequest.withCredentials</target>
        </trans-unit>
        <trans-unit id="ccf8e117681d1c793356c31e43954acaa6ce763c" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'FormData' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「FormData」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="06bed2935ea9c83774e80c0c4d963f4510deb2aa" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'FormData()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「FormData（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="04915acea4987c520a855ad2669ad1e35685549a" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「ProgressEvent」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="51823600eabe9d6b97e3b2b44f3c1e72b5d54310" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「ProgressEvent（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8009260d7b46da5f9bd22c4640eb0811d6eea516" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent.lengthComputable' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「ProgressEvent.lengthComputable」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="96dc0453da94420f5252f412f1bb7289ce263d1e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent.loaded' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「ProgressEvent.loaded」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="066eb04c6dc5060c5872b13c1bb106cc4ec3c30e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'append()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「append（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="62024f985656319fc5fa5c6b4a90e2e6f4f1add7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「delete（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a48b46505ed029c2e8e8e599ccfc79da33a7b63d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'entries() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様での「entries（）（iterator &amp;lt;&amp;gt;として）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3168bb2ef5c76fdb186ec2740ebc8d050d28f56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「get（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0ca5a5bcb9567c368c17013d7709c3380e4fdb56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getAll()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「getAll（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c18e2f3e7590238f353d1b0ecc696f14aec417a7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getAllResponseHeaders()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「getAllResponseHeaders（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="73e3c1f62d7a54c9d8311a5cfc5fd3c39b922d79" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getResponseHeader()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「getResponseHeader（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2c4423ae14ed9c228fd680312ae0b3cfe9236db4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'has()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「has（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5eb37963c2b4753cb22b727155bf47faaf35b9fd" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'keys() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における 'keys（）（as iterator &amp;lt;&amp;gt;）'の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6869b7325a237345873ef1b84f078ca584309108" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'open()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「open（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="76f703ee004aa1470cabe4046e7ef59976e9b664" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'overrideMimeType()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「overrideMimeType（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c7f70bab78a0e2d17a0dd645e11c66a2343486db" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'responseXML' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「responseXML」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3189816b7f8d0b211f75059468951dcf7ab94de8" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'send()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「send（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b2ba2f9c1f6a6b797b8de44721d36a9368ecef7e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'set()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「set（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d54d9851eead5fe435a1bd3bff4f9a4419d0356c" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'setRequestHeader()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「setRequestHeader（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dfb8a510c93e45a85ad3387602a07e471c36377d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'values() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様での 'values（）（as iterator &amp;lt;&amp;gt;）'の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9b68e15e4875c1705acf2dcd068ce37e8fbd2212" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget</source>
          <target state="translated">XMLHttpRequestEventTarget</target>
        </trans-unit>
        <trans-unit id="ef5784b83727e814badf283144796dcf41a3b5d2" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onabort</source>
          <target state="translated">XMLHttpRequestEventTarget.onabort</target>
        </trans-unit>
        <trans-unit id="92a8e777a4ed2873052a3c63cffb8fb82dd07a56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onerror</source>
          <target state="translated">XMLHttpRequestEventTarget.onerror</target>
        </trans-unit>
        <trans-unit id="1f12987f2230f3f6d0a4a519754bdb20baa514ed" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onload</source>
          <target state="translated">XMLHttpRequestEventTarget.onload</target>
        </trans-unit>
        <trans-unit id="b81824430492121422a2a45bc7e0c4b5cfd04ad6" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onloadstart</source>
          <target state="translated">XMLHttpRequestEventTarget.onloadstart</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
