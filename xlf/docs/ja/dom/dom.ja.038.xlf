<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="933dce785b043ca243c006a08842ae98e2bfc54a" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;interimResults&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;interimResults&lt;/code&gt; のデフォルト値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b912f301a5bbc2631003011d3cc00780acd67579" translate="yes" xml:space="preserve">
          <source>The default value for gain is 1; this keeps the current volume the same. Gain can be set to a minimum of about -3.4 and a max of about 3.4. Here we'll allow the boombox to move the gain up to 2 (double the original volume) and down to 0 (this will effectively mute our sound).</source>
          <target state="translated">ゲインのデフォルト値は 1 です。ゲインの最小値は約 -3.4、最大値は約 3.4 です。ここでは、ラジカセのゲインを 2(元の音量の 2 倍)に、0(0)に移動させます(これは効果的に音をミュートします)。</target>
        </trans-unit>
        <trans-unit id="750c418c522ac704dd457b72492d4e27261a09ed" translate="yes" xml:space="preserve">
          <source>The default value is 0.</source>
          <target state="translated">デフォルト値は0です。</target>
        </trans-unit>
        <trans-unit id="ad6c9ad86a5d8173b84c871422669785d6da13f4" translate="yes" xml:space="preserve">
          <source>The default value is 1.</source>
          <target state="translated">デフォルト値は1です。</target>
        </trans-unit>
        <trans-unit id="f2268ba18757fce3e451b5925d0b82813fcc9cb6" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;&quot;alphabetic&quot;&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;&quot;alphabetic&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c05d275b2ec59bd93303bcad11d4fb992340f741" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;&quot;inherit&quot;&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;&quot;inherit&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="39d5b693f8a823ad954238c2462b4a9837edacfc" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;&quot;start&quot;&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;&quot;start&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cbd606e7d9c64db86d0a04af873213380c3442cd" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;null&lt;/code&gt;, indicating that no additional details are available.</source>
          <target state="translated">デフォルト値は &lt;code&gt;null&lt;/code&gt; であり、追加の詳細情報がないことを示します。</target>
        </trans-unit>
        <trans-unit id="b359dc601c36a18fc6150b92e31fc55190cfceb4" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;vec4(0.0, 0.0, 0.0, 1.0)&lt;/code&gt; by default but we can specify a different default value with &lt;code&gt;&lt;a href=&quot;vertexattrib&quot;&gt;&lt;code&gt;gl.vertexAttrib[1234]f[v]()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">デフォルト値はデフォルトで &lt;code&gt;vec4(0.0, 0.0, 0.0, 1.0)&lt;/code&gt; ですが、 &lt;code&gt;&lt;a href=&quot;vertexattrib&quot;&gt;&lt;code&gt;gl.vertexAttrib[1234]f[v]()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 別のデフォルト値を指定できます。</target>
        </trans-unit>
        <trans-unit id="ee87e5c57c0056880ccf5a54522cd23032b0b77e" translate="yes" xml:space="preserve">
          <source>The default value is the empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は空の文字列 &lt;code&gt;&quot;&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="065cc37cecd779670f71ec3376963bbcfd5df213" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;appendWindowEnd&lt;/code&gt; is positive infinity.</source>
          <target state="translated">&lt;code&gt;appendWindowEnd&lt;/code&gt; のデフォルト値は正の無限大です。</target>
        </trans-unit>
        <trans-unit id="6763618c40169add87de556a07797e1f99af7696" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;appendWindowStart&lt;/code&gt; is the presentation start time, which is the beginning time of the playable media.</source>
          <target state="translated">&lt;code&gt;appendWindowStart&lt;/code&gt; のデフォルト値はプレゼンテーションの開始時間で、これは再生可能なメディアの開始時間です。</target>
        </trans-unit>
        <trans-unit id="94cda586e818d962065324054e646bb23fedabde" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;maxValue&lt;/code&gt; is the maximum positive single-precision floating-point value (+340,282,346,638,528,859,811,704,183,484,516,925,440).</source>
          <target state="translated">&lt;code&gt;maxValue&lt;/code&gt; のデフォルト値は、正の最大単精度浮動小数点値（+340,282,346,638,528,859,811,704,183,484,516,925,440）です。</target>
        </trans-unit>
        <trans-unit id="8d86eacf5846cfa607c52f5255004d3db8fc1258" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;minValue&lt;/code&gt; is the minimum negative single-precision floating-point value (-340,282,346,638,528,859,811,704,183,484,516,925,440), and the default value of &lt;code&gt;maxValue&lt;/code&gt; is the maximum positive single-precision floating-point value (+340,282,346,638,528,859,811,704,183,484,516,925,440).</source>
          <target state="translated">&lt;code&gt;minValue&lt;/code&gt; のデフォルト値は最小の負の単精度浮動小数点値（-340,282,346,638,528,859,811,704,183,484,516,925,440）であり、 &lt;code&gt;maxValue&lt;/code&gt; のデフォルト値は最大の正の単精度浮動小数点値（+340,282,346,638,528,859,811,704,183,484,516,925,440）です。</target>
        </trans-unit>
        <trans-unit id="98bf7c9245fbed8579b5e4f1daffa4c4fe02a167" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;minValue&lt;/code&gt; is the minimum negative single-precision floating-point value (-340,282,346,638,528,859,811,704,183,484,516,925,440).</source>
          <target state="translated">&lt;code&gt;minValue&lt;/code&gt; のデフォルト値は、最小の負の単精度浮動小数点値（-340,282,346,638,528,859,811,704,183,484,516,925,440）です。</target>
        </trans-unit>
        <trans-unit id="08942b051ab57c6e635a0411372620fad2299b6f" translate="yes" xml:space="preserve">
          <source>The default value of the position vector is &lt;code&gt;(0,&lt;/code&gt;&lt;code&gt;0,&lt;/code&gt;&lt;code&gt;0)&lt;/code&gt;.</source>
          <target state="translated">位置ベクトルのデフォルト値は &lt;code&gt;(0,&lt;/code&gt; &lt;code&gt;0,&lt;/code&gt; &lt;code&gt;0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d209c571b196da83aeafa72352c7b933f0a3b541" translate="yes" xml:space="preserve">
          <source>The default value when the effect has not been set, equivalent to all.</source>
          <target state="translated">効果が設定されていない場合のデフォルト値で、全ての効果に相当します。</target>
        </trans-unit>
        <trans-unit id="dc5151a2aa41524525b0b025a5761ab4baf2d29c" translate="yes" xml:space="preserve">
          <source>The default values for these properties will differ slightly by VR hardware, although they tend to be around 53&amp;deg; up and down, and 47&amp;deg; left and right, with zNear and zFar coming in at around 0.1m and 10000m respectively.</source>
          <target state="translated">これらのプロパティのデフォルト値は、VRハードウェアによってわずかに異なりますが、zNearとzFarがそれぞれ約0.1mと10000mで、上下に約53&amp;deg;、左右に47&amp;deg;になる傾向があります。</target>
        </trans-unit>
        <trans-unit id="1bd923aa6f52c36303f56ec79079058d511f458f" translate="yes" xml:space="preserve">
          <source>The degree of intersection between the target element and its root is the &lt;strong&gt;intersection ratio&lt;/strong&gt;. This is a representation of the percentage of the target element which is visible as a value between 0.0 and 1.0.</source>
          <target state="translated">ターゲット要素とそのルートの間の交差の度合いが&lt;strong&gt;交差比率&lt;/strong&gt;です。これは、0.0と1.0の間の値として表示されるターゲット要素のパーセンテージの表現です。</target>
        </trans-unit>
        <trans-unit id="c0d8a1aed54585a7063e1958f05b21cb44c116d9" translate="yes" xml:space="preserve">
          <source>The delta values are specified in lines.</source>
          <target state="translated">デルタ値は行で指定します。</target>
        </trans-unit>
        <trans-unit id="927ddf0d6bcd9d720c1a9b3ea1a53fcb19dc85dd" translate="yes" xml:space="preserve">
          <source>The delta values are specified in pages.</source>
          <target state="translated">デルタ値はページで指定されています。</target>
        </trans-unit>
        <trans-unit id="7930b50f825452a3f26d0dd0bdac0ce651bb539a" translate="yes" xml:space="preserve">
          <source>The delta values are specified in pixels.</source>
          <target state="translated">デルタ値はピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="b9d04931eb57e4e9b68345b5df4ff7bd4684326c" translate="yes" xml:space="preserve">
          <source>The dependent feature is currently under revision to be removed (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=214867&quot;&gt;bug 214867&lt;/a&gt;)</source>
          <target state="translated">依存関係のある機能は現在改訂中で、削除される予定です（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=214867&quot;&gt;バグ214867&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3d9acc65fafe02c34a460af6d5498d7aa363e5e5" translate="yes" xml:space="preserve">
          <source>The deprecated (and never part of the official specification) read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/code&gt; returns an ID number (between 0 and 65,535) which uniquely identifies the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;. This ID is set at the time the data channel is created, either by the user agent (if &lt;a href=&quot;negotiated&quot;&gt;&lt;code&gt;RTCDataChannel.negotiated&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;) or by the site or app script (if &lt;code&gt;negotiated&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">非推奨の（公式仕様の一部ではない）読み取り専用 &lt;code&gt;RTCDataChannel&lt;/code&gt; プロパティ &lt;code&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/code&gt; は、&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;を一意に識別するID番号（0〜65,535）を返します。このIDは、データチャネルの作成時に、ユーザーエージェント（&lt;a href=&quot;negotiated&quot;&gt; &lt;code&gt;RTCDataChannel.negotiated&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;false&lt;/code&gt; の場合）またはサイトまたはアプリのスクリプト（ &lt;code&gt;negotiated&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合）によって設定されます。</target>
        </trans-unit>
        <trans-unit id="eb9855febbb203a8bb04753026f933a2b3e4ffbd" translate="yes" xml:space="preserve">
          <source>The deprecated (and never part of the official specification) read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/code&gt; returns an ID number (between 0 and 65,535) which uniquely identifies the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非推奨の（公式仕様の一部ではない）読み取り専用 &lt;code&gt;RTCDataChannel&lt;/code&gt; プロパティ &lt;code&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/code&gt; は、&lt;a href=&quot;rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;を一意に識別するID番号（0〜65,535）を返します。</target>
        </trans-unit>
        <trans-unit id="8f4108f70334f5ce69da8fc05802f66fdafa886c" translate="yes" xml:space="preserve">
          <source>The deprecated &lt;a href=&quot;../blobbuilder&quot;&gt;&lt;code&gt;BlobBuilder&lt;/code&gt;&lt;/a&gt; which this constructor replaces.</source>
          <target state="translated">このコンストラクターが置き換える非推奨の&lt;a href=&quot;../blobbuilder&quot;&gt; &lt;code&gt;BlobBuilder&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ce83baf8edb87e8ec6f56628860b0ea566f03b4" translate="yes" xml:space="preserve">
          <source>The depth testing is disabled by default. To enable or disable depth testing, use the &lt;a href=&quot;enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;disable&quot;&gt;&lt;code&gt;disable()&lt;/code&gt;&lt;/a&gt; methods with the argument &lt;code&gt;gl.DEPTH_TEST&lt;/code&gt;.</source>
          <target state="translated">デプステストはデフォルトで無効になっています。深度テストを有効または無効にするには、引数 &lt;code&gt;gl.DEPTH_TEST&lt;/code&gt; を指定して&lt;a href=&quot;enable&quot;&gt; &lt;code&gt;enable()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;disable&quot;&gt; &lt;code&gt;disable()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="54fefc2cd758c1fa84f84e7500d77077dee1fd1e" translate="yes" xml:space="preserve">
          <source>The description for the database.</source>
          <target state="translated">データベースの説明。</target>
        </trans-unit>
        <trans-unit id="96357666ba5d23345884aad9033f4a52b02be802" translate="yes" xml:space="preserve">
          <source>The desired sample rate for the &lt;code&gt;AudioContext&lt;/code&gt;, specified in samples per second. The value must be compatible with &lt;a href=&quot;../audiobuffer/samplerate&quot;&gt;&lt;code&gt;AudioBuffer.sampleRate&lt;/code&gt;&lt;/a&gt;. This value should typically be between 8,000 Hz and 96,000 Hz; the default will vary depending on the output device, but the sample rate 44,100 Hz is the most common.</source>
          <target state="translated">1秒あたりのサンプル数で指定される、 &lt;code&gt;AudioContext&lt;/code&gt; の目的のサンプルレート。値は&lt;a href=&quot;../audiobuffer/samplerate&quot;&gt; &lt;code&gt;AudioBuffer.sampleRate&lt;/code&gt; &lt;/a&gt;と互換性がある必要があります。通常、この値は8,000 Hzから96,000 Hzの間でなければなりません。デフォルトは出力デバイスによって異なりますが、サンプルレート44,100 Hzが最も一般的です。</target>
        </trans-unit>
        <trans-unit id="d37c4a2abdadfea85d743b512db3c6d26bcb6169" translate="yes" xml:space="preserve">
          <source>The desired subtree is located by finding an element with the ID &quot;someElement&quot;. A set of options for the observer is also established in the &lt;code&gt;observerOptions&lt;/code&gt; record. In it, we specify values of &lt;code&gt;true&lt;/code&gt; for both &lt;code&gt;childList&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt;, so we get the information we want.</source>
          <target state="translated">目的のサブツリーは、ID &quot;someElement&quot;の要素を検索することで見つかります。オブザーバーのオプションのセットは、 &lt;code&gt;observerOptions&lt;/code&gt; レコードにも設定されます。その中で、 &lt;code&gt;childList&lt;/code&gt; と &lt;code&gt;attributes&lt;/code&gt; の両方に &lt;code&gt;true&lt;/code&gt; の値を指定しているので、必要な情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="e84db4c70642021b976272b8acd7797028a3001f" translate="yes" xml:space="preserve">
          <source>The destination node is not part of the same audio context as the source node.</source>
          <target state="translated">宛先ノードは、ソースノードと同じオーディオコンテキストの一部ではありません。</target>
        </trans-unit>
        <trans-unit id="bc54a67155ab62dac9044264330e7b3c27bddcf9" translate="yes" xml:space="preserve">
          <source>The developer-defined identifier for this &lt;code&gt;SyncEvent&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;SyncEvent&lt;/code&gt; の開発者定義の識別子。</target>
        </trans-unit>
        <trans-unit id="9eeebf89ba90b43f3839ab3a37b36c359fd0a883" translate="yes" xml:space="preserve">
          <source>The device-specific index of the currently-claimed interface.</source>
          <target state="translated">現在要求されているインタフェースのデバイス固有のインデックス。</target>
        </trans-unit>
        <trans-unit id="4ca6fd89e4c223f77cf2a8c91044bd8bf4e7df99" translate="yes" xml:space="preserve">
          <source>The diagram below shows how this works; an input value, &lt;code&gt;N&lt;/code&gt;, is set as the value of the &lt;a href=&quot;../constantsourcenode/offset&quot;&gt;&lt;code&gt;ConstantSourceNode.offset&lt;/code&gt;&lt;/a&gt; property. The &lt;code&gt;ConstantSourceNode&lt;/code&gt; can have as many outputs as necessary; in this case, we've connected it to three nodes: two &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;s and a &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt;. So &lt;code&gt;N&lt;/code&gt; becomes the value of the specified parameter (&lt;a href=&quot;../gainnode/gain&quot;&gt;&lt;code&gt;gain&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;s and pan for the &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下の図は、これがどのように機能するかを示しています。入力値 &lt;code&gt;N&lt;/code&gt; は、&lt;a href=&quot;../constantsourcenode/offset&quot;&gt; &lt;code&gt;ConstantSourceNode.offset&lt;/code&gt; &lt;/a&gt;プロパティの値として設定されます。 &lt;code&gt;ConstantSourceNode&lt;/code&gt; は、必要な数の出力を持つことができます。2：このケースでは、我々は3つのノードにそれを接続した&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt; sおよび&lt;a href=&quot;../stereopannernode&quot;&gt; &lt;code&gt;StereoPannerNode&lt;/code&gt; &lt;/a&gt;。したがって、 &lt;code&gt;N&lt;/code&gt; は指定されたパラメーターの値になります（&lt;a href=&quot;../gainnode/gain&quot;&gt; &lt;code&gt;gain&lt;/code&gt; &lt;/a&gt;のため&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt; Sとのパン&lt;a href=&quot;../stereopannernode&quot;&gt; &lt;code&gt;StereoPannerNode&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a48150c1d7914c664a8364a0cde7487e6e02777" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;set&quot;&gt;&lt;code&gt;FormData.set&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;append()&lt;/code&gt; is that if the specified key already exists, &lt;a href=&quot;set&quot;&gt;&lt;code&gt;FormData.set&lt;/code&gt;&lt;/a&gt; will overwrite all existing values with the new one, whereas &lt;code&gt;append()&lt;/code&gt; will append the new value onto the end of the existing set of values.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;FormData.set&lt;/code&gt; &lt;/a&gt;の違いと &lt;code&gt;append()&lt;/code&gt; 、指定されたキーが既に存在する場合、&lt;a href=&quot;set&quot;&gt; &lt;code&gt;FormData.set&lt;/code&gt; &lt;/a&gt;はすべての既存の値を新しい値で上書きしますが、 &lt;code&gt;append()&lt;/code&gt; は新しい値を既存の値のセットの最後に追加します。 。</target>
        </trans-unit>
        <trans-unit id="3b47f59354ed1cc1cc4b6c5d0acd76fc23ea29fa" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Headers.set&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;append()&lt;/code&gt; is that if the specified header already exists and accepts multiple values, &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Headers.set&lt;/code&gt;&lt;/a&gt; will overwrite the existing value with the new one, whereas &lt;code&gt;append()&lt;/code&gt; will append the new value onto the end of the set of values.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Headers.set&lt;/code&gt; &lt;/a&gt;との違い &lt;code&gt;append()&lt;/code&gt; 、指定されたヘッダーが既に存在し、複数の値を受け入れる場合、&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Headers.set&lt;/code&gt; &lt;/a&gt;は既存の値を新しい値で上書きするのに対し、 &lt;code&gt;append()&lt;/code&gt; は新しい値を値のセット。</target>
        </trans-unit>
        <trans-unit id="72af720be29d1fe39fab72cff2dbe7eabbb192a1" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;set()&lt;/code&gt; and &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt; is that if the specified key does already exist, &lt;code&gt;set()&lt;/code&gt; will overwrite all existing values with the new one, whereas &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt; will append the new value onto the end of the existing set of values.</source>
          <target state="translated">差 &lt;code&gt;set()&lt;/code&gt; と&lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; &lt;/a&gt;、指定されたキーが既に存在しない場合、すなわち &lt;code&gt;set()&lt;/code&gt; に対し、新しいものにすべての既存の値を上書きする&lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; は、&lt;/a&gt;既存のセットの最後に新しい値を追加します値。</target>
        </trans-unit>
        <trans-unit id="4115e568023227c1974dad2ab8b668737a50fdfd" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;set()&lt;/code&gt; and &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt; is that if the specified header already exists and accepts multiple values, &lt;code&gt;set()&lt;/code&gt; overwrites the existing value with the new one, whereas &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt; appends the new value to the end of the set of values.</source>
          <target state="translated">差 &lt;code&gt;set()&lt;/code&gt; と&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt;指定されたヘッダが既に存在し、複数の値を受け入れる場合、ということである &lt;code&gt;set()&lt;/code&gt; に対し、新しいものと既存の値を上書き&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; が&lt;/a&gt;セットの末尾に新しい値を追加します値。</target>
        </trans-unit>
        <trans-unit id="369cc70618862397f2c59dfcdfbedd0115c5c9f8" translate="yes" xml:space="preserve">
          <source>The difference between these can best be described using the image on the right. A quadratic B&amp;eacute;zier curve has a start and an end point (blue dots) and just one &lt;strong&gt;control point&lt;/strong&gt; (indicated by the red dot) while a cubic B&amp;eacute;zier curve uses two control points.</source>
          <target state="translated">これらの違いは、右の画像を使用して最もよく説明できます。2次ベジエ曲線には2つの制御点が使用されますが、2次ベジエ曲線には開始点と終了点（青い点）と1つの&lt;strong&gt;制御点&lt;/strong&gt;（赤い点で示される）があります。</target>
        </trans-unit>
        <trans-unit id="8dabd892711f4a0c0b9a61364b3f35b706c54d31" translate="yes" xml:space="preserve">
          <source>The difference is that when close is called, any previously enqueued chunks are written and finished with before the stream is closed.</source>
          <target state="translated">違いは、close が呼び出されたときに、以前にエンキューされたチャンクがすべて書き込まれ、ストリームが閉じられる前に終了することです。</target>
        </trans-unit>
        <trans-unit id="bf21b6dec33c78a626e94c05893de32d81d91102" translate="yes" xml:space="preserve">
          <source>The digits 0-9</source>
          <target state="translated">数字の0~9</target>
        </trans-unit>
        <trans-unit id="7d15e4d4459a52e8eb9c4e961fea8a1356256348" translate="yes" xml:space="preserve">
          <source>The directory and/or its contents may not be safe to access from a Web application.</source>
          <target state="translated">ディレクトリやその内容は、Webアプリケーションからのアクセスが安全ではない場合があります。</target>
        </trans-unit>
        <trans-unit id="03af1990a2cd1675a38597e00bc093d378aa25ae" translate="yes" xml:space="preserve">
          <source>The directory could not be removed for security reasons. Possible reasons include:</source>
          <target state="translated">セキュリティ上の理由でディレクトリを削除できませんでした。考えられる理由は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7e5b4dd17df3f66abf7cac3e3000cadae315f097" translate="yes" xml:space="preserve">
          <source>The directory is not accessible; perhaps it's in use by another application or is locked at the operating system level.</source>
          <target state="translated">そのディレクトリにはアクセスできません。おそらく、別のアプリケーションが使用しているか、オペレーティングシステムレベルでロックされているのでしょう。</target>
        </trans-unit>
        <trans-unit id="2581231a1f550a1adb94b3530990d20d03277e50" translate="yes" xml:space="preserve">
          <source>The directory represented by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; no longer exists.</source>
          <target state="translated">によって表されるディレクトリ &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt; で&lt;/a&gt;存在しません。</target>
        </trans-unit>
        <trans-unit id="9331ca3a8a59cb4899781eca75c7ca1914a1b5c5" translate="yes" xml:space="preserve">
          <source>The disconnected state</source>
          <target state="translated">切断された状態</target>
        </trans-unit>
        <trans-unit id="cb2c251d64a14d95703ae11a936de5a7d7dbf217" translate="yes" xml:space="preserve">
          <source>The disk or quota limit has been reached.</source>
          <target state="translated">ディスクまたはクォータの制限に達しました。</target>
        </trans-unit>
        <trans-unit id="33551bc2201d7496ab062237c73ae61e0d81eddf" translate="yes" xml:space="preserve">
          <source>The dispatched &lt;code&gt;hashchange&lt;/code&gt; event has the following fields:</source>
          <target state="translated">ディスパッチされた &lt;code&gt;hashchange&lt;/code&gt; イベントには、次のフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="9c793bd9015083bd55061a660dc4c6b60a06e30e" translate="yes" xml:space="preserve">
          <source>The dispatched event</source>
          <target state="translated">派遣されたイベント</target>
        </trans-unit>
        <trans-unit id="93fece427eb94d9310d0bbea9b41f7637f2d5332" translate="yes" xml:space="preserve">
          <source>The distance from the eyes of the farthest point of the view. The furthest away things can be and still be in the view. If not specified, the default is used &amp;mdash; &lt;code&gt;10000.0&lt;/code&gt;.</source>
          <target state="translated">ビューの最も遠いポイントの目からの距離。最も遠くにあるものを表示することができます。指定しない場合、デフォルトの &lt;code&gt;10000.0&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="1b8231a59a601000ceb0e5eaaf80f5090800c8b9" translate="yes" xml:space="preserve">
          <source>The distance from the eyes of the nearest point of the view. The closest things can be and still be in the view. If not specified, the default is used &amp;mdash; &lt;code&gt;0.01&lt;/code&gt;.</source>
          <target state="translated">ビューの最も近いポイントの目からの距離。最も近いものは表示されたままである可​​能性があります。指定しない場合、デフォルトが使用されます&amp;mdash; &lt;code&gt;0.01&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83aa59484c3af523a7be00d766fb07a503b2eedf" translate="yes" xml:space="preserve">
          <source>The document and all sub-resources have finished loading. The state indicates that the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event is about to fire.</source>
          <target state="translated">ドキュメントとすべてのサブリソースの読み込みが完了しました。状態は、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントが発生しようとします。</target>
        </trans-unit>
        <trans-unit id="034ff8f4b53af08bb2a0e6596c027c8329f51f63" translate="yes" xml:space="preserve">
          <source>The document containing the element isn't fully active; that is, it's not the current active document.</source>
          <target state="translated">その要素を含む文書は完全にアクティブではありません。</target>
        </trans-unit>
        <trans-unit id="88c65a03e1d9f8218671d8636bbe4289709f7fc9" translate="yes" xml:space="preserve">
          <source>The document content</source>
          <target state="translated">ドキュメントの内容</target>
        </trans-unit>
        <trans-unit id="85f2a78b4555499118caae8742ac93dd934f82fc" translate="yes" xml:space="preserve">
          <source>The document has finished loading and the document has been parsed but sub-resources such as images, stylesheets and frames are still loading.</source>
          <target state="translated">ドキュメントの読み込みが終了し、ドキュメントは解析されましたが、画像、スタイルシート、フレームなどのサブリソースはまだ読み込み中です。</target>
        </trans-unit>
        <trans-unit id="56385fa6dffb5ff4dd8d06888f4412b7bae8ddb1" translate="yes" xml:space="preserve">
          <source>The document in which the payment request is taking place became inactive while the user interface was shown.</source>
          <target state="translated">ユーザーインターフェースが表示されている間、支払い要求が行われているドキュメントが非アクティブになりました。</target>
        </trans-unit>
        <trans-unit id="171c6717e8f0310a3fb5cb57857ec159d2d89b0e" translate="yes" xml:space="preserve">
          <source>The document object's &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-active-sandboxing-flag-set&quot;&gt;active sandboxing flag set&lt;/a&gt; has the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#sandboxed-presentation-browsing-context-flag&quot;&gt;sandboxed presentation browsing context flag&lt;/a&gt; set.</source>
          <target state="translated">ドキュメントオブジェクトの&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-active-sandboxing-flag-set&quot;&gt;アクティブなサンドボックスフラグセット&lt;/a&gt;は、&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#sandboxed-presentation-browsing-context-flag&quot;&gt;サンドボックス化されたプレゼンテーションブラウジングコンテキストフラグ&lt;/a&gt;セットがあります。</target>
        </trans-unit>
        <trans-unit id="98ed1f6d85ca9d2e6d5aab46590739d48043247c" translate="yes" xml:space="preserve">
          <source>The document text, in the default style, is rendered as the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.</source>
          <target state="translated">文書テキストは、デフォルトのスタイルでは、クライアントのブラウザがサポートする最初のフォント面としてレンダリングされます。挙げられたフォントがローカルシステムにインストールされていない場合、ブラウザは通常、そのシステム用のプロポーショナルフォントか固定幅フォントをデフォルトとします。</target>
        </trans-unit>
        <trans-unit id="1a10ab96a0a1077cfd7ee9a8723eff3260f87ac0" translate="yes" xml:space="preserve">
          <source>The document's address.</source>
          <target state="translated">ドキュメントのアドレスです。</target>
        </trans-unit>
        <trans-unit id="798c2b9d9500fee1da194e6939d974012e5ad1b8" translate="yes" xml:space="preserve">
          <source>The domain portion of the current document's origin.</source>
          <target state="translated">現在のドキュメントの原点のドメイン部分。</target>
        </trans-unit>
        <trans-unit id="288f488b5bdf835f17adcd697075c1c9eefd5b4b" translate="yes" xml:space="preserve">
          <source>The drag data item's string data.</source>
          <target state="translated">ドラッグデータ項目の文字列データ。</target>
        </trans-unit>
        <trans-unit id="a013c066ba69320c4e342d8ec6ae150d0f0b6fae" translate="yes" xml:space="preserve">
          <source>The drag data item's type, typically a MIME type.</source>
          <target state="translated">ドラッグデータ項目のタイプ、通常はMIMEタイプ。</target>
        </trans-unit>
        <trans-unit id="1b34b2feb8735721b67afbb41abaabb3b63c4c54" translate="yes" xml:space="preserve">
          <source>The drag data store in which this list is kept is only writable while handling the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event. While handling &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;, the drag data store is in read-only mode, and this method silently does nothing. No exception is thrown.</source>
          <target state="translated">このリストが保持されるドラッグデータストアは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベントを処理している間のみ書き込み可能です。取り扱い中 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 、ドラッグデータストアは読み取り専用モードであり、このメソッドは何も通知せずに何もしません。例外はスローされません。</target>
        </trans-unit>
        <trans-unit id="fda22035918e10aad48a3b4e5d97020dffd65cf0" translate="yes" xml:space="preserve">
          <source>The drag data store is not in read/write mode, so the item can't be removed.</source>
          <target state="translated">ドラッグデータストアは読み書きモードではないので、アイテムを削除することはできません。</target>
        </trans-unit>
        <trans-unit id="a69fd93edaf850f7dcf0eb001a2435bce14623a8" translate="yes" xml:space="preserve">
          <source>The drag operations described in this document use the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; interface. This document does &lt;em&gt;not&lt;/em&gt; use the &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; interface nor the &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このドキュメントで説明するドラッグ操作は、&lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt;インターフェースを使用します。このドキュメントでは、&lt;a href=&quot;../datatransferitem&quot;&gt; &lt;code&gt;DataTransferItem&lt;/code&gt; &lt;/a&gt;インターフェイスも使用しませ&lt;em&gt;ん&lt;/em&gt;&lt;a href=&quot;../datatransferitemlist&quot;&gt; &lt;code&gt;DataTransferItemList&lt;/code&gt; の&lt;/a&gt;インターフェイスを。</target>
        </trans-unit>
        <trans-unit id="6e99b41ccb13271a4d79bc649bd34a2ad83b1836" translate="yes" xml:space="preserve">
          <source>The drag processing described in this document use the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; interface. This processing does &lt;em&gt;not&lt;/em&gt; use the &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; interface nor the &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このドキュメントで説明するドラッグ処理では、&lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt;インターフェイスを使用します。この処理はない&lt;em&gt;ない&lt;/em&gt;使用&lt;a href=&quot;../datatransferitem&quot;&gt; &lt;code&gt;DataTransferItem&lt;/code&gt; の&lt;/a&gt;インタフェースも&lt;a href=&quot;../datatransferitemlist&quot;&gt; &lt;code&gt;DataTransferItemList&lt;/code&gt; の&lt;/a&gt;インターフェイスを。</target>
        </trans-unit>
        <trans-unit id="1aa3e29e6d2814254066e60adeb061224f4ecc51" translate="yes" xml:space="preserve">
          <source>The drawing state</source>
          <target state="translated">描画状態</target>
        </trans-unit>
        <trans-unit id="391db4f15b425b6c30383c8bc11d64a129259529" translate="yes" xml:space="preserve">
          <source>The drawing state that gets saved onto a stack consists of:</source>
          <target state="translated">スタックに保存される描画状態は、以下のように構成されています。</target>
        </trans-unit>
        <trans-unit id="1debe0692dc840ab083bf2aa1799e34a607d3d53" translate="yes" xml:space="preserve">
          <source>The duplicate node returned by &lt;code&gt;cloneNode()&lt;/code&gt; is not part of the document until it is added to another node that is part of the document using &lt;a href=&quot;appendchild&quot;&gt;&lt;code&gt;Node.appendChild()&lt;/code&gt;&lt;/a&gt; or a similar method. It also has no parent until it is appended to another node.</source>
          <target state="translated">&lt;code&gt;cloneNode()&lt;/code&gt; によって返された複製ノードは、&lt;a href=&quot;appendchild&quot;&gt; &lt;code&gt;Node.appendChild()&lt;/code&gt; &lt;/a&gt;または同様のメソッドを使用してドキュメントの一部である別のノードに追加されるまで、ドキュメントの一部ではありません。また、別のノードに追加されるまで、親はありません。</target>
        </trans-unit>
        <trans-unit id="99986d15171171f818ff13b7d0db73d6e060c63e" translate="yes" xml:space="preserve">
          <source>The duration of the sound to be played, specified in seconds. If this parameter isn't specified, the sound plays until it reaches its natural conclusion or is stopped using the &lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; method. Using this parameter is functionally identical to calling &lt;code&gt;start(when, offset)&lt;/code&gt; and then calling &lt;code&gt;stop(when+duration)&lt;/code&gt;.</source>
          <target state="translated">秒単位で指定される、再生されるサウンドの継続時間。このパラメーターが指定されていない場合、サウンドは、自然な結論に達するか、&lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;メソッドを使用して停止されるまで再生されます。このパラメーターの使用は &lt;code&gt;start(when, offset)&lt;/code&gt; 呼び出しと機能的に同じです。を呼び出してから &lt;code&gt;stop(when+duration)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ea6dd3ee8d7d180b98068fd0bb58ece5c447685" translate="yes" xml:space="preserve">
          <source>The easing to apply between keyframes can be specified by providing an &lt;code&gt;easing&lt;/code&gt; value as illustrated below.</source>
          <target state="translated">キーフレーム間に適用するイージングは​​、 &lt;code&gt;easing&lt;/code&gt; は、以下に示すようにイージング値をます。</target>
        </trans-unit>
        <trans-unit id="c36c2d561e15721f7199c55cb6d8cd2bd3f88e12" translate="yes" xml:space="preserve">
          <source>The edge case</source>
          <target state="translated">エッジケース</target>
        </trans-unit>
        <trans-unit id="ceca654f8b1fedab74ca304017d68f6bb4cc5957" translate="yes" xml:space="preserve">
          <source>The effect is clearly visible when using &lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt;&lt;code&gt;scissor()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; to draw a square in the center of the canvas, by specifying its position and size in pixels. In the first canvas, we get the desired result. In the second, the square has the wrong shape, size, and position.</source>
          <target state="translated">&lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt; &lt;code&gt;scissor()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;webglrenderingcontext/clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;を使用して、位置とサイズをピクセル単位で指定することにより、キャンバスの中心に正方形を描画すると、効果がはっきりとわかります。最初のキャンバスでは、目的の結果が得られます。2番目の例では、正方形の形状、サイズ、位置が間違っています。</target>
        </trans-unit>
        <trans-unit id="a38c525acf6de8b697009e81e08a36abe2497efc" translate="yes" xml:space="preserve">
          <source>The element &lt;a href=&quot;../htmlelement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; property (see also the section &quot;DOM Style Object&quot; below) can also be used to get and set the styles on an element. However, this property only returns style attributes that have been set &lt;em&gt;in-line&lt;/em&gt; (e.g, &lt;code&gt;&amp;lt;td style=&quot;background-color: lightblue&quot;&amp;gt;&lt;/code&gt; returns the string &quot;&lt;code&gt;background-color:lightblue&lt;/code&gt;&quot;, or directly for that element using &lt;code&gt;element.style.propertyName&lt;/code&gt;, even though there may be other styles on the element from a stylesheet).</source>
          <target state="translated">要素の&lt;a href=&quot;../htmlelement/style&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt;プロパティ（以下の「DOMスタイルオブジェクト」のセクションも参照）を使用して、要素のスタイルを取得および設定することもできます。ただし、このプロパティは&lt;em&gt;インラインで&lt;/em&gt;設定さ&lt;em&gt;れた&lt;/em&gt;スタイル属性のみを返します（たとえば、 &lt;code&gt;&amp;lt;td style=&quot;background-color: lightblue&quot;&amp;gt;&lt;/code&gt; は文字列 &quot; &lt;code&gt;background-color:lightblue&lt;/code&gt; を返します &quot;をか、 &lt;code&gt;element.style.propertyName&lt;/code&gt; を使用してその要素に直接 .propertyName（スタイルシートの要素に他のスタイルがある場合でも）。</target>
        </trans-unit>
        <trans-unit id="2230adc9eaf1786683397ea1d15fff8eaf5cb88e" translate="yes" xml:space="preserve">
          <source>The element and its document are the same node.</source>
          <target state="translated">要素とそのドキュメントは同じノードです。</target>
        </trans-unit>
        <trans-unit id="a0a5d8c04b7b85bba7666924c0feadf666f087e1" translate="yes" xml:space="preserve">
          <source>The element goes into value mode when the contents of the &lt;code&gt;value&lt;/code&gt; property are set. The &lt;code&gt;value&lt;/code&gt; property otherwise behaves like the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;textContent&lt;/code&gt;&lt;/a&gt; property. When the element is in value mode, the default value is accessible only through the &lt;code&gt;defaultValue&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; プロパティの内容が設定されると、要素は値モードになります。 &lt;code&gt;value&lt;/code&gt; プロパティは、そうでない場合のように振る舞う&lt;a href=&quot;node/textcontent&quot;&gt; &lt;code&gt;textContent&lt;/code&gt; &lt;/a&gt;プロパティ。要素が値モードの場合、デフォルト値は、 &lt;code&gt;defaultValue&lt;/code&gt; プロパティます。</target>
        </trans-unit>
        <trans-unit id="726cda6fb64b42af7a567b884ae375b70db2fc05" translate="yes" xml:space="preserve">
          <source>The element holding the attribute.</source>
          <target state="translated">属性を保持する要素。</target>
        </trans-unit>
        <trans-unit id="6882b0a115c5563d3e1f2aa7cc6b2f7936382c7e" translate="yes" xml:space="preserve">
          <source>The element is not contained by a document.</source>
          <target state="translated">要素はドキュメントに含まれていません。</target>
        </trans-unit>
        <trans-unit id="3835887cda98666beaa67e762f0e969fb5e4617a" translate="yes" xml:space="preserve">
          <source>The element is not permitted to use the &lt;code&gt;&quot;fullscreen&quot;&lt;/code&gt; feature, either because of Feature Policy configuration or other access control features.</source>
          <target state="translated">要素は &lt;code&gt;&quot;fullscreen&quot;&lt;/code&gt; 使用を許可されていません機能ポリシー構成またはその他のアクセス制御機能のため、機能の。</target>
        </trans-unit>
        <trans-unit id="03bae120200d5252afa6bd036c51e8427626bbb5" translate="yes" xml:space="preserve">
          <source>The element may not be scrolled completely to the top or bottom depending on the layout of other elements.</source>
          <target state="translated">他の要素のレイアウトによっては、要素が完全に上や下にスクロールしない場合があります。</target>
        </trans-unit>
        <trans-unit id="1925e40fbf4c25a60a28a354cae78328aa4addeb" translate="yes" xml:space="preserve">
          <source>The element may not be scrolled completely to the top or bottom, depending on the layout of other elements.</source>
          <target state="translated">他の要素のレイアウトによっては、要素が上や下に完全にスクロールしない場合があります。</target>
        </trans-unit>
        <trans-unit id="2e6e42f89a20033a8fc6464aceefdc254e6f33ba" translate="yes" xml:space="preserve">
          <source>The element that is used as the viewport for checking visiblity of the target. Must be the ancestor of the target. Defaults to the browser viewport if not specified or if &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ターゲットの可視性をチェックするためのビューポートとして使用される要素。ターゲットの祖先でなければなりません。指定されていない場合、または &lt;code&gt;null&lt;/code&gt; のます。</target>
        </trans-unit>
        <trans-unit id="d01187a52f74b1a64fc391a719d1c12e8a912013" translate="yes" xml:space="preserve">
          <source>The element that was inserted, or &lt;code&gt;null&lt;/code&gt;, if the insertion failed.</source>
          <target state="translated">挿入された要素、または挿入が失敗した場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b5dadbcc1e5deed214947b0e1b0b9a15b36d9ff" translate="yes" xml:space="preserve">
          <source>The element that's currently in full screen mode for this document.</source>
          <target state="translated">このドキュメントで現在フルスクリーンモードになっている要素。</target>
        </trans-unit>
        <trans-unit id="48cf7a294542e36d54f76e3efa9a64ef66926e29" translate="yes" xml:space="preserve">
          <source>The element to be inserted into the tree.</source>
          <target state="translated">ツリーに挿入する要素。</target>
        </trans-unit>
        <trans-unit id="57266882c56c41949202acacd4c30dd306a64bad" translate="yes" xml:space="preserve">
          <source>The element to check whether it is focused or not.</source>
          <target state="translated">フォーカスされているかどうかをチェックする要素。</target>
        </trans-unit>
        <trans-unit id="f6d3ce6143c18f6318f72b79d2a50a5d3c2ab10e" translate="yes" xml:space="preserve">
          <source>The element you are trying to attach to is already a shadow host.</source>
          <target state="translated">アタッチしようとしている要素はすでにシャドウホストです。</target>
        </trans-unit>
        <trans-unit id="8a63d1d381c73831674e7632fa276542156e2195" translate="yes" xml:space="preserve">
          <source>The element's audio tracks are then scanned through using the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; method (although the &lt;a href=&quot;../htmlmediaelement/audiotracks&quot;&gt;&lt;code&gt;audioTracks&lt;/code&gt;&lt;/a&gt; property of a media element isn't actually a JavaScript array, it can be accessed like one for the most part).</source>
          <target state="translated">次に、要素のオーディオトラックがJavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt;メソッドを使用してスキャンされます（メディア要素の&lt;a href=&quot;../htmlmediaelement/audiotracks&quot;&gt; &lt;code&gt;audioTracks&lt;/code&gt; &lt;/a&gt;プロパティは実際にはJavaScript配列ではありませんが、ほとんどの場合、JavaScript配列のようにアクセスできます）。</target>
        </trans-unit>
        <trans-unit id="73fe352de67b1a5c61ffc87a5b95f726a109dea2" translate="yes" xml:space="preserve">
          <source>The elements belonging to this field set. The type of this property depends on the version of the spec that is implemented by the browser.</source>
          <target state="translated">このフィールドセットに属する要素。このプロパティの型は、ブラウザによって実装されている仕様のバージョンに依存します。</target>
        </trans-unit>
        <trans-unit id="c343e7815e70e2fa24f02342559d976ed9ee1e98" translate="yes" xml:space="preserve">
          <source>The elements properties returns an &lt;a href=&quot;htmlformcontrolscollection&quot;&gt;&lt;code&gt;HTMLFormControlsCollection&lt;/code&gt;&lt;/a&gt; instead of a raw &lt;a href=&quot;htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt;. This is mainly a technical change. The following method has been added: &lt;code&gt;checkValidity()&lt;/code&gt;. The following properties have been added: &lt;code&gt;autocomplete&lt;/code&gt;, &lt;code&gt;noValidate&lt;/code&gt;, and &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="translated">要素のプロパティは、生の&lt;a href=&quot;htmlcollection&quot;&gt; &lt;code&gt;HTMLCollection&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;htmlformcontrolscollection&quot;&gt; &lt;code&gt;HTMLFormControlsCollection&lt;/code&gt; &lt;/a&gt;を返します。これは主に技術的な変更です。次のメソッドが追加されました： &lt;code&gt;checkValidity()&lt;/code&gt; 。次のプロパティが追加されました： &lt;code&gt;autocomplete&lt;/code&gt; 、 &lt;code&gt;noValidate&lt;/code&gt; 、および &lt;code&gt;encoding&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9576849387116d13de73da6773fdebec761e418" translate="yes" xml:space="preserve">
          <source>The elements which are included by &lt;code&gt;HTMLFormElement.elements&lt;/code&gt; and &lt;code&gt;HTMLFormElement.length&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;HTMLFormElement.elements&lt;/code&gt; と &lt;code&gt;HTMLFormElement.length&lt;/code&gt; に含まれる要素は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="038fbcc6991055e044b56d6700ed68b6a9094c75" translate="yes" xml:space="preserve">
          <source>The ellipse's major-axis radius. Must be non-negative.</source>
          <target state="translated">楕円の長軸半径。非負でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5e09f5508b6496b219b63b56715ad07daee738eb" translate="yes" xml:space="preserve">
          <source>The ellipse's minor-axis radius. Must be non-negative.</source>
          <target state="translated">楕円の小軸半径。負ではありません。</target>
        </trans-unit>
        <trans-unit id="a07352dfb71000fc17f79e87f630e37284604468" translate="yes" xml:space="preserve">
          <source>The embedded worker is now nested into a new custom &lt;code&gt;document.worker&lt;/code&gt; property.</source>
          <target state="translated">埋め込みワーカーは、新しいカスタム &lt;code&gt;document.worker&lt;/code&gt; プロパティにネストされます。</target>
        </trans-unit>
        <trans-unit id="a1506c3ba865f18a6e5396d480f379988aa6f89c" translate="yes" xml:space="preserve">
          <source>The empty string</source>
          <target state="translated">空の文字列</target>
        </trans-unit>
        <trans-unit id="5bf6d22713bb3baf8e65535dac9f19818721a3ea" translate="yes" xml:space="preserve">
          <source>The empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;)</source>
          <target state="translated">空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7e8f5760a22e16c2120219c908bdd89b47276c3a" translate="yes" xml:space="preserve">
          <source>The empty string is the default value of &lt;code&gt;destination&lt;/code&gt;. &lt;em&gt;What does it mean?&lt;/em&gt;</source>
          <target state="translated">空の文字列は、 &lt;code&gt;destination&lt;/code&gt; のデフォルト値です。&lt;em&gt;どういう意味ですか？&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b2b2a843584cebc2c2e4fe1c9dcf3817abc6f72" translate="yes" xml:space="preserve">
          <source>The encoding or decoding operation failed (No legacy code value and constant name).</source>
          <target state="translated">エンコードまたはデコード操作に失敗しました(レガシーコード値と定数名がありません)。</target>
        </trans-unit>
        <trans-unit id="66368cab63ce34c6d2a7a4c550b6575908a2df90" translate="yes" xml:space="preserve">
          <source>The end of the seekable range to set in seconds measured from the beginning of the source. If the duration of the media source is positive infinity, then the &lt;a href=&quot;../timeranges&quot;&gt;&lt;code&gt;TimeRanges&lt;/code&gt;&lt;/a&gt; object returned by the &lt;a href=&quot;../htmlmediaelement/seekable&quot;&gt;&lt;code&gt;HTMLMediaElement.seekable&lt;/code&gt;&lt;/a&gt; property will have an end timestamp no less than this value.</source>
          <target state="translated">ソースの先頭から測定された、秒単位で設定するシーク可能範囲の終わり。メディアソースの継続時間が正の無限大の場合、&lt;a href=&quot;../htmlmediaelement/seekable&quot;&gt; &lt;code&gt;HTMLMediaElement.seekable&lt;/code&gt; &lt;/a&gt;プロパティによって返される&lt;a href=&quot;../timeranges&quot;&gt; &lt;code&gt;TimeRanges&lt;/code&gt; &lt;/a&gt;オブジェクトには、この値以上の終了タイムスタンプがあります。</target>
        </trans-unit>
        <trans-unit id="1fd54f6dfa62e6e0d8c83111f94e9b1315644a45" translate="yes" xml:space="preserve">
          <source>The end time of the animation in milliseconds from the animation's start (if the &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt; is associated with an &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt;). (Also includes &lt;a href=&quot;../effecttiming/enddelay&quot;&gt;&lt;code&gt;EffectTiming.endDelay&lt;/code&gt;&lt;/a&gt; in that calculation.)</source>
          <target state="translated">アニメーションの開始からミリ秒単位でのアニメーションの終了時間（&lt;a href=&quot;../keyframeeffect&quot;&gt; &lt;code&gt;KeyframeEffect&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;../animation&quot;&gt; &lt;code&gt;Animation&lt;/code&gt; に&lt;/a&gt;関連付けられている場合）。（その計算には&lt;a href=&quot;../effecttiming/enddelay&quot;&gt; &lt;code&gt;EffectTiming.endDelay&lt;/code&gt; &lt;/a&gt;も含まれます。）</target>
        </trans-unit>
        <trans-unit id="6ce9080bbd0720388d04e77db7152bf46eb1c951" translate="yes" xml:space="preserve">
          <source>The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.</source>
          <target state="translated">エンドポイントは、サーバー障害のためか、ブラウザが接続を開いたページから離れて移動しているために移動しています。</target>
        </trans-unit>
        <trans-unit id="cc2e21c2768140f2a342a01112545534c98f1f74" translate="yes" xml:space="preserve">
          <source>The endpoint is terminating the connection because a data frame was received that is too large.</source>
          <target state="translated">大きすぎるデータフレームを受信したため、エンドポイントは接続を終了しています。</target>
        </trans-unit>
        <trans-unit id="fe74cf3e4f563a749d1e026968f215bb333aac32" translate="yes" xml:space="preserve">
          <source>The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).</source>
          <target state="translated">エンドポイントは、一貫性のないデータ(テキストメッセージ内のUTF-8以外のデータなど)を含むメッセージを受信したため、接続を終了しています。</target>
        </trans-unit>
        <trans-unit id="a3391f58bb9350e1c72b28d0eaea0d9a9a5a1b9f" translate="yes" xml:space="preserve">
          <source>The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.</source>
          <target state="translated">エンドポイントは、ポリシーに違反するメッセージを受信したため、接続を終了しています。これは一般的なステータスコードで、コード1003や1009が適切でない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="c48bdca4725363ecaffe97c6b9ecd829c2cd6152" translate="yes" xml:space="preserve">
          <source>The endpoint is terminating the connection due to a protocol error.</source>
          <target state="translated">エンドポイントはプロトコルエラーにより接続を終了しています。</target>
        </trans-unit>
        <trans-unit id="72f88e52a39b1d9214e289ffbb171fa3eb1ea67a" translate="yes" xml:space="preserve">
          <source>The endpoint takes the form of a custom URL pointing to a push server, which can be used to send a push message to the particular service worker instance that subscribed to the push service. For this reason, it is a good idea to keep your endpoint a secret, so others do not hijack it and abuse the push functionality.</source>
          <target state="translated">エンドポイントは、プッシュサーバーを指すカスタム URL の形をとり、プッシュサービスを購読している特定のサービスワーカーのインスタンスにプッシュメッセージを送信するために使用することができます。このため、エンドポイントを秘密にしておくと、他の人がエンドポイントを乗っ取ってプッシュ機能を悪用しないようになります。</target>
        </trans-unit>
        <trans-unit id="b9cc7a728887de3805969d4bb1f5ea61fe97b278" translate="yes" xml:space="preserve">
          <source>The ends of lines are rounded.</source>
          <target state="translated">線の端は丸みを帯びています。</target>
        </trans-unit>
        <trans-unit id="9c40a63d672bcbba6fc6355e64ab3e78cabd9188" translate="yes" xml:space="preserve">
          <source>The ends of lines are squared off at the endpoints.</source>
          <target state="translated">線の端は端点で四角くなっています。</target>
        </trans-unit>
        <trans-unit id="07b7f60971f0018ed0fee963d8387db77b0b3f91" translate="yes" xml:space="preserve">
          <source>The ends of lines are squared off at the endpoints. Default value.</source>
          <target state="translated">線の端は端点で二乗されます。デフォルト値。</target>
        </trans-unit>
        <trans-unit id="aba9d5d957f02159335dfd6c10e75abeed4a5e9d" translate="yes" xml:space="preserve">
          <source>The ends of lines are squared off by adding a box with an equal width and half the height of the line's thickness.</source>
          <target state="translated">線の端は、線の太さの半分の幅と高さが等しいボックスを追加することで四角くなります。</target>
        </trans-unit>
        <trans-unit id="e6bdf555a4f809d03783980554d6281fca259079" translate="yes" xml:space="preserve">
          <source>The entire exchange in a complicated diagram</source>
          <target state="translated">全体のやりとりを複雑な図で</target>
        </trans-unit>
        <trans-unit id="0021ea0dd58048d4d550b7190ae06c4102765fa3" translate="yes" xml:space="preserve">
          <source>The entire hierarchy counts</source>
          <target state="translated">階層全体のカウント</target>
        </trans-unit>
        <trans-unit id="b14fbf4224667fbf0d50127b001983bd53365336" translate="yes" xml:space="preserve">
          <source>The entire read request has been completed.</source>
          <target state="translated">全読込リクエストは終了しました。</target>
        </trans-unit>
        <trans-unit id="7b7bbacb774adc666fb7e34454855f4d1e85e6ba" translate="yes" xml:space="preserve">
          <source>The entity name</source>
          <target state="translated">実体名</target>
        </trans-unit>
        <trans-unit id="aeafbe5b3438638f1ab5218a5ba8f2878d6898f2" translate="yes" xml:space="preserve">
          <source>The entry couldn't be removed due to permissions or other access constraints, or because there are too many calls being made on file resources.</source>
          <target state="translated">パーミッションやその他のアクセス制限、またはファイルリソースに対する呼び出しが多すぎるため、エントリを削除することができませんでした。</target>
        </trans-unit>
        <trans-unit id="590d9e7505115b2fb6755515859cece7fbc90572" translate="yes" xml:space="preserve">
          <source>The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</source>
          <target state="translated">この列挙には、事前に定義された型以外の値が設定されています。この型の新しい値を定義しようとしたり、既存の値をこの型に切り替えようとすることは無効です。</target>
        </trans-unit>
        <trans-unit id="a66bd7791e62ded18713ccbd80305f061d4c4491" translate="yes" xml:space="preserve">
          <source>The equivalent of this element outside of frames: &lt;a href=&quot;htmlbodyelement&quot;&gt;&lt;code&gt;HTMLBodyElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フレーム外のこの要素に相当するもの：&lt;a href=&quot;htmlbodyelement&quot;&gt; &lt;code&gt;HTMLBodyElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c85520e614e55e6129ff91f12f8f68ea58c42a73" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlanchorelement/rel&quot;&gt;&lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmlareaelement/rel&quot;&gt;&lt;code&gt;HTMLAreaElement.rel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt; &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../htmlanchorelement/rel&quot;&gt; &lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../htmlareaelement/rel&quot;&gt; &lt;code&gt;HTMLAreaElement.rel&lt;/code&gt; &lt;/a&gt;の同等のプロパティ。</target>
        </trans-unit>
        <trans-unit id="fa093e10939d0ff93517eccd7872cd95bb69b27d" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlanchorelement/rellist&quot;&gt;&lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmlareaelement/rellist&quot;&gt;&lt;code&gt;HTMLAreaElement.relList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt; &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; &lt;/a&gt;の同等のプロパティ、&lt;a href=&quot;../htmlanchorelement/rellist&quot;&gt; &lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../htmlareaelement/rellist&quot;&gt; &lt;code&gt;HTMLAreaElement.relList&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a08ce1d5b5708eb4a1087d0f3fca0b85369c0b1" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlanchorelement/rel&quot;&gt;&lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmllinkelement/rel&quot;&gt;&lt;code&gt;HTMLLinkElement.rel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../htmlanchorelement/rel&quot;&gt; &lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../htmllinkelement/rel&quot;&gt; &lt;code&gt;HTMLLinkElement.rel&lt;/code&gt; &lt;/a&gt;の同等のプロパティ。</target>
        </trans-unit>
        <trans-unit id="2a1856e12c8b0d00f618cf0ba72fa9efcaddc3ab" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlanchorelement/rellist&quot;&gt;&lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmllinkelement/rellist&quot;&gt;&lt;code&gt;HTMLLinkElement.relList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../htmlanchorelement/rellist&quot;&gt; &lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../htmllinkelement/rellist&quot;&gt; &lt;code&gt;HTMLLinkElement.relList&lt;/code&gt; &lt;/a&gt;の同等のプロパティ。</target>
        </trans-unit>
        <trans-unit id="56d2c23f9cda1bc3e034b14c5fade6bf650d77ba" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlareaelement/rel&quot;&gt;&lt;code&gt;HTMLAreaElement.rel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmllinkelement/rel&quot;&gt;&lt;code&gt;HTMLLinkElement.rel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt; &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../htmlareaelement/rel&quot;&gt; &lt;code&gt;HTMLAreaElement.rel&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../htmllinkelement/rel&quot;&gt; &lt;code&gt;HTMLLinkElement.rel&lt;/code&gt; &lt;/a&gt;の同等のプロパティ。</target>
        </trans-unit>
        <trans-unit id="cc3fb443273be4c837972aa6ac77d91b176606b6" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlareaelement/rellist&quot;&gt;&lt;code&gt;HTMLAreaElement.relList&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmllinkelement/rellist&quot;&gt;&lt;code&gt;HTMLLinkElement.relList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt; &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../htmlareaelement/rellist&quot;&gt; &lt;code&gt;HTMLAreaElement.relList&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../htmllinkelement/rellist&quot;&gt; &lt;code&gt;HTMLLinkElement.relList&lt;/code&gt; &lt;/a&gt;の同等のプロパティ。</target>
        </trans-unit>
        <trans-unit id="ddeb03a2c0d9c5955fd031d2ef37c54485b14098" translate="yes" xml:space="preserve">
          <source>The error callback function, if provided when calling &lt;code&gt;getCurrentPosition()&lt;/code&gt; or &lt;code&gt;watchPosition()&lt;/code&gt;, expects a &lt;a href=&quot;positionerror&quot;&gt;PositionError&lt;/a&gt; object as its first parameter.</source>
          <target state="translated">エラーコールバック関数は、 &lt;code&gt;getCurrentPosition()&lt;/code&gt; または &lt;code&gt;watchPosition()&lt;/code&gt; を呼び出すときに提供される場合、最初のパラメーターとして&lt;a href=&quot;positionerror&quot;&gt;PositionError&lt;/a&gt;オブジェクトを予期します。</target>
        </trans-unit>
        <trans-unit id="b0bc55168632e2a1af048cb9e89962831a825ef9" translate="yes" xml:space="preserve">
          <source>The error callback is called if opening the stream doesn't work. This will happen for example if there's no compatible camera connected, or the user denied access.</source>
          <target state="translated">ストリームを開いてもうまくいかない場合は、エラーコールバックが呼ばれます。これは、互換性のあるカメラが接続されていない場合や、ユーザがアクセスを拒否した場合などに発生します。</target>
        </trans-unit>
        <trans-unit id="9a356feae412db87505a1d3d41d10749c3ba6732" translate="yes" xml:space="preserve">
          <source>The error event has the following three fields that are of interest:</source>
          <target state="translated">エラーイベントには、以下の3つのフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="fb2722be94ff4dc72dfe669bdaac42ebbf621af3" translate="yes" xml:space="preserve">
          <source>The error handler looks like this:</source>
          <target state="translated">エラーハンドラは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="386509f8e36bcf1e978d02141cff25a5f1a1fef3" translate="yes" xml:space="preserve">
          <source>The error you want future interactions to fail with.</source>
          <target state="translated">将来の相互作用に失敗してほしいエラーです。</target>
        </trans-unit>
        <trans-unit id="5ce093e886808d68fc1ea2b94d4c872b60c0efd6" translate="yes" xml:space="preserve">
          <source>The event ID to set the &lt;a href=&quot;https://developer.mozilla.org/en/Server-sent_events/EventSource&quot;&gt;&lt;code&gt;EventSource&lt;/code&gt;&lt;/a&gt; object's last event ID value.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/Server-sent_events/EventSource&quot;&gt; &lt;code&gt;EventSource&lt;/code&gt; &lt;/a&gt;オブジェクトの最後のイベントID値を設定するイベントID。</target>
        </trans-unit>
        <trans-unit id="03e8aa95e63a395f8bae26bc3a10a8292c799404" translate="yes" xml:space="preserve">
          <source>The event behavior depends on the specific platform. It will either behave like Windows or Mac depending on what the native event model does.</source>
          <target state="translated">イベントの動作は特定のプラットフォームに依存します。ネイティブのイベントモデルが何をするかに応じて、WindowsやMacのように振る舞います。</target>
        </trans-unit>
        <trans-unit id="d511d2ed879c97fdea062859c370d1074b482c0d" translate="yes" xml:space="preserve">
          <source>The event did not come directly from the user agent, but was instead dispatched by other code. another payment request is currently being processed, the current payment request is not currently being displayed to the user, or payment information is currently being updated.</source>
          <target state="translated">イベントはユーザーエージェントから直接来たのではなく、他のコードによってディスパッチされた。 別の支払い要求が現在処理中であるか、現在の支払い要求がユーザーに現在表示されていないか、または支払い情報が現在更新されている。</target>
        </trans-unit>
        <trans-unit id="93da8e098cb7af74118eb7922f56d76f01af2ac4" translate="yes" xml:space="preserve">
          <source>The event doesn't bubble and is cancelable; to prevent the default action from taking place, the worker can call the error event's &lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt; method.</source>
          <target state="translated">イベントはバブリングせず、キャンセルできます。デフォルトのアクションが実行されないようにするために、ワーカーはエラーイベントの&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="7b9f07d789dcf15c7fe78a00198b18abdc57b9ff" translate="yes" xml:space="preserve">
          <source>The event handler can determine the current state by calling the transport's &lt;a href=&quot;getselectedcandidatepair&quot;&gt;&lt;code&gt;getSelectedCandidatePair()&lt;/code&gt;&lt;/a&gt; method, which returns a &lt;a href=&quot;../rtcicecandidatepair&quot;&gt;&lt;code&gt;RTCIceCandidatePair&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../rtcicecandidatepair/local&quot;&gt;&lt;code&gt;RTCIceCandidatePair.local&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePair/global&quot;&gt;&lt;code&gt;RTCIceCandidatePair.global&lt;/code&gt;&lt;/a&gt; properties specify &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; objects describing the local and remote candidates that are currently being used.</source>
          <target state="translated">イベントハンドラは、トランスポートの呼び出して、現在の状態を決定することができる&lt;a href=&quot;getselectedcandidatepair&quot;&gt; &lt;code&gt;getSelectedCandidatePair()&lt;/code&gt; &lt;/a&gt;を返すメソッド、&lt;a href=&quot;../rtcicecandidatepair&quot;&gt; &lt;code&gt;RTCIceCandidatePair&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../rtcicecandidatepair/local&quot;&gt; &lt;code&gt;RTCIceCandidatePair.local&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePair/global&quot;&gt; &lt;code&gt;RTCIceCandidatePair.global&lt;/code&gt; &lt;/a&gt;特性指定&lt;a href=&quot;../rtcicecandidate&quot;&gt; &lt;code&gt;RTCIceCandidate&lt;/code&gt; を&lt;/a&gt;現在使用されているローカルおよびリモートの候補者を記述するオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="71b16e9b37207b3e7272a3b9c02d2eae488fcaa1" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beginEvent&quot;&gt;beginEvent&lt;/a&gt;&lt;/code&gt; event .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beginEvent&quot;&gt;beginEvent&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="5f4f73e3aebf9b6cfccb7a1872de96d6e8eb8d41" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicechange&quot;&gt;devicechange&lt;/a&gt;&lt;/code&gt; event. This event is delivered to the &lt;code&gt;MediaDevices&lt;/code&gt; object when a media input or output device is attached to or removed from the user's computer.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicechange&quot;&gt;devicechange&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラー。このイベントは、メディア入力または出力デバイスがユーザーのコンピューターに接続または削除されたときに &lt;code&gt;MediaDevices&lt;/code&gt; オブジェクトに配信されます。</target>
        </trans-unit>
        <trans-unit id="5040277582e03a1a8912d99a4f5a0ce7686bd381" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/endEvent&quot;&gt;endEvent&lt;/a&gt;&lt;/code&gt; event .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/endEvent&quot;&gt;endEvent&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="166d09687fae3fb88b037364e25d12d4f374ae4b" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/enter&quot;&gt;enter&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/enter&quot;&gt;enter&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="c083181e62a34007cc8c571ce82514923013269a" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="653b25354b112c64b13f157fc3f9d365bfadf319" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/repeatEvent&quot;&gt;repeatEvent&lt;/a&gt;&lt;/code&gt; event .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/repeatEvent&quot;&gt;repeatEvent&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="91af9ea00dfe842e277105a44157f86a9b7557dd" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;abort&lt;/code&gt; event, fired when the transaction is aborted. This can happen due to:</source>
          <target state="translated">トランザクションが中止されたときに発生する &lt;code&gt;abort&lt;/code&gt; イベントのイベントハンドラー。これは次の原因で発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="aa9a07e6763ad20126aada1df275adf99c7f8ae1" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;addsourcebuffer&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;addsourcebuffer&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="c995ef1762f6358e2c03aff83ffe7a713f877b51" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;complete&lt;/code&gt; event, thrown when the transaction completes successfully.</source>
          <target state="translated">トランザクションが正常に完了したときにスローされる &lt;code&gt;complete&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="aea0375fcc0739ced27a1401ded0ac46d8da7937" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;error&lt;/code&gt; event, thrown when the transaction fails to complete.</source>
          <target state="translated">トランザクションの完了に失敗したときにスローされる &lt;code&gt;error&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="1adb42de0f4f7d68ca6998dd57b38f126ed038c5" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;removesourcebuffer&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;removesourcebuffer&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="15d7fbc64f56b35632f931f620eba25e334aa737" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;sourceclose&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;sourceclose&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="291058b107f22bd642f3123be1e7a51592f99ff7" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;sourceended&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;sourceended&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="f1dd1867f2830b0150299e9b4155f7c88a1220e4" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;sourceopen&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;sourceopen&lt;/code&gt; イベントのイベントハンドラー。</target>
        </trans-unit>
        <trans-unit id="a8b4c7bffaf3400a2dca09527b34005155c96f67" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;upgradeneeded&lt;/code&gt; event, fired when a database of a bigger version number than the existing stored database is loaded.</source>
          <target state="translated">&lt;code&gt;upgradeneeded&lt;/code&gt; イベントのイベントハンドラー。既存の格納されているデータベースよりも大きなバージョン番号のデータベースが読み込まれたときに発生します。</target>
        </trans-unit>
        <trans-unit id="0e8039aced11b6fbc220df0b4d616ae7ee101eaf" translate="yes" xml:space="preserve">
          <source>The event handler for the blocked event.</source>
          <target state="translated">ブロックされたイベントのイベントハンドラ。</target>
        </trans-unit>
        <trans-unit id="9bff23c40b91e482f539c73950cafa28924eb130" translate="yes" xml:space="preserve">
          <source>The event handler for the blocked event. This event is triggered when the &lt;code&gt;upgradeneeded&lt;/code&gt; event should be triggered because of a version change but the database is still in use (i.e. not closed) somewhere, even after the &lt;code&gt;versionchange&lt;/code&gt; event was sent.</source>
          <target state="translated">ブロックされたイベントのイベントハンドラー。このイベントは、バージョン変更のために &lt;code&gt;upgradeneeded&lt;/code&gt; イベントをトリガーする必要があるが、バージョン変更イベントが送信された後でも、データベースがまだどこかで使用されている（つまり、閉じられていない）場合に &lt;code&gt;versionchange&lt;/code&gt; されます。</target>
        </trans-unit>
        <trans-unit id="474e24637f0c7b170f692bdc37c79b796c698481" translate="yes" xml:space="preserve">
          <source>The event handler for the error event.</source>
          <target state="translated">エラーイベントのイベントハンドラです。</target>
        </trans-unit>
        <trans-unit id="b12a9fcb953adc1ff46f112649eb68141ced8848" translate="yes" xml:space="preserve">
          <source>The event handler for the success event.</source>
          <target state="translated">サクセスイベントのイベントハンドラです。</target>
        </trans-unit>
        <trans-unit id="ee2e0c7d1c9168adbb72be87969cd134fa1bfc7d" translate="yes" xml:space="preserve">
          <source>The event handler function is a &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; object. Apart from the button(s) the event is fired on, the behaviour is exactly the same.</source>
          <target state="translated">イベントハンドラー関数は、&lt;a href=&quot;../mouseevent&quot;&gt; &lt;code&gt;MouseEvent&lt;/code&gt; &lt;/a&gt;オブジェクトです。イベントが発生するボタン以外は、動作はまったく同じです。</target>
        </trans-unit>
        <trans-unit id="377eba29fd6e2052b4c68c25f373ba946440db72" translate="yes" xml:space="preserve">
          <source>The event handler function to be registered.</source>
          <target state="translated">登録するイベントハンドラ関数です。</target>
        </trans-unit>
        <trans-unit id="fdbdf60f3b9f1b22426face46c9a8058b6c48994" translate="yes" xml:space="preserve">
          <source>The event handler receives as its sole input an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object describing the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/statechange&quot;&gt;statechange&lt;/a&gt;&lt;/code&gt; event which occurred. To determine the new state, examine the value of &lt;a href=&quot;state&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">イベントハンドラーは、発生した &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/statechange&quot;&gt;statechange&lt;/a&gt;&lt;/code&gt; イベントを説明する&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;オブジェクトを唯一の入力として受け取ります。新しい状態を判断するには、の値を調べる&lt;a href=&quot;state&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d37ce8b3eabb565d31f262fde4f3d4563ec1847" translate="yes" xml:space="preserve">
          <source>The event handler takes one parameter, a success &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/success&quot;&gt;Event&lt;/a&gt; with type=&quot;success&quot;.</source>
          <target state="translated">イベントハンドラは、type = &quot;success&quot;の成功&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/success&quot;&gt;イベント&lt;/a&gt;という1つのパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="8ff7ee9251fcb0776d3e082247c74390f58de49b" translate="yes" xml:space="preserve">
          <source>The event handler takes one parameter, an error &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;Event&lt;/a&gt; with type=&quot;error&quot;.</source>
          <target state="translated">イベントハンドラーは1つのパラメーター、type = &quot;error&quot;のエラー&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;イベント&lt;/a&gt;を受け取ります。</target>
        </trans-unit>
        <trans-unit id="6923d47466cfda77238b4f540c7754d04cbf4118" translate="yes" xml:space="preserve">
          <source>The event handler that kicks everything off, of course, is the handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">もちろん、すべてを開始するイベントハンドラーは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; イベントのハンドラーです。</target>
        </trans-unit>
        <trans-unit id="49263a8901aa9cc0657885f3d9b5313cd1a359bd" translate="yes" xml:space="preserve">
          <source>The event handler uses the JavaScript &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&quot;&gt;instanceof&lt;/a&gt;&lt;/code&gt; operator to determine which type of track the event occurred on, then outputs to console a message indicating what kind of track it is and whether it's being added to or removed from the element.</source>
          <target state="translated">イベントハンドラーは、JavaScriptの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&quot;&gt;instanceof&lt;/a&gt;&lt;/code&gt; 演算子を使用して、イベントが発生したトラックの種類を判別し、それがどのような種類のトラックであるか、および要素に追加されているか、要素から削除されているかを示すメッセージをコンソールに出力します。</target>
        </trans-unit>
        <trans-unit id="012b99608104dc79662718480695b8f1a115baca" translate="yes" xml:space="preserve">
          <source>The event has arrived at &lt;a href=&quot;../eventtarget&quot;&gt;the event's target&lt;/a&gt;. Event listeners registered for this phase are called at this time. If &lt;a href=&quot;bubbles&quot;&gt;&lt;code&gt;Event.bubbles&lt;/code&gt;&lt;/a&gt; is false, processing the event is finished after this phase is complete.</source>
          <target state="translated">イベントが&lt;a href=&quot;../eventtarget&quot;&gt;イベントのターゲットに&lt;/a&gt;到達しました。この段階で登録されたイベントリスナーは、この時点で呼び出されます。&lt;a href=&quot;bubbles&quot;&gt; &lt;code&gt;Event.bubbles&lt;/code&gt; &lt;/a&gt;がfalseの場合、このフェーズが完了すると、イベントの処理が終了します。</target>
        </trans-unit>
        <trans-unit id="f6c6bbfdafa209797c365228853c93ace461e64c" translate="yes" xml:space="preserve">
          <source>The event is being propagated through the target's ancestor objects. This process starts with the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, then the &lt;a href=&quot;../htmlhtmlelement&quot;&gt;&lt;code&gt;HTMLHtmlElement&lt;/code&gt;&lt;/a&gt;, and so on through the elements until the target's parent is reached. &lt;a href=&quot;../eventlistener&quot;&gt;Event listeners&lt;/a&gt; registered for capture mode when &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt; was called are triggered during this phase.</source>
          <target state="translated">イベントはターゲットの祖先オブジェクトを介して伝達されています。このプロセスは、&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;、そして&lt;a href=&quot;../htmlhtmlelement&quot;&gt; &lt;code&gt;HTMLHtmlElement&lt;/code&gt; で始まり&lt;/a&gt;、ターゲットの親に到達するまで要素を順に処理します。このフェーズでは、&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;EventTarget.addEventListener()&lt;/code&gt; &lt;/a&gt;が呼び出されたときにキャプチャモードに登録された&lt;a href=&quot;../eventlistener&quot;&gt;イベントリスナー&lt;/a&gt;がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="32c28efe4407d8855023c0e7a9b138a6ce9a5841" translate="yes" xml:space="preserve">
          <source>The event is fired for all connections that are created when &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-monitoring-incoming-presentation-connections&quot;&gt;monitoring incoming presentation connections&lt;/a&gt;.</source>
          <target state="translated">このイベントは、&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-monitoring-incoming-presentation-connections&quot;&gt;着信プレゼンテーション接続を監視する&lt;/a&gt;ときに作成されるすべての接続に対して発生します。</target>
        </trans-unit>
        <trans-unit id="4c6252a6f225cd48d15a933ca3c6b4199c527b71" translate="yes" xml:space="preserve">
          <source>The event is fired when a pointer becomes &lt;em&gt;active&lt;/em&gt;. For mouse, it is fired when the device transitions from no buttons depressed to at least one button depressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer.</source>
          <target state="translated">このイベントは、ポインタが&lt;em&gt;アクティブに&lt;/em&gt;なると発生&lt;em&gt;し&lt;/em&gt;ます。マウスの場合、ボタンが押されていない状態から少なくとも1つのボタンが押された状態にデバイスが移行すると発生します。タッチの場合、デジタイザと物理的に接触すると発生します。ペンの場合、スタイラスがデジタイザーと物理的に接触すると発火します。</target>
        </trans-unit>
        <trans-unit id="881127378492a3f198f3475b266aae8f0fd4e738" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object, whose &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property identifies the newly-added track.</source>
          <target state="translated">イベントは&lt;a href=&quot;../trackevent&quot;&gt; &lt;code&gt;TrackEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの形式でイベントハンドラーに渡されます。その&lt;a href=&quot;../trackevent/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt;プロパティは、新しく追加されたトラックを識別します。</target>
        </trans-unit>
        <trans-unit id="d5d38a1f734b273d911dd6b95b97575a4a2dd558" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object, whose &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property identifies the track that was removed from the media element's &lt;code&gt;AudioTrackList&lt;/code&gt;.</source>
          <target state="translated">イベントは&lt;a href=&quot;../trackevent&quot;&gt; &lt;code&gt;TrackEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの形式でイベントハンドラーに渡されます。その&lt;a href=&quot;../trackevent/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt;プロパティは、メディア要素の &lt;code&gt;AudioTrackList&lt;/code&gt; から削除されたトラックを識別します。</target>
        </trans-unit>
        <trans-unit id="c2b50e5922990d87af15b8d254304a5ff249039f" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object, whose &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property identifies the track that was removed from the media element's &lt;code&gt;VideoTrackList&lt;/code&gt;.</source>
          <target state="translated">イベントは、&lt;a href=&quot;../trackevent&quot;&gt; &lt;code&gt;TrackEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの形式でイベントハンドラーに渡されます。その&lt;a href=&quot;../trackevent/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt;プロパティは、メディア要素の &lt;code&gt;VideoTrackList&lt;/code&gt; から削除されたトラックを識別します。</target>
        </trans-unit>
        <trans-unit id="057b513221ba1dcbb98c9809cb7839bad4a45801" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object; the event doesn't provide any additional information. To determine the new state of media's tracks, you'll have to look at their &lt;a href=&quot;../audiotrack/enabled&quot;&gt;&lt;code&gt;AudioTrack.enabled&lt;/code&gt;&lt;/a&gt; flags.</source>
          <target state="translated">イベントは、&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;オブジェクトの形式でイベントハンドラーに渡されます。イベントは追加情報を提供しません。メディアのトラックの新しい状態を判別するには、&lt;a href=&quot;../audiotrack/enabled&quot;&gt; &lt;code&gt;AudioTrack.enabled&lt;/code&gt; &lt;/a&gt;フラグを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="b77dc84785a0e9abfced7e32039b1f770a0277d0" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object; the event doesn't provide any additional information. To determine the new state of media's tracks, you'll have to look at their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VideoTrack/enabled&quot;&gt;&lt;code&gt;VideoTrack.enabled&lt;/code&gt;&lt;/a&gt; flags.</source>
          <target state="translated">イベントは、&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;オブジェクトの形式でイベントハンドラーに渡されます。イベントは追加情報を提供しません。メディアのトラックの新しい状態を判別するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VideoTrack/enabled&quot;&gt; &lt;code&gt;VideoTrack.enabled&lt;/code&gt; &lt;/a&gt;フラグを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c53a5e97d21d19d2014633532b40d8c666883a1" translate="yes" xml:space="preserve">
          <source>The event is propagating back up through the target's ancestors in reverse order, starting with the parent, and eventually reaching the containing &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;. This is known as bubbling, and occurs only if &lt;a href=&quot;bubbles&quot;&gt;&lt;code&gt;Event.bubbles&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;. &lt;a href=&quot;../eventlistener&quot;&gt;Event listeners&lt;/a&gt; registered for this phase are triggered during this process.</source>
          <target state="translated">イベントはターゲットの祖先を逆の順序で逆方向に伝播し、親から始まり、最終的には含まれている&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;に到達します。これはバブリングと呼ばれ、&lt;a href=&quot;bubbles&quot;&gt; &lt;code&gt;Event.bubbles&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;true&lt;/code&gt; の場合にのみ発生します。このフェーズに登録された&lt;a href=&quot;../eventlistener&quot;&gt;イベントリスナー&lt;/a&gt;は、このプロセス中にトリガーされます。</target>
        </trans-unit>
        <trans-unit id="61fbc8e51e55dc3704022dc555d714563ec4dc63" translate="yes" xml:space="preserve">
          <source>The event listener callback</source>
          <target state="translated">イベントリスナーのコールバック</target>
        </trans-unit>
        <trans-unit id="15d814057a46ababa2b6e015aa98e8575d368186" translate="yes" xml:space="preserve">
          <source>The event listener can be specified as either a callback function or as an object that implements &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt;, whose &lt;a href=&quot;../eventlistener/handleevent&quot;&gt;&lt;code&gt;handleEvent()&lt;/code&gt;&lt;/a&gt; method serves as the callback function.</source>
          <target state="translated">イベントリスナーは、いずれかのコールバック関数として、または実装することを目的として指定することができる&lt;a href=&quot;../eventlistener&quot;&gt; &lt;code&gt;EventListener&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../eventlistener/handleevent&quot;&gt; &lt;code&gt;handleEvent()&lt;/code&gt; &lt;/a&gt;メソッドは、コールバック関数としての役割を果たす。</target>
        </trans-unit>
        <trans-unit id="518c33077d13e9ef921a9b77ebc4dcef34089213" translate="yes" xml:space="preserve">
          <source>The event object for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/result&quot;&gt;result&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/nomatch&quot;&gt;nomatch&lt;/a&gt;&lt;/code&gt; events, and contains all the data associated with an interim or final speech recognition result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/result&quot;&gt;result&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/nomatch&quot;&gt;nomatch&lt;/a&gt;&lt;/code&gt; イベントのイベントオブジェクトであり、中間または最終の音声認識結果に関連付けられたすべてのデータが含まれます。</target>
        </trans-unit>
        <trans-unit id="325ca99660c33ab5c94119e7fc5d52067210150d" translate="yes" xml:space="preserve">
          <source>The event object is of type &lt;a href=&quot;../vrdisplayevent&quot;&gt;&lt;code&gt;VRDisplayEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">イベントオブジェクトのタイプは&lt;a href=&quot;../vrdisplayevent&quot;&gt; &lt;code&gt;VRDisplayEvent&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="416d4e70774d4d55c60ef485c4afb9ba9b75d97e" translate="yes" xml:space="preserve">
          <source>The event object of a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message_(ServiceWorker)&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event fired on a service worker (when a channel message is received on the &lt;a href=&quot;serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; from another context) &amp;mdash; extends the lifetime of such events.</source>
          <target state="translated">Service Worker で発生した &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message_(ServiceWorker)&quot;&gt;message&lt;/a&gt;&lt;/code&gt; イベントのイベントオブジェクト（チャネルメッセージが&lt;a href=&quot;serviceworkerglobalscope&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;で別のコンテキストから受信された場合）&amp;mdash;このようなイベントの有効期間を延長します。</target>
        </trans-unit>
        <trans-unit id="364f00a2efc461792f1179ba522dc36c9096616f" translate="yes" xml:space="preserve">
          <source>The event passed to the listener is an &lt;a href=&quot;../idbversionchangeevent&quot;&gt;&lt;code&gt;IDBVersionChangeEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リスナーに渡されるイベントは&lt;a href=&quot;../idbversionchangeevent&quot;&gt; &lt;code&gt;IDBVersionChangeEvent&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="1bbb8501fd6c0787be9bab55b8d07f56e8960947" translate="yes" xml:space="preserve">
          <source>The event sent by the WebSocket object when a message is received from the server.</source>
          <target state="translated">サーバからメッセージを受信したときに、WebSocket オブジェクトが送信するイベント。</target>
        </trans-unit>
        <trans-unit id="3b6187d9ea4d8efc63efccc30d2399951d3c9a97" translate="yes" xml:space="preserve">
          <source>The event sent by the WebSocket object when the connection closes.</source>
          <target state="translated">接続が終了したときに WebSocket オブジェクトによって送信されるイベント。</target>
        </trans-unit>
        <trans-unit id="a60d777a8bf84d534f926f3f0fe9703ae10c735f" translate="yes" xml:space="preserve">
          <source>The event stream is a simple stream of text data which must be encoded using UTF-8. Messages in the event stream are separated by a pair of newline characters. A colon as the first character of a line is in essence a comment, and is ignored.</source>
          <target state="translated">イベントストリームはテキストデータの単純なストリームで、UTF-8でエンコードする必要があります。イベントストリーム内のメッセージは、一対の改行文字で区切られています。行の最初の文字としてのコロンは、本質的にはコメントであり、無視されます。</target>
        </trans-unit>
        <trans-unit id="333d73023a0e51754b80482740b531e64f5db3dc" translate="yes" xml:space="preserve">
          <source>The event that's fired when connection information changes and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; is fired on this object.</source>
          <target state="translated">接続情報が変更され、このオブジェクトで &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; が発生したときに発生するイベント。</target>
        </trans-unit>
        <trans-unit id="3538beecc929a15322b6255e86de2e9981be621b" translate="yes" xml:space="preserve">
          <source>The event was generated by a mouse device.</source>
          <target state="translated">イベントはマウスデバイスによって生成されました。</target>
        </trans-unit>
        <trans-unit id="0aeb012a6255ae5c4a103bdb359c0a10353e8ef6" translate="yes" xml:space="preserve">
          <source>The event was generated by a pen or stylus device.</source>
          <target state="translated">イベントは、ペンやスタイラスのデバイスによって生成されました。</target>
        </trans-unit>
        <trans-unit id="f2f041a8c8ef812afdbb618d861e9cad28c58344" translate="yes" xml:space="preserve">
          <source>The event was generated by a touch such as a finger.</source>
          <target state="translated">指などのタッチでイベントが発生しました。</target>
        </trans-unit>
        <trans-unit id="a78c36b36227256daba1f3887f119503f68d93ff" translate="yes" xml:space="preserve">
          <source>The event was originally introduced by Microsoft in Internet Explorer 4 and standardized in the HTML5 specification.</source>
          <target state="translated">このイベントはもともとMicrosoftがInternet Explorer 4で導入したもので、HTML5の仕様で標準化されています。</target>
        </trans-unit>
        <trans-unit id="84cfe53f5a42517e01b6d9fc5947ae982a0ba31f" translate="yes" xml:space="preserve">
          <source>The event's pointer type, either the string &lt;code&gt;mouse&lt;/code&gt;, &lt;code&gt;pen&lt;/code&gt; or &lt;code&gt;touch&lt;/code&gt;.</source>
          <target state="translated">イベントのポインタータイプ（文字列 &lt;code&gt;mouse&lt;/code&gt; 、 &lt;code&gt;pen&lt;/code&gt; または &lt;code&gt;touch&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="c70b6a9277f70335ccccd9a0ca900283992482e5" translate="yes" xml:space="preserve">
          <source>The event's target is the same &lt;a href=&quot;element&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt; that received the &lt;code&gt;touchstart&lt;/code&gt; event corresponding to the touch point, even if the touch point has moved outside that element.</source>
          <target state="translated">イベントのターゲットは、タッチポイントがその要素の外に移動した場合でも、タッチポイントに対応する &lt;code&gt;touchstart&lt;/code&gt; イベントを受け取ったのと同じ&lt;a href=&quot;element&quot;&gt; &lt;code&gt;element&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="abd69348450342abf63c2725f24c4d0a8dbf8caf" translate="yes" xml:space="preserve">
          <source>The events based on this interface are &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">このインターフェースに基づくイベントは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="633a40125277bf4a9e9f79e143163e547924a45a" translate="yes" xml:space="preserve">
          <source>The events needed to handle generic pointer input are analogous to &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;mouse events&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;mousedown/pointerdown&lt;/code&gt;, &lt;code&gt;mousemove/pointermove&lt;/code&gt;, etc.). Consequently, pointer event types are intentionally similar to mouse event types. Additionally, a pointer event contains the usual properties present in mouse events (client coordinates, target element, button states, etc.) in addition to new properties for other forms of input: pressure, contact geometry, tilt, etc. In fact, the &lt;a href=&quot;pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface inherits all of the &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;MouseEvent's&lt;/code&gt;&lt;/a&gt; properties thus facilitating migrating content from mouse events to pointer events.</source>
          <target state="translated">一般的なポインタ入力の処理に必要なイベントは、&lt;a href=&quot;mouseevent&quot;&gt; &lt;code&gt;mouse events&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;mousedown/pointerdown&lt;/code&gt; 、 &lt;code&gt;mousemove/pointermove&lt;/code&gt; など）に類似しています。したがって、ポインタイベントタイプは意図的にマウスイベントタイプに類似しています。さらに、ポインタイベントには、マウスイベントに存在する通常のプロパティ（クライアント座標、ターゲット要素、ボタンの状態など）に加えて、圧力、接触ジオメトリ、傾斜などの他の入力形式の新しいプロパティが含まれています。&lt;a href=&quot;pointerevent&quot;&gt; &lt;code&gt;PointerEvent&lt;/code&gt; &lt;/a&gt;インターフェイスは、&lt;a href=&quot;mouseevent&quot;&gt; &lt;code&gt;MouseEvent's&lt;/code&gt; &lt;/a&gt;すべてのプロパティを継承するため、コンテンツをマウスイベントからポインターイベントに簡単に移行できます。</target>
        </trans-unit>
        <trans-unit id="a2a814c43f5d425132a48ad8d280abb840a4ff06" translate="yes" xml:space="preserve">
          <source>The exact behavior of modal windows depends on the platform and on the Mozilla release version.</source>
          <target state="translated">モーダルウィンドウの正確な動作は、プラットフォームと Mozilla のリリースバージョンに依存します。</target>
        </trans-unit>
        <trans-unit id="c097a16215f9c09d84b569daaa304a9bd1fa8efa" translate="yes" xml:space="preserve">
          <source>The exact circumstances and browser capabilities change over time, but the general philosophy of the browser vendors is to make the best effort to keep the data when possible.</source>
          <target state="translated">正確な状況やブラウザの機能は時間の経過とともに変化していきますが、ブラウザベンダーの一般的な考え方としては、可能な限りデータを残す努力をするということです。</target>
        </trans-unit>
        <trans-unit id="92c236bb6935d17e0c6b1e874d88f1024505ba1a" translate="yes" xml:space="preserve">
          <source>The exact effect of this coordinate depends on each element. If the attribute is not specified, the effect is as if a value of &lt;code&gt;0&lt;/code&gt; were specified.</source>
          <target state="translated">この座標の正確な効果は、各要素によって異なります。属性が指定されていない場合、効果は値 &lt;code&gt;0&lt;/code&gt; が指定された場合と同じです。</target>
        </trans-unit>
        <trans-unit id="7ddfa1ab95605cf5b0611ce70f6e07c892959def" translate="yes" xml:space="preserve">
          <source>The exact effect of this coordinate depends on each element.If the attribute is not specified, the effect is as if a value of &lt;code&gt;0&lt;/code&gt; were specified.</source>
          <target state="translated">この座標の正確な効果は、各要素によって異なります。属性が指定されていない場合、効果は値 &lt;code&gt;0&lt;/code&gt; が指定されているかのようになります。</target>
        </trans-unit>
        <trans-unit id="7db719df093965c969583d143320db6c5bc499bb" translate="yes" xml:space="preserve">
          <source>The exact validation technology depends on the payment handler, and merchant validation is entirely optional. In the end, the only thing that the web site or app is responsible for is fetching the merchant's validation key and passing it into the event's &lt;a href=&quot;../merchantvalidationevent/complete&quot;&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">正確な検証技術は支払いハンドラに依存し、販売者の検証は完全にオプションです。結局、Webサイトまたはアプリが担当する唯一のことは、マーチャントの検証キーをフェッチし、それをイベントの&lt;a href=&quot;../merchantvalidationevent/complete&quot;&gt; &lt;code&gt;complete()&lt;/code&gt; &lt;/a&gt;メソッドに渡すことです。</target>
        </trans-unit>
        <trans-unit id="e1ae65f7095de79e42d15340e08038c55e3639da" translate="yes" xml:space="preserve">
          <source>The example below draws three different paths, demonstrating each of the three &lt;code&gt;lineJoin&lt;/code&gt; options.</source>
          <target state="translated">次の例では、3つの異なるパスを描画して、3つの &lt;code&gt;lineJoin&lt;/code&gt; オプションのそれぞれを示しています。</target>
        </trans-unit>
        <trans-unit id="22f94208043ca899cfd1fd698c8c72e08ecdf07f" translate="yes" xml:space="preserve">
          <source>The example below draws three different paths, demonstrating each of these three &lt;code&gt;lineJoin&lt;/code&gt; property settings; the output is shown above.</source>
          <target state="translated">以下の例では、3つの異なるパスを描画して、これら3つの &lt;code&gt;lineJoin&lt;/code&gt; プロパティ設定のそれぞれを示しています。出力は上に表示されています。</target>
        </trans-unit>
        <trans-unit id="3a6d432a11f87417869101e32920bc4f7afa19f9" translate="yes" xml:space="preserve">
          <source>The example below draws two triangles, one filled and one outlined.</source>
          <target state="translated">下の例では、2 つの三角形を描き、1 つは塗りつぶし、もう 1 つはアウトライン化しています。</target>
        </trans-unit>
        <trans-unit id="78f64de305c881b56a5819537356ae3477fe2032" translate="yes" xml:space="preserve">
          <source>The example below first checks to see if the browser supports service workers. If supported, the code registers the service worker and determines if the page is actively controlled by the service worker. If it isn't, it prompts the user to reload the page so the service worker can take control. The code also reports any registration failures.</source>
          <target state="translated">以下の例では、まずブラウザがサービスワーカーをサポートしているかどうかを確認します。サポートされている場合、コードはサービスワーカーを登録し、ページがサービスワーカーによってアクティブに制御されているかどうかを判断します。そうでない場合は、サービスワーカーが制御できるようにページをリロードするようにユーザーに促します。このコードはまた、登録に失敗した場合も報告します。</target>
        </trans-unit>
        <trans-unit id="a21f51f86078e61a8538a5dff376f87463b710d0" translate="yes" xml:space="preserve">
          <source>The example below uses a simple fetch call to grab an image and display it in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; tag. You'll notice that since we are requesting an image, we need to run &lt;a href=&quot;body/blob&quot;&gt;&lt;code&gt;Body.blob()&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; implements body) to give the response its correct MIME type.</source>
          <target state="translated">以下の例では、単純なフェッチ呼び出しを使用して画像を取得し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;タグで表示しています。画像をリクエストしているので、レスポンスに正しいMIMEタイプを提供するために&lt;a href=&quot;body/blob&quot;&gt; &lt;code&gt;Body.blob()&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; implements body）を実行する必要があることに気づくでしょう。</target>
        </trans-unit>
        <trans-unit id="bf91867dda3f6738ef23772cc44b82b623fbd36c" translate="yes" xml:space="preserve">
          <source>The example below watches the state of the ICE agent for a failure or unexpected closure and takes appropriate action, such as presenting an error message or attempting to restart the ICE agent.</source>
          <target state="translated">以下の例では,ICEエージェントの状態を監視して,障害や予期せぬ閉鎖がないかどうかを確認し,エラーメッセージを表示したり,ICEエージェントの再起動を試みたりするなど,適切な対処を行います.</target>
        </trans-unit>
        <trans-unit id="81a485db6c54ac571dff7d2837860ae39779944a" translate="yes" xml:space="preserve">
          <source>The example below, which is based on the code from the article &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;, sets up a handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; events to send the candidates to the remote peer.</source>
          <target state="translated">以下の例は、記事「&lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;シグナリングとビデオ通話&lt;/a&gt;」のコードに基づいており、候補をリモートピアに送信するための &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを設定します。</target>
        </trans-unit>
        <trans-unit id="1ff076e63d624494090166976810a11e9eca0e5e" translate="yes" xml:space="preserve">
          <source>The example creates an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element and lets the user assign either a valid music file to it, or a link to a file which doesn't exist. This lets us see the behavior of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event handler, which is received by an event handler we add to the &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; element itself.</source>
          <target state="translated">この例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成し、ユーザーに有効な音楽ファイルを割り当てるか、存在しないファイルへのリンクを割り当てます。これにより、 &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; 要素自体に追加したイベントハンドラーが受け取る &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; イベントハンドラーの動作を確認できます。</target>
        </trans-unit>
        <trans-unit id="873416eb8e9852f6e180efb00e04799b2f7c485a" translate="yes" xml:space="preserve">
          <source>The example describes repeated pieces of code that will be hidden from now on, as well as defining a JavaScript utility function to make WebGL initialization easier.</source>
          <target state="translated">この例では、これから非表示になるコードの繰り返しと、WebGLの初期化を容易にするためのJavaScriptのユーティリティ関数の定義を説明しています。</target>
        </trans-unit>
        <trans-unit id="2f9d358dac650cf6f5b343235672740978098030" translate="yes" xml:space="preserve">
          <source>The example explores the effect of setting (or not setting) the canvas size to its element size in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSS&quot;&gt;CSS&lt;/a&gt; pixels, as it appears in the browser window.</source>
          <target state="translated">この例では、ブラウザーウィンドウに表示されているように、キャンバスサイズを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSS&quot;&gt;CSS&lt;/a&gt;ピクセル単位の要素サイズに設定した（または設定していない）場合の効果を調べます。</target>
        </trans-unit>
        <trans-unit id="775aa21bd51bf14efcbac6acf17dbd377e335d04" translate="yes" xml:space="preserve">
          <source>The example image above shows a scrollbar and an &lt;code&gt;offsetHeight&lt;/code&gt; which fits on the window. However, non-scrollable elements may have large &lt;code&gt;offsetHeight&lt;/code&gt; values, much larger than the visible content. These elements are typically contained within scrollable elements; consequently, these non-scrollable elements may be completely or partly invisible, depending on the &lt;code&gt;scrollTop&lt;/code&gt; setting of the scrollable container.</source>
          <target state="translated">上のサンプル画像は、ウィンドウに収まるスクロールバーと &lt;code&gt;offsetHeight&lt;/code&gt; を示しています。ただし、スクロールできない要素は、 &lt;code&gt;offsetHeight&lt;/code&gt; 値が大きく、表示されるコンテンツよりもはるかに大きい場合があります。これらの要素は通常、スクロール可能な要素内に含まれています。その結果、これらの非スクロール可能要素は、スクロール可能コンテナの &lt;code&gt;scrollTop&lt;/code&gt; 設定に応じて、完全にまたは部分的に非表示になる場合があります。</target>
        </trans-unit>
        <trans-unit id="fe6a0689a103b5968aa68ef14ffcf9549801c3c7" translate="yes" xml:space="preserve">
          <source>The example snippets in this article are taken from our WebSocket chat client/server sample. &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/websocket-chat&quot;&gt;See the code&lt;/a&gt;, then &lt;a href=&quot;https://mdn-samples.mozilla.org/s/websocket-chat&quot;&gt;try out the example for yourself&lt;/a&gt;. &lt;strong&gt;The example currently has a bug in it; it is trying to use insecure WebSockets but needs to be updated to use a secure one. We will fix this soon!&lt;/strong&gt;</source>
          <target state="translated">この記事のサンプルスニペットは、WebSocketチャットクライアント/サーバーサンプルからの抜粋です。&lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/websocket-chat&quot;&gt;コードを見て&lt;/a&gt;、&lt;a href=&quot;https://mdn-samples.mozilla.org/s/websocket-chat&quot;&gt;自分で例を試してみてください&lt;/a&gt;。&lt;strong&gt;この例には現在バグがあります。安全でないWebSocketを使用しようとしていますが、安全なWebSocketを使用するように更新する必要があります。すぐに修正します！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f25e736c8722982227eeb25d9a03b5ed63f1b9f1" translate="yes" xml:space="preserve">
          <source>The example, which pauses the video when you switch to another tab and plays again when you return to its tab, was created with the following code:</source>
          <target state="translated">別のタブに切り替えると動画が一時停止し、そのタブに戻ると再び再生される例は、以下のコードで作成しました。</target>
        </trans-unit>
        <trans-unit id="c02cd3f7e15fbbd4b51df1f2efaccfb38ef549b5" translate="yes" xml:space="preserve">
          <source>The examples are sorted in order of increasing difficulty. But rather than just presenting them in a single long list, they are additionally divided into topics. Sometimes we revisit a topic several times, such as when needing to discuss it initially at a basic level, and later at intermediate and advanced levels.</source>
          <target state="translated">例題は難易度の高い順に並べられています。しかし、それらを一つの長いリストにまとめて紹介するのではなく、さらにトピックごとに分けています。最初は基礎レベル、後に中級・上級レベルで議論が必要な場合など、何度かトピックを見直すこともあります。</target>
        </trans-unit>
        <trans-unit id="10fac92da9399efbc7aceb186d7276c6b2bd9333" translate="yes" xml:space="preserve">
          <source>The examples described here should be taken together to get a better understanding of how service workers scope applies to a page.</source>
          <target state="translated">ここで説明した例は、サービスワーカーのスコープがページにどのように適用されるかを理解するために一緒に取る必要があります。</target>
        </trans-unit>
        <trans-unit id="a4f35e827cf90f5fa408491f19ef282af9f91bf3" translate="yes" xml:space="preserve">
          <source>The exception is if another element was already in full-screen mode when the current element was placed into full-screen mode using &lt;code&gt;requestFullscreen()&lt;/code&gt;. In that case, the previous full-screen element is restored to full-screen status instead. In essence, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Stack_(abstract_data_type)&quot;&gt;stack&lt;/a&gt; of full-screen elements is maintained.</source>
          <target state="translated">例外は、 &lt;code&gt;requestFullscreen()&lt;/code&gt; を使用して現在の要素がフルスクリーンモードにされたときに、別の要素がすでにフルスクリーンモードになっていた場合です。その場合、以前の全画面要素は代わりに全画面ステータスに復元されます。本質的に、フルスクリーン要素の&lt;a href=&quot;https://en.wikipedia.org/wiki/Stack_(abstract_data_type)&quot;&gt;スタック&lt;/a&gt;が維持されます。</target>
        </trans-unit>
        <trans-unit id="22226988c671f551ab2bc4ebd3599926f96a5964" translate="yes" xml:space="preserve">
          <source>The exception to this is Chrome, starting with version 56 (desktop, Chrome for android, and android webview), where the default value for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and calls to &lt;a href=&quot;event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; are not needed. To override this behavior, you simply set the &lt;code&gt;passive&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; as shown in the example below. This change prevents the listener from blocking page rendering while a user is scrolling. A demo is available on the &lt;a href=&quot;https://developers.google.com/web/updates/2016/06/passive-event-listeners&quot;&gt;Google Developer&lt;/a&gt; site.</source>
          <target state="translated">これの例外はChromeで、バージョン56以降（デスクトップ、Android向けChrome、およびandroid webview）で、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; のデフォルト値は &lt;code&gt;true&lt;/code&gt; であり、&lt;a href=&quot;event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; の&lt;/a&gt;呼び出しは必要ありません。この動作をオーバーライドするには、以下の例に示すように、 &lt;code&gt;passive&lt;/code&gt; オプションを &lt;code&gt;false&lt;/code&gt; に設定するだけです。この変更により、ユーザーがスクロールしている間、リスナーはページのレンダリングをブロックしなくなります。デモは、&lt;a href=&quot;https://developers.google.com/web/updates/2016/06/passive-event-listeners&quot;&gt;Google Developer&lt;/a&gt;サイトで入手できます。</target>
        </trans-unit>
        <trans-unit id="30b0f285c8e2ca73b2fdc67c22882ba9aa5d84cc" translate="yes" xml:space="preserve">
          <source>The exception to this is if the worker script's origin is a globally unique identifier (for example, if its URL has a scheme of data or blob). In this case, the worker does inherit the CSP of the document or worker that created it.</source>
          <target state="translated">この例外は、ワーカースクリプトのオリジンがグローバルに一意な識別子である場合です (たとえば、URL にデータやブロブのスキームがある場合など)。この場合、ワーカーはそれを作成したドキュメントやワーカーの CSP を継承します。</target>
        </trans-unit>
        <trans-unit id="f8519e2c3bfeefcc7dd7c21b04d3c9bc548ff322" translate="yes" xml:space="preserve">
          <source>The existing file or directory is removed and replaced with a new one, then the &lt;code&gt;successCallback&lt;/code&gt; is called with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt;, as appropriate.</source>
          <target state="translated">既存のファイルまたはディレクトリが削除され、その後、新しいものと交換され &lt;code&gt;successCallback&lt;/code&gt; がで呼び出され&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt; &lt;code&gt;FileSystemFileEntry&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt; &lt;/a&gt;必要に応じて、。</target>
        </trans-unit>
        <trans-unit id="4ff272e359e600a067730f5aba42a8ffbc75bf0f" translate="yes" xml:space="preserve">
          <source>The explanation of these two lines above can be found at &quot;Example of pushState() method&quot; section. Then suppose http://mozilla.org/bar.html executes the following JavaScript:</source>
          <target state="translated">上記2行の説明は「pushState()メソッドの例」の項にあります。次に、http://mozilla.org/bar.html が以下の JavaScript を実行したとします。</target>
        </trans-unit>
        <trans-unit id="1277ac3fa87993a0996df3f4be0accd9524bd2b0" translate="yes" xml:space="preserve">
          <source>The explicit original target of the event (Mozilla-specific).</source>
          <target state="translated">イベントの明示的な元のターゲット (Mozilla 固有)。</target>
        </trans-unit>
        <trans-unit id="6910929879bb764792e06c30a4e30029bf5ccaa8" translate="yes" xml:space="preserve">
          <source>The extension is activated by default to privileged contexts (chrome context).</source>
          <target state="translated">この拡張機能は、特権的なコンテキスト(クロームのコンテキスト)に対してデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="c13a854923903e14f4079b976cdc6ca6c31b7642" translate="yes" xml:space="preserve">
          <source>The extensions selected by the server.</source>
          <target state="translated">サーバーが選択した拡張子。</target>
        </trans-unit>
        <trans-unit id="e309dfba5028c5803c72dbe68930bc337160cf10" translate="yes" xml:space="preserve">
          <source>The external &lt;code&gt;Node&lt;/code&gt; or &lt;code&gt;DocumentFragment&lt;/code&gt; to import into the current document.</source>
          <target state="translated">現在の &lt;code&gt;DocumentFragment&lt;/code&gt; にインポートする外部 &lt;code&gt;Node&lt;/code&gt; またはDocumentFragment。</target>
        </trans-unit>
        <trans-unit id="ac91a64226017517f660dfede885dfecdd15c3a0" translate="yes" xml:space="preserve">
          <source>The fallback content is displayed in browsers which do not support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;. Scripts can also check for support programmatically by simply testing for the presence of the &lt;code&gt;getContext()&lt;/code&gt; method. Our code snippet from above becomes something like this:</source>
          <target state="translated">代替コンテンツは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; を&lt;/a&gt;サポートしていないブラウザーで表示されます。スクリプトは、 &lt;code&gt;getContext()&lt;/code&gt; メソッドの存在をテストするだけで、プログラムでサポートを確認することもできます。上記のコードスニペットは次のようになります。</target>
        </trans-unit>
        <trans-unit id="4b91aad8b5c89d86e1af945284e7f658835e0f0a" translate="yes" xml:space="preserve">
          <source>The fastest, most widely useable, most standard, and most future-ready way to solve the unicode problem is by transforming the UTF16 into UTF8-in-16 then use &lt;code&gt;btoa&lt;/code&gt; on the UTF8-in-16 string. To understand this deeper, UTF16 uses 16 bits as the smallest unit of measure whereas UTF8 uses 8 bits as the smallest unit of measure. This means that the smallest a UTF16 character can be is 16 bits (2 bytes) meanwhile the smallest a UTF8 character can be is 8 bits (1 byte). Then, UTF8-in-16 is making the string encoded as UTF-8, but storing it as a UTF-16 string by only using 8 (from UTF8) of the 16 bits in each unit of measure of a UTF-16 string. This method is incredibly efficient because all it takes is a single simple super fast &lt;code&gt;String.prototype.replace&lt;/code&gt; to convert between UTF-16 and UTF8-in-16. There is no need to encode the string as an array buffer then reencode it as a string. Rather, the below code simply and straightforwardly converts it in a single &lt;code&gt;String.prototype.replace&lt;/code&gt;.</source>
          <target state="translated">ユニコードの問題を解決するための最も速く、最も広く使用され、最も標準的で、将来に対応できる方法は、UTF16をUTF8-in-16に &lt;code&gt;btoa&lt;/code&gt; し、UTF8-in-16文字列でbtoaを使用することです。これをより深く理解するために、UTF16は最小の測定単位として16ビットを使用しますが、UTF8は最小の測定単位として8ビットを使用します。つまり、UTF16文字の最小値は16ビット（2バイト）であり、UTF8文字の最小値は8ビット（1バイト）です。次に、UTF8-in-16は文字列をUTF-8としてエンコードしますが、UTF-16文字列の各測定単位で16ビットの8（UTF8から）を使用するだけで、UTF-16文字列として保存します。このメソッドは、1つの単純な超高速 &lt;code&gt;String.prototype.replace&lt;/code&gt; だけなので、非常に効率的です。UTF-16とUTF8-in-16の間で変換します。文字列を配列バッファとしてエンコードしてから、文字列として再エンコードする必要はありません。むしろ、以下のコードはそれを単一の &lt;code&gt;String.prototype.replace&lt;/code&gt; に単純かつ直接変換します。</target>
        </trans-unit>
        <trans-unit id="1eb0439c89ec942edaf35bee7f451751e60e6db8" translate="yes" xml:space="preserve">
          <source>The feature flags are:</source>
          <target state="translated">特徴的なフラグは</target>
        </trans-unit>
        <trans-unit id="d78931753a768075720670b6d0c635cb4bd6383e" translate="yes" xml:space="preserve">
          <source>The fetch operation is complete. This could mean that either the data transfer has been completed successfully or failed.</source>
          <target state="translated">フェッチ操作が完了しました。これは、データ転送が正常に完了したか、失敗したことを意味します。</target>
        </trans-unit>
        <trans-unit id="56dbdd3e402541ac1d372f18c7d8b43d4a602ed5" translate="yes" xml:space="preserve">
          <source>The fetching of the associated resource was aborted by the user's request.</source>
          <target state="translated">関連するリソースのフェッチは、ユーザーのリクエストによって中断されました。</target>
        </trans-unit>
        <trans-unit id="3fda7923e670cbb03dc610fc589565c64ea62572" translate="yes" xml:space="preserve">
          <source>The field &lt;code&gt;&quot;4234997325&quot;&lt;/code&gt; is the foundation.</source>
          <target state="translated">フィールド &lt;code&gt;&quot;4234997325&quot;&lt;/code&gt; が基礎です。</target>
        </trans-unit>
        <trans-unit id="aa6e03b19e42e2b21d5f72e46496dad12d3fe18b" translate="yes" xml:space="preserve">
          <source>The field of view (FOV) is the area that each of the user's eyes can reasonably be expected to see. It roughly takes the form of a pyramid shape, laid down on one side, with the apex inside the user's head, and the rest of the pyramid eminating from the user's eye. Each eye has it's own FOV, one slightly overlapping the other.</source>
          <target state="translated">視野(Field of View:FOV)とは、ユーザーの各目が合理的に期待できる範囲のことです。大まかにはピラミッド型の形をしていて、片側には頂点がユーザーの頭の中にあり、ピラミッドの残りの部分はユーザーの目から出ています。各目は、それ自身のFOV、1つはわずかに他の重複を持っています。</target>
        </trans-unit>
        <trans-unit id="10d14155e011fc16ca9a27e8dac5391b405cc649" translate="yes" xml:space="preserve">
          <source>The field's value. In the two parameter version this is a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;, or if it is not, it is converted to a string. In the three parameter version this can be a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;. If none of these are specified the value is converted to a string.</source>
          <target state="translated">フィールドの値。2パラメータバージョンでは、これは&lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です。そうでない場合は、文字列に変換されます。3つのパラメータバージョンでは、これは&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; になり&lt;/a&gt;ます。これらのいずれも指定されていない場合、値は文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="3354d8eb8f5abb92146eb5f3ad94f0724bc1bc2e" translate="yes" xml:space="preserve">
          <source>The field's value. This can be a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; (including subclasses such as &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">フィールドの値。これは、&lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;などのサブクラスを含む）にすることができます。</target>
        </trans-unit>
        <trans-unit id="e3188488e0ada5fc9580eac41e3ef8e893115f68" translate="yes" xml:space="preserve">
          <source>The fifth field, &lt;code&gt;&quot;192.168.0.56&quot;&lt;/code&gt; is the IP address in this candidate's a-line string.</source>
          <target state="translated">5番目のフィールド &lt;code&gt;&quot;192.168.0.56&quot;&lt;/code&gt; は、この候補者のa行ストリングのIPアドレスです。</target>
        </trans-unit>
        <trans-unit id="ad8e058e84bf3bc453cf035cfc7f2bf238000df0" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="translated">ファイル名です。</target>
        </trans-unit>
        <trans-unit id="632ce2d43319e70accda4feb98f4a2f96d7c3c21" translate="yes" xml:space="preserve">
          <source>The file or directory cannot be read, typically due to permission problems that occur after a reference to a file has been acquired (for example, the file or directory is concurrently locked by another application).</source>
          <target state="translated">ファイルやディレクトリが読めないのは、通常、ファイルへの参照が取得された後に発生するパーミッションの問題が原因です(例えば、ファイルやディレクトリが他のアプリケーションによって同時にロックされているなど)。</target>
        </trans-unit>
        <trans-unit id="eaf3af37a20cc4629e47a06fdf7218ad1df6dab6" translate="yes" xml:space="preserve">
          <source>The file or directory doesn't exist.</source>
          <target state="translated">ファイルまたはディレクトリが存在しません。</target>
        </trans-unit>
        <trans-unit id="69fd751b10f330d57bc6830fca01b200cc5979a1" translate="yes" xml:space="preserve">
          <source>The file or directory is created, then a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; is passed to the &lt;code&gt;successCallback&lt;/code&gt;, as appropriate.</source>
          <target state="translated">ファイルまたはディレクトリが作成され、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt; &lt;code&gt;FileSystemFileEntry&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt; &lt;/a&gt;が適宜、 &lt;code&gt;successCallback&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="80613ac1ccc857f1d9d499b91e6976c56d48ef78" translate="yes" xml:space="preserve">
          <source>The file or directory with the same path already exists.</source>
          <target state="translated">同じパスのファイルまたはディレクトリが既に存在します。</target>
        </trans-unit>
        <trans-unit id="b43a0beac9c2bfb7e5594bc005c840834e39c8cb" translate="yes" xml:space="preserve">
          <source>The file system's cached state is inconsistent with its state on disk, so the file could not be deleted for safety reasons.</source>
          <target state="translated">ファイルシステムのキャッシュされた状態とディスク上の状態が矛盾しているため、安全のためにファイルを削除することができませんでした。</target>
        </trans-unit>
        <trans-unit id="39b524be960a9c15e5e7e9a3446f024149a488e3" translate="yes" xml:space="preserve">
          <source>The file system's state doesn't permit modification.</source>
          <target state="translated">ファイルシステムの状態は変更を許可していません。</target>
        </trans-unit>
        <trans-unit id="4d67f76631b2236dfe7e9bf0a70d93eddfe5873a" translate="yes" xml:space="preserve">
          <source>The file system's state doesn't permit removing the file or directory.</source>
          <target state="translated">ファイルシステムの状態は、ファイルやディレクトリの削除を許可していません。</target>
        </trans-unit>
        <trans-unit id="5edbbc83f9720b889ab40000dfb7bed45bd9e759" translate="yes" xml:space="preserve">
          <source>The file's contents. This property is only valid after the read operation is complete, and the format of the data depends on which of the methods was used to initiate the read operation.</source>
          <target state="translated">ファイルの内容。このプロパティは読み込み操作が完了した後にのみ有効であり、データのフォーマットは、どのメソッドが読み込み操作を開始するのに使用されたかに依存します。</target>
        </trans-unit>
        <trans-unit id="c380dfd7ffe5491af5513fac453ccd93bbe3d11b" translate="yes" xml:space="preserve">
          <source>The file's name as a read-only string. This is just the file name, and does not include any path information.</source>
          <target state="translated">読み取り専用の文字列としてのファイル名。これはファイル名のみで、パス情報は含まれません。</target>
        </trans-unit>
        <trans-unit id="81070cd9d4541cf3bd6dbf57258163bcd7f563a9" translate="yes" xml:space="preserve">
          <source>The filename of the plugin file.</source>
          <target state="translated">プラグインファイルのファイル名。</target>
        </trans-unit>
        <trans-unit id="6b6536d8ffb16ab72dddc638d7282bff672a92d6" translate="yes" xml:space="preserve">
          <source>The filename reported to the server (a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;), when a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; is passed as the second parameter. The default filename for &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects is &quot;blob&quot;.</source>
          <target state="translated">&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;が2番目のパラメーターとして渡されたときにサーバーに報告されるファイル名（&lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;）。&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;オブジェクトのデフォルトのファイル名は「blob」です。</target>
        </trans-unit>
        <trans-unit id="3de5eecaa230a26b7b686e9c16cefc8ea6fe277a" translate="yes" xml:space="preserve">
          <source>The filename reported to the server (a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;), when a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; is passed as the second parameter. The default filename for &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects is &quot;blob&quot;. The default filename for &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects is the file's filename.</source>
          <target state="translated">&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;が2番目のパラメーターとして渡されたときにサーバーに報告されるファイル名（&lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;）。&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;オブジェクトのデフォルトのファイル名は「blob」です。&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトのデフォルトのファイル名は、ファイルのファイル名です。</target>
        </trans-unit>
        <trans-unit id="89fa17885b340cacbae18cc7fef431b7aca99911" translate="yes" xml:space="preserve">
          <source>The files might be unsafe for access within a Web application.</source>
          <target state="translated">Webアプリケーション内でのアクセスは、ファイルが安全でない可能性があります。</target>
        </trans-unit>
        <trans-unit id="36ddc8290ee0db3747d1076d5ea8c8def7bc09bb" translate="yes" xml:space="preserve">
          <source>The fill rule to use (defaults to &lt;code&gt;&quot;nonzero&quot;&lt;/code&gt;).</source>
          <target state="translated">使用する塗りつぶしルール（デフォルトは &lt;code&gt;&quot;nonzero&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9b46470f274d1f6dd46add5efe0bcc4cd3f42ee0" translate="yes" xml:space="preserve">
          <source>The filter button's &lt;code&gt;click&lt;/code&gt; handler then connects the &lt;code&gt;IIRFilter&lt;/code&gt; up to the graph, between the source and the detination:</source>
          <target state="translated">次に、フィルターボタンの &lt;code&gt;click&lt;/code&gt; ハンドラーは、ソースと宛先の間で &lt;code&gt;IIRFilter&lt;/code&gt; をグラフに接続します。</target>
        </trans-unit>
        <trans-unit id="52f5498ede33ad9e1fce6a7fd3c59c1878954622" translate="yes" xml:space="preserve">
          <source>The filter parameters of biquad filters can be automated.</source>
          <target state="translated">バイクワッドフィルターのフィルターパラメーターを自動化することができます。</target>
        </trans-unit>
        <trans-unit id="8bdb96218b2326296b6923a3a2b9d2c01e79ec29" translate="yes" xml:space="preserve">
          <source>The final benefit of using homogeneous coordinates is that they fit very nicely for multiplying against 4x4 matrices. A vertex must match at least one of the dimensions of a matrix in order to be multiplied against it. The 4x4 matrix can be used to encode a variety of useful transformations. In fact, the typical perspective matrix uses the division by the w component to achieve its transformation.</source>
          <target state="translated">均質座標を使う最後の利点は、4x4 の行列に対して乗算するのに非常に適しているということです。頂点は,行列に対して乗算されるためには,行列の次元の少なくとも1つと一致しなければなりません.4x4 の行列は,様々な有用な変換を符号化するために利用することができます.実際,典型的な透視図行列は,w 成分による除算を用いて変換を行います.</target>
        </trans-unit>
        <trans-unit id="00605c111560c463640d3249808cfe2f47a9cd34" translate="yes" xml:space="preserve">
          <source>The final matrix is the view matrix that represents the camera's location in space. Imagine shooting a movie with a physical camera. This matrix represents the position and rotation of that physical camera.</source>
          <target state="translated">最終的なマトリックスは、空間内でのカメラの位置を表すビューマトリックスです。物理的なカメラで動画を撮影することを想像してみてください。この行列は、その物理カメラの位置と回転を表します。</target>
        </trans-unit>
        <trans-unit id="ad69495174843fb647a705e9427581feb52a59c5" translate="yes" xml:space="preserve">
          <source>The final playNoise() function</source>
          <target state="translated">最終的な playNoise()関数</target>
        </trans-unit>
        <trans-unit id="324e91e258c535001184a64afe2522cde7ee2fe2" translate="yes" xml:space="preserve">
          <source>The final playPulse() function</source>
          <target state="translated">最終的な playPulse()関数</target>
        </trans-unit>
        <trans-unit id="0b56a1bc1c34c4fae5e8638bab089638125649bc" translate="yes" xml:space="preserve">
          <source>The final playSample() function</source>
          <target state="translated">最後の playSample()関数</target>
        </trans-unit>
        <trans-unit id="3aaf2e530b4d5182665fdfc720b487947fa49a4d" translate="yes" xml:space="preserve">
          <source>The final playSweep() function</source>
          <target state="translated">最終的な playSweep()関数</target>
        </trans-unit>
        <trans-unit id="fa8198bc1580cf36e261386c7aeb9306468e4f12" translate="yes" xml:space="preserve">
          <source>The final product is below.</source>
          <target state="translated">最終的に出来上がったものは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="867be82d5ed9befcbda74db6c5fa227407af3135" translate="yes" xml:space="preserve">
          <source>The final state for the modified object tree looks like this:</source>
          <target state="translated">変更されたオブジェクトツリーの最終的な状態は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="5d46e8cc4b5751bf83bfe5cd15af4c0ad3a07b92" translate="yes" xml:space="preserve">
          <source>The final step in all of this is to create the view matrix. Right now we can move the cube around world space. We can project everything to have perspective, but we still can't move the camera.</source>
          <target state="translated">最後のステップは、ビューマトリクスを作成することです。今はキューブをワールドスペースの周りで動かすことができます。すべてを投影して遠近感を持たせることはできますが、カメラを動かすことはできません。</target>
        </trans-unit>
        <trans-unit id="ce4584fb645860860a6b0db032e6df9eb79970b7" translate="yes" xml:space="preserve">
          <source>The final step is to begin sending the local video across the peer connection to the caller. This is done by adding each track in the stream by iterating over the list returned by &lt;a href=&quot;../mediastream/gettracks&quot;&gt;&lt;code&gt;MediaStream.getTracks()&lt;/code&gt;&lt;/a&gt; and passing them to &lt;code&gt;addTrack()&lt;/code&gt; along with the &lt;code&gt;stream&lt;/code&gt; which they're a component of.</source>
          <target state="translated">最後のステップは、ピア接続を介してローカルビデオを発信者に送信することです。これは、&lt;a href=&quot;../mediastream/gettracks&quot;&gt; &lt;code&gt;MediaStream.getTracks()&lt;/code&gt; &lt;/a&gt;によって返されたリストを反復処理してストリームに各トラックを追加し、それらがコンポーネントである &lt;code&gt;stream&lt;/code&gt; と共に &lt;code&gt;addTrack()&lt;/code&gt; に渡すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="570539a8aa79f8bc40bc1f75446088e7f020130c" translate="yes" xml:space="preserve">
          <source>The final step is to call the event's &lt;a href=&quot;paymentrequestupdateevent/updatewith&quot;&gt;&lt;code&gt;updateWith()&lt;/code&gt;&lt;/a&gt; method, passing along the &lt;code&gt;updateDetails&lt;/code&gt; object. This lets the Payment Request API know to present the specified error or errors but to allow the user to keep trying to edit the address.</source>
          <target state="translated">最後のステップは、イベントの&lt;a href=&quot;paymentrequestupdateevent/updatewith&quot;&gt; &lt;code&gt;updateWith()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、 &lt;code&gt;updateDetails&lt;/code&gt; オブジェクトを渡すことです。これにより、Payment Request APIは、指定された1つまたは複数のエラーを表示することを認識できますが、ユーザーはアドレスを編集し続けることができます。</target>
        </trans-unit>
        <trans-unit id="bd241113c1e5c0f46cced24fc28f6d78629fc37a" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; that matches at least one of the specified selectors or &lt;code&gt;null&lt;/code&gt; if no such element is found.</source>
          <target state="translated">指定されたセレクターの少なくとも1つに一致する最初の&lt;a href=&quot;../element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;、またはそのような要素が見つからない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48b993b4eee70e24296cc068e08abb4f45676f1d" translate="yes" xml:space="preserve">
          <source>The first VR gaming attempts were big and expensive &amp;mdash; in 1991 Virtuality Group created a VR-ready arcade machine with goggles and ported popular titles like Pac-Man to virtual reality. Sega introduced their VR glasses at the Consumer Electronics Show in 1993. Companies were experimenting, but the market and consumers weren't convinced &amp;mdash; we had to wait until 2012 to see a real example of a successful VR project.</source>
          <target state="translated">最初のVRゲームの試みは大きく高価でした。1991年、Virtuality Groupはゴーグルを備えたVR対応のアーケードマシンを作成し、パックマンなどの人気タイトルをバーチャルリアリティに移植しました。Segaは1993年のConsumer Electronics ShowでVRメガネを発表しました。企業は実験を行っていましたが、市場と消費者は確信していませんでした。成功したVRプロジェクトの実例を見るには、2012年まで待たなければなりませんでした。</target>
        </trans-unit>
        <trans-unit id="84d98db23377209c1bc30f4f2722526baf0d3ab7" translate="yes" xml:space="preserve">
          <source>The first WebVR-related code you'll meet is this following block:</source>
          <target state="translated">最初に出会うWebVR関連のコードは、以下のブロックです。</target>
        </trans-unit>
        <trans-unit id="3591de3d1ee4b24c8f6bd5bd5becf7eae3ad1d0a" translate="yes" xml:space="preserve">
          <source>The first and most common way to use constraints is to specify them when you call &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">制約を使用する最初の最も一般的な方法は、&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;getUserMedia()&lt;/code&gt; &lt;/a&gt;を呼び出すときに制約を指定することです。</target>
        </trans-unit>
        <trans-unit id="331c1b6d80b6c3fc30bec4a4193823b222b3b294" translate="yes" xml:space="preserve">
          <source>The first and most important step is to ensure that your files are comprised of a container and codec that users' browsers support.</source>
          <target state="translated">最初の最も重要なステップは、ファイルがユーザーのブラウザがサポートするコンテナとコーデックで構成されていることを確認することです。</target>
        </trans-unit>
        <trans-unit id="8950b87744377556f8d6d7edb3e9c54abf49f635" translate="yes" xml:space="preserve">
          <source>The first argument must be an Element (passing a non-Element Node, like a #text Node, will throw an error). Starting in Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0), returned URL values now have quotes around the URL, like this: &lt;code&gt;url(&quot;http://foo.com/bar.jpg&quot;)&lt;/code&gt;.</source>
          <target state="translated">最初の引数は要素でなければなりません（#textノードのような非要素ノードを渡すとエラーがスローされます）。Gecko 1.9.2（Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0）以降、返されるURL値は、次のようにURLを引用符で囲んでいます： &lt;code&gt;url(&quot;http://foo.com/bar.jpg&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cfbc28c7d5f2806b45230c62b15184378f52a30" translate="yes" xml:space="preserve">
          <source>The first block of code in our app&amp;rsquo;s JavaScript file &amp;mdash; &lt;code&gt;app.js&lt;/code&gt; &amp;mdash; is as follows. This is our entry point into using service workers.</source>
          <target state="translated">アプリのJavaScriptファイルの最初のコードブロック（ &lt;code&gt;app.js&lt;/code&gt; ）は次のとおりです。これは、Service Workerを使用するためのエントリポイントです。</target>
        </trans-unit>
        <trans-unit id="5f959c2327f01dee2fb370c127fa4bbfbfef53bc" translate="yes" xml:space="preserve">
          <source>The first box has a threshold for each percentage point of visibility; that is, the &lt;a href=&quot;intersectionobserver/thresholds&quot;&gt;&lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt;&lt;/a&gt; array is &lt;code&gt;[0.00, 0.01, 0.02, ..., 0.99, 1.00]&lt;/code&gt;.</source>
          <target state="translated">最初のボックスには、可視性の各パーセンテージポイントのしきい値があります。つまり、&lt;a href=&quot;intersectionobserver/thresholds&quot;&gt; &lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt; &lt;/a&gt;配列は &lt;code&gt;[0.00, 0.01, 0.02, ..., 0.99, 1.00]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b55ed6b72e6c7ff3b9e01a406f479b6de87a1388" translate="yes" xml:space="preserve">
          <source>The first byte, which currently has a value of 129, is a bitfield that breaks down as such:</source>
          <target state="translated">現在129の値を持つ最初のバイトは、このように分解されたビットフィールドです。</target>
        </trans-unit>
        <trans-unit id="ca43fffdc4d1e175514fde1142052460fae3a8ef" translate="yes" xml:space="preserve">
          <source>The first call fails because the value of &lt;code&gt;useCapture&lt;/code&gt; doesn't match. The second succeeds, since &lt;code&gt;useCapture&lt;/code&gt; matches up.</source>
          <target state="translated">&lt;code&gt;useCapture&lt;/code&gt; の値が一致しないため、最初の呼び出しは失敗します。 &lt;code&gt;useCapture&lt;/code&gt; が一致するため、2番目は成功します。</target>
        </trans-unit>
        <trans-unit id="be59595a03723d63c603d9799011c1806e6b5160" translate="yes" xml:space="preserve">
          <source>The first call to &lt;code&gt;setAttribute()&lt;/code&gt; above shows changing the &lt;code&gt;name&lt;/code&gt; attribute's value to &quot;helloButton&quot;. You can see this using your browser's page inspector (&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/inspect-styles&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/f12-devtools-guide/dom-explorer&quot;&gt;Edge&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector&quot;&gt;Firefox&lt;/a&gt;, &lt;a href=&quot;https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Introduction/Introduction.html&quot;&gt;Safari&lt;/a&gt;).</source>
          <target state="translated">上記の &lt;code&gt;setAttribute()&lt;/code&gt; への最初の呼び出しは、 &lt;code&gt;name&lt;/code&gt; 属性の値を「helloButton」に変更することを示しています。これは、ブラウザーのページインスペクター（&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/inspect-styles&quot;&gt;Chrome&lt;/a&gt;、&lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/f12-devtools-guide/dom-explorer&quot;&gt;Edge&lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector&quot;&gt;Firefox&lt;/a&gt;、&lt;a href=&quot;https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Introduction/Introduction.html&quot;&gt;Safari&lt;/a&gt;）を使用して確認できます。</target>
        </trans-unit>
        <trans-unit id="99eaf7c8b732a2b8e8f019d46c798c4a6827d7af" translate="yes" xml:space="preserve">
          <source>The first column in the table will be labeled &lt;code&gt;(index)&lt;/code&gt;. If &lt;code&gt;data&lt;/code&gt; is an array, then its values will be the array indices. If &lt;code&gt;data&lt;/code&gt; is an object, then its values will be the property names. Note that (in Firefox) &lt;code&gt;console.table&lt;/code&gt; is limited to displaying 1000 rows (first row is the labeled index).</source>
          <target state="translated">表の最初の列には &lt;code&gt;(index)&lt;/code&gt; というラベルが付けられます。場合 &lt;code&gt;data&lt;/code&gt; 配列され、その値は、配列インデックスであろう。場合は &lt;code&gt;data&lt;/code&gt; 対象で、その値がプロパティ名となります。 （Firefoxでは） &lt;code&gt;console.table&lt;/code&gt; は1000行の表示に制限されていることに注意してください（最初の行はラベル付きインデックスです）。</target>
        </trans-unit>
        <trans-unit id="84b8543c58d7845244cffa26d39a0f08f5c6dd53" translate="yes" xml:space="preserve">
          <source>The first definition looks like this, for example:</source>
          <target state="translated">最初の定義は、例えば次のようになります。</target>
        </trans-unit>
        <trans-unit id="788d6784a71d91536479eaf783074ddf5fc19c03" translate="yes" xml:space="preserve">
          <source>The first descendant element of &lt;code&gt;baseElement&lt;/code&gt; which matches the specified group of &lt;code&gt;selectors&lt;/code&gt;. The entire hierarchy of elements is considered when matching, including those outside the set of elements including &lt;code&gt;baseElement&lt;/code&gt; and its descendants; in other words, &lt;code&gt;selectors&lt;/code&gt; is first applied to the whole document, not the &lt;code&gt;baseElement&lt;/code&gt;, to generate an initial list of potential elements. The resulting elements are then examined to see if they are descendants of &lt;code&gt;baseElement&lt;/code&gt;. The first match of those remaining elements is returned by the &lt;code&gt;querySelector()&lt;/code&gt; method.</source>
          <target state="translated">指定された &lt;code&gt;selectors&lt;/code&gt; グループに一致する &lt;code&gt;baseElement&lt;/code&gt; の最初の子孫要素。要素の階層全体は、 &lt;code&gt;baseElement&lt;/code&gt; とその子孫を含む要素のセットの外側のものも含め、照合時に考慮されます。言い換えると、 &lt;code&gt;selectors&lt;/code&gt; はまず &lt;code&gt;baseElement&lt;/code&gt; ではなくドキュメント全体に適用され、潜在的な要素の初期リストが生成されます。次に、結果の要素が &lt;code&gt;baseElement&lt;/code&gt; の子孫であるかどうかを調べます。これらの残りの要素の最初の一致は、 &lt;code&gt;querySelector()&lt;/code&gt; メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="7e568e5722c78c70ce3da97d306917cda9f5ff6f" translate="yes" xml:space="preserve">
          <source>The first example logs text to the console.</source>
          <target state="translated">最初の例では、コンソールにテキストを記録しています。</target>
        </trans-unit>
        <trans-unit id="48414741b9083c04a7db4bfa41118f573396eda8" translate="yes" xml:space="preserve">
          <source>The first is a background gradient. As you can see, we assigned two colors at the same position. You do this to make very sharp color transitions&amp;mdash;in this case from white to green. Normally, it doesn't matter in what order you define the color stops, but in this special case, it does significantly. If you keep the assignments in the order you want them to appear, this won't be a problem.</source>
          <target state="translated">最初は背景のグラデーションです。ご覧のとおり、同じ位置に2つの色を割り当てています。これを行うのは、非常にシャープな色の遷移（この場合は白から緑）を行うためです。通常、カラーストップを定義する順序は重要ではありませんが、この特別なケースでは重要です。割り当てを表示したい順序に保つ場合、これは問題になりません。</target>
        </trans-unit>
        <trans-unit id="df03a278897710c82f9b8a5aabc081e57111fba3" translate="yes" xml:space="preserve">
          <source>The first key to compare.</source>
          <target state="translated">最初に比較するキーになります。</target>
        </trans-unit>
        <trans-unit id="56c5ac737365711611e9afb70c4b2ab071d9d493" translate="yes" xml:space="preserve">
          <source>The first keyframe says that when the animation begins, the element should be rotated 90&amp;deg; to the left. That means that unless we specify otherwise using the &lt;code&gt;fill&lt;/code&gt; property, the instant the animation is started the element will be rotated to the left 90&amp;deg;, and then it will animate smoothly from there. Since by default the box isn't rotated,</source>
          <target state="translated">最初のキーフレームは、アニメーションの開始時に、要素を左に90度回転する必要があることを示しています。つまり、 &lt;code&gt;fill&lt;/code&gt; プロパティを使用して特に指定しない限り、アニメーションが開始されるとすぐに、要素は左に90度回転し、そこからスムーズにアニメーション化します。デフォルトではボックスは回転しないため、</target>
        </trans-unit>
        <trans-unit id="12e1545247441aee9395b9fe18c70dea3c04cc7a" translate="yes" xml:space="preserve">
          <source>The first line &amp;mdash; &lt;code&gt;#JSGF V1.0;&lt;/code&gt; &amp;mdash; states the format and version used. This always needs to be included first.</source>
          <target state="translated">最初の行&amp;mdash; &lt;code&gt;#JSGF V1.0;&lt;/code&gt; &amp;mdash;使用されるフォーマットとバージョンを示します。これは常に最初に含める必要があります。</target>
        </trans-unit>
        <trans-unit id="0032b15fcff8370e6da1d2ee862f6b4019957aa1" translate="yes" xml:space="preserve">
          <source>The first line begins at (50, 50) and ends at (200, 50). The second line begins at (50, 90) and ends at (280, 120).</source>
          <target state="translated">1行目は(50,50)で始まり、(200,50)で終わる。2行目は(50,90)で始まり、(280,120)で終わる。</target>
        </trans-unit>
        <trans-unit id="f310f19db24cbc0f13fa489c2f82f957f6e78400" translate="yes" xml:space="preserve">
          <source>The first line demonstrates no settings. The second line might be used to overlay text on a sign or label. The third line might be used for a title. The last line might be used for an Asian language.</source>
          <target state="translated">1 行目は何も設定していないことを示しています。2 行目は、サインやラベルにテキストをオーバーレイするために使われるかもしれません。3 行目はタイトルに使用されるかもしれません。最後の行はアジアの言語に使用されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="8720f6c1fb151d8970e3680f1b8357a23b00d6ef" translate="yes" xml:space="preserve">
          <source>The first line in the script retrieves the node in the DOM representing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element by calling the &lt;a href=&quot;../../document/getelementbyid&quot;&gt;&lt;code&gt;document.getElementById()&lt;/code&gt;&lt;/a&gt; method. Once you have the element node, you can access the drawing context using its &lt;code&gt;getContext()&lt;/code&gt; method.</source>
          <target state="translated">スクリプトの最初の行は、&lt;a href=&quot;../../document/getelementbyid&quot;&gt; &lt;code&gt;document.getElementById()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を表すDOMのノードを取得します。要素ノードを &lt;code&gt;getContext()&lt;/code&gt; たら、そのgetContext（）メソッドを使用して描画コンテキストにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="ae7c7c03c7360630f867284fc7182182ad3395ec" translate="yes" xml:space="preserve">
          <source>The first line is started with a time, which is the starting time for showing the text that appears underneath</source>
          <target state="translated">の下に表示されるテキストを表示するための開始時刻である時間で最初の行が開始されます。</target>
        </trans-unit>
        <trans-unit id="c762a7e9fc09434c8ef1809437846680dafd5952" translate="yes" xml:space="preserve">
          <source>The first line of WebVTT is standardized similar in the way some other languages require you to put headers as the file starts to indicate the file type. One the very first line you have to write</source>
          <target state="translated">WebVTTの最初の行は、他のいくつかの言語がファイルの開始時にファイルタイプを示すためにヘッダを置くことを要求するのと似たような方法で標準化されています。最初の行では、次のように書かなければなりません。</target>
        </trans-unit>
        <trans-unit id="85eb65ea5aca3a19a2efd2f1831b0b0802e8a5d9" translate="yes" xml:space="preserve">
          <source>The first line of code in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event handler shown below takes the channel from the event object and saves it locally for use by the code handling data traffic.</source>
          <target state="translated">以下に示す &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; イベントハンドラーのコードの最初の行は、イベントオブジェクトからチャネルを取得し、データトラフィックを処理するコードで使用するためにローカルに保存します。</target>
        </trans-unit>
        <trans-unit id="814bacfed31bb1772ed089a172a9fc56132d192c" translate="yes" xml:space="preserve">
          <source>The first line of our &lt;code&gt;ontrack&lt;/code&gt; event handler takes the first stream in the incoming track and sets the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; attribute to that. This connects that stream of video to the element so that it begins to be presented to the user. The second line of code simply enables a &quot;hang up&quot; button, which the user can use to disconnect from the call.</source>
          <target state="translated">私たちの最初の行 &lt;code&gt;ontrack&lt;/code&gt; イベントハンドラは、着信トラックの最初のストリームを受け取り、設定 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; それに属性を。これにより、ビデオのストリームが要素に接続され、ユーザーへの表示が開始されます。コードの2行目は、単に「切断」ボタンを有効にするだけで、ユーザーはこのボタンを使用して通話を切断できます。</target>
        </trans-unit>
        <trans-unit id="1eccd03321a1a3ca70c68f6dcf86895e6f82b2d1" translate="yes" xml:space="preserve">
          <source>The first matrix discussed below is the model matrix, which defines how you take your original model data and move it around in 3d world space. In order to take world space coordinates and move them into the clip space cube, a projection matrix is needed. A common matrix used for projection is the perspective matrix, which mimics the effects of a typical camera. Finally if you want to move the camera around, a view matrix is needed to define the location of the camera in the scene.</source>
          <target state="translated">後述する最初の行列はモデル行列で、元のモデルデータをどのようにして 3D ワールド空間内で移動させるかを定義します。ワールドスペースの座標を取得してクリップスペースキューブに移動するには、投影行列が必要です。投影に使用される一般的な行列は透視図行列で、これは典型的なカメラの効果を模倣したものです。最後に、カメラを移動させたい場合は、シーン内でのカメラの位置を定義するためにビューマトリックスが必要です。</target>
        </trans-unit>
        <trans-unit id="8c46dc496bf04ad9c6faaadb9ecd69a6d6f71470" translate="yes" xml:space="preserve">
          <source>The first notable code is as follows:</source>
          <target state="translated">最初の注目すべきコードは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b88b7739664f5b7b87ce008264e7879d9a49a5cb" translate="yes" xml:space="preserve">
          <source>The first object can contain up to five members, only the first of which is required:</source>
          <target state="translated">最初のオブジェクトには最大5つのメンバーを含めることができますが、そのうちの1つ目のメンバーだけが必要です。</target>
        </trans-unit>
        <trans-unit id="0ba52a20378945a7c52cad1f3de86e43f721726f" translate="yes" xml:space="preserve">
          <source>The first object can contain up to four members, all of which are optional:</source>
          <target state="translated">最初のオブジェクトには最大4つのメンバーを含めることができますが、これらはすべてオプションです。</target>
        </trans-unit>
        <trans-unit id="49c6f93028565865ddb86377d4c5e7363ac609e7" translate="yes" xml:space="preserve">
          <source>The first of the transformation methods we'll look at is &lt;code&gt;translate()&lt;/code&gt;. This method is used to move the canvas and its origin to a different point in the grid.</source>
          <target state="translated">最初に取り上げる変換メソッドは、 &lt;code&gt;translate()&lt;/code&gt; です。このメソッドは、キャンバスとその原点をグリッド内の別のポイントに移動するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0663eafe01d74cd0ec5c9a55b98a40413018a3ef" translate="yes" xml:space="preserve">
          <source>The first of these three (&lt;code&gt;supportedInstruments&lt;/code&gt; in the example below) contains a &lt;code&gt;data&lt;/code&gt; property that has to conform to the structure defined by the &lt;a href=&quot;basiccardrequest&quot;&gt;&lt;code&gt;BasicCardRequest&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="translated">これら3つのうち1つ（以下の例では &lt;code&gt;supportedInstruments&lt;/code&gt; ）には、&lt;a href=&quot;basiccardrequest&quot;&gt; &lt;code&gt;BasicCardRequest&lt;/code&gt; &lt;/a&gt;ディクショナリで定義された構造に準拠する &lt;code&gt;data&lt;/code&gt; があるデータプロパティが含まれています。</target>
        </trans-unit>
        <trans-unit id="dff69f57fd921105cbdd3324668330cb01e2c34b" translate="yes" xml:space="preserve">
          <source>The first of these three (&lt;code&gt;supportedInstruments&lt;/code&gt; in the example below) contains a &lt;code&gt;data&lt;/code&gt; property that has to conform to the structure defined by the &lt;code&gt;BasicCardRequest&lt;/code&gt; dictionary.</source>
          <target state="translated">これら3つのうち1つ（以下の例では &lt;code&gt;supportedInstruments&lt;/code&gt; ）には、 &lt;code&gt;BasicCardRequest&lt;/code&gt; ディクショナリで定義された構造に準拠する &lt;code&gt;data&lt;/code&gt; があるデータプロパティが含まれています。</target>
        </trans-unit>
        <trans-unit id="324e8636181eff63275fedac32484dc4bb32178d" translate="yes" xml:space="preserve">
          <source>The first of three properties that declare the USB protocol version supported by the device.</source>
          <target state="translated">デバイスがサポートする USB プロトコルのバージョンを宣言する 3 つのプロパティのうち、最初のもの。</target>
        </trans-unit>
        <trans-unit id="8bcc9c9f16fe7cfff6c58038c277f32e05b28e9f" translate="yes" xml:space="preserve">
          <source>The first panel on the left contains two components: a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, which will receive the stream from WebRTC, and a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; the user clicks to capture a video frame.</source>
          <target state="translated">左側の最初のパネルには、WebRTCからストリームを受信する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素と、ユーザーがクリックしてビデオフレームをキャプチャする&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;という2つのコンポーネントが含まれています。</target>
        </trans-unit>
        <trans-unit id="fb12318e19ba283ab4a766a97df70ee2463af95d" translate="yes" xml:space="preserve">
          <source>The first row will be used specially for the site header. The rows are sized the same way as the columns: the first one is automatically sized and the one uses the remaining space, but at least enough space to provide room for all elements within it.</source>
          <target state="translated">最初の行はサイトヘッダーのために特別に使用されます。行は列と同じようにサイズが設定されます:最初のものは自動的にサイズが設定され、残りのスペースを使用しますが、少なくともその中のすべての要素のためのスペースを提供するのに十分なスペースを使用します。</target>
        </trans-unit>
        <trans-unit id="a998a25838e2f1a0b424915fd35a349e54c8cfe5" translate="yes" xml:space="preserve">
          <source>The first section of the JavaScript code establishes some variables we'll be using. &lt;code&gt;shipSize&lt;/code&gt; contains the size of the ship the player is moving around, for convenience. &lt;code&gt;position&lt;/code&gt; is used to track the position of the ship within the play field. &lt;code&gt;moveRate&lt;/code&gt; and &lt;code&gt;turnRate&lt;/code&gt; are the number of pixels forward and backward each keystroke moves the ship and how many degrees of rotation the left and right steering controls apply per keystroke. angle is the current amount of rotation applied to the ship, in degrees; it starts at 0&amp;deg; (pointing straight up). Finally, &lt;code&gt;spaceship&lt;/code&gt; is set to refer to the element with the ID &lt;code&gt;&quot;spaceship&quot;&lt;/code&gt;, which is the SVG polygon representing the ship the player controls.</source>
          <target state="translated">JavaScriptコードの最初のセクションでは、使用する変数を設定します。 &lt;code&gt;shipSize&lt;/code&gt; には、プレーヤーが移動する船のサイズが含まれています。 &lt;code&gt;position&lt;/code&gt; は、プレイフィールド内の船の位置を追跡するために使用されます。 &lt;code&gt;moveRate&lt;/code&gt; と &lt;code&gt;turnRate&lt;/code&gt; は、各キーストロークで船を前進および後退させるピクセル数と、キーストロークごとに左右のステアリングコントロールが適用される回転の角度です。角度は、船舶に適用されている現在の回転量です（度単位）。 0&amp;deg;から始まります（まっすぐ上向き）。最後に、ID &lt;code&gt;&quot;spaceship&quot;&lt;/code&gt; を持つ要素を参照するように &lt;code&gt;spaceship&lt;/code&gt; が設定されます。これは、プレイヤーが制御する船を表すSVGポリゴンです。</target>
        </trans-unit>
        <trans-unit id="aa4f6aad281236508bdc5dd1e595f70c65b32150" translate="yes" xml:space="preserve">
          <source>The first simple example returns a reference to the HTML/document node:</source>
          <target state="translated">最初の単純な例は、HTML/文書ノードへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="ade840b580aecdd53b7e0528de1f70732e92c821" translate="yes" xml:space="preserve">
          <source>The first step is to clear the canvas to our background color; then we establish the camera's perspective. We set a field of view of 45&amp;deg;, with a width to height ratio that match the display dimensions of our canvas. We also specify that we only want objects between 0.1 and 100 units from the camera to be rendered.</source>
          <target state="translated">最初のステップは、キャンバスをクリアして背景色にすることです。次に、カメラの視点を確立します。キャンバスの表示寸法と一致する幅と高さの比率で、45&amp;deg;の視野を設定しました。また、カメラから0.1〜100ユニットのオブジェクトのみをレンダリングすることを指定します。</target>
        </trans-unit>
        <trans-unit id="a8f304eae576b4ee0032e287dae3d42260f7c1bc" translate="yes" xml:space="preserve">
          <source>The first step is to create the &quot;local&quot; end of the connection. This is the peer that will send out the connection request. The next step is to create the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; by calling &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt; and set up event listeners to monitor the channel so that we know when it's opened and closed (that is, when the channel is connected or disconnected within that peer connection).</source>
          <target state="translated">最初のステップは、接続の「ローカル」エンドを作成することです。これは、接続要求を送信するピアです。次の手順では、&lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt; &lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt; &lt;/a&gt;を呼び出して&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;を作成し、イベントリスナーを設定してチャネルを監視し、チャネルが開いたり閉じたりしたとき（つまり、チャネルがピア接続内で接続または切断されたとき）を確認します。</target>
        </trans-unit>
        <trans-unit id="0062939136a14fb605806e1485b434b162f86150" translate="yes" xml:space="preserve">
          <source>The first step is to create the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element that we'll use to retrieve the video frames:</source>
          <target state="translated">最初のステップは、ビデオフレームを取得するために使用する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成することです。</target>
        </trans-unit>
        <trans-unit id="4e407d9cacc94b5b5551fdec66bd790651bdb8d8" translate="yes" xml:space="preserve">
          <source>The first step is to draw a large rectangle with the default settings. Next we save this state and make changes to the fill color. We then draw the second and smaller blue rectangle and save the state. Again we change some drawing settings and draw the third semi-transparent white rectangle.</source>
          <target state="translated">まずはデフォルトの設定で大きな四角形を描きます。次にこの状態を保存し、塗りつぶしの色を変更します。次に、2 番目とそれより小さい青い長方形を描き、状態を保存します。ここでも描画設定を変更して、3番目の半透明の白い四角形を描きます。</target>
        </trans-unit>
        <trans-unit id="207764676e9c61ea662fca3178dfee2bab5d6ed7" translate="yes" xml:space="preserve">
          <source>The first step is to establish a drop zone. Exactly what part of your content will accept drops may vary depending on the design of your application, but making an element receive drop events is easy:</source>
          <target state="translated">最初のステップは、ドロップゾーンを設定することです。コンテンツのどの部分がドロップを受け入れるかはアプリケーションのデザインによって異なりますが、要素がドロップイベントを受け取るようにするのは簡単です。</target>
        </trans-unit>
        <trans-unit id="5a6684de2548095891a9f0ad19ae35c2cb392ae9" translate="yes" xml:space="preserve">
          <source>The first step to create a path is to call the &lt;code&gt;beginPath()&lt;/code&gt;. Internally, paths are stored as a list of sub-paths (lines, arcs, etc) which together form a shape. Every time this method is called, the list is reset and we can start drawing new shapes.</source>
          <target state="translated">パスを作成する最初のステップは、 &lt;code&gt;beginPath()&lt;/code&gt; を呼び出すことです。内部的には、パスは、一緒に形状を形成するサブパス（線、円弧など）のリストとして保存されます。このメソッドが呼び出されるたびにリストがリセットされ、新しい図形の描画を開始できます。</target>
        </trans-unit>
        <trans-unit id="063a9c8226e5d39039546cedc5b82e4e70c60028" translate="yes" xml:space="preserve">
          <source>The first thing that needs to be done in order to draw a frame of the animation is to clear the background to the desired color. In this case, we set the viewport based on the size of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;, call &lt;a href=&quot;../webglrenderingcontext/clearcolor&quot;&gt;&lt;code&gt;clearColor()&lt;/code&gt;&lt;/a&gt; to set the color to use when clearing content, then we clear the buffer with &lt;a href=&quot;../webglrenderingcontext/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アニメーションのフレームを描画するために最初に行う必要があるのは、背景を目的の色にクリアすることです。この場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; の&lt;/a&gt;サイズに基づいてビューポートを設定し、&lt;a href=&quot;../webglrenderingcontext/clearcolor&quot;&gt; &lt;code&gt;clearColor()&lt;/code&gt; &lt;/a&gt;を呼び出してコンテンツをクリアするときに使用する色を設定してから、&lt;a href=&quot;../webglrenderingcontext/clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; で&lt;/a&gt;バッファをクリアします。</target>
        </trans-unit>
        <trans-unit id="72cb0ebc88a5c4036599a647e321be8f9d4a7830" translate="yes" xml:space="preserve">
          <source>The first thing the callback does is check to see if the video is even playing; if it's not, the callback returns immediately without doing anything.</source>
          <target state="translated">コールバックが最初に行うことは、動画が再生されているかどうかを確認することであり、再生されていない場合は何もせずにすぐにコールバックが戻ります。</target>
        </trans-unit>
        <trans-unit id="8693740eea5f6abbaf373c983e5de198aafbe2f9" translate="yes" xml:space="preserve">
          <source>The first thing to do is add code to load the textures. In our case, we'll be using a single texture, mapped onto all six sides of our rotating cube, but the same technique can be used for any number of textures.</source>
          <target state="translated">最初にすべきことは、テクスチャをロードするコードを追加することです。この例では、回転するキューブの 6 面すべてにマッピングされた単一のテクスチャを使用しますが、同じテクニックをいくつでも使用することができます。</target>
        </trans-unit>
        <trans-unit id="3b7f9205cd8c72fdf57651e4619e5c2502b4e02c" translate="yes" xml:space="preserve">
          <source>The first thing to do is update the vertex shader so it generates a shading value for each vertex based on the ambient lighting as well as the directional lighting. Let's take a look at the code:</source>
          <target state="translated">最初に行うべきことは、頂点シェーダを更新して、各頂点のシェーディング値を生成し、環境照明と方向照明に基づいてシェーディング値を生成することです。コードを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="77ce80f3b2f2f8ebbfc8f86367fabf0eef60182b" translate="yes" xml:space="preserve">
          <source>The first thing we do here is obtain a reference to the canvas, assigning it to a variable named &lt;code&gt;canvas&lt;/code&gt;.</source>
          <target state="translated">ここで最初に行うことは、キャンバスへの参照を取得し、それを &lt;code&gt;canvas&lt;/code&gt; という名前の変数に割り当てます。</target>
        </trans-unit>
        <trans-unit id="c7bea653c8205f818f029e7042b96bfc967e8d1d" translate="yes" xml:space="preserve">
          <source>The first thing we do is transform the normal based on the current orientation of the cube, by multiplying the vertex's normal by the normal matrix. We can then compute the amount of directional lighting that needs to be applied to the vertex by calculating the dot product of the transformed normal and the directional vector (that is, the direction from which the light is coming). If this value is less than zero, then we pin the value to zero, since you can't have less than zero light.</source>
          <target state="translated">最初に行うことは、頂点の法線に法線行列を乗算して、キューブの現在の向きに基づいて法線を変換することです。次に、変換された法線と方向ベクトル (つまり、光が来る方向)のドット積を計算することで、頂点に適用する必要がある方向照明の量を計算します。この値がゼロよりも小さい場合、ゼロよりも小さい光はありえないので、この値をゼロに固定します。</target>
        </trans-unit>
        <trans-unit id="77852bdf723ba997cd81a7d39a590572ce9a606c" translate="yes" xml:space="preserve">
          <source>The first thing we need is to create a &lt;a href=&quot;keyframe_formats&quot;&gt;Keyframe Object&lt;/a&gt; corresponding to our CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;@keyframes&lt;/a&gt; block:</source>
          <target state="translated">最初に必要なのは、CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;@keyframes&lt;/a&gt;ブロックに対応する&lt;a href=&quot;keyframe_formats&quot;&gt;キーフレームオブジェクト&lt;/a&gt;を作成することです。</target>
        </trans-unit>
        <trans-unit id="a7d1fc5114cdf309756a426f29260d53da95c62e" translate="yes" xml:space="preserve">
          <source>The first thing we need to do is generate the array of normals for all the vertices that comprise our cube. Since a cube is a very simple object, this is easy to do; obviously for more complex objects, calculating the normals will be more involved.</source>
          <target state="translated">最初に行う必要があるのは、キューブを構成するすべての頂点の法線の配列を生成することです。キューブは非常に単純なオブジェクトなので、これは簡単に実行できますが、より複雑なオブジェクトでは、法線の計算がより複雑になります。</target>
        </trans-unit>
        <trans-unit id="55d175edecccbfd3a880db1fc61649487256a546" translate="yes" xml:space="preserve">
          <source>The first thing you need in order to use WebGL for rendering is a canvas. The HTML fragment below declares a canvas that our sample will draw into.</source>
          <target state="translated">WebGL を使ってレンダリングするためにまず必要なのは、キャンバスです。以下の HTML フラグメントは、サンプルが描画するキャンバスを宣言しています。</target>
        </trans-unit>
        <trans-unit id="19a3d52a59d032cdbf11ded6025dc61908af8c3c" translate="yes" xml:space="preserve">
          <source>The first thing you'll want to do with almost all of the requests you generate is to add success and error handlers:</source>
          <target state="translated">まず、生成するほぼすべてのリクエストに対して、成功ハンドラとエラーハンドラを追加することです。</target>
        </trans-unit>
        <trans-unit id="eee14c558540f5f107e55b1cedcd9cd0b3768376" translate="yes" xml:space="preserve">
          <source>The first three of these event handlers are required; you have to handle them to do anything involving streamed media with WebRTC. The rest aren't strictly required but can be useful, and we'll explore them. There are a few other events available that we're not using in this example, as well. Here's a summary of each of the event handlers we will be implementing:</source>
          <target state="translated">これらのイベントハンドラのうち、最初の 3 つは必須です。WebRTC でストリームメディアに関係することを行うには、これらを処理する必要があります。残りのイベントは厳密には必須ではありませんが、便利なものもあります。この例では使用していないイベントもいくつかあります。以下に、実装するイベントハンドラの概要を示します。</target>
        </trans-unit>
        <trans-unit id="a2098a43f643599fe2d4fbd1f0fd80cf441d747c" translate="yes" xml:space="preserve">
          <source>The first two arcs create the face's eyes. The last arc creates the mouth.</source>
          <target state="translated">最初の2つの円弧は顔の目を作ります。最後の円弧は口を作ります。</target>
        </trans-unit>
        <trans-unit id="60718c67064461436d741d3fd820665d6d80ee99" translate="yes" xml:space="preserve">
          <source>The first type of constructor (see above) creates a completely new &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt; object instance. Its parameters are:</source>
          <target state="translated">最初のタイプのコンストラクター（上記を参照）は、完全に新しい&lt;a href=&quot;../keyframeeffect&quot;&gt; &lt;code&gt;KeyframeEffect&lt;/code&gt; &lt;/a&gt;オブジェクトインスタンスを作成します。パラメータは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="aa546f8f27bb41b5a3c8960b9a781c92776c998b" translate="yes" xml:space="preserve">
          <source>The first, basic, example just serializes an entire document into a string containing XML.</source>
          <target state="translated">最初の基本的な例では、ドキュメント全体をXMLを含む文字列にシリアライズしています。</target>
        </trans-unit>
        <trans-unit id="77b1a43231322655a850d2ff2cfe117cd856cae2" translate="yes" xml:space="preserve">
          <source>The focus event is raised when the user sets focus on the given element.</source>
          <target state="translated">ユーザーが指定された要素にフォーカスを設定したときにフォーカスイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="c7a05c0489240d6580075e9fbbd2b8853a2e6e73" translate="yes" xml:space="preserve">
          <source>The focus of a selection is the end point of the selection. When making a selection with a mouse, the focus is where in the document the mouse button is released. As the user changes the selection using the mouse or the keyboard, the focus is the end of the selection that moves.&lt;strong&gt; Note:&lt;/strong&gt; This is not the same as the focused &lt;em&gt;element&lt;/em&gt; of the document, as returned by &lt;a href=&quot;documentorshadowroot/activeelement&quot;&gt;&lt;code&gt;document.activeElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">選択の焦点は、選択の終点です。マウスで選択する場合、フォーカスはドキュメント内でマウスボタンが離された場所です。ユーザーがマウスまたはキーボードを使用して選択を変更すると、フォーカスは移動する選択の最後になります。&lt;strong&gt;注：&lt;/strong&gt;これは、集中と同じではありません&lt;em&gt;要素&lt;/em&gt;によって返される、ドキュメントの&lt;a href=&quot;documentorshadowroot/activeelement&quot;&gt; &lt;code&gt;document.activeElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f56d6b8d689bd2fcf50d0223d3e45857570e470" translate="yes" xml:space="preserve">
          <source>The follow-up panel</source>
          <target state="translated">フォローアップパネル</target>
        </trans-unit>
        <trans-unit id="430a2cd34bce7e790b11b7ba7c9852617c29977c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event handler calls &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; to turn off the browser's default drag and drop handler.</source>
          <target state="translated">次の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; イベントハンドラーは&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt;を呼び出して、ブラウザーのデフォルトのドラッグアンドドロップハンドラーをオフにします。</target>
        </trans-unit>
        <trans-unit id="6df8775ab4000277f7c015378ca4cc89f1b0442b" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;AudioNode&lt;/code&gt; children default to this value</source>
          <target state="translated">次の &lt;code&gt;AudioNode&lt;/code&gt; の子はデフォルトでこの値になります</target>
        </trans-unit>
        <trans-unit id="b150fd49b07c76c7ae14da01f587ecaa7728e16f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;computeViewMatrix()&lt;/code&gt; method animates the view matrix by moving it in and out, and left and right.</source>
          <target state="translated">次の &lt;code&gt;computeViewMatrix()&lt;/code&gt; メソッドは、ビューマトリックスを内外、左および右に移動することでアニメーション化します。</target>
        </trans-unit>
        <trans-unit id="039e8f3c9160d04661fa2124421015225f8a61f6" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;get()&lt;/code&gt; function will only return the first &lt;code&gt;username&lt;/code&gt; value appended:</source>
          <target state="translated">次の &lt;code&gt;get()&lt;/code&gt; 関数は、追加された最初の &lt;code&gt;username&lt;/code&gt; 値のみを返します。</target>
        </trans-unit>
        <trans-unit id="e156f2a1f42585e7d2f4f5e3aaec4ea9ca939da0" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;getAll()&lt;/code&gt; function will return both &lt;code&gt;username&lt;/code&gt; values in an array:</source>
          <target state="translated">次の &lt;code&gt;getAll()&lt;/code&gt; 関数は、両方の &lt;code&gt;username&lt;/code&gt; 値を配列で返します。</target>
        </trans-unit>
        <trans-unit id="faecd11c0a75eaef9b48a40c5d251627dd4aea4f" translate="yes" xml:space="preserve">
          <source>The following CSS styles our example content.</source>
          <target state="translated">以下のCSSは、例のコンテンツのスタイルです。</target>
        </trans-unit>
        <trans-unit id="2fc34dcabc4882dc34ab3bb284e340584bd82662" translate="yes" xml:space="preserve">
          <source>The following JavaScript code checks whether &lt;code&gt;margin&lt;/code&gt; is marked as important in a CSS selector rule:</source>
          <target state="translated">次のJavaScriptコードは、CSSセレクタールールで &lt;code&gt;margin&lt;/code&gt; が重要としてマークされているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="38406b5e895456e23f4860dfaf2a5e4d18dad538" translate="yes" xml:space="preserve">
          <source>The following JavaScript code gets an object containing the computed RGB values of the &lt;code&gt;color&lt;/code&gt; CSS property:</source>
          <target state="translated">次のJavaScriptコードは、 &lt;code&gt;color&lt;/code&gt; CSSプロパティの計算されたRGB値を含むオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="22cfa8ee8aaf69a0d411882feaa074cc8b566ac9" translate="yes" xml:space="preserve">
          <source>The following JavaScript code gets the parent CSS style rule from a &lt;a href=&quot;../cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">次のJavaScriptコードは、&lt;a href=&quot;../cssstyledeclaration&quot;&gt; &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; &lt;/a&gt;から親CSSスタイルルールを取得します。</target>
        </trans-unit>
        <trans-unit id="bc4d3fce0f346bd0ad1bae4e1de92e03adcad50c" translate="yes" xml:space="preserve">
          <source>The following JavaScript code is stored in the &quot;fibonacci.js&quot; file referenced by the HTML in the next section.</source>
          <target state="translated">次項のHTMLで参照する「fibonacci.js」ファイルには、以下のJavaScriptコードが格納されています。</target>
        </trans-unit>
        <trans-unit id="50412f81043c8d74ca0cefee68b215adab69e01b" translate="yes" xml:space="preserve">
          <source>The following JavaScript code queries the value of the &lt;code&gt;margin&lt;/code&gt; property in a CSS selector rule:</source>
          <target state="translated">次のJavaScriptコードは、CSSセレクタールールの &lt;code&gt;margin&lt;/code&gt; プロパティの値をクエリします。</target>
        </trans-unit>
        <trans-unit id="45913e0025c23b35f14bbe901be2f58b23f757f2" translate="yes" xml:space="preserve">
          <source>The following JavaScript code removes the &lt;code&gt;background-color&lt;/code&gt; CSS property from a selector rule:</source>
          <target state="translated">次のJavaScriptコードは、セレクタールールから &lt;code&gt;background-color&lt;/code&gt; CSSプロパティを削除します。</target>
        </trans-unit>
        <trans-unit id="8d91e24500469ecb9c82d52fc101ca3a14d4166d" translate="yes" xml:space="preserve">
          <source>The following JavaScript code sets a new value for the &lt;code&gt;border-width&lt;/code&gt; CSS property on a selector rule:</source>
          <target state="translated">次のJavaScriptコードは、セレクタールールの &lt;code&gt;border-width&lt;/code&gt; CSSプロパティに新しい値を設定します。</target>
        </trans-unit>
        <trans-unit id="2dd6542222dede66d988926a0fe318bf49dd8290" translate="yes" xml:space="preserve">
          <source>The following additions to the &lt;a href=&quot;service_worker_api&quot;&gt;Service Worker API&lt;/a&gt; have been specified in the Push API spec to provide an entry point for using Push messages. They also monitor and respond to push and subscription change events.</source>
          <target state="translated">プッシュメッセージを使用するためのエントリポイントを提供するために、&lt;a href=&quot;service_worker_api&quot;&gt;Service Worker API&lt;/a&gt;への次の追加がプッシュAPI仕様で指定されています。また、プッシュおよびサブスクリプション変更イベントを監視して応答します。</target>
        </trans-unit>
        <trans-unit id="d5a466234281074801c2e2787cfc06cc0acabb36" translate="yes" xml:space="preserve">
          <source>The following are event handlers (and their corresponding event handler event types) which must be supported, as event handler IDL attributes, by objects implementing the &lt;a href=&quot;https://www.w3.org/TR/2016/CR-presentation-api-20160714/#idl-def-presentationrequest&quot;&gt;&lt;code&gt;PresentationRequest&lt;/code&gt;&lt;/a&gt; interface:</source>
          <target state="translated">以下は、&lt;a href=&quot;https://www.w3.org/TR/2016/CR-presentation-api-20160714/#idl-def-presentationrequest&quot;&gt; &lt;code&gt;PresentationRequest&lt;/code&gt; &lt;/a&gt;インターフェースを実装するオブジェクトによってイベントハンドラーIDL属性としてサポートされる必要があるイベントハンドラー（および対応するイベントハンドラーイベントタイプ）です。</target>
        </trans-unit>
        <trans-unit id="ca3425b1c140e84b56345fa4c0569cf1eb9a345d" translate="yes" xml:space="preserve">
          <source>The following attribute has been added: &lt;code&gt;menu&lt;/code&gt;.</source>
          <target state="translated">次の属性が追加されました： &lt;code&gt;menu&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="196d63ae2327a694814be8b448c0c0471587918f" translate="yes" xml:space="preserve">
          <source>The following attributes have been added: &lt;code&gt;autofocus&lt;/code&gt;, &lt;code&gt;formAction&lt;/code&gt;, &lt;code&gt;formEnctype&lt;/code&gt;, &lt;code&gt;formMethod&lt;/code&gt;, &lt;code&gt;formNoValidate&lt;/code&gt;, &lt;code&gt;formTarget&lt;/code&gt;, &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, &lt;code&gt;validationMessage&lt;/code&gt;, and &lt;code&gt;willValidate&lt;/code&gt;.</source>
          <target state="translated">次の属性が追加されました： &lt;code&gt;autofocus&lt;/code&gt; 、 &lt;code&gt;formAction&lt;/code&gt; 、 &lt;code&gt;formEnctype&lt;/code&gt; 、 &lt;code&gt;formMethod&lt;/code&gt; 、 &lt;code&gt;formNoValidate&lt;/code&gt; 、 &lt;code&gt;formTarget&lt;/code&gt; 、 &lt;code&gt;labels&lt;/code&gt; 、 &lt;code&gt;validity&lt;/code&gt; 、 &lt;code&gt;validationMessage&lt;/code&gt; 、および &lt;code&gt;willValidate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20dd8841b7bbde5acaa3d0e6ed13e0069b6c8c7f" translate="yes" xml:space="preserve">
          <source>The following attributes have been added: &lt;code&gt;autofocus&lt;/code&gt;, &lt;code&gt;placeholder&lt;/code&gt;, &lt;code&gt;dirName&lt;/code&gt;, &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;maxLength&lt;/code&gt;, &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;textLength&lt;/code&gt;, &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;selectionStart&lt;/code&gt;, &lt;code&gt;selectionEnd&lt;/code&gt;, &lt;code&gt;selectionDirection&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, &lt;code&gt;validationMessage&lt;/code&gt;, and &lt;code&gt;willValidate&lt;/code&gt;.</source>
          <target state="translated">次の属性が追加されました： &lt;code&gt;autofocus&lt;/code&gt; 、 &lt;code&gt;placeholder&lt;/code&gt; 、 &lt;code&gt;dirName&lt;/code&gt; に、 &lt;code&gt;wrap&lt;/code&gt; 、 &lt;code&gt;maxLength&lt;/code&gt; の、 &lt;code&gt;required&lt;/code&gt; 、 &lt;code&gt;textLength&lt;/code&gt; 、 &lt;code&gt;labels&lt;/code&gt; 、 &lt;code&gt;selectionStart&lt;/code&gt; 、 &lt;code&gt;selectionEnd&lt;/code&gt; に、 &lt;code&gt;selectionDirection&lt;/code&gt; 、 &lt;code&gt;validity&lt;/code&gt; 、 &lt;code&gt;validationMessage&lt;/code&gt; 、および &lt;code&gt;willValidate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5958886151679d2e4a96d3d5c1cbefc33fbb905d" translate="yes" xml:space="preserve">
          <source>The following call selects &lt;code&gt;gl.TEXTURE1&lt;/code&gt; as the current texture. Subsequent calls that modify the texture state will affect this texture.</source>
          <target state="translated">次の呼び出しは、現在のテクスチャとして &lt;code&gt;gl.TEXTURE1&lt;/code&gt; を選択します。テクスチャの状態を変更する後続の呼び出しは、このテクスチャに影響します。</target>
        </trans-unit>
        <trans-unit id="692e1c402ec7cc757de9b225f15dbc6efeb957e3" translate="yes" xml:space="preserve">
          <source>The following code attaches pre-existing shaders to a &lt;a href=&quot;../webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のコードは、既存のシェーダーを&lt;a href=&quot;../webglprogram&quot;&gt; &lt;code&gt;WebGLProgram&lt;/code&gt; にアタッチし&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="07c0a514c23ea5ef3234d15be0ddca240274f592" translate="yes" xml:space="preserve">
          <source>The following code creates a request for a database to be opened asychronously, after which the database is opened when the request's &lt;code&gt;onsuccess&lt;/code&gt; handler is fired:</source>
          <target state="translated">次のコードは、 &lt;code&gt;onsuccess&lt;/code&gt; 開かれるデータベースのリクエストを作成し、その後、リクエストの成功ハンドラが呼び出されたときにデータベースが開かれます。</target>
        </trans-unit>
        <trans-unit id="8cb19c9a1efe8804fdb091b2bfc18c69d641e3b1" translate="yes" xml:space="preserve">
          <source>The following code demonstrates creating both 2D and 3D points.</source>
          <target state="translated">以下のコードは、2Dと3Dの両方のポイントを作成することを示しています。</target>
        </trans-unit>
        <trans-unit id="02b6be469c1e8e4be8af64b3c6609931fea39eb7" translate="yes" xml:space="preserve">
          <source>The following code demonstrates the use of the functions above. It iterates over the children of an element (whose children are all elements) to find the one whose text is &lt;code&gt;&quot;This is the third paragraph&quot;&lt;/code&gt;, and then changes the class attribute and the contents of that paragraph.</source>
          <target state="translated">次のコードは、上記の関数の使用法を示しています。要素の子（すべての子が要素）を繰り返し処理して、テキストが &lt;code&gt;&quot;This is the third paragraph&quot;&lt;/code&gt; です」の子を見つけ、クラス属性とその段落の内容を変更します。</target>
        </trans-unit>
        <trans-unit id="6092562c92a609118336f93b9f0d46545a71db18" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates the use of a JavaScript object following the assertion:</source>
          <target state="translated">次のコード例は、アサーションに続く JavaScript オブジェクトの使用を示しています。</target>
        </trans-unit>
        <trans-unit id="7add4cb234313d7a64f6b6d8334c989eb68f3f57" translate="yes" xml:space="preserve">
          <source>The following code example shows the use of &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;../performance/now&quot;&gt;&lt;code&gt;Performance.now()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;../performance/now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt; method returns a &lt;em&gt;timestamp&lt;/em&gt; (of type &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt;) that is a discrete point in time. By calling this method before and after a task, the time it takes to do the task can be measured.</source>
          <target state="translated">次のコード例は、&lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performance/now&quot;&gt; &lt;code&gt;Performance.now()&lt;/code&gt; &lt;/a&gt;メソッドの使用方法を示しています。&lt;a href=&quot;../performance/now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;メソッドを返し&lt;em&gt;、タイムスタンプ&lt;/em&gt;（タイプの&lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; &lt;/a&gt;時間内の離散点です）。タスクの前後にこのメソッドを呼び出すことで、タスクの実行にかかる時間を測定できます。</target>
        </trans-unit>
        <trans-unit id="de6b6a5a55f4a77afb320e3b4be4def705111336" translate="yes" xml:space="preserve">
          <source>The following code gets the precision format of a &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; with a &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt; precision type.</source>
          <target state="translated">次のコードは、の精度フォーマット取得 &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; と &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt; の精度タイプ。</target>
        </trans-unit>
        <trans-unit id="76c3b93d88f4df998b0679c3d20ee38299be4f57" translate="yes" xml:space="preserve">
          <source>The following code is taken from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html&quot;&gt;Chrome's Grab Frame - Take Photo Sample&lt;/a&gt;. Since &lt;code&gt;ImageCapture&lt;/code&gt; requires some place to capture an image from, the example below starts with a device's media device (in other words a camera).</source>
          <target state="translated">次のコードは、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html&quot;&gt;ChromeのGrab Frame-Take Photo Sample&lt;/a&gt;から取得したものです。 &lt;code&gt;ImageCapture&lt;/code&gt; は画像をキャプチャするための場所を必要とするため、以下の例はデバイスのメディアデバイス（つまりカメラ）から始まります。</target>
        </trans-unit>
        <trans-unit id="39c8d6dd06d844097a2a28f5005649906b84ca4c" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component&quot;&gt;popup-info-box-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/popup-info-box-web-component/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">次のコードは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component&quot;&gt;popup-info-box-web-componentの&lt;/a&gt;例から取得したものです（&lt;a href=&quot;https://mdn.github.io/web-components-examples/popup-info-box-web-component/&quot;&gt;これもライブで参照してください&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d52376d318549331dfe749e666bba226c099e12c" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">次のコードは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-componentの&lt;/a&gt;例から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;実際に見ることもできます&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b8637c867255f1eb90613948d7d2faa99a9a6978" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;). Note how we use the &lt;a href=&quot;customelementregistry/define&quot;&gt;&lt;code&gt;CustomElementRegistry.define()&lt;/code&gt;&lt;/a&gt; method to define the custom element after creating its class.</source>
          <target state="translated">次のコードは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-componentの&lt;/a&gt;例から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;実際に見ることもできます&lt;/a&gt;）。クラスを作成した後、&lt;a href=&quot;customelementregistry/define&quot;&gt; &lt;code&gt;CustomElementRegistry.define()&lt;/code&gt; &lt;/a&gt;メソッドを使用してカスタム要素を定義する方法に注意してください。</target>
        </trans-unit>
        <trans-unit id="0fa3bd934780dbeadbe97fd790a7aaa6912ed51f" translate="yes" xml:space="preserve">
          <source>The following code sample defines a method on the &lt;code&gt;CubeDemo&lt;/code&gt; object that will create the model matrix. It uses custom functions to create and multiply matrices as defined in the &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;MDN WebGL&lt;/a&gt; shared code. The new function looks like this:</source>
          <target state="translated">次のコードサンプルでは、モデルマトリックスを作成する &lt;code&gt;CubeDemo&lt;/code&gt; オブジェクトのメソッドを定義しています。カスタム関数を使用して、&lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;MDN WebGL&lt;/a&gt;共有コードで定義されている行列を作成および乗算します。新しい関数は次のようになります。</target>
        </trans-unit>
        <trans-unit id="8b6e719942df99d2615faf9f5247f9942c32fba4" translate="yes" xml:space="preserve">
          <source>The following code snippet compares a previously saved pointer id with the identifier of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event that was just fired.</source>
          <target state="translated">次のコードスニペットは、以前に保存されたポインターIDを、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; したばかりのpointerdownイベントの識別子と比較します。</target>
        </trans-unit>
        <trans-unit id="775c66860654f1a482346d46ae04ed76415aed56" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates the difference between the values obtained using the element's &lt;code&gt;style&lt;/code&gt; property and that obtained using the &lt;code&gt;getComputedStyle()&lt;/code&gt; method:</source>
          <target state="translated">次のコードスニペットは、要素の &lt;code&gt;style&lt;/code&gt; プロパティを使用して取得した &lt;code&gt;getComputedStyle()&lt;/code&gt; メソッドを使用して取得した値の違いを示しています。</target>
        </trans-unit>
        <trans-unit id="9298bde68914cf6707f3e2d818ffd112c34d4610" translate="yes" xml:space="preserve">
          <source>The following code snippet shows &lt;code&gt;worker.js&lt;/code&gt;, in which an &lt;code&gt;onmessage&lt;/code&gt; handler is used to handle messages from the main script. Inside the handler a calculation is done from which a result message is created; this is then sent back to the main thread using &lt;code&gt;postMessage(workerResult);&lt;/code&gt;</source>
          <target state="translated">次のコードスニペットショーの &lt;code&gt;worker.js&lt;/code&gt; れ、 &lt;code&gt;onmessage&lt;/code&gt; ハンドラがメインスクリプトからのメッセージを処理するために使用されます。ハンドラー内で計算が行われ、そこから結果メッセージが作成されます。これは、 &lt;code&gt;postMessage(workerResult);&lt;/code&gt; を使用してメインスレッドに送り返されます。</target>
        </trans-unit>
        <trans-unit id="f84e1e466d6bde7cf7eb1afd492a36554328cb67" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onclose&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;onclose&lt;/code&gt; ハンドラを示しています。</target>
        </trans-unit>
        <trans-unit id="0a8b4d5b9ae6479895aad9dbd1e192d837527ee0" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onerror&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;onerror&lt;/code&gt; ハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="26c2e6e12bff62f674132dce872aede59a8207ad" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onlanguagechange&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;onlanguagechange&lt;/code&gt; ハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="a5da936e6566ad6f261c704691dd7d2ce78f9b17" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onoffline&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;onoffline&lt;/code&gt; ハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="4b52b00d0167dbda85b110225e8b485594ec894e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;ononline&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;ononline&lt;/code&gt; ハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="9a575193e3b6b0a60e4c783a9fbc7f6e374694b7" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;SharedWorker()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">次のコードスニペットは、 &lt;code&gt;SharedWorker()&lt;/code&gt; コンストラクターを使用した&lt;a href=&quot;../sharedworker&quot;&gt; &lt;code&gt;SharedWorker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成と、その後のオブジェクトの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="785eff56b7904ef3540f819687a7da47cd632ad7" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor and setting up of an &lt;code&gt;onerror&lt;/code&gt; handler on the resulting object:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;../worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成と、結果のオブジェクトでの &lt;code&gt;onerror&lt;/code&gt; ハンドラーの設定を示しています。</target>
        </trans-unit>
        <trans-unit id="78b1ae7ceeb12798d5ae473746b5fae9596d9c8e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. Messages are passed to the worker when the value inside the form input &lt;code&gt;first&lt;/code&gt; changes. A &lt;a href=&quot;../worker/onmessage&quot;&gt;&lt;code&gt;Worker.onmessage&lt;/code&gt;&lt;/a&gt; handler is also present, to deal with messages are passed back from the worker.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;../worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成を示しています。フォーム入力内の値が &lt;code&gt;first&lt;/code&gt; 変更されると、メッセージがワーカーに渡されます。A &lt;a href=&quot;../worker/onmessage&quot;&gt; &lt;code&gt;Worker.onmessage&lt;/code&gt; の&lt;/a&gt;ハンドラは、労働者から戻されたメッセージに対処するために、も存在しています。</target>
        </trans-unit>
        <trans-unit id="a6a4fd75ef54e0087c447be211a279bf142d2036" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor, which is then immediately terminated.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成を示しています。これはすぐに終了します。</target>
        </trans-unit>
        <trans-unit id="a02745d765c6148ec37a0dd6f786382463ff1b85" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. Messages are passed to the worker when the value inside the form input &lt;code&gt;first&lt;/code&gt; changes. An onmessage handler is also present, to deal with messages are passed back from the worker.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成を示しています。フォーム入力内の値が &lt;code&gt;first&lt;/code&gt; 変更されると、メッセージがワーカーに渡されます。onmessageハンドラーも存在し、メッセージを処理するためにワーカーから返されます。</target>
        </trans-unit>
        <trans-unit id="ca44ddd5172033f656a689ae1bb0d67a63839b67" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;Worker()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">次のコードスニペットは、 &lt;code&gt;Worker()&lt;/code&gt; コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成とその後のオブジェクトの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="07affcc78a8d1acb22a1aceb23820650d9665a1d" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor and usage of the object:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成とオブジェクトの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="2956808150f3932960cf6d4904d8de0af14e6b77" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; object using the &lt;code&gt;FileReader()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">次のコードスニペットは、 &lt;code&gt;FileReader()&lt;/code&gt; コンストラクターを使用した &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; オブジェクトの作成と、その後のオブジェクトの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="fdecd25957058a333fa80ad0b3860361575d9a02" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;SharedWorker&lt;/code&gt; object using the &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. Multiple scripts can then access the worker through a &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; object accessed using the &lt;code&gt;SharedWorker.port&lt;/code&gt; property &amp;mdash; the port is started using its &lt;code&gt;start()&lt;/code&gt; method:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した &lt;code&gt;SharedWorker&lt;/code&gt; オブジェクトの作成を示しています。次に、 &lt;code&gt;SharedWorker.port&lt;/code&gt; プロパティを使用してアクセスされる&lt;a href=&quot;../messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;オブジェクトを介して、複数のスクリプトがワーカーにアクセスできます。ポートは、 &lt;code&gt;start()&lt;/code&gt; メソッドを使用して開始されます。</target>
        </trans-unit>
        <trans-unit id="7fef72d3c85f272409a601154a01fc9b4faf6121" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;SharedWorker&lt;/code&gt; object using the &lt;a href=&quot;sharedworker/sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. Both scripts contain this:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;sharedworker/sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した &lt;code&gt;SharedWorker&lt;/code&gt; オブジェクトの作成を示しています。両方のスクリプトにはこれが含まれています：</target>
        </trans-unit>
        <trans-unit id="3b543166718695298820dc044d5e81c7c0e926bd" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how you can measure a text and get its width.</source>
          <target state="translated">次のコードスニペットは、テキストを測定してその幅を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3f79234f8c9f517e6c44fae4e48b4d13e779d1bb" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. When either of two form inputs (&lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt;) have their values changed, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; events invoke &lt;code&gt;postMessage()&lt;/code&gt; to send the value of both inputs to the current worker.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成を示しています。2つのフォーム入力（ &lt;code&gt;first&lt;/code&gt; および &lt;code&gt;second&lt;/code&gt; ）のいずれかの値が変更されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; イベントは &lt;code&gt;postMessage()&lt;/code&gt; を呼び出して、両方の入力の値を現在のワーカーに送信します。</target>
        </trans-unit>
        <trans-unit id="b5d39e7325eb2c5b4fcdeb658dbc547caf41bf55" translate="yes" xml:space="preserve">
          <source>The following code snippet will slow down all animations on a page by halving their &lt;a href=&quot;../animation/playbackrate&quot;&gt;&lt;code&gt;Animation.playbackRate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;../animation/playbackrate&quot;&gt; &lt;code&gt;Animation.playbackRate&lt;/code&gt; を&lt;/a&gt;半分にすることで、ページ上のすべてのアニメーションを遅くします。</target>
        </trans-unit>
        <trans-unit id="3ca3137616bf2b32c50802fc9cf0145d207d5a43" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;navigator.clipboard&lt;/code&gt; to access the system clipboard in order to read the contents of the clipboard.</source>
          <target state="translated">次のコードは、 &lt;code&gt;navigator.clipboard&lt;/code&gt; を使用してシステムのクリップボードにアクセスし、クリップボードの内容を読み取ります。</target>
        </trans-unit>
        <trans-unit id="c346630a666a1c7ab1339f8a30e481800a97a5c4" translate="yes" xml:space="preserve">
          <source>The following code waits until all animations running on the element &lt;code&gt;elem&lt;/code&gt; have finished, then deletes the element from the DOM tree:</source>
          <target state="translated">次のコードは、要素 &lt;code&gt;elem&lt;/code&gt; で実行されているすべてのアニメーションが完了するまで待機してから、要素をDOMツリーから削除します。</target>
        </trans-unit>
        <trans-unit id="b9155d2103e72dd3ab11c30554d60373bb32b44f" translate="yes" xml:space="preserve">
          <source>The following code, if included in a page at the root of a site, would apply to exactly the same pages as the example above. Remember the scope, when included, uses the page's location as its base. Alternatively, if this code were included in a page at &lt;code&gt;example.com/product/description.html&lt;/code&gt;, the scope of &lt;code&gt;'./'&lt;/code&gt; would mean that the service worker only applies to resources under &lt;code&gt;example.com/product&lt;/code&gt;. If I needed to register a service worker on &lt;code&gt;example.com/product/description.html&lt;/code&gt; that applied to all of &lt;code&gt;example.com&lt;/code&gt;, I would leave off the scope as above.</source>
          <target state="translated">次のコードは、サイトのルートにあるページに含まれている場合、上記の例とまったく同じページに適用されます。スコープが含まれている場合は、ページの場所をベースとして使用することに注意してください。または、このコードが &lt;code&gt;example.com/product/description.html&lt;/code&gt; のページに含まれている場合、 &lt;code&gt;'./'&lt;/code&gt; スコープは、サービスワーカーが &lt;code&gt;example.com/product&lt;/code&gt; の下のリソースにのみ適用されることを意味します。私は上のサービスワーカー登録するために必要な場合 &lt;code&gt;example.com/product/description.html&lt;/code&gt; のすべてに適用さ &lt;code&gt;example.com&lt;/code&gt; を、私は上記のようにスコープをオフのままでしょう。</target>
        </trans-unit>
        <trans-unit id="d491fd2b65326bcc2d9548ada2c065f112cca208" translate="yes" xml:space="preserve">
          <source>The following code:</source>
          <target state="translated">以下のコードです。</target>
        </trans-unit>
        <trans-unit id="cb4e5e69ea18c167c5a50d823ab464f0707bbace" translate="yes" xml:space="preserve">
          <source>The following conditions raise an exception:</source>
          <target state="translated">以下の条件で例外が発生します。</target>
        </trans-unit>
        <trans-unit id="ab9ae87765be155d9e9bcac89d20e1e7953183bb" translate="yes" xml:space="preserve">
          <source>The following constants can be used for &lt;em&gt;sfactor&lt;/em&gt; and &lt;em&gt;dfactor&lt;/em&gt;.</source>
          <target state="translated">次の定数は&lt;em&gt;sfactor&lt;/em&gt;と&lt;em&gt;dfactorに&lt;/em&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="ce2850370b8167a2cfb32d9defec8e846c8161a3" translate="yes" xml:space="preserve">
          <source>The following constants can be used for &lt;em&gt;srcRGB&lt;/em&gt;, &lt;em&gt;dstRGB&lt;/em&gt;, &lt;em&gt;srcAlpha&lt;/em&gt;, and &lt;em&gt;dstAlpha&lt;/em&gt;</source>
          <target state="translated">次の定数は、&lt;em&gt;srcRGB&lt;/em&gt;、&lt;em&gt;dstRGB&lt;/em&gt;、&lt;em&gt;srcAlpha&lt;/em&gt;、および&lt;em&gt;dstAlphaに&lt;/em&gt;使用できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1bfd67154540d68c74b98a6321b9be4de6783ead" translate="yes" xml:space="preserve">
          <source>The following constants have been deprecated and should not be used anymore.</source>
          <target state="translated">以下の定数は非推奨となっており、今後は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="07ba7334b6e4056b80922f48347622631221d500" translate="yes" xml:space="preserve">
          <source>The following demonstrates a real-world use of the &lt;code&gt;eachNode&lt;/code&gt; function: searching for text on a web-page. We use a wrapper function named &lt;code&gt;grep&lt;/code&gt; to do the searching:</source>
          <target state="translated">以下は、 &lt;code&gt;eachNode&lt;/code&gt; 関数の実際の使用法を示しています：Webページ上のテキストの検索。検索を行うために、 &lt;code&gt;grep&lt;/code&gt; というラッパー関数を使用します。</target>
        </trans-unit>
        <trans-unit id="41461c74510317c4f6145d3b1224ea046fb95f44" translate="yes" xml:space="preserve">
          <source>The following describes the steps that occur during a drag and drop operation.</source>
          <target state="translated">ここでは、ドラッグ&amp;ドロップ操作中に発生するステップについて説明します。</target>
        </trans-unit>
        <trans-unit id="8ae28d060623c1f98acb168ec0893392f29ec99f" translate="yes" xml:space="preserve">
          <source>The following diagram from the &lt;a href=&quot;http://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt; demonstrates the various baselines supported by the &lt;code&gt;textBaseline&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;http://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt;の次の図は、 &lt;code&gt;textBaseline&lt;/code&gt; プロパティでサポートされるさまざまなベースラインを示しています。</target>
        </trans-unit>
        <trans-unit id="168b10292f96e49a74e65557076296df25e53007" translate="yes" xml:space="preserve">
          <source>The following diagram from the &lt;a href=&quot;https://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt; demonstrates the various baselines supported by the &lt;code&gt;textBaseline&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;https://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt;の次の図は、 &lt;code&gt;textBaseline&lt;/code&gt; プロパティでサポートされているさまざまなベースラインを示しています。</target>
        </trans-unit>
        <trans-unit id="b2d63726f92cadc2f136766602168941477729be" translate="yes" xml:space="preserve">
          <source>The following documents describe how to use touch events and include example code:</source>
          <target state="translated">以下のドキュメントでは、タッチイベントの使用方法を説明し、コード例を掲載しています。</target>
        </trans-unit>
        <trans-unit id="2ec4d49e2df92aba478e5086879fbc30de9ab5d1" translate="yes" xml:space="preserve">
          <source>The following elements can use the &lt;code&gt;cx&lt;/code&gt; attribute</source>
          <target state="translated">次の要素は &lt;code&gt;cx&lt;/code&gt; 属性を使用できます</target>
        </trans-unit>
        <trans-unit id="2c0a9969617d890fe812be742a41a24d2198c718" translate="yes" xml:space="preserve">
          <source>The following equivalence returns &lt;code&gt;true&lt;/code&gt; if an element is at the end of its scroll, &lt;code&gt;false&lt;/code&gt; if it isn't.</source>
          <target state="translated">以下の等価性は返し &lt;code&gt;true&lt;/code&gt; の要素は、そのスクロールの末尾にある場合 &lt;code&gt;false&lt;/code&gt; になっていない場合。</target>
        </trans-unit>
        <trans-unit id="d411998731f7e0069944923912244d337b11d120" translate="yes" xml:space="preserve">
          <source>The following errors may be thrown when calling this method.</source>
          <target state="translated">このメソッドを呼び出すと、以下のようなエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="5433af10c3012bba69dc3a9a2920d1481b87028b" translate="yes" xml:space="preserve">
          <source>The following errors may be thrown when setting a new value for this property.</source>
          <target state="translated">このプロパティに新しい値を設定すると、以下のエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="3d094cbed75236d22908ba8793257298d72ebb58" translate="yes" xml:space="preserve">
          <source>The following errors may occur; to check for errors after &lt;code&gt;getUniformLocation()&lt;/code&gt; returns, call &lt;a href=&quot;geterror&quot;&gt;&lt;code&gt;getError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のエラーが発生する可能性があります。 &lt;code&gt;getUniformLocation()&lt;/code&gt; が戻った後にエラーを確認するには、&lt;a href=&quot;geterror&quot;&gt; &lt;code&gt;getError()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="533d186fe2d300e6097dcf59eeeb1fa1a74b191f" translate="yes" xml:space="preserve">
          <source>The following events are listed in the spec, but do not currently seem to be implemented anywhere as yet.</source>
          <target state="translated">以下のイベントは仕様に記載されていますが、現在のところどこにも実装されていないようです。</target>
        </trans-unit>
        <trans-unit id="f4da571c91381cb06a937f12193ffcad883aa639" translate="yes" xml:space="preserve">
          <source>The following events can be triggered on an upload object and used to monitor the state of the upload process:</source>
          <target state="translated">以下のイベントは、アップロード・オブジェクトでトリガーすることができ、アップロード・プロセスの状態を監視するために使用されます。</target>
        </trans-unit>
        <trans-unit id="da7bbaecae40d9f33dd8a209e99744eb1c0c9592" translate="yes" xml:space="preserve">
          <source>The following example (from the &lt;a href=&quot;../navigator/sendbeacon&quot;&gt;sendBeacon docs&lt;/a&gt;) shows a theoretical analytics code that attempts to submit data to a server by using a synchronous XMLHttpRequest in an unload handler. This results in the unloading of the page to be delayed.</source>
          <target state="translated">次の例（&lt;a href=&quot;../navigator/sendbeacon&quot;&gt;sendBeacon docs&lt;/a&gt;から）は、アンロードハンドラーで同期XMLHttpRequestを使用してサーバーにデータを送信しようとする理論的な分析コードを示しています。これにより、ページのアンロードが遅延します。</target>
        </trans-unit>
        <trans-unit id="6eccf72506bb36ad8cc98678d998c82dbb302e72" translate="yes" xml:space="preserve">
          <source>The following example adds a &lt;code&gt;ProgressEvent&lt;/code&gt; to a new &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHTTPRequest&lt;/code&gt;&lt;/a&gt; and uses it to display the status of the request.</source>
          <target state="translated">次の例では、 &lt;code&gt;ProgressEvent&lt;/code&gt; を新しい&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHTTPRequest&lt;/code&gt; に&lt;/a&gt;追加し、それを使用してリクエストのステータスを表示します。</target>
        </trans-unit>
        <trans-unit id="0f16b7c83152a8a728921d0884db42ccfe44c6b7" translate="yes" xml:space="preserve">
          <source>The following example autosaves the contents of a text field, and if the browser is accidentally refreshed, restores the text field content so that no writing is lost.</source>
          <target state="translated">以下の例では、テキストフィールドの内容を自動保存し、ブラウザを誤ってリフレッシュした場合には、テキストフィールドの内容を復元して書き込みが失われないようにしています。</target>
        </trans-unit>
        <trans-unit id="cb6dece3fa9bda3ba581551a33ecb59eac605ce1" translate="yes" xml:space="preserve">
          <source>The following example calls the &lt;code&gt;flashtext()&lt;/code&gt; function once a second until the Stop button is pressed.</source>
          <target state="translated">次の例では、Stopボタンが押されるまで、 &lt;code&gt;flashtext()&lt;/code&gt; 関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a1a47bfae0d8fb231f36f7aaf8142a231ba68043" translate="yes" xml:space="preserve">
          <source>The following example captures all keypresses.</source>
          <target state="translated">次の例では、すべてのキープレスをキャプチャします。</target>
        </trans-unit>
        <trans-unit id="e38813eaf70fc464620e48f4b1063d81bcb72744" translate="yes" xml:space="preserve">
          <source>The following example captures the &quot;W&quot;, &quot;A&quot;, &quot;S&quot;, and &quot;D&quot; keys. It captures these keys regardless of which modifiers are used with the key press. Assuming a standard US QWERTY layout, registering &lt;code&gt;&quot;KeyW&quot;&lt;/code&gt; ensures that &quot;W&quot;, Shift+&quot;W&quot;, Control+&quot;W&quot;, Control+Shift+&quot;W&quot;, and all other key modifier combinations with &quot;W&quot; are sent to the app. The same applies to for &lt;code&gt;&quot;KeyA&quot;&lt;/code&gt;, &lt;code&gt;&quot;KeyS&quot;&lt;/code&gt; and &lt;code&gt;&quot;KeyD&quot;&lt;/code&gt;.</source>
          <target state="translated">次の例では、「W」、「A」、「S」、および「D」キーをキャプチャします。キーを押すときに使用する修飾子に関係なく、これらのキーをキャプチャします。標準のUS QWERTYレイアウトを想定して、 &lt;code&gt;&quot;KeyW&quot;&lt;/code&gt; を登録すると、「W」、Shift +「W」、Control +「W」、Control + Shift +「W」、および「W」を含む他のすべてのキー修飾子の組み合わせがアプリに送信されます。同じことがのために適用される &lt;code&gt;&quot;KeyA&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;KeyS&quot;&lt;/code&gt; と &lt;code&gt;&quot;KeyD&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdf5d1af88595c220201eb81131ed3df7ae8e530" translate="yes" xml:space="preserve">
          <source>The following example causes a newly installed service worker to progress into the &lt;code&gt;activating&lt;/code&gt; state, regardless of whether there is already an active service worker.</source>
          <target state="translated">次の例では、すでにアクティブなService Workerがあるかどうかに関係なく、新しくインストールされたService Workerを &lt;code&gt;activating&lt;/code&gt; 状態に移行させます。</target>
        </trans-unit>
        <trans-unit id="f9106ab353d01668f40b8e4a793e8f32b6125408" translate="yes" xml:space="preserve">
          <source>The following example checks all &lt;code&gt;PerformanceEntry&lt;/code&gt; properties to see if the browser supports them and if so, write their values to the console.</source>
          <target state="translated">次の例では、すべての &lt;code&gt;PerformanceEntry&lt;/code&gt; プロパティをチェックして、ブラウザーがそれらをサポートしているかどうかを確認し、サポートしている場合はそれらの値をコンソールに書き込みます。</target>
        </trans-unit>
        <trans-unit id="d356565ed5f3dd072ee4363f9a0d214d6f62ea99" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;a href=&quot;../formdata&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; object with an appended &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Security/Same-origin_policy#How_to_block_cross-origin_access&quot;&gt;CSRF token&lt;/a&gt;. It then stores the form object in the additionalData parameter, before sending it to server in a call to &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例では、&lt;a href=&quot;https://developer.mozilla.org/docs/Web/Security/Same-origin_policy#How_to_block_cross-origin_access&quot;&gt;CSRFトークンが&lt;/a&gt;追加された&lt;a href=&quot;../formdata&quot;&gt; &lt;code&gt;FormData&lt;/code&gt; &lt;/a&gt;オブジェクトを作成します。次に、&lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; の&lt;/a&gt;呼び出しでサーバーに送信する前に、フォームオブジェクトをadditionalDataパラメータに格納します。</target>
        </trans-unit>
        <trans-unit id="84c8da872076116102ffdc018105267705612bdd" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/submit&quot;&gt;submit&lt;/a&gt;&lt;/code&gt; handler and when that event is fired, the handler calls &lt;code&gt;sendBeacon()&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/submit&quot;&gt;submit&lt;/a&gt;&lt;/code&gt; ハンドラを作成し、そのイベントが発生すると、ハンドラが &lt;code&gt;sendBeacon()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="9b07dfcd216a3258aa9c76afc3be6a9dbea92c4a" translate="yes" xml:space="preserve">
          <source>The following example creates a new media session and assigns action handlers to it:</source>
          <target state="translated">次の例では、新しいメディアセッションを作成し、それにアクションハンドラを割り当てています。</target>
        </trans-unit>
        <trans-unit id="75ff81017b5d4e13126fddb621e00510c8761629" translate="yes" xml:space="preserve">
          <source>The following example demonstrates &lt;code&gt;setInterval()&lt;/code&gt;'s basic syntax.</source>
          <target state="translated">次の例は、 &lt;code&gt;setInterval()&lt;/code&gt; の基本構文を示しています。</target>
        </trans-unit>
        <trans-unit id="b143d34a8bda993f3eeed8ce9d5fe04ce5ca3f4a" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how a popup window can change the URL of the window that opened it. Before attempting to change the URL, it checks that the current window has an opener using the &lt;a href=&quot;opener&quot;&gt;window.opener&lt;/a&gt; property and that the opener isn't closed:</source>
          <target state="translated">次の例は、ポップアップウィンドウがそれを開いたウィンドウのURLを変更する方法を示しています。URLを変更する前に、現在のウィンドウに&lt;a href=&quot;opener&quot;&gt;window.opener&lt;/a&gt;プロパティを使用したオープナーがあること、およびオープナーが閉じられていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="96f439883149adbaf9e9a5fb875500f83926d862" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how invalid text input can be stopped from reaching the input field with &lt;code&gt;preventDefault()&lt;/code&gt;. Nowadays, you should usually use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&quot;&gt;native HTML form validation&lt;/a&gt; instead.</source>
          <target state="translated">次の例は、 &lt;code&gt;preventDefault()&lt;/code&gt; を使用して無効なテキスト入力が入力フィールドに到達しないようにする方法を示しています。現在、通常は代わりに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&quot;&gt;ネイティブHTMLフォーム検証を&lt;/a&gt;使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d115a980cf80419a5e42998b96b2fb220ca24575" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to get the location- or layout-specific string associated with the key that corresponds to the 'W' key on an English QWERTY keyboard.</source>
          <target state="translated">以下の例は、英語の QWERTY キーボードの「W」キーに対応するキーに関連付けられた場所またはレイアウト固有の文字列を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="6a1f90bebe83ef56f548801b18cc524554e82137" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the usage of these two methods.</source>
          <target state="translated">以下の例では、これら2つの方法の使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="3d6d7a660f7806ffb3fa5307cb73bf74be7fc6bc" translate="yes" xml:space="preserve">
          <source>The following example demonstrates using these three properties.</source>
          <target state="translated">次の例では、これらの 3 つのプロパティを使用してデモを行います。</target>
        </trans-unit>
        <trans-unit id="aad2ea2e1e3c8eaeb54be5a776c3c6ccb948dfbb" translate="yes" xml:space="preserve">
          <source>The following example displays a button to open a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;showModal()&lt;/code&gt; method. From there, either button will close the dialog.</source>
          <target state="translated">次の例では、 &lt;code&gt;showModal()&lt;/code&gt; メソッドを介してフォームを含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt;を開くためのボタンを表示します。そこから、どちらのボタンでもダイアログが閉じます。</target>
        </trans-unit>
        <trans-unit id="7d23059d7a9b94c8e97be5c01cd635ee29b89394" translate="yes" xml:space="preserve">
          <source>The following example displays information about the installed plugin(s).</source>
          <target state="translated">次の例では、インストールされているプラグインの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="81066703b0caadc4fa0ff211f98b6c7251222695" translate="yes" xml:space="preserve">
          <source>The following example extracts the details from the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object to the promise returned from &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;. In a real-world implementation this data would then be sent to a payment server.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt;オブジェクトから&lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt;から返されたpromiseに詳細を抽出します。実際の実装では、このデータは支払いサーバーに送信されます。</target>
        </trans-unit>
        <trans-unit id="25e39a1e409efa9bbcca7b383c65d562cbfabe47" translate="yes" xml:space="preserve">
          <source>The following example extracts the method name from the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object to the promise returned from &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;. In a real-world implementation this data would then be sent to a payment server.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt;オブジェクトから&lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt;から返されたpromiseにメソッド名を抽出します。実際の実装では、このデータは支払いサーバーに送信されます。</target>
        </trans-unit>
        <trans-unit id="dbf470caff1de817651b6cf06db79034f566198d" translate="yes" xml:space="preserve">
          <source>The following example finishes all the animations on a single element, regardless of their direction of playback.</source>
          <target state="translated">以下の例では、再生方向に関係なく、1つの要素上のすべてのアニメーションが終了します。</target>
        </trans-unit>
        <trans-unit id="0b71b2fbef0e5f6700dd695b9f07771024e2d970" translate="yes" xml:space="preserve">
          <source>The following example first checks whether a cache called 'v1' exists. If so, we add a list of assets to it. If not (meaning the &lt;code&gt;has()&lt;/code&gt; promise would reject) then we run some kind of cache set-up function.</source>
          <target state="translated">次の例では、最初に「v1」というキャッシュが存在するかどうかを確認します。もしそうなら、それにアセットのリストを追加します。そうでない場合（つまり、 &lt;code&gt;has()&lt;/code&gt; が拒否されることを意味します）、ある種のキャッシュ設定関数を実行します。</target>
        </trans-unit>
        <trans-unit id="a567cd1a114322f599117ece33641e09256a1195" translate="yes" xml:space="preserve">
          <source>The following example function returns the version of the Shockwave Flash plugin.</source>
          <target state="translated">次の例の関数は、Shockwave Flash プラグインのバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="194490be2e10b4b41e6ede90dbe2c0a1d7326b7d" translate="yes" xml:space="preserve">
          <source>The following example goes through all nodes in the body, reduces the set of nodes to elements, simply passes through as acceptable each node (it could reduce the set in the &lt;code&gt;acceptNode()&lt;/code&gt; method instead), and then makes use of tree walker iterator that is created to advance through the nodes (now all elements) and push them into an array.</source>
          <target state="translated">次の例では、本体のすべてのノードを通過し、ノードのセットを要素に減らし、受け入れ可能な各ノードを単に通過さ &lt;code&gt;acceptNode()&lt;/code&gt; 代わりに、acceptNode（）メソッドのセットを減らすことができます）、ツリーウォーカーイテレーターを利用します。ノード（現在はすべての要素）を進み、それらを配列にプッシュするために作成されます。</target>
        </trans-unit>
        <trans-unit id="db3e9a5322525c5d5ca85411ef8409f9bc0d919c" translate="yes" xml:space="preserve">
          <source>The following example hints that the quality of filtering when generating mipmap images should be most efficient instead of best quality.</source>
          <target state="translated">以下の例は、ミップマップ画像を生成する際のフィルタリングの品質が、最高の品質ではなく、最も効率的であることを示唆しています。</target>
        </trans-unit>
        <trans-unit id="35b51224b0799135bdce530675ce5c8453a3b3bc" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a bound key range. Here we declare a &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;);&lt;/code&gt; &amp;mdash; a range between values of &quot;A&quot; and &quot;F&quot;. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve records with keys inside that range. This range includes the values &quot;A&quot; and &quot;F&quot;, as we haven't declared that they should be open bounds. If we used IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;, true, true);, then the range would not include &quot;A&quot; and &quot;F&quot;, only the values between them.</source>
          <target state="translated">次の例は、バインドされたキー範囲の使用方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;);&lt;/code&gt; を宣言しています。 &amp;mdash;「A」と「F」の値の間の範囲。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。つまり、カーソルはその範囲内のキーを持つレコードのみを取得します。この範囲には、「A」と「F」の値が含まれます。これは、これらが開いた境界であることを宣言していないためです。 IDBKeyRange.bound（ &quot;A&quot;、 &quot;F&quot;、true、true）;を使用した場合、範囲には &quot;A&quot;と &quot;F&quot;は含まれず、それらの間の値のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="ddb30353976928d50d5a53d164c7b0047a41ca3e" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;, &quot;W&quot;, true, true);&lt;/code&gt; &amp;mdash; a range that includes everything between &quot;F&quot; and &quot;W&quot; but not including them &amp;mdash; since both the upper and lower bounds have been declared as open (&lt;code&gt;true&lt;/code&gt;). We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value.</source>
          <target state="translated">次の例は、キー範囲の使用方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;, &quot;W&quot;, true, true);&lt;/code&gt; を宣言しています。 &amp;mdash;「F」と「W」の間のすべてを含み、それらを含まない範囲&amp;mdash;上限と下限の両方がオープン（ &lt;code&gt;true&lt;/code&gt; ）として宣言されているため。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。</target>
        </trans-unit>
        <trans-unit id="b204b38aaabde66e48b16c02660e8fb750ae89b6" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a key range. Here we declare a &lt;code&gt;keyRangeValue&lt;/code&gt; as a range between values of &quot;A&quot; and &quot;F&quot;. We open a transaction (using &lt;a href=&quot;idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve records with keys inside that range. This range includes the values &quot;A&quot; and &quot;F&quot;, as we haven't declared that they should be open bounds. If we used IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;, true, true);, then the range would not include &quot;A&quot; and &quot;F&quot;, only the values between them.</source>
          <target state="translated">次の例は、キー範囲の使用方法を示しています。ここでは、「A」と「F」の値の間の範囲として &lt;code&gt;keyRangeValue&lt;/code&gt; を宣言しています。トランザクション（&lt;a href=&quot;idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。つまり、カーソルはその範囲内のキーを持つレコードのみを取得します。この範囲には、「A」と「F」の値が含まれます。これは、これらが開いた境界であることを宣言していないためです。 IDBKeyRange.bound（ &quot;A&quot;、 &quot;F&quot;、true、true）;を使用した場合、範囲には &quot;A&quot;と &quot;F&quot;は含まれず、それらの間の値のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="02f4b77bc763c2252e0525b61c03dbfe8f753566" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a lower bound key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.lowerBound(&quot;F&quot;, false);&lt;/code&gt; &amp;mdash; a range that includes the value &quot;F&quot; and everthing after it. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve the record with the key value &quot;F&quot; and all that come after it. If we used &lt;code&gt;IDBKeyRange.lowerBound(&quot;F&quot;, true);&lt;/code&gt;, then the range would not include &quot;F&quot;; only the values after it.</source>
          <target state="translated">次の例は、下限キー範囲を使用する方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.lowerBound(&quot;F&quot;, false);&lt;/code&gt; を宣言しています。 &amp;mdash;値「F」とその後のすべてを含む範囲。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。これは、カーソルがキー値 &quot;F&quot;を持つレコードとその後に続くすべてのレコードのみを取得することを意味します。 &lt;code&gt;IDBKeyRange.lowerBound(&quot;F&quot;, true);&lt;/code&gt; を使用した場合、の場合、範囲には「F」は含まれません。それ以降の値のみ。</target>
        </trans-unit>
        <trans-unit id="eb7b06a83b98a8307c1918f9823f142d4b61cbf5" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use an only key range. Here we declare a &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.only(&quot;A&quot;);&lt;/code&gt; &amp;mdash; a range that only includes the value &quot;A&quot;. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve the record with the key value &quot;A&quot;.</source>
          <target state="translated">次の例は、キー範囲のみを使用する方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.only(&quot;A&quot;);&lt;/code&gt; を宣言しています。 &amp;mdash;値「A」のみを含む範囲。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。つまり、カーソルはキー値 &quot;A&quot;のレコードのみを取得します。</target>
        </trans-unit>
        <trans-unit id="f81660c916b5714cab9e857713d7d142f8eca7eb" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use an upper bound key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;);&lt;/code&gt; &amp;mdash; a range that includes the value &quot;F&quot; and everything before it. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value.</source>
          <target state="translated">次の例は、上限キー範囲の使用方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;);&lt;/code&gt; を宣言しています。 &amp;mdash;値「F」とその前のすべてを含む範囲。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。</target>
        </trans-unit>
        <trans-unit id="4e090a3f27eb36a7c6335c49f3de512b8cd5f335" translate="yes" xml:space="preserve">
          <source>The following example illustrates several features of this interface. It shows the creation of the &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">次の例は、このインターフェースのいくつかの機能を示しています。カスタムシンクとAPI提供のキューイング戦略を使用した &lt;code&gt;WritableStream&lt;/code&gt; の作成を示しています。次に、 &lt;code&gt;sendMessage()&lt;/code&gt; という関数を呼び出し、新しく作成されたストリームと文字列を渡します。この関数内では、ストリームの &lt;code&gt;getWriter()&lt;/code&gt; メソッドを呼び出します。このメソッドは、&lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。 &lt;code&gt;forEach()&lt;/code&gt; 呼び出しは、ストリームに文字列の各チャンクを書き込むために使用されます。最後に、 &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;close()&lt;/code&gt; は、チャンクおよびストリームの成功または失敗を処理するために処理されるプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="5ed73bdbaf82aa2eccfdf99f72137cfd2afeb74a" translate="yes" xml:space="preserve">
          <source>The following example illustrates several features of this interface. It shows the creation of the &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">次の例は、このインターフェースのいくつかの機能を示しています。カスタムシンクとAPI提供のキューイング戦略を使用した &lt;code&gt;WritableStream&lt;/code&gt; の作成を示しています。次に、 &lt;code&gt;sendMessage()&lt;/code&gt; という関数を呼び出し、新しく作成されたストリームと文字列を渡します。この関数内では、ストリームの &lt;code&gt;getWriter()&lt;/code&gt; メソッドを呼び出します。このメソッドは、&lt;a href=&quot;writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。 &lt;code&gt;forEach()&lt;/code&gt; 呼び出しは、ストリームに文字列の各チャンクを書き込むために使用されます。最後に、 &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;close()&lt;/code&gt; は、チャンクおよびストリームの成功または失敗を処理するために処理されるプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="8660e7e32ee5dde47e9329ee74093427dbff1047" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, recreating a sine wave from a periodic wave.</source>
          <target state="translated">次の例は、 &lt;code&gt;createPeriodicWave()&lt;/code&gt; の簡単な使用法を示しており、周期的な波から正弦波を再作成しています。</target>
        </trans-unit>
        <trans-unit id="bab3fad291454de1fc35966fb217fd19aee0b9a1" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, to create a &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object containing a simple sine wave.</source>
          <target state="translated">次の例は、単純な正弦波を含む&lt;a href=&quot;../periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するための &lt;code&gt;createPeriodicWave()&lt;/code&gt; の簡単な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="1823a7f0b766ef4dbe854d69b017db28e818b125" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, to create a &lt;a href=&quot;periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object containing a simple sine wave.</source>
          <target state="translated">次の例は、単純な正弦波を含む&lt;a href=&quot;periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するための &lt;code&gt;createPeriodicWave()&lt;/code&gt; の簡単な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="e805d3e838ed10d317e4e32471a16c3d652b48bb" translate="yes" xml:space="preserve">
          <source>The following example illustrates this property's usage.</source>
          <target state="translated">以下の例は、このプロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="78d6f1a441d319a767fb2ee0acd033b95f92146a" translate="yes" xml:space="preserve">
          <source>The following example illustrates using the resource timing properties to calculate the amount of time the following phases take: redirection (&lt;a href=&quot;../performanceresourcetiming/redirectstart&quot;&gt;&lt;code&gt;redirectStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/redirectend&quot;&gt;&lt;code&gt;redirectEnd&lt;/code&gt;&lt;/a&gt; ), DNS lookup (&lt;a href=&quot;../performanceresourcetiming/domainlookupstart&quot;&gt;&lt;code&gt;domainLookupStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/domainlookupend&quot;&gt;&lt;code&gt;domainLookupEnd&lt;/code&gt;&lt;/a&gt;), TCP handshake (&lt;a href=&quot;../performanceresourcetiming/connectstart&quot;&gt;&lt;code&gt;connectStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/connectend&quot;&gt;&lt;code&gt;connectEnd&lt;/code&gt;&lt;/a&gt;), and response (&lt;a href=&quot;../performanceresourcetiming/responsestart&quot;&gt;&lt;code&gt;responseStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;). This example also calculates the time from the start of the fetch and request start phases (&lt;a href=&quot;../performanceresourcetiming/fetchstart&quot;&gt;&lt;code&gt;fetchStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/requeststart&quot;&gt;&lt;code&gt;requestStart&lt;/code&gt;&lt;/a&gt;, respectively), until the response has ended (&lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;). This timing data provides a detailed profile of the resource loading phases and this data can be used to help identify performance bottlenecks.</source>
          <target state="translated">次の例は、次のフェーズが取る時間の量を計算するためにリソースタイミング特性を使用して示す：リダイレクション（&lt;a href=&quot;../performanceresourcetiming/redirectstart&quot;&gt; &lt;code&gt;redirectStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/redirectend&quot;&gt; &lt;code&gt;redirectEnd&lt;/code&gt; &lt;/a&gt;）、DNSルックアップ（&lt;a href=&quot;../performanceresourcetiming/domainlookupstart&quot;&gt; &lt;code&gt;domainLookupStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/domainlookupend&quot;&gt; &lt;code&gt;domainLookupEnd&lt;/code&gt; &lt;/a&gt;）、TCPハンドシェーク（&lt;a href=&quot;../performanceresourcetiming/connectstart&quot;&gt; &lt;code&gt;connectStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/connectend&quot;&gt; &lt;code&gt;connectEnd&lt;/code&gt; &lt;/a&gt;）、及び応答（&lt;a href=&quot;../performanceresourcetiming/responsestart&quot;&gt; &lt;code&gt;responseStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt; &lt;code&gt;responseEnd&lt;/code&gt; &lt;/a&gt;） 。この例では、フェッチとリクエストの開始フェーズ（それぞれ&lt;a href=&quot;../performanceresourcetiming/fetchstart&quot;&gt; &lt;code&gt;fetchStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/requeststart&quot;&gt; &lt;code&gt;requestStart&lt;/code&gt; &lt;/a&gt;）の開始から応答が終了する（&lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt; &lt;code&gt;responseEnd&lt;/code&gt; &lt;/a&gt;）までの時間も計算します。）。このタイミングデータは、リソースの読み込みフェーズの詳細なプロファイルを提供します。このデータは、パフォーマンスのボトルネックを特定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="fe3d3e53544e9413c755229f7715f1249ca26a6f" translate="yes" xml:space="preserve">
          <source>The following example is a little more complex than the ones we've seen above. It draws 12 different arcs all with different angles and fills.</source>
          <target state="translated">次の例は、上で見たものよりも少し複雑です。これは12の異なる角度と塗りつぶしで12の異なる円弧を描いています。</target>
        </trans-unit>
        <trans-unit id="9091b5147a452e35edfa55027dfd27012dfc464a" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">次の例は、WebVR APIを使用して&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;ループの各フレームの単純な&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt;シーンのビューを更新する&lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt;デモからの抜粋です。</target>
        </trans-unit>
        <trans-unit id="8c9e5c16e4e1cba1dac8c0d2f23753d75b3c3ca7" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">次の例は、WebVR APIを使用して&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;ループの各フレームの単純な&lt;a href=&quot;canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt;シーンのビューを更新する&lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt;デモからの抜粋です。</target>
        </trans-unit>
        <trans-unit id="a73ee493927b61af16297c354a50245955261d69" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; demo (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;). You can see that we use &lt;code&gt;attachShadow()&lt;/code&gt; in the middle of the code to create a shadow root, which we then attach our custom element's contents to.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt;デモから取得したものです（&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;実際にご覧ください&lt;/a&gt;）。コードの途中で &lt;code&gt;attachShadow()&lt;/code&gt; を使用してシャドウルートを作成し、カスタム要素のコンテンツをアタッチすることがわかります。</target>
        </trans-unit>
        <trans-unit id="27237dac61ebabd3ac7aafdb0a8fd9b70dac05f8" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;https://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">次の例は、WebVRAPIを使用して&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;ループの各フレームで単純な&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt;シーンのビューを更新する&lt;a href=&quot;https://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt;デモから抜粋したものです。</target>
        </trans-unit>
        <trans-unit id="c2899fbc7afb781eb94370e94f0d5c8355aa2f07" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;https://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">次の例は、WebVRAPIを使用して&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;ループの各フレームで単純な&lt;a href=&quot;canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt;シーンのビューを更新する&lt;a href=&quot;https://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt;デモから抜粋したものです。</target>
        </trans-unit>
        <trans-unit id="4e9378cdd85dabef22c84dd593e8f474bb1100ef" translate="yes" xml:space="preserve">
          <source>The following example is taken from the Mozilla VR Team's &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; code &amp;mdash; to be precise, the &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js file&lt;/a&gt;. Early on in the code the &lt;a href=&quot;../hmdvrdevice/geteyeparameters&quot;&gt;&lt;code&gt;HMDVRDevice.getEyeParameters&lt;/code&gt;&lt;/a&gt; method is used to access information about each eye &amp;mdash; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/eyeTranslation&quot;&gt;&lt;code&gt;VREyeParameters.eyeTranslation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;recommendedfieldofview&quot;&gt;&lt;code&gt;VREyeParameters.recommendedFieldOfView&lt;/code&gt;&lt;/a&gt; &amp;mdash; which are used for rendering calulations later on.</source>
          <target state="translated">次の例は、Mozilla VRチームの&lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt;コード（正確には&lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.jsファイル）&lt;/a&gt;からの抜粋です。コードの早い段階で、&lt;a href=&quot;../hmdvrdevice/geteyeparameters&quot;&gt; &lt;code&gt;HMDVRDevice.getEyeParameters&lt;/code&gt; &lt;/a&gt;メソッドを使用して、各目に関する情報（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/eyeTranslation&quot;&gt; &lt;code&gt;VREyeParameters.eyeTranslation&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;recommendedfieldofview&quot;&gt; &lt;code&gt;VREyeParameters.recommendedFieldOfView&lt;/code&gt; )&lt;/a&gt;にアクセスします。これらは、後で計算をレンダリングするために使用されます。</target>
        </trans-unit>
        <trans-unit id="4c83038ff4deee70f3d0d107a275cd2c4ed87d96" translate="yes" xml:space="preserve">
          <source>The following example is taken from the Mozilla VR Team's &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; code &amp;mdash; to be precise, the &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js file&lt;/a&gt;. Early on in the code the &lt;code&gt;getEyeParameters()&lt;/code&gt; method is used to access information about each eye, which is then used for rendering calulations later on.</source>
          <target state="translated">次の例は、Mozilla VRチームの&lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt;コード（正確には&lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.jsファイル）&lt;/a&gt;からの抜粋です。コードの &lt;code&gt;getEyeParameters()&lt;/code&gt; メソッドを使用して、各目に関する情報にアクセスします。これは、後で計算をレンダリングするために使用されます。</target>
        </trans-unit>
        <trans-unit id="11ca9d29fc77585ce775ce9b31a46f2e7e1505ca" translate="yes" xml:space="preserve">
          <source>The following example logs the product name and serial number of paired devices to the console. For information on pairing devices, see &lt;a href=&quot;requestdevice&quot;&gt;&lt;code&gt;USB.requestDevice()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例では、ペアリングされたデバイスの製品名とシリアル番号をコンソールに記録します。デバイスのペアリングについては、&lt;a href=&quot;requestdevice&quot;&gt; &lt;code&gt;USB.requestDevice()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4bcd07c1f5c495fd38e7674c48afc61f7ab14e11" translate="yes" xml:space="preserve">
          <source>The following example looks for one of two USB devices. Notice that two product IDs are specified. Both are passed to &lt;code&gt;requestDevice()&lt;/code&gt;. This triggers a user-agent flow that prompts the user to select a device for pairing. Only the selected device is passed to &lt;code&gt;then()&lt;/code&gt;.</source>
          <target state="translated">次の例では、2つのUSBデバイスの1つを探します。2つの製品IDが指定されていることに注意してください。どちらも &lt;code&gt;requestDevice()&lt;/code&gt; に渡されます。これにより、ユーザーエージェントフローがトリガーされ、ペアリングするデバイスを選択するようユーザーに求められます。選択したデバイスのみが &lt;code&gt;then()&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="9c03c947dc1246c1861de8c740f9704078b64672" translate="yes" xml:space="preserve">
          <source>The following example monitors the connection using the &lt;code&gt;change&lt;/code&gt; event and logs changes as they occur.</source>
          <target state="translated">次の例では、 &lt;code&gt;change&lt;/code&gt; イベントを使用して接続を監視し、変更が発生したときにログに記録します。</target>
        </trans-unit>
        <trans-unit id="d303269a86cd7e58b2c609ffa15d7d105cba440d" translate="yes" xml:space="preserve">
          <source>The following example positions a container &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 5 pixels from the top and 10 pixels from the left of the page.</source>
          <target state="translated">次の例では、コンテナ &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; をページの上から5ピクセル、左から10ピクセルに配置しています。</target>
        </trans-unit>
        <trans-unit id="bb2d51b94b9a60b51094f2475685d4009bca7e1d" translate="yes" xml:space="preserve">
          <source>The following example prints the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;textContent&lt;/code&gt;&lt;/a&gt; properties of each &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element named &lt;code&gt;&quot;box&quot;&lt;/code&gt;:</source>
          <target state="translated">次の例では、 &lt;code&gt;&quot;box&quot;&lt;/code&gt; という名前の &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 要素内の各 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; タグの&lt;a href=&quot;node/textcontent&quot;&gt; &lt;code&gt;textContent&lt;/code&gt; &lt;/a&gt;プロパティを出力します。</target>
        </trans-unit>
        <trans-unit id="6115eab559d31910e7acfcf0b01f54a368b902fe" translate="yes" xml:space="preserve">
          <source>The following example provides a box where the lists of items and formats dropped on it are displayed.</source>
          <target state="translated">以下の例では、その上にドロップした項目やフォーマットのリストが表示されるボックスを用意しています。</target>
        </trans-unit>
        <trans-unit id="1dc60c447a843173e8c9bbcaf99edbaf2826f787" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The &lt;code&gt;readyState&lt;/code&gt; of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。2番目のリクエストの &lt;code&gt;readyState&lt;/code&gt; は、開発者コンソールに記録されます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="f4dff4f23e6550cf000485223936c19a4e248468" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The &lt;code&gt;readyState&lt;/code&gt; of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。2番目のリクエストの &lt;code&gt;readyState&lt;/code&gt; は、開発者コンソールに記録されます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To Do通知&lt;/a&gt;アプリを参照してください（&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;例をライブで表示し&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="e0336a4eabdc583e95680a3d0f1c0e8d996a6622" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。 2番目のリクエストのソースは開発者コンソールに記録されます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="fa3245380ac31c8e2f527344301f533e5a33967b" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。 2番目のリクエストのソースは、開発者コンソールに記録されます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To Do通知&lt;/a&gt;アプリを参照してください（&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;例をライブで表示し&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="6ae97566e7a056d9130e6a429269fa84ca1510fc" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the requests is logged to the developer console &amp;mdash; both originate from the same transaction. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。リクエストのソースは開発者コンソールに記録されます&amp;mdash;どちらも同じトランザクションから発生します。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="8007e2944ef7ba7d9a0c0d56df0dd9d6db153e49" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the requests is logged to the developer console &amp;mdash; both originate from the same transaction. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。リクエストのソースは開発者コンソールに記録されます&amp;mdash;どちらも同じトランザクションから発信されます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To Do通知&lt;/a&gt;アプリを参照してください（&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;例をライブで表示し&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="0bf0b7548845980c1d5dcad28742d81af7aedc0b" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. Also included at the bottom is an &lt;code&gt;onerror&lt;/code&gt; function that reports what the error was if the request fails. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、オブジェクトストアに更新されたレコード・バックを置きます。また、下部には、リクエストが失敗した場合のエラーを報告する &lt;code&gt;onerror&lt;/code&gt; 関数も含まれています。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="4198e9f1f8be525e2fd46ec8117239969eec7163" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. Also included at the bottom is an &lt;code&gt;onerror&lt;/code&gt; function that reports what the error was if the request fails. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、オブジェクトストアに更新されたレコード・バックを置きます。下部には、リクエストが失敗した場合にエラーが何であったかを報告する &lt;code&gt;onerror&lt;/code&gt; 関数も含まれています。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To Do通知&lt;/a&gt;アプリを参照してください（&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;例をライブで表示し&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="d07e5d312940b7b80d5322d83eef5ba6ff2866f3" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、オブジェクトストアに更新されたレコード・バックを置きます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="aec6a7f9feb785e72e5d430774813695ffd76a95" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、オブジェクトストアに更新されたレコード・バックを置きます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To Do通知&lt;/a&gt;アプリを参照してください（&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;例をライブで表示し&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="850f99390f095f5e272ec1904dbe78d472bbe2fc" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title; when that request is successful the &lt;code&gt;onsuccess&lt;/code&gt; function gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request with &lt;code&gt;put()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、特定のレコードタイトルを要求しています。その要求が成功したとき &lt;code&gt;onsuccess&lt;/code&gt; 機能から、関連するレコードを取得する&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つのプロパティを更新し、その後で別の要求内のオブジェクトストアに更新されたレコードの背中を置く &lt;code&gt;put()&lt;/code&gt; 。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="f18a9b66d635f84cd75156159ef97aa9a0fead2b" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title; when that request is successful the &lt;code&gt;onsuccess&lt;/code&gt; function gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request with &lt;code&gt;put()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、特定のレコードタイトルを要求します。その要求が成功したとき &lt;code&gt;onsuccess&lt;/code&gt; 機能から、関連するレコードを取得する&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つのプロパティを更新し、その後で別の要求内のオブジェクトストアに更新されたレコードの背中を置く &lt;code&gt;put()&lt;/code&gt; 。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To Do通知&lt;/a&gt;アプリを参照してください（&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;例をライブで表示し&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="990f96c3487ac24e580f88dcf924b2bb93b884c0" translate="yes" xml:space="preserve">
          <source>The following example resets the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property to its defaults.</source>
          <target state="translated">次の例では、CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;プロパティをデフォルトにリセットします。</target>
        </trans-unit>
        <trans-unit id="a4c1a57c4ca6684fa2f2d56c1548fee41c8ad915" translate="yes" xml:space="preserve">
          <source>The following example returns the data associated with the best-supported format:</source>
          <target state="translated">次の例は、最もサポートされている形式に関連付けられたデータを返します。</target>
        </trans-unit>
        <trans-unit id="2c576708ef5aaa02518bb5f857c48818940df581" translate="yes" xml:space="preserve">
          <source>The following example runs through the attribute nodes for the element in the document with id &quot;paragraph&quot;, and prints each attribute's value.</source>
          <target state="translated">以下の例では、id &quot;paragraph&quot; を持つ文書内の要素の属性ノードを実行し、各属性の値を表示しています。</target>
        </trans-unit>
        <trans-unit id="64636f22e839bb76e65af4be7439cec7abf92938" translate="yes" xml:space="preserve">
          <source>The following example sends payment information to a secure server using the &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;. It calls &lt;code&gt;complete()&lt;/code&gt; with an answer appropriate to the status in the response.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;を使用して支払い情報を安全なサーバーに送信します。応答のステータスに適した応答で &lt;code&gt;complete()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="53abf31adeec8a09dcd20df96daf7c3014d8ae99" translate="yes" xml:space="preserve">
          <source>The following example sets a callback function on the &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; property.</source>
          <target state="translated">次の例では、 &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; プロパティにコールバック関数を設定します。</target>
        </trans-unit>
        <trans-unit id="d3f7dbc2eb06624059a847a0d173430eea3c2d5d" translate="yes" xml:space="preserve">
          <source>The following example sets up a timeout to clear the payment request that might have been abandoned or neglected.</source>
          <target state="translated">以下の例では、放棄または放置されている可能性のある支払い要求をクリアするためのタイムアウトを設定しています。</target>
        </trans-unit>
        <trans-unit id="177b489e63fd126ecc71555c3891a912111adbae" translate="yes" xml:space="preserve">
          <source>The following example sets up event handlers for pausing and playing:</source>
          <target state="translated">以下の例では、一時停止と再生のイベントハンドラを設定します。</target>
        </trans-unit>
        <trans-unit id="4c5c78a1b0be981f77893b3d54c69156c847461d" translate="yes" xml:space="preserve">
          <source>The following example sets up event handlers, for pausing and playing:</source>
          <target state="translated">以下の例では、一時停止と再生のためのイベントハンドラを設定します。</target>
        </trans-unit>
        <trans-unit id="46edbb0e256976b59fccba6f12043d13b9f70932" translate="yes" xml:space="preserve">
          <source>The following example sets up two simple buttons in a web page and hooks them to the &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;clearTimeout()&lt;/code&gt; routines. Pressing the first button will set a timeout which calls an alert dialog after two seconds and stores the timeout id for use by &lt;code&gt;clearTimeout()&lt;/code&gt;. You may optionally cancel this timeout by pressing on the second button.</source>
          <target state="translated">次の例では、Webページに2つのシンプルなボタンを設定し、それらを &lt;code&gt;setTimeout()&lt;/code&gt; および &lt;code&gt;clearTimeout()&lt;/code&gt; ルーチンにフックします。最初のボタンを押すとタイムアウトが設定され、2秒後にアラートダイアログが呼び出され、 &lt;code&gt;clearTimeout()&lt;/code&gt; で使用するタイムアウトIDが保存されます。オプションで、2番目のボタンを押してこのタイムアウトをキャンセルできます。</target>
        </trans-unit>
        <trans-unit id="68d80a26b4b4a08ede321cf5bbcc2808f91817ac" translate="yes" xml:space="preserve">
          <source>The following example shows &quot;id&quot; in an alert dialog.</source>
          <target state="translated">次の例では、アラートダイアログで「id」を表示しています。</target>
        </trans-unit>
        <trans-unit id="ed8d0f3f3df4dbbdb0877d093b925f1c6421132a" translate="yes" xml:space="preserve">
          <source>The following example shows &lt;code&gt;claimInterface()&lt;/code&gt; in the context of connecting to a USB device.</source>
          <target state="translated">次の例は、USBデバイスに接続する場合の &lt;code&gt;claimInterface()&lt;/code&gt; を示しています。</target>
        </trans-unit>
        <trans-unit id="855ee09d899529aa4e90342910c83a3624fafa6f" translate="yes" xml:space="preserve">
          <source>The following example shows a drop handler getting the source element's id from the drag data and then using the id to move the source element to the drop element.</source>
          <target state="translated">次の例は、ドロップハンドラがドラッグデータからソース要素のidを取得し、そのidを使ってソース要素をドロップ要素に移動させています。</target>
        </trans-unit>
        <trans-unit id="d0251c10297ab70e23d75732aa24809f1b880b02" translate="yes" xml:space="preserve">
          <source>The following example shows a pointer capture being released (when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; event occurs. The browser does this automatically when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">次の例は、ポインタキャプチャが解放されることを示しています（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; イベントが発生したとき。ブラウザは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; イベントが発生したときにこれを自動的に行います。</target>
        </trans-unit>
        <trans-unit id="ba3a2e0ca4ef19be9eb47ce63292c20cb6416871" translate="yes" xml:space="preserve">
          <source>The following example shows a possible use of the &lt;code&gt;size&lt;/code&gt; property:</source>
          <target state="translated">次の例は、 &lt;code&gt;size&lt;/code&gt; プロパティの可能な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="705a4a5a7a7b30bdae2c02e4e01f6b9d2e1058c9" translate="yes" xml:space="preserve">
          <source>The following example shows a sample definition of the first parameter of the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor, the &lt;code&gt;data&lt;/code&gt; property of which contains &lt;code&gt;supportedNetworks&lt;/code&gt; and &lt;code&gt;supportedTypes&lt;/code&gt; properties.</source>
          <target state="translated">次の例が示すの最初のパラメーターのサンプル定義&lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest()&lt;/code&gt; &lt;/a&gt;コンストラクタ、 &lt;code&gt;data&lt;/code&gt; 含まれたプロパティ &lt;code&gt;supportedNetworks&lt;/code&gt; と &lt;code&gt;supportedTypes&lt;/code&gt; の特性を。</target>
        </trans-unit>
        <trans-unit id="5f21bef05c016cada064653ab1afeee017aa62b2" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;a href=&quot;htmldialogelement/showmodal&quot;&gt;&lt;code&gt;HTMLDialogElement.showModal()&lt;/code&gt;&lt;/a&gt; function. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;htmldialogelement/close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; function), or submit the form via the submit button.</source>
          <target state="translated">次の例は、クリックすると&lt;a href=&quot;htmldialogelement/showmodal&quot;&gt; &lt;code&gt;HTMLDialogElement.showModal()&lt;/code&gt; &lt;/a&gt;関数を介してフォームを含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt;を開く簡単なボタンを示しています。そこから[ &lt;em&gt;キャンセル&lt;/em&gt; ]ボタンをクリックしてダイアログを閉じる（&lt;a href=&quot;htmldialogelement/close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt;関数を使用）か、送信ボタンを使用してフォームを送信します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7eec4b00bae065e274bf4292ff9be05ad0c0d68" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;show()&lt;/code&gt; method. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; method), or submit the form via the submit button.</source>
          <target state="translated">次の例は、クリックすると &lt;code&gt;show()&lt;/code&gt; メソッドを介してフォームを含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt;を開く簡単なボタンを示しています。そこから[ &lt;em&gt;キャンセル&lt;/em&gt; ]ボタンをクリックしてダイアログを閉じる（&lt;a href=&quot;close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt;メソッドを使用）か、送信ボタンを使用してフォームを送信します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc1e841e69d6dcaef8b6a67cf0b94228e3d3d5ea" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;showModal()&lt;/code&gt; method. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; method), or submit the form via the submit button.</source>
          <target state="translated">次の例は、クリックすると &lt;code&gt;showModal()&lt;/code&gt; メソッドを介してフォームを含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt;を開く簡単なボタンを示しています。そこから[ &lt;em&gt;キャンセル&lt;/em&gt; ]ボタンをクリックしてダイアログを閉じる（&lt;a href=&quot;close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt;メソッドを使用）か、送信ボタンを使用してフォームを送信します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dfb22cef2e2a04dc51023e4d17c1de72e8f465b" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code pattern that submits data to a server by using the &lt;code&gt;sendBeacon()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;sendBeacon()&lt;/code&gt; メソッドを使用してサーバーにデータを送信する理論的な分析コードパターンを示しています。</target>
        </trans-unit>
        <trans-unit id="89f75f9fb0dc0323340f2fcc02eca76baa2a4696" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code pattern that submits data to a server using the &lt;code&gt;sendBeacon()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;sendBeacon()&lt;/code&gt; メソッドを使用してサーバーにデータを送信する理論的な分析コードパターンを示しています。</target>
        </trans-unit>
        <trans-unit id="d0f36ea4bdd89f07960216ebd320f28329b5a515" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code that attempts to submit data to a server by using a synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; in an unload handler. This results in the unload of the page to be delayed.</source>
          <target state="translated">次の例は、アンロードハンドラーで同期 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を使用してサーバーにデータを送信しようとする理論的な分析コードを示しています。これにより、ページのアンロードが遅延します。</target>
        </trans-unit>
        <trans-unit id="87f8c6dcf867bf56ad304750f42e1a5447693d96" translate="yes" xml:space="preserve">
          <source>The following example shows an existing chat window or creates a new one when the user clicks a notification.</source>
          <target state="translated">次の例では、ユーザーが通知をクリックしたときに既存のチャットウィンドウを表示したり、新しいチャットウィンドウを作成したりしています。</target>
        </trans-unit>
        <trans-unit id="5a87c35f32473ca8c38be4c14c9fc4c23d2ad805" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of a &lt;code&gt;ScriptProcessorNode&lt;/code&gt; to take a track loaded via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt;, process it, adding a bit of white noise to each audio sample of the input track (buffer) and play it through the &lt;a href=&quot;../audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;. For each channel and each sample frame, the &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; function takes the associated &lt;code&gt;audioProcessingEvent&lt;/code&gt; and uses it to loop through each channel of the input buffer, and each sample in each channel, and add a small amount of white noise, before setting that result to be the output sample in each case.</source>
          <target state="translated">次の例は、 &lt;code&gt;ScriptProcessorNode&lt;/code&gt; の基本的な使用方法を示しています&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt;を介してロードされたトラックを取得し、処理して、入力トラック（バッファ）の各オーディオサンプルにホワイトノイズを少し追加し、&lt;a href=&quot;../audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; で再生し&lt;/a&gt;ます。各チャネルおよび各サンプルフレームについて、 &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; 関数は関連付けられた &lt;code&gt;audioProcessingEvent&lt;/code&gt; を取得し、それを使用して入力バッファの各チャネルと各チャネルの各サンプルをループし、少量のホワイトノイズを追加してから、その結果を設定します。それぞれの場合の出力サンプルになります。</target>
        </trans-unit>
        <trans-unit id="cf9a772fd3f90faf43aa600df6c164eeba40d69e" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of a &lt;code&gt;ScriptProcessorNode&lt;/code&gt; to take a track loaded via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt;, process it, adding a bit of white noise to each audio sample of the input track (buffer) and play it through the &lt;a href=&quot;audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;. For each channel and each sample frame, the &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; function takes the associated &lt;code&gt;audioProcessingEvent&lt;/code&gt; and uses it to loop through each channel of the input buffer, and each sample in each channel, and add a small amount of white noise, before setting that result to be the output sample in each case.</source>
          <target state="translated">次の例は、 &lt;code&gt;ScriptProcessorNode&lt;/code&gt; の基本的な使用方法を示しています&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt;を介してロードされたトラックを取得し、処理して、入力トラック（バッファ）の各オーディオサンプルにホワイトノイズを少し追加し、&lt;a href=&quot;audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; で再生し&lt;/a&gt;ます。各チャネルおよび各サンプルフレームについて、 &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; 関数は関連付けられた &lt;code&gt;audioProcessingEvent&lt;/code&gt; を取得し、それを使用して入力バッファの各チャネルと各チャネルの各サンプルをループし、少量のホワイトノイズを追加してから、その結果を設定します。それぞれの場合の出力サンプルになります。</target>
        </trans-unit>
        <trans-unit id="42ab16254b249cb27fc9204b2d611a2328fb9237" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to connect a &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; to an &lt;code&gt;AnalyserNode&lt;/code&gt;. While the audio is playing, we collect the frequency data repeatedly with &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; and draw a &quot;winamp bargraph style&quot; to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">次の例は、&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;をAnalyserNodeに接続するための&lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; &lt;/a&gt;基本的な使用方法を示してい &lt;code&gt;AnalyserNode&lt;/code&gt; 。オーディオの再生中、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;を使用して周波数データを繰り返し収集し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; winvas bargraph style &quot;を&amp;lt;canvas&amp;gt;要素に描画します。</target>
        </trans-unit>
        <trans-unit id="d2f7e3d29f51cfc546fa304e3493e74139e45a64" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;GainNode&lt;/code&gt;, which is then used to mute and unmute the audio when a Mute button is clicked by changing the &lt;code&gt;gain&lt;/code&gt; property value.</source>
          <target state="translated">次の例は、&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示し、GainNodeを作成し &lt;code&gt;GainNode&lt;/code&gt; 。これを使用して、 &lt;code&gt;gain&lt;/code&gt; プロパティ値を変更することにより[ミュート]ボタンがクリックされたときに、オーディオをミュートおよびミュート解除します。</target>
        </trans-unit>
        <trans-unit id="d6e8c9153bd9934791313aa228815e4a1b8ef407" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示し、AnalyserNodeを作成して &lt;code&gt;AnalyserNode&lt;/code&gt; 、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; で&lt;/a&gt;周波数データを繰り返し収集し、現在のオーディオ入力の「winamp bargraphスタイル」出力を描画します。より完全な適用例/情報については、&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="334ec7627146f2cc6408c2ae9be54803b82b263a" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集周波数データにし、現在のオーディオ入力の「Winampのバーグラフのスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="c2ceb5663ea45fa8eb7a948ffd2a87e564f8a58c" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示し、AnalyserNodeを作成して &lt;code&gt;AnalyserNode&lt;/code&gt; 、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; で&lt;/a&gt;周波数データを繰り返し収集し、現在のオーディオ入力の「winamp bargraphスタイル」出力を描画します。その他の例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="60a89ee025ef0ca5ff74a457b786f45f59cfe768" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集時間領域のデータにし、現在のオーディオ入力の「オシロスコープスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="b99b3956bcc6ea6b5e5e90476bd61de62dbf1a15" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt; demo (see the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集時間領域のデータにし、現在のオーディオ入力の「オシロスコープスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt;デモを確認してください（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;ソースコード&lt;/a&gt;も参照してください）。</target>
        </trans-unit>
        <trans-unit id="6db4b9d609d45f2f06fc4a8f52a8bbca8601f9a4" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集時間領域のデータにし、現在のオーディオ入力の「オシロスコープスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="3ebd5fd192d61507741492c46c698d926380166c" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For an applied example, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、オシレーターノードを作成するための&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用方法を示しています。適用例については、&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;確認してください（関連コード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="970ede63530c43cef97b110a18bfac0384762aab" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For an applied example, check out our &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、オシレーターノードを作成するための&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示しています。適用例については、&lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;ご覧ください&lt;/a&gt;（関連するコードについてはapp.jsを参照してください）。</target>
        </trans-unit>
        <trans-unit id="5f8b77398e7663408d24572e6b6dd698160eb069" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、オシレーターノードを作成するための&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用方法を示しています。適用例/情報については、&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;確認してください（関連コード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="e3065d316b690be1685d16493d383d679386fc58" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、オシレーターノードを作成するための&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示しています。適用された例/情報については、&lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;確認してください（関連するコード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;については、app.js&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="c96539704fe1ed36695d989f58aad156fb66c366" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;GainNode&lt;/code&gt;, which is then used to mute and unmute the audio when a Mute button is clicked by changing the &lt;code&gt;gain&lt;/code&gt; property value.</source>
          <target state="translated">次の例は、&lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示し、GainNodeを作成し &lt;code&gt;GainNode&lt;/code&gt; 。これを使用して、 &lt;code&gt;gain&lt;/code&gt; プロパティ値を変更することにより[ミュート]ボタンがクリックされたときに、オーディオをミュートおよびミュート解除します。</target>
        </trans-unit>
        <trans-unit id="a9747c9f8c3bb979569330ffa761f53d29558850" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集時間領域のデータにし、現在のオーディオ入力の「オシロスコープスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="67ce9e5ccb7d7881b13a2c1d3cbd89dbb23060f9" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node and to start playing a tone on it. For an applied example, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、オシレーターノードを作成し、そのノードでトーンの再生を開始するための&lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用方法を示しています。適用例については、&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;確認してください（関連コード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="2265789afba71696acbb48701658e6f13bc6b258" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node and to start playing a tone on it. For an applied example, check out our &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、&lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;を使用してオシレーターノードを作成し、そのノードでトーンの再生を開始する基本的な使用法を示しています。適用例については、&lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;ご覧ください&lt;/a&gt;（関連するコードについてはapp.jsを参照してください）。</target>
        </trans-unit>
        <trans-unit id="c10035dff9da9a9cf27f0e78f7c0f415f921b864" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a Biquad filter node. For a complete working example, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt; demo (look at the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">次の例は、Bioquadフィルターノードを作成するためのAudioContextの基本的な使用方法を示しています。完全に機能する例については、&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt;デモを確認してください（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;ソースコード&lt;/a&gt;もご覧ください）。</target>
        </trans-unit>
        <trans-unit id="5e790c8caa2130c5c5f71fc4cdf41b47706aee96" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a Biquad filter node. For a complete working example, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt; demo (look at the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">次の例は、Bioquadフィルターノードを作成するためのAudioContextの基本的な使用方法を示しています。完全に機能する例については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt;デモを確認してください（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;ソースコード&lt;/a&gt;もご覧ください）。</target>
        </trans-unit>
        <trans-unit id="d419e6879edf66df35afcb16bc5b46def800d8fc" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a convolver node.</source>
          <target state="translated">以下の例では、AudioContext を使って convolver ノードを作成しています。</target>
        </trans-unit>
        <trans-unit id="ec8b1964f1b8449c90dea469a4e77f282d04d4d9" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a convolver node. The basic premise is that you create an AudioBuffer containing a sound sample to be used as an ambience to shape the convolution (called the &lt;em&gt;impulse response&lt;/em&gt;,) and apply that to the convolver. The example below uses a short sample of a concert hall crowd, so the reverb effect applied is really deep and echoey.</source>
          <target state="translated">次の例は、Convolverノードを作成するためのAudioContextの基本的な使用方法を示しています。基本的な前提は、コンボリューション（&lt;em&gt;インパルス応答&lt;/em&gt;と呼ばれる）を形成するためのアンビエンスとして使用されるサウンドサンプルを含むAudioBufferを作成し、それをコンボルバーに適用することです。以下の例では、コンサートホールの観客の短いサンプルを使用しているため、適用されるリバーブエフェクトは非常に深く、反響しています。</target>
        </trans-unit>
        <trans-unit id="d9c348a7a6d70c6ff50f28ddacbe7e644dc9ef17" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a wave shaper node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt; demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例では、AudioContextの基本的な使用法を示し、波形整形ノードを作成しています。応用例/詳細については、私たちのチェックアウト&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;ボイスチェンジ-O-Maticの&lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;デモを&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;app.js参照&lt;/a&gt;関連するコードのために）。</target>
        </trans-unit>
        <trans-unit id="76006f4529336a01a4736eb02cddcc961a882daa" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a wave shaper node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt; demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、AudioContextを使用してウェーブシェイパーノードを作成する基本的な使用法を示しています。応用例/詳細については、私たちのチェックアウト&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;ボイスチェンジ-O-Maticの&lt;/a&gt;&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;デモを&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;app.js参照&lt;/a&gt;関連するコードのために）。</target>
        </trans-unit>
        <trans-unit id="ce1cd519e0fac827e01535358e2b808f81b03596" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an Analyser node, then use requestAnimationFrame() to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、AudioContextの基本的な使用法を示し、Analyzerノードを作成し、次にrequestAnimationFrame（）を使用して時間領域データを繰り返し収集し、現在のオーディオ入力の「オシロスコープスタイル」の出力を描画します。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連コードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="544a4cb84984c5d452e79acde5d675be4fe422c5" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code); also see our &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; page for more information.</source>
          <target state="translated">次の例は、オシレーターノードを作成するためのAudioContextの基本的な使用方法を示しています。適用例/情報については、&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモ&lt;/a&gt;（関連コード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照）を確認してください。詳細については、&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;ページもご覧ください。</target>
        </trans-unit>
        <trans-unit id="9e4e034ebc3eba7b88c84bde5c51b54632d84dae" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code); also see our &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; page for more information.</source>
          <target state="translated">次の例は、オシレーターノードを作成するためのAudioContextの基本的な使用法を示しています。適用された例/情報については、&lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;確認してください（関連するコード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照してください）。詳細については、&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;ページも参照してください。</target>
        </trans-unit>
        <trans-unit id="6518b2d0b60eee0f55b63cdd4c525befb50caaf1" translate="yes" xml:space="preserve">
          <source>The following example shows both uses of the &lt;code&gt;clearMarks()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;clearMarks()&lt;/code&gt; メソッドの両方の使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="767065d5ac6c188eab3c99130b840193a899a63d" translate="yes" xml:space="preserve">
          <source>The following example shows both uses of the &lt;code&gt;clearMeasures()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;clearMeasures()&lt;/code&gt; メソッドの両方の使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="201d597b58c76c0725b95a0987335fa0f8db3fb1" translate="yes" xml:space="preserve">
          <source>The following example shows feature detection for the Media Session API. It then instantiates a metadata object for the session, and adds event handlers for the user control actions:</source>
          <target state="translated">次の例は、Media Session API の機能検出を示しています。次に、セッション用のメタデータ・オブジェクトをインスタンス化し、ユーザー・コントロール・アクション用のイベント・ハンドラを追加します。</target>
        </trans-unit>
        <trans-unit id="0ac8600345a07c8b847e3a0f363d38d6b1c8692e" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;mark()&lt;/code&gt; is used to create an application-defined &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;peformance entry&lt;/code&gt;&lt;/a&gt; in the browser's performance entry buffer.</source>
          <target state="translated">次の例は、どのように &lt;code&gt;mark()&lt;/code&gt; を行うかを示しています。アプリケーション定義を作成するために使用される&lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;peformance entry&lt;/code&gt; &lt;/a&gt;ブラウザのパフォーマンス入力バッファです。</target>
        </trans-unit>
        <trans-unit id="3d9634aea270d1ee77918f9ec397709546f2e081" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;measure()&lt;/code&gt; is used to create a new &lt;em&gt;measure&lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; in the browser's performance entry buffer.</source>
          <target state="translated">次の例は、 &lt;code&gt;measure()&lt;/code&gt; を使用して新しい&lt;em&gt;メジャー&lt;/em&gt;を作成する方法を示しています。&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;performance entry&lt;/code&gt; &lt;/a&gt;、ブラウザのパフォーマンスエントリバッファにパフォーマンスエントリ。</target>
        </trans-unit>
        <trans-unit id="e1b60b080c32c75c7a6f4eb54f545aab50566e44" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; object from a URL string.</source>
          <target state="translated">次の例は、 &lt;a href=&quot;../urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt;、URL文字列から URLSearchParamsオブジェクトています。</target>
        </trans-unit>
        <trans-unit id="9a14d8066371c9b7c2ac9ca18d0e40d2d88b2902" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an area for receiving dropped files:</source>
          <target state="translated">以下の例では、ドロップしたファイルを受信するための領域を作成します。</target>
        </trans-unit>
        <trans-unit id="8bc204ff21a909d29114194801ae6e06760cad3c" translate="yes" xml:space="preserve">
          <source>The following example shows how to register two observers: the first one registers for several event types and the second observer only registers for one event type.</source>
          <target state="translated">次の例は、2つのオブザーバを登録する方法を示しています:最初のオブザーバは複数のイベントタイプを登録し、2番目のオブザーバは1つのイベントタイプのみを登録します。</target>
        </trans-unit>
        <trans-unit id="e1196fd43be06d94c1ba87b6a6013b1837cb0d45" translate="yes" xml:space="preserve">
          <source>The following example shows how to test for and clear a &lt;code&gt;'stall'&lt;/code&gt; condition in the result of a data transfer.</source>
          <target state="translated">次の例は、データ転送の結果の &lt;code&gt;'stall'&lt;/code&gt; 状態をテストしてクリアする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f9f91198697099e264c7db491f37b9ff589e2137" translate="yes" xml:space="preserve">
          <source>The following example shows how to update the payment sheet as it's being presented to the end-user.</source>
          <target state="translated">次の例は、エンドユーザーに提示されている支払いシートを更新する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2fac85cabdd57f827bd41b560875a5da02180055" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;finish()&lt;/code&gt; method and catch an &lt;code&gt;InvalidState&lt;/code&gt; error.</source>
          <target state="translated">次の例は、 &lt;code&gt;finish()&lt;/code&gt; の使用方法を示しています。メソッド &lt;code&gt;InvalidState&lt;/code&gt; エラーをキャッチする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9707b001d18380a2a47667559b4f827cc506834d" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;mode&lt;/code&gt; option for readers and writers.</source>
          <target state="translated">次の例は、 &lt;code&gt;mode&lt;/code&gt; 、リーダーとライターのモードオプションのます。</target>
        </trans-unit>
        <trans-unit id="24382fee2acb14c7acd876c809360a40dcb6cd0d" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this property.</source>
          <target state="translated">以下の例では、このプロパティの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f6500a051169147e204ed47e488ed0becdda17cc" translate="yes" xml:space="preserve">
          <source>The following example shows how you could separate a stereo track (say, a piece of music), and process the left and right channel differently. To use them, you need to use the second and third parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt;&lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt;&lt;/a&gt; method, which allow you to specify both the index of the channel to connect from and the index of the channel to connect to.</source>
          <target state="translated">次の例は、ステレオトラック（音楽など）を分離し、左右のチャネルを別々に処理する方法を示しています。それらを使用するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt; &lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt; の&lt;/a&gt; 2番目と3番目のパラメーターを使用する必要があります。メソッド。これにより、接続するチャネルのインデックスと接続するチャネルのインデックスの両方を指定できます。</target>
        </trans-unit>
        <trans-unit id="673d126c604f92225bb72fa3f2e312150b77f3a6" translate="yes" xml:space="preserve">
          <source>The following example shows minimal functionality and focuses instead on showing the complete context of instantiating a &lt;code&gt;PaymentRequest&lt;/code&gt; object.</source>
          <target state="translated">次の例は、最小限の機能を示し、代わりに、インスタンス化の完全なコンテキストを示すことに焦点を当てています &lt;code&gt;PaymentRequest&lt;/code&gt; オブジェクトます。</target>
        </trans-unit>
        <trans-unit id="f2f0a117106320051ec8f4c04032a855363c87e7" translate="yes" xml:space="preserve">
          <source>The following example shows pointer capture being set on an element.</source>
          <target state="translated">次の例では、要素にポインタキャプチャが設定されていることを示しています。</target>
        </trans-unit>
        <trans-unit id="11a920ce7314e8f5f07f05319ec174856a969530" translate="yes" xml:space="preserve">
          <source>The following example shows the basic use of the &lt;code&gt;request()&lt;/code&gt; method with an asynchronous function as the callback. Once the callback is invoked, no other running code on this orign can hold `'my_resource'` until the callback returns.</source>
          <target state="translated">次の例は、 &lt;code&gt;request()&lt;/code&gt; 、コールバックとして非同期関数を request（）メソッド方法を示しています。コールバックが呼び出されると、このorignの他の実行中のコードは、コールバックが戻るまで `'my_resource'`を保持できません。</target>
        </trans-unit>
        <trans-unit id="9778f1dbf547fda12a38deba634bb5652a303a82" translate="yes" xml:space="preserve">
          <source>The following example shows the creation of a &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">次の例は、カスタムシンクとAPI提供のキューイング戦略を使用した &lt;code&gt;WritableStream&lt;/code&gt; の作成を示しています。次に、 &lt;code&gt;sendMessage()&lt;/code&gt; という関数を呼び出し、新しく作成されたストリームと文字列を渡します。この関数内では、&lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返すストリームの &lt;code&gt;getWriter()&lt;/code&gt; メソッドを呼び出します。 &lt;code&gt;forEach()&lt;/code&gt; 呼び出しは、ストリームに文字列の各チャンクを書き込むために使用されます。最後に、 &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;close()&lt;/code&gt; は、チャンクおよびストリームの成功または失敗を処理するために処理されるプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="c13aaf1ca7614e8c48feb2ed74c903915d7d1794" translate="yes" xml:space="preserve">
          <source>The following example shows the creation of a &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">次の例は、カスタムシンクとAPI提供のキューイング戦略を使用した &lt;code&gt;WritableStream&lt;/code&gt; の作成を示しています。次に、 &lt;code&gt;sendMessage()&lt;/code&gt; という関数を呼び出し、新しく作成されたストリームと文字列を渡します。この関数内では、&lt;a href=&quot;writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返すストリームの &lt;code&gt;getWriter()&lt;/code&gt; メソッドを呼び出します。 &lt;code&gt;forEach()&lt;/code&gt; 呼び出しは、ストリームに文字列の各チャンクを書き込むために使用されます。最後に、 &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;close()&lt;/code&gt; は、チャンクおよびストリームの成功または失敗を処理するために処理されるプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="7b0fb33f6195c46408861bb4574ab2e64295f35d" translate="yes" xml:space="preserve">
          <source>The following example shows the implementation of a fetch event that uses a preloaded response.</source>
          <target state="translated">以下の例は、プリロードされたレスポンスを使用するフェッチイベントの実装を示しています。</target>
        </trans-unit>
        <trans-unit id="3f3e205fb1239ca5373b0433f4a24433b6e076d8" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;duration&lt;/code&gt; property.</source>
          <target state="translated">次の例は、 &lt;code&gt;duration&lt;/code&gt; プロパティの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3c712f8b9dace25890e3b31e9196a67834497383" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;entryType&lt;/code&gt; property.</source>
          <target state="translated">次の例は、 &lt;code&gt;entryType&lt;/code&gt; の使用方法を示しています。プロパティのます。</target>
        </trans-unit>
        <trans-unit id="4876b66305b9121a957b8075983954194fde2002" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; properties alongside images of varying dimensions:</source>
          <target state="translated">次の例は、さまざまな寸法の画像とともに &lt;code&gt;height&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; プロパティを使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c01a708afcd2a65bcdbd8257238b8b6b86ebdfa1" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">次の例は、 &lt;code&gt;name&lt;/code&gt; 使用法を示していますプロパティのます。</target>
        </trans-unit>
        <trans-unit id="92845b02be15ab1b985e66dd0b2501507224ed13" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;onkeypress&lt;/code&gt; event during a digitation into a form field in order to filter the typed characters:</source>
          <target state="translated">次の例は、 &lt;code&gt;onkeypress&lt;/code&gt; の使用法を示しています。、入力された文字をフィルタリングするために、フォームフィールドへの入力中にオンキーイベントを。</target>
        </trans-unit>
        <trans-unit id="7f4f376de3fe0171cbc4ffb0b861d12e69f63398" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;onmousemove&lt;/code&gt; event with a javaScript tooltip.</source>
          <target state="translated">次の例は、 &lt;code&gt;onmousemove&lt;/code&gt; の使用法を示しています。 javaScriptツールチップイベントの。</target>
        </trans-unit>
        <trans-unit id="400ba02e6efdd886c269e97431fe228eec477af9" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;startTime&lt;/code&gt; property.</source>
          <target state="translated">次の例は、 &lt;code&gt;startTime&lt;/code&gt; の使用方法を示していますプロパティのます。</target>
        </trans-unit>
        <trans-unit id="f5279b0b84800499bd9b9c03f8ff414dbe27ce85" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;toJSON()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;toJSON()&lt;/code&gt; の使用方法を示していますメソッドの。</target>
        </trans-unit>
        <trans-unit id="790f6e1e59103e012c1df0838542d78d707ba633" translate="yes" xml:space="preserve">
          <source>The following example shows two uses of the &lt;code&gt;ready&lt;/code&gt; property. The first uses &lt;code&gt;ready&lt;/code&gt; to ensure that the &lt;code&gt;WritableStream&lt;/code&gt; is done writing and thus able to receive data before sending a binary chunk. The second also checks whether the the &lt;code&gt;WritableStream&lt;/code&gt; is done writing, but this time because the writing must be finished before the writer can be closed.</source>
          <target state="translated">次の例は、 &lt;code&gt;ready&lt;/code&gt; プロパティの2つの使用法を示しています。1つ目は、 &lt;code&gt;ready&lt;/code&gt; を使用して、 &lt;code&gt;WritableStream&lt;/code&gt; が書き込みを完了し、バイナリチャンクを送信する前にデータを受信できることを確認します。2番目は、 &lt;code&gt;WritableStream&lt;/code&gt; ががを完了したが、今回は、ライターを閉じる前に書き込みを終了する必要があるためです。</target>
        </trans-unit>
        <trans-unit id="913d88c16faba66028294d185d5390a8ff403089" translate="yes" xml:space="preserve">
          <source>The following example simulates typewriter by first clearing and then slowly typing content into the &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; that matches a specified group of selectors.</source>
          <target state="translated">次の例では、最初に消去してから&lt;a href=&quot;../nodelist&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; に&lt;/a&gt;コンテンツをゆっくりと入力してタイプライターをシミュレートします、指定したセレクターのグループに一致する。</target>
        </trans-unit>
        <trans-unit id="24c68e32b3009378a12189d166b455d237cb02e7" translate="yes" xml:space="preserve">
          <source>The following example snippet is taken from our expanding-list-web-component example (see it live also). In this case, our custom element extends the &lt;a href=&quot;../htmlulistelement&quot;&gt;&lt;code&gt;HTMLUListElement&lt;/code&gt;&lt;/a&gt;, which represents the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">次のサンプルスニペットは、expanding-list-web-componentの例から抜粋したものです（実際にご覧ください）。この場合、カスタム要素は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; &lt;/a&gt;を表す&lt;a href=&quot;../htmlulistelement&quot;&gt; &lt;code&gt;HTMLUListElement&lt;/code&gt; を&lt;/a&gt;拡張します。要素ます。</target>
        </trans-unit>
        <trans-unit id="ccb869b4735a71f30fafd9007990aa5e8154a417" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator and moves it in front of the listener after 1 second, behind the listener after 2 seconds, and back to the listener's position after 3 seconds. Note that in this case, the change will mainly affect the timbre and perceived volume of the sound.</source>
          <target state="translated">以下の例では、発振器を起動し、1秒後にリスナーの前に移動し、2秒後にリスナーの後ろに移動し、3秒後にリスナーの位置に戻っています。この場合、この変化は主に音の音色と知覚される音量に影響を与えることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c8bd99fb6a07ebfd16dffe834746f96fb3de907a" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator and pans it above the listener after 1 second, below the listener after 2 seconds, and back to the center after 3 seconds. Note that in this case, the change will mainly affect the timbre of the oscillator, as it's a simple mono wave.</source>
          <target state="translated">次の例では、オシレーターを起動し、1 秒後にリスナーの上、2 秒後にリスナーの下、3 秒後に中央に戻るようにパンしています。この場合、単純なモノラル波なので、この変化は主にオシレーターの音色に影響します。</target>
        </trans-unit>
        <trans-unit id="ed62b529aaa91ca42671d3cb897ade885b5c2d98" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator, and pans it to the left after 1 second, to the right after 2 seconds, and back to the center after 3 seconds.</source>
          <target state="translated">以下の例では、発振器を起動し、1秒後に左に、2秒後に右に、3秒後に中央に戻してパンニングしています。</target>
        </trans-unit>
        <trans-unit id="2ebcff91173c5a4d6adfd0be41e2a5a62d5a5d62" translate="yes" xml:space="preserve">
          <source>The following example takes data from a &lt;a href=&quot;../pushevent&quot;&gt;&lt;code&gt;PushEvent&lt;/code&gt;&lt;/a&gt; and displays it on all of the service worker's clients. The data payload of the push message is available in the event object's &lt;code&gt;data&lt;/code&gt; property (&lt;a href=&quot;../pushevent/data&quot;&gt;&lt;code&gt;PushEvent.data&lt;/code&gt;&lt;/a&gt;, which contains a &lt;a href=&quot;../pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; object.)</source>
          <target state="translated">次の例では、&lt;a href=&quot;../pushevent&quot;&gt; &lt;code&gt;PushEvent&lt;/code&gt; &lt;/a&gt;からデータを取得し、それをすべてのService Workerのクライアントに表示します。プッシュメッセージのデータペイロードは、イベントオブジェクトの &lt;code&gt;data&lt;/code&gt; プロパティ（&lt;a href=&quot;../pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; &lt;/a&gt;オブジェクトを含む&lt;a href=&quot;../pushevent/data&quot;&gt; &lt;code&gt;PushEvent.data&lt;/code&gt; &lt;/a&gt;）で利用できます。</target>
        </trans-unit>
        <trans-unit id="9ca190c23e8fe845a41d4cf375a355c8052fa962" translate="yes" xml:space="preserve">
          <source>The following example takes data from a &lt;code&gt;PushEvent&lt;/code&gt; and displays it on all of the service worker's clients.</source>
          <target state="translated">次の例では、 &lt;code&gt;PushEvent&lt;/code&gt; からデータを取得し、それをすべてのService Workerのクライアントに表示します。</target>
        </trans-unit>
        <trans-unit id="9b553504d5b37fce7cd61e0ad37d0e0226ee8ef4" translate="yes" xml:space="preserve">
          <source>The following example takes data from a PushEvent and displays it on all of the service workers' clients.</source>
          <target state="translated">次の例では、PushEvent からデータを取得し、サービスワーカーのすべてのクライアントに表示します。</target>
        </trans-unit>
        <trans-unit id="d1ca73f426d6b3ab4e2caddc6a971035a5770380" translate="yes" xml:space="preserve">
          <source>The following example tests whether a plugin is available for the application/pdf mime type and if so, which plugin that is.</source>
          <target state="translated">以下の例では、アプリケーション/pdf mime タイプで利用可能なプラグインがあるかどうか、ある場合はどのプラグインであるかをテストしています。</target>
        </trans-unit>
        <trans-unit id="7d18190b5ad40d5dba90405dd6dc0bffd8bf922f" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;claim()&lt;/code&gt; inside service worker's &quot;&lt;code&gt;activate&lt;/code&gt;&quot; event listener so that clients loaded in the same scope do not need to be reloaded before their fetches will go through this service worker.</source>
          <target state="translated">次の例では、Service Workerの &quot; &lt;code&gt;activate&lt;/code&gt; 内で &lt;code&gt;claim()&lt;/code&gt; 使用しています」イベントリスナーいるため、同じスコープにロードされたクライアントは、フェッチがこのService Workerを通過する前にリロードする必要がありません。</target>
        </trans-unit>
        <trans-unit id="9bf8274744618f824cb8cd33401e03ca3df661b6" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;nextHopProtocol&lt;/code&gt; property.</source>
          <target state="translated">次の例では、 &lt;code&gt;nextHopProtocol&lt;/code&gt; プロパティを使用しています。</target>
        </trans-unit>
        <trans-unit id="98a3e01bb1ea05beb7c5258ae3d9619f2cf3dd15" translate="yes" xml:space="preserve">
          <source>The following example uses the beforeinstallprompt event handler to make an install button operable, by using the event inside a click handler.</source>
          <target state="translated">以下の例では、クリックハンドラ内のイベントを使用して、インストールボタンを操作可能にするために beforeinstallprompt イベントハンドラを使用しています。</target>
        </trans-unit>
        <trans-unit id="deed3fbc5b32cc39c5336ce13ec84c76cdccdbc3" translate="yes" xml:space="preserve">
          <source>The following example uses the default value of &lt;code&gt;scope&lt;/code&gt; (by omitting it). The service worker in this case will control &lt;code&gt;example.com/index.html&lt;/code&gt; as well as pages underneath it, like &lt;code&gt;example.com/product/description.html&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;scope&lt;/code&gt; のデフォルト値を使用しています（省略した場合）。この場合、Service Workerは &lt;code&gt;example.com/index.html&lt;/code&gt; とその下のページ（example.com/product/description.htmlなど）を制御し &lt;code&gt;example.com/product/description.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58c2b71b6bda82d8e4f2d04eaa2bfcbb66806236" translate="yes" xml:space="preserve">
          <source>The following example uses this property to test for the existence of a USBConfiguration property to select a configuration before claiming an interface.</source>
          <target state="translated">以下の例では、このプロパティを使用して USBConfiguration プロパティの存在をテストし、インターフェイスを主張する前に構成を選択します。</target>
        </trans-unit>
        <trans-unit id="9868c4aa3a49b3c141a541f1150589eb14c51e29" translate="yes" xml:space="preserve">
          <source>The following example was adapted from &lt;a href=&quot;http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;このブログ投稿を基にしてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d1d7527225e80273023721439aa3d8fdc2244624" translate="yes" xml:space="preserve">
          <source>The following example was adapted from &lt;a href=&quot;https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;このブログ投稿&lt;/a&gt;から引用したものです。</target>
        </trans-unit>
        <trans-unit id="6d2ef2f48d56b7190c80d6d945b8fbc26eaac266" translate="yes" xml:space="preserve">
          <source>The following example will do something after the user types the word &quot;exit&quot; in any point of a page.</source>
          <target state="translated">次の例では、ユーザーがページの任意のポイントに「exit」という単語を入力した後に何かを行います。</target>
        </trans-unit>
        <trans-unit id="0148dd02e5aba9031325708640951708a88c1671" translate="yes" xml:space="preserve">
          <source>The following example will show the rangeCount every second. Select text in the browser to see it change.</source>
          <target state="translated">以下の例では、1秒ごとにrangeCountが表示されます。ブラウザでテキストを選択すると、その変化を見ることができます。</target>
        </trans-unit>
        <trans-unit id="5d74cac7b141bf68b7b90bb1e9d607b722e6e260" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses &lt;code&gt;getVideoTracks()&lt;/code&gt; to retrieve a track for passing to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt;&lt;code&gt;ImageCapture()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">抽出した次の例では、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeのイメージキャプチャ/写真解像度サンプル&lt;/a&gt;、用途の &lt;code&gt;getVideoTracks()&lt;/code&gt; に渡すためのトラックを取得するには&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt; &lt;code&gt;ImageCapture()&lt;/code&gt; &lt;/a&gt;コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="4bdb7c10cd1aa2ea9ce4019a8fee2f11d76ccc9e" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities().imageWidth&lt;/code&gt; to modify the size of an input range.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeの画像キャプチャ/写真解像度のサンプル&lt;/a&gt;から抽出されたもので、 &lt;code&gt;getPhotoCapabilities().imageWidth&lt;/code&gt; 結果を使用して入力範囲のサイズを変更します。</target>
        </trans-unit>
        <trans-unit id="735419a02f63cbfe9f099ff618da4b9b89686b25" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; to modify the size of an input range. This example also shows how the &lt;code&gt;ImageCapture&lt;/code&gt; object is created using a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeの画像キャプチャ/写真解像度のサンプル&lt;/a&gt;から抽出されたもので、 &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; の結果を使用して入力範囲のサイズを変更します。この例は、デバイスの&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;から取得した&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;ImageCapture&lt;/code&gt; オブジェクトを作成する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="d47e61ef5db7b087231285e6d30526695006aa9a" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; to modify the size of an input range. This example also shows how the &lt;code&gt;ImageCapture&lt;/code&gt; object is created using a &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeの画像キャプチャ/写真解像度のサンプル&lt;/a&gt;から抽出されたもので、 &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; の結果を使用して入力範囲のサイズを変更します。この例は、デバイスの&lt;a href=&quot;mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;から取得した&lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;ImageCapture&lt;/code&gt; オブジェクトを作成する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="6f368a60eeb43922f4fe5b4b9f4c49d5bf5d3ded" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoSettings()&lt;/code&gt; to modify the size of an input range. This example also shows how the ImageCapture object is created using a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeの画像キャプチャ/写真解像度のサンプル&lt;/a&gt;から抽出されたもので、 &lt;code&gt;getPhotoSettings()&lt;/code&gt; の結果を使用して入力範囲のサイズを変更します。この例は、デバイスの&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;から取得した&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;を使用してImageCaptureオブジェクトを作成する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="8f8a19722133c1ea455e5abb4fe2f372654ada60" translate="yes" xml:space="preserve">
          <source>The following example, taken from the WebVR spec, finds the first available &lt;code&gt;HMDVRDevice&lt;/code&gt; and its associated &lt;a href=&quot;positionsensorvrdevice&quot;&gt;&lt;code&gt;PositionSensorVRDevice&lt;/code&gt;&lt;/a&gt;, if it has one.</source>
          <target state="translated">次の例は、WebVR仕様から &lt;code&gt;HMDVRDevice&lt;/code&gt; 、最初に使用可能なHMDVRDeviceと、関連付けられている&lt;a href=&quot;positionsensorvrdevice&quot;&gt; &lt;code&gt;PositionSensorVRDevice&lt;/code&gt; &lt;/a&gt;があればそれを見つけます。</target>
        </trans-unit>
        <trans-unit id="27d98c26605ad9ae19e79ccc13cdfb4cd0be16f1" translate="yes" xml:space="preserve">
          <source>The following example, the value of size properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">次の例では、すべての「 &lt;code&gt;resource&lt;/code&gt; 」&lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;イベントのサイズプロパティの値が記録されます。</target>
        </trans-unit>
        <trans-unit id="a74953b245c7e7b2e65fbd4b6752e20e8a1c913a" translate="yes" xml:space="preserve">
          <source>The following example, the value of the size properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">次の例では、すべての「 &lt;code&gt;resource&lt;/code&gt; 」&lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;イベントのサイズプロパティの値が記録されます。</target>
        </trans-unit>
        <trans-unit id="db92b07504cf60573c93d71f7a584f49a40e21bc" translate="yes" xml:space="preserve">
          <source>The following example, which is loosely based on &lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;Intel's Orientation Phone demo&lt;/a&gt;, instantiates an &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt; with a frequency of 60 times a second. On each reading it uses &lt;a href=&quot;orientationsensor/quaternion&quot;&gt;&lt;code&gt;OrientationSensor.quaternion&lt;/code&gt;&lt;/a&gt; to rotate a visual model of a phone.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;IntelのOrientation Phoneデモ&lt;/a&gt;に大まかに基づいており、1秒あたり60回の頻度で &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt; をインスタンス化します。読み取りごとに、&lt;a href=&quot;orientationsensor/quaternion&quot;&gt; &lt;code&gt;OrientationSensor.quaternion&lt;/code&gt; &lt;/a&gt;を使用して電話の視覚モデルを回転させます。</target>
        </trans-unit>
        <trans-unit id="faeada3c9f8138ed5c764668bc526abb27d92a55" translate="yes" xml:space="preserve">
          <source>The following example, which is loosely based on &lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;Intel's Orientation Phone demo&lt;/a&gt;, instantiates an &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; with a frequency of 60 times a second. (Note that the Intel demo this is based on uses the &lt;code&gt;AbsoluteOreintationSensor&lt;/code&gt;.) On each reading it uses &lt;a href=&quot;orientationsensor/quaternion&quot;&gt;&lt;code&gt;OrientationSensor.quaternion&lt;/code&gt;&lt;/a&gt; to rotate a visual model of a phone.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;IntelのOrientation Phoneデモ&lt;/a&gt;に大まかに基づいており、1秒あたり60回の頻度で &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; をインスタンス化します。（これに基づくIntelデモは、 &lt;code&gt;AbsoluteOreintationSensor&lt;/code&gt; を使用していることに注意してください。）読み取りごとに、&lt;a href=&quot;orientationsensor/quaternion&quot;&gt; &lt;code&gt;OrientationSensor.quaternion&lt;/code&gt; &lt;/a&gt;を使用して電話の視覚モデルを回転させます。</target>
        </trans-unit>
        <trans-unit id="0e9be9ccf6aaca2db19080340f5bf6effce1617f" translate="yes" xml:space="preserve">
          <source>The following examples are screenshots from the attached file.</source>
          <target state="translated">以下の例は添付ファイルのスクリーンショットです。</target>
        </trans-unit>
        <trans-unit id="febdc7f77ee1e378fdb7983060b04d9078c5548a" translate="yes" xml:space="preserve">
          <source>The following examples show how the mode and name properties are passed in the call to &lt;a href=&quot;lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; の&lt;/a&gt;呼び出しでモードと名前のプロパティがどのように渡されるかを示しています。 &lt;code&gt;LockManager&lt;/code&gt; は&lt;a href=&quot;navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="aea84d7771e836ef26e5cfa682717ab7b0670a1e" translate="yes" xml:space="preserve">
          <source>The following examples show how the mode property passed in the call to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;../navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、modeプロパティが&lt;a href=&quot;../lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; の&lt;/a&gt;呼び出しでどのように渡されるかを示しています。 &lt;code&gt;LockManager&lt;/code&gt; は&lt;a href=&quot;../navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="24c1ef3007f1e18404b508ad7b4f8b184159ed4b" translate="yes" xml:space="preserve">
          <source>The following examples show how the name property passed in the call to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;../navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、nameプロパティが&lt;a href=&quot;../lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; の&lt;/a&gt;呼び出しでどのように渡されるかを示しています。 &lt;code&gt;LockManager&lt;/code&gt; は&lt;a href=&quot;../navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="3b63252171bdd483df676b3e519fc5383a295d21" translate="yes" xml:space="preserve">
          <source>The following exceptions can be raised by this method:</source>
          <target state="translated">このメソッドでは、以下の例外を発生させることができます。</target>
        </trans-unit>
        <trans-unit id="94737e1025dd41a1f555fb83fe451a64d957615b" translate="yes" xml:space="preserve">
          <source>The following fairly verbose snippet could be used if you wanted to first check whether notifications are supported, then check if permission has been granted for the current origin to send notifications, then request permission if required, before then sending a notification.</source>
          <target state="translated">以下のかなり冗長なスニペットは、まず最初に通知がサポートされているかどうかをチェックし、次に現在のオリジンが通知を送信するためのパーミッションが付与されているかどうかをチェックし、必要であればパーミッションを要求してから通知を送信したい場合に使用することができます。</target>
        </trans-unit>
        <trans-unit id="97270a71b3f307dbf5b479f5e623f0dfc2c361bd" translate="yes" xml:space="preserve">
          <source>The following features require the &lt;code&gt;UniversalBrowserWrite&lt;/code&gt; privilege, otherwise they will be ignored. Chrome scripts have this privilege automatically, others have to request it from the PrivilegeManager.</source>
          <target state="translated">次の機能には &lt;code&gt;UniversalBrowserWrite&lt;/code&gt; 権限が必要です。それ以外の場合は無視されます。Chromeスクリプトはこの特権を自動的に持ち、他の人はPrivilegeManagerに要求する必要があります。</target>
        </trans-unit>
        <trans-unit id="ffe08c31f8f2de545ea35d64da0c17067c56c848" translate="yes" xml:space="preserve">
          <source>The following fields are initialized to &lt;code&gt;null&lt;/code&gt; if they are not included in the &lt;a href=&quot;candidate&quot;&gt;&lt;code&gt;RTCIceCandidate.candidate&lt;/code&gt;&lt;/a&gt; property: &lt;a href=&quot;foundation&quot;&gt;&lt;code&gt;foundation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;component&quot;&gt;&lt;code&gt;component&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;port&quot;&gt;&lt;code&gt;port&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tcptype&quot;&gt;&lt;code&gt;tcpType&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;relatedaddress&quot;&gt;&lt;code&gt;relatedAddress&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;relatedport&quot;&gt;&lt;code&gt;relatedPort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のフィールドがで初期化され &lt;code&gt;null&lt;/code&gt; それらが含まれていない場合&lt;a href=&quot;candidate&quot;&gt; &lt;code&gt;RTCIceCandidate.candidate&lt;/code&gt; の&lt;/a&gt;プロパティ：&lt;a href=&quot;foundation&quot;&gt; &lt;code&gt;foundation&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;component&quot;&gt; &lt;code&gt;component&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;priority&quot;&gt; &lt;code&gt;priority&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;ip&quot;&gt; &lt;code&gt;ip&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;protocol&quot;&gt; &lt;code&gt;protocol&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;port&quot;&gt; &lt;code&gt;port&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;tcptype&quot;&gt; &lt;code&gt;tcpType&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;relatedaddress&quot;&gt; &lt;code&gt;relatedAddress&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;relatedport&quot;&gt; &lt;code&gt;relatedPort&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bca50c7f82bf8444ab26f5ba763468a2fb85b21d" translate="yes" xml:space="preserve">
          <source>The following figure shows the difference between &lt;code&gt;outerHeight&lt;/code&gt; and &lt;code&gt;innerHeight&lt;/code&gt;.</source>
          <target state="translated">次の図は、 &lt;code&gt;outerHeight&lt;/code&gt; と &lt;code&gt;innerHeight&lt;/code&gt; の違いを示しています。</target>
        </trans-unit>
        <trans-unit id="85993a51834b24eb9e0801e8b6f47efb69bf9929" translate="yes" xml:space="preserve">
          <source>The following function adds three data items to the local storage for the current domain, then returns the number of items in the storage:</source>
          <target state="translated">次の関数は、現在のドメインのローカル・ストレージに 3 つのデータ項目を追加し、ストレージ内の項目数を返します。</target>
        </trans-unit>
        <trans-unit id="5481722ed64977b6ae2707736f3839dd2204677e" translate="yes" xml:space="preserve">
          <source>The following function calls a function recursively for each node contained by a root node (including the root itself):</source>
          <target state="translated">以下の関数は、ルートノード(ルート自体を含む)に含まれる各ノードに対して再帰的に関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f29118e3cbf3c3119f236d85d72dfd7c5ddd1b19" translate="yes" xml:space="preserve">
          <source>The following function creates three data entries in local storage, then deletes them using &lt;code&gt;clear()&lt;/code&gt;.</source>
          <target state="translated">次の関数は、ローカルストレージに3つのデータエントリを作成し、次に &lt;code&gt;clear()&lt;/code&gt; を使用してそれらを削除します。</target>
        </trans-unit>
        <trans-unit id="8c59f04f94c110412685e25067fd79a7ad968f04" translate="yes" xml:space="preserve">
          <source>The following function creates three data items inside local storage, then removes the &lt;code&gt;image&lt;/code&gt; data item.</source>
          <target state="translated">次の関数は、ローカルストレージ内に3つのデータ項目を作成してから、 &lt;code&gt;image&lt;/code&gt; データ項目を削除します。</target>
        </trans-unit>
        <trans-unit id="c726c324b2ef771544dc8d8843ed7ed613eba477" translate="yes" xml:space="preserve">
          <source>The following function creates three data items inside local storage.</source>
          <target state="translated">以下の関数は、ローカルストレージ内に3つのデータ項目を作成します。</target>
        </trans-unit>
        <trans-unit id="a245266c521a157e3b0ab4ee4747b646579e8db1" translate="yes" xml:space="preserve">
          <source>The following function implements such a strategy. It assumes base64-js imported as &lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;base64js.min.js&quot;/&amp;gt;&lt;/code&gt;. Note that TextEncoderLite only works with UTF-8.</source>
          <target state="translated">次の関数は、このような戦略を実装しています。 &lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;base64js.min.js&quot;/&amp;gt;&lt;/code&gt; としてインポートされたbase64-jsを想定しています。TextEncoderLiteはUTF-8でのみ機能することに注意してください。</target>
        </trans-unit>
        <trans-unit id="322089a75937578eb39cb596132bbb12324c87f0" translate="yes" xml:space="preserve">
          <source>The following function iterates over the local storage keys and gets the value set for each key:</source>
          <target state="translated">以下の関数は、ローカルストレージのキーを反復処理し、各キーに設定された値を取得します。</target>
        </trans-unit>
        <trans-unit id="e377fff921b5d64d21fb78200793e78ce73ee9f5" translate="yes" xml:space="preserve">
          <source>The following function iterates over the local storage keys:</source>
          <target state="translated">以下の関数は、ローカル・ストレージ・キーを反復処理します。</target>
        </trans-unit>
        <trans-unit id="d280adc56c877d6601ff48aa27747aa07012585b" translate="yes" xml:space="preserve">
          <source>The following function retrieves three data items from local storage, then uses them to set custom styles on a page.</source>
          <target state="translated">以下の関数は、ローカルストレージから3つのデータ項目を取得し、それらを使用してページのカスタムスタイルを設定します。</target>
        </trans-unit>
        <trans-unit id="b7b8bee67da30dc571e12693bb9aa523d6b9439e" translate="yes" xml:space="preserve">
          <source>The following gets the number of explicitly set styles on the following HTML element:</source>
          <target state="translated">以下は、以下のHTML要素に明示的に設定されているスタイルの数を取得します。</target>
        </trans-unit>
        <trans-unit id="c7174a30b7048940e586ca2432c1dfc7530a8b8d" translate="yes" xml:space="preserve">
          <source>The following interfaces all inherit from &lt;code&gt;Node&lt;/code&gt;&amp;rsquo;s methods and properties: &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt;&lt;code&gt;CharacterData&lt;/code&gt;&lt;/a&gt; (which &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;comment&quot;&gt;&lt;code&gt;Comment&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;cdatasection&quot;&gt;&lt;code&gt;CDATASection&lt;/code&gt;&lt;/a&gt; inherit), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt;&lt;code&gt;ProcessingInstruction&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;documenttype&quot;&gt;&lt;code&gt;DocumentType&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt;&lt;code&gt;EntityReference&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">次のインターフェースはすべて &lt;code&gt;Node&lt;/code&gt; のメソッドとプロパティを継承します：&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;attr&quot;&gt; &lt;code&gt;Attr&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt; &lt;code&gt;CharacterData&lt;/code&gt; &lt;/a&gt;（どの&lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;comment&quot;&gt; &lt;code&gt;Comment&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;cdatasection&quot;&gt; &lt;code&gt;CDATASection&lt;/code&gt; が&lt;/a&gt;継承するか）、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt; &lt;code&gt;ProcessingInstruction&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;documenttype&quot;&gt; &lt;code&gt;DocumentType&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt; &lt;code&gt;Notation&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt; &lt;code&gt;Entity&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt; &lt;code&gt;EntityReference&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a021cb24ae8e384026dfa371fdd382f37c5e9ffd" translate="yes" xml:space="preserve">
          <source>The following interfaces are included in the spec for purposes such as defining features used in multiple other places, or to serve as bases for multiple interfaces which can all be used as values of the same properties. You wouldn't directly use these in web development work, but they may be interesting for library authors to understand how the technology works so their implementations can be more effective, or for browser engineers looking for an easier reference than the spec provides.</source>
          <target state="translated">以下のインタフェースは、他の複数の場所で使用される機能を定義したり、同じプロパティの値として使用できる複数のインタフェースのベースとなることを目的として、この仕様に含まれています。これらを直接Web開発の仕事で使うことはありませんが、ライブラリの作者が技術の仕組みを理解して実装をより効果的にするために利用したり、仕様書よりも簡単なリファレンスを探しているブラウザエンジニアにとっては興味深いものになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="07134442d211d7db7601d0757b95753d772d781b" translate="yes" xml:space="preserve">
          <source>The following interfaces were defined in old versions of the Web Audio API spec, but are now obsolete and have been replaced by other interfaces.</source>
          <target state="translated">以下のインターフェースは、Web Audio API仕様の古いバージョンで定義されていましたが、現在では廃止され、他のインターフェースに置き換えられています。</target>
        </trans-unit>
        <trans-unit id="a9a470057028792dfc9fc1d7fcfc260bd063a1b3" translate="yes" xml:space="preserve">
          <source>The following is a brief list of common APIs in web and XML page scripting using the DOM.</source>
          <target state="translated">以下は、DOM を使用した Web や XML ページスクリプティングにおける共通の API の簡単なリストです。</target>
        </trans-unit>
        <trans-unit id="2a0d98bd8137ccf5a2b1fe68d9d1408d675977e0" translate="yes" xml:space="preserve">
          <source>The following is a collection of tips to improve canvas performance.</source>
          <target state="translated">キャンバスの性能を上げるためのコツをまとめました。</target>
        </trans-unit>
        <trans-unit id="44e9a24b4cb089c24adbfa0962b3605667b65759" translate="yes" xml:space="preserve">
          <source>The following line creates an empty &lt;code&gt;FormData&lt;/code&gt; object and prepopulates it with key/value pairs from a form:</source>
          <target state="translated">次の行は、空の &lt;code&gt;FormData&lt;/code&gt; オブジェクトを作成し、フォームのキーと値のペアを事前に入力します。</target>
        </trans-unit>
        <trans-unit id="cde7c8cddf7ea566e202267a9500398411eeee16" translate="yes" xml:space="preserve">
          <source>The following line creates an empty &lt;code&gt;FormData&lt;/code&gt; object:</source>
          <target state="translated">次の行は、空の &lt;code&gt;FormData&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="81786697aa2915baa6eb1367d4520712fcfd6a90" translate="yes" xml:space="preserve">
          <source>The following line of code fetches the first file in the node's file list as a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">次のコード行は、ノードのファイルリストの最初のファイルを&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトとしてフェッチします。</target>
        </trans-unit>
        <trans-unit id="426e6e385386c94cdacea844c2a1f319cf0e51fe" translate="yes" xml:space="preserve">
          <source>The following logs &quot;x&quot; to the console.</source>
          <target state="translated">以下はコンソールに「×」のログを記録します。</target>
        </trans-unit>
        <trans-unit id="963c5a6e0aa3be83f64697774ff54e0d5e933af8" translate="yes" xml:space="preserve">
          <source>The following method has been added: &lt;code&gt;requestAutocomplete()&lt;/code&gt;.</source>
          <target state="translated">次のメソッドが追加されました： &lt;code&gt;requestAutocomplete()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcbe7ab86dddca8525df7d71f73e7feaee0ef08e" translate="yes" xml:space="preserve">
          <source>The following method was obsoleted long ago and was never implemented in all major browsers.</source>
          <target state="translated">以下の方法はかなり前に陳腐化しており、すべての主要なブラウザで実装されることはありませんでした。</target>
        </trans-unit>
        <trans-unit id="e2935dacf46c413c9b6802dd367e7e4a0743412c" translate="yes" xml:space="preserve">
          <source>The following methods and properties control how lines are drawn.</source>
          <target state="translated">以下のメソッドとプロパティは、線の描画方法を制御します。</target>
        </trans-unit>
        <trans-unit id="7a183f23fcb5b911e13e7161d484ab51c50cf954" translate="yes" xml:space="preserve">
          <source>The following methods are provided for drawing text. See also the &lt;a href=&quot;textmetrics&quot;&gt;&lt;code&gt;TextMetrics&lt;/code&gt;&lt;/a&gt; object for text properties.</source>
          <target state="translated">テキストを描画するために、以下のメソッドが提供されています。テキストプロパティについては、&lt;a href=&quot;textmetrics&quot;&gt; &lt;code&gt;TextMetrics&lt;/code&gt; &lt;/a&gt;オブジェクトも参照してください。</target>
        </trans-unit>
        <trans-unit id="26c5f80976aa0be20738820e4fd8d05bdd5546d7" translate="yes" xml:space="preserve">
          <source>The following methods can be used to manipulate paths of objects.</source>
          <target state="translated">オブジェクトのパスを操作するには、以下のメソッドを使用することができます。</target>
        </trans-unit>
        <trans-unit id="e4d1432c2dbf68bc107ddaffb6824018b2b6a47d" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt; and &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">次のメソッドが追加されました： &lt;code&gt;checkValidity()&lt;/code&gt; および &lt;code&gt;setCustomValidity()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff83193d8b7ea273739091d1b8a35da05b1c896f" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt;, &lt;code&gt;setCustomValidity()&lt;/code&gt;, and &lt;code&gt;setSelectionRange()&lt;/code&gt;.</source>
          <target state="translated">次のメソッドが追加されました： &lt;code&gt;checkValidity()&lt;/code&gt; 、 &lt;code&gt;setCustomValidity()&lt;/code&gt; 、および &lt;code&gt;setSelectionRange()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="347b28106a91303e7112d8d47d1611f7c438ea69" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt;, &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">次のメソッドが追加されました： &lt;code&gt;checkValidity()&lt;/code&gt; 、 &lt;code&gt;setCustomValidity()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a677c389659993fbee65633d9d269505fc3e2b0" translate="yes" xml:space="preserve">
          <source>The following methods have been added: checkValidity(), setCustomValidity(), setSelectionRange(), stepUp(), and stepDown().</source>
          <target state="translated">checkValidity()、setCustomValidity()、setSelectionRange()、stepUp()、stepDown()のメソッドが追加されました。</target>
        </trans-unit>
        <trans-unit id="844b0ae147b2e4a66f7638c3b13f724b9789d4c4" translate="yes" xml:space="preserve">
          <source>The following methods have been deprecated:</source>
          <target state="translated">以下のメソッドは非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="7e23c0fb22ffdd5bcbd559ff503b4cc560f6235a" translate="yes" xml:space="preserve">
          <source>The following more complex example will, 1 second from now, start playing 10 seconds worth of sound starting 3 seconds into the audio buffer.</source>
          <target state="translated">次のより複雑な例では、今から1秒後に、オーディオバッファに3秒を開始する10秒分のサウンドの再生を開始します。</target>
        </trans-unit>
        <trans-unit id="0ce8afa470b4e22e25f79b369d753eab44f0ce8d" translate="yes" xml:space="preserve">
          <source>The following new functions can be used in GLSL shader code, if this extension is enabled:</source>
          <target state="translated">この拡張機能が有効になっていれば、以下の新しい関数をGLSLシェーダコードで使用することができます。</target>
        </trans-unit>
        <trans-unit id="6bb6ed2aea11e5dbc04bcda8f08fcc90ca8f615d" translate="yes" xml:space="preserve">
          <source>The following non-standard properties and methods were removed in Gecko 7 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4): &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileName&quot;&gt;&lt;code&gt;File.fileName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize&quot;&gt;&lt;code&gt;File.fileSize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary&quot;&gt;&lt;code&gt;File.getAsBinary()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL&quot;&gt;&lt;code&gt;File.getAsDataURL()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText&quot;&gt;&lt;code&gt;File.getAsText(string encoding)&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=661876&quot;&gt;bug 661876&lt;/a&gt;). Standard properties &lt;a href=&quot;file/name&quot;&gt;&lt;code&gt;File.name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;blob/size&quot;&gt;&lt;code&gt;Blob.size&lt;/code&gt;&lt;/a&gt;, and methods on &lt;a href=&quot;filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">次の非標準のプロパティとメソッドはGecko 7（Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4）で削除されました：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileName&quot;&gt; &lt;code&gt;File.fileName&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize&quot;&gt; &lt;code&gt;File.fileSize&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary&quot;&gt; &lt;code&gt;File.getAsBinary()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL&quot;&gt; &lt;code&gt;File.getAsDataURL()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText&quot;&gt; &lt;code&gt;File.getAsText(string encoding)&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=661876&quot;&gt;バグ661876&lt;/a&gt;）。&lt;a href=&quot;file/name&quot;&gt; &lt;code&gt;File.name&lt;/code&gt; &lt;/a&gt;、標準プロパティFile.name、&lt;a href=&quot;blob/size&quot;&gt; &lt;code&gt;Blob.size&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;filereader&quot;&gt; &lt;code&gt;FileReader&lt;/code&gt; の&lt;/a&gt;メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7999e22162b843d28c2c7d7dadc1ae47ec77a0f9" translate="yes" xml:space="preserve">
          <source>The following options are currently not shipped anywhere, but will be added in the near future.</source>
          <target state="translated">以下のオプションは現在どこにも出荷されていませんが、近いうちに追加される予定です。</target>
        </trans-unit>
        <trans-unit id="0bca0b366d186075a610ccacd7763ba77630576a" translate="yes" xml:space="preserve">
          <source>The following options are listed in the most up-to-date spec, but are not supported in any browsers yet. It is advisable to keep checking back regularly to see if the status of these has updated, and let us know if you find any out of date information.</source>
          <target state="translated">以下のオプションは最新の仕様で記載されていますが、まだどのブラウザでもサポートされていません。これらのステータスが更新されているかどうかを定期的にチェックし、古い情報を見つけたらお知らせください。</target>
        </trans-unit>
        <trans-unit id="dab6ae7d177978b8ad4a5f7a04acf9f23d4f35e0" translate="yes" xml:space="preserve">
          <source>The following polyfill for both &lt;code&gt;classList&lt;/code&gt; and &lt;code&gt;DOMTokenList&lt;/code&gt; ensures &lt;strong&gt;full&lt;/strong&gt; compliance (coverage) for all standard methods and properties of &lt;code&gt;Element.prototype.classList&lt;/code&gt; for &lt;strong&gt;IE10&lt;/strong&gt;-&lt;strong&gt;IE11 &lt;/strong&gt;browsers plus &lt;em&gt;nearly&lt;/em&gt; compliant behavior for &lt;strong&gt;IE 6-9&lt;/strong&gt;. Check it out:</source>
          <target state="translated">両方のために、以下のポリフィル &lt;code&gt;classList&lt;/code&gt; と &lt;code&gt;DOMTokenList&lt;/code&gt; は保証さ&lt;strong&gt;いっぱい&lt;/strong&gt;のすべての標準メソッドとプロパティのためのコンプライアンス（カバレッジ） &lt;code&gt;Element.prototype.classList&lt;/code&gt; 用&lt;strong&gt;IE10&lt;/strong&gt; - &lt;strong&gt;IE11&lt;/strong&gt;のブラウザプラス&lt;em&gt;に近い&lt;/em&gt;ため準拠の動作&lt;strong&gt;IE 6-9&lt;/strong&gt;。見てみな：</target>
        </trans-unit>
        <trans-unit id="b40c6195c1bf4082ae2e2c16ad99c64b92884a32" translate="yes" xml:space="preserve">
          <source>The following properties and methods provide general information and functionality to deal with the WebGL context:</source>
          <target state="translated">以下のプロパティとメソッドは、WebGL コンテキストを扱うための一般的な情報と機能を提供します。</target>
        </trans-unit>
        <trans-unit id="8cac2f579b1df11f92fc2cf3f414c007ee1107cd" translate="yes" xml:space="preserve">
          <source>The following properties are now &lt;code&gt;long&lt;/code&gt;, instead of &lt;code&gt;DOMString&lt;/code&gt;: &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, and &lt;code&gt;vspace&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;DOMString&lt;/code&gt; ではなく &lt;code&gt;long&lt;/code&gt; になりました： &lt;code&gt;height&lt;/code&gt; 、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;hspace&lt;/code&gt; 、 &lt;code&gt;vspace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="540ae2db3a026ae0b18dc8bb97dbd4a7b77d125d" translate="yes" xml:space="preserve">
          <source>The following properties are now &lt;code&gt;unsigned long&lt;/code&gt;, instead of &lt;code&gt;long&lt;/code&gt;: &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが今している &lt;code&gt;unsigned long&lt;/code&gt; 型の代わりに、 &lt;code&gt;long&lt;/code&gt; ： &lt;code&gt;height&lt;/code&gt; 、および &lt;code&gt;width&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bccfa5536c7256b5d16ac87aaa01c85ef8ce1cf" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;aLink&lt;/code&gt;, &lt;code&gt;bgColor&lt;/code&gt;, &lt;code&gt;background&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, and &lt;code&gt;vLink&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;aLink&lt;/code&gt; 、 &lt;code&gt;bgColor&lt;/code&gt; 、 &lt;code&gt;background&lt;/code&gt; 、 &lt;code&gt;link&lt;/code&gt; 、 &lt;code&gt;text&lt;/code&gt; 、および &lt;code&gt;vLink&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a28057a0939cfe25855eb347f2adca794ea2098c" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;archive&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;code&lt;/code&gt;, &lt;code&gt;codeBase&lt;/code&gt;, &lt;code&gt;codeType&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, &lt;code&gt;standby&lt;/code&gt;, and &lt;code&gt;vspace&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;align&lt;/code&gt; 、 &lt;code&gt;archive&lt;/code&gt; 、 &lt;code&gt;border&lt;/code&gt; 、 &lt;code&gt;code&lt;/code&gt; 、 &lt;code&gt;codeBase&lt;/code&gt; 、 &lt;code&gt;codeType&lt;/code&gt; 、 &lt;code&gt;declare&lt;/code&gt; 、 &lt;code&gt;hspace&lt;/code&gt; 、 &lt;code&gt;standby&lt;/code&gt; 、および &lt;code&gt;vspace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40e41974a4b98c8371ff98df7e6df6de6a9955b2" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;coords&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;, and &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;charset&lt;/code&gt; 、 &lt;code&gt;coords&lt;/code&gt; 、 &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;rev&lt;/code&gt; 、および &lt;code&gt;shape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="033de105010b52742d2a10e0342cba893c4f499d" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;, and &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;charset&lt;/code&gt; 、 &lt;code&gt;rev&lt;/code&gt; 、および &lt;code&gt;shape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="485a8f05dc0f225d0a0ceedea0acef1e0e685a9a" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;htmlFor,&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;htmlFor,&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0596aede7b1e37bc1664dc66a6995aed451bd02a" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, &lt;code&gt;vspace&lt;/code&gt;, and &lt;code&gt;longdesc&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;border&lt;/code&gt; 、 &lt;code&gt;align&lt;/code&gt; 、 &lt;code&gt;hspace&lt;/code&gt; 、 &lt;code&gt;vspace&lt;/code&gt; 、および &lt;code&gt;longdesc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f412282e5e7b092d0b22291afbc7c828c2654ad" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;scrolling&lt;/code&gt;, &lt;code&gt;marginWidth&lt;/code&gt;, &lt;code&gt;marginHeight&lt;/code&gt;, &lt;code&gt;longDesc&lt;/code&gt;, &lt;code&gt;frameBorder&lt;/code&gt;, and &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;scrolling&lt;/code&gt; 、 &lt;code&gt;marginWidth&lt;/code&gt; 、 &lt;code&gt;marginHeight&lt;/code&gt; 、 &lt;code&gt;longDesc&lt;/code&gt; 、 &lt;code&gt;frameBorder&lt;/code&gt; 、および &lt;code&gt;align&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ede688820ee2b35999d497dfdc00136c858b23b4" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;valueType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; および &lt;code&gt;valueType&lt;/code&gt; のプロパティは廃止されました。</target>
        </trans-unit>
        <trans-unit id="b3b8f0eeb230be61b2fe7e4de9ebb4b606f844a6" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: align and useMap.</source>
          <target state="translated">以下のプロパティは廃止されました。</target>
        </trans-unit>
        <trans-unit id="ad77311e62c8dfe88fd1e4714b17641bb468b386" translate="yes" xml:space="preserve">
          <source>The following properties are obsolete and should no longer be used, but may still be present in some browser versions.</source>
          <target state="translated">以下のプロパティは廃止されたもので、もはや使用されるべきではありませんが、ブラウザのバージョンによってはまだ存在している可能性があります。</target>
        </trans-unit>
        <trans-unit id="dd659134cecfb8ed19671e5846f553a38447d2fe" translate="yes" xml:space="preserve">
          <source>The following properties control how text is laid out.</source>
          <target state="translated">以下のプロパティは、テキストがどのようにレイアウトされるかを制御します。</target>
        </trans-unit>
        <trans-unit id="fcc56d9d42e1aeac5f778c3ec9e184c2ade16b45" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;crossorigin&lt;/code&gt;, &lt;code&gt;naturalWidth&lt;/code&gt;, &lt;code&gt;naturalHeight&lt;/code&gt;, and &lt;code&gt;complete&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;crossorigin&lt;/code&gt; 、 &lt;code&gt;naturalWidth&lt;/code&gt; 、 &lt;code&gt;naturalHeight&lt;/code&gt; 、および &lt;code&gt;complete&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45af66c5828b7df3ca154ed8cfcacdfa24beb299" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;elements&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;valdiationMessage&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, and &lt;code&gt;willValidate&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;disabled&lt;/code&gt; 、 &lt;code&gt;elements&lt;/code&gt; 、 &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;valdiationMessage&lt;/code&gt; 、 &lt;code&gt;validity&lt;/code&gt; 、および &lt;code&gt;willValidate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9106c2f83ca823c1dbb62a4c66db05e31bee862e" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;relList&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;hash&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;hostname&lt;/code&gt; 、 &lt;code&gt;media&lt;/code&gt; 、 &lt;code&gt;pathname&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;protocol&lt;/code&gt; 、 &lt;code&gt;relList&lt;/code&gt; 、 &lt;code&gt;search&lt;/code&gt; 、および &lt;code&gt;text&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5ce65405e3d1bf1df9d794039e6605f1b36dd9f" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;onafterprint&lt;/code&gt;, &lt;code&gt;onbeforeprint&lt;/code&gt;, &lt;code&gt;onbeforeunload&lt;/code&gt;, &lt;code&gt;onblur&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;onfocus&lt;/code&gt;, &lt;code&gt;onhashchange&lt;/code&gt;, &lt;code&gt;onload&lt;/code&gt;, &lt;code&gt;onmessage&lt;/code&gt;, &lt;code&gt;onoffline&lt;/code&gt;, &lt;code&gt;ononline&lt;/code&gt;, &lt;code&gt;onpopstate&lt;/code&gt;, &lt;code&gt;onresize&lt;/code&gt;, &lt;code&gt;onstorage&lt;/code&gt;, and &lt;code&gt;onunload&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;onafterprint&lt;/code&gt; 、 &lt;code&gt;onbeforeprint&lt;/code&gt; 、 &lt;code&gt;onbeforeunload&lt;/code&gt; 、 &lt;code&gt;onblur&lt;/code&gt; 、 &lt;code&gt;onerror&lt;/code&gt; 、 &lt;code&gt;onfocus&lt;/code&gt; 、 &lt;code&gt;onhashchange&lt;/code&gt; 、 &lt;code&gt;onload&lt;/code&gt; 、 &lt;code&gt;onmessage&lt;/code&gt; 、 &lt;code&gt;onoffline&lt;/code&gt; 、 &lt;code&gt;ononline&lt;/code&gt; 、 &lt;code&gt;onpopstate&lt;/code&gt; 、 &lt;code&gt;onresize&lt;/code&gt; 、 &lt;code&gt;onstorage&lt;/code&gt; 、および &lt;code&gt;onunload&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a68891bf522f8b6bd307ffd86d58976d54b29f94" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;rel&lt;/code&gt;, &lt;code&gt;relList&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;hreflang&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;hash&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;rel&lt;/code&gt; 、 &lt;code&gt;relList&lt;/code&gt; 、 &lt;code&gt;media&lt;/code&gt; 、 &lt;code&gt;hreflang&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;hostname&lt;/code&gt; 、 &lt;code&gt;pathname&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;protocol&lt;/code&gt; 、 &lt;code&gt;search&lt;/code&gt; 、および &lt;code&gt;hash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="baf05f7eb800ee38c56a3a8baa12017aced053a3" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;relList&lt;/code&gt;, and &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;relList&lt;/code&gt; 、および &lt;code&gt;sizes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="549966605855e353cd122e4b189c5c5bd1960ada" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;srcdoc&lt;/code&gt;, &lt;code&gt;sandbox&lt;/code&gt;, and &lt;code&gt;contentWindow&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;srcdoc&lt;/code&gt; 、 &lt;code&gt;sandbox&lt;/code&gt; 、および &lt;code&gt;contentWindow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="232b67171d17ab56813888110c8e2cc90c47eaca" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;srcset&lt;/code&gt;, &lt;code&gt;currentSrc&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;srcset&lt;/code&gt; 、 &lt;code&gt;currentSrc&lt;/code&gt; 、および &lt;code&gt;sizes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3a7dc190265feccf6bf2c4c5bc88c02a907e808" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;typeMustMatch&lt;/code&gt;, &lt;code&gt;contentWindow&lt;/code&gt;, &lt;code&gt;willValidate&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, and &lt;code&gt;validationMessage&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;typeMustMatch&lt;/code&gt; 、 &lt;code&gt;contentWindow&lt;/code&gt; 、 &lt;code&gt;willValidate&lt;/code&gt; 、 &lt;code&gt;validity&lt;/code&gt; 、および &lt;code&gt;validationMessage&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="927bd4b56683a253cd71c65593ef09d3afb2d262" translate="yes" xml:space="preserve">
          <source>The following properties have been added: autocomplete, autofocus, dirName, files, formAction, formEncType, formMethod, formNoValidate, formTarget, height, indeterminate, labels, list, max, min, multiple, pattern, placeholder, required, selectionDirection, selectionEnd, selectionStart, step, validationMessage, validity, valueAsDate, valueAsNumber, width, and willValidate.</source>
          <target state="translated">次のプロパティが追加されました:autocomplete、autofocus、dirName、files、formAction、formEncType、formMethod、formNoValidate、formTarget、height、不確定、label、list、max、min、multiple、pattern、placeholder、required、selectDirection、selectEnd、selectStart、step、validationMessage、validation、valueAsDate、valueAsNumber、width、およびwillValidate。</target>
        </trans-unit>
        <trans-unit id="b9c33d1fdbc81019ebb51db1cee10b3e7c4d247b" translate="yes" xml:space="preserve">
          <source>The following properties have been deprecated. Where available, the appropriate replacement is provided.</source>
          <target state="translated">以下のプロパティは非推奨となっています。利用可能な場合は、適切な代替品が提供されます。</target>
        </trans-unit>
        <trans-unit id="6ceac8a5e280ec3f9c80acfd40b4e66ef249da1e" translate="yes" xml:space="preserve">
          <source>The following properties have been obsoleted: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;axis&lt;/code&gt;, &lt;code&gt;bgColor&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;ch&lt;/code&gt;, &lt;code&gt;chOff&lt;/code&gt;, &lt;code&gt;noWrap&lt;/code&gt;, and &lt;code&gt;vAlign&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;align&lt;/code&gt; 、 &lt;code&gt;axis&lt;/code&gt; 、 &lt;code&gt;bgColor&lt;/code&gt; 、 &lt;code&gt;height&lt;/code&gt; 、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;ch&lt;/code&gt; 、 &lt;code&gt;chOff&lt;/code&gt; 、 &lt;code&gt;noWrap&lt;/code&gt; 、および &lt;code&gt;vAlign&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba7ec829e748cc25bede51fb0e2a5704ec26a816" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;allowFullscreen&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;allowFullscreen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae9ec60baa162331f203be7299ebce783b46bc75" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;control&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4ea2922e4142c8c188c4d96c3856b3948ab5596" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;download&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;download&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="980d30ca747c998299ab98797c9d5b281e41f2b7" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;scoped&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;scoped&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a8340e636b5f60ab51b727a2f2f98697c0a645b" translate="yes" xml:space="preserve">
          <source>The following property has been removed: &lt;code&gt;profile&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが削除されました： &lt;code&gt;profile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a004dfcc4e2fb6306e02db51b6e2aa8c9926ea1b" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;align&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd8bdb68205c26b3479df47bb389f878b2a56a31" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;nohref&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;nohref&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b201f43503b0631e93f31e7e2f9c5f1eafd78cfb" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;scheme&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf1b9d2030a0ad21d36ec803f5cf39fd22de9f2a" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25ae194a75b8f2ff70996b25da37203a84313673" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;width&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a66d5ab9a4ebbed41a434981b6a6e2112f4a86a" translate="yes" xml:space="preserve">
          <source>The following requests both audio and video without any specific requirements:</source>
          <target state="translated">以下、音声と動画の両方を特になしにお願いします。</target>
        </trans-unit>
        <trans-unit id="8d449485bc3e48e7ba6cfba963eddbf84784d3f7" translate="yes" xml:space="preserve">
          <source>The following sample is not optimized. It does not make use of .NET 4.5 Websocket support.</source>
          <target state="translated">以下のサンプルは最適化されていません。.NET 4.5 Websocketのサポートを利用していません。</target>
        </trans-unit>
        <trans-unit id="a4390c0b3b9e6eb1850207aad3e4d78393d8f404" translate="yes" xml:space="preserve">
          <source>The following script illustrates the use of &lt;code&gt;createJavaScriptNode()&lt;/code&gt;:</source>
          <target state="translated">次のスクリプトは、 &lt;code&gt;createJavaScriptNode()&lt;/code&gt; の使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2efc08fc5fafa2d1a99ec29aaeae8e8165d2599f" translate="yes" xml:space="preserve">
          <source>The following shows how to specify a basic and advanced set of constraints. It specifies that the page or web app needs a width between 640 and 1280 and a height between 480 and 720, with the later number in each pair being preferred. The advanced property further specifies that an image size of 1920 by 1280 is the preferred or an aspect ratio of 1.333 if that is not available. Note that these constraints also illustrate what the spec refers to as a &lt;em&gt;backoff strategy&lt;/em&gt;.</source>
          <target state="translated">以下は、制約の基本セットと詳細セットを指定する方法を示しています。これは、ページまたはWebアプリが640〜1280の幅と480〜720の高さを必要とすることを指定します。各ペアの後半の数値が優先されます。さらに、詳細プロパティは、1920 x 1280の画像サイズが推奨されるか、それが利用できない場合は1.333のアスペクト比であることを指定します。これらの制約は、仕様が&lt;em&gt;バックオフ戦略&lt;/em&gt;と呼ぶものも示していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9fcee6ef9722b7fbb31ee3dc2c9420a162e09331" translate="yes" xml:space="preserve">
          <source>The following simple code snippet, registers a single handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; events. When the &lt;code&gt;src&lt;/code&gt; element is touched, the element's width and height will be calculate based on the touch point's &lt;code&gt;radiusX&lt;/code&gt; and &lt;code&gt;radiusY&lt;/code&gt; values and the element will then be rotated using the touch point's &lt;code&gt;rotationAngle&lt;/code&gt;.</source>
          <target state="translated">次の簡単なコードスニペットは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; イベントの単一のハンドラーを登録します。場合 &lt;code&gt;src&lt;/code&gt; 要素がタッチされ、要素の幅と高さを計算し、タッチポイントのに基づいて説明する &lt;code&gt;radiusX&lt;/code&gt; と &lt;code&gt;radiusY&lt;/code&gt; 値および要素は、次に、タッチポイントの使用回転される &lt;code&gt;rotationAngle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bbdb29db1d0c94109f1a7c92a3292460db82004" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video chunk by chunk as fast as possible, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次の簡単な例では、ビデオチャンクを可能な限り高速にチャンクごとにロードし、できるだけ早く再生します。この例はNick Desaulniersによって作成され、&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;ここでライブで表示&lt;/a&gt;できます（詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードすることもできます）。</target>
        </trans-unit>
        <trans-unit id="f1b420ca084c2dd3c6476717b349b9ebab07a132" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video chunk by chunk as fast as possible, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次の簡単な例では、ビデオチャンクをチャンクごとにできるだけ速くロードし、できるだけ早く再生します。この例はNickDesaulniersによって作成され、&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;ここでライブで表示&lt;/a&gt;できます（詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードすることもできます）。</target>
        </trans-unit>
        <trans-unit id="e9daee8c94d2e723d971c30ced2186df50e1d60f" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video with &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次の簡単な例では、&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;を使用して動画を読み込み、できるだけ早く再生します。この例はNick Desaulniersによって作成され、&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;ここでライブで表示&lt;/a&gt;できます（詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードすることもできます）。</target>
        </trans-unit>
        <trans-unit id="b39617e8d87b8095454b5e917c246ec1988eb6cf" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video with &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次の簡単な例では、&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;を使用してビデオをロードし、できるだけ早く再生します。この例はNickDesaulniersによって作成され、&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;ここでライブで表示&lt;/a&gt;できます（詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードすることもできます）。</target>
        </trans-unit>
        <trans-unit id="1a55e4d8bfb84a88b63ff842a0ace53c76094e91" translate="yes" xml:space="preserve">
          <source>The following simple example registers a service worker example, an then adds an event handler to a button so you can explicitly update the service worker whenever desired:</source>
          <target state="translated">次の簡単な例では、サービス ワーカーの例を登録し、ボタンにイベント ハンドラを追加して、サービス ワーカーをいつでも明示的に更新できるようにしています。</target>
        </trans-unit>
        <trans-unit id="617fc251290155a680172f5f4801ef9cb2ba30f6" translate="yes" xml:space="preserve">
          <source>The following simple example registers a service worker example, but then immediately unregisters it again:</source>
          <target state="translated">以下の簡単な例では、サービスワーカーの例を登録しますが、すぐに再び登録を解除します。</target>
        </trans-unit>
        <trans-unit id="b51fb322fb3194ebc213fd36c4afcd7969fb5f83" translate="yes" xml:space="preserve">
          <source>The following simple example shows a function that can be used to set a custom field of view with four specified degree values for up, right, down and left. The &lt;a href=&quot;../vrfieldofview/vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView()&lt;/code&gt;&lt;/a&gt; constructor is used to create a &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; object from the supplied values, which is then fed into the &lt;code&gt;setFieldOfView()&lt;/code&gt; method (the default &lt;code&gt;zNear&lt;/code&gt; and &lt;code&gt;zFar&lt;/code&gt; values are always used, in this case.)</source>
          <target state="translated">次の簡単な例は、上、右、下、左の4つの指定された度の値でカスタム視野を設定するために使用できる関数を示しています。&lt;a href=&quot;../vrfieldofview/vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView()&lt;/code&gt; &lt;/a&gt;コンストラクタを作成するために使用され&lt;a href=&quot;../vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView&lt;/code&gt; の&lt;/a&gt;その後に供給され、供給された値からオブジェクトを &lt;code&gt;setFieldOfView()&lt;/code&gt; メソッド（デフォルト &lt;code&gt;zNear&lt;/code&gt; と &lt;code&gt;zFar&lt;/code&gt; 値は常にこの場合には、使用されています。）</target>
        </trans-unit>
        <trans-unit id="5a7d41c5f1fb0748bc1a09a0e883699ed5b53cd4" translate="yes" xml:space="preserve">
          <source>The following simple example shows a function that can be used to set a custom field of view with four specified degree values for up, right, down and left. The &lt;code&gt;VRFieldOfView()&lt;/code&gt; constructor is used to create a &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; object from the supplied values, which is then fed into the &lt;a href=&quot;../hmdvrdevice/setfieldofview&quot;&gt;&lt;code&gt;HMDVRDevice.setFieldOfView&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">次の簡単な例は、上、右、下、左の4つの指定された度の値でカスタム視野を設定するために使用できる関数を示しています。 &lt;code&gt;VRFieldOfView()&lt;/code&gt; コンストラクタを作成するために使用され&lt;a href=&quot;../vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView&lt;/code&gt; の&lt;/a&gt;その後に供給され、供給された値からオブジェクトを&lt;a href=&quot;../hmdvrdevice/setfieldofview&quot;&gt; &lt;code&gt;HMDVRDevice.setFieldOfView&lt;/code&gt; の&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="7f3908dd528be5154d6daac0a0350f268b9df9c3" translate="yes" xml:space="preserve">
          <source>The following simple example shows how to create an &lt;code&gt;AudioBuffer&lt;/code&gt; and fill it with random white noise. You can find the full source code at our &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;webaudio-examples&lt;/a&gt; repository; a &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;running live&lt;/a&gt; version is also available.</source>
          <target state="translated">次の簡単な例は、 &lt;code&gt;AudioBuffer&lt;/code&gt; を作成し、ランダムなホワイトノイズで埋める方法を示しています。完全なソースコードは、&lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;webaudio-examples&lt;/a&gt;リポジトリにあります。&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;実行中のライブ&lt;/a&gt;バージョンも入手可能です。</target>
        </trans-unit>
        <trans-unit id="0aaed96607a9eb8989fd88d3b37348479fa11ee0" translate="yes" xml:space="preserve">
          <source>The following simple example shows how you could separate a stereo track (say, a piece of music), and process the left and right channel differently. To use them, you need to use the second and third parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt;&lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt;&lt;/a&gt; method, which allow you to specify the index of the channel to connect from and the index of the channel to connect to.</source>
          <target state="translated">次の簡単な例は、ステレオトラック（音楽など）を分離し、左右のチャネルを別々に処理する方法を示しています。それらを使用するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt; &lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt; &lt;/a&gt;メソッドの2番目と3番目のパラメーターを使用する必要があります。これにより、接続元のチャネルのインデックスと接続先のチャネルのインデックスを指定できます。</target>
        </trans-unit>
        <trans-unit id="1ec998ed871fe631ecf6cff26f43ec1a15898cfa" translate="yes" xml:space="preserve">
          <source>The following sized formats become &lt;strong&gt;color-renderable&lt;/strong&gt;:</source>
          <target state="translated">次のサイズのフォーマットは、&lt;strong&gt;カラーレンダリング可能に&lt;/strong&gt;なります。</target>
        </trans-unit>
        <trans-unit id="a334cac117a121f75de4d55a7d0d4d6eb76a64a1" translate="yes" xml:space="preserve">
          <source>The following snippet (see our &lt;a href=&quot;http://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDevice example&lt;/a&gt;) returns an array of all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt;&lt;code&gt;VRDevice&lt;/code&gt;&lt;/a&gt;s connected to your computer via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt;&lt;code&gt;Navigator.getVRDevices()&lt;/code&gt;&lt;/a&gt;. For each connected device it then prints out the &lt;code&gt;hardwareUnitId&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt;&lt;code&gt;VRDevice.deviceId&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt;&lt;code&gt;VRDevice.deviceName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のスニペット（&lt;a href=&quot;http://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDeviceの例を&lt;/a&gt;参照）は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt; &lt;code&gt;Navigator.getVRDevices()&lt;/code&gt; を&lt;/a&gt;介してコンピューターに接続されているすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt; &lt;code&gt;VRDevice&lt;/code&gt; &lt;/a&gt;の配列を返します。次に、接続されたデバイスごとに、 &lt;code&gt;hardwareUnitId&lt;/code&gt; 、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt; &lt;code&gt;VRDevice.deviceId&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt; &lt;code&gt;VRDevice.deviceName&lt;/code&gt; を出力し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cde53a874f7c6fc47a640da7638ac0ffec1b1d05" translate="yes" xml:space="preserve">
          <source>The following snippet (see our &lt;a href=&quot;https://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDevice example&lt;/a&gt;) returns an array of all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt;&lt;code&gt;VRDevice&lt;/code&gt;&lt;/a&gt;s connected to your computer via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt;&lt;code&gt;Navigator.getVRDevices()&lt;/code&gt;&lt;/a&gt;. For each connected device it then prints out the &lt;code&gt;hardwareUnitId&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt;&lt;code&gt;VRDevice.deviceId&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt;&lt;code&gt;VRDevice.deviceName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のスニペット（&lt;a href=&quot;https://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDeviceの例を&lt;/a&gt;参照）は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt; &lt;code&gt;Navigator.getVRDevices()&lt;/code&gt; を&lt;/a&gt;介してコンピューターに接続されているすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt; &lt;code&gt;VRDevice&lt;/code&gt; &lt;/a&gt;の配列を返します。次に、接続されているデバイスごとに、 &lt;code&gt;hardwareUnitId&lt;/code&gt; 、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt; &lt;code&gt;VRDevice.deviceId&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt; &lt;code&gt;VRDevice.deviceName&lt;/code&gt; を出力し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="457f5d04c88565917f43dfac13214bd074e2fa88" translate="yes" xml:space="preserve">
          <source>The following snippet accesses the current domain's local &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object and adds a data item to it using &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のスニペットは、現在のドメインのローカル&lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;オブジェクトにアクセスし、&lt;a href=&quot;../storage/setitem&quot;&gt; &lt;code&gt;Storage.setItem()&lt;/code&gt; &lt;/a&gt;を使用してそれにデータ項目を追加します。</target>
        </trans-unit>
        <trans-unit id="fed9e87e119969d675a88209e404113a28406dd4" translate="yes" xml:space="preserve">
          <source>The following snippet accesses the current domain's session &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object and adds a data item to it using &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のスニペットは、現在のドメインのセッション&lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;オブジェクトにアクセスし、&lt;a href=&quot;../storage/setitem&quot;&gt; &lt;code&gt;Storage.setItem()&lt;/code&gt; &lt;/a&gt;を使用してそれにデータ項目を追加します。</target>
        </trans-unit>
        <trans-unit id="ba0244756728a50c0765beef0b4721b1698b3625" translate="yes" xml:space="preserve">
          <source>The following snippet comes from &lt;a href=&quot;../service_worker_api/using_service_workers#Install_and_activate.3A_populating_your_cache&quot;&gt;Using Service Workers&lt;/a&gt;; go there for more details.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;../service_worker_api/using_service_workers#Install_and_activate.3A_populating_your_cache&quot;&gt;サービスワーカーの使用&lt;/a&gt;からのものです。詳細については、そこに行ってください。</target>
        </trans-unit>
        <trans-unit id="240c5a73fff654922ff506bc2264d123bdd90528" translate="yes" xml:space="preserve">
          <source>The following snippet comes from &lt;a href=&quot;../service_worker_api/using_service_workers#Updating_your_service_worker&quot;&gt;Using Service Workers&lt;/a&gt;; go there for more details.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;../service_worker_api/using_service_workers#Updating_your_service_worker&quot;&gt;サービスワーカーの使用&lt;/a&gt;からのものです。詳細については、そこに行ってください。</target>
        </trans-unit>
        <trans-unit id="de570ef0cc4fd015eda992f4688f44ba889a97c9" translate="yes" xml:space="preserve">
          <source>The following snippet fires a notification; a simple &lt;code&gt;options&lt;/code&gt; object is created, then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">次のスニペットは通知を発生させます。単純な &lt;code&gt;options&lt;/code&gt; オブジェクトが作成され、 &lt;code&gt;Notification()&lt;/code&gt; コンストラクタを使用して通知が発生します。</target>
        </trans-unit>
        <trans-unit id="2514c9568e3a7b89e3d9c897679c74245d0200c3" translate="yes" xml:space="preserve">
          <source>The following snippet is based on a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersが作成した簡単な例に基づいています（&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;デモ全体をライブ&lt;/a&gt;で表示するか、詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードしてください）。</target>
        </trans-unit>
        <trans-unit id="0663ef0fa746c52073e4b6f3972be72551d1f2d0" translate="yes" xml:space="preserve">
          <source>The following snippet is based on a simple example written by Nick Desaulniers (&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersによって作成された簡単な例に基づいています（&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;デモ全体をライブ&lt;/a&gt;で表示するか&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;、ソース&lt;/a&gt;をダウンロードしてさらに調査してください）。</target>
        </trans-unit>
        <trans-unit id="72325033b7e522f00c5fb59a2aee669eb1445c62" translate="yes" xml:space="preserve">
          <source>The following snippet is excerpted from our &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;Speech synthesiser demo&lt;/a&gt;.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;スピーチシンセサイザーのデモ&lt;/a&gt;からの抜粋です。</target>
        </trans-unit>
        <trans-unit id="df97881cdcc699da0872492a819dff3185d0ccb3" translate="yes" xml:space="preserve">
          <source>The following snippet is from a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersによって書かれた簡単な例からのものです（&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;完全なデモをライブ&lt;/a&gt;で表示するか、詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードしてください）。</target>
        </trans-unit>
        <trans-unit id="fc6c748d558b6d2393252ecfe846cda2d47e4412" translate="yes" xml:space="preserve">
          <source>The following snippet is from a simple example written by Nick Desaulniers (&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersによって作成された簡単な例からのものです（&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;デモ全体をライブ&lt;/a&gt;で表示するか&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;、ソース&lt;/a&gt;をダウンロードしてさらに調査してください）。</target>
        </trans-unit>
        <trans-unit id="2d3422ae4b7d1141eefbeae98d1ff9ed4b5faff0" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to create a notification that also triggers a device vibration; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">次のスニペットは、デバイスのバイブレーションもトリガーする通知を作成することを目的としています。単純な &lt;code&gt;options&lt;/code&gt; オブジェクトが作成され、 &lt;code&gt;Notification()&lt;/code&gt; コンストラクタを使用して通知が発生します。</target>
        </trans-unit>
        <trans-unit id="1f9b70c1893a9f85337dc0f6282c583f813de3bd" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to fire a notification that renotifies the user after it has been replaced; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">次のスニペットは、交換後にユーザーに再通知する通知を発行することを目的としています。単純な &lt;code&gt;options&lt;/code&gt; オブジェクトが作成され、 &lt;code&gt;Notification()&lt;/code&gt; コンストラクタを使用して通知が発生します。</target>
        </trans-unit>
        <trans-unit id="54a960e1233f36c8039008ae1581c185d1566349" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to fire a silent notification; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">次のスニペットは、サイレント通知を起動することを目的としています。単純な &lt;code&gt;options&lt;/code&gt; オブジェクトが作成され、 &lt;code&gt;Notification()&lt;/code&gt; コンストラクタを使用して通知が発生します。</target>
        </trans-unit>
        <trans-unit id="43c6c8734f601a5eed0db097efa6b6695a66a1b5" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersによって書かれた簡単な例から抜粋したものです（&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;デモ全体をライブ&lt;/a&gt;で見るか、詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードしてください）。</target>
        </trans-unit>
        <trans-unit id="019e579b23d69d441b7af9eb0ef5935a676ea332" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from a simple example written by Nick Desaulniers (&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersによって作成された簡単な例から抜粋したものです（&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;デモ全体をライブ&lt;/a&gt;で表示するか&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;、ソース&lt;/a&gt;をダウンロードしてさらに調査してください）。</target>
        </trans-unit>
        <trans-unit id="beb73a2cb8b33cc2c1b40bb31d4d41bbf7c64336" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;code&gt;onstatechange&lt;/code&gt; hander is used to log the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; to the console every time it changes.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から取得したものです（&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;実際に実行されていることを確認してください&lt;/a&gt;） &lt;code&gt;onstatechange&lt;/code&gt; は、変更されるたびに現在の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt;をコンソールに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="38c6adaeda835cb4f4b23b37a7a925fd9aa8ae00" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;a href=&quot;../audiocontext/suspend&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から取得したものです（&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;ライブで実行されているのを確認してください&lt;/a&gt;）。一時停止/再開ボタンをクリックすると、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt;が照会されます。 &lt;code&gt;running&lt;/code&gt; 場合は、&lt;a href=&quot;../audiocontext/suspend&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt;が呼び出されます。 &lt;code&gt;suspended&lt;/code&gt; 場合は、 &lt;code&gt;resume()&lt;/code&gt; が呼び出されます。どちらの場合も、ボタンのテキストラベルは、promiseが解決されると適切に更新されます。</target>
        </trans-unit>
        <trans-unit id="91143cc5df98401da6439e3a0f4134788f38b5f0" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;suspend()&lt;/code&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から取得したものです（&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;ライブで実行されているのを確認してください&lt;/a&gt;）。一時停止/再開ボタンをクリックすると、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt;が照会されます。 &lt;code&gt;running&lt;/code&gt; 場合は、 &lt;code&gt;suspend()&lt;/code&gt; が呼び出されます。 &lt;code&gt;suspended&lt;/code&gt; 場合は、&lt;a href=&quot;../baseaudiocontext/resume&quot;&gt; &lt;code&gt;resume()&lt;/code&gt; &lt;/a&gt;が呼び出されます。どちらの場合も、ボタンのテキストラベルは、promiseが解決されると適切に更新されます。</target>
        </trans-unit>
        <trans-unit id="857017b4004eeb5ca2389ecaa5a43cdb4e712efd" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;code&gt;onstatechange&lt;/code&gt; hander is used to log the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; to the console every time it changes.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext状態のデモ&lt;/a&gt;から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;ライブで実行されていることを確認してください&lt;/a&gt;） &lt;code&gt;onstatechange&lt;/code&gt; は、現在の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt;が変更されるたびにコンソールに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="abd28e39601f32dc230e035de310aea9f43dc823" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;a href=&quot;../audiocontext/suspend&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext状態のデモ&lt;/a&gt;から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;ライブで実行されていることを確認してください&lt;/a&gt;）。サスペンド/再開ボタンをクリックすると、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt;が照会されます。 &lt;code&gt;running&lt;/code&gt; 場合は、&lt;a href=&quot;../audiocontext/suspend&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt;が呼び出されます。 &lt;code&gt;suspended&lt;/code&gt; 場合は、 &lt;code&gt;resume()&lt;/code&gt; が呼び出されます。いずれの場合も、Promiseが解決されると、ボタンのテキストラベルが適切に更新されます。</target>
        </trans-unit>
        <trans-unit id="bb2b960462780d255da40654553b3effa67728b1" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;suspend()&lt;/code&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext状態のデモ&lt;/a&gt;から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;ライブで実行されていることを確認してください&lt;/a&gt;）。サスペンド/再開ボタンをクリックすると、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt;が照会されます。 &lt;code&gt;running&lt;/code&gt; 場合は、 &lt;code&gt;suspend()&lt;/code&gt; が呼び出されます。 &lt;code&gt;suspended&lt;/code&gt; 場合は、&lt;a href=&quot;../baseaudiocontext/resume&quot;&gt; &lt;code&gt;resume()&lt;/code&gt; &lt;/a&gt;が呼び出されます。いずれの場合も、Promiseが解決されると、ボタンのテキストラベルが適切に更新されます。</target>
        </trans-unit>
        <trans-unit id="278711f80cd4f70bd587e31deb1ba93ca8206029" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/slotchange&quot;&gt;slotchange example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/web-components-examples/slotchange/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/slotchange&quot;&gt;slotchangeの例&lt;/a&gt;から抜粋したものです（実際に&lt;a href=&quot;https://mdn.github.io/web-components-examples/slotchange/&quot;&gt;ご覧ください&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f43d25a9601cb720c4f6f5fb7d2a5b4e47df6467" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/onstatechange&quot;&gt;&lt;code&gt;AudioContext.onstatechange&lt;/code&gt;&lt;/a&gt; hander is used to log the current state to the console every time it changes.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;実際に実行されていることを確認してください&lt;/a&gt;）&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/onstatechange&quot;&gt; &lt;code&gt;AudioContext.onstatechange&lt;/code&gt; &lt;/a&gt;は、変更されるたびに現在の状態をコンソールに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2cc52709cb8d1588f44ef12f2f804dc6f1d560dc" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audiocontext-states/index.html&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the stop button is clicked, &lt;code&gt;close()&lt;/code&gt; is called. When the promise resolves, the example is reset to its beginning state.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audiocontext-states/index.html&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から取得したものです（&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;ライブで実行されていることを確認してください&lt;/a&gt;）。停止ボタンをクリックすると、 &lt;code&gt;close()&lt;/code&gt; が呼び出されます。promiseが解決すると、例は開始状態にリセットされます。</target>
        </trans-unit>
        <trans-unit id="4fe202609423894409975fd964be992d57404a90" translate="yes" xml:space="preserve">
          <source>The following snippet requests permission from the user, then logs a different result to the console depending on the users' choice.</source>
          <target state="translated">以下のスニペットは、ユーザーに許可を要求し、ユーザーの選択に応じて異なる結果をコンソールに記録します。</target>
        </trans-unit>
        <trans-unit id="9014c78a57a156cfb97e3754e18015825789076c" translate="yes" xml:space="preserve">
          <source>The following snippet shows the results of testing for the existence of &lt;code&gt;username&lt;/code&gt; in the &lt;code&gt;FormData&lt;/code&gt; object, before and after appending a &lt;code&gt;username&lt;/code&gt; value to it with &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">次のスニペットショーの存在を試験した結果 &lt;code&gt;username&lt;/code&gt; で &lt;code&gt;FormData&lt;/code&gt; 追加する前と後に、対象 &lt;code&gt;username&lt;/code&gt; とそれに値を&lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="14ce2d252042d387adc5b9436e0a2bb3a7228baf" translate="yes" xml:space="preserve">
          <source>The following snippets are taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks&quot;&gt;life-cycle-callbacks&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/life-cycle-callbacks&quot;&gt;see it live also&lt;/a&gt;), which creates an element that displays a square of a size and color specified in the element's attributes.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks&quot;&gt;ライフサイクルコールバックの&lt;/a&gt;例（&lt;a href=&quot;https://mdn.github.io/web-components-examples/life-cycle-callbacks&quot;&gt;ライブも参照&lt;/a&gt;）から抜粋したもので、要素の属性で指定されたサイズと色の正方形を表示する要素を作成します。</target>
        </trans-unit>
        <trans-unit id="67ef3f9dc7d5caba906229758a1ef9d8bfceaa22" translate="yes" xml:space="preserve">
          <source>The following special attributes may also be specified:</source>
          <target state="translated">また、以下の特殊属性を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="2f96fae6ce5ceff5ac67507957a759cce4424df0" translate="yes" xml:space="preserve">
          <source>The following strings are permitted values for the facing mode. These may represent separate cameras, or they may represent directions in which an adjustable camera can be pointed.</source>
          <target state="translated">以下の文字列は、フェーシングモードに許可された値です。これらは別々のカメラを表している場合もあれば、調整可能なカメラを向ける方向を表している場合もあります。</target>
        </trans-unit>
        <trans-unit id="b869ceb7f13de7970a1ce24e07ddc38b172a5db1" translate="yes" xml:space="preserve">
          <source>The following strings represent the possible orientation requirements you may specify.</source>
          <target state="translated">以下の文字列は、指定可能な方向の要件を表しています。</target>
        </trans-unit>
        <trans-unit id="099adc8329d830f794c00acd033b1da0b448b1ab" translate="yes" xml:space="preserve">
          <source>The following strings will be displayed in the user's console:</source>
          <target state="translated">ユーザーのコンソールには、以下の文字列が表示されます。</target>
        </trans-unit>
        <trans-unit id="2f172756246c880f3029487fd72e505a75fca45a" translate="yes" xml:space="preserve">
          <source>The following table briefly describes these data types.</source>
          <target state="translated">以下の表では、これらのデータ型について簡単に説明します。</target>
        </trans-unit>
        <trans-unit id="587d2f2a8aaeeadc0c0001bb3f9aa1f4b4a19bea" translate="yes" xml:space="preserve">
          <source>The following table shows the different ways the keys are supplied:</source>
          <target state="translated">以下の表は、キーの供給方法の違いを示しています。</target>
        </trans-unit>
        <trans-unit id="37eab136705d14ae80a537b8e821daf9f9baf8e4" translate="yes" xml:space="preserve">
          <source>The following table shows the return values for different elements:</source>
          <target state="translated">以下の表は、異なる要素の戻り値を示しています。</target>
        </trans-unit>
        <trans-unit id="6939c3cf5d5b611835b8cd9c48b653edb97f3222" translate="yes" xml:space="preserve">
          <source>The following tables show what code values are used for each native scancode or virtual keycode on major platforms. Because some browsers choose to interpret physical keys differently, there are some differences in which keys map to which codes. These tables show those variations when known.</source>
          <target state="translated">以下の表は、主要なプラットフォーム上でネイティブスキャンコードや仮想キーコードに使用されるコード値を示しています。ブラウザによっては物理キーの解釈が異なるため、どのキーがどのコードに対応するかに違いがあります。これらの表は、それらの違いがわかっている場合に示しています。</target>
        </trans-unit>
        <trans-unit id="af4521bc495383ef37b6bffc2fc840203d23a965" translate="yes" xml:space="preserve">
          <source>The following tags are the HTML tags allowed in a cue and require opening and closing tags (e.g. &lt;code&gt;&amp;lt;b&amp;gt;text&amp;lt;/b&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">次のタグは、キューで使用できるHTMLタグであり、開始タグと終了タグが必要です（例： &lt;code&gt;&amp;lt;b&amp;gt;text&amp;lt;/b&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="dff431f40d7ff60d18d6833fbddc178194c47f3a" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.confirm and DOM:window.alert Dialog boxes are modal windows; they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window).</source>
          <target state="translated">以下のテキストは、この記事の DOM:window.confirm と DOM:window.alert の間で共有されています。 ダイアログボックスはモーダルウィンドウであり、ダイアログボックスが閉じられるまで、ユーザーがプログラムの残りのインターフェイスにアクセスすることを防ぎます。このため、ダイアログボックス(またはモーダルウィンドウ)を作成する関数を使いすぎてはいけません。</target>
        </trans-unit>
        <trans-unit id="cc96ab269e85a3c2dc2cf5a1982bf7fae6b0eacb" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.prompt and DOM:window.alert Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window). And regardless, there are very good reasons to &lt;a href=&quot;http://alistapart.com/article/neveruseawarning&quot;&gt;avoid using dialog boxes for confirmation&lt;/a&gt;.</source>
          <target state="translated">次のテキストは、この記事で共有されています。DOM：window.promptとDOM：window.alertダイアログボックスはモーダルウィンドウです。ダイアログボックスが閉じるまで、ユーザーはプログラムの残りのインターフェイスにアクセスできません。このため、ダイアログボックス（またはモーダルウィンドウ）を作成する関数を使いすぎないでください。&lt;a href=&quot;http://alistapart.com/article/neveruseawarning&quot;&gt;とにかく、確認のためにダイアログボックスを使用&lt;/a&gt;しないようにするのには十分な理由があります。</target>
        </trans-unit>
        <trans-unit id="15e06a226e5cbfcfe7eeef8afee245aef503569f" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.prompt and DOM:window.confirm Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window).</source>
          <target state="translated">以下のテキストは、この記事、DOM:window.prompt と DOM:window.confirm の間で共有されています。 ダイアログボックスはモーダルウィンドウです-ダイアログボックスが閉じられるまで、ユーザーがプログラムの残りのインターフェイスにアクセスすることを防ぎます。このため、ダイアログボックス(またはモーダルウィンドウ)を作成する関数を使いすぎてはいけません。</target>
        </trans-unit>
        <trans-unit id="4a320c8e0d82a5ff008d8131b1a9708ec9aa9d7d" translate="yes" xml:space="preserve">
          <source>The following types are also permitted as descendants of the root node, in addition to &lt;code&gt;Node&lt;/code&gt; and &lt;code&gt;Attr&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; および &lt;code&gt;Attr&lt;/code&gt; に加えて、ルートノードの子孫として次のタイプも許可されます。</target>
        </trans-unit>
        <trans-unit id="44df6ec9f734ad3e2857bb208a65af405d15858b" translate="yes" xml:space="preserve">
          <source>The following types are used in &lt;a href=&quot;../webgl_api&quot;&gt;WebGL&lt;/a&gt; interfaces.</source>
          <target state="translated">以下のタイプは、&lt;a href=&quot;../webgl_api&quot;&gt;WebGL&lt;/a&gt;インターフェースで使用されます。</target>
        </trans-unit>
        <trans-unit id="12f6529433316717f49ccef56d04b522bdd179f1" translate="yes" xml:space="preserve">
          <source>The following would set up a simple audio graph, featuring an &lt;code&gt;AudioDestinationNode&lt;/code&gt; with &lt;code&gt;maxChannelCount&lt;/code&gt; of 2:</source>
          <target state="translated">次の例では、 &lt;code&gt;maxChannelCount&lt;/code&gt; が2の &lt;code&gt;AudioDestinationNode&lt;/code&gt; を特徴とするシンプルなオーディオグラフを設定します。</target>
        </trans-unit>
        <trans-unit id="c3dfc201b0ad1a5f86d4eaab4e4f4a4ab7820a4a" translate="yes" xml:space="preserve">
          <source>The font source. This can be either:</source>
          <target state="translated">フォントのソース。これはどちらでも構いません。</target>
        </trans-unit>
        <trans-unit id="51e1c1c17699a8587a876e229f70d9cdefa7b050" translate="yes" xml:space="preserve">
          <source>The form controls in the returned collection are in the same order in which they appear in the form by following a preorder, depth-first traversal of the tree. This is called &lt;strong&gt;tree order&lt;/strong&gt;.</source>
          <target state="translated">返されたコレクション内のフォームコントロールは、ツリーのプレオーダーの深さ優先トラバーサルに従うことにより、フォームに表示される順序と同じです。これは&lt;strong&gt;ツリー順&lt;/strong&gt;と呼ばれ&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="124a0f04f43a018ba98a8d22bd1275aa2d6b26a9" translate="yes" xml:space="preserve">
          <source>The form that this legend belongs to. If the legend has a fieldset element as its parent, then this attribute returns the same value as the &lt;strong&gt;form&lt;/strong&gt; attribute on the parent fieldset element. Otherwise, it returns null.</source>
          <target state="translated">この伝説が属する形。凡例に親としてfieldset要素がある場合、この属性は親fieldset要素の&lt;strong&gt;form&lt;/strong&gt;属性と同じ値を返します。それ以外の場合は、nullを返します。</target>
        </trans-unit>
        <trans-unit id="70f3b6ba6a96241580d1a54f82c3d94867d47693" translate="yes" xml:space="preserve">
          <source>The format of the ID string is not defined by the specification, so you cannot reliably make any assumptions about the contents of the string, or assume that the format of the string will remain unchanged for a given object type.</source>
          <target state="translated">ID文字列のフォーマットは仕様では定義されていないので、文字列の内容を確実に仮定したり、与えられたオブジェクトタイプに対して文字列のフォーマットが変更されないと仮定したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="b8a4ee2e37ccf04ab80c411770e74d74cd1d9357" translate="yes" xml:space="preserve">
          <source>The format of the string must follow one of the following HTML microsyntax:</source>
          <target state="translated">文字列のフォーマットは、以下のHTMLマイクロシンタックスのいずれかに従わなければなりません。</target>
        </trans-unit>
        <trans-unit id="b07887490e8e70b0a98f842832497826704c2208" translate="yes" xml:space="preserve">
          <source>The format of the string must follow one of the following HTML microsyntaxes:</source>
          <target state="translated">文字列のフォーマットは、以下のHTMLマイクロシンタックスのいずれかに従わなければなりません。</target>
        </trans-unit>
        <trans-unit id="cd54e78ac53c76fd1d9c1efce5fd1406ad0f9364" translate="yes" xml:space="preserve">
          <source>The format of this message (as is the case with everything you do when handling signaling) is entirely up to you, depending on your needs; you can provide other information as required.</source>
          <target state="translated">このメッセージのフォーマットは(シグナリングを処理するときに行うすべてのことと同様に)、必要に応じて完全にあなた次第です。</target>
        </trans-unit>
        <trans-unit id="1d6a24afb0dece7dca5485bc27e2ff6b4f4a4a3b" translate="yes" xml:space="preserve">
          <source>The formats are Unicode strings giving the type or format of the data, generally given by a MIME type. Some values that are not MIME types are special-cased for legacy reasons (for example &quot;&lt;code&gt;text&lt;/code&gt;&quot;).</source>
          <target state="translated">フォーマットは、データのタイプまたはフォーマットを指定するUnicode文字列であり、通常はMIMEタイプによって指定されます。MIMEタイプではない一部の値は、従来の理由で特殊なケースになっています（「 &lt;code&gt;text&lt;/code&gt; 」など）。</target>
        </trans-unit>
        <trans-unit id="0087f6fd7646cd44d6104055d0b94fe848721be5" translate="yes" xml:space="preserve">
          <source>The formula for the blending color can be described like this: color(RGBA) = (sourceColor * &lt;em&gt;sfactor&lt;/em&gt;) + (destinationColor * &lt;em&gt;dfactor&lt;/em&gt;). The RBGA values are between 0 and 1.</source>
          <target state="translated">混合色の式は次のように記述できます：color（RGBA）=（sourceColor * &lt;em&gt;sfactor&lt;/em&gt;）+（destinationColor * &lt;em&gt;dfactor&lt;/em&gt;）。RBGA値は0から1の間です。</target>
        </trans-unit>
        <trans-unit id="6818150b763e509afd9bc5e39880ecc483e16e2e" translate="yes" xml:space="preserve">
          <source>The formulas for the blending factors can be described like this (all RGBA values are between 0 and 1):</source>
          <target state="translated">ブレンド係数の計算式は、このように記述することができます(RGBAの値はすべて0から1の間にあります)。</target>
        </trans-unit>
        <trans-unit id="e3e901979eacdd6ab73765b7b88f936e346f65f1" translate="yes" xml:space="preserve">
          <source>The forward properties represent the 3D coordinate position of the listener's forward direction (e.g. the direction they are facing in), while the up properties represent the 3D coordinate position of the top of the listener's head. These two together can nicely set the direction.</source>
          <target state="translated">前方のプロパティは、リスナーの前方方向(例えば、リスナーが向いている方向)の3D座標位置を表し、上方のプロパティは、リスナーの頭頂部の3D座標位置を表します。この2つを合わせることで、きれいに方向を設定することができます。</target>
        </trans-unit>
        <trans-unit id="041c138364aae62ecff69158e7c7a54a6fd35776" translate="yes" xml:space="preserve">
          <source>The four arguments work as follows.</source>
          <target state="translated">4つの引数は以下のように機能します。</target>
        </trans-unit>
        <trans-unit id="1011d851c082a9b956ab13e54bd720393d521e67" translate="yes" xml:space="preserve">
          <source>The fragment is not &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;percent-decoded&lt;/a&gt;. If the URL does not have a fragment identifier, this property contains an empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">フラグメントは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;パーセントデコードされ&lt;/a&gt;ません。URLにフラグメント識別子がない場合、このプロパティには空の文字列 &lt;code&gt;&quot;&quot;&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="e3af9acb9c95cf8e0f793580905b93e7a1b87001" translate="yes" xml:space="preserve">
          <source>The fragment shader</source>
          <target state="translated">フラグメントシェーダ</target>
        </trans-unit>
        <trans-unit id="3df0104722963f36d878a0873d227d82b7fdd249" translate="yes" xml:space="preserve">
          <source>The fragment shader likewise needs to be updated:</source>
          <target state="translated">フラグメントシェーダも同様に更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="64fa5fd9f42ec961467a9058b9d13d5c91b99add" translate="yes" xml:space="preserve">
          <source>The fragment shader now needs to be updated to take into account the lighting value computed by the vertex shader:</source>
          <target state="translated">フラグメントシェーダは、頂点シェーダによって計算された照明値を考慮して更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="5a612e7bbe8d0fe6988d26a61483b15a1bc0a8f2" translate="yes" xml:space="preserve">
          <source>The frame should subsequently be rendered using the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; and matrices provided by the last call to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GetFrameData&quot;&gt;&lt;code&gt;getFrameData()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フレームはその後、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GetFrameData&quot;&gt; &lt;code&gt;getFrameData()&lt;/code&gt; &lt;/a&gt;への最後の呼び出しによって提供された&lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; &lt;/a&gt;およびマトリックスを使用してレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="2b3d3dea05d6834ea613bf164db65c8fe6e7da20" translate="yes" xml:space="preserve">
          <source>The frequency (in &lt;a href=&quot;https://en.wikipedia.org/wiki/hertz&quot;&gt;hertz&lt;/a&gt;) of the periodic waveform. Its default is 440.</source>
          <target state="translated">周期的な波形の周波数（&lt;a href=&quot;https://en.wikipedia.org/wiki/hertz&quot;&gt;ヘルツ単位&lt;/a&gt;）。デフォルトは440です。</target>
        </trans-unit>
        <trans-unit id="d484ec59c9af026e80edb2fe0d23c7da19757ee1" translate="yes" xml:space="preserve">
          <source>The frequency with the maximal &lt;a href=&quot;http://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;group delay&lt;/a&gt;, that is, the frequency where the center of the phase transition occurs.</source>
          <target state="translated">最大&lt;a href=&quot;http://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;群遅延の&lt;/a&gt;ある周波数、つまり、相転移の中心が発生する周波数。</target>
        </trans-unit>
        <trans-unit id="774b22b0b621bb4340160d716ac0c32b1e939a89" translate="yes" xml:space="preserve">
          <source>The frequency with the maximal &lt;a href=&quot;https://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;group delay&lt;/a&gt;, that is, the frequency where the center of the phase transition occurs.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;群遅延&lt;/a&gt;が最大の周波数、つまり相転移の中心が発生する周波数。</target>
        </trans-unit>
        <trans-unit id="0fce4873ad033b593cf32077135a92543ed925f8" translate="yes" xml:space="preserve">
          <source>The full &lt;code&gt;RTCStatsReport&lt;/code&gt; interface is made up of a mapping of strings to subdictionaries which contain the statistics for each category, such as ICE candidate or media stream statistics. Each of these subdictionaries has in common the following values:</source>
          <target state="translated">完全な &lt;code&gt;RTCStatsReport&lt;/code&gt; インターフェイスは、ICE候補やメディアストリーム統計など、各カテゴリの統計を含むサブディクショナリへの文字列のマッピングで構成されています。これらの各サブディクショナリには、共通して次の値があります。</target>
        </trans-unit>
        <trans-unit id="ffa910ae7144ef34b200855cd6208b4a0b52608a" translate="yes" xml:space="preserve">
          <source>The function can be defined to take an &lt;code&gt;event&lt;/code&gt; parameter. &lt;a href=&quot;http://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;The return value is treated in a special way, described in the HTML specification&lt;/a&gt;.</source>
          <target state="translated">関数は、 &lt;code&gt;event&lt;/code&gt; パラメータを取るように定義できます。&lt;a href=&quot;http://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;戻り値は、HTML仕様で説明されている特別な方法で処理されます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82990abb038bdb45a1f9904cc6954390447c0f92" translate="yes" xml:space="preserve">
          <source>The function can be defined to take an &lt;code&gt;event&lt;/code&gt; parameter. &lt;a href=&quot;https://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;The return value is treated in a special way, described in the HTML specification&lt;/a&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;event&lt;/code&gt; パラメータを受け取るように定義できます。&lt;a href=&quot;https://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;戻り値は、HTML仕様で説明されている特別な方法で処理されます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99f1ad93ba06b0d818b5733ec2a57a841c9efb3c" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until Chrome 58.</source>
          <target state="translated">この関数は安全でないコンテキストでは存在しません。これはChrome 58まで施行されていませんでした。</target>
        </trans-unit>
        <trans-unit id="b834639c76d4175964d23be8eebc0c701bc271ae" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until Opera 45.</source>
          <target state="translated">この関数は安全でないコンテキストでは存在しません。これはOpera 45まで施行されていませんでした。</target>
        </trans-unit>
        <trans-unit id="7d289fbe4c0a20118120133713010873ee91a8b8" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until version 58.</source>
          <target state="translated">この関数は安全でないコンテキストでは存在しません。これはバージョン 58 まで施行されていませんでした。</target>
        </trans-unit>
        <trans-unit id="13779048c72a0341f84d6e3b9c7129317fe74d21" translate="yes" xml:space="preserve">
          <source>The function should return &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt;, which causes the TreeWalker to return the node, &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt;, which causes the TreeWalker to ignore the entire subtree, or &lt;code&gt;NodeFilter.FILTER_SKIP&lt;/code&gt;.</source>
          <target state="translated">この関数は返すべき &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt; TreeWalkerのノード、戻りさせ、 &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt; TreeWalkerの全体サブツリー、または無視させ、 &lt;code&gt;NodeFilter.FILTER_SKIP&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="9cc7d21d3594f11e9287cbb36ea5d03221e53307" translate="yes" xml:space="preserve">
          <source>The function that is repeatedly invoked (read/write). It is called with three arguments: &lt;em&gt;index&lt;/em&gt; (the iterative index of each invocation), &lt;em&gt;length&lt;/em&gt; (the number of total invocations assigned to the daemon - finite or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;) and backwards (a boolean expressing whether the &lt;em&gt;index&lt;/em&gt; is decreasing or not) &amp;ndash; see above. If the &lt;code&gt;myDaemon.task&lt;/code&gt; function returns a &lt;code&gt;false&lt;/code&gt; value the &lt;em&gt;daemon&lt;/em&gt; is paused.</source>
          <target state="translated">繰り返し呼び出される関数（読み取り/書き込み）。3つの引数で呼び出されます：&lt;em&gt;インデックス&lt;/em&gt;（各呼び出しの反復インデックス）、&lt;em&gt;長さ&lt;/em&gt;（デーモンに割り当てられた呼び出しの総数-有限または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;）および逆方向（&lt;em&gt;インデックス&lt;/em&gt;が減少しているかどうかを表すブール値）&amp;ndash;上記を参照。場合 &lt;code&gt;myDaemon.task&lt;/code&gt; の関数が返す &lt;code&gt;false&lt;/code&gt; 値を&lt;em&gt;デーモンが&lt;/em&gt;一時停止されています。</target>
        </trans-unit>
        <trans-unit id="ff919696a16860f3c446ef35472c58705a8c1296" translate="yes" xml:space="preserve">
          <source>The function that is repeatedly invoked . &lt;strong&gt;It is called with three parameters&lt;/strong&gt;: &lt;em&gt;index&lt;/em&gt; (the iterative index of each invocation), &lt;em&gt;length&lt;/em&gt; (the number of total invocations assigned to the &lt;em&gt;daemon&lt;/em&gt; - finite or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;) and &lt;em&gt;backwards&lt;/em&gt; (a boolean expressing whether the &lt;em&gt;index&lt;/em&gt; is increasing or decreasing). It is something like &lt;em&gt;callback&lt;/em&gt;.call(&lt;em&gt;thisObject&lt;/em&gt;, &lt;em&gt;index&lt;/em&gt;, &lt;em&gt;length&lt;/em&gt;, &lt;em&gt;backwards&lt;/em&gt;). &lt;strong&gt;If the callback function returns a &lt;code&gt;false&lt;/code&gt; value the &lt;em&gt;daemon&lt;/em&gt; is paused&lt;/strong&gt;.</source>
          <target state="translated">繰り返し呼び出される関数。&lt;strong&gt;これは、3つのパラメーターで呼び出されます&lt;/strong&gt;：&lt;em&gt;インデックス&lt;/em&gt;（各呼び出しの反復インデックス）、&lt;em&gt;長さ&lt;/em&gt;（&lt;em&gt;デーモンに&lt;/em&gt;割り当てられた呼び出しの合計数-有限または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;）および&lt;em&gt;逆方向&lt;/em&gt;（&lt;em&gt;インデックス&lt;/em&gt;が増加しているか減少しているかを表すブール値）。これは、&lt;em&gt;callback&lt;/em&gt; .call（&lt;em&gt;thisObject&lt;/em&gt;、&lt;em&gt;index&lt;/em&gt;、&lt;em&gt;length&lt;/em&gt;、&lt;em&gt;逆方向&lt;/em&gt;）のようなものです。&lt;strong&gt;コールバック関数が &lt;code&gt;false&lt;/code&gt; 値を返す場合、&lt;em&gt;デーモン&lt;/em&gt;は一時停止してい&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2c512c5c25a4008fb0fa7e237ea0d8bc60871432" translate="yes" xml:space="preserve">
          <source>The function that we will be using is part of the &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;utility functions&lt;/a&gt;. It takes an array of matrices and multiplies them together. In WebGL shader code, this is built into the language and the * operator can be used. Additionally this example uses a scale and translate function which return matrices as defined above.</source>
          <target state="translated">ここで使用する&lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;関数&lt;/a&gt;は、ユーティリティ関数の一部です。それは行列の配列を取り、それらを一緒に乗算します。WebGLシェーダーコードでは、これは言語に組み込まれており、*演算子を使用できます。さらに、この例では、上記で定義された行列を返すスケール関数と変換関数を使用しています。</target>
        </trans-unit>
        <trans-unit id="f8f3b51a9e8bb8d9b3e6e122bcfcfc0d2161b028" translate="yes" xml:space="preserve">
          <source>The function to be executed (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/function&quot;&gt;function&lt;/a&gt;).</source>
          <target state="translated">実行する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/function&quot;&gt;関数&lt;/a&gt;（function）。</target>
        </trans-unit>
        <trans-unit id="39c8e71128af91596336eb452e7286ea0d2aa576" translate="yes" xml:space="preserve">
          <source>The function to call when it's time to update your animation for the next repaint. The callback function is passed one single argument, a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; returned from &lt;a href=&quot;../performance/now&quot;&gt;&lt;code&gt;performance.now()&lt;/code&gt;&lt;/a&gt;, indicating the point in time when &lt;code&gt;requestAnimationFrame()&lt;/code&gt; starts to execute callback functions.</source>
          <target state="translated">次の再描画のためにアニメーションを更新するときに呼び出される関数。コールバック関数には、単一の引数、&lt;a href=&quot;../performance/now&quot;&gt; &lt;code&gt;performance.now()&lt;/code&gt; &lt;/a&gt;から返される&lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; &lt;/a&gt;が渡され、 &lt;code&gt;requestAnimationFrame()&lt;/code&gt; がコールバック関数の実行を開始する時点を示します。</target>
        </trans-unit>
        <trans-unit id="118ddaf0d7e0d038f313fb7b5e3733d8da360196" translate="yes" xml:space="preserve">
          <source>The function to execute for each element, taking three arguments:</source>
          <target state="translated">3つの引数を取り、各要素に対して実行する関数。</target>
        </trans-unit>
        <trans-unit id="4bc7abcba83af8b98f18914055591a42c5efab95" translate="yes" xml:space="preserve">
          <source>The function was called with an empty list of store names.</source>
          <target state="translated">この関数は、店舗名の空のリストで呼び出されました。</target>
        </trans-unit>
        <trans-unit id="1663bc9a623697e9b83a522640506562341c8556" translate="yes" xml:space="preserve">
          <source>The function we'll be using as our task handler&amp;mdash;that is, the function that will be used as the value of the task object's &lt;code&gt;handler&lt;/code&gt; property&amp;mdash;is &lt;code&gt;logTaskHandler&lt;/code&gt;(). It's a simple function that outputs a bunch of stuff to the log for each task. In your own application, you'd replace this code with whatever task it is you wish to perform during idle time. Just remember that anything you want to do that changes the DOM needs to be handled through &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タスクハンドラーとして使用する関数、つまりタスクオブジェクトの &lt;code&gt;handler&lt;/code&gt; プロパティの値として使用される関数は、 &lt;code&gt;logTaskHandler&lt;/code&gt; （）です。これは、各タスクのログに大量のデータを出力する単純な関数です。独自のアプリケーションでは、このコードをアイドル時間中に実行したいタスクに置き換えます。 DOMを変更するためにやりたいことはすべて、&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; で&lt;/a&gt;処理する必要があることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="018b1f6ee20d9b15c623644706ca5374bf085d12" translate="yes" xml:space="preserve">
          <source>The functions are used to log event activity to the application window, to support debugging and learning about the event flow.</source>
          <target state="translated">この関数は、イベントのアクティビティをアプリケーションウィンドウに記録するために使用され、デバッグやイベントフローの学習をサポートします。</target>
        </trans-unit>
        <trans-unit id="17b2e9fd5d662441712345f7eb618e097ccd34a4" translate="yes" xml:space="preserve">
          <source>The functions invoked inside the constructor simply return the required object parameters:</source>
          <target state="translated">コンストラクタ内で呼び出された関数は、必要なオブジェクトのパラメータを返すだけです。</target>
        </trans-unit>
        <trans-unit id="20d85c0c3b2679dda5186febb3376fe7275c45ee" translate="yes" xml:space="preserve">
          <source>The gain is a unitless value, changing with time, that is multiplied to each corresponding sample of all input channels. If modified, the new gain is instantly applied, causing unaesthetic 'clicks' in the resulting audio. To prevent this from happening, never change the value directly but use the exponential interpolation methods on the &lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">ゲインは単位のない値で、時間とともに変化し、すべての入力チャネルの対応する各サンプルに乗算されます。変更すると、新しいゲインが即座に適用され、結果のオーディオに美的でない「クリック」が発生します。これが起こらないようにするには、値を直接変更するのではなく、&lt;a href=&quot;audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt;インターフェースで指数補間法を使用してください。</target>
        </trans-unit>
        <trans-unit id="eaabf74fc177ea1394fb602c44a4fe5fd06cc393" translate="yes" xml:space="preserve">
          <source>The gathering state indicates whether or not the ICE agent has begun gathering candidates, and if so, whether or not gathering has finished. Its possible values are:</source>
          <target state="translated">収集状態はICEエージェントが候補者の収集を開始したかどうかを示し、開始した場合は収集が終了したかどうかを示す。値は以下の通りである。</target>
        </trans-unit>
        <trans-unit id="785a9fed1f671752be81692bc482955696c534a2" translate="yes" xml:space="preserve">
          <source>The generated object is 100 pixels wide and 50 pixels tall, making 5,000 pixels in all. Each pixel within an &lt;code&gt;ImageData&lt;/code&gt; object consists of four array values, so the object's &lt;a href=&quot;../imagedata/data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; property has a length of 4 &amp;times; 5,000, or 20,000.</source>
          <target state="translated">生成されたオブジェクトは幅100ピクセル、高さ50ピクセルで、全体で5,000ピクセルになります。 &lt;code&gt;ImageData&lt;/code&gt; オブジェクト内の各ピクセルは4つの配列値で構成されているため、オブジェクトの&lt;a href=&quot;../imagedata/data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;プロパティの長さは4&amp;times;5,000、つまり20,000です。</target>
        </trans-unit>
        <trans-unit id="67bea8f0b32d9137a521d9e2514558f1502e539a" translate="yes" xml:space="preserve">
          <source>The generic syntax skeleton looks like this:</source>
          <target state="translated">一般的な構文のスケルトンは次のようになります。</target>
        </trans-unit>
        <trans-unit id="0aeecffd6a3d66a9905b2dbf4cd36162a802c40f" translate="yes" xml:space="preserve">
          <source>The geolocation object</source>
          <target state="translated">ジオロケーションオブジェクト</target>
        </trans-unit>
        <trans-unit id="7b75b60fdb1488ade59db9302acd940a599daa7e" translate="yes" xml:space="preserve">
          <source>The given URL does not match another URL. (Legacy code value: &lt;code&gt;21&lt;/code&gt; and legacy constant name: &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt;)</source>
          <target state="translated">指定されたURLは別のURLと一致しません。（レガシーコード値： &lt;code&gt;21&lt;/code&gt; およびレガシー定数名： &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="628bfb259be7a4fa1db2d527e3b85167e6cdad06" translate="yes" xml:space="preserve">
          <source>The global limit is a &quot;soft limit&quot; since there's a chance that some space will be freed and the operation can continue.</source>
          <target state="translated">グローバルリミットは、ある程度のスペースが解放されて動作を継続できる可能性があるので、「ソフトリミット」となります。</target>
        </trans-unit>
        <trans-unit id="36c3c80fb28b9c6e79d4ea20192420f8464a8db0" translate="yes" xml:space="preserve">
          <source>The global scope of workers. This objects defines &lt;a href=&quot;#workerscope&quot;&gt;worker-specific functions&lt;/a&gt;.</source>
          <target state="translated">労働者のグローバルスコープ。このオブジェクトは、&lt;a href=&quot;#workerscope&quot;&gt;ワーカー固有の機能を&lt;/a&gt;定義します。</target>
        </trans-unit>
        <trans-unit id="7c077e2bc8896d8e1a3ac81c57a3fa9085b0fa6f" translate="yes" xml:space="preserve">
          <source>The grammar</source>
          <target state="translated">文法は</target>
        </trans-unit>
        <trans-unit id="a8587c7b422a4ad7c17d1f12c5019e4a8e5d5ad9" translate="yes" xml:space="preserve">
          <source>The grammar format used is &lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt; (&lt;strong&gt;JSGF&lt;/strong&gt;) &amp;mdash; you can find a lot more about it at the previous link to its spec. However, for now let's just run through it quickly:</source>
          <target state="translated">使用されている文法フォーマットは&lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt;（&lt;strong&gt;JSGF&lt;/strong&gt;）です。これについては、その仕様への以前のリンクでさらに詳しく説明しています。ただし、今のところ、簡単に見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="37ebd6d4ec595cf505d9c85f1c2e5509fced29a6" translate="yes" xml:space="preserve">
          <source>The grammar format used is &lt;a href=&quot;https://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt; (&lt;strong&gt;JSGF&lt;/strong&gt;) &amp;mdash; you can find a lot more about it at the previous link to its spec. However, for now let's just run through it quickly:</source>
          <target state="translated">使用されている文法形式は&lt;a href=&quot;https://www.w3.org/TR/jsgf/&quot;&gt;JSpeechGrammar Format&lt;/a&gt;（&lt;strong&gt;JSGF&lt;/strong&gt;）です。仕様への前のリンクで詳細を確認できます。ただし、とりあえず、簡単に実行してみましょう。</target>
        </trans-unit>
        <trans-unit id="ff7126ef3f8a2e144f217353ede8f0f395dc857c" translate="yes" xml:space="preserve">
          <source>The grid</source>
          <target state="translated">グリッド</target>
        </trans-unit>
        <trans-unit id="b94977a7bcdf0de930dedcd030e9115ea68daa7b" translate="yes" xml:space="preserve">
          <source>The group ID is not usable across multiple browsing sessions. However, it can be used to ensure that audio input and output are both being performed on the same headset, for example, or to ensure that the built-in camera and microphone on a phone are being used for video conferencing purposes.</source>
          <target state="translated">グループ ID は、複数のブラウジングセッションにまたがって使用することはできません。しかし、例えば、音声入力と音声出力の両方が同じヘッドセットで行われていることを確認したり、電話の内蔵カメラとマイクがビデオ会議の目的で使用されていることを確認するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="49f2ad6a68766544272001845469929b3d0171ee" translate="yes" xml:space="preserve">
          <source>The group limit is also called the &quot;hard limit&quot;: it doesn't trigger origin eviction.</source>
          <target state="translated">グループリミットは「ハードリミット」とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="0df9f5bce3448710ec4c641e898d60e69be1ba01" translate="yes" xml:space="preserve">
          <source>The gyroscope is typically read in the &lt;a href=&quot;../sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">ジャイロスコープは通常、&lt;a href=&quot;../sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt;イベントコールバックで読み取られます。以下の例では、これは1秒に60回発生します。</target>
        </trans-unit>
        <trans-unit id="882926dabaed7a6bcbafe8d08a874c87f2d765cd" translate="yes" xml:space="preserve">
          <source>The gyroscope is typically read in the &lt;a href=&quot;sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">ジャイロスコープは通常、&lt;a href=&quot;sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt;イベントコールバックで読み取られます。以下の例では、これは1秒に60回発生します。</target>
        </trans-unit>
        <trans-unit id="cf1e30de157aad7c9c8ca63b30b4c4456e03753a" translate="yes" xml:space="preserve">
          <source>The handle returned by the &lt;a href=&quot;requestanimationframe&quot;&gt;&lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; call that you want to unregister.</source>
          <target state="translated">登録を解除する&lt;a href=&quot;requestanimationframe&quot;&gt; &lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;呼び出しによって返されたハンドル。</target>
        </trans-unit>
        <trans-unit id="6a6911c94143ab79b4594c2e64266e7249222c2f" translate="yes" xml:space="preserve">
          <source>The handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event is free to process the drag data in an application specific way. Typically, an application will use the &lt;a href=&quot;datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; method to retrieve drag items and process them accordingly. Additionally, application semantics may differ depending on the value of the &lt;a href=&quot;datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; and/or the state of modifier keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; イベントのハンドラーは、アプリケーション固有の方法でドラッグデータを自由に処理できます。通常、アプリケーションは&lt;a href=&quot;datatransfer/getdata&quot;&gt; &lt;code&gt;getData()&lt;/code&gt; &lt;/a&gt;メソッドを使用してドラッグアイテムを取得し、それに応じて処理します。さらに、アプリケーションのセマンティクスは、&lt;a href=&quot;datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;の値や修飾キーの状態によって異なります。</target>
        </trans-unit>
        <trans-unit id="028e597e68ef221f6fab8aec24401ac514256c42" translate="yes" xml:space="preserve">
          <source>The handshake is the &quot;Web&quot; in WebSockets. It's the bridge from HTTP to WS. In the handshake, details of the connection are negotiated, and either party can back out before completion if the terms are unfavorable. The server must be careful to understand everything the client asks for, otherwise security issues will be introduced.</source>
          <target state="translated">ハンドシェイクはWebSocketsの「Web」です。HTTPからWSへの橋渡し役です。ハンドシェイクでは、接続の詳細がネゴシエートされ、条件が悪ければ、どちらかの当事者が完了する前にバックアウトすることができます。サーバは、クライアントが要求することをすべて理解していないと、セキュリティ上の問題が発生します。</target>
        </trans-unit>
        <trans-unit id="acb45443dc0323133b5342c3b627edc96183ba35" translate="yes" xml:space="preserve">
          <source>The hashchange event</source>
          <target state="translated">ハッシュチェンジイベント</target>
        </trans-unit>
        <trans-unit id="8fef2e5095e098313bf831bb7ab07cc47c996341" translate="yes" xml:space="preserve">
          <source>The header</source>
          <target state="translated">ヘッダ</target>
        </trans-unit>
        <trans-unit id="8fc9ed6d785e10be433289507738b0c8578d5508" translate="yes" xml:space="preserve">
          <source>The header cell applies to all cells in the current column group that do not already have a scope applied to them. This value is only allowed if the cell is in a column group.</source>
          <target state="translated">ヘッダセルは、現在の列グループ内のすべてのセルに適用され、スコープがまだ適用されていないセルに適用されます。この値は、そのセルがカラムグループ内にある場合にのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="cb07d9fb73079b2efbc4310a05e51e58116d85c3" translate="yes" xml:space="preserve">
          <source>The header cell applies to all cells in the current row group that do not already have a scope applied to them. This value is only allowed if the cell is in a row group.</source>
          <target state="translated">ヘッダセルは、現在の行グループ内のすべてのセルに適用され、スコープがまだ適用されていないセルに適用されます。この値は、そのセルが行グループ内にある場合にのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="5cf0c4b4afe871220746a968aa309813a16018ab" translate="yes" xml:space="preserve">
          <source>The header cell applies to the following cells in the same column (or columns, if &lt;code&gt;colspan&lt;/code&gt; is used as well), until either the end of the column or another &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; in the column establishes a new scope.</source>
          <target state="translated">ヘッダーセルは、列の末尾または列の別の &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; が新しいスコープを確立するまで、同じ列（または &lt;code&gt;colspan&lt;/code&gt; が使用されている場合は列）の次のセルに適用されます。</target>
        </trans-unit>
        <trans-unit id="ec11a0b2eb6ccf34714b1e6169b4ff4756556640" translate="yes" xml:space="preserve">
          <source>The header cell applies to the following cells in the same row (or rows, if &lt;code&gt;rowspan&lt;/code&gt; is used as well), until either the end of the row or another &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; in the same row establishes a new scope.</source>
          <target state="translated">ヘッダーセルは、行の終わりまたは同じ行の別の &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; が新しいスコープを確立するまで、同じ行（または &lt;code&gt;rowspan&lt;/code&gt; が使用されている場合は行）の次のセルに適用されます。</target>
        </trans-unit>
        <trans-unit id="21bc35e4e8cd01a607804d0ab8a46f86c9af6f92" translate="yes" xml:space="preserve">
          <source>The header cell has no predefined scope; the user agent will establish the scope based on contextual clues.</source>
          <target state="translated">ヘッダーセルには事前に定義されたスコープがありません。ユーザーエージェントは、コンテキストの手がかりに基づいてスコープを確立します。</target>
        </trans-unit>
        <trans-unit id="677f5ec4023059fe1cfc57a225bb79b0add95606" translate="yes" xml:space="preserve">
          <source>The header is fairly simple, since for this example all it contains is some text. Its style looks like this:</source>
          <target state="translated">この例では、ヘッダーにはテキストが含まれているだけなので、ヘッダーはかなりシンプルです。スタイルは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="070f1e647da215ad888d0969167e0dcbf3485a21" translate="yes" xml:space="preserve">
          <source>The height (magnitude on the Y axis), in CSS pixels, of the contact geometry of the pointer.</source>
          <target state="translated">ポインタの接触ジオメトリの高さ(Y軸上の大きさ)をCSSピクセルで指定します。</target>
        </trans-unit>
        <trans-unit id="e39ca26ed973f60fcff1f9e24234b9045aee728c" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;DOMRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRect&lt;/code&gt; の高さ。</target>
        </trans-unit>
        <trans-unit id="34f838a2061b900af071c9a9c5fa3d0a55bdb78d" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;DOMRectReadOnly&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRectReadOnly&lt;/code&gt; の高さ。</target>
        </trans-unit>
        <trans-unit id="fb7b31ed73aeb5d6b461284454c9ec84b76c6859" translate="yes" xml:space="preserve">
          <source>The height of the bounds.</source>
          <target state="translated">境界線の高さ。</target>
        </trans-unit>
        <trans-unit id="1ce51c099997a2e659e72e34569a70ace26de77f" translate="yes" xml:space="preserve">
          <source>The height of the event's contact area (in CSS pixels).</source>
          <target state="translated">イベントの接触領域の高さ(CSSピクセル)。</target>
        </trans-unit>
        <trans-unit id="23019d9c8925de1387057b03ae5baf8ae91adfad" translate="yes" xml:space="preserve">
          <source>The height of the image (i.e., the value for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; attribute).</source>
          <target state="translated">画像の高さ（つまり、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; 属性の値）。</target>
        </trans-unit>
        <trans-unit id="9900bf4be748cebf8b3eed614db614bccb7cdd5e" translate="yes" xml:space="preserve">
          <source>The height of the image in pixels.</source>
          <target state="translated">画像の高さをピクセル単位で表示します。</target>
        </trans-unit>
        <trans-unit id="546400b2a914b39dbbc597d9bd690245f06c22c7" translate="yes" xml:space="preserve">
          <source>The height of the offscreen canvas.</source>
          <target state="translated">画面外のキャンバスの高さ。</target>
        </trans-unit>
        <trans-unit id="2302805078772e9435c24e06666e909f706716c3" translate="yes" xml:space="preserve">
          <source>The height of the rectangle from which the &lt;code&gt;ImageBitmap&lt;/code&gt; will be extracted. This value can be negative.</source>
          <target state="translated">&lt;code&gt;ImageBitmap&lt;/code&gt; が抽出される長方形の高さ。この値は負になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="fc436760d672f74e02a879dcb3da36a5090ce866" translate="yes" xml:space="preserve">
          <source>The height of the rectangle from which the &lt;code&gt;ImageData&lt;/code&gt; will be extracted. Positive values are down, and negative are up.</source>
          <target state="translated">&lt;code&gt;ImageData&lt;/code&gt; が抽出される長方形の高さ。正の値は下がり、負の値は上がります。</target>
        </trans-unit>
        <trans-unit id="7a63ab000024777ce854d706337a587e757dfa56" translate="yes" xml:space="preserve">
          <source>The height of the rule.</source>
          <target state="translated">ルールの高さ。</target>
        </trans-unit>
        <trans-unit id="b6139595ac3e62eb729d43ca2875adf7e1fee739" translate="yes" xml:space="preserve">
          <source>The height of the sub-rectangle of the source &lt;code&gt;image&lt;/code&gt; to draw into the destination context.</source>
          <target state="translated">宛先コンテキストに描画するソース &lt;code&gt;image&lt;/code&gt; のサブ長方形の高さ。</target>
        </trans-unit>
        <trans-unit id="e2c78b354aa26985893add977f22ad35048def0e" translate="yes" xml:space="preserve">
          <source>The height to draw the &lt;code&gt;image&lt;/code&gt; in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</source>
          <target state="translated">宛先キャンバスに &lt;code&gt;image&lt;/code&gt; を描画する高さ。これにより、描画されたイメージのスケーリングが可能になります。指定しない場合、描画時に画像の高さが調整されません。</target>
        </trans-unit>
        <trans-unit id="42b9482f137b42f6d2c2652741f341496a9b4ed5" translate="yes" xml:space="preserve">
          <source>The height to give the new &lt;code&gt;ImageData&lt;/code&gt; object. A negative value flips the rectangle around the horizontal axis.</source>
          <target state="translated">新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトに与える高さ。負の値は、水平軸を中心に長方形を反転します。</target>
        </trans-unit>
        <trans-unit id="5492b1fbeab33f939d26d4ab7f3557d9f700297f" translate="yes" xml:space="preserve">
          <source>The higher &lt;code&gt;firCount&lt;/code&gt; is, the more often frames were dropped, which may be an indication that the media's bit rate is too high for the available bandwidth, or that the receiving device is overburdened and is therefore unable to process the incoming data.</source>
          <target state="translated">&lt;code&gt;firCount&lt;/code&gt; が高いほど、フレームがドロップされる頻度が高くなります。これは、メディアのビットレートが使用可能な帯域幅に対して高すぎるか、受信側のデバイスが過負荷になっているために着信データを処理できないことを示している可能性があります。</target>
        </trans-unit>
        <trans-unit id="f88e0162e2a2462c00ce9015a13e8b520b542a07" translate="yes" xml:space="preserve">
          <source>The history of VR</source>
          <target state="translated">VRの歴史</target>
        </trans-unit>
        <trans-unit id="5bd28d46e0ce015344fed89ff0108f67372f94a0" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate of a point, relative to the left edge of the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;viewport&lt;/a&gt;.</source>
          <target state="translated">現在の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;ビューポートの&lt;/a&gt;左端を基準とした、ポイントの水平座標。</target>
        </trans-unit>
        <trans-unit id="6aaedd7be22a6bd8de7d1ac18c3d2120e179a4ed" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate of a point.</source>
          <target state="translated">点の水平座標。</target>
        </trans-unit>
        <trans-unit id="8a5adefafdc8be83181d5593e5a6132f1fe3fe1b" translate="yes" xml:space="preserve">
          <source>The human-readable description of the connected database.</source>
          <target state="translated">接続されたデータベースの人間が読める記述。</target>
        </trans-unit>
        <trans-unit id="65a2c610333142a8ac66463288fd361b6973e7cf" translate="yes" xml:space="preserve">
          <source>The idea of notification tags is that more than one notification can share the same tag, linking them together. One notification can then be programmatically replaced with another to avoid the users' screen being filled up with a huge number of similar notifications.</source>
          <target state="translated">通知タグのアイデアは、複数の通知が同じタグを共有し、それらを一緒にリンクすることができます。1つの通知は、ユーザーの画面が膨大な数の類似した通知で埋め尽くされるのを避けるために、プログラム的に別のものと置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="6d3310c1441dcc638e3bc51207608ab6fbe78712" translate="yes" xml:space="preserve">
          <source>The identification tag of the media stream with which the candidate is associated, or &lt;code&gt;null&lt;/code&gt; if there is no associated media stream. The default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">候補が関連付けられているメディアストリームの識別タグ。関連付けられているメディアストリームがない場合は &lt;code&gt;null&lt;/code&gt; 。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3e5030f2cabe76d4a4a1d8e8d27b94ee979f5e73" translate="yes" xml:space="preserve">
          <source>The identifier is a name that identifies the cue. It can be used to reference the cue from a script. It must not contain a newline and cannot contain the string &quot;&lt;code&gt;--&amp;gt;&quot;&lt;/code&gt;. It must end with a single newline. They do not have to be unique, although it is common to number them (e.g. 1, 2, 3, ...).</source>
          <target state="translated">識別子は、キューを識別する名前です。スクリプトからキューを参照するために使用できます。改行を含めることはできません。また、文字列 &quot; &lt;code&gt;--&amp;gt;&quot;&lt;/code&gt; 含めることはできません。単一の改行で終了する必要があります。番号を付けることは一般的ですが（1、2、3など）、一意である必要はありません。</target>
        </trans-unit>
        <trans-unit id="abfd34fa21b846f4eec39755053ebd711ae26a9f" translate="yes" xml:space="preserve">
          <source>The identifier of the repeated action you want to cancel. This ID was returned by the corresponding call to &lt;code&gt;setInterval()&lt;/code&gt;.</source>
          <target state="translated">キャンセルする繰り返しアクションの識別子。このIDは、対応する &lt;code&gt;setInterval()&lt;/code&gt; の呼び出しによって返されました。</target>
        </trans-unit>
        <trans-unit id="76a322d4de247e544cb9e52b7a9b0cafb87e2323" translate="yes" xml:space="preserve">
          <source>The identifier of the timeout you want to cancel. This ID was returned by the corresponding call to &lt;code&gt;setTimeout()&lt;/code&gt;.</source>
          <target state="translated">キャンセルするタイムアウトの識別子。このIDは、 &lt;code&gt;setTimeout()&lt;/code&gt; への対応する呼び出しによって返されました。</target>
        </trans-unit>
        <trans-unit id="ef36f77da7251a3dee31b989a9d6c62f25e71ebc" translate="yes" xml:space="preserve">
          <source>The identifier to check, i.e. the name of the cookie (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;)</source>
          <target state="translated">チェックする識別子、つまりクッキーの名前（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;文字列&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="9021370e68fe07a54e9f9e4d4c20d66c9630c558" translate="yes" xml:space="preserve">
          <source>The identity provider wasn't able to provide an identity assertion.</source>
          <target state="translated">ID プロバイダは ID アサーションを提供できなかった。</target>
        </trans-unit>
        <trans-unit id="2ccf402b00c180cce436af6f758ac17c8e150db8" translate="yes" xml:space="preserve">
          <source>The image has no image data.</source>
          <target state="translated">画像には画像データがありません。</target>
        </trans-unit>
        <trans-unit id="0e06aae1f6a88dfa00da74e1b74dbc26f3890839" translate="yes" xml:space="preserve">
          <source>The image is not loaded yet. Use &lt;code&gt;.complete === true&lt;/code&gt; and &lt;code&gt;.onload&lt;/code&gt; to determine when it is ready.</source>
          <target state="translated">画像はまだ読み込まれていません。使用は &lt;code&gt;.complete === true&lt;/code&gt; と &lt;code&gt;.onload&lt;/code&gt; それは準備ができているときを決定します。</target>
        </trans-unit>
        <trans-unit id="f7d5758180a3d86c68a04955618213723b58b935" translate="yes" xml:space="preserve">
          <source>The image will typically be an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt; element but it can also be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; or any other image element. The method's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinates are offsets where the image should appear relative to the mouse pointer.</source>
          <target state="translated">画像は通常&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image&quot;&gt; &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; &lt;/a&gt;要素になりますが、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;やその他の画像要素にすることもできます。メソッドの &lt;code&gt;x&lt;/code&gt; 座標と &lt;code&gt;y&lt;/code&gt; 座標は、マウスポインターに対して画像が表示される位置のオフセットです。</target>
        </trans-unit>
        <trans-unit id="47c1b19dc684abb15f884cd0bba62b2d663ffb2b" translate="yes" xml:space="preserve">
          <source>The implementation may have stripped out insignificant whitespace while parsing the selector. If set to a selector string which cannot be parsed, a SyntaxError is thrown.</source>
          <target state="translated">実装では、セレクタの解析中に重要でない空白が削除されている可能性があります。解析できないセレクタ文字列に設定すると、SyntaxError がスローされます。</target>
        </trans-unit>
        <trans-unit id="7f0011b9907260bfee190baa50c6baacc569b8f6" translate="yes" xml:space="preserve">
          <source>The implementation of our shim for &lt;a href=&quot;window/cancelidlecallback&quot;&gt;&lt;code&gt;cancelIdleCallback()&lt;/code&gt;&lt;/a&gt; is much simpler:</source>
          <target state="translated">&lt;a href=&quot;window/cancelidlecallback&quot;&gt; &lt;code&gt;cancelIdleCallback()&lt;/code&gt; の&lt;/a&gt;シムの実装は、はるかに簡単です。</target>
        </trans-unit>
        <trans-unit id="41c1664c417a216c50b1ba1a8b515b50603428ab" translate="yes" xml:space="preserve">
          <source>The implementation of the code needed to interface with a particular payment method provider in order to process payments.</source>
          <target state="translated">コードの実装は、支払いを処理するために、特定の支払い方法のプロバイダとインターフェースする必要がありました。</target>
        </trans-unit>
        <trans-unit id="f7680068b3f6bac7238e497f47fcbff52227c588" translate="yes" xml:space="preserve">
          <source>The implementation status of pointer events in browsers is &lt;a href=&quot;http://caniuse.com/#search=pointer&quot;&gt;relatively low&lt;/a&gt; with IE11 and Edge having complete implementations. Firefox's implementation has been withdrawn because of &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;bug 1166347&lt;/a&gt;.</source>
          <target state="translated">ブラウザーでのポインターイベントの実装ステータスは&lt;a href=&quot;http://caniuse.com/#search=pointer&quot;&gt;比較的低く&lt;/a&gt;、IE11とEdgeは完全な実装を備えています。&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;バグ1166347の&lt;/a&gt;ため、Firefoxの実装は中止されました。</target>
        </trans-unit>
        <trans-unit id="0ecb40b7dd68c15098f2eefb05d6952cc58fd0de" translate="yes" xml:space="preserve">
          <source>The implementation status of pointer events in browsers is &lt;a href=&quot;https://caniuse.com/#search=pointer&quot;&gt;relatively low&lt;/a&gt; with IE11 and Edge having complete implementations. Firefox's implementation has been withdrawn because of &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;bug 1166347&lt;/a&gt;.</source>
          <target state="translated">ブラウザでのポインタイベントの実装ステータスは&lt;a href=&quot;https://caniuse.com/#search=pointer&quot;&gt;比較的低く&lt;/a&gt;、IE11とEdgeは完全に実装されています。Firefoxの実装は、&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;バグ1166347の&lt;/a&gt;ために撤回されました。</target>
        </trans-unit>
        <trans-unit id="46a3565092409d0134c9059a403ebe25cd44703a" translate="yes" xml:space="preserve">
          <source>The imported node is not yet included in the document tree. To include it, you need to call an insertion method such as &lt;a href=&quot;../node/appendchild&quot;&gt;&lt;code&gt;appendChild()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../node/insertbefore&quot;&gt;&lt;code&gt;insertBefore()&lt;/code&gt;&lt;/a&gt; with a node that &lt;em&gt;is&lt;/em&gt; currently in the document tree.</source>
          <target state="translated">インポートされたノードはまだドキュメントツリーに含まれていません。それを含めるには、次のような挿入方法を呼び出す必要があります&lt;a href=&quot;../node/appendchild&quot;&gt; &lt;code&gt;appendChild()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../node/insertbefore&quot;&gt; &lt;code&gt;insertBefore()&lt;/code&gt; &lt;/a&gt;ノードで&lt;em&gt;ある&lt;/em&gt;ドキュメントツリーに現在。</target>
        </trans-unit>
        <trans-unit id="61647f41eded3642881c1b974f211c024664fd3c" translate="yes" xml:space="preserve">
          <source>The incoming stream is attached to the &lt;code&gt;&quot;received_video&quot;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and the &quot;Hang Up&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; element is enabled so the user can hang up the call.</source>
          <target state="translated">着信ストリームが &lt;code&gt;&quot;received_video&quot;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素に添付され、「 Hang Up」&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;要素が有効になっているため、ユーザーは通話を切ることができます。</target>
        </trans-unit>
        <trans-unit id="c8d2af1c11e53111323437c66cd6ebf95226234c" translate="yes" xml:space="preserve">
          <source>The index is a persistent key-value storage where the value part of its records is the key part of a record in the referenced object store. The records in an index are automatically populated whenever records in the referenced object store are inserted, updated, or deleted. Each record in an index can point to only one record in its referenced object store, but several indexes can reference the same object store. When the object store changes, all indexes that refers to the object store are automatically updated.</source>
          <target state="translated">インデックスは、そのレコードの値の部分が、参照されているオブジェクト・ストアのレコードのキーの部分である永続的なキー-値ストレージです。インデックス内のレコードは、参照されているオブジェクト・ストア内のレコードが挿入、更新、削除されるたびに自動的に生成されます。インデックス内の各レコードは、その参照されているオブジェクトストア内の1つのレコードのみを指すことができますが、複数のインデックスが同じオブジェクトストアを参照することができます。オブジェクトストアが変更されると、そのオブジェクトストアを参照しているすべてのインデックスが自動的に更新されます。</target>
        </trans-unit>
        <trans-unit id="5caf3eae625b862e9744df6202e03dcfa974da91" translate="yes" xml:space="preserve">
          <source>The index is not in the allowed range. For example, this can be thrown by the &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object. (Legacy code value: &lt;code&gt;1&lt;/code&gt; and legacy constant name: &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt;)</source>
          <target state="translated">インデックスは許可された範囲内にありません。たとえば、これは&lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;オブジェクトによってスローされます。（レガシーコード値： &lt;code&gt;1&lt;/code&gt; およびレガシー定数名： &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ecc7fb0e3966e29d229b56d8007d3ec84e459e4c" translate="yes" xml:space="preserve">
          <source>The index of one of the interfaces supported by the device. Interfaces are device-specific.</source>
          <target state="translated">デバイスがサポートするインターフェースの1つのインデックス。インターフェースはデバイス固有のものです。</target>
        </trans-unit>
        <trans-unit id="b67062da059f5db8635cd18c0d9e2971deb6f05c" translate="yes" xml:space="preserve">
          <source>The index of the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object to retrieve. The index is a number in the range of 0 to one less than the length of the &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">取得する&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトのインデックス。インデックスは、0から&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt;長さより1小さい範囲の数値です。</target>
        </trans-unit>
        <trans-unit id="7bf862af2bbac6295dbdd6c94670c47269d08e98" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the NodeList.</source>
          <target state="translated">NodeList で処理されている現在の要素のインデックス。</target>
        </trans-unit>
        <trans-unit id="cc1ff8860b10df902ebff81881a58b531468f649" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array.</source>
          <target state="translated">配列内で処理されている現在の要素のインデックス.</target>
        </trans-unit>
        <trans-unit id="b83dc200bf061d713d7d8b647e7347cc792a810c" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed.</source>
          <target state="translated">処理されている現在の要素のインデックス。</target>
        </trans-unit>
        <trans-unit id="ab857101f2b25c7f314198c13aafd59e6c6393d3" translate="yes" xml:space="preserve">
          <source>The index of the currently selected track, if any, or &lt;code&gt;&amp;minus;1&lt;/code&gt; otherwise. .</source>
          <target state="translated">現在選択されているトラックがある場合はそのインデックス、そうでない場合は &lt;code&gt;&amp;minus;1&lt;/code&gt; 。。</target>
        </trans-unit>
        <trans-unit id="66059b748974278daf492b3a6150404e9c015c3b" translate="yes" xml:space="preserve">
          <source>The index position of the &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; object you want to return.</source>
          <target state="translated">返す&lt;a href=&quot;../sourcebuffer&quot;&gt; &lt;code&gt;SourceBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトのインデックス位置。</target>
        </trans-unit>
        <trans-unit id="91de6b281bf82a8409c27eac6824e59cd36e2e76" translate="yes" xml:space="preserve">
          <source>The index position of the &lt;a href=&quot;../trackdefault&quot;&gt;&lt;code&gt;TrackDefault&lt;/code&gt;&lt;/a&gt; object you want to return.</source>
          <target state="translated">&lt;a href=&quot;../trackdefault&quot;&gt; &lt;code&gt;TrackDefault&lt;/code&gt; &lt;/a&gt;するTrackDefaultオブジェクトのインデックス位置。</target>
        </trans-unit>
        <trans-unit id="d5ec857e15b7ca94530a52d181920354c38b8c9a" translate="yes" xml:space="preserve">
          <source>The index, or its object store, has been deleted; or the current transaction is not an upgrade transaction. You can only rename indexes during upgrade transactions; that is, when the mode is &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt;.</source>
          <target state="translated">インデックスまたはそのオブジェクトストアが削除されました。または、現在のトランザクションはアップグレードトランザクションではありません。インデックスの名前を変更できるのは、アップグレードトランザクション中のみです。つまり、モードが &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt; の場合です。</target>
        </trans-unit>
        <trans-unit id="b2e60486c580d0a0bb60584736ac5bf86565a28c" translate="yes" xml:space="preserve">
          <source>The information is accessed through the &lt;code&gt;&lt;strong&gt;mediaCapabilities&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">情報には、&lt;a href=&quot;navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt;インターフェースの &lt;code&gt;&lt;strong&gt;mediaCapabilities&lt;/strong&gt;&lt;/code&gt; プロパティを介してアクセスします。</target>
        </trans-unit>
        <trans-unit id="69293766aa78b7800b75687b2f6f7b0b2a2a9c12" translate="yes" xml:space="preserve">
          <source>The information provided is based on the last ten seconds of media received.</source>
          <target state="translated">提供される情報は、受信したメディアの最後の10秒に基づいています。</target>
        </trans-unit>
        <trans-unit id="02ce20c8ea65e30641ca7f36e374b0dea6906590" translate="yes" xml:space="preserve">
          <source>The information we need to exchange is the Offer and Answer which just contains the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; mentioned below.</source>
          <target state="translated">交換する必要がある情報は、オファーとアンサーです。これには、下記の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt;のみが含まれています。</target>
        </trans-unit>
        <trans-unit id="9ad1ac79a38eff40c368d0d2da3eb4074d7fc087" translate="yes" xml:space="preserve">
          <source>The initTimeEvent method is used to initialize the value of a TimeEvent created through the DocumentEvent interface. This method may only be called before the TimeEvent has been dispatched via the dispatchEvent method, though it may be called multiple times during that phase if necessary.</source>
          <target state="translated">initTimeEvent メソッドは、DocumentEvent インターフェースを通して作成された TimeEvent の値を初期化するために使用されます。このメソッドは、TimeEvent が dispatchEvent メソッドを介してディスパッチされる前にのみ呼び出すことができますが、必要に応じてそのフェーズの間に複数回呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="2c435ff3251bf15470a0a76bcc9fd6141fb6f630" translate="yes" xml:space="preserve">
          <source>The initial definition of the API of WebRTC.</source>
          <target state="translated">WebRTCのAPIの初期定義。</target>
        </trans-unit>
        <trans-unit id="8d02431012098639b8c2598302c6373f95779f46" translate="yes" xml:space="preserve">
          <source>The initial definition of the object conveying the stream of media content.</source>
          <target state="translated">メディアコンテンツのストリームを伝えるオブジェクトの初期定義。</target>
        </trans-unit>
        <trans-unit id="4ea3961ad5d4b44133d07b3a491c8034f4eb66d1" translate="yes" xml:space="preserve">
          <source>The initial definition on how to obtain stream of content from DOM Elements</source>
          <target state="translated">DOM要素からコンテンツのストリームを取得する方法の初期定義</target>
        </trans-unit>
        <trans-unit id="b471c326596744d46e1159b88da83e7372151dd8" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;timestampOffset&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;timestampOffset&lt;/code&gt; の初期値は0です。</target>
        </trans-unit>
        <trans-unit id="bd7b4e609456ff4e052c1246bd502b94de2628c1" translate="yes" xml:space="preserve">
          <source>The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the &quot;standard&quot; view, i.e., based on attributes on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;&lt;/a&gt; element such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;&lt;/code&gt;) or on a &quot;custom&quot; view (i.e., a hyperlink into a particular &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&quot;&gt;&lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt;&lt;/a&gt; or other element). If the initial view is the &quot;standard&quot; view, then this attribute is &lt;code&gt;false&lt;/code&gt;. If the initial view is a &quot;custom&quot; view, then this attribute is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">現在の最も内側のSVGドキュメントフラグメントの初期ビュー（つまり、拡大とパンの前）は、「標準」ビュー（つまり、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;&lt;/code&gt; などの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt; &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の属性に基づく）または「カスタム」ビュー（つまり、特定の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&quot;&gt; &lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt; &lt;/a&gt;または他の要素へのハイパーリンク）。初期ビューが「標準」ビューの場合、この属性は &lt;code&gt;false&lt;/code&gt; です。初期ビューが「カスタム」ビューの場合、この属性は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="66363a709ecb12db93fee7fad2250201826e6040" translate="yes" xml:space="preserve">
          <source>The input/output read operation failed (No legacy code value and constant name).</source>
          <target state="translated">入出力の読み取り操作に失敗しました(レガシーコードの値と定数名がありません)。</target>
        </trans-unit>
        <trans-unit id="45132766641fa0600b00a0d2ded9649fae31c043" translate="yes" xml:space="preserve">
          <source>The install event is fired when an install is successfully completed. The install event is generally used to populate your browser&amp;rsquo;s offline caching capabilities with the assets you need to run your app offline. To do this, we use Service Worker&amp;rsquo;s brand new storage API &amp;mdash; &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt; &amp;mdash; a global object on the service worker that allows us to store assets delivered by responses, and keyed by their requests. This API works in a similar way to the browser&amp;rsquo;s standard cache, but it is specific to your domain. It persists until you tell it not to &amp;mdash; again, you have full control.</source>
          <target state="translated">インストールが正常に完了すると、インストールイベントが発生します。インストールイベントは通常、アプリをオフラインで実行するために必要なアセットをブラウザのオフラインキャッシュ機能に入力するために使用されます。これを行うには、Service Workerの新しいストレージAPI（&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/a&gt;）を使用します。これは、Service Workerのグローバルオブジェクトであり、応答によって配信され、リクエストによってキー設定されたアセットを保存できます。このAPIはブラウザの標準キャッシュと同様に機能しますが、ドメインに固有です。それはあなたがそれをしないと言うまで持続します&amp;mdash;再び、あなたは完全なコントロールを持っています。</target>
        </trans-unit>
        <trans-unit id="8f6d533575dca4b047f9a9e8eac8a1e0c1821662" translate="yes" xml:space="preserve">
          <source>The instrument by which payment is submitted, such as a credit card or online payment service.</source>
          <target state="translated">クレジットカードやオンライン決済サービスなど、支払いが提出される手段。</target>
        </trans-unit>
        <trans-unit id="f9787a36b74dcb77f1c6d92e71cf0fb1018f2122" translate="yes" xml:space="preserve">
          <source>The interface &lt;a href=&quot;idbopendbrequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; is derived from &lt;code&gt;IDBRequest&lt;/code&gt;.</source>
          <target state="translated">インターフェイス&lt;a href=&quot;idbopendbrequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; &lt;/a&gt;はIDBRequestから派生してい &lt;code&gt;IDBRequest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1586ceae149c3f1f6571cc12c6a6b49b07b42a07" translate="yes" xml:space="preserve">
          <source>The interface also supports the following properties which are listed in the order in which they are recorded for the fetching of a single resource. An alphabetical listing is shown in the navigation, at left.</source>
          <target state="translated">インターフェースはまた、単一のリソースのフェッチのために記録されている順にリストされている以下のプロパティをサポートしています。アルファベット順のリストは、左のナビゲーションに示されています。</target>
        </trans-unit>
        <trans-unit id="348c57b421d51d4da2f638e38a4d72e871bea062" translate="yes" xml:space="preserve">
          <source>The interface also supports the following properties:</source>
          <target state="translated">また、このインターフェイスは以下のプロパティをサポートしています。</target>
        </trans-unit>
        <trans-unit id="1ab0596d2edf9246a634d5554a2710557598c081" translate="yes" xml:space="preserve">
          <source>The interface consists of master controls, which allow us to play/stop the sequencer, and adjust the BPM (beats per minute) to speed up or slow down the &quot;music&quot;.</source>
          <target state="translated">インターフェイスはマスターコントロールで構成されており、シーケンサーの再生/停止、BPM(1分間のビート)を調整して &quot;音楽 &quot;を速くしたり遅くしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="407842243ba3bfd86b2b17daa56df451116b6929" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvaspattern&quot;&gt;&lt;code&gt;CanvasPattern&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../canvaspattern&quot;&gt; &lt;code&gt;CanvasPattern&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c31415fa45bbade510bd4d6eb4a7a29db463afb" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">それを定義するインターフェース、&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbce26c8a8f32df63eeba5225e888721c01c1242" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09bc4849716b6bd03cd6699c6ad0bde1c67085ee" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../htmlcanvaselement&quot;&gt; &lt;code&gt;HTMLCanvasElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="739586ffbfb11d860f8093ebc9cd864ebac8e295" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース、&lt;a href=&quot;../htmlmediaelement&quot;&gt; &lt;code&gt;HTMLMediaElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88c2747119091f7708a563c0d930d015d391ab25" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmltrackelement&quot;&gt;&lt;code&gt;HTMLTrackElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../htmltrackelement&quot;&gt; &lt;code&gt;HTMLTrackElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cee15d4f73fca209487f4be41a66596304378c12" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../mediaerror&quot;&gt;&lt;code&gt;MediaError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../mediaerror&quot;&gt; &lt;code&gt;MediaError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3b6598e7db413a16e827a1e5b1ed5436e574fc8" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../path2d&quot;&gt;&lt;code&gt;Path2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../path2d&quot;&gt; &lt;code&gt;Path2D&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a366dd3834caf1e7c9e93372fddb5bccacf7de70" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース、&lt;a href=&quot;../htmlcanvaselement&quot;&gt; &lt;code&gt;HTMLCanvasElement&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3cd20f50462042424e847a898746f78f51a51e" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドを定義するインターフェース&lt;a href=&quot;../imagebitmap&quot;&gt; &lt;code&gt;ImageBitmap&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4295c90e14090be33103d6861da7bb56bf248b5" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../imagebitmaprenderingcontext&quot;&gt;&lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース&lt;a href=&quot;../imagebitmaprenderingcontext&quot;&gt; &lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c30b008ac3791f8827753a507fcfe3c4fc386c27" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース&lt;a href=&quot;../offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1844e07a1a6cb93faf1e42a489322e1cbfdbffcf" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドを定義するインターフェース&lt;a href=&quot;../offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75da6d6c041ca38f1711d4b22d5473ccf737b5d1" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース、&lt;a href=&quot;../webglrenderingcontext&quot;&gt; &lt;code&gt;WebGLRenderingContext&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a1185a313900e50ffa7fca7f64bedc7fc9bde" translate="yes" xml:space="preserve">
          <source>The interface defining this method: &lt;a href=&quot;../canvasgradient&quot;&gt;&lt;code&gt;CanvasGradient&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース：&lt;a href=&quot;../canvasgradient&quot;&gt; &lt;code&gt;CanvasGradient&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6159ab1a0e001b753fc80c7503d37d685addf47" translate="yes" xml:space="preserve">
          <source>The interface defining this method: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース：&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f381c85144455856c15264cce5dfcba6dcd6f67" translate="yes" xml:space="preserve">
          <source>The interface defining this property: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このプロパティを定義するインターフェース：&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4190f636c5f94b490aa753630bd1fc1f86fe89df" translate="yes" xml:space="preserve">
          <source>The interface defining this property: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティを定義するインターフェース：&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6463c0a91e8eaae381c941ec9ed922d50a6c4e2" translate="yes" xml:space="preserve">
          <source>The interface for the owner object</source>
          <target state="translated">オーナーオブジェクトのインターフェイス</target>
        </trans-unit>
        <trans-unit id="5298f0cfd7036ab1542876f1fa2864e22dcc0aae" translate="yes" xml:space="preserve">
          <source>The interface implementing this property: &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティを実装するインターフェース：&lt;a href=&quot;../htmltableelement&quot;&gt; &lt;code&gt;HTMLTableElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05b96684055565c7a89cea05b0d9d61d21d96ecd" translate="yes" xml:space="preserve">
          <source>The interface it belongs to, &lt;a href=&quot;../geolocation&quot;&gt;&lt;code&gt;Geolocation&lt;/code&gt;&lt;/a&gt;, and the way to access it &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigatorGeolocation/geolocation&quot;&gt;&lt;code&gt;NavigatorGeolocation.geolocation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが属しているインターフェース&lt;a href=&quot;../geolocation&quot;&gt; &lt;code&gt;Geolocation&lt;/code&gt; &lt;/a&gt;、およびそれにアクセスする方法&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigatorGeolocation/geolocation&quot;&gt; &lt;code&gt;NavigatorGeolocation.geolocation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aeb1f85c339e16e7c965aae2f5ca47cc37388bac" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodefilter&quot;&gt;&lt;code&gt;NodeFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが属しているインターフェース：&lt;a href=&quot;../nodefilter&quot;&gt; &lt;code&gt;NodeFilter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c38f187e583de7f72fe36b4490afbf568450741" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">それが属するインターフェース：&lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec55632ee4a409f9ef75bd8ec5c856999d7648be" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが属するインターフェース：&lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7278619e61c8579f78d86e03f7781b1579084fe7" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが属するインターフェース：&lt;a href=&quot;../url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f381c2c684cf9744f3fc05c0b0410d18eb80c8fb" translate="yes" xml:space="preserve">
          <source>The interface of the &lt;a href=&quot;credential_management_api&quot;&gt;Credential Management API&lt;/a&gt; provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the &lt;code&gt;credential&lt;/code&gt; member of the &lt;code&gt;init&lt;/code&gt; object for global &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;credential_management_api&quot;&gt;Credential Management API&lt;/a&gt;のインターフェースは、ユーザー名/パスワードのペアに関する情報を提供します。サポートするブラウザでは、このクラスのインスタンスをグローバル&lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt;ために &lt;code&gt;init&lt;/code&gt; オブジェクトの &lt;code&gt;credential&lt;/code&gt; メンバーに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b2b0cd221411d551c9e4eeb01dec1aca55f7b759" translate="yes" xml:space="preserve">
          <source>The interface of the object it creates: &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが作成するオブジェクトのインターフェース：&lt;a href=&quot;../treewalker&quot;&gt; &lt;code&gt;TreeWalker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3e7077536882ebea4c9419888860140f265d8d7" translate="yes" xml:space="preserve">
          <source>The interface of the promise returned by the &lt;a href=&quot;mediacapabilities&quot;&gt;&lt;code&gt;mediaCapabilities&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;encodingInfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;decodingInfo()&lt;/code&gt;&lt;/a&gt; methods; returning whether the media configuration tested is supported, smooth, and powerEfficient.</source>
          <target state="translated">&lt;a href=&quot;mediacapabilities&quot;&gt; &lt;code&gt;mediaCapabilities&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt; &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; &lt;/a&gt;メソッドとdecodeInfo （）メソッドによって返されるpromiseのインターフェース。テストされたメディア構成がサポートされ、スムーズで、powerEfficientかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="95ffc84a9a04373960151e54ae5381df48ae073b" translate="yes" xml:space="preserve">
          <source>The interface of the promise returned by the the &lt;a href=&quot;../mediacapabilities&quot;&gt;&lt;code&gt;mediaCapabilities&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;encodinginfo&quot;&gt;&lt;code&gt;encodingInfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;encodinginfo&quot;&gt;&lt;code&gt;decodingInfo()&lt;/code&gt;&lt;/a&gt; methods returning whether the media configuration tested is supported, smooth, and powerEfficient.</source>
          <target state="translated">テストされたメディア構成がサポートされ、スムーズで、powerEfficientであるかどうかを返す&lt;a href=&quot;../mediacapabilities&quot;&gt; &lt;code&gt;mediaCapabilities&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;encodinginfo&quot;&gt; &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;encodinginfo&quot;&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; &lt;/a&gt;メソッドとdecodeInfo （）メソッドによって返されるpromiseのインターフェース。</target>
        </trans-unit>
        <trans-unit id="8bf30b04ea044cef865f5f8ff8a4fd68b9d4ee67" translate="yes" xml:space="preserve">
          <source>The interface of the returned value, &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値のインターフェース&lt;a href=&quot;../location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e242217621f1167956579e10892d15e6cd7edea4" translate="yes" xml:space="preserve">
          <source>The interface of the the &lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; provides an object represents a certificate that an &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; uses to authenticate.</source>
          <target state="translated">&lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt;のインターフェースは、&lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;が認証に使用する証明書を表すオブジェクトを提供します。</target>
        </trans-unit>
        <trans-unit id="41db531f6013fb6ea8d50a1a010693a900161ee9" translate="yes" xml:space="preserve">
          <source>The interface that represents errors thrown by the MediaStream Recording API. Its &lt;a href=&quot;mediarecordererrorevent/error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; that specifies that error occurred.</source>
          <target state="translated">MediaStream Recording APIによってスローされたエラーを表すインターフェース。その&lt;a href=&quot;mediarecordererrorevent/error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;プロパティは、エラーが発生したことを指定する&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="539b691936c73ffac3bc933b434b424fe2c3cb42" translate="yes" xml:space="preserve">
          <source>The interface this property belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティが属するインターフェイス：&lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="618038d08d9fea210e7695c10467fcf20ae5b8e9" translate="yes" xml:space="preserve">
          <source>The interface this property belongs to: &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティが属するインターフェイス：&lt;a href=&quot;../treewalker&quot;&gt; &lt;code&gt;TreeWalker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66dfcc0a5dcfffa02636c957cfa59eb0ba675baf" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;high-resolution timestamps&lt;/code&gt;&lt;/a&gt; for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">インターフェースのプロパティは、リダイレクトの開始時間と終了時間、フェッチの開始時間、DNSルックアップの開始時間と終了時間、応答の開始時間と終了時間などのネットワークイベントの&lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;high-resolution timestamps&lt;/code&gt; &lt;/a&gt;を含む&lt;em&gt;リソース読み込みタイムライン&lt;/em&gt;を作成します。フェッチされたリソースのサイズと、フェッチを開始したリソースの&lt;em&gt;タイプ&lt;/em&gt;に関するデータ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8095ea3ad68881483ee7d7cad0e3a6d13c5fb792" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;high-resolution timestamps&lt;/code&gt;&lt;/a&gt; for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc.. Additionally, the interface extends &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; with other properties which provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">インターフェイスのプロパティは、リダイレクトの開始時間と終了時間、フェッチの開始時間、DNSルックアップの開始時間と終了時間、応答の開始時間と終了時間などのネットワークイベントの&lt;a href=&quot;domhighrestimestamp&quot;&gt; &lt;code&gt;high-resolution timestamps&lt;/code&gt; &lt;/a&gt;を含む&lt;em&gt;リソース読み込みタイムライン&lt;/em&gt;を作成します。さらに、インターフェースは&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;を拡張してフェッチされたリソースのサイズと、フェッチを開始したリソースの&lt;em&gt;タイプ&lt;/em&gt;に関するデータを提供する他のプロパティ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96b06f86d0b86353bdba641db118148b7c60b0ee" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;domhighrestimestamp&quot;&gt;high-resolution timestamps&lt;/a&gt; for network events such as redirect start and end times, DNS lookup start and end times, request start, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">インターフェイスのプロパティは、リダイレクトの開始時間と終了時間、DNSルックアップの開始時間と終了時間、要求の開始時間、応答の開始時間と終了時間などのネットワークイベントの&lt;a href=&quot;domhighrestimestamp&quot;&gt;高解像度タイムスタンプ&lt;/a&gt;を含む&lt;em&gt;リソース読み込みタイムライン&lt;/em&gt;を作成します。フェッチされたリソースのサイズと、フェッチを開始したリソースの&lt;em&gt;タイプ&lt;/em&gt;に関するデータ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="336b8c0f074dee4820ed71b35fa86bb4dd1b46c6" translate="yes" xml:space="preserve">
          <source>The interface:</source>
          <target state="translated">インターフェースです。</target>
        </trans-unit>
        <trans-unit id="84091c643115a9215d55c9d55a348492976290d7" translate="yes" xml:space="preserve">
          <source>The interfaces described in this document are defined in the &lt;code&gt;High Resolution Time&lt;/code&gt; standard which has two levels:</source>
          <target state="translated">このドキュメントで説明されているインターフェイスは、2つのレベルを持つ &lt;code&gt;High Resolution Time&lt;/code&gt; 標準で定義されています。</target>
        </trans-unit>
        <trans-unit id="33e8d4b6156f7fd7db871b356ca9b2ea71c92e97" translate="yes" xml:space="preserve">
          <source>The interfaces described in this document are defined in the &lt;strong&gt;Performance Timeline&lt;/strong&gt; standard which has two levels:</source>
          <target state="translated">このドキュメントで説明されているインターフェイスは、次の2つのレベルがある&lt;strong&gt;Performance Timeline&lt;/strong&gt;標準で定義されています。</target>
        </trans-unit>
        <trans-unit id="09380fbe60824f1b7236f80ede7d4e2372d6bade" translate="yes" xml:space="preserve">
          <source>The interfaces related to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt; are referenced under &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL&quot;&gt;WebGL&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WebGLRenderingContext&lt;/code&gt; に関連するインターフェースは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL&quot;&gt;WebGLで&lt;/a&gt;参照されます。</target>
        </trans-unit>
        <trans-unit id="aaff9627d1120f1f8f30d0dbb36b911b3d4e842f" translate="yes" xml:space="preserve">
          <source>The interfaces that it allows to be use as image sources are the following:</source>
          <target state="translated">画像ソースとして使用できるインターフェースは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="17d96adbf82ef27098abb4d0cc3dcafb077bf739" translate="yes" xml:space="preserve">
          <source>The intersection root and root margin</source>
          <target state="translated">交差点の根元と根元の余白</target>
        </trans-unit>
        <trans-unit id="05ea4a2920b10c138f7ace947447c5f1da2d100c" translate="yes" xml:space="preserve">
          <source>The interval that this operation is allowed to take to acquire locks on all the objects stores and indexes identified in &lt;code&gt;storeNames&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;storeNames&lt;/code&gt; で識別されたすべてのオブジェクトストアとインデックスのロックを取得するためにこの操作が許可される間隔。</target>
        </trans-unit>
        <trans-unit id="3eb926157324dcd68c93c19d08b965f35645ebd6" translate="yes" xml:space="preserve">
          <source>The introduction of new input mechanisms results in increased application complexity to handle various input events, such as key events, mouse events, pen/stylus events, and touch events. To help address this problem, the &lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;Pointer Events standard&lt;/a&gt;&lt;em&gt;defines events and related interfaces for handling hardware agnostic pointer input from devices including a mouse, pen, touchscreen, etc.&lt;/em&gt;. That is, the abstract &lt;em&gt;pointer&lt;/em&gt; creates a unified input model that can represent a contact point for a finger, pen/stylus or mouse.</source>
          <target state="translated">新しい入力メカニズムの導入により、キーイベント、マウスイベント、ペン/スタイラスイベント、タッチイベントなどのさまざまな入力イベントを処理するためのアプリケーションの複雑さが増しています。この問題に対処するために、&lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;ポインターイベント標準&lt;/a&gt;&lt;em&gt;は、マウス、ペン、タッチスクリーンなどのデバイスからのハードウェアに依存しないポインター入力を処理するためのイベントと関連インターフェイスを定義しています&lt;/em&gt;。つまり、抽象&lt;em&gt;ポインター&lt;/em&gt;は、指、ペン/スタイラス、またはマウスの接触点を表すことができる統一された入力モデルを作成します。</target>
        </trans-unit>
        <trans-unit id="9d6de852f11d3af304de244249a0fc6ce4f1d83c" translate="yes" xml:space="preserve">
          <source>The introduction of new input mechanisms results in increased application complexity to handle various input events, such as key events, mouse events, pen/stylus events, and touch events. To help address this problem, the &lt;a href=&quot;https://www.w3.org/TR/pointerevents/&quot;&gt;Pointer Events standard&lt;/a&gt;&lt;em&gt;defines events and related interfaces for handling hardware agnostic pointer input from devices including a mouse, pen, touchscreen, etc.&lt;/em&gt;. That is, the abstract &lt;em&gt;pointer&lt;/em&gt; creates a unified input model that can represent a contact point for a finger, pen/stylus or mouse.</source>
          <target state="translated">新しい入力メカニズムの導入により、キーイベント、マウスイベント、ペン/スタイラスイベント、タッチイベントなど、さまざまな入力イベントを処理するためのアプリケーションの複雑さが増します。この問題に対処するために、&lt;a href=&quot;https://www.w3.org/TR/pointerevents/&quot;&gt;ポインターイベント標準で&lt;/a&gt;&lt;em&gt;は、マウス、ペン、タッチスクリーンなどのデバイスからのハードウェアに依存しないポインター入力を処理するためのイベントと関連インターフェイスを定義しています&lt;/em&gt;。つまり、抽象&lt;em&gt;ポインタ&lt;/em&gt;は、指、ペン/スタイラス、またはマウスの接触点を表すことができる統合入力モデルを作成します。</target>
        </trans-unit>
        <trans-unit id="abb9f95510dfcd52f47283d63812d3b38ccfdc76" translate="yes" xml:space="preserve">
          <source>The issue</source>
          <target state="translated">問題点</target>
        </trans-unit>
        <trans-unit id="8f8da4b4e8269a0c03a44e750d7550c096ec982b" translate="yes" xml:space="preserve">
          <source>The item may not be dropped.</source>
          <target state="translated">アイテムを落とすことはできません。</target>
        </trans-unit>
        <trans-unit id="65a44245b173376cd7e34a331aa502b23a71bdbf" translate="yes" xml:space="preserve">
          <source>The item you wish to update (or insert).</source>
          <target state="translated">更新(挿入)したい項目。</target>
        </trans-unit>
        <trans-unit id="12b90b70e812db945fca73c7ee81205442fcf32a" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;CSSValueList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;CSSValueList&lt;/code&gt; の項目には、0から始まる整数インデックスを介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="19014f936c326668ea2ca49937a45a65d80c8fe3" translate="yes" xml:space="preserve">
          <source>The items in the collection of nodes are objects and not strings. To get data from node objects, use their properties (e.g. &lt;code&gt;elementNodeReference.childNodes[1].nodeName&lt;/code&gt; to get the name, etc.).</source>
          <target state="translated">ノードのコレクションの項目はオブジェクトであり、文字列ではありません。ノードオブジェクトからデータを取得するには、それらのプロパティを使用します（たとえば、 &lt;code&gt;elementNodeReference.childNodes[1].nodeName&lt;/code&gt; 名前を取得するなど）。</target>
        </trans-unit>
        <trans-unit id="1ed765510dec72b93a3437e7a05cf08d7bf7037b" translate="yes" xml:space="preserve">
          <source>The key = &lt;strong&gt;z&lt;/strong&gt;</source>
          <target state="translated">キー= &lt;strong&gt;z&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e5f1dbfe9dee996a1a03522a884acd5b831e3d6" translate="yes" xml:space="preserve">
          <source>The key bits to take away from this are:</source>
          <target state="translated">ここで重要なのは、次のようなことです。</target>
        </trans-unit>
        <trans-unit id="f4210dbf3b02cfa151ceac0a8d8faa5e79054d7b" translate="yes" xml:space="preserve">
          <source>The key change here is that instead of fetching the vertex color, we're fetching the texture coordinates and passing them to the vertex shader; this will indicate the location within the texture corresponding to the vertex.</source>
          <target state="translated">ここでの重要な変更点は、頂点のカラーを取得する代わりに、テクスチャの座標を取得して頂点シェーダに渡すことです。</target>
        </trans-unit>
        <trans-unit id="839ae84ae813d9ba3e334df960d534e9bfc5051f" translate="yes" xml:space="preserve">
          <source>The key difference here is that for each vertex, we pass its color using a &lt;code&gt;varying&lt;/code&gt; to the fragment shader.</source>
          <target state="translated">ここでの主な違いは、頂点ごとに、 &lt;code&gt;varying&lt;/code&gt; を使用してフラグメントシェーダーに色を渡すことです。</target>
        </trans-unit>
        <trans-unit id="f15e79e3ad726a6eba111ac63901e860731ca800" translate="yes" xml:space="preserve">
          <source>The key for the record at the cursor's &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_position&quot;&gt;position&lt;/a&gt;.</source>
          <target state="translated">カーソルの&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_position&quot;&gt;位置に&lt;/a&gt;あるレコードのキー。</target>
        </trans-unit>
        <trans-unit id="192aee5c47f2716449ab102e49cc31ce4a4e0518" translate="yes" xml:space="preserve">
          <source>The key for the stored record.</source>
          <target state="translated">保存されているレコードのキー。</target>
        </trans-unit>
        <trans-unit id="6f2c3975f2000d1b80af15edb055b357b5add06a" translate="yes" xml:space="preserve">
          <source>The key has only one version, or can't be distinguished between the left and right versions of the key, and was not pressed on the numeric keypad or a key that is considered to be part of the keypad.</source>
          <target state="translated">キーのバージョンが1つしかないか、左右のバージョンの区別がつかず、テンキーやテンキーの一部と思われるキーを押していなかった。</target>
        </trans-unit>
        <trans-unit id="34cb9fcb12f5003653d832e173841dd3cb519bd3" translate="yes" xml:space="preserve">
          <source>The key here is connecting the graph correctly, and also starting both oscillators:</source>
          <target state="translated">ここで重要なのは、グラフを正しく接続することと、両方の発振器を起動することです。</target>
        </trans-unit>
        <trans-unit id="a4d85226d43fbca0da6814f3a48caaef559ad393" translate="yes" xml:space="preserve">
          <source>The key is greater than or equal to this cursor's position and this cursor's direction is &lt;code&gt;prev&lt;/code&gt; or &lt;code&gt;prevunique&lt;/code&gt;.</source>
          <target state="translated">キーはこのカーソルの位置以上で、このカーソルの方向は &lt;code&gt;prev&lt;/code&gt; または &lt;code&gt;prevunique&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0aa6707942ff8ec6cfcc98023af97c687bbc7ff2" translate="yes" xml:space="preserve">
          <source>The key is less than or equal to this cursor's position and the cursor's direction is &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;nextunique&lt;/code&gt;.</source>
          <target state="translated">キーはこのカーソルの位置以下であり、カーソルの方向は &lt;code&gt;next&lt;/code&gt; または &lt;code&gt;nextunique&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9f8e7e7f111ec47f68e534f4a806fa00ac2b734" translate="yes" xml:space="preserve">
          <source>The key is not a valid key.</source>
          <target state="translated">そのキーは有効なキーではありません。</target>
        </trans-unit>
        <trans-unit id="89ba803d9ccc0b7d292ec0a987eb694cd130f540" translate="yes" xml:space="preserve">
          <source>The key of an element to search for in the map.</source>
          <target state="translated">地図で探す要素のキー。</target>
        </trans-unit>
        <trans-unit id="6682ef34c8531cbce3f2f9c8c513065b078d1f42" translate="yes" xml:space="preserve">
          <source>The key of the item to return from the map.</source>
          <target state="translated">マップから戻るアイテムのキー。</target>
        </trans-unit>
        <trans-unit id="8e743125121265e42aca612b4ad4320cba650c60" translate="yes" xml:space="preserve">
          <source>The key of the record to be deleted, or an &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; to delete all records with keys in range.</source>
          <target state="translated">削除するレコードのキー、またはキーが範囲内にあるすべてのレコードを削除する&lt;a href=&quot;../idbkeyrange&quot;&gt; &lt;code&gt;IDBKeyRange&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36621c09eecc06761cbf034dbf2e1364e45c1975" translate="yes" xml:space="preserve">
          <source>The key or key range provided contains an invalid key or is null.</source>
          <target state="translated">提供されたキーまたはキー範囲には無効なキーが含まれているか、NULL です。</target>
        </trans-unit>
        <trans-unit id="5469e34fb81e65f021a705f22386fe5d2d22c0b5" translate="yes" xml:space="preserve">
          <source>The key or key range provided contains an invalid key.</source>
          <target state="translated">提供されたキーまたはキー範囲には無効なキーが含まれています。</target>
        </trans-unit>
        <trans-unit id="1d94fa87b9cd3f44b1cd4de7b5f7ab503a505876" translate="yes" xml:space="preserve">
          <source>The key or key range that identifies the record to be counted.</source>
          <target state="translated">カウントされるレコードを識別するキーまたはキー範囲。</target>
        </trans-unit>
        <trans-unit id="bccb616f056dc7cd3fe50b9d7cf455a16187b2c6" translate="yes" xml:space="preserve">
          <source>The key or key range that identifies the record to be retrieved.</source>
          <target state="translated">取得するレコードを識別するキーまたはキー範囲。</target>
        </trans-unit>
        <trans-unit id="2688e8757b682681e72208df33c54ad3285da191" translate="yes" xml:space="preserve">
          <source>The key parameter may have any of the following conditions:</source>
          <target state="translated">キーパラメータは、以下のいずれかの条件を持つことができます。</target>
        </trans-unit>
        <trans-unit id="867a8ea3be0506e9509bb10dc676ea2f56df51ae" translate="yes" xml:space="preserve">
          <source>The key parameter was provided but does not contain a valid key.</source>
          <target state="translated">キー・パラメータが提供されましたが、有効なキーが含まれていません。</target>
        </trans-unit>
        <trans-unit id="e42629fcd872de243cb3908c73e213a0e269aad3" translate="yes" xml:space="preserve">
          <source>The key path for the index to use. Note that it is possible to create an index with an empty &lt;code&gt;keyPath&lt;/code&gt;, and also to pass in a sequence (array) as a &lt;code&gt;keyPath&lt;/code&gt;.</source>
          <target state="translated">使用するインデックスのキーパス。空の &lt;code&gt;keyPath&lt;/code&gt; でインデックスを作成し、シーケンス（配列）を &lt;code&gt;keyPath&lt;/code&gt; として渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="a9b765cfcdb4ca0356039bb9aebc8b845126d242" translate="yes" xml:space="preserve">
          <source>The key path of the current index is logged to the console: it should be returned as &lt;code&gt;lName&lt;/code&gt;.</source>
          <target state="translated">現在のインデックスの &lt;code&gt;lName&lt;/code&gt; はコンソールに記録されます。lNameとして返される必要があります。</target>
        </trans-unit>
        <trans-unit id="151e23165d553ba4ff3ecc0a0349dbe861efb206" translate="yes" xml:space="preserve">
          <source>The key path used by the new index.</source>
          <target state="translated">新しいインデックスが使用するキーパス。</target>
        </trans-unit>
        <trans-unit id="361a2fde03ec7860c0bc7c8d8b89dd0fdd31282a" translate="yes" xml:space="preserve">
          <source>The key range to be queried. If a single valid key is passed, this will default to a range containing only that key. If nothing is passed, this will default to a key range that selects all the records in this object store.</source>
          <target state="translated">クエリするキーの範囲。1つの有効なキーが渡された場合、そのキーのみを含む範囲がデフォルトとなります。何も渡されなかった場合は、このオブジェクト・ストア内のすべてのレコードを選択するキーの範囲がデフォルトとなります。</target>
        </trans-unit>
        <trans-unit id="67daf28bdc41bbc759694518b484a008fc29e251" translate="yes" xml:space="preserve">
          <source>The key range to use as the cursor's range.</source>
          <target state="translated">カーソルの範囲として使用するキー範囲。</target>
        </trans-unit>
        <trans-unit id="af33071c7b4e2359c4c00ff74c68b1babd5d82fd" translate="yes" xml:space="preserve">
          <source>The key that identifies the record to be retrieved.</source>
          <target state="translated">取得するレコードを識別するキーです。</target>
        </trans-unit>
        <trans-unit id="6b4b46b53d9839db99a9425a11064ea9909b7ee7" translate="yes" xml:space="preserve">
          <source>The key to be used to identify the record.</source>
          <target state="translated">レコードを識別するために使用されるキーです。</target>
        </trans-unit>
        <trans-unit id="1fdf6e9c95d583e5e0876a5868e648cbfc84c1b6" translate="yes" xml:space="preserve">
          <source>The key to position the cursor at.</source>
          <target state="translated">カーソルの位置を決めるキーです。</target>
        </trans-unit>
        <trans-unit id="c682fc397e753d1c0d868d1c003d23412ed998cb" translate="yes" xml:space="preserve">
          <source>The key to use to identify the record. If unspecified, it results to null.</source>
          <target state="translated">レコードを識別するために使用するキー。指定しない場合は null となります。</target>
        </trans-unit>
        <trans-unit id="30075c2a6927cfea55a7e4d8986e1253d1981fde" translate="yes" xml:space="preserve">
          <source>The key to use to identify the record. If unspecified, it results to null. If the object store has a key generator (e.g. autoincrement) the key of the object must be passed in to update the object.</source>
          <target state="translated">レコードを識別するために使用するキー。指定しない場合は null となります。オブジェクトストアにキージェネレータ (autoincrement など)がある場合は、オブジェクトを更新するためにオブジェクトのキーを渡さなければなりません。</target>
        </trans-unit>
        <trans-unit id="493cf1d1e74b75f78372abc1912fe52be61208c4" translate="yes" xml:space="preserve">
          <source>The key to which to move the cursor's position.</source>
          <target state="translated">カーソルの位置を移動させるキーです。</target>
        </trans-unit>
        <trans-unit id="b3bad5a1e956a0e4867df06685c0d2e87567135f" translate="yes" xml:space="preserve">
          <source>The key was a button on a game controller or a joystick on a mobile device.</source>
          <target state="translated">キーはゲームコントローラーのボタンか、モバイル機器のジョイスティックでした。</target>
        </trans-unit>
        <trans-unit id="cc57735dfcc679de2c5685a62b981f145801bc35" translate="yes" xml:space="preserve">
          <source>The key was on a mobile device; this can be on either a physical keypad or a virtual keyboard.</source>
          <target state="translated">キーはモバイルデバイス上にあり、これは物理的なキーパッドまたは仮想キーボード上のいずれかである可能性があります。</target>
        </trans-unit>
        <trans-unit id="40527e4fceb3e2126b2c515e200b6cf73051521c" translate="yes" xml:space="preserve">
          <source>The key was on the numeric keypad, or has a virtual key code that corresponds to the numeric keypad.</source>
          <target state="translated">キーがテンキー上にあったか、テンキーに対応する仮想キーコードを持っていた。</target>
        </trans-unit>
        <trans-unit id="d24c02cba586837216f3b2068b4e2937fc5de0f8" translate="yes" xml:space="preserve">
          <source>The key was the left-hand version of the key; for example, the left-hand</source>
          <target state="translated">鍵は左手版のもので、例えば、左手の</target>
        </trans-unit>
        <trans-unit id="e5a9032c9d30fc7148705d2f2591409eec53addf" translate="yes" xml:space="preserve">
          <source>The key was the right-hand version of the key; for example, the right-hand</source>
          <target state="translated">鍵は右手のバージョンで、例えば、右手の</target>
        </trans-unit>
        <trans-unit id="1270c174b220e24a3377e4ba802e78a3a9be3dff" translate="yes" xml:space="preserve">
          <source>The key whose value is changing as a result of this event.</source>
          <target state="translated">このイベントの結果として値が変更されるキー。</target>
        </trans-unit>
        <trans-unit id="7192b4a1edb91d4b777660c729182dd1560ada81" translate="yes" xml:space="preserve">
          <source>The key whose value you want returned</source>
          <target state="translated">値を返してほしいキー</target>
        </trans-unit>
        <trans-unit id="adfb14ab21961c3042507b76d9f886f75c9c8318" translate="yes" xml:space="preserve">
          <source>The key whose value you want returned.</source>
          <target state="translated">値を返してほしいキー。</target>
        </trans-unit>
        <trans-unit id="b5f93027642b2967f7ba552cb5a6794d0446bf37" translate="yes" xml:space="preserve">
          <source>The key's new value.</source>
          <target state="translated">キーの新しい値。</target>
        </trans-unit>
        <trans-unit id="bcb57f63776a7d4a6c9afed5f91254aadbad8b98" translate="yes" xml:space="preserve">
          <source>The key's old value.</source>
          <target state="translated">キーの古い値。</target>
        </trans-unit>
        <trans-unit id="7f76c6b2c5bda1e950d51d378999359849f255f5" translate="yes" xml:space="preserve">
          <source>The keyboard</source>
          <target state="translated">キーボード</target>
        </trans-unit>
        <trans-unit id="785d40c49ae7d183fa7a21b102146104261dc8e8" translate="yes" xml:space="preserve">
          <source>The keyframeEffect is &lt;strong&gt;accumulated&lt;/strong&gt; on to the underlying value: &lt;code&gt;blur(5)&lt;/code&gt;.</source>
          <target state="translated">keyframeEffectは、基になる値 &lt;code&gt;blur(5)&lt;/code&gt; に&lt;strong&gt;累積&lt;/strong&gt;されます。</target>
        </trans-unit>
        <trans-unit id="94f16f5a41187e1166716ffaebeac3bd28482ca2" translate="yes" xml:space="preserve">
          <source>The keypress event &lt;strong&gt;should&lt;/strong&gt; be raised when the user presses a key on the keyboard. However, not all browsers fire keypress events for certain keys.</source>
          <target state="translated">keypressイベント&lt;strong&gt;は&lt;/strong&gt;、ユーザーがキーボードのキーを押したときに発生します。ただし、すべてのブラウザが特定のキーに対してkeypressイベントを発生させるわけではありません。</target>
        </trans-unit>
        <trans-unit id="cbf8e170c7f694cba63b8fa37d8f9d2871be0083" translate="yes" xml:space="preserve">
          <source>The keyup event is raised when the user releases a key that's been pressed.</source>
          <target state="translated">キーアップイベントは、ユーザーが押したキーを離したときに発生します。</target>
        </trans-unit>
        <trans-unit id="b55d97857332acbb459f32cabcf215ae7557960e" translate="yes" xml:space="preserve">
          <source>The kind of change that took place (either a change to the list of children or a change to an attribute) is detected by looking at the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt;&lt;code&gt;mutation.type&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">発生した変更の種類（子のリストの変更または属性の変更）は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt; &lt;code&gt;mutation.type&lt;/code&gt; &lt;/a&gt;プロパティを調べることで検出されます。</target>
        </trans-unit>
        <trans-unit id="5c48a2ceab27ce3680069083dc2cbd28009ca936" translate="yes" xml:space="preserve">
          <source>The kinds available for audio tracks are:</source>
          <target state="translated">オーディオトラックに利用できる種類は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d53bb75ade94ed31212d22e391697e1ff2a3679f" translate="yes" xml:space="preserve">
          <source>The kinds available for video tracks are:</source>
          <target state="translated">ビデオトラックに利用可能な種類は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7b361bd7e0d5d74ac8813cc9735af5840eca145c" translate="yes" xml:space="preserve">
          <source>The label and/or protocol string is too long; these cannot be longer than 65,535 bytes (bytes, rather than characters).</source>
          <target state="translated">ラベルおよび/またはプロトコル文字列が長すぎます。</target>
        </trans-unit>
        <trans-unit id="2320addd9492913e5914aec07c23611ab7bc6d67" translate="yes" xml:space="preserve">
          <source>The language code of the notification as specified in the constructor's &lt;code&gt;options&lt;/code&gt; parameter.</source>
          <target state="translated">コンストラクタの &lt;code&gt;options&lt;/code&gt; パラメータで指定された通知の言語コード。</target>
        </trans-unit>
        <trans-unit id="4bc1c1f724790abf32447f656dfb92df32bd125f" translate="yes" xml:space="preserve">
          <source>The language code returned by this property is defined in the &lt;a href=&quot;https://www.ietf.org/rfc/bcp/bcp47.txt&quot;&gt;&lt;em&gt;Tags for Identifying Languages (BCP47)&lt;/em&gt;&lt;/a&gt; IETF document. Common examples include &quot;en&quot; for English, &quot;ja&quot; for Japanese, &quot;es&quot; for Spanish and so on. The default value of this attribute is &lt;code&gt;unknown&lt;/code&gt;. Note that this attribute, though valid at the individual element level described here, is most often specified for the root element of the document.</source>
          <target state="translated">このプロパティによって返される言語コードは、言語&lt;a href=&quot;https://www.ietf.org/rfc/bcp/bcp47.txt&quot;&gt;&lt;em&gt;を識別するため&lt;/em&gt;&lt;/a&gt;の&lt;em&gt;タグ（BCP47）&lt;/em&gt; IETFドキュメントで定義されています。一般的な例には、英語の「en」、日本語の「ja」、スペイン語の「es」などがあります。この属性のデフォルト値は &lt;code&gt;unknown&lt;/code&gt; です。この属性は、ここで説明する個々の要素レベルで有効ですが、ほとんどの場合、ドキュメントのルート要素に指定されています。</target>
        </trans-unit>
        <trans-unit id="4987e96e6986297fb2f725f49d7c23b05097dbf0" translate="yes" xml:space="preserve">
          <source>The language itself is specified using a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47 language tag&lt;/a&gt;. See the Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2 letter language codes&lt;/a&gt; page for a simple reference.</source>
          <target state="translated">言語自体は、&lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47言語タグを&lt;/a&gt;表す&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;を使用して指定されます。簡単なリファレンスについては、Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2文字の言語コードの&lt;/a&gt;ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="03f1e94543be4f95daec90263f35a54ed56861c8" translate="yes" xml:space="preserve">
          <source>The language itself is specified using a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a &lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47 language tag&lt;/a&gt;. See the Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2 letter language codes&lt;/a&gt; page for a simple reference.</source>
          <target state="translated">言語自体は、&lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP47言語タグを&lt;/a&gt;表す&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;を使用して指定されます。簡単なリファレンスについては、Sitepoint ISO2&lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;文字言語コードの&lt;/a&gt;ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="a8e4087ba337405b3a9b453774b84a0685fedf98" translate="yes" xml:space="preserve">
          <source>The language was not supported.</source>
          <target state="translated">言語には対応していませんでした。</target>
        </trans-unit>
        <trans-unit id="b0b07dd7d614eeb60bd3cf2fd1aa603997a5de3e" translate="yes" xml:space="preserve">
          <source>The last bit of code adds a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the stop button using &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">コードの最後のビットは、&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt;を使用して停止ボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを追加します。</target>
        </trans-unit>
        <trans-unit id="5b066a32955a10ad46e892f98de6f1d37f7ec635" translate="yes" xml:space="preserve">
          <source>The last box has thresholds each 25%.</source>
          <target state="translated">最後のボックスには25%ずつ閾値があります。</target>
        </trans-unit>
        <trans-unit id="79033c5a78365c5cdff3b580d1a7e54abdb7ecd0" translate="yes" xml:space="preserve">
          <source>The last candidate to be signaled this way by the remote peer will be a special candidate denoting end-of-candidates. Out of interest, end-of-candidates may be manually indicated as follows:</source>
          <target state="translated">リモートピアからこのようにシグナルされる最後の候補は、エンドオブカンディデートを示す特別な候補となる。興味のない方は、以下のように手動でエンドオブカ ンディデートを表示してもよい。</target>
        </trans-unit>
        <trans-unit id="9d87f88141eadb5bdabe7b1e1d4e09d8f17dbba8" translate="yes" xml:space="preserve">
          <source>The last color stop in each of the four gradients uses a fully transparent color. If you want to have a nice transition from this to the previous color stop, both colors should be equal. This isn't very obvious from the code because it uses two different CSS color methods as a demonstration, but in the first gradient &lt;code&gt;#019F62 = rgba(1,159,98,1)&lt;/code&gt;.</source>
          <target state="translated">4つのグラデーションのそれぞれの最後のカラーストップは、完全に透明なカラーを使用します。これから前のカラーストップにうまく移行したい場合は、両方のカラーが等しいはずです。これは、2つの異なるCSSカラーメソッドをデモとして使用しているため、コードからは明らかではありませんが、最初のグラデーションでは &lt;code&gt;#019F62 = rgba(1,159,98,1)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d20b5925dc805c0f499ab58420f0ed328ac07175" translate="yes" xml:space="preserve">
          <source>The last keyframe says that the animation's final frame should draw the animation rotated 90&amp;deg; to the right from its original orientation.</source>
          <target state="translated">最後のキーフレームは、アニメーションの最終フレームが、元の方向から右に90度回転したアニメーションを描画する必要があることを示しています。</target>
        </trans-unit>
        <trans-unit id="cb70956ca1253ba3077f035042b417412983bf93" translate="yes" xml:space="preserve">
          <source>The last line contained in this function is a &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt;&lt;/a&gt; call, which runs the &lt;code&gt;reportGamepads()&lt;/code&gt; function after a 1 second delay. Why do we need to do this? First of all, VR controllers will only be ready after their associated VR headset is active, so we need to invoke this after &lt;code&gt;getVRDisplays()&lt;/code&gt; has been called and returned the display information. Second, the Gamepad API is much older than the WebVR API, and not promise-based. As you'll see later, the &lt;code&gt;getGamepads()&lt;/code&gt; method is synchronous, and just returns the &lt;code&gt;Gamepad&lt;/code&gt; objects immediately &amp;mdash; it doesn't wait for the controller to be ready to report information. Unless you wait for a little while, returned information may not be accurate (at least, this is what we found in our tests).</source>
          <target state="translated">この関数に含まれる最後の行は&lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt; &lt;/a&gt;呼び出しで、1秒の遅延後に &lt;code&gt;reportGamepads()&lt;/code&gt; 関数を実行します。なぜこれを行う必要があるのですか？まず第一に、VRコントローラーは、関連付けられたVRヘッドセットがアクティブになった後にのみ準備が整うので、 &lt;code&gt;getVRDisplays()&lt;/code&gt; が呼び出されて表示情報を返した後にこれを呼び出す必要があります。第二に、ゲームパッドAPIはWebVR APIよりもはるかに古く、プロミスベースではありません。後で見るように、 &lt;code&gt;getGamepads()&lt;/code&gt; メソッドは同期的で、 &lt;code&gt;Gamepad&lt;/code&gt; 返すだけです。オブジェクトは即座に&amp;mdash;コントローラーが情報を報告する準備ができるのを待ちません。しばらく待たないと、返された情報が正確でない可能性があります（少なくとも、これはテストで見つかりました）。</target>
        </trans-unit>
        <trans-unit id="7d599ed7b8a42f11652d468a0d232ab7c33dc2e5" translate="yes" xml:space="preserve">
          <source>The last line could be simplified to:</source>
          <target state="translated">最後の一行は簡略化して</target>
        </trans-unit>
        <trans-unit id="2d77e50ae88c50271c2cb28136fc36f82e901256" translate="yes" xml:space="preserve">
          <source>The last of three properties that declare the USB protocol version supported by the device.</source>
          <target state="translated">デバイスがサポートする USB プロトコルのバージョンを宣言する 3 つのプロパティのうち、最後のもの。</target>
        </trans-unit>
        <trans-unit id="34baddfe12a5a5f50b24934516856a87dbc3b0a2" translate="yes" xml:space="preserve">
          <source>The last part of the code simply updates the &lt;code&gt;pitch&lt;/code&gt;/&lt;code&gt;rate&lt;/code&gt; values displayed in the UI, each time the slider positions are moved.</source>
          <target state="translated">コードの最後の部分は、スライダーの位置が移動するたびに、UIに表示される &lt;code&gt;pitch&lt;/code&gt; / &lt;code&gt;rate&lt;/code&gt; 値を更新するだけです。</target>
        </trans-unit>
        <trans-unit id="ec856fb858019878d9f8ced26d4113caf7988f3a" translate="yes" xml:space="preserve">
          <source>The last part of the rendering loop involves us calling &lt;a href=&quot;../vrdisplay/submitframe&quot;&gt;&lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt;&lt;/a&gt; &amp;mdash; now all the work has been done and we've rendered the display on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;, this method then submits the frame to the VR display so it is displayed on there as well.</source>
          <target state="translated">レンダリングループの最後の部分では、&lt;a href=&quot;../vrdisplay/submitframe&quot;&gt; &lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。これですべての作業が完了し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; に&lt;/a&gt;表示をレンダリングしました。このメソッドは、フレームをVRディスプレイに送信して表示します。そこにも。</target>
        </trans-unit>
        <trans-unit id="9195c9bfab4b64ce7140326bf3e1629cbed43290" translate="yes" xml:space="preserve">
          <source>The last significant piece of the puzzle: code that displays, for the user's reference, a list of the constrainable properties which their browser supports. Each property is a link to its documentation on MDN for the user's convenience. See the &lt;a href=&quot;../mediadevices/getsupportedconstraints#Example&quot;&gt;Example&lt;/a&gt; in &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;MediaDevices.getSupportedConstraints()&lt;/a&gt; for details on how this code works.</source>
          <target state="translated">パズルの最後の重要な部分：ユーザーの参照のために、ブラウザーがサポートする制約可能なプロパティのリストを表示するコード。各プロパティは、ユーザーの便宜のためにMDNに関するドキュメントへのリンクです。参照の&lt;a href=&quot;../mediadevices/getsupportedconstraints#Example&quot;&gt;例&lt;/a&gt;で&lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;MediaDevices.getSupportedConstraints（）&lt;/a&gt;このコードがどのように動作するかの詳細については、を。</target>
        </trans-unit>
        <trans-unit id="d89deff0bfa30d0a2451b9502c471d2517af2c6c" translate="yes" xml:space="preserve">
          <source>The last step of filling in the w component can actually be accomplished with a simple matrix. Start with the identity matrix:</source>
          <target state="translated">w 成分を埋める最後のステップは,実際には単純な行列で行うことができます.まず、identity 行列から始めます。</target>
        </trans-unit>
        <trans-unit id="067ca26823af4dc05a63d5370f6423572c52d1d6" translate="yes" xml:space="preserve">
          <source>The last thing the callback does is call &lt;code&gt;setTimeout()&lt;/code&gt; to schedule itself to be called again as soon as possible. In the real world, you would probably schedule this to be done based on knowledge of the video's frame rate.</source>
          <target state="translated">コールバックが行う最後のことは、 &lt;code&gt;setTimeout()&lt;/code&gt; を呼び出して、できるだけ早く自分自身が再び呼び出されるようにスケジュールすることです。現実の世界では、おそらくビデオのフレームレートの知識に基づいてこれを実行するようにスケジュールします。</target>
        </trans-unit>
        <trans-unit id="f134de0e4ce37ae41c15bc1d8855fb82ffe86c05" translate="yes" xml:space="preserve">
          <source>The last thing to do here is set the &lt;code&gt;initialRun&lt;/code&gt; variable to &lt;code&gt;false&lt;/code&gt;, as the initial run is now over.</source>
          <target state="translated">ここで最後に行うのは、初期実行が終了したので、 &lt;code&gt;initialRun&lt;/code&gt; 変数を &lt;code&gt;false&lt;/code&gt; に設定することです。</target>
        </trans-unit>
        <trans-unit id="dc25d4ee0d1e230ce2778ef0b95f0e68cfa9d621" translate="yes" xml:space="preserve">
          <source>The last thing we need to do in order to begin connecting our peers is to create a connection offer.</source>
          <target state="translated">仲間とのつながりを始めるために最後にやるべきことは、つながりのオファーを作ることです。</target>
        </trans-unit>
        <trans-unit id="75b96b94809c6003406d03408c5e923b24267fba" translate="yes" xml:space="preserve">
          <source>The last two handlers are there to handle cases where speech was recognised that wasn't in the defined grammar, or an error occured. &lt;a href=&quot;../speechrecognition/onnomatch&quot;&gt;&lt;code&gt;SpeechRecognition.onnomatch&lt;/code&gt;&lt;/a&gt; seems to be supposed to handle the first case mentioned, although note that at the moment it doesn't seem to fire correctly in Firefox or Chrome; it just returns whatever was recognised anyway:</source>
          <target state="translated">最後の2つのハンドラーは、定義された文法にない音声が認識された場合、またはエラーが発生した場合を処理するためにあります。&lt;a href=&quot;../speechrecognition/onnomatch&quot;&gt; &lt;code&gt;SpeechRecognition.onnomatch&lt;/code&gt; &lt;/a&gt;は、最初に言及したケースを処理するように思われますが、現時点では、FirefoxまたはChromeでは正しく起動されないようです。とにかく認識されたものを返すだけです：</target>
        </trans-unit>
        <trans-unit id="d4fbd2e17b097cdc2fc2bd3589cc6e2ce286eeb5" translate="yes" xml:space="preserve">
          <source>The last way is to generate your own sound, which can be done with either an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; or by creating a buffer and populating it with your own data. Check out the &lt;a href=&quot;advanced_techniques&quot;&gt;tutorial here for creating your own instrument&lt;/a&gt; for information on creating sounds with oscillators and buffers.</source>
          <target state="translated">最後の方法は、独自のサウンドを生成することです。これは、&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;を使用するか、バッファーを作成して独自のデータを入力することで実行できます。オシレーターとバッファーでサウンドを&lt;a href=&quot;advanced_techniques&quot;&gt;作成する方法について&lt;/a&gt;は、こちらのチュートリアルで独自の楽器を作成してください。</target>
        </trans-unit>
        <trans-unit id="0df62567dddb9a61427aa37a6b9f83b2a0940019" translate="yes" xml:space="preserve">
          <source>The latest spec has updated this method to a promise-based syntax that works like this:</source>
          <target state="translated">最新の仕様では、このメソッドは次のように動作するプロミスベースの構文に更新されています。</target>
        </trans-unit>
        <trans-unit id="c112df114cea7aee58c85eec22260049a206b052" translate="yes" xml:space="preserve">
          <source>The left (&lt;code&gt;L&lt;/code&gt; and &lt;code&gt;SL&lt;/code&gt;), right (&lt;code&gt;R&lt;/code&gt; and &lt;code&gt;SR&lt;/code&gt;) and central channels are all mixed together. The surround channels are slightly attenuated and the regular lateral channels are power-compensated to make them count as a single channel by multiplying by &lt;code&gt;&amp;radic;2/2&lt;/code&gt;. The subwoofer (&lt;code&gt;LFE&lt;/code&gt;) channel is lost.</source>
          <target state="translated">左（ &lt;code&gt;L&lt;/code&gt; と &lt;code&gt;SL&lt;/code&gt; ）、右（ &lt;code&gt;R&lt;/code&gt; と &lt;code&gt;SR&lt;/code&gt; ）、および中央チャンネルはすべて一緒に混合されます。サラウンドチャネルはわずかに減衰され、通常のラテラルチャネルは電力補償されて、 &lt;code&gt;&amp;radic;2/2&lt;/code&gt; を掛けて1つのチャネルとしてカウントされます。サブウーファー（ &lt;code&gt;LFE&lt;/code&gt; ）チャネルが失われた。</target>
        </trans-unit>
        <trans-unit id="8b361aef24ec293ed9fdf21d200a82b14e7ebefb" translate="yes" xml:space="preserve">
          <source>The left offset of the bounds.</source>
          <target state="translated">バウンズの左のオフセット。</target>
        </trans-unit>
        <trans-unit id="3deffa6bdd6f1859714ee9f5419eb48e584052f7" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/ms536956(v=vs.71)&quot;&gt;onpropertychange&lt;/a&gt;&lt;/code&gt; event can be used to create a living &lt;code&gt;classList&lt;/code&gt; mockup thanks to a &lt;code&gt;Element.prototype.className&lt;/code&gt; property that fires the specified event once it is changed.</source>
          <target state="translated">指定されたイベントが変更されると発生する &lt;code&gt;Element.prototype.className&lt;/code&gt; プロパティにより、レガシーの &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/ms536956(v=vs.71)&quot;&gt;onpropertychange&lt;/a&gt;&lt;/code&gt; イベントを使用して、生きている &lt;code&gt;classList&lt;/code&gt; モックアップを作成できます。</target>
        </trans-unit>
        <trans-unit id="991ee95f476371686a49139b801d252cad4655db" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.navigation&lt;/code&gt; read-only property returns a &lt;a href=&quot;../performancenavigation&quot;&gt;&lt;code&gt;PerformanceNavigation&lt;/code&gt;&lt;/a&gt; object representing the type of navigation that occurs in the given browsing context, such as the number of redirections needed to fetch the resource.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.navigation&lt;/code&gt; 読み取り専用プロパティは、リソースのフェッチに必要なリダイレクトの数など、特定のブラウジングコンテキストで発生するナビゲーションのタイプを表す&lt;a href=&quot;../performancenavigation&quot;&gt; &lt;code&gt;PerformanceNavigation&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b669d6807ccf1cfbe482bbddfbc335eb55e21a3d" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.timing&lt;/code&gt; read-only property returns a &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; object containing latency-related performance information.</source>
          <target state="translated">レガシーの &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.timing&lt;/code&gt; 読み取り専用プロパティは、レイテンシ関連のパフォーマンス情報を含む&lt;a href=&quot;../performancetiming&quot;&gt; &lt;code&gt;PerformanceTiming&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="226101c19f1d7ea020442ab860991c2ced0375ce" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectCount&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned short&lt;/code&gt; representing the number of REDIRECTs done before reaching the page.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectCount&lt;/code&gt; 読み取り専用プロパティは、ページに到達する前に行われたREDIRECTの数を表す &lt;code&gt;unsigned short&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="1d7651c61cf6df6c99b779f1cb47c197f52e4637" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.type&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned short&lt;/code&gt; containing a constant describing how the navigation to this page was done. Possible values are:</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.type&lt;/code&gt; 読み取り専用プロパティは、このページへのナビゲーションがどのように行われたかを説明する定数を含む &lt;code&gt;unsigned short&lt;/code&gt; を返します。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7751a05a46cb461f6928cc01ccc6bfb41b3b59d0" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.connectEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment end time is given. If a persistent connection is used, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.connectEnd&lt;/code&gt; 読み取り専用プロパティは、接続がネットワークで開かれるUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。トランスポート層がエラーを報告し、接続の確立が再度開始された場合、最後の接続確立の終了時間が示されます。永続的な接続が使用されている場合、値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。すべての安全な接続ハンドシェイクまたはSOCKS認証が終了すると、接続は開いたと見なされます。</target>
        </trans-unit>
        <trans-unit id="5e8518f5d3524cb6abc645f41c2a0b56e1cd3a61" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.connectStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment start time is given. If a persistent connection is used, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.connectStart&lt;/code&gt; 読み取り専用プロパティは、接続を開く要求がネットワークに送信されるUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。トランスポート層がエラーを報告し、接続の確立が再度開始された場合、最後の接続確立開始時刻が示されます。永続的な接続が使用されている場合、値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="ac255ec52b31ad62e317bef3cb4616880f070f84" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domComplete&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'complete'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domComplete&lt;/code&gt; は読み取り専用のプロパティが返す &lt;code&gt;unsigned long long&lt;/code&gt; 型パーサがその時にあるメイン文書、上の作業が終わったら、UNIXエポックからのミリ秒で、瞬間を表す&lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;に変わり &lt;code&gt;'complete'&lt;/code&gt; と対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされます。</target>
        </trans-unit>
        <trans-unit id="f464d3a9b36a7555db972e109e729df0662b306a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domContentLoadedEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in milliseconds since the UNIX epoch, right after all the scripts that need to be executed as soon as possible, in order or not, has been executed.</source>
          <target state="translated">レガシーの &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domContentLoadedEventEnd&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。可能な限り早く実行する必要があるすべてのスクリプトが実行された直後に実行されます。</target>
        </trans-unit>
        <trans-unit id="118852e6cd5d77518b33a873ce86e3ef63d53f22" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domContentLoadedEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, right before the parser sent the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; event, that is right after all the scripts that need to be executed right after parsing has been executed.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domContentLoadedEventStart&lt;/code&gt; 読み取り専用プロパティは、パーサーが &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; イベントを送信する直前の、UNIXエポックからの瞬間をミリ秒単位で表す、 &lt;code&gt;unsigned long long&lt;/code&gt; 返します。これは、解析直後に実行する必要のあるすべてのスクリプトの直後です。実行されました。</target>
        </trans-unit>
        <trans-unit id="c7bf348d5e545c8dee00a32759e591a7412fc209" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domInteractive&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'interactive'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domInteractive&lt;/code&gt; は読み取り専用のプロパティが返す &lt;code&gt;unsigned long long&lt;/code&gt; 型パーサがその時にあるメイン文書、上の作業が終わったら、UNIXエポックからのミリ秒で、瞬間を表す&lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;への変更 &lt;code&gt;'interactive'&lt;/code&gt; と対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされます。</target>
        </trans-unit>
        <trans-unit id="03dfd3ffba9e555ad75bac281e9a2e746728a5c4" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domLoading&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser started its work, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'loading'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domLoading&lt;/code&gt; 読み取り専用プロパティは、パーサーが作業を開始したとき、つまり&lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'loading'&lt;/code&gt; に変化し、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントが発生したときの、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。投げた。</target>
        </trans-unit>
        <trans-unit id="d608e73cb2b1f6a7e9fe499082775a5dd0b0d623" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domainLookupEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レガシーの &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domainLookupEnd&lt;/code&gt; 読み取り専用プロパティは、ドメインのルックアップが終了したUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。永続的な接続が使用されている場合、または情報がキャッシュまたはローカルリソースに格納されている場合、値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="adf40546d2d607c3a1be0c577385207611bcc1ec" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domainLookupStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domainLookupStart&lt;/code&gt; 読み取り専用プロパティは、ドメインルックアップが開始されるUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。永続的な接続が使用されている場合、または情報がキャッシュまたはローカルリソースに格納されている場合、値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="ee2a8b4fb6a44cb3f9127070711872c829f618bd" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.fetchStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the browser is ready to fetch the document using an HTTP request. This moment is &lt;em&gt;before&lt;/em&gt; the check to any application cache.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.fetchStart&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位の &lt;code&gt;unsigned long long&lt;/code&gt; 表すunsigned long longを返し、ブラウザーはHTTPリクエストを使用してドキュメントをフェッチする準備ができています。この瞬間は、アプリケーションキャッシュのチェックの&lt;em&gt;前&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="cb673292bb1c1718569717750f71aa718fdfc0d4" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.loadEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.loadEventEnd&lt;/code&gt; 読み取り専用プロパティは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントハンドラーが終了したとき、つまり、ロードイベントが完了したときの、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。このイベントがまだ送信されていないか、まだ完了していない場合は、 &lt;code&gt;0.&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="d605e5d9b460554f7b34223da6b5c6fa81d776b2" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.loadEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event was sent for the current document. If this event has not yet been sent, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.loadEventStart&lt;/code&gt; 読み取り専用プロパティは、現在のドキュメントに対して &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントが送信された瞬間を、UNIXエポックからのミリ秒単位で表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。このイベントがまだ送信されていない場合は、 &lt;code&gt;0.&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="cb18e8242f4599f9e6e56706171236c04003fc27" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.navigationStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, right after the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.navigationStart&lt;/code&gt; 読み取り専用プロパティは、同じ参照コンテキストで前のドキュメントでアンロードのプロンプトが終了した直後の、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。以前のドキュメントがない場合、この値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="71ea8521182e56178fca35d3d97284c7e660d2c9" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectEnd&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位で、最後のHTTPリダイレクトが完了した瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。つまり、HTTP応答の最後のバイトが受信されたときです。リダイレクトがない場合、またはリダイレクトの1つが同じオリジンでない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="be97e9a3c9498cb11974bb502b92e931ff7d7ca2" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectStart&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位で、最初のHTTPリダイレクトが開始する瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。リダイレクトがない場合、またはリダイレクトの1つが同じオリジンでない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c2ee882c39baa6766799112f8d4f188d261ec2df" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.requestStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.</source>
          <target state="translated">レガシーの &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.requestStart&lt;/code&gt; 読み取り専用プロパティは、ブラウザーがサーバーまたはキャッシュから実際のドキュメントを取得するリクエストを送信したときの、UNIXエポックからのミリ秒単位の &lt;code&gt;unsigned long long&lt;/code&gt; 表すunsigned long longを返します。要求の開始後にトランスポート層で障害が発生し、接続が再開された場合、このプロパティは新しい要求に対応する時間に設定されます。</target>
        </trans-unit>
        <trans-unit id="161423cb0f8696c0a1f22f2f2509456ff7852724" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.responseEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the browser received the last byte of the response, or when the connection is closed if this happened first, from the server from a cache or from a local resource.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.responseEnd&lt;/code&gt; 読み取り専用プロパティは、ブラウザーが応答の最後のバイトを受信したとき、またはこれが最初に発生した場合にサーバーから接続が閉じられたときの、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。キャッシュまたはローカルリソースから。</target>
        </trans-unit>
        <trans-unit id="995636fd3adbd5e1e1bf4c159a6e0d6cecc105ee" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.responseStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment in time (in milliseconds since the UNIX epoch) when the browser received the first byte of the response from the server, cache, or local resource.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.responseStart&lt;/code&gt; 読み取り専用プロパティは、ブラウザーがサーバー、キャッシュ、またはローカルリソースから応答の最初のバイトを受信した瞬間（UNIXエポックからのミリ秒）を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3391ab6e530362c3c546a8edb123c7074511744a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.secureConnectionStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the secure connection handshake starts. If no such connection is requested, it returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.secureConnectionStart&lt;/code&gt; 読み取り専用プロパティは、安全な接続ハンドシェイクが開始されるUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。そのような接続が要求されていない場合は、 &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e978baf26aacb3860584a49e53518cf8203dc79a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.unloadEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.unloadEventEnd&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位で、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベントハンドラーが終了する瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。前のドキュメントがない場合、または前のドキュメント、または必要なリダイレクトの1つが同じ生成元でない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1c346cfcad772624e21c3caae0f1ba82de16086e" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.unloadEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event has been thrown. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.unloadEventStart&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位で &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベントがスローされた瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。前のドキュメントがない場合、または前のドキュメント、または必要なリダイレクトの1つが同じ生成元でない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a09c9e0ff5b7eff186935e496eb51661102e5db9" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;PerformanceNavigation&lt;/code&gt; interface represents information about how the navigation to the current document was done.</source>
          <target state="translated">従来の &lt;code&gt;PerformanceNavigation&lt;/code&gt; インターフェイスは、現在のドキュメントへのナビゲーションがどのように行われたかに関する情報を表します。</target>
        </trans-unit>
        <trans-unit id="03cf84e2a1418f35c66f1abc2a0ea73dfbc1221b" translate="yes" xml:space="preserve">
          <source>The legacy miscelleanous encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16be'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16le'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;'x-user-defined'&lt;/code&gt;.</source>
          <target state="translated">従来のその他のエンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16be'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16le'&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;'x-user-defined'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="107e2f36965d453dab08ad335ad94a668a4f286b" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Chinese (simplified) encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GBK&quot;&gt;'gbk'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GB_18030&quot;&gt;'gb18030'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HZ_(character_encoding)&quot;&gt;'hz-gb-2312'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のマルチバイト中国語（簡体字）エンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GBK&quot;&gt;'gbk'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GB_18030&quot;&gt;'gb18030'&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HZ_(character_encoding)&quot;&gt;'hz-gb-2312'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a8a5835a2e8a1f5ec7e27d5bae3f4d80218d0e9" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Chinese (traditional) encoding: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Big5&quot;&gt;'big5'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のマルチバイト中国語（伝統的）エンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Big5&quot;&gt;'big5'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f451bd6ace68cc71d8226268b330cdb99242f9f" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Japanese encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP&quot;&gt;'euc-jp'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP&quot;&gt;'iso-2022-jp'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shift%20JIS&quot;&gt;'shift-jis'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のマルチバイト日本語エンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP&quot;&gt;'euc-jp'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP&quot;&gt;'iso-2022-jp'&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shift%20JIS&quot;&gt;'shift-jis'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2776496780c85245ee819a70dbb614637574ce6" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Korean encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR&quot;&gt;'euc-kr'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR&quot;&gt;'iso-2022-kr'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のマルチバイト韓国語エンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR&quot;&gt;'euc-kr'&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR&quot;&gt;'iso-2022-kr'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="992cfc9bc19b3fba8793b0bb64fa18ad6effc447" translate="yes" xml:space="preserve">
          <source>The legacy single-byte encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_page_866&quot;&gt;'ibm866'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-2&quot;&gt;'iso-8859-2'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-3&quot;&gt;'iso-8859-3'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-4&quot;&gt;'iso-8859-4'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-5&quot;&gt;'iso-8859-5'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-6&quot;&gt;'iso-8859-6'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-7&quot;&gt;'iso-8859-7'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-8&quot;&gt;'iso-8859-8'&lt;/a&gt;'&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8859-8-I&quot;&gt;'iso-8859-8i'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-10&quot;&gt;'iso-8859-10'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-13&quot;&gt;'iso-8859-13'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-14&quot;&gt;'iso-8859-14'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-15&quot;&gt;'iso-8859-15'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-16&quot;&gt;'iso-8859-16'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-R&quot;&gt;'koi8-r'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-U&quot;&gt;'koi8-u'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mac%20OS%20Roman&quot;&gt;'macintosh'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-874&quot;&gt;'windows-874'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1250&quot;&gt;'windows-1250'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1251&quot;&gt;'windows-1251'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1252&quot;&gt;'windows-1252'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1253&quot;&gt;'windows-1253'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1254&quot;&gt;'windows-1254'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1255&quot;&gt;'windows-1255'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1256&quot;&gt;'windows-1256'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1257&quot;&gt;'windows-1257'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1258&quot;&gt;'windows-1258'&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Macintosh%20Cyrillic%20encoding&quot;&gt;'x-mac-cyrillic'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のシングルバイトエンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_page_866&quot;&gt;'ibm866'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-2&quot;&gt;'iso-8859-2'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-3&quot;&gt;'iso-8859-3'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-4&quot;&gt;'iso-8859-4'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-5&quot;&gt;'iso-8859-5'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-6&quot;&gt;'iso-8859-6'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-7&quot;&gt;'iso-8859-7'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-8&quot;&gt;'iso-8859-8'&lt;/a&gt;'&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8859-8-I&quot;&gt;'iso-8859-8i'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-10&quot;&gt;'iso-8859-10'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-13&quot;&gt;'iso-8859-13'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-14&quot;&gt;'iso-8859-14'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-15&quot;&gt;'iso-8859-15'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-16&quot;&gt;'iso-8859-16'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-R&quot;&gt;'koi8-r'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-U&quot;&gt;'koi8-u'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mac%20OS%20Roman&quot;&gt;'macintosh'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-874&quot;&gt;'windows-874'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1250&quot;&gt;'windows-1250'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1251&quot;&gt;'windows-1251'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1252&quot;&gt;'windows-1252'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1253&quot;&gt;'windows-1253'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1254&quot;&gt;'windows-1254'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1255&quot;&gt;'windows-1255'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1256&quot;&gt;'windows-1256'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1257&quot;&gt;'windows-1257'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1258&quot;&gt;'windows-1258'&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Macintosh%20Cyrillic%20encoding&quot;&gt;'x-mac-cyrillic'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3573556a9ad431ddcfbdd8000f2d7338da0ca8fc" translate="yes" xml:space="preserve">
          <source>The length of time in milliseconds that the animation's effects will run. This is equal to the &lt;a href=&quot;../effecttiming/duration&quot;&gt;iteration duration&lt;/a&gt; multiplied by the &lt;a href=&quot;../effecttiming/iterations&quot;&gt;iteration count&lt;/a&gt;.</source>
          <target state="translated">アニメーションの効果が実行される時間（ミリ秒）。これは、&lt;a href=&quot;../effecttiming/duration&quot;&gt;反復期間&lt;/a&gt;に&lt;a href=&quot;../effecttiming/iterations&quot;&gt;反復カウントを&lt;/a&gt;掛けたものに等しい。</target>
        </trans-unit>
        <trans-unit id="5862e03466770c37062a2f977ebc77f035c1474d" translate="yes" xml:space="preserve">
          <source>The length of time, in milliseconds, to wait between tones. The browser will enforce a minimum value of 30 ms (that is, if you specify a lower value, 30 ms will be used instead); the default is 70 ms.</source>
          <target state="translated">音が鳴るまでの待ち時間をミリ秒単位で指定します。ブラウザは最小値として 30 ms を強制します (これより低い値を指定した場合は 30 ms が代わりに使用されます)。</target>
        </trans-unit>
        <trans-unit id="0111f2ae0e188a0206cb4c68143ee4ad23564f60" translate="yes" xml:space="preserve">
          <source>The letters A-D</source>
          <target state="translated">A-Dの文字</target>
        </trans-unit>
        <trans-unit id="62c01630e4e7a2c34fddf0b6ea92c9b52e9bb15b" translate="yes" xml:space="preserve">
          <source>The level of the ambient light in &lt;a href=&quot;https://en.wikipedia.org/wiki/lux&quot;&gt;lux&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/lux&quot;&gt;ルクス単位&lt;/a&gt;の環境光のレベル。</target>
        </trans-unit>
        <trans-unit id="5d20631ddcf8499c56ada461011dd7fb5e5aa65c" translate="yes" xml:space="preserve">
          <source>The lifetime of a service worker registration is beyond that of the &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; objects that represent them within the lifetime of their corresponding service worker clients. The browser maintains a persistent list of active &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; objects.</source>
          <target state="translated">Service Worker登録のライフタイムは、対応するService Workerクライアントのライフタイム内でそれらを表す &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; オブジェクトのライフタイムを超えています。ブラウザは、アクティブな &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; オブジェクトの永続的なリストを維持します。</target>
        </trans-unit>
        <trans-unit id="45f0e24c51a82152e5c4cc0b26a57a9b47fb7fe9" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;let [kind, type, direction] = device.kind.match(/(\w+)(input|output)/i);&lt;/code&gt; deserves special notice. This uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt; (a new feature of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla&quot;&gt;ECMAScript 6&lt;/a&gt;) to assign the values of the first three items in the array returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt;&lt;code&gt;String.match()&lt;/code&gt;&lt;/a&gt; to the variables &lt;code&gt;kind&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;direction&lt;/code&gt;. We do this because the value of &lt;a href=&quot;../mediadeviceinfo/kind&quot;&gt;&lt;code&gt;MediaDeviceInfo.kind&lt;/code&gt;&lt;/a&gt; is a single string that includes both the media type and the direction the media flows, such as &quot;audioinput&quot; or &quot;videooutput&quot;. This line, then, pulls out the type (&quot;audio&quot; or &quot;video&quot;) and direction (&quot;input&quot; or &quot;output&quot;) so they can be used to construct the string displayed in the list.</source>
          <target state="translated">行 &lt;code&gt;let [kind, type, direction] = device.kind.match(/(\w+)(input|output)/i);&lt;/code&gt; 特別な注意が必要です。これは、構造化&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;割り当て&lt;/a&gt;（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla&quot;&gt;ECMAScript 6の&lt;/a&gt;新機能）を使用して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt; &lt;code&gt;String.match()&lt;/code&gt; &lt;/a&gt;によって返された配列の最初の3つの項目の値を変数 &lt;code&gt;kind&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、および &lt;code&gt;direction&lt;/code&gt; に割り当てます。&lt;a href=&quot;../mediadeviceinfo/kind&quot;&gt; &lt;code&gt;MediaDeviceInfo.kind&lt;/code&gt; &lt;/a&gt;の値が「audioinput」や「videooutput」など、メディアタイプとメディアフローの方向の両方を含む単一の文字列です。次に、この行はタイプ（「オーディオ」または「ビデオ」）および方向（「入力」または「出力」）を引き出し、リストに表示される文字列を作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="477ed0b11b70ecb616e18cd2d328c9322fbe0907" translate="yes" xml:space="preserve">
          <source>The line begins at (30, 50) and ends at (150, 100).</source>
          <target state="translated">(30,50)で始まり、(150,100)で終わるラインです。</target>
        </trans-unit>
        <trans-unit id="37afa4f4a4e5a0440375bf5c79eeec6928c43daf" translate="yes" xml:space="preserve">
          <source>The line height is the height of the first line of the cue as it appears on the video</source>
          <target state="translated">ラインの高さは、ビデオに表示されるキューの最初のラインの高さです。</target>
        </trans-unit>
        <trans-unit id="a35b61b88bc9c4a13be7c851bb1aa48c22507f5f" translate="yes" xml:space="preserve">
          <source>The line number in the document or worker at which the violation occurred.</source>
          <target state="translated">違反が発生した文書またはワーカーの行番号。</target>
        </trans-unit>
        <trans-unit id="ef5b420f030b6e7986aba8ce5f7fdd36c3e3b8af" translate="yes" xml:space="preserve">
          <source>The line number of the script file on which the error occurred.</source>
          <target state="translated">エラーが発生したスクリプトファイルの行番号。</target>
        </trans-unit>
        <trans-unit id="092a475fe70500fefe52960a23f4d3ec27b6a092" translate="yes" xml:space="preserve">
          <source>The line on the left uses the default &lt;code&gt;&quot;butt&quot;&lt;/code&gt; option. It's drawn completely flush with the guides. The second is set to use the &lt;code&gt;&quot;round&quot;&lt;/code&gt; option. This adds a semicircle to the end that has a radius half the width of the line. The line on the right uses the &lt;code&gt;&quot;square&quot;&lt;/code&gt; option. This adds a box with an equal width and half the height of the line thickness.</source>
          <target state="translated">左側の線はデフォルトの &lt;code&gt;&quot;butt&quot;&lt;/code&gt; オプションを使用しています。ガイドと完全に同じ高さに描かれています。2番目は、 &lt;code&gt;&quot;round&quot;&lt;/code&gt; オプションを使用するように設定されています。これにより、線の幅の半分の半径を持つ半円が端に追加されます。右側の線は &lt;code&gt;&quot;square&quot;&lt;/code&gt; オプションを使用しています。これにより、同じ太さと線の太さの半分の高さのボックスが追加されます。</target>
        </trans-unit>
        <trans-unit id="b0645312db6f85fd07e3d592af78842c6105586d" translate="yes" xml:space="preserve">
          <source>The line on the left uses the default &lt;code&gt;butt&lt;/code&gt; option. You'll notice that it's drawn completely flush with the guides. The second is set to use the &lt;code&gt;round&lt;/code&gt; option. This adds a semicircle to the end that has a radius half the width of the line. The line on the right uses the &lt;code&gt;square&lt;/code&gt; option. This adds a box with an equal width and half the height of the line thickness.</source>
          <target state="translated">左側の線はデフォルトの &lt;code&gt;butt&lt;/code&gt; オプションを使用しています。あなたはそれが完全にガイドと同じ高さに描かれていることに気付くでしょう。2番目は、 &lt;code&gt;round&lt;/code&gt; オプションを使用するように設定されています。これにより、線の幅の半分の半径を持つ半円が端に追加されます。右側の線は &lt;code&gt;square&lt;/code&gt; オプションを使用しています。これにより、同じ太さと線の太さの半分の高さのボックスが追加されます。</target>
        </trans-unit>
        <trans-unit id="13a263019ac0aaa3ee14c6b3a09d74fcc05aca0e" translate="yes" xml:space="preserve">
          <source>The line width is the thickness of the stroke centered on the given path. In other words, the area that's drawn extends to half the line width on either side of the path. Because canvas coordinates do not directly reference pixels, special care must be taken to obtain crisp horizontal and vertical lines.</source>
          <target state="translated">線幅は、与えられたパスを中心としたストロークの太さです。言い換えれば、描かれた領域はパスの両側の線幅の半分まで広がっているということになります。キャンバス座標は直接ピクセルを参照しないので、鮮明な水平線と垂直線を得るためには特別な注意が必要です。</target>
        </trans-unit>
        <trans-unit id="7d4d358573d94c8aafa5daa3567d2132ed11770a" translate="yes" xml:space="preserve">
          <source>The lines are separated by semi-colons, just like in JavaScript.</source>
          <target state="translated">行の区切りはJavaScriptと同じようにセミコロンで区切っています。</target>
        </trans-unit>
        <trans-unit id="02118de50ed60268754384b2c843ee4cf1c8e67e" translate="yes" xml:space="preserve">
          <source>The list of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats&quot;&gt;supported media formats&lt;/a&gt; varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats&quot;&gt;サポートされるメディア形式&lt;/a&gt;のリストは、ブラウザによって異なります。関連するすべてのブラウザがサポートする単一の形式でビデオを提供するか、サポートする必要のあるすべてのブラウザがカバーされる十分に異なる形式で複数のビデオソースを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="e1693d38a2f7928031b482f2ef043dde59e03fc2" translate="yes" xml:space="preserve">
          <source>The list of available style sheet sets is constructed by enumerating all the style sheets available for the document, in the order in which they're listed in the &lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt;&lt;code&gt;document.styleSheets&lt;/code&gt;&lt;/a&gt; attribute, adding the &lt;code&gt;title&lt;/code&gt; of each style sheet that has a title to the list. Duplicates are dropped from the list (using a case-sensitive comparison).</source>
          <target state="translated">使用可能なスタイルシートセットのリストは、ドキュメントで使用可能なすべてのスタイルシートを、&lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt; &lt;code&gt;document.styleSheets&lt;/code&gt; &lt;/a&gt;属性にリストされている順に列挙し、リストに &lt;code&gt;title&lt;/code&gt; ある各スタイルシートのタイトルを追加することによって構築されます。。重複はリストから削除されます（大文字と小文字を区別する比較を使用）。</target>
        </trans-unit>
        <trans-unit id="d263f9f26ecf473c5a3d74ba8cf9500edc40b3e4" translate="yes" xml:space="preserve">
          <source>The list of constraints specified is empty, or has all constraints set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された制約のリストが空であるか、すべての制約が &lt;code&gt;false&lt;/code&gt; に設定されています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
