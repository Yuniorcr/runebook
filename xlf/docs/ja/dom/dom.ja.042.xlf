<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="6d42db4e52860f4ead259f65637e71188bd202ac" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;autoGainControl&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;autoGainControl&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="8c5e9e107dee7213cf8c57cd2be716f4f859af3a" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;channelCount&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;channelCount&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="dc5824ab2d86f2b88683d467ee2d3003fe40d00e" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;deviceId&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;deviceId&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="60e379d453b06b79d12a65692a7a13c1afe34f14" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;echoCancellation&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;echoCancellation&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="697201ca1ca991ad2b86a68c40a0b7faa9cb29cb" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;facingMode&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;facingMode&lt;/code&gt; しているモードの制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="734276e1f14b7d71217130642ed1676246030189" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;groupId&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;groupId&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="0ebf1e47aaf9bd21166cb95d392dd955dd94fef0" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;height&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;height&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="d23eae8ca7e32798111dae8df0cabb6380d51d1c" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;latency&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;latency&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="4ec81f7de0e0e059a544b1899af3640f27fabc89" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;noiseSuppression&lt;/code&gt; constraint (and therefore supports noise suppression on audio tracks). If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;noiseSuppression&lt;/code&gt; 制約をサポートしている（したがってオーディオトラックのノイズ抑制をサポートしている）場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="5bcdd50ca4387b396fa9e5c24b1b67fe8b36a53c" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;sampleRate&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;sampleRate&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="d3835841fc88e3c64519e7d77ece6ce17adc3afd" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;sampleSize&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;sampleSize&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="acb3a5df52df071e3319c94810a7e2ef7fac4d28" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;volume&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;volume&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="c288fc594a33b465170719711c30b5df98dcb042" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;width&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;width&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="74b07b7d3e71a8398f706ef18075bfaeadce2a91" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary if the user agent supports the &lt;code&gt;frameRate&lt;/code&gt; constraint. If the property isn't present, the user agent doesn't allow specifying limits on the frame rate for video tracks.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;frameRate&lt;/code&gt; 制約をサポートする場合、このプロパティはディクショナリに存在します。このプロパティが存在しない場合、ユーザーエージェントはビデオトラックのフレームレートに制限を指定することを許可しません。</target>
        </trans-unit>
        <trans-unit id="4dcacc4a4724348fd71428af08d5e599771c9084" translate="yes" xml:space="preserve">
          <source>This property is provided to allow differentiation in the case that some voice options are provided by a remote service; it is possible that remote voices might have extra latency, bandwidth or cost associated with them, so such distinction may be useful.</source>
          <target state="translated">このプロパティは、いくつかの音声オプションがリモートサービスによって提供されている場合に区別できるようにするために提供される。</target>
        </trans-unit>
        <trans-unit id="5d4b21c636e020678646ed56c588aa641c0589fd" translate="yes" xml:space="preserve">
          <source>This property is read-only for CSS Animations and Transitions.</source>
          <target state="translated">このプロパティは、CSSアニメーションとトランジションの読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="95895244dc62cc80e0b1eed2274c28767c3c4547" translate="yes" xml:space="preserve">
          <source>This property is read-only in Firefox, Opera, Google Chrome, and Safari, and it is read/write in Internet Explorer.</source>
          <target state="translated">このプロパティは、Firefox、Opera、Google Chrome、Safariでは読み取り専用で、Internet Explorerでは読み書き可能です。</target>
        </trans-unit>
        <trans-unit id="83f2b3407bdc4d1b3cf60f6c16fa247c6f41c02d" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
          <target state="translated">このプロパティは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="e31e411d3c5a6a694fd65d589fb6971233e1feb6" translate="yes" xml:space="preserve">
          <source>This property is read-only. To change the ancestor container of a &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;, consider using the various methods to set the start and end positions of the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは読み取り専用です。&lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;祖先コンテナを変更するには、さまざまなメソッドを使用して&lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; の&lt;/a&gt;開始位置と終了位置を設定することを検討してください。</target>
        </trans-unit>
        <trans-unit id="2c4d1ed332499a8ce1041e85c1fd12c42390663c" translate="yes" xml:space="preserve">
          <source>This property is read-only; it has no default value.</source>
          <target state="translated">このプロパティは読み取り専用で、デフォルト値はありません。</target>
        </trans-unit>
        <trans-unit id="6402b776208cc5d5c488f439b2cfa5265f0c5453" translate="yes" xml:space="preserve">
          <source>This property is still available, but via the inheritance of &lt;code&gt;AudioScheduledSourceNode&lt;/code&gt;.</source>
          <target state="translated">このプロパティは引き続き使用できますが、 &lt;code&gt;AudioScheduledSourceNode&lt;/code&gt; の継承を介します。</target>
        </trans-unit>
        <trans-unit id="d1c87e721f6a209e48a58b65fb29381239108060" translate="yes" xml:space="preserve">
          <source>This property is supported in Firefox 48 but is read-only. It became writable in Firefox 49.</source>
          <target state="translated">このプロパティは Firefox 48 でサポートされていますが、読み取り専用です。Firefox 49 で書き込み可能になりました。</target>
        </trans-unit>
        <trans-unit id="19b159010922affcd177160c35725afd2f5069c5" translate="yes" xml:space="preserve">
          <source>This property is supported in Firefox 48 but is read-only. It became writable in Firefox 51.</source>
          <target state="translated">このプロパティは Firefox 48 でサポートされていますが、読み取り専用です。Firefox 51 で書き込み可能になりました。</target>
        </trans-unit>
        <trans-unit id="5a3ed342f03e25324b1701f1cb8d552a318dc7c6" translate="yes" xml:space="preserve">
          <source>This property is the angle (in degrees) between the &lt;em&gt;X-Z plane&lt;/em&gt; of the pointer and the screen. This property is typically only useful for a pen/stylus pointer type. The range of values is -90 to 90 degrees and a positive value is a tilt toward the user. For devices that do not support this property, the value is 0.</source>
          <target state="translated">このプロパティは、ポインターの&lt;em&gt;XZ平面&lt;/em&gt;と画面の間の角度（度単位）です。このプロパティは通常、ペン/スタイラスポインタタイプに対してのみ役立ちます。値の範囲は-90〜90度で、正の値はユーザーへの傾きです。このプロパティをサポートしないデバイスの場合、値は0です。</target>
        </trans-unit>
        <trans-unit id="f1474084533411d1aa5d1b284d922a25a26e16f1" translate="yes" xml:space="preserve">
          <source>This property is the angle (in degrees) between the &lt;em&gt;Y-Z plane&lt;/em&gt; of the pointer and the screen. This property is typically only useful for a pen/stylus pointer type. The range of values is -90 to 90 degrees and a positive value means a tilt to the right. For devices that do not support this property, the value is 0.</source>
          <target state="translated">このプロパティは、ポインタの&lt;em&gt;YZ平面&lt;/em&gt;と画面の間の角度（度単位）です。このプロパティは通常、ペン/スタイラスポインタタイプに対してのみ役立ちます。値の範囲は-90〜90度で、正の値は右への傾きを意味します。このプロパティをサポートしないデバイスの場合、値は0です。</target>
        </trans-unit>
        <trans-unit id="015d4dda4274f4cb0a0dbe93e9d61ce8b0e939bd" translate="yes" xml:space="preserve">
          <source>This property is unaffected by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt; &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="aaf81af914794eeebcb05ea716589a6aaa8a03a5" translate="yes" xml:space="preserve">
          <source>This property is unsupported prior to IE9, and also in IE9 &amp;amp; Safari &lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentFragment&lt;/code&gt; objects don't have it.</source>
          <target state="translated">このプロパティはIE9以前ではサポートされていません。また、IE9とSafari &lt;code&gt;Document&lt;/code&gt; でも、 &lt;code&gt;DocumentFragment&lt;/code&gt; オブジェクトにはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="2d37f23a9596165bc758d7b5956cdfa3aa4900f3" translate="yes" xml:space="preserve">
          <source>This property is unsupported prior to IE9, so the following snippet can be used to add support to IE8:</source>
          <target state="translated">このプロパティはIE9以前ではサポートされていないので、以下のスニペットを使用してIE8にサポートを追加することができます。</target>
        </trans-unit>
        <trans-unit id="d6da825773b7cec20120ffdd059bf5cd0bf3bb0c" translate="yes" xml:space="preserve">
          <source>This property is used when there are multiple possible targets for the ending resource, like when the parent document is a mlti-frame HTML or XHTML document.</source>
          <target state="translated">このプロパティは、親文書が mlti-frame HTML や XHTML 文書である場合のように、エンディングリソースの対象が複数ある場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="813f9d515aaf00f98f26d1c42646bd8b495e7bd3" translate="yes" xml:space="preserve">
          <source>This property is useful for determining if position data has been updated, and what order updates have occured in.</source>
          <target state="translated">このプロパティは、位置データが更新されたかどうか、どのような順序で更新されたかを判断するのに便利です。</target>
        </trans-unit>
        <trans-unit id="94fbbdfc37fef6f991b7067442f87a92482f4eef" translate="yes" xml:space="preserve">
          <source>This property is useful for games and other apps that use pixel art. When enlarging images, the default resizing algorithm will blur the pixels. Set this property to &lt;code&gt;false&lt;/code&gt; to retain the pixels' sharpness.</source>
          <target state="translated">このプロパティは、ピクセルアートを使用するゲームやその他のアプリで役立ちます。画像を拡大するとき、デフォルトのサイズ変更アルゴリズムはピクセルをぼかします。ピクセルのシャープネスを保持するには、このプロパティを &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="82e5b0c9a24ebca8b94a5543768049be69adf35a" translate="yes" xml:space="preserve">
          <source>This property is useful when you want to handle keys based on their physical positions on the input device rather than the characters associated with those keys; this is especially common when writing code to handle input for games which simulate a gamepad-like environment using keys on the keyboard. Be aware, however, that you can't use the value reported by &lt;code&gt;KeyboardEvent.code&lt;/code&gt; to determine the character generated by the keystroke, because the keycode's name may not match the actual character that's printed on the key or that's generated by the computer when the key is pressed.</source>
          <target state="translated">このプロパティは、キーに関連付けられている文字ではなく、入力デバイス上の物理的な位置に基づいてキーを処理する場合に役立ちます。これは、キーボードのキーを使用してゲームパッドのような環境をシミュレートするゲームの入力を処理するコードを書くときに特に一般的です。ただし、 &lt;code&gt;KeyboardEvent.code&lt;/code&gt; によって報告された値を使用して、キーストロークによって生成された文字を判別することはできません。キーコードの名前は、キーに印刷されている実際の文字、またはキーが押されました。</target>
        </trans-unit>
        <trans-unit id="927ac0014207087bc108c291726c89f118e0115d" translate="yes" xml:space="preserve">
          <source>This property now always returns 2 (&lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt;).</source>
          <target state="translated">このプロパティは常に2を返すようになりました（ &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="70f0891c44f5b2021ccb6faa4412d425c437f130" translate="yes" xml:space="preserve">
          <source>This property now always returns &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">このプロパティは常に &lt;code&gt;NULL&lt;/code&gt; を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="f5f9cdeebd9631b1b9b19ab1e32701b40a0bf27c" translate="yes" xml:space="preserve">
          <source>This property now always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このプロパティは常に &lt;code&gt;true&lt;/code&gt; を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="94b947c2eddcccb3c8d162d3e70fc27aea997251" translate="yes" xml:space="preserve">
          <source>This property now always returns an empty &lt;a href=&quot;nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは常に空の&lt;a href=&quot;nodelist&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; を&lt;/a&gt;返すようになりました。</target>
        </trans-unit>
        <trans-unit id="084f9b03b5382a2f82196fd98bc6453cf586b436" translate="yes" xml:space="preserve">
          <source>This property only guarantees to indicate which buttons are pressed during events caused by pressing or releasing one or multiple buttons. As such, it is not reliable for events such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseenter&quot;&gt;mouseenter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave&quot;&gt;mouseleave&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseover&quot;&gt;mouseover&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseout&quot;&gt;mouseout&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousemove&quot;&gt;mousemove&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このプロパティは、1つまたは複数のボタンを押したり離したりすることによって発生したイベント中にどのボタンが押されたかを示すことだけを保証します。そのため、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseenter&quot;&gt;mouseenter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave&quot;&gt;mouseleave&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseover&quot;&gt;mouseover&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseout&quot;&gt;mouseout&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousemove&quot;&gt;mousemove&lt;/a&gt;&lt;/code&gt; などのイベントでは信頼できません。</target>
        </trans-unit>
        <trans-unit id="8427300ac2c1d08708449a32d77dea28f328f965" translate="yes" xml:space="preserve">
          <source>This property reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength&quot;&gt;pathLength&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="translated">このプロパティは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength&quot;&gt;pathLength&lt;/a&gt;&lt;/code&gt; 属性を反映します。</target>
        </trans-unit>
        <trans-unit id="239c827577110cf1a2717ba96647ebdfcf93fced" translate="yes" xml:space="preserve">
          <source>This property returns NULL is the current stylesheet is a top-level stylesheet or if stylesheet inclusion is not supported.</source>
          <target state="translated">このプロパティは、現在のスタイルシートがトップレベルのスタイルシートである場合、あるいはスタイルシートの包含がサポートされていない場合には NULL を返します。</target>
        </trans-unit>
        <trans-unit id="409ee4f93bb0ad68e84748222f73d9f24076fee9" translate="yes" xml:space="preserve">
          <source>This property returns a &lt;a href=&quot;svganimatedlength&quot;&gt;&lt;code&gt;SVGAnimatedLength&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cx&quot;&gt;cx&lt;/a&gt;&lt;/code&gt; attribute of the given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt;&lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">このプロパティは、指定された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt; &lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cx&quot;&gt;cx&lt;/a&gt;&lt;/code&gt; 属性を反映する&lt;a href=&quot;svganimatedlength&quot;&gt; &lt;code&gt;SVGAnimatedLength&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="4ff33a86a954020e48ce1521bb760ea255aa1cda" translate="yes" xml:space="preserve">
          <source>This property returns a &lt;a href=&quot;svganimatedlength&quot;&gt;&lt;code&gt;SVGAnimatedLength&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cy&quot;&gt;cy&lt;/a&gt;&lt;/code&gt; attribute of the given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt;&lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">このプロパティは、指定された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt; &lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cy&quot;&gt;cy&lt;/a&gt;&lt;/code&gt; 属性を反映する&lt;a href=&quot;svganimatedlength&quot;&gt; &lt;code&gt;SVGAnimatedLength&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="80c73f6f090c03b732d553b409fb8097af8c9d3b" translate="yes" xml:space="preserve">
          <source>This property returns a &lt;a href=&quot;svganimatedlength&quot;&gt;&lt;code&gt;SVGAnimatedLength&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx&quot;&gt;rx&lt;/a&gt;&lt;/code&gt; attribute of the given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt;&lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">このプロパティは、指定された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt; &lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/rx&quot;&gt;rx&lt;/a&gt;&lt;/code&gt; 属性を反映する&lt;a href=&quot;svganimatedlength&quot;&gt; &lt;code&gt;SVGAnimatedLength&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="fccbfc2a28aa5b961a9781151a7116e77a185a21" translate="yes" xml:space="preserve">
          <source>This property returns a &lt;a href=&quot;svganimatedlength&quot;&gt;&lt;code&gt;SVGAnimatedLength&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry&quot;&gt;ry&lt;/a&gt;&lt;/code&gt; attribute of the given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt;&lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">このプロパティは、指定された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse&quot;&gt; &lt;code&gt;&amp;lt;ellipse&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/ry&quot;&gt;ry&lt;/a&gt;&lt;/code&gt; 属性を反映する&lt;a href=&quot;svganimatedlength&quot;&gt; &lt;code&gt;SVGAnimatedLength&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="856bebf3240cfe00ea16bcd4c2c0400395effbb4" translate="yes" xml:space="preserve">
          <source>This property returns the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ApplicationCache&quot;&gt;&lt;code&gt;ApplicationCache&lt;/code&gt;&lt;/a&gt; object for the worker (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache&quot;&gt;Using the application cache&lt;/a&gt;).</source>
          <target state="translated">このプロパティは、ワーカーの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ApplicationCache&quot;&gt; &lt;code&gt;ApplicationCache&lt;/code&gt; &lt;/a&gt;オブジェクトを返します（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache&quot;&gt;アプリケーションキャッシュの使用を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="6e23dd71eaa61d10b0af89ea7f8c0987e938c2ce" translate="yes" xml:space="preserve">
          <source>This property sets the current line thickness. Values must be positive numbers. By default this value is set to 1.0 units.</source>
          <target state="translated">このプロパティは、現在の線の太さを設定します。値は正の数でなければなりません。デフォルトでは、この値は1.0単位に設定されています。</target>
        </trans-unit>
        <trans-unit id="82f2a61f5bd814a5c1ce127e80ccb188d7ff1b2e" translate="yes" xml:space="preserve">
          <source>This property should be set in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event to set the desired drag effect for the drag source. Within the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event handlers, this property will be set to whatever value was assigned during the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event, thus &lt;code&gt;effectAllowed&lt;/code&gt; may be used to determine which effect is permitted.</source>
          <target state="translated">このプロパティを &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベントで設定して、ドラッグソースに必要なドラッグ効果を設定する必要があります。内 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; イベントハンドラは、このプロパティは、中に割り当てられたどのような値に設定されます &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; 従って、イベント &lt;code&gt;effectAllowed&lt;/code&gt; が許可される効果を決定するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="9709ac679b0b06d406afba4253a52a0be00ef1d5" translate="yes" xml:space="preserve">
          <source>This property used to return &lt;code&gt;null&lt;/code&gt; if the domain of the document could not be identified, although this has now changed as of Firefox 62 &amp;mdash; see the discussion in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=819475&quot;&gt;bug 819475&lt;/a&gt;.</source>
          <target state="translated">ドキュメントのドメインを識別できなかった場合、このプロパティは &lt;code&gt;null&lt;/code&gt; を返していましたが、Firefox 62以降は変更されています。&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=819475&quot;&gt;バグ819475の&lt;/a&gt;説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="c4f0293c8410a36257ad7679b947b6ccf5b62038" translate="yes" xml:space="preserve">
          <source>This property was buggy and could give a wrong value before page load in certain circumstances, see &lt;a href=&quot;https://bugzil.la/641188&quot;&gt;bug 641188&lt;/a&gt;.</source>
          <target state="translated">このプロパティはバグがあり、特定の状況でページがロードされる前に誤った値を与える可能性があり&lt;a href=&quot;https://bugzil.la/641188&quot;&gt;ました&lt;/a&gt;。バグ641188を参照してください。</target>
        </trans-unit>
        <trans-unit id="7df84640bb9d0039d63c40f67b9da650451c530b" translate="yes" xml:space="preserve">
          <source>This property was hidden behind a pref because no other browsers support it (See &lt;a href=&quot;https://bugzil.la/1291515&quot;&gt;bug 1291515&lt;/a&gt;).</source>
          <target state="translated">このプロパティは、他のブラウザでサポートされていないため、設定の背後に隠されていました（&lt;a href=&quot;https://bugzil.la/1291515&quot;&gt;バグ1291515を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="61e6e3510025427ef6b63f13e0f1356d8b3bc697" translate="yes" xml:space="preserve">
          <source>This property was initially defined in the &lt;a href=&quot;../elementtraversal&quot;&gt;&lt;code&gt;ElementTraversal&lt;/code&gt;&lt;/a&gt; pure interface. As this interface contained two distinct set of properties, one aimed at &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; that have children, one at those that are children, they have been moved into two separate pure interfaces, &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt;. In this case, &lt;code&gt;childElementCount&lt;/code&gt; moved to &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt;. This is a fairly technical change that shouldn't affect compatibility.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;../elementtraversal&quot;&gt; &lt;code&gt;ElementTraversal&lt;/code&gt; の&lt;/a&gt;純粋なインターフェイスで最初に定義されました。このインターフェイスには2つの異なるプロパティセットが含まれていたため、1 &lt;a href=&quot;../parentnode&quot;&gt; &lt;code&gt;ParentNode&lt;/code&gt; &lt;/a&gt;を持つ&lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;を対象とし、もう1 つは子である&lt;a href=&quot;../childnode&quot;&gt; &lt;code&gt;ChildNode&lt;/code&gt; &lt;/a&gt;対象とするため、2つの個別の純粋なインターフェイス、ParentNodeおよびChildNodeに移動しました。この場合、 &lt;code&gt;childElementCount&lt;/code&gt; はParentNodeに移動し&lt;a href=&quot;../parentnode&quot;&gt; &lt;code&gt;ParentNode&lt;/code&gt; &lt;/a&gt;。これは、互換性に影響を与えてはならないかなり技術的な変更です。</target>
        </trans-unit>
        <trans-unit id="36fc9afe97d8697fb23d8d2d503ea7f6065b57ed" translate="yes" xml:space="preserve">
          <source>This property was initially defined in the &lt;a href=&quot;../elementtraversal&quot;&gt;&lt;code&gt;ElementTraversal&lt;/code&gt;&lt;/a&gt; pure interface. As this interface contained two distinct set of properties, one aimed at &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; that have children, one at those that are children, they have been moved into two separate pure interfaces, &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt;. In this case, &lt;code&gt;firstElementChild&lt;/code&gt; moved to &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt;. This is a fairly technical change that shouldn't affect compatibility.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;../elementtraversal&quot;&gt; &lt;code&gt;ElementTraversal&lt;/code&gt; の&lt;/a&gt;純粋なインターフェイスで最初に定義されました。このインターフェイスには2つの異なるプロパティセットが含まれていたため、1 &lt;a href=&quot;../parentnode&quot;&gt; &lt;code&gt;ParentNode&lt;/code&gt; &lt;/a&gt;を持つ&lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;を対象とし、もう1 つは子である&lt;a href=&quot;../childnode&quot;&gt; &lt;code&gt;ChildNode&lt;/code&gt; &lt;/a&gt;対象とするため、2つの個別の純粋なインターフェイスParentNodeおよびChildNodeに移動しました。この場合、 &lt;code&gt;firstElementChild&lt;/code&gt; はParentNodeに移動し&lt;a href=&quot;../parentnode&quot;&gt; &lt;code&gt;ParentNode&lt;/code&gt; &lt;/a&gt;。これは、互換性に影響を与えてはならないかなり技術的な変更です。</target>
        </trans-unit>
        <trans-unit id="498a1c10c28b724aad53e19357b54f59df0f5db0" translate="yes" xml:space="preserve">
          <source>This property was initially defined in the &lt;a href=&quot;../elementtraversal&quot;&gt;&lt;code&gt;ElementTraversal&lt;/code&gt;&lt;/a&gt; pure interface. As this interface contained two distinct set of properties, one aimed at &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; that have children, one at those that are children, they have been moved into two separate pure interfaces, &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt;. In this case, &lt;code&gt;lastElementChild&lt;/code&gt; moved to &lt;a href=&quot;../parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt;. This is a fairly technical change that shouldn't affect compatibility.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;../elementtraversal&quot;&gt; &lt;code&gt;ElementTraversal&lt;/code&gt; の&lt;/a&gt;純粋なインターフェイスで最初に定義されました。このインターフェイスには2つの異なるプロパティセットが含まれていたため、1 &lt;a href=&quot;../parentnode&quot;&gt; &lt;code&gt;ParentNode&lt;/code&gt; &lt;/a&gt;を持つ&lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;を対象とし、もう1 つは子である&lt;a href=&quot;../childnode&quot;&gt; &lt;code&gt;ChildNode&lt;/code&gt; &lt;/a&gt;対象とするため、2つの個別の純粋なインターフェイスParentNodeおよびChildNodeに移動しました。この場合、 &lt;code&gt;lastElementChild&lt;/code&gt; はParentNodeに移動し&lt;a href=&quot;../parentnode&quot;&gt; &lt;code&gt;ParentNode&lt;/code&gt; &lt;/a&gt;。これは、互換性に影響を与えてはならないかなり技術的な変更です。</target>
        </trans-unit>
        <trans-unit id="7e6d2cf53c86181ba8cb59acaf457688b265e69c" translate="yes" xml:space="preserve">
          <source>This property was never part of any standard, and was only implemented across a subset of browsers, and only for a limited number of versions. A standardized version of &lt;a href=&quot;../mouseevent/pagex&quot;&gt;&lt;code&gt;pageX&lt;/code&gt;&lt;/a&gt; was added to the &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; interface, however, and is well-supported. You should not expect to find &lt;code&gt;pageX&lt;/code&gt; on any non-mouse events. Do not look for &lt;code&gt;pageX&lt;/code&gt; on any non-mouse events in new code and update existing code as soon as possible.</source>
          <target state="translated">このプロパティは標準の一部ではなく、ブラウザのサブセット全体に実装され、限られた数のバージョンにのみ実装されていました。ただし、&lt;a href=&quot;../mouseevent/pagex&quot;&gt; &lt;code&gt;pageX&lt;/code&gt; &lt;/a&gt;の標準化されたバージョンが&lt;a href=&quot;../mouseevent&quot;&gt; &lt;code&gt;MouseEvent&lt;/code&gt; &lt;/a&gt;インターフェイスに追加され、十分にサポートされています。マウス以外のイベントで &lt;code&gt;pageX&lt;/code&gt; が見つかるとは思わないでください。新しいコードのマウス以外のイベントで &lt;code&gt;pageX&lt;/code&gt; を検索しないでください。できるだけ早く既存のコードを更新してください。</target>
        </trans-unit>
        <trans-unit id="9ee76df0d89348e37becc8e1139c5ef587f1c9ea" translate="yes" xml:space="preserve">
          <source>This property was on the &lt;code&gt;URLUtils&lt;/code&gt; mixin. It has been moved either to the &lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt; mixin, or directly on the interface.</source>
          <target state="translated">このプロパティは &lt;code&gt;URLUtils&lt;/code&gt; ミックスインにありました。 &lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt; ミックスイン、または直接インターフェースに移動されました。</target>
        </trans-unit>
        <trans-unit id="a8d0068a2856e39b87026653e6d4552c49995a6c" translate="yes" xml:space="preserve">
          <source>This property was originally specified in the Touch Events specification as a long integer, but was redefined in the CSSOM View Module to be a double-precision floating-point number to allow for subpixel precision. Even though numeric types both are represented by &lt;code&gt;Number&lt;/code&gt; in JavaScript, they may be handled differently internally in the browser's code, resulting in potential behavior differences. See &lt;a href=&quot;#Browser_compatibility&quot;&gt;Browser compatibility&lt;/a&gt; to learn which browsers have been updated to use the revised data type.</source>
          <target state="translated">このプロパティは、元はタッチイベント仕様で長整数として指定されていましたが、サブピクセル精度を可能にするためにCSSOMビューモジュールで倍精度浮動小数点数に再定義されました。数値型はどちらもJavaScriptでは &lt;code&gt;Number&lt;/code&gt; で表されますが、ブラウザーのコードでは内部的に異なる方法で処理される可能性があるため、動作が異なる可能性があります。改訂されたデータ型を使用するように更新されたブラウザーについては、&lt;a href=&quot;#Browser_compatibility&quot;&gt;ブラウザーの互換性&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c6d231d26eec187151a733eea7f417d54cd82c1d" translate="yes" xml:space="preserve">
          <source>This property was previously called &lt;code&gt;mediaType&lt;/code&gt;. The name was changed in the specification in February, 2018. See &lt;a href=&quot;#Browser_compatibility&quot;&gt;Browser compatibility&lt;/a&gt; below to determine how this affects the browsers you're targeting.</source>
          <target state="translated">このプロパティは、以前は &lt;code&gt;mediaType&lt;/code&gt; と呼ばれていました。この名前は、仕様で2018年2月に変更されました。ターゲットとするブラウザーにこれがどのように影響するかを確認するには、以下の&lt;a href=&quot;#Browser_compatibility&quot;&gt;ブラウザーの互換性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a5645a397105a0a4f38a19025f105a01dcff306c" translate="yes" xml:space="preserve">
          <source>This property will return &lt;code&gt;null&lt;/code&gt; on Internet Explorer (9) if the &lt;code&gt;style.position&lt;/code&gt; of the element itself is set to &lt;code&gt;&quot;fixed&quot;&lt;/code&gt;. (Having &lt;code&gt;display:none&lt;/code&gt; does not affect this browser.)</source>
          <target state="translated">要素自体の &lt;code&gt;style.position&lt;/code&gt; が &lt;code&gt;&quot;fixed&quot;&lt;/code&gt; に設定されている場合、このプロパティはInternet Explorer（9）で &lt;code&gt;null&lt;/code&gt; を返します。（ &lt;code&gt;display:none&lt;/code&gt; を指定しても、このブラウザには影響しません。）</target>
        </trans-unit>
        <trans-unit id="c7c58f60c023ae5748a8e052dff8a2dded4eac9f" translate="yes" xml:space="preserve">
          <source>This property will round the value to an integer. If you need a fractional value, use &lt;a href=&quot;../element/getboundingclientrect&quot;&gt;&lt;code&gt;element.getBoundingClientRect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、値を整数に丸めます。小数値が必要な場合は、&lt;a href=&quot;../element/getboundingclientrect&quot;&gt; &lt;code&gt;element.getBoundingClientRect()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="d3ba03f62683a1bb4b589eb1373063b126e9ea17" translate="yes" xml:space="preserve">
          <source>This property will round the value to an integer. If you need a fractional value, use &lt;a href=&quot;getboundingclientrect&quot;&gt;&lt;code&gt;Element.getBoundingClientRect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、値を整数に丸めます。小数値が必要な場合は、&lt;a href=&quot;getboundingclientrect&quot;&gt; &lt;code&gt;Element.getBoundingClientRect()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="5d55dd8c324e131b2568dd94d93b2c220313334f" translate="yes" xml:space="preserve">
          <source>This property will round the value to an integer. If you need a fractional value, use &lt;a href=&quot;getboundingclientrect&quot;&gt;&lt;code&gt;element.getBoundingClientRect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、値を整数に丸めます。小数値が必要な場合は、&lt;a href=&quot;getboundingclientrect&quot;&gt; &lt;code&gt;element.getBoundingClientRect()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="3519818e7bbddc699dabf67a4315949432c24708" translate="yes" xml:space="preserve">
          <source>This propoerty should be set to reference an event handler function to be called by the ICE agent when it discovers a new candidate pair that the &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; will be using for communication with the remote peer. This event will occur at least once, and may occur more than once if the ICE agent continues to identify candidate pairs that will work better, more closely match the requested parameters, and so forth.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;../rtcicetransport&quot;&gt; &lt;code&gt;RTCIceTransport&lt;/code&gt; &lt;/a&gt;がリモートピアとの通信に使用する新しい候補ペアを検出したときにICEエージェントによって呼び出されるイベントハンドラー関数を参照するように設定する必要があります。このイベントは少なくとも1回は発生しますが、ICEエージェントが引き続き機能し、要求されたパラメーターにより厳密に一致する候補ペアを特定し続けると、複数回発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a29f0a2efe74e99bf4d74b25032a9dfcf31b14e1" translate="yes" xml:space="preserve">
          <source>This provides a full list of the objects available to that worker scope, so it is quite a useful test if you want to see whether something is available to your worker or not. We also maintain a list of &lt;a href=&quot;../web_workers_api/functions_and_classes_available_to_workers&quot;&gt;Functions and classes available to Web Workers&lt;/a&gt;.</source>
          <target state="translated">これにより、そのワーカースコープで使用できるオブジェクトの完全なリストが提供されるため、ワーカーで何かが使用できるかどうかを確認する場合に非常に役立つテストです。また&lt;a href=&quot;../web_workers_api/functions_and_classes_available_to_workers&quot;&gt;、Webワーカーが使用できる関数とクラスの&lt;/a&gt;リストも保持しています。</target>
        </trans-unit>
        <trans-unit id="0261632b2230a27d6ec7bb678331bc2f41389f97" translate="yes" xml:space="preserve">
          <source>This provides us with a &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">これにより、&lt;a href=&quot;../readablestream&quot;&gt; &lt;code&gt;ReadableStream&lt;/code&gt; &lt;/a&gt;オブジェクトが提供されます。</target>
        </trans-unit>
        <trans-unit id="94ce856d2e2a6d81b9d34cc5237e38db2dea4eda" translate="yes" xml:space="preserve">
          <source>This rate of change speeds up in the middle. Equivalent to &lt;code&gt;cubic-bezier(0.42, 0, 0.58, 1)&lt;/code&gt;.</source>
          <target state="translated">この変化率は途中でスピードアップします。 &lt;code&gt;cubic-bezier(0.42, 0, 0.58, 1)&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="fce83700971644ff55b887e5349adebc3ccca3a6" translate="yes" xml:space="preserve">
          <source>This read-only property indicates the amount of acceleration that occurred along the X axis in a &lt;a href=&quot;../deviceacceleration&quot;&gt;&lt;code&gt;DeviceAcceleration&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">この読み取り専用のプロパティは、&lt;a href=&quot;../deviceacceleration&quot;&gt; &lt;code&gt;DeviceAcceleration&lt;/code&gt; &lt;/a&gt;オブジェクトのX軸に沿って発生した加速度の量を示します。</target>
        </trans-unit>
        <trans-unit id="7aab1bc163d7cc0819e42f38c6a636d9e54f69f1" translate="yes" xml:space="preserve">
          <source>This read-only property indicates the amount of acceleration that occurred along the Y axis in a &lt;a href=&quot;../deviceacceleration&quot;&gt;&lt;code&gt;DeviceAcceleration&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">この読み取り専用プロパティは、&lt;a href=&quot;../deviceacceleration&quot;&gt; &lt;code&gt;DeviceAcceleration&lt;/code&gt; &lt;/a&gt;オブジェクトのY軸に沿って発生した加速度の量を示します。</target>
        </trans-unit>
        <trans-unit id="d422a2c54a04c8cb98dc24d325e1aa9a740d603f" translate="yes" xml:space="preserve">
          <source>This read-only property indicates the amount of acceleration that occurred along the Z axis in a &lt;a href=&quot;../deviceacceleration&quot;&gt;&lt;code&gt;DeviceAcceleration&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">この読み取り専用のプロパティは、&lt;a href=&quot;../deviceacceleration&quot;&gt; &lt;code&gt;DeviceAcceleration&lt;/code&gt; &lt;/a&gt;オブジェクトのZ軸に沿って発生した加速度の量を示します。</target>
        </trans-unit>
        <trans-unit id="8e115800316d76c4043b1bedec6122dbfd0c65c8" translate="yes" xml:space="preserve">
          <source>This read-only property indicates the number of items (touch points) in a &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この読み取り専用プロパティは、&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; &lt;/a&gt;内のアイテム（タッチポイント）の数を示します。</target>
        </trans-unit>
        <trans-unit id="6c9c743a58f66ef6442e6d4be224b30469017898" translate="yes" xml:space="preserve">
          <source>This read-only property indicates whether the referenced window is closed or not.</source>
          <target state="translated">この読み取り専用のプロパティは、参照されるウィンドウが閉じられているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="b4b0ab5215ba879f0fd2a57be75d1eed0997a8cf" translate="yes" xml:space="preserve">
          <source>This rectangle is computed by taking the intersection of &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;boundingClientRect&lt;/code&gt;&lt;/a&gt; with each of the &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;'s ancestors' clip rectangles, with the exception of the intersection &lt;a href=&quot;../intersectionobserver/root&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; itself.</source>
          <target state="translated">この四角形は、&lt;a href=&quot;../intersectionobserverentry&quot;&gt; &lt;code&gt;boundingClientRect&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../intersectionobserver/root&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt;自体を除いて、boundingClientRectと各&lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;「祖先」クリップの四角形の交差をとることによって計算されます。</target>
        </trans-unit>
        <trans-unit id="2f7affbcd677896324e6f139a2145866e902a319" translate="yes" xml:space="preserve">
          <source>This rectangle is offset by the values in &lt;a href=&quot;../intersectionobserver/rootmargin&quot;&gt;&lt;code&gt;IntersectionObserver.rootMargin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この長方形は、&lt;a href=&quot;../intersectionobserver/rootmargin&quot;&gt; &lt;code&gt;IntersectionObserver.rootMargin&lt;/code&gt; &lt;/a&gt;の値によってオフセットされます。</target>
        </trans-unit>
        <trans-unit id="847ba1319f6ee45030bcbe901bb54a3aa59fe8e6" translate="yes" xml:space="preserve">
          <source>This reference tries to describe the various objects and types in simple terms. But there are a number of different data types being passed around the API that you should be aware of. For the sake of simplicity, syntax examples in this API reference typically refer to nodes as &lt;code&gt;element&lt;/code&gt;s, to arrays of nodes as &lt;code&gt;nodeList&lt;/code&gt;s (or simply &lt;code&gt;element&lt;/code&gt;s), and to &lt;code&gt;attribute&lt;/code&gt; nodes simply as &lt;code&gt;attribute&lt;/code&gt;s.</source>
          <target state="translated">このリファレンスでは、さまざまなオブジェクトとタイプについて簡単に説明しています。ただし、APIの周りで渡されるさまざまなデータ型がいくつかあり、注意が必要です。簡単にするために、このAPIリファレンスの構文例では、通常、ノードを &lt;code&gt;element&lt;/code&gt; sとして、ノードの配列を &lt;code&gt;nodeList&lt;/code&gt; s（または単に &lt;code&gt;element&lt;/code&gt; s）として、 &lt;code&gt;attribute&lt;/code&gt; ノードを単に &lt;code&gt;attribute&lt;/code&gt; s として参照しています。</target>
        </trans-unit>
        <trans-unit id="e9d2077fe50987da78e24c2b031bd57043c47fff" translate="yes" xml:space="preserve">
          <source>This registers a service worker, which runs in a worker context, and therefore has no DOM access. You then run code in the service worker outside of your normal pages to control their loading.</source>
          <target state="translated">これはワーカーコンテキストで動作するサービスワーカーを登録するもので、DOM にアクセスすることはできません。そして、通常のページの外でサービスワーカーのコードを実行して、その読み込みを制御します。</target>
        </trans-unit>
        <trans-unit id="74484ce935509f7a270ed32c96cb72172c985bd6" translate="yes" xml:space="preserve">
          <source>This renegotiation is triggered by generating and using new values for the ICE username fragment (&quot;ufrag&quot;)}}</source>
          <target state="translated">この再ネゴシエーションはICEユーザ名フラグメント(&quot;ufrag&quot;)}}の新しい値を生成して使用することでトリガされます。</target>
        </trans-unit>
        <trans-unit id="cacd899937cdacaf6a2a1cc54bfb00a95363fd96" translate="yes" xml:space="preserve">
          <source>This replaces the now-obsolete &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode/setWaveTable&quot;&gt;&lt;code&gt;OscillatorNode.setWaveTable()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、廃止された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode/setWaveTable&quot;&gt; &lt;code&gt;OscillatorNode.setWaveTable()&lt;/code&gt; を&lt;/a&gt;置き換えます。</target>
        </trans-unit>
        <trans-unit id="86cbc83c313c398d10033825af4347573be83028" translate="yes" xml:space="preserve">
          <source>This represents the height of the rectangle.A value that is negative results to an error.A value of zero disables rendering of the element.</source>
          <target state="translated">値が負の場合はエラーとなり、値がゼロの場合は要素のレンダリングを無効にします。</target>
        </trans-unit>
        <trans-unit id="aab6e4fe873e420b92a7ac9d276227cfeae214f0" translate="yes" xml:space="preserve">
          <source>This represents the width of the rectangle.A value that is negative results to an error. A value of zero disables rendering of the element</source>
          <target state="translated">負の値を指定するとエラーになります。値がゼロの場合は、要素</target>
        </trans-unit>
        <trans-unit id="3ea28b65fdd1642335927bb383d6dc4688fd6c62" translate="yes" xml:space="preserve">
          <source>This returns a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the whole URL. It is a synonym for &lt;a href=&quot;htmlhyperlinkelementutils/href&quot;&gt;&lt;code&gt;HTMLHyperlinkElementUtils.href&lt;/code&gt;&lt;/a&gt;, though it can't be used to modify the value.</source>
          <target state="translated">これは、URL全体を含む&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;を返します。&lt;a href=&quot;htmlhyperlinkelementutils/href&quot;&gt; &lt;code&gt;HTMLHyperlinkElementUtils.href&lt;/code&gt; の&lt;/a&gt;同義語ですが、値の変更には使用できません。</target>
        </trans-unit>
        <trans-unit id="30b2cc8ad3ee0121c9bd43ee6e695b869571aef2" translate="yes" xml:space="preserve">
          <source>This returns a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the origin of the URL (that is its scheme, its domain and its port).</source>
          <target state="translated">これは、URLの起点（スキーム、ドメイン、ポート）を含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="ed6b1825f0754059c3acd9411ca01c6f33e2522f" translate="yes" xml:space="preserve">
          <source>This returns the &lt;a href=&quot;../../htmlvideoelement&quot;&gt;&lt;code&gt;HTMLVideoElement&lt;/code&gt;&lt;/a&gt; object for the video, which, as covered earlier, is one of the objects that can be used as a &lt;code&gt;CanvasImageSource&lt;/code&gt;.</source>
          <target state="translated">この戻り&lt;a href=&quot;../../htmlvideoelement&quot;&gt; &lt;code&gt;HTMLVideoElement&lt;/code&gt; の&lt;/a&gt;以前の被覆として、ビデオ、対象は、として使用することができる目的の一つである &lt;code&gt;CanvasImageSource&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eec7a56fb48d6d2d3d8c674a971590157e03aa28" translate="yes" xml:space="preserve">
          <source>This reverses the steps taken in &lt;code&gt;enableHold()&lt;/code&gt; as follows:</source>
          <target state="translated">これにより、次のように &lt;code&gt;enableHold()&lt;/code&gt; で行われる手順が逆になります。</target>
        </trans-unit>
        <trans-unit id="405789ae8e0cafe50f80906f71ea0962505c1294" translate="yes" xml:space="preserve">
          <source>This rotates the modelViewMatrix by the current value of &lt;code&gt;squareRotation&lt;/code&gt;, around the Z axis.</source>
          <target state="translated">これにより、Z軸を中心に、 &lt;code&gt;squareRotation&lt;/code&gt; の現在の値だけmodelViewMatrixが回転します。</target>
        </trans-unit>
        <trans-unit id="5e561316bd10bdc6f2d551a68dc1f6e3c2c07b48" translate="yes" xml:space="preserve">
          <source>This routine is pretty simplistic given the basic nature of the scene in this example. It starts by calling the &lt;code&gt;gl&lt;/code&gt; object's &lt;a href=&quot;../../webglrenderingcontext/createbuffer&quot;&gt;&lt;code&gt;createBuffer()&lt;/code&gt;&lt;/a&gt; method to obtain a buffer into which we'll store the vertex positions. This is then bound to the context by calling the &lt;a href=&quot;../../webglrenderingcontext/bindbuffer&quot;&gt;&lt;code&gt;bindBuffer()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">この例のシーンの基本的な性質を考えると、このルーチンはかなり単純化されています。まず、 &lt;code&gt;gl&lt;/code&gt; オブジェクトの&lt;a href=&quot;../../webglrenderingcontext/createbuffer&quot;&gt; &lt;code&gt;createBuffer()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、頂点の位置を格納するバッファーを取得します。次に、&lt;a href=&quot;../../webglrenderingcontext/bindbuffer&quot;&gt; &lt;code&gt;bindBuffer()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、これをコンテキストにバインドします。</target>
        </trans-unit>
        <trans-unit id="b32adebc8824f59310840baa7b3bbecdf18dd2e0" translate="yes" xml:space="preserve">
          <source>This sample &lt;code&gt;text/uri-list&lt;/code&gt; data contains two links and a comment.</source>
          <target state="translated">このサンプルの &lt;code&gt;text/uri-list&lt;/code&gt; データには、2つのリンクとコメントが含まれています。</target>
        </trans-unit>
        <trans-unit id="990aa84b20bf292e0c741e8ab4a236469555d610" translate="yes" xml:space="preserve">
          <source>This sample code can detect a GET from the client. Note that this will block until the first 3 bytes of a message are available. Alternative solutions should be investigated for production environments.</source>
          <target state="translated">このサンプルコードは、クライアントからの GET を検出することができます。これは、メッセージの最初の3バイトが利用可能になるまでブロックすることに注意してください。本番環境では、別の解決策を検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="405cbb5893b1cfef670c1693c7785a9b977396f0" translate="yes" xml:space="preserve">
          <source>This sample creates a 2D point, specifying an inline object that includes the values to use for &lt;a href=&quot;../dompointreadonly/x&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../dompointreadonly/y&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;z&lt;/em&gt; and &lt;em&gt;w&lt;/em&gt; properties are allowed to keep their default values (0 and 1 respectively).</source>
          <target state="translated">このサンプルは、&lt;a href=&quot;../dompointreadonly/x&quot;&gt; &lt;code&gt;x&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../dompointreadonly/y&quot;&gt; &lt;code&gt;y&lt;/code&gt; &lt;/a&gt;に使用する値を含むインラインオブジェクトを指定して、2Dポイントを作成します。&lt;em&gt;Z&lt;/em&gt;及び&lt;em&gt;W&lt;/em&gt;の性質は、それらのデフォルト値（それぞれ0と1）を維持するために許可されています。</target>
        </trans-unit>
        <trans-unit id="5d728f186d372341eea375157534d073342a4a37" translate="yes" xml:space="preserve">
          <source>This sample creates a 2D point, specifying an inline object that includes the values to use for &lt;a href=&quot;x&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;y&quot;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;z&lt;/em&gt; and &lt;em&gt;w&lt;/em&gt; properties are allowed to keep their default values (0 and 1 respectively).</source>
          <target state="translated">このサンプルは、&lt;a href=&quot;x&quot;&gt; &lt;code&gt;x&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;y&quot;&gt; &lt;code&gt;y&lt;/code&gt; &lt;/a&gt;に使用する値を含むインラインオブジェクトを指定して、2Dポイントを作成します。&lt;em&gt;Z&lt;/em&gt;及び&lt;em&gt;W&lt;/em&gt;の性質は、それらのデフォルト値（それぞれ0と1）を維持するために許可されています。</target>
        </trans-unit>
        <trans-unit id="11bb1331a555b4b8e59bd607149642491407cd17" translate="yes" xml:space="preserve">
          <source>This sample creates a data channel on an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, then, some time later, sets the content of a UI element to display the channel's name.</source>
          <target state="translated">このサンプルは、&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; に&lt;/a&gt;データチャネルを作成し、しばらくしてから、UI要素のコンテンツを設定してチャネルの名前を表示します。</target>
        </trans-unit>
        <trans-unit id="6230ce73783dce11f9375c30157b2ad4799b23ff" translate="yes" xml:space="preserve">
          <source>This sample program demonstrates a number of &lt;a href=&quot;../../../canvasrenderingcontext2d/globalcompositeoperation&quot;&gt;compositing operations&lt;/a&gt;. The output looks like this:</source>
          <target state="translated">このサンプルプログラムは、いくつかの&lt;a href=&quot;../../../canvasrenderingcontext2d/globalcompositeoperation&quot;&gt;合成操作を示してい&lt;/a&gt;ます。出力は次のようになります。</target>
        </trans-unit>
        <trans-unit id="72ba2b44fe3170e3d97e7f986f5156d02965ab9a" translate="yes" xml:space="preserve">
          <source>This script outputs the following:</source>
          <target state="translated">このスクリプトは以下のように出力します。</target>
        </trans-unit>
        <trans-unit id="160c98af1f7698360621f067a4d428ed4df28c57" translate="yes" xml:space="preserve">
          <source>This script sets up a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event listener on the &quot;Order Now&quot; button. When clicked, the event handler fetches the list of selected options using &lt;code&gt;selectedOptions&lt;/code&gt;, then iterates over the options in the list. A string is constructed to list the ordered items, with logic to build the list using proper English grammar rules (including a &lt;a href=&quot;https://en.wikipedia.org/wiki/serial%20comma&quot;&gt;serial comma&lt;/a&gt;).</source>
          <target state="translated">このスクリプトは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; 今すぐ注文]ボタンにクリックイベントリスナーを設定します。クリックされると、イベントハンドラーはselectedOptionsを使用して &lt;code&gt;selectedOptions&lt;/code&gt; れたオプションのリストをフェッチし、リスト内のオプションを反復処理します。文字列は、適切な英語の文法規則（&lt;a href=&quot;https://en.wikipedia.org/wiki/serial%20comma&quot;&gt;シリアルコンマ&lt;/a&gt;を含む）を使用してリストを作成するロジックを使用して、注文されたアイテムをリストするために作成されます。</target>
        </trans-unit>
        <trans-unit id="0fadf6e3101242e45a4e31e7d98dd901ab0e377c" translate="yes" xml:space="preserve">
          <source>This section contains a basic usage of using the above interfaces. See the &lt;a href=&quot;../touch_events&quot;&gt;&lt;code&gt;Touch Events Overview&lt;/code&gt;&lt;/a&gt; for a more detailed example.</source>
          <target state="translated">このセクションでは、上記のインターフェースの基本的な使用方法について説明します。詳細な例については、&lt;a href=&quot;../touch_events&quot;&gt; &lt;code&gt;Touch Events Overview&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="176118fe49bf69b10cd7f59e49ae3bc237958e7d" translate="yes" xml:space="preserve">
          <source>This section contains examples of basic usage of using the pointer events interfaces.</source>
          <target state="translated">ポインタイベントインタフェースの基本的な使い方の例を紹介します。</target>
        </trans-unit>
        <trans-unit id="cb27ee579bf598f22d8570ad3fdc634ebfde5318" translate="yes" xml:space="preserve">
          <source>This section contains the Scalable Vector Graphics (SVG) event reference documentation.</source>
          <target state="translated">このセクションでは、Scalable Vector Graphics (SVG)イベントリファレンスのドキュメントが含まれています。</target>
        </trans-unit>
        <trans-unit id="90854fe7211272d2bb16a238c352953311b7454e" translate="yes" xml:space="preserve">
          <source>This section defines and explains terms used in the IndexedDB API.</source>
          <target state="translated">IndexedDB APIで使用する用語を定義し、説明します。</target>
        </trans-unit>
        <trans-unit id="c725f2168712dd9a83fac7f50353df9389689923" translate="yes" xml:space="preserve">
          <source>This section details the basics of using the Payment Request API to make a payment.</source>
          <target state="translated">ここでは、Payment Request APIを利用して決済を行う際の基本的なことを説明します。</target>
        </trans-unit>
        <trans-unit id="3c8c1721230a8b3bf375b313a4786d9c8ec3807a" translate="yes" xml:space="preserve">
          <source>This section discusses concepts to be aware of when developing VR apps that you've probably not had to consider before when developing regular apps for mobile or desktop.</source>
          <target state="translated">ここでは、モバイルやデスクトップ向けの通常のアプリを開発する際に、今まで意識することがなかったであろうVRアプリを開発する際に意識すべき概念について解説します。</target>
        </trans-unit>
        <trans-unit id="4dc9b0bad2df5e5e61f474ea386a6a5546427920" translate="yes" xml:space="preserve">
          <source>This section lists some of the most commonly-used interfaces in the DOM. The idea is not to describe what these APIs do here but to give you an idea of the sorts of methods and properties you will see very often as you use the DOM. These common APIs are used in the longer examples in the &lt;a href=&quot;examples&quot;&gt;DOM Examples&lt;/a&gt; chapter at the end of this book.</source>
          <target state="translated">このセクションでは、DOMで最も一般的に使用されるいくつかのインターフェースをリストします。ここでの目的は、これらのAPIがここで行うことを説明することではなく、DOMを使用するときに非常に頻繁に表示されるメソッドやプロパティの種類を理解することです。これらの共通APIは、この&lt;a href=&quot;examples&quot;&gt;ドキュメント&lt;/a&gt;の最後にある「DOMの例」の章のより長い例で使用されています。</target>
        </trans-unit>
        <trans-unit id="9235b5fab4fde85e565c13e0013498e1c973ec89" translate="yes" xml:space="preserve">
          <source>This section provides a brief conceptual introduction to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOM&lt;/a&gt;: what it is, how it provides structure for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML&quot;&gt;HTML&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt; documents, how you can access it, and how this API presents the reference information and examples.</source>
          <target state="translated">このセクションでは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOMの&lt;/a&gt;概念的な概要を説明します。DOMとは何か、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML&quot;&gt;HTML&lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt;ドキュメントの構造を提供する方法、それにアクセスする方法、およびこのAPIが参照情報と例を提供する方法です。</target>
        </trans-unit>
        <trans-unit id="4d57feded44c526e61659a569c6ab325f311b653" translate="yes" xml:space="preserve">
          <source>This section provides a brief description of each property and method related to the pointer lock specification.</source>
          <target state="translated">ここでは、ポインタロック仕様に関連する各プロパティとメソッドについて簡単に説明します。</target>
        </trans-unit>
        <trans-unit id="3aea3a3695df26e3986c71689196645da3a9c9f6" translate="yes" xml:space="preserve">
          <source>This section provides a summary of the basic steps to add drag and drop functionality to an application. Each section includes a description of the step, a short code example, and links to additional information.</source>
          <target state="translated">このセクションでは、アプリケーションにドラッグ&amp;ドロップ機能を追加するための基本的なステップの概要を説明します。各セクションには、ステップの説明、短いコード例、および追加情報へのリンクが含まれています。</target>
        </trans-unit>
        <trans-unit id="813a54285d99dd4e6466f1d036b64e96147de1ce" translate="yes" xml:space="preserve">
          <source>This section provides additional tips on how to handle touch events in your web application.</source>
          <target state="translated">このセクションでは、Web アプリケーションでタッチイベントを処理する方法についての追加のヒントを提供します。</target>
        </trans-unit>
        <trans-unit id="67c4b76e70490395ee36ae46c664329a8e5ec471" translate="yes" xml:space="preserve">
          <source>This section provides further examples of how to use web workers.</source>
          <target state="translated">ここでは、ウェブワーカーの活用方法について、さらに詳しくご紹介します。</target>
        </trans-unit>
        <trans-unit id="d52d0d33bb71b5791d9eb3b5fc1c169dce0e9c43" translate="yes" xml:space="preserve">
          <source>This server conforms to &lt;a href=&quot;http://tools.ietf.org/html/rfc6455&quot;&gt;RFC 6455&lt;/a&gt; so it will only handle connections from Chrome version 16, Firefox 11, IE 10 and over.</source>
          <target state="translated">このサーバーは&lt;a href=&quot;http://tools.ietf.org/html/rfc6455&quot;&gt;RFC 6455に&lt;/a&gt;準拠しているため、Chromeバージョン16、Firefox 11、IE 10以降からの接続のみを処理します。</target>
        </trans-unit>
        <trans-unit id="f29ff018cd4470bab9eb04eb7958ad087c38dee5" translate="yes" xml:space="preserve">
          <source>This server conforms to &lt;a href=&quot;http://tools.ietf.org/html/rfc6455&quot;&gt;RFC 6455&lt;/a&gt;, so it only handles connections from Chrome version 16, Firefox 11, IE 10 and higher.</source>
          <target state="translated">このサーバーは&lt;a href=&quot;http://tools.ietf.org/html/rfc6455&quot;&gt;RFC 6455&lt;/a&gt;に準拠しているため、Chromeバージョン16、Firefox 11、IE 10以降からの接続のみを処理します。</target>
        </trans-unit>
        <trans-unit id="598c2d282ed9ddbdb9aacbf68172611bd9242b73" translate="yes" xml:space="preserve">
          <source>This server conforms to &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;RFC 6455&lt;/a&gt; so it will only handle connections from Chrome version 16, Firefox 11, IE 10 and over.</source>
          <target state="translated">このサーバーは&lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;RFC6455に&lt;/a&gt;準拠しているため、Chromeバージョン16、Firefox 11、IE10以降からの接続のみを処理します。</target>
        </trans-unit>
        <trans-unit id="d52aa9592cbb3b1a9fa7c1d53649dbf578ff7e0d" translate="yes" xml:space="preserve">
          <source>This server conforms to &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;RFC 6455&lt;/a&gt;, so it only handles connections from Chrome version 16, Firefox 11, IE 10 and higher.</source>
          <target state="translated">このサーバーは&lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;RFC6455&lt;/a&gt;に準拠しているため、Chromeバージョン16、Firefox 11、IE10以降からの接続のみを処理します。</target>
        </trans-unit>
        <trans-unit id="aa3fadd979d973b2f32ad65e75e58659de3182f3" translate="yes" xml:space="preserve">
          <source>This sets the box element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state&quot;&gt;&lt;code&gt;animation-play-state&lt;/code&gt;&lt;/a&gt; to &quot;running&quot; and increments the iteration counter. That's all there is to it!</source>
          <target state="translated">これにより、box要素の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state&quot;&gt; &lt;code&gt;animation-play-state&lt;/code&gt; &lt;/a&gt;が「running」に設定され、反復カウンターが増加します。それだけです！</target>
        </trans-unit>
        <trans-unit id="8d3346d563774ea4b7e52b5d20002c4a37e63d82" translate="yes" xml:space="preserve">
          <source>This sets the class of the box we want to animate to the class that contains the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation&quot;&gt;&lt;code&gt;animation&lt;/code&gt;&lt;/a&gt; description, then hides the play button because this example will only run the animation once. For information about why, and how to support running an animation more than once, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Tips#Run_an_animation_again&quot;&gt;Run an animation again&lt;/a&gt; in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Tips&quot;&gt;CSS Animations tips and tricks&lt;/a&gt;.</source>
          <target state="translated">これにより、アニメーション化するボックスのクラスが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation&quot;&gt; &lt;code&gt;animation&lt;/code&gt; &lt;/a&gt;説明を含むクラスに設定され、この例ではアニメーションが1回しか実行されないため、再生ボタンが非表示になります。複数回のアニメーションの実行をサポートする理由、および方法の詳細については、を参照してください&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Tips#Run_an_animation_again&quot;&gt;もう一度実行にアニメーションを&lt;/a&gt;で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Tips&quot;&gt;CSSアニメーションのヒントやトリック&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2be2cfcc33375bd729523da716d752b12e6c85fd" translate="yes" xml:space="preserve">
          <source>This sets the type of compositing operation to apply when drawing new shapes, where type is a string identifying which of the twelve compositing operations to use.</source>
          <target state="translated">これは、新しい図形を描画する際に適用する合成操作の種類を設定します。</target>
        </trans-unit>
        <trans-unit id="e4edd5c4df073ff3c51a01a124ae1a221b097d01" translate="yes" xml:space="preserve">
          <source>This sets up two global variables: &lt;code&gt;box&lt;/code&gt;, which references the &lt;code&gt;&quot;box&quot;&lt;/code&gt; element that we're animating, and &lt;code&gt;iterationCounter&lt;/code&gt;, which is initially zero, which indicates how many iterations of the animation have occurred.</source>
          <target state="translated">：2つのグローバル変数までこのセット &lt;code&gt;box&lt;/code&gt; 、参照する &lt;code&gt;&quot;box&quot;&lt;/code&gt; たちだアニメーション、およびその要素を &lt;code&gt;iterationCounter&lt;/code&gt; アニメーションの多くの反復が発生しているかを示す最初はゼロです、、。</target>
        </trans-unit>
        <trans-unit id="37529a4f94f63ed68fec234615173ff0b198c7b6" translate="yes" xml:space="preserve">
          <source>This setting can only apply to dialog windows; &quot;minimizable&quot; requires &lt;code&gt;dialog=yes&lt;/code&gt;. If &lt;code&gt;minimizable&lt;/code&gt; is on, the new dialog window will have a minimize system command icon in the titlebar and it will be minimizable. Any non-dialog window is always minimizable and &lt;code&gt;minimizable=no&lt;/code&gt; will be ignored.</source>
          <target state="translated">この設定はダイアログウィンドウにのみ適用できます。 「最小化可能」には &lt;code&gt;dialog=yes&lt;/code&gt; が必要です。場合は &lt;code&gt;minimizable&lt;/code&gt; 上にある、新しいダイアログウィンドウがタイトルバーに最小化し、システムのコマンドアイコンが表示されますし、それが最小化可能になります。非ダイアログウィンドウは常に最小化可能で、 &lt;code&gt;minimizable=no&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="4d992c4ef2564b603c83222b8e19c9aee9a9f7e1" translate="yes" xml:space="preserve">
          <source>This shared/exclusive lock pattern is common in database transaction architecture, for example to allow multiple simultaneous readers (each requests a &lt;code&gt;&quot;shared&quot;&lt;/code&gt; lock) but only one writer (a single &lt;code&gt;&quot;exclusive&quot;&lt;/code&gt; lock). This is known as the readers-writer pattern. In the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB API&lt;/a&gt;, this is exposed as &lt;code&gt;&quot;readonly&quot;&lt;/code&gt; and &lt;code&gt;&quot;readwrite&quot;&lt;/code&gt; transactions which have the same semantics.</source>
          <target state="translated">この共有/排他ロックパターンは、データベーストランザクションアーキテクチャで一般的です。たとえば、複数の同時リーダー（それぞれが &lt;code&gt;&quot;shared&quot;&lt;/code&gt; ロックを要求）を許可しますが、1つのライター（単一の &lt;code&gt;&quot;exclusive&quot;&lt;/code&gt; ロック）のみを許可します。これは、リーダーライターパターンと呼ばれます。&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB APIを&lt;/a&gt;、これは次のように公開された &lt;code&gt;&quot;readonly&quot;&lt;/code&gt; と &lt;code&gt;&quot;readwrite&quot;&lt;/code&gt; と同じ意味を持つトランザクション。</target>
        </trans-unit>
        <trans-unit id="b096abfa00eecab9387c6a780e0b202ac5a475fe" translate="yes" xml:space="preserve">
          <source>This short chapter only explains some techniques to create more advanced animations. There are many more! How about adding a paddle, some bricks, and turn this demo into a &lt;a href=&quot;http://en.wikipedia.org/wiki/Breakout_%28video_game%29&quot;&gt;Breakout&lt;/a&gt; game? Check out our &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games&quot;&gt;Game development&lt;/a&gt; area for more gaming related articles.</source>
          <target state="translated">この短い章では、より高度なアニメーションを作成するためのいくつかのテクニックについてのみ説明します。さらにたくさんあります！パドルといくつかのレンガを追加して、このデモを&lt;a href=&quot;http://en.wikipedia.org/wiki/Breakout_%28video_game%29&quot;&gt;ブレイクアウト&lt;/a&gt;ゲームにしてみませんか？ゲーム関連の記事については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games&quot;&gt;ゲーム開発&lt;/a&gt;エリアをご覧ください。</target>
        </trans-unit>
        <trans-unit id="a16daa44b119c2c9616b5eb910210d5082ca15de" translate="yes" xml:space="preserve">
          <source>This short chapter only explains some techniques to create more advanced animations. There are many more! How about adding a paddle, some bricks, and turn this demo into a &lt;a href=&quot;https://en.wikipedia.org/wiki/Breakout_%28video_game%29&quot;&gt;Breakout&lt;/a&gt; game? Check out our &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games&quot;&gt;Game development&lt;/a&gt; area for more gaming related articles.</source>
          <target state="translated">この短い章では、より高度なアニメーションを作成するためのいくつかのテクニックについてのみ説明します。もっとたくさんあります！パドルといくつかのレンガを追加して、このデモを&lt;a href=&quot;https://en.wikipedia.org/wiki/Breakout_%28video_game%29&quot;&gt;ブレイクアウト&lt;/a&gt;ゲームに変えてみませんか？その他のゲーム関連の記事については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games&quot;&gt;ゲーム開発&lt;/a&gt;エリアをご覧ください。</target>
        </trans-unit>
        <trans-unit id="54de1b754e3a332c4e16ef4c37d3ffe05b7caf71" translate="yes" xml:space="preserve">
          <source>This short function gets the &lt;a href=&quot;../audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt; containing the video's audio tracks using &lt;a href=&quot;../htmlmediaelement/audiotracks&quot;&gt;&lt;code&gt;HTMLMediaElement.audioTracks&lt;/code&gt;&lt;/a&gt;, then calls &lt;code&gt;getTrackById()&lt;/code&gt; on it, specifying the character's name. The resulting track's audio is then disabled by setting its &lt;a href=&quot;../audiotrack/enabled&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt; flag to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この短い機能が取得する&lt;a href=&quot;../audiotracklist&quot;&gt; &lt;code&gt;AudioTrackList&lt;/code&gt; &lt;/a&gt;使用してビデオのオーディオトラックを含む&lt;a href=&quot;../htmlmediaelement/audiotracks&quot;&gt; &lt;code&gt;HTMLMediaElement.audioTracks&lt;/code&gt; を&lt;/a&gt;、その後、呼び出し、 &lt;code&gt;getTrackById()&lt;/code&gt; 文字の名前を指定して、その上で。結果のトラックのオーディオは、その&lt;a href=&quot;../audiotrack/enabled&quot;&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/a&gt;フラグを &lt;code&gt;false&lt;/code&gt; に設定することによって無効になります。</target>
        </trans-unit>
        <trans-unit id="e2b192d55acf3a70b7ddc5dc5fbe743fb1580eb3" translate="yes" xml:space="preserve">
          <source>This should be a valid language code, e.g. &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">これは有効な言語コードである必要があります（例： &lt;code&gt;en-US&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="e28bf7a259dd4353de176b5bbf09bf3775cb7350" translate="yes" xml:space="preserve">
          <source>This should be set to a function which you provide that accepts as input a &lt;a href=&quot;../mediastreamtrackevent&quot;&gt;&lt;code&gt;MediaStreamTrackEvent&lt;/code&gt;&lt;/a&gt; object representing the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; event which has occurred. The &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; representing the track which was added is specified in the event's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrackEvent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">これは、発生した &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; イベントを表す&lt;a href=&quot;../mediastreamtrackevent&quot;&gt; &lt;code&gt;MediaStreamTrackEvent&lt;/code&gt; &lt;/a&gt;オブジェクトを入力として受け入れる関数に設定する必要があります。&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; が&lt;/a&gt;追加されましたが、イベントの中で指定されたトラック表す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrackEvent/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="983658e383671a5dcac76013966920c07c7a390e" translate="yes" xml:space="preserve">
          <source>This should be set to a function which you provide that accepts as input a &lt;a href=&quot;../mediastreamtrackevent&quot;&gt;&lt;code&gt;MediaStreamTrackEvent&lt;/code&gt;&lt;/a&gt; object representing the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; event which has occurred. The &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; representing the track which was removed is specified in the event's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrackEvent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">これは、発生した &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; イベントを表す&lt;a href=&quot;../mediastreamtrackevent&quot;&gt; &lt;code&gt;MediaStreamTrackEvent&lt;/code&gt; &lt;/a&gt;オブジェクトを入力として受け入れる関数に設定する必要があります。&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; は&lt;/a&gt;イベントの中で指定されて削除されたトラック表す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrackEvent/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="e6fb7b3baaf01f96aee897ac0926d47077f19a4a" translate="yes" xml:space="preserve">
          <source>This should be set to a function which you provide that accepts as input an &lt;a href=&quot;../rtcpeerconnectioniceevent&quot;&gt;&lt;code&gt;RTCPeerConnectionIceEvent&lt;/code&gt;&lt;/a&gt; object representing the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event. The function should deliver the ICE candidate, whose &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; can be found in the event's &lt;a href=&quot;../rtcpeerconnectioniceevent/candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt; property, to the remote peer through the signaling server.</source>
          <target state="translated">これは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; イベントを表す&lt;a href=&quot;../rtcpeerconnectioniceevent&quot;&gt; &lt;code&gt;RTCPeerConnectionIceEvent&lt;/code&gt; &lt;/a&gt;オブジェクトを入力として受け入れる提供する関数に設定する必要があります。関数は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt;がイベントの&lt;a href=&quot;../rtcpeerconnectioniceevent/candidate&quot;&gt; &lt;code&gt;candidate&lt;/code&gt; &lt;/a&gt;プロパティにあるICE候補を、シグナリングサーバーを介してリモートピアに配信する必要があります。</target>
        </trans-unit>
        <trans-unit id="c1e7d3d1fb4e7b6d8fd615033dac5dc35e19951e" translate="yes" xml:space="preserve">
          <source>This should be set to a function you provide which is passed a single parameter: an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object containing the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; event. There's no additional information provided in the event; anything you need, you can get by examining the &lt;a href=&quot;../rtcpeerconnection#Properties&quot;&gt;properties of the &lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">：これは、単一のパラメータが渡されますが提供する機能に設定する必要がある&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;含むオブジェクト &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; イベントを。イベントで提供される追加情報はありません。必要なものは何でも&lt;a href=&quot;../rtcpeerconnection#Properties&quot;&gt;、 &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;プロパティを調べることで取得できます。</target>
        </trans-unit>
        <trans-unit id="1f60f38bfb04bff1ce42ab033bd285b115865bed" translate="yes" xml:space="preserve">
          <source>This should be set to one of the &lt;a href=&quot;../speechsynthesisvoice&quot;&gt;&lt;code&gt;SpeechSynthesisVoice&lt;/code&gt;&lt;/a&gt; objects returned by &lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt;. If not set by the time the utterance is spoken, the voice used will be the most suitable default voice available for the utterance's &lt;a href=&quot;lang&quot;&gt;&lt;code&gt;lang&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">これは、のいずれかに設定する必要があります&lt;a href=&quot;../speechsynthesisvoice&quot;&gt; &lt;code&gt;SpeechSynthesisVoice&lt;/code&gt; &lt;/a&gt;によって返されたオブジェクト&lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; &lt;/a&gt;。発話が話された時間で設定されていない場合、使用される音声は、発話者のために利用可能な最も適したデフォルトの音声になります&lt;a href=&quot;lang&quot;&gt; &lt;code&gt;lang&lt;/code&gt; &lt;/a&gt;設定。</target>
        </trans-unit>
        <trans-unit id="9aceec48d05bb358d4d329a22a9b641dccb2b8b3" translate="yes" xml:space="preserve">
          <source>This should look pretty familiar by now; we create a new buffer, bind it to be the buffer we're working with, then send along our array of vertex normals into the buffer by calling &lt;code&gt;bufferData()&lt;/code&gt;.</source>
          <target state="translated">これは今ではおなじみのはずです。新しいバッファを作成し、処理中のバッファになるようにバインドしてから、 &lt;code&gt;bufferData()&lt;/code&gt; を呼び出して、頂点法線の配列に沿ってバッファに送信します。</target>
        </trans-unit>
        <trans-unit id="c52650464c57f0be00678386e8e259be97a3d48a" translate="yes" xml:space="preserve">
          <source>This simple example causes a target element to change its color and transparency as it becomes more or less visible. At &lt;a href=&quot;intersection_observer_api/timing_element_visibility&quot;&gt;Timing element visibility with the Intersection Observer API&lt;/a&gt;, you can find a more extensive example showing how to time how long a set of elements (such as ads) are visible to the user and to react to that information by recording statistics or by updating elements..</source>
          <target state="translated">この簡単な例では、ターゲットエレメントが多少見えるようになると、ターゲットエレメントの色と透明度を変更します。で、&lt;a href=&quot;intersection_observer_api/timing_element_visibility&quot;&gt;交差点オブザーバーAPIとのタイミング要素の可視性&lt;/a&gt;、あなたは、（広告など）要素の集合がユーザーに表示され、統計情報を記録することによって、または更新要素によって、その情報に反応してどのくらいどのように時間を示す、より広範な例を見つけることができます..</target>
        </trans-unit>
        <trans-unit id="6f1c04482bdda804c3199a765bf7bb082ccf2efc" translate="yes" xml:space="preserve">
          <source>This simple example constructs two &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;s, establishes a connection between them, then waits for the user to click a &quot;Dial&quot; button. When the button is clicked, a DTMF string is sent over the connection using &lt;a href=&quot;../rtcdtmfsender/insertdtmf&quot;&gt;&lt;code&gt;RTCDTMFSender.insertDTMF()&lt;/code&gt;&lt;/a&gt;. Once the tones finish transmitting, the connection is closed.</source>
          <target state="translated">この簡単な例では、2つの&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; を作成&lt;/a&gt;し、それらの間の接続を確立してから、ユーザーが「ダイヤル」ボタンをクリックするのを待ちます。ボタンがクリックされると、&lt;a href=&quot;../rtcdtmfsender/insertdtmf&quot;&gt; &lt;code&gt;RTCDTMFSender.insertDTMF()&lt;/code&gt; &lt;/a&gt;を使用して、接続を介してDTMF文字列が送信されます。トーンの送信が完了すると、接続が閉じられます。</target>
        </trans-unit>
        <trans-unit id="971d4873a8df3749e3dfad68c693686ba47dc843" translate="yes" xml:space="preserve">
          <source>This simple example creates a &lt;code&gt;MediaQueryList&lt;/code&gt; and then sets up a listener to detect when the media query status changes, running a custom function when it does to change the appearence of the page.</source>
          <target state="translated">この簡単な例では、 &lt;code&gt;MediaQueryList&lt;/code&gt; を作成し、メディアクエリのステータスが変化したことを検出するリスナーを設定し、ページの外観を変更するときにカスタム関数を実行します。</target>
        </trans-unit>
        <trans-unit id="598633bf4a5175a039a8e1fdcfdd13b69c7ba660" translate="yes" xml:space="preserve">
          <source>This simple example creates a new WebSocket, connecting to the server at &lt;code&gt;ws://www.example.com/socketserver&lt;/code&gt;. A custom protocol of &quot;protocolOne&quot; is named in the request for the socket in this example, though this can be omitted.</source>
          <target state="translated">この簡単な例では、 &lt;code&gt;ws://www.example.com/socketserver&lt;/code&gt; にあるサーバーに接続する新しいWebSocketを作成します。この例では、ソケットのリクエストで「protocolOne」のカスタムプロトコルが指定されていますが、これは省略できます。</target>
        </trans-unit>
        <trans-unit id="d7cbe558d9ff9cd8a98bb5c6b4f564043ae854ba" translate="yes" xml:space="preserve">
          <source>This simple example creates a source from an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element using &lt;code&gt;createMediaElementSource()&lt;/code&gt;, then passes the audio through a &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; before feeding it into the &lt;a href=&quot;../audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt; for playback. When the mouse pointer is moved, the &lt;code&gt;updatePage()&lt;/code&gt; function is invoked, which calculates the current gain as a ratio of mouse Y position divided by overall window height. You can therefore increase and decrease the volume of the playing music by moving the mouse pointer up and down.</source>
          <target state="translated">この単純な例では、ソースから作成&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;使用して要素 &lt;code&gt;createMediaElementSource()&lt;/code&gt; 、次いでを通してオーディオを通過&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt;にそれを供給する前&lt;a href=&quot;../audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; &lt;/a&gt;再生用。マウスポインターが移動すると、 &lt;code&gt;updatePage()&lt;/code&gt; 関数が呼び出され、現在のゲインがマウスのY位置をウィンドウ全体の高さで割った比率として計算されます。したがって、マウスポインタを上下に動かすと、再生中の音楽の音量を増減できます。</target>
        </trans-unit>
        <trans-unit id="e8d8cea4d369b64c0ff78d836cd8a59e54eadaff" translate="yes" xml:space="preserve">
          <source>This simple example creates a source from an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element using &lt;code&gt;createMediaElementSource()&lt;/code&gt;, then passes the audio through a &lt;a href=&quot;gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; before feeding it into the &lt;a href=&quot;audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt; for playback. When the mouse pointer is moved, the &lt;code&gt;updatePage()&lt;/code&gt; function is invoked, which calculates the current gain as a ratio of mouse Y position divided by overall window height. You can therefore increase and decrease the volume of the playing music by moving the mouse pointer up and down.</source>
          <target state="translated">この単純な例では、ソースから作成&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;使用して要素 &lt;code&gt;createMediaElementSource()&lt;/code&gt; 、次いでを通してオーディオを通過&lt;a href=&quot;gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt;にそれを供給する前&lt;a href=&quot;audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; &lt;/a&gt;再生用。マウスポインターが移動すると、 &lt;code&gt;updatePage()&lt;/code&gt; 関数が呼び出され、現在のゲインがマウスのY位置をウィンドウ全体の高さで割った比率として計算されます。したがって、マウスポインタを上下に動かすと、再生中の音楽の音量を増減できます。</target>
        </trans-unit>
        <trans-unit id="372accc4b0d899a37afb1ba7e92d4891bb128666" translate="yes" xml:space="preserve">
          <source>This simple example creates an event listener for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event which sets the &lt;a href=&quot;htmlmediaelement/srcobject&quot;&gt;&lt;code&gt;srcObject&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element with the ID &lt;code&gt;&quot;videobox&quot;&lt;/code&gt; to the first stream in the list passed in the event's &lt;a href=&quot;rtctrackevent/streams&quot;&gt;&lt;code&gt;streams&lt;/code&gt;&lt;/a&gt; array.</source>
          <target state="translated">この単純な例では、イベント・リスナー作成 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; 設定イベント&lt;a href=&quot;htmlmediaelement/srcobject&quot;&gt; &lt;code&gt;srcObject&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; IDと要素 &lt;code&gt;&quot;videobox&quot;&lt;/code&gt; イベントのに渡されたリストの最初のストリームに&lt;a href=&quot;rtctrackevent/streams&quot;&gt; &lt;code&gt;streams&lt;/code&gt; &lt;/a&gt;アレイ。</target>
        </trans-unit>
        <trans-unit id="62946de0d026f453634ed9c54fe6cec3b00f88a8" translate="yes" xml:space="preserve">
          <source>This simple example features a media element source with two control buttons (see our &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html&quot;&gt;webaudio-examples repo&lt;/a&gt; for the source code, or &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-param/&quot;&gt;view the example live&lt;/a&gt;). When the buttons are pressed, the &lt;code&gt;currGain&lt;/code&gt; variable is incremented/decremented by 0.25, then the &lt;code&gt;setValueAtTime()&lt;/code&gt; method is used to set the gain value equal to &lt;code&gt;currGain&lt;/code&gt;, one second from now (&lt;code&gt;audioCtx.currentTime + 1&lt;/code&gt;.)</source>
          <target state="translated">この簡単な例は、2つのコントロールボタンを持つメディア要素ソースを特徴としています（ソースコードについては、&lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html&quot;&gt;webaudio-examplesリポジトリ&lt;/a&gt;を参照するか&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-param/&quot;&gt;、サンプルのliveを&lt;/a&gt;ご覧ください）。ボタンが押されると、 &lt;code&gt;currGain&lt;/code&gt; 変数が0.25ずつインクリメント/デクリメントされます。次に、 &lt;code&gt;setValueAtTime()&lt;/code&gt; メソッドを使用して、1秒後の &lt;code&gt;currGain&lt;/code&gt; に等しいゲイン値を設定します（ &lt;code&gt;audioCtx.currentTime + 1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="66d28f52e9f6eeeef2494ed8233d2ee6e0b03c92" translate="yes" xml:space="preserve">
          <source>This simple example gets the local candidate list from the &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; for the first &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, then outputs to the console all of the candidates in the list.</source>
          <target state="translated">この単純な例では、ローカルから候補リストを取得し&lt;a href=&quot;../rtcicetransport&quot;&gt; &lt;code&gt;RTCIceTransport&lt;/code&gt; &lt;/a&gt;最初ため&lt;a href=&quot;../rtcrtpsender&quot;&gt; &lt;code&gt;RTCRtpSender&lt;/code&gt; &lt;/a&gt;上&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;し、リスト内のすべての候補者のコンソールに出力します。</target>
        </trans-unit>
        <trans-unit id="631eb147f358f73492d8c8be5cc24968c47e36f9" translate="yes" xml:space="preserve">
          <source>This simple example gets the remote candidate list from the &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; for the first &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, then outputs to the console all of the candidates in the list.</source>
          <target state="translated">この単純な例では、リモートからの候補リストを取得し&lt;a href=&quot;../rtcicetransport&quot;&gt; &lt;code&gt;RTCIceTransport&lt;/code&gt; &lt;/a&gt;最初ため&lt;a href=&quot;../rtcrtpsender&quot;&gt; &lt;code&gt;RTCRtpSender&lt;/code&gt; &lt;/a&gt;上&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;し、リスト内のすべての候補者のコンソールに出力します。</target>
        </trans-unit>
        <trans-unit id="729a7c1a456f1bc8b5380fbaf89d99c296372b36" translate="yes" xml:space="preserve">
          <source>This simple example just fetches the current number of audio tracks in the media element whenever a track is removed from the media element.</source>
          <target state="translated">この単純な例では、トラックがメディア要素から削除されるたびに、メディア要素内のオーディオトラックの現在の数を取得するだけです。</target>
        </trans-unit>
        <trans-unit id="3012459aa16bda50cb463cb23a5919dddff432a0" translate="yes" xml:space="preserve">
          <source>This simple example just fetches the current number of video tracks in the media element whenever a track is removed from the media element.</source>
          <target state="translated">この単純な例では、トラックが media 要素から削除されるたびに、media 要素内の現在のビデオトラックの数を取得しています。</target>
        </trans-unit>
        <trans-unit id="af293945d03b975ab030a1c17d53234a86668fe1" translate="yes" xml:space="preserve">
          <source>This simple example looks to see if your browser supports constraining the frame rate when requesting video tracks.</source>
          <target state="translated">このシンプルな例では、ビデオトラックをリクエストする際に、ブラウザがフレームレートの制限をサポートしているかどうかを確認しています。</target>
        </trans-unit>
        <trans-unit id="d62ec6a4302806c1d0aa55ba467745f3fc87e449" translate="yes" xml:space="preserve">
          <source>This simple example obtains a JSON string representing an &lt;code&gt;RTCIceCandidate&lt;/code&gt; found in the variable &lt;code&gt;candidate&lt;/code&gt;.</source>
          <target state="translated">この簡単な例では、変数 &lt;code&gt;candidate&lt;/code&gt; 見つかった &lt;code&gt;RTCIceCandidate&lt;/code&gt; を表すJSON文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="a54f0296e2b9c80df64d85a84fb5055b51a20984" translate="yes" xml:space="preserve">
          <source>This simple example obtains the statistics for an &lt;code&gt;RTCRtpReceiver&lt;/code&gt; and updates an element's &lt;a href=&quot;../htmlelement/innertext&quot;&gt;&lt;code&gt;innerText&lt;/code&gt;&lt;/a&gt; to display the number of packets lost.</source>
          <target state="translated">この簡単な例では、 &lt;code&gt;RTCRtpReceiver&lt;/code&gt; の統計を取得し、要素の&lt;a href=&quot;../htmlelement/innertext&quot;&gt; &lt;code&gt;innerText&lt;/code&gt; &lt;/a&gt;を更新して、失われたパケットの数を表示します。</target>
        </trans-unit>
        <trans-unit id="428d4928d871f396cd25876aff5d104881111650" translate="yes" xml:space="preserve">
          <source>This simple example obtains the statistics for an &lt;code&gt;RTCRtpSender&lt;/code&gt; and updates an element's &lt;a href=&quot;../htmlelement/innertext&quot;&gt;&lt;code&gt;innerText&lt;/code&gt;&lt;/a&gt; to display the current round trip time for requests on the sender.</source>
          <target state="translated">この簡単な例では、 &lt;code&gt;RTCRtpSender&lt;/code&gt; の統計を取得し、要素の&lt;a href=&quot;../htmlelement/innertext&quot;&gt; &lt;code&gt;innerText&lt;/code&gt; &lt;/a&gt;を更新して、送信者の要求の現在の往復時間を表示します。</target>
        </trans-unit>
        <trans-unit id="d68a62b1c7d59d3273ee040e043e63e0d554cbc5" translate="yes" xml:space="preserve">
          <source>This simple function reports whether or not full-screen mode is currently active, using the obsolete &lt;code&gt;fullscreen&lt;/code&gt; property.</source>
          <target state="translated">この単純な関数は、廃止された &lt;code&gt;fullscreen&lt;/code&gt; プロパティを使用して、フルスクリーンモードが現在アクティブかどうかを報告します。</target>
        </trans-unit>
        <trans-unit id="2c53e64d93ec17b620233e76b8c6f8128360b5e2" translate="yes" xml:space="preserve">
          <source>This simple snippet of code shows the creation of some audio nodes, and how the &lt;code&gt;AudioNode&lt;/code&gt; properties and methods can be used. You can find examples of such usage on any of the examples linked to on the &lt;a href=&quot;web_audio_api&quot;&gt;Web Audio API&lt;/a&gt; landing page (for example &lt;a href=&quot;https://github.com/mdn/violent-theremin&quot;&gt;Violent Theremin&lt;/a&gt;.)</source>
          <target state="translated">この簡単なコードスニペットは、いくつかのオーディオノードの作成と、 &lt;code&gt;AudioNode&lt;/code&gt; プロパティとメソッドの使用方法を示しています。このような使用例は、&lt;a href=&quot;web_audio_api&quot;&gt;Web Audio APIの&lt;/a&gt;ランディングページにリンクされている例（&lt;a href=&quot;https://github.com/mdn/violent-theremin&quot;&gt;Violent Theremin&lt;/a&gt;など）にあります。</target>
        </trans-unit>
        <trans-unit id="934dc1f6e8163d1aa010a76d67271e4d59c80d9e" translate="yes" xml:space="preserve">
          <source>This simply calls the &lt;code&gt;&lt;a href=&quot;#Stopping_the_input_stream&quot;&gt;stop()&lt;/a&gt;&lt;/code&gt; function we covered earlier.</source>
          <target state="translated">これは、 &lt;code&gt;&lt;a href=&quot;#Stopping_the_input_stream&quot;&gt;stop()&lt;/a&gt;&lt;/code&gt; たstop（）関数を呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="5b390ddbd0fc02d2b58227e3940abec62d5fe82c" translate="yes" xml:space="preserve">
          <source>This simply creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; which we'll style with CSS below to make into a box that resizes and changes color and such.</source>
          <target state="translated">これは単純に&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;を作成し、以下のCSSでスタイルを設定して、色などをサイズ変更して変更するボックスにします。</target>
        </trans-unit>
        <trans-unit id="78544b633f60feeae8943dd8b91d03d7b0daad81" translate="yes" xml:space="preserve">
          <source>This simply sets the value of the master gain node's &lt;code&gt;gain&lt;/code&gt;&lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; to the slider's new value.</source>
          <target state="translated">これは、マスターゲインノードの &lt;code&gt;gain&lt;/code&gt; &lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt;の値をスライダーの新しい値に設定するだけです。</target>
        </trans-unit>
        <trans-unit id="1517080b547cc6fe19475d4d32b07919ed8c9644" translate="yes" xml:space="preserve">
          <source>This simply sets up all the event listeners for our &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element so we can handle the touch events as they occur.</source>
          <target state="translated">これは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のすべてのイベントリスナーを設定するだけなので、発生したタッチイベントを処理できます。</target>
        </trans-unit>
        <trans-unit id="f99944f8edf5f83218c7b9b8d2a1cae219d6f82e" translate="yes" xml:space="preserve">
          <source>This simply stops the active tracks, sets the &lt;code&gt;videoTrack&lt;/code&gt; and &lt;code&gt;audioTrack&lt;/code&gt; variables to &lt;code&gt;null&lt;/code&gt; so we know they're gone, and removes the stream from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element by setting &lt;a href=&quot;../htmlmediaelement/srcobject&quot;&gt;&lt;code&gt;HTMLMediaElement.srcObject&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">これは単に、アクティブなトラックを停止し、設定し &lt;code&gt;videoTrack&lt;/code&gt; と &lt;code&gt;audioTrack&lt;/code&gt; に変数を &lt;code&gt;null&lt;/code&gt; に、我々は、彼らが行っている知っているので、そしてから流れ削除&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;設定することで、要素を&lt;a href=&quot;../htmlmediaelement/srcobject&quot;&gt; &lt;code&gt;HTMLMediaElement.srcObject&lt;/code&gt; を&lt;/a&gt;する &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17bb1abeabd65c0150a4de303c945d827d6d98ac" translate="yes" xml:space="preserve">
          <source>This simply uses &lt;code&gt;onpointerdown&lt;/code&gt; to establish the function &lt;code&gt;handleDown()&lt;/code&gt; as the event handler for pointer down events.</source>
          <target state="translated">これは単に、 &lt;code&gt;onpointerdown&lt;/code&gt; を使用して、 &lt;code&gt;handleDown()&lt;/code&gt; 関数をポインターダウンイベントのイベントハンドラーとして確立します。</target>
        </trans-unit>
        <trans-unit id="1772e9baea979cd7dbd615a55dd331f1c78d9320" translate="yes" xml:space="preserve">
          <source>This slows down the vertical velocity each frame, so that the ball will just bounce on the floor in the end.</source>
          <target state="translated">これにより、各フレームの垂直方向の速度が遅くなり、最終的にはボールが床に跳ね返るだけになります。</target>
        </trans-unit>
        <trans-unit id="6e598de3ad6ec75c714908de6a306b61738fde52" translate="yes" xml:space="preserve">
          <source>This snippet creates a blank &lt;code&gt;ImageData&lt;/code&gt; object using the &lt;code&gt;createImageData()&lt;/code&gt; method.</source>
          <target state="translated">このスニペットは、 &lt;code&gt;createImageData()&lt;/code&gt; メソッドを使用して空の &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="d007f46febd9f6e95ec0e80e02195178ecb6f7a0" translate="yes" xml:space="preserve">
          <source>This snippet establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; event that calls a function, &lt;code&gt;addToTrackList()&lt;/code&gt;, passing in the &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt; object representing the newly-added track. In this scenario, that function's role is to add the new track to a list of audio tracks available to choose from.</source>
          <target state="translated">このスニペットは、ハンドラ確立 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; の、関数を呼び出すイベント &lt;code&gt;addToTrackList()&lt;/code&gt; を渡し、&lt;a href=&quot;../audiotrack&quot;&gt; &lt;code&gt;AudioTrack&lt;/code&gt; の&lt;/a&gt;新たに追加されたトラックを表すオブジェクト。このシナリオでは、その機能の役割は、選択可能なオーディオトラックのリストに新しいトラックを追加することです。</target>
        </trans-unit>
        <trans-unit id="acce58a0354c3b0717e40dffe3cdb82365641d66" translate="yes" xml:space="preserve">
          <source>This snippet establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; event that calls a function, &lt;code&gt;addToTrackList()&lt;/code&gt;, passing in the &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt; object representing the newly-added track. In this scenario, that function's role is to add the new track to a list of video tracks available to choose from.</source>
          <target state="translated">このスニペットは、ハンドラ確立 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; の、関数を呼び出すイベント &lt;code&gt;addToTrackList()&lt;/code&gt; を渡し、&lt;a href=&quot;../videotrack&quot;&gt; &lt;code&gt;VideoTrack&lt;/code&gt; の&lt;/a&gt;新たに追加されたトラックを表すオブジェクト。このシナリオでは、その機能の役割は、選択可能なビデオトラックのリストに新しいトラックを追加することです。</target>
        </trans-unit>
        <trans-unit id="ee5e2394e7de6e1bc86facbbd15b407337a7de34" translate="yes" xml:space="preserve">
          <source>This snippet establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; event that looks at each of the tracks in the list, calling a function to update the state of a user interface control that indicates the current state of the track.</source>
          <target state="translated">このスニペットは、リスト内の各トラックを調べる &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを確立し、トラックの現在の状態を示すユーザーインターフェイスコントロールの状態を更新する関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="71c08343009bf15980b3b732a5eb824792a609bb" translate="yes" xml:space="preserve">
          <source>This snippet establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/gatheringstatechange&quot;&gt;gatheringstatechange&lt;/a&gt;&lt;/code&gt; event that checks to see if the state has changed to &lt;code&gt;&quot;complete&quot;&lt;/code&gt;, indicating that all ICE candidates from both the local and remote peers have been received and processed.</source>
          <target state="translated">このスニペットは、状態が &lt;code&gt;&quot;complete&quot;&lt;/code&gt; に変更されたかどうかを確認して、ローカルピアとリモートピアの両方からのすべてのICE候補が受信および処理されたことを確認する、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/gatheringstatechange&quot;&gt;gatheringstatechange&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを確立します。</target>
        </trans-unit>
        <trans-unit id="f62497ae6d64852072050f64b2ceada4c70ddf5c" translate="yes" xml:space="preserve">
          <source>This snippet establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/statechange&quot;&gt;statechange&lt;/a&gt;&lt;/code&gt; event that looks to see if the transport has entered the &lt;code&gt;&quot;failed&quot;&lt;/code&gt; state, which indicates that the connection has failed with no chance of being automatically restored.</source>
          <target state="translated">このスニペットは、トランスポートが &lt;code&gt;&quot;failed&quot;&lt;/code&gt; 状態になったかどうかを確認する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/statechange&quot;&gt;statechange&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを確立します。これは、接続が自動的に復元されることなく失敗したことを示します。</target>
        </trans-unit>
        <trans-unit id="2c7ad499762466cb287820b29315e970edd689da" translate="yes" xml:space="preserve">
          <source>This snippet fetches the text from the clipboard and appends it to the first element found with the class &lt;code&gt;&quot;editor&quot;&lt;/code&gt;. Since &lt;a href=&quot;clipboard/readtext&quot;&gt;&lt;code&gt;readText()&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;clipboard/read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, for that matter) returns an empty string if the clipboard isn't text, this code is safe.</source>
          <target state="translated">このスニペットは、クリップボードからテキストをフェッチし、クラス &lt;code&gt;&quot;editor&quot;&lt;/code&gt; で見つかった最初の要素に追加します。以来&lt;a href=&quot;clipboard/readtext&quot;&gt; &lt;code&gt;readText()&lt;/code&gt; &lt;/a&gt;（および&lt;a href=&quot;clipboard/read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;クリップボードがテキストでない場合は、そのことについては）このコードは安全である、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="419cffb1a3f2831f14b0c7e270678f22cf68fb5e" translate="yes" xml:space="preserve">
          <source>This snippet gets the number of audio tracks in the first &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element found in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOM&lt;/a&gt; by &lt;a href=&quot;../document/queryselector&quot;&gt;&lt;code&gt;querySelector()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このスニペットは、&lt;a href=&quot;../document/queryselector&quot;&gt; &lt;code&gt;querySelector()&lt;/code&gt; &lt;/a&gt;によって&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOMで&lt;/a&gt;見つかった最初の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のオーディオトラックの数を取得します。</target>
        </trans-unit>
        <trans-unit id="1020a9e8bdf42bd77fe02250d597652f495868b4" translate="yes" xml:space="preserve">
          <source>This snippet gets the number of video tracks in the first &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element found in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOM&lt;/a&gt; by &lt;a href=&quot;../document/queryselector&quot;&gt;&lt;code&gt;querySelector()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このスニペットは、&lt;a href=&quot;../document/queryselector&quot;&gt; &lt;code&gt;querySelector()&lt;/code&gt; &lt;/a&gt;によって&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOMで&lt;/a&gt;見つかった最初の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のビデオトラックの数を取得します。</target>
        </trans-unit>
        <trans-unit id="244a8ef0f961f1ec3a0bc5f76614f9b0594e212b" translate="yes" xml:space="preserve">
          <source>This snippet is derived loosely from the full, working example you'll find in &lt;a href=&quot;webrtc_api/using_dtmf#When_a_tone_finishes_playing&quot;&gt;When a tone finishes playing&lt;/a&gt; in &lt;a href=&quot;webrtc_api/using_dtmf&quot;&gt;Using DTMF with WebRTC&lt;/a&gt;. It appends each tone to a display box as it's played, and, once all tones have been sent, re-enabled a previously-disabled &quot;Send&quot; button, allowing the next DMTF string to be entered.</source>
          <target state="translated">このスニペットは、&lt;a href=&quot;webrtc_api/using_dtmf#When_a_tone_finishes_playing&quot;&gt;「&lt;/a&gt;&lt;a href=&quot;webrtc_api/using_dtmf&quot;&gt;DTMFをWebRTC&lt;/a&gt;で使用する」の「トーンの再生が終了したとき」にある完全で実用的な例から大まかに派生しています。再生時に各トーンを表示ボックスに追加し、すべてのトーンが送信されると、以前に無効にされていた[送信]ボタンを再度有効にして、次のDMTF文字列を入力できるようにします。</target>
        </trans-unit>
        <trans-unit id="1addc41a1ab299528f416543e23fe9958c6dc27d" translate="yes" xml:space="preserve">
          <source>This snippet is excerpted from our &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;Speech synthesiser demo&lt;/a&gt;. When a form containing the text we want to speak is submitted, we (amongst other things) create a new utterance containing this text, then speak it by passing it into &lt;code&gt;speak()&lt;/code&gt; as a parameter.</source>
          <target state="translated">このスニペットは、&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;スピーチシンセサイザーのデモ&lt;/a&gt;からの抜粋です。話したいテキストを含むフォームが送信されると、（とりわけ）このテキストを含む新しい発話を作成し、 &lt;code&gt;speak()&lt;/code&gt; にパラメーターとして渡して話します。</target>
        </trans-unit>
        <trans-unit id="cc1c1f558bf113b82956fb26fcb7f8d5675c6b97" translate="yes" xml:space="preserve">
          <source>This snippet replaces the contents of the element whose class is &lt;code&gt;&quot;cliptext&quot;&lt;/code&gt; with the text contents of the clipboard. Perhaps this code is being used in a browser extension that displays the current clipboard contents, automatically updating periodically or when specific events fire.</source>
          <target state="translated">このスニペットは、クラスが &lt;code&gt;&quot;cliptext&quot;&lt;/code&gt; である要素のコンテンツをクリップボードのテキストコンテンツに置き換えます。おそらく、このコードは現在のクリップボードの内容を表示するブラウザー拡張機能で使用され、定期的に、または特定のイベントが発生したときに自動的に更新されます。</target>
        </trans-unit>
        <trans-unit id="5272114d4bab8a6a6934d16d56c198f50f2f0124" translate="yes" xml:space="preserve">
          <source>This snippet sets the &lt;code&gt;sourceBuffer&lt;/code&gt; mode to 'sequence' if it is currently set to 'segments', thus setting the play order to the sequence in which media segments are appended.</source>
          <target state="translated">このスニペットは、現在「セグメント」に設定されている場合、 &lt;code&gt;sourceBuffer&lt;/code&gt; モードを「シーケンス」に設定します。したがって、再生順序は、メディアセグメントが追加されるシーケンスに設定されます。</target>
        </trans-unit>
        <trans-unit id="b2b3ef87722917a7076798df8d2b646bf75e9686" translate="yes" xml:space="preserve">
          <source>This snippet shows a handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/signalingstatechange&quot;&gt;signalingstatechange&lt;/a&gt;&lt;/code&gt; that looks for the &lt;code&gt;&quot;have-local-pranswer&quot;&lt;/code&gt; signaling state&amp;mdash;indicating that a remote offer has been received and a local description of type &lt;code&gt;&quot;pranswer&quot;&lt;/code&gt; has been applied in response.</source>
          <target state="translated">このスニペットショーのハンドラ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/signalingstatechange&quot;&gt;signalingstatechange&lt;/a&gt;&lt;/code&gt; を探していること &lt;code&gt;&quot;have-local-pranswer&quot;&lt;/code&gt; リモートオファーを受信したとタイプの局所記述ことを示す状態をシグナリング &lt;code&gt;&quot;pranswer&quot;&lt;/code&gt; 応答して適用されています。</target>
        </trans-unit>
        <trans-unit id="9f540bec63d8c1594b3819e5d239390e21f77b2d" translate="yes" xml:space="preserve">
          <source>This snippet simply shows an observer being created, an element being observed, and then being unobserved.</source>
          <target state="translated">このスニペットは、オブザーバが作成され、要素が観察され、その後観察されなくなることを単純に示しています。</target>
        </trans-unit>
        <trans-unit id="9c8ed8cd86d44b357190d339651fd83ba5835fd9" translate="yes" xml:space="preserve">
          <source>This solution may look scary big, but no need to worry too much: after minification, the uncompressed raw file is &lt;a href=&quot;https://github.com/anonyco/BestBase64EncoderDecoder/blob/master/atobAndBtoaTogether.min.js&quot;&gt;scarcely over a kilobyte in size&lt;/a&gt;. This solution is very standard and very widely applicable because it can be used to encode high code point characters in a way that the browser can understand it as seen on the demo page &lt;a href=&quot;https://anonyco.github.io/BestBase64EncoderDecoder/demo.html&quot;&gt;here&lt;/a&gt;. The full github repository is &lt;a href=&quot;https://github.com/anonyco/BestBase64EncoderDecoder&quot;&gt;AnonyCo's BestBase64EncoderDecoder&lt;/a&gt;.</source>
          <target state="translated">このソリューションは恐ろしく大きく見えるかもしれませんが、あまり心配する必要はありません。縮小後、圧縮されていないrawファイルの&lt;a href=&quot;https://github.com/anonyco/BestBase64EncoderDecoder/blob/master/atobAndBtoaTogether.min.js&quot;&gt;サイズは1キロバイトを超えること&lt;/a&gt;はほとんどありません。このソリューションは非常に標準的で非常に広く適用できます。なぜなら、デモページにあるように、ブラウザがそれを理解できる方法で高コードポイント文字をエンコードするために使用できるから&lt;a href=&quot;https://anonyco.github.io/BestBase64EncoderDecoder/demo.html&quot;&gt;です&lt;/a&gt;。完全なgithubリポジトリは、&lt;a href=&quot;https://github.com/anonyco/BestBase64EncoderDecoder&quot;&gt;AnonyCoのBestBase64EncoderDecoder&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e6072bb5671503756464153c47c3cca6405e429d" translate="yes" xml:space="preserve">
          <source>This special behavior will be removed once the non-&lt;code&gt;MediaStream&lt;/code&gt; source support is brought up to specification and the method is unprefixed. See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1259788#c160&quot;&gt;bug 1259788, comment 160&lt;/a&gt; for details.</source>
          <target state="translated">この特別な動作は、非 &lt;code&gt;MediaStream&lt;/code&gt; ソースサポートが仕様に達し、メソッドのプレフィックスがなくなると削除されます。詳細については、&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1259788#c160&quot;&gt;バグ1259788、コメント160&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="cf7e25fdad9cb71f10a8a0964102e061fefad76a" translate="yes" xml:space="preserve">
          <source>This special type with an empty session description is used to roll back to the previous stable state.</source>
          <target state="translated">空のセッション記述を持つこの特別な型は、以前の安定状態にロールバックするために使用されます。</target>
        </trans-unit>
        <trans-unit id="453b0b6ba0472dc7af0965b51900f9cbe1887102" translate="yes" xml:space="preserve">
          <source>This specification adds two new methods to any objects implementing the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interfaces:</source>
          <target state="translated">この仕様は、&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インターフェースを実装するオブジェクトに2つの新しいメソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="d3496baf1d0e8b5a1af8e111540892c33d45ea47" translate="yes" xml:space="preserve">
          <source>This specification fires events with the following custom interface:</source>
          <target state="translated">この仕様では、以下のカスタムインタフェースでイベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="07d65fe1f53e71bc5a30e3bbfb62af8978ba25d4" translate="yes" xml:space="preserve">
          <source>This specifies what color values to use when calling the &lt;a href=&quot;clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method. The values are clamped between 0 and 1.</source>
          <target state="translated">これは、&lt;a href=&quot;clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すときに使用する色の値を指定します。値は0と1の間で固定されます。</target>
        </trans-unit>
        <trans-unit id="c48934825840f99536bbd248f2cfdbbb04496639" translate="yes" xml:space="preserve">
          <source>This specifies what depth value to use when calling the &lt;a href=&quot;clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method. The value is clamped between 0 and 1.</source>
          <target state="translated">これは、&lt;a href=&quot;clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すときに使用する深度値を指定します。値は0と1の間に固定されます。</target>
        </trans-unit>
        <trans-unit id="945b5971499ba094c0bd1f8ffc90c87cef3ca67a" translate="yes" xml:space="preserve">
          <source>This specifies what stencil value to use when calling the &lt;a href=&quot;clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、&lt;a href=&quot;clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すときに使用するステンシル値を指定します。</target>
        </trans-unit>
        <trans-unit id="b86b3852db070a05c766cfdf0c0990f3bef68ee1" translate="yes" xml:space="preserve">
          <source>This starts by calling &lt;code&gt;beginPath()&lt;/code&gt; to start a new shape path. We then use the &lt;code&gt;moveTo()&lt;/code&gt; method to move the starting point to the desired position. Below this, two lines are drawn which make up two sides of the triangle.</source>
          <target state="translated">これは、 &lt;code&gt;beginPath()&lt;/code&gt; を呼び出して新しいシェイプパスを開始することから始まります。次に &lt;code&gt;moveTo()&lt;/code&gt; メソッドを使用して、開始点を目的の位置に移動します。この下に、三角形の2つの辺を構成する2つの線が描画されます。</target>
        </trans-unit>
        <trans-unit id="0910c2513770a1ef708b385fdd975a5c1ab3a844" translate="yes" xml:space="preserve">
          <source>This starts by closing each peer's &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;, then, similarly, each &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;. Then all the saved references to these objects are set to &lt;code&gt;null&lt;/code&gt; to avoid accidental reuse, and the user interface is updated to reflect the fact that the connection has been closed.</source>
          <target state="translated">&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;、各ピアのRTCDataChannelを閉じ、次に同様に各&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; を閉じ&lt;/a&gt;ます。次に、これらのオブジェクトへの保存されたすべての参照が &lt;code&gt;null&lt;/code&gt; に設定され、誤って再利用されないようにし、ユーザーインターフェイスが更新されて、接続が閉じられたことを反映します。</target>
        </trans-unit>
        <trans-unit id="bb4850368e3402440905d0bf3859b0251192f8d8" translate="yes" xml:space="preserve">
          <source>This starts by fetching the URL of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; with the ID &lt;code&gt;fileList&lt;/code&gt;. This is the block into which we'll insert our file list, including thumbnails.</source>
          <target state="translated">まず、IDが &lt;code&gt;fileList&lt;/code&gt; の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; の&lt;/a&gt; URLをフェッチします。これは、サムネイルを含むファイルリストを挿入するブロックです。</target>
        </trans-unit>
        <trans-unit id="e3f4c1e654ea09c63de98e73763fe4456cc6f72c" translate="yes" xml:space="preserve">
          <source>This starts by looking at the value of the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;fullscreenElement&lt;/code&gt; attribute. In a real-world deployment, at this time, you'll want to check for prefixed versions of this (&lt;code&gt;mozFullscreenElement&lt;/code&gt;, &lt;code&gt;msFullscreenElement&lt;/code&gt;, or &lt;code&gt;webkitFullscreenElement&lt;/code&gt;, for example). If the value is &lt;code&gt;null&lt;/code&gt;, the document is currently in windowed mode, so we need to switch to full-screen mode; otherwise, it's the element that's currently in full-screen mode. Switching to full-screen mode is done by calling &lt;a href=&quot;element/requestfullscreen&quot;&gt;&lt;code&gt;Element.requestFullscreen()&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">まず、&lt;a href=&quot;document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;fullscreenElement&lt;/code&gt; 属性の値を確認します。現実のデプロイメントでは、現時点で、これのプレフィックス付きバージョン（ &lt;code&gt;mozFullscreenElement&lt;/code&gt; 、 &lt;code&gt;msFullscreenElement&lt;/code&gt; 、または &lt;code&gt;webkitFullscreenElement&lt;/code&gt; など）を確認する必要があります。値が &lt;code&gt;null&lt;/code&gt; の場合、ドキュメントは現在ウィンドウモードになっているため、全画面モードに切り替える必要があります。それ以外の場合は、現在全画面モードになっている要素です。全画面モードへの切り替えは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素で&lt;a href=&quot;element/requestfullscreen&quot;&gt; &lt;code&gt;Element.requestFullscreen()&lt;/code&gt; &lt;/a&gt;を呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="fc9688d9f557f598fe08cb399b8044e024e2f0fd" translate="yes" xml:space="preserve">
          <source>This starts by looking at the value of the &lt;code&gt;fullscreenElement&lt;/code&gt; attribute on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; (checking it prefixed with both &lt;code&gt;moz&lt;/code&gt;, &lt;code&gt;ms&lt;/code&gt;, or &lt;code&gt;webkit&lt;/code&gt;). If it's &lt;code&gt;null&lt;/code&gt;, the document is currently in windowed mode, so we need to switch to fullscreen mode. Switching to fullscreen mode is done by calling &lt;a href=&quot;../element/requestfullscreen&quot;&gt;&lt;code&gt;element.requestFullscreen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値を見て、この開始 &lt;code&gt;fullscreenElement&lt;/code&gt; の属性&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt;（それは両方の接頭辞チェック &lt;code&gt;moz&lt;/code&gt; 、 &lt;code&gt;ms&lt;/code&gt; 、または &lt;code&gt;webkit&lt;/code&gt; ）。それの場合は &lt;code&gt;null&lt;/code&gt; を我々はフルスクリーンモードに切り替える必要があるので、文書は、ウィンドウモードに現在あります。全画面モードへの切り替えは、&lt;a href=&quot;../element/requestfullscreen&quot;&gt; &lt;code&gt;element.requestFullscreen()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="c80228dd86401dbee54fcfe94ca22d8c6cd8d5c2" translate="yes" xml:space="preserve">
          <source>This starts by specifying the precision of the &lt;code&gt;float&lt;/code&gt; type, as required. Then we set the global &lt;code&gt;gl_FragColor&lt;/code&gt; to the value of the uniform &lt;code&gt;uGlobalColor&lt;/code&gt;, which is set by the JavaScript code to the color being used to draw the square.</source>
          <target state="translated">まず、必要に応じて、 &lt;code&gt;float&lt;/code&gt; 型の精度を指定します。次に、グローバル &lt;code&gt;gl_FragColor&lt;/code&gt; を、ユニフォーム &lt;code&gt;uGlobalColor&lt;/code&gt; の値に設定します。これは、JavaScriptコードによって、正方形の描画に使用される色に設定されます。</target>
        </trans-unit>
        <trans-unit id="2c8423ae95b22551dbda678ed4ff16856e1518ed" translate="yes" xml:space="preserve">
          <source>This string will always be the same as the one provided by the associated &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../mediastreamtrack/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; property. It will also match the statistics object's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCCodecStats/codec&quot;&gt;&lt;code&gt;RTCCodecStats.codec&lt;/code&gt;&lt;/a&gt; property's media type.</source>
          <target state="translated">この文字列は、関連付けられた&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../mediastreamtrack/kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;プロパティによって提供されるものと常に同じです。また、統計オブジェクトの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCCodecStats/codec&quot;&gt; &lt;code&gt;RTCCodecStats.codec&lt;/code&gt; &lt;/a&gt;プロパティのメディアタイプと一致します。</target>
        </trans-unit>
        <trans-unit id="7d147da8698c4e403a249bb5ccf2c7a7aabd3851" translate="yes" xml:space="preserve">
          <source>This subtracts the time at which navigation began (&lt;a href=&quot;performancetiming/navigationstart&quot;&gt;&lt;code&gt;navigationStart&lt;/code&gt;&lt;/a&gt;) from the time at which the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler returns (&lt;a href=&quot;performancetiming/loadeventend&quot;&gt;&lt;code&gt;loadEventEnd&lt;/code&gt;&lt;/a&gt;). This gives you the perceived page load time.</source>
          <target state="translated">これにより、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントハンドラーが戻る時間（&lt;a href=&quot;performancetiming/loadeventend&quot;&gt; &lt;code&gt;loadEventEnd&lt;/code&gt; &lt;/a&gt;）から、ナビゲーションが開始された時間（&lt;a href=&quot;performancetiming/navigationstart&quot;&gt; &lt;code&gt;navigationStart&lt;/code&gt; &lt;/a&gt;）が減算されます。これにより、認識されたページの読み込み時間がわかります。</target>
        </trans-unit>
        <trans-unit id="3bbd1d4506490bfa1e7991b0283ca8e60d5badfa" translate="yes" xml:space="preserve">
          <source>This table shows the Windows scan codes representing keys and the &lt;code&gt;KeyboardEvent.code&lt;/code&gt; values which correspond to those hardware keys. Only keys which generate scan codes on Windows are listed.</source>
          <target state="translated">この表は、キーを表すWindowsスキャンコードと、それらのハードウェアキーに対応する &lt;code&gt;KeyboardEvent.code&lt;/code&gt; 値を示しています。Windowsでスキャンコードを生成するキーのみがリストされています。</target>
        </trans-unit>
        <trans-unit id="b7dbe84e4fe7112efd8901f0c31970b4be7a660e" translate="yes" xml:space="preserve">
          <source>This technique makes it simpler to process multi-file uploads because the resultant data structure is more conducive to looping.</source>
          <target state="translated">この技術により、複数ファイルのアップロードをより簡単に処理することができるようになります。</target>
        </trans-unit>
        <trans-unit id="f7f1fe32ed5594775c17d7b527319423c2ccced7" translate="yes" xml:space="preserve">
          <source>This technique saves it to the desktop and is only useful in Firefox chrome context or add-on code as OS APIs are not present on web sites.</source>
          <target state="translated">この手法はデスクトップに保存し、OSのAPIはWebサイトには存在しないため、Firefox chromeのコンテキストやアドオンコードでのみ有効です。</target>
        </trans-unit>
        <trans-unit id="f1e1ae068f927195045eda4e9feb4db26c50bf78" translate="yes" xml:space="preserve">
          <source>This timeline is unique to each &lt;code&gt;document&lt;/code&gt; and persists for the lifetime of the &lt;code&gt;document&lt;/code&gt; including calls to &lt;a href=&quot;open&quot;&gt;&lt;code&gt;Document.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このタイムラインは各 &lt;code&gt;document&lt;/code&gt; 固有であり、&lt;a href=&quot;open&quot;&gt; &lt;code&gt;Document.open()&lt;/code&gt; の&lt;/a&gt;呼び出しを含む &lt;code&gt;document&lt;/code&gt; の存続期間中持続します。</target>
        </trans-unit>
        <trans-unit id="dc09f2cb31fab7211ae9363350cf2cc6623b3eaa" translate="yes" xml:space="preserve">
          <source>This topic describes the &lt;code&gt;HTMLEmbedElement&lt;/code&gt; interface as defined in the standard. It does not address earlier, non-standardized version of the interface.</source>
          <target state="translated">このトピックでは、標準で定義されている &lt;code&gt;HTMLEmbedElement&lt;/code&gt; インターフェイスについて説明します。それは、インターフェースの以前の非標準化バージョンには対応していません。</target>
        </trans-unit>
        <trans-unit id="69ebfe46555f031c911bad61ffbab40b45cc89c7" translate="yes" xml:space="preserve">
          <source>This transaction model is really useful when you consider what might happen if a user opened two instances of your web app in two different tabs simultaneously. Without transactional operations, the two instances could interfere with each other's modifications. If you are not familiar with transactions in a database, read the &lt;a href=&quot;https://en.wikipedia.org/wiki/Database_transaction&quot;&gt;Wikipedia article on transactions&lt;/a&gt;. Also see &lt;a href=&quot;#gloss_transaction&quot;&gt;transaction&lt;/a&gt; under the Definitions section.</source>
          <target state="translated">このトランザクションモデルは、ユーザーがWebアプリの2つのインスタンスを2つの異なるタブで同時に開いた場合に何が起こるかを検討するときに非常に役立ちます。トランザクション操作がないと、2つのインスタンスが互いの変更を妨害する可能性があります。データベースでのトランザクションに慣れていない場合は、トランザクション&lt;a href=&quot;https://en.wikipedia.org/wiki/Database_transaction&quot;&gt;に関するウィキペディアの記事を&lt;/a&gt;読んでください。定義セクションの&lt;a href=&quot;#gloss_transaction&quot;&gt;トランザクション&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="d2a23fa65a2779adc4d4de32bd6417f0de3f5850" translate="yes" xml:space="preserve">
          <source>This triggers renegotiation of the &lt;code&gt;RTCPeerConnection&lt;/code&gt; by sending it a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; event, which your code responds to generating an SDP offer using &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer&lt;/code&gt;&lt;/a&gt; and sending it through the signaling server to the remote peer.</source>
          <target state="translated">これにより、 &lt;code&gt;RTCPeerConnection&lt;/code&gt; の再ネゴシエーションがトリガーされます。これには、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; イベントを送信します。コードは、&lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer&lt;/code&gt; &lt;/a&gt;を使用してSDPオファーを生成し、シグナリングサーバーを介してリモートピアに送信します。</target>
        </trans-unit>
        <trans-unit id="0a89033b36b3b3744465782a14842b0486542424" translate="yes" xml:space="preserve">
          <source>This tutorial describes how to use the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element to draw 2D graphics, starting with the basics. The examples provided should give you some clear ideas what you can do with canvas and will provide code snippets that may get you started in building your own content.</source>
          <target state="translated">このチュートリアルでは、 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 要素を使用して2Dグラフィックスを描画する方法を基本から説明します。提供されている例は、キャンバスで何ができるかを明確に示し、独自のコンテンツの作成を開始できるコードスニペットを提供します。</target>
        </trans-unit>
        <trans-unit id="06a23b9982d1ed0ba9202e41a3926f3c130cbcbf" translate="yes" xml:space="preserve">
          <source>This tutorial describes how to use the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element to draw WebGL graphics, starting with the basics. The examples provided should give you some clear ideas what you can do with WebGL and will provide code snippets that may get you started in building your own content.</source>
          <target state="translated">このチュートリアルでは、 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 要素を使用してWebGLグラフィックスを描画する方法を基本から説明します。提供されている例は、WebGLで何ができるかを明確に示し、独自のコンテンツの作成を開始できるコードスニペットを提供します。</target>
        </trans-unit>
        <trans-unit id="1c0a6b60fd244e4cc9e86468e2e06384f155b217" translate="yes" xml:space="preserve">
          <source>This tutorial walks you through using the asynchronous API of IndexedDB. If you are not familiar with IndexedDB, you should first read &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Basic_Concepts_Behind_IndexedDB&quot;&gt;Basic Concepts About IndexedDB&lt;/a&gt;.</source>
          <target state="translated">このチュートリアルでは、IndexedDBの非同期APIの使用について説明します。IndexedDBに慣れていない場合は、まず&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Basic_Concepts_Behind_IndexedDB&quot;&gt;IndexedDBに関する基本概念をお&lt;/a&gt;読みください。</target>
        </trans-unit>
        <trans-unit id="0ea7fb78ba540215ae5e78cacdf2e484fe457690" translate="yes" xml:space="preserve">
          <source>This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., &lt;a href=&quot;element/getattribute&quot;&gt;&lt;code&gt;Element.getAttribute()&lt;/code&gt;&lt;/a&gt;, but certain functions (e.g., &lt;a href=&quot;element/getattributenode&quot;&gt;&lt;code&gt;Element.getAttributeNode()&lt;/code&gt;&lt;/a&gt;) or means of iterating give &lt;code&gt;Attr&lt;/code&gt; types.</source>
          <target state="translated">このタイプは、DOM要素の属性をオブジェクトとして表します。ほとんどのDOMメソッドでは、おそらく属性を文字列として直接取得します（例：&lt;a href=&quot;element/getattribute&quot;&gt; &lt;code&gt;Element.getAttribute()&lt;/code&gt; )&lt;/a&gt;が、特定の関数（例：&lt;a href=&quot;element/getattributenode&quot;&gt; &lt;code&gt;Element.getAttributeNode()&lt;/code&gt; &lt;/a&gt;）または反復の手段によって &lt;code&gt;Attr&lt;/code&gt; 型が得られます。</target>
        </trans-unit>
        <trans-unit id="04763fafc21e8131446e04a8e90665a9613343bc" translate="yes" xml:space="preserve">
          <source>This uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt; to parse the code in each editor into an object. If either call to JSON.parse() throws an exception, &lt;code&gt;handleError()&lt;/code&gt; is called to output the error message to the log.</source>
          <target state="translated">これは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; &lt;/a&gt;を使用して、各エディターのコードをオブジェクトに解析します。JSON.parse（）のいずれかの呼び出しが例外をスローした場合、 &lt;code&gt;handleError()&lt;/code&gt; が呼び出され、エラーメッセージがログに出力されます。</target>
        </trans-unit>
        <trans-unit id="266bf42f8c8fc7bc202f8b5c7fa901006d70be8f" translate="yes" xml:space="preserve">
          <source>This uses &lt;code&gt;-moz-parse&lt;/code&gt; to convert the canvas to ico. Windows XP doesn't support converting from PNG to ico, so it uses bmp instead. A download link is created by setting the download attribute. The value of the download attribute is the name it will use as the file name.</source>
          <target state="translated">これは &lt;code&gt;-moz-parse&lt;/code&gt; を使用してキャンバスをicoに変換します。Windows XPはPNGからicoへの変換をサポートしていないため、代わりにbmpを使用します。ダウンロードリンクを作成するには、download属性を設定します。ダウンロード属性の値は、ファイル名として使用する名前です。</target>
        </trans-unit>
        <trans-unit id="8c5254fd14b47cbde821d59a7c183ab837b4dadf" translate="yes" xml:space="preserve">
          <source>This uses the panel as the drag image, with the string &quot;&amp;lt;strong&amp;gt;Body&amp;lt;/strong&amp;gt;&quot; as its data, in HTML format. Dropping the panel into a text editor results in the text &quot;&lt;strong&gt;Body&lt;/strong&gt;&quot; being inserted into the text at the drop location.</source>
          <target state="translated">これは、パネルをドラッグ画像として使用し、文字列 &quot;&amp;lt;strong&amp;gt; Body &amp;lt;/ strong&amp;gt;&quot;をデータとしてHTML形式で使用します。パネルをテキストエディターにドロップすると、テキスト「&lt;strong&gt;Body&lt;/strong&gt;」がドロップ位置のテキストに挿入されます。</target>
        </trans-unit>
        <trans-unit id="b97c672f9bb40efe7e1e9ba39840aa7c5deac8c0" translate="yes" xml:space="preserve">
          <source>This uses the promise-version of the method, as supported in recent implementations (Firefox 47, for example.) If you want to support older versions, you might have to use the older callback version, which looks like this:</source>
          <target state="translated">これは、最近の実装 (例えば Firefox 47 など)でサポートされているメソッドのプロミスバージョンを使用します。 古いバージョンをサポートしたい場合は、古いバージョンのコールバックを使用しなければならないかもしれません。</target>
        </trans-unit>
        <trans-unit id="f901e4a8f38e46e2822f4795dcc201416e5ff8ff" translate="yes" xml:space="preserve">
          <source>This value can be overridden by a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formenctype&quot;&gt;formenctype&lt;/a&gt;&lt;/code&gt; attribute on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">この値は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formenctype&quot;&gt;formenctype&lt;/a&gt;&lt;/code&gt; 属性で上書きできます。</target>
        </trans-unit>
        <trans-unit id="50412f0aaa54cf253f1cd92be2d9633f76d551c8" translate="yes" xml:space="preserve">
          <source>This value controls how frequently the &lt;code&gt;audioprocess&lt;/code&gt; event is dispatched and how many sample-frames need to be processed each call. Lower values for &lt;code&gt;bufferSize&lt;/code&gt; will result in a lower (better) latency. Higher values will be necessary to avoid audio breakup and glitches. It is recommended for authors to not specify this buffer size and allow the implementation to pick a good buffer size to balance between latency and audio quality.</source>
          <target state="translated">この値は、 &lt;code&gt;audioprocess&lt;/code&gt; イベントが送出される頻度と、各呼び出しで処理する必要のあるサンプルフレームの数を制御します。 &lt;code&gt;bufferSize&lt;/code&gt; の値を小さくすると、レイテンシが低く（より良く）なります。オーディオの途切れやグリッチを回避するには、より高い値が必要になります。作成者は、このバッファサイズを指定せずに、実装がレイテンシとオーディオ品質のバランスを取るために適切なバッファサイズを選択できるようにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="88cffa70719dfcb186c86381deab00c98756eec5" translate="yes" xml:space="preserve">
          <source>This value is assumed to be 1 by default if not included in the &lt;code&gt;DOMPointInit&lt;/code&gt; object passed into &lt;code&gt;fromPoint()&lt;/code&gt;.</source>
          <target state="translated">この値はに含まれていない場合、デフォルトでは1であると仮定され &lt;code&gt;DOMPointInit&lt;/code&gt; のに渡されたオブジェクト &lt;code&gt;fromPoint()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eceb9ed3aa84ebfa6adfdfce105bd261257f24c1" translate="yes" xml:space="preserve">
          <source>This value is not typically as useful as &lt;a href=&quot;acceleration&quot;&gt;&lt;code&gt;DeviceMotionEvent.acceleration&lt;/code&gt;&lt;/a&gt;, but may be the only value available on devices that aren't able of removing gravity from the acceleration data, such as on devices that don't have a gyroscope.</source>
          <target state="translated">通常、この値は&lt;a href=&quot;acceleration&quot;&gt; &lt;code&gt;DeviceMotionEvent.acceleration&lt;/code&gt; &lt;/a&gt;ほど有用ではありませんが、ジャイロスコープを備えていないデバイスなど、加速度データから重力を取り除くことができないデバイスで使用できる唯一の値である可能性があります。</target>
        </trans-unit>
        <trans-unit id="9301e50dafeb0f36e4e229ac7d9a9c55611adcc0" translate="yes" xml:space="preserve">
          <source>This value is only used while in unordered (sometimes called &quot;unreliable&quot;) mode; that is, if &lt;a href=&quot;ordered&quot;&gt;&lt;code&gt;ordered&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この値は、順序付けされていない（「信頼できない」と呼ばれることもある）モードでのみ使用されます。つまり、&lt;a href=&quot;ordered&quot;&gt; &lt;code&gt;ordered&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;false&lt;/code&gt; の場合。</target>
        </trans-unit>
        <trans-unit id="a23a5fd7a186b34f7b449b7c2a3fdc8b7be796ea" translate="yes" xml:space="preserve">
          <source>This value is returned by the HMD and its value may be around 60 to 70 mm; in the case of some HMDs like Oculus Rift's, you can set your own IPD. Normally we don't change this value but you can play with it to change the scale of the entire scene. For example, if your IPD is set to 6000 mm, the user would view the scene like a giant looking at a Lilliputian world.</source>
          <target state="translated">この値はHMDから返されるもので、60~70mm程度の値になることがあります。通常はこの値を変更することはありませんが、シーン全体の縮尺を変更するためにこの値で遊ぶことができます。例えば、IPDを6000mmに設定した場合、ユーザーは巨人がリリプティウスの世界を見ているようなシーンを見ることになります。</target>
        </trans-unit>
        <trans-unit id="46c113b1b282fa0d0ed74cc65b531c9d94dc4b6c" translate="yes" xml:space="preserve">
          <source>This value is specified when creating the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; by setting the corresponding &lt;a href=&quot;../rtcicecandidateinit/sdpmlineindex&quot;&gt;&lt;code&gt;sdpMLineIndex&lt;/code&gt;&lt;/a&gt; value in the &lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt; object when creating a new candidate with &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;new RTCIceCandidate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この値は、&lt;a href=&quot;rtcicecandidate&quot;&gt; &lt;code&gt;new RTCIceCandidate()&lt;/code&gt; &lt;/a&gt;新しい候補を作成するときに、&lt;a href=&quot;../rtcicecandidateinit&quot;&gt; &lt;code&gt;RTCIceCandidateInit&lt;/code&gt; &lt;/a&gt;オブジェクトで対応する&lt;a href=&quot;../rtcicecandidateinit/sdpmlineindex&quot;&gt; &lt;code&gt;sdpMLineIndex&lt;/code&gt; &lt;/a&gt;値を設定することにより、&lt;a href=&quot;../rtcicecandidate&quot;&gt; &lt;code&gt;RTCIceCandidate&lt;/code&gt; を&lt;/a&gt;作成するときに指定されます。</target>
        </trans-unit>
        <trans-unit id="12d5d79c3a7be3dc3b0b8d9a0fd04d53672377e9" translate="yes" xml:space="preserve">
          <source>This value is specified when creating the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; by setting the corresponding &lt;a href=&quot;../rtcicecandidateinit/usernamefragment&quot;&gt;&lt;code&gt;usernameFragment&lt;/code&gt;&lt;/a&gt; value in the &lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt; object when creating a new candidate with &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;new RTCIceCandidate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この値は、&lt;a href=&quot;rtcicecandidate&quot;&gt; &lt;code&gt;new RTCIceCandidate()&lt;/code&gt; &lt;/a&gt;新しい候補を作成するときに、&lt;a href=&quot;../rtcicecandidateinit&quot;&gt; &lt;code&gt;RTCIceCandidateInit&lt;/code&gt; &lt;/a&gt;オブジェクトで対応する&lt;a href=&quot;../rtcicecandidateinit/usernamefragment&quot;&gt; &lt;code&gt;usernameFragment&lt;/code&gt; &lt;/a&gt;値を設定することにより、&lt;a href=&quot;../rtcicecandidate&quot;&gt; &lt;code&gt;RTCIceCandidate&lt;/code&gt; を&lt;/a&gt;作成するときに指定されます。</target>
        </trans-unit>
        <trans-unit id="42eb4eefe4cb78925ae4ab6920d5a91daea9ced9" translate="yes" xml:space="preserve">
          <source>This value is the number of milliseconds elapsed from the beginning of the current document's lifetime till the event was created.</source>
          <target state="translated">この値は、カレントドキュメントのライフタイムの開始からイベントが作成されるまでに経過したミリ秒数です。</target>
        </trans-unit>
        <trans-unit id="5bdbbd1c0198b83bc38586ca58b41e65d8e6af0c" translate="yes" xml:space="preserve">
          <source>This value is used when the &lt;code&gt;RTCIceServer&lt;/code&gt; describes a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; server.</source>
          <target state="translated">この値は、 &lt;code&gt;RTCIceServer&lt;/code&gt; が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt;サーバーを記述するときに使用されます。</target>
        </trans-unit>
        <trans-unit id="cad764afbc736bebdea61c78f17d2bc78cb9c481" translate="yes" xml:space="preserve">
          <source>This value may also be useful during debugging, for example.</source>
          <target state="translated">この値は、デバッグ中などにも有用な場合があります。</target>
        </trans-unit>
        <trans-unit id="985bb1cef76d5ba8df81e5208a7bac6c6ca53e2c" translate="yes" xml:space="preserve">
          <source>This value may be passed directly to WebGL&amp;rsquo;s &lt;a href=&quot;../webglrenderingcontext/uniformmatrix&quot;&gt;&lt;code&gt;uniformMatrix4fv&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">この値は、WebGLの&lt;a href=&quot;../webglrenderingcontext/uniformmatrix&quot;&gt; &lt;code&gt;uniformMatrix4fv&lt;/code&gt; &lt;/a&gt;関数に直接渡すことができます。</target>
        </trans-unit>
        <trans-unit id="df3091b4c9d0f9a0ce91a1ed3ea94f5d4e42c96d" translate="yes" xml:space="preserve">
          <source>This value should represent half the user&amp;rsquo;s interpupillary distance (IPD), but may also represent the distance from the center point of the headset to the center point of the lens for the given eye.</source>
          <target state="translated">この値はユーザーの瞳孔間距離（IPD）の半分を表す必要がありますが、特定の目のヘッドセットの中心点からレンズの中心点までの距離を表す場合もあります。</target>
        </trans-unit>
        <trans-unit id="03ca0a12f5ec3886c5e204ecac19d3f06b36c434" translate="yes" xml:space="preserve">
          <source>This value was in the &lt;a href=&quot;#RTCSignalingState_enum&quot;&gt;&lt;code&gt;RTCSignalingState&lt;/code&gt; enum&lt;/a&gt; (and therefore found by reading the value of the &lt;a href=&quot;rtcpeerconnection/signalingstate&quot;&gt;&lt;code&gt;signalingState&lt;/code&gt;&lt;/a&gt;) property until the May 13, 2016 draft of the specification.</source>
          <target state="translated">この値は、仕様の2016年5月13日草案まで、&lt;a href=&quot;#RTCSignalingState_enum&quot;&gt; &lt;code&gt;RTCSignalingState&lt;/code&gt; 列挙型&lt;/a&gt;（したがって、&lt;a href=&quot;rtcpeerconnection/signalingstate&quot;&gt; &lt;code&gt;signalingState&lt;/code&gt; &lt;/a&gt;の値を読み取ることで検出された）プロパティにありました。</target>
        </trans-unit>
        <trans-unit id="2f88dcc7645d3430f0a022b7bf2526a63ffcf7a4" translate="yes" xml:space="preserve">
          <source>This value was in the &lt;a href=&quot;#RTCSignalingState_enum&quot;&gt;&lt;code&gt;RTCSignalingState&lt;/code&gt; enum&lt;/a&gt; (and therefore found by reading the value of the &lt;a href=&quot;signalingstate&quot;&gt;&lt;code&gt;signalingState&lt;/code&gt;&lt;/a&gt;) property until the May 13, 2016 draft of the specification.</source>
          <target state="translated">この値は、仕様の2016年5月13日草案まで、&lt;a href=&quot;#RTCSignalingState_enum&quot;&gt; &lt;code&gt;RTCSignalingState&lt;/code&gt; 列挙型&lt;/a&gt;（したがって、&lt;a href=&quot;signalingstate&quot;&gt; &lt;code&gt;signalingState&lt;/code&gt; &lt;/a&gt;の値を読み取ることで検出された）プロパティにありました。</target>
        </trans-unit>
        <trans-unit id="656cc92cca3eb5385e8a6cb8ac8a5f2ac8e45cf2" translate="yes" xml:space="preserve">
          <source>This value will be used if a bound array buffer has not been enabled with &lt;a href=&quot;enablevertexattribarray&quot;&gt;&lt;code&gt;enableVertexAttribArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この値は、バインドされた配列バッファーが&lt;a href=&quot;enablevertexattribarray&quot;&gt; &lt;code&gt;enableVertexAttribArray&lt;/code&gt; で&lt;/a&gt;有効になっていない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="78662bfb3c4fa84b83b4d1b4408812194a0f8c0a" translate="yes" xml:space="preserve">
          <source>This value, in combination with &lt;a href=&quot;radiusx&quot;&gt;&lt;code&gt;Touch.radiusX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt; constructs an ellipse that approximates the size and shape of the area of contact between the user and the screen. This may be a large ellipse representing the contact between a fingertip and the screen or a small one representing the tip of a stylus, for example.</source>
          <target state="translated">組み合わせて、この値、&lt;a href=&quot;radiusx&quot;&gt; &lt;code&gt;Touch.radiusX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; は、&lt;/a&gt;ユーザとスクリーンとの間の接触面積の大きさと形状に近似する楕円を構築します。これは、たとえば、指先と画面の間の接触を表す大きな楕円、またはスタイラスの先端を表す小さな楕円の場合があります。</target>
        </trans-unit>
        <trans-unit id="a85e63c4a55ca8d4624b5887dca1efbaef586180" translate="yes" xml:space="preserve">
          <source>This value, in combination with &lt;a href=&quot;radiusy&quot;&gt;&lt;code&gt;Touch.radiusY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt; constructs an ellipse that approximates the size and shape of the area of contact between the user and the screen. This may be a relatively large ellipse representing the contact between a fingertip and the screen or a small area representing the tip of a stylus, for example.</source>
          <target state="translated">組み合わせて、この値、&lt;a href=&quot;radiusy&quot;&gt; &lt;code&gt;Touch.radiusY&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; は、&lt;/a&gt;ユーザとスクリーンとの間の接触面積の大きさと形状に近似する楕円を構築します。これは、たとえば、指先と画面の間の接触を表す比較的大きな楕円、またはスタイラスの先端を表す小さな領域である場合があります。</target>
        </trans-unit>
        <trans-unit id="495315dc9c61edfe430be1c9c93109570dc3d488" translate="yes" xml:space="preserve">
          <source>This value, which is in the range 0.0 to 1.0, is on a linear scale and its value is defined in dBov, or decibels (overload). This is the amplitude relative to the point at which clipping of the audio begins to occur. A value of 1.0 represents 0 dBov (maximum volume), a value of 0.0 represents silence, and a value of 0.5 represents approximately 6 dB SPL (decibels of sound pressure level) change in the sound pressure level from 0 dBov.</source>
          <target state="translated">この値は 0.0 から 1.0 の範囲で、リニアスケールであり、その値は dBov、つまりデシベル(オーバーロード)で定義されます。これは、オーディオのクリッピングが発生し始めるポイントからの相対的な振幅です。1.0は0dBov(最大音量)、0.0は無音、0.5は0dBovからの音圧レベルの約6dB SPL(音圧レベルのデシベル)の変化を表します。</target>
        </trans-unit>
        <trans-unit id="801e1cc13528668d75b8cfd8a06f01d87d482572" translate="yes" xml:space="preserve">
          <source>This variable will be used to record what the visibility ratio was the last time a threshold was crossed; this will let us figure out whether the target element is becoming more or less visible.</source>
          <target state="translated">この変数は、最後に閾値を越えたときの可視性の比率を記録するために使用されます;これにより、ターゲット要素の可視性が高くなっているか低くなっているかを知ることができます。</target>
        </trans-unit>
        <trans-unit id="6df3ae0ab9a7ef64c8c5cddd4872085179ef61c0" translate="yes" xml:space="preserve">
          <source>This version of &lt;code&gt;origin&lt;/code&gt; is implemented by &lt;a href=&quot;../workerlocation&quot;&gt;&lt;code&gt;WorkerLocation&lt;/code&gt;&lt;/a&gt; for use on workers.</source>
          <target state="translated">このバージョンの &lt;code&gt;origin&lt;/code&gt; は、&lt;a href=&quot;../workerlocation&quot;&gt; &lt;code&gt;WorkerLocation&lt;/code&gt; &lt;/a&gt;で使用するためにWorkerLocationによって実装されます。</target>
        </trans-unit>
        <trans-unit id="8babe6068557e4f9917fb3a1344a6d705bb53bc3" translate="yes" xml:space="preserve">
          <source>This version of the example above supports older browser versions that require you to create an object URL and assign it to &lt;code&gt;src&lt;/code&gt; if &lt;code&gt;srcObject&lt;/code&gt; isn't supported.</source>
          <target state="translated">上記の例のこのバージョンは、 &lt;code&gt;srcObject&lt;/code&gt; がサポートされていない場合にオブジェクトURLを作成して &lt;code&gt;src&lt;/code&gt; に割り当てる必要がある古いブラウザーバージョンをサポートしています。</target>
        </trans-unit>
        <trans-unit id="c25734404a460df04b0d57c8e80f89439fff78a8" translate="yes" xml:space="preserve">
          <source>This vibrates the device for 200 ms, then pauses for 100 ms before vibrating the device again for another 200 ms.</source>
          <target state="translated">これは、デバイスを200msの間振動させ、100msの間一時停止してから、再度200msの間振動させます。</target>
        </trans-unit>
        <trans-unit id="735ee3d93db00c1d3ada6dc22f6c227ba67d27be" translate="yes" xml:space="preserve">
          <source>This was previously defined within the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/the-video-element.html#htmlmediaelement&quot;&gt;WHATWG HTML Living Standard&lt;/a&gt;, though was removed because of missing use cases.</source>
          <target state="translated">これは以前は&lt;a href=&quot;https://html.spec.whatwg.org/multipage/the-video-element.html#htmlmediaelement&quot;&gt;WHATWG HTML Living Standard&lt;/a&gt;で定義されていましたが、使用例がないため削除されました。</target>
        </trans-unit>
        <trans-unit id="f824aed21660327716d780eba6b4a0f934803638" translate="yes" xml:space="preserve">
          <source>This way should be avoided. This makes the markup bigger and less readable. Concerns of content/structure and behavior are not well-separated, making a bug harder to find.</source>
          <target state="translated">この方法は避けるべきです。この方法ではマークアップが大きくなり、読みにくくなります。コンテンツ/構造と動作の懸念が十分に分離されていないため、バグを発見しにくくなります。</target>
        </trans-unit>
        <trans-unit id="c2aa6823336967819380aa656ac3318c1d8787e2" translate="yes" xml:space="preserve">
          <source>This way you are sure you are seeing the value of &lt;code&gt;obj&lt;/code&gt; at the moment you log it.</source>
          <target state="translated">これにより、ログを記録した瞬間に &lt;code&gt;obj&lt;/code&gt; の値が表示されていることを確認できます。</target>
        </trans-unit>
        <trans-unit id="327538858dc3cc7443d676095f3d03b391baab1f" translate="yes" xml:space="preserve">
          <source>This will act exactly like the user clicked on the Back button in their browser toolbar.</source>
          <target state="translated">これは、ユーザーがブラウザのツールバーの[戻る]ボタンをクリックしたのと同じように動作します。</target>
        </trans-unit>
        <trans-unit id="793079fbabaf218474f80c2288e78eaa22f0b60c" translate="yes" xml:space="preserve">
          <source>This will automatically set the scrolling position to the maximum possible value if the attempted scroll would exceed the maximum. This prevents us from falling off the edge of the document. Nobody wants to know what's out there. There might be dragons.</source>
          <target state="translated">これにより、スクロールしようとすると最大値を超えてしまう場合、スクロール位置が自動的に最大値に設定されます。これで文書の端から落ちるのを防ぐことができます。誰もそこに何があるのか知りたがらない。ドラゴンがいるかもしれない。</target>
        </trans-unit>
        <trans-unit id="43036f7b575a9840e56be4e320c3e88dc2e098f3" translate="yes" xml:space="preserve">
          <source>This will be a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; element that's used to trigger capture. We'll get that after the page is done loading.</source>
          <target state="translated">これは、キャプチャのトリガーに使用される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;要素への参照になります。ページの読み込みが完了した後でそれを取得します。</target>
        </trans-unit>
        <trans-unit id="9f9c2dd39842d1d8599c9bb620d7254a803c7827" translate="yes" xml:space="preserve">
          <source>This will be a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element after the page is done loading.</source>
          <target state="translated">これは、ページの読み込みが完了した後の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素への参照になります。</target>
        </trans-unit>
        <trans-unit id="7b19ab377270ed43aba7541c8a5e00df7cd520ec" translate="yes" xml:space="preserve">
          <source>This will be a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element after the page is done loading.</source>
          <target state="translated">これは、ページの読み込みが完了した後の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;要素への参照になります。</target>
        </trans-unit>
        <trans-unit id="a05da8d61200de38677699c938c4d3ee34323a37" translate="yes" xml:space="preserve">
          <source>This will be a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element after the page is done loading.</source>
          <target state="translated">これは、ページの読み込みが完了した後の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素への参照になります。</target>
        </trans-unit>
        <trans-unit id="62f3240253be88d029c1cb4836b1809b53ceb93e" translate="yes" xml:space="preserve">
          <source>This will be set to the element that represents the ad. For new ads being appended to the page, this is created using &lt;a href=&quot;../document/createelement&quot;&gt;&lt;code&gt;Document.createElement()&lt;/code&gt;&lt;/a&gt;. When replacing an existing ad, this is set to the specified ad element (&lt;code&gt;replaceBox&lt;/code&gt;).</source>
          <target state="translated">これは、広告を表す要素に設定されます。ページに追加される新しい広告の場合、これは&lt;a href=&quot;../document/createelement&quot;&gt; &lt;code&gt;Document.createElement()&lt;/code&gt; &lt;/a&gt;を使用して作成されます。既存の広告を置き換える場合、これは指定された広告要素（ &lt;code&gt;replaceBox&lt;/code&gt; ）に設定されます。</target>
        </trans-unit>
        <trans-unit id="d60495f1bfb7b389fa856b969746ccbc1d3145fa" translate="yes" xml:space="preserve">
          <source>This will become an issue when browsers properly support the current standard for supporting larger messages&amp;mdash;the end-of-record (EOR) flag that indicates when a message is the last one in a series that should be treated as a single payload. This is implemented in Firefox 57, but is not yet implemented in Chrome (see &lt;a href=&quot;https://bugs.chromium.org/p/webrtc/issues/detail?id=7774&quot;&gt;Chromium Bug 7774&lt;/a&gt;). With EOR support in place, &lt;code&gt;RTCDataChannel&lt;/code&gt; payloads can be much larger (officially up to 256kiB, but Firefox's implementation caps them at a whopping 1GiB). Even at 256kiB, that's large enough to cause noticeable delays in handling urgent traffic. If you go even larger, the delays can become untenable unless you are certain of your operational conditions.</source>
          <target state="translated">これは、ブラウザーがより大きなメッセージをサポートするための現在の標準（メッセージが単一のペイロードとして扱う必要がある一連の最後のメッセージであることを示すレコードの終わり（EOR）フラグ）を適切にサポートする場合に問題になります。これはFirefox 57に実装されていますが、Chromeにはまだ実装されていません（&lt;a href=&quot;https://bugs.chromium.org/p/webrtc/issues/detail?id=7774&quot;&gt;Chromium Bug 7774を&lt;/a&gt;参照）。 EORサポートが &lt;code&gt;RTCDataChannel&lt;/code&gt; されていると、RTCDataChannelペイロードははるかに大きくなる可能性があります（公式には最大256kiBですが、Firefoxの実装では、なんと1GiBに制限されています）。 256kiBでさえ、それは緊急トラフィックの処理に顕著な遅延を引き起こすのに十分な大きさです。さらに大きくすると、操作条件を特定しない限り、遅延が受け入れられなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e7727797f9437070fb293129410ae76b7fbecc15" translate="yes" xml:space="preserve">
          <source>This will cause the URL bar to display http://mozilla.org/bar.html, but won't cause the browser to load &lt;code&gt;bar.html&lt;/code&gt; or even check that &lt;code&gt;bar.html&lt;/code&gt; exists.</source>
          <target state="translated">これにより、URLバーにhttp://mozilla.org/bar.htmlが表示されますが、ブラウザが &lt;code&gt;bar.html&lt;/code&gt; をロードしたり、 &lt;code&gt;bar.html&lt;/code&gt; が存在することを確認したりすることはありません。</target>
        </trans-unit>
        <trans-unit id="d837e542160cb17eb876d7664fa6f50039c3a792" translate="yes" xml:space="preserve">
          <source>This will cause the URL bar to display http://mozilla.org/bar2.html, but won't cause the browser to load &lt;code&gt;bar2.html&lt;/code&gt; or even check that &lt;code&gt;bar2.html&lt;/code&gt; exists.</source>
          <target state="translated">これにより、URLバーにhttp://mozilla.org/bar2.htmlが表示されますが、ブラウザが &lt;code&gt;bar2.html&lt;/code&gt; をロードしたり、 &lt;code&gt;bar2.html&lt;/code&gt; が存在することを確認したりすることはありません。</target>
        </trans-unit>
        <trans-unit id="55cf2b209725d59ade6bdae80429d479fa9cb78a" translate="yes" xml:space="preserve">
          <source>This will generally be something like &quot;Oculus VR HMD (HMD)&quot; or &quot;Oculus VR HMD (Sensor)&quot;.</source>
          <target state="translated">これは一般的に「Oculus VR HMD(HMD)」や「Oculus VR HMD(センサー)」のようなものになります。</target>
        </trans-unit>
        <trans-unit id="c52eb25cbe1673eafd128fe1b02d9a6b6ff2d7f8" translate="yes" xml:space="preserve">
          <source>This will log &quot;The Philippine eagle is endangered!&quot; to the console, since the element has indeed a &lt;code&gt;class&lt;/code&gt; attribute with value &lt;code&gt;endangered&lt;/code&gt;.</source>
          <target state="translated">これにより、「フィリピンのワシは絶滅の危機に瀕しています！」というログが記録されます。要素が実際には値 &lt;code&gt;endangered&lt;/code&gt; を持つ &lt;code&gt;class&lt;/code&gt; 属性を持っているので、コンソールに。</target>
        </trans-unit>
        <trans-unit id="9fe081424c4480e0510f454a96515febcfaed8ae" translate="yes" xml:space="preserve">
          <source>This will make our audio graph look like this:</source>
          <target state="translated">これで、オーディオグラフはこんな感じになります。</target>
        </trans-unit>
        <trans-unit id="6d4f6f5fc4542573b628f10c91091513fd0833b6" translate="yes" xml:space="preserve">
          <source>This will only work when a namespace-aware parser is used, i.e. when a document is served with an XML MIME type. This will not work for HTML documents.</source>
          <target state="translated">これは、名前空間を考慮したパーサが使用されている場合、つまりドキュメントが XML MIME タイプで提供されている場合にのみ機能します。これは HTML ドキュメントでは動作しません。</target>
        </trans-unit>
        <trans-unit id="cc3571a84701cc6034d1af8476a309c577e1122c" translate="yes" xml:space="preserve">
          <source>This will only work with XML, not HTML documents (as HTML documents do not support CDATA sections); attempting it on an HTML document will throw &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt;.</source>
          <target state="translated">これはXMLでのみ機能し、HTMLドキュメントでは機能しません（HTMLドキュメントはCDATAセクションをサポートしていないため）。HTMLドキュメントでこれを試みると、 &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="7dfb0cfc971b618b3870f407f6c8e325cf7c85cb" translate="yes" xml:space="preserve">
          <source>This will return &lt;code&gt;null&lt;/code&gt; if no active worker is already controlling the page.</source>
          <target state="translated">ページを制御しているアクティブなワーカーがいない場合、これは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ad0d975d97a7d7c8a5d44855322b7e5732292e92" translate="yes" xml:space="preserve">
          <source>This will set our volume to half. However, if you're using any of the &lt;code&gt;AudioParam&lt;/code&gt;'s defined methods to set these values, they will take precedence over the above property setting. If for example, you want the &lt;code&gt;gain&lt;/code&gt; value to be raised to 1 in 2 seconds time, you can do this:</source>
          <target state="translated">これで音量が半分になります。ただし、これらの値を設定するために &lt;code&gt;AudioParam&lt;/code&gt; の定義されたメソッドのいずれかを使用している場合、それらは上記のプロパティ設定よりも優先されます。たとえば、 &lt;code&gt;gain&lt;/code&gt; 値を2秒以内に1に上げる場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b99a9953034ad11619682833e690f92caf2bee6a" translate="yes" xml:space="preserve">
          <source>This works because a sound that contains only a fundamental tone is by definition a sine wave</source>
          <target state="translated">これは、基本音だけを含む音は、定義上、正弦波であるために機能します。</target>
        </trans-unit>
        <trans-unit id="e167054dd71b231dc57c33c736abf6e6b44c385b" translate="yes" xml:space="preserve">
          <source>This works because a sound that contains only a fundamental tone is by definition a sine wave.</source>
          <target state="translated">これは、基本音だけを含む音は、定義上、正弦波であるために機能します。</target>
        </trans-unit>
        <trans-unit id="7660f740169a7e3bfc719c4d1f9aa14ddac555a5" translate="yes" xml:space="preserve">
          <source>This works by calling &lt;a href=&quot;../mediastream/gettracks&quot;&gt;&lt;code&gt;MediaStream.getTracks()&lt;/code&gt;&lt;/a&gt;, using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; to call &lt;a href=&quot;../mediastreamtrack/stop&quot;&gt;&lt;code&gt;MediaStreamTrack.stop()&lt;/code&gt;&lt;/a&gt; on each track in the stream.</source>
          <target state="translated">これは、&lt;a href=&quot;../mediastream/gettracks&quot;&gt; &lt;code&gt;MediaStream.getTracks()&lt;/code&gt; を&lt;/a&gt;呼び出し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt;を使用してストリーム内の各トラックで&lt;a href=&quot;../mediastreamtrack/stop&quot;&gt; &lt;code&gt;MediaStreamTrack.stop()&lt;/code&gt; &lt;/a&gt;を呼び出すことで機能します。</target>
        </trans-unit>
        <trans-unit id="fea0b874a42241fc3dd232b33e8a767348d85552" translate="yes" xml:space="preserve">
          <source>This works by calling &lt;code&gt;getStats()&lt;/code&gt;, then, when the promise is resolved, iterates over the &lt;a href=&quot;../rtcstats&quot;&gt;&lt;code&gt;RTCStats&lt;/code&gt;&lt;/a&gt; objects on the returned &lt;a href=&quot;../rtcstatsreport&quot;&gt;&lt;code&gt;RTCStatsReport&lt;/code&gt;&lt;/a&gt;. A section is created for each report with a header and all of the statistics below, with the type, ID, and timestamp handled specially to place them at the top of the list.</source>
          <target state="translated">呼び出すことによって、この作品 &lt;code&gt;getStats()&lt;/code&gt; 約束が解決されたとき、その後、を反復処理&lt;a href=&quot;../rtcstats&quot;&gt; &lt;code&gt;RTCStats&lt;/code&gt; が&lt;/a&gt;返さ上のオブジェクト&lt;a href=&quot;../rtcstatsreport&quot;&gt; &lt;code&gt;RTCStatsReport&lt;/code&gt; &lt;/a&gt;。セクションごとに、ヘッダーと以下のすべての統計を含むレポートが作成され、タイプ、ID、タイムスタンプが特別に処理されて、リストの一番上に配置されます。</target>
        </trans-unit>
        <trans-unit id="e0a67aa59d4ad0e485026525a94850ed7325bcec" translate="yes" xml:space="preserve">
          <source>This works by creating an internal function, &lt;code&gt;getEntries()&lt;/code&gt;, which calls itself recursively to get all the entries in the directory, concatenating each batch to the array. Each iteration, &lt;a href=&quot;../filesystemdirectoryreader/readentries&quot;&gt;&lt;code&gt;readEntries()&lt;/code&gt;&lt;/a&gt; is called to get more entries. When it returns an empty array, the end of the directory has beenr reached, and the recursion ends. Once control is returned to &lt;code&gt;readDirectory()&lt;/code&gt;, the array is returned to the caller.</source>
          <target state="translated">これは、内部関数 &lt;code&gt;getEntries()&lt;/code&gt; を作成することで機能します。この関数は、自分自身を再帰的に呼び出してディレクトリ内のすべてのエントリを取得し、各バッチを配列に連結します。反復ごとに、&lt;a href=&quot;../filesystemdirectoryreader/readentries&quot;&gt; &lt;code&gt;readEntries()&lt;/code&gt; &lt;/a&gt;が呼び出されて、さらにエントリが取得されます。空の配列を返す場合、ディレクトリの終わりに達しており、再帰は終了します。コントロールが &lt;code&gt;readDirectory()&lt;/code&gt; に戻ると、配列は呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="398af085a23de804b28d07899fc3d096f78e4b7f" translate="yes" xml:space="preserve">
          <source>This works by obtaining the video element's stream from its &lt;a href=&quot;../htmlmediaelement/srcobject&quot;&gt;&lt;code&gt;srcObject&lt;/code&gt;&lt;/a&gt; property. Then the stream's track list is obtained by calling its &lt;a href=&quot;../mediastream/gettracks&quot;&gt;&lt;code&gt;getTracks()&lt;/code&gt;&lt;/a&gt; method. From there, all that remains to do is to iterate over the track list using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; and calling each track's &lt;code&gt;stop()&lt;/code&gt; method.</source>
          <target state="translated">これは、&lt;a href=&quot;../htmlmediaelement/srcobject&quot;&gt; &lt;code&gt;srcObject&lt;/code&gt; &lt;/a&gt;プロパティからビデオ要素のストリームを取得することで機能します。次に、その&lt;a href=&quot;../mediastream/gettracks&quot;&gt; &lt;code&gt;getTracks()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、ストリームのトラックリストを取得します。あとは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt;を使用してトラックリストを反復処理し、各トラックの &lt;code&gt;stop()&lt;/code&gt; メソッドを呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="14397cd6ff8aa71d6103c3124b920067d94f03ac" translate="yes" xml:space="preserve">
          <source>This works in a similar manner to &lt;code&gt;reportDisplays()&lt;/code&gt; &amp;mdash; we get an array of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad&quot;&gt;&lt;code&gt;Gamepad&lt;/code&gt;&lt;/a&gt; objects using the non-promise-based &lt;code&gt;getGamepads()&lt;/code&gt; method, then cycle through each one and print out information on each:</source>
          <target state="translated">これは、 &lt;code&gt;reportDisplays()&lt;/code&gt; と同様に機能します &lt;code&gt;getGamepads()&lt;/code&gt; ベースではないgetGamepads（）メソッドを使用して&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad&quot;&gt; &lt;code&gt;Gamepad&lt;/code&gt; &lt;/a&gt;オブジェクトの配列を取得し、それぞれを循環させてそれぞれに情報を出力します。</target>
        </trans-unit>
        <trans-unit id="1eedd07b0478e479b3790a318da73f3d187478df" translate="yes" xml:space="preserve">
          <source>This would be the equivalent of defining the following HTML tag inside the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">これは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;内に次のHTMLタグを定義するのと同じです。</target>
        </trans-unit>
        <trans-unit id="333d10005eba01fac9283c511c2a53b288e91f0e" translate="yes" xml:space="preserve">
          <source>Those variables are:</source>
          <target state="translated">それらの変数は</target>
        </trans-unit>
        <trans-unit id="a4bc3c618651c8e914facb574ac3293a28307aa9" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;Document.location&lt;/code&gt; is a &lt;em&gt;read-only&lt;/em&gt;&lt;code&gt;Location&lt;/code&gt; object, you can also assign a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; to it. This means that you can work with document.location as if it were a string in most cases: &lt;code&gt;document.location = 'http://www.example.com'&lt;/code&gt; is a synonym of &lt;code&gt;document.location.href = 'http://www.example.com'&lt;/code&gt;.</source>
          <target state="translated">けれども &lt;code&gt;Document.location&lt;/code&gt; ある&lt;em&gt;読み取り専用の&lt;/em&gt; &lt;code&gt;Location&lt;/code&gt; オブジェクトは、あなたにも割り当てることができ&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;それに。つまり、ほとんどの場合、それが文字列であるかのようにdocument.locationを操作できます &lt;code&gt;document.location = 'http://www.example.com'&lt;/code&gt; は、 &lt;code&gt;document.location.href = 'http://www.example.com'&lt;/code&gt; 同義語です。 www.example.com '。</target>
        </trans-unit>
        <trans-unit id="19fd69c047b1cb7a3c671bc56e4bcd3d39a75318" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;Window.location&lt;/code&gt; is a &lt;em&gt;read-only&lt;/em&gt;&lt;code&gt;Location&lt;/code&gt; object, you can also assign a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; to it. This means that you can work with &lt;code&gt;location&lt;/code&gt; as if it were a string in most cases: &lt;code&gt;location = 'http://www.example.com'&lt;/code&gt; is a synonym of &lt;code&gt;location.href = 'http://www.example.com'&lt;/code&gt;.</source>
          <target state="translated">けれども &lt;code&gt;Window.location&lt;/code&gt; ある&lt;em&gt;読み取り専用の&lt;/em&gt; &lt;code&gt;Location&lt;/code&gt; オブジェクトは、あなたにも割り当てることができ&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;それに。つまり、ほとんどの場合、文字列であるかのように &lt;code&gt;location&lt;/code&gt; を操作できます &lt;code&gt;location = 'http://www.example.com'&lt;/code&gt; は、location.href = 'http://www.example.com'の同義語です &lt;code&gt;location.href = 'http://www.example.com'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f66e6f0c1d9138eb8642dab085d22215171ab088" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;body&lt;/code&gt; is settable, setting a new body on a document will effectively remove all the current children of the existing &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; は設定可能ですが、ドキュメントに新しいbodyを設定すると、既存の &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 要素の現在のすべての子が効果的に削除されます。</target>
        </trans-unit>
        <trans-unit id="7857a86393cd9612759c6a41ad7053a3cc829d68" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;value&lt;/code&gt; can be set, any modifications happening while there are automation events scheduled&amp;mdash;that is, events scheduled using the methods of the &lt;code&gt;AudioParam&lt;/code&gt;&amp;mdash;are ignored, without raising any exception.</source>
          <target state="translated">けれども &lt;code&gt;value&lt;/code&gt; 設定することができ、自動化イベントは、スケジュール、つまりがある一方で、任意の変更はの方法を使用してスケジュールされたイベント、起こっ &lt;code&gt;AudioParam&lt;/code&gt; は任意の例外を発生させず、無視-are。</target>
        </trans-unit>
        <trans-unit id="9b54e49bbf131f3b7d203e4652538b79d44fee68" translate="yes" xml:space="preserve">
          <source>Though not currently supported, a candidate received after media is already flowing could theoretically also be used to downgrade to a lower-bandwidth connection if needed.</source>
          <target state="translated">現在はサポートされていませんが、メディアがすでに流れている後に受信した候補は、理論的には、必要に応じて低帯域幅の接続にダウングレードするために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="82c1a0b0740738fba5998b696fb23cb19ef928e9" translate="yes" xml:space="preserve">
          <source>Three arguments are necessary. The first is a reference to an image. This reference will typically be to an image element, but it can also be to a canvas or any other element. The feedback image will simply be generated from whatever the image looks like on screen, although for images, they will be drawn at their original size. The second and third arguments to the &lt;a href=&quot;../datatransfer/setdragimage&quot;&gt;&lt;code&gt;setDragImage()&lt;/code&gt;&lt;/a&gt; method are offsets where the image should appear relative to the mouse pointer.</source>
          <target state="translated">3つの引数が必要です。1つは画像への参照です。この参照は通常、画像要素に対するものですが、キャンバスやその他の要素に対するものでもかまいません。フィードバック画像は、画像が画面上でどのように見えるかから単純に生成されますが、画像の場合、元のサイズで描画されます。&lt;a href=&quot;../datatransfer/setdragimage&quot;&gt; &lt;code&gt;setDragImage()&lt;/code&gt; &lt;/a&gt;メソッドの2番目と3番目の引数は、マウスポインターに対して画像が表示される位置のオフセットです。</target>
        </trans-unit>
        <trans-unit id="ae550fb2cb0f70061ab370bc47f517cd2dc6c1af" translate="yes" xml:space="preserve">
          <source>Three effects may be defined:</source>
          <target state="translated">3つの効果を定義することができます。</target>
        </trans-unit>
        <trans-unit id="8cad632356370afd0da311ec01fb6ce353127fec" translate="yes" xml:space="preserve">
          <source>Thresholds</source>
          <target state="translated">Thresholds</target>
        </trans-unit>
        <trans-unit id="3b54f868d6e2e686167271fe0c439657360bb2c5" translate="yes" xml:space="preserve">
          <source>Throttling of intervals</source>
          <target state="translated">インターバルのスロットル</target>
        </trans-unit>
        <trans-unit id="e3771729f6063b33d2cb61716c9998547b3601b3" translate="yes" xml:space="preserve">
          <source>Throttling of tracking timeout scripts</source>
          <target state="translated">トラッキングタイムアウトスクリプトのスロットル化</target>
        </trans-unit>
        <trans-unit id="a59fd0bee17ff18d9a1bb2958d434c60996894d8" translate="yes" xml:space="preserve">
          <source>Throughout our code, we call &lt;code&gt;sendToServer()&lt;/code&gt; in order to send messages to the signaling server. This function uses the &lt;a href=&quot;../websockets_api&quot;&gt;WebSocket&lt;/a&gt; connection to do its work:</source>
          <target state="translated">コード全体を通して、メッセージをシグナリングサーバーに送信するために &lt;code&gt;sendToServer()&lt;/code&gt; を呼び出します。この関数は、&lt;a href=&quot;../websockets_api&quot;&gt;WebSocket&lt;/a&gt;接続を使用して作業を行います。</target>
        </trans-unit>
        <trans-unit id="3289215d106d0550f4d633f6b69562c5ae9c813b" translate="yes" xml:space="preserve">
          <source>Thrown if &lt;code&gt;array&lt;/code&gt; is specified, but its length is not a multiple of &lt;code&gt;(4 * width)&lt;/code&gt; or &lt;code&gt;(4 * width * height)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; が指定されているが、その長さが &lt;code&gt;(4 * width)&lt;/code&gt; または &lt;code&gt;(4 * width * height)&lt;/code&gt; 倍数でない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="1368d7b60e7d038d79737a3cf601d4598f0e164d" translate="yes" xml:space="preserve">
          <source>Thrown if any of the arguments is infinite.</source>
          <target state="translated">引数のいずれかが無限大の場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="e0d6f2db218fcabc8b900e7014bd0c56a6c1b802" translate="yes" xml:space="preserve">
          <source>Thrown if either &lt;code&gt;sw&lt;/code&gt; or &lt;code&gt;sh&lt;/code&gt; are zero.</source>
          <target state="translated">&lt;code&gt;sw&lt;/code&gt; または &lt;code&gt;sh&lt;/code&gt; のいずれかがゼロの場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="f74d6b54335401e40e9a66353971e876ed5ebdb9" translate="yes" xml:space="preserve">
          <source>Thrown if either of the &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; arguments is zero.</source>
          <target state="translated">&lt;code&gt;width&lt;/code&gt; または &lt;code&gt;height&lt;/code&gt; 引数のいずれかがゼロの場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="a0324b3ab66424c5702c72e8bb436501764ab0da" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;ImageData&lt;/code&gt; object's data has been detached.</source>
          <target state="translated">&lt;code&gt;ImageData&lt;/code&gt; オブジェクトのデータがデタッチされている場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="24f37ef217d6fa71abfad4b52fc9a8c1d4016ca2" translate="yes" xml:space="preserve">
          <source>Thrown in any of the following circumstances:</source>
          <target state="translated">以下のいずれかの状況で投げられる。</target>
        </trans-unit>
        <trans-unit id="b8e6dfce02020b9e495bf7222933e43da3d58b4b" translate="yes" xml:space="preserve">
          <source>Thrown when &lt;code&gt;abort&lt;/code&gt; is called while no read operation is in progress (that is, the state isn't &lt;code&gt;LOADING&lt;/code&gt;).</source>
          <target state="translated">読み取り操作が進行中でない（つまり、状態が &lt;code&gt;LOADING&lt;/code&gt; ではない）ときに &lt;code&gt;abort&lt;/code&gt; が呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="f9f4b0f30b3f06e61b21febef173645d29891305" translate="yes" xml:space="preserve">
          <source>Throws</source>
          <target state="translated">Throws</target>
        </trans-unit>
        <trans-unit id="c246ad5f2c8d636197cd25ec66d0827661ad74de" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;RangeError&lt;/code&gt; exception for unknown encoding types.</source>
          <target state="translated">例外 &lt;code&gt;RangeError&lt;/code&gt; 未知の符号化タイプの例外を。</target>
        </trans-unit>
        <trans-unit id="bbe909e2238303565d46f48e902d18c0d9c875ef" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/DOMException&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; if encodedData is not valid base64.</source>
          <target state="translated">encodingDataが有効なbase64でない場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/DOMException&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="66897c4e3b6ee4d4917629e34d0e205240e875b2" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;InvalidStateError&lt;/code&gt; if the animation's &lt;a href=&quot;currenttime&quot;&gt;&lt;code&gt;currentTime&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;unresolved&lt;/code&gt; (perhaps it hasn't started playing yet) and the end time of the animation is positive infinity.</source>
          <target state="translated">アニメーションの&lt;a href=&quot;currenttime&quot;&gt; &lt;code&gt;currentTime&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;unresolved&lt;/code&gt; れておらず（おそらく再生がまだ開始されていない場合）、アニメーションの終了時間が正の無限大の場合、 &lt;code&gt;InvalidStateError&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="9bdea5c61d99d8aa19b4775eac5e6c078533780e" translate="yes" xml:space="preserve">
          <source>Thus, it's important to note that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; never sends a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; event, unless the user agent itself implements a payment handler. For instance, Safari has integrated support for Apple Pay, so the Apple Pay payment handler uses this to ensure that Apple Pay can be used to pay the merchant by sending &lt;code&gt;merchantvalidation&lt;/code&gt; to the client, instructing it to fetch the server's validation data and deliver it to the payment handler by calling &lt;code&gt;complete()&lt;/code&gt;.</source>
          <target state="translated">このように、それがあることに注意することが重要だ&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザエージェントが&lt;/a&gt;送信したことがない &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; のユーザエージェント自体が支払いハンドラを実装していない限り、イベントを。たとえば、SafariはApple Payのサポートを統合しているため、Apple Pay支払いハンドラはこれを使用して、クライアントに &lt;code&gt;merchantvalidation&lt;/code&gt; 検証を送信し、サーバーの検証データをフェッチして配信するように指示することにより、Apple Payを使用してマーチャントに支払うことができるようにします。 &lt;code&gt;complete()&lt;/code&gt; を呼び出して支払いハンドラー。</target>
        </trans-unit>
        <trans-unit id="a92c9f7e36db73ec81c0bcdb2234a8dc0182b964" translate="yes" xml:space="preserve">
          <source>Thus, to detect HTML support, a test HTML file is needed on the server. This test file is small and is not well-formed XML:</source>
          <target state="translated">このように、HTMLのサポートを検出するためには、サーバ上にテスト用のHTMLファイルが必要になります。このテストファイルは小さく、整形されたXMLではありません。</target>
        </trans-unit>
        <trans-unit id="246d4b1e22ca77e2e4c52c7ad4bddc528ec75d23" translate="yes" xml:space="preserve">
          <source>Tiles the image horizontally but not vertically.</source>
          <target state="translated">画像を水平方向にはタイル状にしますが、垂直方向にはタイル状にしません。</target>
        </trans-unit>
        <trans-unit id="1c61b2b777794069392ac57d5d188bff476afd99" translate="yes" xml:space="preserve">
          <source>Tiles the image in both vertical and horizontal directions.</source>
          <target state="translated">画像を縦と横の両方の方向にタイル状にします。</target>
        </trans-unit>
        <trans-unit id="1eab388306905a6ee63a29bba3975b49530a2ce6" translate="yes" xml:space="preserve">
          <source>Tiles the image vertically but not horizontally.</source>
          <target state="translated">画像を縦方向にタイル状にしますが、横方向にはタイル状にしません。</target>
        </trans-unit>
        <trans-unit id="ce85b6a45a5d454bc25a961aa59413abd5e041a6" translate="yes" xml:space="preserve">
          <source>Time and Clock API</source>
          <target state="translated">時間と時計のAPI</target>
        </trans-unit>
        <trans-unit id="49882bd522a677ad295e39e84253b972274ae588" translate="yes" xml:space="preserve">
          <source>Time since &lt;code&gt;startTime&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;startTime&lt;/code&gt; からの時間</target>
        </trans-unit>
        <trans-unit id="f08dd6b4f2472169d97bd2e840b80d60e01616a2" translate="yes" xml:space="preserve">
          <source>TimeEvent</source>
          <target state="translated">TimeEvent</target>
        </trans-unit>
        <trans-unit id="6e9104aba3fe18e4dd8562ba5f52cb92ded067dc" translate="yes" xml:space="preserve">
          <source>TimeRanges</source>
          <target state="translated">TimeRanges</target>
        </trans-unit>
        <trans-unit id="b91c16b2e169c66407442e97de1139642237faba" translate="yes" xml:space="preserve">
          <source>TimeRanges.end</source>
          <target state="translated">TimeRanges.end</target>
        </trans-unit>
        <trans-unit id="6e67954b5a5eb3cc7559185308feb680838f2252" translate="yes" xml:space="preserve">
          <source>TimeRanges.length</source>
          <target state="translated">TimeRanges.length</target>
        </trans-unit>
        <trans-unit id="0c5f7704880fb9c4e108c4721a981d2ab8a4fcb9" translate="yes" xml:space="preserve">
          <source>TimeRanges.start</source>
          <target state="translated">TimeRanges.start</target>
        </trans-unit>
        <trans-unit id="ef1258d8d00628ceb619d9da1eb4d43759e2fd1a" translate="yes" xml:space="preserve">
          <source>TimeStamp</source>
          <target state="translated">TimeStamp</target>
        </trans-unit>
        <trans-unit id="018514a3d58aa08353dd5e387ee29de45981c409" translate="yes" xml:space="preserve">
          <source>Timeline</source>
          <target state="translated">Timeline</target>
        </trans-unit>
        <trans-unit id="f509df33dc7bbf749d4f1e23d41e574806282936" translate="yes" xml:space="preserve">
          <source>Timeline objects provide the useful property &lt;code&gt;&lt;a href=&quot;../animationtimeline/currenttime&quot;&gt;currentTime&lt;/a&gt;&lt;/code&gt;, which lets us see how long the page has been opened for: it's the &quot;current time&quot; of the document's timeline, which started when the page was opened. As of this writing, there&amp;rsquo;s only one kind of timeline object: the one based on the active document&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;../document/timeline&quot;&gt;timeline&lt;/a&gt;&lt;/code&gt;. In the future we may see timeline objects that correspond to the length of the page, perhaps a &lt;code&gt;ScrollTimeline&lt;/code&gt;, or other things entirely.</source>
          <target state="translated">Timelineオブジェクトは、ページが開いている時間を確認できる便利なプロパティ &lt;code&gt;&lt;a href=&quot;../animationtimeline/currenttime&quot;&gt;currentTime&lt;/a&gt;&lt;/code&gt; を提供します。これは、ページが開かれたときに開始されたドキュメントのタイムラインの「現在時刻」です。この記事の執筆時点では、タイムラインオブジェクトは1種類しかありません。アクティブドキュメントの &lt;code&gt;&lt;a href=&quot;../document/timeline&quot;&gt;timeline&lt;/a&gt;&lt;/code&gt; 基づくオブジェクトです。将来的には、タイムラインには、ページの長さに、おそらくその対応オブジェクト参照のこと &lt;code&gt;ScrollTimeline&lt;/code&gt; 完全に、または他のものを。</target>
        </trans-unit>
        <trans-unit id="6752f551fbfecff63766bea2102fe898b4c54183" translate="yes" xml:space="preserve">
          <source>Timeline.Using Performance Timeline</source>
          <target state="translated">タイムライン.パフォーマンスタイムラインの使用</target>
        </trans-unit>
        <trans-unit id="00b2c4840a20d45aa9ecf62a1991416e8b4ff2c4" translate="yes" xml:space="preserve">
          <source>Timeline.currentTime</source>
          <target state="translated">Timeline.currentTime</target>
        </trans-unit>
        <trans-unit id="55f0af43f2009d26220b0239ea2e223d7619ebdc" translate="yes" xml:space="preserve">
          <source>Timeouts are cancelled using &lt;a href=&quot;cleartimeout&quot;&gt;&lt;code&gt;clearTimeout()&lt;/code&gt;&lt;/a&gt;. To call a function repeatedly (e.g., every N milliseconds), consider using &lt;a href=&quot;setinterval&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイムアウトは、&lt;a href=&quot;cleartimeout&quot;&gt; &lt;code&gt;clearTimeout()&lt;/code&gt; &lt;/a&gt;を使用してキャンセルされます。関数を繰り返し（たとえば、Nミリ秒ごと）呼び出すには、&lt;a href=&quot;setinterval&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; の&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="f2850754735a28e20f9684fe7c76df7e7a259cf5" translate="yes" xml:space="preserve">
          <source>Timeouts in inactive tabs throttled to &amp;gt;=1000ms</source>
          <target state="translated">非アクティブなタブのタイムアウトが1000ミリ秒以上にスロットル</target>
        </trans-unit>
        <trans-unit id="700f5ad0055534b739d2b77307295ae9d9b08fa1" translate="yes" xml:space="preserve">
          <source>Timeouts throttled to &amp;gt;=4ms</source>
          <target state="translated">タイムアウトは4ミリ秒以上にスロットル</target>
        </trans-unit>
        <trans-unit id="ded9447ea4e08c6a9bcfdb35b1698aa271794ce9" translate="yes" xml:space="preserve">
          <source>Timer tasks are only permitted when the budget is non-negative.</source>
          <target state="translated">タイマー業務は、予算がマイナスにならない場合のみ許可されます。</target>
        </trans-unit>
        <trans-unit id="2f1e0acd3914fc28588731fe5e1c1265b660d7ca" translate="yes" xml:space="preserve">
          <source>Timer.jsm</source>
          <target state="translated">Timer.jsm</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="89b0d12e2ee4d68beac8a9fda88be670c3a642cc" translate="yes" xml:space="preserve">
          <source>Timers such as &lt;a href=&quot;windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; are throttled in background/inactive tabs to help improve performance. See &lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;Reasons for delays longer than specified&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;a href=&quot;windoworworkerglobalscope/settimeout&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt;などのタイマーは、バックグラウンド/非アクティブなタブでスロットルされ、パフォーマンスの向上に役立ちます。詳細については&lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;、指定よりも長い遅延の理由を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c81e091cfd2dbf36533834471bb593a01f422114" translate="yes" xml:space="preserve">
          <source>Timestamp for end time</source>
          <target state="translated">終了時刻のタイムスタンプ</target>
        </trans-unit>
        <trans-unit id="e84ce70fda200cec1d080f7852d891a8ee46f340" translate="yes" xml:space="preserve">
          <source>Timestamp for start time</source>
          <target state="translated">開始時刻のタイムスタンプ</target>
        </trans-unit>
        <trans-unit id="776a25a9c3776b950b181401af21584dcad3acd3" translate="yes" xml:space="preserve">
          <source>Timestamps are useful for determining if position state data has been updated from the hardware. Since values are monotonically increasing, they can be compared to determine the ordering of updates &amp;mdash; newer values will always be greater than or equal to older values.</source>
          <target state="translated">タイムスタンプは、位置状態データがハードウェアから更新されたかどうかを判断するのに役立ちます。値は単調に増加しているので、それらを比較して更新の順序を決定できます。新しい値は常に古い値以上になります。</target>
        </trans-unit>
        <trans-unit id="098024dc5537ca3623978ac7c0a6140ce39062b8" translate="yes" xml:space="preserve">
          <source>Timing</source>
          <target state="translated">Timing</target>
        </trans-unit>
        <trans-unit id="53119b7d5c755a4090fb0fac1fc726afc618613a" translate="yes" xml:space="preserve">
          <source>Timing control for script-based animations&lt;br/&gt;&lt;small&gt;The definition of 'requestAnimationFrame' in that specification.&lt;/small&gt;</source>
          <target state="translated">スクリプトベースのアニメーション&lt;small&gt;の&lt;/small&gt;タイミング制御&lt;br/&gt;&lt;small&gt;その仕様における「requestAnimationFrame」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="95748d8aa627fd143769017f59399e4fd4cb8e26" translate="yes" xml:space="preserve">
          <source>Timing element visibility with the Intersection Observer API</source>
          <target state="translated">Intersection Observer API でのタイミング要素の可視化</target>
        </trans-unit>
        <trans-unit id="4cf5cd44feb4b6f63d3c59904056da2136808132" translate="yes" xml:space="preserve">
          <source>Timing is controlled with high precision and low latency, allowing developers to write code that responds accurately to events and is able to target specific samples, even at a high sample rate. So applications such as drum machines and sequencers are well within reach.</source>
          <target state="translated">タイミングは高精度かつ低レイテンシで制御されているため、開発者はイベントに正確に反応し、高いサンプルレートでも特定のサンプルをターゲットにできるコードを書くことができます。そのため、ドラムマシンやシーケンサーのようなアプリケーションも手の届くところにあります。</target>
        </trans-unit>
        <trans-unit id="5aedc8fcdd3b7047ed5bcdf414aa8bee370b63fa" translate="yes" xml:space="preserve">
          <source>Timing resource loading phases</source>
          <target state="translated">リソースの読み込みフェーズのタイミング</target>
        </trans-unit>
        <trans-unit id="80c182553d1d1efeed78c239d34ed9f7ff8bcd98" translate="yes" xml:space="preserve">
          <source>Timing.connectEnd</source>
          <target state="translated">Timing.connectEnd</target>
        </trans-unit>
        <trans-unit id="f0074fc97577913c248260d0c9e500aec02c374d" translate="yes" xml:space="preserve">
          <source>Timing.connectStart</source>
          <target state="translated">Timing.connectStart</target>
        </trans-unit>
        <trans-unit id="fadd20f6900251cd7aa471bdbbc3ef78f49a48dd" translate="yes" xml:space="preserve">
          <source>Timing.domComplete</source>
          <target state="translated">Timing.domComplete</target>
        </trans-unit>
        <trans-unit id="ac934d77b0537b9162781198f91ca69f11cabefc" translate="yes" xml:space="preserve">
          <source>Timing.domContentLoadedEventEnd</source>
          <target state="translated">Timing.domContentLoadedEventEnd</target>
        </trans-unit>
        <trans-unit id="80807426a10f677e9cc1f2c319fbbef5385b8c2c" translate="yes" xml:space="preserve">
          <source>Timing.domContentLoadedEventStart</source>
          <target state="translated">Timing.domContentLoadedEventStart</target>
        </trans-unit>
        <trans-unit id="c2e78ec9af6ad80f5adb39efca09464aac311638" translate="yes" xml:space="preserve">
          <source>Timing.domInteractive</source>
          <target state="translated">Timing.domInteractive</target>
        </trans-unit>
        <trans-unit id="b38b478f8fdc868ad8687f34880b08d861103c04" translate="yes" xml:space="preserve">
          <source>Timing.domLoading</source>
          <target state="translated">Timing.domLoading</target>
        </trans-unit>
        <trans-unit id="9045be14211f9833cc4e94d5a72713e9c9110118" translate="yes" xml:space="preserve">
          <source>Timing.domainLookupEnd</source>
          <target state="translated">Timing.domainLookupEnd</target>
        </trans-unit>
        <trans-unit id="bda458f4e0e4ef2c21eef9edd4bc0c8878cb95eb" translate="yes" xml:space="preserve">
          <source>Timing.domainLookupStart</source>
          <target state="translated">Timing.domainLookupStart</target>
        </trans-unit>
        <trans-unit id="d95e7b03a805188ad66751b2e8477f3bb24292a8" translate="yes" xml:space="preserve">
          <source>Timing.fetchStart</source>
          <target state="translated">Timing.fetchStart</target>
        </trans-unit>
        <trans-unit id="1010cb9e1f5de6097802a21e3f487f6101bd3e70" translate="yes" xml:space="preserve">
          <source>Timing.loadEventEnd</source>
          <target state="translated">Timing.loadEventEnd</target>
        </trans-unit>
        <trans-unit id="a4b9e9e0262d5044abed6d62996910b781bbf13d" translate="yes" xml:space="preserve">
          <source>Timing.loadEventStart</source>
          <target state="translated">Timing.loadEventStart</target>
        </trans-unit>
        <trans-unit id="7e6bb036b6f1fb58bef482ff06acc67db3f56327" translate="yes" xml:space="preserve">
          <source>Timing.navigationStart</source>
          <target state="translated">Timing.navigationStart</target>
        </trans-unit>
        <trans-unit id="f8b6da1bf269ec798d815dbe8ac6444f5a1a0fe5" translate="yes" xml:space="preserve">
          <source>Timing.redirectEnd</source>
          <target state="translated">Timing.redirectEnd</target>
        </trans-unit>
        <trans-unit id="00c28910d0d68b114bf0a48b797a055f18756c16" translate="yes" xml:space="preserve">
          <source>Timing.redirectStart</source>
          <target state="translated">Timing.redirectStart</target>
        </trans-unit>
        <trans-unit id="4c61dc4761845fac46dabe17289ece1afbabc4b2" translate="yes" xml:space="preserve">
          <source>Timing.requestStart</source>
          <target state="translated">Timing.requestStart</target>
        </trans-unit>
        <trans-unit id="1a300b68e9503798df50736557513cf6ae5d9529" translate="yes" xml:space="preserve">
          <source>Timing.responseEnd</source>
          <target state="translated">Timing.responseEnd</target>
        </trans-unit>
        <trans-unit id="807626cc9f3a93d05f0964922e71f8b5948a7935" translate="yes" xml:space="preserve">
          <source>Timing.responseStart</source>
          <target state="translated">Timing.responseStart</target>
        </trans-unit>
        <trans-unit id="77f4182e01fa4cb78712b3cb46aa81b2b3a4cbd3" translate="yes" xml:space="preserve">
          <source>Timing.secureConnectionStart</source>
          <target state="translated">Timing.secureConnectionStart</target>
        </trans-unit>
        <trans-unit id="d91038095504898135af5e192eab473449214882" translate="yes" xml:space="preserve">
          <source>Timing.unloadEventEnd</source>
          <target state="translated">Timing.unloadEventEnd</target>
        </trans-unit>
        <trans-unit id="84ea9d21ede716f03d3cf1fa6d44dc0d62880236" translate="yes" xml:space="preserve">
          <source>Timing.unloadEventStart</source>
          <target state="translated">Timing.unloadEventStart</target>
        </trans-unit>
        <trans-unit id="d8aee710d6ec6383815e1f7c8b0c98f566a32dd6" translate="yes" xml:space="preserve">
          <source>Tips and suggestions to help you improve the quality, performance, and reliability of your WebGL content.</source>
          <target state="translated">WebGLコンテンツの品質、パフォーマンス、信頼性を向上させるためのヒントと提案。</target>
        </trans-unit>
        <trans-unit id="0235fe5afdcc3ed5d11f923f0e8a47f0527f8923" translate="yes" xml:space="preserve">
          <source>Title matches are case-sensitive.</source>
          <target state="translated">タイトルマッチは大文字と小文字を区別します。</target>
        </trans-unit>
        <trans-unit id="4097f73f148088e74335d1c24ea5fd9e2c4dc40b" translate="yes" xml:space="preserve">
          <source>TitleElement</source>
          <target state="translated">TitleElement</target>
        </trans-unit>
        <trans-unit id="8298995d5b23e6d35e57580f8602fa050dde791b" translate="yes" xml:space="preserve">
          <source>To &lt;em&gt;require&lt;/em&gt; a capability, use the keywords &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, or &lt;code&gt;exact&lt;/code&gt; (a.k.a. &lt;code&gt;min == max&lt;/code&gt;). The following demands a minimum resolution of 1280x720:</source>
          <target state="translated">機能を&lt;em&gt;要求&lt;/em&gt;するには、キーワード &lt;code&gt;min&lt;/code&gt; 、 &lt;code&gt;max&lt;/code&gt; 、または &lt;code&gt;exact&lt;/code&gt; （別名 &lt;code&gt;min == max&lt;/code&gt; ）を使用します。次の場合、最低解像度1280x720が必要です。</target>
        </trans-unit>
        <trans-unit id="396445e04d26a26a4e72fe38ed8591d07073f2fd" translate="yes" xml:space="preserve">
          <source>To &lt;em&gt;require&lt;/em&gt; the rear camera, use:</source>
          <target state="translated">背面カメラを&lt;em&gt;要求するに&lt;/em&gt;は、以下を使用します。</target>
        </trans-unit>
        <trans-unit id="662e7243845b4bd9465969b91cbd2880a23b92af" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;offset&lt;/code&gt; parameter's current value, access the parameter's &lt;code&gt;value&lt;/code&gt; property, as shown in the syntax box above.</source>
          <target state="translated">アクセスするには、 &lt;code&gt;offset&lt;/code&gt; パラメータの現在の値、アクセスパラメータの &lt;code&gt;value&lt;/code&gt; 上記の構文ボックスに示すように、プロパティを。</target>
        </trans-unit>
        <trans-unit id="e1a9d1d89c127e6984ffa95061706f745e9cc077" translate="yes" xml:space="preserve">
          <source>To access the WebGL context, use &lt;code&gt;experimental-webgl&lt;/code&gt; rather than the standard &lt;code&gt;webgl&lt;/code&gt; identifier.</source>
          <target state="translated">WebGLコンテキストにアクセスするには、標準の &lt;code&gt;webgl&lt;/code&gt; 識別子ではなく、 &lt;code&gt;experimental-webgl&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2da2d9ac72072e09bd1f064695403f568786d540" translate="yes" xml:space="preserve">
          <source>To access the resolved promise values, we then access this function as you&amp;rsquo;d then expect (see &lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/app.js#L60-L64&quot;&gt;app.js lines 60-64&lt;/a&gt;). This may seem a bit odd at first, but this is the way promises work.</source>
          <target state="translated">解決されたpromise値にアクセスするには、期待どおりにこの関数にアクセスします（&lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/app.js#L60-L64&quot;&gt;app.jsの60〜64行目を&lt;/a&gt;参照）。これは最初は少し奇妙に見えるかもしれませんが、これはpromisesが機能する方法です。</target>
        </trans-unit>
        <trans-unit id="d98419d53fe218f1f08886307ac65e08d2a4230a" translate="yes" xml:space="preserve">
          <source>To activate or deactivate a specific capability, use the &lt;a href=&quot;enable&quot;&gt;&lt;code&gt;WebGLRenderingContext.enable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;disable&quot;&gt;&lt;code&gt;WebGLRenderingContext.disable()&lt;/code&gt;&lt;/a&gt; methods:</source>
          <target state="translated">特定の機能をアクティブまたは非アクティブにするには、&lt;a href=&quot;enable&quot;&gt; &lt;code&gt;WebGLRenderingContext.enable()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;disable&quot;&gt; &lt;code&gt;WebGLRenderingContext.disable()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="111967675c103f7a5ed2192d50e7182104af7f10" translate="yes" xml:space="preserve">
          <source>To actually animate, we need to add code that changes the value of &lt;code&gt;squareRotation&lt;/code&gt; over time. We can do that by creating a new variable to track the time at which we last animated (let's call it &lt;code&gt;then&lt;/code&gt;), then adding the following code to the end of the main function</source>
          <target state="translated">実際にアニメーション化するには、 &lt;code&gt;squareRotation&lt;/code&gt; の値を経時的に変更するコードを追加する必要があります。これを行うには、最後にアニメーション化した時間を追跡する新しい変数を作成し（ &lt;code&gt;then&lt;/code&gt; 呼び出します）、メイン関数の最後に次のコードを追加します。</target>
        </trans-unit>
        <trans-unit id="7cc74ac644c99f7eac2ec17fa11bc0522f230ad7" translate="yes" xml:space="preserve">
          <source>To actually retrieve the data and copy it into our array, we then call the data collection method we want, with the array passed as it's argument. For example:</source>
          <target state="translated">実際にデータを取得して配列にコピーするには、引数に配列を渡してデータ収集メソッドを呼び出します。例えば、次のようになります。</target>
        </trans-unit>
        <trans-unit id="6936310894086300f3d7bc6a9c0479f1a31c0707" translate="yes" xml:space="preserve">
          <source>To actually write content to the stream we call the &lt;code&gt;sendMessage()&lt;/code&gt; function, passing it a message to be written and the stream to write to:</source>
          <target state="translated">実際にコンテンツをストリームに書き込むには、 &lt;code&gt;sendMessage()&lt;/code&gt; 関数を呼び出し、書き込むメッセージと書き込むストリームを渡します。</target>
        </trans-unit>
        <trans-unit id="3c571867088dd9d6cc96a14be9bd0957cae611a7" translate="yes" xml:space="preserve">
          <source>To add a header to the &lt;a href=&quot;../headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; object we use &lt;a href=&quot;../headers/append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;; we then create a new &lt;code&gt;Request&lt;/code&gt; along with a 2nd init parameter, passing headers in as an init option:</source>
          <target state="translated">&lt;a href=&quot;../headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt;オブジェクトにヘッダーを追加するには、&lt;a href=&quot;../headers/append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt;を使用します。次に、2番目のinitパラメーターとともに新しい &lt;code&gt;Request&lt;/code&gt; 作成し、ヘッダーをinitオプションとして渡します。</target>
        </trans-unit>
        <trans-unit id="448827241e66fd937c05a22d35578f6514f206b9" translate="yes" xml:space="preserve">
          <source>To add a row and some cells to an existing table:</source>
          <target state="translated">既存のテーブルに行とセルを追加します。</target>
        </trans-unit>
        <trans-unit id="d63d5e64694359921ef8d762708e7e0e8e442b7f" translate="yes" xml:space="preserve">
          <source>To add or remove items in &lt;code&gt;cssRules&lt;/code&gt;, use the &lt;code&gt;CSSStyleSheet&lt;/code&gt;'s &lt;code&gt;deleteRule()&lt;/code&gt; and &lt;code&gt;insertRule()&lt;/code&gt; methods, described below.</source>
          <target state="translated">&lt;code&gt;cssRules&lt;/code&gt; でアイテムを追加または削除するには、 &lt;code&gt;CSSStyleSheet&lt;/code&gt; の &lt;code&gt;deleteRule()&lt;/code&gt; および &lt;code&gt;insertRule()&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="8d95e79732ad7a81ef00fb162753ef6805c4afa7" translate="yes" xml:space="preserve">
          <source>To allow opening the file picker without using JavaScript (the click() method), a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt; element can be used. Note that in this case the input element must not be hidden using &lt;code&gt;display: none&lt;/code&gt; (nor &lt;code&gt;visibility: hidden&lt;/code&gt;), otherwise the label would not be keyboard-accessible. Use the &lt;a href=&quot;https://a11yproject.com/posts/how-to-hide-content/&quot;&gt;visually-hidden technique&lt;/a&gt; instead.</source>
          <target state="translated">JavaScript（click（）メソッド）を使用せずにファイルピッカーを開くことができるようにするには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt; &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を使用できます。この場合、入力要素は &lt;code&gt;display: none&lt;/code&gt; （または &lt;code&gt;visibility: hidden&lt;/code&gt; ）を使用して非表示にしないでください。それ以外の場合、ラベルにキーボードからアクセスできなくなります。代わりに、&lt;a href=&quot;https://a11yproject.com/posts/how-to-hide-content/&quot;&gt;視覚的に隠された手法を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="52a5308e94e67fa1c001effa63acbeb15a067a3d" translate="yes" xml:space="preserve">
          <source>To allow the server to support signaling and ICE negotiation, we need to update the code. We'll have to to allow directing messages to one specific user instead of broadcasting to all connected users, and ensure unrecognized message types are passed through and delivered, without the server needing to know what they are. This lets us send signaling messages using this same server, instead of needing a separate server.</source>
          <target state="translated">サーバがシグナリングと ICE ネゴシエーションをサポートできるようにするには、コードを更新する必要があります。接続されているすべてのユーザにブロードキャストするのではなく、 特定のユーザにメッセージを指示できるようにし、認識されていないメッセージタイプは、 サーバがそれが何であるかを知る必要がなくても、確実に通過して配信されます。これにより、別のサーバを必要とする代わりに、同じサーバを使ってシグナリングメッセージを送信することができます。</target>
        </trans-unit>
        <trans-unit id="8cf3f711bc21794e71223693a391f947a0911a04" translate="yes" xml:space="preserve">
          <source>To avoid bringing on motion sickness in our users (or at least minimize the effects), we need to:</source>
          <target state="translated">ユーザーに乗り物酔いを起こさないようにするために(あるいは、少なくともその影響を最小限に抑えるために)、私たちは必要があります。</target>
        </trans-unit>
        <trans-unit id="c70f12841dd2f1ef1435db17b0f917efb26183f4" translate="yes" xml:space="preserve">
          <source>To avoid the issue with &lt;code&gt;node.firstChild&lt;/code&gt; returning &lt;code&gt;#text&lt;/code&gt; or &lt;code&gt;#comment&lt;/code&gt; nodes, &lt;a href=&quot;../parentnode/firstelementchild&quot;&gt;&lt;code&gt;ParentNode.firstElementChild&lt;/code&gt;&lt;/a&gt; can be used to return only the first element node. However, &lt;code&gt;node.firstElementChild&lt;/code&gt; requires a shim for Internet Explorer 9 and earlier.</source>
          <target state="translated">問題を回避するには &lt;code&gt;node.firstChild&lt;/code&gt; が返す &lt;code&gt;#text&lt;/code&gt; または &lt;code&gt;#comment&lt;/code&gt; ノードを、&lt;a href=&quot;../parentnode/firstelementchild&quot;&gt; &lt;code&gt;ParentNode.firstElementChild&lt;/code&gt; は、&lt;/a&gt;最初の要素ノードを返すために使用することができます。ただし、 &lt;code&gt;node.firstElementChild&lt;/code&gt; には、Internet Explorer 9以前のシムが必要です。</target>
        </trans-unit>
        <trans-unit id="2d926dc49aceef5f1c36cff124ba7d2c62bae049" translate="yes" xml:space="preserve">
          <source>To be able to do anything with the Web Audio API, we need to create an instance of the audio context. This then gives us access to all the features and functionality of the API.</source>
          <target state="translated">Web Audio APIで何かをするには、オーディオコンテキストのインスタンスを作成する必要があります。そうすることで、APIのすべての機能にアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="3affdb53868df67281e863ad4a9f9250f2955b2c" translate="yes" xml:space="preserve">
          <source>To be able to use localStorage, we should first verify that it is supported and available in the current browsing session.</source>
          <target state="translated">localStorageを使用できるようにするには、まず、現在のブラウジングセッションでサポートされていて利用可能であることを確認しなければなりません。</target>
        </trans-unit>
        <trans-unit id="1e312614295a2b500eb56c352cb46a31b3f5213b" translate="yes" xml:space="preserve">
          <source>To be valid in an HTML document, a TR must have at least one TD element.</source>
          <target state="translated">HTML文書で有効であるためには、TRは少なくとも1つのTD要素を持たなければなりません。</target>
        </trans-unit>
        <trans-unit id="69cf6db53e68528e8832ddfa54a2024e89a74a10" translate="yes" xml:space="preserve">
          <source>To begin with, &lt;code&gt;start()&lt;/code&gt; retrieves a WebGL context to use to render 3D graphics into the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element in &lt;a href=&quot;https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/index.html&quot;&gt;our HTML&lt;/a&gt;. We then check whether the &lt;code&gt;gl&lt;/code&gt; context is available &amp;mdash; if so, we run a number of functions to set up the scene for display.</source>
          <target state="translated">まず、 &lt;code&gt;start()&lt;/code&gt; は、3Dグラフィックを&lt;a href=&quot;https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/index.html&quot;&gt;HTMLの&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にレンダリングするために使用するWebGLコンテキストを取得します。次に、 &lt;code&gt;gl&lt;/code&gt; コンテキストが使用可能かどうかを確認します。使用できる場合は、いくつかの関数を実行してシーンを表示用に設定します。</target>
        </trans-unit>
        <trans-unit id="76b76da9adca9a2be9eae62f246eb64d0341a864" translate="yes" xml:space="preserve">
          <source>To begin, let's take a look at a simple example that draws two intersecting rectangles, one of which has alpha transparency. We'll explore how this works in more detail in later examples.</source>
          <target state="translated">まず、2 つの交差する長方形を描く簡単な例を見てみましょう。これがどのように機能するかについては、後の例で詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="9a413aad144f0eb08bd3b0f7df9c1cc0fe50876f" translate="yes" xml:space="preserve">
          <source>To cancel an event, call the &lt;a href=&quot;preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; method on the event. This keeps the implementation from executing the default action that is associated with the event.</source>
          <target state="translated">イベントをキャンセルするには、イベントの&lt;a href=&quot;preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。これにより、実装は、イベントに関連付けられているデフォルトのアクションを実行しなくなります。</target>
        </trans-unit>
        <trans-unit id="2b7191e01abf8a52a03bdebea0b2fe551363e893" translate="yes" xml:space="preserve">
          <source>To cancel the stream you then need to cancel both resulting branches. Teeing a stream will generally lock it for the duration, preventing other readers from locking it.</source>
          <target state="translated">ストリームをキャンセルするには、結果として生じる両方のブランチをキャンセルする必要があります。通常、ストリームをティーイングすると、そのストリームはその間ロックされ、他のリーダがそのストリームをロックするのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="f4bce8259871e845060271507c2ecc537c942408" translate="yes" xml:space="preserve">
          <source>To capture a still photo each time the user clicks the &lt;code&gt;startbutton&lt;/code&gt;, we need to add an event listener to the button, to be called when the &lt;code&gt;click&lt;/code&gt; event is issued:</source>
          <target state="translated">ユーザーが &lt;code&gt;startbutton&lt;/code&gt; をクリックするたびに静止写真をキャプチャするには、ボタンにイベントリスナーを追加する必要があり &lt;code&gt;click&lt;/code&gt; イベントが発行されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="57f120fb7c0196e13f231262eb47be0334960df8" translate="yes" xml:space="preserve">
          <source>To capture data, you need to use the methods &lt;a href=&quot;../analysernode/getfloatfrequencydata&quot;&gt;&lt;code&gt;AnalyserNode.getFloatFrequencyData()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getByteFrequencyData&quot;&gt;&lt;code&gt;AnalyserNode.getByteFrequencyData()&lt;/code&gt;&lt;/a&gt; to capture frequency data, and &lt;a href=&quot;../analysernode/getbytetimedomaindata&quot;&gt;&lt;code&gt;AnalyserNode.getByteTimeDomainData()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getFloatTimeDomainData&quot;&gt;&lt;code&gt;AnalyserNode.getFloatTimeDomainData()&lt;/code&gt;&lt;/a&gt; to capture waveform data.</source>
          <target state="translated">データをキャプチャするには、メソッド&lt;a href=&quot;../analysernode/getfloatfrequencydata&quot;&gt; &lt;code&gt;AnalyserNode.getFloatFrequencyData()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getByteFrequencyData&quot;&gt; &lt;code&gt;AnalyserNode.getByteFrequencyData()&lt;/code&gt; &lt;/a&gt;を使用して周波数データをキャプチャし、&lt;a href=&quot;../analysernode/getbytetimedomaindata&quot;&gt; &lt;code&gt;AnalyserNode.getByteTimeDomainData()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getFloatTimeDomainData&quot;&gt; &lt;code&gt;AnalyserNode.getFloatTimeDomainData()&lt;/code&gt; &lt;/a&gt;を使用して波形データをキャプチャする必要があります。</target>
        </trans-unit>
        <trans-unit id="f161d08d456a07ec8bc54920ee313223ddeabd29" translate="yes" xml:space="preserve">
          <source>To cause browsers to send a request with credentials included, even for a cross-origin call, add &lt;code&gt;credentials: 'include'&lt;/code&gt; to the &lt;code&gt;init&lt;/code&gt; object you pass to the &lt;code&gt;fetch()&lt;/code&gt; method.</source>
          <target state="translated">クロスオリジンコールの場合でも、ブラウザーに資格情報を含めてリクエストを送信させるには、 &lt;code&gt;fetch()&lt;/code&gt; メソッドに渡す &lt;code&gt;init&lt;/code&gt; オブジェクトに &lt;code&gt;credentials: 'include'&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="815eb9d6a99b5f70832032b996f7bc7bcda08255" translate="yes" xml:space="preserve">
          <source>To change a particular element's style, you can adapt the following example for the element(s) you want to style.</source>
          <target state="translated">特定の要素のスタイルを変更するには、以下の例をスタイルを変更したい要素に合わせて適用することができます。</target>
        </trans-unit>
        <trans-unit id="6a40b9e60d59ceec311ade2c747ad0f82ef7e1e0" translate="yes" xml:space="preserve">
          <source>To change an origin's box mode requires permission to use the &lt;code&gt;&quot;persistent-storage&quot;&lt;/code&gt; feature.</source>
          <target state="translated">オリジンのボックスモードを変更するには、 &lt;code&gt;&quot;persistent-storage&quot;&lt;/code&gt; 機能を使用する権限が必要です。</target>
        </trans-unit>
        <trans-unit id="bb9aace2c96ca797f69396e22bf9af257adaec32" translate="yes" xml:space="preserve">
          <source>To change the &quot;schema&quot; or structure of the database&amp;mdash;which involves creating or deleting object stores or indexes&amp;mdash;the transaction must be in &lt;code&gt;versionchange&lt;/code&gt; mode. This transaction is opened by calling the &lt;a href=&quot;../idbfactory/open&quot;&gt;&lt;code&gt;IDBFactory.open&lt;/code&gt;&lt;/a&gt; method with a &lt;code&gt;version&lt;/code&gt; specified. (In WebKit browsers, which have not implemented the latest specification, the &lt;a href=&quot;../idbfactory/open&quot;&gt;&lt;code&gt;IDBFactory.open&lt;/code&gt;&lt;/a&gt; method takes only one parameter, the &lt;code&gt;name&lt;/code&gt; of the database; then you must call &lt;a href=&quot;../idbversionchangerequest/setversion&quot;&gt;&lt;code&gt;IDBVersionChangeRequest.setVersion&lt;/code&gt;&lt;/a&gt; to establish the &lt;code&gt;versionchange&lt;/code&gt; transaction.)</source>
          <target state="translated">データベースの「スキーマ」または構造（オブジェクトストアまたはインデックスの作成または削除を含む）を変更するには、トランザクションが &lt;code&gt;versionchange&lt;/code&gt; モードである必要があります。このトランザクションは、 &lt;code&gt;version&lt;/code&gt; 指定して&lt;a href=&quot;../idbfactory/open&quot;&gt; &lt;code&gt;IDBFactory.open&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって開かれます。 （最新の仕様を実装していないWebKitブラウザーでは、&lt;a href=&quot;../idbfactory/open&quot;&gt; &lt;code&gt;IDBFactory.open&lt;/code&gt; &lt;/a&gt;メソッドは1つのパラメーター（データベースの &lt;code&gt;name&lt;/code&gt; のみを受け取ります。次に、&lt;a href=&quot;../idbversionchangerequest/setversion&quot;&gt; &lt;code&gt;IDBVersionChangeRequest.setVersion&lt;/code&gt; &lt;/a&gt;を呼び出して、 &lt;code&gt;versionchange&lt;/code&gt; トランザクションを確立する必要があります。）</target>
        </trans-unit>
        <trans-unit id="f61a5652c1d2ef8352fb2289299fc7079b09c73c" translate="yes" xml:space="preserve">
          <source>To change the &lt;code&gt;currentLocalDescription&lt;/code&gt;, call &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;, which triggers a series of events which leads to this value being set. For details on what exactly happens and why the change isn't necessarily instantaneous, see &lt;a href=&quot;../webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;Pending and current descriptions&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;currentLocalDescription&lt;/code&gt; を変更するには、&lt;a href=&quot;setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; を&lt;/a&gt;呼び出します。これにより、一連のイベントがトリガーされ、この値が設定されます。正確に何が起こるのか、なぜ変更が必ずしも即座に行われないのかについての詳細は、&lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC接続の&lt;/a&gt;&lt;a href=&quot;../webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;保留中および現在の説明を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="86925260a65f6527570754dcbc154ed9b4cbe1b0" translate="yes" xml:space="preserve">
          <source>To change the &lt;code&gt;currentRemoteDescription&lt;/code&gt;, call &lt;a href=&quot;setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;, which triggers a series of events which leads to this value being set. For details on what exactly happens and why the change isn't necessarily instantaneous, see &lt;a href=&quot;../webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;Pending and current descriptions&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;currentRemoteDescription&lt;/code&gt; を変更するには、&lt;a href=&quot;setremotedescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt; を&lt;/a&gt;呼び出します。これにより、一連のイベントがトリガーされ、この値が設定されます。正確に何が起こるのか、なぜ変更が必ずしも即座に行われないのかについての詳細は、&lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC接続の&lt;/a&gt;&lt;a href=&quot;../webrtc_api/connectivity#Pending_and_current_descriptions&quot;&gt;保留中および現在の説明を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="37b06f2e1f02711fff008f2a4b7ee20695a5adee" translate="yes" xml:space="preserve">
          <source>To change the &lt;code&gt;startOffset&lt;/code&gt; of a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;setstart&quot;&gt;&lt;code&gt;Range.setStart&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">変更するには &lt;code&gt;startOffset&lt;/code&gt; の&lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;、使用&lt;a href=&quot;setstart&quot;&gt; &lt;code&gt;Range.setStart&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="e1b889387ccd61a5eb56616e2576e1ab1b52b1f0" translate="yes" xml:space="preserve">
          <source>To change the size of a window, see &lt;a href=&quot;resizeby&quot;&gt;&lt;code&gt;window.resizeBy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resizeto&quot;&gt;&lt;code&gt;window.resizeTo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ウィンドウのサイズを変更するには、&lt;a href=&quot;resizeby&quot;&gt; &lt;code&gt;window.resizeBy()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;resizeto&quot;&gt; &lt;code&gt;window.resizeTo()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1979e03e0667dd192f1e586054690d5f03212e07" translate="yes" xml:space="preserve">
          <source>To change the size of a window, see &lt;a href=&quot;resizeby&quot;&gt;&lt;code&gt;window.resizeBy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resizeto&quot;&gt;&lt;code&gt;window.resizeTo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ウィンドウのサイズを変更するには、&lt;a href=&quot;resizeby&quot;&gt; &lt;code&gt;window.resizeBy&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;resizeto&quot;&gt; &lt;code&gt;window.resizeTo&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b8a9a8561048bd602144d50ab712fbfcbc22ad6" translate="yes" xml:space="preserve">
          <source>To check for errors after calling &lt;code&gt;enableVertexAttribArray()&lt;/code&gt;, call &lt;a href=&quot;geterror&quot;&gt;&lt;code&gt;getError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;enableVertexAttribArray()&lt;/code&gt; を呼び出した後にエラーを確認するには、&lt;a href=&quot;geterror&quot;&gt; &lt;code&gt;getError()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="b171e7ccd1f6f9e1508285e32a03cfbd95cd24d2" translate="yes" xml:space="preserve">
          <source>To check if a capability is disabled, use the &lt;a href=&quot;isenabled&quot;&gt;&lt;code&gt;WebGLRenderingContext.isEnabled()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">機能が無効になっているかどうかを確認するには、&lt;a href=&quot;isenabled&quot;&gt; &lt;code&gt;WebGLRenderingContext.isEnabled()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="cd73408f5d3e19a6dd9c8d84e82962ae6a6d9eed" translate="yes" xml:space="preserve">
          <source>To check if a capability is enabled, use the &lt;a href=&quot;isenabled&quot;&gt;&lt;code&gt;WebGLRenderingContext.isEnabled()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">機能が有効かどうかを確認するには、&lt;a href=&quot;isenabled&quot;&gt; &lt;code&gt;WebGLRenderingContext.isEnabled()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="1c87e45703da15f7615e36ea51433444b9656dec" translate="yes" xml:space="preserve">
          <source>To check if multiple files are being dragged, check the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozItemCount&quot;&gt;&lt;code&gt;mozItemCount&lt;/code&gt;&lt;/a&gt; property. It will be set to the number of items being dragged. If a particular drop target only supports dropping a single item, it could either reject the dragged items or it could just use just the first item. To reject the items, either don't cancel the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event, or set the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;none&lt;/code&gt;. You may wish to do both in case another listener has already cancelled the event.</source>
          <target state="translated">複数のファイルがドラッグされているかどうかを確認するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozItemCount&quot;&gt; &lt;code&gt;mozItemCount&lt;/code&gt; &lt;/a&gt;プロパティを確認します。ドラッグされているアイテムの数に設定されます。特定のドロップターゲットが単一のアイテムのドロップのみをサポートする場合、ドラッグされたアイテムを拒否するか、最初のアイテムのみを使用することができます。アイテムを拒否するには、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; イベントをキャンセルしないか、&lt;a href=&quot;../datatransfer/effectallowed&quot;&gt; &lt;code&gt;effectAllowed&lt;/code&gt; &lt;/a&gt;プロパティを &lt;code&gt;none&lt;/code&gt; に設定します。別のリスナーがすでにイベントをキャンセルしている場合に備えて、両方を実行することができます。</target>
        </trans-unit>
        <trans-unit id="e690d5a799cf0ff220a3a26348ce45ad81117cdc" translate="yes" xml:space="preserve">
          <source>To check if the browser supports a particular container, you can pass a string of the MIME type to the &lt;a href=&quot;../mediasource/istypesupported&quot;&gt;&lt;code&gt;MediaSource.isTypeSupported&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">ブラウザが特定のコンテナをサポートしているかどうかを確認するには、MIMEタイプの文字列を&lt;a href=&quot;../mediasource/istypesupported&quot;&gt; &lt;code&gt;MediaSource.isTypeSupported&lt;/code&gt; &lt;/a&gt;メソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="c577ff403e9ee2d0f09c15b80f83eeb5fde85769" translate="yes" xml:space="preserve">
          <source>To check if you are online, query &lt;code&gt;window.navigator.onLine&lt;/code&gt;, as in the following example:</source>
          <target state="translated">オンラインかどうかを確認するには、次の例のように &lt;code&gt;window.navigator.onLine&lt;/code&gt; をクエリします。</target>
        </trans-unit>
        <trans-unit id="d5e65897740ea8a375d59bb586429b6b97554676" translate="yes" xml:space="preserve">
          <source>To check the current buffer bindings, query the &lt;code&gt;ARRAY_BUFFER_BINDING&lt;/code&gt; and &lt;code&gt;ELEMENT_ARRAY_BUFFER_BINDING&lt;/code&gt; constants.</source>
          <target state="translated">現在のバッファバインディングを確認するには、 &lt;code&gt;ARRAY_BUFFER_BINDING&lt;/code&gt; および &lt;code&gt;ELEMENT_ARRAY_BUFFER_BINDING&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="4ae239ba11d1a7760c1dc8dac22c1ca6ff250b5c" translate="yes" xml:space="preserve">
          <source>To check the current buffer usage and buffer size, use the &lt;a href=&quot;getbufferparameter&quot;&gt;&lt;code&gt;WebGLRenderingContext.getBufferParameter()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">現在のバッファー使用量とバッファーサイズを確認するには、&lt;a href=&quot;getbufferparameter&quot;&gt; &lt;code&gt;WebGLRenderingContext.getBufferParameter()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="2604aa23aec3d412b0e9e2d72e578f1854761fbf" translate="yes" xml:space="preserve">
          <source>To check the current cull face mode, query the &lt;code&gt;CULL_FACE_MODE&lt;/code&gt; constant.</source>
          <target state="translated">現在の &lt;code&gt;CULL_FACE_MODE&lt;/code&gt; フェースモードを確認するには、CULL_FACE_MODE定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="5f934e4fce33c177bea45afc0796492f3653229a" translate="yes" xml:space="preserve">
          <source>To check the current depth function, query the &lt;code&gt;DEPTH_FUNC&lt;/code&gt; constant.</source>
          <target state="translated">現在の深度関数を確認するには、 &lt;code&gt;DEPTH_FUNC&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="69123841a257aa4116aa38f47c984ff85860cfb7" translate="yes" xml:space="preserve">
          <source>To check the current depth range, query the &lt;code&gt;DEPTH_RANGE&lt;/code&gt; constant which returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">現在の深度範囲を確認するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;DEPTH_RANGE&lt;/code&gt; 定数をクエリします</target>
        </trans-unit>
        <trans-unit id="5efdae98f784e3e0d5e51c0175b8f65997836d0e" translate="yes" xml:space="preserve">
          <source>To check the current frame buffer binding, query the &lt;code&gt;FRAMEBUFFER_BINDING&lt;/code&gt; constant.</source>
          <target state="translated">現在のフレームバッファーバインディングを確認するには、 &lt;code&gt;FRAMEBUFFER_BINDING&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="ea2263eb97908b78898ff81152281fe97b329c3b" translate="yes" xml:space="preserve">
          <source>To check the current polygon offset factor or units, query the &lt;code&gt;POLYGON_OFFSET_FACTOR&lt;/code&gt; and &lt;code&gt;POLYGON_OFFSET_UNITS&lt;/code&gt; constants.</source>
          <target state="translated">現在のポリゴンオフセット係数または単位を確認するには、 &lt;code&gt;POLYGON_OFFSET_FACTOR&lt;/code&gt; および &lt;code&gt;POLYGON_OFFSET_UNITS&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="8d3445063094a9a7c22481babe3e1417fca846cf" translate="yes" xml:space="preserve">
          <source>To check the current renderbuffer binding, query the &lt;code&gt;RENDERBUFFER_BINDING&lt;/code&gt; constant.</source>
          <target state="translated">現在のレンダーバッファーバインディングを確認するには、 &lt;code&gt;RENDERBUFFER_BINDING&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="135ffc813c7af8358e88146405ee039689fd15af" translate="yes" xml:space="preserve">
          <source>To check the current texture binding, query the &lt;code&gt;gl.TEXTURE_BINDING_2D&lt;/code&gt; or &lt;code&gt;gl.TEXTURE_BINDING_CUBE_MAP&lt;/code&gt; constants.</source>
          <target state="translated">現在のテクスチャバインディングを確認するには、 &lt;code&gt;gl.TEXTURE_BINDING_2D&lt;/code&gt; または &lt;code&gt;gl.TEXTURE_BINDING_CUBE_MAP&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="081e41a8af6fece60f84eb4bb1a16a260644a1c2" translate="yes" xml:space="preserve">
          <source>To check the sample coverage values, query the &lt;code&gt;SAMPLE_COVERAGE_VALUE&lt;/code&gt; and &lt;code&gt;SAMPLE_COVERAGE_INVERT&lt;/code&gt; constants.</source>
          <target state="translated">サンプルカバレッジ値を確認するには、 &lt;code&gt;SAMPLE_COVERAGE_VALUE&lt;/code&gt; および &lt;code&gt;SAMPLE_COVERAGE_INVERT&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="c59d887a45a52ac24be9f7e3fb8f9453c6f05582" translate="yes" xml:space="preserve">
          <source>To check the values for packing and unpacking of pixel data, you can query the same pixel storage parameters with &lt;a href=&quot;getparameter&quot;&gt;&lt;code&gt;WebGLRenderingContext.getParameter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ピクセルデータのパックとアンパックの値を確認するには、&lt;a href=&quot;getparameter&quot;&gt; &lt;code&gt;WebGLRenderingContext.getParameter()&lt;/code&gt; を&lt;/a&gt;使用して同じピクセルストレージパラメータをクエリできます。</target>
        </trans-unit>
        <trans-unit id="b90a11b7423e548e8ff7731091ccca29e0e3c884" translate="yes" xml:space="preserve">
          <source>To check to be sure the shader successsfully compiled, the shader parameter &lt;code&gt;gl.COMPILE_STATUS&lt;/code&gt; is checked. To get its value, we call &lt;a href=&quot;../../webglrenderingcontext/getshaderparameter&quot;&gt;&lt;code&gt;gl.getShaderParameter()&lt;/code&gt;&lt;/a&gt;, specifying the shader and the name of the parameter we want to check (&lt;code&gt;gl.COMPILE_STATUS&lt;/code&gt;). If that's &lt;code&gt;false&lt;/code&gt;, we know the shader failed to compile, so show an alert with log information obtained from the compiler using &lt;a href=&quot;../../webglrenderingcontext/getshaderinfolog&quot;&gt;&lt;code&gt;gl.getShaderInfoLog()&lt;/code&gt;&lt;/a&gt;, then delete the shader and return &lt;code&gt;null&lt;/code&gt; to indicate a failure to load the shader.</source>
          <target state="translated">シェーダーが正常にコンパイルされたことを確認するために、シェーダーパラメーター &lt;code&gt;gl.COMPILE_STATUS&lt;/code&gt; がチェックされます。その値を取得するには、&lt;a href=&quot;../../webglrenderingcontext/getshaderparameter&quot;&gt; &lt;code&gt;gl.getShaderParameter()&lt;/code&gt; &lt;/a&gt;を呼び出して、シェーダーと確認するパラメーターの名前（ &lt;code&gt;gl.COMPILE_STATUS&lt;/code&gt; ）を指定します。これが &lt;code&gt;false&lt;/code&gt; の場合、シェーダーがコンパイルに失敗したことがわかります。そのため、&lt;a href=&quot;../../webglrenderingcontext/getshaderinfolog&quot;&gt; &lt;code&gt;gl.getShaderInfoLog()&lt;/code&gt; &lt;/a&gt;を使用してコンパイラーから取得したログ情報でアラートを表示し、シェーダーを削除して &lt;code&gt;null&lt;/code&gt; を返し、シェーダーのロードの失敗を示します。</target>
        </trans-unit>
        <trans-unit id="b41647ca2da2218218ab655f62c07a0919acdba3" translate="yes" xml:space="preserve">
          <source>To check whether an MP4 file is a proper MP4 stream, you can again use the &lt;a href=&quot;http://nickdesaulniers.github.io/mp4info/&quot;&gt;mp4info&lt;/a&gt; utility to list the atoms of an MP4.</source>
          <target state="translated">MP4ファイルが適切なMP4ストリームであるかどうかを確認するには、&lt;a href=&quot;http://nickdesaulniers.github.io/mp4info/&quot;&gt;mp4info&lt;/a&gt;ユーティリティを再び使用して、MP4のアトムを一覧表示できます。</target>
        </trans-unit>
        <trans-unit id="b49b20aaa7285092f6f0bdadbf8aa46b80f0e66d" translate="yes" xml:space="preserve">
          <source>To check whether an MP4 file is a proper MP4 stream, you can again use the &lt;a href=&quot;https://nickdesaulniers.github.io/mp4info/&quot;&gt;mp4info&lt;/a&gt; utility to list the atoms of an MP4.</source>
          <target state="translated">MP4ファイルが適切なMP4ストリームであるかどうかを確認するには、&lt;a href=&quot;https://nickdesaulniers.github.io/mp4info/&quot;&gt;mp4info&lt;/a&gt;ユーティリティを再度使用してMP4のアトムを一覧表示できます。</target>
        </trans-unit>
        <trans-unit id="12514015ba63eda53db0137a6256b7434b21fd94" translate="yes" xml:space="preserve">
          <source>To clone a node for appending to a different document, use &lt;a href=&quot;../document/importnode&quot;&gt;&lt;code&gt;Document.importNode()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">別のドキュメントに追加するためにノードを複製するには、代わりに&lt;a href=&quot;../document/importnode&quot;&gt; &lt;code&gt;Document.importNode()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="8f93d607a479d146215ee372b82e34b5c1ab12a7" translate="yes" xml:space="preserve">
          <source>To close a connection either the client or server can send a control frame with data containing a specified control sequence to begin the closing handshake (detailed in &lt;a href=&quot;http://tools.ietf.org/html/rfc6455#section-5.5.1&quot;&gt;Section 5.5.1&lt;/a&gt;). Upon receiving such a frame, the other peer sends a Close frame in response. The first peer then closes the connection. Any further data received after closing of connection is then discarded.</source>
          <target state="translated">接続を閉じるために、クライアントまたはサーバーは、指定された制御シーケンスを含むデータを含む制御フレームを送信して、クローズハンドシェイクを開始することができます（詳細は&lt;a href=&quot;http://tools.ietf.org/html/rfc6455#section-5.5.1&quot;&gt;5.5.1項を&lt;/a&gt;参照）。そのようなフレームを受信すると、他のピアは応答としてCloseフレームを送信します。次に、最初のピアが接続を閉じます。その後、接続のクローズ後に受信したデータはすべて破棄されます。</target>
        </trans-unit>
        <trans-unit id="d2bb951676333744020f58c5e70c026bd0980057" translate="yes" xml:space="preserve">
          <source>To close a connection either the client or server can send a control frame with data containing a specified control sequence to begin the closing handshake (detailed in &lt;a href=&quot;https://tools.ietf.org/html/rfc6455#section-5.5.1&quot;&gt;Section 5.5.1&lt;/a&gt;). Upon receiving such a frame, the other peer sends a Close frame in response. The first peer then closes the connection. Any further data received after closing of connection is then discarded.</source>
          <target state="translated">接続を閉じるために、クライアントまたはサーバーは、指定された制御シーケンスを含むデータを含む制御フレームを送信して、閉じているハンドシェイクを開始できます（&lt;a href=&quot;https://tools.ietf.org/html/rfc6455#section-5.5.1&quot;&gt;セクション5.5.1で&lt;/a&gt;詳しく説明されています）。このようなフレームを受信すると、他のピアはそれに応じてCloseフレームを送信します。次に、最初のピアが接続を閉じます。接続を閉じた後に受信したそれ以上のデータは破棄されます。</target>
        </trans-unit>
        <trans-unit id="b2e40a2020e8fdaaa7aff32ead9ff588fc7d301a" translate="yes" xml:space="preserve">
          <source>To comply with the specification, starting with Gecko 16.0 (Firefox 16.0 / Thunderbird 16.0 / SeaMonkey 2.13), a call with an invalid number of arguments (only 3 or 7 arguments are valid), will now throw an error (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=762657&quot;&gt;bug 762657&lt;/a&gt;).</source>
          <target state="translated">仕様に準拠するため、Gecko 16.0（Firefox 16.0 / Thunderbird 16.0 / SeaMonkey 2.13）以降、無効な数の引数（有効な引数は3つまたは7 &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=762657&quot;&gt;つのみ&lt;/a&gt;）の呼び出しでエラーがスローされるようになりました（バグ762657）。</target>
        </trans-unit>
        <trans-unit id="344df288c7c556a0721b97534f7dee93ded2e8f5" translate="yes" xml:space="preserve">
          <source>To compute the total amount of time it took to load the page, you can use the following code:</source>
          <target state="translated">ページの読み込みにかかった総時間を計算するには、次のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="53877b60d5924d7e4cc7e575d878b03340919d34" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;Blob&lt;/code&gt; from other non-blob objects and data, use the &lt;a href=&quot;blob/blob&quot;&gt;&lt;code&gt;Blob()&lt;/code&gt;&lt;/a&gt; constructor. To create a blob that contains a subset of another blob's data, use the &lt;a href=&quot;blob/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; method. To obtain a &lt;code&gt;Blob&lt;/code&gt; object for a file on the user's file system, see the &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">他の非Blobオブジェクトおよびデータから &lt;code&gt;Blob&lt;/code&gt; を構築するには、&lt;a href=&quot;blob/blob&quot;&gt; &lt;code&gt;Blob()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用します。別のblobのデータのサブセットを含むblobを作成するには、&lt;a href=&quot;blob/slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。ユーザーのファイルシステム上のファイルの &lt;code&gt;Blob&lt;/code&gt; オブジェクトを取得するには、&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8719340e7f850a97595b55014f4d654d72832dab" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;FormData&lt;/code&gt; object that contains the data from an existing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt;, specify that form element when creating the &lt;code&gt;FormData&lt;/code&gt; object:</source>
          <target state="translated">構築するために &lt;code&gt;FormData&lt;/code&gt; 既存のデータを含むオブジェクト&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;/a&gt;作成するときに、そのフォーム要素を指定 &lt;code&gt;FormData&lt;/code&gt; オブジェクト：</target>
        </trans-unit>
        <trans-unit id="5c6f70799a2ef0ac65b63f0f7251642d5fd0610f" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;WebSocket&lt;/code&gt;, use the &lt;code&gt;&lt;a href=&quot;websocket/websocket&quot;&gt;WebSocket()&lt;/a&gt;&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;WebSocket&lt;/code&gt; を構築するには、 &lt;code&gt;&lt;a href=&quot;websocket/websocket&quot;&gt;WebSocket()&lt;/a&gt;&lt;/code&gt; コンストラクターを使用します。</target>
        </trans-unit>
        <trans-unit id="6d26e78870f1f2728aa68335eb3f85d10c09411b" translate="yes" xml:space="preserve">
          <source>To convert our sample media from a QuickTime MOV container to an MP4 container, we can use ffmpeg. Because the audio codec in the MOV container is already AAC and the video codec is h.264, we can instruct ffmpeg not to perform transcoding. Instead, it will just copy the audio and video tracks over without performing any transcoding, which is relatively faster than having to transcode.</source>
          <target state="translated">サンプルメディアをQuickTimeのMOVコンテナからMP4コンテナに変換するには、ffmpegを使用することができます。MOVコンテナ内のオーディオコーデックはすでにAACであり、ビデオコーデックはh.264であるため、我々は、トランスコーディングを実行しないようにffmpegを指示することができます。代わりに、それだけで、トランスコードを実行せずにオーディオとビデオのトラックをコピーしますが、これはトランスコードするよりも比較的高速です。</target>
        </trans-unit>
        <trans-unit id="738f174950c608678e138210dc3a87d90264d0d7" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;DOMParser&lt;/code&gt; object simply use &lt;code&gt;new DOMParser()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMParser&lt;/code&gt; オブジェクトを作成するには、単に &lt;code&gt;new DOMParser()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="7588951c5464670527a6568eb664e3b949fd4fb9" translate="yes" xml:space="preserve">
          <source>To create a &lt;strong&gt;WebGLShader&lt;/strong&gt; use &lt;a href=&quot;webglrenderingcontext/createshader&quot;&gt;&lt;code&gt;WebGLRenderingContext.createShader&lt;/code&gt;&lt;/a&gt;, then hook up the GLSL source code using &lt;a href=&quot;webglrenderingcontext/shadersource&quot;&gt;&lt;code&gt;WebGLRenderingContext.shaderSource()&lt;/code&gt;&lt;/a&gt;, and finally invoke &lt;a href=&quot;webglrenderingcontext/compileshader&quot;&gt;&lt;code&gt;WebGLRenderingContext.compileShader()&lt;/code&gt;&lt;/a&gt; to finish and compile the shader. At this point the &lt;strong&gt;WebGLShader&lt;/strong&gt; is still not in a usable form and must still be attached to a &lt;a href=&quot;webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作成するには&lt;strong&gt;WebGLShaderの&lt;/strong&gt;使用&lt;a href=&quot;webglrenderingcontext/createshader&quot;&gt; &lt;code&gt;WebGLRenderingContext.createShader&lt;/code&gt; を&lt;/a&gt;、その後、使用してGLSLソースコードをフックアップ&lt;a href=&quot;webglrenderingcontext/shadersource&quot;&gt; &lt;code&gt;WebGLRenderingContext.shaderSource()&lt;/code&gt; &lt;/a&gt;、そして最後に呼び出し&lt;a href=&quot;webglrenderingcontext/compileshader&quot;&gt; &lt;code&gt;WebGLRenderingContext.compileShader()&lt;/code&gt; &lt;/a&gt;シェーダを終了し、コンパイルします。この時点では、&lt;strong&gt;WebGLShader&lt;/strong&gt;はまだ使用可能な形式ではなく、&lt;a href=&quot;webglprogram&quot;&gt; &lt;code&gt;WebGLProgram&lt;/code&gt; に&lt;/a&gt;アタッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="6474cb39f5fbc99fbb1f86fffd4730d1d065a3e0" translate="yes" xml:space="preserve">
          <source>To create a data channel and ask a remote peer to join you, call the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;createDataChannel()&lt;/code&gt;&lt;/a&gt; method. The peer being invited to exchange data receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event (which has type &lt;a href=&quot;rtcdatachannelevent&quot;&gt;&lt;code&gt;RTCDataChannelEvent&lt;/code&gt;&lt;/a&gt;) to let it know the data channel has been added to the connection.</source>
          <target state="translated">データチャネルを作成してリモートピアに参加を依頼するには、&lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;rtcpeerconnection/createdatachannel&quot;&gt; &lt;code&gt;createDataChannel()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。交換データに招待されるピアが受信する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; （入力したイベント&lt;a href=&quot;rtcdatachannelevent&quot;&gt; &lt;code&gt;RTCDataChannelEvent&lt;/code&gt; を&lt;/a&gt;、データチャネルが接続に追加されている知っているように）。</target>
        </trans-unit>
        <trans-unit id="d9f9dab0e3c513bd98b319d01dfcf44b9793a161" translate="yes" xml:space="preserve">
          <source>To create a new &lt;code&gt;DOMPoint&lt;/code&gt;, you could run a line of code like so:</source>
          <target state="translated">新しい &lt;code&gt;DOMPoint&lt;/code&gt; を作成するには、次のようなコード行を実行します。</target>
        </trans-unit>
        <trans-unit id="7d433bbee9b669f7885abd51f4991ee416c73b32" translate="yes" xml:space="preserve">
          <source>To create a new &lt;code&gt;DOMRect&lt;/code&gt;, you could run a line of code like so:</source>
          <target state="translated">新しい &lt;code&gt;DOMRect&lt;/code&gt; を作成するには、次のようなコード行を実行します。</target>
        </trans-unit>
        <trans-unit id="09fff1925f241d020c7458e751f86d846e4b1a14" translate="yes" xml:space="preserve">
          <source>To create a new, blank &lt;code&gt;ImageData&lt;/code&gt; object, you should use the &lt;a href=&quot;../../canvasrenderingcontext2d/createimagedata&quot;&gt;&lt;code&gt;createImageData()&lt;/code&gt;&lt;/a&gt; method. There are two versions of the &lt;code&gt;createImageData()&lt;/code&gt; method:</source>
          <target state="translated">新しい空の &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成するには、&lt;a href=&quot;../../canvasrenderingcontext2d/createimagedata&quot;&gt; &lt;code&gt;createImageData()&lt;/code&gt; &lt;/a&gt;メソッドを使用する必要があります。 &lt;code&gt;createImageData()&lt;/code&gt; メソッドには2つのバージョンがあります。</target>
        </trans-unit>
        <trans-unit id="757fd3accf44b035c29b495b52b452fe875be006" translate="yes" xml:space="preserve">
          <source>To create a writable stream, we use the &lt;a href=&quot;../writablestream/writablestream&quot;&gt;&lt;code&gt;WritableStream.WritableStream()&lt;/code&gt;&lt;/a&gt; constructor; the syntax looks complex at first, but actually isn&amp;rsquo;t too bad.</source>
          <target state="translated">書き込み可能なストリームを作成するには、&lt;a href=&quot;../writablestream/writablestream&quot;&gt; &lt;code&gt;WritableStream.WritableStream()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用します。構文は最初は複雑に見えますが、実際にはそれほど悪くありません。</target>
        </trans-unit>
        <trans-unit id="be072af174eb11d245cfbc169f3681d2c32ade37" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;IPAddress&lt;/code&gt; object from a &lt;code&gt;string&lt;/code&gt;, use the &lt;code&gt;Parse&lt;/code&gt; static method of &lt;code&gt;IPAddress&lt;/code&gt;&lt;em&gt;.&lt;/em&gt;</source>
          <target state="translated">作成する &lt;code&gt;IPAddress&lt;/code&gt; からオブジェクトを &lt;code&gt;string&lt;/code&gt; 、使用 &lt;code&gt;Parse&lt;/code&gt; の静的メソッド &lt;code&gt;IPAddress&lt;/code&gt; &lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b019924a5773f0a440d40c800c6e923ebbfeb146" translate="yes" xml:space="preserve">
          <source>To create the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/a&gt; element for an article (as well as all of its contents), we use the &lt;code&gt;createArticle()&lt;/code&gt; function, which takes as input a string which is the full text of the article to add to the page.</source>
          <target state="translated">記事（およびそのすべてのコンテンツ）の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt; &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成するには、ページに追加する記事の全文である文字列を入力として &lt;code&gt;createArticle()&lt;/code&gt; 関数を使用します。</target>
        </trans-unit>
        <trans-unit id="d7ec1d77d27224821bd8a1d754ecb6bced4afe29" translate="yes" xml:space="preserve">
          <source>To create the oscilloscope visualisation (hat tip to &lt;a href=&quot;http://soledadpenades.com/&quot;&gt;Soledad Penad&amp;eacute;s&lt;/a&gt; for the original code in &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L123-L167&quot;&gt;Voice-change-O-matic&lt;/a&gt;), we first follow the standard pattern described in the previous section to set up the buffer:</source>
          <target state="translated">オシロスコープの視覚化（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L123-L167&quot;&gt;Voice-change-O-matic&lt;/a&gt;の元のコードの&lt;a href=&quot;http://soledadpenades.com/&quot;&gt;SoledadPenad&amp;eacute;s&lt;/a&gt;へのヒント）を作成するには、まず、前のセクションで説明した標準パターンに従ってバッファを設定します。</target>
        </trans-unit>
        <trans-unit id="d304594fa6bb6d37febd18d3d78f5edb0781ab21" translate="yes" xml:space="preserve">
          <source>To create the oscilloscope visualisation (hat tip to &lt;a href=&quot;https://soledadpenades.com/&quot;&gt;Soledad Penad&amp;eacute;s&lt;/a&gt; for the original code in &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L123-L167&quot;&gt;Voice-change-O-matic&lt;/a&gt;), we first follow the standard pattern described in the previous section to set up the buffer:</source>
          <target state="translated">オシロスコープの視覚化を作成するには（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L123-L167&quot;&gt;Voice-change-O-matic&lt;/a&gt;の元のコードの&lt;a href=&quot;https://soledadpenades.com/&quot;&gt;SoledadPenad&amp;eacute;s&lt;/a&gt;へのヒント）、最初に前のセクションで説明した標準パターンに従ってバッファを設定します。</target>
        </trans-unit>
        <trans-unit id="d0034a9544c17037c6063a9f2a28d8cccd6e65dd" translate="yes" xml:space="preserve">
          <source>To decode the Base64-encoded value back into a String:</source>
          <target state="translated">Base64エンコードされた値を文字列に戻すためにデコードします。</target>
        </trans-unit>
        <trans-unit id="149ca0e2870b7d585a609787d95a84fb327eef94" translate="yes" xml:space="preserve">
          <source>To demonstrate 3D spatialization we've created a modified version of the boombox demo we created in our basic &lt;a href=&quot;using_web_audio_api&quot;&gt;Using the Web Audio API&lt;/a&gt; guide. see the &lt;a href=&quot;https://mdn.github.io/webaudio-examples/spacialization/&quot;&gt;3D spatialization demo live&lt;/a&gt; (and see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/spacialization&quot;&gt;source code&lt;/a&gt; also).</source>
          <target state="translated">3D空間化を示すために、基本的な&lt;a href=&quot;using_web_audio_api&quot;&gt;WebオーディオAPIの使用&lt;/a&gt;ガイドで作成したboomboxデモの修正バージョンを作成しました。参照&lt;a href=&quot;https://mdn.github.io/webaudio-examples/spacialization/&quot;&gt;ライブデモの3D空間化を&lt;/a&gt;（と参照&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/spacialization&quot;&gt;ソースコードを&lt;/a&gt;も）。</target>
        </trans-unit>
        <trans-unit id="b6e7109479ee0caf0d2722edae7ddc0a01ac8fc4" translate="yes" xml:space="preserve">
          <source>To demonstrate basic usage of the MediaRecorder API, we have built a web-based dictaphone. It allows you to record snippets of audio and then play them back. It even gives you a visualization of your device's sound input, using the Web Audio API. We'll concentrate on the recording and playback functionality for this article.</source>
          <target state="translated">MediaRecorder APIの基本的な使い方を実演するために、Webベースのディクタフォンを作りました。これにより、オーディオの断片を録音して再生することができます。また、Web Audio APIを使って、デバイスのサウンド入力を視覚化することもできます。この記事では、録音と再生の機能に集中します。</target>
        </trans-unit>
        <trans-unit id="3750728dc63f9d164737c58df4cdfb35bf105a14" translate="yes" xml:space="preserve">
          <source>To demonstrate how they work, our simple demo includes the following example:</source>
          <target state="translated">これらがどのように動作するかを示すために、私たちの簡単なデモには次の例が含まれています。</target>
        </trans-unit>
        <trans-unit id="a739ecdb19f34265696014a602c133bb42b7ad95" translate="yes" xml:space="preserve">
          <source>To demonstrate just the very basics of registering and installing a service worker, we have created a simple demo called &lt;a href=&quot;https://github.com/mdn/sw-test&quot;&gt;sw-test&lt;/a&gt;, which is a simple Star wars Lego image gallery. It uses a promise-powered function to read image data from a JSON object and load the images using Ajax, before displaying the images in a line down the page. We&amp;rsquo;ve kept things static and simple for now. It also registers, installs, and activates a service worker, and when more of the spec is supported by browsers it will cache all the files required so it will work offline!</source>
          <target state="translated">Service Workerの登録とインストールのごく基本を示すために、シンプルなスターウォーズレゴイメージギャラリーである&lt;a href=&quot;https://github.com/mdn/sw-test&quot;&gt;sw-test&lt;/a&gt;と呼ばれるシンプルなデモを作成しました。ページの下の行に画像を表示する前に、JSONオブジェクトから画像データを読み取り、Ajaxを使用して画像を読み込むためにpromise機能を使用します。今のところ、物事は静的で単純なものにしています。また、Service Workerを登録、インストール、およびアクティブ化します。ブラウザーでより多くの仕様がサポートされると、オフラインで動作するように必要なすべてのファイルがキャッシュされます。</target>
        </trans-unit>
        <trans-unit id="f80f4b45531f7def7aa63f9243b950a9be19a15d" translate="yes" xml:space="preserve">
          <source>To determine if the add operation has completed successfully, listen for the results&amp;rsquo;s &lt;code&gt;success&lt;/code&gt; event.</source>
          <target state="translated">追加操作が正常に完了したかどうかを判断するには、結果の &lt;code&gt;success&lt;/code&gt; イベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="608b21252cf2f13dca1e0d1a9e72937267943958" translate="yes" xml:space="preserve">
          <source>To determine if the add operation has completed successfully, listen for the transaction&amp;rsquo;s &lt;code&gt;complete&lt;/code&gt; event in addition to the &lt;code&gt;IDBObjectStore.add&lt;/code&gt; request&amp;rsquo;s &lt;code&gt;success&lt;/code&gt; event, because the transaction may still fail after the success event fires. In other words, the success event is only triggered when the transaction has been successfully queued.</source>
          <target state="translated">追加操作が正常に完了したかどうかを確認するには、 &lt;code&gt;IDBObjectStore.add&lt;/code&gt; 要求の &lt;code&gt;success&lt;/code&gt; イベントに加えてトランザクションの &lt;code&gt;complete&lt;/code&gt; イベントをリッスンします。これは、成功イベントが発生した後もトランザクションが失敗する可能性があるためです。つまり、成功イベントは、トランザクションが正常にキューに入れられたときにのみトリガーされます。</target>
        </trans-unit>
        <trans-unit id="c72cd0a1fb8e149b0fab0e0da2499809873f1d84" translate="yes" xml:space="preserve">
          <source>To determine the actual latency of the context after creating it, check the value of the context's &lt;a href=&quot;../audiocontext/baselatency&quot;&gt;&lt;code&gt;baseLatency&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">コンテキストの作成後に実際のレイテンシを確認するには、コンテキストの&lt;a href=&quot;../audiocontext/baselatency&quot;&gt; &lt;code&gt;baseLatency&lt;/code&gt; &lt;/a&gt;プロパティの値を確認します。</target>
        </trans-unit>
        <trans-unit id="cc6b45fcf98fe4c556f8da05e1cf9ec6d22ec4c8" translate="yes" xml:space="preserve">
          <source>To determine the estimated quota and usage values for a given origin, use the &lt;a href=&quot;storagemanager/estimate&quot;&gt;&lt;code&gt;navigator.storage.estimate()&lt;/code&gt;&lt;/a&gt; method, which returns a promise that, when resolved, receives a &lt;a href=&quot;storageestimate&quot;&gt;&lt;code&gt;StorageEstimate&lt;/code&gt;&lt;/a&gt; that contains these figures. For example:</source>
          <target state="translated">特定のオリジンの推定割り当て量と使用量の値を決定するには、&lt;a href=&quot;storagemanager/estimate&quot;&gt; &lt;code&gt;navigator.storage.estimate()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。このメソッドは、解決されると、これらの数値を含む&lt;a href=&quot;storageestimate&quot;&gt; &lt;code&gt;StorageEstimate&lt;/code&gt; &lt;/a&gt;を受け取るというプロミスを返します。例えば：</target>
        </trans-unit>
        <trans-unit id="d542d0077615de3bcaf1f78616a201e43f080e3b" translate="yes" xml:space="preserve">
          <source>To determine what character corresponds with the key event, use the &lt;a href=&quot;key&quot;&gt;&lt;code&gt;KeyboardEvent.key&lt;/code&gt;&lt;/a&gt; property instead.</source>
          <target state="translated">キーイベントに対応する文字を判別するには、代わりに&lt;a href=&quot;key&quot;&gt; &lt;code&gt;KeyboardEvent.key&lt;/code&gt; &lt;/a&gt;プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="7f541c74360f692ee4cf9b92586a6dc920cc6fe7" translate="yes" xml:space="preserve">
          <source>To determine which codecs are supported by the transceiver, call the sender's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getCapabilities&quot;&gt;&lt;code&gt;getCapabilities()&lt;/code&gt;&lt;/a&gt; and the receiver's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities&quot;&gt;&lt;code&gt;getCapabilities()&lt;/code&gt;&lt;/a&gt; methods and get the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpCapabilities/codecs&quot;&gt;&lt;code&gt;codecs&lt;/code&gt;&lt;/a&gt; list from the results of each.</source>
          <target state="translated">トランシーバによってサポートされているコーデックを判断するには、送信者の呼び出し&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getCapabilities&quot;&gt; &lt;code&gt;getCapabilities()&lt;/code&gt; &lt;/a&gt;とレシーバの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities&quot;&gt; &lt;code&gt;getCapabilities()&lt;/code&gt; &lt;/a&gt;メソッドを取得し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpCapabilities/codecs&quot;&gt; &lt;code&gt;codecs&lt;/code&gt; &lt;/a&gt;各の結果からリストを。</target>
        </trans-unit>
        <trans-unit id="ae8f03b5f6cf2cb1069ef652253c6a85fd9005a3" translate="yes" xml:space="preserve">
          <source>To discourage the synchronous use of &lt;code&gt;XMLHttpRequest&lt;/code&gt;, HTML support is not available in the synchronous mode. Also, HTML support is only available if the &lt;a href=&quot;responsetype&quot;&gt;&lt;code&gt;responseType&lt;/code&gt;&lt;/a&gt; property has been set to &lt;code&gt;&quot;document&quot;&lt;/code&gt;. This limitation avoids wasting time parsing HTML uselessly when legacy code uses &lt;code&gt;XMLHttpRequest&lt;/code&gt; in the default mode to retrieve &lt;a href=&quot;responsetext&quot;&gt;&lt;code&gt;responseText&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;text/html&lt;/code&gt; resources. Also, this limitation avoids problems with legacy code that assumes that &lt;a href=&quot;responsexml&quot;&gt;&lt;code&gt;responseXML&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; for HTTP error pages (which often have a &lt;code&gt;text/html&lt;/code&gt; response body).</source>
          <target state="translated">&lt;code&gt;XMLHttpRequest&lt;/code&gt; の同期使用を防ぐため、HTMLサポートは同期モードでは使用できません。また、HTMLサポートは、&lt;a href=&quot;responsetype&quot;&gt; &lt;code&gt;responseType&lt;/code&gt; &lt;/a&gt;プロパティが &lt;code&gt;&quot;document&quot;&lt;/code&gt; に設定されている場合にのみ使用できます。この制限により、レガシーコードがデフォルトモードで &lt;code&gt;XMLHttpRequest&lt;/code&gt; を使用&lt;a href=&quot;responsetext&quot;&gt; &lt;code&gt;responseText&lt;/code&gt; &lt;/a&gt;て &lt;code&gt;text/html&lt;/code&gt; リソースのresponseTextを取得するときに、HTMLの解析に無駄な時間を費やすことを回避できます。また、この制限により、HTTPエラーページ（多くの場合、 &lt;code&gt;text/html&lt;/code&gt; 応答本文が含まれる）の&lt;a href=&quot;responsexml&quot;&gt; &lt;code&gt;responseXML&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; であると想定するレガシーコードの問題が回避されます。</target>
        </trans-unit>
        <trans-unit id="6afbec8710d28b81e39b55df61deb644166c3915" translate="yes" xml:space="preserve">
          <source>To display the &lt;code&gt;ImageBitmap&lt;/code&gt;, you can use a &lt;a href=&quot;imagebitmaprenderingcontext&quot;&gt;&lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt;&lt;/a&gt; context, which can be created by calling &lt;code&gt;canvas.getContext(&quot;bitmaprenderer&quot;)&lt;/code&gt; on a (visible) canvas element. This context only provides functionality to replace the canvas's contents with the given &lt;code&gt;ImageBitmap&lt;/code&gt;. A call to &lt;a href=&quot;imagebitmaprenderingcontext/transferfromimagebitmap&quot;&gt;&lt;code&gt;ImageBitmapRenderingContext.transferFromImageBitmap()&lt;/code&gt;&lt;/a&gt; with the previously rendered and saved &lt;code&gt;ImageBitmap&lt;/code&gt; from the OffscreenCanvas, will display the &lt;code&gt;ImageBitmap&lt;/code&gt; on the canvas and transfer its ownership to the canvas. A single &lt;code&gt;OffscreenCanvas&lt;/code&gt; may transfer frames into an arbitrary number of other &lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;ImageBitmap&lt;/code&gt; を表示するには、&lt;a href=&quot;imagebitmaprenderingcontext&quot;&gt; &lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt; &lt;/a&gt;コンテキストを使用できます。このコンテキストは、（可視）キャンバス要素で &lt;code&gt;canvas.getContext(&quot;bitmaprenderer&quot;)&lt;/code&gt; を呼び出すことで作成できます。このコンテキストは、キャンバスのコンテンツを指定された &lt;code&gt;ImageBitmap&lt;/code&gt; で置き換える機能のみを提供します。 &lt;code&gt;ImageBitmap&lt;/code&gt; から以前にレンダリングおよび保存された&lt;a href=&quot;imagebitmaprenderingcontext/transferfromimagebitmap&quot;&gt; &lt;code&gt;ImageBitmapRenderingContext.transferFromImageBitmap()&lt;/code&gt; &lt;/a&gt;を使用してImageBitmapRenderingContext.transferFromImageBitmap（）を呼び出すと、キャンバスに &lt;code&gt;ImageBitmap&lt;/code&gt; が表示され、その所有権がキャンバスに転送されます。単一の &lt;code&gt;OffscreenCanvas&lt;/code&gt; がフレームを他の任意の数の &lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt; に転送する可能性があります オブジェクト。</target>
        </trans-unit>
        <trans-unit id="bd5892a465c8af085abac9c099c32f229692f7ec" translate="yes" xml:space="preserve">
          <source>To do this, it's possible to add a tag to any new notification. If a notification already has the same tag and has not been displayed yet, the new notification replaces that previous notification. If the notification with the same tag has already been displayed, the previous notification is closed and the new one is displayed.</source>
          <target state="translated">これを行うには、新しい通知にタグを追加することができます。同じタグを持つ通知がすでに表示されていて、まだ表示されていない場合は、新しい通知がその前の通知に置き換わります。同じタグを持つ通知が既に表示されている場合、前の通知は閉じられ、新しい通知が表示されます。</target>
        </trans-unit>
        <trans-unit id="c846e4a0839c2bbfdbe1c52248d4b8968364da8d" translate="yes" xml:space="preserve">
          <source>To drag multiple links, you can also separate each link with a linebreak. A line that begins with a number sign (#) is a comment and should not be considered a valid URL. You can use a comment to indicate the purpose of a link, or to hold the title associated with a link. The &lt;code&gt;text/plain&lt;/code&gt; version of the drag data should include all links but should not include the comments.</source>
          <target state="translated">複数のリンクをドラッグするには、各リンクを改行で区切ることもできます。番号記号（＃）で始まる行はコメントであり、有効なURLとは見なされません。コメントを使用して、リンクの目的を示したり、リンクに関連付けられたタイトルを保持したりできます。ドラッグデータの &lt;code&gt;text/plain&lt;/code&gt; バージョンにはすべてのリンクを含める必要がありますが、コメントは含めないでください。</target>
        </trans-unit>
        <trans-unit id="01089a8722af554a019428b687511c108fb54bf3" translate="yes" xml:space="preserve">
          <source>To draw arcs or circles, we use the &lt;code&gt;arc()&lt;/code&gt; or &lt;code&gt;arcTo()&lt;/code&gt; methods.</source>
          <target state="translated">円弧または円を描くには、 &lt;code&gt;arc()&lt;/code&gt; または &lt;code&gt;arcTo()&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="6dcbe6d8bccf7eaa41d142dbf53b137d54b46724" translate="yes" xml:space="preserve">
          <source>To draw the outlines of the characters in a string, call the context's &lt;a href=&quot;stroketext&quot;&gt;&lt;code&gt;strokeText()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文字列内の文字の輪郭を描くには、コンテキストの&lt;a href=&quot;stroketext&quot;&gt; &lt;code&gt;strokeText()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="e5088edca71c018ebb0fcbb2a0e33c59909e9b82" translate="yes" xml:space="preserve">
          <source>To emulate this behavior in modern implementations, the presence of this member with a value &lt;code&gt;false&lt;/code&gt;, will set the direction of all existing audio transceivers to exclude reception (i.e. set to either &lt;code&gt;&quot;sendonly&quot;&lt;/code&gt; or &lt;code&gt;&quot;inactive&quot;&lt;/code&gt;).</source>
          <target state="translated">最新の実装でこの動作をエミュレートするために、値が &lt;code&gt;false&lt;/code&gt; のこのメンバーの存在は、既存のすべてのオーディオトランシーバーの方向を設定して、受信を除外します（つまり、 &lt;code&gt;&quot;sendonly&quot;&lt;/code&gt; または &lt;code&gt;&quot;inactive&quot;&lt;/code&gt; 設定します）。</target>
        </trans-unit>
        <trans-unit id="a000a7f20b4389ea6efd0f60cd73650d68d4bb63" translate="yes" xml:space="preserve">
          <source>To emulate this behavior in modern implementations, the presence of this member with a value &lt;code&gt;false&lt;/code&gt;, will set the direction of all existing video transceivers to exclude reception (i.e. set to either &lt;code&gt;&quot;sendonly&quot;&lt;/code&gt; or &lt;code&gt;&quot;inactive&quot;&lt;/code&gt;).</source>
          <target state="translated">最新の実装でこの動作をエミュレートするために、値が &lt;code&gt;false&lt;/code&gt; のこのメンバーの存在は、既存のすべてのビデオトランシーバーの方向を設定して受信を除外します（つまり、 &lt;code&gt;&quot;sendonly&quot;&lt;/code&gt; または &lt;code&gt;&quot;inactive&quot;&lt;/code&gt; 設定します）。</target>
        </trans-unit>
        <trans-unit id="55cfd8bf5236d5b63fc4416aa7f7778936126e75" translate="yes" xml:space="preserve">
          <source>To enqueue the task, we &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;push&lt;/a&gt; an object onto the &lt;code&gt;taskList&lt;/code&gt; array; the object contains the &lt;code&gt;taskHandler&lt;/code&gt; and &lt;code&gt;taskData&lt;/code&gt; values under the names &lt;code&gt;handler&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt;, respectively, then increment &lt;code&gt;totalTaskCount&lt;/code&gt;, which reflects the total number of tasks which have ever been enqueued (we don't decrement it when tasks are removed from the queue).</source>
          <target state="translated">タスクを &lt;code&gt;taskList&lt;/code&gt; には、オブジェクトをtaskList配列に&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;プッシュ&lt;/a&gt;します。オブジェクトが含まれてい &lt;code&gt;taskHandler&lt;/code&gt; と &lt;code&gt;taskData&lt;/code&gt; 名の下の値 &lt;code&gt;handler&lt;/code&gt; および &lt;code&gt;data&lt;/code&gt; 、それぞれ、その後、増分 &lt;code&gt;totalTaskCount&lt;/code&gt; 今までにキューに入れられているタスクの合計数を（タスクがキューから削除されたとき、我々はそれをデクリメントしていない）を反映し、。</target>
        </trans-unit>
        <trans-unit id="1965f92cf5f4ba9eb25e98547419a4a0ea6d42d0" translate="yes" xml:space="preserve">
          <source>To ensure that keystrokes go to the sample code, click inside the black game play field below before pressing keys.</source>
          <target state="translated">キーストロークがサンプルコードに行くことを確認するには、キーを押す前に、下の黒いゲームのプレイフィールドの内側をクリックします。</target>
        </trans-unit>
        <trans-unit id="24fe056a8764321a8a16562bff6fc19385806dac" translate="yes" xml:space="preserve">
          <source>To ensure that keystrokes go to the sample, click in the output box below before pressing keys.</source>
          <target state="translated">キーストロークがサンプルに行くようにするには、キーを押す前に下の出力ボックスをクリックしてください。</target>
        </trans-unit>
        <trans-unit id="29703be6e59b80fd10dfd1f80ab5ef40c9301988" translate="yes" xml:space="preserve">
          <source>To escape a string for use as part of a selector, the &lt;code&gt;escape()&lt;/code&gt; method can be used:</source>
          <target state="translated">セレクターの一部として使用するために文字列をエスケープするには、 &lt;code&gt;escape()&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="3ced466a516a9cfab6ce8eea1804622122a57f95" translate="yes" xml:space="preserve">
          <source>To exit the current group, call &lt;code&gt;console.groupEnd()&lt;/code&gt;. For example, given this code:</source>
          <target state="translated">現在のグループを終了するには、 &lt;code&gt;console.groupEnd()&lt;/code&gt; を呼び出します。たとえば、次のコードがあるとします。</target>
        </trans-unit>
        <trans-unit id="f4df87ac398e96158512ac342b5bef97d37367f8" translate="yes" xml:space="preserve">
          <source>To exit the current group, simply call &lt;code&gt;console.groupEnd()&lt;/code&gt;. For example, given this code:</source>
          <target state="translated">現在のグループを終了するには、単に &lt;code&gt;console.groupEnd()&lt;/code&gt; を呼び出します。たとえば、次のコードがあるとします。</target>
        </trans-unit>
        <trans-unit id="69b4d0c3adc65a348338e413654b41006eb5b174" translate="yes" xml:space="preserve">
          <source>To explicitly trigger ICE restart, simply start the renegotiation process by calling &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt;, specifying the &lt;code&gt;iceRestart&lt;/code&gt; option with a value of &lt;code&gt;true&lt;/code&gt;. Then handle the connection process from then on just like you normally would. This generates new values for the ICE username fragment (ufrag) and password, which will be used by the renegotiation process and the resulting connection.</source>
          <target state="translated">ICEの再起動を明示的にトリガーするには、&lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; を&lt;/a&gt;呼び出し、 &lt;code&gt;iceRestart&lt;/code&gt; オプションに値 &lt;code&gt;true&lt;/code&gt; を指定して、再ネゴシエーションプロセスを開始します。その後は、通常どおりに接続プロセスを処理します。これにより、ICEユーザー名フラグメント（ufrag）とパスワードの新しい値が生成されます。これらは、再ネゴシエーションプロセスおよび結果として生じる接続で使用されます。</target>
        </trans-unit>
        <trans-unit id="09f28f6aab7377abb2c5908b5a7ba50988845263" translate="yes" xml:space="preserve">
          <source>To extract data from your audio source, you need an &lt;a href=&quot;../analysernode&quot;&gt;&lt;code&gt;AnalyserNode&lt;/code&gt;&lt;/a&gt;, which is created using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createAnalyser&quot;&gt;&lt;code&gt;AudioContext.createAnalyser()&lt;/code&gt;&lt;/a&gt; method, for example:</source>
          <target state="translated">オーディオソースからデータを抽出するには、次のように、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createAnalyser&quot;&gt; &lt;code&gt;AudioContext.createAnalyser()&lt;/code&gt; &lt;/a&gt;メソッドを使用して作成された&lt;a href=&quot;../analysernode&quot;&gt; &lt;code&gt;AnalyserNode&lt;/code&gt; &lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="519d1de70bf0c140e57277967613e2ef0ac9598b" translate="yes" xml:space="preserve">
          <source>To find elements whose class lists include both the &lt;code&gt;red&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; classes:</source>
          <target state="translated">クラスリストに &lt;code&gt;red&lt;/code&gt; クラスと &lt;code&gt;test&lt;/code&gt; クラスの両方が含まれている要素を見つけるには：</target>
        </trans-unit>
        <trans-unit id="7a1f280bcfd181716191d1135bd83b77812ef913" translate="yes" xml:space="preserve">
          <source>To finish off this section, we'll look at the gamepad-associated events. There are two we need concern ourselves with &amp;mdash; &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/gamepadconnected&quot;&gt;gamepadconnected&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/gamepaddisconnected&quot;&gt;gamepaddisconnected&lt;/a&gt;&lt;/code&gt; &amp;mdash; and it is fairly obvious what they do.</source>
          <target state="translated">このセクションを終えるために、ゲームパッドに関連するイベントを見てみましょう。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/gamepadconnected&quot;&gt;gamepadconnected&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/gamepaddisconnected&quot;&gt;gamepaddisconnected&lt;/a&gt;&lt;/code&gt; 2つについて私たちが懸念する必要があります。それらが何をするかはかなり明白です。</target>
        </trans-unit>
        <trans-unit id="428587c08b7413c764c694e592894bb18995f6ab" translate="yes" xml:space="preserve">
          <source>To fix this, you have to be very precise in your path creation. Knowing that a &lt;code&gt;1.0&lt;/code&gt; width line will extend half a unit to either side of the path, creating the path from (3.5,1) to (3.5,5) results in the situation in the third image&amp;mdash;the &lt;code&gt;1.0&lt;/code&gt; line width ends up completely and precisely filling a single pixel vertical line.</source>
          <target state="translated">これを修正するには、パスの作成を非常に正確にする必要があります。ことを知る &lt;code&gt;1.0&lt;/code&gt; 幅のラインが第三の画像の状況では（3.5,5）の結果と（3.5,1）からパスを作成、パスのいずれかの側に半分部を拡張する &lt;code&gt;1.0&lt;/code&gt; 完全に終わる線幅と1つのピクセルの垂直線を正確に塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="cd546a5dde454614134e42d6956025f528c9af2d" translate="yes" xml:space="preserve">
          <source>To get a &lt;code&gt;VideoTrack&lt;/code&gt; for a given media element, use the element's &lt;a href=&quot;htmlmediaelement/videotracks&quot;&gt;&lt;code&gt;videoTracks&lt;/code&gt;&lt;/a&gt; property, which returns a &lt;a href=&quot;videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt; object from which you can get the individual tracks contained in the media:</source>
          <target state="translated">特定のメディア要素の &lt;code&gt;VideoTrack&lt;/code&gt; を取得するには、要素の&lt;a href=&quot;htmlmediaelement/videotracks&quot;&gt; &lt;code&gt;videoTracks&lt;/code&gt; &lt;/a&gt;プロパティを使用します。これは、メディアに含まれる個々のトラックを取得できる&lt;a href=&quot;videotracklist&quot;&gt; &lt;code&gt;VideoTrackList&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="e648301519e3501d63c95c7aa19c880ff44b5aeb" translate="yes" xml:space="preserve">
          <source>To get a feeling for how thresholds work, try scrolling the box below around. Each colored box within it displays the percentage of itself that's visible in all four of its corners, so you can see these ratios change over time as you scroll the container. Each box has a different set of thresholds:</source>
          <target state="translated">しきい値がどのように機能するかを知るには、下のボックスをスクロールしてみてください。その中の各色のついたボックスには、四隅に見える自分自身の割合が表示されているので、コンテナをスクロールすると、その割合が時間の経過とともに変化するのがわかります。各ボックスにはそれぞれ異なるしきい値が設定されています。</target>
        </trans-unit>
        <trans-unit id="00d28f710efe0e52e0fd9b2d43dc70ee30a5ee5e" translate="yes" xml:space="preserve">
          <source>To get a media element's &lt;a href=&quot;audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt;, use its &lt;a href=&quot;htmlmediaelement/audiotracks&quot;&gt;&lt;code&gt;audioTracks&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">メディア要素の&lt;a href=&quot;audiotracklist&quot;&gt; &lt;code&gt;AudioTrackList&lt;/code&gt; &lt;/a&gt;を取得するには、その&lt;a href=&quot;htmlmediaelement/audiotracks&quot;&gt; &lt;code&gt;audioTracks&lt;/code&gt; &lt;/a&gt;プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="7bddf2e7da64d5d9ce1eeec3e2ee8df4658de70c" translate="yes" xml:space="preserve">
          <source>To get a media element's &lt;a href=&quot;videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt;, use its &lt;a href=&quot;htmlmediaelement/videotracks&quot;&gt;&lt;code&gt;videoTracks&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">メディア要素の&lt;a href=&quot;videotracklist&quot;&gt; &lt;code&gt;VideoTrackList&lt;/code&gt; &lt;/a&gt;を取得するには、その&lt;a href=&quot;htmlmediaelement/videotracks&quot;&gt; &lt;code&gt;videoTracks&lt;/code&gt; &lt;/a&gt;プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="d8ca7d6ccefbdea8a0ffe412ce9bcd14469e9ce0" translate="yes" xml:space="preserve">
          <source>To get access to a database, call &lt;a href=&quot;idbfactory/open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;windoworworkerglobalscope/indexeddb&quot;&gt;&lt;code&gt;indexedDB&lt;/code&gt;&lt;/a&gt; attribute of a &lt;a href=&quot;window&quot;&gt;window&lt;/a&gt; object. This method returns an &lt;a href=&quot;idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object; asynchronous operations communicate to the calling application by firing events on &lt;a href=&quot;idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">データベースにアクセスするには、&lt;a href=&quot;window&quot;&gt;ウィンドウ&lt;/a&gt;オブジェクトの&lt;a href=&quot;windoworworkerglobalscope/indexeddb&quot;&gt; &lt;code&gt;indexedDB&lt;/code&gt; &lt;/a&gt;属性に対して&lt;a href=&quot;idbfactory/open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;を呼び出します。このメソッドは&lt;a href=&quot;idbrequest&quot;&gt; &lt;code&gt;IDBRequest&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。非同期操作は、&lt;a href=&quot;idbrequest&quot;&gt; &lt;code&gt;IDBRequest&lt;/code&gt; &lt;/a&gt;オブジェクトでイベントを発生させることにより、呼び出し元のアプリケーションと通信します。</target>
        </trans-unit>
        <trans-unit id="27a34fd28bb9ba77903ccd0aab64b9ccfff89e8e" translate="yes" xml:space="preserve">
          <source>To get an &lt;code&gt;AudioTrack&lt;/code&gt; for a given media element, use the element's &lt;a href=&quot;htmlmediaelement/audiotracks&quot;&gt;&lt;code&gt;audioTracks&lt;/code&gt;&lt;/a&gt; property, which returns an &lt;a href=&quot;audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt; object from which you can get the individual tracks contained in the media:</source>
          <target state="translated">特定のメディア要素の &lt;code&gt;AudioTrack&lt;/code&gt; を取得するには、要素の&lt;a href=&quot;htmlmediaelement/audiotracks&quot;&gt; &lt;code&gt;audioTracks&lt;/code&gt; &lt;/a&gt;プロパティを使用します。これは、メディアに含まれる個々のトラックを取得できる&lt;a href=&quot;audiotracklist&quot;&gt; &lt;code&gt;AudioTrackList&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="0032876d44bbd44e73423179c78157bcb5ad744c" translate="yes" xml:space="preserve">
          <source>To get an instance &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;, call &lt;a href=&quot;htmlcanvaselement/getcontext&quot;&gt;&lt;code&gt;getContext()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;canvas&lt;/code&gt; element, supplying &lt;code&gt;2d&lt;/code&gt; as the argument:</source>
          <target state="translated">&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; インスタンスを取得するには、引数として &lt;code&gt;2d&lt;/code&gt; を指定して、 &lt;code&gt;canvas&lt;/code&gt; 要素で&lt;a href=&quot;htmlcanvaselement/getcontext&quot;&gt; &lt;code&gt;getContext()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b90e9217adbc4f24d9c1e4f359d471c523f6645a" translate="yes" xml:space="preserve">
          <source>To get an object of this interface, call &lt;a href=&quot;htmlcanvaselement/getcontext&quot;&gt;&lt;code&gt;getContext()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element, supplying &quot;webgl2&quot; as the argument:</source>
          <target state="translated">このインターフェースのオブジェクトを取得するには、 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 要素で&lt;a href=&quot;htmlcanvaselement/getcontext&quot;&gt; &lt;code&gt;getContext()&lt;/code&gt; &lt;/a&gt;を呼び出し、引数として「webgl2」を指定します。</target>
        </trans-unit>
        <trans-unit id="d80aec17586f15a2069e6282677465e745e93e84" translate="yes" xml:space="preserve">
          <source>To get an overview of how to use &lt;code&gt;XMLHttpRequest&lt;/code&gt; in general, see &lt;a href=&quot;using_xmlhttprequest&quot;&gt;Using XMLHttpRequest&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;XMLHttpRequest&lt;/code&gt; の一般的な使用方法の概要については、「&lt;a href=&quot;using_xmlhttprequest&quot;&gt;XMLHttpRequestの使用&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="3d80faaf01a20a886995b631139f98ed13dacc35" translate="yes" xml:space="preserve">
          <source>To get some control over the ball, we can make it follow our mouse using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/mousemove&quot;&gt;mousemove&lt;/a&gt;&lt;/code&gt; event, for example. The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event releases the ball and lets it bounce again.</source>
          <target state="translated">ボールをある程度制御するには、たとえば、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/mousemove&quot;&gt;mousemove&lt;/a&gt;&lt;/code&gt; イベントを使用して、ボールをマウスに追従させることができます。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントは、ボールを解放し、それが再びバウンスすることができます。</target>
        </trans-unit>
        <trans-unit id="8d9c682fb341dd7a46b1dc477625983270a290df" translate="yes" xml:space="preserve">
          <source>To get started, you need:</source>
          <target state="translated">始めるには、必要なものがあります。</target>
        </trans-unit>
        <trans-unit id="2a73143481d5779036a6c2000213ebaed9048f90" translate="yes" xml:space="preserve">
          <source>To get the active texture, query the &lt;code&gt;ACTIVE_TEXTURE&lt;/code&gt; constant.</source>
          <target state="translated">アクティブなテクスチャを取得するには、 &lt;code&gt;ACTIVE_TEXTURE&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="252b0d288d8a138cfd2d526d83c7255f4b1c22c4" translate="yes" xml:space="preserve">
          <source>To get the blend color, query the &lt;code&gt;BLEND_COLOR&lt;/code&gt; constant which returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ブレンドカラーを取得するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;BLEND_COLOR&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="b157d417a5db1ce22204179f6eac8cc3e4019c9d" translate="yes" xml:space="preserve">
          <source>To get the blend equations, query the &lt;code&gt;BLEND_EQUATION&lt;/code&gt;, &lt;code&gt;BLEND_EQUATION_RGB&lt;/code&gt; and &lt;code&gt;BLEND_EQUATION_ALPHA&lt;/code&gt; constants which return &lt;code&gt;gl.FUNC_ADD&lt;/code&gt;, &lt;code&gt;gl.FUNC_SUBTRACT&lt;/code&gt;, &lt;code&gt;gl.FUNC_REVERSE_SUBTRACT&lt;/code&gt;, or if the &lt;a href=&quot;../ext_blend_minmax&quot;&gt;&lt;code&gt;EXT_blend_minmax&lt;/code&gt;&lt;/a&gt; is enabled: &lt;code&gt;ext.MIN_EXT&lt;/code&gt; or &lt;code&gt;ext.MAX_EXT&lt;/code&gt;.</source>
          <target state="translated">ブレンドの方程式、クエリを取得するには &lt;code&gt;BLEND_EQUATION&lt;/code&gt; 、 &lt;code&gt;BLEND_EQUATION_RGB&lt;/code&gt; と &lt;code&gt;BLEND_EQUATION_ALPHA&lt;/code&gt; 返す定数 &lt;code&gt;gl.FUNC_ADD&lt;/code&gt; 、 &lt;code&gt;gl.FUNC_SUBTRACT&lt;/code&gt; 、 &lt;code&gt;gl.FUNC_REVERSE_SUBTRACT&lt;/code&gt; を場合、または&lt;a href=&quot;../ext_blend_minmax&quot;&gt; &lt;code&gt;EXT_blend_minmax&lt;/code&gt; は&lt;/a&gt;：有効になっている &lt;code&gt;ext.MIN_EXT&lt;/code&gt; または &lt;code&gt;ext.MAX_EXT&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="688a359c86ddb3de51a915ead3af55ded72cafc1" translate="yes" xml:space="preserve">
          <source>To get the current blend equations, query the &lt;code&gt;BLEND_EQUATION&lt;/code&gt;, &lt;code&gt;BLEND_EQUATION_RGB&lt;/code&gt; and &lt;code&gt;BLEND_EQUATION_ALPHA&lt;/code&gt; constants which return &lt;code&gt;gl.FUNC_ADD&lt;/code&gt;, &lt;code&gt;gl.FUNC_SUBTRACT&lt;/code&gt;, &lt;code&gt;gl.FUNC_REVERSE_SUBTRACT&lt;/code&gt;, or if the &lt;a href=&quot;../ext_blend_minmax&quot;&gt;&lt;code&gt;EXT_blend_minmax&lt;/code&gt;&lt;/a&gt; is enabled: &lt;code&gt;ext.MIN_EXT&lt;/code&gt; or &lt;code&gt;ext.MAX_EXT&lt;/code&gt;.</source>
          <target state="translated">現在のブレンド方程式を取得するには、 &lt;code&gt;BLEND_EQUATION&lt;/code&gt; 、 &lt;code&gt;BLEND_EQUATION_RGB&lt;/code&gt; 、および &lt;code&gt;BLEND_EQUATION_ALPHA&lt;/code&gt; 定数をクエリして、 &lt;code&gt;gl.FUNC_ADD&lt;/code&gt; 、 &lt;code&gt;gl.FUNC_SUBTRACT&lt;/code&gt; 、 &lt;code&gt;gl.FUNC_REVERSE_SUBTRACT&lt;/code&gt; 、または&lt;a href=&quot;../ext_blend_minmax&quot;&gt; &lt;code&gt;EXT_blend_minmax&lt;/code&gt; &lt;/a&gt;が有効になっている場合： &lt;code&gt;ext.MIN_EXT&lt;/code&gt; または &lt;code&gt;ext.MAX_EXT&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4a397dc3e64f21cacc03ef1c0bfd0cb12bfbd85f" translate="yes" xml:space="preserve">
          <source>To get the current blend function, query the &lt;code&gt;BLEND_SRC_RGB&lt;/code&gt;, &lt;code&gt;BLEND_SRC_ALPHA&lt;/code&gt;, &lt;code&gt;BLEND_DST_RGB&lt;/code&gt;, and &lt;code&gt;BLEND_DST_ALPHA&lt;/code&gt; constants which return one of the blend function constants.</source>
          <target state="translated">現在のブレンド関数を取得するには、ブレンド関数定数の1つを返す &lt;code&gt;BLEND_SRC_RGB&lt;/code&gt; 、 &lt;code&gt;BLEND_SRC_ALPHA&lt;/code&gt; 、 &lt;code&gt;BLEND_DST_RGB&lt;/code&gt; 、および &lt;code&gt;BLEND_DST_ALPHA&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="e4db5e1c85b7d6ba75e1eae8c19c5b3048000b7d" translate="yes" xml:space="preserve">
          <source>To get the current clear color, query the &lt;code&gt;COLOR_CLEAR_VALUE&lt;/code&gt; constant which returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のクリアカラーを取得するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;COLOR_CLEAR_VALUE&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="2e00727945c2dacc33bafedf26ada54341f4e9f5" translate="yes" xml:space="preserve">
          <source>To get the current clear values, query the &lt;code&gt;COLOR_CLEAR_VALUE&lt;/code&gt;, &lt;code&gt;DEPTH_CLEAR_VALUE&lt;/code&gt;, and &lt;code&gt;STENCIL_CLEAR_VALUE&lt;/code&gt; constants.</source>
          <target state="translated">現在のクリア値を取得するには、 &lt;code&gt;COLOR_CLEAR_VALUE&lt;/code&gt; 、 &lt;code&gt;DEPTH_CLEAR_VALUE&lt;/code&gt; 、および &lt;code&gt;STENCIL_CLEAR_VALUE&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="1ca009d2ae34654220c6d0879235a111c04a6630" translate="yes" xml:space="preserve">
          <source>To get the current color mask, query the &lt;code&gt;COLOR_WRITEMASK&lt;/code&gt; constant which returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のカラーマスクを取得するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;COLOR_WRITEMASK&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="700c311a26af31cfb96e3021cf9aca6b8830dba0" translate="yes" xml:space="preserve">
          <source>To get the current depth clear value, query the &lt;code&gt;DEPTH_CLEAR_VALUE&lt;/code&gt; constant.</source>
          <target state="translated">現在の深度クリア値を取得するには、 &lt;code&gt;DEPTH_CLEAR_VALUE&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="a25de59f44ff56617e4a0d83bab15648143a416b" translate="yes" xml:space="preserve">
          <source>To get the current depth mask, query the &lt;code&gt;DEPTH_WRITEMASK&lt;/code&gt; constant which returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在の深度マスクを取得するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;DEPTH_WRITEMASK&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="90d609d2fb47d8ecf43dc554b54d472962dd423a" translate="yes" xml:space="preserve">
          <source>To get the current information about stencil and depth pass or fail, query the following constants with &lt;a href=&quot;getparameter&quot;&gt;&lt;code&gt;getParameter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ステンシルと深度の成功または失敗に関する現在の情報を取得するには、&lt;a href=&quot;getparameter&quot;&gt; &lt;code&gt;getParameter()&lt;/code&gt; &lt;/a&gt;を使用して次の定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="938ad906bf9111061817dbf66062d7b86247ff3f" translate="yes" xml:space="preserve">
          <source>To get the current scissor box dimensions, query the &lt;code&gt;SCISSOR_BOX&lt;/code&gt; constant which returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のシザーボックスのサイズを取得するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;SCISSOR_BOX&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="d95c51d9611da3ca93cae1d3b898cad48581ec48" translate="yes" xml:space="preserve">
          <source>To get the current stencil clear value, query the &lt;code&gt;STENCIL_CLEAR_VALUE&lt;/code&gt; constant.</source>
          <target state="translated">現在のステンシルクリア値を取得するには、 &lt;code&gt;STENCIL_CLEAR_VALUE&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="06bb7fd2716e971c1694a8abd0835242a18fb50d" translate="yes" xml:space="preserve">
          <source>To get the current stencil function, reference value, or other stencil information, query the following constants with &lt;a href=&quot;getparameter&quot;&gt;&lt;code&gt;getParameter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のステンシル関数、参照値、またはその他のステンシル情報を取得するには、&lt;a href=&quot;getparameter&quot;&gt; &lt;code&gt;getParameter()&lt;/code&gt; &lt;/a&gt;を使用して次の定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="dd90ba78f827e5eaa675ac41b64fb5d8f3100401" translate="yes" xml:space="preserve">
          <source>To get the current stencil masks, query the &lt;code&gt;STENCIL_WRITEMASK&lt;/code&gt;, &lt;code&gt;STENCIL_BACK_WRITEMASK&lt;/code&gt;, or &lt;code&gt;STENCIL_BITS&lt;/code&gt; constants.</source>
          <target state="translated">現在のステンシルマスクを取得するには、 &lt;code&gt;STENCIL_WRITEMASK&lt;/code&gt; 、 &lt;code&gt;STENCIL_BACK_WRITEMASK&lt;/code&gt; 、または &lt;code&gt;STENCIL_BITS&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="15f8185dc67f23cd52eb7c9e2bd71d789e5ef6b7" translate="yes" xml:space="preserve">
          <source>To get the current value of an attribute, use &lt;a href=&quot;getattribute&quot;&gt;&lt;code&gt;getAttribute()&lt;/code&gt;&lt;/a&gt;; to remove an attribute, call &lt;a href=&quot;removeattribute&quot;&gt;&lt;code&gt;removeAttribute()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">属性の現在の値を取得するには、&lt;a href=&quot;getattribute&quot;&gt; &lt;code&gt;getAttribute()&lt;/code&gt; を&lt;/a&gt;使用します。属性を削除するには、&lt;a href=&quot;removeattribute&quot;&gt; &lt;code&gt;removeAttribute()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="b3fcdf286c3411b11dadfdd4a1317f1c8bd7154a" translate="yes" xml:space="preserve">
          <source>To get the current viewport, query the &lt;code&gt;VIEWPORT&lt;/code&gt; constant.</source>
          <target state="translated">現在のビューポートを取得するには、 &lt;code&gt;VIEWPORT&lt;/code&gt; 定数をクエリします。</target>
        </trans-unit>
        <trans-unit id="ee9ffed8b3ff10eacd63efdc4a06614d7b3a3a88" translate="yes" xml:space="preserve">
          <source>To get the inner height of a window, i.e. the height of the page being displayed, see &lt;a href=&quot;innerheight&quot;&gt;&lt;code&gt;window.innerHeight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ウィンドウの内側の高さ、つまり表示されているページの高さを取得するには、&lt;a href=&quot;innerheight&quot;&gt; &lt;code&gt;window.innerHeight&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0d4c13c69cb3b6b0b2dc34c0c9b4c5296d888dc9" translate="yes" xml:space="preserve">
          <source>To get the inner width of a window, i.e. the width of the page being displayed, see &lt;a href=&quot;innerwidth&quot;&gt;&lt;code&gt;window.innerWidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ウィンドウの内側の幅、つまり表示されているページの幅を取得するには、&lt;a href=&quot;innerwidth&quot;&gt; &lt;code&gt;window.innerWidth&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="84d6c2c1d795ef249d73f93b10c48c0a502e783e" translate="yes" xml:space="preserve">
          <source>To get the outer height of a window, i.e. the height of the whole browser window, see &lt;a href=&quot;outerheight&quot;&gt;&lt;code&gt;window.outerHeight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ウィンドウの外側の高さ、つまりブラウザウィンドウ全体の高さを取得するには、&lt;a href=&quot;outerheight&quot;&gt; &lt;code&gt;window.outerHeight&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ce5b76f6c418035c29ef11cb7b0ce6fe2a631409" translate="yes" xml:space="preserve">
          <source>To get the search params from the current window's URL, you can do this:</source>
          <target state="translated">現在のウィンドウのURLから検索パラメータを取得するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="6352adf9ce1836e450ee752e471556c9f33880b5" translate="yes" xml:space="preserve">
          <source>To get to the &lt;code&gt;style&lt;/code&gt; objects from the &lt;code&gt;document&lt;/code&gt;, you can use the &lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt;&lt;code&gt;document.styleSheets&lt;/code&gt;&lt;/a&gt; property and access the individual objects by index (e.g., &lt;code&gt;document.styleSheets[0]&lt;/code&gt; is the first stylesheet defined for the document, etc.).</source>
          <target state="translated">&lt;code&gt;document&lt;/code&gt; から &lt;code&gt;style&lt;/code&gt; オブジェクトを取得するには、&lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt; &lt;code&gt;document.styleSheets&lt;/code&gt; &lt;/a&gt;プロパティを使用して、インデックスによって個々のオブジェクトにアクセスできます（たとえば、 &lt;code&gt;document.styleSheets[0]&lt;/code&gt; はドキュメントに定義された最初のスタイルシートです）。</target>
        </trans-unit>
        <trans-unit id="561caf13aae83af1e79a3d54c581a742b61e3c6e" translate="yes" xml:space="preserve">
          <source>To get your started, we have published a couple of demos on Github. First up, check out our &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/channel-messaging-basic&quot;&gt;channel messaging basic demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/dom-examples/channel-messaging-basic/&quot;&gt;run it live too&lt;/a&gt;), which shows a really simple single message transfer between a page and an embedded &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">はじめに、Githubにいくつかのデモを公開しました。まず、ページと埋め込まれた&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; の&lt;/a&gt;間の非常に単純な単一メッセージ転送を示す、&lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/channel-messaging-basic&quot;&gt;チャネルメッセージングの基本的なデモ&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/dom-examples/channel-messaging-basic/&quot;&gt;ライブでも実行します&lt;/a&gt;）を確認してください。</target>
        </trans-unit>
        <trans-unit id="06274680bc999b59eac7d8e060416f50c611fa80" translate="yes" xml:space="preserve">
          <source>To grab a lock only if it isn't already being held, use the &lt;code&gt;ifAvailable&lt;/code&gt; option. In this function &lt;code&gt;await&lt;/code&gt; means the method will not return until the callback is complete. Since the lock is only granted if it was available, this call avoids waiting on the lock being release elsehwere.</source>
          <target state="translated">ロックがまだ保持されていない場合にのみロックを取得するには、 &lt;code&gt;ifAvailable&lt;/code&gt; オプションを使用します。この関数で &lt;code&gt;await&lt;/code&gt; は、コールバックが完了するまでメソッドが返らないことを意味します。ロックは使用可能な場合にのみ許可されるため、この呼び出しにより、ロックが解放されるのを待たずに他の方法で解放されます。</target>
        </trans-unit>
        <trans-unit id="e80ff6a2f70d95849fc4132ad569ba581ce96b27" translate="yes" xml:space="preserve">
          <source>To grab the media stream we want to capture, we use &lt;code&gt;getUserMedia()&lt;/code&gt;. We then use the MediaRecorder API to record the stream, and output each recorded snippet into the source of a generated &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element so it can be played back.</source>
          <target state="translated">キャプチャするメディアストリームを取得するには、 &lt;code&gt;getUserMedia()&lt;/code&gt; を使用します。次に、MediaRecorder APIを使用してストリームを記録し、記録された各スニペットを生成された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のソースに出力して、再生できるようにします。</target>
        </trans-unit>
        <trans-unit id="30111ad9baa284d2036492be88a26f7977b549d5" translate="yes" xml:space="preserve">
          <source>To guarantee enough performance, implementations are not using a truly random number generator, but they are using a pseudo-random number generator &lt;em&gt;seeded &lt;/em&gt;with a value with enough entropy. The PRNG used differs from one implementation to the other but is suitable for cryptographic usages. Implementations are also required to use a seed with enough entropy, like a system-level entropy source.</source>
          <target state="translated">十分なパフォーマンスを保証するために、実装では真の乱数ジェネレータを使用していませんが、十分なエントロピーを持つ値が&lt;em&gt;シードさ&lt;/em&gt;れた疑似乱数ジェネレータを使用しています。使用されるPRNGは実装ごとに異なりますが、暗号化の使用に適しています。システムレベルのエントロピーソースのように、十分なエントロピーを持つシードを使用する実装も必要です。</target>
        </trans-unit>
        <trans-unit id="2bb2307f1bad744f17338ffd38c42a042928f6a6" translate="yes" xml:space="preserve">
          <source>To illustrate how the WebVR API works, we'll study our raw-webgl-example, which looks a bit like this:</source>
          <target state="translated">WebVR API がどのように動作するかを説明するために、私たちの raw-webgl-example を研究します。</target>
        </trans-unit>
        <trans-unit id="2fe3509c5f0494b6d537a8eaf16219ace32a3b79" translate="yes" xml:space="preserve">
          <source>To illustrate some typical web storage usage, we have created a simple example, imaginatively called &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/web-storage&quot;&gt;Web Storage Demo&lt;/a&gt;. The &lt;a href=&quot;https://mdn.github.io/dom-examples/web-storage/&quot;&gt;landing page&lt;/a&gt; provides controls that can be used to customize the colour, font and decorative image. When you choose different options, the page is instantly updated; in addition your choices are stored in &lt;code&gt;localStorage&lt;/code&gt;, so that when you leave the page then load it again later on your choices are remembered.</source>
          <target state="translated">典型的なWebストレージの使用法を説明するために、想像&lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/web-storage&quot;&gt;上のWeb Storage Demo&lt;/a&gt;と呼ばれる簡単な例を作成しました。&lt;a href=&quot;https://mdn.github.io/dom-examples/web-storage/&quot;&gt;ランディングページは、&lt;/a&gt;色、フォント、飾り画像をカスタマイズするために使用することができるコントロールを提供します。別のオプションを選択すると、ページが即座に更新されます。さらに、選択内容は &lt;code&gt;localStorage&lt;/code&gt; に保存されるため、ページを離れたときに、後でもう一度選択内容が読み込まれるように記憶されます。</target>
        </trans-unit>
        <trans-unit id="4004ef70f1338a2cd87a77ed86953ead6c8afda6" translate="yes" xml:space="preserve">
          <source>To illustrate some typical web storage usage, we have created a simple example, imaginatively called &lt;strong&gt;Web Storage Demo&lt;/strong&gt;. The &lt;a href=&quot;https://mdn.github.io/dom-examples/web-storage/&quot;&gt;landing page&lt;/a&gt; provides controls that can be used to customize the color, font, and decorative image:</source>
          <target state="translated">典型的なWebストレージの使用法を説明するために、想像&lt;strong&gt;上のWeb Storage Demo&lt;/strong&gt;と呼ばれる簡単な例を作成しました。&lt;a href=&quot;https://mdn.github.io/dom-examples/web-storage/&quot;&gt;ランディングページは、&lt;/a&gt;色、フォント、および装飾画像をカスタマイズするために使用することができるコントロールを提供します。</target>
        </trans-unit>
        <trans-unit id="dd2e660d9c09501cfb0c480c114ec212b39419b5" translate="yes" xml:space="preserve">
          <source>To illustrate this, let's create for didactical purpose a function named &lt;code&gt;emulateMessage()&lt;/code&gt;, which will simulate the behavior of a value that is &lt;em&gt;cloned and not shared&lt;/em&gt; during the passage from a &lt;code&gt;worker&lt;/code&gt; to the main page or vice versa:</source>
          <target state="translated">これを説明するために、教育目的で &lt;code&gt;emulateMessage()&lt;/code&gt; という名前の関数を作成します。これは、 &lt;code&gt;worker&lt;/code&gt; からメインページへ、またはその逆への移行中に&lt;em&gt;複製され、共有さ&lt;/em&gt;れ&lt;em&gt;ない&lt;/em&gt;値の動作をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="a03712ee65e04d7069ed0f9fc6ce723e3c5b0daa" translate="yes" xml:space="preserve">
          <source>To implement a 0 ms timeout in a modern browser, you can use &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage()&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;http://dbaron.org/log/20100309-faster-timeouts&quot;&gt;described here&lt;/a&gt;.</source>
          <target state="translated">最新のブラウザーで0ミリ秒のタイムアウトを実装するには、&lt;a href=&quot;http://dbaron.org/log/20100309-faster-timeouts&quot;&gt;ここで説明&lt;/a&gt;するように&lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage()&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="2f14f2c04a7be0cc0f6e8dea0a93ef10dba82101" translate="yes" xml:space="preserve">
          <source>To implement a 0 ms timeout in a modern browser, you can use &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage()&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;https://dbaron.org/log/20100309-faster-timeouts&quot;&gt;described here&lt;/a&gt;.</source>
          <target state="translated">最新のブラウザで0ミリ秒のタイムアウトを実装するには、&lt;a href=&quot;https://dbaron.org/log/20100309-faster-timeouts&quot;&gt;ここで説明&lt;/a&gt;するように&lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage()&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="0c3f71e56ec739241977d254c6732e855763399f" translate="yes" xml:space="preserve">
          <source>To implement a way for users to mute and unmute a track, use the &lt;a href=&quot;enabled&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt; property. When a track is disabled by setting &lt;code&gt;enabled&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, it generates only empty frames (audio frames in which every sample is 0, or video frames in which every pixel is black).</source>
          <target state="translated">ユーザーがトラックをミュートおよびミュート解除する方法を実装するには、&lt;a href=&quot;enabled&quot;&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/a&gt;プロパティを使用します。 &lt;code&gt;enabled&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定してトラックを無効にすると、空のフレーム（すべてのサンプルが0のオーディオフレーム、またはすべてのピクセルが黒のビデオフレーム）のみが生成されます。</target>
        </trans-unit>
        <trans-unit id="9a58d50508803a8824d256421aaf32b39cbb11a2" translate="yes" xml:space="preserve">
          <source>To insert the HTML into the document rather than replace the contents of an element, use the method &lt;a href=&quot;insertadjacenthtml&quot;&gt;&lt;code&gt;insertAdjacentHTML()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要素のコンテンツを置き換えるのではなく、HTMLをドキュメントに挿入するには、メソッド&lt;a href=&quot;insertadjacenthtml&quot;&gt; &lt;code&gt;insertAdjacentHTML()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="86ed667de921efe3b558d34482b9a72e4889f7da" translate="yes" xml:space="preserve">
          <source>To instead ensure browsers don&amp;rsquo;t include credentials in the request, use &lt;code&gt;credentials: 'omit'&lt;/code&gt;.</source>
          <target state="translated">代わりに、ブラウザーが認証情報をリクエストに含めないようにするには、認証情報を使用し &lt;code&gt;credentials: 'omit'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc2c5e5ca0596b7dc69d7372107175a8cbe478d5" translate="yes" xml:space="preserve">
          <source>To invoke the above function at an appropriate time, you could use the &lt;a href=&quot;../serviceworkerglobalscope/onnotificationclick&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onnotificationclick&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="translated">上記の関数を適切なタイミングで呼び出すには、&lt;a href=&quot;../serviceworkerglobalscope/onnotificationclick&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.onnotificationclick&lt;/code&gt; &lt;/a&gt;イベントハンドラーを使用できます。</target>
        </trans-unit>
        <trans-unit id="265979ad3bcb7fc584066e714423d899105644dd" translate="yes" xml:space="preserve">
          <source>To just take the first item being dropped, use the &lt;a href=&quot;../datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; method as with a single item. This is convenient as drop targets which only need to support a single item do not need to do anything extra.</source>
          <target state="translated">ドロップされる最初のアイテムのみを取得するには、単一のアイテムの場合と同様に&lt;a href=&quot;../datatransfer/getdata&quot;&gt; &lt;code&gt;getData()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。これは、単一のアイテムのみをサポートする必要があるドロップターゲットが特別なことをする必要がないため便利です。</target>
        </trans-unit>
        <trans-unit id="b31f0bdc3516fafe01c30f74b7fce6e8d38a666f" translate="yes" xml:space="preserve">
          <source>To learn how to use server-sent events, see our article &lt;a href=&quot;server-sent_events/using_server-sent_events&quot;&gt;Using server-sent events&lt;/a&gt;.</source>
          <target state="translated">サーバー送信イベントの使用方法については、サーバー送信イベントの&lt;a href=&quot;server-sent_events/using_server-sent_events&quot;&gt;使用の&lt;/a&gt;記事をご覧ください。</target>
        </trans-unit>
        <trans-unit id="d11a85e806f08aea6f3f08ab0908db05d1302434" translate="yes" xml:space="preserve">
          <source>To learn more about IndexedDB terms, see the &lt;a href=&quot;#definitions&quot;&gt;Definitions&lt;/a&gt; section.</source>
          <target state="translated">IndexedDBの用語の詳細については、&lt;a href=&quot;#definitions&quot;&gt;定義の&lt;/a&gt;セクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="dbd0e4622482f63a01fde89a5b8402eb4ce7e9f8" translate="yes" xml:space="preserve">
          <source>To learn more about drag feedback images, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Drag_Operations#dragfeedback&quot;&gt;Setting the Drag Feedback Image&lt;/a&gt;.</source>
          <target state="translated">ドラッグフィードバック画像の詳細については、「ドラッグフィードバック画像を&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Drag_Operations#dragfeedback&quot;&gt;設定する&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="db57e1a4c5b72b643b4e5a2e3665ea52ee8d04c7" translate="yes" xml:space="preserve">
          <source>To learn more about how constraints and settings work, see &lt;a href=&quot;media_streams_api/constraints&quot;&gt;Capabilities, constraints, and settings&lt;/a&gt;.</source>
          <target state="translated">制約と設定の仕組みの詳細については、「&lt;a href=&quot;media_streams_api/constraints&quot;&gt;機能、制約、設定&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="a2072a58337de748cb618983f4b3fe4f5576f762" translate="yes" xml:space="preserve">
          <source>To learn more about how constraints work, see &lt;a href=&quot;../media_streams_api/constraints&quot;&gt;Capabilities, constraints, and settings&lt;/a&gt;.</source>
          <target state="translated">制約の&lt;a href=&quot;../media_streams_api/constraints&quot;&gt;機能の&lt;/a&gt;詳細については、機能、制約、設定を参照してください。</target>
        </trans-unit>
        <trans-unit id="819d6ab314290fc9c6f82094b083faad1ef973a8" translate="yes" xml:space="preserve">
          <source>To learn more about how constraints work, see &lt;a href=&quot;media_streams_api/constraints&quot;&gt;Capabilities, constraints, and settings&lt;/a&gt;.</source>
          <target state="translated">制約の&lt;a href=&quot;media_streams_api/constraints&quot;&gt;機能の&lt;/a&gt;詳細については、機能、制約、設定を参照してください。</target>
        </trans-unit>
        <trans-unit id="7800961e83fd68f4f9b5880a9c4dbf9b6a7d94da" translate="yes" xml:space="preserve">
          <source>To learn more about how request callbacks work, see &lt;a href=&quot;background_tasks_api&quot;&gt;Collaborative Scheduling of Background Tasks&lt;/a&gt;.</source>
          <target state="translated">リクエストコールバックの仕組みの詳細について&lt;a href=&quot;background_tasks_api&quot;&gt;は、バックグラウンドタスクの協調的スケジューリングを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="ec7cc228c9fad27bbd090c0e95430ce32c11cf35" translate="yes" xml:space="preserve">
          <source>To learn more about merchant validation, see &lt;a href=&quot;payment_request_api/concepts#Merchant_validation&quot;&gt;Merchant validation&lt;/a&gt; in &lt;a href=&quot;payment_request_api/concepts&quot;&gt;Payment processing concepts&lt;/a&gt;.</source>
          <target state="translated">商人の検証の詳細については、を参照&lt;a href=&quot;payment_request_api/concepts#Merchant_validation&quot;&gt;商人の検証&lt;/a&gt;における&lt;a href=&quot;payment_request_api/concepts&quot;&gt;支払処理の概念を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5444592650322e52ef27451d31b328690a146340" translate="yes" xml:space="preserve">
          <source>To learn more about using the MediaStream Recording API, see &lt;a href=&quot;mediastream_recording_api/using_the_mediastream_recording_api&quot;&gt;Using the MediaStream Recording API&lt;/a&gt;, which shows how to use the API to record audio clips. A second article, &lt;a href=&quot;mediastream_recording_api/recording_a_media_element&quot;&gt;Recording a media element&lt;/a&gt;, describes how to receive a stream from an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element and use the captured stream (in this case, recording it and saving it to a local disk).</source>
          <target state="translated">MediaStream Recording APIの&lt;a href=&quot;mediastream_recording_api/using_the_mediastream_recording_api&quot;&gt;使用の&lt;/a&gt;詳細については、APIを使用してオーディオクリップを記録する方法を示すMediaStream Recording APIの使用を参照してください。2番目の記事「&lt;a href=&quot;mediastream_recording_api/recording_a_media_element&quot;&gt;メディア要素の記録&lt;/a&gt;」では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素からストリームを受け取り、キャプチャしたストリームを使用する方法について説明します（この場合は、記録してローカルディスクに保存します）。</target>
        </trans-unit>
        <trans-unit id="9c80eb3596e78ce147d31d3afd7ac3678d24e2ff" translate="yes" xml:space="preserve">
          <source>To learn more on using indexes, see &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB#Using_an_index&quot;&gt;Using IndexedDB&lt;/a&gt;. For the reference documentation on index, see &lt;a href=&quot;https://developer.mozilla.org/en-US/en/IndexedDB/IDBKeyRange&quot;&gt;IDBKeyRange&lt;/a&gt;.</source>
          <target state="translated">インデックスの&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB#Using_an_index&quot;&gt;使用の&lt;/a&gt;詳細については、「インデックス付きDBの使用」を参照してください。インデックスのリファレンスドキュメントについては、&lt;a href=&quot;https://developer.mozilla.org/en-US/en/IndexedDB/IDBKeyRange&quot;&gt;IDBKeyRangeを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6addbb3281a8af78fdbfa4ae72ddb1a08515896d" translate="yes" xml:space="preserve">
          <source>To learn when other code has toggled full-screen mode on and off, you should establish listeners for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; event on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;. It's also important to listen for &lt;code&gt;fullscreenchange&lt;/code&gt; to be aware when, for example, the user manually toggles full-screen mode, or when the user switches applications, causing your application to temporarily exit full-screen mode.</source>
          <target state="translated">他のコードがフルスクリーンモードのオンとオフを切り替えたタイミングを知るには、&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; イベントのリスナーを確立する必要があります。たとえば、ユーザーが手動でフルスクリーンモードを切り替えたときや、ユーザーがアプリケーションを切り替えてアプリケーションが一時的にフルスクリーンモードを終了したときなどに注意して、 &lt;code&gt;fullscreenchange&lt;/code&gt; をリッスンすることも重要です。</target>
        </trans-unit>
        <trans-unit id="7eb69383a77fca06b8f2c2bc2302088c97a2f1b8" translate="yes" xml:space="preserve">
          <source>To leave a channel, it is required to call the &lt;a href=&quot;broadcastchannel/close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method on the object. This disconnects the link between the object and the underlying channel and allows garbage collection to happen.</source>
          <target state="translated">チャネルを離れるには、オブジェクトの&lt;a href=&quot;broadcastchannel/close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す必要があります。これにより、オブジェクトと基になるチャネルの間のリンクが切断され、ガベージコレクションが実行されます。</target>
        </trans-unit>
        <trans-unit id="55a8aa90985a8a61239e17a681945d9765df355d" translate="yes" xml:space="preserve">
          <source>To load the image, add a call to our &lt;code&gt;loadTexture()&lt;/code&gt; function within our &lt;code&gt;main()&lt;/code&gt; function. This can be added after the &lt;code&gt;initBuffers(gl)&lt;/code&gt; call.</source>
          <target state="translated">画像をロードするには、私たちの呼び出しを追加 &lt;code&gt;loadTexture()&lt;/code&gt; 私たちの内の関数 &lt;code&gt;main()&lt;/code&gt; 関数で。これは、 &lt;code&gt;initBuffers(gl)&lt;/code&gt; 呼び出しの後に追加できます。</target>
        </trans-unit>
        <trans-unit id="622117b2f91fb03a06dc70028a257fcd015fb3f3" translate="yes" xml:space="preserve">
          <source>To load the texture from the image file, it then creates an &lt;code&gt;Image&lt;/code&gt; object and assigned the &lt;code&gt;src&lt;/code&gt; to the url for our image we wish to use as our texture. The function we assign to &lt;code&gt;image.onload&lt;/code&gt; will be called once the image has finished downloading. At that point we again call &lt;a href=&quot;../../webglrenderingcontext/teximage2d&quot;&gt;&lt;code&gt;texImage2D()&lt;/code&gt;&lt;/a&gt; this time using the image as the source for the texture. After that we setup filtering and wrapping for the texture based on whether or not the image we download was a power of 2 in both dimensions or not.</source>
          <target state="translated">次に、画像ファイルからテクスチャをロードするために、 &lt;code&gt;Image&lt;/code&gt; オブジェクトを作成し、テクスチャとして使用する画像のURLに &lt;code&gt;src&lt;/code&gt; を割り当てます。 &lt;code&gt;image.onload&lt;/code&gt; に割り当てる関数は、イメージのダウンロードが完了すると呼び出されます。その時点で、テクスチャのソースとして画像を使用して、今回も&lt;a href=&quot;../../webglrenderingcontext/teximage2d&quot;&gt; &lt;code&gt;texImage2D()&lt;/code&gt; を&lt;/a&gt;呼び出します。その後、ダウンロードした画像が両方の次元で2の累乗であるかどうかに基づいて、テクスチャのフィルタリングとラッピングを設定しました。</target>
        </trans-unit>
        <trans-unit id="6e170ed2eb19236dd7b0bf96eea9f29bb5f0b526" translate="yes" xml:space="preserve">
          <source>To look for elements that include among their classes a single specified class, we just provide that class name when calling &lt;code&gt;getElementsByClassName()&lt;/code&gt;:</source>
          <target state="translated">指定された単一のクラスをクラスに含む要素を探すには、 &lt;code&gt;getElementsByClassName()&lt;/code&gt; を呼び出すときにそのクラス名を指定するだけです。</target>
        </trans-unit>
        <trans-unit id="e5853f58ee1c108875cf65f62e75cae5a524bac6" translate="yes" xml:space="preserve">
          <source>To make an element &lt;em&gt;draggable&lt;/em&gt; requires adding the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-draggable&quot;&gt;draggable&lt;/a&gt;&lt;/code&gt; attribute plus the &lt;a href=&quot;globaleventhandlers/ondragstart&quot;&gt;&lt;code&gt;ondragstart&lt;/code&gt;&lt;/a&gt; global event handler, as shown in the following code sample</source>
          <target state="translated">要素を&lt;em&gt;ドラッグ可能に&lt;/em&gt;するには、次のコードサンプルに示すように、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-draggable&quot;&gt;draggable&lt;/a&gt;&lt;/code&gt; 属性と&lt;a href=&quot;globaleventhandlers/ondragstart&quot;&gt; &lt;code&gt;ondragstart&lt;/code&gt; &lt;/a&gt;グローバルイベントハンドラーを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="94ad305eeac81238e09f8fca1fd90fc6373830e9" translate="yes" xml:space="preserve">
          <source>To make another HTML element draggable, three things must be done:</source>
          <target state="translated">別のHTML要素をドラッグ可能にするには、3つのことをしなければなりません。</target>
        </trans-unit>
        <trans-unit id="9c12813d8b3e30e072a19bbfec633780a823af46" translate="yes" xml:space="preserve">
          <source>To make the motion more real, you can play with the velocity like this, for example:</source>
          <target state="translated">動きをよりリアルにするためには、例えば、このようにベロシティを使って遊ぶことができます。</target>
        </trans-unit>
        <trans-unit id="9f7130b62f57295794bd9bc6359e369558a1e415" translate="yes" xml:space="preserve">
          <source>To make these colors actually get used, the vertex shader needs to be updated to pull the appropriate color from the color buffer:</source>
          <target state="translated">これらの色を実際に使用するためには、カラーバッファから適切な色を引き出すために頂点シェーダを更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="a06cfa6f03af72e333c20544bdd8d060b41379a7" translate="yes" xml:space="preserve">
          <source>To manipulate, for instance, the session storage for a domain, a call to the &lt;a href=&quot;window/sessionstorage&quot;&gt;&lt;code&gt;Window.sessionStorage&lt;/code&gt;&lt;/a&gt; is made; whereas for local storage the call is made to &lt;a href=&quot;window/localstorage&quot;&gt;&lt;code&gt;Window.localStorage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">たとえば、ドメインのセッションストレージを操作するために、&lt;a href=&quot;window/sessionstorage&quot;&gt; &lt;code&gt;Window.sessionStorage&lt;/code&gt; &lt;/a&gt;が呼び出されます。ローカルストレージの場合、呼び出しは&lt;a href=&quot;window/localstorage&quot;&gt; &lt;code&gt;Window.localStorage&lt;/code&gt; &lt;/a&gt;に対して行われます。</target>
        </trans-unit>
        <trans-unit id="34e783820df9859499df9f057cc0e31e16fb6b3f" translate="yes" xml:space="preserve">
          <source>To match against an ID or selectors that do not follow standard CSS syntax (by using a colon or space inappropriately, for example), you must escape the character with a backslash (&lt;code&gt;&quot;\&quot;&lt;/code&gt;). As the backslash is also an escape character in JavaScript, if you are entering a literal string, you must escape it &lt;em&gt;twice&lt;/em&gt; (once for the JavaScript string, and another time for &lt;code&gt;querySelector()&lt;/code&gt;):</source>
          <target state="translated">標準のCSS構文に従っていないIDまたはセレクターと照合するには（たとえば、コロンやスペースを不適切に使用して）、バックスラッシュ（ &lt;code&gt;&quot;\&quot;&lt;/code&gt; ）で文字をエスケープする必要があります。バックスラッシュはJavaScriptのエスケープ文字でもあるため、リテラル文字列を入力する場合は、&lt;em&gt;2回&lt;/em&gt;エスケープする必要があります（JavaScript文字列の場合は1回、 &lt;code&gt;querySelector()&lt;/code&gt; の場合はもう1回）。</target>
        </trans-unit>
        <trans-unit id="645e1f0338fb0001a2d232faa98b9f1c170939b3" translate="yes" xml:space="preserve">
          <source>To minimize this unwanted effect, we need to:</source>
          <target state="translated">この望ましくない影響を最小限に抑えるためには</target>
        </trans-unit>
        <trans-unit id="2a3be7b37c4b86e9f10fac78deb1accdff4bdd8e" translate="yes" xml:space="preserve">
          <source>To modify styles to a document using CSS syntax, one can insert rules or insert &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; tags whose &lt;code&gt;innerHTML&lt;/code&gt; property is set to the desired CSS.</source>
          <target state="translated">CSS構文を使用してドキュメントのスタイルを変更するには、ルールを挿入するか、 &lt;code&gt;innerHTML&lt;/code&gt; プロパティを目的のCSSに設定した&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;タグを挿入します。</target>
        </trans-unit>
        <trans-unit id="164a9e16d518c2e68cb09d15c71c67845e774c22" translate="yes" xml:space="preserve">
          <source>To monitor the entire subtree for attribute changes, simply set &lt;code&gt;subtree&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">サブツリー全体の属性変更を監視するには、 &lt;code&gt;subtree&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定するだけです。</target>
        </trans-unit>
        <trans-unit id="54f6be876f5a2efb03f7f3eadc2e93104ec624b2" translate="yes" xml:space="preserve">
          <source>To move back one page (the equivalent of calling &lt;code&gt;back()&lt;/code&gt;):</source>
          <target state="translated">1ページ &lt;code&gt;back()&lt;/code&gt; を呼び出すのと同じ）：</target>
        </trans-unit>
        <trans-unit id="769c09b2b735cfe9cb5299875d49cc7f496a3800" translate="yes" xml:space="preserve">
          <source>To move backward through history, just do:</source>
          <target state="translated">歴史をさかのぼっていくには、ただ、そうすればいいのです。</target>
        </trans-unit>
        <trans-unit id="d3eae9cc257ee18133d274ff2b619091f4ad1bab" translate="yes" xml:space="preserve">
          <source>To move forward a page, just like calling &lt;code&gt;forward()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;forward()&lt;/code&gt; を呼び出すのと同じように、ページを進めるには：</target>
        </trans-unit>
        <trans-unit id="2b931f4474904c061f39fef2c7ba96b7defcf5e8" translate="yes" xml:space="preserve">
          <source>To navigate the opposite way through the child nodes list use &lt;a href=&quot;nextsibling&quot;&gt;Node.nextSibling&lt;/a&gt;.</source>
          <target state="translated">子ノードリストを逆に移動するには、&lt;a href=&quot;nextsibling&quot;&gt;Node.nextSiblingを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="0f4bca7d258e0f846fff3844ffb4bca9cfe80416" translate="yes" xml:space="preserve">
          <source>To observe &quot;&lt;code&gt;frame&lt;/code&gt;&quot; performance entry types, the application first creates a &lt;a href=&quot;../performanceobserver&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt; object with a specific frame observer callback. In the following example, two observers for the &quot;&lt;code&gt;frame&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;performance entry type&lt;/code&gt;&lt;/a&gt; are created and the first observer constructor uses inline function syntax.</source>
          <target state="translated">「 &lt;code&gt;frame&lt;/code&gt; 」パフォーマンスエントリタイプを監視するには、アプリケーションはまず、特定のフレームオブザーバーコールバックを使用して&lt;a href=&quot;../performanceobserver&quot;&gt; &lt;code&gt;PerformanceObserver&lt;/code&gt; &lt;/a&gt;オブジェクトを作成します。次の例では、「 &lt;code&gt;frame&lt;/code&gt; 」&lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;performance entry type&lt;/code&gt; &lt;/a&gt; 2つのオブザーバーが作成され、最初のオブザーバーコンストラクターはインライン関数構文を使用します。</target>
        </trans-unit>
        <trans-unit id="e3f32571c1f92556c08e0c1985819d4519b22080" translate="yes" xml:space="preserve">
          <source>To observe &quot;&lt;code&gt;frame&lt;/code&gt;&quot; performance entry types, the application first creates a &lt;a href=&quot;performanceobserver&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt; object with a specific frame observer callback (function). Next, &lt;a href=&quot;performanceobserver/observe&quot;&gt;&lt;code&gt;PerformanceObserver.observe()&lt;/code&gt;&lt;/a&gt; is used to specify the set of performance events to observe - in this case, just the &quot;&lt;code&gt;frame&lt;/code&gt;&quot; event type. When the browser adds a new frame to the performance timeline, the specified observer callback will be invoked.</source>
          <target state="translated">「 &lt;code&gt;frame&lt;/code&gt; 」パフォーマンスエントリタイプを監視するには、アプリケーションはまず、特定のフレームオブザーバーコールバック（関数）を使用して&lt;a href=&quot;performanceobserver&quot;&gt; &lt;code&gt;PerformanceObserver&lt;/code&gt; &lt;/a&gt;オブジェクトを作成します。次に、&lt;a href=&quot;performanceobserver/observe&quot;&gt; &lt;code&gt;PerformanceObserver.observe()&lt;/code&gt; &lt;/a&gt;を使用して、監視するパフォーマンスイベントのセットを指定します。この場合は、「 &lt;code&gt;frame&lt;/code&gt; 」イベントタイプのみです。ブラウザがパフォーマンスタイムラインに新しいフレームを追加すると、指定されたオブザーバーコールバックが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="68518bcc16630202fa877e1f74cb2fb2fc131e32" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; of all of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; elements contained within the element &lt;code&gt;&quot;myBox&quot;&lt;/code&gt;:</source>
          <target state="translated">要素 &lt;code&gt;&quot;myBox&quot;&lt;/code&gt; 内に含まれるすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の&lt;a href=&quot;../nodelist&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; &lt;/a&gt;を取得するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="d405f493cf80b329069a3d81e9c827ba0c1826d0" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; of all of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; elements in the document:</source>
          <target state="translated">ドキュメント内のすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の&lt;a href=&quot;../nodelist&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; &lt;/a&gt;を取得するには：</target>
        </trans-unit>
        <trans-unit id="e0bdaa8df3e908ef979d4f007684e8a35b2ee291" translate="yes" xml:space="preserve">
          <source>To obtain an &lt;code&gt;HTMLFormElement&lt;/code&gt; object, you can use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;CSS selector&lt;/a&gt; with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/querySelector&quot;&gt;&lt;code&gt;querySelector()&lt;/code&gt;&lt;/a&gt;, or you can get a list of all of the forms in the document using its &lt;a href=&quot;document/forms&quot;&gt;&lt;code&gt;forms&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;code&gt;HTMLFormElement&lt;/code&gt; オブジェクトを取得するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/querySelector&quot;&gt; &lt;code&gt;querySelector()&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;CSSセレクター&lt;/a&gt;を使用するか、&lt;a href=&quot;document/forms&quot;&gt; &lt;code&gt;forms&lt;/code&gt; &lt;/a&gt;プロパティを使用してドキュメント内のすべてのフォームのリストを取得できます。</target>
        </trans-unit>
        <trans-unit id="a6620362339c1dae448688505ddf1ab3bea2c37b" translate="yes" xml:space="preserve">
          <source>To obtain an &lt;code&gt;ImageData&lt;/code&gt; object containing a copy of the pixel data for a canvas context, you can use the &lt;code&gt;getImageData()&lt;/code&gt; method:</source>
          <target state="translated">キャンバスコンテキストのピクセルデータのコピーを含む &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを取得するには、 &lt;code&gt;getImageData()&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="9f04c7b65230afcad191ee397e7b1a38b6701913" translate="yes" xml:space="preserve">
          <source>To obtain the user's current location, you can call the &lt;a href=&quot;geolocation/getcurrentposition&quot;&gt;&lt;code&gt;getCurrentPosition()&lt;/code&gt;&lt;/a&gt; method. This initiates an asynchronous request to detect the user's position, and queries the positioning hardware to get up-to-date information. When the position is determined, the defined callback function is executed. You can optionally provide a second callback function to be executed if an error occurs. A third, optional, parameter is an options object where you can set the maximum age of the position returned, the time to wait for a request, and if you want high accuracy for the position.</source>
          <target state="translated">ユーザーの現在の場所を取得するには、&lt;a href=&quot;geolocation/getcurrentposition&quot;&gt; &lt;code&gt;getCurrentPosition()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。これは、ユーザーの位置を検出するための非同期要求を開始し、位置情報ハードウェアにクエリを実行して最新の情報を取得します。位置が決定されると、定義されたコールバック関数が実行されます。オプションで、エラーが発生した場合に実行される2番目のコールバック関数を提供できます。3番目のオプションのパラメーターは、返される位置の最大経過時間、要求を待機する時間、および位置の高精度が必要かどうかを設定できるオプションオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="8dbb74de6bf93a22d5fce8faa8638ee7f48f696a" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;animation.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃とフィンガープリントに対する保護を提供するために、ブラウザの設定によっては、 &lt;code&gt;animation.currentTime&lt;/code&gt; の精度が丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="299c6d52c8b2982bc920a675cf0b16ada062b377" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;animation.startTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃とフィンガープリントに対する保護を提供するために、ブラウザの設定によっては、 &lt;code&gt;animation.startTime&lt;/code&gt; の精度が丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="c4aadc842ec96b6bc2ededaa36a9c210323d69db" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;animationTimeline.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃とフィンガープリントに対する保護を提供するために、ブラウザの設定によっては、 &lt;code&gt;animationTimeline.currentTime&lt;/code&gt; の精度が丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="0a3ca096c48ba5905fd249accfa9be5528a06f1f" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;audioCtx.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃とフィンガープリントに対する保護を提供するために、ブラウザーの設定によっては、 &lt;code&gt;audioCtx.currentTime&lt;/code&gt; の精度が丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="b21b22590bdcd6b2c8fcce5504a4c65eac5d5386" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;event.timeStamp&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃とフィンガープリントに対する保護を提供するために、ブラウザーの設定によっては、 &lt;code&gt;event.timeStamp&lt;/code&gt; の精度が丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="aaab0148211ba56838e6fd1fbd0a5e83b6f63c07" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;performance.now()&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃やフィンガープリントに対する保護を提供するために、 &lt;code&gt;performance.now()&lt;/code&gt; の精度は、ブラウザーの設定によっては丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="3d4597cb0ee99e9c825d257360012ef33717f7bf" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;playbackEvent.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃とフィンガープリントに対する保護を提供するために、ブラウザの設定によっては、 &lt;code&gt;playbackEvent.currentTime&lt;/code&gt; の精度が丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="a994276130344b02b5cf7207aaf938b929c3c5b3" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;someFile.lastModified&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃とフィンガープリントに対する保護を提供するために、ブラウザー設定によっては &lt;code&gt;someFile.lastModified&lt;/code&gt; の精度が丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="8f971d90d72644a0874a7d21e9710bc27d48328d" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;video.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">タイミング攻撃やフィンガープリントに対する保護を提供するために、ブラウザーの設定によっては、 &lt;code&gt;video.currentTime&lt;/code&gt; の精度が丸められる場合があります。</target>
        </trans-unit>
        <trans-unit id="fe93f723dd425d9275f9024f9de6e25ce24732e6" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of time stamps might get rounded depending on browser settings.</source>
          <target state="translated">タイミングアタックやフィンガープリントからの保護を提供するため、ブラウザの設定によってはタイムスタンプの精度が丸くなってしまうことがあります。</target>
        </trans-unit>
        <trans-unit id="be05f7eb739adbd56502345110cc5548182b1514" translate="yes" xml:space="preserve">
          <source>To only obtain the HTML representation of the contents of an element, or to replace the contents of an element, use the property &lt;a href=&quot;innerhtml&quot;&gt;&lt;code&gt;innerHTML&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">要素のコンテンツのHTML表現のみを取得するか、要素のコンテンツを置き換えるには、代わりにプロパティ&lt;a href=&quot;innerhtml&quot;&gt; &lt;code&gt;innerHTML&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="dcc5d102dd30e344a37ce609ccc9436e6a89d4d3" translate="yes" xml:space="preserve">
          <source>To only wait for a lock for a short period of time, use the &lt;code&gt;signal&lt;/code&gt; option.</source>
          <target state="translated">短時間だけロックを待機するには、 &lt;code&gt;signal&lt;/code&gt; オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="fe1b2ada55806cf941123987826dd2578b6ea49e" translate="yes" xml:space="preserve">
          <source>To open a resource in a new tab see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/tabbrowser&quot;&gt;Tabbed browser&lt;/a&gt;. Some &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/Tabbed_browser?redirectlocale=en-US&amp;amp;redirectslug=Code_snippets%2FTabbed_browser&quot;&gt;Code snippets&lt;/a&gt; are available. If you are using the SDK, tabs are &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/SDK/High-Level_APIs/tabs&quot;&gt;handled a bit differently&lt;/a&gt;</source>
          <target state="translated">リソースを新しいタブで開くには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/tabbrowser&quot;&gt;タブ付きブラウザーを&lt;/a&gt;参照してください。一部の&lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/Tabbed_browser?redirectlocale=en-US&amp;amp;redirectslug=Code_snippets%2FTabbed_browser&quot;&gt;コードスニペット&lt;/a&gt;が利用可能です。SDKを使用している場合、タブの&lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/SDK/High-Level_APIs/tabs&quot;&gt;処理は少し異なります&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91da43f4ea981f58622a0946786895d01a6105c2" translate="yes" xml:space="preserve">
          <source>To overwrite the old value with a new one, use &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Headers.set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">古い値を新しい値で上書きするには、&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Headers.set&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="58faa70afda02757702aee53e67917f783413331" translate="yes" xml:space="preserve">
          <source>To pause the timers, all we need to do is remove the ads from the set of visible ads (&lt;code&gt;visibleAds&lt;/code&gt;) and mark them as inactive. To do so, we begin by saving the set of visible ads into a variable known as &lt;code&gt;previouslyVisibleAds&lt;/code&gt; to be sure we can restore them when the user tabs back into the document, and we then empty the &lt;code&gt;visibleAds&lt;/code&gt; set so they won't be treated as visible. Then, for each of the ads that are being suspended, we call our &lt;code&gt;updateAdTimer()&lt;/code&gt; function, which handles updating the ad's total visible time counter, then we set their &lt;code&gt;dataset.lastViewStarted&lt;/code&gt; property to 0, which indicates that the tab's timer isn't running.</source>
          <target state="translated">タイマーを一時停止するには、表示されている一連の広告（ &lt;code&gt;visibleAds&lt;/code&gt; ）から広告を削除し、非アクティブとしてマークするだけです。そのためには、可視広告のセットを &lt;code&gt;previouslyVisibleAds&lt;/code&gt; と呼ばれる変数に保存して、ユーザーがタブでドキュメントに戻ったときに確実に復元できるようにし、次に &lt;code&gt;visibleAds&lt;/code&gt; セットを空にして、次のように扱われないようにします。見える。次に、一時停止されている広告ごとに、広告の合計表示時間カウンタの更新を処理する &lt;code&gt;updateAdTimer()&lt;/code&gt; 関数を呼び出してから、それらの &lt;code&gt;dataset.lastViewStarted&lt;/code&gt; プロパティを0に設定します。これは、タブのタイマーがタイマーでないことを示しますランニング。</target>
        </trans-unit>
        <trans-unit id="7d7cd854f0066d39f9e368be1d004d1b18474af1" translate="yes" xml:space="preserve">
          <source>To populate the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element with the different voice options the device has available, we've written a &lt;code&gt;populateVoiceList()&lt;/code&gt; function. We first invoke &lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt;, which returns a list of all the available voices, represented by &lt;a href=&quot;../speechsynthesisvoice&quot;&gt;&lt;code&gt;SpeechSynthesisVoice&lt;/code&gt;&lt;/a&gt; objects. We then loop through this list &amp;mdash; for each voice we create an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;&lt;/a&gt; element, set its text content to display the name of the voice (grabbed from &lt;a href=&quot;../speechsynthesisvoice/name&quot;&gt;&lt;code&gt;SpeechSynthesisVoice.name&lt;/code&gt;&lt;/a&gt;), the language of the voice (grabbed from &lt;a href=&quot;../speechsynthesisvoice/lang&quot;&gt;&lt;code&gt;SpeechSynthesisVoice.lang&lt;/code&gt;&lt;/a&gt;), and &lt;code&gt;-- DEFAULT&lt;/code&gt; if the voice is the default voice for the synthesis engine (checked by seeing if &lt;a href=&quot;../speechsynthesisvoice/default&quot;&gt;&lt;code&gt;SpeechSynthesisVoice.default&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;.)</source>
          <target state="translated">移入するには&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;デバイスが利用できる持っているさまざまな音声オプションを持つ要素を、我々は書いてきた &lt;code&gt;populateVoiceList()&lt;/code&gt; 関数を。最初に&lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; を&lt;/a&gt;呼び出します。これは、&lt;a href=&quot;../speechsynthesisvoice&quot;&gt; &lt;code&gt;SpeechSynthesisVoice&lt;/code&gt; &lt;/a&gt;オブジェクトで表される利用可能なすべての音声のリストを返します。次に、このリストをループ処理します。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt; &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成する音声ごとに、そのテキストコンテンツを設定して、音声の名前（&lt;a href=&quot;../speechsynthesisvoice/name&quot;&gt; &lt;code&gt;SpeechSynthesisVoice.name&lt;/code&gt; &lt;/a&gt;から取得）、音声の言語（&lt;a href=&quot;../speechsynthesisvoice/lang&quot;&gt; &lt;code&gt;SpeechSynthesisVoice.lang&lt;/code&gt; &lt;/a&gt;から取得）、および &lt;code&gt;-- DEFAULT&lt;/code&gt; 音声が合成エンジンのデフォルトの音声である場合はDEFAULT（&lt;a href=&quot;../speechsynthesisvoice/default&quot;&gt; &lt;code&gt;SpeechSynthesisVoice.default&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;true&lt;/code&gt; を返します。）</target>
        </trans-unit>
        <trans-unit id="6e13561c198c4f1c3503c689f7b4020b41ba6e58" translate="yes" xml:space="preserve">
          <source>To prevent automatic capture of frames, so that frames are only captured when &lt;code&gt;requestFrame()&lt;/code&gt; is called, specify a value of 0 for the &lt;a href=&quot;../htmlcanvaselement/capturestream&quot;&gt;&lt;code&gt;captureStream()&lt;/code&gt;&lt;/a&gt; method when creating the stream.</source>
          <target state="translated">フレームが自動的にキャプチャされないようにして、 &lt;code&gt;requestFrame()&lt;/code&gt; が呼び出されたときにのみフレームがキャプチャされるようにするには、ストリームの作成時に&lt;a href=&quot;../htmlcanvaselement/capturestream&quot;&gt; &lt;code&gt;captureStream()&lt;/code&gt; &lt;/a&gt;メソッドに値0を指定します。</target>
        </trans-unit>
        <trans-unit id="77ceb64cad6e4521a208ebf4f56c86582371c605" translate="yes" xml:space="preserve">
          <source>To prevent the browser's default touch behavior from overriding this application's pointer handling, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action&quot;&gt;&lt;code&gt;touch-action&lt;/code&gt;&lt;/a&gt; property is applied to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">ブラウザーのデフォルトのタッチ動作がこのアプリケーションのポインター処理をオーバーライドしないようにするには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action&quot;&gt; &lt;code&gt;touch-action&lt;/code&gt; &lt;/a&gt;プロパティを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;要素に適用します。</target>
        </trans-unit>
        <trans-unit id="5fe22a268c7e57738a1d0d00f0e88fbb87e9f4dd" translate="yes" xml:space="preserve">
          <source>To prevent this problem, some browsers (specifically, Chrome and Firefox) have changed the default value of the &lt;code&gt;passive&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; events on the document-level nodes &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../document/body&quot;&gt;&lt;code&gt;Document.body&lt;/code&gt;&lt;/a&gt;. This prevents the event listener from being called, so it can't block page rendering while the user is scrolling.</source>
          <target state="translated">この問題を回避するために、一部のブラウザー（特にChromeとFirefox）は、ドキュメントレベルのノード&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../document/body&quot;&gt; &lt;code&gt;Document.body&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; イベントの &lt;code&gt;passive&lt;/code&gt; オプションのデフォルト値を &lt;code&gt;true&lt;/code&gt; に変更しました。これにより、イベントリスナーが呼び出されなくなるため、ユーザーがスクロールしている間はページレンダリングをブロックできません。</target>
        </trans-unit>
        <trans-unit id="09b31911f077aaffe600649acf55b25e0e55f754" translate="yes" xml:space="preserve">
          <source>To put the timing information obtained from &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; into the correct perspective, you need to know more about what sort of load operation occurred. In particular, you need to know:</source>
          <target state="translated">&lt;a href=&quot;../performancetiming&quot;&gt; &lt;code&gt;PerformanceTiming&lt;/code&gt; &lt;/a&gt;から取得したタイミング情報を正しい見方にするには、発生したロード操作の種類についてさらに知る必要があります。特に、次のことを知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="30551d178876fc9d5081099974898b91921680df" translate="yes" xml:space="preserve">
          <source>To read from the clipboard, you must first have the &lt;code&gt;&quot;clipboard-read&quot;&lt;/code&gt; permission.</source>
          <target state="translated">クリップボードから読み取るには、最初に &lt;code&gt;&quot;clipboard-read&quot;&lt;/code&gt; 権限が必要です。</target>
        </trans-unit>
        <trans-unit id="483b7cbe3a175b21b83694ababd356000ed895b6" translate="yes" xml:space="preserve">
          <source>To read non-text contents from the clipboard, use the &lt;a href=&quot;read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method instead. You can write text to the clipboard using &lt;a href=&quot;writetext&quot;&gt;&lt;code&gt;writeText()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">クリップボードからテキスト以外のコンテンツを読み取るには、代わりに&lt;a href=&quot;read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。&lt;a href=&quot;writetext&quot;&gt; &lt;code&gt;writeText()&lt;/code&gt; &lt;/a&gt;を使用して、クリップボードにテキストを書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="fbf2d6bfa22cff349c861944aac29e8fdc69a665" translate="yes" xml:space="preserve">
          <source>To read the payload data, you must know when to stop reading. That's why the payload length is important to know. Unfortunately, this is somewhat complicated. To read it, follow these steps:</source>
          <target state="translated">ペイロードデータを読み取るためには、読み取るタイミングを知る必要があります。だからこそ、ペイロードの長さを知ることが重要なのです。残念ながら、これはやや複雑です。それを読み取るには、以下の手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="24020a64ccf51d7aca059e9607fd51934f0b07c2" translate="yes" xml:space="preserve">
          <source>To read the records of an existing object store, the transaction can either be in &lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;readwrite&lt;/code&gt; mode. To make changes to an existing object store, the transaction must be in &lt;code&gt;readwrite&lt;/code&gt; mode. You open such transactions with &lt;a href=&quot;../idbdatabase/transaction&quot;&gt;&lt;code&gt;IDBDatabase.transaction&lt;/code&gt;&lt;/a&gt;. The method accepts two parameters: the &lt;code&gt;storeNames&lt;/code&gt; (the scope, defined as an array of object stores that you want to access) and the &lt;code&gt;mode&lt;/code&gt; (&lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;readwrite&lt;/code&gt;) for the transaction. The method returns a transaction object containing the &lt;a href=&quot;../idbindex/objectstore&quot;&gt;&lt;code&gt;IDBIndex.objectStore&lt;/code&gt;&lt;/a&gt; method, which you can use to access your object store. By default, where no mode is specified, transactions open in &lt;code&gt;readonly&lt;/code&gt; mode.</source>
          <target state="translated">既存のオブジェクトストアのレコードを読み取るには、トランザクションを &lt;code&gt;readonly&lt;/code&gt; または読み取り / &lt;code&gt;readwrite&lt;/code&gt; モードにすることができます。既存のオブジェクトストアを変更するには、トランザクションが &lt;code&gt;readwrite&lt;/code&gt; モードになっている必要があります。このようなトランザクションは&lt;a href=&quot;../idbdatabase/transaction&quot;&gt; &lt;code&gt;IDBDatabase.transaction&lt;/code&gt; &lt;/a&gt;で開きます。このメソッドは、 &lt;code&gt;storeNames&lt;/code&gt; （アクセスするオブジェクトストアの配列として定義されたスコープ）とトランザクションの &lt;code&gt;mode&lt;/code&gt; （ &lt;code&gt;readonly&lt;/code&gt; または &lt;code&gt;readwrite&lt;/code&gt; ）の2つのパラメーターを受け入れます。このメソッドは、&lt;a href=&quot;../idbindex/objectstore&quot;&gt; &lt;code&gt;IDBIndex.objectStore&lt;/code&gt; &lt;/a&gt;を含むトランザクションオブジェクトを返しますメソッド。オブジェクトストアへのアクセスに使用できます。デフォルトでは、モードが指定されていない場合、トランザクションは &lt;code&gt;readonly&lt;/code&gt; モードで開きます。</target>
        </trans-unit>
        <trans-unit id="91c9c64bb43faa8136bb9b326edbde4f81f3deb4" translate="yes" xml:space="preserve">
          <source>To really understand what this does, it may help to look at the image to the right. The first four parameters define the location and size of the slice on the source image. The last four parameters define the rectangle into which to draw the image on the destination canvas.</source>
          <target state="translated">これが何をするのかを理解するには、右の画像を見るのが良いでしょう。最初の 4 つのパラメータは、元画像上のスライスの位置とサイズを定義します。最後の 4 つのパラメータは、 描画先のキャンバスに画像を描画するための矩形を定義します。</target>
        </trans-unit>
        <trans-unit id="e4785d38ea956fef3a0e9c5c9fee0912357d94cf" translate="yes" xml:space="preserve">
          <source>To recursively remove a directory as well as all of its contents and its subdirectories, call &lt;a href=&quot;../filesystemdirectoryentry/removerecursively&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry.removeRecursively()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ディレクトリとそのすべてのコンテンツおよびサブディレクトリを再帰的に削除するには、代わりに&lt;a href=&quot;../filesystemdirectoryentry/removerecursively&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry.removeRecursively()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="22233c9a8cc3fc933cbd28184ee3942cd4dbfb61" translate="yes" xml:space="preserve">
          <source>To reduce the load (and associated battery usage) from background tabs, timeouts are throttled to firing no more often than once per second (1000 ms) in inactive tabs.</source>
          <target state="translated">バックグラウンド タブの負荷(およびそれに伴うバッテリ使用量)を軽減するために、タイムアウトは、非アクティブなタブでは 1 秒に 1 回(1000 ミリ秒)以下の頻度で発射されるようにスロットルされます。</target>
        </trans-unit>
        <trans-unit id="fe14df135bc6315164234d28956f3fe54196bc41" translate="yes" xml:space="preserve">
          <source>To release an object URL, call &lt;a href=&quot;revokeobjecturl&quot;&gt;&lt;code&gt;revokeObjectURL()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オブジェクトのURLを解放するには、&lt;a href=&quot;revokeobjecturl&quot;&gt; &lt;code&gt;revokeObjectURL()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="272e24bd1f33f67e327af638858f7aad9f8791d7" translate="yes" xml:space="preserve">
          <source>To remove a single file, or an empty directory, you can also use &lt;a href=&quot;../filesystementry/remove&quot;&gt;&lt;code&gt;FileSystemEntry.remove()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単一のファイルまたは空のディレクトリを削除するには、&lt;a href=&quot;../filesystementry/remove&quot;&gt; &lt;code&gt;FileSystemEntry.remove()&lt;/code&gt; を&lt;/a&gt;使用することもできます。</target>
        </trans-unit>
        <trans-unit id="9ec2babe8d26c952646bf515678bf09ade1c6f47" translate="yes" xml:space="preserve">
          <source>To remove a specific mark from the performance timeline, call &lt;code&gt;performance.clearMarks(name)&lt;/code&gt; where &lt;code&gt;name&lt;/code&gt; is the name of the mark(s) you want removed. If this method is called with no arguments, all mark type entries will be removed from the performance timeline.</source>
          <target state="translated">特定のマークをパフォーマンスタイムラインから削除するには、 &lt;code&gt;performance.clearMarks(name)&lt;/code&gt; を呼び出します。ここで、 &lt;code&gt;name&lt;/code&gt; は削除するマークの名前です。このメソッドが引数なしで呼び出されると、すべてのマークタイプエントリがパフォーマンスタイムラインから削除されます。</target>
        </trans-unit>
        <trans-unit id="4f58bf42fbb087bda5e97b84cd5184251c127fbf" translate="yes" xml:space="preserve">
          <source>To remove a specific measure from the performance timeline, call &lt;code&gt;performance.clearMeasures(name)&lt;/code&gt; where &lt;code&gt;name&lt;/code&gt; is the name of the measure(s) you want removed. If this method is called with no arguments, all measure type entries will be removed from the performance timeline.</source>
          <target state="translated">特定のメジャーをパフォーマンスタイムラインから削除するには、 &lt;code&gt;performance.clearMeasures(name)&lt;/code&gt; を呼び出します。ここで、 &lt;code&gt;name&lt;/code&gt; は削除するメジャーの名前です。このメソッドが引数なしで呼び出されると、すべてのメジャータイプエントリがパフォーマンスタイムラインから削除されます。</target>
        </trans-unit>
        <trans-unit id="902ce6e67ba2c8f92a59618d638e3288aa526c1f" translate="yes" xml:space="preserve">
          <source>To remove multiple classes at once you can supply multiple tokens; the order you supply them doesn't have to match the order they appear in the list:</source>
          <target state="translated">一度に複数のクラスを削除するには、複数のトークンを指定することができます。</target>
        </trans-unit>
        <trans-unit id="c6715f1b0bd9b8b42509dedb07ebcf389035db4c" translate="yes" xml:space="preserve">
          <source>To request a payment, a web page creates a &lt;a href=&quot;paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object in response to a user action that initiates a payment, such as clicking a &quot;Purchase&quot; button. The &lt;code&gt;PaymentRequest&lt;/code&gt; allows the web page to exchange information with the user agent while the user provides input to complete the transaction.</source>
          <target state="translated">支払いをリクエストするために、Webページは、「購入」ボタンをクリックするなど、支払いを開始するユーザーアクションに応じて&lt;a href=&quot;paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest&lt;/code&gt; &lt;/a&gt;オブジェクトを作成します。 &lt;code&gt;PaymentRequest&lt;/code&gt; は、ユーザーがトランザクションを完了するために入力を提供しながら、Webページがユーザーエージェントと情報を交換することができます。</target>
        </trans-unit>
        <trans-unit id="de864b84a8402363682a1c95aec31c9280fc91e5" translate="yes" xml:space="preserve">
          <source>To restart ICE on an active connection, set this to &lt;code&gt;true&lt;/code&gt;. This will cause the returned offer to have different credentials than those already in place. If you then apply the returned offer, ICE will restart. Specify &lt;code&gt;false&lt;/code&gt; to keep the same credentials and therefore not restart ICE. &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">アクティブな接続でICEを再起動するには、これを &lt;code&gt;true&lt;/code&gt; に設定します。これにより、返されたオファーは、すでに存在するものとは異なる資格情報を持ちます。その後、返されたオファーを適用すると、ICEが再起動します。同じ資格情報を保持し、ICEを再起動しない場合は &lt;code&gt;false&lt;/code&gt; を指定します。 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e50782f8b12b550c5ed05029b8e96edd411e077" translate="yes" xml:space="preserve">
          <source>To retrieve just the URL as a string, the read-only &lt;a href=&quot;url&quot;&gt;&lt;code&gt;document.URL&lt;/code&gt;&lt;/a&gt; property can also be used.</source>
          <target state="translated">URLのみを文字列として取得するには、読み取り専用の&lt;a href=&quot;url&quot;&gt; &lt;code&gt;document.URL&lt;/code&gt; &lt;/a&gt;プロパティも使用できます。</target>
        </trans-unit>
        <trans-unit id="e87825fabd8da173a9848c8c6afabf236d23ab01" translate="yes" xml:space="preserve">
          <source>To retrieve the current text range the user has selected, you can use the &lt;a href=&quot;window/getselection&quot;&gt;&lt;code&gt;Window.getSelection()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;documentorshadowroot/getselection&quot;&gt;&lt;code&gt;Document.getSelection()&lt;/code&gt;&lt;/a&gt; method, storing the return value &amp;mdash; a &lt;a href=&quot;selection&quot;&gt;&lt;code&gt;Selection&lt;/code&gt;&lt;/a&gt; object &amp;mdash; in a variable for futher use.</source>
          <target state="translated">ユーザーが選択した現在のテキスト範囲を取得するには、&lt;a href=&quot;window/getselection&quot;&gt; &lt;code&gt;Window.getSelection()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;documentorshadowroot/getselection&quot;&gt; &lt;code&gt;Document.getSelection()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、戻り値（&lt;a href=&quot;selection&quot;&gt; &lt;code&gt;Selection&lt;/code&gt; &lt;/a&gt;オブジェクト）を変数に格納し、後で使用できます。</target>
        </trans-unit>
        <trans-unit id="0273ed0ad5afbd7a79e9596003c74616c108629a" translate="yes" xml:space="preserve">
          <source>To rotate the rectangle around its own center, we translate the canvas to the center of the rectangle, then rotate the canvas, then translate the canvas back to 0,0, and then draw the rectangle.</source>
          <target state="translated">矩形を自分の中心を中心に回転させるには、キャンバスを矩形の中心に平行移動させてから回転させ、キャンバスを0,0に戻して平行移動させてから矩形を描画します。</target>
        </trans-unit>
        <trans-unit id="379c3c36810ee5535d66df9329e82d8148779aca" translate="yes" xml:space="preserve">
          <source>To run the demo, you can clone (or &lt;a href=&quot;https://github.com/mdn/web-speech-api/archive/master.zip&quot;&gt;directly download&lt;/a&gt;) the Github repo it is part of, open the HTML index file in a supporting desktop browser, navigate to the &lt;a href=&quot;https://mdn.github.io/web-speech-api/speech-color-changer/&quot;&gt;live demo URL&lt;/a&gt; in a supporting mobile browser like Chrome, or load it onto a Firefox OS phone as an app via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/WebIDE&quot;&gt;WebIDE&lt;/a&gt; (permissions are required to run the API on Firefox OS, see below.)</source>
          <target state="translated">デモを実行するには、それが含まれているGithubリポジトリのクローンを作成（または&lt;a href=&quot;https://github.com/mdn/web-speech-api/archive/master.zip&quot;&gt;直接ダウンロード&lt;/a&gt;）し、サポートされているデスクトップブラウザーでHTMLインデックスファイルを開き、Chromeなどのサポートされているモバイルブラウザーで&lt;a href=&quot;https://mdn.github.io/web-speech-api/speech-color-changer/&quot;&gt;ライブデモURL&lt;/a&gt;に移動するか、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/WebIDE&quot;&gt;WebIDE&lt;/a&gt;を介したアプリとしてのFirefox OSフォン（Firefox OSでAPIを実行するには権限が必要です。以下を参照してください。）</target>
        </trans-unit>
        <trans-unit id="25bbd637a38e8c7f09298dedc1432b827be8b972" translate="yes" xml:space="preserve">
          <source>To run the demo, you can clone (or &lt;a href=&quot;https://github.com/mdn/web-speech-api/archive/master.zip&quot;&gt;directly download&lt;/a&gt;) the Github repo it is part of, open the HTML index file in a supporting desktop browser, or navigate to the &lt;a href=&quot;http://mdn.github.io/web-speech-api/speak-easy-synthesis/&quot;&gt;live demo URL&lt;/a&gt; in a supporting mobile browser like Chrome, or Firefox OS.</source>
          <target state="translated">デモを実行するには、それが含まれているGithubリポジトリのクローンを作成（または&lt;a href=&quot;https://github.com/mdn/web-speech-api/archive/master.zip&quot;&gt;直接ダウンロード&lt;/a&gt;）し、サポートされているデスクトップブラウザーでHTMLインデックスファイルを開くか、ChromeやFirefox OSなどのサポートされているモバイルブラウザーで&lt;a href=&quot;http://mdn.github.io/web-speech-api/speak-easy-synthesis/&quot;&gt;ライブデモURL&lt;/a&gt;に移動します。</target>
        </trans-unit>
        <trans-unit id="39b9868a8ca175fdb627408943d556726bd22315" translate="yes" xml:space="preserve">
          <source>To run the demo, you can clone (or &lt;a href=&quot;https://github.com/mdn/web-speech-api/archive/master.zip&quot;&gt;directly download&lt;/a&gt;) the Github repo it is part of, open the HTML index file in a supporting desktop browser, or navigate to the &lt;a href=&quot;https://mdn.github.io/web-speech-api/speak-easy-synthesis/&quot;&gt;live demo URL&lt;/a&gt; in a supporting mobile browser like Chrome, or Firefox OS.</source>
          <target state="translated">デモを実行するには、その一部であるGithubリポジトリのクローンを作成する（または&lt;a href=&quot;https://github.com/mdn/web-speech-api/archive/master.zip&quot;&gt;直接ダウンロードする&lt;/a&gt;）か、サポートするデスクトップブラウザでHTMLインデックスファイルを開くか、ChromeやFirefoxOSなどのサポートするモバイルブラウザで&lt;a href=&quot;https://mdn.github.io/web-speech-api/speak-easy-synthesis/&quot;&gt;ライブデモURL&lt;/a&gt;に移動します。。</target>
        </trans-unit>
        <trans-unit id="1692d8e1c7a34435b1a15207bee38a68ef964481" translate="yes" xml:space="preserve">
          <source>To scroll up:</source>
          <target state="translated">上にスクロールするには</target>
        </trans-unit>
        <trans-unit id="0aa7fdc3804ccd892fe24e8cb0318ecf273366d2" translate="yes" xml:space="preserve">
          <source>To see a complete implementation, check out our &lt;a href=&quot;https://mdn.github.io/webaudio-examples/panner-node/&quot;&gt;panner-node example&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/panner-node&quot;&gt;view the source code&lt;/a&gt;) &amp;mdash; this demo transports you to the 2.5D &quot;Room of metal&quot;, where you can play a track on a boom box and then walk around the boom box to see how the sound changes!</source>
          <target state="translated">完全な実装を確認するには、&lt;a href=&quot;https://mdn.github.io/webaudio-examples/panner-node/&quot;&gt;panner-nodeの例&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/panner-node&quot;&gt;ソースコードを表示&lt;/a&gt;）を確認してください。このデモでは、2.5Dの「Room of metal」に移動します。ここで、ブームボックスでトラックを再生し、ブームを歩き回ることができます。ボックスで音の変化を確認してください！</target>
        </trans-unit>
        <trans-unit id="61cf51b177c63b7939aa5ea3750780aa655b7ea2" translate="yes" xml:space="preserve">
          <source>To see a more complete implementation, check out one of our MDN Web Audio examples, such as &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-o-matic&lt;/a&gt; or &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin&lt;/a&gt;.</source>
          <target state="translated">より完全な実装を確認するには、&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-o-matic&lt;/a&gt;や&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin&lt;/a&gt;などのMDN Webオーディオの例をチェックしてください。</target>
        </trans-unit>
        <trans-unit id="2c2aa6d61d14422e8aa6b869712275ebdf175f9c" translate="yes" xml:space="preserve">
          <source>To see a more complete implementation, check out one of our MDN Web Audio examples, such as &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-o-matic&lt;/a&gt; or &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin&lt;/a&gt;.</source>
          <target state="translated">より完全な実装を確認するには、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-o-matic&lt;/a&gt;や&lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;ViolentTheremin&lt;/a&gt;などのMDNWebAudioの例の1つを確認してください。</target>
        </trans-unit>
        <trans-unit id="4c697e889ed266acfe8cc5275c588646edbff803" translate="yes" xml:space="preserve">
          <source>To see a more concrete example, take a look at &lt;a href=&quot;../intersection_observer_api/timing_element_visibility#Handling_intersection_changes&quot;&gt;Handling intersection changes&lt;/a&gt; in &lt;a href=&quot;../intersection_observer_api/timing_element_visibility&quot;&gt;Timing element visibility with the Intersection Observer API&lt;/a&gt;.</source>
          <target state="translated">より具体的な例を確認するに&lt;a href=&quot;../intersection_observer_api/timing_element_visibility&quot;&gt;は、Intersection Observer APIを使用したタイミング要素の可視性&lt;/a&gt;における&lt;a href=&quot;../intersection_observer_api/timing_element_visibility#Handling_intersection_changes&quot;&gt;交差点の変更の処理&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="8271ab1b04012249f31df0650ea8d4e5f1051989" translate="yes" xml:space="preserve">
          <source>To see changes in the network state, use &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element.addEventListener&quot;&gt;addEventListener&lt;/a&gt;&lt;/code&gt; to listen for the events on &lt;code&gt;window.ononline&lt;/code&gt; and &lt;code&gt;window.onoffline&lt;/code&gt;, as in the following example:</source>
          <target state="translated">ネットワーク状態の変化を確認するには、次の例のように、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element.addEventListener&quot;&gt;addEventListener&lt;/a&gt;&lt;/code&gt; を使用して &lt;code&gt;window.ononline&lt;/code&gt; および &lt;code&gt;window.onoffline&lt;/code&gt; のイベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="a76f9e9154ba80f542917ceb850b80ae03bc3ce6" translate="yes" xml:space="preserve">
          <source>To see this example in action, as well as to read the rest of the code from which these snippets were derived, see &lt;a href=&quot;web_audio_api/controlling_multiple_parameters_with_constantsourcenode&quot;&gt;Controlling multiple parameters with ConstantSourceNode.&lt;/a&gt;</source>
          <target state="translated">この例の動作を確認するとともに、これらのスニペットの派生元となった残りのコードを読み取るには&lt;a href=&quot;web_audio_api/controlling_multiple_parameters_with_constantsourcenode&quot;&gt;、ConstantSourceNodeを使用した複数のパラメーターの制御を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="41f91f9703ea1c46263e518bcdb5eeef9df99cd8" translate="yes" xml:space="preserve">
          <source>To send an HTTP request, create an &lt;code&gt;XMLHttpRequest&lt;/code&gt; object, open a URL, and send the request. After the transaction completes, the object will contain useful information such as the response body and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status&quot;&gt;HTTP status&lt;/a&gt; of the result.</source>
          <target state="translated">HTTPリクエストを送信するには、 &lt;code&gt;XMLHttpRequest&lt;/code&gt; オブジェクトを作成し、URLを開いてリクエストを送信します。トランザクションが完了すると、オブジェクトには応答の本文や結果の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status&quot;&gt;HTTPステータス&lt;/a&gt;などの有用な情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="0cee70c0dc47e09114a27c783a80af4d4118e72c" translate="yes" xml:space="preserve">
          <source>To set a drag data item within the &lt;a href=&quot;../dragevent/datatransfer&quot;&gt;&lt;code&gt;dataTransfer&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;../datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt; method. It takes two arguments, the type of data and the data value. For example:</source>
          <target state="translated">&lt;a href=&quot;../dragevent/datatransfer&quot;&gt; &lt;code&gt;dataTransfer&lt;/code&gt; &lt;/a&gt;内にドラッグデータ項目を設定するには、&lt;a href=&quot;../datatransfer/setdata&quot;&gt; &lt;code&gt;setData()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。データのタイプとデータ値の2つの引数を取ります。例えば：</target>
        </trans-unit>
        <trans-unit id="8770a57c3b961d77489774c0f55add5fa0131223" translate="yes" xml:space="preserve">
          <source>To set the blend color, use:</source>
          <target state="translated">ブレンドカラーを設定するには</target>
        </trans-unit>
        <trans-unit id="61dcfaf8cfda5cedf681e2dcfa32fe15c8331999" translate="yes" xml:space="preserve">
          <source>To set the blend equation, use:</source>
          <target state="translated">ブレンド方程式を設定するには</target>
        </trans-unit>
        <trans-unit id="b57f4623d8f894ca7ad2068c9965c884df73df70" translate="yes" xml:space="preserve">
          <source>To set the blend equations, use:</source>
          <target state="translated">ブレンド方程式を設定するには</target>
        </trans-unit>
        <trans-unit id="7d0f1ea00909077a7cb324dbf034a7681b298a03" translate="yes" xml:space="preserve">
          <source>To set the status once the window has been opened, use &lt;a href=&quot;https://developer.mozilla.org/en/Gecko_DOM_Reference/window/status&quot;&gt;window.status&lt;/a&gt;.</source>
          <target state="translated">ウィンドウが開いた後でステータスを設定するには、&lt;a href=&quot;https://developer.mozilla.org/en/Gecko_DOM_Reference/window/status&quot;&gt;window.statusを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="934ac567fab001983b4e2c14d8e8b1faa6203667" translate="yes" xml:space="preserve">
          <source>To set the value of a Boolean attribute, such as &lt;code&gt;disabled&lt;/code&gt;, you can specify any value. An empty string or the name of the attribute are recommended values. All that matters is that if the attribute is present at all, &lt;em&gt;regardless of its actual value&lt;/em&gt;, its value is considered to be &lt;code&gt;true&lt;/code&gt;. The absence of the attribute means its value is &lt;code&gt;false&lt;/code&gt;. By setting the value of the &lt;code&gt;disabled&lt;/code&gt; attribute to the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), we are setting &lt;code&gt;disabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, which results in the button being disabled.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; などのブール属性の値を設定するには、任意の値を指定できます。空の文字列または属性の名前が推奨値です。重要なことは&lt;em&gt;、実際の値に関係なく&lt;/em&gt;、属性が存在する&lt;em&gt;場合&lt;/em&gt;、その値は &lt;code&gt;true&lt;/code&gt; と見なされるということです。属性がない場合は、その値が &lt;code&gt;false&lt;/code&gt; であることを意味します。 &lt;code&gt;disabled&lt;/code&gt; 属性の値を空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）に設定する &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;disabled&lt;/code&gt; をtrueに設定し、ボタンが無効になるようにします。</target>
        </trans-unit>
        <trans-unit id="622f6439c4819e75c958e7280d4ff5cca9b3acfb" translate="yes" xml:space="preserve">
          <source>To set things up, we run the &lt;code&gt;startup()&lt;/code&gt; function below when the page loads:</source>
          <target state="translated">設定を行うには、ページが読み込まれたときに以下の &lt;code&gt;startup()&lt;/code&gt; 関数を実行します。</target>
        </trans-unit>
        <trans-unit id="73534698d2a9a0c9bcd50075bc928106e355a5fe" translate="yes" xml:space="preserve">
          <source>To show simple usage of Web speech recognition, we've written a demo called &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speech-color-changer&quot;&gt;Speech color changer&lt;/a&gt;. When the screen is tapped/clicked, you can say an HTML color keyword, and the app's background color will change to that color.</source>
          <target state="translated">Web音声認識の簡単な使用法を示すために、&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speech-color-changer&quot;&gt;Speech color changer&lt;/a&gt;と呼ばれるデモを作成しました。画面をタップまたはクリックすると、HTMLカラーキーワードを言うことができ、アプリの背景色がその色に変わります。</target>
        </trans-unit>
        <trans-unit id="0cb6a7ce81fc12f05f3b2d4508ac189849cb4ee4" translate="yes" xml:space="preserve">
          <source>To show simple usage of Web speech synthesis, we've provided a demo called &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/gh-pages/speak-easy-synthesis&quot;&gt;Speak easy synthesis&lt;/a&gt;. This includes a set of form controls for entering text to be synthesised, and setting the pitch, rate, and voice to use when the text is uttered. After you have entered your text, you can press</source>
          <target state="translated">ウェブ音声合成の簡単な使用方法を示すために、我々はと呼ばれるデモ提供してきました&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/gh-pages/speak-easy-synthesis&quot;&gt;スピーク簡単な合成を&lt;/a&gt;。これには、合成するテキストを入力し、テキストが発声されたときに使用するピッチ、レート、および音声を設定するための一連のフォームコントロールが含まれます。テキストを入力した後、</target>
        </trans-unit>
        <trans-unit id="0e211c3875781a68ffa25a359b8d736beb5bb1a6" translate="yes" xml:space="preserve">
          <source>To solve this problem, analytics and diagnostics code have historically made a synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; call in an &lt;code&gt;unload&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; event handler to submit the data. The synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; blocks the process of unloading the document, which in turn causes the next navigation appear to be slower. There is nothing the next page can do to avoid this perception of poor page load performance, and the result is that the user perceives that the new web page is slow to load, even though the true issue is with the previous page.</source>
          <target state="translated">この問題を解決するために、分析および診断コードは、これまで、データを送信するために、 &lt;code&gt;unload&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; イベントハンドラーで同期 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 呼び出しを行ってきました。同期 &lt;code&gt;XMLHttpRequest&lt;/code&gt; は、ドキュメントのアンロードプロセスをブロックします。これにより、次のナビゲーションが遅くなります。このページの読み込みパフォーマンスが低いという認識を回避するために次のページでできることは何もありません。その結果、実際の問題は前のページにあるにもかかわらず、ユーザーは新しいWebページの読み込みが遅いと感じています。</target>
        </trans-unit>
        <trans-unit id="72fc5072f163ab30f7df372cfdb308b4e2cc2561" translate="yes" xml:space="preserve">
          <source>To specify a content security policy for the worker, set a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&quot;&gt;Content-Security-Policy&lt;/a&gt; response header for the request which delivered the worker script itself.</source>
          <target state="translated">ワーカーのコンテンツセキュリティポリシーを指定するには、ワーカースクリプト自体を配信したリクエストの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&quot;&gt;Content-Security-Policy&lt;/a&gt;応答ヘッダーを設定します。</target>
        </trans-unit>
        <trans-unit id="4d048a532dbee58be4db15344cb3123937a4da5e" translate="yes" xml:space="preserve">
          <source>To split and merge audio channels, you'll use these interfaces.</source>
          <target state="translated">オーディオチャンネルを分割したり、マージしたりするには、これらのインターフェイスを使用します。</target>
        </trans-unit>
        <trans-unit id="62538373ae7e2297703938f6e69442c964d945ba" translate="yes" xml:space="preserve">
          <source>To start playing with this idea the previous example can be modified to allow for the use of the W component.</source>
          <target state="translated">このアイデアで遊ぶために、前の例を修正してWコンポーネントを使用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="46a75f52c28b2cb1222091855e5f758bce1d4db6" translate="yes" xml:space="preserve">
          <source>To start the negotiation process, we need to create and send an SDP offer to the peer we want to connect to. This offer includes a list of supported configurations for the connection, including information about the media stream we've added to the connection locally (that is, the video we want to send to the other end of the call), and any ICE candidates gathered by the ICE layer already. We create this offer by calling &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;myPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ネゴシエーションプロセスを開始するには、SDPオファーを作成して、接続先のピアに送信する必要があります。このオファーには、ローカルで接続に追加したメディアストリーム（つまり、通話の相手に送信するビデオ）に関する情報、および収集されたICE候補を含む、接続でサポートされている構成のリストが含まれていますICEレイヤーですでに。このオファーを作成するには、&lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;myPeerConnection.createOffer()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="90b1b3c76e594c1d82731ceccb467440848e0bb5" translate="yes" xml:space="preserve">
          <source>To start we can set the &lt;a href=&quot;../pannernode/panningmodel&quot;&gt;&lt;code&gt;panningModel&lt;/code&gt;&lt;/a&gt;. This is the spacialization algorithm that's used to position the audio in 3D space. We can set this to:</source>
          <target state="translated">まず、&lt;a href=&quot;../pannernode/panningmodel&quot;&gt; &lt;code&gt;panningModel&lt;/code&gt; &lt;/a&gt;を設定します。これは、オーディオを3D空間に配置するために使用される空間化アルゴリズムです。これを次のように設定できます。</target>
        </trans-unit>
        <trans-unit id="ddaabfa2555a751caa5ebc4237242e3dccab6da9" translate="yes" xml:space="preserve">
          <source>To start with let's take a look at our left, right, up and down values as these are pretty straightforward. We'll move the boombox along these axis and update the appropriate position.</source>
          <target state="translated">まず、左、右、上、下の値を見てみましょう。これらの軸に沿ってラジカセを移動し、適切な位置を更新します。</target>
        </trans-unit>
        <trans-unit id="5ffc5129ac69b8eb45bd4ac957c20609d5e91a59" translate="yes" xml:space="preserve">
          <source>To start with on &lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/web-storage/main.js&quot;&gt;main.js&lt;/a&gt;, we will test whether the storage object has already been populated (i.e., the page was previously accessed):</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/web-storage/main.js&quot;&gt;main.js&lt;/a&gt;から始めるために、ストレージオブジェクトが既に入力されている（つまり、ページが以前にアクセスされた）かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a8f2591f0be493f74a92677d2d835c8081085cc0" translate="yes" xml:space="preserve">
          <source>To stop recording call &lt;a href=&quot;profileend&quot;&gt;&lt;code&gt;Console.profileEnd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">記録を停止するには、&lt;a href=&quot;profileend&quot;&gt; &lt;code&gt;Console.profileEnd()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="d8fcef41ccb86ad885d030b01a855f249d28fbb6" translate="yes" xml:space="preserve">
          <source>To stop the &lt;code&gt;MutationObserver&lt;/code&gt; (so that none of its callbacks will be triggered any longer), call &lt;a href=&quot;disconnect&quot;&gt;&lt;code&gt;MutationObserver.disconnect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MutationObserver&lt;/code&gt; を停止するには（そのコールバックがトリガーされなくなるようにするため）、&lt;a href=&quot;disconnect&quot;&gt; &lt;code&gt;MutationObserver.disconnect()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="96fca3564d71208b8fef990dc7762f037294bb57" translate="yes" xml:space="preserve">
          <source>To stop the VR presentation when the button is subsequently pressed, we call &lt;a href=&quot;../vrdisplay/exitpresent&quot;&gt;&lt;code&gt;VRDisplay.exitPresent()&lt;/code&gt;&lt;/a&gt;. We also reverse the button's text content, and swap over the &lt;code&gt;requestAnimationFrame&lt;/code&gt; calls. You can see here that we are using &lt;a href=&quot;../vrdisplay/cancelanimationframe&quot;&gt;&lt;code&gt;VRDisplay.cancelAnimationFrame&lt;/code&gt;&lt;/a&gt; to stop the VR rendering loop, and starting the normal rendering loop off again by calling &lt;code&gt;drawScene()&lt;/code&gt;.</source>
          <target state="translated">その後ボタンが押されたときにVRプレゼンテーションを停止するには、&lt;a href=&quot;../vrdisplay/exitpresent&quot;&gt; &lt;code&gt;VRDisplay.exitPresent()&lt;/code&gt; &lt;/a&gt;を呼び出します。また、ボタンのテキストコンテンツを逆にし、 &lt;code&gt;requestAnimationFrame&lt;/code&gt; 呼び出しを入れ替えます。&lt;a href=&quot;../vrdisplay/cancelanimationframe&quot;&gt; &lt;code&gt;VRDisplay.cancelAnimationFrame&lt;/code&gt; &lt;/a&gt;を使用してVRレンダリングループを停止し、 &lt;code&gt;drawScene()&lt;/code&gt; を呼び出して通常のレンダリングループを再び開始していることがわかります。</target>
        </trans-unit>
        <trans-unit id="2e5db469c5444c9f8380396c064a1a1b98b8d39e" translate="yes" xml:space="preserve">
          <source>To support multi-touch interaction, preserving a pointer's event state during various event phases is required. This application uses three arrays to cache event state, one cache per target element.</source>
          <target state="translated">マルチタッチインタラクションをサポートするために、様々なイベントフェーズの間にポインタのイベント状態を保持する必要があります。このアプリケーションでは、イベント状態をキャッシュするために3つの配列を使用し、ターゲット要素ごとに1つのキャッシュを行います。</target>
        </trans-unit>
        <trans-unit id="3b39c4bb9053703f64bf93327d7a93f203f24092" translate="yes" xml:space="preserve">
          <source>To suspend redraw actions as a collection of SVG DOM changes occur, precede the changes to the SVG DOM with a method call similar to:</source>
          <target state="translated">SVG DOM の変更の集合が発生したときに再描画アクションを中断するには、SVG DOM への変更の前に似たようなメソッド呼び出しを行います。</target>
        </trans-unit>
        <trans-unit id="21350f6849eddeb9249cd0d1f9a412be8266b21e" translate="yes" xml:space="preserve">
          <source>To tell these situations apart, you either call</source>
          <target state="translated">これらの状況を見分けるには</target>
        </trans-unit>
        <trans-unit id="822cbc605c010b13ed4968269f5c5d1af8ef6895" translate="yes" xml:space="preserve">
          <source>To tell these situations apart, you need to call the &lt;a href=&quot;opencursor&quot;&gt;&lt;code&gt;openCursor()&lt;/code&gt;&lt;/a&gt; method with the same key. That method provides a cursor if the record exists, and no cursor if it does not.</source>
          <target state="translated">これらの状況を&lt;a href=&quot;opencursor&quot;&gt; &lt;code&gt;openCursor()&lt;/code&gt; &lt;/a&gt;は、同じキーでopenCursor（）メソッドを呼び出す必要があります。そのメソッドは、レコードが存在する場合はカーソルを提供し、存在しない場合はカーソルを提供しません。</target>
        </trans-unit>
        <trans-unit id="5a385a5df03e8bc7135a08a6cd2c260c9c6ea6f8" translate="yes" xml:space="preserve">
          <source>To test a lot of interfaces in a single page-for example, a &quot;suite&quot; of properties that affect the colors of a web page-you can create a similar test page with a whole console of buttons, textfields, and other HTML elements. The following screenshot gives you some idea of how interfaces can be grouped together for testing.</source>
          <target state="translated">例えば、Web ページの色に影響を与えるプロパティの「スイート」など、1 つのページで多くのインターフェイスをテストするには、ボタン、テキストフィールド、およびその他の HTML 要素のコンソール全体で同様のテストページを作成することができます。次のスクリーンショットは、テストのためにインターフェイスをどのようにグループ化できるかについて、いくつかのアイデアを与えてくれます。</target>
        </trans-unit>
        <trans-unit id="3fa4b715d79e8667e7e0460d48ed3acef3dfb180" translate="yes" xml:space="preserve">
          <source>To test support, smoothness and power efficiency of a video or audio file, you define the &lt;a href=&quot;mediaconfiguration&quot;&gt;media configuration&lt;/a&gt; you want to test, and then pass the audio or video configuration as the parameter of the &lt;a href=&quot;mediacapabilities&quot;&gt;&lt;code&gt;MediaCapabilities&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;encodingInfo()&lt;/code&gt; and &lt;code&gt;decodingInfo()&lt;/code&gt; methods.</source>
          <target state="translated">ビデオまたはオーディオファイルのサポート、滑らかさ、電力効率をテストするには、テストする&lt;a href=&quot;mediaconfiguration&quot;&gt;メディア構成&lt;/a&gt;を定義してから、オーディオまたはビデオ構成を&lt;a href=&quot;mediacapabilities&quot;&gt; &lt;code&gt;MediaCapabilities&lt;/code&gt; &lt;/a&gt;インターフェイスの &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; メソッドとdecodeInfo（）メソッドのパラメーターとして渡します。</target>
        </trans-unit>
        <trans-unit id="d6928600f27e380b4d030d2e66f92ae397db1e12" translate="yes" xml:space="preserve">
          <source>To test this, create a page named &lt;strong&gt;register.php&lt;/strong&gt; (which is the &lt;code&gt;action&lt;/code&gt; attribute of these sample forms), and put the following &lt;em&gt;minimalistic&lt;/em&gt; content:</source>
          <target state="translated">これをテストするには、&lt;strong&gt;register.php&lt;/strong&gt;（これらのサンプルフォームの &lt;code&gt;action&lt;/code&gt; 属性）という名前のページを作成し、次の&lt;em&gt;最小限の&lt;/em&gt;コンテンツを配置します。</target>
        </trans-unit>
        <trans-unit id="e5ecdbf37cf2a4b33d9162f8b079ab9228c89d7c" translate="yes" xml:space="preserve">
          <source>To test your browser's support for the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface, run the &lt;code&gt;&lt;a href=&quot;http://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="translated">ブラウザの&lt;a href=&quot;performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt;インターフェイスのサポートをテストするには、 &lt;code&gt;&lt;a href=&quot;http://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; アプリケーションを実行します。</target>
        </trans-unit>
        <trans-unit id="7c88aa96e3403a3f83d5e56a1c4dd698d792187f" translate="yes" xml:space="preserve">
          <source>To test your browser's support for the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface, run the &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="translated">ブラウザの&lt;a href=&quot;performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt;インターフェイスのサポートをテストするには、 &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; アプリケーションを実行します。</target>
        </trans-unit>
        <trans-unit id="8bb12699875a51dbd5915bcb5d7e1b603c98c7d6" translate="yes" xml:space="preserve">
          <source>To test your browser's support for these interfaces, run the &lt;code&gt;&lt;a href=&quot;http://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="translated">これらのインターフェースに対するブラウザーのサポートをテストするには、 &lt;code&gt;&lt;a href=&quot;http://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; アプリケーションを実行します。</target>
        </trans-unit>
        <trans-unit id="4ed18ba66cf75ffe4fc3f980f518a2959889fa2c" translate="yes" xml:space="preserve">
          <source>To test your browser's support for these interfaces, run the &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/dom-examples/performance-apis/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="translated">これらのインターフェースに対するブラウザーのサポートをテストするには、 &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/dom-examples/performance-apis/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; アプリケーションを実行します。</target>
        </trans-unit>
        <trans-unit id="b592bb7a934511dfb8325e9424659cba6a5ff17b" translate="yes" xml:space="preserve">
          <source>To test your browser's support for these interfaces, run the &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="translated">これらのインターフェースに対するブラウザーのサポートをテストするには、 &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; アプリケーションを実行します。</target>
        </trans-unit>
        <trans-unit id="1e90734b7457b2d699214028f2839cb8c0a14f3f" translate="yes" xml:space="preserve">
          <source>To test your browser's support for this API, run the &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/dom-examples/performance-apis/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="translated">このAPIに対するブラウザーのサポートをテストするには、 &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/dom-examples/performance-apis/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; アプリケーションを実行します。</target>
        </trans-unit>
        <trans-unit id="20deac92d7041ab7526fd434ef88174b87c4292f" translate="yes" xml:space="preserve">
          <source>To the right of each of the constraint set editors is a second text box which we use to display the current configuration of the track's configurable properties. This display is updated by the function &lt;code&gt;getCurrentSettings()&lt;/code&gt;, which gets the current settings for the audio and video tracks and inserts the corresponding code into the tracks' settings display boxes by setting their &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">各制約セットエディターの右側には、トラックの構成可能なプロパティの現在の構成を表示するために使用する2番目のテキストボックスがあります。この表示は、関数 &lt;code&gt;getCurrentSettings()&lt;/code&gt; によって更新されます。この関数は、オーディオトラックとビデオトラックの現在の設定を取得し、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; 設定して対応するコードをトラックの設定表示ボックスに挿入します。</target>
        </trans-unit>
        <trans-unit id="d3f0c073a7814a8c5b3451be6d283997dc2bbf4d" translate="yes" xml:space="preserve">
          <source>To track an element's visible time, we use two custom data attributes (see &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-data-*&quot;&gt;data-*&lt;/a&gt;&lt;/code&gt;) on every ad:</source>
          <target state="translated">要素の表示時間を追跡するには、すべての広告で2つのカスタムデータ属性（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-data-*&quot;&gt;data-*&lt;/a&gt;&lt;/code&gt; を参照）を使用します。</target>
        </trans-unit>
        <trans-unit id="558cccc9df607bdc028545739a6760ebe48f77fc" translate="yes" xml:space="preserve">
          <source>To track the success or failure of the request, it is necessary to listen for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; events at the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; level.</source>
          <target state="translated">リクエストの成功または失敗を追跡するには、&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;レベルで &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; イベントをリッスンする必要があります。</target>
        </trans-unit>
        <trans-unit id="c90a7c2e3929258bbf448e7940229453bd0285f1" translate="yes" xml:space="preserve">
          <source>To track the success or failure of the request, it is necessary to listen for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="translated">リクエストの成功または失敗を追跡するために、ために聞くことが必要である &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; イベント。</target>
        </trans-unit>
        <trans-unit id="2edf03f479ef8ccff367c20165497cbb2c55a08e" translate="yes" xml:space="preserve">
          <source>To try this for yourself, you can use the code snippet below. Just paste it into the &lt;code&gt;draw()&lt;/code&gt; function we saw earlier.</source>
          <target state="translated">これを自分で試すには、以下のコードスニペットを使用できます。先ほど見た &lt;code&gt;draw()&lt;/code&gt; 関数に貼り付けるだけです。</target>
        </trans-unit>
        <trans-unit id="ac9702abfad7fe69c479c73968f365e9ff4f671e" translate="yes" xml:space="preserve">
          <source>To understand these values, take the example of a &lt;code&gt;keyframeEffect&lt;/code&gt; value of &lt;code&gt;blur(2)&lt;/code&gt; working on an underlying property value of &lt;code&gt;blur(3)&lt;/code&gt;.</source>
          <target state="translated">これらの値を理解するには、 &lt;code&gt;blur(2)&lt;/code&gt; の &lt;code&gt;keyframeEffect&lt;/code&gt; 値が、 &lt;code&gt;blur(3)&lt;/code&gt; の基礎となるプロパティ値で機能している例を見てください。</target>
        </trans-unit>
        <trans-unit id="2c3c3573e038851bcad63b8cf1ea6c428da69a37" translate="yes" xml:space="preserve">
          <source>To understand what this algorithm does under the hood, here is an implementation on top of &lt;a href=&quot;fillrect&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.fillRect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このアルゴリズムが&lt;a href=&quot;fillrect&quot;&gt; &lt;code&gt;CanvasRenderingContext2D.fillRect()&lt;/code&gt; &lt;/a&gt;何を行うかを理解するために、CanvasRenderingContext2D.fillRect（）の上に実装を示します。</target>
        </trans-unit>
        <trans-unit id="94be798520fa136c2a48d8114cbeb6050771a6f7" translate="yes" xml:space="preserve">
          <source>To understand what&amp;rsquo;s happening here, let&amp;rsquo;s take a look at Alice&amp;rsquo;s animation:</source>
          <target state="translated">ここで何が起こっているのかを理解するために、アリスのアニメーションを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="3f2aecc8ec8a04942ac8be4edc3ee74aa54fb6a7" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;getUserMedia()&lt;/code&gt; in an installable app (for example, a &lt;a href=&quot;https://developer.mozilla.org/en-US/Apps/Build/Building_apps_for_Firefox_OS/Firefox_OS_app_beginners_tutorial&quot;&gt;Firefox OS app&lt;/a&gt;), you need to specify one or both of the following fields inside your manifest file:</source>
          <target state="translated">インストール可能なアプリ（&lt;a href=&quot;https://developer.mozilla.org/en-US/Apps/Build/Building_apps_for_Firefox_OS/Firefox_OS_app_beginners_tutorial&quot;&gt;Firefox OSアプリ&lt;/a&gt;など &lt;code&gt;getUserMedia()&lt;/code&gt; でgetUserMedia（）を使用するには、マニフェストファイル内の次のフィールドの一方または両方を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6d63bda05e8a287645dbfd029dc7c4d6401ec803" translate="yes" xml:space="preserve">
          <source>To use ECDSA, pass a &lt;a href=&quot;../ecdsaparams&quot;&gt;&lt;code&gt;EcdsaParams&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ECDSAを使用するには、&lt;a href=&quot;../ecdsaparams&quot;&gt; &lt;code&gt;EcdsaParams&lt;/code&gt; &lt;/a&gt;オブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="bca500d0d8a66d380981bb67bc7b151b58b7b07d" translate="yes" xml:space="preserve">
          <source>To use Fetch in unsupported browsers, there is a &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;Fetch Polyfill&lt;/a&gt; available that recreates the functionality for non-supporting browsers.</source>
          <target state="translated">サポートされていないブラウザでFetchを使用するために、サポートされていないブラウザの機能を再現する&lt;a href=&quot;https://github.com/github/fetch&quot;&gt;Fetch Polyfillが&lt;/a&gt;利用可能です。</target>
        </trans-unit>
        <trans-unit id="1ce7551708293454912771b39a36834dce301cf5" translate="yes" xml:space="preserve">
          <source>To use HMAC, pass the string &lt;code&gt;&quot;HMAC&quot;&lt;/code&gt; or an object of the form &lt;code&gt;{ &quot;name&quot;: &quot;HMAC&quot; }&lt;/code&gt;.</source>
          <target state="translated">HMACを使用するには、文字列 &lt;code&gt;&quot;HMAC&quot;&lt;/code&gt; または形式 &lt;code&gt;{ &quot;name&quot;: &quot;HMAC&quot; }&lt;/code&gt; オブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="576e7c0efb0648dfeee8b1b8717c336e1b7176a6" translate="yes" xml:space="preserve">
          <source>To use RSA-PSS, pass a &lt;a href=&quot;../rsapssparams&quot;&gt;&lt;code&gt;RsaPssParams&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">RSA-PSSを使用するには、&lt;a href=&quot;../rsapssparams&quot;&gt; &lt;code&gt;RsaPssParams&lt;/code&gt; &lt;/a&gt;オブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="d4ffc8299a41d04e0e10c31388169828f50b0965" translate="yes" xml:space="preserve">
          <source>To use RSASSA-PKCS1-v1_5, pass the string &lt;code&gt;&quot;RSASSA-PKCS1-v1_5&quot;&lt;/code&gt; or an object of the form &lt;code&gt;{ &quot;name&quot;: &quot;RSASSA-PKCS1-v1_5&quot; }&lt;/code&gt;.</source>
          <target state="translated">RSASSA-PKCS1-v1_5を使用するには、文字列 &lt;code&gt;&quot;RSASSA-PKCS1-v1_5&quot;&lt;/code&gt; または形式 &lt;code&gt;{ &quot;name&quot;: &quot;RSASSA-PKCS1-v1_5&quot; }&lt;/code&gt; オブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="c82b8b976c6cdeb2e805413260edee3b74c3f4f9" translate="yes" xml:space="preserve">
          <source>To use all the nice things we get with the Web Audio API, we need to grab the source from this element and &lt;em&gt;pipe&lt;/em&gt; it into the context we have created. Lucky for us there's a method that allows us to do just that &amp;mdash; &lt;a href=&quot;../audiocontext/createmediaelementsource&quot;&gt;&lt;code&gt;AudioContext.createMediaElementSource&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Web Audio APIで得られるすべての優れた機能を使用するには、この要素からソースを取得し、作成したコンテキストに&lt;em&gt;パイプ&lt;/em&gt;する必要があります。幸運なことに、まさにそれを可能にするメソッドがあります&amp;mdash; &lt;a href=&quot;../audiocontext/createmediaelementsource&quot;&gt; &lt;code&gt;AudioContext.createMediaElementSource&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a2e61b0755a419dc38a908bc56cd538df25ae946" translate="yes" xml:space="preserve">
          <source>To use backpressure in a ReadableStream, we can ask the controller for the chunk size desired by the consumer by querying the &lt;a href=&quot;../readablestreamdefaultcontroller/desiredsize&quot;&gt;&lt;code&gt;ReadableStreamDefaultController.desiredSize&lt;/code&gt;&lt;/a&gt; attribute on the controller. If it is too low, our ReadableStream can tell its underlying source to stop sending data, and we backpressure along the stream chain.</source>
          <target state="translated">ReadableStreamでバックプレッシャーを使用するには、コントローラーの&lt;a href=&quot;../readablestreamdefaultcontroller/desiredsize&quot;&gt; &lt;code&gt;ReadableStreamDefaultController.desiredSize&lt;/code&gt; &lt;/a&gt;属性を照会して、コンシューマーが必要とするチャンクサイズをコントローラーに要求します。低すぎる場合、ReadableStreamはその基になるソースにデータの送信を停止するよう指示でき、ストリームチェーンに沿ってバックプレッシャーをかけます。</target>
        </trans-unit>
        <trans-unit id="f454351265ca74059b747fbe757df59789bc2e18" translate="yes" xml:space="preserve">
          <source>To use it from chrome code, JSM and Bootstrap scope, you have to import it with &lt;code&gt;Cu.importGlobalProperties(['URL']);&lt;/code&gt;.</source>
          <target state="translated">chromeコード、JSM、Bootstrapスコープから使用するには、 &lt;code&gt;Cu.importGlobalProperties(['URL']);&lt;/code&gt; でインポートする必要があります。。</target>
        </trans-unit>
        <trans-unit id="1020d559dc189d2f3541cb99c0b6c9116be09f8f" translate="yes" xml:space="preserve">
          <source>To use linear filtering on half floating-point textures, enable the &lt;a href=&quot;oes_texture_half_float_linear&quot;&gt;&lt;code&gt;OES_texture_half_float_linear&lt;/code&gt;&lt;/a&gt; extension in addition to this extension.</source>
          <target state="translated">半浮動小数点テクスチャで線形フィルタリングを使用するには、&lt;a href=&quot;oes_texture_half_float_linear&quot;&gt; &lt;code&gt;OES_texture_half_float_linear&lt;/code&gt; &lt;/a&gt;拡張に加えてOES_texture_half_float_linear拡張を有効にします。</target>
        </trans-unit>
        <trans-unit id="99909f849f40c86b21f3043a4d1177ccbf7d43f2" translate="yes" xml:space="preserve">
          <source>To use speech recognition in an app, you need to specify the following permissions in your &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Apps/Build/Manifest&quot;&gt;manifest&lt;/a&gt;:</source>
          <target state="translated">アプリで音声認識を使用するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Apps/Build/Manifest&quot;&gt;マニフェストで&lt;/a&gt;次の権限を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7aea31a9a0b7441235395c3d44da7d21b574e19f" translate="yes" xml:space="preserve">
          <source>To use the blend function, you first have to activate blending with &lt;a href=&quot;enable&quot;&gt;&lt;code&gt;WebGLRenderingContext.enable()&lt;/code&gt;&lt;/a&gt; with the argument &lt;code&gt;gl.BLEND&lt;/code&gt;.</source>
          <target state="translated">ブレンド機能を使用するには、最初に&lt;a href=&quot;enable&quot;&gt; &lt;code&gt;WebGLRenderingContext.enable()&lt;/code&gt; &lt;/a&gt;を引数 &lt;code&gt;gl.BLEND&lt;/code&gt; で使用してブレンドをアクティブにする必要があります。</target>
        </trans-unit>
        <trans-unit id="dcbd366cc47f0b9a8a1e56df4dae1c74348ee6e0" translate="yes" xml:space="preserve">
          <source>To use this code we call it like this</source>
          <target state="translated">このコードを使用するには、次のように呼び出します。</target>
        </trans-unit>
        <trans-unit id="4614d85595a75727de0cd2736801ef2ceb830d0f" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'accelerometer'&lt;/code&gt; device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このセンサーを使用するには、ユーザーは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt; &lt;code&gt;Permissions&lt;/code&gt; &lt;/a&gt; APIを介して &lt;code&gt;'accelerometer'&lt;/code&gt; デバイスセンサーに権限を付与する必要があります。</target>
        </trans-unit>
        <trans-unit id="c92b16033087cc1cf3da48812d30a99d45098cd4" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'accelerometer'&lt;/code&gt;, &lt;code&gt;'gyroscope'&lt;/code&gt;, and &lt;code&gt;'megnetometer'&lt;/code&gt; device sensors through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このセンサーを使用するには、ユーザーは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt; &lt;code&gt;Permissions&lt;/code&gt; &lt;/a&gt; APIを介して、 &lt;code&gt;'accelerometer'&lt;/code&gt; 、 &lt;code&gt;'gyroscope'&lt;/code&gt; 、および &lt;code&gt;'megnetometer'&lt;/code&gt; デバイスセンサーに権限を付与する必要があります。</target>
        </trans-unit>
        <trans-unit id="87695787d6ee339a7e181ba69ec9096cca759f4e" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'accelerometer'&lt;/code&gt;, and &lt;code&gt;'gyroscope'&lt;/code&gt; device sensors through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このセンサーを使用するには、ユーザーは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt; &lt;code&gt;Permissions&lt;/code&gt; &lt;/a&gt; APIを介して &lt;code&gt;'accelerometer'&lt;/code&gt; および &lt;code&gt;'gyroscope'&lt;/code&gt; デバイスセンサーに権限を付与する必要があります。</target>
        </trans-unit>
        <trans-unit id="20fd726ab6b0634f72898eba2f36d5c956a3d043" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'accelerometer'&lt;/code&gt;, device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このセンサーを使用するには、ユーザーは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt; &lt;code&gt;Permissions&lt;/code&gt; &lt;/a&gt; APIを介して &lt;code&gt;'accelerometer'&lt;/code&gt; デバイスセンサーに権限を付与する必要があります。</target>
        </trans-unit>
        <trans-unit id="ce31bffcbaf934c909db32593c32c7f320f86d89" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'ambient-light-sensor'&lt;/code&gt; device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このセンサーを使用するには、ユーザーは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt; &lt;code&gt;Permissions&lt;/code&gt; &lt;/a&gt; APIを介して &lt;code&gt;'ambient-light-sensor'&lt;/code&gt; デバイスセンサーに権限を付与する必要があります。</target>
        </trans-unit>
        <trans-unit id="9d6e0cba536c3045c849e00d7f22c99588f22134" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'gyroscope'&lt;/code&gt; device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このセンサーを使用するには、ユーザーは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt; &lt;code&gt;Permissions&lt;/code&gt; &lt;/a&gt; APIを介して &lt;code&gt;'gyroscope'&lt;/code&gt; デバイスセンサーに権限を付与する必要があります。</target>
        </trans-unit>
        <trans-unit id="4099d707131c09332fd720875d572de1d79051ed" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'magnetometer'&lt;/code&gt; device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このセンサーを使用するには、ユーザーは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt; &lt;code&gt;Permissions&lt;/code&gt; &lt;/a&gt; APIを介して &lt;code&gt;'magnetometer'&lt;/code&gt; デバイスセンサーに権限を付与する必要があります。</target>
        </trans-unit>
        <trans-unit id="b148ee28d544c32d3021d682fdf2b515b8c83f96" translate="yes" xml:space="preserve">
          <source>To visualise it, we will be making our audio graph look like this:</source>
          <target state="translated">それを可視化するために、オーディオグラフを次のようにします。</target>
        </trans-unit>
        <trans-unit id="68547179aa8e0fd6a2568e40c1f3b165f47c0651" translate="yes" xml:space="preserve">
          <source>Today, most Web content is designed for keyboard and mouse input. However, devices with touch screens (especially portable devices) are mainstream and Web applications can either directly process touch-based input by using &lt;a href=&quot;../touch_events&quot;&gt;&lt;code&gt;Touch Events&lt;/code&gt;&lt;/a&gt; or the application can use &lt;em&gt;interpreted mouse events&lt;/em&gt; for the application input. A disadvantage to using mouse events is that they do not support concurrent user input, whereas touch events support multiple simultaneous inputs (possibly at different locations on the touch surface), thus enhancing user experiences.</source>
          <target state="translated">現在、ほとんどのWebコンテンツはキーボードとマウスの入力用に設計されています。ただし、タッチスクリーンを備えたデバイス（特にポータブルデバイス）が主流であり、Webアプリケーションは&lt;a href=&quot;../touch_events&quot;&gt; &lt;code&gt;Touch Events&lt;/code&gt; &lt;/a&gt;を使用してタッチベースの入力を直接処理するか、アプリケーションはアプリケーション入力に&lt;em&gt;解釈されたマウスイベント&lt;/em&gt;を使用できます。マウスイベントを使用することの欠点は、同時ユーザー入力をサポートしないのに対し、タッチイベントは複数の同時入力をサポートする可能性があるため（おそらくタッチサーフェスの異なる場所で）、ユーザーエクスペリエンスが向上します。</target>
        </trans-unit>
        <trans-unit id="c12913bb7938478c59b0408b4f10565c0ca5f5c7" translate="yes" xml:space="preserve">
          <source>Together, these interfaces define a relatively low-level set of features, yet they support many kinds of touch-based interaction, including the familiar multi-touch gestures such as multi-finger swipe, rotation, pinch and zoom.</source>
          <target state="translated">これらのインターフェイスを合わせると、これらのインターフェイスは比較的低レベルの機能セットを定義していますが、マルチフィンガースワイプ、回転、ピンチ、ズームなどのおなじみのマルチタッチジェスチャーを含む、多くの種類のタッチベースのインタラクションをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d6dd7a7ec43eaf3f69a48ade343f0111282c6418" translate="yes" xml:space="preserve">
          <source>Toggle a boolean attribute (removing it if it is present and adding it if it is not present) on the specified element.</source>
          <target state="translated">指定された要素のboolean属性(存在する場合は削除し、存在しない場合は追加)をトグルします。</target>
        </trans-unit>
        <trans-unit id="d665e21552450152c70cb783492f879745837aa5" translate="yes" xml:space="preserve">
          <source>Toggles &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt;subscript&lt;/a&gt; on/off for the selection or at the insertion point.</source>
          <target state="translated">選択範囲または挿入ポイントで&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt;下付き文字の&lt;/a&gt;オン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="2880cd57d785f44f6522dadc8479e47e146d8cd2" translate="yes" xml:space="preserve">
          <source>Toggles &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt;superscript&lt;/a&gt; on/off for the selection or at the insertion point.</source>
          <target state="translated">選択範囲または挿入ポイントの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt;上付き文字の&lt;/a&gt;オン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="9188981accf009343887b80095c80c422f420980" translate="yes" xml:space="preserve">
          <source>Toggles &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u&quot;&gt;underline&lt;/a&gt; on/off for the selection or at the insertion point.</source>
          <target state="translated">選択範囲または挿入ポイントの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u&quot;&gt;下線の&lt;/a&gt;オン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="39b3f36a6b5484486fe08b1da906125a89307866" translate="yes" xml:space="preserve">
          <source>Toggles a boolean attribute, removing it if it is present and adding it if it is not present, on the specified element.</source>
          <target state="translated">指定された要素にブール属性をトグルし、存在する場合は削除し、存在しない場合は追加します。</target>
        </trans-unit>
        <trans-unit id="4bf861c2829dd6f5666a863a5e44df1044f20a49" translate="yes" xml:space="preserve">
          <source>Toggles a user's ability to resize a window.</source>
          <target state="translated">ユーザーがウィンドウのサイズを変更できるかどうかをトグルします。</target>
        </trans-unit>
        <trans-unit id="c95aa48a5ace3fb5e42cf0bc6497304898f9d5e7" translate="yes" xml:space="preserve">
          <source>Toggles bold on/off for the selection or at the insertion point. Internet Explorer uses the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong&quot;&gt;&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;&lt;/a&gt; tag instead of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">選択範囲または挿入ポイントの太字のオン/オフを切り替えます。Internet Explorerは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt; &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong&quot;&gt; &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; &lt;/a&gt;タグを使用します。</target>
        </trans-unit>
        <trans-unit id="46907049cae3cb64f14f909b9d8cb6f1e23c8665" translate="yes" xml:space="preserve">
          <source>Toggles italics on/off for the selection or at the insertion point. (Internet Explorer uses the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em&quot;&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;&lt;/a&gt; element instead of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt;&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">選択範囲または挿入ポイントの斜体のオン/オフを切り替えます。（Internet Explorerは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt; &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em&quot;&gt; &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を使用します。）</target>
        </trans-unit>
        <trans-unit id="b4a19287ba4a0318c4bd6815ed34a7e7784a2c71" translate="yes" xml:space="preserve">
          <source>Toggles strikethrough on/off for the selection or at the insertion point.</source>
          <target state="translated">選択範囲または挿入点でのストライクスルーのオン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="42ee950ae4004ded951381fd795ce1fe5329f240" translate="yes" xml:space="preserve">
          <source>Toggles the use of HTML tags or CSS for the generated markup. Requires a boolean true/false as a value argument.</source>
          <target state="translated">生成されたマークアップにHTMLタグやCSSを使用するかどうかを切り替えます。値の引数に真偽を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="30b5a3685c61c0b354a58f56d002d673c947a823" translate="yes" xml:space="preserve">
          <source>Toggling a checkbox is the default action of clicking on a checkbox. This example demonstrates how to prevent that from happening:</source>
          <target state="translated">チェックボックスをトグルすることは、チェックボックスをクリックするというデフォルトのアクションです。この例では、それを防ぐ方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ef407e3d969f67ce1511804512f04a02f39c7022" translate="yes" xml:space="preserve">
          <source>Toggling full-screen mode</source>
          <target state="translated">フルスクリーンモードの切り替え</target>
        </trans-unit>
        <trans-unit id="0f6144246a4a4bbbdbaf6a9da94f17b6748eb9d9" translate="yes" xml:space="preserve">
          <source>Toggling fullscreen mode</source>
          <target state="translated">フルスクリーンモードの切り替え</target>
        </trans-unit>
        <trans-unit id="c523912118f2e7f7decafc13dbfdfa845a88e751" translate="yes" xml:space="preserve">
          <source>Toggling the box to &lt;code&gt;display: none&lt;/code&gt; has the effect of aborting its animation. In browsers that support &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationcancel&quot;&gt;animationcancel&lt;/a&gt;&lt;/code&gt;, the event is fired and this handler is called.</source>
          <target state="translated">ボックスを切り替えて &lt;code&gt;display: none&lt;/code&gt; アニメーションを中止する効果はありません。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationcancel&quot;&gt;animationcancel&lt;/a&gt;&lt;/code&gt; をサポートするブラウザーでは、イベントが発生し、このハンドラーが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b23ae52a9535f042eb0f2fc4f568c693e1ca64f3" translate="yes" xml:space="preserve">
          <source>Toggling the oscillators on and off</source>
          <target state="translated">オシレータのオン/オフの切り替え</target>
        </trans-unit>
        <trans-unit id="de4027b599e3715ab06e5b5c177d78323cf90a49" translate="yes" xml:space="preserve">
          <source>TokenList</source>
          <target state="translated">TokenList</target>
        </trans-unit>
        <trans-unit id="2ef5807cd31460929be03b77fd98f235d9f37cc6" translate="yes" xml:space="preserve">
          <source>TokenList.add</source>
          <target state="translated">TokenList.add</target>
        </trans-unit>
        <trans-unit id="4367a109b895ad0b688bd75c64d5ecf84fe15b6e" translate="yes" xml:space="preserve">
          <source>TokenList.contains</source>
          <target state="translated">TokenList.contains</target>
        </trans-unit>
        <trans-unit id="74feff81c7e351ada2c16d174a3e51eee19f2f6e" translate="yes" xml:space="preserve">
          <source>TokenList.entries</source>
          <target state="translated">TokenList.entries</target>
        </trans-unit>
        <trans-unit id="6af7eb305defe2ece214c8f7d345efef6d527a4e" translate="yes" xml:space="preserve">
          <source>TokenList.forEach</source>
          <target state="translated">TokenList.forEach</target>
        </trans-unit>
        <trans-unit id="a12e72f48f7371840d0358088d81c8ca175b93de" translate="yes" xml:space="preserve">
          <source>TokenList.item</source>
          <target state="translated">TokenList.item</target>
        </trans-unit>
        <trans-unit id="dcaa8631c38d36e9b1cef4e81d3f6894ab48567e" translate="yes" xml:space="preserve">
          <source>TokenList.keys</source>
          <target state="translated">TokenList.keys</target>
        </trans-unit>
        <trans-unit id="6f60389483cb8d09217abb2decfdbcbab99da269" translate="yes" xml:space="preserve">
          <source>TokenList.length</source>
          <target state="translated">TokenList.length</target>
        </trans-unit>
        <trans-unit id="8446ecbe15cbe94d04e2d7920663ecb2fdad5708" translate="yes" xml:space="preserve">
          <source>TokenList.remove</source>
          <target state="translated">TokenList.remove</target>
        </trans-unit>
        <trans-unit id="9cec75b9b3214bb0f8d2738b62914c0ffc544e40" translate="yes" xml:space="preserve">
          <source>TokenList.replace</source>
          <target state="translated">TokenList.replace</target>
        </trans-unit>
        <trans-unit id="21b68f0d7cce0a832bd4838a84641f5627e2d70b" translate="yes" xml:space="preserve">
          <source>TokenList.supports</source>
          <target state="translated">TokenList.supports</target>
        </trans-unit>
        <trans-unit id="b7399a3cd9833e0d5912bbcbdf9fccb67518f17e" translate="yes" xml:space="preserve">
          <source>TokenList.toggle</source>
          <target state="translated">TokenList.toggle</target>
        </trans-unit>
        <trans-unit id="805828f4d00ac23665e28c591a4c36ffa00c1027" translate="yes" xml:space="preserve">
          <source>TokenList.value</source>
          <target state="translated">TokenList.value</target>
        </trans-unit>
        <trans-unit id="a19195005df2e647aea83bf1cc6604582f388a24" translate="yes" xml:space="preserve">
          <source>TokenList.values</source>
          <target state="translated">TokenList.values</target>
        </trans-unit>
        <trans-unit id="9dedab5f940c47ae97fa7819d8008f926343f184" translate="yes" xml:space="preserve">
          <source>Tone buffer format</source>
          <target state="translated">トーンバッファ形式</target>
        </trans-unit>
        <trans-unit id="7f4832bc3f64a7f0fb3a06cb261794cb29bbe7bb" translate="yes" xml:space="preserve">
          <source>Tone characters</source>
          <target state="translated">トーン文字</target>
        </trans-unit>
        <trans-unit id="9530de69fe7f9bc04e841ea13953c5ee55524530" translate="yes" xml:space="preserve">
          <source>Tones are removed from the string as they're played, so only upcoming tones are listed.</source>
          <target state="translated">音色は演奏されるごとに弦から削除されていくので、今後の音色だけがリストアップされます。</target>
        </trans-unit>
        <trans-unit id="1ecacfdd15d355a899016ed1d74abdb9443b6e16" translate="yes" xml:space="preserve">
          <source>Too many calls are being made on file resources.</source>
          <target state="translated">ファイルリソースでの呼び出しが多すぎます。</target>
        </trans-unit>
        <trans-unit id="550795febfde3e3a53917a8be8ca861192a54439" translate="yes" xml:space="preserve">
          <source>Too many file system calls are being made.</source>
          <target state="translated">ファイルシステムの呼び出しが多すぎます。</target>
        </trans-unit>
        <trans-unit id="05b3641bca3e0ed2d976d378a9ea4c00c546e4c1" translate="yes" xml:space="preserve">
          <source>Toolbar and chrome features</source>
          <target state="translated">ツールバーとクロームの機能</target>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="031e864e7f2ba31bc5a0c2c22fc6c517e14b0948" translate="yes" xml:space="preserve">
          <source>Tools required</source>
          <target state="translated">必要なツール</target>
        </trans-unit>
        <trans-unit id="7e13bd176f89a12f0b614b55ffc19c14515ef920" translate="yes" xml:space="preserve">
          <source>Topic</source>
          <target state="translated">Topic</target>
        </trans-unit>
        <trans-unit id="e3f139abb7a549a1210b36f7dbf89215ad6c9902" translate="yes" xml:space="preserve">
          <source>Touch</source>
          <target state="translated">Touch</target>
        </trans-unit>
        <trans-unit id="b14e29f39515ea1f3a91e9780bcd6fbd8bafd6c8" translate="yes" xml:space="preserve">
          <source>Touch APIs</source>
          <target state="translated">タッチAPI</target>
        </trans-unit>
        <trans-unit id="7d7f0884f833f751d0ef4b5804217e883199fbd5" translate="yes" xml:space="preserve">
          <source>Touch Events</source>
          <target state="translated">タッチイベント</target>
        </trans-unit>
        <trans-unit id="7f6bb5c95167c1aa69325ce8641aa1c1772d42f6" translate="yes" xml:space="preserve">
          <source>Touch Events &amp;ndash; Level 2</source>
          <target state="translated">タッチイベント&amp;ndash;レベル2</target>
        </trans-unit>
        <trans-unit id="7c933c72109654808a7cea8758815094e50964c7" translate="yes" xml:space="preserve">
          <source>Touch Events &amp;ndash; Level 2&lt;br/&gt;&lt;small&gt;The definition of 'Touch' in that specification.&lt;/small&gt;</source>
          <target state="translated">タッチイベント-レベル2 &lt;br/&gt;&lt;small&gt;その仕様における「タッチ」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="04711592ffe647f411128924e668a8ed994e2da2" translate="yes" xml:space="preserve">
          <source>Touch Events &amp;ndash; Level 2&lt;br/&gt;&lt;small&gt;The definition of 'TouchEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">タッチイベント&amp;ndash;レベル2 &lt;small&gt;その仕様における「&lt;/small&gt;タッチイベント&lt;br/&gt;&lt;small&gt;」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="45b3a316e82b0b2d90542f3babaf44fd8f8c9d82" translate="yes" xml:space="preserve">
          <source>Touch Events Community Group</source>
          <target state="translated">タッチイベントコミュニティグループ</target>
        </trans-unit>
        <trans-unit id="222b77c9b3b20db818a141ae8451f1f25981a38c" translate="yes" xml:space="preserve">
          <source>Touch Events Overview</source>
          <target state="translated">タッチイベントの概要</target>
        </trans-unit>
        <trans-unit id="175e73216c4cd99a74029743c4e012a8cd4e3594" translate="yes" xml:space="preserve">
          <source>Touch Events Standard</source>
          <target state="translated">タッチイベント標準</target>
        </trans-unit>
        <trans-unit id="0908e38701fada6dc5c5fba9dacc82f8d3946b77" translate="yes" xml:space="preserve">
          <source>Touch Events&lt;br/&gt;&lt;small&gt;The definition of 'Touch' in that specification.&lt;/small&gt;</source>
          <target state="translated">タッチイベント&lt;br/&gt;&lt;small&gt;その仕様における「タッチ」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a8d404080d1a129623d25c0e26646b60715dbe07" translate="yes" xml:space="preserve">
          <source>Touch Events&lt;br/&gt;&lt;small&gt;The definition of 'TouchEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">タッチイベント&lt;small&gt;その仕様における「&lt;/small&gt;タッチイベント」&lt;br/&gt;&lt;small&gt;の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d3bfc03e595b4991409bff71b8dcd3bf2b8109a7" translate="yes" xml:space="preserve">
          <source>Touch Events&lt;br/&gt;&lt;small&gt;The definition of 'pageX' in that specification.&lt;/small&gt;</source>
          <target state="translated">タッチイベント&lt;br/&gt;&lt;small&gt;その仕様における「pageX」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="687ca392db43683b8516eaea199f7362e9e6619d" translate="yes" xml:space="preserve">
          <source>Touch Events&lt;br/&gt;&lt;small&gt;The definition of 'pageY' in that specification.&lt;/small&gt;</source>
          <target state="translated">タッチイベント&lt;br/&gt;&lt;small&gt;その仕様における「pageY」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9406e482aec93fdd97db1a38d66cd81a273cd20f" translate="yes" xml:space="preserve">
          <source>Touch and Mouse (Together Again for the First Time)</source>
          <target state="translated">タッチとマウス(初めて一緒に再び</target>
        </trans-unit>
        <trans-unit id="342934d5a6d13f4a2dddde263e8a761f9b941225" translate="yes" xml:space="preserve">
          <source>Touch area</source>
          <target state="translated">タッチエリア</target>
        </trans-unit>
        <trans-unit id="8d132cef2ce764994d364780fd8bb33a5a585862" translate="yes" xml:space="preserve">
          <source>Touch devices may emulate buttons with configurable gestures (e.g. single touch for primary, two-finger touch for secondary, etc.)</source>
          <target state="translated">タッチデバイスは、設定可能なジェスチャーを持つボタンをエミュレートしてもよい(例えば、プライマリ用のシングルタッチ、セカンダリ用の2本指タッチなど)。</target>
        </trans-unit>
        <trans-unit id="48f4309a45d21882d82acf6909453b7f12078314" translate="yes" xml:space="preserve">
          <source>Touch end handler</source>
          <target state="translated">タッチエンドハンドラ</target>
        </trans-unit>
        <trans-unit id="1d464713c737731ded42efea6f6f96ab363c67c9" translate="yes" xml:space="preserve">
          <source>Touch event demonstrations:</source>
          <target state="translated">タッチイベントのデモンストレーション。</target>
        </trans-unit>
        <trans-unit id="64526145a8b1c98ea395d054605d20d38dcb11a6" translate="yes" xml:space="preserve">
          <source>Touch event types</source>
          <target state="translated">タッチイベントの種類</target>
        </trans-unit>
        <trans-unit id="8c5f50825b735c39b9b3d47ee8ac156da4920448" translate="yes" xml:space="preserve">
          <source>Touch events</source>
          <target state="translated">タッチイベント</target>
        </trans-unit>
        <trans-unit id="c8ae4be42b42900c33aefb78cba6c8c99ba0e874" translate="yes" xml:space="preserve">
          <source>Touch events are similar to mouse events except they support simultaneous touches and at different locations on the touch surface. The &lt;a href=&quot;touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; interface encapsulates all of the touch points that are currently active. The &lt;a href=&quot;touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; interface, which represents a single touch point, includes information such as the position of the touch point relative to the browser viewport.</source>
          <target state="translated">タッチイベントはマウスイベントに似ていますが、同時タッチをサポートし、タッチサーフェスのさまざまな場所でサポートする点が異なります。&lt;a href=&quot;touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;インタフェースは、現在アクティブなタッチポイントのすべてをカプセル化します。&lt;a href=&quot;touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;単一のタッチポイントを表すインターフェイスは、このようなブラウザビューポートに対するタッチポイントの位置などの情報を含みます。</target>
        </trans-unit>
        <trans-unit id="08337fdeecc366ada3f7e676c217e52378021f66" translate="yes" xml:space="preserve">
          <source>Touch events consist of three interfaces (&lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt;) and the following event types:</source>
          <target state="translated">タッチイベントは、3つのインターフェイス（&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; &lt;/a&gt;）と次のイベントタイプで構成されます。</target>
        </trans-unit>
        <trans-unit id="e534ec5d73bbebda144cdac9bd211973265e248a" translate="yes" xml:space="preserve">
          <source>Touch events support has been fixed and reenabled in Windows desktop platforms.</source>
          <target state="translated">Windows デスクトップ プラットフォームでタッチ イベントのサポートが修正され、再有効になりました。</target>
        </trans-unit>
        <trans-unit id="76a4f1d30ab6a480dc9e7eac898c5601db0369ff" translate="yes" xml:space="preserve">
          <source>Touch events.Multi-touch interaction</source>
          <target state="translated">タッチイベント.マルチタッチインタラクション</target>
        </trans-unit>
        <trans-unit id="fc5852fad8ac8fb4193668e913b1dfdf4e097223" translate="yes" xml:space="preserve">
          <source>Touch events.Supporting both TouchEvent and MouseEvent</source>
          <target state="translated">TouchEvent.TouchEventとMouseEventの両方をサポートしています。</target>
        </trans-unit>
        <trans-unit id="fb8472feae7a29d09d4a5b89f34bf4dfddc37139" translate="yes" xml:space="preserve">
          <source>Touch events.Using Touch Events</source>
          <target state="translated">タッチイベント.タッチイベントの使用</target>
        </trans-unit>
        <trans-unit id="57343f6fbea5934974263a3fbb448f3d640e0608" translate="yes" xml:space="preserve">
          <source>Touch move handler</source>
          <target state="translated">タッチムーブハンドラ</target>
        </trans-unit>
        <trans-unit id="3256230dc0cfa980839a5689c4dfcc867dd9fe9b" translate="yes" xml:space="preserve">
          <source>Touch point</source>
          <target state="translated">タッチポイント</target>
        </trans-unit>
        <trans-unit id="e5a23d377bdbdb4bba8d0512d9269cc8fb402469" translate="yes" xml:space="preserve">
          <source>Touch start handler</source>
          <target state="translated">タッチスタートハンドラ</target>
        </trans-unit>
        <trans-unit id="5aaf37bbbffb8a4eed008cdcc637a3eeac2fda87" translate="yes" xml:space="preserve">
          <source>Touch.clientX</source>
          <target state="translated">Touch.clientX</target>
        </trans-unit>
        <trans-unit id="7874aebc3575bf79615ac76603824ad526a86582" translate="yes" xml:space="preserve">
          <source>Touch.clientY</source>
          <target state="translated">Touch.clientY</target>
        </trans-unit>
        <trans-unit id="efc86848ffa1de1f0cba18b1786e625d6dc16cd5" translate="yes" xml:space="preserve">
          <source>Touch.constructor</source>
          <target state="translated">Touch.constructor</target>
        </trans-unit>
        <trans-unit id="f74ff42d6fa26ec6544c31ebf73ddb5da85aa18d" translate="yes" xml:space="preserve">
          <source>Touch.force</source>
          <target state="translated">Touch.force</target>
        </trans-unit>
        <trans-unit id="f637664e05dc3cdd9867628d8b5b8f35068b7a72" translate="yes" xml:space="preserve">
          <source>Touch.identifier</source>
          <target state="translated">Touch.identifier</target>
        </trans-unit>
        <trans-unit id="d7fc131458fb293a5a9d29bcfaea7e65b351ba6c" translate="yes" xml:space="preserve">
          <source>Touch.pageX</source>
          <target state="translated">Touch.pageX</target>
        </trans-unit>
        <trans-unit id="6cd84fe4349cc4ebd5ce83d75783f9cb040ca41e" translate="yes" xml:space="preserve">
          <source>Touch.pageY</source>
          <target state="translated">Touch.pageY</target>
        </trans-unit>
        <trans-unit id="44b99d2e604d4b453221dec7d70045cb0ceac761" translate="yes" xml:space="preserve">
          <source>Touch.radiusX</source>
          <target state="translated">Touch.radiusX</target>
        </trans-unit>
        <trans-unit id="32061b0c445fdf625ff8a304b5aa2a18ebabc920" translate="yes" xml:space="preserve">
          <source>Touch.radiusY</source>
          <target state="translated">Touch.radiusY</target>
        </trans-unit>
        <trans-unit id="818202d68aa383229ffa822f009a2c60ca1b5d21" translate="yes" xml:space="preserve">
          <source>Touch.rotationAngle</source>
          <target state="translated">Touch.rotationAngle</target>
        </trans-unit>
        <trans-unit id="882ffc71a8a1a66189ecf1aaabee4199d83d8ccb" translate="yes" xml:space="preserve">
          <source>Touch.screenX</source>
          <target state="translated">Touch.screenX</target>
        </trans-unit>
        <trans-unit id="12b28e4a04a9814c7e4661e6a54c64bbdfbc0dc2" translate="yes" xml:space="preserve">
          <source>Touch.screenY</source>
          <target state="translated">Touch.screenY</target>
        </trans-unit>
        <trans-unit id="db4e9215a239092b850a606ad0be969e4954ce0f" translate="yes" xml:space="preserve">
          <source>Touch.target</source>
          <target state="translated">Touch.target</target>
        </trans-unit>
        <trans-unit id="8643aec25ade5a0d63724773c4956c08030c122a" translate="yes" xml:space="preserve">
          <source>Touch/pointer tests and demos (by Patrick H. Lauke)</source>
          <target state="translated">タッチ/ポインタのテストとデモ (Patrick H.Lauke著)</target>
        </trans-unit>
        <trans-unit id="d8aae770176cc33b9a83f841d31fa9e867b51ec3" translate="yes" xml:space="preserve">
          <source>TouchEvent</source>
          <target state="translated">TouchEvent</target>
        </trans-unit>
        <trans-unit id="e944767755a98bf10e56e99c4bdcbe7208981d01" translate="yes" xml:space="preserve">
          <source>TouchEvent.altKey</source>
          <target state="translated">TouchEvent.altKey</target>
        </trans-unit>
        <trans-unit id="406538d8db3f7d99e482007d4c93c36bea8b5070" translate="yes" xml:space="preserve">
          <source>TouchEvent.changedTouches</source>
          <target state="translated">TouchEvent.changedTouches</target>
        </trans-unit>
        <trans-unit id="d78f1854f403fd253ca8f63909f8bb7b7a06582d" translate="yes" xml:space="preserve">
          <source>TouchEvent.constructor</source>
          <target state="translated">TouchEvent.constructor</target>
        </trans-unit>
        <trans-unit id="1f801541b8139e22f327e46857b8908191aaecd3" translate="yes" xml:space="preserve">
          <source>TouchEvent.ctrlKey</source>
          <target state="translated">TouchEvent.ctrlKey</target>
        </trans-unit>
        <trans-unit id="84ccda2eb4f36cc302c955a8e951bcd0b5fb3e51" translate="yes" xml:space="preserve">
          <source>TouchEvent.metaKey</source>
          <target state="translated">TouchEvent.metaKey</target>
        </trans-unit>
        <trans-unit id="f8220e539c2c49ded5823cc22c7458eb1a4f6664" translate="yes" xml:space="preserve">
          <source>TouchEvent.shiftKey</source>
          <target state="translated">TouchEvent.shiftKey</target>
        </trans-unit>
        <trans-unit id="9687246a4ce2b3b3cdfa86f1f36c7251a2e42c3c" translate="yes" xml:space="preserve">
          <source>TouchEvent.targetTouches</source>
          <target state="translated">TouchEvent.targetTouches</target>
        </trans-unit>
        <trans-unit id="888b90d2b2ad9d1d288afce9f1c4e52b41edf48b" translate="yes" xml:space="preserve">
          <source>TouchEvent.touches</source>
          <target state="translated">TouchEvent.touches</target>
        </trans-unit>
        <trans-unit id="1efa29eabe3ababde0e86df3b6d2edc46db3122e" translate="yes" xml:space="preserve">
          <source>TouchList</source>
          <target state="translated">TouchList</target>
        </trans-unit>
        <trans-unit id="d09156c9be1d15e3b0f97f436ce4d341cf874003" translate="yes" xml:space="preserve">
          <source>TouchList.identifiedTouch</source>
          <target state="translated">TouchList.identifiedTouch</target>
        </trans-unit>
        <trans-unit id="828555fb99c646a48753dd09eb5d5a5e30faf30c" translate="yes" xml:space="preserve">
          <source>TouchList.item</source>
          <target state="translated">TouchList.item</target>
        </trans-unit>
        <trans-unit id="a6c8c630f6f9b27921dbeed62fd88fab00646e43" translate="yes" xml:space="preserve">
          <source>TouchList.length</source>
          <target state="translated">TouchList.length</target>
        </trans-unit>
        <trans-unit id="61e018ef171edf625c05639a335988f8e5831284" translate="yes" xml:space="preserve">
          <source>Touches are represented by the &lt;a href=&quot;touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object; each touch is described by a position, size and shape, amount of pressure, and target element. Lists of touches are represented by &lt;a href=&quot;touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;はTouchオブジェクトによって表されます。各タッチは、位置、サイズと形状、圧力の量、およびターゲット要素によって記述されます。タッチのリストは、&lt;a href=&quot;touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; &lt;/a&gt;オブジェクトによって表されます。</target>
        </trans-unit>
        <trans-unit id="a4374d014c02cba8f25a4737b83b1e04a7e4cef8" translate="yes" xml:space="preserve">
          <source>Track constraints</source>
          <target state="translated">トラック制約</target>
        </trans-unit>
        <trans-unit id="dba3f1937b762e7df9bbe9be36a57551937f35b0" translate="yes" xml:space="preserve">
          <source>Track event types</source>
          <target state="translated">トラックイベントの種類</target>
        </trans-unit>
        <trans-unit id="89534f96950b83d6a11af93611d694742b3cbe91" translate="yes" xml:space="preserve">
          <source>Track.enabled</source>
          <target state="translated">Track.enabled</target>
        </trans-unit>
        <trans-unit id="df79bfde8865b2722b088c49820414f9fefc1525" translate="yes" xml:space="preserve">
          <source>Track.id</source>
          <target state="translated">Track.id</target>
        </trans-unit>
        <trans-unit id="b12c2ddb319a5ac000f654599334307327eb1072" translate="yes" xml:space="preserve">
          <source>Track.kind</source>
          <target state="translated">Track.kind</target>
        </trans-unit>
        <trans-unit id="7b270423ff5537ba0a86126a3284d8e35d6cb652" translate="yes" xml:space="preserve">
          <source>Track.label</source>
          <target state="translated">Track.label</target>
        </trans-unit>
        <trans-unit id="440adf6e847cf7e2f58b4f5499e0c2ae1dfcf09f" translate="yes" xml:space="preserve">
          <source>Track.language</source>
          <target state="translated">Track.language</target>
        </trans-unit>
        <trans-unit id="1e0729d4d78a6fa33e81521e2fe65e980de7dcea" translate="yes" xml:space="preserve">
          <source>Track.sourceBuffer</source>
          <target state="translated">Track.sourceBuffer</target>
        </trans-unit>
        <trans-unit id="79c69033d6c05e8e015f81f8b7dbd674b45b2061" translate="yes" xml:space="preserve">
          <source>TrackDefault</source>
          <target state="translated">TrackDefault</target>
        </trans-unit>
        <trans-unit id="1feb4891715d59a524a90b3a3f6756b54c225d40" translate="yes" xml:space="preserve">
          <source>TrackDefault.byteStreamTrackID</source>
          <target state="translated">TrackDefault.byteStreamTrackID</target>
        </trans-unit>
        <trans-unit id="707ffb7d1433ac27e4911682369ac52b7ca57764" translate="yes" xml:space="preserve">
          <source>TrackDefault.constructor</source>
          <target state="translated">TrackDefault.constructor</target>
        </trans-unit>
        <trans-unit id="91b666ee1bbcf1487d8eec4c478377f55378e5c0" translate="yes" xml:space="preserve">
          <source>TrackDefault.kinds</source>
          <target state="translated">TrackDefault.kinds</target>
        </trans-unit>
        <trans-unit id="dc678b0a004f369deb9e43fe2c7b86689be8bbd8" translate="yes" xml:space="preserve">
          <source>TrackDefault.label</source>
          <target state="translated">TrackDefault.label</target>
        </trans-unit>
        <trans-unit id="2bca754714cff2a09178b7b2ed6514fba9541dbf" translate="yes" xml:space="preserve">
          <source>TrackDefault.language</source>
          <target state="translated">TrackDefault.language</target>
        </trans-unit>
        <trans-unit id="f4be94057b120f6782daafd641425e8ca49938c3" translate="yes" xml:space="preserve">
          <source>TrackDefault.type</source>
          <target state="translated">TrackDefault.type</target>
        </trans-unit>
        <trans-unit id="5b3e9ff5cb5be3e26c1d82071e238ffea13c236a" translate="yes" xml:space="preserve">
          <source>TrackDefaultList</source>
          <target state="translated">TrackDefaultList</target>
        </trans-unit>
        <trans-unit id="a98dc1a2c93564708376cc35e97cb9aed8b976a2" translate="yes" xml:space="preserve">
          <source>TrackDefaultList.TrackDefault</source>
          <target state="translated">TrackDefaultList.TrackDefault</target>
        </trans-unit>
        <trans-unit id="5deb4cdcef9c95258804847bcc7e1700a2235676" translate="yes" xml:space="preserve">
          <source>TrackDefaultList.constructor</source>
          <target state="translated">TrackDefaultList.constructor</target>
        </trans-unit>
        <trans-unit id="b7ebf58a9327db0b3b98328c6303a667fcf826b8" translate="yes" xml:space="preserve">
          <source>TrackDefaultList.length</source>
          <target state="translated">TrackDefaultList.length</target>
        </trans-unit>
        <trans-unit id="0fc6a3ac8c37e40b48c4b11f6d349cfac90b907e" translate="yes" xml:space="preserve">
          <source>TrackEvent</source>
          <target state="translated">TrackEvent</target>
        </trans-unit>
        <trans-unit id="04dea882c48cc7b4fb53cde5ffaf56c611ee1ae6" translate="yes" xml:space="preserve">
          <source>TrackEvent.constructor</source>
          <target state="translated">TrackEvent.constructor</target>
        </trans-unit>
        <trans-unit id="12816886c62b1edac78d783c066d96074abbdfab" translate="yes" xml:space="preserve">
          <source>TrackEvent.track</source>
          <target state="translated">TrackEvent.track</target>
        </trans-unit>
        <trans-unit id="342182e3f652d4f8ce4d6e1887548996394450ae" translate="yes" xml:space="preserve">
          <source>TrackList</source>
          <target state="translated">TrackList</target>
        </trans-unit>
        <trans-unit id="5dc741478b35d9882bf78032ac8105ed7151c6bd" translate="yes" xml:space="preserve">
          <source>TrackList.getTrackById</source>
          <target state="translated">TrackList.getTrackById</target>
        </trans-unit>
        <trans-unit id="23bd7fe618cc2e232d559fd3cfca69e04af9dd25" translate="yes" xml:space="preserve">
          <source>TrackList.length</source>
          <target state="translated">TrackList.length</target>
        </trans-unit>
        <trans-unit id="d573baac75fe509faf5d83e404252b13bbd99203" translate="yes" xml:space="preserve">
          <source>TrackList.onaddtrack</source>
          <target state="translated">TrackList.onaddtrack</target>
        </trans-unit>
        <trans-unit id="e34de5665329a94a084fa4879423ad1ffb3e1e5a" translate="yes" xml:space="preserve">
          <source>TrackList.onchange</source>
          <target state="translated">TrackList.onchange</target>
        </trans-unit>
        <trans-unit id="ff22c173088c8c2c0c6fe52379330cf7dcd5438a" translate="yes" xml:space="preserve">
          <source>TrackList.onremovetrack</source>
          <target state="translated">TrackList.onremovetrack</target>
        </trans-unit>
        <trans-unit id="94184ad33c50e7d1245d19c1a72c5b2f32bfd254" translate="yes" xml:space="preserve">
          <source>Tracking Preference Expression (DNT)&lt;br/&gt;&lt;small&gt;The definition of 'Navigator.doNotTrack' in that specification.&lt;/small&gt;</source>
          <target state="translated">追跡設定式（DNT）&lt;br/&gt;&lt;small&gt;その仕様での「Navigator.doNotTrack」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d028b898c7534b5f2b7e7bc05705e6bcb432d52c" translate="yes" xml:space="preserve">
          <source>Tracking new touches</source>
          <target state="translated">新しいタッチのトラッキング</target>
        </trans-unit>
        <trans-unit id="e28c9c6f4d43e36c840596953fc0db0b71366691" translate="yes" xml:space="preserve">
          <source>Tracking other state changes</source>
          <target state="translated">他の状態変化を追跡する</target>
        </trans-unit>
        <trans-unit id="0b78df1cb5fee168ceb7408b0adbc0820a69f0f9" translate="yes" xml:space="preserve">
          <source>Tracks whose &lt;code&gt;kind&lt;/code&gt; is &lt;code&gt;&quot;chapters&quot;&lt;/code&gt; are used by the user agent or the Web site or Web app to construct and present an interface for navigating the named chapters, where each cue in the list represents a chapter in the media. The user can then navigate to the desired chapter, which begins at the cue's start position and ends at the cue's end position.</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; が &lt;code&gt;&quot;chapters&quot;&lt;/code&gt; トラックは、ユーザーエージェント、Webサイト、またはWebアプリが、名前付きチャプターをナビゲートするためのインターフェースを構築および表示するために使用されます。リストの各キューは、メディアのチャプターを表します。その後、ユーザーは目的のチャプターに移動できます。このチャプターは、キューの開始位置で始まり、キューの終了位置で終わります。</target>
        </trans-unit>
        <trans-unit id="6dd5a129cd11849c59cac0a605d612803499a5f4" translate="yes" xml:space="preserve">
          <source>Tracks whose &lt;code&gt;kind&lt;/code&gt; is &lt;code&gt;&quot;descriptions&quot;&lt;/code&gt; are presented in a non-visual form (for example, the text might be spoken to describe the action in the video).</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; が &lt;code&gt;&quot;descriptions&quot;&lt;/code&gt; トラックは、非視覚的な形式で提示されます（たとえば、ビデオでのアクションを説明するためにテキストが読み上げられる場合があります）。</target>
        </trans-unit>
        <trans-unit id="879f33f9a09ba119c8be02b62f97f23a603f0ae6" translate="yes" xml:space="preserve">
          <source>Tracks whose &lt;code&gt;kind&lt;/code&gt; is &lt;code&gt;&quot;subtitles&quot;&lt;/code&gt; or &lt;code&gt;&quot;captions&quot;&lt;/code&gt; are rendered with the cues overlaid over the top of the video.</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; が &lt;code&gt;&quot;subtitles&quot;&lt;/code&gt; または &lt;code&gt;&quot;captions&quot;&lt;/code&gt; トラックは、キューがビデオの上にオーバーレイされてレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="3e093df445938b16dd00baed49c9448edfe77c06" translate="yes" xml:space="preserve">
          <source>Traditionally, a web page has to send a request to the server to receive new data; that is, the page requests data from the server. With server-sent events, it's possible for a server to send new data to a web page at any time, by pushing messages to the web page. These incoming messages can be treated as &lt;em&gt;&lt;a href=&quot;event&quot;&gt;Events&lt;/a&gt; + data&lt;/em&gt; inside the web page.</source>
          <target state="translated">従来、Webページはサーバーにリクエストを送信して新しいデータを受信する必要がありました。つまり、ページはサーバーにデータを要求します。サーバー送信イベントでは、サーバーがWebページにメッセージをプッシュすることにより、いつでも新しいデータをWebページに送信できます。これらの着信メッセージは、Webページ内の&lt;em&gt;&lt;a href=&quot;event&quot;&gt;イベント&lt;/a&gt; +データ&lt;/em&gt;として扱うことができます。</target>
        </trans-unit>
        <trans-unit id="c2486f84c5b861352d61f706160850bb557ffcbd" translate="yes" xml:space="preserve">
          <source>Trailing effect</source>
          <target state="translated">トレイリング効果</target>
        </trans-unit>
        <trans-unit id="05e174a1314a69c3301026f4b704cbcd04575c9e" translate="yes" xml:space="preserve">
          <source>TransactionInactiveError</source>
          <target state="translated">TransactionInactiveError</target>
        </trans-unit>
        <trans-unit id="21143d6a433a742628dd0536a7c0932a26499db5" translate="yes" xml:space="preserve">
          <source>Transactions are expected to be short-lived, so the browser can terminate a transaction that takes too long, in order to free up storage resources that the long-running transaction has locked. You can abort the transaction, which rolls back the changes made to the database in the transaction. And you don't even have to wait for the transaction to start or be active to abort it.</source>
          <target state="translated">トランザクションは短命であることが予想されるため、ブラウザは長時間かかるトランザクションを終了させて、長時間のトランザクションがロックしているストレージリソースを解放することができます。トランザクションを中止すると、そのトランザクションでデータベースに加えられた変更がロールバックされます。また、トランザクションが開始されるのを待ったり、アクティブになったりする必要もありません。</target>
        </trans-unit>
        <trans-unit id="dfb010f608db3a7c56aa08c5cde2290778892495" translate="yes" xml:space="preserve">
          <source>Transactions can fail for a fixed number of reasons, all of which (except the user agent crash) will trigger an abort callback:</source>
          <target state="translated">トランザクションは、一定の数の理由で失敗することがありますが、(ユーザエージェントのクラッシュを除いて)そのすべてがアボートコールバックのトリガーとなります。</target>
        </trans-unit>
        <trans-unit id="8e33607b6c7584207183d2fe6a1ca79bd2949cf7" translate="yes" xml:space="preserve">
          <source>Transactions can have one of three modes:</source>
          <target state="translated">トランザクションは3つのモードのうちの1つを持つことができます。</target>
        </trans-unit>
        <trans-unit id="8ecf563e201590ffb502b26667f422fc4ffc61a8" translate="yes" xml:space="preserve">
          <source>Transactions can receive DOM events of three different types: &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;abort&lt;/code&gt;, and &lt;code&gt;complete&lt;/code&gt;. We've talked about the way that &lt;code&gt;error&lt;/code&gt; events bubble, so a transaction receives error events from any requests that are generated from it. A more subtle point here is that the default behavior of an error is to abort the transaction in which it occurred. Unless you handle the error by first calling &lt;code&gt;stopPropagation()&lt;/code&gt; on the error event then doing something else, the entire transaction is rolled back. This design forces you to think about and handle errors, but you can always add a catchall error handler to the database if fine-grained error handling is too cumbersome. If you don't handle an error event or if you call &lt;code&gt;abort()&lt;/code&gt; on the transaction, then the transaction is rolled back and an &lt;code&gt;abort&lt;/code&gt; event is fired on the transaction. Otherwise, after all pending requests have completed, you'll get a &lt;code&gt;complete&lt;/code&gt; event. If you're doing lots of database operations, then tracking the transaction rather than individual requests can certainly aid your sanity.</source>
          <target state="translated">トランザクションは、 &lt;code&gt;error&lt;/code&gt; 、 &lt;code&gt;abort&lt;/code&gt; 、および &lt;code&gt;complete&lt;/code&gt; の3つの異なるタイプのDOMイベントを受信できます。 &lt;code&gt;error&lt;/code&gt; イベントがバブルする方法について説明したので、トランザクションは、トランザクションから生成されたリクエストからエラーイベントを受け取ります。ここでさらに微妙な点は、エラーのデフォルトの動作は、エラーが発生したトランザクションを中止することです。最初にエラーイベントで &lt;code&gt;stopPropagation()&lt;/code&gt; を呼び出してからエラーを処理しない限り、トランザクション全体がロールバックされます。この設計では、エラーを考えて処理する必要がありますが、きめ細かなエラー処理が面倒すぎる場合は、いつでもキャッチオールエラーハンドラーをデータベースに追加できます。エラーイベントを処理しない場合、または &lt;code&gt;abort()&lt;/code&gt; トランザクションでabort（）を実行すると、トランザクションがロールバックされ、トランザクションで &lt;code&gt;abort&lt;/code&gt; イベントが発生します。それ以外の場合は、保留中のすべてのリクエストが完了した後で、 &lt;code&gt;complete&lt;/code&gt; イベントを取得します。多数のデータベース操作を行っている場合は、個々のリクエストではなくトランザクションを追跡することで、確実に正気を保つことができます。</target>
        </trans-unit>
        <trans-unit id="790a81471bf6a89f1916eb5e4b4517957afb5735" translate="yes" xml:space="preserve">
          <source>Transcoding assets for Media Source Extensions</source>
          <target state="translated">メディアソース拡張のためのトランスコードアセット</target>
        </trans-unit>
        <trans-unit id="3f490b887e6734b2e210cc6c8d54cf30866c44df" translate="yes" xml:space="preserve">
          <source>Transfer Example</source>
          <target state="translated">乗り換え例</target>
        </trans-unit>
        <trans-unit id="6990335dee7c8275a45849c6fbbf2d43ebf36e28" translate="yes" xml:space="preserve">
          <source>Transferable</source>
          <target state="translated">Transferable</target>
        </trans-unit>
        <trans-unit id="0f4d5e85d7c0f5e21a5ce36677cb13c7d4b33ca3" translate="yes" xml:space="preserve">
          <source>Transferable objects are instances of classes like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt; objects that can be transferred. &lt;code&gt;null&lt;/code&gt; is not an acceptable value for the &lt;code&gt;transferList&lt;/code&gt;.</source>
          <target state="translated">転送可能なオブジェクトは、転送可能な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../imagebitmap&quot;&gt; &lt;code&gt;ImageBitmap&lt;/code&gt; &lt;/a&gt;オブジェクトのようなクラスのインスタンスです。 &lt;code&gt;null&lt;/code&gt; は &lt;code&gt;transferList&lt;/code&gt; の許容値ではありません。</target>
        </trans-unit>
        <trans-unit id="4ca7f69675a92b8e6f43a844a302c0ffab84d3c0" translate="yes" xml:space="preserve">
          <source>Transferring data to and from workers: further details</source>
          <target state="translated">労働者との間でのデータの受け渡し:詳細</target>
        </trans-unit>
        <trans-unit id="c3dbe7dcac9681749eb25a26d7739db0e995430b" translate="yes" xml:space="preserve">
          <source>Transfers a block of pixels from the read framebuffer to the draw framebuffer.</source>
          <target state="translated">読み取りフレームバッファから描画フレームバッファにピクセルのブロックを転送します。</target>
        </trans-unit>
        <trans-unit id="0b9df50da33316d34131a64455decd232a3ef345" translate="yes" xml:space="preserve">
          <source>Transfers control to an &lt;a href=&quot;offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt; object, either on the main thread or on a worker.</source>
          <target state="translated">メインスレッドまたはワーカーのいずれかで、制御を&lt;a href=&quot;offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; &lt;/a&gt;オブジェクトに転送します。</target>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="6a9856096c60368521e3910fa7245abe1840d8ad" translate="yes" xml:space="preserve">
          <source>Transform feedback</source>
          <target state="translated">フィードバックを変換する</target>
        </trans-unit>
        <trans-unit id="1173e255e88366adefba4ee1730d700481cc010c" translate="yes" xml:space="preserve">
          <source>TransformFeedback</source>
          <target state="translated">TransformFeedback</target>
        </trans-unit>
        <trans-unit id="55d325e54a1b77a2d9bab311907575af5bbe0b5f" translate="yes" xml:space="preserve">
          <source>TransformList</source>
          <target state="translated">TransformList</target>
        </trans-unit>
        <trans-unit id="828fc86fafcb0a6bb874ecc5d1a87ecd174a9c2d" translate="yes" xml:space="preserve">
          <source>Transformable</source>
          <target state="translated">Transformable</target>
        </trans-unit>
        <trans-unit id="d685ad7c59aeb1945ef867b52857539b62c1b81c" translate="yes" xml:space="preserve">
          <source>Transformations</source>
          <target state="translated">Transformations</target>
        </trans-unit>
        <trans-unit id="52d1a600424e5f3b36ee484c67ed0543839ec74c" translate="yes" xml:space="preserve">
          <source>Transformed in a no-op</source>
          <target state="translated">ノーオペで変身</target>
        </trans-unit>
        <trans-unit id="0cef4df4d340703594fc301669e90430e959441b" translate="yes" xml:space="preserve">
          <source>Transforms</source>
          <target state="translated">Transforms</target>
        </trans-unit>
        <trans-unit id="c08c37d419de48ece33c64b69107c6a9b88565b6" translate="yes" xml:space="preserve">
          <source>TransitionEvent</source>
          <target state="translated">TransitionEvent</target>
        </trans-unit>
        <trans-unit id="50f4a4408dca665a93ae56363e719e8fcd608cde" translate="yes" xml:space="preserve">
          <source>TransitionEvent.animationName</source>
          <target state="translated">TransitionEvent.animationName</target>
        </trans-unit>
        <trans-unit id="92bcfb9957536730ce8fad1c5ca8335a024614e9" translate="yes" xml:space="preserve">
          <source>TransitionEvent.constructor</source>
          <target state="translated">TransitionEvent.constructor</target>
        </trans-unit>
        <trans-unit id="4a651e16b7cbb5f64cb88482cc2b1a2ff0ca830f" translate="yes" xml:space="preserve">
          <source>TransitionEvent.elapsedTime</source>
          <target state="translated">TransitionEvent.elapsedTime</target>
        </trans-unit>
        <trans-unit id="8a4b9623f8a931abb86ac03d731874dee756eddd" translate="yes" xml:space="preserve">
          <source>TransitionEvent.pseudoElement</source>
          <target state="translated">TransitionEvent.pseudoElement</target>
        </trans-unit>
        <trans-unit id="b8faf22691e70a6663401b85a31794bc53213abd" translate="yes" xml:space="preserve">
          <source>Translating</source>
          <target state="translated">Translating</target>
        </trans-unit>
        <trans-unit id="b7683b46d123f6956688dd85fb9aa92fc34ecc76" translate="yes" xml:space="preserve">
          <source>Translation matrix</source>
          <target state="translated">翻訳行列</target>
        </trans-unit>
        <trans-unit id="ace17e480781eb5360d5a6487fb60a6b50aa02b9" translate="yes" xml:space="preserve">
          <source>Transmission</source>
          <target state="translated">Transmission</target>
        </trans-unit>
        <trans-unit id="7cb338a916152e13525f9822a4d915c168c521f0" translate="yes" xml:space="preserve">
          <source>Transparency</source>
          <target state="translated">Transparency</target>
        </trans-unit>
        <trans-unit id="d21741d8a0d6a4fccc77f68923870aa0cbd107c5" translate="yes" xml:space="preserve">
          <source>Traveling through history</source>
          <target state="translated">歴史を旅する</target>
        </trans-unit>
        <trans-unit id="c5549ac8b888e22b01fa637b7351d8e5201d7fba" translate="yes" xml:space="preserve">
          <source>TreeWalker</source>
          <target state="translated">TreeWalker</target>
        </trans-unit>
        <trans-unit id="bf35db0e71c4392e73eb92a68400ecdfa3eb0c19" translate="yes" xml:space="preserve">
          <source>TreeWalker.currentNode</source>
          <target state="translated">TreeWalker.currentNode</target>
        </trans-unit>
        <trans-unit id="39f1953ddd36f66c2fff49400890a2b2db11f3d3" translate="yes" xml:space="preserve">
          <source>TreeWalker.expandEntityReferences</source>
          <target state="translated">TreeWalker.expandEntityReferences</target>
        </trans-unit>
        <trans-unit id="cc0cbba118d883f39f1286d327ddcb3233f7816f" translate="yes" xml:space="preserve">
          <source>TreeWalker.filter</source>
          <target state="translated">TreeWalker.filter</target>
        </trans-unit>
        <trans-unit id="7e124ae1ef3d4702f238e5bcc02b0a007d7f24f7" translate="yes" xml:space="preserve">
          <source>TreeWalker.firstChild</source>
          <target state="translated">TreeWalker.firstChild</target>
        </trans-unit>
        <trans-unit id="3062c36447f721b604a94e8f5a2498d8e84aca08" translate="yes" xml:space="preserve">
          <source>TreeWalker.lastChild</source>
          <target state="translated">TreeWalker.lastChild</target>
        </trans-unit>
        <trans-unit id="b3d37fe7647dfd7e07a2d85179d73fe9dd56b4bc" translate="yes" xml:space="preserve">
          <source>TreeWalker.nextNode</source>
          <target state="translated">TreeWalker.nextNode</target>
        </trans-unit>
        <trans-unit id="c5d1d71e150175bfac0194def72741a43e96b387" translate="yes" xml:space="preserve">
          <source>TreeWalker.nextSibling</source>
          <target state="translated">TreeWalker.nextSibling</target>
        </trans-unit>
        <trans-unit id="af9c63d4401f8ff81fd11cf868a2361322222864" translate="yes" xml:space="preserve">
          <source>TreeWalker.parentNode</source>
          <target state="translated">TreeWalker.parentNode</target>
        </trans-unit>
        <trans-unit id="9f508cc18b184cfcdddc14bcc9df63708bc96a9f" translate="yes" xml:space="preserve">
          <source>TreeWalker.previousNode</source>
          <target state="translated">TreeWalker.previousNode</target>
        </trans-unit>
        <trans-unit id="c56b50d62c5cdecc1e547619c0e300b4d2a3c586" translate="yes" xml:space="preserve">
          <source>TreeWalker.previousSibling</source>
          <target state="translated">TreeWalker.previousSibling</target>
        </trans-unit>
        <trans-unit id="680cc5e5985955c43317f12bcafcfec466d439a8" translate="yes" xml:space="preserve">
          <source>TreeWalker.root</source>
          <target state="translated">TreeWalker.root</target>
        </trans-unit>
        <trans-unit id="1edfba09aa24d620bb9d3a05949c90c4125356ea" translate="yes" xml:space="preserve">
          <source>TreeWalker.whatToShow</source>
          <target state="translated">TreeWalker.whatToShow</target>
        </trans-unit>
        <trans-unit id="028baf5701d48cdb13c738e6a131ab33745bc2ef" translate="yes" xml:space="preserve">
          <source>Triggered if something goes wrong with the notification; this is usually because the notification couldn't be displayed for some reason.</source>
          <target state="translated">通知に何か問題が発生した場合にトリガーされます;これは通常、何らかの理由で通知を表示できなかったためです。</target>
        </trans-unit>
        <trans-unit id="48dc61ad4f1c14804650d82ec1907bf9207ce3b6" translate="yes" xml:space="preserve">
          <source>Triggered once the notification is closed.</source>
          <target state="translated">通知が閉じられるとトリガーされます。</target>
        </trans-unit>
        <trans-unit id="3e2b98e0127654ba9e0cd5d100bbd01bb2cfbe22" translate="yes" xml:space="preserve">
          <source>Triggered when the notification is displayed to the user.</source>
          <target state="translated">ユーザーに通知が表示されたときにトリガーされます。</target>
        </trans-unit>
        <trans-unit id="0977860a8462a106dcea4f70423a441a4c78ea73" translate="yes" xml:space="preserve">
          <source>Triggered when the user clicks on the notification.</source>
          <target state="translated">ユーザーが通知をクリックしたときにトリガーされます。</target>
        </trans-unit>
        <trans-unit id="cfc83cecc8da65a85bb8cc18d5563935d5139dd9" translate="yes" xml:space="preserve">
          <source>Triggers a native browser interface to assist the user in completing the fields which have an &lt;a href=&quot;https://html.spec.whatwg.org/#autofill-field-name&quot;&gt;autofill field name&lt;/a&gt; value that is not &lt;code&gt;off&lt;/code&gt; or &lt;code&gt;on&lt;/code&gt;. The form will receive an event once the user has finished with the interface, the event will either be &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/autocomplete&quot;&gt;autocomplete&lt;/a&gt;&lt;/code&gt; when the fields have been filled or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/autocompleteerror&quot;&gt;autocompleteerror&lt;/a&gt;&lt;/code&gt; when there was a problem. &lt;strong&gt;This method has been removed from Chrome and Firefox &amp;mdash; see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1270740&quot;&gt;bug 1270740&lt;/a&gt; for background information on why.&lt;/strong&gt;</source>
          <target state="translated">ネイティブブラウザインターフェースをトリガーして、&lt;a href=&quot;https://html.spec.whatwg.org/#autofill-field-name&quot;&gt;自動入力フィールド名の&lt;/a&gt;値が &lt;code&gt;off&lt;/code&gt; も &lt;code&gt;on&lt;/code&gt; でもないフィールドをユーザーが入力できるようにします。ユーザーがインターフェースを使い終えると、フォームはイベントを受け取ります。イベントは、フィールドに入力したときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/autocomplete&quot;&gt;autocomplete&lt;/a&gt;&lt;/code&gt; になるか、問題があったときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/autocompleteerror&quot;&gt;autocompleteerror&lt;/a&gt;&lt;/code&gt; エラーになります。&lt;strong&gt;このメソッドはChromeとFirefoxから削除されました&amp;mdash; 理由に関する背景情報については、&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1270740&quot;&gt;バグ1270740&lt;/a&gt;を参照してください。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="774efc2aa71c54d89be666d5f2b42da4b148a7da" translate="yes" xml:space="preserve">
          <source>Trimming of whitespace and removal of duplicates</source>
          <target state="translated">空白のトリミングと重複の除去</target>
        </trans-unit>
        <trans-unit id="a615983c14f7aaa2046231aeeb0d5fb75859be0a" translate="yes" xml:space="preserve">
          <source>Try Again Later</source>
          <target state="translated">後でもう一度試してみてください</target>
        </trans-unit>
        <trans-unit id="2b4b46ef0c9f7c3021210cb26c958831b13f0e1f" translate="yes" xml:space="preserve">
          <source>Try creating a new box that is outside of clip space and bring it back in by dividing by w.</source>
          <target state="translated">クリップスペースの外にある新しいボックスを作成して、wで割って元に戻してみてください。</target>
        </trans-unit>
        <trans-unit id="2e43c5ee2d48668c49033d98cef4f58a3ec2d4a6" translate="yes" xml:space="preserve">
          <source>Try different ways to clear the canvas (&lt;a href=&quot;../../canvasrenderingcontext2d/clearrect&quot;&gt;&lt;code&gt;clearRect()&lt;/code&gt;&lt;/a&gt; vs. &lt;a href=&quot;../../canvasrenderingcontext2d/fillrect&quot;&gt;&lt;code&gt;fillRect()&lt;/code&gt;&lt;/a&gt; vs. resizing the canvas).</source>
          <target state="translated">キャンバスをクリアするさまざまな方法を試します（&lt;a href=&quot;../../canvasrenderingcontext2d/clearrect&quot;&gt; &lt;code&gt;clearRect()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../canvasrenderingcontext2d/fillrect&quot;&gt; &lt;code&gt;fillRect()&lt;/code&gt; と&lt;/a&gt;キャンバスのサイズ変更）。</target>
        </trans-unit>
        <trans-unit id="b5ef7b6b4b3ff809b3174b8c93efd7bdb6e8ae31" translate="yes" xml:space="preserve">
          <source>Try experimenting using the following two test cases:</source>
          <target state="translated">以下の2つのテストケースを使って実験してみてください。</target>
        </trans-unit>
        <trans-unit id="b00898fb02c5dff5d03e49152b0914d180f76386" translate="yes" xml:space="preserve">
          <source>Try it out</source>
          <target state="translated">試してみてください</target>
        </trans-unit>
        <trans-unit id="40d55f3fbeee80c3a84b47df59bba56d905cb4fb" translate="yes" xml:space="preserve">
          <source>Try moving it outside of clip space.</source>
          <target state="translated">クリップスペースの外に移動させてみてください。</target>
        </trans-unit>
        <trans-unit id="15d7234f8f051a167fce74d6d9648206449eae32" translate="yes" xml:space="preserve">
          <source>Try the results out below:</source>
          <target state="translated">以下の結果を試してみてください。</target>
        </trans-unit>
        <trans-unit id="22d0f1c2a49edf589c2904ccc62f1513a16d64c5" translate="yes" xml:space="preserve">
          <source>Try this out here:</source>
          <target state="translated">ここで試してみてください。</target>
        </trans-unit>
        <trans-unit id="ad1e4f0cbd799f33a6e6869afc4815fed3d8eacd" translate="yes" xml:space="preserve">
          <source>Try this sample</source>
          <target state="translated">このサンプルを試してみてください</target>
        </trans-unit>
        <trans-unit id="c497e2c988253665d7e10d4090ed732ec8c8270b" translate="yes" xml:space="preserve">
          <source>Trying to create an object store with a name that already exists (or trying to delete an object store with a name that does not already exist) will throw an error.</source>
          <target state="translated">既に存在する名前のオブジェクトストアを作成しようとすると(または、既に存在しない名前のオブジェクトストアを削除しようとすると)エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="066fc535d698f5b2b79a19bc190dd7046f76f5b0" translate="yes" xml:space="preserve">
          <source>Trying to understand the math behind the perspective matrix in WebGL</source>
          <target state="translated">WebGL の透視図行列の背後にある数学を理解しようとしています。</target>
        </trans-unit>
        <trans-unit id="89312b570934370536dbdaa838a59c4a004310d0" translate="yes" xml:space="preserve">
          <source>Turbulence types</source>
          <target state="translated">乱流の種類</target>
        </trans-unit>
        <trans-unit id="992ea581d183ee70d87d36fd1dd27d9ceb4be114" translate="yes" xml:space="preserve">
          <source>Turn off transparency</source>
          <target state="translated">透過性をオフにする</target>
        </trans-unit>
        <trans-unit id="011368f5bc560fdc5e2de979e44c198a75c3ca1f" translate="yes" xml:space="preserve">
          <source>Turn the &lt;a href=&quot;htmldocument&quot;&gt;&lt;code&gt;HTMLDocument&lt;/code&gt;&lt;/a&gt; interface into a &lt;code&gt;Document&lt;/code&gt; extension.</source>
          <target state="translated">ターン&lt;a href=&quot;htmldocument&quot;&gt; &lt;code&gt;HTMLDocument&lt;/code&gt; &lt;/a&gt;にインターフェイスを &lt;code&gt;Document&lt;/code&gt; の拡張子。</target>
        </trans-unit>
        <trans-unit id="e0fb4d91565d27e5626152fbb57d9d3bb1c76f03" translate="yes" xml:space="preserve">
          <source>Turn the &lt;code&gt;HTMLDocument&lt;/code&gt; interface into a &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; extension.</source>
          <target state="translated">ターン &lt;code&gt;HTMLDocument&lt;/code&gt; にインターフェイスを&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;の拡張子。</target>
        </trans-unit>
        <trans-unit id="fd10b31f9feee6967d1b4fc6b1a244b0bb1dbba4" translate="yes" xml:space="preserve">
          <source>Turns the path currently being built into the current clipping path.</source>
          <target state="translated">現在組み込まれているパスを現在のクリッピングパスに変換します。</target>
        </trans-unit>
        <trans-unit id="e8b9bc53b6f51a1cde0ac97ea7e00659792c5377" translate="yes" xml:space="preserve">
          <source>Tutorial on how to write a WebVTT file</source>
          <target state="translated">WebVTTファイルの書き方チュートリアル</target>
        </trans-unit>
        <trans-unit id="a6b26b6acd0a7323d701da66f3ee24465d7a6384" translate="yes" xml:space="preserve">
          <source>Tutorial: Websocket server in C#</source>
          <target state="translated">チュートリアル。C#でのWebsocketサーバー</target>
        </trans-unit>
        <trans-unit id="5dc60318610852097188de44a137232613ade6f6" translate="yes" xml:space="preserve">
          <source>Tutorial: Websocket server in VB.NET</source>
          <target state="translated">チュートリアル。VB.NETのWebsocketサーバー</target>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">Tutorials</target>
        </trans-unit>
        <trans-unit id="689b4a614cfb56259ad52bb3e14436f7789092cc" translate="yes" xml:space="preserve">
          <source>Tutorials &amp;amp; tools</source>
          <target state="translated">チュートリアルとツール</target>
        </trans-unit>
        <trans-unit id="e4adb1045be004ec1a8bb586601af1ccd1a67fbc" translate="yes" xml:space="preserve">
          <source>Tutorials and guides</source>
          <target state="translated">チュートリアルとガイド</target>
        </trans-unit>
        <trans-unit id="da543a264659022a64d46d08c8c0495117049689" translate="yes" xml:space="preserve">
          <source>Tutorials/guides</source>
          <target state="translated">Tutorials/guides</target>
        </trans-unit>
        <trans-unit id="5bc95dcd5ee87f137d41a5af92c816158239f74e" translate="yes" xml:space="preserve">
          <source>Two ICE servers are provided. One is a TURN server which can be accessed both over TURN and TURNS. The other is a STUN server. Any number of servers could be listed of any combination of types.</source>
          <target state="translated">ICEサーバーは2台用意されています。1つはTURNサーバーで、TURNとTURNSの両方にアクセスできます。もう一つはSTUNサーバーです。サーバーの数は、任意のタイプの組み合わせでリストアップすることができます。</target>
        </trans-unit>
        <trans-unit id="35736bdfc96240673f2f2d009785e3c574517f1f" translate="yes" xml:space="preserve">
          <source>Two exceptional CSS properties are:</source>
          <target state="translated">2つの例外的なCSSプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="8be069bcc39e4c3af03327c6b8a5bb8fa50bf39f" translate="yes" xml:space="preserve">
          <source>Two methods creating such an object: &lt;a href=&quot;window/location&quot;&gt;&lt;code&gt;Window.location&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;document/location&quot;&gt;&lt;code&gt;Document.location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このようなオブジェクトを作成する2つのメソッド：&lt;a href=&quot;window/location&quot;&gt; &lt;code&gt;Window.location&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;document/location&quot;&gt; &lt;code&gt;Document.location&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4840475e079d6e5a81cf16d81d404d9c855aab3" translate="yes" xml:space="preserve">
          <source>Two objects derive from it : &lt;a href=&quot;cssmediarule&quot;&gt;&lt;code&gt;CSSMediaRule&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;csssupportsrule&quot;&gt;&lt;code&gt;CSSSupportsRule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cssmediarule&quot;&gt; &lt;code&gt;CSSMediaRule&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;csssupportsrule&quot;&gt; &lt;code&gt;CSSSupportsRule&lt;/code&gt; の&lt;/a&gt; 2つのオブジェクトがそこから派生します。</target>
        </trans-unit>
        <trans-unit id="036e46db8022381a438af77c83017627f4223bcc" translate="yes" xml:space="preserve">
          <source>Two peers need to exchange ICE candidates to negotiate the actual connection between them. Every ICE candidate describes a method that the sending peer is able to use to communicate. Each peer sends candidates in the order they're discovered, and keeps sending candidates until it runs out of suggestions, even if media has already started streaming.</source>
          <target state="translated">2 つのピア間で実際の接続をネゴシエートするためには、ICE 候補を交換する必要があります。各ICE候補は、送信側のピアが通信に使用できる方法を記述する。各ピアは、発見された順に候補を送信し、メディアが既にストリーミングを開始していても、提案がなくなるまで候補を送信し続けます。</target>
        </trans-unit>
        <trans-unit id="57ccf65581306c87fe0cbfd2a45a9d821181538b" translate="yes" xml:space="preserve">
          <source>Two values are possible:</source>
          <target state="translated">2つの値が可能です。</target>
        </trans-unit>
        <trans-unit id="5568b7ab7b6ccf41a25e0b67bd5bd5ada42da479" translate="yes" xml:space="preserve">
          <source>Two-channel (red and green) signed format compression.</source>
          <target state="translated">2チャンネル(赤と緑)の符号付きフォーマット圧縮。</target>
        </trans-unit>
        <trans-unit id="fe49446564c5c3bdf8a4fa56a7a3a95d630ca53c" translate="yes" xml:space="preserve">
          <source>Two-channel (red and green) unsigned format compression.</source>
          <target state="translated">2チャンネル(赤と緑)の符号なしフォーマット圧縮。</target>
        </trans-unit>
        <trans-unit id="d74103798f0e2a785683c4aa0060f82273226a78" translate="yes" xml:space="preserve">
          <source>Tying it all together is the JavaScript to draw our framed images:</source>
          <target state="translated">それをすべて結びつけるのが、額装した画像を描くためのJavaScriptです。</target>
        </trans-unit>
        <trans-unit id="1d95dea7d1bea328045bdc7a3b6102ae0cc9655e" translate="yes" xml:space="preserve">
          <source>Tying it together with JavaScript</source>
          <target state="translated">JavaScriptとの連携</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="daf531ae2d8315b52c3cf6d6ccd4ce800f697e06" translate="yes" xml:space="preserve">
          <source>Type constants</source>
          <target state="translated">型定数</target>
        </trans-unit>
        <trans-unit id="fb066f4dbec4943be8cbab5c19aee54a31d25541" translate="yes" xml:space="preserve">
          <source>Type of endings on the end of lines. Possible values: &lt;code&gt;butt&lt;/code&gt; (default), &lt;code&gt;round&lt;/code&gt;, &lt;code&gt;square&lt;/code&gt;.</source>
          <target state="translated">行末のエンディングのタイプ。可能な値： &lt;code&gt;butt&lt;/code&gt; （デフォルト）、 &lt;code&gt;round&lt;/code&gt; 、 &lt;code&gt;square&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="516cd49c0949d15c59a96628ad9db1debfa28ba3" translate="yes" xml:space="preserve">
          <source>Type of name property</source>
          <target state="translated">名前のプロパティの種類</target>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="0e3ced9152ebb319d31f440c27bb52b32c3d74e3" translate="yes" xml:space="preserve">
          <source>Typed Arrays</source>
          <target state="translated">型付き配列</target>
        </trans-unit>
        <trans-unit id="831e06c03f1dd990a2ed633ba22453d03ef9310d" translate="yes" xml:space="preserve">
          <source>Typed arrays</source>
          <target state="translated">型付き配列</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="be636d8dd01501b42d61fa41d7f9873c30e59ff3" translate="yes" xml:space="preserve">
          <source>Types of controller</source>
          <target state="translated">コントローラの種類</target>
        </trans-unit>
        <trans-unit id="86497d8e5d5c70024f42d5eb513892a1f0b66b50" translate="yes" xml:space="preserve">
          <source>Types of events available: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events&quot;&gt;Event reference&lt;/a&gt;</source>
          <target state="translated">使用可能なイベントのタイプ：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events&quot;&gt;イベントリファレンス&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0072eeee487a0a1498edca0d0ba21b3cefa664f7" translate="yes" xml:space="preserve">
          <source>Types of requests</source>
          <target state="translated">ご要望の種類</target>
        </trans-unit>
        <trans-unit id="e9d1766d90a76bcdce41947f6333dfc6a9c5066c" translate="yes" xml:space="preserve">
          <source>Typical use of this can be to prevent the download of some assets when the document is solely prerendered, or stop some activities when the document is in the background or minimized.</source>
          <target state="translated">代表的な使用方法としては、ドキュメントが単独でprerenderされている場合に一部のアセットのダウンロードを防止したり、ドキュメントがバックグラウンドにある場合や最小化されている場合に一部のアクティビティを停止させたりすることができます。</target>
        </trans-unit>
        <trans-unit id="e0c23c51bc2fbd3903bf999e0db471d46339319c" translate="yes" xml:space="preserve">
          <source>Typically a user can press the tab key to move the focus around the page among focusable elements, and use the space bar to activate one (that is, to press a button or toggle a radio button). Which elements are focusable varies depending on the platform and the browser's current configuration. For example, on macOS systems, elements that aren't text input elements are not typically focusable by default.</source>
          <target state="translated">通常、ユーザーはタブキーを押してフォーカス可能な要素の間でページの周りを移動し、スペースバーを使って1つの要素を有効にします(つまり、ボタンを押したり、ラジオボタンをトグルしたりします)。フォーカス可能な要素は、プラットフォームとブラウザの現在の設定によって異なります。たとえば、macOS システムでは、テキスト入力要素ではない要素は、通常、デフォルトではフォーカス可能ではありません。</target>
        </trans-unit>
        <trans-unit id="1e7e03eb133bc345d5cc96a7af12f5f46fbf7fdd" translate="yes" xml:space="preserve">
          <source>Typically you will use this by calling &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;show()&lt;/code&gt;&lt;/a&gt;, then entering a loop or recursive function that checks the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; for errors or other reasons to retry the payment request. If a retry is needed, the loop calls &lt;code&gt;retry()&lt;/code&gt;, then loops back to check the response when it comes in. The loop exits only when the user either cancels the payment request or the request is successful.</source>
          <target state="translated">通常、これを使用するには、&lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;show()&lt;/code&gt; を&lt;/a&gt;呼び出し、ループまたは再帰関数に入り、&lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt;でエラーやその他の理由をチェックして、支払い要求を再試行します。再試行が必要な場合、ループは &lt;code&gt;retry()&lt;/code&gt; を呼び出し、ループバックして応答が返されたときにチェックします。ループは、ユーザーが支払い要求をキャンセルするか、要求が成功した場合にのみ終了します。</target>
        </trans-unit>
        <trans-unit id="f81a49b7a0477c3cd93f4b56d3f17cb13af6722f" translate="yes" xml:space="preserve">
          <source>Typically, &lt;code&gt;offsetHeight&lt;/code&gt; is a measurement in pixels of the element's CSS height, including any borders, padding, and horizontal scrollbars (if rendered). It does not include the height of pseudo-elements such as &lt;code&gt;::before&lt;/code&gt; or &lt;code&gt;::after&lt;/code&gt;. For the document body object, the measurement includes total linear content height instead of the element's CSS height. Floated elements extending below other linear content are ignored.</source>
          <target state="translated">通常、 &lt;code&gt;offsetHeight&lt;/code&gt; は、境界線、パディング、水平スクロールバー（レンダリングされている場合）を含む、要素のCSS高さのピクセル単位の測定です。 &lt;code&gt;::before&lt;/code&gt; や &lt;code&gt;::after&lt;/code&gt; などの疑似要素の高さは含まれません。ドキュメントボディオブジェクトの場合、測定値には、要素のCSSの高さではなく、線形コンテンツの合計の高さが含まれます。他の線形コンテンツの下に伸びる浮動要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="c0847a760c28159454f07b07606e7e0f599947f5" translate="yes" xml:space="preserve">
          <source>Typically, &lt;code&gt;offsetWidth&lt;/code&gt; is a measurement in pixels of the element's CSS width, including any borders, padding, and vertical scrollbars (if rendered). It does not include the width of pseudo-elements such as &lt;code&gt;::before&lt;/code&gt; or &lt;code&gt;::after&lt;/code&gt;.</source>
          <target state="translated">通常、 &lt;code&gt;offsetWidth&lt;/code&gt; は、境界線、パディング、垂直スクロールバー（レンダリングされている場合）を含む、要素のCSS幅のピクセル単位の測定値です。 &lt;code&gt;::before&lt;/code&gt; や &lt;code&gt;::after&lt;/code&gt; などの疑似要素の幅は含まれません。</target>
        </trans-unit>
        <trans-unit id="a3efe190b09cd4b5fad57693520149076a4c3710" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;z&lt;/code&gt; value of 0 represents the plane of the screen. As the value increases, the point moves outward from the screen toward the user. As the value decreases, the point moves farther from the user, with negative values being behind the screen, receding into the distance.</source>
          <target state="translated">通常、0の &lt;code&gt;z&lt;/code&gt; 値は画面の平面を表します。値が大きくなると、ポイントは画面からユーザーに向かって外側に移動します。値が小さくなると、ポイントはユーザーからより遠くに移動し、負の値は画面の後ろにあり、遠くに後退します。</target>
        </trans-unit>
        <trans-unit id="5817fa27d4f0e4f090835267807042ea42ce350f" translate="yes" xml:space="preserve">
          <source>Typically, an application may want to perform some cleanup by deleting the file drag data. In this example, the drop event is passed along from drop handler to a custom function called removeDragData. If the browser supports the &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; interface, the list's &lt;a href=&quot;../datatransferitemlist/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method is used to delete the file drag data; otherwise the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../datatransfer/cleardata&quot;&gt;&lt;code&gt;clearData()&lt;/code&gt;&lt;/a&gt; method is used to delete the data.</source>
          <target state="translated">通常、アプリケーションは、ファイルドラッグデータを削除することにより、いくつかのクリーンアップを実行する必要があります。この例では、ドロップイベントは、ドロップハンドラーからremoveDragDataというカスタム関数に渡されます。ブラウザーが&lt;a href=&quot;../datatransferitemlist&quot;&gt; &lt;code&gt;DataTransferItemList&lt;/code&gt; &lt;/a&gt;インターフェイスをサポートしている場合、リストの&lt;a href=&quot;../datatransferitemlist/clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、ファイルのドラッグデータを削除します。それ以外の場合は、&lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../datatransfer/cleardata&quot;&gt; &lt;code&gt;clearData()&lt;/code&gt; &lt;/a&gt;メソッドを使用してデータを削除します。</target>
        </trans-unit>
        <trans-unit id="a34c0f40a39f5baaa3beda7b5230713cf974be50" translate="yes" xml:space="preserve">
          <source>Typically, an application will include a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event handler on the drop target element and that handler will turn off the browser's default drag behavior. To add this handler, you need to include a &lt;a href=&quot;../globaleventhandlers/ondragover&quot;&gt;&lt;code&gt;ondragover&lt;/code&gt;&lt;/a&gt; global event handler:</source>
          <target state="translated">通常、アプリケーションはドロップターゲット要素に &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; イベントハンドラーを組み込み、そのハンドラーはブラウザーのデフォルトのドラッグ動作をオフにします。このハンドラーを追加するには、&lt;a href=&quot;../globaleventhandlers/ondragover&quot;&gt; &lt;code&gt;ondragover&lt;/code&gt; &lt;/a&gt;グローバルイベントハンドラーを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="aab734e7bc04b28992976c40231afcabb8267353" translate="yes" xml:space="preserve">
          <source>Typically, it's best to use the &lt;a href=&quot;biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; interface to implement higher-order filters. There are several reasons why:</source>
          <target state="translated">通常、&lt;a href=&quot;biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; &lt;/a&gt;インターフェイスを使用して高次のフィルターを実装するのが最適です。理由はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="36887723d4f765c83544bdc8368c48f75d4855ac" translate="yes" xml:space="preserve">
          <source>Typically, system notifications refer to the operating system's standard notification mechanism: think for example of how a typical desktop system or mobile device broadcasts notifications.</source>
          <target state="translated">一般的に、システム通知はオペレーティングシステムの標準的な通知メカニズムを指します。</target>
        </trans-unit>
        <trans-unit id="ed4add5ff2b66e48dc8989f0b62c813958c6e3e6" translate="yes" xml:space="preserve">
          <source>Typically, you'll want to call &lt;a href=&quot;beginpath&quot;&gt;&lt;code&gt;beginPath()&lt;/code&gt;&lt;/a&gt; for each new thing you want to stroke. If you don't, the previous sub-paths will remain part of the current path, and get stroked every time you call the &lt;code&gt;stroke()&lt;/code&gt; method. In some cases, however, this may be the desired effect.</source>
          <target state="translated">通常、ストロークする新しい&lt;a href=&quot;beginpath&quot;&gt; &lt;code&gt;beginPath()&lt;/code&gt; &lt;/a&gt;を呼び出します。そうしないと、以前のサブパスは現在のパスの一部のままになり、 &lt;code&gt;stroke()&lt;/code&gt; メソッドを呼び出すたびにストロークされます。ただし、これが望ましい結果になる場合もあります。</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="6edac0870302e237e2e73c002de3c0382c642084" translate="yes" xml:space="preserve">
          <source>UDP Socket API</source>
          <target state="translated">UDPソケットAPI</target>
        </trans-unit>
        <trans-unit id="2bbfa391ceff01d7789b4d568e3da3e66aa8edf8" translate="yes" xml:space="preserve">
          <source>UDP candidate types</source>
          <target state="translated">典型的なUDP候補</target>
        </trans-unit>
        <trans-unit id="c5a6e8e2da3e59d898ccb9b8cef9733cb518ff5e" translate="yes" xml:space="preserve">
          <source>UDP candidates (candidates with their &lt;a href=&quot;../rtcicecandidate/protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;&quot;udp&quot;&lt;/code&gt;) can be one of these types:</source>
          <target state="translated">UDP候補（&lt;a href=&quot;../rtcicecandidate/protocol&quot;&gt; &lt;code&gt;protocol&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;&quot;udp&quot;&lt;/code&gt; に設定されている候補）は、次のいずれかのタイプです。</target>
        </trans-unit>
        <trans-unit id="0f8fe4b91a258395d82ce705eae35d1dba13e5d0" translate="yes" xml:space="preserve">
          <source>UI Events</source>
          <target state="translated">UIイベント</target>
        </trans-unit>
        <trans-unit id="c808f141e599f3d14a96733c6ce1f223d4d9a15b" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'CompositionEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">UIイベント&lt;br/&gt;&lt;small&gt;その仕様における「CompositionEvent」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4cc0c8e202eabc04dcdb0bc1d1e891ca64bf51d7" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">UIイベント&lt;br/&gt;&lt;small&gt;その仕様における「KeyboardEvent」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7eef0dfe67d5657b55b9b049bf2ee2c9cf2791b2" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">UIイベント&lt;br/&gt;&lt;small&gt;その仕様における「KeyboardEvent（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5119b1faf79ef3b4cf469c52b697d3adc84941ea" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.code' in that specification.&lt;/small&gt;</source>
          <target state="translated">UIイベント&lt;br/&gt;&lt;small&gt;その仕様における「KeyboardEvent.code」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4527ccf4bdf39d1dc1084bbdf4c74e4453091ee4" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'onauxclick' in that specification.&lt;/small&gt;</source>
          <target state="translated">UIイベント&lt;br/&gt;&lt;small&gt;その仕様における「onauxclick」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="625b7dd7073ee8026bd060750a7aa971dcfdef27" translate="yes" xml:space="preserve">
          <source>UI to start a call</source>
          <target state="translated">呼び出しを開始するためのUI</target>
        </trans-unit>
        <trans-unit id="0959f0369d82a9ae324c11ae7d6e3c44a23a38a1" translate="yes" xml:space="preserve">
          <source>UIEvent</source>
          <target state="translated">UIEvent</target>
        </trans-unit>
        <trans-unit id="c9eb0246ea3943a86fe88d600608856497c2d654" translate="yes" xml:space="preserve">
          <source>UIEvent.constructor</source>
          <target state="translated">UIEvent.constructor</target>
        </trans-unit>
        <trans-unit id="d07d7de5aedb24d1adcd473b94c2254fd9be5c2a" translate="yes" xml:space="preserve">
          <source>UIEvent.detail</source>
          <target state="translated">UIEvent.detail</target>
        </trans-unit>
        <trans-unit id="6f012f0c51a3920f0328105d4de2e50194b3afcc" translate="yes" xml:space="preserve">
          <source>UIEvent.isChar</source>
          <target state="translated">UIEvent.isChar</target>
        </trans-unit>
        <trans-unit id="cc7f08988b49041ffa88a7b63ddcd41bf21f09c0" translate="yes" xml:space="preserve">
          <source>UIEvent.pageX</source>
          <target state="translated">UIEvent.pageX</target>
        </trans-unit>
        <trans-unit id="3ca5ae77a5e68e9fb054c38b1e93995d468c6fd5" translate="yes" xml:space="preserve">
          <source>UIEvent.sourceCapabilities</source>
          <target state="translated">UIEvent.sourceCapabilities</target>
        </trans-unit>
        <trans-unit id="1521b7923697ed84ec9b9d929f75173fb369033e" translate="yes" xml:space="preserve">
          <source>UIEvent.view</source>
          <target state="translated">UIEvent.view</target>
        </trans-unit>
        <trans-unit id="8674c2ed6f313450c2d3e40f732a814e9ed967fa" translate="yes" xml:space="preserve">
          <source>UNSENT</source>
          <target state="translated">UNSENT</target>
        </trans-unit>
        <trans-unit id="c1ab27d7ff055a372d4c1c2c22b2c786eced0812" translate="yes" xml:space="preserve">
          <source>UNSIGNED_INT_24_8</source>
          <target state="translated">UNSIGNED_INT_24_8</target>
        </trans-unit>
        <trans-unit id="a1c2a9ec94ddda09d4f33a7816a8e70bab16df08" translate="yes" xml:space="preserve">
          <source>URIReference</source>
          <target state="translated">URIReference</target>
        </trans-unit>
        <trans-unit id="b84c7e7ee9bfd82438c0f5da1653f257ce3dfc4c" translate="yes" xml:space="preserve">
          <source>URIScheme</source>
          <target state="translated">URIScheme</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="7071fd1da846e67b9608ee076558e83da329661d" translate="yes" xml:space="preserve">
          <source>URL API</source>
          <target state="translated">ユーアールエルエーピーアイ</target>
        </trans-unit>
        <trans-unit id="fbd804562ddc94cc65e30bda0849d07fc6db3cff" translate="yes" xml:space="preserve">
          <source>URL is used to parse, construct, normalise, and encode URLs.</source>
          <target state="translated">URLは、URLのパース、構築、正規化、エンコードに使用されます。</target>
        </trans-unit>
        <trans-unit id="74073c3ed96dd233356d584ba146625cdcab4f8e" translate="yes" xml:space="preserve">
          <source>URL properties can be set to construct the URL:</source>
          <target state="translated">URLプロパティを設定してURLを構築することができます。</target>
        </trans-unit>
        <trans-unit id="db9a76ed3d6a56de9a83d463d9192e04c7c50926" translate="yes" xml:space="preserve">
          <source>URL related interfaces: &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;htmlhyperlinkelementutils&quot;&gt;&lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">URL関連のインターフェース：&lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;htmlhyperlinkelementutils&quot;&gt; &lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c815e2361c42a886201ee95053ca3e65e2639918" translate="yes" xml:space="preserve">
          <source>URL-based payment method identifiers</source>
          <target state="translated">URLベースの支払方法識別子</target>
        </trans-unit>
        <trans-unit id="54f542c3b81215d47a920d56fdf9dc377a4c521a" translate="yes" xml:space="preserve">
          <source>URL.constructor</source>
          <target state="translated">URL.constructor</target>
        </trans-unit>
        <trans-unit id="57d570b5ef179abe4b4dd92682f476d258433e0a" translate="yes" xml:space="preserve">
          <source>URL.createObjectURL</source>
          <target state="translated">URL.createObjectURL</target>
        </trans-unit>
        <trans-unit id="33ca04cc0d2c6d4f2056fd615139050a12ac4ca9" translate="yes" xml:space="preserve">
          <source>URL.origin</source>
          <target state="translated">URL.origin</target>
        </trans-unit>
        <trans-unit id="19189146654fc72efe5f8c458a29748af85becee" translate="yes" xml:space="preserve">
          <source>URL.revokeObjectURL</source>
          <target state="translated">URL.revokeObjectURL</target>
        </trans-unit>
        <trans-unit id="af23b0250642579a224f72cbef8c6217df83a143" translate="yes" xml:space="preserve">
          <source>URL.searchParams</source>
          <target state="translated">URL.searchParams</target>
        </trans-unit>
        <trans-unit id="8958d272d20c905be92b245548107902bd95427b" translate="yes" xml:space="preserve">
          <source>URL.toJSON</source>
          <target state="translated">URL.toJSON</target>
        </trans-unit>
        <trans-unit id="c0a054ba03bf557b827b680ed97a862e49ee420b" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'API' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「API」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b5a966ea64897158893086a882a248c2e24e0290" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URL.URL()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URL.URL（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f5dec90fc6d2cae03683de83b514cac4cf54e701" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URL.origin' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URL.origin」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="abc9cd2b9d01386af56346111adf7569ccc694f9" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLSearchParams' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLSearchParams」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="13960ee5ef7fe935ff9f843ecdd5d267d625cd6c" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ab66d94703c1e83e259eb68cd0c7a9c40400d44f" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.hash' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.hash」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2c2343775a2078fd63c4248ccf7c993128715d29" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.host' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.host」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0b6f3e96b817496da76c19744e452913eac6a531" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.hostname' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.hostname」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="28ecf75c760b2c33a031792171cb1bddd64018c8" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.href' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.href」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8029df2f4f70a4a0c0cbdf21779c86aa448eca29" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.origin' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.origin」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ea7795a1e61e0ba54dfca1bf6304cf4ee5ea2efc" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.pathname' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.pathname」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3854ebec7f668f6a34dccdf2b03634a021b8b379" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.port' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.port」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3b0d4589de8c11593f62a15705f4a55e2c2f4324" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.protocol' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.protocol」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="52e4e698bd9ad017104861acfe360fce2d44ca99" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'URLUtilsReadOnly.search' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「URLUtilsReadOnly.search」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5956f9040135d30284fa6ec16647e44bb5976c92" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'append()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「append（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4a81b5490148400e73ecc0e1917ae60953af867d" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「delete（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c6a6e1a722bc9baa54901bc3b77456b66c5b61a1" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「get（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cd978f35fec045ebff6bbaaa1f950fc3d3600a88" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'getAll()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「getAll（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5784a30a5156eb2532f01a7a56978963af805be5" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'has()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「has（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7b6f6fd6059420362d462d435e2cf99df441c3ad" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'searchParams' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「searchParams」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="228b27fbf9f58f1fa2cd6c27f3399e56aa9d27d1" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'set()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「set（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6b419ff33035f40d71b77ebac2460a740386f36d" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'sort()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「sort（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3514b8e803cb7355000edc67b818d86b1da2472e" translate="yes" xml:space="preserve">
          <source>URL&lt;br/&gt;&lt;small&gt;The definition of 'toJSON()' in that specification.&lt;/small&gt;</source>
          <target state="translated">URL &lt;br/&gt;&lt;small&gt;その仕様における「toJSON（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b19e8d66e7f004e226c44a75766dadab7d09911a" translate="yes" xml:space="preserve">
          <source>URLSearchParams</source>
          <target state="translated">URLSearchParams</target>
        </trans-unit>
        <trans-unit id="a872fe0e0f2b53f69ee965db07479866691fb1e9" translate="yes" xml:space="preserve">
          <source>URLSearchParams as parameter to send()</source>
          <target state="translated">URLSearchParams を send()のパラメータとして指定します。</target>
        </trans-unit>
        <trans-unit id="bf5706f0c75b2e6cb98059a83385fd621f68e042" translate="yes" xml:space="preserve">
          <source>URLSearchParams.append</source>
          <target state="translated">URLSearchParams.append</target>
        </trans-unit>
        <trans-unit id="ccc6a656301151047a8eb55b86b8f018427ac068" translate="yes" xml:space="preserve">
          <source>URLSearchParams.constructor</source>
          <target state="translated">URLSearchParams.constructor</target>
        </trans-unit>
        <trans-unit id="0c501a98aaf1a9144a7c8f8d9e1394b5abc6663f" translate="yes" xml:space="preserve">
          <source>URLSearchParams.delete</source>
          <target state="translated">URLSearchParams.delete</target>
        </trans-unit>
        <trans-unit id="aa2ef9d8fae4c7ea95af6375e401aa1803c891fc" translate="yes" xml:space="preserve">
          <source>URLSearchParams.entries</source>
          <target state="translated">URLSearchParams.entries</target>
        </trans-unit>
        <trans-unit id="048dbeb524bca21ce23299ae108f08cb7d3ee5e6" translate="yes" xml:space="preserve">
          <source>URLSearchParams.get</source>
          <target state="translated">URLSearchParams.get</target>
        </trans-unit>
        <trans-unit id="c2a57dcc013cc19d648b5645e551ed1f5c0925ca" translate="yes" xml:space="preserve">
          <source>URLSearchParams.getAll</source>
          <target state="translated">URLSearchParams.getAll</target>
        </trans-unit>
        <trans-unit id="de238990d870636c013db4dfb4a16cd411dcec62" translate="yes" xml:space="preserve">
          <source>URLSearchParams.has</source>
          <target state="translated">URLSearchParams.has</target>
        </trans-unit>
        <trans-unit id="4d071a38715f4762e0fb490363ff8c46cd7f960f" translate="yes" xml:space="preserve">
          <source>URLSearchParams.keys</source>
          <target state="translated">URLSearchParams.keys</target>
        </trans-unit>
        <trans-unit id="32f98ead8cf7b7c81ebcec0b1aabcf0b2d55438d" translate="yes" xml:space="preserve">
          <source>URLSearchParams.set</source>
          <target state="translated">URLSearchParams.set</target>
        </trans-unit>
        <trans-unit id="090d2a30de3dbf8c59f84293abed8b1bcea1e7da" translate="yes" xml:space="preserve">
          <source>URLSearchParams.sort</source>
          <target state="translated">URLSearchParams.sort</target>
        </trans-unit>
        <trans-unit id="f275b2e8d4c5e8df144758efb7a549169c7e2845" translate="yes" xml:space="preserve">
          <source>URLSearchParams.toString</source>
          <target state="translated">URLSearchParams.toString</target>
        </trans-unit>
        <trans-unit id="16c1b712d5f45136e9a929144bc3c75d60113b70" translate="yes" xml:space="preserve">
          <source>URLSearchParams.values</source>
          <target state="translated">URLSearchParams.values</target>
        </trans-unit>
        <trans-unit id="c4027ab459266cea2dd6641873f0f13a97a8c4af" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly</source>
          <target state="translated">URLUtilsReadOnly</target>
        </trans-unit>
        <trans-unit id="7b99bfa326a24a542b6fd23bf13b1d038321f6bd" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.hash</source>
          <target state="translated">URLUtilsReadOnly.hash</target>
        </trans-unit>
        <trans-unit id="d9c5f7bba9971e52915d0a7b2a891afa707bc1ed" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.host</source>
          <target state="translated">URLUtilsReadOnly.host</target>
        </trans-unit>
        <trans-unit id="b6dd16bccbaec422bb368e8f4d6477d46123b821" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.hostname</source>
          <target state="translated">URLUtilsReadOnly.hostname</target>
        </trans-unit>
        <trans-unit id="322fec8407b42fbf02f6dd1debe6fc49207dc2dd" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.href</source>
          <target state="translated">URLUtilsReadOnly.href</target>
        </trans-unit>
        <trans-unit id="949e7b45ce205701e149e5c2571d38780c1b011c" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.origin</source>
          <target state="translated">URLUtilsReadOnly.origin</target>
        </trans-unit>
        <trans-unit id="cece2178bb5fc5d6cb27ec46c25bc5cb5ac8f3ec" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.pathname</source>
          <target state="translated">URLUtilsReadOnly.pathname</target>
        </trans-unit>
        <trans-unit id="70b5eb13f43d6b7663d5ccab5e95b7dda78d3a51" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.port</source>
          <target state="translated">URLUtilsReadOnly.port</target>
        </trans-unit>
        <trans-unit id="9b2fb019e54a8bd1608fe6f212d117be58559e9a" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.protocol</source>
          <target state="translated">URLUtilsReadOnly.protocol</target>
        </trans-unit>
        <trans-unit id="3aec80776ba9bf49414910cc8f46f773044a541d" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.search</source>
          <target state="translated">URLUtilsReadOnly.search</target>
        </trans-unit>
        <trans-unit id="c041d59bc5c3dbdf9ecd279afd67b686f4e1dd07" translate="yes" xml:space="preserve">
          <source>URLUtilsReadOnly.toString</source>
          <target state="translated">URLUtilsReadOnly.toString</target>
        </trans-unit>
        <trans-unit id="6809f0101d2926ccfe2322345b181526b9612857" translate="yes" xml:space="preserve">
          <source>URLs may open inside an existing browsing context provided by a standalone web app</source>
          <target state="translated">URL は、スタンドアロンのウェブアプリが提供する既存のブラウジングコンテキスト内で開くことができます。</target>
        </trans-unit>
        <trans-unit id="e782af1394e3b148da417075468562908d72a84a" translate="yes" xml:space="preserve">
          <source>URLs will be encoded as per RFC 3986:</source>
          <target state="translated">URL は RFC 3986 に従ってエンコードされます。</target>
        </trans-unit>
        <trans-unit id="09716c44992b8bceefcd6d77921ff9ec06e2764d" translate="yes" xml:space="preserve">
          <source>USB</source>
          <target state="translated">USB</target>
        </trans-unit>
        <trans-unit id="bedd63da3f774e4e08eb0ff412b0af75cd867d0a" translate="yes" xml:space="preserve">
          <source>USB.getDevices</source>
          <target state="translated">USB.getDevices</target>
        </trans-unit>
        <trans-unit id="bf50fc76a6c3357d85d7758fc1a4de291434eb8a" translate="yes" xml:space="preserve">
          <source>USB.onconnect</source>
          <target state="translated">USB.onconnect</target>
        </trans-unit>
        <trans-unit id="7c27b6768e8259f1c53d7b1bc85d40d6a633a352" translate="yes" xml:space="preserve">
          <source>USB.ondisconnect</source>
          <target state="translated">USB.ondisconnect</target>
        </trans-unit>
        <trans-unit id="9fb0eaffc33d7e2fd28c31667a024bdbef495ddd" translate="yes" xml:space="preserve">
          <source>USB.requestDevice</source>
          <target state="translated">USB.requestDevice</target>
        </trans-unit>
        <trans-unit id="1e32aefb4d9edcd47079fb7b758a99d0e17797cf" translate="yes" xml:space="preserve">
          <source>USBDevice</source>
          <target state="translated">USBDevice</target>
        </trans-unit>
        <trans-unit id="ded448766056f332ae39abaae98834935964262f" translate="yes" xml:space="preserve">
          <source>USBDevice.USBDevice.deviceClass</source>
          <target state="translated">USBDevice.USBDevice.deviceClass</target>
        </trans-unit>
        <trans-unit id="8b447d44c7b4b3c5a9e0c6869973b9808e28e67d" translate="yes" xml:space="preserve">
          <source>USBDevice.claimInterface</source>
          <target state="translated">USBDevice.claimInterface</target>
        </trans-unit>
        <trans-unit id="5cc1842b554831c17346eb740ee1b5cc7b2e6746" translate="yes" xml:space="preserve">
          <source>USBDevice.clearHalt</source>
          <target state="translated">USBDevice.clearHalt</target>
        </trans-unit>
        <trans-unit id="f3e03c4eb5e198a6c159ad35064de72cdf793303" translate="yes" xml:space="preserve">
          <source>USBDevice.close</source>
          <target state="translated">USBDevice.close</target>
        </trans-unit>
        <trans-unit id="80cc96e96a842127894ddca74f60b9107bb10bcd" translate="yes" xml:space="preserve">
          <source>USBDevice.configuration</source>
          <target state="translated">USBDevice.configuration</target>
        </trans-unit>
        <trans-unit id="3c70c931c04974bebe040d019fd07f275e72b10e" translate="yes" xml:space="preserve">
          <source>USBDevice.configurations</source>
          <target state="translated">USBDevice.configurations</target>
        </trans-unit>
        <trans-unit id="ce7ea1d16e4b827a1108fa872bc33d31edb99073" translate="yes" xml:space="preserve">
          <source>USBDevice.controlTransferIn</source>
          <target state="translated">USBDevice.controlTransferIn</target>
        </trans-unit>
        <trans-unit id="207ee9a3576906498d78e7e2d6353196942434bc" translate="yes" xml:space="preserve">
          <source>USBDevice.controlTransferOut</source>
          <target state="translated">USBDevice.controlTransferOut</target>
        </trans-unit>
        <trans-unit id="e226ecf5e5bcae039686d7581ba8da04f862d58d" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceClass</source>
          <target state="translated">USBDevice.deviceClass</target>
        </trans-unit>
        <trans-unit id="fe3846f357c40070ffe59d48456c37de9ba94c5d" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceProtocol</source>
          <target state="translated">USBDevice.deviceProtocol</target>
        </trans-unit>
        <trans-unit id="7df47045df9dfc036a9abd3fd7d2fff4f776eade" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceSubclass</source>
          <target state="translated">USBDevice.deviceSubclass</target>
        </trans-unit>
        <trans-unit id="ee5fa1e24aa70d46cae20b3e8525f0859a011dd8" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceVersionMajor</source>
          <target state="translated">USBDevice.deviceVersionMajor</target>
        </trans-unit>
        <trans-unit id="6efcf9f69afba009e3f042c6631d7625733a09fb" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceVersionMinor</source>
          <target state="translated">USBDevice.deviceVersionMinor</target>
        </trans-unit>
        <trans-unit id="ef90d2e0b7607d7611f9e20adc204675c57fef02" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceVersionSubminor</source>
          <target state="translated">USBDevice.deviceVersionSubminor</target>
        </trans-unit>
        <trans-unit id="f42a5d3b915ed471ae5910b6e1ad47e29aa47d2a" translate="yes" xml:space="preserve">
          <source>USBDevice.isochronousTransferIn</source>
          <target state="translated">USBDevice.isochronousTransferIn</target>
        </trans-unit>
        <trans-unit id="4b6a8d8f03d28da5c9681e836882e706ca97a28f" translate="yes" xml:space="preserve">
          <source>USBDevice.isochronousTransferOut</source>
          <target state="translated">USBDevice.isochronousTransferOut</target>
        </trans-unit>
        <trans-unit id="929928d0fd8b7067bb0cff7816acfc5a3203e679" translate="yes" xml:space="preserve">
          <source>USBDevice.manufacturerName</source>
          <target state="translated">USBDevice.manufacturerName</target>
        </trans-unit>
        <trans-unit id="9dbe62d64fa9ae6de4579353c9e42b9acb277ac8" translate="yes" xml:space="preserve">
          <source>USBDevice.open</source>
          <target state="translated">USBDevice.open</target>
        </trans-unit>
        <trans-unit id="2b6c328313029e051cae05b0d2e235f2663887c0" translate="yes" xml:space="preserve">
          <source>USBDevice.opened</source>
          <target state="translated">USBDevice.opened</target>
        </trans-unit>
        <trans-unit id="2351b69ac14c1b55323bd12bd1780da72a0074af" translate="yes" xml:space="preserve">
          <source>USBDevice.productID</source>
          <target state="translated">USBDevice.productID</target>
        </trans-unit>
        <trans-unit id="9865a10b85eccd62be28acf84ea6561916bd60ba" translate="yes" xml:space="preserve">
          <source>USBDevice.productName</source>
          <target state="translated">USBDevice.productName</target>
        </trans-unit>
        <trans-unit id="ee9e726cc300f274d5a56dbaa5c4ce88ecd30909" translate="yes" xml:space="preserve">
          <source>USBDevice.releaseInterface</source>
          <target state="translated">USBDevice.releaseInterface</target>
        </trans-unit>
        <trans-unit id="3426a119884bb5f5634ad91c56e6710f9f3827dc" translate="yes" xml:space="preserve">
          <source>USBDevice.reset</source>
          <target state="translated">USBDevice.reset</target>
        </trans-unit>
        <trans-unit id="b1b308bcb47fcb7c1bea9ef2c3480502b8759ffe" translate="yes" xml:space="preserve">
          <source>USBDevice.selectAlternateInterface</source>
          <target state="translated">USBDevice.selectAlternateInterface</target>
        </trans-unit>
        <trans-unit id="a256afc1e41867f93edb7865dcbf84e75b4d5be3" translate="yes" xml:space="preserve">
          <source>USBDevice.selectConfiguration</source>
          <target state="translated">USBDevice.selectConfiguration</target>
        </trans-unit>
        <trans-unit id="b51a5ed95b5787898ea6cbd02226ba81ecb6b0f0" translate="yes" xml:space="preserve">
          <source>USBDevice.serialNumber</source>
          <target state="translated">USBDevice.serialNumber</target>
        </trans-unit>
        <trans-unit id="bf7e4ad5d8eb538d4efc8f9ba26ba1df75b08001" translate="yes" xml:space="preserve">
          <source>USBDevice.transferIn</source>
          <target state="translated">USBDevice.transferIn</target>
        </trans-unit>
        <trans-unit id="6616083e8c9688b3ce794d4cb05e0641d188a830" translate="yes" xml:space="preserve">
          <source>USBDevice.transferOut</source>
          <target state="translated">USBDevice.transferOut</target>
        </trans-unit>
        <trans-unit id="6ddf9adfd65d422ad5649eb8e04def26ce70e009" translate="yes" xml:space="preserve">
          <source>USBDevice.usbVersionMajor</source>
          <target state="translated">USBDevice.usbVersionMajor</target>
        </trans-unit>
        <trans-unit id="b43f1c74b422344bafa5ca63b83ddd382fa4af37" translate="yes" xml:space="preserve">
          <source>USBDevice.usbVersionMinor</source>
          <target state="translated">USBDevice.usbVersionMinor</target>
        </trans-unit>
        <trans-unit id="2875d2c30f1a41b8006183f732bc28cb32e496ca" translate="yes" xml:space="preserve">
          <source>USBDevice.usbVersionSubminor</source>
          <target state="translated">USBDevice.usbVersionSubminor</target>
        </trans-unit>
        <trans-unit id="8be8a0a0dfa283600086364c2da6d2616f695d3f" translate="yes" xml:space="preserve">
          <source>USBDevice.vendorID</source>
          <target state="translated">USBDevice.vendorID</target>
        </trans-unit>
        <trans-unit id="b23fdecd247dfe62ea4c499c2ed79042f6b279a5" translate="yes" xml:space="preserve">
          <source>USVString</source>
          <target state="translated">USVString</target>
        </trans-unit>
        <trans-unit id="be2f6c42d784723e163beb17914ca1ac2ee81f02" translate="yes" xml:space="preserve">
          <source>Uncaught exception in request's success/error handler</source>
          <target state="translated">リクエストの成功/エラーハンドラで捕捉されなかった例外</target>
        </trans-unit>
        <trans-unit id="bd634113094d3e6d202d5500694fea134a2a87ba" translate="yes" xml:space="preserve">
          <source>Under consideration</source>
          <target state="translated">検討中</target>
        </trans-unit>
        <trans-unit id="aacc08442138a06c5c82e501f9b7e84e95a73884" translate="yes" xml:space="preserve">
          <source>Underline the contained text.</source>
          <target state="translated">含まれているテキストに下線を引きます。</target>
        </trans-unit>
        <trans-unit id="da64b6d8fe0df6ae0f81e5076ec6491a14939ed3" translate="yes" xml:space="preserve">
          <source>Understanding Service Workers</source>
          <target state="translated">サービス労働者を理解する</target>
        </trans-unit>
        <trans-unit id="be1d872508dff2bb8233b60d70cabc15705bcfbc" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 2.2.2 | W3C Understanding WCAG 2.0</source>
          <target state="translated">成功基準2.2.2を理解する|W3C Understanding WCAG 2.0</target>
        </trans-unit>
        <trans-unit id="0544849f7337060d10359c35369ca8f6e83793e3" translate="yes" xml:space="preserve">
          <source>Understanding message size limits</source>
          <target state="translated">メッセージサイズの制限を理解する</target>
        </trans-unit>
        <trans-unit id="1d43cc0beaceb55dcda5fe8f60544a117ad8a33f" translate="yes" xml:space="preserve">
          <source>Understanding putImageData</source>
          <target state="translated">putImageData を理解する</target>
        </trans-unit>
        <trans-unit id="1496b76ec7599c63d18e350cb3ee5f07441b259f" translate="yes" xml:space="preserve">
          <source>Understanding source element size</source>
          <target state="translated">ソース要素のサイズを理解する</target>
        </trans-unit>
        <trans-unit id="98778b7d6c10016dd484c6dfe7bf6e3893a896b9" translate="yes" xml:space="preserve">
          <source>UndoManager and DOMTransaction&lt;br/&gt;&lt;small&gt;The definition of 'Element' in that specification.&lt;/small&gt;</source>
          <target state="translated">UndoManagerとDOMTransaction &lt;br/&gt;&lt;small&gt;その仕様における「要素」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9332e8b734c76c9e98ff25c70db2389f59a4b06d" translate="yes" xml:space="preserve">
          <source>Undoes the last executed command.</source>
          <target state="translated">最後に実行したコマンドを元に戻します。</target>
        </trans-unit>
        <trans-unit id="7240191833f3c6486688a6e6bad07b2a5cb1a774" translate="yes" xml:space="preserve">
          <source>Unfortunately, WebRTC can&amp;rsquo;t create connections without some sort of server in the middle. We call this the &lt;strong&gt;signal channel&lt;/strong&gt; or &lt;strong&gt;signaling service&lt;/strong&gt;. It&amp;rsquo;s any sort of channel of communication to exchange information before setting up a connection, whether by email, post card or a carrier pigeon... it&amp;rsquo;s up to you.</source>
          <target state="translated">残念ながら、WebRTCは何らかの中間サーバーがなければ接続を作成できません。これを&lt;strong&gt;信号チャネル&lt;/strong&gt;または&lt;strong&gt;信号サービス&lt;/strong&gt;と呼び&lt;strong&gt;ます&lt;/strong&gt;。電子メール、ポストカード、または伝書鳩など、接続をセットアップする前に情報を交換するのは、あらゆる種類の通信チャネルです...それはあなた次第です。</target>
        </trans-unit>
        <trans-unit id="499f9020747293a18e1d590a5b8eaf2f5c2f8572" translate="yes" xml:space="preserve">
          <source>Unfortunately, the only way to tell ICE that the server has a backup domain name of &lt;code&gt;stunserver2.example.org&lt;/code&gt; is to add a new entry to the &lt;code&gt;iceServers&lt;/code&gt; array for it. The &lt;a href=&quot;urls&quot;&gt;&lt;code&gt;urls&lt;/code&gt;&lt;/a&gt; property lets you include them both in one server, which is more readily maintainable.</source>
          <target state="translated">残念ながら、サーバはバックアップのドメイン名があることICEを伝えるための唯一の方法 &lt;code&gt;stunserver2.example.org&lt;/code&gt; はに新しいエントリを追加することです &lt;code&gt;iceServers&lt;/code&gt; のそれのための配列を。&lt;a href=&quot;urls&quot;&gt; &lt;code&gt;urls&lt;/code&gt; &lt;/a&gt;プロパティを使用すると、より容易に維持することが一つのサーバにそれらの両方を含めることができます。</target>
        </trans-unit>
        <trans-unit id="90ac7bb3b01b32e952ee295aa92163d24d25615d" translate="yes" xml:space="preserve">
          <source>Unicode strings</source>
          <target state="translated">ユニコード文字列</target>
        </trans-unit>
        <trans-unit id="d05d8a17c2ccc566b0b19eabde4e9cf143b7339c" translate="yes" xml:space="preserve">
          <source>Uniform blocks: one entry for each member. If the uniform block has an instance name, the block name is prefixed. E.g. &lt;code&gt;uniform Block { float foo; };&lt;/code&gt; will result in &lt;code&gt;foo&lt;/code&gt;, and &lt;code&gt;uniform Block { float bar; } e;&lt;/code&gt; will result in &lt;code&gt;Block.bar&lt;/code&gt;.</source>
          <target state="translated">ユニフォームブロック：メンバーごとに1つのエントリ。ユニフォームブロックにインスタンス名がある場合、ブロック名の前に付けられます。例えば、 &lt;code&gt;uniform Block { float foo; };&lt;/code&gt; 結果は &lt;code&gt;foo&lt;/code&gt; になり、 &lt;code&gt;uniform Block { float bar; } e;&lt;/code&gt; 結果は &lt;code&gt;Block.bar&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="8ab6533ac084307152f5dbe88c7179a3169c13f0" translate="yes" xml:space="preserve">
          <source>Uniform buffer objects</source>
          <target state="translated">均一なバッファオブジェクト</target>
        </trans-unit>
        <trans-unit id="dceb6f08ba9bcf891f5b164a5849d96bc8cad24d" translate="yes" xml:space="preserve">
          <source>Uniform type</source>
          <target state="translated">均一タイプ</target>
        </trans-unit>
        <trans-unit id="11109b7aa84753fa47b19372e06aae466cb757f6" translate="yes" xml:space="preserve">
          <source>Uniform types</source>
          <target state="translated">均一なタイプ</target>
        </trans-unit>
        <trans-unit id="b6a9b6db5e999a20349a608ed5b5934e67ff46b5" translate="yes" xml:space="preserve">
          <source>UniformLocation</source>
          <target state="translated">UniformLocation</target>
        </trans-unit>
        <trans-unit id="b817c790c0e1eb2da135f6728ba7e7a734d36d2a" translate="yes" xml:space="preserve">
          <source>Uniforms</source>
          <target state="translated">Uniforms</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
