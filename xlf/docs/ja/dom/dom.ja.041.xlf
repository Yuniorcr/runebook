<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="40a7ea113597dae6dfd33fd5ab0013d292582197" translate="yes" xml:space="preserve">
          <source>Things that don't work with structured clone</source>
          <target state="translated">構造化クローンで動かないもの</target>
        </trans-unit>
        <trans-unit id="176d1270a4ec08e4a954fc89cb3ddf52fe730e7c" translate="yes" xml:space="preserve">
          <source>Things that trigger negotiation</source>
          <target state="translated">交渉のきっかけとなるもの</target>
        </trans-unit>
        <trans-unit id="c3738a50c69fe9fcbd22969a5ff2e60471316b13" translate="yes" xml:space="preserve">
          <source>Things to avoid</source>
          <target state="translated">避けるべきこと</target>
        </trans-unit>
        <trans-unit id="4824221375d3ce9b6f04cd13e1f0c90e7b5aac9d" translate="yes" xml:space="preserve">
          <source>Things to keep in mind</source>
          <target state="translated">気をつけたいこと</target>
        </trans-unit>
        <trans-unit id="0da42472b3dbe6143cca3d9ef365827712335a49" translate="yes" xml:space="preserve">
          <source>Things your users want to know</source>
          <target state="translated">ユーザーが知りたいこと</target>
        </trans-unit>
        <trans-unit id="9892199e599bdf28c3c4159f6d0724a42a97ed64" translate="yes" xml:space="preserve">
          <source>Think of a subprotocol as a custom &lt;a href=&quot;https://en.wikipedia.org/wiki/XML_schema&quot;&gt;XML schema&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Document_Type_Definition&quot;&gt;doctype declaration&lt;/a&gt;. You're still using XML and its syntax, but you're additionally restricted by a structure you agreed on. WebSocket subprotocols are just like that. They do not introduce anything fancy, they just establish structure. Like a doctype or schema, both parties must agree on the subprotocol; unlike a doctype or schema, the subprotocol is implemented on the server and cannot be externally refered to by the client.</source>
          <target state="translated">サブプロトコルは、カスタム&lt;a href=&quot;https://en.wikipedia.org/wiki/XML_schema&quot;&gt;XMLスキーマ&lt;/a&gt;または&lt;a href=&quot;https://en.wikipedia.org/wiki/Document_Type_Definition&quot;&gt;doctype宣言と&lt;/a&gt;考えてください。あなたはまだXMLとその構文を使用していますが、同意した構造によってさらに制限されています。WebSocketサブプロトコルはそのようなものです。彼らは派手なものを何も紹介しません、彼らは単に構造を確立します。doctypeまたはスキーマと同様に、両方の当事者はサブプロトコルについて合意する必要があります。doctypeやスキーマとは異なり、サブプロトコルはサーバーに実装されており、クライアントが外部から参照することはできません。</target>
        </trans-unit>
        <trans-unit id="8a8cf29266faf9bd2f28348fad2c5a8002189622" translate="yes" xml:space="preserve">
          <source>Think of an extension as compressing a file before e-mailing it to someone. Whatever you do, you're sending the &lt;em&gt;same&lt;/em&gt; data in different forms. The recipient will eventually be able to get the same data as your local copy, but it is sent differently. That's what an extension does. WebSockets defines a protocol and a simple way to send data, but an extension such as compression could allow sending the same data but in a shorter format.</source>
          <target state="translated">拡張機能は、誰かに電子メールで送信する前にファイルを圧縮すると考えることができます。何をするにしても、&lt;em&gt;同じ&lt;/em&gt;データを異なる形式で送信します。受信者は最終的にローカルコピーと同じデータを取得できますが、送信方法は異なります。これが拡張機能の機能です。WebSocketsはプロトコルとデータを送信する簡単な方法を定義しますが、圧縮などの拡張機能により、同じデータをより短い形式で送信できます。</target>
        </trans-unit>
        <trans-unit id="d6383d5e0964b3c11743aa364449e9c94499eadd" translate="yes" xml:space="preserve">
          <source>Third party window content (e.g. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; content) can access the IndexedDB store for the origin it is embedded into, unless the browser is set to &lt;a href=&quot;https://support.mozilla.org/en-US/kb/disable-third-party-cookies&quot;&gt;never accept third party cookies&lt;/a&gt; (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1147821&quot;&gt;bug 1147821&lt;/a&gt;.)</source>
          <target state="translated">サードパーティのウィンドウコンテンツ（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;コンテンツなど）は、ブラウザが&lt;a href=&quot;https://support.mozilla.org/en-US/kb/disable-third-party-cookies&quot;&gt;サードパーティのCookieを受け入れないように&lt;/a&gt;設定されていない限り、埋め込まれているオリジンのIndexedDBストアにアクセスできます（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1147821&quot;&gt;バグ1147821を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="74597a7753e031ab06568a761bc2da6c6d4687d0" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt;'s transaction is inactive.</source>
          <target state="translated">この&lt;a href=&quot;../idbindex&quot;&gt; &lt;code&gt;IDBIndex&lt;/code&gt; &lt;/a&gt;のトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="6cc3b26dc24d2f88b5e8527458659a068eec7d65" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; has been deleted.</source>
          <target state="translated">この&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;は削除されました。</target>
        </trans-unit>
        <trans-unit id="8b751e98eaac2c177a9f9f4dc71e38507fc1ea6f" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; has been deleted.</source>
          <target state="translated">この&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../idbindex&quot;&gt; &lt;code&gt;IDBIndex&lt;/code&gt; &lt;/a&gt;は削除されました。</target>
        </trans-unit>
        <trans-unit id="a16cac9b24ff131803e2077a48d2850dc13fe554" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt;'s transaction is inactive.</source>
          <target state="translated">この&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;のトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="691a18f1d0b7225d6eeaa9dbcd91654aacccdb33" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; object is being updated (i.e. its &lt;a href=&quot;updating&quot;&gt;&lt;code&gt;SourceBuffer.updating&lt;/code&gt;&lt;/a&gt; property is currently &lt;code&gt;true&lt;/code&gt;), or this &lt;code&gt;SourceBuffer&lt;/code&gt; has been removed from the &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この&lt;a href=&quot;../sourcebuffer&quot;&gt; &lt;code&gt;SourceBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトが更新されている（つまり、その&lt;a href=&quot;updating&quot;&gt; &lt;code&gt;SourceBuffer.updating&lt;/code&gt; &lt;/a&gt;プロパティが現在 &lt;code&gt;true&lt;/code&gt; である）か、この &lt;code&gt;SourceBuffer&lt;/code&gt; が&lt;a href=&quot;../mediasource&quot;&gt; &lt;code&gt;MediaSource&lt;/code&gt; &lt;/a&gt;から削除されています。</target>
        </trans-unit>
        <trans-unit id="91aaca739a3d9cf346184c3ba09dd855a8199d8e" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;polyfill&lt;/a&gt; adds compatibility to all Browsers supporting &lt;a href=&quot;https://caniuse.com/#search=es5&quot;&gt;ES5&lt;/a&gt;:</source>
          <target state="translated">この&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;ポリフィル&lt;/a&gt;は、&lt;a href=&quot;https://caniuse.com/#search=es5&quot;&gt;ES5を&lt;/a&gt;サポートするすべてのブラウザに互換性を追加します。</target>
        </trans-unit>
        <trans-unit id="4a2c1acb3cee17f0f75a08a50ca5123bd67812cd" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;&lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt;&lt;/em&gt; must have the same sample-rate as the &lt;code&gt;AudioContext&lt;/code&gt; or an exception will be thrown. At the time when this attribute is set, the buffer and the state of the attribute will be used to configure the &lt;code&gt;ConvolverNode&lt;/code&gt; with this impulse response having the given normalization. The initial value of this attribute is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この&lt;em&gt;&lt;a href=&quot;../audiobuffer&quot;&gt; &lt;code&gt;AudioBuffer&lt;/code&gt; は&lt;/a&gt;&lt;/em&gt;同じサンプルレートを持っている必要があります &lt;code&gt;AudioContext&lt;/code&gt; または例外がスローされます。この属性が設定された時点で、バッファーと属性の状態を使用して、指定された正規化を持つこのインパルス応答で &lt;code&gt;ConvolverNode&lt;/code&gt; を構成します。この属性の初期値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="39deeb8a2b385ab83888bf39251e1006f23d059a" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;is&lt;/em&gt; a little confusing, but what we're doing is using sin and cos to help us work out the circular motion the coordinates need for the rotation of the boombox.</source>
          <target state="translated">これ&lt;em&gt;は&lt;/em&gt;少し混乱しますが、私たちがやっていることは、sinとcosを使用して、ラジカセの回転に必要な座標の円運動を計算するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="1c174037f42bdff2e7f596721f302d30e998fd83" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;required&lt;/strong&gt; property is either a single &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; or an array of &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;s, each specifying a URL which can be used to connect to the server.</source>
          <target state="translated">この&lt;strong&gt;必須の&lt;/strong&gt;プロパティは、単一の&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;の配列であり、それぞれがサーバーへの接続に使用できるURLを指定します。</target>
        </trans-unit>
        <trans-unit id="355ca8e73ffa0fa9c542b143e0c7fad3f84604e2" translate="yes" xml:space="preserve">
          <source>This API allows asynchronous read of &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">このAPIにより、&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトの非同期読み取りが可能になります。</target>
        </trans-unit>
        <trans-unit id="5d46c165022be2ce6d3c067a91f4b16e55b4c243" translate="yes" xml:space="preserve">
          <source>This API allows synchronous read of &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects. This is an API that works only in workers.</source>
          <target state="translated">このAPIにより、&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトの同期読み取りが可能になります。これは、ワーカーでのみ機能するAPIです。</target>
        </trans-unit>
        <trans-unit id="df919cfd25897d3dc2638852a09ef1b1cf3d3fa0" translate="yes" xml:space="preserve">
          <source>This API has no official W3C or WHATWG specification.</source>
          <target state="translated">このAPIにはW3CやWHATWGの公式仕様はありません。</target>
        </trans-unit>
        <trans-unit id="aa69a35f5ef7c966442e77e3e3d7341298985282" translate="yes" xml:space="preserve">
          <source>This API is designed to supersede accessing the clipboard using &lt;a href=&quot;document/execcommand&quot;&gt;&lt;code&gt;document.execCommand()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このAPIは、&lt;a href=&quot;document/execcommand&quot;&gt; &lt;code&gt;document.execCommand()&lt;/code&gt; &lt;/a&gt;を使用したクリップボードへのアクセスに優先するように設計されています</target>
        </trans-unit>
        <trans-unit id="23090f3252892444fa02c12b398c56c6bdf9c159" translate="yes" xml:space="preserve">
          <source>This API is restricted to top-level contexts. Calls to &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;store()&lt;/code&gt; within an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element will resolve without effect.</source>
          <target state="translated">このAPIはトップレベルのコンテキストに制限されています。 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 要素内の &lt;code&gt;get()&lt;/code&gt; および &lt;code&gt;store()&lt;/code&gt; の呼び出しは、効果なしに解決されます。</target>
        </trans-unit>
        <trans-unit id="ff62dee57c4f09ac3b668f025cf5316345b4fd74" translate="yes" xml:space="preserve">
          <source>This API lets websites interact with a user agent&amp;rsquo;s password system so that websites can deal in a uniform way with site credentials and user agents can provide better assistance with the management of their credentials. For example, user agents have a particularly hard time dealing with federated identity providers or esoteric sign-in mechanisms that use more than just a username and password. To address these problems, the Credential Management API provides ways for a website to store and retrieve different types of credentials. This give users capabilities such as seeing the federated account they used to sign on to a site, or resuming a session without the explicit sign-in flow of an expired session.</source>
          <target state="translated">このAPIを使用すると、Webサイトはユーザーエージェントのパスワードシステムとやり取りできるため、Webサイトはサイトの資格情報を統一した方法で処理でき、ユーザーエージェントは資格情報の管理により優れた支援を提供できます。たとえば、ユーザーエージェントは、フェデレーテッドアイデンティティプロバイダーや、ユーザー名とパスワード以外のものを使用する難解なサインインメカニズムを処理するのが特に困難です。これらの問題に対処するために、Credential Management APIは、Webサイトがさまざまなタイプの資格情報を格納および取得する方法を提供します。これにより、ユーザーがサイトへのサインオンに使用したフェデレーションアカウントを表示したり、期限切れのセッションの明示的なサインインフローなしでセッションを再開したりすることができます。</target>
        </trans-unit>
        <trans-unit id="dad71b48b3e1d5813d4233ac6100133e11f0ab10" translate="yes" xml:space="preserve">
          <source>This API was moved to the &lt;code&gt;Element&lt;/code&gt; and &lt;code&gt;Attr&lt;/code&gt; APIs according to the DOM4 standard.</source>
          <target state="translated">このAPIは、DOM4標準に従って &lt;code&gt;Element&lt;/code&gt; および &lt;code&gt;Attr&lt;/code&gt; APIに移動されました。</target>
        </trans-unit>
        <trans-unit id="253e64c9f0a804b63343795db1804dabd011a452" translate="yes" xml:space="preserve">
          <source>This API was previously available on the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このAPIは、以前は&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt; APIで利用可能でした。</target>
        </trans-unit>
        <trans-unit id="0e02c2994d68f7becce0fad8d06ecda2ef497564" translate="yes" xml:space="preserve">
          <source>This API was previously available on the&lt;code&gt;Node&lt;/code&gt; API.</source>
          <target state="translated">このAPIは、以前は &lt;code&gt;Node&lt;/code&gt; APIで利用可能でした。</target>
        </trans-unit>
        <trans-unit id="4ff118404a521b4c3402072a38887d0b9dbd3276" translate="yes" xml:space="preserve">
          <source>This Boolean property stops the script's execution in browsers that support&lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt; ES2015 modules&lt;/a&gt; &amp;mdash; used to run fallback scripts in older browsers that do &lt;em&gt;not&lt;/em&gt; support JavaScript modules.</source>
          <target state="translated">このブール型プロパティは、&lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;ES2015モジュール&lt;/a&gt;をサポートするブラウザーでのスクリプトの実行を停止します &amp;mdash; JavaScriptモジュールをサポートし&lt;em&gt;ない&lt;/em&gt;古いブラウザーでフォールバックスクリプトを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="611662afe559078763db036e64a0cb29d21d7bfc" translate="yes" xml:space="preserve">
          <source>This HTML creates a panel (in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; block) that welcomes the user to a site and tells them what they're agreeing to by clicking the OK button.</source>
          <target state="translated">このHTMLは（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;ブロック内に）パネルを作成します。このパネルはユーザーをサイトに歓迎し、[OK]ボタンをクリックして同意する内容をユーザーに通知します。</target>
        </trans-unit>
        <trans-unit id="4a5e17defdbe6494d36481da8c1deece2e6ac90e" translate="yes" xml:space="preserve">
          <source>This IDBCursor's transaction is inactive.</source>
          <target state="translated">このIDBCursorのトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="171b4f1a41b679fe21230e49c0c3c3c108cbff43" translate="yes" xml:space="preserve">
          <source>This IDBIndex's transaction is inactive.</source>
          <target state="translated">このIDBIndexのトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="a66f9a972ba3d70822a49955fea0b2bde4be6b33" translate="yes" xml:space="preserve">
          <source>This Property indicates how many bytes of data have been sent. The value is zero until &lt;code&gt;NetworkStream.DataAvailable&lt;/code&gt; is &lt;em&gt;true&lt;/em&gt;.</source>
          <target state="translated">このプロパティは、送信されたデータのバイト数を示します。 &lt;code&gt;NetworkStream.DataAvailable&lt;/code&gt; が&lt;em&gt;trueになる&lt;/em&gt;まで、値はゼロ&lt;em&gt;です&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0e0e1b0a75147eb2994dc5c5b885b540fe6d856f" translate="yes" xml:space="preserve">
          <source>This adds the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; parameters, which indicate the size to which to scale the image when drawing it onto the canvas.</source>
          <target state="translated">これにより &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; パラメータが追加され、キャンバスに描画するときに画像を拡大縮小するサイズが示されます。</target>
        </trans-unit>
        <trans-unit id="bf88e33eafdd45251159cf2ef25f1298ee334c5b" translate="yes" xml:space="preserve">
          <source>This all happens asynchronously.</source>
          <target state="translated">これはすべて非同期で行われます。</target>
        </trans-unit>
        <trans-unit id="3fd958fbe858280fba2b10710baeae3bd7aeba3a" translate="yes" xml:space="preserve">
          <source>This also only works with the &lt;code&gt;lang&lt;/code&gt; attribute and not with &lt;code&gt;xml:lang&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;lang&lt;/code&gt; 属性でのみ機能し、 &lt;code&gt;xml:lang&lt;/code&gt; では機能しません。</target>
        </trans-unit>
        <trans-unit id="34d01ae43990443e60442b78dae3887e2b1eaa84" translate="yes" xml:space="preserve">
          <source>This amends the previous example by looking at the contents of the &lt;code&gt;performance.navigation&lt;/code&gt; object. &lt;a href=&quot;../performancenavigation/type&quot;&gt;&lt;code&gt;performance.navigation.type&lt;/code&gt;&lt;/a&gt; indicates what kind of load operation took place: a navigation, a reload, or a shift through the browser's history. We also obtain the number of redirects that were incurred during the navigation from &lt;a href=&quot;../performancenavigation/redirectcount&quot;&gt;&lt;code&gt;performance.navigation.redirectCount&lt;/code&gt;&lt;/a&gt;. This information is output to the screen just like the page load time was previously: by inserting it into the element with class &lt;code&gt;&quot;output&quot;&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;performance.navigation&lt;/code&gt; オブジェクトの内容を調べることにより、前の例を修正します。&lt;a href=&quot;../performancenavigation/type&quot;&gt; &lt;code&gt;performance.navigation.type&lt;/code&gt; &lt;/a&gt;は、実行されたロード操作の種類（ナビゲーション、リロード、またはブラウザーの履歴のシフト）を示します。また、ナビゲーション中に発生したリダイレクトの数を&lt;a href=&quot;../performancenavigation/redirectcount&quot;&gt; &lt;code&gt;performance.navigation.redirectCount&lt;/code&gt; &lt;/a&gt;から取得します。この情報は、ページの読み込み時間が以前と同じように画面に出力されます。これは、クラス &lt;code&gt;&quot;output&quot;&lt;/code&gt; を使用して要素に挿入することによって行われます。</target>
        </trans-unit>
        <trans-unit id="471823c7a9f818f0a9f2d3341b211c2b8942647d" translate="yes" xml:space="preserve">
          <source>This application will only work on a browser that supports pointer events.</source>
          <target state="translated">このアプリケーションは、ポインタイベントをサポートするブラウザ上でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="2d7cf787ab25324aaeaa14fd2544d212dbed030d" translate="yes" xml:space="preserve">
          <source>This article currently describes Navigation Timing Level 1. There is a specification for Level 2, but it is not yet covered here.</source>
          <target state="translated">この記事では現在、ナビゲーションタイミングレベル1について説明しています。レベル2については仕様がありますが、ここではまだ取り上げていません。</target>
        </trans-unit>
        <trans-unit id="d5a900639552727efe6323d49608deb0f31ff380" translate="yes" xml:space="preserve">
          <source>This article demonstrates how to use a &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt; to link multiple parameters together so they share the same value, which can be changed by simply setting the value of the &lt;a href=&quot;../constantsourcenode/offset&quot;&gt;&lt;code&gt;ConstantSourceNode.offset&lt;/code&gt;&lt;/a&gt; parameter.</source>
          <target state="translated">この記事では、&lt;a href=&quot;../constantsourcenode&quot;&gt; &lt;code&gt;ConstantSourceNode&lt;/code&gt; &lt;/a&gt;を使用して複数のパラメーターをリンクし、同じ値を共有する方法を示します。これらの値は、&lt;a href=&quot;../constantsourcenode/offset&quot;&gt; &lt;code&gt;ConstantSourceNode.offset&lt;/code&gt; &lt;/a&gt;パラメーターの値を設定するだけで変更できます。</target>
        </trans-unit>
        <trans-unit id="f78e3221b5052b6192b96863f61de295b3a1f7ab" translate="yes" xml:space="preserve">
          <source>This article demonstrates how to use the &lt;a href=&quot;../fullscreen_api&quot;&gt;Fullscreen API&lt;/a&gt; to place a given element into full-screen mode, as well as how to detect when the browser enters or exits full-screen mode.</source>
          <target state="translated">この記事では、&lt;a href=&quot;../fullscreen_api&quot;&gt;フルスクリーンAPI&lt;/a&gt;を使用して特定の要素をフルスクリーンモードに配置する方法と、ブラウザがフルスクリーンモードに移行または終了したことを検出する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="725bd3cf1a517194cbbfff5898fe47e0f93000c8" translate="yes" xml:space="preserve">
          <source>This article describes how the various WebRTC-related protocols interact with one another in order to create a connection and transfer data and/or media among peers.</source>
          <target state="translated">この記事では、接続を作成し、ピア間でデータやメディアを転送するために、さまざまな WebRTC 関連のプロトコルがどのように相互作用するかについて説明します。</target>
        </trans-unit>
        <trans-unit id="6a495d7bef8cf7e019bd17c3f0baf7e52ae746a7" translate="yes" xml:space="preserve">
          <source>This article discusses some of the concepts and theory behind virtual reality (VR). If you are a newcomer to the area, it is worthwhile getting an understanding of these topics before you start diving into code.</source>
          <target state="translated">この記事では、仮想現実(VR)の背後にある概念と理論のいくつかについて説明します。あなたがこの分野の初心者であれば、コードに飛び込む前にこれらのトピックを理解しておく価値があります。</target>
        </trans-unit>
        <trans-unit id="4ac4e464991e0b9f4da285254b21fedeb59c7bef" translate="yes" xml:space="preserve">
          <source>This article doesn't get into details of the actual APIs involved in establishing and handling a WebRTC connection; it simply reviews the process in general with some information about why each step is required. See &lt;a href=&quot;signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt; for an actual example with a step-by-step explanation of what's the code does.</source>
          <target state="translated">この記事では、WebRTC接続の確立と処理に関連する実際のAPIの詳細については触れません。単に各ステップが必要な理由に関するいくつかの情報を使用して、プロセスを概説するだけです。コードが何をするかの段階的な説明のある実際の例については、&lt;a href=&quot;signaling_and_video_calling&quot;&gt;シグナリングとビデオ通話&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="63f7121755ed932ab5ce73d361ee94a55a855b4c" translate="yes" xml:space="preserve">
          <source>This article explains an edge case that occurs with fetch (and potentially other APIs exhibiting the same kind of resource retrieval behavior). When a cross-origin fetch involving a relative URL is initiated from an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;, the relative URL used to be resolved against the current global location, rather than the iframe's location.</source>
          <target state="translated">この記事では、フェッチで発生するエッジケース（および、同じ種類のリソース取得動作を示す可能性のある他のAPI）について説明します。相対URLを含むクロスオリジンフェッチが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;から開始されると、相対URLは、iframeの場所ではなく、現在のグローバルな場所に対して解決されていました。</target>
        </trans-unit>
        <trans-unit id="7adfc2595765b418308ebfc06065b6df39d1709c" translate="yes" xml:space="preserve">
          <source>This article explains some of the audio theory behind how the features of the Web Audio API work, to help you make informed decisions while designing how audio is routed through your app. It won't turn you into a master sound engineer, but it will give you enough background to understand why the Web Audio API works like it does.</source>
          <target state="translated">この記事では、Web Audio APIの機能がどのように機能するのか、その背後にあるオーディオ理論について説明します。この記事を読んだからといって、サウンドエンジニアになれるわけではありませんが、Web Audio APIがなぜそのように機能するのかを理解するのに十分な背景が得られるでしょう。</target>
        </trans-unit>
        <trans-unit id="db8d5072b2410f2f7c78c11a2b98dbc0c6d3bb44" translate="yes" xml:space="preserve">
          <source>This article explores how to take data within a WebGL project, and project it into the proper spaces to display it on the screen. It assumes a knowledge of basic matrix math using translation, scale, and rotation matrices. It explains the three core matrices that are typically used to represent a 3D object: the model, view and projection matrices.</source>
          <target state="translated">この記事では、WebGL プロジェクト内のデータを取得し、それを適切なスペースに投影して画面に表示する方法を探ります。この記事では、並進行列、スケール行列、回転行列を使用した基本的な行列計算の知識を前提としています。3D オブジェクトを表現するために一般的に使用される 3 つのコア行列、モデル行列、ビュー行列、投影行列について説明します。</target>
        </trans-unit>
        <trans-unit id="d928d97834f4c4d90a8e27643d03ef9f6625d926" translate="yes" xml:space="preserve">
          <source>This article has given you a very basic idea of how to use the Gamepad Extensions to use VR controllers inside WebVR apps. In a real app you'd probably have a much more complex control system in effect, with controls assigned to the buttons on the VR controllers, and the display being affected by both the display pose and the controller poses simultaneously. Here however, we just wanted to isolate the pure Gamepad Extensions parts of that.</source>
          <target state="translated">この記事では、WebVR アプリ内で VR コントローラを使用するためにゲームパッド拡張機能を使用する方法の非常に基本的なアイデアをお伝えしました。実際のアプリでは、おそらく、VRコントローラのボタンにコントロールが割り当てられ、ディスプレイはディスプレイのポーズとコントローラのポーズの両方に同時に影響を受けるという、より複雑なコントロールシステムを実際に使用することになるでしょう。しかしここでは、純粋なゲームパッド拡張機能の部分だけを切り離してみました。</target>
        </trans-unit>
        <trans-unit id="e5ca011d3bd4c665e9446857ffc9dc739282cda9" translate="yes" xml:space="preserve">
          <source>This article has given you the very basics of how to create a simple WebVR 1.1 app, to help you get started.</source>
          <target state="translated">この記事では、簡単なWebVR 1.1アプリの作成方法のごく基本的なことをお伝えしました。</target>
        </trans-unit>
        <trans-unit id="fe4a100cf9125ef03cdcf891d5f9cec805bac258" translate="yes" xml:space="preserve">
          <source>This article introduces the protocols on top of which the WebRTC API is built.</source>
          <target state="translated">この記事では、WebRTC APIが構築された上でのプロトコルを紹介しています。</target>
        </trans-unit>
        <trans-unit id="ef7200868160b2fd55ee5205a4adca29b47ca8ab" translate="yes" xml:space="preserve">
          <source>This article is an overview of some powerful, fundamental DOM level 1 methods and how to use them from JavaScript. You will learn how to create, access and control, and remove HTML elements dynamically. The DOM methods presented here are not specific to HTML; they also apply to XML. The demonstrations provided here will work fine in any modern browser, including all versions of Firefox and IE 5+.</source>
          <target state="translated">この記事では、いくつかの強力で基本的な DOM レベル 1 のメソッドの概要と、JavaScript からの使用方法について説明します。HTML 要素を動的に作成、アクセス、制御、削除する方法を学びます。ここで紹介する DOM メソッドは HTML に特化したものではなく、XML にも適用されます。ここで提供されているデモは、Firefox や IE 5+のすべてのバージョンを含む、最新のブラウザでも問題なく動作します。</target>
        </trans-unit>
        <trans-unit id="389fb99613c3221620b47bea3898d0ec5ae76f7a" translate="yes" xml:space="preserve">
          <source>This article offers suggestions and tips to improve your WebGL content. Following these suggestions can help improve your web application's compatibility with more devices and browsers, as well as increase its performance.</source>
          <target state="translated">この記事では、WebGL コンテンツを改善するための提案とヒントを提供します。これらの提案に従うことで、Web アプリケーションのパフォーマンスを向上させるだけでなく、より多くのデバイスやブラウザとの互換性を向上させることができます。</target>
        </trans-unit>
        <trans-unit id="7f7d2c5b6006e345bdf65ccf7498a50d8aaa7291" translate="yes" xml:space="preserve">
          <source>This article presents the code and working demo of a video keyboard you can play using the mouse. The keyboard allows you to switch among the standard waveforms as well as one custom waveform, and you can control the master gain using a volume slider beneath the keyboard. This example makes use of the following Web API interfaces: &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この記事では、マウスを使用して再生できるビデオキーボードのコードと動作するデモを紹介します。キーボードを使用すると、標準波形と1つのカスタム波形を切り替えることができ、キーボードの下にあるボリュームスライダーを使用してマスターゲインを制御できます。この例では、以下のWeb APIインタフェースを利用します&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4dd71977027d74d3cda3a8b03b46a28d86167f07" translate="yes" xml:space="preserve">
          <source>This article provides a useful summary of best practices to keep in mind when developing web sites and applications that use Push Notifications for user engagement.</source>
          <target state="translated">この記事では、ユーザーエンゲージメントのためにプッシュ通知を使用するWebサイトやアプリケーションを開発する際に留意すべきベストプラクティスをまとめています。</target>
        </trans-unit>
        <trans-unit id="1fd57a9e6c01519f95e4cebde9f971b3d777ec5d" translate="yes" xml:space="preserve">
          <source>This article provides a walkthrough of how to make use of this simple technology.</source>
          <target state="translated">この記事では、このシンプルな技術の活用方法をウォークスルーで紹介しています。</target>
        </trans-unit>
        <trans-unit id="1821d5ed750cd8c9a306517f4934976acd0c8a45" translate="yes" xml:space="preserve">
          <source>This article provides an interesting real-world example of using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element to do software rendering of a 3D environment using ray-casting.</source>
          <target state="translated">この記事では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を使用して、レイキャスティングを使用した3D環境のソフトウェアレンダリングを行う興味深い実例を紹介します。</target>
        </trans-unit>
        <trans-unit id="736f76c3e35560d26b90ffc22adb6c23bea7b4e2" translate="yes" xml:space="preserve">
          <source>This article provides information on getting started with service workers, including basic architecture, registering a service worker, the install and activation process for a new service worker, updating your service worker, cache control and custom responses, all in the context of a simple app with offline functionality.</source>
          <target state="translated">この記事では、基本的なアーキテクチャ、サービス ワーカーの登録、新しいサービス ワーカーのインストールとアクティベーション プロセス、サービス ワーカーの更新、キャッシュ制御、カスタム レスポンスなど、サービス ワーカーを使い始めるための情報を、オフライン機能を備えたシンプルなアプリのコンテキストで提供します。</target>
        </trans-unit>
        <trans-unit id="4cdecbf0913aeb5cf529a9149bc7b715c9e86a6c" translate="yes" xml:space="preserve">
          <source>This article shows how to use WebRTC to access the camera on a computer or mobile phone with WebRTC support and take a photo with it.</source>
          <target state="translated">この記事では、WebRTCに対応したパソコンや携帯電話でWebRTCを使ってカメラにアクセスして写真を撮る方法を紹介しています。</target>
        </trans-unit>
        <trans-unit id="1f037f6bcfe634b68cdfb511a8929db7df912e56" translate="yes" xml:space="preserve">
          <source>This article shows how to use WebRTC to access the camera on a computer or mobile phone with WebRTC support and take a photo with it. &lt;a href=&quot;https://mdn-samples.mozilla.org/s/webrtc-capturestill&quot;&gt;Try this sample&lt;/a&gt; then read on to learn how it works.</source>
          <target state="translated">この記事では、WebRTCを使用して、WebRTCがサポートされているコンピューターまたは携帯電話のカメラにアクセスし、写真を撮る方法を説明します。&lt;a href=&quot;https://mdn-samples.mozilla.org/s/webrtc-capturestill&quot;&gt;このサンプルを試し&lt;/a&gt;てから、それがどのように機能するかを学習してください。</target>
        </trans-unit>
        <trans-unit id="04fcfc8edaedb085eb3143f05deedb059849b685" translate="yes" xml:space="preserve">
          <source>This article will introduce you to the basics of using WebGL. It's assumed that you already have an understanding of the mathematics involved in 3D graphics, and this article doesn't pretend to try to teach you 3D graphics concepts itself. We have a beginner-oriented guide, complete with coding assignments to complete, in our Learning Area: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/WebGL&quot;&gt;Learn WebGL for 2D and 3D graphics&lt;/a&gt;.</source>
          <target state="translated">この記事では、WebGLの基本的な使用方法を紹介します。3Dグラフィックスに関係する数学をすでに理解していることを前提としています。この記事は、3Dグラフィックスの概念自体を教えるつもりはありません。私たちのラーニングエリア：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/WebGL&quot;&gt;2Dおよび3Dグラフィックス向けのWebGLを学ぶには&lt;/a&gt;、コーディングの割り当てが完了した初心者向けのガイドがあります。</target>
        </trans-unit>
        <trans-unit id="fc134eb54626d01b289b889eda59423ebe98a5c4" translate="yes" xml:space="preserve">
          <source>This asks &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; to create and return a new answer. In our promise handler, the returned answer is set as the description of the local end of the connection by calling &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;setLocalDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;に新しい回答を作成して返すように要求します。私たちのpromiseハンドラーでは、返された回答は、&lt;a href=&quot;setlocaldescription&quot;&gt; &lt;code&gt;setLocalDescription()&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、接続のローカルエンドの説明として設定されます。</target>
        </trans-unit>
        <trans-unit id="c7fedaabcf76bf3a6947d615bf4395bef476764f" translate="yes" xml:space="preserve">
          <source>This attribute is only populated if the constructor is called with the &lt;code&gt;requestShipping&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;requestShipping&lt;/code&gt; was &lt;code&gt;false&lt;/code&gt; (or missing), &lt;code&gt;shippingOption&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, even the developer provides a selected a shipping option.</source>
          <target state="translated">この属性は、 &lt;code&gt;requestShipping&lt;/code&gt; フラグを &lt;code&gt;true&lt;/code&gt; に設定してコンストラクターが呼び出された場合にのみ入力されます。場合 &lt;code&gt;requestShipping&lt;/code&gt; がした &lt;code&gt;false&lt;/code&gt; （または欠落）、 &lt;code&gt;shippingOption&lt;/code&gt; は返す &lt;code&gt;null&lt;/code&gt; しても、開発者が選択した配送オプションを提供し、。</target>
        </trans-unit>
        <trans-unit id="fb3de18807c8e44ed053ce8dc7fcf07cc48ff547" translate="yes" xml:space="preserve">
          <source>This attribute supports providing multiple certificates because even though a given DTLS connection uses only one certificate, providing multiple certificates allows support for multiple encryption algorithms. The implementation of &lt;code&gt;RTCPeerConnection&lt;/code&gt; will choose which certificate to use based on the algorithms it and the remote peer support, as determined during DTLS handshake.</source>
          <target state="translated">特定のDTLS接続が1つの証明書しか使用しない場合でも、この属性は複数の証明書の提供をサポートします。複数の証明書を提供すると、複数の暗号化アルゴリズムをサポートできるようになります。 &lt;code&gt;RTCPeerConnection&lt;/code&gt; の実装は、DTLSハンドシェイク中に決定されたアルゴリズムとリモートピアサポートに基づいて、使用する証明書を選択します。</target>
        </trans-unit>
        <trans-unit id="cec279e233032970cd34bfb7d06d52f36ff678e4" translate="yes" xml:space="preserve">
          <source>This attribute was added to the specification in SVG 2.</source>
          <target state="translated">この属性は SVG 2 で仕様に追加された。</target>
        </trans-unit>
        <trans-unit id="97a5a54267dc44fd4ba09d929b4cedc1ac27a52c" translate="yes" xml:space="preserve">
          <source>This basically means all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed arrays&lt;/a&gt; like Int32Array etc.</source>
          <target state="translated">これは基本的に、Int32Arrayなどのすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;型付き配列を&lt;/a&gt;意味します。</target>
        </trans-unit>
        <trans-unit id="fd8db3ab5c47451d5e2297a4363a832a818ff586" translate="yes" xml:space="preserve">
          <source>This begins by creating an offer by calling &lt;a href=&quot;createoffer&quot;&gt;&lt;code&gt;createOffer()&lt;/code&gt;&lt;/a&gt;; when that succeeds, we call &lt;code&gt;setLocalDescription()&lt;/code&gt;. The fulfillment handler for that promise can then send the newly-created offer along to the other peer using the signaling server.</source>
          <target state="translated">まず、&lt;a href=&quot;createoffer&quot;&gt; &lt;code&gt;createOffer()&lt;/code&gt; を&lt;/a&gt;呼び出してオファーを作成します。それが成功し &lt;code&gt;setLocalDescription()&lt;/code&gt; 、setLocalDescription（）を呼び出します。そのpromiseのフルフィルメントハンドラーは、シグナリングサーバーを使用して、新しく作成されたオファーを他のピアに送信できます。</target>
        </trans-unit>
        <trans-unit id="82151d74cf7c1600d034122acff7b72b21e30a60" translate="yes" xml:space="preserve">
          <source>This begins by setting up an &lt;code&gt;options&lt;/code&gt; object containing the settings for the observer. We want to watch for changes in visibility of the target element relative to the document's viewport, so &lt;code&gt;root&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. We need no margin, so the margin offset, &lt;code&gt;rootMargin&lt;/code&gt;, is specified as &quot;0px&quot;. This causes the observer to watch for changes in the intersection between the target element's bounds and those of the viewport, without any added (or subtracted) space.</source>
          <target state="translated">まず、オブザーバーの設定を含む &lt;code&gt;options&lt;/code&gt; オブジェクトを設定します。ドキュメントのビューポートに対するターゲット要素の可視性の変化を監視したいので、 &lt;code&gt;root&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; です。マージンは必要ないため、マージンオフセット &lt;code&gt;rootMargin&lt;/code&gt; は「0px」として指定されます。これにより、オブザーバーは、追加された（または差し引かれた）スペースなしで、ターゲット要素の境界とビューポートの境界の間の交差の変化を監視します。</target>
        </trans-unit>
        <trans-unit id="99ca1b43323f1977f57351c6684de783d379663c" translate="yes" xml:space="preserve">
          <source>This begins with a basic sanity check: is the user even connected? If there's no &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, they obviously can't make a call. Then the name of the user that was clicked upon is obtained from the event target's &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;textContent&lt;/code&gt;&lt;/a&gt; property, and we check to be sure that it's not the same user that's trying to start the call.</source>
          <target state="translated">これは、基本的な健全性チェックから始まります。ユーザーは接続されていますか？&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;がない場合、それらは明らかに呼び出しを行うことができません。次に、クリックされたユーザーの名前がイベントターゲットの&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;textContent&lt;/code&gt; &lt;/a&gt;プロパティから取得され、呼び出しを開始しようとしているユーザーと同じでないことを確認します。</target>
        </trans-unit>
        <trans-unit id="f4353405496d2d0c6341382b41452f362103152c" translate="yes" xml:space="preserve">
          <source>This behavior has been changed in the latest spec, and if omitted, the method will act as if the value of &lt;code&gt;deep&lt;/code&gt; was &lt;code&gt;false&lt;/code&gt;. Though it's still optional, you should always provide the &lt;code&gt;deep&lt;/code&gt; argument both for backward and forward compatibility. With Gecko 28.0 (Firefox 28 / Thunderbird 28 / SeaMonkey 2.25 / Firefox OS 1.3)), the console warned developers not to omit the argument. Starting with Gecko 29.0 (Firefox 29 / Thunderbird 29 / SeaMonkey 2.26)), a shallow clone is defaulted instead of a deep clone.</source>
          <target state="translated">この動作は最新の仕様で変更されており、省略した場合、メソッドは &lt;code&gt;deep&lt;/code&gt; の値が &lt;code&gt;false&lt;/code&gt; であるかのように動作します。これはまだオプションですが、後方互換性と前方互換性の両方のために常に &lt;code&gt;deep&lt;/code&gt; 引数を提供する必要があります。Gecko 28.0（Firefox 28 / Thunderbird 28 / SeaMonkey 2.25 / Firefox OS 1.3）では、コンソールは引数を省略しないよう開発者に警告しました。Gecko 29.0（Firefox 29 / Thunderbird 29 / SeaMonkey 2.26）以降、ディープクローンの代わりにシャロークローンがデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="a93c69779dba687c18b36481dfe58c6ef4028d03" translate="yes" xml:space="preserve">
          <source>This builds an object containing the candidate, then sends it to the other peer using the &lt;code&gt;sendToServer()&lt;/code&gt; function previously described in &lt;a href=&quot;#Sending_messages_to_the_signaling_server&quot;&gt;Sending messages to the signaling server&lt;/a&gt;. The message's properties are:</source>
          <target state="translated">これにより、候補を含むオブジェクトが構築され、前述の&lt;a href=&quot;#Sending_messages_to_the_signaling_server&quot;&gt;「シグナリングサーバーへのメッセージの送信」で&lt;/a&gt;説明した &lt;code&gt;sendToServer()&lt;/code&gt; 関数を使用して、候補が他のピアに送信されます。メッセージのプロパティは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9fc44bf6799b291b1c3d76edb9ae44ab2f3c1a64" translate="yes" xml:space="preserve">
          <source>This builds the array of thresholds&amp;mdash;each of which is a ratio between 0.0 and 1.0, by pushing the value &lt;code&gt;i/numSteps&lt;/code&gt; onto the &lt;code&gt;thresholds&lt;/code&gt; array for each integer &lt;code&gt;i&lt;/code&gt; between 1 and &lt;code&gt;numSteps&lt;/code&gt;. It also pushes 0 to include that value. The result, given the default value of &lt;code&gt;numSteps&lt;/code&gt; (20), is the following list of thresholds:</source>
          <target state="translated">これにより、しきい値の配列が作成されます。それぞれのしきい値は0.0と1.0の間の比率であり、1と &lt;code&gt;numSteps&lt;/code&gt; の間の各整数 &lt;code&gt;i&lt;/code&gt; の &lt;code&gt;thresholds&lt;/code&gt; 配列に値 &lt;code&gt;i/numSteps&lt;/code&gt; をプッシュします。また、0をプッシュしてその値を含めます。デフォルト値の &lt;code&gt;numSteps&lt;/code&gt; （20）を指定すると、結果は次のしきい値のリストになります。</target>
        </trans-unit>
        <trans-unit id="180433b2bbb7f8f1221c9a3f1700ddd55e0a0926" translate="yes" xml:space="preserve">
          <source>This callback does nothing unless it's the first time it's been called; this is tested by looking at the value of our &lt;code&gt;streaming&lt;/code&gt; variable, which is &lt;code&gt;false&lt;/code&gt; the first time this method is run.</source>
          <target state="translated">このコールバックは、最初に呼び出されたとき以外は何もしません。これは、 &lt;code&gt;streaming&lt;/code&gt; 変数の値を調べることによってテストされます。これは、このメソッドが初めて実行されるときに &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="2e9fee7c1c67c6ae29ef2f953e8b7141de0f8d91" translate="yes" xml:space="preserve">
          <source>This calls &lt;a href=&quot;event/preventdefault&quot;&gt;&lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/a&gt; to keep the browser from continuing to process the touch event (this also prevents a mouse event from also being delivered). Then we get the context and pull the list of changed touch points out of the event's &lt;a href=&quot;touchevent/changedtouches&quot;&gt;&lt;code&gt;TouchEvent.changedTouches&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">これは&lt;a href=&quot;event/preventdefault&quot;&gt; &lt;code&gt;event.preventDefault()&lt;/code&gt; &lt;/a&gt;を呼び出して、ブラウザーがタッチイベントの処理を続行しないようにします（これにより、マウスイベントも配信されなくなります）。次に、コンテキストを取得し、変更されたタッチポイントのリストをイベントの&lt;a href=&quot;touchevent/changedtouches&quot;&gt; &lt;code&gt;TouchEvent.changedTouches&lt;/code&gt; &lt;/a&gt;プロパティから引き出します。</target>
        </trans-unit>
        <trans-unit id="e81f604cb7d7eed24c112dcd1c2b4dfb6efd24c4" translate="yes" xml:space="preserve">
          <source>This can also be thought of as a path which is relative to the root directory, with a &quot;/&quot; prepended to it to make it absolute.</source>
          <target state="translated">これは、ルートディレクトリからの相対パスと考えることもできます。</target>
        </trans-unit>
        <trans-unit id="f5c0bfcc105615d208b04badb928fb29787f0133" translate="yes" xml:space="preserve">
          <source>This can be also useful for logging and debugging purposes.</source>
          <target state="translated">また、ロギングやデバッグの目的にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="eae0e0d0bec4036d3982f94038aa75527b88b50a" translate="yes" xml:space="preserve">
          <source>This can be used, for example, as a source for a &lt;a href=&quot;../webrtc_api&quot;&gt;WebRTC&lt;/a&gt;&lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、たとえば&lt;a href=&quot;../webrtc_api&quot;&gt;WebRTC &lt;/a&gt;&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;ソースとして使用できます。</target>
        </trans-unit>
        <trans-unit id="c00e67da12a1a56ef21b3d6902e2326f5d19c0e9" translate="yes" xml:space="preserve">
          <source>This can be useful for routing to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, for example. See also this &lt;a href=&quot;https://codepen.io/peterj35/pen/PEdLKx&quot;&gt;codepen demo&lt;/a&gt;.</source>
          <target state="translated">これは、たとえば&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素へのルーティングに役立ちます。この&lt;a href=&quot;https://codepen.io/peterj35/pen/PEdLKx&quot;&gt;codepenデモ&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="9e46eb11b2376b3414d8c50362bdc8b864fda03a" translate="yes" xml:space="preserve">
          <source>This can complicate things, since you don't necessarily know what the size limits are for various user agents, and how they respond when a larger message is sent or received. Even when user agents share the same underlying library for handling Stream Control Transmission Protocol (SCTP) data, there can still be variations due to how the library is used. For example, both Firefox and Google Chrome use the &lt;code&gt;&lt;a href=&quot;https://github.com/sctplab/usrsctp&quot;&gt;usrsctp&lt;/a&gt;&lt;/code&gt; library to implement SCTP, but there are still situations in which data transfer on an &lt;code&gt;RTCDataChannel&lt;/code&gt; can fail due to differences in how they call the library and react to errors it returns.</source>
          <target state="translated">これは、さまざまなユーザーエージェントのサイズ制限と、より大きなメッセージが送受信されたときのエージェントの応答が必ずしもわからないため、状況が複雑になる可能性があります。ユーザーエージェントがストリームコントロールトランスミッションプロトコル（SCTP）データを処理するために同じ基礎となるライブラリを共有する場合でも、ライブラリの使用方法により、バリエーションが存在する可能性があります。例えば、FirefoxやGoogle Chromeの両方が使用 &lt;code&gt;&lt;a href=&quot;https://github.com/sctplab/usrsctp&quot;&gt;usrsctp&lt;/a&gt;&lt;/code&gt; SCTPを実装するためのライブラリを、しかし上のデータ転送する状況まだあります &lt;code&gt;RTCDataChannel&lt;/code&gt; が、彼らはライブラリを呼び出すと、それが返すエラーのためにどのように反応するかの違いに起因する失敗する可能性がありますが。</target>
        </trans-unit>
        <trans-unit id="f02a53b5319c62da1b98a163edd5faad95cb6b24" translate="yes" xml:space="preserve">
          <source>This can happen for a number of reasons:</source>
          <target state="translated">これには様々な理由が考えられます。</target>
        </trans-unit>
        <trans-unit id="b473495e2c11a7353d6192ff2d917a07e2939a15" translate="yes" xml:space="preserve">
          <source>This can happen in a couple of situations:</source>
          <target state="translated">これは、いくつかの状況で起こる可能性があります。</target>
        </trans-unit>
        <trans-unit id="52af7bbde8a195872fbc1d8f5bbc65c427b1c413" translate="yes" xml:space="preserve">
          <source>This can have a big effect if the sound is very directional &amp;mdash; controlled by the three cone-related attributes &lt;a href=&quot;coneinnerangle&quot;&gt;&lt;code&gt;PannerNode.coneInnerAngle&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;coneouterangle&quot;&gt;&lt;code&gt;PannerNode.coneOuterAngle&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;coneoutergain&quot;&gt;&lt;code&gt;PannerNode.coneOuterGain&lt;/code&gt;&lt;/a&gt;. In such a case, a sound pointing away from the listener can be very quiet or even silent.</source>
          <target state="translated">サウンドが非常に指向性がある場合、これは大きな効果を持つ可能性があります&amp;mdash;コーン関連の3つの属性&lt;a href=&quot;coneinnerangle&quot;&gt; &lt;code&gt;PannerNode.coneInnerAngle&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;coneouterangle&quot;&gt; &lt;code&gt;PannerNode.coneOuterAngle&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;coneoutergain&quot;&gt; &lt;code&gt;PannerNode.coneOuterGain&lt;/code&gt; &lt;/a&gt;によって制御されます。このような場合、リスナーから離れた方向を向く音は、非常に静かな場合もあれば、静かな場合もあります。</target>
        </trans-unit>
        <trans-unit id="5dffbf5f113f41683ecfe17e72307e4ec4b2f4ec" translate="yes" xml:space="preserve">
          <source>This can make things a bit harder for any users of the DOM who want to iterate through content, excluding the whitespace.</source>
          <target state="translated">これは、コンテンツを反復処理したいと考えている DOM のユーザーにとっては、空白部分を除いて、物事を少し難しくすることができます。</target>
        </trans-unit>
        <trans-unit id="9cfc9983ec11bc1664f2bd5270a9c176951714bb" translate="yes" xml:space="preserve">
          <source>This candidate examines the &lt;code&gt;priority&lt;/code&gt; of the candidate and, if it's greater than the priority of a previously-seen candidate, remembers the candidate for later use.</source>
          <target state="translated">この候補者は候補者の &lt;code&gt;priority&lt;/code&gt; を調べ、それが以前に見た候補者の優先順位よりも高い場合は、後で使用するために候補者を記憶します。</target>
        </trans-unit>
        <trans-unit id="23a444dc6e6b85ec15f5f290c1c5f03b014f6bb1" translate="yes" xml:space="preserve">
          <source>This causes a context that is currently using a hardware-accelerated backend to fallback to a software one. All state should be preserved.</source>
          <target state="translated">これにより、現在ハードウェアアクセラレーションされたバックエンドを使用しているコンテキストがソフトウェアにフォールバックされます。すべての状態は保持されるべきです。</target>
        </trans-unit>
        <trans-unit id="90dc05814d2d0a1e15cf2acc763576a2d3361f30" translate="yes" xml:space="preserve">
          <source>This change is implemented in Chrome since version 46.0 and Firefox since version 48.0.</source>
          <target state="translated">この変更は、Chromeではバージョン46.0から、Firefoxではバージョン48.0から実装されています。</target>
        </trans-unit>
        <trans-unit id="46d584e35266d56f7d8dc3929fc14f9882edbbac" translate="yes" xml:space="preserve">
          <source>This changes Alice&amp;rsquo;s color and her transform&amp;rsquo;s rotation over 3 seconds at a constant (linear) rate and loops infinitely. In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;@keyframes&lt;/a&gt; block we can see that 30% of the way through each loop (about .9 seconds in), Alice&amp;rsquo;s color changes from black to a deep burgundy then back again by the end of the loop.</source>
          <target state="translated">これにより、アリスの色と彼女のトランスフォームの回転が3秒間一定（線形）レートで変化し、無限にループします。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;@keyframes&lt;/a&gt;我々は各ループを通して道の30％を見ることができるブロック（で0.9秒程度）、ループの終わりまでに、次いで再び深いバーガンディ黒からアリスの色が変化します。</target>
        </trans-unit>
        <trans-unit id="634c4bd1d74eb673f7dd805adbc6b98fd7845e78" translate="yes" xml:space="preserve">
          <source>This chapter describes the DOM Event Model. The &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event&quot;&gt;Event&lt;/a&gt; interface itself is described, as well as the interfaces for event registration on nodes in the DOM, and &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;event listeners&lt;/a&gt;, and several longer examples that show how the various event interfaces relate to one another.</source>
          <target state="translated">この章では、DOMイベントモデルについて説明します。&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event&quot;&gt;イベント&lt;/a&gt;自体インタフェースは、DOM内のノードにイベント登録のためのインターフェース、および、ならびに、記載されている&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;イベントリスナー&lt;/a&gt;各種イベントインターフェイスが互いにどのように関係するかを示し、そしてより長いいくつかの例。</target>
        </trans-unit>
        <trans-unit id="1e29f1099cd73c730ddc8da06c6ba44383b268d3" translate="yes" xml:space="preserve">
          <source>This chapter describes the DOM Event Model. The &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event&quot;&gt;Event&lt;/a&gt; interface itself is described, as well as the interfaces for event registration on nodes in the DOM, and &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;event listeners&lt;/a&gt;, and several longer examples that show how the various event interfaces relate to one another.</source>
          <target state="translated">この章では、DOMイベントモデルについて説明します。&lt;a href=&quot;https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event&quot;&gt;イベント&lt;/a&gt;自体インタフェースは、DOM内のノードにイベント登録のためのインターフェース、および、ならびに、記載されている&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;イベントリスナー&lt;/a&gt;各種イベントインターフェイスが互いにどのように関係するかを示し、そしてより長いいくつかの例。</target>
        </trans-unit>
        <trans-unit id="8a2851599dc3a3bfd54ca2b61870665cb13558c5" translate="yes" xml:space="preserve">
          <source>This chapter provides some longer examples of web and XML development using the DOM. Wherever possible, the examples use common APIs, tricks, and patterns in JavaScript for manipulating the document object.</source>
          <target state="translated">この章では、DOM を使った Web や XML 開発の長い例をいくつか紹介します。可能な限り、ドキュメントオブジェクトを操作するための JavaScript の共通の API、トリック、パターンを使用しています。</target>
        </trans-unit>
        <trans-unit id="f879d3c7fe3e7e9484fd1c6af44389f38f0271df" translate="yes" xml:space="preserve">
          <source>This character instructs the dialing process to pause for two seconds before sending the next character in the buffer.</source>
          <target state="translated">この文字は、バッファ内の次の文字を送信する前に、ダイヤル処理を2秒間一時停止するように指示します。</target>
        </trans-unit>
        <trans-unit id="1b680af1fae190e09f829ae224af0be4a6ee1dbc" translate="yes" xml:space="preserve">
          <source>This code &amp;mdash; a snippet taken from the full example &lt;a href=&quot;../webgl_api/basic_2d_animation_example&quot;&gt;A basic 2D WebGL animation example&lt;/a&gt; &amp;mdash; shows the use of &lt;code&gt;enableVertexArray()&lt;/code&gt; to activate the attribute that will be used by the WebGL layer to pass individual vertexes from the vertex buffer into the vertex shader function.</source>
          <target state="translated">このコード（完全な例から抜粋したスニペット&lt;a href=&quot;../webgl_api/basic_2d_animation_example&quot;&gt;基本的な2D WebGLアニメーションの例&lt;/a&gt; &lt;code&gt;enableVertexArray()&lt;/code&gt; は、enableVertexArray（）を使用して、頂点バッファーから頂点シェーダー関数に個々の頂点を渡すためにWebGLレイヤーで使用される属性をアクティブにする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="611e2d96aba46178458dc3ec24df6c41bfa3e6fa" translate="yes" xml:space="preserve">
          <source>This code actually sets up the observation process.</source>
          <target state="translated">このコードは、実際に観測プロセスを設定します。</target>
        </trans-unit>
        <trans-unit id="4a66f5221b744c34b5d51ac4cfcbf33a1c8f7987" translate="yes" xml:space="preserve">
          <source>This code adds simple support for tabs to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/a&gt; elements by making the tab key insert two space characters when either constraint edit box is focused.</source>
          <target state="translated">このコードは、いずれかの制約編集ボックスがフォーカスされている場合、タブキーに2つのスペース文字を挿入させることにより、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt; &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にタブの簡単なサポートを追加します。</target>
        </trans-unit>
        <trans-unit id="0185603a88201b725431f8b6bb6bbf8be62a4c54" translate="yes" xml:space="preserve">
          <source>This code block waits for an &lt;a href=&quot;../installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; to fire, then calls &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; to handle the install process for the app. This consists of calling &lt;a href=&quot;../cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open&lt;/code&gt;&lt;/a&gt; to create a new cache, then using &lt;a href=&quot;add&quot;&gt;&lt;code&gt;Cache.add&lt;/code&gt;&lt;/a&gt; to add an asset to it.</source>
          <target state="translated">このコードブロックは、&lt;a href=&quot;../installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;../extendableevent/waituntil&quot;&gt; &lt;code&gt;waitUntil()&lt;/code&gt; &lt;/a&gt;するのを待ってから、waitUntil（）を呼び出して、アプリのインストールプロセスを処理します。これは、&lt;a href=&quot;../cachestorage/open&quot;&gt; &lt;code&gt;CacheStorage.open&lt;/code&gt; &lt;/a&gt;を呼び出して新しいキャッシュを作成し、次に&lt;a href=&quot;add&quot;&gt; &lt;code&gt;Cache.add&lt;/code&gt; &lt;/a&gt;を使用してアセットを追加することで構成されます。</target>
        </trans-unit>
        <trans-unit id="6384e63587316d25bbf1ff41234ea414dc931469" translate="yes" xml:space="preserve">
          <source>This code block waits for an &lt;a href=&quot;../installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; to fire, then runs &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; to handle the install process for the app. This consists of calling &lt;a href=&quot;../cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open&lt;/code&gt;&lt;/a&gt; to create a new cache, then using &lt;code&gt;addAll()&lt;/code&gt; to add a series of assets to it.</source>
          <target state="translated">このコードブロックは、&lt;a href=&quot;../installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;../extendableevent/waituntil&quot;&gt; &lt;code&gt;waitUntil()&lt;/code&gt; &lt;/a&gt;するのを待ってから、waitUntil（）を実行してアプリのインストールプロセスを処理します。これは、&lt;a href=&quot;../cachestorage/open&quot;&gt; &lt;code&gt;CacheStorage.open&lt;/code&gt; &lt;/a&gt;を呼び出して新しいキャッシュを作成し、次に &lt;code&gt;addAll()&lt;/code&gt; を使用して一連のアセットをキャッシュに追加することで構成されます。</target>
        </trans-unit>
        <trans-unit id="ccf49c4b0c557a62c2a6d9d28fd80279db261752" translate="yes" xml:space="preserve">
          <source>This code checks for the existence of the &lt;code&gt;requestFullscreen()&lt;/code&gt; method before calling it.</source>
          <target state="translated">このコードは、呼び出す前に &lt;code&gt;requestFullscreen()&lt;/code&gt; メソッドの存在を確認します。</target>
        </trans-unit>
        <trans-unit id="c84361cc7c679cfeaaee25ffea164fc66e9b0243" translate="yes" xml:space="preserve">
          <source>This code checks if the browser supports service workers.</source>
          <target state="translated">このコードは、ブラウザがサービスワーカーをサポートしているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="0e9cb27c1ae8e5986b59de0eef32a4a080ec8b0f" translate="yes" xml:space="preserve">
          <source>This code configures a data channel to receive binary data in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; objects, and establishes a listener for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; events which constructs a string representing the received data as a list of hexadecimal byte values.</source>
          <target state="translated">このコードは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトでバイナリデータを受信するようにデータチャネルを構成し、受信したデータを表す文字列を16進バイト値のリストとして構築する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; イベントのリスナーを確立します。</target>
        </trans-unit>
        <trans-unit id="2c56ed069eb6be154e45f277af140e3f0d7f9ba8" translate="yes" xml:space="preserve">
          <source>This code creates a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event on the &lt;a href=&quot;window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; which in turn adds the needed &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event handler to the &quot;Donate Now&quot; button so that clicking it starts the payment process.</source>
          <target state="translated">このコードは、&lt;a href=&quot;window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを作成します。これにより、必要な &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントハンドラーが[今すぐ寄付]ボタンに追加され、クリックすると支払いプロセスが開始されます。</target>
        </trans-unit>
        <trans-unit id="ca5692b0b41d96ff65b3a261e09be32f3374dcb3" translate="yes" xml:space="preserve">
          <source>This code creates a new &lt;a href=&quot;paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt;, providing the supported handlers and payment options we set up above, as well as additional options (in this case, that we want to ask for shipping information).</source>
          <target state="translated">このコードは、新しい&lt;a href=&quot;paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest&lt;/code&gt; を&lt;/a&gt;作成し、上記で設定したサポートされているハンドラーと支払いオプション、および追加のオプション（この場合は配送情報を要求する）を提供します。</target>
        </trans-unit>
        <trans-unit id="02b09a94925750312737f4a46e5baa8c2e07bebb" translate="yes" xml:space="preserve">
          <source>This code example illustrates the use of the &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;item&quot;&gt;&lt;code&gt;item&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">このコード例は、&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; &lt;/a&gt;インターフェースの&lt;a href=&quot;item&quot;&gt; &lt;code&gt;item&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="2670a11ac1873da6ca59a1a0e535103a53263594" translate="yes" xml:space="preserve">
          <source>This code fetches the incoming video &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;&quot;received_video&quot;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; attribute, then calls the stream's &lt;a href=&quot;../mediastream/gettracks&quot;&gt;&lt;code&gt;getTracks()&lt;/code&gt;&lt;/a&gt; method to get an array of the stream's tracks.</source>
          <target state="translated">このコードは、 &lt;code&gt;&quot;received_video&quot;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; 属性から着信ビデオ&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; を&lt;/a&gt;フェッチし、ストリームの&lt;a href=&quot;../mediastream/gettracks&quot;&gt; &lt;code&gt;getTracks()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、ストリームのトラックの配列を取得します。</target>
        </trans-unit>
        <trans-unit id="325f36fb73c19a6f4712bffae7749c15827d8475" translate="yes" xml:space="preserve">
          <source>This code finds descendant elements with the &lt;code&gt;&quot;colorbox&quot;&lt;/code&gt; class, adds the class &lt;code&gt;&quot;hueframe&quot;&lt;/code&gt;, by calling &lt;code&gt;item(0), &lt;/code&gt;then removes &lt;code&gt;&quot;colorbox&quot; &lt;/code&gt;(using array notation). Another element (if any are left) will then become &lt;code&gt;item(0)&lt;/code&gt;.</source>
          <target state="translated">このコードは、 &lt;code&gt;&quot;colorbox&quot;&lt;/code&gt; クラスを持つ子孫要素を見つけ、 &lt;code&gt;item(0), &lt;/code&gt; 呼び出してクラス &lt;code&gt;&quot;hueframe&quot;&lt;/code&gt; 追加し、次に &lt;code&gt;&quot;colorbox&quot; &lt;/code&gt; 配列表記を使用して」「colorbox」を削除します。別の要素（残っている場合）は &lt;code&gt;item(0)&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="1a51cb8b9c83238a78ae3c50c0a9acda7e8c7d19" translate="yes" xml:space="preserve">
          <source>This code finds the ad's timer using its ID, &lt;code&gt;&quot;timer&quot;&lt;/code&gt;, and computes the number of seconds elapsed by dividing the ad's &lt;code&gt;totalViewTime&lt;/code&gt; by 1000. Then it calculates the number of minutes and seconds elapsed before setting the timer's &lt;a href=&quot;../htmlelement/innertext&quot;&gt;&lt;code&gt;innerText&lt;/code&gt;&lt;/a&gt; to a string representing that time in the form m:ss. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart&quot;&gt;&lt;code&gt;String.padStart()&lt;/code&gt;&lt;/a&gt; method is used to ensure that the number of seconds is padded out to two digits if it's less than 10.</source>
          <target state="translated">このコードは、ID &lt;code&gt;&quot;timer&quot;&lt;/code&gt; を使用して広告のタイマーを見つけ、広告の &lt;code&gt;totalViewTime&lt;/code&gt; を1000で割ることによって経過した秒数を計算します。次に、タイマーの&lt;a href=&quot;../htmlelement/innertext&quot;&gt; &lt;code&gt;innerText&lt;/code&gt; &lt;/a&gt;をその時間を表す文字列に設定する前に経過した分と秒の数を計算しますm：ssの形式。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart&quot;&gt; &lt;code&gt;String.padStart()&lt;/code&gt; &lt;/a&gt;メソッドは、それが10未満だ場合の秒数を2桁にパディングされることを保証するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4cfa1e37607e13d81dc945a13340c7ec95c9126a" translate="yes" xml:space="preserve">
          <source>This code gives us a result like the following:</source>
          <target state="translated">このコードでは、以下のような結果が得られます。</target>
        </trans-unit>
        <trans-unit id="fdfcfa130b47e8ae408b9ddc4119c70412560d56" translate="yes" xml:space="preserve">
          <source>This code grabs references to the elements in the XHTML document that are of particular interest, namely the &lt;code&gt;video&lt;/code&gt; element and the two &lt;code&gt;canvas&lt;/code&gt; elements. It also fetches references to the graphics contexts for each of the two canvases. These will be used when we're actually doing the chroma-keying effect.</source>
          <target state="translated">このコードは、特に重要なXHTMLドキュメント内の要素、つまり、 &lt;code&gt;video&lt;/code&gt; 要素と2つの &lt;code&gt;canvas&lt;/code&gt; 要素への参照を取得します。また、2つのキャンバスそれぞれのグラフィックスコンテキストへの参照も取得します。これらは、クロマキーイング効果を実際に行うときに使用されます。</target>
        </trans-unit>
        <trans-unit id="7bdc075fa8dce1e6680fce6dd790f227e8ba7a16" translate="yes" xml:space="preserve">
          <source>This code is analogous to the &lt;code&gt;icecandidate&lt;/code&gt; event handler for the caller, seen in &lt;a href=&quot;#Adding_candidates_to_the_caller&quot;&gt;Adding candidates to the caller&lt;/a&gt; above.</source>
          <target state="translated">このコードは&lt;a href=&quot;#Adding_candidates_to_the_caller&quot;&gt;、&lt;/a&gt;上記の呼び出し元への候補の追加に示されている、呼び出し元の &lt;code&gt;icecandidate&lt;/code&gt; イベントハンドラーに似ています。</target>
        </trans-unit>
        <trans-unit id="9390ceda27316274f56344fe186d0a04ebf0440b" translate="yes" xml:space="preserve">
          <source>This code is called by the event handler above when the user hits the</source>
          <target state="translated">このコードは、ユーザーが</target>
        </trans-unit>
        <trans-unit id="d9a093440844702b770d08ddddb47b9f97a54de9" translate="yes" xml:space="preserve">
          <source>This code is called when the user hits the</source>
          <target state="translated">このコードは、ユーザーが</target>
        </trans-unit>
        <trans-unit id="fb9674e620e6fa142b0da4c3011ee9f1b68a2a71" translate="yes" xml:space="preserve">
          <source>This code is excerpted from our &lt;a href=&quot;https://github.com/mdn/web-speech-api/blob/master/speech-color-changer/script.js&quot;&gt;Speech color changer&lt;/a&gt; example.</source>
          <target state="translated">このコードは、&lt;a href=&quot;https://github.com/mdn/web-speech-api/blob/master/speech-color-changer/script.js&quot;&gt;スピーチカラーチェンジャーの&lt;/a&gt;例から抜粋したものです。</target>
        </trans-unit>
        <trans-unit id="3307b4570270ca003e1b156447546376026d71f8" translate="yes" xml:space="preserve">
          <source>This code is similar, except that it will be called automatically whenever the server sends a message with the &lt;code&gt;event&lt;/code&gt; field set to &quot;ping&quot;; it then parses the JSON in the &lt;code&gt;data&lt;/code&gt; field and outputs that information.</source>
          <target state="translated">このコードは似ていますが、サーバーが &lt;code&gt;event&lt;/code&gt; フィールドを「ping」に設定してメッセージを送信するたびに自動的に呼び出される点が異なります。次に、 &lt;code&gt;data&lt;/code&gt; フィールドのJSONを解析し、その情報を出力します。</target>
        </trans-unit>
        <trans-unit id="26862a0825b89781d69fe8df42b99f67288528dc" translate="yes" xml:space="preserve">
          <source>This code is very similar to what we did in the &lt;code&gt;invite()&lt;/code&gt; function back in &lt;a href=&quot;#Starting_a_call&quot;&gt;Starting a call&lt;/a&gt;. It starts by creating and configuring an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; using our &lt;code&gt;createPeerConnection()&lt;/code&gt; function. Then it takes the SDP offer from the received &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; message and uses it to create a new &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object representing the caller's session description.</source>
          <target state="translated">このコードは&lt;a href=&quot;#Starting_a_call&quot;&gt;、「呼び出しの開始」の&lt;/a&gt;「 &lt;code&gt;invite()&lt;/code&gt; 」関数で行ったものとよく似ています。&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;createPeerConnection()&lt;/code&gt; 関数を使用してRTCPeerConnectionを作成および構成します。次に、受信した &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; メッセージからSDPオファーを取得し、それを使用して、発信者のセッションの説明を表す新しい&lt;a href=&quot;../rtcsessiondescription&quot;&gt; &lt;code&gt;RTCSessionDescription&lt;/code&gt; &lt;/a&gt;オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="45d87c6a0c71d130e985162fc3c46b6df402989b" translate="yes" xml:space="preserve">
          <source>This code lets you handle things differently when the window is very narrow.</source>
          <target state="translated">このコードを使うと、ウィンドウが非常に狭い場合に別の処理をすることができます。</target>
        </trans-unit>
        <trans-unit id="81dd9019c9d41bdaad185b29dd84ba24afcb375f" translate="yes" xml:space="preserve">
          <source>This code listens for incoming messages (that is, notices from the server that do not have an &lt;code&gt;event&lt;/code&gt; field on them) and appends the message text to a list in the document's HTML.</source>
          <target state="translated">このコードは着信メッセージ（つまり、 &lt;code&gt;event&lt;/code&gt; フィールドのないサーバーからの通知）をリッスンし、メッセージテキストをドキュメントのHTMLのリストに追加します。</target>
        </trans-unit>
        <trans-unit id="356c1026755b1461cf3cda8bab14f1e29efba3c8" translate="yes" xml:space="preserve">
          <source>This code now looks at the pending message to see if it has a &lt;code&gt;target&lt;/code&gt; property. If that property is present, it specifies the username of the client to which the message is to be sent, and we call &lt;code&gt;sendToOneUser()&lt;/code&gt; to send the message to them. Otherwise, the message is broadcast to all users by iterating over the connection list, sending the message to each user.</source>
          <target state="translated">このコードは、保留中のメッセージを調べて、 &lt;code&gt;target&lt;/code&gt; プロパティがあるかどうかを確認します。そのプロパティが存在する場合は、メッセージの送信先となるクライアントのユーザー名を指定し、 &lt;code&gt;sendToOneUser()&lt;/code&gt; を呼び出してメッセージを送信します。それ以外の場合、メッセージは接続リストを反復してすべてのユーザーにブロードキャストされ、各ユーザーにメッセージが送信されます。</target>
        </trans-unit>
        <trans-unit id="56935f567bea894577b24035ebabc9f2d18c6518" translate="yes" xml:space="preserve">
          <source>This code obtains a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;, then gets a reference to its 2D graphics context.</source>
          <target state="translated">このコードは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;への参照を取得してから、その2Dグラフィックスコンテキストへの参照を取得します。</target>
        </trans-unit>
        <trans-unit id="48af5c95278d984b1b40acc81c2624176165534e" translate="yes" xml:space="preserve">
          <source>This code sample is inspired by the Web Dictaphone demo. Some lines have been omitted for brevity; &lt;a href=&quot;https://github.com/mdn/web-dictaphone/&quot;&gt;refer to the source&lt;/a&gt; for the complete code.</source>
          <target state="translated">このコードサンプルは、Web Dictaphoneデモから発想を得ています。一部の行は簡潔にするために省略されています。完全なコードについては&lt;a href=&quot;https://github.com/mdn/web-dictaphone/&quot;&gt;、ソース&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9965db5f9d4867c586d2e69e1730daccffadcc8" translate="yes" xml:space="preserve">
          <source>This code sets the buffer of vertexes that will be used to draw the triangles of the shape by calling &lt;a href=&quot;bindbuffer&quot;&gt;&lt;code&gt;bindBuffer()&lt;/code&gt;&lt;/a&gt;. Then the vertex position attribute's index is obtained from the shader program by calling &lt;a href=&quot;getattriblocation&quot;&gt;&lt;code&gt;getAttribLocation()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このコードは、&lt;a href=&quot;bindbuffer&quot;&gt; &lt;code&gt;bindBuffer()&lt;/code&gt; を&lt;/a&gt;呼び出して形状の三角形を描画するために使用される頂点のバッファーを設定します。次に、頂点位置属性のインデックスが、&lt;a href=&quot;getattriblocation&quot;&gt; &lt;code&gt;getAttribLocation()&lt;/code&gt; を&lt;/a&gt;呼び出してシェーダープログラムから取得されます。</target>
        </trans-unit>
        <trans-unit id="54303dd7110d5068b33f0fd4385a696ede20a3ca" translate="yes" xml:space="preserve">
          <source>This code sets up a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; event. The event handler calls a function, &lt;code&gt;getValidationData()&lt;/code&gt;, which retrieves the data from the validation URL, then passes that data (or a promise to deliver the data) into &lt;code&gt;complete()&lt;/code&gt;.</source>
          <target state="translated">このコードは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを設定します。イベントハンドラーは、検証URLからデータを取得する関数 &lt;code&gt;getValidationData()&lt;/code&gt; を呼び出し、そのデータ（またはデータを配信するプロミス）を &lt;code&gt;complete()&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="8c857939a3eb6bed2b5adc86676c80ac61b44788" translate="yes" xml:space="preserve">
          <source>This code sets up a handler for the welcome panel's &quot;OK&quot; button that hides the welcome panel and makes the follow-up panel&amp;mdash;with the curious name &quot;awesome&quot;&amp;mdash;visible in its place.</source>
          <target state="translated">このコードは、ウェルカムパネルの[OK]ボタンのハンドラーを設定し、ウェルカムパネルを非表示にして、奇妙な名前の「フォローアップ」パネルをその場所に表示します。</target>
        </trans-unit>
        <trans-unit id="5705b4e74ea55c89499ca4aecb928913f3836141" translate="yes" xml:space="preserve">
          <source>This code sets up the global values used by the rest of the program.</source>
          <target state="translated">このコードは、プログラムの残りの部分で使用されるグローバル値を設定します。</target>
        </trans-unit>
        <trans-unit id="403a61eab5dc884a0a7cc847beefeb6d371bee80" translate="yes" xml:space="preserve">
          <source>This code shows how to get the lists of supported codecs for both sender and receiver:</source>
          <target state="translated">このコードは、送信者と受信者の両方でサポートされているコーデックのリストを取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="1fdca42e863a2ff0b1f1fb8209fe2d8f6fe0b9c0" translate="yes" xml:space="preserve">
          <source>This code snippet creates a peer connection, adds a data channel to it, and starts creating new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; (paragraph) elements each time a message arrives, with the message's contents displayed inside it. The new elements are then attached to the end of the document.</source>
          <target state="translated">このコードスニペットは、ピア接続を作成し、それにデータチャネルを追加し、メッセージが到着するたびに新しい&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; &lt;/a&gt;（段落）要素の作成を開始します。メッセージの内容はその中に表示されます。次に、新しい要素がドキュメントの最後に添付されます。</target>
        </trans-unit>
        <trans-unit id="038d9492006293f5d84b1f174207df4321acf792" translate="yes" xml:space="preserve">
          <source>This code snippet demonstrates the creation of a new &lt;code&gt;Worker&lt;/code&gt; using the &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor; it also shows how to then send a message to the worker.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した新しい &lt;code&gt;Worker&lt;/code&gt; の作成を示しています。次に、メッセージをワーカーに送信する方法も示します。</target>
        </trans-unit>
        <trans-unit id="6fc86fcd4bad8b0a50e7edecdd752779ca02cffa" translate="yes" xml:space="preserve">
          <source>This code snippet erases the entire canvas. This is commonly required at the start of each frame in an animation. The dimensions of the cleared area are set to equal the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes.</source>
          <target state="translated">このコードスニペットは、キャンバス全体を消去します。これは通常、アニメーションの各フレームの開始時に必要です。クリアされた領域の寸法は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; 属性に等しく設定されます。</target>
        </trans-unit>
        <trans-unit id="911922ed2cb63ceb8eb6261b3e16bf0191de647d" translate="yes" xml:space="preserve">
          <source>This code snippet examines a candidate's component type and dispatches the candidate to different handlers depending on the value.</source>
          <target state="translated">このコード・スニペットは、候補のコンポーネント・タイプを調べ、値に応じて異なるハンドラに候補をディスパッチします。</target>
        </trans-unit>
        <trans-unit id="5943cf2e08726b731f0ecd888f25a0b0e0696bd3" translate="yes" xml:space="preserve">
          <source>This code snippet examines the value of &lt;code&gt;protocol&lt;/code&gt; to decide if it should look at the value of &lt;a href=&quot;tcptype&quot;&gt;&lt;code&gt;tcpType&lt;/code&gt;&lt;/a&gt; to see if it's a &lt;strong&gt;simultaneous-open&lt;/strong&gt; (&lt;strong&gt;S-O&lt;/strong&gt;) candidate.</source>
          <target state="translated">このコードスニペットは、 &lt;code&gt;protocol&lt;/code&gt; の値を調べて、&lt;a href=&quot;tcptype&quot;&gt; &lt;code&gt;tcpType&lt;/code&gt; &lt;/a&gt;の値を調べて&lt;strong&gt;同時オープン&lt;/strong&gt;（&lt;strong&gt;SO&lt;/strong&gt;）候補であるかどうかを確認する必要があるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="5a3a31a855be3e97cfa673e65c564bfce766038a" translate="yes" xml:space="preserve">
          <source>This code snippet fetches the IP address and port number of the candidate, storing them into an object for future use.</source>
          <target state="translated">このコード・スニペットは、候補者の IP アドレスとポート番号を取得し、将来の使用のためにそれらをオブジェクトに格納します。</target>
        </trans-unit>
        <trans-unit id="a92e92a422a41c3280e6d0412966f57aef8619fd" translate="yes" xml:space="preserve">
          <source>This code snippet fills the entire canvas with a rectangle. This is often useful for creating a background, on top of which other things may then be drawn. To achieve this, the dimensions of the rectangle are set to equal the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes.</source>
          <target state="translated">このコードスニペットは、キャンバス全体を長方形で塗りつぶします。これは多くの場合、背景を作成するのに役立ち、その上に他のものが描画されます。これを実現するために、長方形の寸法は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; 属性に等しく設定されます。</target>
        </trans-unit>
        <trans-unit id="4e6154705bb0c42add68211365561a979cfcf1aa" translate="yes" xml:space="preserve">
          <source>This code snippet is for the global context:</source>
          <target state="translated">このコードスニペットはグローバルコンテキストのためのものです。</target>
        </trans-unit>
        <trans-unit id="e805dd184fb47e783f14910fb244d6bee386dd9e" translate="yes" xml:space="preserve">
          <source>This code snippet is for the worker (&lt;code&gt;worker-using.js&lt;/code&gt;):</source>
          <target state="translated">このコードスニペットは、ワーカー（ &lt;code&gt;worker-using.js&lt;/code&gt; ）用です。</target>
        </trans-unit>
        <trans-unit id="ee0c2f03b8d8f1fab60322bbaaeca2d95cfd2eed" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker fetch sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;run the fetch sample live&lt;/a&gt;). The &lt;a href=&quot;../serviceworkerglobalscope/onfetch&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt;&lt;/a&gt; event handler listens for the &lt;code&gt;fetch&lt;/code&gt; event. When fired, &lt;a href=&quot;respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith(any value)&lt;/code&gt;&lt;/a&gt; returns a promise back to the controlled page. This promise resolves to the first matching URL request in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object. If no match is found, the code fetches a response from the network.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;Service Workerフェッチサンプルからのものです&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;フェッチサンプルをライブで実行します&lt;/a&gt;）。&lt;a href=&quot;../serviceworkerglobalscope/onfetch&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt; の&lt;/a&gt;ためのイベントハンドラをリッスン &lt;code&gt;fetch&lt;/code&gt; イベント。起動すると、&lt;a href=&quot;respondwith&quot;&gt; &lt;code&gt;FetchEvent.respondWith(any value)&lt;/code&gt; &lt;/a&gt;は制御されたページにプロミスを返します。このpromiseは、&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;オブジェクトで最初に一致したURLリクエストに解決されます。一致が見つからない場合、コードはネットワークから応答をフェッチします。</target>
        </trans-unit>
        <trans-unit id="49a6649568fd665fb01df331edb8d3a71cf20929" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker fetch sample&lt;/a&gt; (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;prefetch example live&lt;/a&gt;.) The &lt;a href=&quot;onfetch&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt;&lt;/a&gt; event handler listens for the &lt;code&gt;fetch&lt;/code&gt; event. When fired, the code returns a promise that resolves to the first matching request in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object. If no match is found, the code fetches a response from the network.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;サービスワーカーのフェッチサンプルからのものです&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;ライブのプリフェッチの例を&lt;/a&gt;参照してください）&lt;a href=&quot;onfetch&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt; &lt;/a&gt;イベントハンドラーは、 &lt;code&gt;fetch&lt;/code&gt; イベントをリッスンします。コードが実行されると、コードは、&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;オブジェクト内の最初に一致する要求に解決するpromiseを返します。一致が見つからない場合、コードはネットワークから応答をフェッチします。</target>
        </trans-unit>
        <trans-unit id="9d00d7c04508d5955c2fa534c8706984ff0e59f7" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker prefetch sample&lt;/a&gt; (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;prefetch example live&lt;/a&gt;.) The &lt;a href=&quot;serviceworkerglobalscope/onfetch&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt;&lt;/a&gt; event handler listens for the &lt;code&gt;fetch&lt;/code&gt; event. When fired, the code returns a promise that resolves to the first matching request in the &lt;a href=&quot;cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object. If no match is found, the code fetches a response from the network.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;Service Workerのプリフェッチサンプルからのものです&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;ライブのプリフェッチの例を&lt;/a&gt;参照してください）&lt;a href=&quot;serviceworkerglobalscope/onfetch&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt; &lt;/a&gt;イベントハンドラーは、 &lt;code&gt;fetch&lt;/code&gt; イベントをリッスンします。コードが実行されると、コードは、&lt;a href=&quot;cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;オブジェクト内の最初に一致する要求に解決するpromiseを返します。一致が見つからない場合、コードはネットワークから応答をフェッチします。</target>
        </trans-unit>
        <trans-unit id="40df95a8e8aa7c92f22da2addd03478025791ae2" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker prefetch sample&lt;/a&gt; (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;prefetch example live&lt;/a&gt;.) The code calls &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.oninstall&lt;/code&gt;&lt;/a&gt;, delaying treating the &lt;a href=&quot;serviceworkerregistration/installing&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.installing&lt;/code&gt;&lt;/a&gt; worker as installed until the passed promise resolves successfully. The promise resolves when all resources have been fetched and cached, or else when any exception occurs.</source>
          <target state="translated">このコードスニペットから提示された&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;サービスワーカーのプリフェッチ・サンプル&lt;/a&gt;（参照&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;ライブプリフェッチの例を&lt;/a&gt;。）コードを呼び出し&lt;a href=&quot;extendableevent/waituntil&quot;&gt; &lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.oninstall&lt;/code&gt; &lt;/a&gt;治療遅延、&lt;a href=&quot;serviceworkerregistration/installing&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.installing&lt;/code&gt; の&lt;/a&gt;合格約束を解決するまでインストールとして労働者を。 promiseは、すべてのリソースがフェッチされてキャッシュされたとき、または例外が発生したときに解決します。</target>
        </trans-unit>
        <trans-unit id="c0958986c19171732c45a996648efb7bf510a7dc" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker prefetch sample&lt;/a&gt; (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;prefetch running live&lt;/a&gt;.) The code calls &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.oninstall&lt;/code&gt;&lt;/a&gt; and delays treating the &lt;a href=&quot;serviceworkerregistration/installing&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.installing&lt;/code&gt;&lt;/a&gt; worker as installed until the passed promise resolves successfully. The promise resolves when all resources have been fetched and cached, or when any exception occurs.</source>
          <target state="translated">このコードスニペットは、からである&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;サービスワーカーのプリフェッチ・サンプル&lt;/a&gt;（参照&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;プリフェッチはライブ実行している&lt;/a&gt;。）コードが呼び出されます&lt;a href=&quot;extendableevent/waituntil&quot;&gt; &lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt; を&lt;/a&gt;して&lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.oninstall&lt;/code&gt; &lt;/a&gt;し、治療の遅れ&lt;a href=&quot;serviceworkerregistration/installing&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.installing&lt;/code&gt; の&lt;/a&gt;合格約束を解決するまでインストールとして労働者を。すべてのリソースがフェッチされてキャッシュされたとき、または例外が発生したときに、promiseは解決します。</target>
        </trans-unit>
        <trans-unit id="3da37509ae074c85f6656db9797ab2bc2fa9dc9a" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html&quot;&gt;service worker registration-events sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/registration-events/&quot;&gt;live demo&lt;/a&gt;). The code listens for any change in the &lt;a href=&quot;serviceworker/state&quot;&gt;&lt;code&gt;ServiceWorker.state&lt;/code&gt;&lt;/a&gt; and returns its value.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html&quot;&gt;Service Worker Registration-Eventsサンプル&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/registration-events/&quot;&gt;ライブデモ&lt;/a&gt;）からの抜粋です。コードは&lt;a href=&quot;serviceworker/state&quot;&gt; &lt;code&gt;ServiceWorker.state&lt;/code&gt; の&lt;/a&gt;変更をリッスンし、その値を返します。</target>
        </trans-unit>
        <trans-unit id="f2719bdcfb7cc3d5b6981acd0a0bf7739f5dc407" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html&quot;&gt;service worker registration-events sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/registration-events/&quot;&gt;live demo&lt;/a&gt;). The code listens for any change in the &lt;a href=&quot;state&quot;&gt;&lt;code&gt;ServiceWorker.state&lt;/code&gt;&lt;/a&gt; and returns its value.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html&quot;&gt;Service Worker Registration-Eventsサンプル&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/registration-events/&quot;&gt;ライブデモ&lt;/a&gt;）からの抜粋です。コードは&lt;a href=&quot;state&quot;&gt; &lt;code&gt;ServiceWorker.state&lt;/code&gt; の&lt;/a&gt;変更をリッスンし、その値を返します。</target>
        </trans-unit>
        <trans-unit id="692d37171ae3f8649645cd67e6a22548cbf4e863" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js&quot;&gt;service worker selective caching sample&lt;/a&gt;. (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/selective-caching/&quot;&gt;selective caching live&lt;/a&gt;) The code uses &lt;a href=&quot;cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open()&lt;/code&gt;&lt;/a&gt; to open any &lt;code&gt;Cache&lt;/code&gt; objects with a &lt;code&gt;Content-Type&lt;/code&gt; header that starts with &lt;code&gt;&quot;font/&quot;&lt;/code&gt;.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js&quot;&gt;Service Workerの選択的キャッシングサンプルからのもの&lt;/a&gt;です。（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/selective-caching/&quot;&gt;選択的キャッシングライブを&lt;/a&gt;参照）コードは&lt;a href=&quot;cachestorage/open&quot;&gt; &lt;code&gt;CacheStorage.open()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;&quot;font/&quot;&lt;/code&gt; で始まる &lt;code&gt;Content-Type&lt;/code&gt; ヘッダーを持つすべての &lt;code&gt;Cache&lt;/code&gt; オブジェクトを開きます。</target>
        </trans-unit>
        <trans-unit id="e12a5aa41a5e85e4583b731911ecb6762ebc6f29" translate="yes" xml:space="preserve">
          <source>This code snippet is from the MDN &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;sw-test example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;sw-test running live&lt;/a&gt;.) This service worker script waits for an &lt;a href=&quot;installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; to fire, then runs &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil&lt;/code&gt;&lt;/a&gt; to handle the install process for the app. This consists of calling &lt;a href=&quot;cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open&lt;/code&gt;&lt;/a&gt; to create a new cache, then using &lt;a href=&quot;cache/addall&quot;&gt;&lt;code&gt;Cache.addAll&lt;/code&gt;&lt;/a&gt; to add a series of assets to it.</source>
          <target state="translated">このコードスニペットは、MDN &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;sw-testの例&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;sw-test running liveを&lt;/a&gt;参照）からのものです。このService Workerスクリプトは、&lt;a href=&quot;installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;extendableevent/waituntil&quot;&gt; &lt;code&gt;waitUntil&lt;/code&gt; &lt;/a&gt;するのを待ってから、waitUntilを実行してアプリのインストールプロセスを処理します。これは、&lt;a href=&quot;cachestorage/open&quot;&gt; &lt;code&gt;CacheStorage.open&lt;/code&gt; &lt;/a&gt;を呼び出して新しいキャッシュを作成し、次に&lt;a href=&quot;cache/addall&quot;&gt; &lt;code&gt;Cache.addAll&lt;/code&gt; &lt;/a&gt;を使用して一連のアセットをキャッシュに追加することで構成されます。</target>
        </trans-unit>
        <trans-unit id="e3f5078335268a4b083f754eb23d9b866692dfdf" translate="yes" xml:space="preserve">
          <source>This code snippet is taken from &lt;a href=&quot;../webgl_api/basic_2d_animation_example#Drawing_and_animating_the_scene&quot;&gt;the function &lt;code&gt;animateScene()&lt;/code&gt;&lt;/a&gt; in &quot;A basic 2D WebGL animation example.&quot; See that article for the full sample and to see the resulting animation in action.</source>
          <target state="translated">このコードスニペットは、「基本的な2D WebGLアニメーションの例」の&lt;a href=&quot;../webgl_api/basic_2d_animation_example#Drawing_and_animating_the_scene&quot;&gt;関数 &lt;code&gt;animateScene()&lt;/code&gt; &lt;/a&gt;から抜粋したものです。完全なサンプルと実際のアニメーションの結果については、その記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="793d68bfd3a8e844bf6ffe3560511bb6c26d939e" translate="yes" xml:space="preserve">
          <source>This code snippet is taken from a &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/push-messaging-and-notifications&quot;&gt;push messaging and notification sample&lt;/a&gt;. (No live demo is available.)</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/push-messaging-and-notifications&quot;&gt;プッシュメッセージングおよび通知サンプル&lt;/a&gt;から取得されます。（ライブデモはありません。）</target>
        </trans-unit>
        <trans-unit id="b25f8e8720baf48ff504004bb5ee7583d3e54608" translate="yes" xml:space="preserve">
          <source>This code snippet shows how to signal ICE candidates across an arbitrary signaling channel.</source>
          <target state="translated">このコードスニペットは、任意のシグナリングチャネルでICE候補をシグナリングする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="dda634886f6212986f6b77a093a7e5b1cb8cf50a" translate="yes" xml:space="preserve">
          <source>This code snippet uses the &lt;code&gt;foundation&lt;/code&gt; of two candidates to determine if they're actually the same candidate.</source>
          <target state="translated">このコードスニペットは、2つの候補の &lt;code&gt;foundation&lt;/code&gt; を使用して、それらが実際に同じ候補であるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="b97f69e5a8303d42b64dcd84645c18580bb0523f" translate="yes" xml:space="preserve">
          <source>This code snippet uses the value of &lt;code&gt;ip&lt;/code&gt; to implement an IP address based ban feature.</source>
          <target state="translated">このコードスニペットは、 &lt;code&gt;ip&lt;/code&gt; の値を使用して、IPアドレスベースの禁止機能を実装します。</target>
        </trans-unit>
        <trans-unit id="fa2d5092eeb44935a0906a83a3036448d462a0c8" translate="yes" xml:space="preserve">
          <source>This code starts by creating a JavaScript array containing four 4-value vectors, one for each vertices' color. Then a new WebGL buffer is allocated to store these colors, and the array is converted into floats and stored into the buffer.</source>
          <target state="translated">このコードは、頂点の色ごとに1つずつ、4つの4つの値のベクトルを含むJavaScriptの配列を作成することから始まります。次に、これらの色を格納するために新しい WebGL バッファが割り当てられ、配列が float に変換されてバッファに格納されます。</target>
        </trans-unit>
        <trans-unit id="3aa5b2b9bff4c2e23ad8a6cb27e676b0024a2cd1" translate="yes" xml:space="preserve">
          <source>This code starts by creating the gain nodes and setting them and the volume control that will adjust their value all to 0.5. Then the &lt;code&gt;ConstantSourceNode&lt;/code&gt; is created by calling &lt;a href=&quot;baseaudiocontext/createconstantsource&quot;&gt;&lt;code&gt;AudioContext.createConstantSource()&lt;/code&gt;&lt;/a&gt;, and the gain parameters of each of the two gain nodes are connected to the &lt;code&gt;ConstantSourceNode&lt;/code&gt;. After starting the constant source by calling its &lt;a href=&quot;audioscheduledsourcenode/start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. Finally, the two gain nodes are connected to the audio destination (typically speakers or headphones).</source>
          <target state="translated">このコードでは、まずゲインノードを作成し、ゲインノードとその値をすべて0.5に調整するボリュームコントロールを設定します。次に、&lt;a href=&quot;baseaudiocontext/createconstantsource&quot;&gt; &lt;code&gt;AudioContext.createConstantSource()&lt;/code&gt; を&lt;/a&gt;呼び出して &lt;code&gt;ConstantSourceNode&lt;/code&gt; を作成し、2つのゲインノードのそれぞれのゲインパラメータを &lt;code&gt;ConstantSourceNode&lt;/code&gt; に接続します。&lt;a href=&quot;audioscheduledsourcenode/start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して定数ソースを開始した後。最後に、2つのゲインノードがオーディオの宛先（通常はスピーカーまたはヘッドフォン）に接続されます。</target>
        </trans-unit>
        <trans-unit id="5dc7b7f63d6d2244ab28e81b61f7f5998166a8f6" translate="yes" xml:space="preserve">
          <source>This code strokes the first path three times, the second path two times, and the third path only once.</source>
          <target state="translated">このコードは、最初のパスを3回、2番目のパスを2回、3番目のパスを1回だけストロークします。</target>
        </trans-unit>
        <trans-unit id="185d44c5354c152c7e22f4b1128e4657a2353e97" translate="yes" xml:space="preserve">
          <source>This code takes SDP which has been received from the remote peer and constructs a new &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; to pass into &lt;a href=&quot;setremotedescription&quot;&gt;&lt;code&gt;setRemoteDescription()&lt;/code&gt;&lt;/a&gt;. Once that succeeds, it uses &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt; to obtain access to the local webcam and microphone.</source>
          <target state="translated">このコードは、リモートピアから受信したSDPを受け取り、新しい&lt;a href=&quot;../rtcsessiondescription&quot;&gt; &lt;code&gt;RTCSessionDescription&lt;/code&gt; &lt;/a&gt;を作成して&lt;a href=&quot;setremotedescription&quot;&gt; &lt;code&gt;setRemoteDescription()&lt;/code&gt; &lt;/a&gt;に渡します。成功すると、&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt; &lt;/a&gt;を使用してローカルのウェブカメラとマイクへのアクセスを取得します。</target>
        </trans-unit>
        <trans-unit id="ad443b9596b97b894cf1f86ebe76af0a8baece3c" translate="yes" xml:space="preserve">
          <source>This code uses &lt;code&gt;requestAnimationFrame&lt;/code&gt; to ask the browser call the function &quot;&lt;code&gt;render&lt;/code&gt;&quot; each frame. &lt;code&gt;requestAnimationFrame&lt;/code&gt; passes us the time in milliseconds since the page loaded. We convert that to seconds and then subtract from it the last time to compute &lt;code&gt;deltaTime&lt;/code&gt; which is the number of second since the last frame was rendered. At the end of drawscene we add the code to update &lt;code&gt;squareRotation.&lt;/code&gt;</source>
          <target state="translated">このコードは &lt;code&gt;requestAnimationFrame&lt;/code&gt; を使用して、ブラウザーに各フレームの関数「 &lt;code&gt;render&lt;/code&gt; 」の呼び出しを要求します。 &lt;code&gt;requestAnimationFrame&lt;/code&gt; は、ページが読み込まれてからの時間をミリ秒単位で渡します。これを秒に変換し、最後にそれから減算して、最後のフレームがレンダリングされてからの秒数である &lt;code&gt;deltaTime&lt;/code&gt; を計算します。ドローシーンの最後に、squareRotationを更新するコードを追加します &lt;code&gt;squareRotation.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4f51d763c1f9c916f6e2fabe48b33e400ac5a2f" translate="yes" xml:space="preserve">
          <source>This code uses the amount of time that's passed since the last time we updated the value of &lt;code&gt;squareRotation&lt;/code&gt; to determine how far to rotate the square.</source>
          <target state="translated">このコードは、 &lt;code&gt;squareRotation&lt;/code&gt; の値を最後に更新してから経過した時間を使用して、正方形を回転させる距離を決定します。</target>
        </trans-unit>
        <trans-unit id="9f5785bbbd17422157f0a380316d02169c29d4ad" translate="yes" xml:space="preserve">
          <source>This code's job is to just restore the original text into the target box after the user's interaction with the element ends (for example, when they release the mouse button, or when they lift the stylus or finger from the screen).</source>
          <target state="translated">このコードの仕事は、ユーザーが要素とのインタラクションを終了した後(例えば、マウスボタンを離した時や、スタイラスや指を画面から離した時など)、元のテキストをターゲット ボックスに復元することです。</target>
        </trans-unit>
        <trans-unit id="84030ebd509c6ee77d38e1be5bd1ac17e2308409" translate="yes" xml:space="preserve">
          <source>This code, based on an older version of our &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt; sample, responds to &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; events by setting the video source for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element to the stream specified in the event, and then enabling a &quot;hang up&quot; button in the app's user interface.</source>
          <target state="translated">このコードは、以前のバージョンの&lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;シグナリングおよびビデオ通話&lt;/a&gt;サンプルに基づいており、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のビデオソースをイベントで指定されたストリームに設定し、次に[ハングアップ]ボタンを有効にすることで、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; イベントに応答します。アプリのユーザーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="df798030650e5c573f23eb989a8c2c1704e869e6" translate="yes" xml:space="preserve">
          <source>This code, executed when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event occurs, subtracts from the current time the time at which the navigation whose timing was recorded began (&lt;a href=&quot;../performancetiming/navigationstart&quot;&gt;&lt;code&gt;performance.timing.navigationStart&lt;/code&gt;&lt;/a&gt;), and outputs that information to the screen by inserting it into an element.</source>
          <target state="translated">このコードは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントが発生したときに実行され、タイミングが記録されたナビゲーションが開始された時刻（&lt;a href=&quot;../performancetiming/navigationstart&quot;&gt; &lt;code&gt;performance.timing.navigationStart&lt;/code&gt; &lt;/a&gt;）を現在の時刻から減算し、その情報を要素に挿入して画面に出力します。</target>
        </trans-unit>
        <trans-unit id="54ce110c12d0b1294f6318f30387b5b9bb1b5d0a" translate="yes" xml:space="preserve">
          <source>This configuration option cannot be changed after it is first specified; once the certificates have been set, this property is ignored in future calls to &lt;a href=&quot;rtcpeerconnection/setconfiguration&quot;&gt;&lt;code&gt;RTCPeerConnection.setConfiguration()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この構成オプションは、最初に指定した後は変更できません。証明書が設定されると、このプロパティは&lt;a href=&quot;rtcpeerconnection/setconfiguration&quot;&gt; &lt;code&gt;RTCPeerConnection.setConfiguration()&lt;/code&gt; &lt;/a&gt;への今後の呼び出しでは無視されます。</target>
        </trans-unit>
        <trans-unit id="b0c17d7cb33f8977a0334d4dc852adb23986059e" translate="yes" xml:space="preserve">
          <source>This configuration option cannot be changed after it is first specified; once the certificates have been set, this property is ignored in future calls to &lt;a href=&quot;setconfiguration&quot;&gt;&lt;code&gt;RTCPeerConnection.setConfiguration()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この構成オプションは、最初に指定した後は変更できません。証明書が設定されると、このプロパティは&lt;a href=&quot;setconfiguration&quot;&gt; &lt;code&gt;RTCPeerConnection.setConfiguration()&lt;/code&gt; &lt;/a&gt;への今後の呼び出しでは無視されます。</target>
        </trans-unit>
        <trans-unit id="f775cb9859c745b99dd52a8aba4ca36f8ab822af" translate="yes" xml:space="preserve">
          <source>This constructor does not do complete validation of the specified &lt;code&gt;candidateInfo&lt;/code&gt; object or string.</source>
          <target state="translated">このコンストラクタは、指定された &lt;code&gt;candidateInfo&lt;/code&gt; オブジェクトまたは文字列の完全な検証を行いません。</target>
        </trans-unit>
        <trans-unit id="149d0792fcd4766ff175e51235e500f1cbbe5f13" translate="yes" xml:space="preserve">
          <source>This constructor has been deprecated because &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt; and other methods which take SDP as input now directly accept an object conforming to the &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; dictionary, so you don't have to instantiate an &lt;code&gt;RTCSessionDescription&lt;/code&gt; yourself.</source>
          <target state="translated">&lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt;およびSDPを入力として受け取る他のメソッドが &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; ディクショナリに準拠するオブジェクトを直接受け入れるようになったため、このコンストラクタは廃止されました。自分で &lt;code&gt;RTCSessionDescription&lt;/code&gt; をインスタンス化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="5701c8c1eebdea428db51a030c7b07f6d6fc96af" translate="yes" xml:space="preserve">
          <source>This constructor is the preferred way of creating such an object in a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このコンストラクタは、&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;でこのようなオブジェクトを作成するための推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="4ddc7ddae1f014aea1a21cb118ffd479d0c961e7" translate="yes" xml:space="preserve">
          <source>This constructor is used to create a synthetic &lt;a href=&quot;../dragevent&quot;&gt;&lt;code&gt;DragEvent&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このコンストラクターは、合成&lt;a href=&quot;../dragevent&quot;&gt; &lt;code&gt;DragEvent&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a35cbc0b8a837379050ea697d644c6570a019881" translate="yes" xml:space="preserve">
          <source>This constructor returns a new &lt;code&gt;RTCSessionDescription&lt;/code&gt;. The parameter is a &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; dictionary containing the values to assign the two properties.</source>
          <target state="translated">このコンストラクタは、新しい &lt;code&gt;RTCSessionDescription&lt;/code&gt; を返します。パラメータは、2つのプロパティを割り当てるための値を含む &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; 辞書です。</target>
        </trans-unit>
        <trans-unit id="137502c797120fd61fa1302c551f8582f03fce5d" translate="yes" xml:space="preserve">
          <source>This could be for the following reasons:</source>
          <target state="translated">これは以下のような理由が考えられます。</target>
        </trans-unit>
        <trans-unit id="5cdbb78ca2c3269ca25a23a07129e1249044cdab" translate="yes" xml:space="preserve">
          <source>This could be used to populate a list of voices that the user can choose between when the event fires (see our &lt;a href=&quot;https://github.com/mdn/web-speech-api/blob/gh-pages/speak-easy-synthesis/script.js&quot;&gt;Speak easy synthesis demo&lt;/a&gt;.) Note that Firefox doesn't support it at present, and will just return a list of voices when &lt;a href=&quot;getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt; is fired. With Chrome however, you have to wait for the event to fire before populating the list, hence the bottom if statement seen below.</source>
          <target state="translated">これは、イベントが発生したときにユーザーが選択できる音声のリストを入力するために使用できます（&lt;a href=&quot;https://github.com/mdn/web-speech-api/blob/gh-pages/speak-easy-synthesis/script.js&quot;&gt;Speak簡易合成デモを&lt;/a&gt;参照してください）&lt;a href=&quot;getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; &lt;/a&gt;は現時点ではサポートしておらず、SpeechSynthesisのときに音声のリストを返すだけです。 .getVoices（）が発生します。ただしChromeでは、イベントが発生するのを待ってからリストにデータを入力する必要があるため、下のifステートメントが一番下になります。</target>
        </trans-unit>
        <trans-unit id="d88db422599ade63e99d0c607e5d8ffe4d48db18" translate="yes" xml:space="preserve">
          <source>This could then be used to build a user interface for selecting the language the user would like to listen to while watching a movie, for example.</source>
          <target state="translated">これを利用して、例えば映画を見ながら聞きたい言語を選択するためのユーザーインターフェースを構築することができます。</target>
        </trans-unit>
        <trans-unit id="e91852c6678901525d98ec606bc71b9b051507a7" translate="yes" xml:space="preserve">
          <source>This counterpart to &lt;code&gt;ontrack&lt;/code&gt; is called to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; event; it's sent to the &lt;code&gt;RTCPeerConnection&lt;/code&gt; when the remote peer removes a track from the media being sent. See &lt;a href=&quot;#Handling_the_removal_of_tracks&quot;&gt;Handling the removal of tracks&lt;/a&gt;.</source>
          <target state="translated">この対応 &lt;code&gt;ontrack&lt;/code&gt; 処理するために呼び出される &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; イベントを、リモートピアが送信中のメディアからトラックを削除すると、 &lt;code&gt;RTCPeerConnection&lt;/code&gt; に送信されます。&lt;a href=&quot;#Handling_the_removal_of_tracks&quot;&gt;トラックの削除の処理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="03a466fa359227c1ff4c19bc8d96b94ab3b8e129" translate="yes" xml:space="preserve">
          <source>This creates a handler that allows &lt;code&gt;web+burger://&lt;/code&gt; links to direct the user to your web application, inserting the burger information specified in the link into the URL. Recall that this script must be run from the same domain (so any page location at &lt;code&gt;burgers.example.com&lt;/code&gt;) and the second argument passed must be of &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; scheme (in this example it is &lt;code&gt;https&lt;/code&gt;) .</source>
          <target state="translated">これにより、 &lt;code&gt;web+burger://&lt;/code&gt; リンクでユーザーをWebアプリケーションに誘導できるハンドラーが作成され、リンクで指定されたハンバーガー情報がURLに挿入されます。このスクリプトは同じドメインから実行する必要がある（したがって、 &lt;code&gt;burgers.example.com&lt;/code&gt; のページの場所）必要があり、渡される2番目の引数は &lt;code&gt;http&lt;/code&gt; または &lt;code&gt;https&lt;/code&gt; スキーム（この例では &lt;code&gt;https&lt;/code&gt; ）である必要があることを思い出してください。</target>
        </trans-unit>
        <trans-unit id="7e1429073ced701d42db3ad261d5acda3c8a3ce8" translate="yes" xml:space="preserve">
          <source>This creates a new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and inserts it before the element with the ID &quot;&lt;code&gt;div1&lt;/code&gt;&quot;.</source>
          <target state="translated">これにより、新しい &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; が作成され、ID &quot; &lt;code&gt;div1&lt;/code&gt; &quot;の要素の前に挿入されます。</target>
        </trans-unit>
        <trans-unit id="68af91b4a6c6922a173f5e758f1f94beabc45c99" translate="yes" xml:space="preserve">
          <source>This creates a new &lt;code&gt;ImageData&lt;/code&gt; object with the specified dimensions. All pixels are preset to transparent black (all zeroes i.e rgba(0,0,0,0)).</source>
          <target state="translated">これにより、指定された寸法で新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトが作成されます。すべてのピクセルは透明な黒にプリセットされています（すべてゼロ、つまりrgba（0,0,0,0））。</target>
        </trans-unit>
        <trans-unit id="b4bbbb33758558ffba5c13f53a853ce78e7ec9c3" translate="yes" xml:space="preserve">
          <source>This creates a variable, &lt;code&gt;newState&lt;/code&gt;, which is the opposite of the current value of &lt;code&gt;enabled&lt;/code&gt;, then uses that to select either the Emoji character for the &quot;play&quot; icon or the character for the &quot;pause&quot; icon as the new &lt;a href=&quot;../element/innerhtml&quot;&gt;&lt;code&gt;innerHTML&lt;/code&gt;&lt;/a&gt; of the pause button's element.</source>
          <target state="translated">これにより、変数 &lt;code&gt;newState&lt;/code&gt; が作成されます。これは、 &lt;code&gt;enabled&lt;/code&gt; の現在の値の反対であり、それを使用して、「再生」アイコンの絵文字文字または「一時停止」アイコンの文字を、一時停止ボタンの新しい&lt;a href=&quot;../element/innerhtml&quot;&gt; &lt;code&gt;innerHTML&lt;/code&gt; &lt;/a&gt;として選択します素子。</target>
        </trans-unit>
        <trans-unit id="f1dd4b3e5ff9f06a8fb86b432fcb75215776e8a6" translate="yes" xml:space="preserve">
          <source>This creates an &lt;code&gt;options&lt;/code&gt; object with a getter function for the &lt;code&gt;passive&lt;/code&gt; property; the getter sets a flag, &lt;code&gt;passiveSupported&lt;/code&gt;, to &lt;code&gt;true&lt;/code&gt; if it gets called. That means that if the browser checks the value of the &lt;code&gt;passive&lt;/code&gt; property on the &lt;code&gt;options&lt;/code&gt; object, &lt;code&gt;passiveSupported&lt;/code&gt; will be set to &lt;code&gt;true&lt;/code&gt;; otherwise, it will remain &lt;code&gt;false&lt;/code&gt;. We then call &lt;code&gt;addEventListener()&lt;/code&gt; to set up a fake event handler, specifying those options, so that the options will be checked if the browser recognizes an object as the third parameter. Then, we call &lt;code&gt;removeEventListener()&lt;/code&gt; to clean up after ourselves. (Note that &lt;code&gt;handleEvent()&lt;/code&gt; is ignored on event listeners that aren't called.)</source>
          <target state="translated">これにより、 &lt;code&gt;passive&lt;/code&gt; プロパティのゲッター関数を含む &lt;code&gt;options&lt;/code&gt; オブジェクトが作成されます。ゲッターは、呼び出された場合、フラグ &lt;code&gt;passiveSupported&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。つまり、ブラウザーが &lt;code&gt;options&lt;/code&gt; オブジェクトの &lt;code&gt;passive&lt;/code&gt; プロパティの値をチェックすると、 &lt;code&gt;passiveSupported&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されます。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; のままになります。次に &lt;code&gt;addEventListener()&lt;/code&gt; を呼び出して、これらのオプションを指定して偽のイベントハンドラーを設定します。これにより、ブラウザーがオブジェクトを3番目のパラメーターとして認識した場合にオプションがチェックされます。次に、 &lt;code&gt;removeEventListener()&lt;/code&gt; を呼び出します自分で片付けます。（呼び出されないイベントリスナーでは、 &lt;code&gt;handleEvent()&lt;/code&gt; は無視されることに注意してください。）</target>
        </trans-unit>
        <trans-unit id="c10a4c3135747fd9237fe8c50747c1330732afc1" translate="yes" xml:space="preserve">
          <source>This creates article boxes with a white background which float atop the blue background, with a small margin around the article. Every article which isn't the last item in the container has an 8px bottom margin to space things apart.</source>
          <target state="translated">これは、青い背景の上に白い背景の記事ボックスを作成し、記事の周りに小さな余白をつけてその上に浮かんでいます。コンテナ内の最後の項目ではないすべての記事は、物事を区切るために8pxの下マージンを持っています。</target>
        </trans-unit>
        <trans-unit id="15124c4356b41009912db7f49759bd62426c1900" translate="yes" xml:space="preserve">
          <source>This currently only has one method available on it &amp;mdash; &lt;a href=&quot;../writablestreamdefaultcontroller/error&quot;&gt;&lt;code&gt;WritableStreamDefaultController.error()&lt;/code&gt;&lt;/a&gt;, which when invoked causes future interactions with the stream to error. This is useful when another part of an app goes wrong, and you want to propagate the error to the stream so that the whole system fails cleanly, rather than risking garbage being silently written to the stream (or something similarly bad).</source>
          <target state="translated">現在、これで使用できるメソッドは&lt;a href=&quot;../writablestreamdefaultcontroller/error&quot;&gt; &lt;code&gt;WritableStreamDefaultController.error()&lt;/code&gt; の&lt;/a&gt; 1つだけです。このメソッドを呼び出すと、ストリームとの今後の対話でエラーが発生します。これは、アプリの別の部分で問題が発生し、ストリームにゴミを静かに書き込むリスクを負うのではなく、エラーをストリームに伝播してシステム全体が完全に失敗するようにする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="1ac649a99beec9f0af5b82ac4f2e4d7742403b5b" translate="yes" xml:space="preserve">
          <source>This cursor does not include duplicates, and its direction is monotonically decreasing in the order of keys.</source>
          <target state="translated">このカーソルは重複を含まず、その方向はキー順に単調に減少していく。</target>
        </trans-unit>
        <trans-unit id="9ef49c53bead40ada54278d6231dd4fed10bfa58" translate="yes" xml:space="preserve">
          <source>This cursor does not include duplicates, and its direction is monotonically increasing in the order of keys.</source>
          <target state="translated">このカーソルは重複を含まず、その方向はキー順に単調に増加する。</target>
        </trans-unit>
        <trans-unit id="69c6434ee2b3fe6628e1b9b9e0f2f7163dee4ee1" translate="yes" xml:space="preserve">
          <source>This cursor includes duplicates, and its direction is monotonically decreasing in the order of keys.</source>
          <target state="translated">このカーソルは重複を含み、その方向はキーの順に単調に減少していく。</target>
        </trans-unit>
        <trans-unit id="61cda63b17e63d95c9c45bdea01f6736c28a3e0e" translate="yes" xml:space="preserve">
          <source>This cursor includes duplicates, and its direction is monotonically increasing in the order of keys.</source>
          <target state="translated">このカーソルは重複を含み、その方向はキー順に単調に増加する。</target>
        </trans-unit>
        <trans-unit id="0f374fa33dbd6e6721038cb7e88b2209b27d800d" translate="yes" xml:space="preserve">
          <source>This data is returned by the payment app that satisfies the payment request, and must conform to the structure defined in the &lt;a href=&quot;../basiccardresponse&quot;&gt;&lt;code&gt;BasicCardResponse&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="translated">このデータは、支払い要求を満たす支払いアプリによって返され、&lt;a href=&quot;../basiccardresponse&quot;&gt; &lt;code&gt;BasicCardResponse&lt;/code&gt; &lt;/a&gt;辞書で定義された構造に準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="3cb089584fb6e1b93fa0a8e0051e6cc511e38908" translate="yes" xml:space="preserve">
          <source>This data should be passed into the &lt;a href=&quot;complete&quot;&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/a&gt; method to let the user agent complete the transaction.</source>
          <target state="translated">ユーザーエージェントがトランザクションを完了するには、このデータを&lt;a href=&quot;complete&quot;&gt; &lt;code&gt;complete()&lt;/code&gt; &lt;/a&gt;メソッドに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="5b6945638597aef4e4fb66a23a69eb5bf20a687b" translate="yes" xml:space="preserve">
          <source>This data, particularly the &lt;code&gt;duration&lt;/code&gt; timestamp, can be used to help identify performance problems.</source>
          <target state="translated">このデータ、特に &lt;code&gt;duration&lt;/code&gt; タイムスタンプは、パフォーマンスの問題を特定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="adc7402fa7230b7e16cb49dbcbf134faedaff5fb" translate="yes" xml:space="preserve">
          <source>This default has changed in the latest spec &amp;mdash; the new default value is &lt;code&gt;false&lt;/code&gt;. Though it's still an optional argument, you should always provide the &lt;code&gt;deep&lt;/code&gt; argument for backward &lt;em&gt;and&lt;/em&gt; forward compatibility. With Gecko 28.0 (Firefox 28 / Thunderbird 28 / SeaMonkey 2.25 / Firefox OS 1.3), the console warns developers not to omit the argument. Starting with Gecko 29.0 (Firefox 29 / Thunderbird 29 / SeaMonkey 2.26)), a shallow clone is defaulted instead of a deep clone.</source>
          <target state="translated">このデフォルトは最新の仕様で変更されてい &lt;code&gt;false&lt;/code&gt; 。新しいデフォルト値はfalseです。これはまだオプションの引数ですが、後方互換性&lt;em&gt;と&lt;/em&gt;前方互換性のために常に &lt;code&gt;deep&lt;/code&gt; 引数を提供する必要があります。Gecko 28.0（Firefox 28 / Thunderbird 28 / SeaMonkey 2.25 / Firefox OS 1.3）では、コンソールは引数を省略しないように開発者に警告します。Gecko 29.0（Firefox 29 / Thunderbird 29 / SeaMonkey 2.26）以降では、ディープクローンの代わりにシャロークローンがデフォルトで使用されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e325065bf0ef55cca2c31ff998125fd45c5cc87" translate="yes" xml:space="preserve">
          <source>This defines the resource that you wish to fetch. This can either be:</source>
          <target state="translated">これは、取得したいリソースを定義します。これは次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="40cedbbda26067b79218f1ed498daf5114302ceb" translate="yes" xml:space="preserve">
          <source>This demo uses JavaScript to draw a ball on top of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element. When you click the canvas, pointer lock is then used to remove the mouse pointer and allow you to move the ball directly using the mouse. Let's see how this works.</source>
          <target state="translated">このデモでは、JavaScriptを使用して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の上にボールを描画します。キャンバスをクリックすると、ポインタロックが使用されてマウスポインタが削除され、マウスを使用してボールを直接移動できるようになります。これがどのように機能するか見てみましょう。</target>
        </trans-unit>
        <trans-unit id="dfff1330b35fb00e8aa04dcc9ee1e025ff03052d" translate="yes" xml:space="preserve">
          <source>This demonstrates how you can use both array syntax (line 2) and the &lt;a href=&quot;../htmlcollection/item&quot;&gt;&lt;code&gt;HTMLCollection.item()&lt;/code&gt;&lt;/a&gt; method (line 3) to obtain individual rows in the table.</source>
          <target state="translated">これは、配列構文（2行目）と&lt;a href=&quot;../htmlcollection/item&quot;&gt; &lt;code&gt;HTMLCollection.item()&lt;/code&gt; &lt;/a&gt;メソッド（3行目）の両方を使用して、テーブル内の個々の行を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="be25d1c5583b3e592cda4b71be6d842a8ed1262f" translate="yes" xml:space="preserve">
          <source>This demonstrates two things:</source>
          <target state="translated">これは2つのことを示しています。</target>
        </trans-unit>
        <trans-unit id="e66ee48d35373e716e7c6b37c885fe5cc5b5b356" translate="yes" xml:space="preserve">
          <source>This deprecated form of the method returns instantaneously without waiting for the actual setting to be done: in case of success, the &lt;code&gt;successCallback&lt;/code&gt; will be called; in case of failure, the &lt;code&gt;errorCallback&lt;/code&gt; will be called.</source>
          <target state="translated">この非推奨のメソッド形式は、実際の設定が完了するのを待たずに瞬時に戻ります。成功した場合は、 &lt;code&gt;successCallback&lt;/code&gt; が呼び出されます。失敗した場合は、 &lt;code&gt;errorCallback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="aa6f6380ccbd5b9e7852e7585896d78e77a74e85" translate="yes" xml:space="preserve">
          <source>This dictionary represents the object that should be passed into &lt;a href=&quot;subtlecrypto/sign&quot;&gt;&lt;code&gt;SubtleCrypto.sign()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;subtlecrypto/verify&quot;&gt;&lt;code&gt;SubtleCrypto.verify()&lt;/code&gt;&lt;/a&gt; when using the ECDSA algorithm.</source>
          <target state="translated">このディクショナリは、ECDSAアルゴリズムを使用するときに&lt;a href=&quot;subtlecrypto/sign&quot;&gt; &lt;code&gt;SubtleCrypto.sign()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;subtlecrypto/verify&quot;&gt; &lt;code&gt;SubtleCrypto.verify()&lt;/code&gt; &lt;/a&gt;に渡す必要があるオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="98eb93bf78e8588fa8227b8f8646068372cb9381" translate="yes" xml:space="preserve">
          <source>This dictionary represents the object that should be passed into &lt;a href=&quot;subtlecrypto/sign&quot;&gt;&lt;code&gt;SubtleCrypto.sign()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;subtlecrypto/verify&quot;&gt;&lt;code&gt;SubtleCrypto.verify()&lt;/code&gt;&lt;/a&gt; when using the RSA-PSS algorithm.</source>
          <target state="translated">このディクショナリは、RSA-PSSアルゴリズムを使用するときに&lt;a href=&quot;subtlecrypto/sign&quot;&gt; &lt;code&gt;SubtleCrypto.sign()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;subtlecrypto/verify&quot;&gt; &lt;code&gt;SubtleCrypto.verify()&lt;/code&gt; &lt;/a&gt;に渡す必要があるオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="4a3737c6cdcf9269fef37445d380981c4383708a" translate="yes" xml:space="preserve">
          <source>This differs from the &lt;a href=&quot;../rtcicetransport/gatheringstate&quot;&gt;&lt;code&gt;gatheringState&lt;/code&gt;&lt;/a&gt;, which only indicates whether or not ICE gathering is currently underway.</source>
          <target state="translated">これは、ICEの収集が現在進行中であるかどうかのみを示す&lt;a href=&quot;../rtcicetransport/gatheringstate&quot;&gt; &lt;code&gt;gatheringState&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="46936d633d4989fa1a5236fb9f8c8dacbc4d6c30" translate="yes" xml:space="preserve">
          <source>This direction causes the cursor to be opened at the end of the source.</source>
          <target state="translated">この方向にすると、ソースの最後にカーソルが開くようになります。</target>
        </trans-unit>
        <trans-unit id="08a3a57457d4b0256bc9d4e4d4a9bf680710eb81" translate="yes" xml:space="preserve">
          <source>This direction causes the cursor to be opened at the end of the source. For every key with duplicate values, only the first record is yielded.</source>
          <target state="translated">この方向にすると、ソースの最後にカーソルが開きます。重複した値を持つすべてのキーに対して、最初のレコードのみが生成されます。</target>
        </trans-unit>
        <trans-unit id="849338daaac2bb232f0ce46d11ee0819bdcc6ad2" translate="yes" xml:space="preserve">
          <source>This direction causes the cursor to be opened at the start of the source.</source>
          <target state="translated">この方向にすると、ソースの開始時にカーソルが開くようになります。</target>
        </trans-unit>
        <trans-unit id="4e95d4f4235889961ba79685e5d4333540231739" translate="yes" xml:space="preserve">
          <source>This direction causes the cursor to be opened at the start of the source. For every key with duplicate values, only the first record is yielded.</source>
          <target state="translated">この方向にすると、カーソルはソースの先頭に開きます。重複した値を持つすべてのキーに対して、最初のレコードのみが生成されます。</target>
        </trans-unit>
        <trans-unit id="e0c5f40d67de9d4fdb18b711aef397880e45d3f3" translate="yes" xml:space="preserve">
          <source>This directly related to the &lt;a href=&quot;../web_audio_api&quot;&gt;Web Audio API&lt;/a&gt;, which allows us to place sounds on objects we have in the canvas or launch audio depending on the part of the scene the user is traveling towards or looking at.</source>
          <target state="translated">これは&lt;a href=&quot;../web_audio_api&quot;&gt;WebオーディオAPI&lt;/a&gt;に直接関連しており、ユーザーが移動または見ているシーンの一部に応じて、キャンバス内のオブジェクトにサウンドを配置したり、オーディオを起動したりできます。</target>
        </trans-unit>
        <trans-unit id="02997f9e0b862ee244e3441e0b9110774453e91a" translate="yes" xml:space="preserve">
          <source>This document contains examples of the Beacon interfaces. See &lt;a href=&quot;../beacon_api&quot;&gt;&lt;code&gt;Beacon API&lt;/code&gt;&lt;/a&gt; for an overview of the API.</source>
          <target state="translated">このドキュメントには、ビーコンインターフェースの例が含まれています。&lt;a href=&quot;../beacon_api&quot;&gt; &lt;code&gt;Beacon API&lt;/code&gt; &lt;/a&gt;の概要については、ビーコンAPIを参照してください。</target>
        </trans-unit>
        <trans-unit id="3ed2c1899d82d5f3c5c8d778aa82db46c3528a08" translate="yes" xml:space="preserve">
          <source>This document describes how to use the &lt;a href=&quot;../performanceframetiming&quot;&gt;&lt;code&gt;PerformanceFrameTiming&lt;/code&gt;&lt;/a&gt; interfaces including example code. For an overview of these interfaces see &lt;a href=&quot;https://developer.mozilla.org/Web/API/Frame_Timing_API&quot;&gt;Frame Timing API&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、サンプルコードを含む&lt;a href=&quot;../performanceframetiming&quot;&gt; &lt;code&gt;PerformanceFrameTiming&lt;/code&gt; &lt;/a&gt;インターフェイスの使用方法について説明します。これらのインターフェースの概要については、&lt;a href=&quot;https://developer.mozilla.org/Web/API/Frame_Timing_API&quot;&gt;Frame Timing APIを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="482d06a1d1cd37457442b804c3a01909085db36b" translate="yes" xml:space="preserve">
          <source>This document establishes two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;canvas&lt;/code&gt;&lt;/a&gt; elements, with the IDs &lt;code&gt;c1&lt;/code&gt; and &lt;code&gt;c2&lt;/code&gt;. Canvas &lt;code&gt;c1&lt;/code&gt; is used to display the current frame of the original video, while &lt;code&gt;c2&lt;/code&gt; is used to display the video after performing the chroma-keying effect; &lt;code&gt;c2&lt;/code&gt; is preloaded with the still image that will be used to replace the green background in the video.</source>
          <target state="translated">このドキュメントは、IDが &lt;code&gt;c1&lt;/code&gt; と &lt;code&gt;c2&lt;/code&gt; の 2つの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;canvas&lt;/code&gt; &lt;/a&gt;要素を確立します。Canvas &lt;code&gt;c1&lt;/code&gt; は元のビデオの現在のフレームを表示するために使用され、 &lt;code&gt;c2&lt;/code&gt; はクロマキーイング効果の実行後にビデオを表示するために使用されます。 &lt;code&gt;c2&lt;/code&gt; には、ビデオの緑の背景を置き換えるために使用される静止画像がプリロードされています。</target>
        </trans-unit>
        <trans-unit id="f580fc49798a533ed9b57d0639574bdbf68ea6ad" translate="yes" xml:space="preserve">
          <source>This document is an &lt;em&gt;overview&lt;/em&gt; of HTML drag and drop. It includes a description of the interfaces, the basic steps to add drag and drop support to an application and a summary of the interoperability of the interfaces.</source>
          <target state="translated">このドキュメントは、HTMLドラッグアンドドロップの&lt;em&gt;概要&lt;/em&gt;です。インターフェイスの説明、アプリケーションにドラッグアンドドロップサポートを追加する基本的な手順、およびインターフェイスの相互運用性の概要が含まれています。</target>
        </trans-unit>
        <trans-unit id="e7a26e1b0c8122e286e9cccf30dd2a6442efec2b" translate="yes" xml:space="preserve">
          <source>This document provides an overview of the &lt;code&gt;Resource Timing&lt;/code&gt; interfaces. For more details about the interfaces including examples see each interface's reference page, &lt;a href=&quot;resource_timing_api/using_the_resource_timing_api&quot;&gt;Using the Resource Timing API&lt;/a&gt;, and the references in the &lt;a href=&quot;#See_also&quot;&gt;See also&lt;/a&gt; section. For a graphical representation of the resource timing processing model see the &lt;a href=&quot;https://w3c.github.io/resource-timing/#process&quot;&gt;resource timing phases&lt;/a&gt; figure.</source>
          <target state="translated">このドキュメントでは、 &lt;code&gt;Resource Timing&lt;/code&gt; インターフェイスの概要について説明します。例を含むインターフェイスの詳細については、各インターフェイスのリファレンスページ、&lt;a href=&quot;resource_timing_api/using_the_resource_timing_api&quot;&gt;「リソースタイミングAPIの使用」&lt;/a&gt;、および「参照&lt;a href=&quot;#See_also&quot;&gt;」&lt;/a&gt;セクションのリファレンスを参照してください。リソースタイミング処理モデルの図解については、&lt;a href=&quot;https://w3c.github.io/resource-timing/#process&quot;&gt;リソースタイミングフェーズの&lt;/a&gt;図を参照してください。</target>
        </trans-unit>
        <trans-unit id="0f86a90882f9bd8603d6d86e8964fa995126713e" translate="yes" xml:space="preserve">
          <source>This document provides an overview of the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;measure&lt;/code&gt;&lt;a href=&quot;performanceentry/entrytype&quot;&gt;&lt;code&gt;performance event types&lt;/code&gt;&lt;/a&gt; including the four &lt;code&gt;User Timing&lt;/code&gt; methods that extend the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface. For more details and example code regarding these two performance event types and the methods, see &lt;a href=&quot;https://developer.mozilla.org/Web/API/User_Timing_API/Using_the_User_Timing_API&quot;&gt;Using the User Timing API&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、&lt;a href=&quot;performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt;インターフェイスを拡張する4つの &lt;code&gt;User Timing&lt;/code&gt; メソッドを含む、 &lt;code&gt;mark&lt;/code&gt; アンド &lt;code&gt;measure&lt;/code&gt; &lt;a href=&quot;performanceentry/entrytype&quot;&gt; &lt;code&gt;performance event types&lt;/code&gt; &lt;/a&gt;概要を説明します。これら2つのパフォーマンスイベントタイプとメソッドに関する詳細とコード例については、「&lt;a href=&quot;https://developer.mozilla.org/Web/API/User_Timing_API/Using_the_User_Timing_API&quot;&gt;ユーザータイミングAPIの使用&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="ee434451644a37b34408bc88551208a87c90d0ea" translate="yes" xml:space="preserve">
          <source>This document provides an overview of the standard's interfaces. For more details about the interfaces, see the reference pages and &lt;a href=&quot;https://developer.mozilla.org/Web/API/Performance_Timeline/Using_Performance_Timeline&quot;&gt;Using Performance Timeline&lt;/a&gt;.</source>
          <target state="translated">このドキュメントは、標準のインターフェースの概要を提供します。インターフェイスの詳細については、リファレンスページおよび「&lt;a href=&quot;https://developer.mozilla.org/Web/API/Performance_Timeline/Using_Performance_Timeline&quot;&gt;パフォーマンスタイムラインの使用」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bcfbb4537e285c78bb4aaa8db801f9fb9bd4bd5d" translate="yes" xml:space="preserve">
          <source>This document provides samples for every interface that you can use in your own web development. In some cases, the samples are complete HTML pages, with the DOM access in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element, the interface (e.g, buttons) necessary to fire up the script in a form, and the HTML elements upon which the DOM operates listed as well. When this is the case, you can cut and paste the example into a new HTML document, save it, and run the example from the browser.</source>
          <target state="translated">このドキュメントでは、独自のWeb開発で使用できるすべてのインターフェースのサンプルを提供します。場合によっては、サンプルは完全なHTMLページであり、 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 要素でのDOMアクセス、フォームでスクリプトを起動するために必要なインターフェイス（ボタンなど）、およびDOMが動作するHTML要素が次のようにリストされます。上手。この場合は、例を切り取って新しいHTMLドキュメントに貼り付け、保存して、ブラウザーから例を実行できます。</target>
        </trans-unit>
        <trans-unit id="0ca3f97a11a94048c70bb0948922ff28a741377a" translate="yes" xml:space="preserve">
          <source>This document shows the use of Resource Timing interfaces. For more details about the interfaces, including examples, see each interface's reference page and the references in the &lt;a href=&quot;#See_also&quot;&gt;See also&lt;/a&gt; section.</source>
          <target state="translated">このドキュメントでは、リソースタイミングインターフェイスの使用方法を示します。例を含むインターフェイスの詳細については、各インターフェイスのリファレンスページと「参照&lt;a href=&quot;#See_also&quot;&gt;」&lt;/a&gt;セクションのリファレンスを参照してください。</target>
        </trans-unit>
        <trans-unit id="baf4ca27e7b527f76d2649a92d525f3bb6c9a3a6" translate="yes" xml:space="preserve">
          <source>This doesn't directly relate to the WebSocket protocol, but it's worth mentioning here: your server will have to keep track of clients' sockets so you don't keep handshaking again with clients who have already completed the handshake. The same client IP address can try to connect multiple times (but the server can deny them if they attempt too many connections in order to save itself from &lt;a href=&quot;https://en.wikipedia.org/wiki/Denial_of_service&quot;&gt;Denial-of-Service attacks&lt;/a&gt;).</source>
          <target state="translated">これはWebSocketプロトコルに直接関係しませんが、ここで言及する価値があります。サーバーはクライアントのソケットを追跡する必要があるため、すでにハンドシェイクを完了したクライアントと再度ハンドシェイクを続ける必要はありません。同じクライアントIPアドレスが複数回接続を試行する可能性があります（ただし、サーバーが&lt;a href=&quot;https://en.wikipedia.org/wiki/Denial_of_service&quot;&gt;サービス拒否攻撃&lt;/a&gt;から身を守るために接続を試行しすぎると、サーバーが拒否する可能性があります）。</target>
        </trans-unit>
        <trans-unit id="508cb2a19e688c879fd5a48b0ea0dd802f622d0e" translate="yes" xml:space="preserve">
          <source>This element behaves in one of two modes: &lt;em&gt;default&lt;/em&gt; mode and &lt;em&gt;value&lt;/em&gt; mode.</source>
          <target state="translated">この要素は、&lt;em&gt;デフォルト&lt;/em&gt;モードと&lt;em&gt;値&lt;/em&gt;モードの2つのモードのいずれかで動作します。</target>
        </trans-unit>
        <trans-unit id="12c4fcd8de68f8c78dab871c527827e765eabe60" translate="yes" xml:space="preserve">
          <source>This eliminates the need to check for comments or iterate through lines yourself; however, it is limited to only the first URL in the list.</source>
          <target state="translated">これにより、自分でコメントをチェックしたり、行を繰り返したりする必要がなくなりますが、リストの最初のURLのみに限定されます。</target>
        </trans-unit>
        <trans-unit id="75bb5d12d14856074603e5cd5318110bef19757f" translate="yes" xml:space="preserve">
          <source>This enum defines strings that describe the current state of the session description, as used in the &lt;a href=&quot;rtcsessiondescription/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; property. The session description's type will be specified using one of these values.</source>
          <target state="translated">この列挙&lt;a href=&quot;rtcsessiondescription/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;は、typeプロパティで使用される、セッションの説明の現在の状態を説明する文字列を定義します。セッション記述のタイプは、これらの値のいずれかを使用して指定されます。</target>
        </trans-unit>
        <trans-unit id="de8fd86224adbc057fea1aad045720e87f7a3a29" translate="yes" xml:space="preserve">
          <source>This enum defines strings that describe the current state of the session description, as used in the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; property. The session description's type will be specified using one of these values.</source>
          <target state="translated">この列挙&lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;は、typeプロパティで使用される、セッションの説明の現在の状態を説明する文字列を定義します。セッション記述のタイプは、これらの値のいずれかを使用して指定されます。</target>
        </trans-unit>
        <trans-unit id="dd70419109078f128706b57536b6baf3ba51ae00" translate="yes" xml:space="preserve">
          <source>This establishes our file &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element as well as a link that invokes the file picker (since we keep the file input hidden to prevent that less-than-attractive user interface from being displayed). This is explained in the section &lt;a href=&quot;#Using_hidden_file_input_elements_using_the_click()_method&quot;&gt;Using hidden file input elements using the click() method&lt;/a&gt;, as is the method that invokes the file picker.</source>
          <target state="translated">これにより、ファイルの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素と、ファイルピッカーを呼び出すリンクが確立されます（あまり魅力的ではないユーザーインターフェイスが表示されないようにファイル入力を非表示にしているため）。これについては、ファイルピッカーを呼び出す&lt;a href=&quot;#Using_hidden_file_input_elements_using_the_click()_method&quot;&gt;メソッド&lt;/a&gt;と同様に、「click（）メソッドを使用して非表示のファイル入力要素を使用する」で説明しています。</target>
        </trans-unit>
        <trans-unit id="38be177877f07a312ef7b138ee257c0092ee9b0e" translate="yes" xml:space="preserve">
          <source>This evaluates to: [Infinity, Infinity, Infinity]</source>
          <target state="translated">これが評価されています。無限大、無限大、無限大】に評価されます。</target>
        </trans-unit>
        <trans-unit id="933e872b05b227aa2ce788a7bec5ddb07c51069f" translate="yes" xml:space="preserve">
          <source>This event bubbles. If supported on the window, it is supported on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; elements as well.</source>
          <target state="translated">このイベントは泡立ちます。ウィンドウでサポートされている場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素でもサポートされています。</target>
        </trans-unit>
        <trans-unit id="329d103e30025bc58a4a5c6e3d516b56b6d387f9" translate="yes" xml:space="preserve">
          <source>This event can be captured at the &lt;code&gt;window&lt;/code&gt; object level by using the &lt;a href=&quot;eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener&lt;/code&gt;&lt;/a&gt; method (using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; event name) or by attaching an event handler to the &lt;a href=&quot;window/ondevicelight&quot;&gt;&lt;code&gt;window.ondevicelight&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">このイベントは、&lt;a href=&quot;eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener&lt;/code&gt; &lt;/a&gt;メソッド（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; イベント名を使用）を使用するか、イベントハンドラーを&lt;a href=&quot;window/ondevicelight&quot;&gt; &lt;code&gt;window.ondevicelight&lt;/code&gt; &lt;/a&gt;プロパティにアタッチすることにより、 &lt;code&gt;window&lt;/code&gt; オブジェクトレベルでキャプチャできます。</target>
        </trans-unit>
        <trans-unit id="b56710b0ad1aab6341070c09afcd3d736628b701" translate="yes" xml:space="preserve">
          <source>This event can be captured at the &lt;code&gt;window&lt;/code&gt; object level by using the &lt;a href=&quot;eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener&lt;/code&gt;&lt;/a&gt; method (using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/userproximity&quot;&gt;userproximity&lt;/a&gt;&lt;/code&gt; event name) or by attaching an event handler to the &lt;a href=&quot;window/ondeviceproximity&quot;&gt;&lt;code&gt;window.ondeviceproximity&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;window/onuserproximity&quot;&gt;&lt;code&gt;window.onuserproximity&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">このイベントは、&lt;a href=&quot;eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener&lt;/code&gt; &lt;/a&gt;メソッド（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/userproximity&quot;&gt;userproximity&lt;/a&gt;&lt;/code&gt; イベント名を使用）を使用するか、イベントハンドラーを&lt;a href=&quot;window/ondeviceproximity&quot;&gt; &lt;code&gt;window.ondeviceproximity&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;window/onuserproximity&quot;&gt; &lt;code&gt;window.onuserproximity&lt;/code&gt; &lt;/a&gt;プロパティにアタッチすることにより、 &lt;code&gt;window&lt;/code&gt; オブジェクトレベルでキャプチャできます。</target>
        </trans-unit>
        <trans-unit id="ac61f6a638aac33781f379ceeccbcbae503936ed" translate="yes" xml:space="preserve">
          <source>This event handler can be set to function which is passed a single input parameter: an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object describing the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; event which occurred. Your code can look at the value of &lt;a href=&quot;iceconnectionstate&quot;&gt;&lt;code&gt;RTCPeerConnection.iceConnectionState&lt;/code&gt;&lt;/a&gt; to determine what the new state is.</source>
          <target state="translated">このイベントハンドラーは、単一の入力パラメーター（発生した &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; イベントを説明する&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;オブジェクト）が渡される関数に設定できます。コードは&lt;a href=&quot;iceconnectionstate&quot;&gt; &lt;code&gt;RTCPeerConnection.iceConnectionState&lt;/code&gt; &lt;/a&gt;の値を調べて、新しい状態を判別できます。</target>
        </trans-unit>
        <trans-unit id="9910ded83a3cf95934b48e95b4f715725d7ce47c" translate="yes" xml:space="preserve">
          <source>This event handler is called when an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/offline&quot;&gt;offline&lt;/a&gt;&lt;/code&gt; is fired on body and bubbles up, when &lt;a href=&quot;../navigatoronline/online&quot;&gt;navigator.onLine&lt;/a&gt; property changes and becomes &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このイベントハンドラーは、&lt;a href=&quot;../navigatoronline/online&quot;&gt;navigator.onLine&lt;/a&gt;プロパティが変更されて &lt;code&gt;false&lt;/code&gt; になったときに、本体で &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/offline&quot;&gt;offline&lt;/a&gt;&lt;/code&gt; が発生してバブルアップしたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3ddfe72f01c2a18e9c54c79c4f9b14fccdb1b49c" translate="yes" xml:space="preserve">
          <source>This event is also sent if the values of the radius, rotation angle, or force attributes of a touch point change.</source>
          <target state="translated">このイベントは、タッチポイントの半径、回転角、力属性の値が変化した場合にも送信されます。</target>
        </trans-unit>
        <trans-unit id="4542c4021857c9f1107529f02e1863d460581fd6" translate="yes" xml:space="preserve">
          <source>This event is fired after pointer capture is released for a pointer.</source>
          <target state="translated">このイベントは、ポインタのキャプチャがポインタに対して解放された後に発生します。</target>
        </trans-unit>
        <trans-unit id="5da69c50819bfbaefa88c0eeac84edb5bc3c1078" translate="yes" xml:space="preserve">
          <source>This event is fired continuously when an element or text selection is being dragged and the mouse pointer is over a valid drop target (every 50 ms WHEN mouse is not moving ELSE much faster between 5 ms (slow movement) and 1ms (fast movement) approximately. This firing pattern is different than &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseover&quot;&gt;mouseover&lt;/a&gt;&lt;/code&gt; ).</source>
          <target state="translated">このイベントは、要素またはテキストの選択がドラッグされ、マウスポインターが有効なドロップターゲット上にあるときに継続的に発生します（マウスが5ミリ秒（遅い動き）と1ミリ秒（速い動き）の間でELSEをあまり速く動かしていない場合、50ミリ秒ごとにこの発砲パターンは &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseover&quot;&gt;mouseover&lt;/a&gt;&lt;/code&gt; とは異なります）。</target>
        </trans-unit>
        <trans-unit id="9d406794681205aeb7145c0100919917878e4e11" translate="yes" xml:space="preserve">
          <source>This event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer.</source>
          <target state="translated">このイベントは、ポインティングデバイスが要素のヒットテスト境界から外れたとき、ホバーをサポートしていないデバイスに対して pointerup イベントを発射したとき(pointerup を参照)、 pointercancel イベントを発射した後(pointercancel を参照)、ペンスタイラスがデジタイザで検出可能なホバー範囲から外れたときなど、いくつかの理由で発生します。</target>
        </trans-unit>
        <trans-unit id="e8e9031c3823a765ce0f32eb23377876e9aff715" translate="yes" xml:space="preserve">
          <source>This event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key).</source>
          <target state="translated">このイベントは、ドラッグ操作が終了したとき(マウスボタンを離すか、エスケープキーを押す)に発生します。</target>
        </trans-unit>
        <trans-unit id="52194dde96c01347babf030af0803632a2e9008d" translate="yes" xml:space="preserve">
          <source>This event is fired when a dragged element or text selection enters a valid drop target.</source>
          <target state="translated">このイベントは、ドラッグした要素やテキスト選択範囲が有効なドロップターゲットに入ったときに発生します。</target>
        </trans-unit>
        <trans-unit id="c2d36af1ee8d8f299b1eca60fae522243fb06d4a" translate="yes" xml:space="preserve">
          <source>This event is fired when a dragged element or text selection leaves a valid drop target.</source>
          <target state="translated">このイベントは、ドラッグした要素やテキスト選択範囲が有効なドロップターゲットから離れたときに発生します。</target>
        </trans-unit>
        <trans-unit id="75e3feecf0c204785485c35470e78edf84b79ed5" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointer changes coordinates.</source>
          <target state="translated">このイベントは、ポインタが座標を変更したときに発生します。</target>
        </trans-unit>
        <trans-unit id="4c2fba9a58dd86da82f3ce015d3fdb7bd4a00e7a" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointer is no longer &lt;em&gt;active&lt;/em&gt;.</source>
          <target state="translated">このイベントは、ポインターが&lt;em&gt;アクティブで&lt;/em&gt;なくなったときに発生します。</target>
        </trans-unit>
        <trans-unit id="68b692521ba440f8d3b73cfb3f4beea98f4dce86" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointing device is moved into an element's hit test boundaries.</source>
          <target state="translated">このイベントは、ポインティングデバイスが要素のヒットテスト境界に移動したときに発生します。</target>
        </trans-unit>
        <trans-unit id="79fb1af6710bc24e17015b14d94e33d31e1a9219" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown). This event type is similar to pointerover, but differs in that it does not bubble.</source>
          <target state="translated">このイベントは、ポインティングデバイスが、ホバーをサポートしていないデバイスからの pointerdown イベントの結果を含めて、要素またはその子孫の一つのヒットテスト境界内に移動したときに発生します(pointerdown を参照)。このイベントタイプは pointerover に似ていますが、バブルが発生しない点で異なります。</target>
        </trans-unit>
        <trans-unit id="cf30d80bcee3559524ec10b7c9706774fdfe4341" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer.</source>
          <target state="translated">このイベントは、ポインティングデバイスが要素のヒットテスト境界線の外に移動したときに発生します。ペンデバイスの場合、スタイラスがデジタイザで検出可能なホバリング範囲から外れたときに発生します。</target>
        </trans-unit>
        <trans-unit id="f767f2eaf1b4458caf61cded926fd5dc038b3aa8" translate="yes" xml:space="preserve">
          <source>This event is fired when an element is no longer the drag operation's immediate selection target.</source>
          <target state="translated">このイベントは、要素がドラッグ操作の即時選択対象ではなくなったときに発生します。</target>
        </trans-unit>
        <trans-unit id="fe9d5561daebfdf136cc25dbc0f0938fe9ae7473" translate="yes" xml:space="preserve">
          <source>This event is fired when an element or text selection is being dragged.</source>
          <target state="translated">このイベントは、要素やテキストの選択範囲がドラッグされているときに発生します。</target>
        </trans-unit>
        <trans-unit id="a0f90f62ce60b6768e210110a6b385d7bc3b89ba" translate="yes" xml:space="preserve">
          <source>This event is fired when an element or text selection is dropped on a valid drop target.</source>
          <target state="translated">このイベントは、要素やテキストの選択範囲が有効なドロップターゲットにドロップされたときに発生します。</target>
        </trans-unit>
        <trans-unit id="8e3cb7c755f279dcce823751e32715f837abc6d7" translate="yes" xml:space="preserve">
          <source>This event is fired when an element receives pointer capture.</source>
          <target state="translated">このイベントは、要素がポインタキャプチャを受信したときに発生します。</target>
        </trans-unit>
        <trans-unit id="8f8dc9f72b075b0a1ee02b937c339634534f2cd5" translate="yes" xml:space="preserve">
          <source>This event is fired when the user starts dragging an element or text selection.</source>
          <target state="translated">このイベントは、ユーザーが要素やテキスト選択範囲をドラッグし始めたときに発生します。</target>
        </trans-unit>
        <trans-unit id="8e92f02232ae3e1e894e02662896ceef2f90e051" translate="yes" xml:space="preserve">
          <source>This event is not be fired by all payment handlers. In particular, it's used by Apple Pay.</source>
          <target state="translated">このイベントはすべての決済ハンドラでは発生しません。特にApple Payで使用されています。</target>
        </trans-unit>
        <trans-unit id="7fd0aeb92cafc8f7bd5391cd8eafe8d3e7a3d25f" translate="yes" xml:space="preserve">
          <source>This event is sent by the WebRTC layer to the web site or application, so you will not typically need to instantiate an &lt;code&gt;RTCTrackEvent&lt;/code&gt; yourself.</source>
          <target state="translated">このイベントはWebRTCレイヤーによってWebサイトまたはアプリケーションに送信されるため、通常は &lt;code&gt;RTCTrackEvent&lt;/code&gt; を自分でインスタンス化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="40811ae1653cb86688723ae0b635e8a7bad068d9" translate="yes" xml:space="preserve">
          <source>This event may not be fired by all payment handlers.</source>
          <target state="translated">このイベントは、すべての支払いハンドラによって発生するわけではありません。</target>
        </trans-unit>
        <trans-unit id="7fd00432a6818f1857e568940b5db2b12a40e6ef" translate="yes" xml:space="preserve">
          <source>This eventually became a problem. Over time, various applications (including those implementing WebRTC) began to use SCTP to transmit larger and larger messages. Eventually it was realized that when the messages become too large, it's possible for the transmission of a large message to block all other data transfers on that data channel&amp;mdash;including critical signaling messages.</source>
          <target state="translated">これは結局問題になりました。時間の経過とともに、さまざまなアプリケーション（WebRTCを実装するアプリケーションを含む）はSCTPを使用して、ますます大きなメッセージを送信し始めました。最終的に、メッセージが大きくなりすぎると、重要なシグナリングメッセージを含め、大きなメッセージを送信すると、そのデータチャネル上の他のすべてのデータ転送がブロックされる可能性があることがわかりました。</target>
        </trans-unit>
        <trans-unit id="7df937a4f6ad8f3d0b5dc4127f537650f3fcbbd9" translate="yes" xml:space="preserve">
          <source>This example activates a commentary track on a video by ducking the audio level of the main audio track to 50%, then enabling the commentary track.</source>
          <target state="translated">この例では、メインオーディオトラックのオーディオレベルを 50% にダッキングし、コメンタリートラックを有効にします。</target>
        </trans-unit>
        <trans-unit id="22fd2027578d7c2b14b2dd33b6cd60e980c59890" translate="yes" xml:space="preserve">
          <source>This example adds a listener which, when a new track is added to the stream, appends a new item to a list of tracks; the new item shows the track's &lt;code&gt;kind&lt;/code&gt; (&lt;code&gt;&quot;audio&quot;&lt;/code&gt; or &lt;code&gt;&quot;video&quot;&lt;/code&gt;) and &lt;code&gt;label&lt;/code&gt;.</source>
          <target state="translated">この例では、新しいトラックがストリームに追加されると、新しいアイテムをトラックのリストに追加するリスナーを追加します。新しいアイテムには、トラックの &lt;code&gt;kind&lt;/code&gt; （ &lt;code&gt;&quot;audio&quot;&lt;/code&gt; または &lt;code&gt;&quot;video&quot;&lt;/code&gt; ）と &lt;code&gt;label&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="cc78654bd5b287e18dbf91f30e080bb7e166cea5" translate="yes" xml:space="preserve">
          <source>This example adds a listener which, when a track is removed from the stream, logs the track that was removed.</source>
          <target state="translated">この例では、ストリームからトラックが削除されたときに、削除されたトラックをログに記録するリスナーを追加しています。</target>
        </trans-unit>
        <trans-unit id="1d8133f70173427cf9058ffe1fbe8866efc15e87" translate="yes" xml:space="preserve">
          <source>This example adds a new certificate to an active connection if it doesn't already have one in use.</source>
          <target state="translated">この例では、アクティブな接続に新しい証明書がまだ使用されていない場合に、新しい証明書を追加します。</target>
        </trans-unit>
        <trans-unit id="e5c0802eb11d8f44636acb8f6d6b8f315cad26b0" translate="yes" xml:space="preserve">
          <source>This example adds a new data channel to an existing &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;myPeerConnection&lt;/code&gt;. It then establishes an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; event handler which updates some user interface elements to prepare them for being used to send messages over the data channel.</source>
          <target state="translated">この例では、新しいデータチャネルを既存の&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; myPeerConnection&lt;/a&gt;に &lt;code&gt;myPeerConnection&lt;/code&gt; ます。次に、一部のユーザーインターフェイス要素を更新してデータチャネル経由でメッセージを送信するために使用できるように準備する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; イベントハンドラーを確立します。</target>
        </trans-unit>
        <trans-unit id="c9032c2768ba377717415b1841a940460c4681ac" translate="yes" xml:space="preserve">
          <source>This example adds a video track to a connection and sets up a listener on a close button which removes the track when the user clicks the button.</source>
          <target state="translated">この例では、接続にビデオトラックを追加し、ユーザーがボタンをクリックするとトラックが削除されるクローズボタンにリスナーをセットアップします。</target>
        </trans-unit>
        <trans-unit id="e90e2d254027e45803df3df2db020d74754521b4" translate="yes" xml:space="preserve">
          <source>This example adds two items to be dragged. The last argument specifies the index of the item to add. You should add them in order starting with 0 as you cannot add items at positions farther than the last item, however you can replace existing items by using indices you have already added. Using 0 as the index is equivalent to calling &lt;a href=&quot;../datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例では、ドラッグする2つのアイテムを追加します。最後の引数は、追加するアイテムのインデックスを指定します。最後のアイテムよりも遠い位置にアイテムを追加することはできませんが、既に追加したインデックスを使用して既存のアイテムを置き換えることはできるため、0から順に追加する必要があります。インデックスとして0を使用することは、&lt;a href=&quot;../datatransfer/setdata&quot;&gt; &lt;code&gt;setData()&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="ee004a11ec9f23c230b7c06ff17181412a367927" translate="yes" xml:space="preserve">
          <source>This example animates a small model of our solar system.</source>
          <target state="translated">この例では、太陽系の小さなモデルをアニメーション化しています。</target>
        </trans-unit>
        <trans-unit id="fc53cdce9248037e5505246ecb5727af099e8180" translate="yes" xml:space="preserve">
          <source>This example applies a blue fill color to a rectangle.</source>
          <target state="translated">この例では、矩形に青の塗りつぶし色を適用しています。</target>
        </trans-unit>
        <trans-unit id="f04bb58b197479ade544f67dbb37b194c0367108" translate="yes" xml:space="preserve">
          <source>This example applies a blue stroke color to a rectangle.</source>
          <target state="translated">この例では、青色のストロークカラーを矩形に適用しています。</target>
        </trans-unit>
        <trans-unit id="d936ab4fd3185b026bec9f881fed45c76742e5c0" translate="yes" xml:space="preserve">
          <source>This example attempts to call &lt;code&gt;requestFullscreen()&lt;/code&gt; outside of an event handler. Since &lt;code&gt;requestFullscreen()&lt;/code&gt; can only be called in response to user action, for security reasons, this will fail, causing the &lt;code&gt;fullscreenerror&lt;/code&gt; to be sent to the document.</source>
          <target state="translated">この例では、イベントハンドラの外で &lt;code&gt;requestFullscreen()&lt;/code&gt; を呼び出そうとしています。以来 &lt;code&gt;requestFullscreen()&lt;/code&gt; のみ、セキュリティ上の理由から、これが原因、失敗し、ユーザーのアクションに応じて呼び出すことができ &lt;code&gt;fullscreenerror&lt;/code&gt; が文書に送信します。</target>
        </trans-unit>
        <trans-unit id="862a350730700aad5b423c593dae620209c94b3e" translate="yes" xml:space="preserve">
          <source>This example attempts to switch into full-screen mode from outside a handler for a user-initiated event (such as a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keypress&quot;&gt;keypress&lt;/a&gt;&lt;/code&gt; event). SInce full-screen mode changes are only permitted in response to a user input, this causes an error to occur, which triggers the delivery of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenerror&quot;&gt;fullscreenerror&lt;/a&gt;&lt;/code&gt; event to the error handler,</source>
          <target state="translated">この例では、ユーザーが開始したイベント（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントや &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keypress&quot;&gt;keypress&lt;/a&gt;&lt;/code&gt; イベントなど）のハンドラーの外側から全画面モードに切り替えようとしています。全画面モードの変更はユーザー入力に応じてのみ許可されるため、これによりエラーが発生し、エラーハンドラーへの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenerror&quot;&gt;fullscreenerror&lt;/a&gt;&lt;/code&gt; エラーイベントの配信がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="83729187f5fbdafe2b29b6e5dccd163f5d7a6ae5" translate="yes" xml:space="preserve">
          <source>This example begins loading content from the MDN home page, then due to some condition, aborts the transfer by calling &lt;code&gt;abort()&lt;/code&gt;.</source>
          <target state="translated">この例では、MDNホームページからコンテンツのロードを開始します。その後、何らかの条件により、 &lt;code&gt;abort()&lt;/code&gt; を呼び出して転送を中止します。</target>
        </trans-unit>
        <trans-unit id="bbe0af236902efc4eb8023be40e8d651910471c4" translate="yes" xml:space="preserve">
          <source>This example builds a &lt;code&gt;FormData&lt;/code&gt; instance containing values for fields named &quot;username&quot;, &quot;accountnum&quot;, &quot;userfile&quot; and &quot;webmasterfile&quot;, then uses the &lt;code&gt;XMLHttpRequest&lt;/code&gt; method &lt;a href=&quot;../xmlhttprequest#send()&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; to send the form's data. The field &quot;webmasterfile&quot; is a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Blob&lt;/code&gt; object represents a file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; interface is based on &lt;code&gt;Blob&lt;/code&gt;, inheriting blob functionality and expanding it to support files on the user's system. In order to build a &lt;code&gt;Blob&lt;/code&gt; you can invoke the &lt;a href=&quot;../blob/blob&quot;&gt;&lt;code&gt;Blob() constructor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例では、「username」、「accountnum」、「userfile」、「webmasterfile」というフィールドの値を含む &lt;code&gt;FormData&lt;/code&gt; インスタンスを作成し、 &lt;code&gt;XMLHttpRequest&lt;/code&gt; メソッド&lt;a href=&quot;../xmlhttprequest#send()&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;を使用してフォームのデータを送信します。 「webmasterfile」フィールドは&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;です。 &lt;code&gt;Blob&lt;/code&gt; オブジェクトは、ファイルのような不変、生データのオブジェクトを表します。 Blobは、必ずしもJavaScriptネイティブ形式ではないデータを表します。&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;インターフェイスは基づいている &lt;code&gt;Blob&lt;/code&gt; ブロブの機能を継承し、ユーザーのシステム上のファイルをサポートするために、それを拡大し、。 &lt;code&gt;Blob&lt;/code&gt; を作成するには、&lt;a href=&quot;../blob/blob&quot;&gt; &lt;code&gt;Blob() constructor&lt;/code&gt; &lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="089e02134fca2cccd4c2538b43ebb52db0fd12bb" translate="yes" xml:space="preserve">
          <source>This example cancels both the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events by calling the &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt;. method. This allows a drop to occur on that element.</source>
          <target state="translated">この例では、両方の取り消し &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントを呼び出すことにより、イベント&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt;。方法。これにより、その要素でドロップが発生します。</target>
        </trans-unit>
        <trans-unit id="7ca5b572e3f656743ba108fe6aaab93f22134fda" translate="yes" xml:space="preserve">
          <source>This example causes the current document to toggle in and out of a full-screen presentation whenever the mouse button is clicked within it.</source>
          <target state="translated">この例では、現在のドキュメント内でマウスボタンがクリックされるたびに、現在のドキュメントをフルスクリーン表示に切り替えて表示します。</target>
        </trans-unit>
        <trans-unit id="9ccb2c800909e422c7e2ff606f4ea18b07549a71" translate="yes" xml:space="preserve">
          <source>This example checks if the first node inside the document element is a comment node, and if it is not, displays a message.</source>
          <target state="translated">この例では、ドキュメント要素内の最初のノードがコメントノードであるかどうかをチェックし、そうでない場合はメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="2e73ccbbbcf7a6c3d97ddd68c429ea4a684efe56" translate="yes" xml:space="preserve">
          <source>This example checks the current horizontal scroll position of the document. If it's greater than 400 pixels, the window is scrolled back to the beginning.</source>
          <target state="translated">この例では、ドキュメントの現在の水平スクロール位置をチェックします。400 ピクセルより大きい場合は、ウィンドウが最初にスクロールされます。</target>
        </trans-unit>
        <trans-unit id="caa2fb9c52c5c5986dc70eec5b004682b3e58f46" translate="yes" xml:space="preserve">
          <source>This example checks the size of a log file and removes it if it's larger than a megabyte.</source>
          <target state="translated">この例では、ログファイルのサイズをチェックして、メガバイトより大きい場合は削除します。</target>
        </trans-unit>
        <trans-unit id="afce5c4b34d9a45aab04d604905852b6ca7fd2a8" translate="yes" xml:space="preserve">
          <source>This example checks the size of a log file in a temporary folder and, if it exceeds a megabyte, moves it into a different directory.</source>
          <target state="translated">この例では、一時フォルダ内のログファイルのサイズをチェックし、メガバイトを超えると別のディレクトリに移動します。</target>
        </trans-unit>
        <trans-unit id="1c80e65d6bb1a336bea7faa12e18a1f2e108fc9d" translate="yes" xml:space="preserve">
          <source>This example checks to see if the script is being executed asynchronously:</source>
          <target state="translated">この例では、スクリプトが非同期に実行されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="1a035c3447c5ff43616c1a2c3fadf7b791c06e27" translate="yes" xml:space="preserve">
          <source>This example could be simplified somewhat; you may more often see the code look something like this, taking advantage of more advanced ECMAScript 2016 features:</source>
          <target state="translated">この例は多少簡略化されているかもしれませんが、より高度な ECMAScript 2016 の機能を利用して、このようなコードを見ることが多くなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="e53f84d2af1fb2abc165aebc095017cb104ca8be" translate="yes" xml:space="preserve">
          <source>This example counts the number of tracks in an array of &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; objects which are currently muted.</source>
          <target state="translated">この例では、現在ミュートされている&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;オブジェクトの配列内のトラック数をカウントします。</target>
        </trans-unit>
        <trans-unit id="3344a1d77cd2e65e164aeaff0e88b14bfdc210b5" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt; object representing the top-left corner of the current window, in screen coordinates, then converts that to JSON.</source>
          <target state="translated">この例では、現在のウィンドウの左上隅を画面座標で表す&lt;a href=&quot;../dompoint&quot;&gt; &lt;code&gt;DOMPoint&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、それをJSONに変換します。</target>
        </trans-unit>
        <trans-unit id="2492e4e831e6796917af19d67b6be2c3a29a302f" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element, establishes an error handler for it, then lets the user click buttons to choose whether to assign a valid audio file or a missing file to the element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; attribute. The error handler simply outputs a message to a box onscreen describing the error, including both the &lt;code&gt;code&lt;/code&gt; and the &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">この例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成し、そのエラーハンドラーを確立します。次に、ユーザーがボタンをクリックして、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; 属性に有効なオーディオファイルまたは欠落しているファイルを割り当てるかどうかを選択できます。エラーハンドラは、 &lt;code&gt;code&lt;/code&gt; と &lt;code&gt;message&lt;/code&gt; 両方を含むエラーを説明するメッセージを画面上のボックスに出力するだけです。</target>
        </trans-unit>
        <trans-unit id="b5e1a8e7ac48b3777b6be8a115ac1c8b4fc04848" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, establishes an error handler for it, and then sets the element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; attribute to the video resource to present in the element. The error handler simply outputs a message</source>
          <target state="translated">この例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成し、その要素のエラーハンドラーを確立してから、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; 属性を要素に表示するビデオリソースに設定します。エラーハンドラは単にメッセージを出力します</target>
        </trans-unit>
        <trans-unit id="c551b19b4597e098976ceaa7ed656c8ed8236d2b" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;code&gt;DOMPoint&lt;/code&gt; representing the top-left corner of the current window, then creates a second point based on the first, which is then offset by 100 pixels both vertically and horizontally.</source>
          <target state="translated">この例では、現在のウィンドウの左上隅を表す &lt;code&gt;DOMPoint&lt;/code&gt; を作成し、最初のポイントに基づいて2番目のポイントを作成します。次に、垂直および水平の両方に100ピクセルずつオフセットします。</target>
        </trans-unit>
        <trans-unit id="14b7c8f489637ea2b2cd69312e5172d3cb6a5f6a" translate="yes" xml:space="preserve">
          <source>This example creates a list of major web browsers.</source>
          <target state="translated">この例では、主要なウェブブラウザのリストを作成します。</target>
        </trans-unit>
        <trans-unit id="94e01c519b4e2d08bad3a0cc70177e3ec840a6a8" translate="yes" xml:space="preserve">
          <source>This example creates a method called &lt;code&gt;readDirectory()&lt;/code&gt;, which fetches all of the entries in the specified &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDIrectoryEntry&quot;&gt;&lt;code&gt;FileSystemDIrectoryEntry&lt;/code&gt;&lt;/a&gt; and returns them in an array.</source>
          <target state="translated">この例では、 &lt;code&gt;readDirectory()&lt;/code&gt; というメソッドを作成します。このメソッドは、指定された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDIrectoryEntry&quot;&gt; &lt;code&gt;FileSystemDIrectoryEntry&lt;/code&gt; の&lt;/a&gt;すべてのエントリをフェッチし、それらを配列で返します。</target>
        </trans-unit>
        <trans-unit id="ee2bf929ec4af5a43a62bea1d0faaa4c214fde72" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; for interactive audio (optimizing for latency) and a sample rate of 44.1kHz.</source>
          <target state="translated">この例では、インタラクティブオーディオ用の新しい&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;（遅延を最適化する）と44.1kHzのサンプルレートを作成します。</target>
        </trans-unit>
        <trans-unit id="f121cd8f7915b8775d2640752bf5cdfbd3fd5e43" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; instance and starts recording using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent's&lt;/a&gt; default media format. It returns either the &lt;code&gt;MediaRecorder&lt;/code&gt; or the name of the error that occurred if any exceptions are thrown during the setup process.</source>
          <target state="translated">この例では、新しい&lt;a href=&quot;../mediarecorder&quot;&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; &lt;/a&gt;インスタンスを作成し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザーエージェントの&lt;/a&gt;デフォルトのメディア形式を使用して記録を開始します。 &lt;code&gt;MediaRecorder&lt;/code&gt; またはセットアッププロセス中に例外がスローされた場合に発生したエラーの名前を返します。</target>
        </trans-unit>
        <trans-unit id="5892214e5945c1a0ad1410b31b0b9674bead3789" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which uses a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; server at &lt;code&gt;turnserver.example.org&lt;/code&gt; to negotiate connections. Logging into the TURN server uses the username &quot;webrtc&quot; and the creative password &quot;turnpassword&quot;.</source>
          <target state="translated">この例では、新しい作成&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURNの&lt;/a&gt;でサーバーを &lt;code&gt;turnserver.example.org&lt;/code&gt; 接続を交渉することを。TURNサーバーにログインするには、ユーザー名「webrtc」とクリエイティブパスワード「turnpassword」を使用します。</target>
        </trans-unit>
        <trans-unit id="2ec2a187553312d3865d02f984209fee18b1d0f2" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which will use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/STUN&quot;&gt;STUN&lt;/a&gt; server at &lt;code&gt;stunserver.example.org&lt;/code&gt; to negotiate connections.</source>
          <target state="translated">この例では、新しい作成&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;使用する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/STUN&quot;&gt;STUNの&lt;/a&gt;でサーバーを &lt;code&gt;stunserver.example.org&lt;/code&gt; 接続を交渉することを。</target>
        </trans-unit>
        <trans-unit id="f06fbbbb2ce4287b999fb54922f6141f65af498b" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which will use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; server at &lt;code&gt;turnserver.example.org&lt;/code&gt; to negotiate connections. Logging into the TURN server will use the username &quot;webrtc&quot; and the creative password &quot;turnpassword&quot;.</source>
          <target state="translated">この例では、新しい作成&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;使用する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURNの&lt;/a&gt;でサーバーを &lt;code&gt;turnserver.example.org&lt;/code&gt; 接続を交渉することを。TURNサーバーにログインすると、ユーザー名「webrtc」とクリエイティブパスワード「turnpassword」が使用されます。</target>
        </trans-unit>
        <trans-unit id="d238cd72be6b873d183342587d19b0cae2946793" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unhandledrejection&quot;&gt;unhandledrejection&lt;/a&gt;&lt;/code&gt; event for the promise &lt;code&gt;myPromise&lt;/code&gt; with the reason being the string &quot;My house is on fire&quot;. The &lt;code&gt;reason&lt;/code&gt; could just as easily be a number, or even an object with detailed information including the home address, how serious the fire is, and the phone number of an emergency contact who should be notified.</source>
          <target state="translated">この例では、「my house is on fire」という文字列を理由として、 &lt;code&gt;myPromise&lt;/code&gt; のプロミスに対して新しい &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unhandledrejection&quot;&gt;unhandledrejection&lt;/a&gt;&lt;/code&gt; 拒否イベントを作成します。 &lt;code&gt;reason&lt;/code&gt; 同じように簡単に数、または自宅住所などの詳細情報とさえオブジェクト、どのように深刻な火災があり、かつ通知されるべき緊急連絡先の電話番号である可能性があります。</target>
        </trans-unit>
        <trans-unit id="2fee46bd9985e11874232f209749cc64d371f57f" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;code&gt;DOMPoint&lt;/code&gt; representing the top-left corner of the current window, with a &lt;em&gt;z&lt;/em&gt; component added to move the point closer to the user. This same code will work to create a &lt;code&gt;DOMPointReadOnly&lt;/code&gt; object; just change the interface name in the code.</source>
          <target state="translated">この例では、現在のウィンドウの左上隅を表す新しい &lt;code&gt;DOMPoint&lt;/code&gt; を作成し、&lt;em&gt;z&lt;/em&gt;コンポーネントを追加してポイントをユーザーの近くに移動します。これと同じコードで &lt;code&gt;DOMPointReadOnly&lt;/code&gt; オブジェクトを作成できます。コードのインターフェイス名を変更するだけです。</target>
        </trans-unit>
        <trans-unit id="eacd87e16a860256ef9a97cd1b28c79eaefc3a73" translate="yes" xml:space="preserve">
          <source>This example creates a new HTML document and inserts it into an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; in the current document.</source>
          <target state="translated">この例では、新しいHTMLドキュメントを作成し、それを現在のドキュメントの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;に挿入します。</target>
        </trans-unit>
        <trans-unit id="1a27dc53a8115907a825128c91c65db89cb1f1d6" translate="yes" xml:space="preserve">
          <source>This example creates a new audio buffer, then copies the samples from another channel into it.</source>
          <target state="translated">この例では、新しいオーディオバッファを作成し、別のチャンネルのサンプルをコピーします。</target>
        </trans-unit>
        <trans-unit id="f6110037ae735e89cc4db25896962994038cf5ca" translate="yes" xml:space="preserve">
          <source>This example creates a periodic function using &lt;a href=&quot;../windoworworkerglobalscope/setinterval&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt; that collects statistics for an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; every second, generating an HTML-formatted report and inserting it into a specific element in the DOM.</source>
          <target state="translated">この例では、&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;統計を毎秒収集する&lt;a href=&quot;../windoworworkerglobalscope/setinterval&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt;を使用して定期的な関数を作成し、HTML形式のレポートを生成して、DOMの特定の要素に挿入します。</target>
        </trans-unit>
        <trans-unit id="5bde58494d0fed00eff9a339745f0d3794f52c6d" translate="yes" xml:space="preserve">
          <source>This example creates a point, &lt;code&gt;origPoint&lt;/code&gt;, of type &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt;, using &lt;a href=&quot;../dompoint/dompoint&quot;&gt;&lt;code&gt;new DOMPoint()&lt;/code&gt;&lt;/a&gt;. That point is then used as the input for &lt;code&gt;fromPoint()&lt;/code&gt; to create a new point, &lt;code&gt;newPoint&lt;/code&gt;.</source>
          <target state="translated">この例では、&lt;a href=&quot;../dompoint/dompoint&quot;&gt; &lt;code&gt;new DOMPoint()&lt;/code&gt; &lt;/a&gt;を使用して、タイプ&lt;a href=&quot;../dompoint&quot;&gt; &lt;code&gt;DOMPoint&lt;/code&gt; の&lt;/a&gt;ポイント &lt;code&gt;origPoint&lt;/code&gt; を作成します。次に、そのポイントを &lt;code&gt;fromPoint()&lt;/code&gt; の入力として使用して、新しいポイント &lt;code&gt;newPoint&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="a96e0142535559ce3d38564b6c90086bef6a5859" translate="yes" xml:space="preserve">
          <source>This example creates a rectangle using the &lt;code&gt;rect()&lt;/code&gt; method, and then draws it to the canvas using &lt;code&gt;stroke()&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;rect()&lt;/code&gt; メソッドを使用して長方形を作成し、 &lt;code&gt;stroke()&lt;/code&gt; を使用してそれをキャンバスに描画します。</target>
        </trans-unit>
        <trans-unit id="4d8f9bee60754210e091cc30c3cd0c50b2b5fc52" translate="yes" xml:space="preserve">
          <source>This example creates a rectangular path using the &lt;code&gt;rect()&lt;/code&gt; method. The path is then rendered using the &lt;code&gt;fill()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;rect()&lt;/code&gt; メソッドを使用して長方形のパスを作成します。次に、パスは &lt;code&gt;fill()&lt;/code&gt; メソッドを使用してレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="129f2770e71a6bdfca40fd1e2e3502835ccd1abb" translate="yes" xml:space="preserve">
          <source>This example creates a rounded corner using &lt;code&gt;arcTo()&lt;/code&gt;. This is one of the method's most common uses.</source>
          <target state="translated">この例では、 &lt;code&gt;arcTo()&lt;/code&gt; を使用して丸みのあるコーナーを作成します。これは、メソッドの最も一般的な用途の1つです。</target>
        </trans-unit>
        <trans-unit id="11b145b737e7f576ee3f3b70feea3b68bae7775e" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;ImageData&lt;/code&gt; object that is 100 pixels wide and 100 pixels tall, making 10,000 pixels in all. The &lt;code&gt;data&lt;/code&gt; array stores four values for each pixel, making 4 x 10,000, or 40,000 values in all.</source>
          <target state="translated">この例では、幅100ピクセル、高さ100ピクセルの &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成し、全体で10,000ピクセルにします。 &lt;code&gt;data&lt;/code&gt; アレイは、全部で4&amp;times;10,000または40,000の値を構成する各画素のための4つの値を格納します。</target>
        </trans-unit>
        <trans-unit id="76f789f52f1fc64ce53bfca92d99429e4412f1e8" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;ImageData&lt;/code&gt; object that is 200 pixels wide and 100 pixels tall, containing a total of 20,000 pixels.</source>
          <target state="translated">この例では、幅200ピクセル、高さ100ピクセルで、合計20,000ピクセルを含む &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="1603fef1b9a1db97cda6dbbdd14d4f8107918db2" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;ImageData&lt;/code&gt; object that is 200 pixels wide and 100 pixels tall. Thus, the &lt;code&gt;height&lt;/code&gt; property is &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">この例では、幅200ピクセル、高さ100ピクセルの &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成します。したがって、 &lt;code&gt;height&lt;/code&gt; プロパティは &lt;code&gt;100&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b1f83c8771093a58694e87a02104268c25dbf3e2" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;ImageData&lt;/code&gt; object that is 200 pixels wide and 100 pixels tall. Thus, the &lt;code&gt;width&lt;/code&gt; property is &lt;code&gt;200&lt;/code&gt;.</source>
          <target state="translated">この例では、幅200ピクセル、高さ100ピクセルの &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成します。したがって、 &lt;code&gt;width&lt;/code&gt; プロパティは &lt;code&gt;200&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7a7b3716610a5c5a4a0dc130e8de1bb85ff9cf30" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;unmute&lt;/code&gt; event handler which changes the state of a visual indicator to display the Emoji character representing a &quot;speaker&quot; icon.</source>
          <target state="translated">この例では、 &lt;code&gt;unmute&lt;/code&gt; イベントハンドラーを作成して、視覚的なインジケーターの状態を変更し、「スピーカー」アイコンを表す絵文字を表示します。</target>
        </trans-unit>
        <trans-unit id="0d66b55cf7772ec92626d6dc0ebba47603ee6345" translate="yes" xml:space="preserve">
          <source>This example creates an observer then, later, disconnects from it, leaving it available for possible reuse.</source>
          <target state="translated">この例では、オブザーバを作成した後、それを切り離し、再利用できるようにしています。</target>
        </trans-unit>
        <trans-unit id="7560776f23946e6fac638b4b9f69dbab3c0990ef" translate="yes" xml:space="preserve">
          <source>This example creates an oscillator, then links it to a gain node, so that the gain node controls the volume of the oscillator node.</source>
          <target state="translated">この例では、オシレータを作成し、それをゲインノードにリンクして、ゲインノードがオシレータノードの音量を制御するようにしています。</target>
        </trans-unit>
        <trans-unit id="935d7c415f11404b577077901ac9b5d03e8c5e4f" translate="yes" xml:space="preserve">
          <source>This example creates and configures two &lt;code&gt;PerformanceObservers&lt;/code&gt;; one watches for &lt;code&gt;&quot;mark&quot;&lt;/code&gt; and &lt;code&gt;&quot;frame&quot;&lt;/code&gt; events, and the other watches for &lt;code&gt;&quot;measure&quot;&lt;/code&gt; events.</source>
          <target state="translated">この例では、2つの &lt;code&gt;PerformanceObservers&lt;/code&gt; を作成して構成します。1つは &lt;code&gt;&quot;mark&quot;&lt;/code&gt; および &lt;code&gt;&quot;frame&quot;&lt;/code&gt; イベントを監視し、もう1つは &lt;code&gt;&quot;measure&quot;&lt;/code&gt; イベントを監視します。</target>
        </trans-unit>
        <trans-unit id="68712c65513217185496da3e815c63fd9968261f" translate="yes" xml:space="preserve">
          <source>This example creates and fills a new &lt;code&gt;ImageData&lt;/code&gt; object with colorful pixels.</source>
          <target state="translated">この例では、新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成し、カラフルなピクセルで塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="5a724b71a87e53c63ddecfe2aad64749d691f32f" translate="yes" xml:space="preserve">
          <source>This example creates and fills a new &lt;code&gt;ImageData&lt;/code&gt; object with purple pixels.</source>
          <target state="translated">この例では、新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成し、紫色のピクセルで塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="e73c73a3a16cfe942ba538ee931ce72bbdea2a32" translate="yes" xml:space="preserve">
          <source>This example creates the first two (diagonal) sides of a triangle using the &lt;code&gt;lineTo()&lt;/code&gt; method. After that, the triangle's base is created with the &lt;code&gt;closePath()&lt;/code&gt; method, which automatically connects the shape's first and last points.</source>
          <target state="translated">この例では、 &lt;code&gt;lineTo()&lt;/code&gt; メソッドを使用して、三角形の最初の2つの（対角）辺を作成します。その後、三角形のベースが &lt;code&gt;closePath()&lt;/code&gt; メソッドで作成されます。これは、シェイプの最初と最後のポイントを自動的に接続します。</target>
        </trans-unit>
        <trans-unit id="4e26e0a0262799b965326eb35eb0ad82acd0e9a3" translate="yes" xml:space="preserve">
          <source>This example creates three elliptical paths with vaying properties.</source>
          <target state="translated">この例では、ベイ特性を持つ3つの楕円形のパスを作成しています。</target>
        </trans-unit>
        <trans-unit id="8587a271f1d2a9d3042410bfd5c8515a1346fda1" translate="yes" xml:space="preserve">
          <source>This example creates two buttons which let you set the current color of the paragraph element located under the coordinates (2, 2).</source>
          <target state="translated">この例では、座標 (2,2)の下にある段落要素の現在の色を設定するための 2 つのボタンを作成しています。</target>
        </trans-unit>
        <trans-unit id="2b901257b83f94ab3a6ae3c87c7d8f6a98109551" translate="yes" xml:space="preserve">
          <source>This example creates two paths, each of which contains a single line.</source>
          <target state="translated">この例では、2 つのパスを作成し、それぞれに 1 行が含まれています。</target>
        </trans-unit>
        <trans-unit id="8028fe3a46de4d348e7260928626f1f880915566" translate="yes" xml:space="preserve">
          <source>This example defines a audio configuration then checks to see if the user agent supports decoding that media configuration, and whether it will perform well in terms of smoothness and power efficiency.</source>
          <target state="translated">この例では、オーディオ構成を定義し、ユーザーエージェントがそのメディア構成のデコードをサポートしているかどうかを確認し、スムーズさと電力効率の面でうまく機能するかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="eebf98d4da6c01d7b1d9c2c79b4c76e26c4f8cb3" translate="yes" xml:space="preserve">
          <source>This example deletes a temporary work file.</source>
          <target state="translated">この例では、一時的な作業ファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="97e56816be4ce17b325dc481a49c8b5f66d7a352" translate="yes" xml:space="preserve">
          <source>This example demonstrates a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event handler for a pause button.</source>
          <target state="translated">この例は、一時停止ボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="318942d1fdedb7b34fe6879be39788097a9943d4" translate="yes" xml:space="preserve">
          <source>This example demonstrates a simple event listener implemented using arrow function notation.</source>
          <target state="translated">この例では、矢印関数記法を使用して実装されたシンプルなイベント・リスナーを示します。</target>
        </trans-unit>
        <trans-unit id="25fde44f7a181d6c34d80c26abda65b98d3cbb9d" translate="yes" xml:space="preserve">
          <source>This example demonstrates how different &lt;a href=&quot;rollofffactor&quot;&gt;&lt;code&gt;rolloffFactor&lt;/code&gt;&lt;/a&gt; values affect how the volume of the test tone decreases with increasing distance from the listener:</source>
          <target state="translated">この例は、さまざまな&lt;a href=&quot;rollofffactor&quot;&gt; &lt;code&gt;rolloffFactor&lt;/code&gt; &lt;/a&gt;値が、リスナーからの距離の増加に伴ってテストトーンの音量がどのように減少するかにどのように影響するかを示しています。</target>
        </trans-unit>
        <trans-unit id="e0db1d52cccc2674275f08564e1536e6e20e350c" translate="yes" xml:space="preserve">
          <source>This example demonstrates how different values of &lt;a href=&quot;refdistance&quot;&gt;&lt;code&gt;refDistance&lt;/code&gt;&lt;/a&gt; affect how the volume of a sound decays as it moves away from the listener. Unlike &lt;a href=&quot;rollofffactor&quot;&gt;&lt;code&gt;rolloffFactor&lt;/code&gt;&lt;/a&gt;, changing this value also &lt;em&gt;delays&lt;/em&gt; the volume decay until the sound moves past the reference point.</source>
          <target state="translated">この例では、&lt;a href=&quot;refdistance&quot;&gt; &lt;code&gt;refDistance&lt;/code&gt; の&lt;/a&gt;さまざまな値が、リスナーから離れるにつれてサウンドのボリュームがどのように減衰するかに影響を与えます。&lt;a href=&quot;rollofffactor&quot;&gt; &lt;code&gt;rolloffFactor&lt;/code&gt; &lt;/a&gt;とは異なり、この値を変更すると、サウンドが参照ポイントを通過するまで音量の減衰も&lt;em&gt;遅延&lt;/em&gt;します。</target>
        </trans-unit>
        <trans-unit id="831b0f00ff6983bbff81cd37bc1747994a925be1" translate="yes" xml:space="preserve">
          <source>This example demonstrates how events fire and are handled in the DOM in a very simple way. When the BODY of this HTML document loads, an event listener is registered with the top row of the TABLE. The event listener handles the event by executing the function stopEvent, which changes the value in the bottom cell of the table.</source>
          <target state="translated">この例では、イベントがどのように発生し、DOM で処理されるかを非常にシンプルな方法で示しています。この HTML ドキュメントの BODY がロードされると、TABLE の一番上の行にイベントリスナーが登録されます。イベントリスナーは、関数 stopEvent を実行することでイベントを処理し、テーブルの一番下のセルの値を変更します。</target>
        </trans-unit>
        <trans-unit id="d68399cba8f63bb176c2551051885d557979d0ac" translate="yes" xml:space="preserve">
          <source>This example demonstrates how the &lt;a href=&quot;../window/getcomputedstyle&quot;&gt;&lt;code&gt;window.getComputedStyle&lt;/code&gt;&lt;/a&gt; method can be used to get the styles of an element that are not set using the &lt;code&gt;style&lt;/code&gt; attribute or with JavaScript (e.g., &lt;code&gt;elt.style.backgroundColor=&quot;rgb(173, 216, 230)&quot;&lt;/code&gt;). These latter types of styles can be retrieved with the more direct &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/style&quot;&gt;&lt;code&gt;elt.style&lt;/code&gt;&lt;/a&gt; property, whose properties are listed in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Reference&quot;&gt;DOM CSS Properties List&lt;/a&gt;.</source>
          <target state="translated">この例は、&lt;a href=&quot;../window/getcomputedstyle&quot;&gt; &lt;code&gt;window.getComputedStyle&lt;/code&gt; &lt;/a&gt;メソッドを使用して、 &lt;code&gt;style&lt;/code&gt; 属性またはJavaScriptで設定されていない要素のスタイルを取得する方法を示しています（例： &lt;code&gt;elt.style.backgroundColor=&quot;rgb(173, 216, 230)&quot;&lt;/code&gt; ） 。これらの後者のタイプのスタイルは、より直接的な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/style&quot;&gt; &lt;code&gt;elt.style&lt;/code&gt; &lt;/a&gt;プロパティで取得できます。そのプロパティは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Reference&quot;&gt;DOM CSSプロパティリストに&lt;/a&gt;リストされています。</target>
        </trans-unit>
        <trans-unit id="87b3fc90574fc8631ec025cec2fbe698929d6bbd" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to confirm that playback has begun and how to gracefully handle blocked automatic playback:</source>
          <target state="translated">この例では、再生が開始されたことを確認する方法と、ブロックされた自動再生を優雅に処理する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4d64d34709acf5e543ff3a28796ce0d7845f3bc9" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to create an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; which is scheduled to start playing in 2 seconds and stop playing 1 second after that. The times are calculated by adding the desired number of seconds to the context's current time stamp returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;AudioContext.currentTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例は、2秒後に再生を開始し、1秒後に再生を停止するようにスケジュールされた&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;を作成する方法を示しています。時間は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt; &lt;code&gt;AudioContext.currentTime&lt;/code&gt; &lt;/a&gt;によって返されるコンテキストの現在のタイムスタンプに必要な秒数を追加することによって計算されます。</target>
        </trans-unit>
        <trans-unit id="1e427dc5d39831ae9b026ef07bdc55937deea112" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to detect a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebGL&quot;&gt;WebGL&lt;/a&gt; rendering context and reports the result to the user.</source>
          <target state="translated">この例は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebGL&quot;&gt;WebGL&lt;/a&gt;レンダリングコンテキストを検出し、結果をユーザーに報告する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="91035eeda86cd4121e3a14979113c918f6fe4ce2" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to make a simple synchronous request.</source>
          <target state="translated">この例では、シンプルな同期リクエストを作成する方法を示します。</target>
        </trans-unit>
        <trans-unit id="a090785e44c96c21f459f3310340faa79cfbdfe5" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to use &lt;code&gt;addEventListener()&lt;/code&gt; to watch for mouse clicks on an element.</source>
          <target state="translated">この例では、 &lt;code&gt;addEventListener()&lt;/code&gt; を使用して、要素のマウスクリックを監視する方法を示します。</target>
        </trans-unit>
        <trans-unit id="beff8e52a51a2a994f292603f72a5250a5a7e666" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to use video files as textures.</source>
          <target state="translated">この例では、動画ファイルをテクスチャとして使用する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="6ecb841f365fb9cfdb27a00fb78b4889dbdd7d2e" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to watch for and act upon &lt;code&gt;pointerdown&lt;/code&gt; events using &lt;code&gt;onpointerdown&lt;/code&gt;. You could also use &lt;code&gt;addEventListener()&lt;/code&gt;, of course.</source>
          <target state="translated">この例では、を監視して作用する方法を示し &lt;code&gt;pointerdown&lt;/code&gt; 使用してイベント &lt;code&gt;onpointerdown&lt;/code&gt; 。もちろん、 &lt;code&gt;addEventListener()&lt;/code&gt; を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="511b70eafa42cd1baa9641e5c60ccacf3936c1b9" translate="yes" xml:space="preserve">
          <source>This example demonstrates simulating a click (that is programmatically generating a click event) on a checkbox using DOM methods.</source>
          <target state="translated">この例では、DOM メソッドを使用してチェックボックスのクリック(クリックイベントをプログラムで生成する)をシミュレートしています。</target>
        </trans-unit>
        <trans-unit id="28799e6d6c6990e93bb85da04feecee02950621e" translate="yes" xml:space="preserve">
          <source>This example demonstrates some of the benefits of translating the canvas origin. Without the &lt;code&gt;translate()&lt;/code&gt; method, all of the rectangles would be drawn at the same position (0,0). The &lt;code&gt;translate()&lt;/code&gt; method also gives us the freedom to place the rectangle anywhere on the canvas without having to manually adjust coordinates in the &lt;code&gt;fillRect()&lt;/code&gt; function. This makes it a little easier to understand and use.</source>
          <target state="translated">この例は、キャンバスの原点を翻訳することの利点のいくつかを示しています。なければ &lt;code&gt;translate()&lt;/code&gt; メソッド、四角形のすべてが同じ位置（0,0）で描画されます。また、 &lt;code&gt;translate()&lt;/code&gt; メソッドを使用すると、 &lt;code&gt;fillRect()&lt;/code&gt; 関数で座標を手動で調整しなくても、キャンバス上の任意の場所に長方形を自由に配置できます。これにより、理解と使用が少し簡単になります。</target>
        </trans-unit>
        <trans-unit id="e892e2c4c9aa62107c0a1ec7dd8b76175350a294" translate="yes" xml:space="preserve">
          <source>This example demonstrates starting an oscillator node, scheduled to begin playing at once and to stop playing in one second. The stop time is determined by taking the audio context's current time from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;AudioContext.currentTime&lt;/code&gt;&lt;/a&gt; and adding 1 second.</source>
          <target state="translated">この例は、すぐに再生を開始し、1秒で停止するようにスケジュールされたオシレーターノードの開始を示しています。停止時間は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt; &lt;code&gt;AudioContext.currentTime&lt;/code&gt; &lt;/a&gt;からオーディオコンテキストの現在の時間を取り、1秒を追加することによって決定されます。</target>
        </trans-unit>
        <trans-unit id="3f77af4ce6edc6e43f055a3322106e52d317872d" translate="yes" xml:space="preserve">
          <source>This example demonstrates that the hierarchy of the entire document is considered when applying &lt;code&gt;selectors&lt;/code&gt;, so that levels outside the specified &lt;code&gt;baseElement&lt;/code&gt; are still considered when locating matches.</source>
          <target state="translated">この例は、 &lt;code&gt;selectors&lt;/code&gt; 適用するときにドキュメント全体の階層が考慮されることを示しています。そのため、一致を &lt;code&gt;baseElement&lt;/code&gt; するときに、指定されたbaseElementの外側のレベルも考慮されます。</target>
        </trans-unit>
        <trans-unit id="fb2ec2f8cb2608f036ffd243bfa2531199d01b58" translate="yes" xml:space="preserve">
          <source>This example demonstrates the &lt;code&gt;addHitRegion()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;addHitRegion()&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="89fc2304b240086903be5b34e85edee9e1a077a4" translate="yes" xml:space="preserve">
          <source>This example demonstrates the &lt;code&gt;clearHitRegions()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;clearHitRegions()&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="2e3522470e08cb7d2cd8534bcb4dc33de6b9b7ab" translate="yes" xml:space="preserve">
          <source>This example demonstrates the &lt;code&gt;getLineDash()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;getLineDash()&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="f52df6deaaabf5e36e43473641dbae0cd1775cd1" translate="yes" xml:space="preserve">
          <source>This example demonstrates the &lt;code&gt;removeHitRegion()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;removeHitRegion()&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="60f9c1f9e15adfc0329d9d3b25107347d15f6698" translate="yes" xml:space="preserve">
          <source>This example demonstrates the simple animation of a one-color shape. Topics examined are adapting to aspect ratio differences, a function to build shader programs from sets of multiple shaders, and the basics of drawing in WebGL.</source>
          <target state="translated">この例では、1 色の図形の簡単なアニメーションを示します。アスペクト比の違いへの対応、複数のシェーダのセットからシェーダプログラムを構築する機能、WebGL での描画の基本などを取り上げています。</target>
        </trans-unit>
        <trans-unit id="cd6bc8dbbd217a48267faf723e93376988c174bb" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of &lt;code&gt;firstChild&lt;/code&gt; and how whitespace nodes might interfere with using this property.</source>
          <target state="translated">この例では、 &lt;code&gt;firstChild&lt;/code&gt; の使用方法と、空白ノードがこのプロパティの使用を妨げる可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="d2b64a2a09a748867c26a6c8c335b4fd7c944733" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of the &lt;a href=&quot;ondrop&quot;&gt;&lt;code&gt;ondrop&lt;/code&gt;&lt;/a&gt; attribute to define an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondrop&quot;&gt; &lt;code&gt;ondrop&lt;/code&gt; &lt;/a&gt;属性を使用して要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; イベントハンドラーを定義しています。</target>
        </trans-unit>
        <trans-unit id="50c86ebcc7b1d284ebcd534b140d33dcf362085a" translate="yes" xml:space="preserve">
          <source>This example demonstrates the various &lt;code&gt;textBaseline&lt;/code&gt; property values.</source>
          <target state="translated">この例は、さまざまな &lt;code&gt;textBaseline&lt;/code&gt; プロパティ値を示しています。</target>
        </trans-unit>
        <trans-unit id="299584266fc307d799fdae59764963ce969be7d1" translate="yes" xml:space="preserve">
          <source>This example demonstrates using pointer events' various event types (&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointermove&quot;&gt;pointermove&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt;, etc.) for different multi-touch interactions.</source>
          <target state="translated">この例は、さまざまなマルチタッチ操作でのポインターイベントのさまざまなイベントタイプ（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointermove&quot;&gt;pointermove&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; など）の使用を示しています。</target>
        </trans-unit>
        <trans-unit id="ecd9312367982e58ff26c9bac0303836f80cf10e" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragenter&quot;&gt;&lt;code&gt;ondragenter&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragenter&quot;&gt; &lt;code&gt;ondragenter&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="2f27d6b0998332296d7b41768ba04305c5353cf5" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragexit&quot;&gt;&lt;code&gt;ondragexit&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragexit&quot;&gt;dragexit&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragexit&quot;&gt; &lt;code&gt;ondragexit&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragexit&quot;&gt;dragexit&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="0112e279e4fb43d3f41d66cc57e49eed2a92dd99" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragleave&quot;&gt;&lt;code&gt;ondragleave&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragleave&quot;&gt;dragleave&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragleave&quot;&gt; &lt;code&gt;ondragleave&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragleave&quot;&gt;dragleave&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="f06b4846ce53dce970729c40097f479913e36a4e" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragover&quot;&gt;&lt;code&gt;ondragover&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragover&quot;&gt; &lt;code&gt;ondragover&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="f84c1628acc7b6a8702230c9140fc3a98fb9697b" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragstart&quot;&gt;&lt;code&gt;ondragstart&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragstart&quot;&gt; &lt;code&gt;ondragstart&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="dd20bd869b77a83aa1c6c4cdbb77c56f9e74d068" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchcancel&quot;&gt;touchcancel&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt;) touch events for the following gestures: single touch, two (simultaneous) touches, more than two simultaneous touches, 1-finger swipe, and 2-finger move/pinch/swipe.</source>
          <target state="translated">この例は、次のジェスチャーで &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchcancel&quot;&gt;touchcancel&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; ）タッチイベントを使用する方法を示しています。。</target>
        </trans-unit>
        <trans-unit id="857ead5e97e080e7e87c110ee22e95bfbac1e432" translate="yes" xml:space="preserve">
          <source>This example draws a blue triangle on top of a yellowish background. The &lt;code&gt;clearRect()&lt;/code&gt; method then erases part of the canvas.</source>
          <target state="translated">この例では、黄色がかった背景の上に青い三角形を描画します。次に、 &lt;code&gt;clearRect()&lt;/code&gt; メソッドはキャンバスの一部を消去します。</target>
        </trans-unit>
        <trans-unit id="63d5ece748dea6a044bb991f19ef5ce931df45ef" translate="yes" xml:space="preserve">
          <source>This example draws a complete circle using the &lt;code&gt;arc()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;arc()&lt;/code&gt; メソッドを使用して完全な円を描画します。</target>
        </trans-unit>
        <trans-unit id="7bc1c7dc9ee8847a277a3c0d7b291e4ac9f4013d" translate="yes" xml:space="preserve">
          <source>This example draws a filled green rectangle using the &lt;code&gt;fillRect()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;fillRect()&lt;/code&gt; メソッドを使用して、塗りつぶされた緑色の長方形を描画します。</target>
        </trans-unit>
        <trans-unit id="f199557868c7809aaacfb10ab59f2b26a8df21eb" translate="yes" xml:space="preserve">
          <source>This example draws a heart using cubic B&amp;eacute;zier curves.</source>
          <target state="translated">この例では、3次ベジェ曲線を使用してハートを描画します。</target>
        </trans-unit>
        <trans-unit id="4d790cc8c204051129d49a629c648e4af3a059b5" translate="yes" xml:space="preserve">
          <source>This example draws a rectangle with a drop shadow and thick, beveled outlines.</source>
          <target state="translated">この例では、ドロップシャドウと太い面取りの輪郭を持つ長方形を描いています。</target>
        </trans-unit>
        <trans-unit id="104af60a59102c63f0b127153efd6a0175b574c0" translate="yes" xml:space="preserve">
          <source>This example draws a rectangle with a green outline using the &lt;code&gt;strokeRect()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;strokeRect()&lt;/code&gt; メソッドを使用して、輪郭が緑色の長方形を描画します。</target>
        </trans-unit>
        <trans-unit id="98e4203c33e75a88a71bf0bca00dd405a1b91961" translate="yes" xml:space="preserve">
          <source>This example draws a rectangle, and then uses &lt;code&gt;getImageData()&lt;/code&gt; to grab a portion of the canvas.</source>
          <target state="translated">この例では、長方形を描画し、次に &lt;code&gt;getImageData()&lt;/code&gt; を使用してキャンバスの一部を取得します。</target>
        </trans-unit>
        <trans-unit id="e540caeb94f69e918ccf0f0c5fd1211903eb5bec" translate="yes" xml:space="preserve">
          <source>This example draws a simple B&amp;eacute;zier curve using &lt;code&gt;bezierCurveTo()&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;bezierCurveTo()&lt;/code&gt; を使用して単純なベジエ曲線を描画します。</target>
        </trans-unit>
        <trans-unit id="a19cb4cd26a9bd0b16cc6786634cf14f68ad2000" translate="yes" xml:space="preserve">
          <source>This example draws a simple quadratic B&amp;eacute;zier curve using &lt;code&gt;quadraticCurveTo()&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;quadraticCurveTo()&lt;/code&gt; を使用して単純な2次ベジエ曲線を描画します。</target>
        </trans-unit>
        <trans-unit id="82d8fe8aa1c5b599b2e12fa7f58a2bc1e8a4230f" translate="yes" xml:space="preserve">
          <source>This example draws a smiley face consisting of three disconnected sub-paths. Note that, although &lt;code&gt;closePath()&lt;/code&gt; is called after all the arcs have been created, only the last arc (sub-path) gets closed.</source>
          <target state="translated">この例では、3つの切断されたサブパスで構成されるスマイリーフェイスを描画します。すべてのアークが作成された後に &lt;code&gt;closePath()&lt;/code&gt; が呼び出されますが、最後のアーク（サブパス）のみが閉じられることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4ac6a11f42ad679a43087920946e1f430299b057" translate="yes" xml:space="preserve">
          <source>This example draws a straight line using the &lt;code&gt;lineTo()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;lineTo()&lt;/code&gt; メソッドを使用して直線を描画します。</target>
        </trans-unit>
        <trans-unit id="e8d0159198190d81f9d129a05fb891735eaecc93" translate="yes" xml:space="preserve">
          <source>This example draws a text string with a shadowing effect.</source>
          <target state="translated">この例では、シャドウイング効果のあるテキスト文字列を描画します。</target>
        </trans-unit>
        <trans-unit id="7953ecbb0e019264f1ffa8a5e670a3e269b501ee" translate="yes" xml:space="preserve">
          <source>This example draws an animated clock, showing your current time.</source>
          <target state="translated">この例では、現在の時刻を示すアニメーション時計を描画します。</target>
        </trans-unit>
        <trans-unit id="9c7140bb65c3de0bca87bc69ec17a4cf24b545e3" translate="yes" xml:space="preserve">
          <source>This example draws an ellipse at an angle of &amp;pi;/4 radians (45&lt;strong&gt;&amp;deg;&lt;/strong&gt;). To make a full ellipse, the arc begins at an angle of 0 radians (0&lt;strong&gt;&amp;deg;&lt;/strong&gt;), and ends at an angle of 2&amp;pi; radians (360&lt;strong&gt;&amp;deg;&lt;/strong&gt;).</source>
          <target state="translated">この例では、&amp;pi;/ 4ラジアン（45 &lt;strong&gt;&amp;deg;&lt;/strong&gt;）の角度で楕円を描画します。完全な楕円を作るために、弧は0ラジアン（0 &lt;strong&gt;&amp;deg;&lt;/strong&gt;）の角度で始まり、2&amp;pi;ラジアン（360 &lt;strong&gt;&amp;deg;&lt;/strong&gt;）の角度で終わります。</target>
        </trans-unit>
        <trans-unit id="3d9822c79cc1581e89b7ce633f7b4728d78758b6" translate="yes" xml:space="preserve">
          <source>This example draws an image to the canvas using the &lt;code&gt;drawImage()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;drawImage()&lt;/code&gt; メソッドを使用して画像をキャンバスに描画します。</target>
        </trans-unit>
        <trans-unit id="986855db93587824f43d70b2cdc33447ffde57cc" translate="yes" xml:space="preserve">
          <source>This example draws various shapes to show what is possible when using &lt;code&gt;arc()&lt;/code&gt;.</source>
          <target state="translated">この例では、さまざまな形状を描画して、 &lt;code&gt;arc()&lt;/code&gt; を使用するときに何ができるかを示します。</target>
        </trans-unit>
        <trans-unit id="edddba5f0281c20e9f3016fc9bdd5a0bdeb78669" translate="yes" xml:space="preserve">
          <source>This example establishes a &lt;code&gt;fullscreenchange&lt;/code&gt; event handler, &lt;code&gt;handleFullscreenChange()&lt;/code&gt;. This function determines which element it was called on by checking the value of &lt;a href=&quot;../event/target&quot;&gt;&lt;code&gt;event.target&lt;/code&gt;&lt;/a&gt;, then compares the document's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/fullscreenElement&quot;&gt;&lt;code&gt;fullscreenElement&lt;/code&gt;&lt;/a&gt; value to the element to see if they're the same node.</source>
          <target state="translated">この例では、確立 &lt;code&gt;fullscreenchange&lt;/code&gt; のイベントハンドラを、 &lt;code&gt;handleFullscreenChange()&lt;/code&gt; 。この機能は、それがの価値チェックすることによって、上で呼び出された要素を決定&lt;a href=&quot;../event/target&quot;&gt; &lt;code&gt;event.target&lt;/code&gt; を&lt;/a&gt;、その文書の比較&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/fullscreenElement&quot;&gt; &lt;code&gt;fullscreenElement&lt;/code&gt; の&lt;/a&gt;彼らは同じノードいるかどうかを確認するための要素に値を。</target>
        </trans-unit>
        <trans-unit id="7b84b4ac3c05e50952fae7441ae5af56090efafe" translate="yes" xml:space="preserve">
          <source>This example establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; event which updates an element to display the currently playing tone in its content, or, if all tones have played, the string &quot;&amp;lt;none&amp;gt;&quot;.</source>
          <target state="translated">この例では、コンテンツで現在再生中のトーン、またはすべてのトーンが再生されている場合は文字列 &quot;&amp;lt;none&amp;gt;&quot;を表示するように要素を更新する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを確立します。</target>
        </trans-unit>
        <trans-unit id="ed57d5197b4ee23f07ee900b8140cbc2c8d72ebe" translate="yes" xml:space="preserve">
          <source>This example establishes a method, &lt;code&gt;readFile()&lt;/code&gt;, reads a text file and calls a specified callback function with the received text (in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object) once the read is completed. If an error occurs, a specified (optional) error callback is called.</source>
          <target state="translated">この例では、メソッド &lt;code&gt;readFile()&lt;/code&gt; を確立し、テキストファイルを読み取り、読み取りが完了すると、（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;オブジェクト内の）受信したテキストを使用して、指定されたコールバック関数を呼び出します。エラーが発生すると、指定された（オプションの）エラーコールバックが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="160616646ba75eeaa07b0fdc5cd0a6300eda3245" translate="yes" xml:space="preserve">
          <source>This example establishes a method, &lt;code&gt;writeToFileEntry()&lt;/code&gt;, which outputs a text string to the file corresponding to the passed-in directory entry.</source>
          <target state="translated">この例では、メソッド &lt;code&gt;writeToFileEntry()&lt;/code&gt; を確立します。このメソッドは、渡されたディレクトリエントリに対応するファイルにテキスト文字列を出力します。</target>
        </trans-unit>
        <trans-unit id="96288394941964ebf7c1dd3acaefd3d647416d27" translate="yes" xml:space="preserve">
          <source>This example establishes a video element and adds an error handler to it; the error handler simply logs the details to console.</source>
          <target state="translated">この例では、video 要素を確立し、その要素にエラー ハンドラを追加しています。</target>
        </trans-unit>
        <trans-unit id="255f287b5a27ccdd057e1785afbacf61607d902c" translate="yes" xml:space="preserve">
          <source>This example establishes an event listener for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; events which handles keyboard input for a game which uses the typical &quot;WASD&quot; keyboard layout for steering forward, left, backward, and right. This will use the same four keys physically regardless of what the actual corresponding characters are, such as if the user is using an AZERTY keyboard.</source>
          <target state="translated">この例では、キー &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントのイベントリスナーを確立します。このイベントリスナーは、典型的な「WASD」キーボードレイアウトを使用して前後左右にステアリングするゲームのキーボード入力を処理します。これは、ユーザーがAZERTYキーボードを使用している場合など、実際に対応する文字が何であるかに関係なく、同じ4つのキーを物理的に使用します。</target>
        </trans-unit>
        <trans-unit id="34a3f80f80f5995c0ae11de67eb85fdac60bf0ef" translate="yes" xml:space="preserve">
          <source>This example examines the headers in the request's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event handler, &lt;a href=&quot;onreadystatechange&quot;&gt;&lt;code&gt;XMLHttpRequest.onreadystatechange&lt;/code&gt;&lt;/a&gt;. The code shows how to obtain the raw header string, as well as how to convert it into an array of individual headers and then how to take that array and create a mapping of header names to their values.</source>
          <target state="translated">この例では、リクエストの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントハンドラー&lt;a href=&quot;onreadystatechange&quot;&gt; &lt;code&gt;XMLHttpRequest.onreadystatechange&lt;/code&gt; &lt;/a&gt;のヘッダーを調べます。このコードは、生のヘッダー文字列を取得する方法と、それを個々のヘッダーの配列に変換する方法と、その配列を取得してヘッダー名とその値のマッピングを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="be4cb5108ebb2b7b28fcddc3c8e3938fceacf9a4" translate="yes" xml:space="preserve">
          <source>This example fetches the current charging state of the battery and establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; event, so that the charging state is recorded whenever it changes.</source>
          <target state="translated">この例では、バッテリーの現在の充電状態を取得し、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを確立します。これにより、充電状態が変化するたびに記録されます。</target>
        </trans-unit>
        <trans-unit id="e7f8d42d39a577e439249073c9877e412f6805ca" translate="yes" xml:space="preserve">
          <source>This example fetches the current configuration of the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, then looks to see if it has any certificates set by examining whether or not (a) the configuration has a value for &lt;code&gt;certificates&lt;/code&gt;, and (b) whether its length is zero.</source>
          <target state="translated">この例では、&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;現在の構成をフェッチし、（a）構成に &lt;code&gt;certificates&lt;/code&gt; 値があるかどうか、および（b）長さがゼロかどうかを調べて、証明書が設定されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="d405a5c6accc148281ae5f99a5fcb3c518afe2f8" translate="yes" xml:space="preserve">
          <source>This example fetches the document's current HTML markup and replaces the &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; characters with the HTML entity &lt;code&gt;&quot;&amp;amp;lt;&quot;&lt;/code&gt;, thereby essentially converting the HTML into raw text. This is then wrapped in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre&quot;&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;&lt;/a&gt; element. Then the value of &lt;code&gt;innerHTML&lt;/code&gt; is changed to this new string. As a result, the document contents are replaced with a display of the page's entire source code.</source>
          <target state="translated">この例では、ドキュメントの現在のHTMLマークアップをフェッチし、 &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; 文字をHTMLエンティティ &lt;code&gt;&quot;&amp;amp;lt;&quot;&lt;/code&gt; 置き換えます。、それにより本質的にHTMLを生のテキストに変換します。次に、これは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre&quot;&gt; &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; &lt;/a&gt;要素でラップされます。次に、 &lt;code&gt;innerHTML&lt;/code&gt; の値がこの新しい文字列に変更されます。その結果、ドキュメントのコンテンツは、ページのソースコード全体の表示に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f0f31723af12e91a747bd9e06a9b6f2684f33b59" translate="yes" xml:space="preserve">
          <source>This example fills a rectangle with the &lt;code&gt;fill()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;fill()&lt;/code&gt; メソッドで長方形を塗りつぶしています。</target>
        </trans-unit>
        <trans-unit id="b93312ab6515d8f0f78e5d0341d380f6710ead70" translate="yes" xml:space="preserve">
          <source>This example finds a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element in the document and resets it by calling &lt;code&gt;load()&lt;/code&gt;.</source>
          <target state="translated">この例では、ドキュメント内で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を見つけ、 &lt;code&gt;load()&lt;/code&gt; を呼び出してそれをリセットします。</target>
        </trans-unit>
        <trans-unit id="c1899a9670aae40361ad5b8e57fb2d39cf00cc71" translate="yes" xml:space="preserve">
          <source>This example finds all elements that have a class of &lt;code&gt;test&lt;/code&gt;, which are also a descendant of the element that has the &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;main&lt;/code&gt;:</source>
          <target state="translated">この例では、 &lt;code&gt;test&lt;/code&gt; のクラスを持つすべての要素を検索します。これは、 &lt;code&gt;main&lt;/code&gt; の &lt;code&gt;id&lt;/code&gt; を持つ要素の子孫でもあります。</target>
        </trans-unit>
        <trans-unit id="7fa506f5dae445620d20080384c0ebedce860677" translate="yes" xml:space="preserve">
          <source>This example function replaces the current contents of the clipboard with a specified string.</source>
          <target state="translated">この関数は、現在のクリップボードの内容を指定した文字列に置き換えます。</target>
        </trans-unit>
        <trans-unit id="4c767f1dec42843215ccb66206b022a1d441292c" translate="yes" xml:space="preserve">
          <source>This example gets a webcam's audio and video in a stream using &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;, attaches the stream to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, then sets a timer that, upon expiring, will stop the first audio track found on the stream.</source>
          <target state="translated">この例では、使用してストリームにウェブカメラのオーディオおよびビデオを取得&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;getUserMedia()&lt;/code&gt; は&lt;/a&gt;、ストリームに添付&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;、その後、要素の期限切れ時に、最初のオーディオトラックがストリームに見つかっ停止します、というタイマーを設定します。</target>
        </trans-unit>
        <trans-unit id="52363a20bc2cb397c229e68d500d8c12aa2bdaeb" translate="yes" xml:space="preserve">
          <source>This example gets the form's element list, then iterates over the list, looking for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; elements of type &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text&quot;&gt;&quot;text&quot;&lt;/a&gt;&lt;/code&gt; so that some form of processing can be performed on them.</source>
          <target state="translated">この例では、フォームの要素リストを取得し、リストを反復処理して、タイプ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text&quot;&gt;&quot;text&quot;&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を探して、何らかの形式の処理を実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="d1fed95cd489fb1c48f4630a7d97b2db9c1d3d51" translate="yes" xml:space="preserve">
          <source>This example gives a preference for camera resolution, and assigns the resulting &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; object to a video element.</source>
          <target state="translated">この例では、カメラの解像度を設定し、結果の&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;オブジェクトをビデオ要素に割り当てます。</target>
        </trans-unit>
        <trans-unit id="5155a8744d180f5b4efe5d0bae1e3ee142448772" translate="yes" xml:space="preserve">
          <source>This example illustrates a variety of common line dash patterns.</source>
          <target state="translated">この例では、さまざまな一般的な線ダッシュパターンを示しています。</target>
        </trans-unit>
        <trans-unit id="af02c9813f8e542014491da3a89d91026a941e2d" translate="yes" xml:space="preserve">
          <source>This example illustrates accessing all of a touch event's properties.</source>
          <target state="translated">この例では、タッチ イベントのすべてのプロパティへのアクセスを説明しています。</target>
        </trans-unit>
        <trans-unit id="7debe77bf4888b740d3b003793cf8f7c147c41d5" translate="yes" xml:space="preserve">
          <source>This example illustrates accessing the drag and drop data within the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例は、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; イベントハンドラー内のドラッグアンドドロップデータへのアクセスを示しています。</target>
        </trans-unit>
        <trans-unit id="f36a7c197e9fe66bb0b259e6771a73c1febc5be3" translate="yes" xml:space="preserve">
          <source>This example illustrates how to access the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;pagex&quot;&gt;&lt;code&gt;Touch.pageX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pagey&quot;&gt;&lt;code&gt;Touch.pageY&lt;/code&gt;&lt;/a&gt; properties. The &lt;a href=&quot;pagex&quot;&gt;&lt;code&gt;Touch.pageX&lt;/code&gt;&lt;/a&gt; property is the horizontal coordinate of a touch point relative to the viewport (in CSS pixels), including any scroll offset. The &lt;a href=&quot;pagey&quot;&gt;&lt;code&gt;Touch.pageY&lt;/code&gt;&lt;/a&gt; property is the vertical coordinate of a touch point relative to the viewport (in CSS pixels), including any scroll offset.</source>
          <target state="translated">この例では、アクセスする方法を示し&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;pagex&quot;&gt; &lt;code&gt;Touch.pageX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;pagey&quot;&gt; &lt;code&gt;Touch.pageY&lt;/code&gt; &lt;/a&gt;プロパティを。&lt;a href=&quot;pagex&quot;&gt; &lt;code&gt;Touch.pageX&lt;/code&gt; の&lt;/a&gt;プロパティは、オフセット任意スクロールを含む、（CSSピクセルで）ビューポートへのタッチポイント相対的な水平座標です。&lt;a href=&quot;pagey&quot;&gt; &lt;code&gt;Touch.pageY&lt;/code&gt; の&lt;/a&gt;プロパティは、垂直オフセットを任意スクロールを含む、（CSSピクセルで）ビューポートへのタッチポイントのy座標です。</target>
        </trans-unit>
        <trans-unit id="45ae8f522b52a51106a635d52d1730c82d3c92fe" translate="yes" xml:space="preserve">
          <source>This example illustrates how to access the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;screenx&quot;&gt;&lt;code&gt;Touch.screenX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;screeny&quot;&gt;&lt;code&gt;Touch.screenY&lt;/code&gt;&lt;/a&gt; properties. The &lt;a href=&quot;screenx&quot;&gt;&lt;code&gt;Touch.screenX&lt;/code&gt;&lt;/a&gt; property is the horizontal (x) coordinate of a touch point relative to the screen in CSS pixels. The &lt;a href=&quot;screeny&quot;&gt;&lt;code&gt;Touch.screenY&lt;/code&gt;&lt;/a&gt; property is the vertical coordinate of a touch point relative to the screen in CSS pixels.</source>
          <target state="translated">この例では、アクセスする方法を示し&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;screenx&quot;&gt; &lt;code&gt;Touch.screenX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;screeny&quot;&gt; &lt;code&gt;Touch.screenY&lt;/code&gt; &lt;/a&gt;プロパティを。&lt;a href=&quot;screenx&quot;&gt; &lt;code&gt;Touch.screenX&lt;/code&gt; の&lt;/a&gt;プロパティは、水平（X）CSSピクセルの画面に対するタッチ点の座標です。&lt;a href=&quot;screeny&quot;&gt; &lt;code&gt;Touch.screenY&lt;/code&gt; の&lt;/a&gt;プロパティは、CSSピクセルの画面に対するタッチ点の座標垂直です。</target>
        </trans-unit>
        <trans-unit id="11b64d94335b62564b50b1791e66b762f9af2977" translate="yes" xml:space="preserve">
          <source>This example illustrates how to access the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;target&quot;&gt;&lt;code&gt;Touch.target&lt;/code&gt;&lt;/a&gt; property. The &lt;a href=&quot;target&quot;&gt;&lt;code&gt;Touch.target&lt;/code&gt;&lt;/a&gt; property is an &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;) on which a touch point is started when contact is first placed on the surface.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;target&quot;&gt; &lt;code&gt;Touch.target&lt;/code&gt; &lt;/a&gt;プロパティにアクセスする方法を示しています。&lt;a href=&quot;target&quot;&gt; &lt;code&gt;Touch.target&lt;/code&gt; の&lt;/a&gt;プロパティは、&lt;a href=&quot;../element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;../eventtarget&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; &lt;/a&gt;接点が第一表面上に配置されたときのタッチポイントが開始されています）。</target>
        </trans-unit>
        <trans-unit id="36eb3f93645ddcdc6eeb4e885bb04374c7381b60" translate="yes" xml:space="preserve">
          <source>This example illustrates how to access the &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; key modifier properties: &lt;a href=&quot;altkey&quot;&gt;&lt;code&gt;TouchEvent.altKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ctrlkey&quot;&gt;&lt;code&gt;TouchEvent.ctrlKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;metakey&quot;&gt;&lt;code&gt;TouchEvent.metaKey&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shiftkey&quot;&gt;&lt;code&gt;TouchEvent.shiftKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;キー修飾子プロパティにアクセスする方法を示しています：&lt;a href=&quot;altkey&quot;&gt; &lt;code&gt;TouchEvent.altKey&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;ctrlkey&quot;&gt; &lt;code&gt;TouchEvent.ctrlKey&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;metakey&quot;&gt; &lt;code&gt;TouchEvent.metaKey&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;shiftkey&quot;&gt; &lt;code&gt;TouchEvent.shiftKey&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45e30fd30382c72b20a7599115816a1c637072ad" translate="yes" xml:space="preserve">
          <source>This example illustrates simple accessing of the &lt;a href=&quot;tiltx&quot;&gt;&lt;code&gt;tiltX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;tilty&quot;&gt;&lt;code&gt;tiltY&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">この例は、単純なアクセス示し&lt;a href=&quot;tiltx&quot;&gt; &lt;code&gt;tiltX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;tilty&quot;&gt; &lt;code&gt;tiltY&lt;/code&gt; &lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="7552a022096a43cf7b0c31c12b92ff6b740f9e73" translate="yes" xml:space="preserve">
          <source>This example illustrates the &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;pointerid&quot;&gt;&lt;code&gt;pointerId&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">この例は、&lt;a href=&quot;../pointerevent&quot;&gt; &lt;code&gt;PointerEvent&lt;/code&gt; &lt;/a&gt;インターフェイスの&lt;a href=&quot;pointerid&quot;&gt; &lt;code&gt;pointerId&lt;/code&gt; &lt;/a&gt;プロパティを示しています。</target>
        </trans-unit>
        <trans-unit id="8ae756b51952a1c216717e71ed70d0db3303f6cd" translate="yes" xml:space="preserve">
          <source>This example illustrates the &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;changedtouches&quot;&gt;&lt;code&gt;TouchEvent.changedTouches&lt;/code&gt;&lt;/a&gt; property. The &lt;a href=&quot;changedtouches&quot;&gt;&lt;code&gt;TouchEvent.changedTouches&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; object that contains one &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object for each touch point which contributed to the event.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;changedtouches&quot;&gt; &lt;code&gt;TouchEvent.changedTouches&lt;/code&gt; &lt;/a&gt;プロパティを示しています。&lt;a href=&quot;changedtouches&quot;&gt; &lt;code&gt;TouchEvent.changedTouches&lt;/code&gt; &lt;/a&gt;プロパティがある&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt; 1つの含まれているオブジェクト&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;イベントに貢献した各タッチポイントのオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="0028492d52b27849aea64dc1e229b51859a30988" translate="yes" xml:space="preserve">
          <source>This example illustrates the &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;targettouches&quot;&gt;&lt;code&gt;TouchEvent.targetTouches&lt;/code&gt;&lt;/a&gt; property. The &lt;a href=&quot;targettouches&quot;&gt;&lt;code&gt;TouchEvent.targetTouches&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; object that includes those TPs that are currently touching the surface &lt;em&gt;and&lt;/em&gt; started on the element that is the target of the current event. As such, the &lt;code&gt;targetTouches&lt;/code&gt; list is a strict subset of the &lt;code&gt;touches&lt;/code&gt; list.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;targettouches&quot;&gt; &lt;code&gt;TouchEvent.targetTouches&lt;/code&gt; &lt;/a&gt;プロパティを示しています。&lt;a href=&quot;targettouches&quot;&gt; &lt;code&gt;TouchEvent.targetTouches&lt;/code&gt; &lt;/a&gt;プロパティがある&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt;現在の表面に触れているものを含んでいるのTPオブジェクト&lt;em&gt;と&lt;/em&gt;現在のイベントのターゲットである要素で開始します。このように、 &lt;code&gt;targetTouches&lt;/code&gt; のリストは、厳密なサブセットである &lt;code&gt;touches&lt;/code&gt; リスト。</target>
        </trans-unit>
        <trans-unit id="05e02726173174f1246874c0c44f7c836a365f72" translate="yes" xml:space="preserve">
          <source>This example illustrates the &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;touches&quot;&gt;&lt;code&gt;TouchEvent.touches&lt;/code&gt;&lt;/a&gt; property. The &lt;a href=&quot;touches&quot;&gt;&lt;code&gt;TouchEvent.touches&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; object and containing a list of &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; objects for every point of contact currently touching the surface.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;touches&quot;&gt; &lt;code&gt;TouchEvent.touches&lt;/code&gt; &lt;/a&gt;プロパティを示しています。&lt;a href=&quot;touches&quot;&gt; &lt;code&gt;TouchEvent.touches&lt;/code&gt; の&lt;/a&gt;プロパティがある&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt;オブジェクトとのリスト含む&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;現在の表面に触れる接触のすべてのポイントのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0b56ff09a77d1e4c46be6ac4274025d3648a8266" translate="yes" xml:space="preserve">
          <source>This example illustrates the effect of applying the &lt;code&gt;imageSmoothingEnabled&lt;/code&gt; property to a scaled image. The image's natural dimensions are 86 x 117.</source>
          <target state="translated">この例は、 &lt;code&gt;imageSmoothingEnabled&lt;/code&gt; プロパティをスケーリングされた画像に適用する効果を示しています。画像の自然なサイズは86 x 117です。</target>
        </trans-unit>
        <trans-unit id="aeb80e0ac025c4ca95f8944a8e9ef43225d63b65" translate="yes" xml:space="preserve">
          <source>This example illustrates the effect of overlaying multiple transparent shapes on top of each other. We begin by drawing a solid background composed of four differently colored squares. Next, we set the &lt;code&gt;globalAlpha&lt;/code&gt; property to &lt;code&gt;0.2&lt;/code&gt; (20% opaque); this alpha level will apply to all of our transparent shapes. After that, we use a &lt;code&gt;for&lt;/code&gt; loop to draw a series of circles with increasing radii.</source>
          <target state="translated">この例は、複数の透明な形状を互いに重ね合わせた効果を示しています。まず、4つの異なる色の正方形で構成される無地の背景を描画します。次に、 &lt;code&gt;globalAlpha&lt;/code&gt; プロパティを &lt;code&gt;0.2&lt;/code&gt; （不透明度20％）に設定します。このアルファレベルは、すべての透明な形状に適用されます。その後、 &lt;code&gt;for&lt;/code&gt; ループを使用して、半径が増加する一連の円を描画します。</target>
        </trans-unit>
        <trans-unit id="9c6772cf4c02f5860872863b88e147575a8889fd" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; properties to calculate the contact area.</source>
          <target state="translated">この例では、使用示す&lt;a href=&quot;../pointerevent&quot;&gt; &lt;code&gt;PointerEvent&lt;/code&gt; の&lt;/a&gt;界面の&lt;a href=&quot;width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;の接触面積を計算するプロパティを。</target>
        </trans-unit>
        <trans-unit id="6b2b58e3434050c87c3a8cfe520c447ecd89061e" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;force&quot;&gt;&lt;code&gt;Touch.force&lt;/code&gt;&lt;/a&gt; property. This property is a relative value of pressure applied, in the range &lt;code&gt;0.0&lt;/code&gt; to &lt;code&gt;1.0&lt;/code&gt;, where &lt;code&gt;0.0&lt;/code&gt; is no pressure, and &lt;code&gt;1.0&lt;/code&gt; is the highest level of pressure the touch device is capable of sensing.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;インターフェースの&lt;a href=&quot;force&quot;&gt; &lt;code&gt;Touch.force&lt;/code&gt; &lt;/a&gt;プロパティの使用を示しています。このプロパティは、圧力の相対値が範囲内で適用される &lt;code&gt;0.0&lt;/code&gt; と &lt;code&gt;1.0&lt;/code&gt; 、 &lt;code&gt;0.0&lt;/code&gt; は全く圧力をせず、 &lt;code&gt;1.0&lt;/code&gt; タッチデバイスが感知することのできる圧力の最高レベルです。</target>
        </trans-unit>
        <trans-unit id="6ae29b94cf41ded984e5e2cd3c50f8c6dd69b17a" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;radiusx&quot;&gt;&lt;code&gt;Touch.radiusX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;radiusx&quot;&gt;&lt;code&gt;Touch.radiusX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt; properties. The &lt;a href=&quot;radiusx&quot;&gt;&lt;code&gt;Touch.radiusX&lt;/code&gt;&lt;/a&gt; property is the radius of the ellipse which most closely circumscribes the touching area (e.g. finger, stylus) along the axis &lt;strong&gt;indicated&lt;/strong&gt; by the touch point's &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt;. Likewise, the &lt;a href=&quot;radiusy&quot;&gt;&lt;code&gt;Touch.radiusY&lt;/code&gt;&lt;/a&gt; property is the radius of the ellipse which most closely circumscribes the touching area (e.g. finger, stylus) along the axis &lt;strong&gt;perpendicular&lt;/strong&gt; to that indicated by &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt; is the angle (in degrees) that the ellipse described by &lt;code&gt;radiusX&lt;/code&gt; and &lt;code&gt;radiusY&lt;/code&gt; is rotated clockwise about its center.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;インターフェースの&lt;a href=&quot;radiusx&quot;&gt; &lt;code&gt;Touch.radiusX&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;radiusx&quot;&gt; &lt;code&gt;Touch.radiusX&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; &lt;/a&gt;プロパティの使用を示しています。&lt;a href=&quot;radiusx&quot;&gt; &lt;code&gt;Touch.radiusX&lt;/code&gt; の&lt;/a&gt;プロパティは、最も密接に軸方向接触領域（例えば、指、スタイラス）を囲む楕円の半径で&lt;strong&gt;示し&lt;/strong&gt;たタッチポイントのにより&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; &lt;/a&gt;。同様に、&lt;a href=&quot;radiusy&quot;&gt; &lt;code&gt;Touch.radiusY&lt;/code&gt; &lt;/a&gt;プロパティは、&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; &lt;/a&gt;によって示されるものに&lt;strong&gt;垂直な&lt;/strong&gt;軸&lt;strong&gt;に&lt;/strong&gt;沿って、接触領域（たとえば、指、スタイラス）を最も密接に囲む楕円の半径です。&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; &lt;/a&gt; &lt;code&gt;radiusX&lt;/code&gt; と &lt;code&gt;radiusY&lt;/code&gt; で表される楕円がその中心を中心に時計回りに回転する角度（度単位）です。</target>
        </trans-unit>
        <trans-unit id="a2a68e393297f81b5c695aa907d59f111662a3c5" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;clientx&quot;&gt;&lt;code&gt;Touch.clientX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;clienty&quot;&gt;&lt;code&gt;Touch.clientY&lt;/code&gt;&lt;/a&gt; properties. The &lt;a href=&quot;clientx&quot;&gt;&lt;code&gt;Touch.clientX&lt;/code&gt;&lt;/a&gt; property is the horizontal coordinate of a touch point relative to the browser's viewport excluding any scroll offset. The &lt;a href=&quot;clienty&quot;&gt;&lt;code&gt;Touch.clientY&lt;/code&gt;&lt;/a&gt; property is the vertical coordinate of the touch point relative to the browser's viewport excluding any scroll offset .</source>
          <target state="translated">この例では、使用して示して&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;clientx&quot;&gt; &lt;code&gt;Touch.clientX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;clienty&quot;&gt; &lt;code&gt;Touch.clientY&lt;/code&gt; &lt;/a&gt;プロパティを。&lt;a href=&quot;clientx&quot;&gt; &lt;code&gt;Touch.clientX&lt;/code&gt; の&lt;/a&gt;プロパティには、任意のオフセットスクロール除くブラウザのビューポートにタッチポイントのy座標に水平です。&lt;a href=&quot;clienty&quot;&gt; &lt;code&gt;Touch.clientY&lt;/code&gt; の&lt;/a&gt;プロパティは、垂直オフセットを任意のスクロールを除くブラウザのビューポートへのタッチポイントのy座標です。</target>
        </trans-unit>
        <trans-unit id="5a6f4dc5310587b5b254b1c3813649ea4b095906" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;pressure&quot;&gt;&lt;code&gt;pressure&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">この例は、&lt;a href=&quot;pressure&quot;&gt; &lt;code&gt;pressure&lt;/code&gt; &lt;/a&gt;プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="4ebed18c5d26e1c1ed20e3c5cad383eac53db957" translate="yes" xml:space="preserve">
          <source>This example illustrates using the value of the &lt;a href=&quot;isprimary&quot;&gt;&lt;code&gt;isPrimary&lt;/code&gt;&lt;/a&gt; to call the appropriate processing function.</source>
          <target state="translated">この例は、&lt;a href=&quot;isprimary&quot;&gt; &lt;code&gt;isPrimary&lt;/code&gt; &lt;/a&gt;の値を使用して適切な処理関数を呼び出す方法を示しています。</target>
        </trans-unit>
        <trans-unit id="889e312c3b091a75143f8ef20cf671f64574a4b2" translate="yes" xml:space="preserve">
          <source>This example illustrates using the value of the &lt;a href=&quot;pointertype&quot;&gt;&lt;code&gt;pointerType&lt;/code&gt;&lt;/a&gt; to call the appropriate pointer type processing function.</source>
          <target state="translated">この例では、&lt;a href=&quot;pointertype&quot;&gt; &lt;code&gt;pointerType&lt;/code&gt; &lt;/a&gt;の値を使用して、適切なポインター型処理関数を呼び出しています。</target>
        </trans-unit>
        <trans-unit id="62c180986cc31e85f4a230d470752aaa1d1acdb3" translate="yes" xml:space="preserve">
          <source>This example includes the use of the &lt;em&gt;ondrag&lt;/em&gt; attribute handler to set an element's &lt;em&gt;drag&lt;/em&gt; event handler.</source>
          <target state="translated">この例には、&lt;em&gt;ondrag&lt;/em&gt;属性ハンドラーを使用して要素の&lt;em&gt;ドラッグ&lt;/em&gt;イベントハンドラーを設定する方法が含まれています。</target>
        </trans-unit>
        <trans-unit id="02e58d71c9f44cce2e41898292fada9137a550f2" translate="yes" xml:space="preserve">
          <source>This example initializes a linear gradient using the &lt;code&gt;createLinearGradient()&lt;/code&gt; method. Three color stops between the gradient's start and end points are then created. Finally, the gradient is assigned to the canvas context, and is rendered to a filled rectangle.</source>
          <target state="translated">この例では、 &lt;code&gt;createLinearGradient()&lt;/code&gt; メソッドを使用して線形グラデーションを初期化します。グラデーションの始点と終点の間に3つのカラーストップが作成されます。最後に、グラデーションがキャンバスコンテキストに割り当てられ、塗りつぶされた四角形にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="4a08cc93eac91dc55990ec9e7947204489fd38d1" translate="yes" xml:space="preserve">
          <source>This example initializes a radial gradient using the &lt;code&gt;createRadialGradient()&lt;/code&gt; method. Three color stops between the gradient's two circles are then created. Finally, the gradient is assigned to the canvas context, and is rendered to a filled rectangle.</source>
          <target state="translated">この例では、 &lt;code&gt;createRadialGradient()&lt;/code&gt; メソッドを使用して放射状グラデーションを初期化します。グラデーションの2つの円の間に3つのカラーストップが作成されます。最後に、グラデーションがキャンバスコンテキストに割り当てられ、塗りつぶされた四角形にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="394f2fb9623c18a1e22a70536f8cabbdee3ce62d" translate="yes" xml:space="preserve">
          <source>This example inserts a link from the dragged data. As you might be able to guess from the name, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text/uri-list&lt;/a&gt; type actually may contain a list of URLs, each on a separate line. In this code, we use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/split&quot;&gt;split&lt;/a&gt; to split the string into lines, then iterate over the list of lines, inserting each as a link into the document. Note also that we skip links starting with a number sign (#) as these are comments.</source>
          <target state="translated">この例では、ドラッグしたデータからリンクを挿入します。名前から推測できるかもしれませんが、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text / uri-list&lt;/a&gt;タイプには実際にはそれぞれ別の行にあるURLのリストが含まれている場合があります。このコードでは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/split&quot;&gt;split&lt;/a&gt;を使用して文字列を行に分割し、行のリストを反復処理して、それぞれをリンクとしてドキュメントに挿入します。番号記号（＃）で始まるリンクはコメントであるため、スキップすることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="d1d86e2fa5d9063c417575f7a5f240a42d677ca0" translate="yes" xml:space="preserve">
          <source>This example inserts line breaks wherever you click. The code for it is below the demo.</source>
          <target state="translated">この例では、クリックした場所に改行を挿入します。そのためのコードはデモの下にあります。</target>
        </trans-unit>
        <trans-unit id="7dc282536db21d4a0a2194939888edf456d21900" translate="yes" xml:space="preserve">
          <source>This example instantiates an &lt;code&gt;ImageData&lt;/code&gt; object with pixel colors defined by an array.</source>
          <target state="translated">この例では、配列で定義されたピクセルカラーで &lt;code&gt;ImageData&lt;/code&gt; オブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="ef2d713da9f27954f813beaa3b6fcdec048b5531" translate="yes" xml:space="preserve">
          <source>This example instantiates an audio context for music playback (optimized for power consumption over latency), with the sample rate 48,000 Hz.</source>
          <target state="translated">この例では、サンプルレート 48,000 Hz の音楽再生用のオーディオコンテキストをインスタンス化しています(レイテンシよりも消費電力を最適化しています)。</target>
        </trans-unit>
        <trans-unit id="3959bac1fe93f81abf98bd5fd653c611ed7cc93b" translate="yes" xml:space="preserve">
          <source>This example instantly changes the volume of a &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; to 40%.</source>
          <target state="translated">この例では、&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt;のボリュームを即座に40％に変更します。</target>
        </trans-unit>
        <trans-unit id="57112ee17dae853e82e5b0d46620c367a2e3de5b" translate="yes" xml:space="preserve">
          <source>This example introduces two new DOM attributes. First it uses the &lt;code&gt;childNodes&lt;/code&gt; attribute to get the list of child nodes of mycel. The &lt;code&gt;childNodes&lt;/code&gt; list includes all child nodes, regardless of what their name or type is. Like &lt;code&gt;getElementsByTagName()&lt;/code&gt;, it returns a list of nodes. The differences are that (a) &lt;code&gt;getElementsByTagName()&lt;/code&gt; only returns elements of the specified tag name; and (b) &lt;code&gt;getElementsByTagName()&lt;/code&gt; returns descendants at any level, not just immediate children. Once you have the returned list, use &lt;code&gt;[x]&lt;/code&gt; method to retrieve the desired child item. This example stores in myceltext the text node of the second cell in the second row of the table. Then, to display the results in this example, it creates a new text node whose content is the data of myceltext and appends it as a child of the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">この例では、2つの新しいDOM属性を紹介します。まず、 &lt;code&gt;childNodes&lt;/code&gt; 属性を使用して、mycelの子ノードのリストを取得します。 &lt;code&gt;childNodes&lt;/code&gt; リストは関係なく、自分の名前や種類が何であるかの、すべての子ノードを含んでいます。 &lt;code&gt;getElementsByTagName()&lt;/code&gt; と同様に、ノードのリストを返します。違いは、（a） &lt;code&gt;getElementsByTagName()&lt;/code&gt; は指定されたタグ名の要素のみを返すことです。（b） &lt;code&gt;getElementsByTagName()&lt;/code&gt; は、直接の子だけでなく、あらゆるレベルの子孫を返します。返されたリストを取得したら、 &lt;code&gt;[x]&lt;/code&gt; を使用します必要な子アイテムを取得するメソッド。この例では、テーブルの2行目の2番目のセルのテキストノードをmyceltextに格納します。次に、この例の結果を表示するために、内容がmyceltextのデータである新しいテキストノードを作成し、 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 要素の子として追加します。</target>
        </trans-unit>
        <trans-unit id="e96b38ed023c11a253c9fbafe19e5f64dab53cc2" translate="yes" xml:space="preserve">
          <source>This example is drawn from the code presented in the article &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt; and its corresponding sample code. It comes from the &lt;code&gt;handleVideoOfferMsg()&lt;/code&gt; method there, which is called when an offer message is received from the remote peer.</source>
          <target state="translated">この例は、記事「&lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;シグナリングとビデオ通話」&lt;/a&gt;とそれに対応するサンプルコードに示されているコードから抜粋したものです。これは、リモートピアからオファーメッセージを受信したときに呼び出される &lt;code&gt;handleVideoOfferMsg()&lt;/code&gt; メソッドから取得されます。</target>
        </trans-unit>
        <trans-unit id="394fe2807bfff6a888edea40d5e72a4e92f6a4f9" translate="yes" xml:space="preserve">
          <source>This example is extracted from this &lt;a href=&quot;https://simpl.info/imagecapture/&quot;&gt;Simple Image Capture demo&lt;/a&gt;. It shows how to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;code&gt;grabFrame()&lt;/code&gt; to copy the returned frame to a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element. For simplicy it does not show how to instantiate the image capture object.</source>
          <target state="translated">この例は、この&lt;a href=&quot;https://simpl.info/imagecapture/&quot;&gt;Simple Image Captureデモ&lt;/a&gt;から抽出されています。 &lt;code&gt;grabFrame()&lt;/code&gt; によって返された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;を使用して、返されたフレームを &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 要素にコピーする方法を示します。簡単にするために、画像キャプチャオブジェクトをインスタンス化する方法は示していません。</target>
        </trans-unit>
        <trans-unit id="c05d7c37a08277a268f038e51acafebbc3767d48" translate="yes" xml:space="preserve">
          <source>This example is extracted from this &lt;a href=&quot;https://simpl.info/imagecapture/&quot;&gt;Simple Image Capture demo&lt;/a&gt;. It shows how to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;code&gt;takePhoto()&lt;/code&gt; to copy the returned &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; to an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element. For simplicy it does not show how to instantiate the image capture object.</source>
          <target state="translated">この例は、この&lt;a href=&quot;https://simpl.info/imagecapture/&quot;&gt;Simple Image Captureデモ&lt;/a&gt;から抽出されています。 &lt;code&gt;takePhoto()&lt;/code&gt; によって返された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;を使用して、返された&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 要素にコピーする方法を示しています。簡単にするために、画像キャプチャオブジェクトをインスタンス化する方法は示していません。</target>
        </trans-unit>
        <trans-unit id="98fa0866e38e7603c7fb21fbed7b501b84e57f3d" translate="yes" xml:space="preserve">
          <source>This example is for a hypothetical USB device with a multi-colored LED. It shows how to test that a device is open before calling &lt;a href=&quot;controltransferout&quot;&gt;&lt;code&gt;USBDevice.controlTransferOut&lt;/code&gt;&lt;/a&gt; to set a specified LED color.</source>
          <target state="translated">この例は、マルチカラーLEDを備えた架空のUSBデバイス用です。&lt;a href=&quot;controltransferout&quot;&gt; &lt;code&gt;USBDevice.controlTransferOut&lt;/code&gt; &lt;/a&gt;を呼び出して指定されたLEDの色を設定する前に、デバイスが開いていることをテストする方法を示します。</target>
        </trans-unit>
        <trans-unit id="8690cc85670f075e946b26401ab66cc74585cbf1" translate="yes" xml:space="preserve">
          <source>This example is from the MDN &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;sw-test example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;sw-test running live&lt;/a&gt;). Here we wait for a &lt;a href=&quot;../fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; to fire. Then we construct a custom response like so:</source>
          <target state="translated">この例は、MDN &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;sw-testの例からのものです&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;sw-test running liveを&lt;/a&gt;参照）。ここでは、&lt;a href=&quot;../fetchevent&quot;&gt; &lt;code&gt;FetchEvent&lt;/code&gt; &lt;/a&gt;が発生するのを待ちます。次に、次のようなカスタム応答を作成します。</target>
        </trans-unit>
        <trans-unit id="0c124bc9bcbf87e00e8ab86950b28d4755d85534" translate="yes" xml:space="preserve">
          <source>This example is from the MDN &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;sw-test example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;sw-test running live&lt;/a&gt;). Here we wait for a &lt;a href=&quot;../fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; to fire. We construct a custom response like so:</source>
          <target state="translated">この例は、MDN &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;sw-testの例からのものです&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;sw-test running liveを&lt;/a&gt;参照）。ここでは、&lt;a href=&quot;../fetchevent&quot;&gt; &lt;code&gt;FetchEvent&lt;/code&gt; &lt;/a&gt;が発生するのを待ちます。次のようなカスタム応答を作成します。</target>
        </trans-unit>
        <trans-unit id="494d2314f39804cd319e0ee126e2d3797bcb97ea" translate="yes" xml:space="preserve">
          <source>This example is rather trivial, but we decided to keep it simple while introducing you to basic worker concepts. More advanced details are covered later on in the article.</source>
          <target state="translated">この例はどちらかというと些細なことですが、基本的なワーカーの考え方を紹介しながら、シンプルにまとめてみることにしました。より高度な詳細については後述します。</target>
        </trans-unit>
        <trans-unit id="1a5e6bdd4ee7ded87d250c8388ef3a96381bdedb" translate="yes" xml:space="preserve">
          <source>This example is similar to the one above, but uses the &lt;code&gt;strokeStyle&lt;/code&gt; property to change the colors of the shapes' outlines. We use the &lt;code&gt;arc()&lt;/code&gt; method to draw circles instead of squares.</source>
          <target state="translated">この例は上記のものと似ていますが、 &lt;code&gt;strokeStyle&lt;/code&gt; プロパティを使用して、図形の輪郭の色を変更します。正方形ではなく円を描くには、 &lt;code&gt;arc()&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="0b94beedf06ad51fb82cdf6106156b0a65a9aea3" translate="yes" xml:space="preserve">
          <source>This example is taken from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/custom-offline-page/service-worker.js&quot;&gt;custom offline page&lt;/a&gt; example (&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/custom-offline-page/index.html&quot;&gt;live demo&lt;/a&gt;). It uses a cache to supply selected data when a request fails. A &lt;code&gt;catch()&lt;/code&gt; clause is triggered when the call to &lt;code&gt;fetch()&lt;/code&gt; throws an exception. Inside the &lt;code&gt;catch()&lt;/code&gt; clause, &lt;code&gt;match()&lt;/code&gt; is used to return the correct response.</source>
          <target state="translated">この例は、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/custom-offline-page/service-worker.js&quot;&gt;カスタムオフラインページの&lt;/a&gt;例（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/custom-offline-page/index.html&quot;&gt;ライブデモ&lt;/a&gt;）からの抜粋です。リクエストが失敗した場合、キャッシュを使用して選択したデータを提供します。 &lt;code&gt;catch()&lt;/code&gt; の呼び出しをするとき句がトリガされた &lt;code&gt;fetch()&lt;/code&gt; 例外がスローされます。 &lt;code&gt;catch()&lt;/code&gt; 句の内部では、 &lt;code&gt;match()&lt;/code&gt; を使用して正しい応答を返します。</target>
        </trans-unit>
        <trans-unit id="f7d72bdded0943ad6be759b98362ce400d085ec5" translate="yes" xml:space="preserve">
          <source>This example iterates over all the files selected by the user using an &lt;code&gt;input&lt;/code&gt; element:</source>
          <target state="translated">この例では、 &lt;code&gt;input&lt;/code&gt; 要素を使用してユーザーが選択したすべてのファイルを反復処理します。</target>
        </trans-unit>
        <trans-unit id="778222cf54090eff636d2f044de80f30a9fa6af7" translate="yes" xml:space="preserve">
          <source>This example listens for unhandled promises and, if the &lt;a href=&quot;reason&quot;&gt;&lt;code&gt;reason&lt;/code&gt;&lt;/a&gt; is an object with a &lt;code&gt;code&lt;/code&gt; field containing the text &quot;Module not ready&quot;, it sets up an idle callback that will retry the task that failed to execute correctly.</source>
          <target state="translated">この例では、未処理のpromiseをリッスンし、&lt;a href=&quot;reason&quot;&gt; &lt;code&gt;reason&lt;/code&gt; &lt;/a&gt;が「Module not ready」というテキストを含む &lt;code&gt;code&lt;/code&gt; フィールドを持つオブジェクトである場合、正しく実行できなかったタスクを再試行するアイドルコールバックを設定します。</target>
        </trans-unit>
        <trans-unit id="fe7bf72cfe92699f70a0c2ca3e05bd986f7eccba" translate="yes" xml:space="preserve">
          <source>This example loads a sprite sheet, extracts individual sprites, and then renders each sprite to the canvas. A sprite sheet is an image containing multiple smaller images, each of which you want to be able to render separately.</source>
          <target state="translated">この例では、スプライトシートをロードし、個々のスプライトを抽出し、各スプライトをキャンバスにレンダリングします。スプライトシートとは、複数の小さな画像を含む画像で、それぞれを個別にレンダリングできるようにしたいものです。</target>
        </trans-unit>
        <trans-unit id="ca98396f9f3455c47a73b6ab7d49d435abba6c05" translate="yes" xml:space="preserve">
          <source>This example locates all of a media element's primary language and translated audio tracks and returns a list of objects containing each of those tracks' &lt;a href=&quot;id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;language&lt;/code&gt;.</source>
          <target state="translated">この例では、メディア要素のすべての主要言語と翻訳されたオーディオトラックを見つけ、それらのトラックの&lt;a href=&quot;id&quot;&gt; &lt;code&gt;id&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;、および &lt;code&gt;language&lt;/code&gt; のそれぞれを含むオブジェクトのリストを返します。</target>
        </trans-unit>
        <trans-unit id="aaea805bc769626683e27dcdadbab66383e369a4" translate="yes" xml:space="preserve">
          <source>This example looks at the &lt;code&gt;currentLocalDescription&lt;/code&gt; and displays an alert containing the &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object's &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;sdp&lt;/code&gt; fields.</source>
          <target state="translated">この例では、 &lt;code&gt;currentLocalDescription&lt;/code&gt; を確認し、&lt;a href=&quot;../rtcsessiondescription&quot;&gt; &lt;code&gt;RTCSessionDescription&lt;/code&gt; &lt;/a&gt;オブジェクトの &lt;code&gt;type&lt;/code&gt; と &lt;code&gt;sdp&lt;/code&gt; フィールドを含むアラートを表示します。</target>
        </trans-unit>
        <trans-unit id="1ce7d27d0af5bb389096dcd899e6c77f1acf7ef0" translate="yes" xml:space="preserve">
          <source>This example looks at the &lt;code&gt;currentRemoteDescription&lt;/code&gt; and displays an alert containing the &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object's &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;sdp&lt;/code&gt; fields.</source>
          <target state="translated">この例では、 &lt;code&gt;currentRemoteDescription&lt;/code&gt; を調べて、&lt;a href=&quot;../rtcsessiondescription&quot;&gt; &lt;code&gt;RTCSessionDescription&lt;/code&gt; &lt;/a&gt;オブジェクトの &lt;code&gt;type&lt;/code&gt; フィールドと &lt;code&gt;sdp&lt;/code&gt; フィールドを含むアラートを表示します。</target>
        </trans-unit>
        <trans-unit id="3b3a3e6acb5d48a9b13878b80ec0b35d53945c4a" translate="yes" xml:space="preserve">
          <source>This example looks at the &lt;code&gt;localDescription&lt;/code&gt; and displays an alert containing the &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object's &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;sdp&lt;/code&gt; fields.</source>
          <target state="translated">この例では、 &lt;code&gt;localDescription&lt;/code&gt; を調べ、&lt;a href=&quot;../rtcsessiondescription&quot;&gt; &lt;code&gt;RTCSessionDescription&lt;/code&gt; &lt;/a&gt;オブジェクトの &lt;code&gt;type&lt;/code&gt; と &lt;code&gt;sdp&lt;/code&gt; フィールドを含むアラートを表示します。</target>
        </trans-unit>
        <trans-unit id="c745500cdf13b983eace2d416331e0de4424ad60" translate="yes" xml:space="preserve">
          <source>This example looks at the &lt;code&gt;pendingLocalDescription&lt;/code&gt; to determine whether or not there's a description change being processed.</source>
          <target state="translated">この例では、 &lt;code&gt;pendingLocalDescription&lt;/code&gt; を調べて、処理中の説明の変更があるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="14c0a6c6d47660b354ea3f4a4680af588b162d6f" translate="yes" xml:space="preserve">
          <source>This example looks at the &lt;code&gt;pendingRemoteDescription&lt;/code&gt; to determine whether or not there's a description change being processed.</source>
          <target state="translated">この例では、 &lt;code&gt;pendingRemoteDescription&lt;/code&gt; を調べて、処理中の説明の変更があるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="ea6642f75918300affc2e5569fd13d57ddb5687e" translate="yes" xml:space="preserve">
          <source>This example looks at the &lt;code&gt;remoteDescription&lt;/code&gt; and displays an alert containing the &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object's &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;sdp&lt;/code&gt; fields.</source>
          <target state="translated">この例では、 &lt;code&gt;remoteDescription&lt;/code&gt; を調べ、&lt;a href=&quot;../rtcsessiondescription&quot;&gt; &lt;code&gt;RTCSessionDescription&lt;/code&gt; &lt;/a&gt;オブジェクトの &lt;code&gt;type&lt;/code&gt; フィールドと &lt;code&gt;sdp&lt;/code&gt; フィールドを含むアラートを表示します。</target>
        </trans-unit>
        <trans-unit id="76b7e19d11465a344fdcf20fb60b4fc7f5be09af" translate="yes" xml:space="preserve">
          <source>This example looks at the time ranges and looks to see if the entire video has been loaded.</source>
          <target state="translated">この例では、時間範囲を見て、動画全体が読み込まれているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="631c09635aaacb01536c5a8a8b753142eb2a8cb1" translate="yes" xml:space="preserve">
          <source>This example looks at the time ranges and looks to see if the entire video has been loaded. Obviously you could simply observe the &lt;code&gt;ended&lt;/code&gt; event on the video, but this is a good example of how &lt;code&gt;TimeRanges&lt;/code&gt; works.</source>
          <target state="translated">この例では、時間範囲を調べ、ビデオ全体がロードされているかどうかを調べます。明らかに、ビデオで &lt;code&gt;ended&lt;/code&gt; イベントを観察することもできますが、これは &lt;code&gt;TimeRanges&lt;/code&gt; の動作の良い例です。</target>
        </trans-unit>
        <trans-unit id="acde7627120a01456437c92a3b25f64b69474e41" translate="yes" xml:space="preserve">
          <source>This example looks like this:</source>
          <target state="translated">この例はこんな感じです。</target>
        </trans-unit>
        <trans-unit id="676be4a6fc9d1614367f52bd13fb7f1c4b766a3d" translate="yes" xml:space="preserve">
          <source>This example looks through the list of images and finds one whose name is &lt;code&gt;&quot;banner.gif&quot;&lt;/code&gt;.</source>
          <target state="translated">この例では、画像のリストを調べて、名前が &lt;code&gt;&quot;banner.gif&quot;&lt;/code&gt; の画像を見つけます。</target>
        </trans-unit>
        <trans-unit id="4d0281c0c2c19b651e4f685d7cb467cca2b588fc" translate="yes" xml:space="preserve">
          <source>This example looks to see if the page has any &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="translated">この例では、ページに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;要素があるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="5842a05c513da7112e0946c37dc1a967ff4e9a2d" translate="yes" xml:space="preserve">
          <source>This example obtains a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; for the root directory of the file system containing a file.</source>
          <target state="translated">この例では、ファイルを含むファイルシステムのルートディレクトリの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt; &lt;/a&gt;を取得します。</target>
        </trans-unit>
        <trans-unit id="9263284d4654da6eb133f4a485996e0ff0dddb54" translate="yes" xml:space="preserve">
          <source>This example obtains the current constraints for a track, sets the &lt;a href=&quot;../mediatrackconstraints/facingmode&quot;&gt;&lt;code&gt;facingMode&lt;/code&gt;&lt;/a&gt;, and applies the updated constraints.</source>
          <target state="translated">この例では、トラックの現在の制約を取得し、&lt;a href=&quot;../mediatrackconstraints/facingmode&quot;&gt; &lt;code&gt;facingMode&lt;/code&gt; を&lt;/a&gt;設定し、更新された制約を適用します。</target>
        </trans-unit>
        <trans-unit id="3b46eb9ad7a0e57149014ebc87c94ae544850b7e" translate="yes" xml:space="preserve">
          <source>This example outputs a list of the constraints supported by your browser.</source>
          <target state="translated">この例では、ブラウザでサポートされている制約のリストを出力します。</target>
        </trans-unit>
        <trans-unit id="063fb85fda1ecf261b6ffc1bdf3e94a75b564392" translate="yes" xml:space="preserve">
          <source>This example outputs the following into the console when it loads:</source>
          <target state="translated">この例では、ロード時に以下のようにコンソールに出力します。</target>
        </trans-unit>
        <trans-unit id="00ccb6374db56585c398e03287a02a7f7c4177b6" translate="yes" xml:space="preserve">
          <source>This example outputs the following into the page when it loads:</source>
          <target state="translated">この例では、ロード時に以下のような内容をページに出力しています。</target>
        </trans-unit>
        <trans-unit id="87955cfb279ab152bb315f711888e845068655ec" translate="yes" xml:space="preserve">
          <source>This example presents a function, &lt;code&gt;isVideoInFullscreen()&lt;/code&gt;, which looks at the value returned by &lt;code&gt;fullscreenElement&lt;/code&gt;; if the document is in full-screen mode (&lt;code&gt;fullscreenElement&lt;/code&gt; isn't &lt;code&gt;null&lt;/code&gt;) and the full-screen element's &lt;a href=&quot;../node/nodename&quot;&gt;&lt;code&gt;nodeName&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;VIDEO&quot;&lt;/code&gt;, indicating a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, the function returns &lt;code&gt;true&lt;/code&gt;, indicating that the video is in full-screen mode.</source>
          <target state="translated">この例でプレゼント機能、 &lt;code&gt;isVideoInFullscreen()&lt;/code&gt; によって返される値を見て、 &lt;code&gt;fullscreenElement&lt;/code&gt; 。ドキュメントが全画面モード（ &lt;code&gt;fullscreenElement&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; ではない）で、全画面要素の&lt;a href=&quot;../node/nodename&quot;&gt; &lt;code&gt;nodeName&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;&quot;VIDEO&quot;&lt;/code&gt; であり、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を示している &lt;code&gt;true&lt;/code&gt; 、関数はtrueを返し、ビデオが全画面モードであることを示します。 。</target>
        </trans-unit>
        <trans-unit id="432b22bf56092bd294a177317b63e7c4d0df4425" translate="yes" xml:space="preserve">
          <source>This example presents a function, &lt;code&gt;load()&lt;/code&gt;, which loads and processes a page from the server. It works by creating an &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; object and creating a listener for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; events such that that when &lt;code&gt;readyState&lt;/code&gt; changes to &lt;code&gt;DONE&lt;/code&gt; (4), the &lt;code&gt;response&lt;/code&gt; is obtained and passed into the callback function provided to &lt;code&gt;load()&lt;/code&gt;.</source>
          <target state="translated">この例は、サーバーからページをロードして処理する関数 &lt;code&gt;load()&lt;/code&gt; を示しています。これは、&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントのリスナーを作成することで機能します。これにより、 &lt;code&gt;readyState&lt;/code&gt; が &lt;code&gt;DONE&lt;/code&gt; （4）に変更されると、 &lt;code&gt;response&lt;/code&gt; が取得され、 &lt;code&gt;load()&lt;/code&gt; に提供されるコールバック関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="a28239039cbeea619b1363f2255237210a838db3" translate="yes" xml:space="preserve">
          <source>This example presents a function, &lt;code&gt;read()&lt;/code&gt;, which reads a file from a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file&quot;&gt;file input&lt;/a&gt;. It works by creating a &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; object and creating a listener for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt; events such that when then file is read, the &lt;code&gt;result&lt;/code&gt; is obtained and passed to the callback function provided to &lt;code&gt;read()&lt;/code&gt;.</source>
          <target state="translated">この例は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file&quot;&gt;ファイルinput&lt;/a&gt;からファイルを読み取る関数 &lt;code&gt;read()&lt;/code&gt; を示しています。 &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; オブジェクトを作成し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;ロード&lt;/a&gt;イベントのリスナーを作成することで機能します。ファイルが読み取られると &lt;code&gt;result&lt;/code&gt; が取得され、 &lt;code&gt;read()&lt;/code&gt; に提供されるコールバック関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="f0fa80d75fe9a1fb09610c0083e29d8a5c4b6387" translate="yes" xml:space="preserve">
          <source>This example quickly seeks to 20-second position of the video element.</source>
          <target state="translated">この例では、動画要素の20秒の位置を素早く求める。</target>
        </trans-unit>
        <trans-unit id="87f16e610446d9797a6f57fee61615ae783f2e2c" translate="yes" xml:space="preserve">
          <source>This example registers a handler for every event type for the given element.</source>
          <target state="translated">この例では、与えられた要素のイベントタイプごとにハンドラを登録しています。</target>
        </trans-unit>
        <trans-unit id="9d6f6c208662eb15dbfcfccda421a61d6ec0764b" translate="yes" xml:space="preserve">
          <source>This example renames the file specified by the variable &lt;code&gt;fileEntry&lt;/code&gt; to &lt;code&gt;&quot;newname.html&quot;&lt;/code&gt;.</source>
          <target state="translated">この例では、変数 &lt;code&gt;fileEntry&lt;/code&gt; で指定されたファイルの名前を &lt;code&gt;&quot;newname.html&quot;&lt;/code&gt; に変更します。</target>
        </trans-unit>
        <trans-unit id="55e984281f9d7e629ef12bf94d3b8ed40e67cea2" translate="yes" xml:space="preserve">
          <source>This example represents the price of $42.95 in US dollars.</source>
          <target state="translated">この例は、米ドルで42.95ドルの価格を表しています。</target>
        </trans-unit>
        <trans-unit id="d4c4a9439dc7dc99bfcaa473c8a2d76e152e7254" translate="yes" xml:space="preserve">
          <source>This example represents the price of $42.95 in US dollars:</source>
          <target state="translated">この例は、米ドルで42.95ドルの価格を表しています。</target>
        </trans-unit>
        <trans-unit id="5f3985c79a852e13da951f841012399aee0d324d" translate="yes" xml:space="preserve">
          <source>This example responds to the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; event by fetching up to 64kB of a file represented by an object &lt;code&gt;source&lt;/code&gt; and calling &lt;a href=&quot;send&quot;&gt;&lt;code&gt;RTCDataChannel.send()&lt;/code&gt;&lt;/a&gt; to queue up the retrieved data for sending on the data channel.</source>
          <target state="translated">この例では、オブジェクト &lt;code&gt;source&lt;/code&gt; によって表される最大64kBのファイルをフェッチし、&lt;a href=&quot;send&quot;&gt; &lt;code&gt;RTCDataChannel.send()&lt;/code&gt; &lt;/a&gt;を呼び出して、データチャネルで送信するために取得したデータをキューに入れることにより、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; イベントに応答します。</target>
        </trans-unit>
        <trans-unit id="fb8015eb7c5d562a49909a9039e772979e8c0399" translate="yes" xml:space="preserve">
          <source>This example retrieves the textual contents of the clipboard and inserts the returned text into an element's contents.</source>
          <target state="translated">この例では、クリップボードのテキスト内容を取得し、返されたテキストを要素の内容に挿入します。</target>
        </trans-unit>
        <trans-unit id="35c438d1b2a5a377528cdf9e5d913714f0b4d2ae" translate="yes" xml:space="preserve">
          <source>This example returns a list of all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; elements within &lt;code&gt;&quot;myBox&quot;&lt;/code&gt; with a class of either &quot;&lt;code&gt;note&lt;/code&gt;&quot; or &quot;&lt;code&gt;alert&lt;/code&gt;&quot;:</source>
          <target state="translated">この例では、 &lt;code&gt;&quot;myBox&quot;&lt;/code&gt; 内のすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のリストを、「 &lt;code&gt;note&lt;/code&gt; 」または「 &lt;code&gt;alert&lt;/code&gt; 」のいずれかのクラスで返します。</target>
        </trans-unit>
        <trans-unit id="e2a36d4b2d5aba2673a258ec1e2b9e4f220beaa8" translate="yes" xml:space="preserve">
          <source>This example returns a list of all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; elements within the document with a class of either &quot;&lt;code&gt;note&lt;/code&gt;&quot; or &quot;&lt;code&gt;alert&lt;/code&gt;&quot;:</source>
          <target state="translated">この例では、&quot; &lt;code&gt;note&lt;/code&gt; &quot;または &quot; &lt;code&gt;alert&lt;/code&gt; &quot;のいずれかのクラスを持つドキュメント内のすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="8aaa060309056c293ee9589af0788c97fbb9b22b" translate="yes" xml:space="preserve">
          <source>This example returns a list of all &lt;code&gt;div&lt;/code&gt; elements within the &lt;code&gt;DocumentFragment&lt;/code&gt; with a class of either &quot;&lt;code&gt;note&lt;/code&gt;&quot; or &quot;&lt;code&gt;alert&lt;/code&gt;&quot;:</source>
          <target state="translated">この例では、&quot; &lt;code&gt;note&lt;/code&gt; &quot;または &quot; &lt;code&gt;alert&lt;/code&gt; &quot;のいずれかのクラスを持つ &lt;code&gt;DocumentFragment&lt;/code&gt; 内のすべての &lt;code&gt;div&lt;/code&gt; 要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="97d7aac2afd8599147005269959057ecdc0ef1a1" translate="yes" xml:space="preserve">
          <source>This example returns an array of track kinds and labels for potential use in a user interface to select audio tracks for a specified media element. The list is filtered to only allow certain track kinds through.</source>
          <target state="translated">この例では、指定されたメディア要素のオーディオトラックを選択するために、ユーザーインターフェースで使用する可能性のあるトラックの種類とラベルの配列を返します。このリストは、特定のトラックの種類のみを通すようにフィルタリングされています。</target>
        </trans-unit>
        <trans-unit id="a947495448b24681deba56e26922205155b62e5e" translate="yes" xml:space="preserve">
          <source>This example returns an array of track kinds and labels for potential use in a user interface to select video tracks for a specified media element. The list is filtered to only allow certain track kinds through.</source>
          <target state="translated">この例では、指定されたメディア要素のビデオトラックを選択するために、ユーザーインターフェースで使用する可能性のあるトラックの種類とラベルの配列を返します。このリストは、特定の種類のトラックのみを通過させるようにフィルタリングされています。</target>
        </trans-unit>
        <trans-unit id="7785c6b8b2ed5a14d247b2012f5b3c8ca43f3e67" translate="yes" xml:space="preserve">
          <source>This example rotates a rectangle by 45 degrees.</source>
          <target state="translated">この例では、長方形を45度回転させています。</target>
        </trans-unit>
        <trans-unit id="de4566b0fcc61c3c2e5f453a929c9cb3e7e0758e" translate="yes" xml:space="preserve">
          <source>This example saves some intersecting lines to a Path2D object. The &lt;code&gt;fill()&lt;/code&gt; method is then used to render the object to the canvas. A hole is left unfilled in the object's center by using the &lt;code&gt;&quot;evenodd&quot;&lt;/code&gt; rule; by default (with the &lt;code&gt;&quot;nonzero&quot;&lt;/code&gt; rule), the hole would also be filled.</source>
          <target state="translated">この例では、いくつかの交差する線をPath2Dオブジェクトに保存します。次に、 &lt;code&gt;fill()&lt;/code&gt; メソッドを使用して、オブジェクトをキャンバスにレンダリングします。 &lt;code&gt;&quot;evenodd&quot;&lt;/code&gt; ルールを使用して、オブジェクトの中心に穴を空けません。デフォルトでは（ &lt;code&gt;&quot;nonzero&quot;&lt;/code&gt; ルールを使用）、穴も埋められます。</target>
        </trans-unit>
        <trans-unit id="26eb5d3c3ce9ea732cefbaa3c8c9eeb72a0633a4" translate="yes" xml:space="preserve">
          <source>This example saves two rectangles to a Path2D object, which is then made the current clipping region using the &lt;code&gt;clip()&lt;/code&gt; method. The &lt;code&gt;&quot;evenodd&quot;&lt;/code&gt; rule creates a hole where the clipping rectangles intersect; by default (with the &lt;code&gt;&quot;nonzero&quot;&lt;/code&gt; rule), there would be no hole.</source>
          <target state="translated">この例では、2つの四角形をPath2Dオブジェクトに保存し、 &lt;code&gt;clip()&lt;/code&gt; メソッドを使用して現在のクリッピング領域にします。 &lt;code&gt;&quot;evenodd&quot;&lt;/code&gt; ルールは、ここでクリッピング矩形交差穴を作成します。デフォルトでは（ &lt;code&gt;&quot;nonzero&quot;&lt;/code&gt; ルールを使用）、穴はありません。</target>
        </trans-unit>
        <trans-unit id="efda8b9d8658d10de23f794bacea54cb55ad08d8" translate="yes" xml:space="preserve">
          <source>This example sends some named events. Each has an event name specified by the &lt;code&gt;event&lt;/code&gt; field, and a &lt;code&gt;data&lt;/code&gt; field whose value is an appropriate JSON string with the data needed for the client to act on the event. The &lt;code&gt;data&lt;/code&gt; field could, of course, have any string data; it doesn't have to be JSON.</source>
          <target state="translated">この例では、いくつかの名前付きイベントを送信します。それぞれで指定されたイベント名を持つ &lt;code&gt;event&lt;/code&gt; フィールド、および &lt;code&gt;data&lt;/code&gt; 値がイベントに作用するために、クライアントのために必要なデータを適切なJSON文字列であるフィールド。 &lt;code&gt;data&lt;/code&gt; フィールドには、当然のことながら、任意の文字列データを持つことができます。JSONである必要はありません。</target>
        </trans-unit>
        <trans-unit id="a2673b45a3af2d20f5e93b5e7be9e9046cbfb33a" translate="yes" xml:space="preserve">
          <source>This example sets cell spacing for a given table to 10 pixels.</source>
          <target state="translated">この例では、指定された表のセル間隔を10ピクセルに設定します。</target>
        </trans-unit>
        <trans-unit id="5352fd2bd5ed3867e1d6f93b3ea1b9e32c790dad" translate="yes" xml:space="preserve">
          <source>This example sets the clipboard's contents to the string &quot;&amp;lt;empty clipboard&amp;gt;&quot;.</source>
          <target state="translated">この例では、クリップボードの内容を文字列 &quot;&amp;lt;empty clipboard&amp;gt;&quot;に設定します。</target>
        </trans-unit>
        <trans-unit id="ac5421146a0d7212232c1f51d61ec0bc7567dfdb" translate="yes" xml:space="preserve">
          <source>This example sets up a function, &lt;code&gt;handleTrackEvent()&lt;/code&gt;, which is callled for any &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; event on the first &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element found in the document.</source>
          <target state="translated">この例では、関数 &lt;code&gt;handleTrackEvent()&lt;/code&gt; を設定します。これは、ドキュメントで最初に見つかった&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; イベントまたはremovetrackイベントに対して &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; れます。</target>
        </trans-unit>
        <trans-unit id="8d77c6390f9d7281b6898f5891178c6417f3e42b" translate="yes" xml:space="preserve">
          <source>This example sets up an event handler for the ended event which changes an on-screen icon to indicate that the track is no longer active.</source>
          <target state="translated">この例では、終了したイベントのイベントハンドラを設定し、トラックがアクティブでなくなったことを示すオンスクリーンアイコンを変更します。</target>
        </trans-unit>
        <trans-unit id="efa25a2324c413459afee788fbb9e3ed1cc865fd" translate="yes" xml:space="preserve">
          <source>This example shows a 'long' sentence that wraps within a div with a blue border, and a red box that one might think should describe the boundaries of the span.</source>
          <target state="translated">この例では、青の枠線で div 内に折り返した '長い' 文と、スパンの境界線を記述すべきだと思われる赤のボックスを示しています。</target>
        </trans-unit>
        <trans-unit id="056af1a12b4652d8295ad7b008fd9f2cf3838608" translate="yes" xml:space="preserve">
          <source>This example shows a Firefox add-on that transfers an &lt;code&gt;ArrayBuffer&lt;/code&gt; from the main thread to the &lt;code&gt;ChromeWorker&lt;/code&gt;, and then the &lt;code&gt;ChromeWorker&lt;/code&gt; transfers it back to the main thread.</source>
          <target state="translated">この例が示すFirefoxはその転送アドオン &lt;code&gt;ArrayBuffer&lt;/code&gt; にメインスレッドから &lt;code&gt;ChromeWorker&lt;/code&gt; 、次いで &lt;code&gt;ChromeWorker&lt;/code&gt; のバックメインスレッドに転送します。</target>
        </trans-unit>
        <trans-unit id="ef4a3a74c46e633c5f3cf107a18fab4652a3f64a" translate="yes" xml:space="preserve">
          <source>This example shows a database connection being opened, the resulting &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; object being stored in a db variable, and the name property then being logged. For a full example, see our &lt;a href=&quot;https://github.com/chrisdavidmills/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://chrisdavidmills.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;).</source>
          <target state="translated">この例は、データベース接続が開かれ、結果の&lt;a href=&quot;../idbdatabase&quot;&gt; &lt;code&gt;IDBDatabase&lt;/code&gt; &lt;/a&gt;オブジェクトがdb変数に格納され、次にnameプロパティがログに記録されることを示しています。完全な例については、&lt;a href=&quot;https://github.com/chrisdavidmills/to-do-notifications/tree/gh-pages&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://chrisdavidmills.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="8316041ef2106bf88d8fe2995abed2970bef3b39" translate="yes" xml:space="preserve">
          <source>This example shows a database connection being opened, the resulting &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; object being stored in a db variable, and the name property then being logged. For a full example, see our &lt;a href=&quot;https://github.com/chrisdavidmills/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://chrisdavidmills.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;).</source>
          <target state="translated">この例は、データベース接続が開かれ、結果の&lt;a href=&quot;../idbdatabase&quot;&gt; &lt;code&gt;IDBDatabase&lt;/code&gt; &lt;/a&gt;オブジェクトがdb変数に格納され、nameプロパティがログに記録されることを示しています。完全な例については、&lt;a href=&quot;https://github.com/chrisdavidmills/to-do-notifications/tree/gh-pages&quot;&gt;To Do通知&lt;/a&gt;アプリを参照してください（&lt;a href=&quot;https://chrisdavidmills.github.io/to-do-notifications/&quot;&gt;例をライブで表示&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d9b0d02b6fa8209f3584b6d46cd4b5ea67399b6b" translate="yes" xml:space="preserve">
          <source>This example shows a function called &lt;code&gt;isFileWithExtension()&lt;/code&gt; which returns true if the specified &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; is both a file and the file's name ends with a given extension.</source>
          <target state="translated">この例は、 &lt;code&gt;isFileWithExtension()&lt;/code&gt; という関数を示しています。これは、指定された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt; &lt;code&gt;FileSystemEntry&lt;/code&gt; &lt;/a&gt;がファイルであり、ファイルの名前が指定された拡張子で終わっている場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="072a0843d8cfa6aefabe989307216c023b35000b" translate="yes" xml:space="preserve">
          <source>This example shows a function which is called with a file system; it then gets a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; for a file named &lt;code&gt;data.json&lt;/code&gt; and returns its full path.</source>
          <target state="translated">この例は、ファイルシステムで呼び出される関数を示しています。次に、 &lt;code&gt;data.json&lt;/code&gt; という名前のファイルの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt; &lt;code&gt;FileSystemFileEntry&lt;/code&gt; &lt;/a&gt;を取得し、その完全パスを返します。</target>
        </trans-unit>
        <trans-unit id="974f7207ad58c955fb20e88bee854c97238c7b67" translate="yes" xml:space="preserve">
          <source>This example shows a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; event. It watches for the ICE connection state to transition to &lt;code&gt;&quot;failed&quot;&lt;/code&gt;, which indicates that an ICE restart should be tried in order to attempt to bring the connection back up.</source>
          <target state="translated">この例は、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを示しています。ICEの接続状態が &lt;code&gt;&quot;failed&quot;&lt;/code&gt; に移行するのを監視します。これは、接続の回復を試みるためにICEの再起動を試行する必要があることを示しています。</target>
        </trans-unit>
        <trans-unit id="0d51913c2729596c974de679c9bfb8d3baabbaf9" translate="yes" xml:space="preserve">
          <source>This example shows a method which opens a window and a second one which closes the window; this demonstrates how to use &lt;code&gt;Window.close()&lt;/code&gt; to close a window opened by calling &lt;a href=&quot;open&quot;&gt;&lt;code&gt;window.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例は、ウィンドウを開くメソッドとウィンドウを閉じるメソッドを示しています。これは、 &lt;code&gt;Window.close()&lt;/code&gt; を使用して、&lt;a href=&quot;open&quot;&gt; &lt;code&gt;window.open()&lt;/code&gt; を&lt;/a&gt;呼び出して開いたウィンドウを閉じる方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c65504951dcc0c3cfddefca313bd0733af2cd3b3" translate="yes" xml:space="preserve">
          <source>This example shows a shared worker file &amp;mdash; when a connection to the worker occurs from a main thread via a &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;onconnect&lt;/code&gt; event handler fires. The connecting port can be referenced through the event's &lt;code&gt;ports&lt;/code&gt; parameter; this reference can have an &lt;code&gt;onmessage&lt;/code&gt; handler attached to it to handle messages coming in through the port, and its &lt;code&gt;postMessage()&lt;/code&gt; method can be used to send messages back to the main thread using the worker.</source>
          <target state="translated">この例は、共有ワーカーファイルを示しています。メインスレッドから&lt;a href=&quot;../messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;を介してワーカーへの接続が発生すると、 &lt;code&gt;onconnect&lt;/code&gt; イベントハンドラーが起動します。接続ポートは、イベントの &lt;code&gt;ports&lt;/code&gt; パラメータを介して参照できます。この参照には、ポートを介して &lt;code&gt;postMessage()&lt;/code&gt; するメッセージを処理する &lt;code&gt;onmessage&lt;/code&gt; ハンドラーをアタッチでき、そのpostMessage（）メソッドを使用して、ワーカーを使用してメインスレッドにメッセージを送り返すことができます。</target>
        </trans-unit>
        <trans-unit id="07f655ba0c21cbe83db5d99675160ffc56703976" translate="yes" xml:space="preserve">
          <source>This example shows a variety of different uses of object stores, from updating the data structure with &lt;a href=&quot;idbobjectstore/createindex&quot;&gt;&lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt;&lt;/a&gt; inside an &lt;code&gt;onupgradeneeded&lt;/code&gt; function, to adding a new item to our object store with &lt;a href=&quot;idbobjectstore/add&quot;&gt;&lt;code&gt;IDBObjectStore.add&lt;/code&gt;&lt;/a&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">この例では、とのデータ構造の更新からオブジェクトストアの異なる様々な用途を示す&lt;a href=&quot;idbobjectstore/createindex&quot;&gt; &lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt; &lt;/a&gt;内部 &lt;code&gt;onupgradeneeded&lt;/code&gt; 関数を、とのオブジェクトストアに新しいアイテムを追加する&lt;a href=&quot;idbobjectstore/add&quot;&gt; &lt;code&gt;IDBObjectStore.add&lt;/code&gt; &lt;/a&gt;。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="acc1a20c365bd0b60471823bc1c98af352e11f35" translate="yes" xml:space="preserve">
          <source>This example shows a variety of different uses of object stores, from updating the data structure with &lt;a href=&quot;idbobjectstore/createindex&quot;&gt;&lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt;&lt;/a&gt; inside an &lt;code&gt;onupgradeneeded&lt;/code&gt; function, to adding a new item to our object store with &lt;a href=&quot;idbobjectstore/add&quot;&gt;&lt;code&gt;IDBObjectStore.add&lt;/code&gt;&lt;/a&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">この例は、 &lt;code&gt;onupgradeneeded&lt;/code&gt; 関数内でIDBObjectStore.createIndexを&lt;a href=&quot;idbobjectstore/createindex&quot;&gt; &lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt; &lt;/a&gt;てデータ構造を更新することから、IDBObjectStore.addを使用してオブジェクトストアに新しいアイテムを追加することまで、オブジェクトストアの&lt;a href=&quot;idbobjectstore/add&quot;&gt; &lt;code&gt;IDBObjectStore.add&lt;/code&gt; &lt;/a&gt;を示しています。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To Do通知&lt;/a&gt;アプリを参照してください（&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;例をライブで表示し&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="c3fb02400e0b153ad29a9a8562547258bc96c5c6" translate="yes" xml:space="preserve">
          <source>This example shows an &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; block that creates a new object store; it also includes &lt;code&gt;onerror&lt;/code&gt; and &lt;code&gt;onabort&lt;/code&gt; functions to handle non-success cases, and an onversionchange function to notify when a database structure change has occurred.</source>
          <target state="translated">この例は、新しいオブジェクトストアを作成する&lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt; &lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt; &lt;/a&gt;ブロックを示しています。また、成功しないケースを処理する &lt;code&gt;onerror&lt;/code&gt; 関数と &lt;code&gt;onabort&lt;/code&gt; 関数、およびデータベース構造の変更が発生したときに通知するonversionchange関数も含まれています。</target>
        </trans-unit>
        <trans-unit id="972a46d7d8692af94f8782ac8c03dfa272b220d5" translate="yes" xml:space="preserve">
          <source>This example shows an &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; block that creates a new object store; it also includes &lt;code&gt;onerror&lt;/code&gt; and &lt;code&gt;onabort&lt;/code&gt; functions to handle non-success cases.</source>
          <target state="translated">この例は、新しいオブジェクトストアを作成する&lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt; &lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt; &lt;/a&gt;ブロックを示しています。また、成功しないケースを処理する &lt;code&gt;onerror&lt;/code&gt; および &lt;code&gt;onabort&lt;/code&gt; 関数も含まれています。</target>
        </trans-unit>
        <trans-unit id="8dcce87452b269d78f3c2db7e11450590771f891" translate="yes" xml:space="preserve">
          <source>This example shows how a cubic B&amp;eacute;zier curve is drawn.</source>
          <target state="translated">この例は、3次ベジェ曲線の描画方法を示しています。</target>
        </trans-unit>
        <trans-unit id="48b5e50e3e9abf807b9c55a0987cc913b1772094" translate="yes" xml:space="preserve">
          <source>This example shows how a quadratic B&amp;eacute;zier curve is drawn.</source>
          <target state="translated">この例は、2次ベジエ曲線の描画方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d5f9f1733dc6f63b79f674049f5c1a8ec360ef9c" translate="yes" xml:space="preserve">
          <source>This example shows how a temporary log file might be moved into a more permanent &quot;log&quot; directory when it exceeds a megabyte in size.</source>
          <target state="translated">この例では、一時的なログファイルがメガバイトを超えた場合に、より永続的な「ログ」ディレクトリに移動する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ae9cfaa86a71e9f03fb5ac99bfe38abb0540bf43" translate="yes" xml:space="preserve">
          <source>This example shows how a temporary log file might be moved into a more permanent &quot;log&quot; directory.</source>
          <target state="translated">この例では、一時的なログファイルをより恒久的な「log」ディレクトリに移動する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ad83314003e3081fcdb82668848b6664886fc57d" translate="yes" xml:space="preserve">
          <source>This example shows how a the &lt;code&gt;transaction&lt;/code&gt; property can be used during a version upgrade to access existing object stores:​</source>
          <target state="translated">この例は、バージョンのアップグレード中に &lt;code&gt;transaction&lt;/code&gt; プロパティを使用して、既存のオブジェクトストアにアクセスする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d9f8036049589780b3ab17013fc53e2cee7781a1" translate="yes" xml:space="preserve">
          <source>This example shows how this property might be used to determine whether to process the entry as a directory or file. If the entry is neither, an error handler is called with an appropriate message.</source>
          <target state="translated">この例では、このプロパティを使用して、エントリをディレクトリとして処理するかファイルとして処理するかを決定する方法を示しています。エントリがどちらでもない場合、適切なメッセージとともにエラーハンドラが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fbd5e7c95ea770e0559c3754de94a7d90d53f53b" translate="yes" xml:space="preserve">
          <source>This example shows how to add a &lt;code&gt;click&lt;/code&gt;-based event listener and remove a &lt;code&gt;mouseover&lt;/code&gt;-based event listener.</source>
          <target state="translated">この例は、 &lt;code&gt;click&lt;/code&gt; ベースのイベントリスナーを追加し、 &lt;code&gt;mouseover&lt;/code&gt; ベースのイベントリスナーを削除する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9b6ca4013dc22cc71bb5c027637f3e60d4ccbabb" translate="yes" xml:space="preserve">
          <source>This example shows how to create a data channel and set up handlers for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; events to send and receive messages on it (For brievity, the example assumes onnegotiationneeded is set up).</source>
          <target state="translated">この例は、データチャネルを作成し、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを設定してメッセージを送受信する方法を示しています（簡潔にするため、この例ではonnegotiationneededがセットアップされていると想定しています）。</target>
        </trans-unit>
        <trans-unit id="072cefcd68b68e641fd88c6e74379aaeba20f80b" translate="yes" xml:space="preserve">
          <source>This example shows how to create a media recorder for a specified stream, whose audio bit rate is set to 128Kbit/sec and whose video bit rate is set to 2.5 Mbit/sec. The recorded media data will be stored in an MP4 wrapper (so if you gather the chunks of media data and save them to disk, they will be in an MP4 file).</source>
          <target state="translated">この例では、オーディオのビットレートが128Kbit/sec、ビデオのビットレートが2.5Mbit/secに設定されたストリーム用のメディアレコーダを作成する方法を示します。記録されたメディアデータは MP4 ラッパーに保存されます(メディアデータの塊を集めてディスクに保存すると MP4 ファイルになります)。</target>
        </trans-unit>
        <trans-unit id="f35354a9dc9b369384dc093bb878a72a6a5c8306" translate="yes" xml:space="preserve">
          <source>This example shows how to detect the &lt;em&gt;pinch/zoom&lt;/em&gt; gesture, which uses &lt;a href=&quot;../pointer_events&quot;&gt;&lt;code&gt;pointer events&lt;/code&gt;&lt;/a&gt; to detect whether the user moves two pointers closer or farther apart from each other.</source>
          <target state="translated">この例は、&lt;em&gt;ピンチ/ズーム&lt;/em&gt;ジェスチャーを検出する方法を示しています。これは、&lt;a href=&quot;../pointer_events&quot;&gt; &lt;code&gt;pointer events&lt;/code&gt; &lt;/a&gt;を使用して、ユーザーが2つのポインターを互いに近づけたり遠ざけたりしたかどうかを検出します。</target>
        </trans-unit>
        <trans-unit id="0baf63010872e516ca40b7939a9506b913aba4e4" translate="yes" xml:space="preserve">
          <source>This example shows how to give a &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; instance a custom id.</source>
          <target state="translated">この例は、&lt;a href=&quot;../paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest&lt;/code&gt; &lt;/a&gt;インスタンスにカスタムID を与える方法を示しています。</target>
        </trans-unit>
        <trans-unit id="01813eec3345618c1cf7627ee702c49095a8c099" translate="yes" xml:space="preserve">
          <source>This example shows how to send your vertex attributes to the shader program. We use an imaginary data structure where the attributes of each vertex are stored interleaved with a length of 20 bytes per vertex:</source>
          <target state="translated">この例では、頂点のアトリビュートをシェーダプログラムに送る方法を示します。各頂点のアトリビュートが各頂点につき20バイトの長さでインターリーブされて格納されている架空のデータ構造を使用しています。</target>
        </trans-unit>
        <trans-unit id="6ea9f142f06ebd4e8c7ebee05e5fb08c7b8f9ea8" translate="yes" xml:space="preserve">
          <source>This example shows how to set up a &lt;code&gt;ConstantSourceNode&lt;/code&gt; so its &lt;code&gt;offset&lt;/code&gt; is used as the input to a pair of &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;s; this snippet is derived from the complete example you can find in &lt;a href=&quot;../web_audio_api/controlling_multiple_parameters_with_constantsourcenode&quot;&gt;Controlling multiple parameters with ConstantSourcenode&lt;/a&gt;.</source>
          <target state="translated">この例は、 &lt;code&gt;ConstantSourceNode&lt;/code&gt; を設定して、その &lt;code&gt;offset&lt;/code&gt; が&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt;のペアへの入力として使用されるようにする方法を示しています。このスニペットは&lt;a href=&quot;../web_audio_api/controlling_multiple_parameters_with_constantsourcenode&quot;&gt;、ConstantSourcenodeを使用した複数のパラメーターの制御に&lt;/a&gt;ある完全な例から派生しています。</target>
        </trans-unit>
        <trans-unit id="4b5452a2c5edcd9f3d0e524e017ca20fef07128b" translate="yes" xml:space="preserve">
          <source>This example shows how to use drag and drop.</source>
          <target state="translated">この例では、ドラッグ&amp;ドロップの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="23eedcf44d86934819a3a187571177a8f824042d" translate="yes" xml:space="preserve">
          <source>This example shows how to use the &lt;code&gt;setDragImage()&lt;/code&gt; method. Note the example refers to an image file named &lt;code&gt;example.gif&lt;/code&gt;. If that file is present, it will be used as the drag image and if that file is not present, the browser will use its default drag image.</source>
          <target state="translated">この例は、 &lt;code&gt;setDragImage()&lt;/code&gt; メソッドの使用方法を示しています。この例は、 &lt;code&gt;example.gif&lt;/code&gt; という名前の画像ファイルを参照していることに注意してください。そのファイルが存在する場合、それはドラッグイメージとして使用され、そのファイルが存在しない場合、ブラウザはデフォルトのドラッグイメージを使用します。</target>
        </trans-unit>
        <trans-unit id="cb9edc8bc72374fbea024974d444d62ac8fd2bb5" translate="yes" xml:space="preserve">
          <source>This example shows how to write the name of each dragged file to the console. In a &lt;em&gt;real&lt;/em&gt; application, an application may want to process a file using the &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File API&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例は、ドラッグされた各ファイルの名前をコンソールに書き込む方法を示しています。では&lt;em&gt;、実際の&lt;/em&gt;アプリケーション、アプリケーションが使用してファイルを処理したい場合があり&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File API&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="006e53a20475640619597e9b9059211ab9f2c430" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この例は、&lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;getdata&quot;&gt; &lt;code&gt;getData()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;setdata&quot;&gt; &lt;code&gt;setData()&lt;/code&gt; &lt;/a&gt;メソッドの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a21840095987dccfebabcef52fe3a675fd7beabc" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cleardata&quot;&gt;&lt;code&gt;clearData()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この例は、&lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;getdata&quot;&gt; &lt;code&gt;getData()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;setdata&quot;&gt; &lt;code&gt;setData()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;cleardata&quot;&gt; &lt;code&gt;clearData()&lt;/code&gt; &lt;/a&gt;メソッドの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="b80adc2ddc3ec697de4afd687bba7fc2e835096c" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;add()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;add()&lt;/code&gt; メソッドの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="73cee04e8139fdac4f967b3b819b285782655aad" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;clear()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;clear()&lt;/code&gt; メソッドの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="e361330c33e626028b3df6560d958c32be73411a" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;dropEffect&lt;/code&gt; and &lt;a href=&quot;effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">この例は、 &lt;code&gt;dropEffect&lt;/code&gt; プロパティと&lt;a href=&quot;effectallowed&quot;&gt; &lt;code&gt;effectAllowed&lt;/code&gt; &lt;/a&gt;プロパティの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="04fef75358dc4c8e4ccfb04a7d2e381f8e33099b" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;effectAllowed&lt;/code&gt; and &lt;a href=&quot;dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">この例は、 &lt;code&gt;effectAllowed&lt;/code&gt; および&lt;a href=&quot;dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="f422f072f82db45da6901d58dc2a151781ffc7f7" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;getAsFile()&lt;/code&gt; method in a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例は、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; イベントハンドラーでの &lt;code&gt;getAsFile()&lt;/code&gt; メソッドの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9fb83a4cfe262b81bb22fe90df7c21a9976b1c0b" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;getAsString()&lt;/code&gt; method as an &lt;em&gt;inline function&lt;/em&gt; in a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例が示すの使用 &lt;code&gt;getAsString()&lt;/code&gt; などのメソッド&lt;em&gt;インライン関数&lt;/em&gt;で &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; イベントハンドラ。</target>
        </trans-unit>
        <trans-unit id="1d931c85d3f98fc387a3cf58ad61fa1576058a2e" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;items&lt;/code&gt; and &lt;a href=&quot;types&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">この例は、 &lt;code&gt;items&lt;/code&gt; プロパティと&lt;a href=&quot;types&quot;&gt; &lt;code&gt;types&lt;/code&gt; &lt;/a&gt;プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="0fbb42544f72e70f8d3cc33a698ff27cc1d0375d" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;kind&lt;/code&gt; property.</source>
          <target state="translated">この例は、 &lt;code&gt;kind&lt;/code&gt; プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="1845e9280a3a6cd749f20f8aa3a835e5304684d6" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;length&lt;/code&gt; property.</source>
          <target state="translated">この例では、 &lt;code&gt;length&lt;/code&gt; プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="d7cf36d130ba529cb65db7b3287a2fe737052011" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;remove()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;remove()&lt;/code&gt; メソッドの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="b0ee3d7bd40cbb47773d1aeea9336d232f00f75c" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;type&lt;/code&gt; property.</source>
          <target state="translated">この例は、 &lt;code&gt;type&lt;/code&gt; プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="eb679cd1b30edda6d22962626d1c0b94ef852422" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;types&lt;/code&gt; and &lt;a href=&quot;items&quot;&gt;&lt;code&gt;items&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">この例は、 &lt;code&gt;types&lt;/code&gt; および&lt;a href=&quot;items&quot;&gt; &lt;code&gt;items&lt;/code&gt; &lt;/a&gt;プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="513d151313403f12a76fdb38aac1bbc85d0e5de1" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;code&gt;onpointerleave&lt;/code&gt; to set an element's &lt;code&gt;pointerleave&lt;/code&gt; event handler.</source>
          <target state="translated">この例は、使用するには、2つの方法 &lt;code&gt;onpointerleave&lt;/code&gt; 要素の設定し &lt;code&gt;pointerleave&lt;/code&gt; イベントハンドラを。</target>
        </trans-unit>
        <trans-unit id="d01f3d86b0c0106ec50ec900107811bb8596ba09" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;onpointercancel&lt;/em&gt; to set an element's &lt;em&gt;pointercancel&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;onpointercancel&lt;/em&gt;を使用して要素の&lt;em&gt;pointercancel&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e8bf77fd4955597c8c186cebf61e8e46a7aef7a5" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;onpointerenter&lt;/em&gt; to set an element's &lt;em&gt;pointerenter&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;onpointerenter&lt;/em&gt;を使用して要素の&lt;em&gt;pointerenter&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="93a537244e3911684c3b8489446a5e3d099772da" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;onpointermove&lt;/em&gt; to set an element's &lt;em&gt;pointermove&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;onpointermove&lt;/em&gt;を使用して要素の&lt;em&gt;pointermove&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="49165d2f59ad10635dc0590768244e444351f6fc" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;onpointerout&lt;/em&gt; to set an element's &lt;em&gt;pointerout&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;onpointerout&lt;/em&gt;を使用して要素の&lt;em&gt;pointerout&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4f97d564c0c2e275a49f7c9bc8dc34b6929b82f9" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;onpointerover&lt;/em&gt; to set an element's &lt;em&gt;pointerover&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;onpointerover&lt;/em&gt;を使用して要素の&lt;em&gt;pointerover&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ea5e56bdb73155236008d1a6dd8a08cf2820fac9" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;onpointerup&lt;/em&gt; to set an element's &lt;em&gt;pointerup&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;onpointerup&lt;/em&gt;を使用して要素の&lt;em&gt;pointerup&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ba28525bf48ad65fbe907b00bca430e0fdeb97f2" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;ontouchcancel&lt;/em&gt; to set an element's &lt;em&gt;touchcancel&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;ontouchcancel&lt;/em&gt;を使用して要素の&lt;em&gt;touchcancel&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f78bfb5cf134a0a390129393ea96ba5d8227e2da" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;ontouchend&lt;/em&gt; to set an element's &lt;em&gt;touchend&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;ontouchend&lt;/em&gt;を使用して要素の&lt;em&gt;touchend&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="92fc565bb6825efc0ae457686482e113f170099e" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;ontouchmove&lt;/em&gt; to set an element's &lt;em&gt;touchmove&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;ontouchmove&lt;/em&gt;を使用して要素の&lt;em&gt;touchmove&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="946a42eeeb947778c814d9a6748b6a97d0c1cb89" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use &lt;em&gt;ontouchstart&lt;/em&gt; to set an element's &lt;em&gt;touchstart&lt;/em&gt; event handler.</source>
          <target state="translated">この例は、&lt;em&gt;ontouchstart&lt;/em&gt;を使用して要素の&lt;em&gt;touchstart&lt;/em&gt;イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c3e691b6d802c9860facf70f05e2f6d80f9ec502" translate="yes" xml:space="preserve">
          <source>This example shows two ways to use the &lt;a href=&quot;../globaleventhandlers&quot;&gt;&lt;code&gt;ondragend&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例は、&lt;a href=&quot;../globaleventhandlers&quot;&gt; &lt;code&gt;ondragend&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する2つの方法を示しています。</target>
        </trans-unit>
        <trans-unit id="04f766ff193d50712ef4e07f0b31928efacaddb8" translate="yes" xml:space="preserve">
          <source>This example shows you how to create a WebSocket API server using Oracle Java.</source>
          <target state="translated">この例では、Oracle Javaを使用してWebSocket APIサーバーを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f45bc9956893cdbfbbc381a5dff7d4958d23150e" translate="yes" xml:space="preserve">
          <source>This example shows, roughly, a &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; extracted from a device's &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;. The track is then used to create an &lt;code&gt;ImageCapture&lt;/code&gt; object so that &lt;code&gt;takePhoto()&lt;/code&gt; and &lt;code&gt;grabFrame()&lt;/code&gt; can be called. Finally, it shows how to apply the results of these calls to a canvas object.</source>
          <target state="translated">この例は、おおよそ、デバイスの&lt;a href=&quot;mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;から抽出された&lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; を&lt;/a&gt;示しています。次に、トラックを使用して &lt;code&gt;ImageCapture&lt;/code&gt; オブジェクトを作成し、 &lt;code&gt;takePhoto()&lt;/code&gt; および &lt;code&gt;grabFrame()&lt;/code&gt; を呼び出すことができるようにします。最後に、これらの呼び出しの結果をキャンバスオブジェクトに適用する方法を示します。</target>
        </trans-unit>
        <trans-unit id="855a1862ba4be7d0276a6692748ae8003cb7351e" translate="yes" xml:space="preserve">
          <source>This example simply creates a new &lt;code&gt;MutationObserver&lt;/code&gt; configured to watch a node and all of its children for additions and removals of elements to the tree as well as any changes to attributes on any of the elements in the tree.</source>
          <target state="translated">この例では、ツリーへの要素の追加と削除、およびツリー内の要素の属性への変更について、ノードとそのすべての子を監視するように構成された新しい &lt;code&gt;MutationObserver&lt;/code&gt; を作成するだけです。</target>
        </trans-unit>
        <trans-unit id="516ad439346230290798124ff59e033d6cafbb54" translate="yes" xml:space="preserve">
          <source>This example simply displays whether or not your browser supports the &lt;code&gt;autoGainControl&lt;/code&gt; constraint.</source>
          <target state="translated">この例では、ブラウザーが &lt;code&gt;autoGainControl&lt;/code&gt; 制約をサポートしているかどうかを表示しています。</target>
        </trans-unit>
        <trans-unit id="eefa66bff41c1a4fb642c80e7c1647b3c20c5a72" translate="yes" xml:space="preserve">
          <source>This example simply displays whether or not your browser supports the &lt;code&gt;noiseSuppression&lt;/code&gt; constraint.</source>
          <target state="translated">この例では、ブラウザーが &lt;code&gt;noiseSuppression&lt;/code&gt; 制約をサポートしているかどうかを表示しています。</target>
        </trans-unit>
        <trans-unit id="27a9f72baabec8d1752bf6a3b3c3af78a6efef48" translate="yes" xml:space="preserve">
          <source>This example simply logs unhandled rejections' &lt;code&gt;reason&lt;/code&gt; values to the console.</source>
          <target state="translated">この例では、未処理の拒否の &lt;code&gt;reason&lt;/code&gt; 値をコンソールに記録するだけです。</target>
        </trans-unit>
        <trans-unit id="e48a8b15f3bae5fb3358390ed0e17215b3c3a926" translate="yes" xml:space="preserve">
          <source>This example specifies a MIME type of &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;, overriding the server's stated type for the data being received.</source>
          <target state="translated">この例では、 &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; MIMEタイプを指定し、受信するデータについてサーバーが指定したタイプをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="7721a859a99034d98fa28f9a6b46983d6684c315" translate="yes" xml:space="preserve">
          <source>This example specifies a price of &amp;pound;7.77:</source>
          <target state="translated">この例では、&amp;pound;7.77の価格を指定しています。</target>
        </trans-unit>
        <trans-unit id="853d1c90878be251497fb847fbdd05823220961f" translate="yes" xml:space="preserve">
          <source>This example specifies a price of 1000&amp;yen;:</source>
          <target state="translated">この例では、1000円の価格を指定しています。</target>
        </trans-unit>
        <trans-unit id="bda67b718872b8b7a57258cebfd4ddefb6e5cb15" translate="yes" xml:space="preserve">
          <source>This example suggests a hypothetical game in which movies are used as cut-scenes or other key set pieces within the game. Each movie has one audio track for each character, as well as one for the music, sound effects, and so forth. This function allows the game to disable a specific character's audio in order to adjust the movie's performance based on occurrences within the game; if the character's dialog isn't relevant, it gets left out. Obviously that would require some clever graphic design to make work, but... it's a hypothetical game.</source>
          <target state="translated">この例では、ゲーム内のカットシーンやその他の重要なセットピースとしてムービーを使用したゲームを想定しています。各ムービーには、キャラクターごとに 1 つのオーディオトラックがあり、音楽や効果音などにも 1 つのトラックがあります。この機能により、ゲーム内での出来事に基づいてムービーのパフォーマンスを調整するために、特定のキャラクターのオーディオを無効にすることができます。この機能を実現するためには、明らかに巧妙なグラフィックデザインが必要になりますが、これは仮定のゲームです。</target>
        </trans-unit>
        <trans-unit id="671db829845d50014e992a8dea91132fb06b612a" translate="yes" xml:space="preserve">
          <source>This example switches between the main and commentary audio tracks of a media element.</source>
          <target state="translated">この例では、メディア要素のメインオーディオトラックとコメンタリーオーディオトラックを切り替えています。</target>
        </trans-unit>
        <trans-unit id="76568f5d48d295814cc8c20ebc5b5dee0a41488a" translate="yes" xml:space="preserve">
          <source>This example tracks multiple touch points at a time, allowing the user to draw in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; with more than one finger at a time. It will only work on a browser that supports touch events.</source>
          <target state="translated">この例では、一度に複数のタッチポイントを追跡し、ユーザーが一度に複数の指で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;に描画できるようにします。タッチイベントをサポートするブラウザでのみ機能します。</target>
        </trans-unit>
        <trans-unit id="a647ec3aedc75250fc889db9b3f789a16658bb85" translate="yes" xml:space="preserve">
          <source>This example tries to get a particular working file at &lt;code&gt;tmp/workfile.json&lt;/code&gt;. Once that file has been found, its metadata is obtained and the file's modification timestamp year is compared to the current year. If it was last modified in a year at least five prior to the current year, the file is removed and a new one is created.</source>
          <target state="translated">この例では、 &lt;code&gt;tmp/workfile.json&lt;/code&gt; にある特定の作業ファイルを取得しようとします。そのファイルが見つかると、そのメタデータが取得され、ファイルの変更タイムスタンプの年が現在の年と比較されます。現在の年の少なくとも5年前に最後に変更された場合、ファイルは削除され、新しいファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="f7d0724bc9f8bb39529022e05e06b4ef4bcb3fd2" translate="yes" xml:space="preserve">
          <source>This example tries to illustrate how the stack of drawing states functions by drawing a set of consecutive rectangles.</source>
          <target state="translated">この例では、連続した長方形の集合を描画することで、描画状態のスタックがどのように機能するかを説明しようとしています。</target>
        </trans-unit>
        <trans-unit id="f5eec205bbc9f4d22a18e2018cc11fd176fee99a" translate="yes" xml:space="preserve">
          <source>This example updates status information presented to the user to let them know what's happening by examining the current value of the &lt;a href=&quot;icegatheringstate&quot;&gt;&lt;code&gt;iceGatheringState&lt;/code&gt;&lt;/a&gt; property each time it changes and changing the contents of a status display based on the new information.</source>
          <target state="translated">この例では、ユーザーに表示されるステータス情報を更新して、変更のたびに&lt;a href=&quot;icegatheringstate&quot;&gt; &lt;code&gt;iceGatheringState&lt;/code&gt; &lt;/a&gt;プロパティの現在の値を調べ、新しい情報に基づいてステータス表示の内容を変更することで、何が起こっているかをユーザーに通知します。</target>
        </trans-unit>
        <trans-unit id="2dc5fa9427bfdc79e1df6f4c2b0ac67a4312a571" translate="yes" xml:space="preserve">
          <source>This example uses &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt; to listen for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; events. When they occur, the key's value is checked to see if it's one of the keys the code is interested in, and if it is, it gets processed in some way (possibly by steering a spacecraft, perhaps by changing the selected cell in a spreadsheet).</source>
          <target state="translated">この例では、&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;EventTarget.addEventListener()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントをリッスンします。それらが発生すると、キーの値がチェックされ、コードが対象とするキーの1つであるかどうかが確認されます。そうである場合は、何らかの方法で処理されます（おそらく、宇宙船を操縦することによって、おそらくスプレッドシートで選択したセルを変更することによって）。 ）。</target>
        </trans-unit>
        <trans-unit id="b55a1f1b4c2a60e88881ba3d7f73cafef88651fb" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;innerHTML&lt;/code&gt; to create a mechanism for logging messages into a box on a web page.</source>
          <target state="translated">この例では、 &lt;code&gt;innerHTML&lt;/code&gt; を使用して、メッセージをWebページのボックスに記録するメカニズムを作成します。</target>
        </trans-unit>
        <trans-unit id="275c592437b70b50829745c27df9dbc9dd7c466d" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;moveTo()&lt;/code&gt; to create two sub-paths within a single path. Both sub-paths are then rendered with a single &lt;code&gt;stroke()&lt;/code&gt; call.</source>
          <target state="translated">この例では、 &lt;code&gt;moveTo()&lt;/code&gt; を使用して、1つのパス内に2つのサブパスを作成します。次に、両方のサブパスが単一の &lt;code&gt;stroke()&lt;/code&gt; 呼び出しでレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="d23242c78c0373a5511d08f88fa5f2fc22f5d514" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;receiver&lt;/code&gt; to access the list of incoming connections and to build and display a list of those connections' ID strings.</source>
          <target state="translated">この例では、 &lt;code&gt;receiver&lt;/code&gt; を使用して着信接続のリストにアクセスし、それらの接続のID文字列のリストを作成して表示します。</target>
        </trans-unit>
        <trans-unit id="fb85e8d5c6ef13d9c78e808e39af48a08104383d" translate="yes" xml:space="preserve">
          <source>This example uses &lt;code&gt;whenDefined()&lt;/code&gt; to detect when the custom elements that make up a menu are defined. The menu displays placeholder content until the actual menu content is ready to display.</source>
          <target state="translated">この例では、 &lt;code&gt;whenDefined()&lt;/code&gt; を使用して、メニューを構成するカスタム要素がいつ定義されたかを検出します。実際のメニューコンテンツを表示する準備ができるまで、メニューにはプレースホルダーコンテンツが表示されます。</target>
        </trans-unit>
        <trans-unit id="6c14c8104dba731ac3813376255276822474116c" translate="yes" xml:space="preserve">
          <source>This example uses DOM methods to display all the properties of the &lt;a href=&quot;../globaleventhandlers/onload&quot;&gt;&lt;code&gt;window.onload&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../event&quot;&gt;&lt;code&gt;event&lt;/code&gt;&lt;/a&gt; object and their values in a table. It also shows a useful technique of using a for..in loop to iterate over the properties of an object to get their values.</source>
          <target state="translated">この例では、DOMメソッドを使用して、&lt;a href=&quot;../globaleventhandlers/onload&quot;&gt; &lt;code&gt;window.onload&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;event&lt;/code&gt; &lt;/a&gt;オブジェクトのすべてのプロパティとその値をテーブルに表示します。また、for..inループを使用してオブジェクトのプロパティを反復処理し、それらの値を取得する便利な手法も示しています。</target>
        </trans-unit>
        <trans-unit id="2df1eaf4665aacd5bcdd8e2d4501fd12d43f820e" translate="yes" xml:space="preserve">
          <source>This example uses an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors&quot;&gt;attribute selector&lt;/a&gt; to return a list of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Iframe&quot;&gt;&lt;code&gt;iframe&lt;/code&gt;&lt;/a&gt; elements in the document that contain an attribute named &lt;code&gt;&quot;data-src&quot;&lt;/code&gt;:</source>
          <target state="translated">この例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors&quot;&gt;属性セレクター&lt;/a&gt;を使用して、 &lt;code&gt;&quot;data-src&quot;&lt;/code&gt; という名前の属性を含むドキュメント内の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Iframe&quot;&gt; &lt;code&gt;iframe&lt;/code&gt; &lt;/a&gt;要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="53a3d01113f517f103d0de136a15926a2c09c9c9" translate="yes" xml:space="preserve">
          <source>This example uses appropriate action handlers to allow seeking in either direction through the playing media.</source>
          <target state="translated">この例では、適切なアクションハンドラを使用して、再生中のメディアを介してどちらかの方向へのシークを可能にしています。</target>
        </trans-unit>
        <trans-unit id="556e2d27b20f62c9fb536d508584edd9fd8a701a" translate="yes" xml:space="preserve">
          <source>This example uses multiple quadratic B&amp;eacute;zier curves to render a speech balloon.</source>
          <target state="translated">この例では、複数の2次ベジェ曲線を使用して吹き出しをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="e35daaca41370329cd4086cd03e361206622a609" translate="yes" xml:space="preserve">
          <source>This example uses object URLs to display image thumbnails. In addition, it displays other file information including their names and sizes.</source>
          <target state="translated">この例では、オブジェクト URL を使用して画像のサムネイルを表示しています。さらに、ファイル名やサイズなどの他のファイル情報も表示します。</target>
        </trans-unit>
        <trans-unit id="f00aed93f8c3fe2ddac589122bad34befde7d96e" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;a href=&quot;element/insertadjacenthtml&quot;&gt;&lt;code&gt;Element.insertAdjacentHTML()&lt;/code&gt;&lt;/a&gt; method to insert a new DOM &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; into the body of the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, based on XML created by serializing an &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">この例では、&lt;a href=&quot;element/insertadjacenthtml&quot;&gt; &lt;code&gt;Element.insertAdjacentHTML()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、&lt;a href=&quot;element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;オブジェクトのシリアル化によって作成されたXMLに基づいて、新しいDOM &lt;a href=&quot;node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;の本文に挿入します。</target>
        </trans-unit>
        <trans-unit id="5399e3fac54991f595b980d9bc2abb8916828539" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/paymentmethodchange&quot;&gt;paymentmethodchange&lt;/a&gt;&lt;/code&gt; event to watch for changes to the payment method selected for Apple Pay, in order to compute a discount if the user chooses to use a Visa card as their payment method.</source>
          <target state="translated">この例では、ユーザーが支払い方法としてVisaカードを使用することを選択した場合の割引を計算するために、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/paymentmethodchange&quot;&gt;paymentmethodchange&lt;/a&gt;&lt;/code&gt; イベントを使用して、Apple Payに対して選択された支払い方法の変更を監視します。</target>
        </trans-unit>
        <trans-unit id="eea05a376ee605d869026e9209a10faf893467c8" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;addColorStop&lt;/code&gt; method to add stops to a linear &lt;a href=&quot;../canvasgradient&quot;&gt;&lt;code&gt;CanvasGradient&lt;/code&gt;&lt;/a&gt; object. The gradient is then used to fill a rectangle.</source>
          <target state="translated">この例では、 &lt;code&gt;addColorStop&lt;/code&gt; メソッドを使用して、線形&lt;a href=&quot;../canvasgradient&quot;&gt; &lt;code&gt;CanvasGradient&lt;/code&gt; &lt;/a&gt;オブジェクトにストップを追加します。次に、グラデーションを使用して長方形を塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="074f3695f240a6525a7fcae413897a69db6f48ad" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;clip()&lt;/code&gt; method to create a clipping region according to the shape of a circular arc. Two rectangles are then drawn; only those parts within the clipping region are rendered.</source>
          <target state="translated">この例では、 &lt;code&gt;clip()&lt;/code&gt; メソッドを使用して、円弧の形状に従ってクリッピング領域を作成します。次に、2つの長方形が描画されます。クリッピング領域内のパーツのみがレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="23da8a470501ecece44bdb2670548d9199530fb4" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;createPattern()&lt;/code&gt; method to create a &lt;a href=&quot;../canvaspattern&quot;&gt;&lt;code&gt;CanvasPattern&lt;/code&gt;&lt;/a&gt; with a repeating source image. Once created, the pattern is assigned to the canvas context's fill style and applied to a rectangle.</source>
          <target state="translated">この例では、 &lt;code&gt;createPattern()&lt;/code&gt; メソッドを使用して、繰り返されるソース画像を持つ&lt;a href=&quot;../canvaspattern&quot;&gt; &lt;code&gt;CanvasPattern&lt;/code&gt; &lt;/a&gt;を作成します。作成されると、パターンはキャンバスコンテキストの塗りつぶしスタイルに割り当てられ、長方形に適用されます。</target>
        </trans-unit>
        <trans-unit id="17f0a36cd2a3dc71957126ab4ac97b157b1ddc89" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;direction&lt;/code&gt; property to set the text direction.</source>
          <target state="translated">この例では、 &lt;code&gt;direction&lt;/code&gt; プロパティを使用してテキストの方向を設定します。</target>
        </trans-unit>
        <trans-unit id="56d9f6d399db6ba4ee1757e756ee08e2660f13e1" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;globalAlpha&lt;/code&gt; property to draw two semi-transparent rectangles.</source>
          <target state="translated">この例では、 &lt;code&gt;globalAlpha&lt;/code&gt; プロパティを使用して、2つの半透明の四角形を描画します。</target>
        </trans-unit>
        <trans-unit id="57d97ed734e590225ac603537b30f95ce9c6c0e5" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;isPointInPath()&lt;/code&gt; method to check if a point is within the current path.</source>
          <target state="translated">この例では、 &lt;code&gt;isPointInPath()&lt;/code&gt; メソッドを使用して、ポイントが現在のパス内にあるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="dfc27b3c5ed6491da5dcefc90744ccf43218993f" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;isPointInStroke()&lt;/code&gt; method to check if a point is within the area of the current path's stroke.</source>
          <target state="translated">この例では、 &lt;code&gt;isPointInStroke()&lt;/code&gt; メソッドを使用して、ポイントが現在のパスのストロークの領域内にあるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="f0f3a6c11554503bae0e6d21ca7f4a0f0a20d6b1" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;save()&lt;/code&gt; method to save the default state and &lt;code&gt;restore()&lt;/code&gt; to restore it later, so that you are able to draw a rect with the default state later.</source>
          <target state="translated">この例では、 &lt;code&gt;save()&lt;/code&gt; メソッドを使用してデフォルトの状態を保存し、 &lt;code&gt;restore()&lt;/code&gt; を使用して後でそれを復元するため、後でデフォルトの状態で長方形を描画できます。</target>
        </trans-unit>
        <trans-unit id="df649a692e685917bdfee2cce3146085e10da125" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;setLineDash()&lt;/code&gt; method to draw a dashed line above a solid line.</source>
          <target state="translated">この例では、 &lt;code&gt;setLineDash()&lt;/code&gt; メソッドを使用して、実線の上に破線を描画します。</target>
        </trans-unit>
        <trans-unit id="bbed16638a9e630f7cb5d27ddbc62efcf5a862ea" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;shadowBlur&lt;/code&gt; property to add a blurred shadow to a rectangle. Note that shadows are only drawn if the &lt;code&gt;shadowColor&lt;/code&gt; property is set to a non-transparent value, as well.</source>
          <target state="translated">この例では、 &lt;code&gt;shadowBlur&lt;/code&gt; プロパティを使用して、ぼかした影を四角形に追加します。シャドウは、 &lt;code&gt;shadowColor&lt;/code&gt; プロパティが不透明な値に設定されている場合にのみ描画されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="90dbae0011641123702a4b02c386f44056eb0b08" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;shadowColor&lt;/code&gt; property to set the color of a shadow around a rectangle. Note that shadows are only drawn if the &lt;code&gt;shadowColor&lt;/code&gt; property is set (non-transparent) and either the &lt;a href=&quot;shadowblur&quot;&gt;&lt;code&gt;shadowBlur&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;shadowoffsetx&quot;&gt;&lt;code&gt;shadowOffsetX&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;shadowoffsety&quot;&gt;&lt;code&gt;shadowOffsetY&lt;/code&gt;&lt;/a&gt; property are non-zero.</source>
          <target state="translated">この例では、 &lt;code&gt;shadowColor&lt;/code&gt; プロパティを使用して、四角形の周りの影の色を設定します。シャドウが描画されるのは、 &lt;code&gt;shadowColor&lt;/code&gt; プロパティが設定されており（不透明）、&lt;a href=&quot;shadowblur&quot;&gt; &lt;code&gt;shadowBlur&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;shadowoffsetx&quot;&gt; &lt;code&gt;shadowOffsetX&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;shadowoffsety&quot;&gt; &lt;code&gt;shadowOffsetY&lt;/code&gt; &lt;/a&gt;プロパティのいずれかがゼロでない場合のみであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d3c5a9ba2237e8962659cb3f25e0565e0a08284e" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;shadowOffsetX&lt;/code&gt; property to apply a horizontal offset to a shadow. Note that shadows are only drawn if the &lt;code&gt;shadowColor&lt;/code&gt; property is set to a non-transparent value, as well.</source>
          <target state="translated">この例では、 &lt;code&gt;shadowOffsetX&lt;/code&gt; プロパティを使用して、水平オフセットをシャドウに適用します。シャドウは、 &lt;code&gt;shadowColor&lt;/code&gt; プロパティが不透明な値に設定されている場合にのみ描画されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5c925dab7075df76acf2491e843472503f54e243" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;shadowOffsetY&lt;/code&gt; property to apply a vertical offset to a shadow. Note that shadows are only drawn if the &lt;code&gt;shadowColor&lt;/code&gt; property is set to a non-transparent value, as well.</source>
          <target state="translated">この例では、 &lt;code&gt;shadowOffsetY&lt;/code&gt; プロパティを使用して、垂直オフセットをシャドウに適用します。シャドウは、 &lt;code&gt;shadowColor&lt;/code&gt; プロパティが不透明な値に設定されている場合にのみ描画されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="075132a7588e72494719d23a71e75786f7f4d4a2" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;textAlign&lt;/code&gt; property to align some text to the right side of the canvas.</source>
          <target state="translated">この例では、 &lt;code&gt;textAlign&lt;/code&gt; プロパティを使用して、一部のテキストをキャンバスの右側に揃えます。</target>
        </trans-unit>
        <trans-unit id="9019aae1f02c327f1eed41ac039e76fb3bbd5900" translate="yes" xml:space="preserve">
          <source>This example uses the constructor to convert an SDP offer into an &lt;code&gt;RTCSessionDescription&lt;/code&gt; object.</source>
          <target state="translated">この例では、コンストラクターを使用して、SDPオファーを &lt;code&gt;RTCSessionDescription&lt;/code&gt; オブジェクトに変換します。</target>
        </trans-unit>
        <trans-unit id="98cdb8cffcd940f36d30f4d57c6485178c478a1a" translate="yes" xml:space="preserve">
          <source>This example uses two convenience functions that should be looked at briefly to help make the rest of the code more clear.</source>
          <target state="translated">この例では、コードの残りの部分をより明確にするために、簡単に見ておくべき2つの便利な関数を使用しています。</target>
        </trans-unit>
        <trans-unit id="1e31024f6723a36f481ddbeda48b7caeea7c1f4c" translate="yes" xml:space="preserve">
          <source>This example watches for changes to the user's connection.</source>
          <target state="translated">この例では、ユーザーの接続の変更を監視します。</target>
        </trans-unit>
        <trans-unit id="53d54059dfde7b597d96842af0e21982f9ad8ece" translate="yes" xml:space="preserve">
          <source>This example will create a custom &lt;code&gt;WebGLBox&lt;/code&gt; object that will draw a box on the screen.</source>
          <target state="translated">この例では、画面上にボックスを描画するカスタム &lt;code&gt;WebGLBox&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="59ecfa49a89ec9130b5b490c56c40cf1beea45aa" translate="yes" xml:space="preserve">
          <source>This example will create a random number of tasks (between 100 and 200 of them). To do so, we use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random?document_saved=true#Getting_a_random_integer_between_two_values_inclusive&quot;&gt;&lt;code&gt;getRandomIntInclusive()&lt;/code&gt; function&lt;/a&gt; that's provided as an example in the documentation for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random&quot;&gt;&lt;code&gt;Math.random()&lt;/code&gt;&lt;/a&gt; to get the number of tasks to create.</source>
          <target state="translated">この例では、ランダムな数のタスク（100から200の間）を作成します。そうするために、我々は、使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random?document_saved=true#Getting_a_random_integer_between_two_values_inclusive&quot;&gt; &lt;code&gt;getRandomIntInclusive()&lt;/code&gt; 関数&lt;/a&gt;のドキュメントに例として提供されます&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random&quot;&gt; &lt;code&gt;Math.random()&lt;/code&gt; を&lt;/a&gt;作成するタスクの数を取得します。</target>
        </trans-unit>
        <trans-unit id="50ba7e550cd8eb89ca61d5e6684b995ce3bf4ac9" translate="yes" xml:space="preserve">
          <source>This example will listen for audio data to be loaded for the element `example`. It will then check if at least the current playback position has been loaded. If it has, the audio will play.</source>
          <target state="translated">この例では、要素 `example` に対してオーディオデータが読み込まれるかどうかをリスンする。そして、少なくとも現在の再生位置が読み込まれているかどうかをチェックします。読み込まれていれば、音声が再生されます。</target>
        </trans-unit>
        <trans-unit id="a6b7b2caaea57fbd1e4142f69c1b054f2b0aaaaf" translate="yes" xml:space="preserve">
          <source>This example will listen for the audio element to begin playing and then check if it is still loading data.</source>
          <target state="translated">この例では、オーディオ要素が再生を開始するのを待ち、データを読み込んでいるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="f94eb28f79a93099c050d9f3326992ad38ecf938" translate="yes" xml:space="preserve">
          <source>This example writes the words &quot;Hello world&quot; using the &lt;code&gt;fillText()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;fillText()&lt;/code&gt; メソッドを使用して「Hello world」という単語を書き込みます。</target>
        </trans-unit>
        <trans-unit id="d57053376a1920c5ce556881fda3d233d2363a84" translate="yes" xml:space="preserve">
          <source>This example writes the words &quot;Hello world&quot; using the &lt;code&gt;strokeText()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;strokeText()&lt;/code&gt; メソッドを使用して「Hello world」という単語を記述しています。</target>
        </trans-unit>
        <trans-unit id="8028859ef01987fd9b28e79194785e68da27568a" translate="yes" xml:space="preserve">
          <source>This example writes the words &quot;Hello world,&quot; restricting its width to 140 pixels.</source>
          <target state="translated">この例では、「Hello world」という文字を書き、幅を140ピクセルに制限しています。</target>
        </trans-unit>
        <trans-unit id="c8c83a105c22598378015ccc3c6a9119ab62dd6f" translate="yes" xml:space="preserve">
          <source>This example's output is shown below.</source>
          <target state="translated">この例の出力は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="88264897bf054ce39e0674bdc8efae69f1faeb93" translate="yes" xml:space="preserve">
          <source>This example's server uses stringified JSON objects to communicate with its clients. This means our signaling messages will be in JSON format, with contents which specify what kind of messages they are as well as any additional information needed in order to handle the messages properly.</source>
          <target state="translated">この例のサーバは、クライアントとの通信に文字列化された JSON オブジェクトを使用します。これは、シグナリングメッセージが JSON 形式で、メッセージの種類やメッセージを適切に処理するために必要な追加情報を指定する内容を持つことを意味します。</target>
        </trans-unit>
        <trans-unit id="82b9d7e5a087f4348159f29ebab0c7e59fe291f6" translate="yes" xml:space="preserve">
          <source>This example, derived from the example in &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;, establishes a handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; events to handle creating an offer, configuring the local end of the connection, and sending the offer to the remote peer.</source>
          <target state="translated">この例は、「&lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;シグナリングとビデオ通話」の&lt;/a&gt;例から派生しており、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを確立して、オファーの作成、接続のローカルエンドの構成、リモートピアへのオファーの送信を処理します。</target>
        </trans-unit>
        <trans-unit id="5904794e52edab36ff8f3f19c492b9ee72a331a7" translate="yes" xml:space="preserve">
          <source>This example, taken from the &lt;a href=&quot;https://github.com/WICG/ViewportAPI&quot;&gt;Visual Viewport README&lt;/a&gt;, shows how to use this API to simulate &lt;code&gt;position: device-fixed&lt;/code&gt;, which fixes elements to the visual viewport. A &lt;a href=&quot;https://wicg.github.io/visual-viewport/examples/fixed-to-viewport.html&quot;&gt;live sample&lt;/a&gt; is also available.</source>
          <target state="translated">この例は、&lt;a href=&quot;https://github.com/WICG/ViewportAPI&quot;&gt;ビジュアルビューポートのREADME&lt;/a&gt;から抜粋したもので、このAPIを使用して &lt;code&gt;position: device-fixed&lt;/code&gt; をシミュレートする方法を示しています。&lt;a href=&quot;https://wicg.github.io/visual-viewport/examples/fixed-to-viewport.html&quot;&gt;ライブサンプル&lt;/a&gt;も用意されています。</target>
        </trans-unit>
        <trans-unit id="a53877b6ce81e315b49a7ecd4d7e80fa05b893be" translate="yes" xml:space="preserve">
          <source>This example, taken from the code for the article &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;, connects the incoming track to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element which will be used to display the incoming video.</source>
          <target state="translated">この例は、記事&lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;のコードから取られており、着信トラックを、着信ビデオの表示に使用される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素に接続します。</target>
        </trans-unit>
        <trans-unit id="726f019d6a721bc809335fee1d26acd8b7b0c086" translate="yes" xml:space="preserve">
          <source>This example, which uses PHP on the server side and JavaScript on the client side, demonstrates asynchronous uploading of a file.</source>
          <target state="translated">この例では、サーバー側で PHP を使用し、クライアント側で JavaScript を使用して、ファイルの非同期アップロードを実演しています。</target>
        </trans-unit>
        <trans-unit id="d4337e73ca702c395ac58349af2a98601e451a6c" translate="yes" xml:space="preserve">
          <source>This exception may be passed into the rejection handler for the promise:</source>
          <target state="translated">この例外は、プロミスの拒否ハンドラに渡されることがあります。</target>
        </trans-unit>
        <trans-unit id="36c6ca82fe3c05d27a107f524ff35a59d17fc06c" translate="yes" xml:space="preserve">
          <source>This extension adds a new constant:</source>
          <target state="translated">この拡張機能は新しい定数を追加します。</target>
        </trans-unit>
        <trans-unit id="7a3fdaffaee4c2b37db618314b6daf9610e45e66" translate="yes" xml:space="preserve">
          <source>This extension adds two new constants, which can be used in &lt;a href=&quot;webglrenderingcontext/blendequation&quot;&gt;&lt;code&gt;WebGLRenderingContext.blendEquation()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/blendequationseparate&quot;&gt;&lt;code&gt;WebGLRenderingContext.blendEquationSeparate()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/blendequation&quot;&gt; &lt;code&gt;WebGLRenderingContext.blendEquation()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;webglrenderingcontext/blendequationseparate&quot;&gt; &lt;code&gt;WebGLRenderingContext.blendEquationSeparate()&lt;/code&gt; &lt;/a&gt;で使用できる2つの新しい定数を追加します。</target>
        </trans-unit>
        <trans-unit id="3a1b1eff3dd4f2f38bed1da102db09ed94b6ff8d" translate="yes" xml:space="preserve">
          <source>This extension exposes a new type:</source>
          <target state="translated">この拡張機能は新しい型を公開します。</target>
        </trans-unit>
        <trans-unit id="736469b0ac2d6a685779b30133893445237542d0" translate="yes" xml:space="preserve">
          <source>This extension exposes eight new methods.</source>
          <target state="translated">この拡張機能では、8つの新しいメソッドが公開されています。</target>
        </trans-unit>
        <trans-unit id="a7ad8d702900997a8f0cb10a45ed6d4ac765e562" translate="yes" xml:space="preserve">
          <source>This extension exposes four new methods.</source>
          <target state="translated">この拡張機能では、4つの新しいメソッドが公開されています。</target>
        </trans-unit>
        <trans-unit id="efe45f55f1b3b2b916fc12aad549fff1f7da3953" translate="yes" xml:space="preserve">
          <source>This extension exposes new constants, which can be used in the &lt;a href=&quot;webglrenderingcontext/framebufferrenderbuffer&quot;&gt;&lt;code&gt;gl.framebufferRenderbuffer()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;webglrenderingcontext/framebuffertexture2d&quot;&gt;&lt;code&gt;gl.framebufferTexture2D()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;webglrenderingcontext/getframebufferattachmentparameter&quot;&gt;&lt;code&gt;gl.getFramebufferAttachmentParameter()&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;webgl_draw_buffers/drawbufferswebgl&quot;&gt;&lt;code&gt;ext.drawBuffersWEBGL()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;webglrenderingcontext/getparameter&quot;&gt;&lt;code&gt;gl.getParameter()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/framebufferrenderbuffer&quot;&gt; &lt;code&gt;gl.framebufferRenderbuffer()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;webglrenderingcontext/framebuffertexture2d&quot;&gt; &lt;code&gt;gl.framebufferTexture2D()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;webglrenderingcontext/getframebufferattachmentparameter&quot;&gt; &lt;code&gt;gl.getFramebufferAttachmentParameter()&lt;/code&gt; 、&lt;/a&gt;&lt;a href=&quot;webgl_draw_buffers/drawbufferswebgl&quot;&gt; &lt;code&gt;ext.drawBuffersWEBGL()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;webglrenderingcontext/getparameter&quot;&gt; &lt;code&gt;gl.getParameter()&lt;/code&gt; &lt;/a&gt;メソッドで使用できる新しい定数を公開します。</target>
        </trans-unit>
        <trans-unit id="45ed448ffee21c315a9b783b4041aa2cfb71b89c" translate="yes" xml:space="preserve">
          <source>This extension exposes one new constant, which can be used in the &lt;a href=&quot;webglrenderingcontext/getparameter&quot;&gt;&lt;code&gt;gl.getParameter()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/getparameter&quot;&gt; &lt;code&gt;gl.getParameter()&lt;/code&gt; &lt;/a&gt;メソッドで使用できる1つの新しい定数を公開します。</target>
        </trans-unit>
        <trans-unit id="c140b690d846d525caabdc2539197fb20f5e30ee" translate="yes" xml:space="preserve">
          <source>This extension exposes one new constant, which can be used in the &lt;a href=&quot;webglrenderingcontext/getvertexattrib&quot;&gt;&lt;code&gt;gl.getVertexAttrib()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/getvertexattrib&quot;&gt; &lt;code&gt;gl.getVertexAttrib()&lt;/code&gt; &lt;/a&gt;メソッドで使用できる1つの新しい定数を公開します。</target>
        </trans-unit>
        <trans-unit id="a2f5da8aeb1291e7daf2d3cf8c5557c9f57a7b72" translate="yes" xml:space="preserve">
          <source>This extension exposes one new constant, which can be used in the &lt;a href=&quot;webglrenderingcontext/hint&quot;&gt;&lt;code&gt;hint()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/getparameter&quot;&gt;&lt;code&gt;getParameter()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/hint&quot;&gt; &lt;code&gt;hint()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;webglrenderingcontext/getparameter&quot;&gt; &lt;code&gt;getParameter()&lt;/code&gt; &lt;/a&gt;メソッドで使用できる1つの新しい定数を公開します。</target>
        </trans-unit>
        <trans-unit id="f2d509f53c3e31f248941ca28bd363938e02b173" translate="yes" xml:space="preserve">
          <source>This extension exposes one new method.</source>
          <target state="translated">この拡張機能では、1つの新しいメソッドを公開しています。</target>
        </trans-unit>
        <trans-unit id="24044369f03697c88644f1663070c8ee7874e477" translate="yes" xml:space="preserve">
          <source>This extension exposes one new methods.</source>
          <target state="translated">この拡張機能では、1つの新しいメソッドが公開されています。</target>
        </trans-unit>
        <trans-unit id="f96a55cd1eea2d5ab4251b6138f722adcb1bcd6f" translate="yes" xml:space="preserve">
          <source>This extension exposes seven new constants.</source>
          <target state="translated">この拡張機能では、7つの新しい定数が公開されます。</target>
        </trans-unit>
        <trans-unit id="0e767fc11ec30e4b4cd964fc9ec9246667c6713f" translate="yes" xml:space="preserve">
          <source>This extension exposes the following constants, which can be used in the &lt;a href=&quot;webglrenderingcontext/teximage2d&quot;&gt;&lt;code&gt;texImage2D()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;webglrenderingcontext/texsubimage2d&quot;&gt;&lt;code&gt;texSubImage2D()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;webglrenderingcontext/renderbufferstorage&quot;&gt;&lt;code&gt;renderbufferStorage()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/getframebufferattachmentparameter&quot;&gt;&lt;code&gt;getFramebufferAttachmentParameter()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/teximage2d&quot;&gt; &lt;code&gt;texImage2D()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;webglrenderingcontext/texsubimage2d&quot;&gt; &lt;code&gt;texSubImage2D()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;webglrenderingcontext/renderbufferstorage&quot;&gt; &lt;code&gt;renderbufferStorage()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;webglrenderingcontext/getframebufferattachmentparameter&quot;&gt; &lt;code&gt;getFramebufferAttachmentParameter()&lt;/code&gt; &lt;/a&gt;メソッドで使用できる次の定数を公開します。</target>
        </trans-unit>
        <trans-unit id="4ad09093c7cdff0bae7789442517f78fb378b653" translate="yes" xml:space="preserve">
          <source>This extension exposes three new methods.</source>
          <target state="translated">この拡張機能では、3つの新しいメソッドが公開されています。</target>
        </trans-unit>
        <trans-unit id="7c71bf900b8d3fafc292c70e0c75eadc03746102" translate="yes" xml:space="preserve">
          <source>This extension extends &lt;a href=&quot;webglrenderingcontext/drawelements&quot;&gt;&lt;code&gt;WebGLRenderingContext.drawElements()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この拡張機能は&lt;a href=&quot;webglrenderingcontext/drawelements&quot;&gt; &lt;code&gt;WebGLRenderingContext.drawElements()&lt;/code&gt; を&lt;/a&gt;拡張します。</target>
        </trans-unit>
        <trans-unit id="0e6175665efabca3bfcea91bd68620e2eb1b7fed" translate="yes" xml:space="preserve">
          <source>This extension extends &lt;a href=&quot;webglrenderingcontext/framebuffertexture2d&quot;&gt;&lt;code&gt;WebGLRenderingContext.framebufferTexture2D()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/framebuffertexture2d&quot;&gt; &lt;code&gt;WebGLRenderingContext.framebufferTexture2D()&lt;/code&gt; を&lt;/a&gt;拡張します。</target>
        </trans-unit>
        <trans-unit id="153304b39eb1968128679254928bb192c8985462" translate="yes" xml:space="preserve">
          <source>This extension extends &lt;a href=&quot;webglrenderingcontext/renderbufferstorage&quot;&gt;&lt;code&gt;WebGLRenderingContext.renderbufferStorage()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この拡張機能は&lt;a href=&quot;webglrenderingcontext/renderbufferstorage&quot;&gt; &lt;code&gt;WebGLRenderingContext.renderbufferStorage()&lt;/code&gt; を&lt;/a&gt;拡張します。</target>
        </trans-unit>
        <trans-unit id="0f583c3ff2b749b0cb22a0c3d8b82c4dc0e879a3" translate="yes" xml:space="preserve">
          <source>This extension extends &lt;a href=&quot;webglrenderingcontext/teximage2d&quot;&gt;&lt;code&gt;WebGLRenderingContext.texImage2D()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/texsubimage2d&quot;&gt;&lt;code&gt;WebGLRenderingContext.texSubImage2D()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/teximage2d&quot;&gt; &lt;code&gt;WebGLRenderingContext.texImage2D()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;webglrenderingcontext/texsubimage2d&quot;&gt; &lt;code&gt;WebGLRenderingContext.texSubImage2D()&lt;/code&gt; を&lt;/a&gt;拡張します。</target>
        </trans-unit>
        <trans-unit id="3aed4b4254859afca99858d0a7939d5115c05042" translate="yes" xml:space="preserve">
          <source>This extension extends &lt;a href=&quot;webglrenderingcontext/teximage2d&quot;&gt;&lt;code&gt;WebGLRenderingContext.texImage2D()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext/teximage2d&quot;&gt; &lt;code&gt;WebGLRenderingContext.texImage2D()&lt;/code&gt; を&lt;/a&gt;拡張します。</target>
        </trans-unit>
        <trans-unit id="1cdba30764bb00d7cf78f830fab87b10d463600d" translate="yes" xml:space="preserve">
          <source>This extension implicitly enables the &lt;a href=&quot;ext_color_buffer_half_float&quot;&gt;&lt;code&gt;EXT_color_buffer_half_float&lt;/code&gt;&lt;/a&gt; extension (if supported), which allows rendering to 16-bit floating point formats.</source>
          <target state="translated">この拡張機能は暗黙的に&lt;a href=&quot;ext_color_buffer_half_float&quot;&gt; &lt;code&gt;EXT_color_buffer_half_float&lt;/code&gt; &lt;/a&gt;拡張機能（サポートされている場合）を有効にします。これにより、16ビット浮動小数点形式へのレンダリングが可能になります。</target>
        </trans-unit>
        <trans-unit id="39cfb4cd403ecf5a488ea7518c5d7d5ec5209eed" translate="yes" xml:space="preserve">
          <source>This extension is available to both, &lt;a href=&quot;webglrenderingcontext&quot;&gt;WebGL1&lt;/a&gt; and &lt;a href=&quot;webgl2renderingcontext&quot;&gt;WebGL2&lt;/a&gt; contexts.</source>
          <target state="translated">この拡張機能は、&lt;a href=&quot;webglrenderingcontext&quot;&gt;WebGL1&lt;/a&gt;と&lt;a href=&quot;webgl2renderingcontext&quot;&gt;WebGL2の&lt;/a&gt;両方のコンテキストで使用できます。</target>
        </trans-unit>
        <trans-unit id="92fdbe06ca27ec00ba01413c5556dc366ccdf3ba" translate="yes" xml:space="preserve">
          <source>This extension is not directly available to web sites as the way of how the shader is translated may uncover personally-identifiable information to the web page about the kind of graphics card in the user's computer.</source>
          <target state="translated">この拡張機能は、シェーダがどのように翻訳されるかによって、ユーザーのコンピュータに搭載されているグラフィックカードの種類など、個人を特定できる情報がウェブページに暴かれる可能性があるため、ウェブサイトで直接利用することはできません。</target>
        </trans-unit>
        <trans-unit id="506a5702bf2dd57cc8af2fc1317266a1fa391823" translate="yes" xml:space="preserve">
          <source>This extension was named &lt;code&gt;WEBGL_compressed_texture_es3&lt;/code&gt; from Firefox 46 to Firefox 51 and used to be available on the WebGL 2 context by default &amp;ndash; this is not the case anymore. You have to enable it on both, WebGL 1 and WebGL 2 contexts, in order to use it.</source>
          <target state="translated">この拡張機能は、Firefox 46からFirefox 51まで &lt;code&gt;WEBGL_compressed_texture_es3&lt;/code&gt; という名前で、デフォルトでWebGL 2コンテキストで使用可能でしたが、これはもう当てはまりません。これを使用するには、WebGL 1とWebGL 2の両方のコンテキストで有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="076a6ed76706c6e073ba78e044f9567f1c134f1b" translate="yes" xml:space="preserve">
          <source>This feature can be used to drag files from a user's &lt;em&gt;desktop&lt;/em&gt; to the browser.</source>
          <target state="translated">この機能を使用して、ユーザーの&lt;em&gt;デスクトップ&lt;/em&gt;からブラウザにファイルをドラッグできます。</target>
        </trans-unit>
        <trans-unit id="60964c2acb63a5e80056aab53d36efc81e0dae97" translate="yes" xml:space="preserve">
          <source>This feature has been removed from the Web standards. Though some browsers may still support it, it is in the process of being dropped. Avoid using it and update existing code if possible; see the &lt;a href=&quot;#Browser_compatibility&quot;&gt;compatibility table&lt;/a&gt; at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</source>
          <target state="translated">この機能はWeb標準から削除されました。一部のブラウザーではまだサポートされている可能性がありますが、削除される途中です。使用を避け、可能であれば既存のコードを更新してください。このページの下部にある&lt;a href=&quot;#Browser_compatibility&quot;&gt;互換性の表&lt;/a&gt;を参照して、決定を行ってください。この機能はいつでも機能しなくなる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="04e8879adf91055abe755b306ecdfa7377e41ed0" translate="yes" xml:space="preserve">
          <source>This feature is available only in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts&quot;&gt;secure contexts&lt;/a&gt; (HTTPS), in some or all &lt;a href=&quot;#Browser_compatibility&quot;&gt;supporting browsers&lt;/a&gt;.</source>
          <target state="translated">この機能は、&lt;a href=&quot;#Browser_compatibility&quot;&gt;サポートされているブラウザの&lt;/a&gt;一部またはすべてで、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts&quot;&gt;セキュアコンテキスト&lt;/a&gt;（HTTPS）でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="a428aa8ce9ae59bceb7bc595d5d19bd0776631f9" translate="yes" xml:space="preserve">
          <source>This feature is no longer defined in any specifications.</source>
          <target state="translated">この機能は、もはやどのような仕様でも定義されていません。</target>
        </trans-unit>
        <trans-unit id="17fdac85d6009334c365dfdd6eb6bef5e4374b26" translate="yes" xml:space="preserve">
          <source>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the &lt;a href=&quot;#Browser_compatibility&quot;&gt;compatibility table&lt;/a&gt; at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</source>
          <target state="translated">この機能は推奨されなくなりました。一部のブラウザーはまだそれをサポートしている可能性がありますが、関連するWeb標準から既に削除されているか、削除中か、互換性を保つ目的でのみ保持されている可能性があります。使用を避け、可能であれば既存のコードを更新してください。このページの下部にある&lt;a href=&quot;#Browser_compatibility&quot;&gt;互換性の表&lt;/a&gt;を参照して、決定を行ってください。この機能はいつでも機能しなくなる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ad63cac1625affd2a84d66756a720def351fb2b3" translate="yes" xml:space="preserve">
          <source>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</source>
          <target state="translated">この機能は非標準であり、標準化されていません。Webに面した本番サイトでは使用しないでください:すべてのユーザーに対して動作するわけではありません。また、実装間に大きな非互換性があるかもしれませんし、将来的に動作が変わるかもしれません。</target>
        </trans-unit>
        <trans-unit id="59314e7aec66910164f6914bdc2ab1c6bad7e1f6" translate="yes" xml:space="preserve">
          <source>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</source>
          <target state="translated">この機能は廃止されました。一部のブラウザではまだ動作するかもしれませんが、いつでも削除される可能性があるため、使用はお勧めしません。使用しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="413a8926a39a8da25c349eac4c40101c9651d5ae" translate="yes" xml:space="preserve">
          <source>This feature is present in HTML 5.2, but has since been removed from the WHATWG HTML Living Standard.</source>
          <target state="translated">この機能は HTML 5.2 に存在しますが、その後 WHATWG HTML Living Standard から削除されました。</target>
        </trans-unit>
        <trans-unit id="f74e167b62034700aebe8863e5582d9eac0991ae" translate="yes" xml:space="preserve">
          <source>This feature no longer works in MSIE 6 SP2 the way it worked in MSIE 5.x. The Windows taskbar, as well as the titlebar and the status bar of the window are not visible, nor accessible when fullscreen is enabled in MSIE 5.x.</source>
          <target state="translated">この機能は、MSIE 6 SP2 では、MSIE 5.x で動作していた方法では動作しなくなりました。MSIE 5.x でフルスクリーンが有効になっている場合、Windows タスクバー、タイトルバー、ウィンドウのステータスバーが表示されず、アクセスもできません。</target>
        </trans-unit>
        <trans-unit id="94adcbb52827d4a81480f5ca51658da1aeaac4f5" translate="yes" xml:space="preserve">
          <source>This feature was originally introduced by Internet Explorer, and was formally specified in the HTML standard in 2016 after being adopted by all major browser vendors.</source>
          <target state="translated">この機能はもともとInternet Explorerで導入されていたもので、主要なブラウザベンダーで採用された後、2016年にHTML標準で正式に規定されました。</target>
        </trans-unit>
        <trans-unit id="3f2a8f5d24ae997bf9c4b8d8e110671d11317266" translate="yes" xml:space="preserve">
          <source>This fetch event tries to return a response from the cache API, falling back to the network otherwise.</source>
          <target state="translated">このフェッチイベントは、キャッシュ API からのレスポンスを返そうとし、そうでなければネットワークにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="c842dfe1f10a0479fdd4c05215697fa75f08caf1" translate="yes" xml:space="preserve">
          <source>This fetch event uses the browser default for non-GET requests. For GET requests it tries to return a match in the cache, and falls back to the network. If it finds a match in the cache, it asynchronously updates the cache for next time.</source>
          <target state="translated">このフェッチイベントは、GET 以外のリクエストにはブラウザのデフォルトを使用します。GET リクエストに対しては、キャッシュにマッチするものを返そうとし、ネットワークにフォールバックします。キャッシュにマッチするものが見つかった場合は、次回のために非同期的にキャッシュを更新します。</target>
        </trans-unit>
        <trans-unit id="1a2d620053e1d726c957a303d8e3ba47494e6929" translate="yes" xml:space="preserve">
          <source>This fetches the list of &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; objects representing the items dropped from &lt;code&gt;event.dataTransfer.items&lt;/code&gt;. Then we call &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;Event.preventDefault()&lt;/code&gt;&lt;/a&gt; to prevent the event from being handled further after we're done.</source>
          <target state="translated">これは、 &lt;code&gt;event.dataTransfer.items&lt;/code&gt; からドロップされたアイテムを表す&lt;a href=&quot;../datatransferitem&quot;&gt; &lt;code&gt;DataTransferItem&lt;/code&gt; &lt;/a&gt;オブジェクトのリストをフェッチします。次に、&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;Event.preventDefault()&lt;/code&gt; &lt;/a&gt;を呼び出して、終了後にイベントが処理されないようにします。</target>
        </trans-unit>
        <trans-unit id="3e7d0c9fdd366029e14832fe6a0be7095c9596da" translate="yes" xml:space="preserve">
          <source>This first example gets the first audio track on the media:</source>
          <target state="translated">この最初の例は、メディア上の最初のオーディオトラックを取得します。</target>
        </trans-unit>
        <trans-unit id="f2ac70589b8e37eb4689dc5503aaa39fc6a715f7" translate="yes" xml:space="preserve">
          <source>This first example gets the first video track on the media:</source>
          <target state="translated">この最初の例は、メディア上の最初のビデオトラックを取得します。</target>
        </trans-unit>
        <trans-unit id="a2079646f5aa37fa8b44eb9f8efd8f559d447e90" translate="yes" xml:space="preserve">
          <source>This first example is just a snippet showing an implementation of the event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/shippingaddresschange&quot;&gt;shippingaddresschange&lt;/a&gt;&lt;/code&gt; event which checks to be sure the chosen address is located within one of a limited number of countries.</source>
          <target state="translated">この最初の例は、選択した住所が限られた数の国の1つにあることを確認する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/shippingaddresschange&quot;&gt;shippingaddresschange&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラーの実装を示すスニペットにすぎません。</target>
        </trans-unit>
        <trans-unit id="410a5a9baba19a0a314937aebc8f282340bb3317" translate="yes" xml:space="preserve">
          <source>This following JavaScript will display an alert when the document is loaded (and when the whole DOM is available for use):</source>
          <target state="translated">以下のJavaScriptは、ドキュメントが読み込まれたとき(およびDOM全体が利用可能なとき)にアラートを表示します。</target>
        </trans-unit>
        <trans-unit id="2107044b1ac8b01b17f39dbfd8e748280e7487fa" translate="yes" xml:space="preserve">
          <source>This forces the browser to do extra calculations to create the anti-aliasing effect. To avoid this, make sure to round all co-ordinates used in calls to &lt;a href=&quot;../../canvasrenderingcontext2d/drawimage&quot;&gt;&lt;code&gt;drawImage()&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt;&lt;code&gt;Math.floor()&lt;/code&gt;&lt;/a&gt;, for example.</source>
          <target state="translated">これにより、ブラウザは追加の計算を行い、アンチエイリアス効果を作成します。これを回避するには、たとえば&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt; &lt;code&gt;Math.floor()&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;../../canvasrenderingcontext2d/drawimage&quot;&gt; &lt;code&gt;drawImage()&lt;/code&gt; の&lt;/a&gt;呼び出しで使用されるすべての座標を丸めるようにしてください。</target>
        </trans-unit>
        <trans-unit id="87220e9f426efcda8e97f49326a35ccf395ec863" translate="yes" xml:space="preserve">
          <source>This format is very common for storing and playing back audio without much processing, for example a decoded MP3 stream.</source>
          <target state="translated">このフォーマットは、例えばデコードされたMP3ストリームなど、多くの処理をせずにオーディオを保存して再生するための非常に一般的なものです。</target>
        </trans-unit>
        <trans-unit id="81204590571ab110ec466d8eb2c1cf77f607703b" translate="yes" xml:space="preserve">
          <source>This function &lt;code&gt;clickCircle()&lt;/code&gt; is called when the circle is clicked. It randomly increases or decreases the radius of the circle element.</source>
          <target state="translated">この関数 &lt;code&gt;clickCircle()&lt;/code&gt; は、円がクリックされたときに呼び出されます。円要素の半径をランダムに増減します。</target>
        </trans-unit>
        <trans-unit id="b23c2e99f9fd8fb5bfadc72ee813740480a4da92" translate="yes" xml:space="preserve">
          <source>This function accepts a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; and a string indicating the camera facing mode to use, fetches the current constraints, sets the value of the &lt;a href=&quot;../mediatrackconstraints/facingmode&quot;&gt;&lt;code&gt;MediaTrackConstraints.facingMode&lt;/code&gt;&lt;/a&gt; to the specified value, then applies the updated constraint set.</source>
          <target state="translated">この関数は、&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;と、使用するカメラの向きモードを示す文字列を受け取り、現在の制約をフェッチし、&lt;a href=&quot;../mediatrackconstraints/facingmode&quot;&gt; &lt;code&gt;MediaTrackConstraints.facingMode&lt;/code&gt; &lt;/a&gt;の値を指定した値に設定してから、更新された制約セットを適用します。</target>
        </trans-unit>
        <trans-unit id="8798a6d304be56d5a98552b839c815c5a36eea9b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;file()&lt;/code&gt;, specifying as its success callback a method which proceeds to use a &lt;a href=&quot;../filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; to read the file as text. The FileReader's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler is set up to deliver the loaded string to the &lt;code&gt;successCallback&lt;/code&gt; specified when the &lt;code&gt;readFile()&lt;/code&gt; method was called; similarly, its &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; handler is set up to call the &lt;code&gt;errorCallback&lt;/code&gt; specified.</source>
          <target state="translated">この関数は &lt;code&gt;file()&lt;/code&gt; を呼び出し、成功コールバックとして&lt;a href=&quot;../filereader&quot;&gt; &lt;code&gt;FileReader&lt;/code&gt; &lt;/a&gt;を使用してファイルをテキストとして読み取るメソッドを指定します。FileReaderの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントハンドラーは、読み込まれた文字列を &lt;code&gt;readFile()&lt;/code&gt; メソッドが呼び出されたときに指定された &lt;code&gt;successCallback&lt;/code&gt; に配信するように設定されています。同様に、その &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; ハンドラーは、指定された &lt;code&gt;errorCallback&lt;/code&gt; を呼び出すように設定されています。</target>
        </trans-unit>
        <trans-unit id="26f964baf23e7cd18dafeef2f4ede3b94d8f41f5" translate="yes" xml:space="preserve">
          <source>This function checks the pointLockElement property to see if it is our canvas. If so, it attached an event listener to handle the mouse movements with the &lt;code&gt;updatePosition()&lt;/code&gt; function. If not, it removes the event listener again.</source>
          <target state="translated">この関数は、pointLockElementプロパティをチェックして、それがキャンバスであるかどうかを確認します。もしそうなら、それは &lt;code&gt;updatePosition()&lt;/code&gt; 関数でマウスの動きを処理するためにイベントリスナーをアタッチしました。そうでない場合は、イベントリスナーを再度削除します。</target>
        </trans-unit>
        <trans-unit id="0b1f727e1eab69b93e7d2c2c1781b84422a52108" translate="yes" xml:space="preserve">
          <source>This function checks to see if an element is in the page's body. As &lt;code&gt;contains&lt;/code&gt; is inclusive and determining if the body contains itself isn't the intention of &lt;code&gt;isInPage&lt;/code&gt; this case explicitly returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この関数は、要素がページの本文にあるかどうかを確認します。 &lt;code&gt;contains&lt;/code&gt; 含まれており、ボディ自体が含まれているかどうかを判断することの意図ではありません &lt;code&gt;isInPage&lt;/code&gt; この場合は、明示的に返す &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aac819ab2cd03b7e19872ed621792a1cff64a323" translate="yes" xml:space="preserve">
          <source>This function constructs an &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; object by passing the received SDP into its constructor, then delivers the candidate to the ICE layer by passing it into &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;myPeerConnection.addIceCandidate()&lt;/code&gt;&lt;/a&gt;. This hands the fresh ICE candidate to the local ICE layer, and finally, our role in the process of handling this candidate is complete.</source>
          <target state="translated">この関数は、受け取ったSDPをコンストラクターに渡して&lt;a href=&quot;../rtcicecandidate&quot;&gt; &lt;code&gt;RTCIceCandidate&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、候補を&lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;myPeerConnection.addIceCandidate()&lt;/code&gt; に&lt;/a&gt;渡してICEレイヤーに配信します。これにより、新しいICE候補がローカルICEレイヤーに渡され、最後に、この候補の処理プロセスにおける私たちの役割が完了します。</target>
        </trans-unit>
        <trans-unit id="f75d15b2992f1c816fee2024fab952580734544c" translate="yes" xml:space="preserve">
          <source>This function creates and returns a &lt;code&gt;MediaRecorder&lt;/code&gt; for a given &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;, configured to buffer data into an array and to watch for errors.</source>
          <target state="translated">この関数は、指定された&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; を作成して返し、データを配列にバッファリングしてエラーを監視するように構成されています。</target>
        </trans-unit>
        <trans-unit id="10a568621a16de5894094282df8d38dc9dd298f2" translate="yes" xml:space="preserve">
          <source>This function does not automatically release all &lt;code&gt;AudioContext&lt;/code&gt;-created objects, unless other references have been released as well; however, it will forcibly release any system audio resources that might prevent additional &lt;code&gt;AudioContexts&lt;/code&gt; from being created and used, suspend the progression of audio time in the audio context, and stop processing audio data. The returned &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; resolves when all &lt;code&gt;AudioContext&lt;/code&gt;-creation-blocking resources have been released. This method throws an &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt; exception if called on an &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、他の参照もリリースされていない限り、すべての &lt;code&gt;AudioContext&lt;/code&gt; 作成オブジェクトを自動的にリリースしません。ただし、追加の &lt;code&gt;AudioContexts&lt;/code&gt; 作成と使用を妨げる可能性があるシステムオーディオリソースを強制的に解放し、オーディオコンテキストでのオーディオ時間の進行を一時停止し、オーディオデータの処理を停止します。返された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;は、すべての &lt;code&gt;AudioContext&lt;/code&gt; -creation-blockingリソースが解放されると解決します。&lt;a href=&quot;../offlineaudiocontext&quot;&gt; &lt;code&gt;OfflineAudioContext&lt;/code&gt; で&lt;/a&gt;呼び出された場合、このメソッドは &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt; 例外をスローします。</target>
        </trans-unit>
        <trans-unit id="38a6e882e354c44a28681e50a77edc73dfdcb6a9" translate="yes" xml:space="preserve">
          <source>This function first uses the promise-based &lt;a href=&quot;../navigator/getvrdisplays&quot;&gt;&lt;code&gt;Navigator.getVRDisplays()&lt;/code&gt;&lt;/a&gt; method, which resolves with an array containing &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; objects representing the connected displays. Next, it prints out each display's &lt;a href=&quot;../vrdisplay/displayid&quot;&gt;&lt;code&gt;VRDisplay.displayId&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../vrdisplay/displayname&quot;&gt;&lt;code&gt;VRDisplay.displayName&lt;/code&gt;&lt;/a&gt; values, and a number of useful values contained in the display's associated &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRCapabilities&quot;&gt;&lt;code&gt;VRCapabilities&lt;/code&gt;&lt;/a&gt; object. The most useful of these are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRCapabilities/hasOrientation&quot;&gt;&lt;code&gt;hasOrientation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRCapabilities/hasPosition&quot;&gt;&lt;code&gt;hasPosition&lt;/code&gt;&lt;/a&gt;, which allow you to detect whether the device can return orientation and position data and set up your app accordingly.</source>
          <target state="translated">この関数は最初に、接続されたディスプレイを表す&lt;a href=&quot;../vrdisplay&quot;&gt; &lt;code&gt;VRDisplay&lt;/code&gt; &lt;/a&gt;オブジェクトを含む配列で解決するpromiseベースの&lt;a href=&quot;../navigator/getvrdisplays&quot;&gt; &lt;code&gt;Navigator.getVRDisplays()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。次に、各ディスプレイの&lt;a href=&quot;../vrdisplay/displayid&quot;&gt; &lt;code&gt;VRDisplay.displayId&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../vrdisplay/displayname&quot;&gt; &lt;code&gt;VRDisplay.displayName&lt;/code&gt; の&lt;/a&gt;値、およびディスプレイに関連付けられた&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRCapabilities&quot;&gt; &lt;code&gt;VRCapabilities&lt;/code&gt; &lt;/a&gt;オブジェクトに含まれるいくつかの有用な値を出力します。これらの中で最も役立つのは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRCapabilities/hasOrientation&quot;&gt; &lt;code&gt;hasOrientation&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRCapabilities/hasPosition&quot;&gt; &lt;code&gt;hasPosition&lt;/code&gt; です&lt;/a&gt;。これにより、デバイスが方向と位置のデータを返すことができるかどうかを検出し、それに応じてアプリを設定できます。</target>
        </trans-unit>
        <trans-unit id="62edecfcee75c9a428b7b43738e6ef05e02a9420" translate="yes" xml:space="preserve">
          <source>This function has no effect in the Modern UI/Metro version of Internet Explorer for Windows 8. It does not display a prompt to the user, and always returns &lt;code&gt;undefined&lt;/code&gt;. It is not clear whether this is a bug or intended behavior. Desktop versions of IE do implement this function.</source>
          <target state="translated">この関数は、Windows 8のInternet ExplorerのモダンUI /メトロバージョンでは効果がありません。ユーザーにプロンプ​​トを表示せず、常に &lt;code&gt;undefined&lt;/code&gt; を返します。これがバグなのか、意図された動作なのかは明らかではありません。IEのデスクトップバージョンには、この機能が実装されています。</target>
        </trans-unit>
        <trans-unit id="d340a73dca3cb2cebbd22449e2d17a154fce474f" translate="yes" xml:space="preserve">
          <source>This function helps manage the global event caches &lt;code&gt;evCache&lt;/code&gt;.</source>
          <target state="translated">この関数は、グローバルイベントキャッシュ &lt;code&gt;evCache&lt;/code&gt; の管理に役立ちます。</target>
        </trans-unit>
        <trans-unit id="c81f1119fd81842cd26512b2ebdf9730fbbdf929" translate="yes" xml:space="preserve">
          <source>This function is called when the play button is pressed. The play button HTML looks like this:</source>
          <target state="translated">この関数は、再生ボタンが押されたときに呼び出されます。再生ボタンのHTMLは以下のようになっています。</target>
        </trans-unit>
        <trans-unit id="30b4188caa593ace2c4820243413512f8d34d273" translate="yes" xml:space="preserve">
          <source>This function is called whenever the WebRTC infrastructure needs you to start the session negotiation process anew. Its job is to create and send an offer, to the callee, asking it to connect with us. See &lt;a href=&quot;#Starting_negotiation&quot;&gt;Starting negotiation&lt;/a&gt; to see how we handle this.</source>
          <target state="translated">この関数は、WebRTCインフラストラクチャでセッションネゴシエーションプロセスを新たに開始する必要がある場合に呼び出されます。その仕事は、オファーを作成して呼び出し先に送信し、私たちとの接続を要求することです。参照&lt;a href=&quot;#Starting_negotiation&quot;&gt;交渉を開始し&lt;/a&gt;、我々はこれを処理する方法を確認します。</target>
        </trans-unit>
        <trans-unit id="abe815b3e70b250191c60375ff611f0efa8bc8b8" translate="yes" xml:space="preserve">
          <source>This function is effectively the same as &lt;a href=&quot;scroll&quot;&gt;window.scroll()&lt;/a&gt;. For relative scrolling, see &lt;a href=&quot;scrollby&quot;&gt;window.scrollBy()&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/scrollByLines&quot;&gt;window.scrollByLines()&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/scrollByPages&quot;&gt;window.scrollByPages()&lt;/a&gt;.</source>
          <target state="translated">この関数は、実質的に&lt;a href=&quot;scroll&quot;&gt;window.scroll（）&lt;/a&gt;と同じです。相対的なスクロールについては、&lt;a href=&quot;scrollby&quot;&gt;window.scrollBy（）&lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/scrollByLines&quot;&gt;window.scrollByLines（）&lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/scrollByPages&quot;&gt;window.scrollByPages（）を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3442383ceeae226c0d69e823652a6b77cb6a6a72" translate="yes" xml:space="preserve">
          <source>This function iterates over the list of connected users until it finds one matching the specified username, then sends the message to that user. The parameter &lt;code&gt;msgString&lt;/code&gt; is a stringified JSON object. We could have made it receive our original message object, but in this example it's more efficient this way. Since the message has already been stringified, we can send it with no further processing. Each entry in &lt;code&gt;connectionArray&lt;/code&gt; is a &lt;a href=&quot;../websocket&quot;&gt;&lt;code&gt;WebSocket&lt;/code&gt;&lt;/a&gt; object, so we can just call its &lt;a href=&quot;../websocket/send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">この関数は、指定されたユーザー名に一致するユーザーが見つかるまで接続ユーザーのリストを反復処理し、メッセージをそのユーザーに送信します。パラメータ &lt;code&gt;msgString&lt;/code&gt; は文字列化されたJSONオブジェクトです。元のメッセージオブジェクトを受け取るようにすることもできますが、この例では、この方法の方が効率的です。メッセージはすでに文字列化されているため、それ以上の処理なしで送信できます。各エントリ &lt;code&gt;connectionArray&lt;/code&gt; はある&lt;a href=&quot;../websocket&quot;&gt; &lt;code&gt;WebSocket&lt;/code&gt; &lt;/a&gt;私たちはその呼び出すことができるように、オブジェクト&lt;a href=&quot;../websocket/send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;メソッドを直接。</target>
        </trans-unit>
        <trans-unit id="7565b060b835f617d1f23c03147f17ab705c5038" translate="yes" xml:space="preserve">
          <source>This function looks in our cached touch information array for the previous information about each touch to determine the starting point for each touch's new line segment to be drawn. This is done by looking at each touch's &lt;a href=&quot;../pointerevent/pointerid&quot;&gt;&lt;code&gt;PointerEvent.pointerId&lt;/code&gt;&lt;/a&gt; property. This property is a unique integer for each pointer event, and remains consistent for each event during the duration of each finger's contact with the surface.</source>
          <target state="translated">この関数は、キャッシュされたタッチ情報配列を調べて、各タッチに関する以前の情報を探し、描画する各タッチの新しいラインセグメントの開始点を決定します。これは、各タッチの&lt;a href=&quot;../pointerevent/pointerid&quot;&gt; &lt;code&gt;PointerEvent.pointerId&lt;/code&gt; &lt;/a&gt;プロパティを調べることによって行われます。このプロパティは、各ポインターイベントの一意の整数であり、各指が表面に接触している間、各イベントで一貫しています。</target>
        </trans-unit>
        <trans-unit id="1650f68512b901f371653fa0441830fe64a65fb8" translate="yes" xml:space="preserve">
          <source>This function moves the window absolutely while &lt;a href=&quot;moveby&quot;&gt;&lt;code&gt;window.moveBy&lt;/code&gt;&lt;/a&gt; moves the window relative to its current location.</source>
          <target state="translated">この関数はウィンドウを絶対に移動しますが、&lt;a href=&quot;moveby&quot;&gt; &lt;code&gt;window.moveBy&lt;/code&gt; &lt;/a&gt;はウィンドウを現在の位置に対して相対的に移動します。</target>
        </trans-unit>
        <trans-unit id="e0a4f5361543a24e50783963b97d49e6d47949e0" translate="yes" xml:space="preserve">
          <source>This function provides very basic support for 2-touch horizontal move/pinch/zoom handling. The code does not include error handling, or vertical moving. Note that the &lt;em&gt;threshold&lt;/em&gt; for pinch and zoom movement detection is application specific (and device dependent).</source>
          <target state="translated">この関数は、2タッチの水平移動/ピンチ/ズーム処理の非常に基本的なサポートを提供します。コードには、エラー処理や垂直移動は含まれていません。ピンチとズームの動きを検出するための&lt;em&gt;しきい値&lt;/em&gt;は、アプリケーション固有（およびデバイスに依存）である&lt;em&gt;ことに&lt;/em&gt;注意してください。</target>
        </trans-unit>
        <trans-unit id="de502dac988360faff86ffad0cd4122db90ec995" translate="yes" xml:space="preserve">
          <source>This function simply grabs references to all list items with a class name of &lt;code&gt;gamepad&lt;/code&gt;, and removes them from the DOM. Then it re-runs &lt;code&gt;reportGamepads()&lt;/code&gt; to populate the list with the updated list of connected controllers.</source>
          <target state="translated">この関数は、単にのクラス名を持つすべてのリスト項目への参照をつかみ &lt;code&gt;gamepad&lt;/code&gt; 、およびDOMからそれらを削除します。次に、 &lt;code&gt;reportGamepads()&lt;/code&gt; を再実行して、接続されているコントローラーの更新されたリストをリストに追加します。</target>
        </trans-unit>
        <trans-unit id="05316d0c12e663ab1f6f78975d4eda1a1420ccad" translate="yes" xml:space="preserve">
          <source>This function takes one mandatory argument &lt;code&gt;data&lt;/code&gt;, which must be an array or an object, and one additional optional parameter &lt;code&gt;columns&lt;/code&gt;.</source>
          <target state="translated">この関数は、配列またはオブジェクトである必要がある必須の引数 &lt;code&gt;data&lt;/code&gt; を1つと、オプションのパラメーター &lt;code&gt;columns&lt;/code&gt; を1つ追加します。</target>
        </trans-unit>
        <trans-unit id="9b076145bbe0a08870a7946fa94c6efd60252d11" translate="yes" xml:space="preserve">
          <source>This function toggles the first &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element found in the document into and out of full-screen mode.</source>
          <target state="translated">この関数は、ドキュメント内で最初に見つかった&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素をフルスクリーンモードに切り替えたり、フルスクリーンモードから切り替えたりします。</target>
        </trans-unit>
        <trans-unit id="19381c9063cd65e1ef8fa75e0b711465ec255bdb" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;getSettings()&lt;/code&gt; to obtain the track's currently in-use values for the constrainable properties and returns the value of &lt;a href=&quot;../mediatracksettings/facingmode&quot;&gt;&lt;code&gt;facingMode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は &lt;code&gt;getSettings()&lt;/code&gt; を使用して、トラックの現在使用されている制約可能なプロパティの値を&lt;a href=&quot;../mediatracksettings/facingmode&quot;&gt; &lt;code&gt;facingMode&lt;/code&gt; &lt;/a&gt;、facingModeの値を返します。</target>
        </trans-unit>
        <trans-unit id="18d369d3ff3f72504509fda50fa28cfe59712c64" translate="yes" xml:space="preserve">
          <source>This function, &lt;code&gt;checkPriceFormat()&lt;/code&gt;, will return &lt;code&gt;true&lt;/code&gt; if the specified price string is formatted propertly, or &lt;code&gt;false&lt;/code&gt; if it's not.</source>
          <target state="translated">この関数、 &lt;code&gt;checkPriceFormat()&lt;/code&gt; 、戻ります &lt;code&gt;true&lt;/code&gt; 指定された価格列がpropertlyフォーマットされている場合、または &lt;code&gt;false&lt;/code&gt; そうでない場合。</target>
        </trans-unit>
        <trans-unit id="a368f666e4b1231da282809b576a436d34434eb4" translate="yes" xml:space="preserve">
          <source>This functionality is at a very experimental stage and is subject to change, so we have no explored it too deeply as of yet.</source>
          <target state="translated">この機能は非常に実験的な段階にあり、変更される可能性がありますので、今のところあまり深く探求していません。</target>
        </trans-unit>
        <trans-unit id="26bbf024c6dc51ca67367c84308673970d8a676c" translate="yes" xml:space="preserve">
          <source>This gets called after the stream first starts up, as well as any time we've applied updated constraints, as you'll see below.</source>
          <target state="translated">これは、ストリームが最初に起動した後に呼び出されます。また、以下に示すように、更新された制約を適用したときにも呼び出されます。</target>
        </trans-unit>
        <trans-unit id="588a7ba848930d9c27a1cadac6c5cbb347c2a8af" translate="yes" xml:space="preserve">
          <source>This gets the &lt;a href=&quot;../mediaerror&quot;&gt;&lt;code&gt;MediaError&lt;/code&gt;&lt;/a&gt; object describing the error from the &lt;a href=&quot;../htmlmediaelement/error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; property on the &lt;a href=&quot;../htmlaudioelement&quot;&gt;&lt;code&gt;HTMLAudioElement&lt;/code&gt;&lt;/a&gt; representing the audio player. The error's &lt;a href=&quot;code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute is checked to determine a generic error message to display, and, if &lt;code&gt;message&lt;/code&gt; is not empty, it's appended to provide additional details. Then the resulting text is output to the log.</source>
          <target state="translated">これは、オーディオプレーヤーを表す&lt;a href=&quot;../htmlaudioelement&quot;&gt; &lt;code&gt;HTMLAudioElement&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;../htmlmediaelement/error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;プロパティからエラーを説明する&lt;a href=&quot;../mediaerror&quot;&gt; &lt;code&gt;MediaError&lt;/code&gt; &lt;/a&gt;オブジェクトを取得します。エラーの&lt;a href=&quot;code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性がチェックされて、表示する一般的なエラーメッセージが決定されます。 &lt;code&gt;message&lt;/code&gt; が空でない場合は、追加されて詳細が示されます。次に、結果のテキストがログに出力されます。</target>
        </trans-unit>
        <trans-unit id="18e9418d01f95907406a85c7ee176794bdd8ac1b" translate="yes" xml:space="preserve">
          <source>This getter allows the &lt;code&gt;SourceBuffer&lt;/code&gt; objects in the list to be accessed with an array operator (i.e. &lt;code&gt;[]&lt;/code&gt;.)</source>
          <target state="translated">このゲッターにより、リスト内の &lt;code&gt;SourceBuffer&lt;/code&gt; オブジェクトに配列演算子（つまり、 &lt;code&gt;[]&lt;/code&gt; ）を使用してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="22625c1267d3f6e4b4a90a494a1daa649d4c5dae" translate="yes" xml:space="preserve">
          <source>This getter allows the &lt;code&gt;TrackDefault&lt;/code&gt; objects in the list to be accessed with an array operator (i.e. &lt;code&gt;[]&lt;/code&gt;.)</source>
          <target state="translated">このゲッターを使用すると、リスト内の &lt;code&gt;TrackDefault&lt;/code&gt; オブジェクトに配列演算子（つまり &lt;code&gt;[]&lt;/code&gt; ）でアクセスできます。</target>
        </trans-unit>
        <trans-unit id="0a33ecf10b8ba49eccd907cf1bd1e9208fd5919a" translate="yes" xml:space="preserve">
          <source>This gives us a nice waveform display that updates several times a second:</source>
          <target state="translated">これにより、1秒間に数回更新されるきれいな波形表示が可能になりました。</target>
        </trans-unit>
        <trans-unit id="9378d766c5258777a5283ec96ec4039989fd0c7f" translate="yes" xml:space="preserve">
          <source>This gives us a value, &lt;code&gt;isFullscreen&lt;/code&gt;, which we pass into a function called &lt;code&gt;adjustMyControls()&lt;/code&gt;, which we imagine to be a function that makes adjustments to the app's user interface to present itself optimally when it's in full-screen mode versus being displayed in a window.</source>
          <target state="translated">これにより、値 &lt;code&gt;isFullscreen&lt;/code&gt; が得られます。この値は、adjustMyControls &lt;code&gt;adjustMyControls()&lt;/code&gt; という関数に渡されます。これは、アプリのユーザーインターフェースを調整して、フルスクリーンモードのときと、窓。</target>
        </trans-unit>
        <trans-unit id="a5dab19b1102feefa79fd54d27fd016fde7d56d4" translate="yes" xml:space="preserve">
          <source>This guide covers how you can use a peer connection and an associated &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; to exchange arbitrary data between two peers.</source>
          <target state="translated">このガイドでは、ピア接続と関連する&lt;a href=&quot;rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;を使用して2つのピア間で任意のデータを交換する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="a638499c02f0ae2b3e1ffb2275cdd2692343be53" translate="yes" xml:space="preserve">
          <source>This guide demonstrates how to use &lt;a href=&quot;../pointer_events&quot;&gt;pointer events&lt;/a&gt; and the HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element to build a multi-touch enabled drawing application. This example is based on the one in the &lt;a href=&quot;../touch_events&quot;&gt;touch events overview&lt;/a&gt;, except it uses the &lt;a href=&quot;../pointerevent&quot;&gt;pointer events&lt;/a&gt; input event model. Another difference is that because pointer events are pointer device agnostic, the application accepts coordinate-based inputs from a mouse, a pen, or a fingertip using the same code.</source>
          <target state="translated">このガイドでは、&lt;a href=&quot;../pointer_events&quot;&gt;ポインターイベント&lt;/a&gt;とHTMLの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を使用して、マルチタッチ対応の描画アプリケーションを構築する方法を示します。この例は、&lt;a href=&quot;../pointerevent&quot;&gt;ポインターイベントの&lt;/a&gt;入力イベントモデルを使用することを除いて、&lt;a href=&quot;../touch_events&quot;&gt;タッチイベントの概要の&lt;/a&gt;例に基づいています。もう1つの違いは、ポインターイベントはポインターデバイスに依存しないため、アプリケーションは同じコードを使用して、マウス、ペン、または指先からの座標ベースの入力を受け入れることです。</target>
        </trans-unit>
        <trans-unit id="bb0c42e4f4d69ac1a981c549fa6f9d4d2f65b695" translate="yes" xml:space="preserve">
          <source>This guide is about the objects and the actual &lt;em&gt;things&lt;/em&gt; you can use to manipulate the DOM hierarchy. There are many points where understanding how these work can be confusing. For example, the object representing the HTML &lt;code&gt;form&lt;/code&gt; element gets its &lt;code&gt;name&lt;/code&gt; property from the &lt;code&gt;HTMLFormElement&lt;/code&gt; interface but its &lt;code&gt;className&lt;/code&gt; property from the &lt;code&gt;HTMLElement&lt;/code&gt; interface. In both cases, the property you want is simply in that form object.</source>
          <target state="translated">このガイドは、DOM階層を操作するために使用できるオブジェクトと実際の&lt;em&gt;もの&lt;/em&gt;について記述しています。これらの動作を理解することは混乱を招く可能性がある多くの点があります。たとえば、HTML &lt;code&gt;form&lt;/code&gt; 要素を表すオブジェクトは、 &lt;code&gt;HTMLFormElement&lt;/code&gt; インターフェイスから &lt;code&gt;name&lt;/code&gt; プロパティを取得しますが、 &lt;code&gt;HTMLElement&lt;/code&gt; インターフェイスから &lt;code&gt;className&lt;/code&gt; プロパティを取得します。どちらの場合も、必要なプロパティは単にそのフォームオブジェクトにあります。</target>
        </trans-unit>
        <trans-unit id="39f908f593755b4e745b43afaec11b686d2f0f40" translate="yes" xml:space="preserve">
          <source>This handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event is called by the local WebRTC layer when a track is added to the connection. This lets you connect the incoming media to an element to display it, for example. See &lt;a href=&quot;#Receiving_new_streams&quot;&gt;Receiving new streams&lt;/a&gt; for details.</source>
          <target state="translated">この &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; イベントのハンドラーは、トラックが接続に追加されたときにローカルWebRTCレイヤーによって呼び出されます。これにより、たとえば着信メディアを要素に接続して表示することができます。詳細については、&lt;a href=&quot;#Receiving_new_streams&quot;&gt;新しいストリームの受信&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4a69cade4c4f7297edc0bec58c04c5b178f282f3" translate="yes" xml:space="preserve">
          <source>This has to be called on every frame so the rendered view is always up-to-date.</source>
          <target state="translated">これは、レンダリングされたビューを常に最新の状態に保つために、フレームごとに呼び出されなければなりません。</target>
        </trans-unit>
        <trans-unit id="aa47d261192361015f7c5dc9a4b35dc2d46dc1ac" translate="yes" xml:space="preserve">
          <source>This homogeneous coordinate represents some point at infinity. This is a handy way to represent a ray shooting off from the origin in a specific direction. In addition to a ray, it could also be thought of as a representation of a directional vector. If this homogeneous coordinate is multiplied against a matrix with a translation then the translation is effectively stripped out.</source>
          <target state="translated">この同質座標は無限大の点を表しています。これは、原点から特定の方向に飛び出す光線を表現するのに便利な方法です。線だけでなく、方向ベクトルの表現としても考えられます。この同質座標を並進行列に対して乗算すると、並進は効果的に除去されます。</target>
        </trans-unit>
        <trans-unit id="66b487eb40ff71e2ea7806eef7323d93e81682c4" translate="yes" xml:space="preserve">
          <source>This includes both elements that are descendents of the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element as well as elements that are made members of the form using their &lt;code&gt;form&lt;/code&gt; property.</source>
          <target state="translated">これには、 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 要素の子孫である要素と、 &lt;code&gt;form&lt;/code&gt; プロパティを使用してフォームのメンバーになる要素の両方が含まれます。</target>
        </trans-unit>
        <trans-unit id="e592418656a8a7ad0362a33697a898de6a2a527a" translate="yes" xml:space="preserve">
          <source>This includes field of view information, and more.</source>
          <target state="translated">視野情報などが含まれています。</target>
        </trans-unit>
        <trans-unit id="b8987e878e211c4109f36321d8e0be358087116c" translate="yes" xml:space="preserve">
          <source>This includes the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; and view and projection matricies for the current frame.</source>
          <target state="translated">これには、現在のフレームの&lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; &lt;/a&gt;およびビューと投影行列が含まれます。</target>
        </trans-unit>
        <trans-unit id="6cbea32e57e4b982eb4f60529bdcee6848255d6a" translate="yes" xml:space="preserve">
          <source>This index's &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_referenced_object_store&quot;&gt;referenced object store&lt;/a&gt;.</source>
          <target state="translated">このインデックスの&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_referenced_object_store&quot;&gt;参照先オブジェクトストア&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="021b0549425ba744fdec70877f2fa4febf61743e" translate="yes" xml:space="preserve">
          <source>This indicates that only a user-facing camera is acceptable; if there is no user-facing camera, or the user declines permission to use that camera, the media request will fail.</source>
          <target state="translated">これは、ユーザが対面するカメラのみが使用可能であることを示します。ユーザが対面するカメラがない場合や、ユーザがそのカメラの使用許可を拒否した場合、メディア要求は失敗します。</target>
        </trans-unit>
        <trans-unit id="3845ec9ffa3df27877d54b13cda1dcdc39403d88" translate="yes" xml:space="preserve">
          <source>This information is provided by the &lt;a href=&quot;../performance/navigation&quot;&gt;&lt;code&gt;Performance.navigation&lt;/code&gt;&lt;/a&gt; property, which returns a &lt;a href=&quot;../performancenavigation&quot;&gt;&lt;code&gt;PerformanceNavigation&lt;/code&gt;&lt;/a&gt; object that includes the needed information.</source>
          <target state="translated">この情報は、必要な情報を含む&lt;a href=&quot;../performancenavigation&quot;&gt; &lt;code&gt;PerformanceNavigation&lt;/code&gt; &lt;/a&gt;オブジェクトを返す&lt;a href=&quot;../performance/navigation&quot;&gt; &lt;code&gt;Performance.navigation&lt;/code&gt; &lt;/a&gt;プロパティによって提供されます。</target>
        </trans-unit>
        <trans-unit id="81af67c49bfdc8b28d73c0a81bb86442617ef3a0" translate="yes" xml:space="preserve">
          <source>This interface allows a script to access the following primitives:</source>
          <target state="translated">このインターフェイスは、スクリプトが以下のプリミティブにアクセスすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="58f704e4e856b77399b37f942705e9861ee71a02" translate="yes" xml:space="preserve">
          <source>This interface also includes a &lt;a href=&quot;../performanceentry/tojson&quot;&gt;&lt;code&gt;toJSON()&lt;/code&gt;&lt;/a&gt; method that returns the serialization of the &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; object. The following examples show the use of this method.</source>
          <target state="translated">このインターフェイスには、&lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;オブジェクトのシリアル化を返す&lt;a href=&quot;../performanceentry/tojson&quot;&gt; &lt;code&gt;toJSON()&lt;/code&gt; &lt;/a&gt;メソッドも含まれています。次の例は、このメソッドの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="16575dd301a973e3ea9fae650cca094b38f1d75b" translate="yes" xml:space="preserve">
          <source>This interface doesn't allow to manipulate the CSS it contains (in most case). To manipulate CSS, see &lt;a href=&quot;css_object_model/using_dynamic_styling_information&quot;&gt;Using dynamic styling information&lt;/a&gt; for an overview of the objects used to manipulate specified CSS properties using the DOM.</source>
          <target state="translated">このインターフェイスでは、（ほとんどの場合）含まれているCSSを操作できません。CSSを操作するには、DOMを使用して指定されたCSSプロパティを操作するために使用されるオブジェクトの概要について、&lt;a href=&quot;css_object_model/using_dynamic_styling_information&quot;&gt;動的スタイル情報の使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4109adeb622ba42fe5be2c2c731074b6865bac9c" translate="yes" xml:space="preserve">
          <source>This interface doesn't inherit any method.</source>
          <target state="translated">このインターフェイスはメソッドを継承しません。</target>
        </trans-unit>
        <trans-unit id="084c0b90c000089e9cad592b26f8e85b286b9186" translate="yes" xml:space="preserve">
          <source>This interface extends the following &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; properties for navigation performance entry types by qualifying and constraining them as follows:</source>
          <target state="translated">このインターフェイスは、以下のように修飾および制約することにより、ナビゲーションパフォーマンスエントリタイプの以下の&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;プロパティを拡張します。</target>
        </trans-unit>
        <trans-unit id="5115a31365864022837b53e77dc9cc930feed040" translate="yes" xml:space="preserve">
          <source>This interface extends the following &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; properties for resource performance entry types by qualifying and constraining them as follows:</source>
          <target state="translated">このインターフェイスは、次のように修飾および制約することにより、リソースパフォーマンスエントリタイプの以下の&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;プロパティを拡張します。</target>
        </trans-unit>
        <trans-unit id="48c667fe4cc1649517152a06200a9e58b13bec9a" translate="yes" xml:space="preserve">
          <source>This interface has no constructor.</source>
          <target state="translated">このインターフェイスにはコンストラクタがありません。</target>
        </trans-unit>
        <trans-unit id="82572a271d46f35a83e0ce5a1b6cd74728fc2c63" translate="yes" xml:space="preserve">
          <source>This interface has no methods.</source>
          <target state="translated">このインターフェイスにはメソッドがありません。</target>
        </trans-unit>
        <trans-unit id="cfa10e4e1366044b4c8479e876927f79bade725b" translate="yes" xml:space="preserve">
          <source>This interface has no properties but it extends the following &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; properties (for &quot;&lt;code&gt;frame&lt;/code&gt;&quot; &lt;a href=&quot;performanceentry/entrytype&quot;&gt;&lt;code&gt;performance entry types&lt;/code&gt;&lt;/a&gt;) by qualifying and constraining the properties as follows:</source>
          <target state="translated">このインターフェイスにはプロパティはありませんが、次のようにプロパティを修飾および制約することにより、次の&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;プロパティ（「 &lt;code&gt;frame&lt;/code&gt; 」&lt;a href=&quot;performanceentry/entrytype&quot;&gt; &lt;code&gt;performance entry types&lt;/code&gt; &lt;/a&gt;）を拡張します。</target>
        </trans-unit>
        <trans-unit id="d46a16795456173c9a12f40d28bfe795c11e844d" translate="yes" xml:space="preserve">
          <source>This interface has no properties but it extends the following &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; properties (for &quot;&lt;code&gt;paint&lt;/code&gt;&quot; &lt;a href=&quot;performanceentry/entrytype&quot;&gt;&lt;code&gt;performance entry types&lt;/code&gt;&lt;/a&gt;) by qualifying and constraining the properties as follows:</source>
          <target state="translated">このインターフェイスにはプロパティはありませんが、次のようにプロパティを修飾および制約することにより、（「 &lt;code&gt;paint&lt;/code&gt; 」&lt;a href=&quot;performanceentry/entrytype&quot;&gt; &lt;code&gt;performance entry types&lt;/code&gt; &lt;/a&gt;）次の&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;プロパティを拡張します。</target>
        </trans-unit>
        <trans-unit id="987f35f188be960b4ebbdf8755556e651c71d485" translate="yes" xml:space="preserve">
          <source>This interface has no properties but it extends the following &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; properties by qualifying/constrainting the properties as follows:</source>
          <target state="translated">このインターフェイスにはプロパティはありませんが、次のようにプロパティを修飾/制約することにより、次の&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;プロパティを拡張します。</target>
        </trans-unit>
        <trans-unit id="22e777f4ad923d7f1a22fb1387aa37117183394e" translate="yes" xml:space="preserve">
          <source>This interface includes a &lt;a href=&quot;performanceentry/tojson&quot;&gt;&lt;code&gt;toJSON()&lt;/code&gt;&lt;/a&gt; method that returns the serialization of the &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; object. The serialization is specific to the performance entry's &lt;a href=&quot;performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスには、&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;オブジェクトのシリアル化を返す&lt;a href=&quot;performanceentry/tojson&quot;&gt; &lt;code&gt;toJSON()&lt;/code&gt; &lt;/a&gt;メソッドが含まれています。シリアル化は、パフォーマンスエントリの&lt;a href=&quot;performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;固有です。</target>
        </trans-unit>
        <trans-unit id="9a2a8815f74b7a00f32224680d7712152927f3dd" translate="yes" xml:space="preserve">
          <source>This interface inherits from the &lt;a href=&quot;../extendableevent&quot;&gt;&lt;code&gt;ExtendableEvent&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このインターフェースは、&lt;a href=&quot;../extendableevent&quot;&gt; &lt;code&gt;ExtendableEvent&lt;/code&gt; &lt;/a&gt;インターフェースを継承しています。</target>
        </trans-unit>
        <trans-unit id="fdd80274d68d934692d34af057366587ee8cb65d" translate="yes" xml:space="preserve">
          <source>This interface inherits from the &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このインターフェースは、&lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;インターフェースを継承しています。</target>
        </trans-unit>
        <trans-unit id="051c703b4a5ee1db151e38f8442733a905165103" translate="yes" xml:space="preserve">
          <source>This interface inherits from the &lt;a href=&quot;extendableevent&quot;&gt;&lt;code&gt;ExtendableEvent&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このインターフェースは、&lt;a href=&quot;extendableevent&quot;&gt; &lt;code&gt;ExtendableEvent&lt;/code&gt; &lt;/a&gt;インターフェースを継承しています。</target>
        </trans-unit>
        <trans-unit id="0b3cc848c2e9d2cec33adb83008d8a22f895717c" translate="yes" xml:space="preserve">
          <source>This interface inherits from the &lt;a href=&quot;workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface, and its parent &lt;a href=&quot;eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;, and therefore implements properties from &lt;a href=&quot;windoworworkerglobalscope&quot;&gt;&lt;code&gt;WindowTimers&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;windoworworkerglobalscope&quot;&gt;&lt;code&gt;WindowBase64&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;windoweventhandlers&quot;&gt;&lt;code&gt;WindowEventHandlers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスは&lt;a href=&quot;workerglobalscope&quot;&gt; &lt;code&gt;WorkerGlobalScope&lt;/code&gt; &lt;/a&gt;インターフェイスとその親&lt;a href=&quot;eventtarget&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; を&lt;/a&gt;継承しているため、&lt;a href=&quot;windoworworkerglobalscope&quot;&gt; &lt;code&gt;WindowTimers&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;windoworworkerglobalscope&quot;&gt; &lt;code&gt;WindowBase64&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;windoweventhandlers&quot;&gt; &lt;code&gt;WindowEventHandlers&lt;/code&gt; の&lt;/a&gt;プロパティを実装しています。</target>
        </trans-unit>
        <trans-unit id="e4ddefdab545f4e1076377cdd3a78614ecfa8051" translate="yes" xml:space="preserve">
          <source>This interface inherits from the following parent interfaces:</source>
          <target state="translated">このインタフェースは、以下の親インタフェースを継承しています。</target>
        </trans-unit>
        <trans-unit id="dc6db4181dec79d6a9fc315a2f2bde79fdf02397" translate="yes" xml:space="preserve">
          <source>This interface inherits properties from &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスは、&lt;a href=&quot;../mouseevent&quot;&gt; &lt;code&gt;MouseEvent&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;からプロパティを継承します。</target>
        </trans-unit>
        <trans-unit id="3f27ce462e4f408afd711aef34eb81dc441482de" translate="yes" xml:space="preserve">
          <source>This interface inherits properties from &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスは、&lt;a href=&quot;mouseevent&quot;&gt; &lt;code&gt;MouseEvent&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;からプロパティを継承します。</target>
        </trans-unit>
        <trans-unit id="f90b1dd989dcc55e61767f567d37b57d4ebd82e3" translate="yes" xml:space="preserve">
          <source>This interface is &lt;a href=&quot;https://developer.mozilla.org/en/DOM/Worker/Functions_available_to_workers&quot;&gt;only available&lt;/a&gt; in &lt;a href=&quot;worker&quot;&gt;workers&lt;/a&gt; as it enables synchronous I/O that could potentially block.</source>
          <target state="translated">このインターフェイスは、ブロックされる可能性のある同期I / Oを有効にするため、&lt;a href=&quot;worker&quot;&gt;ワーカーで&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en/DOM/Worker/Functions_available_to_workers&quot;&gt;のみ使用&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="164f78112b2afb2624d660aac662706a62334b27" translate="yes" xml:space="preserve">
          <source>This interface is accessed via the &lt;a href=&quot;serviceworkerregistration/pushmanager&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.pushManager&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">このインターフェイスには、&lt;a href=&quot;serviceworkerregistration/pushmanager&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.pushManager&lt;/code&gt; &lt;/a&gt;プロパティを介してアクセスします。</target>
        </trans-unit>
        <trans-unit id="27836cdc2fb7987df2da5c5b8fa434c96243c90f" translate="yes" xml:space="preserve">
          <source>This interface is accessible through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt;&lt;code&gt;VRDisplay.getPose()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt; methods. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt;&lt;code&gt;VRDisplay.getPose()&lt;/code&gt;&lt;/a&gt; is deprecated.</source>
          <target state="translated">このインターフェイスには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt; &lt;code&gt;VRDisplay.getPose()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;vrdisplay/getframedata&quot;&gt; &lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt; &lt;/a&gt;メソッドを介してアクセスできます。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt; &lt;code&gt;VRDisplay.getPose()&lt;/code&gt; &lt;/a&gt;は非推奨です。</target>
        </trans-unit>
        <trans-unit id="7485bc2fd6294193563eeb4bdbd561891d678c1e" translate="yes" xml:space="preserve">
          <source>This interface is accessible through the &lt;a href=&quot;vrdisplay/capabilities&quot;&gt;&lt;code&gt;VRDisplay.capabilities&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">このインターフェイスには、&lt;a href=&quot;vrdisplay/capabilities&quot;&gt; &lt;code&gt;VRDisplay.capabilities&lt;/code&gt; &lt;/a&gt;プロパティを通じてアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b1a0a14e235df5bb382987c240a0c21f17e6d6da" translate="yes" xml:space="preserve">
          <source>This interface is accessible through the &lt;a href=&quot;vrdisplay/geteyeparameters&quot;&gt;&lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このインターフェイスには、&lt;a href=&quot;vrdisplay/geteyeparameters&quot;&gt; &lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt; &lt;/a&gt;メソッドを介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b6a8c4e1ad8194f4ead7bf9feb538a550847fc1f" translate="yes" xml:space="preserve">
          <source>This interface is accessible through the &lt;a href=&quot;vrdisplay/stageparameters&quot;&gt;&lt;code&gt;VRDisplay.stageParameters&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">このインターフェイスには、&lt;a href=&quot;vrdisplay/stageparameters&quot;&gt; &lt;code&gt;VRDisplay.stageParameters&lt;/code&gt; &lt;/a&gt;プロパティを通じてアクセスできます。</target>
        </trans-unit>
        <trans-unit id="c085ef476c90d58cd8241ac41e6ddbbe39a2aaad" translate="yes" xml:space="preserve">
          <source>This interface is also of great use with Web components: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template&quot;&gt;&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;&lt;/a&gt; elements contain a &lt;code&gt;DocumentFragment&lt;/code&gt; in their &lt;a href=&quot;htmltemplateelement/content&quot;&gt;&lt;code&gt;HTMLTemplateElement.content&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">このインターフェイスは、Webコンポーネントでも非常に&lt;a href=&quot;htmltemplateelement/content&quot;&gt; &lt;code&gt;HTMLTemplateElement.content&lt;/code&gt; &lt;/a&gt;ます。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template&quot;&gt; &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; &lt;/a&gt;要素には、HTMLTemplateElement.contentプロパティに &lt;code&gt;DocumentFragment&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="a077a78de4ff1522ddd68c9de08168b52c384003" translate="yes" xml:space="preserve">
          <source>This interface is available in Opera through the &lt;a href=&quot;https://github.com/webrtc/adapter&quot;&gt;adapter.js&lt;/a&gt; polyfill.</source>
          <target state="translated">このインターフェースはを通じてオペラで利用可能です&lt;a href=&quot;https://github.com/webrtc/adapter&quot;&gt;adapter.js&lt;/a&gt;ポリフィル。</target>
        </trans-unit>
        <trans-unit id="ea8695dbd492b6ab7dfd23a3e9195b617b25f80b" translate="yes" xml:space="preserve">
          <source>This interface is available in both the window and the &lt;a href=&quot;web_workers_api&quot;&gt;worker&lt;/a&gt; context.</source>
          <target state="translated">このインターフェイスは、ウィンドウと&lt;a href=&quot;web_workers_api&quot;&gt;ワーカー&lt;/a&gt;コンテキストの両方で使用できます。</target>
        </trans-unit>
        <trans-unit id="20762c0ee8dd7c87a683716e3ae2edbe5592582d" translate="yes" xml:space="preserve">
          <source>This interface is deprecated in the &lt;a href=&quot;https://w3c.github.io/navigation-timing/#obsolete&quot;&gt;Navigation Timing Level 2 specification&lt;/a&gt;. Please use the &lt;a href=&quot;performancenavigationtiming&quot;&gt;&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;&lt;/a&gt; interface instead.</source>
          <target state="translated">このインターフェイスは、&lt;a href=&quot;https://w3c.github.io/navigation-timing/#obsolete&quot;&gt;Navigation Timing Level 2仕様で&lt;/a&gt;は非推奨です。代わりに&lt;a href=&quot;performancenavigationtiming&quot;&gt; &lt;code&gt;PerformanceNavigationTiming&lt;/code&gt; &lt;/a&gt;インターフェイスを使用してください。</target>
        </trans-unit>
        <trans-unit id="1d5e02c164abe311156889a154b2745723829e75" translate="yes" xml:space="preserve">
          <source>This interface is only visible from inside a JavaScript script executed in the context of a Web worker.</source>
          <target state="translated">このインターフェイスは、Web ワーカーのコンテキストで実行される JavaScript スクリプトの内部からのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="a5100578b1a03cd2a0ac3e3051fc82c08a8cdb69" translate="yes" xml:space="preserve">
          <source>This interface is restricted to the same origin, but you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin&quot;&gt;&lt;code&gt;Timing-Allow-Origin&lt;/code&gt;&lt;/a&gt; header to specify the domains that are allowed to access the server metrics. Note that this interface is only available in secure contexts (HTTPS) in some browsers.</source>
          <target state="translated">このインターフェースは同じオリジンに制限されていますが、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin&quot;&gt; &lt;code&gt;Timing-Allow-Origin&lt;/code&gt; &lt;/a&gt;ヘッダーを使用して、サーバーメトリックへのアクセスを許可するドメインを指定できます。このインターフェースは、一部のブラウザーのセキュアコンテキスト（HTTPS）でのみ使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="068d34ee7ced354c9ec33556680edfe4f48badb7" translate="yes" xml:space="preserve">
          <source>This interface is usually specialized by each worker type: &lt;a href=&quot;dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; for dedicated workers, &lt;a href=&quot;sharedworkerglobalscope&quot;&gt;&lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; for shared workers, and &lt;a href=&quot;serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt;. The &lt;code&gt;self&lt;/code&gt; property returns the specialized scope for each context.</source>
          <target state="translated">：このインタフェースは、通常、各ワーカーの種類によって特化されて&lt;a href=&quot;dedicatedworkerglobalscope&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;、専用の労働者のため&lt;a href=&quot;sharedworkerglobalscope&quot;&gt; &lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;共有労働者のために、そして&lt;a href=&quot;serviceworkerglobalscope&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;ため&lt;a href=&quot;service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt;。 &lt;code&gt;self&lt;/code&gt; プロパティは、各コンテキストのための専門的な範囲を返します。</target>
        </trans-unit>
        <trans-unit id="54c0a50febef2750caadaf20d98e848975b133bd" translate="yes" xml:space="preserve">
          <source>This interface isn't available through the global scope; instead, you obtain a &lt;code&gt;Metadata&lt;/code&gt; object describing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; using the method &lt;a href=&quot;filesystementry/getmetadata&quot;&gt;&lt;code&gt;FileSystemEntry.getMetadata()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスは、グローバルスコープでは使用できません。代わりに、メソッド&lt;a href=&quot;filesystementry/getmetadata&quot;&gt; &lt;code&gt;FileSystemEntry.getMetadata()&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt; &lt;code&gt;FileSystemEntry&lt;/code&gt; &lt;/a&gt;を記述する &lt;code&gt;Metadata&lt;/code&gt; オブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="2c772ffe290fdbab49c443d8ac4941d25de0c315" translate="yes" xml:space="preserve">
          <source>This interface of this property is deprecated in the &lt;a href=&quot;https://w3c.github.io/navigation-timing/#obsolete&quot;&gt;Navigation Timing Level 2 specification&lt;/a&gt;. Please use the &lt;a href=&quot;../performancenavigationtiming&quot;&gt;&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;&lt;/a&gt; interface instead.</source>
          <target state="translated">このプロパティのこのインターフェイスは、&lt;a href=&quot;https://w3c.github.io/navigation-timing/#obsolete&quot;&gt;Navigation Timing Level 2仕様で&lt;/a&gt;廃止されています。代わりに&lt;a href=&quot;../performancenavigationtiming&quot;&gt; &lt;code&gt;PerformanceNavigationTiming&lt;/code&gt; &lt;/a&gt;インターフェイスを使用してください。</target>
        </trans-unit>
        <trans-unit id="5971454d5b951dac549293c06685d5f6a47ae02a" translate="yes" xml:space="preserve">
          <source>This interface replaces one method from &lt;a href=&quot;htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt;, on which it is based.</source>
          <target state="translated">このインターフェイスは、ベースとなっている&lt;a href=&quot;htmlcollection&quot;&gt; &lt;code&gt;HTMLCollection&lt;/code&gt; の&lt;/a&gt; 1つのメソッドを置き換えます。</target>
        </trans-unit>
        <trans-unit id="bf2840bb51ef92bece36b1f2d62d405500f13b1a" translate="yes" xml:space="preserve">
          <source>This interface represents a single CSS value. It may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the &lt;a href=&quot;cssstyledeclaration/getpropertycssvalue&quot;&gt;&lt;code&gt;getPropertyCSSValue()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt; interface. A &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; object only occurs in a context of a CSS property.</source>
          <target state="translated">このインターフェースは、単一のCSS値を表します。現在ブロックに設定されている特定のスタイルプロパティの値を決定したり、ブロック内で特定のスタイルプロパティを明示的に設定したりするために使用できます。このインターフェースのインスタンスは、&lt;a href=&quot;cssstyledeclaration&quot;&gt; &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; &lt;/a&gt;インターフェースの&lt;a href=&quot;cssstyledeclaration/getpropertycssvalue&quot;&gt; &lt;code&gt;getPropertyCSSValue()&lt;/code&gt; &lt;/a&gt;メソッドから取得できます。 &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; のオブジェクトは、CSSプロパティのコンテキストで発生します。</target>
        </trans-unit>
        <trans-unit id="f8bb1370fad18a51cfd66cadf484ec6561b4e92b" translate="yes" xml:space="preserve">
          <source>This interface should be available inside Web workers, though some implementations doesn't allow it yet.</source>
          <target state="translated">このインターフェイスはウェブワーカーの中で利用できるはずですが、いくつかの実装ではまだ許可されていません。</target>
        </trans-unit>
        <trans-unit id="acad1a8b0eacf11037fb499603c92c8f8aab7c78" translate="yes" xml:space="preserve">
          <source>This interface should be available inside Web workers, though some implementations don't allow it yet.</source>
          <target state="translated">このインターフェイスはウェブワーカーの中で利用できるはずですが、いくつかの実装ではまだ許可されていません。</target>
        </trans-unit>
        <trans-unit id="c0a44c482c5e72ec38d7af34b0a78f7ca3ae095b" translate="yes" xml:space="preserve">
          <source>This interface was supported with the non-standard &lt;code&gt;nsIDOMMozURLProperty&lt;/code&gt; internal type. However this didn't make any difference in practice, as the only way to access such an object was through &lt;code&gt;window.URL&lt;/code&gt;.</source>
          <target state="translated">このインターフェースは非標準の &lt;code&gt;nsIDOMMozURLProperty&lt;/code&gt; 内部型でサポートされていました。ただし、このようなオブジェクトにアクセスする唯一の方法は &lt;code&gt;window.URL&lt;/code&gt; を介したものだったため、実際には違いはありませんでした。</target>
        </trans-unit>
        <trans-unit id="e5e5c117b5b89155da197e86292a860e9c05a2c8" translate="yes" xml:space="preserve">
          <source>This introduction discusses essential concepts and terminology in IndexedDB. It gives you the big picture and explains key concepts.</source>
          <target state="translated">このイントロダクションでは、IndexedDBの本質的な概念と用語について説明します。全体像を示し、重要な概念を説明します。</target>
        </trans-unit>
        <trans-unit id="affad24f71ffe49a75e12508eb2f804ca2749ff6" translate="yes" xml:space="preserve">
          <source>This involves creating a new &lt;code&gt;XMLSerializer&lt;/code&gt; object, then passing the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; to be serialized into &lt;a href=&quot;xmlserializer/serializetostring&quot;&gt;&lt;code&gt;serializeToString()&lt;/code&gt;&lt;/a&gt;, which returns the XML equivalent of the document.</source>
          <target state="translated">これには、新しい &lt;code&gt;XMLSerializer&lt;/code&gt; オブジェクトを作成し、シリアル化する&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;xmlserializer/serializetostring&quot;&gt; &lt;code&gt;serializeToString()&lt;/code&gt; &lt;/a&gt;に渡します。これにより、ドキュメントと同等のXMLが返されます。</target>
        </trans-unit>
        <trans-unit id="7f301fa9c6e7434202b2b9fb5125224889f9f52a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the name of the event.</source>
          <target state="translated">これは、イベントの名前を表す&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="47bf749aef3909fc30b94f809dcbb34d762a0ea9" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the text that will be shown.</source>
          <target state="translated">これは、表示されるテキストを表す&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="b630c90aa4446e5a24c597de459891707a93c1dc" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the animation value. If the given attribute or property is being animated it contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, it contains the same value as baseVal.</source>
          <target state="translated">これは、アニメーション値を表す&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;です。指定された属性またはプロパティがアニメーション化されている場合は、属性またはプロパティの現在のアニメーション化された値が含まれます。指定された属性またはプロパティが現在アニメーション化されていない場合は、baseValと同じ値が含まれます。</target>
        </trans-unit>
        <trans-unit id="7053afeba484e19c2f8ee2e80cf43c8727fef63e" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing the base value. The base value of the given attribute before applying any animations. Setter throws DOMException.</source>
          <target state="translated">これは、ベース値を表す&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;です。アニメーションを適用する前の、指定された属性の基本値。セッターはDOMExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="683f725181b94792d4bbc05e3f9d598efd0faa5c" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing a &lt;code&gt;'#'&lt;/code&gt; followed by the fragment identifier of the URL.</source>
          <target state="translated">これはある&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;含む &lt;code&gt;'#'&lt;/code&gt; URLのフラグメント識別子が続いています。</target>
        </trans-unit>
        <trans-unit id="1ac5d4590f9b606fad4a8ab05f2f239ba4988817" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing a &lt;code&gt;'?'&lt;/code&gt; followed by the parameters of the URL.</source>
          <target state="translated">これは &lt;code&gt;'?'&lt;/code&gt; を含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です その後にURLのパラメータが続きます。</target>
        </trans-unit>
        <trans-unit id="9554416a15ab8b589a509f68f7813b6784e44cfb" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing an initial &lt;code&gt;'/'&lt;/code&gt; followed by the path of the URL.</source>
          <target state="translated">これは、URLのパスが後に続く最初の &lt;code&gt;'/'&lt;/code&gt; を含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="6d31721efb994931b953f747c7a08b95983b2a67" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the domain of the URL.</source>
          <target state="translated">これは、URLのドメインを含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="bdaee41a88d0abba5b37a2d9615cc951f0c8247a" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the host, that is the &lt;em&gt;hostname&lt;/em&gt;, and then, if the &lt;em&gt;port&lt;/em&gt; of the URL is not empty (which can happen because it was not specified or because it was specified to be the default port of the URL's scheme), a &lt;code&gt;':'&lt;/code&gt;, and the &lt;em&gt;port&lt;/em&gt; of the URL.</source>
          <target state="translated">これは、ホスト、つまり&lt;em&gt;hostname&lt;/em&gt;を含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;であり、URL の&lt;em&gt;ポート&lt;/em&gt;が空でない場合（これは、指定されなかったか、URLスキームのデフォルトポートとして指定されたために発生する可能性があります）、 &lt;code&gt;':'&lt;/code&gt; 、および&lt;em&gt;ポート&lt;/em&gt; URLの。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c8a8df3afaeb4d0ac5edf5175e0e2b5cccb9fa8" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the password specified before the domain name.</source>
          <target state="translated">これは、ドメイン名の前に指定されたパスワードを含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="56f57da8eea7a027eb497de59fad82e4ab6b8de5" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the port number of the URL.</source>
          <target state="translated">これは、URLのポート番号を含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="cc1adbb5c3575e96a57cd3daac5cf8a94abb2e6c" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the protocol scheme of the URL, including the final &lt;code&gt;':'&lt;/code&gt;.</source>
          <target state="translated">これは、最後の &lt;code&gt;':'&lt;/code&gt; を含む、URLのプロトコルスキームを含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="075831409fac06f6d86a3ebbc21893ff037f88ad" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the username specified before the domain name.</source>
          <target state="translated">これは、ドメイン名の前に指定されたユーザー名を含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="c97af9812696e885f7c82479c89dee36977b8232" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the whole URL.</source>
          <target state="translated">これは、URL全体を含む&lt;a href=&quot;usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="bf509b69aaadeee5b02d3f052f032302195f97e6" translate="yes" xml:space="preserve">
          <source>This is a &lt;code&gt;double&lt;/code&gt; representing the time in the video that the cue will start being shown.</source>
          <target state="translated">これは、キューが表示され始めるビデオの時間を表す &lt;code&gt;double&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="004d838b8cc6c3508ad2190d232e41243f3949ca" translate="yes" xml:space="preserve">
          <source>This is a &lt;code&gt;double&lt;/code&gt; representing the time in the video that the cue will stop being shown.</source>
          <target state="translated">これは、キューが表示されなくなるビデオの時間を表す &lt;code&gt;double&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4e5b7a0564b7f26ccad658cbcd22904eb89bbae3" translate="yes" xml:space="preserve">
          <source>This is a good question. The reason is that for smooth rendering inside the VR display, you need to render the content at the display's native refresh rate, not that of the computer. VR display refresh rates are greater than PC refresh rates, typically up to 90fps. The rate will be differ from the computer's core refresh rate.</source>
          <target state="translated">これは良い質問です。理由は、VRディスプレイ内でスムーズにレンダリングするためには、パソコンのリフレッシュレートではなく、ディスプレイのネイティブリフレッシュレートでコンテンツをレンダリングする必要があるからです。VRディスプレイのリフレッシュレートはPCのリフレッシュレートよりも大きく、通常は最大90fpsです。パソコンのコアリフレッシュレートとは異なるレートになります。</target>
        </trans-unit>
        <trans-unit id="53059ea68b875fb64393363716aaa6c80196bf0c" translate="yes" xml:space="preserve">
          <source>This is a helper type to simplify the specification, it isn't an interface and there are no objects implementing it.</source>
          <target state="translated">これは仕様を単純化するためのヘルパー型であり、インターフェースではありませんし、実装されているオブジェクトもありません。</target>
        </trans-unit>
        <trans-unit id="e8bbcb969ba0ffdf8faef4167e34823e6d62a4c9" translate="yes" xml:space="preserve">
          <source>This is a helper type to simplify the specification. It isn't an interface and there are no objects implementing it.</source>
          <target state="translated">これは仕様を単純化するためのヘルパー型です。インターフェースではなく、実装されているオブジェクトもありません。</target>
        </trans-unit>
        <trans-unit id="a47f970150686f4e4679e45dc92f05eacad1df44" translate="yes" xml:space="preserve">
          <source>This is a method, called immediately when the object is constructed. The contents of this method are defined by the developer, and should aim to get access to the stream source, and do anything else required to set up the stream fuctionality. If this process is to be done asynchronously, it can return a promise to signal success or failure. The &lt;code&gt;controller&lt;/code&gt; parameter passed to this method is a &lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt;&lt;code&gt;ReadableStreamDefaultController&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../readablebytestreamcontroller&quot;&gt;&lt;code&gt;ReadableByteStreamController&lt;/code&gt;&lt;/a&gt;, depending on the value of the &lt;code&gt;type&lt;/code&gt; property. This can be used by the developer to control the stream during set up.</source>
          <target state="translated">これはメソッドであり、オブジェクトが構築されるとすぐに呼び出されます。このメソッドのコンテンツは開発者によって定義され、ストリームソースへのアクセスを取得することを目的とし、ストリームの機能を設定するために必要な他のことを行う必要があります。このプロセスが非同期で行われる場合、成功または失敗を知らせる約束を返すことができます。 &lt;code&gt;controller&lt;/code&gt; このメソッドに渡されるパラメータである&lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt; &lt;code&gt;ReadableStreamDefaultController&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;../readablebytestreamcontroller&quot;&gt; &lt;code&gt;ReadableByteStreamController&lt;/code&gt; &lt;/a&gt;の値に応じて、 &lt;code&gt;type&lt;/code&gt; プロパティ。これは、開発者がセットアップ中にストリームを制御するために使用できます。</target>
        </trans-unit>
        <trans-unit id="63cb38f7df2a77edcb6c11726e22084cc6db107e" translate="yes" xml:space="preserve">
          <source>This is a method, called immediately when the object is constructed. The contents of this method are defined by the developer, and should aim to get access to the underlying sink. If this process is to be done asynchronously, it can return a promise to signal success or failure. The &lt;code&gt;controller&lt;/code&gt; parameter passed to this method is a &lt;a href=&quot;../writablestreamdefaultcontroller&quot;&gt;&lt;code&gt;WritableStreamDefaultController&lt;/code&gt;&lt;/a&gt;. This can be used by the developer to control the stream during set up.</source>
          <target state="translated">これはメソッドであり、オブジェクトが構築されるとすぐに呼び出されます。このメソッドの内容は開発者によって定義され、基礎となるシンクへのアクセスを目的とする必要があります。このプロセスが非同期で行われる場合、成功または失敗を知らせる約束を返すことができます。 &lt;code&gt;controller&lt;/code&gt; このメソッドに渡されるパラメータである&lt;a href=&quot;../writablestreamdefaultcontroller&quot;&gt; &lt;code&gt;WritableStreamDefaultController&lt;/code&gt; &lt;/a&gt;。これは、開発者がセットアップ中にストリームを制御するために使用できます。</target>
        </trans-unit>
        <trans-unit id="90800df7e4cdd47938cd1b79eb7d13d70e1d4166" translate="yes" xml:space="preserve">
          <source>This is a non-standard deprecated alias for &lt;a href=&quot;keyboardevent/location&quot;&gt;&lt;code&gt;KeyboardEvent.location&lt;/code&gt;&lt;/a&gt;. It was part of an old version of DOM Level 3 Events.</source>
          <target state="translated">これは、&lt;a href=&quot;keyboardevent/location&quot;&gt; &lt;code&gt;KeyboardEvent.location&lt;/code&gt; の&lt;/a&gt;非標準の非推奨エイリアスです。これは、DOMレベル3イベントの古いバージョンの一部でした。</target>
        </trans-unit>
        <trans-unit id="11564bb988f4b5c7c90be965c86bb81387bc2898" translate="yes" xml:space="preserve">
          <source>This is a pretty simple example, since it's just drawing one simple object, but the concepts used here extend to much more complex animations.</source>
          <target state="translated">これは単純なオブジェクトを1つ描いているだけなので、非常に単純な例ですが、ここで使用されている概念は、より複雑なアニメーションにも拡張されます。</target>
        </trans-unit>
        <trans-unit id="fd26036125115ea97c46e950ee1ffad91d5858c8" translate="yes" xml:space="preserve">
          <source>This is a quick and dirty way to use VR pose data, but it illustrates the basic principle.</source>
          <target state="translated">VRポーズデータの活用法としては手っ取り早いですが、基本的な原理を説明しています。</target>
        </trans-unit>
        <trans-unit id="a0508fc9fce60ac210de43519148694a7af9dcd1" translate="yes" xml:space="preserve">
          <source>This is a real-life example demonstrating how to create a &lt;a href=&quot;../url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; and set some search parameters.</source>
          <target state="translated">これは、&lt;a href=&quot;../url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;を作成し、いくつかの検索パラメーターを設定する方法を示す実際の例です。</target>
        </trans-unit>
        <trans-unit id="4c89f3628d3bdc213614cb77653768a3042074bd" translate="yes" xml:space="preserve">
          <source>This is a simple function. It checks to see if we've already scheduled a display refresh by checking the value of &lt;code&gt;statusRefreshScheduled&lt;/code&gt;. If it's &lt;code&gt;false&lt;/code&gt;, we call &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; to schedule a refresh, providing the &lt;code&gt;updateDisplay()&lt;/code&gt; function to be called to handle that work.</source>
          <target state="translated">これは単純な関数です。 &lt;code&gt;statusRefreshScheduled&lt;/code&gt; の値をチェックして、ディスプレイの更新がすでにスケジュールされているかどうかを確認します。 &lt;code&gt;false&lt;/code&gt; の場合、&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;を呼び出して更新をスケジュールし、その作業を処理するために呼び出される &lt;code&gt;updateDisplay()&lt;/code&gt; 関数を提供します。</target>
        </trans-unit>
        <trans-unit id="f092bf6326b7b33dfcb17047e959929f7088da14" translate="yes" xml:space="preserve">
          <source>This is a very useful event; you could use it to handle cases where the display gets disconnected unexpectedly, stopping errors from being thrown and making sure the user is aware of the situation. In Google's Webvr.info presentation demo, the event is used to run an &lt;a href=&quot;https://github.com/toji/webvr.info/blob/master/samples/03-vr-presentation.html#L174&quot;&gt;&lt;code&gt;onVRPresentChange()&lt;/code&gt; function&lt;/a&gt;, which updates the UI controls as appropriate and resizes the canvas.</source>
          <target state="translated">これは非常に便利なイベントです。これを使用して、ディスプレイが予期せず切断された場合に対処し、エラーがスローされないようにし、ユーザーが状況を認識していることを確認できます。GoogleのWebvr.infoプレゼンテーションデモでは、イベントを使用して&lt;a href=&quot;https://github.com/toji/webvr.info/blob/master/samples/03-vr-presentation.html#L174&quot;&gt; &lt;code&gt;onVRPresentChange()&lt;/code&gt; 関数&lt;/a&gt;を実行し、UIコントロールを適切に更新し、キャンバスのサイズを変更します。</target>
        </trans-unit>
        <trans-unit id="7d4626ea4c89cb0959732b532cb0361416cb6a11" translate="yes" xml:space="preserve">
          <source>This is accomplished by first obtaining a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; object representing the directory the file is currently located in. Then &lt;a href=&quot;moveto&quot;&gt;&lt;code&gt;moveTo()&lt;/code&gt;&lt;/a&gt; is used to rename the file within that directory.</source>
          <target state="translated">これは、最初にファイルが現在配置されているディレクトリを表す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt; &lt;/a&gt;オブジェクトを取得することによって行われます。次に&lt;a href=&quot;moveto&quot;&gt; &lt;code&gt;moveTo()&lt;/code&gt; &lt;/a&gt;を使用して、そのディレクトリ内のファイルの名前を変更します。</target>
        </trans-unit>
        <trans-unit id="c33f818b9612bfa0ad06224306a7ef747c28e33c" translate="yes" xml:space="preserve">
          <source>This is actually a really easy way to do something that sounds like it might be hard to do. You simply need to create a &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt; and connect it to all of the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt;s whose values should be linked to always match each other. Since &lt;code&gt;ConstantSourceNode&lt;/code&gt;'s &lt;a href=&quot;../constantsourcenode/offset&quot;&gt;&lt;code&gt;offset&lt;/code&gt;&lt;/a&gt; value is simply sent straight through to all of its outputs, it acts as a splitter for that value, sending it to each connected parameter.</source>
          <target state="translated">これは実際には難しいと思われることを行うための本当に簡単な方法です。&lt;a href=&quot;../constantsourcenode&quot;&gt; &lt;code&gt;ConstantSourceNode&lt;/code&gt; &lt;/a&gt;を作成し、値が常に互いに一致するようにリンクする必要があるすべての&lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; に&lt;/a&gt;接続するだけです。以来 &lt;code&gt;ConstantSourceNode&lt;/code&gt; の&lt;a href=&quot;../constantsourcenode/offset&quot;&gt; &lt;code&gt;offset&lt;/code&gt; &lt;/a&gt;値を単純に直線その出力の全てを介して送信され、それは各接続パラメータにそれを送る、その値のスプリッタとして機能します。</target>
        </trans-unit>
        <trans-unit id="6a818c282c74738a30830756d5ec7090fc587b9d" translate="yes" xml:space="preserve">
          <source>This is actually defined on the &lt;code&gt;ScrollOptions&lt;/code&gt; dictionary, which is implemented by &lt;code&gt;ScrollToOptions&lt;/code&gt;.</source>
          <target state="translated">これは実際には &lt;code&gt;ScrollOptions&lt;/code&gt; によって実装される &lt;code&gt;ScrollToOptions&lt;/code&gt; 辞書で定義されます。</target>
        </trans-unit>
        <trans-unit id="ba6e2f6536e8652b5c4932d0ecb9604eaaeaacc8" translate="yes" xml:space="preserve">
          <source>This is already in device pixel units, so there's no need to multiply by &lt;a href=&quot;../window/devicepixelratio&quot;&gt;Window.devicePixelRatio&lt;/a&gt; before setting to &lt;a href=&quot;../htmlcanvaselement/height&quot;&gt;HTMLCanvasElement.height.&lt;/a&gt;</source>
          <target state="translated">これはすでにデバイスピクセル単位であるため、&lt;a href=&quot;../htmlcanvaselement/height&quot;&gt;HTMLCanvasElement.height&lt;/a&gt;に設定する前に&lt;a href=&quot;../window/devicepixelratio&quot;&gt;Window.devicePixelRatio&lt;/a&gt;を乗算する必要はありません。</target>
        </trans-unit>
        <trans-unit id="835d44d1fee7f2c10dd8d070396ef0dc298fa06e" translate="yes" xml:space="preserve">
          <source>This is already in device pixel units, so there's no need to multiply by &lt;a href=&quot;../window/devicepixelratio&quot;&gt;Window.devicePixelRatio&lt;/a&gt; before setting to &lt;a href=&quot;../htmlcanvaselement/width&quot;&gt;HTMLCanvasElement.width.&lt;/a&gt;</source>
          <target state="translated">これはすでにデバイスピクセル単位であるため、&lt;a href=&quot;../htmlcanvaselement/width&quot;&gt;HTMLCanvasElement.width&lt;/a&gt;に設定する前に&lt;a href=&quot;../window/devicepixelratio&quot;&gt;Window.devicePixelRatio&lt;/a&gt;を乗算する必要はありません。</target>
        </trans-unit>
        <trans-unit id="93f030f543fa45f2a724223cf04a6c15d08b8885" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;EventInit&lt;/code&gt; dictionary, having the following fields:</source>
          <target state="translated">これは &lt;code&gt;EventInit&lt;/code&gt; 辞書で、次のフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="fe7429f34102310130f34607c14f6fe3d6b30bd0" translate="yes" xml:space="preserve">
          <source>This is an ICE candidate a-line, whose &lt;a href=&quot;foundation&quot;&gt;&lt;code&gt;foundation&lt;/code&gt;&lt;/a&gt; is 4234997325. The next field on the a-line, &lt;code&gt;&quot;1&quot;&lt;/code&gt;, is the component ID. A value of &lt;code&gt;&quot;1&quot;&lt;/code&gt; indicates RTP, which is recorded in the &lt;code&gt;component&lt;/code&gt; property as &lt;code&gt;&quot;rtp&quot;&lt;/code&gt;. If this value were instead &lt;code&gt;&quot;2&quot;&lt;/code&gt;, the a-line would be describing an RTCP candidate, and &lt;code&gt;compoment&lt;/code&gt; would be &lt;code&gt;&quot;rtcp&quot;&lt;/code&gt;.</source>
          <target state="translated">これはICE候補のa行で、その&lt;a href=&quot;foundation&quot;&gt; &lt;code&gt;foundation&lt;/code&gt; &lt;/a&gt;は4234997325です。a行の次のフィールド &lt;code&gt;&quot;1&quot;&lt;/code&gt; はコンポーネントIDです。値 &lt;code&gt;&quot;1&quot;&lt;/code&gt; はRTPを示し、 &lt;code&gt;component&lt;/code&gt; プロパティに &lt;code&gt;&quot;rtp&quot;&lt;/code&gt; として記録されます。この値が代わりに &lt;code&gt;&quot;2&quot;&lt;/code&gt; の場合、a-lineはRTCP候補を &lt;code&gt;compoment&lt;/code&gt; 、compomentは &lt;code&gt;&quot;rtcp&quot;&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="9e01c9938467b4730d2444023dd0da091a654c81" translate="yes" xml:space="preserve">
          <source>This is an abstract interface and there is no object of this type. This interface does not define any method or property; it is merely a tag indicating objects that can be used in specific conditions, such as being transfered to a &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; using the &lt;a href=&quot;worker/postmessage&quot;&gt;&lt;code&gt;Worker.postMessage()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは抽象インターフェースであり、このタイプのオブジェクトはありません。このインターフェイスはメソッドやプロパティを定義していません。これは、&lt;a href=&quot;worker/postmessage&quot;&gt; &lt;code&gt;Worker.postMessage()&lt;/code&gt; &lt;/a&gt;メソッドを使用して&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;に転送されるなど、特定の条件で使用できるオブジェクトを示すタグにすぎません。</target>
        </trans-unit>
        <trans-unit id="3e66bd7f6b4efe6a7b4bf2404668f8cf204f3168" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;scrollx&quot;&gt;&lt;code&gt;scrollX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;scrollx&quot;&gt; &lt;code&gt;scrollX&lt;/code&gt; の&lt;/a&gt;エイリアスです。</target>
        </trans-unit>
        <trans-unit id="9d5926bf594c2955c85c28becb9b9b6c1355b65d" translate="yes" xml:space="preserve">
          <source>This is an example with and without &lt;code&gt;bind()&lt;/code&gt;:</source>
          <target state="translated">これは &lt;code&gt;bind()&lt;/code&gt; がある場合とない場合の例です。</target>
        </trans-unit>
        <trans-unit id="f23694dd78a0d32a6ccf0c71bae5cfe1269965da" translate="yes" xml:space="preserve">
          <source>This is basically an alias for &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt;, for backwards compatibility purposes &amp;mdash; in older browsers you could use &lt;code&gt;addEventListener&lt;/code&gt; instead.</source>
          <target state="translated">これは基本的に、下位互換性のために&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;EventTarget.addEventListener()&lt;/code&gt; の&lt;/a&gt;エイリアスです。古いブラウザでは、代わりに &lt;code&gt;addEventListener&lt;/code&gt; を使用できました。</target>
        </trans-unit>
        <trans-unit id="9f1563208f93f5e5cf8e7ac52a161ff45fa5c959" translate="yes" xml:space="preserve">
          <source>This is basically an alias for &lt;a href=&quot;../eventtarget/removeeventlistener&quot;&gt;&lt;code&gt;EventTarget.removeEventListener()&lt;/code&gt;&lt;/a&gt;, for backwards compatibility purposes &amp;mdash; in older browsers you could use &lt;code&gt;removeEventListener()&lt;/code&gt; instead.</source>
          <target state="translated">これは基本的に、下位互換性のために&lt;a href=&quot;../eventtarget/removeeventlistener&quot;&gt; &lt;code&gt;EventTarget.removeEventListener()&lt;/code&gt; の&lt;/a&gt;エイリアスです。古いブラウザでは、代わりに &lt;code&gt;removeEventListener()&lt;/code&gt; を使用できました。</target>
        </trans-unit>
        <trans-unit id="08d573eed17ee956c8f299fdb2a78b108950a341" translate="yes" xml:space="preserve">
          <source>This is because even though &lt;code&gt;setTimeout&lt;/code&gt; was called with a delay of zero, it's placed on a queue and scheduled to run at the next opportunity; not immediately. Currently-executing code must complete before functions on the queue are executed, thus the resulting execution order may not be as expected.</source>
          <target state="translated">これは、 &lt;code&gt;setTimeout&lt;/code&gt; がゼロの遅延で呼び出されたにもかかわらず、キューに入れられ、次の機会に実行されるようにスケジュールされているためです。すぐではありません。現在実行中のコードは、キューの関数が実行される前に完了する必要があるため、結果の実行順序は期待どおりにならない場合があります。</target>
        </trans-unit>
        <trans-unit id="9dcffcceba58c3358fa1632dcc25df8d93cb4df8" translate="yes" xml:space="preserve">
          <source>This is decided when the index is created, using the &lt;a href=&quot;../idbobjectstore/createindex&quot;&gt;&lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt;&lt;/a&gt; method. This method takes an optional &lt;code&gt;options&lt;/code&gt; parameter shoe &lt;code&gt;multiEntry&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;../idbobjectstore/createindex&quot;&gt; &lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt; &lt;/a&gt;メソッドを使用して、インデックスの作成時に決定されます。このメソッドは、オプションの &lt;code&gt;options&lt;/code&gt; パラメータシューの &lt;code&gt;multiEntry&lt;/code&gt; プロパティを &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; に設定して取得します。</target>
        </trans-unit>
        <trans-unit id="e43593079988cc18de9aa3b6ed526aa157564d81" translate="yes" xml:space="preserve">
          <source>This is decided when the index is created, using the &lt;a href=&quot;../idbobjectstore/createindex&quot;&gt;&lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt;&lt;/a&gt; method. This method takes an optional parameter, &lt;code&gt;unique&lt;/code&gt;, which if set to &lt;code&gt;true&lt;/code&gt; means that the index will not be able to accept duplicate entries.</source>
          <target state="translated">これは、&lt;a href=&quot;../idbobjectstore/createindex&quot;&gt; &lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt; &lt;/a&gt;メソッドを使用して、インデックスの作成時に決定されます。このメソッドはオプションのパラメーターである &lt;code&gt;unique&lt;/code&gt; を取ります。これは &lt;code&gt;true&lt;/code&gt; に設定されている場合、インデックスが重複したエントリを受け入れることができないことを意味します。</target>
        </trans-unit>
        <trans-unit id="0262deb29eb1dbfec0e5349b88b62784b00caa54" translate="yes" xml:space="preserve">
          <source>This is different from the &lt;code&gt;versionchange&lt;/code&gt; transaction (but it is related).</source>
          <target state="translated">これは、 &lt;code&gt;versionchange&lt;/code&gt; トランザクションとは異なります（ただし、関連しています）。</target>
        </trans-unit>
        <trans-unit id="ade7ec046f98272286414fff837926b39dc9e690" translate="yes" xml:space="preserve">
          <source>This is done repeatedly as the video plays, so that frame after frame is processed and displayed with the chroma-key effect.</source>
          <target state="translated">これは、動画の再生に合わせて繰り返し行われるので、フレームごとにクロマキー効果で処理されて表示されます。</target>
        </trans-unit>
        <trans-unit id="fd55b96ad0c18bbede17f18045217eeb3f92198b" translate="yes" xml:space="preserve">
          <source>This is fairly well documented already, but we thought we'd give a mention to the checkbox hack, which abuses the fact that you can click on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt; of a checkbox to toggle it checked/unchecked. In Web Dictaphone this powers the Information screen, which is shown/hidden by clicking the question mark icon in the top right hand corner. First of all, we style the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; how we want it, making sure that it has enough z-index to always sit above the other elements and therefore be focusable/clickable:</source>
          <target state="translated">これはかなり十分に文書化されていますが、チェックボックスの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt; &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; &lt;/a&gt;をクリックしてチェックのオン/オフを切り替えることができるという事実を悪用するチェックボックスハックについて言及すると思います。Webディクタフォンでは、これにより、右上隅の疑問符アイコンをクリックすると表示/非表示になる情報画面が機能します。まず、 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; のスタイルを設定し、他の要素の上に常に配置できるように十分なZインデックスがあり、フォーカス可能/クリック可能であることを確認します。</target>
        </trans-unit>
        <trans-unit id="4835b21ce4dba74eebae6b008deec1289f5ae8f9" translate="yes" xml:space="preserve">
          <source>This is functionally equievalent to the &lt;code&gt;processPayment()&lt;/code&gt; method using the &lt;code&gt;await&lt;/code&gt; syntax.</source>
          <target state="translated">これは、 &lt;code&gt;await&lt;/code&gt; 構文を使用する &lt;code&gt;processPayment()&lt;/code&gt; メソッドと機能的に同等です。</target>
        </trans-unit>
        <trans-unit id="ace1ad48dd43c266b3adc1aa67c63096af3c0f93" translate="yes" xml:space="preserve">
          <source>This is functionally equivalent to the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; event when generated due to user activity with a mouse or mouse-compatible device. If the &lt;code&gt;pointerdown&lt;/code&gt; event isn't canceled through a call to &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt;, most user agents will fire a &lt;code&gt;mousedown&lt;/code&gt; event, so that sites not using pointer events will work.</source>
          <target state="translated">これは、マウスまたはマウス互換デバイスでのユーザーアクティビティが原因で生成された場合の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; イベントと機能的に同等です。&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; の&lt;/a&gt;呼び出しによって &lt;code&gt;pointerdown&lt;/code&gt; イベントがキャンセルされない場合、ほとんどのユーザーエージェントは &lt;code&gt;mousedown&lt;/code&gt; イベントを発生させるため、ポインタイベントを使用していないサイトが機能します。</target>
        </trans-unit>
        <trans-unit id="ed257dc62e7bcb5b01cb942c561efc0ac3774e58" translate="yes" xml:space="preserve">
          <source>This is great, but wouldn't it be nice if we had an amplitude envelope to go with it? Let's create a simple one so we get used to the methods we need to create an envelope with the Web Audio API.</source>
          <target state="translated">これは素晴らしいことですが、アンプリチュードエンベロープがあればいいと思いませんか?Web Audio APIでエンベロープを作成するために必要なメソッドに慣れるために、簡単なものを作ってみましょう。</target>
        </trans-unit>
        <trans-unit id="447a5fc0fd46c76ceb13f11c0b6caa6027ea433f" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet that uses the &lt;code&gt;currentTransform&lt;/code&gt; property to set a transformation matrix.</source>
          <target state="translated">これは、 &lt;code&gt;currentTransform&lt;/code&gt; プロパティを使用して変換行列を設定する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="8849e5ec28540de7ae4ac5f4f8489807d7b498e3" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet using the &lt;code&gt;filter&lt;/code&gt; property.</source>
          <target state="translated">これは、 &lt;code&gt;filter&lt;/code&gt; プロパティを使用した単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="f4ae9c300a14eb8370cc812a2f0e6fd0ccaec5b0" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet using the &lt;code&gt;font&lt;/code&gt; property to set a different font size and font family.</source>
          <target state="translated">これは、 &lt;code&gt;font&lt;/code&gt; プロパティを使用して異なるフォントサイズとフォントファミリを設定する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="9705f0e47b61db7b29396a433ab2e8c490e6988b" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet using the &lt;code&gt;globalCompositeOperation&lt;/code&gt; property to draw two rectangles that exclude themselves where they overlap.</source>
          <target state="translated">これは、 &lt;code&gt;globalCompositeOperation&lt;/code&gt; プロパティを使用して2つの長方形を描画する単純なコードスニペットであり、重複している部分を除外しています。</target>
        </trans-unit>
        <trans-unit id="4539decca5ebb4a64be85d25e10e44cb7f8f203d" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet using the &lt;code&gt;imageSmoothingQuality&lt;/code&gt; property with a scaled image.</source>
          <target state="translated">これは、スケーリングされた画像で &lt;code&gt;imageSmoothingQuality&lt;/code&gt; プロパティを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="1456fc7e102e719fb9c28d043816ccf211dcf372" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet using the &lt;code&gt;lineCap&lt;/code&gt; property to draw lines with a rounded end.</source>
          <target state="translated">これは、 &lt;code&gt;lineCap&lt;/code&gt; プロパティを使用して端が丸い線を描く単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="5daf1d8cade9aad71c14f565c27adf594ae7a054" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet using the &lt;code&gt;lineJoin&lt;/code&gt; property.</source>
          <target state="translated">これは、 &lt;code&gt;lineJoin&lt;/code&gt; プロパティを使用した単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="979f8272990915e11760e1c68758743a0c51b8fb" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet using the &lt;code&gt;lineWidth&lt;/code&gt; property to draw lines with a rounded end.</source>
          <target state="translated">これは、 &lt;code&gt;lineWidth&lt;/code&gt; プロパティを使用して端が丸い線を描く単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="e4bbea96597650171b3b2b352dd1ec9b313d5a18" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which creates a &lt;code&gt;Path2D&lt;/code&gt; path using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths&quot;&gt;SVG path data&lt;/a&gt;. The path will move to point (&lt;code&gt;M10 10&lt;/code&gt;) and then move horizontally 80 points to the right (&lt;code&gt;h 80&lt;/code&gt;), then 80 points down (&lt;code&gt;v 80&lt;/code&gt;), then 80 points to the left (&lt;code&gt;h -80&lt;/code&gt;), and then back to the start (&lt;code&gt;z&lt;/code&gt;).</source>
          <target state="translated">これは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths&quot;&gt;SVGパスデータ&lt;/a&gt;を使用して &lt;code&gt;Path2D&lt;/code&gt; パスを作成する単純なコードスニペットです。パスはポイント（ &lt;code&gt;M10 10&lt;/code&gt; ）に移動し、水平方向に80ポイント右（ &lt;code&gt;h 80&lt;/code&gt; ）、次に80ポイント下（ &lt;code&gt;v 80&lt;/code&gt; ）、次に左80ポイント（ &lt;code&gt;h -80&lt;/code&gt; ）に移動してから、開始（ &lt;code&gt;z&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6c837dcddcd43bf074d7b3cbfb5cb2b3d95080ab" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which creates and copies &lt;code&gt;Path2D&lt;/code&gt; paths.</source>
          <target state="translated">これは、 &lt;code&gt;Path2D&lt;/code&gt; パスを作成およびコピーする単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="bc3a93fcaafc436dd977e323beae791b3e016120" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;a href=&quot;canvasrenderingcontext2d/fillrect&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.fillRect()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、&lt;a href=&quot;canvasrenderingcontext2d/fillrect&quot;&gt; &lt;code&gt;CanvasRenderingContext2D.fillRect()&lt;/code&gt; &lt;/a&gt;メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="a4ffd4388507552b030b47ab6b344394ebb9e720" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;addPath&lt;/code&gt; method.</source>
          <target state="translated">これは、 &lt;code&gt;addPath&lt;/code&gt; メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="40a0d355cc6d61efcf9422c3f2fb62e149532038" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;drawFocusIfNeeded()&lt;/code&gt; method.</source>
          <target state="translated">これは、 &lt;code&gt;drawFocusIfNeeded()&lt;/code&gt; メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="cd4391e247bc1648aad081fa7e45741cfb2e115a" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;lineDashOffset&lt;/code&gt; property to draw a dashed line.</source>
          <target state="translated">これは、 &lt;code&gt;lineDashOffset&lt;/code&gt; プロパティを使用して破線を描画する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="7d48807f9bfe38326869bde71b54f16078dfe50d" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;resetTransform&lt;/code&gt; method.</source>
          <target state="translated">これは、 &lt;code&gt;resetTransform&lt;/code&gt; メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="6e180b1f6fdbf56ca99d7d4de51c6c28aa915e19" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;scale&lt;/code&gt; method.</source>
          <target state="translated">これは、 &lt;code&gt;scale&lt;/code&gt; メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="295de143cfdeb3cb02bde4dbde784ec180e5196c" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;scrollPathIntoView&lt;/code&gt; method.</source>
          <target state="translated">これは、 &lt;code&gt;scrollPathIntoView&lt;/code&gt; メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="2ae62543e9e9f652a8f8c1bdf24b4f61bc965947" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;setTransform&lt;/code&gt; method to create a &lt;a href=&quot;../canvaspattern&quot;&gt;&lt;code&gt;CanvasPattern&lt;/code&gt;&lt;/a&gt; with the specified pattern transformation from an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix&quot;&gt;&lt;code&gt;SVGMatrix&lt;/code&gt;&lt;/a&gt;. The pattern gets applied if you set it as the current &lt;a href=&quot;../canvasrenderingcontext2d/fillstyle&quot;&gt;&lt;code&gt;fillStyle&lt;/code&gt;&lt;/a&gt; and gets drawn onto the canvas when using the &lt;a href=&quot;../canvasrenderingcontext2d/fillrect&quot;&gt;&lt;code&gt;fillRect()&lt;/code&gt;&lt;/a&gt; method, for example.</source>
          <target state="translated">これは、 &lt;code&gt;setTransform&lt;/code&gt; メソッドを使用して、&lt;a href=&quot;../canvaspattern&quot;&gt; &lt;code&gt;CanvasPattern&lt;/code&gt; &lt;/a&gt;から指定されたパターン変換でCanvasPatternを作成する単純なコードスニペット&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix&quot;&gt; &lt;code&gt;SVGMatrix&lt;/code&gt; &lt;/a&gt;。パターンは、現在の&lt;a href=&quot;../canvasrenderingcontext2d/fillstyle&quot;&gt; &lt;code&gt;fillStyle&lt;/code&gt; &lt;/a&gt;として設定した場合に適用され、たとえば&lt;a href=&quot;../canvasrenderingcontext2d/fillrect&quot;&gt; &lt;code&gt;fillRect()&lt;/code&gt; &lt;/a&gt;メソッドを使用したときにキャンバスに描画されます。</target>
        </trans-unit>
        <trans-unit id="b14908e4186fb5108c3f152eb63f67a2fca3ac54" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;setTransform&lt;/code&gt; method.</source>
          <target state="translated">これは、 &lt;code&gt;setTransform&lt;/code&gt; メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="a444299d9d6f5f5422217df7e616de4dbb9b9d9c" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;transform&lt;/code&gt; method.</source>
          <target state="translated">これは、 &lt;code&gt;transform&lt;/code&gt; メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="ffc2e84c8b243a932de131e3ab573a1cc2da7d06" translate="yes" xml:space="preserve">
          <source>This is just a simple code snippet which uses the &lt;code&gt;translate&lt;/code&gt; method.</source>
          <target state="translated">これは、 &lt;code&gt;translate&lt;/code&gt; メソッドを使用する単純なコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="229e238604ebe01282140f9a3caf3183189e0bde" translate="yes" xml:space="preserve">
          <source>This is just an HTTP response of course, not the actual JSON. To extract the JSON body content from the response, we use the &lt;a href=&quot;../body/json&quot;&gt;&lt;code&gt;json()&lt;/code&gt;&lt;/a&gt; method (defined on the &lt;a href=&quot;../body&quot;&gt;&lt;code&gt;Body&lt;/code&gt;&lt;/a&gt; mixin, which is implemented by both the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects.)</source>
          <target state="translated">もちろん、これは単なるHTTP応答であり、実際のJSONではありません。応答からJSON本文コンテンツを抽出するには、&lt;a href=&quot;../body/json&quot;&gt; &lt;code&gt;json()&lt;/code&gt; &lt;/a&gt;メソッドを使用します（&lt;a href=&quot;../body&quot;&gt; &lt;code&gt;Body&lt;/code&gt; &lt;/a&gt;ミックスインで定義され、&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;オブジェクトの両方によって実装されます）。</target>
        </trans-unit>
        <trans-unit id="e1e3aee3164a54c9ee3d809a8319f6d71aafc334" translate="yes" xml:space="preserve">
          <source>This is like trying to mail a package to your friend Michelle by labeling it &amp;ldquo;Michelle&amp;rdquo; and dropping it in a mailbox when you don't know her address. You need to look up her address and include it on the package, or she'll wind up wondering why you forgot her birthday again.</source>
          <target state="translated">これは、「ミシェル」というラベルを付けて友達のミシェルにパッケージを郵送し、彼女の住所がわからないときにメールボックスにドロップするようなものです。彼女の住所を調べてパッケージに含める必要があります。そうしないと、なぜ彼女が誕生日を忘れたのかと疑問に思われるでしょう。</target>
        </trans-unit>
        <trans-unit id="c697277d0e8f2b70117b656a2803cb1617c7d95a" translate="yes" xml:space="preserve">
          <source>This is no longer necessary, however; &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt; and other methods which take SDP as input now directly accept an object conforming to the &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; dictionary, so you don't have to instantiate an &lt;code&gt;RTCSessionDescription&lt;/code&gt; yourself.</source>
          <target state="translated">ただし、これはもう必要ありません。&lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt;およびSDPを入力として受け取る他のメソッドは、 &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; 辞書に準拠するオブジェクトを直接受け入れるようになったため、 &lt;code&gt;RTCSessionDescription&lt;/code&gt; を自分でインスタンス化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="f41bbce367b59235e06d69bafad9c7146f0021ab" translate="yes" xml:space="preserve">
          <source>This is normally a simple recording of as-close-to-an-impulse as can be found in the space you want to model. For example, if you want to model the reverb in your bathroom, you might set up a microphone near the door to record the sound of a balloon pop or synthesized impulse from the sink. That audio recording could then used as the buffer.</source>
          <target state="translated">これは通常、モデル化したい空間にあるインパルスに近い音を簡単に録音したものです。例えば、バスルームのリバーブをモデリングしたい場合、ドアの近くにマイクを設置して、シンクからの風船の破裂音やシンセサイザーによるインパルスの音を録音することができます。そのオーディオ録音をバッファとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="e1ddd080aa941c9e326df72670aaf78b5e4b4940" translate="yes" xml:space="preserve">
          <source>This is normally used to access individual rules like this:</source>
          <target state="translated">これは通常、このような個別のルールにアクセスするために使用されます。</target>
        </trans-unit>
        <trans-unit id="2afc6a36b3e71a5e99f84ece7df7592894ec0353" translate="yes" xml:space="preserve">
          <source>This is not a computed value that is the result of a namespace lookup based on an examination of the namespace declarations in scope. The namespace URI of a node is frozen at the node creation time.</source>
          <target state="translated">これは、スコープ内の名前空間宣言を調べて名前空間を検索した結果として計算された値ではありません。ノードの名前空間 URI は、ノード作成時に凍結されます。</target>
        </trans-unit>
        <trans-unit id="a865b110b925f85943845116679b84c13a707520" translate="yes" xml:space="preserve">
          <source>This is not a computed value that is the result of a namespace lookup based on an examination of the namespace declarations in scope. The namespace URI of an attribute is frozen at the attribute creation time.</source>
          <target state="translated">これは、スコープ内の名前空間宣言の検査に基づく名前空間検索の結果として計算された値ではありません。属性の名前空間 URI は、属性作成時に凍結されます。</target>
        </trans-unit>
        <trans-unit id="afcd408c5e7776388b8e962529a0f4e6ebec88f8" translate="yes" xml:space="preserve">
          <source>This is not a problem as such. It is just that different APIs that exhibit this kind of behavior were doing it inconsistently with the behavior defined in the spec, which could lead to problems further down the line.</source>
          <target state="translated">これは問題ではありません。ただ、この種の動作を示す異なる API が仕様で定義された動作と矛盾した動作をしていただけで、この先の問題につながる可能性があります。</target>
        </trans-unit>
        <trans-unit id="cb2a598318bee8d8268b69874d056d53b600b2dc" translate="yes" xml:space="preserve">
          <source>This is obtained by starting with the time at which loading of the DOM and its dependencies is complete (&lt;a href=&quot;performancetiming/domcomplete&quot;&gt;&lt;code&gt;domComplete&lt;/code&gt;&lt;/a&gt;) and subtracting from it the time at which parsing of the DOM began (&lt;a href=&quot;performancetiming/domloading&quot;&gt;&lt;code&gt;domLoading&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">これは、DOMとその依存関係の読み込みが完了した時刻（&lt;a href=&quot;performancetiming/domloading&quot;&gt; &lt;code&gt;domLoading&lt;/code&gt; &lt;/a&gt;）から開始し、DOMの解析が開始された時刻（&lt;a href=&quot;performancetiming/domcomplete&quot;&gt; &lt;code&gt;domComplete&lt;/code&gt; &lt;/a&gt;）から差し引くことによって取得されます。</target>
        </trans-unit>
        <trans-unit id="d3da5cd1f5df272bf6c70a88f755bc2a5d2dd93d" translate="yes" xml:space="preserve">
          <source>This is one of the two properties, the other being &lt;a href=&quot;height&quot;&gt;&lt;code&gt;HTMLCanvasElement.height&lt;/code&gt;&lt;/a&gt;, that controls the size of the canvas.</source>
          <target state="translated">これは2つのプロパティの1つで、もう1つは&lt;a href=&quot;height&quot;&gt; &lt;code&gt;HTMLCanvasElement.height&lt;/code&gt; &lt;/a&gt;で、キャンバスのサイズを制御します。</target>
        </trans-unit>
        <trans-unit id="5d2fdc6183fbe2f98918063d2a09acedc27bc71a" translate="yes" xml:space="preserve">
          <source>This is one of the two properties, the other being &lt;a href=&quot;width&quot;&gt;&lt;code&gt;HTMLCanvasElement.width&lt;/code&gt;&lt;/a&gt;, that controls the size of the canvas.</source>
          <target state="translated">これは2つのプロパティの1つで、もう1つは&lt;a href=&quot;width&quot;&gt; &lt;code&gt;HTMLCanvasElement.width&lt;/code&gt; &lt;/a&gt;で、キャンバスのサイズを制御します。</target>
        </trans-unit>
        <trans-unit id="cd7e436fe3453f76112d70786e86d8c04dbaefb1" translate="yes" xml:space="preserve">
          <source>This is pretty useful, as request and response bodies are one use only. Making a copy like this allows you to make use of the request/response again, while varying the &lt;code&gt;init&lt;/code&gt; options if desired. The copy must be made before the body is read, and reading the body in the copy will also mark it as read in the original request.</source>
          <target state="translated">リクエストとレスポンスの本文は1つの使用のみであるため、これは非常に便利です。このようなコピーを作成すると、必要に応じて &lt;code&gt;init&lt;/code&gt; オプションを変更しながら、リクエスト/レスポンスを再度利用できます。コピーは本文が読み取られる前に作成する必要があり、コピーで本文を読み取ると、元のリクエストで読み取られたものとしてマークされます。</target>
        </trans-unit>
        <trans-unit id="2e1c5bab07c3dd7dc31f632bd6aa9347f7913ffe" translate="yes" xml:space="preserve">
          <source>This is quite straightforward. We grab references to all the page elements we'll need to access, then set &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;event listeners&lt;/code&gt;&lt;/a&gt; on the three buttons.</source>
          <target state="translated">これは非常に簡単です。アクセスする必要があるすべてのページ要素への参照を取得し、3つのボタンに&lt;a href=&quot;../eventlistener&quot;&gt; &lt;code&gt;event listeners&lt;/code&gt; &lt;/a&gt;を設定します。</target>
        </trans-unit>
        <trans-unit id="ccf5d7993362d5aab055af6d903ea2e3ec14e515" translate="yes" xml:space="preserve">
          <source>This is really useful &amp;mdash; now we can start to harness the power of the audio param methods on the gain value. We can set a value at a certain time, or we can change it &lt;em&gt;over&lt;/em&gt; time with methods such as &lt;a href=&quot;../audioparam/linearramptovalueattime&quot;&gt;&lt;code&gt;AudioParam.linearRampToValueAtTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは非常に便利です。これで、オーディオparamメソッドのパワーをゲイン値に利用できるようになりました。特定の時間に値を設定したり、&lt;a href=&quot;../audioparam/linearramptovalueattime&quot;&gt; &lt;code&gt;AudioParam.linearRampToValueAtTime&lt;/code&gt; &lt;/a&gt;などのメソッドを使用&lt;em&gt;して&lt;/em&gt;時間の経過とともに値を変更したりできます。</target>
        </trans-unit>
        <trans-unit id="2063ffdacb212652953a779f0d9ef0305d0956f9" translate="yes" xml:space="preserve">
          <source>This is redundant with an equivalent overload of &lt;code&gt;drawImage&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;drawImage&lt;/code&gt; の同等のオーバーロードで冗長です。</target>
        </trans-unit>
        <trans-unit id="66ed093a2d77f8cf53ca4f3919b2a4dfaea0f908" translate="yes" xml:space="preserve">
          <source>This is straightforward, and we'll see how it ties together when we get into the JavaScript code.</source>
          <target state="translated">これは簡単なことで、JavaScriptのコードに入ったときにどのように結びつくかを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="2dbbf4d8c81872501aec7c3c8233293205e49787" translate="yes" xml:space="preserve">
          <source>This is supported in modern browsers including Chrome, and Firefox 52+. See &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types#noopener&quot;&gt;rel=&quot;noopener&quot;&lt;/a&gt;&lt;/code&gt; for more information and for browser compatibility details, including information about ancillary effects.</source>
          <target state="translated">これは、ChromeやFirefox 52以降を含む最新のブラウザでサポートされています。詳細およびブラウザの互換性の詳細（補助的な効果に関する情報を含む）については、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types#noopener&quot;&gt;rel=&quot;noopener&quot;&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="660c06ef690e44bb2c33fe2290d5d37fe947ac6c" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;pname&lt;/code&gt; argument to the &lt;a href=&quot;webglrenderingcontext/getparameter&quot;&gt;&lt;code&gt;gl.getParameter()&lt;/code&gt;&lt;/a&gt; call, and it returns the maximum available anisotropy.</source>
          <target state="translated">これは&lt;a href=&quot;webglrenderingcontext/getparameter&quot;&gt; &lt;code&gt;gl.getParameter()&lt;/code&gt; &lt;/a&gt;呼び出しの &lt;code&gt;pname&lt;/code&gt; 引数であり、利用可能な最大の異方性を返します。</target>
        </trans-unit>
        <trans-unit id="8cf29fb9242190fea5bc3da406db0a33be4a21c1" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;pname&lt;/code&gt; argument to the &lt;a href=&quot;webglrenderingcontext/gettexparameter&quot;&gt;&lt;code&gt;gl.getTexParameter()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt;&lt;code&gt;gl.texParameterf()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt;&lt;code&gt;gl.texParameteri()&lt;/code&gt;&lt;/a&gt; calls and sets the desired maximum anisotropy for a texture.</source>
          <target state="translated">これは、 &lt;code&gt;pname&lt;/code&gt; &lt;a href=&quot;webglrenderingcontext/gettexparameter&quot;&gt; &lt;code&gt;gl.getTexParameter()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt; &lt;code&gt;gl.texParameterf()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt; &lt;code&gt;gl.texParameteri()&lt;/code&gt; &lt;/a&gt;呼び出しのpname引数であり、テクスチャに必要な最大異方性を設定します。</target>
        </trans-unit>
        <trans-unit id="072720f891e95dc247a8f1c48d722b468d93925c" translate="yes" xml:space="preserve">
          <source>This is the Push API spec, but note that &lt;code&gt;getKey()&lt;/code&gt; is not currently specified in here. It is currently Firefox-only experimental.</source>
          <target state="translated">これはPush API仕様ですが、現在 &lt;code&gt;getKey()&lt;/code&gt; はここでは指定されていないことに注意してください。現在、Firefoxのみの試験運用版です。</target>
        </trans-unit>
        <trans-unit id="a41ec980cd61b8e3f8b48a0f86f3ab50341c9acd" translate="yes" xml:space="preserve">
          <source>This is the base interface of &lt;a href=&quot;authenticatorattestationresponse&quot;&gt;&lt;code&gt;AuthenticatorAttestationResponse&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;authenticatorassertionresponse&quot;&gt;&lt;code&gt;AuthenticatorAssertionResponse&lt;/code&gt;&lt;/a&gt;, which are part of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot;&gt;&lt;code&gt;PublicKeyCredential.response&lt;/code&gt;&lt;/a&gt; resulting from &lt;a href=&quot;credentialscontainer/create&quot;&gt;create()&lt;/a&gt; and &lt;a href=&quot;credentialscontainer/get&quot;&gt;get()&lt;/a&gt;, respectively. It contains the &lt;a href=&quot;authenticatorresponse/clientdatajson&quot;&gt;&lt;code&gt;AuthenticatorResponse.clientDataJSON&lt;/code&gt;&lt;/a&gt; that is inherited by those interfaces.</source>
          <target state="translated">これは&lt;a href=&quot;authenticatorattestationresponse&quot;&gt; &lt;code&gt;AuthenticatorAttestationResponse&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;authenticatorassertionresponse&quot;&gt; &lt;code&gt;AuthenticatorAssertionResponse&lt;/code&gt; の&lt;/a&gt;基本インターフェースであり、それぞれ&lt;a href=&quot;credentialscontainer/create&quot;&gt;create（）&lt;/a&gt;と&lt;a href=&quot;credentialscontainer/get&quot;&gt;get（）の&lt;/a&gt;結果である&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot;&gt; &lt;code&gt;PublicKeyCredential.response&lt;/code&gt; の&lt;/a&gt;一部です。これには、これらのインターフェースによって継承される&lt;a href=&quot;authenticatorresponse/clientdatajson&quot;&gt; &lt;code&gt;AuthenticatorResponse.clientDataJSON&lt;/code&gt; &lt;/a&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="3594d843e5201574505d1e44107e635a377eb0c3" translate="yes" xml:space="preserve">
          <source>This is the event type for &lt;code&gt;fetch&lt;/code&gt; events dispatched on the &lt;a href=&quot;serviceworkerglobalscope&quot;&gt;service worker global scope&lt;/a&gt;. It contains information about the fetch, including the request and how the receiver will treat the response. It provides the &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;event.respondWith()&lt;/code&gt;&lt;/a&gt; method, which allows us to provide a response to this fetch.</source>
          <target state="translated">これは、&lt;a href=&quot;serviceworkerglobalscope&quot;&gt;Service Workerグローバルスコープで&lt;/a&gt;ディスパッチされる &lt;code&gt;fetch&lt;/code&gt; イベントのイベントタイプです。これには、要求や受信者が応答を処理する方法など、フェッチに関する情報が含まれています。これは、このフェッチへの応答を提供できるようにする&lt;a href=&quot;fetchevent/respondwith&quot;&gt; &lt;code&gt;event.respondWith()&lt;/code&gt; &lt;/a&gt;メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="35582252ae5e3627600520a5e2c64b41dc1fd7c4" translate="yes" xml:space="preserve">
          <source>This is the framework for the entire site. At the top is the site's header region, contained within a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header&quot;&gt;&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;&lt;/a&gt; block. Below that, we define the site's sidebar as a list of links within an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside&quot;&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">これはサイト全体のフレームワークです。上部は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header&quot;&gt; &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; &lt;/a&gt;ブロック内に含まれるサイトのヘッダー領域です。その下では、サイトのサイドバーを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside&quot;&gt; &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; &lt;/a&gt;ブロック内のリンクのリストとして定義しています。</target>
        </trans-unit>
        <trans-unit id="a0e5b78198034f6d9e922053f5c07d4ed0387b50" translate="yes" xml:space="preserve">
          <source>This is the method you should use in modern web pages.</source>
          <target state="translated">これは、現代のWebページで使うべき方法です。</target>
        </trans-unit>
        <trans-unit id="349197d3f6cf26bc20217723c93d53146aaf385a" translate="yes" xml:space="preserve">
          <source>This is the most commonly used method of operation.</source>
          <target state="translated">これが一番よく使われている運用方法です。</target>
        </trans-unit>
        <trans-unit id="07a83e09fcf2ed21005dbc6b444d39807ddc446a" translate="yes" xml:space="preserve">
          <source>This is the preferred method of creating an audio source for Web Audio API from an audio track. This method only works on complete file data, not fragments of audio file data.</source>
          <target state="translated">この方法は、オーディオトラックからWeb Audio API用のオーディオソースを作成する際に推奨される方法です。この方法は、オーディオファイルの断片的なデータではなく、完全なファイルデータに対してのみ動作します。</target>
        </trans-unit>
        <trans-unit id="1514876aa97bac5e773d8bb322dab84cf18bdbf4" translate="yes" xml:space="preserve">
          <source>This is the second interface in WebVTT API.</source>
          <target state="translated">WebVTT APIの2つ目のインターフェースです。</target>
        </trans-unit>
        <trans-unit id="80287a70d400eaaaf470a289bcedea2cecca29e8" translate="yes" xml:space="preserve">
          <source>This is the simplest usage of asynchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt;.</source>
          <target state="translated">これは、非同期 &lt;code&gt;XMLHttpRequest&lt;/code&gt; の最も簡単な使用法です。</target>
        </trans-unit>
        <trans-unit id="b500a9962c740c2e6acf1bbe03212f37412ccea1" translate="yes" xml:space="preserve">
          <source>This is the standard pattern you&amp;rsquo;ll see when using stream readers:</source>
          <target state="translated">これは、ストリームリーダーを使用するときに表示される標準パターンです。</target>
        </trans-unit>
        <trans-unit id="7cd9cc4a87dea55200605cead0c1f057a09e18d9" translate="yes" xml:space="preserve">
          <source>This is the time, in seconds, between the browser requesting the host system to play a buffer and the time at which the first sample in the buffer is actually processed by the audio output device. It depends on the platform and the available hardware.</source>
          <target state="translated">これは、ブラウザがホストシステムにバッファの再生を要求してから、バッファ内の最初のサンプルが実際にオーディオ出力デバイスで処理されるまでの時間(秒単位)です。これはプラットフォームと利用可能なハードウェアに依存します。</target>
        </trans-unit>
        <trans-unit id="ca7b21faddbfd3cd893cfc10cede37ec119c3738" translate="yes" xml:space="preserve">
          <source>This is typically called after receiving an offer or answer from another peer over the signaling server. Keep in mind that if &lt;code&gt;setRemoteDescription()&lt;/code&gt; is called while a connection is already in place, it means renegotiation is underway (possibly to adapt to changing network conditions). Because descriptions will be exchanged until the two peers agree on a configuration, the description submitted by calling &lt;code&gt;setRemoteDescription()&lt;/code&gt; does not immediately take effect. Instead, the current connection configuration remains in place until negotiation is complete. Only then does the agreed-upon configuration take effect.</source>
          <target state="translated">これは通常、シグナリングサーバーを介して別のピアからオファーまたは応答を受信した後に呼び出されます。場合ことに注意してください &lt;code&gt;setRemoteDescription()&lt;/code&gt; 接続がすでに適所にあるとき、それは（おそらく変化するネットワーク条件に適応するために）再交渉が進行中であることを意味すると呼ばれています。説明は2つのピアが構成に同意するまで交換されるため、 &lt;code&gt;setRemoteDescription()&lt;/code&gt; を呼び出して送信された説明はすぐには有効になりません。代わりに、ネゴシエーションが完了するまで、現在の接続構成がそのまま残ります。その後、合意した構成が有効になります。</target>
        </trans-unit>
        <trans-unit id="b6bec1381d34be9be443b9d5cdf6c8a21bd1cf36" translate="yes" xml:space="preserve">
          <source>This is used to represent messages in:</source>
          <target state="translated">でメッセージを表現するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ceb736d587fd138ea4e18807b52e2c9b2da0b317" translate="yes" xml:space="preserve">
          <source>This is useful for allowing two readers to read a stream simultaneously, perhaps at different speeds. You might do this for example in a ServiceWorker if you want to fetch a response from the server and stream it to the browser, but also stream it to the ServiceWorker cache. Since a response body cannot be consumed more than once, you&amp;rsquo;d need two copies to do this.</source>
          <target state="translated">これは、2人のリーダーが、おそらく異なる速度で同時にストリームを読み取ることができるようにするのに役立ちます。たとえば、サーバーから応答をフェッチしてブラウザーにストリーミングするだけでなく、ServiceWorkerキャッシュにもストリーミングする場合は、ServiceWorkerでこれを行うことができます。応答本文は2回以上使用できないため、これを行うには2つのコピーが必要になります。</target>
        </trans-unit>
        <trans-unit id="a7825186d6862dd97f72f004ce2cd7184a71198c" translate="yes" xml:space="preserve">
          <source>This is useful for identifying &quot;magic window&quot; devices that are capable of 6DoF tracking but for which &lt;a href=&quot;../vrdisplay/requestpresent&quot;&gt;&lt;code&gt;VRDisplay.requestPresent()&lt;/code&gt;&lt;/a&gt; is not meaningful. If &lt;code&gt;canPresent&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, calls to &lt;a href=&quot;../vrdisplay/requestpresent&quot;&gt;&lt;code&gt;VRDisplay.requestPresent()&lt;/code&gt;&lt;/a&gt; will fail, and &lt;a href=&quot;../vrdisplay/geteyeparameters&quot;&gt;&lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">これは、6DoF追跡が可能であるが、&lt;a href=&quot;../vrdisplay/requestpresent&quot;&gt; &lt;code&gt;VRDisplay.requestPresent()&lt;/code&gt; &lt;/a&gt;が意味を持たない「マジックウィンドウ」デバイスを識別するのに役立ちます。 &lt;code&gt;canPresent&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、&lt;a href=&quot;../vrdisplay/requestpresent&quot;&gt; &lt;code&gt;VRDisplay.requestPresent()&lt;/code&gt; の&lt;/a&gt;呼び出しは失敗し、&lt;a href=&quot;../vrdisplay/geteyeparameters&quot;&gt; &lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8056ec6d999a26dbe73da51e463ee025d3b3698d" translate="yes" xml:space="preserve">
          <source>This is useful for sequencing animations based on the end time of another animation; note, however, that many of the sequence effectst that will benefit most from this property have not been defined in the specification yet. For now, its main purpose is to represent the value of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG&quot;&gt;SVG&lt;/a&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/min&quot;&gt;min&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="translated">これは、別のアニメーションの終了時間に基づいてアニメーションをシーケンスする場合に役立ちます。ただし、このプロパティから最も恩恵を受けるシーケンス効果の多くは、仕様ではまだ定義されていないことに注意してください。現時点では、その主な目的は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG&quot;&gt;SVGの&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/min&quot;&gt;min&lt;/a&gt;&lt;/code&gt; 属性の値を表すことです。</target>
        </trans-unit>
        <trans-unit id="6ba318f271222ce1d66e5862a3f86c1b83ad4da3" translate="yes" xml:space="preserve">
          <source>This is useful when dealing with the difference between rendering on a standard display versus a HiDPI or Retina display, which use more screen pixels to draw the same objects, resulting in a sharper image.</source>
          <target state="translated">これは、標準ディスプレイでレンダリングする場合と、同じオブジェクトを描画するためにより多くのスクリーンピクセルを使用するHiDPIまたはRetinaディスプレイでレンダリングする場合の違いを扱う際に便利です。</target>
        </trans-unit>
        <trans-unit id="0f8f4c9d7220f531615bbc83fc82843bc38b322d" translate="yes" xml:space="preserve">
          <source>This is very common in audio processing: it makes it easy to process each channel independently.</source>
          <target state="translated">これはオーディオ処理では非常に一般的なことで、各チャンネルを独立して処理することが容易になります。</target>
        </trans-unit>
        <trans-unit id="7f9a76180a21d5454390ab5890951bf4a66b1d5c" translate="yes" xml:space="preserve">
          <source>This is very similar to the previous function; the only real differences are that we draw a small square to mark the end and that when we call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;&lt;code&gt;Array.splice()&lt;/code&gt;&lt;/a&gt;, we simply remove the old entry from the ongoing touch list, without adding in the updated information. The result is that we stop tracking that touch point.</source>
          <target state="translated">これは前の関数とよく似ています。唯一の本当の違いは、終わりを示すために小さな正方形を描くことと、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt; &lt;code&gt;Array.splice()&lt;/code&gt; &lt;/a&gt;を呼び出すときに、更新された情報を追加せずに、進行中のタッチリストから単に古いエントリを削除することです。その結果、そのタッチポイントの追跡が停止します。</target>
        </trans-unit>
        <trans-unit id="6b0165b29df4e08d9136138c6f810b1572678f3c" translate="yes" xml:space="preserve">
          <source>This is what the DOM Level 3 specification says should happen. There are some caveats, however, as described below.</source>
          <target state="translated">これは、DOM Level 3 の仕様ではこうあるべきだとされています。しかし、以下に説明するように、いくつかの注意点があります。</target>
        </trans-unit>
        <trans-unit id="39675c4e45d599fda797a65c7b916602dac46cb9" translate="yes" xml:space="preserve">
          <source>This is where &lt;code&gt;&lt;strong&gt;sendBeacon()&lt;/strong&gt;&lt;/code&gt; comes in. By using the &lt;code&gt;sendBeacon()&lt;/code&gt; method, the data is transmitted asynchronously to the web server when the User Agent has an opportunity to do so, without delaying the unload or affecting the performance of the next navigation. This solves all of the problems with submission of analytics data: the data is sent reliably, it's sent asynchronously, and it doesn't impact the loading of the next page. In addition, the code is actually simpler to write than any of these other techniques!</source>
          <target state="translated">これが &lt;code&gt;&lt;strong&gt;sendBeacon()&lt;/strong&gt;&lt;/code&gt; の出番です &lt;code&gt;sendBeacon()&lt;/code&gt; メソッドを使用することにより、ユーザーエージェントが送信する機会があれば、アンロードを遅らせたり、次のナビゲーションのパフォーマンスに影響を与えたりすることなく、データが非同期でWebサーバーに送信されます。これにより、分析データの送信に関するすべての問題が解決されます。データは確実に送信され、非同期で送信され、次のページの読み込みに影響を与えません。さらに、これらのコードは他のどのテクニックよりも実際に書くのが簡単です！</target>
        </trans-unit>
        <trans-unit id="e6251fecbef0c30ec5441b768ebaf7d3ae154e3a" translate="yes" xml:space="preserve">
          <source>This is where signaling comes in.</source>
          <target state="translated">ここでシグナルの出番です。</target>
        </trans-unit>
        <trans-unit id="e7f368f8f6ee9bcb8a0b4fa5889af45202210079" translate="yes" xml:space="preserve">
          <source>This is where the main mixin is defined.</source>
          <target state="translated">ここでメインのミキシンが定義されています。</target>
        </trans-unit>
        <trans-unit id="84de4944c6bd2e5320bfd6370644873a76b52438" translate="yes" xml:space="preserve">
          <source>This is where we call the &lt;code&gt;clearphoto()&lt;/code&gt; method we'll describe below in the section &lt;a href=&quot;#Clearing_the_photo_box&quot;&gt;Clearing the photo box&lt;/a&gt;.</source>
          <target state="translated">これは、以下のセクション&lt;a href=&quot;#Clearing_the_photo_box&quot;&gt;「フォトボックスのクリア&lt;/a&gt;」で説明する &lt;code&gt;clearphoto()&lt;/code&gt; メソッドを呼び出す場所です。</target>
        </trans-unit>
        <trans-unit id="9d3a27d0e751a416c635a1d79ffbe349874be720" translate="yes" xml:space="preserve">
          <source>This is, of course, an approximation, since latency can vary for many reasons including CPU, transmission, and storage overhead.</source>
          <target state="translated">もちろん、CPU、送信、ストレージのオーバーヘッドなど、さまざまな理由でレイテンシが変化することがあるので、これは近似値です。</target>
        </trans-unit>
        <trans-unit id="cee4e8750c9b461e92214f6d0f231d9ec782af3c" translate="yes" xml:space="preserve">
          <source>This iterates over the changed touches as well, but it looks in our cached touch information array for the previous information about each touch in order to determine the starting point for each touch's new line segment to be drawn. This is done by looking at each touch's &lt;a href=&quot;touch/identifier&quot;&gt;&lt;code&gt;Touch.identifier&lt;/code&gt;&lt;/a&gt; property. This property is a unique integer for each touch, and remains consistent for each event during the duration of each finger's contact with the surface.</source>
          <target state="translated">これは変更されたタッチについても繰り返しますが、描画される各タッチの新しいラインセグメントの開始点を決定するために、キャッシュされたタッチ情報配列で各タッチに関する以前の情報を探します。これは、各タッチの&lt;a href=&quot;touch/identifier&quot;&gt; &lt;code&gt;Touch.identifier&lt;/code&gt; &lt;/a&gt;プロパティを調べることによって行われます。このプロパティは各タッチの一意の整数であり、各指が表面に接触している間、各イベントで一貫しています。</target>
        </trans-unit>
        <trans-unit id="fbfaec7ab12601aad9862651c2ca0b186c3ee0b8" translate="yes" xml:space="preserve">
          <source>This just includes plain objects (e.g. from object literals)</source>
          <target state="translated">これには、プレーンなオブジェクト(例えばオブジェクトリテラルから)が含まれています。</target>
        </trans-unit>
        <trans-unit id="244c3b60f0ad09f6a77846d4efe509af24e78ad7" translate="yes" xml:space="preserve">
          <source>This kind of functionality was previously achieved using &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;. Fetch provides a better alternative that can be easily used by other technologies such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;&lt;code&gt;Service Workers&lt;/code&gt;&lt;/a&gt;. Fetch also provides a single logical place to define other HTTP-related concepts such as CORS and extensions to HTTP.</source>
          <target state="translated">この種の機能は、以前は&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;を使用して実現されていました。Fetchは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt; &lt;code&gt;Service Workers&lt;/code&gt; &lt;/a&gt;などの他のテクノロジーで簡単に使用できる、より優れた代替手段を提供します。Fetchは、CORSやHTTPの拡張など、他のHTTP関連の概念を定義するための単一の論理的な場所も提供します。</target>
        </trans-unit>
        <trans-unit id="6bd1e9e736b6daafe0f0668004710e4fc6f7857a" translate="yes" xml:space="preserve">
          <source>This last box doesn't get drawn because it's outside of clip space. The depth is outside of the -1.0 to 1.0 range.</source>
          <target state="translated">この最後のボックスはクリップスペースの外にあるので描画されません。深さは-1.0~1.0の範囲外です。</target>
        </trans-unit>
        <trans-unit id="9efeadf81703ddb8b393cb80c770a6dcb91bf3af" translate="yes" xml:space="preserve">
          <source>This lets us get the coordinates of the previous position of each touch and use the appropriate context methods to draw a line segment joining the two positions together.</source>
          <target state="translated">これにより、各タッチの前の位置の座標を取得し、適切なコンテキストメソッドを使用して2つの位置を繋ぐ線分を描くことができます。</target>
        </trans-unit>
        <trans-unit id="85171c44f2cc3247b0c009a94d60e54f346934c3" translate="yes" xml:space="preserve">
          <source>This lets you augment the form's data before sending it along, to include additional information that's not necessarily user-editable.</source>
          <target state="translated">これにより、フォームを送信する前にフォームのデータを拡張し、必ずしもユーザーが編集可能とは限らない追加情報を含めることができます。</target>
        </trans-unit>
        <trans-unit id="5523160c6932472ab83fb6c2017e516d4b13e1a5" translate="yes" xml:space="preserve">
          <source>This lets you look at the HTML markup of the element's content nodes.</source>
          <target state="translated">これにより、要素のコンテンツノードのHTMLマークアップを見ることができます。</target>
        </trans-unit>
        <trans-unit id="d58e79a2b2eb0ef7a175bf101c6a66ace485d379" translate="yes" xml:space="preserve">
          <source>This limitation is important to consider when deciding where place visuals on the app canvas &amp;mdash; too far towards the edge of the cone of focus can lead to eye strain much more quickly. There is a very interesting post about this (amongst other things) at MozVR.com &amp;mdash; see &lt;a href=&quot;http://mozvr.com/posts/quick-vr-prototypes/&quot;&gt;Quick VR Mockups with Illustrator&lt;/a&gt;.</source>
          <target state="translated">この制限は、ビジュアルをアプリキャンバス上に配置する場所を決定する際に検討することが重要です。フォーカスコーンの端に近すぎると、目の疲れがはるかに早くなります。MozVR.comには、（特に）これに関する非常に興味深い投稿があります。Illustratorを使用した&lt;a href=&quot;http://mozvr.com/posts/quick-vr-prototypes/&quot;&gt;Quick VR Mockupsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8dde23633a2b9ebde11599e9f2bb2e6966334dd1" translate="yes" xml:space="preserve">
          <source>This loop iterates over all the files in the file list.</source>
          <target state="translated">このループは、ファイルリスト内のすべてのファイルを繰り返し処理します。</target>
        </trans-unit>
        <trans-unit id="08307c3b59cf464b3a4dc09b087903224e782d24" translate="yes" xml:space="preserve">
          <source>This makes it possible to observe a document to detect when its media queries change, instead of polling the values periodically, and allows you to programmatically make changes to a document based on media query status.</source>
          <target state="translated">これにより、定期的に値をポーリングするのではなく、ドキュメントを観察してメディアクエリが変更されたときに検出することが可能になり、メディアクエリの状態に基づいてドキュメントにプログラム的に変更を加えることができます。</target>
        </trans-unit>
        <trans-unit id="a2b5e089dae007a89da6d5679b02224f142f1dff" translate="yes" xml:space="preserve">
          <source>This makes it possible to observe a document to detect when its media queries change, instead of polling the values periodically, if you need to detect changes to the values of media queries on a document.</source>
          <target state="translated">これにより、ドキュメント上のメディアクエリの値の変更を検出する必要がある場合に、定期的に値をポーリングするのではなく、ドキュメントを観察してメディアクエリの変更を検出することが可能になります。</target>
        </trans-unit>
        <trans-unit id="2474475a9f1ea386edf5d7de023eb67b86534910" translate="yes" xml:space="preserve">
          <source>This makes up quite a few basics that you would need to start to add audio to your website or web app. There's a lot more functionality to the Web Audio API, but once you've grasped the concept of nodes and putting your audio graph together, we can move on to looking at more complex functionality.</source>
          <target state="translated">これで、WebサイトやWebアプリにオーディオを追加するために必要な基本的なことがわかりました。Web Audio APIには他にもたくさんの機能がありますが、ノードの概念を理解し、オーディオグラフをまとめることができれば、次はもっと複雑な機能を見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="83e88d5a6cd075ea278fe9e6c906c76f6e96b93e" translate="yes" xml:space="preserve">
          <source>This makes usage of non-textual data much easier than it was with XHR.</source>
          <target state="translated">これにより、非テキストデータの使用がXHRよりもはるかに簡単になりました。</target>
        </trans-unit>
        <trans-unit id="ce8d2a0b6d6b27f3ad8290c65df8d4b1d4192a23" translate="yes" xml:space="preserve">
          <source>This may involve some degree of recognition, which doesn't meet or exceed the &lt;a href=&quot;../speechrecognitionalternative/confidence&quot;&gt;&lt;code&gt;confidence&lt;/code&gt;&lt;/a&gt; threshold.</source>
          <target state="translated">これにはある程度の認識が含まれる場合があり、&lt;a href=&quot;../speechrecognitionalternative/confidence&quot;&gt; &lt;code&gt;confidence&lt;/code&gt; &lt;/a&gt;しきい値を超えないか、超えません。</target>
        </trans-unit>
        <trans-unit id="783ff634f8f961d451623e83d9eadd747f309736" translate="yes" xml:space="preserve">
          <source>This may occur when speech synthesis is being done on the server-side and the voices list is being determined asynchronously, or when client-side voices are installed/uninstalled while a speech synthesis application is running.</source>
          <target state="translated">これは、音声合成がサーバー側で行われていて、ボイスリストが非同期に決定されている場合や、音声合成アプリケーションの実行中にクライアント側のボイスがインストール/アンインストールされている場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9ae4977c3d999998aedc870962a42635540362be" translate="yes" xml:space="preserve">
          <source>This may trigger the sender to send a full frame in order to allow the receiver to re-synchronize, since lost data may be an irrecoverable situation for decoding media. However, the primary purpose of this message is to allow the sender to consider techniques to mitigate network performance issues. This is often achieved by methods such as increasing the compression, lowering resolution, or finding other ways to reduce the bit rate of the stream.</source>
          <target state="translated">これは、データの喪失はデコードメディアにとって回復不可能な状況である可能性があるため、受信者が再同期できるようにするために、送信者がフルフレームを送信することを誘発する可能性がある。しかし、このメッセージの主な目的は、送信者がネットワーク・パフォーマンスの問題を軽減するための技術を検討することを可能にすることである。これは、圧縮率を上げる、解像度を下げる、またはストリームのビットレートを下げる他の方法を見つけるなどの方法によって達成されることが多い。</target>
        </trans-unit>
        <trans-unit id="b44f855fc88a0291f46242d4ceb0a296b476c100" translate="yes" xml:space="preserve">
          <source>This means RTP can be &amp;mdash; but is not required to be &amp;mdash; used atop &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UDP&quot;&gt;UDP&lt;/a&gt; for its performance as well as its multiplexing and checksum features.</source>
          <target state="translated">つまり、RTPは、そのパフォーマンスと多重化およびチェックサム機能だけでなく、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UDP&quot;&gt;UDPの&lt;/a&gt;上でも使用できます（必須ではありません）。</target>
        </trans-unit>
        <trans-unit id="b55108d0f6f21b4e31b592d1d987e8cf0b5cf0ca" translate="yes" xml:space="preserve">
          <source>This means that a node can't be in two points of the document simultaneously. So if the node already has a parent, the node is first removed, then appended at the new position. The &lt;a href=&quot;clonenode&quot;&gt;&lt;code&gt;Node.cloneNode()&lt;/code&gt;&lt;/a&gt; can be used to make a copy of the node before appending it under the new parent. Note that the copies made with &lt;code&gt;cloneNode&lt;/code&gt; will not be automatically kept in sync.</source>
          <target state="translated">つまり、ノードがドキュメントの2つのポイントに同時に存在することはできません。したがって、ノードにすでに親がある場合、ノードは最初に削除され、次に新しい位置に追加されます。&lt;a href=&quot;clonenode&quot;&gt; &lt;code&gt;Node.cloneNode()&lt;/code&gt; &lt;/a&gt;新しい親の下に追加する前に、ノードのコピーを作成するために使用することができます。 &lt;code&gt;cloneNode&lt;/code&gt; で作成されたコピーは自動的に同期されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="2c768088e66c31a2ec24bcb58045d89f2d90f2b6" translate="yes" xml:space="preserve">
          <source>This means that a node can't be in two points of the document simultaneously. So if the node already has a parent, the node is first removed, then inserted at the new position. The &lt;a href=&quot;clonenode&quot;&gt;&lt;code&gt;Node.cloneNode()&lt;/code&gt;&lt;/a&gt; can be used to make a copy of the node before appending it under the new parent. Note that the copies made with &lt;code&gt;cloneNode&lt;/code&gt; will not be automatically kept in sync.</source>
          <target state="translated">つまり、ノードがドキュメントの2つのポイントに同時に存在することはできません。したがって、ノードにすでに親がある場合、ノードは最初に削除され、次に新しい位置に挿入されます。&lt;a href=&quot;clonenode&quot;&gt; &lt;code&gt;Node.cloneNode()&lt;/code&gt; &lt;/a&gt;新しい親の下に追加する前に、ノードのコピーを作成するために使用することができます。 &lt;code&gt;cloneNode&lt;/code&gt; で作成されたコピーは自動的に同期されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8ed17679d732b24b551979d33d656717355f4ebf" translate="yes" xml:space="preserve">
          <source>This means that in theory if you keep track of the &lt;a href=&quot;../mutationrecord&quot;&gt;&lt;code&gt;MutationRecord&lt;/code&gt;&lt;/a&gt; objects describing the changes that occur, and , you should be able to &quot;undo&quot; the changes, rewinding the DOM back to its initial state.</source>
          <target state="translated">つまり、理論的には、発生する変更を記述した&lt;a href=&quot;../mutationrecord&quot;&gt; &lt;code&gt;MutationRecord&lt;/code&gt; &lt;/a&gt;オブジェクトを追跡し、変更を「元に戻し」、DOMを初期状態に巻き戻すことができるはずです。</target>
        </trans-unit>
        <trans-unit id="474afaa1f7af99a7af7c5b1b9e6e2345951d9c2b" translate="yes" xml:space="preserve">
          <source>This means that you have created a node of the type TEXT_NODE (a piece of text) whose text data is &quot;world&quot;, and myTextNode is your reference to this node object. To insert this text into your HTML page, you need to make this text node a child of some other node element.</source>
          <target state="translated">これは、テキストデータが &quot;world &quot;であるTEXT_NODE型のノード(テキストの一部)が作成されたことを意味し、myTextNodeはこのノードオブジェクトへの参照です。このテキストをHTMLページに挿入するには、このテキストノードを他のノード要素の子にする必要があります。</target>
        </trans-unit>
        <trans-unit id="1a03f296d21b28938e20a3d204c7b2a949e6a35a" translate="yes" xml:space="preserve">
          <source>This means, for example, if a service worker intercepts a stylesheet or worker script, then the provided &lt;a href=&quot;../response/url&quot;&gt;&lt;code&gt;Response.url&lt;/code&gt;&lt;/a&gt; will be used to resolve any relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../workerglobalscope/importscripts&quot;&gt;&lt;code&gt;importScripts()&lt;/code&gt;&lt;/a&gt; subresource loads (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1222008&quot;&gt;bug 1222008&lt;/a&gt;).</source>
          <target state="translated">つまり、たとえば、サービスワーカーがスタイルシートまたはワーカースクリプトをインターセプトした場合、提供された&lt;a href=&quot;../response/url&quot;&gt; &lt;code&gt;Response.url&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@import&quot;&gt; &lt;code&gt;@import&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../workerglobalscope/importscripts&quot;&gt; &lt;code&gt;importScripts()&lt;/code&gt; &lt;/a&gt;またはimportScripts（）サブリソースの相対的な読み込みを解決します（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1222008&quot;&gt;バグ1222008&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="28cb9ed1af89944b25d663160753e80c8594cf04" translate="yes" xml:space="preserve">
          <source>This method addresses the needs of analytics and diagnostics code that typically attempts to send data to a web server prior to the unloading of the document. Sending the data any sooner may result in a missed opportunity to gather data. However, ensuring that the data has been sent during the unloading of a document is something that has traditionally been difficult for developers, because user agents typically ignore asynchronous &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;s made in an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; handler.</source>
          <target state="translated">この方法は、通常、ドキュメントをアンロードする前にWebサーバーにデータを送信しようとする分析および診断コードのニーズに対応します。より早くデータを送信すると、データを収集する機会が失われる可能性があります。ただし、ユーザーエージェントは通常、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; ハンドラーで作成された非同期の&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; を&lt;/a&gt;無視するため、ドキュメントのアンロード中にデータが送信されたことを確認することは、開発者にとって伝統的に困難でした。</target>
        </trans-unit>
        <trans-unit id="5f89f555ecebf53cb5caa3db92f85ab327c5aa87" translate="yes" xml:space="preserve">
          <source>This method can be called &lt;em&gt;only&lt;/em&gt; within a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBTransaction#VERSION_CHANGE&quot;&gt;&lt;code&gt;versionchange&lt;/code&gt;&lt;/a&gt; transaction.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBTransaction#VERSION_CHANGE&quot;&gt; &lt;code&gt;versionchange&lt;/code&gt; &lt;/a&gt;トランザクション内で&lt;em&gt;のみ&lt;/em&gt;呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="b4231ef05a24bf08fa0ea080bca3db0b5eea2905" translate="yes" xml:space="preserve">
          <source>This method can only be used in the handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event, because that's the only time the drag operation's data store is writeable.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベントのハンドラーでのみ使用できます。これは、ドラッグ操作のデータストアが書き込み可能なときだけだからです。</target>
        </trans-unit>
        <trans-unit id="f6213c1b26be5ff3c7c9138c6d33b4c0021e7e9c" translate="yes" xml:space="preserve">
          <source>This method can raise a DatabaseException with the following code:</source>
          <target state="translated">このメソッドは以下のコードでDatabaseExceptionを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="f119e66383a7a3e03a962033f5cac341698e06b4" translate="yes" xml:space="preserve">
          <source>This method can raise a IDBDatabaseException with the following code:</source>
          <target state="translated">このメソッドは、以下のコードでIDBDatabaseExceptionを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="18b8e69eb29d867b633aa27640672f82c4d8cfac" translate="yes" xml:space="preserve">
          <source>This method can raise a IDBDatabaseException with the following codes:</source>
          <target state="translated">このメソッドは、以下のコードでIDBDatabaseExceptionを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="c595112c947852a9f4af171b821ba94930bd6f50" translate="yes" xml:space="preserve">
          <source>This method can raise an IDBDatabaseException with the following code:</source>
          <target state="translated">このメソッドは、以下のコードでIDBDatabaseExceptionを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="65b7e6f40e65f041b51166cf6bc11feae45b8b8e" translate="yes" xml:space="preserve">
          <source>This method can raise an IDBDatabaseException with the following codes:</source>
          <target state="translated">このメソッドは、以下のコードでIDBDatabaseExceptionを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="b1482ba41ea0024b45881af8dac3fa1feeed3cea" translate="yes" xml:space="preserve">
          <source>This method clears the action specified by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/setImmediate&quot;&gt;&lt;code&gt;window.setImmediate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/setImmediate&quot;&gt; &lt;code&gt;window.setImmediate&lt;/code&gt; で&lt;/a&gt;指定されたアクションをクリアします。</target>
        </trans-unit>
        <trans-unit id="e209efdd024e25923af2a2461cc73719073da79a" translate="yes" xml:space="preserve">
          <source>This method collects credentials by calling the &quot;CollectFromCredentialStore&quot; method for each credential type allowed by the &lt;code&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/code&gt; argument. For example: if options.password exists, then the &lt;a href=&quot;../passwordcredential&quot;&gt;&lt;code&gt;PasswordCredential&lt;/code&gt;&lt;/a&gt;.[[CollectFromCredentialStore]] is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/code&gt; 引数で許可されている資格情報タイプごとに「CollectFromCredentialStore」メソッドを呼び出して資格情報を収集します。例：options.passwordが存在する場合、&lt;a href=&quot;../passwordcredential&quot;&gt; &lt;code&gt;PasswordCredential&lt;/code&gt; &lt;/a&gt;。[[CollectFromCredentialStore]]が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ccf80f9084679eb818c96c69e2f6919d407c7a69" translate="yes" xml:space="preserve">
          <source>This method compiles an &lt;a href=&quot;../xpathexpression&quot;&gt;&lt;code&gt;XPathExpression&lt;/code&gt;&lt;/a&gt; which can then be used for (repeated) evaluations.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../xpathexpression&quot;&gt; &lt;code&gt;XPathExpression&lt;/code&gt; &lt;/a&gt;をコンパイルして（繰り返し）評価に使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="1c78c7bff96742c6461e4d5dfd22000cb47db64d" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; remove files from the drag operation, so it's possible for there still to be an entry with the type &lt;code&gt;&quot;Files&quot;&lt;/code&gt; left in the object's &lt;a href=&quot;types&quot;&gt;&lt;code&gt;DataTransfer.types&lt;/code&gt;&lt;/a&gt; list if there are any files included in the drag.</source>
          <target state="translated">このメソッドはドラッグ操作からファイルを削除し&lt;em&gt;ない&lt;/em&gt;ため、ドラッグにファイルが含まれている場合、オブジェクトの&lt;a href=&quot;types&quot;&gt; &lt;code&gt;DataTransfer.types&lt;/code&gt; &lt;/a&gt;リストにタイプ &lt;code&gt;&quot;Files&quot;&lt;/code&gt; エントリが残っている可能性があります。</target>
        </trans-unit>
        <trans-unit id="ef0fb2b25e488345ca023a9e4adf422805a61cbd" translate="yes" xml:space="preserve">
          <source>This method does not throw exceptions; instead, it rejects the returned promise with one of the following errors:</source>
          <target state="translated">このメソッドは例外をスローせず、代わりに、返されたプロミスを以下のいずれかのエラーで拒否します。</target>
        </trans-unit>
        <trans-unit id="2d9776d067a34e8412eb307d504596ada70ad779" translate="yes" xml:space="preserve">
          <source>This method does nothing if the transceiver is already stopped.</source>
          <target state="translated">この方法は、トランシーバが既に停止している場合には何もしません。</target>
        </trans-unit>
        <trans-unit id="162f7315efefafadab2788491579fa96c4761473" translate="yes" xml:space="preserve">
          <source>This method doesn't directly throw exceptions; however, if the animation's &lt;a href=&quot;playstate&quot;&gt;&lt;code&gt;playState&lt;/code&gt;&lt;/a&gt; is anything but &lt;code&gt;&quot;idle&quot;&lt;/code&gt; when cancelled, the &lt;a href=&quot;finished&quot;&gt;current finished promise&lt;/a&gt; is rejected with a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;AbortError&lt;/code&gt;.</source>
          <target state="translated">このメソッドは直接例外をスローしません。ただし、アニメーションの&lt;a href=&quot;playstate&quot;&gt; &lt;code&gt;playState&lt;/code&gt; &lt;/a&gt;がキャンセルされたときに &lt;code&gt;&quot;idle&quot;&lt;/code&gt; 場合、&lt;a href=&quot;finished&quot;&gt;現在完了しているプロミス&lt;/a&gt;は &lt;code&gt;AbortError&lt;/code&gt; という名前の&lt;a href=&quot;../domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; で&lt;/a&gt;拒否されます。</target>
        </trans-unit>
        <trans-unit id="bc9d548611879d4c94652f06f84abd7f91ce4fb0" translate="yes" xml:space="preserve">
          <source>This method doesn't draw anything to the canvas directly. The pattern it creates must be assigned to the &lt;a href=&quot;fillstyle&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.fillStyle&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;strokestyle&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.strokeStyle&lt;/code&gt;&lt;/a&gt; properties, after which it is applied to any subsequent drawing.</source>
          <target state="translated">このメソッドはキャンバスに直接何も描画しません。それが作成されたパターンは、に割り当てる必要があり&lt;a href=&quot;fillstyle&quot;&gt; &lt;code&gt;CanvasRenderingContext2D.fillStyle&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;strokestyle&quot;&gt; &lt;code&gt;CanvasRenderingContext2D.strokeStyle&lt;/code&gt; &lt;/a&gt;それが後続の図面に適用した後の特性、。</target>
        </trans-unit>
        <trans-unit id="6d93cc75e52093e1a971f8fb52ce4f340ee5297f" translate="yes" xml:space="preserve">
          <source>This method doesn't draw anything to the canvas directly. You can render the path using the &lt;a href=&quot;stroke&quot;&gt;&lt;code&gt;stroke()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">このメソッドはキャンバスに直接何も描画しません。&lt;a href=&quot;stroke&quot;&gt; &lt;code&gt;stroke()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt;メソッドを使用してパスをレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="84a41c7626911693e6e95ba9af6a3450cdfac44a" translate="yes" xml:space="preserve">
          <source>This method doesn't work for &lt;code&gt;&amp;lt;textPath&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;tspan&amp;gt;&lt;/code&gt; elements (&lt;a href=&quot;https://bugzil.la/937268&quot;&gt;bug 937268&lt;/a&gt;).</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&amp;lt;textPath&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;lt;tspan&amp;gt;&lt;/code&gt; 要素に対しては機能しません（&lt;a href=&quot;https://bugzil.la/937268&quot;&gt;バグ937268&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b6c41b0ed71473c5bd194c4164c83ece02b0a549" translate="yes" xml:space="preserve">
          <source>This method draws directly to the canvas without modifying the current path, so any subsequent &lt;a href=&quot;fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stroke&quot;&gt;&lt;code&gt;stroke()&lt;/code&gt;&lt;/a&gt; calls will have no effect on it.</source>
          <target state="translated">このメソッドは、現在のパスを変更せずにキャンバスに直接描画するため、その後の&lt;a href=&quot;fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stroke&quot;&gt; &lt;code&gt;stroke()&lt;/code&gt; &lt;/a&gt;呼び出しは影響を与えません。</target>
        </trans-unit>
        <trans-unit id="8c7a615bf9ff9a54f81b7e7fef7f243372c6dd53" translate="yes" xml:space="preserve">
          <source>This method first collects all credentials in the &lt;a href=&quot;../credentialscontainer&quot;&gt;&lt;code&gt;CredentialsContainer&lt;/code&gt;&lt;/a&gt; that meet the necessary criteria (defined in the &lt;code&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/code&gt; argument). From the resulting set of credentials, it then selects the best one. Depending on the options, it may display a dialog to the user and ask the user to make the selection.</source>
          <target state="translated">このメソッドは最初に、必要な基準（ &lt;code&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;/code&gt; 引数で定義）を満たす&lt;a href=&quot;../credentialscontainer&quot;&gt; &lt;code&gt;CredentialsContainer&lt;/code&gt; &lt;/a&gt;内のすべての資格情報を収集します。結果の資格情報のセットから、最適な資格情報を選択します。オプションによっては、ユーザーにダイアログを表示して、ユーザーに選択を求める場合があります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d63f76035e243d482817626a1ab9bf6da1a064a" translate="yes" xml:space="preserve">
          <source>This method has an optional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; parameter, which is &lt;code&gt;false&lt;/code&gt; by default. If &lt;code&gt;true&lt;/code&gt;, the page is always reloaded from the server, ignoring the browser cache.</source>
          <target state="translated">このメソッドにはオプションの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;パラメータがあり、デフォルトでは &lt;code&gt;false&lt;/code&gt; です。 &lt;code&gt;true&lt;/code&gt; の場合、ブラウザのキャッシュを無視して、ページは常にサーバーから再読み込みされます。</target>
        </trans-unit>
        <trans-unit id="b2b23a34efcfa331be32928fc4a14951a8bffb3b" translate="yes" xml:space="preserve">
          <source>This method has no effect as a page is always in a tab.</source>
          <target state="translated">ページは常にタブの中にあるので、この方法は効果がありません。</target>
        </trans-unit>
        <trans-unit id="100eabd9f24275e3ccccc93af98f3c3d256215ff" translate="yes" xml:space="preserve">
          <source>This method has no return value.</source>
          <target state="translated">このメソッドには戻り値がありません。</target>
        </trans-unit>
        <trans-unit id="0ef2ee6fb87ad52f2ff9043f3b7cebfcad8262b1" translate="yes" xml:space="preserve">
          <source>This method indicates whether the current browser is Java-enabled or not.</source>
          <target state="translated">このメソッドは、現在のブラウザがJavaに対応しているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="9532e019a2cf151a0bd92c29b40785df7188d739" translate="yes" xml:space="preserve">
          <source>This method is also demonstrated in the article &lt;a href=&quot;../manipulating_video_using_canvas&quot;&gt;Manipulating video using canvas&lt;/a&gt;.</source>
          <target state="translated">この方法は、「&lt;a href=&quot;../manipulating_video_using_canvas&quot;&gt;キャンバスを使用したビデオの操作」&lt;/a&gt;の記事でも説明されています。</target>
        </trans-unit>
        <trans-unit id="6282b311a1e7697954e2db8f86cee87fc2b27b61" translate="yes" xml:space="preserve">
          <source>This method is available as &lt;a href=&quot;../element/queryselector&quot;&gt;&lt;code&gt;Element.querySelector()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../document/queryselector&quot;&gt;&lt;code&gt;Document.querySelector()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../documentfragment/queryselector&quot;&gt;&lt;code&gt;DocumentFragment.querySelector()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../element/queryselector&quot;&gt; &lt;code&gt;Element.querySelector()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../document/queryselector&quot;&gt; &lt;code&gt;Document.querySelector()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../documentfragment/queryselector&quot;&gt; &lt;code&gt;DocumentFragment.querySelector()&lt;/code&gt; &lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="b2cb09afc24440054f2bbefd597ce826f2e5f450" translate="yes" xml:space="preserve">
          <source>This method is available as &lt;a href=&quot;../element/queryselectorall&quot;&gt;&lt;code&gt;Element.querySelectorAll()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../document/queryselectorall&quot;&gt;&lt;code&gt;Document.querySelectorAll()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../documentfragment/queryselectorall&quot;&gt;&lt;code&gt;DocumentFragment.querySelectorAll()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../element/queryselectorall&quot;&gt; &lt;code&gt;Element.querySelectorAll()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../document/queryselectorall&quot;&gt; &lt;code&gt;Document.querySelectorAll()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../documentfragment/queryselectorall&quot;&gt; &lt;code&gt;DocumentFragment.querySelectorAll()&lt;/code&gt; &lt;/a&gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="75a361eb35648e99683e0e5b597452bb80af9aef" translate="yes" xml:space="preserve">
          <source>This method is commonly used for making rounded corners.</source>
          <target state="translated">この方法は、角を丸くするためによく使われる方法です。</target>
        </trans-unit>
        <trans-unit id="ca7f52e9616a5579b8ca1e5641a0db1e7365689b" translate="yes" xml:space="preserve">
          <source>This method is currently not working, but you can use:</source>
          <target state="translated">この方法は今のところ使えませんが、使えます。</target>
        </trans-unit>
        <trans-unit id="4154caf8b47c55b85df0247bf55eee153dd2ff0a" translate="yes" xml:space="preserve">
          <source>This method is exposed to &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;インターフェイスに公開されています。</target>
        </trans-unit>
        <trans-unit id="9e6f3a7d4743679310d2c05221acd445166d45fa" translate="yes" xml:space="preserve">
          <source>This method is generally only useful when you've made dynamic changes to the set of sources available for the media element, either by changing the element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; attribute or by adding or removing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source&quot;&gt;&lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;&lt;/a&gt; elements nested within the media element itself. &lt;code&gt;load()&lt;/code&gt; will reset the element and rescan the available sources, thereby causing the changes to take effect.</source>
          <target state="translated">このメソッドは通常、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; 属性を変更するか、メディア要素自体にネストされた&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source&quot;&gt; &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を追加または削除することにより、メディア要素で使用可能なソースのセットに動的な変更を加えた場合にのみ役立ちます。 &lt;code&gt;load()&lt;/code&gt; は要素をリセットし、利用可能なソースを再スキャンして、変更を有効にします。</target>
        </trans-unit>
        <trans-unit id="13f5226bfbc3687f66b93df0b4fad73ee4431b51" translate="yes" xml:space="preserve">
          <source>This method is nearly equivalent to &lt;code&gt;newNode.appendChild(&lt;a href=&quot;extractcontents&quot;&gt;range.extractContents()&lt;/a&gt;); &lt;a href=&quot;insertnode&quot;&gt;range.insertNode&lt;/a&gt;(newNode)&lt;/code&gt;. After surrounding, the boundary points of the &lt;code&gt;range&lt;/code&gt; include &lt;code&gt;newNode&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;newNode.appendChild(&lt;a href=&quot;extractcontents&quot;&gt;range.extractContents()&lt;/a&gt;); &lt;a href=&quot;insertnode&quot;&gt;range.insertNode&lt;/a&gt;(newNode)&lt;/code&gt; とほぼ同等です。range.insertNode（newNode）。囲んだ後、 &lt;code&gt;range&lt;/code&gt; 境界点には &lt;code&gt;newNode&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="6f4ba6305cf93fe724cd204c6e6b81e1588f3e44" translate="yes" xml:space="preserve">
          <source>This method is not affected by the canvas's transformation matrix. If the specified rectangle extends outside the bounds of the canvas, the pixels outside the canvas are transparent black in the returned &lt;code&gt;ImageData&lt;/code&gt; object.</source>
          <target state="translated">このメソッドは、キャンバスの変換行列の影響を受けません。指定された長方形がキャンバスの境界の外側にある場合、キャンバスの外側のピクセルは、返される &lt;code&gt;ImageData&lt;/code&gt; オブジェクトで透明な黒になります。</target>
        </trans-unit>
        <trans-unit id="e946b783b55c01b55d0e1cfa76399aff551d20ef" translate="yes" xml:space="preserve">
          <source>This method is not part of a specification.</source>
          <target state="translated">このメソッドは仕様の一部ではありません。</target>
        </trans-unit>
        <trans-unit id="b11e0e3b33e2c1977edeb1eff4c3fe5cd817f3cd" translate="yes" xml:space="preserve">
          <source>This method is only allowed to be called for windows that were opened by a script using the &lt;a href=&quot;open&quot;&gt;&lt;code&gt;window.open()&lt;/code&gt;&lt;/a&gt; method. If the window was not opened by a script, an error similar to this one appears in the console: &lt;code&gt;Scripts may not close windows that were not opened by script.&lt;/code&gt;</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;open&quot;&gt; &lt;code&gt;window.open()&lt;/code&gt; &lt;/a&gt;メソッドを使用してスクリプトによって開かれたウィンドウに対してのみ呼び出すことができます。スクリプトによってウィンドウが開かれなかった場合、コンソールに次のようなエラーが表示さ &lt;code&gt;Scripts may not close windows that were not opened by script.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e901b5a5a42f8804ebc60a8c06b87b91641a09ff" translate="yes" xml:space="preserve">
          <source>This method is part of the &lt;a href=&quot;../webgl_draw_buffers&quot;&gt;&lt;code&gt;WEBGL_draw_buffers&lt;/code&gt;&lt;/a&gt; extension.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../webgl_draw_buffers&quot;&gt; &lt;code&gt;WEBGL_draw_buffers&lt;/code&gt; &lt;/a&gt;拡張機能の一部です。</target>
        </trans-unit>
        <trans-unit id="8e2c5a1acd0ee0bbfd6d1a5fe00571307ee29b6a" translate="yes" xml:space="preserve">
          <source>This method is restricted to top-level contexts. Calls to it within an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element will resolve without effect.</source>
          <target state="translated">このメソッドはトップレベルのコンテキストに制限されています。 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 要素内での呼び出しは、効果なしに解決されます。</target>
        </trans-unit>
        <trans-unit id="ac11daec8b9201c032242b851d6a1c39a7849773" translate="yes" xml:space="preserve">
          <source>This method is seldom used, with &lt;a href=&quot;setattribute&quot;&gt;&lt;code&gt;Element.setAttribute()&lt;/code&gt;&lt;/a&gt; usually being used to change element's attributes.</source>
          <target state="translated">このメソッドはめったに使用されず、&lt;a href=&quot;setattribute&quot;&gt; &lt;code&gt;Element.setAttribute()&lt;/code&gt; &lt;/a&gt;は通常、要素の属性を変更するために使用されます。</target>
        </trans-unit>
        <trans-unit id="618d38e5b55f460ca4141392c6895cb0a7731e1b" translate="yes" xml:space="preserve">
          <source>This method is similar to &lt;a href=&quot;../webglrenderingcontext/framebuffertexture2d&quot;&gt;&lt;code&gt;WebGLRenderingContext.framebufferTexture2D()&lt;/code&gt;&lt;/a&gt;, but only a given single layer of the texture level is attached to the attachment point.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../webglrenderingcontext/framebuffertexture2d&quot;&gt; &lt;code&gt;WebGLRenderingContext.framebufferTexture2D()&lt;/code&gt; に&lt;/a&gt;似ていますが、テクスチャレベルの特定の単一レイヤーのみがアタッチメントポイントにアタッチされます。</target>
        </trans-unit>
        <trans-unit id="d57d65a1a9ac9df2f7049a23324ecd6cc7e121fe" translate="yes" xml:space="preserve">
          <source>This method is simple enough: it just calls our &lt;code&gt;takepicture()&lt;/code&gt; function, defined below in the section &lt;a href=&quot;#Capturing_a_frame_from_the_stream&quot;&gt;Capturing a frame from the stream&lt;/a&gt;, then calls &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;Event.preventDefault()&lt;/code&gt;&lt;/a&gt; on the received event to prevent the click from being handled more than once.</source>
          <target state="translated">このメソッドは &lt;code&gt;takepicture()&lt;/code&gt; 単純です。以下&lt;a href=&quot;#Capturing_a_frame_from_the_stream&quot;&gt;のストリームからのフレームのキャプチャ&lt;/a&gt;で定義されているtakepicture（）関数を呼び出し、受信したイベントで&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;Event.preventDefault()&lt;/code&gt; &lt;/a&gt;を呼び出して、クリックが複数回処理されるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="993033ab8a05688f281ad623ab9c18f77db948af" translate="yes" xml:space="preserve">
          <source>This method is supposed to only be invoked by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt;メソッドによってのみ呼び出されることになっています。</target>
        </trans-unit>
        <trans-unit id="80c308d7d8aed1e9cd531a8c6935b8aeeb43d48b" translate="yes" xml:space="preserve">
          <source>This method is synchronous, does not rely on external assets though it may not be as reliable as method 2 described below since it does not check the actual feature but an indication of that feature.</source>
          <target state="translated">この方法は同期的であり、外部資産に依存しないが、実際の特徴を確認するのではなく、その特徴を示すものであるため、後述する方法2のように信頼性は低いかもしれない。</target>
        </trans-unit>
        <trans-unit id="add225588405b9efe7e08c373e8472f41f4350d6" translate="yes" xml:space="preserve">
          <source>This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">このメソッドは、指定された単位で浮動小数点値を取得するために使用されます。このCSS値に浮動小数点値が含まれていないか、指定された単位に変換できない場合は、&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="278c40bce83d8864931e9b23934ff205954430f5" translate="yes" xml:space="preserve">
          <source>This method is used to get the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters&quot;&gt;counter&lt;/a&gt; value. If this CSS value doesn't contain a counter value, a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; is raised. Modification to the corresponding style property can be achieved using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters&quot;&gt;カウンター&lt;/a&gt;値を取得するために使用されます。このCSS値にカウンター値が含まれていない場合、&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;が発生します。対応するスタイルプロパティの変更は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;インターフェイスを使用して実行できます。</target>
        </trans-unit>
        <trans-unit id="6b2fddf333763081c4291603a88a24d900e3dbf6" translate="yes" xml:space="preserve">
          <source>This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; is raised. Modification to the corresponding style property can be achieved using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RGBColor&quot;&gt;&lt;code&gt;RGBColor&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このメソッドは、RGBカラーを取得するために使用されます。このCSS値にRGBカラー値が含まれていない場合、&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;が発生します。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RGBColor&quot;&gt; &lt;code&gt;RGBColor&lt;/code&gt; &lt;/a&gt;インターフェイスを使用して、対応するスタイルプロパティを変更できます。</target>
        </trans-unit>
        <trans-unit id="01d65aa63eeb5eda630995ddfc80e6aea5d598f9" translate="yes" xml:space="preserve">
          <source>This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; is raised. Modification to the corresponding style property can be achieved using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Rect&quot;&gt;&lt;code&gt;Rect&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このメソッドは、Rect値を取得するために使用されます。このCSS値にrect値が含まれていない場合、&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;が発生します。対応するスタイルプロパティの変更は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Rect&quot;&gt; &lt;code&gt;Rect&lt;/code&gt; &lt;/a&gt;インターフェイスを使用して実行できます。</target>
        </trans-unit>
        <trans-unit id="1eed650c9f16753a4ca7eb688c64374b900b5ed7" translate="yes" xml:space="preserve">
          <source>This method is used to get the string value. If the CSS value doesn't contain a string value, a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">このメソッドは、文字列値を取得するために使用されます。CSS値に文字列値が含まれていない場合、&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="1cd7a69e78adb2a56ddcb67a2463a742e10cc03d" translate="yes" xml:space="preserve">
          <source>This method is used to retrieve a &lt;a href=&quot;cssvalue&quot;&gt;&lt;code&gt;CSSValue&lt;/code&gt;&lt;/a&gt; by ordinal index. The order in this collection represents the order of the values in the CSS style property. If index is greater than or equal to the number of values in the list, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、序数インデックスによって&lt;a href=&quot;cssvalue&quot;&gt; &lt;code&gt;CSSValue&lt;/code&gt; &lt;/a&gt;を取得するために使用されます。このコレクションの順序は、CSSスタイルプロパティの値の順序を表します。indexがリスト内の値の数以上の場合、これは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="133ebde2e2e1fbb87ebcd46168f5039ac9b9f7cc" translate="yes" xml:space="preserve">
          <source>This method is useful for determining the viewport coordinates of the cursor or selection inside a text box. See &lt;a href=&quot;../element/getboundingclientrect&quot;&gt;&lt;code&gt;Element.getBoundingClientRect()&lt;/code&gt;&lt;/a&gt; for the details on the returned value.</source>
          <target state="translated">このメソッドは、カーソルのビューポート座標またはテキストボックス内の選択を決定するのに役立ちます。参照&lt;a href=&quot;../element/getboundingclientrect&quot;&gt; &lt;code&gt;Element.getBoundingClientRect()&lt;/code&gt; &lt;/a&gt;の戻り値の詳細については。</target>
        </trans-unit>
        <trans-unit id="8dd1588effbb6612db87138043380f53d16600f7" translate="yes" xml:space="preserve">
          <source>This method makes it possible to &lt;a href=&quot;using_xmlhttprequest#Submitting_forms_and_uploading_files&quot;&gt;read and &lt;strong&gt;upload&lt;/strong&gt; any type of file&lt;/a&gt; and to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;stringify&lt;/a&gt; the raw data.</source>
          <target state="translated">この方法により、&lt;a href=&quot;using_xmlhttprequest#Submitting_forms_and_uploading_files&quot;&gt;あらゆる種類のファイル&lt;/a&gt;を読み取って&lt;strong&gt;アップロードし&lt;/strong&gt;、生データを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;文字列化&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="80486c16ab107f21ff253cef1dc747d36429bd46" translate="yes" xml:space="preserve">
          <source>This method may have user-visible effects such as asking for permission to access one or more system resources. Consider that when deciding when to call &lt;code&gt;requestMediaKeySystemAccess&lt;/code&gt;&lt;code&gt;()&lt;/code&gt;; you don't want those requests to happen at inconvenient times. As a general rule, this function should be called only when it's about time to create and use a &lt;a href=&quot;../mediakeys&quot;&gt;&lt;code&gt;MediaKeys&lt;/code&gt;&lt;/a&gt; object by calling the returned &lt;a href=&quot;../mediakeysystemaccess&quot;&gt;&lt;code&gt;MediaKeySystemAccess&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../mediakeysystemaccess/createmediakeys&quot;&gt;&lt;code&gt;createMediaKeys()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドには、1つ以上のシステムリソースへのアクセス許可を求めるなど、ユーザーに表示される効果があります。 &lt;code&gt;requestMediaKeySystemAccess&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; を呼び出すタイミングを決定するときは、それを考慮してください。これらのリクエストが不都合なときに行われるのは望ましくありません。一般的な規則として、この関数は、返された&lt;a href=&quot;../mediakeysystemaccess&quot;&gt; &lt;code&gt;MediaKeySystemAccess&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../mediakeysystemaccess/createmediakeys&quot;&gt; &lt;code&gt;createMediaKeys()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して&lt;a href=&quot;../mediakeys&quot;&gt; &lt;code&gt;MediaKeys&lt;/code&gt; &lt;/a&gt;オブジェクトを作成して使用するときがきたときにのみ呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="7118f3e8d00c0676e5b2638348fbe9c1329f697f" translate="yes" xml:space="preserve">
          <source>This method may raise a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; of one of the following types:</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;のいずれかのタイプのDOMExceptionを発生させる可能性があります。</target>
        </trans-unit>
        <trans-unit id="69442bec3ce47eaabeb34ef6abc9765d6f8eb23b" translate="yes" xml:space="preserve">
          <source>This method may raise a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; of the following type:</source>
          <target state="translated">このメソッドは、次のタイプの&lt;a href=&quot;../domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; を発生さ&lt;/a&gt;せる場合があります。</target>
        </trans-unit>
        <trans-unit id="68fc95538a2e982ad6115a8fc5206c20e25c2f0c" translate="yes" xml:space="preserve">
          <source>This method may raise a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; of the following types:</source>
          <target state="translated">このメソッドは、次のタイプの&lt;a href=&quot;../domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; を発生さ&lt;/a&gt;せる場合があります。</target>
        </trans-unit>
        <trans-unit id="e9ba3ebb94558e774271eecf7eac8d8a304c5f08" translate="yes" xml:space="preserve">
          <source>This method may raise a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMError&quot;&gt;&lt;code&gt;DOMError&lt;/code&gt;&lt;/a&gt; of one of the following types:</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;のいずれかのタイプの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMError&quot;&gt; &lt;code&gt;DOMError&lt;/code&gt; &lt;/a&gt;でDOMExceptionを発生させる場合があります。</target>
        </trans-unit>
        <trans-unit id="34948174ff2c2b539daef424432e1a009ffdc733" translate="yes" xml:space="preserve">
          <source>This method may return either a new &lt;code&gt;RTCRtpSender&lt;/code&gt; or, under very specific circumstances, an existing compatible sender which has not yet been used to transmit data. Compatible reusable &lt;code&gt;RTCRtpSender&lt;/code&gt; instances meet these criteria:</source>
          <target state="translated">このメソッドは、新しい &lt;code&gt;RTCRtpSender&lt;/code&gt; 、または非常に特殊な状況下では、データの送信にまだ使用されていない既存の互換性のある送信者を返す場合があります。互換性のある再利用可能な &lt;code&gt;RTCRtpSender&lt;/code&gt; インスタンスは、次の基準を満たしています。</target>
        </trans-unit>
        <trans-unit id="999978632fda9faa97815970029d517d012ba661" translate="yes" xml:space="preserve">
          <source>This method must be called in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベントハンドラーで呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="1562c4ad9d3d37619c19a7eef43f7ccd16dea611" translate="yes" xml:space="preserve">
          <source>This method never affects the values of &lt;a href=&quot;laststylesheetset&quot;&gt;&lt;code&gt;document.lastStyleSheetSet&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;preferredstylesheetset&quot;&gt;&lt;code&gt;document.preferredStyleSheetSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;laststylesheetset&quot;&gt; &lt;code&gt;document.lastStyleSheetSet&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;preferredstylesheetset&quot;&gt; &lt;code&gt;document.preferredStyleSheetSet&lt;/code&gt; の&lt;/a&gt;値に影響を与えることはありません。</target>
        </trans-unit>
        <trans-unit id="53d540ecefac246770cf61cc5fc1913629a211ab" translate="yes" xml:space="preserve">
          <source>This method never did anything and always threw an exception, so it was removed in Gecko 14.0 (Firefox 14.0 / Thunderbird 14.0 / SeaMonkey 2.11).</source>
          <target state="translated">このメソッドは何もせず、常に例外を投げていたので、Gecko 14.0 (Firefox 14.0/Thunderbird 14.0/SeaMonkey 2.11)で削除されました。</target>
        </trans-unit>
        <trans-unit id="782b46c9570459b39743641d8e5e0ca61f5c6f08" translate="yes" xml:space="preserve">
          <source>This method never did anything and always threw an exception.</source>
          <target state="translated">このメソッドは何もせず、常に例外を投げていました。</target>
        </trans-unit>
        <trans-unit id="347b8d0f78bbce134dd605cb65d2062813a5ca7e" translate="yes" xml:space="preserve">
          <source>This method never did anything but throw an exception, and was removed in Gecko 14.0 (Firefox 14.0 / Thunderbird 14.0 / SeaMonkey 2.11).</source>
          <target state="translated">このメソッドは例外を投げるだけで何もしなかったので、Gecko 14.0 (Firefox 14.0/Thunderbird 14.0/SeaMonkey 2.11)で削除されました。</target>
        </trans-unit>
        <trans-unit id="fb43f3b367cfe299932aabc88e590eca21805d59" translate="yes" xml:space="preserve">
          <source>This method now always returns false.</source>
          <target state="translated">このメソッドは常に false を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="d98fb6090839f4532e567249bb8468036cc7e88a" translate="yes" xml:space="preserve">
          <source>This method produces the same result for:</source>
          <target state="translated">この方法では、同じ結果が得られます。</target>
        </trans-unit>
        <trans-unit id="903d7507d2d7807465bce27dcf8b16f1071b48cb" translate="yes" xml:space="preserve">
          <source>This method reads the contents of the specified &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;. When the read operation is finished, it returns a data URL representing the file's data. If an error happened during the read, the adequate exception is sent.</source>
          <target state="translated">このメソッドは、指定された &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; の内容を読み取ります。読み取り操作が完了すると、ファイルのデータを表すデータURLが返されます。読み取り中にエラーが発生した場合は、適切な例外が送信されます。</target>
        </trans-unit>
        <trans-unit id="ab16c01829cc8b3da9d38db1432cfd11ef848e18" translate="yes" xml:space="preserve">
          <source>This method reads the contents of the specified &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;. When the read operation is finished, it returns an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;&lt;/code&gt; representing the file's data. If an error happened during the read, the adequate exception is sent.</source>
          <target state="translated">このメソッドは、指定された &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; の内容を読み取ります。読み取り操作が完了すると、ファイルのデータを表す &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;&lt;/code&gt; が返されます。読み取り中にエラーが発生した場合は、適切な例外が送信されます。</target>
        </trans-unit>
        <trans-unit id="3c4ac9e4f491145511347ab17650908669f92433" translate="yes" xml:space="preserve">
          <source>This method reads the contents of the specified &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt;, which may be a &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;. When the read operation is finished, it returns a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the raw binary data from the file. If an error happened during the read, the adequate exception is sent.</source>
          <target state="translated">このメソッドは、指定の内容を読み込み、 &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; であってもよいし、 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; 。読み取り操作が完了すると、ファイルからの生のバイナリデータを含む&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;が返されます。読み取り中にエラーが発生した場合は、適切な例外が送信されます。</target>
        </trans-unit>
        <trans-unit id="c70e75c4cbb11aa35832a048d239ea5a2dad50fa" translate="yes" xml:space="preserve">
          <source>This method relies on JavaScript functionality available in Firefox 3. However, the code could be adjusted to support other platforms.</source>
          <target state="translated">このメソッドは Firefox 3 で利用可能な JavaScript の機能に依存していますが、他のプラットフォームをサポートするようにコードを調整することもできます。</target>
        </trans-unit>
        <trans-unit id="17f872fa82c753585fbae6b268c1d9c0b6f55005" translate="yes" xml:space="preserve">
          <source>This method relies on the &quot;force async&quot; nature of the feature. When you try to set &lt;code&gt;responseType&lt;/code&gt; of an &lt;code&gt;XMLHttpRequest&lt;/code&gt; object after it is opened as &quot;sync&quot;. This throws an error in the browsers that implement the feature and works on others.</source>
          <target state="translated">この方法は、機能の「強制非同期」の性質に依存しています。「同期」として開かれた後、 &lt;code&gt;XMLHttpRequest&lt;/code&gt; オブジェクトの &lt;code&gt;responseType&lt;/code&gt; を設定しようとした場合。これにより、機能を実装して他のブラウザーで機能するブラウザーでエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="8fde95dab40cc68fff3ca815fb5e9c63bc1d45c9" translate="yes" xml:space="preserve">
          <source>This method replaces the existing &lt;code&gt;click&lt;/code&gt; event listener(s) on the element if there are any. Other events and associated event handlers such as &lt;code&gt;blur&lt;/code&gt; (&lt;code&gt;onblur&lt;/code&gt;) and &lt;code&gt;keypress&lt;/code&gt; (&lt;code&gt;onkeypress&lt;/code&gt;) behave similarly.</source>
          <target state="translated">このメソッドは、要素に既存の &lt;code&gt;click&lt;/code&gt; イベントリスナーがある場合、それを置き換えます。その他のイベントと、 &lt;code&gt;blur&lt;/code&gt; （ &lt;code&gt;onblur&lt;/code&gt; ）や &lt;code&gt;keypress&lt;/code&gt; （ &lt;code&gt;onkeypress&lt;/code&gt; ）などの関連するイベントハンドラーも同様に動作します。</target>
        </trans-unit>
        <trans-unit id="f6091fc93ec68eb2fc044ea08266511489254c84" translate="yes" xml:space="preserve">
          <source>This method reports the problems with the constraints on the element, if any, to the user. If there are problems, fires an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/invalid&quot;&gt;invalid&lt;/a&gt; event at the element, and returns &lt;code&gt;false&lt;/code&gt;; if there are no problems, it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、要素の制約に関する問題があれば、それをユーザーに報告します。問題がある場合、要素で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/invalid&quot;&gt;無効な&lt;/a&gt;イベントを発生させ、 &lt;code&gt;false&lt;/code&gt; を返します。問題がなければ、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bc84552ba048762b8f4d4842d31787fc41cc99ae" translate="yes" xml:space="preserve">
          <source>This method reports the problems with the constraints on the element, if any, to the user. If there are problems, it fires a cancelable &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/invalid&quot;&gt;invalid&lt;/a&gt; event at the element, and returns &lt;code&gt;false&lt;/code&gt;; if there are no problems, it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、要素の制約に関する問題があれば、それをユーザーに報告します。問題が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/invalid&quot;&gt;ある&lt;/a&gt;場合は、要素でキャンセル可能な無効なイベントを発生させ、 &lt;code&gt;false&lt;/code&gt; を返します。問題がなければ、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c8f140a769c3382a05f7de1931f89084a0f80846" translate="yes" xml:space="preserve">
          <source>This method reports the problems with the constraints on the element, if any, to the user. If there are problems, it fires a cancelable &lt;code&gt;invalid&lt;/code&gt; event at the element, and returns &lt;code&gt;false&lt;/code&gt;; if there are no problems, it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、要素の制約に関する問題があれば、それをユーザーに報告します。問題が &lt;code&gt;invalid&lt;/code&gt; 場合は、要素でキャンセル可能な無効なイベントを発生させ、 &lt;code&gt;false&lt;/code&gt; を返します。問題がなければ、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="24f46ba54d2a0a48f708a58c259693d7fd642823" translate="yes" xml:space="preserve">
          <source>This method resizes the window relative to its current size. To resize the window in absolute terms, use &lt;a href=&quot;resizeto&quot;&gt;&lt;code&gt;window.resizeTo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、現在のサイズを基準にウィンドウのサイズを変更します。ウィンドウのサイズを絶対的に変更するには、&lt;a href=&quot;resizeto&quot;&gt; &lt;code&gt;window.resizeTo&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="109380a97f21a8c335215f3de4e31e2d450d63f9" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; when the current node is the first node in the set.</source>
          <target state="translated">現在のノードがセットの最初のノードである場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cc89ec3b37cb899dd5ef2d3ee1d5c9c033931946" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; when there are no nodes left in the set.</source>
          <target state="translated">セットにノードが残っていない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="90559a15a4dcf1f6a08663f08ca7515494bb5112" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;void&lt;/code&gt; and throws a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with the name &lt;code&gt;InvalidPointerId&lt;/code&gt; if &lt;code&gt;pointerId&lt;/code&gt; does not match any of the active pointers.</source>
          <target state="translated">このメソッドは、戻り &lt;code&gt;void&lt;/code&gt; とスロー&lt;a href=&quot;../domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;名前で &lt;code&gt;InvalidPointerId&lt;/code&gt; 場合 &lt;code&gt;pointerId&lt;/code&gt; はアクティブポインタのいずれかと一致していません。</target>
        </trans-unit>
        <trans-unit id="647e56534970e33fa5897a326ece6571725873f4" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;../canvasgradient&quot;&gt;&lt;code&gt;CanvasGradient&lt;/code&gt;&lt;/a&gt;. To be applied to a shape, the gradient must first be assigned to the &lt;a href=&quot;fillstyle&quot;&gt;&lt;code&gt;fillStyle&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;strokestyle&quot;&gt;&lt;code&gt;strokeStyle&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../canvasgradient&quot;&gt; &lt;code&gt;CanvasGradient&lt;/code&gt; を&lt;/a&gt;返します。グラデーションを形状に適用するには、最初にグラデーションを&lt;a href=&quot;fillstyle&quot;&gt; &lt;code&gt;fillStyle&lt;/code&gt; &lt;/a&gt;プロパティまたは&lt;a href=&quot;strokestyle&quot;&gt; &lt;code&gt;strokeStyle&lt;/code&gt; &lt;/a&gt;プロパティに割り当てる必要があります。</target>
        </trans-unit>
        <trans-unit id="1707c3e9582abdc6097b03ca96a0705951f80263" translate="yes" xml:space="preserve">
          <source>This method returns a linear &lt;a href=&quot;../canvasgradient&quot;&gt;&lt;code&gt;CanvasGradient&lt;/code&gt;&lt;/a&gt;. To be applied to a shape, the gradient must first be assigned to the &lt;a href=&quot;fillstyle&quot;&gt;&lt;code&gt;fillStyle&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;strokestyle&quot;&gt;&lt;code&gt;strokeStyle&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">このメソッドは、線形の&lt;a href=&quot;../canvasgradient&quot;&gt; &lt;code&gt;CanvasGradient&lt;/code&gt; を&lt;/a&gt;返します。グラデーションを形状に適用するには、最初にグラデーションを&lt;a href=&quot;fillstyle&quot;&gt; &lt;code&gt;fillStyle&lt;/code&gt; &lt;/a&gt;プロパティまたは&lt;a href=&quot;strokestyle&quot;&gt; &lt;code&gt;strokeStyle&lt;/code&gt; &lt;/a&gt;プロパティに割り当てる必要があります。</target>
        </trans-unit>
        <trans-unit id="eacab4491e559d105c9fac38f635dda4778ba4de" translate="yes" xml:space="preserve">
          <source>This method returns a watch ID value that then can be used to unregister the handler by passing it to the &lt;a href=&quot;clearwatch&quot;&gt;&lt;code&gt;Geolocation.clearWatch()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;clearwatch&quot;&gt; &lt;code&gt;Geolocation.clearWatch()&lt;/code&gt; &lt;/a&gt;メソッドに渡してハンドラーの登録を解除するために使用できる監視ID値を返します。</target>
        </trans-unit>
        <trans-unit id="ebd8adc3ab7de29094e7352f95f5f4f34fce9e6b" translate="yes" xml:space="preserve">
          <source>This method returns an &lt;code&gt;ImageData&lt;/code&gt; object representing the pixel data for the area of the canvas whose corners are represented by the points (&lt;code&gt;left&lt;/code&gt;,&lt;code&gt;top&lt;/code&gt;), (&lt;code&gt;left+width&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;), (&lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top+height&lt;/code&gt;), and (&lt;code&gt;left+width&lt;/code&gt;, &lt;code&gt;top+height&lt;/code&gt;). The coordinates are specified in canvas coordinate space units.</source>
          <target state="translated">このメソッドは、角がポイント（ &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;top&lt;/code&gt; ）、（ &lt;code&gt;left+width&lt;/code&gt; 、 &lt;code&gt;top&lt;/code&gt; ）、（ &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;top+height&lt;/code&gt; ）、および（ &lt;code&gt;left+width&lt;/code&gt; で表されるキャンバスの領域のピクセルデータを表す &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを返します。、 &lt;code&gt;top+height&lt;/code&gt; ）。座標は、キャンバス座標空間単位で指定されます。</target>
        </trans-unit>
        <trans-unit id="ee5722121b390c3090c21e21cd11249f47e1c2b1" translate="yes" xml:space="preserve">
          <source>This method returns the currently selected text.</source>
          <target state="translated">このメソッドは、現在選択されているテキストを返します。</target>
        </trans-unit>
        <trans-unit id="5adf90da1f320f8783e9f23347a68c45d35be892" translate="yes" xml:space="preserve">
          <source>This method returns the text node which received the replacement text, or &lt;code&gt;null&lt;/code&gt; if the replacement text is an empty string. The returned node is the current node unless the current node is read only, in which case the returned node is a newly created text node of the same type which has been inserted at the location of the replacement.</source>
          <target state="translated">このメソッドは、置換テキストを受け取ったテキストノードを返します。置換テキストが空の文字列の場合は &lt;code&gt;null&lt;/code&gt; を返します。現在のノードが読み取り専用でない限り、返されるノードは現在のノードです。この場合、返されるノードは、置換の場所に挿入された同じタイプの新しく作成されたテキストノードです。</target>
        </trans-unit>
        <trans-unit id="876cb173d3d476d388ccce54f55ae5a6af393330" translate="yes" xml:space="preserve">
          <source>This method simply performs some basic &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOM&lt;/a&gt; injection; it creates a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; (paragraph) element, then creates a new &lt;a href=&quot;../text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; node containing the message text, which is received in the event's &lt;code&gt;data&lt;/code&gt; property. This text node is appended as a child of the new element, which is then inserted into the &lt;code&gt;receiveBox&lt;/code&gt; block, thereby causing it to draw in the browser window.</source>
          <target state="translated">このメソッドは、基本的な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DOM&quot;&gt;DOM&lt;/a&gt;インジェクションを実行するだけです。新しい&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; &lt;/a&gt;（段落）要素を作成してから、イベントの &lt;code&gt;data&lt;/code&gt; プロパティで受け取るメッセージテキストを含む新しい&lt;a href=&quot;../text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt;ノードを作成します。このテキストノードは新しい要素の子として追加され、それが &lt;code&gt;receiveBox&lt;/code&gt; ブロックに挿入されて、ブラウザーウィンドウに描画されます。</target>
        </trans-unit>
        <trans-unit id="3297676f43c5451c2e06641ad3e371d76d5bc28b" translate="yes" xml:space="preserve">
          <source>This method stops window loading.</source>
          <target state="translated">このメソッドは、ウィンドウの読み込みを停止します。</target>
        </trans-unit>
        <trans-unit id="8ee241a3915282a23e998a9fe4e96f5d79be7c1e" translate="yes" xml:space="preserve">
          <source>This method takes no input parameters.</source>
          <target state="translated">このメソッドは入力パラメータを取りません。</target>
        </trans-unit>
        <trans-unit id="c4e10484143a340f32ff96b64398db582c26d90c" translate="yes" xml:space="preserve">
          <source>This method takes two arguments, &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, which are the coordinates of the line's end point. The starting point is dependent on previously drawn paths, where the end point of the previous path is the starting point for the following, etc. The starting point can also be changed by using the &lt;code&gt;moveTo()&lt;/code&gt; method.</source>
          <target state="translated">このメソッドは、2つの引数 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; を受け取ります。これらは、ラインの終点の座標です。開始点は以前に描画されたパスに依存します。前のパスの終了点は次の開始点などです。開始点は &lt;code&gt;moveTo()&lt;/code&gt; メソッドを使用して変更することもできます。</target>
        </trans-unit>
        <trans-unit id="c4ef93e085de6bbbab2b6fb584882b687fcd2583" translate="yes" xml:space="preserve">
          <source>This method throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; for the following reasons:</source>
          <target state="translated">このメソッドは、次の理由で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="c2cd2350c3f29ea0ce911cb7e464b77f4fd94aad" translate="yes" xml:space="preserve">
          <source>This method updates &lt;code&gt;HTMLInputElement.selectionStart&lt;/code&gt;, &lt;code&gt;selectionEnd&lt;/code&gt;, and &lt;code&gt;selectionDirection&lt;/code&gt; in one call.</source>
          <target state="translated">このメソッドは、1回の呼び出しで &lt;code&gt;HTMLInputElement.selectionStart&lt;/code&gt; 、 &lt;code&gt;selectionEnd&lt;/code&gt; 、および &lt;code&gt;selectionDirection&lt;/code&gt; を更新します。</target>
        </trans-unit>
        <trans-unit id="d5692927c6c9959cd694c4fe9e1f8762083a26b6" translate="yes" xml:space="preserve">
          <source>This method was introduced in Gecko 1.9 and is removed starting with Gecko 7.0.</source>
          <target state="translated">この方法は Gecko 1.9 で導入され、Gecko 7.0 から削除されました。</target>
        </trans-unit>
        <trans-unit id="d1453cda075cd79c4e9614507b5edbff5a3bd3e6" translate="yes" xml:space="preserve">
          <source>This method was introduced in Gecko 1.9 and is removed starting with Gecko 7.0. Use &lt;a href=&quot;canvasrenderingcontext2d/stroketext&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.strokeText()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;canvasrenderingcontext2d/filltext&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.fillText()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このメソッドはGecko 1.9で導入され、Gecko 7.0から削除されました。代わりに&lt;a href=&quot;canvasrenderingcontext2d/stroketext&quot;&gt; &lt;code&gt;CanvasRenderingContext2D.strokeText()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;canvasrenderingcontext2d/filltext&quot;&gt; &lt;code&gt;CanvasRenderingContext2D.fillText()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="c142ca7c5b98617f5b485b43a0036abdd3644767" translate="yes" xml:space="preserve">
          <source>This method was introduced in Gecko 1.9 and is unimplemented starting with Gecko 7.0. Use &lt;a href=&quot;canvasrenderingcontext2d/measuretext&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.measureText()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このメソッドはGecko 1.9で導入され、Gecko 7.0以降は実装されていません。代わりに&lt;a href=&quot;canvasrenderingcontext2d/measuretext&quot;&gt; &lt;code&gt;CanvasRenderingContext2D.measureText()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="d2802d5ca6fb6ea25f84c25a1b672ba4bde52405" translate="yes" xml:space="preserve">
          <source>This method was previously named &lt;code&gt;transferImageBitmap()&lt;/code&gt;, but was renamed in a spec change. The old name is being kept as an alias to avoid code breakage.</source>
          <target state="translated">このメソッドは以前は &lt;code&gt;transferImageBitmap()&lt;/code&gt; という名前でしたが、仕様変更により名前が変更されました。コードの破損を防ぐため、古い名前はエイリアスとして保持されています。</target>
        </trans-unit>
        <trans-unit id="3d685b6f5d34266022df79a1efebabdd051bb0b2" translate="yes" xml:space="preserve">
          <source>This method was removed from the specification because of gaps in its design and implementation problems.</source>
          <target state="translated">この方式は、設計や実装上の問題点にギャップがあったため、仕様から削除されました。</target>
        </trans-unit>
        <trans-unit id="6cdc1b8087c55ca0641f3a2765704c7cf99fe3ac" translate="yes" xml:space="preserve">
          <source>This method was removed in Chrome 43, and Firefox 56.</source>
          <target state="translated">この方法はChrome 43、Firefox 56で削除されました。</target>
        </trans-unit>
        <trans-unit id="a2406f533fe230c6c52fcd367826fca2bbac2d29" translate="yes" xml:space="preserve">
          <source>This method will cause an &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt; exception to be thrown if called on an &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../offlineaudiocontext&quot;&gt; &lt;code&gt;OfflineAudioContext&lt;/code&gt; で&lt;/a&gt;呼び出されると、 &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt; 例外をスローします。</target>
        </trans-unit>
        <trans-unit id="71fac621f0149978e602e81928b95c6c4679ca6a" translate="yes" xml:space="preserve">
          <source>This method, also defined by the developer, will be called if the app signals that it has finished writing chunks to the stream. The contents should do whatever is necessary to finalize writes to the underlying sink, and release access to it. If this process is asynchronous, it can return a promise to signal success or failure. This method will be called only after all queued-up writes have succeeded. The &lt;code&gt;controller&lt;/code&gt; parameter passed to this method is a &lt;a href=&quot;../writablestreamdefaultcontroller&quot;&gt;&lt;code&gt;WritableStreamDefaultController&lt;/code&gt;&lt;/a&gt;, which can be used to control the stream at the end of writing.</source>
          <target state="translated">このメソッドも開発者によって定義され、ストリームへのチャンクの書き込みが完了したことをアプリが通知した場合に呼び出されます。コンテンツは、基になるシンクへの書き込みをファイナライズし、それにアクセスを解放するために必要なことを何でも行う必要があります。このプロセスが非同期の場合、成功または失敗を知らせる約束を返すことができます。このメソッドは、キューに入れられたすべての書き込みが成功した後にのみ呼び出されます。 &lt;code&gt;controller&lt;/code&gt; このメソッドに渡されるパラメータである&lt;a href=&quot;../writablestreamdefaultcontroller&quot;&gt; &lt;code&gt;WritableStreamDefaultController&lt;/code&gt; &lt;/a&gt;書き込みの終了時の流れを制御するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="e22a408a22b8cd39789b1007a90c87636260210b" translate="yes" xml:space="preserve">
          <source>This method, also defined by the developer, will be called if the app signals that it wishes to abruptly close the stream and put it in an errored state. It can clean up any held resources, much like &lt;code&gt;close()&lt;/code&gt;, but &lt;code&gt;abort()&lt;/code&gt; will be called even if writes are queued up &amp;mdash; those chunks will be thrown away. If this process is asynchronous, it can return a promise to signal success or failure. The reason parameter contains a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; describing why the stream was aborted.</source>
          <target state="translated">このメソッドは、開発者によって定義されたもので、アプリがストリームを突然閉じてエラー状態にすることを望んでいることを通知した場合に呼び出されます。 &lt;code&gt;close()&lt;/code&gt; のように、保持されているリソースをクリーンアップできますが、書き込みがキューに入れられていても、 &lt;code&gt;abort()&lt;/code&gt; が呼び出されます&amp;mdash;これらのチャンクは破棄されます。このプロセスが非同期の場合、成功または失敗を知らせる約束を返すことができます。 reasonパラメータには、ストリームが中止された理由を説明する&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="a8e516d3fc8b08ba69c545db2f4e7d40512178bd" translate="yes" xml:space="preserve">
          <source>This method, also defined by the developer, will be called if the app signals that the stream is to be cancelled (e.g. if &lt;a href=&quot;cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called). The contents should do whatever is necessary to release access to the stream source. If this process is asynchronous, it can return a promise to signal success or failure. The reason parameter contains a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; describing why the stream was cancelled.</source>
          <target state="translated">このメソッドも開発者によって定義され、ストリームがキャンセルされることをアプリが&lt;a href=&quot;cancel&quot;&gt; &lt;code&gt;ReadableStream.cancel()&lt;/code&gt; &lt;/a&gt;場合（たとえば、ReadableStream.cancel（）が呼び出された場合）に呼び出されます。コンテンツは、ストリームソースへのアクセスを解放するために必要なことは何でも行う必要があります。このプロセスが非同期の場合、成功または失敗を知らせる約束を返すことができます。 reasonパラメータには、ストリームがキャンセルされた理由を説明する&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="6f931c92476993988aca38907f6e75494998ff6c" translate="yes" xml:space="preserve">
          <source>This method, also defined by the developer, will be called repeatedly when the stream's internal queue of chunks is not full, up until it reaches its high water mark. If &lt;code&gt;pull()&lt;/code&gt; returns a promise, then it won't be called again until that promise fulfills; if the promise rejects, the stream will become errored. The &lt;code&gt;controller&lt;/code&gt; parameter passed to this method is a &lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt;&lt;code&gt;ReadableStreamDefaultController&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../readablebytestreamcontroller&quot;&gt;&lt;code&gt;ReadableByteStreamController&lt;/code&gt;&lt;/a&gt;, depending on the value of the &lt;code&gt;type&lt;/code&gt; property. This can be used by the developer to control the stream as more chunks are fetched.</source>
          <target state="translated">このメソッドも開発者が定義し、チャンクのストリームの内部キューがいっぱいでない場合、最高水準点に達するまで繰り返し呼び出されます。 &lt;code&gt;pull()&lt;/code&gt; がpromiseを返した場合、promiseが満たされるまで再度呼び出されません。 promiseが拒否した場合、ストリームはエラーになります。 &lt;code&gt;controller&lt;/code&gt; このメソッドに渡されるパラメータである&lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt; &lt;code&gt;ReadableStreamDefaultController&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;../readablebytestreamcontroller&quot;&gt; &lt;code&gt;ReadableByteStreamController&lt;/code&gt; &lt;/a&gt;の値に応じて、 &lt;code&gt;type&lt;/code&gt; プロパティ。開発者はこれを使用して、より多くのチャンクがフェッチされるときにストリームを制御できます。</target>
        </trans-unit>
        <trans-unit id="f880a7b4423a6fd02823071a0599c33c2a0bf69f" translate="yes" xml:space="preserve">
          <source>This method, also defined by the developer, will be called when a new chunk of data (specified in the &lt;code&gt;chunk&lt;/code&gt; parameter) is ready to be written to the underlying sink. It can return a promise to signal success or failure of the write operation. The &lt;code&gt;controller&lt;/code&gt; parameter passed to this method is a &lt;a href=&quot;../writablestreamdefaultcontroller&quot;&gt;&lt;code&gt;WritableStreamDefaultController&lt;/code&gt;&lt;/a&gt; that can be used by the developer to control the stream as more chunks are submitted for writing. This method will be called only after previous writes have succeeded, and never after the stream is closed or aborted (see below).</source>
          <target state="translated">このメソッドも開発者によって定義され、新しいデータチャンク（ &lt;code&gt;chunk&lt;/code&gt; パラメータで指定）が基礎となるシンクに書き込む準備ができたときに呼び出されます。書き込み操作の成功または失敗を知らせる約束を返すことができます。 &lt;code&gt;controller&lt;/code&gt; このメソッドに渡されるパラメータである&lt;a href=&quot;../writablestreamdefaultcontroller&quot;&gt; &lt;code&gt;WritableStreamDefaultController&lt;/code&gt; &lt;/a&gt;複数のチャンクが書き込みのために提出されるストリームを制御するために開発者が使用することができます。このメソッドは、以前の書き込みが成功した後にのみ呼び出され、ストリームが閉じられたまたは中止された後は呼び出されません（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="69222759fefb5b804ad31571c66d80cf409fcfca" translate="yes" xml:space="preserve">
          <source>This method, available only in Mozilla's implementation, loads data from another media element. This works similarly to &lt;code&gt;load()&lt;/code&gt; except that instead of running the normal resource selection algorithm, the source is simply set to the &lt;code&gt;other&lt;/code&gt; element's &lt;code&gt;currentSrc&lt;/code&gt;. This is optimized so this element gets access to all of the &lt;code&gt;other&lt;/code&gt; element's cached and buffered data; in fact, the two elements share downloaded data, so data downloaded by either element is available to both.</source>
          <target state="translated">このメソッドは、Mozillaの実装でのみ使用でき、別のメディア要素からデータをロードします。これは &lt;code&gt;load()&lt;/code&gt; と同様に機能しますが、通常のリソース選択アルゴリズムを実行する代わりに、ソースが &lt;code&gt;other&lt;/code&gt; 要素の &lt;code&gt;currentSrc&lt;/code&gt; に設定されるだけです。これは最適化されているため、この要素は &lt;code&gt;other&lt;/code&gt; 要素のすべてのキャッシュおよびバッファされたデータにアクセスできます。実際、2つの要素はダウンロードされたデータを共有するため、どちらの要素によってダウンロードされたデータも両方に利用できます。</target>
        </trans-unit>
        <trans-unit id="c14f1ce34b1f2fea3f78ff3556f05bb1c0fba4e1" translate="yes" xml:space="preserve">
          <source>This methods reads the specified blob's contents. When the read operation is finished, it returns a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the file represented as a text string. The optional &lt;code&gt;encoding&lt;/code&gt; parameter indicates the encoding to be used. If not present, the method will apply a detection algorithm for it. If an error happened during the read, the adequate exception is sent.</source>
          <target state="translated">このメソッドは、指定されたblobのコンテンツを読み取ります。読み取り操作が完了すると、テキスト文字列として表されたファイルを含む&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;が返されます。オプションの &lt;code&gt;encoding&lt;/code&gt; パラメータは、使用するエンコーディングを示します。存在しない場合、メソッドは検出アルゴリズムを適用します。読み取り中にエラーが発生した場合は、適切な例外が送信されます。</target>
        </trans-unit>
        <trans-unit id="76401896131099f71bbfcd85499101a4b6355210" translate="yes" xml:space="preserve">
          <source>This might be determined, for instance, through the SISR specification of semantics in a grammar (see &lt;a href=&quot;http://www.w3.org/TR/semantic-interpretation/&quot;&gt;Semantic Interpretation for Speech Recognition (SISR) Version 1.0&lt;/a&gt; for specification and examples.)</source>
          <target state="translated">これは、たとえば、文法のセマンティクスのSISR仕様によって決定される場合があります（仕様と例については&lt;a href=&quot;http://www.w3.org/TR/semantic-interpretation/&quot;&gt;、音声認識のセマンティック解釈（SISR）バージョン1.0&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="f734391878d7ec38cd8601f5a4b4358b48f2bf22" translate="yes" xml:space="preserve">
          <source>This might be determined, for instance, through the SISR specification of semantics in a grammar (see &lt;a href=&quot;https://www.w3.org/TR/semantic-interpretation/&quot;&gt;Semantic Interpretation for Speech Recognition (SISR) Version 1.0&lt;/a&gt; for specification and examples.)</source>
          <target state="translated">これは、たとえば、文法のセマンティクスのSISR仕様によって決定される場合があります（仕様と例については&lt;a href=&quot;https://www.w3.org/TR/semantic-interpretation/&quot;&gt;、音声認識のセマンティック解釈（SISR）バージョン1.0&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="f8623e80b83bf2b47200541f1553c54a29118d62" translate="yes" xml:space="preserve">
          <source>This might produce:</source>
          <target state="translated">これはプロデュースするかもしれません。</target>
        </trans-unit>
        <trans-unit id="ed4446287e52bc2924b7ba64b696c1b7864eb999" translate="yes" xml:space="preserve">
          <source>This mixin was called &lt;code&gt;URLUtils&lt;/code&gt; before Firefox 45, and was also implemented to other by other interfaces, like &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;. From Firefox 45, the other interfaces implement their own version of the properties and methods they need.</source>
          <target state="translated">このミックスインは、Firefox 45より前は &lt;code&gt;URLUtils&lt;/code&gt; と呼ばれていましたが、&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;などの他のインターフェースによって他にも実装されました。Firefox 45以降、他のインターフェースは、必要なプロパティとメソッドの独自のバージョンを実装しています。</target>
        </trans-unit>
        <trans-unit id="399e8bbc69a2501e7280a19fe92111e3e8a256c7" translate="yes" xml:space="preserve">
          <source>This more complex &lt;code&gt;Response&lt;/code&gt; below shows that you can optionally pass a set of headers in with your response, emulating standard HTTP response headers. Here we are just telling the browser what the content type of our synthetic response is:</source>
          <target state="translated">以下のより複雑な &lt;code&gt;Response&lt;/code&gt; は、標準のHTTP応答ヘッダーをエミュレートして、応答でヘッダーのセットをオプションで渡すことができることを示しています。ここでは、合成応答のコンテンツタイプをブラウザに通知しています。</target>
        </trans-unit>
        <trans-unit id="610adef4eaf11c985ba408ae7de9b1d168e1397e" translate="yes" xml:space="preserve">
          <source>This more complex example shows the difference between returning a normal root, and a root incuding the shadow root. (See the &lt;a href=&quot;https://github.com/jserz/js_piece/blob/master/DOM/Node/getRootNode()/demo/getRootNode.html&quot;&gt;full source code&lt;/a&gt;):</source>
          <target state="translated">このより複雑な例は、通常のルートを返すことと、シャドウルートを含むルートを返すことの違いを示しています。（&lt;a href=&quot;https://github.com/jserz/js_piece/blob/master/DOM/Node/getRootNode()/demo/getRootNode.html&quot;&gt;完全なソースコードを&lt;/a&gt;参照してください）：</target>
        </trans-unit>
        <trans-unit id="3f2f9a54e49bb5c61bdda4ddbb3d2297bab3ddb8" translate="yes" xml:space="preserve">
          <source>This new functionality enables developers to specify a locale when creating an index using &lt;a href=&quot;../idbobjectstore/createindex&quot;&gt;&lt;code&gt;IDBObjectStore.createIndex()&lt;/code&gt;&lt;/a&gt; (check out its parameters.) In such cases, when a cursor is then used to iterate through the dataset, and you want to specify locale-aware sorting, you can use a specialized &lt;a href=&quot;../idblocaleawarekeyrange&quot;&gt;&lt;code&gt;IDBLocaleAwareKeyRange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この新しい機能により、開発者は&lt;a href=&quot;../idbobjectstore/createindex&quot;&gt; &lt;code&gt;IDBObjectStore.createIndex()&lt;/code&gt; &lt;/a&gt;を使用してインデックスを作成するときにロケールを指定できます（パラメーターをチェックアウトします）。ソートする場合は、専用の&lt;a href=&quot;../idblocaleawarekeyrange&quot;&gt; &lt;code&gt;IDBLocaleAwareKeyRange&lt;/code&gt; を&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="e1d1c0ad796bd2174c564a12a3a5b88e017efc97" translate="yes" xml:space="preserve">
          <source>This next example, on the other hand, uses the current &lt;code&gt;fullscreenElement&lt;/code&gt; property to determine the same thing:</source>
          <target state="translated">一方、この次の例では、現在の &lt;code&gt;fullscreenElement&lt;/code&gt; プロパティを使用して同じことを決定しています。</target>
        </trans-unit>
        <trans-unit id="1593be0d67dd5c3f99acae95bbbef5a4ea11cb20" translate="yes" xml:space="preserve">
          <source>This next function, instead of prepending the new scripts immediately before the &lt;a href=&quot;document/currentscript&quot;&gt;&lt;code&gt;document.currentScript&lt;/code&gt;&lt;/a&gt; element, appends them as children of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head&quot;&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">この次の関数は、&lt;a href=&quot;document/currentscript&quot;&gt; &lt;code&gt;document.currentScript&lt;/code&gt; &lt;/a&gt;要素の直前に新しいスクリプトを追加する代わりに、それらを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head&quot;&gt; &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; &lt;/a&gt;タグの子として追加します。</target>
        </trans-unit>
        <trans-unit id="c223652e9330c7464331935543a063e6d5d43daa" translate="yes" xml:space="preserve">
          <source>This next line opens up a transaction on the Database, then opens an object store that we can then manipulate the data inside of.</source>
          <target state="translated">この次の行は、データベース上のトランザクションを開き、オブジェクトストアを開き、内部のデータを操作することができます。</target>
        </trans-unit>
        <trans-unit id="7d83755447df0ee41317b75d2e55bb6b2376dada" translate="yes" xml:space="preserve">
          <source>This node is then connected to your audio source at some point between your source and your destination, for example:</source>
          <target state="translated">そして、このノードは、例えば、ソースとデスティネーションの間のどこかのポイントでオーディオソースに接続されます。</target>
        </trans-unit>
        <trans-unit id="306aa3f9bcbef5dc478583c55d23f25bd51446f3" translate="yes" xml:space="preserve">
          <source>This non-standard event handler was only implemented by a few browsers and has been removed from all or nearly all of them.</source>
          <target state="translated">この非標準のイベントハンドラは、いくつかのブラウザでしか実装されていませんでしたが、すべてまたはほぼすべてのブラウザから削除されました。</target>
        </trans-unit>
        <trans-unit id="baa4af3753266076e67307a8937b9d5849ff70f7" translate="yes" xml:space="preserve">
          <source>This number is zero-based. If the selection begins with the first character in the &lt;a href=&quot;anchornode&quot;&gt;&lt;code&gt;Selection.anchorNode&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;0&lt;/code&gt; is returned.</source>
          <target state="translated">この数はゼロベースです。選択 &lt;code&gt;0&lt;/code&gt; が&lt;a href=&quot;anchornode&quot;&gt; &lt;code&gt;Selection.anchorNode&lt;/code&gt; の&lt;/a&gt;最初の文字で始まる場合、0が返されます。</target>
        </trans-unit>
        <trans-unit id="5cbad8fda1e95cfc053c26e219ef58b1fd97738c" translate="yes" xml:space="preserve">
          <source>This number is zero-based. If the selection ends with the first character in the &lt;a href=&quot;focusnode&quot;&gt;&lt;code&gt;Selection.focusNode&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;0&lt;/code&gt; is returned.</source>
          <target state="translated">この数はゼロベースです。選択 &lt;code&gt;0&lt;/code&gt; が&lt;a href=&quot;focusnode&quot;&gt; &lt;code&gt;Selection.focusNode&lt;/code&gt; の&lt;/a&gt;最初の文字で終わる場合、0が返されます。</target>
        </trans-unit>
        <trans-unit id="940329f349ee34bce5d59fff7515f73ebe85dec2" translate="yes" xml:space="preserve">
          <source>This object is a Microsoft extension and is only supported in Internet Explorer.</source>
          <target state="translated">このオブジェクトはMicrosoftの拡張機能で、Internet Explorerでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="be522cc8b063a6920315458c87d0513b815218fa" translate="yes" xml:space="preserve">
          <source>This object is available from the &lt;a href=&quot;dragevent/datatransfer&quot;&gt;&lt;code&gt;dataTransfer&lt;/code&gt;&lt;/a&gt; property of all &lt;a href=&quot;dragevent&quot;&gt;&lt;code&gt;drag events&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このオブジェクトは、すべての&lt;a href=&quot;dragevent&quot;&gt; &lt;code&gt;drag events&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;dragevent/datatransfer&quot;&gt; &lt;code&gt;dataTransfer&lt;/code&gt; &lt;/a&gt;プロパティから利用できます。</target>
        </trans-unit>
        <trans-unit id="703fdc4304843983fe933dc8afe12c1ec034fab6" translate="yes" xml:space="preserve">
          <source>This object provides the developer with access to details they can use to complete the logical steps required after the payment completes, such as an email address to contact the customer, a shipping address for mailing goods out to them, etc. In the code above, you'll see that we've called the &lt;a href=&quot;../paymentresponse/complete&quot;&gt;&lt;code&gt;PaymentResponse.complete()&lt;/code&gt;&lt;/a&gt; method to signal that the interaction has finished &amp;mdash; you'd use this to carry out finishing steps, like updating the user interface to tell the user the transaction is complete, etc.</source>
          <target state="translated">このオブジェクトにより、開発者は、顧客に連絡するための電子メールアドレス、商品を顧客に発送するための配送先住所など、支払いの完了後に必要な論理的な手順を完了するために使用できる詳細にアクセスできます。上記のコードでは、あなたは私たちが呼ばれたことがわかります&lt;a href=&quot;../paymentresponse/complete&quot;&gt; &lt;code&gt;PaymentResponse.complete()&lt;/code&gt; &lt;/a&gt;など、トランザクションが完了したユーザーに伝えるために、ユーザインターフェースを更新するように、あなたは仕上げのステップを実行するためにこれを使用したい-相互作用が終了したことを信号にする方法。</target>
        </trans-unit>
        <trans-unit id="fba8d6032bc6d8a0ed89dfea7b3354308a5c8d7f" translate="yes" xml:space="preserve">
          <source>This object store can hold any kind of value, even primitive values like numbers and strings. You must supply a separate key argument whenever you want to add a new value.</source>
          <target state="translated">このオブジェクトストアは、数値や文字列のような原始的な値であっても、あらゆる種類の値を保持することができます。新しい値を追加したい場合は、必ず別のキー引数を与えなければなりません。</target>
        </trans-unit>
        <trans-unit id="6fcfdb858c2412447d660cb05faa616e7f7af0c3" translate="yes" xml:space="preserve">
          <source>This object store can hold any kind of value. The key is generated for you automatically, or you can supply a separate key argument if you want to use a specific key.</source>
          <target state="translated">このオブジェクトストアは、任意の種類の値を保持することができます。キーは自動的に生成されますが、特定のキーを使用したい場合は別のキー引数を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="07130e6e78a02544bef780e09dfa88a12f6b7ed9" translate="yes" xml:space="preserve">
          <source>This object store can only hold JavaScript objects. The objects must have a property with the same name as the key path.</source>
          <target state="translated">このオブジェクトストアは、JavaScriptオブジェクトのみを保持することができます。オブジェクトは、キーパスと同じ名前のプロパティを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="e353cec25577f892491c2f20f39482ee5015a3fe" translate="yes" xml:space="preserve">
          <source>This object store can only hold JavaScript objects. Usually a key is generated and the value of the generated key is stored in the object in a property with the same name as the key path. However, if such a property already exists, the value of that property is used as key rather than generating a new key.</source>
          <target state="translated">このオブジェクトストアは、JavaScriptのオブジェクトのみを保持することができます。通常はキーが生成され、生成されたキーの値がキーパスと同じ名前のプロパティに格納されます。ただし、そのようなプロパティが既に存在する場合は、新しいキーを生成するのではなく、そのプロパティの値をキーとして使用します。</target>
        </trans-unit>
        <trans-unit id="6951712409d59ff3362e3eb3af151fa62b05a9cf" translate="yes" xml:space="preserve">
          <source>This object store's transaction is inactive.</source>
          <target state="translated">このオブジェクト ストアのトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="30d7abd36ae7bd6c55ca4bb581753cc89886506c" translate="yes" xml:space="preserve">
          <source>This obsolete property is a string specifies a single ICE server's URL. &lt;strong&gt;Do not use this property; use &lt;a href=&quot;rtciceserver/urls&quot;&gt;&lt;code&gt;RTCIceServer.urls&lt;/code&gt;&lt;/a&gt; instead.&lt;/strong&gt; Because many older books and examples still use this, we include it to help developers update their code or make sense of older examples.</source>
          <target state="translated">この廃止されたプロパティは、単一のICEサーバーのURLを指定する文字列です。&lt;strong&gt;このプロパティは使用しないでください。代わりに&lt;a href=&quot;rtciceserver/urls&quot;&gt; &lt;code&gt;RTCIceServer.urls&lt;/code&gt; &lt;/a&gt;を使用してください。&lt;/strong&gt;古い本や例の多くがまだこれを使用しているため、開発者がコードを更新したり、古い例を理解したりするのに役立つように、これを含めています。</target>
        </trans-unit>
        <trans-unit id="9bb4f6a48c083e371f1ded0c8400d96f39099e02" translate="yes" xml:space="preserve">
          <source>This obsolete property was removed in the &lt;a href=&quot;https://www.w3.org/TR/2018/CR-payment-request-20180503&quot;&gt;May 3, 2018 update&lt;/a&gt; of the Payment Request API specification.</source>
          <target state="translated">この廃止されたプロパティは、Payment Request API仕様の&lt;a href=&quot;https://www.w3.org/TR/2018/CR-payment-request-20180503&quot;&gt;2018年5月3日の更新&lt;/a&gt;で削除されました。</target>
        </trans-unit>
        <trans-unit id="1ae78928a083a95abff40285126128651861dc3e" translate="yes" xml:space="preserve">
          <source>This obsolete property was used to provide an optional array of &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;s representing the card types that the retailer supports (e.g. &lt;code&gt;credit&lt;/code&gt;, &lt;code&gt;debit&lt;/code&gt;, &lt;code&gt;prepaid&lt;/code&gt;). If the property is missing, it implies that all the card types are supported. Instead of using this property, it is up to the server to check support for the card given the information coded into the account number.</source>
          <target state="translated">この廃止されたプロパティは、小売業者がサポートするカードの種類（たとえば、 &lt;code&gt;credit&lt;/code&gt; 、 &lt;code&gt;debit&lt;/code&gt; 、 &lt;code&gt;prepaid&lt;/code&gt; ）を表す&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;のオプションの配列を提供するために使用されました。プロパティがない場合は、すべてのカードタイプがサポートされていることを意味します。このプロパティを使用する代わりに、アカウント番号にコード化された情報を与えられたカードのサポートをチェックするのはサーバー次第です。</target>
        </trans-unit>
        <trans-unit id="53a0db10b3c37783c41ece086fdd19c05546894c" translate="yes" xml:space="preserve">
          <source>This obtains the value of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type&quot;&gt;Content-Type&lt;/a&gt; header into the variable &lt;code&gt;contentType&lt;/code&gt;.</source>
          <target state="translated">これにより、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type&quot;&gt;Content-Type&lt;/a&gt;ヘッダーの値が変数 &lt;code&gt;contentType&lt;/code&gt; に取得されます。</target>
        </trans-unit>
        <trans-unit id="d424b5f867fa6662f042c5e30557e2bc1c49ae88" translate="yes" xml:space="preserve">
          <source>This occurs when the &lt;a href=&quot;../speechsynthesis/pause&quot;&gt;&lt;code&gt;SpeechSynthesis.pause()&lt;/code&gt;&lt;/a&gt; method is invoked.</source>
          <target state="translated">これは、&lt;a href=&quot;../speechsynthesis/pause&quot;&gt; &lt;code&gt;SpeechSynthesis.pause()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="64b4ca2b0f0b0b6ab1f66a21cc72ff4427adcae1" translate="yes" xml:space="preserve">
          <source>This occurs when the &lt;a href=&quot;../speechsynthesis/resume&quot;&gt;&lt;code&gt;SpeechSynthesis.resume()&lt;/code&gt;&lt;/a&gt; method is invoked on a paused speech synthesis instance.</source>
          <target state="translated">これは、一時停止した音声合成インスタンスで&lt;a href=&quot;../speechsynthesis/resume&quot;&gt; &lt;code&gt;SpeechSynthesis.resume()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="e797f8f488cf92efeb3ce06ebb98a4c0c96c9fce" translate="yes" xml:space="preserve">
          <source>This occurs when the &lt;a href=&quot;../speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt; method is invoked.</source>
          <target state="translated">これは、&lt;a href=&quot;../speechsynthesis/speak&quot;&gt; &lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="d8cc7d83b3d2f8e2b56e424586f21ec3569c4709" translate="yes" xml:space="preserve">
          <source>This one-line example simply obtains the current candidate pair and then from that gets the local candidate.</source>
          <target state="translated">この一行の例では、単純に現在の候補のペアを取得し、そこからローカルの候補を取得します。</target>
        </trans-unit>
        <trans-unit id="d23b7f45fdf06009bb9cfca66515aff5b2e5d3ce" translate="yes" xml:space="preserve">
          <source>This one-line example simply obtains the current candidate pair and then from that gets the remote candidate.</source>
          <target state="translated">この一行の例では、単純に現在の候補のペアを取得し、そこからリモートの候補を取得します。</target>
        </trans-unit>
        <trans-unit id="d698f1fcd037e932bc716a6fba6841e149d3dfc8" translate="yes" xml:space="preserve">
          <source>This operation is a no-op. It doesn't do anything. Previously it was telling the engine that the &lt;code&gt;NodeIterator&lt;/code&gt; was no more used, but this is now useless.</source>
          <target state="translated">この操作はノーオペレーションです。何もしません。以前は、 &lt;code&gt;NodeIterator&lt;/code&gt; が使用されなくなったことをエンジンに伝えていましたが、これは今では役に立たなくなりました。</target>
        </trans-unit>
        <trans-unit id="3d26dd6b75bb7f652e7b91288c478c1bd85dd32d" translate="yes" xml:space="preserve">
          <source>This output will look like this:</source>
          <target state="translated">この出力は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="da8f26d251ba9657ede58937e23fa4c4e0e2f552" translate="yes" xml:space="preserve">
          <source>This page describes how to use the &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core&quot;&gt;DOM Core&lt;/a&gt; API in JavaScript to create and modify DOM objects. It applies to all Gecko-based applications (such as Firefox) both in privileged (extensions) and unprivileged (web pages) code.</source>
          <target state="translated">このページでは、JavaScriptで&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core&quot;&gt;DOM Core&lt;/a&gt; APIを使用してDOMオブジェクトを作成および変更する方法について説明します。特権（拡張）コードと非特権（Webページ）コードの両方で、すべてのGeckoベースのアプリケーション（Firefoxなど）に適用されます。</target>
        </trans-unit>
        <trans-unit id="efc1a0c5840063ff2f90b7c8e5c0c667e1b8160f" translate="yes" xml:space="preserve">
          <source>This page describes how to use the &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-Core&quot;&gt;DOM Core&lt;/a&gt; API in JavaScript to create and modify DOM objects. It applies to all Gecko-based applications (such as Firefox) both in privileged (extensions) and unprivileged (web pages) code.</source>
          <target state="translated">このページでは、JavaScriptで&lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-Core&quot;&gt;DOM CoreAPI&lt;/a&gt;を使用してDOMオブジェクトを作成および変更する方法について説明します。これは、特権（拡張）コードと非特権（Webページ）コードの両方で、すべてのGeckoベースのアプリケーション（Firefoxなど）に適用されます。</target>
        </trans-unit>
        <trans-unit id="7d124adba065c10a246bd33f7be71c29dccd15c4" translate="yes" xml:space="preserve">
          <source>This page documents the &lt;a href=&quot;#Methods&quot;&gt;Methods&lt;/a&gt; available on the &lt;code&gt;Console&lt;/code&gt; object and gives a few &lt;a href=&quot;#Usage&quot;&gt;Usage&lt;/a&gt; examples.</source>
          <target state="translated">このページでは、 &lt;code&gt;Console&lt;/code&gt; オブジェクトで使用できる&lt;a href=&quot;#Methods&quot;&gt;メソッド&lt;/a&gt;について説明し、&lt;a href=&quot;#Usage&quot;&gt;使用&lt;/a&gt;例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="e68f64bd15ffaef416e63ae368e2e22bbcb35e64" translate="yes" xml:space="preserve">
          <source>This page is currently under construction, and some of the content will move to other pages as the WebRTC guide material is built out. Pardon our dust!</source>
          <target state="translated">このページは現在建設中であり、WebRTCガイドの資料が完成するにつれ、コンテンツの一部は他のページに移動する予定です。塵も積もれば埃も積もれば埃も積もれば埃も積もれば埃も積もれば埃も積もれば埃も積もれば埃も積もっています。</target>
        </trans-unit>
        <trans-unit id="4f8dd381093e02d3c56d8bf2d6a1a2b6d6c9bc23" translate="yes" xml:space="preserve">
          <source>This page is not complete.</source>
          <target state="translated">このページは完全ではありません。</target>
        </trans-unit>
        <trans-unit id="bc59c6f19bb6330e365482e523c257be5776bfeb" translate="yes" xml:space="preserve">
          <source>This parameter is currently not supported on Chrome or Opera.</source>
          <target state="translated">このパラメータは現在のところChromeとOperaではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="9606d3a783b2d05d245c0b83d5dd60cfff808458" translate="yes" xml:space="preserve">
          <source>This payment handler would need to live in a service worker at &lt;code&gt;https://example.com/preauth&lt;/code&gt; scope.</source>
          <target state="translated">この支払いハンドラは、 &lt;code&gt;https://example.com/preauth&lt;/code&gt; スコープのサービスワーカーに存在する必要があります。</target>
        </trans-unit>
        <trans-unit id="526f7e033626871627a2cca28b2218cf2ea7938d" translate="yes" xml:space="preserve">
          <source>This processing is useful if you wish to examine the data that a drag is holding. Simply drop an item on the drop target in the example to see what items, formats and data was being dragged.</source>
          <target state="translated">この処理は、ドラッグで保持しているデータを調べたい場合に便利です。例のドロップ対象にアイテムをドロップするだけで、どのようなアイテムやフォーマット、データがドラッグされていたのかを確認することができます。</target>
        </trans-unit>
        <trans-unit id="96c33de1ad7414c6ac789d4708739d4df25351ec" translate="yes" xml:space="preserve">
          <source>This property always returns &lt;code&gt;true&lt;/code&gt;. Originally, it returned &lt;code&gt;true &lt;/code&gt;if the attribute was explicitly specified in the source code or by a script, and &lt;code&gt;false&lt;/code&gt; if its value came from the default one defined in the document's</source>
          <target state="translated">このプロパティは常に &lt;code&gt;true&lt;/code&gt; を返します。もともと、それが返された &lt;code&gt;true &lt;/code&gt; 属性が明示的にソースコードやスクリプトで指定された場合、および &lt;code&gt;false&lt;/code&gt; の値は、ドキュメントの中で定義されたデフォルトの1から来た場合には</target>
        </trans-unit>
        <trans-unit id="9be7f021bdbac6b6be61a9b99c12ba29b7c0f1d5" translate="yes" xml:space="preserve">
          <source>This property applies only to &lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorkers&lt;/a&gt;. In other contexts it will return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">このプロパティは&lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorkersに&lt;/a&gt;のみ適用されます。他のコンテキストでは &lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bb37412a510ce844f2a217fac557f67c5d5aec7d" translate="yes" xml:space="preserve">
          <source>This property applies only to the &lt;code&gt;dragend&lt;/code&gt; event, and is &lt;code&gt;true&lt;/code&gt; if the user canceled the drag operation by pressing escape. It will be &lt;code&gt;false&lt;/code&gt; in all other cases, including if the drag failed for any other reason, for instance due to a drop over an invalid location.</source>
          <target state="translated">このプロパティは &lt;code&gt;dragend&lt;/code&gt; イベントにのみ適用され、ユーザーがエスケープを押してドラッグ操作をキャンセルした場合は &lt;code&gt;true&lt;/code&gt; です。それは次のようになります &lt;code&gt;false&lt;/code&gt; ドラッグが無効な場所の上に落下し、たとえば、他の理由で失敗した場合を含め、他のすべてのケースで。</target>
        </trans-unit>
        <trans-unit id="cbed96ff37c60f2a5b6adbd1108720a5d4ac6ef6" translate="yes" xml:space="preserve">
          <source>This property applies to HTML, SVG, XUL, and other documents in Gecko.</source>
          <target state="translated">このプロパティは、Gecko の HTML、SVG、XUL、その他のドキュメントに適用されます。</target>
        </trans-unit>
        <trans-unit id="75b0ffbf7f735bb8c1cdbee9c3fd73c3e342b288" translate="yes" xml:space="preserve">
          <source>This property can be &lt;code&gt;null&lt;/code&gt; for requests not made within transactions, such as for requests returned from &lt;a href=&quot;../idbfactory/open&quot;&gt;&lt;code&gt;IDBFactory.open&lt;/code&gt;&lt;/a&gt; &amp;mdash; in this case you're just connecting to a database, so there is no transaction to return. If a version upgrade is needed when opening a database then during the &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;upgradeneeded&lt;/code&gt;&lt;/a&gt; event handler the &lt;code&gt;transaction&lt;/code&gt; property will be an &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../idbtransaction/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; equal to &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt;, and can be used to access existing object stores and indexes, or abort the the upgrade. Following the upgrade, the &lt;code&gt;transaction&lt;/code&gt; ​property will again be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../idbfactory/open&quot;&gt; &lt;code&gt;IDBFactory.open&lt;/code&gt; &lt;/a&gt;から返されたリクエストなど、トランザクション内で作成されていないリクエストの場合、このプロパティは &lt;code&gt;null&lt;/code&gt; になる可能性があります。この場合、データベースに接続しているだけなので、返されるトランザクションはありません。中に、データベースを開くときにバージョンアップが必要な場合は&lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt; &lt;code&gt;upgradeneeded&lt;/code&gt; &lt;/a&gt;イベントハンドラ &lt;code&gt;transaction&lt;/code&gt; プロパティは次のようになります&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../idbtransaction/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;等しく &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt; 、およびアクセス既存のオブジェクトストアとインデックスに使用することができ、またはアップグレード中止します。アップグレード後、 &lt;code&gt;transaction&lt;/code&gt; プロパティは再び &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b30430c53c88ac5dc775dcd8d7b788057993dce9" translate="yes" xml:space="preserve">
          <source>This property can be configured by specifying the value of the &lt;a href=&quot;../rtcicecandidateinit/candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt; property when constructing the new candidate object using &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;rtcicecandidate&quot;&gt; &lt;code&gt;RTCIceCandidate()&lt;/code&gt; &lt;/a&gt;を使用して新しい候補オブジェクトを作成するときに&lt;a href=&quot;../rtcicecandidateinit/candidate&quot;&gt; &lt;code&gt;candidate&lt;/code&gt; &lt;/a&gt;プロパティの値を指定することで構成できます。</target>
        </trans-unit>
        <trans-unit id="86b7d843ef90cb6c897bff69e5b1627c2a2d4a17" translate="yes" xml:space="preserve">
          <source>This property can be configured by specifying the value of the &lt;a href=&quot;../rtcicecandidateinit/sdpmid&quot;&gt;&lt;code&gt;sdpMid&lt;/code&gt;&lt;/a&gt; property when constructing the new candidate object using &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate()&lt;/code&gt;&lt;/a&gt;. If you call the constructor with an m-line string instead of an &lt;code&gt;RTCIceCandidateInit&lt;/code&gt; object, the value of &lt;code&gt;sdpMid&lt;/code&gt; is extracted from the specified candidate m-line string.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;rtcicecandidate&quot;&gt; &lt;code&gt;RTCIceCandidate()&lt;/code&gt; &lt;/a&gt;を使用して新しい候補オブジェクトを構築するときに&lt;a href=&quot;../rtcicecandidateinit/sdpmid&quot;&gt; &lt;code&gt;sdpMid&lt;/code&gt; &lt;/a&gt;プロパティの値を指定することで構成できます。あなたは、M-行の文字列の代わりにコンストラクタを呼び出す場合 &lt;code&gt;RTCIceCandidateInit&lt;/code&gt; のオブジェクトの値 &lt;code&gt;sdpMid&lt;/code&gt; は、指定された候補のm行の文字列から抽出されます。</target>
        </trans-unit>
        <trans-unit id="5578b64b341449869ee0f41f0158a86cff600df9" translate="yes" xml:space="preserve">
          <source>This property can be used to measure the speed of loading Web sites that users &lt;em&gt;feels&lt;/em&gt;. Nevertheless there are a few caveats that happens if scripts are blocking rendering and not loaded asynchronously or with custom Web fonts. &lt;a href=&quot;http://www.stevesouders.com/blog/2015/08/07/dominteractive-is-it-really/&quot;&gt;Check if you are in one of these cases&lt;/a&gt; before using this property as a proxy for the user experience of a Web site's speed of loading.</source>
          <target state="translated">このプロパティを使用して、ユーザー&lt;em&gt;が感じる&lt;/em&gt; Webサイトの読み込み速度を測定できます。それにもかかわらず、スクリプトがレンダリングをブロックし、非同期またはカスタムWebフォントで読み込まれていない場合に発生するいくつかの警告があります。このプロパティをWebサイトの読み込み速度のユーザーエクスペリエンスのプロキシとして使用&lt;a href=&quot;http://www.stevesouders.com/blog/2015/08/07/dominteractive-is-it-really/&quot;&gt;する&lt;/a&gt;前に、これらのケースのいずれかであるかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="70ef84ced933a0da318dbc4a0d3f50c3906e37c8" translate="yes" xml:space="preserve">
          <source>This property cannot be changed during while the sourceBuffer is processing either an &lt;a href=&quot;appendbuffer&quot;&gt;&lt;code&gt;appendBuffer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">このプロパティは、sourceBufferが&lt;a href=&quot;appendbuffer&quot;&gt; &lt;code&gt;appendBuffer()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;呼び出しを処理している間は変更できません。</target>
        </trans-unit>
        <trans-unit id="dc82c1e1bb0f22877629b67a4b70d523f999779b" translate="yes" xml:space="preserve">
          <source>This property controls what type of readable stream is being dealt with. If it is included with a value set to &lt;code&gt;bytes&lt;/code&gt;, the passed controller object will be a &lt;a href=&quot;../readablebytestreamcontroller&quot;&gt;&lt;code&gt;ReadableByteStreamController&lt;/code&gt;&lt;/a&gt; capable of handling a BYOB (bring your own buffer)/byte stream. If it is not included, the passed controller will be a &lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt;&lt;code&gt;ReadableStreamDefaultController&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、処理される読み取り可能なストリームのタイプを制御します。値が &lt;code&gt;bytes&lt;/code&gt; に設定されて含まれている場合、渡されるコントローラーオブジェクトは、BYOB（独自のバッファーを使用）/バイトストリームを処理できる&lt;a href=&quot;../readablebytestreamcontroller&quot;&gt; &lt;code&gt;ReadableByteStreamController&lt;/code&gt; に&lt;/a&gt;なります。含まれていない場合、渡されるコントローラーは&lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt; &lt;code&gt;ReadableStreamDefaultController&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0b01948a82c7a48469804d22a4f429a584b33a4c" translate="yes" xml:space="preserve">
          <source>This property defines the radius of the circle element. It is denoted by the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/r&quot;&gt;r&lt;/a&gt;&lt;/code&gt; of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle&quot;&gt;&lt;code&gt;&amp;lt;circle&amp;gt;&lt;/code&gt;&lt;/a&gt; element. A negative value gives an error, while &lt;code&gt;0&lt;/code&gt; disables the rendering of the element.</source>
          <target state="translated">このプロパティは、円要素の半径を定義します。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle&quot;&gt; &lt;code&gt;&amp;lt;circle&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/r&quot;&gt;r&lt;/a&gt;&lt;/code&gt; で示されます。負の値はエラーになりますが、 &lt;code&gt;0&lt;/code&gt; は要素のレンダリングを無効にします。</target>
        </trans-unit>
        <trans-unit id="2a5e8188a256408decd863a708cc7c7663bf3aa1" translate="yes" xml:space="preserve">
          <source>This property defines the x-coordinate of the center of the circle element. It is denoted by the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cx&quot;&gt;cx&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle&quot;&gt;&lt;code&gt;&amp;lt;circle&amp;gt;&lt;/code&gt;&lt;/a&gt; element. If unspecified, the value of this attribute is assumed to be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">このプロパティは、円要素の中心のx座標を定義します。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle&quot;&gt; &lt;code&gt;&amp;lt;circle&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cx&quot;&gt;cx&lt;/a&gt;&lt;/code&gt; 属性で示されます。指定しない場合、この属性の値は &lt;code&gt;0&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="72fe2f637f188bb7a27f2ef2ddeedd208ad4d2ca" translate="yes" xml:space="preserve">
          <source>This property defines the y-coordinate of the center of the circle element. It is denoted by the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cy&quot;&gt;cy&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle&quot;&gt;&lt;code&gt;&amp;lt;circle&amp;gt;&lt;/code&gt;&lt;/a&gt; element. If unspecified, the value of this attribute is assumed to be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">このプロパティは、円要素の中心のy座標を定義します。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle&quot;&gt; &lt;code&gt;&amp;lt;circle&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/cy&quot;&gt;cy&lt;/a&gt;&lt;/code&gt; 属性で示されます。指定しない場合、この属性の値は &lt;code&gt;0&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="13a0c5b8c9aa502986a0b20c8f0855b7659c2615" translate="yes" xml:space="preserve">
          <source>This property does not exist in Internet Explorer and Chrome.</source>
          <target state="translated">このプロパティはInternet ExplorerとChromeには存在しません。</target>
        </trans-unit>
        <trans-unit id="01e4aa886c818765b5aefe84c4d6d940b056c6ff" translate="yes" xml:space="preserve">
          <source>This property does not work in default configuration of Firefox and some other browsers: setting &lt;code&gt;window.status&lt;/code&gt; has no effect on the text displayed in the status bar. To allow scripts to change the the status bar text, the user must set the &lt;code&gt;dom.disable_window_status_change&lt;/code&gt; preference to &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;about:config&lt;/code&gt; screen.</source>
          <target state="translated">このプロパティは、Firefoxや他の一部のブラウザのデフォルト設定では機能しません &lt;code&gt;window.status&lt;/code&gt; を設定しても、ステータスバーに表示されるテキストには影響しません。スクリプトがステータスバーのテキストを変更できるようにするには、ユーザーは &lt;code&gt;about:config&lt;/code&gt; 画面で &lt;code&gt;dom.disable_window_status_change&lt;/code&gt; プリファレンスを &lt;code&gt;false&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6cadb5b5e7b6fabe94bf5aa7e0af781bf4809343" translate="yes" xml:space="preserve">
          <source>This property existed in older versions of Firefox and Internet Explorer (the specification based itself off of these prior implementations), so you can begin using it immediately. Network status autodetection was implemented in Firefox 2.</source>
          <target state="translated">このプロパティは Firefox や Internet Explorer の古いバージョンにも存在していました(仕様自体はこれらの以前の実装をベースにしています)ので、すぐに使い始めることができます。ネットワーク状態の自動検出はFirefox 2で実装されました。</target>
        </trans-unit>
        <trans-unit id="c423a15ff1eaf79c49f2be001794ab89865b9df2" translate="yes" xml:space="preserve">
          <source>This property has been &lt;strong&gt;removed&lt;/strong&gt; from the specification; you should now use &lt;a href=&quot;ontrack&quot;&gt;&lt;code&gt;RTCPeerConnection.ontrack&lt;/code&gt;&lt;/a&gt; to watch for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; events instead. It is included here in order to help you adapt existing code and understand existing samples, which may not be up-to-date yet.</source>
          <target state="translated">このプロパティは仕様から&lt;strong&gt;削除さ&lt;/strong&gt;れました。代わりに、&lt;a href=&quot;ontrack&quot;&gt; &lt;code&gt;RTCPeerConnection.ontrack&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; イベントを監視する必要があります。これは、既存のコードを適応させ、既存のサンプルを理解するためにここに含まれていますが、まだ最新ではない場合があります。</target>
        </trans-unit>
        <trans-unit id="cdf5a9085dd700c85a3d617e2b54e53836caf8f8" translate="yes" xml:space="preserve">
          <source>This property has been declared as deprecated by the W3C technical recommendation for HTML 4.01 in favor of use of the DTD for obtaining version information for a document.</source>
          <target state="translated">このプロパティは、文書のバージョン情報を取得するためのDTDの使用を支持して、HTML 4.01のためのW3C技術勧告によって非推奨と宣言されています。</target>
        </trans-unit>
        <trans-unit id="fd48f2ddff8ec26cb0b0708cba92fc2c539becfe" translate="yes" xml:space="preserve">
          <source>This property has been removed from the specification; while it's still supported by many browsers, it should no longer be used. You should instead use the newer &lt;a href=&quot;urls&quot;&gt;&lt;code&gt;urls&lt;/code&gt;&lt;/a&gt; property, which allows you to optionally specify multiple URLs for the server. Try to update any existing code to use that property instead.</source>
          <target state="translated">このプロパティは仕様から削除されました。多くのブラウザでまだサポートされていますが、今後は使用しないでください。代わりに、新しい&lt;a href=&quot;urls&quot;&gt; &lt;code&gt;urls&lt;/code&gt; &lt;/a&gt;プロパティを使用する必要があります。これにより、サーバーに複数のURLをオプションで指定できます。代わりに、そのプロパティを使用するように既存のコードを更新してください。</target>
        </trans-unit>
        <trans-unit id="f1a552d50abb4e04e5e0c897bd54c84f67e82ae1" translate="yes" xml:space="preserve">
          <source>This property has been removed from the specification; you should instead rely on the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/ended&quot;&gt;ended&lt;/a&gt;&lt;/code&gt; event or check the value of &lt;a href=&quot;../mediastreamtrack/readystate&quot;&gt;&lt;code&gt;MediaStreamTrack.readyState&lt;/code&gt;&lt;/a&gt; to see if its value is &lt;code&gt;&quot;ended&quot;&lt;/code&gt; for the track or tracks you want to ensure have finished playing.</source>
          <target state="translated">このプロパティは仕様から削除されました。代わりに、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/ended&quot;&gt;ended&lt;/a&gt;&lt;/code&gt; イベントを使用するか、&lt;a href=&quot;../mediastreamtrack/readystate&quot;&gt; &lt;code&gt;MediaStreamTrack.readyState&lt;/code&gt; &lt;/a&gt;の値を確認して、確実に終了したいトラックの値が &lt;code&gt;&quot;ended&quot;&lt;/code&gt; しているかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="f30248aa4d0a5bb83f8c35490204d07b99845f5d" translate="yes" xml:space="preserve">
          <source>This property has been replaced with the &lt;a href=&quot;getlocalstreams&quot;&gt;&lt;code&gt;RTCPeerConnection.getLocalStreams&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getremotestreams&quot;&gt;&lt;code&gt;RTCPeerConnection.getRemoteStreams&lt;/code&gt;&lt;/a&gt; properties. If you have code that uses &lt;code&gt;stream&lt;/code&gt;, you will need to update, since browsers have begun to remove support for &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;getlocalstreams&quot;&gt; &lt;code&gt;RTCPeerConnection.getLocalStreams&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;getremotestreams&quot;&gt; &lt;code&gt;RTCPeerConnection.getRemoteStreams&lt;/code&gt; &lt;/a&gt;プロパティに置き換えられました。 &lt;code&gt;stream&lt;/code&gt; を使用するコードがある場合、ブラウザが &lt;code&gt;stream&lt;/code&gt; のサポートを削除し始めているため、更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="ff925b1d98aac8b0de742810d8b60ffa24c75aad" translate="yes" xml:space="preserve">
          <source>This property has been replaced with the &lt;a href=&quot;id&quot;&gt;&lt;code&gt;RTCDataChannel.id&lt;/code&gt;&lt;/a&gt; property. If you have code that uses &lt;code&gt;stream&lt;/code&gt;, you will need to update, since browsers have begun to remove support for &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;id&quot;&gt; &lt;code&gt;RTCDataChannel.id&lt;/code&gt; &lt;/a&gt;プロパティに置き換えられました。 &lt;code&gt;stream&lt;/code&gt; を使用するコードがある場合、ブラウザが &lt;code&gt;stream&lt;/code&gt; のサポートを削除し始めているため、更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="24374c2ef27bb51eb8ae4572ed89cb6a6a484ed3" translate="yes" xml:space="preserve">
          <source>This property has no effect wherever two connected segments have the same direction, because no joining area will be added in this case. Degenerate segments with a length of zero (i.e., with all endpoints and control points at the exact same position) are also ignored.</source>
          <target state="translated">このプロパティは、2 つの接続されたセグメントが同じ方向を向いていても影響を与えません。長さがゼロの退行セグメント(すなわち、すべての端点と制御点が全く同じ位置にある)も無視されます。</target>
        </trans-unit>
        <trans-unit id="2f4683bd8b666271d20b2e80708da4cc0fb8e819" translate="yes" xml:space="preserve">
          <source>This property indicates the rate of rotation around the X axis -- in degrees per second -- in a &lt;a href=&quot;../devicerotationrate&quot;&gt;&lt;code&gt;DeviceRotationRate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;../devicerotationrate&quot;&gt; &lt;code&gt;DeviceRotationRate&lt;/code&gt; &lt;/a&gt;オブジェクトのX軸を中心とした回転の速度（1秒あたりの度数）を示します。</target>
        </trans-unit>
        <trans-unit id="83cb23fe0f4acf17ec9206965144bfe4e31c3827" translate="yes" xml:space="preserve">
          <source>This property indicates the rate of rotation around the Y axis -- in degrees per second -- in a &lt;a href=&quot;../devicerotationrate&quot;&gt;&lt;code&gt;DeviceRotationRate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;../devicerotationrate&quot;&gt; &lt;code&gt;DeviceRotationRate&lt;/code&gt; &lt;/a&gt;オブジェクトのY軸を中心とした回転の速度（1秒あたりの度数）を示します。</target>
        </trans-unit>
        <trans-unit id="7bdc585c7c6fe5279629fa83be469551232f20a5" translate="yes" xml:space="preserve">
          <source>This property indicates the rate of rotation around the Z axis -- in degrees per second -- in a &lt;a href=&quot;../devicerotationrate&quot;&gt;&lt;code&gt;DeviceRotationRate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;../devicerotationrate&quot;&gt; &lt;code&gt;DeviceRotationRate&lt;/code&gt; &lt;/a&gt;オブジェクトのZ軸を中心とした回転の速度（度/秒）を示します。</target>
        </trans-unit>
        <trans-unit id="094a8caaa94786a68405dc28744e32230252a40d" translate="yes" xml:space="preserve">
          <source>This property indicates whether the current window is closed or not.</source>
          <target state="translated">このプロパティは、現在のウィンドウが閉じられているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="841019e5c952c656d9ae0afcc14bd8667d9a9c23" translate="yes" xml:space="preserve">
          <source>This property indicates whether the window is displayed in full screen mode or not. It is only reliable in Gecko 1.9 (Firefox 3) and later, see the Notes below.</source>
          <target state="translated">このプロパティは、ウィンドウをフルスクリーンモードで表示するかどうかを示します。Gecko 1.9 (Firefox 3)以降でのみ信頼性があります。</target>
        </trans-unit>
        <trans-unit id="2e698f1ed682368f7fa09665c63a3b04322052b9" translate="yes" xml:space="preserve">
          <source>This property indicates whether the window is displayed in full screen or not.</source>
          <target state="translated">このプロパティは、ウィンドウをフルスクリーンで表示するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="5b28af1e2e1af1ea39ad49350fdf9584662690a6" translate="yes" xml:space="preserve">
          <source>This property is &lt;code&gt;null&lt;/code&gt; if the transaction is not finished, is finished and successfully committed, or was aborted with the &lt;a href=&quot;abort&quot;&gt;&lt;code&gt;IDBTransaction.abort&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">トランザクションが完了していない、完了して正常にコミットされた、または&lt;a href=&quot;abort&quot;&gt; &lt;code&gt;IDBTransaction.abort&lt;/code&gt; &lt;/a&gt;メソッドで中止された場合、このプロパティは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1ac67384c6585e3497c26d6f8011fcc9a4f979b3" translate="yes" xml:space="preserve">
          <source>This property is Read only .</source>
          <target state="translated">このプロパティは、読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="61f798358fa75e887f873312f70a032ac522d125" translate="yes" xml:space="preserve">
          <source>This property is a function which handles &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; events. These events, of type &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamEvent&quot;&gt;&lt;code&gt;MediaStreamEvent&lt;/code&gt;&lt;/a&gt;, are sent when streams are added to the connection by the remote peer. The first time an event occurs may be nearly immediately after the remote end of the connection is set using &lt;a href=&quot;setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;; it doesn't wait for a particular stream to be accepted or rejected using SDP negotiation.</source>
          <target state="translated">このプロパティは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; イベントを処理する関数です。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamEvent&quot;&gt; &lt;code&gt;MediaStreamEvent&lt;/code&gt; &lt;/a&gt;タイプのこれらのイベントは、リモートピアによって接続にストリームが追加されたときに送信されます。最初にイベントが発生するのは、&lt;a href=&quot;setremotedescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt; &lt;/a&gt;を使用して接続のリモートエンドが設定された直後です。SDPネゴシエーションを使用して特定のストリームが受け入れられるか拒否されるのを待ちません。</target>
        </trans-unit>
        <trans-unit id="504e6644b64d15f421bd835e380fb4da4986ff39" translate="yes" xml:space="preserve">
          <source>This property is deprecated in the &lt;a href=&quot;https://w3c.github.io/navigation-timing/#obsolete&quot;&gt;Navigation Timing Level 2 specification&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;https://w3c.github.io/navigation-timing/#obsolete&quot;&gt;Navigation Timing Level 2仕様で&lt;/a&gt;は非推奨です。</target>
        </trans-unit>
        <trans-unit id="f112e9cad57b42c0c6f65f1647f618dbd7544e6a" translate="yes" xml:space="preserve">
          <source>This property is deprecated in the &lt;a href=&quot;https://w3c.github.io/navigation-timing/#obsolete&quot;&gt;Navigation Timing Level 2 specification&lt;/a&gt;. Please use the &lt;a href=&quot;timeorigin&quot;&gt;&lt;code&gt;Performance.timeOrigin&lt;/code&gt;&lt;/a&gt; property instead.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;https://w3c.github.io/navigation-timing/#obsolete&quot;&gt;Navigation Timing Level 2仕様で&lt;/a&gt;は非推奨です。代わりに&lt;a href=&quot;timeorigin&quot;&gt; &lt;code&gt;Performance.timeOrigin&lt;/code&gt; &lt;/a&gt;プロパティを使用してください。</target>
        </trans-unit>
        <trans-unit id="6444187f08930a76de21dd4e4c8b8636262d5878" translate="yes" xml:space="preserve">
          <source>This property is especially useful when you are dealing with a window that is in a subframe of a parent or parents, and you want to get to the top-level frameset.</source>
          <target state="translated">このプロパティは、親や親のサブフレームにあるウィンドウを扱っていて、トップレベルのフレームセットを取得したい場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="6c7bb1eaa847d8a3fd7b40c4bfa8ce1ab669e0df" translate="yes" xml:space="preserve">
          <source>This property is implemented as part of a plan to improve compatibility between browsers with regards to button behaviours &amp;mdash; event behaviour is being updated so that &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; only fires for primary button clicks (e.g. left mouse button). Developers can then use &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/auxclick&quot;&gt;auxclick&lt;/a&gt;&lt;/code&gt; to provide explicit behaviour for non-primary button clicks. Previous to this, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; generally fired for clicks on all input device buttons, and browser behaviour was somewhat inconsistent.</source>
          <target state="translated">このプロパティは、ボタンの動作に関するブラウザー間の互換性を向上させる計画の一部として実装されています。イベントの動作は更新され、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; は主ボタンのクリック（左マウスボタンなど）に対してのみ発生します。次に、開発者は &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/auxclick&quot;&gt;auxclick&lt;/a&gt;&lt;/code&gt; を使用して、非プライマリボタンクリックの明示的な動作を提供できます。これに前、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; 、一般的にすべての入力デバイスのボタンのクリックに対して解雇、およびブラウザの動作がやや矛盾していました。</target>
        </trans-unit>
        <trans-unit id="9732588a31893a63449cd186946b5346ba9527b6" translate="yes" xml:space="preserve">
          <source>This property is just a shortcut for &lt;code&gt;HTMLLabelElement.control.form&lt;/code&gt;.</source>
          <target state="translated">このプロパティは &lt;code&gt;HTMLLabelElement.control.form&lt;/code&gt; の単なるショートカットです。</target>
        </trans-unit>
        <trans-unit id="d7de44c1f4e509c75d20d50241d793625fa1b6f0" translate="yes" xml:space="preserve">
          <source>This property is non-nullable (since version 46, in the case of Firefox.) If a request is not provided by some other means, the constructor &lt;code&gt;init&lt;/code&gt; object must contain a request (see &lt;a href=&quot;fetchevent&quot;&gt;&lt;code&gt;FetchEvent.FetchEvent()&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">このプロパティはnullにすることができません（Firefoxの場合、バージョン46以降）。他の方法でリクエストが提供されない場合、コンストラクタの &lt;code&gt;init&lt;/code&gt; オブジェクトにリクエストを含める必要があります（&lt;a href=&quot;fetchevent&quot;&gt; &lt;code&gt;FetchEvent.FetchEvent()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="71a8fb23f6629ffcaf9ed0251d6eb058920c6253" translate="yes" xml:space="preserve">
          <source>This property is non-standard and has been deprecated in favor of &lt;a href=&quot;keyboardevent/key&quot;&gt;&lt;code&gt;KeyboardEvent.key&lt;/code&gt;&lt;/a&gt;. It was part of an old version of DOM Level 3 Events.</source>
          <target state="translated">このプロパティは非標準であり、&lt;a href=&quot;keyboardevent/key&quot;&gt; &lt;code&gt;KeyboardEvent.key&lt;/code&gt; の&lt;/a&gt;ために廃止されました。これは、DOMレベル3イベントの古いバージョンの一部でした。</target>
        </trans-unit>
        <trans-unit id="bd458ed2c08e05a1ca84d3a20148543875bc40f7" translate="yes" xml:space="preserve">
          <source>This property is obsolete and should no longer be used. Instead of making the web app or site worry about this, the onus has been transferred to the payment processor.</source>
          <target state="translated">このプロパティは時代遅れであり、もはや使用されるべきではありません。ウェブアプリやサイトにこれを心配させる代わりに、責任は支払い処理者に移されています。</target>
        </trans-unit>
        <trans-unit id="3f3610235e485f567dcc8d4845d5921670786142" translate="yes" xml:space="preserve">
          <source>This property is obsolete. Use &lt;a href=&quot;ordered&quot;&gt;&lt;code&gt;RTCDataChannel.ordered&lt;/code&gt;&lt;/a&gt; instead in any new code, and update existing code as soon as possible.</source>
          <target state="translated">このプロパティは廃止されました。新しいコードでは、代わりに&lt;a href=&quot;ordered&quot;&gt; &lt;code&gt;RTCDataChannel.ordered&lt;/code&gt; &lt;/a&gt;を使用し、できるだけ早く既存のコードを更新してください。</target>
        </trans-unit>
        <trans-unit id="1333d11a462307980f603748767bc43e2148cb21" translate="yes" xml:space="preserve">
          <source>This property is omitted entirely if voice activity detection is not enabled on the source, or if the &lt;a href=&quot;https://tools.ietf.org/html/rfc6464&quot;&gt;RFC 6464&lt;/a&gt; extension header isn't present.</source>
          <target state="translated">ソースで音声アクティビティ検出が有効になっていない場合、または&lt;a href=&quot;https://tools.ietf.org/html/rfc6464&quot;&gt;RFC 6464&lt;/a&gt;拡張ヘッダーが存在しない場合、このプロパティは完全に省略されます。</target>
        </trans-unit>
        <trans-unit id="7911f77cd640ba2f5fe1ea62ad02eb19fca77f29" translate="yes" xml:space="preserve">
          <source>This property is only reliable in Mozilla 1.9 (Firefox 3) and later. Mozilla 1.8 and earlier do have this property, but it always returns &lt;code&gt;false&lt;/code&gt;, even when the window is in full screen mode (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=127013&quot;&gt;bug 127013&lt;/a&gt;).</source>
          <target state="translated">このプロパティは、Mozilla 1.9（Firefox 3）以降でのみ信頼できます。 Mozilla 1.8以前にはこのプロパティがありますが、ウィンドウが全画面モードであっても、常に &lt;code&gt;false&lt;/code&gt; を返します（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=127013&quot;&gt;バグ127013&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="03679adc92eff5cd22ce63ae04c6f97edc7012a9" translate="yes" xml:space="preserve">
          <source>This property is only set after having called &lt;a href=&quot;setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;. Ideally, your signaling protocol provides a way to detect trickling support, so that you don't need to rely on this property. A WebRTC browser will always support trickle ICE. If trickling isn't supported, or you aren't able to tell, you can check for a falsy value for this property and then wait until the value of &lt;a href=&quot;icegatheringstate&quot;&gt;&lt;code&gt;iceGatheringState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;&quot;completed&quot;&lt;/code&gt; before creating and sending the initial offer. That way, the offer contains all of the candidates.</source>
          <target state="translated">このプロパティは、&lt;a href=&quot;setremotedescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt; &lt;/a&gt;を呼び出した後にのみ設定されます。理想的には、シグナリングプロトコルがトリクルサポートを検出する方法を提供するため、このプロパティに依存する必要はありません。 WebRTCブラウザは常にトリクルICEをサポートします。サポートされていない散水、またはあなたが言うことができない場合は、このプロパティのfalsy値をチェックすることができるとの値になるまで待ち&lt;a href=&quot;icegatheringstate&quot;&gt; &lt;code&gt;iceGatheringState&lt;/code&gt; が&lt;/a&gt;に変わり &lt;code&gt;&quot;completed&quot;&lt;/code&gt; の作成と最初のオファーを送信する前に。このようにして、オファーにはすべての候補者が含まれます。</target>
        </trans-unit>
        <trans-unit id="8a0cd18fa8a51b349c80654d995b8d11d75855cd" translate="yes" xml:space="preserve">
          <source>This property is present in the dictionary (and its value is always &lt;code&gt;true&lt;/code&gt;) if the user agent supports the &lt;code&gt;aspectRatio&lt;/code&gt; constraint. If the property isn't present, this property is missing from the supported constraints dictionary, and you'll get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if you try to look at its value.</source>
          <target state="translated">ユーザーエージェントが &lt;code&gt;aspectRatio&lt;/code&gt; 制約をサポートしている場合、このプロパティはディクショナリに存在します（その値は常に &lt;code&gt;true&lt;/code&gt; です）。プロパティが存在しない場合、このプロパティはサポートされている制約ディクショナリから欠落しており、その値を調べようとすると&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
