<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="jekyll">
    <body>
      <group id="jekyll">
        <trans-unit id="94cab780571d6c057ea749acd5004de75efe7557" translate="yes" xml:space="preserve">
          <source>The pagination plugin exposes the &lt;code&gt;paginator&lt;/code&gt; liquid object with the following attributes:</source>
          <target state="translated">ページネーションプラグインは、次の属性を持つページ &lt;code&gt;paginator&lt;/code&gt; リキッドオブジェクトを公開します。</target>
        </trans-unit>
        <trans-unit id="5bca19e890265d42ab56186c13c21caad0db63f9" translate="yes" xml:space="preserve">
          <source>The path between the source directory and the file of the post or page, e.g. &lt;code&gt;/pages/&lt;/code&gt;. This can be overridden by &lt;code&gt;permalink&lt;/code&gt; in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">ソースディレクトリと投稿またはページのファイルの間のパス（例： &lt;code&gt;/pages/&lt;/code&gt; 。これは、&lt;a href=&quot;../front-matter/index&quot;&gt;フロントマターの&lt;/a&gt; &lt;code&gt;permalink&lt;/code&gt; によって上書きできます。</target>
        </trans-unit>
        <trans-unit id="49273f33d06c3a327a6f3e06d347c5a798c9173f" translate="yes" xml:space="preserve">
          <source>The path to the collection's source directory, relative to the site source.</source>
          <target state="translated">コレクションのソースディレクトリへのパス。</target>
        </trans-unit>
        <trans-unit id="607013a31b5527445f73d56a0042d5c9a723a22c" translate="yes" xml:space="preserve">
          <source>The path to the document's source file relative to the site source.</source>
          <target state="translated">サイトのソースからドキュメントのソースファイルへの相対パス。</target>
        </trans-unit>
        <trans-unit id="8915011b0da5d47f0a745f7b3373841015d3182b" translate="yes" xml:space="preserve">
          <source>The path to the next page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">次のページへのパス、または後続のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa10254d0dd749ff07df4286637eb753f4c515dc" translate="yes" xml:space="preserve">
          <source>The path to the next page.</source>
          <target state="translated">次のページへのパスです。</target>
        </trans-unit>
        <trans-unit id="f3b8c43ed1eb41b60689a541cc4f5f7cfeb27d23" translate="yes" xml:space="preserve">
          <source>The path to the post or page in the built site differs for posts, pages, and collections:</source>
          <target state="translated">構築されたサイト内の投稿やページへのパスは、投稿、ページ、コレクションによって異なります。</target>
        </trans-unit>
        <trans-unit id="d6f100a5aa8766822d8b771278d1c64c2cdee2f6" translate="yes" xml:space="preserve">
          <source>The path to the post, page, or collection is defined as the path relative to the root directory (where your config file is) to the file, not the path from your existing page to the other page.</source>
          <target state="translated">ポスト、ページ、またはコレクションへのパスは、既存のページから他のページへのパスではなく、ファイルへのルートディレクトリ(あなたの設定ファイルがある場所)からの相対パスとして定義されます。</target>
        </trans-unit>
        <trans-unit id="5f48799ceab77320f68f073f470aae839e8f1157" translate="yes" xml:space="preserve">
          <source>The path to the previous page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">前のページへのパス、または前のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eff647ee25865c384ca1ede1d398e0554ab734c7" translate="yes" xml:space="preserve">
          <source>The path to the previous page.</source>
          <target state="translated">前のページへのパス。</target>
        </trans-unit>
        <trans-unit id="cefc07f84d4d77ce198a887194ef89b1cf4d1a7d" translate="yes" xml:space="preserve">
          <source>The path to the raw post or page. Example usage: Linking back to the page or post&amp;rsquo;s source on GitHub. This can be overridden in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">生の投稿またはページへのパス。使用例：GitHubのページまたは投稿のソースにリンクします。これは、&lt;a href=&quot;../front-matter/index&quot;&gt;フロントマターで&lt;/a&gt;オーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="0c9b12566e2f40964253807d83a52db322fbd69c" translate="yes" xml:space="preserve">
          <source>The path to the raw post or page. Example usage: Linking back to the page or post&amp;rsquo;s source on GitHub. This can be overridden in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">生の投稿またはページへのパス。使用例：GitHub上のページまたは投稿のソースにリンクを戻す。これは、&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;で上書きできます。</target>
        </trans-unit>
        <trans-unit id="6e805d5b1200a3ba381a0b2b49d638b2e14751e6" translate="yes" xml:space="preserve">
          <source>The permalink can also be set using a built-in permalink style:</source>
          <target state="translated">パーマリンクは、組み込みのパーマリンクスタイルを使って設定することもできます。</target>
        </trans-unit>
        <trans-unit id="72fd18a07464d558a9db6a54eb33979c9945728d" translate="yes" xml:space="preserve">
          <source>The permalink setting in your configuration file specifies the permalink style used for posts, pages, and collections. However, because pages and collections don&amp;rsquo;t have time or categories, these aspects of the permalink style are ignored with pages and collections.</source>
          <target state="translated">構成ファイルのパーマリンク設定は、投稿、ページ、およびコレクションに使用されるパーマリンクスタイルを指定します。ただし、ページとコレクションには時間やカテゴリがないため、ページとコレクションではパーマリンクスタイルのこれらの側面は無視されます。</target>
        </trans-unit>
        <trans-unit id="bbbc19f68db1886a9c8fc2d75f945c09be7132eb" translate="yes" xml:space="preserve">
          <source>The posts have a reference to the author so let&amp;rsquo;s link it to the author&amp;rsquo;s page. You can do this using a similar filtering technique in &lt;code&gt;_layouts/post.html&lt;/code&gt;:</source>
          <target state="translated">投稿には著者への参照があるので、著者のページにリンクしましょう。これは、 &lt;code&gt;_layouts/post.html&lt;/code&gt; 同様のフィルタリング手法を使用して行うことができます。</target>
        </trans-unit>
        <trans-unit id="06e022e21b12759f491ac6ee44198521b1d39366" translate="yes" xml:space="preserve">
          <source>The previous post relative to the position of the current post in &lt;code&gt;site.posts&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; for the first entry.</source>
          <target state="translated">&lt;code&gt;site.posts&lt;/code&gt; 内の現在の投稿の位置を基準にした以前の投稿。最初のエントリに対して &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0fced1493167b02bdd3aa15d8fc6e58bbaf0adf3" translate="yes" xml:space="preserve">
          <source>The proper solution is to incorporate the default setting for &lt;code&gt;exclude:&lt;/code&gt; rather than override it completely:</source>
          <target state="translated">適切な解決策は、完全に上書きするのではなく、 &lt;code&gt;exclude:&lt;/code&gt; のデフォルト設定を組み込むことです。</target>
        </trans-unit>
        <trans-unit id="1cbf18bffd374ba272b46771db8fc2d3c757a5be" translate="yes" xml:space="preserve">
          <source>The relative path to the file, e.g. &lt;code&gt;/assets/img/image.jpg&lt;/code&gt;</source>
          <target state="translated">ファイルへの相対パス（例： &lt;code&gt;/assets/img/image.jpg&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7dd8f1578fc3a7557a8ee6928df0d34efec33cdb" translate="yes" xml:space="preserve">
          <source>The rendered output of the document, based on the &lt;code&gt;content&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; に基づいて、ドキュメントのレンダリングされた出力。</target>
        </trans-unit>
        <trans-unit id="a1137ea098d68182aa527abeb651f30e7696b541" translate="yes" xml:space="preserve">
          <source>The rendered output of this page is:</source>
          <target state="translated">このページのレンダリング出力は</target>
        </trans-unit>
        <trans-unit id="b32b39b3a955ea487adb6195a64209b744d16c1e" translate="yes" xml:space="preserve">
          <source>The rendering phase is further divisible into three optional stages. Every file rendered, passes through one or more of these stages as determined by the file&amp;rsquo;s content string, front matter and extension. The stages are akin to an assembly line, with the &lt;em&gt;output&lt;/em&gt; from a stage being the &lt;em&gt;input&lt;/em&gt; for the succeeding stage:</source>
          <target state="translated">レンダリングフェーズは、さらに3つのオプションのステージに分割できます。レンダリングされたすべてのファイルは、ファイルのコンテンツ文字列、フロントマター、および拡張子によって決定されるように、これらのステージの1つ以上を通過します。ステージは組立ラインに似ており、ステージからの&lt;em&gt;出力&lt;/em&gt;が次のステージの&lt;em&gt;入力&lt;/em&gt;になり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c39819f8d905b292e9192e99d02f7e38ed0bb5ce" translate="yes" xml:space="preserve">
          <source>The result is the original HTML code shown earlier.</source>
          <target state="translated">その結果、先ほどの元のHTMLコードになります。</target>
        </trans-unit>
        <trans-unit id="2d2e86e4913f580972837fc6804e77e3337c307b" translate="yes" xml:space="preserve">
          <source>The self-hosted version of Buddy can be installed on any type of server supporting Docker, including &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-linux&quot;&gt;Linux&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-mac-osx&quot;&gt;Mac&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-amazon-ec2&quot;&gt;AWS EC2&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-digitalocean&quot;&gt;DigitalOcean&lt;/a&gt;, and &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-azure&quot;&gt;Microsoft Azure&lt;/a&gt;.</source>
          <target state="translated">Buddyのセルフホストバージョンは、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-linux&quot;&gt;Linux&lt;/a&gt;、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-mac-osx&quot;&gt;Mac&lt;/a&gt;、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-amazon-ec2&quot;&gt;AWS EC2&lt;/a&gt;、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-digitalocean&quot;&gt;DigitalOcean&lt;/a&gt;、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-azure&quot;&gt;Microsoft Azure&lt;/a&gt;など、Dockerをサポートするあらゆるタイプのサーバーにインストールできます。</target>
        </trans-unit>
        <trans-unit id="f2ed2b88e9c4fd64c7ba4920c0ec45f4bf72e7ac" translate="yes" xml:space="preserve">
          <source>The simplest test script runs &lt;code&gt;jekyll build&lt;/code&gt; and ensures that Jekyll doesn&amp;rsquo;t fail to build the site. It doesn&amp;rsquo;t check the resulting site, but it does ensure things are built properly.</source>
          <target state="translated">最も単純なテストスクリプトは &lt;code&gt;jekyll build&lt;/code&gt; を実行し、Jekyllがサイトのビルドに失敗しないことを確認します。結果のサイトはチェックされませんが、適切に構築されていることは確認されます。</target>
        </trans-unit>
        <trans-unit id="d9883957b0dd80adf4891d5ff8c9ac82caeae417" translate="yes" xml:space="preserve">
          <source>The simplest test script simply runs &lt;code&gt;jekyll build&lt;/code&gt; and ensures that Jekyll doesn&amp;rsquo;t fail to build the site. It doesn&amp;rsquo;t check the resulting site, but it does ensure things are built properly.</source>
          <target state="translated">最も単純なテストスクリプトは、 &lt;code&gt;jekyll build&lt;/code&gt; を実行するだけで、Jekyllがサイトのビルドに失敗しないことを確認します。結果のサイトはチェックしませんが、物事が適切に構築されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="1fbbb80622e1f4877a44ac9836e3626289972f67" translate="yes" xml:space="preserve">
          <source>The simplest way of adding a page is just to add an HTML file in the root directory with a suitable name for the page you want to create. For a site with a homepage, an about page, and a contact page, here&amp;rsquo;s what the root directory and associated URLs might look like:</source>
          <target state="translated">ページを追加する最も簡単な方法は、作成するページに適した名前のHTMLファイルをルートディレクトリに追加することです。ホームページ、概要ページ、連絡先ページがあるサイトの場合、ルートディレクトリと関連するURLは次のようになります。</target>
        </trans-unit>
        <trans-unit id="d898295377cdd6071ab43a1fd3c8649e89d1eaf4" translate="yes" xml:space="preserve">
          <source>The simplest way of adding a page is to add an HTML file in the root directory with a suitable filename. You can also write a page in Markdown using a &lt;code&gt;.md&lt;/code&gt; extension which converts to HTML on build. For a site with a homepage, an about page, and a contact page, here&amp;rsquo;s what the root directory and associated URLs might look like:</source>
          <target state="translated">ページを追加する最も簡単な方法は、適切なファイル名でルートディレクトリにHTMLファイルを追加することです。ビルド時にHTMLに変換する &lt;code&gt;.md&lt;/code&gt; 拡張子を使用してMarkdownでページを作成することもできます。ホームページ、概要ページ、連絡先ページがあるサイトの場合、ルートディレクトリと関連するURLは次のようになります。</target>
        </trans-unit>
        <trans-unit id="2001b6492aae4a1a5ec908a999c2789950bd1bf8" translate="yes" xml:space="preserve">
          <source>The simplest way to set a permalink is using front matter. You set the &lt;code&gt;permalink&lt;/code&gt; variable in front matter to the output path you&amp;rsquo;d like.</source>
          <target state="translated">パーマリンクを設定する最も簡単な方法は、フロントマターを使用することです。あなたはセット &lt;code&gt;permalink&lt;/code&gt; あなたが好きな出力パスに前付で変数を。</target>
        </trans-unit>
        <trans-unit id="a6e7785b43b18111e9825f3f6d5716d79d00a506" translate="yes" xml:space="preserve">
          <source>The site is coming together; however, there&amp;rsquo;s no way to navigate between pages. Let&amp;rsquo;s fix that.</source>
          <target state="translated">サイトはまとまっています。ただし、ページ間を移動する方法はありません。それを修正しましょう。</target>
        </trans-unit>
        <trans-unit id="1455b57d88f779ab92ece7f081adcac3c8d1ab21" translate="yes" xml:space="preserve">
          <source>The specified categories for this post but &lt;em&gt;slugified&lt;/em&gt;. If a category is a composite of multiple words, Jekyll will downcase all alphabets and replace any non-alphanumeric character with a hyphen. (e.g. &lt;code&gt;&quot;Work 2 Progress&quot;&lt;/code&gt; will be converted into &lt;code&gt;&quot;work-2-progress&quot;&lt;/code&gt;)</source>
          <target state="translated">この投稿に指定されたカテゴリですが、&lt;em&gt;スラッグ化&lt;/em&gt;されています。カテゴリが複数の単語の複合語である場合、Jekyllはすべてのアルファベットを小文字にし、英数字以外の文字をハイフンに置き換えます。（例： &lt;code&gt;&quot;Work 2 Progress&quot;&lt;/code&gt; は &lt;code&gt;&quot;work-2-progress&quot;&lt;/code&gt; 変換されます）</target>
        </trans-unit>
        <trans-unit id="324e1b599b8f0120ed81a1f72f0909e598305f01" translate="yes" xml:space="preserve">
          <source>The specified categories for this post. If a post has multiple categories, Jekyll will create a hierarchy (e.g. &lt;code&gt;/category1/category2&lt;/code&gt;). Also Jekyll automatically parses out double slashes in the URLs, so if no categories are present, it will ignore this.</source>
          <target state="translated">この投稿に指定されたカテゴリ。投稿に複数のカテゴリがある場合、Jekyllは階層を作成します（例： &lt;code&gt;/category1/category2&lt;/code&gt; ）。また、Jekyllは自動的にURLの二重スラッシュを解析するため、カテゴリが存在しない場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="e0151fba4434afed464fcc55ea7cebab8ceedfc4" translate="yes" xml:space="preserve">
          <source>The string basename of the file e.g. &lt;code&gt;image&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">ファイルなどの文字列ベース名 &lt;code&gt;image&lt;/code&gt; について &lt;code&gt;image.jpg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="699f53647460fa97038c37525c58773da0663c10" translate="yes" xml:space="preserve">
          <source>The string name of the file e.g. &lt;code&gt;image.jpg&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">ファイルの文字列名。たとえば、 &lt;code&gt;image.jpg&lt;/code&gt; の場合は &lt;code&gt;image.jpg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc214d90dd9fb7f65459623b45712619a1c3d727" translate="yes" xml:space="preserve">
          <source>The string you pass to your include parameter can&amp;rsquo;t contain curly braces. For example, you can&amp;rsquo;t pass a parameter that contains this: &lt;code&gt;&quot;The latest version of {{ site.product_name }} is now available.&quot;&lt;/code&gt;</source>
          <target state="translated">includeパラメータに渡す文字列に中括弧を含めることはできません。たとえば、 &lt;code&gt;&quot;The latest version of {{ site.product_name }} is now available.&quot;&lt;/code&gt; を含むパラメーターを渡すことはできません。</target>
        </trans-unit>
        <trans-unit id="5f77a55d669391afd75dd2dbca2f36448b4adac6" translate="yes" xml:space="preserve">
          <source>The subfolders into which you may have organized your posts inside the &lt;code&gt;_posts&lt;/code&gt; directory will not be part of the permalink.</source>
          <target state="translated">&lt;code&gt;_posts&lt;/code&gt; ディレクトリ内で投稿を整理したサブフォルダーは、パーマリンクの一部にはなりません。</target>
        </trans-unit>
        <trans-unit id="2fd5aac3a844b91426edaabba312de231951c1c8" translate="yes" xml:space="preserve">
          <source>The table below lists the available settings for Jekyll, and the various &lt;code&gt;options&lt;/code&gt; (specified in the configuration file) and &lt;code&gt;flags&lt;/code&gt; (specified on the command-line) that control them.</source>
          <target state="translated">以下の表は、Jekyllで使用可能な設定と、それらを制御するさまざまな &lt;code&gt;options&lt;/code&gt; （構成ファイルで指定）および &lt;code&gt;flags&lt;/code&gt; （コマンドラインで指定）を示しています。</target>
        </trans-unit>
        <trans-unit id="091475a77511c1b24393dbbef549277db83e7724" translate="yes" xml:space="preserve">
          <source>The tables below list the available settings for Jekyll, and the various &lt;code&gt;options&lt;/code&gt; (specified in the configuration file) and &lt;code&gt;flags&lt;/code&gt; (specified on the command-line) that control them.</source>
          <target state="translated">次の表に、Jekyllで使用可能な設定と、それらを制御するさまざまな &lt;code&gt;options&lt;/code&gt; （構成ファイルで指定）および &lt;code&gt;flags&lt;/code&gt; （コマンドラインで指定）を示します。</target>
        </trans-unit>
        <trans-unit id="44d31f9d60300458255922f30deb841b5afe6f6b" translate="yes" xml:space="preserve">
          <source>The theme-config should be a set of key-value pairs. An empty config file, a config file that simply &lt;em&gt;lists items&lt;/em&gt; under a key, or a config file with just a simple string of text will simply be ignored silently. Users will not get a warning or any log output regarding this discrepancy.</source>
          <target state="translated">theme-configは、キーと値のペアのセットである必要があります。空の構成ファイル、キーの下の&lt;em&gt;項目&lt;/em&gt;を&lt;em&gt;リスト&lt;/em&gt;するだけの構成ファイル、または単純なテキスト文字列のみを含む構成ファイルは、単にサイレントに無視されます。この不一致に関する警告やログ出力はユーザーに表示されません。</target>
        </trans-unit>
        <trans-unit id="82dc947740014491d8f2712bd18c65fb197bbd5f" translate="yes" xml:space="preserve">
          <source>The theme-config-file cannot be a symlink, irrespective of &lt;code&gt;safe mode&lt;/code&gt; and whether the file pointed to by the symlink is a legitimate file within the theme-gem.</source>
          <target state="translated">&lt;code&gt;safe mode&lt;/code&gt; や、シンボリックリンクが指すファイルがテーマジェム内の正当なファイルであるかどうかに関係なく、theme-config-fileをシンボリックリンクにすることはできません。</target>
        </trans-unit>
        <trans-unit id="3675e302c52313cb9b357ab0e961e492e32b1f98" translate="yes" xml:space="preserve">
          <source>The title of the Page.</source>
          <target state="translated">ページのタイトルです。</target>
        </trans-unit>
        <trans-unit id="f4d87b6139767c562d85e3957db0e08b5090d0ac" translate="yes" xml:space="preserve">
          <source>The un-rendered excerpt of a document.</source>
          <target state="translated">レンダリングされていない文書の抜粋。</target>
        </trans-unit>
        <trans-unit id="c5a47aa2fa70ddabb2590374bd65c420d8f11fd8" translate="yes" xml:space="preserve">
          <source>The un-rendered excerpt of the Page.</source>
          <target state="translated">ページの未レンダリングの抜粋です。</target>
        </trans-unit>
        <trans-unit id="729a789c71cb14e8080187dff3b7cfaa59630c3e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;content&lt;/code&gt; (which is &lt;code&gt;This is my sample note&lt;/code&gt;) will be inserted into the &lt;code&gt;{{ include.content }}&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; の値（ &lt;code&gt;This is my sample note&lt;/code&gt; ）が &lt;code&gt;{{ include.content }}&lt;/code&gt; パラメータに挿入されます。</target>
        </trans-unit>
        <trans-unit id="97140f29686cd51710ca80b53eae9e471b7a772f" translate="yes" xml:space="preserve">
          <source>The various Markdown renderers supported by Jekyll sometimes have extra options available.</source>
          <target state="translated">Jekyllによってサポートされている様々なMarkdownレンダラには、利用可能な追加オプションがあることがあります。</target>
        </trans-unit>
        <trans-unit id="d6f89c7ee8f76c5f0f5511e960cccde79189ec2f" translate="yes" xml:space="preserve">
          <source>The various markup engines that Jekyll uses may have some issues. This page will document them to help others who may run into the same problems.</source>
          <target state="translated">Jekyll が使用する様々なマークアップエンジンには、いくつかの問題があるかもしれません。このページでは、同じ問題に遭遇する可能性のある他の人を助けるために、それらを文書化します。</target>
        </trans-unit>
        <trans-unit id="2f3834334e4679d89fa0b4fa3f690206df9903cd" translate="yes" xml:space="preserve">
          <source>Theme layouts and includes work just like they work in any Jekyll site. Place layouts in your theme&amp;rsquo;s &lt;code&gt;/_layouts&lt;/code&gt; folder, and place includes in your themes &lt;code&gt;/_includes&lt;/code&gt; folder.</source>
          <target state="translated">テーマのレイアウトとインクルードは、他のJekyllサイトと同じように機能します。レイアウトをテーマの &lt;code&gt;/_layouts&lt;/code&gt; フォルダーに配置し、 &lt;code&gt;/_includes&lt;/code&gt; テーマの/ _includesフォルダーに配置します。</target>
        </trans-unit>
        <trans-unit id="9ed34bbdefb2c4a84dd37bde98313dff6c3c687b" translate="yes" xml:space="preserve">
          <source>Theme-gem dependencies3.5.0</source>
          <target state="translated">テーマ・ジェムの依存関係3.5.0</target>
        </trans-unit>
        <trans-unit id="94d5186ba3ec63d1ebcb1e902a2d13ac15f0c527" translate="yes" xml:space="preserve">
          <source>Themes</source>
          <target state="translated">Themes</target>
        </trans-unit>
        <trans-unit id="821a6060b9a347883efc03d96a667931412cf635" translate="yes" xml:space="preserve">
          <source>Themes are published via &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;. You will need a RubyGems account, which you can &lt;a href=&quot;https://rubygems.org/sign_up&quot;&gt;create for free&lt;/a&gt;.</source>
          <target state="translated">テーマは&lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;経由で公開されます。&lt;a href=&quot;https://rubygems.org/sign_up&quot;&gt;無料で作成&lt;/a&gt;できるRubyGemsアカウントが必要です。</target>
        </trans-unit>
        <trans-unit id="32791d9c965069db5c67476fa80d508abb53e543" translate="yes" xml:space="preserve">
          <source>Themes are visual. Show users what your theme looks like by including a screenshot as &lt;code&gt;/screenshot.png&lt;/code&gt; within your theme&amp;rsquo;s repository where it can be retrieved programatically. You can also include this screenshot within your theme&amp;rsquo;s documentation.</source>
          <target state="translated">テーマは視覚的です。プログラムで取得できるテーマのリポジトリ内にスクリーンショットを &lt;code&gt;/screenshot.png&lt;/code&gt; として含めることで、テーマの外観をユーザーに示します。このスクリーンショットをテーマのドキュメントに含めることもできます。</target>
        </trans-unit>
        <trans-unit id="095fbfd516884c54a3c1b3fe114ac68918aa5b95" translate="yes" xml:space="preserve">
          <source>Themes are visual. Show users what your theme looks like by including a screenshot as &lt;code&gt;/screenshot.png&lt;/code&gt; within your theme&amp;rsquo;s repository where it can be retrieved programmatically. You can also include this screenshot within your theme&amp;rsquo;s documentation.</source>
          <target state="translated">テーマは視覚的です。プログラムで取得できるテーマのリポジトリ内に &lt;code&gt;/screenshot.png&lt;/code&gt; としてスクリーンショットを含めることにより、テーマがどのように見えるかをユーザーに示します。このスクリーンショットをテーマのドキュメントに含めることもできます。</target>
        </trans-unit>
        <trans-unit id="20b2f8070c295ff70fe091d9d3d93662adcdd260" translate="yes" xml:space="preserve">
          <source>Then Jekyll will look in &lt;code&gt;my_collections/_books&lt;/code&gt; for the &lt;code&gt;books&lt;/code&gt; collection, and in &lt;code&gt;my_collections/_recipes&lt;/code&gt; for the &lt;code&gt;recipes&lt;/code&gt; collection.</source>
          <target state="translated">次に、Jekyllは &lt;code&gt;my_collections/_books&lt;/code&gt; で &lt;code&gt;books&lt;/code&gt; コレクションを、 &lt;code&gt;my_collections/_recipes&lt;/code&gt; で &lt;code&gt;recipes&lt;/code&gt; コレクションを探します。</target>
        </trans-unit>
        <trans-unit id="64531d3a5b8c925b3e3841e4651bf1b4724da351" translate="yes" xml:space="preserve">
          <source>Then add these lines to your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">次に、これらの行を &lt;code&gt;_config.yml&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="34856595291510a198d8a2c598244e72a27aefa9" translate="yes" xml:space="preserve">
          <source>Then install your plugins using &lt;code&gt;gem install jekyll-gist jekyll-coffeescript jekyll-assets another-jekyll-plugin&lt;/code&gt;</source>
          <target state="translated">次に、 &lt;code&gt;gem install jekyll-gist jekyll-coffeescript jekyll-assets another-jekyll-plugin&lt;/code&gt; を使用してプラグインをインストールします</target>
        </trans-unit>
        <trans-unit id="8faa11a55493c64b083f4ac4d2adcefdd749dedb" translate="yes" xml:space="preserve">
          <source>Then pass this captured variable into the parameter for the include. Omit the quotation marks around the parameter content because it&amp;rsquo;s no longer a string (it&amp;rsquo;s a variable):</source>
          <target state="translated">次に、このキャプチャされた変数をインクルードのパラメーターに渡します。パラメータの内容を囲む引用符は省略します。これは文字列ではない（変数であるため）ためです。</target>
        </trans-unit>
        <trans-unit id="83ab59dbbc4c358554d385d4c5f259e467943dc9" translate="yes" xml:space="preserve">
          <source>Then remove references to the theme gem in &lt;code&gt;Gemfile&lt;/code&gt; and configuration. For example, to remove &lt;code&gt;minima&lt;/code&gt;:</source>
          <target state="translated">次に、 &lt;code&gt;Gemfile&lt;/code&gt; と設定でテーマgemへの参照を削除します。たとえば、 &lt;code&gt;minima&lt;/code&gt; を削除するには：</target>
        </trans-unit>
        <trans-unit id="2e55adac0c3eae2f937308198cb0a0a4bc54e03e" translate="yes" xml:space="preserve">
          <source>Then the following two commands will be equivalent:</source>
          <target state="translated">そうすると、以下の2つのコマンドが等価になります。</target>
        </trans-unit>
        <trans-unit id="1799092c04e909afeb0c36aa003fcded0b82b0c7" translate="yes" xml:space="preserve">
          <source>Then you must tell Jekyll about the plugins that were referenced by the theme. You can find these plugins in the theme&amp;rsquo;s gemspec file as runtime dependencies. If you were converting the Minima theme, for example, you might see:</source>
          <target state="translated">次に、テーマによって参照されたプラグインについてJekyllに通知する必要があります。これらのプラグインは、実行時の依存関係としてテーマのgemspecファイルにあります。たとえば、Minimaテーマを変換している場合は、次のように表示されます。</target>
        </trans-unit>
        <trans-unit id="bb7f7ed349776ee3c7ecdc40273774ac123cda7d" translate="yes" xml:space="preserve">
          <source>There are a bunch of helpful community members on these services who are willing to point you in the right direction.</source>
          <target state="translated">これらのサービスには、あなたを良い方向に指し示してくれる親切なコミュニティのメンバーがたくさんいます。</target>
        </trans-unit>
        <trans-unit id="67ebdd5e11845dd2cbeb2c91125a984928a1dd78" translate="yes" xml:space="preserve">
          <source>There are a number of (optional) extra features that Jekyll supports that you may want to install, depending on how you plan to use Jekyll.</source>
          <target state="translated">Jekyll がサポートしている (オプションの)追加機能の中には、Jekyll をどのように使用するかに応じて、インストールしたいと思うものがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="04ed6a97634dca4b4a7120307ae4efda768d1a9a" translate="yes" xml:space="preserve">
          <source>There are a number of (optional) extra features that Jekyll supports that you may want to install, depending on how you plan to use Jekyll. These extras include LaTeX support, and the use of alternative content rendering engines. Check out &lt;a href=&quot;../extras/index&quot;&gt;the extras page&lt;/a&gt; for more information.</source>
          <target state="translated">Jekyllの使用方法に応じて、インストールするJekyllがサポートする（オプションの）追加機能がいくつかあります。これらの追加機能には、LaTeXサポート、および代替コンテンツレンダリングエンジンの使用が含まれます。詳細については、その他の&lt;a href=&quot;../extras/index&quot;&gt;ページ&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="2d83750a8377a08f11e6459875dcd2f2a9f46fc6" translate="yes" xml:space="preserve">
          <source>There are a number of predefined global variables that you can set in the front matter of a page or post.</source>
          <target state="translated">ページや投稿のフロントマターで設定できる定義済みのグローバル変数がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="fd66353b8ef7b3bfa83b7ab54b508daca1842a78" translate="yes" xml:space="preserve">
          <source>There are a number of ways to easily automate the deployment of a Jekyll site.</source>
          <target state="translated">Jekyllサイトのデプロイを簡単に自動化する方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="1ef55e3a67be87ca194f56e2deb8311f04a467cb" translate="yes" xml:space="preserve">
          <source>There are a number of ways to include digital assets in Jekyll. One common solution is to create a folder in the root of the project directory called something like &lt;code&gt;assets&lt;/code&gt;, into which any images, files or other resources are placed. Then, from within any post, they can be linked to using the site&amp;rsquo;s root as the path for the asset to include. Again, this will depend on the way your site&amp;rsquo;s (sub)domain and path are configured, but here are some examples in Markdown of how you could do this using the &lt;code&gt;absolute_url&lt;/code&gt; filter in a post.</source>
          <target state="translated">ジキルにデジタル資産を含めるには、いくつかの方法があります。一般的な解決策の1つは、 &lt;code&gt;assets&lt;/code&gt; などのプロジェクトディレクトリのルートにフォルダーを作成することです。このフォルダーには、画像、ファイル、その他のリソースが配置されます。次に、任意の投稿内から、サイトのルートをアセットに含めるパスとして使用するようにリンクできます。繰り返しますが、これはサイトの（サブ）ドメインとパスの構成方法によって異なりますが、以下は、Markdownの例で、投稿で &lt;code&gt;absolute_url&lt;/code&gt; フィルターを使用してこれを行う方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f96f14c1d552259b2148b69aba308f1370efc4e7" translate="yes" xml:space="preserve">
          <source>There are also a number of ways to easily automate the deployment of a Jekyll site. If you&amp;rsquo;ve got another method that isn&amp;rsquo;t listed below, we&amp;rsquo;d love it if you &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;contributed&lt;/a&gt; so that everyone else can benefit too.</source>
          <target state="translated">Jekyllサイトのデプロイメントを簡単に自動化する方法もいくつかあります。以下に記載されていない別の方法をお持ちの場合は、他のすべての人にもメリットが得られるように&lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;貢献し&lt;/a&gt;ていただければ幸いです。</target>
        </trans-unit>
        <trans-unit id="0206e4aa57ed0061bee1b20a5eedc8df765286fc" translate="yes" xml:space="preserve">
          <source>There are special &lt;a href=&quot;../permalinks/index#collections&quot;&gt;permalink variables for collections&lt;/a&gt; to help you control the output url for the entire collection.</source>
          <target state="translated">&lt;a href=&quot;../permalinks/index#collections&quot;&gt;コレクション&lt;/a&gt;全体の出力URLを制御するのに役立つ、コレクション用の特別なパーマリンク変数があります。</target>
        </trans-unit>
        <trans-unit id="f9247df2569fe29c6a5a671797604acef1f9aa2c" translate="yes" xml:space="preserve">
          <source>There are three official plugins which are useful on almost any Jekyll site:</source>
          <target state="translated">Jekyllサイトのほぼ全てのサイトで便利な公式プラグインが3つあります。</target>
        </trans-unit>
        <trans-unit id="146807e417714e9e2073254c117e92509edd27c2" translate="yes" xml:space="preserve">
          <source>There are two flags to be aware of when writing a plugin:</source>
          <target state="translated">プラグインを書く際に注意すべきフラグは2つあります。</target>
        </trans-unit>
        <trans-unit id="3dd124f51fc044867754a3dd18bd8fb0218cfd7f" translate="yes" xml:space="preserve">
          <source>There are two unsupported kramdown options</source>
          <target state="translated">サポートされていないクラムダウンオプションは2つあります。</target>
        </trans-unit>
        <trans-unit id="6aa5efdfcf697a85234731e948e4796ed1c28bf9" translate="yes" xml:space="preserve">
          <source>There is a second argument to &lt;code&gt;highlight&lt;/code&gt; called &lt;code&gt;linenos&lt;/code&gt; that is optional. Including the &lt;code&gt;linenos&lt;/code&gt; argument will force the highlighted code to include line numbers. For instance, the following code block would include line numbers next to each line:</source>
          <target state="translated">オプションの &lt;code&gt;linenos&lt;/code&gt; と呼ばれるものを &lt;code&gt;highlight&lt;/code&gt; する2番目の引数があります。 &lt;code&gt;linenos&lt;/code&gt; 引数を含めると、強調表示されたコードに強制的に行番号が含まれます。たとえば、次のコードブロックには、各行の横に行番号が含まれます。</target>
        </trans-unit>
        <trans-unit id="9379cacfdf8f450069f9019dcf0df2b24352760a" translate="yes" xml:space="preserve">
          <source>There is no need to include the file extension when using the &lt;code&gt;post_url&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;post_url&lt;/code&gt; タグを使用する場合、ファイル拡張子を含める必要はありません。</target>
        </trans-unit>
        <trans-unit id="8f6a98b30af7a847fbd76fcc867528eea009b854" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a few things to note with this code:</source>
          <target state="translated">このコードで注意すべき点がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="67735f08bcc262360e3e4374c07b166dce719d7a" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s currently no way to navigate to the blog post. Typically a blog has a page which lists all the posts, let&amp;rsquo;s do that next.</source>
          <target state="translated">現在、ブログ投稿に移動する方法はありません。通常、ブログにはすべての投稿を一覧表示するページがあります。次にそれを実行しましょう。</target>
        </trans-unit>
        <trans-unit id="fd1e3fa348d533f9965583a8651895dc21822ed3" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s still a lot of repetition here if you wanted to add a new item to the navigation or change the highlight color. In the next step we&amp;rsquo;ll address this.</source>
          <target state="translated">ナビゲーションに新しいアイテムを追加したり、ハイライトの色を変更したりする場合は、ここでまだ多くの繰り返しがあります。次のステップでは、これに対処します。</target>
        </trans-unit>
        <trans-unit id="e2cd616981ef7181cd65c1bb36056900669ca298" translate="yes" xml:space="preserve">
          <source>Therefore, depending on whether front matter has &lt;code&gt;category: classic hollywood&lt;/code&gt;, or &lt;code&gt;categories: classic hollywood&lt;/code&gt;, the example post above would have the URL as either &lt;code&gt;movies/horror/classic%20hollywood/2019/05/21/bride-of-chucky.html&lt;/code&gt; or &lt;code&gt;movies/horror/classic/hollywood/2019/05/21/bride-of-chucky.html&lt;/code&gt; respectively.</source>
          <target state="translated">したがって、フロントマターに &lt;code&gt;category: classic hollywood&lt;/code&gt; 、または &lt;code&gt;categories: classic hollywood&lt;/code&gt; どちらがあるかに応じて、上記の投稿例のURLは &lt;code&gt;movies/horror/classic%20hollywood/2019/05/21/bride-of-chucky.html&lt;/code&gt; または &lt;code&gt;movies/horror/classic/hollywood/2019/05/21/bride-of-chucky.html&lt;/code&gt; それぞれ。</target>
        </trans-unit>
        <trans-unit id="e77e75a2453e2de1dc28cb3b4fda516d45c8fbef" translate="yes" xml:space="preserve">
          <source>These are &lt;strong&gt;NON-DESTRUCTIVE&lt;/strong&gt;, i.e. they do not mutate the array, but rather make a copy and mutate that.</source>
          <target state="translated">これらは&lt;strong&gt;NON-DESTRUCTIVEです&lt;/strong&gt;。つまり、配列を変更するのではなく、コピーを作成して変更します。</target>
        </trans-unit>
        <trans-unit id="2ea790e2e9702ab3b6431f805333ccc711575895" translate="yes" xml:space="preserve">
          <source>These are available out-of-the-box to be used in the front matter for a post.</source>
          <target state="translated">これらは、ポストのフロントマターに使用するためのアウトオブボックスが用意されています。</target>
        </trans-unit>
        <trans-unit id="af98bdb42f53272e0eb36ca929385721e1f8e5f6" translate="yes" xml:space="preserve">
          <source>These are for the extra tidbits sometimes necessary to understand Jekyll.</source>
          <target state="translated">これはジキルを理解するために時々必要な豆知識のためのものです。</target>
        </trans-unit>
        <trans-unit id="f9d68c96571c28e82973cca568caf7d88748aaeb" translate="yes" xml:space="preserve">
          <source>These are just a few of the available &lt;a href=&quot;../configuration/index&quot;&gt;configuration options&lt;/a&gt;. Many configuration options can either be specified as flags on the command line, or alternatively (and more commonly) they can be specified in a &lt;code&gt;_config.yml&lt;/code&gt; file at the root of the source directory. Jekyll will automatically use the options from this file when run. For example, if you place the following lines in your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">これらは、使用可能な&lt;a href=&quot;../configuration/index&quot;&gt;構成オプションの&lt;/a&gt;ほんの一部です。多くの構成オプションは、コマンドラインでフラグとして指定するか、または（より一般的には）ソースディレクトリのルートにある &lt;code&gt;_config.yml&lt;/code&gt; ファイルで指定できます。Jekyllは実行時にこのファイルのオプションを自動的に使用します。たとえば、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルに次の行を配置するとします。</target>
        </trans-unit>
        <trans-unit id="66ef52c471b3cc42c25a66bece432ed476efb47c" translate="yes" xml:space="preserve">
          <source>These are only available in index files, however they can be located in a subdirectory, such as &lt;code&gt;/blog/index.html&lt;/code&gt;.</source>
          <target state="translated">これらはインデックスファイルでのみ使用できますが、 &lt;code&gt;/blog/index.html&lt;/code&gt; などのサブディレクトリに配置できます。</target>
        </trans-unit>
        <trans-unit id="c4dc3f11c1ac89c2cada54f9c5c293beb6d5ec58" translate="yes" xml:space="preserve">
          <source>These are passed to Sass, so any output style options Sass supports are valid here, too.</source>
          <target state="translated">これらはSassに渡されるので、Sassがサポートする出力スタイルのオプションもここで有効です。</target>
        </trans-unit>
        <trans-unit id="1c4993e67432c1ed975d24912e79d8ad34531a1c" translate="yes" xml:space="preserve">
          <source>These are sass partials that can be imported into your &lt;code&gt;main.scss&lt;/code&gt; which will then be processed into a single stylesheet &lt;code&gt;main.css&lt;/code&gt; that defines the styles to be used by your site.</source>
          <target state="translated">これらは、あなたの &lt;code&gt;main.scss&lt;/code&gt; にインポートできるsassパーシャルであり、サイトで使用されるスタイルを定義する単一のスタイルシート &lt;code&gt;main.css&lt;/code&gt; に処理されます。</target>
        </trans-unit>
        <trans-unit id="c201f0804f61a6b376f77b155aa8bdad3c82fd6e" translate="yes" xml:space="preserve">
          <source>These are the partials that can be mixed and matched by your layouts and posts to facilitate reuse. The liquid tag &lt;code&gt;{% include file.ext %}&lt;/code&gt; can be used to include the partial in &lt;code&gt;_includes/file.ext&lt;/code&gt;.</source>
          <target state="translated">これらは、再利用を容易にするために、レイアウトと投稿で混合およびマッチングできるパーシャルです。液体タグ &lt;code&gt;{% include file.ext %}&lt;/code&gt; を使用して、パーシャルを &lt;code&gt;_includes/file.ext&lt;/code&gt; に含めることができます。</target>
        </trans-unit>
        <trans-unit id="8889be8a1c272c5cd2c2d0bc6c4076a4b0e3605a" translate="yes" xml:space="preserve">
          <source>These are the templates that wrap posts. Layouts are chosen on a post-by-post basis in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;, which is described in the next section. The liquid tag &lt;code&gt;{{ content }}&lt;/code&gt; is used to inject content into the web page.</source>
          <target state="translated">これらは投稿をラップするテンプレートです。レイアウトにおけるポストによってポストに基づいて選択される&lt;a href=&quot;../front-matter/index&quot;&gt;フロント問題&lt;/a&gt;次のセクションで説明されています、。液体タグ &lt;code&gt;{{ content }}&lt;/code&gt; は、コンテンツをWebページに挿入するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e48a8b33d8674a1ca9fdf62738e07642244717a3" translate="yes" xml:space="preserve">
          <source>These are the templates that wrap posts. Layouts are chosen on a post-by-post basis in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;, which is described in the next section. The liquid tag &lt;code&gt;{{ content }}&lt;/code&gt; is used to inject content into the web page.</source>
          <target state="translated">これらは、投稿をラップするテンプレートです。レイアウトは、次のセクションで説明する&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;でポストごとに選択されます。液体タグ &lt;code&gt;{{ content }}&lt;/code&gt; は、コンテンツをWebページに挿入するために使用されます。</target>
        </trans-unit>
        <trans-unit id="61f960e26e297f0b81e67da8900036fc424775ed" translate="yes" xml:space="preserve">
          <source>These are tips and tricks that will help you be a Jekyll wizard!</source>
          <target state="translated">ジキルの魔法使いになるためのヒントをご紹介します!</target>
        </trans-unit>
        <trans-unit id="0a9da44a678759f875f784435732218782b2bf0c" translate="yes" xml:space="preserve">
          <source>These basics should be enough to get you started writing your first posts. When you&amp;rsquo;re ready to dig into what else is possible, you might be interested in doing things like &lt;a href=&quot;../permalinks/index&quot;&gt;customizing post permalinks&lt;/a&gt; or using &lt;a href=&quot;../variables/index&quot;&gt;custom variables&lt;/a&gt; in your posts and elsewhere on your site.</source>
          <target state="translated">これらの基本事項は、最初の投稿を書き始めるのに十分なはずです。他に何が可能かを掘り下げる準備ができたら、&lt;a href=&quot;../permalinks/index&quot;&gt;投稿のパーマリンクをカスタマイズ&lt;/a&gt;したり、投稿やサイトの他の場所で&lt;a href=&quot;../variables/index&quot;&gt;カスタム変数&lt;/a&gt;を使用したりすることに興味を持つかもしれません。</target>
        </trans-unit>
        <trans-unit id="02adccd4df257d424bcffc068be4723b83eac4c0" translate="yes" xml:space="preserve">
          <source>These services run a script when there&amp;rsquo;s a commit on your Git repository. You might want this script to build the site, run tests over the output then deploy it to the service of your choice.</source>
          <target state="translated">これらのサービスは、Gitリポジトリにコミットがあるときにスクリプトを実行します。このスクリプトでサイトを構築し、出力に対してテストを実行してから、選択したサービスにデプロイすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5caf4c814aa0cd64d1a7a0717992fc9a8c3d4bea" translate="yes" xml:space="preserve">
          <source>They can be defined via the front matter using keys &lt;code&gt;category&lt;/code&gt; or &lt;code&gt;categories&lt;/code&gt; (that follow the same logic as for tags)</source>
          <target state="translated">これらは、1 &lt;code&gt;categories&lt;/code&gt; または複数のキー &lt;code&gt;category&lt;/code&gt; （タグの場合と同じロジックに従う）を使用して、フロントマターを介して定義できます。</target>
        </trans-unit>
        <trans-unit id="1a01c04c0c98b629a302fb8419fe9e7cc584674d" translate="yes" xml:space="preserve">
          <source>They&amp;rsquo;re accessible in Liquid via &lt;code&gt;site.static_files&lt;/code&gt; and contain the following metadata:</source>
          <target state="translated">それらは、 &lt;code&gt;site.static_files&lt;/code&gt; を介してLiquidでアクセスでき、次のメタデータを含みます。</target>
        </trans-unit>
        <trans-unit id="786917075a48c15977c206c149dcd2c59b50eca9" translate="yes" xml:space="preserve">
          <source>Third Party</source>
          <target state="translated">第三者</target>
        </trans-unit>
        <trans-unit id="3630ecb269522d0364ac7f6a9fd7c7752f37804a" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://wiki.gentoo.org/wiki/SSH#Passwordless_Authentication&quot;&gt;process&lt;/a&gt; is described in several places online. What is different from the typical approach is to put the restriction to certificate-based authorization in &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;. Then, launch &lt;code&gt;rrsync&lt;/code&gt; and supply it with the folder it shall have read-write access to:</source>
          <target state="translated">この&lt;a href=&quot;https://wiki.gentoo.org/wiki/SSH#Passwordless_Authentication&quot;&gt;プロセス&lt;/a&gt;は、オンラインのいくつかの場所で説明されています。通常のアプローチとの違いは、証明書ベースの認証に &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 制限を加えることです。次に、 &lt;code&gt;rrsync&lt;/code&gt; を起動し、読み取り/書き込みアクセス権を持つフォルダーを指定します。</target>
        </trans-unit>
        <trans-unit id="fa80c5aee029bd0c3075789d5f91e87a1d22fcac" translate="yes" xml:space="preserve">
          <source>This allows theme creators to ship a default &lt;code&gt;/assets/styles.scss&lt;/code&gt; file which their layouts can depend on as &lt;code&gt;/assets/styles.css&lt;/code&gt;.</source>
          <target state="translated">これにより、テーマの作成者は、レイアウトが &lt;code&gt;/assets/styles.css&lt;/code&gt; として依存できるデフォルトの &lt;code&gt;/assets/styles.scss&lt;/code&gt; ファイルを出荷できます。</target>
        </trans-unit>
        <trans-unit id="53301bbfaf33d1de30873f16d21d2b996040f57e" translate="yes" xml:space="preserve">
          <source>This assumes that your Jekyll site has a folder path of &lt;code&gt;assets/img&lt;/code&gt; where you have images (static files) stored. When Jekyll builds the site, it will treat each image as if it had the front matter value of &lt;code&gt;image: true&lt;/code&gt;.</source>
          <target state="translated">これは、Jekyllサイトに、画像（静的ファイル）が保存されている &lt;code&gt;assets/img&lt;/code&gt; のフォルダーパスがあることを前提としています。Jekyllはサイトを構築するときに、各画像を画像の前置値が &lt;code&gt;image: true&lt;/code&gt; であるかのように扱います。</target>
        </trans-unit>
        <trans-unit id="216be0657494df3f67f7a6d9b58c2dbbac55d4b1" translate="yes" xml:space="preserve">
          <source>This can be fixed by removing the following line from your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">これは、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルから次の行を削除することで修正できます。</target>
        </trans-unit>
        <trans-unit id="7c5555d7dc592d79919439bb221a8e34b3cdd57a" translate="yes" xml:space="preserve">
          <source>This data can be accessed via &lt;code&gt;site.data.members&lt;/code&gt; (notice that the file&amp;rsquo;s &lt;em&gt;basename&lt;/em&gt; determines the variable name and therefore one should avoid having data files with the same basename but different extensions, in the same directory).</source>
          <target state="translated">このデータには、 &lt;code&gt;site.data.members&lt;/code&gt; からアクセスできます（ファイルの&lt;em&gt;ベース名&lt;/em&gt;によって変数名が決まるため、同じディレクトリに同じベース名で拡張子が異なるデータファイルを配置しないようにする必要があります）。</target>
        </trans-unit>
        <trans-unit id="1b23f6f3027ec80c3b0b1b876f9297458e1fd40d" translate="yes" xml:space="preserve">
          <source>This data can be accessed via &lt;code&gt;site.data.members&lt;/code&gt; (notice that the filename determines the variable name).</source>
          <target state="translated">このデータには、 &lt;code&gt;site.data.members&lt;/code&gt; からアクセスできます（ファイル名によって変数名が決まることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="c3325fdfa0b2bdaa04885b31a95aff31f1dbf4cd" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/buddyworks.md&quot;&gt;edit it&lt;/a&gt; if you want to expand it or have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need assistance. Buddy also has an &lt;a href=&quot;http://forum.buddy.works/&quot;&gt;online community&lt;/a&gt; for help.</source>
          <target state="translated">このガイド全体はオープンソースです。先に行くと&lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/buddyworks.md&quot;&gt;、それを編集し&lt;/a&gt;、あなたがそれを拡張したり修正を持っているか、したい場合は&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;助けを求める&lt;/a&gt;あなたは悩みやニーズの支援に実行する場合。バディには、ヘルプのための&lt;a href=&quot;http://forum.buddy.works/&quot;&gt;オンラインコミュニティ&lt;/a&gt;もあります。</target>
        </trans-unit>
        <trans-unit id="cb21565992e9258b77fe0362e0c5a49529dde160" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/circleci.md&quot;&gt;edit it&lt;/a&gt; if you have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need some help. CircleCI also has an &lt;a href=&quot;https://discuss.circleci.com&quot;&gt;online community&lt;/a&gt; for help.</source>
          <target state="translated">このガイド全体はオープンソースです。先に行くと&lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/circleci.md&quot;&gt;、それを編集し&lt;/a&gt;、あなたが修正を持っている場合や、&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;助けを求める&lt;/a&gt;あなたがトラブルに実行し、いくつかの助けが必要な場合。CircleCIには、ヘルプのための&lt;a href=&quot;https://discuss.circleci.com&quot;&gt;オンラインコミュニティ&lt;/a&gt;もあります。</target>
        </trans-unit>
        <trans-unit id="8d77787605734904351cea537ef697e3e6e69285" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/travis-ci.md&quot;&gt;edit it&lt;/a&gt; if you have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need some help.</source>
          <target state="translated">このガイド全体はオープンソースです。先に行くと&lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/travis-ci.md&quot;&gt;、それを編集し&lt;/a&gt;、あなたが修正を持っている場合や、&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;助けを求める&lt;/a&gt;あなたがトラブルに実行し、いくつかの助けが必要な場合。</target>
        </trans-unit>
        <trans-unit id="b0244afb911a7f1264000eb67c35f2083c411511" translate="yes" xml:space="preserve">
          <source>This error can occur during the installation of &lt;code&gt;jekyll-coffeescript&lt;/code&gt; when you don&amp;rsquo;t have a proper JavaScript runtime. To solve this, either install &lt;code&gt;execjs&lt;/code&gt; and &lt;code&gt;therubyracer&lt;/code&gt; gems, or install &lt;code&gt;nodejs&lt;/code&gt;. Check out &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/2327&quot;&gt;issue #2327&lt;/a&gt; for more info.</source>
          <target state="translated">このエラーは、適切なJavaScriptランタイムがない場合に &lt;code&gt;jekyll-coffeescript&lt;/code&gt; のインストール中に発生する可能性があります。これを解決するには、 &lt;code&gt;execjs&lt;/code&gt; と &lt;code&gt;therubyracer&lt;/code&gt; gemsをインストールするか、nodejsをインストールし &lt;code&gt;nodejs&lt;/code&gt; 。詳細については、&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/2327&quot;&gt;問題＃2327&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="215e258123bbf922fbf9b92be2cfed262ff6949b" translate="yes" xml:space="preserve">
          <source>This feature will let the theme-gem to work with &lt;em&gt;theme-specific config variables&lt;/em&gt; out-of-the-box.</source>
          <target state="translated">この機能により、theme-gemはすぐに&lt;em&gt;テーマ固有の構成変数を操作できる&lt;/em&gt;ようになります。</target>
        </trans-unit>
        <trans-unit id="6f259ad2809a25e2c6f7dce9a26cae6c4aea9e77" translate="yes" xml:space="preserve">
          <source>This file is used to configure your Travis builds. Because Jekyll is built with Ruby and requires RubyGems to install, we use the Ruby language build environment. Below is a sample &lt;code&gt;.travis.yml&lt;/code&gt; file, followed by an explanation of each line.</source>
          <target state="translated">このファイルは、Travisビルドを構成するために使用されます。JekyllはRubyでビルドされており、RubyGemsをインストールする必要があるため、Ruby言語ビルド環境を使用します。以下は、サンプルの &lt;code&gt;.travis.yml&lt;/code&gt; ファイルで、その後に各行の説明が続きます。</target>
        </trans-unit>
        <trans-unit id="cdc9fae1fa96bc13264f05057d3358fa52e7495a" translate="yes" xml:space="preserve">
          <source>This flag determines what order the plugin is loaded in. Valid values are: &lt;code&gt;:lowest&lt;/code&gt;, &lt;code&gt;:low&lt;/code&gt;, &lt;code&gt;:normal&lt;/code&gt;, &lt;code&gt;:high&lt;/code&gt;, and &lt;code&gt;:highest&lt;/code&gt;. Highest priority matches are applied first, lowest priority are applied last.</source>
          <target state="translated">このフラグは、プラグインがロードされる順序を決定します。有効な値は、 &lt;code&gt;:low&lt;/code&gt; &lt;code&gt;:lowest&lt;/code&gt; 、：low、 &lt;code&gt;:normal&lt;/code&gt; 、 &lt;code&gt;:high&lt;/code&gt; 、および &lt;code&gt;:highest&lt;/code&gt; です。最も高い優先度の一致が最初に適用され、最も低い優先度が最後に適用されます。</target>
        </trans-unit>
        <trans-unit id="ae33398911b55db1271fa022aa124a696b59270c" translate="yes" xml:space="preserve">
          <source>This gem is also needed in the github-pages and to get it running on Windows x64 we have to install a few things.</source>
          <target state="translated">このgemはgithub-pagesにも必要で、Windows x64で動作させるためにはいくつかのものをインストールしなければなりません。</target>
        </trans-unit>
        <trans-unit id="038ffeb30c8743ad648bc204325c5f82962f83b3" translate="yes" xml:space="preserve">
          <source>This helps Jekyll keep track of which files have not been modified since the site was last built, and which files will need to be regenerated on the next build. This file will not be included in the generated site. It&amp;rsquo;s probably a good idea to add this to your &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">これにより、Jekyllは、サイトが最後に構築されてから変更されていないファイルと、次回の構築時に再生成する必要があるファイルを追跡できます。このファイルは、生成されたサイトには含まれません。これを &lt;code&gt;.gitignore&lt;/code&gt; ファイルに追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="56f4d0c21943117e7ec6821601e18c3da7665ef5" translate="yes" xml:space="preserve">
          <source>This include contains 5 parameters:</source>
          <target state="translated">このインクルードには5つのパラメータが含まれています。</target>
        </trans-unit>
        <trans-unit id="bd77158f525bc9e4820b4d861c299e9505a03c63" translate="yes" xml:space="preserve">
          <source>This is a bit cumbersome at first, but is easier than a big &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">これは最初は少し面倒ですが、大きな &lt;code&gt;for&lt;/code&gt; ループよりも簡単です。</target>
        </trans-unit>
        <trans-unit id="c9b1ef1972d4f0773444af1f3e1f52fc2e030c90" translate="yes" xml:space="preserve">
          <source>This is a more complex generator that generates new pages:</source>
          <target state="translated">これは、新しいページを生成する、より複雑なジェネレータです。</target>
        </trans-unit>
        <trans-unit id="f50ce3f05b10af57b05f7e088f007111ae05a2f7" translate="yes" xml:space="preserve">
          <source>This is also useful for many shared webhosting services, where user accounts have only limited privileges. Adding these exports to &lt;code&gt;.bashrc&lt;/code&gt; before running &lt;code&gt;gem install jekyll bundler&lt;/code&gt; allows a complete non-&lt;code&gt;sudo&lt;/code&gt; install of Jekyll.</source>
          <target state="translated">これは、ユーザーアカウントの権限が制限されている多くの共有ウェブホスティングサービスにも役立ちます。 &lt;code&gt;gem install jekyll bundler&lt;/code&gt; を実行する前にこれらのエクスポートを &lt;code&gt;.bashrc&lt;/code&gt; に追加すると、Jekyllの完全な非 &lt;code&gt;sudo&lt;/code&gt; インストールが可能になります。</target>
        </trans-unit>
        <trans-unit id="cc3350c66b3528ea8e584b1c49c6e6b491a93e75" translate="yes" xml:space="preserve">
          <source>This is an example of layout inheritance. The post layout outputs the title, date, author and content body which is wrapped by the default layout.</source>
          <target state="translated">レイアウト継承の例です。投稿レイアウトは、デフォルトのレイアウトでラップされたタイトル、日付、著者、コンテンツボディを出力します。</target>
        </trans-unit>
        <trans-unit id="4ed4fe733789025a5bdbe600f1669953603c6acb" translate="yes" xml:space="preserve">
          <source>This is like the &lt;code&gt;about.md&lt;/code&gt; you created before except it has an author and a different layout. &lt;code&gt;author&lt;/code&gt; is a custom variable, it&amp;rsquo;s not required and could have been named something like &lt;code&gt;creator&lt;/code&gt;.</source>
          <target state="translated">これは、作成者と異なるレイアウトがあることを除いて、前に作成した &lt;code&gt;about.md&lt;/code&gt; に似ています。 &lt;code&gt;author&lt;/code&gt; はカスタム変数であり、必須ではなく、 &lt;code&gt;creator&lt;/code&gt; のような名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="f25e800aa9957f9798c94aa0b5dddaf75e8fdcda" translate="yes" xml:space="preserve">
          <source>This is where the generated site will be placed (by default) once Jekyll is done transforming it. It&amp;rsquo;s probably a good idea to add this to your &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">Jekyllによる変換が完了すると、生成されたサイトが（デフォルトで）配置されます。これを &lt;code&gt;.gitignore&lt;/code&gt; ファイルに追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1b2092eeddba25d8574bb62a82e0a71de1900860" translate="yes" xml:space="preserve">
          <source>This line tells Travis to use a Ruby build container. It gives your script access to Bundler, RubyGems, and a Ruby runtime.</source>
          <target state="translated">この行は Travis に Ruby ビルドコンテナを使うように指示しています。これにより、あなたのスクリプトは Bundler,RubyGems,Ruby ランタイムにアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="a4a2fa92a7c34862d2b26010b981c91cfe31512d" translate="yes" xml:space="preserve">
          <source>This method accepts one parameter, the &lt;code&gt;&lt;a href=&quot;https://github.com/jekyll/mercenary#readme&quot;&gt;Mercenary::Program&lt;/a&gt;&lt;/code&gt; instance, which is the Jekyll program itself. Upon the program, commands may be created using the above syntax. For more details, visit the Mercenary repository on GitHub.com.</source>
          <target state="translated">このメソッドは、1つのパラメーター、Jerkyllプログラム自体である &lt;code&gt;&lt;a href=&quot;https://github.com/jekyll/mercenary#readme&quot;&gt;Mercenary::Program&lt;/a&gt;&lt;/code&gt; インスタンスを受け入れます。プログラムでは、上記の構文を使用してコマンドを作成できます。詳細については、GitHub.comのMercenaryリポジトリにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="bb71222041e70954c971ff33c4c3d5fda56aad01" translate="yes" xml:space="preserve">
          <source>This powerful feature allows you to avoid repetition in your templates and to set site specific options without changing &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">この強力な機能により、 &lt;code&gt;_config.yml&lt;/code&gt; を変更せずに、テンプレートでの繰り返しを避け、サイト固有のオプションを設定できます。</target>
        </trans-unit>
        <trans-unit id="8bb7f0030066881ac0f44f32d1b496306df82c98" translate="yes" xml:space="preserve">
          <source>This restricts your Ruby environment to only use gems set in your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">これにより、Ruby環境が &lt;code&gt;Gemfile&lt;/code&gt; に設定されたgemのみを使用するように制限されます。</target>
        </trans-unit>
        <trans-unit id="64e2a1b4f28b25a884d049f121dd258652dfd658" translate="yes" xml:space="preserve">
          <source>This returns the location of the gem-based theme files. For example, the Minima theme&amp;rsquo;s files might be located in &lt;code&gt;/usr/local/lib/ruby/gems/2.3.0/gems/minima-2.1.0&lt;/code&gt; on macOS.</source>
          <target state="translated">これは、gemベースのテーマファイルの場所を返します。たとえば、Minimaテーマのファイルは、macOSの &lt;code&gt;/usr/local/lib/ruby/gems/2.3.0/gems/minima-2.1.0&lt;/code&gt; にある場合があります。</target>
        </trans-unit>
        <trans-unit id="1b127dd1144990a51fde217b2ccfe886d07d2537" translate="yes" xml:space="preserve">
          <source>This returns the location of the gem-based theme files. For example, the Minima theme&amp;rsquo;s files might be located in &lt;code&gt;/usr/local/lib/ruby/gems/2.6.0/gems/minima-2.5.1&lt;/code&gt; on macOS.</source>
          <target state="translated">これにより、gemベースのテーマファイルの場所が返されます。たとえば、Minimaテーマのファイルは、macOSの &lt;code&gt;/usr/local/lib/ruby/gems/2.6.0/gems/minima-2.5.1&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="7a67de107246be6963abdc850b25005e0b42fd66" translate="yes" xml:space="preserve">
          <source>This section is part of an article written by &lt;a href=&quot;https://jwillmer.de/blog/tutorial/how-to-install-jekyll-and-pages-gem-on-windows-10-x46&quot;&gt;Jens Willmer&lt;/a&gt;. To follow the instructions you need to have &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt; installed on your system. If you already have a version of Ruby installed you need to uninstall it before you can continue.</source>
          <target state="translated">このセクションは、&lt;a href=&quot;https://jwillmer.de/blog/tutorial/how-to-install-jekyll-and-pages-gem-on-windows-10-x46&quot;&gt;Jens Willmer&lt;/a&gt;によって書かれた記事の一部です。指示に従うには、システムに&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolateyを&lt;/a&gt;インストールする必要があります。Rubyのバージョンがすでにインストールされている場合は、続行する前にアンインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="7ead5acabba1ee72fdd0d4f297f16cf7715aaf58" translate="yes" xml:space="preserve">
          <source>This site aims to be a comprehensive guide to Jekyll. We&amp;rsquo;ll cover topics such as getting your site up and running, creating and managing your content, customizing the way your site works and looks, deploying to various environments, and give you some advice on participating in the future development of Jekyll itself.</source>
          <target state="translated">このサイトは、ジキルへの包括的なガイドになることを目的としています。サイトの稼働、コンテンツの作成と管理、サイトの動作と外観のカスタマイズ、さまざまな環境へのデプロイなどのトピックを取り上げ、Jekyll自体の将来の開発への参加に関するアドバイスを提供します。</target>
        </trans-unit>
        <trans-unit id="dddd30a47f3feef11279300efce9f67cf6579040" translate="yes" xml:space="preserve">
          <source>This stage evaluates Liquid expressions in the current file. By default, the interpretation is &lt;em&gt;shallow&lt;/em&gt; &amp;mdash; in that any Liquid expression in resulting output is not further interpreted. Moreover, any Liquid expression in the file&amp;rsquo;s front matter is left untouched.</source>
          <target state="translated">このステージでは、現在のファイルのLiquid式を評価します。デフォルトでは、解釈は&lt;em&gt;浅く&lt;/em&gt;、結果の出力のLiquid式はそれ以上解釈されません。さらに、ファイルの前書きにあるLiquid式はそのまま残されます。</target>
        </trans-unit>
        <trans-unit id="743f78607e5bd9152fd3466e8755393f8d54d9c7" translate="yes" xml:space="preserve">
          <source>This stage invokes the converter mapped to the current file&amp;rsquo;s extension and converts the input string. This is when Markdown gets converted into HTML and Sass / Scss into CSS or CoffeeScript into JavaScript, etc, etc. Since this stage is determined by the file&amp;rsquo;s extension, Markdown or Sass inside a &lt;code&gt;.html&lt;/code&gt; file will remain untouched.</source>
          <target state="translated">このステージは、現在のファイルの拡張子にマップされたコンバーターを呼び出し、入力文字列を変換します。これは、MarkdownがHTMLに変換され、Sass / ScssがCSSに、CoffeeScriptがJavaScriptなどに変換されるときです。この段階はファイルの拡張子によって決定されるため、 &lt;code&gt;.html&lt;/code&gt; ファイル内のMarkdownまたはSassは変更されません。</target>
        </trans-unit>
        <trans-unit id="0e5683b6a844211348d94454fa5fd0a7ef8c5cef" translate="yes" xml:space="preserve">
          <source>This step is recommended if you use these instructions to deploy your site. If you put the &lt;code&gt;deploy&lt;/code&gt; script in the root folder of your project, Jekyll will copy it to the output folder. This behavior can be changed in &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">これらの手順を使用してサイトを展開する場合は、この手順をお勧めします。あなたが入れた場合は &lt;code&gt;deploy&lt;/code&gt; 、プロジェクトのルートフォルダにスクリプトを、ジキルは、出力フォルダにコピーします。この動作は &lt;code&gt;_config.yml&lt;/code&gt; で変更できます。</target>
        </trans-unit>
        <trans-unit id="10edb7b871004c4d58fcb9b0168bb777b10f5563" translate="yes" xml:space="preserve">
          <source>This tells &lt;code&gt;gem&lt;/code&gt; to place its gems within the user&amp;rsquo;s home folder, not in a system-wide location, and adds the local &lt;code&gt;jekyll&lt;/code&gt; command to the user&amp;rsquo;s &lt;code&gt;PATH&lt;/code&gt; ahead of any system-wide paths.</source>
          <target state="translated">これにより、 &lt;code&gt;gem&lt;/code&gt; は、システム全体の場所ではなく、ユーザーのホームフォルダー内に &lt;code&gt;jekyll&lt;/code&gt; 指示され、ローカルjekyllコマンドがシステム全体のパスの前にユーザーの &lt;code&gt;PATH&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="f8f823f2b31a8c8230ed1be9ae884bd16fed8abb" translate="yes" xml:space="preserve">
          <source>This way you can preview your site locally from the site root on localhost, but when GitHub generates your pages from the &lt;code&gt;gh-pages&lt;/code&gt; branch all the URLs will resolve properly.</source>
          <target state="translated">このように、ローカルホストのサイトルートからローカルでサイトをプレビューできますが、GitHubが &lt;code&gt;gh-pages&lt;/code&gt; ブランチからページを生成すると、すべてのURLが適切に解決されます。</target>
        </trans-unit>
        <trans-unit id="51b525b93972bd810e1a544085d5bc21833d5499" translate="yes" xml:space="preserve">
          <source>This will either lead to parsing errors, or Jekyll will revert to the default settings. Use spaces instead.</source>
          <target state="translated">これでは解析エラーが発生するか、Jekyll がデフォルトの設定に戻ってしまいます。代わりにスペースを使用してください。</target>
        </trans-unit>
        <trans-unit id="d0a86d650d438ca84094dca56d574a2b47bc60af" translate="yes" xml:space="preserve">
          <source>This will install the latest pre-release. If you want a particular pre-release, use the &lt;code&gt;-v&lt;/code&gt; switch to indicate the version you&amp;rsquo;d like to install:</source>
          <target state="translated">これにより、最新のプレリリースがインストールされます。特定のプレリリースが必要な場合は、 &lt;code&gt;-v&lt;/code&gt; スイッチを使用して、インストールするバージョンを指定します。</target>
        </trans-unit>
        <trans-unit id="440a7a6465d65bffe97f1212df23b68249f10d99" translate="yes" xml:space="preserve">
          <source>This will produce a file for each document in the collection. For example, if you have &lt;code&gt;_my_collection/some_subdir/some_doc.md&lt;/code&gt;, it will be rendered using Liquid and the Markdown converter of your choice and written out to &lt;code&gt;&amp;lt;dest&amp;gt;/my_collection/some_subdir/some_doc.html&lt;/code&gt;.</source>
          <target state="translated">これにより、コレクション内の各ドキュメントのファイルが作成されます。たとえば、 &lt;code&gt;_my_collection/some_subdir/some_doc.md&lt;/code&gt; がある場合、選択したLiquidとMarkdownコンバーターを使用してレンダリングされ、 &lt;code&gt;&amp;lt;dest&amp;gt;/my_collection/some_subdir/some_doc.html&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="8077de14f9979207f9d6a8712dc5957603dd46d1" translate="yes" xml:space="preserve">
          <source>This will read in &lt;code&gt;blog/index.html&lt;/code&gt;, send it each pagination page in Liquid as &lt;code&gt;paginator&lt;/code&gt; and write the output to &lt;code&gt;blog/page:num/&lt;/code&gt;, where &lt;code&gt;:num&lt;/code&gt; is the pagination page number, starting with &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;blog/index.html&lt;/code&gt; が読み込まれ、Liquidの各ページネーションページがページネーションとして &lt;code&gt;paginator&lt;/code&gt; れ、出力が &lt;code&gt;blog/page:num/&lt;/code&gt; に書き込まれます。ここで、 &lt;code&gt;:num&lt;/code&gt; はページネーションページ番号で、 &lt;code&gt;2&lt;/code&gt; から始まります。</target>
        </trans-unit>
        <trans-unit id="0f1993494132bc33d83fa74caadeb88e0612e1b5" translate="yes" xml:space="preserve">
          <source>This will read in &lt;code&gt;blog/index.html&lt;/code&gt;, send it each pagination page in Liquid as &lt;code&gt;paginator&lt;/code&gt; and write the output to &lt;code&gt;blog/page:num/&lt;/code&gt;, where &lt;code&gt;:num&lt;/code&gt; is the pagination page number, starting with &lt;code&gt;2&lt;/code&gt;. If a site has 12 posts and specifies &lt;code&gt;paginate: 5&lt;/code&gt;, Jekyll will write &lt;code&gt;blog/index.html&lt;/code&gt; with the first 5 posts, &lt;code&gt;blog/page2/index.html&lt;/code&gt; with the next 5 posts and &lt;code&gt;blog/page3/index.html&lt;/code&gt; with the last 2 posts into the destination directory.</source>
          <target state="translated">これが読み込まれます &lt;code&gt;blog/index.html&lt;/code&gt; 、のような液体で、それを各ページネーションページを送信 &lt;code&gt;paginator&lt;/code&gt; とに出力を書き込む &lt;code&gt;blog/page:num/&lt;/code&gt; 、どこ &lt;code&gt;:num&lt;/code&gt; が始まる、改ページのページ番号である &lt;code&gt;2&lt;/code&gt; 。サイトは12枚のポストと指定されている場合 &lt;code&gt;paginate: 5&lt;/code&gt; 、ジキルは書きます &lt;code&gt;blog/index.html&lt;/code&gt; 、最初の5つのポストとの &lt;code&gt;blog/page2/index.html&lt;/code&gt; 次の5つのポストに及び &lt;code&gt;blog/page3/index.html&lt;/code&gt; 最後の2で宛先ディレクトリに投稿します。</target>
        </trans-unit>
        <trans-unit id="f16622cd40e1dcc12d10d82c31b84dc204f04b98" translate="yes" xml:space="preserve">
          <source>Though Windows users could alternatively define their blog&amp;rsquo;s timezone by setting the key to use the POSIX format of defining timezones, it wasn&amp;rsquo;t as user-friendly when it came to having the clock altered to changing DST-rules.</source>
          <target state="translated">Windowsユーザーは、タイムゾーンを定義するPOSIX形式を使用するようにキーを設定することでブログのタイムゾーンを定義することもできますが、DSTルールの変更に合わせて時計を変更することに関してはユーザーフレンドリーではありませんでした。</target>
        </trans-unit>
        <trans-unit id="f0610a5d8b28f6854509741ec10222bb0efaa7bc" translate="yes" xml:space="preserve">
          <source>Three-letter month abbreviation, e.g. &amp;ldquo;Jan&amp;rdquo;.</source>
          <target state="translated">「Jan」などの3文字の月の略語。</target>
        </trans-unit>
        <trans-unit id="8bdc629bf76e7fdf50852c1ee5eef84b05d6469b" translate="yes" xml:space="preserve">
          <source>Three-letter weekday abbreviation, e.g. &amp;ldquo;Sun&amp;rdquo;.</source>
          <target state="translated">「Sun」などの3文字の平日の略語。</target>
        </trans-unit>
        <trans-unit id="612c181fd607485719c1ef224631b9be19aa1cc9" translate="yes" xml:space="preserve">
          <source>Throughout this guide there are a number of small-but-handy pieces of information that can make using Jekyll easier, more interesting, and less hazardous. Here&amp;rsquo;s what to look out for.</source>
          <target state="translated">このガイド全体を通して、Jekyllをより簡単に、より興味深く、危険性の少ないものにすることができる、小さくても便利な情報がいくつかあります。ここに注意すべき点があります。</target>
        </trans-unit>
        <trans-unit id="ce18873d1a2439937489b6bff848e329c64c4c55" translate="yes" xml:space="preserve">
          <source>Time Zone Management</source>
          <target state="translated">タイムゾーン管理</target>
        </trans-unit>
        <trans-unit id="b431206e6826553cced9dee006e46ba2f2aed40d" translate="yes" xml:space="preserve">
          <source>Time-Zone Management</source>
          <target state="translated">タイムゾーン管理</target>
        </trans-unit>
        <trans-unit id="06b16ed0febe4ef7c84e9390785dd0f675e310de" translate="yes" xml:space="preserve">
          <source>Tips for working with GitHub Pages Integration</source>
          <target state="translated">GitHub ページの統合作業のヒント</target>
        </trans-unit>
        <trans-unit id="c432694a81177149b1d4da370814c7a53062af28" translate="yes" xml:space="preserve">
          <source>Title from the document&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; YAML front matter.</source>
          <target state="translated">ドキュメントのファイル名からのタイトル。ドキュメントの &lt;code&gt;slug&lt;/code&gt; YAML前付けを介してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="5612d3c439b05a98af8e23fde8ffc77c88a4bc59" translate="yes" xml:space="preserve">
          <source>Title from the document&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; front matter.</source>
          <target state="translated">ドキュメントのファイル名からのタイトル。ドキュメントの &lt;code&gt;slug&lt;/code&gt; フロントマターを介してオーバーライドされる場合があります。</target>
        </trans-unit>
        <trans-unit id="1d6c83f8db1b6f18c98b0ce63a71c1f889477bbd" translate="yes" xml:space="preserve">
          <source>To (re)load the configuration, restart the jekyll server. Press &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt; in your terminal to stop the server, and then &lt;code&gt;jekyll serve&lt;/code&gt; to restart it.</source>
          <target state="translated">構成を（再）ロードするには、jekyllサーバーを再起動します。ターミナルで &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;C&lt;/code&gt; を押してサーバーを停止し、 &lt;code&gt;jekyll serve&lt;/code&gt; てサーバーを再起動します。</target>
        </trans-unit>
        <trans-unit id="23ad8dea6076b27ccd9fbe6105eef4daab823868" translate="yes" xml:space="preserve">
          <source>To achieve this you need to create another layout which specifies your original layout in front matter. For example this layout will live at &lt;code&gt;_layouts/post.html&lt;/code&gt;:</source>
          <target state="translated">これを実現するには、前の問題で元のレイアウトを指定する別のレイアウトを作成する必要があります。たとえば、このレイアウトは &lt;code&gt;_layouts/post.html&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="70aece54b76e07c751fef7b7e41725ba1cd3500e" translate="yes" xml:space="preserve">
          <source>To activate the new exports, either close and restart Bash, logout and log back into your shell account, or run &lt;code&gt;. .bashrc&lt;/code&gt; in the currently-running shell.</source>
          <target state="translated">新しいエクスポートをアクティブ化するには、Bashを閉じて再起動するか、ログアウトしてシェルアカウントに再度ログインするか、を実行し &lt;code&gt;. .bashrc&lt;/code&gt; 現在実行中のシェルの.bashrc。</target>
        </trans-unit>
        <trans-unit id="1f21f20401313943fa14150b091e5246e7c49351" translate="yes" xml:space="preserve">
          <source>To bypass Bundler if you aren&amp;rsquo;t using a Gemfile, run &lt;code&gt;jekyll serve&lt;/code&gt;.</source>
          <target state="translated">あなたはGemfileを使用していない場合はバンドラーバイパスに、実行が &lt;code&gt;jekyll serve&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83ba4a9ecbc9058f9b5abefecd715fce259d2e6d" translate="yes" xml:space="preserve">
          <source>To change Jekyll&amp;rsquo;s default build behavior have a look through the &lt;a href=&quot;../configuration/index&quot;&gt;configuration options&lt;/a&gt;.</source>
          <target state="translated">Jekyllのデフォルトのビルド動作を変更するには、&lt;a href=&quot;../configuration/index&quot;&gt;構成オプションを&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="afe823ce019b51ca82783d8875e87e9925a9934e" translate="yes" xml:space="preserve">
          <source>To create a new &lt;code&gt;Gemfile&lt;/code&gt; to list your project&amp;rsquo;s dependencies run:</source>
          <target state="translated">プロジェクトの依存関係を一覧表示する新しい &lt;code&gt;Gemfile&lt;/code&gt; を作成するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="81bdb9df3d2709a87043ff90bf6e3e808ed8622e" translate="yes" xml:space="preserve">
          <source>To create a new post, all you need to do is create a file in the &lt;code&gt;_posts&lt;/code&gt; directory. How you name files in this folder is important. Jekyll requires blog post files to be named according to the following format:</source>
          <target state="translated">新しい投稿を作成するには、 &lt;code&gt;_posts&lt;/code&gt; ディレクトリにファイルを作成するだけです。このフォルダ内のファイルに名前を付ける方法は重要です。Jekyllでは、ブログ投稿ファイルに次の形式に従って名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="b2931b73d2e7c642e2cfc8580cc409a36535f20b" translate="yes" xml:space="preserve">
          <source>To create a post, add a file to your &lt;code&gt;_posts&lt;/code&gt; directory with the following format:</source>
          <target state="translated">投稿を作成するには、次の形式で &lt;code&gt;_posts&lt;/code&gt; ディレクトリにファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="2a153f3d0ad004579ec81ada889f1a14a3465245" translate="yes" xml:space="preserve">
          <source>To do this you can use &lt;a href=&quot;../../configuration/environments/index&quot;&gt;environments&lt;/a&gt;. You can set the environment by using the &lt;code&gt;JEKYLL_ENV&lt;/code&gt; environment variable when running a command. For example:</source>
          <target state="translated">これを行うには、&lt;a href=&quot;../../configuration/environments/index&quot;&gt;環境&lt;/a&gt;を使用できます。コマンド実行時に &lt;code&gt;JEKYLL_ENV&lt;/code&gt; 環境変数を使用して環境を設定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="ae4f0d8ff4a7863310aa0c2ec55acb01d2a90068" translate="yes" xml:space="preserve">
          <source>To do this you&amp;rsquo;ll use collections. Collections are similar to posts except the content doesn&amp;rsquo;t have to be grouped by date.</source>
          <target state="translated">これを行うには、コレクションを使用します。コレクションは、コンテンツを日付でグループ化する必要がないことを除いて、投稿に似ています。</target>
        </trans-unit>
        <trans-unit id="ef9b29e1874a779ac7ad8d7399f618434814f503" translate="yes" xml:space="preserve">
          <source>To do this, copy the files from the theme gem&amp;rsquo;s directory into your Jekyll site directory. (For example, copy them to &lt;code&gt;/myblog&lt;/code&gt; if you created your Jekyll site at &lt;code&gt;/myblog&lt;/code&gt;. See the previous section for details.)</source>
          <target state="translated">これを行うには、テーマgemのディレクトリからJekyllサイトディレクトリにファイルをコピーします。（例えば、それらをコピー &lt;code&gt;/myblog&lt;/code&gt; あなたがであなたのジキルサイトを作成した場合 &lt;code&gt;/myblog&lt;/code&gt; 。詳細については、前のセクションを参照してください。）</target>
        </trans-unit>
        <trans-unit id="4c497574a1c472de22e6328f0ff86a2281e717c9" translate="yes" xml:space="preserve">
          <source>To do this, refer to the class (that you will configure in the next parts of this step) from within the navigation.html file by removing the code you added earlier (to color the current link red) and inserting the following code:</source>
          <target state="translated">これを行うには、先ほど追加したコード(現在のリンクを赤に着色する)を削除し、以下のコードを挿入することで、navigation.htmlファイル内のクラス(このステップの次の部分で設定します)を参照してください。</target>
        </trans-unit>
        <trans-unit id="83bb96ed5b2b2aff93e52b3e83bebc19227c9cea" translate="yes" xml:space="preserve">
          <source>To enable Coffeescript in Jekyll 3.0 and up you must</source>
          <target state="translated">Jekyll 3.0 以降で Coffeescript を有効にするには、次のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="0d780fda0133f8d52e0950c88890bd5e47f0cd63" translate="yes" xml:space="preserve">
          <source>To enable Travis builds for your GitHub repository:</source>
          <target state="translated">GitHub リポジトリで Travis ビルドを有効にします。</target>
        </trans-unit>
        <trans-unit id="a53782411360ad9a948a3a450fb9ce0d1ff8df2f" translate="yes" xml:space="preserve">
          <source>To enable pagination for posts on your blog, add a line to the &lt;code&gt;_config.yml&lt;/code&gt; file that specifies how many items should be displayed per page:</source>
          <target state="translated">ブログの投稿のページネーションを有効にするには、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルに1ページに表示するアイテム数を指定する行を追加します。</target>
        </trans-unit>
        <trans-unit id="37efe2d760bfebe822954818459d5cb00e3c004e" translate="yes" xml:space="preserve">
          <source>To get our changes processed by Jekyll we need to add &lt;a href=&quot;../03-front-matter/index&quot;&gt;front matter&lt;/a&gt; to the top of the page:</source>
          <target state="translated">Jekyllで変更を処理するには、ページの上部に&lt;a href=&quot;../03-front-matter/index&quot;&gt;フロントマター&lt;/a&gt;を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b3214c8d8f556945a5b5971b165f5b64f1826a5" translate="yes" xml:space="preserve">
          <source>To have &lt;code&gt;index.html&lt;/code&gt; use this layout, you can set a &lt;code&gt;layout&lt;/code&gt; variable in front matter. The layout wraps around the content of the page so all you need in &lt;code&gt;index.html&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; でこのレイアウトを使用するには、フロントマターで &lt;code&gt;layout&lt;/code&gt; 変数を設定できます。レイアウトはページのコンテンツをラップアラウンドするため、 &lt;code&gt;index.html&lt;/code&gt; に必要なのは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="047e95e3698efd45e38c9b7ce91d30d358677a2d" translate="yes" xml:space="preserve">
          <source>To have a remote server handle the deploy for you every time you push changes using Git, you can create a user account which has all the public keys that are authorized to deploy in its &lt;code&gt;authorized_keys&lt;/code&gt; file. With that in place, setting up the post-receive hook is done as follows:</source>
          <target state="translated">Gitを使用して変更をプッシュするたびにリモートサーバーにデプロイを処理させるには、 &lt;code&gt;authorized_keys&lt;/code&gt; ファイルでデプロイを許可されているすべての公開鍵を持つユーザーアカウントを作成できます。これを設定すると、ポスト受信フックの設定は次のようになります。</target>
        </trans-unit>
        <trans-unit id="60c6e082802cfa1fcac87c0c8d2410a20559ce74" translate="yes" xml:space="preserve">
          <source>To illustrate, consider the following plugin that implements custom functionality for every custom &lt;code&gt;Excerpt&lt;/code&gt; object initialized:</source>
          <target state="translated">説明のために、初期化されたすべてのカスタム &lt;code&gt;Excerpt&lt;/code&gt; オブジェクトにカスタム機能を実装する次のプラグインについて考えてみます。</target>
        </trans-unit>
        <trans-unit id="4ee6034df559d0a7b7cb1a920b3bd98e6b67503e" translate="yes" xml:space="preserve">
          <source>To install RubyGems on Gentoo:</source>
          <target state="translated">GentooにRubyGemsをインストールする。</target>
        </trans-unit>
        <trans-unit id="144010babb6f88bc59b04eac03336cb9bcfa9a7b" translate="yes" xml:space="preserve">
          <source>To install a gem-based theme:</source>
          <target state="translated">gemベースのテーマをインストールするには</target>
        </trans-unit>
        <trans-unit id="98264215c4ff5505f01b8f2d1ee590672e95238e" translate="yes" xml:space="preserve">
          <source>To install gems in your Gemfile using Bundler, run the following in the directory that has the Gemfile:</source>
          <target state="translated">Bundlerを使ってGemfileに宝石をインストールするには、Gemfileがあるディレクトリで以下を実行します。</target>
        </trans-unit>
        <trans-unit id="8ddec83a099837ef2ffef9702c0f09c49574da72" translate="yes" xml:space="preserve">
          <source>To install the Jekyll site into the directory you&amp;rsquo;re currently in, run &lt;code&gt;jekyll new .&lt;/code&gt; If the existing directory isn&amp;rsquo;t empty, you can pass the &lt;code&gt;--force&lt;/code&gt; option with &lt;code&gt;jekyll new . --force&lt;/code&gt;.</source>
          <target state="translated">Jekyllサイトを現在のディレクトリにインストールするには、 &lt;code&gt;jekyll new .&lt;/code&gt; 実行します。既存のディレクトリが空でない場合は、渡すことができ &lt;code&gt;--force&lt;/code&gt; とオプション &lt;code&gt;jekyll new . --force&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0c1559f4c9f3c6984974b05b8e03805cc845640" translate="yes" xml:space="preserve">
          <source>To install the command line tools to compile native extensions, open a terminal and run:</source>
          <target state="translated">ネイティブ拡張機能をコンパイルするコマンドラインツールをインストールするには、ターミナルを開いて実行します。</target>
        </trans-unit>
        <trans-unit id="94bf36b23d7d29653294ac58a57b2c27a240e503" translate="yes" xml:space="preserve">
          <source>To learn about other parameters you can include with &lt;code&gt;jekyll new&lt;/code&gt;, type &lt;code&gt;jekyll new --help&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;jekyll new&lt;/code&gt; に含めることができる他のパラメーターについて学習するには、「 &lt;code&gt;jekyll new --help&lt;/code&gt; 」と入力します。</target>
        </trans-unit>
        <trans-unit id="50ef509598509a60b544bb91aba55e636a523571" translate="yes" xml:space="preserve">
          <source>To link to a post, a page, collection item, or file, the &lt;code&gt;link&lt;/code&gt; tag will generate the correct permalink URL for the path you specify. For example, if you use the &lt;code&gt;link&lt;/code&gt; tag to link to &lt;code&gt;mypage.html&lt;/code&gt;, even if you change your permalink style to include the file extension or omit it, the URL formed by the &lt;code&gt;link&lt;/code&gt; tag will always be valid.</source>
          <target state="translated">投稿、ページ、コレクションアイテム、またはファイルに &lt;code&gt;link&lt;/code&gt; するために、リンクタグは指定したパスの正しいパーマリンクURLを生成します。たとえば、 &lt;code&gt;link&lt;/code&gt; タグを使用して &lt;code&gt;mypage.html&lt;/code&gt; にリンクする場合、パーマリンクスタイルを変更してファイル拡張子を含めるか省略しても、 &lt;code&gt;link&lt;/code&gt; タグによって形成されるURL は常に有効です。</target>
        </trans-unit>
        <trans-unit id="c54cc900bc68bc2b61da82b4ab2b49f0ad0b873a" translate="yes" xml:space="preserve">
          <source>To locate a theme&amp;rsquo;s files on your computer:</source>
          <target state="translated">コンピューターでテーマのファイルを見つけるには：</target>
        </trans-unit>
        <trans-unit id="76d8a5d75d6896314f48f97fb6a6fff551bbb703" translate="yes" xml:space="preserve">
          <source>To make common tasks easier, Jekyll even adds a few handy filters of its own, all of which you can find on this page. You can also create your own filters using &lt;a href=&quot;../../plugins/index&quot;&gt;plugins&lt;/a&gt;.</source>
          <target state="translated">一般的なタスクを簡単にするために、Jekyllは独自の便利なフィルターをいくつか追加しています。これらはすべて、このページにあります。&lt;a href=&quot;../../plugins/index&quot;&gt;プラグイン&lt;/a&gt;を使用して独自のフィルターを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="fc226c346fa88c595dd431ec607f8a0e6ffeb0b1" translate="yes" xml:space="preserve">
          <source>To modify any stylesheet you must take the extra step of also copying the main sass file (&lt;code&gt;_sass/minima.scss&lt;/code&gt; in the Minima theme) into the &lt;code&gt;_sass&lt;/code&gt; directory in your site&amp;rsquo;s source.</source>
          <target state="translated">スタイルシートを変更するには、メインのsassファイル（Minimaテーマの &lt;code&gt;_sass/minima.scss&lt;/code&gt; ）をサイトのソースの &lt;code&gt;_sass&lt;/code&gt; ディレクトリにコピーするという追加の手順を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="6334cf8aefdd307a815631e433ac1f0beb8fef61" translate="yes" xml:space="preserve">
          <source>To preview unpublished pages, run `jekyll serve` or `jekyll build` with the `--unpublished` switch. Jekyll also has a handy &lt;a href=&quot;../posts/index#drafts&quot;&gt;drafts&lt;/a&gt; feature tailored specifically for blog posts.</source>
          <target state="translated">未公開のページをプレビューするには、「-unpublished」スイッチを指定して「jekyllserve」または「jekyllbuild」を実行します。Jekyllには、ブログ投稿用に特別に調整された便利な&lt;a href=&quot;../posts/index#drafts&quot;&gt;ドラフト&lt;/a&gt;機能もあります。</target>
        </trans-unit>
        <trans-unit id="ce005eacb3214730c99e6f37f4b8b74ffd712932" translate="yes" xml:space="preserve">
          <source>To preview unpublished pages, simply run `jekyll serve` or `jekyll build` with the `--unpublished` switch. Jekyll also has a handy &lt;a href=&quot;../drafts/index&quot;&gt;drafts&lt;/a&gt; feature tailored specifically for blog posts.</source>
          <target state="translated">未公開のページをプレビューするには、 `--unpublished`スイッチを指定して` jekyll serve`または `jekyll build`を実行するだけです。Jekyllには、ブログ投稿用に特別に調整された便利な&lt;a href=&quot;../drafts/index&quot;&gt;ドラフト&lt;/a&gt;機能もあります。</target>
        </trans-unit>
        <trans-unit id="592d9b726fb33c342e7ba2f02120c449f7391761" translate="yes" xml:space="preserve">
          <source>To preview your site with drafts, run &lt;code&gt;jekyll serve&lt;/code&gt; or &lt;code&gt;jekyll build&lt;/code&gt; with the &lt;code&gt;--drafts&lt;/code&gt; switch. Each will be assigned the value modification time of the draft file for its date, and thus you will see currently edited drafts as the latest posts.</source>
          <target state="translated">ドラフトでサイトをプレビューするには、実行が &lt;code&gt;jekyll serve&lt;/code&gt; や &lt;code&gt;jekyll build&lt;/code&gt; と &lt;code&gt;--drafts&lt;/code&gt; のスイッチ。それぞれにその日付のドラフトファイルの値変更時刻が割り当てられるため、現在編集されているドラフトが最新の投稿として表示されます。</target>
        </trans-unit>
        <trans-unit id="4bb59665c8baa71c57b533a28e3fde52f64a7f7d" translate="yes" xml:space="preserve">
          <source>To preview your site with drafts, simply run &lt;code&gt;jekyll serve&lt;/code&gt; or &lt;code&gt;jekyll build&lt;/code&gt; with the &lt;code&gt;--drafts&lt;/code&gt; switch. Each will be assigned the value modification time of the draft file for its date, and thus you will see currently edited drafts as the latest posts.</source>
          <target state="translated">下書きでサイトをプレビュー &lt;code&gt;jekyll build&lt;/code&gt; は、 &lt;code&gt;--drafts&lt;/code&gt; スイッチを指定してjekyll &lt;code&gt;jekyll serve&lt;/code&gt; またはjekyll buildを実行します。それぞれに、その日付のドラフトファイルの値変更時刻が割り当てられるため、現在編集されているドラフトが最新の投稿として表示されます。</target>
        </trans-unit>
        <trans-unit id="2527d6dd613a39729e540bb4f1a6a4933638060a" translate="yes" xml:space="preserve">
          <source>To preview your theme as you&amp;rsquo;re authoring it, it may be helpful to add dummy content in, for example, &lt;code&gt;/index.html&lt;/code&gt; and &lt;code&gt;/page.html&lt;/code&gt; files. This will allow you to use the &lt;code&gt;jekyll build&lt;/code&gt; and &lt;code&gt;jekyll serve&lt;/code&gt; commands to preview your theme, just as you&amp;rsquo;d preview a Jekyll site.</source>
          <target state="translated">オーサリング中にテーマをプレビューするには、たとえば &lt;code&gt;/index.html&lt;/code&gt; や &lt;code&gt;/page.html&lt;/code&gt; ファイルにダミーコンテンツを追加すると役立つ場合があります。これにより、Jekyllサイトをプレビュー &lt;code&gt;jekyll build&lt;/code&gt; と &lt;code&gt;jekyll serve&lt;/code&gt; ように、jekyll buildコマンドとjekyll serveコマンドを使用してテーマをプレビューできます。</target>
        </trans-unit>
        <trans-unit id="3d7e803d275c82210ab0e5787cd20529c67fd9f4" translate="yes" xml:space="preserve">
          <source>To release a new version of your theme, update the version number in the gemspec file, ( &lt;code&gt;jekyll-theme-awesome.gemspec&lt;/code&gt; in this example ), and then repeat Steps 1 - 3 above. We recommend that you follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt; while bumping your theme-version.</source>
          <target state="translated">テーマの新しいバージョンをリリースするには、gemspecファイルのバージョン番号（この例では &lt;code&gt;jekyll-theme-awesome.gemspec&lt;/code&gt; ）を更新してから、上記の手順1〜3を繰り返します。テーマ&lt;a href=&quot;http://semver.org/&quot;&gt;バージョン&lt;/a&gt;をバンプする間は、セマンティックバージョニングに従うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="78791e166dc8019939a124cb96cae9ec8181d13b" translate="yes" xml:space="preserve">
          <source>To remedy some of these shortfalls, putting &lt;code&gt;regenerate: true&lt;/code&gt; in the front-matter of a document will force Jekyll to regenerate it regardless of whether it has been modified. Note that this will generate the specified document only; references to other documents&amp;rsquo; contents will not work since they won&amp;rsquo;t be re-rendered.</source>
          <target state="translated">これらの不足の一部を修正するには、ドキュメントの前付けに &lt;code&gt;regenerate: true&lt;/code&gt; すると、変更されているかどうかに関係なく、Jekyllがドキュメントを強制的に再生成します。これは指定されたドキュメントのみを生成することに注意してください。他のドキュメントのコンテンツへの参照は、再レンダリングされないため機能しません。</target>
        </trans-unit>
        <trans-unit id="15ae0b67f09259f2d22e8353fd7ddcc782a0de42" translate="yes" xml:space="preserve">
          <source>To render a code block with syntax highlighting, surround your code as follows:</source>
          <target state="translated">コードブロックをシンタックスハイライトでレンダリングするには、次のようにコードを囲みます。</target>
        </trans-unit>
        <trans-unit id="0140d190cef30ac07da886a289bc7350ec5109ff" translate="yes" xml:space="preserve">
          <source>To replace layouts or includes in your theme, make a copy in your &lt;code&gt;_layouts&lt;/code&gt; or &lt;code&gt;_includes&lt;/code&gt; directory of the specific file you wish to modify, or create the file from scratch giving it the same name as the file you wish to override.</source>
          <target state="translated">テーマのレイアウトまたはインクルードを置き換えるには、変更する特定のファイルの &lt;code&gt;_layouts&lt;/code&gt; または &lt;code&gt;_includes&lt;/code&gt; ディレクトリにコピーを作成するか、オーバーライドするファイルと同じ名前を付けて最初からファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="2cfa7c7c92dda1377ee7bbc586052cf5e6f396cc" translate="yes" xml:space="preserve">
          <source>To run the latest Ruby version you need to install it through &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt;.</source>
          <target state="translated">最新のRubyバージョンを実行するには、&lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt;からインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="144371a46b19101623955b58d3ec9bb40e6f19b2" translate="yes" xml:space="preserve">
          <source>To safeguard situations where users don&amp;rsquo;t supply a value for the parameter, you can use &lt;a href=&quot;https://shopify.github.io/liquid/filters/default/&quot;&gt;Liquid&amp;rsquo;s default filter&lt;/a&gt;.</source>
          <target state="translated">ユーザーがパラメーターの値を指定しない状況を保護するために、&lt;a href=&quot;https://shopify.github.io/liquid/filters/default/&quot;&gt;Liquidのデフォルトフィルターを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="64dfd9c57797f4e911f0a43d68046b126514e5a3" translate="yes" xml:space="preserve">
          <source>To see the &lt;strong&gt;live site&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;ライブサイト&lt;/strong&gt;を見るには：</target>
        </trans-unit>
        <trans-unit id="0874396740fec1c367aeea99d249068bc0174bf2" translate="yes" xml:space="preserve">
          <source>To set a global permalink, you use the &lt;code&gt;permalink&lt;/code&gt; variable in &lt;code&gt;_config.yml&lt;/code&gt;. You can use placeholders to your desired output. For example:</source>
          <target state="translated">グローバルパーマリンクを設定するには、 &lt;code&gt;_config.yml&lt;/code&gt; の &lt;code&gt;permalink&lt;/code&gt; 変数を使用します。プレースホルダーを使用して、目的の出力を作成できます。例えば：</target>
        </trans-unit>
        <trans-unit id="24cf25449da1ed70a470c7b8d913b04e848ae7ab" translate="yes" xml:space="preserve">
          <source>To set up a collection you need to tell Jekyll about it. Jekyll configuration happens in a file called &lt;code&gt;_config.yml&lt;/code&gt; (by default).</source>
          <target state="translated">コレクションを設定するには、Jekyllにそのことを伝える必要があります。Jekyll構成は、 &lt;code&gt;_config.yml&lt;/code&gt; （デフォルト）というファイルで行われます。</target>
        </trans-unit>
        <trans-unit id="5ca8077737fc0abd8bdd3778e25d2b37cc40bd09" translate="yes" xml:space="preserve">
          <source>To speed up the build, you should cache the gem packages created by &lt;code&gt;bundler&lt;/code&gt;. Travis has a pre-defined &lt;a href=&quot;https://docs.travis-ci.com/user/caching/#Caching-directories-(Bundler%2C-dependencies)&quot;&gt;cache strategy for this tool&lt;/a&gt; which should have all the default configs to do exactly that.</source>
          <target state="translated">ビルドを高速化するには、 &lt;code&gt;bundler&lt;/code&gt; によって作成されたgemパッケージをキャッシュする必要があります。Travisには、&lt;a href=&quot;https://docs.travis-ci.com/user/caching/#Caching-directories-(Bundler%2C-dependencies)&quot;&gt;このツール用に&lt;/a&gt;事前定義されたキャッシュ戦略があり、それを正確に行うためのすべてのデフォルト構成が必要です。</target>
        </trans-unit>
        <trans-unit id="ce9499e26000537fbb3c8105e87098127ffd35f8" translate="yes" xml:space="preserve">
          <source>To start a new project named &lt;code&gt;my_blog&lt;/code&gt;, just run:</source>
          <target state="translated">&lt;code&gt;my_blog&lt;/code&gt; という名前の新しいプロジェクトを開始するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="21eec12399439eadc43bb09c73f5082c324a704d" translate="yes" xml:space="preserve">
          <source>To start building your project on CircleCI, all you need to do is &amp;lsquo;follow&amp;rsquo; your project from CircleCI&amp;rsquo;s website:</source>
          <target state="translated">CircleCIでプロジェクトの構築を開始するには、CircleCIのWebサイトからプロジェクトを「フォロー」するだけです。</target>
        </trans-unit>
        <trans-unit id="1b35b31acc1f74b7d3433c31545028731bd3cc02" translate="yes" xml:space="preserve">
          <source>To start using collections, follow these 3 steps:</source>
          <target state="translated">コレクションの使用を開始するには、以下の3つのステップに従ってください。</target>
        </trans-unit>
        <trans-unit id="58576dc8c33d1faafcaa433fb4a9bdc08980c7e9" translate="yes" xml:space="preserve">
          <source>To switch part of your config settings depending on the environment, use the &lt;a href=&quot;../options/index#build-command-options&quot;&gt;build command option&lt;/a&gt;, for example &lt;code&gt;--config _config.yml,_config_development.yml&lt;/code&gt;. Settings in later files override settings in earlier files.</source>
          <target state="translated">環境に応じて構成設定の一部を切り替えるには、&lt;a href=&quot;../options/index#build-command-options&quot;&gt;ビルドコマンドオプションを&lt;/a&gt;使用します（例： &lt;code&gt;--config _config.yml,_config_development.yml&lt;/code&gt; 。後のファイルの設定は、前のファイルの設定を上書きします。</target>
        </trans-unit>
        <trans-unit id="4c5c89e555cfe8181665e573aca3cb760df19555" translate="yes" xml:space="preserve">
          <source>To use a Collection you first need to define it in your &lt;code&gt;_config.yml&lt;/code&gt;. For example here&amp;rsquo;s a collection of staff members:</source>
          <target state="translated">コレクションを使用するには、 &lt;code&gt;_config.yml&lt;/code&gt; でコレクションを定義する必要があります。たとえば、スタッフのコレクションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="248551d931632d88c17c5dde9e698aa07dc367dc" translate="yes" xml:space="preserve">
          <source>To use one of the example plugins above as an illustration, here is how you&amp;rsquo;d specify these two flags:</source>
          <target state="translated">上記のプラグインの例の1つを例として使用するには、これらの2つのフラグを指定する方法を次に示します。</target>
        </trans-unit>
        <trans-unit id="403626465ce35b0d66ec789aad1d4c945ac7a29a" translate="yes" xml:space="preserve">
          <source>To use the currently-deployed version of the gem in your project, add the following to your &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">プロジェクトで現在デプロイされているgemのバージョンを使用するには、 &lt;code&gt;Gemfile&lt;/code&gt; に以下を追加します。</target>
        </trans-unit>
        <trans-unit id="d191d6d577081ef0c072993694815c724c1b12ff" translate="yes" xml:space="preserve">
          <source>To use these first you need to add them to your &lt;code&gt;Gemfile&lt;/code&gt;. If you put them in a &lt;code&gt;jekyll_plugins&lt;/code&gt; group they&amp;rsquo;ll automatically be required into Jekyll:</source>
          <target state="translated">これらを最初に使用するには、 &lt;code&gt;Gemfile&lt;/code&gt; に追加する必要があります。それらを &lt;code&gt;jekyll_plugins&lt;/code&gt; グループに入れると、自動的にJekyllに必要になります。</target>
        </trans-unit>
        <trans-unit id="a57764e6639dc41d9cb7589790d2175c776da7c0" translate="yes" xml:space="preserve">
          <source>To watch the progress and see any build errors, check on the build &lt;strong&gt;status&lt;/strong&gt; using one of the following approaches:</source>
          <target state="translated">進行状況を監視し、ビルドエラーを確認するには、次のいずれかの方法を使用してビルド&lt;strong&gt;ステータス&lt;/strong&gt;を確認します。</target>
        </trans-unit>
        <trans-unit id="fc58e433367afbd26cd82d563e2ad4c7fe336e1c" translate="yes" xml:space="preserve">
          <source>Total number of Posts.</source>
          <target state="translated">総投稿数。</target>
        </trans-unit>
        <trans-unit id="0b28c1e8a5cff208433410e41a9a59a52974349f" translate="yes" xml:space="preserve">
          <source>Total number of pages</source>
          <target state="translated">総ページ数</target>
        </trans-unit>
        <trans-unit id="ec02cb28209dd849ec00c43e89250ce2ee45c01f" translate="yes" xml:space="preserve">
          <source>Total number of pages.</source>
          <target state="translated">総ページ数。</target>
        </trans-unit>
        <trans-unit id="cc3c736243e345a8af66b53ba5d532b4e1516385" translate="yes" xml:space="preserve">
          <source>Total number of posts</source>
          <target state="translated">総投稿数</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">トラビスCI</target>
        </trans-unit>
        <trans-unit id="1c86bc3039ac80dc022230c501ef0849103da6b6" translate="yes" xml:space="preserve">
          <source>Travis allows you to run any arbitrary shell script to test your site. One convention is to put all scripts for your project in the &lt;code&gt;script&lt;/code&gt; directory, and to call your test script &lt;code&gt;cibuild&lt;/code&gt;. This line is completely customizable. If your script won&amp;rsquo;t change much, you can write your test incantation here directly:</source>
          <target state="translated">Travisでは、任意のシェルスクリプトを実行してサイトをテストできます。1つの規則は、プロジェクトのすべてのスクリプトを &lt;code&gt;script&lt;/code&gt; ディレクトリに &lt;code&gt;cibuild&lt;/code&gt; 、テストスクリプトcibuildを呼び出すことです。この行は完全にカスタマイズ可能です。スクリプトがあまり変わらない場合は、ここにテストの呪文を直接書くことができます。</target>
        </trans-unit>
        <trans-unit id="f0c9192db14c3e5047a2dcb1e702c2bb7a77776e" translate="yes" xml:space="preserve">
          <source>Travis bundles all gems in the &lt;code&gt;vendor&lt;/code&gt; directory on its build servers, which Jekyll will mistakenly read and explode on.</source>
          <target state="translated">Travis は、ビルドサーバーの &lt;code&gt;vendor&lt;/code&gt; ディレクトリにあるすべてのgemをバンドルしています。これは、Jekyllが誤って読み取り、爆発します。</target>
        </trans-unit>
        <trans-unit id="9397ad640100c6a75f152aac24412839d898de73" translate="yes" xml:space="preserve">
          <source>Triggered at</source>
          <target state="translated">でトリガーされます。</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="15a57e28ab2afedde562b2e7193be9a9ba688697" translate="yes" xml:space="preserve">
          <source>Try adding &lt;code&gt;future: true&lt;/code&gt; to your &lt;code&gt;_config.yml&lt;/code&gt; file. Are they showing up now? If they are, then you were ensnared by an issue with the way Ruby parses times. Each of your posts is being read in a different timezone than you might expect and, when compared to the computer&amp;rsquo;s current time, is &amp;ldquo;in the future.&amp;rdquo; The fix for this is to add &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_UTC_time_offsets&quot;&gt;a timezone offset&lt;/a&gt; to each post (and make sure you remove &lt;code&gt;future: true&lt;/code&gt; from your &lt;code&gt;_config.yml&lt;/code&gt; file). If you&amp;rsquo;re writing from California, for example, you would change this:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; ファイルに &lt;code&gt;future: true&lt;/code&gt; を追加してみてください。彼らは今現れていますか？もしそうなら、あなたはRubyが時間を解析する方法の問題に巻き込まれました。投稿はそれぞれ、予想とは異なるタイムゾーンで読み取られており、コンピューターの現在の時刻と比較すると「未来」です。これを修正するには、各投稿に&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_UTC_time_offsets&quot;&gt;タイムゾーンオフセット&lt;/a&gt;を追加します（ &lt;code&gt;_config.yml&lt;/code&gt; ファイルから &lt;code&gt;future: true&lt;/code&gt; を削除してください）。たとえば、カリフォルニアから書いている場合は、次のように変更します。</target>
        </trans-unit>
        <trans-unit id="acf85bf958f73812f65be385a56aca3093440517" translate="yes" xml:space="preserve">
          <source>Try using the include tag to add the navigation to &lt;code&gt;_layouts/default.html&lt;/code&gt;:</source>
          <target state="translated">includeタグを使用して、ナビゲーションを &lt;code&gt;_layouts/default.html&lt;/code&gt; に追加してみてください。</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="fd4aff70bfe253483081c7d3e7c585e079122f7d" translate="yes" xml:space="preserve">
          <source>Typically you&amp;rsquo;ll use &lt;code&gt;jekyll serve&lt;/code&gt; while developing locally and &lt;code&gt;jekyll build&lt;/code&gt; when you need to generate the site for production.</source>
          <target state="translated">通常、ローカルで &lt;code&gt;jekyll build&lt;/code&gt; ときは &lt;code&gt;jekyll serve&lt;/code&gt; を使用し、本番用のサイトを生成する必要があるときはjekyllビルドを使用します。</target>
        </trans-unit>
        <trans-unit id="baeece408effbbd5a4a9976616d35d9b7cecbf32" translate="yes" xml:space="preserve">
          <source>URL Template</source>
          <target state="translated">URLテンプレート</target>
        </trans-unit>
        <trans-unit id="5514a5e82e67e0b2e0c6eb04de22b5ee4892512a" translate="yes" xml:space="preserve">
          <source>UTF-8 Character Encoding Warning</source>
          <target state="translated">UTF-8文字エンコーディング警告</target>
        </trans-unit>
        <trans-unit id="a1c366cacdc2e4f2ca5e9f514afccf66ad1dfa3e" translate="yes" xml:space="preserve">
          <source>Ubuntu</source>
          <target state="translated">Ubuntu</target>
        </trans-unit>
        <trans-unit id="1a703bb3540af03fd17a26811925888f989e5055" translate="yes" xml:space="preserve">
          <source>Under the current implementation, incremental regeneration will only generate a document or page if either it, or one of its dependencies, is modified. Currently, the only types of dependencies tracked are includes (using the &lt;code&gt;{% include %}&lt;/code&gt; tag) and layouts. This means that plain references to other documents (for example, the common case of iterating over &lt;code&gt;site.posts&lt;/code&gt; in a post listings page) will not be detected as a dependency.</source>
          <target state="translated">現在の実装では、インクリメンタル再生成は、ドキュメントまたはページ、またはその依存関係のいずれかが変更された場合にのみ生成されます。現在、追跡される依存関係のタイプは、インクルード（ &lt;code&gt;{% include %}&lt;/code&gt; タグを使用）とレイアウトのみです。つまり、他のドキュメントへの単純な参照（たとえば、投稿一覧ページの &lt;code&gt;site.posts&lt;/code&gt; を反復する一般的なケース）は、依存関係として検出されません。</target>
        </trans-unit>
        <trans-unit id="b792a850dc679dc088bd75a5fe8cd002ee68affe" translate="yes" xml:space="preserve">
          <source>Understanding gem-based themes</source>
          <target state="translated">ジェムベースのテーマを理解する</target>
        </trans-unit>
        <trans-unit id="97de3a1a64a0c29dcddc995d062054ccf92a4429" translate="yes" xml:space="preserve">
          <source>Unlike posts, drafts don&amp;rsquo;t have a date, since they haven&amp;rsquo;t been published yet. Rather than naming your draft something like &lt;code&gt;2013-07-01-my-draft-post.md&lt;/code&gt;, simply name the file what you&amp;rsquo;d like your post to eventually be titled, here &lt;code&gt;my-draft-post.md&lt;/code&gt;.</source>
          <target state="translated">投稿とは異なり、下書きはまだ公開されていないため、日付はありません。下書きに &lt;code&gt;2013-07-01-my-draft-post.md&lt;/code&gt; のような名前を付けるのではなく、投稿に最終的にタイトルを付けるファイルに、ここでは &lt;code&gt;my-draft-post.md&lt;/code&gt; と名前を付けます。</target>
        </trans-unit>
        <trans-unit id="d72504ccafa49f87db4beb43d02a1e00f367b998" translate="yes" xml:space="preserve">
          <source>Unlike posts, pages by default mimic the source directory structure exactly. (The only exception is if your page has a &lt;code&gt;permalink&lt;/code&gt; declared its front matter &amp;mdash; in that case, the structure honors the permalink setting instead of the source folder structure.)</source>
          <target state="translated">投稿とは異なり、デフォルトでは、ページはソースディレクトリ構造を正確に模倣しています。（唯一の例外は、ページの前付けに &lt;code&gt;permalink&lt;/code&gt; 宣言されている場合です。その場合、構造は、ソースフォルダー構造ではなくパーマリンク設定に従います。）</target>
        </trans-unit>
        <trans-unit id="0aadd1b104d2e4934b12d78f769e1a69fb8c9b04" translate="yes" xml:space="preserve">
          <source>Unlike tags, categories for posts can also be defined by a post&amp;rsquo;s file path. Any directory above &lt;code&gt;_post&lt;/code&gt; will be read-in as a category. For example, if a post is at path &lt;code&gt;movies/horror/_posts/2019-05-21-bride-of-chucky.markdown&lt;/code&gt;, then &lt;code&gt;movies&lt;/code&gt; and &lt;code&gt;horror&lt;/code&gt; are automatically registered as categories for that post.</source>
          <target state="translated">タグとは異なり、投稿のカテゴリは投稿のファイルパスで定義することもできます。 &lt;code&gt;_post&lt;/code&gt; より上のディレクトリは、カテゴリとして読み込まれます。たとえば、投稿がパス &lt;code&gt;movies/horror/_posts/2019-05-21-bride-of-chucky.markdown&lt;/code&gt; にある場合、 &lt;code&gt;movies&lt;/code&gt; と &lt;code&gt;horror&lt;/code&gt; はその投稿のカテゴリとして自動的に登録されます。</target>
        </trans-unit>
        <trans-unit id="545ca46cd01cb816953840b4a0071ecc6ecd2f9e" translate="yes" xml:space="preserve">
          <source>Unlike user and organization Pages, Project Pages are kept in the same repository as the project they are for, except that the website content is stored in a specially named &lt;code&gt;gh-pages&lt;/code&gt; branch or in a &lt;code&gt;docs&lt;/code&gt; folder on the &lt;code&gt;master&lt;/code&gt; branch. The content will be rendered using Jekyll, and the output will become available under a subpath of your user pages subdomain, such as &lt;code&gt;username.github.io/project&lt;/code&gt; (unless a custom domain is specified).</source>
          <target state="translated">ユーザーページや組織ページとは異なり、プロジェクトページは、プロジェクトと同じリポジトリに保持されます。ただし、Webサイトのコンテンツは、特別な名前の &lt;code&gt;gh-pages&lt;/code&gt; ブランチまたは &lt;code&gt;master&lt;/code&gt; ブランチの &lt;code&gt;docs&lt;/code&gt; フォルダーに保存されます。コンテンツはJekyllを使用してレンダリングされ、出力は &lt;code&gt;username.github.io/project&lt;/code&gt; などのユーザーページサブドメインのサブパスの下で利用可能になります（カスタムドメインが指定されていない場合）。</target>
        </trans-unit>
        <trans-unit id="b6d4f2a533ee0731fb3a72d4f9b9302208764871" translate="yes" xml:space="preserve">
          <source>Updates in the infrastructure of Ruby may cause SSL errors when attempting to use &lt;code&gt;gem install&lt;/code&gt; with versions of the RubyGems package older than 2.6. (The RubyGems package installed via the Chocolatey tool is version 2.3) If you have installed an older version, you can update the RubyGems package using the directions &lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/#installing-using-update-packages&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Rubyのインフラストラクチャの更新により、2.6より古いバージョンのRubyGemsパッケージで &lt;code&gt;gem install&lt;/code&gt; を使用しようとすると、SSLエラーが発生する場合があります。（Chocolateyツールを介してインストールされたRubyGemsパッケージはバージョン2.3です）古いバージョンをインストールしている場合は、&lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/#installing-using-update-packages&quot;&gt;こちら&lt;/a&gt;の指示に従ってRubyGemsパッケージを更新できます。</target>
        </trans-unit>
        <trans-unit id="909248e2ddc409547b397be43855705e800e8d1b" translate="yes" xml:space="preserve">
          <source>Upgrading from 0.x to 2.x</source>
          <target state="translated">0.xから2.xへのアップグレード</target>
        </trans-unit>
        <trans-unit id="05143330adf4bd1d63ea88cbc86dda9682b30774" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.x to 3.x</source>
          <target state="translated">2.xから3.xへのアップグレード</target>
        </trans-unit>
        <trans-unit id="1bf2835477a721c36eb5b31c86828bbf673c5748" translate="yes" xml:space="preserve">
          <source>Upgrading from an older version of Jekyll? A few things have changed in 1.0 and 2.0 that you&amp;rsquo;ll want to know about.</source>
          <target state="translated">Jekyllの古いバージョンからアップグレードしますか？1.0と2.0ではいくつかの変更点があり、これらについて知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="22b40ca09d6fac12069711da0205a54758807a9a" translate="yes" xml:space="preserve">
          <source>Upgrading from an older version of Jekyll? A few things have changed in Jekyll 3 that you&amp;rsquo;ll want to know about.</source>
          <target state="translated">Jekyllの古いバージョンからアップグレードしますか？Jekyll 3ではいくつかの変更点があり、これらについて知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="9c47a7b50dcd3c6cc5bdd576e545a656263df410" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;Kickster&lt;/a&gt; for automated deploys to GitHub Pages when using unsupported plugins on GitHub Pages.</source>
          <target state="translated">GitHub Pagesでサポートされていないプラグインを使用する場合は、&lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;Kickster&lt;/a&gt;を使用してGitHubPagesへの自動デプロイを行います。</target>
        </trans-unit>
        <trans-unit id="096fee79b9f0c89d2b4ab3a2c04b40c75ecd8c40" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;Kickster&lt;/a&gt; for easy (automated) deploys to GitHub Pages when using unsupported plugins on GitHub Pages.</source>
          <target state="translated">GitHubページでサポートされていないプラグインを使用する&lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;場合&lt;/a&gt;、Kicksterを使用してGitHubページへの簡単な（自動化された）デプロイを行います。</target>
        </trans-unit>
        <trans-unit id="eb25969bef65ffbd2fe8ab68d4c32ecba0b02013" translate="yes" xml:space="preserve">
          <source>Use Liquid</source>
          <target state="translated">液体を使用する</target>
        </trans-unit>
        <trans-unit id="e451a98cc33d26bec84c90504d5c78d00b893270" translate="yes" xml:space="preserve">
          <source>Use a saas service as a backend for forms (contact forms, hiring forms, etc.)</source>
          <target state="translated">フォーム(問い合わせフォーム、採用フォームなど)のバックエンドとしてsaasサービスを使用します。</target>
        </trans-unit>
        <trans-unit id="8682df8b53d76e1621156d90960098f918c9295c" translate="yes" xml:space="preserve">
          <source>Use a specific environment value in the build.</source>
          <target state="translated">ビルドで特定の環境値を使用します。</target>
        </trans-unit>
        <trans-unit id="3ae373a2346802cbc63e8e688579eacdb6a50f24" translate="yes" xml:space="preserve">
          <source>Use front matter</source>
          <target state="translated">フロントマターを使用する</target>
        </trans-unit>
        <trans-unit id="5d0dd76d0469a1210eeff6c91442818635b4e05d" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../liquid/tags/index#linking-to-posts&quot;&gt;&lt;code&gt;post_url&lt;/code&gt;&lt;/a&gt; tag to link to other posts without having to worry about the URLs breaking when the site permalink style changes.</source>
          <target state="translated">&lt;a href=&quot;../liquid/tags/index#linking-to-posts&quot;&gt; &lt;code&gt;post_url&lt;/code&gt; &lt;/a&gt;タグを使用すると、サイトのパーマリンクスタイルが変更されたときにURLが壊れることを心配することなく、他の投稿にリンクできます。</target>
        </trans-unit>
        <trans-unit id="5fd865684d3f48e47d1641f649f11c4e27ad3acc" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../templates/index#linking-to-posts&quot;&gt;&lt;code&gt;post_url&lt;/code&gt;&lt;/a&gt; tag to link to other posts without having to worry about the URLs breaking when the site permalink style changes.</source>
          <target state="translated">&lt;a href=&quot;../templates/index#linking-to-posts&quot;&gt; &lt;code&gt;post_url&lt;/code&gt; &lt;/a&gt;タグを使用すると、サイトのパーマリンクスタイルが変更されたときにURLが壊れることを心配することなく、他の投稿にリンクできます。</target>
        </trans-unit>
        <trans-unit id="773cfc18b556d4be58999872955618132b94fd19" translate="yes" xml:space="preserve">
          <source>Useful Guides</source>
          <target state="translated">便利なガイド</target>
        </trans-unit>
        <trans-unit id="7b066626401d6e28ca2ce799a19b089172de77f5" translate="yes" xml:space="preserve">
          <source>User and Organization Pages</source>
          <target state="translated">ユーザーと組織のページ</target>
        </trans-unit>
        <trans-unit id="638cea49d54ba3459c93a9d152a177eb38a9fc71" translate="yes" xml:space="preserve">
          <source>User and organization pages live in a special GitHub repository dedicated to only the GitHub Pages files. This repository must be named after the account name. For example, &lt;a href=&quot;https://github.com/mojombo/mojombo.github.io&quot;&gt;@mojombo&amp;rsquo;s user page repository&lt;/a&gt; has the name &lt;code&gt;mojombo.github.io&lt;/code&gt;.</source>
          <target state="translated">ユーザーページと組織ページは、GitHubページファイル専用の特別なGitHubリポジトリにあります。このリポジトリには、アカウント名にちなんだ名前を付ける必要があります。たとえば、&lt;a href=&quot;https://github.com/mojombo/mojombo.github.io&quot;&gt;@ mojomboのユーザーページリポジトリ&lt;/a&gt;の名前は &lt;code&gt;mojombo.github.io&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2879f41adff9c879803b794b4be50f26399523c6" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../front-matter/index&quot;&gt;front matter&lt;/a&gt; is one way that you can specify configuration in the pages and posts for your site. Setting things like a default layout, or customizing the title, or specifying a more precise date/time for the post can all be added to your page or post front matter.</source>
          <target state="translated">&lt;a href=&quot;../../front-matter/index&quot;&gt;フロントマターの&lt;/a&gt;使用は、サイトのページと投稿で構成を指定できる1つの方法です。デフォルトのレイアウトの設定、タイトルのカスタマイズ、投稿のより正確な日付/時刻の指定などはすべて、ページまたは投稿のフロントマターに追加できます。</target>
        </trans-unit>
        <trans-unit id="8b8cc777f7ee9ffe1de0675875671539b6195593" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; is one way that you can specify configuration in the pages and posts for your site. Setting things like a default layout, or customizing the title, or specifying a more precise date/time for the post can all be added to your page or post front matter.</source>
          <target state="translated">&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matterの&lt;/a&gt;使用は、サイトのページと投稿で構成を指定できる1つの方法です。デフォルトのレイアウトのようなものを設定したり、タイトルをカスタマイズしたり、投稿のより正確な日付/時刻を指定したりすることはすべて、ページまたは投稿の前付けに追加できます。</target>
        </trans-unit>
        <trans-unit id="be1f3c61b36f55bbcc1ea434f645e510e4aee131" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;html-proofer&lt;/code&gt;? You&amp;rsquo;ll want this environment variable. Nokogiri, used to parse HTML files in your compiled site, comes bundled with libraries which it must compile each time it is installed. Luckily, you can dramatically decrease the install time of Nokogiri by setting the environment variable &lt;code&gt;NOKOGIRI_USE_SYSTEM_LIBRARIES&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;html-proofer&lt;/code&gt; を使用していますか？この環境変数が必要になります。コンパイル済みサイトでHTMLファイルを解析するために使用されるNokogiriには、インストールするたびにコンパイルする必要があるライブラリがバンドルされています。幸いにも、環境変数 &lt;code&gt;NOKOGIRI_USE_SYSTEM_LIBRARIES&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定することで、Nokogiriのインストール時間を大幅に短縮できます。</target>
        </trans-unit>
        <trans-unit id="a7b75b7c7ceed347297e7bf514ddd87db5aae092" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;null&lt;/code&gt; will produce a file without using a layout file. However this is overridden if the file is a post/document and has a layout defined in the &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt; frontmatter defaults&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;null&lt;/code&gt; レイアウトファイルを使用せずに、ファイルを生成します。ただし、ファイルが投稿/ドキュメントであり、&lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;frontmatter defaults&lt;/a&gt;でレイアウトが定義されている場合、これはオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="d6f2463a9075b0f7689a7874a7137d770b1d7266" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;null&lt;/code&gt; will produce a file without using a layout file. This is overridden if the file is a post/document and has a layout defined in the &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt; front matter defaults&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;null&lt;/code&gt; レイアウトファイルを使用せずに、ファイルを生成します。ファイルが投稿/ドキュメントであり、&lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;フロントマターのデフォルトで&lt;/a&gt;定義されたレイアウトがある場合、これは上書きされます。</target>
        </trans-unit>
        <trans-unit id="cae77f61de71cf7fdf27a27143729bc2b77cf373" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;page.url&lt;/code&gt; you can check if each link is the current page and color it red if true:</source>
          <target state="translated">&lt;code&gt;page.url&lt;/code&gt; を使用すると、各リンクが現在のページであるかどうかを確認し、trueの場合は赤で色付けできます。</target>
        </trans-unit>
        <trans-unit id="3e4df7af977be755393dd9928014f3ec23314f2c" translate="yes" xml:space="preserve">
          <source>Using CSS, JS, images and other assets is straightforward with Jekyll. Place them in your site folder and they&amp;rsquo;ll copy across to the built site.</source>
          <target state="translated">Jekyllを使用すると、CSS、JS、画像、その他のアセットを簡単に使用できます。それらをサイトフォルダに配置すると、ビルドされたサイトにコピーされます。</target>
        </trans-unit>
        <trans-unit id="6e7a25893892346ac69627083d8abdaa2fd89d87" translate="yes" xml:space="preserve">
          <source>Using Collections</source>
          <target state="translated">コレクションの使用</target>
        </trans-unit>
        <trans-unit id="fa5cc6724fd35094e6e8e7bdf78679d69ef2f5d3" translate="yes" xml:space="preserve">
          <source>Using Pygments has been deprecated and is not supported in Jekyll 4; the configuration setting &lt;code&gt;highlighter: pygments&lt;/code&gt; now automatically falls back to using &lt;em&gt;Rouge&lt;/em&gt; which is written in Ruby and 100% compatible with stylesheets for Pygments.</source>
          <target state="translated">Pygmentsの使用は非推奨になり、Jekyll4ではサポートされていません。構成設定の &lt;code&gt;highlighter: pygments&lt;/code&gt; は、Rubyで記述され、Pygmentsのスタイルシートと100％互換性のある&lt;em&gt;Rougeの&lt;/em&gt;使用に自動的にフォールバックするようになりました。</target>
        </trans-unit>
        <trans-unit id="51e5c6270d62dac1e66168eb5d60e91aca3c1d38" translate="yes" xml:space="preserve">
          <source>Using a layout is a much better choice. Layouts are templates that wrap around your content. They live in a directory called &lt;code&gt;_layouts&lt;/code&gt;.</source>
          <target state="translated">レイアウトを使用することは、はるかに良い選択です。レイアウトは、コンテンツをラップアラウンドするテンプレートです。それらは &lt;code&gt;_layouts&lt;/code&gt; と呼ばれるディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="3a8b88abb372b1dde878f41986aeb701b49fbf7c" translate="yes" xml:space="preserve">
          <source>Using hooks, your plugin can exercise fine-grained control over various aspects of the build process. If your plugin defines any hooks, Jekyll will call them at pre-defined points.</source>
          <target state="translated">フックを使用することで、プラグインはビルドプロセスの様々な側面を細かく制御することができます。プラグインがフックを定義している場合、Jekyll は事前に定義されたポイントでそれらを呼び出します。</target>
        </trans-unit>
        <trans-unit id="af6042d577161be6cec4ae8b363cbde0f233f6c1" translate="yes" xml:space="preserve">
          <source>Using this setup, you might run the following command:</source>
          <target state="translated">この設定を使用して、以下のコマンドを実行することができます。</target>
        </trans-unit>
        <trans-unit id="e43c2d81fd4e70bb80021de375b1e2bdd30979b3" translate="yes" xml:space="preserve">
          <source>Using variables names for the include file</source>
          <target state="translated">インクルードファイルに変数名を使用する</target>
        </trans-unit>
        <trans-unit id="2647e87439eefa36ca129f4a554faa43e08a0935" translate="yes" xml:space="preserve">
          <source>Using your Rails layouts in Jekyll</source>
          <target state="translated">JekyllでRailsレイアウトを使う</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="4a7b27e96ba9167213575203eb7235117dff5e71" translate="yes" xml:space="preserve">
          <source>Vercel</source>
          <target state="translated">Vercel</target>
        </trans-unit>
        <trans-unit id="7c570256409f16e7b5adf5655387cd0cac895a44" translate="yes" xml:space="preserve">
          <source>Version 2.0 of the TZInfo library has introduced a change in how timezone offsets are calculated. This will result in incorrect date and time for your posts when the site is built with Jekyll 3.x on Windows.</source>
          <target state="translated">TZInfo ライブラリのバージョン 2.0 では、タイムゾーンのオフセットの計算方法が変更されました。これにより、Windows上でJekyll 3.xを使用してサイトを構築した場合、投稿の日付と時刻が正しく表示されなくなります。</target>
        </trans-unit>
        <trans-unit id="660751aa27943edcbc09568493b8c9907f535d69" translate="yes" xml:space="preserve">
          <source>View your site at the &lt;strong&gt;URL&lt;/strong&gt;. Make sure the &lt;code&gt;timeago&lt;/code&gt; filter works as expected.</source>
          <target state="translated">&lt;strong&gt;URLで&lt;/strong&gt;サイトを表示し&lt;strong&gt;ます&lt;/strong&gt;。 &lt;code&gt;timeago&lt;/code&gt; フィルターが期待どおりに機能することを確認します。</target>
        </trans-unit>
        <trans-unit id="4e74b3b07ba93d02c13bfae349677b5d3685bb15" translate="yes" xml:space="preserve">
          <source>Visit the &amp;lsquo;Add Projects&amp;rsquo; page</source>
          <target state="translated">「プロジェクトの追加」ページにアクセスします</target>
        </trans-unit>
        <trans-unit id="b808a2f9c64e85ebf5188927f11a353e1e040232" translate="yes" xml:space="preserve">
          <source>Visit the &amp;lsquo;Add Projects&amp;rsquo; page: &lt;a href=&quot;https://circleci.com/add-projects&quot;&gt;https://circleci.com/add-projects&lt;/a&gt;</source>
          <target state="translated">「プロジェクトの追加」ページに&lt;a href=&quot;https://circleci.com/add-projects&quot;&gt;アクセスし&lt;/a&gt;ます：https : //circleci.com/add-projects</target>
        </trans-unit>
        <trans-unit id="9607bc996ca4cf8cae14bce3c3bd9e430565986d" translate="yes" xml:space="preserve">
          <source>WEBrick Options</source>
          <target state="translated">WEBrickオプション</target>
        </trans-unit>
        <trans-unit id="de23d55b8683a82f11ae68b81584f6dcf4d06574" translate="yes" xml:space="preserve">
          <source>Want to get a new Jekyll site up and running quickly? Simply run &lt;code&gt;jekyll new SITENAME&lt;/code&gt; to create a new folder with a bare bones Jekyll site.</source>
          <target state="translated">新しいJekyllサイトをすぐに稼働させたいですか？ &lt;code&gt;jekyll new SITENAME&lt;/code&gt; を実行して、必要最小限の Jekyllサイトを含む新しいフォルダーを作成します。</target>
        </trans-unit>
        <trans-unit id="11debc6767149aaf55dfe56efff8059dcc88970d" translate="yes" xml:space="preserve">
          <source>Warnings help you not blow things up</source>
          <target state="translated">警告は、物事を爆発させないために役立ちます。</target>
        </trans-unit>
        <trans-unit id="1490797e67b2964af055f97bda5cc0293b386670" translate="yes" xml:space="preserve">
          <source>Watching and Serving</source>
          <target state="translated">見守りと奉仕</target>
        </trans-unit>
        <trans-unit id="9cac0f4335385347033e4ff1ace89bef3cefcb8a" translate="yes" xml:space="preserve">
          <source>Ways to contribute</source>
          <target state="translated">貢献する方法</target>
        </trans-unit>
        <trans-unit id="6a4f98af4fb30ff252d04a1e1d08e48e8d6067cb" translate="yes" xml:space="preserve">
          <source>We can now use the tag block anywhere:</source>
          <target state="translated">タグブロックをどこでも使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="cefa7e66da160b37c7184b5c6ec0e86e3eb69d9b" translate="yes" xml:space="preserve">
          <source>We dropped a number of dependencies the Core Team felt were optional. As such, in 3.0, they must be explicitly installed and included if you use any of the features. They are:</source>
          <target state="translated">コアチームがオプションであると感じた依存関係をいくつか削除しました。そのため、3.0 では、これらの機能を使用する場合は、明示的にインストールしてインクルードしなければなりません。それらは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2b23d8741df88636c34f34918f6255a42821035f" translate="yes" xml:space="preserve">
          <source>We have guides for the following providers:</source>
          <target state="translated">以下のプロバイダのガイドがあります。</target>
        </trans-unit>
        <trans-unit id="4dcb4cdb60dc66a83cb696d744cd54e4c7fe55de" translate="yes" xml:space="preserve">
          <source>We only cover RubyInstaller-2.4 and newer here. Older versions need to &lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;install the Devkit&lt;/a&gt; manually.</source>
          <target state="translated">ここでは、RubyInstaller-2.4以降についてのみ説明します。古いバージョンでは&lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;、Devkitを&lt;/a&gt;手動でインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="8d69d3de6d3a6f247a56f0181652ed1638539a8e" translate="yes" xml:space="preserve">
          <source>We provide by default &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; response headers: one dynamic in order to specify the nature of the data being served, the other static in order to disable caching so that you don&amp;rsquo;t have to fight with Chrome&amp;rsquo;s aggressive caching when you are in development mode.</source>
          <target state="translated">デフォルトで &lt;code&gt;Content-Type&lt;/code&gt; および &lt;code&gt;Cache-Control&lt;/code&gt; 応答ヘッダーを提供します。1つは提供されるデータの性質を指定するための動的なもので、もう1つはキャッシュを無効にするために静的なものです。開発モードです。</target>
        </trans-unit>
        <trans-unit id="ae11c504dc21d560124712f5712708ce6e35bc7f" translate="yes" xml:space="preserve">
          <source>We recommend not installing Ruby gems globally to avoid file permissions problems and using &lt;code&gt;sudo&lt;/code&gt;.</source>
          <target state="translated">ファイルパーミッションの問題を回避し、 &lt;code&gt;sudo&lt;/code&gt; を使用するために、Rubygemをグローバルにインストールしないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="e10df18265ed8f7be61a257bdb224ce75b623cbd" translate="yes" xml:space="preserve">
          <source>We recommend setting up Jekyll with a gem-based theme but if you want to start with a blank slate, use &lt;code&gt;jekyll new myblog --blank&lt;/code&gt;</source>
          <target state="translated">宝石ベースのテーマでJekyllを設定することをお勧めしますが、白紙の状態から始めたい場合は、 &lt;code&gt;jekyll new myblog --blank&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="1cd12ae19e173939471176fb1023207de0f2820d" translate="yes" xml:space="preserve">
          <source>We recommend using a &lt;a href=&quot;../../ruby-101/index#gems&quot;&gt;gem&lt;/a&gt; for your plugin. This will help you manage dependencies, keep separation from your site source code and allow you to share functionality across multiple projects. For tips on creating a gem take a look at the &lt;a href=&quot;https://guides.rubygems.org/make-your-own-gem/&quot;&gt;Ruby gems guide&lt;/a&gt; or look through the source code of an existing plugin such as &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;.</source>
          <target state="translated">プラグインには&lt;a href=&quot;../../ruby-101/index#gems&quot;&gt;gem&lt;/a&gt;を使用することをお勧めします。これにより、依存関係を管理し、サイトのソースコードから分離し、複数のプロジェクト間で機能を共有できるようになります。gemを作成するためのヒントについては、&lt;a href=&quot;https://guides.rubygems.org/make-your-own-gem/&quot;&gt;Ruby gemsガイドを&lt;/a&gt;参照するか、&lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;などの既存のプラグインのソースコードを確認してください。</target>
        </trans-unit>
        <trans-unit id="35820cc552574c444b93df92294456e721d3748e" translate="yes" xml:space="preserve">
          <source>We set a reference to a secret &lt;strong&gt;environment variable&lt;/strong&gt; for the action to use. The &lt;code&gt;JEKYLL_PAT&lt;/code&gt; is a &lt;em&gt;Personal Access Token&lt;/em&gt; and is detailed in the next section.</source>
          <target state="translated">アクションが使用する秘密の&lt;strong&gt;環境変数&lt;/strong&gt;への参照を設定します。 &lt;code&gt;JEKYLL_PAT&lt;/code&gt; は、ある&lt;em&gt;個人のアクセストークン&lt;/em&gt;と、次のセクションで詳述されています。</target>
        </trans-unit>
        <trans-unit id="9f923618ab558ad434c18020017f4592de3b14af" translate="yes" xml:space="preserve">
          <source>We specify our selected &lt;strong&gt;action&lt;/strong&gt; and &lt;strong&gt;version number&lt;/strong&gt; using &lt;code&gt;helaili/jekyll-action@2.0.0&lt;/code&gt;. This handles the build and deploy.</source>
          <target state="translated">&lt;code&gt;helaili/jekyll-action@2.0.0&lt;/code&gt; を使用して、選択した&lt;strong&gt;アクション&lt;/strong&gt;と&lt;strong&gt;バージョン番号&lt;/strong&gt;を指定します。これにより、ビルドとデプロイが処理されます。</target>
        </trans-unit>
        <trans-unit id="948c32bf8e2ded54c25b335c57444b1655ee8e7e" translate="yes" xml:space="preserve">
          <source>We therefore recommend that you lock the Timezone library to version 1.2 and above by listing &lt;code&gt;gem 'tzinfo', '~&amp;gt; 1.2'&lt;/code&gt; in your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">したがって、 &lt;code&gt;Gemfile&lt;/code&gt; にgem'tzinfo &lt;code&gt;gem 'tzinfo', '~&amp;gt; 1.2'&lt;/code&gt; をリストして、タイムゾーンライブラリをバージョン1.2以降にロックすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="fa5ea83ac7eb86b707e0b11cc6e710f95b869c06" translate="yes" xml:space="preserve">
          <source>We trigger the build using &lt;strong&gt;on.push&lt;/strong&gt; condition for &lt;code&gt;master&lt;/code&gt; branch only &amp;mdash; this prevents the Action from overwriting the &lt;code&gt;gh-pages&lt;/code&gt; branch on any feature branch pushes.</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; ブランチに対してのみ&lt;strong&gt;on.push&lt;/strong&gt;条件を使用してビルドをトリガーします。これにより、アクションが機能ブランチのプッシュで &lt;code&gt;gh-pages&lt;/code&gt; ブランチを上書きするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="04230319e799b4b7634c53f6342e7d1f25c1085d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re only going to cover builds from the &lt;code&gt;master&lt;/code&gt; branch in this page. Therefore, ensure that you are working on the &lt;code&gt;master&lt;/code&gt; branch. If necessary, you may create it based on your default branch. When the Action builds your site, the contents of the &lt;em&gt;destination&lt;/em&gt; directory will be automatically pushed to the &lt;code&gt;gh-pages&lt;/code&gt; branch with a commit, ready to be used for serving.</source>
          <target state="translated">このページでは、 &lt;code&gt;master&lt;/code&gt; ブランチからのビルドについてのみ説明します。したがって、 &lt;code&gt;master&lt;/code&gt; ブランチで作業していることを確認してください。必要に応じて、デフォルトのブランチに基づいて作成できます。アクションがサイトを構築すると、&lt;em&gt;宛先&lt;/em&gt;ディレクトリのコンテンツがコミットによって &lt;code&gt;gh-pages&lt;/code&gt; ブランチに自動的にプッシュされ、サービスに使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="2eecab45e4680a2e5fe45a12fabd0145ca94a30f" translate="yes" xml:space="preserve">
          <source>Web Highlights and Commenting</source>
          <target state="translated">ウェブハイライトとコメント</target>
        </trans-unit>
        <trans-unit id="47075c402c12714ce67f56fada2c3e3334569ed7" translate="yes" xml:space="preserve">
          <source>Web hosting providers (FTP)</source>
          <target state="translated">ウェブホスティングプロバイダ(FTP</target>
        </trans-unit>
        <trans-unit id="3a84cd95d350a2cd018ef0ac31dbcbb8fa5c9d95" translate="yes" xml:space="preserve">
          <source>Webrick Options</source>
          <target state="translated">ウェブリックオプション</target>
        </trans-unit>
        <trans-unit id="e7a0f79eba6367fb8543ea0774f58202409c063a" translate="yes" xml:space="preserve">
          <source>Websites typically have more than one page and this website is no different.</source>
          <target state="translated">ウェブサイトは通常、複数のページを持っており、このウェブサイトも同様です。</target>
        </trans-unit>
        <trans-unit id="25306ae824acd62940d7172a43c23dd5d82e7564" translate="yes" xml:space="preserve">
          <source>Week number of the current year, starting with the first week having a majority of its days in January. (01..53)</source>
          <target state="translated">1月に日数の大半を占める第1週から始まる、今年の週番号。(01..53)</target>
        </trans-unit>
        <trans-unit id="addfad4fb9c8675984502d4cc1fcc31033a96024" translate="yes" xml:space="preserve">
          <source>Week year which may differ from the month year for up to three days at the start of January and end of December</source>
          <target state="translated">1月初旬と12月末の3日間までは、月の年とは異なる週の年になります。</target>
        </trans-unit>
        <trans-unit id="b796e511cedcd28aa0b8b8ca379a22d28e0f577f" translate="yes" xml:space="preserve">
          <source>Weekday name, e.g. &amp;ldquo;Sunday&amp;rdquo;.</source>
          <target state="translated">平日の名前、例：「日曜日」。</target>
        </trans-unit>
        <trans-unit id="17a1bad11ba6f9434432f76d5e9191ee1d5969ce" translate="yes" xml:space="preserve">
          <source>Welcome to Jekyll&amp;rsquo;s step-by-step tutorial. The goal of this tutorial is to take you from having some front end web development experience to building your first Jekyll site from scratch &amp;mdash; not relying on the default gem-based theme. Let&amp;rsquo;s get into it!</source>
          <target state="translated">ジキルのステップバイステップのチュートリアルへようこそ。このチュートリアルの目標は、フロントエンドのWeb開発経験から、デフォルトのgemベースのテーマに依存せずに最初のJekyllサイトを最初から構築することです。入りましょう！</target>
        </trans-unit>
        <trans-unit id="ae0403eb1636e9aa7d2ce698039ed9375330ca46" translate="yes" xml:space="preserve">
          <source>Well, you might be thinking what&amp;rsquo;s the point in this? Jekyll just copied an HTML file from one place to another. Well patience young grasshopper, there&amp;rsquo;s still much to learn!</source>
          <target state="translated">さて、あなたはこれのポイントが何であるかを考えているかもしれませんか？Jekyllは、HTMLファイルをある場所から別の場所にコピーしただけです。若いバッタの忍耐力、学ぶことはまだたくさんあります！</target>
        </trans-unit>
        <trans-unit id="980308e87afb05544ddaec2b4a788a2948d43ef8" translate="yes" xml:space="preserve">
          <source>Well-formatted site data should be placed here. The Jekyll engine will autoload all data files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.csv&lt;/code&gt; formats and extensions) in this directory, and they will be accessible via `site.data`. If there's a file &lt;code&gt;members.yml&lt;/code&gt; under the directory, then you can access contents of the file through &lt;code&gt;site.data.members&lt;/code&gt;.</source>
          <target state="translated">適切にフォーマットされたサイトデータをここに配置する必要があります。Jekyllエンジンはこのディレクトリ内のすべてのデータファイルを（ &lt;code&gt;.yml&lt;/code&gt; 、 &lt;code&gt;.yaml&lt;/code&gt; 、 &lt;code&gt;.json&lt;/code&gt; または &lt;code&gt;.csv&lt;/code&gt; 形式および拡張子を使用して）自動ロードし、 `site.data`からアクセスできます。ディレクトリの下にファイル &lt;code&gt;members.yml&lt;/code&gt; がある場合は、 &lt;code&gt;site.data.members&lt;/code&gt; を介してファイルのコンテンツにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="4cedca2f26185c43e3c27aaa5fabb27a2407c21e" translate="yes" xml:space="preserve">
          <source>Well-formatted site data should be placed here. The Jekyll engine will autoload all data files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt; or &lt;code&gt;.tsv&lt;/code&gt; formats and extensions) in this directory, and they will be accessible via `site.data`. If there's a file &lt;code&gt;members.yml&lt;/code&gt; under the directory, then you can access contents of the file through &lt;code&gt;site.data.members&lt;/code&gt;.</source>
          <target state="translated">適切にフォーマットされたサイトデータをここに配置する必要があります。Jekyllエンジンは、このディレクトリ内のすべてのデータファイル（ &lt;code&gt;.yml&lt;/code&gt; 、 &lt;code&gt;.yaml&lt;/code&gt; 、 &lt;code&gt;.json&lt;/code&gt; 、 &lt;code&gt;.csv&lt;/code&gt; 、または &lt;code&gt;.tsv&lt;/code&gt; の形式と拡張子のいずれかを使用）を自動ロードし、`site.data`からアクセスできます。ディレクトリの下にファイル &lt;code&gt;members.yml&lt;/code&gt; がある場合は、 &lt;code&gt;site.data.members&lt;/code&gt; を介してファイルのコンテンツにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="91eaf68e03a6c191061f2090716186f4883c78fd" translate="yes" xml:space="preserve">
          <source>What good is a site without CSS, JS and images? Let&amp;rsquo;s look at how to handle assets in Jekyll.</source>
          <target state="translated">CSS、JS、画像のないサイトは何が良いのでしょうか？Jekyllでアセットを処理する方法を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="da39f47f768ba52a2bcd28c7777dbe5d4d15b183" translate="yes" xml:space="preserve">
          <source>What you really want is all posts to automatically have the post layout, authors to have author and everything else to use the default.</source>
          <target state="translated">あなたが本当にしたいことは、すべての投稿が自動的に投稿レイアウトを持つように、著者が著者を持つように、他のすべてのデフォルトを使用することです。</target>
        </trans-unit>
        <trans-unit id="f73d2936317cc37c4cceb0d36dd88cb7424d5243" translate="yes" xml:space="preserve">
          <source>When building a Jekyll site with GitHub Pages, the standard flow is restricted for security reasons and to make it simpler to get a site setup. For more control over the build and still host the site with GitHub Pages you can use GitHub Actions.</source>
          <target state="translated">GitHub Pages を使って Jekyll サイトを構築する場合、セキュリティ上の理由と、サイトの設定をより簡単にするために標準的なフローは制限されています。GitHub Pages でサイトをホストしたままビルドをコントロールしたい場合は、GitHub Actions を使うことができます。</target>
        </trans-unit>
        <trans-unit id="80146c90bf534f404cbcca39a705ff308cd9603a" translate="yes" xml:space="preserve">
          <source>When clobbering the site destination, keep the selected files. Useful for files that are not generated by jekyll; e.g. files or assets that are generated by your build tool. The paths are relative to the &lt;code&gt;destination&lt;/code&gt;.</source>
          <target state="translated">サイトの宛先を破壊するとき、選択したファイルを保持します。jekyllによって生成されないファイルに役立ちます。たとえば、ビルドツールによって生成されたファイルまたはアセット。パスは、 &lt;code&gt;destination&lt;/code&gt; からの相対パスです。</target>
        </trans-unit>
        <trans-unit id="06db13ac5af83acf0a3ee837b96bd6d3d27f5812" translate="yes" xml:space="preserve">
          <source>When defining a collection as a sequence, its pages will not be rendered by default. To enable this, &lt;code&gt;output: true&lt;/code&gt; must be specified on the collection, which requires defining the collection as a mapping. For more information, see the section &lt;a href=&quot;#output&quot;&gt;Output&lt;/a&gt;.</source>
          <target state="translated">コレクションをシーケンスとして定義する場合、そのページはデフォルトではレンダリングされません。これを有効にするには、コレクションで &lt;code&gt;output: true&lt;/code&gt; 指定する必要があります。これには、コレクションをマッピングとして定義する必要があります。詳細については、「&lt;a href=&quot;#output&quot;&gt;出力」&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="511ab2511b4a26fb49efb7fd75f66c53fbd12336" translate="yes" xml:space="preserve">
          <source>When in doubt, use the &lt;code&gt;help&lt;/code&gt; command to remind you of all available options and usage, it also works with the &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;serve&lt;/code&gt; subcommands, e.g. &lt;code&gt;jekyll help new&lt;/code&gt; or &lt;code&gt;jekyll help build&lt;/code&gt;.</source>
          <target state="translated">疑問がある場合は、 &lt;code&gt;help&lt;/code&gt; コマンドを使用して、使用可能なすべてのオプションと使用法を思い出させます。これは、 &lt;code&gt;new&lt;/code&gt; 、 &lt;code&gt;build&lt;/code&gt; 、 &lt;code&gt;serve&lt;/code&gt; のサブコマンドでも機能し &lt;code&gt;jekyll help new&lt;/code&gt; （例：jekyll help newまたは &lt;code&gt;jekyll help build&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="29d6bbd092c16b7b59ba615fb067b4407d968604" translate="yes" xml:space="preserve">
          <source>When iterating over &lt;code&gt;site.collections&lt;/code&gt;, ensure the above conversions are made.</source>
          <target state="translated">&lt;code&gt;site.collections&lt;/code&gt; を反復する場合は、上記の変換が行われていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="22508846b6a1cb2d937ae48a90925816dbb3e151" translate="yes" xml:space="preserve">
          <source>When testing Jekyll output, there is no better tool than &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;html-proofer&lt;/a&gt;. This tool checks your resulting site to ensure all links and images exist. Utilize it either with the convenient &lt;code&gt;htmlproofer&lt;/code&gt; command-line executable, or write a Ruby script which utilizes the gem.</source>
          <target state="translated">Jekyll出力をテストする場合、&lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;html-proofer&lt;/a&gt;より優れたツールはありません。このツールは、結果のサイトをチェックして、すべてのリンクと画像が存在することを確認します。便利な &lt;code&gt;htmlproofer&lt;/code&gt; コマンドライン実行可能ファイルで使用するか、gemを使用するRubyスクリプトを記述します。</target>
        </trans-unit>
        <trans-unit id="fb275a8b3cfd1d753bd1667feefec8892bb4514c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;paginate&lt;/code&gt; configuration option is set, this variable becomes available for use. See &lt;a href=&quot;../pagination/index&quot;&gt;Pagination&lt;/a&gt; for details.</source>
          <target state="translated">とき &lt;code&gt;paginate&lt;/code&gt; 設定オプションが設定され、この変数が使用可能になります。詳細については、&lt;a href=&quot;../pagination/index&quot;&gt;ページネーション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b344ca986126fc44114e9e1effa19fd933090858" translate="yes" xml:space="preserve">
          <source>When the post also has front matter defining categories, they just get added to the existing list if not present already.</source>
          <target state="translated">ポストはまた、カテゴリを定義するフロントマターを持っている場合、彼らはちょうど既存のリストに追加されていない場合は、すでに存在しています。</target>
        </trans-unit>
        <trans-unit id="da9bd96af19e123004b9a8f8045d7bf80619d81a" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;Gemfile&lt;/code&gt;, you&amp;rsquo;ll run commands like &lt;code&gt;jekyll serve&lt;/code&gt; with &lt;code&gt;bundle exec&lt;/code&gt; prefixed. So the full command is:</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; を使用する場合は、 &lt;code&gt;bundle exec&lt;/code&gt; プレフィックスを付けて &lt;code&gt;jekyll serve&lt;/code&gt; などのコマンドを実行します。したがって、完全なコマンドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ac395ac35aa9cdc1eb5a47dcfe755d72e055949c" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;../quickstart/index&quot;&gt;create a new Jekyll site&lt;/a&gt; (by running the &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command), Jekyll installs a site that uses a gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;.</source>
          <target state="translated">（ &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; コマンドを実行して）&lt;a href=&quot;../quickstart/index&quot;&gt;新しいJekyllサイト&lt;/a&gt;を作成すると、Jekyllは&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;と呼ばれるgemベースのテーマを使用するサイトをインストールします。</target>
        </trans-unit>
        <trans-unit id="8cda456eac3fbc0782231e76fc8eec560224f7ae" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;create a new Jekyll site&lt;/a&gt; (by running the &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command), Jekyll installs a site that uses a gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;.</source>
          <target state="translated">（ &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; コマンドを実行して）&lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;新しいJekyllサイト&lt;/a&gt;を作成すると、Jekyllは&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;と呼ばれるgemベースのテーマを使用するサイトをインストールします。</target>
        </trans-unit>
        <trans-unit id="9ccfe859da19cf52b245179240d09cd018bb7c6f" translate="yes" xml:space="preserve">
          <source>When you build your Jekyll site, the content inside the &lt;code&gt;if&lt;/code&gt; statement won&amp;rsquo;t be run unless you also specify a &lt;code&gt;production&lt;/code&gt; environment in the build command, like this:</source>
          <target state="translated">Jekyllサイトを構築すると、次のように、ビルドコマンドで &lt;code&gt;production&lt;/code&gt; 環境も指定しない限り、 &lt;code&gt;if&lt;/code&gt; ステートメント内のコンテンツは実行されません。</target>
        </trans-unit>
        <trans-unit id="c23148ce9285228600ad471f3d4e39ae13628b81" translate="yes" xml:space="preserve">
          <source>When you build your site, the output will list the path to each file that meets this front matter condition.</source>
          <target state="translated">サイトを構築すると、このフロントマターの条件を満たす各ファイルのパスが出力されます。</target>
        </trans-unit>
        <trans-unit id="8c0134a9152ae69e70fa14c3621e1945a48ed65d" translate="yes" xml:space="preserve">
          <source>When you need to make further &lt;strong&gt;changes&lt;/strong&gt; to the site, commit to &lt;code&gt;master&lt;/code&gt; and push. The workflow will build and deploy your site again.</source>
          <target state="translated">サイトにさらに&lt;strong&gt;変更&lt;/strong&gt;を&lt;strong&gt;加える&lt;/strong&gt;必要がある場合は、 &lt;code&gt;master&lt;/code&gt; にコミットしてプッシュします。ワークフローにより、サイトが再度構築および展開されます。</target>
        </trans-unit>
        <trans-unit id="2cde9bb2daf5153fc9fad0fee6b617f798c1ac30" translate="yes" xml:space="preserve">
          <source>When you put it all together, here&amp;rsquo;s an example of what that &lt;code&gt;circle.yml&lt;/code&gt; file could look like:</source>
          <target state="translated">すべてをまとめると、次の例は、 &lt;code&gt;circle.yml&lt;/code&gt; ファイルがどのようになるかを示しています。</target>
        </trans-unit>
        <trans-unit id="a1f521902a51cc660eaec48967b221be52eed00a" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;bundle exec jekyll serve&lt;/code&gt;, Bundler uses the gems and versions as specified in &lt;code&gt;Gemfile.lock&lt;/code&gt; to ensure your Jekyll site builds with no compatibility or dependency conflicts.</source>
          <target state="translated">&lt;code&gt;bundle exec jekyll serve&lt;/code&gt; を実行すると、Bundlerは &lt;code&gt;Gemfile.lock&lt;/code&gt; で指定されたgemとバージョンを使用して、互換性や依存関係の競合なしでJekyllサイトを構築できるようにします。</target>
        </trans-unit>
        <trans-unit id="441328feebf34856315bb030d27ac9484dd434bc" translate="yes" xml:space="preserve">
          <source>When you use permalinks that omit the &lt;code&gt;.html&lt;/code&gt; file extension (called &amp;ldquo;pretty URLs&amp;rdquo;) Jekyll builds the file as index.html placed inside a folder with the page&amp;rsquo;s name. For example:</source>
          <target state="translated">&lt;code&gt;.html&lt;/code&gt; ファイル拡張子を省略したパーマリンク（「きれいなURL」と呼ばれます）を使用すると、Jekyllは、ページの名前が付いたフォルダー内に配置されたindex.htmlとしてファイルを作成します。例えば：</target>
        </trans-unit>
        <trans-unit id="2813d904e6820ab26a73500a2367ce6371fbf82c" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re developing a site you&amp;rsquo;ll use &lt;code&gt;jekyll serve&lt;/code&gt; as it updates with any changes you make.</source>
          <target state="translated">サイトを開発するときは、変更を加えると更新されるため、 &lt;code&gt;jekyll serve&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="f479ef76acc86e429fb88fb9b4356d7e8e983548" translate="yes" xml:space="preserve">
          <source>Whenever a document is initialized</source>
          <target state="translated">文書が初期化されるたびに</target>
        </trans-unit>
        <trans-unit id="8081ac9790139a21f050562bbe6b235fb79b4596" translate="yes" xml:space="preserve">
          <source>Whenever a page is initialized</source>
          <target state="translated">ページが初期化されるたびに</target>
        </trans-unit>
        <trans-unit id="51c907dd080b0217c67de1be8f88eecf312bf8a4" translate="yes" xml:space="preserve">
          <source>Whenever a post is initialized</source>
          <target state="translated">投稿が初期化されるたびに</target>
        </trans-unit>
        <trans-unit id="76d18d3961e4f460f772931459f68fe4a297bec9" translate="yes" xml:space="preserve">
          <source>Whenever any document is initialized</source>
          <target state="translated">任意のドキュメントが初期化されるたびに</target>
        </trans-unit>
        <trans-unit id="8216ae1dacc9e51900d62b76062267f3c0b7edbd" translate="yes" xml:space="preserve">
          <source>Whenever you make a push to the selected branch, the Jekyll action runs &lt;code&gt;jekyll build&lt;/code&gt; in an isolated &lt;a href=&quot;https://hub.docker.com/r/jekyll/jekyll/&quot;&gt;Jekyll Docker image&lt;/a&gt;. The output is generated to the &lt;code&gt;/filesystem&lt;/code&gt; directory, and can be further deployed to FTP/SFTP and IaaS services. You can add your own commands, install additional packages, attach services, and run Selenium tests, as well as add other actions down the pipeline, eg. a Slack notification or an SSH script that will restart your server.</source>
          <target state="translated">選択したブランチにプッシュするたびに、Jekyllアクションは、分離された&lt;a href=&quot;https://hub.docker.com/r/jekyll/jekyll/&quot;&gt;Jekyll Dockerイメージ&lt;/a&gt;で &lt;code&gt;jekyll build&lt;/code&gt; を実行します。出力は &lt;code&gt;/filesystem&lt;/code&gt; ディレクトリに生成され、FTP / SFTPおよびIaaSサービスにさらに展開できます。独自のコマンドを追加したり、追加のパッケージをインストールしたり、サービスをアタッチしたり、Seleniumテストを実行したり、パイプラインに他のアクションを追加したりできます。サーバーを再起動するSlack通知またはSSHスクリプト。</target>
        </trans-unit>
        <trans-unit id="08df7cfb0e0229b0df3367bf88f0e7ead836d7f3" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code&gt;MONTH&lt;/code&gt; and &lt;code&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. For example, the following are examples of valid post filenames:</source>
          <target state="translated">ここで、 &lt;code&gt;YEAR&lt;/code&gt; 4桁の数字であり、 &lt;code&gt;MONTH&lt;/code&gt; と &lt;code&gt;DAY&lt;/code&gt; の両方の2桁の数字であり、 &lt;code&gt;MARKUP&lt;/code&gt; ファイルで使用されるフォーマットを表すファイル拡張子です。たとえば、以下は有効な投稿ファイル名の例です。</target>
        </trans-unit>
        <trans-unit id="668b3e4a4eeb346dd008cff0647843e835a6a66b" translate="yes" xml:space="preserve">
          <source>Where additional pages live</source>
          <target state="translated">追加ページがある場所</target>
        </trans-unit>
        <trans-unit id="e22ce535ba1a8a0bd12250f79dccc9d80cd5e88f" translate="yes" xml:space="preserve">
          <source>Where to configure permalinks</source>
          <target state="translated">パーマリンクを設定する場所</target>
        </trans-unit>
        <trans-unit id="10cce413a3074bd9adb07a3ef0c3cd59e668f9ac" translate="yes" xml:space="preserve">
          <source>Where to get support</source>
          <target state="translated">サポートを受ける場所</target>
        </trans-unit>
        <trans-unit id="ee79505e4e1d36592db9ca9457edb23caf0a92ba" translate="yes" xml:space="preserve">
          <source>Where you put HTML or &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; files for pages depends on how you want the pages to work. There are two main ways of creating pages:</source>
          <target state="translated">HTMLまたは&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;ファイルをページに配置する場所は、ページの動作方法によって異なります。ページを作成するには、主に2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="d6e1291771b9d018237e61708207f21da5065c7b" translate="yes" xml:space="preserve">
          <source>Whether the collection's documents will be output as individual files.</source>
          <target state="translated">コレクションのドキュメントを個別のファイルとして出力するかどうか。</target>
        </trans-unit>
        <trans-unit id="f4ffdbbff2307b66c3406f857fc79ddb4961a69e" translate="yes" xml:space="preserve">
          <source>While &amp;lsquo;new&amp;rsquo; blogs created with Jekyll v3.4 and greater, will have the following added to their &lt;code&gt;Gemfile&lt;/code&gt; by default, existing sites &lt;em&gt;will&lt;/em&gt; have to update their &lt;code&gt;Gemfile&lt;/code&gt; (and installed gems) to enable development on Windows:</source>
          <target state="translated">Jekyll v3.4以降で作成された「新しい」ブログでは、デフォルトで以下が &lt;code&gt;Gemfile&lt;/code&gt; に追加されますが、既存のサイトで&lt;em&gt;は&lt;/em&gt;、Windowsでの開発を有効にするために &lt;code&gt;Gemfile&lt;/code&gt; （およびインストールされたgem）を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="a699c08ab3080c1690453950753f5effb82fdcf1" translate="yes" xml:space="preserve">
          <source>While Windows is not an officially-supported platform, it can be used to run Jekyll with the proper tweaks.</source>
          <target state="translated">Windowsは公式にサポートされているプラットフォームではありませんが、適切な調整を行えばJekyllを実行することができます。</target>
        </trans-unit>
        <trans-unit id="1d293d415ea6147ac5d7200c4f733da5bae41bd6" translate="yes" xml:space="preserve">
          <source>While Windows is not an officially-supported platform, it can be used to run Jekyll with the proper tweaks. This page aims to collect some of the general knowledge and lessons that have been unearthed by Windows users.</source>
          <target state="translated">Windowsは公式にサポートされているプラットフォームではありませんが、適切な調整を行えばJekyllを動作させることができます。このページでは、Windowsユーザーが発掘した一般的な知識や教訓の一部を収集することを目的としています。</target>
        </trans-unit>
        <trans-unit id="3eb7e129466b1ad3b274d794ab122caea7f6f433" translate="yes" xml:space="preserve">
          <source>While Windows is not officially supported, it is possible to get Jekyll running on Windows. Special instructions can be found on our &lt;a href=&quot;../windows/index#installation&quot;&gt;Windows-specific docs page&lt;/a&gt;.</source>
          <target state="translated">Windowsは公式にはサポートされていませんが、JekyllをWindowsで実行することは可能です。&lt;a href=&quot;../windows/index#installation&quot;&gt;Windows固有のドキュメントページに&lt;/a&gt;特別な手順があります。</target>
        </trans-unit>
        <trans-unit id="7e8914b7deeddfa53fc6dcacbc6b3450881e967d" translate="yes" xml:space="preserve">
          <source>While Windows is not officially supported, it is possible to install the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows. Special instructions can be found on our &lt;a href=&quot;../installation/windows/index&quot;&gt;Windows-specific docs page&lt;/a&gt;.</source>
          <target state="translated">Windowsは公式にはサポートされていませんが、Windowsに &lt;code&gt;github-pages&lt;/code&gt; gemをインストールすることは可能です。特別な手順は、&lt;a href=&quot;../installation/windows/index&quot;&gt;Windows固有のドキュメントページにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e399b54f2e7424a4e1d4d33fb7af1ecc630310dd" translate="yes" xml:space="preserve">
          <source>While Windows is not officially supported, it is possible to install the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows. Special instructions can be found on our &lt;a href=&quot;../windows/index#installation&quot;&gt;Windows-specific docs page&lt;/a&gt;.</source>
          <target state="translated">Windowsは公式にはサポートされていませんが、 &lt;code&gt;github-pages&lt;/code&gt; gemをWindows にインストールすることは可能です。&lt;a href=&quot;../windows/index#installation&quot;&gt;Windows固有のドキュメントページに&lt;/a&gt;特別な手順があります。</target>
        </trans-unit>
        <trans-unit id="2e9e68bbbf896adad3c499f6d456ec3681451ddb" translate="yes" xml:space="preserve">
          <source>While incremental regeneration will work for the most common cases, it will not work correctly in every scenario. Please be extremely cautious when using the feature, and report any problems not listed below by &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;opening an issue on GitHub&lt;/a&gt;.</source>
          <target state="translated">増分再生成は最も一般的なケースで機能しますが、すべてのシナリオで正しく機能するとは限りません。この機能を使用する際は十分に注意し、&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;GitHubで問題を開いて、&lt;/a&gt;以下にリストされていない問題を報告してください。</target>
        </trans-unit>
        <trans-unit id="b310273b3964c61a6d5fbeb35c859d684748bb16" translate="yes" xml:space="preserve">
          <source>While the phases above are self-explanatory, the one phase that warrants dissection is &lt;em&gt;the rendering phase&lt;/em&gt;.</source>
          <target state="translated">上記のフェーズは自明ですが&lt;em&gt;、&lt;/em&gt;解剖を正当化する1つのフェーズ&lt;em&gt;はレンダリングフェーズ&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="184160eec41156b6ae73a5805dbb67ab7097076b" translate="yes" xml:space="preserve">
          <source>While this example is done with categories, you can easily extend your lists to filter by tags or any other variable created with extensions.</source>
          <target state="translated">この例ではカテゴリを使っていますが、リストを拡張してタグや拡張機能で作成した他の変数でフィルタリングすることも簡単にできます。</target>
        </trans-unit>
        <trans-unit id="1a1049e528b37461ee45558fbd7db1a9192c435f" translate="yes" xml:space="preserve">
          <source>While this feature is to enable easier adoption of a theme, the restrictions ensure that a theme-config cannot affect the build in a concerning manner. Any plugins required by the theme will have to be listed manually by the user or provided by the theme&amp;rsquo;s &lt;code&gt;gemspec&lt;/code&gt; file.</source>
          <target state="translated">この機能はテーマの採用を容易にするためのものですが、制限により、theme-configがビルドに懸念を与えるような影響を与えることはありません。テーマに必要なプラグインは、ユーザーが手動でリストするか、テーマの &lt;code&gt;gemspec&lt;/code&gt; ファイルで提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="403a4bb7ad68ae21c74bcd157e5bf99e7b03e37c" translate="yes" xml:space="preserve">
          <source>While you can configure the directory name in which your layouts can reside by setting the &lt;code&gt;layouts_dir&lt;/code&gt; key in your config file, the directory itself should be located at the root of your site's &lt;code&gt;source&lt;/code&gt; directory.</source>
          <target state="translated">構成ファイルで &lt;code&gt;layouts_dir&lt;/code&gt; キーを設定することで、レイアウトが存在できるディレクトリ名を構成できますが、ディレクトリ自体は、サイトの &lt;code&gt;source&lt;/code&gt; ディレクトリのルートに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="b81a77b2ba4a8e2bf8f4af838472725af20456f2" translate="yes" xml:space="preserve">
          <source>While you don&amp;rsquo;t have to use &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt;, it is highly recommended as it ensures you&amp;rsquo;re running the same version of Jekyll and its plugins across different environments.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; と &lt;code&gt;bundler&lt;/code&gt; を使用する必要はありませんが、異なる環境で同じバージョンのJekyllとそのプラグインを実行できるようにするため、強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="909520594dc6baa6f3e34de676c22d935ae3c443" translate="yes" xml:space="preserve">
          <source>With Homebrew</source>
          <target state="translated">自家製</target>
        </trans-unit>
        <trans-unit id="e3cc716e8a2cab075ae8f8c3a119c8a34ec49a24" translate="yes" xml:space="preserve">
          <source>With Ruby setup you can install Jekyll by running the following in your terminal:</source>
          <target state="translated">Rubyの設定があれば、ターミナルで以下を実行することでJekyllをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="51a443a53049d68b8cd0ab3ab0e48b86621b3ded" translate="yes" xml:space="preserve">
          <source>With a URL such as &lt;code&gt;/mypageurl/&lt;/code&gt;, servers automatically load the index.html file inside the folder, so users can simply navigate to &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt; to get to &lt;code&gt;mypageurl/index.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/mypageurl/&lt;/code&gt; などのURLを使用すると、サーバーはフォルダ内のindex.htmlファイルを自動的にロードするため、ユーザーは &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt; に移動して &lt;code&gt;mypageurl/index.html&lt;/code&gt; にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f958238187c3b5c4cdd931995cbe45869daa06c7" translate="yes" xml:space="preserve">
          <source>With a clear understanding of the theme&amp;rsquo;s files, you can now override any theme file by creating a similarly named file in your Jekyll site directory.</source>
          <target state="translated">テーマのファイルを明確に理解したら、同様の名前のファイルをJekyllサイトディレクトリに作成して、テーマファイルをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="af04212c22613400a0848564776b8713ea75a72d" translate="yes" xml:space="preserve">
          <source>With both fenced code blocks and highlighter enabled, this will statically highlight the code; without any syntax highlighter, it will add a &lt;code&gt;class=&quot;LANGUAGE&quot;&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; element, which can be used as a hint by various JavaScript code highlighting libraries.</source>
          <target state="translated">フェンスされたコードブロックと蛍光ペンの両方を有効にすると、コードが静的に強調表示されます。シンタックスハイライターがなければ、 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 要素に &lt;code&gt;class=&quot;LANGUAGE&quot;&lt;/code&gt; 属性が追加されます。これは、さまざまなJavaScriptコードハイライトライブラリのヒントとして使用できます。</target>
        </trans-unit>
        <trans-unit id="fea314417153cec8d1cc3552baba3aba65b25e65" translate="yes" xml:space="preserve">
          <source>With gem-based themes, some of the site&amp;rsquo;s directories (such as the &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt;, and &lt;code&gt;_sass&lt;/code&gt; directories) are stored in the theme&amp;rsquo;s gem, hidden from your immediate view. Yet all of the necessary directories will be read and processed during Jekyll&amp;rsquo;s build process.</source>
          <target state="translated">gemベースのテーマでは、サイトの一部のディレクトリ（ &lt;code&gt;assets&lt;/code&gt; 、 &lt;code&gt;_layouts&lt;/code&gt; 、 &lt;code&gt;_includes&lt;/code&gt; 、 &lt;code&gt;_sass&lt;/code&gt; などのディレクトリ）はテーマのgemに保存され、すぐには見えません。しかし、必要なディレクトリはすべて、Jekyllのビルドプロセス中に読み取られて処理されます。</target>
        </trans-unit>
        <trans-unit id="4b02aff0258fac25b5a803e6b663a48c25a23509" translate="yes" xml:space="preserve">
          <source>With many websites &amp;mdash; especially blogs &amp;mdash; it&amp;rsquo;s very common to break the main listing of posts up into smaller lists and display them over multiple pages. Jekyll offers a pagination plugin, so you can automatically generate the appropriate files and folders you need for paginated listings.</source>
          <target state="translated">多くのWebサイト（特にブログ）では、投稿のメインリストを小さなリストに分割して、複数のページに表示することが非常に一般的です。Jekyllはページネーションプラグインを提供しているため、ページネーションされたリストに必要な適切なファイルとフォルダーを自動的に生成できます。</target>
        </trans-unit>
        <trans-unit id="ce602b6aac9f60b15cc00ef55a72324eb80d74b1" translate="yes" xml:space="preserve">
          <source>With rbenv</source>
          <target state="translated">rbenvと</target>
        </trans-unit>
        <trans-unit id="81173db9469f10fbaee2b957a022941742995898" translate="yes" xml:space="preserve">
          <source>With the introduction of System Integrity Protection in v10.11, several directories that were previously writable are now considered system locations and are no longer available. Given these changes, there are a couple of simple ways to get up and running. One option is to change the location where the gem will be installed (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">v10.11でのシステム整合性保護の導入により、以前は書き込み可能であったいくつかのディレクトリがシステムの場所と見なされ、使用できなくなりました。これらの変更を考えると、起動して実行するための簡単な方法がいくつかあります。1つのオプションは、gemがインストールされる場所を変更することです（ここでも、必要な場合にのみ &lt;code&gt;sudo&lt;/code&gt; を使用します）。</target>
        </trans-unit>
        <trans-unit id="1e0e2fc5b2730c68ab3b7c95809e879c30e5bd40" translate="yes" xml:space="preserve">
          <source>With the introduction of System Integrity Protection, several directories that were previously writable are now considered system locations and are no longer available. Given these changes, there are a couple of simple ways to get up and running. One option is to change the location where the gem will be installed (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">システム整合性保護の導入により、以前は書き込み可能であったいくつかのディレクトリがシステムの場所と見なされ、使用できなくなりました。これらの変更を考慮して、起動して実行するにはいくつかの簡単な方法があります。1つのオプションは、gemがインストールされる場所を変更することです（ここでも、必要な場合にのみ &lt;code&gt;sudo&lt;/code&gt; を使用します）。</target>
        </trans-unit>
        <trans-unit id="e7d44ff64fb14b5fea5337d7a84af3ea3239c1d1" translate="yes" xml:space="preserve">
          <source>With the new subcommands, the way sites are previewed locally changed a bit. Instead of specifying &lt;code&gt;server: true&lt;/code&gt; in the site&amp;rsquo;s configuration file, use &lt;code&gt;jekyll serve&lt;/code&gt;. The same holds true for &lt;code&gt;watch: true&lt;/code&gt;. Instead, use the &lt;code&gt;--watch&lt;/code&gt; flag with either &lt;code&gt;jekyll serve&lt;/code&gt; or &lt;code&gt;jekyll build&lt;/code&gt;.</source>
          <target state="translated">新しいサブコマンドにより、サイトのプレビュー方法がローカルで少し変更されました。サイトの構成ファイルで &lt;code&gt;server: true&lt;/code&gt; を指定する代わりに、 &lt;code&gt;jekyll serve&lt;/code&gt; を使用します。同じことが &lt;code&gt;watch: true&lt;/code&gt; ます：true。代わりに、-- &lt;code&gt;--watch&lt;/code&gt; フラグを &lt;code&gt;jekyll serve&lt;/code&gt; または &lt;code&gt;jekyll build&lt;/code&gt; で使用してください。</target>
        </trans-unit>
        <trans-unit id="4a9f7d72f08ad6c94aa04de4e8c88fb0270133de" translate="yes" xml:space="preserve">
          <source>With these defaults, all pages would use the &lt;code&gt;my-site&lt;/code&gt; layout. Any html files that exist in the &lt;code&gt;projects/&lt;/code&gt; folder will use the &lt;code&gt;project&lt;/code&gt; layout, if it exists. Those files will also have the &lt;code&gt;page.author&lt;/code&gt;&lt;a href=&quot;../../variables/index&quot;&gt;liquid variable&lt;/a&gt; set to &lt;code&gt;Mr. Hyde&lt;/code&gt;.</source>
          <target state="translated">これらのデフォルトでは、すべてのページが &lt;code&gt;my-site&lt;/code&gt; レイアウトを使用します。 &lt;code&gt;projects/&lt;/code&gt; フォルダーに存在するhtmlファイルは、存在する場合は &lt;code&gt;project&lt;/code&gt; レイアウトを使用します。これらのファイルもあります &lt;code&gt;page.author&lt;/code&gt; &lt;a href=&quot;../../variables/index&quot;&gt;液体変数&lt;/a&gt;にセット &lt;code&gt;Mr. Hyde&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1505fac4e810feca59171a030c395c070950cafe" translate="yes" xml:space="preserve">
          <source>With these defaults, all pages would use the &lt;code&gt;my-site&lt;/code&gt; layout. Any html files that exist in the &lt;code&gt;projects/&lt;/code&gt; folder will use the &lt;code&gt;project&lt;/code&gt; layout, if it exists. Those files will also have the &lt;code&gt;page.author&lt;/code&gt;&lt;a href=&quot;../variables/index&quot;&gt;liquid variable&lt;/a&gt; set to &lt;code&gt;Mr. Hyde&lt;/code&gt;.</source>
          <target state="translated">これらのデフォルトでは、すべてのページで &lt;code&gt;my-site&lt;/code&gt; レイアウトが使用されます。 &lt;code&gt;projects/&lt;/code&gt; フォルダーに存在するhtmlファイルは、存在する場合、 &lt;code&gt;project&lt;/code&gt; レイアウトを使用します。これらのファイルでは、 &lt;code&gt;page.author&lt;/code&gt; &lt;a href=&quot;../variables/index&quot;&gt;液体変数が&lt;/a&gt; &lt;code&gt;Mr. Hyde&lt;/code&gt; 設定されます。</target>
        </trans-unit>
        <trans-unit id="7599ce8a6c90d8500971f9fb8824823762fc0b69" translate="yes" xml:space="preserve">
          <source>With this, the end-user need not keep track of the plugins required to be included in their config file for their theme-gem to work as intended.</source>
          <target state="translated">これにより、エンドユーザーは意図した通りに動作するために、設定ファイルに含める必要のあるプラグインを追跡する必要がありません。</target>
        </trans-unit>
        <trans-unit id="7df8e3283db3ce2ecb9d37be5216604c9595ea29" translate="yes" xml:space="preserve">
          <source>With your site built, it&amp;rsquo;s useful to run tests to check for valid HTML, broken links, etc. There&amp;rsquo;s a few tools out there but &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;HTML Proofer&lt;/a&gt; is popular amongst Jekyll users. We&amp;rsquo;ll run it in the &lt;code&gt;test&lt;/code&gt; phase with a few preferred flags. Check out the &lt;code&gt;html-proofer&lt;/code&gt;&lt;a href=&quot;https://github.com/gjtorikian/html-proofer/blob/master/README.md#configuration&quot;&gt;README&lt;/a&gt; for all available flags, or run &lt;code&gt;htmlproofer --help&lt;/code&gt; locally.</source>
          <target state="translated">サイトを構築したら、有効なHTML、リンク切れなどをチェックするテストを実行すると便利です。いくつかのツールがあり&lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;ます&lt;/a&gt;が、HTMLプルーファーはJekyllユーザーの間で人気があります。 &lt;code&gt;test&lt;/code&gt; フェーズで、いくつかの優先フラグを指定して実行します。使用可能なすべてのフラグについて &lt;code&gt;html-proofer&lt;/code&gt; &lt;code&gt;htmlproofer --help&lt;/code&gt; &lt;a href=&quot;https://github.com/gjtorikian/html-proofer/blob/master/README.md#configuration&quot;&gt;README&lt;/a&gt;を確認するか、ローカルでhtmlproofer --helpを実行してください。</target>
        </trans-unit>
        <trans-unit id="1b3734436301039905b8bae6325a85f6f78b8859" translate="yes" xml:space="preserve">
          <source>Within _config.yml, the default configuration is as follows:</source>
          <target state="translated">_config.yml内では、デフォルトの設定は以下のようになっています。</target>
        </trans-unit>
        <trans-unit id="31c38fa7e2fb7bef54ba08aae6b05715f169aea7" translate="yes" xml:space="preserve">
          <source>Workflow Management</source>
          <target state="translated">ワークフロー管理</target>
        </trans-unit>
        <trans-unit id="5cb0eada64f7af8c332f37831a994cf3cd5ad11b" translate="yes" xml:space="preserve">
          <source>Working with drafts</source>
          <target state="translated">下書きを使った作業</target>
        </trans-unit>
        <trans-unit id="a806bbdd7e50985ba93d41d5464cdb6bf1205b42" translate="yes" xml:space="preserve">
          <source>Workspace setup</source>
          <target state="translated">ワークスペースの設定</target>
        </trans-unit>
        <trans-unit id="bd3af26618234ef66e2152f29fa09590d707c55c" translate="yes" xml:space="preserve">
          <source>Wrap up</source>
          <target state="translated">ラップアップ</target>
        </trans-unit>
        <trans-unit id="0e1ba5a9ac8eaceeb32ada6c5f13d2aa2c790b00" translate="yes" xml:space="preserve">
          <source>Writing posts</source>
          <target state="translated">記事の書き方</target>
        </trans-unit>
        <trans-unit id="0320cbb9d52aaf974ff0bddf9c8b2abafbf6d58a" translate="yes" xml:space="preserve">
          <source>Year from the post&amp;rsquo;s filename with four digits. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">投稿のファイル名から4桁の年。ドキュメントの &lt;code&gt;date&lt;/code&gt; 前書きによって上書きされる場合があります。</target>
        </trans-unit>
        <trans-unit id="416768416b7ddd0c34b31be489520348396ba823" translate="yes" xml:space="preserve">
          <source>Year from the post&amp;rsquo;s filename without the century. (00..99) May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">世紀のない投稿のファイル名からの年。（00..99）ドキュメントの &lt;code&gt;date&lt;/code&gt; 前書きによって上書きされる場合があります。</target>
        </trans-unit>
        <trans-unit id="b7fcbf6928437bce09750515ec3bc51084124d74" translate="yes" xml:space="preserve">
          <source>Year from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名からの年。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="2eed5ade5ea41f8c83cf68590a70d3900db8efec" translate="yes" xml:space="preserve">
          <source>Year without the century from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名からの世紀のない年。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="8178cc8ff1dc8963a8a7af6ba39a5deafc8cb3f4" translate="yes" xml:space="preserve">
          <source>You also need a way to navigate to this page through the main navigation. Open &lt;code&gt;_data/navigation.yml&lt;/code&gt; and add an entry for the blog page:</source>
          <target state="translated">また、メインナビゲーションからこのページに移動する方法も必要です。 &lt;code&gt;_data/navigation.yml&lt;/code&gt; を開き、ブログページのエントリを追加します。</target>
        </trans-unit>
        <trans-unit id="21ff757e311e3b76b11334e3032bb1989a9a5523" translate="yes" xml:space="preserve">
          <source>You also need a way to navigate to this page through the main navigation. Open &lt;code&gt;_data/navigation.yml&lt;/code&gt; and add an entry for the staff page:</source>
          <target state="translated">また、メインナビゲーションからこのページに移動する方法も必要です。 &lt;code&gt;_data/navigation.yml&lt;/code&gt; を開き、スタッフページのエントリを追加します。</target>
        </trans-unit>
        <trans-unit id="c39e746a40de35410000b44b9534f4f070ea875e" translate="yes" xml:space="preserve">
          <source>You can access a snippet of a posts&amp;rsquo;s content by using &lt;code&gt;excerpt&lt;/code&gt; variable on a post. By default this is the first paragraph of content in the post, however it can be customized by setting a &lt;code&gt;excerpt_separator&lt;/code&gt; variable in front matter or &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">投稿の &lt;code&gt;excerpt&lt;/code&gt; 変数を使用して、投稿のコンテンツのスニペットにアクセスできます。デフォルトでは、これは投稿のコンテンツの最初の段落ですが、 &lt;code&gt;excerpt_separator&lt;/code&gt; または &lt;code&gt;_config.yml&lt;/code&gt; でexcerpt_separator変数を設定することでカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="87545853a5523384d6962f87b459eec6db2f65c8" translate="yes" xml:space="preserve">
          <source>You can achieve this by using &lt;a href=&quot;../../configuration/front-matter-defaults/index&quot;&gt;front matter defaults&lt;/a&gt; in &lt;code&gt;_config.yml&lt;/code&gt;. You set a scope of what the default applies to, then the default front matter you&amp;rsquo;d like.</source>
          <target state="translated">これは、 &lt;code&gt;_config.yml&lt;/code&gt; の&lt;a href=&quot;../../configuration/front-matter-defaults/index&quot;&gt;フロントマターのデフォルト&lt;/a&gt;を使用して実現できます。デフォルトが適用される範囲を設定してから、必要なデフォルトのフロントマターを設定します。</target>
        </trans-unit>
        <trans-unit id="3a3edc1b30fde3865f866480b4c6e06b75ee1054" translate="yes" xml:space="preserve">
          <source>You can add specific plugins to the &lt;code&gt;whitelist&lt;/code&gt; key in &lt;code&gt;_config.yml&lt;/code&gt; to allow them to run in safe mode.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; の &lt;code&gt;whitelist&lt;/code&gt; キーに特定のプラグインを追加して、セーフモードで実行できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="0d678ed42c21abec78da0d2ac1715bfc602efbc4" translate="yes" xml:space="preserve">
          <source>You can add your own filters to the Liquid template system much like you can add tags above. Filters are simply modules that export their methods to liquid. All methods will have to take at least one parameter which represents the input of the filter. The return value will be the output of the filter.</source>
          <target state="translated">上のタグを追加するのと同じように、独自のフィルターをリキッドのテンプレートシステムに追加することができます。フィルターはメソッドをリキッドにエクスポートするモジュールです。すべてのメソッドはフィルターの入力を表す少なくとも1つのパラメータを取らなければなりません。戻り値はフィルターの出力になります。</target>
        </trans-unit>
        <trans-unit id="1d4419906c82cd84bfb3719a7ba22bcc3119d1dd" translate="yes" xml:space="preserve">
          <source>You can also configure Liquid&amp;rsquo;s renderer to catch non-assigned variables and non-existing filters by setting &lt;code&gt;strict_variables&lt;/code&gt; and / or &lt;code&gt;strict_filters&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; respectively. 3.8.0</source>
          <target state="translated">&lt;code&gt;strict_variables&lt;/code&gt; および/または &lt;code&gt;strict_filters&lt;/code&gt; をそれぞれ &lt;code&gt;true&lt;/code&gt; に設定することにより、割り当てられていない変数と存在しないフィルターをキャッチするようにLiquidのレンダラーを構成することもできます。3.8.0</target>
        </trans-unit>
        <trans-unit id="2e327096324eaa5d0c855a4af5564e01c5ad3ecb" translate="yes" xml:space="preserve">
          <source>You can also invoke &lt;code&gt;html-proofer&lt;/code&gt; in Ruby scripts (e.g. in a Rakefile):</source>
          <target state="translated">Rubyスクリプト（Rakefileなど）で &lt;code&gt;html-proofer&lt;/code&gt; prooferを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="b79bdfc93326896550ac58a534eda9ea445f9415" translate="yes" xml:space="preserve">
          <source>You can also manually order the documents by setting an &lt;code&gt;order&lt;/code&gt; metadata with &lt;strong&gt;the filenames listed&lt;/strong&gt; in the desired order. For example, a collection of tutorials would be configured as:</source>
          <target state="translated">希望する順序で&lt;strong&gt;リストさ&lt;/strong&gt;れた&lt;strong&gt;ファイル名で&lt;/strong&gt; &lt;code&gt;order&lt;/code&gt; メタデータを設定することにより、ドキュメントを手動で注文することもでき&lt;strong&gt;ます&lt;/strong&gt;。たとえば、チュートリアルのコレクションは次のように構成されます。</target>
        </trans-unit>
        <trans-unit id="76ab2e76d58973c4bf70e44968efff02ff10735e" translate="yes" xml:space="preserve">
          <source>You can also pass parameters to an include. For example, suppose you have a file called &lt;code&gt;note.html&lt;/code&gt; in your &lt;code&gt;_includes&lt;/code&gt; folder that contains this formatting:</source>
          <target state="translated">パラメータをインクルードに渡すこともできます。たとえば、あなたはというファイルがあるとし &lt;code&gt;note.html&lt;/code&gt; あなたに &lt;code&gt;_includes&lt;/code&gt; そのフォルダをこの書式設定が含まれています。</target>
        </trans-unit>
        <trans-unit id="afef15edec11d7e1fe30fef3e8dde4ca08df6408" translate="yes" xml:space="preserve">
          <source>You can also register and trigger hooks for Jekyll objects introduced by your plugin. All it takes is placing &lt;code&gt;trigger&lt;/code&gt; calls under a suitable &lt;code&gt;owner&lt;/code&gt; name, at positons desired within your custom class and registering the &lt;code&gt;owner&lt;/code&gt; by your plugin.</source>
          <target state="translated">プラグインによって導入されたJekyllオブジェクトのフックを登録してトリガーすることもできます。必要なのは、適切な &lt;code&gt;owner&lt;/code&gt; 名で、カスタムクラス内の目的の位置に &lt;code&gt;trigger&lt;/code&gt; 呼び出しを配置し、プラグインで &lt;code&gt;owner&lt;/code&gt; を登録することだけです。</target>
        </trans-unit>
        <trans-unit id="9d862deca986020ccad0768732e8f9a3ad68477c" translate="yes" xml:space="preserve">
          <source>You can also set the &lt;code&gt;excerpt_separator&lt;/code&gt; globally in your &lt;code&gt;_config.yml&lt;/code&gt; configuration file.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 設定ファイルで &lt;code&gt;excerpt_separator&lt;/code&gt; をグローバルに設定することもできます。</target>
        </trans-unit>
        <trans-unit id="29100d9b5b53463a3614af117cdd8e7a9973def5" translate="yes" xml:space="preserve">
          <source>You can also set your own front matter variables you can access in Liquid. For instance, if you set a variable called &lt;code&gt;food&lt;/code&gt;, you can use that in your page:</source>
          <target state="translated">Liquidでアクセスできる独自のフロントマター変数を設定することもできます。たとえば、 &lt;code&gt;food&lt;/code&gt; という変数を設定すると、それをページで使用できます。</target>
        </trans-unit>
        <trans-unit id="ad67740def3f388f5f91692051f57c615deaed28" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;RubyGems&lt;/a&gt; to find the current versioning of any gem. But you can also use the &lt;code&gt;gem&lt;/code&gt; command line tool:</source>
          <target state="translated">&lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;RubyGems&lt;/a&gt;を使用して、gemの現在のバージョンを確認することもできます。ただし、 &lt;code&gt;gem&lt;/code&gt; コマンドラインツールを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="f7b256455c07e37d0d1c19189599eef7661657ea" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;link&lt;/code&gt; tag to create a link in Markdown as follows:</source>
          <target state="translated">次のように、 &lt;code&gt;link&lt;/code&gt; タグを使用してMarkdownでリンクを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="db3c48181598ce420e6bf6b9ffe8e868fb7a2b9d" translate="yes" xml:space="preserve">
          <source>You can also use this tag to create a link to a post in Markdown as follows:</source>
          <target state="translated">このタグを使って、以下のようにMarkdownで記事へのリンクを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="bdc2f9b7cb1b81a6c2752965856450fb353524a7" translate="yes" xml:space="preserve">
          <source>You can choose to include file fragments relative to the current file by using the &lt;code&gt;include_relative&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;include_relative&lt;/code&gt; タグを使用して、現在のファイルに関連するファイルフラグメントを含めるように選択できます。</target>
        </trans-unit>
        <trans-unit id="2294ff3935b27e6c9194251f8be4f50d980af1aa" translate="yes" xml:space="preserve">
          <source>You can configure your site&amp;rsquo;s permalinks through the &lt;a href=&quot;../configuration/index&quot;&gt;Configuration&lt;/a&gt; file or in the &lt;a href=&quot;../frontmatter/index&quot;&gt;Front Matter&lt;/a&gt; for each post, page, or collection.</source>
          <target state="translated">サイトのパーマリンクは、&lt;a href=&quot;../configuration/index&quot;&gt;設定&lt;/a&gt;ファイルまたは各投稿、ページ、コレクションの&lt;a href=&quot;../frontmatter/index&quot;&gt;フロントマター&lt;/a&gt;で設定できます。</target>
        </trans-unit>
        <trans-unit id="e008ba8371f82fc193af33f7723ccee4ad2f5628" translate="yes" xml:space="preserve">
          <source>You can control this sorting via the collection&amp;rsquo;s metadata.</source>
          <target state="translated">この並べ替えは、コレクションのメタデータを介して制御できます。</target>
        </trans-unit>
        <trans-unit id="93b376425d597f05f823c1af8ee870a06a9d0815" translate="yes" xml:space="preserve">
          <source>You can create a generator when you need Jekyll to create additional content based on your own rules.</source>
          <target state="translated">自分のルールに基づいて追加コンテンツを作成するジキルが必要な時にジェネレーターを作成することができます。</target>
        </trans-unit>
        <trans-unit id="1c5ac50a727e15018aadf5907701bb24e44e8242" translate="yes" xml:space="preserve">
          <source>You can create links in your topics to other posts, pages, or collection items in a way that is valid no matter what permalink configuration you choose. By using the &lt;code&gt;link&lt;/code&gt; tag, if you change your permalinks, your links won&amp;rsquo;t break. See &lt;a href=&quot;../templates/index#link&quot;&gt;Linking to pages&lt;/a&gt; in Templates for more details.</source>
          <target state="translated">選択したパーマリンク構成に関係なく有効な方法で、トピックに他の投稿、ページ、またはコレクションアイテムへのリンクを作成できます。 &lt;code&gt;link&lt;/code&gt; タグを使用すると、パーマリンクを変更しても、リンクが壊れることはありません。詳細については、テンプレートの&lt;a href=&quot;../templates/index#link&quot;&gt;ページへのリンクを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a5ed5aac85e2186e0572bd680800e88232214541" translate="yes" xml:space="preserve">
          <source>You can easily test your website build against one or more versions of Ruby. The following guide will show you how to set up a free build environment on &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt;, with &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; integration for pull requests.</source>
          <target state="translated">Rubyの1つ以上のバージョンに対してWebサイトのビルドを簡単にテストできます。次のガイドでは、プルリクエストの&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;統合を使用して、&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travisに&lt;/a&gt;無料のビルド環境をセットアップする方法を示します。</target>
        </trans-unit>
        <trans-unit id="87c167fb712f2b64edb622d4346bf6488b634c5a" translate="yes" xml:space="preserve">
          <source>You can find a few useful plugins at the following locations:</source>
          <target state="translated">以下の場所に便利なプラグインがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="10a1d3beb7409d03c89c65c38008e756961cab8d" translate="yes" xml:space="preserve">
          <source>You can find and preview themes on different galleries:</source>
          <target state="translated">さまざまなギャラリーでテーマを見つけてプレビューすることができます。</target>
        </trans-unit>
        <trans-unit id="2667e1e7155903fb77c85503837a4b8608e08eec" translate="yes" xml:space="preserve">
          <source>You can have multiple themes listed in your site&amp;rsquo;s &lt;code&gt;Gemfile&lt;/code&gt;, but only one theme can be selected in your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">サイトの &lt;code&gt;Gemfile&lt;/code&gt; に複数のテーマをリストできますが、サイトの_config.ymlで選択できるテーマは1つだけ &lt;code&gt;_config.yml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e2cd819ffbb5aa16bcf129dda0a2f4b28f186f9" translate="yes" xml:space="preserve">
          <source>You can link to the generated page using the &lt;code&gt;url&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 属性を使用して、生成されたページにリンクできます。</target>
        </trans-unit>
        <trans-unit id="f14393d1d47309ff59cd2be58c051ba77f93adda" translate="yes" xml:space="preserve">
          <source>You can link to the output page using &lt;code&gt;author.url&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;author.url&lt;/code&gt; を使用して出力ページにリンクできます。</target>
        </trans-unit>
        <trans-unit id="f15f8933f086a315e0c6843ad1dbb164232a54c0" translate="yes" xml:space="preserve">
          <source>You can make code snippets include line-numbers by adding the word &lt;code&gt;linenos&lt;/code&gt; to the end of the opening highlight tag like this: &lt;code&gt;{% highlight ruby linenos %}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{% highlight ruby linenos %}&lt;/code&gt; ように、開始強調表示タグの末尾に単語 &lt;code&gt;linenos&lt;/code&gt; を追加することで、コードスニペットに行番号を含めることができます。</target>
        </trans-unit>
        <trans-unit id="bca124f4d9f1d6e9fe08986b24d34c20e66c1114" translate="yes" xml:space="preserve">
          <source>You can make sure time management is working properly by inspecting your &lt;code&gt;_posts&lt;/code&gt; folder. You should see a markdown file with the current date in the filename.</source>
          <target state="translated">&lt;code&gt;_posts&lt;/code&gt; フォルダーを調べることで、時間管理が適切に機能していることを確認できます。ファイル名に現在の日付が含まれているマークダウンファイルが表示されます。</target>
        </trans-unit>
        <trans-unit id="43b095b96b261d78e7c32f39d5a51bd4b2c68b72" translate="yes" xml:space="preserve">
          <source>You can now prefix all jekyll commands listed in this tutorial with &lt;code&gt;bundle exec&lt;/code&gt; to make sure you use the jekyll version defined in your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">あなたは今で、このチュートリアルに記載されているすべてのジキルコマンド接頭できる &lt;code&gt;bundle exec&lt;/code&gt; 必ずあなたの中で定義されたジキルバージョンを使用するために &lt;code&gt;Gemfile&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="d64c7071a6264b6432d263be08589878967d2a48" translate="yes" xml:space="preserve">
          <source>You can now render the list of members in a template:</source>
          <target state="translated">テンプレート内のメンバーのリストをレンダリングできるようになりました。</target>
        </trans-unit>
        <trans-unit id="8794afe2be5d5773ccf8527a623ece5f8611313f" translate="yes" xml:space="preserve">
          <source>You can optionally specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;.</source>
          <target state="translated">オプションで、 &lt;code&gt;collections_dir: my_collections&lt;/code&gt; を使用して、すべてのコレクションを同じ場所に格納するディレクトリを指定できます。</target>
        </trans-unit>
        <trans-unit id="46d45ae00f226ea4c03a4d55784e2d9a2786d403" translate="yes" xml:space="preserve">
          <source>You can optionally specify metadata for your collection in the configuration:</source>
          <target state="translated">オプションで、設定でコレクションのメタデータを指定することができます。</target>
        </trans-unit>
        <trans-unit id="81cdc26f52a13375caf0264be4064896228f9f5c" translate="yes" xml:space="preserve">
          <source>You can provide custom headers for your site by adding them to &lt;code&gt;_config.yml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; に追加することで、サイトのカスタムヘッダーを提供できます。</target>
        </trans-unit>
        <trans-unit id="0bb7f995c456cf6b1e1fa756e8ae730cb0a86d03" translate="yes" xml:space="preserve">
          <source>You can see that in the second to last example above. First, we set the default page layout to &lt;code&gt;my-site&lt;/code&gt;. Then, using a more specific path, we set the default layout for pages in the &lt;code&gt;projects/&lt;/code&gt; path to &lt;code&gt;project&lt;/code&gt;. This can be done with any value that you would set in the page or post front matter.</source>
          <target state="translated">上記の最後から2番目の例でそれを確認できます。まず、デフォルトのページレイアウトを &lt;code&gt;my-site&lt;/code&gt; に設定します。次に、より具体的なパスを使用して、 &lt;code&gt;projects/&lt;/code&gt; パス内のページのデフォルトのレイアウトを &lt;code&gt;project&lt;/code&gt; に設定します。これは、ページまたは投稿の前付けに設定する任意の値で実行できます。</target>
        </trans-unit>
        <trans-unit id="8d06abd530e58c847bd4ca6ef4fed8ab91e07633" translate="yes" xml:space="preserve">
          <source>You can set front matter in layouts, the only difference is when you&amp;rsquo;re using in Liquid, you need to use the &lt;code&gt;layout&lt;/code&gt; variable instead of &lt;code&gt;page&lt;/code&gt;. For example:</source>
          <target state="translated">レイアウトでフロントマターを設定できます。唯一の違いは、Liquidで使用する場合、 &lt;code&gt;page&lt;/code&gt; 代わりに &lt;code&gt;layout&lt;/code&gt; 変数を使用する必要があることです。例えば：</target>
        </trans-unit>
        <trans-unit id="7dde98e897f931cb83f47f87b59212983c47adf1" translate="yes" xml:space="preserve">
          <source>You can still use GitHub Pages to publish your site, but you&amp;rsquo;ll need to convert the site locally and push the generated static files to your GitHub repository instead of the Jekyll source files.</source>
          <target state="translated">GitHubページを使用してサイトを公開することはできますが、サイトをローカルで変換し、生成された静的ファイルをJekyllソースファイルではなくGitHubリポジトリにプッシュする必要があります。</target>
        </trans-unit>
        <trans-unit id="c3630099f3eecb2a8ad997bb6c1a0b973ed05a30" translate="yes" xml:space="preserve">
          <source>You can test your website build against one or more versions of Ruby. The following guide will show you how to set up a free build environment on &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt;, with &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; integration for pull requests.</source>
          <target state="translated">1つ以上のバージョンのRubyに対してWebサイトのビルドをテストできます。次のガイドでは、プルリクエスト用の&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;統合を使用して、&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt;で無料のビルド環境をセットアップする方法を示します。</target>
        </trans-unit>
        <trans-unit id="225c3c1726f4de9df215a2c686dc554730e523d4" translate="yes" xml:space="preserve">
          <source>You can use Liquid binary operators &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt; in the expression passed to the &lt;code&gt;where_exp&lt;/code&gt; filter to employ multiple conditionals in the operation.</source>
          <target state="translated">あなたはリキッド二項演算子を使用することができ &lt;code&gt;or&lt;/code&gt; と、 &lt;code&gt;and&lt;/code&gt; に渡された表現で &lt;code&gt;where_exp&lt;/code&gt; の操作で複数の条件文を採用するフィルタ。</target>
        </trans-unit>
        <trans-unit id="62a6dd2e6002671bc405bd7c00321a008fe1d443" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;where&lt;/code&gt; filter to detect documents and pages with properties that are &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt;. For example,</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; フィルターを使用して、 &lt;code&gt;nil&lt;/code&gt; または &lt;code&gt;&quot;&quot;&lt;/code&gt; のプロパティを持つドキュメントおよびページを検出できます。例えば、</target>
        </trans-unit>
        <trans-unit id="83036c72eb4eff4eac45d17fe71c15df9f5978cb" translate="yes" xml:space="preserve">
          <source>You construct permalinks by creating a template URL where dynamic elements are represented by colon-prefixed keywords. The default template permalink is &lt;code&gt;/:categories/:year/:month/:day/:title.html&lt;/code&gt;. Each of the colon-prefixed keywords is a template variable.</source>
          <target state="translated">動的要素がコロンで始まるキーワードで表されるテンプレートURLを作成して、パーマリンクを作成します。デフォルトのテンプレートパーマリンクは &lt;code&gt;/:categories/:year/:month/:day/:title.html&lt;/code&gt; です。コロンで始まるキーワードはそれぞれテンプレート変数です。</target>
        </trans-unit>
        <trans-unit id="52987ff2a335fb4664bfb6b279f4b37585ca6d72" translate="yes" xml:space="preserve">
          <source>You could list them individually in both &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; と &lt;code&gt;_config.yml&lt;/code&gt; の両方に個別にリストすることができます。</target>
        </trans-unit>
        <trans-unit id="82372e5941e515cd224c324759f4fab4de075b38" translate="yes" xml:space="preserve">
          <source>You could templatize this content in your include and make each value available as a parameter, like this:</source>
          <target state="translated">インクルードの中でこの内容をテンプレート化して、以下のように各値をパラメータとして利用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="4218ab9ddf22eb0aa79127d78253dfbfa88e5050" translate="yes" xml:space="preserve">
          <source>You could then reference that variable in your include:</source>
          <target state="translated">そして、その変数をインクルードで参照することができます。</target>
        </trans-unit>
        <trans-unit id="58962678aa0c2b4dbf5de1f9bffde94b16577be7" translate="yes" xml:space="preserve">
          <source>You could then reference that variable in your link:</source>
          <target state="translated">そして、リンクの中でその変数を参照することができます。</target>
        </trans-unit>
        <trans-unit id="86cdbe95bd30b4ef6df07a0a4ad92845ba5bccc5" translate="yes" xml:space="preserve">
          <source>You could use a standard CSS file for styling, we&amp;rsquo;re going to take it a step further by using &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;. Sass is a fantastic extension to CSS baked right into Jekyll.</source>
          <target state="translated">スタイリングには標準のCSSファイルを使用できますが、&lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;を使用してさらに一歩進めます。Sassは、Jekyllに組み込まれたCSSの素晴らしい拡張機能です。</target>
        </trans-unit>
        <trans-unit id="ec59f75ef4b6ca27532722a835f3c9fbbfdae7d3" translate="yes" xml:space="preserve">
          <source>You have 3 options for installing plugins:</source>
          <target state="translated">プラグインのインストールには3つのオプションがあります。</target>
        </trans-unit>
        <trans-unit id="dadd08f186fa1ce7190f3ac9e58cb8d6c72cce8e" translate="yes" xml:space="preserve">
          <source>You have full access to the front matter of the origin. In the example above, &lt;code&gt;page.title&lt;/code&gt; comes from the page front matter.</source>
          <target state="translated">あなたは起源の前書きに完全にアクセスできます。上記の例では、 &lt;code&gt;page.title&lt;/code&gt; はページフロントマターから取得されます。</target>
        </trans-unit>
        <trans-unit id="5cf5d8fc85bef0fd436680d72baac9fd7975e90a" translate="yes" xml:space="preserve">
          <source>You have full control over how (and where) you display your posts, and how you structure your site. You should read more about &lt;a href=&quot;../liquid/index&quot;&gt;how templates work&lt;/a&gt; with Jekyll if you want to know more.</source>
          <target state="translated">投稿を表示する方法（および場所）、およびサイトの構造を完全に制御できます。詳細を知りたい場合は、&lt;a href=&quot;../liquid/index&quot;&gt;テンプレート&lt;/a&gt;がJekyllでどのように機能するかについて詳しく読む必要があります。</target>
        </trans-unit>
        <trans-unit id="2d1d6cf06ef7c9b233856faee5b424a09cd21282" translate="yes" xml:space="preserve">
          <source>You have to use a &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby+Devkit&lt;/a&gt; version of the RubyInstaller and install the MSYS2 build tools to successfully install the &lt;code&gt;wdm&lt;/code&gt; gem.</source>
          <target state="translated">&lt;code&gt;wdm&lt;/code&gt; gemを正常にインストールするには、RubyInstallerの&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby + Devkit&lt;/a&gt;バージョンを使用し、MSYS2ビルドツールをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="f2c1892c073f03f142f840eb36f55d5f2a3afd30" translate="yes" xml:space="preserve">
          <source>You may also specify the destination of the pagination pages:</source>
          <target state="translated">また、ページネーションページの保存先を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="feae3676e579249c171fb75ff081a86988787055" translate="yes" xml:space="preserve">
          <source>You may also specify the output style with the &lt;code&gt;style&lt;/code&gt; option in your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; ファイルの &lt;code&gt;style&lt;/code&gt; オプションで出力スタイルを指定することもできます：</target>
        </trans-unit>
        <trans-unit id="813825e416d152aad17c5da9d4b383eef6abbb21" translate="yes" xml:space="preserve">
          <source>You may first have to download and install the &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby DevKit&lt;/a&gt; by following &lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;the instructions here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;こちらの手順&lt;/a&gt;に従って、最初に&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby DevKit&lt;/a&gt;をダウンロードしてインストールする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="0e8248f7de4dbe3e3195e0868132b50b54922638" translate="yes" xml:space="preserve">
          <source>You may receive an error when checking if Jekyll has been installed properly. Reboot your system and run &lt;code&gt;jekyll -v&lt;/code&gt; again. If the error persists, please open a &lt;a href=&quot;https://github.com/oneclick/rubyinstaller2/issues/new&quot;&gt;RubyInstaller issue&lt;/a&gt;.</source>
          <target state="translated">Jekyllが正しくインストールされているかどうかを確認すると、エラーが発生する場合があります。システムを再起動し、 &lt;code&gt;jekyll -v&lt;/code&gt; 再度実行します。エラーが続く場合は、&lt;a href=&quot;https://github.com/oneclick/rubyinstaller2/issues/new&quot;&gt;RubyInstallerの問題&lt;/a&gt;を開いてください。</target>
        </trans-unit>
        <trans-unit id="78b616d2afea8c81f2a3a97e314e4c6e686ba4c4" translate="yes" xml:space="preserve">
          <source>You may still be wondering why you&amp;rsquo;d output it this way as it takes more source code than raw HTML. In this next step, you&amp;rsquo;ll see why we&amp;rsquo;ve been doing this.</source>
          <target state="translated">生のHTMLよりも多くのソースコードが必要なため、なぜこのように出力するのか疑問に思われるかもしれません。この次のステップでは、なぜこれを行っているのかがわかります。</target>
        </trans-unit>
        <trans-unit id="6c7c0688920d68e8b8ed1a532bfa43b2ba7eb0e6" translate="yes" xml:space="preserve">
          <source>You may use any of the aforementioned plugin options simultaneously in the same site if you so choose. Use of one does not restrict the use of the others.</source>
          <target state="translated">あなたがそう選択した場合は、同じサイト内で前述のプラグインオプションのいずれかを同時に使用することができます。いずれかを使用しても、他のプラグインの使用を制限するものではありません。</target>
        </trans-unit>
        <trans-unit id="af53917fd7fb9df339055948ef4354df372d18eb" translate="yes" xml:space="preserve">
          <source>You may wish to use filters to find your collection: &lt;code&gt;{{ site.collections | where: &quot;label&quot;, &quot;myCollection&quot; | first }}&lt;/code&gt;</source>
          <target state="translated">フィルターを使用してコレクションを見つけることができます： &lt;code&gt;{{ site.collections | where: &quot;label&quot;, &quot;myCollection&quot; | first }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18d74fde536b64922ceef41d439fc4e956ce63bd" translate="yes" xml:space="preserve">
          <source>You might be wondering how you can have a blog without a database. In true Jekyll style, blogging is powered by text files only.</source>
          <target state="translated">データベースを持たずにブログを持つのはどうなのかと思うかもしれません。真のジキルスタイルでは、ブログはテキストファイルのみで動作します。</target>
        </trans-unit>
        <trans-unit id="fc3caae254b14bdc85762701fcedb9d34d316759" translate="yes" xml:space="preserve">
          <source>You might want to have a particular folder structure for your source files that changes for the built site. With &lt;a href=&quot;../permalinks/index&quot;&gt;permalinks&lt;/a&gt; you have full control of the output URL.</source>
          <target state="translated">ビルドされたサイトに合わせて変更されるソースファイル用の特定のフォルダー構造が必要になる場合があります。では&lt;a href=&quot;../permalinks/index&quot;&gt;パーマリンク&lt;/a&gt;あなたは出力URLを完全に制御を持っています。</target>
        </trans-unit>
        <trans-unit id="b14e1937660ee77bf91641a024c1f476923d38c9" translate="yes" xml:space="preserve">
          <source>You must also register the custom tag with the Liquid template engine as follows:</source>
          <target state="translated">また、以下のようにカスタムタグをLiquidのテンプレートエンジンに登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="de70508fa60f56c7261e9ccae9189cb17ed3f283" translate="yes" xml:space="preserve">
          <source>You must have &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Windows Subsystem for Linux&lt;/a&gt; enabled.</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Linux用のWindowsサブシステムを&lt;/a&gt;有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="bd4559d57d7b39444a0bd8264fa3bdbc36bb5bad" translate="yes" xml:space="preserve">
          <source>You must include the file&amp;rsquo;s original extension when using the &lt;code&gt;link&lt;/code&gt; tag. Here are some examples:</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; タグを使用する場合は、ファイルの元の拡張子を含める必要があります。ここではいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="cbec99e671925cf4b4ac870b8970c517bb1e23ce" translate="yes" xml:space="preserve">
          <source>You should include these references in the &lt;code&gt;Gemfile&lt;/code&gt; in one of two ways.</source>
          <target state="translated">これらの参照は、2つの方法のいずれかで &lt;code&gt;Gemfile&lt;/code&gt; に含める必要があります。</target>
        </trans-unit>
        <trans-unit id="8c155ef26b19ec8c239e5862536d6228c5f5622c" translate="yes" xml:space="preserve">
          <source>You want to ensure the Travis builds for your site are being run only on the branch or branches which contain your site. One means of ensuring this isolation is including a branch whitelist in your Travis configuration file. By specifying the &lt;code&gt;gh-pages&lt;/code&gt; branch, you will ensure the associated test script (discussed above) is only executed on site branches. If you use a pull request flow for proposing changes, you may wish to enforce a convention for your builds such that all branches containing edits are prefixed, exemplified above with the &lt;code&gt;/pages-(.*)/&lt;/code&gt; regular expression.</source>
          <target state="translated">サイトのTravisビルドが、サイトを含む1つまたは複数のブランチでのみ実行されるようにする必要があります。この分離を確実にする1つの方法は、Travis構成ファイルにブランチホワイトリストを含めることです。 &lt;code&gt;gh-pages&lt;/code&gt; ブランチを指定すると、関連するテストスクリプト（上記で説明）がサイトブランチでのみ実行されるようになります。あなたが変更を提案するため、プルリクエストフローを使用している場合、あなたはあなたの編集を含むすべての分岐が前に付けられるように構築するための規則を施行することを望むかもしれない、と挙げた &lt;code&gt;/pages-(.*)/&lt;/code&gt; 正規表現。</target>
        </trans-unit>
        <trans-unit id="c59eb0fb83ec6e55ae9231cb96d832a3172db660" translate="yes" xml:space="preserve">
          <source>You won&amp;rsquo;t need to place your included content within the &lt;code&gt;_includes&lt;/code&gt; directory. Instead, the inclusion is specifically relative to the file where the tag is being used. For example, if &lt;code&gt;_posts/2014-09-03-my-file.markdown&lt;/code&gt; uses the &lt;code&gt;include_relative&lt;/code&gt; tag, the included file must be within the &lt;code&gt;_posts&lt;/code&gt; directory or one of its subdirectories.</source>
          <target state="translated">インクルードしたコンテンツを &lt;code&gt;_includes&lt;/code&gt; ディレクトリ内に配置する必要はありません。代わりに、インクルードは、タグが使用されているファイルに特に関連しています。たとえば、 &lt;code&gt;_posts/2014-09-03-my-file.markdown&lt;/code&gt; が &lt;code&gt;include_relative&lt;/code&gt; タグを使用する場合、インクルードされるファイルは &lt;code&gt;_posts&lt;/code&gt; ディレクトリまたはそのサブディレクトリの1つにある必要があります。</target>
        </trans-unit>
        <trans-unit id="e47678fcc57fc0793f6e8053d52ed978fb4583d9" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to reference the stylesheet in your layout.</source>
          <target state="translated">レイアウトでスタイルシートを参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="ef98b7d599a26111b7363e4a3b4c03e3b43eab87" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll notice this is almost identical to &lt;code&gt;index.html&lt;/code&gt; except there&amp;rsquo;s no front matter and the content of the page is replaced with a &lt;code&gt;content&lt;/code&gt; variable. &lt;code&gt;content&lt;/code&gt; is a special variable which has the value of the rendered content of the page it&amp;rsquo;s called on.</source>
          <target state="translated">これは &lt;code&gt;index.html&lt;/code&gt; とほぼ同じですが、フロントマターがなく、ページの &lt;code&gt;content&lt;/code&gt; 変数に置き換えられていることがわかります。 &lt;code&gt;content&lt;/code&gt; は、呼び出されたページのレンダリングされたコンテンツの値を持つ特別な変数です。</target>
        </trans-unit>
        <trans-unit id="94c4400f3ac0dd6a1ce3e6068141bd8ca93ebd1c" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re now running the current stable version of Ruby!</source>
          <target state="translated">これで、Rubyの現在の安定バージョンを実行しています！</target>
        </trans-unit>
        <trans-unit id="a5acac90148d1abc3866043511b2be719baeaa33" translate="yes" xml:space="preserve">
          <source>You'll see this by a feature that hasn't been released</source>
          <target state="translated">公開されていない特集で見てみましょう</target>
        </trans-unit>
        <trans-unit id="4a57b6049a550324f79bde6a1f6ece0ab9d1f706" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;.travis.yml&lt;/code&gt; file should look like this:</source>
          <target state="translated">あなたの &lt;code&gt;.travis.yml&lt;/code&gt; ファイルには、次のようになります。</target>
        </trans-unit>
        <trans-unit id="9a73aca4e2a6509bb048f7d844f4c213ed2e3c3a" translate="yes" xml:space="preserve">
          <source>Your Command Prompt instance should now be a Bash instance. Now we must update our repo lists and packages.</source>
          <target state="translated">コマンドプロンプトのインスタンスは Bash インスタンスになっているはずです。ここで、レポリストとパッケージを更新しなければなりません。</target>
        </trans-unit>
        <trans-unit id="a1771f185112c996dbf555c49fae65ea38d9f743" translate="yes" xml:space="preserve">
          <source>Your Content</source>
          <target state="translated">あなたのコンテンツ</target>
        </trans-unit>
        <trans-unit id="b8835d7b143874d94a7c1a39630689b09748d56f" translate="yes" xml:space="preserve">
          <source>Your dynamic content, so to speak. The naming convention of these files is important, and must follow the format: &lt;code&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;. The &lt;a href=&quot;../permalinks/index&quot;&gt;permalinks&lt;/a&gt; can be customized for each post, but the date and markup language are determined solely by the file name.</source>
          <target state="translated">いわばダイナミックなコンテンツ。これらのファイルの命名規則は重要であり、 &lt;code&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt; の形式に従う必要があります。&lt;a href=&quot;../permalinks/index&quot;&gt;パーマリンクは、&lt;/a&gt;各ポストのためにカスタマイズすることができますが、日付やマークアップ言語は、ファイル名のみによって決定されます。</target>
        </trans-unit>
        <trans-unit id="c23dddd636cb6a74d2fb8bd56a3d1999bb003c55" translate="yes" xml:space="preserve">
          <source>Your environment values can be anything you want (not just &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt;). Some elements you might want to hide in development environments include Disqus comment forms or Google Analytics. Conversely, you might want to expose an &amp;ldquo;Edit me in GitHub&amp;rdquo; button in a development environment but not include it in production environments.</source>
          <target state="translated">環境値は、（ &lt;code&gt;development&lt;/code&gt; や &lt;code&gt;production&lt;/code&gt; だけでなく）任意の値にすることができます。開発環境で非表示にする必要がある要素には、DisqusコメントフォームやGoogleアナリティクスなどがあります。逆に、開発環境では「GitHubで編集」ボタンを公開し、本番環境には含めないようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="553ff466264b072866ba8dd0412dd697c42812e5" translate="yes" xml:space="preserve">
          <source>Your file should look something like:</source>
          <target state="translated">ファイルは以下のようになっているはずです。</target>
        </trans-unit>
        <trans-unit id="92a9bfd65763162cd4ef7751a63738260dfc90ca" translate="yes" xml:space="preserve">
          <source>Your first plugin</source>
          <target state="translated">最初のプラグイン</target>
        </trans-unit>
        <trans-unit id="8a46ae9c75c32172e941f6a75dcd0dc98489689e" translate="yes" xml:space="preserve">
          <source>Your site is automatically generated by GitHub Pages when you push your source files. Note that GitHub Pages works equally well for regular HTML content, simply because Jekyll treats files without YAML front matter as static assets. So if you only need to push generated HTML, you&amp;rsquo;re good to go without any further setup.</source>
          <target state="translated">ソースファイルをプッシュすると、サイトはGitHub Pagesによって自動的に生成されます。JekyllがYAMLの前付けのないファイルを静的アセットとして扱うため、GitHubページは通常のHTMLコンテンツでも同様に機能することに注意してください。したがって、生成されたHTMLをプッシュするだけでよい場合は、それ以上の設定を行わずに済みます。</target>
        </trans-unit>
        <trans-unit id="a431b073307ef46c1c6bd59a131d311a8bd3e59d" translate="yes" xml:space="preserve">
          <source>Your site is automatically generated by GitHub Pages when you push your source files. Note that GitHub Pages works equally well for regular HTML content, simply because Jekyll treats files without front matter as static assets. So if you only need to push generated HTML, you&amp;rsquo;re good to go without any further setup.</source>
          <target state="translated">ソースファイルをプッシュすると、GitHubPagesによってサイトが自動的に生成されます。Jekyllがフロントマターのないファイルを静的アセットとして扱うため、GitHubPagesは通常のHTMLコンテンツでも同様に機能することに注意してください。したがって、生成されたHTMLをプッシュするだけでよい場合は、それ以上の設定を行わなくてもかまいません。</target>
        </trans-unit>
        <trans-unit id="124b347e92488a2502b642d015ff1e518a9fb5ec" translate="yes" xml:space="preserve">
          <source>Your terminal should now be a Bash instance. Next, update your repository lists and packages:</source>
          <target state="translated">これでターミナルは Bash インスタンスになったはずです。次に、リポジトリリストとパッケージを更新します。</target>
        </trans-unit>
        <trans-unit id="40fe2e8a3ec78c5ad1c1d6c92ce61af6341b18cf" translate="yes" xml:space="preserve">
          <source>Your theme should include a &lt;code&gt;/README.md&lt;/code&gt; file, which explains how site authors can install and use your theme. What layouts are included? What includes? Do they need to add anything special to their site&amp;rsquo;s configuration file?</source>
          <target state="translated">テーマには &lt;code&gt;/README.md&lt;/code&gt; ファイルを含める必要があります。これは、サイト作成者がテーマをインストールして使用する方法を説明しています。どのレイアウトが含まれていますか？何が含まれていますか？サイトの構成ファイルに特別なものを追加する必要がありますか？</target>
        </trans-unit>
        <trans-unit id="f0286abd5b6c407b7155ef6a6aa920936a3fbbd7" translate="yes" xml:space="preserve">
          <source>Your theme&amp;rsquo;s styles can be included in the user&amp;rsquo;s stylesheet using the &lt;code&gt;@import&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; ディレクティブを使用して、テーマのスタイルをユーザーのスタイルシートに含めることができます。</target>
        </trans-unit>
        <trans-unit id="e29302c3d7ec4a5aa08cecaf36bdb5c80f08ca50" translate="yes" xml:space="preserve">
          <source>Your theme&amp;rsquo;s stylesheets should be placed in your theme&amp;rsquo;s &lt;code&gt;_sass&lt;/code&gt; folder, again, just as you would when authoring a Jekyll site.</source>
          <target state="translated">Jekyllサイトを作成するときと同じように、テーマのスタイルシートをテーマの &lt;code&gt;_sass&lt;/code&gt; フォルダーに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="53a0acfad59379b3e050338bf9f23cfc172ee787" translate="yes" xml:space="preserve">
          <source>_</source>
          <target state="translated">_</target>
        </trans-unit>
        <trans-unit id="cddd9dea2f2c15cc2c0f262b863ae26ba45a0d26" translate="yes" xml:space="preserve">
          <source>a list of posts for the current page</source>
          <target state="translated">現在のページの投稿一覧</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="cdd41bd4d17b885aa9a031d54883c85a6fb78673" translate="yes" xml:space="preserve">
          <source>and you&amp;rsquo;ll search for just the name &lt;code&gt;jekyll&lt;/code&gt;, and in brackets will be latest version. Another way to check if you have the latest version is to run the command &lt;code&gt;gem outdated&lt;/code&gt;. This will provide a list of all the gems on your system that need to be updated. If you aren&amp;rsquo;t running the latest version, run this command:</source>
          <target state="translated">そして、名前 &lt;code&gt;jekyll&lt;/code&gt; だけを検索します。括弧内は最新バージョンになります。最新バージョンかどうかを確認する別の方法は、コマンド &lt;code&gt;gem outdated&lt;/code&gt; を実行することです。これにより、更新が必要なシステム上のすべての宝石のリストが提供されます。最新バージョンを実行していない場合は、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="82e3d29d066d83ac586525e18512ce11defd6da1" translate="yes" xml:space="preserve">
          <source>at_least</source>
          <target state="translated">at_least</target>
        </trans-unit>
        <trans-unit id="a68b5435700f68d5e023702fde46955f51d367d5" translate="yes" xml:space="preserve">
          <source>at_most</source>
          <target state="translated">at_most</target>
        </trans-unit>
        <trans-unit id="d01a341706c2a5c67a30eb227bba3d0fd7ace906" translate="yes" xml:space="preserve">
          <source>capitalize</source>
          <target state="translated">capitalize</target>
        </trans-unit>
        <trans-unit id="613af80c25dfbc9ef75ce605280571b9a518d632" translate="yes" xml:space="preserve">
          <source>ceil</source>
          <target state="translated">ceil</target>
        </trans-unit>
        <trans-unit id="84e17b567c13278b6db8b70738212be1721bfbba" translate="yes" xml:space="preserve">
          <source>classifier-reborn &amp;ndash; for &lt;code&gt;site.related_posts&lt;/code&gt;</source>
          <target state="translated">classifier-reborn &amp;ndash; for &lt;code&gt;site.related_posts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f44e2cffa8f7b516c9e499285c951d788431a28" translate="yes" xml:space="preserve">
          <source>compact</source>
          <target state="translated">compact</target>
        </trans-unit>
        <trans-unit id="49ba358c3272c2db40fc6ab2c103669678628b68" translate="yes" xml:space="preserve">
          <source>concat</source>
          <target state="translated">concat</target>
        </trans-unit>
        <trans-unit id="0f387cd682af1b56b6928e2187e1cf30f3f0f267" translate="yes" xml:space="preserve">
          <source>current page number</source>
          <target state="translated">げんざいページばんごう</target>
        </trans-unit>
        <trans-unit id="e927d0677c77241b707442314346326278051dd6" translate="yes" xml:space="preserve">
          <source>date</source>
          <target state="translated">date</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="de1fc34be47d67a2920dd8cf3fb3ae39a968e633" translate="yes" xml:space="preserve">
          <source>divided_by</source>
          <target state="translated">divided_by</target>
        </trans-unit>
        <trans-unit id="e4370fb0ea59e2aeb0cf8fec4afadb0dd1b956c6" translate="yes" xml:space="preserve">
          <source>downcase</source>
          <target state="translated">downcase</target>
        </trans-unit>
        <trans-unit id="de9751fbe1f37ff6400bc3c3c630e8b6f873289d" translate="yes" xml:space="preserve">
          <source>each of the following &lt;code&gt;permalink&lt;/code&gt; configurations will produce the document structure shown below it.</source>
          <target state="translated">以下の各 &lt;code&gt;permalink&lt;/code&gt; 構成は、その下に示されているドキュメント構造を生成します。</target>
        </trans-unit>
        <trans-unit id="cdecabe1520a398e4e46deff9d55b19bed6d6457" translate="yes" xml:space="preserve">
          <source>escape</source>
          <target state="translated">escape</target>
        </trans-unit>
        <trans-unit id="4090ae240cac69c217596d22e613696a07903bbc" translate="yes" xml:space="preserve">
          <source>escape_once</source>
          <target state="translated">escape_once</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="8806b4aa6a559a639c0a6bdf59bea706975436a2" translate="yes" xml:space="preserve">
          <source>jamstackthemes.dev</source>
          <target state="translated">jamstackthemes.dev</target>
        </trans-unit>
        <trans-unit id="d6a1d7e6a4b379d0423f23938ee2455c4de4e020" translate="yes" xml:space="preserve">
          <source>jekyll-coffeescript &amp;ndash; processing of CoffeeScript</source>
          <target state="translated">jekyll-coffeescript &amp;ndash; CoffeeScriptの処理</target>
        </trans-unit>
        <trans-unit id="44ecb5745225564cc0df8ba3faba076157148aeb" translate="yes" xml:space="preserve">
          <source>jekyll-gist &amp;ndash; the &lt;code&gt;gist&lt;/code&gt; Liquid tag</source>
          <target state="translated">ジキル-要旨- &lt;code&gt;gist&lt;/code&gt; 液体タグ</target>
        </trans-unit>
        <trans-unit id="61fed29c1622c2460e310b7ba074d09ad9690a05" translate="yes" xml:space="preserve">
          <source>jekyll-paginate &amp;ndash; Jekyll&amp;rsquo;s pagination solution from days past</source>
          <target state="translated">jekyll-paginate &amp;ndash;過去数日のJekyllのページネーションソリューション</target>
        </trans-unit>
        <trans-unit id="a103bfb9a3a896ccfb238ec1d6d16839bd245548" translate="yes" xml:space="preserve">
          <source>jekyll-themes.com</source>
          <target state="translated">jekyll-themes.com</target>
        </trans-unit>
        <trans-unit id="4dd8d554cde3c013435e272017b2bae9f6e00d03" translate="yes" xml:space="preserve">
          <source>jekyllthemes.io</source>
          <target state="translated">jekyllthemes.io</target>
        </trans-unit>
        <trans-unit id="46c246441ba0035c603912f17be9fed9abe1bcb9" translate="yes" xml:space="preserve">
          <source>jekyllthemes.org</source>
          <target state="translated">jekyllthemes.org</target>
        </trans-unit>
        <trans-unit id="c455b38e076228392d1c751d14fe95da50519334" translate="yes" xml:space="preserve">
          <source>join</source>
          <target state="translated">join</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="7bc595db0c3fc523684d0bce040d8bfcd798037d" translate="yes" xml:space="preserve">
          <source>lstrip</source>
          <target state="translated">lstrip</target>
        </trans-unit>
        <trans-unit id="cd6fdcbf5a860d174ac10af745972501941dc684" translate="yes" xml:space="preserve">
          <source>macOS</source>
          <target state="translated">macOS</target>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="translated">map</target>
        </trans-unit>
        <trans-unit id="b85dac7f646475d4018a5c35390352f94773c821" translate="yes" xml:space="preserve">
          <source>methods</source>
          <target state="translated">methods</target>
        </trans-unit>
        <trans-unit id="59b6536256b81897a7d4a55e7a4f543091b9840e" translate="yes" xml:space="preserve">
          <source>minus</source>
          <target state="translated">minus</target>
        </trans-unit>
        <trans-unit id="1af60b7b96e08873e7bd780893eed25aa7a430b1" translate="yes" xml:space="preserve">
          <source>modulo</source>
          <target state="translated">modulo</target>
        </trans-unit>
        <trans-unit id="af48f295d2d0b9cf62beae923213d3cb7dedeabd" translate="yes" xml:space="preserve">
          <source>newline_to_br</source>
          <target state="translated">newline_to_br</target>
        </trans-unit>
        <trans-unit id="adbaac028faf4c6fe85d20f0f3e7036aa8f53b53" translate="yes" xml:space="preserve">
          <source>number of pagination pages</source>
          <target state="translated">ページネーションページ数</target>
        </trans-unit>
        <trans-unit id="7f3d7d913d96b3695a4d14cf80d175d3a70ca785" translate="yes" xml:space="preserve">
          <source>number of posts per page</source>
          <target state="translated">ページあたりの投稿数</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="e141fbc4aa6d2eb2000921a62e42e53d2cb725bc" translate="yes" xml:space="preserve">
          <source>page number of the next pagination page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">次のページ付けページのページ番号、または後続のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="477003d8ad9f294f7a5e66b7b23cea2370f232ab" translate="yes" xml:space="preserve">
          <source>page number of the previous pagination page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">前のページ付けページのページ番号。前のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7249e2726e43700f75624d17be148a1fe33dc81b" translate="yes" xml:space="preserve">
          <source>path of next pagination page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">次のページ付けページのパス、または後続のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2136980dc1c16e890e8c954056c2aff1e760d287" translate="yes" xml:space="preserve">
          <source>path of previous pagination page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">前のページ付けページのパス、または前のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a8437dd0009e4aa220215ad24cf7c7d2e8c95c8" translate="yes" xml:space="preserve">
          <source>plus</source>
          <target state="translated">plus</target>
        </trans-unit>
        <trans-unit id="985baec4dbd5745207277afd1ff229aa28be9795" translate="yes" xml:space="preserve">
          <source>prepend</source>
          <target state="translated">prepend</target>
        </trans-unit>
        <trans-unit id="c12e5cd2633c7d844515ee6e6887c2ed83fae9da" translate="yes" xml:space="preserve">
          <source>pygments.rb &amp;ndash; the Pygments highlighter</source>
          <target state="translated">pygments.rb &amp;ndash; Pygmentsハイライター</target>
        </trans-unit>
        <trans-unit id="ff1eb48289c8642531cabb1aba205b5a32afd81b" translate="yes" xml:space="preserve">
          <source>redcarpet &amp;ndash; the Markdown processor</source>
          <target state="translated">redcarpet &amp;ndash; Markdownプロセッサ</target>
        </trans-unit>
        <trans-unit id="db99845855b2ecbfecca9a095062b96c3e27703f" translate="yes" xml:space="preserve">
          <source>remove</source>
          <target state="translated">remove</target>
        </trans-unit>
        <trans-unit id="2c7f08e849bda7f70be978e5a34e02465c6cbb85" translate="yes" xml:space="preserve">
          <source>remove_first</source>
          <target state="translated">remove_first</target>
        </trans-unit>
        <trans-unit id="3cacc7bfac0a382c669a884c953d0401a689785d" translate="yes" xml:space="preserve">
          <source>replace</source>
          <target state="translated">replace</target>
        </trans-unit>
        <trans-unit id="83d6da295373a452eea0a4ad989c6f1331af93f6" translate="yes" xml:space="preserve">
          <source>replace_first</source>
          <target state="translated">replace_first</target>
        </trans-unit>
        <trans-unit id="75470a3076d8da06e21a0f542f3a535af3f72e94" translate="yes" xml:space="preserve">
          <source>reverse</source>
          <target state="translated">reverse</target>
        </trans-unit>
        <trans-unit id="f0590a6dd3663be108ff31f58d16b829a1284be6" translate="yes" xml:space="preserve">
          <source>round</source>
          <target state="translated">round</target>
        </trans-unit>
        <trans-unit id="0d51056fa9e9ad3660e4bd10ae6e7656b4559d1e" translate="yes" xml:space="preserve">
          <source>rstrip</source>
          <target state="translated">rstrip</target>
        </trans-unit>
        <trans-unit id="9cd1a8b7dd930db5d1b080584eeefe7022570049" translate="yes" xml:space="preserve">
          <source>rsync</source>
          <target state="translated">rsync</target>
        </trans-unit>
        <trans-unit id="61541b484ac2a6488909f3326523fa0e68783461" translate="yes" xml:space="preserve">
          <source>scp</source>
          <target state="translated">scp</target>
        </trans-unit>
        <trans-unit id="c1c3e9d5de5edff7206ca347150e24248ed6b6ed" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;#front-matter-defaults&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">下記&lt;a href=&quot;#front-matter-defaults&quot;&gt;参照&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ba65388da35d46626744ecb9b4efc6423753cc2" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;../front-matter-defaults/index&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../front-matter-defaults/index&quot;&gt;以下を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="5a469c7049ec84c0c35e6494355dee74af57efef" translate="yes" xml:space="preserve">
          <source>site.collections has changed</source>
          <target state="translated">site.collectionsが変更されました</target>
        </trans-unit>
        <trans-unit id="89368e1d68015693ab48ee189d0632cb5d6edfb3" translate="yes" xml:space="preserve">
          <source>size</source>
          <target state="translated">size</target>
        </trans-unit>
        <trans-unit id="0a5228e66df38e2f27ca61b901edf86f7ef97fb8" translate="yes" xml:space="preserve">
          <source>slice</source>
          <target state="translated">slice</target>
        </trans-unit>
        <trans-unit id="98c4b8f6e2d770a0f2b54233669d65ff6eddc472" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">sort</target>
        </trans-unit>
        <trans-unit id="9885dc192224cdbac88a6de379b99a16090e4420" translate="yes" xml:space="preserve">
          <source>sort_natural</source>
          <target state="translated">sort_natural</target>
        </trans-unit>
        <trans-unit id="94d5cab6f5fe3422a447ab15436e7a672bc0c09a" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="translated">split</target>
        </trans-unit>
        <trans-unit id="1a942eab068a2173e66d08c736283cfe22e1c1ed" translate="yes" xml:space="preserve">
          <source>strip</source>
          <target state="translated">strip</target>
        </trans-unit>
        <trans-unit id="4a288449820c09af670e787caa39f1007a936aca" translate="yes" xml:space="preserve">
          <source>strip_html</source>
          <target state="translated">strip_html</target>
        </trans-unit>
        <trans-unit id="1f94db3a7977e916e3a7b560d0654aa44e08db28" translate="yes" xml:space="preserve">
          <source>strip_newlines</source>
          <target state="translated">strip_newlines</target>
        </trans-unit>
        <trans-unit id="7196b5875f713c826bd279dbda843c897e2a60c2" translate="yes" xml:space="preserve">
          <source>times</source>
          <target state="translated">times</target>
        </trans-unit>
        <trans-unit id="66069ba2070cc57f0630952c3bfe6dfe306e75f8" translate="yes" xml:space="preserve">
          <source>to this (note the offset):</source>
          <target state="translated">をこれに合わせます(オフセットに注意)。</target>
        </trans-unit>
        <trans-unit id="4d41404b436c558715719accc8c3c679019735c5" translate="yes" xml:space="preserve">
          <source>to your template files in &lt;code&gt;/_layout&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;/_layout&lt;/code&gt; フォルダー内のテンプレートファイルに。</target>
        </trans-unit>
        <trans-unit id="10af3b01d951df976ac4e288a775baccc746a796" translate="yes" xml:space="preserve">
          <source>toml &amp;ndash; an alternative to YAML for configuration files</source>
          <target state="translated">toml &amp;ndash;設定ファイルのYAMLの代替</target>
        </trans-unit>
        <trans-unit id="05e96e3cdd125d93c3e4b1427d0808418b629364" translate="yes" xml:space="preserve">
          <source>total number of posts in the site</source>
          <target state="translated">サイト内総書き込み数</target>
        </trans-unit>
        <trans-unit id="f283ea9bea0e80213ac091021420ffc9b3415914" translate="yes" xml:space="preserve">
          <source>truncate</source>
          <target state="translated">truncate</target>
        </trans-unit>
        <trans-unit id="2a65580c3088bf0729b68895c1a2e16075182661" translate="yes" xml:space="preserve">
          <source>truncatewords</source>
          <target state="translated">truncatewords</target>
        </trans-unit>
        <trans-unit id="42c53cdf8dcda07ef06c4014d43c03ab4ba1798b" translate="yes" xml:space="preserve">
          <source>uniq</source>
          <target state="translated">uniq</target>
        </trans-unit>
        <trans-unit id="3954b914012061752a7d98926615e95455407a2f" translate="yes" xml:space="preserve">
          <source>upcase</source>
          <target state="translated">upcase</target>
        </trans-unit>
        <trans-unit id="e63e318fcc2fb47559b38d6496a89ff049855082" translate="yes" xml:space="preserve">
          <source>url_decode</source>
          <target state="translated">url_decode</target>
        </trans-unit>
        <trans-unit id="ca4ca6ff0749feaa735a423d62ba79cbfc879aa8" translate="yes" xml:space="preserve">
          <source>url_encode</source>
          <target state="translated">url_encode</target>
        </trans-unit>
        <trans-unit id="6d0c2cf630087d5de840fcb20e9b52c5d23adb70" translate="yes" xml:space="preserve">
          <source>which may allow you to install native gems using this command (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">これにより、このコマンドを使用してネイティブgemをインストールできる場合があります（ここでも、必要な場合にのみ &lt;code&gt;sudo&lt;/code&gt; を使用します）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
