<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="jekyll">
    <body>
      <group id="jekyll">
        <trans-unit id="51ec816b81fe45eabe5985c6e5949f02c4715433" translate="yes" xml:space="preserve">
          <source>Front Matter Variables Are Optional</source>
          <target state="translated">フロントマター変数はオプションです</target>
        </trans-unit>
        <trans-unit id="fe601000d1934a854a60fca8d0cc33ca18d5d81a" translate="yes" xml:space="preserve">
          <source>Front Matter defaults</source>
          <target state="translated">フロントマターのデフォルト</target>
        </trans-unit>
        <trans-unit id="01503e4d79f20a1c22bfc4ed9c7fec93699ce001" translate="yes" xml:space="preserve">
          <source>Front matter defaults</source>
          <target state="translated">フロントマターデフォルト</target>
        </trans-unit>
        <trans-unit id="d0d415a3116cf5a7575b7864ef687cc71df1f621" translate="yes" xml:space="preserve">
          <source>Front matter is a snippet of &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; which sits between two triple-dashed lines at the top of a file. Front matter is used to set variables for the page, for example:</source>
          <target state="translated">フロントマターは、ファイルの上部にある2つの三点鎖線の間にある&lt;a href=&quot;http://yaml.org/&quot;&gt;YAMLの&lt;/a&gt;スニペットです。フロントマターは、ページの変数を設定するために使用されます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="e2ec54f1f86e1badd859a3e4cc0572b1e8ee044a" translate="yes" xml:space="preserve">
          <source>Front matter variables are available in Liquid under the &lt;code&gt;page&lt;/code&gt; variable. For example to output the variable above you would use:</source>
          <target state="translated">フロントマター変数は、 &lt;code&gt;page&lt;/code&gt; 変数の下のLiquidで使用できます。たとえば、上記の変数を出力するには、次を使用します。</target>
        </trans-unit>
        <trans-unit id="ab6514ccd95d0a3694260898a6491b71ac4e2ad0" translate="yes" xml:space="preserve">
          <source>Full month name, e.g. &amp;ldquo;January&amp;rdquo;.</source>
          <target state="translated">「1月」などの完全な月の名前。</target>
        </trans-unit>
        <trans-unit id="51c3dde9660d6cbb07190cefd51f56cc0ce6c526" translate="yes" xml:space="preserve">
          <source>Future Posts on GitHub Pages</source>
          <target state="translated">GitHubページへの今後の投稿</target>
        </trans-unit>
        <trans-unit id="40d7b46212b2ab893d9587ebff38115301a638c1" translate="yes" xml:space="preserve">
          <source>Future posts</source>
          <target state="translated">今後の投稿</target>
        </trans-unit>
        <trans-unit id="ff365eb91f2650983c39f1843d03aa6295de6aa2" translate="yes" xml:space="preserve">
          <source>GCC and Make</source>
          <target state="translated">GCCとメイク</target>
        </trans-unit>
        <trans-unit id="918bcf288e603e68c119aca1cac51aae9732d438" translate="yes" xml:space="preserve">
          <source>GNU/Linux, Unix, or macOS</source>
          <target state="translated">GNU/Linux、Unix、またはmacOS</target>
        </trans-unit>
        <trans-unit id="ae79844dff816caaafe6ba7c88f54fc43aef628a" translate="yes" xml:space="preserve">
          <source>GUI apps can modify the &lt;code&gt;$PATH&lt;/code&gt; as follows:</source>
          <target state="translated">GUIアプリは &lt;code&gt;$PATH&lt;/code&gt; を次のように変更できます。</target>
        </trans-unit>
        <trans-unit id="cb48d06fcaddb6f310478dca6ed659a7b7a5e884" translate="yes" xml:space="preserve">
          <source>Gather your collections3.7.0</source>
          <target state="translated">コレクションを集める3.7.0</target>
        </trans-unit>
        <trans-unit id="c25415e46110699c34b6585c6cef73ec2f91be99" translate="yes" xml:space="preserve">
          <source>Gem-based themes make it easier for theme developers to make updates available to anyone who has the theme gem. When there&amp;rsquo;s an update, theme developers push the update to RubyGems.</source>
          <target state="translated">ジェムベースのテーマを使用すると、テーマ開発者はテーマジェムを持っている人なら誰でも簡単に更新を利用できるようになります。更新があると、テーマ開発者は更新をRubyGemsにプッシュします。</target>
        </trans-unit>
        <trans-unit id="ba77b18ed6db40820a6e35edf257f239368af603" translate="yes" xml:space="preserve">
          <source>Gem-based themes make it easy for theme developers to make updates available to anyone who has the theme gem. When there&amp;rsquo;s an update, theme developers push the update to RubyGems.</source>
          <target state="translated">Gemベースのテーマを使用すると、テーマの開発者は、テーマのGemを持っている人が誰でも更新を利用できるようになります。更新がある場合、テーマ開発者は更新をRubyGemsにプッシュします。</target>
        </trans-unit>
        <trans-unit id="de3150c01c3a946a6168173c4116741379fe3579" translate="yes" xml:space="preserve">
          <source>Gemfile</source>
          <target state="translated">Gemfile</target>
        </trans-unit>
        <trans-unit id="029041565efb4ea6cac7f3107af122065735a299" translate="yes" xml:space="preserve">
          <source>Gems</source>
          <target state="translated">Gems</target>
        </trans-unit>
        <trans-unit id="39a3d98c0f2d259f8da7300bfbb7a92f3c1a83c6" translate="yes" xml:space="preserve">
          <source>Gems are code you can include in Ruby projects. Gems package specific functionality. You can share gems across multiple projects or with other people. Gems can perform actions like:</source>
          <target state="translated">Gems は Ruby プロジェクトに含めることができるコードです。ジェムは特定の機能をパッケージ化したものです。複数のプロジェクトや他の人とジェムを共有することができます。ジェムは以下のようなアクションを実行することができます。</target>
        </trans-unit>
        <trans-unit id="e311c24103da57e6affccfd589d2d5c9cd0965c9" translate="yes" xml:space="preserve">
          <source>Gems included in the &lt;code&gt;:jekyll-plugins&lt;/code&gt; group are activated regardless of the &lt;code&gt;--safe&lt;/code&gt; mode setting. Be aware of what gems are included under this group!</source>
          <target state="translated">&lt;code&gt;:jekyll-plugins&lt;/code&gt; グループに含まれる宝石は、 &lt;code&gt;--safe&lt;/code&gt; mode設定に関係なくアクティブになります。このグループに含まれている宝石に注意してください！</target>
        </trans-unit>
        <trans-unit id="7cc39f8834815d2ea36d46868afdb32921a87e8a" translate="yes" xml:space="preserve">
          <source>Gems included in the &lt;code&gt;:jekyll-plugins&lt;/code&gt; group are activated regardless of the &lt;code&gt;--safe&lt;/code&gt; mode setting. Be aware of which gems are included under this group!</source>
          <target state="translated">&lt;code&gt;:jekyll-plugins&lt;/code&gt; グループに含まれるGemsは、 &lt;code&gt;--safe&lt;/code&gt; モードの設定に関係なくアクティブになります。このグループに含まれる宝石に注意してください！</target>
        </trans-unit>
        <trans-unit id="8676228e396aba7fb75b0dd1994d8b4014133ced" translate="yes" xml:space="preserve">
          <source>Generally in Liquid you output content using two curly braces e.g. &lt;code&gt;{{ variable }}&lt;/code&gt; and perform logic statements by surrounding them in a curly brace percentage sign e.g. &lt;code&gt;{% if statement %}&lt;/code&gt;. To learn more about Liquid, check out the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;official Liquid Documentation&lt;/a&gt;.</source>
          <target state="translated">通常、Liquidでは、 &lt;code&gt;{{ variable }}&lt;/code&gt; などの2つの中括弧を使用してコンテンツを出力し、 &lt;code&gt;{% if statement %}&lt;/code&gt; 中括弧のパーセント記号で囲んで論理ステートメントを実行します。Liquidの詳細については、&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;公式のLiquidドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="aedb09bb110586431e8db01fe06a38658fabd92e" translate="yes" xml:space="preserve">
          <source>Generate a Liquid rendering profile to help you identify performance bottlenecks.</source>
          <target state="translated">パフォーマンスのボトルネックを特定するのに役立つリキッドレンダリングプロファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="0b1e0bd34bb388ae7f402d63987e9dc2d1a7095f" translate="yes" xml:space="preserve">
          <source>Generates content as a side-effect.</source>
          <target state="translated">副作用としてコンテンツを生成します。</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="5f4d84cfe96fb18f5daa733a7aebc64574619567" translate="yes" xml:space="preserve">
          <source>Generators are only required to implement one method:</source>
          <target state="translated">ジェネレータは1つのメソッドのみ実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="fd981652111640e1af8328f3462038888b278a32" translate="yes" xml:space="preserve">
          <source>Generators need to implement only one method:</source>
          <target state="translated">ジェネレータは1つのメソッドだけを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="9254a5380fd0a402863d61054b4a46973f389a2e" translate="yes" xml:space="preserve">
          <source>Generators run after Jekyll has made an inventory of the existing content, and before the site is generated. Pages with YAML Front Matters are stored as instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt;&lt;code&gt;Jekyll::Page&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.pages&lt;/code&gt;. Static files become instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt;&lt;code&gt;Jekyll::StaticFile&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.static_files&lt;/code&gt;. See &lt;a href=&quot;../variables/index&quot;&gt;the Variables documentation page&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">ジェネレーターは、Jekyllが既存のコンテンツのインベントリを作成した後、サイトが生成される前に実行されます。YAML Front Mattersを含む&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt; &lt;code&gt;Jekyll::Page&lt;/code&gt; &lt;/a&gt;はJekyll :: Pageのインスタンスとして保存され、 &lt;code&gt;site.pages&lt;/code&gt; から利用できます。静的ファイルは、のインスタンスになる&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt; &lt;code&gt;Jekyll::StaticFile&lt;/code&gt; &lt;/a&gt;とを経由してご利用いただけます &lt;code&gt;site.static_files&lt;/code&gt; 。詳細について&lt;a href=&quot;../variables/index&quot;&gt;は、変数のドキュメントページ&lt;/a&gt;と&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="e127bbb3a0bbbfd1ff126280056a9179479e821e" translate="yes" xml:space="preserve">
          <source>Generators run after Jekyll has made an inventory of the existing content, and before the site is generated. Pages with front matter are stored as instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt;&lt;code&gt;Jekyll::Page&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.pages&lt;/code&gt;. Static files become instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt;&lt;code&gt;Jekyll::StaticFile&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.static_files&lt;/code&gt;. See &lt;a href=&quot;../../variables/index&quot;&gt;the Variables documentation page&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">ジェネレーターは、Jekyllが既存のコンテンツのインベントリを作成した後、サイトが生成される前に実行されます。フロントマターのあるページは、&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt; &lt;code&gt;Jekyll::Page&lt;/code&gt; &lt;/a&gt;インスタンスとして保存され、 &lt;code&gt;site.pages&lt;/code&gt; から入手できます。静的ファイルは、のインスタンスになる&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt; &lt;code&gt;Jekyll::StaticFile&lt;/code&gt; &lt;/a&gt;とを経由してご利用いただけます &lt;code&gt;site.static_files&lt;/code&gt; 。詳細について&lt;a href=&quot;../../variables/index&quot;&gt;は、変数のドキュメントページ&lt;/a&gt;と&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6b44987fa3307256a0f5d4bcfa6dabc741a557cc" translate="yes" xml:space="preserve">
          <source>Gentoo</source>
          <target state="translated">Gentoo</target>
        </trans-unit>
        <trans-unit id="779fb227a172506ee3120bd5cd3808861aaf1330" translate="yes" xml:space="preserve">
          <source>Get your Ruby version:</source>
          <target state="translated">Ruby版を手に入れよう。</target>
        </trans-unit>
        <trans-unit id="d0910b6b5cbd00abec4d6696bf678c03c28ef9dd" translate="yes" xml:space="preserve">
          <source>Getting Jekyll installed and ready-to-go should only take a few minutes. If it ever becomes a pain, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; (or submit a pull request) describing the issue you encountered and how we might make the process easier.</source>
          <target state="translated">Jekyllをインストールしてすぐに使用できるようになるまでには、数分しかかかりません。それは今までの痛みになった場合、してください&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;問題をファイル&lt;/a&gt;（または、プルリクエストを送信）あなたが遭遇した問題を説明し、我々は、プロセスを容易にするかもしれない方法。</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">はじめに</target>
        </trans-unit>
        <trans-unit id="7ce495ff56808a96f0836329550514077a883f75" translate="yes" xml:space="preserve">
          <source>Git post-receive hook</source>
          <target state="translated">Git ポストレシーブフック</target>
        </trans-unit>
        <trans-unit id="510b9e89e8d4923873a42628e3ef914aa7972a29" translate="yes" xml:space="preserve">
          <source>Git post-update hook</source>
          <target state="translated">Git post-update フック</target>
        </trans-unit>
        <trans-unit id="39540900bbfc1f3ea7b080c0579b9c08789f8f23" translate="yes" xml:space="preserve">
          <source>GitHub Actions</source>
          <target state="translated">GitHub のアクション</target>
        </trans-unit>
        <trans-unit id="10ac4b07493a49944092e978ba7f3cbc7372eabd" translate="yes" xml:space="preserve">
          <source>GitHub Actions are registered for a repository by using a YAML file inside the directory path &lt;code&gt;.github/workflows&lt;/code&gt; (note the dot at the start). Here we shall employ &lt;a href=&quot;https://github.com/marketplace/actions/jekyll-actions&quot;&gt;Jekyll Actions&lt;/a&gt; from the Marketplace for its simplicity.</source>
          <target state="translated">GitHubアクションは、ディレクトリパス &lt;code&gt;.github/workflows&lt;/code&gt; 内のYAMLファイルを使用してリポジトリに登録されます（先頭のドットに注意してください）。ここでは、採用するものと&lt;a href=&quot;https://github.com/marketplace/actions/jekyll-actions&quot;&gt;ジキルアクション&lt;/a&gt;の簡略化のためMarketplaceからを。</target>
        </trans-unit>
        <trans-unit id="3b50aad9dd12f191663725265afb261bb6f3a7fa" translate="yes" xml:space="preserve">
          <source>GitHub Pages</source>
          <target state="translated">GitHub のページ</target>
        </trans-unit>
        <trans-unit id="e8f9d4f0de446dbec106e8aea66779e22a927f8b" translate="yes" xml:space="preserve">
          <source>GitHub Pages &lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;overrides&lt;/a&gt; the &lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;&amp;ldquo;Site Source&amp;rdquo;&lt;/a&gt; configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.</source>
          <target state="translated">GitHubページは&lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;「サイトソース」の&lt;/a&gt;設定値を&lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;上書き&lt;/a&gt;するため、ルートディレクトリ以外の場所にファイルを配置すると、サイトが正しく構築されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="eb69cae0b9c25c396bc4937c58f4573fb81a0a1d" translate="yes" xml:space="preserve">
          <source>GitHub Pages &lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/troubleshooting-jekyll-build-errors-for-github-pages-sites&quot;&gt;overrides&lt;/a&gt; the &lt;a href=&quot;../configuration/options/index&quot;&gt;&amp;ldquo;Site Source&amp;rdquo;&lt;/a&gt; configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.</source>
          <target state="translated">GitHub Pagesは&lt;a href=&quot;../configuration/options/index&quot;&gt;「サイトソース」&lt;/a&gt;構成値を&lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/troubleshooting-jekyll-build-errors-for-github-pages-sites&quot;&gt;上書き&lt;/a&gt;するため、ルートディレクトリ以外の場所にファイルを配置すると、サイトが正しく構築されない場合があります。</target>
        </trans-unit>
        <trans-unit id="8dacc5464f8b2d2bed3eff5cbf3a194b0cf27c4d" translate="yes" xml:space="preserve">
          <source>GitHub Pages Documentation, Help, and Support</source>
          <target state="translated">GitHub ページ ドキュメント、ヘルプ、サポート</target>
        </trans-unit>
        <trans-unit id="468a579a5c3c13e321704773694dd48709f82722" translate="yes" xml:space="preserve">
          <source>GitHub Pages are initially configured to live under the &lt;code&gt;username.github.io&lt;/code&gt; subdomain, which is why repositories must be named this way &lt;strong&gt;even if a custom domain is being used&lt;/strong&gt;.</source>
          <target state="translated">GitHubページは、最初は &lt;code&gt;username.github.io&lt;/code&gt; サブドメインの下で動作するように構成されています。そのため&lt;strong&gt;、カスタムドメインが使用されている場合でも、&lt;/strong&gt;リポジトリにこの方法&lt;strong&gt;で&lt;/strong&gt;名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="b9482e6772ed38f0e07d48251101b37ac4d3e564" translate="yes" xml:space="preserve">
          <source>GitHub Pages are powered by Jekyll behind the scenes, so if you&amp;rsquo;re looking for a zero-hassle, zero-cost solution, GitHub Pages are a great way to &lt;a href=&quot;../github-pages/index&quot;&gt;host your Jekyll-powered website for free&lt;/a&gt;.</source>
          <target state="translated">GitHub Pagesは舞台裏でJekyllを利用しているため、手間がかからず、コストもかからないソリューションを探している場合、GitHub Pagesは&lt;a href=&quot;../github-pages/index&quot;&gt;Jekyllを利用したWebサイトを無料でホスト&lt;/a&gt;する優れた方法です。</target>
        </trans-unit>
        <trans-unit id="98b49c3a0a79daea9a9ac9224c6cade9bea31346" translate="yes" xml:space="preserve">
          <source>GitHub Pages work by looking at certain branches of repositories on GitHub. There are two basic types available: &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user/organization and project pages&lt;/a&gt;. The way to deploy these two types of sites are nearly identical, except for a few minor details.</source>
          <target state="translated">GitHubページは、GitHub上のリポジトリの特定のブランチを調べることで機能します。利用可能な基本的なタイプは2つあります。&lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;ユーザー/組織とプロジェクトページ&lt;/a&gt;です。これら2つのタイプのサイトを展開する方法は、いくつかの細かい点を除いてほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="4ff625d7c16407bb7037fa87e12e8bd55c2058cb" translate="yes" xml:space="preserve">
          <source>GitHub.com #jekyll-theme repos</source>
          <target state="translated">GitHub.com #jekyll-theme repos</target>
        </trans-unit>
        <trans-unit id="a4d4c058d2416f068da6a5a2a38dd085d44bb01c" translate="yes" xml:space="preserve">
          <source>GitLab Pages</source>
          <target state="translated">GitLab ページ</target>
        </trans-unit>
        <trans-unit id="23d0b319e364d2bd5ece7b9f4e4b5526a736744a" translate="yes" xml:space="preserve">
          <source>Given a post named: &lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt; という名前の投稿があるとします。</target>
        </trans-unit>
        <trans-unit id="10e41e603882ff3e6f001e759b2e5ae1f12eaf4a" translate="yes" xml:space="preserve">
          <source>Glob patterns in Front Matter defaults</source>
          <target state="translated">フロントマターのGlobパターンがデフォルト</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="602d92b2e14ac385c7289a85d36ef682a9e44c22" translate="yes" xml:space="preserve">
          <source>Global Configuration</source>
          <target state="translated">グローバル設定</target>
        </trans-unit>
        <trans-unit id="c2a69aff614a63e743988330166603e3abc3bf38" translate="yes" xml:space="preserve">
          <source>Global Install</source>
          <target state="translated">グローバルインストール</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">グローバル変数</target>
        </trans-unit>
        <trans-unit id="2d35e11f4c78b7b3b3ca87764462e37d39f55eca" translate="yes" xml:space="preserve">
          <source>Globbing and Performance</source>
          <target state="translated">グラビングとパフォーマンス</target>
        </trans-unit>
        <trans-unit id="55b991eab112303d31743e18931429e53b8f2990" translate="yes" xml:space="preserve">
          <source>Go to the &lt;strong&gt;environment&lt;/strong&gt; tab on your repository.</source>
          <target state="translated">リポジトリの[&lt;strong&gt;環境&lt;/strong&gt;]タブに移動します。</target>
        </trans-unit>
        <trans-unit id="7a842f6d5fbbe8841aaf282f75d723b464fdc715" translate="yes" xml:space="preserve">
          <source>Go to the repository level view in GitHub. Under the most recent commit (near the top) you&amp;rsquo;ll see a &lt;strong&gt;status symbol&lt;/strong&gt; next to the commit message as a tick or &lt;em&gt;X&lt;/em&gt;. Hover over it and click the &lt;strong&gt;details&lt;/strong&gt; link.</source>
          <target state="translated">GitHubのリポジトリレベルビューに移動します。最新のコミット（上部近く）の下に、コミットメッセージの横にチェックマークまたは&lt;em&gt;X&lt;/em&gt;として&lt;strong&gt;ステータス記号が&lt;/strong&gt;表示されます。その上にカーソルを置き、&lt;strong&gt;詳細&lt;/strong&gt;リンクをクリックします。&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cbb8951bd9cf0840bb24a86d4d4799e5ae9ac6b" translate="yes" xml:space="preserve">
          <source>Go to the repository&amp;rsquo;s Actions tab. Click on the &lt;code&gt;jekyll&lt;/code&gt; workflow tab.</source>
          <target state="translated">リポジトリの[アクション]タブに移動します。 &lt;code&gt;jekyll&lt;/code&gt; ワークフロータブをクリックします。</target>
        </trans-unit>
        <trans-unit id="4531c718af3ab7d3ca98c4637f49630a6cb064e8" translate="yes" xml:space="preserve">
          <source>Go to your profile on travis-ci.org: https://travis-ci.org/profile/username</source>
          <target state="translated">travis-ci.org のプロフィールにアクセス:https://travis-ci.org/profile/username</target>
        </trans-unit>
        <trans-unit id="0427219d52acb0b8523719cb4caf006ac547e4e2" translate="yes" xml:space="preserve">
          <source>Go to your repository&amp;rsquo;s &lt;strong&gt;Settings&lt;/strong&gt; and then the &lt;strong&gt;Secrets&lt;/strong&gt; tab.</source>
          <target state="translated">リポジトリのに行く&lt;strong&gt;設定&lt;/strong&gt;して、&lt;strong&gt;秘密の&lt;/strong&gt;タブ。</target>
        </trans-unit>
        <trans-unit id="7178adec52e5c5f4838341c5b3d24d7925f54213" translate="yes" xml:space="preserve">
          <source>Group an array's items by a given property.</source>
          <target state="translated">指定したプロパティで配列の項目をグループ化します。</target>
        </trans-unit>
        <trans-unit id="f2a45e739a29c8415f8d916d28f65eb54a2d112d" translate="yes" xml:space="preserve">
          <source>Group an array's items using a Liquid expression.</source>
          <target state="translated">Liquid式を使用して配列の項目をグループ化します。</target>
        </trans-unit>
        <trans-unit id="45b78e0bd2914a69c41320d9ebf22a9927dd3f37" translate="yes" xml:space="preserve">
          <source>Group an array's items using a Liquid expression. 3.4.0</source>
          <target state="translated">Liquid式を使用して配列の項目をグループ化します。3.4.0</target>
        </trans-unit>
        <trans-unit id="ea95f76ea8d8243729f8be3feef2b40d89076685" translate="yes" xml:space="preserve">
          <source>Guide for maintaining Jekyll</source>
          <target state="translated">ジキルを維持するためのガイド</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="66d79524f4d0506a9a1af19b96aee758f2b790d6" translate="yes" xml:space="preserve">
          <source>HTML Proofer</source>
          <target state="translated">HTMLプルーファ</target>
        </trans-unit>
        <trans-unit id="63fc790cccc18500b0c573bedc101d0ac60d5586" translate="yes" xml:space="preserve">
          <source>Help us make Jekyll better by &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;contributing&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;貢献&lt;/a&gt;することでジキルをより良くするのを手伝ってください</target>
        </trans-unit>
        <trans-unit id="6c4d623e42153c15b2453aef249170c8234877cc" translate="yes" xml:space="preserve">
          <source>Helpful Hints</source>
          <target state="translated">役立つヒント</target>
        </trans-unit>
        <trans-unit id="9aac2ff9f6900ddaeac45839db4be8f1ca90c72f" translate="yes" xml:space="preserve">
          <source>Here are a few examples to clarify how permalink styles get applied with posts.</source>
          <target state="translated">ここでは、パーマリンクスタイルがどのように投稿に適用されるかを明確にするために、いくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="a5c03f3ec1a401705963307c231dad7cdab1e16c" translate="yes" xml:space="preserve">
          <source>Here are some of the most common commands:</source>
          <target state="translated">ここでは、最も一般的なコマンドを紹介します。</target>
        </trans-unit>
        <trans-unit id="831526769d35b12d09459b16086b073d0d812e97" translate="yes" xml:space="preserve">
          <source>Here is a basic example of using Data Files to avoid copy-pasting large chunks of code in your Jekyll templates:</source>
          <target state="translated">ここでは、Jekyll テンプレートに大きなコードの塊をコピーペーストしないようにするために、データファイルを使用する基本的な例を示します。</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="8c978a5694093a90f577b797656397da9e5aaa18" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of outputting a list of blog posts with an excerpt:</source>
          <target state="translated">抜粋を含むブログ投稿のリストを出力する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="83640d7e910a9e55e31b51dd8861c25fe6e8116f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that passes all the parameters to this include (the include file is named &lt;code&gt;image.html&lt;/code&gt;):</source>
          <target state="translated">このインクルードにすべてのパラメーターを渡す例を次に示します（インクルードファイルの名前は &lt;code&gt;image.html&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="abf948b4bceb5e369d172f337195e37748f36726" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example. In the &lt;code&gt;_data&lt;/code&gt; folder, suppose you have a YAML file called &lt;code&gt;profiles.yml&lt;/code&gt;. Its content looks like this:</source>
          <target state="translated">ここに例があります。で &lt;code&gt;_data&lt;/code&gt; フォルダ、あなたが呼ばれるYAMLファイルがあるとし &lt;code&gt;profiles.yml&lt;/code&gt; を。その内容は次のようになります。</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">次に例を示します。</target>
        </trans-unit>
        <trans-unit id="963fe3b6d5f32924be79190582ecb01f34a36218" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the full list of placeholders available:</source>
          <target state="translated">利用可能なプレースホルダーの完全なリストは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c26aeecbcca5072b431a5382ae6ba27176ef977c" translate="yes" xml:space="preserve">
          <source>Here, we are scoping the &lt;code&gt;values&lt;/code&gt; to any file that exists in the path &lt;code&gt;scope&lt;/code&gt;. Since the path is set as an empty string, it will apply to &lt;strong&gt;all files&lt;/strong&gt; in your project. You probably don&amp;rsquo;t want to set a layout on every file in your project - like css files, for example - so you can also specify a &lt;code&gt;type&lt;/code&gt; value under the &lt;code&gt;scope&lt;/code&gt; key.</source>
          <target state="translated">ここでは、 &lt;code&gt;values&lt;/code&gt; をパス &lt;code&gt;scope&lt;/code&gt; 存在するすべてのファイルにスコープしています。パスは空の文字列として設定されるため、プロジェクト内の&lt;strong&gt;すべてのファイル&lt;/strong&gt;に適用されます。プロジェクト内のすべてのファイル（CSSファイルなど）にレイアウトを設定したくない場合は、 &lt;code&gt;scope&lt;/code&gt; キーの下に &lt;code&gt;type&lt;/code&gt; 値を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="f67ca0046b6f7d123003b1d0cfb9b27a13c9adf6" translate="yes" xml:space="preserve">
          <source>Hey, that&amp;rsquo;s pretty neat, but what about showing just some of your posts that are related to each other? For that you can use any of the &lt;a href=&quot;../frontmatter/index&quot;&gt;variables definable in Front Matter&lt;/a&gt;. In the &amp;ldquo;typical post&amp;rdquo; section you can see how to define categories. Simply add the categories to your Front Matter as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yaml list&lt;/a&gt;.</source>
          <target state="translated">ちょっと、それはかなりきれいですが、互いに関連しているあなたの投稿の一部だけを表示するのはどうですか？そのためには&lt;a href=&quot;../frontmatter/index&quot;&gt;、Front Matterで定義可能な&lt;/a&gt;任意の変数を使用できます。「典型的な投稿」セクションでは、カテゴリを定義する方法を見ることができます。カテゴリを&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yamlリスト&lt;/a&gt;としてフロントマターに追加するだけです。</target>
        </trans-unit>
        <trans-unit id="45836a888498c251d1391be7619c510e1b094a79" translate="yes" xml:space="preserve">
          <source>Highlighting code snippets</source>
          <target state="translated">コードスニペットのハイライト</target>
        </trans-unit>
        <trans-unit id="ac066591edb7d47406e88eed7ba536040a82daf4" translate="yes" xml:space="preserve">
          <source>Homepage</source>
          <target state="translated">Homepage</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="3c3d2c6f4afae2bd1dd22fa5ecd616951d8fd75a" translate="yes" xml:space="preserve">
          <source>Hooks are registered to a container and an event name. To register one, you call Jekyll::Hooks.register, and pass the container, event name, and code to call whenever the hook is triggered. For example, if you want to execute some custom functionality every time Jekyll renders a post, you could register a hook like this:</source>
          <target state="translated">フックはコンテナとイベント名に登録されます。登録するには、Jekyll::Hooks.register を呼び出し、フックがトリガーされたときに呼び出すコンテナ、イベント名、コードを渡します。例えば、Jekyllが投稿をレンダリングするたびにカスタム機能を実行したい場合、次のようなフックを登録することができます。</target>
        </trans-unit>
        <trans-unit id="8e47e0b033171698511eb98255ea2c5ea9bc873f" translate="yes" xml:space="preserve">
          <source>Hooks are registered to an owner and an event name. To register one, you call &lt;code&gt;Jekyll::Hooks.register&lt;/code&gt;, and pass the hook owner, event name, and code to call whenever the hook is triggered. For example, if you want to execute some custom functionality every time Jekyll renders a page, you could register a hook like this:</source>
          <target state="translated">フックはオーナーとイベント名に登録されています。登録するには、 &lt;code&gt;Jekyll::Hooks.register&lt;/code&gt; を呼び出し、フックの所有者、イベント名、およびフックがトリガーされるたびに呼び出すコードを渡します。たとえば、Jekyllがページをレンダリングするたびにカスタム機能を実行する場合は、次のようなフックを登録できます。</target>
        </trans-unit>
        <trans-unit id="52a6bd52dd8761d529cd931ac21db2628083f1bb" translate="yes" xml:space="preserve">
          <source>Hooks for custom Jekyll objects</source>
          <target state="translated">カスタム Jekyll オブジェクト用のフック</target>
        </trans-unit>
        <trans-unit id="a2416f84594d038f1f6e52aa6cd5d7d79145d052" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock, zero-padded from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..23)</source>
          <target state="translated">1日の時間、24時間制、投稿の &lt;code&gt;date&lt;/code&gt; 前書きからゼロが埋め込まれます。（00..23）</target>
        </trans-unit>
        <trans-unit id="c4ca57faecef53b5cde020963e025ccad78ed174" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock, zero-padded from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..23)</source>
          <target state="translated">1日の時間、24時間制、投稿の &lt;code&gt;date&lt;/code&gt; 前付けからゼロが埋め込まれます。（00..23）</target>
        </trans-unit>
        <trans-unit id="ee6a4883cb5b0b2ebbd4b69d7e1663e3a14e6653" translate="yes" xml:space="preserve">
          <source>How I&amp;rsquo;m using Jekyll in 2016</source>
          <target state="translated">2016年のJekyllの使用方法</target>
        </trans-unit>
        <trans-unit id="95885b1160ade6b19f2fc26175b00e5522fc969a" translate="yes" xml:space="preserve">
          <source>How to Contribute</source>
          <target state="translated">貢献の仕方</target>
        </trans-unit>
        <trans-unit id="9ba94163904d5ef671e393d069e9994bb2d8366f" translate="yes" xml:space="preserve">
          <source>How to file a bug</source>
          <target state="translated">バグ報告の方法</target>
        </trans-unit>
        <trans-unit id="50e17c2b0d1c4cebe485ddc4e68acd8d6c190831" translate="yes" xml:space="preserve">
          <source>If a post has multiple categories, Jekyll will create a hierarchy (e.g. &lt;code&gt;/work-2-progress/category2&lt;/code&gt;). Also Jekyll automatically parses out double slashes in the URLs, so if no categories are present, it will ignore this.</source>
          <target state="translated">投稿に複数のカテゴリがある場合、Jekyllは階層を作成します（例： &lt;code&gt;/work-2-progress/category2&lt;/code&gt; ）。また、JekyllはURL内の二重スラッシュを自動的に解析するため、カテゴリが存在しない場合、これは無視されます。</target>
        </trans-unit>
        <trans-unit id="291d7409a971d7df4abbe39550e6a05f09698835" translate="yes" xml:space="preserve">
          <source>If a site has 12 posts and specifies &lt;code&gt;paginate: 5&lt;/code&gt;, Jekyll will write &lt;code&gt;blog/index.html&lt;/code&gt; with the first 5 posts, &lt;code&gt;blog/page2/index.html&lt;/code&gt; with the next 5 posts and &lt;code&gt;blog/page3/index.html&lt;/code&gt; with the last 2 posts into the destination directory.</source>
          <target state="translated">サイトは12枚のポストと指定されている場合 &lt;code&gt;paginate: 5&lt;/code&gt; 、ジキルは書きます &lt;code&gt;blog/index.html&lt;/code&gt; 、最初の5つのポストとの &lt;code&gt;blog/page2/index.html&lt;/code&gt; 次の5つのポストに及び &lt;code&gt;blog/page3/index.html&lt;/code&gt; 最後の2で宛先ディレクトリに投稿します。</target>
        </trans-unit>
        <trans-unit id="753f258bd8b49faefa62db5054137276faf7fdae" translate="yes" xml:space="preserve">
          <source>If all goes well, all steps will be green and the built assets will now exist on the &lt;code&gt;gh-pages&lt;/code&gt; branch.</source>
          <target state="translated">すべてがうまくいけば、すべてのステップが緑色になり、ビルドされたアセットが &lt;code&gt;gh-pages&lt;/code&gt; ブランチに存在するようになります。</target>
        </trans-unit>
        <trans-unit id="e839bd7b237c4e2b6a6edc7b40c67990c8dbadf4" translate="yes" xml:space="preserve">
          <source>If both metadata keys have been defined properly, &lt;code&gt;order&lt;/code&gt; list takes precedence.</source>
          <target state="translated">両方のメタデータキーが適切に定義されている場合、 &lt;code&gt;order&lt;/code&gt; リストが優先されます。</target>
        </trans-unit>
        <trans-unit id="7bf549bc2141e74e473c727a38f9ea61933e2f5c" translate="yes" xml:space="preserve">
          <source>If it is not already installed by your host, you can do it yourself:</source>
          <target state="translated">ホストがインストールしていない場合は、自分でインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="6bfd9b131d8fbc9ebadd0174814fa75131d24f89" translate="yes" xml:space="preserve">
          <source>If set, this specifies the layout file to use. Use the layout file name without the file extension. Layout files must be placed in the &lt;code&gt;_layouts&lt;/code&gt; directory.</source>
          <target state="translated">設定されている場合、これは使用するレイアウトファイルを指定します。ファイル拡張子なしのレイアウトファイル名を使用します。レイアウトファイルは、 &lt;code&gt;_layouts&lt;/code&gt; ディレクトリに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="16e5f3a38e925cad6f35c5b5ac5bc1f29a9cb6c1" translate="yes" xml:space="preserve">
          <source>If the `jekyll new` command prints the error &quot;Your user account isn't allowed to install to the system RubyGems&quot;, see the &quot;Running Jekyll as Non-Superuser&quot; instructions in &lt;a href=&quot;../../troubleshooting/index#no-sudo&quot;&gt;Troubleshooting&lt;/a&gt;.</source>
          <target state="translated">`jekyll new`コマンドで「ユーザーアカウントをシステムRubyGemsにインストールすることは許可されていません」というエラーが表示される場合は、&lt;a href=&quot;../../troubleshooting/index#no-sudo&quot;&gt;トラブルシューティングの&lt;/a&gt;「スーパーユーザー以外としてのJekyllの実行」の手順を参照してください。</target>
        </trans-unit>
        <trans-unit id="9238236f6534e05493e0318455680c7da2a905f1" translate="yes" xml:space="preserve">
          <source>If the file does not have YAML front matter, it will simply be copied over into the resulting site.</source>
          <target state="translated">ファイルがYAMLフロントマターを持っていない場合、結果のサイトに単純にコピーされます。</target>
        </trans-unit>
        <trans-unit id="dc84747683fe22b5b1a638bef3a4246c6fff3644" translate="yes" xml:space="preserve">
          <source>If the file does not have front matter, it will simply be copied over into the resulting site.</source>
          <target state="translated">ファイルにフロントマターがない場合は、単に結果のサイトにコピーされます。</target>
        </trans-unit>
        <trans-unit id="b47324bc5709f19cd71b92fd22bdfb47be6f6ed7" translate="yes" xml:space="preserve">
          <source>If the file has &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; at the top, it will be rendered.</source>
          <target state="translated">ファイルの上部に&lt;a href=&quot;../front-matter/index&quot;&gt;フロントマター&lt;/a&gt;がある場合は、レンダリングされます。</target>
        </trans-unit>
        <trans-unit id="52f8569e79b956dbe48e729796e8f13c33d30812" translate="yes" xml:space="preserve">
          <source>If the file has &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; at the top, it will be rendered.</source>
          <target state="translated">ファイルの上部に&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLの前付け&lt;/a&gt;がある場合は、レンダリングされます。</target>
        </trans-unit>
        <trans-unit id="6f2f94ff051b156124d9bbb1c67ff42cbd835af7" translate="yes" xml:space="preserve">
          <source>If the page being processed is a Post, this contains a list of up to ten related Posts. By default, these are the ten most recent posts. For high quality but slow to compute results, run the &lt;code&gt;jekyll&lt;/code&gt; command with the &lt;code&gt;--lsi&lt;/code&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;latent semantic indexing&lt;/a&gt;) option. Also note GitHub Pages does not support the &lt;code&gt;lsi&lt;/code&gt; option when generating sites.</source>
          <target state="translated">処理中のページが投稿の場合、これには最大10個の関連する投稿のリストが含まれます。デフォルトでは、これらは最新の10件の投稿です。高品質しかし、計算結果に遅いために、実行 &lt;code&gt;jekyll&lt;/code&gt; とコマンドを &lt;code&gt;--lsi&lt;/code&gt; （&lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;潜在的意味索引&lt;/a&gt;）オプション。また、GitHub Pagesはサイトの生成時に &lt;code&gt;lsi&lt;/code&gt; オプションをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="d641f21c96839fd713c161d3c90256c3c5ff7da7" translate="yes" xml:space="preserve">
          <source>If you already have a full &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; development environment with all headers and &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; installed (see Jekyll&amp;rsquo;s &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt;), you can create a new Jekyll site by doing the following:</source>
          <target state="translated">すべてのヘッダーと&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGemsが&lt;/a&gt;インストールされた完全な&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt;開発環境がすでにある場合（Jekyllの&lt;a href=&quot;../installation/index#requirements&quot;&gt;要件を&lt;/a&gt;参照）、次の手順で新しいJekyllサイトを作成できます。</target>
        </trans-unit>
        <trans-unit id="08ef134f574dec2a4a371ee77d3cc3d6d4b33a08" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt; or another JavaScript templating language that conflicts with the &lt;a href=&quot;../liquid/index&quot;&gt;Liquid template syntax&lt;/a&gt;, you will need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">あなたが使用している場合は&lt;a href=&quot;https://mustache.github.io&quot;&gt;口ひげ&lt;/a&gt;かと競合することを他のJavaScriptテンプレート言語&lt;a href=&quot;../liquid/index&quot;&gt;リキッドテンプレートの構文は&lt;/a&gt;、あなたが場所にする必要があります &lt;code&gt;{% raw %}&lt;/code&gt; と &lt;code&gt;{% endraw %}&lt;/code&gt; あなたのコードの周りにタグを。</target>
        </trans-unit>
        <trans-unit id="1c3e668ae49129238e3243fbe784aef06c65fe75" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt; or another JavaScript templating language that conflicts with the &lt;a href=&quot;../templates/index&quot;&gt;Liquid template syntax&lt;/a&gt;, you will need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">&lt;a href=&quot;../templates/index&quot;&gt;Liquidテンプレートの構文&lt;/a&gt;と競合する&lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt;または別のJavaScriptテンプレート言語を使用している場合は、コードの前後に &lt;code&gt;{% raw %}&lt;/code&gt; および &lt;code&gt;{% endraw %}&lt;/code&gt; タグを配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="0ed1e0d2a9dbfbe50531ee5b5a5b6ba715d0f7eb" translate="yes" xml:space="preserve">
          <source>If you are using Sass &lt;code&gt;@import&lt;/code&gt; statements, you&amp;rsquo;ll need to ensure that your &lt;code&gt;sass_dir&lt;/code&gt; is set to the base directory that contains your Sass files. You can do that thusly:</source>
          <target state="translated">Sass &lt;code&gt;@import&lt;/code&gt; ステートメントを使用している場合は、 &lt;code&gt;sass_dir&lt;/code&gt; がSassファイルを含むベースディレクトリに設定されていることを確認する必要があります。あなたはこうしてそれを行うことができます：</target>
        </trans-unit>
        <trans-unit id="bb5e4a12cfe3aacf0a4395c36e1bdfec8fdf450f" translate="yes" xml:space="preserve">
          <source>If you are using Sass &lt;code&gt;@import&lt;/code&gt; statements, you&amp;rsquo;ll need to ensure that your &lt;code&gt;sass_dir&lt;/code&gt; is set to the base directory that contains your Sass files:</source>
          <target state="translated">Sass &lt;code&gt;@import&lt;/code&gt; ステートメントを使用している場合は、 &lt;code&gt;sass_dir&lt;/code&gt; がSassファイルを含むベースディレクトリに設定されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="28a432b4772235d9fdcee272275536f400244d55" translate="yes" xml:space="preserve">
          <source>If you are using Windows 10 Anniversary Update, the easiest way to run Jekyll is by &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;installing&lt;/a&gt; the new Bash on Ubuntu on Windows.</source>
          <target state="translated">Windows 10 Anniversary Updateを使用している場合、Jekyllを実行する最も簡単な方法は、Windows上のUbuntuに新しいBashを&lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;インストールする&lt;/a&gt;ことです。</target>
        </trans-unit>
        <trans-unit id="2a81cb095a8d568b4ef014280b4015ce988fdab9" translate="yes" xml:space="preserve">
          <source>If you are using Windows 10 version 1607 or later, another option to run Jekyll is by &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;installing&lt;/a&gt; the Windows Subsystem for Linux.</source>
          <target state="translated">Windows 10バージョン1607以降を使用している場合、Jekyllを実行する別のオプションは、Linux用のWindowsサブシステムを&lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;インストールする&lt;/a&gt;ことです。</target>
        </trans-unit>
        <trans-unit id="2a4c58b5be6464946cbf57593a4dc9dc48e866b2" translate="yes" xml:space="preserve">
          <source>If you are using a language that contains curly braces, you will likely need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">中括弧を含む言語を使用している場合は、コードの前後に &lt;code&gt;{% raw %}&lt;/code&gt; および &lt;code&gt;{% endraw %}&lt;/code&gt; タグを配置する必要がある可能性があります。</target>
        </trans-unit>
        <trans-unit id="43280c8d089211df31d449a663b503e07e058bb0" translate="yes" xml:space="preserve">
          <source>If you are using a language that contains curly braces, you will likely need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code. Since Jekyll 4.0 , you can add &lt;code&gt;render_with_liquid: false&lt;/code&gt; in your front matter to disable Liquid entirely for a particular document.</source>
          <target state="translated">あなたは中括弧が含まれている言語を使用している場合、あなたはおそらく場所にする必要があります &lt;code&gt;{% raw %}&lt;/code&gt; と &lt;code&gt;{% endraw %}&lt;/code&gt; あなたのコードの周りのタグ。Jekyll 4.0以降、フロントマターに &lt;code&gt;render_with_liquid: false&lt;/code&gt; を追加して、特定のドキュメントに対してLiquidを完全に無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="213db0da911c55c4f2731ecd97c211b394f06562" translate="yes" xml:space="preserve">
          <source>If you are using base-url option like:</source>
          <target state="translated">のようなbase-urlオプションを使用している場合。</target>
        </trans-unit>
        <trans-unit id="d35638d8ed6e8b486e57c45fbf52ce1a8ba65712" translate="yes" xml:space="preserve">
          <source>If you come across a bug, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;create an issue&lt;/a&gt; on GitHub describing the problem and any work-arounds you find so we can document it here for others.</source>
          <target state="translated">あなたがバグに遭遇した場合は、してください&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;、問題作成&lt;/a&gt;、我々は他の人のためにここでそれを文書化することができるようにあなたが見つける問題を説明GitHubの上や任意の回避策を。</target>
        </trans-unit>
        <trans-unit id="8703fee3ae2012b8a53fc6cc2adddae7042dfc8d" translate="yes" xml:space="preserve">
          <source>If you come across anything along the way that we haven&amp;rsquo;t covered, or if you know of a tip you think others would find handy, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; and we&amp;rsquo;ll see about including it in this guide.</source>
          <target state="translated">私たちがカバーしていない方法で何かに遭遇した場合、または他の人が便利だと思うヒントを知っている場合は&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;、問題&lt;/a&gt;を提出してください。このガイドにそれを含めることについて確認します。</target>
        </trans-unit>
        <trans-unit id="1b5ec381e23f973cc13dece96999c3131002c2bf" translate="yes" xml:space="preserve">
          <source>If you do preview your theme locally, be sure to add &lt;code&gt;/_site&lt;/code&gt; to your theme&amp;rsquo;s &lt;code&gt;.gitignore&lt;/code&gt; file to prevent the compiled site from also being included when you distribute your theme.</source>
          <target state="translated">テーマをローカルでプレビューする場合は、テーマの &lt;code&gt;.gitignore&lt;/code&gt; ファイルに &lt;code&gt;/_site&lt;/code&gt; を追加して、テーマを配布するときにコンパイル済みサイトも含まれないようにしてください。</target>
        </trans-unit>
        <trans-unit id="f284c06984fce66f7dd57a7b4b5f2ec076b195fe" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like the automatically-generated post excerpt, it can be explicitly overridden by adding an &lt;code&gt;excerpt&lt;/code&gt; value to your post&amp;rsquo;s YAML Front Matter. Alternatively, you can choose to define a custom &lt;code&gt;excerpt_separator&lt;/code&gt; in the post&amp;rsquo;s YAML front matter:</source>
          <target state="translated">自動生成された投稿の抜粋が気に入らない場合は、 &lt;code&gt;excerpt&lt;/code&gt; 値を投稿のYAMLフロントマターに追加することで明示的にオーバーライドできます。または、投稿のYAML前 &lt;code&gt;excerpt_separator&lt;/code&gt; にカスタムexcerpt_separatorを定義することを選択できます。</target>
        </trans-unit>
        <trans-unit id="d8dcbea52725084b044622cd5f2ef094e993b82b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify any permalink setting, Jekyll uses the above pattern as the default.</source>
          <target state="translated">パーマリンク設定を指定しない場合、Jekyllは上記のパターンをデフォルトとして使用します。</target>
        </trans-unit>
        <trans-unit id="dcb9485c8b5e90e3f365ed37424df30d5e0be640" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want file extensions (&lt;code&gt;.html&lt;/code&gt;) to appear in your page URLs (file extensions are the default), you can choose a &lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;permalink style&lt;/a&gt; that has a trailing slash instead of a file extension.</source>
          <target state="translated">ファイル拡張子（ &lt;code&gt;.html&lt;/code&gt; ）をページのURLに表示したくない場合（ファイル拡張子はデフォルトです）、ファイル拡張子の代わりにスラッシュが付いた&lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;パーマリンクスタイル&lt;/a&gt;を選択できます。</target>
        </trans-unit>
        <trans-unit id="691e1ac95cea8ad1bfd352b94e199cf2238e92d8" translate="yes" xml:space="preserve">
          <source>If you don't want to repeat your frequently used front matter variables over and over, define &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;defaults&lt;/a&gt; for them and only override them where necessary (or not at all). This works both for predefined and custom variables.</source>
          <target state="translated">頻繁に使用するフロントマター変数を何度も繰り返したくない場合は、それらの&lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;デフォルト&lt;/a&gt;を定義し、必要な場合にのみ（またはまったくオーバーライドしないで）オーバーライドします。これは、事前定義された変数とカスタム変数の両方で機能します。</target>
        </trans-unit>
        <trans-unit id="53dcae4af8a7270750576a8ee8bba86266df85af" translate="yes" xml:space="preserve">
          <source>If you don't want to repeat your frequently used front matter variables over and over, just define &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaults&lt;/a&gt; for them and only override them where necessary (or not at all). This works both for predefined and custom variables.</source>
          <target state="translated">頻繁に使用する前置変数を繰り返し使用したくない場合は、それらの&lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;デフォルト&lt;/a&gt;を定義し、必要な場合のみ（またはまったく）オーバーライドしないでください。これは、事前定義変数とカスタム変数の両方で機能します。</target>
        </trans-unit>
        <trans-unit id="695dbec8f8c7d62ab7d2637fbd3d02db37fa7dca" translate="yes" xml:space="preserve">
          <source>If you elect to use one of the above methods to install Ruby, it might be necessary to modify your &lt;code&gt;$PATH&lt;/code&gt; variable using the following command:</source>
          <target state="translated">上記の方法のいずれかを使用してRubyをインストールする場合は、次のコマンドを使用して &lt;code&gt;$PATH&lt;/code&gt; 変数を変更する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="d0daf76ccc8900e401691ef193ac3cfdb207f8ba" translate="yes" xml:space="preserve">
          <source>If you encounter any errors during this process, check that you have installed all the prerequisites in &lt;a href=&quot;installation/index#requirements&quot;&gt;Requirements&lt;/a&gt;. If you still have issues, see &lt;a href=&quot;troubleshooting/index#configuration-problems&quot;&gt;Troubleshooting&lt;/a&gt;.</source>
          <target state="translated">このプロセス中にエラーが発生した場合は、&lt;a href=&quot;installation/index#requirements&quot;&gt;要件の&lt;/a&gt;すべての前提条件がインストールされていることを確認してください。それでも問題が解決しない場合は、&lt;a href=&quot;troubleshooting/index#configuration-problems&quot;&gt;トラブルシューティングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="78ac4df433e508538f8c91dafb01e421b709b72f" translate="yes" xml:space="preserve">
          <source>If you encounter any unexpected errors during the above, please refer to the &lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;troubleshooting&lt;/a&gt; page or the already-mentioned &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt; page, as you might be missing development headers or other prerequisites.</source>
          <target state="translated">上記の間に予期しないエラーが発生した場合は、&lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;トラブルシューティング&lt;/a&gt;ページまたは前述の&lt;a href=&quot;../installation/index#requirements&quot;&gt;要件&lt;/a&gt;ページを参照してください。開発ヘッダーやその他の前提条件が不足している可能性があります。</target>
        </trans-unit>
        <trans-unit id="419149f36b3a43f81bd8852b1793187c1d0de326" translate="yes" xml:space="preserve">
          <source>If you encounter errors during gem installation, you may need to install the header files for compiling extension modules for Ruby 2.x This can be done on Ubuntu or Debian by running:</source>
          <target state="translated">gemのインストール中にエラーが発生した場合は、Ruby 2.x用の拡張モジュールをコンパイルするためのヘッダファイルをインストールする必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="bc681b212f4599ce7e31a75ab7408667783b5d07" translate="yes" xml:space="preserve">
          <source>If you ever run into problems installing or using Jekyll, here are a few tips that might be of help. If the problem you&amp;rsquo;re experiencing isn&amp;rsquo;t covered below, &lt;strong&gt;please &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;check out our other help resources&lt;/a&gt;&lt;/strong&gt; as well.</source>
          <target state="translated">Jekyllのインストールまたは使用で問題が発生した場合は、以下のヒントを参考にしてください。発生している問題が以下に記載されていない場合は&lt;strong&gt;&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;、他のヘルプリソース&lt;/a&gt;&lt;/strong&gt;も&lt;strong&gt;確認して&lt;/strong&gt;&lt;strong&gt;ください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bcaae47dde1bccae46283be925cd88f5bb4ac8bc" translate="yes" xml:space="preserve">
          <source>If you have a Jekyll plugin that you would like to see added to this list, you should &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;read the contributing page&lt;/a&gt; to find out how to make that happen.</source>
          <target state="translated">このリストに追加したいJekyllプラグインがある場合は&lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;、投稿ページ&lt;/a&gt;を読んで、それを実現する方法を見つけてください。</target>
        </trans-unit>
        <trans-unit id="83baaab7df26fe688de694edde9457dbded438f4" translate="yes" xml:space="preserve">
          <source>If you have a lot of pages, you can organize them into subfolders. The same subfolders that are used to group your pages in your project&amp;rsquo;s source will then exist in the &lt;code&gt;_site&lt;/code&gt; folder when your site builds. However, when a page has a &lt;em&gt;different&lt;/em&gt; permalink set in the front matter, the subfolder at &lt;code&gt;_site&lt;/code&gt; changes accordingly.</source>
          <target state="translated">ページがたくさんある場合は、それらをサブフォルダーに整理できます。プロジェクトのソースでページをグループ化するために使用されるのと同じサブフォルダーが、サイトのビルド時に &lt;code&gt;_site&lt;/code&gt; フォルダーに存在します。ただし、ページのフロントマターに&lt;em&gt;異なる&lt;/em&gt;パーマリンクが設定されている場合、それに応じて &lt;code&gt;_site&lt;/code&gt; のサブフォルダーが変更されます。</target>
        </trans-unit>
        <trans-unit id="ae769a5e5cf97ef3147fb61d183e310b175222ef" translate="yes" xml:space="preserve">
          <source>If you have a lot of pages, you can organize those pages into subfolders. The same subfolders that are used to group your pages in our project&amp;rsquo;s source will exist in the &lt;code&gt;_site&lt;/code&gt; folder when your site builds.</source>
          <target state="translated">多数のページがある場合は、それらのページをサブフォルダーに整理できます。プロジェクトのソースでページをグループ化するために使用されるのと同じサブフォルダーが、サイトの構築時に &lt;code&gt;_site&lt;/code&gt; フォルダーに存在します。</target>
        </trans-unit>
        <trans-unit id="5bad37a14e75aa6498e803b19d46fb965756f922" translate="yes" xml:space="preserve">
          <source>If you have a new markup language you&amp;rsquo;d like to use with your site, you can include it by implementing your own converter. Both the Markdown and &lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;Textile&lt;/a&gt; markup languages are implemented using this method.</source>
          <target state="translated">サイトで使用したい新しいマークアップ言語がある場合は、独自のコンバーターを実装してそれを含めることができます。マークダウン言語と&lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;テキスタイル&lt;/a&gt;マークアップ言語の両方が、このメソッドを使用して実装されています。</target>
        </trans-unit>
        <trans-unit id="5df5d74f07c47f2eb7598f9ac1144208de07b108" translate="yes" xml:space="preserve">
          <source>If you have a question about using Jekyll, start a discussion on the &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Forum&lt;/a&gt; or &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jekyll&quot;&gt;StackOverflow&lt;/a&gt;</source>
          <target state="translated">Jekyllの使用について質問がある場合は、&lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyllフォーラム&lt;/a&gt;または&lt;a href=&quot;https://stackoverflow.com/questions/tagged/jekyll&quot;&gt;StackOverflowで&lt;/a&gt;ディスカッションを開始してください</target>
        </trans-unit>
        <trans-unit id="11e684240f96bf103554d83d8af061e74dfe3c4d" translate="yes" xml:space="preserve">
          <source>If you have direct access to the deployment web server, the process is essentially the same, except you might have other methods available to you (such as &lt;code&gt;scp&lt;/code&gt;, or even direct filesystem access) for transferring the files. Just remember to make sure the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder get placed in the appropriate web root directory for your web server.</source>
          <target state="translated">デプロイメントWebサーバーに直接アクセスできる場合、プロセスは基本的に同じですが、ファイルを転送するために他の方法（ &lt;code&gt;scp&lt;/code&gt; やファイルシステムへの直接アクセスなど）を使用できる場合があります。生成された &lt;code&gt;_site&lt;/code&gt; フォルダーの内容がWebサーバーの適切なWebルートディレクトリに配置されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="637cf5bb125e71dc601be35ffda20c19e2ee577a" translate="yes" xml:space="preserve">
          <source>If you have direct access to the deployment web server, the process is essentially the same, except you might have other methods available to you (such as &lt;code&gt;scp&lt;/code&gt;, or even direct filesystem access) for transferring the files. Remember to make sure the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder get placed in the appropriate web root directory for your web server.</source>
          <target state="translated">デプロイメントWebサーバーに直接アクセスできる場合、プロセスは基本的に同じですが、ファイルを転送するために他の方法（ &lt;code&gt;scp&lt;/code&gt; 、またはファイルシステムへの直接アクセスなど）を使用できる場合があります。生成された &lt;code&gt;_site&lt;/code&gt; フォルダーの内容が、Webサーバーの適切なWebルートディレクトリに配置されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="fe535a62e54177c3a383406390df61e1e1cc7866" translate="yes" xml:space="preserve">
          <source>If you have page snippets that you use repeatedly across your site, an &lt;a href=&quot;../../includes/index&quot;&gt;include&lt;/a&gt; is the perfect way to make this more maintainable.</source>
          <target state="translated">サイト全体で繰り返し使用するページスニペットがある場合、&lt;a href=&quot;../../includes/index&quot;&gt;インクルード&lt;/a&gt;はこれをより保守しやすくするための完璧な方法です。</target>
        </trans-unit>
        <trans-unit id="5eb091944ffc4551a59bb8692f2615682ca2403a" translate="yes" xml:space="preserve">
          <source>If you have pages organized into subfolders in your source folder and want to flatten them in the root folder on build, you must add the &lt;a href=&quot;../permalinks/index&quot;&gt;permalink&lt;/a&gt; property directly in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">ソースフォルダー内のサブフォルダーに整理されたページがあり、ビルド時にルートフォルダーでそれらをフラット化したい場合は、次のようにページの前付けに直接&lt;a href=&quot;../permalinks/index&quot;&gt;パーマリンク&lt;/a&gt;プロパティを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="0577f8860296868fa98d8d8f4df1bfbc54574ecc" translate="yes" xml:space="preserve">
          <source>If you have small page snippets that you want to include in multiple places on your site, save the snippets as &lt;em&gt;include files&lt;/em&gt; and insert them where required, by using the &lt;code&gt;include&lt;/code&gt; tag:</source>
          <target state="translated">サイトの複数の場所に含める小さなページスニペットがある場合は、スニペットを&lt;em&gt;インクルードファイル&lt;/em&gt;として保存し、 &lt;code&gt;include&lt;/code&gt; タグを使用して必要な場所に挿入し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e4dcbf97134ec15dac093fc5587622568f5e7a06" translate="yes" xml:space="preserve">
          <source>If you have the theme gem, you can (if you desire) run &lt;code&gt;bundle update&lt;/code&gt; to update all gems in your project. Or you can run &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt;, replacing &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; with the theme name, such as &lt;code&gt;minima&lt;/code&gt;, to just update the theme gem. Any new files or updates the theme developer has made (such as to stylesheets or includes) will be pulled into your project automatically.</source>
          <target state="translated">テーマgemがある場合は、（必要に応じて） &lt;code&gt;bundle update&lt;/code&gt; を実行して、プロジェクト内のすべてのgemを更新できます。または、 &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt; 実行して、 &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; をテーマ名（ &lt;code&gt;minima&lt;/code&gt; など）に置き換えて、テーマgemを更新することもできます。テーマ開発者が作成した新しいファイルや更新（スタイルシートやインクルードなど）は、プロジェクトに自動的に取り込まれます。</target>
        </trans-unit>
        <trans-unit id="2af9aac0e83cca3a7b6edb3afed5cb21b5ce923a" translate="yes" xml:space="preserve">
          <source>If you installed the above - specifically on Fedora 23 - but the extensions would still not compile, you are probably running a Fedora image that misses the &lt;code&gt;redhat-rpm-config&lt;/code&gt; package. To solve this, simply run:</source>
          <target state="translated">上記、特にFedora 23をインストールしたが、拡張機能がコンパイルされない場合は、おそらく &lt;code&gt;redhat-rpm-config&lt;/code&gt; パッケージがないFedoraイメージを実行しています。これを解決するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="7d5ca65d123a97afb7c4de424400cec844b7cc8b" translate="yes" xml:space="preserve">
          <source>If you need your processed blog post URLs to be something other than the site-wide style (default &lt;code&gt;/year/month/day/title.html&lt;/code&gt;), then you can set this variable and it will be used as the final URL.</source>
          <target state="translated">処理したブログ投稿のURLをサイト全体のスタイル（デフォルトは &lt;code&gt;/year/month/day/title.html&lt;/code&gt; ）以外にする必要がある場合は、この変数を設定して、最終的なURLとして使用できます。</target>
        </trans-unit>
        <trans-unit id="1a6d4a67cd0be1ed8225a589b96384dc4dc87421" translate="yes" xml:space="preserve">
          <source>If you organize your posts in subdirectories, you need to include subdirectory path to the post:</source>
          <target state="translated">サブディレクトリで投稿を整理する場合は、サブディレクトリのパスを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="59644a3bec6611d4bbfb69658dbc3ec13b376b50" translate="yes" xml:space="preserve">
          <source>If you organized your categories as &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt;, you will need to restructure your directories to put the categories &lt;em&gt;above&lt;/em&gt; the &lt;code&gt;_posts&lt;/code&gt; directories, as follows: &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt;.</source>
          <target state="translated">カテゴリを &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt; として編成した場合は、ディレクトリを再構成して、次のように &lt;code&gt;_posts&lt;/code&gt; ディレクトリの&lt;em&gt;上&lt;/em&gt;にカテゴリを配置する必要があります &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15e7da8c7232d666a600ffd29e96790343ccd0c8" translate="yes" xml:space="preserve">
          <source>If you prefer configuration as code over GUI, you can generate a &lt;code&gt;buddy.yml&lt;/code&gt; that will create a pipeline with the Jekyll action once you push it to the target branch:</source>
          <target state="translated">GUIよりもコードとして構成を好む場合は、ターゲットブランチにプッシュすると、Jekyllアクションでパイプラインを作成する &lt;code&gt;buddy.yml&lt;/code&gt; を生成できます。</target>
        </trans-unit>
        <trans-unit id="2c5ed4bc716636bfe873be9c1845bd719868a4d7" translate="yes" xml:space="preserve">
          <source>If you run into an issue that a static file can&amp;rsquo;t be found in your production environment during build since v3.2.0 you should set your &lt;a href=&quot;../configuration/environments/index&quot;&gt;environment to &lt;code&gt;production&lt;/code&gt;&lt;/a&gt;. The issue is caused by trying to copy a non-existing symlink.</source>
          <target state="translated">v3.2.0以降のビルド中に本番環境で静的ファイルが見つからないという問題が発生した場合は、&lt;a href=&quot;../configuration/environments/index&quot;&gt;環境を &lt;code&gt;production&lt;/code&gt; &lt;/a&gt;環境に設定する必要があります。この問題は、存在しないシンボリックリンクをコピーしようとしたことが原因で発生します。</target>
        </trans-unit>
        <trans-unit id="d87bce7a50eafecc7cde1bce304d6aef1a746a27" translate="yes" xml:space="preserve">
          <source>If you run into an issue that a static file can&amp;rsquo;t be found in your production environment during build since v3.2.0 you should set your &lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;environment to &lt;code&gt;production&lt;/code&gt;&lt;/a&gt;. The issue is caused by trying to copy a non-existing symlink.</source>
          <target state="translated">v3.2.0以降のビルド中に静的ファイルが本番環境で見つからないという問題が発生した場合は、&lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;環境を &lt;code&gt;production&lt;/code&gt; &lt;/a&gt;環境に設定する必要があります。この問題は、存在しないシンボリックリンクをコピーしようとしたことが原因で発生します。</target>
        </trans-unit>
        <trans-unit id="8a24692597a6a916d6932c56c3b3699b4da36b10" translate="yes" xml:space="preserve">
          <source>If you run into issues installing Jekyll's dependencies which make use of native extensions and are using macOS, you will need to install Xcode and the Command-Line Tools it ships with. Download them in &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt;.</source>
          <target state="translated">ネイティブ拡張を利用してmacOSを使用しているJekyllの依存関係のインストールで問題が発生した場合は、Xcodeとそれに付属するコマンドラインツールをインストールする必要があります。それらを[ &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt; ダウンロードします。</target>
        </trans-unit>
        <trans-unit id="63f6ac72947ee61e3701e918efc95d21e22b41e4" translate="yes" xml:space="preserve">
          <source>If you see the following error when running the &lt;code&gt;jekyll new&lt;/code&gt; command, you can solve it by using the above-described procedure:</source>
          <target state="translated">&lt;code&gt;jekyll new&lt;/code&gt; コマンドの実行中に次のエラーが表示された場合は、上記の手順を使用して解決できます。</target>
        </trans-unit>
        <trans-unit id="870ad99aca29d304fc24ad3ab294442ef63a802d" translate="yes" xml:space="preserve">
          <source>If you specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;, then you will need to move your &lt;code&gt;_drafts&lt;/code&gt; and &lt;code&gt;_posts&lt;/code&gt; directory to &lt;code&gt;my_collections/_drafts&lt;/code&gt; and &lt;code&gt;my_collections/_posts&lt;/code&gt;. Note that, the name of your collections directory cannot start with an underscore (`_`).</source>
          <target state="translated">すべてのコレクションを &lt;code&gt;collections_dir: my_collections&lt;/code&gt; と同じ場所に保存するディレクトリを指定する場合は、 &lt;code&gt;_drafts&lt;/code&gt; および &lt;code&gt;_posts&lt;/code&gt; ディレクトリを &lt;code&gt;my_collections/_drafts&lt;/code&gt; および &lt;code&gt;my_collections/_posts&lt;/code&gt; に移動する必要があります。コレクションディレクトリの名前をアンダースコア（ `_`）で始めることはできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="203d28453b3da20875b1b4f55216eb8f66ab1182" translate="yes" xml:space="preserve">
          <source>If you specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;, then you will need to move your &lt;code&gt;_posts&lt;/code&gt; directory to &lt;code&gt;my_collections/_posts&lt;/code&gt;. Note that, the name of your collections directory cannot start with an underscore (`_`).</source>
          <target state="translated">&lt;code&gt;collections_dir: my_collections&lt;/code&gt; を使用してすべてのコレクションを同じ場所に格納するディレクトリを指定する場合、 &lt;code&gt;_posts&lt;/code&gt; ディレクトリを &lt;code&gt;my_collections/_posts&lt;/code&gt; に移動する必要があります。コレクションディレクトリの名前はアンダースコア（ `_`）で始めることはできません。</target>
        </trans-unit>
        <trans-unit id="152a6851ec832106f1870e82fa9510155e162df2" translate="yes" xml:space="preserve">
          <source>If you specify front matter in a layout, access that via &lt;code&gt;layout&lt;/code&gt;. For example, if you specify &lt;code&gt;class: full_page&lt;/code&gt; in a layout&amp;rsquo;s front matter, that value will be available as &lt;code&gt;layout.class&lt;/code&gt; in the layout and its parents.</source>
          <target state="translated">レイアウトで前付を指定する場合は、layoutを介してそれにアクセスし &lt;code&gt;layout&lt;/code&gt; 。たとえば、レイアウトの前 &lt;code&gt;class: full_page&lt;/code&gt; でclass：full_pageを指定した場合、その値はレイアウトとその親で &lt;code&gt;layout.class&lt;/code&gt; として使用できます。</target>
        </trans-unit>
        <trans-unit id="fc758ea2a58bbed0770047b054fc5a31a9910319" translate="yes" xml:space="preserve">
          <source>If you still have issues, you can download and install new Command Line Tools (such as &lt;code&gt;gcc&lt;/code&gt;) using the following command:</source>
          <target state="translated">それでも問題が解決しない場合は、次のコマンドを使用して、新しいコマンドラインツール（ &lt;code&gt;gcc&lt;/code&gt; など）をダウンロードしてインストールできます。</target>
        </trans-unit>
        <trans-unit id="3f40408167848ab5e0ef03799fbc3e4838fc4b88" translate="yes" xml:space="preserve">
          <source>If you store your Jekyll site in &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; (you are using version control, right?), it&amp;rsquo;s pretty easy to automate the deployment process by setting up a post-update hook in your Git repository, &lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;like this&lt;/a&gt;.</source>
          <target state="translated">あなたがあなたのジキルサイトを保存する場合&lt;a href=&quot;https://git-scm.com/&quot;&gt;にGit&lt;/a&gt;（あなたは右、バージョンコントロールを使用していますか？）、それは、あなたのGitのリポジトリに更新後のフックを設定することにより、展開プロセスを自動化するために非常に簡単です&lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;。このように&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9540f36c3037240d8cea90995f2c2a76090e644d" translate="yes" xml:space="preserve">
          <source>If you think you&amp;rsquo;ve found a bug within Jekyll itself, &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;open an issue&lt;/a&gt;.</source>
          <target state="translated">Jekyll自体にバグを見つけたと思われる場合は&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;、問題を開いてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e92ecdb1ed9493dd4eabcd57a2204713ec491365" translate="yes" xml:space="preserve">
          <source>If you think you&amp;rsquo;ve found a bug within a Jekyll plugin, open an issue in that plugin&amp;rsquo;s repository &amp;mdash; First &lt;a href=&quot;https://rubygems.org/&quot;&gt;look for the plugin on rubygems&lt;/a&gt; then click on the &lt;code&gt;Homepage&lt;/code&gt; link to access the plugin repository.</source>
          <target state="translated">Jekyllプラグイン内でバグを見つけたと思われる場合は、そのプラグインのリポジトリで問題を開きます&amp;mdash;最初&lt;a href=&quot;https://rubygems.org/&quot;&gt;にrubygemsでプラグインを探し&lt;/a&gt;、次に &lt;code&gt;Homepage&lt;/code&gt; リンクをクリックしてプラグインリポジトリにアクセスします。</target>
        </trans-unit>
        <trans-unit id="12a48184851539ccef251a9fea32dc2a0dd1273a" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant if you&amp;rsquo;re running &lt;a href=&quot;../installation/windows/index&quot;&gt;Jekyll on Windows&lt;/a&gt;.</source>
          <target state="translated">UTF-8エンコーディングを使用する場合は、ファイルに &lt;code&gt;BOM&lt;/code&gt; ヘッダー文字が存在しないことを確認してください。存在しないと、Jekyllに非常に悪いことが起こります。これは&lt;a href=&quot;../installation/windows/index&quot;&gt;、WindowsでJekyllを&lt;/a&gt;実行している場合に特に関係があります。</target>
        </trans-unit>
        <trans-unit id="9c5c7747d5156ac128a683ae71080c529b562e3a" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant if you&amp;rsquo;re running &lt;a href=&quot;../windows/index&quot;&gt;Jekyll on Windows&lt;/a&gt;.</source>
          <target state="translated">UTF-8エンコーディングを使用する場合は、 &lt;code&gt;BOM&lt;/code&gt; ヘッダー文字がファイルに存在しないことを確認してください。そうしないと、Jekyllに非常に悪い事態が発生します。これは&lt;a href=&quot;../windows/index&quot;&gt;、WindowsでJekyllを&lt;/a&gt;実行している場合に特に関係があります。</target>
        </trans-unit>
        <trans-unit id="513a6a109d9f46f3d1d111d65d91f74ea48f6618" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant when you&amp;rsquo;re running Jekyll on Windows.</source>
          <target state="translated">UTF-8エンコーディングを使用する場合は、 &lt;code&gt;BOM&lt;/code&gt; ヘッダー文字がファイルに存在しないことを確認してください。そうしないと、Jekyllに非常に悪い事態が発生します。これは、WindowsでJekyllを実行している場合に特に関係があります。</target>
        </trans-unit>
        <trans-unit id="7519b21e43136b2c3303f52f1442a4bc5f55ca7c" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files. If they don&amp;rsquo;t, Jekyll will break. This is especially relevant when you&amp;rsquo;re running Jekyll on Windows.</source>
          <target state="translated">UTF-8エンコーディングを使用する場合は、ファイルに &lt;code&gt;BOM&lt;/code&gt; ヘッダー文字が存在しないことを確認してください。そうでなければ、ジキルは壊れます。これは、WindowsでJekyllを実行している場合に特に関係があります。</target>
        </trans-unit>
        <trans-unit id="ac6a31955e7bb198829c3348c36e9744d447c4d5" translate="yes" xml:space="preserve">
          <source>If you use a permalink style that omits the &lt;code&gt;.html&lt;/code&gt; file extension, each post is rendered as an &lt;code&gt;index.html&lt;/code&gt; file inside a folder with the post&amp;rsquo;s name (for example, &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;.html&lt;/code&gt; ファイル拡張子を省略したパーマリンクスタイルを使用する場合、各投稿は、投稿の名前が付いたフォルダー内の &lt;code&gt;index.html&lt;/code&gt; ファイルとしてレンダリングされます（たとえば、 &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c60bfc7d9e4f2630fffc6a2784feb3b63c67af79" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;--config&lt;/code&gt; flag, Jekyll will ignore your &lt;code&gt;_config.yml&lt;/code&gt; file. Want to merge a custom configuration with the normal configuration? No problem. Jekyll will accept more than one custom config file via the command line. Config files cascade from right to left, such that if I run &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt;, the values in the config files on the right (&lt;code&gt;_config-dev.yml&lt;/code&gt;) overwrite those on the left (&lt;code&gt;_config.yml&lt;/code&gt;) when both contain the same key.</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; フラグを使用すると、Jekyllは &lt;code&gt;_config.yml&lt;/code&gt; ファイルを無視します。カスタム構成を通常の構成とマージしたいですか？問題ない。 Jekyllはコマンドラインから複数のカスタム設定ファイルを受け入れます。構成ファイルは右から左にカスケードします。 &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt; を実行すると、右側の構成ファイル（ &lt;code&gt;_config-dev.yml&lt;/code&gt; ）の値が左側の値（ &lt;code&gt;_config.yml&lt;/code&gt; ）両方に同じキーが含まれている場合。</target>
        </trans-unit>
        <trans-unit id="093409bc16fd6da356b69f3cf640249f766ed8ff" translate="yes" xml:space="preserve">
          <source>If you use the method described above, please remember that the URLs for all posts and pages contain a leading slash. Therefore, concatenating the site baseurl and the post/page url where &lt;code&gt;site.baseurl = /&lt;/code&gt; and &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; will result in two leading slashes, which will break links. It is thus suggested that prefixing with &lt;code&gt;site.baseurl&lt;/code&gt; only be used when the &lt;code&gt;baseurl&lt;/code&gt; is something other than the default of &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">上記の方法を使用する場合は、すべての投稿とページのURLに先頭にスラッシュが含まれていることに注意してください。したがって、 &lt;code&gt;site.baseurl = /&lt;/code&gt; および &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; あるサイトbaseurlとpost / page urlを連結すると、2つの先行スラッシュが発生し、リンクが壊れます。したがって、 &lt;code&gt;baseurl&lt;/code&gt; がデフォルトの &lt;code&gt;/&lt;/code&gt; 以外の場合にのみ、 &lt;code&gt;site.baseurl&lt;/code&gt; の接頭辞を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="27f3b5a86ae85eb00dfec776f201d29c0a6d0425" translate="yes" xml:space="preserve">
          <source>If you want to build for your production environment:</source>
          <target state="translated">本番環境に合わせてビルドするなら</target>
        </trans-unit>
        <trans-unit id="54d25f7a99e4ca948852dc14d5de687e3b1584af" translate="yes" xml:space="preserve">
          <source>If you want to flatten your pages (pull them out of subfolders) in the &lt;code&gt;_site&lt;/code&gt; directory when your site builds (similar to posts), add the &lt;code&gt;permalink&lt;/code&gt; property to the front matter of each page, with no path specified:</source>
          <target state="translated">サイトの構築時に（投稿と同様に） &lt;code&gt;_site&lt;/code&gt; ディレクトリでページをフラット化（サブフォルダーからプル）する場合は、パスを指定せずに、各ページの前付けに &lt;code&gt;permalink&lt;/code&gt; プロパティを追加します。</target>
        </trans-unit>
        <trans-unit id="f4fd5fc834be5433029f508f385d4d410e8fef47" translate="yes" xml:space="preserve">
          <source>If you want to host your site in Amazon S3, you can do so by using the &lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt; application. It will push your site to Amazon S3 where it can be served like any web server, dynamically scaling to almost unlimited traffic. This approach has the benefit of being about the cheapest hosting option available for low-volume blogs as you only pay for what you use.</source>
          <target state="translated">Amazon S3でサイトをホストする場合は、&lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt;アプリケーションを使用してホストできます。それはあなたのサイトをAmazon S3にプッシュし、そこであらゆるウェブサーバーのようにサービスを提供でき、ほとんど無制限のトラフィックに動的にスケーリングします。このアプローチには、使用した分だけを支払うため、少量のブログで利用できる最も安価なホスティングオプションであるという利点があります。</target>
        </trans-unit>
        <trans-unit id="0f193a2d48bc477f05170ef8b36607112f513e30" translate="yes" xml:space="preserve">
          <source>If you want to include a link to a post on your site, the &lt;code&gt;post_url&lt;/code&gt; tag will generate the correct permalink URL for the post you specify.</source>
          <target state="translated">サイトの投稿へのリンクを含める場合、 &lt;code&gt;post_url&lt;/code&gt; タグは指定した投稿の正しいパーマリンクURLを生成します。</target>
        </trans-unit>
        <trans-unit id="3de0868d95be5eca5b95fed7d8f738ea01895123" translate="yes" xml:space="preserve">
          <source>If you want to include this variable in your parameter that you pass to an include, you need to store the entire parameter as a variable before passing it to the include. You can use &lt;code&gt;capture&lt;/code&gt; tags to create the variable:</source>
          <target state="translated">インクルードに渡すパラメーターにこの変数を含める場合、インクルードに渡す前にパラメーター全体を変数として保存する必要があります。あなたは使用することができ &lt;code&gt;capture&lt;/code&gt; 変数を作成するタグ：</target>
        </trans-unit>
        <trans-unit id="a658dae7dbd88f8c356e9279323636361d819861" translate="yes" xml:space="preserve">
          <source>If you want to maintain Jekyll inside your existing Rails app, &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll-Admin&lt;/a&gt; contains drop in code to make this possible. See Jekyll-Admin&amp;rsquo;s &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt; for more details.</source>
          <target state="translated">既存のRailsアプリ内で&lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll&lt;/a&gt;を維持したい場合は、Jekyll-Adminにこれを可能にするためのドロップインコードが含まれています。詳細については、Jekyll-Adminの&lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ec215e282a9ad8aecb2e4fc28cabe6ff27440918" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;../variables/index&quot;&gt;Liquid tags and variables&lt;/a&gt; but don&amp;rsquo;t need anything in your front matter, just leave it empty! The set of triple-dashed lines with nothing in between will still get Jekyll to process your file. (This is useful for things like CSS and RSS feeds!)</source>
          <target state="translated">&lt;a href=&quot;../variables/index&quot;&gt;Liquidタグと変数&lt;/a&gt;を使用したいが、前付けに何も必要ない場合は、空のままにしてください！間に何もない三点鎖線のセットでも、Jekyllはファイルを処理します。（これはCSSやRSSフィードのようなものに役立ちます！）</target>
        </trans-unit>
        <trans-unit id="d1fe99f58a90cab317379dfefe13b26122c4bcda" translate="yes" xml:space="preserve">
          <source>If you wish a specific page to be shown when accessing &lt;code&gt;/my_collection/&lt;/code&gt;, simply add &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; to a page. To list items from the collection, on that page or any other, you can use:</source>
          <target state="translated">&lt;code&gt;/my_collection/&lt;/code&gt; にアクセスするときに特定のページを表示したい場合は、ページに &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; を追加します。コレクションのアイテムを一覧表示するには、そのページまたはその他で、以下を使用できます。</target>
        </trans-unit>
        <trans-unit id="6e19cb6a37691f8463f62bacf36c8b8270dac01f" translate="yes" xml:space="preserve">
          <source>If you wish to specify a custom pattern for the URLs where your Collection pages will reside, you may do so with the &lt;a href=&quot;../permalinks/index&quot;&gt;&lt;code&gt;permalink&lt;/code&gt; property&lt;/a&gt;:</source>
          <target state="translated">コレクションページを配置するURLのカスタムパターンを指定する場合は、&lt;a href=&quot;../permalinks/index&quot;&gt; &lt;code&gt;permalink&lt;/code&gt; プロパティを&lt;/a&gt;使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="92960387c493deb76d50d5b4ca39fda778849568" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Jekyll to create a public-facing, rendered version of each document in your collection, set the &lt;code&gt;output&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in your collection metadata in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">Jekyllでコレクション内の各ドキュメントの公開バージョンを作成する場合は、 &lt;code&gt;_config.yml&lt;/code&gt; のコレクションメタデータで &lt;code&gt;output&lt;/code&gt; キーを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="9118d1b292cfe3be8e42ad850895b79508bc287e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Jekyll to create a rendered page for each document in your collection, you can set the &lt;code&gt;output&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in your collection metadata in &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">Jekyllでコレクション内のドキュメントごとにレンダリングされたページを作成する場合は、 &lt;code&gt;_config.yml&lt;/code&gt; のコレクションメタデータで &lt;code&gt;output&lt;/code&gt; キーを &lt;code&gt;true&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="c98ec53237b3b221ccdc7703ba591ac8f244e25b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to deploy your site to an OpenShift gear, there&amp;rsquo;s &lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;a cartridge for that&lt;/a&gt;.</source>
          <target state="translated">OpenShiftギアにサイトを展開したい場合は&lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;、そのためのカートリッジがあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="998a11f086dc4bb30ed94b741a45b756ab41c2bb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include custom liquid tags in your site, you can do so by hooking into the tagging system. Built-in examples added by Jekyll include the &lt;code&gt;highlight&lt;/code&gt; and &lt;code&gt;include&lt;/code&gt; tags. Below is an example of a custom liquid tag that will output the time the page was rendered:</source>
          <target state="translated">サイトにカスタムのリキッドタグを含めたい場合は、タグ付けシステムにフックすることで実行できます。Jekyllによって追加された組み込みの例には、 &lt;code&gt;highlight&lt;/code&gt; と &lt;code&gt;include&lt;/code&gt; タグが含まれています。以下は、ページがレンダリングされた時間を出力するカスタム液体タグの例です。</target>
        </trans-unit>
        <trans-unit id="017dd07e8fc43764c8236ec7941cbc62c51810e3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to install a development version of Jekyll, the process is a bit more involved. This gives you the advantage of having the latest and greatest, but may be unstable.</source>
          <target state="translated">Jekyllの開発バージョンをインストールする場合は、プロセスが少し複雑になります。これにより、最新かつ最高の利点が得られますが、不安定になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="25ac5c2a33ff747013ef49ea1c32a4b47edaa529" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a Jekyll theme developer (rather than a consumer of themes), you can package up your theme in RubyGems and allow users to install it through Bundler.</source>
          <target state="translated">（テーマのコンシューマーではなく）Jekyllテーマ開発者の場合は、テーマをRubyGemsにパッケージ化し、ユーザーがBundlerを介してインストールできるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="aebf85f03c89a29b9d5ef73ebb61bde1f568e228" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a Jekyll theme developer (rather than just a consumer of themes), you can package up your theme in RubyGems and allow users to install it through Bundler.</source>
          <target state="translated">Jekyllテーマ開発者（テーマの単なるコンシューマーではない）の場合、RubyGemsにテーマをパッケージ化して、ユーザーがBundlerを介してインストールできるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="30853f9ea7df330ef27f58c631ba94376ecf0fa1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re feeling adventurous, you can also initialize a Git repository here. One of the great things about Jekyll is there&amp;rsquo;s no database. All content and site structure are files which a Git repository can version. Using a repository is completely optional but it&amp;rsquo;s a great habit to get into. You can learn more about using Git by reading through the &lt;a href=&quot;https://guides.github.com/introduction/git-handbook/&quot;&gt;Git Handbook&lt;/a&gt;.</source>
          <target state="translated">冒険心がある場合は、ここでGitリポジトリを初期化することもできます。Jekyllの優れた点の1つは、データベースがないことです。すべてのコンテンツとサイト構造は、Gitリポジトリがバージョン管理できるファイルです。リポジトリの使用は完全にオプションですが、それを始めるのは素晴らしい習慣です。Gitの使用について詳しくは、&lt;a href=&quot;https://guides.github.com/introduction/git-handbook/&quot;&gt;Gitハンドブック&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="05442461ae0760b9acad9cfe9447bcf050ac0078" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in browsing these docs on-the-go, install the &lt;code&gt;jekyll-docs&lt;/code&gt; gem and run &lt;code&gt;jekyll docs&lt;/code&gt; in your terminal.</source>
          <target state="translated">これらのドキュメントを外出先で閲覧することに興味がある場合は、 &lt;code&gt;jekyll-docs&lt;/code&gt; gemをインストールし、端末で &lt;code&gt;jekyll docs&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="cc2998d4b75650b0973db36fe0764de9a0198df0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in creating a custom markdown processor, you&amp;rsquo;re in luck! Create a new class in the &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; namespace:</source>
          <target state="translated">カスタムマークダウンプロセッサの作成に興味がある場合は、運がいいです。 &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; 名前空間に新しいクラスを作成します。</target>
        </trans-unit>
        <trans-unit id="22d9269680b724ba017e2778c42901a3d9aa4938" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re looking for support for Jekyll, there are a lot of options:</source>
          <target state="translated">Jekyllのサポートをお探しの場合は、次のようなオプションがあります。</target>
        </trans-unit>
        <trans-unit id="ae542f5575c43a0353a14137a2590f1b7d433422" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing on GitHub Pages you should update only your &lt;code&gt;_config.yml&lt;/code&gt; as GitHub Pages doesn&amp;rsquo;t load plugins via Bundler.</source>
          <target state="translated">GitHub Pagesで公開している場合、GitHub PagesはBundlerを介してプラグインを読み込まないため、 &lt;code&gt;_config.yml&lt;/code&gt; のみを更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="1f3bba13a5e3f222ddefb021448a6a69c6eef520" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing your Jekyll site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, note that GitHub Pages supports only &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;some gem-based themes&lt;/a&gt;. GitHub Pages also supports &lt;a href=&quot;https://help.github.com/articles/adding-a-jekyll-theme-to-your-github-pages-site/#adding-a-jekyll-theme-in-your-sites-_configyml-file&quot;&gt;using any theme hosted on GitHub&lt;/a&gt; using the &lt;code&gt;remote_theme&lt;/code&gt; configuration as if it were a gem-based theme.</source>
          <target state="translated">Jekyllサイトを&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHubPagesで公開&lt;/a&gt;している場合&lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;、GitHubPages&lt;/a&gt;は一部のgemベースのテーマのみをサポートしていることに注意してください。GitHub Pages&lt;a href=&quot;https://help.github.com/articles/adding-a-jekyll-theme-to-your-github-pages-site/#adding-a-jekyll-theme-in-your-sites-_configyml-file&quot;&gt;は、GitHubでホストされ&lt;/a&gt;ているテーマを、gemベースのテーマであるかのように &lt;code&gt;remote_theme&lt;/code&gt; 構成を使用して使用することもサポートしています。</target>
        </trans-unit>
        <trans-unit id="fed2ec52185b236d6b0616d0f7b48112da62f321" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing your Jekyll site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, note that GitHub Pages supports only some gem-based themes. See &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;Supported Themes&lt;/a&gt; in GitHub&amp;rsquo;s documentation to see which themes are supported.</source>
          <target state="translated">Jekyllサイトを&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;で公開する場合、GitHub Pagesは一部のgemベースのテーマしかサポートしていないことに注意してください。GitHubのドキュメントで&lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;サポートさ&lt;/a&gt;れているテーマを参照して、サポートされているテーマを確認してください。</target>
        </trans-unit>
        <trans-unit id="2a243859f76e0d599054d8aa3505651f9b800539" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re running a previous version of macOS, you&amp;rsquo;ll have to install a newer version of Ruby.</source>
          <target state="translated">以前のバージョンのmacOSを実行している場合は、新しいバージョンのRubyをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="48f80dce2fb4e338ea62c4227bb0b96d4641ecf1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re switching to Jekyll from another blogging system, Jekyll&amp;rsquo;s importers can help you with the move. To learn more about importing your site to Jekyll, visit our &lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt;&lt;code&gt;jekyll-import&lt;/code&gt; docs site&lt;/a&gt;.</source>
          <target state="translated">別のブログシステムからJekyllに切り替える場合は、Jekyllのインポーターが移動を支援します。Jekyllへのサイトのインポートの詳細については、&lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt; &lt;code&gt;jekyll-import&lt;/code&gt; docsサイトに&lt;/a&gt;アクセスしてください。</target>
        </trans-unit>
        <trans-unit id="e9b8cf204b37c543bd6f902a9912dc1bc10fb847" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re the kind of person who is using Jekyll, then chances are you&amp;rsquo;ll want to enable syntax highlighting using &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; or &lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge&lt;/a&gt;. You should really &lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;check out how to do that&lt;/a&gt; before you go any farther.</source>
          <target state="translated">Jekyllを使用しているような人であれば、&lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt;または&lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge&lt;/a&gt;を使用して構文の強調表示を有効にしたいと思うかもしれません。先に進む前に&lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;、その方法を&lt;/a&gt;実際に確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c45a730de0f4a66c90fb58a381c30517e30ab21" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unfamiliar with creating Ruby gems, don&amp;rsquo;t worry. Jekyll will help you scaffold a new theme with the &lt;code&gt;new-theme&lt;/code&gt; command. Run &lt;code&gt;jekyll new-theme&lt;/code&gt; with the theme name as an argument.</source>
          <target state="translated">Ruby gemの作成に慣れていない場合でも、心配しないでください。Jekyllは、 &lt;code&gt;new-theme&lt;/code&gt; コマンドで新しいテーマを足場するのに役立ちます。テーマ名を引数として &lt;code&gt;jekyll new-theme&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="e2f1fd80e1acac73721bceb69b6432074f20f49a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unsure of the path, add &lt;code&gt;{{ page.path }}&lt;/code&gt; to the page and it will display the path.</source>
          <target state="translated">パスがわからない場合は、 &lt;code&gt;{{ page.path }}&lt;/code&gt; をページに追加すると、パスが表示されます。</target>
        </trans-unit>
        <trans-unit id="6d0e68810885667c178f7be4a18662c57e20c8df" translate="yes" xml:space="preserve">
          <source>If your Jekyll site has a lot of pages, such as with documentation websites, see the detailed examples in &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;how to build robust navigation for your site&lt;/a&gt;.</source>
          <target state="translated">JekyllサイトにドキュメンテーションWebサイトなどの多くのページがある場合は、サイトの&lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;堅牢なナビゲーションを構築する方法&lt;/a&gt;の詳細な例をご覧ください。</target>
        </trans-unit>
        <trans-unit id="15ad6a68d50f8303e340eccb97ce2ef611de1aca" translate="yes" xml:space="preserve">
          <source>If your generator is contained within a single file, it can be named whatever you want but it should have an &lt;code&gt;.rb&lt;/code&gt; extension. If your generator is split across multiple files, it should be packaged as a Rubygem to be published at https://rubygems.org/. In this case, the name of the gem depends on the availability of the name at that site because no two gems can have the same name.</source>
          <target state="translated">ジェネレーターが単一のファイルに含まれている場合は、任意の名前を付けることができますが、拡張子は &lt;code&gt;.rb&lt;/code&gt; である必要があります。ジェネレーターが複数のファイルに分割されている場合は、https：//rubygems.org/で公開するためにRubygemとしてパッケージ化する必要があります。この場合、2つのgemが同じ名前を持つことはできないため、gemの名前はそのサイトでの名前の可用性によって異なります。</target>
        </trans-unit>
        <trans-unit id="6f07552e08d7e7eb8c68907cfa9ca67e5186c921" translate="yes" xml:space="preserve">
          <source>In 2.x, your iterations over &lt;code&gt;site.collections&lt;/code&gt; yielded an array with the collection label and the collection object as the first and second items, respectively. In 3.x, this complication has been removed and iterations now yield simply the collection object. A simple conversion must be made in your templates:</source>
          <target state="translated">2.xでは、 &lt;code&gt;site.collections&lt;/code&gt; の反復により、コレクションラベルとコレクションオブジェクトをそれぞれ1番目と2番目のアイテムとして持つ配列が生成されました。3.xでは、この複雑化が取り除かれ、反復により、単にコレクションオブジェクトが生成されるようになりました。テンプレートで簡単な変換を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="45281f936e80f86f5e93c43c758e8a1f19af601f" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/members.yml&lt;/code&gt;:</source>
          <target state="translated">で &lt;code&gt;_data/members.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cde842ba78bff9c9b8124ebd1559825b3bc94132" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt;:</source>
          <target state="translated">で &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cd43046023d9729d0551bd15c18ada04dde39f32" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt;:</source>
          <target state="translated">で &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8048d2cbef7239f500f42954c2da2f843c49740b" translate="yes" xml:space="preserve">
          <source>In Jekyll 2, any URL constructed from the &lt;code&gt;permalink:&lt;/code&gt; field had a trailing slash (&lt;code&gt;/&lt;/code&gt;) added to it automatically. Jekyll 3 no longer adds a trailing slash automatically to &lt;code&gt;permalink:&lt;/code&gt; URLs. This can potentially result in old links to pages returning a 404 error. For example, suppose a page previously contained the YAML &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; that resulted in the URL &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; (notice the trailing slash), Jekyll internally generates a folder named &lt;code&gt;2016-02-01-test&lt;/code&gt;. In Jekyll 3, the same &lt;code&gt;permalink:&lt;/code&gt; generate the file &lt;code&gt;2016-02-01-test.html&lt;/code&gt; and the URL for the same page will be &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt;, and consequently any links to the old URL will result in a 404 error. In order to maintain the same URLs and avoid this problem, a trailing slash should be added to the &lt;code&gt;permalink:&lt;/code&gt; field, for example &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt;.</source>
          <target state="translated">Jekyll 2では、 &lt;code&gt;permalink:&lt;/code&gt; フィールドから作成されたすべてのURLに、末尾にスラッシュ（ &lt;code&gt;/&lt;/code&gt; ）が自動的に追加されていました。 Jekyll 3は、 &lt;code&gt;permalink:&lt;/code&gt; URLに末尾のスラッシュを自動的に追加しなくなりました。これにより、ページへの古いリンクが404エラーを返す可能性があります。たとえば、ページが以前YAMLが含まれていると仮定 &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; のURLが生じ &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; 内部（予告最後のスラッシュ）、ジキル &lt;code&gt;2016-02-01-test&lt;/code&gt; という名前のフォルダーを生成します。 Jekyll 3では、同じ &lt;code&gt;permalink:&lt;/code&gt; ファイル &lt;code&gt;2016-02-01-test.html&lt;/code&gt; を生成すると、同じページのURLは &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt; 、およびその結果、古いURLへのリンクがあると、404エラーが発生します。同じURLを維持してこの問題を回避するには、 &lt;code&gt;permalink:&lt;/code&gt; フィールドに末尾のスラッシュを追加する必要があります（例 &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3873159b8f4d7abf52a0f7525978c8fb359bcf37" translate="yes" xml:space="preserve">
          <source>In Jekyll 3 and above, relative permalinks have been deprecated. If you created your site using Jekyll 2 and below, you may receive the following error when trying to &lt;strong&gt;serve&lt;/strong&gt; or &lt;strong&gt;build&lt;/strong&gt;:</source>
          <target state="translated">Jekyll 3以降では、相対パーマリンクは非推奨になりました。Jekyll 2以下を使用してサイトを作成した場合、&lt;strong&gt;配信&lt;/strong&gt;または&lt;strong&gt;ビルド&lt;/strong&gt;しようとすると、次のエラーが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="9da76fc9ddd240122475ed3606ddf4d269bd399e" translate="yes" xml:space="preserve">
          <source>In Jekyll v1.0, we introduced absolute permalinks for pages in subdirectories. Starting with v2.0, absolute permalinks are opt-out, meaning Jekyll will default to using absolute permalinks instead of relative permalinks. Relative permalink backwards-compatibility was removed in v3.0.</source>
          <target state="translated">Jekyll v1.0では、サブディレクトリ内のページに絶対パーマリンクを導入しました。v2.0 以降、絶対パーマリンクはオプトアウトとなり、Jekyll はデフォルトで相対パーマリンクではなく絶対パーマリンクを使用するようになりました。相対パーマリンクの下位互換性は v3.0 で削除されました。</target>
        </trans-unit>
        <trans-unit id="137a2c8a22c797957aaba3d668b93f39e0a4e360" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../posts/index&quot;&gt;writing posts&lt;/a&gt;, you might also want to add static pages (content that isn&amp;rsquo;t date-based) to your Jekyll site. By taking advantage of the way Jekyll copies files and directories, this is easy to do.</source>
          <target state="translated">&lt;a href=&quot;../posts/index&quot;&gt;投稿&lt;/a&gt;を作成するだけでなく、静的なページ（日付ベースではないコンテンツ）をJekyllサイトに追加することもできます。Jekyllがファイルとディレクトリをコピーする方法を利用することで、これは簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="b5977b91adc8950e114e57ba6fd1cc290bbd8445" translate="yes" xml:space="preserve">
          <source>In addition to any YAML Front Matter provided in the document&amp;rsquo;s corresponding file, each document has the following attributes:</source>
          <target state="translated">ドキュメントの対応するファイルで提供されるYAMLフロントマターに加えて、各ドキュメントには次の属性があります。</target>
        </trans-unit>
        <trans-unit id="ddd733ae4dd13a946b75f3e6f10913d5e7486d8c" translate="yes" xml:space="preserve">
          <source>In addition to any collections you create yourself, the &lt;code&gt;posts&lt;/code&gt; collection is hard-coded into Jekyll. It exists whether you have a &lt;code&gt;_posts&lt;/code&gt; directory or not. This is something to note when iterating through &lt;code&gt;site.collections&lt;/code&gt; as you may need to filter it out.</source>
          <target state="translated">自分で作成したコレクションに加えて、 &lt;code&gt;posts&lt;/code&gt; コレクションはJekyllにハードコード化されています。 &lt;code&gt;_posts&lt;/code&gt; ディレクトリがあるかどうかに関係なく存在します。これは、 &lt;code&gt;site.collections&lt;/code&gt; 必要がある場合があるため、site.collectionsを反復処理するときに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="47a65d70b5bdab95550918bb769be600907b2d0e" translate="yes" xml:space="preserve">
          <source>In addition to any front matter provided in the document&amp;rsquo;s corresponding file, each document has the following attributes:</source>
          <target state="translated">ドキュメントの対応するファイルで提供されるフロントマターに加えて、各ドキュメントには次の属性があります。</target>
        </trans-unit>
        <trans-unit id="de4614543299930d373fbc0c3668decb1e5afec5" translate="yes" xml:space="preserve">
          <source>In addition to renderable and convertible content, we also have &lt;strong&gt;static files&lt;/strong&gt;.</source>
          <target state="translated">レンダリングおよび変換可能なコンテンツに加えて、&lt;strong&gt;静的ファイル&lt;/strong&gt;もあり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="435d29a8ad07e278761987f5b8da37b578e41b58" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../variables/index&quot;&gt;built-in variables&lt;/a&gt; available from Jekyll, you can specify your own custom data that can be accessed via the &lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;Liquid templating system&lt;/a&gt;.</source>
          <target state="translated">Jekyllから利用できる&lt;a href=&quot;../variables/index&quot;&gt;組み込み変数に&lt;/a&gt;加えて、&lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;Liquidテンプレートシステムを&lt;/a&gt;介してアクセスできる独自のカスタムデータを指定できます。</target>
        </trans-unit>
        <trans-unit id="262a4460ff960783349ae1c3141344919035643d" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../variables/index&quot;&gt;built-in variables&lt;/a&gt; available from Jekyll, you can specify your own custom data that can be accessed via the &lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid templating system&lt;/a&gt;.</source>
          <target state="translated">Jekyllから利用できる&lt;a href=&quot;../variables/index&quot;&gt;組み込み変数に&lt;/a&gt;加えて、&lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquidテンプレートシステムを&lt;/a&gt;介してアクセスできる独自のカスタムデータを指定できます。</target>
        </trans-unit>
        <trans-unit id="5fa3779ef0ef87de347d1b02e40eb5d39f49bc9b" translate="yes" xml:space="preserve">
          <source>In addition to the options below, the &lt;code&gt;serve&lt;/code&gt; sub-command can accept any of the options for the &lt;code&gt;build&lt;/code&gt; sub-command, which are then applied to the site build which occurs right before your site is served.</source>
          <target state="translated">以下のオプションに加えて、 &lt;code&gt;serve&lt;/code&gt; サブコマンドは、 &lt;code&gt;build&lt;/code&gt; サブコマンドの任意のオプションを受け入れることができます。これらのオプションは、サイトが提供される直前に発生するサイトビルドに適用されます。</target>
        </trans-unit>
        <trans-unit id="ad77db62fe2f7780d8731931072d4d92705aa9c7" translate="yes" xml:space="preserve">
          <source>In general, plugins you make will fall broadly into one of five categories:</source>
          <target state="translated">一般的に、あなたが作るプラグインは、大きく分けて5つのカテゴリのいずれかに分類されます。</target>
        </trans-unit>
        <trans-unit id="92cb54b26fce6f64d865299e23f532b7347aa7e1" translate="yes" xml:space="preserve">
          <source>In layout files, the rendered content of the Post or Page being wrapped. Not defined in Post or Page files.</source>
          <target state="translated">レイアウトファイルでは、ラップされているポストやページのレンダリングされた内容。PostやPageファイルでは定義されていません。</target>
        </trans-unit>
        <trans-unit id="10a02d40410ecbb6dd7a79cb832a7b1bd9921423" translate="yes" xml:space="preserve">
          <source>In order for the highlighting to show up, you&amp;rsquo;ll need to include a highlighting stylesheet. For Pygments or Rouge you can use a stylesheet for Pygments, you can find an example gallery &lt;a href=&quot;https://jwarby.github.io/jekyll-pygments-themes/languages/ruby.html&quot;&gt;here&lt;/a&gt; or from &lt;a href=&quot;https://github.com/jwarby/jekyll-pygments-themes&quot;&gt;its repository&lt;/a&gt;.</source>
          <target state="translated">ハイライトを表示するには、ハイライトスタイルシートを含める必要があります。PygmentsまたはRougeの場合、Pygmentsのスタイルシートを使用でき&lt;a href=&quot;https://github.com/jwarby/jekyll-pygments-themes&quot;&gt;ます&lt;/a&gt;。&lt;a href=&quot;https://jwarby.github.io/jekyll-pygments-themes/languages/ruby.html&quot;&gt;ここ&lt;/a&gt;またはそのリポジトリからサンプルギャラリーを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="8a11123a4885bc93a6c358a7052dbadb25f2ae33" translate="yes" xml:space="preserve">
          <source>In order for the highlighting to show up, you&amp;rsquo;ll need to include a highlighting stylesheet. For an example stylesheet you can look at &lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.css&lt;/a&gt;. These are the same styles as used by GitHub and you are free to use them for your own site. If you use &lt;code&gt;linenos&lt;/code&gt;, you might want to include an additional CSS class definition for the &lt;code&gt;.lineno&lt;/code&gt; class in &lt;code&gt;syntax.css&lt;/code&gt; to distinguish the line numbers from the highlighted code.</source>
          <target state="translated">強調表示を表示するには、強調表示スタイルシートを含める必要があります。スタイルシートの例については、&lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.cssをご覧ください&lt;/a&gt;。これらはGitHubで使用されるものと同じスタイルであり、自分のサイトで自由に使用できます。あなたが使用している場合は &lt;code&gt;linenos&lt;/code&gt; を、あなたがのために追加のCSSクラス定義に含めるかもしれません &lt;code&gt;.lineno&lt;/code&gt; の中でクラスを &lt;code&gt;syntax.css&lt;/code&gt; 強調したコードから行番号を区別します。</target>
        </trans-unit>
        <trans-unit id="92921e0c63f70f1ce180d6a3e7cb4c97a0eb950e" translate="yes" xml:space="preserve">
          <source>In order to install a pre-release, make sure you have all the requirements installed properly and run:</source>
          <target state="translated">プレリリースをインストールするためには、すべての要件が正しくインストールされていることを確認して実行してください。</target>
        </trans-unit>
        <trans-unit id="0d246ea4d51517f082eb63012fe12dc6c7d54061" translate="yes" xml:space="preserve">
          <source>In order to see the changes from &lt;code&gt;downcase&lt;/code&gt; Liquid filter, we will need to add front matter.</source>
          <target state="translated">&lt;code&gt;downcase&lt;/code&gt; 液体フィルターからの変更を確認するには、フロントマターを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="f0a99e23efade4197b1e52469682f0f893a21ad9" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; checks if our filename extension is &lt;code&gt;.upcase&lt;/code&gt;, and will render using the converter if it is. It will call &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; to process the content. In our simple converter we&amp;rsquo;re simply uppercasing the entire content string. Finally, when it saves the page, it will do so with a &lt;code&gt;.html&lt;/code&gt; extension.</source>
          <target state="translated">この例では、 &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; はファイル名拡張子が &lt;code&gt;.upcase&lt;/code&gt; かどうかを確認し、そうである場合はコンバーターを使用してレンダリングします。コンテンツを処理 &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; ためにUpcaseConverter＃convertを呼び出します。単純なコンバーターでは、コンテンツ文字列全体を単に大文字にしています。最後に、ページを保存するときに、 &lt;code&gt;.html&lt;/code&gt; 拡張子を付けて保存します。</target>
        </trans-unit>
        <trans-unit id="589e3464f6983f476e200524c86fa956e44336f7" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;_includes&lt;/code&gt; folder, assume you have a file called &lt;code&gt;spotlight.html&lt;/code&gt; with this code:</source>
          <target state="translated">で &lt;code&gt;_includes&lt;/code&gt; のフォルダ、あなたはというファイルがあると仮定し &lt;code&gt;spotlight.html&lt;/code&gt; このコードでは：</target>
        </trans-unit>
        <trans-unit id="023c2b6b85b5f06f702673e8551f26b707f19528" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;build&lt;/code&gt; (or &lt;code&gt;serve&lt;/code&gt;) arguments, you can specify a Jekyll environment and value. The build will then apply this value in any conditional statements in your content.</source>
          <target state="translated">で &lt;code&gt;build&lt;/code&gt; （または &lt;code&gt;serve&lt;/code&gt; ）の引数には、ジキル環境と値を指定することができます。ビルドは、コンテンツ内の条件ステートメントにこの値を適用します。</target>
        </trans-unit>
        <trans-unit id="35cf41f6a0818d8a0497f3813e18dc14ef52b043" translate="yes" xml:space="preserve">
          <source>In the above example, the tag block and the tag are both registered with the name &lt;code&gt;render_time&lt;/code&gt;, but to register a tag and a tag block using the same name in the same project is not recommended as this may lead to conflicts.</source>
          <target state="translated">上記の例では、タグブロックとタグの両方が &lt;code&gt;render_time&lt;/code&gt; という名前で登録されていますが、同じプロジェクトで同じ名前を使用してタグとタグブロックを登録すると、競合が発生する可能性があるため、お勧めしません。</target>
        </trans-unit>
        <trans-unit id="82b5ec249103fb1fdb876d5bf56bb5b373e62ac9" translate="yes" xml:space="preserve">
          <source>In the build (or serve) arguments, you can specify a Jekyll environment and value. The build will then apply this value in any conditional statements in your content.</source>
          <target state="translated">ビルド (またはサーブ)引数では、Jekyll 環境と値を指定できます。ビルドはこの値をコンテンツ内の条件文に適用します。</target>
        </trans-unit>
        <trans-unit id="ca17f2fe3994021e071c92453baa97e708f63fbf" translate="yes" xml:space="preserve">
          <source>In the case of Minima, you see only the following files in your Jekyll site directory:</source>
          <target state="translated">Minimaの場合、Jekyllサイトのディレクトリには以下のファイルしか表示されません。</target>
        </trans-unit>
        <trans-unit id="73aa65e9152847600349b0332ad25629dcd365c5" translate="yes" xml:space="preserve">
          <source>In the example above, we can place the following tag anywhere in one of our pages:</source>
          <target state="translated">上記の例では、以下のタグをページのどこかに配置することができます。</target>
        </trans-unit>
        <trans-unit id="fbcc71f1f3f382fa9da32fabfcae01c9258fd9ed" translate="yes" xml:space="preserve">
          <source>In the future the installation process of the github-pages should be as simple as the setup of the blog. But as long as the new version of the Nokogiri (&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;v1.6.8&lt;/a&gt;) is not stable and referenced, it is work to get it up and running on Windows.</source>
          <target state="translated">将来的には、github-pagesのインストールプロセスはブログの設定と同じくらい簡単になるはずです。しかし、新しいバージョンの&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;Nokogiri&lt;/a&gt;（v1.6.8）が安定しておらず、参照されていない限り、それをWindowsで稼働させることはできます。</target>
        </trans-unit>
        <trans-unit id="6f3f1e4da3442eb9f6d8e473c90f421c25f9d3d4" translate="yes" xml:space="preserve">
          <source>In the next and final step of this tutorial, we&amp;rsquo;ll add polish to the site and get it ready for a production deployment.</source>
          <target state="translated">このチュートリアルの次の最後のステップでは、サイトに磨きをかけ、本番環境への展開の準備をします。</target>
        </trans-unit>
        <trans-unit id="b8d4dbdc143106549a6378e4e1fcc3c6ac082b5d" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;collections&lt;/code&gt; is defined as a sequence (i.e array) with no additional metadata defined for each collection. You can optionally specify metadata for your collection by defining &lt;code&gt;collections&lt;/code&gt; as a mapping (i.e hashmap) instead of sequence, and then defining additional fields in it:</source>
          <target state="translated">この場合、 &lt;code&gt;collections&lt;/code&gt; はシーケンス（つまり配列）として定義され、コレクションごとに追加のメタデータは定義されていません。必要に応じて定義することで、あなたのコレクションのためのメタデータを指定することができ &lt;code&gt;collections&lt;/code&gt; 代わりに一連の（つまり、ハッシュマップ）マッピングと、それに追加のフィールドを定義します：</target>
        </trans-unit>
        <trans-unit id="f5f641e52e69872bdaff7c469dcb92b54266d954" translate="yes" xml:space="preserve">
          <source>In this case, the listing pages will be accessible at &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt;</source>
          <target state="translated">この場合、リストページには &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt; からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="a8c7970f2ab1be04e8c7c366c84315f5db51e4c7" translate="yes" xml:space="preserve">
          <source>In this example, our generator will create a series of files under the &lt;code&gt;categories&lt;/code&gt; directory for each category, listing the posts in each category using the &lt;code&gt;category_index.html&lt;/code&gt; layout.</source>
          <target state="translated">この例では、ジェネレーターが各カテゴリの &lt;code&gt;categories&lt;/code&gt; ディレクトリの下に一連のファイルを作成し、 &lt;code&gt;category_index.html&lt;/code&gt; レイアウトを使用して各カテゴリの投稿を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="23e30b1c526f4005a7187f21ba17da5891b7c9b9" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;layout&lt;/code&gt; is set to &lt;code&gt;default&lt;/code&gt; inside the &lt;a href=&quot;../../collections/index&quot;&gt;collection&lt;/a&gt; with the name &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;layout&lt;/code&gt; は &lt;code&gt;my_collection&lt;/code&gt; という名前の&lt;a href=&quot;../../collections/index&quot;&gt;コレクション&lt;/a&gt;内で &lt;code&gt;default&lt;/code&gt; 設定されています。</target>
        </trans-unit>
        <trans-unit id="2cf773ac04f813b0e294961a92d744e2c3408b9b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;layout&lt;/code&gt; is set to &lt;code&gt;default&lt;/code&gt; inside the &lt;a href=&quot;../collections/index&quot;&gt;collection&lt;/a&gt; with the name &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;layout&lt;/code&gt; は &lt;code&gt;my_collection&lt;/code&gt; という名前の&lt;a href=&quot;../collections/index&quot;&gt;コレクション&lt;/a&gt;内で &lt;code&gt;default&lt;/code&gt; 設定されています。</target>
        </trans-unit>
        <trans-unit id="8a1332aa08f1a9433eb0f51a71818cafd5c254ef" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;link&lt;/code&gt; tag would render a link to the file &lt;code&gt;footer_company_a.html&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;link&lt;/code&gt; タグはファイル &lt;code&gt;footer_company_a.html&lt;/code&gt; へのリンクをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="eb94263d3a4b7b2763922a8c12799d8a35026a62" translate="yes" xml:space="preserve">
          <source>In this example, the include would insert the file &lt;code&gt;footer_company_a.html&lt;/code&gt; from the &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; directory.</source>
          <target state="translated">この例では、 &lt;code&gt;footer_company_a.html&lt;/code&gt; により、 &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; ディレクトリからフッター_会社_a.htmlファイルが挿入されます。</target>
        </trans-unit>
        <trans-unit id="19c6ba6ccd61f7698e3b2bbaa305c0a978c6c9a8" translate="yes" xml:space="preserve">
          <source>In this final step we&amp;rsquo;ll get the site ready for production.</source>
          <target state="translated">この最後のステップでは、サイトを本番環境で使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="9b31a618d0810733e64d193638c5aab33882dde7" translate="yes" xml:space="preserve">
          <source>In this instance, &lt;code&gt;site.data.profiles&lt;/code&gt; gets inserted in place of &lt;code&gt;include.participants&lt;/code&gt; in the include file, and the Liquid logic processes. The result will be &lt;code&gt;Jane Doe&lt;/code&gt;.</source>
          <target state="translated">この場合、インクルードファイルの &lt;code&gt;include.participants&lt;/code&gt; の代わりに &lt;code&gt;site.data.profiles&lt;/code&gt; が挿入され、Liquidロジックプロセスが実行されます。結果は &lt;code&gt;Jane Doe&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="63056e6ee26a5a0b1d5fe24b0d81f5d2cc4aaf7e" translate="yes" xml:space="preserve">
          <source>In this step you&amp;rsquo;ll store the contents of the navigation in a data file and then iterate over it in the navigation include.</source>
          <target state="translated">このステップでは、ナビゲーションの内容をデータファイルに保存してから、ナビゲーションインクルードで繰り返し処理します。</target>
        </trans-unit>
        <trans-unit id="5a7ef22adc478c9a3b0bb4fef7119f7a4c2ee61f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add a new array with the key &lt;code&gt;plugins&lt;/code&gt; (or &lt;code&gt;gems&lt;/code&gt; for Jekyll &amp;lt; &lt;code&gt;3.5.0&lt;/code&gt;) and the values of the gem names of the plugins you&amp;rsquo;d like to use. An example:</source>
          <target state="translated">あなたに &lt;code&gt;_config.yml&lt;/code&gt; ファイル、キーを使用して新しい配列の追加 &lt;code&gt;plugins&lt;/code&gt; （または &lt;code&gt;gems&lt;/code&gt; ジキルのための&amp;lt; &lt;code&gt;3.5.0&lt;/code&gt; ）と、使用したいプラグインの宝石の名前の値を。例：</target>
        </trans-unit>
        <trans-unit id="bf9dc7a2954e8514613c982dd81fe474933609f8" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add the following values to the &lt;code&gt;defaults&lt;/code&gt; property:</source>
          <target state="translated">あなたに &lt;code&gt;_config.yml&lt;/code&gt; ファイルに次の値を追加し &lt;code&gt;defaults&lt;/code&gt; プロパティ：</target>
        </trans-unit>
        <trans-unit id="bdf1d4e7b2a9d82aac6f15504c1b8e025275caf8" translate="yes" xml:space="preserve">
          <source>In your site source root, make a &lt;code&gt;_plugins&lt;/code&gt; directory. Place your plugins here. Any file ending in &lt;code&gt;*.rb&lt;/code&gt; inside this directory will be loaded before Jekyll generates your site.</source>
          <target state="translated">サイトのソースルートに、 &lt;code&gt;_plugins&lt;/code&gt; ディレクトリを作成します。ここにプラグインを配置します。このディレクトリ内の &lt;code&gt;*.rb&lt;/code&gt; で終わるファイルは、Jekyllがサイトを生成する前に読み込まれます。</target>
        </trans-unit>
        <trans-unit id="0a19851e7bd98d3da24e5124d3f2ce9e766bbcd2" translate="yes" xml:space="preserve">
          <source>Include tag</source>
          <target state="translated">インクルードタグ</target>
        </trans-unit>
        <trans-unit id="b0428b33222836fce1a4254f9b076221f0220f42" translate="yes" xml:space="preserve">
          <source>Include usage</source>
          <target state="translated">使用法を含む</target>
        </trans-unit>
        <trans-unit id="db54974f7f0ad531e35648ba85b9388029b4d7ef" translate="yes" xml:space="preserve">
          <source>Includes</source>
          <target state="translated">Includes</target>
        </trans-unit>
        <trans-unit id="525d443047f688fa21fd3dd9c8ff2eedab7dad54" translate="yes" xml:space="preserve">
          <source>Including an image asset in a post:</source>
          <target state="translated">投稿に画像アセットを含める</target>
        </trans-unit>
        <trans-unit id="1f7a1fcdd2514ccdb830db698078bc93bc2c326b" translate="yes" xml:space="preserve">
          <source>Including files relative to another file</source>
          <target state="translated">別のファイルへの相対的なファイルのインクルード</target>
        </trans-unit>
        <trans-unit id="9a05788a2e9ad3ef56f62e0f130e8cd0346e51c4" translate="yes" xml:space="preserve">
          <source>Including images and resources</source>
          <target state="translated">画像やリソースを含む</target>
        </trans-unit>
        <trans-unit id="b91689a4ea776c083cae7da24e7822db50feb47d" translate="yes" xml:space="preserve">
          <source>Incremental Regeneration</source>
          <target state="translated">インクリメンタル再生</target>
        </trans-unit>
        <trans-unit id="f81c2e0ac93fe966e8a36a74b91ba62aa5863009" translate="yes" xml:space="preserve">
          <source>Incremental regeneration can be enabled via the &lt;code&gt;--incremental&lt;/code&gt; flag (&lt;code&gt;-I&lt;/code&gt; for short) from the command-line or by setting &lt;code&gt;incremental: true&lt;/code&gt; in your configuration file.</source>
          <target state="translated">増分再生成は、コマンドラインから &lt;code&gt;--incremental&lt;/code&gt; フラグ（略して &lt;code&gt;-I&lt;/code&gt; ）を使用するか、構成ファイルで &lt;code&gt;incremental: true&lt;/code&gt; を設定することで有効にできます。</target>
        </trans-unit>
        <trans-unit id="6006efa32ed1ccb24da40c6fab9a1c8038d7a743" translate="yes" xml:space="preserve">
          <source>Incremental regeneration helps shorten build times by only generating documents and pages that were updated since the previous build. It does this by keeping track of both file modification times and inter-document dependencies in the &lt;code&gt;.jekyll-metadata&lt;/code&gt; file.</source>
          <target state="translated">増分再生成により、前回のビルド以降に更新されたドキュメントとページのみが生成されるため、ビルド時間が短縮されます。これは、 &lt;code&gt;.jekyll-metadata&lt;/code&gt; ファイル内のファイル変更時間とドキュメント間の依存関係の両方を追跡することによって行われます。</target>
        </trans-unit>
        <trans-unit id="1bd191c875e05fc6998e389343b41b60f6eec5c0" translate="yes" xml:space="preserve">
          <source>Incremental regeneration is still an experimental feature</source>
          <target state="translated">インクリメンタル再生はまだ実験的な機能である</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="7e46c7c411bc9146c968ebec74f6f162b28226fb" translate="yes" xml:space="preserve">
          <source>Inlining the styles used in &lt;code&gt;_includes/navigation.html&lt;/code&gt;(adding or configuring within the same file) is not a best practice. Instead, let&amp;rsquo;s style the current page by defining our first class in a new css file instead.</source>
          <target state="translated">Inlining the styles used in &lt;code&gt;_includes/navigation.html&lt;/code&gt; (adding or configuring within the same file) is not a best practice. Instead, let&amp;rsquo;s style the current page by defining our first class in a new css file instead.</target>
        </trans-unit>
        <trans-unit id="2f3930f1815574bf50a6aaad23301e80251a41a5" translate="yes" xml:space="preserve">
          <source>Install Bundler using &lt;code&gt;gem install bundler&lt;/code&gt;. You only need to install it once, not every time you create a new Jekyll project.</source>
          <target state="translated">Install Bundler using &lt;code&gt;gem install bundler&lt;/code&gt; . You only need to install it once, not every time you create a new Jekyll project.</target>
        </trans-unit>
        <trans-unit id="0b928fe3ed14e12e0563aa197c077a70503326b4" translate="yes" xml:space="preserve">
          <source>Install Command Line Tools</source>
          <target state="translated">コマンドラインツールのインストール</target>
        </trans-unit>
        <trans-unit id="626209e441fa77a6250d6ff717fa171d3e1e22a9" translate="yes" xml:space="preserve">
          <source>Install Jekyll</source>
          <target state="translated">ジキルのインストール</target>
        </trans-unit>
        <trans-unit id="2754588b37fe5f3d6e0bcb568f9e52a57bd3ad5a" translate="yes" xml:space="preserve">
          <source>Install Jekyll and Bundler via a command prompt window: &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</source>
          <target state="translated">コマンドプロンプトウィンドウからJekyllとBundlerをインストールします &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e4da4ca2d699db57664814f9bdebf2536741d08" translate="yes" xml:space="preserve">
          <source>Install Jekyll:</source>
          <target state="translated">ジキルをインストールします。</target>
        </trans-unit>
        <trans-unit id="deef52c209d94ab1ae7e1c1d8e71259c5cf9cff0" translate="yes" xml:space="preserve">
          <source>Install Ruby</source>
          <target state="translated">Rubyのインストール</target>
        </trans-unit>
        <trans-unit id="a7599704444a72a5825e2212231a365f0e3752da" translate="yes" xml:space="preserve">
          <source>Install Ruby and Ruby development kit</source>
          <target state="translated">RubyとRuby開発キットのインストール</target>
        </trans-unit>
        <trans-unit id="7a61f957c592547a8d464d892b45beff7809598b" translate="yes" xml:space="preserve">
          <source>Install Ruby and other &lt;a href=&quot;../index#requirements&quot;&gt;prerequisites&lt;/a&gt;:</source>
          <target state="translated">Install Ruby and other &lt;a href=&quot;../index#requirements&quot;&gt;prerequisites&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="2b487a9122ff8e426803cc72375725e97f9e6a44" translate="yes" xml:space="preserve">
          <source>Install Ruby via Chocolatey: &lt;code&gt;choco install ruby -y&lt;/code&gt;</source>
          <target state="translated">Chocolatey経由でRubyをインストールします &lt;code&gt;choco install ruby -y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cdce4c177bc9e007f528a3235e08a88a41c6662" translate="yes" xml:space="preserve">
          <source>Install a package manager for Windows called &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;というWindows用のパッケージマネージャーをインストールする</target>
        </trans-unit>
        <trans-unit id="90158753795f90b73c7c95bd6fe6ca962b18b017" translate="yes" xml:space="preserve">
          <source>Install all &lt;a href=&quot;installation/index&quot;&gt;prerequisites&lt;/a&gt;.</source>
          <target state="translated">Install all &lt;a href=&quot;installation/index&quot;&gt;prerequisites&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="803ad44a9a99a3110e2564249e4d54c10559a3c0" translate="yes" xml:space="preserve">
          <source>Install dependencies</source>
          <target state="translated">依存関係のインストール</target>
        </trans-unit>
        <trans-unit id="22c8d123bf73db1aacc59d30555b734cd07b4e2a" translate="yes" xml:space="preserve">
          <source>Install github-pages</source>
          <target state="translated">github-pagesのインストール</target>
        </trans-unit>
        <trans-unit id="a4c4c8cbad45b21666d3cbf92bb79984cab89804" translate="yes" xml:space="preserve">
          <source>Install prerequisites</source>
          <target state="translated">前提条件のインストール</target>
        </trans-unit>
        <trans-unit id="abb88c8dd2461e34977887fddc50a42e89837700" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem</source>
          <target state="translated">&lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem をインストールする</target>
        </trans-unit>
        <trans-unit id="d6718f667e0e357a2a865da83dab46a8145917a9" translate="yes" xml:space="preserve">
          <source>Install the Kickster gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</source>
          <target state="translated">Install the Kickster gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0a08d347a940a1b0810010f98fe813f778b88d90" translate="yes" xml:space="preserve">
          <source>Install the bundler and jekyll gems:</source>
          <target state="translated">bundlerとjekyll gemsをインストールします。</target>
        </trans-unit>
        <trans-unit id="0f78fc1a483118f983a249b1c27929f25f72f4e2" translate="yes" xml:space="preserve">
          <source>Install the jekyll and bundler &lt;a href=&quot;ruby-101/index#gems&quot;&gt;gems&lt;/a&gt;.</source>
          <target state="translated">Install the jekyll and bundler &lt;a href=&quot;ruby-101/index#gems&quot;&gt;gems&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d885f2ed59243070a4543bf4c623700512e83b3a" translate="yes" xml:space="preserve">
          <source>Install the theme:</source>
          <target state="translated">テーマをインストールします。</target>
        </trans-unit>
        <trans-unit id="cdc7600640f4488a302a9ef8db6eee3b7770c1b0" translate="yes" xml:space="preserve">
          <source>Install with RubyGems</source>
          <target state="translated">RubyGemsでインストール</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="1061e24b97b7e7926c0e75ef8fe1d7b8635a2b45" translate="yes" xml:space="preserve">
          <source>Installation Problems</source>
          <target state="translated">インストールの問題</target>
        </trans-unit>
        <trans-unit id="55b35fe3138034fd97e680624e4fc32ce98e0207" translate="yes" xml:space="preserve">
          <source>Installation on other Linux distributions works similarly to installing on &lt;a href=&quot;../ubuntu/index&quot;&gt;Ubuntu&lt;/a&gt;.</source>
          <target state="translated">Installation on other Linux distributions works similarly to installing on &lt;a href=&quot;../ubuntu/index&quot;&gt;Ubuntu&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="88f28bc9a8bf110104a02b1d85d694cc8c6a5e2b" translate="yes" xml:space="preserve">
          <source>Installation varies based on your operating system. See our &lt;a href=&quot;installation/index#guides&quot;&gt;guides&lt;/a&gt; for OS-specific instructions.</source>
          <target state="translated">Installation varies based on your operating system. See our &lt;a href=&quot;installation/index#guides&quot;&gt;guides&lt;/a&gt; for OS-specific instructions.</target>
        </trans-unit>
        <trans-unit id="88b0adc28bc5d4d887cf429678890733427ab340" translate="yes" xml:space="preserve">
          <source>Installation via Bash on Windows 10</source>
          <target state="translated">Windows 10でBash経由でのインストール</target>
        </trans-unit>
        <trans-unit id="bc6998ee1c084273d3edf04ac27342ad34f6ef8b" translate="yes" xml:space="preserve">
          <source>Installation via Chocolatey</source>
          <target state="translated">ショコラトリー経由でのインスタ映え</target>
        </trans-unit>
        <trans-unit id="80bed0dbfe9f2de055f7876c597ff5e0c712f2fb" translate="yes" xml:space="preserve">
          <source>Installation via RubyInstaller</source>
          <target state="translated">RubyInstallerによるインストール</target>
        </trans-unit>
        <trans-unit id="b11767c5d2200d2d16fad18e12fb1be2d82b4099" translate="yes" xml:space="preserve">
          <source>Installing &lt;em&gt;github-pages&lt;/em&gt; via Chocolatey</source>
          <target state="translated">Chocolateyを介した&lt;em&gt;github-pagesの&lt;/em&gt;インストール</target>
        </trans-unit>
        <trans-unit id="c8b250df74e66657f762c2190066ce6c1ec127af" translate="yes" xml:space="preserve">
          <source>Installing Jekyll</source>
          <target state="translated">ジキルのインストール</target>
        </trans-unit>
        <trans-unit id="16ceab49469f52919f2e03463175e71ec859efb7" translate="yes" xml:space="preserve">
          <source>Installing Jekyll should be straight-forward if all requirements are met. Before you start, make sure your system has the following:</source>
          <target state="translated">Jekyll のインストールは、すべての要件が満たされていれば簡単にできるはずです。始める前に、お使いのシステムに以下のものがあることを確認してください。</target>
        </trans-unit>
        <trans-unit id="65d6a81387a2e4460efe3c5dba8f3ee02752d40a" translate="yes" xml:space="preserve">
          <source>Installing Ruby and Jekyll</source>
          <target state="translated">RubyとJekyllのインストール</target>
        </trans-unit>
        <trans-unit id="03c137f5733905fa449ce5034c5f2765d4312bde" translate="yes" xml:space="preserve">
          <source>Installing Xcode Command-Line Tools</source>
          <target state="translated">Xcodeコマンドラインツールのインストール</target>
        </trans-unit>
        <trans-unit id="60859f03534086c3888d74149a033deec834b0c6" translate="yes" xml:space="preserve">
          <source>Installing a gem-based theme</source>
          <target state="translated">gemベースのテーマをインストールする</target>
        </trans-unit>
        <trans-unit id="7c207b93b2af1157f5c75bb99e15b47da86e9f24" translate="yes" xml:space="preserve">
          <source>Installing a plugin</source>
          <target state="translated">プラグインのインストール</target>
        </trans-unit>
        <trans-unit id="0301ff786666998ae5d98dbed80c43208cf8c71d" translate="yes" xml:space="preserve">
          <source>Installing the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows</source>
          <target state="translated">Windowsへの &lt;code&gt;github-pages&lt;/code&gt; gemのインストール</target>
        </trans-unit>
        <trans-unit id="7d65c34ad93e14c54fac65d045196e17931d2197" translate="yes" xml:space="preserve">
          <source>Instead of passing string variables to the include, you can pass a reference to a YAML data file stored in the &lt;code&gt;_data&lt;/code&gt; folder.</source>
          <target state="translated">文字列変数をインクルードに渡す代わりに、 &lt;code&gt;_data&lt;/code&gt; フォルダーに保存されているYAMLデータファイルへの参照を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="dbf704fb9a12a09c9c216c64b83c654387d7129d" translate="yes" xml:space="preserve">
          <source>Instead of placing posts inside of folders, you can specify one or more categories that the post belongs to. When the site is generated the post will act as though it had been set with these categories normally. Categories (plural key) can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">フォルダ内に投稿を配置する代わりに、投稿が属する1つ以上のカテゴリを指定できます。サイトが生成されると、投稿は通常これらのカテゴリで設定されているかのように動作します。カテゴリ（複数のキー）は、&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAMLリスト&lt;/a&gt;またはスペース区切りの文字列として指定できます。</target>
        </trans-unit>
        <trans-unit id="5fbf5118bef5dc635d77ae841cc2e5808c17240f" translate="yes" xml:space="preserve">
          <source>Instead of repeating this configuration each time you create a new post or page, Jekyll provides a way to set these defaults in the site configuration. To do this, you can specify site-wide defaults using the &lt;code&gt;defaults&lt;/code&gt; key in the &lt;code&gt;_config.yml&lt;/code&gt; file in your project&amp;rsquo;s root directory.</source>
          <target state="translated">新しい投稿やページを作成するたびにこの設定を繰り返す代わりに、Jekyllはサイト設定でこれらのデフォルトを設定する方法を提供します。これを行うには、プロジェクトのルートディレクトリにある &lt;code&gt;_config.yml&lt;/code&gt; ファイルの &lt;code&gt;defaults&lt;/code&gt; キーを使用して、サイト全体のデフォルトを指定できます。</target>
        </trans-unit>
        <trans-unit id="459b517bf3026b848c54e53ae4ce12df2cc3a212" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;strong&gt;on.push&lt;/strong&gt; condition, you could trigger your build on a &lt;strong&gt;schedule&lt;/strong&gt; by using the &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule&quot;&gt;on.schedule&lt;/a&gt; parameter. For example, here we build daily at midnight by specifying &lt;strong&gt;cron&lt;/strong&gt; syntax, which can be tested at the &lt;a href=&quot;https://crontab.guru/&quot;&gt;crontab guru&lt;/a&gt; site.</source>
          <target state="translated">Instead of using the &lt;strong&gt;on.push&lt;/strong&gt; condition, you could trigger your build on a &lt;strong&gt;schedule&lt;/strong&gt; by using the &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule&quot;&gt;on.schedule&lt;/a&gt; parameter. For example, here we build daily at midnight by specifying &lt;strong&gt;cron&lt;/strong&gt; syntax, which can be tested at the &lt;a href=&quot;https://crontab.guru/&quot;&gt;crontab guru&lt;/a&gt; site.</target>
        </trans-unit>
        <trans-unit id="ed58f29743f8e14b9c8e13d41e070a1cc1d1c9f5" translate="yes" xml:space="preserve">
          <source>Instructions</source>
          <target state="translated">Instructions</target>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="b8751caf9cf0c78b9fafba5c2439e946ebd1dfe1" translate="yes" xml:space="preserve">
          <source>Interacting with APIs such as GitHub</source>
          <target state="translated">GitHubなどのAPIとの連携</target>
        </trans-unit>
        <trans-unit id="2f66ca1047f5a0b56e9843da678570cdb99652f4" translate="yes" xml:space="preserve">
          <source>Introducing: &lt;code&gt;layout&lt;/code&gt;. In Jekyll 2 and below, any metadata in the layout was merged onto the &lt;code&gt;page&lt;/code&gt; variable in Liquid. This caused a lot of confusion in the way the data was merged and some unexpected behaviour. In Jekyll 3, all layout data is accessible via &lt;code&gt;layout&lt;/code&gt; in Liquid. For example, if your layout has &lt;code&gt;class: my-layout&lt;/code&gt; in its YAML front matter, then the layout can access that via &lt;code&gt;{{ layout.class }}&lt;/code&gt;.</source>
          <target state="translated">紹介： &lt;code&gt;layout&lt;/code&gt; 。Jekyll 2以前では、レイアウトのメタデータはすべてLiquidの &lt;code&gt;page&lt;/code&gt; 変数にマージされていました。これにより、データの結合方法に大きな混乱が生じ、予期しない動作が発生しました。Jekyll 3では、すべてのレイアウトデータにLiquidの &lt;code&gt;layout&lt;/code&gt; からアクセスできます。たとえば、レイアウトの &lt;code&gt;class: my-layout&lt;/code&gt; がYAMLの前部にmy-layoutである場合、レイアウトは &lt;code&gt;{{ layout.class }}&lt;/code&gt; を介してそれにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="489ed6253549f720a11bc5140a4e207e40c898c3" translate="yes" xml:space="preserve">
          <source>Irrespective of the front matter key chosen, Jekyll stores the metadata mapped to the plural key which is exposed to Liquid templates.</source>
          <target state="translated">選択されたフロントマターキーに関係なく、Jekyllは、Liquidテンプレートに公開されている複数のキーにマッピングされたメタデータを格納します。</target>
        </trans-unit>
        <trans-unit id="0e59ed77d839555912e7610e1d04e3e952572778" translate="yes" xml:space="preserve">
          <source>It comes in two flavors: basic CommonMark with &lt;a href=&quot;https://github.com/jekyll/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt; plugin and &lt;a href=&quot;https://github.com/github/jekyll-commonmark-ghpages&quot;&gt;GitHub Flavored Markdown supported by GitHub Pages&lt;/a&gt;.</source>
          <target state="translated">It comes in two flavors: basic CommonMark with &lt;a href=&quot;https://github.com/jekyll/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt; plugin and &lt;a href=&quot;https://github.com/github/jekyll-commonmark-ghpages&quot;&gt;GitHub Flavored Markdown supported by GitHub Pages&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9020d8fc0d60807df15ba6caea583e3777c08e00" translate="yes" xml:space="preserve">
          <source>It is also possible to use glob patterns (currently limited to patterns that contain &lt;code&gt;*&lt;/code&gt;) when matching defaults. For example, it is possible to set specific layout for each &lt;code&gt;special-page.html&lt;/code&gt; in any subfolder of &lt;code&gt;section&lt;/code&gt; folder.3.7.0</source>
          <target state="translated">デフォルトを照合するときに、グロブパターン（現在は &lt;code&gt;*&lt;/code&gt; を含むパターンに制限されています）を使用することもできます。たとえば、 &lt;code&gt;section&lt;/code&gt; folder.3.7.0の任意のサブフォルダー内の各 &lt;code&gt;special-page.html&lt;/code&gt; に特定のレイアウトを設定することが可能です。</target>
        </trans-unit>
        <trans-unit id="addf7a9272c9812a657c4d3a6d67fec14532a1ac" translate="yes" xml:space="preserve">
          <source>It may not seem like it now, but much of Jekyll&amp;rsquo;s power comes from combining Liquid with other features.</source>
          <target state="translated">It may not seem like it now, but much of Jekyll&amp;rsquo;s power comes from combining Liquid with other features.</target>
        </trans-unit>
        <trans-unit id="bbb0445c18b13db0d9e8a3fe9643f439bc5cc215" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t work to just access:</source>
          <target state="translated">アクセスするだけでは機能しません：</target>
        </trans-unit>
        <trans-unit id="dcc1048dbd502084f74e4517e9ae0cef3067fa5f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s all well and good to have posts in a folder, but a blog is no use unless you have a list of posts somewhere. Creating an index of posts on another page (or in a &lt;a href=&quot;../templates/index&quot;&gt;template&lt;/a&gt;) is easy, thanks to the &lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquid template language&lt;/a&gt; and its tags. Here&amp;rsquo;s a basic example of how to create a list of links to your blog posts:</source>
          <target state="translated">投稿をフォルダに入れておくことは大丈夫ですが、どこかに投稿のリストがない限り、ブログは役に立ちません。&lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquidテンプレート言語&lt;/a&gt;とそのタグのおかげで、別のページ（または&lt;a href=&quot;../templates/index&quot;&gt;テンプレート&lt;/a&gt;）に投稿のインデックスを作成するのは簡単です。ブログ投稿へのリンクのリストを作成する方法の基本的な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="a5bc9f1bd092e992f491fd4ee789d06068edc94b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to have a &lt;a href=&quot;../../ruby-101/index#gemfile&quot;&gt;Gemfile&lt;/a&gt; for your site. This ensures the version of Jekyll and other gems remains consistent across different environments.</source>
          <target state="translated">It&amp;rsquo;s good practice to have a &lt;a href=&quot;../../ruby-101/index#gemfile&quot;&gt;Gemfile&lt;/a&gt; for your site. This ensures the version of Jekyll and other gems remains consistent across different environments.</target>
        </trans-unit>
        <trans-unit id="06511dcc6617b5566a69ef0ca85fef625542eea4" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s time to create a site! Create a new directory for your site, you can name it whatever you&amp;rsquo;d like. Through the rest of this tutorial we&amp;rsquo;ll refer to this directory as &amp;ldquo;root&amp;rdquo;.</source>
          <target state="translated">It&amp;rsquo;s time to create a site! Create a new directory for your site, you can name it whatever you&amp;rsquo;d like. Through the rest of this tutorial we&amp;rsquo;ll refer to this directory as &amp;ldquo;root&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="94e7298320324aa122bda14ac5033651c06b8526" translate="yes" xml:space="preserve">
          <source>Iterate over this filtered list in &lt;code&gt;_layouts/author.html&lt;/code&gt; to output the author&amp;rsquo;s posts:</source>
          <target state="translated">Iterate over this filtered list in &lt;code&gt;_layouts/author.html&lt;/code&gt; to output the author&amp;rsquo;s posts:</target>
        </trans-unit>
        <trans-unit id="a513c9de137d83a7609a8bb13bdbeb5834ec76bd" translate="yes" xml:space="preserve">
          <source>Jekyll</source>
          <target state="translated">Jekyll</target>
        </trans-unit>
        <trans-unit id="808c67fa4e431d5699a6613bd573f08cc162cac0" translate="yes" xml:space="preserve">
          <source>Jekyll &amp;amp; Mac OS X 10.11</source>
          <target state="translated">JekyllおよびMac OS X 10.11</target>
        </trans-unit>
        <trans-unit id="42d44d38eb2ee5033d3fa25ce2ee70b00815734a" translate="yes" xml:space="preserve">
          <source>Jekyll &amp;amp; macOS</source>
          <target state="translated">Jekyll &amp;amp; macOS</target>
        </trans-unit>
        <trans-unit id="205b18c33b3c10f3254a98f57a2a0c9d4d658afa" translate="yes" xml:space="preserve">
          <source>Jekyll 1.0 introduced several new config file options. Before you upgrade, you should check to see if any of these are present in your pre-1.0 config file, and if so, make sure that you&amp;rsquo;re using them properly:</source>
          <target state="translated">Jekyll 1.0はいくつかの新しい設定ファイルオプションを導入しました。アップグレードする前に、これらが1.0より前の設定ファイルに存在するかどうかを確認し、存在する場合は、それらを適切に使用していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="aebdcc36a1ed7b3f59a70e00c56c89d470eddae0" translate="yes" xml:space="preserve">
          <source>Jekyll 4.0 started allowing themes to bundle a &lt;code&gt;_config.yml&lt;/code&gt; to simplify theme-onboarding for new users. In the unfortunate situation that importing a bundled theme configuration messes up the merged site-configuration, the user can configure Jekyll to not import the theme-config entirely.</source>
          <target state="translated">Jekyll 4.0 started allowing themes to bundle a &lt;code&gt;_config.yml&lt;/code&gt; to simplify theme-onboarding for new users. In the unfortunate situation that importing a bundled theme configuration messes up the merged site-configuration, the user can configure Jekyll to not import the theme-config entirely.</target>
        </trans-unit>
        <trans-unit id="c5fbaceceae97f7b63177a421596fd01c4f53d0b" translate="yes" xml:space="preserve">
          <source>Jekyll Contributor Code of Conduct</source>
          <target state="translated">ジキル投稿者行動規範</target>
        </trans-unit>
        <trans-unit id="9324efe9664b58f2dd291b099f41ed59223057e4" translate="yes" xml:space="preserve">
          <source>Jekyll Plugins Wanted</source>
          <target state="translated">ジキルプラグイン募集</target>
        </trans-unit>
        <trans-unit id="7d8fadf2d825e12ec8771d9cdf8e6df407e1fedf" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to concoct your sites in any way you can dream up, and it&amp;rsquo;s thanks to the powerful and flexible configuration options that this is possible. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</source>
          <target state="translated">Jekyllを使用すると、思い通りの方法でサイトを作成できます。これが可能なのは、強力で柔軟な構成オプションのおかげです。これらのオプションは、サイトのルートディレクトリにある &lt;code&gt;_config.yml&lt;/code&gt; ファイルで指定するか、ターミナルで &lt;code&gt;jekyll&lt;/code&gt; 実行可能ファイルのフラグとして指定できます。</target>
        </trans-unit>
        <trans-unit id="4097b74ac38435b11aa3b17fad4cd1447bc26ea5" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to customize your Sass conversion in certain ways.</source>
          <target state="translated">Jekyllでは、特定の方法でSass変換をカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="5a06ba36e9af56403d57bad46108a8d760e07012" translate="yes" xml:space="preserve">
          <source>Jekyll also comes with a built-in development server that will allow you to preview what the generated site will look like in your browser locally.</source>
          <target state="translated">また、Jekyllには開発サーバーが内蔵されており、生成されたサイトがローカルのブラウザでどのように見えるかをプレビューすることができます。</target>
        </trans-unit>
        <trans-unit id="5a89ce5f5b58a0ca4e12ac806869bef329c65e94" translate="yes" xml:space="preserve">
          <source>Jekyll also has built-in support for syntax highlighting of code snippets using either Pygments or Rouge, and including a code snippet in any post is easy. Just use the dedicated Liquid tag as follows:</source>
          <target state="translated">Jekyllは、PygmentsまたはRougeを使用したコードスニペットのシンタックスハイライトにも対応しており、どの投稿にも簡単にコードスニペットを含めることができます。以下のように専用の Liquid タグを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="c75f08d618f8d6918cce6239d9eabbc6fbb20362" translate="yes" xml:space="preserve">
          <source>Jekyll can handle many different iterations of the idea you might associate with a &amp;ldquo;post,&amp;rdquo; however a standard blog style post, including a Title, Layout, Publishing Date, and Categories might look like this:</source>
          <target state="translated">Jekyllは、「投稿」に関連付けることができるアイデアのさまざまなイテレーションを処理できますが、タイトル、レイアウト、公開日、カテゴリなど、標準のブログスタイルの投稿は次のようになります。</target>
        </trans-unit>
        <trans-unit id="84f7b0bcb2763398d2709655311c727de99f72c4" translate="yes" xml:space="preserve">
          <source>Jekyll does not generate a &amp;lsquo;page1&amp;rsquo; folder, so the above code will not work when a &lt;code&gt;/page1&lt;/code&gt; link is produced. See below for a way to handle this if it&amp;rsquo;s a problem for you.</source>
          <target state="translated">Jekyllは「page1」フォルダを生成しないため、 &lt;code&gt;/page1&lt;/code&gt; リンクが生成された場合、上記のコードは機能しません。これが問題である場合に対処する方法については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="623989c9f30f91c5701a5467a4c6c7f7a8c5f576" translate="yes" xml:space="preserve">
          <source>Jekyll expects all &lt;em&gt;include files&lt;/em&gt; to be placed in an &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory. In the above example, this will embed the contents of &lt;code&gt;_includes/footer.html&lt;/code&gt; into the calling file.</source>
          <target state="translated">Jekyllは、すべての&lt;em&gt;インクルードファイル&lt;/em&gt;がソースディレクトリのルートにある &lt;code&gt;_includes&lt;/code&gt; ディレクトリに配置されることを想定してい&lt;em&gt;ます&lt;/em&gt;。上記の例では、これにより &lt;code&gt;_includes/footer.html&lt;/code&gt; の内容が呼び出しファイルに埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="eaad9cda13255d782ecc3798d5ba55c078f88d41" translate="yes" xml:space="preserve">
          <source>Jekyll generates your static site to the &lt;code&gt;_site&lt;/code&gt; directory by default. You can transfer the contents of this directory to almost any hosting provider to get your site live. Here are some manual ways of achieving this:</source>
          <target state="translated">Jekyll generates your static site to the &lt;code&gt;_site&lt;/code&gt; directory by default. You can transfer the contents of this directory to almost any hosting provider to get your site live. Here are some manual ways of achieving this:</target>
        </trans-unit>
        <trans-unit id="f823e2478049f311b334a187f8c8c8ce996d032e" translate="yes" xml:space="preserve">
          <source>Jekyll gives this particular group of gems in your &lt;code&gt;Gemfile&lt;/code&gt; a different treatment. Any gem included in this group is loaded before Jekyll starts processing the rest of your source directory.</source>
          <target state="translated">Jekyllは、 &lt;code&gt;Gemfile&lt;/code&gt; 内のこの特定の宝石グループに別の扱いをします。このグループに含まれるgemは、Jekyllがソースディレクトリの残りの処理を開始する前に読み込まれます。</target>
        </trans-unit>
        <trans-unit id="a6c0da7b0268e18dbdfe89e5f60e7b2d019abe26" translate="yes" xml:space="preserve">
          <source>Jekyll gives you a lot of flexibility to customize how it builds your site. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; or &lt;code&gt;_config.toml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</source>
          <target state="translated">Jekyll gives you a lot of flexibility to customize how it builds your site. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; or &lt;code&gt;_config.toml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</target>
        </trans-unit>
        <trans-unit id="9779f5873de87b96de9d0b2e2560ee55da48ea40" translate="yes" xml:space="preserve">
          <source>Jekyll handles two special Redcarpet extensions:</source>
          <target state="translated">ジェキルはレッドカーペットの特殊なエクステンションを2つ扱います。</target>
        </trans-unit>
        <trans-unit id="2b368cd086c4cf9c3da1721dc215c046acd3cc22" translate="yes" xml:space="preserve">
          <source>Jekyll has a plugin system with hooks that allow you to create custom generated content specific to your site. You can run custom code for your site without having to modify the Jekyll source itself.</source>
          <target state="translated">Jekyllには、あなたのサイトに特化したカスタム生成コンテンツを作成できるフックを備えたプラグインシステムがあります。Jekyllのソース自体を修正することなく、サイト用のカスタムコードを実行することができます。</target>
        </trans-unit>
        <trans-unit id="e59cffaea8e7dd210f0672d747ee169ae5e28a92" translate="yes" xml:space="preserve">
          <source>Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes package up layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</source>
          <target state="translated">Jekyllには、コミュニティが管理するテンプレートとスタイルを利用してサイトのプレゼンテーションをカスタマイズできる広範なテーマシステムがあります。Jekyllテーマは、レイアウト、インクルード、スタイルシートを、サイトのコンテンツで上書きできるようにパッケージ化します。</target>
        </trans-unit>
        <trans-unit id="a1c53e13db7d0a28e24bacad75dd1c5690f478da" translate="yes" xml:space="preserve">
          <source>Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes specify plugins and package up assets, layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</source>
          <target state="translated">Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes specify plugins and package up assets, layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</target>
        </trans-unit>
        <trans-unit id="7962a348f79756dc69e793015cfcc73ab94df544" translate="yes" xml:space="preserve">
          <source>Jekyll has built in support for syntax highlighting of over 100 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above.</source>
          <target state="translated">Jekyll has built in support for syntax highlighting of over 100 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above.</target>
        </trans-unit>
        <trans-unit id="796a53df1f3443b9e298618111b14017b66fb383" translate="yes" xml:space="preserve">
          <source>Jekyll has built in support for syntax highlighting of over 60 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above. To use it in Jekyll 2, set &lt;code&gt;highlighter&lt;/code&gt; to &lt;code&gt;rouge&lt;/code&gt; and ensure the &lt;code&gt;rouge&lt;/code&gt; gem is installed properly.</source>
          <target state="translated">Jekyllには、&lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rougeの&lt;/a&gt;おかげで、60を超える言語の構文強調表示のサポートが組み込まれています。 Rougeは、Jekyll 3以降のデフォルトの蛍光ペンです。 Jekyll 2で使用するには、 &lt;code&gt;highlighter&lt;/code&gt; を &lt;code&gt;rouge&lt;/code&gt; に設定し、 &lt;code&gt;rouge&lt;/code&gt; gemが正しくインストールされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="0892635cf7504b3e5483cf4a0443e903aca70ce7" translate="yes" xml:space="preserve">
          <source>Jekyll has first class support for &lt;em&gt;tags&lt;/em&gt; and &lt;em&gt;categories&lt;/em&gt; in blog posts.</source>
          <target state="translated">Jekyll has first class support for &lt;em&gt;tags&lt;/em&gt; and &lt;em&gt;categories&lt;/em&gt; in blog posts.</target>
        </trans-unit>
        <trans-unit id="caa9b48afeeada7fcf9b5c8191de86955ffe80fc" translate="yes" xml:space="preserve">
          <source>Jekyll is a &lt;a href=&quot;../ruby-101/index#gems&quot;&gt;Ruby Gem&lt;/a&gt; that can be installed on most systems.</source>
          <target state="translated">Jekyll is a &lt;a href=&quot;../ruby-101/index#gems&quot;&gt;Ruby Gem&lt;/a&gt; that can be installed on most systems.</target>
        </trans-unit>
        <trans-unit id="072465ea7eb6881bb95253fc752079dadd1fd275" translate="yes" xml:space="preserve">
          <source>Jekyll is a Ruby program so you need to install Ruby on your machine to begin with. Head over to the &lt;a href=&quot;../../installation/index&quot;&gt;install guide&lt;/a&gt; and follow the instructions for your operating system.</source>
          <target state="translated">Jekyll is a Ruby program so you need to install Ruby on your machine to begin with. Head over to the &lt;a href=&quot;../../installation/index&quot;&gt;install guide&lt;/a&gt; and follow the instructions for your operating system.</target>
        </trans-unit>
        <trans-unit id="2458c344061b15cf37f18b7f901cfd2423a81e1c" translate="yes" xml:space="preserve">
          <source>Jekyll is a gem. Many Jekyll &lt;a href=&quot;../plugins/index&quot;&gt;plugins&lt;/a&gt; are also gems, including &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;, &lt;a href=&quot;https://github.com/jekyll/jekyll-seo-tag&quot;&gt;jekyll-seo-tag&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll-archives&quot;&gt;jekyll-archives&lt;/a&gt;.</source>
          <target state="translated">Jekyll is a gem. Many Jekyll &lt;a href=&quot;../plugins/index&quot;&gt;plugins&lt;/a&gt; are also gems, including &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;, &lt;a href=&quot;https://github.com/jekyll/jekyll-seo-tag&quot;&gt;jekyll-seo-tag&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll-archives&quot;&gt;jekyll-archives&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f07f9ec0a1524d864b1fec9586093e957570d58c" translate="yes" xml:space="preserve">
          <source>Jekyll is a simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;) and our &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, which means you can use Jekyll to host your project&amp;rsquo;s page, blog, or website from GitHub&amp;rsquo;s servers &lt;strong&gt;for free&lt;/strong&gt;.</source>
          <target state="translated">Jekyllはシンプルなブログ対応の静的サイトジェネレーターです。これは、さまざまな形式の未加工テキストファイルを含むテンプレートディレクトリを&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;取得&lt;/a&gt;し、コンバーター（Markdownなど）と&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;レンダラーを介して実行し、お気に入りのWebサーバーでの提供に適した完全ですぐに公開できる静的Webサイトを出力します。また、Jekyllは&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pagesの&lt;/a&gt;背後にあるエンジンでもあります。つまり、Jekyllを使用して、GitHubサーバーからプロジェクトのページ、ブログ、またはWebサイト&lt;strong&gt;を無料で&lt;/strong&gt;ホストできます。</target>
        </trans-unit>
        <trans-unit id="d3dd2cd2cbdfe4ae20dd71967ec180dae63373da" translate="yes" xml:space="preserve">
          <source>Jekyll is a static site generator so we need Jekyll to build the site before we can view it. There are two commands you can run in the root of your site to build it:</source>
          <target state="translated">Jekyllは静的なサイトジェネレーターなので、サイトを表示する前にJekyllでサイトを構築する必要があります。サイトを構築するために、サイトのルートで実行できる2つのコマンドがあります。</target>
        </trans-unit>
        <trans-unit id="31d88f5d67f19f36eb7649186dbed9f15e4c7771" translate="yes" xml:space="preserve">
          <source>Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site&amp;rsquo;s look and feel, URLs, the data displayed on the page, and more.</source>
          <target state="translated">Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site&amp;rsquo;s look and feel, URLs, the data displayed on the page, and more.</target>
        </trans-unit>
        <trans-unit id="79c036ffff671c2109909b1d044da4eba4d477c1" translate="yes" xml:space="preserve">
          <source>Jekyll is written in Ruby. If you&amp;rsquo;re new to Ruby, this page helps you learn some of the terminology.</source>
          <target state="translated">Jekyll is written in Ruby. If you&amp;rsquo;re new to Ruby, this page helps you learn some of the terminology.</target>
        </trans-unit>
        <trans-unit id="e779c5f9969a3932787d2f57008cd6dbcd7b4559" translate="yes" xml:space="preserve">
          <source>Jekyll is, at its core, a text transformation engine. The concept behind the system is this: you give it text written in your favorite markup language, be that Markdown, Textile, or just plain HTML, and it churns that through a layout or a series of layout files. Throughout that process you can tweak how you want the site URLs to look, what data gets displayed in the layout, and more. This is all done through editing text files; the static web site is the final product.</source>
          <target state="translated">Jekyllは、その中核をなすテキスト変換エンジンです。システムの背後にあるコンセプトは次のとおりです:Markdown、Textile、または単なるプレーンHTMLなど、好きなマークアップ言語で書かれたテキストを与えると、それをレイアウトまたは一連のレイアウトファイルに変換します。そのプロセスを通して、サイトのURLがどのように見えるようにしたいか、どのようなデータがレイアウトに表示されるか、および多くを微調整することができます。これらはすべてテキストファイルの編集によって行われ、静的なウェブサイトが最終製品となります。</target>
        </trans-unit>
        <trans-unit id="e3bf1359d968bddfda521ff08e5d2b20c445a054" translate="yes" xml:space="preserve">
          <source>Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;@context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;@context.registers[:site]&lt;/code&gt;. For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;@context.registers[:site].config&lt;/code&gt;.</source>
          <target state="translated">Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;@context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;@context.registers[:site]&lt;/code&gt; . For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;@context.registers[:site].config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbc354ba340e745916a498948c20a2e8b128cc74" translate="yes" xml:space="preserve">
          <source>Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;context.registers[:site]&lt;/code&gt;. For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;context.registers[:site].config&lt;/code&gt;.</source>
          <target state="translated">Jekyllでは、 &lt;code&gt;context.registers[:site]&lt;/code&gt; でLiquid の &lt;code&gt;context.registers&lt;/code&gt; 機能を介して &lt;code&gt;site&lt;/code&gt; オブジェクトにアクセスできます。たとえば、 &lt;code&gt;context.registers[:site].config&lt;/code&gt; を使用してグローバル構成ファイル &lt;code&gt;_config.yml&lt;/code&gt; にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="1b5db8cfbe3fba167a0a2e8a885be9432181f655" translate="yes" xml:space="preserve">
          <source>Jekyll looks for the &lt;code&gt;_layouts&lt;/code&gt; directory either at the root of your site's &lt;code&gt;source&lt;/code&gt; or at the root of your theme.</source>
          <target state="translated">Jekyll looks for the &lt;code&gt;_layouts&lt;/code&gt; directory either at the root of your site's &lt;code&gt;source&lt;/code&gt; or at the root of your theme.</target>
        </trans-unit>
        <trans-unit id="2c0656f7a345abf21e2147e2a0fcb89e0933f64f" translate="yes" xml:space="preserve">
          <source>Jekyll makes posts available at &lt;code&gt;site.posts&lt;/code&gt;.</source>
          <target state="translated">Jekyll makes posts available at &lt;code&gt;site.posts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="636d48ced345024e256998d5677894ebcd469745" translate="yes" xml:space="preserve">
          <source>Jekyll makes this data file available to you at &lt;code&gt;site.data.navigation&lt;/code&gt;. Instead of outputting each link in &lt;code&gt;_includes/navigation.html&lt;/code&gt;, now you can iterate over the data file instead:</source>
          <target state="translated">Jekyll makes this data file available to you at &lt;code&gt;site.data.navigation&lt;/code&gt; . Instead of outputting each link in &lt;code&gt;_includes/navigation.html&lt;/code&gt; , now you can iterate over the data file instead:</target>
        </trans-unit>
        <trans-unit id="91ded4d9bcfd892aece0c6969de6ac9f3b2af1b8" translate="yes" xml:space="preserve">
          <source>Jekyll now lets you write draft posts, and allows you to easily preview how they will look prior to publishing. To start a draft, simply create a folder called &lt;code&gt;_drafts&lt;/code&gt; in your site&amp;rsquo;s source directory (e.g., alongside &lt;code&gt;_posts&lt;/code&gt;), and add a new markdown file to it. To preview your new post, simply run the &lt;code&gt;jekyll serve&lt;/code&gt; command with the &lt;code&gt;--drafts&lt;/code&gt; flag.</source>
          <target state="translated">Jekyllで投稿の下書きを作成できるようになり、公開前に投稿の外観を簡単にプレビューできるようになりました。下書きを開始するには、サイトのソースディレクトリに &lt;code&gt;_drafts&lt;/code&gt; というフォルダーを（たとえば、 &lt;code&gt;_posts&lt;/code&gt; と一緒に）作成し、そこに新しいマークダウンファイルを追加します。新しい投稿をプレビューするには、 &lt;code&gt;--drafts&lt;/code&gt; フラグを指定してjekyll &lt;code&gt;jekyll serve&lt;/code&gt; コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="158e07ed483c3a91f97e15f45172243ece02f69d" translate="yes" xml:space="preserve">
          <source>Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;.</source>
          <target state="translated">Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0ee102bf04dc72cf649ca51cdf3be64db665ed5b" translate="yes" xml:space="preserve">
          <source>Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;. While &amp;lsquo;new&amp;rsquo; blogs created with Jekyll v3.4 and greater, will have the following added to their &amp;lsquo;Gemfile&amp;rsquo; by default, existing sites &lt;em&gt;will&lt;/em&gt; have to update their &amp;lsquo;Gemfile&amp;rsquo; (and installed) to enable development on Windows:</source>
          <target state="translated">Jekyllはrubygemを使用して、確立された&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANAタイムゾーンデータベースに&lt;/a&gt;基づいてタイムゾーンを内部的に設定するようになりました。Jekyll v3.4以降で作成された「新しい」ブログでは、デフォルトで次のものが「Gemfile」に追加されますが、既存のサイトで&lt;em&gt;は&lt;/em&gt; Windowsでの開発を可能にするために「Gemfile」を更新（およびインストール）する必要があります。</target>
        </trans-unit>
        <trans-unit id="b5417244e089ca9b88be0d8d04080295b358c06b" translate="yes" xml:space="preserve">
          <source>Jekyll on Linux</source>
          <target state="translated">ジキルオンリナックス</target>
        </trans-unit>
        <trans-unit id="ac4d51a2cd8689b1cd95bcd8bca8baa71494548f" translate="yes" xml:space="preserve">
          <source>Jekyll on Twitter</source>
          <target state="translated">ジキルをツイッターで</target>
        </trans-unit>
        <trans-unit id="47e4a47081791075195441945d68467332c7e594" translate="yes" xml:space="preserve">
          <source>Jekyll on Ubuntu</source>
          <target state="translated">Jekyll on Ubuntu</target>
        </trans-unit>
        <trans-unit id="9db167acaa9239338db11bc4db579948bb8bcd54" translate="yes" xml:space="preserve">
          <source>Jekyll on Windows</source>
          <target state="translated">Windowsのジキル</target>
        </trans-unit>
        <trans-unit id="f6f82c018dd7047302fec182aa54abfeee7089dc" translate="yes" xml:space="preserve">
          <source>Jekyll on macOS</source>
          <target state="translated">macOSのジキル</target>
        </trans-unit>
        <trans-unit id="f3802f7ca4dd2fd55ddff8cc084c2e669cf03918" translate="yes" xml:space="preserve">
          <source>Jekyll plugins allow you to create custom generated content specific to your site. There&amp;rsquo;s many &lt;a href=&quot;../../plugins/index&quot;&gt;plugins&lt;/a&gt; available or you can even write your own.</source>
          <target state="translated">Jekyll plugins allow you to create custom generated content specific to your site. There&amp;rsquo;s many &lt;a href=&quot;../../plugins/index&quot;&gt;plugins&lt;/a&gt; available or you can even write your own.</target>
        </trans-unit>
        <trans-unit id="5ea510d5fc4795cd9f40638b7de1ca1bcbf30ce4" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters and tags in asset files</source>
          <target state="translated">Jekyll はアセットファイル内のすべての Liquid フィルターとタグを処理します。</target>
        </trans-unit>
        <trans-unit id="802e65a087d4160c667727cfbcb1a534752ec8b7" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters in code blocks</source>
          <target state="translated">ジキルはすべての液体フィルターをコードブロックで処理します。</target>
        </trans-unit>
        <trans-unit id="da747496c9a65f0a8c00ec6f4f3531565cafab9d" translate="yes" xml:space="preserve">
          <source>Jekyll provides a number of useful Liquid additions to help you build your site:</source>
          <target state="translated">Jekyllは、あなたのサイトを構築するのに役立つ多くの便利な液体の追加を提供しています。</target>
        </trans-unit>
        <trans-unit id="a49d25367b1e6670095bcbe7ed5adcff5094f19b" translate="yes" xml:space="preserve">
          <source>Jekyll provides built-in support for &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; and can work with &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt;) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</source>
          <target state="translated">Jekyll provides built-in support for &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; and can work with &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt; , &lt;code&gt;.scss&lt;/code&gt; , or &lt;code&gt;.coffee&lt;/code&gt; ) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</target>
        </trans-unit>
        <trans-unit id="edba0ddab22968e6856800e9e202c01271877d09" translate="yes" xml:space="preserve">
          <source>Jekyll provides built-in support for Sass and can work with CoffeeScript via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt;) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</source>
          <target state="translated">JekyllはSassの組み込みサポートを提供し、Ruby gemを介してCoffeeScriptと連携できます。それらを使用するには、まず適切な拡張子名（ &lt;code&gt;.sass&lt;/code&gt; 、 &lt;code&gt;.scss&lt;/code&gt; 、または &lt;code&gt;.coffee&lt;/code&gt; のいずれか）を使用してファイルを作成し、次のように&lt;strong&gt;&lt;em&gt;2行の三重ダッシュ&lt;/em&gt;&lt;/strong&gt;で&lt;strong&gt;&lt;em&gt;ファイルを開始する必要があります&lt;/em&gt;&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="46359c83174cdcd8c267384987a54331c82e82ce" translate="yes" xml:space="preserve">
          <source>Jekyll provides by default &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; response headers: one dynamic in order to specify the nature of the data being served, the other static in order to disable caching so that you don&amp;rsquo;t have to fight with Chrome&amp;rsquo;s aggressive caching when you are in development mode.</source>
          <target state="translated">Jekyll provides by default &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; response headers: one dynamic in order to specify the nature of the data being served, the other static in order to disable caching so that you don&amp;rsquo;t have to fight with Chrome&amp;rsquo;s aggressive caching when you are in development mode.</target>
        </trans-unit>
        <trans-unit id="430b6448029a060479d76de3740d1c9e2f3d5809" translate="yes" xml:space="preserve">
          <source>Jekyll provides hooks for &lt;code&gt;:site&lt;/code&gt;, &lt;code&gt;:pages&lt;/code&gt;, &lt;code&gt;:posts&lt;/code&gt;, and &lt;code&gt;:documents&lt;/code&gt;. In all cases, Jekyll calls your hooks with the container object as the first callback parameter. However, all &lt;code&gt;:pre_render&lt;/code&gt; hooks and the&lt;code&gt;:site, :post_render&lt;/code&gt; hook will also provide a payload hash as a second parameter. In the case of &lt;code&gt;:pre_render&lt;/code&gt;, the payload gives you full control over the variables that are available while rendering. In the case of &lt;code&gt;:site, :post_render&lt;/code&gt;, the payload contains final values after rendering all the site (useful for sitemaps, feeds, etc).</source>
          <target state="translated">Jekyllは、 &lt;code&gt;:site&lt;/code&gt; 、 &lt;code&gt;:pages&lt;/code&gt; 、 &lt;code&gt;:posts&lt;/code&gt; 、 &lt;code&gt;:documents&lt;/code&gt; のフックを提供します。すべての場合において、Jekyllは最初のコールバックパラメータとしてコンテナオブジェクトを使用してフックを呼び出します。ただし、すべての &lt;code&gt;:pre_render&lt;/code&gt; フックと &lt;code&gt;:site, :post_render&lt;/code&gt; フックは、2番目のパラメーターとしてペイロードハッシュも提供します。 &lt;code&gt;:pre_render&lt;/code&gt; の場合、ペイロードによって、レンダリング中に使用できる変数を完全に制御できます。以下の場合 &lt;code&gt;:site, :post_render&lt;/code&gt; 、ペイロードは、すべてのサイト（サイトマップ、飼料に役立つ、など）をレンダリングした後、最終的な値が含まれています。</target>
        </trans-unit>
        <trans-unit id="c30cbac395c5ac11e64e43dea9f5bb8fd6d017c5" translate="yes" xml:space="preserve">
          <source>Jekyll requires &lt;strong&gt;Ruby v2.4.0&lt;/strong&gt; or higher. macOS Catalina 10.15 ships with Ruby 2.6.3. Check your Ruby version using &lt;code&gt;ruby -v&lt;/code&gt;.</source>
          <target state="translated">Jekyllには&lt;strong&gt;Rubyv2.4.0&lt;/strong&gt;以降が必要です。macOS Catalina10.15にはRuby2.6.3が付属しています。 &lt;code&gt;ruby -v&lt;/code&gt; を使用してRubyのバージョンを確認してください。</target>
        </trans-unit>
        <trans-unit id="0644ee5a4a42d81d51373b99fc8751efc1a9daa3" translate="yes" xml:space="preserve">
          <source>Jekyll requires &lt;strong&gt;Ruby v2.5.0&lt;/strong&gt; or higher. macOS Catalina 10.15 ships with Ruby 2.6.3. Check your Ruby version using &lt;code&gt;ruby -v&lt;/code&gt;.</source>
          <target state="translated">Jekyll requires &lt;strong&gt;Ruby v2.5.0&lt;/strong&gt; or higher. macOS Catalina 10.15 ships with Ruby 2.6.3. Check your Ruby version using &lt;code&gt;ruby -v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f002d6623841c1892ef574e9c828b235a3d3d05d" translate="yes" xml:space="preserve">
          <source>Jekyll requires the following:</source>
          <target state="translated">ジキルには以下が必要です。</target>
        </trans-unit>
        <trans-unit id="2b4be10fd436b4843092922a4363eca9671b242f" translate="yes" xml:space="preserve">
          <source>Jekyll runs with the following configuration options by default. Alternative settings for these options can be explicitly specified in the configuration file or on the command-line.</source>
          <target state="translated">Jekyll はデフォルトでは以下の設定オプションで動作します。これらのオプションの代替設定は、設定ファイルまたはコマンドラインで明示的に指定することができます。</target>
        </trans-unit>
        <trans-unit id="af0e25e85629fe7795f30ef93965300c01ea8040" translate="yes" xml:space="preserve">
          <source>Jekyll sites often use this structure to keep assets organized:</source>
          <target state="translated">ジキルのサイトでは、資産を整理するためにこの構造を使うことが多いです。</target>
        </trans-unit>
        <trans-unit id="7b56f4c7875b9222396502bc638c4eaec78060f6" translate="yes" xml:space="preserve">
          <source>Jekyll supports &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; as well as HTML for pages. Markdown is a great choice for pages with a simple content structure (just paragraphs, headings and images), as it&amp;rsquo;s less verbose than raw HTML. Let&amp;rsquo;s try it out on the next page.</source>
          <target state="translated">Jekyll supports &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; as well as HTML for pages. Markdown is a great choice for pages with a simple content structure (just paragraphs, headings and images), as it&amp;rsquo;s less verbose than raw HTML. Let&amp;rsquo;s try it out on the next page.</target>
        </trans-unit>
        <trans-unit id="4d86edd2aa624b27088d705b31d4b2dde59375a7" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Tab-separated_values&quot;&gt;TSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV and TSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Tab-separated_values&quot;&gt;TSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV and TSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</target>
        </trans-unit>
        <trans-unit id="5a88d78d1f9899a437aa358de44fe1d1d38bcfd3" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyllは、 &lt;code&gt;_data&lt;/code&gt; ディレクトリにある&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;、&lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;、&lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;ファイルからのデータの読み込みをサポートしています。CSVファイルにはヘッダー行が含まれている&lt;em&gt;必要&lt;/em&gt;があることに注意してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1ce9132b7073ec4bd890475c43d39d722bbf7c5" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from YAML, JSON, and CSV files located in a &lt;code&gt;_data&lt;/code&gt; directory. Data files are a great way to separate content from source code to make the site easier to maintain.</source>
          <target state="translated">Jekyll supports loading data from YAML, JSON, and CSV files located in a &lt;code&gt;_data&lt;/code&gt; directory. Data files are a great way to separate content from source code to make the site easier to maintain.</target>
        </trans-unit>
        <trans-unit id="cb6c67edc0dab202898b18be5c476739c32221f1" translate="yes" xml:space="preserve">
          <source>Jekyll supports permalinks that contain neither a trailing slash nor a file extension, but this requires additional support from the web server to properly serve. When using these types of permalinks, output files written to disk will still have the proper file extension (typically &lt;code&gt;.html&lt;/code&gt;), so the web server must be able to map requests without file extensions to these files.</source>
          <target state="translated">Jekyllは、末尾のスラッシュもファイル拡張子も含まないパーマリンクをサポートしますが、適切に機能するには、Webサーバーからの追加サポートが必要です。これらのタイプのパーマリンクを使用する場合、ディスクに書き込まれる出力ファイルは適切なファイル拡張子（通常は &lt;code&gt;.html&lt;/code&gt; ）を持つため、Webサーバーはこれらのファイルにファイル拡張子なしでリクエストをマップできる必要があります。</target>
        </trans-unit>
        <trans-unit id="b0613f7e22216b0d97a46cb92e154dce22ac1ff0" translate="yes" xml:space="preserve">
          <source>Jekyll themes set default layouts, includes, and stylesheets. However, you can override any of the theme defaults with your own site content.</source>
          <target state="translated">Jekyll テーマはデフォルトのレイアウト、インクルード、スタイルシートを設定します。しかし、あなた自身のサイトのコンテンツでテーマのデフォルトを上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="c767e23f5a22319259cb447f562ce0826acbd058" translate="yes" xml:space="preserve">
          <source>Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via &lt;a href=&quot;../liquid/index&quot;&gt;Liquid&lt;/a&gt;. The following is a reference of the available data.</source>
          <target state="translated">Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via &lt;a href=&quot;../liquid/index&quot;&gt;Liquid&lt;/a&gt;. The following is a reference of the available data.</target>
        </trans-unit>
        <trans-unit id="b14d294b4a5a02070c4e47c5f1097b5b051410ba" translate="yes" xml:space="preserve">
          <source>Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via the &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid templating system&lt;/a&gt;. The following is a reference of the available data.</source>
          <target state="translated">ジキルは、処理するファイルを探してサイトを横断します。&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLの前付けがある&lt;/a&gt;ファイルは処理の対象となります。これらの各ファイルについて、Jekyllは&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquidテンプレートシステムを&lt;/a&gt;介してさまざまなデータを利用できるようにします。以下は利用可能なデータのリファレンスです。</target>
        </trans-unit>
        <trans-unit id="7b80e53a19b7c75cad65aedd5f21d9647b0b06f4" translate="yes" xml:space="preserve">
          <source>Jekyll treats these files the same as a regular page, in that the output file will be placed in the same directory that it came from. For instance, if you have a file named &lt;code&gt;css/styles.scss&lt;/code&gt; in your site&amp;rsquo;s source folder, Jekyll will process it and put it in your site&amp;rsquo;s destination folder under &lt;code&gt;css/styles.css&lt;/code&gt;.</source>
          <target state="translated">Jekyllはこれらのファイルを通常のページと同じように扱い、出力ファイルは元のページと同じディレクトリに配置されます。たとえば、サイトのソースフォルダーに &lt;code&gt;css/styles.scss&lt;/code&gt; という名前のファイルがある場合、Jekyllはそれを処理し、 &lt;code&gt;css/styles.css&lt;/code&gt; の下のサイトの宛先フォルダーに配置します。</target>
        </trans-unit>
        <trans-unit id="f73d83df7e9a0ece6ec12b1b50556d49a27f48ff" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates.</source>
          <target state="translated">Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates.</target>
        </trans-unit>
        <trans-unit id="8bc77ad887f5021280263c947d7e9ba538afd6ac" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates. All of the standard Liquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;filters&lt;/a&gt; are supported. To make common tasks easier, Jekyll even adds a few handy filters and tags of its own, all of which you can find on this page. Jekyll even lets you come up with your own tags via plugins.</source>
          <target state="translated">Jekyllは&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;テンプレート言語を使用してテンプレートを処理します。標準のLiquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;タグ&lt;/a&gt;と&lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;フィルター&lt;/a&gt;はすべてサポートされています。一般的なタスクをより簡単にするために、Jekyllは独自のいくつかの便利なフィルターとタグを追加します。これらはすべてこのページにあります。Jekyllでは、プラグイン経由で独自のタグを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="98c1feeb240ca9f85a5898de8492c75acc86d3be" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;code&gt;listen&lt;/code&gt; gem to watch for changes when the &lt;code&gt;--watch&lt;/code&gt; switch is specified during a build or serve. While &lt;code&gt;listen&lt;/code&gt; has built-in support for UNIX systems, it may require an extra gem for compatibility with Windows.</source>
          <target state="translated">Jekyllは、ビルドまたは提供中に &lt;code&gt;--watch&lt;/code&gt; スイッチが指定されている場合、 &lt;code&gt;listen&lt;/code&gt; gemを使用して変更を監視します。一方で &lt;code&gt;listen&lt;/code&gt; 組み込まれているUNIXシステムのサポートは、Windowsとの互換性のための余分な宝石が必要な場合があります。</target>
        </trans-unit>
        <trans-unit id="9dc8584b9d061d2a48af50a6e913d9bc51afb984" translate="yes" xml:space="preserve">
          <source>Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. However, you can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</source>
          <target state="translated">Jekyllは、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルの &lt;code&gt;defaults&lt;/code&gt; セクションで指定したすべての構成設定を適用します。ただし、スコープのより具体的なパスを指定することにより、他のスコープと値のペアからの設定を上書きすることを選択できます。</target>
        </trans-unit>
        <trans-unit id="a11450ec20fa2068858e6fb5a90eb196fc059da5" translate="yes" xml:space="preserve">
          <source>Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. You can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</source>
          <target state="translated">Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. You can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</target>
        </trans-unit>
        <trans-unit id="ec5df39ca8b217af9fdeedd6a19aae0269168d48" translate="yes" xml:space="preserve">
          <source>Jekyll will automatically require all whitelisted &lt;code&gt;runtime_dependencies&lt;/code&gt; of your theme-gem even if they&amp;rsquo;re not explicitly included under the &lt;code&gt;plugins&lt;/code&gt; array in the site&amp;rsquo;s config file. (Note: whitelisting is only required when building or serving with the &lt;code&gt;--safe&lt;/code&gt; option.)</source>
          <target state="translated">Jekyllは、サイトの設定ファイルの &lt;code&gt;plugins&lt;/code&gt; 配列の下に明示的に含まれていない場合でも、theme-gemのすべてのホワイトリストの &lt;code&gt;runtime_dependencies&lt;/code&gt; を自動的に要求します。（注：ホワイトリストは、 &lt;code&gt;--safe&lt;/code&gt; オプションでビルドまたは提供する場合にのみ必要です。）</target>
        </trans-unit>
        <trans-unit id="cf1948f6a6c35c37faab5e8a2daf5dafc8a832c4" translate="yes" xml:space="preserve">
          <source>Jekyll will look first to your site&amp;rsquo;s content before looking to the theme&amp;rsquo;s defaults for any requested file in the following folders:</source>
          <target state="translated">Jekyllは最初にサイトのコンテンツを調べてから、次のフォルダーにある要求されたファイルのテーマのデフォルトを調べます。</target>
        </trans-unit>
        <trans-unit id="15cdb1085a422b73cafd0b3daa9e2568ffd30a22" translate="yes" xml:space="preserve">
          <source>Jekyll will look for the referenced file (in this case, &lt;code&gt;footer.html&lt;/code&gt;) in the &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory and insert its contents.</source>
          <target state="translated">Jekyllは、ソースディレクトリのルートにある &lt;code&gt;_includes&lt;/code&gt; ディレクトリで参照ファイル（この場合は &lt;code&gt;footer.html&lt;/code&gt; ）を探し、その内容を挿入します。</target>
        </trans-unit>
        <trans-unit id="cbb8af1f0a6b9e0a078358fca37d17f598256363" translate="yes" xml:space="preserve">
          <source>Jekyll will only convert files that have a YAML header at the top, even for converters you add using a plugin.</source>
          <target state="translated">Jekyllは、プラグインを使って追加したコンバータであっても、先頭にYAMLヘッダを持つファイルのみを変換します。</target>
        </trans-unit>
        <trans-unit id="6e07a9c1e541edebe0ee5b20ad852eafd9ece454" translate="yes" xml:space="preserve">
          <source>Jekyll will read-in a &lt;code&gt;_config.yml&lt;/code&gt; at the root of the theme-gem and merge its data into the site&amp;rsquo;s existing configuration data.</source>
          <target state="translated">Jekyll will read-in a &lt;code&gt;_config.yml&lt;/code&gt; at the root of the theme-gem and merge its data into the site&amp;rsquo;s existing configuration data.</target>
        </trans-unit>
        <trans-unit id="3765b73abf718ce5256390fa98fe5c83c8d821ec" translate="yes" xml:space="preserve">
          <source>Jekyll&amp;rsquo;s default settings cannot be overridden by a theme-config. That &lt;em&gt;ball is still in the user&amp;rsquo;s court.&lt;/em&gt;</source>
          <target state="translated">Jekyll&amp;rsquo;s default settings cannot be overridden by a theme-config. That &lt;em&gt;ball is still in the user&amp;rsquo;s court.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c27dc79dfcd97a956c12f99f1262ad706cbd59b" translate="yes" xml:space="preserve">
          <source>Jekyll&amp;rsquo;s growing use is producing a wide variety of tutorials, frameworks, extensions, examples, and other resources that can be very helpful. Below is a collection of links to some of the most popular Jekyll resources.</source>
          <target state="translated">Jekyllの利用が拡大していることで、非常に役立つさまざまなチュートリアル、フレームワーク、拡張機能、例、その他のリソースが作成されています。以下は、最も人気のあるJekyllリソースへのリンク集です。</target>
        </trans-unit>
        <trans-unit id="87040c2c2ca8dd7dd1f199bb3b01450f1fd6e925" translate="yes" xml:space="preserve">
          <source>Jekyll-Admin for Rails</source>
          <target state="translated">Jekyll-Admin for Rails</target>
        </trans-unit>
        <trans-unit id="2d83d9002b08fdc2cc164e439677e784c1a043ff" translate="yes" xml:space="preserve">
          <source>Jekyllconf</source>
          <target state="translated">Jekyllconf</target>
        </trans-unit>
        <trans-unit id="6bdf1cf399ad963e0a54c8aa9b93779421ed5621" translate="yes" xml:space="preserve">
          <source>Just about any traditional web hosting provider will let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, simply run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</source>
          <target state="translated">ほぼすべての従来のWebホスティングプロバイダーでは、FTP経由でサーバーにファイルをアップロードできます。FTPを使用してJekyllサイトをWebホストにアップロードするには、 &lt;code&gt;jekyll build&lt;/code&gt; コマンドを実行し、生成された &lt;code&gt;_site&lt;/code&gt; フォルダーの内容をホスティングアカウントのルートフォルダーにコピーします。これは、ほとんどのホスティングプロバイダーの &lt;code&gt;httpdocs&lt;/code&gt; または &lt;code&gt;public_html&lt;/code&gt; フォルダーである可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="2ed5147f04a311fb5f5d747f6b09941b7fc9a782" translate="yes" xml:space="preserve">
          <source>Just about every web server configuration you come across will look for an HTML file called &lt;code&gt;index.html&lt;/code&gt; (by convention) in the site&amp;rsquo;s root folder and display that as the homepage. Unless the web server you&amp;rsquo;re using is configured to look for some different filename as the default, this file will turn into the homepage of your Jekyll-generated site.</source>
          <target state="translated">遭遇するほとんどすべてのWebサーバー構成は、サイトのルートフォルダーで &lt;code&gt;index.html&lt;/code&gt; （慣例により）と呼ばれるHTMLファイルを探し、それをホームページとして表示します。使用しているWebサーバーがデフォルトとして別のファイル名を探すように設定されていない限り、このファイルはJekyllが生成したサイトのホームページになります。</target>
        </trans-unit>
        <trans-unit id="42cb84d3edc32b5b2f4400649263390331b44d18" translate="yes" xml:space="preserve">
          <source>Just add the following line:</source>
          <target state="translated">次の行を追加するだけです。</target>
        </trans-unit>
        <trans-unit id="0402a4371d48c94d8742dfa8a73a7366e817e0d9" translate="yes" xml:space="preserve">
          <source>Just after site reset</source>
          <target state="translated">サイトリセット直後</target>
        </trans-unit>
        <trans-unit id="433a432fd1262d35a30183d9f6075570af8bc954" translate="yes" xml:space="preserve">
          <source>Just after the site initializes, but before setup &amp;amp; render. Good for modifying the configuration of the site.</source>
          <target state="translated">サイトの初期化直後、ただしセットアップとレンダリングの前。サイトの構成を変更するのに適しています。</target>
        </trans-unit>
        <trans-unit id="c9895275f3f5f6ebb98bbd5981f6e9aa63e7fc27" translate="yes" xml:space="preserve">
          <source>Just after the site initializes. Good for modifying the configuration of the site. Triggered once per build / serve session</source>
          <target state="translated">サイトが初期化された直後に サイトの設定を変更するのに適しています。ビルド/サーブセッションごとに一度だけトリガーされる</target>
        </trans-unit>
        <trans-unit id="322810c9c79065292b6a1f1ff44477b5d9415eb1" translate="yes" xml:space="preserve">
          <source>Just after the site resets during regeneration</source>
          <target state="translated">再生時にサイトがリセットされた直後</target>
        </trans-unit>
        <trans-unit id="ebb6b1e30faadd702ac129f2183d1aa471da18d8" translate="yes" xml:space="preserve">
          <source>Just before rendering a document</source>
          <target state="translated">ドキュメントをレンダリングする直前</target>
        </trans-unit>
        <trans-unit id="1a8117dd57c47c84d1c161dd2ea8fdef67df5f30" translate="yes" xml:space="preserve">
          <source>Just before rendering a page</source>
          <target state="translated">ページをレンダリングする直前</target>
        </trans-unit>
        <trans-unit id="832cf101757761bef14d4d8fdba336cebe396b37" translate="yes" xml:space="preserve">
          <source>Just before rendering a post</source>
          <target state="translated">投稿をレンダリングする直前に</target>
        </trans-unit>
        <trans-unit id="46e54c34b1deecaf4f770c41a5ff5f0dec8680f3" translate="yes" xml:space="preserve">
          <source>Just before rendering the whole site</source>
          <target state="translated">サイト全体をレンダリングする直前</target>
        </trans-unit>
        <trans-unit id="dc920374c836b8aaf27b60247c0c070b7b18bb10" translate="yes" xml:space="preserve">
          <source>Just like posts you&amp;rsquo;ll need to create a layout for authors.</source>
          <target state="translated">Just like posts you&amp;rsquo;ll need to create a layout for authors.</target>
        </trans-unit>
        <trans-unit id="5c6dc8d54be2031b84b4dead0478976ff80780cc" translate="yes" xml:space="preserve">
          <source>Keep building Jekyll sites!</source>
          <target state="translated">ジキルサイトを作り続けろ</target>
        </trans-unit>
        <trans-unit id="385ea57ce0708a624c199f8c292a3b2a72577a09" translate="yes" xml:space="preserve">
          <source>KeyCDN</source>
          <target state="translated">KeyCDN</target>
        </trans-unit>
        <trans-unit id="01af7c46420acf792e3b43039584478ec7774e5b" translate="yes" xml:space="preserve">
          <source>Kickster</source>
          <target state="translated">Kickster</target>
        </trans-unit>
        <trans-unit id="2918c8c92bc729b976aacffa8804fee11f217d81" translate="yes" xml:space="preserve">
          <source>Kickster provides a basic Jekyll project setup packed with web best practises and useful optimization tools increasing your overall project quality. Kickster ships with automated and worry-free deployment scripts for GitHub Pages.</source>
          <target state="translated">Kickster は、ウェブのベストプラクティスや便利な最適化ツールを満載した基本的な Jekyll プロジェクトのセットアップを提供し、プロジェクト全体の品質を向上させます。Kickster には、GitHub ページ用の自動化された安心のデプロイスクリプトが同梱されています。</target>
        </trans-unit>
        <trans-unit id="c39fcedccb3db769e93cb4895114218594eb06bd" translate="yes" xml:space="preserve">
          <source>Kramdown</source>
          <target state="translated">Kramdown</target>
        </trans-unit>
        <trans-unit id="67169c9661e2d73dbf62f40570b382c8e40debd7" translate="yes" xml:space="preserve">
          <source>Kramdown comes with optional support for LaTeX to PNG rendering via &lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt; within math blocks. See the Kramdown documentation on &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;math blocks&lt;/a&gt; and &lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;math support&lt;/a&gt; for more details. MathJax requires you to include JavaScript or CSS to render the LaTeX, e.g.</source>
          <target state="translated">Kramdownは、mathブロック内の&lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt;を介したLaTeXからPNGへのレンダリングをオプションでサポートしています。詳細については、&lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;数学ブロック&lt;/a&gt;と&lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;数学サポート&lt;/a&gt;に関するKramdownのドキュメントを参照してください。MathJaxでは、LaTeXをレンダリングするためにJavaScriptまたはCSSを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="9532190afe41c9d105961ea33c3b4e933a4c2659" translate="yes" xml:space="preserve">
          <source>Kramdown is the default Markdown renderer for Jekyll. Below is a list of the currently supported options:</source>
          <target state="translated">KramdownはJekyllのデフォルトのMarkdownレンダラです。以下は現在サポートされているオプションのリストです。</target>
        </trans-unit>
        <trans-unit id="93824e5ca2f8079177705f22fa746e46881b0c07" translate="yes" xml:space="preserve">
          <source>Label of the containing collection.</source>
          <target state="translated">コレクションを含むコレクションのラベル。</target>
        </trans-unit>
        <trans-unit id="972ad8d8a50397ba8c02433ed8f048eeb4074b85" translate="yes" xml:space="preserve">
          <source>Layout</source>
          <target state="translated">Layout</target>
        </trans-unit>
        <trans-unit id="73f83dd05a0b36c11a75d68e21be4555e7a6894c" translate="yes" xml:space="preserve">
          <source>Layout inheritance is useful when you want to add something to an existing layout for a portion of documents on your site. A common example of this is blog posts, you might want a post to display the date and author but otherwise be identical to your base layout.</source>
          <target state="translated">レイアウトの継承は、サイト上のドキュメントの一部に対して既存のレイアウトに何かを追加したい場合に便利です。この一般的な例としては、ブログの投稿などがあります。</target>
        </trans-unit>
        <trans-unit id="77918f5f64d8b83f4bc213c3624d8dabb59f643a" translate="yes" xml:space="preserve">
          <source>Layout metadata</source>
          <target state="translated">レイアウトメタデータ</target>
        </trans-unit>
        <trans-unit id="8faba99c8261229414474311be76d70eda70ff99" translate="yes" xml:space="preserve">
          <source>Layout specific information + the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;. Custom variables set via front matter in layouts will be available here.</source>
          <target state="translated">Layout specific information + the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;. Custom variables set via front matter in layouts will be available here.</target>
        </trans-unit>
        <trans-unit id="93d4f5bc1ef1791e5c42ae89bfcf3a70ede43c95" translate="yes" xml:space="preserve">
          <source>Layout specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter in layouts will be available here.</source>
          <target state="translated">レイアウト固有の情報+ &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML前付け&lt;/a&gt;。レイアウトでYAMLフロントマターを介して設定されたカスタム変数は、ここで使用できます。</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="dd51e21ca720f36618c7c70041ff580637c16e54" translate="yes" xml:space="preserve">
          <source>Layouts Directory</source>
          <target state="translated">レイアウトディレクトリ</target>
        </trans-unit>
        <trans-unit id="f97f89c886ff0080aba4f2ac74175d1a7897953a" translate="yes" xml:space="preserve">
          <source>Layouts and includes</source>
          <target state="translated">レイアウトとその内容</target>
        </trans-unit>
        <trans-unit id="5ee30430e49e94fd3d54e1f824556844e59ca308" translate="yes" xml:space="preserve">
          <source>Layouts are templates that wrap around your content. They allow you to have the source code for your template in one place so you don&amp;rsquo;t have to repeat things like your navigation and footer on every page.</source>
          <target state="translated">Layouts are templates that wrap around your content. They allow you to have the source code for your template in one place so you don&amp;rsquo;t have to repeat things like your navigation and footer on every page.</target>
        </trans-unit>
        <trans-unit id="77c006d93ddb7079eb7692fe36938e82d947f258" translate="yes" xml:space="preserve">
          <source>Layouts live in the &lt;code&gt;_layouts&lt;/code&gt; directory. The convention is to have a base template called &lt;code&gt;default.html&lt;/code&gt; and have other layouts &lt;a href=&quot;#inheritance&quot;&gt;inherit&lt;/a&gt; from this as needed.</source>
          <target state="translated">Layouts live in the &lt;code&gt;_layouts&lt;/code&gt; directory. The convention is to have a base template called &lt;code&gt;default.html&lt;/code&gt; and have other layouts &lt;a href=&quot;#inheritance&quot;&gt;inherit&lt;/a&gt; from this as needed.</target>
        </trans-unit>
        <trans-unit id="90cd4ba453bd97cb192e5581bdc2c56b6e0edc1c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add a page which lists all the authors on the site. Jekyll makes the collection available at &lt;code&gt;site.authors&lt;/code&gt;.</source>
          <target state="translated">Let&amp;rsquo;s add a page which lists all the authors on the site. Jekyll makes the collection available at &lt;code&gt;site.authors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30f3bfbb611eb84ffdf89a3fdbe9fd14107cd1dc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add your first file. Create &lt;code&gt;index.html&lt;/code&gt; in the root with the following content:</source>
          <target state="translated">Let&amp;rsquo;s add your first file. Create &lt;code&gt;index.html&lt;/code&gt; in the root with the following content:</target>
        </trans-unit>
        <trans-unit id="ff687a0fcd51d31c0ccfaa5ecb055e83268a23b3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s change the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; on your site to populate using front matter:</source>
          <target state="translated">Let&amp;rsquo;s change the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; on your site to populate using front matter:</target>
        </trans-unit>
        <trans-unit id="2384fd15aa145052f5176535d4f9d2bd6d0ba561" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s list the posts an author has published on their page. To do this you need to match the author &lt;code&gt;short_name&lt;/code&gt; to the post &lt;code&gt;author&lt;/code&gt;. You use this to filter the posts by author.</source>
          <target state="translated">Let&amp;rsquo;s list the posts an author has published on their page. To do this you need to match the author &lt;code&gt;short_name&lt;/code&gt; to the post &lt;code&gt;author&lt;/code&gt; . You use this to filter the posts by author.</target>
        </trans-unit>
        <trans-unit id="aac0e752d8e90d8b9ab73d572393414c2c492535" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at fleshing out authors so each author has their own page with a blurb and the posts they&amp;rsquo;ve published.</source>
          <target state="translated">Let&amp;rsquo;s look at fleshing out authors so each author has their own page with a blurb and the posts they&amp;rsquo;ve published.</target>
        </trans-unit>
        <trans-unit id="3d59965152acf6883cee252b37209236be3cceb2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that you want to add a default layout to all pages and posts in your site. You would add this to your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">サイトのすべてのページと投稿にデフォルトのレイアウトを追加するとします。これを &lt;code&gt;_config.yml&lt;/code&gt; ファイルに追加します：</target>
        </trans-unit>
        <trans-unit id="70555ee6c1f592b66362f61436939844b36c5e63" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say, for a second example, you want to override Minima&amp;rsquo;s footer. In your Jekyll site, create an &lt;code&gt;_includes&lt;/code&gt; folder and add a file in it called &lt;code&gt;footer.html&lt;/code&gt;. Jekyll will now use your site&amp;rsquo;s &lt;code&gt;footer.html&lt;/code&gt; file instead of the &lt;code&gt;footer.html&lt;/code&gt; file from the Minima theme gem.</source>
          <target state="translated">2番目の例として、Minimaのフッターをオーバーライドするとします。あなたのジキルサイトでは、作成 &lt;code&gt;_includes&lt;/code&gt; フォルダを、それが呼ばれるにファイルを追加 &lt;code&gt;footer.html&lt;/code&gt; を。ジキルは今、あなたのサイトの使用する &lt;code&gt;footer.html&lt;/code&gt; ファイルの代わりに、 &lt;code&gt;footer.html&lt;/code&gt; 極小テーマ宝石からファイルを。</target>
        </trans-unit>
        <trans-unit id="b11ef11b9735a85f062e52730ac1e7b73da06a98" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take this a step further and highlight the current page in the navigation.</source>
          <target state="translated">Let&amp;rsquo;s take this a step further and highlight the current page in the navigation.</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">MITのライセンスでライセンスされています。</target>
        </trans-unit>
        <trans-unit id="670ce9fa318e5a320760111541faff1035dbfbff" translate="yes" xml:space="preserve">
          <source>Limit the number of posts to parse and publish.</source>
          <target state="translated">解析して公開する投稿数を制限します。</target>
        </trans-unit>
        <trans-unit id="d08aaa54e89dc5b36c7da4c9d528008df5d04f3b" translate="yes" xml:space="preserve">
          <source>Line numbers</source>
          <target state="translated">行番号</target>
        </trans-unit>
        <trans-unit id="c996994da4b864e5a31a81359f1f093458f633aa" translate="yes" xml:space="preserve">
          <source>Link to authors page</source>
          <target state="translated">著者ページへのリンク</target>
        </trans-unit>
        <trans-unit id="a8482def1ff83728e1fb9a6d899311c4dbb6cd11" translate="yes" xml:space="preserve">
          <source>Linking to a PDF for readers to download:</source>
          <target state="translated">読者がダウンロードできるPDFにリンクしています。</target>
        </trans-unit>
        <trans-unit id="d20b0cfa02620cff8357fb318e9cd62b00fd373f" translate="yes" xml:space="preserve">
          <source>Linking to pages</source>
          <target state="translated">ページへのリンク</target>
        </trans-unit>
        <trans-unit id="afd2dc5f7c324f512f99a7734c0386d9016751a1" translate="yes" xml:space="preserve">
          <source>Linking to pages, collections and posts (the new and improved way)</source>
          <target state="translated">ページやコレクション、投稿へのリンク(新しくなって改善された方法</target>
        </trans-unit>
        <trans-unit id="8da831e8f499f7d7a56c6d3446756c24c1fc9859" translate="yes" xml:space="preserve">
          <source>Linking to posts</source>
          <target state="translated">投稿へのリンク</target>
        </trans-unit>
        <trans-unit id="3def7d920e411866077e94461efbacc52f7aeb8e" translate="yes" xml:space="preserve">
          <source>Linking to posts (the old way)</source>
          <target state="translated">投稿へのリンク(旧来の方法</target>
        </trans-unit>
        <trans-unit id="6379e034bab2e3be9e7c39a0b85a6898660412a9" translate="yes" xml:space="preserve">
          <source>Linking without regard to permalink styles</source>
          <target state="translated">パーマリンクスタイルを無視したリンク</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="4ad3e2141b2afe3691f32c2af3fc5cc3653cd453" translate="yes" xml:space="preserve">
          <source>Liquid</source>
          <target state="translated">Liquid</target>
        </trans-unit>
        <trans-unit id="7f26ed43583414deba0ddd1befb4adadedbfeb84" translate="yes" xml:space="preserve">
          <source>Liquid Attributes</source>
          <target state="translated">液体属性</target>
        </trans-unit>
        <trans-unit id="5ad177e08ab39d6276f0d8860a328284e1ffcfa3" translate="yes" xml:space="preserve">
          <source>Liquid Attributes Available</source>
          <target state="translated">利用可能な液体属性</target>
        </trans-unit>
        <trans-unit id="3ed0d7e900ff05c6937befa127ec4d2eb3452cab" translate="yes" xml:space="preserve">
          <source>Liquid Filters</source>
          <target state="translated">液体フィルター</target>
        </trans-unit>
        <trans-unit id="e0745becb677ab37dbf8043a9a47294186d7f108" translate="yes" xml:space="preserve">
          <source>Liquid Options</source>
          <target state="translated">リキッドオプション</target>
        </trans-unit>
        <trans-unit id="ad13a6aea2f060b03c1bbfcd3acb3de84c4ad8ef" translate="yes" xml:space="preserve">
          <source>Liquid filters</source>
          <target state="translated">液体フィルター</target>
        </trans-unit>
        <trans-unit id="dffe002b068673f77763dea3bb55e93cecb9293e" translate="yes" xml:space="preserve">
          <source>Liquid is where Jekyll starts to get more interesting. Liquid is a templating language which has three main parts: &lt;a href=&quot;#objects&quot;&gt;objects&lt;/a&gt;, &lt;a href=&quot;#tags&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;#filters&quot;&gt;filters&lt;/a&gt;.</source>
          <target state="translated">Liquid is where Jekyll starts to get more interesting. Liquid is a templating language which has three main parts: &lt;a href=&quot;#objects&quot;&gt;objects&lt;/a&gt;, &lt;a href=&quot;#tags&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;#filters&quot;&gt;filters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5798e1e1a9a90ea8817c634157e8841ea70633e3" translate="yes" xml:space="preserve">
          <source>Liquid version 2.0 seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</source>
          <target state="translated">Liquid version 2.0 seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</target>
        </trans-unit>
        <trans-unit id="e0802e62c8890a9ef2c3f7f7bbff3ab1245c9e20" translate="yes" xml:space="preserve">
          <source>Liquid&amp;rsquo;s response to errors can be configured by setting &lt;code&gt;error_mode&lt;/code&gt;. The options are</source>
          <target state="translated">エラーに対するLiquidの応答は、 &lt;code&gt;error_mode&lt;/code&gt; を設定することで設定できます。オプションは</target>
        </trans-unit>
        <trans-unit id="d7fe2c462dac24551a2cf9d6f5b82f81667cd59f" translate="yes" xml:space="preserve">
          <source>List author&amp;rsquo;s posts</source>
          <target state="translated">List author&amp;rsquo;s posts</target>
        </trans-unit>
        <trans-unit id="f055c3d931530bd151bf3ebea25d48d45d55d6d2" translate="yes" xml:space="preserve">
          <source>List posts</source>
          <target state="translated">投稿一覧</target>
        </trans-unit>
        <trans-unit id="eeb4bd88aaf858f919bb23f92e4f32533740b378" translate="yes" xml:space="preserve">
          <source>Listen at the given hostname.</source>
          <target state="translated">指定されたホスト名をリッスンします。</target>
        </trans-unit>
        <trans-unit id="b067bb7eddee644f3059b4dfb835e57469c1fc50" translate="yes" xml:space="preserve">
          <source>Listen on the given port.</source>
          <target state="translated">指定されたポートをリッスンします。</target>
        </trans-unit>
        <trans-unit id="ebf07c506e526cbf87dcd9a845f15f84fbf346f2" translate="yes" xml:space="preserve">
          <source>Load up &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and check that the active link in the navigation is green.</source>
          <target state="translated">Load up &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and check that the active link in the navigation is green.</target>
        </trans-unit>
        <trans-unit id="6846bc143055702bf80aaffbe9d2e5ab222ed854" translate="yes" xml:space="preserve">
          <source>Local Install</source>
          <target state="translated">ローカルインストール</target>
        </trans-unit>
        <trans-unit id="4406a849f645af35a2c07cd3e59f1514029789e7" translate="yes" xml:space="preserve">
          <source>Log in at &lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.works&lt;/a&gt; with your GitHub/Bitbucket account or email</source>
          <target state="translated">GitHub / Bitbucketアカウントまたはメールで&lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.worksに&lt;/a&gt;ログインします。</target>
        </trans-unit>
        <trans-unit id="0c25dfe9b505b96331b509d1f1094d7a8bbbc7da" translate="yes" xml:space="preserve">
          <source>Logic to do the content conversion. Takes one argument: the raw content of the file (without YAML Front Matter). Must return a String.</source>
          <target state="translated">コンテンツの変換を行うロジック。1つの引数を取ります:ファイルの生のコンテンツ(YAMLフロントマターなし)。Stringを返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="4f5283eb1f5b01265dfd539e401f6ed9ad13e131" translate="yes" xml:space="preserve">
          <source>Logic to do the content conversion. Takes one argument: the raw content of the file (without front matter). Must return a String.</source>
          <target state="translated">コンテンツの変換を行うロジック。1つの引数を取ります:ファイルの生のコンテンツ(フロントマターなし)。Stringを返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="2f416e634be06ac21d4b27f348175e29f30c0a9a" translate="yes" xml:space="preserve">
          <source>Make directory path values in configuration keys like `plugins_dir` relative to the current working directory, not the site source.</source>
          <target state="translated">設定キー `plugins_dir` のようなディレクトリパスの値を、サイトのソースではなく、現在の作業ディレクトリに相対化するようにします。</target>
        </trans-unit>
        <trans-unit id="0d1f3dd0db67be21ebd2eb0848251f87de05b382" translate="yes" xml:space="preserve">
          <source>Make it executable (&lt;code&gt;chmod +x&lt;/code&gt;)</source>
          <target state="translated">実行可能にする（ &lt;code&gt;chmod +x&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fbe74d6559d84810cabb4523111374acebd2a489" translate="yes" xml:space="preserve">
          <source>Make sure all your packages and repositories are up to date. Open a new Command Prompt or Powershell window and type &lt;code&gt;bash&lt;/code&gt;.</source>
          <target state="translated">Make sure all your packages and repositories are up to date. Open a new Command Prompt or Powershell window and type &lt;code&gt;bash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98ed2e07c71b746bf0180e8aa24d5bd3d3c109b3" translate="yes" xml:space="preserve">
          <source>Manual Deployment</source>
          <target state="translated">マニュアル展開</target>
        </trans-unit>
        <trans-unit id="07845da9bbd18384477ef867d7458a8ae623a38e" translate="yes" xml:space="preserve">
          <source>Manually</source>
          <target state="translated">Manually</target>
        </trans-unit>
        <trans-unit id="a5c619ea526efa335655e8e040b494049726275d" translate="yes" xml:space="preserve">
          <source>Manually Ordering Documents</source>
          <target state="translated">文書を手動で発注する</target>
        </trans-unit>
        <trans-unit id="642c11c1d6e1b6df7dad686b9cc288e67e12904c" translate="yes" xml:space="preserve">
          <source>Markdown Options</source>
          <target state="translated">マークダウンオプション</target>
        </trans-unit>
        <trans-unit id="b09e94d8992bb71ef39f1a828432c25aaf743e21" translate="yes" xml:space="preserve">
          <source>Markup Problems</source>
          <target state="translated">マークアップの問題</target>
        </trans-unit>
        <trans-unit id="28d6fb2c35c1d1c6a33c9e84a06a5d0a46922b5c" translate="yes" xml:space="preserve">
          <source>Math Support</source>
          <target state="translated">数学サポート</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="2adf3b7e76213053550011d5190ced3aeb722895" translate="yes" xml:space="preserve">
          <source>Minimum/Maximum delay before automatically reloading page.</source>
          <target state="translated">ページを自動的にリロードするまでの最小/最大の遅延時間。</target>
        </trans-unit>
        <trans-unit id="0b71350dd34e7bd8df3677854774845adbf253c5" translate="yes" xml:space="preserve">
          <source>Minute of the hour from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">Minute of the hour from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</target>
        </trans-unit>
        <trans-unit id="cebaf24652aa816860b5113dfe9dc8588aa3ae90" translate="yes" xml:space="preserve">
          <source>Minute of the hour from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">投稿の &lt;code&gt;date&lt;/code&gt; 前件からの分。（00..59）</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="89597b1d1e65f5625f359ebced3060dec2d5c149" translate="yes" xml:space="preserve">
          <source>Month from the post&amp;rsquo;s filename. (01..12) May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">Month from the post&amp;rsquo;s filename. (01..12) May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</target>
        </trans-unit>
        <trans-unit id="ef9455fcbf8b2c60f67ca82fa6632a99edee00cb" translate="yes" xml:space="preserve">
          <source>Month from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名からの月。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="7bc1785779e50c8f50c295d478904fe761c00108" translate="yes" xml:space="preserve">
          <source>Month without leading zeros from the post&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">Month without leading zeros from the post&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</target>
        </trans-unit>
        <trans-unit id="8de2bd51313c9e801e45ac73bea8a590465b26c8" translate="yes" xml:space="preserve">
          <source>Month without leading zeros from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名から先行ゼロなしの月。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="f7fd190a4337f66473d351957f69ce547933ce36" translate="yes" xml:space="preserve">
          <source>More fine-grained control over documents being written to disk can be exercised by setting &lt;code&gt;published: false&lt;/code&gt; (&lt;em&gt;&lt;code&gt;true&lt;/code&gt; by default&lt;/em&gt;) in the document's front matter.</source>
          <target state="translated">More fine-grained control over documents being written to disk can be exercised by setting &lt;code&gt;published: false&lt;/code&gt; (&lt;em&gt; &lt;code&gt;true&lt;/code&gt; by default&lt;/em&gt;) in the document's front matter.</target>
        </trans-unit>
        <trans-unit id="84c391f84e07bbc0730b8f14896da52d1928b519" translate="yes" xml:space="preserve">
          <source>More posts</source>
          <target state="translated">その他の投稿</target>
        </trans-unit>
        <trans-unit id="20dfd39965d8d6de67925026c214817e26a391a6" translate="yes" xml:space="preserve">
          <source>Most traditional web hosting provider let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</source>
          <target state="translated">Most traditional web hosting provider let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</target>
        </trans-unit>
        <trans-unit id="d0bf0bf1fc26755d6dd3d0cd4f591fb0c8223d56" translate="yes" xml:space="preserve">
          <source>My categories have stopped working!</source>
          <target state="translated">カテゴリが動かなくなった!?</target>
        </trans-unit>
        <trans-unit id="409210cf5eca11f949b896395f0df153fb608809" translate="yes" xml:space="preserve">
          <source>Named HTML files</source>
          <target state="translated">名前付きHTMLファイル</target>
        </trans-unit>
        <trans-unit id="af6c6c60032b6347c216bd80b55f736adf9ba8ed" translate="yes" xml:space="preserve">
          <source>Named folders containing index HTML files</source>
          <target state="translated">インデックスHTMLファイルを含む名前付きフォルダ</target>
        </trans-unit>
        <trans-unit id="a2c418f0923ad11cb2b3d108b0307de3bec5a403" translate="yes" xml:space="preserve">
          <source>Navigation should be on every page so adding it to your layout is the correct place to do this. Instead of adding it directly to the layout, let&amp;rsquo;s use this as an opportunity to learn about includes.</source>
          <target state="translated">Navigation should be on every page so adding it to your layout is the correct place to do this. Instead of adding it directly to the layout, let&amp;rsquo;s use this as an opportunity to learn about includes.</target>
        </trans-unit>
        <trans-unit id="b3c42dc846bdaebd8d91e72204aff8bea8445cef" translate="yes" xml:space="preserve">
          <source>Navigation source code can get complex, so sometimes it&amp;rsquo;s nice to move it into an include.</source>
          <target state="translated">Navigation source code can get complex, so sometimes it&amp;rsquo;s nice to move it into an include.</target>
        </trans-unit>
        <trans-unit id="1bd711a21d476e6fe66700859fd27013606d0d82" translate="yes" xml:space="preserve">
          <source>Netlify</source>
          <target state="translated">Netlify</target>
        </trans-unit>
        <trans-unit id="811ac39da5d9fbe02fcbbb846376b672d3d31860" translate="yes" xml:space="preserve">
          <source>Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers a robust toolset for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</source>
          <target state="translated">Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers a robust toolset for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</target>
        </trans-unit>
        <trans-unit id="e77e169ad6256bcd88fdf89a438584da538db3ad" translate="yes" xml:space="preserve">
          <source>Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers the most robust toolset available for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</source>
          <target state="translated">NetlifyグローバルCDN、継続的デプロイを提供し、1はHTTPSをクリックして、&lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;はるかに&lt;/a&gt;追加の複雑させずに、最新のWebプロジェクトのための最も強力なツールセットが利用できる開発者に提供し、。NetlifyはJekyllのカスタムプラグインをサポートし、オープンソースプロジェクトの無料プランがあります。</target>
        </trans-unit>
        <trans-unit id="1f0a6fb6f3c8ce017ef991f62d064dc029d34205" translate="yes" xml:space="preserve">
          <source>Never built a website with GitHub Pages before? &lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;See this marvelous guide by Jonathan McGlone&lt;/a&gt; to get you up and running. This guide will teach you what you need to know about Git, GitHub, and Jekyll to create your very own website on GitHub Pages.</source>
          <target state="translated">これまでにGitHubページを使用してWebサイトを構築したことはありませんか？&lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;Jonathan McGloneによるこの素晴らしいガイドを参照&lt;/a&gt;して、実行してください。このガイドでは、GitHubページで独自のWebサイトを作成するためにGit、GitHub、およびJekyllについて知っておくべきことを説明します。</target>
        </trans-unit>
        <trans-unit id="bc4548b725bed832ca525597a79aaa19443571c5" translate="yes" xml:space="preserve">
          <source>New Config File Options</source>
          <target state="translated">新しいコンフィグファイルオプション</target>
        </trans-unit>
        <trans-unit id="c1d497448ff591968a3b7a1dcf651a30c7319f8d" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s update our Ruby gems:</source>
          <target state="translated">次に、Ruby gemを更新します。</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">次のステップ</target>
        </trans-unit>
        <trans-unit id="7c050c2c9a950271002405d5cee0f31db431d475" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll focus on creating a page for each post author.</source>
          <target state="translated">次に、投稿者ごとにページを作成することに焦点を当てます。</target>
        </trans-unit>
        <trans-unit id="4515148521e70239a1aa2232db5cc5405d1bc75f" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;re looking at one of Jekyll&amp;rsquo;s most popular features, blogging.</source>
          <target state="translated">次に、ジキルの最も人気のある機能の1つであるブログについて見ていきます。</target>
        </trans-unit>
        <trans-unit id="4178e535dc29299aea5c6b70f8744aff3fb4ca53" translate="yes" xml:space="preserve">
          <source>Next you need to specify what layout you&amp;rsquo;re using in your page&amp;rsquo;s front matter. You can also use &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;front matter defaults&lt;/a&gt; to save you from having to set this on every page.</source>
          <target state="translated">次に、ページのフロントマターで使用しているレイアウトを指定する必要があります。&lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;フロントマターのデフォルト&lt;/a&gt;を使用して、すべてのページでこれを設定する必要をなくすこともできます。</target>
        </trans-unit>
        <trans-unit id="f312fe6f79e90daa529f37ccafdfa02243a77286" translate="yes" xml:space="preserve">
          <source>Next, add the following lines to hooks/post-receive and be sure Jekyll is installed on the server:</source>
          <target state="translated">次に、 hooks/post-receive に以下の行を追加し、Jekyll がサーバーにインストールされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="5ff888289816dd3074a50bcf27e501021fdb8da3" translate="yes" xml:space="preserve">
          <source>Next, in the root directory of your Jekyll install, create a new directory called &lt;code&gt;category&lt;/code&gt; and then create a file for each category you want to list. For example, if you have a category &lt;code&gt;blog&lt;/code&gt; then create a file in the new directory called &lt;code&gt;blog.html&lt;/code&gt; with at least</source>
          <target state="translated">次に、Jekyllインストールのルートディレクトリに、 &lt;code&gt;category&lt;/code&gt; という新しいディレクトリを作成し、リストする各カテゴリのファイルを作成します。たとえば、カテゴリ &lt;code&gt;blog&lt;/code&gt; がある場合は、新しいディレクトリに &lt;code&gt;blog.html&lt;/code&gt; というファイルを作成し、少なくとも</target>
        </trans-unit>
        <trans-unit id="6f549129e2b42e6dba2456cd485a9a4febc44fba" translate="yes" xml:space="preserve">
          <source>Next, install Ruby. To do this, let&amp;rsquo;s use a repository from &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;, which hosts optimized versions of Ruby for Ubuntu.</source>
          <target state="translated">次に、Rubyをインストールします。これを行うには、Ubuntu用に最適化されたバージョンのRubyをホストする&lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBoxの&lt;/a&gt;リポジトリを使用しましょう。</target>
        </trans-unit>
        <trans-unit id="708f2d3f4930982fbd401cfff5d9860647b92d77" translate="yes" xml:space="preserve">
          <source>Next, package your theme, by running the following command, replacing &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; with the name of your theme:</source>
          <target state="translated">次に、次のコマンドを実行してテーマをパッケージ化し、 &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; をテーマの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="eeec6f21009462a4477d38f2189390d3d32c084f" translate="yes" xml:space="preserve">
          <source>Next, update your Ruby gems:</source>
          <target state="translated">次に、ルビーの宝石を更新します。</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="965e5ee2920d9cad862646c9da2c93c1d7eb66c5" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;sudo&lt;/code&gt; here.</source>
          <target state="translated">ここに &lt;code&gt;sudo&lt;/code&gt; はありません。</target>
        </trans-unit>
        <trans-unit id="3b2398012127ac20dafee0de7defdb7dbfdffaec" translate="yes" xml:space="preserve">
          <source>Nokogiri gem installation</source>
          <target state="translated">ノコギリの宝石設置</target>
        </trans-unit>
        <trans-unit id="6b0067aa0486b565105c43272d7e3127918f1a98" translate="yes" xml:space="preserve">
          <source>Non-superuser account issues</source>
          <target state="translated">スーパーユーザー以外のアカウントの問題</target>
        </trans-unit>
        <trans-unit id="8f1ffabf169574519e202a4e9b88f25390f0b416" translate="yes" xml:space="preserve">
          <source>None specified, or &lt;code&gt;permalink: date&lt;/code&gt;</source>
          <target state="translated">指定なし、または &lt;code&gt;permalink: date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c35cfb9d2d2387ed94bc43758ede05d15c18fe4" translate="yes" xml:space="preserve">
          <source>Not everything is a post or a page. Maybe you want to document the various methods in your open source project, members of a team, or talks at a conference. Collections allow you to define a new type of document that behave like Pages or Posts do normally, but also have their own unique properties and namespace.</source>
          <target state="translated">すべてがポストやページになるわけではありません。オープンソースプロジェクトの様々なメソッド、チームのメンバー、カンファレンスでの講演などを文書化したいと思うかもしれません。コレクションを使うと、Pages や Posts と同じように振る舞いながら、独自のプロパティや名前空間を持つ新しいタイプのドキュメントを定義することができます。</target>
        </trans-unit>
        <trans-unit id="18321e6d33bf8fed8f4e031615a5c61cfd4eadbf" translate="yes" xml:space="preserve">
          <source>Note &lt;a href=&quot;../../datafiles/index&quot;&gt;Data Files&lt;/a&gt; are included and reloaded during automatic regeneration.</source>
          <target state="translated">注&lt;a href=&quot;../../datafiles/index&quot;&gt;データファイル&lt;/a&gt;は、自動再生中に含まれ、再ロードされます。</target>
        </trans-unit>
        <trans-unit id="8f87a0cc1b107cfc3130ca883eee78891ca87928" translate="yes" xml:space="preserve">
          <source>Note &lt;a href=&quot;../datafiles/index&quot;&gt;Data Files&lt;/a&gt; are included and reloaded during automatic regeneration.</source>
          <target state="translated">注&lt;a href=&quot;../datafiles/index&quot;&gt;データファイル&lt;/a&gt;が含まれ、自動再生成中に再ロードされます。</target>
        </trans-unit>
        <trans-unit id="9cf697214d3ea8369efc9d5989737c5221f12ef5" translate="yes" xml:space="preserve">
          <source>Note if you want to view your site offline &lt;em&gt;without the Jekyll preview server&lt;/em&gt;, your browser will need the file extension to display the page, and all assets will need to be relative links that function without the server baseurl.</source>
          <target state="translated">&lt;em&gt;Jekyllプレビューサーバーなしで&lt;/em&gt;サイトをオフラインで表示する場合は、ブラウザにページを表示するためのファイル拡張子が必要であり、すべてのアセットはサーバーのbaseurlなしで機能する相対リンクである必要があります。</target>
        </trans-unit>
        <trans-unit id="6be0285681791712626e61c0e940a29611df075c" translate="yes" xml:space="preserve">
          <source>Note that GitHub Pages runs in &lt;code&gt;safe&lt;/code&gt; mode and only allows &lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;a set of whitelisted plugins&lt;/a&gt;.</source>
          <target state="translated">GitHubページは &lt;code&gt;safe&lt;/code&gt; 実行&lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;され、ホワイトリストに登録されたプラグインのセット&lt;/a&gt;のみを許可することに注意してください。</target>
        </trans-unit>
        <trans-unit id="9d90bbde8e029c7aaf55ae7cc6107674786ac2ea" translate="yes" xml:space="preserve">
          <source>Note that all template variables relating to time or categories are available to posts only.</source>
          <target state="translated">時間やカテゴリに関連するすべてのテンプレート変数は、投稿にのみ利用可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="403cef00bcb7eca57f3a8a3a90c242e787157e04" translate="yes" xml:space="preserve">
          <source>Note that in order for Jekyll to process any liquid tags on your page, you &lt;em&gt;must&lt;/em&gt; include front matter on it. The most minimal snippet of front matter you can include is:</source>
          <target state="translated">Jekyllがページ上の液体タグを処理するに&lt;em&gt;は&lt;/em&gt;、フロントマターを含める&lt;em&gt;必要&lt;/em&gt;があることに注意してください。含めることができるフロントマターの最小スニペットは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="af0e26741b1c3ebdf00805474f87a1d9243e7832" translate="yes" xml:space="preserve">
          <source>Note that in the above table, &lt;code&gt;file&lt;/code&gt; can be anything. It&amp;rsquo;s an arbitrarily set variable used in your own logic (such as in a for loop). It isn&amp;rsquo;t a global site or page variable.</source>
          <target state="translated">上記の表では、 &lt;code&gt;file&lt;/code&gt; は何でもかまいません。これは、独自のロジック（forループなど）で使用される任意に設定された変数です。これは、グローバルサイトまたはページ変数ではありません。</target>
        </trans-unit>
        <trans-unit id="0eb4bdc4e781e7d84143f4441f9136f655537cba" translate="yes" xml:space="preserve">
          <source>Note that in the above table, &lt;code&gt;file&lt;/code&gt; can be anything. It&amp;rsquo;s simply an arbitrarily set variable used in your own logic (such as in a for loop). It isn&amp;rsquo;t a global site or page variable.</source>
          <target state="translated">上記の表では、 &lt;code&gt;file&lt;/code&gt; は何でもかまいません。これは、独自のロジック（forループなど）で使用される任意に設定された変数です。グローバルサイトやページ変数ではありません。</target>
        </trans-unit>
        <trans-unit id="1efdb94e4f50bf0983fdc1d308e7ee4efc93198d" translate="yes" xml:space="preserve">
          <source>Note that making copies of theme files will prevent you from receiving any theme updates on those files. An alternative, to continue getting theme updates on all stylesheets, is to use higher specificity CSS selectors in your own additional, originally named CSS files.</source>
          <target state="translated">テーマファイルのコピーを作成すると、それらのファイルでテーマの更新を受け取ることができなくなることに注意してください。別の方法として、すべてのスタイルシートでテーマの更新を受け続けるためには、独自の追加CSSファイルで、より特異性の高いCSSセレクタを使用することができます。</target>
        </trans-unit>
        <trans-unit id="84079dcab6977c592d28e1390b0cdd647e2c55a1" translate="yes" xml:space="preserve">
          <source>Note that pages and collections (excluding &lt;code&gt;posts&lt;/code&gt; and &lt;code&gt;drafts&lt;/code&gt;) don&amp;rsquo;t have time and categories (for pages, the above &lt;code&gt;:title&lt;/code&gt; is equivalent to &lt;code&gt;:basename&lt;/code&gt;), these aspects of the permalink style are ignored for the output.</source>
          <target state="translated">ページとコレクション（ &lt;code&gt;posts&lt;/code&gt; と &lt;code&gt;drafts&lt;/code&gt; を除く）には時間とカテゴリがないことに注意してください（ページの場合、上記の &lt;code&gt;:title&lt;/code&gt; は &lt;code&gt;:basename&lt;/code&gt; と同等です）。パーマリンクスタイルのこれらの側面は出力では無視されます。</target>
        </trans-unit>
        <trans-unit id="fb1100df32e7377e196c98a1d1e30c86170cf4a9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;post&lt;/code&gt; variable only exists inside the &lt;code&gt;for&lt;/code&gt; loop above. If you wish to access the currently-rendering page/posts&amp;rsquo;s variables (the variables of the post/page that has the &lt;code&gt;for&lt;/code&gt; loop in it), use the &lt;code&gt;page&lt;/code&gt; variable instead.</source>
          <target state="translated">&lt;code&gt;post&lt;/code&gt; 変数は上記の &lt;code&gt;for&lt;/code&gt; ループ内にのみ存在することに注意してください。現在レンダリングしているページ/投稿の変数（ &lt;code&gt;for&lt;/code&gt; ループが含まれている投稿/ページの変数）にアクセスする場合は、代わりに &lt;code&gt;page&lt;/code&gt; 変数を使用します。</target>
        </trans-unit>
        <trans-unit id="8cf6c6835a876660d4c76838462f49a571751f8c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sass_dir&lt;/code&gt; becomes the load path for Sass imports, nothing more. This means that Jekyll does not know about these files directly, so any files here should not contain the YAML Front Matter as described above nor will they be transformed as described above. This folder should only contain imports.</source>
          <target state="translated">&lt;code&gt;sass_dir&lt;/code&gt; がSassインポートのロードパスになることに注意してください。つまり、Jekyllはこれらのファイルを直接認識しないため、ここでのファイルには、上記のYAMLフロントマターを含めたり、上記のように変換したりしないでください。このフォルダにはインポートのみが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="2e41ebfde97fa300cd317db4d704d7b958968931" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sass_dir&lt;/code&gt; becomes the load path for Sass imports, nothing more. This means that Jekyll does not know about these files directly. Any files here should not contain the empty front matter as described above. If they do, they'll not be transformed as described above. This folder should only contain imports.</source>
          <target state="translated">&lt;code&gt;sass_dir&lt;/code&gt; がSassインポートのロードパスになることに注意してください。それ以上のことはありません。これは、ジキルがこれらのファイルを直接知らないことを意味します。ここにあるファイルには、上記のように空のフロントマターを含めないでください。その場合、上記のように変換されません。このフォルダには、インポートのみを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="5d2c061eab8c4b566be13e9d16af1507ebc396fb" translate="yes" xml:space="preserve">
          <source>Note that this string must be quoted to prevent the asterisks from being evaluated incorrectly.</source>
          <target state="translated">アスタリスクが正しく評価されないように、この文字列は引用符で囲む必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="365263babcade15a29bd49c083aff113ac6dc6fa" translate="yes" xml:space="preserve">
          <source>Note that upgrading macOS does not automatically upgrade Xcode itself (that can be done separately via the App Store), and having an out-of-date Xcode.app can interfere with the command line tools downloaded above. If you run into this issue, upgrade Xcode and install the upgraded Command Line Tools.</source>
          <target state="translated">macOSをアップグレードしてもXcode自体は自動的にアップグレードされません(App Storeで別途行うことができます)。また、古いXcode.appを持っていると、上記でダウンロードしたコマンドラインツールに干渉する可能性があります。この問題に遭遇した場合は、Xcodeをアップグレードし、アップグレードされたコマンドラインツールをインストールしてください。</target>
        </trans-unit>
        <trans-unit id="e0cedf9e1146b83059f235f1658469f30f0dfa6f" translate="yes" xml:space="preserve">
          <source>Note that you can also specify a language for highlighting after the first delimiter:</source>
          <target state="translated">最初の区切り文字の後に強調表示する言語を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="538035dc55ccf0f41b931e516134c7709bbd5954" translate="yes" xml:space="preserve">
          <source>Note that you cannot use the &lt;code&gt;../&lt;/code&gt; syntax to specify an include location that refers to a higher-level directory.</source>
          <target state="translated">&lt;code&gt;../&lt;/code&gt; 構文を使用して、上位レベルのディレクトリを参照するインクルードの場所を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="e23bfe7b417b5e844018628a3a9e7b0a66ac8d09" translate="yes" xml:space="preserve">
          <source>Note you cannot add filters to &lt;code&gt;link&lt;/code&gt; tags. For example, you cannot append a string using Liquid filters, such as &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt;. To link to sections on a page, you will need to use regular HTML or Markdown linking techniques.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; タグにフィルターを追加することはできません。たとえば、 &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt; などのLiquidフィルターを使用して文字列を追加することはできません。追加： &quot;＃section1&quot;％}。ページのセクションにリンクするには、通常のHTMLまたはMarkdownリンク手法を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="90636d898b92948434f74cbb27ef82c175a68fcc" translate="yes" xml:space="preserve">
          <source>Note you cannot add filters to &lt;code&gt;link&lt;/code&gt; tags. For example, you cannot append a string using Liquid filters, such as &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %}&lt;/code&gt;. To link to sections on a page, you will need to use regular HTML or Markdown linking techniques.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; タグにフィルターを追加できないことに注意してください。たとえば、 &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %}&lt;/code&gt; などのLiquidフィルターを使用して文字列を追加することはできません。追加： &quot;＃section1&quot;％}。ページ上のセクションにリンクするには、通常のHTMLまたはマークダウンリンク手法を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ef2620ba5b8650000c4392a80911f4c3e3b5aae7" translate="yes" xml:space="preserve">
          <source>Notes are handy pieces of information</source>
          <target state="translated">メモは便利な情報</target>
        </trans-unit>
        <trans-unit id="019763ab6a53f0c0a37aac5bce59026db4857488" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;bundle update&lt;/code&gt; will no longer get updates for the theme gem.</source>
          <target state="translated">今、 &lt;code&gt;bundle update&lt;/code&gt; 、もはやテーマ宝石の更新を取得しません。</target>
        </trans-unit>
        <trans-unit id="f5db484a6b8a6ae2c46d9feb727ea7060997ae39" translate="yes" xml:space="preserve">
          <source>Now all that is left to do is install Jekyll.</source>
          <target state="translated">あとはジキルをインストールするだけ。</target>
        </trans-unit>
        <trans-unit id="e80e88643d10496c04026953abbd1fce833876a2" translate="yes" xml:space="preserve">
          <source>Now edit the &lt;code&gt;Gemfile&lt;/code&gt; and add jekyll as a dependency:</source>
          <target state="translated">次に、 &lt;code&gt;Gemfile&lt;/code&gt; を編集し、依存関係としてjekyllを追加します。</target>
        </trans-unit>
        <trans-unit id="010964b53143eacf07b672c4e142050729ab50fa" translate="yes" xml:space="preserve">
          <source>Now install them by running a &lt;code&gt;bundle update&lt;/code&gt;.</source>
          <target state="translated">次に、 &lt;code&gt;bundle update&lt;/code&gt; 実行してインストールします。</target>
        </trans-unit>
        <trans-unit id="d16d4716fcec7c0d58d5adb7bf41d53959f85499" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s possible to publish your website simply by running the &lt;code&gt;deploy&lt;/code&gt; script. If your SSH certificate is &lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;passphrase-protected&lt;/a&gt;, you will be asked to enter it when the script executes.</source>
          <target state="translated">&lt;code&gt;deploy&lt;/code&gt; スクリプトを実行するだけで、ウェブサイトを公開できるようになりました。SSH証明書が&lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;パスフレーズで保護され&lt;/a&gt;ている場合、スクリプトの実行時に証明書を入力するよう求められます。</target>
        </trans-unit>
        <trans-unit id="3e19654e1e418cd2f541f4770ec0b52df6442f1a" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s your turn, change the Hello World! on your page to output as lowercase:</source>
          <target state="translated">今度はあなたの番です。HelloWorldを変更してください。小文字として出力するページ上：</target>
        </trans-unit>
        <trans-unit id="a648139b6baf40fe30744d8e528aae7b96c3bd46" translate="yes" xml:space="preserve">
          <source>Now posts can use this layout while the rest of the pages use the default.</source>
          <target state="translated">これで、他のページはデフォルトのレイアウトを使用していても、投稿はこのレイアウトを使用することができるようになりました。</target>
        </trans-unit>
        <trans-unit id="a6cf1e4cb312d48ffd4a9ed682f1ece2bf915b2f" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve got everything up-to-date and installed, let&amp;rsquo;s get to work!</source>
          <target state="translated">すべてが最新でインストールされたので、作業を始めましょう！</target>
        </trans-unit>
        <trans-unit id="34ee5ef663d912be8e2724397d00a3a6157ccfc8" translate="yes" xml:space="preserve">
          <source>Now that your posts have a category or multiple categories, you can make a page or a template displaying just the posts in those categories you specify. Here&amp;rsquo;s a basic example of how to create a list of posts from a specific category.</source>
          <target state="translated">投稿に1つまたは複数のカテゴリが設定されたので、指定したカテゴリの投稿のみを表示するページまたはテンプレートを作成できます。特定のカテゴリから投稿のリストを作成する方法の基本的な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="54eae58039538d3de78c88b9ca2dea358415c6b6" translate="yes" xml:space="preserve">
          <source>Now we can install Ruby. To do this we will use a repository from &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;, which hosts optimized versions of Ruby for Ubuntu.</source>
          <target state="translated">これでRubyをインストールできます。これを行うには、&lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBoxの&lt;/a&gt;リポジトリを使用します。このリポジトリには、Ubuntuに最適化されたRubyのバージョンがホストされています。</target>
        </trans-unit>
        <trans-unit id="f1db2122410ebc1a9c0f607f53505113fc23cafa" translate="yes" xml:space="preserve">
          <source>Now when you insert the &lt;code&gt;spotlight.html&lt;/code&gt; include file, you can submit the YAML file as a parameter:</source>
          <target state="translated">これで、 &lt;code&gt;spotlight.html&lt;/code&gt; インクルードファイルを挿入するときに、YAMLファイルをパラメーターとして送信できます。</target>
        </trans-unit>
        <trans-unit id="e551c16358f853ea0260de2a3494bd4f323cc098" translate="yes" xml:space="preserve">
          <source>Now you can iterate over &lt;code&gt;site.staff_members&lt;/code&gt; on a page and output the content for each staff member. Similar to posts, the body of the document is accessed using the &lt;code&gt;content&lt;/code&gt; variable:</source>
          <target state="translated">これで、ページ上の &lt;code&gt;site.staff_members&lt;/code&gt; を反復処理して、各スタッフメンバーのコンテンツを出力できます。投稿と同様に、ドキュメントの本文には &lt;code&gt;content&lt;/code&gt; 変数を使用してアクセスします。</target>
        </trans-unit>
        <trans-unit id="2d94007a0c96c53817af595ff17b5d5f21118610" translate="yes" xml:space="preserve">
          <source>Now you can remove layout from the front matter of all pages and posts. Note that any time you update &lt;code&gt;_config.yml&lt;/code&gt; you&amp;rsquo;ll need to restart Jekyll for the changes to take effect.</source>
          <target state="translated">これで、すべてのページと投稿の前書きからレイアウトを削除できます。 &lt;code&gt;_config.yml&lt;/code&gt; を更新するときはいつでも、変更を有効にするためにJekyllを再起動する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b1ee720b8a30d5856aa33722ba59d2ea13b8b63f" translate="yes" xml:space="preserve">
          <source>Now you need to configure the author documents to use the &lt;code&gt;author&lt;/code&gt; layout. You could do this in the front matter like we have previously but that&amp;rsquo;s getting repetitive.</source>
          <target state="translated">次に、作成 &lt;code&gt;author&lt;/code&gt; レイアウトを使用するように作成者ドキュメントを構成する必要があります。以前と同じように前もってこれを行うことができますが、それは繰り返されています。</target>
        </trans-unit>
        <trans-unit id="da26a269dc579ccddc35c61159479c24d604f361" translate="yes" xml:space="preserve">
          <source>Now you need to install all plugins from your Bundler group by running single command &lt;code&gt;bundle install&lt;/code&gt;.</source>
          <target state="translated">次に、単一のコマンド &lt;code&gt;bundle install&lt;/code&gt; を実行して、Bundlerグループからすべてのプラグインをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="0aa3bc63f1e4c333878815ea88bcf06ae43e27ea" translate="yes" xml:space="preserve">
          <source>Now, this will only set the layout for files where the type is &lt;code&gt;posts&lt;/code&gt;. The different types that are available to you are &lt;code&gt;pages&lt;/code&gt;, &lt;code&gt;posts&lt;/code&gt;, &lt;code&gt;drafts&lt;/code&gt; or any collection in your site. While &lt;code&gt;type&lt;/code&gt; is optional, you must specify a value for &lt;code&gt;path&lt;/code&gt; when creating a &lt;code&gt;scope/values&lt;/code&gt; pair.</source>
          <target state="translated">これで、タイプが &lt;code&gt;posts&lt;/code&gt; であるファイルのレイアウトのみが設定されます。使用できるさまざまなタイプは、サイト内の &lt;code&gt;pages&lt;/code&gt; 、 &lt;code&gt;posts&lt;/code&gt; 、 &lt;code&gt;drafts&lt;/code&gt; または任意のコレクションです。一方で &lt;code&gt;type&lt;/code&gt; オプションであり、あなたがのために値を指定する必要があり &lt;code&gt;path&lt;/code&gt; の作成時に &lt;code&gt;scope/values&lt;/code&gt; ペアを。</target>
        </trans-unit>
        <trans-unit id="18829b882e10c5f58e54b3c8f9c9dc17ea3b6d03" translate="yes" xml:space="preserve">
          <source>Number of Posts per page.</source>
          <target state="translated">1ページあたりの投稿数</target>
        </trans-unit>
        <trans-unit id="7eb968dbb7c9f134e521753fb30967e0c536dd90" translate="yes" xml:space="preserve">
          <source>Number of posts per page</source>
          <target state="translated">1ページあたりの投稿数</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="7b7eb6f4a4e3cf3c6cb02d7d38ee36ad964e75cb" translate="yes" xml:space="preserve">
          <source>Objects tell Liquid where to output content. They&amp;rsquo;re denoted by double curly braces: &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;. For example:</source>
          <target state="translated">オブジェクトはLiquidにコンテンツを出力する場所を指示します。それらは二重中括弧で示されます： &lt;code&gt;{{&lt;/code&gt; および &lt;code&gt;}}&lt;/code&gt; 。例えば：</target>
        </trans-unit>
        <trans-unit id="96dde92cd814d365b60ea8afd3bf1ff8d531ae72" translate="yes" xml:space="preserve">
          <source>Of course, you have full control over how (and where) you display your posts, and how you structure your site. You should read more about &lt;a href=&quot;../templates/index&quot;&gt;how templates work&lt;/a&gt; with Jekyll if you want to know more.</source>
          <target state="translated">もちろん、投稿を表示する方法（および場所）、およびサイトを構成する方法を完全に制御できます。詳細を知りたい場合は、Jekyllで&lt;a href=&quot;../templates/index&quot;&gt;テンプレートがどのように機能するかについて&lt;/a&gt;詳しく読む必要があります。</target>
        </trans-unit>
        <trans-unit id="7906d9dd10da83c4dc9e9cc059ee3607b107572f" translate="yes" xml:space="preserve">
          <source>Often times, you will find that you are repeating a lot of configuration options. Setting the same layout in each file, adding the same category - or categories - to a post, etc. You can even add custom variables like author names, which might be the same for the majority of posts on your blog.</source>
          <target state="translated">しばしば、多くの設定オプションを繰り返していることに気づくでしょう。それぞれのファイルに同じレイアウトを設定したり、同じカテゴリ-またはカテゴリ-を記事に追加したり。著者名のようなカスタム変数を追加することもできますが、これはあなたのブログの大多数の記事では同じかもしれません。</target>
        </trans-unit>
        <trans-unit id="dd7a7fc492a1910ffb2d5a05efad918a16494e6e" translate="yes" xml:space="preserve">
          <source>Often, you&amp;rsquo;ll want the ability to run a Jekyll site in multiple places, such as previewing locally before pushing to GitHub Pages. Jekyll 1.0 makes that easier with the new &lt;code&gt;--baseurl&lt;/code&gt; flag. To take advantage of this feature, first add the production &lt;code&gt;baseurl&lt;/code&gt; to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; file. Then, throughout the site, simply prefix relative URLs with &lt;code&gt;{{ site.baseurl }}&lt;/code&gt;. When you&amp;rsquo;re ready to preview your site locally, pass along the &lt;code&gt;--baseurl&lt;/code&gt; flag with your local baseurl (most likely &lt;code&gt;/&lt;/code&gt;) to &lt;code&gt;jekyll serve&lt;/code&gt; and Jekyll will swap in whatever you&amp;rsquo;ve passed along, ensuring all your links work as you&amp;rsquo;d expect in both environments.</source>
          <target state="translated">多くの場合、GitHubページにプッシュする前にローカルでプレビューするなど、Jekyllサイトを複数の場所で実行する機能が必要になります。 Jekyll 1.0は、新しい &lt;code&gt;--baseurl&lt;/code&gt; フラグを使用してそれを簡単にします。この機能を利用するには、最初にサイトの &lt;code&gt;_config.yml&lt;/code&gt; ファイルに製品の &lt;code&gt;baseurl&lt;/code&gt; を追加します。次に、サイト全体で、相対URLの前に単に &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; ます。ローカルでサイトをプレビューする準備ができたら、 &lt;code&gt;--baseurl&lt;/code&gt; フラグとローカルbaseurl（ほとんどの場合は &lt;code&gt;/&lt;/code&gt; ）を &lt;code&gt;jekyll serve&lt;/code&gt; てjekyllを配信します。Jekyllは、渡されたものをすべて入れ替えて、すべてのリンクが機能することを確認します。 d両方の環境で期待します。</target>
        </trans-unit>
        <trans-unit id="d30b145b4bde5fa638fe23ec4ef06976a5bbbe21" translate="yes" xml:space="preserve">
          <source>Ok, now for an explanation of each line:</source>
          <target state="translated">では、それぞれのセリフの説明をします。</target>
        </trans-unit>
        <trans-unit id="6e28fd75868e57365d52c976d9e5c95ac3f14096" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt; you need to run the following commands before installing Jekyll:</source>
          <target state="translated">上&lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt;あなたはジキルをインストールする前に、次のコマンドを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c3597264393bddf95c610836b50fcadbbee4990" translate="yes" xml:space="preserve">
          <source>On Android (with Termux) you can install all requirements by running:</source>
          <target state="translated">Android(Termuxを使用)では、実行することですべての要件をインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="c2b8265c91a43410d21f3e0315a81135254de4f1" translate="yes" xml:space="preserve">
          <source>On Arch Linux you need to run:</source>
          <target state="translated">Arch Linux では実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="b9fb4f0f510e3218e417720a10ad1d07d4892cbf" translate="yes" xml:space="preserve">
          <source>On Debian or Ubuntu, you may need to add &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; to your path in order to have the &lt;code&gt;jekyll&lt;/code&gt; executable be available in your Terminal.</source>
          <target state="translated">DebianまたはUbuntuでは、ターミナルで &lt;code&gt;jekyll&lt;/code&gt; 実行可能ファイルを使用できるようにするために、パスに &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; を追加する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="adb1f21e91bc41853dfd2b9766358ecb21806591" translate="yes" xml:space="preserve">
          <source>On Mojave (10.14)</source>
          <target state="translated">モハーベについて (10.14)</target>
        </trans-unit>
        <trans-unit id="1c531262063904dc6bee40ddd0b7cf0a9d8411f4" translate="yes" xml:space="preserve">
          <source>On Red Hat, CentOS, and Fedora systems you can do this by running:</source>
          <target state="translated">Red Hat、CentOS、Fedora システムでは、これを実行することで行うことができます。</target>
        </trans-unit>
        <trans-unit id="fa115f95060aeec4e3e2d8c7325ac6dc5e8eb616" translate="yes" xml:space="preserve">
          <source>On Ubuntu if you get stuck after &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; and see error messages like &lt;code&gt;Could not locate Gemfile&lt;/code&gt; or &lt;code&gt;.bundle/ directory&lt;/code&gt;, it&amp;rsquo;s likely because all requirements have not been fully met. Recent stock Ubuntu distributions require the installation of both the &lt;code&gt;ruby&lt;/code&gt; and &lt;code&gt;ruby-all-dev&lt;/code&gt; packages:</source>
          <target state="translated">Ubuntuで、 &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; 後でスタックし、 &lt;code&gt;Could not locate Gemfile&lt;/code&gt; または &lt;code&gt;.bundle/ directory&lt;/code&gt; ませんでしたなどのエラーメッセージが表示される場合は、すべての要件が完全に満たされていない可能性があります。最近の標準のUbuntuディストリビューションでは、 &lt;code&gt;ruby&lt;/code&gt; パッケージと &lt;code&gt;ruby-all-dev&lt;/code&gt; パッケージの両方をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="b5a43e36150386712212d9f5b9c9c1a6f0c1c9d5" translate="yes" xml:space="preserve">
          <source>On Windows, you may need to install &lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKit&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKitの&lt;/a&gt;インストールが必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="62a8a2639b56b993d6229a9e24e09038459a6c02" translate="yes" xml:space="preserve">
          <source>On a successful build, GitHub Pages will &lt;strong&gt;publish&lt;/strong&gt; the site stored on the repository &lt;code&gt;gh-pages&lt;/code&gt; branches. Note that you do not need to setup a &lt;code&gt;gh-pages&lt;/code&gt; branch or enable GitHub Pages, as the action will take care of this for you. (For private repositories, you&amp;rsquo;ll have to upgrade to a paid plan).</source>
          <target state="translated">ビルドが成功すると、GitHubPagesはリポジトリの &lt;code&gt;gh-pages&lt;/code&gt; ブランチに保存されているサイトを&lt;strong&gt;公開&lt;/strong&gt;します。アクションが自動的に処理するため、 &lt;code&gt;gh-pages&lt;/code&gt; ブランチを設定したりGitHubPagesを有効にしたりする必要はないことに注意してください。（プライベートリポジトリの場合は、有料プランにアップグレードする必要があります）。</target>
        </trans-unit>
        <trans-unit id="bc528da50fbf0444b3fec13f95a3705a7abf12e9" translate="yes" xml:space="preserve">
          <source>On macOS, you may need to update RubyGems (using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">macOSでは、RubyGemsを更新する必要がある場合があります（必要な場合のみ &lt;code&gt;sudo&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="959f86315a5074f1457f947e180c6bb688c12e6f" translate="yes" xml:space="preserve">
          <source>On most flavors of Linux, macOS, and Bash on Ubuntu on Windows, it is possible to run Jekyll as a non-superuser and without having to install gems to system-wide locations by adding the following lines to the end of your &lt;code&gt;.bashrc&lt;/code&gt; file:</source>
          <target state="translated">Windows上のUbuntu上のLinux、macOS、およびBashのほとんどのフレーバーでは、 &lt;code&gt;.bashrc&lt;/code&gt; ファイルの最後に次の行を追加することで、システム全体の場所にgemをインストールすることなく、非スーパーユーザーとしてJekyllを実行できます。 ：</target>
        </trans-unit>
        <trans-unit id="6ee683f0eac74dad663fd8c72bb3a6766618ec83" translate="yes" xml:space="preserve">
          <source>On pushing any local changes onto &lt;code&gt;master&lt;/code&gt;, the action will be triggered and the build will &lt;strong&gt;start&lt;/strong&gt;.</source>
          <target state="translated">ローカルの変更を &lt;code&gt;master&lt;/code&gt; プッシュすると、アクションがトリガーされ、ビルドが&lt;strong&gt;開始され&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c38fa39b3c1205684f8e1cde55e5bc01aa13427c" translate="yes" xml:space="preserve">
          <source>On your GitHub profile, under &lt;strong&gt;Developer Settings&lt;/strong&gt;, go to the &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;Personal Access Tokens&lt;/a&gt; section.</source>
          <target state="translated">GitHubプロファイルの&lt;strong&gt;[開発者設定]で&lt;/strong&gt;、&lt;strong&gt;[&lt;/strong&gt;&lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;パーソナルアクセストークン]&lt;/a&gt;セクションに移動します。</target>
        </trans-unit>
        <trans-unit id="3d800c5c38947e2742dca8b913a5dcc9a8c572f5" translate="yes" xml:space="preserve">
          <source>Once Homebrew is installed, the second step is easy:</source>
          <target state="translated">Homebrewをインストールしたら、次のステップは簡単です。</target>
        </trans-unit>
        <trans-unit id="f0a9005e2dc37ed0efc5042fa378c9f94d57a3ac" translate="yes" xml:space="preserve">
          <source>Once Homebrew is installed, the second step is to run:</source>
          <target state="translated">Homebrewをインストールしたら、次は実行です。</target>
        </trans-unit>
        <trans-unit id="e740d0d84e268e668f10901581cbbf11a4eb4e11" translate="yes" xml:space="preserve">
          <source>Once this is done, the &lt;code&gt;jekyll new&lt;/code&gt; command should work properly for your user account.</source>
          <target state="translated">これが完了すると、 &lt;code&gt;jekyll new&lt;/code&gt; コマンドがユーザーアカウントに対して正しく機能するはずです。</target>
        </trans-unit>
        <trans-unit id="1d48bb207556e12c4176a8e5b62edee99682ac0f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your class and have it properly set up either as a plugin in the &lt;code&gt;_plugins&lt;/code&gt; folder or as a gem, specify it in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">クラスを作成し、 &lt;code&gt;_plugins&lt;/code&gt; フォルダー内のプラグインまたはgem として適切に設定したら、 &lt;code&gt;_config.yml&lt;/code&gt; で指定します。</target>
        </trans-unit>
        <trans-unit id="7764f5c760737cd6cf299480bea632afe6568e67" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily rsync its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;this deploy script here&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details.</source>
          <target state="translated">&lt;code&gt;_site&lt;/code&gt; ディレクトリを生成したら、&lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;このデプロイスクリプト&lt;/a&gt;と同様の &lt;code&gt;tasks/deploy&lt;/code&gt; シェルスクリプトを使用して、そのコンテンツを簡単にrsyncできます。明らかに、サイトの詳細を反映するように値を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="f383d31d4e5cb6939c261af3b2784a812fa3a19e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily scp its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;this deploy script&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details. There is even &lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;a matching TextMate command&lt;/a&gt; that will help you run this script.</source>
          <target state="translated">&lt;code&gt;_site&lt;/code&gt; ディレクトリを生成したら、&lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;このデプロイスクリプト&lt;/a&gt;と同様の &lt;code&gt;tasks/deploy&lt;/code&gt; シェルスクリプトを使用して、そのコンテンツを簡単にscp できます。明らかに、サイトの詳細を反映するように値を変更する必要があります。このスクリプトの実行に役立つ&lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;、一致するTextMateコマンド&lt;/a&gt;もあります。</target>
        </trans-unit>
        <trans-unit id="2fa1c2d47a36a61344e21d4725d8dd4dcfb7be93" translate="yes" xml:space="preserve">
          <source>One major benefit of using the &lt;code&gt;link&lt;/code&gt; or &lt;code&gt;post_url&lt;/code&gt; tag is link validation. If the link doesn&amp;rsquo;t exist, Jekyll won&amp;rsquo;t build your site. This is a good thing, as it will alert you to a broken link so you can fix it (rather than allowing you to build and deploy a site with broken links).</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; または &lt;code&gt;post_url&lt;/code&gt; タグを使用する主な利点の1つは、リンクの検証です。リンクが存在しない場合、Jekyllはサイトを構築しません。リンク切れを警告して修正できるので、これは良いことです（リンク切れのあるサイトを構築してデプロイするのではなく）。</target>
        </trans-unit>
        <trans-unit id="e8f3b981456dcf42d600fd7bd3fac055adb5786c" translate="yes" xml:space="preserve">
          <source>One of Jekyll&amp;rsquo;s best aspects is that it is &amp;ldquo;blog aware&amp;rdquo;. What does this mean, exactly? Well, simply put, it means that blogging is baked into Jekyll&amp;rsquo;s functionality. If you write articles and publish them online, you can publish and maintain a blog simply by managing a folder of text-files on your computer. Compared to the hassle of configuring and maintaining databases and web-based CMS systems, this will be a welcome change!</source>
          <target state="translated">ジキルの最も優れた点の1つは、「ブログ対応」であることです。これはどういう意味ですか？簡単に言えば、ブログがJekyllの機能に組み込まれているということです。記事を書いてそれらをオンラインで公開する場合、コンピューター上でテキストファイルのフォルダーを管理するだけで、ブログを公開および維持できます。データベースとWebベースのCMSシステムの構成と保守の手間と比較して、これは歓迎すべき変更です。</target>
        </trans-unit>
        <trans-unit id="ab9b149b95c4f61f4cd94577cd916546a6169919" translate="yes" xml:space="preserve">
          <source>One of the easiest ways to set up an automated deployment flow is by using a CI.</source>
          <target state="translated">自動化されたデプロイフローを設定する最も簡単な方法の1つは、CIを使用することです。</target>
        </trans-unit>
        <trans-unit id="30a3e463c7dc187565378bd24f47049278af4422" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and have a look through your blog posts.</source>
          <target state="translated">&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;を開き、ブログの投稿を確認してください。</target>
        </trans-unit>
        <trans-unit id="e38b57442e04a7aa5921e97a2289243af76ae220" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; in your browser and try switching between the pages.</source>
          <target state="translated">ブラウザで&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;を開き、ページを切り替えてみてください。</target>
        </trans-unit>
        <trans-unit id="60c09721dc084c6669c5ed93e36d3e7518281a30" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000/about.html&quot;&gt;http://localhost:4000/about.html&lt;/a&gt; in your browser and view your new page.</source>
          <target state="translated">ブラウザで&lt;a href=&quot;http://localhost:4000/about.html&quot;&gt;http：// localhost：4000 / about.html&lt;/a&gt;を開き、新しいページを表示します。</target>
        </trans-unit>
        <trans-unit id="6c36368b930f23a8cae7edd1498894a4e3f706e2" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Gemfile&lt;/code&gt; and remove &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; を開き、 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="3c90137c068be3506ba00bf2b6ab95d4273bec85" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Gemfile&lt;/code&gt; and remove &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.5&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; を開き、 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.5&quot;&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="56ec55f05a8ffd5722560cf6783c854b858181a6" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_config.yml&lt;/code&gt; and add &lt;code&gt;output: true&lt;/code&gt; to the author collection configuration:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; を開き、 &lt;code&gt;output: true&lt;/code&gt; を追加します：作成者コレクション構成にtrue：</target>
        </trans-unit>
        <trans-unit id="f6880880ea71672000d6b0fc05e219906fdfa14f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_config.yml&lt;/code&gt; and remove &lt;code&gt;theme: minima&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; を開き、 &lt;code&gt;theme: minima&lt;/code&gt; を削除します：minima。</target>
        </trans-unit>
        <trans-unit id="9e087e692eb3171c18a08a7065d9f5e7ca5f7ecf" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_layouts/default.html&lt;/code&gt; and add the stylesheet to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;_layouts/default.html&lt;/code&gt; を開き、スタイルシートを &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="b6f92283b488ad8b56842b85e322ec4b81a37568" translate="yes" xml:space="preserve">
          <source>Open a command prompt and execute the following commands:</source>
          <target state="translated">コマンドプロンプトを開き、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="004ceb479a659b160d5534bfd7d1947dc40b5925" translate="yes" xml:space="preserve">
          <source>Open a command prompt, target your local blog repository root, and install github-pages: &lt;code&gt;bundle install&lt;/code&gt;</source>
          <target state="translated">コマンドプロンプトを開き、ローカルのブログリポジトリルートをターゲットにして、github-pagesをインストールします。bundle &lt;code&gt;bundle install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b22453097b93b2df3d24add77a4309d80de41c8" translate="yes" xml:space="preserve">
          <source>Open a new command prompt window from the start menu, so that changes to the &lt;code&gt;PATH&lt;/code&gt; environment variable becomes effective. Install Jekyll and Bundler using &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</source>
          <target state="translated">スタートメニューから新しいコマンドプロンプトウィンドウを開き、 &lt;code&gt;PATH&lt;/code&gt; 環境変数への変更が有効になるようにします。 &lt;code&gt;gem install jekyll bundler&lt;/code&gt; を使用してJekyllとBundlerをインストールします</target>
        </trans-unit>
        <trans-unit id="7583cd72c5014d4ac4731c7aa0e930cf31931a3c" translate="yes" xml:space="preserve">
          <source>Open command prompt and install &lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt;: &lt;code&gt;gem install bundler&lt;/code&gt;</source>
          <target state="translated">オープンコマンドプロンプトとインストール&lt;a href=&quot;http://bundler.io/&quot;&gt;バンドラー&lt;/a&gt;： &lt;code&gt;gem install bundler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8ab8db786d60c2545688e62a58c67b60caca1ae" translate="yes" xml:space="preserve">
          <source>Open command prompt in &lt;code&gt;C:\tools\DevKit2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C:\tools\DevKit2&lt;/code&gt; コマンドプロンプトを開きます。</target>
        </trans-unit>
        <trans-unit id="9eff37a1745d89ee3e2ad92eb1deb2f390943a42" translate="yes" xml:space="preserve">
          <source>Open the site's URL in the browser.</source>
          <target state="translated">ブラウザでサイトのURLを開きます。</target>
        </trans-unit>
        <trans-unit id="73152d15b9a1ec78d263f7c6b2b461568506e6bf" translate="yes" xml:space="preserve">
          <source>Open the theme&amp;rsquo;s directory in Finder or Explorer:</source>
          <target state="translated">FinderまたはExplorerでテーマのディレクトリを開きます。</target>
        </trans-unit>
        <trans-unit id="4c82412df53adc6ae3295495ca687ae178bc5842" translate="yes" xml:space="preserve">
          <source>Open up &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and have a look at the staff page and the author links on posts to check everything is linked together correctly.</source>
          <target state="translated">&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;を開き、スタッフページと投稿の作成者リンクを見て、すべてが正しくリンクされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="400d9fe9935df0662d74728de48ec67404e8f455" translate="yes" xml:space="preserve">
          <source>OpenSUSE</source>
          <target state="translated">OpenSUSE</target>
        </trans-unit>
        <trans-unit id="70a99ba8a9ffb445b428e39680492a883a85000b" translate="yes" xml:space="preserve">
          <source>OpenShift</source>
          <target state="translated">OpenShift</target>
        </trans-unit>
        <trans-unit id="d32fab14202ae0097389d61ed54dc7ccca3287f0" translate="yes" xml:space="preserve">
          <source>Optional Extras</source>
          <target state="translated">オプション</target>
        </trans-unit>
        <trans-unit id="b55d7c386e1750235ffddf85b281073b275e3780" translate="yes" xml:space="preserve">
          <source>Optionally &lt;strong&gt;add&lt;/strong&gt; this URL to your repository&amp;rsquo;s main page and to your &lt;code&gt;README.md&lt;/code&gt;, to make it easy for people to find.</source>
          <target state="translated">必要に応じて&lt;strong&gt;、&lt;/strong&gt;このURLをリポジトリのメインページと &lt;code&gt;README.md&lt;/code&gt; に追加して、他の人が簡単に見つけられるようにします。</target>
        </trans-unit>
        <trans-unit id="2730df1840876b27ba50ea3c9e4fcd46e32a5273" translate="yes" xml:space="preserve">
          <source>Optionally configure the build by clicking on the gear icon. Further configuration happens via your &lt;code&gt;.travis.yml&lt;/code&gt; file. More details below.</source>
          <target state="translated">オプションで、歯車アイコンをクリックしてビルドを構成します。 &lt;code&gt;.travis.yml&lt;/code&gt; ファイルを使用して、さらに構成を行います。詳細は以下をご覧ください。</target>
        </trans-unit>
        <trans-unit id="60e7611132055753c9b1041f69b1f74d642f7ec9" translate="yes" xml:space="preserve">
          <source>Optionally you can use &lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;Autoinstall Jekyll for Windows&lt;/a&gt;.</source>
          <target state="translated">必要に応じて、&lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;Autoinstall Jekyll for Windowsを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="e62613f989a67d7593b94141f928dd4b6e5043aa" translate="yes" xml:space="preserve">
          <source>Optionally, if you are not interested in the build email notifications you can disable them with this configuration. Travis supports a wide array of notification services, you may find &lt;a href=&quot;https://docs.travis-ci.com/user/notifications/&quot;&gt;another one more useful (e.g. slack)&lt;/a&gt;.</source>
          <target state="translated">オプションで、ビルドの電子メール通知に関心がない場合は、この構成でそれらを無効にすることができます。Travisはさまざまな通知サービスをサポートしていますが、&lt;a href=&quot;https://docs.travis-ci.com/user/notifications/&quot;&gt;もう1つ便利な&lt;/a&gt;サービス（Slackなど）が見つかる場合があります。</target>
        </trans-unit>
        <trans-unit id="135a1bcda4b25a5f404e15dc6baa60da6e5b1c5b" translate="yes" xml:space="preserve">
          <source>Options and Flags</source>
          <target state="translated">オプションとフラグ</target>
        </trans-unit>
        <trans-unit id="c3041924699f7386336b1c03e46950d1ce22be2c" translate="yes" xml:space="preserve">
          <source>Options are given as a second argument to &lt;code&gt;.new&lt;/code&gt;, and are encoded in a symbol-keyed Ruby Hash. For more information about the configuration options, check out &lt;code&gt;html-proofer&lt;/code&gt;&amp;rsquo;s README file.</source>
          <target state="translated">オプションは &lt;code&gt;.new&lt;/code&gt; の 2番目の引数として指定され、シンボルキーのRubyハッシュでエンコードされます。設定オプションの詳細については、 &lt;code&gt;html-proofer&lt;/code&gt; のREADMEファイルをご覧ください。</target>
        </trans-unit>
        <trans-unit id="35a22db1ee88115b121ce6b7c4afd8072e9a235c" translate="yes" xml:space="preserve">
          <source>Options for creating a new site with Jekyll</source>
          <target state="translated">ジキルで新規サイトを作成するためのオプション</target>
        </trans-unit>
        <trans-unit id="560143653190c35a839a512a853005f840e8708e" translate="yes" xml:space="preserve">
          <source>Options for the &lt;code&gt;slugify&lt;/code&gt; filter</source>
          <target state="translated">&lt;code&gt;slugify&lt;/code&gt; フィルターのオプション</target>
        </trans-unit>
        <trans-unit id="fd32301500d284cdb5c29f7af6f284e0ab343b55" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;_data/members.csv&lt;/code&gt;:</source>
          <target state="translated">または &lt;code&gt;_data/members.csv&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="645b758bd607fe4dff04534c57b0a1063c23e424" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve started with the &lt;code&gt;jekyll new&lt;/code&gt; command, replace &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; with the gem you want, e.g:</source>
          <target state="translated">または、 &lt;code&gt;jekyll new&lt;/code&gt; コマンドを開始した場合は、 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; を必要なgemに置き換えます。例：</target>
        </trans-unit>
        <trans-unit id="d172be3fe8bc618fcc6602af3e4c76c0aae31310" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve started with the &lt;code&gt;jekyll new&lt;/code&gt; command, replace &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; with your theme-gem:</source>
          <target state="translated">あるいは、 &lt;code&gt;jekyll new&lt;/code&gt; コマンドで始めた場合は、 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; をお使いのtheme-gem に置き換えます。</target>
        </trans-unit>
        <trans-unit id="ac2db100d3d942904c2131a1e10be5199910241f" translate="yes" xml:space="preserve">
          <source>Or to get a list of comic-book based movies, one may use the following:</source>
          <target state="translated">または、コミックブックベースの映画のリストを取得するには、次のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="b802ce2068737656985509e4c57384fa3a56405b" translate="yes" xml:space="preserve">
          <source>Or you could list them explicitly as Jekyll plugins in your Gemfile, and not update &lt;code&gt;_config.yml&lt;/code&gt;, like this:</source>
          <target state="translated">それとも、更新あなたのGemfileでジキルのプラグインとしてそれらを明示的にリストし、できなかった &lt;code&gt;_config.yml&lt;/code&gt; このように、：</target>
        </trans-unit>
        <trans-unit id="7575764b5d7e5d6dcfc8a0556d9ed2c9c2ba8934" translate="yes" xml:space="preserve">
          <source>Ordinal day of the year from the post&amp;rsquo;s filename, with leading zeros. (001..366)</source>
          <target state="translated">投稿のファイル名からの序数の日。先頭にゼロが付きます。（001..366）</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="0c6615de6943228411f3ad7e04655686aac16eb4" translate="yes" xml:space="preserve">
          <source>Other Files/Folders</source>
          <target state="translated">その他のファイル/フォルダ</target>
        </trans-unit>
        <trans-unit id="06c3ba4ba77c459e0a61b4bf2611d961ae796ff4" translate="yes" xml:space="preserve">
          <source>Other Linux</source>
          <target state="translated">その他のLinux</target>
        </trans-unit>
        <trans-unit id="16450a48eba70ad54ff1ad9ff818734f44629c84" translate="yes" xml:space="preserve">
          <source>Other commentary</source>
          <target state="translated">その他の解説</target>
        </trans-unit>
        <trans-unit id="c94c404ecea36e47c969182a93bd2aa77150d4fd" translate="yes" xml:space="preserve">
          <source>Our &amp;ldquo;Hello World!&amp;rdquo; will now be downcased on render.</source>
          <target state="translated">私たちの「HelloWorld！」レンダリング時に小文字になります。</target>
        </trans-unit>
        <trans-unit id="fca1c1ad83bd5de1fb6c5a8fa7489884ec896f2e" translate="yes" xml:space="preserve">
          <source>Our friends at GitHub have provided the &lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gem which is used to manage &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;Jekyll and its dependencies on GitHub Pages&lt;/a&gt;. Using it in your projects means that when you deploy your site to GitHub Pages, you will not be caught by unexpected differences between various versions of the gems.</source>
          <target state="translated">GitHubの友人は、&lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;JekyllとそのGitHub Pagesへの依存関係&lt;/a&gt;を管理するために使用される&lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gemを提供しています。プロジェクトでそれを使用することは、サイトをGitHub Pagesにデプロイするときに、gemのさまざまなバージョン間の予期しない違いに気づかないことを意味します。</target>
        </trans-unit>
        <trans-unit id="a5e38335dad03154bf1d809c715aea741faeb396" translate="yes" xml:space="preserve">
          <source>Out of the box, Jekyll has pre-defined hook points for owners &lt;code&gt;:site&lt;/code&gt;, &lt;code&gt;:pages&lt;/code&gt;, &lt;code&gt;:documents&lt;/code&gt; and &lt;code&gt;:clean&lt;/code&gt;. Additionally, the hook points defined for &lt;code&gt;:documents&lt;/code&gt; can be utilized for individual collections only by invoking the collection type instead. i.e. &lt;code&gt;:posts&lt;/code&gt; for documents in collection &lt;code&gt;_posts&lt;/code&gt; and &lt;code&gt;:movies&lt;/code&gt; for documents in collection &lt;code&gt;_movies&lt;/code&gt;. In all cases, Jekyll calls your hooks with the owner object as the first callback parameter.</source>
          <target state="translated">箱から出して、Jekyllには、所有者 &lt;code&gt;:site&lt;/code&gt; 、 &lt;code&gt;:pages&lt;/code&gt; 、 &lt;code&gt;:documents&lt;/code&gt; 、および &lt;code&gt;:clean&lt;/code&gt; 用の事前定義されたフックポイントがあります。さらに、 &lt;code&gt;:documents&lt;/code&gt; に定義されたフックポイントは、代わりにコレクションタイプを呼び出すことによってのみ、個々のコレクションに利用できます。すなわち &lt;code&gt;:posts&lt;/code&gt; コレクション内のドキュメントのための &lt;code&gt;_posts&lt;/code&gt; と &lt;code&gt;:movies&lt;/code&gt; コレクション内のドキュメントのための &lt;code&gt;_movies&lt;/code&gt; 。いずれの場合も、Jekyllは、最初のコールバックパラメーターとしてownerオブジェクトを使用してフックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="b7d382ed311b02ac2102668a077e890a7bee6077" translate="yes" xml:space="preserve">
          <source>Output a page</source>
          <target state="translated">ページを出力</target>
        </trans-unit>
        <trans-unit id="8fd9c8201ce2fca2a9eb4af0a121d222b9a70f9a" translate="yes" xml:space="preserve">
          <source>Outputs &lt;code&gt;Hi&lt;/code&gt;. You can learn more about the filters available to Jekyll &lt;a href=&quot;../../liquid/filters/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Hi&lt;/code&gt; 出力します。Jekyll&lt;a href=&quot;../../liquid/filters/index&quot;&gt;で&lt;/a&gt;利用できるフィルターについて詳しくは、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="2291581dfc2cc48d0726a6393fdad0c7cf40c195" translate="yes" xml:space="preserve">
          <source>Outputs a variable called &lt;code&gt;page.title&lt;/code&gt; on the page.</source>
          <target state="translated">ページに &lt;code&gt;page.title&lt;/code&gt; という変数を出力します。</target>
        </trans-unit>
        <trans-unit id="552f0311af4ab97f91dc8653580124d0fb276057" translate="yes" xml:space="preserve">
          <source>Outputs the content of the tag.</source>
          <target state="translated">タグの内容を出力します。</target>
        </trans-unit>
        <trans-unit id="50df6f9a4168a759d9e89d4c2def5bf696afd82e" translate="yes" xml:space="preserve">
          <source>Outputs the sidebar if &lt;code&gt;page.show_sidebar&lt;/code&gt; is true. You can learn more about the tags available to Jekyll &lt;a href=&quot;../../liquid/tags/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;page.show_sidebar&lt;/code&gt; がtrueの場合、サイドバーを出力します。Jekyllが利用できるタグについて詳しくは、&lt;a href=&quot;../../liquid/tags/index&quot;&gt;こちらをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37dc9012ef71231741cb1e581f85142964b548d7" translate="yes" xml:space="preserve">
          <source>Overall, you can create includes that act as templates for a variety of uses &amp;mdash; inserting audio or video clips, alerts, special formatting, and more. However, note that you should avoid using too many includes, as this will slow down the build time of your site. For example, don&amp;rsquo;t use includes every time you insert an image. (The above technique shows a use case for special images.)</source>
          <target state="translated">全体として、オーディオまたはビデオクリップの挿入、アラート、特別な書式設定など、さまざまな用途のテンプレートとして機能するインクルードを作成できます。ただし、サイトのビルド時間が遅くなるため、インクルードの使用は避けてください。たとえば、画像を挿入するたびにインクルードを使用しないでください。（上記の手法は、特別な画像の使用例を示しています。）</target>
        </trans-unit>
        <trans-unit id="627a4cb25b349ef246f8579404f67f42035a2c83" translate="yes" xml:space="preserve">
          <source>Overall, you can create includes that act as templates for a variety of uses &amp;mdash; inserting audio or video clips, alerts, special formatting, and more. Note that you should avoid using too many includes, as this will slow down the build time of your site. For example, don&amp;rsquo;t use includes every time you insert an image. (The above technique shows a use case for special images.)</source>
          <target state="translated">全体として、オーディオまたはビデオクリップの挿入、アラート、特別なフォーマットなど、さまざまな用途のテンプレートとして機能するインクルードを作成できます。インクルードの数が多すぎると、サイトのビルド時間が遅くなるため、使用しないように注意してください。たとえば、画像を挿入するたびにインクルードを使用しないでください。（上記の手法は、特殊な画像の使用例を示しています。）</target>
        </trans-unit>
        <trans-unit id="a407aa60450670a092614d3725b0bf7a57789eec" translate="yes" xml:space="preserve">
          <source>Override default development settings</source>
          <target state="translated">デフォルトの開発設定を上書きする</target>
        </trans-unit>
        <trans-unit id="1fa8317388f8659e5d80c07bb57f00ba667fc7e7" translate="yes" xml:space="preserve">
          <source>Overriding theme defaults</source>
          <target state="translated">テーマのデフォルトを上書きする</target>
        </trans-unit>
        <trans-unit id="89ff31225c5f042fff61e92ec8cf80e417a7140c" translate="yes" xml:space="preserve">
          <source>Owner</source>
          <target state="translated">Owner</target>
        </trans-unit>
        <trans-unit id="fb727ea90883481adad9143766fed7cf0c61d139" translate="yes" xml:space="preserve">
          <source>Page Variables</source>
          <target state="translated">ページ変数</target>
        </trans-unit>
        <trans-unit id="6c30ca069285c1ec29e909ff7ad7abae0aa1027d" translate="yes" xml:space="preserve">
          <source>Page specific information + the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;. Custom variables set via the front matter will be available here. See below for details.</source>
          <target state="translated">ページ固有の情報+&lt;a href=&quot;../front-matter/index&quot;&gt;前書き&lt;/a&gt;。フロントマターを介して設定されたカスタム変数は、ここで利用できます。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="b2edf287ea254dc5eefc4ac30424fb7a0fabecf3" translate="yes" xml:space="preserve">
          <source>Page specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter will be available here. See below for details.</source>
          <target state="translated">ページ固有の情報+ &lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLの前付け&lt;/a&gt;。YAMLフロントマターを介して設定されたカスタム変数は、ここで使用できます。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="600584c2d5ccb97c0c0c424d9f32d6b102fcb040" translate="yes" xml:space="preserve">
          <source>Pages</source>
          <target state="translated">Pages</target>
        </trans-unit>
        <trans-unit id="1731a84a0ac0bb83b8947e3dc93bd2eedd07c402" translate="yes" xml:space="preserve">
          <source>Pages and posts can also access a specific data item. The example below shows how to access a specific item:</source>
          <target state="translated">ページや投稿は、特定のデータ項目にアクセスすることもできます。以下の例では、特定の項目にアクセスする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="8d7d8d1b2a29d690c9a2f23d15035cc21ad5509c" translate="yes" xml:space="preserve">
          <source>Pages are the most basic building block for content. They&amp;rsquo;re useful for standalone content (content which is not date based or is not a group of content such as staff members or recipes).</source>
          <target state="translated">ページは、コンテンツの最も基本的な構成要素です。これらはスタンドアロンコンテンツ（日付ベースではないコンテンツ、またはスタッフやレシピなどのコンテンツのグループではないコンテンツ）に役立ちます。</target>
        </trans-unit>
        <trans-unit id="93b9546c42784bd93f39c345a78ee775a824f706" translate="yes" xml:space="preserve">
          <source>Pages have the following placeholders available:</source>
          <target state="translated">ページには、以下のプレースホルダが用意されています。</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="099f26d22f2eab450a9f8e4641df844a9fd35b39" translate="yes" xml:space="preserve">
          <source>Pagination does not support tags or categories</source>
          <target state="translated">ページネーションはタグやカテゴリをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="8d1188b7a9bf945de310de44fa2e4fda7a93a1ea" translate="yes" xml:space="preserve">
          <source>Pagination does not work from within Markdown files from your Jekyll site. Pagination works when called from within the HTML file, named &lt;code&gt;index.html&lt;/code&gt;, which optionally may reside in and produce pagination from within a subdirectory, via the &lt;code&gt;paginate_path&lt;/code&gt; configuration value.</source>
          <target state="translated">JekyllサイトのMarkdownファイル内からのページ付けは機能しません。ページネーションは、 &lt;code&gt;index.html&lt;/code&gt; という名前のHTMLファイル内から呼び出されたときに機能します。このファイルは、オプションで、 &lt;code&gt;paginate_path&lt;/code&gt; 構成値を介して、サブディレクトリ内に存在し、サブディレクトリ内からページネーションを生成できます。</target>
        </trans-unit>
        <trans-unit id="665ed12f6912f493c693116c0d4595a8fceedf76" translate="yes" xml:space="preserve">
          <source>Pagination does not work from within Markdown or Textile files from your Jekyll site. Pagination works when called from within the HTML file, named &lt;code&gt;index.html&lt;/code&gt;, which optionally may reside in and produce pagination from within a subdirectory, via the &lt;code&gt;paginate_path&lt;/code&gt; configuration value.</source>
          <target state="translated">JekyllサイトのMarkdownまたはTextileファイル内ではページ付けは機能しません。ページネーションは、 &lt;code&gt;index.html&lt;/code&gt; という名前のHTMLファイル内から呼び出されたときに機能します。これは、 &lt;code&gt;paginate_path&lt;/code&gt; 構成値を介して、オプションでサブディレクトリ内に存在し、サブディレクトリ内からページネーションを生成できます。</target>
        </trans-unit>
        <trans-unit id="28eb844982985dc922c656b73584b243a8ef4a58" translate="yes" xml:space="preserve">
          <source>Pagination for categories, tags and collections</source>
          <target state="translated">カテゴリ、タグ、コレクションのページネーション</target>
        </trans-unit>
        <trans-unit id="bc21578e87f661e49f1a43a46e87bbd3f4931c48" translate="yes" xml:space="preserve">
          <source>Pagination only works within HTML files</source>
          <target state="translated">ページネーションはHTMLファイル内でのみ動作します</target>
        </trans-unit>
        <trans-unit id="a5e90cc1ce791d5b1a24484acb57915c8ea30726" translate="yes" xml:space="preserve">
          <source>Pagination pages through every post in the &lt;code&gt;posts&lt;/code&gt; variable unless a post has &lt;code&gt;hidden: true&lt;/code&gt; in its YAML Front Matter. It does not currently allow paging over groups of posts linked by a common tag or category. It cannot include any collection of documents because it is restricted to posts.</source>
          <target state="translated">YAMLフロントマターで投稿が &lt;code&gt;hidden: true&lt;/code&gt; ている場合を除き、 &lt;code&gt;posts&lt;/code&gt; 変数のすべての投稿をページ分割します。現在、共通のタグまたはカテゴリによってリンクされている投稿のグループをページングすることはできません。投稿に制限されているため、ドキュメントのコレクションを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="f30fe0bd3f86903a82b9d6f2de1da1477d0da18f" translate="yes" xml:space="preserve">
          <source>Pagination pages through every post in the &lt;code&gt;posts&lt;/code&gt; variable unless a post has &lt;code&gt;hidden: true&lt;/code&gt; in its front matter. It does not currently allow paging over groups of posts linked by a common tag or category. It cannot include any collection of documents because it is restricted to posts.</source>
          <target state="translated">投稿が &lt;code&gt;hidden: true&lt;/code&gt; ていない限り、 &lt;code&gt;posts&lt;/code&gt; 変数内のすべての投稿のページネーションページ：前書きではtrue。現在、共通のタグまたはカテゴリでリンクされた投稿のグループをページングすることはできません。投稿に制限されているため、ドキュメントのコレクションを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="24533236e88c1d36ff37cc521374f5302ab40560" translate="yes" xml:space="preserve">
          <source>Paginator</source>
          <target state="translated">Paginator</target>
        </trans-unit>
        <trans-unit id="84e974ec86fb92f41c07299c2cf6c5412ae6f050" translate="yes" xml:space="preserve">
          <source>Paginator variable availability</source>
          <target state="translated">パジネーターの可変アベイラビリティ</target>
        </trans-unit>
        <trans-unit id="1fc3796d3af4ab08534459a95040dbdc741f4ec6" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--livereload&lt;/code&gt; option to &lt;code&gt;serve&lt;/code&gt; to automatically refresh the page with each change you make to the source files: &lt;code&gt;bundle exec jekyll serve --livereload&lt;/code&gt;</source>
          <target state="translated">パス &lt;code&gt;--livereload&lt;/code&gt; のためのオプション &lt;code&gt;serve&lt;/code&gt; 、自動的にソースファイルに加える変更ごとにページを更新するために： &lt;code&gt;bundle exec jekyll serve --livereload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c2edadd9ff3015cde4c2171a3a54ce96932f4e1" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;'auto'&lt;/code&gt; (auto-detect) works similar to &lt;code&gt;'cjk'&lt;/code&gt; but is more performant if the filter is used on a variable string that may or may not contain CJK chars.</source>
          <target state="translated">通過 &lt;code&gt;'auto'&lt;/code&gt; （自動検出する-）と同様に動作 &lt;code&gt;'cjk'&lt;/code&gt; が、フィルタがCJKの文字を含んでいてもよいか、可変文字列で使用される場合よりパフォーマンスです。</target>
        </trans-unit>
        <trans-unit id="b72f1dd7f64d80ff83eef93fab8c047bdaf13324" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;'cjk'&lt;/code&gt; as the argument will count every CJK character detected as one word irrespective of being separated by whitespace.</source>
          <target state="translated">引数として &lt;code&gt;'cjk'&lt;/code&gt; を渡すと、空白で区切られているかどうかに関係なく、検出されたすべてのCJK文字が1つの単語としてカウントされます。</target>
        </trans-unit>
        <trans-unit id="92b3f43aee0fed327790633811b3b180ccc11c8a" translate="yes" xml:space="preserve">
          <source>Passing parameter variables to includes</source>
          <target state="translated">パラメータ変数をインクルードに渡す</target>
        </trans-unit>
        <trans-unit id="b1948833b08ddb3d596c60fadb3e50a706082bf2" translate="yes" xml:space="preserve">
          <source>Passing parameters to includes</source>
          <target state="translated">パラメータをインクルードに渡す</target>
        </trans-unit>
        <trans-unit id="d09b5f991f332dcef768215c7f896fd32593e3ab" translate="yes" xml:space="preserve">
          <source>Passing parameters to includes is especially helpful when you want to hide away complex formatting from your Markdown content.</source>
          <target state="translated">パラメータをインクルードに渡すことは、Markdownコンテンツから複雑なフォーマットを隠したい場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="d4e60c27a532f36e8d9eb0fc03f0bd6d8dea3a72" translate="yes" xml:space="preserve">
          <source>Passing references to YAML files as parameter values</source>
          <target state="translated">YAMLファイルへの参照をパラメータ値として渡す</target>
        </trans-unit>
        <trans-unit id="c6e96759e0f6dc5232b961c30408375dd13359d1" translate="yes" xml:space="preserve">
          <source>Path to the document relative to the collection's directory, including base filename of the document.</source>
          <target state="translated">ドキュメントのベースファイル名を含む、コレクションのディレクトリからの相対的なドキュメントへのパス。</target>
        </trans-unit>
        <trans-unit id="2cc477e2aea081f0ff295affd369bd1d6c54ab84" translate="yes" xml:space="preserve">
          <source>Path to the document relative to the collection's directory.</source>
          <target state="translated">コレクションのディレクトリからの相対的なドキュメントへのパス。</target>
        </trans-unit>
        <trans-unit id="ba557b22b3669a781a4f3803c3c434ddd4aba78a" translate="yes" xml:space="preserve">
          <source>Path to the page relative to the site's source directory, excluding base filename of the page.</source>
          <target state="translated">サイトのソースディレクトリからの相対的なページへのパス。</target>
        </trans-unit>
        <trans-unit id="84e9675ad3e50543cbc04858a3c2d72d19a3e52f" translate="yes" xml:space="preserve">
          <source>People often use &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt; to manage multiple Ruby versions. This is very useful when you need to be able to run a given Ruby version on a project.</source>
          <target state="translated">多くの場合、&lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt;を使用して複数のRubyバージョンを管理します。これは、プロジェクトで特定のRubyバージョンを実行できるようにする必要がある場合に非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="7127bd847805300c5c2ebdef3287652a44a839e2" translate="yes" xml:space="preserve">
          <source>Percent encodes any special characters in a URI. URI escape normally replaces a space with &lt;code&gt;%20&lt;/code&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters&quot;&gt;Reserved characters&lt;/a&gt; will not be escaped.</source>
          <target state="translated">パーセントは、URIの特殊文字をエンコードします。URIエスケープは通常、スペースを &lt;code&gt;%20&lt;/code&gt; に置き換えます。&lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters&quot;&gt;予約文字&lt;/a&gt;はエスケープされません。</target>
        </trans-unit>
        <trans-unit id="88973c8fae2719fe8ac2f36fc3841aa776c29088" translate="yes" xml:space="preserve">
          <source>Permalink Style</source>
          <target state="translated">パーマリンクスタイル</target>
        </trans-unit>
        <trans-unit id="4a6598c061feabe730c00f48fbba63aeeb8cad94" translate="yes" xml:space="preserve">
          <source>Permalink settings for pages and collections</source>
          <target state="translated">ページとコレクションのパーマリンク設定</target>
        </trans-unit>
        <trans-unit id="722b6f6fa174c5db2506367d3abe2fca3616ead6" translate="yes" xml:space="preserve">
          <source>Permalink style examples with posts</source>
          <target state="translated">投稿を使ったパーマースタイルの例</target>
        </trans-unit>
        <trans-unit id="dbd403fe181f92e05bc517db25b4ae6314e2582e" translate="yes" xml:space="preserve">
          <source>Permalinks</source>
          <target state="translated">Permalinks</target>
        </trans-unit>
        <trans-unit id="45205b32aac7d14c5f63a3d55000c4404bdd71fc" translate="yes" xml:space="preserve">
          <source>Permalinks and default paths</source>
          <target state="translated">パーマリンクとデフォルトパス</target>
        </trans-unit>
        <trans-unit id="8841b244eb807db2e75566d7e14c56fe4958c327" translate="yes" xml:space="preserve">
          <source>Permalinks are the output path for your pages, posts, or collections. They allow you to structure the directories of your source code different from the directories in your output.</source>
          <target state="translated">パーマリンクは、ページや投稿、コレクションの出力パスです。これにより、ソースコードのディレクトリを出力のディレクトリとは異なる構造にすることができます。</target>
        </trans-unit>
        <trans-unit id="f47de5ff111161d18fad9e57a6f9bb229ff5fc35" translate="yes" xml:space="preserve">
          <source>Permalinks no longer automatically add a trailing slash</source>
          <target state="translated">パーマリンクに自動的に末尾のスラッシュが追加されなくなりました。</target>
        </trans-unit>
        <trans-unit id="70a8fc9a8a667f813cf50a26ea70b8d3e322e9c0" translate="yes" xml:space="preserve">
          <source>Permalinks refer to the URLs (excluding the domain name or directory folder) for your pages, posts, or collections. Jekyll supports a flexible way to build permalinks, allowing you to leverage various template variables or choose built-in permalink styles (such as &lt;code&gt;date&lt;/code&gt;) that automatically use a template-variable pattern.</source>
          <target state="translated">パーマリンクは、ページ、投稿、またはコレクションのURL（ドメイン名またはディレクトリフォルダーを除く）を指します。Jekyllは、パーマリンクを構築する柔軟な方法をサポートしており、さまざまなテンプレート変数を活用したり、テンプレート変数のパターンを自動的に使用する組み込みのパーマリンクスタイル（ &lt;code&gt;date&lt;/code&gt; など）を選択したりできます。</target>
        </trans-unit>
        <trans-unit id="60720f5c5a4a72182a2e32579d5ff97bb9804d3c" translate="yes" xml:space="preserve">
          <source>Pick a random value from an array. Optional: pick multiple values.</source>
          <target state="translated">配列からランダムな値をピックします。オプション:複数の値をピックします。</target>
        </trans-unit>
        <trans-unit id="59e55e94ff0cf531532aab03ff3c79f6012d21ce" translate="yes" xml:space="preserve">
          <source>Pick a random value from an array. Optionally, pick multiple values.</source>
          <target state="translated">配列からランダムな値をピックします。オプションで、複数の値をピックします。</target>
        </trans-unit>
        <trans-unit id="a435a570c653de6428021d4190d9d6afa881d5c0" translate="yes" xml:space="preserve">
          <source>Pick up a theme</source>
          <target state="translated">テーマをピックアップ</target>
        </trans-unit>
        <trans-unit id="6724700fe82140ed81667d9e1970f59962831ee1" translate="yes" xml:space="preserve">
          <source>Place all your partials in your &lt;code&gt;sass_dir&lt;/code&gt;, which defaults to &lt;code&gt;&amp;lt;source&amp;gt;/_sass&lt;/code&gt;. Place your main SCSS or Sass files in the place you want them to be in the output file, such as &lt;code&gt;&amp;lt;source&amp;gt;/css&lt;/code&gt;. For an example, take a look at &lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/docs&quot;&gt;this example site using Sass support in Jekyll&lt;/a&gt;.</source>
          <target state="translated">すべてのパーシャルを &lt;code&gt;sass_dir&lt;/code&gt; に配置します。デフォルトは &lt;code&gt;&amp;lt;source&amp;gt;/_sass&lt;/code&gt; です。メインのSCSSファイルまたはSassファイルを、 &lt;code&gt;&amp;lt;source&amp;gt;/css&lt;/code&gt; などの出力ファイルに置きたい場所に配置します。例として、&lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/docs&quot;&gt;JekyllのSassサポートを使用&lt;/a&gt;したこのサンプルサイトをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b9d011d9a69638626708513d5be1a1045790a7ed" translate="yes" xml:space="preserve">
          <source>Place it in the &lt;code&gt;bin&lt;/code&gt; subdirectory of your home folder (&lt;code&gt;~/bin&lt;/code&gt;)</source>
          <target state="translated">ホームフォルダーの &lt;code&gt;bin&lt;/code&gt; サブディレクトリに配置します（ &lt;code&gt;~/bin&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1fc60b48edacdcff0774ec0c923e2a01de2bba2a" translate="yes" xml:space="preserve">
          <source>Place named HTML or &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; files for each page in your site&amp;rsquo;s root folder.</source>
          <target state="translated">各ページの名前付きHTMLまたは&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;ファイルをサイトのルートフォルダーに配置します。</target>
        </trans-unit>
        <trans-unit id="7c9271c31bc7a38b8983172ef056e0b18258c168" translate="yes" xml:space="preserve">
          <source>Place pages inside folders and subfolders named whatever you want.</source>
          <target state="translated">好きな名前のフォルダやサブフォルダの中にページを配置します。</target>
        </trans-unit>
        <trans-unit id="b62930d0710de4268cfd1b4505b2a2ad7a57660d" translate="yes" xml:space="preserve">
          <source>Placeholders</source>
          <target state="translated">Placeholders</target>
        </trans-unit>
        <trans-unit id="a5c540254fd3b4936f9e041d2134f4f59504ea17" translate="yes" xml:space="preserve">
          <source>Placement into layouts work similar to how Russian dolls encase the smaller ones within itself or how an oyster generates a pearl &amp;mdash; the converted output from the preceding stage forms the core and layout(s) are successively &lt;em&gt;rendered&lt;/em&gt; separately onto the core.</source>
          <target state="translated">レイアウトへの配置は、ロシアの人形が小さな人形を包む方法や、カキが真珠を生成する方法と同じように機能します。前のステージからの変換された出力がコアを形成し、レイアウトはコアに別々に連続して&lt;em&gt;レンダリングされます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e6d5bbc4f1c87296e2a7ea566d1bfd5a5169afdf" translate="yes" xml:space="preserve">
          <source>Please note that both &lt;code&gt;remove_block_html_tags&lt;/code&gt; and &lt;code&gt;remove_span_html_tags&lt;/code&gt; are currently unsupported in Jekyll due to the fact that they are not included within the kramdown HTML converter.</source>
          <target state="translated">&lt;code&gt;remove_block_html_tags&lt;/code&gt; と &lt;code&gt;remove_span_html_tags&lt;/code&gt; はどちらもkramdown HTMLコンバーターに含まれていないため、現在Jekyllではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="650509eedfbfae3803f781c1708f1c1fc918b11b" translate="yes" xml:space="preserve">
          <source>Please note that globbing a path is known to have a negative effect on performance and is currently not optimized, especially on Windows. Globbing a path will increase your build times in proportion to the size of the associated collection directory.</source>
          <target state="translated">パスのグロブ化はパフォーマンスに悪影響を及ぼすことが知られており、特に Windows では現在のところ最適化されていないことに注意してください。パスをグロブ化すると、関連するコレクションディレクトリのサイズに比例してビルド時間が長くなります。</target>
        </trans-unit>
        <trans-unit id="3e7053ca3819821374d48c6e7c191b321fed7641" translate="yes" xml:space="preserve">
          <source>Please refer to GitHub official documentation on &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user, organization and project pages&lt;/a&gt; to see more detailed examples.</source>
          <target state="translated">より詳細な例については&lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;、ユーザー、組織、プロジェクトのページ&lt;/a&gt;にあるGitHub公式ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1837db6abc417517a9f8ed078c5f32ee6063cb9b" translate="yes" xml:space="preserve">
          <source>Please refer to our &lt;a href=&quot;https://jekyllrb.com/docs/upgrading/&quot;&gt;upgrading section&lt;/a&gt; for major updates detailed instructions.</source>
          <target state="translated">メジャーアップデートの詳細な手順については、&lt;a href=&quot;https://jekyllrb.com/docs/upgrading/&quot;&gt;アップグレードセクション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5b05c8bfba1866fa9160e033fa61d16d7fb42a9d" translate="yes" xml:space="preserve">
          <source>Please report issues you encounter!</source>
          <target state="translated">遭遇した問題を報告してください</target>
        </trans-unit>
        <trans-unit id="c3708d29157821517e37a79459a3140546e30b5a" translate="yes" xml:space="preserve">
          <source>Please stop and rerun `jekyll serve` command.</source>
          <target state="translated">jjekyll serve`コマンドを停止して再実行してください。</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="a9879fb675982db2f3432f7a47d5e774a955dcf5" translate="yes" xml:space="preserve">
          <source>Plugins allow you to extend Jekyll&amp;rsquo;s behavior to fit your needs. There are six types of plugins in Jekyll.</source>
          <target state="translated">プラグインを使用すると、ニーズに合わせてJekyllの動作を拡張できます。Jekyllには6種類のプラグインがあります。</target>
        </trans-unit>
        <trans-unit id="cbca525c651606d32aa2cd9d29a443e374188b86" translate="yes" xml:space="preserve">
          <source>Plugins on GitHub Pages</source>
          <target state="translated">GitHubページのプラグイン</target>
        </trans-unit>
        <trans-unit id="375ed3fbdc9976dcc468b1c1ba32b1ffb19c53bd" translate="yes" xml:space="preserve">
          <source>Plugins/themes can also leverage Data Files to set configuration variables.</source>
          <target state="translated">プラグイン/テーマは、設定変数を設定するためにデータファイルを利用することもできます。</target>
        </trans-unit>
        <trans-unit id="531647990f4b25a57b01632a99f5d6ca1762bab5" translate="yes" xml:space="preserve">
          <source>Port for LiveReload to listen on.</source>
          <target state="translated">LiveReloadが試聴するためのポートです。</target>
        </trans-unit>
        <trans-unit id="a85f761779816bf8dd03436d22df275b06b2dd24" translate="yes" xml:space="preserve">
          <source>Post excerpts</source>
          <target state="translated">抜粋を投稿する</target>
        </trans-unit>
        <trans-unit id="a0ca0c3198947ded7419101f3e83d48a9cb41f2a" translate="yes" xml:space="preserve">
          <source>Posts</source>
          <target state="translated">Posts</target>
        </trans-unit>
        <trans-unit id="5957559cf2bc0a4b768a12ae4fb1f9e36e15312f" translate="yes" xml:space="preserve">
          <source>Posts available for that page.</source>
          <target state="translated">そのページで利用可能な投稿</target>
        </trans-unit>
        <trans-unit id="19fb462921217a31066f1e100f09af5906e907e0" translate="yes" xml:space="preserve">
          <source>Posts available for the current page</source>
          <target state="translated">現在のページで利用可能な投稿</target>
        </trans-unit>
        <trans-unit id="c1427edf4141184bf946c2e6be97a75ead52f520" translate="yes" xml:space="preserve">
          <source>Pre-configuring Theme-gems4.0</source>
          <target state="translated">テーマgems4.0の事前設定</target>
        </trans-unit>
        <trans-unit id="f903aefffca964e59bae5902fdb1e7726250998a" translate="yes" xml:space="preserve">
          <source>Pre-releases</source>
          <target state="translated">Pre-releases</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="1c4906dcef85048abb9eb583ebf5283b131efdb6" translate="yes" xml:space="preserve">
          <source>Predefined Global Variables</source>
          <target state="translated">定義済みのグローバル変数</target>
        </trans-unit>
        <trans-unit id="3d2381d3ce17502f9b5cd6e96843c14d10cb7fcb" translate="yes" xml:space="preserve">
          <source>Predefined Variables for Posts</source>
          <target state="translated">投稿用の定義済み変数</target>
        </trans-unit>
        <trans-unit id="26ba43519e040aa1b9b90878aca34bb3b54255d2" translate="yes" xml:space="preserve">
          <source>Prepend the &lt;code&gt;baseurl&lt;/code&gt; value to the input. Useful if your site is hosted at a subpath rather than the root of the domain.</source>
          <target state="translated">前に付加 &lt;code&gt;baseurl&lt;/code&gt; 入力に値。サイトがドメインのルートではなくサブパスでホストされている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="9dc057d4d4274fe0084085e47f8ab7b0849795a9" translate="yes" xml:space="preserve">
          <source>Prepend the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; value to the input.</source>
          <target state="translated">先頭に追加 &lt;code&gt;url&lt;/code&gt; と &lt;code&gt;baseurl&lt;/code&gt; 入力に値を。</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="1d538a43faed87f85cebbc6100a1b9ccf9957db3" translate="yes" xml:space="preserve">
          <source>Previewing your theme</source>
          <target state="translated">テーマのプレビュー</target>
        </trans-unit>
        <trans-unit id="2154f26d808dc1c91b9a1a53f37bd4a9568f4cb5" translate="yes" xml:space="preserve">
          <source>Print verbose output.</source>
          <target state="translated">冗長な出力を印刷します。</target>
        </trans-unit>
        <trans-unit id="7b0546431f16f831257149f91717df7dca1edc54" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Access the site object using Liquid</source>
          <target state="translated">ProTip&amp;trade;：Liquidを使用してサイトオブジェクトにアクセスする</target>
        </trans-unit>
        <trans-unit id="3265c92a3b4fb0a61b66fdd29aad666715eaf588" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Don't repeat yourself</source>
          <target state="translated">ProTip&amp;trade;：繰り返してはいけません</target>
        </trans-unit>
        <trans-unit id="de67579ec50727aa178d3fe02d3566f4ac49a47e" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Enable Syntax Highlighting</source>
          <target state="translated">ProTip&amp;trade;：構文の強調表示を有効にする</target>
        </trans-unit>
        <trans-unit id="9446cafc3be6fdaecb79928bdb5b239f317a9eee" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Front Matter Variables Are Optional</source>
          <target state="translated">ProTip&amp;trade;：フロントマター変数はオプションです</target>
        </trans-unit>
        <trans-unit id="cb3a1d73b062d32f0f1b5eae3047cabc40ebf0c0" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Link to other posts</source>
          <target state="translated">ProTip&amp;trade;：他の投稿へのリンク</target>
        </trans-unit>
        <trans-unit id="da7d4be0b76a4aa0b81c7842c6357ff95bac3ac4" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Render Posts Marked As Unpublished</source>
          <target state="translated">ProTip&amp;trade;：非公開としてマークされた投稿のレンダリング</target>
        </trans-unit>
        <trans-unit id="15cee3e14e9d0d4d1e113328a457f8ab8391e83a" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Show line numbers</source>
          <target state="translated">ProTip&amp;trade;：行番号を表示</target>
        </trans-unit>
        <trans-unit id="fc6f2dc1893a7a027e119eba27c9d2c116153006" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use Custom Front Matter</source>
          <target state="translated">ProTip&amp;trade;：カスタムフロントマターの使用</target>
        </trans-unit>
        <trans-unit id="10cef24c138180517ee4ad5cb91f235256dd02d5" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use GitHub Pages for zero-hassle Jekyll hosting</source>
          <target state="translated">ProTip&amp;trade;：手間のかからないJekyllホスティングにGitHubページを使用</target>
        </trans-unit>
        <trans-unit id="afaaef5ab1edf9c741a9f2886bb79aed97e05d22" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use layouts on your homepage</source>
          <target state="translated">ProTip&amp;trade;：ホームページのレイアウトを使用する</target>
        </trans-unit>
        <trans-unit id="d827c1b33f443ecc681c04af8ce64c5d2004abc0" translate="yes" xml:space="preserve">
          <source>ProTips&amp;trade; help you get more from Jekyll</source>
          <target state="translated">ProTips&amp;trade;はJekyllからより多くを得るのに役立ちます</target>
        </trans-unit>
        <trans-unit id="c032a343ae0db68178586838c17d01f7b8c422f7" translate="yes" xml:space="preserve">
          <source>Problems installing Jekyll?</source>
          <target state="translated">ジキルのインストールに問題がありますか?</target>
        </trans-unit>
        <trans-unit id="cc329a8ee3d1b68c463fded001694148653fd1e8" translate="yes" xml:space="preserve">
          <source>Problems running Jekyll</source>
          <target state="translated">Jekyllの実行中の問題</target>
        </trans-unit>
        <trans-unit id="d74e7b85b7e0f35a8f31e48f3f367816f7b91635" translate="yes" xml:space="preserve">
          <source>Process and render draft posts.</source>
          <target state="translated">下書きの投稿を処理し、レンダリングします。</target>
        </trans-unit>
        <trans-unit id="8d79aa660a969e338fe721754211cc16d44e41b2" translate="yes" xml:space="preserve">
          <source>Produce an index for related posts. Requires the &lt;a href=&quot;http://www.classifier-reborn.com/&quot;&gt;classifier-reborn&lt;/a&gt; plugin.</source>
          <target state="translated">関連する投稿のインデックスを作成します。&lt;a href=&quot;http://www.classifier-reborn.com/&quot;&gt;classifier-reborn&lt;/a&gt;プラグインが必要です。</target>
        </trans-unit>
        <trans-unit id="6e76f8303253a28fdaf837549d37efade2e6a28f" translate="yes" xml:space="preserve">
          <source>Produce an index for related posts. Requires the &lt;a href=&quot;https://jekyll.github.io/classifier-reborn/&quot;&gt;classifier-reborn&lt;/a&gt; plugin.</source>
          <target state="translated">関連する投稿のインデックスを作成します。&lt;a href=&quot;https://jekyll.github.io/classifier-reborn/&quot;&gt;分類子-生まれ変わった&lt;/a&gt;プラグインが必要です。</target>
        </trans-unit>
        <trans-unit id="2fe389b04fca211aac6d4aedea7a19bb13c6c893" translate="yes" xml:space="preserve">
          <source>Production Problems</source>
          <target state="translated">生産上の問題</target>
        </trans-unit>
        <trans-unit id="f7a01690b389c7251b3fc63190bd4c14a215d52e" translate="yes" xml:space="preserve">
          <source>Project Page URL Structure</source>
          <target state="translated">プロジェクトページのURL構造</target>
        </trans-unit>
        <trans-unit id="dc5067ca2ef47522f33e05bdaf9f555d40d0b771" translate="yes" xml:space="preserve">
          <source>Project Pages</source>
          <target state="translated">プロジェクトページ</target>
        </trans-unit>
        <trans-unit id="fcd617dd71499b60ca9f17be875d6e0be2c51988" translate="yes" xml:space="preserve">
          <source>Provided that the file has a &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; section, it will be transformed by Jekyll. The same will happen for any &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, or &lt;code&gt;.textile&lt;/code&gt; file in your site&amp;rsquo;s root directory or directories not listed above.</source>
          <target state="translated">ファイルに&lt;a href=&quot;../front-matter/index&quot;&gt;フロントマター&lt;/a&gt;セクションがある場合、Jekyllによって変換されます。同じことが、サイトのルートディレクトリまたは上記にリストされていないディレクトリ内の &lt;code&gt;.html&lt;/code&gt; 、 &lt;code&gt;.markdown&lt;/code&gt; 、 &lt;code&gt;.md&lt;/code&gt; 、または &lt;code&gt;.textile&lt;/code&gt; ファイルでも発生します。</target>
        </trans-unit>
        <trans-unit id="3c154d4bdff400f5e6b72eaeb22deac7b3dc0862" translate="yes" xml:space="preserve">
          <source>Provided that the file has a &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; section, it will be transformed by Jekyll. The same will happen for any &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, or &lt;code&gt;.textile&lt;/code&gt; file in your site&amp;rsquo;s root directory or directories not listed above.</source>
          <target state="translated">ファイルに&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;セクションがある場合、Jekyllによって変換されます。同じことが、サイトのルートディレクトリまたは上記にリストされていないディレクトリにある &lt;code&gt;.html&lt;/code&gt; 、 &lt;code&gt;.markdown&lt;/code&gt; 、 &lt;code&gt;.md&lt;/code&gt; 、または &lt;code&gt;.textile&lt;/code&gt; ファイルでも発生します。</target>
        </trans-unit>
        <trans-unit id="3a18cc9761b1e8102294f9e8dc7e4aa4ba031264" translate="yes" xml:space="preserve">
          <source>Providing permissions</source>
          <target state="translated">パーミッションの提供</target>
        </trans-unit>
        <trans-unit id="72be0277c49f7726d31c1d905434c0eea552f97f" translate="yes" xml:space="preserve">
          <source>Publish posts or collection documents with a future date.</source>
          <target state="translated">将来の日付が記載された投稿やコレクション文書を公開する。</target>
        </trans-unit>
        <trans-unit id="93655b49b00a36f5094483f0c66df8a777df09bf" translate="yes" xml:space="preserve">
          <source>Publishing to GitHub Pages? &lt;a href=&quot;../github-pages/index&quot;&gt;Check out our documentation page for just that purpose&lt;/a&gt;.</source>
          <target state="translated">GitHubページに公開しますか？&lt;a href=&quot;../github-pages/index&quot;&gt;まさにその目的のために私たちのドキュメントページをチェックしてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c80ee6e060aa94453a1957194269b1eac9d50756" translate="yes" xml:space="preserve">
          <source>Publishing your theme</source>
          <target state="translated">テーマの公開</target>
        </trans-unit>
        <trans-unit id="056fba88002903e5d56a79d693886d8358679885" translate="yes" xml:space="preserve">
          <source>Push, pop, shift, and unshift elements from an Array.</source>
          <target state="translated">配列の要素をプッシュ、ポップ、シフト、アンシフトします。</target>
        </trans-unit>
        <trans-unit id="ceaff83322cbcd1e49c2b1b4070eb8936ff84043" translate="yes" xml:space="preserve">
          <source>Push, pop, shift, and unshift elements from an Array. These are &lt;strong&gt;NON-DESTRUCTIVE&lt;/strong&gt;, i.e. they do not mutate the array, but rather make a copy and mutate that.</source>
          <target state="translated">配列から要素をプッシュ、ポップ、シフト、およびシフト解除します。これらは&lt;strong&gt;非破壊的です&lt;/strong&gt;。つまり、アレイを変更するのではなく、コピーを作成して変更します。</target>
        </trans-unit>
        <trans-unit id="1ec7041a18430566cd7bb1e7d19b5678584ab214" translate="yes" xml:space="preserve">
          <source>Questions?</source>
          <target state="translated">Questions?</target>
        </trans-unit>
        <trans-unit id="417820f1bade4496f4525989f3a39679097e4256" translate="yes" xml:space="preserve">
          <source>Quick-start guide</source>
          <target state="translated">クイックスタートガイド</target>
        </trans-unit>
        <trans-unit id="8f41d8cd3e40c56b21fcde708ec849b3d204df60" translate="yes" xml:space="preserve">
          <source>RHEL8/CentOS8</source>
          <target state="translated">RHEL8/CentOS8</target>
        </trans-unit>
        <trans-unit id="e832f5c7e96b274627824d8bff3aeeeaccfef01b" translate="yes" xml:space="preserve">
          <source>RVM is a popular Ruby Version Manager (like rbenv, chruby, etc). This directive tells Travis the Ruby version to use when running your test script.</source>
          <target state="translated">RVM は一般的な Ruby バージョンマネージャ (rbenv,chruby など)です。このディレクティブは、テストスクリプトを実行する際に使用する Ruby のバージョンを Travis に伝えます。</target>
        </trans-unit>
        <trans-unit id="f61b7ffac55507f1e8f7322fcceed1fbcd1afb9e" translate="yes" xml:space="preserve">
          <source>RVM is a popular Ruby Version Manager (like rbenv, chruby, etc). This directive tells Travis the Ruby version to use when running your test script. Use a &lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Specifying-Ruby-versions-and-implementations&quot;&gt;version which is pre-installed on the Travis build docker&lt;/a&gt; image to speed up the build.</source>
          <target state="translated">RVMは人気のあるRubyバージョンマネージャーです（rbenv、chrubyなど）。このディレクティブは、テストスクリプトの実行時に使用するRubyバージョンをTravisに指示します。&lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Specifying-Ruby-versions-and-implementations&quot;&gt;Travisビルドドッカー&lt;/a&gt;イメージにプリインストールされているバージョンを使用して、ビルドを高速化します。</target>
        </trans-unit>
        <trans-unit id="3d020480fdb4c067a8ed1f783c83aa65284c204a" translate="yes" xml:space="preserve">
          <source>Rack-Jekyll</source>
          <target state="translated">Rack-Jekyll</target>
        </trans-unit>
        <trans-unit id="ccb3b7cf53d9645b5536605277c7731117c1a9e3" translate="yes" xml:space="preserve">
          <source>Rake</source>
          <target state="translated">Rake</target>
        </trans-unit>
        <trans-unit id="2d9be644c6f66a11135d7c8cbbb137cee962d2b7" translate="yes" xml:space="preserve">
          <source>Rather than passing individual flags via the command line, you can now pass an entire custom Jekyll config file. This helps to distinguish between environments, or lets you programmatically override user-specified defaults. Simply add the &lt;code&gt;--config&lt;/code&gt; flag to the &lt;code&gt;jekyll&lt;/code&gt; command, followed by the path to one or more config files (comma-delimited, no spaces).</source>
          <target state="translated">コマンドラインから個々のフラグを渡す代わりに、カスタムJekyll構成ファイル全体を渡すことができるようになりました。これにより、環境を区別したり、プログラムでユーザー指定のデフォルトを上書きしたりできます。単に &lt;code&gt;--config&lt;/code&gt; フラグを &lt;code&gt;jekyll&lt;/code&gt; コマンドに追加し、その後に1つ以上の構成ファイルへのパス（コンマ区切り、スペースなし）を続けます。</target>
        </trans-unit>
        <trans-unit id="169488557f80f487b9a8d96107d18ddd44b3dd38" translate="yes" xml:space="preserve">
          <source>Rather than typing &lt;code&gt;permalink: /:categories/:year/:month/:day/:title/&lt;/code&gt;, you can just type &lt;code&gt;permalink: pretty&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;permalink: /:categories/:year/:month/:day/:title/&lt;/code&gt; と入力する代わりに、単に &lt;code&gt;permalink: pretty&lt;/code&gt; 入力することができます。</target>
        </trans-unit>
        <trans-unit id="439540dc1f179dff59fb01db013c30acaaa99734" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;http://andycroll.com/ruby/serving-a-jekyll-blog-using-heroku/&quot;&gt;this post&lt;/a&gt; on how to deploy to Heroku using Rack-Jekyll.</source>
          <target state="translated">読む&lt;a href=&quot;http://andycroll.com/ruby/serving-a-jekyll-blog-using-heroku/&quot;&gt;このポスト&lt;/a&gt;ラックジキルを使用してHerokuのにデプロイする方法についてを。</target>
        </trans-unit>
        <trans-unit id="1503cda8e6c8f59a76329fc13ec7d6f3fb2a5a80" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll Documentation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyllのドキュメント&lt;/a&gt;を読む</target>
        </trans-unit>
        <trans-unit id="c9d270ccf38c4d6afc19eb9c3b5fd3e453667df8" translate="yes" xml:space="preserve">
          <source>Read the full &lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;code of conduct&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;行動規範&lt;/a&gt;の全文を読む</target>
        </trans-unit>
        <trans-unit id="ae9872ae617c714e6747d2ca6c2e15fde2f82cfd" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://medium.com/@jameshamann/deploy-your-jekyll-site-using-aws-amplify-with-only-a-few-clicks-8f3dd8f26112&quot;&gt;step-by-step guide&lt;/a&gt; to deploy and host your Jekyll site on AWS Amplify.</source>
          <target state="translated">この&lt;a href=&quot;https://medium.com/@jameshamann/deploy-your-jekyll-site-using-aws-amplify-with-only-a-few-clicks-8f3dd8f26112&quot;&gt;ステップバイステップガイド&lt;/a&gt;を読んで、AWSAmplifyにJekyllサイトをデプロイしてホストします。</target>
        </trans-unit>
        <trans-unit id="c3824afe52578fcc0be477b0bcd0fe9ee558faca" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.21yunbox.com/docs/#/deploy-jekyll&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to deploy your Jekyll site on 21YunBox.</source>
          <target state="translated">この&lt;a href=&quot;https://www.21yunbox.com/docs/#/deploy-jekyll&quot;&gt;Jekyllのステップバイステップガイド&lt;/a&gt;を読んで、Jekyllサイトを21YunBoxにデプロイします。</target>
        </trans-unit>
        <trans-unit id="da32500dfd70b8f86508eb38e0d732d6716b8578" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.21yunbox.com/docs/v2/static.html#jekyll&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to deploy your Jekyll site on 21YunBox.</source>
          <target state="translated">この&lt;a href=&quot;https://www.21yunbox.com/docs/v2/static.html#jekyll&quot;&gt;Jekyllのステップバイステップガイド&lt;/a&gt;を読んで、Jekyllサイトを21YunBoxにデプロイします。</target>
        </trans-unit>
        <trans-unit id="6f2d22f1682d1726666dee549b405108d4fc37c5" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to setup your Jekyll site on Netlify.</source>
          <target state="translated">この&lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;Jekyllのステップバイステップガイド&lt;/a&gt;を読んで、NetlifyでJekyllサイトをセットアップしてください。</target>
        </trans-unit>
        <trans-unit id="fb94c75b1c474d655ecd0a671085e85b8917cf80" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.netlify.com/blog/2020/04/02/a-step-by-step-guide-jekyll-4.0-on-netlify/&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to setup your Jekyll site on Netlify.</source>
          <target state="translated">この&lt;a href=&quot;https://www.netlify.com/blog/2020/04/02/a-step-by-step-guide-jekyll-4.0-on-netlify/&quot;&gt;Jekyllのステップバイステップガイド&lt;/a&gt;を読んで、NetlifyでJekyllサイトをセットアップしてください。</target>
        </trans-unit>
        <trans-unit id="5f631ff0302c32d82d8b231bc317b0beda2e0d40" translate="yes" xml:space="preserve">
          <source>Redcarpet</source>
          <target state="translated">Redcarpet</target>
        </trans-unit>
        <trans-unit id="8ea1404223d116c60a3e42d509dd79effe38a523" translate="yes" xml:space="preserve">
          <source>Redcarpet can be configured by providing an &lt;code&gt;extensions&lt;/code&gt; sub-setting, whose value should be an array of strings. Each string should be the name of one of the &lt;code&gt;Redcarpet::Markdown&lt;/code&gt; class&amp;rsquo;s extensions; if present in the array, it will set the corresponding extension to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Redcarpetは、値が文字列の配列である必要がある &lt;code&gt;extensions&lt;/code&gt; サブセットを提供することによって構成できます。各文字列は、 &lt;code&gt;Redcarpet::Markdown&lt;/code&gt; クラスの拡張の1つの名前である必要があります。配列に存在する場合、対応する拡張子を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="44a0d505e17f14f7f69264e5a53841a1965456a3" translate="yes" xml:space="preserve">
          <source>Refer to your selected theme&amp;rsquo;s documentation and source repository for more information on what files you can override.</source>
          <target state="translated">オーバーライドできるファイルの詳細については、選択したテーマのドキュメントとソースリポジトリを参照してください。</target>
        </trans-unit>
        <trans-unit id="64ad1dbd8a0a36c745e78866510d4581eab08f26" translate="yes" xml:space="preserve">
          <source>Refer to your selected theme&amp;rsquo;s documentation and source repository for more information on which files you can override.</source>
          <target state="translated">オーバーライドできるファイルの詳細については、選択したテーマのドキュメントとソースリポジトリを参照してください。</target>
        </trans-unit>
        <trans-unit id="5690d22eef073c74520c67bbd0417f07498d99fd" translate="yes" xml:space="preserve">
          <source>Regardless of whether front matter exists or not, Jekyll will write to the destination directory (e.g. &lt;code&gt;_site&lt;/code&gt;) only if &lt;code&gt;output: true&lt;/code&gt; has been set in the collection&amp;rsquo;s metadata.</source>
          <target state="translated">フロントマターが存在するかどうかに関係なく、Jekyllは、 &lt;code&gt;output: true&lt;/code&gt; がコレクションのメタデータに設定されている場合にのみ、宛先ディレクトリ（ &lt;code&gt;_site&lt;/code&gt; など）に書き込みます。</target>
        </trans-unit>
        <trans-unit id="9e3f0522a636e26135d7d509614f66498b8abc2a" translate="yes" xml:space="preserve">
          <source>Register your site with &lt;a href=&quot;https://txtpen.com&quot;&gt;txtpen&lt;/a&gt;. Then append</source>
          <target state="translated">&lt;a href=&quot;https://txtpen.com&quot;&gt;txtpenを使用し&lt;/a&gt;てサイトを登録します。次に追加</target>
        </trans-unit>
        <trans-unit id="98d06420fb393fe8733fe61191716a188d2ba8e5" translate="yes" xml:space="preserve">
          <source>Relative Permalink support removed</source>
          <target state="translated">相対的なパーマリンクのサポートが削除されました</target>
        </trans-unit>
        <trans-unit id="5d951f35618ebcfce051fbdea98d0c5c4b54d6b9" translate="yes" xml:space="preserve">
          <source>Relaunch your terminal and check your Ruby setup:</source>
          <target state="translated">ターミナルを再起動して、Rubyの設定を確認します。</target>
        </trans-unit>
        <trans-unit id="ad17e9991796ce5863f1422f5c6017d940c7e221" translate="yes" xml:space="preserve">
          <source>Reload a page automatically on the browser when its content is edited.</source>
          <target state="translated">ページの内容が編集されると、ブラウザ上で自動的にリロードされます。</target>
        </trans-unit>
        <trans-unit id="d914f2ea35b0f2553e85af7c921666e44d9c331b" translate="yes" xml:space="preserve">
          <source>Remember your Front Matter</source>
          <target state="translated">フロントマターを忘れずに</target>
        </trans-unit>
        <trans-unit id="a3f0dac9020b7b6694ab2e8c67f500ae69fdc14c" translate="yes" xml:space="preserve">
          <source>Remember your YAML Front Matter</source>
          <target state="translated">YAMLフロントマターを覚えておく</target>
        </trans-unit>
        <trans-unit id="b2e402b4da01a2a43c98d68b263f9ea2e8503ccf" translate="yes" xml:space="preserve">
          <source>Render</source>
          <target state="translated">Render</target>
        </trans-unit>
        <trans-unit id="778537c15e1c8b15c7eda63f03cd9cc34813448f" translate="yes" xml:space="preserve">
          <source>Render Posts Marked As Unpublished</source>
          <target state="translated">未発表のマークが付いたレンダー投稿</target>
        </trans-unit>
        <trans-unit id="15ee34a232891ee351147169143c5723051c59d3" translate="yes" xml:space="preserve">
          <source>Render posts that were marked as unpublished.</source>
          <target state="translated">未発表とマークされた投稿をレンダリングします。</target>
        </trans-unit>
        <trans-unit id="7e42b24dd20317b1267d14a20e3861bf6fba8de4" translate="yes" xml:space="preserve">
          <source>Render the paginated Posts</source>
          <target state="translated">ページ分割された投稿をレンダリングする</target>
        </trans-unit>
        <trans-unit id="708071d198f236e19dabcecc6380eda33cd08a88" translate="yes" xml:space="preserve">
          <source>Rendering Process</source>
          <target state="translated">レンダリングプロセス</target>
        </trans-unit>
        <trans-unit id="2c506d6e4657df828ea482c052d68020f0442ebe" translate="yes" xml:space="preserve">
          <source>Reopen a command prompt and install Jekyll: &lt;code&gt;gem install jekyll&lt;/code&gt;</source>
          <target state="translated">コマンドプロンプトを再度 &lt;code&gt;gem install jekyll&lt;/code&gt; Jekyllをインストールします。geminstall jekyll</target>
        </trans-unit>
        <trans-unit id="57758714a115c28dae7e9b64388dc90b41a10abf" translate="yes" xml:space="preserve">
          <source>Replace any occurrence of whitespace with a single space.</source>
          <target state="translated">空白が発生した場合は、すべて単一のスペースに置き換えます。</target>
        </trans-unit>
        <trans-unit id="fbb446a61a4468f5ad96947bdc0040fe036d44ee" translate="yes" xml:space="preserve">
          <source>Report a bug</source>
          <target state="translated">バグ報告</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="234d49f9f38f1e1fd41a86a7ef7b54117ba20258" translate="yes" xml:space="preserve">
          <source>Restart the jekyll server once more for the configuration changes to take effect.</source>
          <target state="translated">設定変更を有効にするために、jekyllサーバをもう一度再起動してください。</target>
        </trans-unit>
        <trans-unit id="c5240e5a9f7a771a0223e39ab2cb2c828e2791aa" translate="yes" xml:space="preserve">
          <source>Restart your Jekyll server and check these tags are added to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Jekyllサーバーを再起動し、これらのタグが &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; に追加されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="9d109ba303d84558994353980506a93c0a6fa42b" translate="yes" xml:space="preserve">
          <source>Restart your terminal to apply your changes. Next, you can install the Ruby version you want. Let&amp;rsquo;s install the latest stable version:</source>
          <target state="translated">ターミナルを再起動して、変更を適用します。次に、必要なRubyバージョンをインストールできます。最新の安定バージョンをインストールしましょう：</target>
        </trans-unit>
        <trans-unit id="923c13dfdb01db0d8d459f4097e5f218f81132eb" translate="yes" xml:space="preserve">
          <source>Resulting Permalink URL</source>
          <target state="translated">結果のパーマリンクURL</target>
        </trans-unit>
        <trans-unit id="9b8b4aa7396147c97e09b74b6be8158c0f9b4bc0" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;the first object&lt;/strong&gt; in an array for which the given expression evaluates to true or return &lt;code&gt;nil&lt;/code&gt; if no item in the array satisfies the evaluated expression. 4.1.0</source>
          <target state="translated">戻り&lt;strong&gt;最初の物体&lt;/strong&gt;の真又は戻す与えられた式の評価するアレイ内の &lt;code&gt;nil&lt;/code&gt; 配列満足でないアイテム評価式場合。4.1.0</target>
        </trans-unit>
        <trans-unit id="dff42825f661946e67099b96f24920f31680578e" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;the first object&lt;/strong&gt; in an array for which the queried attribute has the given value or return &lt;code&gt;nil&lt;/code&gt; if no item in the array satisfies the given criteria. 4.1.0</source>
          <target state="translated">戻り&lt;strong&gt;最初のオブジェクト&lt;/strong&gt;照会属性が指定された値または戻り持っているアレイ内の &lt;code&gt;nil&lt;/code&gt; をアレイ満たす所定の基準にない項目の場合を。4.1.0</target>
        </trans-unit>
        <trans-unit id="527956f387317b7b80266ebb8593d4e1db18df21" translate="yes" xml:space="preserve">
          <source>Rsync is similar to scp except it can be faster as it will only send changed parts of files as opposed to the entire file. You can learn more about using rsync in the &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps&quot;&gt;Digital Ocean tutorial&lt;/a&gt;.</source>
          <target state="translated">Rsyncはscpに似ていますが、ファイル全体ではなく、ファイルの変更された部分のみを送信するため、より高速になる可能性があります。rsyncの使用について詳しくは、DigitalOcean&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps&quot;&gt;チュートリアル&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="5f08fff91831ea6f0172019f874d4040c849e866" translate="yes" xml:space="preserve">
          <source>Ruby 101</source>
          <target state="translated">ルビー101</target>
        </trans-unit>
        <trans-unit id="5898ae2f1d23782ebd27452a9411246e96dfd540" translate="yes" xml:space="preserve">
          <source>Ruby version &lt;strong&gt;2.4.0&lt;/strong&gt; or higher</source>
          <target state="translated">Rubyバージョン&lt;strong&gt;2.4.0&lt;/strong&gt;以降</target>
        </trans-unit>
        <trans-unit id="06549232577315309549578ede081abf3b92fb09" translate="yes" xml:space="preserve">
          <source>Ruby version &lt;strong&gt;2.5.0&lt;/strong&gt; or higher</source>
          <target state="translated">Rubyバージョン&lt;strong&gt;2.5.0&lt;/strong&gt;以降</target>
        </trans-unit>
        <trans-unit id="37714db0a3a1e5a5a39df62af011f7a7c779fbe0" translate="yes" xml:space="preserve">
          <source>RubyGems</source>
          <target state="translated">RubyGems</target>
        </trans-unit>
        <trans-unit id="f57ce1ac70130fc065fda9a1c25fbb12c704f24f" translate="yes" xml:space="preserve">
          <source>RubyInstaller is a self-contained Windows-based installer that includes the Ruby language, an execution environment, important documentation, and more.</source>
          <target state="translated">RubyInstaller は、Ruby 言語、実行環境、重要なドキュメントなどを含む、自己完結型の Windows ベースのインストーラです。</target>
        </trans-unit>
        <trans-unit id="42dd9b3596a741398732c30d4508cf29afde284f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="515abd7adc56dcc3c2a557f7699a671fde0d385c" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;bundle info --path&lt;/code&gt; followed by the name of the theme&amp;rsquo;s gem, e.g., &lt;code&gt;bundle info --path minima&lt;/code&gt; for Jekyll&amp;rsquo;s default theme.</source>
          <target state="translated">&lt;code&gt;bundle info --path&lt;/code&gt; 後にテーマのgemの名前を実行します。たとえば、Jekyllのデフォルトテーマの &lt;code&gt;bundle info --path minima&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="cdf9c1263cd6f0e3fa45f26660812dfd4d4cf1a0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;bundle show&lt;/code&gt; followed by the name of the theme&amp;rsquo;s gem, e.g., &lt;code&gt;bundle show minima&lt;/code&gt; for Jekyll&amp;rsquo;s default theme.</source>
          <target state="translated">&lt;code&gt;bundle show&lt;/code&gt; を実行し、その後にテーマの宝石の名前を続けます。たとえば、Jekyllのデフォルトテーマの &lt;code&gt;bundle show minima&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="f37277863bf7ecbf5e4771d071b77d1c408284ba" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;jekyll serve&lt;/code&gt; and go to &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; in your browser. You should see &amp;ldquo;Hello World!&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;jekyll serve&lt;/code&gt; 実行し、ブラウザで&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;にアクセスします。「HelloWorld！」が表示されます。</target>
        </trans-unit>
        <trans-unit id="a37a37795eb163ad64218878025b423e3ddeb562" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;ridk install&lt;/code&gt; step on the last stage of the installation wizard. This is needed for installing gems with native extensions. You can find additional information regarding this in the &lt;a href=&quot;https://github.com/oneclick/rubyinstaller2#using-the-installer-on-a-target-system&quot;&gt;RubyInstaller Documentation&lt;/a&gt;</source>
          <target state="translated">インストールウィザードの最終段階で &lt;code&gt;ridk install&lt;/code&gt; 手順を実行します。これは、ネイティブ拡張機能を備えたgemをインストールするために必要です。これに関する追加情報は、&lt;a href=&quot;https://github.com/oneclick/rubyinstaller2#using-the-installer-on-a-target-system&quot;&gt;RubyInstallerのドキュメントにあります。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="247f6e4943c76c92b5c6c8d51b7623da37673dc0" translate="yes" xml:space="preserve">
          <source>Run:</source>
          <target state="translated">Run:</target>
        </trans-unit>
        <trans-unit id="317fe2ae2325d58fcdafd22991bff0a74c5d694e" translate="yes" xml:space="preserve">
          <source>Running Jekyll as Non-Superuser (no sudo!)</source>
          <target state="translated">Jekyll を非スーパーユーザとして実行する (sudo を使用しない)</target>
        </trans-unit>
        <trans-unit id="beff04c64d0f6b81d8fe8635f88e6d58d26d3b7e" translate="yes" xml:space="preserve">
          <source>Running Jekyll on Windows</source>
          <target state="translated">WindowsでJekyllを実行する</target>
        </trans-unit>
        <trans-unit id="1917a1b7c57442b0abec6c6d3635a1784c44075e" translate="yes" xml:space="preserve">
          <source>SSL Private Key, stored or symlinked in the site source.</source>
          <target state="translated">SSL 秘密鍵は、サイトのソースに保存されているか、シンボリックリンクされています。</target>
        </trans-unit>
        <trans-unit id="fd6893c5df8321462d97d7ab4d7ffb44371f653f" translate="yes" xml:space="preserve">
          <source>SSL Private Key.</source>
          <target state="translated">SSLの秘密鍵です。</target>
        </trans-unit>
        <trans-unit id="49428deaf3b1c7537a4f13085019a70e4f7a2774" translate="yes" xml:space="preserve">
          <source>SSL Public certificate, stored or symlinked in the site source.</source>
          <target state="translated">SSL 公開証明書で、サイトのソースに保存されているか、シンボリックリンクされています。</target>
        </trans-unit>
        <trans-unit id="69593d32c8bd589fe3bdfdfcc8f82e007508a15d" translate="yes" xml:space="preserve">
          <source>SSL Public certificate.</source>
          <target state="translated">SSL公開証明書。</target>
        </trans-unit>
        <trans-unit id="b6eeeb3abd2a7bc179a6b6d5c56488b5f8c903a7" translate="yes" xml:space="preserve">
          <source>Sass</source>
          <target state="translated">Sass</target>
        </trans-unit>
        <trans-unit id="403818fcda992599fe7e358f0111951e6b7990f3" translate="yes" xml:space="preserve">
          <source>Sass/SCSS</source>
          <target state="translated">Sass/SCSS</target>
        </trans-unit>
        <trans-unit id="03e3e4e01b772344104f35b3b89ee3d97d138085" translate="yes" xml:space="preserve">
          <source>Save the commands you want to run and succeed in a file: &lt;code&gt;./script/cibuild&lt;/code&gt;</source>
          <target state="translated">実行して成功させるコマンドをファイルに保存します： &lt;code&gt;./script/cibuild&lt;/code&gt; / cibuild</target>
        </trans-unit>
        <trans-unit id="334d78d442abb00a5b6eb0f19ae76079d1b2d11e" translate="yes" xml:space="preserve">
          <source>Second of the minute from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">投稿の &lt;code&gt;date&lt;/code&gt; 前書きから1分の2番目。（00..59）</target>
        </trans-unit>
        <trans-unit id="b3bf564e18f6ba1be5df476d386f16a478d2fdaf" translate="yes" xml:space="preserve">
          <source>Second of the minute from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">投稿の &lt;code&gt;date&lt;/code&gt; 前付からの分の秒。（00..59）</target>
        </trans-unit>
        <trans-unit id="fc6eef192c265c5fbe372bcc71e29649ae2d0162" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#extensionless-permalinks&quot;&gt;Extensionless permalinks with no trailing slashes&lt;/a&gt; for details.</source>
          <target state="translated">詳細について&lt;a href=&quot;#extensionless-permalinks&quot;&gt;は、末尾にスラッシュがない拡張子のないパーマリンクを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="51d52269689be5e8da217cb94564ce864e00b526" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../troubleshooting/index&quot;&gt;Troubleshooting&lt;/a&gt; or &lt;a href=&quot;https://talk.jekyllrb.com&quot;&gt;ask for help on our forum&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../troubleshooting/index&quot;&gt;トラブルシューティングを&lt;/a&gt;参照するか&lt;a href=&quot;https://talk.jekyllrb.com&quot;&gt;、フォーラムでヘルプを求めてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f696e9e49f78c4279d1e807100203c937410e91f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://jekyllrb.com/tutorials/using-jekyll-with-bundler/&quot;&gt;Using Jekyll with Bundler&lt;/a&gt; for more information about Bundler in Jekyll and for instructions to get up and running quickly.</source>
          <target state="translated">&lt;a href=&quot;https://jekyllrb.com/tutorials/using-jekyll-with-bundler/&quot;&gt;JekyllでのBundler&lt;/a&gt;の詳細と、すばやく起動して実行する手順については、BundlerでのJekyllの使用を参照してください。</target>
        </trans-unit>
        <trans-unit id="e152d461c73cd4bb89297d29631b4e47f8c798e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;installation/index#requirements&quot;&gt;Requirements&lt;/a&gt; for guides and details.</source>
          <target state="translated">参照してください&lt;a href=&quot;installation/index#requirements&quot;&gt;要件&lt;/a&gt;ガイドと詳細については、を。</target>
        </trans-unit>
        <trans-unit id="d7eea797b5b5fde14868225b445a5e810676d882" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://jekyllrb.com/resources/&quot;&gt;resources&lt;/a&gt;.</source>
          <target state="translated">参照：&lt;a href=&quot;https://jekyllrb.com/resources/&quot;&gt;リソース&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0ed49f1b1bfb0227d18ee3709c5bada3c413cb2" translate="yes" xml:space="preserve">
          <source>See the Markdown section on the &lt;a href=&quot;../configuration/index#markdown-options&quot;&gt;configuration page&lt;/a&gt; for instructions on how to use and configure alternative Markdown processors, as well as how to create &lt;a href=&quot;../configuration/index#custom-markdown-processors&quot;&gt;custom processors&lt;/a&gt;.</source>
          <target state="translated">代替Markdownプロセッサを使用および構成する方法、および&lt;a href=&quot;../configuration/index#custom-markdown-processors&quot;&gt;カスタムプロセッサ&lt;/a&gt;を作成する方法については、&lt;a href=&quot;../configuration/index#markdown-options&quot;&gt;構成ページ&lt;/a&gt;のMarkdownセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="407b2742f09d00df370600915619012740c16c28" translate="yes" xml:space="preserve">
          <source>See the bottom of the page for a &lt;a href=&quot;#available-plugins&quot;&gt;list of available plugins&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#available-plugins&quot;&gt;使用可能なプラグインのリスト&lt;/a&gt;については、ページの下部をご覧ください</target>
        </trans-unit>
        <trans-unit id="53035dc8dfea2f8f41cca4298269e254fb5e0e1e" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the expression is true. 3.2.0</source>
          <target state="translated">式が真である配列内のすべてのオブジェクトを選択します。3.2.0</target>
        </trans-unit>
        <trans-unit id="5fb9e19dcae18c354f279dfca194fb7e744d9c04" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the expression is true. Jekyll v3.2.0 &amp;amp; later.</source>
          <target state="translated">式が真である配列内のすべてのオブジェクトを選択します。Jekyll v3.2.0以降。</target>
        </trans-unit>
        <trans-unit id="e891926616342130195a7bfdb38be815b06f2efc" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the key has the given value.</source>
          <target state="translated">キーが指定された値を持つ配列内のすべてのオブジェクトを選択します。</target>
        </trans-unit>
        <trans-unit id="3d815a597f6d668bf34e59ed4ebae5e997991203" translate="yes" xml:space="preserve">
          <source>Self-managed web server</source>
          <target state="translated">自社運営のWebサーバー</target>
        </trans-unit>
        <trans-unit id="a55557d1c98bb9f9498deb01f8e31c77291e6c39" translate="yes" xml:space="preserve">
          <source>Serve Command Options</source>
          <target state="translated">サーブコマンドオプション</target>
        </trans-unit>
        <trans-unit id="151827014ed21e518e47c1dd2a1e084435edc564" translate="yes" xml:space="preserve">
          <source>Serve the website from the given base URL</source>
          <target state="translated">指定されたベースURLからウェブサイトを配信する</target>
        </trans-unit>
        <trans-unit id="10c65177b9457f21492b30d74ecd3fa029ff4282" translate="yes" xml:space="preserve">
          <source>Serve the website from the given base URL.</source>
          <target state="translated">指定されたベースURLからウェブサイトを配信します。</target>
        </trans-unit>
        <trans-unit id="fe836fe66a8def4677b55312b9d11c2ab2519a3f" translate="yes" xml:space="preserve">
          <source>Set defaults for &lt;a href=&quot;../../front-matter/index&quot;&gt;front matter&lt;/a&gt; variables.</source>
          <target state="translated">&lt;a href=&quot;../../front-matter/index&quot;&gt;フロントマター&lt;/a&gt;変数のデフォルトを設定します。</target>
        </trans-unit>
        <trans-unit id="ddd9fcb8b5f6b9210f6b261a822acb9326466b09" translate="yes" xml:space="preserve">
          <source>Set defaults for &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; variables.</source>
          <target state="translated">&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;変数のデフォルトを設定します。</target>
        </trans-unit>
        <trans-unit id="5d6059aac8e4da20dbf9808420e1330fbe575e19" translate="yes" xml:space="preserve">
          <source>Set the encoding of files by name (only available for Ruby 1.9 or later). The default value is &lt;code&gt;utf-8&lt;/code&gt; starting in 2.0.0, and &lt;code&gt;nil&lt;/code&gt; before 2.0.0, which will yield the Ruby default of &lt;code&gt;ASCII-8BIT&lt;/code&gt;. Available encodings can be shown by the command &lt;code&gt;ruby -e 'puts Encoding::list.join(&quot;\n&quot;)'&lt;/code&gt;.</source>
          <target state="translated">ファイルのエンコーディングを名前で設定します（Ruby 1.9以降でのみ使用可能）。デフォルト値は2.0.0から始まる &lt;code&gt;utf-8&lt;/code&gt; で、2.0.0 より前は &lt;code&gt;nil&lt;/code&gt; です。これにより、Rubyのデフォルトである &lt;code&gt;ASCII-8BIT&lt;/code&gt; が生成されます。使用可能なエンコーディングは、コマンド &lt;code&gt;ruby -e 'puts Encoding::list.join(&quot;\n&quot;)'&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ad2e00718f76e97a0b0faf2b6b523e7f331b76b2" translate="yes" xml:space="preserve">
          <source>Set the time zone for site generation. This sets the &lt;code&gt;TZ&lt;/code&gt; environment variable, which Ruby uses to handle time and date creation and manipulation. Any entry from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;IANA Time Zone Database&lt;/a&gt; is valid, e.g. &lt;code&gt;America/New_York&lt;/code&gt;. A list of all available values can be found &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt; here&lt;/a&gt;. When serving on a local machine, the default time zone is set by your operating system. But when served on a remote host/server, the default time zone depends on the server's setting or location.</source>
          <target state="translated">サイト生成のタイムゾーンを設定します。これにより、Rubyが日時の作成と操作を処理するために使用する &lt;code&gt;TZ&lt;/code&gt; 環境変数が設定されます。&lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;IANAタイムゾーンデータベース&lt;/a&gt;からのエントリはすべて有効です（例： &lt;code&gt;America/New_York&lt;/code&gt; )。利用可能なすべての値のリストは、&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;ここにあります&lt;/a&gt;。ローカルマシンでサービスを提供する場合、デフォルトのタイムゾーンはオペレーティングシステムによって設定されます。ただし、リモートホスト/サーバーで提供される場合、デフォルトのタイムゾーンはサーバーの設定または場所によって異なります。</target>
        </trans-unit>
        <trans-unit id="397402a9c35e59ca7d02dc0b5c6391349ef8fd3e" translate="yes" xml:space="preserve">
          <source>Set to false if you don&amp;rsquo;t want a specific post to show up when the site is generated.</source>
          <target state="translated">サイトの生成時に特定の投稿を表示したくない場合は、falseに設定します。</target>
        </trans-unit>
        <trans-unit id="aabe9cc67d26e20183256e1ecf388980a51be9a2" translate="yes" xml:space="preserve">
          <source>Set your production URL in &lt;code&gt;_config.yml&lt;/code&gt; e.g. &lt;code&gt;url: https://example.com&lt;/code&gt;.</source>
          <target state="translated">プロダクションURLを &lt;code&gt;_config.yml&lt;/code&gt; に設定します（例： &lt;code&gt;url: https://example.com&lt;/code&gt; //example.com）。</target>
        </trans-unit>
        <trans-unit id="fb449f71834cd30ec14d00c9d50ba85c232186d3" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="translated">Setting</target>
        </trans-unit>
        <trans-unit id="a6d2c27ce53f80ffa0bc57f5fba0fa8750a55150" translate="yes" xml:space="preserve">
          <source>Setting a permalink in front matter for every page on your site is no fun. Luckily, Jekyll lets you set the permalink structure globally in your &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">あなたのサイトのすべてのページの前にパーマリンクを設定するのは楽しいことではありません。幸い、Jekyllでは &lt;code&gt;_config.yml&lt;/code&gt; でパーマリンク構造をグローバルに設定できます。</target>
        </trans-unit>
        <trans-unit id="2c7a32ce81e15370a8e65448d08bcb2735e4aae2" translate="yes" xml:space="preserve">
          <source>Setting a permalink in the front matter of your blog page will cause pagination to break. Just omit the permalink.</source>
          <target state="translated">ブログページのフロントマターにパーマリンクを設定すると、ページネーションが崩れてしまいます。パーマリンクを省略するだけです。</target>
        </trans-unit>
        <trans-unit id="992e693339c0d4ef08f55b83204c30110f4168dc" translate="yes" xml:space="preserve">
          <source>Setting permalink styles in your configuration file applies the setting globally in your project. You configure permalinks in your &lt;code&gt;_config.yml&lt;/code&gt; file like this:</source>
          <target state="translated">構成ファイルでパーマリンクスタイルを設定すると、その設定がプロジェクトにグローバルに適用されます。次のように、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルでパーマリンクを設定します。</target>
        </trans-unit>
        <trans-unit id="18a051fab47eef17a471bd5c9de81afafe2c1156" translate="yes" xml:space="preserve">
          <source>Setting the permalink in your post, page, or collection&amp;rsquo;s front matter overrides any global settings. Here&amp;rsquo;s an example:</source>
          <target state="translated">投稿、ページ、またはコレクションの前付けにパーマリンクを設定すると、すべてのグローバル設定が上書きされます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="b428a34c4ccaf643d1aeff837a4dce1c96cf704b" translate="yes" xml:space="preserve">
          <source>Setting up Kickster is very easy, just install the gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</source>
          <target state="translated">Kicksterの設定は非常に簡単で、gemをインストールするだけで準備完了です。より多くのドキュメントはここで見つけることができます&lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;ここで&lt;/a&gt;。gemを使用したくない場合、または新しいプロジェクトを開始したくない場合は、&lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt;または&lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CIの&lt;/a&gt;デプロイメントスクリプトをコピーして貼り付けることができます。</target>
        </trans-unit>
        <trans-unit id="79cff9dae81675db3f02a4f885ef68b6810fccaa" translate="yes" xml:space="preserve">
          <source>Setting up the Action</source>
          <target state="translated">アクションの設定</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="d1d6ac7e4a569a5bc600abd6c2fca28a540d604d" translate="yes" xml:space="preserve">
          <source>Show a directory listing instead of loading your index file.</source>
          <target state="translated">インデックスファイルを読み込む代わりにディレクトリの一覧を表示します。</target>
        </trans-unit>
        <trans-unit id="cf9864c8b1966bf3bea36185057597999467de9e" translate="yes" xml:space="preserve">
          <source>Show the full backtrace when an error occurs.</source>
          <target state="translated">エラーが発生した場合、完全なバックトレースを表示します。</target>
        </trans-unit>
        <trans-unit id="e94fb23c5bf40b730ab355584794c83b05cb43c8" translate="yes" xml:space="preserve">
          <source>Silence the normal output from Jekyll during a build</source>
          <target state="translated">ビルド中に Jekyll からの通常の出力を無音にします。</target>
        </trans-unit>
        <trans-unit id="d7e1e1aecc3faa80daf33fd4b97cf5d12eb4d564" translate="yes" xml:space="preserve">
          <source>Silence the normal output from Jekyll during a build.</source>
          <target state="translated">ビルド中にJekyllからの通常の出力を無音にします。</target>
        </trans-unit>
        <trans-unit id="28aeb1618225d767e4382b29ab4dde547b848b72" translate="yes" xml:space="preserve">
          <source>Similar to categories, one or multiple tags can be added to a post. Also like categories, tags can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">カテゴリと同様に、1つまたは複数のタグを投稿に追加できます。また、カテゴリと同様に、タグは&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAMLリスト&lt;/a&gt;またはスペース区切りの文字列として指定できます。</target>
        </trans-unit>
        <trans-unit id="14d825cf30342e6bc78ecc4d3eef9e9271ed41f8" translate="yes" xml:space="preserve">
          <source>Simple Form</source>
          <target state="translated">シンプルなフォーム</target>
        </trans-unit>
        <trans-unit id="3e1cdd67641592c294ce605e4b3f32a11b2d0d6e" translate="yes" xml:space="preserve">
          <source>Simply adding &lt;code&gt;vendor/bundle&lt;/code&gt; to the &lt;code&gt;exclude:&lt;/code&gt; list will solve this problem but will lead to having other sub-directories under &lt;code&gt;/vendor/&lt;/code&gt; (and also &lt;code&gt;/node_modules/&lt;/code&gt;, if present) be processed to the destination folder &lt;code&gt;_site&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exclude:&lt;/code&gt; &lt;code&gt;vendor/bundle&lt;/code&gt; listにvendor / bundleを追加するだけでこの問題は解決しますが、 &lt;code&gt;/vendor/&lt;/code&gt; （および存在する場合は &lt;code&gt;/node_modules/&lt;/code&gt; ）の下の他のサブディレクトリが宛先フォルダー &lt;code&gt;_site&lt;/code&gt; に処理されることになります。</target>
        </trans-unit>
        <trans-unit id="3a1d430b34fa1ad3689dc38703f6f20b93023caa" translate="yes" xml:space="preserve">
          <source>Since Jekyll 4.0 , you don&amp;rsquo;t need to prepend &lt;code&gt;link&lt;/code&gt; and &lt;code&gt;post_url&lt;/code&gt; tags with &lt;code&gt;site.baseurl&lt;/code&gt;.</source>
          <target state="translated">Jekyll 4.0以降、 &lt;code&gt;post_url&lt;/code&gt; 前に &lt;code&gt;link&lt;/code&gt; タグとpost_urlタグを &lt;code&gt;site.baseurl&lt;/code&gt; する必要はありません。</target>
        </trans-unit>
        <trans-unit id="46ffe064aad40f271e5c35fab046c885357149dd" translate="yes" xml:space="preserve">
          <source>Since Jekyll expects multiple items mapped to the key &lt;code&gt;tags&lt;/code&gt;, it will automatically &lt;em&gt;split&lt;/em&gt; a string entry if it contains whitespace. For example, while front matter &lt;code&gt;tag: classic hollywood&lt;/code&gt; will be processed into a singular entity &lt;code&gt;&quot;classic hollywood&quot;&lt;/code&gt;, front matter &lt;code&gt;tags: classic hollywood&lt;/code&gt; will be processed into an array of entries &lt;code&gt;[&quot;classic&quot;, &quot;hollywood&quot;]&lt;/code&gt;.</source>
          <target state="translated">ジキルがキーにマッピングされた複数の項目予期しているため &lt;code&gt;tags&lt;/code&gt; 、それが自動的になります&lt;em&gt;分割し&lt;/em&gt;、それは空白文字が含まれている場合は、文字列のエントリを。たとえば、フロントマター &lt;code&gt;tag: classic hollywood&lt;/code&gt; は単一のエンティティ &lt;code&gt;&quot;classic hollywood&quot;&lt;/code&gt; に処理され &lt;code&gt;tags: classic hollywood&lt;/code&gt; 、フロントマタータグ：クラシックハリウッドはエントリの配列に処理されます &lt;code&gt;[&quot;classic&quot;, &quot;hollywood&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="872175047ef192c97b7383240a99a200caa37c6e" translate="yes" xml:space="preserve">
          <source>Since Windows doesn&amp;rsquo;t have a native source of zoneinfo data, the Ruby Interpreter doesn&amp;rsquo;t understand IANA Timezones. Using them had the &lt;code&gt;TZ&lt;/code&gt; environment variable default to UTC/GMT 00:00.</source>
          <target state="translated">Windowsにはzoneinfoデータのネイティブソースがないため、RubyインタープリターはIANAタイムゾーンを理解しません。それらを使用すると、 &lt;code&gt;TZ&lt;/code&gt; 環境変数のデフォルトはUTC / GMT00：00になりました。</target>
        </trans-unit>
        <trans-unit id="e94c1b03ed8322a8a017fbe30f42fca0a9fcc07b" translate="yes" xml:space="preserve">
          <source>Since Windows doesn&amp;rsquo;t have a native source of zoneinfo data, the Ruby Interpreter would not understand IANA Timezones and hence using them had the &lt;code&gt;TZ&lt;/code&gt; environment variable default to UTC/GMT 00:00. Though Windows users could alternatively define their blog&amp;rsquo;s timezone by setting the key to use POSIX format of defining timezones, it wasn&amp;rsquo;t as user-friendly when it came to having the clock altered to changing DST-rules.</source>
          <target state="translated">Windowsにはzoneinfoデータのネイティブソースがないため、RubyインタープリターはIANAタイムゾーンを理解しないため、それらを使用すると、 &lt;code&gt;TZ&lt;/code&gt; 環境変数のデフォルトはUTC / GMT 00:00になります。Windowsユーザーは、タイムゾーンを定義するPOSIX形式を使用するようにキーを設定してブログのタイムゾーンを定義することもできますが、DSTルールの変更に合わせてクロックを変更することは、ユーザーフレンドリーではありませんでした。</target>
        </trans-unit>
        <trans-unit id="9f1707e621eb2440dca25f767a53b48da55a9bc7" translate="yes" xml:space="preserve">
          <source>Since the content is markdown, you need to run it through the &lt;code&gt;markdownify&lt;/code&gt; filter. This happens automatically when outputting using &lt;code&gt;{{ content }}&lt;/code&gt; in a layout.</source>
          <target state="translated">コンテンツはマークダウンであるため、 &lt;code&gt;markdownify&lt;/code&gt; フィルターを介して実行する必要があります。これは、レイアウトで &lt;code&gt;{{ content }}&lt;/code&gt; を使用して出力するときに自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="9d35bf67ea68dbdbbea589d77108d31fe53bc64f" translate="yes" xml:space="preserve">
          <source>Since v1.0.0, Jekyll has had automatically-generated post excerpts. Since v1.1.0, Jekyll also passes these excerpts through Liquid, which can cause strange errors where references don&amp;rsquo;t exist or a tag hasn&amp;rsquo;t been closed. If you run into these errors, try setting &lt;code&gt;excerpt_separator: &quot;&quot;&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt;, or set it to some nonsense string.</source>
          <target state="translated">v1.0.0以降、ジキルは自動的に生成された投稿の抜粋を持っています。v1.1.0以降、Jekyllはこれらの抜粋もLiquidを介して渡すため、参照が存在しない場合やタグが閉じられていない場合に奇妙なエラーが発生する可能性があります。あなたはこれらのエラーに遭遇した場合は、設定してみてください &lt;code&gt;excerpt_separator: &quot;&quot;&lt;/code&gt; あなたに &lt;code&gt;_config.yml&lt;/code&gt; 、またはいくつかのナンセンスの文字列を設定します。</target>
        </trans-unit>
        <trans-unit id="83b609e0c4a8f295e18671ed4efd059732715ca7" translate="yes" xml:space="preserve">
          <source>Since v2, CircleCI is a Docker-based system. The example &lt;code&gt;circle.yml&lt;/code&gt; below demonstrates how to deploy your Jekyll project to AWS. In order for this to work you would first have to set the &lt;code&gt;S3_BUCKET_NAME&lt;/code&gt;&lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">v2以降、CircleCIはDockerベースのシステムです。以下の例の &lt;code&gt;circle.yml&lt;/code&gt; は、JekyllプロジェクトをAWSにデプロイする方法を示しています。これを機能させるには、最初に &lt;code&gt;S3_BUCKET_NAME&lt;/code&gt; &lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/&quot;&gt;環境変数&lt;/a&gt;を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8dd9deeb3171ac9f02e0bf5dc4f51cefd4afffb4" translate="yes" xml:space="preserve">
          <source>Since v3.2 Jekyll requires Ruby version &amp;gt;= 2.1</source>
          <target state="translated">v3.2以降、JekyllにはRubyバージョン&amp;gt; = 2.1が必要です</target>
        </trans-unit>
        <trans-unit id="0f162d4e1a4087f93e51361e86d1b20bf4f12854" translate="yes" xml:space="preserve">
          <source>Since version 3.2 , a new Jekyll project bootstrapped with &lt;code&gt;jekyll new&lt;/code&gt; uses &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt; to define the look of the site. This results in a lighter default directory structure: &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_sass&lt;/code&gt; are stored in the theme-gem, by default.</source>
          <target state="translated">バージョン3.2以降、 &lt;code&gt;jekyll new&lt;/code&gt; でブートストラップされた新しいJekyllプロジェクトは、&lt;a href=&quot;../themes/index&quot;&gt;gemベースのテーマ&lt;/a&gt;を使用してサイトの外観を定義します。これにより、デフォルトのディレクトリ構造が軽くなります。デフォルトでは、 &lt;code&gt;_layouts&lt;/code&gt; 、 &lt;code&gt;_includes&lt;/code&gt; 、および &lt;code&gt;_sass&lt;/code&gt; がtheme-gemに格納されます。</target>
        </trans-unit>
        <trans-unit id="221272afe50657f534be4008a80964851eabf9c2" translate="yes" xml:space="preserve">
          <source>Site Structure</source>
          <target state="translated">サイト構造</target>
        </trans-unit>
        <trans-unit id="06f588e3316d35a20373813bbf802b855ffd9ff8" translate="yes" xml:space="preserve">
          <source>Site Variables</source>
          <target state="translated">サイト変数</target>
        </trans-unit>
        <trans-unit id="9d9b9c2238600c4e1cb925df1d00bd97477e8165" translate="yes" xml:space="preserve">
          <source>Site wide information + configuration settings from &lt;code&gt;_config.yml&lt;/code&gt;. See below for details.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; からのサイト全体の情報+構成設定。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="d59f859ae693e44288b2fd0d29b0027af35a8e59" translate="yes" xml:space="preserve">
          <source>Sites built using Jekyll can be deployed in a large number of ways due to the static nature of the generated output. A few of the most common deployment techniques are described below.</source>
          <target state="translated">Jekyllを使って構築されたサイトは、生成される出力の静的な性質のため、多くの方法で展開することができます。最も一般的なデプロイ方法のいくつかを以下に説明します。</target>
        </trans-unit>
        <trans-unit id="46785df6728cd439e3e0c7233138c94947e55a98" translate="yes" xml:space="preserve">
          <source>Sites built using Jekyll can be deployed in a large number of ways due to the static nature of the generated output. Here&amp;rsquo;s some of the most common ways:</source>
          <target state="translated">Jekyllを使用して構築されたサイトは、生成された出力の静的な性質により、さまざまな方法で展開できます。最も一般的な方法のいくつかを次に示します。</target>
        </trans-unit>
        <trans-unit id="1f216d432619708fd99198012efacb408b4177b0" translate="yes" xml:space="preserve">
          <source>Sites on GitHub Pages are powered by Jekyll behind the scenes, so if you&amp;rsquo;re looking for a zero-hassle, zero-cost solution, GitHub Pages are a great way to &lt;a href=&quot;../../github-pages/index&quot;&gt;host your Jekyll-powered website for free&lt;/a&gt;.</source>
          <target state="translated">GitHub Pagesのサイトは、舞台裏でJekyllを利用しているため、手間がかからず、コストもかからないソリューションを探している場合、GitHubPagesは&lt;a href=&quot;../../github-pages/index&quot;&gt;Jekyllを利用したウェブサイトを無料でホスト&lt;/a&gt;するのに最適な方法です。</target>
        </trans-unit>
        <trans-unit id="25ab26fb20316eb0822bfb7c45427c236f62eb29" translate="yes" xml:space="preserve">
          <source>Sitewide information + configuration settings from &lt;code&gt;_config.yml&lt;/code&gt;. See below for details.</source>
          <target state="translated">サイト全体の情報+構成設定 &lt;code&gt;_config.yml&lt;/code&gt; 。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="5dee56420e4fd48148e2139c320ed1f3befc909b" translate="yes" xml:space="preserve">
          <source>Skips the initial site build which occurs before the server is started.</source>
          <target state="translated">サーバーが起動する前に発生する初期サイト構築をスキップします。</target>
        </trans-unit>
        <trans-unit id="79d09d3aa3ef2b829995125702ca303ae5d1fc89" translate="yes" xml:space="preserve">
          <source>Slugified title from the document&amp;rsquo;s filename (any character except numbers and letters is replaced as hyphen). May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; YAML front matter.</source>
          <target state="translated">ドキュメントのファイル名のスラッグ化されたタイトル（数字と文字以外の文字はハイフンに置き換えられます）。ドキュメントの &lt;code&gt;slug&lt;/code&gt; YAML前付けを介してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="5814edc81458d0fc07b197bd3a59987bfb5e3e8b" translate="yes" xml:space="preserve">
          <source>Slugified title from the document&amp;rsquo;s filename (any character except numbers and letters is replaced as hyphen). May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; front matter.</source>
          <target state="translated">ドキュメントのファイル名からのスラッグ化されたタイトル（数字と文字を除くすべての文字がハイフンとして置き換えられます）。ドキュメントの &lt;code&gt;slug&lt;/code&gt; フロントマターを介してオーバーライドされる場合があります。</target>
        </trans-unit>
        <trans-unit id="08eb389c8842b3829ba25ab6f0a7e93b06883e03" translate="yes" xml:space="preserve">
          <source>So what is Jekyll, exactly?</source>
          <target state="translated">では、ジキルとは一体何なのか?</target>
        </trans-unit>
        <trans-unit id="959902ab7eab3b5bc6560f8469e059707c56b409" translate="yes" xml:space="preserve">
          <source>So, from your assets folder, create folders called css, images and js. Additionally, directly under the root create another folder called &amp;lsquo;_sass&amp;rsquo;, which you will need shortly.</source>
          <target state="translated">したがって、アセットフォルダーから、css、images、jsというフォルダーを作成します。さらに、ルートのすぐ下に「_sass」という別のフォルダーを作成します。これはまもなく必要になります。</target>
        </trans-unit>
        <trans-unit id="4172abb34224416683b49d016ababcfd7a9c09f7" translate="yes" xml:space="preserve">
          <source>Some options can be specified via command-line switches. Check out the &lt;code&gt;html-proofer&lt;/code&gt; README for more information about these switches, or run &lt;code&gt;htmlproofer --help&lt;/code&gt; locally.</source>
          <target state="translated">一部のオプションは、コマンドラインスイッチで指定できます。これらのスイッチの詳細については、 &lt;code&gt;html-proofer&lt;/code&gt; &lt;code&gt;htmlproofer --help&lt;/code&gt; READMEを確認するか、ローカルでhtmlproofer --helpを実行してください。</target>
        </trans-unit>
        <trans-unit id="c35f843892fcc99c411038c0eb0d44c906167b1a" translate="yes" xml:space="preserve">
          <source>Some pieces of this website are for future versions of Jekyll that are not yet released.</source>
          <target state="translated">このサイトの一部は、まだリリースされていないJekyllの将来のバージョンのためのものです。</target>
        </trans-unit>
        <trans-unit id="3a6cd910baa7cd095835fa8f94b70ab93e3fbd2d" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s nice to preview your Jekyll site before you push your &lt;code&gt;gh-pages&lt;/code&gt; branch to GitHub. However, the subdirectory-like URL structure GitHub uses for Project Pages complicates the proper resolution of URLs. In order to assure your site builds properly, use the handy &lt;a href=&quot;../templates/index#filters&quot;&gt;URL filters&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;gh-pages&lt;/code&gt; ブランチをGitHubにプッシュする前にJekyllサイトをプレビューするとよい場合があります。ただし、GitHubがプロジェクトページに使用するサブディレクトリのようなURL構造は、URLの適切な解決を複雑にします。サイトが適切に構築されるようにするには、便利な&lt;a href=&quot;../templates/index#filters&quot;&gt;URLフィルターを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="c6e6a5236a2dc5a15d6b1356d88c122fd80a09d5" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s nice to preview your Jekyll site before you push your &lt;code&gt;gh-pages&lt;/code&gt; branch to GitHub. The subdirectory-like URL structure GitHub uses for Project Pages complicates the proper resolution of URLs. In order to assure your site builds properly, use the handy &lt;a href=&quot;../liquid/filters/index&quot;&gt;URL filters&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;gh-pages&lt;/code&gt; ブランチをGitHubにプッシュする前に、Jekyllサイトをプレビューすると便利な場合があります。GitHubがプロジェクトページに使用するサブディレクトリのようなURL構造は、URLの適切な解決を複雑にします。サイトが適切に構築されるようにするには、便利な&lt;a href=&quot;../liquid/filters/index&quot;&gt;URLフィルターを&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="412ca9c290aa7d6de372a28b66548fa3477351c0" translate="yes" xml:space="preserve">
          <source>Sometimes you might want to output something in production but not in development. Analytics scripts are the most common example of this.</source>
          <target state="translated">本番では何かを出力したいのに、開発では出力したくないことがあるかもしれません。アナリティクススクリプトはその最も一般的な例です。</target>
        </trans-unit>
        <trans-unit id="c002e956f2fe54ce5a1cc79d677f63d3a84d4607" translate="yes" xml:space="preserve">
          <source>Sort By Front Matter Key</source>
          <target state="translated">フロントマターキーでソート</target>
        </trans-unit>
        <trans-unit id="0bf165524f11b75caefcab9fd93f2fced0386918" translate="yes" xml:space="preserve">
          <source>Sort an array. Optional arguments for hashes 1. property name 2. nils order (&lt;em&gt;first&lt;/em&gt; or &lt;em&gt;last&lt;/em&gt;).</source>
          <target state="translated">配列を並べ替えます。ハッシュのオプションの引数1.プロパティ名2.nils順序（&lt;em&gt;最初&lt;/em&gt;または&lt;em&gt;最後&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="e1a35dfc74cd04625df2be72ead1705c96cb4340" translate="yes" xml:space="preserve">
          <source>Sort an array. Optional arguments for hashes: 1. property name 2. nils order (&lt;em&gt;first&lt;/em&gt; or &lt;em&gt;last&lt;/em&gt;).</source>
          <target state="translated">配列をソートします。ハッシュのオプションの引数：1.プロパティ名2. nils順序（&lt;em&gt;最初&lt;/em&gt;または&lt;em&gt;最後&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="721ef5802b7fd0123251918306122ba391be88b2" translate="yes" xml:space="preserve">
          <source>Source files must be in the root directory</source>
          <target state="translated">ソースファイルはルートディレクトリになければなりません。</target>
        </trans-unit>
        <trans-unit id="ebf232555e2d95e42ef7c0e153994a358d649b31" translate="yes" xml:space="preserve">
          <source>Specify config files instead of using &lt;code&gt;_config.yml&lt;/code&gt; automatically. Settings in later files override settings in earlier files.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; を自動的に使用する代わりに、設定ファイルを指定します。新しいファイルの設定は、古いファイルの設定を上書きします。</target>
        </trans-unit>
        <trans-unit id="bcdffbe305cb4d5d7ea796d6e287a7bc8d7a0116" translate="yes" xml:space="preserve">
          <source>Specify layout directory instead of using &lt;code&gt;_layouts/&lt;/code&gt; automatically.</source>
          <target state="translated">&lt;code&gt;_layouts/&lt;/code&gt; 自動的に使用する代わりに、レイアウトディレクトリを指定します。</target>
        </trans-unit>
        <trans-unit id="7d5a31871f9d077967971601fd20c9db9acc9a3a" translate="yes" xml:space="preserve">
          <source>Specify plugin directories instead of using &lt;code&gt;_plugins/&lt;/code&gt; automatically.</source>
          <target state="translated">&lt;code&gt;_plugins/&lt;/code&gt; 自動的に使用する代わりに、プラグインディレクトリを指定します。</target>
        </trans-unit>
        <trans-unit id="543a19444848c9302e9291afe8e96f0019592a64" translate="yes" xml:space="preserve">
          <source>Specifying a Jekyll environment at build time</source>
          <target state="translated">ビルド時のジキル環境の指定</target>
        </trans-unit>
        <trans-unit id="1d23e1629ece47d647a39c0d87fdcebaf66f9cee" translate="yes" xml:space="preserve">
          <source>Specifying an environment value allows you to make certain content available only within specific environments.</source>
          <target state="translated">環境値を指定すると、特定の環境内でのみ特定のコンテンツを利用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="f5e265cb8bebf47d8d0462cb2fe90e34d28e8d53" translate="yes" xml:space="preserve">
          <source>Specifying permalinks through the YAML Front Matter</source>
          <target state="translated">YAMLフロントマターでパーマリンクを指定する</target>
        </trans-unit>
        <trans-unit id="fadb672fc3877cff0d7847dc912cbe268c93b01d" translate="yes" xml:space="preserve">
          <source>Specifying permalinks through the front matter</source>
          <target state="translated">フロントマターでパーマリンクを指定する</target>
        </trans-unit>
        <trans-unit id="e75b6d1f85d0377b8c0e0430f17df4f07482f060" translate="yes" xml:space="preserve">
          <source>Staff page</source>
          <target state="translated">スタッフページ</target>
        </trans-unit>
        <trans-unit id="2656a9332091e8034c5569e15573e7522648fc29" translate="yes" xml:space="preserve">
          <source>Standard Liquid Filters</source>
          <target state="translated">標準的な液体フィルター</target>
        </trans-unit>
        <trans-unit id="3d7885c513450d548fab07ffa79ca9b64b10eea0" translate="yes" xml:space="preserve">
          <source>Starting &lt;strong&gt;Jekyll 3.2&lt;/strong&gt;, a new Jekyll project bootstrapped with &lt;code&gt;jekyll new&lt;/code&gt; uses &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt; to define the look of the site. This results in a lighter default directory structure : &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_sass&lt;/code&gt; are stored in the theme-gem, by default.</source>
          <target state="translated">開始&lt;strong&gt;ジキル3.2を&lt;/strong&gt;、新しいジキルプロジェクトはとブートストラップ &lt;code&gt;jekyll new&lt;/code&gt; 用途の&lt;a href=&quot;../themes/index&quot;&gt;宝石ベースのテーマ&lt;/a&gt;サイトの外観を定義します。これにより、デフォルトのディレクトリ構造が軽量化されます。デフォルトでは、 &lt;code&gt;_layouts&lt;/code&gt; 、 &lt;code&gt;_includes&lt;/code&gt; 、および &lt;code&gt;_sass&lt;/code&gt; はtheme-gemに格納されます。</target>
        </trans-unit>
        <trans-unit id="c4533baaac02eff0b038864c85c524fb56799a07" translate="yes" xml:space="preserve">
          <source>Starting from version 3.5.0, using &lt;code&gt;none&lt;/code&gt; in a post/document will produce a file without using a layout file regardless of front matter defaults. Using &lt;code&gt;none&lt;/code&gt; in a page will cause Jekyll to attempt to use a layout named &quot;none&quot;.</source>
          <target state="translated">バージョン3.5.0以降、投稿/ドキュメントで &lt;code&gt;none&lt;/code&gt; を使用すると、フロントマターのデフォルトに関係なく、レイアウトファイルを使用せずにファイルが生成されます。ページで &lt;code&gt;none&lt;/code&gt; を使用すると、Jekyllは「none」という名前のレイアウトを使用しようとします。</target>
        </trans-unit>
        <trans-unit id="8363d11750d7f59eccf988ecb4d15d10a1f9a95e" translate="yes" xml:space="preserve">
          <source>Starting from version 3.5.0, using &lt;code&gt;none&lt;/code&gt; in a post/document will produce a file without using a layout file regardless of frontmatter defaults. Using &lt;code&gt;none&lt;/code&gt; in a page, however, will cause Jekyll to attempt to use a layout named &quot;none&quot;.</source>
          <target state="translated">バージョン3.5.0以降、投稿/ドキュメントで &lt;code&gt;none&lt;/code&gt; を使用すると、frontmatterのデフォルトに関係なく、レイアウトファイルを使用せずにファイルが生成されます。ただし、ページで &lt;code&gt;none&lt;/code&gt; を使用すると、Jekyllは「none」という名前のレイアウトを使用しようとします。</target>
        </trans-unit>
        <trans-unit id="689ffd2b6c659713306bc1b82c35e8c3c2b3fd11" translate="yes" xml:space="preserve">
          <source>Starting with Jekyll v3.0, relative permalinks functionality will be removed and thus unavailable for use.</source>
          <target state="translated">Jekyll v3.0からは、相対パーマリンク機能が削除され、使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="c2ad94ea6253b4b6a6065e3716da384186683b3c" translate="yes" xml:space="preserve">
          <source>Static Comments with Jekyll &amp;amp; Staticman</source>
          <target state="translated">Jekyll＆Staticmanによる静的コメント</target>
        </trans-unit>
        <trans-unit id="a1c031153c642e8130ab037b056c28c991496c45" translate="yes" xml:space="preserve">
          <source>Static Files</source>
          <target state="translated">静的ファイル</target>
        </trans-unit>
        <trans-unit id="2c55f6a69fe795f38091b036344a6ecd7d37d2f7" translate="yes" xml:space="preserve">
          <source>Static Publisher</source>
          <target state="translated">静的な発行者</target>
        </trans-unit>
        <trans-unit id="f41c29383080e690250ef667c06c5fd9bfa50de3" translate="yes" xml:space="preserve">
          <source>Step 1: Install rrsync to your home folder (server-side)</source>
          <target state="translated">ステップ1:rrsyncをホームフォルダ(サーバー側)にインストールします。</target>
        </trans-unit>
        <trans-unit id="acb1f7279f38bf9b0a45bc0f35a26a88d02097fb" translate="yes" xml:space="preserve">
          <source>Step 1: Tell Jekyll to read in your collection</source>
          <target state="translated">ステップ1:ジキルにコレクションで読むように伝える</target>
        </trans-unit>
        <trans-unit id="3ae76cb71c530e99823dbc2db566a6ad925baa9b" translate="yes" xml:space="preserve">
          <source>Step 2: Add your content</source>
          <target state="translated">ステップ2:コンテンツを追加する</target>
        </trans-unit>
        <trans-unit id="983bcdbf9f3d414aa3345d5eeabfd641e4c7ae61" translate="yes" xml:space="preserve">
          <source>Step 2: Set up certificate-based SSH access (server side)</source>
          <target state="translated">ステップ2:証明書ベースのSSHアクセス(サーバ側)を設定する</target>
        </trans-unit>
        <trans-unit id="64c59dc288ce9e8f1c6fe120ae7d9d3c9551f394" translate="yes" xml:space="preserve">
          <source>Step 3: Optionally render your collection&amp;rsquo;s documents into independent files</source>
          <target state="translated">ステップ3：オプションで、コレクションのドキュメントを独立したファイルにレンダリングする</target>
        </trans-unit>
        <trans-unit id="ee22489d18965248c7a1345a3434a08c9adadf6b" translate="yes" xml:space="preserve">
          <source>Step 3: Rsync (client-side)</source>
          <target state="translated">ステップ3:Rsync(クライアント側</target>
        </trans-unit>
        <trans-unit id="7d7f7542c2ddb5278d71a339c55fed6a950021e9" translate="yes" xml:space="preserve">
          <source>Step 4 (Optional): Exclude the transfer script from being copied to the output folder.</source>
          <target state="translated">ステップ4(オプション)。転送スクリプトが出力フォルダにコピーされるのを除外します。</target>
        </trans-unit>
        <trans-unit id="0a5cbd7bd6e140ea3b65d967ef5248c8dbb97a1f" translate="yes" xml:space="preserve">
          <source>Step by Step Tutorial</source>
          <target state="translated">ステップバイステップチュートリアル</target>
        </trans-unit>
        <trans-unit id="bfcefdc3d62cf0235d29e6d41fa6c2187ec9fc83" translate="yes" xml:space="preserve">
          <source>Stop and rerun `jekyll serve` command.</source>
          <target state="translated">jjekyll serve`コマンドを停止して再実行する。</target>
        </trans-unit>
        <trans-unit id="7532628acb10d3f74335ed474f1b263c9667e5e0" translate="yes" xml:space="preserve">
          <source>Stores &lt;a href=&quot;../configuration/index&quot;&gt;configuration&lt;/a&gt; data. Many of these options can be specified from the command line executable but it&amp;rsquo;s easier to specify them here so you don&amp;rsquo;t have to remember them.</source>
          <target state="translated">&lt;a href=&quot;../configuration/index&quot;&gt;構成&lt;/a&gt;データを保管します。これらのオプションの多くはコマンドラインの実行可能ファイルから指定できますが、ここで指定する方が簡単なので、覚えておく必要はありません。</target>
        </trans-unit>
        <trans-unit id="688931069f0df1b7dcf0babe5808ec7762322394" translate="yes" xml:space="preserve">
          <source>Stylesheets</source>
          <target state="translated">Stylesheets</target>
        </trans-unit>
        <trans-unit id="32e9c03f491a3d6219d0af41a20f44ab2a1708e6" translate="yes" xml:space="preserve">
          <source>Stylesheets for syntax highlighting</source>
          <target state="translated">構文強調のためのスタイルシート</target>
        </trans-unit>
        <trans-unit id="3847bbe56426426b18e97e82869e1adc46a23fcf" translate="yes" xml:space="preserve">
          <source>Subfolders</source>
          <target state="translated">Subfolders</target>
        </trans-unit>
        <trans-unit id="c17754d5a1317dde8d1389c0d21b829385b637ac" translate="yes" xml:space="preserve">
          <source>Suppose the parameter you want to pass to the include is a variable rather than a string. For example, you might be using &lt;code&gt;{{ site.product_name }}&lt;/code&gt; to refer to every instance of your product rather than the actual hard-coded name. (In this case, your &lt;code&gt;_config.yml&lt;/code&gt; file would have a key called &lt;code&gt;product_name&lt;/code&gt; with a value of your product&amp;rsquo;s name.)</source>
          <target state="translated">インクルードに渡したいパラメータが文字列ではなく変数であるとします。たとえば、実際にハードコードされた名前ではなく、 &lt;code&gt;{{ site.product_name }}&lt;/code&gt; を使用して製品のすべてのインスタンスを参照している場合があります。（この場合、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルには、製品名の値を持つ &lt;code&gt;product_name&lt;/code&gt; というキーがあります。）</target>
        </trans-unit>
        <trans-unit id="de0da891a584c423631fe15e6996173bc2e4ef95" translate="yes" xml:space="preserve">
          <source>Suppose you want to get rid of the gem-based theme and convert it to a regular theme, where all files are present in your Jekyll site directory, with nothing stored in the theme gem.</source>
          <target state="translated">gemベースのテーマを削除して、通常のテーマに変換したいとします。</target>
        </trans-unit>
        <trans-unit id="2a9948bd0352018869fcd226a91788c362048f0e" translate="yes" xml:space="preserve">
          <source>Suppose you want to list all your image assets as contained in &lt;code&gt;assets/img&lt;/code&gt;. You could use this for loop to look in the &lt;code&gt;static_files&lt;/code&gt; object and get all static files that have this front matter property:</source>
          <target state="translated">すべての画像アセットを &lt;code&gt;assets/img&lt;/code&gt; に含まれているものとして一覧表示するとします。このforループを使用して &lt;code&gt;static_files&lt;/code&gt; オブジェクトを調べ、この前付けプロパティを持つすべての静的ファイルを取得できます。</target>
        </trans-unit>
        <trans-unit id="49a5924de30537d0fd99ef0abd41a365ec703124" translate="yes" xml:space="preserve">
          <source>Syntax highlighter changed</source>
          <target state="translated">シンタックスハイライターが変更されました。</target>
        </trans-unit>
        <trans-unit id="374b87b00ba52a7058776886331a437d0ccf6408" translate="yes" xml:space="preserve">
          <source>TZInfo 2.0 incompatibility</source>
          <target state="translated">TZInfo 2.0 の非互換性</target>
        </trans-unit>
        <trans-unit id="d9d769cb03843c979fe9ce2f237c081ebdcb9e6e" translate="yes" xml:space="preserve">
          <source>Tag Blocks</source>
          <target state="translated">タグブロック</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="ad2eeda2d22a7c89497c0be9c33914c5662c9f33" translate="yes" xml:space="preserve">
          <source>Tags Filters</source>
          <target state="translated">タグ フィルター</target>
        </trans-unit>
        <trans-unit id="ea90392f321ee89c8fa1055615f595ff1dc3bf58" translate="yes" xml:space="preserve">
          <source>Tags and Categories</source>
          <target state="translated">タグとカテゴリ</target>
        </trans-unit>
        <trans-unit id="0db85fe46c9924138eaf21c26a5b7b70b64633b5" translate="yes" xml:space="preserve">
          <source>Tags create the logic and control flow for templates. They are denoted by curly braces and percent signs: &lt;code&gt;{%&lt;/code&gt; and &lt;code&gt;%}&lt;/code&gt;. For example:</source>
          <target state="translated">タグは、テンプレートのロジックと制御フローを作成します。それらは中括弧とパーセント記号で示されます： &lt;code&gt;{%&lt;/code&gt; と &lt;code&gt;%}&lt;/code&gt; 。例えば：</target>
        </trans-unit>
        <trans-unit id="e9064e60417951d90fb2007ccee3afabab3af297" translate="yes" xml:space="preserve">
          <source>Tags for a post are defined in the post&amp;rsquo;s front matter using either the key &lt;code&gt;tag&lt;/code&gt; for a single entry or &lt;code&gt;tags&lt;/code&gt; for multiple entries.</source>
          <target state="translated">投稿の &lt;code&gt;tag&lt;/code&gt; は、単一のエントリのキータグまたは複数のエントリの &lt;code&gt;tags&lt;/code&gt; いずれかを使用して、投稿のフロントマターで定義されます。</target>
        </trans-unit>
        <trans-unit id="f2538f4a76331f99cf2d8240550cd5d99a3f12da" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and see your red link for the current page.</source>
          <target state="translated">見てみましょう&lt;a href=&quot;http://localhost:4000&quot;&gt;// localhostを：：HTTP 4000を&lt;/a&gt;、現在のページのためのあなたの赤のリンクを参照してください。</target>
        </trans-unit>
        <trans-unit id="e7c9bcdeb3826f2a1efe477c86c883dae3af6389" translate="yes" xml:space="preserve">
          <source>Template Variables</source>
          <target state="translated">テンプレート変数</target>
        </trans-unit>
        <trans-unit id="9d777943ea77791c8c797167aaf1ffeca5f05350" translate="yes" xml:space="preserve">
          <source>Template variables for permalinks</source>
          <target state="translated">パーマリンク用のテンプレート変数</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="aec32b88e26f43c563c3cb564cc9a4e12a743a4c" translate="yes" xml:space="preserve">
          <source>That brings us to the end of this step-by-step tutorial and the beginning of your Jekyll journey!</source>
          <target state="translated">これでこのステップバイステップのチュートリアルが終わり、ジキルの旅の始まりです。</target>
        </trans-unit>
        <trans-unit id="75e9de090e114025ad1428fb576025165b6a0358" translate="yes" xml:space="preserve">
          <source>That is: defaults are overridden by options specified in &lt;code&gt;_config.yml&lt;/code&gt;, and flags specified at the command-line will override all other settings specified elsewhere.</source>
          <target state="translated">つまり、デフォルトは &lt;code&gt;_config.yml&lt;/code&gt; で指定されたオプションによって上書きされ、コマンドラインで指定されたフラグは他の場所で指定された他のすべての設定を上書きします。</target>
        </trans-unit>
        <trans-unit id="31e26364535ee708208d36110b351e48d76e9d3b" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! Head over to &lt;a href=&quot;https://github.com/rbenv/rbenv#command-reference&quot;&gt;rbenv command references&lt;/a&gt; to learn how to use different versions of Ruby in your projects.</source>
          <target state="translated">それでおしまい！プロジェクトでさまざまなバージョンのRubyを使用する方法については、&lt;a href=&quot;https://github.com/rbenv/rbenv#command-reference&quot;&gt;rbenvコマンドリファレンス&lt;/a&gt;にアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="3420af8913b823b74b688aea4be041a4291a489f" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! You&amp;rsquo;re ready to start using Jekyll.</source>
          <target state="translated">それでおしまい！これで、Jekyllの使用を開始する準備が整いました。</target>
        </trans-unit>
        <trans-unit id="1ee36422ccc27808dce84a590233680e25afa5a2" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it, you&amp;rsquo;re ready to use Jekyll!</source>
          <target state="translated">これで、Jekyllを使用する準備が整いました。</target>
        </trans-unit>
        <trans-unit id="57b6e3ea12042140d99aebfec66c4d2fd21ad47f" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s next. Let&amp;rsquo;s keep going.</source>
          <target state="translated">次です。続けましょう。</target>
        </trans-unit>
        <trans-unit id="1c7ae6e9344b75aa2a92435038dc2d5c06c27826" translate="yes" xml:space="preserve">
          <source>The (unrendered) content of the document. If no YAML Front Matter is provided, Jekyll will not generate the file in your collection. If YAML Front Matter is used, then this is all the contents of the file after the terminating `---` of the front matter.</source>
          <target state="translated">ドキュメントの(レンダーされていない)内容。YAMLフロントマターが提供されていない場合、Jekyllはコレクション内のファイルを生成しません。YAMLフロントマターが使用されている場合、これはフロントマターの終端の `---` の後のファイルのすべての内容です。</target>
        </trans-unit>
        <trans-unit id="dff9e727f022ff1d34d5e686eede29e28e00f977" translate="yes" xml:space="preserve">
          <source>The (unrendered) content of the document. If no front matter is provided, Jekyll will not generate the file in your collection. If front matter is used, then this is all the contents of the file after the terminating `---` of the front matter.</source>
          <target state="translated">ドキュメントの(レンダーされていない)内容。フロントマターが提供されていない場合、Jekyllはコレクション内のファイルを生成しません。フロントマターが使用されている場合、これはフロントマターの終端の `---` の後のファイルのすべての内容です。</target>
        </trans-unit>
        <trans-unit id="03a2268eb0b29718f228699fbbe75966ada707f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files&quot;&gt;try_files&lt;/a&gt; directive allows you to specify a list of files to search for to process a request. The following configuration will instruct nginx to search for a file with an &lt;code&gt;.html&lt;/code&gt; extension if an exact match for the requested URI is not found.</source>
          <target state="translated">&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files&quot;&gt;try_filesの&lt;/a&gt;ディレクティブを使用すると、要求を処理するために検索するファイルのリストを指定することができます。次の構成は、要求されたURIと完全に一致するものが見つからない場合に、拡張子 &lt;code&gt;.html&lt;/code&gt; のファイルを検索するようにnginxに指示します。</target>
        </trans-unit>
        <trans-unit id="4bc38b6be6281a9888e8f3fce6c32c39f23469c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://console.amplify.aws&quot;&gt;AWS Amplify Console&lt;/a&gt; provides continuous deployment and hosting for modern web apps (single page apps and static site generators). Continuous deployment allows developers to deploy updates to their web app on every code commit to their Git repository. Hosting includes features such as globally available CDNs, 1-click custom domain setup + HTTPS, feature branch deployments, redirects, trailing slashes, and password protection.</source>
          <target state="translated">&lt;a href=&quot;https://console.amplify.aws&quot;&gt;AWS Amplifyソフトウェアコンソールは&lt;/a&gt;、連続的展開と現代のWebアプリケーション（単一ページのアプリと静的サイトジェネレータ）のホスティングを提供します。継続的デプロイにより、開発者はGitリポジトリにコードをコミットするたびにWebアプリに更新をデプロイできます。ホスティングには、グローバルに利用可能なCDN、ワンクリックのカスタムドメインセットアップ+ HTTPS、機能ブランチの展開、リダイレクト、末尾のスラッシュ、パスワード保護などの機能が含まれます。</target>
        </trans-unit>
        <trans-unit id="4f115da54b9393792ea4dff150c2787abe86526f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://twitter.com/jekyllrb&quot;&gt;official Jekyll Twitter account&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://twitter.com/jekyllrb&quot;&gt;Jekyll&lt;/a&gt;の公式Twitterアカウント。</target>
        </trans-unit>
        <trans-unit id="29a0415fc20550787fcea206149e7d0290f0d8c4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.keycdn.com/support/jekyll-hosting&quot;&gt;Jekyll hosting tutorial&lt;/a&gt; provides various options to supercharge Jekyll sites with just a few steps. It combines best flexibility and excellent performance.</source>
          <target state="translated">&lt;a href=&quot;https://www.keycdn.com/support/jekyll-hosting&quot;&gt;ジキルホスティングチュートリアルでは、&lt;/a&gt;ほんの数歩でジキルサイトを過給するために様々なオプションを提供します。最高の柔軟性と優れたパフォーマンスを兼ね備えています。</target>
        </trans-unit>
        <trans-unit id="a08d96a906788824a4d183e11431ffeee3dd4f0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:title&lt;/code&gt; template variable will take the &lt;code&gt;slug&lt;/code&gt;&lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; variable value if any is present in the document; if none is defined then &lt;code&gt;:title&lt;/code&gt; will be equivalent to &lt;code&gt;:name&lt;/code&gt;, aka the slug generated from the filename.</source>
          <target state="translated">&lt;code&gt;:title&lt;/code&gt; テンプレート変数がかかります &lt;code&gt;slug&lt;/code&gt; &lt;a href=&quot;../front-matter/index&quot;&gt;前付の&lt;/a&gt;いずれかが文書に存在する場合、変数の値を、何も定義されていない場合、 &lt;code&gt;:title&lt;/code&gt; は &lt;code&gt;:name&lt;/code&gt; と同等になります。これは、ファイル名から生成されたスラッグとも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="86718a9d1272d70d30b11f6c4bbf03f59f232c82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:title&lt;/code&gt; template variable will take the &lt;code&gt;slug&lt;/code&gt;&lt;a href=&quot;../frontmatter/index&quot;&gt;front matter&lt;/a&gt; variable value if any is present in the document; if none is defined then &lt;code&gt;:title&lt;/code&gt; will be equivalent to &lt;code&gt;:name&lt;/code&gt;, aka the slug generated from the filename.</source>
          <target state="translated">&lt;code&gt;:title&lt;/code&gt; テンプレート変数がかかります &lt;code&gt;slug&lt;/code&gt; &lt;a href=&quot;../frontmatter/index&quot;&gt;前付の&lt;/a&gt;いずれかが文書に存在する場合、変数の値を、何も定義されていない場合、 &lt;code&gt;:title&lt;/code&gt; は &lt;code&gt;:name&lt;/code&gt; 、つまりファイル名から生成されたスラッグと同等になります。</target>
        </trans-unit>
        <trans-unit id="9ea004d919e32ec2a322ac05fe4515ce8ba65e43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; files are used by Bundler to keep track of the required gems and gem versions you need to build your Jekyll site.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; と &lt;code&gt;Gemfile.lock&lt;/code&gt; ファイルは、あなたのジキルサイトを構築する必要がある必要宝石と宝石のバージョンを追跡するためにバンドラーによって使用されています。</target>
        </trans-unit>
        <trans-unit id="c6c2579db93e220c78bc31b32ca43918a2dcc6b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; files inform Bundler about the gem requirements in your site. If your site doesn&amp;rsquo;t have these Gemfiles, you can omit &lt;code&gt;bundle exec&lt;/code&gt; and just run &lt;code&gt;jekyll serve&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; と &lt;code&gt;Gemfile.lock&lt;/code&gt; ファイルは、サイト内の宝石の要件についてバンドラーを知らせます。サイトにこれらのGemfileがない場合は、 &lt;code&gt;bundle exec&lt;/code&gt; を省略して &lt;code&gt;jekyll serve&lt;/code&gt; を実行するだけです。</target>
        </trans-unit>
        <trans-unit id="015871f3cca2e404aac8ff736d807ca780ce4540" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_config.yml&lt;/code&gt; master configuration file contains global configurations and variable definitions that are read once at execution time. Changes made to &lt;code&gt;_config.yml&lt;/code&gt; during automatic regeneration are not loaded until the next execution.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; マスター設定ファイルには、グローバルコンフィギュレーションと実行時に一度読まれる変数の定義が含まれています。自動再生成中に &lt;code&gt;_config.yml&lt;/code&gt; に加えられた変更は、次の実行まで読み込まれません。</target>
        </trans-unit>
        <trans-unit id="4e41fe8194cc18257de1f89cee9f4498d2e6fc24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_data&lt;/code&gt; folder is where you can store additional data for Jekyll to use when generating your site. These files must be YAML, JSON, or CSV files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.csv&lt;/code&gt; extension), and they will be accessible via &lt;code&gt;site.data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_data&lt;/code&gt; あなたのサイトを作成するときに使用しジキルための追加データを保存することができる場所フォルダです。これらのファイルはYAML、JSON、またはCSVファイル（いずれかを使用しなければなりません &lt;code&gt;.yml&lt;/code&gt; 、 &lt;code&gt;.yaml&lt;/code&gt; 、 &lt;code&gt;.json&lt;/code&gt; または &lt;code&gt;.csv&lt;/code&gt; 拡張子）、そして彼らがされ、アクセス可能になります &lt;code&gt;site.data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0b3420ea4f5642027479a0f45aa23361e1069dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_posts&lt;/code&gt; folder is where your blog posts live. You typically write posts in &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;, HTML is also supported.</source>
          <target state="translated">&lt;code&gt;_posts&lt;/code&gt; ブログの投稿が住んでいる場所であるフォルダ。通常、&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;で投稿を作成しますが、HTMLもサポートされています。</target>
        </trans-unit>
        <trans-unit id="c66c5f86a437b947ed0ce736975e36e6e9c63046" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;branches&lt;/code&gt; directive is completely optional. Travis will build from every push to any branch of your repo if leave it out.</source>
          <target state="translated">&lt;code&gt;branches&lt;/code&gt; ディレクティブは完全にオプションです。Travisは、すべてのプッシュからレポの任意のブランチに構築されます。</target>
        </trans-unit>
        <trans-unit id="b805bb53409f023024aea30697c9e7121d0d7b8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaults&lt;/code&gt; key holds an array of scope/values pairs that define what defaults should be set for a particular file path, and optionally, a file type in that path.</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; キーは、そのパスに、必要に応じてファイルタイプをデフォルトは特定のファイルパスに設定すべきかを定義スコープ/値のペアの配列を保持し、。</target>
        </trans-unit>
        <trans-unit id="9872e1f45f37fadbe9c5e5c67d4324984eff4052" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help&lt;/code&gt; command is always here to remind you of all available options and usage, and also works with the &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; subcommands, e.g &lt;code&gt;jekyll help new&lt;/code&gt; or &lt;code&gt;jekyll help build&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;help&lt;/code&gt; コマンドは、すべての利用可能なオプションと使用方法を思い出させる、ともで動作するためにここに常にある &lt;code&gt;build&lt;/code&gt; 、 &lt;code&gt;serve&lt;/code&gt; と &lt;code&gt;new&lt;/code&gt; サブコマンド、例えば &lt;code&gt;jekyll help new&lt;/code&gt; または &lt;code&gt;jekyll help build&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21cae873b11fc6869aa1c2ebe6e7767215a8ed64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; tag allows you to include content from another file stored in an &lt;code&gt;_includes&lt;/code&gt; folder. Includes are useful for having a single source for source code that repeats around the site or for improving the readability.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; タグはあなたがに保存されている他のファイルからコンテンツを含めることができます &lt;code&gt;_includes&lt;/code&gt; のフォルダを。インクルードは、サイト全体で繰り返されるソースコードの単一のソースを持つ場合、または読みやすさを向上させる場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="4abdc0f63faca27dc0d13cf9f4ae0f88d56557db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; tag allows you to include the content from another file stored in the &lt;code&gt;_includes&lt;/code&gt; folder:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; タグはあなたがに保存されている他のファイルからコンテンツを含めることができます &lt;code&gt;_includes&lt;/code&gt; のフォルダを：</target>
        </trans-unit>
        <trans-unit id="be0f39689236690a99ed44aabb835d82bae4ec9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command isn&amp;rsquo;t the only way to create a new Jekyll site with a gem-based theme. You can also find gem-based themes online and incorporate them into your Jekyll project.</source>
          <target state="translated">&lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; コマンドは、宝石ベースのテーマとした新しいジキルサイトを作成するための唯一の方法ではありません。宝石ベースのテーマをオンラインで見つけて、それをJekyllプロジェクトに組み込むこともできます。</target>
        </trans-unit>
        <trans-unit id="490fa66ce202e97df6ee8b29417170e17bab61bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jekyll&lt;/code&gt; program has several commands but the structure is always:</source>
          <target state="translated">&lt;code&gt;jekyll&lt;/code&gt; プログラムは、いくつかのコマンドがありますが、構造は常に次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3a22f5e9830e79d5bffeada0bdc4c8fb7b8e615d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;post&lt;/code&gt; layout doesn&amp;rsquo;t exist so you&amp;rsquo;ll need to create it at &lt;code&gt;_layouts/post.html&lt;/code&gt; with the following content:</source>
          <target state="translated">&lt;code&gt;post&lt;/code&gt; あなたがでそれを作成する必要がありますので、レイアウトは存在しません &lt;code&gt;_layouts/post.html&lt;/code&gt; 以下の内容で：</target>
        </trans-unit>
        <trans-unit id="b647252c78f55c6ca901fe959de1c8cb94b0ceb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projects/foo_project.md&lt;/code&gt; would have the &lt;code&gt;layout&lt;/code&gt; set to &lt;code&gt;foobar&lt;/code&gt; instead of &lt;code&gt;project&lt;/code&gt; and the &lt;code&gt;author&lt;/code&gt; set to &lt;code&gt;John Smith&lt;/code&gt; instead of &lt;code&gt;Mr. Hyde&lt;/code&gt; when the site is built.</source>
          <target state="translated">&lt;code&gt;projects/foo_project.md&lt;/code&gt; 持っているでしょう &lt;code&gt;layout&lt;/code&gt; に設定 &lt;code&gt;foobar&lt;/code&gt; 代わりに &lt;code&gt;project&lt;/code&gt; や &lt;code&gt;author&lt;/code&gt; へのセット &lt;code&gt;John Smith&lt;/code&gt; の代わりに、 &lt;code&gt;Mr. Hyde&lt;/code&gt; のサイトが構築されています。</target>
        </trans-unit>
        <trans-unit id="ed5f3129400a57d68f48a537a7d6292450e00443" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render_time&lt;/code&gt; tag seen above can also be rewritten as a tag block by inheriting the &lt;code&gt;Liquid::Block&lt;/code&gt; class. Look at the example below:</source>
          <target state="translated">上記の &lt;code&gt;render_time&lt;/code&gt; タグは、 &lt;code&gt;Liquid::Block&lt;/code&gt; クラスを継承することでタグブロックとして書き換えることもできます。以下の例を見てください。</target>
        </trans-unit>
        <trans-unit id="57f93099e236e22bad0fc609681110fd7c36137b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass_dir&lt;/code&gt; is only used by Sass</source>
          <target state="translated">&lt;code&gt;sass_dir&lt;/code&gt; は唯一のサスで使用されています</target>
        </trans-unit>
        <trans-unit id="a0b0548836c5da47246c8e1f3d0079d6eea8c431" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;script&lt;/code&gt; directive can be absolutely any valid shell command.</source>
          <target state="translated">&lt;code&gt;script&lt;/code&gt; ディレクティブは絶対に任意の有効なシェルコマンドすることができます。</target>
        </trans-unit>
        <trans-unit id="f9517da8df41947654f87606ca04f61c9fbfb66a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slugify&lt;/code&gt; filter accepts an option, each specifying what to filter. The default is &lt;code&gt;default&lt;/code&gt;. They are as follows (with what they filter):</source>
          <target state="translated">&lt;code&gt;slugify&lt;/code&gt; フィルタはオプションで、各指定フィルタに何を受け入れます。デフォルトは &lt;code&gt;default&lt;/code&gt; です。それらは次のとおりです（フィルターを適用したもの）。</target>
        </trans-unit>
        <trans-unit id="f8c33390f66d336ebefdb3c6cc90c26c89c1a377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;styles.css&lt;/code&gt; referenced here is generated by Jekyll from the &lt;code&gt;styles.scss&lt;/code&gt; you created earlier in &lt;code&gt;assets/css/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;styles.css&lt;/code&gt; ここで参照からジキルによって生成される &lt;code&gt;styles.scss&lt;/code&gt; あなたが以前に作成した &lt;code&gt;assets/css/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f49562587f52eeca7faec6ae393a9187d870396" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{ include.content }}&lt;/code&gt; is a parameter that gets populated when you call the include and specify a value for that parameter, like this:</source>
          <target state="translated">&lt;code&gt;{{ include.content }}&lt;/code&gt; あなたには、このように、そのパラメータの値を指定して呼び出すときに読み込まれますパラメータです。</target>
        </trans-unit>
        <trans-unit id="b00a4fc83d428b8b611209d4e9806a736b0ab610" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;checkout&lt;/strong&gt; action takes care of cloning your repository.</source>
          <target state="translated">&lt;strong&gt;チェックアウト&lt;/strong&gt;アクションは、リポジトリをクローンの世話をします。</target>
        </trans-unit>
        <trans-unit id="add532a620fbaee53195cee698d498b6cad90818" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;name&lt;/strong&gt; of the job matches our YAML filename: &lt;code&gt;github-pages&lt;/code&gt;.</source>
          <target state="translated">ジョブの&lt;strong&gt;名前&lt;/strong&gt;はYAMLファイル名と一致します： &lt;code&gt;github-pages&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcf4a02bedfa2bc6c9855a66aab578d0d31a600a" translate="yes" xml:space="preserve">
          <source>The Action we&amp;rsquo;re using here will create (or reset an existing) &lt;code&gt;gh-pages&lt;/code&gt; branch on every successful deploy. So, if you have an existing &lt;code&gt;gh-pages&lt;/code&gt; branch that is used to deploy your production build, ensure to make a backup of the contents into a different branch so that you can rollback easily if necessary.</source>
          <target state="translated">ここで使用しているアクションは、デプロイが成功するたびに &lt;code&gt;gh-pages&lt;/code&gt; ブランチを作成（または既存のリセット）します。したがって、本番ビルドのデプロイに使用される既存の &lt;code&gt;gh-pages&lt;/code&gt; ブランチがある場合は、必要に応じて簡単にロールバックできるように、コンテンツのバックアップを別のブランチに作成してください。</target>
        </trans-unit>
        <trans-unit id="453d11f1f372eeba4245b42949b067b786f0d50d" translate="yes" xml:space="preserve">
          <source>The Apache web server has extensive support for content negotiation and can handle extensionless URLs by setting the &lt;a href=&quot;https://httpd.apache.org/docs/current/content-negotiation.html#multiviews&quot;&gt;multiviews&lt;/a&gt; option in your &lt;code&gt;httpd.conf&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt; file:</source>
          <target state="translated">Apache Webサーバーはコンテンツネゴシエーションを幅広くサポートしており、 &lt;code&gt;httpd.conf&lt;/code&gt; または &lt;code&gt;.htaccess&lt;/code&gt; ファイルで&lt;a href=&quot;https://httpd.apache.org/docs/current/content-negotiation.html#multiviews&quot;&gt;multiviews&lt;/a&gt;オプションを設定することにより、拡張子のないURLを処理できます。</target>
        </trans-unit>
        <trans-unit id="6f60db029a5dafe35fdca83898ba43c4e3290223" translate="yes" xml:space="preserve">
          <source>The Data Folder</source>
          <target state="translated">データフォルダ</target>
        </trans-unit>
        <trans-unit id="4f65a794b94efa066f90c880f3c46026c77e594e" translate="yes" xml:space="preserve">
          <source>The Date assigned to the Post. This can be overridden in a Post&amp;rsquo;s front matter by specifying a new date/time in the format &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; (assuming UTC), or &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; (to specify a time zone using an offset from UTC. e.g. &lt;code&gt;2008-12-14 10:30:00 +0900&lt;/code&gt;).</source>
          <target state="translated">投稿に割り当てられた日付。これは、新しい日付/時刻を &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; （UTCと仮定）、または &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; （ UTCからのオフセットを使用してタイムゾーンを指定します。例： &lt;code&gt;2008-12-14 10:30:00 +0900&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a8bbe3d9099df1f1edc385ef16c79952cca8b1ee" translate="yes" xml:space="preserve">
          <source>The HTML Proofer Executable</source>
          <target state="translated">HTML プルーファ実行ファイル</target>
        </trans-unit>
        <trans-unit id="b5c2a258e001242549577b3975b1a4eff528efd8" translate="yes" xml:space="preserve">
          <source>The HTML Proofer Library</source>
          <target state="translated">HTMLプルーファライブラリ</target>
        </trans-unit>
        <trans-unit id="bc05cd9f65558d68bd3f3f4ae9643c32c6c421e8" translate="yes" xml:space="preserve">
          <source>The Jekyll Command</source>
          <target state="translated">ジキルコマンド</target>
        </trans-unit>
        <trans-unit id="5a12749cf3b9b4208ca23848a2980ed3511bb09d" translate="yes" xml:space="preserve">
          <source>The Jekyll gem makes a &lt;code&gt;jekyll&lt;/code&gt; executable available to you in your Terminal window. You can use this command in a number of ways:</source>
          <target state="translated">Jekyll gemは、ターミナルウィンドウで &lt;code&gt;jekyll&lt;/code&gt; 実行可能ファイルを使用できるようにします。このコマンドはさまざまな方法で使用できます。</target>
        </trans-unit>
        <trans-unit id="4ca9c9f48b5e93e97d411fd5b6ff1bd56da6dca0" translate="yes" xml:space="preserve">
          <source>The Jekyll gem makes a &lt;code&gt;jekyll&lt;/code&gt; executable available to you in your terminal.</source>
          <target state="translated">Jekyll gemは、 &lt;code&gt;jekyll&lt;/code&gt; 実行可能ファイルを使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="e4ae3b66f42418ec34e5b727643d2151d3a4e786" translate="yes" xml:space="preserve">
          <source>The Jekyll project repository itself is a perfect example of this branch structure&amp;mdash;the &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;master branch&lt;/a&gt; contains the actual software project for Jekyll, and the Jekyll website that you&amp;rsquo;re looking at right now is contained in the &lt;a href=&quot;https://github.com/jekyll/jekyll/tree/master/docs&quot;&gt;docs folder&lt;/a&gt; of the same repository.</source>
          <target state="translated">Jekyllプロジェクトリポジトリ自体がこのブランチ構造の完璧な例です。&lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;マスターブランチ&lt;/a&gt;にはJekyllの実際のソフトウェアプロジェクトが含まれており、現在表示しているJekyll Webサイトは同じリポジトリの&lt;a href=&quot;https://github.com/jekyll/jekyll/tree/master/docs&quot;&gt;docsフォルダー&lt;/a&gt;に含まれています。</target>
        </trans-unit>
        <trans-unit id="883abcc631b039dcc2e7dd273ebc23da68c2d88d" translate="yes" xml:space="preserve">
          <source>The Jekyll site we&amp;rsquo;ll be using for the rest of this page initially consists of just a &lt;code&gt;_config.yml&lt;/code&gt;, an &lt;code&gt;index.md&lt;/code&gt; page and a &lt;code&gt;Gemfile&lt;/code&gt;. The contents are respectively:</source>
          <target state="translated">私たちは、このページの残りの部分のために使用されますジキルサイトは最初だけで構成されてい &lt;code&gt;_config.yml&lt;/code&gt; 、 &lt;code&gt;index.md&lt;/code&gt; ページと &lt;code&gt;Gemfile&lt;/code&gt; 。内容はそれぞれ：</target>
        </trans-unit>
        <trans-unit id="9f7b363d7bb8629580831520270146fdabd9d747" translate="yes" xml:space="preserve">
          <source>The Posts Folder</source>
          <target state="translated">投稿フォルダ</target>
        </trans-unit>
        <trans-unit id="b4f586a6f482917778790b090fab3a1b33e8d3fe" translate="yes" xml:space="preserve">
          <source>The Sass converter will default the &lt;code&gt;sass_dir&lt;/code&gt; configuration option to &lt;code&gt;_sass&lt;/code&gt;.</source>
          <target state="translated">Sassコンバーターは、デフォルトで &lt;code&gt;sass_dir&lt;/code&gt; 構成オプションを &lt;code&gt;_sass&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="4a29073bd4807ee992ba4e2f23e3f1865e57d71a" translate="yes" xml:space="preserve">
          <source>The URL of the Post without the domain, but with a leading slash, e.g. &lt;code&gt;/2008/12/14/my-post.html&lt;/code&gt;</source>
          <target state="translated">ドメインなしで先頭にスラッシュが付いた投稿のURL（例： &lt;code&gt;/2008/12/14/my-post.html&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f17187466f6ecc4c73161aa2ab9f1af86b2a36cd" translate="yes" xml:space="preserve">
          <source>The URL of the rendered collection. The file is only written to the destination when the collection to which it belongs has &lt;code&gt;output: true&lt;/code&gt; in the site's configuration.</source>
          <target state="translated">レンダリングされたコレクションのURL。ファイルは、それが属するコレクションがサイトの構成で &lt;code&gt;output: true&lt;/code&gt; を持っている場合にのみ宛先に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="c60bd519de2c1efae2e2361782ce6ba4bc064f9c" translate="yes" xml:space="preserve">
          <source>The `Time` the file was last modified, e.g. &lt;code&gt;2016-04-01 16:35:26 +0200&lt;/code&gt;</source>
          <target state="translated">ファイルが最後に変更された「時間」。例： &lt;code&gt;2016-04-01 16:35:26 +0200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95816e3e6b937460e49d18e3369071d799c5f9fc" translate="yes" xml:space="preserve">
          <source>The above example depicts the &amp;ldquo;warn&amp;rdquo; value, which is already set by default- &lt;code&gt;error_mode: warn&lt;/code&gt;. This results in any issues being called out during the build process however will continue to build if possible.</source>
          <target state="translated">上記の例は、デフォルトですでに設定されている「警告」値を示しています &lt;code&gt;error_mode: warn&lt;/code&gt; 。これにより、ビルドプロセス中に問題が発生しますが、可能であればビルドを続行します。</target>
        </trans-unit>
        <trans-unit id="d948940dd2596a3cab1e1a093d41c70c44f3f75e" translate="yes" xml:space="preserve">
          <source>The above workflow can be explained as the following:</source>
          <target state="translated">上記のワークフローは、以下のように説明することができる。</target>
        </trans-unit>
        <trans-unit id="3c95e94b845ee32f7d98f7caea42801a64174689" translate="yes" xml:space="preserve">
          <source>The action needs permissions to push to your &lt;code&gt;gh-pages&lt;/code&gt; branch. So you need to create a GitHub &lt;strong&gt;authentication token&lt;/strong&gt; on your GitHub profile, then set it as an environment variable in your build using &lt;em&gt;Secrets&lt;/em&gt;:</source>
          <target state="translated">アクションには、 &lt;code&gt;gh-pages&lt;/code&gt; ブランチにプッシュするための権限が必要です。したがって、GitHubプロファイルにGitHub&lt;strong&gt;認証トークン&lt;/strong&gt;を作成し、&lt;em&gt;Secrets&lt;/em&gt;を使用してビルドの環境変数として設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f75f038d27f3676e1e2fe7cc72f7bfb6b448d956" translate="yes" xml:space="preserve">
          <source>The action we&amp;rsquo;re using takes care of installing the Ruby gems and dependencies. While that keeps the setup simple for the user, one may encounter issues if they also check-in &lt;code&gt;Gemfile.lock&lt;/code&gt; if it was generated with an old version of Bundler.</source>
          <target state="translated">私たちが使用しているアクションは、Rubygemと依存関係のインストールを処理します。これにより、ユーザーはセットアップを簡単に行うことができますが、古いバージョンのBundlerで生成された &lt;code&gt;Gemfile.lock&lt;/code&gt; もチェックインすると、問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2397f25be69740f387eb075765b96597329f7893" translate="yes" xml:space="preserve">
          <source>The argument to the &lt;code&gt;highlight&lt;/code&gt; tag (&lt;code&gt;ruby&lt;/code&gt; in the example above) is the language identifier. To find the appropriate identifier to use for the language you want to highlight, look for the &amp;ldquo;short name&amp;rdquo; on the &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge wiki&lt;/a&gt; or the &lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;Pygments&amp;rsquo; Lexers page&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;highlight&lt;/code&gt; タグ（上の例では &lt;code&gt;ruby&lt;/code&gt; ）の引数は言語識別子です。強調表示する言語に使用する適切な識別子を見つけるには、&lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;ルージュウィキ&lt;/a&gt;または&lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;Pygmentsの字句解析ページで&lt;/a&gt;「短縮名」を探します。</target>
        </trans-unit>
        <trans-unit id="63c48e46e2dd74954f7115b56f60300f97270f85" translate="yes" xml:space="preserve">
          <source>The argument to the &lt;code&gt;highlight&lt;/code&gt; tag (&lt;code&gt;ruby&lt;/code&gt; in the example above) is the language identifier. To find the appropriate identifier to use for the language you want to highlight, look for the &amp;ldquo;short name&amp;rdquo; on the &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge wiki&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;highlight&lt;/code&gt; タグ（上記の例では &lt;code&gt;ruby&lt;/code&gt; ）の引数は、言語識別子です。あなたはハイライト、上の「短い名前」について見てみたい言語に使用するための適切な識別子検索するには&lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;ルージュのwikiを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e142e7d922bb00ee7ccafb06638b76b84605d746" translate="yes" xml:space="preserve">
          <source>The author can then be specified as a page variable in a post&amp;rsquo;s front matter:</source>
          <target state="translated">次に、投稿の前書きで作成者をページ変数として指定できます。</target>
        </trans-unit>
        <trans-unit id="de3699015c539ff487998ff6eafb1f53089592c2" translate="yes" xml:space="preserve">
          <source>The author can then be specified as a page variable in a post&amp;rsquo;s frontmatter:</source>
          <target state="translated">投稿者は、投稿のフロントマターでページ変数として指定できます。</target>
        </trans-unit>
        <trans-unit id="6a94f37fadd7da4c6b1ad9595de211831c917d18" translate="yes" xml:space="preserve">
          <source>The best way to install Jekyll is via &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;. At the terminal prompt, simply run the following command to install Jekyll:</source>
          <target state="translated">Jekyllをインストールする最善の方法は、&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGemsを使用すること&lt;/a&gt;です。端末プロンプトで、次のコマンドを実行してJekyllをインストールします。</target>
        </trans-unit>
        <trans-unit id="7e1bc14a58f9132372733aab2f3c315cdce4526c" translate="yes" xml:space="preserve">
          <source>The build script file needs to have the &lt;em&gt;executable&lt;/em&gt; attribute set or Travis will fail with a permission denied error. You can also run this locally and commit the permissions directly, thus rendering this step irrelevant.</source>
          <target state="translated">ビルドスクリプトファイルには&lt;em&gt;実行可能&lt;/em&gt;属性を設定する必要があります。そうしないと、Travisはアクセス許可拒否エラーで失敗します。これをローカルで実行して権限を直接コミットすることもできるので、このステップは無関係になります。</target>
        </trans-unit>
        <trans-unit id="9a28e5b5ecc753f02df3722d44be4cc111642c27" translate="yes" xml:space="preserve">
          <source>The collections are also available under &lt;code&gt;site.collections&lt;/code&gt;, with the metadata you specified in your &lt;code&gt;_config.yml&lt;/code&gt; (if present) and the following information:</source>
          <target state="translated">コレクションは &lt;code&gt;site.collections&lt;/code&gt; でも利用でき、 &lt;code&gt;_config.yml&lt;/code&gt; （存在する場合）で指定したメタデータと次の情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="4922c5c33c00d746b65dd822422c6021bc3632c8" translate="yes" xml:space="preserve">
          <source>The complete list of available hooks is below:</source>
          <target state="translated">利用可能なフックの一覧は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="aec9c027612411df4fccea6e5474c3b76d899c16" translate="yes" xml:space="preserve">
          <source>The complete list of available hooks:</source>
          <target state="translated">利用可能なフックの完全なリストです。</target>
        </trans-unit>
        <trans-unit id="e127986025eeef41ee36416b8aa30c4c328c3bb6" translate="yes" xml:space="preserve">
          <source>The config flag explicitly specifies your configuration file(s)</source>
          <target state="translated">config フラグは設定ファイルを明示的に指定します。</target>
        </trans-unit>
        <trans-unit id="cd1f5fe794b0d7a1e3592860f1795f4726f9ed63" translate="yes" xml:space="preserve">
          <source>The content of the Page, rendered or un-rendered depending upon what Liquid is being processed and what &lt;code&gt;page&lt;/code&gt; is.</source>
          <target state="translated">処理されているLiquidと &lt;code&gt;page&lt;/code&gt; が何であるかに応じて、レンダリングされた、またはレンダリングされなかったページのコンテンツ。</target>
        </trans-unit>
        <trans-unit id="0ad84f221f09a5cca8473177feb743d0286dfc3a" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Files and folders you wish to retain in &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; may be specified within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.</source>
          <target state="translated">&lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; のコンテンツは、サイトの構築時に、デフォルトで自動的に消去されます。サイトで作成されていないファイルまたはフォルダーは削除されます。 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; に保持するファイルとフォルダーは、 &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; 構成ディレクティブで指定できます。</target>
        </trans-unit>
        <trans-unit id="ced790b62fc4d3512128b154b5dad8c8dd6b59d5" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Some files could be retained by specifying them within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.</source>
          <target state="translated">&lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; のコンテンツは、サイトの構築時に、デフォルトで自動的に消去されます。サイトで作成されていないファイルまたはフォルダーは削除されます。一部のファイルは、 &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; 構成ディレクティブ内で指定することにより保持できます。</target>
        </trans-unit>
        <trans-unit id="b8e9c8d15bd8417fab41ce40cea38519f11b5ec7" translate="yes" xml:space="preserve">
          <source>The current time (when you run the &lt;code&gt;jekyll&lt;/code&gt; command).</source>
          <target state="translated">現在の時刻（ &lt;code&gt;jekyll&lt;/code&gt; コマンドを実行したとき）。</target>
        </trans-unit>
        <trans-unit id="81333770209a28d4fb803c7b6d048bd62c30f009" translate="yes" xml:space="preserve">
          <source>The date of the document's collection.</source>
          <target state="translated">文書が収集された日付。</target>
        </trans-unit>
        <trans-unit id="461cca207b53f8ae0b009479df21150c362e5974" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;JEKYLL_ENV&lt;/code&gt; is &lt;code&gt;development&lt;/code&gt;. Therefore if you omit &lt;code&gt;JEKYLL_ENV&lt;/code&gt; from the build arguments, the default value will be &lt;code&gt;JEKYLL_ENV=development&lt;/code&gt;. Any content inside &lt;code&gt;{% if jekyll.environment == &quot;development&quot; %}&lt;/code&gt; tags will automatically appear in the build.</source>
          <target state="translated">&lt;code&gt;JEKYLL_ENV&lt;/code&gt; のデフォルト値は &lt;code&gt;development&lt;/code&gt; です。したがって、ビルド引数から &lt;code&gt;JEKYLL_ENV&lt;/code&gt; を省略すると、デフォルト値は &lt;code&gt;JEKYLL_ENV=development&lt;/code&gt; になります。 &lt;code&gt;{% if jekyll.environment == &quot;development&quot; %}&lt;/code&gt; タグ内のコンテンツはすべて、ビルドに自動的に表示されます。</target>
        </trans-unit>
        <trans-unit id="e78a26f993e07d954fb2ad1739f3350189468235" translate="yes" xml:space="preserve">
          <source>The demo site uses Jekyll 4 and a &lt;a href=&quot;https://rubygems.org/gems/jekyll-timeago&quot;&gt;third-party plugin&lt;/a&gt;, both of which are currently not whitelisted for use on GitHub pages. The plugin will allow us to describe how far back a date was from today. e.g. If we give a date as &lt;code&gt;2016-03-23T10:20:00Z&lt;/code&gt; and the current date is &lt;code&gt;2020-04-13T10:20:00Z&lt;/code&gt;, then the output would be &lt;code&gt;4 years and 3 weeks ago&lt;/code&gt;.</source>
          <target state="translated">デモサイトでは、Jekyll 4と&lt;a href=&quot;https://rubygems.org/gems/jekyll-timeago&quot;&gt;サードパーティのプラグイン&lt;/a&gt;を使用しています。どちらも現在、GitHubページで使用するためのホワイトリストに登録されていません。プラグインを使用すると、日付が今日からどれくらい前に戻ったかを記述することができます。たとえば、日付を &lt;code&gt;2016-03-23T10:20:00Z&lt;/code&gt; とし、現在の日付を &lt;code&gt;2020-04-13T10:20:00Z&lt;/code&gt; とすると、出力は &lt;code&gt;4 years and 3 weeks ago&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="6e759d725ab2be77e845b1fa546ac2b78b7b883c" translate="yes" xml:space="preserve">
          <source>The development kit did not set the environment path for Ruby so we need to do it.</source>
          <target state="translated">開発キットではRubyの環境パスが設定されていなかったので、それをやる必要があります。</target>
        </trans-unit>
        <trans-unit id="1e43b15fe09c46cb3865b18a7f6be65df324e7bd" translate="yes" xml:space="preserve">
          <source>The document's base filename, with every sequence of spaces and non-alphanumeric characters replaced by a hyphen.</source>
          <target state="translated">スペースや英数字以外のキ ャ ラ ク タ の連続をすべてハイフンで置き換えた文書の基本ファイル名。</target>
        </trans-unit>
        <trans-unit id="fe7deb3bf2cfd08af171741db823159d78e35205" translate="yes" xml:space="preserve">
          <source>The documents are arranged in the increasing order of the key&amp;rsquo;s value. If a document does not have the front matter key defined then that document is placed immediately after sorted documents. When multiple documents do not have the front matter key defined, those documents are sorted by their dates or paths and then placed immediately after the sorted documents.</source>
          <target state="translated">ドキュメントは、キーの値の昇順で配置されます。ドキュメントにフロントマターキーが定義されていない場合、そのドキュメントはソートされたドキュメントの直後に配置されます。複数のドキュメントにフロントマターキーが定義されていない場合、それらのドキュメントは日付またはパスで並べ替えられ、並べ替えられたドキュメントの直後に配置されます。</target>
        </trans-unit>
        <trans-unit id="a9b329c139f1f25ac882ad0bf22d4dd7639f01a9" translate="yes" xml:space="preserve">
          <source>The easiest way to install Ruby and Jekyll is by using the &lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; for Windows.</source>
          <target state="translated">RubyとJekyllをインストールする最も簡単な方法は、&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller forWindows&lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="7a4d641be53fc4ded82073ab18060fbbaf5b40f1" translate="yes" xml:space="preserve">
          <source>The easiest way to manage dependencies for a Jekyll project (with or without CircleCI) is via a &lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;. You&amp;rsquo;d want to have Jekyll, any Jekyll plugins, &lt;a href=&quot;#html-proofer&quot;&gt;HTML Proofer&lt;/a&gt;, and any other gems that you are using in the &lt;code&gt;Gemfile&lt;/code&gt;. Don&amp;rsquo;t forget to version &lt;code&gt;Gemfile.lock&lt;/code&gt; as well. Here&amp;rsquo;s an example &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">Jekyllプロジェクト（CircleCIの有無にかかわらず）の依存関係を管理する最も簡単な方法は、&lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;を使用することです。あなたはジキル、任意のジキルのプラグイン、持ちたいと思い&lt;a href=&quot;#html-proofer&quot;&gt;HTMLプルーファー&lt;/a&gt;、そしてあなたが使用している他の宝石 &lt;code&gt;Gemfile&lt;/code&gt; を。 &lt;code&gt;Gemfile.lock&lt;/code&gt; のバージョンも忘れずに。これが &lt;code&gt;Gemfile&lt;/code&gt; の例です：</target>
        </trans-unit>
        <trans-unit id="d748830d1eb6c7bc2bc355bff36530957ac67d4c" translate="yes" xml:space="preserve">
          <source>The empty front matter at the top tells Jekyll it needs to process the file. The &lt;code&gt;@import &quot;main&quot;&lt;/code&gt; tells Sass to look for a file called &lt;code&gt;main.scss&lt;/code&gt; in the sass directory (&lt;code&gt;_sass/&lt;/code&gt;) by default which you already created directly under the root folder of your website).</source>
          <target state="translated">上部の空のフロントマターは、ファイルを処理する必要があることをJekyllに伝えます。 &lt;code&gt;@import &quot;main&quot;&lt;/code&gt; と呼ばれるファイルを探すためにサスを伝え &lt;code&gt;main.scss&lt;/code&gt; SASSディレクトリ（中 &lt;code&gt;_sass/&lt;/code&gt; ）すでに直接Webサイトのルートフォルダの下に作成され、デフォルトでは）。</target>
        </trans-unit>
        <trans-unit id="73a3dd4503e0c749b6e314c596e455e7cdb6d627" translate="yes" xml:space="preserve">
          <source>The extension name for the file, e.g. &lt;code&gt;.jpg&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">ファイルの拡張子名、例えば &lt;code&gt;.jpg&lt;/code&gt; のため &lt;code&gt;image.jpg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="074f8f593ef85509bc81e5b846efb4fe5391555d" translate="yes" xml:space="preserve">
          <source>The extension to be given to the output file (including the dot). Usually this will be &lt;code&gt;&quot;.html&quot;&lt;/code&gt;.</source>
          <target state="translated">出力ファイルに付与される拡張子（ドットを含む）。通常、これは &lt;code&gt;&quot;.html&quot;&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="1985dd167b56297205d3d8d895be5c175a2217a6" translate="yes" xml:space="preserve">
          <source>The filename of the post or page, e.g. &lt;code&gt;about.md&lt;/code&gt;</source>
          <target state="translated">投稿またはページのファイル名（例： &lt;code&gt;about.md&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="49c7d9ace7eb773ad1a036f9015c39577b414641" translate="yes" xml:space="preserve">
          <source>The final step is to get the site onto a production server. The most basic way to do this is to run a production build:</source>
          <target state="translated">最後のステップは、サイトを本番サーバーに設置することです。これを行う最も基本的な方法は、本番用ビルドを実行することです。</target>
        </trans-unit>
        <trans-unit id="96110bb5efbc0ba512f16b2645a5d7eeef72767f" translate="yes" xml:space="preserve">
          <source>The first and foremost requirement is a Jekyll project hosted at GitHub. Choose an existing Jekyll project or follow the &lt;a href=&quot;https://jekyllrb.com/docs&quot;&gt;Quickstart&lt;/a&gt; and push the repository to GitHub if it is not hosted there already.</source>
          <target state="translated">最初のそして最も重要な要件は、GitHubでホストされているJekyllプロジェクトです。既存のJekyllプロジェクトを選択するか、&lt;a href=&quot;https://jekyllrb.com/docs&quot;&gt;クイックスタート&lt;/a&gt;に従ってリポジトリをGitHubにプッシュします（まだホストされていない場合）。</target>
        </trans-unit>
        <trans-unit id="071a0f8feb31149cc4a872234934c640bd832437" translate="yes" xml:space="preserve">
          <source>The first build will start on its own. You can start telling CircleCI how to build your project by creating a &lt;a href=&quot;https://circleci.com/docs/configuration/&quot;&gt;circle.yml&lt;/a&gt; file in the root of your repository.</source>
          <target state="translated">最初のビルドは自動的に開始されます。リポジトリのルートに&lt;a href=&quot;https://circleci.com/docs/configuration/&quot;&gt;circle.yml&lt;/a&gt;ファイルを作成することで、CircleCIにプロジェクトの構築方法を伝えることができます。</target>
        </trans-unit>
        <trans-unit id="ff0f0dd2cb7653fe7cfb0aedeb6d8b5e84edc946" translate="yes" xml:space="preserve">
          <source>The first step is to put the template source code in &lt;code&gt;default.html&lt;/code&gt;. &lt;code&gt;content&lt;/code&gt; is a special variable, the value is the rendered content of the post or page being wrapped.</source>
          <target state="translated">最初のステップは、テンプレートのソースコードを &lt;code&gt;default.html&lt;/code&gt; に配置することです。 &lt;code&gt;content&lt;/code&gt; は特別な変数であり、値は折り返される投稿またはページのレンダリングされたコンテンツです。</target>
        </trans-unit>
        <trans-unit id="ff2aa84f0f847a851c69fbeaf082aacd65aeaef6" translate="yes" xml:space="preserve">
          <source>The folder must be named identically to the collection you defined in your &lt;code&gt;_config.yml&lt;/code&gt; file, with the addition of the preceding &lt;code&gt;_&lt;/code&gt; character.</source>
          <target state="translated">フォルダーには、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルで定義したコレクションと同じ名前を付け、先頭に &lt;code&gt;_&lt;/code&gt; 文字を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="20918523f72d93ec13db1517cbfc8928a940fdd9" translate="yes" xml:space="preserve">
          <source>The following HTML snippet should handle page one, and render a list of each page with links to all but the current page.</source>
          <target state="translated">以下のHTMLスニペットは、1ページ目を処理し、現在のページ以外へのリンクを持つ各ページのリストをレンダリングする必要があります。</target>
        </trans-unit>
        <trans-unit id="43bca52f5fc1e96c32524336aa4c0754f14b8073" translate="yes" xml:space="preserve">
          <source>The following example is a more complex generator that generates new pages. In this example, the generator will create a series of files under the &lt;code&gt;categories&lt;/code&gt; directory for each category, listing the posts in each category using the &lt;code&gt;category_index.html&lt;/code&gt; layout.</source>
          <target state="translated">次の例は、新しいページを生成するより複雑なジェネレーターです。この例では、ジェネレーターは各カテゴリの &lt;code&gt;categories&lt;/code&gt; ディレクトリの下に一連のファイルを作成し、 &lt;code&gt;category_index.html&lt;/code&gt; レイアウトを使用して各カテゴリの投稿を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="4ac3a4ea2bb7dfab17f62ce20dcfbf21480b1e99" translate="yes" xml:space="preserve">
          <source>The following table lists the template variables available for permalinks. You can use these variables in the &lt;code&gt;permalink&lt;/code&gt; property in your config file.</source>
          <target state="translated">次の表に、パーマリンクで使用できるテンプレート変数を示します。これらの変数は、設定ファイルの &lt;code&gt;permalink&lt;/code&gt; プロパティで使用できます。</target>
        </trans-unit>
        <trans-unit id="e06fe39e9c6aaf398c3c9b66746e0b4503b012f7" translate="yes" xml:space="preserve">
          <source>The front matter is where Jekyll starts to get really cool. Any file that contains a &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; front matter block will be processed by Jekyll as a special file. The front matter must be the first thing in the file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</source>
          <target state="translated">前付けは、ジキルが本当にクールになり始めるところです。&lt;a href=&quot;http://yaml.org/&quot;&gt;YAMLの&lt;/a&gt;前付けブロックを含むファイルは、Jekyllによって特別なファイルとして処理されます。前付けはファイル内の最初のものである必要があり、三点鎖線の間に設定された有効なYAMLの形式をとる必要があります。基本的な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="380fc13db84b5364759de2687c000b05b1341582" translate="yes" xml:space="preserve">
          <source>The full path to the collections's source directory.</source>
          <target state="translated">コレクションのソースディレクトリへのフルパス。</target>
        </trans-unit>
        <trans-unit id="24556f0780c34a4c2474ed19003cf32c035058f9" translate="yes" xml:space="preserve">
          <source>The full path to the document's source file.</source>
          <target state="translated">ドキュメントのソースファイルへのフルパス。</target>
        </trans-unit>
        <trans-unit id="38e774c2af112b48879984a6533c3733a5089ba7" translate="yes" xml:space="preserve">
          <source>The github-pages gem</source>
          <target state="translated">github-pages gem</target>
        </trans-unit>
        <trans-unit id="7db87227ddc536101f77023bb4d1038bdb0393ca" translate="yes" xml:space="preserve">
          <source>The goal of gem-based themes is to allow you to get all the benefits of a robust, continually updated theme without having all the theme&amp;rsquo;s files getting in your way and over-complicating what might be your primary focus: creating content.</source>
          <target state="translated">宝石ベースのテーマの目的は、すべてのテーマのファイルが邪魔になり、主な焦点である可能性があるものを過度に複雑化することなく、堅牢で継続的に更新されるテーマのすべての利点を得ることができるようにすることです：コンテンツの作成。</target>
        </trans-unit>
        <trans-unit id="203a2b909550365bbb6d53accdabeea16b65b367" translate="yes" xml:space="preserve">
          <source>The guides help you with the specifics of creating plugins. We also have some recommended best practices to help structure your plugin.</source>
          <target state="translated">このガイドでは、プラグインを作成する際の仕様について説明しています。また、プラグインの構造化に役立つ推奨のベストプラクティスもあります。</target>
        </trans-unit>
        <trans-unit id="9832241531a86fed69af41be4e9f8dbcd51ecac4" translate="yes" xml:space="preserve">
          <source>The hallmark difference between categories and tags is that categories of a post may be incorporated into &lt;a href=&quot;../permalinks/index#global&quot;&gt;the generated URL&lt;/a&gt; for the post, while tags cannot be.</source>
          <target state="translated">カテゴリとタグの特徴的な違いは、投稿のカテゴリを投稿&lt;a href=&quot;../permalinks/index#global&quot;&gt;の生成&lt;/a&gt;されたURLに組み込むことができるのに対し、タグを組み込むことはできないことです。</target>
        </trans-unit>
        <trans-unit id="4b034ea59382f65d6ad92ab4829d189f89dc9a99" translate="yes" xml:space="preserve">
          <source>The jekyll_plugins group</source>
          <target state="translated">jekyll_plugins グループ</target>
        </trans-unit>
        <trans-unit id="295cc9d2d2c4dc6d40154ebf181cd8dc4e96fa12" translate="yes" xml:space="preserve">
          <source>The label of the collection to which this document belongs. e.g. &lt;code&gt;posts&lt;/code&gt; for a post, or &lt;code&gt;puppies&lt;/code&gt; for a document at path &lt;code&gt;_puppies/rover.md&lt;/code&gt;. If not part of a collection, an empty string is returned.</source>
          <target state="translated">このドキュメントが属するコレクションのラベル。たとえば、 &lt;code&gt;posts&lt;/code&gt; の投稿、またはパス &lt;code&gt;_puppies/rover.md&lt;/code&gt; ドキュメントの &lt;code&gt;puppies&lt;/code&gt; 。コレクションの一部でない場合は、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="ba4e1bc24ab615d4e3a3cd73fc2b8010a19b5f73" translate="yes" xml:space="preserve">
          <source>The latest version, version 2.0, seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</source>
          <target state="translated">最新バージョンのバージョン2.0は、テンプレートでの &lt;code&gt;{{&lt;/code&gt; の使用を中断するようです。以前のバージョンとは異なり、2.0で &lt;code&gt;{{&lt;/code&gt; を使用すると、次のエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="90196f7c2d9516518127e48bf65c6d41d8b18d87" translate="yes" xml:space="preserve">
          <source>The list of all Posts in category &lt;code&gt;CATEGORY&lt;/code&gt;.</source>
          <target state="translated">カテゴリ &lt;code&gt;CATEGORY&lt;/code&gt; のすべての投稿のリスト。</target>
        </trans-unit>
        <trans-unit id="8716ce1782221a8588f08b35fcce746c10a765e8" translate="yes" xml:space="preserve">
          <source>The list of all Posts with tag &lt;code&gt;TAG&lt;/code&gt;.</source>
          <target state="translated">タグ &lt;code&gt;TAG&lt;/code&gt; を持つすべての投稿のリスト。</target>
        </trans-unit>
        <trans-unit id="7838fafade831ac99f6250201b69db3111bad0f8" translate="yes" xml:space="preserve">
          <source>The list of categories to which this post belongs. Categories are derived from the directory structure above the &lt;code&gt;_posts&lt;/code&gt; directory. For example, a post at &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; would have this field set to &lt;code&gt;['work', 'code']&lt;/code&gt;. These can also be specified in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">この投稿が属するカテゴリのリスト。カテゴリは、 &lt;code&gt;_posts&lt;/code&gt; ディレクトリの上のディレクトリ構造から派生します。たとえば、 &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; の投稿では、このフィールドが &lt;code&gt;['work', 'code']&lt;/code&gt; 設定されます。これらはまたで指定することができ&lt;a href=&quot;../front-matter/index&quot;&gt;、フロントの問題&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4f5bdfcd4df4e1a7077ef5853c19979f9ff4920" translate="yes" xml:space="preserve">
          <source>The list of categories to which this post belongs. Categories are derived from the directory structure above the &lt;code&gt;_posts&lt;/code&gt; directory. For example, a post at &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; would have this field set to &lt;code&gt;['work', 'code']&lt;/code&gt;. These can also be specified in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">この投稿が属するカテゴリのリスト。カテゴリは、 &lt;code&gt;_posts&lt;/code&gt; ディレクトリの上のディレクトリ構造から派生します。たとえば、 &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; の投稿では、このフィールドが &lt;code&gt;['work', 'code']&lt;/code&gt; 設定されます。これらは&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;でも指定できます。</target>
        </trans-unit>
        <trans-unit id="4c465fb09eb1d8ac0dab23ef069770ba6a0ecc7b" translate="yes" xml:space="preserve">
          <source>The list of tags to which this post belongs. These can be specified in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">この投稿が属するタグのリスト。これらはで指定することができ&lt;a href=&quot;../front-matter/index&quot;&gt;、フロントの問題&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="adc5aae74460c5b14cd23fd61101e4fb8e785167" translate="yes" xml:space="preserve">
          <source>The list of tags to which this post belongs. These can be specified in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">この投稿が属するタグのリスト。これらは&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;で指定できます。</target>
        </trans-unit>
        <trans-unit id="4ce8024977bedd11a6c5a842fd35ca7707b4eb63" translate="yes" xml:space="preserve">
          <source>The more recent &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt; jekyll-paginate-v2&lt;/a&gt; plugin supports more features. See the &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt; pagination examples&lt;/a&gt; in the repository. &lt;strong&gt;This plugin is not supported by GitHub Pages&lt;/strong&gt;.</source>
          <target state="translated">最近の&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt;プラグインは、より多くの機能をサポートしています。リポジトリの&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;ページネーションの例&lt;/a&gt;を参照してください。&lt;strong&gt;このプラグインはGitHubPagesではサポートされていません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="68a0bf74880922f66f4f16c3a505afcb88896f79" translate="yes" xml:space="preserve">
          <source>The more recent &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt; plugin supports more features. See the &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;pagination examples&lt;/a&gt; in the repository. &lt;strong&gt;This plugin is not supported by GitHub Pages&lt;/strong&gt;.</source>
          <target state="translated">最近の&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt;プラグインは、より多くの機能をサポートしています。リポジトリの&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;ページネーションの例&lt;/a&gt;をご覧ください。&lt;strong&gt;このプラグインはGitHub Pagesではサポートされていません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="db0b9456f3f33ef7469d41931327971227302f8c" translate="yes" xml:space="preserve">
          <source>The most basic test that can be run is seeing if &lt;code&gt;jekyll build&lt;/code&gt; actually works. This is a blocker, a dependency if you will, for other tests you might run on the generate site. So we&amp;rsquo;ll run Jekyll, via Bundler, in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">実行できる最も基本的なテストは、 &lt;code&gt;jekyll build&lt;/code&gt; 実際に機能するかどうかを確認することです。これはブロッカーであり、生成サイトで実行する可能性のある他のテストの場合は依存関係です。したがって、 &lt;code&gt;dependencies&lt;/code&gt; フェーズでは、Bundlerを介してJekyllを実行します。</target>
        </trans-unit>
        <trans-unit id="ed7f4dd6b02c011a4ed405a56ff2fd9197108944" translate="yes" xml:space="preserve">
          <source>The most basic test that can be run is simply seeing if &lt;code&gt;jekyll build&lt;/code&gt; actually works. This is a blocker, a dependency if you will, for other tests you might run on the generate site. So we&amp;rsquo;ll run Jekyll, via Bundler, in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">実行できる最も基本的なテストは、単に &lt;code&gt;jekyll build&lt;/code&gt; 実際に機能するかどうかを確認することです。これはブロッカーであり、依存する場合は、生成サイトで実行する可能性のある他のテストに使用できます。したがって、 &lt;code&gt;dependencies&lt;/code&gt; フェーズでは、Bundlerを介してJekyllを実行します。</target>
        </trans-unit>
        <trans-unit id="b571265a0d4e05dc04f235fc6b1b262f5c011343" translate="yes" xml:space="preserve">
          <source>The name of the document's collection.</source>
          <target state="translated">ドキュメントのコレクションの名前。</target>
        </trans-unit>
        <trans-unit id="9340a47214628fecb21babe390b9bd99998d17d5" translate="yes" xml:space="preserve">
          <source>The name of the file you want to embed can be specified as a variable instead of an actual file name. For example, suppose you defined a variable in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">埋め込むファイルの名前は、実際のファイル名の代わりに変数として指定できます。たとえば、ページの前付けに次のように変数を定義したとします。</target>
        </trans-unit>
        <trans-unit id="bee5b4727758530c5035785a048601721f38ff4a" translate="yes" xml:space="preserve">
          <source>The name of the file you want to link can be specified as a variable instead of an actual file name. For example, suppose you defined a variable in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">リンクするファイルの名前は、実際のファイル名の代わりに変数として指定できます。たとえば、ページのフロントマターで次のように変数を定義したとします。</target>
        </trans-unit>
        <trans-unit id="3e080fa25d64b3e0504153f78ce57cb3f2864d4c" translate="yes" xml:space="preserve">
          <source>The name of your collection, e.g. &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">コレクションの名前（例： &lt;code&gt;my_collection&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="26fa8a47f18a5a1edb636fe3e1835c1b2c6b35a3" translate="yes" xml:space="preserve">
          <source>The next post relative to the position of the current post in &lt;code&gt;site.posts&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; for the last entry.</source>
          <target state="translated">&lt;code&gt;site.posts&lt;/code&gt; 内の現在の投稿の位置を基準にした次の投稿。最後のエントリの &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="21900e42947b8a2188d47b9d4010bbf898418dee" translate="yes" xml:space="preserve">
          <source>The next thing you need to do is to actually display your posts in a list using the &lt;code&gt;paginator&lt;/code&gt; variable that will now be available to you. You&amp;rsquo;ll probably want to do this in one of the main pages of your site. Here&amp;rsquo;s one example of a simple way of rendering paginated Posts in a HTML file:</source>
          <target state="translated">次に必要なことは、実際に使用できる &lt;code&gt;paginator&lt;/code&gt; 変数を使用して、実際に投稿をリストに表示することです。あなたはおそらくあなたのサイトのメインページの一つでこれをしたいと思うでしょう。HTMLファイルでページ分割された投稿をレンダリングする簡単な方法の一例を次に示します。</target>
        </trans-unit>
        <trans-unit id="d2c0f63533ca859945d2209a7b7adccdfde0ae94" translate="yes" xml:space="preserve">
          <source>The number of the current page</source>
          <target state="translated">現在のページの番号</target>
        </trans-unit>
        <trans-unit id="5b68914dfdf4b44fa4d895c69f68bdc935729d17" translate="yes" xml:space="preserve">
          <source>The number of the current page.</source>
          <target state="translated">現在のページの番号です。</target>
        </trans-unit>
        <trans-unit id="a98ce2d82bebf4d945184fa1945d1763c51ebb14" translate="yes" xml:space="preserve">
          <source>The number of the next page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">次のページの番号、または後続のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22c82db2fbfe3347ab67d10c4e1c7501e79e9e2f" translate="yes" xml:space="preserve">
          <source>The number of the next page.</source>
          <target state="translated">次のページの番号です。</target>
        </trans-unit>
        <trans-unit id="79db9760842d73ebbd2841a8d0ba7f03ec68bc9a" translate="yes" xml:space="preserve">
          <source>The number of the previous page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">前のページの番号、または前のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d3b47de2f7120d16ef9022078884417a394056f" translate="yes" xml:space="preserve">
          <source>The number of the previous page.</source>
          <target state="translated">前のページの番号です。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
