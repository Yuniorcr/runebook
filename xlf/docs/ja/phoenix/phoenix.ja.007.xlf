<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="translated">Port</target>
        </trans-unit>
        <trans-unit id="8f22e24a0f14141c0a07471831a995b431c4d4a9" translate="yes" xml:space="preserve">
          <source>Positional bindings</source>
          <target state="translated">ポジションバインディング</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="1d8d45efe4711e940a65de942b245c7be34d53e8" translate="yes" xml:space="preserve">
          <source>PostgreSQL (via &lt;a href=&quot;https://github.com/elixir-ecto/postgrex&quot;&gt;&lt;code&gt;postgrex&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">PostgreSQL（&lt;a href=&quot;https://github.com/elixir-ecto/postgrex&quot;&gt; &lt;code&gt;postgrex&lt;/code&gt; &lt;/a&gt;経由）</target>
        </trans-unit>
        <trans-unit id="00163df16628eaef40506b8cec5bfb27a52396ac" translate="yes" xml:space="preserve">
          <source>PostgreSQL is a relational database server. Phoenix configures applications to use it by default, but we can switch to MySQL or MSSQL by passing the &lt;code&gt;--database&lt;/code&gt; flag when creating a new application.</source>
          <target state="translated">PostgreSQLはリレーショナルデータベースサーバーです。Phoenixは、デフォルトでそれを使用するようにアプリケーションを構成しますが、新しいアプリケーションを作成するときに &lt;code&gt;--database&lt;/code&gt; フラグを渡すことで、MySQLまたはMSSQLに切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="6d8628155ecbea56dc3de3214b9bf98106246adc" translate="yes" xml:space="preserve">
          <source>Postgres will only count a row if it was affected and will return 0 if no new entry was added.</source>
          <target state="translated">Postgresは影響を受けた場合のみ行をカウントし、新しいエントリが追加されていない場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="43be1843debfbe414dde067364b7ee2a673dc134" translate="yes" xml:space="preserve">
          <source>Predefined Options</source>
          <target state="translated">定義済みオプション</target>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Prefix</target>
        </trans-unit>
        <trans-unit id="ca26cf04dc10c40abe8bd5b4d429603695f19c64" translate="yes" xml:space="preserve">
          <source>Preload also allows functions to be given. In such cases, the function receives the IDs of the parent association and it must return the associated data. Ecto then will map this data and sort it by the relationship key:</source>
          <target state="translated">プリロードでは、関数を与えることもできます。このような場合、関数は親アソシエーションのIDを受け取り、関連付けられたデータを返さなければなりません。その後、Ectoはこのデータをマッピングし、リレーションシップキーでソートします。</target>
        </trans-unit>
        <trans-unit id="ff7140ac657faf56b763438de02e7461c0a93db8" translate="yes" xml:space="preserve">
          <source>Preload also allows queries to be given, allowing you to filter or customize how the preloads are fetched:</source>
          <target state="translated">また、プリロードではクエリを与えることができ、プリロードの取得方法をフィルタリングしたり、カスタマイズしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="a9110f27182acc231f413041578614fd22b8eb1f" translate="yes" xml:space="preserve">
          <source>Preload functions</source>
          <target state="translated">プリロード機能</target>
        </trans-unit>
        <trans-unit id="2d581adaa509265aa0b4253352fab86b0836da76" translate="yes" xml:space="preserve">
          <source>Preload queries</source>
          <target state="translated">プリロードクエリ</target>
        </trans-unit>
        <trans-unit id="0195153c4712fe97c5d243a78c341839a16f8830" translate="yes" xml:space="preserve">
          <source>Preloading and update</source>
          <target state="translated">プリロードと更新</target>
        </trans-unit>
        <trans-unit id="304623a6b5434594bc695a82d3d75f58820f512f" translate="yes" xml:space="preserve">
          <source>Preloading can also be done with a pre-defined join value:</source>
          <target state="translated">事前に定義された結合値でプリロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="449fcc848afdf91c2d970b121f64f50471d49049" translate="yes" xml:space="preserve">
          <source>Preloads all associations on the given struct or structs</source>
          <target state="translated">指定された構造体または構造体上のすべての関連付けをプリロードします。</target>
        </trans-unit>
        <trans-unit id="8ff284b72518fce2743861685658f4b586be1af9" translate="yes" xml:space="preserve">
          <source>Preloads all associations on the given struct or structs.</source>
          <target state="translated">指定された構造体または構造体上のすべての関連付けをプリロードします。</target>
        </trans-unit>
        <trans-unit id="ed8bc6be23a4152960a0dd5f09b747712848aa2c" translate="yes" xml:space="preserve">
          <source>Preloads the associations into the result set</source>
          <target state="translated">結果セットに関連付けをプリロードします。</target>
        </trans-unit>
        <trans-unit id="6e1fba265bbc07b1018f3daff40a29e8807cf715" translate="yes" xml:space="preserve">
          <source>Preloads the associations into the result set.</source>
          <target state="translated">結果セットに関連付けをプリロードします。</target>
        </trans-unit>
        <trans-unit id="e712bebf7898f5514cba7310bf2e423398e6a8f4" translate="yes" xml:space="preserve">
          <source>Prepends the list of headers to the connection response headers</source>
          <target state="translated">接続レスポンスヘッダにヘッダのリストを前置します。</target>
        </trans-unit>
        <trans-unit id="c8238eff0c74999befc9cd4bffa90cdc7f34ffd6" translate="yes" xml:space="preserve">
          <source>Prepends the list of headers to the connection response headers.</source>
          <target state="translated">接続応答ヘッダにヘッダのリストを前置します。</target>
        </trans-unit>
        <trans-unit id="1eaa5c07101c4c96d10c35b7c91b844b4826eb41" translate="yes" xml:space="preserve">
          <source>Prepends the second multi to the first one</source>
          <target state="translated">2つ目のマルチを1つ目のマルチにプリペンドします。</target>
        </trans-unit>
        <trans-unit id="5f56bddd7cd54b857167ed79f490fa02ef38fcf8" translate="yes" xml:space="preserve">
          <source>Prepends the second multi to the first one.</source>
          <target state="translated">2つ目のマルチを1つ目のマルチにプリペンドします。</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="87c03f8e193e2a1d889cbeee77155f96b4f96f39" translate="yes" xml:space="preserve">
          <source>Presence data structure</source>
          <target state="translated">プレゼンスデータ構造</target>
        </trans-unit>
        <trans-unit id="1bf230814fff81dd8a0b32cf0b2e76e4135a707d" translate="yes" xml:space="preserve">
          <source>Presence datastructure</source>
          <target state="translated">プレゼンスのデータ構造</target>
        </trans-unit>
        <trans-unit id="5d08b2e5f9de0676df3a449fc17978467cbe92c4" translate="yes" xml:space="preserve">
          <source>Presence metadata should be minimized and used to store small, ephemeral state, such as a user&amp;rsquo;s &amp;ldquo;online&amp;rdquo; or &amp;ldquo;away&amp;rdquo; status. More detailed information, such as user details that need to be fetched from the database, can be achieved by overriding the &lt;code&gt;fetch/2&lt;/code&gt; function. The &lt;code&gt;fetch/2&lt;/code&gt; callback is triggered when using &lt;code&gt;list/1&lt;/code&gt; and serves as a mechanism to fetch presence information a single time, before broadcasting the information to all channel subscribers. This prevents N query problems and gives you a single place to group isolated data fetching to extend presence metadata. The function must return a map of data matching the outlined Presence datastructure, including the &lt;code&gt;:metas&lt;/code&gt; key, but can extend the map of information to include any additional information. For example:</source>
          <target state="translated">プレゼンスメタデータは最小化し、ユーザーの「オンライン」または「不在」ステータスなどの小さな一時的な状態を保存するために使用する必要があります。データベースからフェッチする必要のあるユーザーの詳細など、より詳細な情報は、 &lt;code&gt;fetch/2&lt;/code&gt; 関数をオーバーライドすることで実現できます。 &lt;code&gt;fetch/2&lt;/code&gt; 使用時コールバックがトリガされる &lt;code&gt;list/1&lt;/code&gt; 、すべてのチャンネルの加入者への情報を放送する前に、プレゼンス情報を単一のタイムフェッチする機構として働きます。これにより、Nクエリの問題が回避され、分離されたデータのフェッチをグループ化してプレゼンスメタデータを拡張する単一の場所が提供されます。関数は、 &lt;code&gt;:metas&lt;/code&gt; metasを含む、概説されたプレゼンスデータ構造に一致するデータのマップを返す必要がありますキーですが、情報のマップを拡張して追加情報を含めることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="a416b4573cdb9c8201cb1108e5abba31b620032d" translate="yes" xml:space="preserve">
          <source>Presence metadata should be minimized and used to store small, ephemeral state, such as a user's &quot;online&quot; or &quot;away&quot; status. More detailed information, such as user details that need to be fetched from the database, can be achieved by overriding the &lt;a href=&quot;#c:fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">プレゼンスメタデータは最小化して、ユーザーの「オンライン」または「不在」ステータスなどの小さな一時的な状態を保存するために使用する必要があります。データベースからフェッチする必要があるユーザーの詳細など、より詳細な情報は、&lt;a href=&quot;#c:fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; &lt;/a&gt;関数をオーバーライドすることで取得できます。</target>
        </trans-unit>
        <trans-unit id="f679a8e091eef73d07cba4ab47f3068b414227f9" translate="yes" xml:space="preserve">
          <source>Pretty neat, right? At compile-time, Phoenix precompiles all &lt;code&gt;*.html.eex&lt;/code&gt; templates and turns them into &lt;code&gt;render/2&lt;/code&gt; function clauses on their respective view modules. At runtime, all templates are already loaded in memory. There's no disk reads, complex file caching, or template engine computation involved.</source>
          <target state="translated">かなりきちんとしていますよね？コンパイル時に、Phoenixはすべての &lt;code&gt;*.html.eex&lt;/code&gt; テンプレートをプリコンパイルし、それぞれのビューモジュールで &lt;code&gt;render/2&lt;/code&gt; 関数句に変換します。実行時に、すべてのテンプレートはすでにメモリにロードされています。ディスクの読み取り、複雑なファイルのキャッシュ、またはテンプレートエンジンの計算は必要ありません。</target>
        </trans-unit>
        <trans-unit id="ad4e547e8cb4878118301ac4a5a99eb9df61c2f4" translate="yes" xml:space="preserve">
          <source>Pretty simple, right? Let's see this function in action by adding it to our endpoint in &lt;code&gt;lib/hello_web/endpoint.ex&lt;/code&gt;. We can plug it anywhere, so let's do it before we delegate the request to the router:</source>
          <target state="translated">とても簡単ですよね？ &lt;code&gt;lib/hello_web/endpoint.ex&lt;/code&gt; のエンドポイントに追加して、この関数の動作を見てみましょう。どこにでも接続できるので、ルーターにリクエストを委任する前に接続しましょう。</target>
        </trans-unit>
        <trans-unit id="e517ee5fd3782b5ee136558aa5e08fab77ad1688" translate="yes" xml:space="preserve">
          <source>Primary keys</source>
          <target state="translated">主キー</target>
        </trans-unit>
        <trans-unit id="d5d326173765f18d3920ac10253aee656359c234" translate="yes" xml:space="preserve">
          <source>Primary keys are automatically set up for embedded schemas as well, defaulting to &lt;code&gt;{:id, :binary_id, autogenerate: true}&lt;/code&gt;. You can customize it by passing a &lt;code&gt;:primary_key&lt;/code&gt; option with the same arguments as &lt;code&gt;@primary_key&lt;/code&gt; (see the &lt;a href=&quot;ecto.schema#module-schema-attributes&quot;&gt;Schema attributes&lt;/a&gt; section for more info).</source>
          <target state="translated">主キーは埋め込みスキーマにも自動的に設定され、デフォルトは &lt;code&gt;{:id, :binary_id, autogenerate: true}&lt;/code&gt; です。 &lt;code&gt;@primary_key&lt;/code&gt; と同じ引数を指定して &lt;code&gt;:primary_key&lt;/code&gt; オプションを渡すことでカスタマイズできます（詳細については、「&lt;a href=&quot;ecto.schema#module-schema-attributes&quot;&gt;スキーマ属性」&lt;/a&gt;セクションを参照してください）。</target>
        </trans-unit>
        <trans-unit id="2588c16289f8812a6ecec3a161121af067dfc0c2" translate="yes" xml:space="preserve">
          <source>Primitive Ecto types (handled by Ecto)</source>
          <target state="translated">原始的な Ecto 型 (Ecto が扱う)</target>
        </trans-unit>
        <trans-unit id="0093cbed38843f68b6f366917fe909fd8402e40f" translate="yes" xml:space="preserve">
          <source>Primitive Ecto types (handled by Ecto).</source>
          <target state="translated">原始的なEcto型(Ectoが扱う)。</target>
        </trans-unit>
        <trans-unit id="c7969f1f2306323d21ee870b267eca96e3a3e899" translate="yes" xml:space="preserve">
          <source>Primitive types</source>
          <target state="translated">原始型</target>
        </trans-unit>
        <trans-unit id="fe98f070edfbab910ee3be5d3d76bad2f467ce4f" translate="yes" xml:space="preserve">
          <source>Prints Ecto tasks and their information.</source>
          <target state="translated">Ectoのタスクとその情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="9df1e736d55890af35599510d5e38d8df9712b42" translate="yes" xml:space="preserve">
          <source>Prints Phoenix tasks and their information.</source>
          <target state="translated">Phoenixのタスクとその情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="4a298469066076ddb91007494cd88022b0f4cf3e" translate="yes" xml:space="preserve">
          <source>Prints all routes for the default or a given router.</source>
          <target state="translated">デフォルトまたは指定されたルータのすべてのルートを印刷します。</target>
        </trans-unit>
        <trans-unit id="82aec652f1c3e836ec44cf83ec9501b88e6be4c4" translate="yes" xml:space="preserve">
          <source>Private fields</source>
          <target state="translated">プライベートフィールド</target>
        </trans-unit>
        <trans-unit id="9e489044184e7cf5d3cda9f6aa3a63baf00a3355" translate="yes" xml:space="preserve">
          <source>Products and their category names for breadcrumbs:</source>
          <target state="translated">パン粉の商品名とそのカテゴリー名です。</target>
        </trans-unit>
        <trans-unit id="7877c89a86f5c4b6e93396bd56b4bbb6a92ccd09" translate="yes" xml:space="preserve">
          <source>Programming Phoenix 1.4 (by Bruce Tate and Phoenix core team members Chris McCord and Jos&amp;eacute; Valim - 2019)</source>
          <target state="translated">フェニックス1.4のプログラミング（ブルース・テイトとフェニックスのコアチームメンバーであるクリス・マッコードとホセ・ヴァリムによる-2019）</target>
        </trans-unit>
        <trans-unit id="801ffc72b4193c6782428c0718ed85066d64b674" translate="yes" xml:space="preserve">
          <source>Progress animation</source>
          <target state="translated">プログレスアニメーション</target>
        </trans-unit>
        <trans-unit id="475e3aae10d5c63b46ce008725e2909682e8384a" translate="yes" xml:space="preserve">
          <source>Proper handling of latency is critical for good UX. LiveView's CSS loading states allow the client to provide user feedback while awaiting a server response. In development, near zero latency on localhost does not allow latency to be easily represented or tested, so LiveView includes a latency simulator with the JavaScript client to ensure your application provides a pleasant experience. Like the &lt;code&gt;enableDebug()&lt;/code&gt; function above, the &lt;code&gt;LiveSocket&lt;/code&gt; instance includes &lt;code&gt;enableLatencySim(milliseconds)&lt;/code&gt; and &lt;code&gt;disableLatencySim()&lt;/code&gt; functions which apply throughout the current browser session. The &lt;code&gt;enableLatencySim&lt;/code&gt; function accepts an integer in milliseconds for the round-trip-time to the server. For example:</source>
          <target state="translated">優れたUXを実現するには、レイテンシを適切に処理することが重要です。 LiveViewのCSS読み込み状態により、クライアントはサーバーの応答を待っている間にユーザーフィードバックを提供できます。開発では、ローカルホストでのレイテンシーがほぼゼロであるため、レイテンシーを簡単に表現またはテストできないため、LiveViewにはJavaScriptクライアントを備えたレイテンシーシミュレーターが含まれており、アプリケーションが快適なエクスペリエンスを提供できるようにします。よう &lt;code&gt;enableDebug()&lt;/code&gt; 上記関数、 &lt;code&gt;LiveSocket&lt;/code&gt; のインスタンスは、 &lt;code&gt;enableLatencySim(milliseconds)&lt;/code&gt; と &lt;code&gt;disableLatencySim()&lt;/code&gt; 現在のブラウザセッションを通じて適用機能します。 &lt;code&gt;enableLatencySim&lt;/code&gt; の機能は、サーバーへのラウンドトリップ時間のミリ秒単位の整数値を受け入れます。例えば：</target>
        </trans-unit>
        <trans-unit id="ee62e44d9fc28f0e40981ad46d74e22429e353a0" translate="yes" xml:space="preserve">
          <source>Pros and Cons</source>
          <target state="translated">賛否両論</target>
        </trans-unit>
        <trans-unit id="00d7bff394707ff8ca7c92bbbd9cdf113ae8278b" translate="yes" xml:space="preserve">
          <source>Protocol Versioning</source>
          <target state="translated">プロトコルのバージョン管理</target>
        </trans-unit>
        <trans-unit id="2a6e3082f7bd2a56b001fbb1624e361e5599002d" translate="yes" xml:space="preserve">
          <source>Protocols</source>
          <target state="translated">Protocols</target>
        </trans-unit>
        <trans-unit id="780f5573a265cc23b30d338cabcd3ea38a94ed92" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;~E&lt;/code&gt; sigil with HTML safe EEx syntax inside source files.</source>
          <target state="translated">提供 &lt;code&gt;~E&lt;/code&gt; 印章とHTMLの安全のEEX構文内のソースファイルを。</target>
        </trans-unit>
        <trans-unit id="37a68a4ca8b314125d991ac037e071234c234845" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;~L&lt;/code&gt; sigil with HTML safe Live EEx syntax inside source files.</source>
          <target state="translated">提供 &lt;code&gt;~L&lt;/code&gt; HTML安全なライブはEEx構文内のソースファイルとの印章。</target>
        </trans-unit>
        <trans-unit id="687a61c55b17542323d929bd200a10884a0e91be" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;~e&lt;/code&gt; sigil with HTML safe EEx syntax inside source files.</source>
          <target state="translated">提供 &lt;code&gt;~e&lt;/code&gt; のソースファイル内のシギルを持つHTML安全のEEX構文を。</target>
        </trans-unit>
        <trans-unit id="d5a43c76749f2977a1181182f43e7ec44e6865ad" translate="yes" xml:space="preserve">
          <source>Provides LiveView routing for Phoenix routers.</source>
          <target state="translated">Phoenix ルーターに LiveView ルーティングを提供します。</target>
        </trans-unit>
        <trans-unit id="998f97af64a3938f5709a872c30f27a4b5e7a966" translate="yes" xml:space="preserve">
          <source>Provides Presence tracking to processes and channels.</source>
          <target state="translated">プロセスとチャネルにプレゼンスのトラッキングを提供します。</target>
        </trans-unit>
        <trans-unit id="e3d44138048976fdd4f21cedc40e7d02b11f8872" translate="yes" xml:space="preserve">
          <source>Provides a function executed by the repository on insert/update/delete.</source>
          <target state="translated">insert/update/delete時にリポジトリが実行する関数を提供します。</target>
        </trans-unit>
        <trans-unit id="d34511baecbee2b647331ac6eec3703d31533067" translate="yes" xml:space="preserve">
          <source>Provides a function to run before emitting changes to the repository</source>
          <target state="translated">リポジトリへの変更を放出する前に実行する関数を提供します。</target>
        </trans-unit>
        <trans-unit id="51994184213ec7cfcec62e33c13c2bc71ab7f50d" translate="yes" xml:space="preserve">
          <source>Provides a function to run before emitting changes to the repository.</source>
          <target state="translated">リポジトリへの変更点を放出する前に実行する関数を提供します。</target>
        </trans-unit>
        <trans-unit id="9b979a1bb30192f6df28ff86089f8880a0ed2d5f" translate="yes" xml:space="preserve">
          <source>Provides a keyword list of default configuration for socket transports</source>
          <target state="translated">ソケットトランスポートのデフォルト設定のキーワードリストを提供します。</target>
        </trans-unit>
        <trans-unit id="f1c971eb806de2d6bb68ff53036312dadf3d1f30" translate="yes" xml:space="preserve">
          <source>Provides a keyword list of default configuration for socket transports.</source>
          <target state="translated">ソケットトランスポートのデフォルト構成のキーワードリストを提供します。</target>
        </trans-unit>
        <trans-unit id="9d55f86792e5cf44aad6965f41554bd9b735d6b9" translate="yes" xml:space="preserve">
          <source>Provides a server child specification to be started under the endpoint</source>
          <target state="translated">エンドポイントの下で起動するサーバ子仕様を提供します。</target>
        </trans-unit>
        <trans-unit id="8682306f1ef165bae5c2cd28457fc3f9eb9169dd" translate="yes" xml:space="preserve">
          <source>Provides a server child specification to be started under the endpoint.</source>
          <target state="translated">エンドポイントの下で起動するサーバーの子指定を提供します。</target>
        </trans-unit>
        <trans-unit id="ba8a0eb4a37b52358e3cb2fe1dbb14623bdab7c7" translate="yes" xml:space="preserve">
          <source>Provides an ORSWOT CRDT.</source>
          <target state="translated">ORSWOT CRDTを提供します。</target>
        </trans-unit>
        <trans-unit id="73232c78dcef985cdff9857c0fd2512dd7d0853b" translate="yes" xml:space="preserve">
          <source>Provides distributed Presence tracking to processes.</source>
          <target state="translated">プロセスに分散型プレゼンス・トラッキングを提供します。</target>
        </trans-unit>
        <trans-unit id="44be9870ae1bd5112e9210a7645bdf4a6faceafb" translate="yes" xml:space="preserve">
          <source>Provides support for row-level pessimistic locking using &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; or other, database-specific, locking clauses. &lt;code&gt;expr&lt;/code&gt; can be any expression but has to evaluate to a boolean value or to a string and it can&amp;rsquo;t include any fields.</source>
          <target state="translated">&lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; またはその他のデータベース固有のロック句を使用して、行レベルの悲観的ロックをサポートします。 &lt;code&gt;expr&lt;/code&gt; は任意の式にすることができますが、ブール値または文字列に評価する必要があり、フィールドを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="7b19d0a9f2b10e76159a9372ebc4aa93900c6236" translate="yes" xml:space="preserve">
          <source>Provides support for row-level pessimistic locking using &lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; or other, database-specific, locking clauses. &lt;code&gt;expr&lt;/code&gt; can be any expression but has to evaluate to a boolean value or to a string and it can't include any fields.</source>
          <target state="translated">&lt;code&gt;SELECT ... FOR UPDATE&lt;/code&gt; またはその他のデータベース固有のロック句を使用した行レベルのペシミスティックロックのサポートを提供します。 &lt;code&gt;expr&lt;/code&gt; は任意の式にすることができますが、ブール値または文字列に評価する必要があり、フィールドを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="d5eb2c4db6daf7a18463ffbaa31d480a7a2ee937" translate="yes" xml:space="preserve">
          <source>Provides the Query DSL.</source>
          <target state="translated">クエリ DSL を提供します。</target>
        </trans-unit>
        <trans-unit id="5cc490a5d56473eaf126a919ed9e5f3d868ce250" translate="yes" xml:space="preserve">
          <source>Providing secure defaults</source>
          <target state="translated">安全なデフォルトの提供</target>
        </trans-unit>
        <trans-unit id="1276f3b4f4dd53c6f5d22c75ea5ee23f93c6dfb6" translate="yes" xml:space="preserve">
          <source>Proxy type to the adapter meta</source>
          <target state="translated">アダプタメタへのプロキシタイプ</target>
        </trans-unit>
        <trans-unit id="5a34389b39c3b88f292ed74ab2d16c7cacfb3495" translate="yes" xml:space="preserve">
          <source>PubSub adapters run inside their own supervision tree. If you are interested in providing your own adapter, let&amp;rsquo;s call it &lt;code&gt;Phoenix.PubSub.MyQueue&lt;/code&gt;, the first step is to provide a supervisor module that receives the server name and a bunch of options on &lt;code&gt;start_link/2&lt;/code&gt;:</source>
          <target state="translated">PubSubアダプターは、独自の監視ツリー内で実行されます。独自のアダプターを提供することに興味がある場合は、それを &lt;code&gt;Phoenix.PubSub.MyQueue&lt;/code&gt; と呼びましょう。最初のステップは、サーバー名と &lt;code&gt;start_link/2&lt;/code&gt; の一連のオプションを受け取るスーパーバイザモジュールを提供することです。</target>
        </trans-unit>
        <trans-unit id="5d2a845d92daf366b87a96034042e6b435a1c537" translate="yes" xml:space="preserve">
          <source>PubSub implementation for handling local-node process groups.</source>
          <target state="translated">ローカルノードのプロセスグループを扱うための PubSub の実装。</target>
        </trans-unit>
        <trans-unit id="99cf009c36ce68265bfb1764fc3797590279cfc3" translate="yes" xml:space="preserve">
          <source>Pubsub adapters are often configured in your endpoint:</source>
          <target state="translated">Pubsubアダプタは、エンドポイントで構成されていることが多いです。</target>
        </trans-unit>
        <trans-unit id="0fa8f337c4243b77ae52e53077d7b3e39bafed62" translate="yes" xml:space="preserve">
          <source>Push a resource to the client</source>
          <target state="translated">リソースをクライアントにプッシュする</target>
        </trans-unit>
        <trans-unit id="8dae6f573e91623ac373ec20142b10e46bff8ca9" translate="yes" xml:space="preserve">
          <source>Push a resource to the client.</source>
          <target state="translated">リソースをクライアントにプッシュします。</target>
        </trans-unit>
        <trans-unit id="fe640326b9ef3ba06df8495f92545c8251203dc4" translate="yes" xml:space="preserve">
          <source>Pushes a message into the channel</source>
          <target state="translated">チャンネルにメッセージをプッシュします。</target>
        </trans-unit>
        <trans-unit id="ef300f5e659260d3eb4a7737cf01f710d20c2491" translate="yes" xml:space="preserve">
          <source>Pushes a message into the channel.</source>
          <target state="translated">チャンネルにメッセージをプッシュします。</target>
        </trans-unit>
        <trans-unit id="2aafdd29732bf6232c51fa8dff6c97cf039ad580" translate="yes" xml:space="preserve">
          <source>Pushes a resource to the client</source>
          <target state="translated">リソースをクライアントにプッシュする</target>
        </trans-unit>
        <trans-unit id="343e743a2165ed61ae48116989c279025c3d5d91" translate="yes" xml:space="preserve">
          <source>Pushes a resource to the client but raises if the adapter does not support server push</source>
          <target state="translated">リソースをクライアントにプッシュしますが、アダプタがサーバプッシュをサポートしていない場合は発生します。</target>
        </trans-unit>
        <trans-unit id="20fdcb6dfd8955f2c899e01fce1ff1d46da03169" translate="yes" xml:space="preserve">
          <source>Pushes a resource to the client but raises if the adapter does not support server push.</source>
          <target state="translated">リソースをクライアントにプッシュしますが、アダプタがサーバプッシュをサポートしていない場合は発生します。</target>
        </trans-unit>
        <trans-unit id="f0e508bf2a11488e99e666f2bfe6e99c4276f338" translate="yes" xml:space="preserve">
          <source>Pushes a resource to the client.</source>
          <target state="translated">リソースをクライアントにプッシュします。</target>
        </trans-unit>
        <trans-unit id="0e97f2c15978decddaafce51dad4277eb5b5c7cc" translate="yes" xml:space="preserve">
          <source>Pushes an event to the client to be consumed by hooks.</source>
          <target state="translated">フックによって消費されるイベントをクライアントにプッシュします。</target>
        </trans-unit>
        <trans-unit id="3a67f3d149b84ceeec029ab012171057049c841e" translate="yes" xml:space="preserve">
          <source>Put headers that improve browser security</source>
          <target state="translated">ブラウザのセキュリティを向上させるヘッダを置く</target>
        </trans-unit>
        <trans-unit id="f4a913b2f483af15d2f9e83b6901a9de1f588a0d" translate="yes" xml:space="preserve">
          <source>Put headers that improve browser security.</source>
          <target state="translated">ブラウザのセキュリティを向上させるヘッダを入れる。</target>
        </trans-unit>
        <trans-unit id="8ee443cfc894074df3d4ec386ad8ca2b64de4375" translate="yes" xml:space="preserve">
          <source>Puts a change on the given &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; に &lt;code&gt;value&lt;/code&gt; 変更します</target>
        </trans-unit>
        <trans-unit id="00a4f82a5c5b18560d1aacba1550b6c83f1fa5b3" translate="yes" xml:space="preserve">
          <source>Puts a change on the given &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; で指定された &lt;code&gt;key&lt;/code&gt; 変更を加えます。</target>
        </trans-unit>
        <trans-unit id="741fd025d65f46f242fb5bd6a467fa59b5895077" translate="yes" xml:space="preserve">
          <source>Puts a request cookie</source>
          <target state="translated">リクエストクッキーを置く</target>
        </trans-unit>
        <trans-unit id="7be5afb720006adb8876e294e39a4168d5efa70f" translate="yes" xml:space="preserve">
          <source>Puts a request cookie.</source>
          <target state="translated">リクエストクッキーを貼り付けます。</target>
        </trans-unit>
        <trans-unit id="4a6873e4434775312bde6568b519ae9caa4da55f" translate="yes" xml:space="preserve">
          <source>Puts a response cookie</source>
          <target state="translated">レスポンスクッキーを置く</target>
        </trans-unit>
        <trans-unit id="b6834445ae0b44b5bf121eaaab9f7de7f803ecb9" translate="yes" xml:space="preserve">
          <source>Puts a response cookie in the connection</source>
          <target state="translated">レスポンスクッキーを接続に置く</target>
        </trans-unit>
        <trans-unit id="eae2e2953d992e259527f70922816fdaa79edb2b" translate="yes" xml:space="preserve">
          <source>Puts a response cookie in the connection.</source>
          <target state="translated">レスポンスクッキーを接続に入れます。</target>
        </trans-unit>
        <trans-unit id="7c14521e098d7e0db356324b05045f4d7ed52bdb" translate="yes" xml:space="preserve">
          <source>Puts a response cookie.</source>
          <target state="translated">レスポンスクッキーを貼り付けます。</target>
        </trans-unit>
        <trans-unit id="e3756acc73bbfc2da183a76a6bc36f399be1caba" translate="yes" xml:space="preserve">
          <source>Puts connect info to be used on LiveView connections.</source>
          <target state="translated">LiveView接続で使用する接続情報を出力します。</target>
        </trans-unit>
        <trans-unit id="e1ed15f311e02338c258abe86aca78be00c9e82e" translate="yes" xml:space="preserve">
          <source>Puts connect params to be used on LiveView connections.</source>
          <target state="translated">LiveView接続で使用する接続パラメータを入力します。</target>
        </trans-unit>
        <trans-unit id="f25c1ae0cbc4f231cefcb63821a30f0fec461188" translate="yes" xml:space="preserve">
          <source>Puts the URL or &lt;code&gt;%URI{}&lt;/code&gt; to be used for the static url generation.</source>
          <target state="translated">静的URLの生成に使用されるURLまたは &lt;code&gt;%URI{}&lt;/code&gt; を配置します。</target>
        </trans-unit>
        <trans-unit id="815a50a2068711e3951e905471b283fd46344a7d" translate="yes" xml:space="preserve">
          <source>Puts the format in the connection</source>
          <target state="translated">接続にフォーマットを入れます。</target>
        </trans-unit>
        <trans-unit id="7d2d574ef257cfc83db02346e4caf116a2146dcc" translate="yes" xml:space="preserve">
          <source>Puts the format in the connection.</source>
          <target state="translated">接続にフォーマットを入れます。</target>
        </trans-unit>
        <trans-unit id="fc09e81b5f5ad87cea799616c6d979c26d068caa" translate="yes" xml:space="preserve">
          <source>Puts the given association entry or entries as a change in the changeset</source>
          <target state="translated">与えられたアソシエーション・エントリまたはエントリをチェンジセットに変更として配置します。</target>
        </trans-unit>
        <trans-unit id="54cd5c18dcae6efd2695b356d96271d86bdacd7a" translate="yes" xml:space="preserve">
          <source>Puts the given association entry or entries as a change in the changeset.</source>
          <target state="translated">与えられたアソシエーション・エントリまたはエントリをチェンジセットの変更として配置します。</target>
        </trans-unit>
        <trans-unit id="3d482cdc0094a992a33fd5968b2ef4bd5d6e9cf5" translate="yes" xml:space="preserve">
          <source>Puts the given embed entry or entries as a change in the changeset</source>
          <target state="translated">与えられた埋め込みエントリまたはエントリをチェンジセットに変更として配置します。</target>
        </trans-unit>
        <trans-unit id="d3fa1dbd91937b35d7af93ba24edaf83b40c842f" translate="yes" xml:space="preserve">
          <source>Puts the given embed entry or entries as a change in the changeset.</source>
          <target state="translated">与えられた埋め込みエントリまたはエントリを、チェンジセットの変更として配置します。</target>
        </trans-unit>
        <trans-unit id="4b7c23045b0e446a9c3e13b41adaf8ee0f958807" translate="yes" xml:space="preserve">
          <source>Puts the given prefix in a query.</source>
          <target state="translated">指定したプレフィックスをクエリに入れます。</target>
        </trans-unit>
        <trans-unit id="8019e9293126a2bd7055b604b3b1f0d984ed00ee" translate="yes" xml:space="preserve">
          <source>Puts the given value under key in the flash storage</source>
          <target state="translated">指定した値をフラッシュストレージのキーの下に配置します。</target>
        </trans-unit>
        <trans-unit id="c2c33be180ad022ed8c9916ce7573ec126324a75" translate="yes" xml:space="preserve">
          <source>Puts the given value under key in the flash storage.</source>
          <target state="translated">指定した値をフラッシュストレージのキーの下に置きます。</target>
        </trans-unit>
        <trans-unit id="37c4f691ad78c67a6b79da1230c90f39bb3ee3ef" translate="yes" xml:space="preserve">
          <source>Puts the http protocol</source>
          <target state="translated">http プロトコルを設定します。</target>
        </trans-unit>
        <trans-unit id="804d6529e64cb57585b1483683755688784089b3" translate="yes" xml:space="preserve">
          <source>Puts the http protocol.</source>
          <target state="translated">httpプロトコルを出力します。</target>
        </trans-unit>
        <trans-unit id="55b710537ff243eb1a32ec97e8a8ef433da7a8e8" translate="yes" xml:space="preserve">
          <source>Puts the peer data</source>
          <target state="translated">ピアデータを貼り付けます。</target>
        </trans-unit>
        <trans-unit id="03bbdbff15d183654a7ba17044452221ba7178e5" translate="yes" xml:space="preserve">
          <source>Puts the peer data.</source>
          <target state="translated">ピアデータを貼り付けます。</target>
        </trans-unit>
        <trans-unit id="9dcf19c9d246dc16927f6649753724b24e760346" translate="yes" xml:space="preserve">
          <source>Puts the specified &lt;code&gt;value&lt;/code&gt; in the session for the given &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; セッションに指定された &lt;code&gt;value&lt;/code&gt; を入れます</target>
        </trans-unit>
        <trans-unit id="6d6ac7ef4b3b44a8c56a6e0c8f2e56c460c8e52e" translate="yes" xml:space="preserve">
          <source>Puts the specified &lt;code&gt;value&lt;/code&gt; in the session for the given &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; セッションに指定された &lt;code&gt;value&lt;/code&gt; を書き込みます。</target>
        </trans-unit>
        <trans-unit id="0894d8085a67ad07a0624ae07069e419da43c71e" translate="yes" xml:space="preserve">
          <source>Puts the url string or &lt;code&gt;%URI{}&lt;/code&gt; to be used for route generation.</source>
          <target state="translated">ルート生成に使用されるURL文字列または &lt;code&gt;%URI{}&lt;/code&gt; を配置します。</target>
        </trans-unit>
        <trans-unit id="62d10c2aa8bacdd16162d644d77b4ee04bb0e190" translate="yes" xml:space="preserve">
          <source>Queries are defined and extended with the &lt;code&gt;from&lt;/code&gt; macro. The supported keywords are:</source>
          <target state="translated">クエリは &lt;code&gt;from&lt;/code&gt; マクロで定義および拡張されます。サポートされているキーワードは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="05c5af64d3e911887b9ce2bd58137225eabf7ce3" translate="yes" xml:space="preserve">
          <source>Queries are used to retrieve and manipulate data from a repository (see &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt;). Ecto queries come in two flavors: keyword-based and macro-based. Most examples will use the keyword-based syntax, the macro one will be explored in later sections.</source>
          <target state="translated">クエリは、リポジトリからデータを取得して操作するために使用されます（&lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; を&lt;/a&gt;参照）。外部クエリには、キーワードベースとマクロベースの2種類があります。ほとんどの例では、キーワードベースの構文を使用します。マクロの例については、後のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="translated">Query</target>
        </trans-unit>
        <trans-unit id="de8a1e1690d8b96ebb6d223c027cb63261ce097c" translate="yes" xml:space="preserve">
          <source>Query Prefix</source>
          <target state="translated">クエリ接頭辞</target>
        </trans-unit>
        <trans-unit id="5a0c44c7fb8e785d997aa2361b47b3f7d57e2ac5" translate="yes" xml:space="preserve">
          <source>Query expressions</source>
          <target state="translated">クエリ式</target>
        </trans-unit>
        <trans-unit id="e2b202096304737747a8e9856e1cf9ad13fa032f" translate="yes" xml:space="preserve">
          <source>Raised at compilation time when the query cannot be compiled.</source>
          <target state="translated">クエリをコンパイルできない場合、コンパイル時に発生します。</target>
        </trans-unit>
        <trans-unit id="4a893f6e9499b7a91b676a282a54c00522815c56" translate="yes" xml:space="preserve">
          <source>Raised at runtime when a subquery is invalid.</source>
          <target state="translated">サブクエリが無効な場合、実行時に発生します。</target>
        </trans-unit>
        <trans-unit id="b0a75a685071ded5093063f2c839160c503f347d" translate="yes" xml:space="preserve">
          <source>Raised at runtime when a value cannot be cast.</source>
          <target state="translated">値をキャストできない場合、実行時に発生します。</target>
        </trans-unit>
        <trans-unit id="039805dc5f4fed9b5afea803e51808e617e43ca3" translate="yes" xml:space="preserve">
          <source>Raised at runtime when an operation that requires a primary key is invoked with a schema missing value for its primary key</source>
          <target state="translated">主キーを必要とする操作が、主キーのスキーマの値が見つからない状態で呼び出された場合に、実行時に発生します。</target>
        </trans-unit>
        <trans-unit id="afa673fd6977e244af2ea9dc91a6d8a824062c2a" translate="yes" xml:space="preserve">
          <source>Raised at runtime when an operation that requires a primary key is invoked with a schema that does not define a primary key by using &lt;code&gt;@primary_key false&lt;/code&gt;</source>
          <target state="translated">実行時に、主キーを必要とする操作が、 &lt;code&gt;@primary_key false&lt;/code&gt; を使用して主キーを定義していないスキーマで呼び出されたときに発生しますfalse</target>
        </trans-unit>
        <trans-unit id="bcbb0dc762ca0143ba465c1a0d2d32138bda79be" translate="yes" xml:space="preserve">
          <source>Raised at runtime when the query is invalid.</source>
          <target state="translated">クエリが無効な場合、実行時に発生します。</target>
        </trans-unit>
        <trans-unit id="118f69c0714f7c01f9e9cdb531cfaa10b0d03ee9" translate="yes" xml:space="preserve">
          <source>Raised when a changeset can&amp;rsquo;t cast a value.</source>
          <target state="translated">チェンジセットが値をキャストできないときに発生します。</target>
        </trans-unit>
        <trans-unit id="e0f29df7daab7838c57e74c1be46349e23ec5a7d" translate="yes" xml:space="preserve">
          <source>Raised when a changeset can't cast a value.</source>
          <target state="translated">チェンジセットが値をキャストできない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="5a11dc0fa5c2256817b23669b7156b10e560879e" translate="yes" xml:space="preserve">
          <source>Raised when a key is expected to be present in the request parameters, but is not.</source>
          <target state="translated">リクエストパラメータにキーが存在すると予想されるが、存在しない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="42cab9ec6b573ff081054ff4fc6a8a2e4aaec900" translate="yes" xml:space="preserve">
          <source>Raised when one of the &lt;code&gt;accept*&lt;/code&gt; headers is not accepted by the server.</source>
          <target state="translated">&lt;code&gt;accept*&lt;/code&gt; ヘッダーの1つがサーバーによって受け入れられない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="b97f65fe7b14617aed938b2f2242977964dc12e0" translate="yes" xml:space="preserve">
          <source>Raised when the request body contains bad encoding.</source>
          <target state="translated">リクエストボディに不正なエンコーディングが含まれている場合に発生します。</target>
        </trans-unit>
        <trans-unit id="5d60569db9a3f0465a27300ec7b01dce02ec93b6" translate="yes" xml:space="preserve">
          <source>Raised when the request string is malformed, for example:</source>
          <target state="translated">リクエスト文字列が不正な形式の場合などに発生します。</target>
        </trans-unit>
        <trans-unit id="3cdcabdb93d143702babf6930f6c426fb8aa2f08" translate="yes" xml:space="preserve">
          <source>Raised when the socket message is invalid.</source>
          <target state="translated">ソケットメッセージが無効な場合に発生します。</target>
        </trans-unit>
        <trans-unit id="fea87b6163109a5bc634acb0e1d816c9a91f8d08" translate="yes" xml:space="preserve">
          <source>Raised when we cannot perform an action because the changeset is invalid.</source>
          <target state="translated">チェンジセットが無効なのでアクションを実行できない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="475ae2411b103f83d884dab316d4d332ad5264a5" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;../plug/1.5.1/plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; if the conn was already sent.</source>
          <target state="translated">発生させ&lt;a href=&quot;../plug/1.5.1/plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; を&lt;/a&gt; CONNがすでに送信された場合。</target>
        </trans-unit>
        <trans-unit id="460192804356e0a064cca9096055e1710bf5a0bd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;../plug/plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;conn&lt;/code&gt; is already sent.</source>
          <target state="translated">昇給&lt;a href=&quot;../plug/plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; &lt;/a&gt;場合 &lt;code&gt;conn&lt;/code&gt; すでに送信されます。</target>
        </trans-unit>
        <trans-unit id="f6b2ab76d66ab83609669089c37b6026dde4116b" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;ecto.noprimarykeyfielderror&quot;&gt;&lt;code&gt;Ecto.NoPrimaryKeyFieldError&lt;/code&gt;&lt;/a&gt; if the schema has no primary key field.</source>
          <target state="translated">発生させ&lt;a href=&quot;ecto.noprimarykeyfielderror&quot;&gt; &lt;code&gt;Ecto.NoPrimaryKeyFieldError&lt;/code&gt; を&lt;/a&gt;スキーマは、主キーフィールドを持っていない場合。</target>
        </trans-unit>
        <trans-unit id="9e432852a5cfcbc1745f137f001ef45d9f4f91c5" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the socket is not connected.</source>
          <target state="translated">発生させ&lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;ソケットが接続されていない場合。</target>
        </trans-unit>
        <trans-unit id="bcc5af49f7595bafb364615a87e41ed41850519d" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;phoenix.pubsub.broadcasterror&quot;&gt;&lt;code&gt;Phoenix.PubSub.BroadcastError&lt;/code&gt;&lt;/a&gt; if broadcast fails. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details.</source>
          <target state="translated">発生させ&lt;a href=&quot;phoenix.pubsub.broadcasterror&quot;&gt; &lt;code&gt;Phoenix.PubSub.BroadcastError&lt;/code&gt; は&lt;/a&gt;、ブロードキャストが失敗した場合。参照してください&lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; を&lt;/a&gt;使用方法の詳細については。</target>
        </trans-unit>
        <trans-unit id="6c339d06aca80d10b93ed2ba5e58b88415158abe" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;phoenix.socket.invalidmessageerror&quot;&gt;&lt;code&gt;Phoenix.Socket.InvalidMessageError&lt;/code&gt;&lt;/a&gt; if not valid.</source>
          <target state="translated">発生させ&lt;a href=&quot;phoenix.socket.invalidmessageerror&quot;&gt; &lt;code&gt;Phoenix.Socket.InvalidMessageError&lt;/code&gt; が&lt;/a&gt;有効でない場合。</target>
        </trans-unit>
        <trans-unit id="4b8b11d47003ec5caaaf54545edd2877c3adf06e" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; if the connection has already been &lt;code&gt;:sent&lt;/code&gt; or &lt;code&gt;:chunked&lt;/code&gt;.</source>
          <target state="translated">接続がすでに &lt;code&gt;:sent&lt;/code&gt; または &lt;code&gt;:chunked&lt;/code&gt; の場合、&lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7cfe7b7afc826f1392f773e233d0cdd1378710a5" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt;&lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt;&lt;/a&gt; if the header value contains control feed (&lt;code&gt;\r&lt;/code&gt;) or newline (&lt;code&gt;\n&lt;/code&gt;) characters.</source>
          <target state="translated">ヘッダー値に制御フィード（ &lt;code&gt;\r&lt;/code&gt; ）または改行（ &lt;code&gt;\n&lt;/code&gt; ）文字が含まれている場合、&lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt; &lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="bee73cc34282fce055899543de5c4645a7a37220" translate="yes" xml:space="preserve">
          <source>Raises if more than one entry.</source>
          <target state="translated">複数のエントリがある場合にはレイズします。</target>
        </trans-unit>
        <trans-unit id="f2982a9548290320e963ec17174cbd3754d9d580" translate="yes" xml:space="preserve">
          <source>Raises if the response does not match the redirect status code (defaults to 302).</source>
          <target state="translated">応答がリダイレクトステータスコードと一致しない場合に発生します (デフォルトは 302)。</target>
        </trans-unit>
        <trans-unit id="b57257fa83148b68a92b1b01038160b46f543517" translate="yes" xml:space="preserve">
          <source>Raises if the session was not yet fetched.</source>
          <target state="translated">セッションがまだ取得されていない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="76c0c35fa8f5e4f8eba486d8f7aced55594e8cd0" translate="yes" xml:space="preserve">
          <source>Raises in case of failures.</source>
          <target state="translated">失敗した場合のレイズ。</target>
        </trans-unit>
        <trans-unit id="2904017bb54ac0a5df8d68048890091d3625ccde" translate="yes" xml:space="preserve">
          <source>Raises on attempts to interpolate with &lt;code&gt;#{}&lt;/code&gt;, so &lt;code&gt;~E&lt;/code&gt; should be preferred.</source>
          <target state="translated">&lt;code&gt;#{}&lt;/code&gt; で補間しようとすると発生するため、 &lt;code&gt;~E&lt;/code&gt; を優先する必要があります。</target>
        </trans-unit>
        <trans-unit id="54897ac5b409ee4fbad6ca98e668447e3b4b2917" translate="yes" xml:space="preserve">
          <source>Raises on umbrella application.</source>
          <target state="translated">傘アプリでレイズ。</target>
        </trans-unit>
        <trans-unit id="b266dfb91e70dcf9cb786ff302db62d687a6446d" translate="yes" xml:space="preserve">
          <source>Raising version of &lt;a href=&quot;#broadcast!/4&quot;&gt;&lt;code&gt;broadcast!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#broadcast!/4&quot;&gt; &lt;code&gt;broadcast!/4&lt;/code&gt; &lt;/a&gt;レイズバージョン！/ 4。</target>
        </trans-unit>
        <trans-unit id="cf2e7c04c50ef6390ad2340375c225650b64b1d1" translate="yes" xml:space="preserve">
          <source>Raising version of &lt;a href=&quot;#broadcast_from!/5&quot;&gt;&lt;code&gt;broadcast_from!/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Broadcast_from &lt;a href=&quot;#broadcast_from!/5&quot;&gt; &lt;code&gt;broadcast_from!/5&lt;/code&gt; &lt;/a&gt;バージョンを上げています。</target>
        </trans-unit>
        <trans-unit id="0ab3f25e7a011f5c2d6c40c1aefc681fe37f18e9" translate="yes" xml:space="preserve">
          <source>Raising version of &lt;a href=&quot;#direct_broadcast!/5&quot;&gt;&lt;code&gt;direct_broadcast!/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#direct_broadcast!/5&quot;&gt; &lt;code&gt;direct_broadcast!/5&lt;/code&gt; の&lt;/a&gt;バージョンを上げています。</target>
        </trans-unit>
        <trans-unit id="e9f05aa2c47c6bff64cd5f9cf0a523af4429924d" translate="yes" xml:space="preserve">
          <source>Rate Limiting</source>
          <target state="translated">レート制限</target>
        </trans-unit>
        <trans-unit id="d112aa4ca42456553257378683fb994d7cb8d2ed" translate="yes" xml:space="preserve">
          <source>Rate limiting events with Debounce and Throttle</source>
          <target state="translated">デバウンスとスロットルによるレート制限イベント</target>
        </trans-unit>
        <trans-unit id="f4b37f3f7c65af036ff7c5735121007e76a2d3f8" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;https://github.com/phoenixframework/phoenix/blob/master/CONTRIBUTING.md#bug-reports&quot;&gt;bug reports&lt;/a&gt; or open an issue in the Phoenix &lt;a href=&quot;https://github.com/phoenixframework/phoenix/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/phoenixframework/phoenix/blob/master/CONTRIBUTING.md#bug-reports&quot;&gt;バグレポート&lt;/a&gt;について読むか、Phoenix&lt;a href=&quot;https://github.com/phoenixframework/phoenix/issues&quot;&gt;課題追跡システムで&lt;/a&gt;課題を開きます。</target>
        </trans-unit>
        <trans-unit id="fb2f7f1f24dbf8a9dc3b54234330c0d6d566463c" translate="yes" xml:space="preserve">
          <source>Read more about instrumentation in the &amp;ldquo;Instrumentation&amp;rdquo; section.</source>
          <target state="translated">インストルメンテーションについて詳しくは、「インストルメンテーション」セクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8d9f56c16fe8df709a75816e07de21409a7f7ce5" translate="yes" xml:space="preserve">
          <source>Read more about the uses of &lt;code&gt;@myself&lt;/code&gt; in the &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">使用についてもっと読む &lt;code&gt;@myself&lt;/code&gt; で&lt;a href=&quot;phoenix.livecomponent&quot;&gt; &lt;code&gt;Phoenix.LiveComponent&lt;/code&gt; の&lt;/a&gt;ドキュメント。</target>
        </trans-unit>
        <trans-unit id="cf81a76808387c613661473f19847c76f95810b7" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;ecto.type&quot;&gt;&lt;code&gt;Ecto.Type&lt;/code&gt;&lt;/a&gt; documentation for more information on implementing your own types.</source>
          <target state="translated">独自の型を実装する方法の詳細については、&lt;a href=&quot;ecto.type&quot;&gt; &lt;code&gt;Ecto.Type&lt;/code&gt; の&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="1dbbabd4aa48aa268311ff06dc85e1f5fb62633c" translate="yes" xml:space="preserve">
          <source>Read the docs in &lt;a href=&quot;plug.conn#read_body/2&quot;&gt;&lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt;&lt;/a&gt; for the supported options and expected behaviour.</source>
          <target state="translated">サポートされているオプションと予想される動作については、&lt;a href=&quot;plug.conn#read_body/2&quot;&gt; &lt;code&gt;Plug.Conn.read_body/2&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="cf9fbfe89ff9ebd0f2ce45986970e210b156155a" translate="yes" xml:space="preserve">
          <source>Read the documentation for &lt;code&gt;phx.gen.schema&lt;/code&gt; for more information on attributes.</source>
          <target state="translated">属性の詳細については、 &lt;code&gt;phx.gen.schema&lt;/code&gt; のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="c85a1cb667f5493c5954a596fc9d86416e86676f" translate="yes" xml:space="preserve">
          <source>Read-only repositories</source>
          <target state="translated">読み取り専用リポジトリ</target>
        </trans-unit>
        <trans-unit id="4302f670076b3c8c049c3fe4414fb76ece2b07cd" translate="yes" xml:space="preserve">
          <source>Reads the body of a multipart request</source>
          <target state="translated">マルチパートリクエストの本文を読み込みます。</target>
        </trans-unit>
        <trans-unit id="26c9e691a853c0a0d01f4f0830b192105639965c" translate="yes" xml:space="preserve">
          <source>Reads the body of a multipart request.</source>
          <target state="translated">マルチパートリクエストの本文を読み込みます。</target>
        </trans-unit>
        <trans-unit id="34a37224cf0ecbffc7c6c717b57d3e8ad32be014" translate="yes" xml:space="preserve">
          <source>Reads the headers of a multipart request</source>
          <target state="translated">マルチパートリクエストのヘッダを読み込みます。</target>
        </trans-unit>
        <trans-unit id="08cd121077af574953c117de80dcab7e4da635b4" translate="yes" xml:space="preserve">
          <source>Reads the headers of a multipart request.</source>
          <target state="translated">マルチパートリクエストのヘッダを読み込みます。</target>
        </trans-unit>
        <trans-unit id="1279e6d0c4c4164e055e507973ca6dd7b2e2afa0" translate="yes" xml:space="preserve">
          <source>Reads the request body</source>
          <target state="translated">リクエストボディを読み込みます。</target>
        </trans-unit>
        <trans-unit id="70e202d76afed3c97c207c8aed5eaa3b1f7107df" translate="yes" xml:space="preserve">
          <source>Reads the request body.</source>
          <target state="translated">リクエストボディを読み込みます。</target>
        </trans-unit>
        <trans-unit id="ed44565579aeede069f4272107cab6756113cacb" translate="yes" xml:space="preserve">
          <source>Real-Time Phoenix - Build Highly Scalable Systems with Channels (by Stephen Bussey - 2020)</source>
          <target state="translated">リアルタイムフェニックス-チャンネルを使ったスケーラビリティの高いシステムの構築(スティーブン・ブッシー著-2020年</target>
        </trans-unit>
        <trans-unit id="3048eb643c615ac762c128afe2f9444ebb46eb93" translate="yes" xml:space="preserve">
          <source>Real-time components - in-depth guides covering Phoenix's built-in real-time components</source>
          <target state="translated">リアルタイム・コンポーネント-Phoenixの組み込みリアルタイム・コンポーネントを網羅した詳細なガイド</target>
        </trans-unit>
        <trans-unit id="a6194ddefc6791984389b31250403e3b26bb9f18" translate="yes" xml:space="preserve">
          <source>Realtime Publisher/Subscriber service.</source>
          <target state="translated">リアルタイムパブリッシャー/サブスクライバーサービス。</target>
        </trans-unit>
        <trans-unit id="eabf5939f2bab37b43db33a656a82689c20d3d80" translate="yes" xml:space="preserve">
          <source>Receives a keyword list where keys are names of the windows and values are a keyword list with window expressions.</source>
          <target state="translated">キーはウィンドウの名前、値はウィンドウ式を含むキーワードリストを受け取ります。</target>
        </trans-unit>
        <trans-unit id="c77a8f354103b07fe0b3cd31353909c942d259b1" translate="yes" xml:space="preserve">
          <source>Receives a source that is to be joined to the query and a condition for the join. The join condition can be any expression that evaluates to a boolean value. The join is by default an inner join, the qualifier can be changed by giving the atoms: &lt;code&gt;:inner&lt;/code&gt;, &lt;code&gt;:left&lt;/code&gt;, &lt;code&gt;:right&lt;/code&gt;, &lt;code&gt;:cross&lt;/code&gt;, &lt;code&gt;:full&lt;/code&gt;, &lt;code&gt;:inner_lateral&lt;/code&gt; or &lt;code&gt;:left_lateral&lt;/code&gt;. For a keyword query the &lt;code&gt;:join&lt;/code&gt; keyword can be changed to: &lt;code&gt;:inner_join&lt;/code&gt;, &lt;code&gt;:left_join&lt;/code&gt;, &lt;code&gt;:right_join&lt;/code&gt;, &lt;code&gt;:cross_join&lt;/code&gt;, &lt;code&gt;:full_join&lt;/code&gt;, &lt;code&gt;:inner_lateral_join&lt;/code&gt; or &lt;code&gt;:left_lateral_join&lt;/code&gt;.</source>
          <target state="translated">クエリに結合されるソースと結合の条件を受け取ります。結合条件には、ブール値に評価される任意の式を使用できます。結合はデフォルトでは内部結合です。修飾子は、アトムを指定することで変更できます &lt;code&gt;:inner&lt;/code&gt; 、 &lt;code&gt;:left&lt;/code&gt; 、 &lt;code&gt;:right&lt;/code&gt; 、 &lt;code&gt;:cross&lt;/code&gt; 、 &lt;code&gt;:full&lt;/code&gt; 、 &lt;code&gt;:inner_lateral&lt;/code&gt; または &lt;code&gt;:left_lateral&lt;/code&gt; 。キーワードクエリの場合、 &lt;code&gt;:join&lt;/code&gt; キーワードを次のように変更できます &lt;code&gt;:inner_join&lt;/code&gt; 、 &lt;code&gt;:left_join&lt;/code&gt; 、 &lt;code&gt;:right_join&lt;/code&gt; 、 &lt;code&gt;:cross_join&lt;/code&gt; 、 &lt;code&gt;:full_join&lt;/code&gt; 、 &lt;code&gt;:inner_lateral_join&lt;/code&gt; または &lt;code&gt;:left_lateral_join&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ad2a4c966b04cb2feff57adf8111d3c1d972d01" translate="yes" xml:space="preserve">
          <source>Receives a source that is to be joined to the query and a condition for the join. The join condition can be any expression that evaluates to a boolean value. The qualifier must be one of &lt;code&gt;:inner&lt;/code&gt;, &lt;code&gt;:left&lt;/code&gt;, &lt;code&gt;:right&lt;/code&gt;, &lt;code&gt;:cross&lt;/code&gt;, &lt;code&gt;:full&lt;/code&gt;, &lt;code&gt;:inner_lateral&lt;/code&gt; or &lt;code&gt;:left_lateral&lt;/code&gt;.</source>
          <target state="translated">クエリに結合されるソースと結合の条件を受け取ります。結合条件は、ブール値に評価される任意の式にすることができます。修飾子は、 &lt;code&gt;:inner&lt;/code&gt; 、 &lt;code&gt;:left&lt;/code&gt; 、 &lt;code&gt;:right&lt;/code&gt; 、 &lt;code&gt;:cross&lt;/code&gt; 、 &lt;code&gt;:full&lt;/code&gt; 、 &lt;code&gt;:inner_lateral&lt;/code&gt; 、または &lt;code&gt;:left_lateral&lt;/code&gt; のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="6e5a65d84cc1617c8656889419c3e1afff0f97ff" translate="yes" xml:space="preserve">
          <source>Receives an exception and returns its HTTP status code</source>
          <target state="translated">例外を受信し、そのHTTPステータスコードを返します。</target>
        </trans-unit>
        <trans-unit id="1e0b05512f97f8ced79071f6934b97336f5bfc8e" translate="yes" xml:space="preserve">
          <source>Receives an exception and returns its HTTP status code.</source>
          <target state="translated">例外を受信し、そのHTTPステータスコードを返します。</target>
        </trans-unit>
        <trans-unit id="cb64545d9f070d4643f3cc21949571d97860fd0a" translate="yes" xml:space="preserve">
          <source>Receives an exception and returns the possible actions that could be triggered for that error. Should return a list of actions in the following structure</source>
          <target state="translated">例外を受け取り、そのエラーに対してトリガーされる可能性のあるアクションを返します。アクションのリストを以下の構造で返す必要があります。</target>
        </trans-unit>
        <trans-unit id="ba968ad4a4e269cb4f614abd552e8b4ed05af97e" translate="yes" xml:space="preserve">
          <source>Receives an exception and returns the possible actions that could be triggered for that error. Should return a list of actions in the following structure:</source>
          <target state="translated">例外を受け取り、そのエラーに対してトリガーされる可能性のあるアクションを返します。アクションのリストを以下の構造で返す必要があります。</target>
        </trans-unit>
        <trans-unit id="8d512f74447ab57d70e943b026fec4ed4ff7e386" translate="yes" xml:space="preserve">
          <source>Receives the given field and returns its input type (:text_input, :select, etc). Returns &lt;code&gt;nil&lt;/code&gt; if the type is unknown</source>
          <target state="translated">指定されたフィールドを受け取り、その入力タイプ（：text_input、：selectなど）を返します。タイプが不明な場合は &lt;code&gt;nil&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="b856625e980892122be13a03d8007488d047e9b7" translate="yes" xml:space="preserve">
          <source>Receives the given field and returns its input type (:text_input, :select, etc). Returns &lt;code&gt;nil&lt;/code&gt; if the type is unknown.</source>
          <target state="translated">指定されたフィールドを受け取り、その入力タイプ（：text_input、：selectなど）を返します。タイプが不明な場合は &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e1bc3d58618ebe92738a6425e44a7dc192725bca" translate="yes" xml:space="preserve">
          <source>Receives the parent changeset, the current changesets and the repository action options. Must return the persisted struct (or nil) or the changeset error.</source>
          <target state="translated">親チェンジセット、現在のチェンジセット、リポジトリのアクションオプションを受け取ります。persisted struct (または nil)またはチェンジセットエラーを返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="bf377c38819dc945c101acff3a1528c7baf6998f" translate="yes" xml:space="preserve">
          <source>Receives the socket params and authenticates the connection</source>
          <target state="translated">ソケットのパラメータを受け取り、接続を認証する</target>
        </trans-unit>
        <trans-unit id="eb2301c5911b40f9913b9b6d1946674d84780896" translate="yes" xml:space="preserve">
          <source>Receives the socket params and authenticates the connection.</source>
          <target state="translated">ソケットのパラメータを受信し、接続を認証します。</target>
        </trans-unit>
        <trans-unit id="b85a5b35eaef34a24950b7e8c7add8fc69e80467" translate="yes" xml:space="preserve">
          <source>Recovery following crashes or disconnects</source>
          <target state="translated">クラッシュや切断後のリカバリー</target>
        </trans-unit>
        <trans-unit id="b27775f2ada8ba7639959e5e9d172ed6d5173436" translate="yes" xml:space="preserve">
          <source>Recursive CTEs</source>
          <target state="translated">再帰的CTE</target>
        </trans-unit>
        <trans-unit id="6222bf4be21bb14034989750b2e140649fe2281b" translate="yes" xml:space="preserve">
          <source>Recycles the connection</source>
          <target state="translated">接続をリサイクル</target>
        </trans-unit>
        <trans-unit id="657382112567654b7fe0e6918fc09747dad27f39" translate="yes" xml:space="preserve">
          <source>Recycles the connection.</source>
          <target state="translated">接続をリサイクルします。</target>
        </trans-unit>
        <trans-unit id="170881344897f672ebed562b0d42c4dfc0416658" translate="yes" xml:space="preserve">
          <source>Recycling</source>
          <target state="translated">Recycling</target>
        </trans-unit>
        <trans-unit id="fab3c6c5f0427271a044d732cfd8e13c9fec6555" translate="yes" xml:space="preserve">
          <source>Recycling also recycles the &quot;accept&quot; and &quot;authorization&quot; headers, as well as peer data information.</source>
          <target state="translated">また、リサイクルでは、&quot;accept &quot;ヘッダと &quot;authorization &quot;ヘッダ、およびピアデータ情報もリサイクルされます。</target>
        </trans-unit>
        <trans-unit id="9838943fcaf9ab1eeab6ab7a01aebd973e7bbc80" translate="yes" xml:space="preserve">
          <source>Recycling also recycles the &amp;ldquo;accept&amp;rdquo; header.</source>
          <target state="translated">リサイクルすると、「accept」ヘッダーもリサイクルされます。</target>
        </trans-unit>
        <trans-unit id="e72a653a457ec9342c852678afbf8100165e8415" translate="yes" xml:space="preserve">
          <source>Recycling receives a connection and returns a new connection, containing cookies and relevant information from the given one.</source>
          <target state="translated">リサイクルは接続を受信し、与えられた接続からクッキーと関連情報を含む新しい接続を返します。</target>
        </trans-unit>
        <trans-unit id="92c2106e1a1cbb38f9ee7a39a9f984536d14d202" translate="yes" xml:space="preserve">
          <source>Redacting fields</source>
          <target state="translated">フィールドの再編集</target>
        </trans-unit>
        <trans-unit id="d44978dbba0cd152461af8b48fc6813c1fd40ee4" translate="yes" xml:space="preserve">
          <source>Redacting fields in inspect</source>
          <target state="translated">inspectでのフィールドの再編集</target>
        </trans-unit>
        <trans-unit id="b77aad5fb24921ef76ac8f3e500ed93fddae8f2a" translate="yes" xml:space="preserve">
          <source>Redirection</source>
          <target state="translated">Redirection</target>
        </trans-unit>
        <trans-unit id="db97caecdf30755367d9f80f76df15bcb36fb347" translate="yes" xml:space="preserve">
          <source>Refer to a named atom binding in the parent query.</source>
          <target state="translated">親クエリの名前付きアトムバインディングを参照します。</target>
        </trans-unit>
        <trans-unit id="9fcba83c2a8c33f9f40bfc8329598f2f597e56ce" translate="yes" xml:space="preserve">
          <source>Refer to a named atom binding.</source>
          <target state="translated">名前付きアトムバインディングを参照してください。</target>
        </trans-unit>
        <trans-unit id="a21478294240776c9766c8b2af4e719b3ede76fb" translate="yes" xml:space="preserve">
          <source>Referencing parent assigns</source>
          <target state="translated">参照する親の代入</target>
        </trans-unit>
        <trans-unit id="fda05af620d8f7d239d3f6e8e81b4403108f221e" translate="yes" xml:space="preserve">
          <source>Reflection</source>
          <target state="translated">Reflection</target>
        </trans-unit>
        <trans-unit id="f936baf01aa3ae9646dadaf9f5a4745fe2b7c907" translate="yes" xml:space="preserve">
          <source>Registers a callback to be invoked before the response is sent</source>
          <target state="translated">レスポンスが送信される前に呼び出されるコールバックを登録します。</target>
        </trans-unit>
        <trans-unit id="5244ec845fd9bf105d107be1519b099f79debf7a" translate="yes" xml:space="preserve">
          <source>Registers a callback to be invoked before the response is sent.</source>
          <target state="translated">レスポンスが送信される前に呼び出されるコールバックを登録します。</target>
        </trans-unit>
        <trans-unit id="08ce0fff58d051cd9c134a71c658ce212cc6660d" translate="yes" xml:space="preserve">
          <source>Registers the plug to call as a fallback to the controller action</source>
          <target state="translated">コントローラアクションのフォールバックとして呼び出すプラグを登録します。</target>
        </trans-unit>
        <trans-unit id="40b67813f6d17a852ee36adfafd9be57608ee05e" translate="yes" xml:space="preserve">
          <source>Registers the plug to call as a fallback to the controller action.</source>
          <target state="translated">コントローラアクションのフォールバックとして呼び出すプラグを登録します。</target>
        </trans-unit>
        <trans-unit id="9636957d5f6983c4ee722cfec9c80348d0b8ae7a" translate="yes" xml:space="preserve">
          <source>Reload the endpoint configuration on application upgrades</source>
          <target state="translated">アプリケーションのアップグレードでエンドポイントの設定をリロードする</target>
        </trans-unit>
        <trans-unit id="52294d825cdd8c5e8ba2a8c2240864605c1a4510" translate="yes" xml:space="preserve">
          <source>Reload the endpoint configuration on application upgrades.</source>
          <target state="translated">アプリケーションのアップグレードでエンドポイントの設定をリロードします。</target>
        </trans-unit>
        <trans-unit id="640761c65632f7bca506a54b0cea4335ca33f1ff" translate="yes" xml:space="preserve">
          <source>Reloading &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; should show us a completely blank page. The network tab of our browser's developer tools should show a response status of &quot;201&quot;.</source>
          <target state="translated">&lt;a href=&quot;http://localhost:4000&quot;&gt;http：// localhost：4000&lt;/a&gt;をリロードすると、完全に空白のページが表示されます。ブラウザの開発者ツールのネットワークタブには、「201」の応答ステータスが表示されます。</target>
        </trans-unit>
        <trans-unit id="e67cbf6a409c88eea14d88699b4e51dfa09ec82d" translate="yes" xml:space="preserve">
          <source>Reloading the page will start a disconnected render, that will cause &lt;code&gt;mount&lt;/code&gt; to be invoked again and most likely raise the same exception. Except this time it will be caught and converted to an exception page by Phoenix error views</source>
          <target state="translated">ページをリロードすると、切断されたレンダリングが開始されます。これにより、 &lt;code&gt;mount&lt;/code&gt; が再度呼び出され、同じ例外が発生する可能性があります。今回を除いて、Phoenixエラービューによってキャッチされ、例外ページに変換されます</target>
        </trans-unit>
        <trans-unit id="cff4f997b1b30675edab1d1d4ad1ec678ed60051" translate="yes" xml:space="preserve">
          <source>Reloads a given schema or schema list from the database.</source>
          <target state="translated">データベースから指定されたスキーマまたはスキーマリストをリロードします。</target>
        </trans-unit>
        <trans-unit id="47e7c5465e5bbbf3cbdd1686cff7ea6c53743993" translate="yes" xml:space="preserve">
          <source>Reloads code for the current Mix project by invoking the &lt;code&gt;:reloadable_compilers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:reloadable_compilers&lt;/code&gt; を呼び出して、現在のMixプロジェクトのコードを再ロードします</target>
        </trans-unit>
        <trans-unit id="6531ef002be3f220b59e227aa0d4f63067ee602a" translate="yes" xml:space="preserve">
          <source>Reloads code for the current Mix project by invoking the &lt;code&gt;:reloadable_compilers&lt;/code&gt; on the list of &lt;code&gt;:reloadable_apps&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:reloadable_compilers&lt;/code&gt; のリストにある &lt;code&gt;:reloadable_apps&lt;/code&gt; を呼び出すことにより、現在のMixプロジェクトのコードをリロードします。</target>
        </trans-unit>
        <trans-unit id="817332bb13bf37a0a2275b54b00ef58fac94d844" translate="yes" xml:space="preserve">
          <source>Reloads code for the current Mix project by invoking the &lt;code&gt;:reloadable_compilers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:reloadable_compilers&lt;/code&gt; を呼び出して、現在のMixプロジェクトのコードを再ロードします。</target>
        </trans-unit>
        <trans-unit id="f9f31954acfcc8e09658b7a48ab3711d1d695d74" translate="yes" xml:space="preserve">
          <source>Remember that, if you change the type of your primary keys, you will also need to change the type of all associations that point to said primary key.</source>
          <target state="translated">主キーのタイプを変更した場合、その主キーを指すすべての関連付けのタイプも変更する必要があることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="22afefc0870e6cca6e44ec944c6e46acc3a5c732" translate="yes" xml:space="preserve">
          <source>Remember to exclude the files from version control, unless the certificate and key are shared by all developers for testing purposes only. For example, add this line to the '.gitignore' file: &lt;code&gt;priv/**/*.pem&lt;/code&gt;.</source>
          <target state="translated">証明書とキーがテスト目的でのみすべての開発者によって共有されている場合を除き、ファイルをバージョン管理から除外することを忘れないでください。たとえば、次の行を「.gitignore」ファイルに追加します： &lt;code&gt;priv/**/*.pem&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="766003dec9e1c1e02c51395fa2a565331aa2a7a0" translate="yes" xml:space="preserve">
          <source>Remote Client</source>
          <target state="translated">リモートクライアント</target>
        </trans-unit>
        <trans-unit id="15325870375964566c0db153077605ee4d6ba5ef" translate="yes" xml:space="preserve">
          <source>Removes all elements for replicas that are permanently gone</source>
          <target state="translated">永久に消えているレプリカのすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="de3c06260f245217fdccbebbeee618023b313316" translate="yes" xml:space="preserve">
          <source>Removes all elements for replicas that are permanently gone.</source>
          <target state="translated">永久に消えているレプリカのすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="21ec5b5bc2425ec115c86a31d53e6303bc5e980d" translate="yes" xml:space="preserve">
          <source>Removes all elements from the set for the given pid</source>
          <target state="translated">指定された pid のセットからすべての要素を削除します.</target>
        </trans-unit>
        <trans-unit id="0baf5856ed740984940b6e3308ee165dfe19d975" translate="yes" xml:space="preserve">
          <source>Removes all elements from the set for the given pid.</source>
          <target state="translated">指定された pid のセットからすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="1cf882d0a99560f03a1cb1e5de642281ff708392" translate="yes" xml:space="preserve">
          <source>Removes an element from the set</source>
          <target state="translated">セットから要素を削除します。</target>
        </trans-unit>
        <trans-unit id="c52942e1f145b4031f59fd77a106a658cbf1ddeb" translate="yes" xml:space="preserve">
          <source>Removes an element from the set.</source>
          <target state="translated">セットから要素を削除します。</target>
        </trans-unit>
        <trans-unit id="89a6ce134f77be0034d61842e6e4d6d5a96aa083" translate="yes" xml:space="preserve">
          <source>Removes old versions of compiled assets.</source>
          <target state="translated">コンパイルされたアセットの古いバージョンを削除します。</target>
        </trans-unit>
        <trans-unit id="55ecb2c45ca7355e4abbce2db09e3b327c8c343c" translate="yes" xml:space="preserve">
          <source>Removes the given suffix from the name if it exists</source>
          <target state="translated">指定された接尾辞が存在する場合は、名前から削除します。</target>
        </trans-unit>
        <trans-unit id="1655bc2149cd6a146e2ac53ec4bc2dcfb14e9c25" translate="yes" xml:space="preserve">
          <source>Removes the given suffix from the name if it exists.</source>
          <target state="translated">指定された接尾辞が存在する場合は、その名前からその接尾辞を削除します。</target>
        </trans-unit>
        <trans-unit id="08bbc0d9b4409e6f56f323f27880d90461c9435e" translate="yes" xml:space="preserve">
          <source>Removes the session associated with given session id from the store</source>
          <target state="translated">指定されたセッションIDに関連付けられたセッションをストアから削除します。</target>
        </trans-unit>
        <trans-unit id="fb1f51dff10756f68903a361d28310a54d8a0da2" translate="yes" xml:space="preserve">
          <source>Removes the session associated with given session id from the store.</source>
          <target state="translated">指定されたセッションIDに関連付けられたセッションをストアから削除します。</target>
        </trans-unit>
        <trans-unit id="8e6c88a6d94aea67d9ed896c21fdd6eac008a3ba" translate="yes" xml:space="preserve">
          <source>Removing data</source>
          <target state="translated">データの削除</target>
        </trans-unit>
        <trans-unit id="715ea197d938b513f90aa114bc91cb40055b67c2" translate="yes" xml:space="preserve">
          <source>Renaming value labels using tag values</source>
          <target state="translated">タグ値を使った値ラベルのリネーム</target>
        </trans-unit>
        <trans-unit id="529068386c7cf05f5b82c26b7ed494cf8f387f7a" translate="yes" xml:space="preserve">
          <source>Render the given template or the default template specified by the current action with the given assigns</source>
          <target state="translated">与えられたテンプレートまたは現在のアクションで指定されたデフォルトテンプレートを、与えられたassignsでレンダリングします。</target>
        </trans-unit>
        <trans-unit id="10d799fe80c9c6cca9382808c5587a9f098b3385" translate="yes" xml:space="preserve">
          <source>Render the given template or the default template specified by the current action with the given assigns.</source>
          <target state="translated">与えられたテンプレートまたは現在のアクションで指定されたデフォルトテンプレートを、与えられた割り当てでレンダリングします。</target>
        </trans-unit>
        <trans-unit id="e066e80468f5234a1001137061731ae39a651ab5" translate="yes" xml:space="preserve">
          <source>Rendering</source>
          <target state="translated">Rendering</target>
        </trans-unit>
        <trans-unit id="6339ea04476fb73a07f6c2bf7d06080678f037c9" translate="yes" xml:space="preserve">
          <source>Rendering HTML through a template is fine, but what if we need to change the rendering format on the fly? Let's say that sometimes we need HTML, sometimes we need plain text, and sometimes we need JSON. Then what?</source>
          <target state="translated">テンプレートを使って HTML をレンダリングするのは良いのですが、その場でレンダリング形式を変更する必要がある場合はどうでしょうか?HTML が必要な時もあれば、プレーンテキストが必要な時もあり、JSON が必要な時もあるとしましょう。では、どうすればいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="72d1e9d23467087d3ef881a542ef41d8676e41af" translate="yes" xml:space="preserve">
          <source>Rendering JSON</source>
          <target state="translated">JSONのレンダリング</target>
        </trans-unit>
        <trans-unit id="99bd1e34cd164e21963997294779599c4962042e" translate="yes" xml:space="preserve">
          <source>Rendering Templates</source>
          <target state="translated">レンダリング テンプレート</target>
        </trans-unit>
        <trans-unit id="679cb6713a426896fc72064370dad2fa4b9eabc4" translate="yes" xml:space="preserve">
          <source>Rendering and layouts</source>
          <target state="translated">レンダリングとレイアウト</target>
        </trans-unit>
        <trans-unit id="875711d921f3bd103b9ac284647ab930488f4540" translate="yes" xml:space="preserve">
          <source>Rendering based on controller template</source>
          <target state="translated">コントローラテンプレートに基づくレンダリング</target>
        </trans-unit>
        <trans-unit id="fe6604af31647604a807a6a2b92cbe7f3f9f3dbe" translate="yes" xml:space="preserve">
          <source>Renders a &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; within a parent LiveView.</source>
          <target state="translated">親&lt;a href=&quot;phoenix.livecomponent&quot;&gt; &lt;code&gt;Phoenix.LiveComponent&lt;/code&gt; &lt;/a&gt;内でPhoenix.LiveComponentをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="0ec185d3fabb0622c26ce2d9f106669457aada7b" translate="yes" xml:space="preserve">
          <source>Renders a LiveView within an originating plug request or within a parent LiveView.</source>
          <target state="translated">元のプラグリクエスト内、または親LiveView内のLiveViewをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="b3559380bd456e4c2804094a9b29890e9c270f0a" translate="yes" xml:space="preserve">
          <source>Renders a collection</source>
          <target state="translated">コレクションをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="9549acaeff8fac716c468a0d8a646735aca0f520" translate="yes" xml:space="preserve">
          <source>Renders a collection.</source>
          <target state="translated">コレクションをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="a40799fe93c75eeabb0c37d4a141cd4d112365e5" translate="yes" xml:space="preserve">
          <source>Renders a live view from a Plug request and sends an HTML response.</source>
          <target state="translated">プラグのリクエストからライブビューをレンダリングし、HTML レスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="c05bb9af91e397c4329814d85a1daeb75b55c3dd" translate="yes" xml:space="preserve">
          <source>Renders a single item if not nil</source>
          <target state="translated">nilでない場合は、単一の項目をレンダリングします。</target>
        </trans-unit>
        <trans-unit id="5465a6020b101c71ea348e5dc16bceebfd3baa89" translate="yes" xml:space="preserve">
          <source>Renders a single item if not nil.</source>
          <target state="translated">nilでない場合は、単一の項目をレンダリングします。</target>
        </trans-unit>
        <trans-unit id="9af1e71744395a0c63fc6dde9d976827f2510835" translate="yes" xml:space="preserve">
          <source>Renders a template</source>
          <target state="translated">テンプレートをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="010c2f432938fdf78caf8cd600b018d715e4801f" translate="yes" xml:space="preserve">
          <source>Renders a template only if it exists</source>
          <target state="translated">テンプレートが存在する場合にのみレンダリングする</target>
        </trans-unit>
        <trans-unit id="992076890c75e1ddadd6b55a2fce08858516d55a" translate="yes" xml:space="preserve">
          <source>Renders a template only if it exists.</source>
          <target state="translated">テンプレートが存在する場合にのみレンダリングします。</target>
        </trans-unit>
        <trans-unit id="8cedaf1b5b8cacfe220622e987d31a771f2a1e2b" translate="yes" xml:space="preserve">
          <source>Renders a template.</source>
          <target state="translated">テンプレートをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="909250ba1e84aa97d601c3f62261ebccee8ea1bb" translate="yes" xml:space="preserve">
          <source>Renders a title tag with automatic prefix/suffix on &lt;code&gt;@page_title&lt;/code&gt; updates.</source>
          <target state="translated">&lt;code&gt;@page_title&lt;/code&gt; の更新時に、自動プレフィックス/サフィックス付きのタイトルタグをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="64d44d832aae95fc0e71c4568a8c54f911980516" translate="yes" xml:space="preserve">
          <source>Renders the given &lt;code&gt;template&lt;/code&gt; and &lt;code&gt;assigns&lt;/code&gt; based on the &lt;code&gt;conn&lt;/code&gt; information</source>
          <target state="translated">与えられたレンダリング &lt;code&gt;template&lt;/code&gt; および &lt;code&gt;assigns&lt;/code&gt; に基づい &lt;code&gt;conn&lt;/code&gt; 情報を</target>
        </trans-unit>
        <trans-unit id="9e96a8eeaa46194b322dde6e45fda5119e3e7d34" translate="yes" xml:space="preserve">
          <source>Renders the given &lt;code&gt;template&lt;/code&gt; and &lt;code&gt;assigns&lt;/code&gt; based on the &lt;code&gt;conn&lt;/code&gt; information.</source>
          <target state="translated">与えられたレンダリング &lt;code&gt;template&lt;/code&gt; および &lt;code&gt;assigns&lt;/code&gt; に基づい &lt;code&gt;conn&lt;/code&gt; 情報を。</target>
        </trans-unit>
        <trans-unit id="70e6576d43955718fbbcfa5dda1aa687fc3373ae" translate="yes" xml:space="preserve">
          <source>Renders the given layout passing the given &lt;code&gt;do/end&lt;/code&gt; block as &lt;code&gt;@inner_content&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;do/end&lt;/code&gt; ブロックを &lt;code&gt;@inner_content&lt;/code&gt; として渡す指定されたレイアウトをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="01e5ae376eb2e27afc27bece5699c6c4c43832e4" translate="yes" xml:space="preserve">
          <source>Renders the template and returns a string</source>
          <target state="translated">テンプレートをレンダリングし、文字列を返します。</target>
        </trans-unit>
        <trans-unit id="482145d251e35fbac232d56594041c1658159f2a" translate="yes" xml:space="preserve">
          <source>Renders the template and returns a string.</source>
          <target state="translated">テンプレートをレンダリングし、文字列を返します。</target>
        </trans-unit>
        <trans-unit id="0ba8fe15fe6efc84ae418d19c35a6f2a62868124" translate="yes" xml:space="preserve">
          <source>Renders the template and returns iodata</source>
          <target state="translated">テンプレートをレンダリングし、iodataを返します。</target>
        </trans-unit>
        <trans-unit id="258156edae9cfadf191684d2a711700a37bfd521" translate="yes" xml:space="preserve">
          <source>Renders the template and returns iodata.</source>
          <target state="translated">テンプレートをレンダリングし、iodataを返します。</target>
        </trans-unit>
        <trans-unit id="b3a40a7db856c7362b9e856af678ac5c5b3682b9" translate="yes" xml:space="preserve">
          <source>Renewing Certificates</source>
          <target state="translated">証明書の更新</target>
        </trans-unit>
        <trans-unit id="63e181b6b5e496ea24c80abb198ebf3b2f1e76e6" translate="yes" xml:space="preserve">
          <source>Replace a presence's metadata by passing a new map or a function that takes the current map and returns a new one.</source>
          <target state="translated">新しいマップを渡すか、現在のマップを取得して新しいマップを返す関数を渡すことで、プレゼンスのメタデータを置き換えます。</target>
        </trans-unit>
        <trans-unit id="359e2ed6e1358c6c2ad76486fc99b4d5f2eddc34" translate="yes" xml:space="preserve">
          <source>Replace page address</source>
          <target state="translated">ページアドレスの置換</target>
        </trans-unit>
        <trans-unit id="b55c540f8f16d7668abdc6c844f1322ecbbb484b" translate="yes" xml:space="preserve">
          <source>Replaces the default &lt;code&gt;:fetch_flash&lt;/code&gt; plug used by &lt;a href=&quot;../phoenix/phoenix.router&quot;&gt;&lt;code&gt;Phoenix.Router&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトを置き換え &lt;code&gt;:fetch_flash&lt;/code&gt; が使用するプラグ&lt;a href=&quot;../phoenix/phoenix.router&quot;&gt; &lt;code&gt;Phoenix.Router&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8a103c73005ccd029f388a9b7336a994cad85ba" translate="yes" xml:space="preserve">
          <source>Replies</source>
          <target state="translated">Replies</target>
        </trans-unit>
        <trans-unit id="c6c7283edc1b89ebc241780e13dc46d48b4e8e25" translate="yes" xml:space="preserve">
          <source>Replies asynchronously to a socket push</source>
          <target state="translated">ソケットプッシュに対して非同期に返信する</target>
        </trans-unit>
        <trans-unit id="4c5aff3395c1a416fa552f4f8ba9dfa3f96a78d8" translate="yes" xml:space="preserve">
          <source>Replies asynchronously to a socket push.</source>
          <target state="translated">ソケットプッシュに非同期で応答します。</target>
        </trans-unit>
        <trans-unit id="2b931b386e46f8d01671e14069932e8687d6b8c2" translate="yes" xml:space="preserve">
          <source>Repo configuration</source>
          <target state="translated">レポ設定</target>
        </trans-unit>
        <trans-unit id="91808ed37a0fb8608b1c734a889058462fc6e90c" translate="yes" xml:space="preserve">
          <source>Repo resolution</source>
          <target state="translated">レポ解決</target>
        </trans-unit>
        <trans-unit id="4a28165bd85132c82d26771bbd29abef42ef343a" translate="yes" xml:space="preserve">
          <source>Reporters</source>
          <target state="translated">Reporters</target>
        </trans-unit>
        <trans-unit id="269bf13e176b27688a2e6bcef6b00e5d3cad9770" translate="yes" xml:space="preserve">
          <source>Reporters subscribe to Telemetry events using the common interface provided by &lt;a href=&quot;https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html&quot;&gt;&lt;code&gt;Telemetry.Metrics&lt;/code&gt;&lt;/a&gt;. They then aggregate the measurements (data) into metrics to provide meaningful information about your application.</source>
          <target state="translated">レポーターは、&lt;a href=&quot;https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html&quot;&gt; &lt;code&gt;Telemetry.Metrics&lt;/code&gt; が&lt;/a&gt;提供する共通のインターフェイスを使用してテレメトリイベントをサブスクライブします。次に、測定値（データ）をメトリックに集約して、アプリケーションに関する意味のある情報を提供します。</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="5a04a4b8c1f1c230bb0f4cd5a050787aaa087d8c" translate="yes" xml:space="preserve">
          <source>Repositories by default support URLs. For example, the configuration above could be rewritten to:</source>
          <target state="translated">リポジトリーはデフォルトでURLをサポートしています。例えば、上記の設定を次のように書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="6f046cc0117a29a6869d58d3d1cbd183012cd7a7" translate="yes" xml:space="preserve">
          <source>Request fields</source>
          <target state="translated">リクエストフィールド</target>
        </trans-unit>
        <trans-unit id="6d0d4aafc904fd7e16177321d5cc96438f828ba7" translate="yes" xml:space="preserve">
          <source>Request life-cycle</source>
          <target state="translated">ライフサイクルのリクエスト</target>
        </trans-unit>
        <trans-unit id="16346fdb36f9e7a7b03ee60d349e058748773ff3" translate="yes" xml:space="preserve">
          <source>Requests a random file to be created in the upload directory with the given prefix</source>
          <target state="translated">指定したプレフィックスでアップロードディレクトリにランダムなファイルを作成するよう要求します。</target>
        </trans-unit>
        <trans-unit id="f771003acf808c23aa297fe7a02d6ba85cba28a5" translate="yes" xml:space="preserve">
          <source>Requests a random file to be created in the upload directory with the given prefix.</source>
          <target state="translated">指定したプレフィックスを持つアップロードディレクトリにランダムなファイルを作成するように要求します。</target>
        </trans-unit>
        <trans-unit id="3b65aa51aac1696dfac54eb844bd22189d1c6c20" translate="yes" xml:space="preserve">
          <source>Requests a random file to be created in the upload directory with the given prefix. Raises on failure</source>
          <target state="translated">指定した接頭辞でアップロードディレクトリにランダムなファイルを作成するよう要求します。失敗した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="2ab73756308332af029c8c4ca625955161607b3d" translate="yes" xml:space="preserve">
          <source>Requests a random file to be created in the upload directory with the given prefix. Raises on failure.</source>
          <target state="translated">指定した接頭辞でアップロードディレクトリにランダムなファイルを作成するよう要求します。失敗した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="11e5686899cd1bd7cc912e9cd9bab9ed0d5b1b5c" translate="yes" xml:space="preserve">
          <source>Requests basic authentication from the client.</source>
          <target state="translated">クライアントに基本的な認証を要求します。</target>
        </trans-unit>
        <trans-unit id="4d1ae43341a73c0e27d87662c768a5b3208168c7" translate="yes" xml:space="preserve">
          <source>Requests to our new route will be handled by the &lt;code&gt;HelloWeb.HelloController&lt;/code&gt;&lt;code&gt;show&lt;/code&gt; action. We already have the controller at &lt;code&gt;lib/hello_web/controllers/hello_controller.ex&lt;/code&gt;, so all we need to do is edit that file and add a &lt;code&gt;show&lt;/code&gt; action to it. This time, we'll need to extract the messenger from the parameters so that we can pass it (the messenger) to the template. To do that, we add this show function to the controller:</source>
          <target state="translated">私たちの新しいルートへの要求はによって処理されます &lt;code&gt;HelloWeb.HelloController&lt;/code&gt; の &lt;code&gt;show&lt;/code&gt; アクション。コントローラーはすでに &lt;code&gt;lib/hello_web/controllers/hello_controller.ex&lt;/code&gt; にあるので、必要なのはそのファイルを編集して &lt;code&gt;show&lt;/code&gt; アクションを追加することだけです。今回は、パラメーターからメッセンジャーを抽出して、それ（メッセンジャー）をテンプレートに渡すことができるようにする必要があります。これを行うには、次のshow関数をコントローラーに追加します。</target>
        </trans-unit>
        <trans-unit id="fa7cc45a2f0b2c6e0f547254eb2a6537f51086e8" translate="yes" xml:space="preserve">
          <source>Required &lt;code&gt;pool_opts&lt;/code&gt;:</source>
          <target state="translated">必要な &lt;code&gt;pool_opts&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b3cb2ffed5bdda27fe0da4adfbf1afb494a74f72" translate="yes" xml:space="preserve">
          <source>Required &lt;code&gt;server_opts&lt;/code&gt;:</source>
          <target state="translated">必要な &lt;code&gt;server_opts&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="aa41361501f00cf1711b54bba81131e78f51ac76" translate="yes" xml:space="preserve">
          <source>Requires OTP 20 or later.</source>
          <target state="translated">OTP20以降が必要です。</target>
        </trans-unit>
        <trans-unit id="42c4c07337fd0b34244f71fc37173ddfa010fbce" translate="yes" xml:space="preserve">
          <source>Reraises an error or a wrapped one</source>
          <target state="translated">エラーまたはラップされたものを再発行します。</target>
        </trans-unit>
        <trans-unit id="b94d48b0d0a1e117c90995e12d265bb52a3ce3dd" translate="yes" xml:space="preserve">
          <source>Reraises an error or a wrapped one.</source>
          <target state="translated">エラーまたはラップされたものを復活させます。</target>
        </trans-unit>
        <trans-unit id="6bbd3e1733ab75e72f3a3e646ee564da325ab1a0" translate="yes" xml:space="preserve">
          <source>Reserved params</source>
          <target state="translated">予約されたパラメータ</target>
        </trans-unit>
        <trans-unit id="cc9695ab8a0663ef8e4cdd91ed033dd93ef16b13" translate="yes" xml:space="preserve">
          <source>Resets a previously set field on a query</source>
          <target state="translated">クエリで以前に設定したフィールドをリセットします。</target>
        </trans-unit>
        <trans-unit id="cc1e5f63666771c6b295e03fcf89503d1e853b07" translate="yes" xml:space="preserve">
          <source>Resets a previously set field on a query.</source>
          <target state="translated">クエリで以前に設定したフィールドをリセットします。</target>
        </trans-unit>
        <trans-unit id="4396d18ac6dfda8d326a50c720338a338ee1ce15" translate="yes" xml:space="preserve">
          <source>Resets the set&amp;rsquo;s delta</source>
          <target state="translated">セットのデルタをリセットします</target>
        </trans-unit>
        <trans-unit id="49092afde09229f5643c56a7897ea603a13d3477" translate="yes" xml:space="preserve">
          <source>Resets the set&amp;rsquo;s delta.</source>
          <target state="translated">セットのデルタをリセットします。</target>
        </trans-unit>
        <trans-unit id="cc4e6aa65bbfe59f56ddfe81d701204059f9bcb5" translate="yes" xml:space="preserve">
          <source>Resets the set's delta.</source>
          <target state="translated">セットのデルタをリセットします。</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="cfdb8eac562178cecca6be0acf0b9946ca8aa0a1" translate="yes" xml:space="preserve">
          <source>Resources can be namespaced, for such, it is just necessary to namespace the first argument of the generator:</source>
          <target state="translated">リソースは名前空間で指定することができ、そのためにはジェネレータの最初の引数を名前空間にする必要があります。</target>
        </trans-unit>
        <trans-unit id="18e25448e05fecbd64caa3f4eecb34874792c678" translate="yes" xml:space="preserve">
          <source>Resources may restrict the number of match function clauses by using the &lt;code&gt;only:&lt;/code&gt; or &lt;code&gt;except:&lt;/code&gt; options.</source>
          <target state="translated">リソースは、 &lt;code&gt;only:&lt;/code&gt; または &lt;code&gt;except:&lt;/code&gt; オプションを使用して、一致関数句の数を制限できます。</target>
        </trans-unit>
        <trans-unit id="c3fe9cc0330fb297336ec5adbab30db233008ca1" translate="yes" xml:space="preserve">
          <source>Response fields</source>
          <target state="translated">レスポンスフィールド</target>
        </trans-unit>
        <trans-unit id="345582f712e83488d6f10e1390dc22c73298edc6" translate="yes" xml:space="preserve">
          <source>Restart your server and make some more requests. You should begin to see logs with tags for both the HTTP method and the route.</source>
          <target state="translated">サーバを再起動して、さらにリクエストを行います。HTTP メソッドとルートの両方にタグが付いたログが表示されるようになるはずです。</target>
        </trans-unit>
        <trans-unit id="f3615cfd051b8a853b99a3bbd39aecb14388d3d5" translate="yes" xml:space="preserve">
          <source>Restart your server, and then make requests to a page or two. In your terminal, you should see the ConsoleReporter print logs for the Telemetry events it received as a result of the metrics definitions you provided.</source>
          <target state="translated">サーバーを再起動してから、1~2ページにリクエストを出してください。ターミナルでは、提供したメトリクス定義の結果として受け取った Telemetry イベントのログを ConsoleReporter が印刷しているのを見ることができるはずです。</target>
        </trans-unit>
        <trans-unit id="9a8579fe199c1bd99b47dbe8b26a3074a6b7775b" translate="yes" xml:space="preserve">
          <source>Restricts the query to return the first result ordered by primary key</source>
          <target state="translated">クエリが主キー順の最初の結果を返すように制限します。</target>
        </trans-unit>
        <trans-unit id="1be5679f0d024487571e90253a8ab8bb6a3e035d" translate="yes" xml:space="preserve">
          <source>Restricts the query to return the first result ordered by primary key.</source>
          <target state="translated">クエリが主キー順の最初の結果を返すように制限します。</target>
        </trans-unit>
        <trans-unit id="7640144b5f59ee8fcfc21eba87bc4737035dbfe3" translate="yes" xml:space="preserve">
          <source>Restricts the query to return the last result ordered by primary key</source>
          <target state="translated">クエリを制限して、主キーで順序付けられた最後の結果を返すようにします。</target>
        </trans-unit>
        <trans-unit id="84f17f7e72e012fa8ecb25425c8d772c52b93041" translate="yes" xml:space="preserve">
          <source>Restricts the query to return the last result ordered by primary key.</source>
          <target state="translated">クエリが主キー順に最後の結果を返すように制限します。</target>
        </trans-unit>
        <trans-unit id="6010c234b4e246d2d0dc7bbc4169dea022ffc308" translate="yes" xml:space="preserve">
          <source>Results in the following content to be sent over the wire as iodata:</source>
          <target state="translated">結果は、以下の内容をヨードデータとしてワイヤ上に送信することになります。</target>
        </trans-unit>
        <trans-unit id="11245c1fc733e0c008fb66ce6a0748f0e5fb8e42" translate="yes" xml:space="preserve">
          <source>Retrieves current layout formats</source>
          <target state="translated">現在のレイアウトフォーマットを取得します。</target>
        </trans-unit>
        <trans-unit id="d1477fcc02b66876278353a61847e3a0adbf780b" translate="yes" xml:space="preserve">
          <source>Retrieves current layout formats.</source>
          <target state="translated">現在のレイアウトフォーマットを取得します。</target>
        </trans-unit>
        <trans-unit id="8cb31ca469458aaced9cd91b90af5fd5469a8ad3" translate="yes" xml:space="preserve">
          <source>Retrieves the current layout</source>
          <target state="translated">現在のレイアウトを取得します。</target>
        </trans-unit>
        <trans-unit id="7d8b89095847125b428e7d401d0d88cc8e7fc256" translate="yes" xml:space="preserve">
          <source>Retrieves the current layout.</source>
          <target state="translated">現在のレイアウトを取得します。</target>
        </trans-unit>
        <trans-unit id="d5fe001dd2567e82361cac6ab201c8263caf35dc" translate="yes" xml:space="preserve">
          <source>Retrieves the current root layout.</source>
          <target state="translated">現在のルートレイアウトを取得します。</target>
        </trans-unit>
        <trans-unit id="de4e7e7f9ddfa130ffdaf5cdefb5744bc005d9c7" translate="yes" xml:space="preserve">
          <source>Retrieves the current view</source>
          <target state="translated">現在のビューを取得します。</target>
        </trans-unit>
        <trans-unit id="fb4232316a5314aa554d2d39877bfc3bcce354c7" translate="yes" xml:space="preserve">
          <source>Retrieves the current view.</source>
          <target state="translated">現在のビューを取得します。</target>
        </trans-unit>
        <trans-unit id="4bddf417a7de2f2c1bbe4dc8d6ee57105e612f2c" translate="yes" xml:space="preserve">
          <source>Retrieves the underlying schema type for the given, possibly custom, type</source>
          <target state="translated">指定された、おそらくカスタムのスキーマタイプの基礎となるスキーマタイプを取得します。</target>
        </trans-unit>
        <trans-unit id="5961cf468e4e2aa3afe98203f5b5c22bd0d77054" translate="yes" xml:space="preserve">
          <source>Retrieves the underlying schema type for the given, possibly custom, type.</source>
          <target state="translated">指定された、おそらくカスタムのスキーマタイプの基礎となるスキーマタイプを取得します。</target>
        </trans-unit>
        <trans-unit id="ee1295c185bc34ef3a9c058cebfaa8b9fdbf9290" translate="yes" xml:space="preserve">
          <source>Return the assets that have been pushed</source>
          <target state="translated">押された資産を返す</target>
        </trans-unit>
        <trans-unit id="43c95fc10ae46b19b5ba89cee4d152f0acef55a8" translate="yes" xml:space="preserve">
          <source>Return the assets that have been pushed.</source>
          <target state="translated">押された資産を返します。</target>
        </trans-unit>
        <trans-unit id="e8b5c0d8b119dcf904ba88b367260c00c3ef9780" translate="yes" xml:space="preserve">
          <source>Return the informational requests that have been sent</source>
          <target state="translated">送付した資料請求を返却する</target>
        </trans-unit>
        <trans-unit id="4fb34f4377ca6c1a70a8356ec50da9bcbcc53b11" translate="yes" xml:space="preserve">
          <source>Return the informational requests that have been sent.</source>
          <target state="translated">送信された情報提供依頼を返却します。</target>
        </trans-unit>
        <trans-unit id="9d42e2f739c476b4724ed40443cd1bdc8b0b0c31" translate="yes" xml:space="preserve">
          <source>Return values</source>
          <target state="translated">戻り値</target>
        </trans-unit>
        <trans-unit id="6d85682eefe81ef7b0bc4a48c1801bc1226f1365" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;:ignore&lt;/code&gt; will cause &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;:ignore&lt;/code&gt; and the process will exit normally without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;. If used when part of a supervision tree the parent supervisor will not fail to start nor immediately try to restart the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. The remainder of the supervision tree will be started and so the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; should not be required by other processes. It can be started later with &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt;&lt;code&gt;Supervisor.restart_child/2&lt;/code&gt;&lt;/a&gt; as the child specification is saved in the parent supervisor. The main use cases for this are:</source>
          <target state="translated">&lt;code&gt;:ignore&lt;/code&gt; を返すと、&lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;:ignore&lt;/code&gt; を返し、プロセスはループに入ったり &lt;code&gt;c:terminate/2&lt;/code&gt; を呼び出したりせずに正常に終了します。監視ツリーの一部として使用された場合、親スーパーバイザは起動に失敗したり、すぐに&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; の&lt;/a&gt;再起動を試みたりすることはありません。監視ツリーの残りの部分が開始されるため、他のプロセスで&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt;が必要になることはありません。子仕様は親スーパーバイザに保存されるため、後で&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt; &lt;code&gt;Supervisor.restart_child/2&lt;/code&gt; を使用&lt;/a&gt;して開始できます。これの主な使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="00a41a817313be26ad6bd03d4d8bb8d0ef9b40ce" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;:ignore&lt;/code&gt; will cause &lt;code&gt;start_link/3&lt;/code&gt; to return &lt;code&gt;:ignore&lt;/code&gt; and the process will exit normally without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;. If used when part of a supervision tree the parent supervisor will not fail to start nor immediately try to restart the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. The remainder of the supervision tree will be (re)started and so the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; should not be required by other processes. It can be started later with &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt;&lt;code&gt;Supervisor.restart_child/2&lt;/code&gt;&lt;/a&gt; as the child specification is saved in the parent supervisor. The main use cases for this are:</source>
          <target state="translated">&lt;code&gt;:ignore&lt;/code&gt; を返すと、 &lt;code&gt;start_link/3&lt;/code&gt; は &lt;code&gt;:ignore&lt;/code&gt; を返し、プロセスはループに入ったり &lt;code&gt;c:terminate/2&lt;/code&gt; を呼び出したりせずに正常に終了します。監視ツリーの一部として使用された場合、親スーパーバイザは起動に失敗したり、すぐに&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; の&lt;/a&gt;再起動を試みたりすることはありません。監視ツリーの残りの部分は（再）起動されるため、&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt;は他のプロセスで必要とされるべきではありません。子仕様は親スーパーバイザに保存されるため、後で&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt; &lt;code&gt;Supervisor.restart_child/2&lt;/code&gt; を使用&lt;/a&gt;して開始できます。これの主な使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5ff73e37511f28874066a51701c02984a9625ba4" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;:ignore&lt;/code&gt; will cause &lt;code&gt;start_link/3&lt;/code&gt; to return &lt;code&gt;:ignore&lt;/code&gt; and the process will exit normally without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;. If used when part of a supervision tree the parent supervisor will not fail to start nor immediately try to restart the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. The remainder of the supervision tree will be started and so the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; should not be required by other processes. It can be started later with &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt;&lt;code&gt;Supervisor.restart_child/2&lt;/code&gt;&lt;/a&gt; as the child specification is saved in the parent supervisor. The main use cases for this are:</source>
          <target state="translated">&lt;code&gt;:ignore&lt;/code&gt; を返すと、 &lt;code&gt;start_link/3&lt;/code&gt; は &lt;code&gt;:ignore&lt;/code&gt; を返し、プロセスはループに入ったり &lt;code&gt;c:terminate/2&lt;/code&gt; を呼び出したりせずに正常に終了します。監視ツリーの一部として使用された場合、親スーパーバイザは起動に失敗したり、すぐに&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; の&lt;/a&gt;再起動を試みたりすることはありません。監視ツリーの残りの部分が開始されるため、他のプロセスで&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt;が必要になることはありません。子仕様は親スーパーバイザに保存されるため、後で&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#restart_child/2&quot;&gt; &lt;code&gt;Supervisor.restart_child/2&lt;/code&gt; を使用&lt;/a&gt;して開始できます。これの主な使用例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1bff6cc29ca5bd8a34c473249c3c63fc7d76e68c" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;nil&lt;/code&gt; makes this socket anonymous.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; を返すと、このソケットは匿名になります。</target>
        </trans-unit>
        <trans-unit id="9072c59f2221595d98be6bb52b91c6b0c3b06c0b" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, :hibernate}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt; except the process is hibernated before entering the loop. See &lt;code&gt;c:handle_call/3&lt;/code&gt; for more information on hibernation.</source>
          <target state="translated">&lt;code&gt;{:ok, state, :hibernate}&lt;/code&gt; 返すことは、プロセスがループに入る前に休止状態になることを除いて &lt;code&gt;{:ok, state}&lt;/code&gt; 似ています。ハイバネーションの詳細については、 &lt;code&gt;c:handle_call/3&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="de90d70d60e20f4781d6329e3d49fc470b32ed7c" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, timeout}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt; except &lt;code&gt;handle_info(:timeout, state)&lt;/code&gt; will be called after &lt;code&gt;timeout&lt;/code&gt; milliseconds if no messages are received within the timeout.</source>
          <target state="translated">戻り &lt;code&gt;{:ok, state, timeout}&lt;/code&gt; と同様である &lt;code&gt;{:ok, state}&lt;/code&gt; 除く &lt;code&gt;handle_info(:timeout, state)&lt;/code&gt; 後に呼び出される &lt;code&gt;timeout&lt;/code&gt; ないメッセージがタイムアウト時間内に受信されない場合はミリ秒。</target>
        </trans-unit>
        <trans-unit id="f4f89c1f4a5e07f563900cfccc5421ff9a8161b2" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, timeout}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt;, except that it also sets a timeout. See the &quot;Timeouts&quot; section in the module documentation for more information.</source>
          <target state="translated">&lt;code&gt;{:ok, state, timeout}&lt;/code&gt; 返すことは、タイムアウトも設定することを除いて &lt;code&gt;{:ok, state}&lt;/code&gt; に似ています。詳細については、モジュールのドキュメントの「タイムアウト」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="0c5290df2c6b52f28b4e772545847564eeac993d" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, {:continue, continue}}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt; except that immediately after entering the loop the &lt;code&gt;c:handle_continue/2&lt;/code&gt; callback will be invoked with &lt;code&gt;Continue&lt;/code&gt; as first argument.</source>
          <target state="translated">戻り &lt;code&gt;{:ok, state, {:continue, continue}}&lt;/code&gt; と同様である &lt;code&gt;{:ok, state}&lt;/code&gt; ことを除いて、直ちにループに入った後に &lt;code&gt;c:handle_continue/2&lt;/code&gt; コールバックで起動され &lt;code&gt;Continue&lt;/code&gt; 、最初の引数として。</target>
        </trans-unit>
        <trans-unit id="5e266ed35f5a07eeef5d08bc7de00ba6d44480f2" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state, {:continue, continue}}&lt;/code&gt; is similar to &lt;code&gt;{:ok, state}&lt;/code&gt; except that immediately after entering the loop the &lt;code&gt;c:handle_continue/2&lt;/code&gt; callback will be invoked with the value &lt;code&gt;continue&lt;/code&gt; as first argument.</source>
          <target state="translated">戻っ &lt;code&gt;{:ok, state, {:continue, continue}}&lt;/code&gt; と同様である &lt;code&gt;{:ok, state}&lt;/code&gt; ことを除いて、直ちにループに入った後に &lt;code&gt;c:handle_continue/2&lt;/code&gt; コールバックが値で呼び出されるが &lt;code&gt;continue&lt;/code&gt; 最初の引数として。</target>
        </trans-unit>
        <trans-unit id="4e7d4ebacb2fe086ff03c74440ab13b1423c917e" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state}&lt;/code&gt; will cause &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;{:ok, pid}&lt;/code&gt; and the process to enter its loop.</source>
          <target state="translated">戻り &lt;code&gt;{:ok, state}&lt;/code&gt; 原因となり&lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt;返すように &lt;code&gt;{:ok, pid}&lt;/code&gt; とそのループを入力するプロセス。</target>
        </trans-unit>
        <trans-unit id="7f3cdecd3e6dd19af77a3ae2d89ad09a2ac949c2" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:ok, state}&lt;/code&gt; will cause &lt;code&gt;start_link/3&lt;/code&gt; to return &lt;code&gt;{:ok, pid}&lt;/code&gt; and the process to enter its loop.</source>
          <target state="translated">戻り &lt;code&gt;{:ok, state}&lt;/code&gt; 原因となり &lt;code&gt;start_link/3&lt;/code&gt; 返すように &lt;code&gt;{:ok, pid}&lt;/code&gt; とそのループを入力するプロセス。</target>
        </trans-unit>
        <trans-unit id="ff4885b193e5e31cd9b10b3bed429dbfedccbf7d" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:stop, reason}&lt;/code&gt; will cause &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;{:error, reason}&lt;/code&gt; and the process to exit with reason &lt;code&gt;reason&lt;/code&gt; without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;.</source>
          <target state="translated">戻り &lt;code&gt;{:stop, reason}&lt;/code&gt; 原因となり&lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt;返すように &lt;code&gt;{:error, reason}&lt;/code&gt; および理由と出口に処理 &lt;code&gt;reason&lt;/code&gt; ループに入るか、呼び出すことなく &lt;code&gt;c:terminate/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="958ba96970f27c1edef49fa9a09b56e9fb4a1f11" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;{:stop, reason}&lt;/code&gt; will cause &lt;code&gt;start_link/3&lt;/code&gt; to return &lt;code&gt;{:error, reason}&lt;/code&gt; and the process to exit with reason &lt;code&gt;reason&lt;/code&gt; without entering the loop or calling &lt;code&gt;c:terminate/2&lt;/code&gt;.</source>
          <target state="translated">戻り &lt;code&gt;{:stop, reason}&lt;/code&gt; 原因となり &lt;code&gt;start_link/3&lt;/code&gt; 返すように &lt;code&gt;{:error, reason}&lt;/code&gt; および理由と出口に処理 &lt;code&gt;reason&lt;/code&gt; ループに入るか、呼び出すことなく &lt;code&gt;c:terminate/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0206911964c1dff05f04ec226aa02a9d1fc49c4b" translate="yes" xml:space="preserve">
          <source>Returning Ecto structures from context APIs</source>
          <target state="translated">コンテキストAPIからEcto構造体を返す</target>
        </trans-unit>
        <trans-unit id="ead0287f37dbf41a5b3e642fa183f6cceae5aa19" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;:ok&lt;/code&gt; if it was created successfully.</source>
          <target state="translated">正常に作成された場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="70939585b75d8df6aeae0245bfdd5f2e2587b1a3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;:ok&lt;/code&gt; if it was dropped successfully.</source>
          <target state="translated">正常に削除された場合は &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a2267d38e27ee29bf7513fada6d2716e40cdb163" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if no result was found. If the struct in the queryable has no or more than one primary key, it will raise an argument error.</source>
          <target state="translated">結果が見つからなかった場合は &lt;code&gt;nil&lt;/code&gt; を返します。クエリ可能オブジェクトの構造体に主キーがないか、複数ある場合、引数エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="e53620a3b277dbf9a9602eb773594a80db3e44d6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;nil&lt;/code&gt; if no result was found. Raises if more than one entry.</source>
          <target state="translated">結果が見つからなかった場合は &lt;code&gt;nil&lt;/code&gt; を返します。複数のエントリがある場合に発生します。</target>
        </trans-unit>
        <trans-unit id="9360c2d44ef312594284b5a710755e2346b37d4b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if module implements behaviour</source>
          <target state="translated">モジュールが動作を実装する場合は &lt;code&gt;true&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="23a59d892319f7f0fbbc2e7a9dd75fa134a0f90b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if module implements behaviour.</source>
          <target state="translated">モジュールが動作を実装する場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2d19c7ee6da1e3f5da0fb1807858b4ade5c50360" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if query has binding with a given name, otherwise &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">クエリに特定の名前のバインディングがある場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="b85e7f5d19e828b88b0b056874576033b0a6b40f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if query has binding with a given name, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">クエリに特定の名前のバインディングがある場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3c78f17bafbd0dd213461c41dc67d858e69064d2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:error, :already_down}&lt;/code&gt; if the storage has already been dropped or &lt;code&gt;{:error, term}&lt;/code&gt; in case anything else goes wrong.</source>
          <target state="translated">ストレージがすでに削除されている場合は &lt;code&gt;{:error, :already_down}&lt;/code&gt; 返し、その他の問題が発生した場合は &lt;code&gt;{:error, term}&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="605d378ffa674fae5a00cee570b0b7cdcad07117" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:error, :already_up}&lt;/code&gt; if the storage has already been created or &lt;code&gt;{:error, term}&lt;/code&gt; in case anything else goes wrong.</source>
          <target state="translated">ストレージがすでに作成されている場合は &lt;code&gt;{:error, :already_up}&lt;/code&gt; 返し、その他の問題が発生した場合は &lt;code&gt;{:error, term}&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bbb74ea38a6533d0fe461ebaab3531e6bbb4441f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:error, {:already_started, pid}}&lt;/code&gt; if the repo is already started or &lt;code&gt;{:error, term}&lt;/code&gt; in case anything else goes wrong.</source>
          <target state="translated">リポジトリがすでに開始されている場合は &lt;code&gt;{:error, {:already_started, pid}}&lt;/code&gt; その他の問題が発生した場合は &lt;code&gt;{:error, term}&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="58e63b43ef9abbb082be42bd8c0a86235c15cd73" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, body, conn}&lt;/code&gt; if all body has been read, &lt;code&gt;{:more, binary, conn}&lt;/code&gt; otherwise, and &lt;code&gt;{:done, conn}&lt;/code&gt; if there is no more body.</source>
          <target state="translated">すべてのボディが読み取られた場合は &lt;code&gt;{:ok, body, conn}&lt;/code&gt; 返し &lt;code&gt;{:more, binary, conn}&lt;/code&gt; それ以外の場合は{：more、binary、conn}を返し、ボディがもうない場合は &lt;code&gt;{:done, conn}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="492087e16b1e08208596bad63dcf4e6983dd69a6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;{:ok, value}&lt;/code&gt; if the transaction was successful where &lt;code&gt;value&lt;/code&gt; is the value return by the function or &lt;code&gt;{:error, value}&lt;/code&gt; if the transaction was rolled back where &lt;code&gt;value&lt;/code&gt; is the value given to &lt;code&gt;rollback/1&lt;/code&gt;.</source>
          <target state="translated">トランザクションが成功した場合は &lt;code&gt;{:ok, value}&lt;/code&gt; 返します。valueは関数によって返された &lt;code&gt;value&lt;/code&gt; あり、 &lt;code&gt;{:error, value}&lt;/code&gt; はトランザクションがロールバックされた &lt;code&gt;value&lt;/code&gt; で、valueは &lt;code&gt;rollback/1&lt;/code&gt; に指定された値です。</target>
        </trans-unit>
        <trans-unit id="b3ac990ec0b9514356d2a034319c859849a9e6e5" translate="yes" xml:space="preserve">
          <source>Returns a 3-tuple of the updated set, and the joined and left elements.</source>
          <target state="translated">更新された集合と、結合された要素と左の要素の3つのタプルを返します。</target>
        </trans-unit>
        <trans-unit id="9f35d9695ecb23f999b9998650d30381261bef9f" translate="yes" xml:space="preserve">
          <source>Returns a boolean.</source>
          <target state="translated">ブール値を返します。</target>
        </trans-unit>
        <trans-unit id="650875231f8a18a81c1d81cac51379d58ccf1857" translate="yes" xml:space="preserve">
          <source>Returns a child specification for pubsub with the given &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;options&lt;/code&gt; してpubsubの子仕様を返します。</target>
        </trans-unit>
        <trans-unit id="53d474e2458adf04530aba9db61bc9313c251db4" translate="yes" xml:space="preserve">
          <source>Returns a child specification for socket management.</source>
          <target state="translated">ソケット管理の子仕様を返します。</target>
        </trans-unit>
        <trans-unit id="0c450d44c35ef8df6b6562542b42842e6ac72c18" translate="yes" xml:space="preserve">
          <source>Returns a child specification that mounts the processes required for the adapter.</source>
          <target state="translated">アダプタに必要なプロセスをマウントする子指定を返します。</target>
        </trans-unit>
        <trans-unit id="7ee158500b9f89a33b9ce70235221ba32299a4c5" translate="yes" xml:space="preserve">
          <source>Returns a connection with the value resulting from the async assignment placed under &lt;code&gt;key&lt;/code&gt; in the &lt;code&gt;:assigns&lt;/code&gt; field.</source>
          <target state="translated">戻り下に置かれた非同期割り当てた値に関連 &lt;code&gt;key&lt;/code&gt; で &lt;code&gt;:assigns&lt;/code&gt; フィールド。</target>
        </trans-unit>
        <trans-unit id="07bac1c9be8bf8bb3367a18c96209210550c6899" translate="yes" xml:space="preserve">
          <source>Returns a derived key suitable for use</source>
          <target state="translated">使用に適した派生キーを返します。</target>
        </trans-unit>
        <trans-unit id="5e75f3416132b9bd95f6a63b5c6c85239a872598" translate="yes" xml:space="preserve">
          <source>Returns a derived key suitable for use.</source>
          <target state="translated">使用に適した派生キーを返します。</target>
        </trans-unit>
        <trans-unit id="053dbbd549cdd02787ab581c34e5abf7e8bbc62f" translate="yes" xml:space="preserve">
          <source>Returns a form element to scope a function to.</source>
          <target state="translated">関数をスコープするフォーム要素を返します。</target>
        </trans-unit>
        <trans-unit id="4f0d71c80f5d0cc1a9d0ab8793b15d37692fd2cd" translate="yes" xml:space="preserve">
          <source>Returns a keyword list of the validations for this changeset</source>
          <target state="translated">このチェンジセットのバリデーションのキーワード一覧を返します。</target>
        </trans-unit>
        <trans-unit id="a05481cc133c5c294e5f4dc6b7b8e55db365bfdf" translate="yes" xml:space="preserve">
          <source>Returns a keyword list of the validations for this changeset.</source>
          <target state="translated">このチェンジセットのバリデーションのキーワード一覧を返します。</target>
        </trans-unit>
        <trans-unit id="de4c44d4128ab187c15a7abb204260f88f3fdd0a" translate="yes" xml:space="preserve">
          <source>Returns a keyword list with all template engines extensions followed by their modules.</source>
          <target state="translated">すべてのテンプレートエンジン拡張子の後にそのモジュールが続くキーワードリストを返します。</target>
        </trans-unit>
        <trans-unit id="4eceacd5368c78d30c87b34a7ca397a7e8c03b4a" translate="yes" xml:space="preserve">
          <source>Returns a lazy enumerable that emits all entries from the data store matching the given query</source>
          <target state="translated">指定したクエリにマッチするデータストアのすべてのエントリを出力する、遅延列挙可能な値を返します。</target>
        </trans-unit>
        <trans-unit id="d404a7c17f5a0b0c1453ff865660d917c5678214" translate="yes" xml:space="preserve">
          <source>Returns a lazy enumerable that emits all entries from the data store matching the given query.</source>
          <target state="translated">指定したクエリにマッチするデータストアのすべてのエントリを出力する、遅延列挙可能な値を返します。</target>
        </trans-unit>
        <trans-unit id="6a34a3db584f9e3fd9604539366fb57ea2cd9ec6" translate="yes" xml:space="preserve">
          <source>Returns a list of elements for the topic who belong to an online replica</source>
          <target state="translated">オンラインレプリカに属するトピックの要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="9728c9b94accd9419ab46a4602b235851d8df84e" translate="yes" xml:space="preserve">
          <source>Returns a list of elements for the topic who belong to an online replica.</source>
          <target state="translated">オンラインレプリカに所属するトピックの要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="98ecba6737698c276fc7aa3bdae3b968207495ca" translate="yes" xml:space="preserve">
          <source>Returns a list of elements in the set belonging to an online replica</source>
          <target state="translated">オンラインレプリカに属する集合内の要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="fc5e4101925193876bb5c320c36427d878ef3ae3" translate="yes" xml:space="preserve">
          <source>Returns a list of elements in the set belonging to an online replica.</source>
          <target state="translated">オンラインレプリカに属する集合内の要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="8f6fc0dce67c81b4ef9135a5edd3f136b2cc99cb" translate="yes" xml:space="preserve">
          <source>Returns a lists of presence metadata.</source>
          <target state="translated">プレゼンスのメタデータのリストを返します。</target>
        </trans-unit>
        <trans-unit id="0dba8891d7dff85bea5812cb85aa4e955ebb95f7" translate="yes" xml:space="preserve">
          <source>Returns a lists of presences in key/metadata tuple pairs.</source>
          <target state="translated">キーとメタデータのタプルのペアに含まれるプレゼンスのリストを返します。</target>
        </trans-unit>
        <trans-unit id="dff9c6907481d25cab3f4d2d9b09bf07ac097138" translate="yes" xml:space="preserve">
          <source>Returns a map of previously set flash messages or an empty map</source>
          <target state="translated">以前に設定したフラッシュメッセージのマップ、または空のマップを返します。</target>
        </trans-unit>
        <trans-unit id="6abe9dd0b8966c47f830c2f72b614d2c40758609" translate="yes" xml:space="preserve">
          <source>Returns a map of previously set flash messages or an empty map.</source>
          <target state="translated">以前に設定したフラッシュメッセージのマップ、または空のマップを返します。</target>
        </trans-unit>
        <trans-unit id="0c1fa67674e571450599b4f305949a057482d509" translate="yes" xml:space="preserve">
          <source>Returns a message from flash by &lt;code&gt;key&lt;/code&gt; (or &lt;code&gt;nil&lt;/code&gt; if no message is available for &lt;code&gt;key&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; フラッシュからメッセージを返します（または、 &lt;code&gt;key&lt;/code&gt; 使用できるメッセージがない場合はnil）。</target>
        </trans-unit>
        <trans-unit id="d3bcc9e9461f0d40bcb8ba9f9ff8bfdc0346797f" translate="yes" xml:space="preserve">
          <source>Returns a message from flash by key</source>
          <target state="translated">フラッシュのメッセージをキーで返す</target>
        </trans-unit>
        <trans-unit id="c2fe41e82f07a1fbbbec018c8f53d0b6182a1482" translate="yes" xml:space="preserve">
          <source>Returns a message from flash by key.</source>
          <target state="translated">キーでフラッシュからメッセージを返します。</target>
        </trans-unit>
        <trans-unit id="93a50ae2e333787da62138b423eb8110c1bac7b7" translate="yes" xml:space="preserve">
          <source>Returns a name of a corresponding form field</source>
          <target state="translated">対応するフォームフィールドの名前を返します</target>
        </trans-unit>
        <trans-unit id="ba24e463caf9df93c02dd51780a0d08b0d2a6f81" translate="yes" xml:space="preserve">
          <source>Returns a name of a corresponding form field.</source>
          <target state="translated">対応するフォームフィールドの名前を返します。</target>
        </trans-unit>
        <trans-unit id="23d8b361ddbae32c3b63666cb80ebf1801f12704" translate="yes" xml:space="preserve">
          <source>Returns a new struct with updated metadata</source>
          <target state="translated">メタデータを更新した新しい構造体を返します。</target>
        </trans-unit>
        <trans-unit id="ea74e5d44dc13f49afdcf6a9719c7e7f2969a947" translate="yes" xml:space="preserve">
          <source>Returns a new struct with updated metadata.</source>
          <target state="translated">メタデータを更新した新しい構造体を返します。</target>
        </trans-unit>
        <trans-unit id="7cc37772c9a6de6fa11c8e433fbbf34e6823bf54" translate="yes" xml:space="preserve">
          <source>Returns a session id and the session contents. The session id is any value that can be used to identify the session by the store.</source>
          <target state="translated">セッションIDとセッションの内容を返します。セッションIDは、ストアがセッションを識別するために使用できる任意の値です。</target>
        </trans-unit>
        <trans-unit id="712005fc2a8f17e99905df105e8d47cda95bf3f0" translate="yes" xml:space="preserve">
          <source>Returns a set of subscribers pids for the given topic</source>
          <target state="translated">指定したトピックのサブスクライバの pid のセットを返します。</target>
        </trans-unit>
        <trans-unit id="df937cfc113e642fc0ab14e0072f837eab655ec5" translate="yes" xml:space="preserve">
          <source>Returns a set of subscribers pids for the given topic with fastlane tuples. See &lt;code&gt;subscribers/1&lt;/code&gt; for more information</source>
          <target state="translated">ファストレーンタプルを使用して、指定されたトピックのサブスクライバーpidのセットを返します。詳細については、 &lt;code&gt;subscribers/1&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="42006bcaaa53701de4479a6f3f691e45702d2f9d" translate="yes" xml:space="preserve">
          <source>Returns a set of subscribers pids for the given topic with fastlane tuples. See &lt;code&gt;subscribers/1&lt;/code&gt; for more information.</source>
          <target state="translated">ファストレーンタプルを使用して、指定されたトピックのサブスクライバーpidのセットを返します。詳細については、 &lt;code&gt;subscribers/1&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="e8369338e0c05711ad6cbabafe9b930425cf95ff" translate="yes" xml:space="preserve">
          <source>Returns a set of subscribers pids for the given topic.</source>
          <target state="translated">指定したトピックのサブスクライバ pid のセットを返します。</target>
        </trans-unit>
        <trans-unit id="f7fa95a2bef4637d7a4c87c84d82a9dc0cc098a5" translate="yes" xml:space="preserve">
          <source>Returns a specification to start this module under a supervisor</source>
          <target state="translated">スーパバイザの下でこのモジュールを起動するための仕様を返します。</target>
        </trans-unit>
        <trans-unit id="3b59fc82f7ced9ba4e9462febb3a349db49c4788" translate="yes" xml:space="preserve">
          <source>Returns a specification to start this module under a supervisor.</source>
          <target state="translated">スーパーバイザの下でこのモジュールを起動するための仕様を返します。</target>
        </trans-unit>
        <trans-unit id="091a21dd36a626bfc0c9fdf11d83c715167ffcdf" translate="yes" xml:space="preserve">
          <source>Returns a value of a corresponding form field</source>
          <target state="translated">対応するフォームフィールドの値を返します</target>
        </trans-unit>
        <trans-unit id="c131065afabb90589ca5cb098a3f27dc4b8fbde7" translate="yes" xml:space="preserve">
          <source>Returns a value of a corresponding form field.</source>
          <target state="translated">対応するフォームフィールドの値を返します。</target>
        </trans-unit>
        <trans-unit id="d3e30cae1b351831558c3c4eda6364b611ab6b4d" translate="yes" xml:space="preserve">
          <source>Returns all constraints in a changeset</source>
          <target state="translated">チェンジセット内のすべての制約を返します。</target>
        </trans-unit>
        <trans-unit id="4aaa08f650c9e2be4daa322f5d4b3b46852ea886" translate="yes" xml:space="preserve">
          <source>Returns all constraints in a changeset.</source>
          <target state="translated">チェンジセット内のすべての制約を返します。</target>
        </trans-unit>
        <trans-unit id="d6d383e0581ef77b281929559a10916020b77b8e" translate="yes" xml:space="preserve">
          <source>Returns all elements for the pid</source>
          <target state="translated">pid のすべての要素を返します。</target>
        </trans-unit>
        <trans-unit id="4c5f82e0c986b328023167350fce7177ba20f9e1" translate="yes" xml:space="preserve">
          <source>Returns all elements for the pid.</source>
          <target state="translated">pid のすべての要素を返します。</target>
        </trans-unit>
        <trans-unit id="c768ba09c5f9b6d19479b4f47aac0134680ef530" translate="yes" xml:space="preserve">
          <source>Returns all template paths in a given template root.</source>
          <target state="translated">指定したテンプレートルート内のすべてのテンプレートパスを返します。</target>
        </trans-unit>
        <trans-unit id="9f42f7ab01ca9e2ebb74b6867cbb9213381788a1" translate="yes" xml:space="preserve">
          <source>Returns an element to scope a function to.</source>
          <target state="translated">関数をスコープするための要素を返します。</target>
        </trans-unit>
        <trans-unit id="36a571f52eaaca3cd18bc44b8b5c38c92c16a75b" translate="yes" xml:space="preserve">
          <source>Returns an empty &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">空の&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;構造体を返します。</target>
        </trans-unit>
        <trans-unit id="34a3567f03d097e0d031fe8d6992717e2757962c" translate="yes" xml:space="preserve">
          <source>Returns an empty &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">空の&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;構造体を返します</target>
        </trans-unit>
        <trans-unit id="1867f1f84bca2a6baf78a27e20f0fdce6e1ae1c2" translate="yes" xml:space="preserve">
          <source>Returns an empty &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">空の&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;構造体を返します。</target>
        </trans-unit>
        <trans-unit id="526b65bcb4e29d1d2c27932264c429305f684b08" translate="yes" xml:space="preserve">
          <source>Returns an id of a corresponding form field</source>
          <target state="translated">対応するフォームフィールドのidを返します</target>
        </trans-unit>
        <trans-unit id="6acc1204e5851adb35e290223e348a15e77cdcad" translate="yes" xml:space="preserve">
          <source>Returns an id of a corresponding form field and value attached to it</source>
          <target state="translated">対応するフォームフィールドのidと、それに付随する値を返します。</target>
        </trans-unit>
        <trans-unit id="84efac80dbe5e7ed56e7537f4f686f3b07b5a266" translate="yes" xml:space="preserve">
          <source>Returns an id of a corresponding form field and value attached to it.</source>
          <target state="translated">対応するフォームフィールドのidと、それに付随する値を返します。</target>
        </trans-unit>
        <trans-unit id="06d59f08ef07f39b3381c35ebeeaac3548d6915d" translate="yes" xml:space="preserve">
          <source>Returns an id of a corresponding form field.</source>
          <target state="translated">対応するフォームフィールドのidを返します。</target>
        </trans-unit>
        <trans-unit id="5c950ea011ddd66d93e6085ee84e7633de7da47d" translate="yes" xml:space="preserve">
          <source>Returns integer ranging from 1 to the argument value, dividing the partition as equally as possible</source>
          <target state="translated">1 から引数の値までの整数を返し、可能な限り均等に分割します。</target>
        </trans-unit>
        <trans-unit id="8ad75873b2bd9a76b194b17a4c985c8f1e83c429" translate="yes" xml:space="preserve">
          <source>Returns integer ranging from 1 to the argument value, dividing the partition as equally as possible.</source>
          <target state="translated">1から引数の値までの整数を返し、可能な限り均等に分割します。</target>
        </trans-unit>
        <trans-unit id="1baae41f6c99996eaf501d247824dadd023b10fa" translate="yes" xml:space="preserve">
          <source>Returns number of the current row within its partition, counting from 1</source>
          <target state="translated">パーティション内の現在の行の数を 1 から数えて返します。</target>
        </trans-unit>
        <trans-unit id="9932f39d39d6470217cf5c772a738971839eda33" translate="yes" xml:space="preserve">
          <source>Returns number of the current row within its partition, counting from 1.</source>
          <target state="translated">パーティション内の現在の行の数を 1 から数えて返します。</target>
        </trans-unit>
        <trans-unit id="df90f06f882579c05edd5cb0842ad2b6c18a486f" translate="yes" xml:space="preserve">
          <source>Returns options to be used inside a select.</source>
          <target state="translated">select内で使用するオプションを返します。</target>
        </trans-unit>
        <trans-unit id="8be052853a5bd97ee888d372e7c33d6889afd621" translate="yes" xml:space="preserve">
          <source>Returns peer information such as the address, port and ssl cert</source>
          <target state="translated">アドレス、ポート、ssl 証明書などのピア情報を返します。</target>
        </trans-unit>
        <trans-unit id="867abb050b04c70e2d39cfa72539e1b1fb73b750" translate="yes" xml:space="preserve">
          <source>Returns peer information such as the address, port and ssl cert.</source>
          <target state="translated">アドレス、ポート、ssl 証明書などのピア情報を返します。</target>
        </trans-unit>
        <trans-unit id="ad16e58f157d6278eb351b97f7b14f12edfbb1ef" translate="yes" xml:space="preserve">
          <source>Returns presences for a socket/topic.</source>
          <target state="translated">ソケット/トピックのプレゼンスを返します。</target>
        </trans-unit>
        <trans-unit id="1e37860b3854ed28f99b7bfe01b2180473629870" translate="yes" xml:space="preserve">
          <source>Returns presences for a topic</source>
          <target state="translated">トピックのプレゼンスを返します。</target>
        </trans-unit>
        <trans-unit id="fc774e47879528e1b847ce3dc85a651aca6c9e47" translate="yes" xml:space="preserve">
          <source>Returns presences for a topic.</source>
          <target state="translated">トピックのプレゼンスを返します。</target>
        </trans-unit>
        <trans-unit id="0f1126842e744b3025b0d619e090904662cec2b5" translate="yes" xml:space="preserve">
          <source>Returns rank of the current row with gaps; same as &lt;a href=&quot;#row_number/0&quot;&gt;&lt;code&gt;row_number/0&lt;/code&gt;&lt;/a&gt; of its first peer</source>
          <target state="translated">ギャップのある現在の行のランクを返します。最初のピアの&lt;a href=&quot;#row_number/0&quot;&gt; &lt;code&gt;row_number/0&lt;/code&gt; &lt;/a&gt;と同じ</target>
        </trans-unit>
        <trans-unit id="02158dedc3007be2bcf9b530c44fda6f17caf48d" translate="yes" xml:space="preserve">
          <source>Returns rank of the current row with gaps; same as &lt;a href=&quot;#row_number/0&quot;&gt;&lt;code&gt;row_number/0&lt;/code&gt;&lt;/a&gt; of its first peer.</source>
          <target state="translated">ギャップのある現在の行のランクを返します。最初のピアの&lt;a href=&quot;#row_number/0&quot;&gt; &lt;code&gt;row_number/0&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="fddbdde5e0fcc48446d6963dc4e1bb39c09c2131" translate="yes" xml:space="preserve">
          <source>Returns rank of the current row without gaps; this function counts peer groups</source>
          <target state="translated">この関数は、ピアグループをカウントします。</target>
        </trans-unit>
        <trans-unit id="5225f09f4e714d425f8a20b25f28b5c3122951ff" translate="yes" xml:space="preserve">
          <source>Returns rank of the current row without gaps; this function counts peer groups.</source>
          <target state="translated">この関数は、現在の行のランクを隙間なく返します。</target>
        </trans-unit>
        <trans-unit id="76d313e9fa898e49117fe34176712341a8b4242f" translate="yes" xml:space="preserve">
          <source>Returns relative rank of the current row: (number of rows preceding or peer with current row) / (total rows)</source>
          <target state="translated">現在の行の相対的な順位を返します。(現在の行に先行する行、または現在の行と同等の行の数)/(総行数)</target>
        </trans-unit>
        <trans-unit id="62ef57af9ff1721052c8c5207500454bbbd8bbd9" translate="yes" xml:space="preserve">
          <source>Returns relative rank of the current row: (number of rows preceding or peer with current row) / (total rows).</source>
          <target state="translated">現在の行の相対的な順位を返します。(現在の行の前にある行、または現在の行と同じ行を持つ行の数)/(総行数)。</target>
        </trans-unit>
        <trans-unit id="b685e7622e432494c38b27cc47e7115839285d81" translate="yes" xml:space="preserve">
          <source>Returns relative rank of the current row: (rank - 1) / (total rows - 1)</source>
          <target state="translated">現在の行の相対的なランクを返します。(ランク-1)/(総行数-1)</target>
        </trans-unit>
        <trans-unit id="03361fb003b6621abe3b317d1fac668752f73549" translate="yes" xml:space="preserve">
          <source>Returns relative rank of the current row: (rank - 1) / (total rows - 1).</source>
          <target state="translated">現在の行の相対的なランクを返します。(ランク-1)/(総行数-1)。</target>
        </trans-unit>
        <trans-unit id="369f4a16a3017444ca1fa810086afff165ef763f" translate="yes" xml:space="preserve">
          <source>Returns session value for the given &lt;code&gt;key&lt;/code&gt;. If &lt;code&gt;key&lt;/code&gt; is not set, &lt;code&gt;nil&lt;/code&gt; is returned</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; セッション値を返します。 &lt;code&gt;key&lt;/code&gt; が設定されていない場合、 &lt;code&gt;nil&lt;/code&gt; が返されます</target>
        </trans-unit>
        <trans-unit id="d1c69cd8be5befb3d5c00261debf16c174734262" translate="yes" xml:space="preserve">
          <source>Returns session value for the given &lt;code&gt;key&lt;/code&gt;. If &lt;code&gt;key&lt;/code&gt; is not set, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; セッション値を返します。 &lt;code&gt;key&lt;/code&gt; が設定されていない場合、 &lt;code&gt;nil&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="05633164a421bd4efd0b4e2ba2beb7006b142c18" translate="yes" xml:space="preserve">
          <source>Returns text transformed into HTML using simple formatting rules</source>
          <target state="translated">シンプルな書式設定ルールを用いて HTML に変換されたテキストを返します。</target>
        </trans-unit>
        <trans-unit id="3d4b947317ad0f07885eccbb4d12d0351c4fa428" translate="yes" xml:space="preserve">
          <source>Returns text transformed into HTML using simple formatting rules.</source>
          <target state="translated">シンプルな書式設定ルールを用いて HTML に変換されたテキストを返します。</target>
        </trans-unit>
        <trans-unit id="9aac30c1bda08d19ebc46e4a80d899ef36d5aa1a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;:plug_init_mode&lt;/code&gt; that controls when plugs are initialized.</source>
          <target state="translated">プラグがいつ初期化される &lt;code&gt;:plug_init_mode&lt;/code&gt; を制御する：plug_init_modeを返します。</target>
        </trans-unit>
        <trans-unit id="5c53b923c607b523ff225d0c3071654084a23552" translate="yes" xml:space="preserve">
          <source>Returns the Channel Transport protocol version</source>
          <target state="translated">Channel Transportプロトコルのバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="e23faceeb11fa60c87847730bb469936acd6f935" translate="yes" xml:space="preserve">
          <source>Returns the Channel Transport protocol version.</source>
          <target state="translated">Channel Transportプロトコルのバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="4dfca911689de9a0a1ecb4eb60bbab5580c50fce" translate="yes" xml:space="preserve">
          <source>Returns the HTML string of the rendered view or element.</source>
          <target state="translated">レンダリングされたビューまたは要素のHTML文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d945fca39a668ae2ba2c1f3dbe8860e0846e47c9" translate="yes" xml:space="preserve">
          <source>Returns the HTML5 validations that would apply to the given field</source>
          <target state="translated">指定したフィールドに適用される HTML5 バリデーションを返します。</target>
        </trans-unit>
        <trans-unit id="93e15a4efa63cbff7b529f340d1a8ac094f6045f" translate="yes" xml:space="preserve">
          <source>Returns the HTML5 validations that would apply to the given field.</source>
          <target state="translated">指定したフィールドに適用される HTML5 バリデーションを返します。</target>
        </trans-unit>
        <trans-unit id="297f4a097f2d813abcdcd7f7a7dea37738b5a147" translate="yes" xml:space="preserve">
          <source>Returns the HTTP protocol and its version</source>
          <target state="translated">HTTPプロトコルとそのバージョンを返します</target>
        </trans-unit>
        <trans-unit id="3cd55cb29770ed1998aaee8252d9022dd1b3ffdf" translate="yes" xml:space="preserve">
          <source>Returns the HTTP protocol and its version.</source>
          <target state="translated">HTTPプロトコルとそのバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="77c003c1086bd9009def4461daa696b798022d0c" translate="yes" xml:space="preserve">
          <source>Returns the HTTP protocol and version</source>
          <target state="translated">HTTPプロトコルとバージョンを返します</target>
        </trans-unit>
        <trans-unit id="abbbefd3dc6d571e1ab61f5efadc5c62f6bd1921" translate="yes" xml:space="preserve">
          <source>Returns the HTTP protocol and version.</source>
          <target state="translated">HTTPプロトコルとバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="5d4ae4e71d932883592d92b3b18730d7945ee3f6" translate="yes" xml:space="preserve">
          <source>Returns the action name as an atom, raises if unavailable</source>
          <target state="translated">アクション名をアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="dab666811158dbf3e899121dcc28421e073cca59" translate="yes" xml:space="preserve">
          <source>Returns the action name as an atom, raises if unavailable.</source>
          <target state="translated">アクション名をアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="0b6cba2473f3df8d32c492bf820514be4364ee6b" translate="yes" xml:space="preserve">
          <source>Returns the adapter configuration stored in the &lt;code&gt;:otp_app&lt;/code&gt; environment</source>
          <target state="translated">&lt;code&gt;:otp_app&lt;/code&gt; 環境に保管されているアダプター構成を戻します</target>
        </trans-unit>
        <trans-unit id="43219329d2c7311ba7917eea1cd3cadeb5043975" translate="yes" xml:space="preserve">
          <source>Returns the adapter configuration stored in the &lt;code&gt;:otp_app&lt;/code&gt; environment.</source>
          <target state="translated">&lt;code&gt;:otp_app&lt;/code&gt; 環境に保管されているアダプター構成を戻します。</target>
        </trans-unit>
        <trans-unit id="e1cb0bc91613f679f66b52274c53f86a97f132a3" translate="yes" xml:space="preserve">
          <source>Returns the adapter metadata from the &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback</source>
          <target state="translated">&lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt;コールバックからアダプターのメタデータを返します</target>
        </trans-unit>
        <trans-unit id="b25ba9df49d4304866b915c7b97adc987ba77126" translate="yes" xml:space="preserve">
          <source>Returns the adapter metadata from the &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">&lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt;コールバックからアダプターのメタデータを返します。</target>
        </trans-unit>
        <trans-unit id="a3da609c308705004b3b80761833002f2dcd8f53" translate="yes" xml:space="preserve">
          <source>Returns the adapter tied to the repository</source>
          <target state="translated">リポジトリに関連付けられたアダプタを返します。</target>
        </trans-unit>
        <trans-unit id="afa3064748d47bf05c613027563ace33703b267f" translate="yes" xml:space="preserve">
          <source>Returns the adapter tied to the repository.</source>
          <target state="translated">リポジトリに紐づけられたアダプタを返します。</target>
        </trans-unit>
        <trans-unit id="eebd96a05b7bb7055e52b0bef1a908d0ef6f7694" translate="yes" xml:space="preserve">
          <source>Returns the atom for given integer</source>
          <target state="translated">与えられた整数の原子を返します。</target>
        </trans-unit>
        <trans-unit id="e2a8f92cc144fb58c301420a3430dc5fe53b8d3f" translate="yes" xml:space="preserve">
          <source>Returns the atom for given integer.</source>
          <target state="translated">与えられた整数の原子を返します。</target>
        </trans-unit>
        <trans-unit id="5539444ee76a2dd85b864e66df8aec9f7852ec9f" translate="yes" xml:space="preserve">
          <source>Returns the atom name or pid of the current repository.</source>
          <target state="translated">現在のリポジトリの原子名またはpidを返します。</target>
        </trans-unit>
        <trans-unit id="afe87d163e6f10fac80385705026511ff9a2fc63" translate="yes" xml:space="preserve">
          <source>Returns the autogenerated value, or nil if it must be autogenerated inside the storage or raise if not supported.</source>
          <target state="translated">自動生成された値を返します。ストレージ内で自動生成する必要がある場合はnil、サポートされていない場合はraiseを返します。</target>
        </trans-unit>
        <trans-unit id="41855c6a8c275d3df47fd7a5ae7f9c49db9bb2bf" translate="yes" xml:space="preserve">
          <source>Returns the causal context for the set</source>
          <target state="translated">セットの因果関係を返します。</target>
        </trans-unit>
        <trans-unit id="986d9fe4d1da5ebbdf4d643a0485130c94c491eb" translate="yes" xml:space="preserve">
          <source>Returns the causal context for the set.</source>
          <target state="translated">セットの因果関係を返します。</target>
        </trans-unit>
        <trans-unit id="38a0025a0432e8c5dd01c86fe5200e8364746744" translate="yes" xml:space="preserve">
          <source>Returns the compile-time route info and runtime path params for a request.</source>
          <target state="translated">リクエストのコンパイル時のルート情報とランタイムパスのパラメータを返します。</target>
        </trans-unit>
        <trans-unit id="bc97f956d4879678d0a667e8dda7692cb3182444" translate="yes" xml:space="preserve">
          <source>Returns the configured JSON encoding library for Phoenix.</source>
          <target state="translated">Phoenix用に設定されたJSONエンコーディングライブラリを返します。</target>
        </trans-unit>
        <trans-unit id="f13c7ca8c83510b5ba4c0d86be35ae6da1dfc2ad" translate="yes" xml:space="preserve">
          <source>Returns the content type as long as it matches the given format</source>
          <target state="translated">指定したフォーマットにマッチするコンテンツの型を返します。</target>
        </trans-unit>
        <trans-unit id="ab78007dc9ad8440236997eb2c61d39140378f99" translate="yes" xml:space="preserve">
          <source>Returns the content type as long as it matches the given format.</source>
          <target state="translated">指定したフォーマットにマッチする限り、コンテンツの型を返します。</target>
        </trans-unit>
        <trans-unit id="4cdf8ec9d9d779620e0eec0b47d35ce1fe55a705" translate="yes" xml:space="preserve">
          <source>Returns the controller module as an atom, raises if unavailable</source>
          <target state="translated">コントローラモジュールをアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="64f03d92d21ad1889682c560dd35e7aec5c1ad49" translate="yes" xml:space="preserve">
          <source>Returns the controller module as an atom, raises if unavailable.</source>
          <target state="translated">コントローラモジュールをアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="562c41fa12cf6185d1da4523d2e646f503cf8b77" translate="yes" xml:space="preserve">
          <source>Returns the current list of LiveView children for the &lt;code&gt;parent&lt;/code&gt; LiveView.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; LiveViewのLiveView子の現在のリストを返します。</target>
        </trans-unit>
        <trans-unit id="1fd48f7f3712e81d4bbdae577329a2019eba98fa" translate="yes" xml:space="preserve">
          <source>Returns the current path with the given query parameters.</source>
          <target state="translated">指定したクエリパラメータの現在のパスを返します。</target>
        </trans-unit>
        <trans-unit id="63686a054a364e3a980f670fc63fc1f9015be33a" translate="yes" xml:space="preserve">
          <source>Returns the current request URL with query params.</source>
          <target state="translated">現在のリクエストURLとクエリパラメータを返します。</target>
        </trans-unit>
        <trans-unit id="4f89be3c230b99aea30665f474f698f13a5d2973" translate="yes" xml:space="preserve">
          <source>Returns the current request URL, with and without query params</source>
          <target state="translated">現在のリクエスト URL を返します。</target>
        </trans-unit>
        <trans-unit id="31184fba0970ede83c32265639b32c06c6cdec55" translate="yes" xml:space="preserve">
          <source>Returns the current request URL, with and without query params.</source>
          <target state="translated">現在のリクエストURLを返します。</target>
        </trans-unit>
        <trans-unit id="eb5d3d27f926149e37699a0082246664f67bba2f" translate="yes" xml:space="preserve">
          <source>Returns the current request path with its default query parameters</source>
          <target state="translated">デフォルトのクエリパラメータを持つ現在のリクエストパスを返します。</target>
        </trans-unit>
        <trans-unit id="14cf551a1cf93c660073f49a15e6195b8743e811" translate="yes" xml:space="preserve">
          <source>Returns the current request path with its default query parameters:</source>
          <target state="translated">デフォルトのクエリパラメータを持つ現在のリクエストパスを返します。</target>
        </trans-unit>
        <trans-unit id="2b1788b0630ef9a2a5b8880213d51657b4a43cbe" translate="yes" xml:space="preserve">
          <source>Returns the current request path, with and without query params</source>
          <target state="translated">現在のリクエストパスを返します。</target>
        </trans-unit>
        <trans-unit id="fb1d00072a164a62cd78f584a60d2aaed75756c4" translate="yes" xml:space="preserve">
          <source>Returns the current request path, with and without query params.</source>
          <target state="translated">現在のリクエストパスを返します。</target>
        </trans-unit>
        <trans-unit id="e953a1bee5326fe36593a6658fec08dbfcd39428" translate="yes" xml:space="preserve">
          <source>Returns the current request url with its default query parameters</source>
          <target state="translated">デフォルトのクエリパラメータを含む現在のリクエストURLを返します。</target>
        </trans-unit>
        <trans-unit id="e233d9d0c1d7d109518502eb5b8907d270998949" translate="yes" xml:space="preserve">
          <source>Returns the current request url with its default query parameters:</source>
          <target state="translated">デフォルトのクエリパラメータを指定した現在のリクエストURLを返します。</target>
        </trans-unit>
        <trans-unit id="6d6fd594db5f4167f14ff769442c2780e64d3b7d" translate="yes" xml:space="preserve">
          <source>Returns the dize of the delta</source>
          <target state="translated">delta の dize を返します。</target>
        </trans-unit>
        <trans-unit id="4b9a2ef990990a8ff987cebe0412ba3bbf8611cb" translate="yes" xml:space="preserve">
          <source>Returns the dize of the delta.</source>
          <target state="translated">デルタの dize を返します。</target>
        </trans-unit>
        <trans-unit id="00c0a7df8665d267c2e56560b9c045ed7db76ce0" translate="yes" xml:space="preserve">
          <source>Returns the dumpers for a given type</source>
          <target state="translated">指定した型のダンパを返します。</target>
        </trans-unit>
        <trans-unit id="7a2497832f7bcfb6e88665c8585668963d3cca68" translate="yes" xml:space="preserve">
          <source>Returns the dumpers for a given type.</source>
          <target state="translated">指定した型のダンパを返します。</target>
        </trans-unit>
        <trans-unit id="0f6a3f2613826d187578d61d7d31f66c6debdd4b" translate="yes" xml:space="preserve">
          <source>Returns the element matching the pid, topic, and key</source>
          <target state="translated">pid、トピック、キーにマッチする要素を返します。</target>
        </trans-unit>
        <trans-unit id="d6d35f53849214065ffcc43d7b4ad3a77780754c" translate="yes" xml:space="preserve">
          <source>Returns the element matching the pid, topic, and key.</source>
          <target state="translated">pid、トピック、キーに一致する要素を返します。</target>
        </trans-unit>
        <trans-unit id="20638dea09033f7657169d64b5e11b955236d84b" translate="yes" xml:space="preserve">
          <source>Returns the endpoint module as an atom, raises if unavailable</source>
          <target state="translated">エンドポイントモジュールをアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="8a6c894f1f606064758cb637a8852339bf27d6a1" translate="yes" xml:space="preserve">
          <source>Returns the endpoint module as an atom, raises if unavailable.</source>
          <target state="translated">エンドポイントモジュールをアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="d3d175e7c658b3a85108d5a157be7afc482d046f" translate="yes" xml:space="preserve">
          <source>Returns the flash message from the LiveView flash assign.</source>
          <target state="translated">LiveViewフラッシュアサインのフラッシュメッセージを返します。</target>
        </trans-unit>
        <trans-unit id="ccb28bf8159434f83cef5ac232dce1a89281fb76" translate="yes" xml:space="preserve">
          <source>Returns the format encoder for the given template name.</source>
          <target state="translated">指定したテンプレート名のフォーマットエンコーダを返します。</target>
        </trans-unit>
        <trans-unit id="837b032a9b0f193f6a94af6e2384173e2adf060b" translate="yes" xml:space="preserve">
          <source>Returns the full alias with the current scope's aliased prefix.</source>
          <target state="translated">現在のスコープのエイリアス接頭辞を持つ完全なエイリアスを返します。</target>
        </trans-unit>
        <trans-unit id="81c4f57e8340c7fa3703a917eb311053a878a6a7" translate="yes" xml:space="preserve">
          <source>Returns the full request URL</source>
          <target state="translated">完全なリクエストURLを返します</target>
        </trans-unit>
        <trans-unit id="c451ed794ab55f42ac05ffbd3b4d13be2a8b1b6f" translate="yes" xml:space="preserve">
          <source>Returns the full request URL.</source>
          <target state="translated">完全なリクエストURLを返します。</target>
        </trans-unit>
        <trans-unit id="38b6caa7cb70ca9897524769b1a2c4b0e24ff3f9" translate="yes" xml:space="preserve">
          <source>Returns the hash of all template paths in the given root.</source>
          <target state="translated">指定したルート内のすべてのテンプレートパスのハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="88b330bdec48902ab099588cb5b50bcabd64a93a" translate="yes" xml:space="preserve">
          <source>Returns the host from the :url configuration.</source>
          <target state="translated">urlの設定からホストを返します。</target>
        </trans-unit>
        <trans-unit id="aff6a0e57acf43706a9d9848f3c066783ad36d35" translate="yes" xml:space="preserve">
          <source>Returns the list of operations stored in &lt;code&gt;multi&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;multi&lt;/code&gt; 保存されている操作のリストを返します</target>
        </trans-unit>
        <trans-unit id="ed2cbad32f95bd58d92985dd1bd9480b2d4a8a2a" translate="yes" xml:space="preserve">
          <source>Returns the list of operations stored in &lt;code&gt;multi&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;multi&lt;/code&gt; に格納されている操作のリストを返します。</target>
        </trans-unit>
        <trans-unit id="43b4c72a8491387d3f6f165eae448fb6c1e9d187" translate="yes" xml:space="preserve">
          <source>Returns the loaders for a given type</source>
          <target state="translated">指定した型のローダーを返します</target>
        </trans-unit>
        <trans-unit id="58b222e3169d25c17d28138f04586ea1e6113f45" translate="yes" xml:space="preserve">
          <source>Returns the loaders for a given type.</source>
          <target state="translated">指定した型のローダーを返します。</target>
        </trans-unit>
        <trans-unit id="69f9f2cc454c894732aa61f3bc6e80aba04c0abc" translate="yes" xml:space="preserve">
          <source>Returns the location header from the given redirect response</source>
          <target state="translated">指定したリダイレクトレスポンスのロケーションヘッダを返します。</target>
        </trans-unit>
        <trans-unit id="5739e4997bdc769bf5474bcfa9fac4151a32d297" translate="yes" xml:space="preserve">
          <source>Returns the location header from the given redirect response.</source>
          <target state="translated">指定したリダイレクトレスポンスのロケーションヘッダを返します。</target>
        </trans-unit>
        <trans-unit id="255b0457bc62c3ad5294451222b8bb7132a6ecf0" translate="yes" xml:space="preserve">
          <source>Returns the map of presence metadata for a socket/topic-key pair.</source>
          <target state="translated">ソケット/トピックキーのペアのプレゼンスメタデータのマップを返します。</target>
        </trans-unit>
        <trans-unit id="61035299400c77ab7cced0b720a5327ee1f5cf7b" translate="yes" xml:space="preserve">
          <source>Returns the matched params from the URL the connection was redirected to</source>
          <target state="translated">接続がリダイレクトされた URL からマッチしたパラメータを返します</target>
        </trans-unit>
        <trans-unit id="a4a23e2fa600e45e3f5e331295efac3d128be479" translate="yes" xml:space="preserve">
          <source>Returns the matched params from the URL the connection was redirected to.</source>
          <target state="translated">接続がリダイレクトされた URL からマッチしたパラメータを返します。</target>
        </trans-unit>
        <trans-unit id="ec4c69891742d5ad97122bdff1bd1850063ef0e5" translate="yes" xml:space="preserve">
          <source>Returns the message to be relayed when a channel exits</source>
          <target state="translated">チャンネルが終了した際に中継されるメッセージを返します。</target>
        </trans-unit>
        <trans-unit id="33dcb027fa7f70ff0c7953fc2edf16263bfaf384" translate="yes" xml:space="preserve">
          <source>Returns the message to be relayed when a channel exits.</source>
          <target state="translated">チャンネル終了時に中継するメッセージを返します。</target>
        </trans-unit>
        <trans-unit id="7ca99c2f6cdef86996afbbf03371424a196d25df" translate="yes" xml:space="preserve">
          <source>Returns the most recent title that was updated via a &lt;code&gt;page_title&lt;/code&gt; assign.</source>
          <target state="translated">&lt;code&gt;page_title&lt;/code&gt; 割り当てを介して更新された最新のタイトルを返します。</target>
        </trans-unit>
        <trans-unit id="100586180f86523df1ebf8816d1d989915d449d1" translate="yes" xml:space="preserve">
          <source>Returns the node name as an atom or a binary.</source>
          <target state="translated">ノード名をアトムまたはバイナリで返します。</target>
        </trans-unit>
        <trans-unit id="04e4b1e46b0eedeace7201b249a2a9eb08ab9034" translate="yes" xml:space="preserve">
          <source>Returns the node name of the PubSub server</source>
          <target state="translated">PubSubサーバのノード名を返します</target>
        </trans-unit>
        <trans-unit id="bbd108c68de99740a343af53d03365d6c3b662e4" translate="yes" xml:space="preserve">
          <source>Returns the node name of the PubSub server.</source>
          <target state="translated">PubSubサーバのノード名を返します。</target>
        </trans-unit>
        <trans-unit id="4e8885014a9fbe68742a61c9aa89716a5eb862f6" translate="yes" xml:space="preserve">
          <source>Returns the path of the route that the request was matched to</source>
          <target state="translated">リクエストがマッチしたルートのパスを返します</target>
        </trans-unit>
        <trans-unit id="6517a75556b972b837e10a7630e084f8ea18d310" translate="yes" xml:space="preserve">
          <source>Returns the path of the route that the request was matched to.</source>
          <target state="translated">リクエストがマッチしたルートのパスを返します。</target>
        </trans-unit>
        <trans-unit id="b1e3d347797bc224b8f11a9685ae302d1194c3de" translate="yes" xml:space="preserve">
          <source>Returns the request format, such as &quot;json&quot;, &quot;html&quot;.</source>
          <target state="translated">json &quot;や &quot;html &quot;などのリクエストフォーマットを返します。</target>
        </trans-unit>
        <trans-unit id="369952375711619fc078e933db93192a84285d6f" translate="yes" xml:space="preserve">
          <source>Returns the request format, such as &amp;ldquo;json&amp;rdquo;, &amp;ldquo;html&amp;rdquo;</source>
          <target state="translated">「json」、「html」などのリクエスト形式を返します</target>
        </trans-unit>
        <trans-unit id="8c268e9dd52afbcd855aab53e68600ab8d740cf7" translate="yes" xml:space="preserve">
          <source>Returns the request format, such as &amp;ldquo;json&amp;rdquo;, &amp;ldquo;html&amp;rdquo;.</source>
          <target state="translated">「json」、「html」などのリクエスト形式を返します。</target>
        </trans-unit>
        <trans-unit id="5a78dcb141688746066b0448f4eb3a835c720282" translate="yes" xml:space="preserve">
          <source>Returns the request peer data if one is present</source>
          <target state="translated">リクエストピアデータが存在する場合は、そのデータを返します。</target>
        </trans-unit>
        <trans-unit id="4b2e0a57ea27bb05609b77134ecd13b28493c675" translate="yes" xml:space="preserve">
          <source>Returns the request peer data if one is present.</source>
          <target state="translated">リクエストピアが存在する場合は、リクエストピアデータを返します。</target>
        </trans-unit>
        <trans-unit id="be75d781c08d38d7140ec0f42705e1395f1faaf3" translate="yes" xml:space="preserve">
          <source>Returns the router module as an atom, raises if unavailable</source>
          <target state="translated">ルータモジュールをアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="46517d877826cd12571bc0d5ea5767ab4ff4514f" translate="yes" xml:space="preserve">
          <source>Returns the router module as an atom, raises if unavailable.</source>
          <target state="translated">ルータモジュールをアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="0990b614db2cb2aaa4b5be0e932ba3182ba36e5a" translate="yes" xml:space="preserve">
          <source>Returns the schema primary keys as a keyword list</source>
          <target state="translated">スキーマの主キーをキーワードリストとして返します。</target>
        </trans-unit>
        <trans-unit id="a4800203999840972a3c41ffa66949d7538ddf07" translate="yes" xml:space="preserve">
          <source>Returns the schema primary keys as a keyword list.</source>
          <target state="translated">スキーマの主キーをキーワードリストとして返します。</target>
        </trans-unit>
        <trans-unit id="18aa5a5a64f9ee6ab880dac05db023b32dc041ef" translate="yes" xml:space="preserve">
          <source>Returns the script name from the :url configuration.</source>
          <target state="translated">url 設定からスクリプト名を返します。</target>
        </trans-unit>
        <trans-unit id="31a12f4e96c0fc87ccd1e9bcf6c59f9306838d68" translate="yes" xml:space="preserve">
          <source>Returns the sent response</source>
          <target state="translated">送信されたレスポンスを返します。</target>
        </trans-unit>
        <trans-unit id="25c8c207c3c88d97d73be4176fcfcb28de0cd546" translate="yes" xml:space="preserve">
          <source>Returns the sent response.</source>
          <target state="translated">送信されたレスポンスを返します。</target>
        </trans-unit>
        <trans-unit id="d9fd20df924109bf62002e612bb2718fda58fd6c" translate="yes" xml:space="preserve">
          <source>Returns the status code given an integer or a known atom</source>
          <target state="translated">整数または既知の原子を指定してステータスコードを返します。</target>
        </trans-unit>
        <trans-unit id="8112280a1d9a9eed9986a98a56185aaf0d3ad1b4" translate="yes" xml:space="preserve">
          <source>Returns the status code given an integer or a known atom.</source>
          <target state="translated">整数または既知のアトムを指定してステータスコードを返します。</target>
        </trans-unit>
        <trans-unit id="1e0c4c0d3371a5faffa7436a461ad69dac4cf038" translate="yes" xml:space="preserve">
          <source>Returns the status of a storage given by options.</source>
          <target state="translated">オプションで指定したストレージの状態を返します。</target>
        </trans-unit>
        <trans-unit id="036227c51832f19c8fe4491fec71303a7ca2fc92" translate="yes" xml:space="preserve">
          <source>Returns the template name rendered in the view as a string (or nil if no template was rendered)</source>
          <target state="translated">ビューでレンダリングされたテンプレート名を文字列で返します(テンプレートがレンダリングされなかった場合はnil)。</target>
        </trans-unit>
        <trans-unit id="b74a2ca0130c440e979a1e8c605e1c38a783872e" translate="yes" xml:space="preserve">
          <source>Returns the template name rendered in the view as a string (or nil if no template was rendered).</source>
          <target state="translated">ビューでレンダリングされたテンプレート名を文字列で返します(テンプレートがレンダリングされなかった場合はnil)。</target>
        </trans-unit>
        <trans-unit id="5755763b4e70c82743c4957d0040a3afb209c5bd" translate="yes" xml:space="preserve">
          <source>Returns the transport pid of the socket.</source>
          <target state="translated">ソケットのトランスポートpidを返します。</target>
        </trans-unit>
        <trans-unit id="783e99aa82ad7d796ea327d6aac11565abe4f437" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the ParameterizedType.</source>
          <target state="translated">ParameterizedType の基礎となるスキーマ・タイプを返します。</target>
        </trans-unit>
        <trans-unit id="507067fd0d89bd4f0ad50d809841a87c15cc8cb3" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the custom type</source>
          <target state="translated">カスタム型の基礎となるスキーマ型を返します。</target>
        </trans-unit>
        <trans-unit id="271a09cc9da9ced3d323139cc5b7522c3d1476c6" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the custom type.</source>
          <target state="translated">カスタムタイプの基礎となるスキーマタイプを返します。</target>
        </trans-unit>
        <trans-unit id="d0168d121e1fa46afffbf8dc03d00e9999b5676e" translate="yes" xml:space="preserve">
          <source>Returns the updated connection.</source>
          <target state="translated">更新された接続を返します。</target>
        </trans-unit>
        <trans-unit id="8d989e0e48b23876aff9fc19ce0c7a1355322d7f" translate="yes" xml:space="preserve">
          <source>Returns the value for the given field</source>
          <target state="translated">指定したフィールドの値を返します</target>
        </trans-unit>
        <trans-unit id="eb635c80392dfe4a55166fd9b780bfd2fb360b6c" translate="yes" xml:space="preserve">
          <source>Returns the value for the given field.</source>
          <target state="translated">指定したフィールドの値を返します。</target>
        </trans-unit>
        <trans-unit id="bdede86e29744413b4c8bd8be88acede4fe0e4e1" translate="yes" xml:space="preserve">
          <source>Returns the values of the request header specified by &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 指定されたリクエストヘッダーの値を返します</target>
        </trans-unit>
        <trans-unit id="6821bba3917525e700d89961cc4335df9746ebad" translate="yes" xml:space="preserve">
          <source>Returns the values of the request header specified by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; で指定されたリクエストヘッダーの値を返します。</target>
        </trans-unit>
        <trans-unit id="6cde76fd3b77cd36620cfa2e2bcf5c4ab0a5aa45" translate="yes" xml:space="preserve">
          <source>Returns the values of the response header specified by &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 指定された応答ヘッダーの値を返します</target>
        </trans-unit>
        <trans-unit id="5ba2a203bbd819ca4ea6eea9c63bac5cb036c81a" translate="yes" xml:space="preserve">
          <source>Returns the values of the response header specified by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; で指定された応答ヘッダーの値を返します。</target>
        </trans-unit>
        <trans-unit id="3097f8bc663465d9a4efd1ef7a4f4b0433fc4f6a" translate="yes" xml:space="preserve">
          <source>Returns the whole session.</source>
          <target state="translated">セッション全体を返します。</target>
        </trans-unit>
        <trans-unit id="5d131adafde27edb203f3f487c15d74433a8bf3f" translate="yes" xml:space="preserve">
          <source>Returns true if the current process is inside a transaction</source>
          <target state="translated">現在のプロセスがトランザクション内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="244cb8f64bc0228027dbfabcd56c8bf9cbaa85cc" translate="yes" xml:space="preserve">
          <source>Returns true if the current process is inside a transaction.</source>
          <target state="translated">現在のプロセスがトランザクション内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="0087a454276ead29151f3ca1b8a8149fe290a150" translate="yes" xml:space="preserve">
          <source>Returns true if the given process is inside a transaction</source>
          <target state="translated">指定したプロセスがトランザクション内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="fa1b59614734c4fa1e0c7ba4f241012ebfe1a1ae" translate="yes" xml:space="preserve">
          <source>Returns true if the given process is inside a transaction.</source>
          <target state="translated">指定したプロセスがトランザクション内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="b0c8ec1339bcd282812faf5c35e6feca89484534" translate="yes" xml:space="preserve">
          <source>Returns true if the socket is connected and the tracked static assets have changed.</source>
          <target state="translated">ソケットが接続されており、追跡されている静的アセットが変更されている場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="6c2672269a7d2c204c8741218a812007bb94194c" translate="yes" xml:space="preserve">
          <source>Returns true if the socket is connected.</source>
          <target state="translated">ソケットが接続されている場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="d326b663ee7befbea5ebdd7ab51a4926be86d1ea" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows after the current row within the partition</source>
          <target state="translated">パーティション内の現在の行からオフセットした行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="f3bdf45df286504f65bab6bf86f355e22fff5faf" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows after the current row within the partition.</source>
          <target state="translated">パーティション内の現在の行からオフセットした行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="0fc4d407cffc48089a65568ac93f1138135c7d3c" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows before the current row within the partition</source>
          <target state="translated">パーティション内の現在の行よりも前のオフセットされた行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="3d60bce40451a002cfea905ef0ccae99b43a3285" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows before the current row within the partition.</source>
          <target state="translated">パーティション内の現在の行よりも前のオフセットされた行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="11d374928879f9ad2ae1990875af52884d99655e" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the first row of the window frame</source>
          <target state="translated">ウィンドウフレームの最初の行である行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="44abe5ff94ea4bbf4d6b793aca8de503901d2b46" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the first row of the window frame.</source>
          <target state="translated">ウィンドウフレームの最初の行である行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="9e7492912bc687a0a0b1eb9832642cf502b4b219" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the last row of the window frame</source>
          <target state="translated">ウィンドウフレームの最後の行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="99307517be28f40f09f2b0911dee62531f2ecbae" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the last row of the window frame.</source>
          <target state="translated">ウィンドウフレームの最後の行である行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="03d0b7038b7bcc307a1128ac325767a926e11cd2" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); &lt;code&gt;nil&lt;/code&gt; if no such row.</source>
          <target state="translated">ウィンドウフレームのn番目の行（1から数えて）である行で評価された値を返します。そのような行がない場合は &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="376350cf9e0c496114f28913dd5703e383ff95e9" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row</source>
          <target state="translated">ウィンドウフレームの n 番目の行(1 から数えて)で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="193d6465e6be547ab824ad9adc251443ea776fb4" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row.</source>
          <target state="translated">ウィンドウフレームの n 番目の行(1 から数えて)で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="4185cf841db525cb673b734d9d83b3f8d30499f6" translate="yes" xml:space="preserve">
          <source>Returns value from the &lt;code&gt;json_field&lt;/code&gt; pointed to by &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 指す &lt;code&gt;json_field&lt;/code&gt; から値を返します。</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="7e1b1179bc35ff04b58b12b35f9adb55ffe0b517" translate="yes" xml:space="preserve">
          <source>Reverses the ordering of the query.</source>
          <target state="translated">クエリの順序を反転させます。</target>
        </trans-unit>
        <trans-unit id="274cbf2f5a0cc2071c2807d8040166a6a044e82c" translate="yes" xml:space="preserve">
          <source>Right now, we have two transformations in our pipeline. In the first call, we invoke &lt;a href=&quot;../ecto/ecto.changeset#cast/3&quot;&gt;&lt;code&gt;Ecto.Changeset.cast/3&lt;/code&gt;&lt;/a&gt;, passing in our external parameters and marking which fields are required for validation.</source>
          <target state="translated">現在、パイプラインには2つの変換があります。最初の呼び出しでは、&lt;a href=&quot;../ecto/ecto.changeset#cast/3&quot;&gt; &lt;code&gt;Ecto.Changeset.cast/3&lt;/code&gt; &lt;/a&gt;を呼び出し、外部パラメーターを渡して、検証に必要なフィールドをマークします。</target>
        </trans-unit>
        <trans-unit id="6a4a0b5e1505a3cc5816c81e08650eced6f14871" translate="yes" xml:space="preserve">
          <source>Rolls back the current transaction</source>
          <target state="translated">現在のトランザクションをロールバックします。</target>
        </trans-unit>
        <trans-unit id="08baa16b0080930585636decba273851109f2fef" translate="yes" xml:space="preserve">
          <source>Rolls back the current transaction.</source>
          <target state="translated">現在のトランザクションをロールバックします。</target>
        </trans-unit>
        <trans-unit id="e617ddf68055b6bc3292185f04d048c328ed5104" translate="yes" xml:space="preserve">
          <source>Router plugs</source>
          <target state="translated">ルータープラグ</target>
        </trans-unit>
        <trans-unit id="cf67fbcf4a2aa171d81fa97e3bbadea7199593aa" translate="yes" xml:space="preserve">
          <source>Routers are the main hubs of Phoenix applications. They match HTTP requests to controller actions, wire up real-time channel handlers, and define a series of pipeline transformations scoped to a set of routes.</source>
          <target state="translated">ルータは、Phoenixアプリケーションのメインハブです。ルータは、HTTPリクエストをコントローラアクションにマッチさせ、リアルタイムチャネルハンドラを配線し、一連のパイプライン変換を一連のルートにスコープして定義します。</target>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="translated">Routes</target>
        </trans-unit>
        <trans-unit id="5da2bca786eea68965488901fbfa83e2aa4a40c6" translate="yes" xml:space="preserve">
          <source>Routes allow for globbing which will match the remaining parts of a route and can be available as a parameter in the function body. Also note that a glob can&amp;rsquo;t be followed by other segments:</source>
          <target state="translated">ルートは、ルートの残りの部分と一致し、関数本体のパラメーターとして使用できるグロビングを可能にします。また、グロブの後に他のセグメントを続けることはできないことに注意してください：</target>
        </trans-unit>
        <trans-unit id="02961ca7a4bc6b74268220225de904dfb4aefcab" translate="yes" xml:space="preserve">
          <source>Routes allow for globbing which will match the remaining parts of a route and can be available as a parameter in the function body. Also note that a glob can't be followed by other segments:</source>
          <target state="translated">ルートでは、ルートの残りの部分にマッチするグロブが可能で、関数本体のパラメータとして使用できます。また、グロブを他のセグメントに追従させることはできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a628d96ac5d8409e24858c3a900fdee051d07a9f" translate="yes" xml:space="preserve">
          <source>Routes are defined inside scopes and scopes may pipe through multiple pipelines. Once a route matches, Phoenix invokes all plugs defined in all pipelines associated to that route. For example, accessing &quot;/&quot; will pipe through the &lt;code&gt;:browser&lt;/code&gt; pipeline, consequently invoking all of its plugs.</source>
          <target state="translated">ルートはスコープ内で定義され、スコープは複数のパイプラインをパイプする場合があります。ルートが一致すると、Phoenixはそのルートに関連付けられたすべてのパイプラインで定義されたすべてのプラグを呼び出します。たとえば、「/」にアクセスすると、 &lt;code&gt;:browser&lt;/code&gt; パイプラインを介してパイプされ、その結果、すべてのプラグが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="579a42f5b5e0e0564cede3abd969bb3a7c3f2696" translate="yes" xml:space="preserve">
          <source>Routes are matched from top to bottom. The second route here:</source>
          <target state="translated">ルートは上から順にマッチしています。2つ目のルートはこちら。</target>
        </trans-unit>
        <trans-unit id="7c1c14571bc7de6b3055bd4f7d4f0dabba7f32cf" translate="yes" xml:space="preserve">
          <source>Routes can also match glob-like patterns, routing any path with a common base to the same controller. For example:</source>
          <target state="translated">ルートはグロブのようなパターンにもマッチし、共通のベースを持つパスを同じコントローラにルーティングすることができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="fa66d0ab61406d168f9a3b400e02c6c0a95ab178" translate="yes" xml:space="preserve">
          <source>Routes can use glob-like patterns to match trailing segments.</source>
          <target state="translated">ルートは、末尾のセグメントにマッチするように、グロブのようなパターンを使用することができます。</target>
        </trans-unit>
        <trans-unit id="4fec243ace8656b1c705371f569ea948d4d0ea95" translate="yes" xml:space="preserve">
          <source>Routes compilation</source>
          <target state="translated">コンパイルルート</target>
        </trans-unit>
        <trans-unit id="6e5549afb365bc0fa97665b0504dd6e6d2976e12" translate="yes" xml:space="preserve">
          <source>Routes options</source>
          <target state="translated">ルートオプション</target>
        </trans-unit>
        <trans-unit id="bbd62cdbcf46b02f52ad7b060f838dc9cd60b3a9" translate="yes" xml:space="preserve">
          <source>Routes which begin with 'resources' expand to 8 clauses of the match function.</source>
          <target state="translated">resources」で始まるルートは、マッチ関数の8節まで拡張されます。</target>
        </trans-unit>
        <trans-unit id="8e8835b19e2eaad7b820c0594f5e37fcc2ce5f59" translate="yes" xml:space="preserve">
          <source>Routes which begin with an HTTP verb name expand to a single clause of the match function.</source>
          <target state="translated">HTTP 動詞名で始まるルートは、マッチ関数の単一節に展開されます。</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="84e224649c063e2dd1f82a224f93c548fef47dbc" translate="yes" xml:space="preserve">
          <source>Routing is a big topic, and we have covered a lot of ground here. The important points to take away from this guide are:</source>
          <target state="translated">ルーティングは大きなトピックであり、ここでは多くの分野をカバーしています。このガイドから取り上げる重要なポイントは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="130c795aadf43a7db5ad7e08b787f7cc9a8eb3e4" translate="yes" xml:space="preserve">
          <source>Run &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; once again at the root of your project. You should see something like the following:</source>
          <target state="translated">プロジェクトのルートでもう一度&lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; &lt;/a&gt;実行します。次のようなものが表示されます。</target>
        </trans-unit>
        <trans-unit id="2f00fc4cad71fdaaf68036430c78b988bd7086be" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; again, in addition to the previous set of routes we get the following:</source>
          <target state="translated">以前のルートのセットに加えて、&lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; を&lt;/a&gt;再度実行すると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="26825f3f191e58c590a42f6acfadd3a65af1c55f" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; now shows that we have all the routes except the DELETE request to the delete action.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; を&lt;/a&gt;実行すると、削除アクションへのDELETEリクエストを除くすべてのルートがあることがわかります。</target>
        </trans-unit>
        <trans-unit id="5e301fd083c95f3de583f1471b3a6f06e21387a1" translate="yes" xml:space="preserve">
          <source>Running &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; shows that we now only have the routes to the index and show actions defined.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.routes&quot;&gt; &lt;code&gt;mix phx.routes&lt;/code&gt; &lt;/a&gt;を実行すると、インデックスへのルートとshowアクションのみが定義されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="0ed2d22d4523e3fc5d82bad24c4edc0794515584" translate="yes" xml:space="preserve">
          <source>Running the multi in a transaction will execute no previous steps and returns the value of the first error added.</source>
          <target state="translated">トランザクションでマルチを実行すると、それ以前のステップは実行されず、最初に追加されたエラーの値が返されます。</target>
        </trans-unit>
        <trans-unit id="f6ca3839dbd23c33b01182553ca5c3c46fb058fd" translate="yes" xml:space="preserve">
          <source>Runs the code reloader if enabled.</source>
          <target state="translated">有効になっている場合は、コードリローダを実行します。</target>
        </trans-unit>
        <trans-unit id="96ea572c5a69806aa87d98f4853db495ff69fe2c" translate="yes" xml:space="preserve">
          <source>Runs the given function inside a transaction</source>
          <target state="translated">トランザクション内で指定された関数を実行します。</target>
        </trans-unit>
        <trans-unit id="1b43f3d8a5a546054aa677d2470158616bf0b261" translate="yes" xml:space="preserve">
          <source>Runs the given function inside a transaction.</source>
          <target state="translated">トランザクション内で指定された関数を実行します。</target>
        </trans-unit>
        <trans-unit id="3172c85a51f1a6064e628809c6d4b4968b27fe04" translate="yes" xml:space="preserve">
          <source>Runs the given function or &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; inside a transaction</source>
          <target state="translated">トランザクション内で指定された関数または&lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; を&lt;/a&gt;実行します</target>
        </trans-unit>
        <trans-unit id="d03a7048df33145a714a4402106ee56bef98057a" translate="yes" xml:space="preserve">
          <source>Runs the given function or &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; inside a transaction.</source>
          <target state="translated">トランザクション内で指定された関数または&lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;を実行します。</target>
        </trans-unit>
        <trans-unit id="1582600625fd381ca554979f70e7434d87fa5103" translate="yes" xml:space="preserve">
          <source>Runtime configuration</source>
          <target state="translated">ランタイム設定</target>
        </trans-unit>
        <trans-unit id="eb6d964d366ee36fc795e3db3126c304138f3875" translate="yes" xml:space="preserve">
          <source>Runtime configuration, instead, is accessed during or after your application is started and can be read through the &lt;a href=&quot;#c:config/2&quot;&gt;&lt;code&gt;config/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">代わりに、ランタイム構成は、アプリケーションの起動中または起動後にアクセスされ、&lt;a href=&quot;#c:config/2&quot;&gt; &lt;code&gt;config/2&lt;/code&gt; &lt;/a&gt;関数を介して読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="7ccf39a54e7e6847cbc58f66ec8da72b3f8c6f27" translate="yes" xml:space="preserve">
          <source>Runtime-time usage</source>
          <target state="translated">実行時の使用法</target>
        </trans-unit>
        <trans-unit id="78fe2b7f7666674900a3c15471ccc99184e3f647" translate="yes" xml:space="preserve">
          <source>SQL adapters, such as Postgres and MySQL, can only enumerate a stream inside a transaction.</source>
          <target state="translated">PostgresやMySQLなどのSQLアダプタは、トランザクション内のストリームを列挙することしかできません。</target>
        </trans-unit>
        <trans-unit id="d485b7db48da4185e9bf643f37a6c7624112bb34" translate="yes" xml:space="preserve">
          <source>SVG support</source>
          <target state="translated">SVG サポート</target>
        </trans-unit>
        <trans-unit id="31be5af5971e510c34651813107373056d053546" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast/3&quot;&gt;&lt;code&gt;broadcast/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails</source>
          <target state="translated">&lt;a href=&quot;#broadcast/3&quot;&gt; &lt;code&gt;broadcast/3&lt;/code&gt; &lt;/a&gt;と同じですが、ブロードキャストが失敗した場合に発生します</target>
        </trans-unit>
        <trans-unit id="c0f4a3368e53f6e8567bf92693a54053f93f17a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast/3&quot;&gt;&lt;code&gt;broadcast/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails.</source>
          <target state="translated">&lt;a href=&quot;#broadcast/3&quot;&gt; &lt;code&gt;broadcast/3&lt;/code&gt; &lt;/a&gt;と同じですが、ブロードキャストが失敗した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="26f5ed3ec52e2d5cfcd2fd1792eff31c6659c93e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast_from/3&quot;&gt;&lt;code&gt;broadcast_from/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails</source>
          <target state="translated">&lt;a href=&quot;#broadcast_from/3&quot;&gt; &lt;code&gt;broadcast_from/3&lt;/code&gt; &lt;/a&gt;と同じですが、ブロードキャストが失敗した場合に発生します</target>
        </trans-unit>
        <trans-unit id="04f6a54ce5f51c23469a584d22c02e19473ae3e0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast_from/3&quot;&gt;&lt;code&gt;broadcast_from/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails.</source>
          <target state="translated">&lt;a href=&quot;#broadcast_from/3&quot;&gt; &lt;code&gt;broadcast_from/3&lt;/code&gt; &lt;/a&gt;と同じですが、ブロードキャストが失敗した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="db5de4972e7e363b7c52f64b2eb5d90ef52d3ac5" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:delete/2&quot;&gt;&lt;code&gt;delete/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:delete/2&quot;&gt; &lt;code&gt;delete/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します</target>
        </trans-unit>
        <trans-unit id="c35ae21530f6b981d3fffc6ca1e8df7ca170d9a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:delete/2&quot;&gt;&lt;code&gt;delete/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:delete/2&quot;&gt; &lt;code&gt;delete/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します。</target>
        </trans-unit>
        <trans-unit id="226733d0f50b1f3b16fb5e58c11ac4844d58a7ac" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します</target>
        </trans-unit>
        <trans-unit id="968367c33e0b0cf121b143beda5c49d1c0848a24" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します。</target>
        </trans-unit>
        <trans-unit id="632a0c7bbe3b6685b1ddbd04be7b8356ba08e7aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert_or_update/2&quot;&gt;&lt;code&gt;insert_or_update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:insert_or_update/2&quot;&gt; &lt;code&gt;insert_or_update/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合はレイズします</target>
        </trans-unit>
        <trans-unit id="d2d1c2ac23c385ba9429c1adba38eeb48052559d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert_or_update/2&quot;&gt;&lt;code&gt;insert_or_update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:insert_or_update/2&quot;&gt; &lt;code&gt;insert_or_update/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します。</target>
        </trans-unit>
        <trans-unit id="77f5ce57b6f04302cee6f42deda43b98256efd0e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します</target>
        </trans-unit>
        <trans-unit id="293c4f91ba874963771add9b057936efc16cc7a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合に発生します。</target>
        </trans-unit>
        <trans-unit id="3c059b0c75bda32d71683e3cc464b2c56b540a1d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.casterror&quot;&gt;&lt;code&gt;Ecto.CastError&lt;/code&gt;&lt;/a&gt; on invalid arguments</source>
          <target state="translated">&lt;a href=&quot;#cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; と&lt;/a&gt;同じ&lt;a href=&quot;ecto.casterror&quot;&gt; &lt;code&gt;Ecto.CastError&lt;/code&gt; &lt;/a&gt;、無効な引数でEcto.CastErrorを発生させます</target>
        </trans-unit>
        <trans-unit id="559604890cc16a2cec1cf5330d10ff3357d7d356" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.casterror&quot;&gt;&lt;code&gt;Ecto.CastError&lt;/code&gt;&lt;/a&gt; on invalid arguments.</source>
          <target state="translated">&lt;a href=&quot;#cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; と&lt;/a&gt;同じ&lt;a href=&quot;ecto.casterror&quot;&gt; &lt;code&gt;Ecto.CastError&lt;/code&gt; &lt;/a&gt;、無効な引数でEcto.CastErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="8fdfe0c9c6c86949eead3814403a059c18d01794" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch_change/2&quot;&gt;&lt;code&gt;fetch_change/2&lt;/code&gt;&lt;/a&gt; but returns the value or raises if the given key was not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch_change/2&quot;&gt; &lt;code&gt;fetch_change/2&lt;/code&gt; と&lt;/a&gt;同じですが、値を返すか、指定されたキーが見つからなかった場合は発生します。</target>
        </trans-unit>
        <trans-unit id="0e00e34052e2f613e9704fe4b4e5b654fbb8ff92" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch_field/2&quot;&gt;&lt;code&gt;fetch_field/2&lt;/code&gt;&lt;/a&gt; but returns the value or raises if the given key was not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch_field/2&quot;&gt; &lt;code&gt;fetch_field/2&lt;/code&gt; と&lt;/a&gt;同じですが、値を返すか、指定されたキーが見つからなかった場合は発生します。</target>
        </trans-unit>
        <trans-unit id="938bc5d04187bec60adad9f96b00fb0934dd29e0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;nil&lt;/code&gt; instead of raising. This is often used with &lt;a href=&quot;phoenix.controller#view_module/1&quot;&gt;&lt;code&gt;Phoenix.Controller.view_module/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.controller#view_template/1&quot;&gt;&lt;code&gt;Phoenix.Controller.view_template/1&lt;/code&gt;&lt;/a&gt;, which must be imported into your views. See the &quot;Examples&quot; section below.</source>
          <target state="translated">&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt;と同じですが、 &lt;code&gt;nil&lt;/code&gt; ではなくnilを返します。これは、&lt;a href=&quot;phoenix.controller#view_module/1&quot;&gt; &lt;code&gt;Phoenix.Controller.view_module/1&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;phoenix.controller#view_template/1&quot;&gt; &lt;code&gt;Phoenix.Controller.view_template/1&lt;/code&gt; &lt;/a&gt;でよく使用され、ビューにインポートする必要があります。以下の「例」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="43873fb5254efdd9068216bf949a05b8c683f8d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;nil&lt;/code&gt; instead of raising. Useful for dynamically rendering templates in the layout that may or may not be implemented by the &lt;code&gt;@view_module&lt;/code&gt; view.</source>
          <target state="translated">&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt;と同じですが、レイズせずに &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;code&gt;@view_module&lt;/code&gt; ビューによって実装される場合とされない場合があるレイアウトでテンプレートを動的にレンダリングするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="06b4a10e004cd74aa0f94998421cfc6dfe686a41" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;, but returns either the socket or throws an error</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt;と同じですが、ソケットを返すか、エラーをスローします</target>
        </trans-unit>
        <trans-unit id="32e1585c10935eaf9f25e043fb1288b908327ad6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;, but returns either the socket or throws an error.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt;と同じですが、ソケットを返すか、エラーをスローします。</target>
        </trans-unit>
        <trans-unit id="8832210111dce6e6f23cc1837828c66a6682403b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;inputs_for(form, field, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputs_for(form, field, [])&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="6c2c9ca478645cb9af567a27b68f7e9eacddf986" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;update/3&lt;/code&gt;, but with an arbitrary process.</source>
          <target state="translated">&lt;code&gt;update/3&lt;/code&gt; と同じですが、任意のプロセスがあります。</target>
        </trans-unit>
        <trans-unit id="cadd66a2347f5e19072c0277b8c7358f4c96a166" translate="yes" xml:space="preserve">
          <source>Same with &lt;code&gt;track/3&lt;/code&gt;, except track any process by &lt;code&gt;topic&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; と &lt;code&gt;key&lt;/code&gt; プロセスを追跡することを除いて、 &lt;code&gt;track/3&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="b5230ecdf4e78f0dd162281a0a78c6cdc853cbe8" translate="yes" xml:space="preserve">
          <source>Schema</source>
          <target state="translated">Schema</target>
        </trans-unit>
        <trans-unit id="301b2b96f90182287e27e3183bc54358047e0434" translate="yes" xml:space="preserve">
          <source>Schema attributes</source>
          <target state="translated">スキーマ属性</target>
        </trans-unit>
        <trans-unit id="10521488170ddab303e05a3772fb749bf1fe39ec" translate="yes" xml:space="preserve">
          <source>Schemaless changesets</source>
          <target state="translated">スキーマレスのチェンジセット</target>
        </trans-unit>
        <trans-unit id="c37847eb673c5d234b9087b74aff7c743ce8ddd6" translate="yes" xml:space="preserve">
          <source>Schemas allow developers to define the shape of their data. Let's see an example:</source>
          <target state="translated">スキーマによって、開発者はデータの形状を定義することができます。例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="36e85587fa0a0a02a5d43c4f67e3b1d5f4e90b05" translate="yes" xml:space="preserve">
          <source>Schemas allows developers to define the shape of their data. Let&amp;rsquo;s see an example:</source>
          <target state="translated">スキーマを使用すると、開発者はデータの形状を定義できます。例を見てみましょう：</target>
        </trans-unit>
        <trans-unit id="07e26be9db0f26172bb088855ef3ac5980016828" translate="yes" xml:space="preserve">
          <source>Scoped Routes</source>
          <target state="translated">スコープされたルート</target>
        </trans-unit>
        <trans-unit id="466834fbbd30000fe5c774b9d9cd839774b60965" translate="yes" xml:space="preserve">
          <source>Scopes allow us to scope on any path or even on the helper name:</source>
          <target state="translated">スコープでは、任意のパスやヘルパー名をスコープすることができます。</target>
        </trans-unit>
        <trans-unit id="8e61bf9a20029e1be9ec2969434d5904c25253a4" translate="yes" xml:space="preserve">
          <source>Scopes and Resources</source>
          <target state="translated">スコープとリソース</target>
        </trans-unit>
        <trans-unit id="9a46c6901db820a406d4214e513af4b23e24d4c5" translate="yes" xml:space="preserve">
          <source>Scopes are a way to group routes under a common path prefix and scoped set of plugs. We might want to do this for admin functionality, APIs, and especially for versioned APIs. Let's say we have user generated reviews on a site, and that those reviews first need to be approved by an admin. The semantics of these resources are quite different, and they might not share the same controller. Scopes enable us to segregate these routes.</source>
          <target state="translated">スコープは、共通のパスプレフィックスとスコープされたプラグのセットの下でルートをグループ化する方法です。これは、管理者機能や API、特にバージョン管理された API のために必要になるかもしれません。あるサイトにユーザーが生成したレビューがあり、それらのレビューは最初に管理者によって承認される必要があるとしましょう。これらのリソースのセマンティクスは全く異なり、同じコントローラを共有しているわけではないかもしれません。スコープを使用することで、これらのルートを分離することができます。</target>
        </trans-unit>
        <trans-unit id="b098ea702b81c313363d92a398d9e980eba7892e" translate="yes" xml:space="preserve">
          <source>Scopes can also be arbitrarily nested, but you should do it carefully as nesting can sometimes make our code confusing and less clear. With that said, suppose that we had a versioned API with resources defined for images, reviews and users. Then technically we could setup routes for the versioned API like this:</source>
          <target state="translated">スコープは任意に入れ子にすることもできますが、入れ子にするとコードが混乱してわかりにくくなることがあるので、慎重に行う必要があります。とはいえ、画像、レビュー、ユーザー用のリソースを定義したバージョニングされた API があったとしましょう。その場合、技術的には以下のようにバージョニングされた API のルートを設定することができます。</target>
        </trans-unit>
        <trans-unit id="c60ddff878bc99a3b1fe5b72bc3ec3a2e38ae776" translate="yes" xml:space="preserve">
          <source>Scopes have their own section in this guide, so we won't spend time on the &lt;code&gt;scope &quot;/&quot;, HelloWeb do&lt;/code&gt; block here. The &lt;code&gt;pipe_through :browser&lt;/code&gt; line will get a full treatment in the Pipeline section of this guide. For now, you only need to know that pipelines allow a set of plugs to be applied to different sets of routes.</source>
          <target state="translated">このガイドにはスコープに独自のセクションがあるため、 &lt;code&gt;scope &quot;/&quot;, HelloWeb do&lt;/code&gt; 時間を費やすことはありません。HelloWebはここでブロックします。 &lt;code&gt;pipe_through :browser&lt;/code&gt; ラインは、このガイドのパイプラインセクションの完全な治療を取得します。今のところ、パイプラインではプラグのセットをさまざまなルートのセットに適用できることを知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="8bed05cb9f24b2d7a8076ffec5f8730e920c018c" translate="yes" xml:space="preserve">
          <source>Screencasts/Courses</source>
          <target state="translated">Screencasts/Courses</target>
        </trans-unit>
        <trans-unit id="6a98f22dc569c4feed720b2ce5b3e5a64ff2b3dc" translate="yes" xml:space="preserve">
          <source>Scrubs the parameters from the request</source>
          <target state="translated">リクエストのパラメータをスクラブします。</target>
        </trans-unit>
        <trans-unit id="27f0d186b8364ecab92240cc4869c5709c41e5a7" translate="yes" xml:space="preserve">
          <source>Scrubs the parameters from the request.</source>
          <target state="translated">リクエストのパラメータをスクラブします。</target>
        </trans-unit>
        <trans-unit id="9468cdfe43170f8e1b7c161207fcd0d7f167d72f" translate="yes" xml:space="preserve">
          <source>Search functions: &lt;a href=&quot;#like/2&quot;&gt;&lt;code&gt;like/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ilike/2&quot;&gt;&lt;code&gt;ilike/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">検索機能：&lt;a href=&quot;#like/2&quot;&gt; &lt;code&gt;like/2&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ilike/2&quot;&gt; &lt;code&gt;ilike/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="029b41059043179b345161e80cbafb609edaf362" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 検索を &lt;code&gt;search&lt;/code&gt; します</target>
        </trans-unit>
        <trans-unit id="8eb5e27c9b5ccf9b6aff18d10a22c385ce8d1536" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; in a case insensitive fashion</source>
          <target state="translated">大文字と小文字を区別しない方法で &lt;code&gt;string&lt;/code&gt; を &lt;code&gt;search&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="dd7fbd2e5059a6a1e0fcfe24cbc5806164e322c8" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; in a case insensitive fashion.</source>
          <target state="translated">大文字と小文字を区別しない方法で &lt;code&gt;string&lt;/code&gt; を &lt;code&gt;search&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="d347710f20087bdf2cb082efeefb0ba70285ed03" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; の検索を &lt;code&gt;search&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="5c834e995937b264bb5da33fb189e868a41d4685" translate="yes" xml:space="preserve">
          <source>Security considerations of the LiveView model</source>
          <target state="translated">LiveViewモデルのセキュリティに関する考察</target>
        </trans-unit>
        <trans-unit id="8262409c05b2324973c717b79900c50cf6161e00" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#apply_action/2&quot;&gt;&lt;code&gt;apply_action/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#apply_action/2&quot;&gt; &lt;code&gt;apply_action/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ea268d48151dccb1369aa816b76cee1cc4706d43" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#assign/3&quot;&gt;&lt;code&gt;assign/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assign/3&quot;&gt; &lt;code&gt;assign/3&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="81561006a302e8eb9f2f8d7aba1fe152d658b05d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#bypass_through/1&quot;&gt;&lt;code&gt;bypass_through/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#bypass_through/1&quot;&gt; &lt;code&gt;bypass_through/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="429540a302a78a8a1ebb45909c07be1635915920" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:embed_as/1&quot;&gt;&lt;code&gt;embed_as/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#c:embed_as/1&quot;&gt; &lt;code&gt;embed_as/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f85ce73a1d6d3c6c1224f375b5b84f470970aa61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:execute/5&quot;&gt;&lt;code&gt;execute/5&lt;/code&gt;&lt;/a&gt; for a description of arguments.</source>
          <target state="translated">引数の説明については、&lt;a href=&quot;#c:execute/5&quot;&gt; &lt;code&gt;execute/5&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d115725c55ec1d85116ad3d8c8b382bc34ea11f3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:put_dynamic_repo/1&quot;&gt;&lt;code&gt;put_dynamic_repo/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#c:put_dynamic_repo/1&quot;&gt; &lt;code&gt;put_dynamic_repo/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a9163e815f8428555b4d0758f30bebe740c9ac3f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;d prefer to cast and validate external parameters.</source>
          <target state="translated">外部パラメーターをキャストして検証する場合は、&lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="70d061cb540d5f0c11648f4d9f67f326ef8f0ba8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; if you'd prefer to cast and validate external parameters.</source>
          <target state="translated">外部パラメータをキャストして検証する場合は、&lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="160359dfa99216e1c3e6c4a032ce68a16d781dd6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#code/1&quot;&gt;&lt;code&gt;code/1&lt;/code&gt;&lt;/a&gt; for the mapping.</source>
          <target state="translated">マッピングについては、&lt;a href=&quot;#code/1&quot;&gt; &lt;code&gt;code/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="54c38114b81a0de364df06f82b76a8b8d2fa3ade" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#current_path/2&quot;&gt;&lt;code&gt;current_path/2&lt;/code&gt;&lt;/a&gt; to override the default parameters.</source>
          <target state="translated">デフォルトのパラメータを上書きするには、&lt;a href=&quot;#current_path/2&quot;&gt; &lt;code&gt;current_path/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ab8b7a05d70ebc5262d9bc1c4ae83f023d55df6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#current_url/2&quot;&gt;&lt;code&gt;current_url/2&lt;/code&gt;&lt;/a&gt; to override the default parameters.</source>
          <target state="translated">デフォルトのパラメータを上書きするには、&lt;a href=&quot;#current_url/2&quot;&gt; &lt;code&gt;current_url/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="47e01c9fd9229a5ca109aaef23fb86782167896d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#datetime_add/3&quot;&gt;&lt;code&gt;datetime_add/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#datetime_add/3&quot;&gt; &lt;code&gt;datetime_add/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="446dc24810f81cacc9b7d86ae05c8303571fb483" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#dispatch/5&quot;&gt;&lt;code&gt;dispatch/5&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#dispatch/5&quot;&gt; &lt;code&gt;dispatch/5&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f60ed55eadd7cfdd19c29fe8c1d112c6c91df3c1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#element/3&quot;&gt;&lt;code&gt;element/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#element/3&quot;&gt; &lt;code&gt;element/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="be219b9ba050253444f2a909dff91ef612e5fa56" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; for the available options.</source>
          <target state="translated">使用可能なオプションについては、&lt;a href=&quot;#form_for/4&quot;&gt; &lt;code&gt;form_for/4&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a8899b0d287dfb8d878f8bbed5de0faa5bafbe98" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#get_format/1&quot;&gt;&lt;code&gt;get_format/1&lt;/code&gt;&lt;/a&gt; for retrieval.</source>
          <target state="translated">取得については、&lt;a href=&quot;#get_format/1&quot;&gt; &lt;code&gt;get_format/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b19a5cfb329d7eacbbbf417d5b016f9ed41c581c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#inputs_for/4&quot;&gt;&lt;code&gt;inputs_for/4&lt;/code&gt;&lt;/a&gt; for the available options.</source>
          <target state="translated">使用可能なオプションについては、&lt;a href=&quot;#inputs_for/4&quot;&gt; &lt;code&gt;inputs_for/4&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="406dda280674bab437f44d83fb04430734616082" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#intercept/1&quot;&gt;&lt;code&gt;intercept/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#intercept/1&quot;&gt; &lt;code&gt;intercept/1&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9f110d7ed07bcb97c4369788a800bd8c9a39394a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#join/4&quot;&gt;&lt;code&gt;join/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#join/4&quot;&gt; &lt;code&gt;join/4&lt;/code&gt; を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="89b41f097462aec0e3e090380c34040fd8c70750" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#join/4&quot;&gt;&lt;code&gt;join/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#join/4&quot;&gt; &lt;code&gt;join/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9e5dc5d72d9569c3ffaf92d7fdf6652b4f2ac022" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#label/2&quot;&gt;&lt;code&gt;label/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#label/2&quot;&gt; &lt;code&gt;label/2&lt;/code&gt; を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="b4393f19dfec8ca9111f143b22c91f456d9a3c12" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#label/2&quot;&gt;&lt;code&gt;label/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#label/2&quot;&gt; &lt;code&gt;label/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6f35e881a1408a4ab81f31c333ac0993cdbc2772" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#load_state/2&quot;&gt;&lt;code&gt;load_state/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#load_state/2&quot;&gt; &lt;code&gt;load_state/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a81c8ed463094cf76527d6eef0e1eee58f85d88a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt; for more information on this particular approach.</source>
          <target state="translated">この特定のアプローチの詳細については、&lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b8ef1ba44a049b9e256d983fc00818e665b1193a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#match/5&quot;&gt;&lt;code&gt;match/5&lt;/code&gt;&lt;/a&gt; for options.</source>
          <target state="translated">オプションについては、&lt;a href=&quot;#match/5&quot;&gt; &lt;code&gt;match/5&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2e302be972b9853f322f9a9d0314b6560ffd6f14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#module-intervals&quot;&gt;Intervals&lt;/a&gt; for supported &lt;code&gt;interval&lt;/code&gt; values.</source>
          <target state="translated">サポートされている &lt;code&gt;interval&lt;/code&gt; 値については、&lt;a href=&quot;#module-intervals&quot;&gt;間隔&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e3bdddab0ca71be4e0d0e57670315f70dad3bd4f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#pipeline/2&quot;&gt;&lt;code&gt;pipeline/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#pipeline/2&quot;&gt; &lt;code&gt;pipeline/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="135d4e719d0766f17d2e08228378ae66ce9a070b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#put_resp_cookie/4&quot;&gt;&lt;code&gt;put_resp_cookie/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#put_resp_cookie/4&quot;&gt; &lt;code&gt;put_resp_cookie/4&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4550d4697758fd204f59f25e0b1a6304c93be4d9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#recycle/1&quot;&gt;&lt;code&gt;recycle/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#recycle/1&quot;&gt; &lt;code&gt;recycle/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9aebbba31dbd9458e7a25bf514e18665f833d3dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="908c56d179564b7cfdcfb8431f6434eefed5749c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#reply/2&quot;&gt;&lt;code&gt;reply/2&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">使用例については、&lt;a href=&quot;#reply/2&quot;&gt; &lt;code&gt;reply/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="23896889763021c93678399c008455262a580462" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; &lt;/a&gt;見る/ 4</target>
        </trans-unit>
        <trans-unit id="426590122d0cb0370f085208f290b5ffde8c6940" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0fbd426a6c1ba18664a76c286683f974c4a4dabb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#send_resp/1&quot;&gt;&lt;code&gt;send_resp/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#send_resp/1&quot;&gt; &lt;code&gt;send_resp/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1864cff94e119d0991c6193935a96f066936243f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join!/4&quot;&gt;&lt;code&gt;subscribe_and_join!/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join!/4&quot;&gt; &lt;code&gt;subscribe_and_join!/4&lt;/code&gt; を&lt;/a&gt;ご覧ください</target>
        </trans-unit>
        <trans-unit id="0a44ded8627dc7883d4a01683ab621667c67d00e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join!/4&quot;&gt;&lt;code&gt;subscribe_and_join!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join!/4&quot;&gt; &lt;code&gt;subscribe_and_join!/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2bd76cf963006223cb163794cd0b4753397ed92b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="a5b41f1b5289201c8a07f46617a40568bf625ff0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bb57f840a4d423d2bed6c24c1306f8ecba33756e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; for example and docs.</source>
          <target state="translated">例とドキュメントについては、&lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ef7809f9d350584ddaf5e5164489a613a551a7af" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#with_cte/3&quot;&gt;&lt;code&gt;with_cte/3&lt;/code&gt;&lt;/a&gt; on example of how to build a query with a recursive CTE.</source>
          <target state="translated">再帰CTEを使用してクエリを作成する方法の例については、&lt;a href=&quot;#with_cte/3&quot;&gt; &lt;code&gt;with_cte/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="371fb723d2394a3831042751931faedbd69adef9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub#subscribe/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.subscribe/3&lt;/code&gt;&lt;/a&gt; for options.</source>
          <target state="translated">オプションについては、&lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub#subscribe/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.subscribe/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7c76e6cc809f1d86ecee6d287cd01c8ce78fd4a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../plug/1.5.1/plug.conn#send_file/3&quot;&gt;&lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plug/1.5.1/plug.conn#send_resp/3&quot;&gt;&lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt;&lt;/a&gt; if you would like to access the low-level functions used to send files and responses via Plug.</source>
          <target state="translated">参照&lt;a href=&quot;../plug/1.5.1/plug.conn#send_file/3&quot;&gt; &lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../plug/1.5.1/plug.conn#send_resp/3&quot;&gt; &lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt; &lt;/a&gt;あなたはプラグ経由でファイルと応答を送信するために使用される低レベルの機能にアクセスしたい場合。</target>
        </trans-unit>
        <trans-unit id="b4d2f93aa49abab488a0628776098394719d620c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../plug/plug.conn#send_file/3&quot;&gt;&lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plug/plug.conn#send_resp/3&quot;&gt;&lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt;&lt;/a&gt; if you would like to access the low-level functions used to send files and responses via Plug.</source>
          <target state="translated">参照&lt;a href=&quot;../plug/plug.conn#send_file/3&quot;&gt; &lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../plug/plug.conn#send_resp/3&quot;&gt; &lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt; &lt;/a&gt;あなたはプラグ経由でファイルと応答を送信するために使用される低レベルの機能にアクセスしたい場合。</target>
        </trans-unit>
        <trans-unit id="5de1813146a450d81745fae85a10011300e06e44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.query#subquery/2&quot;&gt;&lt;code&gt;Ecto.Query.subquery/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;ecto.query#subquery/2&quot;&gt; &lt;code&gt;Ecto.Query.subquery/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="45f659716a011dd99b8cca9ae0ba1df93a24b7e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.query#update/3&quot;&gt;&lt;code&gt;Ecto.Query.update/3&lt;/code&gt;&lt;/a&gt; for update operations that can be performed on fields.</source>
          <target state="translated">フィールドで実行できる更新操作については、&lt;a href=&quot;ecto.query#update/3&quot;&gt; &lt;code&gt;Ecto.Query.update/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b8092c29bbc4fb0de38c16b33a5a35d209a6c347" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.repo#c:rollback/1&quot;&gt;&lt;code&gt;Ecto.Repo.rollback/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:rollback/1&quot;&gt; &lt;code&gt;Ecto.Repo.rollback/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="621718f4f723b87a1b297027378650881a8903bb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_call/3&quot;&gt;&lt;code&gt;GenServer.handle_call/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_call/3&quot;&gt; &lt;code&gt;GenServer.handle_call/3&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="643a98f8636b0a5bc5ab9349954ff26b77f1ceea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_cast/2&quot;&gt;&lt;code&gt;GenServer.handle_cast/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_cast/2&quot;&gt; &lt;code&gt;GenServer.handle_cast/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="da23b7c841e113b3ff7ae3e4331a604fb3e4a99a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt;&lt;code&gt;GenServer.handle_info/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt; &lt;code&gt;GenServer.handle_info/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="657c18c9b964d238c5425faead2bdeca7303b75f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:terminate/2&quot;&gt;&lt;code&gt;GenServer.terminate/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:terminate/2&quot;&gt; &lt;code&gt;GenServer.terminate/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8355db15ad1ed182ee4f962ee451395b08a29a75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e44626997314e02c476e0acdd836813e795c9c5b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information</source>
          <target state="translated">詳細については、&lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="66d24e14715f9e8d7b617ab80f19f4d81baeefa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information on channels.</source>
          <target state="translated">チャネルの詳細については、&lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="269436d2c9bb8a6deee2dcb74762908f63d5b0c6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information on channels. Check each transport module to find the options specific to each transport.</source>
          <target state="translated">チャネルの詳細については、&lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt;を参照してください。各トランスポートモジュールをチェックして、各トランスポートに固有のオプションを見つけます。</target>
        </trans-unit>
        <trans-unit id="307f6e4810e6a8623bf10bc3de9042be222e19df" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.html.tag#form_tag/2&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag.form_tag/2&lt;/code&gt;&lt;/a&gt; for more information on the options above.</source>
          <target state="translated">上記のオプションの詳細については、&lt;a href=&quot;phoenix.html.tag#form_tag/2&quot;&gt; &lt;code&gt;Phoenix.HTML.Tag.form_tag/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f492af01d862f52e16377df7fb35fa52d8b0cd41" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.html.tag#tag/2&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag.tag/2&lt;/code&gt;&lt;/a&gt; for more information and examples.</source>
          <target state="translated">詳細と例については、&lt;a href=&quot;phoenix.html.tag#tag/2&quot;&gt; &lt;code&gt;Phoenix.HTML.Tag.tag/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e1a37829390ab9022a01ffdeab66963922baae0e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.liveview#get_connect_info/1&quot;&gt;&lt;code&gt;Phoenix.LiveView.get_connect_info/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.liveview#get_connect_info/1&quot;&gt; &lt;code&gt;Phoenix.LiveView.get_connect_info/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dd4ec485ed3113350b052f0eb6de4a8efe5359aa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.liveview#get_connect_params/1&quot;&gt;&lt;code&gt;Phoenix.LiveView.get_connect_params/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;phoenix.liveview#get_connect_params/1&quot;&gt; &lt;code&gt;Phoenix.LiveView.get_connect_params/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7281895ace26a349e84151440f7e9536ff417edb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.liveview.helpers#live_render/3&quot;&gt;&lt;code&gt;Phoenix.LiveView.Helpers.live_render/3&lt;/code&gt;&lt;/a&gt; for all supported options.</source>
          <target state="translated">サポートされているすべてのオプションについては、&lt;a href=&quot;phoenix.liveview.helpers#live_render/3&quot;&gt; &lt;code&gt;Phoenix.LiveView.Helpers.live_render/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fa72fdb30cd34578ad87b4d3074be2504209c727" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.presence#list/2&quot;&gt;&lt;code&gt;Phoenix.Presence.list/2&lt;/code&gt;&lt;/a&gt; for more information on the presence datastructure.</source>
          <target state="translated">&lt;a href=&quot;phoenix.presence#list/2&quot;&gt; &lt;code&gt;Phoenix.Presence.list/2&lt;/code&gt; &lt;/a&gt;詳細については、Phoenix.Presence.list / 2を参照してください。</target>
        </trans-unit>
        <trans-unit id="ef1bb15bff16619e10cef1d606d47af3888ec309" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.pubsub.adapter&quot;&gt;&lt;code&gt;Phoenix.PubSub.Adapter&lt;/code&gt;&lt;/a&gt; to implement a custom adapter.</source>
          <target state="translated">カスタムアダプタを実装するには、&lt;a href=&quot;phoenix.pubsub.adapter&quot;&gt; &lt;code&gt;Phoenix.PubSub.Adapter&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="88c8c4a4bcc3b23e8f0afc627aff2ba07638bb9c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">使用例については、&lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ee65f0a0a082cb9fe667267438125e815eeb29d0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.template.eexengine&quot;&gt;&lt;code&gt;Phoenix.Template.EExEngine&lt;/code&gt;&lt;/a&gt; for an example engine implementation.</source>
          <target state="translated">エンジンの実装例については、&lt;a href=&quot;phoenix.template.eexengine&quot;&gt; &lt;code&gt;Phoenix.Template.EExEngine&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d09ab09a80fc6e3371af67b48a45ec888d3b2ef6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.token&quot;&gt;&lt;code&gt;Phoenix.Token&lt;/code&gt;&lt;/a&gt; documentation for examples in performing token verification on connect.</source>
          <target state="translated">接続時にトークン検証を実行する例については、&lt;a href=&quot;phoenix.token&quot;&gt; &lt;code&gt;Phoenix.Token&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="261e1ae56f3a072bff65a99c72ff577be8137484" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;plug.session.store&quot;&gt;&lt;code&gt;Plug.Session.Store&lt;/code&gt;&lt;/a&gt; for the specification session stores are required to implement.</source>
          <target state="translated">実装に必要なセッションストアの仕様については、&lt;a href=&quot;plug.session.store&quot;&gt; &lt;code&gt;Plug.Session.Store&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9230a87cc68c046eee9248393a3f13e2c8ee374f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;aggregate/2&lt;/code&gt; for general considerations and options.</source>
          <target state="translated">一般的な考慮事項とオプションについては、 &lt;code&gt;aggregate/2&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="8c5bed7ccad22aa1051678c95f9fb7801d6255d5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;c:list/2&lt;/code&gt; for more information on the presence data structure.</source>
          <target state="translated">プレゼンスデータ構造の詳細については、 &lt;code&gt;c:list/2&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="5c11d0599aa5ae1717c8ef4754f747abcfaf6c60" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;inform/1&lt;/code&gt; for more information.</source>
          <target state="translated">詳細については、 &lt;code&gt;inform/1&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="70f90e4dab7d5308ae5484d73eec0536670ce38d" translate="yes" xml:space="preserve">
          <source>See a description about its fields and use cases in &lt;a href=&quot;phoenix.liveview.engine&quot;&gt;&lt;code&gt;Phoenix.LiveView.Engine&lt;/code&gt;&lt;/a&gt; docs.</source>
          <target state="translated">&lt;a href=&quot;phoenix.liveview.engine&quot;&gt; &lt;code&gt;Phoenix.LiveView.Engine&lt;/code&gt; の&lt;/a&gt;ドキュメントで、そのフィールドとユースケースに関する説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="1fb76575f5700f016472c68381141953c4df7440" translate="yes" xml:space="preserve">
          <source>See the &quot;Named binding&quot; section in &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt;の「名前付きバインディング」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="161ac165bdee8f21fa6629207e7cef6c2626b8ba" translate="yes" xml:space="preserve">
          <source>See the &quot;Shared options&quot; section at the module documentation for more options.</source>
          <target state="translated">より多くのオプションについては、モジュールドキュメントの &quot;共有オプション&quot; セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="aa3ed528817fda45b3391d7fe285532382e90f27" translate="yes" xml:space="preserve">
          <source>See the &quot;Shared options&quot; section at the module documentation for remaining options.</source>
          <target state="translated">残りのオプションについては、モジュールドキュメントの「共有オプション」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="9ee043fc5ef54fddf8825b05f20c419d2581cb7f" translate="yes" xml:space="preserve">
          <source>See the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation for remaining options.</source>
          <target state="translated">残りのオプションについては、モジュールのドキュメントの「共有オプション」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="7649523e1a49db136fa7cc9581afc36295590af4" translate="yes" xml:space="preserve">
          <source>See the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation.</source>
          <target state="translated">モジュールのドキュメントの「共有オプション」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="a3b2e55e84311bdcd28e3a7c26f23056f3b42cfe" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#module-phoenix-liveview-integration&quot;&gt;Phoenix.LiveView integration&lt;/a&gt; section in module documentation for examples of using this function.</source>
          <target state="translated">この関数の使用例については、モジュールドキュメントの&lt;a href=&quot;#module-phoenix-liveview-integration&quot;&gt;Phoenix.LiveView統合&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="831c83e86f46bd94d2d80b20745c47e78ec12552" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; implementations for examples of how to implement this callback.</source>
          <target state="translated">このコールバックの実装方法の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt; &lt;code&gt;Keyword.fetch/2&lt;/code&gt; の&lt;/a&gt;実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="acffe996dfff2cb111fe66c67b0ec18298382268" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.liveviewtest&quot;&gt;&lt;code&gt;Phoenix.LiveViewTest&lt;/code&gt;&lt;/a&gt; documentation for usage.</source>
          <target state="translated">使用法については、&lt;a href=&quot;phoenix.liveviewtest&quot;&gt; &lt;code&gt;Phoenix.LiveViewTest&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="52bfe9d775fe2216e987697974fbdb4950dfca06" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.socket.transport&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt;&lt;/a&gt; documentation for more information on writing your own socket that does not leverage channels or for writing your own transports that interacts with other sockets.</source>
          <target state="translated">チャネルを利用しない独自のソケットの作成、または他のソケットと相互作用する独自のトランスポートの作成の詳細については、&lt;a href=&quot;phoenix.socket.transport&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="48b888cf8ed338dd5d7dafa38b1755fcf07c5cc2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.socket.transport&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt;&lt;/a&gt; documentation for more information on writing your own transports.</source>
          <target state="translated">独自のトランスポートの作成の詳細については、&lt;a href=&quot;phoenix.socket.transport&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1684cff4f2015c60813bad9a0c254c9bb819dc89" translate="yes" xml:space="preserve">
          <source>See the configuration in the moduledoc for options shared between adapters, for adapter-specific configuration see the adapter&amp;rsquo;s documentation.</source>
          <target state="translated">アダプタ間で共有されるオプションについては、モジュールドキュメントの構成を参照してください。アダプタ固有の構成については、アダプタのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0faab496e8605530beb9dcbc7065e79751224fbe" translate="yes" xml:space="preserve">
          <source>See the configuration in the moduledoc for options shared between adapters, for adapter-specific configuration see the adapter's documentation.</source>
          <target state="translated">アダプタ間で共有されるオプションについては moduledoc の設定を参照してください。 アダプタ固有の設定についてはアダプタのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="312fb50202d073fcbd9ec6a658fd9509a91a8bd0" translate="yes" xml:space="preserve">
          <source>See the documentation for those functions for more information.</source>
          <target state="translated">詳細については、これらの機能のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a99809f8ab2290821228a7754fff870d3b2e5a30" translate="yes" xml:space="preserve">
          <source>See the implementations for &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt;&lt;code&gt;Map.pop/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt;&lt;code&gt;Keyword.pop/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt; &lt;code&gt;Map.pop/3&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt; &lt;code&gt;Keyword.pop/3&lt;/code&gt; &lt;/a&gt;の実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="0436c22fef845c067bef662ef491804de17b0b6d" translate="yes" xml:space="preserve">
          <source>See the implementations of &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt;&lt;code&gt;Map.get_and_update/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt;&lt;code&gt;Keyword.get_and_update/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt; &lt;code&gt;Map.get_and_update/3&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt; &lt;code&gt;Keyword.get_and_update/3&lt;/code&gt; &lt;/a&gt;の実装をご覧ください。</target>
        </trans-unit>
        <trans-unit id="4d0eeab9b3bcf028d49b64aacb7b091dca517bce" translate="yes" xml:space="preserve">
          <source>See the module docs for examples.</source>
          <target state="translated">例についてはモジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2e65e93f5d1b1c4b0155385905ede5a1c03af66b" translate="yes" xml:space="preserve">
          <source>See the module documentation for examples of using this function.</source>
          <target state="translated">この関数の使用例については、モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="679a357d872f534ff44cb3b4a7a3b383d13c7888" translate="yes" xml:space="preserve">
          <source>Select also allows each expression to be wrapped in lists, tuples or maps as shown in the examples below. A full schema can also be selected.</source>
          <target state="translated">選択すると、以下の例に示すように、各式をリスト、タプル、またはマップでラップすることもできます。完全なスキーマを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="d4b7e5cb92e8ac0fb52771a37b4eceb5fa84c44e" translate="yes" xml:space="preserve">
          <source>Select the 'Prime' (SECP) curves for use in Elliptic Curve Cryptography (ECC)</source>
          <target state="translated">楕円曲線暗号(ECC)で使用する「プライム」(SECP)曲線を選択する</target>
        </trans-unit>
        <trans-unit id="d033c83fffaa5673b1a414ddfda2c025b06d961a" translate="yes" xml:space="preserve">
          <source>Selects which fields will be selected from the schema and any transformations that should be performed on the fields. Any expression that is accepted in a query can be a select field.</source>
          <target state="translated">スキーマから選択されるフィールドと、そのフィールドに対して実行されるべき変換を選択します。クエリで受け入れられる任意の式を選択フィールドにすることができます。</target>
        </trans-unit>
        <trans-unit id="ac9458ba400892c1472d9210ab76fde833fe2f3c" translate="yes" xml:space="preserve">
          <source>Self-signed Certificate</source>
          <target state="translated">自己署名入り証明書</target>
        </trans-unit>
        <trans-unit id="5e91d1e0f5e9487059e916a996058cf9e1dc6766" translate="yes" xml:space="preserve">
          <source>Send &lt;code&gt;:garbage_collect&lt;/code&gt; clause to the transport process:</source>
          <target state="translated">&lt;code&gt;:garbage_collect&lt;/code&gt; 句をトランスポートプロセスに送信します。</target>
        </trans-unit>
        <trans-unit id="339bcde69154793c7987399aaf319979a690b702" translate="yes" xml:space="preserve">
          <source>Send an informational response to the client</source>
          <target state="translated">依頼者に情報提供の回答を送る</target>
        </trans-unit>
        <trans-unit id="3ed9da092f3a4af112039ba3e975724f7aa96536" translate="yes" xml:space="preserve">
          <source>Send an informational response to the client.</source>
          <target state="translated">依頼者に情報提供の回答を送る。</target>
        </trans-unit>
        <trans-unit id="e173371abf693a34430650d6ef0622ed0064635e" translate="yes" xml:space="preserve">
          <source>Send fragments directly to the database</source>
          <target state="translated">フラグメントをデータベースに直接送信</target>
        </trans-unit>
        <trans-unit id="16e544758dfbf09ced50ada38b4b05192f7e5c8b" translate="yes" xml:space="preserve">
          <source>Send fragments directly to the database.</source>
          <target state="translated">フラグメントをデータベースに直接送信します。</target>
        </trans-unit>
        <trans-unit id="0da65406cb576e3d561db5540fd2eabd03bc9ab9" translate="yes" xml:space="preserve">
          <source>Sending responses directly</source>
          <target state="translated">回答を直接送信する</target>
        </trans-unit>
        <trans-unit id="489239a1181fd2c713a82111145edf54439dab29" translate="yes" xml:space="preserve">
          <source>Sends JSON response</source>
          <target state="translated">JSON レスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="5a525bc62260b0e127c7db79abcc3613f2585efb" translate="yes" xml:space="preserve">
          <source>Sends JSON response.</source>
          <target state="translated">JSON レスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="0d28bc04596c385c38b3aac3942c504d8e6b8566" translate="yes" xml:space="preserve">
          <source>Sends a blur event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; によって指定されたblurイベントを送信し、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="df2fdde6fc14cda41cffea4c713c7a6bc257872b" translate="yes" xml:space="preserve">
          <source>Sends a blur event to the view and returns the rendered result.</source>
          <target state="translated">ぼかしイベントをビューに送信し、レンダリング結果を返します。</target>
        </trans-unit>
        <trans-unit id="8660cb1f08099de5fb0f65076cb9f9400d7c92b6" translate="yes" xml:space="preserve">
          <source>Sends a chunk as part of a chunked response</source>
          <target state="translated">チャンクされたレスポンスの一部としてチャンクを送信します。</target>
        </trans-unit>
        <trans-unit id="fe6e56dadcec8e96d4db4592922c851f171d45e5" translate="yes" xml:space="preserve">
          <source>Sends a chunk as part of a chunked response.</source>
          <target state="translated">チャンクされたレスポンスの一部としてチャンクを送信します。</target>
        </trans-unit>
        <trans-unit id="159b4be78595cfa9e13576378a181ce38afd7078" translate="yes" xml:space="preserve">
          <source>Sends a chunk in the chunked response</source>
          <target state="translated">チャンクされたレスポンスでチャンクを送信する</target>
        </trans-unit>
        <trans-unit id="4b026d5ba5a419651b4118cb2aa26c82b8a7e8dc" translate="yes" xml:space="preserve">
          <source>Sends a chunk in the chunked response.</source>
          <target state="translated">チャンクされたレスポンスでチャンクを送信します。</target>
        </trans-unit>
        <trans-unit id="e4eb0e0c72673d960138d7009120ef65a0c0bc39" translate="yes" xml:space="preserve">
          <source>Sends a click &lt;code&gt;event&lt;/code&gt; to the &lt;code&gt;view&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">クリック &lt;code&gt;event&lt;/code&gt; を &lt;code&gt;value&lt;/code&gt; とともに &lt;code&gt;view&lt;/code&gt; 送信し、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="aca4ef733d3eda44a1aacff086660ed7f4d1228c" translate="yes" xml:space="preserve">
          <source>Sends a click event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; によって指定されたクリックイベントを送信し、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="de3d8a2105ba453f710652c7ae63c978abfb2c82" translate="yes" xml:space="preserve">
          <source>Sends a file as the response body with the given &lt;code&gt;status&lt;/code&gt; and optionally starting at the given offset until the given length</source>
          <target state="translated">指定された &lt;code&gt;status&lt;/code&gt; 持ち、オプションで指定されたオフセットから指定された長さまでファイルを応答本文として送信</target>
        </trans-unit>
        <trans-unit id="e9dcef495e0b37b6a9a55b68958139330d7d9f0e" translate="yes" xml:space="preserve">
          <source>Sends a file as the response body with the given &lt;code&gt;status&lt;/code&gt; and optionally starting at the given offset until the given length.</source>
          <target state="translated">指定された &lt;code&gt;status&lt;/code&gt; ファイルを応答本文として送信し、オプションで指定されたオフセットから指定された長さまで送信します。</target>
        </trans-unit>
        <trans-unit id="2729f47c08546b1d4165da30335d70a0aab12d1a" translate="yes" xml:space="preserve">
          <source>Sends a focus event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; によって指定されたフォーカスイベントを送信し、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="5adb9345d28102ac1c763b4f6a4a007b8375b80c" translate="yes" xml:space="preserve">
          <source>Sends a focus event to the view and returns the rendered result.</source>
          <target state="translated">フォーカスイベントをビューに送信し、レンダリング結果を返します。</target>
        </trans-unit>
        <trans-unit id="64e540d5599cb2c4b0cefa2a2948800957a32e8a" translate="yes" xml:space="preserve">
          <source>Sends a form change event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; によって指定されたフォーム変更イベントを送信し、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="d2761baa7d0cbffc025a7467c4906593935e13a4" translate="yes" xml:space="preserve">
          <source>Sends a form change event to the view and returns the rendered result.</source>
          <target state="translated">フォーム変更イベントをビューに送信し、レンダリング結果を返します。</target>
        </trans-unit>
        <trans-unit id="7b36b85c5dc6d00fe4d679346cf194a6d075f72d" translate="yes" xml:space="preserve">
          <source>Sends a form submit event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; で指定されたフォーム送信イベントを送信し、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="d740cf6907655bf8cef3d027cc12dfb8372a0be5" translate="yes" xml:space="preserve">
          <source>Sends a form submit event to the view and returns the rendered result.</source>
          <target state="translated">フォーム送信イベントをビューに送信し、レンダリング結果を返します。</target>
        </trans-unit>
        <trans-unit id="8a896369eae35006083d38db22a4868d7211b60d" translate="yes" xml:space="preserve">
          <source>Sends a hook event to the view or an element and returns the rendered result.</source>
          <target state="translated">フックイベントをビューや要素に送信し、レンダリング結果を返します。</target>
        </trans-unit>
        <trans-unit id="cd93703cdcdd6e0d97b2d07ea7d8f4e7e392863a" translate="yes" xml:space="preserve">
          <source>Sends a keydown event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; によって指定されたキーダウンイベントを送信し、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="e00faaaab158cfd84292bf03055da27c943a1855" translate="yes" xml:space="preserve">
          <source>Sends a keydown event to the view and returns the rendered result.</source>
          <target state="translated">キーダウンイベントをビューに送信し、レンダリング結果を返します。</target>
        </trans-unit>
        <trans-unit id="bc6f91c3d747bd32f00e55c1f38ac01a88aa735e" translate="yes" xml:space="preserve">
          <source>Sends a keyup event given by &lt;code&gt;element&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; によって指定されたキーアップイベントを送信し、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="20f7c6d9da28d451150734cab4f50b60cf5da286" translate="yes" xml:space="preserve">
          <source>Sends a keyup event to the view and returns the rendered result.</source>
          <target state="translated">ビューにキーアップイベントを送信し、レンダリング結果を返します。</target>
        </trans-unit>
        <trans-unit id="fe9eb2fee9ae60e2ca92121924ef824a470a07cb" translate="yes" xml:space="preserve">
          <source>Sends a message to all subscribers of a topic</source>
          <target state="translated">トピックのすべての購読者にメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="3f4328e232001421bf2c872503e97a20d3232f5b" translate="yes" xml:space="preserve">
          <source>Sends a message to all subscribers of a topic.</source>
          <target state="translated">トピックのすべての購読者にメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="a373ddfffbe146ddac8a173341a9221d9a4ffded" translate="yes" xml:space="preserve">
          <source>Sends a response to the client</source>
          <target state="translated">クライアントに応答を送信します。</target>
        </trans-unit>
        <trans-unit id="d1fba647ce413e6f7c8b1af6df87c6c2745e996c" translate="yes" xml:space="preserve">
          <source>Sends a response to the client.</source>
          <target state="translated">クライアントに応答を送信します。</target>
        </trans-unit>
        <trans-unit id="ea3622a1491a4991ba2109ef9333051926e18c86" translate="yes" xml:space="preserve">
          <source>Sends a response with the given status and body</source>
          <target state="translated">指定されたステータスとボディを持つレスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="4cd23c51688616b423a756b98b293b101621efe1" translate="yes" xml:space="preserve">
          <source>Sends a response with the given status and body.</source>
          <target state="translated">指定されたステータスとボディで応答を送信します。</target>
        </trans-unit>
        <trans-unit id="c7f30c86685aa3607c7ab991521564787425248b" translate="yes" xml:space="preserve">
          <source>Sends an information response to a client but raises if the adapter does not support inform</source>
          <target state="translated">クライアントに情報レスポンスを送信しますが、アダプタが inform をサポートしていない場合は発生します。</target>
        </trans-unit>
        <trans-unit id="7d87f8aad66e77be3e8f2d5bfa286b94bb99af45" translate="yes" xml:space="preserve">
          <source>Sends an information response to a client but raises if the adapter does not support inform.</source>
          <target state="translated">クライアントに情報応答を送信しますが、アダプタが inform をサポートしていない場合は発生します。</target>
        </trans-unit>
        <trans-unit id="8957b8bad5a32e15394a3faa2bd6607a6ee1ae15" translate="yes" xml:space="preserve">
          <source>Sends and informational response to the client</source>
          <target state="translated">クライアントへの情報提供</target>
        </trans-unit>
        <trans-unit id="3d64de4420bbf1ab57866fc08ef6ebb0cf9d618f" translate="yes" xml:space="preserve">
          <source>Sends and informational response to the client.</source>
          <target state="translated">クライアントへの情報提供と応答を送信します。</target>
        </trans-unit>
        <trans-unit id="034c6ea35c7dac4497fff0e97f6a65dc6add09be" translate="yes" xml:space="preserve">
          <source>Sends event to the socket</source>
          <target state="translated">イベントをソケットに送信する</target>
        </trans-unit>
        <trans-unit id="7083990a770deb6247c289c9286b7c9ad92c5f99" translate="yes" xml:space="preserve">
          <source>Sends event to the socket.</source>
          <target state="translated">イベントをソケットに送信します。</target>
        </trans-unit>
        <trans-unit id="64a9e7c61acbcd7bc8acc5dedf73b365451f695e" translate="yes" xml:space="preserve">
          <source>Sends html response</source>
          <target state="translated">html レスポンスを送信</target>
        </trans-unit>
        <trans-unit id="1ee2773809b54afc3ec4a9bde01d6f87355f8588" translate="yes" xml:space="preserve">
          <source>Sends html response.</source>
          <target state="translated">html レスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="555a5345663c5549c5012382603ce0975ba2f157" translate="yes" xml:space="preserve">
          <source>Sends redirect response to the given url</source>
          <target state="translated">指定された URL にリダイレクトレスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="a5ccf0adfdfd164726fa10b86b27442adb2d4682" translate="yes" xml:space="preserve">
          <source>Sends redirect response to the given url.</source>
          <target state="translated">指定されたURLにリダイレクトレスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="8e530140d82c52f53e8acdaad18b70006366216e" translate="yes" xml:space="preserve">
          <source>Sends text response</source>
          <target state="translated">テキスト応答を送信します。</target>
        </trans-unit>
        <trans-unit id="c1248e478956ecfda126a47e010af683a1a9fef9" translate="yes" xml:space="preserve">
          <source>Sends text response.</source>
          <target state="translated">テキスト応答を送信します。</target>
        </trans-unit>
        <trans-unit id="b11b79b63b737f42e6de87481fdbad625665e341" translate="yes" xml:space="preserve">
          <source>Sends the given file or binary as a download</source>
          <target state="translated">与えられたファイルまたはバイナリをダウンロードとして送信します。</target>
        </trans-unit>
        <trans-unit id="d7eb8984be042027d6d16e842e16fe4fffc0d82e" translate="yes" xml:space="preserve">
          <source>Sends the given file or binary as a download.</source>
          <target state="translated">与えられたファイルまたはバイナリをダウンロードとして送信します。</target>
        </trans-unit>
        <trans-unit id="01c751c691b5cd02c867c6c00a48fa707b7abaa0" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and body as a response back to the client</source>
          <target state="translated">与えられたステータス、ヘッダ、ボディをレスポンスとしてクライアントに送信します。</target>
        </trans-unit>
        <trans-unit id="b1b5e5859a86db864471510765fc638d073c3a7c" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and body as a response back to the client.</source>
          <target state="translated">与えられたステータス、ヘッダ、およびボディをレスポンスとしてクライアントに返します。</target>
        </trans-unit>
        <trans-unit id="3f667a597d0810736bda963eefbc33a74f24820b" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and file as a response back to the client</source>
          <target state="translated">与えられたステータス、ヘッダ、ファイルをレスポンスとしてクライアントに送り返します。</target>
        </trans-unit>
        <trans-unit id="8fa020f53cdee1e58149be6a170a81ebd2b8f16a" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and file as a response back to the client.</source>
          <target state="translated">与えられたステータス、ヘッダ、ファイルをレスポンスとしてクライアントに返します。</target>
        </trans-unit>
        <trans-unit id="b1ae73f262918a400f2777f879f98b14757c0356" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers as the beginning of a chunked response to the client</source>
          <target state="translated">指定されたステータス、ヘッダをチャンクされたレスポンスの先頭としてクライアントに送信します。</target>
        </trans-unit>
        <trans-unit id="98f05b4a43a17d1506c7c0722b3b1b76cd400e66" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers as the beginning of a chunked response to the client.</source>
          <target state="translated">与えられたステータス、ヘッダを、チャンクされた応答の先頭としてクライアントに送信します。</target>
        </trans-unit>
        <trans-unit id="4ed850761dfe7724d1b944f2ffc0f7d2de013f38" translate="yes" xml:space="preserve">
          <source>Sends the response headers as a chunked response</source>
          <target state="translated">レスポンスヘッダをチャンク化されたレスポンスとして送信します。</target>
        </trans-unit>
        <trans-unit id="04d8681376a92c3eb52331e76051230a4195c17d" translate="yes" xml:space="preserve">
          <source>Sends the response headers as a chunked response.</source>
          <target state="translated">レスポンスヘッダをチャンクされたレスポンスとして送信します。</target>
        </trans-unit>
        <trans-unit id="59bee72c1fd17c82da45c231f035a209dfdee94a" translate="yes" xml:space="preserve">
          <source>Serializer</source>
          <target state="translated">Serializer</target>
        </trans-unit>
        <trans-unit id="85792e8a3d476121d2028fa22f8b1db5759e853e" translate="yes" xml:space="preserve">
          <source>Server pushes must happen prior to a response being sent. If a server push is attempted after a response is sent then a &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">サーバープッシュは、応答が送信される前に行われる必要があります。応答の送信後にサーバープッシュが試行されると、&lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="de4939a48f32b39f26e5821586e2778e7fabfb3f" translate="yes" xml:space="preserve">
          <source>Server-side</source>
          <target state="translated">Server-side</target>
        </trans-unit>
        <trans-unit id="3facdb03e5d7811371bc108d458d02bf7b7534eb" translate="yes" xml:space="preserve">
          <source>Session stores</source>
          <target state="translated">セッションストア</target>
        </trans-unit>
        <trans-unit id="453262679874b2f4c8ad87db24353e55de7dea32" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;reuse_sessions: true&lt;/code&gt;, for improved handshake performance of recurring connections</source>
          <target state="translated">定期的な接続のハンドシェイクパフォーマンスを向上させるには、 &lt;code&gt;reuse_sessions: true&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="345843c150fb23f55a30c97cd2b8a56d805955b0" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;secure_renegotiate: true&lt;/code&gt;, to avoid certain types of man-in-the-middle attacks</source>
          <target state="translated">&lt;code&gt;secure_renegotiate: true&lt;/code&gt; 設定して、特定の種類の中間者攻撃を回避します</target>
        </trans-unit>
        <trans-unit id="0762d654ef1cd87661534f45fd60626730f25204" translate="yes" xml:space="preserve">
          <source>Sets the dynamic repository to be used in further interactions.</source>
          <target state="translated">さらなるインタラクションで使用するダイナミックリポジトリを設定します。</target>
        </trans-unit>
        <trans-unit id="973de0fad1a86720c3b14c87e1f533753fabc33e" translate="yes" xml:space="preserve">
          <source>Sets the response to the given &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;</source>
          <target state="translated">応答を指定された &lt;code&gt;status&lt;/code&gt; と &lt;code&gt;body&lt;/code&gt; 設定します</target>
        </trans-unit>
        <trans-unit id="7e2971886484c2d54f52fda136a1853fe373601c" translate="yes" xml:space="preserve">
          <source>Sets the response to the given &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;status&lt;/code&gt; と &lt;code&gt;body&lt;/code&gt; 応答を設定します。</target>
        </trans-unit>
        <trans-unit id="7b11288ff44d6a2c856bd42c2433b817ee3c0d33" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header taking into account the &lt;code&gt;charset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; を考慮して、 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 応答ヘッダーの値を設定します</target>
        </trans-unit>
        <trans-unit id="60a9f444fec9661326170fa10d3b28058820fb13" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header taking into account the &lt;code&gt;charset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; を考慮して、 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 応答ヘッダーの値を設定します。</target>
        </trans-unit>
        <trans-unit id="124bfef7545ed44d34ed68aea26689653267a541" translate="yes" xml:space="preserve">
          <source>Sets which formats have a layout when rendering</source>
          <target state="translated">レンダリング時にどのフォーマットがレイアウトを持つかを設定します。</target>
        </trans-unit>
        <trans-unit id="1a3e25289d98574f8d2ce6e7f348df35c2108378" translate="yes" xml:space="preserve">
          <source>Sets which formats have a layout when rendering.</source>
          <target state="translated">レンダリング時にレイアウトを持つフォーマットを設定します。</target>
        </trans-unit>
        <trans-unit id="69c034b8463a4be4d10bca2b3be19119c3e74cf2" translate="yes" xml:space="preserve">
          <source>Setting the Content Type</source>
          <target state="translated">コンテンツの種類を設定する</target>
        </trans-unit>
        <trans-unit id="a3c53ebe741ed925ba086fe1e96c93b536b4074c" translate="yes" xml:space="preserve">
          <source>Setting the HTTP Status</source>
          <target state="translated">HTTPステータスの設定</target>
        </trans-unit>
        <trans-unit id="292ac677682669584112c602ca4559bccf6f2e08" translate="yes" xml:space="preserve">
          <source>Setting the namespace to &lt;code&gt;MyApp.Admin&lt;/code&gt; in the second example will force the template to also be looked up at &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt;.</source>
          <target state="translated">2番目の例で名前空間を &lt;code&gt;MyApp.Admin&lt;/code&gt; に設定すると、テンプレートも強制的に &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt; で検索されます。</target>
        </trans-unit>
        <trans-unit id="fe94160acd6fbedcc5be6644df56f9ce11f302f5" translate="yes" xml:space="preserve">
          <source>Setting the prefix in the query changes the default prefix of all &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; expressions. You can override the query prefix by either setting the &lt;code&gt;@schema_prefix&lt;/code&gt; in your schema definitions or by passing the prefix option:</source>
          <target state="translated">クエリでプレフィックスを設定すると、すべての &lt;code&gt;from&lt;/code&gt; および &lt;code&gt;join&lt;/code&gt; 式のデフォルトのプレフィックスが変更されます。スキーマ定義で &lt;code&gt;@schema_prefix&lt;/code&gt; を設定するか、prefixオプションを渡すことで、クエリプレフィックスを上書きできます。</target>
        </trans-unit>
        <trans-unit id="1511667d6b259adc4e62f0970e71e5fc502c0dde" translate="yes" xml:space="preserve">
          <source>Shared options</source>
          <target state="translated">共有オプション</target>
        </trans-unit>
        <trans-unit id="6d2d3870c881115756488bbf909a1f8705245a13" translate="yes" xml:space="preserve">
          <source>Sharing views and templates</source>
          <target state="translated">ビューとテンプレートの共有</target>
        </trans-unit>
        <trans-unit id="d4bd5f107140360dabc5810290c12cbefe328539" translate="yes" xml:space="preserve">
          <source>Should be called by transports before connecting when appropriate. If the origin header matches the allowed origins, no origin header was sent or no origin was configured, it will return the given connection.</source>
          <target state="translated">適切な場合、接続する前にトランスポートから呼び出されるべきである。オリジンヘッダが許可されたオリジンにマッチするか、 オリジンヘッダが送信されなかったか、オリジンが設定されていなかった場合、 与えられた接続を返す。</target>
        </trans-unit>
        <trans-unit id="2ef97bd3fcfc474fd6914d207ec1a85adccfa1e4" translate="yes" xml:space="preserve">
          <source>Should be called by transports before connecting when appropriate. If the sec-websocket-protocol header matches the allowed subprotocols, it will put sec-websocket-protocol response header and return the given connection. If no sec-websocket-protocol header was sent it will return the given connection.</source>
          <target state="translated">適切な場合には、接続する前にトランスポートから呼び出されるべきです。sec-websocket-protocol ヘッダが許可されたサブプロトコルにマッチしていれば、 sec-websocket-protocol レスポンスヘッダを付けて、与えられた接続を返します。もし sec-websocket-protocol ヘッダが送信されていなければ、与えられた接続を返します。</target>
        </trans-unit>
        <trans-unit id="23c54dd01c1ae034689416b4628f1c012e01870d" translate="yes" xml:space="preserve">
          <source>Should you choose to configure your own ciphers you cannot use the &lt;code&gt;:cipher_suite&lt;/code&gt; option as setting a cipher suite overrides your cipher selections.</source>
          <target state="translated">独自の暗号を構成することを選択した場合、暗号スイートを設定すると暗号の選択が上書きされるため、 &lt;code&gt;:cipher_suite&lt;/code&gt; オプションを使用できません。</target>
        </trans-unit>
        <trans-unit id="7fddb7d8d1d60b1eeefa9af01082e0811d4b484d" translate="yes" xml:space="preserve">
          <source>Shutdown</source>
          <target state="translated">Shutdown</target>
        </trans-unit>
        <trans-unit id="8129fdbbafce686a971d68a97e93da4f5a6707c4" translate="yes" xml:space="preserve">
          <source>Shuts down the repository</source>
          <target state="translated">リポジトリをシャットダウンする</target>
        </trans-unit>
        <trans-unit id="9222d2164ca189b6d70bf3e2d13ec35ad176331f" translate="yes" xml:space="preserve">
          <source>Shuts down the repository.</source>
          <target state="translated">リポジトリをシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="e5c71aeaef6a40bb5b30896d0edde13cc4545556" translate="yes" xml:space="preserve">
          <source>Signing and encrypting cookies</source>
          <target state="translated">クッキーの署名と暗号化</target>
        </trans-unit>
        <trans-unit id="06b57e7149cc2b9d37d8a5281c9d4d4f468fc518" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">&lt;a href=&quot;#c:get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;を送出します</target>
        </trans-unit>
        <trans-unit id="c1de6be4d4a7d0026737bbb929476b58a3899d7c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;a href=&quot;#c:get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="716e7b8304762059e3756e20b26dcccee049164e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get_by/3&quot;&gt;&lt;code&gt;get_by/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;a href=&quot;#c:get_by/3&quot;&gt; &lt;code&gt;get_by/3&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合に&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a9a71d0ef4f57438fb836bf75362c66c11034d6e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:one/2&quot;&gt;&lt;code&gt;one/2&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">&lt;a href=&quot;#c:one/2&quot;&gt; &lt;code&gt;one/2&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します</target>
        </trans-unit>
        <trans-unit id="42730c52cfc74f4b110f480503b0827db35ef6d8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:one/2&quot;&gt;&lt;code&gt;one/2&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;a href=&quot;#c:one/2&quot;&gt; &lt;code&gt;one/2&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="9602d57832535417770f387c5a5d0450aa7cf242" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:reload/2&quot;&gt;&lt;code&gt;reload/2&lt;/code&gt;&lt;/a&gt;, but raises when something is not found.</source>
          <target state="translated">&lt;a href=&quot;#c:reload/2&quot;&gt; &lt;code&gt;reload/2&lt;/code&gt; に&lt;/a&gt;似ていますが、何かが見つからない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="b6c78b9004e61663051dcd4d055a5bf8cafaeafb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#merge/2&quot;&gt;&lt;code&gt;merge/2&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return an &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;, and receives changes so far as the first argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#merge/2&quot;&gt; &lt;code&gt;merge/2&lt;/code&gt; に&lt;/a&gt;似ていますが、モジュール名、関数、および引数を渡すことができます。関数は&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;を返す必要があり、最初の引数（関数の呼び出しで渡された引数の前に追加）まで変更を受け取ります。</target>
        </trans-unit>
        <trans-unit id="6418545197a346d3b8671927d501e7da02f8b915" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#merge/2&quot;&gt;&lt;code&gt;merge/2&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return an &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;, and receives changes so far as the first argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#merge/2&quot;&gt; &lt;code&gt;merge/2&lt;/code&gt; に&lt;/a&gt;似ていますが、モジュール名、関数、引数を渡すことができます。関数は&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;を返し、最初の引数（関数の呼び出しで渡された引数の前に追加される）までの変更を受け取ります。</target>
        </trans-unit>
        <trans-unit id="45981842f8238a3b10a636959d5a33b8843118a3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#run/3&quot;&gt;&lt;code&gt;run/3&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return either &lt;code&gt;{:ok, value}&lt;/code&gt; or &lt;code&gt;{:error, value}&lt;/code&gt;, and receives the repo as the first argument, and the changes so far as the second argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#run/3&quot;&gt; &lt;code&gt;run/3&lt;/code&gt; に&lt;/a&gt;似ていますが、モジュール名、関数、引数を渡すことができます。関数は &lt;code&gt;{:ok, value}&lt;/code&gt; または &lt;code&gt;{:error, value}&lt;/code&gt; いずれかを返し、最初の引数としてリポジトリを受け取り、2番目の引数（関数の呼び出しで渡されたものの前に追加）までの変更を受け取ります。</target>
        </trans-unit>
        <trans-unit id="32ed9c69f0771ab7837e0807b2dd78cbca41d601" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#send_update/2&quot;&gt;&lt;code&gt;send_update/2&lt;/code&gt;&lt;/a&gt; but the update will be delayed according to the given &lt;code&gt;time_in_milliseconds&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#send_update/2&quot;&gt; &lt;code&gt;send_update/2&lt;/code&gt; に&lt;/a&gt;似ていますが、指定された &lt;code&gt;time_in_milliseconds&lt;/code&gt; に従って更新が遅延されます。</target>
        </trans-unit>
        <trans-unit id="87dd2f0ff960411a79daab240746f7e7a73e8806" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#validate_change/3&quot;&gt;&lt;code&gt;validate_change/3&lt;/code&gt;&lt;/a&gt; but stores the validation metadata into the changeset validators. The validator metadata is often used as a reflection mechanism, to automatically generate code based on the available validations.</source>
          <target state="translated">&lt;a href=&quot;#validate_change/3&quot;&gt; &lt;code&gt;validate_change/3&lt;/code&gt; に&lt;/a&gt;似ていますが、検証メタデータをチェンジセットバリデーターに格納します。バリデータメタデータは、利用可能な検証に基づいてコードを自動的に生成するためのリフレクションメカニズムとしてよく使用されます。</target>
        </trans-unit>
        <trans-unit id="69474a73059972b96b5e3b7fbabc31c9b8dd1aa4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;get_by/3&lt;/code&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">&lt;code&gt;get_by/3&lt;/code&gt; に似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;を送出します</target>
        </trans-unit>
        <trans-unit id="f6dff33ff4e2317639d9e9d27bfcadf16c760660" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;get_by/3&lt;/code&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;code&gt;get_by/3&lt;/code&gt; に似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a4bfbecdbc63477571a9c0d33b98c72fbcd63302" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;put_resp_header&lt;/code&gt; this functions adds a new response header (&lt;code&gt;key&lt;/code&gt;) but rather then replacing the exising one it prepends another header with the same &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put_resp_header&lt;/code&gt; と同様に、この関数は新しい応答ヘッダー（ &lt;code&gt;key&lt;/code&gt; ）を追加しますが、既存のヘッダーを置き換えて、別のヘッダーに同じ &lt;code&gt;key&lt;/code&gt; を付加します。</target>
        </trans-unit>
        <trans-unit id="cfa80534ecc93a99a1d8974de760e1142bde5992" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;put_resp_header&lt;/code&gt; this functions adds a new response header (&lt;code&gt;key&lt;/code&gt;) but rather then replacing the existing one it prepends another header with the same &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put_resp_header&lt;/code&gt; と同様に、この関数は新しい応答ヘッダー（ &lt;code&gt;key&lt;/code&gt; ）を追加しますが、既存のヘッダーを置き換えて、別のヘッダーに同じ &lt;code&gt;key&lt;/code&gt; を付加します。</target>
        </trans-unit>
        <trans-unit id="ab5bf4ad0fb269878b98a7b0f7ef7355adbfe629" translate="yes" xml:space="preserve">
          <source>Similarly - if we want a context created without a schema for our resource we can use the &lt;code&gt;--no-schema&lt;/code&gt; flag.</source>
          <target state="translated">同様に、リソースのスキーマなしでコンテキストを作成する場合は、 &lt;code&gt;--no-schema&lt;/code&gt; フラグを使用できます。</target>
        </trans-unit>
        <trans-unit id="98e4dda7b7875cb9d20ae609f0bb88a5a60e78ec" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;strong&gt;do not&lt;/strong&gt; define variables at the top of your &lt;code&gt;render&lt;/code&gt; function:</source>
          <target state="translated">同様に、 &lt;code&gt;render&lt;/code&gt; 関数の上部で変数を定義&lt;strong&gt;しない&lt;/strong&gt;でください。</target>
        </trans-unit>
        <trans-unit id="afed92112a32d9f76a405980ae6151cb35ecec5a" translate="yes" xml:space="preserve">
          <source>Similarly, if &lt;code&gt;--no-html&lt;/code&gt; is given, the files generated by &lt;code&gt;phx.gen.html&lt;/code&gt; will no longer work, as important HTML components will be missing.</source>
          <target state="translated">同様に、 &lt;code&gt;phx.gen.html&lt;/code&gt; &lt;code&gt;--no-html&lt;/code&gt; を指定すると、重要なHTMLコンポーネントが欠落するため、phx.gen.htmlによって生成されたファイルは機能しなくなります。</target>
        </trans-unit>
        <trans-unit id="3f3e7e6dc2f47afe54084e928fa6dd69a44fcc94" translate="yes" xml:space="preserve">
          <source>Similarly, if we have a comments resource, and we don't want to provide a route to delete one, we could define a route like this.</source>
          <target state="translated">同様に、コメントリソースがあり、そのリソースを削除するためのルートを提供したくない場合は、次のようなルートを定義することができます。</target>
        </trans-unit>
        <trans-unit id="c937da7e4c92af6c87282cbfbca854b6a0365283" translate="yes" xml:space="preserve">
          <source>Similarly, if you are interested only on the last binding (or the last bindings) in a query, you can use &lt;code&gt;...&lt;/code&gt; to specify &quot;all bindings before&quot; and match on the last one.</source>
          <target state="translated">同様に、クエリの最後のバインディング（または最後のバインディング）のみに関心がある場合は、 &lt;code&gt;...&lt;/code&gt; を使用して「前のすべてのバインディング」を指定し、最後のバインディングと一致させることができます。</target>
        </trans-unit>
        <trans-unit id="4da369a800240a36c38a1a1b6280abdb44b5760a" translate="yes" xml:space="preserve">
          <source>Similarly, if you are interested only on the last binding (or the last bindings) in a query, you can use &lt;code&gt;...&lt;/code&gt; to specify &amp;ldquo;all bindings before&amp;rdquo; and match on the last one.</source>
          <target state="translated">同様に、クエリの最後のバインディング（または最後のバインディング）のみに関心がある場合は、 &lt;code&gt;...&lt;/code&gt; を使用して、「前のすべてのバインディング」を指定し、最後のバインディングと一致させることができます。</target>
        </trans-unit>
        <trans-unit id="315b1ca0f3b405f6a32b3e7f54525c8fad241b41" translate="yes" xml:space="preserve">
          <source>Similarly, other types, such as datetimes, are returned as strings. This means conditions like &lt;code&gt;post.meta[&quot;published_at&quot;] &amp;gt; from_now(-1, &quot;day&quot;)&lt;/code&gt; may return incorrect results or fail as the underlying database tries to compare incompatible types. You can, however, use &lt;a href=&quot;#type/2&quot;&gt;&lt;code&gt;type/2&lt;/code&gt;&lt;/a&gt; to force the types on the database level.</source>
          <target state="translated">同様に、日時などの他のタイプは文字列として返されます。つまり、 &lt;code&gt;post.meta[&quot;published_at&quot;] &amp;gt; from_now(-1, &quot;day&quot;)&lt;/code&gt; ような条件は、基盤となるデータベースが互換性のないタイプを比較しようとするため、誤った結果を返すか、失敗する可能性があります。ただし、&lt;a href=&quot;#type/2&quot;&gt; &lt;code&gt;type/2&lt;/code&gt; &lt;/a&gt;を使用して、データベースレベルでタイプを強制することができます。</target>
        </trans-unit>
        <trans-unit id="16f710f42a00a1f126107e1d5daf3f6f20d75e44" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;:binary_id&lt;/code&gt; type may be generated in the adapter for cases like UUID but it may also be handled by the database if required. In any case, both scenarios are handled transparently by Ecto.</source>
          <target state="translated">同様に、 &lt;code&gt;:binary_id&lt;/code&gt; タイプは、UUIDなどの場合にアダプターで生成される場合がありますが、必要に応じてデータベースによって処理される場合もあります。いずれの場合も、両方のシナリオはEctoによって透過的に処理されます。</target>
        </trans-unit>
        <trans-unit id="078c6fd53d813553c8bb3c25ef271cc99e49016a" translate="yes" xml:space="preserve">
          <source>Similarly, variables introduced by Elixir's block constructs are fine. For example, accessing the &lt;code&gt;post&lt;/code&gt; variable defined by the comprehension below works as expected:</source>
          <target state="translated">同様に、Elixirのブロック構造によって導入された変数は問題ありません。たとえば、以下の理解によって定義された &lt;code&gt;post&lt;/code&gt; 変数にアクセスすると、期待どおりに機能します。</target>
        </trans-unit>
        <trans-unit id="ac8a6784f582b6e7efb616680c77e30d6b1bf4b4" translate="yes" xml:space="preserve">
          <source>Similarly, we can broadcast messages from the test itself on the topic that both test and channel are subscribed to, triggering &lt;code&gt;handle_out/3&lt;/code&gt; on the channel:</source>
          <target state="translated">同様に、テストとチャネルの両方がサブスクライブされているトピックについて、テスト自体からメッセージをブロードキャストし、チャネルで &lt;code&gt;handle_out/3&lt;/code&gt; をトリガーできます。</target>
        </trans-unit>
        <trans-unit id="934003393a7b994a6fab818e0cceca3b6d90f305" translate="yes" xml:space="preserve">
          <source>Simulates a &lt;code&gt;live_patch&lt;/code&gt; to the given &lt;code&gt;path&lt;/code&gt; and returns the rendered result.</source>
          <target state="translated">指定された &lt;code&gt;path&lt;/code&gt; への &lt;code&gt;live_patch&lt;/code&gt; をシミュレートし、レンダリングされた結果を返します。</target>
        </trans-unit>
        <trans-unit id="d7d5b785f18c4f2f1268e0bd25efa3ac9f932fb4" translate="yes" xml:space="preserve">
          <source>Simulating Latency</source>
          <target state="translated">遅延のシミュレーション</target>
        </trans-unit>
        <trans-unit id="ba2a4b81dcb8c380e3750ed555ff5ecfbfd0abeb" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;phoenix.view&quot;&gt;&lt;code&gt;Phoenix.View&lt;/code&gt;&lt;/a&gt; is automatically imported into our templates, we could even skip the &lt;a href=&quot;phoenix.view&quot;&gt;&lt;code&gt;Phoenix.View&lt;/code&gt;&lt;/a&gt; module name and simply invoke &lt;code&gt;render(...)&lt;/code&gt; directly:</source>
          <target state="translated">&lt;a href=&quot;phoenix.view&quot;&gt; &lt;code&gt;Phoenix.View&lt;/code&gt; &lt;/a&gt;はテンプレートに自動的にインポートされるため、&lt;a href=&quot;phoenix.view&quot;&gt; &lt;code&gt;Phoenix.View&lt;/code&gt; &lt;/a&gt;モジュール名をスキップして、 &lt;code&gt;render(...)&lt;/code&gt; を直接呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="829e55987872ebea2c89921e68e0631668fb6fc9" translate="yes" xml:space="preserve">
          <source>Since Ecto tasks can only be executed once, if you need to create multiple repositories, set &lt;code&gt;:ecto_repos&lt;/code&gt; accordingly or pass the &lt;code&gt;-r&lt;/code&gt; flag multiple times.</source>
          <target state="translated">Ectoタスクは1回しか実行できないため、複数のリポジトリを作成する必要がある場合は、それに応じて &lt;code&gt;:ecto_repos&lt;/code&gt; を設定するか、 &lt;code&gt;-r&lt;/code&gt; フラグを複数回渡してください。</target>
        </trans-unit>
        <trans-unit id="cba3b9261a84cf0943491491af9376a0a3e36cc6" translate="yes" xml:space="preserve">
          <source>Since Ecto tasks can only be executed once, if you need to drop multiple repositories, set &lt;code&gt;:ecto_repos&lt;/code&gt; accordingly or pass the &lt;code&gt;-r&lt;/code&gt; flag multiple times.</source>
          <target state="translated">Ectoタスクは1回しか実行できないため、複数のリポジトリを削除する必要がある場合は、それに応じて &lt;code&gt;:ecto_repos&lt;/code&gt; を設定するか、 &lt;code&gt;-r&lt;/code&gt; フラグを複数回渡してください。</target>
        </trans-unit>
        <trans-unit id="7d532ae08cb5cca6185a53fae8d86b3abd5196e4" translate="yes" xml:space="preserve">
          <source>Since in this case we always require the user to pass all tags directly, using &lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt; is a great fit. It will automatically remove any tag not given and properly associate all of the given tags with the post.</source>
          <target state="translated">この場合、常にユーザーがすべてのタグを直接渡す必要があるため、&lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; &lt;/a&gt;を使用するのが最適です。指定されていないタグは自動的に削除され、指定されたすべてのタグが投稿に適切に関連付けられます。</target>
        </trans-unit>
        <trans-unit id="8c56a316edda5c41dc92d4d330f74b5b2defc49b" translate="yes" xml:space="preserve">
          <source>Since layouts are really just templates, they need a view to render them. This is the &lt;code&gt;LayoutView&lt;/code&gt; module defined in &lt;code&gt;lib/hello_web/views/layout_view.ex&lt;/code&gt;. Since Phoenix generated this view for us, we won't have to create a new one as long as we put the layouts we want to render inside the &lt;code&gt;lib/hello_web/templates/layout&lt;/code&gt; directory.</source>
          <target state="translated">レイアウトは実際には単なるテンプレートであるため、レイアウトするにはビューが必要です。これは、 &lt;code&gt;lib/hello_web/views/layout_view.ex&lt;/code&gt; 定義されている &lt;code&gt;LayoutView&lt;/code&gt; モジュールです。フェニックスがこのビューを生成したので、レンダリングするレイアウトを &lt;code&gt;lib/hello_web/templates/layout&lt;/code&gt; ディレクトリ内に配置する限り、新しいビューを作成する必要はありません。</target>
        </trans-unit>
        <trans-unit id="3dd6831992c073280cf00432e8f433224c821023" translate="yes" xml:space="preserve">
          <source>Since many views render significant content, for example a whole HTML file, it is common to put these files into a particular directory, typically &quot;APP_web/templates&quot;.</source>
          <target state="translated">多くのビューは重要なコンテンツ、例えば HTML ファイル全体をレンダリングするので、これらのファイルを特定のディレクトリ、通常は &quot;APP_web/templates&quot; に置くのが一般的です。</target>
        </trans-unit>
        <trans-unit id="42211fc05091b9e37c6644b60fb5c19e12f5f118" translate="yes" xml:space="preserve">
          <source>Since rewriting the scheme based on &lt;code&gt;x-forwarded-*&lt;/code&gt; headers can open up security vulnerabilities, only use this plug if:</source>
          <target state="translated">&lt;code&gt;x-forwarded-*&lt;/code&gt; ヘッダーに基づいてスキームを書き直すと、セキュリティの脆弱性が発生する可能性があるため、このプラグインは次の場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="eefc84b03d574da756bb5bd39f349a4317dd4518" translate="yes" xml:space="preserve">
          <source>Since rewriting the scheme based on &lt;code&gt;x-forwarded-proto&lt;/code&gt; can open up security vulnerabilities, only provide the option above if:</source>
          <target state="translated">&lt;code&gt;x-forwarded-proto&lt;/code&gt; に基づいてスキームを書き換えると、セキュリティの脆弱性が発生する可能性があるため、上記のオプションは次の場合にのみ提供してください。</target>
        </trans-unit>
        <trans-unit id="28df1368db59ac470c073051cf5513f7f6fe19af" translate="yes" xml:space="preserve">
          <source>Since the socket supervision tree is started by the endpoint, any custom transport must be started after the endpoint in a supervision tree.</source>
          <target state="translated">ソケットの監視ツリーはエンドポイントによって開始されるので、カスタムトランスポートは監視ツリーのエンドポイントの後に開始されなければなりません。</target>
        </trans-unit>
        <trans-unit id="7a1a942e8a8e1a1d6886838701da36fc7a53020d" translate="yes" xml:space="preserve">
          <source>Since this one is not valid, we can ask it what the errors are.</source>
          <target state="translated">これは有効ではないので、エラーが何であるかを問うことができます。</target>
        </trans-unit>
        <trans-unit id="9959ad819fdc6ce082fcbfcacbea425e36ef2224" translate="yes" xml:space="preserve">
          <source>Since this store uses crypto features, it requires you to set the &lt;code&gt;:secret_key_base&lt;/code&gt; field in your connection. This can be easily achieved with a plug:</source>
          <target state="translated">このストアは暗号化機能を使用するため、接続で &lt;code&gt;:secret_key_base&lt;/code&gt; フィールドを設定する必要があります。これはプラグで簡単に実現できます：</target>
        </trans-unit>
        <trans-unit id="2145cdddf8b7a86eb70eb4c38e16b06938fe7cd1" translate="yes" xml:space="preserve">
          <source>Since v1.5, new Phoenix applications are generated with a Telemetry supervisor. This module is responsible for managing the lifecycle of your Telemetry processes. It also defines a &lt;code&gt;metrics/0&lt;/code&gt; function, which returns a list of &lt;a href=&quot;https://hexdocs.pm/telemetry_metrics&quot;&gt;&lt;code&gt;Telemetry.Metrics&lt;/code&gt;&lt;/a&gt; that you define for your application.</source>
          <target state="translated">v1.5以降、新しいフェニックスアプリケーションはテレメトリスーパーバイザーで生成されます。このモジュールは、テレメトリプロセスのライフサイクルを管理する役割を果たします。また、アプリケーション用に定義した&lt;a href=&quot;https://hexdocs.pm/telemetry_metrics&quot;&gt; &lt;code&gt;Telemetry.Metrics&lt;/code&gt; の&lt;/a&gt;リストを返す &lt;code&gt;metrics/0&lt;/code&gt; 関数も定義します。</target>
        </trans-unit>
        <trans-unit id="8912a71b3fe9cbd76561667ba2df8c846422505a" translate="yes" xml:space="preserve">
          <source>Singleton resources</source>
          <target state="translated">シングルトンリソース</target>
        </trans-unit>
        <trans-unit id="6902fa751afee1587733342b99b1168338cc5b66" translate="yes" xml:space="preserve">
          <source>So by default, &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; will read 1_000_000 bytes at a time from the socket with an overall limit of 8_000_000 bytes.</source>
          <target state="translated">したがって、デフォルトでは、&lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt;は一度に1_000_000バイトをソケットから読み取り、全体の制限は8_000_000バイトです。</target>
        </trans-unit>
        <trans-unit id="00ea957ffba316f0ff6e8a0cb1faec55ce38d672" translate="yes" xml:space="preserve">
          <source>So far this document has focussed on configuring Plug to handle TLS within the application. Some people instead prefer to terminate TLS in a proxy or load balancer deployed in front of the Plug application.</source>
          <target state="translated">これまでのところ、このドキュメントでは、アプリケーション内でTLSを処理するためにPlugを設定することに焦点を当ててきました。代わりに、Plugアプリケーションの前に配置されたプロキシやロードバランサでTLSを終了させることを好む人もいます。</target>
        </trans-unit>
        <trans-unit id="9bde55a3bec7d2672624d4d25638473a9fc2eaa4" translate="yes" xml:space="preserve">
          <source>So far we have seen some of the Telemetry events common to Phoenix applications, along with some examples of their various measurements and metadata. With all of this data just waiting to be consumed, let's talk about reporters.</source>
          <target state="translated">ここまでで、Phoenix アプリケーションに共通するテレメトリ・イベントのいくつかと、様々な測定値やメタデータの例を見てきました。これらのデータが消費されるのを待っている間に、レポーターの話をしましょう。</target>
        </trans-unit>
        <trans-unit id="6c83ac72ddfb660ecd5c109994b440904cbc16c5" translate="yes" xml:space="preserve">
          <source>So far, Phoenix has taken care of putting everything in place and rendering views for us. However, we can also render views directly.</source>
          <target state="translated">これまでのところ、Phoenixがすべてを配置し、ビューをレンダリングしてくれています。しかし、ビューを直接レンダリングすることもできます。</target>
        </trans-unit>
        <trans-unit id="efca62250461511b076bae23e2ce1bfca52d9fb3" translate="yes" xml:space="preserve">
          <source>So far, so good, but does it work?</source>
          <target state="translated">ここまでは順調だが、効果はあるのか?</target>
        </trans-unit>
        <trans-unit id="b3cde60346758cf7848c88a017ad144fce11f60b" translate="yes" xml:space="preserve">
          <source>So far, we've built pages, wired up controller actions through our routers, and learned how Ecto allows data to be validated and persisted. Now it's time to tie it all together by writing web-facing features that interact with our greater Elixir application.</source>
          <target state="translated">これまでに、ページを構築し、ルーターを介してコントローラのアクションを配線し、Ectoがどのようにしてデータを検証し、永続化するかを学んできました。今度は、より大きなElixirアプリケーションと相互作用するWeb向けの機能を書くことで、すべてを結びつける時が来ました。</target>
        </trans-unit>
        <trans-unit id="0791af6a9061b0bd9104c3318c0999563ce5a7b3" translate="yes" xml:space="preserve">
          <source>So in order to avoid new lines provided by the user from being ignored when the form is resubmitted, we automatically add a new line before the text area value.</source>
          <target state="translated">そこで、ユーザーから提供された改行がフォームの再提出時に無視されるのを避けるために、テキストエリアの値の前に自動的に改行を追加しています。</target>
        </trans-unit>
        <trans-unit id="6e47878c43698d7f3037f5afba76f06e77b881d8" translate="yes" xml:space="preserve">
          <source>So on first render, the following callbacks will be invoked:</source>
          <target state="translated">そのため、最初のレンダリングでは以下のコールバックが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="30e4e0636ef80614c6a204a9f77fd4fa5e406c3a" translate="yes" xml:space="preserve">
          <source>So the custom type does need to handle the conversion from external data to runtime data (&lt;a href=&quot;#c:cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt;) as well as transforming that runtime data into the &lt;code&gt;:map&lt;/code&gt; Ecto native type and back (&lt;a href=&quot;#c:dump/1&quot;&gt;&lt;code&gt;dump/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c:load/1&quot;&gt;&lt;code&gt;load/1&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">そのため、カスタムタイプは、外部データからランタイムデータ（&lt;a href=&quot;#c:cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; &lt;/a&gt;）への変換を処理する必要があり、そのランタイムデータを &lt;code&gt;:map&lt;/code&gt; Ectoネイティブタイプに変換して元に戻す（&lt;a href=&quot;#c:dump/1&quot;&gt; &lt;code&gt;dump/1&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#c:load/1&quot;&gt; &lt;code&gt;load/1&lt;/code&gt; &lt;/a&gt;）必要があります。</target>
        </trans-unit>
        <trans-unit id="0f6d61673c056f0d9b6ae9f15c5366544e2df8ce" translate="yes" xml:space="preserve">
          <source>Socket Behaviour</source>
          <target state="translated">ソケットの動作</target>
        </trans-unit>
        <trans-unit id="ce8db0a6f5c8a561689e5b447b552eb7713259e8" translate="yes" xml:space="preserve">
          <source>Socket Fields</source>
          <target state="translated">ソケットフィールド</target>
        </trans-unit>
        <trans-unit id="71e32d448a3d576193b708bcfd66b979cebaa038" translate="yes" xml:space="preserve">
          <source>Socket IDs are topics that allow you to identify all sockets for a given user:</source>
          <target state="translated">ソケット ID は、特定のユーザーのすべてのソケットを識別できるようにするトピックです。</target>
        </trans-unit>
        <trans-unit id="c3497bc7ef561824cf3d270e2a939d9fd8de8f0c" translate="yes" xml:space="preserve">
          <source>Socket connections</source>
          <target state="translated">ソケット接続</target>
        </trans-unit>
        <trans-unit id="fcd871ca1e2946874651dc3c49f23c0f8ab2d9ce" translate="yes" xml:space="preserve">
          <source>Socket fields</source>
          <target state="translated">ソケットフィールド</target>
        </trans-unit>
        <trans-unit id="2c066e895961b889ac1d641af69e732ed7a3dfb8" translate="yes" xml:space="preserve">
          <source>Socket handlers are mounted in Endpoints and must define two callbacks:</source>
          <target state="translated">ソケットハンドラはEndpointsにマウントされ、2つのコールバックを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="26c7d7e3cabe08ea953e3c1dee57cd02065df6e1" translate="yes" xml:space="preserve">
          <source>Socket params and assigns</source>
          <target state="translated">ソケットのパラメータと割り当て</target>
        </trans-unit>
        <trans-unit id="d3298d773701ba60ff3b0ed43b4a56d5ce41b6c4" translate="yes" xml:space="preserve">
          <source>Socket params are passed from the client and can be used to verify and authenticate a user. After verification, you can put default assigns into the socket that will be set for all channels, ie</source>
          <target state="translated">ソケットパラメータはクライアントから渡され、ユーザの検証と認証に使用できます。検証後、すべてのチャンネルに設定されるソケットにデフォルトの割り当てを設定することができます。</target>
        </trans-unit>
        <trans-unit id="c4451e4b0bc65dbc1e28eb76c83f0fed8fe83ed4" translate="yes" xml:space="preserve">
          <source>Socket transport for long poll clients.</source>
          <target state="translated">長いポーリングクライアントのためのソケットトランスポート。</target>
        </trans-unit>
        <trans-unit id="dfffadfddf7c3296669cff7822b6c0bbfa4c059d" translate="yes" xml:space="preserve">
          <source>Socket transport for websocket clients.</source>
          <target state="translated">Websocket クライアントのためのソケットトランスポート。</target>
        </trans-unit>
        <trans-unit id="659ec7a0e44b1e98288c982fc69284240ea4c909" translate="yes" xml:space="preserve">
          <source>Sockets are operated by a transport. When a transport is defined, it usually receives a socket module and the module will be invoked when certain events happen at the transport level.</source>
          <target state="translated">ソケットはトランスポートによって操作されます。トランスポートが定義されている場合、トランスポートは通常ソケットモジュールを受け取り、トランスポートレベルで特定のイベントが発生したときにモジュールが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="43df9a6501aafdc4a5241768cdf8869bfadda28e" translate="yes" xml:space="preserve">
          <source>Some abstractions would force you to define some sort of polymorphic association with two fields in your database:</source>
          <target state="translated">いくつかの抽象化は、データベース内の2つのフィールドとのある種の多相関連を定義することを強制します。</target>
        </trans-unit>
        <trans-unit id="365899add53094029b4e1b37974677c0d55477dc" translate="yes" xml:space="preserve">
          <source>Some databases support deferred constraints, i.e., constraints which are checked at the end of the transaction rather than at the end of each statement.</source>
          <target state="translated">いくつかのデータベースは、繰延制約、すなわち、各ステートメントの最後ではなく、トランザクションの最後にチェックされる制約をサポートしています。</target>
        </trans-unit>
        <trans-unit id="ca11a570261843c9e308cec1aa0b8a90d4b7a089" translate="yes" xml:space="preserve">
          <source>Some other examples:</source>
          <target state="translated">他にもいくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="5318e50e08db16692441e24f9e4afd433620cdcc" translate="yes" xml:space="preserve">
          <source>Sometimes it is preferable to not store the private key on disk at all. Instead, the private key might be passed to the application using an environment variable or retrieved from a key store such as Vault.</source>
          <target state="translated">秘密鍵をディスク上に全く保存しない方が望ましい場合もあります。その代わりに、環境変数を使ってアプリケーションに秘密鍵を渡すか、Vault のような鍵ストアから秘密鍵を取得することもあります。</target>
        </trans-unit>
        <trans-unit id="5913001b57852706913419ef5a93b665b06a52a3" translate="yes" xml:space="preserve">
          <source>Sometimes it may be tricky to determine if two resources belong to the same context or not. In those cases, prefer distinct contexts per resource and refactor later if necessary. Otherwise you can easily end-up with large contexts of loosely related entities. Also keep in mind that the fact two resources are related does not necessarily mean they belong to the same context, otherwise you would quickly end-up with one large context, as the majority of resources in an application are connected to each other. To sum it up: if you are unsure, you should prefer explicit modules (contexts) between resources.</source>
          <target state="translated">2 つのリソースが同じコンテキストに属しているかどうかを判断するのが難しい場合があります。そのような場合には、リソースごとに異なるコンテキストを使用し、必要に応じて後でリファクタリングしてください。そうしないと、関連性の低いエンティティの大規模なコンテキストになってしまうことがあります。また、2つのリソースが関連しているからといって、必ずしも同じコンテキストに属しているとは限らないことを覚えておいてください。まとめると、もしわからない場合は、リソース間で明示的なモジュール(コンテキスト)を使うべきです。</target>
        </trans-unit>
        <trans-unit id="3ca6500c14086df6d1af4feac56d17e052d08ced" translate="yes" xml:space="preserve">
          <source>Sometimes we may want to generate a &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; or any other tag outside of a form. The functions in this module also support such usage by simply passing an atom as first argument instead of the form.</source>
          <target state="translated">場合によっては、&lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt;またはフォームの外にある他のタグを生成したいことがあります。このモジュールの関数は、フォームの代わりにアトムを最初の引数として渡すだけで、このような使用法もサポートしています。</target>
        </trans-unit>
        <trans-unit id="da88f0784945ca0d776a5f27b25b385622cd33d8" translate="yes" xml:space="preserve">
          <source>Sometimes when displaying a metric, the value label may need to be transformed to improve readability. Take for example the following metric that displays the duration of the each LiveView's &lt;code&gt;mount/3&lt;/code&gt; callback by &lt;code&gt;connected?&lt;/code&gt; status.</source>
          <target state="translated">メトリックを表示するときに、読みやすさを向上させるために値ラベルを変換する必要がある場合があります。たとえば、 &lt;code&gt;connected?&lt;/code&gt; た各LiveViewの &lt;code&gt;mount/3&lt;/code&gt; コールバックの期間を表示する次のメトリックを取り上げますか？状態。</target>
        </trans-unit>
        <trans-unit id="78254dfb54f129d1d3abccd68e001b90de9bad56" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to programmatically subscribe a socket to external topics in addition to the internal &lt;code&gt;socket.topic&lt;/code&gt;. For example, imagine you have a bidding system where a remote client dynamically sets preferences on products they want to receive bidding notifications on. Instead of requiring a unique channel process and topic per preference, a more efficient and simple approach would be to subscribe a single channel to relevant notifications via your endpoint. For example:</source>
          <target state="translated">内部 &lt;code&gt;socket.topic&lt;/code&gt; に加えて、プログラムでソケットを外部トピックにサブスクライブする必要がある場合があります。たとえば、リモートクライアントが入札通知を受信する製品の設定を動的に設定する入札システムがあるとします。設定ごとに固有のチャネルプロセスとトピックを要求する代わりに、より効率的で単純なアプローチは、エンドポイントを介して関連する通知に単一のチャネルをサブスクライブすることです。例えば：</target>
        </trans-unit>
        <trans-unit id="f12506ae9375b0c2f497ee7bafe9b9fbba8626a5" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to programmatically subscribe a socket to external topics in addition to the the internal &lt;code&gt;socket.topic&lt;/code&gt;. For example, imagine you have a bidding system where a remote client dynamically sets preferences on products they want to receive bidding notifications on. Instead of requiring a unique channel process and topic per preference, a more efficient and simple approach would be to subscribe a single channel to relevant notifications via your endpoint. For example:</source>
          <target state="translated">内部の &lt;code&gt;socket.topic&lt;/code&gt; に加えて、プログラムでソケットを外部のトピックにサブスクライブする必要がある場合があります。たとえば、リモートクライアントが入札通知を受信する製品の設定を動的に設定する入札システムがあるとします。設定ごとに固有のチャネルプロセスとトピックを要求する代わりに、エンドポイントを介して関連する通知に単一のチャネルをサブスクライブすることで、より効率的でシンプルなアプローチが得られます。例えば：</target>
        </trans-unit>
        <trans-unit id="5c39a1a34f3190a4e116f58e40087a04eff55fbd" translate="yes" xml:space="preserve">
          <source>Sometimes you may want a single Ecto repository to talk to many different database instances. By default, when you call &lt;code&gt;MyApp.Repo.start_link/1&lt;/code&gt;, it will start a repository with name &lt;code&gt;MyApp.Repo&lt;/code&gt;. But if you want to start multiple repositories, you can give each of them a different name:</source>
          <target state="translated">1つのEctoリポジトリで多くの異なるデータベースインスタンスと通信したい場合があります。お電話の際は、デフォルトで、 &lt;code&gt;MyApp.Repo.start_link/1&lt;/code&gt; を、それが名前のリポジトリを開始します &lt;code&gt;MyApp.Repo&lt;/code&gt; を。ただし、複数のリポジトリを開始する場合は、それぞれに異なる名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="eb98739576cc374632c2a09c6868c93331dba1aa" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to customize how a parser reads the body from the connection. For example, you may want to cache the body to perform verification later, such as HTTP Signature Verification. This can be achieved with a custom body reader that would read the body and store it in the connection, such as:</source>
          <target state="translated">パーサが接続からボディを読み取る方法をカスタマイズしたい場合があります。例えば、HTTP Signature Verification のように、後で検証を行うためにボディをキャッシュしておきたい場合があります。これは、ボディを読み込んで接続に保存するカスタムボディリーダーを使用することで実現できます。</target>
        </trans-unit>
        <trans-unit id="bee18a6f85fe70265dd2112210c0f92b124fa91e" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to customize how a route behaves during dispatch. This can be done by accessing the &lt;code&gt;opts&lt;/code&gt; variable inside the route:</source>
          <target state="translated">ディスパッチ中のルートの動作をカスタマイズしたい場合があります。これは、ルート内の &lt;code&gt;opts&lt;/code&gt; 変数にアクセスすることで実行できます。</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="57695e6a0ad690f3839c3c458acee10d3ef2f104" translate="yes" xml:space="preserve">
          <source>Spawns a connected LiveView process mounted in isolation as the sole rendered element.</source>
          <target state="translated">唯一のレンダリング要素として分離してマウントされた接続されたLiveViewプロセスを生成します。</target>
        </trans-unit>
        <trans-unit id="3d873a08280075d1d844eff015630ed561f7214d" translate="yes" xml:space="preserve">
          <source>Spawns a connected LiveView process.</source>
          <target state="translated">接続されたLiveViewプロセスを起動します。</target>
        </trans-unit>
        <trans-unit id="b58df17aaf2c2fd278d4f2fead7fc6caf5b5a7b6" translate="yes" xml:space="preserve">
          <source>Special Considerations</source>
          <target state="translated">特別な配慮</target>
        </trans-unit>
        <trans-unit id="aa67403b7f992c15b19fceea8ba389d87283c89d" translate="yes" xml:space="preserve">
          <source>Specification for session stores.</source>
          <target state="translated">セッションストアの仕様。</target>
        </trans-unit>
        <trans-unit id="93962ecd7513a0e8dedab96e5494d4e71a85820a" translate="yes" xml:space="preserve">
          <source>Specification of the connection adapter API implemented by webservers</source>
          <target state="translated">ウェブサーバが実装する接続アダプタAPIの仕様</target>
        </trans-unit>
        <trans-unit id="8c21a5512c1d500b4e3bffdba45c1ac3cbd76fc9" translate="yes" xml:space="preserve">
          <source>Specification of the connection adapter API implemented by webservers.</source>
          <target state="translated">ウェブサーバが実装する接続アダプタAPIの仕様。</target>
        </trans-unit>
        <trans-unit id="662bce5f894d0b8716db365e0a7c21cf98224a81" translate="yes" xml:space="preserve">
          <source>Specification to implement a custom PubSub adapter.</source>
          <target state="translated">カスタムの PubSub アダプタを実装するための仕様です。</target>
        </trans-unit>
        <trans-unit id="06b1405ff71558191ac1ba8cbd0d31a2429ee631" translate="yes" xml:space="preserve">
          <source>Specifies the API for adding custom template engines into Phoenix.</source>
          <target state="translated">カスタムテンプレートエンジンをPhoenixに追加するためのAPIを指定します。</target>
        </trans-unit>
        <trans-unit id="ae4da6d464094a11a257778d0bd2d7402189cc86" translate="yes" xml:space="preserve">
          <source>Specifies the adapter storage API.</source>
          <target state="translated">アダプタ・ストレージ API を指定します。</target>
        </trans-unit>
        <trans-unit id="23d851285a99e6b319346c3a2a806860a7a756b3" translate="yes" xml:space="preserve">
          <source>Specifies the adapter transactions API.</source>
          <target state="translated">アダプタ・トランザクション API を指定します。</target>
        </trans-unit>
        <trans-unit id="574a225935448a3b5783969d2155a7104be5b213" translate="yes" xml:space="preserve">
          <source>Specifies the minimal API required from adapters.</source>
          <target state="translated">アダプタから必要最低限のAPIを指定します。</target>
        </trans-unit>
        <trans-unit id="323dcc74c0661608c4ff58df91ef59dcdbb6402c" translate="yes" xml:space="preserve">
          <source>Specifies the query API required from adapters.</source>
          <target state="translated">アダプタから必要なクエリAPIを指定します。</target>
        </trans-unit>
        <trans-unit id="a42ccb23437e0306fbc55a97042f6087bc6900c8" translate="yes" xml:space="preserve">
          <source>Specifies the schema API required from adapters.</source>
          <target state="translated">アダプタから必要なスキーマ API を指定します。</target>
        </trans-unit>
        <trans-unit id="acf7976eaa2a183ab2459a4d7b272d56d0678d47" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;read_after_writes: true&lt;/code&gt; in your schema for choosing fields that are read from the database after every operation. Or pass &lt;code&gt;returning: true&lt;/code&gt; to &lt;code&gt;insert&lt;/code&gt; to read all fields back:</source>
          <target state="translated">すべての操作後にデータベースから読み取られるフィールドを選択するために、スキーマで &lt;code&gt;read_after_writes: true&lt;/code&gt; を指定します。または、 &lt;code&gt;returning: true&lt;/code&gt; を渡して、すべてのフィールドを読み込むために &lt;code&gt;insert&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="7b4379a60050b3f8c0955159ba45aa1d56de9268" translate="yes" xml:space="preserve">
          <source>Specs</source>
          <target state="translated">Specs</target>
        </trans-unit>
        <trans-unit id="425abcb3fa216c718977c7117020fb893407d770" translate="yes" xml:space="preserve">
          <source>Start by defining a presence module within your application which uses &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Presence&lt;/code&gt;&lt;/a&gt; and provide the &lt;code&gt;:otp_app&lt;/code&gt; which holds your configuration, as well as the &lt;code&gt;:pubsub_server&lt;/code&gt;.</source>
          <target state="translated">使用するアプリケーション内のプレゼンスモジュールを定義することから始め&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Presence&lt;/code&gt; を&lt;/a&gt;し、提供 &lt;code&gt;:otp_app&lt;/code&gt; あなたの設定を保持しているだけでなく、 &lt;code&gt;:pubsub_server&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="9aeb6c896025284c2220fec468d5df1f53bee18c" translate="yes" xml:space="preserve">
          <source>Start by defining a presence module within your application which uses &lt;a href=&quot;phoenix.presence#content&quot;&gt;&lt;code&gt;Phoenix.Presence&lt;/code&gt;&lt;/a&gt; and provide the &lt;code&gt;:otp_app&lt;/code&gt; which holds your configuration, as well as the &lt;code&gt;:pubsub_server&lt;/code&gt;.</source>
          <target state="translated">使用するアプリケーション内のプレゼンスモジュールを定義することから始め&lt;a href=&quot;phoenix.presence#content&quot;&gt; &lt;code&gt;Phoenix.Presence&lt;/code&gt; を&lt;/a&gt;し、提供 &lt;code&gt;:otp_app&lt;/code&gt; あなたの設定を保持しているだけでなく、 &lt;code&gt;:pubsub_server&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="36627c2aab29ab6e532f5e3d195bb1087b2dd53b" translate="yes" xml:space="preserve">
          <source>Starting With Generators</source>
          <target state="translated">ジェネレーターからのスタート</target>
        </trans-unit>
        <trans-unit id="a0e558f1d578a0b0bbe5b2674d9f1be49c54327d" translate="yes" xml:space="preserve">
          <source>Starts a task to assign a value to a key in the connection</source>
          <target state="translated">接続のキーに値を割り当てるタスクを開始します。</target>
        </trans-unit>
        <trans-unit id="5b7daad4b6fff18a4b4bc540bde997e7392379ff" translate="yes" xml:space="preserve">
          <source>Starts a task to assign a value to a key in the connection.</source>
          <target state="translated">接続内のキーに値を割り当てるタスクを開始します。</target>
        </trans-unit>
        <trans-unit id="04f1da3ebc9ca839c95f8f179871511231ce4fd1" translate="yes" xml:space="preserve">
          <source>Starts any connection pooling or supervision and return &lt;code&gt;{:ok, pid}&lt;/code&gt; or just &lt;code&gt;:ok&lt;/code&gt; if nothing needs to be done</source>
          <target state="translated">接続プールまたは監視を開始し、 &lt;code&gt;{:ok, pid}&lt;/code&gt; または何もする必要がない場合は単に &lt;code&gt;:ok&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="f79a24140d5b97d1763dd99ca8ad2521906cc980" translate="yes" xml:space="preserve">
          <source>Starts any connection pooling or supervision and return &lt;code&gt;{:ok, pid}&lt;/code&gt; or just &lt;code&gt;:ok&lt;/code&gt; if nothing needs to be done.</source>
          <target state="translated">接続プールまたは監視を開始し、 &lt;code&gt;{:ok, pid}&lt;/code&gt; または何もする必要がない場合は単に &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dbcf0ce19d7f72817408d1b66fce3e46bfbcca2f" translate="yes" xml:space="preserve">
          <source>Starts endpoint&amp;rsquo;s configuration cache and possibly the servers for handling requests.</source>
          <target state="translated">要求を処理するために、エンドポイントの構成キャッシュと、場合によってはサーバーを開始します。</target>
        </trans-unit>
        <trans-unit id="e3a54eb716a9c3cdfe4b9a7ad4cee9354a40712d" translate="yes" xml:space="preserve">
          <source>Starts endpoint's configuration cache and possibly the servers for handling requests.</source>
          <target state="translated">エンドポイントの設定キャッシュと、リクエストを処理するためのサーバを起動します。</target>
        </trans-unit>
        <trans-unit id="ae77342fe2af2cc246a241cebd3e89697a20ce7d" translate="yes" xml:space="preserve">
          <source>Starts the Endpoint supervision tree</source>
          <target state="translated">エンドポイント監視ツリーを起動します。</target>
        </trans-unit>
        <trans-unit id="03f88e6163759407a0545e07892ca337d17fb9a4" translate="yes" xml:space="preserve">
          <source>Starts the Endpoint supervision tree.</source>
          <target state="translated">エンドポイント監視ツリーを起動します。</target>
        </trans-unit>
        <trans-unit id="05c0daa7470b7dd485d073925efda89a62e524df" translate="yes" xml:space="preserve">
          <source>Starts the application by configuring all endpoints servers to run.</source>
          <target state="translated">すべてのエンドポイントサーバを実行するように設定することで、アプリケーションを起動します。</target>
        </trans-unit>
        <trans-unit id="13005fdc1263d7b288dd9b04fe58b326107c112c" translate="yes" xml:space="preserve">
          <source>Starts the endpoint supervision tree.</source>
          <target state="translated">エンドポイント監視ツリーを起動します。</target>
        </trans-unit>
        <trans-unit id="fe39de33b591bfb6bcb3deb612aa31421a0a6d36" translate="yes" xml:space="preserve">
          <source>Starts the server</source>
          <target state="translated">サーバを起動します。</target>
        </trans-unit>
        <trans-unit id="bb0ca4e227518b7b5cc054b544be753f6cb2b6a2" translate="yes" xml:space="preserve">
          <source>Starts the server.</source>
          <target state="translated">サーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="d34d7622ebcade9f9b5155dfd196d5e29fe82811" translate="yes" xml:space="preserve">
          <source>Starts the upload handling server</source>
          <target state="translated">アップロード処理サーバを起動します。</target>
        </trans-unit>
        <trans-unit id="59489acfbc0005766722394416981887c2b45cf6" translate="yes" xml:space="preserve">
          <source>Starts the upload handling server.</source>
          <target state="translated">アップロード処理サーバを起動します。</target>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="98ca6a6b05fbb33c6ebc3102b6ec341dd2e220c1" translate="yes" xml:space="preserve">
          <source>Stateful components are identified by the component module and their ID. Therefore, two different component modules with the same ID are different components. This means we can often tie the component ID to some application based ID:</source>
          <target state="translated">ステートフルコンポーネントは、コンポーネントモジュールとそのIDによって識別されます。したがって、同じIDを持つ2つの異なるコンポーネントモジュールは、異なるコンポーネントです。これは、コンポーネントIDをアプリケーションベースのIDに結びつけることができることを意味します。</target>
        </trans-unit>
        <trans-unit id="943fc7065d566a5c3951630f9ef155baabe360c1" translate="yes" xml:space="preserve">
          <source>Stateful components can also implement the &lt;a href=&quot;#c:handle_event/3&quot;&gt;&lt;code&gt;handle_event/3&lt;/code&gt;&lt;/a&gt; callback that works exactly the same as in LiveView. For a client event to reach a component, the tag must be annotated with a &lt;code&gt;phx-target&lt;/code&gt;. If you want to send the event to yourself, you can simply use the &lt;code&gt;@myself&lt;/code&gt; assign, which is an &lt;em&gt;internal unique reference&lt;/em&gt; to the component instance:</source>
          <target state="translated">ステートフルコンポーネントは、LiveViewとまったく同じように機能する&lt;a href=&quot;#c:handle_event/3&quot;&gt; &lt;code&gt;handle_event/3&lt;/code&gt; &lt;/a&gt;コールバックを実装することもできます。クライアントイベントがコンポーネントに到達するには、タグに &lt;code&gt;phx-target&lt;/code&gt; アノテーションを付ける必要があります。イベントを自分自身に送信する場合は、 &lt;code&gt;@myself&lt;/code&gt; 使用できます。これはコンポーネントインスタンスへの&lt;em&gt;内部一意参照&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="85f5667d6346cb1d9f2cfae9d4b0cf8e7e77a786" translate="yes" xml:space="preserve">
          <source>Stateful components life-cycle</source>
          <target state="translated">ステートフルコンポーネントのライフサイクル</target>
        </trans-unit>
        <trans-unit id="79e3c6e991cdd5cdd5d9b4459bc8d600b63c228e" translate="yes" xml:space="preserve">
          <source>Stateless components life-cycle</source>
          <target state="translated">ステートレスコンポーネントのライフサイクル</target>
        </trans-unit>
        <trans-unit id="f9ef14ce4d16dc528341a2c579120765c5772ff7" translate="yes" xml:space="preserve">
          <source>Stop tracking a channel's process.</source>
          <target state="translated">チャンネルのプロセスを追跡するのを止めます。</target>
        </trans-unit>
        <trans-unit id="4a58f463b521a331812c7340cc2eaa6fb7aec040" translate="yes" xml:space="preserve">
          <source>Stop tracking a process.</source>
          <target state="translated">プロセスを追跡するのを止めてください。</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="cb95290f3e237b98634fde98df7f64003f647f47" translate="yes" xml:space="preserve">
          <source>Stores metadata of a struct.</source>
          <target state="translated">構造体のメタデータを格納します。</target>
        </trans-unit>
        <trans-unit id="13696602150188b92bcbb9de1c78c62048beb623" translate="yes" xml:space="preserve">
          <source>Stores subquery information.</source>
          <target state="translated">サブクエリの情報を格納します。</target>
        </trans-unit>
        <trans-unit id="e21ecec1414d0590ee874d09ffbfacfe188ffd3b" translate="yes" xml:space="preserve">
          <source>Stores the given status code in the connection</source>
          <target state="translated">指定したステータスコードを接続に格納します</target>
        </trans-unit>
        <trans-unit id="c1f39eb0958f7137f6ff09d4f5e228918ad2517e" translate="yes" xml:space="preserve">
          <source>Stores the given status code in the connection.</source>
          <target state="translated">指定したステータスコードを接続に格納します。</target>
        </trans-unit>
        <trans-unit id="38f6cce826fac3c33ab9244e079a3a806aad671a" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering</source>
          <target state="translated">レンダリング用のレイアウトを格納します。</target>
        </trans-unit>
        <trans-unit id="44a511d7881bc48902e485e8cef69c3184112cca" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering if one was not stored yet</source>
          <target state="translated">レンダリング用のレイアウトがまだ保存されていない場合に保存します。</target>
        </trans-unit>
        <trans-unit id="d4447aa8196bd52c99b44a3f461e9a0c6a8e4f24" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering if one was not stored yet.</source>
          <target state="translated">レンダリング用のレイアウトがまだ保存されていない場合は、そのレイアウトを保存します。</target>
        </trans-unit>
        <trans-unit id="fe1f14bafc132a296718c9bf7c3aa8d7ee1a4892" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering.</source>
          <target state="translated">レンダリング用のレイアウトを格納します。</target>
        </trans-unit>
        <trans-unit id="a58b520dcd2f8f3484f39ecd049969a062130a5d" translate="yes" xml:space="preserve">
          <source>Stores the root layout for rendering.</source>
          <target state="translated">レンダリング用のルートレイアウトを格納します。</target>
        </trans-unit>
        <trans-unit id="d2499f2f97aaac5c6a4106688dd5926525b5161f" translate="yes" xml:space="preserve">
          <source>Stores the session associated with given session id</source>
          <target state="translated">指定されたセッションIDに関連付けられたセッションを格納します。</target>
        </trans-unit>
        <trans-unit id="b5f30bb51a27d5e5c9883d8a8bfea71b75448550" translate="yes" xml:space="preserve">
          <source>Stores the session associated with given session id.</source>
          <target state="translated">指定されたセッションIDに関連付けられたセッションを格納します。</target>
        </trans-unit>
        <trans-unit id="8d7514a1fd361b438f0dc122dc301f9e889c8d5d" translate="yes" xml:space="preserve">
          <source>Stores the session in a cookie.</source>
          <target state="translated">セッションをクッキーに保存します。</target>
        </trans-unit>
        <trans-unit id="03d905412bbe2c82c304b3383bfdfba9329c96c3" translate="yes" xml:space="preserve">
          <source>Stores the session in an in-memory ETS table.</source>
          <target state="translated">セッションをインメモリのETSテーブルに格納します。</target>
        </trans-unit>
        <trans-unit id="8f72ad9daeeff4d9baca2bd6929f5a7531645f3b" translate="yes" xml:space="preserve">
          <source>Stores the validation &lt;code&gt;metadata&lt;/code&gt; and validates the given &lt;code&gt;field&lt;/code&gt; change</source>
          <target state="translated">検証 &lt;code&gt;metadata&lt;/code&gt; を保存し、指定された &lt;code&gt;field&lt;/code&gt; 変更を検証します</target>
        </trans-unit>
        <trans-unit id="968dd6eda848310ed9d09eb97512cb82b641d047" translate="yes" xml:space="preserve">
          <source>Stores the validation &lt;code&gt;metadata&lt;/code&gt; and validates the given &lt;code&gt;field&lt;/code&gt; change.</source>
          <target state="translated">検証 &lt;code&gt;metadata&lt;/code&gt; を格納し、指定された &lt;code&gt;field&lt;/code&gt; 変更を検証します。</target>
        </trans-unit>
        <trans-unit id="52d2b56e1a53d98739305b2938ad7d1bce7e6d45" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering</source>
          <target state="translated">レンダリング用のビューを保存します。</target>
        </trans-unit>
        <trans-unit id="08b34341b166965c032c307af7cd997af4e4274f" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering if one was not stored yet</source>
          <target state="translated">レンダリング用のビューがまだ保存されていない場合に保存します。</target>
        </trans-unit>
        <trans-unit id="a0f8dab1413ae13607334c46326f1ae3400b89ca" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering if one was not stored yet.</source>
          <target state="translated">レンダリング用のビューがまだ保存されていない場合に保存します。</target>
        </trans-unit>
        <trans-unit id="14870e3b5dd83d56e16e75cb2089322baeeb8568" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering.</source>
          <target state="translated">レンダリング用のビューを格納します。</target>
        </trans-unit>
        <trans-unit id="45931e30fa075a4b9ed49a51fa8adee528c6580f" translate="yes" xml:space="preserve">
          <source>Strategies for cross-context workflows</source>
          <target state="translated">クロスコンテキストワークフローの戦略</target>
        </trans-unit>
        <trans-unit id="c3f496380c040f77fae6d0272d93930122999072" translate="yes" xml:space="preserve">
          <source>Streams a previously prepared query</source>
          <target state="translated">事前に準備されたクエリをストリームする</target>
        </trans-unit>
        <trans-unit id="3501f11bb258ecc0cbfd49dd264bd6b9c0a2fbd3" translate="yes" xml:space="preserve">
          <source>Streams a previously prepared query.</source>
          <target state="translated">事前に準備されたクエリをストリームします。</target>
        </trans-unit>
        <trans-unit id="01b0b95c5902c4eba4fd8ac0fa3bcdfa9327e36b" translate="yes" xml:space="preserve">
          <source>Strings: &lt;code&gt;&quot;foo bar&quot;&lt;/code&gt;, &lt;code&gt;~s(this is a string)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;~s(this is a string)&lt;/code&gt; ： &lt;code&gt;&quot;foo bar&quot;&lt;/code&gt; 、〜s （これは文字列です）</target>
        </trans-unit>
        <trans-unit id="94e56f9c7abe8770247628846d04bea10f7cd815" translate="yes" xml:space="preserve">
          <source>Struct for socket.assigns while rendering.</source>
          <target state="translated">レンダリング時のsocket.assignsの構造体。</target>
        </trans-unit>
        <trans-unit id="4d224d61643a39a4962579d1f48e5eeed4e12b15" translate="yes" xml:space="preserve">
          <source>Struct returned by associations when they are not loaded.</source>
          <target state="translated">アソシエーションがロードされていない場合に、アソシエーションによって返される構造体。</target>
        </trans-unit>
        <trans-unit id="25f57ecf7083fcb5184876a5d2f3f856041dba67" translate="yes" xml:space="preserve">
          <source>Struct used for logging entries.</source>
          <target state="translated">ロギングエントリに使用される構造体。</target>
        </trans-unit>
        <trans-unit id="c79a8485fa7523df8365330c835750e74643b0a4" translate="yes" xml:space="preserve">
          <source>Submitting the form action over HTTP</source>
          <target state="translated">HTTPでフォームアクションを送信する</target>
        </trans-unit>
        <trans-unit id="f3d62142352d12e869d2bfc88d72b68c4bcade9c" translate="yes" xml:space="preserve">
          <source>Subqueries are currently only supported in the &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; fields.</source>
          <target state="translated">現在、サブクエリは &lt;code&gt;from&lt;/code&gt; および &lt;code&gt;join&lt;/code&gt; フィールドでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="63844850c088c1e41377067736b623f102b7fb1e" translate="yes" xml:space="preserve">
          <source>Subquery can also be used in a &lt;code&gt;join&lt;/code&gt; expression.</source>
          <target state="translated">サブクエリは、 &lt;code&gt;join&lt;/code&gt; 式でも使用できます。</target>
        </trans-unit>
        <trans-unit id="a16a28f51515abb3ed23ddfbd71c229b425f64e4" translate="yes" xml:space="preserve">
          <source>Subquery operators: &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt; and &lt;code&gt;exists&lt;/code&gt;</source>
          <target state="translated">サブクエリ演算子： &lt;code&gt;any&lt;/code&gt; 、 &lt;code&gt;all&lt;/code&gt; 、および &lt;code&gt;exists&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f736150f2e074a22ead83dcf3dd8dc239fcdf5a" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter&amp;rsquo;s topic</source>
          <target state="translated">呼び出し元をPubSubアダプターのトピックにサブスクライブします</target>
        </trans-unit>
        <trans-unit id="50fd989211bc229d515632d14f3ae08584891447" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter&amp;rsquo;s topic.</source>
          <target state="translated">呼び出し元をPubSubアダプターのトピックにサブスクライブします。</target>
        </trans-unit>
        <trans-unit id="8180ff8882fe43143269f06ada06be7291b3a91d" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter's topic.</source>
          <target state="translated">PubSub アダプタのトピックの呼び出し元を購読します。</target>
        </trans-unit>
        <trans-unit id="0f7820628e3c2c90b1707fb8c99222b97a355f14" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the given topic</source>
          <target state="translated">呼び出し元を指定されたトピックにサブスクライブします。</target>
        </trans-unit>
        <trans-unit id="ca915041edbd919564fcfda571e153ced9e140ff" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the given topic.</source>
          <target state="translated">発信者を指定されたトピックにサブスクライブします。</target>
        </trans-unit>
        <trans-unit id="d5a4ec85d0d7c78af495961dd1c6901510edd509" translate="yes" xml:space="preserve">
          <source>Subscribes the pid to the topic</source>
          <target state="translated">トピックにpidをサブスクライブする</target>
        </trans-unit>
        <trans-unit id="c9d68c17cbbbd09344558cb7a8a42d8bcb73dc0a" translate="yes" xml:space="preserve">
          <source>Subscribes the pid to the topic.</source>
          <target state="translated">トピックにpidを購読します。</target>
        </trans-unit>
        <trans-unit id="81fb714bc39d524ea01b4a9e05095ad6d574bf09" translate="yes" xml:space="preserve">
          <source>Subscribes to the given topic and joins the channel under the given topic and payload</source>
          <target state="translated">指定されたトピックに加入し、指定されたトピックとペイロードの下でチャンネルに参加します。</target>
        </trans-unit>
        <trans-unit id="ea4e3ab0ff72e4151f4050d7eb16dd17b07a2093" translate="yes" xml:space="preserve">
          <source>Subscribes to the given topic and joins the channel under the given topic and payload.</source>
          <target state="translated">指定されたトピックに加入し、指定されたトピックとペイロードの下でチャンネルに参加します。</target>
        </trans-unit>
        <trans-unit id="aae12d55adc496ed2380985ca3dfdd4bfb6a021e" translate="yes" xml:space="preserve">
          <source>Subscribing to external topics</source>
          <target state="translated">外部トピックの購読</target>
        </trans-unit>
        <trans-unit id="56c74c3880af80af2ab03c8135c1200b420fc782" translate="yes" xml:space="preserve">
          <source>Subtracts the given interval from the current time in UTC</source>
          <target state="translated">現在の時刻から指定された間隔をUTC単位で減算します。</target>
        </trans-unit>
        <trans-unit id="451a00abcc42f5e6f995d27c0b6a7af19b580234" translate="yes" xml:space="preserve">
          <source>Subtracts the given interval from the current time in UTC.</source>
          <target state="translated">現在の時刻から指定された間隔をUTCで減算します。</target>
        </trans-unit>
        <trans-unit id="1ac3ce0208da6a86296e45e27cd74061800554e3" translate="yes" xml:space="preserve">
          <source>Such allows developers to write queries using bindings only in more complex query expressions.</source>
          <target state="translated">これにより、開発者はより複雑なクエリ式の中でのみバインディングを使用してクエリを書くことができます。</target>
        </trans-unit>
        <trans-unit id="d6e2150503cfdddffd579e84eb195842a0ed309f" translate="yes" xml:space="preserve">
          <source>Such cases will be explicitly documented as well as any extra option.</source>
          <target state="translated">そのような場合は、追加オプションと同様に明示的に文書化されます。</target>
        </trans-unit>
        <trans-unit id="50124ed41dfb05f2530c51e775a800383a6b00d5" translate="yes" xml:space="preserve">
          <source>Such function receives the changeset and must return a changeset, allowing developers to do final adjustments to the changeset or to issue data consistency commands.</source>
          <target state="translated">このような関数は、チェンジセットを受け取り、チェンジセットを返さなければならないので、開発者はチェンジセットの最終調整を行ったり、データ整合性コマンドを発行したりすることができます。</target>
        </trans-unit>
        <trans-unit id="23c18ef6e8fd8883f3f4e7f89080b810f7cfc463" translate="yes" xml:space="preserve">
          <source>Such functionality makes Ecto extremely useful to cast, validate and prune data even if it is not meant to be persisted to the database.</source>
          <target state="translated">このような機能により、Ectoはデータをデータベースに永続化することが意図されていなくても、データのキャスト、検証、剪定を行うのに非常に便利になります。</target>
        </trans-unit>
        <trans-unit id="6b9e8b1f0c2164b70c31da5ac6e2eec9b106f2b0" translate="yes" xml:space="preserve">
          <source>Such transformations are defined via plugs, as defined in the &lt;a href=&quot;http://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt; specification. Once a pipeline is defined, it can be piped through per scope.</source>
          <target state="translated">このような変換は、&lt;a href=&quot;http://github.com/elixir-lang/plug&quot;&gt;プラグの&lt;/a&gt;仕様で定義されているように、プラグを介して定義されます。パイプラインを定義すると、スコープごとにパイプライン処理できます。</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="7154b2f71294d8b9887ef951f46556c9be3650d1" translate="yes" xml:space="preserve">
          <source>Supported attributes for configuring the defined schema. They must be set after the &lt;code&gt;use Ecto.Schema&lt;/code&gt; call and before the &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; definition.</source>
          <target state="translated">定義されたスキーマを構成するためにサポートされる属性。これらは、 &lt;code&gt;use Ecto.Schema&lt;/code&gt; 呼び出しの後、&lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt;定義の前に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f341132e53d4cf0ae3e38d6cb0bb2af57a08b5a5" translate="yes" xml:space="preserve">
          <source>Supported attributes, to be set beforehand, for configuring the defined schema.</source>
          <target state="translated">定義されたスキーマを設定するために、あらかじめ設定しておく属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="c5ff84c7e3ceaccb9c98b2f6598a1f8252b42048" translate="yes" xml:space="preserve">
          <source>Supported date values</source>
          <target state="translated">サポートされている日付の値</target>
        </trans-unit>
        <trans-unit id="ca8d530e21e98d39ae16f271fc7325bc86189c4c" translate="yes" xml:space="preserve">
          <source>Supported time values</source>
          <target state="translated">サポートされている時間値</target>
        </trans-unit>
        <trans-unit id="9d3f3e9633ea619cf7d3b61bb59849ea6aa4bc12" translate="yes" xml:space="preserve">
          <source>Supports the same options as the &lt;code&gt;phx.new&lt;/code&gt; task. See &lt;a href=&quot;mix.tasks.phx.new&quot;&gt;&lt;code&gt;Mix.Tasks.Phx.New&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;phx.new&lt;/code&gt; タスクと同じオプションをサポートします。詳細については、&lt;a href=&quot;mix.tasks.phx.new&quot;&gt; &lt;code&gt;Mix.Tasks.Phx.New&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="11c75646068c02f7f50cd063ddb4f3bd6b8f1c0c" translate="yes" xml:space="preserve">
          <source>TLS Protocol Options</source>
          <target state="translated">TLS プロトコルオプション</target>
        </trans-unit>
        <trans-unit id="7b672c250a692c7930dcea47f4f2882d8d6cb220" translate="yes" xml:space="preserve">
          <source>Tag attributes</source>
          <target state="translated">タグ属性</target>
        </trans-unit>
        <trans-unit id="49c2dd06d553be816ddc929d5827b8f4d498973a" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;code&gt;:lower&lt;/code&gt; flag to return lowerCamelCase.</source>
          <target state="translated">オプションの &lt;code&gt;:lower&lt;/code&gt; フラグを取り、lowerCamelCaseを返します。</target>
        </trans-unit>
        <trans-unit id="7ac4b3291b61ef8c743bfc95248b0fb3f14f2f4d" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;code&gt;:lower&lt;/code&gt; option to return lowerCamelCase.</source>
          <target state="translated">オプションの &lt;code&gt;:lower&lt;/code&gt; オプションを使用して、lowerCamelCaseを返します。</target>
        </trans-unit>
        <trans-unit id="c7c29adf9027dec2f86ef5a16f075c3d628928d4" translate="yes" xml:space="preserve">
          <source>Takes the difference of the result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">複数のクエリの結果セットの違いを取る。各クエリの &lt;code&gt;select&lt;/code&gt; は、同じタイプで同じ順序で完全に同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="c5474cd2cac56f1497f50f85ecd38b5c6c812e93" translate="yes" xml:space="preserve">
          <source>Takes the overlap of the result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">複数のクエリの結果セットの重複をとります。各クエリの &lt;code&gt;select&lt;/code&gt; は、同じタイプで同じ順序で完全に同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="3db034b2c134d1803cc0048359b2bec75cc50891" translate="yes" xml:space="preserve">
          <source>Takes whichever value is not null, or null if they both are</source>
          <target state="translated">値が NULL でない方を取り、両方とも NULL の場合は NULL を取ります。</target>
        </trans-unit>
        <trans-unit id="385318970f2d6fbd0e9c01294074ec0db698c3bc" translate="yes" xml:space="preserve">
          <source>Takes whichever value is not null, or null if they both are.</source>
          <target state="translated">値がNULLでない方を取り、両方ともNULLの場合はNULLになります。</target>
        </trans-unit>
        <trans-unit id="b3b8c57740e772fbfade922d8b797cd74dba1963" translate="yes" xml:space="preserve">
          <source>Taking the initial example of users having addresses imagine those addresses are set up to belong to a country. If you want to allow users to bulk edit all addresses that belong to a single country, you can do so by changing the preload query:</source>
          <target state="translated">アドレスを持つユーザの最初の例として、それらのアドレスが国に属するように設定されていることを想像してみてください。一つの国に属するすべてのアドレスを一括して編集できるようにしたい場合は、プリロードクエリを変更することで可能になります。</target>
        </trans-unit>
        <trans-unit id="7b829a8bd084cbbd11fed6b0c4b3e930aaf5a925" translate="yes" xml:space="preserve">
          <source>Targeting Component Events</source>
          <target state="translated">コンポーネントイベントをターゲットにする</target>
        </trans-unit>
        <trans-unit id="6dd4fe806eb6aa488b589abd5daaa57f324f6077" translate="yes" xml:space="preserve">
          <source>Telemetry</source>
          <target state="translated">Telemetry</target>
        </trans-unit>
        <trans-unit id="7db0d62bb66cca4109cc535277b60d054734c61d" translate="yes" xml:space="preserve">
          <source>Telemetry Events</source>
          <target state="translated">テレメトリーイベント</target>
        </trans-unit>
        <trans-unit id="d5e31566fc119a3fb202242cb49b826a32c929b4" translate="yes" xml:space="preserve">
          <source>Telemetry events</source>
          <target state="translated">テレメトリーイベント</target>
        </trans-unit>
        <trans-unit id="a2fabe735bb0a87d551cfeb2c9f79d6381c2becd" translate="yes" xml:space="preserve">
          <source>Telemetry is quickly becoming the de-facto standard for package instrumentation in Elixir. Here is a list of libraries currently emitting &lt;code&gt;:telemetry&lt;/code&gt; events.</source>
          <target state="translated">テレメトリは、Elixirのパッケージ計測の事実上の標準に急速になりつつあります。これは、現在 &lt;code&gt;:telemetry&lt;/code&gt; イベントを発行しているライブラリのリストです。</target>
        </trans-unit>
        <trans-unit id="66057e4110476ee266aef488f256efc08a7be93f" translate="yes" xml:space="preserve">
          <source>Telemetry stores events by their name in an ETS table, along with the handler for each event. Then, when a given event is executed, Telemetry looks up its handler and invokes it.</source>
          <target state="translated">Telemetry は、各イベントのハンドラと一緒に、その名前でイベントを ETS テーブルに保存します。そして、与えられたイベントが実行されると、Telemetry はそのハンドラを探し出し、それを呼び出します。</target>
        </trans-unit>
        <trans-unit id="83de0890704eb8fb0a403e0bb80045e46a3e0c37" translate="yes" xml:space="preserve">
          <source>Telemetry.Metrics.ConsoleReporter</source>
          <target state="translated">Telemetry.Metrics.ConsoleReporter</target>
        </trans-unit>
        <trans-unit id="d4ac83b979f38010b10a99b73e1e401a2fec66f9" translate="yes" xml:space="preserve">
          <source>Templates are often rendered inside layouts. By default, Phoenix will render layouts for html requests. For example:</source>
          <target state="translated">テンプレートはしばしばレイアウトの中にレンダリングされます。デフォルトでは、Phoenixはhtmlリクエストに対してレイアウトをレンダリングします。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="83df20b5f538ba4bf70930df924ee3e9ff74c9fe" translate="yes" xml:space="preserve">
          <source>Templates are used by Phoenix when rendering responses.</source>
          <target state="translated">テンプレートは、レスポンスをレンダリングする際にPhoenixが使用します。</target>
        </trans-unit>
        <trans-unit id="064acb0eabd4a2c305afa47b705ad6352a299f5c" translate="yes" xml:space="preserve">
          <source>Templates can be rendered within other templates using the &lt;code&gt;:layout&lt;/code&gt; option. &lt;code&gt;:layout&lt;/code&gt; accepts a tuple of the form &lt;code&gt;{LayoutModule, &quot;template.extension&quot;}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:layout&lt;/code&gt; オプションを使用して、テンプレートを他のテンプレート内にレンダリングできます。 &lt;code&gt;:layout&lt;/code&gt; は、 &lt;code&gt;{LayoutModule, &quot;template.extension&quot;}&lt;/code&gt; という形式のタプルを受け入れます。</target>
        </trans-unit>
        <trans-unit id="f11c1d1a4fa59b1e8e5007666922499bf61d170c" translate="yes" xml:space="preserve">
          <source>Temporary assigns</source>
          <target state="translated">仮配属</target>
        </trans-unit>
        <trans-unit id="77517bd07ed49be0dde5e9aa42b90f66aa74f959" translate="yes" xml:space="preserve">
          <source>Terminate</source>
          <target state="translated">Terminate</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="059bc2004050046f69265527d915f12b37ceaf28" translate="yes" xml:space="preserve">
          <source>Testing - in-depth guides about testing</source>
          <target state="translated">テスト-テストに関する詳細なガイド</target>
        </trans-unit>
        <trans-unit id="5e12404061fb8f0e7a0186cf61505e566261b30d" translate="yes" xml:space="preserve">
          <source>Testing Events</source>
          <target state="translated">テストイベント</target>
        </trans-unit>
        <trans-unit id="30bde24df09cc9e595122110c4b2223a4b0899f9" translate="yes" xml:space="preserve">
          <source>Testing components</source>
          <target state="translated">コンポーネントのテスト</target>
        </trans-unit>
        <trans-unit id="ae9ea2d5e15f8034bf2038ee59e46a5ad29f2c63" translate="yes" xml:space="preserve">
          <source>Testing regular messages</source>
          <target state="translated">定期的なメッセージのテスト</target>
        </trans-unit>
        <trans-unit id="cf28e2a327522d6ff3d688f8ac4b32ee2c8f9807" translate="yes" xml:space="preserve">
          <source>Testing with Presence</source>
          <target state="translated">プレゼンスを使ったテスト</target>
        </trans-unit>
        <trans-unit id="8525247497cae160635c04a5c0a67e8ee5e93c2b" translate="yes" xml:space="preserve">
          <source>Tests whether one or more values returned from the provided subquery match in a comparison operation.</source>
          <target state="translated">指定された副問い合わせから返された1つ以上の値が比較操作で一致するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5d107b2fc9184fd0aa26c9acb96418a6c1a616a1" translate="yes" xml:space="preserve">
          <source>That little &lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt;&lt;code&gt;mix phx.gen.html&lt;/code&gt;&lt;/a&gt; command packed a surprising punch. We got a lot of functionality out-of-the-box for creating, updating, and deleting users. This is far from a full-featured app, but remember, generators are first and foremost learning tools and a starting point for you to begin building real features. Code generation can't solve all your problems, but it will teach you the ins and outs of Phoenix and nudge you towards the proper mind-set when designing your application.</source>
          <target state="translated">その小さな&lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt; &lt;code&gt;mix phx.gen.html&lt;/code&gt; &lt;/a&gt;コマンドは驚くべきパンチを詰め込みました。ユーザーを作成、更新、削除するための多くの機能をすぐに利用できます。これはフル機能のアプリとはほど遠いですが、ジェネレーターは何よりもまず学習ツールであり、実際の機能の構築を開始するための出発点であることを忘れないでください。コード生成はすべての問題を解決することはできませんが、フェニックスの詳細を教え、アプリケーションを設計する際の適切な考え方に向けて微調整します。</target>
        </trans-unit>
        <trans-unit id="1b7ce032abc31d5af7e26e4d692371eeb0a828f8" translate="yes" xml:space="preserve">
          <source>That little query packed a big punch. It both fetched all user emails from the database and efficiently built a map of the results in one go. You should browse the &lt;a href=&quot;../ecto/ecto.query#content&quot;&gt;Ecto.Query documentation&lt;/a&gt; to see the breadth of supported query features.</source>
          <target state="translated">その小さなクエリは大きなパンチを詰め込みました。データベースからすべてのユーザーの電子メールをフェッチし、結果のマップを一度に効率的に作成しました。&lt;a href=&quot;../ecto/ecto.query#content&quot;&gt;Ecto.Queryのドキュメント&lt;/a&gt;を参照して、サポートされているクエリ機能の幅を確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="ca01fe4f657c54f138e50335aafeba402d65b6cd" translate="yes" xml:space="preserve">
          <source>That looks great. Our callers will have no confusion over what this function does and we can wrap up the increment in an atomic operation to prevent race conditions.</source>
          <target state="translated">これは素晴らしいですね。呼び出し側はこの関数が何をするのか混乱することはありませんし、競合状態を防ぐためにインクリメントをアトミック演算でまとめることができます。</target>
        </trans-unit>
        <trans-unit id="8156ef5e951259f89a546e63d960ad64e67f4a98" translate="yes" xml:space="preserve">
          <source>That looks nice. A descriptive name that exposes the intent of our code is best. This function makes it crystal clear what purpose it serves, while allowing our caller to remain blissfully unaware of the internal details. Make the following additions to your &lt;code&gt;lib/hello/accounts.ex&lt;/code&gt; file:</source>
          <target state="translated">よさそうだ。コードの意図を明らかにするわかりやすい名前が最適です。この機能は、それがどのような目的を果たしているのかを明確にし、発信者が内部の詳細に気づかないようにします。 &lt;code&gt;lib/hello/accounts.ex&lt;/code&gt; ファイルに次の追加を行います。</target>
        </trans-unit>
        <trans-unit id="4299eb0f72ea06751b0374f80005eca95a002f5f" translate="yes" xml:space="preserve">
          <source>That was easy! &lt;code&gt;Repo.all/1&lt;/code&gt; takes a data source, our &lt;code&gt;User&lt;/code&gt; schema in this case, and translates that to an underlying SQL query against our database. After it fetches the data, the Repo then uses our Ecto schema to map the database values back into Elixir data-structures according to our &lt;code&gt;User&lt;/code&gt; schema. We're not just limited to basic querying &amp;ndash; Ecto includes a full-fledged query DSL for advanced SQL generation. In addition to a natural Elixir DSL, Ecto's query engine gives us multiple great features, such as SQL injection protection and compile-time optimization of queries. Let's try it out.</source>
          <target state="translated">簡単でした！ &lt;code&gt;Repo.all/1&lt;/code&gt; は、データソース（この場合は &lt;code&gt;User&lt;/code&gt; スキーマ）を取得し、それをデータベースに対する基になるSQLクエリに変換します。データをフェッチした後、リポジトリはEctoスキーマを使用して、データベース値を &lt;code&gt;User&lt;/code&gt; スキーマに従ってElixirデータ構造にマップし直します。基本的なクエリだけにとどまりません。Ectoには、高度なSQL生成のための本格的なクエリDSLが含まれています。 Ectoのクエリエンジンは、自然なElixir DSLに加えて、SQLインジェクション保護やクエリのコンパイル時の最適化など、複数の優れた機能を提供します。試してみましょう。</target>
        </trans-unit>
        <trans-unit id="d96a62253a0a940d11d0cbddd714020d577eed67" translate="yes" xml:space="preserve">
          <source>That wraps up our &lt;code&gt;CMS&lt;/code&gt; changes. Now, let's update our web layer to support our additions. Before we update our individual CMS controller actions, we need to make a couple of additions to the &lt;code&gt;CMS.PageController&lt;/code&gt; plug pipeline. First, we must ensure an author exists for end-users accessing the CMS, and we need to authorize access to page owners.</source>
          <target state="translated">これで &lt;code&gt;CMS&lt;/code&gt; の変更は終わりです。それでは、追加をサポートするためにWebレイヤーを更新しましょう。個々のCMSコントローラーアクションを更新する前に、 &lt;code&gt;CMS.PageController&lt;/code&gt; プラグパイプラインにいくつかの追加を行う必要があります。まず、CMSにアクセスするエンドユーザーの作成者が存在することを確認し、ページ所有者へのアクセスを承認する必要があります。</target>
        </trans-unit>
        <trans-unit id="b81a349b0bab78337582374bd5db34c83cb85969" translate="yes" xml:space="preserve">
          <source>That's a mouthful. Let's see it in action. Run &lt;code&gt;iex -S mix&lt;/code&gt; at the root of the project. When we call the &lt;code&gt;page_path&lt;/code&gt; function on our router helpers with the &lt;code&gt;Endpoint&lt;/code&gt; or connection and action as arguments, it returns the path to us.</source>
          <target state="translated">それは一口です。実際の動作を見てみましょう。プロジェクトのルートで &lt;code&gt;iex -S mix&lt;/code&gt; 実行します。 &lt;code&gt;Endpoint&lt;/code&gt; または接続とアクションを引数としてルーターヘルパーで &lt;code&gt;page_path&lt;/code&gt; 関数を呼び出すと、パスが返されます。</target>
        </trans-unit>
        <trans-unit id="4e28e598c2a9df40041492019b8b754a69b24d9e" translate="yes" xml:space="preserve">
          <source>That's all there is to Plug. Phoenix embraces the plug design of composable transformations all the way up and down the stack. Let's see some examples!</source>
          <target state="translated">プラグにはそれだけのことがあります。Phoenixは、スタックの上下を問わず、コンポーザブル変換のプラグデザインを採用しています。いくつかの例を見てみましょう</target>
        </trans-unit>
        <trans-unit id="77ca226134ff811575fb9ab965fc65eb585698ab" translate="yes" xml:space="preserve">
          <source>That's it! We're ready to run our migration.</source>
          <target state="translated">これだ!移行を実行する準備ができました。</target>
        </trans-unit>
        <trans-unit id="85714e19d4047e11aa732ce9bb41fd2ea3696d9b" translate="yes" xml:space="preserve">
          <source>That's simple enough. There's only one line, &lt;code&gt;use HelloWeb, :view&lt;/code&gt;. This line calls the &lt;code&gt;view/0&lt;/code&gt; function we just saw above. Besides allowing us to change our template root, &lt;code&gt;view/0&lt;/code&gt; exercises the &lt;code&gt;__using__&lt;/code&gt; macro in the &lt;a href=&quot;phoenix.view&quot;&gt;&lt;code&gt;Phoenix.View&lt;/code&gt;&lt;/a&gt; module. It also handles any module imports or aliases our application's view modules might need.</source>
          <target state="translated">それは十分に簡単です。行は1つだけで、 &lt;code&gt;use HelloWeb, :view&lt;/code&gt; 。この行は、上で &lt;code&gt;view/0&lt;/code&gt; たview / 0関数を呼び出します。私たちは私たちのテンプレートのルートを変更することができるのみでなく、 &lt;code&gt;view/0&lt;/code&gt; 行使 &lt;code&gt;__using__&lt;/code&gt; におけるマクロ&lt;a href=&quot;phoenix.view&quot;&gt; &lt;code&gt;Phoenix.View&lt;/code&gt; の&lt;/a&gt;モジュールを。また、アプリケーションのビューモジュールが必要とする可能性のあるモジュールのインポートまたはエイリアスも処理します。</target>
        </trans-unit>
        <trans-unit id="48e022a5885231d8982dbfde0267dab94ee7aeeb" translate="yes" xml:space="preserve">
          <source>The &quot;app&quot; and &quot;live&quot; layouts are often small and similar to each other, but the &quot;app&quot; layout uses the &lt;code&gt;@conn&lt;/code&gt; and is used as part of the regular request life-cycle. The &quot;live&quot; layout is part of the LiveView and therefore has direct access to the &lt;code&gt;@socket&lt;/code&gt;.</source>
          <target state="translated">「アプリ」と「ライブ」のレイアウトは小さく、互いに類似していることがよくありますが、「アプリ」のレイアウトは &lt;code&gt;@conn&lt;/code&gt; を使用し、通常のリクエストライフサイクルの一部として使用されます。「ライブ」のレイアウトは、ライブビューの一部であり、そのために直接アクセスがある &lt;code&gt;@socket&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="5fb157ec7c4ab4b43a8f7610702a11f4abf5a859" translate="yes" xml:space="preserve">
          <source>The &quot;assigns&quot; storage is meant to be used to store values in the connection so that other plugs in your plug pipeline can access them. The assigns storage is a map.</source>
          <target state="translated">assigns」ストレージは、プラグパイプライン内の他のプラグがアクセスできるように、接続に値を保存するために使用することを意味します。assigns ストレージはマップです。</target>
        </trans-unit>
        <trans-unit id="46c92c474fea56f05073b05b5637a34a85f3e969" translate="yes" xml:space="preserve">
          <source>The &quot;ignore&quot; behaviour is frequently used when you need to integrate with another JS library. The &quot;append&quot; and &quot;prepend&quot; feature is often used with &quot;Temporary assigns&quot; to work with large amounts of data. Let's learn more.</source>
          <target state="translated">無視」の動作は、他のJSライブラリとの統合が必要な場合によく使われます。append」と「prepend」の機能は、大量のデータを扱うために「Temporary assigns」と一緒によく使われます。もっと勉強してみましょう。</target>
        </trans-unit>
        <trans-unit id="dc51653bb522faccbc73e58dda64d98967bb1f09" translate="yes" xml:space="preserve">
          <source>The &quot;patch&quot; operations must be used when you want to navigate to the current LiveView, simply updating the URL and the current parameters, without mounting a new LiveView. When patch is used, the &lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt;&lt;code&gt;handle_params/3&lt;/code&gt;&lt;/a&gt; callback is invoked and the minimal set of changes are sent to the client. See the next section for more information.</source>
          <target state="translated">「パッチ」操作は、新しいLiveViewをマウントせずに、URLと現在のパラメーターを更新するだけで、現在のLiveViewに移動する場合に使用する必要があります。パッチが使用されると、&lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt; &lt;code&gt;handle_params/3&lt;/code&gt; &lt;/a&gt;コールバックが呼び出され、最小限の変更セットがクライアントに送信されます。詳細については、次のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="955a18dfbce56f1b50104281b12ba9744e407797" translate="yes" xml:space="preserve">
          <source>The &quot;redirect&quot; operations must be used when you want to dismount the current LiveView and mount a new one. In those cases, an Ajax request is made to fetch the necessary information about the new LiveView, which is mounted in place of the current one within the current layout. While redirecting, a &lt;code&gt;phx-disconnected&lt;/code&gt; class is added to the LiveView, which can be used to indicate to the user a new page is being loaded.</source>
          <target state="translated">現在のLiveViewをマウント解除して新しいLiveViewをマウントする場合は、「リダイレクト」操作を使用する必要があります。そのような場合、現在のレイアウト内の現在のライブビューの代わりにマウントされる新しいLiveViewに関する必要な情報をフェッチするためにAjaxリクエストが行われます。リダイレクト中に、 &lt;code&gt;phx-disconnected&lt;/code&gt; クラスがLiveViewに追加されます。これを使用して、新しいページがロードされていることをユーザーに示すことができます。</target>
        </trans-unit>
        <trans-unit id="87ed13eb7b7b5c4a065945c1b888d871c4ff5ece" translate="yes" xml:space="preserve">
          <source>The &quot;root&quot; layout is shared by both &quot;app&quot; and &quot;live&quot; layouts. It is rendered only on the initial request and therefore it has access to the &lt;code&gt;@conn&lt;/code&gt; assign. The root layout must be defined in your router:</source>
          <target state="translated">「ルート」レイアウトは、「アプリ」レイアウトと「ライブ」レイアウトの両方で共有されます。最初のリクエストでのみレンダリングされるため、 &lt;code&gt;@conn&lt;/code&gt; 割り当てにアクセスできます。ルートレイアウトはルーターで定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="34cc66037bd21d671d1d361a106b7dc4195ccf47" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;assigns&amp;rdquo; storage is meant to be used to store values in the connection so that other plugs in your plug pipeline can access them. The assigns storage is a map.</source>
          <target state="translated">「割り当て」ストレージは、接続に値を格納して、プラグパイプライン内の他のプラグが値にアクセスできるようにするために使用されることを意図しています。割り当てストレージはマップです。</target>
        </trans-unit>
        <trans-unit id="ed7d2aece955d0eb0adbd5c3ead7547ebda6a576" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#c:fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; callback is triggered when using &lt;code&gt;c:list/2&lt;/code&gt; and on every update, and it serves as a mechanism to fetch presence information a single time, before broadcasting the information to all channel subscribers. This prevents N query problems and gives you a single place to group isolated data fetching to extend presence metadata.</source>
          <target state="translated">&lt;a href=&quot;#c:fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; &lt;/a&gt;コールバックを使用する場合にトリガーされ &lt;code&gt;c:list/2&lt;/code&gt; とすべての更新にし、そしてそれは、すべてのチャネルの加入者に情報を放送する前に、プレゼンス情報を単一の時間を取得するためのメカニズムとして機能します。これにより、Nクエリの問題が回避され、分離されたデータフェッチをグループ化してプレゼンスメタデータを拡張するための単一の場所が提供されます。</target>
        </trans-unit>
        <trans-unit id="9ce9029acc8891c142483845e6415a481027865f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#c:render/1&quot;&gt;&lt;code&gt;render/1&lt;/code&gt;&lt;/a&gt; callback receives the &lt;code&gt;socket.assigns&lt;/code&gt; and is responsible for returning rendered content. You can use &lt;a href=&quot;phoenix.liveview.helpers#sigil_L/2&quot;&gt;&lt;code&gt;Phoenix.LiveView.Helpers.sigil_L/2&lt;/code&gt;&lt;/a&gt; to inline LiveView templates.</source>
          <target state="translated">&lt;a href=&quot;#c:render/1&quot;&gt; &lt;code&gt;render/1&lt;/code&gt; &lt;/a&gt;コールバックが受け &lt;code&gt;socket.assigns&lt;/code&gt; をしてレンダリングされたコンテンツを返すために責任があります。&lt;a href=&quot;phoenix.liveview.helpers#sigil_L/2&quot;&gt; &lt;code&gt;Phoenix.LiveView.Helpers.sigil_L/2&lt;/code&gt; &lt;/a&gt;を使用して、LiveViewテンプレートをインライン化できます。</target>
        </trans-unit>
        <trans-unit id="ccee99ea15b107959f66e403e4586ed71a7b198b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#connect/6&quot;&gt;&lt;code&gt;connect/6&lt;/code&gt;&lt;/a&gt; function in this module can be used as a convenience or a documentation on such steps.</source>
          <target state="translated">このモジュールの&lt;a href=&quot;#connect/6&quot;&gt; &lt;code&gt;connect/6&lt;/code&gt; &lt;/a&gt;関数は、そのような手順の便宜またはドキュメントとして使用できます。</target>
        </trans-unit>
        <trans-unit id="ef89800e0cbbeab27286654a528b11abba734ba6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; structure should be considered opaque. You can use &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; to pattern match the type, but accessing fields or directly modifying them is not advised.</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;構造が不透明な考慮すべきです。 &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; を使用してタイプをパターンマッチングできますが、フィールドにアクセスしたり、フィールドを直接変更したりすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="334abf61e2eb9d49fa7423881b32cb13154f6a3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module also provides conveniences for working with associations. For example, &lt;a href=&quot;#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; returns a query with all associated data to a given struct:</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt;モジュールはまた、団体での作業のための便利さを提供します。たとえば、&lt;a href=&quot;#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt;は、関連するすべてのデータを含むクエリを特定の構造体に返します。</target>
        </trans-unit>
        <trans-unit id="1000118f12916a7a73fddff1f37da63c9cd690ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; implementation may also send special messages and replies:</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; の&lt;/a&gt;実装では、特別なメッセージと返信を送ることがあります。</target>
        </trans-unit>
        <trans-unit id="fdd88277b1d89a27b6b11599f8d9956fb7c2f53b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#encode_to_iodata!/1&quot;&gt;&lt;code&gt;encode_to_iodata!/1&lt;/code&gt;&lt;/a&gt; function converts the rendered template result into iodata.</source>
          <target state="translated">&lt;a href=&quot;#encode_to_iodata!/1&quot;&gt; &lt;code&gt;encode_to_iodata!/1&lt;/code&gt; &lt;/a&gt;関数はiodataにレンダリングテンプレート結果を変換します。</target>
        </trans-unit>
        <trans-unit id="9699f16f2bf7e747e122f9ca173cd7f42ddcffe3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; macro above accepts a request of format &lt;code&gt;&quot;/pages/VALUE&quot;&lt;/code&gt; and dispatches it to the show action in the &lt;code&gt;PageController&lt;/code&gt;.</source>
          <target state="translated">上記の&lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt;マクロは、 &lt;code&gt;&quot;/pages/VALUE&quot;&lt;/code&gt; 形式のリクエストを受け入れ、それを &lt;code&gt;PageController&lt;/code&gt; の showアクションにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="1e6610e758202b62590baa5e46b378b4bf396178" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; macro above accepts a request to &lt;code&gt;/pages/hello&lt;/code&gt; and dispatches it to the &lt;code&gt;PageController&lt;/code&gt;'s &lt;code&gt;show&lt;/code&gt; action with &lt;code&gt;%{&quot;page&quot; =&amp;gt; &quot;hello&quot;}&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">上記の&lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt;マクロは、 &lt;code&gt;/pages/hello&lt;/code&gt; へのリクエストを受け入れ、 &lt;code&gt;params&lt;/code&gt; に &lt;code&gt;%{&quot;page&quot; =&amp;gt; &quot;hello&quot;}&lt;/code&gt; を指定して &lt;code&gt;PageController&lt;/code&gt; の &lt;code&gt;show&lt;/code&gt; アクションにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="b4d5b3e248d2fbc1eca751de4ab135e756ebf19b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ecto#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module also provides conveniences for working with associations. For example, &lt;a href=&quot;ecto#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; returns a query with all associated data to a given struct:</source>
          <target state="translated">&lt;a href=&quot;ecto#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt;モジュールはまた、団体での作業のための便利さを提供します。たとえば、&lt;a href=&quot;ecto#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt;は、指定された構造体に関連するすべてのデータを含むクエリを返します。</target>
        </trans-unit>
        <trans-unit id="58fb745a2e57967c454ef61e37a343c8af7ac169" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; structure should be considered opaque. You can use &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; to pattern match the type, but accessing fields or directly modifying them is not advised.</source>
          <target state="translated">&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;構造が不透明な考慮すべきです。 &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; を使用してタイプをパターンマッチングできますが、フィールドにアクセスしたり、フィールドを直接変更したりすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="fa9514b9adddb69475024589cdb99afc99238dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is disabled by configuration but might be enabled later.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; は&lt;/a&gt;設定で無効になっていますが、後で有効にすることがあります。</target>
        </trans-unit>
        <trans-unit id="ba6f27f85d7ce239b979057471cc92f95d3ac7cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://phoenixframework.org/&quot;&gt;Phoenix&lt;/a&gt; project includes a Mix task &lt;code&gt;mix phx.gen.cert&lt;/code&gt; that generates the necessary files and places them in the application's 'priv' directory. The &lt;a href=&quot;https://hex.pm/packages/x509&quot;&gt;X509&lt;/a&gt; package can be used as a dev-only dependency to add a similar &lt;code&gt;mix x509.gen.selfsigned&lt;/code&gt; task to non-Phoenix projects.</source>
          <target state="translated">&lt;a href=&quot;https://phoenixframework.org/&quot;&gt;フェニックス&lt;/a&gt;プロジェクトは、ミックス作業が含ま &lt;code&gt;mix phx.gen.cert&lt;/code&gt; アプリケーションの「PRIV」ディレクトリに必要なファイルや場所にそれらを生成します。&lt;a href=&quot;https://hex.pm/packages/x509&quot;&gt;X509の&lt;/a&gt;パッケージが似て追加するDEV-のみ依存関係として使用することができます &lt;code&gt;mix x509.gen.selfsigned&lt;/code&gt; 非フェニックス・プロジェクトにタスクを。</target>
        </trans-unit>
        <trans-unit id="d7dffb7977e667629020dcfd800d63da4bfbb976" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mix.tasks.phx.gen.context&quot;&gt;&lt;code&gt;mix phx.gen.context&lt;/code&gt;&lt;/a&gt; task takes a number of arguments, the module name of the context, the module name of the schema, the resource name, and a list of column_name:type attributes.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.gen.context&quot;&gt; &lt;code&gt;mix phx.gen.context&lt;/code&gt; &lt;/a&gt;タイプ属性：タスクは、引数の数、コンテキストのモジュール名、スキーマのモジュール名、リソース名、およびCOLUMN_NAMEのリストを取ります。</target>
        </trans-unit>
        <trans-unit id="ed6566219635bf8a60afebbde390a8f984b47e1e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt;&lt;code&gt;mix phx.gen.html&lt;/code&gt;&lt;/a&gt; task takes a number of arguments, the module name of the context, the module name of the schema, the resource name, and a list of column_name:type attributes. The module name we pass in must conform to the Elixir rules of module naming, following proper capitalization.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.gen.html&quot;&gt; &lt;code&gt;mix phx.gen.html&lt;/code&gt; &lt;/a&gt;タイプ属性：タスクは、引数の数、コンテキストのモジュール名、スキーマのモジュール名、リソース名、およびCOLUMN_NAMEのリストを取ります。渡すモジュール名は、適切な大文字の使用に従って、モジュール命名のElixirルールに準拠している必要があります。</target>
        </trans-unit>
        <trans-unit id="753bc2e1d97fded3410ce3a6fc1fbd5a8326f374" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mix.tasks.phx.gen.json&quot;&gt;&lt;code&gt;mix phx.gen.json&lt;/code&gt;&lt;/a&gt; task takes a number of arguments, the module name of the context, the module name of the schema, the resource name, and a list of column_name:type attributes. The module name we pass in must conform to the Elixir rules of module naming, following proper capitalization.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.gen.json&quot;&gt; &lt;code&gt;mix phx.gen.json&lt;/code&gt; &lt;/a&gt;タイプ属性：タスクは、引数の数、コンテキストのモジュール名、スキーマのモジュール名、リソース名、およびCOLUMN_NAMEのリストを取ります。渡すモジュール名は、適切な大文字の使用に従って、モジュール命名のElixirルールに準拠している必要があります。</target>
        </trans-unit>
        <trans-unit id="eb0caef39b907649b24a2d0e495927e96ee71869" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mix.tasks.phx.gen.schema&quot;&gt;&lt;code&gt;mix phx.gen.schema&lt;/code&gt;&lt;/a&gt; task takes a number of arguments, the module name of the schema (which may be namespaced), the resource name, and a list of column_name:type attributes.</source>
          <target state="translated">&lt;a href=&quot;mix.tasks.phx.gen.schema&quot;&gt; &lt;code&gt;mix phx.gen.schema&lt;/code&gt; &lt;/a&gt;タイプ属性：タスクは、引数の数、（名前空間がある）スキーマのモジュール名、リソース名、およびCOLUMN_NAMEのリストを取ります。</target>
        </trans-unit>
        <trans-unit id="a05ece4440acf4d8599acde999876382edcbff28" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;phoenix.controller&quot;&gt;&lt;code&gt;Phoenix.Controller&lt;/code&gt;&lt;/a&gt; module provides the &lt;code&gt;put_flash/3&lt;/code&gt; and &lt;code&gt;get_flash/2&lt;/code&gt; functions to help us set and retrieve flash messages as a key value pair. Let's set two flash messages in our &lt;code&gt;HelloWeb.PageController&lt;/code&gt; to try this out.</source>
          <target state="translated">&lt;a href=&quot;phoenix.controller&quot;&gt; &lt;code&gt;Phoenix.Controller&lt;/code&gt; の&lt;/a&gt;モジュールが提供 &lt;code&gt;put_flash/3&lt;/code&gt; および &lt;code&gt;get_flash/2&lt;/code&gt; 私たちを助けるための機能が設定され、キーと値のペアとしてフラッシュメッセージを取得します。これを試すために、 &lt;code&gt;HelloWeb.PageController&lt;/code&gt; に2つのフラッシュメッセージを設定しましょう。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
