<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="be75d781c08d38d7140ec0f42705e1395f1faaf3" translate="yes" xml:space="preserve">
          <source>Returns the router module as an atom, raises if unavailable</source>
          <target state="translated">ルータモジュールをアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="46517d877826cd12571bc0d5ea5767ab4ff4514f" translate="yes" xml:space="preserve">
          <source>Returns the router module as an atom, raises if unavailable.</source>
          <target state="translated">ルータモジュールをアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="0990b614db2cb2aaa4b5be0e932ba3182ba36e5a" translate="yes" xml:space="preserve">
          <source>Returns the schema primary keys as a keyword list</source>
          <target state="translated">スキーマの主キーをキーワードリストとして返します。</target>
        </trans-unit>
        <trans-unit id="a4800203999840972a3c41ffa66949d7538ddf07" translate="yes" xml:space="preserve">
          <source>Returns the schema primary keys as a keyword list.</source>
          <target state="translated">スキーマの主キーをキーワードリストとして返します。</target>
        </trans-unit>
        <trans-unit id="18aa5a5a64f9ee6ab880dac05db023b32dc041ef" translate="yes" xml:space="preserve">
          <source>Returns the script name from the :url configuration.</source>
          <target state="translated">url 設定からスクリプト名を返します。</target>
        </trans-unit>
        <trans-unit id="31a12f4e96c0fc87ccd1e9bcf6c59f9306838d68" translate="yes" xml:space="preserve">
          <source>Returns the sent response</source>
          <target state="translated">送信されたレスポンスを返します。</target>
        </trans-unit>
        <trans-unit id="25c8c207c3c88d97d73be4176fcfcb28de0cd546" translate="yes" xml:space="preserve">
          <source>Returns the sent response.</source>
          <target state="translated">送信されたレスポンスを返します。</target>
        </trans-unit>
        <trans-unit id="d9fd20df924109bf62002e612bb2718fda58fd6c" translate="yes" xml:space="preserve">
          <source>Returns the status code given an integer or a known atom</source>
          <target state="translated">整数または既知の原子を指定してステータスコードを返します。</target>
        </trans-unit>
        <trans-unit id="8112280a1d9a9eed9986a98a56185aaf0d3ad1b4" translate="yes" xml:space="preserve">
          <source>Returns the status code given an integer or a known atom.</source>
          <target state="translated">整数または既知のアトムを指定してステータスコードを返します。</target>
        </trans-unit>
        <trans-unit id="1e0c4c0d3371a5faffa7436a461ad69dac4cf038" translate="yes" xml:space="preserve">
          <source>Returns the status of a storage given by options.</source>
          <target state="translated">オプションで指定したストレージの状態を返します。</target>
        </trans-unit>
        <trans-unit id="036227c51832f19c8fe4491fec71303a7ca2fc92" translate="yes" xml:space="preserve">
          <source>Returns the template name rendered in the view as a string (or nil if no template was rendered)</source>
          <target state="translated">ビューでレンダリングされたテンプレート名を文字列で返します(テンプレートがレンダリングされなかった場合はnil)。</target>
        </trans-unit>
        <trans-unit id="b74a2ca0130c440e979a1e8c605e1c38a783872e" translate="yes" xml:space="preserve">
          <source>Returns the template name rendered in the view as a string (or nil if no template was rendered).</source>
          <target state="translated">ビューでレンダリングされたテンプレート名を文字列で返します(テンプレートがレンダリングされなかった場合はnil)。</target>
        </trans-unit>
        <trans-unit id="507067fd0d89bd4f0ad50d809841a87c15cc8cb3" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the custom type</source>
          <target state="translated">カスタム型の基礎となるスキーマ型を返します。</target>
        </trans-unit>
        <trans-unit id="271a09cc9da9ced3d323139cc5b7522c3d1476c6" translate="yes" xml:space="preserve">
          <source>Returns the underlying schema type for the custom type.</source>
          <target state="translated">カスタムタイプの基礎となるスキーマタイプを返します。</target>
        </trans-unit>
        <trans-unit id="d0168d121e1fa46afffbf8dc03d00e9999b5676e" translate="yes" xml:space="preserve">
          <source>Returns the updated connection.</source>
          <target state="translated">更新された接続を返します。</target>
        </trans-unit>
        <trans-unit id="8d989e0e48b23876aff9fc19ce0c7a1355322d7f" translate="yes" xml:space="preserve">
          <source>Returns the value for the given field</source>
          <target state="translated">指定したフィールドの値を返します</target>
        </trans-unit>
        <trans-unit id="eb635c80392dfe4a55166fd9b780bfd2fb360b6c" translate="yes" xml:space="preserve">
          <source>Returns the value for the given field.</source>
          <target state="translated">指定したフィールドの値を返します。</target>
        </trans-unit>
        <trans-unit id="bdede86e29744413b4c8bd8be88acede4fe0e4e1" translate="yes" xml:space="preserve">
          <source>Returns the values of the request header specified by &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 指定されたリクエストヘッダーの値を返します</target>
        </trans-unit>
        <trans-unit id="6821bba3917525e700d89961cc4335df9746ebad" translate="yes" xml:space="preserve">
          <source>Returns the values of the request header specified by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; で指定されたリクエストヘッダーの値を返します。</target>
        </trans-unit>
        <trans-unit id="6cde76fd3b77cd36620cfa2e2bcf5c4ab0a5aa45" translate="yes" xml:space="preserve">
          <source>Returns the values of the response header specified by &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 指定された応答ヘッダーの値を返します</target>
        </trans-unit>
        <trans-unit id="5ba2a203bbd819ca4ea6eea9c63bac5cb036c81a" translate="yes" xml:space="preserve">
          <source>Returns the values of the response header specified by &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; で指定された応答ヘッダーの値を返します。</target>
        </trans-unit>
        <trans-unit id="3097f8bc663465d9a4efd1ef7a4f4b0433fc4f6a" translate="yes" xml:space="preserve">
          <source>Returns the whole session.</source>
          <target state="translated">セッション全体を返します。</target>
        </trans-unit>
        <trans-unit id="5d131adafde27edb203f3f487c15d74433a8bf3f" translate="yes" xml:space="preserve">
          <source>Returns true if the current process is inside a transaction</source>
          <target state="translated">現在のプロセスがトランザクション内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="244cb8f64bc0228027dbfabcd56c8bf9cbaa85cc" translate="yes" xml:space="preserve">
          <source>Returns true if the current process is inside a transaction.</source>
          <target state="translated">現在のプロセスがトランザクション内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="0087a454276ead29151f3ca1b8a8149fe290a150" translate="yes" xml:space="preserve">
          <source>Returns true if the given process is inside a transaction</source>
          <target state="translated">指定したプロセスがトランザクション内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="fa1b59614734c4fa1e0c7ba4f241012ebfe1a1ae" translate="yes" xml:space="preserve">
          <source>Returns true if the given process is inside a transaction.</source>
          <target state="translated">指定したプロセスがトランザクション内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="d326b663ee7befbea5ebdd7ab51a4926be86d1ea" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows after the current row within the partition</source>
          <target state="translated">パーティション内の現在の行からオフセットした行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="f3bdf45df286504f65bab6bf86f355e22fff5faf" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows after the current row within the partition.</source>
          <target state="translated">パーティション内の現在の行からオフセットした行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="0fc4d407cffc48089a65568ac93f1138135c7d3c" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows before the current row within the partition</source>
          <target state="translated">パーティション内の現在の行よりも前のオフセットされた行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="3d60bce40451a002cfea905ef0ccae99b43a3285" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is offset rows before the current row within the partition.</source>
          <target state="translated">パーティション内の現在の行よりも前のオフセットされた行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="11d374928879f9ad2ae1990875af52884d99655e" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the first row of the window frame</source>
          <target state="translated">ウィンドウフレームの最初の行である行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="44abe5ff94ea4bbf4d6b793aca8de503901d2b46" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the first row of the window frame.</source>
          <target state="translated">ウィンドウフレームの最初の行である行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="9e7492912bc687a0a0b1eb9832642cf502b4b219" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the last row of the window frame</source>
          <target state="translated">ウィンドウフレームの最後の行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="99307517be28f40f09f2b0911dee62531f2ecbae" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the last row of the window frame.</source>
          <target state="translated">ウィンドウフレームの最後の行である行で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="03d0b7038b7bcc307a1128ac325767a926e11cd2" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); &lt;code&gt;nil&lt;/code&gt; if no such row.</source>
          <target state="translated">ウィンドウフレームのn番目の行（1から数えて）である行で評価された値を返します。そのような行がない場合は &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="376350cf9e0c496114f28913dd5703e383ff95e9" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row</source>
          <target state="translated">ウィンドウフレームの n 番目の行(1 から数えて)で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="193d6465e6be547ab824ad9adc251443ea776fb4" translate="yes" xml:space="preserve">
          <source>Returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row.</source>
          <target state="translated">ウィンドウフレームの n 番目の行(1 から数えて)で評価された値を返します。</target>
        </trans-unit>
        <trans-unit id="4185cf841db525cb673b734d9d83b3f8d30499f6" translate="yes" xml:space="preserve">
          <source>Returns value from the &lt;code&gt;json_field&lt;/code&gt; pointed to by &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 指す &lt;code&gt;json_field&lt;/code&gt; から値を返します。</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="7e1b1179bc35ff04b58b12b35f9adb55ffe0b517" translate="yes" xml:space="preserve">
          <source>Reverses the ordering of the query.</source>
          <target state="translated">クエリの順序を反転させます。</target>
        </trans-unit>
        <trans-unit id="6a4a0b5e1505a3cc5816c81e08650eced6f14871" translate="yes" xml:space="preserve">
          <source>Rolls back the current transaction</source>
          <target state="translated">現在のトランザクションをロールバックします。</target>
        </trans-unit>
        <trans-unit id="08baa16b0080930585636decba273851109f2fef" translate="yes" xml:space="preserve">
          <source>Rolls back the current transaction.</source>
          <target state="translated">現在のトランザクションをロールバックします。</target>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="translated">Routes</target>
        </trans-unit>
        <trans-unit id="5da2bca786eea68965488901fbfa83e2aa4a40c6" translate="yes" xml:space="preserve">
          <source>Routes allow for globbing which will match the remaining parts of a route and can be available as a parameter in the function body. Also note that a glob can&amp;rsquo;t be followed by other segments:</source>
          <target state="translated">ルートは、ルートの残りの部分と一致し、関数本体のパラメーターとして使用できるグロビングを可能にします。また、グロブの後に他のセグメントを続けることはできないことに注意してください：</target>
        </trans-unit>
        <trans-unit id="02961ca7a4bc6b74268220225de904dfb4aefcab" translate="yes" xml:space="preserve">
          <source>Routes allow for globbing which will match the remaining parts of a route and can be available as a parameter in the function body. Also note that a glob can't be followed by other segments:</source>
          <target state="translated">ルートでは、ルートの残りの部分にマッチするグロブが可能で、関数本体のパラメータとして使用できます。また、グロブを他のセグメントに追従させることはできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="579a42f5b5e0e0564cede3abd969bb3a7c3f2696" translate="yes" xml:space="preserve">
          <source>Routes are matched from top to bottom. The second route here:</source>
          <target state="translated">ルートは上から順にマッチしています。2つ目のルートはこちら。</target>
        </trans-unit>
        <trans-unit id="7c1c14571bc7de6b3055bd4f7d4f0dabba7f32cf" translate="yes" xml:space="preserve">
          <source>Routes can also match glob-like patterns, routing any path with a common base to the same controller. For example:</source>
          <target state="translated">ルートはグロブのようなパターンにもマッチし、共通のベースを持つパスを同じコントローラにルーティングすることができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="fa66d0ab61406d168f9a3b400e02c6c0a95ab178" translate="yes" xml:space="preserve">
          <source>Routes can use glob-like patterns to match trailing segments.</source>
          <target state="translated">ルートは、末尾のセグメントにマッチするように、グロブのようなパターンを使用することができます。</target>
        </trans-unit>
        <trans-unit id="4fec243ace8656b1c705371f569ea948d4d0ea95" translate="yes" xml:space="preserve">
          <source>Routes compilation</source>
          <target state="translated">コンパイルルート</target>
        </trans-unit>
        <trans-unit id="6e5549afb365bc0fa97665b0504dd6e6d2976e12" translate="yes" xml:space="preserve">
          <source>Routes options</source>
          <target state="translated">ルートオプション</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="0ed2d22d4523e3fc5d82bad24c4edc0794515584" translate="yes" xml:space="preserve">
          <source>Running the multi in a transaction will execute no previous steps and returns the value of the first error added.</source>
          <target state="translated">トランザクションでマルチを実行すると、それ以前のステップは実行されず、最初に追加されたエラーの値が返されます。</target>
        </trans-unit>
        <trans-unit id="f6ca3839dbd23c33b01182553ca5c3c46fb058fd" translate="yes" xml:space="preserve">
          <source>Runs the code reloader if enabled.</source>
          <target state="translated">有効になっている場合は、コードリローダを実行します。</target>
        </trans-unit>
        <trans-unit id="96ea572c5a69806aa87d98f4853db495ff69fe2c" translate="yes" xml:space="preserve">
          <source>Runs the given function inside a transaction</source>
          <target state="translated">トランザクション内で指定された関数を実行します。</target>
        </trans-unit>
        <trans-unit id="1b43f3d8a5a546054aa677d2470158616bf0b261" translate="yes" xml:space="preserve">
          <source>Runs the given function inside a transaction.</source>
          <target state="translated">トランザクション内で指定された関数を実行します。</target>
        </trans-unit>
        <trans-unit id="3172c85a51f1a6064e628809c6d4b4968b27fe04" translate="yes" xml:space="preserve">
          <source>Runs the given function or &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; inside a transaction</source>
          <target state="translated">トランザクション内で指定された関数または&lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; を&lt;/a&gt;実行します</target>
        </trans-unit>
        <trans-unit id="d03a7048df33145a714a4402106ee56bef98057a" translate="yes" xml:space="preserve">
          <source>Runs the given function or &lt;a href=&quot;ecto.multi&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; inside a transaction.</source>
          <target state="translated">トランザクション内で指定された関数または&lt;a href=&quot;ecto.multi&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;を実行します。</target>
        </trans-unit>
        <trans-unit id="1582600625fd381ca554979f70e7434d87fa5103" translate="yes" xml:space="preserve">
          <source>Runtime configuration</source>
          <target state="translated">ランタイム設定</target>
        </trans-unit>
        <trans-unit id="eb6d964d366ee36fc795e3db3126c304138f3875" translate="yes" xml:space="preserve">
          <source>Runtime configuration, instead, is accessed during or after your application is started and can be read through the &lt;a href=&quot;#c:config/2&quot;&gt;&lt;code&gt;config/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">代わりに、ランタイム構成は、アプリケーションの起動中または起動後にアクセスされ、&lt;a href=&quot;#c:config/2&quot;&gt; &lt;code&gt;config/2&lt;/code&gt; &lt;/a&gt;関数を介して読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="78fe2b7f7666674900a3c15471ccc99184e3f647" translate="yes" xml:space="preserve">
          <source>SQL adapters, such as Postgres and MySQL, can only enumerate a stream inside a transaction.</source>
          <target state="translated">PostgresやMySQLなどのSQLアダプタは、トランザクション内のストリームを列挙することしかできません。</target>
        </trans-unit>
        <trans-unit id="31be5af5971e510c34651813107373056d053546" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast/3&quot;&gt;&lt;code&gt;broadcast/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails</source>
          <target state="translated">&lt;a href=&quot;#broadcast/3&quot;&gt; &lt;code&gt;broadcast/3&lt;/code&gt; &lt;/a&gt;と同じですが、ブロードキャストが失敗した場合に発生します</target>
        </trans-unit>
        <trans-unit id="c0f4a3368e53f6e8567bf92693a54053f93f17a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast/3&quot;&gt;&lt;code&gt;broadcast/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails.</source>
          <target state="translated">&lt;a href=&quot;#broadcast/3&quot;&gt; &lt;code&gt;broadcast/3&lt;/code&gt; &lt;/a&gt;と同じですが、ブロードキャストが失敗した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="26f5ed3ec52e2d5cfcd2fd1792eff31c6659c93e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast_from/3&quot;&gt;&lt;code&gt;broadcast_from/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails</source>
          <target state="translated">&lt;a href=&quot;#broadcast_from/3&quot;&gt; &lt;code&gt;broadcast_from/3&lt;/code&gt; &lt;/a&gt;と同じですが、ブロードキャストが失敗した場合に発生します</target>
        </trans-unit>
        <trans-unit id="04f6a54ce5f51c23469a584d22c02e19473ae3e0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#broadcast_from/3&quot;&gt;&lt;code&gt;broadcast_from/3&lt;/code&gt;&lt;/a&gt;, but raises if broadcast fails.</source>
          <target state="translated">&lt;a href=&quot;#broadcast_from/3&quot;&gt; &lt;code&gt;broadcast_from/3&lt;/code&gt; &lt;/a&gt;と同じですが、ブロードキャストが失敗した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="db5de4972e7e363b7c52f64b2eb5d90ef52d3ac5" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:delete/2&quot;&gt;&lt;code&gt;delete/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:delete/2&quot;&gt; &lt;code&gt;delete/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します</target>
        </trans-unit>
        <trans-unit id="c35ae21530f6b981d3fffc6ca1e8df7ca170d9a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:delete/2&quot;&gt;&lt;code&gt;delete/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:delete/2&quot;&gt; &lt;code&gt;delete/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します。</target>
        </trans-unit>
        <trans-unit id="226733d0f50b1f3b16fb5e58c11ac4844d58a7ac" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します</target>
        </trans-unit>
        <trans-unit id="968367c33e0b0cf121b143beda5c49d1c0848a24" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:insert/2&quot;&gt; &lt;code&gt;insert/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します。</target>
        </trans-unit>
        <trans-unit id="632a0c7bbe3b6685b1ddbd04be7b8356ba08e7aa" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert_or_update/2&quot;&gt;&lt;code&gt;insert_or_update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:insert_or_update/2&quot;&gt; &lt;code&gt;insert_or_update/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合はレイズします</target>
        </trans-unit>
        <trans-unit id="d2d1c2ac23c385ba9429c1adba38eeb48052559d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:insert_or_update/2&quot;&gt;&lt;code&gt;insert_or_update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:insert_or_update/2&quot;&gt; &lt;code&gt;insert_or_update/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します。</target>
        </trans-unit>
        <trans-unit id="77f5ce57b6f04302cee6f42deda43b98256efd0e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid</source>
          <target state="translated">&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合は発生します</target>
        </trans-unit>
        <trans-unit id="293c4f91ba874963771add9b057936efc16cc7a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; but returns the struct or raises if the changeset is invalid.</source>
          <target state="translated">&lt;a href=&quot;#c:update/2&quot;&gt; &lt;code&gt;update/2&lt;/code&gt; と&lt;/a&gt;同じですが、構造体を返すか、チェンジセットが無効な場合に発生します。</target>
        </trans-unit>
        <trans-unit id="3c059b0c75bda32d71683e3cc464b2c56b540a1d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.casterror&quot;&gt;&lt;code&gt;Ecto.CastError&lt;/code&gt;&lt;/a&gt; on invalid arguments</source>
          <target state="translated">&lt;a href=&quot;#cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; と&lt;/a&gt;同じ&lt;a href=&quot;ecto.casterror&quot;&gt; &lt;code&gt;Ecto.CastError&lt;/code&gt; &lt;/a&gt;、無効な引数でEcto.CastErrorを発生させます</target>
        </trans-unit>
        <trans-unit id="559604890cc16a2cec1cf5330d10ff3357d7d356" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.casterror&quot;&gt;&lt;code&gt;Ecto.CastError&lt;/code&gt;&lt;/a&gt; on invalid arguments.</source>
          <target state="translated">&lt;a href=&quot;#cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; と&lt;/a&gt;同じ&lt;a href=&quot;ecto.casterror&quot;&gt; &lt;code&gt;Ecto.CastError&lt;/code&gt; &lt;/a&gt;、無効な引数でEcto.CastErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="8fdfe0c9c6c86949eead3814403a059c18d01794" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch_change/2&quot;&gt;&lt;code&gt;fetch_change/2&lt;/code&gt;&lt;/a&gt; but returns the value or raises if the given key was not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch_change/2&quot;&gt; &lt;code&gt;fetch_change/2&lt;/code&gt; と&lt;/a&gt;同じですが、値を返すか、指定されたキーが見つからなかった場合は発生します。</target>
        </trans-unit>
        <trans-unit id="0e00e34052e2f613e9704fe4b4e5b654fbb8ff92" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#fetch_field/2&quot;&gt;&lt;code&gt;fetch_field/2&lt;/code&gt;&lt;/a&gt; but returns the value or raises if the given key was not found.</source>
          <target state="translated">&lt;a href=&quot;#fetch_field/2&quot;&gt; &lt;code&gt;fetch_field/2&lt;/code&gt; と&lt;/a&gt;同じですが、値を返すか、指定されたキーが見つからなかった場合は発生します。</target>
        </trans-unit>
        <trans-unit id="938bc5d04187bec60adad9f96b00fb0934dd29e0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;nil&lt;/code&gt; instead of raising. This is often used with &lt;a href=&quot;phoenix.controller#view_module/1&quot;&gt;&lt;code&gt;Phoenix.Controller.view_module/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.controller#view_template/1&quot;&gt;&lt;code&gt;Phoenix.Controller.view_template/1&lt;/code&gt;&lt;/a&gt;, which must be imported into your views. See the &quot;Examples&quot; section below.</source>
          <target state="translated">&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt;と同じですが、 &lt;code&gt;nil&lt;/code&gt; ではなくnilを返します。これは、&lt;a href=&quot;phoenix.controller#view_module/1&quot;&gt; &lt;code&gt;Phoenix.Controller.view_module/1&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;phoenix.controller#view_template/1&quot;&gt; &lt;code&gt;Phoenix.Controller.view_template/1&lt;/code&gt; &lt;/a&gt;でよく使用され、ビューにインポートする必要があります。以下の「例」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="43873fb5254efdd9068216bf949a05b8c683f8d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, but returns &lt;code&gt;nil&lt;/code&gt; instead of raising. Useful for dynamically rendering templates in the layout that may or may not be implemented by the &lt;code&gt;@view_module&lt;/code&gt; view.</source>
          <target state="translated">&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt;と同じですが、レイズせずに &lt;code&gt;nil&lt;/code&gt; を返します。 &lt;code&gt;@view_module&lt;/code&gt; ビューによって実装される場合とされない場合があるレイアウトでテンプレートを動的にレンダリングするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="06b4a10e004cd74aa0f94998421cfc6dfe686a41" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;, but returns either the socket or throws an error</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt;と同じですが、ソケットを返すか、エラーをスローします</target>
        </trans-unit>
        <trans-unit id="32e1585c10935eaf9f25e043fb1288b908327ad6" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;, but returns either the socket or throws an error.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt;と同じですが、ソケットを返すか、エラーをスローします。</target>
        </trans-unit>
        <trans-unit id="8832210111dce6e6f23cc1837828c66a6682403b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;inputs_for(form, field, [])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputs_for(form, field, [])&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="6c2c9ca478645cb9af567a27b68f7e9eacddf986" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;update/3&lt;/code&gt;, but with an arbitrary process.</source>
          <target state="translated">&lt;code&gt;update/3&lt;/code&gt; と同じですが、任意のプロセスがあります。</target>
        </trans-unit>
        <trans-unit id="cadd66a2347f5e19072c0277b8c7358f4c96a166" translate="yes" xml:space="preserve">
          <source>Same with &lt;code&gt;track/3&lt;/code&gt;, except track any process by &lt;code&gt;topic&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;topic&lt;/code&gt; と &lt;code&gt;key&lt;/code&gt; プロセスを追跡することを除いて、 &lt;code&gt;track/3&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="b5230ecdf4e78f0dd162281a0a78c6cdc853cbe8" translate="yes" xml:space="preserve">
          <source>Schema</source>
          <target state="translated">Schema</target>
        </trans-unit>
        <trans-unit id="301b2b96f90182287e27e3183bc54358047e0434" translate="yes" xml:space="preserve">
          <source>Schema attributes</source>
          <target state="translated">スキーマ属性</target>
        </trans-unit>
        <trans-unit id="10521488170ddab303e05a3772fb749bf1fe39ec" translate="yes" xml:space="preserve">
          <source>Schemaless changesets</source>
          <target state="translated">スキーマレスのチェンジセット</target>
        </trans-unit>
        <trans-unit id="c37847eb673c5d234b9087b74aff7c743ce8ddd6" translate="yes" xml:space="preserve">
          <source>Schemas allow developers to define the shape of their data. Let's see an example:</source>
          <target state="translated">スキーマによって、開発者はデータの形状を定義することができます。例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="36e85587fa0a0a02a5d43c4f67e3b1d5f4e90b05" translate="yes" xml:space="preserve">
          <source>Schemas allows developers to define the shape of their data. Let&amp;rsquo;s see an example:</source>
          <target state="translated">スキーマを使用すると、開発者はデータの形状を定義できます。例を見てみましょう：</target>
        </trans-unit>
        <trans-unit id="466834fbbd30000fe5c774b9d9cd839774b60965" translate="yes" xml:space="preserve">
          <source>Scopes allow us to scope on any path or even on the helper name:</source>
          <target state="translated">スコープでは、任意のパスやヘルパー名をスコープすることができます。</target>
        </trans-unit>
        <trans-unit id="8e61bf9a20029e1be9ec2969434d5904c25253a4" translate="yes" xml:space="preserve">
          <source>Scopes and Resources</source>
          <target state="translated">スコープとリソース</target>
        </trans-unit>
        <trans-unit id="6a98f22dc569c4feed720b2ce5b3e5a64ff2b3dc" translate="yes" xml:space="preserve">
          <source>Scrubs the parameters from the request</source>
          <target state="translated">リクエストのパラメータをスクラブします。</target>
        </trans-unit>
        <trans-unit id="27f0d186b8364ecab92240cc4869c5709c41e5a7" translate="yes" xml:space="preserve">
          <source>Scrubs the parameters from the request.</source>
          <target state="translated">リクエストのパラメータをスクラブします。</target>
        </trans-unit>
        <trans-unit id="9468cdfe43170f8e1b7c161207fcd0d7f167d72f" translate="yes" xml:space="preserve">
          <source>Search functions: &lt;a href=&quot;#like/2&quot;&gt;&lt;code&gt;like/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ilike/2&quot;&gt;&lt;code&gt;ilike/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">検索機能：&lt;a href=&quot;#like/2&quot;&gt; &lt;code&gt;like/2&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#ilike/2&quot;&gt; &lt;code&gt;ilike/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="029b41059043179b345161e80cbafb609edaf362" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 検索を &lt;code&gt;search&lt;/code&gt; します</target>
        </trans-unit>
        <trans-unit id="8eb5e27c9b5ccf9b6aff18d10a22c385ce8d1536" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; in a case insensitive fashion</source>
          <target state="translated">大文字と小文字を区別しない方法で &lt;code&gt;string&lt;/code&gt; を &lt;code&gt;search&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="dd7fbd2e5059a6a1e0fcfe24cbc5806164e322c8" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; in a case insensitive fashion.</source>
          <target state="translated">大文字と小文字を区別しない方法で &lt;code&gt;string&lt;/code&gt; を &lt;code&gt;search&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="d347710f20087bdf2cb082efeefb0ba70285ed03" translate="yes" xml:space="preserve">
          <source>Searches for &lt;code&gt;search&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; の検索を &lt;code&gt;search&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="8262409c05b2324973c717b79900c50cf6161e00" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#apply_action/2&quot;&gt;&lt;code&gt;apply_action/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#apply_action/2&quot;&gt; &lt;code&gt;apply_action/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="81561006a302e8eb9f2f8d7aba1fe152d658b05d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#bypass_through/1&quot;&gt;&lt;code&gt;bypass_through/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#bypass_through/1&quot;&gt; &lt;code&gt;bypass_through/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="429540a302a78a8a1ebb45909c07be1635915920" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:embed_as/1&quot;&gt;&lt;code&gt;embed_as/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#c:embed_as/1&quot;&gt; &lt;code&gt;embed_as/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f85ce73a1d6d3c6c1224f375b5b84f470970aa61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:execute/5&quot;&gt;&lt;code&gt;execute/5&lt;/code&gt;&lt;/a&gt; for a description of arguments.</source>
          <target state="translated">引数の説明については、&lt;a href=&quot;#c:execute/5&quot;&gt; &lt;code&gt;execute/5&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d115725c55ec1d85116ad3d8c8b382bc34ea11f3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#c:put_dynamic_repo/1&quot;&gt;&lt;code&gt;put_dynamic_repo/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#c:put_dynamic_repo/1&quot;&gt; &lt;code&gt;put_dynamic_repo/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a9163e815f8428555b4d0758f30bebe740c9ac3f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;d prefer to cast and validate external parameters.</source>
          <target state="translated">外部パラメーターをキャストして検証する場合は、&lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="70d061cb540d5f0c11648f4d9f67f326ef8f0ba8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; if you'd prefer to cast and validate external parameters.</source>
          <target state="translated">外部パラメータをキャストして検証する場合は、&lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="160359dfa99216e1c3e6c4a032ce68a16d781dd6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#code/1&quot;&gt;&lt;code&gt;code/1&lt;/code&gt;&lt;/a&gt; for the mapping.</source>
          <target state="translated">マッピングについては、&lt;a href=&quot;#code/1&quot;&gt; &lt;code&gt;code/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="54c38114b81a0de364df06f82b76a8b8d2fa3ade" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#current_path/2&quot;&gt;&lt;code&gt;current_path/2&lt;/code&gt;&lt;/a&gt; to override the default parameters.</source>
          <target state="translated">デフォルトのパラメータを上書きするには、&lt;a href=&quot;#current_path/2&quot;&gt; &lt;code&gt;current_path/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ab8b7a05d70ebc5262d9bc1c4ae83f023d55df6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#current_url/2&quot;&gt;&lt;code&gt;current_url/2&lt;/code&gt;&lt;/a&gt; to override the default parameters.</source>
          <target state="translated">デフォルトのパラメータを上書きするには、&lt;a href=&quot;#current_url/2&quot;&gt; &lt;code&gt;current_url/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="47e01c9fd9229a5ca109aaef23fb86782167896d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#datetime_add/3&quot;&gt;&lt;code&gt;datetime_add/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#datetime_add/3&quot;&gt; &lt;code&gt;datetime_add/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="446dc24810f81cacc9b7d86ae05c8303571fb483" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#dispatch/5&quot;&gt;&lt;code&gt;dispatch/5&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#dispatch/5&quot;&gt; &lt;code&gt;dispatch/5&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="be219b9ba050253444f2a909dff91ef612e5fa56" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; for the available options.</source>
          <target state="translated">使用可能なオプションについては、&lt;a href=&quot;#form_for/4&quot;&gt; &lt;code&gt;form_for/4&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a8899b0d287dfb8d878f8bbed5de0faa5bafbe98" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#get_format/1&quot;&gt;&lt;code&gt;get_format/1&lt;/code&gt;&lt;/a&gt; for retrieval.</source>
          <target state="translated">取得については、&lt;a href=&quot;#get_format/1&quot;&gt; &lt;code&gt;get_format/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b19a5cfb329d7eacbbbf417d5b016f9ed41c581c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#inputs_for/4&quot;&gt;&lt;code&gt;inputs_for/4&lt;/code&gt;&lt;/a&gt; for the available options.</source>
          <target state="translated">使用可能なオプションについては、&lt;a href=&quot;#inputs_for/4&quot;&gt; &lt;code&gt;inputs_for/4&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="406dda280674bab437f44d83fb04430734616082" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#intercept/1&quot;&gt;&lt;code&gt;intercept/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#intercept/1&quot;&gt; &lt;code&gt;intercept/1&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9f110d7ed07bcb97c4369788a800bd8c9a39394a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#join/4&quot;&gt;&lt;code&gt;join/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#join/4&quot;&gt; &lt;code&gt;join/4&lt;/code&gt; を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="89b41f097462aec0e3e090380c34040fd8c70750" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#join/4&quot;&gt;&lt;code&gt;join/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#join/4&quot;&gt; &lt;code&gt;join/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9e5dc5d72d9569c3ffaf92d7fdf6652b4f2ac022" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#label/2&quot;&gt;&lt;code&gt;label/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#label/2&quot;&gt; &lt;code&gt;label/2&lt;/code&gt; を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="b4393f19dfec8ca9111f143b22c91f456d9a3c12" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#label/2&quot;&gt;&lt;code&gt;label/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#label/2&quot;&gt; &lt;code&gt;label/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6f35e881a1408a4ab81f31c333ac0993cdbc2772" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#load_state/2&quot;&gt;&lt;code&gt;load_state/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#load_state/2&quot;&gt; &lt;code&gt;load_state/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a81c8ed463094cf76527d6eef0e1eee58f85d88a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt; for more information on this particular approach.</source>
          <target state="translated">この特定のアプローチの詳細については、&lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b8ef1ba44a049b9e256d983fc00818e665b1193a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#match/5&quot;&gt;&lt;code&gt;match/5&lt;/code&gt;&lt;/a&gt; for options.</source>
          <target state="translated">オプションについては、&lt;a href=&quot;#match/5&quot;&gt; &lt;code&gt;match/5&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2e302be972b9853f322f9a9d0314b6560ffd6f14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#module-intervals&quot;&gt;Intervals&lt;/a&gt; for supported &lt;code&gt;interval&lt;/code&gt; values.</source>
          <target state="translated">サポートされている &lt;code&gt;interval&lt;/code&gt; 値については、&lt;a href=&quot;#module-intervals&quot;&gt;間隔&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e3bdddab0ca71be4e0d0e57670315f70dad3bd4f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#pipeline/2&quot;&gt;&lt;code&gt;pipeline/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#pipeline/2&quot;&gt; &lt;code&gt;pipeline/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="135d4e719d0766f17d2e08228378ae66ce9a070b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#put_resp_cookie/4&quot;&gt;&lt;code&gt;put_resp_cookie/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#put_resp_cookie/4&quot;&gt; &lt;code&gt;put_resp_cookie/4&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4550d4697758fd204f59f25e0b1a6304c93be4d9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#recycle/1&quot;&gt;&lt;code&gt;recycle/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#recycle/1&quot;&gt; &lt;code&gt;recycle/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9aebbba31dbd9458e7a25bf514e18665f833d3dd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="908c56d179564b7cfdcfb8431f6434eefed5749c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#reply/2&quot;&gt;&lt;code&gt;reply/2&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">使用例については、&lt;a href=&quot;#reply/2&quot;&gt; &lt;code&gt;reply/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="23896889763021c93678399c008455262a580462" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; &lt;/a&gt;見る/ 4</target>
        </trans-unit>
        <trans-unit id="426590122d0cb0370f085208f290b5ffde8c6940" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0fbd426a6c1ba18664a76c286683f974c4a4dabb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#send_resp/1&quot;&gt;&lt;code&gt;send_resp/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#send_resp/1&quot;&gt; &lt;code&gt;send_resp/1&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1864cff94e119d0991c6193935a96f066936243f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join!/4&quot;&gt;&lt;code&gt;subscribe_and_join!/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join!/4&quot;&gt; &lt;code&gt;subscribe_and_join!/4&lt;/code&gt; を&lt;/a&gt;ご覧ください</target>
        </trans-unit>
        <trans-unit id="0a44ded8627dc7883d4a01683ab621667c67d00e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join!/4&quot;&gt;&lt;code&gt;subscribe_and_join!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join!/4&quot;&gt; &lt;code&gt;subscribe_and_join!/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2bd76cf963006223cb163794cd0b4753397ed92b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="a5b41f1b5289201c8a07f46617a40568bf625ff0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bb57f840a4d423d2bed6c24c1306f8ecba33756e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; for example and docs.</source>
          <target state="translated">例とドキュメントについては、&lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ef7809f9d350584ddaf5e5164489a613a551a7af" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#with_cte/3&quot;&gt;&lt;code&gt;with_cte/3&lt;/code&gt;&lt;/a&gt; on example of how to build a query with a recursive CTE.</source>
          <target state="translated">再帰CTEを使用してクエリを作成する方法の例については、&lt;a href=&quot;#with_cte/3&quot;&gt; &lt;code&gt;with_cte/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="371fb723d2394a3831042751931faedbd69adef9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub#subscribe/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.subscribe/3&lt;/code&gt;&lt;/a&gt; for options.</source>
          <target state="translated">オプションについては、&lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub#subscribe/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.subscribe/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7c76e6cc809f1d86ecee6d287cd01c8ce78fd4a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../plug/1.5.1/plug.conn#send_file/3&quot;&gt;&lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plug/1.5.1/plug.conn#send_resp/3&quot;&gt;&lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt;&lt;/a&gt; if you would like to access the low-level functions used to send files and responses via Plug.</source>
          <target state="translated">参照&lt;a href=&quot;../plug/1.5.1/plug.conn#send_file/3&quot;&gt; &lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../plug/1.5.1/plug.conn#send_resp/3&quot;&gt; &lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt; &lt;/a&gt;あなたはプラグ経由でファイルと応答を送信するために使用される低レベルの機能にアクセスしたい場合。</target>
        </trans-unit>
        <trans-unit id="b4d2f93aa49abab488a0628776098394719d620c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../plug/plug.conn#send_file/3&quot;&gt;&lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plug/plug.conn#send_resp/3&quot;&gt;&lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt;&lt;/a&gt; if you would like to access the low-level functions used to send files and responses via Plug.</source>
          <target state="translated">参照&lt;a href=&quot;../plug/plug.conn#send_file/3&quot;&gt; &lt;code&gt;Plug.Conn.send_file/3&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../plug/plug.conn#send_resp/3&quot;&gt; &lt;code&gt;Plug.Conn.send_resp/3&lt;/code&gt; &lt;/a&gt;あなたはプラグ経由でファイルと応答を送信するために使用される低レベルの機能にアクセスしたい場合。</target>
        </trans-unit>
        <trans-unit id="5de1813146a450d81745fae85a10011300e06e44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.query#subquery/2&quot;&gt;&lt;code&gt;Ecto.Query.subquery/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;ecto.query#subquery/2&quot;&gt; &lt;code&gt;Ecto.Query.subquery/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="45f659716a011dd99b8cca9ae0ba1df93a24b7e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.query#update/3&quot;&gt;&lt;code&gt;Ecto.Query.update/3&lt;/code&gt;&lt;/a&gt; for update operations that can be performed on fields.</source>
          <target state="translated">フィールドで実行できる更新操作については、&lt;a href=&quot;ecto.query#update/3&quot;&gt; &lt;code&gt;Ecto.Query.update/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b8092c29bbc4fb0de38c16b33a5a35d209a6c347" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ecto.repo#c:rollback/1&quot;&gt;&lt;code&gt;Ecto.Repo.rollback/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ecto.repo#c:rollback/1&quot;&gt; &lt;code&gt;Ecto.Repo.rollback/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="621718f4f723b87a1b297027378650881a8903bb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_call/3&quot;&gt;&lt;code&gt;GenServer.handle_call/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_call/3&quot;&gt; &lt;code&gt;GenServer.handle_call/3&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="643a98f8636b0a5bc5ab9349954ff26b77f1ceea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_cast/2&quot;&gt;&lt;code&gt;GenServer.handle_cast/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_cast/2&quot;&gt; &lt;code&gt;GenServer.handle_cast/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="da23b7c841e113b3ff7ae3e4331a604fb3e4a99a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt;&lt;code&gt;GenServer.handle_info/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt; &lt;code&gt;GenServer.handle_info/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="657c18c9b964d238c5425faead2bdeca7303b75f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:terminate/2&quot;&gt;&lt;code&gt;GenServer.terminate/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:terminate/2&quot;&gt; &lt;code&gt;GenServer.terminate/2&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8355db15ad1ed182ee4f962ee451395b08a29a75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e44626997314e02c476e0acdd836813e795c9c5b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information</source>
          <target state="translated">詳細については、&lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt;を参照してください</target>
        </trans-unit>
        <trans-unit id="66d24e14715f9e8d7b617ab80f19f4d81baeefa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information on channels.</source>
          <target state="translated">チャネルの詳細については、&lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="269436d2c9bb8a6deee2dcb74762908f63d5b0c6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.channel&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt; for more information on channels. Check each transport module to find the options specific to each transport.</source>
          <target state="translated">チャネルの詳細については、&lt;a href=&quot;phoenix.channel&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt;を参照してください。各トランスポートモジュールをチェックして、各トランスポートに固有のオプションを見つけます。</target>
        </trans-unit>
        <trans-unit id="307f6e4810e6a8623bf10bc3de9042be222e19df" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.html.tag#form_tag/2&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag.form_tag/2&lt;/code&gt;&lt;/a&gt; for more information on the options above.</source>
          <target state="translated">上記のオプションの詳細については、&lt;a href=&quot;phoenix.html.tag#form_tag/2&quot;&gt; &lt;code&gt;Phoenix.HTML.Tag.form_tag/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f492af01d862f52e16377df7fb35fa52d8b0cd41" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.html.tag#tag/2&quot;&gt;&lt;code&gt;Phoenix.HTML.Tag.tag/2&lt;/code&gt;&lt;/a&gt; for more information and examples.</source>
          <target state="translated">詳細と例については、&lt;a href=&quot;phoenix.html.tag#tag/2&quot;&gt; &lt;code&gt;Phoenix.HTML.Tag.tag/2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fa72fdb30cd34578ad87b4d3074be2504209c727" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.presence#list/2&quot;&gt;&lt;code&gt;Phoenix.Presence.list/2&lt;/code&gt;&lt;/a&gt; for more information on the presence datastructure.</source>
          <target state="translated">&lt;a href=&quot;phoenix.presence#list/2&quot;&gt; &lt;code&gt;Phoenix.Presence.list/2&lt;/code&gt; &lt;/a&gt;詳細については、Phoenix.Presence.list / 2を参照してください。</target>
        </trans-unit>
        <trans-unit id="ef1bb15bff16619e10cef1d606d47af3888ec309" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.pubsub.adapter&quot;&gt;&lt;code&gt;Phoenix.PubSub.Adapter&lt;/code&gt;&lt;/a&gt; to implement a custom adapter.</source>
          <target state="translated">カスタムアダプタを実装するには、&lt;a href=&quot;phoenix.pubsub.adapter&quot;&gt; &lt;code&gt;Phoenix.PubSub.Adapter&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="88c8c4a4bcc3b23e8f0afc627aff2ba07638bb9c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">使用例については、&lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ee65f0a0a082cb9fe667267438125e815eeb29d0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.template.eexengine&quot;&gt;&lt;code&gt;Phoenix.Template.EExEngine&lt;/code&gt;&lt;/a&gt; for an example engine implementation.</source>
          <target state="translated">エンジンの実装例については、&lt;a href=&quot;phoenix.template.eexengine&quot;&gt; &lt;code&gt;Phoenix.Template.EExEngine&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d09ab09a80fc6e3371af67b48a45ec888d3b2ef6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;phoenix.token&quot;&gt;&lt;code&gt;Phoenix.Token&lt;/code&gt;&lt;/a&gt; documentation for examples in performing token verification on connect.</source>
          <target state="translated">接続時にトークン検証を実行する例については、&lt;a href=&quot;phoenix.token&quot;&gt; &lt;code&gt;Phoenix.Token&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="261e1ae56f3a072bff65a99c72ff577be8137484" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;plug.session.store&quot;&gt;&lt;code&gt;Plug.Session.Store&lt;/code&gt;&lt;/a&gt; for the specification session stores are required to implement.</source>
          <target state="translated">実装に必要なセッションストアの仕様については、&lt;a href=&quot;plug.session.store&quot;&gt; &lt;code&gt;Plug.Session.Store&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9230a87cc68c046eee9248393a3f13e2c8ee374f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;aggregate/2&lt;/code&gt; for general considerations and options.</source>
          <target state="translated">一般的な考慮事項とオプションについては、 &lt;code&gt;aggregate/2&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="8c5bed7ccad22aa1051678c95f9fb7801d6255d5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;c:list/2&lt;/code&gt; for more information on the presence data structure.</source>
          <target state="translated">プレゼンスデータ構造の詳細については、 &lt;code&gt;c:list/2&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="5c11d0599aa5ae1717c8ef4754f747abcfaf6c60" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;inform/1&lt;/code&gt; for more information.</source>
          <target state="translated">詳細については、 &lt;code&gt;inform/1&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="1fb76575f5700f016472c68381141953c4df7440" translate="yes" xml:space="preserve">
          <source>See the &quot;Named binding&quot; section in &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt;の「名前付きバインディング」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="161ac165bdee8f21fa6629207e7cef6c2626b8ba" translate="yes" xml:space="preserve">
          <source>See the &quot;Shared options&quot; section at the module documentation for more options.</source>
          <target state="translated">より多くのオプションについては、モジュールドキュメントの &quot;共有オプション&quot; セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="aa3ed528817fda45b3391d7fe285532382e90f27" translate="yes" xml:space="preserve">
          <source>See the &quot;Shared options&quot; section at the module documentation for remaining options.</source>
          <target state="translated">残りのオプションについては、モジュールドキュメントの「共有オプション」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="9ee043fc5ef54fddf8825b05f20c419d2581cb7f" translate="yes" xml:space="preserve">
          <source>See the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation for remaining options.</source>
          <target state="translated">残りのオプションについては、モジュールのドキュメントの「共有オプション」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="7649523e1a49db136fa7cc9581afc36295590af4" translate="yes" xml:space="preserve">
          <source>See the &amp;ldquo;Shared options&amp;rdquo; section at the module documentation.</source>
          <target state="translated">モジュールのドキュメントの「共有オプション」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="a3b2e55e84311bdcd28e3a7c26f23056f3b42cfe" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#module-phoenix-liveview-integration&quot;&gt;Phoenix.LiveView integration&lt;/a&gt; section in module documentation for examples of using this function.</source>
          <target state="translated">この関数の使用例については、モジュールドキュメントの&lt;a href=&quot;#module-phoenix-liveview-integration&quot;&gt;Phoenix.LiveView統合&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="831c83e86f46bd94d2d80b20745c47e78ec12552" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; implementations for examples of how to implement this callback.</source>
          <target state="translated">このコールバックの実装方法の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#fetch/2&quot;&gt; &lt;code&gt;Keyword.fetch/2&lt;/code&gt; の&lt;/a&gt;実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="52bfe9d775fe2216e987697974fbdb4950dfca06" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.socket.transport&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt;&lt;/a&gt; documentation for more information on writing your own socket that does not leverage channels or for writing your own transports that interacts with other sockets.</source>
          <target state="translated">チャネルを利用しない独自のソケットの作成、または他のソケットと相互作用する独自のトランスポートの作成の詳細については、&lt;a href=&quot;phoenix.socket.transport&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="48b888cf8ed338dd5d7dafa38b1755fcf07c5cc2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;phoenix.socket.transport&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt;&lt;/a&gt; documentation for more information on writing your own transports.</source>
          <target state="translated">独自のトランスポートの作成の詳細については、&lt;a href=&quot;phoenix.socket.transport&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1684cff4f2015c60813bad9a0c254c9bb819dc89" translate="yes" xml:space="preserve">
          <source>See the configuration in the moduledoc for options shared between adapters, for adapter-specific configuration see the adapter&amp;rsquo;s documentation.</source>
          <target state="translated">アダプタ間で共有されるオプションについては、モジュールドキュメントの構成を参照してください。アダプタ固有の構成については、アダプタのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0faab496e8605530beb9dcbc7065e79751224fbe" translate="yes" xml:space="preserve">
          <source>See the configuration in the moduledoc for options shared between adapters, for adapter-specific configuration see the adapter's documentation.</source>
          <target state="translated">アダプタ間で共有されるオプションについては moduledoc の設定を参照してください。 アダプタ固有の設定についてはアダプタのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="312fb50202d073fcbd9ec6a658fd9509a91a8bd0" translate="yes" xml:space="preserve">
          <source>See the documentation for those functions for more information.</source>
          <target state="translated">詳細については、これらの機能のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a99809f8ab2290821228a7754fff870d3b2e5a30" translate="yes" xml:space="preserve">
          <source>See the implementations for &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt;&lt;code&gt;Map.pop/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt;&lt;code&gt;Keyword.pop/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#pop/3&quot;&gt; &lt;code&gt;Map.pop/3&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#pop/3&quot;&gt; &lt;code&gt;Keyword.pop/3&lt;/code&gt; &lt;/a&gt;の実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="0436c22fef845c067bef662ef491804de17b0b6d" translate="yes" xml:space="preserve">
          <source>See the implementations of &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt;&lt;code&gt;Map.get_and_update/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt;&lt;code&gt;Keyword.get_and_update/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#get_and_update/3&quot;&gt; &lt;code&gt;Map.get_and_update/3&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#get_and_update/3&quot;&gt; &lt;code&gt;Keyword.get_and_update/3&lt;/code&gt; &lt;/a&gt;の実装をご覧ください。</target>
        </trans-unit>
        <trans-unit id="2e65e93f5d1b1c4b0155385905ede5a1c03af66b" translate="yes" xml:space="preserve">
          <source>See the module documentation for examples of using this function.</source>
          <target state="translated">この関数の使用例については、モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="679a357d872f534ff44cb3b4a7a3b383d13c7888" translate="yes" xml:space="preserve">
          <source>Select also allows each expression to be wrapped in lists, tuples or maps as shown in the examples below. A full schema can also be selected.</source>
          <target state="translated">選択すると、以下の例に示すように、各式をリスト、タプル、またはマップでラップすることもできます。完全なスキーマを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="d033c83fffaa5673b1a414ddfda2c025b06d961a" translate="yes" xml:space="preserve">
          <source>Selects which fields will be selected from the schema and any transformations that should be performed on the fields. Any expression that is accepted in a query can be a select field.</source>
          <target state="translated">スキーマから選択されるフィールドと、そのフィールドに対して実行されるべき変換を選択します。クエリで受け入れられる任意の式を選択フィールドにすることができます。</target>
        </trans-unit>
        <trans-unit id="5e91d1e0f5e9487059e916a996058cf9e1dc6766" translate="yes" xml:space="preserve">
          <source>Send &lt;code&gt;:garbage_collect&lt;/code&gt; clause to the transport process:</source>
          <target state="translated">&lt;code&gt;:garbage_collect&lt;/code&gt; 句をトランスポートプロセスに送信します。</target>
        </trans-unit>
        <trans-unit id="339bcde69154793c7987399aaf319979a690b702" translate="yes" xml:space="preserve">
          <source>Send an informational response to the client</source>
          <target state="translated">依頼者に情報提供の回答を送る</target>
        </trans-unit>
        <trans-unit id="3ed9da092f3a4af112039ba3e975724f7aa96536" translate="yes" xml:space="preserve">
          <source>Send an informational response to the client.</source>
          <target state="translated">依頼者に情報提供の回答を送る。</target>
        </trans-unit>
        <trans-unit id="e173371abf693a34430650d6ef0622ed0064635e" translate="yes" xml:space="preserve">
          <source>Send fragments directly to the database</source>
          <target state="translated">フラグメントをデータベースに直接送信</target>
        </trans-unit>
        <trans-unit id="16e544758dfbf09ced50ada38b4b05192f7e5c8b" translate="yes" xml:space="preserve">
          <source>Send fragments directly to the database.</source>
          <target state="translated">フラグメントをデータベースに直接送信します。</target>
        </trans-unit>
        <trans-unit id="489239a1181fd2c713a82111145edf54439dab29" translate="yes" xml:space="preserve">
          <source>Sends JSON response</source>
          <target state="translated">JSON レスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="5a525bc62260b0e127c7db79abcc3613f2585efb" translate="yes" xml:space="preserve">
          <source>Sends JSON response.</source>
          <target state="translated">JSON レスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="8660cb1f08099de5fb0f65076cb9f9400d7c92b6" translate="yes" xml:space="preserve">
          <source>Sends a chunk as part of a chunked response</source>
          <target state="translated">チャンクされたレスポンスの一部としてチャンクを送信します。</target>
        </trans-unit>
        <trans-unit id="fe6e56dadcec8e96d4db4592922c851f171d45e5" translate="yes" xml:space="preserve">
          <source>Sends a chunk as part of a chunked response.</source>
          <target state="translated">チャンクされたレスポンスの一部としてチャンクを送信します。</target>
        </trans-unit>
        <trans-unit id="159b4be78595cfa9e13576378a181ce38afd7078" translate="yes" xml:space="preserve">
          <source>Sends a chunk in the chunked response</source>
          <target state="translated">チャンクされたレスポンスでチャンクを送信する</target>
        </trans-unit>
        <trans-unit id="4b026d5ba5a419651b4118cb2aa26c82b8a7e8dc" translate="yes" xml:space="preserve">
          <source>Sends a chunk in the chunked response.</source>
          <target state="translated">チャンクされたレスポンスでチャンクを送信します。</target>
        </trans-unit>
        <trans-unit id="de3d8a2105ba453f710652c7ae63c978abfb2c82" translate="yes" xml:space="preserve">
          <source>Sends a file as the response body with the given &lt;code&gt;status&lt;/code&gt; and optionally starting at the given offset until the given length</source>
          <target state="translated">指定された &lt;code&gt;status&lt;/code&gt; 持ち、オプションで指定されたオフセットから指定された長さまでファイルを応答本文として送信</target>
        </trans-unit>
        <trans-unit id="e9dcef495e0b37b6a9a55b68958139330d7d9f0e" translate="yes" xml:space="preserve">
          <source>Sends a file as the response body with the given &lt;code&gt;status&lt;/code&gt; and optionally starting at the given offset until the given length.</source>
          <target state="translated">指定された &lt;code&gt;status&lt;/code&gt; ファイルを応答本文として送信し、オプションで指定されたオフセットから指定された長さまで送信します。</target>
        </trans-unit>
        <trans-unit id="fe9eb2fee9ae60e2ca92121924ef824a470a07cb" translate="yes" xml:space="preserve">
          <source>Sends a message to all subscribers of a topic</source>
          <target state="translated">トピックのすべての購読者にメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="3f4328e232001421bf2c872503e97a20d3232f5b" translate="yes" xml:space="preserve">
          <source>Sends a message to all subscribers of a topic.</source>
          <target state="translated">トピックのすべての購読者にメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="a373ddfffbe146ddac8a173341a9221d9a4ffded" translate="yes" xml:space="preserve">
          <source>Sends a response to the client</source>
          <target state="translated">クライアントに応答を送信します。</target>
        </trans-unit>
        <trans-unit id="d1fba647ce413e6f7c8b1af6df87c6c2745e996c" translate="yes" xml:space="preserve">
          <source>Sends a response to the client.</source>
          <target state="translated">クライアントに応答を送信します。</target>
        </trans-unit>
        <trans-unit id="ea3622a1491a4991ba2109ef9333051926e18c86" translate="yes" xml:space="preserve">
          <source>Sends a response with the given status and body</source>
          <target state="translated">指定されたステータスとボディを持つレスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="4cd23c51688616b423a756b98b293b101621efe1" translate="yes" xml:space="preserve">
          <source>Sends a response with the given status and body.</source>
          <target state="translated">指定されたステータスとボディで応答を送信します。</target>
        </trans-unit>
        <trans-unit id="c7f30c86685aa3607c7ab991521564787425248b" translate="yes" xml:space="preserve">
          <source>Sends an information response to a client but raises if the adapter does not support inform</source>
          <target state="translated">クライアントに情報レスポンスを送信しますが、アダプタが inform をサポートしていない場合は発生します。</target>
        </trans-unit>
        <trans-unit id="7d87f8aad66e77be3e8f2d5bfa286b94bb99af45" translate="yes" xml:space="preserve">
          <source>Sends an information response to a client but raises if the adapter does not support inform.</source>
          <target state="translated">クライアントに情報応答を送信しますが、アダプタが inform をサポートしていない場合は発生します。</target>
        </trans-unit>
        <trans-unit id="8957b8bad5a32e15394a3faa2bd6607a6ee1ae15" translate="yes" xml:space="preserve">
          <source>Sends and informational response to the client</source>
          <target state="translated">クライアントへの情報提供</target>
        </trans-unit>
        <trans-unit id="3d64de4420bbf1ab57866fc08ef6ebb0cf9d618f" translate="yes" xml:space="preserve">
          <source>Sends and informational response to the client.</source>
          <target state="translated">クライアントへの情報提供と応答を送信します。</target>
        </trans-unit>
        <trans-unit id="034c6ea35c7dac4497fff0e97f6a65dc6add09be" translate="yes" xml:space="preserve">
          <source>Sends event to the socket</source>
          <target state="translated">イベントをソケットに送信する</target>
        </trans-unit>
        <trans-unit id="7083990a770deb6247c289c9286b7c9ad92c5f99" translate="yes" xml:space="preserve">
          <source>Sends event to the socket.</source>
          <target state="translated">イベントをソケットに送信します。</target>
        </trans-unit>
        <trans-unit id="64a9e7c61acbcd7bc8acc5dedf73b365451f695e" translate="yes" xml:space="preserve">
          <source>Sends html response</source>
          <target state="translated">html レスポンスを送信</target>
        </trans-unit>
        <trans-unit id="1ee2773809b54afc3ec4a9bde01d6f87355f8588" translate="yes" xml:space="preserve">
          <source>Sends html response.</source>
          <target state="translated">html レスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="555a5345663c5549c5012382603ce0975ba2f157" translate="yes" xml:space="preserve">
          <source>Sends redirect response to the given url</source>
          <target state="translated">指定された URL にリダイレクトレスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="a5ccf0adfdfd164726fa10b86b27442adb2d4682" translate="yes" xml:space="preserve">
          <source>Sends redirect response to the given url.</source>
          <target state="translated">指定されたURLにリダイレクトレスポンスを送信します。</target>
        </trans-unit>
        <trans-unit id="8e530140d82c52f53e8acdaad18b70006366216e" translate="yes" xml:space="preserve">
          <source>Sends text response</source>
          <target state="translated">テキスト応答を送信します。</target>
        </trans-unit>
        <trans-unit id="c1248e478956ecfda126a47e010af683a1a9fef9" translate="yes" xml:space="preserve">
          <source>Sends text response.</source>
          <target state="translated">テキスト応答を送信します。</target>
        </trans-unit>
        <trans-unit id="b11b79b63b737f42e6de87481fdbad625665e341" translate="yes" xml:space="preserve">
          <source>Sends the given file or binary as a download</source>
          <target state="translated">与えられたファイルまたはバイナリをダウンロードとして送信します。</target>
        </trans-unit>
        <trans-unit id="d7eb8984be042027d6d16e842e16fe4fffc0d82e" translate="yes" xml:space="preserve">
          <source>Sends the given file or binary as a download.</source>
          <target state="translated">与えられたファイルまたはバイナリをダウンロードとして送信します。</target>
        </trans-unit>
        <trans-unit id="01c751c691b5cd02c867c6c00a48fa707b7abaa0" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and body as a response back to the client</source>
          <target state="translated">与えられたステータス、ヘッダ、ボディをレスポンスとしてクライアントに送信します。</target>
        </trans-unit>
        <trans-unit id="b1b5e5859a86db864471510765fc638d073c3a7c" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and body as a response back to the client.</source>
          <target state="translated">与えられたステータス、ヘッダ、およびボディをレスポンスとしてクライアントに返します。</target>
        </trans-unit>
        <trans-unit id="3f667a597d0810736bda963eefbc33a74f24820b" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and file as a response back to the client</source>
          <target state="translated">与えられたステータス、ヘッダ、ファイルをレスポンスとしてクライアントに送り返します。</target>
        </trans-unit>
        <trans-unit id="8fa020f53cdee1e58149be6a170a81ebd2b8f16a" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers and file as a response back to the client.</source>
          <target state="translated">与えられたステータス、ヘッダ、ファイルをレスポンスとしてクライアントに返します。</target>
        </trans-unit>
        <trans-unit id="b1ae73f262918a400f2777f879f98b14757c0356" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers as the beginning of a chunked response to the client</source>
          <target state="translated">指定されたステータス、ヘッダをチャンクされたレスポンスの先頭としてクライアントに送信します。</target>
        </trans-unit>
        <trans-unit id="98f05b4a43a17d1506c7c0722b3b1b76cd400e66" translate="yes" xml:space="preserve">
          <source>Sends the given status, headers as the beginning of a chunked response to the client.</source>
          <target state="translated">与えられたステータス、ヘッダを、チャンクされた応答の先頭としてクライアントに送信します。</target>
        </trans-unit>
        <trans-unit id="4ed850761dfe7724d1b944f2ffc0f7d2de013f38" translate="yes" xml:space="preserve">
          <source>Sends the response headers as a chunked response</source>
          <target state="translated">レスポンスヘッダをチャンク化されたレスポンスとして送信します。</target>
        </trans-unit>
        <trans-unit id="04d8681376a92c3eb52331e76051230a4195c17d" translate="yes" xml:space="preserve">
          <source>Sends the response headers as a chunked response.</source>
          <target state="translated">レスポンスヘッダをチャンクされたレスポンスとして送信します。</target>
        </trans-unit>
        <trans-unit id="59bee72c1fd17c82da45c231f035a209dfdee94a" translate="yes" xml:space="preserve">
          <source>Serializer</source>
          <target state="translated">Serializer</target>
        </trans-unit>
        <trans-unit id="85792e8a3d476121d2028fa22f8b1db5759e853e" translate="yes" xml:space="preserve">
          <source>Server pushes must happen prior to a response being sent. If a server push is attempted after a response is sent then a &lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt;&lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">サーバープッシュは、応答が送信される前に行われる必要があります。応答の送信後にサーバープッシュが試行されると、&lt;a href=&quot;plug.conn.alreadysenterror&quot;&gt; &lt;code&gt;Plug.Conn.AlreadySentError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="3facdb03e5d7811371bc108d458d02bf7b7534eb" translate="yes" xml:space="preserve">
          <source>Session stores</source>
          <target state="translated">セッションストア</target>
        </trans-unit>
        <trans-unit id="0762d654ef1cd87661534f45fd60626730f25204" translate="yes" xml:space="preserve">
          <source>Sets the dynamic repository to be used in further interactions.</source>
          <target state="translated">さらなるインタラクションで使用するダイナミックリポジトリを設定します。</target>
        </trans-unit>
        <trans-unit id="973de0fad1a86720c3b14c87e1f533753fabc33e" translate="yes" xml:space="preserve">
          <source>Sets the response to the given &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;</source>
          <target state="translated">応答を指定された &lt;code&gt;status&lt;/code&gt; と &lt;code&gt;body&lt;/code&gt; 設定します</target>
        </trans-unit>
        <trans-unit id="7e2971886484c2d54f52fda136a1853fe373601c" translate="yes" xml:space="preserve">
          <source>Sets the response to the given &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;status&lt;/code&gt; と &lt;code&gt;body&lt;/code&gt; 応答を設定します。</target>
        </trans-unit>
        <trans-unit id="7b11288ff44d6a2c856bd42c2433b817ee3c0d33" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header taking into account the &lt;code&gt;charset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; を考慮して、 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 応答ヘッダーの値を設定します</target>
        </trans-unit>
        <trans-unit id="60a9f444fec9661326170fa10d3b28058820fb13" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; response header taking into account the &lt;code&gt;charset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; を考慮して、 &lt;code&gt;&quot;content-type&quot;&lt;/code&gt; 応答ヘッダーの値を設定します。</target>
        </trans-unit>
        <trans-unit id="124bfef7545ed44d34ed68aea26689653267a541" translate="yes" xml:space="preserve">
          <source>Sets which formats have a layout when rendering</source>
          <target state="translated">レンダリング時にどのフォーマットがレイアウトを持つかを設定します。</target>
        </trans-unit>
        <trans-unit id="1a3e25289d98574f8d2ce6e7f348df35c2108378" translate="yes" xml:space="preserve">
          <source>Sets which formats have a layout when rendering.</source>
          <target state="translated">レンダリング時にレイアウトを持つフォーマットを設定します。</target>
        </trans-unit>
        <trans-unit id="292ac677682669584112c602ca4559bccf6f2e08" translate="yes" xml:space="preserve">
          <source>Setting the namespace to &lt;code&gt;MyApp.Admin&lt;/code&gt; in the second example will force the template to also be looked up at &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt;.</source>
          <target state="translated">2番目の例で名前空間を &lt;code&gt;MyApp.Admin&lt;/code&gt; に設定すると、テンプレートも強制的に &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt; で検索されます。</target>
        </trans-unit>
        <trans-unit id="fe94160acd6fbedcc5be6644df56f9ce11f302f5" translate="yes" xml:space="preserve">
          <source>Setting the prefix in the query changes the default prefix of all &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; expressions. You can override the query prefix by either setting the &lt;code&gt;@schema_prefix&lt;/code&gt; in your schema definitions or by passing the prefix option:</source>
          <target state="translated">クエリでプレフィックスを設定すると、すべての &lt;code&gt;from&lt;/code&gt; および &lt;code&gt;join&lt;/code&gt; 式のデフォルトのプレフィックスが変更されます。スキーマ定義で &lt;code&gt;@schema_prefix&lt;/code&gt; を設定するか、prefixオプションを渡すことで、クエリプレフィックスを上書きできます。</target>
        </trans-unit>
        <trans-unit id="1511667d6b259adc4e62f0970e71e5fc502c0dde" translate="yes" xml:space="preserve">
          <source>Shared options</source>
          <target state="translated">共有オプション</target>
        </trans-unit>
        <trans-unit id="d4bd5f107140360dabc5810290c12cbefe328539" translate="yes" xml:space="preserve">
          <source>Should be called by transports before connecting when appropriate. If the origin header matches the allowed origins, no origin header was sent or no origin was configured, it will return the given connection.</source>
          <target state="translated">適切な場合、接続する前にトランスポートから呼び出されるべきである。オリジンヘッダが許可されたオリジンにマッチするか、 オリジンヘッダが送信されなかったか、オリジンが設定されていなかった場合、 与えられた接続を返す。</target>
        </trans-unit>
        <trans-unit id="2ef97bd3fcfc474fd6914d207ec1a85adccfa1e4" translate="yes" xml:space="preserve">
          <source>Should be called by transports before connecting when appropriate. If the sec-websocket-protocol header matches the allowed subprotocols, it will put sec-websocket-protocol response header and return the given connection. If no sec-websocket-protocol header was sent it will return the given connection.</source>
          <target state="translated">適切な場合には、接続する前にトランスポートから呼び出されるべきです。sec-websocket-protocol ヘッダが許可されたサブプロトコルにマッチしていれば、 sec-websocket-protocol レスポンスヘッダを付けて、与えられた接続を返します。もし sec-websocket-protocol ヘッダが送信されていなければ、与えられた接続を返します。</target>
        </trans-unit>
        <trans-unit id="23c54dd01c1ae034689416b4628f1c012e01870d" translate="yes" xml:space="preserve">
          <source>Should you choose to configure your own ciphers you cannot use the &lt;code&gt;:cipher_suite&lt;/code&gt; option as setting a cipher suite overrides your cipher selections.</source>
          <target state="translated">独自の暗号を構成することを選択した場合、暗号スイートを設定すると暗号の選択が上書きされるため、 &lt;code&gt;:cipher_suite&lt;/code&gt; オプションを使用できません。</target>
        </trans-unit>
        <trans-unit id="7fddb7d8d1d60b1eeefa9af01082e0811d4b484d" translate="yes" xml:space="preserve">
          <source>Shutdown</source>
          <target state="translated">Shutdown</target>
        </trans-unit>
        <trans-unit id="8129fdbbafce686a971d68a97e93da4f5a6707c4" translate="yes" xml:space="preserve">
          <source>Shuts down the repository</source>
          <target state="translated">リポジトリをシャットダウンする</target>
        </trans-unit>
        <trans-unit id="9222d2164ca189b6d70bf3e2d13ec35ad176331f" translate="yes" xml:space="preserve">
          <source>Shuts down the repository.</source>
          <target state="translated">リポジトリをシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="e5c71aeaef6a40bb5b30896d0edde13cc4545556" translate="yes" xml:space="preserve">
          <source>Signing and encrypting cookies</source>
          <target state="translated">クッキーの署名と暗号化</target>
        </trans-unit>
        <trans-unit id="06b57e7149cc2b9d37d8a5281c9d4d4f468fc518" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">&lt;a href=&quot;#c:get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;を送出します</target>
        </trans-unit>
        <trans-unit id="c1de6be4d4a7d0026737bbb929476b58a3899d7c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;a href=&quot;#c:get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="716e7b8304762059e3756e20b26dcccee049164e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:get_by/3&quot;&gt;&lt;code&gt;get_by/3&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;a href=&quot;#c:get_by/3&quot;&gt; &lt;code&gt;get_by/3&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合に&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a9a71d0ef4f57438fb836bf75362c66c11034d6e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:one/2&quot;&gt;&lt;code&gt;one/2&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">&lt;a href=&quot;#c:one/2&quot;&gt; &lt;code&gt;one/2&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します</target>
        </trans-unit>
        <trans-unit id="42730c52cfc74f4b110f480503b0827db35ef6d8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:one/2&quot;&gt;&lt;code&gt;one/2&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;a href=&quot;#c:one/2&quot;&gt; &lt;code&gt;one/2&lt;/code&gt; に&lt;/a&gt;似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="9602d57832535417770f387c5a5d0450aa7cf242" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#c:reload/2&quot;&gt;&lt;code&gt;reload/2&lt;/code&gt;&lt;/a&gt;, but raises when something is not found.</source>
          <target state="translated">&lt;a href=&quot;#c:reload/2&quot;&gt; &lt;code&gt;reload/2&lt;/code&gt; に&lt;/a&gt;似ていますが、何かが見つからない場合に発生します。</target>
        </trans-unit>
        <trans-unit id="b6c78b9004e61663051dcd4d055a5bf8cafaeafb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#merge/2&quot;&gt;&lt;code&gt;merge/2&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return an &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;, and receives changes so far as the first argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#merge/2&quot;&gt; &lt;code&gt;merge/2&lt;/code&gt; に&lt;/a&gt;似ていますが、モジュール名、関数、および引数を渡すことができます。関数は&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;を返す必要があり、最初の引数（関数の呼び出しで渡された引数の前に追加）まで変更を受け取ります。</target>
        </trans-unit>
        <trans-unit id="6418545197a346d3b8671927d501e7da02f8b915" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#merge/2&quot;&gt;&lt;code&gt;merge/2&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return an &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt;, and receives changes so far as the first argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#merge/2&quot;&gt; &lt;code&gt;merge/2&lt;/code&gt; に&lt;/a&gt;似ていますが、モジュール名、関数、引数を渡すことができます。関数は&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;を返し、最初の引数（関数の呼び出しで渡された引数の前に追加される）までの変更を受け取ります。</target>
        </trans-unit>
        <trans-unit id="45981842f8238a3b10a636959d5a33b8843118a3" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#run/3&quot;&gt;&lt;code&gt;run/3&lt;/code&gt;&lt;/a&gt;, but allows to pass module name, function and arguments. The function should return either &lt;code&gt;{:ok, value}&lt;/code&gt; or &lt;code&gt;{:error, value}&lt;/code&gt;, and receives the repo as the first argument, and the changes so far as the second argument (prepended to those passed in the call to the function).</source>
          <target state="translated">&lt;a href=&quot;#run/3&quot;&gt; &lt;code&gt;run/3&lt;/code&gt; に&lt;/a&gt;似ていますが、モジュール名、関数、引数を渡すことができます。関数は &lt;code&gt;{:ok, value}&lt;/code&gt; または &lt;code&gt;{:error, value}&lt;/code&gt; いずれかを返し、最初の引数としてリポジトリを受け取り、2番目の引数（関数の呼び出しで渡されたものの前に追加）までの変更を受け取ります。</target>
        </trans-unit>
        <trans-unit id="87dd2f0ff960411a79daab240746f7e7a73e8806" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#validate_change/3&quot;&gt;&lt;code&gt;validate_change/3&lt;/code&gt;&lt;/a&gt; but stores the validation metadata into the changeset validators. The validator metadata is often used as a reflection mechanism, to automatically generate code based on the available validations.</source>
          <target state="translated">&lt;a href=&quot;#validate_change/3&quot;&gt; &lt;code&gt;validate_change/3&lt;/code&gt; に&lt;/a&gt;似ていますが、検証メタデータをチェンジセットバリデーターに格納します。バリデータメタデータは、利用可能な検証に基づいてコードを自動的に生成するためのリフレクションメカニズムとしてよく使用されます。</target>
        </trans-unit>
        <trans-unit id="69474a73059972b96b5e3b7fbabc31c9b8dd1aa4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;get_by/3&lt;/code&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found</source>
          <target state="translated">&lt;code&gt;get_by/3&lt;/code&gt; に似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;を送出します</target>
        </trans-unit>
        <trans-unit id="f6dff33ff4e2317639d9e9d27bfcadf16c760660" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;get_by/3&lt;/code&gt; but raises &lt;a href=&quot;ecto.noresultserror&quot;&gt;&lt;code&gt;Ecto.NoResultsError&lt;/code&gt;&lt;/a&gt; if no record was found.</source>
          <target state="translated">&lt;code&gt;get_by/3&lt;/code&gt; に似ていますが、レコードが見つからなかった場合は&lt;a href=&quot;ecto.noresultserror&quot;&gt; &lt;code&gt;Ecto.NoResultsError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="a4bfbecdbc63477571a9c0d33b98c72fbcd63302" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;put_resp_header&lt;/code&gt; this functions adds a new response header (&lt;code&gt;key&lt;/code&gt;) but rather then replacing the exising one it prepends another header with the same &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put_resp_header&lt;/code&gt; と同様に、この関数は新しい応答ヘッダー（ &lt;code&gt;key&lt;/code&gt; ）を追加しますが、既存のヘッダーを置き換えて、別のヘッダーに同じ &lt;code&gt;key&lt;/code&gt; を付加します。</target>
        </trans-unit>
        <trans-unit id="cfa80534ecc93a99a1d8974de760e1142bde5992" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;put_resp_header&lt;/code&gt; this functions adds a new response header (&lt;code&gt;key&lt;/code&gt;) but rather then replacing the existing one it prepends another header with the same &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;put_resp_header&lt;/code&gt; と同様に、この関数は新しい応答ヘッダー（ &lt;code&gt;key&lt;/code&gt; ）を追加しますが、既存のヘッダーを置き換えて、別のヘッダーに同じ &lt;code&gt;key&lt;/code&gt; を付加します。</target>
        </trans-unit>
        <trans-unit id="c937da7e4c92af6c87282cbfbca854b6a0365283" translate="yes" xml:space="preserve">
          <source>Similarly, if you are interested only on the last binding (or the last bindings) in a query, you can use &lt;code&gt;...&lt;/code&gt; to specify &quot;all bindings before&quot; and match on the last one.</source>
          <target state="translated">同様に、クエリの最後のバインディング（または最後のバインディング）のみに関心がある場合は、 &lt;code&gt;...&lt;/code&gt; を使用して「前のすべてのバインディング」を指定し、最後のバインディングと一致させることができます。</target>
        </trans-unit>
        <trans-unit id="4da369a800240a36c38a1a1b6280abdb44b5760a" translate="yes" xml:space="preserve">
          <source>Similarly, if you are interested only on the last binding (or the last bindings) in a query, you can use &lt;code&gt;...&lt;/code&gt; to specify &amp;ldquo;all bindings before&amp;rdquo; and match on the last one.</source>
          <target state="translated">同様に、クエリの最後のバインディング（または最後のバインディング）のみに関心がある場合は、 &lt;code&gt;...&lt;/code&gt; を使用して、「前のすべてのバインディング」を指定し、最後のバインディングと一致させることができます。</target>
        </trans-unit>
        <trans-unit id="315b1ca0f3b405f6a32b3e7f54525c8fad241b41" translate="yes" xml:space="preserve">
          <source>Similarly, other types, such as datetimes, are returned as strings. This means conditions like &lt;code&gt;post.meta[&quot;published_at&quot;] &amp;gt; from_now(-1, &quot;day&quot;)&lt;/code&gt; may return incorrect results or fail as the underlying database tries to compare incompatible types. You can, however, use &lt;a href=&quot;#type/2&quot;&gt;&lt;code&gt;type/2&lt;/code&gt;&lt;/a&gt; to force the types on the database level.</source>
          <target state="translated">同様に、日時などの他のタイプは文字列として返されます。つまり、 &lt;code&gt;post.meta[&quot;published_at&quot;] &amp;gt; from_now(-1, &quot;day&quot;)&lt;/code&gt; ような条件は、基盤となるデータベースが互換性のないタイプを比較しようとするため、誤った結果を返すか、失敗する可能性があります。ただし、&lt;a href=&quot;#type/2&quot;&gt; &lt;code&gt;type/2&lt;/code&gt; &lt;/a&gt;を使用して、データベースレベルでタイプを強制することができます。</target>
        </trans-unit>
        <trans-unit id="16f710f42a00a1f126107e1d5daf3f6f20d75e44" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;:binary_id&lt;/code&gt; type may be generated in the adapter for cases like UUID but it may also be handled by the database if required. In any case, both scenarios are handled transparently by Ecto.</source>
          <target state="translated">同様に、 &lt;code&gt;:binary_id&lt;/code&gt; タイプは、UUIDなどの場合にアダプターで生成される場合がありますが、必要に応じてデータベースによって処理される場合もあります。いずれの場合も、両方のシナリオはEctoによって透過的に処理されます。</target>
        </trans-unit>
        <trans-unit id="ac8a6784f582b6e7efb616680c77e30d6b1bf4b4" translate="yes" xml:space="preserve">
          <source>Similarly, we can broadcast messages from the test itself on the topic that both test and channel are subscribed to, triggering &lt;code&gt;handle_out/3&lt;/code&gt; on the channel:</source>
          <target state="translated">同様に、テストとチャネルの両方がサブスクライブされているトピックについて、テスト自体からメッセージをブロードキャストし、チャネルで &lt;code&gt;handle_out/3&lt;/code&gt; をトリガーできます。</target>
        </trans-unit>
        <trans-unit id="829e55987872ebea2c89921e68e0631668fb6fc9" translate="yes" xml:space="preserve">
          <source>Since Ecto tasks can only be executed once, if you need to create multiple repositories, set &lt;code&gt;:ecto_repos&lt;/code&gt; accordingly or pass the &lt;code&gt;-r&lt;/code&gt; flag multiple times.</source>
          <target state="translated">Ectoタスクは1回しか実行できないため、複数のリポジトリを作成する必要がある場合は、それに応じて &lt;code&gt;:ecto_repos&lt;/code&gt; を設定するか、 &lt;code&gt;-r&lt;/code&gt; フラグを複数回渡してください。</target>
        </trans-unit>
        <trans-unit id="cba3b9261a84cf0943491491af9376a0a3e36cc6" translate="yes" xml:space="preserve">
          <source>Since Ecto tasks can only be executed once, if you need to drop multiple repositories, set &lt;code&gt;:ecto_repos&lt;/code&gt; accordingly or pass the &lt;code&gt;-r&lt;/code&gt; flag multiple times.</source>
          <target state="translated">Ectoタスクは1回しか実行できないため、複数のリポジトリを削除する必要がある場合は、それに応じて &lt;code&gt;:ecto_repos&lt;/code&gt; を設定するか、 &lt;code&gt;-r&lt;/code&gt; フラグを複数回渡してください。</target>
        </trans-unit>
        <trans-unit id="7d532ae08cb5cca6185a53fae8d86b3abd5196e4" translate="yes" xml:space="preserve">
          <source>Since in this case we always require the user to pass all tags directly, using &lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt; is a great fit. It will automatically remove any tag not given and properly associate all of the given tags with the post.</source>
          <target state="translated">この場合、常にユーザーがすべてのタグを直接渡す必要があるため、&lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; &lt;/a&gt;を使用するのが最適です。指定されていないタグは自動的に削除され、指定されたすべてのタグが投稿に適切に関連付けられます。</target>
        </trans-unit>
        <trans-unit id="3dd6831992c073280cf00432e8f433224c821023" translate="yes" xml:space="preserve">
          <source>Since many views render significant content, for example a whole HTML file, it is common to put these files into a particular directory, typically &quot;APP_web/templates&quot;.</source>
          <target state="translated">多くのビューは重要なコンテンツ、例えば HTML ファイル全体をレンダリングするので、これらのファイルを特定のディレクトリ、通常は &quot;APP_web/templates&quot; に置くのが一般的です。</target>
        </trans-unit>
        <trans-unit id="eefc84b03d574da756bb5bd39f349a4317dd4518" translate="yes" xml:space="preserve">
          <source>Since rewriting the scheme based on &lt;code&gt;x-forwarded-proto&lt;/code&gt; can open up security vulnerabilities, only provide the option above if:</source>
          <target state="translated">&lt;code&gt;x-forwarded-proto&lt;/code&gt; に基づいてスキームを書き換えると、セキュリティの脆弱性が発生する可能性があるため、上記のオプションは次の場合にのみ提供してください。</target>
        </trans-unit>
        <trans-unit id="28df1368db59ac470c073051cf5513f7f6fe19af" translate="yes" xml:space="preserve">
          <source>Since the socket supervision tree is started by the endpoint, any custom transport must be started after the endpoint in a supervision tree.</source>
          <target state="translated">ソケットの監視ツリーはエンドポイントによって開始されるので、カスタムトランスポートは監視ツリーのエンドポイントの後に開始されなければなりません。</target>
        </trans-unit>
        <trans-unit id="9959ad819fdc6ce082fcbfcacbea425e36ef2224" translate="yes" xml:space="preserve">
          <source>Since this store uses crypto features, it requires you to set the &lt;code&gt;:secret_key_base&lt;/code&gt; field in your connection. This can be easily achieved with a plug:</source>
          <target state="translated">このストアは暗号化機能を使用するため、接続で &lt;code&gt;:secret_key_base&lt;/code&gt; フィールドを設定する必要があります。これはプラグで簡単に実現できます：</target>
        </trans-unit>
        <trans-unit id="8912a71b3fe9cbd76561667ba2df8c846422505a" translate="yes" xml:space="preserve">
          <source>Singleton resources</source>
          <target state="translated">シングルトンリソース</target>
        </trans-unit>
        <trans-unit id="6902fa751afee1587733342b99b1168338cc5b66" translate="yes" xml:space="preserve">
          <source>So by default, &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; will read 1_000_000 bytes at a time from the socket with an overall limit of 8_000_000 bytes.</source>
          <target state="translated">したがって、デフォルトでは、&lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt;は一度に1_000_000バイトをソケットから読み取り、全体の制限は8_000_000バイトです。</target>
        </trans-unit>
        <trans-unit id="0791af6a9061b0bd9104c3318c0999563ce5a7b3" translate="yes" xml:space="preserve">
          <source>So in order to avoid new lines provided by the user from being ignored when the form is resubmitted, we automatically add a new line before the text area value.</source>
          <target state="translated">そこで、ユーザーから提供された改行がフォームの再提出時に無視されるのを避けるために、テキストエリアの値の前に自動的に改行を追加しています。</target>
        </trans-unit>
        <trans-unit id="30e4e0636ef80614c6a204a9f77fd4fa5e406c3a" translate="yes" xml:space="preserve">
          <source>So the custom type does need to handle the conversion from external data to runtime data (&lt;a href=&quot;#c:cast/1&quot;&gt;&lt;code&gt;cast/1&lt;/code&gt;&lt;/a&gt;) as well as transforming that runtime data into the &lt;code&gt;:map&lt;/code&gt; Ecto native type and back (&lt;a href=&quot;#c:dump/1&quot;&gt;&lt;code&gt;dump/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c:load/1&quot;&gt;&lt;code&gt;load/1&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">そのため、カスタムタイプは、外部データからランタイムデータ（&lt;a href=&quot;#c:cast/1&quot;&gt; &lt;code&gt;cast/1&lt;/code&gt; &lt;/a&gt;）への変換を処理する必要があり、そのランタイムデータを &lt;code&gt;:map&lt;/code&gt; Ectoネイティブタイプに変換して元に戻す（&lt;a href=&quot;#c:dump/1&quot;&gt; &lt;code&gt;dump/1&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#c:load/1&quot;&gt; &lt;code&gt;load/1&lt;/code&gt; &lt;/a&gt;）必要があります。</target>
        </trans-unit>
        <trans-unit id="0f6d61673c056f0d9b6ae9f15c5366544e2df8ce" translate="yes" xml:space="preserve">
          <source>Socket Behaviour</source>
          <target state="translated">ソケットの動作</target>
        </trans-unit>
        <trans-unit id="ce8db0a6f5c8a561689e5b447b552eb7713259e8" translate="yes" xml:space="preserve">
          <source>Socket Fields</source>
          <target state="translated">ソケットフィールド</target>
        </trans-unit>
        <trans-unit id="71e32d448a3d576193b708bcfd66b979cebaa038" translate="yes" xml:space="preserve">
          <source>Socket IDs are topics that allow you to identify all sockets for a given user:</source>
          <target state="translated">ソケット ID は、特定のユーザーのすべてのソケットを識別できるようにするトピックです。</target>
        </trans-unit>
        <trans-unit id="c3497bc7ef561824cf3d270e2a939d9fd8de8f0c" translate="yes" xml:space="preserve">
          <source>Socket connections</source>
          <target state="translated">ソケット接続</target>
        </trans-unit>
        <trans-unit id="fcd871ca1e2946874651dc3c49f23c0f8ab2d9ce" translate="yes" xml:space="preserve">
          <source>Socket fields</source>
          <target state="translated">ソケットフィールド</target>
        </trans-unit>
        <trans-unit id="2c066e895961b889ac1d641af69e732ed7a3dfb8" translate="yes" xml:space="preserve">
          <source>Socket handlers are mounted in Endpoints and must define two callbacks:</source>
          <target state="translated">ソケットハンドラはEndpointsにマウントされ、2つのコールバックを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="26c7d7e3cabe08ea953e3c1dee57cd02065df6e1" translate="yes" xml:space="preserve">
          <source>Socket params and assigns</source>
          <target state="translated">ソケットのパラメータと割り当て</target>
        </trans-unit>
        <trans-unit id="d3298d773701ba60ff3b0ed43b4a56d5ce41b6c4" translate="yes" xml:space="preserve">
          <source>Socket params are passed from the client and can be used to verify and authenticate a user. After verification, you can put default assigns into the socket that will be set for all channels, ie</source>
          <target state="translated">ソケットパラメータはクライアントから渡され、ユーザの検証と認証に使用できます。検証後、すべてのチャンネルに設定されるソケットにデフォルトの割り当てを設定することができます。</target>
        </trans-unit>
        <trans-unit id="c4451e4b0bc65dbc1e28eb76c83f0fed8fe83ed4" translate="yes" xml:space="preserve">
          <source>Socket transport for long poll clients.</source>
          <target state="translated">長いポーリングクライアントのためのソケットトランスポート。</target>
        </trans-unit>
        <trans-unit id="dfffadfddf7c3296669cff7822b6c0bbfa4c059d" translate="yes" xml:space="preserve">
          <source>Socket transport for websocket clients.</source>
          <target state="translated">Websocket クライアントのためのソケットトランスポート。</target>
        </trans-unit>
        <trans-unit id="659ec7a0e44b1e98288c982fc69284240ea4c909" translate="yes" xml:space="preserve">
          <source>Sockets are operated by a transport. When a transport is defined, it usually receives a socket module and the module will be invoked when certain events happen at the transport level.</source>
          <target state="translated">ソケットはトランスポートによって操作されます。トランスポートが定義されている場合、トランスポートは通常ソケットモジュールを受け取り、トランスポートレベルで特定のイベントが発生したときにモジュールが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="43df9a6501aafdc4a5241768cdf8869bfadda28e" translate="yes" xml:space="preserve">
          <source>Some abstractions would force you to define some sort of polymorphic association with two fields in your database:</source>
          <target state="translated">いくつかの抽象化は、データベース内の2つのフィールドとのある種の多相関連を定義することを強制します。</target>
        </trans-unit>
        <trans-unit id="365899add53094029b4e1b37974677c0d55477dc" translate="yes" xml:space="preserve">
          <source>Some databases support deferred constraints, i.e., constraints which are checked at the end of the transaction rather than at the end of each statement.</source>
          <target state="translated">いくつかのデータベースは、繰延制約、すなわち、各ステートメントの最後ではなく、トランザクションの最後にチェックされる制約をサポートしています。</target>
        </trans-unit>
        <trans-unit id="ca11a570261843c9e308cec1aa0b8a90d4b7a089" translate="yes" xml:space="preserve">
          <source>Some other examples:</source>
          <target state="translated">他にもいくつかの例があります。</target>
        </trans-unit>
        <trans-unit id="3ca6500c14086df6d1af4feac56d17e052d08ced" translate="yes" xml:space="preserve">
          <source>Sometimes we may want to generate a &lt;a href=&quot;#text_input/3&quot;&gt;&lt;code&gt;text_input/3&lt;/code&gt;&lt;/a&gt; or any other tag outside of a form. The functions in this module also support such usage by simply passing an atom as first argument instead of the form.</source>
          <target state="translated">場合によっては、&lt;a href=&quot;#text_input/3&quot;&gt; &lt;code&gt;text_input/3&lt;/code&gt; &lt;/a&gt;またはフォームの外にある他のタグを生成したいことがあります。このモジュールの関数は、フォームの代わりにアトムを最初の引数として渡すだけで、このような使用法もサポートしています。</target>
        </trans-unit>
        <trans-unit id="78254dfb54f129d1d3abccd68e001b90de9bad56" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to programmatically subscribe a socket to external topics in addition to the internal &lt;code&gt;socket.topic&lt;/code&gt;. For example, imagine you have a bidding system where a remote client dynamically sets preferences on products they want to receive bidding notifications on. Instead of requiring a unique channel process and topic per preference, a more efficient and simple approach would be to subscribe a single channel to relevant notifications via your endpoint. For example:</source>
          <target state="translated">内部 &lt;code&gt;socket.topic&lt;/code&gt; に加えて、プログラムでソケットを外部トピックにサブスクライブする必要がある場合があります。たとえば、リモートクライアントが入札通知を受信する製品の設定を動的に設定する入札システムがあるとします。設定ごとに固有のチャネルプロセスとトピックを要求する代わりに、より効率的で単純なアプローチは、エンドポイントを介して関連する通知に単一のチャネルをサブスクライブすることです。例えば：</target>
        </trans-unit>
        <trans-unit id="f12506ae9375b0c2f497ee7bafe9b9fbba8626a5" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to programmatically subscribe a socket to external topics in addition to the the internal &lt;code&gt;socket.topic&lt;/code&gt;. For example, imagine you have a bidding system where a remote client dynamically sets preferences on products they want to receive bidding notifications on. Instead of requiring a unique channel process and topic per preference, a more efficient and simple approach would be to subscribe a single channel to relevant notifications via your endpoint. For example:</source>
          <target state="translated">内部の &lt;code&gt;socket.topic&lt;/code&gt; に加えて、プログラムでソケットを外部のトピックにサブスクライブする必要がある場合があります。たとえば、リモートクライアントが入札通知を受信する製品の設定を動的に設定する入札システムがあるとします。設定ごとに固有のチャネルプロセスとトピックを要求する代わりに、エンドポイントを介して関連する通知に単一のチャネルをサブスクライブすることで、より効率的でシンプルなアプローチが得られます。例えば：</target>
        </trans-unit>
        <trans-unit id="5c39a1a34f3190a4e116f58e40087a04eff55fbd" translate="yes" xml:space="preserve">
          <source>Sometimes you may want a single Ecto repository to talk to many different database instances. By default, when you call &lt;code&gt;MyApp.Repo.start_link/1&lt;/code&gt;, it will start a repository with name &lt;code&gt;MyApp.Repo&lt;/code&gt;. But if you want to start multiple repositories, you can give each of them a different name:</source>
          <target state="translated">1つのEctoリポジトリで多くの異なるデータベースインスタンスと通信したい場合があります。お電話の際は、デフォルトで、 &lt;code&gt;MyApp.Repo.start_link/1&lt;/code&gt; を、それが名前のリポジトリを開始します &lt;code&gt;MyApp.Repo&lt;/code&gt; を。ただし、複数のリポジトリを開始する場合は、それぞれに異なる名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="eb98739576cc374632c2a09c6868c93331dba1aa" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to customize how a parser reads the body from the connection. For example, you may want to cache the body to perform verification later, such as HTTP Signature Verification. This can be achieved with a custom body reader that would read the body and store it in the connection, such as:</source>
          <target state="translated">パーサが接続からボディを読み取る方法をカスタマイズしたい場合があります。例えば、HTTP Signature Verification のように、後で検証を行うためにボディをキャッシュしておきたい場合があります。これは、ボディを読み込んで接続に保存するカスタムボディリーダーを使用することで実現できます。</target>
        </trans-unit>
        <trans-unit id="bee18a6f85fe70265dd2112210c0f92b124fa91e" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to customize how a route behaves during dispatch. This can be done by accessing the &lt;code&gt;opts&lt;/code&gt; variable inside the route:</source>
          <target state="translated">ディスパッチ中のルートの動作をカスタマイズしたい場合があります。これは、ルート内の &lt;code&gt;opts&lt;/code&gt; 変数にアクセスすることで実行できます。</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="b58df17aaf2c2fd278d4f2fead7fc6caf5b5a7b6" translate="yes" xml:space="preserve">
          <source>Special Considerations</source>
          <target state="translated">特別な配慮</target>
        </trans-unit>
        <trans-unit id="aa67403b7f992c15b19fceea8ba389d87283c89d" translate="yes" xml:space="preserve">
          <source>Specification for session stores.</source>
          <target state="translated">セッションストアの仕様。</target>
        </trans-unit>
        <trans-unit id="93962ecd7513a0e8dedab96e5494d4e71a85820a" translate="yes" xml:space="preserve">
          <source>Specification of the connection adapter API implemented by webservers</source>
          <target state="translated">ウェブサーバが実装する接続アダプタAPIの仕様</target>
        </trans-unit>
        <trans-unit id="8c21a5512c1d500b4e3bffdba45c1ac3cbd76fc9" translate="yes" xml:space="preserve">
          <source>Specification of the connection adapter API implemented by webservers.</source>
          <target state="translated">ウェブサーバが実装する接続アダプタAPIの仕様。</target>
        </trans-unit>
        <trans-unit id="06b1405ff71558191ac1ba8cbd0d31a2429ee631" translate="yes" xml:space="preserve">
          <source>Specifies the API for adding custom template engines into Phoenix.</source>
          <target state="translated">カスタムテンプレートエンジンをPhoenixに追加するためのAPIを指定します。</target>
        </trans-unit>
        <trans-unit id="ae4da6d464094a11a257778d0bd2d7402189cc86" translate="yes" xml:space="preserve">
          <source>Specifies the adapter storage API.</source>
          <target state="translated">アダプタ・ストレージ API を指定します。</target>
        </trans-unit>
        <trans-unit id="23d851285a99e6b319346c3a2a806860a7a756b3" translate="yes" xml:space="preserve">
          <source>Specifies the adapter transactions API.</source>
          <target state="translated">アダプタ・トランザクション API を指定します。</target>
        </trans-unit>
        <trans-unit id="574a225935448a3b5783969d2155a7104be5b213" translate="yes" xml:space="preserve">
          <source>Specifies the minimal API required from adapters.</source>
          <target state="translated">アダプタから必要最低限のAPIを指定します。</target>
        </trans-unit>
        <trans-unit id="323dcc74c0661608c4ff58df91ef59dcdbb6402c" translate="yes" xml:space="preserve">
          <source>Specifies the query API required from adapters.</source>
          <target state="translated">アダプタから必要なクエリAPIを指定します。</target>
        </trans-unit>
        <trans-unit id="a42ccb23437e0306fbc55a97042f6087bc6900c8" translate="yes" xml:space="preserve">
          <source>Specifies the schema API required from adapters.</source>
          <target state="translated">アダプタから必要なスキーマ API を指定します。</target>
        </trans-unit>
        <trans-unit id="acf7976eaa2a183ab2459a4d7b272d56d0678d47" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;read_after_writes: true&lt;/code&gt; in your schema for choosing fields that are read from the database after every operation. Or pass &lt;code&gt;returning: true&lt;/code&gt; to &lt;code&gt;insert&lt;/code&gt; to read all fields back:</source>
          <target state="translated">すべての操作後にデータベースから読み取られるフィールドを選択するために、スキーマで &lt;code&gt;read_after_writes: true&lt;/code&gt; を指定します。または、 &lt;code&gt;returning: true&lt;/code&gt; を渡して、すべてのフィールドを読み込むために &lt;code&gt;insert&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="7b4379a60050b3f8c0955159ba45aa1d56de9268" translate="yes" xml:space="preserve">
          <source>Specs</source>
          <target state="translated">Specs</target>
        </trans-unit>
        <trans-unit id="425abcb3fa216c718977c7117020fb893407d770" translate="yes" xml:space="preserve">
          <source>Start by defining a presence module within your application which uses &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Presence&lt;/code&gt;&lt;/a&gt; and provide the &lt;code&gt;:otp_app&lt;/code&gt; which holds your configuration, as well as the &lt;code&gt;:pubsub_server&lt;/code&gt;.</source>
          <target state="translated">使用するアプリケーション内のプレゼンスモジュールを定義することから始め&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Presence&lt;/code&gt; を&lt;/a&gt;し、提供 &lt;code&gt;:otp_app&lt;/code&gt; あなたの設定を保持しているだけでなく、 &lt;code&gt;:pubsub_server&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="9aeb6c896025284c2220fec468d5df1f53bee18c" translate="yes" xml:space="preserve">
          <source>Start by defining a presence module within your application which uses &lt;a href=&quot;phoenix.presence#content&quot;&gt;&lt;code&gt;Phoenix.Presence&lt;/code&gt;&lt;/a&gt; and provide the &lt;code&gt;:otp_app&lt;/code&gt; which holds your configuration, as well as the &lt;code&gt;:pubsub_server&lt;/code&gt;.</source>
          <target state="translated">使用するアプリケーション内のプレゼンスモジュールを定義することから始め&lt;a href=&quot;phoenix.presence#content&quot;&gt; &lt;code&gt;Phoenix.Presence&lt;/code&gt; を&lt;/a&gt;し、提供 &lt;code&gt;:otp_app&lt;/code&gt; あなたの設定を保持しているだけでなく、 &lt;code&gt;:pubsub_server&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="a0e558f1d578a0b0bbe5b2674d9f1be49c54327d" translate="yes" xml:space="preserve">
          <source>Starts a task to assign a value to a key in the connection</source>
          <target state="translated">接続のキーに値を割り当てるタスクを開始します。</target>
        </trans-unit>
        <trans-unit id="5b7daad4b6fff18a4b4bc540bde997e7392379ff" translate="yes" xml:space="preserve">
          <source>Starts a task to assign a value to a key in the connection.</source>
          <target state="translated">接続内のキーに値を割り当てるタスクを開始します。</target>
        </trans-unit>
        <trans-unit id="04f1da3ebc9ca839c95f8f179871511231ce4fd1" translate="yes" xml:space="preserve">
          <source>Starts any connection pooling or supervision and return &lt;code&gt;{:ok, pid}&lt;/code&gt; or just &lt;code&gt;:ok&lt;/code&gt; if nothing needs to be done</source>
          <target state="translated">接続プールまたは監視を開始し、 &lt;code&gt;{:ok, pid}&lt;/code&gt; または何もする必要がない場合は単に &lt;code&gt;:ok&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="f79a24140d5b97d1763dd99ca8ad2521906cc980" translate="yes" xml:space="preserve">
          <source>Starts any connection pooling or supervision and return &lt;code&gt;{:ok, pid}&lt;/code&gt; or just &lt;code&gt;:ok&lt;/code&gt; if nothing needs to be done.</source>
          <target state="translated">接続プールまたは監視を開始し、 &lt;code&gt;{:ok, pid}&lt;/code&gt; または何もする必要がない場合は単に &lt;code&gt;:ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dbcf0ce19d7f72817408d1b66fce3e46bfbcca2f" translate="yes" xml:space="preserve">
          <source>Starts endpoint&amp;rsquo;s configuration cache and possibly the servers for handling requests.</source>
          <target state="translated">要求を処理するために、エンドポイントの構成キャッシュと、場合によってはサーバーを開始します。</target>
        </trans-unit>
        <trans-unit id="e3a54eb716a9c3cdfe4b9a7ad4cee9354a40712d" translate="yes" xml:space="preserve">
          <source>Starts endpoint's configuration cache and possibly the servers for handling requests.</source>
          <target state="translated">エンドポイントの設定キャッシュと、リクエストを処理するためのサーバを起動します。</target>
        </trans-unit>
        <trans-unit id="ae77342fe2af2cc246a241cebd3e89697a20ce7d" translate="yes" xml:space="preserve">
          <source>Starts the Endpoint supervision tree</source>
          <target state="translated">エンドポイント監視ツリーを起動します。</target>
        </trans-unit>
        <trans-unit id="03f88e6163759407a0545e07892ca337d17fb9a4" translate="yes" xml:space="preserve">
          <source>Starts the Endpoint supervision tree.</source>
          <target state="translated">エンドポイント監視ツリーを起動します。</target>
        </trans-unit>
        <trans-unit id="05c0daa7470b7dd485d073925efda89a62e524df" translate="yes" xml:space="preserve">
          <source>Starts the application by configuring all endpoints servers to run.</source>
          <target state="translated">すべてのエンドポイントサーバを実行するように設定することで、アプリケーションを起動します。</target>
        </trans-unit>
        <trans-unit id="13005fdc1263d7b288dd9b04fe58b326107c112c" translate="yes" xml:space="preserve">
          <source>Starts the endpoint supervision tree.</source>
          <target state="translated">エンドポイント監視ツリーを起動します。</target>
        </trans-unit>
        <trans-unit id="fe39de33b591bfb6bcb3deb612aa31421a0a6d36" translate="yes" xml:space="preserve">
          <source>Starts the server</source>
          <target state="translated">サーバを起動します。</target>
        </trans-unit>
        <trans-unit id="bb0ca4e227518b7b5cc054b544be753f6cb2b6a2" translate="yes" xml:space="preserve">
          <source>Starts the server.</source>
          <target state="translated">サーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="d34d7622ebcade9f9b5155dfd196d5e29fe82811" translate="yes" xml:space="preserve">
          <source>Starts the upload handling server</source>
          <target state="translated">アップロード処理サーバを起動します。</target>
        </trans-unit>
        <trans-unit id="59489acfbc0005766722394416981887c2b45cf6" translate="yes" xml:space="preserve">
          <source>Starts the upload handling server.</source>
          <target state="translated">アップロード処理サーバを起動します。</target>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="f9ef14ce4d16dc528341a2c579120765c5772ff7" translate="yes" xml:space="preserve">
          <source>Stop tracking a channel's process.</source>
          <target state="translated">チャンネルのプロセスを追跡するのを止めます。</target>
        </trans-unit>
        <trans-unit id="4a58f463b521a331812c7340cc2eaa6fb7aec040" translate="yes" xml:space="preserve">
          <source>Stop tracking a process.</source>
          <target state="translated">プロセスを追跡するのを止めてください。</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="cb95290f3e237b98634fde98df7f64003f647f47" translate="yes" xml:space="preserve">
          <source>Stores metadata of a struct.</source>
          <target state="translated">構造体のメタデータを格納します。</target>
        </trans-unit>
        <trans-unit id="13696602150188b92bcbb9de1c78c62048beb623" translate="yes" xml:space="preserve">
          <source>Stores subquery information.</source>
          <target state="translated">サブクエリの情報を格納します。</target>
        </trans-unit>
        <trans-unit id="e21ecec1414d0590ee874d09ffbfacfe188ffd3b" translate="yes" xml:space="preserve">
          <source>Stores the given status code in the connection</source>
          <target state="translated">指定したステータスコードを接続に格納します</target>
        </trans-unit>
        <trans-unit id="c1f39eb0958f7137f6ff09d4f5e228918ad2517e" translate="yes" xml:space="preserve">
          <source>Stores the given status code in the connection.</source>
          <target state="translated">指定したステータスコードを接続に格納します。</target>
        </trans-unit>
        <trans-unit id="38f6cce826fac3c33ab9244e079a3a806aad671a" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering</source>
          <target state="translated">レンダリング用のレイアウトを格納します。</target>
        </trans-unit>
        <trans-unit id="44a511d7881bc48902e485e8cef69c3184112cca" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering if one was not stored yet</source>
          <target state="translated">レンダリング用のレイアウトがまだ保存されていない場合に保存します。</target>
        </trans-unit>
        <trans-unit id="d4447aa8196bd52c99b44a3f461e9a0c6a8e4f24" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering if one was not stored yet.</source>
          <target state="translated">レンダリング用のレイアウトがまだ保存されていない場合は、そのレイアウトを保存します。</target>
        </trans-unit>
        <trans-unit id="fe1f14bafc132a296718c9bf7c3aa8d7ee1a4892" translate="yes" xml:space="preserve">
          <source>Stores the layout for rendering.</source>
          <target state="translated">レンダリング用のレイアウトを格納します。</target>
        </trans-unit>
        <trans-unit id="a58b520dcd2f8f3484f39ecd049969a062130a5d" translate="yes" xml:space="preserve">
          <source>Stores the root layout for rendering.</source>
          <target state="translated">レンダリング用のルートレイアウトを格納します。</target>
        </trans-unit>
        <trans-unit id="d2499f2f97aaac5c6a4106688dd5926525b5161f" translate="yes" xml:space="preserve">
          <source>Stores the session associated with given session id</source>
          <target state="translated">指定されたセッションIDに関連付けられたセッションを格納します。</target>
        </trans-unit>
        <trans-unit id="b5f30bb51a27d5e5c9883d8a8bfea71b75448550" translate="yes" xml:space="preserve">
          <source>Stores the session associated with given session id.</source>
          <target state="translated">指定されたセッションIDに関連付けられたセッションを格納します。</target>
        </trans-unit>
        <trans-unit id="8d7514a1fd361b438f0dc122dc301f9e889c8d5d" translate="yes" xml:space="preserve">
          <source>Stores the session in a cookie.</source>
          <target state="translated">セッションをクッキーに保存します。</target>
        </trans-unit>
        <trans-unit id="03d905412bbe2c82c304b3383bfdfba9329c96c3" translate="yes" xml:space="preserve">
          <source>Stores the session in an in-memory ETS table.</source>
          <target state="translated">セッションをインメモリのETSテーブルに格納します。</target>
        </trans-unit>
        <trans-unit id="8f72ad9daeeff4d9baca2bd6929f5a7531645f3b" translate="yes" xml:space="preserve">
          <source>Stores the validation &lt;code&gt;metadata&lt;/code&gt; and validates the given &lt;code&gt;field&lt;/code&gt; change</source>
          <target state="translated">検証 &lt;code&gt;metadata&lt;/code&gt; を保存し、指定された &lt;code&gt;field&lt;/code&gt; 変更を検証します</target>
        </trans-unit>
        <trans-unit id="968dd6eda848310ed9d09eb97512cb82b641d047" translate="yes" xml:space="preserve">
          <source>Stores the validation &lt;code&gt;metadata&lt;/code&gt; and validates the given &lt;code&gt;field&lt;/code&gt; change.</source>
          <target state="translated">検証 &lt;code&gt;metadata&lt;/code&gt; を格納し、指定された &lt;code&gt;field&lt;/code&gt; 変更を検証します。</target>
        </trans-unit>
        <trans-unit id="52d2b56e1a53d98739305b2938ad7d1bce7e6d45" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering</source>
          <target state="translated">レンダリング用のビューを保存します。</target>
        </trans-unit>
        <trans-unit id="08b34341b166965c032c307af7cd997af4e4274f" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering if one was not stored yet</source>
          <target state="translated">レンダリング用のビューがまだ保存されていない場合に保存します。</target>
        </trans-unit>
        <trans-unit id="a0f8dab1413ae13607334c46326f1ae3400b89ca" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering if one was not stored yet.</source>
          <target state="translated">レンダリング用のビューがまだ保存されていない場合に保存します。</target>
        </trans-unit>
        <trans-unit id="14870e3b5dd83d56e16e75cb2089322baeeb8568" translate="yes" xml:space="preserve">
          <source>Stores the view for rendering.</source>
          <target state="translated">レンダリング用のビューを格納します。</target>
        </trans-unit>
        <trans-unit id="c3f496380c040f77fae6d0272d93930122999072" translate="yes" xml:space="preserve">
          <source>Streams a previously prepared query</source>
          <target state="translated">事前に準備されたクエリをストリームする</target>
        </trans-unit>
        <trans-unit id="3501f11bb258ecc0cbfd49dd264bd6b9c0a2fbd3" translate="yes" xml:space="preserve">
          <source>Streams a previously prepared query.</source>
          <target state="translated">事前に準備されたクエリをストリームします。</target>
        </trans-unit>
        <trans-unit id="01b0b95c5902c4eba4fd8ac0fa3bcdfa9327e36b" translate="yes" xml:space="preserve">
          <source>Strings: &lt;code&gt;&quot;foo bar&quot;&lt;/code&gt;, &lt;code&gt;~s(this is a string)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;~s(this is a string)&lt;/code&gt; ： &lt;code&gt;&quot;foo bar&quot;&lt;/code&gt; 、〜s （これは文字列です）</target>
        </trans-unit>
        <trans-unit id="4d224d61643a39a4962579d1f48e5eeed4e12b15" translate="yes" xml:space="preserve">
          <source>Struct returned by associations when they are not loaded.</source>
          <target state="translated">アソシエーションがロードされていない場合に、アソシエーションによって返される構造体。</target>
        </trans-unit>
        <trans-unit id="25f57ecf7083fcb5184876a5d2f3f856041dba67" translate="yes" xml:space="preserve">
          <source>Struct used for logging entries.</source>
          <target state="translated">ロギングエントリに使用される構造体。</target>
        </trans-unit>
        <trans-unit id="f3d62142352d12e869d2bfc88d72b68c4bcade9c" translate="yes" xml:space="preserve">
          <source>Subqueries are currently only supported in the &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; fields.</source>
          <target state="translated">現在、サブクエリは &lt;code&gt;from&lt;/code&gt; および &lt;code&gt;join&lt;/code&gt; フィールドでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="63844850c088c1e41377067736b623f102b7fb1e" translate="yes" xml:space="preserve">
          <source>Subquery can also be used in a &lt;code&gt;join&lt;/code&gt; expression.</source>
          <target state="translated">サブクエリは、 &lt;code&gt;join&lt;/code&gt; 式でも使用できます。</target>
        </trans-unit>
        <trans-unit id="a16a28f51515abb3ed23ddfbd71c229b425f64e4" translate="yes" xml:space="preserve">
          <source>Subquery operators: &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt; and &lt;code&gt;exists&lt;/code&gt;</source>
          <target state="translated">サブクエリ演算子： &lt;code&gt;any&lt;/code&gt; 、 &lt;code&gt;all&lt;/code&gt; 、および &lt;code&gt;exists&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f736150f2e074a22ead83dcf3dd8dc239fcdf5a" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter&amp;rsquo;s topic</source>
          <target state="translated">呼び出し元をPubSubアダプターのトピックにサブスクライブします</target>
        </trans-unit>
        <trans-unit id="50fd989211bc229d515632d14f3ae08584891447" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter&amp;rsquo;s topic.</source>
          <target state="translated">呼び出し元をPubSubアダプターのトピックにサブスクライブします。</target>
        </trans-unit>
        <trans-unit id="8180ff8882fe43143269f06ada06be7291b3a91d" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the PubSub adapter's topic.</source>
          <target state="translated">PubSub アダプタのトピックの呼び出し元を購読します。</target>
        </trans-unit>
        <trans-unit id="0f7820628e3c2c90b1707fb8c99222b97a355f14" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the given topic</source>
          <target state="translated">呼び出し元を指定されたトピックにサブスクライブします。</target>
        </trans-unit>
        <trans-unit id="ca915041edbd919564fcfda571e153ced9e140ff" translate="yes" xml:space="preserve">
          <source>Subscribes the caller to the given topic.</source>
          <target state="translated">発信者を指定されたトピックにサブスクライブします。</target>
        </trans-unit>
        <trans-unit id="d5a4ec85d0d7c78af495961dd1c6901510edd509" translate="yes" xml:space="preserve">
          <source>Subscribes the pid to the topic</source>
          <target state="translated">トピックにpidをサブスクライブする</target>
        </trans-unit>
        <trans-unit id="c9d68c17cbbbd09344558cb7a8a42d8bcb73dc0a" translate="yes" xml:space="preserve">
          <source>Subscribes the pid to the topic.</source>
          <target state="translated">トピックにpidを購読します。</target>
        </trans-unit>
        <trans-unit id="81fb714bc39d524ea01b4a9e05095ad6d574bf09" translate="yes" xml:space="preserve">
          <source>Subscribes to the given topic and joins the channel under the given topic and payload</source>
          <target state="translated">指定されたトピックに加入し、指定されたトピックとペイロードの下でチャンネルに参加します。</target>
        </trans-unit>
        <trans-unit id="ea4e3ab0ff72e4151f4050d7eb16dd17b07a2093" translate="yes" xml:space="preserve">
          <source>Subscribes to the given topic and joins the channel under the given topic and payload.</source>
          <target state="translated">指定されたトピックに加入し、指定されたトピックとペイロードの下でチャンネルに参加します。</target>
        </trans-unit>
        <trans-unit id="aae12d55adc496ed2380985ca3dfdd4bfb6a021e" translate="yes" xml:space="preserve">
          <source>Subscribing to external topics</source>
          <target state="translated">外部トピックの購読</target>
        </trans-unit>
        <trans-unit id="56c74c3880af80af2ab03c8135c1200b420fc782" translate="yes" xml:space="preserve">
          <source>Subtracts the given interval from the current time in UTC</source>
          <target state="translated">現在の時刻から指定された間隔をUTC単位で減算します。</target>
        </trans-unit>
        <trans-unit id="451a00abcc42f5e6f995d27c0b6a7af19b580234" translate="yes" xml:space="preserve">
          <source>Subtracts the given interval from the current time in UTC.</source>
          <target state="translated">現在の時刻から指定された間隔をUTCで減算します。</target>
        </trans-unit>
        <trans-unit id="1ac3ce0208da6a86296e45e27cd74061800554e3" translate="yes" xml:space="preserve">
          <source>Such allows developers to write queries using bindings only in more complex query expressions.</source>
          <target state="translated">これにより、開発者はより複雑なクエリ式の中でのみバインディングを使用してクエリを書くことができます。</target>
        </trans-unit>
        <trans-unit id="d6e2150503cfdddffd579e84eb195842a0ed309f" translate="yes" xml:space="preserve">
          <source>Such cases will be explicitly documented as well as any extra option.</source>
          <target state="translated">そのような場合は、追加オプションと同様に明示的に文書化されます。</target>
        </trans-unit>
        <trans-unit id="50124ed41dfb05f2530c51e775a800383a6b00d5" translate="yes" xml:space="preserve">
          <source>Such function receives the changeset and must return a changeset, allowing developers to do final adjustments to the changeset or to issue data consistency commands.</source>
          <target state="translated">このような関数は、チェンジセットを受け取り、チェンジセットを返さなければならないので、開発者はチェンジセットの最終調整を行ったり、データ整合性コマンドを発行したりすることができます。</target>
        </trans-unit>
        <trans-unit id="23c18ef6e8fd8883f3f4e7f89080b810f7cfc463" translate="yes" xml:space="preserve">
          <source>Such functionality makes Ecto extremely useful to cast, validate and prune data even if it is not meant to be persisted to the database.</source>
          <target state="translated">このような機能により、Ectoはデータをデータベースに永続化することが意図されていなくても、データのキャスト、検証、剪定を行うのに非常に便利になります。</target>
        </trans-unit>
        <trans-unit id="6b9e8b1f0c2164b70c31da5ac6e2eec9b106f2b0" translate="yes" xml:space="preserve">
          <source>Such transformations are defined via plugs, as defined in the &lt;a href=&quot;http://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt; specification. Once a pipeline is defined, it can be piped through per scope.</source>
          <target state="translated">このような変換は、&lt;a href=&quot;http://github.com/elixir-lang/plug&quot;&gt;プラグの&lt;/a&gt;仕様で定義されているように、プラグを介して定義されます。パイプラインを定義すると、スコープごとにパイプライン処理できます。</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="7154b2f71294d8b9887ef951f46556c9be3650d1" translate="yes" xml:space="preserve">
          <source>Supported attributes for configuring the defined schema. They must be set after the &lt;code&gt;use Ecto.Schema&lt;/code&gt; call and before the &lt;a href=&quot;#schema/2&quot;&gt;&lt;code&gt;schema/2&lt;/code&gt;&lt;/a&gt; definition.</source>
          <target state="translated">定義されたスキーマを構成するためにサポートされる属性。これらは、 &lt;code&gt;use Ecto.Schema&lt;/code&gt; 呼び出しの後、&lt;a href=&quot;#schema/2&quot;&gt; &lt;code&gt;schema/2&lt;/code&gt; &lt;/a&gt;定義の前に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f341132e53d4cf0ae3e38d6cb0bb2af57a08b5a5" translate="yes" xml:space="preserve">
          <source>Supported attributes, to be set beforehand, for configuring the defined schema.</source>
          <target state="translated">定義されたスキーマを設定するために、あらかじめ設定しておく属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="c5ff84c7e3ceaccb9c98b2f6598a1f8252b42048" translate="yes" xml:space="preserve">
          <source>Supported date values</source>
          <target state="translated">サポートされている日付の値</target>
        </trans-unit>
        <trans-unit id="ca8d530e21e98d39ae16f271fc7325bc86189c4c" translate="yes" xml:space="preserve">
          <source>Supported time values</source>
          <target state="translated">サポートされている時間値</target>
        </trans-unit>
        <trans-unit id="7b672c250a692c7930dcea47f4f2882d8d6cb220" translate="yes" xml:space="preserve">
          <source>Tag attributes</source>
          <target state="translated">タグ属性</target>
        </trans-unit>
        <trans-unit id="49c2dd06d553be816ddc929d5827b8f4d498973a" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;code&gt;:lower&lt;/code&gt; flag to return lowerCamelCase.</source>
          <target state="translated">オプションの &lt;code&gt;:lower&lt;/code&gt; フラグを取り、lowerCamelCaseを返します。</target>
        </trans-unit>
        <trans-unit id="7ac4b3291b61ef8c743bfc95248b0fb3f14f2f4d" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;code&gt;:lower&lt;/code&gt; option to return lowerCamelCase.</source>
          <target state="translated">オプションの &lt;code&gt;:lower&lt;/code&gt; オプションを使用して、lowerCamelCaseを返します。</target>
        </trans-unit>
        <trans-unit id="c7c29adf9027dec2f86ef5a16f075c3d628928d4" translate="yes" xml:space="preserve">
          <source>Takes the difference of the result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">複数のクエリの結果セットの違いを取る。各クエリの &lt;code&gt;select&lt;/code&gt; は、同じタイプで同じ順序で完全に同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="c5474cd2cac56f1497f50f85ecd38b5c6c812e93" translate="yes" xml:space="preserve">
          <source>Takes the overlap of the result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">複数のクエリの結果セットの重複をとります。各クエリの &lt;code&gt;select&lt;/code&gt; は、同じタイプで同じ順序で完全に同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="3db034b2c134d1803cc0048359b2bec75cc50891" translate="yes" xml:space="preserve">
          <source>Takes whichever value is not null, or null if they both are</source>
          <target state="translated">値が NULL でない方を取り、両方とも NULL の場合は NULL を取ります。</target>
        </trans-unit>
        <trans-unit id="385318970f2d6fbd0e9c01294074ec0db698c3bc" translate="yes" xml:space="preserve">
          <source>Takes whichever value is not null, or null if they both are.</source>
          <target state="translated">値がNULLでない方を取り、両方ともNULLの場合はNULLになります。</target>
        </trans-unit>
        <trans-unit id="b3b8c57740e772fbfade922d8b797cd74dba1963" translate="yes" xml:space="preserve">
          <source>Taking the initial example of users having addresses imagine those addresses are set up to belong to a country. If you want to allow users to bulk edit all addresses that belong to a single country, you can do so by changing the preload query:</source>
          <target state="translated">アドレスを持つユーザの最初の例として、それらのアドレスが国に属するように設定されていることを想像してみてください。一つの国に属するすべてのアドレスを一括して編集できるようにしたい場合は、プリロードクエリを変更することで可能になります。</target>
        </trans-unit>
        <trans-unit id="6dd4fe806eb6aa488b589abd5daaa57f324f6077" translate="yes" xml:space="preserve">
          <source>Telemetry</source>
          <target state="translated">Telemetry</target>
        </trans-unit>
        <trans-unit id="d5e31566fc119a3fb202242cb49b826a32c929b4" translate="yes" xml:space="preserve">
          <source>Telemetry events</source>
          <target state="translated">テレメトリーイベント</target>
        </trans-unit>
        <trans-unit id="d4ac83b979f38010b10a99b73e1e401a2fec66f9" translate="yes" xml:space="preserve">
          <source>Templates are often rendered inside layouts. By default, Phoenix will render layouts for html requests. For example:</source>
          <target state="translated">テンプレートはしばしばレイアウトの中にレンダリングされます。デフォルトでは、Phoenixはhtmlリクエストに対してレイアウトをレンダリングします。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="83df20b5f538ba4bf70930df924ee3e9ff74c9fe" translate="yes" xml:space="preserve">
          <source>Templates are used by Phoenix when rendering responses.</source>
          <target state="translated">テンプレートは、レスポンスをレンダリングする際にPhoenixが使用します。</target>
        </trans-unit>
        <trans-unit id="064acb0eabd4a2c305afa47b705ad6352a299f5c" translate="yes" xml:space="preserve">
          <source>Templates can be rendered within other templates using the &lt;code&gt;:layout&lt;/code&gt; option. &lt;code&gt;:layout&lt;/code&gt; accepts a tuple of the form &lt;code&gt;{LayoutModule, &quot;template.extension&quot;}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:layout&lt;/code&gt; オプションを使用して、テンプレートを他のテンプレート内にレンダリングできます。 &lt;code&gt;:layout&lt;/code&gt; は、 &lt;code&gt;{LayoutModule, &quot;template.extension&quot;}&lt;/code&gt; という形式のタプルを受け入れます。</target>
        </trans-unit>
        <trans-unit id="77517bd07ed49be0dde5e9aa42b90f66aa74f959" translate="yes" xml:space="preserve">
          <source>Terminate</source>
          <target state="translated">Terminate</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="cf28e2a327522d6ff3d688f8ac4b32ee2c8f9807" translate="yes" xml:space="preserve">
          <source>Testing with Presence</source>
          <target state="translated">プレゼンスを使ったテスト</target>
        </trans-unit>
        <trans-unit id="8525247497cae160635c04a5c0a67e8ee5e93c2b" translate="yes" xml:space="preserve">
          <source>Tests whether one or more values returned from the provided subquery match in a comparison operation.</source>
          <target state="translated">指定された副問い合わせから返された1つ以上の値が比較操作で一致するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5fb157ec7c4ab4b43a8f7610702a11f4abf5a859" translate="yes" xml:space="preserve">
          <source>The &quot;assigns&quot; storage is meant to be used to store values in the connection so that other plugs in your plug pipeline can access them. The assigns storage is a map.</source>
          <target state="translated">assigns」ストレージは、プラグパイプライン内の他のプラグがアクセスできるように、接続に値を保存するために使用することを意味します。assigns ストレージはマップです。</target>
        </trans-unit>
        <trans-unit id="34cc66037bd21d671d1d361a106b7dc4195ccf47" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;assigns&amp;rdquo; storage is meant to be used to store values in the connection so that other plugs in your plug pipeline can access them. The assigns storage is a map.</source>
          <target state="translated">「割り当て」ストレージは、接続に値を格納して、プラグパイプライン内の他のプラグが値にアクセスできるようにするために使用されることを意図しています。割り当てストレージはマップです。</target>
        </trans-unit>
        <trans-unit id="ed7d2aece955d0eb0adbd5c3ead7547ebda6a576" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#c:fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; callback is triggered when using &lt;code&gt;c:list/2&lt;/code&gt; and on every update, and it serves as a mechanism to fetch presence information a single time, before broadcasting the information to all channel subscribers. This prevents N query problems and gives you a single place to group isolated data fetching to extend presence metadata.</source>
          <target state="translated">&lt;a href=&quot;#c:fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; &lt;/a&gt;コールバックを使用する場合にトリガーされ &lt;code&gt;c:list/2&lt;/code&gt; とすべての更新にし、そしてそれは、すべてのチャネルの加入者に情報を放送する前に、プレゼンス情報を単一の時間を取得するためのメカニズムとして機能します。これにより、Nクエリの問題が回避され、分離されたデータフェッチをグループ化してプレゼンスメタデータを拡張するための単一の場所が提供されます。</target>
        </trans-unit>
        <trans-unit id="ccee99ea15b107959f66e403e4586ed71a7b198b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#connect/6&quot;&gt;&lt;code&gt;connect/6&lt;/code&gt;&lt;/a&gt; function in this module can be used as a convenience or a documentation on such steps.</source>
          <target state="translated">このモジュールの&lt;a href=&quot;#connect/6&quot;&gt; &lt;code&gt;connect/6&lt;/code&gt; &lt;/a&gt;関数は、そのような手順の便宜またはドキュメントとして使用できます。</target>
        </trans-unit>
        <trans-unit id="ef89800e0cbbeab27286654a528b11abba734ba6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; structure should be considered opaque. You can use &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; to pattern match the type, but accessing fields or directly modifying them is not advised.</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;構造が不透明な考慮すべきです。 &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; を使用してタイプをパターンマッチングできますが、フィールドにアクセスしたり、フィールドを直接変更したりすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="334abf61e2eb9d49fa7423881b32cb13154f6a3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module also provides conveniences for working with associations. For example, &lt;a href=&quot;#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; returns a query with all associated data to a given struct:</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt;モジュールはまた、団体での作業のための便利さを提供します。たとえば、&lt;a href=&quot;#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt;は、関連するすべてのデータを含むクエリを特定の構造体に返します。</target>
        </trans-unit>
        <trans-unit id="1000118f12916a7a73fddff1f37da63c9cd690ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; implementation may also send special messages and replies:</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; の&lt;/a&gt;実装では、特別なメッセージと返信を送ることがあります。</target>
        </trans-unit>
        <trans-unit id="fdd88277b1d89a27b6b11599f8d9956fb7c2f53b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#encode_to_iodata!/1&quot;&gt;&lt;code&gt;encode_to_iodata!/1&lt;/code&gt;&lt;/a&gt; function converts the rendered template result into iodata.</source>
          <target state="translated">&lt;a href=&quot;#encode_to_iodata!/1&quot;&gt; &lt;code&gt;encode_to_iodata!/1&lt;/code&gt; &lt;/a&gt;関数はiodataにレンダリングテンプレート結果を変換します。</target>
        </trans-unit>
        <trans-unit id="9699f16f2bf7e747e122f9ca173cd7f42ddcffe3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; macro above accepts a request of format &lt;code&gt;&quot;/pages/VALUE&quot;&lt;/code&gt; and dispatches it to the show action in the &lt;code&gt;PageController&lt;/code&gt;.</source>
          <target state="translated">上記の&lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt;マクロは、 &lt;code&gt;&quot;/pages/VALUE&quot;&lt;/code&gt; 形式のリクエストを受け入れ、それを &lt;code&gt;PageController&lt;/code&gt; の showアクションにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="1e6610e758202b62590baa5e46b378b4bf396178" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt; macro above accepts a request to &lt;code&gt;/pages/hello&lt;/code&gt; and dispatches it to the &lt;code&gt;PageController&lt;/code&gt;'s &lt;code&gt;show&lt;/code&gt; action with &lt;code&gt;%{&quot;page&quot; =&amp;gt; &quot;hello&quot;}&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">上記の&lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt;マクロは、 &lt;code&gt;/pages/hello&lt;/code&gt; へのリクエストを受け入れ、 &lt;code&gt;params&lt;/code&gt; に &lt;code&gt;%{&quot;page&quot; =&amp;gt; &quot;hello&quot;}&lt;/code&gt; を指定して &lt;code&gt;PageController&lt;/code&gt; の &lt;code&gt;show&lt;/code&gt; アクションにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="b4d5b3e248d2fbc1eca751de4ab135e756ebf19b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ecto#content&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module also provides conveniences for working with associations. For example, &lt;a href=&quot;ecto#assoc/2&quot;&gt;&lt;code&gt;Ecto.assoc/2&lt;/code&gt;&lt;/a&gt; returns a query with all associated data to a given struct:</source>
          <target state="translated">&lt;a href=&quot;ecto#content&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt;モジュールはまた、団体での作業のための便利さを提供します。たとえば、&lt;a href=&quot;ecto#assoc/2&quot;&gt; &lt;code&gt;Ecto.assoc/2&lt;/code&gt; &lt;/a&gt;は、指定された構造体に関連するすべてのデータを含むクエリを返します。</target>
        </trans-unit>
        <trans-unit id="58fb745a2e57967c454ef61e37a343c8af7ac169" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ecto.multi#content&quot;&gt;&lt;code&gt;Ecto.Multi&lt;/code&gt;&lt;/a&gt; structure should be considered opaque. You can use &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; to pattern match the type, but accessing fields or directly modifying them is not advised.</source>
          <target state="translated">&lt;a href=&quot;ecto.multi#content&quot;&gt; &lt;code&gt;Ecto.Multi&lt;/code&gt; &lt;/a&gt;構造が不透明な考慮すべきです。 &lt;code&gt;%Ecto.Multi{}&lt;/code&gt; を使用してタイプをパターンマッチングできますが、フィールドにアクセスしたり、フィールドを直接変更したりすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="fa9514b9adddb69475024589cdb99afc99238dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is disabled by configuration but might be enabled later.</source>
          <target state="translated">&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; は&lt;/a&gt;設定で無効になっていますが、後で有効にすることがあります。</target>
        </trans-unit>
        <trans-unit id="a3ab5765089e37fe00cdc982a6c6127904496f5f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;phoenix.pubsub#content&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; API allows any of its functions to handle a response from the adapter matching &lt;code&gt;{:perform, {m, f, a}}&lt;/code&gt;. The PubSub client will recursively invoke all MFA responses until a result is returned. This is useful for offloading work to clients without blocking your PubSub adapter. See &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; implementation for examples.</source>
          <target state="translated">&lt;a href=&quot;phoenix.pubsub#content&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; の&lt;/a&gt; APIは、その機能のいずれかがアダプタマッチングからの応答を処理することを可能にする &lt;code&gt;{:perform, {m, f, a}}&lt;/code&gt; 。PubSubクライアントは、結果が返されるまで、すべてのMFA応答を再帰的に呼び出します。これは、PubSubアダプターをブロックせずに作業をクライアントにオフロードするのに役立ちます。例については、&lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt;実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="1b0c9e11a76593a12fc7ec6f78afc56ab4d36aaf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;phoenix.pubsub#content&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; API allows any of its functions to handle a response from the adapter matching &lt;code&gt;{:perform, {m, f, a}}&lt;/code&gt;. The PubSub client will recursively invoke all MFA responses until a result is returned. This is useful for offloading work to clients without blocking your PubSub adapter. See &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; implementation for examples.</source>
          <target state="translated">&lt;a href=&quot;phoenix.pubsub#content&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; の&lt;/a&gt; APIは、その機能のいずれかがアダプタマッチングからの応答を処理することを可能にする &lt;code&gt;{:perform, {m, f, a}}&lt;/code&gt; 。PubSubクライアントは、結果が返されるまで、すべてのMFA応答を再帰的に呼び出します。これは、PubSubアダプターをブロックせずに作業をクライアントにオフロードするのに役立ちます。例については、 &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; 実装を参照してください。</target>
        </trans-unit>
        <trans-unit id="f32ca35c51fcd8b2c79b98aed4633cc99e6aea64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; module provides conveniences for building plug pipelines.</source>
          <target state="translated">&lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; の&lt;/a&gt;モジュールはプラグパイプラインを構築するための便利さを提供します。</target>
        </trans-unit>
        <trans-unit id="d6e79dbadb31903b9f92905b4723d4810b1bea76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; event is sent by the transport when a channel exits, and represents the channel terminating against its will. The &lt;a href=&quot;#on_exit_message/3&quot;&gt;&lt;code&gt;on_exit_message/3&lt;/code&gt;&lt;/a&gt; function aids in constructing the &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; message.</source>
          <target state="translated">&lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; イベントが時にチャネル出口輸送によって送信され、その意思に反し終了チャネルを表しています。&lt;a href=&quot;#on_exit_message/3&quot;&gt; &lt;code&gt;on_exit_message/3&lt;/code&gt; &lt;/a&gt;機能が構築するのを助ける &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; のメッセージを。</target>
        </trans-unit>
        <trans-unit id="6e450e02e99e9729245c2971a0f234ed37f3b636" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%Phoenix.Socket.Message{}&lt;/code&gt; is the leave message for the transport to relay to the client.</source>
          <target state="translated">&lt;code&gt;%Phoenix.Socket.Message{}&lt;/code&gt; 、クライアントに中継する搬送用離脱メッセージです。</target>
        </trans-unit>
        <trans-unit id="bd539ef4a22e6b8ce30fc264d95352ee8a15cefe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*_nulls_first&lt;/code&gt; and &lt;code&gt;*_nulls_last&lt;/code&gt; variants are not supported by all databases. While all databases default to ascending order, the choice of &quot;nulls first&quot; or &quot;nulls last&quot; is specific to each database implementation.</source>
          <target state="translated">&lt;code&gt;*_nulls_first&lt;/code&gt; と &lt;code&gt;*_nulls_last&lt;/code&gt; の変異体は、すべてのデータベースでサポートされていません。すべてのデータベースはデフォルトで昇順になっていますが、「nullが最初」または「nullが最後」の選択は各データベースの実装に固有です。</target>
        </trans-unit>
        <trans-unit id="6d85a8224c78cbfc81cbb854cdafc632fe561a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*_nulls_first&lt;/code&gt; and &lt;code&gt;*_nulls_last&lt;/code&gt; variants are not supported by all databases. While all databases default to ascending order, the choice of &amp;ldquo;nulls first&amp;rdquo; or &amp;ldquo;nulls last&amp;rdquo; is specific to each database implementation.</source>
          <target state="translated">&lt;code&gt;*_nulls_first&lt;/code&gt; と &lt;code&gt;*_nulls_last&lt;/code&gt; の変異体は、すべてのデータベースでサポートされていません。すべてのデータベースはデフォルトで昇順ですが、「最初にnull」または「最後にnull」の選択は、各データベースの実装に固有です。</target>
        </trans-unit>
        <trans-unit id="5adb9f7effcd9a92a5c3394cf706464a50f8e854" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-halt&lt;/code&gt; flag is automatically added.</source>
          <target state="translated">&lt;code&gt;--no-halt&lt;/code&gt; フラグが自動的に追加されます。</target>
        </trans-unit>
        <trans-unit id="6ea39d3cb35a084383c1603b0beb3c4727483b5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.eex&lt;/code&gt; extension maps to a template engine which tells Phoenix how to compile the code in the file into Elixir source code. After it is compiled, the template can be rendered as:</source>
          <target state="translated">&lt;code&gt;.eex&lt;/code&gt; 拡張子はエリクサーのソースコードに、ファイル内のコードをコンパイルする方法フェニックスを伝えるテンプレートエンジンにマッピングされます。コンパイル後、テンプレートは次のようにレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="8d2cbe3b530a3545de3248339706a75f4da234de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:aspect&lt;/code&gt; key of the struct specifies what field is still unfetched.</source>
          <target state="translated">構造体の &lt;code&gt;:aspect&lt;/code&gt; キーは、まだフェッチされていないフィールドを指定します。</target>
        </trans-unit>
        <trans-unit id="ef67b3c2738d0f830da956da57f8a9d7ab9878ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:authenticate&lt;/code&gt; plug will be invoked before the action. If the plug calls &lt;a href=&quot;../plug/1.5.1/plug.conn#halt/1&quot;&gt;&lt;code&gt;Plug.Conn.halt/1&lt;/code&gt;&lt;/a&gt; (which is by default imported into controllers), it will halt the pipeline and won&amp;rsquo;t inoke the action.</source>
          <target state="translated">&lt;code&gt;:authenticate&lt;/code&gt; プラグインは、アクションの前に呼び出されます。プラグが&lt;a href=&quot;../plug/1.5.1/plug.conn#halt/1&quot;&gt; &lt;code&gt;Plug.Conn.halt/1&lt;/code&gt; &lt;/a&gt;（デフォルトではコントローラーにインポートされます）を呼び出す場合、プラグインはパイプラインを停止し、アクションを呼び出しません。</target>
        </trans-unit>
        <trans-unit id="2a2077bbe0dc1df2c551ae2d5305040e0b043053" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:authenticate&lt;/code&gt; plug will be invoked before the action. If the plug calls &lt;a href=&quot;../plug/plug.conn#halt/1&quot;&gt;&lt;code&gt;Plug.Conn.halt/1&lt;/code&gt;&lt;/a&gt; (which is by default imported into controllers), it will halt the pipeline and won't invoke the action.</source>
          <target state="translated">&lt;code&gt;:authenticate&lt;/code&gt; プラグインは、アクションの前に呼び出されます。プラグが&lt;a href=&quot;../plug/plug.conn#halt/1&quot;&gt; &lt;code&gt;Plug.Conn.halt/1&lt;/code&gt; &lt;/a&gt;（デフォルトではコントローラーにインポートされます）を呼び出すと、パイプラインが停止し、アクションは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="731f4c8f6efafb89aa6c584007065c777c291143" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:cd&lt;/code&gt; option can be used on a watcher to override the folder from which the watcher will run. By default this will be the project&amp;rsquo;s root: &lt;code&gt;File.cwd!()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:cd&lt;/code&gt; オプションは、ウォッチャーが実行されるからフォルダを上書きするためにウォッチャーに使用することができます。デフォルトでは、これはプロジェクトのルートになります： &lt;code&gt;File.cwd!()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ae21bdba03584c806666010e52a2cb28db8be56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:cd&lt;/code&gt; option can be used on a watcher to override the folder from which the watcher will run. By default this will be the project's root: &lt;code&gt;File.cwd!()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:cd&lt;/code&gt; オプションは、ウォッチャーが実行されるからフォルダを上書きするためにウォッチャーに使用することができます。デフォルトでは、これはプロジェクトのルートになります： &lt;code&gt;File.cwd!()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7bc6b309b1a0d5dcb1c973131cf2999c439c9de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:cipher_suite&lt;/code&gt; option provides &lt;code&gt;:strong&lt;/code&gt; and &lt;code&gt;:compatible&lt;/code&gt; options for setting up better cipher and version defaults according to the OWASP recommendations. See the &amp;ldquo;Cipher Suites&amp;rdquo; section below</source>
          <target state="translated">&lt;code&gt;:cipher_suite&lt;/code&gt; オプションが提供 &lt;code&gt;:strong&lt;/code&gt; と &lt;code&gt;:compatible&lt;/code&gt; OWASPの推奨に従って、より良い暗号とバージョンのデフォルトを設定するためのオプションを。以下の「暗号スイート」セクションを参照してください</target>
        </trans-unit>
        <trans-unit id="918f4e83de0e618dc7aa4875d78f6492629319c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:content_type&lt;/code&gt; and &lt;code&gt;:filename&lt;/code&gt; fields in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt; struct are client-controlled. These values should be validated, via file content inspection or similar, before being trusted.</source>
          <target state="translated">&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Upload&lt;/code&gt; &lt;/a&gt;構造体の &lt;code&gt;:content_type&lt;/code&gt; フィールドと &lt;code&gt;:filename&lt;/code&gt; フィールドは、クライアントによって制御されます。これらの値は、信頼される前に、ファイルの内容の検査などによって検証する必要があります。</target>
        </trans-unit>
        <trans-unit id="3fb2b2f7e9b4811efb97cc3c2e5e5c07ea928f93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:context&lt;/code&gt; field represents additional state some databases require for proper updates of data. It is not used by the built-in adapters of &lt;code&gt;Ecto.Adapters.Postgres&lt;/code&gt; and &lt;code&gt;Ecto.Adapters.MySQL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:context&lt;/code&gt; フィールドには、いくつかのデータベースは、データの適切な更新のための追加の状態を表します。 &lt;code&gt;Ecto.Adapters.Postgres&lt;/code&gt; および &lt;code&gt;Ecto.Adapters.MySQL&lt;/code&gt; の組み込みアダプターでは使用されません。</target>
        </trans-unit>
        <trans-unit id="ea6213d9c5c2d60d6a2f351db0efbb41962d6d16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:context&lt;/code&gt; field represents additional state some databases require for proper updates of data. It is not used by the built-in adapters of &lt;code&gt;Ecto.Adapters.Postres&lt;/code&gt; and &lt;code&gt;Ecto.Adapters.MySQL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:context&lt;/code&gt; フィールドには、いくつかのデータベースは、データの適切な更新のための追加の状態を表します。 &lt;code&gt;Ecto.Adapters.Postres&lt;/code&gt; および &lt;code&gt;Ecto.Adapters.MySQL&lt;/code&gt; の組み込みアダプターでは使用されません。</target>
        </trans-unit>
        <trans-unit id="16a1d1418e35d766234890bac5372c3fa8aab917" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:delete&lt;/code&gt; option in particular must be used carefully as it would allow users to delete any associated data by simply not sending any data for a given field. If you need deletion, it is often preferred to manually mark the changeset for deletion if a &lt;code&gt;delete&lt;/code&gt; field is set in the params, as in the example below:</source>
          <target state="translated">&lt;code&gt;:delete&lt;/code&gt; それは、ユーザーが単に与えられたフィールドに任意のデータを送信しないことにより、関連するすべてのデータを削除できるようになると、特にオプションは慎重に使用する必要があります。以下の例のように、パラメータに &lt;code&gt;delete&lt;/code&gt; フィールドが設定されている場合、削除が必要な場合は、変更セットに削除のマークを手動で付けることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5acd2290f1eeb3bc214ec527b315e41481bcb38d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:delete&lt;/code&gt; option in particular must be used carefully as it would allow users to delete any associated data. If you need deletion, it is often preferred to add a separate boolean virtual field to the changeset function that will allow you to manually mark it for deletion, as in the example below:</source>
          <target state="translated">&lt;code&gt;:delete&lt;/code&gt; それは、ユーザーが任意の関連するデータを削除できるようになると、特にオプションは慎重に使用する必要があります。削除が必要な場合は、以下の例のように、個別のブール型仮想フィールドをチェンジセット関数に追加して、手動で削除対象としてマークできるようにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d742e4a33ea1296a531ccca07c5ea7b18db14083" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:host&lt;/code&gt; option requires a string or &lt;code&gt;{:system, &quot;ENV_VAR&quot;}&lt;/code&gt;. Similar to &lt;code&gt;:port&lt;/code&gt;, when given a tuple like &lt;code&gt;{:system, &quot;HOST&quot;}&lt;/code&gt;, the host will be referenced from &lt;code&gt;System.get_env(&quot;HOST&quot;)&lt;/code&gt; at runtime.</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; オプションは、文字列または必要 &lt;code&gt;{:system, &quot;ENV_VAR&quot;}&lt;/code&gt; 。 &lt;code&gt;:port&lt;/code&gt; と同様に、 &lt;code&gt;{:system, &quot;HOST&quot;}&lt;/code&gt; ようなタプルを指定すると、実行時に &lt;code&gt;System.get_env(&quot;HOST&quot;)&lt;/code&gt; からホストが参照されます。</target>
        </trans-unit>
        <trans-unit id="dd99d05cad94c87bb280dd5d83fd4ec31d3e120f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:id&lt;/code&gt; type is used when the primary key is an integer while the &lt;code&gt;:binary_id&lt;/code&gt; is used for primary keys in particular binary formats, which may be &lt;a href=&quot;ecto.uuid&quot;&gt;&lt;code&gt;Ecto.UUID&lt;/code&gt;&lt;/a&gt; for databases like PostgreSQL and MySQL, or some specific ObjectID or RecordID often imposed by NoSQL databases.</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; しながら、主キーが整数である場合種類が使用され &lt;code&gt;:binary_id&lt;/code&gt; することができる特定のバイナリ形式で主キーに使用され&lt;a href=&quot;ecto.uuid&quot;&gt; &lt;code&gt;Ecto.UUID&lt;/code&gt; &lt;/a&gt; PostgreSQLとMySQLのようなデータベースの、またはいくつかの特定のオブジェクトIDまたはレコードIDは、多くの場合のNoSQLによって課さデータベース。</target>
        </trans-unit>
        <trans-unit id="8d0a17946500299e7ee12b6af3689a1c4c43f8f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:logo&lt;/code&gt; is preferred to be a base64-encoded data URI so not to make any external requests, though external URLs (eg, &lt;code&gt;https://...&lt;/code&gt;) are supported.</source>
          <target state="translated">&lt;code&gt;:logo&lt;/code&gt; 、URIはので、任意の外部要求を行うことはないbase64でエンコードされたデータであることが好ましい外部URLけれども（例えば、 &lt;code&gt;https://...&lt;/code&gt; ）サポートされています。</target>
        </trans-unit>
        <trans-unit id="c3992bb8a6efd8a4bd3e7e1767377cc30d96b760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:measurements&lt;/code&gt; map will include the following, all given in the &lt;code&gt;:native&lt;/code&gt; time unit:</source>
          <target state="translated">&lt;code&gt;:measurements&lt;/code&gt; 全てで与えられた、以下のものが挙げられるであろうマップ &lt;code&gt;:native&lt;/code&gt; 時間単位：</target>
        </trans-unit>
        <trans-unit id="25110dc298c23b6bcca6b66d8becb6c3ab0252e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:name&lt;/code&gt; is required as part of &lt;code&gt;options&lt;/code&gt;. The remaining options are described below.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; の一部として必要とされる &lt;code&gt;options&lt;/code&gt; 。残りのオプションについては、以下で説明します。</target>
        </trans-unit>
        <trans-unit id="4a144d9bf2ce178155262a9bed21600765bd913d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:name&lt;/code&gt; parameter will also be available in the function body as &lt;code&gt;conn.params[&quot;name&quot;]&lt;/code&gt; and &lt;code&gt;conn.path_params[&quot;name&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:name&lt;/code&gt; パラメータはまた、関数本体で利用できるようになります &lt;code&gt;conn.params[&quot;name&quot;]&lt;/code&gt; と &lt;code&gt;conn.path_params[&quot;name&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c6a9f8fae8b3f03bb8da33b0dd63ade9e7c2388" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:namespace&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; options are used to calculate template lookup paths. For example, if you are in &lt;code&gt;MyApp.UserView&lt;/code&gt; and the namespace is &lt;code&gt;MyApp&lt;/code&gt;, templates are expected at &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt;. On the other hand, if the view is &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt;, the path will be &lt;code&gt;Path.join(root, &quot;admin/user&quot;)&lt;/code&gt; and so on. For explicit root path locations, the &lt;code&gt;:path&lt;/code&gt; option can be provided instead. The &lt;code&gt;:root&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; are joined to form the final lookup path. A blank string may be provided to use the &lt;code&gt;:root&lt;/code&gt; path directly as the template lookup path.</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; と &lt;code&gt;:path&lt;/code&gt; オプションは、計算テンプレートの検索パスに使用されています。たとえば、 &lt;code&gt;MyApp.UserView&lt;/code&gt; を使用していて、名前空間が &lt;code&gt;MyApp&lt;/code&gt; の場合、テンプレートは &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt; ます。一方、ビューが &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt; の場合、パスは &lt;code&gt;Path.join(root, &quot;admin/user&quot;)&lt;/code&gt; などになります。明示的なルートパスの場所については、代わりに &lt;code&gt;:path&lt;/code&gt; オプションを指定できます。 &lt;code&gt;:root&lt;/code&gt; と &lt;code&gt;:path&lt;/code&gt; 最終的なルックアップ・パスを形成するように接合されています。 &lt;code&gt;:root&lt;/code&gt; パスをテンプレートルックアップパスとして直接使用するために、空白の文字列を指定できます。</target>
        </trans-unit>
        <trans-unit id="65a1f032809b2a80ee05ed26deb3f2fce84671c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:namespace&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; options are used to calculate template lookup paths. For example, if you are in &lt;code&gt;MyApp.UserView&lt;/code&gt; and the namespace is &lt;code&gt;MyApp&lt;/code&gt;, templates are expected at &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt;. On the other hand, if the view is &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt;, the path will be &lt;code&gt;Path.join(root, &quot;admin/user&quot;)&lt;/code&gt; and so on. For explicit root path locations, the &lt;code&gt;:path&lt;/code&gt; option can instead be provided. The &lt;code&gt;:root&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; are joined to form the final lookup path. A blank string may be provided to use the &lt;code&gt;:root&lt;/code&gt; path directly as the template lookup path.</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; と &lt;code&gt;:path&lt;/code&gt; オプションは、計算テンプレートの検索パスに使用されています。たとえば、 &lt;code&gt;MyApp.UserView&lt;/code&gt; にいて、名前空間が &lt;code&gt;MyApp&lt;/code&gt; の場合、テンプレートは &lt;code&gt;Path.join(root, &quot;user&quot;)&lt;/code&gt; が期待されています。一方、ビューが &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt; の場合、パスは &lt;code&gt;Path.join(root, &quot;admin/user&quot;)&lt;/code&gt; ようになります。明示的なルートパスの場所については、代わりに &lt;code&gt;:path&lt;/code&gt; オプションを指定できます。 &lt;code&gt;:root&lt;/code&gt; と &lt;code&gt;:path&lt;/code&gt; 最終的なルックアップ・パスを形成するように接合されています。 &lt;code&gt;:root&lt;/code&gt; パスをテンプレート参照パスとして直接使用するために、空白の文字列を指定できます。</target>
        </trans-unit>
        <trans-unit id="895c2ddd40cf8e3567de42e9bf12420974e19653" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:on_replace&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;:on_replace&lt;/code&gt; オプション</target>
        </trans-unit>
        <trans-unit id="36d82b1b3e9c0c28b3952588185c19ae211245b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:port&lt;/code&gt; option requires either an integer or string. The &lt;code&gt;:host&lt;/code&gt; option requires a string. The &lt;code&gt;:scheme&lt;/code&gt; option accepts &lt;code&gt;&quot;http&quot;&lt;/code&gt; and &lt;code&gt;&quot;https&quot;&lt;/code&gt; values. Default value is inferred from top level &lt;code&gt;:http&lt;/code&gt; or &lt;code&gt;:https&lt;/code&gt; option. It is useful when hosting Phoenix behind a load balancer or reverse proxy and terminating SSL there. The &lt;code&gt;:path&lt;/code&gt; option can be used to override root path. Useful when hosting Phoenix behind a reverse proxy with URL rewrite rules</source>
          <target state="translated">&lt;code&gt;:port&lt;/code&gt; オプションは、整数または文字列のいずれかが必要です。 &lt;code&gt;:host&lt;/code&gt; オプションは、文字列が必要です。 &lt;code&gt;:scheme&lt;/code&gt; オプションが受け入れ &lt;code&gt;&quot;http&quot;&lt;/code&gt; と &lt;code&gt;&quot;https&quot;&lt;/code&gt; の値を。デフォルト値は、トップレベルの &lt;code&gt;:http&lt;/code&gt; または &lt;code&gt;:https&lt;/code&gt; オプションから推測されます。ロードバランサーまたはリバースプロキシの背後でPhoenixをホストし、そこでSSLを終了する場合に便利です。 &lt;code&gt;:path&lt;/code&gt; オプションは、ルート・パスをオーバーライドするために使用することができます。 URL書き換えルールを使用してリバースプロキシの背後でPhoenixをホストする場合に便利です</target>
        </trans-unit>
        <trans-unit id="6168b39090f584c85cff0cc128125156fba6b515" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:port&lt;/code&gt; option requires either an integer, string, or &lt;code&gt;{:system, &quot;ENV_VAR&quot;}&lt;/code&gt;. When given a tuple like &lt;code&gt;{:system, &quot;PORT&quot;}&lt;/code&gt;, the port will be referenced from &lt;code&gt;System.get_env(&quot;PORT&quot;)&lt;/code&gt; at runtime as a workaround for releases where environment specific information is loaded only at compile-time.</source>
          <target state="translated">&lt;code&gt;:port&lt;/code&gt; オプションは、整数、文字列、またはいずれかが必要 &lt;code&gt;{:system, &quot;ENV_VAR&quot;}&lt;/code&gt; 。 &lt;code&gt;{:system, &quot;PORT&quot;}&lt;/code&gt; ようなタプルを指定すると、ポートは実行時に &lt;code&gt;System.get_env(&quot;PORT&quot;)&lt;/code&gt; から参照され、コンパイル時にのみ環境固有の情報がロードされるリリースの回避策として使用されます。</target>
        </trans-unit>
        <trans-unit id="92d07421660bd7c638d8258897864e4a9cf3e6ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:prefix&lt;/code&gt; option given to &lt;code&gt;from&lt;/code&gt;/&lt;code&gt;join&lt;/code&gt; has the highest precedence</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; に与えられた選択肢 &lt;code&gt;from&lt;/code&gt; / &lt;code&gt;join&lt;/code&gt; 最高の優先順位を持っています</target>
        </trans-unit>
        <trans-unit id="54e1957e79c6b007c7f23224e0a1670cbbc75677" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:pubsub_server&lt;/code&gt; must point to an existing pubsub server running in your application, which is included by default as &lt;code&gt;MyApp.PubSub&lt;/code&gt; for new applications.</source>
          <target state="translated">&lt;code&gt;:pubsub_server&lt;/code&gt; は、デフォルトで含まれているアプリケーションで実行されている既存のpubsubサーバを指している必要があり &lt;code&gt;MyApp.PubSub&lt;/code&gt; 新しいアプリケーションのために。</target>
        </trans-unit>
        <trans-unit id="5cda43ef4ff3376cfc2c7af75979f3ba0d7ed620" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:reloadable_apps&lt;/code&gt; defaults to &lt;code&gt;nil&lt;/code&gt;. In such case default behaviour is to reload current project if it consists of single app, or all applications within umbrella project. You can set &lt;code&gt;:reloadable_apps&lt;/code&gt; to subset of default applications to reload only some of them, empty list - to effectively disable code reloader, or include external applications from library dependencies.</source>
          <target state="translated">&lt;code&gt;:reloadable_apps&lt;/code&gt; にデフォルト値を &lt;code&gt;nil&lt;/code&gt; に。このような場合、デフォルトの動作では、現在のプロジェクトが単一のアプリ、またはアンブレラプロジェクト内のすべてのアプリケーションで構成されている場合はリロードします。あなたは、設定することができ &lt;code&gt;:reloadable_apps&lt;/code&gt; のみそれらのいくつか、空のリストをリロードするために、デフォルトのアプリケーションのサブセットに-効果的にディセーブルコードのリロード機能に、またはライブラリの依存関係からの外部アプリケーションが含まれます。</target>
        </trans-unit>
        <trans-unit id="ed05e3737398b3c2beccb1cfaf10e740d96858b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:root&lt;/code&gt; option is required while the &lt;code&gt;:namespace&lt;/code&gt; defaults to the first nesting in the module name. For instance, both &lt;code&gt;MyApp.UserView&lt;/code&gt; and &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt; have namespace &lt;code&gt;MyApp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:namespace&lt;/code&gt; はデフォルトでモジュール名の最初のネストに設定されますが、 &lt;code&gt;:root&lt;/code&gt; オプションは必須です。たとえば、 &lt;code&gt;MyApp.UserView&lt;/code&gt; と &lt;code&gt;MyApp.Admin.UserView&lt;/code&gt; の両方に名前空間 &lt;code&gt;MyApp&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="1a3296e1c3da0ddff618bfd191c05b175ff0cb1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:schema&lt;/code&gt; field refers the module name for the schema this metadata belongs to.</source>
          <target state="translated">&lt;code&gt;:schema&lt;/code&gt; フィールドは、このメタデータが属するスキーマのモジュール名を指します。</target>
        </trans-unit>
        <trans-unit id="e2763632c3bc8d8b6f69e916c553e100096271d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:selected&lt;/code&gt; option will mark the given IDs as selected unless the form is being resubmitted. When resubmitted, it uses the form params as values.</source>
          <target state="translated">&lt;code&gt;:selected&lt;/code&gt; フォームが再送信されている場合を除き、選択したオプションが与えられたIDをマークします。再送信されると、paramsという形式が値として使用されます。</target>
        </trans-unit>
        <trans-unit id="0cea6902bf81cf806e2e2ff5a1334ab75f6b0054" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:source&lt;/code&gt; tracks the (table or collection) where the struct is or should be persisted to.</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; 構造体であるかに永続化されなければならない（表またはコレクション）を追跡します。</target>
        </trans-unit>
        <trans-unit id="81e4f3969fca2a0c0bce3d4dfbb896188d5e6e36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:where&lt;/code&gt; option expects a keyword list where the key is an atom representing the field and the value is either:</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; オプションは、キーフィールドと値を表す原子であるキーワードリストを期待するには、いずれかです：</target>
        </trans-unit>
        <trans-unit id="3d6613c6ae5cafc810769cb60c6e62f072ba58bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:where&lt;/code&gt; option may receive a dynamic query, a keyword list or a MFA (a tuple with a module, function and args to invoke). The MFA is especially useful to avoid duplication in those definitions:</source>
          <target state="translated">&lt;code&gt;:where&lt;/code&gt; オプションは、ダイナミッククエリ、キーワードリストまたはMFA（呼び出すためのモジュール、機能、引数付きタプル）を受信することができます。MFAは、これらの定義の重複を避けるのに特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="cdf5ea7cc064d3fd02c24e10f92c4d06b0296467" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@endpoint&lt;/code&gt; module attribute contains the endpoint under testing, most commonly your application endpoint itself. If you are using the MyApp.ConnCase generated by Phoenix, it is automatically set for you.</source>
          <target state="translated">&lt;code&gt;@endpoint&lt;/code&gt; モジュールの属性は、最も一般的に、アプリケーションが自身をエンドポイント、テストの下のエンドポイントが含まれています。Phoenixによって生成されたMyApp.ConnCaseを使用している場合は、自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="fbb7111fae5bbf19a11fce2dbdf8ba880cacae4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@primary_key&lt;/code&gt; attribute will tell ecto which type to use for the id.</source>
          <target state="translated">&lt;code&gt;@primary_key&lt;/code&gt; のIDに使用するタイプの属性は、エクトを教えてくれます。</target>
        </trans-unit>
        <trans-unit id="8e515ce695757264b1c2dae6b68e6bbfbc7f198c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;POST&lt;/code&gt; method can be overridden only by these HTTP methods:</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; の方法は、これらのHTTPメソッドで上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="65f0d0f4bd596df0232f105e5e46a46047747cd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SignUp&lt;/code&gt; schema can be cast and validated with the help of the &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt; module, and afterwards, you can copy its data to the &lt;code&gt;Profile&lt;/code&gt; and &lt;code&gt;Account&lt;/code&gt; structs that will be persisted to the database with the help of &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SignUp&lt;/code&gt; スキーマはの助けを借りて、キャストと検証することができ&lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; の&lt;/a&gt;モジュール、およびその後、あなたはにそのデータをコピーすることができ &lt;code&gt;Profile&lt;/code&gt; と &lt;code&gt;Account&lt;/code&gt; の助けを借りて、データベースに永続化される構造体&lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0027e32d65973e3996206f15f8d2bc1ec48ab7bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tracker&lt;/code&gt; API is used as a facade for a pool of &lt;a href=&quot;phoenix.tracker.shard&quot;&gt;&lt;code&gt;Phoenix.Tracker.Shard&lt;/code&gt;&lt;/a&gt;s. The responsibility of which calls go to which &lt;code&gt;Shard&lt;/code&gt; is determined based on the topic, on which a given function is called.</source>
          <target state="translated">&lt;code&gt;Tracker&lt;/code&gt; APIは、プールのためのファサードとして使用されている&lt;a href=&quot;phoenix.tracker.shard&quot;&gt; &lt;code&gt;Phoenix.Tracker.Shard&lt;/code&gt; &lt;/a&gt;秒。どの呼び出しがどの &lt;code&gt;Shard&lt;/code&gt; 移動するかは、特定の関数が呼び出されるトピックに基づいて決定されます。</target>
        </trans-unit>
        <trans-unit id="9380732d83d99aa3ef7e1ee94986487b7d7501fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;adapter_meta&lt;/code&gt; field is a map containing some of the fields found in the &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">&lt;code&gt;adapter_meta&lt;/code&gt; フィールドがで見つかったいくつかのフィールド含むマップです&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; の&lt;/a&gt;構造体を。</target>
        </trans-unit>
        <trans-unit id="1f72cda2deb8565937044253265942493bf6aa90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;belongs_to&lt;/code&gt; association on &lt;code&gt;MyApp.Comment&lt;/code&gt; will also define a &lt;code&gt;:post_id&lt;/code&gt; field with &lt;code&gt;:binary_id&lt;/code&gt; type that references the &lt;code&gt;:id&lt;/code&gt; field of the &lt;code&gt;MyApp.Post&lt;/code&gt; schema.</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; のの上の関連 &lt;code&gt;MyApp.Comment&lt;/code&gt; はまた、定義する &lt;code&gt;:post_id&lt;/code&gt; のフィールドを &lt;code&gt;:binary_id&lt;/code&gt; 参照するタイプ &lt;code&gt;:id&lt;/code&gt; のフィールド &lt;code&gt;MyApp.Post&lt;/code&gt; スキーマ。</target>
        </trans-unit>
        <trans-unit id="778cb135fc988ae8195d411110c29d421206d37f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;call/2&lt;/code&gt; function that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; provides is used internally to execute all the plugs listed using the &lt;code&gt;plug&lt;/code&gt; macro, so overriding the &lt;code&gt;call/2&lt;/code&gt; function generally implies using &lt;code&gt;super&lt;/code&gt; in order to still call the plug chain:</source>
          <target state="translated">&lt;code&gt;call/2&lt;/code&gt; こと機能&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; を&lt;/a&gt;提供する全てのプラグを使用してリストを実行するために内部的に使用される &lt;code&gt;plug&lt;/code&gt; オーバーライドので、マクロを &lt;code&gt;call/2&lt;/code&gt; 機能は、一般的に使用意味 &lt;code&gt;super&lt;/code&gt; 依然としてプラグチェーンを呼び出すために：</target>
        </trans-unit>
        <trans-unit id="6752d9d305fe4dabd6e9f7e8abc5275de174456b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;call/2&lt;/code&gt; function that &lt;a href=&quot;plug.builder#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; provides is used internally to execute all the plugs listed using the &lt;code&gt;plug&lt;/code&gt; macro, so overriding the &lt;code&gt;call/2&lt;/code&gt; function generally implies using &lt;code&gt;super&lt;/code&gt; in order to still call the plug chain:</source>
          <target state="translated">&lt;code&gt;call/2&lt;/code&gt; こと機能&lt;a href=&quot;plug.builder#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; を&lt;/a&gt;提供する全てのプラグを使用してリストを実行するために内部的に使用される &lt;code&gt;plug&lt;/code&gt; オーバーライドので、マクロを &lt;code&gt;call/2&lt;/code&gt; 機能は、一般的に使用意味 &lt;code&gt;super&lt;/code&gt; 依然としてプラグチェーンを呼び出すために：</target>
        </trans-unit>
        <trans-unit id="59369e81ae4c82531a9066b2b16f4703c7464cfc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;changeset/2&lt;/code&gt; function first invokes &lt;a href=&quot;ecto.changeset#cast/4&quot;&gt;&lt;code&gt;Ecto.Changeset.cast/4&lt;/code&gt;&lt;/a&gt; with the struct, the parameters and a list of allowed fields; this returns a changeset. The parameters is a map with binary keys and values that will be cast based on the type defined on the schema.</source>
          <target state="translated">&lt;code&gt;changeset/2&lt;/code&gt; 機能最初呼び出す&lt;a href=&quot;ecto.changeset#cast/4&quot;&gt; &lt;code&gt;Ecto.Changeset.cast/4&lt;/code&gt; &lt;/a&gt;構造体、パラメータおよび許可フィールドのリストを有します。これはチェンジセットを返します。パラメータは、スキーマで定義されたタイプに基づいてキャストされるバイナリキーと値のマップです。</target>
        </trans-unit>
        <trans-unit id="fcd29f0f3ca38c03e6a05f563bf7684e923be86d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channel&lt;/code&gt; macro accepts topic patterns in two flavors. A splat (the &lt;code&gt;*&lt;/code&gt; character) argument can be provided as the last character to indicate a &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; match. If a plain string is provided, only that topic will match the channel handler. Most use-cases will use the &lt;code&gt;&quot;topic:*&quot;&lt;/code&gt; pattern to allow more versatile topic scoping.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; マクロは、2種類のトピックのパターンを受け入れます。 &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; 一致を示す最後の文字として、スプラット（ &lt;code&gt;*&lt;/code&gt; 文字）引数を指定できます。プレーンな文字列が指定されている場合、そのトピックのみがチャネルハンドラーに一致します。ほとんどのユースケースでは、 &lt;code&gt;&quot;topic:*&quot;&lt;/code&gt; パターンを使用して、より用途の広いトピックスコープを可能にします。</target>
        </trans-unit>
        <trans-unit id="2294206fb3a150cd9c224614317f9aee05e6f3e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channel&lt;/code&gt; macro accepts topic patterns in two flavors. A splat argument can be provided as the last character to indicate a &amp;ldquo;topic:subtopic&amp;rdquo; match. If a plain string is provided, only that topic will match the channel handler. Most use-cases will use the &amp;ldquo;topic:*&amp;rdquo; pattern to allow more versatile topic scoping.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; マクロは、2種類のトピックのパターンを受け入れます。「トピック：サブトピック」の一致を示す最後の文字としてスプラット引数を指定できます。プレーンな文字列が指定されている場合、そのトピックのみがチャネルハンドラと一致します。ほとんどのユースケースでは、「topic：*」パターンを使用して、より用途の広いトピックスコーピングを可能にします。</target>
        </trans-unit>
        <trans-unit id="0566567c74373795b6261b3892abb0503ed0e625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dynamic&lt;/code&gt; macro can be interpolated at the root of a &lt;code&gt;where&lt;/code&gt;, &lt;code&gt;having&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;'s &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; マクロのルートに補間することができる、 &lt;code&gt;having&lt;/code&gt; 、または &lt;code&gt;join&lt;/code&gt; の &lt;code&gt;on&lt;/code&gt; 。 &lt;code&gt;where&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfbf0996b2b7c1661988ea246da6fcdfd58f43b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encode!/1&lt;/code&gt; function must return a tuple in the format &lt;code&gt;{:socket_push, :text | :binary, String.t | binary}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;encode!/1&lt;/code&gt; 関数はフォーマットのタプルを返す必要があり &lt;code&gt;{:socket_push, :text | :binary, String.t | binary}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="055209e601ab76424461a3d24cfbe4383896ba1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fetch/2&lt;/code&gt; function above fetches all users from the database who have registered presences for the given topic. The presences information is then extended with a &lt;code&gt;:user&lt;/code&gt; key of the user's information, while maintaining the required &lt;code&gt;:metas&lt;/code&gt; field from the original presence data.</source>
          <target state="translated">上記の &lt;code&gt;fetch/2&lt;/code&gt; 関数は、指定されたトピックのプレゼンスを登録したすべてのユーザーをデータベースからフェッチします。次に、プレゼンス情報は、元のプレゼンスデータから必要な &lt;code&gt;:metas&lt;/code&gt; フィールドを維持しながら、ユーザー情報の &lt;code&gt;:user&lt;/code&gt; キーで拡張されます。</target>
        </trans-unit>
        <trans-unit id="6a64f3256798e6a70350cf3a635b234e379dcbdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form&lt;/code&gt; should either be a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">&lt;code&gt;form&lt;/code&gt; どちらかであるべきである&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;によって放出される &lt;code&gt;form_for&lt;/code&gt; 又は原子です。</target>
        </trans-unit>
        <trans-unit id="503560113ad63b1bbf6a1ce7a1a79895b311563a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form&lt;/code&gt; should either be a &lt;a href=&quot;phoenix.html.form#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">&lt;code&gt;form&lt;/code&gt; どちらかであるべきである&lt;a href=&quot;phoenix.html.form#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;によって放出される &lt;code&gt;form_for&lt;/code&gt; 又は原子です。</target>
        </trans-unit>
        <trans-unit id="0f4280e53fd7de2d333eac4e3efda660422aeb8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; contains an &lt;code&gt;opcode&lt;/code&gt; key, this will be either &lt;code&gt;:ping&lt;/code&gt; or &lt;code&gt;:pong&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 含まれている &lt;code&gt;opcode&lt;/code&gt; キーを、これはどちらかになり &lt;code&gt;:ping&lt;/code&gt; または &lt;code&gt;:pong&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a30635ea371ab0a08e396d17ab555117f5134b4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; is the list of query parameters. For example, for a query such as &lt;code&gt;from Post, where: [id: ^123]&lt;/code&gt;, &lt;code&gt;params&lt;/code&gt; will be &lt;code&gt;[123]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; がクエリパラメータのリストです。たとえば、 &lt;code&gt;from Post, where: [id: ^123]&lt;/code&gt; などのクエリの場合：[id：^ 123]、 &lt;code&gt;params&lt;/code&gt; は &lt;code&gt;[123]&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="cc799acb99c7c5e0571705aabef686e2a9bc106f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params_or_body&lt;/code&gt; field must be one of:</source>
          <target state="translated">&lt;code&gt;params_or_body&lt;/code&gt; フィールドは、のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ba32a6b84a77473cde79076160c7d25a5500e027" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; can be either a string or the &lt;code&gt;path_info&lt;/code&gt; segments.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 文字列またはのいずれかであり得る &lt;code&gt;path_info&lt;/code&gt; セグメント。</target>
        </trans-unit>
        <trans-unit id="6557be94c3b172806d0d806c90f7d5a409872519" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; is commonly the request path with optional query string but it may also be a complete URI. When a URI is given, the host and schema will be used as part of the request too.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 一般的に、オプションのクエリ文字列と要求パスですが、それはまた、完全なURIかもしれません。URIが指定されると、ホストとスキーマもリクエストの一部として使用されます。</target>
        </trans-unit>
        <trans-unit id="7722c1018aa1c3f5818dfe70fb8f2d0e854f196c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query_cache&lt;/code&gt; and its state is documented in &lt;a href=&quot;#t:query_cache/0&quot;&gt;&lt;code&gt;query_cache/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;query_cache&lt;/code&gt; 、その状態がに記載されて&lt;a href=&quot;#t:query_cache/0&quot;&gt; &lt;code&gt;query_cache/0&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfd929735613a63a87936d342dcfc378113b7e06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query_meta&lt;/code&gt; field is a map containing some of the fields found in the &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; struct, after they have been normalized. For example, the values &lt;code&gt;selected&lt;/code&gt; by the query, which then have to be returned, can be found in &lt;code&gt;query_meta&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;query_meta&lt;/code&gt; のフィールドがで見つかったいくつかのフィールド含むマップです&lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; の&lt;/a&gt;彼らは正規化された後、構造体を。たとえば、クエリで &lt;code&gt;selected&lt;/code&gt; れた値は、クエリで返される必要がありますが、 &lt;code&gt;query_meta&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="e4f45984330c354b062f13b6711532673248bd5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reply&lt;/code&gt; is a tuple contain an &lt;code&gt;opcode&lt;/code&gt; atom and a message that can be any term. The built-in websocket transport supports both &lt;code&gt;:text&lt;/code&gt; and &lt;code&gt;:binary&lt;/code&gt; opcode and the message must be always iodata. Long polling only supports text opcode.</source>
          <target state="translated">&lt;code&gt;reply&lt;/code&gt; タプルが含まれている &lt;code&gt;opcode&lt;/code&gt; 原子と任意の用語であることができるメッセージを。組み込みのWebSocketトランスポートは &lt;code&gt;:text&lt;/code&gt; と &lt;code&gt;:binary&lt;/code&gt; オペコードの両方をサポートし、メッセージは常にiodataである必要があります。ロングポーリングはテキストオペコードのみをサポートします。</target>
        </trans-unit>
        <trans-unit id="7162959016edba78d69180b52bd5f5a794f9abb9" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Compatible&lt;/strong&gt; cipher suite supports tlsv1, tlsv1.1 and tlsv1.2. Ciphers were based on the OWASP Group B and includes support for RSA or ECDSA certificates. The intention of this configuration is to provide as secure as possible defaults that still maintain support for older browsers and Android versions 4.3 and earlier</source>
          <target state="translated">&lt;strong&gt;互換性のある&lt;/strong&gt;暗号スイートはTLSv1の、tlsv1.1とtlsv1.2をサポートしています。暗号はOWASPグループBに基づいており、RSAまたはECDSA証明書のサポートが含まれています。この構成の目的は、古いブラウザーとAndroidバージョン4.3以前のサポートを引き続き維持する、可能な限り安全なデフォルトを提供することです。</target>
        </trans-unit>
        <trans-unit id="99eef0b8032d9eb66bdd6211a81ce1aa7ab072a6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Strong&lt;/strong&gt; cipher suite only supports tlsv1.2. Ciphers were based on the OWASP Group A+ and includes support for RSA or ECDSA certificates. The intention of this configuration is to provide as secure as possible defaults knowing that it will not be fully compatible with older browsers and operating systems.</source>
          <target state="translated">&lt;strong&gt;強力な&lt;/strong&gt;暗号スイートはtlsv1.2をサポートしています。暗号はOWASPグループA +に基づいており、RSAまたはECDSA証明書のサポートが含まれています。この構成の目的は、古いブラウザやオペレーティングシステムとの完全な互換性がないことを知って、できるだけ安全なデフォルトを提供することです。</target>
        </trans-unit>
        <trans-unit id="1229266af5aeb7323a3edd251846a9e31826c75c" translate="yes" xml:space="preserve">
          <source>The API expected by a module plug is defined as a behaviour by the &lt;a href=&quot;plug#content&quot;&gt;&lt;code&gt;Plug&lt;/code&gt;&lt;/a&gt; module (this module).</source>
          <target state="translated">モジュールプラグによって期待されるAPIは、&lt;a href=&quot;plug#content&quot;&gt; &lt;code&gt;Plug&lt;/code&gt; &lt;/a&gt;モジュール（このモジュール）による動作として定義されます。</target>
        </trans-unit>
        <trans-unit id="42a37edfcc20d368aed11372ea5e77be1563e669" translate="yes" xml:space="preserve">
          <source>The Cowboy adapter for Phoenix.</source>
          <target state="translated">フェニックス用のカウボーイアダプター。</target>
        </trans-unit>
        <trans-unit id="b46e58ab01f0b48b2315edfcf8b2bd6c7e2b3937" translate="yes" xml:space="preserve">
          <source>The Ecto implementation of these operators provide only a thin layer above the adapters. So if your adapter allows you to use them in a certain way (like adding a date and an interval in PostgreSQL), it should work just fine in Ecto queries.</source>
          <target state="translated">これらの演算子のEcto実装は、アダプタの上に薄い層を提供するだけです。ですから、もしあなたのアダプタが特定の方法でこれらの演算子を使用することを許可しているのであれば(PostgreSQLで日付と間隔を追加するような)、Ectoのクエリでは問題なく動作するはずです。</target>
        </trans-unit>
        <trans-unit id="5fc206f389e6b83e4a0d3d847f1852857f161e08" translate="yes" xml:space="preserve">
          <source>The Ecto type</source>
          <target state="translated">エクトタイプの</target>
        </trans-unit>
        <trans-unit id="dfd71c1d2df0567450285bf90b77cd7746d88f5d" translate="yes" xml:space="preserve">
          <source>The Ecto type.</source>
          <target state="translated">エクトタイプです。</target>
        </trans-unit>
        <trans-unit id="8af11c43a109763d817fe84ffba10efa53664805" translate="yes" xml:space="preserve">
          <source>The Ecto.Changeset struct</source>
          <target state="translated">Ecto.Changeset 構造体</target>
        </trans-unit>
        <trans-unit id="2df24cb6684bccd3bc7f1741ada3cd48d84d2739" translate="yes" xml:space="preserve">
          <source>The Elixir compiler would infer that the router depends directly on &lt;code&gt;MyApp.PageController&lt;/code&gt;, which is not true. By using scopes, Phoenix can properly hint to the Elixir compiler the controller is not an actual dependency of the router. This provides more efficient compilation times.</source>
          <target state="translated">Elixirコンパイラーは、ルーターが &lt;code&gt;MyApp.PageController&lt;/code&gt; に直接依存していると推測しますが、これは正しくありません。スコープを使用することにより、PhoenixはElixirコンパイラーに適切にヒントを与えることができ、コントローラーはルーターの実際の依存関係ではありません。これにより、コンパイル時間がより効率的になります。</target>
        </trans-unit>
        <trans-unit id="91a790f106411de498ef0d34631c0e826c9311e7" translate="yes" xml:space="preserve">
          <source>The Elixir compiler would infer that the router depends directly on &lt;code&gt;MyAppWeb.PageController&lt;/code&gt;, which is not true. By using scopes, Phoenix can properly hint to the Elixir compiler the controller is not an actual dependency of the router. This provides more efficient compilation times.</source>
          <target state="translated">Elixirコンパイラは、ルーターが &lt;code&gt;MyAppWeb.PageController&lt;/code&gt; に直接依存していると推測しますが、これは正しくありません。フェニックスはスコープを使用することで、コントローラーがルーターの実際の依存関係ではないことをElixirコンパイラーに適切に示唆できます。これにより、コンパイル時間がより効率的になります。</target>
        </trans-unit>
        <trans-unit id="5341cef174c7e030180c57e14cc0a67dcaa4ae50" translate="yes" xml:space="preserve">
          <source>The MFA is invoked with the request &lt;code&gt;%URI{}&lt;/code&gt; as the first argument, followed by arguments in the MFA list.</source>
          <target state="translated">MFAは、最初の引数としてリクエスト &lt;code&gt;%URI{}&lt;/code&gt; して呼び出され、その後にMFAリストの引数が続きます。</target>
        </trans-unit>
        <trans-unit id="3f1e3a1bf73da067cc61947c8f82ff5aabd55c0a" translate="yes" xml:space="preserve">
          <source>The Phoenix engine that handles the &lt;code&gt;.eex&lt;/code&gt; extension.</source>
          <target state="translated">&lt;code&gt;.eex&lt;/code&gt; 拡張子を処理するフェニックスエンジン。</target>
        </trans-unit>
        <trans-unit id="97f5600c69f57f57eb8f0eebfbf4c79da16ad178" translate="yes" xml:space="preserve">
          <source>The Phoenix engine that handles the &lt;code&gt;.exs&lt;/code&gt; extension.</source>
          <target state="translated">&lt;code&gt;.exs&lt;/code&gt; 拡張子を処理するフェニックスエンジン。</target>
        </trans-unit>
        <trans-unit id="7c893ff0c14a28253d63b6b6ebed042b7d8d1529" translate="yes" xml:space="preserve">
          <source>The Plug connection.</source>
          <target state="translated">プラグの接続です。</target>
        </trans-unit>
        <trans-unit id="922dcb442d54e2eb649f3edaeaaef6847fb03b26" translate="yes" xml:space="preserve">
          <source>The Plug pipeline</source>
          <target state="translated">プラグパイプライン</target>
        </trans-unit>
        <trans-unit id="44b0c7e1640a8c7aaaeec212113c4828dc9f200b" translate="yes" xml:space="preserve">
          <source>The URL generated in the named URL helpers is based on the configuration for &lt;code&gt;:url&lt;/code&gt;, &lt;code&gt;:http&lt;/code&gt; and &lt;code&gt;:https&lt;/code&gt;. However, if for some reason you need to manually control the URL generation, the url helpers also allow you to pass in a &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; struct:</source>
          <target state="translated">名前付きURLヘルパーで生成されるURLは、 &lt;code&gt;:url&lt;/code&gt; 、 &lt;code&gt;:http&lt;/code&gt; および &lt;code&gt;:https&lt;/code&gt; の構成に基づいています。ただし、何らかの理由でURL生成を手動で制御する必要がある場合は、URLヘルパーを使用して&lt;a href=&quot;https://hexdocs.pm/elixir/URI.html&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;構造体を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="439164b882483574280fd7b6ddd89690e34cb2f9" translate="yes" xml:space="preserve">
          <source>The above example matches all the posts which are tied for being the most visited.</source>
          <target state="translated">上記の例では、最も訪問者数の多い投稿と同数の投稿がすべて一致しています。</target>
        </trans-unit>
        <trans-unit id="90e2cd8ec0b373e2a840d10a660fde9ed74b82f4" translate="yes" xml:space="preserve">
          <source>The above is specially useful to dynamically join on existing queries, for example, to dynamically choose a source, or by choosing between public posts or posts that have been recently published:</source>
          <target state="translated">上記は、既存のクエリに動的に結合する場合、例えばソースを動的に選択したり、公開されている投稿や最近公開された投稿の中から選択して結合するなど、特に便利です。</target>
        </trans-unit>
        <trans-unit id="04796d750e2caa373bfdeb6b87607dcbc4363014" translate="yes" xml:space="preserve">
          <source>The action may be any atom.</source>
          <target state="translated">アクションは、任意の原子であってもよい。</target>
        </trans-unit>
        <trans-unit id="88e8e7c6d83aa7057d13eecb45b68bd52baf600f" translate="yes" xml:space="preserve">
          <source>The action may be one of &lt;code&gt;:insert&lt;/code&gt;, &lt;code&gt;:update&lt;/code&gt;, &lt;code&gt;:delete&lt;/code&gt;, &lt;code&gt;:replace&lt;/code&gt;.</source>
          <target state="translated">アクションは、 &lt;code&gt;:insert&lt;/code&gt; 、 &lt;code&gt;:update&lt;/code&gt; 、 &lt;code&gt;:delete&lt;/code&gt; 、 &lt;code&gt;:replace&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="568c1593cd6ebf7435ec1fe16f10bd8ce0b59776" translate="yes" xml:space="preserve">
          <source>The advantage of configuring the schema via those attributes is that they can be set with a macro to configure application wide defaults.</source>
          <target state="translated">これらの属性を使用してスキーマを設定する利点は、マクロを使用してアプリケーション全体のデフォルトを設定できることです。</target>
        </trans-unit>
        <trans-unit id="12424a03c3ce8ae50505e2f4d39be7ede0456bb6" translate="yes" xml:space="preserve">
          <source>The aggregation will fail if any &lt;code&gt;group_by&lt;/code&gt; field is set.</source>
          <target state="translated">&lt;code&gt;group_by&lt;/code&gt; フィールドが設定されている場合、集計は失敗します。</target>
        </trans-unit>
        <trans-unit id="fd3788421c7ea60194ff0b67a68304eebb16c4a2" translate="yes" xml:space="preserve">
          <source>The allowed values are:</source>
          <target state="translated">許可されている値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="84bd30260d2ce05fc55d7e66349743b933c0b4f2" translate="yes" xml:space="preserve">
          <source>The argument given to &lt;code&gt;:select_merge&lt;/code&gt; must always be a map. The value being merged on must be a struct or a map. If it is a struct, the fields merged later on must be part of the struct, otherwise an error is raised.</source>
          <target state="translated">&lt;code&gt;:select_merge&lt;/code&gt; に与える引数は常にマップでなければなりません。マージされる値は、構造体またはマップでなければなりません。構造体の場合、後でマージされるフィールドは構造体の一部である必要があります。そうでない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="21c3223c139377b3829c552e343068576edd50ef" translate="yes" xml:space="preserve">
          <source>The argument, which defaults to &lt;code&gt;Presence&lt;/code&gt;, defines the module name of the Presence tracker.</source>
          <target state="translated">デフォルトが &lt;code&gt;Presence&lt;/code&gt; である引数は、Presenceトラッカーのモジュール名を定義します。</target>
        </trans-unit>
        <trans-unit id="629bfd4051da2fa1a32d9993713c3423b906b41a" translate="yes" xml:space="preserve">
          <source>The arguments are:</source>
          <target state="translated">引数は</target>
        </trans-unit>
        <trans-unit id="2a43c3065c3f85e925ab838ea91589ca677d687c" translate="yes" xml:space="preserve">
          <source>The associated data may be given in different formats:</source>
          <target state="translated">関連するデータは、異なる形式で与えられてもよい。</target>
        </trans-unit>
        <trans-unit id="8af98cf8faab35d0cae464cb5a1cd4f56217e0ba" translate="yes" xml:space="preserve">
          <source>The association happens through a join schema or source, containing foreign keys to the associated schemas. For example, the association below:</source>
          <target state="translated">アソシエーションは、関連するスキーマへの外部キーを含む結合スキーマまたはソースを介して行われます。例えば、以下のようなアソシエーションです。</target>
        </trans-unit>
        <trans-unit id="888fd6b9696e2737394550f497e91b80c4256ba5" translate="yes" xml:space="preserve">
          <source>The association struct for &lt;code&gt;has_one&lt;/code&gt; and &lt;code&gt;has_many&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;has_one&lt;/code&gt; および &lt;code&gt;has_many&lt;/code&gt; アソシエーションのアソシエーション構造体。</target>
        </trans-unit>
        <trans-unit id="c3f2a2472baf2138a4d294eca1e823e09180b2a8" translate="yes" xml:space="preserve">
          <source>The association struct for &lt;code&gt;has_one&lt;/code&gt; and &lt;code&gt;has_many&lt;/code&gt; through associations.</source>
          <target state="translated">関連付けによる &lt;code&gt;has_one&lt;/code&gt; および &lt;code&gt;has_many&lt;/code&gt; の関連付け構造体。</target>
        </trans-unit>
        <trans-unit id="581a7057c4a1b009249b52b9b19b5e74771aaf2a" translate="yes" xml:space="preserve">
          <source>The association struct for &lt;code&gt;many_to_many&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;many_to_many&lt;/code&gt; アソシエーションのためのアソシエーション構造体。</target>
        </trans-unit>
        <trans-unit id="66e6c87098b4230d834f2d5a056760f88cae1720" translate="yes" xml:space="preserve">
          <source>The association struct for a &lt;code&gt;belongs_to&lt;/code&gt; association.</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; アソシエーションのアソシエーション構造体。</target>
        </trans-unit>
        <trans-unit id="5205f046f1668f8df50e1a7dbf5d13e856ecfbab" translate="yes" xml:space="preserve">
          <source>The atoms that can be used in place of the status code in many functions are inflected from the reason phrase of the status code. With the above configuration, the following will all work:</source>
          <target state="translated">多くの関数でステータスコードの代わりに使用できるアトムは、ステータスコードの reason フレーズから屈折しています。上記の構成であれば、以下のようにすべて動作します。</target>
        </trans-unit>
        <trans-unit id="480698b107c5364224299e11120625edd4811333" translate="yes" xml:space="preserve">
          <source>The behaviour above is by design to keep the changes between &lt;code&gt;where&lt;/code&gt; and &lt;code&gt;or_where&lt;/code&gt; minimal. Plus, if you have a keyword list and you would like each pair to be combined using &lt;code&gt;or&lt;/code&gt;, it can be easily done with &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#reduce/3&quot;&gt;&lt;code&gt;Enum.reduce/3&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">上記の動作は、 &lt;code&gt;where&lt;/code&gt; と &lt;code&gt;or_where&lt;/code&gt; の間の変更を最小限に抑えるための仕様です。さらに、キーワードリストがあり、 &lt;code&gt;or&lt;/code&gt; を使用して各ペアを組み合わせる場合は、&lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#reduce/3&quot;&gt; &lt;code&gt;Enum.reduce/3&lt;/code&gt; &lt;/a&gt;を使用して簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="3bc279bd4a05a0f1e2ea5d2a5959b414a345411f" translate="yes" xml:space="preserve">
          <source>The benefit of having explicit changesets is that we can easily provide different changesets for different use cases. For example, one could easily provide specific changesets for registering and updating users:</source>
          <target state="translated">明示的なチェンジセットを持つことの利点は、異なるユースケースに対して異なるチェンジセットを簡単に提供できることです。例えば、ユーザーの登録や更新のための特定のチェンジセットを簡単に提供することができます。</target>
        </trans-unit>
        <trans-unit id="a33976fda84cd70626bac12299c44a1b4814775d" translate="yes" xml:space="preserve">
          <source>The binary is assumed to be encoded in &quot;x-www-form-urlencoded&quot; format. The format is decoded and then validated for proper UTF-8 encoding.</source>
          <target state="translated">バイナリは「x-www-form-urlencoded」形式でエンコードされているものとします。このフォーマットはデコードされた後、適切な UTF-8 エンコーディングであるかどうか検証されます。</target>
        </trans-unit>
        <trans-unit id="47dd120170d17aa1d0f259374abed03b66d4f7d7" translate="yes" xml:space="preserve">
          <source>The cache can be in 3 states, documented below.</source>
          <target state="translated">キャッシュには3つの状態があり、以下に説明します。</target>
        </trans-unit>
        <trans-unit id="8af03881748bd2064e8f807b0d417c42f2bf8b4b" translate="yes" xml:space="preserve">
          <source>The callback invoked in case the adapter needs to inject code</source>
          <target state="translated">アダプタがコードを注入する必要がある場合に呼び出されるコールバックです。</target>
        </trans-unit>
        <trans-unit id="67ef6fb0196e40fee0ed0f4b18726aa52ce6c746" translate="yes" xml:space="preserve">
          <source>The callback invoked in case the adapter needs to inject code.</source>
          <target state="translated">アダプタがコードを注入する必要がある場合に呼び出されるコールバック。</target>
        </trans-unit>
        <trans-unit id="5bbfddd88f74a0c053e76f91efe40fb552ccd1a5" translate="yes" xml:space="preserve">
          <source>The callback will be invoked for all queries, including queries made from associations and preloads. It is not invoked for each individual join inside a query.</source>
          <target state="translated">コールバックは、アソシエーションやプリロードから作成されたクエリを含む、すべてのクエリに対して呼び出されます。クエリ内の個々の結合に対しては呼び出されません。</target>
        </trans-unit>
        <trans-unit id="465bc3533bd128c95cfecfc17237e61c1f085130" translate="yes" xml:space="preserve">
          <source>The catch-all verb, &lt;code&gt;:*&lt;/code&gt;, may also be used to match all HTTP methods.</source>
          <target state="translated">キャッチオール動詞 &lt;code&gt;:*&lt;/code&gt; は、すべてのHTTPメソッドに一致させるためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="abd434dfdfacea66c9516a4ae4981484c3f005f5" translate="yes" xml:space="preserve">
          <source>The certificate files, like keyfile, certfile, cacertfile, dhfile can be given as a relative path. For such, the &lt;code&gt;:otp_app&lt;/code&gt; option must also be given and certificates will be looked from the priv directory of the given application</source>
          <target state="translated">keyfile、certfile、cacertfile、dhfileなどの証明書ファイルは、相対パスで指定できます。そのため、 &lt;code&gt;:otp_app&lt;/code&gt; オプションも指定する必要があり、証明書は指定されたアプリケーションのprivディレクトリから検索されます</target>
        </trans-unit>
        <trans-unit id="a8048a4c70c26c609930c982d23c8e90c3c74914" translate="yes" xml:space="preserve">
          <source>The changeset must have been previously &lt;code&gt;cast&lt;/code&gt; using &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; before this function is invoked.</source>
          <target state="translated">変更セットは、この関数を呼び出す前に、&lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; &lt;/a&gt;を使用して事前に &lt;code&gt;cast&lt;/code&gt; しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="160a4bd88e21d5ca169655a091e64a1bf7eb4d1d" translate="yes" xml:space="preserve">
          <source>The channel that owns the socket will not receive the published message. The event&amp;rsquo;s message must be a serializable map.</source>
          <target state="translated">ソケットを所有するチャネルは、公開されたメッセージを受信しません。イベントのメッセージは、シリアル化可能なマップである必要があります。</target>
        </trans-unit>
        <trans-unit id="14225c93c28bf8ec888fac6e844921cc19f40df5" translate="yes" xml:space="preserve">
          <source>The channel that owns the socket will not receive the published message. The event's message must be a serializable map.</source>
          <target state="translated">ソケットを所有するチャンネルは、公開されたメッセージを受信しません。イベントのメッセージはシリアライズ可能なマップでなければなりません。</target>
        </trans-unit>
        <trans-unit id="a87a04668a71cfebe522dc33304dfa1bb9aafa32" translate="yes" xml:space="preserve">
          <source>The check constraint works by relying on the database to check if the check constraint has been violated or not and, if so, Ecto converts it into a changeset error.</source>
          <target state="translated">チェック制約は、チェック制約が違反しているかどうかをチェックするためにデータベースに依存して動作し、違反している場合、Ectoはそれをチェンジセットエラーに変換します。</target>
        </trans-unit>
        <trans-unit id="e55ac05c44eebe5ced7773b3f09d70f633a77d33" translate="yes" xml:space="preserve">
          <source>The column name is arbitrary and doesn&amp;rsquo;t need to be &lt;code&gt;:lock_version&lt;/code&gt;. Now add a field to the schema too:</source>
          <target state="translated">列名は任意であり、 &lt;code&gt;:lock_version&lt;/code&gt; である必要はありません。次に、スキーマにもフィールドを追加します。</target>
        </trans-unit>
        <trans-unit id="22ce43d9dab9ba680dd79938365e5a367bde9ba9" translate="yes" xml:space="preserve">
          <source>The column name is arbitrary and doesn't need to be &lt;code&gt;:lock_version&lt;/code&gt;. Now add a field to the schema too:</source>
          <target state="translated">列名は任意であり、 &lt;code&gt;:lock_version&lt;/code&gt; である必要はありません。次に、スキーマにもフィールドを追加します。</target>
        </trans-unit>
        <trans-unit id="75c1a428d5c10266245cfaf3fb20fc81b6b19a29" translate="yes" xml:space="preserve">
          <source>The command above means incoming socket connections can be made via a WebSocket connection. Events are routed by topic to channels:</source>
          <target state="translated">上記のコマンドは、WebSocket 接続を介して着信ソケット接続を行うことができることを意味します。イベントはトピックごとにチャンネルにルーティングされます。</target>
        </trans-unit>
        <trans-unit id="c5d46c8827dfa162c3fc24d840406076f113e566" translate="yes" xml:space="preserve">
          <source>The command above means incoming socket connections can be made via the WebSocket transport. Events are routed by topic to channels:</source>
          <target state="translated">上記のコマンドは、WebSocket トランスポートを介して着信ソケット接続を行うことができることを意味します。イベントはトピックごとにチャンネルにルーティングされます。</target>
        </trans-unit>
        <trans-unit id="a6bed204f25946a181bf872deafb93e1b8f811e4" translate="yes" xml:space="preserve">
          <source>The command above will effectively change the value of &lt;code&gt;conn.scheme&lt;/code&gt; by the one sent in &lt;code&gt;x-forwarded-proto&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;x-forwarded-proto&lt;/code&gt; で送信された値によって &lt;code&gt;conn.scheme&lt;/code&gt; の値を効果的に変更します。</target>
        </trans-unit>
        <trans-unit id="7ac44c98f163a9b266d4abe83ee653c46374e382" translate="yes" xml:space="preserve">
          <source>The configuration above takes care of starting the pubsub backend and exposing its functions via the endpoint module. If no adapter but a name is given, nothing will be started, but the pubsub system will work by sending events and subscribing to the given name.</source>
          <target state="translated">上記の設定は、エンドポイントモジュールを介して pubsub バックエンドを起動し、その機能を公開することを担当します。アダプタではなく名前が与えられた場合は何も開始されませんが、 pubsub システムはイベントを送信したり、与えられた名前を購読したりすることで動作します。</target>
        </trans-unit>
        <trans-unit id="8b296a52b4ef4041ccbced6b08d102098ca424ae" translate="yes" xml:space="preserve">
          <source>The configuration above will start a Redis pubsub and register it with name &lt;code&gt;:my_pubsub&lt;/code&gt;.</source>
          <target state="translated">上記の設定はRedis &lt;code&gt;:my_pubsub&lt;/code&gt; を起動し、それを：my_pubsubという名前で登録します。</target>
        </trans-unit>
        <trans-unit id="0c3243504e5d91d9054ed22ddbd7d15078c0b7c3" translate="yes" xml:space="preserve">
          <source>The configuration below can be given to both &lt;code&gt;:websocket&lt;/code&gt; and &lt;code&gt;:longpoll&lt;/code&gt; keys:</source>
          <target state="translated">以下の構成は、 &lt;code&gt;:websocket&lt;/code&gt; キーと &lt;code&gt;:longpoll&lt;/code&gt; キーの両方に指定できます。</target>
        </trans-unit>
        <trans-unit id="468fbe7bf04f16c5040863a52f0d55b418c094c8" translate="yes" xml:space="preserve">
          <source>The connection state is used to track the connection lifecycle. It starts as &lt;code&gt;:unset&lt;/code&gt; but is changed to &lt;code&gt;:set&lt;/code&gt; (via &lt;a href=&quot;#resp/3&quot;&gt;&lt;code&gt;resp/3&lt;/code&gt;&lt;/a&gt;) or &lt;code&gt;:set_chunked&lt;/code&gt; (used only for &lt;code&gt;before_send&lt;/code&gt; callbacks by &lt;a href=&quot;#send_chunked/2&quot;&gt;&lt;code&gt;send_chunked/2&lt;/code&gt;&lt;/a&gt;) or &lt;code&gt;:file&lt;/code&gt; (when invoked via &lt;a href=&quot;#send_file/3&quot;&gt;&lt;code&gt;send_file/3&lt;/code&gt;&lt;/a&gt;). Its final result is &lt;code&gt;:sent&lt;/code&gt;, &lt;code&gt;:file&lt;/code&gt; or &lt;code&gt;:chunked&lt;/code&gt; depending on the response model.</source>
          <target state="translated">接続状態は、接続のライフサイクルを追跡するために使用されます。それはのように開始 &lt;code&gt;:unset&lt;/code&gt; だけに変更される &lt;code&gt;:set&lt;/code&gt; （VIA &lt;a href=&quot;#resp/3&quot;&gt; &lt;code&gt;resp/3&lt;/code&gt; &lt;/a&gt;）または &lt;code&gt;:set_chunked&lt;/code&gt; （のみに使用 &lt;code&gt;before_send&lt;/code&gt; することによってコールバック&lt;a href=&quot;#send_chunked/2&quot;&gt; &lt;code&gt;send_chunked/2&lt;/code&gt; &lt;/a&gt;）または &lt;code&gt;:file&lt;/code&gt; （経由で呼び出されたとき&lt;a href=&quot;#send_file/3&quot;&gt; &lt;code&gt;send_file/3&lt;/code&gt; &lt;/a&gt;）。その最終結果は、応答モデルに応じて &lt;code&gt;:sent&lt;/code&gt; 、 &lt;code&gt;:file&lt;/code&gt; または &lt;code&gt;:chunked&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="48566362cafe346914c5a6f03d80d57d5efcb820" translate="yes" xml:space="preserve">
          <source>The connection will be configured with the given &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;path_or_action&lt;/code&gt; and &lt;code&gt;params_or_body&lt;/code&gt;.</source>
          <target state="translated">接続は、指定された &lt;code&gt;method&lt;/code&gt; 、 &lt;code&gt;path_or_action&lt;/code&gt; 、および &lt;code&gt;params_or_body&lt;/code&gt; で構成されます。</target>
        </trans-unit>
        <trans-unit id="5d448c7ac90d83c40db5bfb1c89d1edee4438350" translate="yes" xml:space="preserve">
          <source>The connection&amp;rsquo;s endpoint will be used for URL generation. See &lt;a href=&quot;#current_path/1&quot;&gt;&lt;code&gt;current_path/1&lt;/code&gt;&lt;/a&gt; for details on how the request path is generated.</source>
          <target state="translated">接続のエンドポイントはURL生成に使用されます。参照してください&lt;a href=&quot;#current_path/1&quot;&gt; &lt;code&gt;current_path/1&lt;/code&gt; &lt;/a&gt;要求パスの生成方法の詳細については。</target>
        </trans-unit>
        <trans-unit id="c7d4bab9d56a81796bac83a3ef42018e650c34ee" translate="yes" xml:space="preserve">
          <source>The context app</source>
          <target state="translated">コンテキストアプリ</target>
        </trans-unit>
        <trans-unit id="0facde72bd2ec18fe66926da4d93236d6aff0bce" translate="yes" xml:space="preserve">
          <source>The context is an Elixir module that serves as an API boundary for the given resource. A context often holds many related resources. Therefore, if the context already exists, it will be augmented with functions for the given resource.</source>
          <target state="translated">コンテキストは、与えられたリソースのAPI境界として機能するElixirモジュールです。コンテキストは多くの関連リソースを保持しています。そのため、コンテキストが既に存在する場合は、与えられたリソースの関数で拡張されます。</target>
        </trans-unit>
        <trans-unit id="f31946d1aec3ffc473697b735314efcde461c192" translate="yes" xml:space="preserve">
          <source>The context is an Elixir module that serves as an API boundary for the given resource. A context often holds many related resources. Therefore, if the context already exists, it will be augmented with functions for the given resource. Note a resource may also be split over distinct contexts (such as Accounts.User and Payments.User).</source>
          <target state="translated">コンテキストは、与えられたリソースのAPI境界として機能するElixirモジュールです。コンテキストは多くの関連リソースを保持しています。そのため、コンテキストがすでに存在する場合は、与えられたリソースの関数で拡張されます。リソースを別のコンテキストに分割することもできることに注意しましょう (Accounts.User や Payments.User など)。</target>
        </trans-unit>
        <trans-unit id="6ef96e1551a038d10e050b366a6393c8066aa195" translate="yes" xml:space="preserve">
          <source>The cookie value is not automatically escaped. Therefore, if you want to store values with comma, quotes, and so on, you need to explicitly escape them or use a function such as &lt;code&gt;Base.encode64(value, padding: false)&lt;/code&gt; when writing and &lt;code&gt;Base.decode64(encoded, padding: false)&lt;/code&gt; when reading the cookie. Padding needs to be disabled since &lt;code&gt;=&lt;/code&gt; is not a valid character in cookie values.</source>
          <target state="translated">cookie値は自動的にエスケープされません。したがって、値をコンマや引用符などで格納する場合は、明示的にエスケープするか、書き込み時に &lt;code&gt;Base.encode64(value, padding: false)&lt;/code&gt; や &lt;code&gt;Base.decode64(encoded, padding: false)&lt;/code&gt; などの関数を使用する必要があります。 false） Cookieを読み取るとき。 &lt;code&gt;=&lt;/code&gt; はCookie値の有効な文字ではないため、パディングを無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="0b75f4c0b3e543c026233950dd58d233dabc0916" translate="yes" xml:space="preserve">
          <source>The cookie value is not automatically escaped. Therefore, if you want to store values with comma, quotes, etc, you need to explicitly escape them or use a function such as &lt;code&gt;Base.encode64(value, padding: false)&lt;/code&gt; when writing and &lt;code&gt;Base.decode64(encoded, padding: false)&lt;/code&gt; when reading the cookie. Padding needs to be disabled since &lt;code&gt;=&lt;/code&gt; is not a valid character in cookie values.</source>
          <target state="translated">cookie値は自動的にエスケープされません。したがって、コンマ、引用符などで値を格納する場合は、それらを明示的にエスケープするか、書き込み時に &lt;code&gt;Base.encode64(value, padding: false)&lt;/code&gt; や &lt;code&gt;Base.decode64(encoded, padding: false)&lt;/code&gt; などの関数を使用する必要があります。クッキーを読むとき。 &lt;code&gt;=&lt;/code&gt; はCookie値の有効な文字ではないため、パディングを無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="bc170b7df02149d4f1b41d395782c4bf6a42233e" translate="yes" xml:space="preserve">
          <source>The cookie value that will be sent in cookie headers. This value should be base64 encoded to avoid security issues</source>
          <target state="translated">クッキーヘッダで送信されるクッキーの値。この値はセキュリティの問題を避けるためにbase64エンコードされていなければなりません。</target>
        </trans-unit>
        <trans-unit id="4ed8e930bd798b7f59e1b3906dae0c5ae18ae5f5" translate="yes" xml:space="preserve">
          <source>The cookie value that will be sent in cookie headers. This value should be base64 encoded to avoid security issues.</source>
          <target state="translated">クッキーヘッダで送信されるクッキーの値。この値はセキュリティの問題を避けるためにbase64エンコードされている必要があります。</target>
        </trans-unit>
        <trans-unit id="a8e46ad87d3469e7e9f3187e46155cee02aaf64d" translate="yes" xml:space="preserve">
          <source>The current schema belongs to zero or one records of the other schema. The other schema often has a &lt;code&gt;has_one&lt;/code&gt; or a &lt;code&gt;has_many&lt;/code&gt; field with the reverse association.</source>
          <target state="translated">現在のスキーマは、他のスキーマのゼロまたは1つのレコードに属しています。他のスキーマには、逆の関連付けを持つ &lt;code&gt;has_one&lt;/code&gt; または &lt;code&gt;has_many&lt;/code&gt; フィールドがよくあります。</target>
        </trans-unit>
        <trans-unit id="37f668c1bd4c3e820e33a15f5f380f812917f51d" translate="yes" xml:space="preserve">
          <source>The current schema has zero or more records of the other schema embedded inside of it. Embeds have all the things regular schemas have.</source>
          <target state="translated">現在のスキーマの内部には、他のスキーマのレコードが 0 個以上埋め込まれています。埋め込みは、通常のスキーマが持っているすべてのものを持っています。</target>
        </trans-unit>
        <trans-unit id="bb6532e1cfbc40c65e0d70c093c2d84b8c13c97c" translate="yes" xml:space="preserve">
          <source>The current schema has zero or more records of the other schema. The other schema often has a &lt;code&gt;belongs_to&lt;/code&gt; field with the reverse association.</source>
          <target state="translated">現在のスキーマには、他のスキーマの0個以上のレコードがあります。他のスキーマには、多くの場合、逆の関連付けを持つ &lt;code&gt;belongs_to&lt;/code&gt; フィールドがあります。</target>
        </trans-unit>
        <trans-unit id="a2400e9bff3b3fcf167090fc4f9675aa1dafa03a" translate="yes" xml:space="preserve">
          <source>The current schema has zero or one records of the other schema embedded inside of it. It uses a field similar to the &lt;code&gt;:map&lt;/code&gt; type for storage, but allows embeds to have all the things regular schema can.</source>
          <target state="translated">現在のスキーマには、他のスキーマのレコードが0個または1個埋め込まれています。ストレージには &lt;code&gt;:map&lt;/code&gt; タイプと同様のフィールドを使用しますが、埋め込みで通常のスキーマで可能なすべてのことを許可できます。</target>
        </trans-unit>
        <trans-unit id="543e48ecf9a036c8c3265d90420f7f54855d1f07" translate="yes" xml:space="preserve">
          <source>The current schema has zero or one records of the other schema. The other schema often has a &lt;code&gt;belongs_to&lt;/code&gt; field with the reverse association.</source>
          <target state="translated">現在のスキーマには、他のスキーマのゼロまたは1つのレコードがあります。他のスキーマには、多くの場合、逆の関連付けを持つ &lt;code&gt;belongs_to&lt;/code&gt; フィールドがあります。</target>
        </trans-unit>
        <trans-unit id="a89c1ce17f89437f89ff113dd237432b1779e13f" translate="yes" xml:space="preserve">
          <source>The current time in UTC is retrieved from Elixir and not from the database.</source>
          <target state="translated">現在のUTC時間はElixirから取得したものであり、データベースから取得したものではありません。</target>
        </trans-unit>
        <trans-unit id="b052c5d0d8705bd378272066bfc771be8f95160c" translate="yes" xml:space="preserve">
          <source>The data is stored in ETS in the following format:</source>
          <target state="translated">でETSに格納されています。</target>
        </trans-unit>
        <trans-unit id="1acda630ba32f073701a386f5cfe162756e7c372" translate="yes" xml:space="preserve">
          <source>The data stored in the token is signed to prevent tampering but not encrypted. This means it is safe to store identification information (such as user IDs) but should not be used to store confidential information (such as credit card numbers).</source>
          <target state="translated">トークンに格納されたデータは、改ざんを防ぐために署名されていますが、暗号化されていません。つまり、識別情報(ユーザーIDなど)の保存は安全ですが、機密情報(クレジットカード番号など)の保存には使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="25b03cf10e6fc6af894d1777f43a9e4564e801a7" translate="yes" xml:space="preserve">
          <source>The datetime types</source>
          <target state="translated">日付の種類</target>
        </trans-unit>
        <trans-unit id="01d063536b5fd16a46117b63d1178dfcad16b720" translate="yes" xml:space="preserve">
          <source>The default HTML encoder that ships with Phoenix.</source>
          <target state="translated">Phoenixに同梱されているデフォルトのHTMLエンコーダ。</target>
        </trans-unit>
        <trans-unit id="b6a5014904611a0144837aa761a0d9c7ac17de4a" translate="yes" xml:space="preserve">
          <source>The default format is used when none is set in the connection</source>
          <target state="translated">接続に何も設定されていない場合は、デフォルトのフォーマットが使用されます。</target>
        </trans-unit>
        <trans-unit id="eb15ee34b6e76bea7879309e5d7b64c6bf0dee90" translate="yes" xml:space="preserve">
          <source>The default format is used when none is set in the connection.</source>
          <target state="translated">接続に何も設定されていない場合は、デフォルトのフォーマットが使用されます。</target>
        </trans-unit>
        <trans-unit id="565d3288130af0242285fb747529bfd66f40c7d5" translate="yes" xml:space="preserve">
          <source>The default implementation simply passes &lt;code&gt;presences&lt;/code&gt; through unchanged.</source>
          <target state="translated">デフォルトの実装では、 &lt;code&gt;presences&lt;/code&gt; を変更せずに渡すだけです。</target>
        </trans-unit>
        <trans-unit id="6676a691528a06988caceda0bdea8ffb85ace6e8" translate="yes" xml:space="preserve">
          <source>The default option can be given to populate the fields if none is given:</source>
          <target state="translated">何も指定されていない場合は、デフォルトのオプションを指定してフィールドを入力することができます。</target>
        </trans-unit>
        <trans-unit id="2c66e666e4d64f7851485bf4d02d2f008e867eb1" translate="yes" xml:space="preserve">
          <source>The default router is inflected from the application name unless a configuration named &lt;code&gt;:namespace&lt;/code&gt; is set inside your application configuration. For example, the configuration:</source>
          <target state="translated">アプリケーション構成内で &lt;code&gt;:namespace&lt;/code&gt; という名前の構成が設定されていない限り、デフォルトルーターはアプリケーション名から影響を受けます。たとえば、設定：</target>
        </trans-unit>
        <trans-unit id="bef1bc8ef401a761e7d8eba7f4227945005b964c" translate="yes" xml:space="preserve">
          <source>The definition of basic custom types and all of its callbacks is available in this module. You can learn more about parameterized types in &lt;a href=&quot;ecto.parameterizedtype&quot;&gt;&lt;code&gt;Ecto.ParameterizedType&lt;/code&gt;&lt;/a&gt;. If in doubt, prefer to use basic custom types and rely on parameterized types if you need the extra functionality.</source>
          <target state="translated">このモジュールでは、基本的なカスタムタイプとそのすべてのコールバックの定義を利用できます。パラメータ化された型について詳しくは、&lt;a href=&quot;ecto.parameterizedtype&quot;&gt; &lt;code&gt;Ecto.ParameterizedType&lt;/code&gt; をご覧ください&lt;/a&gt;。疑わしい場合は、基本的なカスタムタイプを使用し、追加の機能が必要な場合はパラメーター化されたタイプに依存することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c9bea1b5faf766b56d93add1c5f07efe92cf9dfa" translate="yes" xml:space="preserve">
          <source>The difference between them is that most validations can be executed without a need to interact with the database and, therefore, are always executed before attempting to insert or update the entry in the database. Some validations may happen against the database but they are inherently unsafe. Those validations start with a &lt;code&gt;unsafe_&lt;/code&gt; prefix, such as &lt;a href=&quot;#unsafe_validate_unique/3&quot;&gt;&lt;code&gt;unsafe_validate_unique/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それらの違いは、ほとんどの検証はデータベースと対話する必要なしに実行できるため、常にデータベースのエントリを挿入または更新する前に実行されることです。一部の検証はデータベースに対して行われる可能性がありますが、本質的に安全ではありません。これらの検証は、&lt;a href=&quot;#unsafe_validate_unique/3&quot;&gt; &lt;code&gt;unsafe_validate_unique/3&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;unsafe_&lt;/code&gt; プレフィックスで始まります。</target>
        </trans-unit>
        <trans-unit id="b905a6abee1408a861b937e78adce0825322527a" translate="yes" xml:space="preserve">
          <source>The dispatcher must be available on all nodes running the PubSub system. The &lt;code&gt;dispatch/3&lt;/code&gt; function of the given module will be invoked with the subscriptions entries, the broadcaster identifier (either a pid or &lt;code&gt;:none&lt;/code&gt;), and the message to broadcast.</source>
          <target state="translated">ディスパッチャは、PubSubシステムを実行しているすべてのノードで使用可能である必要があります。指定されたモジュールの &lt;code&gt;dispatch/3&lt;/code&gt; 関数は、サブスクリプションエントリ、ブロードキャスター識別子（pidまたは &lt;code&gt;:none&lt;/code&gt; のいずれか）、およびブロードキャストするメッセージを使用して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="90a466df0e05cd07db8216347664891ea2d6f388" translate="yes" xml:space="preserve">
          <source>The distinction whether to insert or update will be made on the &lt;a href=&quot;ecto.schema.metadata&quot;&gt;&lt;code&gt;Ecto.Schema.Metadata&lt;/code&gt;&lt;/a&gt; field &lt;code&gt;:state&lt;/code&gt;. The &lt;code&gt;:state&lt;/code&gt; is automatically set by Ecto when loading or building a schema.</source>
          <target state="translated">挿入するか更新するかの区別は、&lt;a href=&quot;ecto.schema.metadata&quot;&gt; &lt;code&gt;Ecto.Schema.Metadata&lt;/code&gt; &lt;/a&gt;フィールド &lt;code&gt;:state&lt;/code&gt; で行われます。 &lt;code&gt;:state&lt;/code&gt; ロードまたはスキーマを構築するときに自動的にエクトによって設定されます。</target>
        </trans-unit>
        <trans-unit id="98110b4f952a325165904e437acdb05dceca3afb" translate="yes" xml:space="preserve">
          <source>The download is achieved by setting &quot;content-disposition&quot; to attachment. The &quot;content-type&quot; will also be set based on the extension of the given filename but can be customized via the &lt;code&gt;:content_type&lt;/code&gt; and &lt;code&gt;:charset&lt;/code&gt; options.</source>
          <target state="translated">ダウンロードは、「content-disposition」を添付ファイルに設定することで実行されます。「content-type」も指定されたファイル名の拡張子に基づいて設定されますが、 &lt;code&gt;:content_type&lt;/code&gt; および &lt;code&gt;:charset&lt;/code&gt; オプションを使用してカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="2bea122452a37ef030f627235ed1844a3ddfe593" translate="yes" xml:space="preserve">
          <source>The download is achieved by setting &amp;ldquo;content-disposition&amp;rdquo; to attachment. The &amp;ldquo;content-type&amp;rdquo; will also be set based on the extension of the given filename but can be customized via the &lt;code&gt;:content_type&lt;/code&gt; and &lt;code&gt;:charset&lt;/code&gt; options.</source>
          <target state="translated">ダウンロードは、「content-disposition」を添付ファイルに設定することで実現されます。「コンテンツタイプ」も、指定されたファイル名の拡張子に基づいて設定されますが、 &lt;code&gt;:content_type&lt;/code&gt; および &lt;code&gt;:charset&lt;/code&gt; オプションを使用してカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="305f411cb067461e7008b3366143db8315830828" translate="yes" xml:space="preserve">
          <source>The embedded may or may not have a primary key. Ecto use the primary keys to detect if an embed is being updated or not. If a primary is not present and you still want the list of embeds to be updated, &lt;code&gt;:on_replace&lt;/code&gt; must be set to &lt;code&gt;:delete&lt;/code&gt;, forcing all current embeds to be deleted and replaced by new ones whenever a new list of embeds is set.</source>
          <target state="translated">埋め込みには、主キーがある場合とない場合があります。外部キーは、主キーを使用して、埋め込みが更新されているかどうかを検出します。プライマリが存在せず、埋め込みのリストを更新したい場合は、 &lt;code&gt;:on_replace&lt;/code&gt; を &lt;code&gt;:delete&lt;/code&gt; に設定して、現在の埋め込みをすべて削除し、新しい埋め込みのリストが設定されるたびに新しい埋め込みに強制的に置き換える必要があります。</target>
        </trans-unit>
        <trans-unit id="9851fea47b9bbc161a06c36308d9e5222d41ca5d" translate="yes" xml:space="preserve">
          <source>The embedded may or may not have a primary key. Ecto use the primary keys to detect if an embed is being updated or not. If a primary is not present, &lt;code&gt;:on_replace&lt;/code&gt; should be set to either &lt;code&gt;:update&lt;/code&gt; or &lt;code&gt;:delete&lt;/code&gt; if there is a desire to either update or delete the current embed when a new one is set.</source>
          <target state="translated">埋め込みには、主キーがある場合とない場合があります。外部キーは、主キーを使用して、埋め込みが更新されているかどうかを検出します。プライマリが存在しない場合、新しい埋め込みが設定されたときに現在の埋め込みを更新または削除 &lt;code&gt;:delete&lt;/code&gt; 必要がある場合は、 &lt;code&gt;:on_replace&lt;/code&gt; を &lt;code&gt;:update&lt;/code&gt; または：deleteに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1949ed7b2d6dffd9e7c7748d7bd6bc3abd5dcf0c" translate="yes" xml:space="preserve">
          <source>The embedded may or may not have a primary key. Ecto uses the primary keys to detect if an embed is being updated or not. If a primary is not present and you still want the list of embeds to be updated, &lt;code&gt;:on_replace&lt;/code&gt; must be set to &lt;code&gt;:delete&lt;/code&gt;, forcing all current embeds to be deleted and replaced by new ones whenever a new list of embeds is set.</source>
          <target state="translated">埋め込みには主キーがある場合とない場合があります。Ectoは主キーを使用して、埋め込みが更新されているかどうかを検出します。プライマリが存在せず、埋め込みのリストを更新する必要がある場合は、 &lt;code&gt;:on_replace&lt;/code&gt; を &lt;code&gt;:delete&lt;/code&gt; に設定する必要があります。これにより、新しい埋め込みリストが設定されるたびに、現在のすべての埋め込みが削除され、新しい埋め込みに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="af9a17476a78a7a92bdf8fb962890959f1ad1049" translate="yes" xml:space="preserve">
          <source>The embedded may or may not have a primary key. Ecto uses the primary keys to detect if an embed is being updated or not. If a primary key is not present, &lt;code&gt;:on_replace&lt;/code&gt; should be set to either &lt;code&gt;:update&lt;/code&gt; or &lt;code&gt;:delete&lt;/code&gt; if there is a desire to either update or delete the current embed when a new one is set.</source>
          <target state="translated">埋め込みには主キーがある場合とない場合があります。Ectoは主キーを使用して、埋め込みが更新されているかどうかを検出します。主キーが存在しない場合、新しい埋め込みが設定されたときに現在の埋め込みを更新または削除 &lt;code&gt;:delete&lt;/code&gt; 必要がある場合は、 &lt;code&gt;:on_replace&lt;/code&gt; を &lt;code&gt;:update&lt;/code&gt; または：deleteのいずれかに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="240ba5b0f9226d65d40a221b0aaca6577ac67121" translate="yes" xml:space="preserve">
          <source>The encoding of server data and the decoding of client data is done according to a serializer, defined in &lt;a href=&quot;phoenix.socket.serializer&quot;&gt;&lt;code&gt;Phoenix.Socket.Serializer&lt;/code&gt;&lt;/a&gt;. By default, JSON encoding is used to broker messages to and from clients with &lt;code&gt;Phoenix.Socket.V2.JSONSerializer&lt;/code&gt;.</source>
          <target state="translated">サーバーデータのエンコードとクライアントデータのデコードは、&lt;a href=&quot;phoenix.socket.serializer&quot;&gt; &lt;code&gt;Phoenix.Socket.Serializer&lt;/code&gt; &lt;/a&gt;で定義されているシリアライザーに従って行われます。デフォルトでは、JSONエンコーディングは、 &lt;code&gt;Phoenix.Socket.V2.JSONSerializer&lt;/code&gt; を使用してクライアントとの間でメッセージを仲介するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ffc586997cb9ff4e598fbaf2d150c17e623488e6" translate="yes" xml:space="preserve">
          <source>The endpoint being tested is accessed via the &lt;code&gt;@endpoint&lt;/code&gt; module attribute.</source>
          <target state="translated">テストされるエンドポイントには、 &lt;code&gt;@endpoint&lt;/code&gt; モジュール属性を介してアクセスします。</target>
        </trans-unit>
        <trans-unit id="1085ea34a986c448fabcc15a67e4b94b2cb117ef" translate="yes" xml:space="preserve">
          <source>The endpoint is the boundary where all requests to your web application start. It is also the interface your application provides to the underlying web servers.</source>
          <target state="translated">エンドポイントは、Web アプリケーションへのすべてのリクエストが始まる境界線です。また、アプリケーションが基盤となるウェブサーバーに提供するインターフェースでもあります。</target>
        </trans-unit>
        <trans-unit id="a71e0101c0d6d0c31084c2c74654c8ab5ada1e0f" translate="yes" xml:space="preserve">
          <source>The entry point for defining forms in Phoenix is with the &lt;a href=&quot;#form_for/4&quot;&gt;&lt;code&gt;form_for/4&lt;/code&gt;&lt;/a&gt; function. For this example, we will use &lt;code&gt;Ecto.Changeset&lt;/code&gt;, which integrates nicely with Phoenix forms via the &lt;code&gt;phoenix_ecto&lt;/code&gt; package.</source>
          <target state="translated">フェニックスでフォームを定義するためのエントリポイントは、&lt;a href=&quot;#form_for/4&quot;&gt; &lt;code&gt;form_for/4&lt;/code&gt; &lt;/a&gt;関数です。この例では、 &lt;code&gt;phoenix_ecto&lt;/code&gt; パッケージを介してPhoenixフォームとうまく統合する &lt;code&gt;Ecto.Changeset&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="04c6d1a307f90ddcd28dacda1e19147d95f5924b" translate="yes" xml:space="preserve">
          <source>The event callback is called &lt;em&gt;before&lt;/em&gt; the event happens (in this case, before the view is rendered) with the atom &lt;code&gt;:start&lt;/code&gt; as the first argument; see the &amp;ldquo;Before clause&amp;rdquo; section below.</source>
          <target state="translated">イベントコールバックは、最初の引数としてアトム &lt;code&gt;:start&lt;/code&gt; を使用して、イベントが発生&lt;em&gt;する前&lt;/em&gt;（この場合はビューがレンダリングされる&lt;em&gt;前&lt;/em&gt;）に呼び出されます。下記の「Before句」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="757e085e21ddd74789de7bdb0bbe8f07bed88c4b" translate="yes" xml:space="preserve">
          <source>The event callback sequence is:</source>
          <target state="translated">イベントコールバックのシーケンスは</target>
        </trans-unit>
        <trans-unit id="8146ea0120720d389e5e641e32fe81e0949316e4" translate="yes" xml:space="preserve">
          <source>The event occurs (in this case, the view is rendered).</source>
          <target state="translated">イベントが発生します(この場合、ビューがレンダリングされます)。</target>
        </trans-unit>
        <trans-unit id="ae116b624d5b59052eb64f10c8d76ec7dd431042" translate="yes" xml:space="preserve">
          <source>The event&amp;rsquo;s message must be a serializable map.</source>
          <target state="translated">イベントのメッセージは、シリアル化可能なマップである必要があります。</target>
        </trans-unit>
        <trans-unit id="59c29c61995ac6adc27d72e58769a2befdbcb1f2" translate="yes" xml:space="preserve">
          <source>The event's message must be a serializable map.</source>
          <target state="translated">イベントのメッセージは、シリアライズ可能なマップである必要があります。</target>
        </trans-unit>
        <trans-unit id="c6f8e9a757d63677055c9099b13a0e178eebb865" translate="yes" xml:space="preserve">
          <source>The example above does not use &lt;code&gt;in&lt;/code&gt; because &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; do not require a reference to the data source. However, extending the query with a where expression would require the use of &lt;code&gt;in&lt;/code&gt;:</source>
          <target state="translated">上記の例 &lt;code&gt;in&lt;/code&gt; 、 &lt;code&gt;limit&lt;/code&gt; と &lt;code&gt;offset&lt;/code&gt; はデータソースへの参照を必要としないため、では使用しません。ただし、where式でクエリを拡張するには &lt;code&gt;in&lt;/code&gt; 使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2a68a419c4788a627e1c523a21aa9c289200ba77" translate="yes" xml:space="preserve">
          <source>The example above renders a template &quot;show.html&quot; from the &lt;code&gt;MyAppWeb.UserView&lt;/code&gt; and sets the response content type to &quot;text/html&quot;.</source>
          <target state="translated">上記の例では、 &lt;code&gt;MyAppWeb.UserView&lt;/code&gt; からテンプレート「show.html」をレンダリングし、応答コンテンツタイプを「text / html」に設定しています。</target>
        </trans-unit>
        <trans-unit id="323718568a794b79b80b9c7f90d47fc0dddb0e78" translate="yes" xml:space="preserve">
          <source>The example above renders a template &amp;ldquo;show.html&amp;rdquo; from the &lt;code&gt;MyApp.UserView&lt;/code&gt; and sets the response content type to &amp;ldquo;text/html&amp;rdquo;.</source>
          <target state="translated">上記の例では、 &lt;code&gt;MyApp.UserView&lt;/code&gt; からテンプレート「show.html」をレンダリングし、応答のコンテンツタイプを「text / html」に設定しています。</target>
        </trans-unit>
        <trans-unit id="263bcd680d02d0dedd523e55597569bfc7eb4085" translate="yes" xml:space="preserve">
          <source>The example above will fetch all posts from the database and then do a separate query returning all comments associated with the given posts. The comments are then processed and associated to each returned &lt;code&gt;post&lt;/code&gt; under the &lt;code&gt;comments&lt;/code&gt; field.</source>
          <target state="translated">上記の例では、データベースからすべての投稿をフェッチしてから、別のクエリを実行して、指定された投稿に関連付けられているすべてのコメントを返します。次にコメントが処理され、 &lt;code&gt;comments&lt;/code&gt; フィールドの下で返された各 &lt;code&gt;post&lt;/code&gt; 関連付けられます。</target>
        </trans-unit>
        <trans-unit id="b71e88e7ed588cf8386d56a8b902c449be09cbf4" translate="yes" xml:space="preserve">
          <source>The example above will issue two queries, one for loading posts and then another for loading the comments associated with the posts. Comments will be ordered by &lt;code&gt;published_at&lt;/code&gt;.</source>
          <target state="translated">上記の例では、2つのクエリを発行します。1つは投稿の読み込み用、もう1つは投稿に関連付けられたコメントの読み込み用です。コメントは、 &lt;code&gt;published_at&lt;/code&gt; によって順序付けられます。</target>
        </trans-unit>
        <trans-unit id="924e9a6b17eb83d28266379ce64871ee77dfc336" translate="yes" xml:space="preserve">
          <source>The example above will work if the input query has 1 or 10 bindings. As long as the number of bindings is less than the number of from + joins, Ecto will match only what you have specified. The first binding always matches the source given in &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="translated">上記の例は、入力クエリに1または10のバインディングがある場合に機能します。バインディングの数がfrom +結合の数よりも少ない限り、Ectoは指定したものだけに一致します。最初のバインディングは常に &lt;code&gt;from&lt;/code&gt; で指定されたソースと一致します。</target>
        </trans-unit>
        <trans-unit id="597f52cde33ea3d40cd216eeff98f0f27574f4d6" translate="yes" xml:space="preserve">
          <source>The exclusion constraint works by relying on the database to check if the exclusion constraint has been violated or not and, if so, Ecto converts it into a changeset error.</source>
          <target state="translated">除外制約は、データベースに依存して除外制約が違反しているかどうかをチェックし、違反している場合、Ectoはそれをチェンジセットエラーに変換することで動作します。</target>
        </trans-unit>
        <trans-unit id="77dfbd136a0c7b400c0e6cf8e244d45dcfb4c0ae" translate="yes" xml:space="preserve">
          <source>The field name will be used as is to read and write to the database by all of the built-in adapters unless overridden with the &lt;code&gt;:source&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; オプションでオーバーライドされない限り、フィールド名は、すべての組み込みアダプターによるデータベースの読み取りおよび書き込みにそのまま使用されます。</target>
        </trans-unit>
        <trans-unit id="28d67d8abd4a4854029b14119fba01291b055159" translate="yes" xml:space="preserve">
          <source>The fields are:</source>
          <target state="translated">フィールドは</target>
        </trans-unit>
        <trans-unit id="23e99979ef97808c907b0384c23bb476163e1c89" translate="yes" xml:space="preserve">
          <source>The fields generated by this macro will automatically be set to the current time when inserting and updating values in a repository.</source>
          <target state="translated">このマクロで生成されたフィールドは、リポジトリに値を挿入したり更新したりする際に、自動的に現在の時刻に設定されます。</target>
        </trans-unit>
        <trans-unit id="b3a7c7070bdd1da6f37c5437d705a4f71db3064c" translate="yes" xml:space="preserve">
          <source>The first argument can also be a &lt;code&gt;types&lt;/code&gt; map:</source>
          <target state="translated">最初の引数は &lt;code&gt;types&lt;/code&gt; マップにすることもできます：</target>
        </trans-unit>
        <trans-unit id="49bed0abeb1db58200a4ef0db4c5da86c91aa45c" translate="yes" xml:space="preserve">
          <source>The first argument can be a a schema module, or a map (of types) and determines the return value: a struct or a map, respectively.</source>
          <target state="translated">最初の引数はスキーマモジュールかマップ(型の)で、戻り値はそれぞれ構造体かマップかを決定します。</target>
        </trans-unit>
        <trans-unit id="ec0251c98fcdc3180f663f2d434e28c1ff287694" translate="yes" xml:space="preserve">
          <source>The first argument can be a an embedded schema module, or a map (of types) and determines the return value: a struct or a map, respectively.</source>
          <target state="translated">最初の引数は、組み込みスキーマモジュール、またはマップ(型の)を指定し、戻り値を決定します。</target>
        </trans-unit>
        <trans-unit id="500f8521003b9bf543828ad835d40f5eeb6af0a7" translate="yes" xml:space="preserve">
          <source>The first argument is a &lt;code&gt;datetime&lt;/code&gt;, the second one is the count for the interval, which may be either positive or negative and the interval value:</source>
          <target state="translated">最初の引数は &lt;code&gt;datetime&lt;/code&gt; 、2番目の引数は間隔のカウントです。これは正または負のいずれかであり、間隔の値です。</target>
        </trans-unit>
        <trans-unit id="c0e54dc181af943e0b3cceca923e134cbcf1e0c6" translate="yes" xml:space="preserve">
          <source>The first argument is the context module followed by the schema module and its plural name (used as the schema table name).</source>
          <target state="translated">最初の引数はコンテキストモジュールで、その後にスキーマモジュールとその複数形の名前(スキーマテーブル名として使用されます)が続きます。</target>
        </trans-unit>
        <trans-unit id="4865c8fae49bc4316a74325ea7181643af770fb4" translate="yes" xml:space="preserve">
          <source>The first argument is the context the callback is being invoked. If it is called because the Repo supervisor is starting, it will be &lt;code&gt;:supervisor&lt;/code&gt;. It will be &lt;code&gt;:runtime&lt;/code&gt; if it is called for reading configuration without actually starting a process.</source>
          <target state="translated">最初の引数は、コールバックが呼び出されているコンテキストです。Repoスーパーバイザーが開始されているために呼び出された場合は、 &lt;code&gt;:supervisor&lt;/code&gt; になります。実際にプロセスを開始せずに構成を読み取るために呼び出された場合は、 &lt;code&gt;:runtime&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="abeed1d3f6ef43117d9c456048712438c831279a" translate="yes" xml:space="preserve">
          <source>The first argument is the module name followed by its plural name (used for resources and schema).</source>
          <target state="translated">最初の引数はモジュール名の後に複数の名前が続きます(リソースやスキーマに使用されます)。</target>
        </trans-unit>
        <trans-unit id="964c9cb93e956fb751ffeb1617eb35e4e1dd5ef8" translate="yes" xml:space="preserve">
          <source>The first argument is the module name followed by its plural name (used for the schema).</source>
          <target state="translated">最初の引数はモジュール名の後に複数の名前が続きます(スキーマに使用されます)。</target>
        </trans-unit>
        <trans-unit id="35f70a15e0108aa4e4b74899ee54723e2a713861" translate="yes" xml:space="preserve">
          <source>The first argument is the path where the static files are located. The &lt;code&gt;-o&lt;/code&gt; option indicates the path that will be used to save the digested and compressed files.</source>
          <target state="translated">最初の引数は、静的ファイルが配置されているパスです。 &lt;code&gt;-o&lt;/code&gt; オプションは、消化し、圧縮されたファイルを保存するために使用される経路を示しています。</target>
        </trans-unit>
        <trans-unit id="2fe4f44a0f785ff10de251522a37c07e0b5ab7bb" translate="yes" xml:space="preserve">
          <source>The first argument is the schema module followed by its plural name (used as the table name).</source>
          <target state="translated">最初の引数はスキーマモジュールの後に複数の名前が続きます(テーブル名として使用されます)。</target>
        </trans-unit>
        <trans-unit id="e4b02077d7ac802cfee0627d193ca5cd0a9be149" translate="yes" xml:space="preserve">
          <source>The first argument is the schema module followed by the schema attributes</source>
          <target state="translated">最初の引数はスキーマモジュールで、その後にスキーマ属性が続きます。</target>
        </trans-unit>
        <trans-unit id="d11a276567643357f029e74ffc86b05f8be866b2" translate="yes" xml:space="preserve">
          <source>The first argument is the schema module followed by the schema attributes.</source>
          <target state="translated">最初の引数はスキーマモジュールで、その後にスキーマ属性が続きます。</target>
        </trans-unit>
        <trans-unit id="85394c0d9cf1f3bd97ab6925f698c432e75e0ba3" translate="yes" xml:space="preserve">
          <source>The first argument should either be a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">最初の引数のいずれかでなければならない&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;によって放出される &lt;code&gt;form_for&lt;/code&gt; 又は原子です。</target>
        </trans-unit>
        <trans-unit id="4d5565085e0846e63bdeb7de3b6914b3e5d53f51" translate="yes" xml:space="preserve">
          <source>The first argument to both &lt;a href=&quot;#sign/4&quot;&gt;&lt;code&gt;sign/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#verify/4&quot;&gt;&lt;code&gt;verify/4&lt;/code&gt;&lt;/a&gt; can be one of:</source>
          <target state="translated">&lt;a href=&quot;#sign/4&quot;&gt; &lt;code&gt;sign/4&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#verify/4&quot;&gt; &lt;code&gt;verify/4&lt;/code&gt; の&lt;/a&gt;両方に対する最初の引数は、次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="d49a3d210dbcdc92bf9475253ce66aa64aa7725b" translate="yes" xml:space="preserve">
          <source>The first field name, &lt;code&gt;:email&lt;/code&gt; in this case, will be used as the error key to the changeset errors keyword list. For example, the above &lt;a href=&quot;#unique_constraint/3&quot;&gt;&lt;code&gt;unique_constraint/3&lt;/code&gt;&lt;/a&gt; would generate something like:</source>
          <target state="translated">最初のフィールド名（この場合は &lt;code&gt;:email&lt;/code&gt; )は、チェンジセットエラーキーワードリストのエラーキーとして使用されます。たとえば、上記の&lt;a href=&quot;#unique_constraint/3&quot;&gt; &lt;code&gt;unique_constraint/3&lt;/code&gt; &lt;/a&gt;は、次のようなものを生成します。</target>
        </trans-unit>
        <trans-unit id="2cb52f0181ac504af2d274804ae227768df1b3b4" translate="yes" xml:space="preserve">
          <source>The first plug will run only when action is show or edit. The second plug will always run, except for the index action.</source>
          <target state="translated">最初のプラグは、アクションが表示または編集されたときにのみ実行されます。2番目のプラグはインデックスアクションを除いて常に実行されます。</target>
        </trans-unit>
        <trans-unit id="87cb90ded997365e136d73bbbbeaa6912dce9a57" translate="yes" xml:space="preserve">
          <source>The first step is to start the adapter of choice in your supervision tree:</source>
          <target state="translated">まずは、監督の木で選択したアダプターを起動します。</target>
        </trans-unit>
        <trans-unit id="23dbc44cf8fcb8401ecac56fad2056f3e27fd632" translate="yes" xml:space="preserve">
          <source>The following approach is &lt;strong&gt;wrong&lt;/strong&gt;:</source>
          <target state="translated">次のアプローチは&lt;strong&gt;間違ってい&lt;/strong&gt;ます：</target>
        </trans-unit>
        <trans-unit id="27f0532927f5dfde2ed38eb7adc999b8682a2ebd" translate="yes" xml:space="preserve">
          <source>The following assigns are reserved, and cannot be set directly:</source>
          <target state="translated">以下の割り当ては予約されており、直接設定することはできません。</target>
        </trans-unit>
        <trans-unit id="96a9598d7d5639506795473ffa8dad0e7b28cb27" translate="yes" xml:space="preserve">
          <source>The following configuration applies only to &lt;code&gt;:longpoll&lt;/code&gt;:</source>
          <target state="translated">次の構成は、 &lt;code&gt;:longpoll&lt;/code&gt; ：にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="2c9626abcad38b5d2ad7be4a47ee7034e64d5860" translate="yes" xml:space="preserve">
          <source>The following configuration applies only to &lt;code&gt;:websocket&lt;/code&gt;.</source>
          <target state="translated">次の構成は &lt;code&gt;:websocket&lt;/code&gt; にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="13779d40c7bd0138f604faeb9ae943fd9630bdfd" translate="yes" xml:space="preserve">
          <source>The following events are emitted by all Ecto repositories:</source>
          <target state="translated">以下のイベントは、すべての Ecto リポジトリから発行されます。</target>
        </trans-unit>
        <trans-unit id="697b7462029e6e23c15a3021022337813a16f040" translate="yes" xml:space="preserve">
          <source>The following fields are private and must not be accessed directly.</source>
          <target state="translated">以下のフィールドは非公開であり、直接アクセスすることはできません。</target>
        </trans-unit>
        <trans-unit id="b34d9298df0cbb61838280284087d26545c45a26" translate="yes" xml:space="preserve">
          <source>The following intervals are supported: year, month, week, day, hour, minute, second, millisecond and microsecond.</source>
          <target state="translated">年、月、週、日、時、分、秒、ミリ秒、マイクロ秒の間隔をサポートしています。</target>
        </trans-unit>
        <trans-unit id="1ff93af922ef6535f32352b2b639755a01dafeb3" translate="yes" xml:space="preserve">
          <source>The following keys are allowed when specifying a window.</source>
          <target state="translated">ウィンドウを指定する際には、以下のキーを使用することができます。</target>
        </trans-unit>
        <trans-unit id="59c9c3a965c72c26e14a2014331e87cf4bda5729" translate="yes" xml:space="preserve">
          <source>The following keys are available:</source>
          <target state="translated">以下のキーを使用できます。</target>
        </trans-unit>
        <trans-unit id="71d94986edc28d20eb6e61b59ed0d6b150611abc" translate="yes" xml:space="preserve">
          <source>The following returns must be handled by transports:</source>
          <target state="translated">以下のリターンは、トランスポートで処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="7450f3bbf7bebc0ac2b8dc21e3fc9b6d5613f466" translate="yes" xml:space="preserve">
          <source>The following status codes can be given as atoms with their respective value shown next:</source>
          <target state="translated">次のステータスコードは、それぞれの値が次に示されている原子として与えることができます。</target>
        </trans-unit>
        <trans-unit id="c734167c81ee7d5e27dd0815c6c9a86a53980591" translate="yes" xml:space="preserve">
          <source>The following types are supported:</source>
          <target state="translated">以下のタイプに対応しています。</target>
        </trans-unit>
        <trans-unit id="2047e7bdd4c73fd0eee9eccb4cbf4a0fb4bc1b07" translate="yes" xml:space="preserve">
          <source>The following validations may be included in the result. The list is not necessarily exhaustive. For example, custom validations written by the developer will also appear in our return value.</source>
          <target state="translated">結果には以下の検証結果が含まれる場合があります。このリストは必ずしもすべてを網羅しているわけではありません。たとえば、開発者が書いたカスタムバリデーションも返り値に含まれます。</target>
        </trans-unit>
        <trans-unit id="cba133f413c5a544cc032d45c75d5ce55c737264" translate="yes" xml:space="preserve">
          <source>The following values are supported as date:</source>
          <target state="translated">日付としては以下の値がサポートされています。</target>
        </trans-unit>
        <trans-unit id="5bfa84ecf1155190787c1f7e94a11fe721e17de4" translate="yes" xml:space="preserve">
          <source>The following values are supported as time:</source>
          <target state="translated">時間としては以下の値をサポートしています。</target>
        </trans-unit>
        <trans-unit id="9ce20518f56534bcc1118c0bf986d78eef528c90" translate="yes" xml:space="preserve">
          <source>The following:</source>
          <target state="translated">次のようになっています。</target>
        </trans-unit>
        <trans-unit id="4117df297cda8bdfcd48daa253e21cdf1ba31860" translate="yes" xml:space="preserve">
          <source>The foreign key constraint works by relying on the database to check if the associated data exists or not. This is useful to guarantee that a child will only be created if the parent exists in the database too.</source>
          <target state="translated">外部キー制約は、データベースに依存して、関連するデータが存在するかどうかをチェックすることで動作します。これは、親がデータベースに存在する場合にのみ子が作成されることを保証するのに便利です。</target>
        </trans-unit>
        <trans-unit id="e8fa4eb4ae0982343eb1b5d21fa657d106b56303" translate="yes" xml:space="preserve">
          <source>The form generates a CSRF token by default. Your application should check this token on the server to avoid attackers from making requests on your server in behalf of other users. Phoenix by default checks this token.</source>
          <target state="translated">フォームはデフォルトで CSRF トークンを生成します。攻撃者が他のユーザの代わりにサーバにリクエストを行うことを避けるために、アプリケーションはサーバ上でこのトークンをチェックしなければなりません。Phoenix はデフォルトでこのトークンをチェックします。</target>
        </trans-unit>
        <trans-unit id="f83c045b60690e0951f0d613211981e82b773a3a" translate="yes" xml:space="preserve">
          <source>The form should either be a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">フォームのいずれかでなければならない&lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;によって放出される &lt;code&gt;form_for&lt;/code&gt; 又は原子です。</target>
        </trans-unit>
        <trans-unit id="8d01992897ad728050b4b855767bf08df37caba2" translate="yes" xml:space="preserve">
          <source>The form should either be a &lt;a href=&quot;phoenix.html.form#content&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; emitted by &lt;code&gt;form_for&lt;/code&gt; or an atom.</source>
          <target state="translated">フォームのいずれかでなければならない&lt;a href=&quot;phoenix.html.form#content&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;によって放出される &lt;code&gt;form_for&lt;/code&gt; 又は原子です。</target>
        </trans-unit>
        <trans-unit id="f1af6d5bfd7bd7fb64c73cbb0bcf39cb8cf169f9" translate="yes" xml:space="preserve">
          <source>The format has to be expressed as a regular expression.</source>
          <target state="translated">フォーマットは正規表現で表現する必要があります。</target>
        </trans-unit>
        <trans-unit id="489cb5dcb56120d97d2c8e93ec7af5be88c2a077" translate="yes" xml:space="preserve">
          <source>The forwarded plug will be initialized at compile time.</source>
          <target state="translated">転送されたプラグはコンパイル時に初期化されます。</target>
        </trans-unit>
        <trans-unit id="6f475ae2afee4e174380adc1703f946251ee406f" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; can be used to handle these messages.</source>
          <target state="translated">関数&lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt;は、これらのメッセージを処理するために使用できます。</target>
        </trans-unit>
        <trans-unit id="b2ef8c5833d6215f90102ad8553d89a6b62ac7bf" translate="yes" xml:space="preserve">
          <source>The function above fetches all users from the database who have registered presences for the given topic. The fetched information is then extended with a &lt;code&gt;:user&lt;/code&gt; key of the user&amp;rsquo;s information, while maintaining the required &lt;code&gt;:metas&lt;/code&gt; field from the original presence data.</source>
          <target state="translated">上記の関数は、特定のトピックのプレゼンスを登録しているすべてのユーザーをデータベースからフェッチします。取得された情報は、ユーザーの情報の &lt;code&gt;:user&lt;/code&gt; キーで拡張されますが、元のプレゼンスデータの必要な &lt;code&gt;:metas&lt;/code&gt; フィールドは維持されます。</target>
        </trans-unit>
        <trans-unit id="3bb5d899f787348b0861709cf9aa7599e25a199f" translate="yes" xml:space="preserve">
          <source>The function accepts a status either as an integer HTTP status or atom, such as &lt;code&gt;404&lt;/code&gt; or &lt;code&gt;:not_found&lt;/code&gt;. If an error is raised, a 3-tuple of the wrapped response is returned matching the status, headers, and body of the response:</source>
          <target state="translated">この関数は、ステータスを整数のHTTPステータスまたはアトム（ &lt;code&gt;404&lt;/code&gt; や &lt;code&gt;:not_found&lt;/code&gt; など）として受け入れます。エラーが発生した場合、ラップされた応答の3タプルが、応答のステータス、ヘッダー、本文と一致して返されます。</target>
        </trans-unit>
        <trans-unit id="7a00d6812bf7a0419f2a6f9124c6b63f43006264" translate="yes" xml:space="preserve">
          <source>The function accepts a status either as an integer HTTP status or atom, such as &lt;code&gt;404&lt;/code&gt; or &lt;code&gt;:not_found&lt;/code&gt;. The list of allowed atoms is available in &lt;a href=&quot;../plug/plug.conn.status&quot;&gt;&lt;code&gt;Plug.Conn.Status&lt;/code&gt;&lt;/a&gt;. If an error is raised, a 3-tuple of the wrapped response is returned matching the status, headers, and body of the response:</source>
          <target state="translated">この関数は、 &lt;code&gt;404&lt;/code&gt; や &lt;code&gt;:not_found&lt;/code&gt; などの整数HTTPステータスまたはアトムとしてステータスを受け入れます。許可されるアトムのリストは、&lt;a href=&quot;../plug/plug.conn.status&quot;&gt; &lt;code&gt;Plug.Conn.Status&lt;/code&gt; にあり&lt;/a&gt;ます。エラーが発生した場合、応答のステータス、ヘッダー、および本文に一致する、ラップされた応答の3タプルが返されます。</target>
        </trans-unit>
        <trans-unit id="34f7c94fd7748f67cd09813bdd7706a2edb3046e" translate="yes" xml:space="preserve">
          <source>The function given to &lt;code&gt;run&lt;/code&gt; must return &lt;code&gt;{:ok, value}&lt;/code&gt; or &lt;code&gt;{:error, value}&lt;/code&gt; as its result. Returning an error will abort any further operations and make the whole multi fail.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; に指定された関数は、結果として &lt;code&gt;{:ok, value}&lt;/code&gt; または &lt;code&gt;{:error, value}&lt;/code&gt; を返す必要があります。エラーを返すと、それ以降の操作は中止され、マルチ全体が失敗します。</target>
        </trans-unit>
        <trans-unit id="2a481723c76058903ea9cbe576e12efab982d90c" translate="yes" xml:space="preserve">
          <source>The function must return a map of data matching the outlined Presence data structure, including the &lt;code&gt;:metas&lt;/code&gt; key, but can extend the map of information to include any additional information. For example:</source>
          <target state="translated">この関数は、 &lt;code&gt;:metas&lt;/code&gt; キーを含む、アウトライン化されたPresenceデータ構造に一致するデータのマップを返す必要がありますが、情報のマップを拡張して追加情報を含めることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="fa901f9a75974fd4d90e6889c130fadce04c365a" translate="yes" xml:space="preserve">
          <source>The function returns a tuple with the first element being a quoted reference to the connection and the second element being the compiled quoted pipeline.</source>
          <target state="translated">この関数は、最初の要素が接続への引用符付きの参照であり、2番目の要素がコンパイルされた引用符付きのパイプラインであるタプルを返します。</target>
        </trans-unit>
        <trans-unit id="153b2df483884d8b989e308df19cc7b9893a9689" translate="yes" xml:space="preserve">
          <source>The function should return either &lt;code&gt;{:ok, value}&lt;/code&gt; or &lt;code&gt;{:error, value}&lt;/code&gt;, and receives the repo as the first argument, and the changes so far as the second argument.</source>
          <target state="translated">この関数は &lt;code&gt;{:ok, value}&lt;/code&gt; または &lt;code&gt;{:error, value}&lt;/code&gt; いずれかを返し、最初の引数としてリポジトリを受け取り、2番目の引数までの変更を受け取ります。</target>
        </trans-unit>
        <trans-unit id="a67c783032e2a201537e306cf6f097d5365e66b6" translate="yes" xml:space="preserve">
          <source>The functionality provided by this module helps in performing &quot;origin&quot; header checks and ensuring only SSL connections are allowed.</source>
          <target state="translated">このモジュールが提供する機能は、&quot;オリジン &quot;ヘッダチェックを実行し、SSL接続のみが許可されるようにするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d040f9e18e02bf1e9b7b5a6b1124e1c1c9357436" translate="yes" xml:space="preserve">
          <source>The functionality provided by this module helps in performing &amp;ldquo;origin&amp;rdquo; header checks and ensuring only SSL connections are allowed.</source>
          <target state="translated">このモジュールが提供する機能は、「origin」ヘッダーチェックを実行し、SSL接続のみが許可されるようにするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="f3caf5d490d3889e61dbe8db689ddbc1dc882729" translate="yes" xml:space="preserve">
          <source>The functions in this module can also be used for controller testing. While endpoint testing is preferred over controller testing as a controller often depends on the pipelines invoked in the router and before, unit testing controllers may be helpful in some situations.</source>
          <target state="translated">このモジュールの関数は、コントローラのテストにも使用できます。コントローラはルータ内で呼び出されるパイプラインに依存することが多いため、コントローラテストよりもエンドポイントテストの方が好まれますが、状況によってはユニットテスト用のコントローラが役に立つこともあります。</target>
        </trans-unit>
        <trans-unit id="5e080e3a5969a0dfe51e38a130fc2af62050c352" translate="yes" xml:space="preserve">
          <source>The functions in this module can also be used for controller testing. While endpoint testing is preferred over controller testing, especially since the controller in Phoenix plays an integration role between your domain and your views, unit testing controllers may be helpful in some situations.</source>
          <target state="translated">このモジュールの関数は、コントローラのテストにも使用できます。エンドポイントテストはコントローラテストよりも優先されますが、特にPhoenixのコントローラはドメインとビューの間で統合の役割を果たすので、ユニットテストのコントローラは状況によっては役に立つかもしれません。</target>
        </trans-unit>
        <trans-unit id="d3dd86f90d5374c8aba9a2543470a122fcff086c" translate="yes" xml:space="preserve">
          <source>The functions in this module can be used in three distinct scenarios:</source>
          <target state="translated">このモジュールの関数は、3つの異なるシナリオで使用することができます。</target>
        </trans-unit>
        <trans-unit id="ca241d49313e0782ffcc88432a8a2d858c13e8e9" translate="yes" xml:space="preserve">
          <source>The generated datetime_select can be customized at will by providing a builder option. Here is an example from EEx:</source>
          <target state="translated">生成された datetime_select は、ビルダーオプションを指定することで自由にカスタマイズすることができます。以下は EEx の例です。</target>
        </trans-unit>
        <trans-unit id="a05e320bee1a84e2ffca470cb7c31539b99e85c1" translate="yes" xml:space="preserve">
          <source>The generated files will contain:</source>
          <target state="translated">生成されたファイルには、以下が含まれます。</target>
        </trans-unit>
        <trans-unit id="958104172477f9b5a43c314b73c9b38aabb7fb31" translate="yes" xml:space="preserve">
          <source>The generated migration can be skipped with &lt;code&gt;--no-migration&lt;/code&gt;.</source>
          <target state="translated">生成された移行は &lt;code&gt;--no-migration&lt;/code&gt; でスキップできます。</target>
        </trans-unit>
        <trans-unit id="2360bfab30a1d9a0770994aab3da68e5eb2150e6" translate="yes" xml:space="preserve">
          <source>The generated model will contain:</source>
          <target state="translated">生成されたモデルには、次のようなものが含まれます。</target>
        </trans-unit>
        <trans-unit id="c2fafd8b72db2fda76555b5c3231ac455bc8d91f" translate="yes" xml:space="preserve">
          <source>The generated request id will be in the format &quot;uq8hs30oafhj5vve8ji5pmp7mtopc08f&quot;.</source>
          <target state="translated">生成されるリクエストIDは「uq8hs30oafhj5vve8ji5pmp7mtopc08f」という形式になる。</target>
        </trans-unit>
        <trans-unit id="9e5668b35e826d6b7f7128c9281d2999702c5951" translate="yes" xml:space="preserve">
          <source>The generated request id will be in the format &amp;ldquo;uq8hs30oafhj5vve8ji5pmp7mtopc08f&amp;rdquo;.</source>
          <target state="translated">生成されたリクエストIDは「uq8hs30oafhj5vve8ji5pmp7mtopc08f」の形式になります。</target>
        </trans-unit>
        <trans-unit id="3f6f61987271b75470a17cf53dff2fe262f3c6a6" translate="yes" xml:space="preserve">
          <source>The generated resource will contain:</source>
          <target state="translated">生成されたリソースが含まれます。</target>
        </trans-unit>
        <trans-unit id="07a1ec291d930976c73c9d45dd66aa61e5c367bd" translate="yes" xml:space="preserve">
          <source>The generated route above will match on the path &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; and will dispatch to &lt;code&gt;:show&lt;/code&gt; action in &lt;code&gt;API.V1.PageController&lt;/code&gt;. A named helper &lt;code&gt;api_v1_page_path&lt;/code&gt; will also be generated.</source>
          <target state="translated">生成されたルートは、上記のパスに一致します &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; とに派遣する &lt;code&gt;:show&lt;/code&gt; でアクション &lt;code&gt;API.V1.PageController&lt;/code&gt; 。名前付きヘルパー &lt;code&gt;api_v1_page_path&lt;/code&gt; も生成されます。</target>
        </trans-unit>
        <trans-unit id="8eb6914d64c4e5b2458e4e1b429f8d5623fada37" translate="yes" xml:space="preserve">
          <source>The generated schema above will contain:</source>
          <target state="translated">上記の生成されたスキーマには、次のようなものが含まれます。</target>
        </trans-unit>
        <trans-unit id="b0fe9476efd56f82a1ea6f2439a7dfb5f439d397" translate="yes" xml:space="preserve">
          <source>The generator also supports &lt;code&gt;belongs_to&lt;/code&gt; associations via references:</source>
          <target state="translated">ジェネレーターは、参照を介して &lt;code&gt;belongs_to&lt;/code&gt; 関連付けもサポートします。</target>
        </trans-unit>
        <trans-unit id="a584765639065a0e41059878bfc54d658311e358" translate="yes" xml:space="preserve">
          <source>The generator also supports references, which we will properly associate the given column to the primary key column of the referenced table:</source>
          <target state="translated">ジェネレータは参照もサポートしており、指定された列を参照テーブルの主キー列に適切に関連付けます。</target>
        </trans-unit>
        <trans-unit id="8ae78460b27964100f540d3c51518f56de1ae5d6" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;data&lt;/code&gt; may be either a changeset, a schema struct or a &lt;code&gt;{data, types}&lt;/code&gt; tuple. The second argument is a map of &lt;code&gt;params&lt;/code&gt; that are cast according to the type information from &lt;code&gt;data&lt;/code&gt;. &lt;code&gt;params&lt;/code&gt; is a map with string keys or a map with atom keys containing potentially invalid data.</source>
          <target state="translated">指定された &lt;code&gt;data&lt;/code&gt; は、チェンジセット、スキーマ構造体、または &lt;code&gt;{data, types}&lt;/code&gt; タプルのいずれかです。2番目の引数は、 &lt;code&gt;data&lt;/code&gt; からの型情報に従ってキャストされる &lt;code&gt;params&lt;/code&gt; のマップです。 &lt;code&gt;params&lt;/code&gt; は、文字列キーを含むマップ、または潜在的に無効なデータを含むアトムキーを含むマップです。</target>
        </trans-unit>
        <trans-unit id="ed7aeeaafe6c3bad4cfce08f957a5bf97bc013c4" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;function&lt;/code&gt; is invoked with the change value only if there is a change for the given &lt;code&gt;key&lt;/code&gt;. Note that the value of the change can still be &lt;code&gt;nil&lt;/code&gt; (unless the field was marked as required on &lt;a href=&quot;#validate_required/3&quot;&gt;&lt;code&gt;validate_required/3&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; 変更がある場合にのみ、指定された &lt;code&gt;function&lt;/code&gt; が変更値で呼び出されます。（&lt;a href=&quot;#validate_required/3&quot;&gt; &lt;code&gt;validate_required/3&lt;/code&gt; で&lt;/a&gt;フィールドが必須としてマークされていない限り）変更の値は &lt;code&gt;nil&lt;/code&gt; のままであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="12ae3f1712df00636f70321070eb45b1efc012c4" translate="yes" xml:space="preserve">
          <source>The given attributes are expected to be structured data. If you want to build an association with external data, such as a request parameters, you can use &lt;a href=&quot;ecto.changeset#cast/3&quot;&gt;&lt;code&gt;Ecto.Changeset.cast/3&lt;/code&gt;&lt;/a&gt; after &lt;a href=&quot;#build_assoc/3&quot;&gt;&lt;code&gt;build_assoc/3&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">指定された属性は、構造化データであることが期待されます。リクエストパラメータなどの外部データとの関連付けを構築する場合は、&lt;a href=&quot;ecto.changeset#cast/3&quot;&gt; &lt;code&gt;Ecto.Changeset.cast/3&lt;/code&gt; &lt;/a&gt;後に&lt;a href=&quot;#build_assoc/3&quot;&gt; &lt;code&gt;build_assoc/3&lt;/code&gt; &lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="c33d234c4ff95f48de07c57959d603389ff704eb" translate="yes" xml:space="preserve">
          <source>The given channel is joined in a separate process which is linked to the test process.</source>
          <target state="translated">与えられたチャネルは、テストプロセスにリンクされた別のプロセスで結合されます。</target>
        </trans-unit>
        <trans-unit id="d4c5415cdd429b8d05fbc81af9046db394117d84" translate="yes" xml:space="preserve">
          <source>The given definition:</source>
          <target state="translated">与えられた定義。</target>
        </trans-unit>
        <trans-unit id="7187a5e81ba59fd9a2b763b67226ecb68e6f3832" translate="yes" xml:space="preserve">
          <source>The given function is guaranteed to run inside the same transaction as the changeset operation for databases that do support transactions.</source>
          <target state="translated">与えられた関数は、トランザクションをサポートしているデータベースのチェンジセット操作と同じトランザクション内で実行されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="a573a08337f6f0cf025ec9ae17d9092603c49c35" translate="yes" xml:space="preserve">
          <source>The implementation of this callback should invoke &lt;code&gt;fun&lt;/code&gt; with the value under &lt;code&gt;key&lt;/code&gt; in the passed structure &lt;code&gt;data&lt;/code&gt;, or with &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not present in it. This function must return either &lt;code&gt;{get_value, update_value}&lt;/code&gt; or &lt;code&gt;:pop&lt;/code&gt;.</source>
          <target state="translated">このコールバックの実装は、呼び出す必要が &lt;code&gt;fun&lt;/code&gt; の下での値と &lt;code&gt;key&lt;/code&gt; 渡される構造の中 &lt;code&gt;data&lt;/code&gt; 、またはで &lt;code&gt;nil&lt;/code&gt; の場合 &lt;code&gt;key&lt;/code&gt; その中に存在していません。この関数は、 &lt;code&gt;{get_value, update_value}&lt;/code&gt; または &lt;code&gt;:pop&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="897fcb552f1ed96e5b37d174da2e32ad713e210e" translate="yes" xml:space="preserve">
          <source>The internal reference to the session in the store</source>
          <target state="translated">ストア内のセッションへの内部参照</target>
        </trans-unit>
        <trans-unit id="2b0fb080dc23dfd38867594f47439c384bd3fe00" translate="yes" xml:space="preserve">
          <source>The internal reference to the session in the store.</source>
          <target state="translated">ストア内のセッションへの内部参照。</target>
        </trans-unit>
        <trans-unit id="75c017e0096c8191807383c0ba159f9238866e0c" translate="yes" xml:space="preserve">
          <source>The issue is that we have no guarantees the channel has done processing our message after calling &lt;a href=&quot;#push/3&quot;&gt;&lt;code&gt;push/3&lt;/code&gt;&lt;/a&gt;. The best solution is to assert the channel sent us a reply before doing any other assertion. First change the channel to send replies:</source>
          <target state="translated">問題は、チャネルが&lt;a href=&quot;#push/3&quot;&gt; &lt;code&gt;push/3&lt;/code&gt; を&lt;/a&gt;呼び出した後にメッセージの処理を完了したことを保証できないことです。最善の解決策は、他のアサーションを行う前に、チャネルが返信を送信したことをアサートすることです。まず、チャネルを変更して返信を送信します。</target>
        </trans-unit>
        <trans-unit id="bf259ab2dd0402461d9104f43dc12dcf9a9184fd" translate="yes" xml:space="preserve">
          <source>The key can be a string or an atom, where atoms are automatically converted to strings.</source>
          <target state="translated">キーには文字列か原子を指定することができ、原子は自動的に文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="f429352c0b3be43a54afc592d7a8110f87f053dd" translate="yes" xml:space="preserve">
          <source>The key can be a string or an atom, where atoms are automatically converted to strings. Can only be invoked on unsent &lt;code&gt;conn&lt;/code&gt;s. Will raise otherwise.</source>
          <target state="translated">キーは文字列またはアトムであり、アトムは自動的に文字列に変換されます。未送信の &lt;code&gt;conn&lt;/code&gt; でのみ呼び出すことができます。そうでなければレイズします。</target>
        </trans-unit>
        <trans-unit id="b090269894ef022087b95988c4c1c9ea6c329869" translate="yes" xml:space="preserve">
          <source>The key is the media type, the value is a list of formats the media type can be identified with. For example, by using &quot;json-api&quot;, you will be able to use templates with extension &quot;index.json-api&quot; or to force a particular format in a given URL by sending &quot;?_format=json-api&quot;.</source>
          <target state="translated">キーはメディアタイプ、値はメディアタイプが識別できるフォーマットのリストです。例えば、&quot;json-api &quot;を使用することで、拡張子が &quot;index.json-api &quot;のテンプレートを使用したり、&quot;?_format=json-api &quot;を送信することで、指定されたURLで特定のフォーマットを強制的に使用することができるようになります。</target>
        </trans-unit>
        <trans-unit id="4edcd6a27ee607492b3ce414639ce14b3b1badad" translate="yes" xml:space="preserve">
          <source>The key is the media type, the value is a list of formats the media type can be identified with. For example, by using &amp;ldquo;json-api&amp;rdquo;, you will be able to use templates with extension &amp;ldquo;index.json-api&amp;rdquo; or to force a particular format in a given URL by sending &amp;ldquo;?_format=json-api&amp;rdquo;.</source>
          <target state="translated">キーはメディアタイプ、値はメディアタイプを識別できるフォーマットのリストです。たとえば、「json-api」を使用すると、「index.json-api」の拡張子を持つテンプレートを使用したり、「？_ format = json-api」を送信して特定のURLで特定のフォーマットを強制したりできます。</target>
        </trans-unit>
        <trans-unit id="dc9dd9b6fe649ecbe85232c591304bd2bcb8a124" translate="yes" xml:space="preserve">
          <source>The keys in the list are the names of fields, and the values are a validation associated with the field. A field may occur multiple times in the list.</source>
          <target state="translated">リストのキーはフィールドの名前で、値はフィールドに関連する検証です。1つのフィールドがリスト内で複数回出現することがあります。</target>
        </trans-unit>
        <trans-unit id="44118a922e99586055ff7e96b077e2626d08844b" translate="yes" xml:space="preserve">
          <source>The keys of the map will usually point to a resource ID. The value will contain a map with a &lt;code&gt;:metas&lt;/code&gt; key containing a list of metadata for each resource. Additionally, every metadata entry will contain a &lt;code&gt;:phx_ref&lt;/code&gt; key which can be used to uniquely identify metadata for a given key. In the event that the metadata was previously updated, a &lt;code&gt;:phx_ref_prev&lt;/code&gt; key will be present containing the previous &lt;code&gt;:phx_ref&lt;/code&gt; value.</source>
          <target state="translated">マップのキーは通常、リソースIDを指します。値には、各リソースのメタデータのリストを含む &lt;code&gt;:metas&lt;/code&gt; キーを持つマップが含まれます。さらに、すべてのメタデータエントリには、特定のキーのメタデータを一意に識別するために使用できる &lt;code&gt;:phx_ref&lt;/code&gt; キーが含まれます。メタデータが以前に更新された場合、以前の &lt;code&gt;:phx_ref&lt;/code&gt; 値を含む &lt;code&gt;:phx_ref_prev&lt;/code&gt; キーが存在します。</target>
        </trans-unit>
        <trans-unit id="3f06d5aeae7960e61046c9013e3025c273538aad" translate="yes" xml:space="preserve">
          <source>The keyword-based and pipe-based examples are equivalent. The downside of using macros is that the binding must be specified for every operation. However, since keyword-based and pipe-based examples are equivalent, the bindingless syntax also works for macros:</source>
          <target state="translated">キーワードベースの例とパイプベースの例は同等です。マクロを使用する場合の欠点は、操作のたびにバインディングを指定しなければならないことです。しかし、キーワードベースの例とパイプベースの例は同等なので、バインディングレス構文はマクロでも機能します。</target>
        </trans-unit>
        <trans-unit id="1f0f79f452d7d90593329a433992b7a7e7313371" translate="yes" xml:space="preserve">
          <source>The latter could also be bound to any &lt;code&gt;click&lt;/code&gt; event, but this way you can be sure your custom code is only executed when the code of &lt;code&gt;phoenix_html.js&lt;/code&gt; is run.</source>
          <target state="translated">後者は任意の &lt;code&gt;click&lt;/code&gt; イベントにバインドすることもできますが、これにより、 &lt;code&gt;phoenix_html.js&lt;/code&gt; のコードが実行されたときにのみカスタムコードが実行されるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="6744e96e72ecda721afea0237536fd66db392297" translate="yes" xml:space="preserve">
          <source>The layout must be a tuple, specifying the layout view and the layout name, or false. In case a previous layout is set, &lt;code&gt;put_layout&lt;/code&gt; also accepts the layout name to be given as a string or as an atom. If a string, it must contain the format. Passing an atom means the layout format will be found at rendering time, similar to the template in &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;. It can also be set to &lt;code&gt;false&lt;/code&gt;. In this case, no layout would be used.</source>
          <target state="translated">レイアウトは、レイアウトビューとレイアウト名を指定するタプルであるか、falseである必要があります。以前のレイアウトが設定されている場合、 &lt;code&gt;put_layout&lt;/code&gt; は、文字列またはアトムとして指定されるレイアウト名も受け入れます。文字列の場合は、フォーマットを含める必要があります。アトムを渡すことは、&lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; の&lt;/a&gt;テンプレートと同様に、レイアウト形式がレンダリング時に見つかることを意味します。 &lt;code&gt;false&lt;/code&gt; に設定することもできます。この場合、レイアウトは使用されません。</target>
        </trans-unit>
        <trans-unit id="9089ed404a90b7ca8405732095979a8fb2093289" translate="yes" xml:space="preserve">
          <source>The list of supported values and their behaviour is described in &lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt;. If the given value is not any of values listed there, it will raise.</source>
          <target state="translated">サポートされている値とその動作のリストは、&lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; で&lt;/a&gt;説明されています。与えられた値がそこにリストされている値のいずれでもない場合、それが発生します。</target>
        </trans-unit>
        <trans-unit id="ba10fe778e8a0ac2bdeed5623f9f0c72f2e97b50" translate="yes" xml:space="preserve">
          <source>The location of the web files (controllers, views, templates, etc) in an umbrella application will vary based on the &lt;code&gt;:context_app&lt;/code&gt; config located in your applications &lt;code&gt;:generators&lt;/code&gt; configuration. When set, the Phoenix generators will generate web files directly in your lib and test folders since the application is assumed to be isolated to web specific functionality. If &lt;code&gt;:context_app&lt;/code&gt; is not set, the generators will place web related lib and test files in a &lt;code&gt;web/&lt;/code&gt; directory since the application is assumed to be handling both web and domain specific functionality. Example configuration:</source>
          <target state="translated">アンブレラアプリケーション内のWebファイル（コントローラー、ビュー、テンプレートなど）の場所は、アプリケーションの &lt;code&gt;:generators&lt;/code&gt; 構成にある &lt;code&gt;:context_app&lt;/code&gt; 構成によって異なります。設定すると、アプリケーションはWeb固有の機能に分離されていると想定されるため、Phoenixジェネレーターはlibおよびtestフォルダーに直接Webファイルを生成します。 &lt;code&gt;:context_app&lt;/code&gt; が設定されていない場合、アプリケーションはWebとドメイン固有の機能の両方を処理すると見なされるため、ジェネレーターはweb関連のlibファイルとテストファイルを &lt;code&gt;web/&lt;/code&gt; ディレクトリに配置します。設定例：</target>
        </trans-unit>
        <trans-unit id="5054ea19f1c0872ef56ffb5ac8d9cbaa2ee98017" translate="yes" xml:space="preserve">
          <source>The logger call won&amp;rsquo;t be removed at compile time as custom level is given.</source>
          <target state="translated">カスタムレベルが指定されているため、ロガー呼び出しはコンパイル時に削除されません。</target>
        </trans-unit>
        <trans-unit id="282bfec61ed3e63c6a621589fc9ff184bc2a5dc3" translate="yes" xml:space="preserve">
          <source>The long poll is configurable in your socket:</source>
          <target state="translated">長いポールはソケットで設定可能です。</target>
        </trans-unit>
        <trans-unit id="df55f8f757b374fd6d2aa5a71db086c2cfcd7c1d" translate="yes" xml:space="preserve">
          <source>The main responsibility of a view is to render a template.</source>
          <target state="translated">ビューの主な役割はテンプレートをレンダリングすることです。</target>
        </trans-unit>
        <trans-unit id="c3ad4277ebaf63c095045d7d65ae5d290329b067" translate="yes" xml:space="preserve">
          <source>The map type</source>
          <target state="translated">地図の種類</target>
        </trans-unit>
        <trans-unit id="fd10459a12af6703afd7079ef61598c3879b0473" translate="yes" xml:space="preserve">
          <source>The map type allows developers to store an Elixir map directly in the database:</source>
          <target state="translated">このマップタイプを使用すると、開発者は Elixir マップをデータベースに直接保存することができます。</target>
        </trans-unit>
        <trans-unit id="080be8664031b1a1bb94955949d3616301947b14" translate="yes" xml:space="preserve">
          <source>The mechanism for passing the token to the client is typically through a cookie, a JSON response body, or HTTP header. For now, assume the client has received a token it can use to validate requests for protected resources.</source>
          <target state="translated">トークンをクライアントに渡す仕組みは、通常、クッキー、JSON レスポンスボディ、HTTP ヘッダーを介して行われます。ここでは、クライアントが保護されたリソースへのリクエストを検証するために使用できるトークンを受け取ったと仮定します。</target>
        </trans-unit>
        <trans-unit id="eb58fc9777d3607a5fbb10fc1f79ea8d98ec0269" translate="yes" xml:space="preserve">
          <source>The message format requires the following keys:</source>
          <target state="translated">メッセージのフォーマットには、以下のキーが必要です。</target>
        </trans-unit>
        <trans-unit id="52f5b43827ed9d61c35f578531a7d764f7e53199" translate="yes" xml:space="preserve">
          <source>The message is a term. It must return one of:</source>
          <target state="translated">メッセージは用語です。のいずれかを返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="b0b210dad451da94f2501a9d8d7e918aa3958400" translate="yes" xml:space="preserve">
          <source>The message is represented as &lt;code&gt;{payload, options}&lt;/code&gt;. It must return one of:</source>
          <target state="translated">メッセージは &lt;code&gt;{payload, options}&lt;/code&gt; として表されます。次のいずれかを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="8368bb195a36e75b24e3aa2abd88acdf1b5b819f" translate="yes" xml:space="preserve">
          <source>The metadata returned by the adapter &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">アダプター&lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt;によって返されるメタデータ</target>
        </trans-unit>
        <trans-unit id="7b2acf0c1be2b4d18996e01c7970b3c30cc534ab" translate="yes" xml:space="preserve">
          <source>The metadata returned by the adapter &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アダプター&lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt;によって返されるメタデータ。</target>
        </trans-unit>
        <trans-unit id="70bfd62abd8739763f40ffef575496a5c549d630" translate="yes" xml:space="preserve">
          <source>The minimum value for &lt;code&gt;length&lt;/code&gt; is 32.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; の最小値は32です。</target>
        </trans-unit>
        <trans-unit id="9634db4fa76e01e90a42b4c5e5f87e4ad4910fd5" translate="yes" xml:space="preserve">
          <source>The name of each operation does not have to be an atom. This can be particularly useful when you wish to update a collection of changesets at once, and track their errors individually:</source>
          <target state="translated">各操作の名前はアトムである必要はありません。これは、チェンジセットのコレクションを一度に更新して、そのエラーを個別に追跡したい場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="8eacf623a28c1145f1b59317f4cbac89d904671a" translate="yes" xml:space="preserve">
          <source>The named helper can also be customized with the &lt;code&gt;:as&lt;/code&gt; option. Given the route:</source>
          <target state="translated">名前付きヘルパーは、 &lt;code&gt;:as&lt;/code&gt; オプションでカスタマイズすることもできます。与えられたルート：</target>
        </trans-unit>
        <trans-unit id="ee9f556bb40887ceb71d128fe3a1686d36cd09f5" translate="yes" xml:space="preserve">
          <source>The only argument is the module name of the Presence tracker, which defaults to Presence.</source>
          <target state="translated">引数は Presence トラッカーのモジュール名のみで、デフォルトは Presence です。</target>
        </trans-unit>
        <trans-unit id="dd6daf265bd0ac4e906fd4bdd897c5919c6282da" translate="yes" xml:space="preserve">
          <source>The only downside is that it will show up as a fragment when inspecting the Elixir query. Other than that, it should be equivalent to a built-in Ecto query function.</source>
          <target state="translated">唯一の欠点は、Elixirのクエリを検査するときにフラグメントとして表示されることです。それ以外は、組み込みのEctoクエリ関数と同等であるべきです。</target>
        </trans-unit>
        <trans-unit id="4f0266dcf90fe67afe6ef36bb73cebc07fd00eac" translate="yes" xml:space="preserve">
          <source>The options are passed to both &lt;code&gt;:http&lt;/code&gt; and &lt;code&gt;:https&lt;/code&gt; keys in the endpoint configuration. However, once you pass your custom dispatch options, you will need to manually wire all Phoenix endpoints, including the socket transports.</source>
          <target state="translated">オプションは、エンドポイント構成の &lt;code&gt;:http&lt;/code&gt; キーと &lt;code&gt;:https&lt;/code&gt; キーの両方に渡されます。ただし、カスタムディスパッチオプションを渡したら、ソケットトランスポートを含むすべてのフェニックスエンドポイントを手動で配線する必要があります。</target>
        </trans-unit>
        <trans-unit id="f34a63fc2945e1d41d9507823f6312b0d54d5e85" translate="yes" xml:space="preserve">
          <source>The options are the same options given to &lt;code&gt;form_for/4&lt;/code&gt;. It can be used by implementations to configure their behaviour and it must be stored in the underlying struct, with any custom field removed.</source>
          <target state="translated">オプションは &lt;code&gt;form_for/4&lt;/code&gt; に指定されたものと同じです。これは、実装で動作を構成するために使用でき、カスタムフィールドを削除して、基になる構造体に格納する必要があります。</target>
        </trans-unit>
        <trans-unit id="e94a4b1ffacdefb101fda0c3d483575fb46108fe" translate="yes" xml:space="preserve">
          <source>The options are the same options given to &lt;code&gt;inputs_for/4&lt;/code&gt;. It can be used by implementations to configure their behaviour and it must be stored in the underlying struct, with any custom field removed.</source>
          <target state="translated">オプションは、 &lt;code&gt;inputs_for/4&lt;/code&gt; 指定されたものと同じです。これは、実装で動作を構成するために使用でき、カスタムフィールドを削除して、基になる構造体に格納する必要があります。</target>
        </trans-unit>
        <trans-unit id="cbbc72dee649cfd3da9099e3aaa4dd8de76df598" translate="yes" xml:space="preserve">
          <source>The options returned from this function will be given to &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#put/4&quot;&gt;&lt;code&gt;put/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#delete/3&quot;&gt;&lt;code&gt;delete/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数から返されるオプションは、&lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#put/4&quot;&gt; &lt;code&gt;put/4&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#delete/3&quot;&gt; &lt;code&gt;delete/3&lt;/code&gt; に&lt;/a&gt;与えられます。</target>
        </trans-unit>
        <trans-unit id="d384613558e77407526f0c5fbfadcc4a059844a9" translate="yes" xml:space="preserve">
          <source>The options returned from this function will be given to &lt;code&gt;get/3&lt;/code&gt;, &lt;code&gt;put/4&lt;/code&gt; and &lt;code&gt;delete/3&lt;/code&gt;.</source>
          <target state="translated">この関数から返されるオプションは、 &lt;code&gt;get/3&lt;/code&gt; 、 &lt;code&gt;put/4&lt;/code&gt; 、および &lt;code&gt;delete/3&lt;/code&gt; に与えられます。</target>
        </trans-unit>
        <trans-unit id="f06bf866fed12855453f8d5f135a5f4e72431100" translate="yes" xml:space="preserve">
          <source>The other fields are merged with the following criteria:</source>
          <target state="translated">その他のフィールドは、以下の基準でマージされます。</target>
        </trans-unit>
        <trans-unit id="3462b00b6bda12e1014b4b6dc443fa44ae87853c" translate="yes" xml:space="preserve">
          <source>The other validators simply take a value:</source>
          <target state="translated">他のバリデータは単に値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="161c387bc2cd3fea40fa9d1d48103ca6f80cdb4b" translate="yes" xml:space="preserve">
          <source>The output folder will contain:</source>
          <target state="translated">出力フォルダに格納されます。</target>
        </trans-unit>
        <trans-unit id="f4662009e29483d0cc5077d2eabc424cdf07a6d6" translate="yes" xml:space="preserve">
          <source>The parameters for the given association will be retrieved from &lt;code&gt;changeset.params&lt;/code&gt;. Those parameters are expected to be a map with attributes, similar to the ones passed to &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt;. Once parameters are retrieved, &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt; will match those parameters with the associations already in the changeset record.</source>
          <target state="translated">指定された関連付けのパラメータは、 &lt;code&gt;changeset.params&lt;/code&gt; から取得されます。これらのパラメーターは、&lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; に&lt;/a&gt;渡されるものと同様の属性を持つマップであることが期待されています。パラメータが取得されると、&lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt;はそれらのパラメータを、変更セットレコードに既にある関連付けと照合します。</target>
        </trans-unit>
        <trans-unit id="f162dc3980f9534481973a5e2f3a8df458b6c531" translate="yes" xml:space="preserve">
          <source>The parameters for the given embed will be retrieved from &lt;code&gt;changeset.params&lt;/code&gt;. Those parameters are expected to be a map with attributes, similar to the ones passed to &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt;. Once parameters are retrieved, &lt;a href=&quot;#cast_embed/3&quot;&gt;&lt;code&gt;cast_embed/3&lt;/code&gt;&lt;/a&gt; will match those parameters with the embeds already in the changeset record. See &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt; for an example of working with casts and associations which would also apply for embeds.</source>
          <target state="translated">指定された埋め込みのパラメータは、 &lt;code&gt;changeset.params&lt;/code&gt; から取得されます。これらのパラメーターは、&lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; に&lt;/a&gt;渡されるものと同様の属性を持つマップであることが期待されています。パラメーターが取得されると、&lt;a href=&quot;#cast_embed/3&quot;&gt; &lt;code&gt;cast_embed/3&lt;/code&gt; &lt;/a&gt;はそれらのパラメーターを、チェンジセットレコードに既にある埋め込みと照合します。埋め込みにも適用されるキャストと関連付けの使用例については、&lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e6d9d95ae05eb4ab7374f78f148d8ced664f6b15" translate="yes" xml:space="preserve">
          <source>The path will be retrieved from the currently requested path via &lt;a href=&quot;#current_path/1&quot;&gt;&lt;code&gt;current_path/1&lt;/code&gt;&lt;/a&gt;. The scheme, host and others will be received from the URL configuration in your Phoenix endpoint. The reason we don't use the host and scheme information in the request is because most applications are behind proxies and the host and scheme may not actually reflect the host and scheme accessed by the client. If you want to access the url precisely as requested by the client, see &lt;a href=&quot;../plug/plug.conn#request_url/1&quot;&gt;&lt;code&gt;Plug.Conn.request_url/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パスは、&lt;a href=&quot;#current_path/1&quot;&gt; &lt;code&gt;current_path/1&lt;/code&gt; を&lt;/a&gt;介して現在要求されているパスから取得されます。スキーム、ホストなどは、PhoenixエンドポイントのURL構成から受信されます。リクエストでホストとスキームの情報を使用しない理由は、ほとんどのアプリケーションがプロキシの背後にあり、ホストとスキームが実際にはクライアントがアクセスするホストとスキームを反映していない可能性があるためです。クライアントの要求どおりに正確にURLにアクセスする場合は、&lt;a href=&quot;../plug/plug.conn#request_url/1&quot;&gt; &lt;code&gt;Plug.Conn.request_url/1&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8461b08dd0b39472d6e7cab05d0df7c89d7a56a5" translate="yes" xml:space="preserve">
          <source>The plug specification.</source>
          <target state="translated">プラグの仕様です。</target>
        </trans-unit>
        <trans-unit id="43d162b21236b659adf8d5bf3af141f3266eea3d" translate="yes" xml:space="preserve">
          <source>The preferred form is to use &lt;code&gt;:from&lt;/code&gt; with an atom or tuple, since it will make your application independent from the starting directory. For example, if you pass:</source>
          <target state="translated">&lt;code&gt;:from&lt;/code&gt; をアトムまたはタプルで使用することをお勧めします。これにより、アプリケーションが開始ディレクトリから独立します。たとえば、次のように渡すと、</target>
        </trans-unit>
        <trans-unit id="50998ebe5bad0757359a407f8ec8b122a3958b71" translate="yes" xml:space="preserve">
          <source>The prefixes set in the query will be preserved when loading data.</source>
          <target state="translated">クエリで設定された接頭辞は、データをロードする際に保存されます。</target>
        </trans-unit>
        <trans-unit id="1526ebdce848190098bcbfdfb625b2e2ecb877e8" translate="yes" xml:space="preserve">
          <source>The presence information is returned as a map with presences grouped by key, cast as a string, and accumulated metadata, with the following form:</source>
          <target state="translated">プレゼンス情報は、プレゼンスをキーでグループ化し、文字列としてキャストし、メタデータを蓄積したマップとして、以下のような形式で返されます。</target>
        </trans-unit>
        <trans-unit id="8e1834c7ca0296001b89ac9864e746de523a9361" translate="yes" xml:space="preserve">
          <source>The primary key will be automatically included in &lt;code&gt;returning&lt;/code&gt; if the field has type &lt;code&gt;:id&lt;/code&gt; or &lt;code&gt;:binary_id&lt;/code&gt; and no value was set by the developer or none was autogenerated by the adapter.</source>
          <target state="translated">フィールドのタイプが &lt;code&gt;:id&lt;/code&gt; または &lt;code&gt;:binary_id&lt;/code&gt; であり、開発者が値を設定しなかった場合、またはアダプターによって値が自動生成されなかった場合、主キーは自動的に &lt;code&gt;returning&lt;/code&gt; れます。</target>
        </trans-unit>
        <trans-unit id="f2afcc11c269b0c54b1b7ac0efcd7b569f223f2f" translate="yes" xml:space="preserve">
          <source>The primitive types are:</source>
          <target state="translated">原始的な型は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="5475cd442271dc875207326bb4064eeb96befb25" translate="yes" xml:space="preserve">
          <source>The problem with this approach is that it breaks references in the database. You can&amp;rsquo;t use foreign keys and it is very inefficient, both in terms of query time and storage.</source>
          <target state="translated">このアプローチの問題は、データベース内の参照が壊れることです。外部キーは使用できず、クエリ時間とストレージの両方の面で非常に非効率的です。</target>
        </trans-unit>
        <trans-unit id="7a3a4c7f6a78c9326c8ef25ce0f6c69a3f78f0d2" translate="yes" xml:space="preserve">
          <source>The problem with this approach is that it breaks references in the database. You can't use foreign keys and it is very inefficient, both in terms of query time and storage.</source>
          <target state="translated">このアプローチの問題点は、データベース内の参照が壊れてしまうことです。外部キーを使用することはできませんし、クエリ時間とストレージの両方の面で非常に非効率的です。</target>
        </trans-unit>
        <trans-unit id="8d89d344e6a03d17bab84b370769a6045fb37ec3" translate="yes" xml:space="preserve">
          <source>The public fields are:</source>
          <target state="translated">公開されているフィールドは</target>
        </trans-unit>
        <trans-unit id="df908dd7366c676a05daf0e41f416b8dbf39971e" translate="yes" xml:space="preserve">
          <source>The query above will select all posts with category &quot;fresh and new&quot;, order by the most recently published, and return Post structs with only the id, title and body fields set. It is equivalent to:</source>
          <target state="translated">上記のクエリは、カテゴリが &quot;fresh and new &quot;のすべての投稿を選択し、最近公開されたものから順に、id、title、bodyフィールドのみが設定された投稿構造体を返します。と等価です。</target>
        </trans-unit>
        <trans-unit id="eff2eebe90fad772cf88b9e84a74f0fcaf7b64c1" translate="yes" xml:space="preserve">
          <source>The query above will select all posts with category &amp;ldquo;fresh and new&amp;rdquo;, order by the most recently published, and return Post structs with only the id, title and body fields set. It is equivalent to:</source>
          <target state="translated">上記のクエリは、カテゴリが「新鮮で新しい」であるすべての投稿を選択し、最近発行された順に並べ替え、ID、タイトル、本文フィールドのみが設定されたPost構造体を返します。これは次と同等です。</target>
        </trans-unit>
        <trans-unit id="95ca27e8b5eba197d23e18f17cf9ec5d46b73887" translate="yes" xml:space="preserve">
          <source>The query can be also rewritten as:</source>
          <target state="translated">クエリは次のように書き換えることもできます。</target>
        </trans-unit>
        <trans-unit id="e0868e0ab6d1da07933f0f38d5ca3b2c0b98ed62" translate="yes" xml:space="preserve">
          <source>The query given to preload may also preload its own associations.</source>
          <target state="translated">preloadに与えられたクエリは、それ自身のアソシエーションをプリロードすることもできます。</target>
        </trans-unit>
        <trans-unit id="5f6733486c5b72fc457e7eabc6d95cf5b2c0075a" translate="yes" xml:space="preserve">
          <source>The query ordering will be automatically reversed, with ASC columns becoming DESC columns (and vice-versa) and limit is set to 1. If there is no ordering, the query will be automatically ordered decreasingly by primary key.</source>
          <target state="translated">クエリの順序は自動的に逆になり、ASCカラムがDESCカラムになり(その逆もあります)、制限値は1に設定されます。 順序がない場合、クエリは自動的に主キーの数が減るように順序付けられます。</target>
        </trans-unit>
        <trans-unit id="0bac158f3c93347932c98c42dee10fb98d800771" translate="yes" xml:space="preserve">
          <source>The query prefix may be set either for the whole query or on each individual &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;join&lt;/code&gt; expression. If a &lt;code&gt;prefix&lt;/code&gt; is not given to a &lt;code&gt;from&lt;/code&gt; or a &lt;code&gt;join&lt;/code&gt;, the prefix of the schema given to the &lt;code&gt;from&lt;/code&gt; or &lt;code&gt;join&lt;/code&gt; is used. The query prefix is used only if none of the above are declared.</source>
          <target state="translated">クエリプレフィックスは、クエリ全体に対して設定することも、 &lt;code&gt;from&lt;/code&gt; および &lt;code&gt;join&lt;/code&gt; 式の各個人に対して設定することもできます。 &lt;code&gt;prefix&lt;/code&gt; が &lt;code&gt;from&lt;/code&gt; または &lt;code&gt;join&lt;/code&gt; に指定されていない場合、 &lt;code&gt;from&lt;/code&gt; または &lt;code&gt;join&lt;/code&gt; に指定されたスキーマの接頭辞が使用されます。クエリ接頭辞は、上記のどれも宣言されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="bbd403c978b262ae86cb591bfb4e43647aaa3204" translate="yes" xml:space="preserve">
          <source>The query will be automatically ordered by the primary key unless &lt;code&gt;order_by&lt;/code&gt; is given or &lt;code&gt;order_by&lt;/code&gt; is set in the query. Limit is always set to 1.</source>
          <target state="translated">クエリに &lt;code&gt;order_by&lt;/code&gt; が指定されているか、 &lt;code&gt;order_by&lt;/code&gt; が設定されていない限り、クエリは主キーによって自動的に並べ替えられます。制限は常に1に設定されます。</target>
        </trans-unit>
        <trans-unit id="6cfdedb0bfaec211bb278c06c452d42b9de504d0" translate="yes" xml:space="preserve">
          <source>The reason why the example above is wrong is because &lt;a href=&quot;#put_assoc/4&quot;&gt;&lt;code&gt;put_assoc/4&lt;/code&gt;&lt;/a&gt; always works with the &lt;strong&gt;full data&lt;/strong&gt;. So the example above will effectively &lt;strong&gt;erase all previous comments&lt;/strong&gt; and only keep the comment you are currently adding. Instead, you could try:</source>
          <target state="translated">上記の例が間違っている理由は、&lt;a href=&quot;#put_assoc/4&quot;&gt; &lt;code&gt;put_assoc/4&lt;/code&gt; が&lt;/a&gt;常に&lt;strong&gt;完全なデータで&lt;/strong&gt;機能するためです。したがって、上記の例では&lt;strong&gt;、以前のすべてのコメント&lt;/strong&gt;が効果的に&lt;strong&gt;消去され、&lt;/strong&gt;現在追加しているコメントのみが保持されます。代わりに、あなたは試すことができます：</target>
        </trans-unit>
        <trans-unit id="87305add73fb47f8d721c5faef9fcb8523b1a68e" translate="yes" xml:space="preserve">
          <source>The remaining functions in this module, such as validations, constraints, association handling, are about manipulating changesets. Let&amp;rsquo;s discuss some of this extra functionality.</source>
          <target state="translated">検証、制約、関連付けの処理など、このモジュールの残りの機能は、チェンジセットの操作に関するものです。この追加機能のいくつかについて説明しましょう。</target>
        </trans-unit>
        <trans-unit id="2a63cf0d6104e4fb432f90b5c23167e7813b2aa2" translate="yes" xml:space="preserve">
          <source>The remaining functions in this module, such as validations, constraints, association handling, are about manipulating changesets. Let's discuss some of this extra functionality.</source>
          <target state="translated">このモジュールの残りの機能、例えばバリデーション、制約、アソシエーション処理などは、チェンジセットの操作に関するものです。この追加機能のいくつかを説明しましょう。</target>
        </trans-unit>
        <trans-unit id="8a0133540c725182eeb9cebba83044fb36adb332" translate="yes" xml:space="preserve">
          <source>The repositories to create are the ones specified under the &lt;code&gt;:ecto_repos&lt;/code&gt; option in the current app configuration. However, if the &lt;code&gt;-r&lt;/code&gt; option is given, it replaces the &lt;code&gt;:ecto_repos&lt;/code&gt; config.</source>
          <target state="translated">作成するリポジトリは、現在のアプリ構成の &lt;code&gt;:ecto_repos&lt;/code&gt; オプションで指定されたものです。ただし、 &lt;code&gt;-r&lt;/code&gt; オプションを指定すると、 &lt;code&gt;:ecto_repos&lt;/code&gt; 構成が置き換えられます。</target>
        </trans-unit>
        <trans-unit id="40dd881afbf4316e3498baa3ef462026d3e04aaa" translate="yes" xml:space="preserve">
          <source>The repositories to drop are the ones specified under the &lt;code&gt;:ecto_repos&lt;/code&gt; option in the current app configuration. However, if the &lt;code&gt;-r&lt;/code&gt; option is given, it replaces the &lt;code&gt;:ecto_repos&lt;/code&gt; config.</source>
          <target state="translated">削除するリポジトリは、現在のアプリ構成の &lt;code&gt;:ecto_repos&lt;/code&gt; オプションで指定されているものです。ただし、 &lt;code&gt;-r&lt;/code&gt; オプションを指定すると、 &lt;code&gt;:ecto_repos&lt;/code&gt; 構成が置き換えられます。</target>
        </trans-unit>
        <trans-unit id="01f05ddc7ae85e61bdf357b4f9fe87ebe2fb186e" translate="yes" xml:space="preserve">
          <source>The repository will be placed in the &lt;code&gt;lib&lt;/code&gt; directory.</source>
          <target state="translated">リポジトリは &lt;code&gt;lib&lt;/code&gt; ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="fed09d1158b42d77503d7a48e9346028a907f505" translate="yes" xml:space="preserve">
          <source>The request &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; are required arguments. &lt;code&gt;method&lt;/code&gt; may be any value that implements &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#to_string/1&quot;&gt;&lt;code&gt;to_string/1&lt;/code&gt;&lt;/a&gt; and it will properly converted and normalized (e.g., &lt;code&gt;:get&lt;/code&gt; or &lt;code&gt;&quot;post&quot;&lt;/code&gt;).</source>
          <target state="translated">リクエスト &lt;code&gt;method&lt;/code&gt; と &lt;code&gt;path&lt;/code&gt; は必須の引数です。 &lt;code&gt;method&lt;/code&gt; は、&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#to_string/1&quot;&gt; &lt;code&gt;to_string/1&lt;/code&gt; &lt;/a&gt;を実装する任意の値で、適切に変換および正規化されます（例 &lt;code&gt;:get&lt;/code&gt; または &lt;code&gt;&quot;post&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e6553aee7958eb204e762483dc8ab5a0161d11fe" translate="yes" xml:space="preserve">
          <source>The request id is added to the Logger metadata as &lt;code&gt;:request_id&lt;/code&gt; and the response as the &quot;x-request-id&quot; HTTP header. To see the request id in your log output, configure your logger backends to include the &lt;code&gt;:request_id&lt;/code&gt; metadata:</source>
          <target state="translated">リクエストIDは &lt;code&gt;:request_id&lt;/code&gt; としてロガーメタデータに追加され、レスポンスは「x-request-id」HTTPヘッダーとして追加されます。ログ出力にリクエストIDを表示するには、 &lt;code&gt;:request_id&lt;/code&gt; メタデータを含めるようにロガーバックエンドを構成します。</target>
        </trans-unit>
        <trans-unit id="2c5f074e9b5c412ad29dd19562310620770be9f5" translate="yes" xml:space="preserve">
          <source>The request id is added to the Logger metadata as &lt;code&gt;:request_id&lt;/code&gt; and the response as the &amp;ldquo;x-request-id&amp;rdquo; HTTP header. To see the request id in your log output, configure your logger backends to include the &lt;code&gt;:request_id&lt;/code&gt; metadata:</source>
          <target state="translated">要求IDはLoggerメタデータに &lt;code&gt;:request_id&lt;/code&gt; として追加され、応答は「x-request-id」HTTPヘッダーとして追加されます。ログ出力でリクエストIDを確認するには、ロガーバックエンドを設定して、 &lt;code&gt;:request_id&lt;/code&gt; メタデータを含めます。</target>
        </trans-unit>
        <trans-unit id="bb1a8693dbf7be806d104c7fe770e40145397d5f" translate="yes" xml:space="preserve">
          <source>The request information in these fields is not populated until it is fetched using the associated &lt;code&gt;fetch_&lt;/code&gt; function. For example, the &lt;code&gt;cookies&lt;/code&gt; field uses &lt;a href=&quot;#fetch_cookies/2&quot;&gt;&lt;code&gt;fetch_cookies/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのフィールドのリクエスト情報は、関連する &lt;code&gt;fetch_&lt;/code&gt; 関数を使用してフェッチされるまで入力されません。たとえば、 &lt;code&gt;cookies&lt;/code&gt; フィールドは&lt;a href=&quot;#fetch_cookies/2&quot;&gt; &lt;code&gt;fetch_cookies/2&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="42d5b6701eebdfc545f5a296c3ed4d4a66bb5d50" translate="yes" xml:space="preserve">
          <source>The request will not be processed due to a client error.</source>
          <target state="translated">クライアントのエラーにより、リクエストは処理されません。</target>
        </trans-unit>
        <trans-unit id="4ca366dc222472a65071107117c79a6d7bda94b4" translate="yes" xml:space="preserve">
          <source>The resource fields are given using &lt;code&gt;name:type&lt;/code&gt; syntax where type are the types supported by Ecto. Omitting the type makes it default to &lt;code&gt;:string&lt;/code&gt;:</source>
          <target state="translated">リソースフィールドは &lt;code&gt;name:type&lt;/code&gt; 構文を使用して指定されます。typeはEctoでサポートされるタイプです。タイプを省略すると、デフォルトで &lt;code&gt;:string&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="1097b0ddcaad963de9fecf51f90f2b6fa20570d6" translate="yes" xml:space="preserve">
          <source>The response will be sent with the status code defined within the connection, via &lt;a href=&quot;../plug/plug.conn#put_status/2&quot;&gt;&lt;code&gt;Plug.Conn.put_status/2&lt;/code&gt;&lt;/a&gt;. If no status code is set, a 302 response is sent.</source>
          <target state="translated">応答は、&lt;a href=&quot;../plug/plug.conn#put_status/2&quot;&gt; &lt;code&gt;Plug.Conn.put_status/2&lt;/code&gt; を&lt;/a&gt;介して、接続内で定義されたステータスコードとともに送信されます。ステータスコードが設定されていない場合、302応答が送信されます。</target>
        </trans-unit>
        <trans-unit id="cde9dc4c4422fde222d1887d84b0d0b8e0065c5e" translate="yes" xml:space="preserve">
          <source>The result returned by &lt;code&gt;init/1&lt;/code&gt; is passed as second argument to &lt;code&gt;call/2&lt;/code&gt;. Note that &lt;code&gt;init/1&lt;/code&gt; may be called during compilation and as such it must not return pids, ports or values that are not specific to the runtime.</source>
          <target state="translated">&lt;code&gt;init/1&lt;/code&gt; によって返された結果は、2番目の引数として &lt;code&gt;call/2&lt;/code&gt; に渡されます。そのノート &lt;code&gt;init/1&lt;/code&gt; コンパイル時に呼び出すことができる、そのようなものとして、それは実行時に特定されないPIDを、ポートまたは値を返してはなりません。</target>
        </trans-unit>
        <trans-unit id="c468a501cc213c281f4ebc6e80d77300fb92019e" translate="yes" xml:space="preserve">
          <source>The return value of each &amp;ldquo;before&amp;rdquo; event callback will be stored and passed to the corresponding &amp;ldquo;after&amp;rdquo; callback.</source>
          <target state="translated">各「before」イベントコールバックの戻り値は保存され、対応する「after」コールバックに渡されます。</target>
        </trans-unit>
        <trans-unit id="bdebdedcaeb020e5415f8353d03e0b77bd7af755" translate="yes" xml:space="preserve">
          <source>The returned result is given to &lt;code&gt;execute/6&lt;/code&gt;.</source>
          <target state="translated">返された結果は &lt;code&gt;execute/6&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="aa37f4a12198ad1c63cc6b2c6592271817c66fee" translate="yes" xml:space="preserve">
          <source>The right side may either be a list, a literal list or even a column in the database with array type:</source>
          <target state="translated">右辺はリスト、リテラルリスト、あるいは配列型のデータベースのカラムのいずれかになります。</target>
        </trans-unit>
        <trans-unit id="152177e9ac83ea80f027842928a7dd7f74f8ab54" translate="yes" xml:space="preserve">
          <source>The route above will dispatch to &lt;code&gt;MyApp.PageController&lt;/code&gt;. This syntax is not only convenient for developers, since we don&amp;rsquo;t have to repeat the &lt;code&gt;MyApp.&lt;/code&gt; prefix on all routes, but it also allows Phoenix to put less pressure in the Elixir compiler. If instead we had written:</source>
          <target state="translated">上記のルートは &lt;code&gt;MyApp.PageController&lt;/code&gt; にディスパッチされます。 &lt;code&gt;MyApp.&lt;/code&gt; を繰り返す必要がないため、この構文は開発者にとって便利なだけではありません。すべてのルートに接頭辞を付けますが、これにより、PhoenixがElixirコンパイラーにかかる圧力を軽減できます。代わりに私たちが書いた場合：</target>
        </trans-unit>
        <trans-unit id="65e16ececbb9266a02583f54b94cf09861ee56a7" translate="yes" xml:space="preserve">
          <source>The route above will dispatch to &lt;code&gt;MyAppWeb.PageController&lt;/code&gt;. This syntax is not only convenient for developers, since we don't have to repeat the &lt;code&gt;MyAppWeb.&lt;/code&gt; prefix on all routes, but it also allows Phoenix to put less pressure on the Elixir compiler. If instead we had written:</source>
          <target state="translated">上記のルートは &lt;code&gt;MyAppWeb.PageController&lt;/code&gt; にディスパッチされます。 &lt;code&gt;MyAppWeb.&lt;/code&gt; を繰り返す必要がないため、この構文は開発者にとって便利なだけではありません。すべてのルートにプレフィックスを付けますが、PhoenixがElixirコンパイラにかける圧力を軽減することもできます。代わりに私たちが書いた場合：</target>
        </trans-unit>
        <trans-unit id="49ffcfff6909dca94a4eae307d1f02ebefe5118b" translate="yes" xml:space="preserve">
          <source>The route can dispatch either to a function body or a Plug module.</source>
          <target state="translated">ルートは、ファンクションボディまたはプラグモジュールのいずれかにディスパッチすることができます。</target>
        </trans-unit>
        <trans-unit id="2939bacf3d39ca96536e1c8b322db4114aa2c1fe" translate="yes" xml:space="preserve">
          <source>The route:</source>
          <target state="translated">ルートです。</target>
        </trans-unit>
        <trans-unit id="b92d4396a601bd78f5174bee334d0b156a731866" translate="yes" xml:space="preserve">
          <source>The router emits the following telemetry events:</source>
          <target state="translated">ルータは以下のテレメトリイベントを発します。</target>
        </trans-unit>
        <trans-unit id="5e68c3ae1fbcab887151d89b16d2cba345f34fa8" translate="yes" xml:space="preserve">
          <source>The router is itself a plug, which means it can be invoked as:</source>
          <target state="translated">ルーターはそれ自体がプラグであり、つまり、プラグとして呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="a54219a575937cd1ecc7766ae2a1627937d5863d" translate="yes" xml:space="preserve">
          <source>The router provides a set of macros for generating routes that dispatch to specific controllers and actions. Those macros are named after HTTP verbs. For example:</source>
          <target state="translated">ルータは、特定のコントローラやアクションにディスパッチするルートを生成するためのマクロのセットを提供します。これらのマクロは HTTP 動詞にちなんで名付けられています。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="49855ec648da9ffc07970ba4da5777bc9db4c4b3" translate="yes" xml:space="preserve">
          <source>The same event callback is called again, this time with the atom &lt;code&gt;:stop&lt;/code&gt; as the first argument; see the &amp;ldquo;After clause&amp;rdquo; section below.</source>
          <target state="translated">同じイベントコールバックが再度呼び出されますが、今回は最初の引数としてアトム &lt;code&gt;:stop&lt;/code&gt; を使用しています。以下の「After句」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="65de666ef1e1e220f9c0d9372a51d104406e67a1" translate="yes" xml:space="preserve">
          <source>The schema also allows us to interact with a repository:</source>
          <target state="translated">スキーマは、リポジトリとの対話も可能にしてくれます。</target>
        </trans-unit>
        <trans-unit id="dc68d1c060a62f551303cd6da271796006c2c527" translate="yes" xml:space="preserve">
          <source>The schema can be of any value. The path represents the database name while options are simply merged in.</source>
          <target state="translated">スキーマは任意の値を指定できます。パスはデータベース名を表し、オプションは単純にマージされます。</target>
        </trans-unit>
        <trans-unit id="f4534f8ae409e6a396fbbf9dca42834fd3a4a272" translate="yes" xml:space="preserve">
          <source>The schema is responsible for mapping the database fields into an Elixir struct.</source>
          <target state="translated">スキーマは、データベースのフィールドをElixir構造体にマッピングします。</target>
        </trans-unit>
        <trans-unit id="f2c63087f504426ce8dc15eb5b941125dcbaa4ed" translate="yes" xml:space="preserve">
          <source>The schema is responsible for mapping the database fields into an Elixir struct. It is followed by an optional list of attributes, with their respective names and types. See &lt;a href=&quot;mix.tasks.phx.gen.schema&quot;&gt;&lt;code&gt;mix phx.gen.schema&lt;/code&gt;&lt;/a&gt; for more information on attributes.</source>
          <target state="translated">スキーマは、データベースフィールドをElixir構造体にマッピングする役割を果たします。その後に、それぞれの名前とタイプを含む、オプションの属性リストが続きます。属性の詳細については、&lt;a href=&quot;mix.tasks.phx.gen.schema&quot;&gt; &lt;code&gt;mix phx.gen.schema&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e857c9bd7068c28cafcac14000408ae312ea8b02" translate="yes" xml:space="preserve">
          <source>The schema module can be defined inline in the parent schema in simple cases:</source>
          <target state="translated">単純なケースでは、親スキーマのインラインでスキーマモジュールを定義することができます。</target>
        </trans-unit>
        <trans-unit id="35b62780b2378828f2f7ab21b8fde93c07ed6f06" translate="yes" xml:space="preserve">
          <source>The second and third argument that each event callback takes depends on the callback being an &amp;ldquo;after&amp;rdquo; or a &amp;ldquo;before&amp;rdquo; callback i.e. it depends on the value of the first argument, &lt;code&gt;:start&lt;/code&gt; or &lt;code&gt;:stop&lt;/code&gt;. For this reason, most of the time you will want to define (at least) two separate clauses for each event callback, one for the &amp;ldquo;before&amp;rdquo; and one for the &amp;ldquo;after&amp;rdquo; callbacks.</source>
          <target state="translated">各イベントコールバックが取る2番目と3番目の引数は、コールバックが「後」または「前」のコールバックであるかどうかに依存します。つまり、最初の引数 &lt;code&gt;:start&lt;/code&gt; または &lt;code&gt;:stop&lt;/code&gt; の値に依存します。このため、ほとんどの場合、各イベントコールバックに対して（少なくとも）2つの句を定義する必要があります。1つは「前」コールバック用で、もう1つは「後」コールバック用です。</target>
        </trans-unit>
        <trans-unit id="8e57d6963dd7d705a901c4d4e7c1eb9745bf3c6f" translate="yes" xml:space="preserve">
          <source>The second argument &lt;code&gt;data&lt;/code&gt; specifies fields and values that are to be loaded. It can be a map, a keyword list, or a &lt;code&gt;{fields, values}&lt;/code&gt; tuple. Fields can be atoms or strings.</source>
          <target state="translated">2番目の引数 &lt;code&gt;data&lt;/code&gt; は、ロードされるフィールドと値を指定します。これは、マップ、キーワードリスト、または &lt;code&gt;{fields, values}&lt;/code&gt; タプルにすることができます。フィールドは、アトムまたは文字列です。</target>
        </trans-unit>
        <trans-unit id="8bdda78bcfbc0f79c0c506943ef025fc56fbcad4" translate="yes" xml:space="preserve">
          <source>The second argument is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;cryptographic salt&lt;/a&gt; which must be the same in both calls to &lt;a href=&quot;#sign/4&quot;&gt;&lt;code&gt;sign/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#verify/4&quot;&gt;&lt;code&gt;verify/4&lt;/code&gt;&lt;/a&gt;. For instance, it may be called &quot;user auth&quot; and treated as namespace when generating a token that will be used to authenticate users on channels or on your APIs.</source>
          <target state="translated">2番目の引数は&lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;暗号ソルト&lt;/a&gt;であり、&lt;a href=&quot;#sign/4&quot;&gt; &lt;code&gt;sign/4&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#verify/4&quot;&gt; &lt;code&gt;verify/4&lt;/code&gt; の&lt;/a&gt;両方の呼び出しで同じである必要があります。たとえば、「ユーザー認証」と呼ばれ、チャネルまたはAPIでユーザーを認証するために使用されるトークンを生成するときに名前空間として扱われる場合があります。</target>
        </trans-unit>
        <trans-unit id="8bbd999bbec42a3e7fb283772187deec6149dcdd" translate="yes" xml:space="preserve">
          <source>The second argument is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;cryptographic salt&lt;/a&gt; which must be the same in both calls to &lt;a href=&quot;#sign/4&quot;&gt;&lt;code&gt;sign/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#verify/4&quot;&gt;&lt;code&gt;verify/4&lt;/code&gt;&lt;/a&gt;. For instance, it may be called &amp;ldquo;user auth&amp;rdquo; when generating a token that will be used to authenticate users on channels or on your APIs.</source>
          <target state="translated">2番目の引数は&lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;暗号化ソルト&lt;/a&gt;であり、&lt;a href=&quot;#sign/4&quot;&gt; &lt;code&gt;sign/4&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#verify/4&quot;&gt; &lt;code&gt;verify/4&lt;/code&gt; の&lt;/a&gt;両方の呼び出しで同じでなければなりません。たとえば、チャネルまたはAPIでユーザーを認証するために使用されるトークンを生成する場合、「ユーザー認証」と呼ばれることがあります。</target>
        </trans-unit>
        <trans-unit id="0127918dc247714fd5e025d35570e68dd2593e39" translate="yes" xml:space="preserve">
          <source>The second argument is the repository configuration as stored in the application environment. It must return &lt;code&gt;{:ok, keyword}&lt;/code&gt; with the updated list of configuration or &lt;code&gt;:ignore&lt;/code&gt; (only in the &lt;code&gt;:supervisor&lt;/code&gt; case).</source>
          <target state="translated">2番目の引数は、アプリケーション環境に保管されたリポジトリー構成です。更新された構成リストまたは &lt;code&gt;:ignore&lt;/code&gt; を使用して &lt;code&gt;{:ok, keyword}&lt;/code&gt; を返す必要があります（ &lt;code&gt;:supervisor&lt;/code&gt; の場合のみ）。</target>
        </trans-unit>
        <trans-unit id="8ca2c1c0ef1b8f7a6c12e80c16925947b70511e2" translate="yes" xml:space="preserve">
          <source>The second argument must be &lt;code&gt;{:binary, contents}&lt;/code&gt;, where &lt;code&gt;contents&lt;/code&gt; will be sent as download, or&lt;code&gt;{:file, path}&lt;/code&gt;, where &lt;code&gt;path&lt;/code&gt; is the filesystem location of the file to be sent. Be careful to not interpolate the path from external parameters, as it could allow traversal of the filesystem.</source>
          <target state="translated">2番目の引数がなければならない &lt;code&gt;{:binary, contents}&lt;/code&gt; 、 &lt;code&gt;contents&lt;/code&gt; ダウンロード、又は送信される &lt;code&gt;{:file, path}&lt;/code&gt; 、 &lt;code&gt;path&lt;/code&gt; 送信するファイルのファイルシステムの場所です。ファイルシステムのトラバーサルを可能にする可能性があるため、外部パラメーターからパスを補間しないように注意してください。</target>
        </trans-unit>
        <trans-unit id="7f2d03f9984f042abc33381531414bedeec9588a" translate="yes" xml:space="preserve">
          <source>The serializer &lt;code&gt;decode!&lt;/code&gt; function must return a &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; which is forwarded to channels except:</source>
          <target state="translated">シリアライザ &lt;code&gt;decode!&lt;/code&gt; 関数は、&lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;を除くチャネルに転送されるPhoenix.Socket.Messageを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="d1d3f623b2642c248a3d2a66503afa329aff8fe9" translate="yes" xml:space="preserve">
          <source>The server may send messages or replies back. For messages, the ref uniquely identifies the message. For replies, the ref matches the original message. Both data-types also include a join_ref that uniquely identifies the currently joined channel.</source>
          <target state="translated">サーバはメッセージを送信したり、返信を返したりすることができます。メッセージの場合、ref はメッセージを一意に識別します。返信の場合、ref は元のメッセージにマッチします。どちらのデータ型にも、現在参加しているチャネルを一意に識別する join_ref が含まれています。</target>
        </trans-unit>
        <trans-unit id="efdb100e8fb22edffbda4a2f9c62ff5b45f532b5" translate="yes" xml:space="preserve">
          <source>The session contents, the final data to be stored after it has been built with &lt;a href=&quot;plug.conn#put_session/3&quot;&gt;&lt;code&gt;Plug.Conn.put_session/3&lt;/code&gt;&lt;/a&gt; and the other session manipulating functions</source>
          <target state="translated">セッションの内容、&lt;a href=&quot;plug.conn#put_session/3&quot;&gt; &lt;code&gt;Plug.Conn.put_session/3&lt;/code&gt; で&lt;/a&gt;構築された後に保存される最終データ、およびその他のセッション操作関数</target>
        </trans-unit>
        <trans-unit id="8b95a016960327d8adfb4b2a4fa7945022268acb" translate="yes" xml:space="preserve">
          <source>The session contents, the final data to be stored after it has been built with &lt;a href=&quot;plug.conn#put_session/3&quot;&gt;&lt;code&gt;Plug.Conn.put_session/3&lt;/code&gt;&lt;/a&gt; and the other session manipulating functions.</source>
          <target state="translated">セッションの内容、&lt;a href=&quot;plug.conn#put_session/3&quot;&gt; &lt;code&gt;Plug.Conn.put_session/3&lt;/code&gt; &lt;/a&gt;およびその他のセッション操作関数で構築された後に保存される最終データ。</target>
        </trans-unit>
        <trans-unit id="a534b349ad0dd4485a26018b51cb99468bc99b42" translate="yes" xml:space="preserve">
          <source>The session id may be nil in case the cookie does not identify any value in the store. The session contents must be a map.</source>
          <target state="translated">クッキーがストア内のいかなる値も識別しない場合、セッションIDはnilであってもよい。セッションの内容はマップでなければなりません。</target>
        </trans-unit>
        <trans-unit id="45b3c50494949266d4502d1426e160d856709a04" translate="yes" xml:space="preserve">
          <source>The session is accessed via functions on &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;. Cookies and session have to be fetched with &lt;a href=&quot;plug.conn#fetch_session/1&quot;&gt;&lt;code&gt;Plug.Conn.fetch_session/1&lt;/code&gt;&lt;/a&gt; before the session can be accessed.</source>
          <target state="translated">セッションは&lt;a href=&quot;plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; の&lt;/a&gt;関数を介してアクセスされます。Cookieとセッションは、セッションにアクセスする前に&lt;a href=&quot;plug.conn#fetch_session/1&quot;&gt; &lt;code&gt;Plug.Conn.fetch_session/1&lt;/code&gt; で&lt;/a&gt;フェッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="ea6faaf4abb4d9eac550e7cdd062da8586b666dd" translate="yes" xml:space="preserve">
          <source>The session is also lazy. Once configured, a cookie header with the session will only be sent to the client if something is written to the session in the first place.</source>
          <target state="translated">セッションも怠け者です。一度設定されると、セッションを含むクッキーヘッダは、最初にセッションに何かが書き込まれた場合にのみクライアントに送信されます。</target>
        </trans-unit>
        <trans-unit id="9ba204c596e34571bf913673b8b59a88885aaca5" translate="yes" xml:space="preserve">
          <source>The signing and encryption keys are derived from the connection's &lt;code&gt;secret_key_base&lt;/code&gt; using a salt that is built by appending &quot;_cookie&quot; to the cookie name. Care should be taken not to derive other keys using this value as the salt. Similarly do not use the same cookie name to store different values with distinct purposes.</source>
          <target state="translated">署名キーと暗号化キーは、Cookie名に「_cookie」を追加して作成されたソルトを使用して、接続の &lt;code&gt;secret_key_base&lt;/code&gt; から取得されます。この値をソルトとして使用して他のキーを導出しないように注意する必要があります。同様に、異なる目的で異なる値を保存するために同じCookie名を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="b42889c924bd9345b669263e4a09c0e69b581550" translate="yes" xml:space="preserve">
          <source>The socket endpoint is read from the &lt;code&gt;@endpoint&lt;/code&gt; variable.</source>
          <target state="translated">ソケットのエンドポイントは、 &lt;code&gt;@endpoint&lt;/code&gt; 変数から読み取られます。</target>
        </trans-unit>
        <trans-unit id="e8353003894eb4918615880dd892b3fb26308d6c" translate="yes" xml:space="preserve">
          <source>The socket is then used to subscribe and join channels. Use this function when you want to create a blank socket to pass to functions like &lt;code&gt;UserSocket.connect/2&lt;/code&gt;.</source>
          <target state="translated">ソケットは、チャネルのサブスクライブと参加に使用されます。この関数は、 &lt;code&gt;UserSocket.connect/2&lt;/code&gt; などの関数に渡す空のソケットを作成する場合に使用します。</target>
        </trans-unit>
        <trans-unit id="741b1725667e8d637e90c04ad708be61a6c67966" translate="yes" xml:space="preserve">
          <source>The socket is then used to subscribe and join channels. Use this function when you want to create a blank socket to pass to functions like &lt;code&gt;UserSocket.connect/3&lt;/code&gt;.</source>
          <target state="translated">次に、ソケットはチャネルのサブスクライブと参加に使用されます。 &lt;code&gt;UserSocket.connect/3&lt;/code&gt; などの関数に渡す空白のソケットを作成する場合は、この関数を使用します。</target>
        </trans-unit>
        <trans-unit id="df8020d63833291b1200da532130369857dd6057" translate="yes" xml:space="preserve">
          <source>The state of the schema is stored in the &lt;code&gt;:state&lt;/code&gt; field and allows following values:</source>
          <target state="translated">スキーマの状態は &lt;code&gt;:state&lt;/code&gt; フィールドに格納され、次の値を許可します。</target>
        </trans-unit>
        <trans-unit id="aa78ee5880f730e34341dec231106792a1c1612d" translate="yes" xml:space="preserve">
          <source>The status can be an integer, an atom, or &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;plug.conn.status&quot;&gt;&lt;code&gt;Plug.Conn.Status&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">ステータスは、整数、アトム、または &lt;code&gt;nil&lt;/code&gt; です。詳細については、&lt;a href=&quot;plug.conn.status&quot;&gt; &lt;code&gt;Plug.Conn.Status&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="549a0fdbf17866c901bbe69f809cf1df06203fc0" translate="yes" xml:space="preserve">
          <source>The status code can be &lt;code&gt;nil&lt;/code&gt;, an integer or an atom. The list of allowed atoms is available in &lt;a href=&quot;plug.conn.status&quot;&gt;&lt;code&gt;Plug.Conn.Status&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ステータスコードは &lt;code&gt;nil&lt;/code&gt; 、整数、またはアトムです。許可されるアトムのリストは、&lt;a href=&quot;plug.conn.status&quot;&gt; &lt;code&gt;Plug.Conn.Status&lt;/code&gt; &lt;/a&gt;で利用できます。</target>
        </trans-unit>
        <trans-unit id="3baf68608bb7edc0144295a9de68bd827a0c3d1c" translate="yes" xml:space="preserve">
          <source>The status code can be &lt;code&gt;nil&lt;/code&gt;, an integer, or an atom. The list of allowed atoms is available in &lt;a href=&quot;plug.conn.status&quot;&gt;&lt;code&gt;Plug.Conn.Status&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ステータスコードは &lt;code&gt;nil&lt;/code&gt; 、整数、またはアトムです。許可されるアトムのリストは、&lt;a href=&quot;plug.conn.status&quot;&gt; &lt;code&gt;Plug.Conn.Status&lt;/code&gt; &lt;/a&gt;で利用できます。</target>
        </trans-unit>
        <trans-unit id="9b7700abeab24f899ce4198c80479749838f3339" translate="yes" xml:space="preserve">
          <source>The supported keys are:</source>
          <target state="translated">対応しているキーは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="db2280a174b18020a2620736642518bf66a11dab" translate="yes" xml:space="preserve">
          <source>The supported options are:</source>
          <target state="translated">サポートされているオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="01f20fe2845d2b1bdb9951b6a8d84f277b6b5d78" translate="yes" xml:space="preserve">
          <source>The syntax above is equivalent to:</source>
          <target state="translated">上記の構文は、次のようなものと同等です。</target>
        </trans-unit>
        <trans-unit id="8a40be796b70fed45f015e64809fd60c04642951" translate="yes" xml:space="preserve">
          <source>The temporary directory where files are streamed to can be customized by setting the &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; environment variable on the host system. If &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; isn&amp;rsquo;t set, Plug will look at some environment variables which usually hold the value of the system&amp;rsquo;s temporary directory (like &lt;code&gt;TMPDIR&lt;/code&gt; or &lt;code&gt;TMP&lt;/code&gt;). If no value is found in any of those variables, &lt;code&gt;/tmp&lt;/code&gt; is used as a default.</source>
          <target state="translated">ホストシステムで &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; 環境変数を設定することにより、ファイルのストリーミング先の一時ディレクトリをカスタマイズできます。 &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; が設定されていない場合、プラグは通常システムの一時ディレクトリ（ &lt;code&gt;TMPDIR&lt;/code&gt; や &lt;code&gt;TMP&lt;/code&gt; など）の値を保持するいくつかの環境変数を調べます。これらの変数のいずれにも値が見つからない場合、 &lt;code&gt;/tmp&lt;/code&gt; がデフォルトとして使用されます。</target>
        </trans-unit>
        <trans-unit id="abfd2e746ee341013e4cdbafc97dfddc04d08e71" translate="yes" xml:space="preserve">
          <source>The temporary directory where files are streamed to can be customized by setting the &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; environment variable on the host system. If &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; isn't set, Plug will look at some environment variables which usually hold the value of the system's temporary directory (like &lt;code&gt;TMPDIR&lt;/code&gt; or &lt;code&gt;TMP&lt;/code&gt;). If no value is found in any of those variables, &lt;code&gt;/tmp&lt;/code&gt; is used as a default.</source>
          <target state="translated">ファイルのストリーミング先の一時ディレクトリは、ホストシステムで &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; 環境変数を設定することでカスタマイズできます。 &lt;code&gt;PLUG_TMPDIR&lt;/code&gt; が設定されていない場合、Plugは、通常はシステムの一時ディレクトリの値を保持するいくつかの環境変数（ &lt;code&gt;TMPDIR&lt;/code&gt; や &lt;code&gt;TMP&lt;/code&gt; など）を調べます。これらの変数のいずれにも値が見つからない場合は、デフォルトとして &lt;code&gt;/tmp&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="6008af9872175b7be58ce5d3be6044dce8156ae7" translate="yes" xml:space="preserve">
          <source>The test process will not receive the published message. This triggers the &lt;code&gt;handle_out/3&lt;/code&gt; callback in the channel.</source>
          <target state="translated">テストプロセスは、公開されたメッセージを受信しません。これにより、 &lt;code&gt;handle_out/3&lt;/code&gt; コールバックがトリガーされます。</target>
        </trans-unit>
        <trans-unit id="96e4f76aa06de2592f470fd3dea7b0c4ef31375c" translate="yes" xml:space="preserve">
          <source>The third and final option is to use &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt; to define the relationships between the resources. In this case, the comments table won&amp;rsquo;t have the foreign key, instead there is a intermediary table responsible for associating the entries:</source>
          <target state="translated">3番目の最後のオプションは、&lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt;を使用してリソース間の関係を定義することです。この場合、コメントテーブルには外部キーがありません。代わりに、エントリを関連付ける中間テーブルがあります。</target>
        </trans-unit>
        <trans-unit id="8de91f694a160eac98f8736952f2a3f88136e353" translate="yes" xml:space="preserve">
          <source>The third and final option is to use &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt; to define the relationships between the resources. In this case, the comments table won't have the foreign key, instead there is an intermediary table responsible for associating the entries:</source>
          <target state="translated">3番目の最後のオプションは、&lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt;を使用してリソース間の関係を定義することです。この場合、コメントテーブルには外部キーがありません。代わりに、エントリの関連付けを担当する中間テーブルがあります。</target>
        </trans-unit>
        <trans-unit id="aa9b72d684ded4fbc52b2db0fd313e2feea35d4f" translate="yes" xml:space="preserve">
          <source>The third argument &lt;code&gt;format&lt;/code&gt; is the format the data has been dumped as. For example, databases may dump embedded to &lt;code&gt;:json&lt;/code&gt;, this function allows such dumped data to be put back into the schemas.</source>
          <target state="translated">3番目の引数の &lt;code&gt;format&lt;/code&gt; は、データがダンプされた形式です。たとえば、データベースは &lt;code&gt;:json&lt;/code&gt; に埋め込まれてダンプされる場合があります。この関数を使用すると、そのようなダンプされたデータをスキーマに戻すことができます。</target>
        </trans-unit>
        <trans-unit id="22dfe15ea505dc65004d52b00565b0529f3c5106" translate="yes" xml:space="preserve">
          <source>The third argument can be any term (string, int, list, etc.) that you wish to codify into the token. Upon valid verification, this same term will be extracted from the token.</source>
          <target state="translated">3 番目の引数には、トークンにコード化したい任意の項(文字列、int、リストなど)を指定できます。有効な検証が行われると、この同じ項がトークンから抽出されます。</target>
        </trans-unit>
        <trans-unit id="a1c2052b68df8425edb8d31ef1ad3c1921b372fa" translate="yes" xml:space="preserve">
          <source>The timeout is in milliseconds and defaults to 100ms.</source>
          <target state="translated">タイムアウトはミリ秒単位で、デフォルトは100msです。</target>
        </trans-unit>
        <trans-unit id="ecb554852eb06b5cfc5cc2ec1aa86dbe934028bb" translate="yes" xml:space="preserve">
          <source>The timeout is in milliseconds and defaults to 100ms. Keep in mind this macro will block the test by the timeout value, so use it only when necessary as overuse will certainly slow down your test suite.</source>
          <target state="translated">タイムアウトはミリ秒単位で、デフォルトは100msです。このマクロはタイムアウト値によってテストをブロックするので、使いすぎるとテストスイートが遅くなるので、必要な場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="1304926df4500481102d8f6f3aa1797e91270270" translate="yes" xml:space="preserve">
          <source>The timeout is in milliseconds and defaults to the &lt;code&gt;:assert_receive_timeout&lt;/code&gt; set on the &lt;code&gt;:ex_unit&lt;/code&gt; application (which defaults to 100ms).</source>
          <target state="translated">タイムアウトはミリ秒で、デフォルトである &lt;code&gt;:assert_receive_timeout&lt;/code&gt; にセット &lt;code&gt;:ex_unit&lt;/code&gt; アプリケーション（100ミリ秒デフォルト）。</target>
        </trans-unit>
        <trans-unit id="b6a222ff7aa627d2ff58408f68862da0a0c1ac3d" translate="yes" xml:space="preserve">
          <source>The timeout is in milliseconds and defaults to the &lt;code&gt;:refute_receive_timeout&lt;/code&gt; set on the &lt;code&gt;:ex_unit&lt;/code&gt; application (which defaults to 100ms). Keep in mind this macro will block the test by the timeout value, so use it only when necessary as overuse will certainly slow down your test suite.</source>
          <target state="translated">タイムアウトはミリ秒、デフォルトである &lt;code&gt;:refute_receive_timeout&lt;/code&gt; オンセット &lt;code&gt;:ex_unit&lt;/code&gt; アプリケーション（100ミリ秒デフォルト）。このマクロはタイムアウト値によってテストをブロックすることに注意してください。使いすぎるとテストスイートの速度が確実に低下するため、必要な場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="0b4fff6f531f38d34226e8259653e269c039cae2" translate="yes" xml:space="preserve">
          <source>The timestamp is updated whenever there is a read or write to the table and it may be used to detect if a session is still active.</source>
          <target state="translated">タイムスタンプはテーブルへの読み書きがあったときに更新され、セッションがまだアクティブであるかどうかを検出するために使用されることがあります。</target>
        </trans-unit>
        <trans-unit id="81762c19246e6846b2e980ea04896a37c7853877" translate="yes" xml:space="preserve">
          <source>The token may be sent by the request either via the params with key &quot;_csrf_token&quot; or a header with name &quot;x-csrf-token&quot;.</source>
          <target state="translated">トークンは、&quot;_csrf_token &quot;というキーを持つパラメータか、&quot;x-csrf-token &quot;という名前のヘッダを介してリクエストによって送信されます。</target>
        </trans-unit>
        <trans-unit id="a5072feb3a5cec39cc2fc00a21cad324ac72eccb" translate="yes" xml:space="preserve">
          <source>The token may be sent by the request either via the params with key &amp;ldquo;_csrf_token&amp;rdquo; or a header with name &amp;ldquo;x-csrf-token&amp;rdquo;.</source>
          <target state="translated">トークンは、「_ csrf_token」というキーを持つparamsまたは「x-csrf-token」という名前のヘッダーを介して、リクエストによって送信できます。</target>
        </trans-unit>
        <trans-unit id="92ce00aada35b93b3fdf93d5a2e7544465e5a9ee" translate="yes" xml:space="preserve">
          <source>The transaction will return the value given as &lt;code&gt;{:error, value}&lt;/code&gt;.</source>
          <target state="translated">トランザクションは、 &lt;code&gt;{:error, value}&lt;/code&gt; として指定された値を返します。</target>
        </trans-unit>
        <trans-unit id="144f4cd1edb440f47f1246559392f7aed2405665" translate="yes" xml:space="preserve">
          <source>The transport behaviour</source>
          <target state="translated">輸送行動</target>
        </trans-unit>
        <trans-unit id="ffde96e4790584145c12afb10941ddbcfe63b5c3" translate="yes" xml:space="preserve">
          <source>The transport passes a map of metadata and the socket returns &lt;code&gt;{:ok, state}&lt;/code&gt; or &lt;code&gt;:error&lt;/code&gt;. The state must be stored by the transport and returned in all future operations.</source>
          <target state="translated">トランスポートはメタデータのマップを渡し、ソケットは &lt;code&gt;{:ok, state}&lt;/code&gt; または &lt;code&gt;:error&lt;/code&gt; を返します。状態はトランスポートによって保存され、今後のすべての操作で返される必要があります。</target>
        </trans-unit>
        <trans-unit id="0618061b416a03f218c617e087e2e53df218e5c9" translate="yes" xml:space="preserve">
          <source>The transport requires one function:</source>
          <target state="translated">輸送には1つの機能が必要です。</target>
        </trans-unit>
        <trans-unit id="2c0b95368d8ebf1cd3519374ade97eb4d383c66c" translate="yes" xml:space="preserve">
          <source>The triggers the &lt;code&gt;handle_in/3&lt;/code&gt; callback in the channel.</source>
          <target state="translated">トリガーは、チャネルの &lt;code&gt;handle_in/3&lt;/code&gt; コールバックをトリガーします。</target>
        </trans-unit>
        <trans-unit id="42337bbf47f302b6017a80123d119d2018afc1ba" translate="yes" xml:space="preserve">
          <source>The underlying data in the JSON column is returned without any additional decoding. This means &quot;null&quot; JSON values are not the same as SQL's &quot;null&quot;. For example, the &lt;code&gt;Repo.all&lt;/code&gt; operation below returns an empty list because &lt;code&gt;p.meta[&quot;author&quot;]&lt;/code&gt; returns JSON's null and therefore &lt;code&gt;is_nil&lt;/code&gt; does not succeed:</source>
          <target state="translated">JSON列の基になるデータは、追加のデコードなしで返されます。これは、「null」のJSON値がSQLの「null」と同じではないことを意味します。たとえば、以下の &lt;code&gt;Repo.all&lt;/code&gt; 操作は、 &lt;code&gt;p.meta[&quot;author&quot;]&lt;/code&gt; がJSONのnullを返すため、 &lt;code&gt;is_nil&lt;/code&gt; が成功しないため、空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="18e53abaed4d2983226c3cac5079451da818bff2" translate="yes" xml:space="preserve">
          <source>The underlying user is passed to the view and template as &lt;code&gt;:user&lt;/code&gt;, which is inferred from the view name. The name of the key in assigns can be customized with the &lt;code&gt;:as&lt;/code&gt; option:</source>
          <target state="translated">基になるユーザーは、ビュー名から推測される &lt;code&gt;:user&lt;/code&gt; としてビューとテンプレートに渡されます。assignsのキーの名前は、 &lt;code&gt;:as&lt;/code&gt; オプションでカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="1dfd3b303d5fe2aedc67a0b4bc8aa60d95f14665" translate="yes" xml:space="preserve">
          <source>The underlying user is passed to the view and template as &lt;code&gt;:user&lt;/code&gt;, which is inflected from the view name. The name of the key in assigns can be customized with the &lt;code&gt;:as&lt;/code&gt; option:</source>
          <target state="translated">基礎となるユーザーは、ビュー名から反映される &lt;code&gt;:user&lt;/code&gt; としてビューとテンプレートに渡されます。assignsのキーの名前は、 &lt;code&gt;:as&lt;/code&gt; オプションでカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="ece19487ec4f9c9b42291fc4215172a12c3b8537" translate="yes" xml:space="preserve">
          <source>The unique constraint works by relying on the database to check if the unique constraint has been violated or not and, if so, Ecto converts it into a changeset error.</source>
          <target state="translated">ユニーク制約は、データベースに依存してユニーク制約が違反しているかどうかをチェックし、違反している場合、Ectoはそれをチェンジセットエラーに変換することで動作します。</target>
        </trans-unit>
        <trans-unit id="8f24025f778f23bb692d5c7e74205b6b4b984c73" translate="yes" xml:space="preserve">
          <source>The update expression in Ecto supports the following operators:</source>
          <target state="translated">Ectoの更新式は以下の演算子をサポートしています。</target>
        </trans-unit>
        <trans-unit id="5b6d6cdb41018b373e7cfa4867802d99511b1902" translate="yes" xml:space="preserve">
          <source>The valid keys are:</source>
          <target state="translated">有効なキーは</target>
        </trans-unit>
        <trans-unit id="cb6cddd8de1840c96ca7fda0519b7a48fb8e1141" translate="yes" xml:space="preserve">
          <source>The values above are not meant to be exact. For example, setting the length to 8_000_000 may end up reading some hundred bytes more from the socket until we halt.</source>
          <target state="translated">上記の値は正確ではありません。例えば、長さを8_000_000に設定すると、停止するまでソケットからさらに数百バイト読み込んでしまう可能性があります。</target>
        </trans-unit>
        <trans-unit id="f62c587734431028a6aa80f1e9be78246f2a1d3f" translate="yes" xml:space="preserve">
          <source>The values above are not meant to be exact. For example, setting the length to &lt;code&gt;8_000_000&lt;/code&gt; may end up reading some hundred bytes more from the socket until we halt.</source>
          <target state="translated">上記の値は正確なものではありません。たとえば、長さを &lt;code&gt;8_000_000&lt;/code&gt; に設定すると、停止するまでソケットからさらに数百バイトが読み取られる可能性があります。</target>
        </trans-unit>
        <trans-unit id="8ecaa2ac2dc3f10d3435db3d9b4bfce660d8e6fb" translate="yes" xml:space="preserve">
          <source>The view layer also contains conveniences for rendering templates, including support for layouts and encoders per format.</source>
          <target state="translated">ビューレイヤーには、レイアウトやフォーマットごとのエンコーダーのサポートなど、テンプレートをレンダリングするための便利な機能も含まれています。</target>
        </trans-unit>
        <trans-unit id="91fa591ef2cba3e61fb437760238714eb628080e" translate="yes" xml:space="preserve">
          <source>The websocket is configurable in your socket:</source>
          <target state="translated">Websocketは、お使いのソケットで設定可能です。</target>
        </trans-unit>
        <trans-unit id="dab777042c47d40f4805c33c94a1bf2e15d3974d" translate="yes" xml:space="preserve">
          <source>Then expect them in the test:</source>
          <target state="translated">そして、テストでそれらを期待してください。</target>
        </trans-unit>
        <trans-unit id="b44a39ccd5266edb2d9caad076b683f36a1762b6" translate="yes" xml:space="preserve">
          <source>Then it falls back to the &lt;code&gt;@schema_prefix&lt;/code&gt; attribute declared in the schema given to &lt;code&gt;from&lt;/code&gt;/&lt;code&gt;join&lt;/code&gt;</source>
          <target state="translated">次に、 &lt;code&gt;from&lt;/code&gt; / &lt;code&gt;join&lt;/code&gt; に指定されたスキーマで宣言された &lt;code&gt;@schema_prefix&lt;/code&gt; 属性にフォールバックします</target>
        </trans-unit>
        <trans-unit id="5fe6880ddcb09c2b177e0c20e50dae10169afeef" translate="yes" xml:space="preserve">
          <source>Then it falls back to the query prefix</source>
          <target state="translated">そして、クエリのプレフィックス</target>
        </trans-unit>
        <trans-unit id="f0b91bece7078d6127399b4fede7285d49a284f5" translate="yes" xml:space="preserve">
          <source>Then the module for the &lt;code&gt;@view_module&lt;/code&gt; view can decide to provide scripts with either a precompiled template, or by implementing the function directly, ie:</source>
          <target state="translated">次に、 &lt;code&gt;@view_module&lt;/code&gt; ビューのモジュールは、スクリプトにプリコンパイル済みテンプレートを提供するか、関数を直接実装するかを決定できます。</target>
        </trans-unit>
        <trans-unit id="f14d34a4f2c3d48f59e2e1b8b4a19a69ac94c3f8" translate="yes" xml:space="preserve">
          <source>Then the module under &lt;code&gt;view_module(@conn)&lt;/code&gt; can decide to provide scripts with either a precompiled template, or by implementing the function directly, ie:</source>
          <target state="translated">次に、 &lt;code&gt;view_module(@conn)&lt;/code&gt; の下のモジュールは、プリコンパイルされたテンプレートを使用してスクリプトを提供するか、関数を直接実装するかを決定できます。</target>
        </trans-unit>
        <trans-unit id="c0dafaeb0118a06673409561de14306159c50ceb" translate="yes" xml:space="preserve">
          <source>Then you are able to use your own datetime_select throughout your whole application.</source>
          <target state="translated">そうすれば、アプリケーション全体で独自のdatetime_selectを使用することができます。</target>
        </trans-unit>
        <trans-unit id="ceb5c8aab927695627e6a415525151e60cdf227b" translate="yes" xml:space="preserve">
          <source>Then you can directly create a socket and &lt;a href=&quot;#subscribe_and_join/4&quot;&gt;&lt;code&gt;subscribe_and_join/4&lt;/code&gt;&lt;/a&gt; topics and channels:</source>
          <target state="translated">次に、ソケットと&lt;a href=&quot;#subscribe_and_join/4&quot;&gt; &lt;code&gt;subscribe_and_join/4&lt;/code&gt; &lt;/a&gt;トピックとチャネルを直接作成できます。</target>
        </trans-unit>
        <trans-unit id="584bf72a0acf37e4eddce0ef40e653d37e3153b8" translate="yes" xml:space="preserve">
          <source>Then, in the &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt; callback, attach the handler to this event using a unique handler id:</source>
          <target state="translated">次に、&lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt;コールバックで、一意のハンドラーIDを使用してハンドラーをこのイベントにアタッチします。</target>
        </trans-unit>
        <trans-unit id="1c1b86b915cfde7a7368137f0a2e48d4add28c22" translate="yes" xml:space="preserve">
          <source>There are also optional packages depending on your configuration:</source>
          <target state="translated">また、構成によってはオプションパッケージもあります。</target>
        </trans-unit>
        <trans-unit id="6807336b45c24ae9dbef79351d2099a68159d0ed" translate="yes" xml:space="preserve">
          <source>There are two kind of plugs: function plugs and module plugs.</source>
          <target state="translated">プラグには、機能プラグとモジュールプラグの2種類があります。</target>
        </trans-unit>
        <trans-unit id="7e1dd6c129ab09fcb3871f141a18dd6dd0425035" translate="yes" xml:space="preserve">
          <source>There are two types of telemetry events. The ones emitted by Ecto and the ones that are adapter specific.</source>
          <target state="translated">テレメトリーイベントには2つのタイプがあります。Ectoが発するものと アダプタ固有のものです</target>
        </trans-unit>
        <trans-unit id="0c3abfdacb3ac569bf8db5e65409f9dce9bb486d" translate="yes" xml:space="preserve">
          <source>There are two ways to define primary keys in Ecto: using the &lt;code&gt;@primary_key&lt;/code&gt; module attribute and using &lt;code&gt;primary_key: true&lt;/code&gt; as option for &lt;a href=&quot;#field/3&quot;&gt;&lt;code&gt;field/3&lt;/code&gt;&lt;/a&gt; in your schema definition. They are not mutually exclusive and can be used together.</source>
          <target state="translated">There are two ways to define primary keys in Ecto: using the &lt;code&gt;@primary_key&lt;/code&gt; module attribute and using &lt;code&gt;primary_key: true&lt;/code&gt; as option for &lt;a href=&quot;#field/3&quot;&gt; &lt;code&gt;field/3&lt;/code&gt; &lt;/a&gt; in your schema definition. They are not mutually exclusive and can be used together.</target>
        </trans-unit>
        <trans-unit id="f9e7530f090b66e3b01b4d280637820412cb520f" translate="yes" xml:space="preserve">
          <source>There can only be one select expression in a query, if the select expression is omitted, the query will by default select the full schema. If select is given more than once, an error is raised. Use &lt;a href=&quot;#exclude/2&quot;&gt;&lt;code&gt;exclude/2&lt;/code&gt;&lt;/a&gt; if you would like to remove a previous select for overriding or see &lt;a href=&quot;#select_merge/3&quot;&gt;&lt;code&gt;select_merge/3&lt;/code&gt;&lt;/a&gt; for a limited version of &lt;code&gt;select&lt;/code&gt; that is composable and can be called multiple times.</source>
          <target state="translated">クエリに含めることができる選択式は1つだけです。選択式を省略すると、クエリはデフォルトで完全なスキーマを選択します。selectが複数回指定された場合、エラーが発生します。オーバーライドのために以前の選択を削除する場合は&lt;a href=&quot;#exclude/2&quot;&gt; &lt;code&gt;exclude/2&lt;/code&gt; を&lt;/a&gt;使用するか、構成可能で複数回呼び出すことができる &lt;code&gt;select&lt;/code&gt; 限定バージョンについては&lt;a href=&quot;#select_merge/3&quot;&gt; &lt;code&gt;select_merge/3&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="60774986335f094648654b82d018e24c6920015b" translate="yes" xml:space="preserve">
          <source>There is an example of working with changesets in the introductory documentation in the &lt;a href=&quot;ecto&quot;&gt;&lt;code&gt;Ecto&lt;/code&gt;&lt;/a&gt; module. The functions &lt;a href=&quot;#cast/4&quot;&gt;&lt;code&gt;cast/4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#change/2&quot;&gt;&lt;code&gt;change/2&lt;/code&gt;&lt;/a&gt; are the usual entry points for creating changesets. The first one is used to cast and validate external parameters, such as parameters sent through a form, API, command line, etc. The second one is used to change data directly from your application.</source>
          <target state="translated">&lt;a href=&quot;ecto&quot;&gt; &lt;code&gt;Ecto&lt;/code&gt; &lt;/a&gt;モジュールの紹介ドキュメントに、チェンジセットの操作の例があります。関数&lt;a href=&quot;#cast/4&quot;&gt; &lt;code&gt;cast/4&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#change/2&quot;&gt; &lt;code&gt;change/2&lt;/code&gt; &lt;/a&gt;は、チェンジセットを作成するための通常のエントリポイントです。1つ目は、フォーム、API、コマンドラインなどを介して送信されるパラメーターなどの外部パラメーターをキャストおよび検証するために使用されます。2つ目は、アプリケーションから直接データを変更するために使用されます。</target>
        </trans-unit>
        <trans-unit id="bbbe69bd2d1d3f33a0989c0c7daf1e4f17426993" translate="yes" xml:space="preserve">
          <source>Therefore, if you get a warning that the host does not match, it is either because someone is attempting to steal CSRF tokens or because you have a misconfigured host configuration.</source>
          <target state="translated">したがって、ホストが一致しないという警告が出た場合は、誰かが CSRF トークンを盗もうとしているか、ホストの設定が間違っているかのどちらかです。</target>
        </trans-unit>
        <trans-unit id="3748dac854496bc8faac9591f1822a153d556a4a" translate="yes" xml:space="preserve">
          <source>Therefore, when working with and manipulating external data, it is recommended to use &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s that are able to filter and properly cast external data:</source>
          <target state="translated">したがって、外部データを操作する場合は、外部データをフィルタリングして適切にキャストできる&lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7e8893d85340fc3862c12874dc8c0caa638bca11" translate="yes" xml:space="preserve">
          <source>Therefore, when working with and manipulating external data, it is recommended to use &lt;a href=&quot;ecto.changeset&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;'s that are able to filter and properly cast external data:</source>
          <target state="translated">Therefore, when working with and manipulating external data, it is recommended to use &lt;a href=&quot;ecto.changeset&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt;'s that are able to filter and properly cast external data:</target>
        </trans-unit>
        <trans-unit id="d4b6dd62855c1cdb8d6d7226945af7408045cf45" translate="yes" xml:space="preserve">
          <source>These attributes are:</source>
          <target state="translated">これらの属性は</target>
        </trans-unit>
        <trans-unit id="dab402ac1558a423d6bfdf184cdcba60e59a9b1c" translate="yes" xml:space="preserve">
          <source>These fields are reserved for libraries/framework usage.</source>
          <target state="translated">これらのフィールドはライブラリ/フレームワークの使用のために予約されています。</target>
        </trans-unit>
        <trans-unit id="31125242793acf4be0a0cc8a21b6685bbae8a6a2" translate="yes" xml:space="preserve">
          <source>These fields contain request information:</source>
          <target state="translated">これらのフィールドにはリクエスト情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="9c58c3f5a32cf2cabf47af4ce6c2874bf3d0f839" translate="yes" xml:space="preserve">
          <source>These fields contain response information:</source>
          <target state="translated">これらのフィールドには、応答情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="ef711a090a295d12005974a4d06b792bb140e9c3" translate="yes" xml:space="preserve">
          <source>These options are assigned to &lt;code&gt;:private&lt;/code&gt; in the call&amp;rsquo;s &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのオプションは、呼び出しの&lt;a href=&quot;plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;:private&lt;/code&gt; に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="59fd20a59fd71306464f90cbc93687125b053059" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;:through&lt;/code&gt; association will return all authors for all comments that belongs to that post:</source>
          <target state="translated">この &lt;code&gt;:through&lt;/code&gt; 関連付けは、その投稿に属するすべてのコメントのすべての作成者を返します。</target>
        </trans-unit>
        <trans-unit id="314e0a3a76540d899cae17754d71892826cfdce8" translate="yes" xml:space="preserve">
          <source>This allows developers to properly translate values coming from the Ecto into adapter ones. For example, if the database does not support booleans but instead returns 0 and 1 for them, you could add:</source>
          <target state="translated">これにより、開発者はEctoからの値を適切にアダプタの値に変換することができます。例えば、データベースがブーリアンをサポートしておらず、代わりに0と1を返す場合は、次のように追加することができます。</target>
        </trans-unit>
        <trans-unit id="c34b4dd019d2b68a7383ace93f2215401ec4cad3" translate="yes" xml:space="preserve">
          <source>This allows developers to properly translate values coming from the adapters into Ecto ones. For example, if the database does not support booleans but instead returns 0 and 1 for them, you could add:</source>
          <target state="translated">これにより、開発者はアダプタからの値を適切に Ecto の値に変換することができます。例えば、データベースがブーリアンをサポートしておらず、代わりに 0 と 1 を返す場合は、次のように追加することができます。</target>
        </trans-unit>
        <trans-unit id="9069e4b8ffaf3bc20294b7bd6a863e30171a4d03" translate="yes" xml:space="preserve">
          <source>This approach lets us not worry about keeping track of the position of the bindings when composing the query.</source>
          <target state="translated">このアプローチにより、クエリを作成する際にバインディングの位置を気にせずに済むようになりました。</target>
        </trans-unit>
        <trans-unit id="78e0d97646f179af897c91029155ab3de9f02b8b" translate="yes" xml:space="preserve">
          <source>This approach lets us not worry about keeping track of the position of the bindings when composing the query. The &lt;code&gt;:as&lt;/code&gt; option can be given both on joins and on &lt;code&gt;from&lt;/code&gt;:</source>
          <target state="translated">This approach lets us not worry about keeping track of the position of the bindings when composing the query. The &lt;code&gt;:as&lt;/code&gt; option can be given both on joins and on &lt;code&gt;from&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2f59bfe0a957636ece0be8bfd839e81d84f8f0ae" translate="yes" xml:space="preserve">
          <source>This behaviour provides presence features such as fetching presences for a given topic, as well as handling diffs of join and leave events as they occur in real-time. Using this module defines a supervisor and a module that implements the &lt;a href=&quot;../phoenix_pubsub/phoenix.tracker&quot;&gt;&lt;code&gt;Phoenix.Tracker&lt;/code&gt;&lt;/a&gt; behaviour that uses &lt;a href=&quot;../phoenix_pubsub/phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; to broadcast presence updates.</source>
          <target state="translated">This behaviour provides presence features such as fetching presences for a given topic, as well as handling diffs of join and leave events as they occur in real-time. Using this module defines a supervisor and a module that implements the &lt;a href=&quot;../phoenix_pubsub/phoenix.tracker&quot;&gt; &lt;code&gt;Phoenix.Tracker&lt;/code&gt; &lt;/a&gt; behaviour that uses &lt;a href=&quot;../phoenix_pubsub/phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; &lt;/a&gt; to broadcast presence updates.</target>
        </trans-unit>
        <trans-unit id="6967adaf22d337178372537c6118e0d2b8a63bd3" translate="yes" xml:space="preserve">
          <source>This behaviour provides presence features such as fetching presences for a given topic, as well as handling diffs of join and leave events as they occur in real-time. Using this module defines a supervisor and allows the calling module to implement the &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.tracker&quot;&gt;&lt;code&gt;Phoenix.Tracker&lt;/code&gt;&lt;/a&gt; behaviour which starts a tracker process to handle presence information.</source>
          <target state="translated">この動作は、特定のトピックのプレゼンスのフェッチなどのプレゼンス機能を提供し、リアルタイムで発生するjoinイベントとleaveイベントの差分を処理します。このモジュールを使用すると、監視&lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.tracker&quot;&gt; &lt;code&gt;Phoenix.Tracker&lt;/code&gt; &lt;/a&gt;が定義され、呼び出しモジュールが、プレゼンス情報を処理するトラッカープロセスを開始するPhoenix.Tracker動作を実装できるようになります。</target>
        </trans-unit>
        <trans-unit id="e7556041936c271690740591770bfe1ea6222272" translate="yes" xml:space="preserve">
          <source>This callback can be used to further modify the query and options before it is transformed and sent to the database.</source>
          <target state="translated">このコールバックを使用して、クエリやオプションをさらに修正してから変換してデータベースに送信することができます。</target>
        </trans-unit>
        <trans-unit id="9b5289f3895306f4a2bb2ce650d1609e9b79d9c7" translate="yes" xml:space="preserve">
          <source>This callback is called on external input and can return any type, as long as the &lt;code&gt;dump/1&lt;/code&gt; function is able to convert the returned value into an Ecto native type. There are two situations where this callback is called:</source>
          <target state="translated">このコールバックは外部入力で呼び出され、 &lt;code&gt;dump/1&lt;/code&gt; 関数が戻り値をEctoネイティブ型に変換できる限り、任意の型を返すことができます。このコールバックが呼び出される状況は2つあります。</target>
        </trans-unit>
        <trans-unit id="f6d40809f5928ded0783d1c5bde4c2ca0dacdca6" translate="yes" xml:space="preserve">
          <source>This callback is called when loading data from the database and receive an Ecto native type. It can return any type, as long as the &lt;code&gt;dump/1&lt;/code&gt; function is able to convert the returned value back into an Ecto native type.</source>
          <target state="translated">このコールバックは、データベースからデータをロードし、Ectoネイティブタイプを受け取るときに呼び出されます。 &lt;code&gt;dump/1&lt;/code&gt; 関数が戻り値をEctoネイティブ型に戻すことができる限り、任意の型を返すことができます。</target>
        </trans-unit>
        <trans-unit id="5dba0f0e5df500a1e88b72d27d9b478ed2ccb47c" translate="yes" xml:space="preserve">
          <source>This callback is called when loading data from the database and receives an Ecto native type. It can return any type, as long as the &lt;code&gt;dump/1&lt;/code&gt; function is able to convert the returned value back into an Ecto native type.</source>
          <target state="translated">This callback is called when loading data from the database and receives an Ecto native type. It can return any type, as long as the &lt;code&gt;dump/1&lt;/code&gt; function is able to convert the returned value back into an Ecto native type.</target>
        </trans-unit>
        <trans-unit id="8391fe8b307eb118c66a1224a190e367cf1e34a5" translate="yes" xml:space="preserve">
          <source>This callback is called with any term that was stored in the struct and it needs to validate them and convert it to an Ecto native type.</source>
          <target state="translated">このコールバックは、構造体に格納されている任意の項で呼び出され、それらを検証してEctoネイティブ型に変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="6bf00040ea79807475cd31c46b891cb8ded6c579" translate="yes" xml:space="preserve">
          <source>This callback is invoked as the entry point for all repository operations. For example, if you are executing a query with preloads, this callback will be invoked once at the beginning, but the options returned here will be passed to all following operations.</source>
          <target state="translated">このコールバックは、すべてのリポジトリ操作のエントリーポイントとして呼び出されます。例えば、プリロードを含むクエリを実行している場合、このコールバックは最初に一度だけ呼び出されますが、ここで返されたオプションはそれ以降のすべての操作に渡されます。</target>
        </trans-unit>
        <trans-unit id="79748d4f4c53c8b678eba754fd8a33ed0dc52111" translate="yes" xml:space="preserve">
          <source>This callback is invoked for all query APIs, including the &lt;code&gt;stream&lt;/code&gt; function, but it is not invoked for &lt;code&gt;insert_all&lt;/code&gt; nor any of the schema functions.</source>
          <target state="translated">This callback is invoked for all query APIs, including the &lt;code&gt;stream&lt;/code&gt; function, but it is not invoked for &lt;code&gt;insert_all&lt;/code&gt; nor any of the schema functions.</target>
        </trans-unit>
        <trans-unit id="d3dd66370a2871bfe63d6fef51a35166fbee8602" translate="yes" xml:space="preserve">
          <source>This can be used to load CSRF state into another process. See &lt;a href=&quot;#dump_state/0&quot;&gt;&lt;code&gt;dump_state/0&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;dump_state_from_session/2&lt;/code&gt; for dumping it.</source>
          <target state="translated">This can be used to load CSRF state into another process. See &lt;a href=&quot;#dump_state/0&quot;&gt; &lt;code&gt;dump_state/0&lt;/code&gt; &lt;/a&gt; and &lt;code&gt;dump_state_from_session/2&lt;/code&gt; for dumping it.</target>
        </trans-unit>
        <trans-unit id="9942f198e47ea544c82a2f3149eb4db211bc77f7" translate="yes" xml:space="preserve">
          <source>This can be used to provide default values per operation that have higher precedence than the values given on configuration or when starting the repository. It can also be used to set query specific options, such as &lt;code&gt;:prefix&lt;/code&gt;.</source>
          <target state="translated">This can be used to provide default values per operation that have higher precedence than the values given on configuration or when starting the repository. It can also be used to set query specific options, such as &lt;code&gt;:prefix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7451f29af9970208fd48c0f77d572d71c9c6abab" translate="yes" xml:space="preserve">
          <source>This can be useful to implement nested layouts. For example, imagine you have an application layout like this:</source>
          <target state="translated">これは、入れ子になったレイアウトを実装するのに便利です。例えば、次のようなアプリケーションのレイアウトがあるとします。</target>
        </trans-unit>
        <trans-unit id="36cde890ab9fc7b08ed69780233aa5e8d306807f" translate="yes" xml:space="preserve">
          <source>This converts the given embedded schema to a map to be serialized with the given format. For example:</source>
          <target state="translated">これは、与えられた埋め込みスキーマを、与えられたフォーマットでシリアライズされるマップに変換します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="fffb99485473cd5f2890d8e671445895fea64111" translate="yes" xml:space="preserve">
          <source>This cookie store is based on &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.MessageVerifier.html&quot;&gt;&lt;code&gt;Plug.Crypto.MessageVerifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.MessageEncryptor.html&quot;&gt;&lt;code&gt;Plug.Crypto.MessageEncryptor&lt;/code&gt;&lt;/a&gt; which encrypts and signs each cookie to ensure they can&amp;rsquo;t be read nor tampered with.</source>
          <target state="translated">このCookieストアは、&lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.MessageVerifier.html&quot;&gt; &lt;code&gt;Plug.Crypto.MessageVerifier&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://hexdocs.pm/plug_crypto/1.0.0/Plug.Crypto.MessageEncryptor.html&quot;&gt; &lt;code&gt;Plug.Crypto.MessageEncryptor&lt;/code&gt; に&lt;/a&gt;基づいており、各Cookieを暗号化して署名し、読み取りや改ざんを防止します。</target>
        </trans-unit>
        <trans-unit id="53b55df014db1d36aa928a0d1ab68e9498d7f04f" translate="yes" xml:space="preserve">
          <source>This cookie store is based on &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.MessageVerifier.html&quot;&gt;&lt;code&gt;Plug.Crypto.MessageVerifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.MessageEncryptor.html&quot;&gt;&lt;code&gt;Plug.Crypto.MessageEncryptor&lt;/code&gt;&lt;/a&gt; which encrypts and signs each cookie to ensure they can't be read nor tampered with.</source>
          <target state="translated">This cookie store is based on &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.MessageVerifier.html&quot;&gt; &lt;code&gt;Plug.Crypto.MessageVerifier&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/plug_crypto/Plug.Crypto.MessageEncryptor.html&quot;&gt; &lt;code&gt;Plug.Crypto.MessageEncryptor&lt;/code&gt; &lt;/a&gt; which encrypts and signs each cookie to ensure they can't be read nor tampered with.</target>
        </trans-unit>
        <trans-unit id="88f415484d2416f0c9164e685095abeddba09475" translate="yes" xml:space="preserve">
          <source>This does not expect the repository and therefore does not leverage the cache.</source>
          <target state="translated">これはリポジトリを期待していないので、キャッシュを活用していません。</target>
        </trans-unit>
        <trans-unit id="8358ce5c448165474c59ccb6634f95fedb0d2fb6" translate="yes" xml:space="preserve">
          <source>This emulates behaviour performed by browsers where cookies returned in the response are available in following requests.</source>
          <target state="translated">これは、レスポンスで返されたクッキーが次のリクエストで利用可能なブラウザで実行される動作をエミュレートします。</target>
        </trans-unit>
        <trans-unit id="fa7d6e6dcda78ceca060025cce3f5837a513f835" translate="yes" xml:space="preserve">
          <source>This event should be invoked on every query sent to the adapter, including queries that are related to the transaction management.</source>
          <target state="translated">このイベントは、アダプタに送信されたすべてのクエリ (トランザクション管理に関連するクエリを含む)で起動されなければなりません。</target>
        </trans-unit>
        <trans-unit id="c0c41eb119619d93df37edc66780e62d9f72d4b1" translate="yes" xml:space="preserve">
          <source>This exception is commonly raised by &lt;a href=&quot;phoenix.controller#accepts/2&quot;&gt;&lt;code&gt;Phoenix.Controller.accepts/2&lt;/code&gt;&lt;/a&gt; which negotiates the media types the server is able to serve with the contents the client is able to render.</source>
          <target state="translated">この例外は通常、&lt;a href=&quot;phoenix.controller#accepts/2&quot;&gt; &lt;code&gt;Phoenix.Controller.accepts/2&lt;/code&gt; &lt;/a&gt;によって発生します。Phoenix.Controller.accepts/ 2は、サーバーが提供できるメディアタイプとクライアントがレンダリングできるコンテンツをネゴシエートします。</target>
        </trans-unit>
        <trans-unit id="e27c88fc5d1a3d0121b169f096d2ac516c60e1ae" translate="yes" xml:space="preserve">
          <source>This exception is raised by &lt;a href=&quot;phoenix.controller#scrub_params/2&quot;&gt;&lt;code&gt;Phoenix.Controller.scrub_params/2&lt;/code&gt;&lt;/a&gt; which:</source>
          <target state="translated">この例外は、&lt;a href=&quot;phoenix.controller#scrub_params/2&quot;&gt; &lt;code&gt;Phoenix.Controller.scrub_params/2&lt;/code&gt; &lt;/a&gt;によって発生します。</target>
        </trans-unit>
        <trans-unit id="0fa6cbcebc05c777d1c7368f7969366f4e084a6c" translate="yes" xml:space="preserve">
          <source>This feature is very useful when queries need to be built based on some user input, like web search forms, CLIs and so on.</source>
          <target state="translated">この機能は、ウェブ検索フォームやCLIなどのように、何らかのユーザー入力に基づいてクエリを構築する必要がある場合に非常に便利です。</target>
        </trans-unit>
        <trans-unit id="736fb0a01b93ff59374b8773d572c0d61a1c4bf4" translate="yes" xml:space="preserve">
          <source>This first group contains validations that take a keyword list of validators, where the validators are shown immediately following the validation type. This list may also include a &lt;code&gt;message:&lt;/code&gt; key.</source>
          <target state="translated">この最初のグループには、バリデーターのキーワードリストを使用するバリデーションが含まれています。バリデーターはバリデーションタイプの直後に表示されます。このリストには、 &lt;code&gt;message:&lt;/code&gt; key も含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="08a01cc9d2b834ac5065ca0c4859bc17a52873c2" translate="yes" xml:space="preserve">
          <source>This format is used when rendering a template as an atom. For example, &lt;code&gt;render(conn, :foo)&lt;/code&gt; will render &lt;code&gt;&quot;foo.FORMAT&quot;&lt;/code&gt; where the format is the one set here. The default format is typically set from the negotiation done in &lt;a href=&quot;#accepts/2&quot;&gt;&lt;code&gt;accepts/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This format is used when rendering a template as an atom. For example, &lt;code&gt;render(conn, :foo)&lt;/code&gt; will render &lt;code&gt;&quot;foo.FORMAT&quot;&lt;/code&gt; where the format is the one set here. The default format is typically set from the negotiation done in &lt;a href=&quot;#accepts/2&quot;&gt; &lt;code&gt;accepts/2&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a654e5931463e5b13804f19ebe7438789fab9cac" translate="yes" xml:space="preserve">
          <source>This function accepts all options defined &lt;a href=&quot;http://erlang.org/doc/man/ssl.html&quot;&gt;in Erlang/OTP &lt;code&gt;:ssl&lt;/code&gt; documentation&lt;/a&gt;.</source>
          <target state="translated">This function accepts all options defined &lt;a href=&quot;http://erlang.org/doc/man/ssl.html&quot;&gt;in Erlang/OTP &lt;code&gt;:ssl&lt;/code&gt; documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b203fe59546a0ae658a9d0fdb623d409065b4b9" translate="yes" xml:space="preserve">
          <source>This function accepts and validates all options defined in &lt;a href=&quot;http://www.erlang.org/doc/man/ssl.html&quot;&gt;the &lt;code&gt;ssl&lt;/code&gt; erlang module&lt;/a&gt;. With the following additions:</source>
          <target state="translated">この関数は&lt;a href=&quot;http://www.erlang.org/doc/man/ssl.html&quot;&gt;、 &lt;code&gt;ssl&lt;/code&gt; erlangモジュールで&lt;/a&gt;定義されたすべてのオプションを受け入れて検証します。以下を追加します。</target>
        </trans-unit>
        <trans-unit id="ff98681cd9fee831827f27fd0a9d833563a2d938" translate="yes" xml:space="preserve">
          <source>This function allows you to automatically sign and encrypt cookies. When signing or encryption is enabled, then any Elixir value can be stored in the cookie (except anonymous functions for security reasons). Once a value is signed or encrypted, you must also call &lt;a href=&quot;#fetch_cookies/2&quot;&gt;&lt;code&gt;fetch_cookies/2&lt;/code&gt;&lt;/a&gt; with the name of the cookies that are either signed or encrypted.</source>
          <target state="translated">This function allows you to automatically sign and encrypt cookies. When signing or encryption is enabled, then any Elixir value can be stored in the cookie (except anonymous functions for security reasons). Once a value is signed or encrypted, you must also call &lt;a href=&quot;#fetch_cookies/2&quot;&gt; &lt;code&gt;fetch_cookies/2&lt;/code&gt; &lt;/a&gt; with the name of the cookies that are either signed or encrypted.</target>
        </trans-unit>
        <trans-unit id="8560ae300306496e1e57a607297b4be5809ada0e" translate="yes" xml:space="preserve">
          <source>This function behaves the same as &lt;a href=&quot;#dump/2&quot;&gt;&lt;code&gt;dump/2&lt;/code&gt;&lt;/a&gt;, except for composite types the given &lt;code&gt;dumper&lt;/code&gt; function is used.</source>
          <target state="translated">この関数は、指定された &lt;code&gt;dumper&lt;/code&gt; 関数が使用される複合型を除いて、&lt;a href=&quot;#dump/2&quot;&gt; &lt;code&gt;dump/2&lt;/code&gt; &lt;/a&gt;と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="6a586051ba535bcfaa3ec3caebe587edd887bffe" translate="yes" xml:space="preserve">
          <source>This function behaves the same as &lt;a href=&quot;#load/2&quot;&gt;&lt;code&gt;load/2&lt;/code&gt;&lt;/a&gt;, except for composite types the given &lt;code&gt;loader&lt;/code&gt; function is used.</source>
          <target state="translated">この関数は、指定された &lt;code&gt;loader&lt;/code&gt; 関数が使用される複合型を除いて、&lt;a href=&quot;#load/2&quot;&gt; &lt;code&gt;load/2&lt;/code&gt; &lt;/a&gt;と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="e50d6767dc020a64e6d3d29750a6078f1a51289d" translate="yes" xml:space="preserve">
          <source>This function can also be used to dynamically load through associations by giving it a list. For example, to get all authors for all comments for the given posts, do:</source>
          <target state="translated">この関数は、リストを与えることで、関連付けを動的にロードするためにも使用することができます。例えば、与えられた投稿のすべてのコメントの著者を取得するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b31679aebb0e8c28069688039b1fa1e4998948f2" translate="yes" xml:space="preserve">
          <source>This function copies the cookie information in &lt;code&gt;old_conn&lt;/code&gt; into &lt;code&gt;new_conn&lt;/code&gt;, emulating multiple requests done by clients where cookies are always passed forward, and returns the new version of &lt;code&gt;new_conn&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;old_conn&lt;/code&gt; のcookie情報を &lt;code&gt;new_conn&lt;/code&gt; にコピーし、cookie が常に転送されるクライアントによって行われた複数の要求をエミュレートし、新しいバージョンの &lt;code&gt;new_conn&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1fe1674ac966f1e7e84fdd91a095f600ff50b42e" translate="yes" xml:space="preserve">
          <source>This function depends on gathering the messages sent by the test adapter when assets are pushed. Calling this function will clear the pushed message from the inbox for the process. To assert on multiple pushes, the result of the function should be stored in a variable.</source>
          <target state="translated">この関数は、アセットがプッシュされたときにテストアダプタから送信されるメッセージを収集することに依存します。この関数をコールすると、プロセスの受信箱からプッシュされたメッセージがクリアされます。複数のプッシュに対してアサートするには、関数の結果を変数に格納する必要があります。</target>
        </trans-unit>
        <trans-unit id="1660cbe1db7037c9964f911ded4eb4f26591a176" translate="yes" xml:space="preserve">
          <source>This function depends on gathering the messages sent by the test adapter when informational messages, such as an early hint, are sent. Calling this function will clear the informational request messages from the inbox for the process. To assert on multiple informs, the result of the function should be stored in a variable.</source>
          <target state="translated">この関数は、初期ヒントなどの情報提供メッセージが送信されたときにテストアダプタが送信するメッセージを収集することに依存します。この関数を呼び出すと、プロセスの受信箱から情報要求メッセージがクリアされます。複数の情報をアサートするには、関数の結果を変数に格納しなければなりません。</target>
        </trans-unit>
        <trans-unit id="a9a8dbd1e103ae7949082890ccdcca71a8261b80" translate="yes" xml:space="preserve">
          <source>This function does not fetch parameters from the body. To fetch parameters from the body, use the &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt; plug.</source>
          <target state="translated">この関数は、本体からパラメーターをフェッチしません。本体からパラメーターをフェッチするには、&lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt;プラグを使用します。</target>
        </trans-unit>
        <trans-unit id="c8689955a82c196a1de5806c3547594bd18663df" translate="yes" xml:space="preserve">
          <source>This function exists as an extension point for libraries to add new types of associations to Ecto. For the existing APIs, see &lt;a href=&quot;#belongs_to/3&quot;&gt;&lt;code&gt;belongs_to/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#has_many/3&quot;&gt;&lt;code&gt;has_many/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#has_one/3&quot;&gt;&lt;code&gt;has_one/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#many_to_many/3&quot;&gt;&lt;code&gt;many_to_many/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、新しいタイプの関連付けをEctoに追加するためのライブラリの拡張ポイントとして存在します。既存のAPIについては、&lt;a href=&quot;#belongs_to/3&quot;&gt; &lt;code&gt;belongs_to/3&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#has_many/3&quot;&gt; &lt;code&gt;has_many/3&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#has_one/3&quot;&gt; &lt;code&gt;has_one/3&lt;/code&gt; &lt;/a&gt;、many_to_many / 3を&lt;a href=&quot;#many_to_many/3&quot;&gt; &lt;code&gt;many_to_many/3&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b2304f76a58fd59e742ef62114c970eef992a68" translate="yes" xml:space="preserve">
          <source>This function exists to provide quick feedback to users of your application. It should not be relied on for any data guarantee as it has race conditions and is inherently unsafe. For example, if this check happens twice in the same time interval (because the user submitted a form twice), both checks may pass and you may end-up with duplicate entries in the database. Therefore, a &lt;a href=&quot;#unique_constraint/3&quot;&gt;&lt;code&gt;unique_constraint/3&lt;/code&gt;&lt;/a&gt; should also be used to ensure your data won&amp;rsquo;t get corrupted.</source>
          <target state="translated">この関数は、アプリケーションのユーザーに迅速なフィードバックを提供するために存在します。競合状態があり、本質的に安全ではないため、データの保証に依存すべきではありません。たとえば、このチェックが同じ時間間隔で2回発生すると（ユーザーがフォームを2回送信したため）、両方のチェックに合格し、データベース内のエントリが重複する可能性があります。したがって、データが破損しないようにするために、&lt;a href=&quot;#unique_constraint/3&quot;&gt; &lt;code&gt;unique_constraint/3&lt;/code&gt; &lt;/a&gt;も使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="dc2d67a85e75f44fb49399d03fb1c45ee6231022" translate="yes" xml:space="preserve">
          <source>This function exists to provide quick feedback to users of your application. It should not be relied on for any data guarantee as it has race conditions and is inherently unsafe. For example, if this check happens twice in the same time interval (because the user submitted a form twice), both checks may pass and you may end-up with duplicate entries in the database. Therefore, a &lt;a href=&quot;#unique_constraint/3&quot;&gt;&lt;code&gt;unique_constraint/3&lt;/code&gt;&lt;/a&gt; should also be used to ensure your data won't get corrupted.</source>
          <target state="translated">This function exists to provide quick feedback to users of your application. It should not be relied on for any data guarantee as it has race conditions and is inherently unsafe. For example, if this check happens twice in the same time interval (because the user submitted a form twice), both checks may pass and you may end-up with duplicate entries in the database. Therefore, a &lt;a href=&quot;#unique_constraint/3&quot;&gt; &lt;code&gt;unique_constraint/3&lt;/code&gt; &lt;/a&gt; should also be used to ensure your data won't get corrupted.</target>
        </trans-unit>
        <trans-unit id="73fef9a49538642527fff343bf96706313c19d33" translate="yes" xml:space="preserve">
          <source>This function expects the current schema, the association cardinality, the association name, the association module (that implements &lt;code&gt;Ecto.Association&lt;/code&gt; callbacks) and a keyword list of options.</source>
          <target state="translated">この関数は、現在のスキーマ、関連付けの基数、関連付けの名前、関連付けモジュール（ &lt;code&gt;Ecto.Association&lt;/code&gt; コールバックを実装する）、およびオプションのキーワードリストを想定しています。</target>
        </trans-unit>
        <trans-unit id="9dea39cef34defdfd207a8eb99802b8d948cd9f6" translate="yes" xml:space="preserve">
          <source>This function generates the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag without its closing part. Check &lt;a href=&quot;#form_tag/3&quot;&gt;&lt;code&gt;form_tag/3&lt;/code&gt;&lt;/a&gt; for generating an enclosing tag.</source>
          <target state="translated">この関数は、終了部分なしで &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; タグを生成します。囲みタグを生成するために&lt;a href=&quot;#form_tag/3&quot;&gt; &lt;code&gt;form_tag/3&lt;/code&gt; &lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="53f40e7f6118a94a757813a716439f649282ffc1" translate="yes" xml:space="preserve">
          <source>This function is a shortcut for:</source>
          <target state="translated">この機能はショートカットです。</target>
        </trans-unit>
        <trans-unit id="6306e2e81e647cdb91b3f8a11699265b79a2778b" translate="yes" xml:space="preserve">
          <source>This function is able to handle both chunked and identity transfer-encoding by default.</source>
          <target state="translated">この関数は、デフォルトではチャンク化とID転送エンコードの両方を扱うことができます。</target>
        </trans-unit>
        <trans-unit id="fe83ec596d61f20f781d548aba70cef9549cb117" translate="yes" xml:space="preserve">
          <source>This function is called when an application is started using &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt; (and functions on top of that, such as &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#ensure_started/2&quot;&gt;&lt;code&gt;Application.ensure_started/2&lt;/code&gt;&lt;/a&gt;). This function should start the top-level process of the application (which should be the top supervisor of the application&amp;rsquo;s supervision tree if the application follows the OTP design principles around supervision).</source>
          <target state="translated">アプリケーションを使用して開始されたときに、この関数が呼び出され&lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt;（例えば、その上及び機能を&lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#ensure_started/2&quot;&gt; &lt;code&gt;Application.ensure_started/2&lt;/code&gt; &lt;/a&gt;）。この関数は、アプリケーションの最上位プロセスを開始する必要があります（アプリケーションが監視に関するOTP設計原則に従っている場合は、アプリケーションの監視ツリーの最上位のスーパーバイザーでなければなりません）。</target>
        </trans-unit>
        <trans-unit id="866cdfbc4d38507dc477d2b6e7b5a6b73c6d3bd8" translate="yes" xml:space="preserve">
          <source>This function is deprecated. Use reraise/1 or reraise/4 instead.</source>
          <target state="translated">この関数は非推奨です。代わりに reraise/1 または reraise/4 を使用してください。</target>
        </trans-unit>
        <trans-unit id="889e6268cee5d42d732aa072ffb292fc6aa1faee" translate="yes" xml:space="preserve">
          <source>This function is especially useful when parsing raw query results:</source>
          <target state="translated">この関数は、生のクエリ結果を解析する際に特に便利です。</target>
        </trans-unit>
        <trans-unit id="f2fbdc7b6be0d3c0040fc63965553cbf76fdb977" translate="yes" xml:space="preserve">
          <source>This function is often called internally by adapters, such as Cowboy, to validate and set reasonable defaults for SSL handling. Therefore Plug users are not expected to invoke it directly, rather you pass the relevant SSL options to your adapter which then invokes this.</source>
          <target state="translated">この関数は、SSL 処理の妥当なデフォルト値を検証したり設定したりするために、 Cowboy のようなアダプタから内部的に呼び出されることがよくあります。そのため、プラグインのユーザはこの関数を直接呼び出すことは期待していません。</target>
        </trans-unit>
        <trans-unit id="ce00aa1228b7b92a142997d61b397de721dd3451" translate="yes" xml:space="preserve">
          <source>This function is particularly useful when associations and embeds are cast in the changeset as it will traverse all associations and embeds and place all errors in a series of nested maps.</source>
          <target state="translated">この関数は、すべてのアソシエーションとエンベッドを追跡し、すべてのエラーを入れ子になった一連のマップに配置するので、チェンジセットにアソシエーションとエンベッドがキャストされている場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="9ea2792030796068ebee3771205dce320fb98fd5" translate="yes" xml:space="preserve">
          <source>This function is primarily used by &lt;a href=&quot;ecto.query#select_merge/3&quot;&gt;&lt;code&gt;Ecto.Query.select_merge/3&lt;/code&gt;&lt;/a&gt; to merge different select clauses.</source>
          <target state="translated">この関数は主に、&lt;a href=&quot;ecto.query#select_merge/3&quot;&gt; &lt;code&gt;Ecto.Query.select_merge/3&lt;/code&gt; &lt;/a&gt;がさまざまな選択句をマージするために使用します。</target>
        </trans-unit>
        <trans-unit id="95e4d0ba9a962e855d63d60b4fd26e982ea84569" translate="yes" xml:space="preserve">
          <source>This function is used for authorization purposes and it may be invoked outside of the process that effectively runs the socket.</source>
          <target state="translated">この関数は認証のために使用され、ソケットを実質的に実行しているプロセスの外部から呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="b1f60f736835987ffe4d869279d98e0a0470fd3a" translate="yes" xml:space="preserve">
          <source>This function is used to work with associations as a whole. For example, if a Post has many Comments, it allows you to add, remove or change all comments at once. If your goal is to simply add a new comment to a post, then it is preferred to do so manually, as we will describe later in the &quot;Example: Adding a comment to a post&quot; section.</source>
          <target state="translated">この機能は、関連付けを全体として扱うために使用します。例えば、投稿に多くのコメントがある場合、一度にすべてのコメントを追加、削除、変更することができます。単に投稿に新しいコメントを追加することを目的としているのであれば、後述の「例.例:記事にコメントを追加する」のセクションで後述します。</target>
        </trans-unit>
        <trans-unit id="22adf8e4771dc77ddcc4249d7919749c29698a38" translate="yes" xml:space="preserve">
          <source>This function is used to work with associations as a whole. For example, if a Post has many Comments, it allows you to add, remove or change all comments at once. If your goal is to simply add a new comment to a post, then it is preferred to do so manually, as we will describe later in the &amp;ldquo;Example: Adding a comment to a post&amp;rdquo; section.</source>
          <target state="translated">この関数は、関連付け全体を処理するために使用されます。たとえば、投稿に多数のコメントがある場合、一度にすべてのコメントを追加、削除、または変更できます。投稿に新しいコメントを追加するだけの場合は、後で「例：投稿にコメントを追加する」セクションで説明するように、手動で追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="08eda1f3849525ce418b408dadef19a29c0b6f84" translate="yes" xml:space="preserve">
          <source>This function is used to work with embeds as a whole. For embeds with cardinality one, &lt;code&gt;nil&lt;/code&gt; can be used to remove the existing entry. For embeds with many entries, an empty list may be given instead.</source>
          <target state="translated">この関数は、埋め込み全体を処理するために使用されます。カーディナリティが1の埋め込みの場合、 &lt;code&gt;nil&lt;/code&gt; を使用して既存のエントリを削除できます。多くのエントリを含む埋め込みの場合は、代わりに空のリストを指定できます。</target>
        </trans-unit>
        <trans-unit id="3dd54b454514d325837202458e298d9589a1ceed" translate="yes" xml:space="preserve">
          <source>This function is useful for removing empty strings sent via HTML forms. If you are providing an API, there is likely no need to invoke &lt;a href=&quot;#scrub_params/2&quot;&gt;&lt;code&gt;scrub_params/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、HTMLフォーム経由で送信された空の文字列を削除するのに役立ちます。APIを提供している場合、&lt;a href=&quot;#scrub_params/2&quot;&gt; &lt;code&gt;scrub_params/2&lt;/code&gt; &lt;/a&gt;を呼び出す必要はおそらくありません。</target>
        </trans-unit>
        <trans-unit id="64ae2d3a9800574311ce709ebfa7b91aac472431" translate="yes" xml:space="preserve">
          <source>This function is useful for sending boolean values to the server.</source>
          <target state="translated">この関数は、サーバにブール値を送信するのに便利です。</target>
        </trans-unit>
        <trans-unit id="2e8d3ec5712ad07392b313c25f730d33813e39fc" translate="yes" xml:space="preserve">
          <source>This function is useful for:</source>
          <target state="translated">この機能を利用すると便利です。</target>
        </trans-unit>
        <trans-unit id="5f05751e977e06b61bae3058808ef7801122a3bf" translate="yes" xml:space="preserve">
          <source>This function is useful when the code being invoked crashes and there is a need to verify a particular response was sent even with the crash. It returns a tuple with &lt;code&gt;{status, headers, body}&lt;/code&gt;.</source>
          <target state="translated">この関数は、呼び出されるコードがクラッシュし、クラッシュしても特定の応答が送信されたことを確認する必要がある場合に役立ちます。 &lt;code&gt;{status, headers, body}&lt;/code&gt; 含むタプルを返します。</target>
        </trans-unit>
        <trans-unit id="feb7b5f249171806db774de8814da72fc6867cc9" translate="yes" xml:space="preserve">
          <source>This function is useful when the multi to be merged requires information from the original multi. Hence the second argument is an anonymous function that receives the multi changes so far. The anonymous function must return another multi.</source>
          <target state="translated">この関数は、マージするマルチが元のマルチからの情報を必要とする場合に便利です。したがって、第2引数は、これまでのマルチの変更を受け取る匿名関数です。匿名関数は別のマルチを返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="ea36ab9cf50bba27fd6813a84418b75a89007160" translate="yes" xml:space="preserve">
          <source>This function is useful when you may want to serve different content-types (such as JSON and HTML) from the same routes. However, if you always have distinct routes, you can also disable content negotiation and simply hardcode your format of choice in your route pipelines:</source>
          <target state="translated">この機能は、同じルートから異なるコンテンツタイプ (JSON や HTML など)を提供したい場合に便利です。しかし、常に異なるルートを持っている場合は、コンテントネゴシエーションを無効にして、ルートパイプラインで選択したフォーマットをハードコードすることもできます。</target>
        </trans-unit>
        <trans-unit id="51ef3241f414eaf2fb4a40b3c68e3fe5a7aa4417" translate="yes" xml:space="preserve">
          <source>This function merges two changesets provided they have been applied to the same data (their &lt;code&gt;:data&lt;/code&gt; field is equal); if the data differs, an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; exception is raised. If one of the changesets has a &lt;code&gt;:repo&lt;/code&gt; field which is not &lt;code&gt;nil&lt;/code&gt;, then the value of that field is used as the &lt;code&gt;:repo&lt;/code&gt; field of the resulting changeset; if both changesets have a non-&lt;code&gt;nil&lt;/code&gt; and different &lt;code&gt;:repo&lt;/code&gt; field, an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">この関数は、同じデータに適用されている（それらの &lt;code&gt;:data&lt;/code&gt; フィールドが等しい）2つのチェンジセットをマージします。データが異なる場合、&lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;例外が発生します。チェンジセットの1つに &lt;code&gt;nil&lt;/code&gt; でない &lt;code&gt;:repo&lt;/code&gt; フィールドがある場合、そのフィールドの値は、結果のチェンジセットの &lt;code&gt;:repo&lt;/code&gt; フィールドとして使用されます。両方のチェンジセットに非 &lt;code&gt;nil&lt;/code&gt; で異なる &lt;code&gt;:repo&lt;/code&gt; フィールドがある場合、&lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="dbc0dbbbaa75e1f372b0e07a9f6b951709ad2563" translate="yes" xml:space="preserve">
          <source>This function must be called after the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; plug is invoked. If a token was not yet computed, it will be.</source>
          <target state="translated">This function must be called after the &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt; plug is invoked. If a token was not yet computed, it will be.</target>
        </trans-unit>
        <trans-unit id="47d374217596346a6c9bf2274712172feb075b08" translate="yes" xml:space="preserve">
          <source>This function only looks at the &lt;code&gt;:changes&lt;/code&gt; field of the given &lt;code&gt;changeset&lt;/code&gt; and returns &lt;code&gt;{:ok, value}&lt;/code&gt; if the change is present or &lt;code&gt;:error&lt;/code&gt; if it&amp;rsquo;s not.</source>
          <target state="translated">この関数は、指定された &lt;code&gt;changeset&lt;/code&gt; の &lt;code&gt;:changes&lt;/code&gt; フィールドのみを調べ、変更が存在する場合は &lt;code&gt;{:ok, value}&lt;/code&gt; を返し、存在しない場合は &lt;code&gt;:error&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5e1143e93cf32871e96d09b6d702308f61d09b3a" translate="yes" xml:space="preserve">
          <source>This function only looks at the &lt;code&gt;:changes&lt;/code&gt; field of the given &lt;code&gt;changeset&lt;/code&gt; and returns &lt;code&gt;{:ok, value}&lt;/code&gt; if the change is present or &lt;code&gt;:error&lt;/code&gt; if it's not.</source>
          <target state="translated">This function only looks at the &lt;code&gt;:changes&lt;/code&gt; field of the given &lt;code&gt;changeset&lt;/code&gt; and returns &lt;code&gt;{:ok, value}&lt;/code&gt; if the change is present or &lt;code&gt;:error&lt;/code&gt; if it's not.</target>
        </trans-unit>
        <trans-unit id="7b8bed5158880c80ee8a08504ebf97b167b84dc1" translate="yes" xml:space="preserve">
          <source>This function overrides the default URL generation pulled from the &lt;code&gt;%Plug.Conn{}&lt;/code&gt;'s endpoint configuration.</source>
          <target state="translated">This function overrides the default URL generation pulled from the &lt;code&gt;%Plug.Conn{}&lt;/code&gt; 's endpoint configuration.</target>
        </trans-unit>
        <trans-unit id="58cb08d9d2f1cf23b4f2a78d41b863c40f49073a" translate="yes" xml:space="preserve">
          <source>This function raises &lt;a href=&quot;phoenix.notacceptableerror&quot;&gt;&lt;code&gt;Phoenix.NotAcceptableError&lt;/code&gt;&lt;/a&gt;, which is rendered with status 406, whenever the server cannot serve a response in any of the formats expected by the client.</source>
          <target state="translated">この関数は、サーバーがクライアントが予期する形式のいずれかで応答を提供できない場合は常に、ステータス406でレンダリングされる&lt;a href=&quot;phoenix.notacceptableerror&quot;&gt; &lt;code&gt;Phoenix.NotAcceptableError&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="1c663a7b4ad2604d2adc9bea7e89c5bd791f16f9" translate="yes" xml:space="preserve">
          <source>This function reads a chunk of the request body up to a given &lt;code&gt;:length&lt;/code&gt;. If there is more data to be read, then &lt;code&gt;{:more, partial_body, conn}&lt;/code&gt; is returned. Otherwise &lt;code&gt;{:ok, body, conn}&lt;/code&gt; is returned. In case of an error reading the socket, &lt;code&gt;{:error, reason}&lt;/code&gt; is returned as per &lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html#recv-2&quot;&gt;&lt;code&gt;:gen_tcp.recv/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、指定された &lt;code&gt;:length&lt;/code&gt; までのリクエスト本文のチャンクを読み取ります。読み取るデータが &lt;code&gt;{:more, partial_body, conn}&lt;/code&gt; 場合は、{：more、partial_body、conn}が返されます。それ以外の場合は &lt;code&gt;{:ok, body, conn}&lt;/code&gt; が返されます。ソケットの読み取り中にエラーが発生した場合、 &lt;code&gt;{:error, reason}&lt;/code&gt; が&lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html#recv-2&quot;&gt; &lt;code&gt;:gen_tcp.recv/2&lt;/code&gt; &lt;/a&gt;として返されます。</target>
        </trans-unit>
        <trans-unit id="68ac965b424fbcfc28adb7e70510b4a5060b1986" translate="yes" xml:space="preserve">
          <source>This function reads a chunk of the request body up to a given length (specified by the &lt;code&gt;:length&lt;/code&gt; option). If there is more data to be read, then &lt;code&gt;{:more, partial_body, conn}&lt;/code&gt; is returned. Otherwise &lt;code&gt;{:ok, body, conn}&lt;/code&gt; is returned. In case of an error reading the socket, &lt;code&gt;{:error, reason}&lt;/code&gt; is returned as per &lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html#recv-2&quot;&gt;&lt;code&gt;:gen_tcp.recv/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、指定された長さ（ &lt;code&gt;:length&lt;/code&gt; オプションで指定）までの要求本文のチャンクを読み取ります。読み取るデータが &lt;code&gt;{:more, partial_body, conn}&lt;/code&gt; 場合は、{：more、partial_body、conn}が返されます。それ以外の場合は &lt;code&gt;{:ok, body, conn}&lt;/code&gt; が返されます。ソケットの読み取り中にエラーが発生した場合、 &lt;code&gt;{:error, reason}&lt;/code&gt; が&lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html#recv-2&quot;&gt; &lt;code&gt;:gen_tcp.recv/2&lt;/code&gt; &lt;/a&gt;として返されます。</target>
        </trans-unit>
        <trans-unit id="d0c8691b7f9dfce0fa8e902a83efb3fb90903475" translate="yes" xml:space="preserve">
          <source>This function removes every key from the session, clearing the session.</source>
          <target state="translated">この機能は、セッションからすべてのキーを削除し、セッションをクリアします。</target>
        </trans-unit>
        <trans-unit id="23ea244127c3693a61fb279dd8a8823e78d495c2" translate="yes" xml:space="preserve">
          <source>This function requires the associated data to have been preloaded, except when the parent changeset has been newly build and not yet persisted. Missing data will invoke the &lt;code&gt;:on_replace&lt;/code&gt; behaviour defined on the association.</source>
          <target state="translated">この関数を使用するには、親のチェンジセットが新しくビルドされてまだ永続化されていない場合を除き、関連するデータがプリロードされている必要があります。データが欠落していると、関連付けに定義されている &lt;code&gt;:on_replace&lt;/code&gt; 動作が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="508ff7af2c7302ba5ea60f62775c6f5a3c9b9900" translate="yes" xml:space="preserve">
          <source>This function requires the associated data to have been preloaded, except when the parent changeset has been newly built and not yet persisted. Missing data will invoke the &lt;code&gt;:on_replace&lt;/code&gt; behaviour defined on the association.</source>
          <target state="translated">This function requires the associated data to have been preloaded, except when the parent changeset has been newly built and not yet persisted. Missing data will invoke the &lt;code&gt;:on_replace&lt;/code&gt; behaviour defined on the association.</target>
        </trans-unit>
        <trans-unit id="84382455309fc0aaf784468937d5e8642608c1e5" translate="yes" xml:space="preserve">
          <source>This function should be used when working with the entire association at once (and not a single element of a many-style association) and receiving data external to the application.</source>
          <target state="translated">この関数は、アソシエーション全体を一度に処理する場合(多形式アソシエーションの単一要素ではなく)と、アプリケーションの外部データを受信する場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3736933a577a29ee24ad93a05c7c32aef1bea88b" translate="yes" xml:space="preserve">
          <source>This function should be used when working with the entire association at once (and not a single element of a many-style association) and using data external to the application.</source>
          <target state="translated">この関数は、アソシエーション全体を一度に処理する場合(多スタイルアソシエーションの単一要素ではなく)、アプリケーションの外部データを使用する場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="481b5ba0284c556ea198200d20cec067478414db" translate="yes" xml:space="preserve">
          <source>This function should either return &lt;code&gt;{:ok, pid}&lt;/code&gt; or &lt;code&gt;{:ok, pid, state}&lt;/code&gt; if startup is successful. &lt;code&gt;pid&lt;/code&gt; should be the PID of the top supervisor. &lt;code&gt;state&lt;/code&gt; can be an arbitrary term, and if omitted will default to &lt;code&gt;[]&lt;/code&gt;; if the application is later stopped, &lt;code&gt;state&lt;/code&gt; is passed to the &lt;code&gt;stop/1&lt;/code&gt; callback (see the documentation for the &lt;code&gt;c:stop/1&lt;/code&gt; callback for more information).</source>
          <target state="translated">起動が成功した場合 &lt;code&gt;{:ok, pid, state}&lt;/code&gt; この関数は &lt;code&gt;{:ok, pid}&lt;/code&gt; または{：ok、pid、state}を返す必要があります。 &lt;code&gt;pid&lt;/code&gt; は、トップのスーパーバイザのPIDである必要があります。 &lt;code&gt;state&lt;/code&gt; は任意の用語にすることができ、省略した場合はデフォルトで &lt;code&gt;[]&lt;/code&gt; になります。アプリケーションが後で停止した場合、 &lt;code&gt;state&lt;/code&gt; は &lt;code&gt;stop/1&lt;/code&gt; コールバックに渡されます（詳細については、 &lt;code&gt;c:stop/1&lt;/code&gt; コールバックのドキュメントを参照してください）。</target>
        </trans-unit>
        <trans-unit id="bf1fdd59778e871792165fd9cd597befae6dbe8a" translate="yes" xml:space="preserve">
          <source>This function should return &lt;code&gt;{:ok, value}&lt;/code&gt; where &lt;code&gt;value&lt;/code&gt; is the value under &lt;code&gt;key&lt;/code&gt; if the key exists in the term, or &lt;code&gt;:error&lt;/code&gt; if the key does not exist in the term.</source>
          <target state="translated">この関数は返すべき &lt;code&gt;{:ok, value}&lt;/code&gt; &lt;code&gt;value&lt;/code&gt; 下の値である &lt;code&gt;key&lt;/code&gt; のキー用語に存在する、または場合 &lt;code&gt;:error&lt;/code&gt; キー用語に存在しない場合。</target>
        </trans-unit>
        <trans-unit id="5ba272759196f5f4398bb53efebf29cecd454930" translate="yes" xml:space="preserve">
          <source>This function should return:</source>
          <target state="translated">この関数は返すべきです。</target>
        </trans-unit>
        <trans-unit id="734b0856ba9ef7d3fe8e856bcb519a57b1180774" translate="yes" xml:space="preserve">
          <source>This function, as well as &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;get/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#post/3&quot;&gt;&lt;code&gt;post/3&lt;/code&gt;&lt;/a&gt; and friends, accepts the request body or parameters as last argument:</source>
          <target state="translated">この関数は、&lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;get/3&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#post/3&quot;&gt; &lt;code&gt;post/3&lt;/code&gt; &lt;/a&gt;、およびその他のフレンドと同様に、リクエストの本文またはパラメーターを最後の引数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="206f33c29b6ec02bb699170e45e3a167ce8f68a1" translate="yes" xml:space="preserve">
          <source>This functionality exists mostly for integration with &lt;code&gt;Phoenix.LiveView&lt;/code&gt; that replaces the anonymous function for explicit closing of the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">This functionality exists mostly for integration with &lt;code&gt;Phoenix.LiveView&lt;/code&gt; that replaces the anonymous function for explicit closing of the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag:</target>
        </trans-unit>
        <trans-unit id="5e501818f2a9b8d26ee849f92368c85b2aa84ace" translate="yes" xml:space="preserve">
          <source>This functionality exists mostly for integration with &lt;code&gt;Phoenix.LiveView&lt;/code&gt; that replaces the anonymous function for returning the generated forms instead.</source>
          <target state="translated">This functionality exists mostly for integration with &lt;code&gt;Phoenix.LiveView&lt;/code&gt; that replaces the anonymous function for returning the generated forms instead.</target>
        </trans-unit>
        <trans-unit id="60a9005f28b867008de687c6b297116271dbe0ee" translate="yes" xml:space="preserve">
          <source>This generator uses default options provided in the &lt;code&gt;:generators&lt;/code&gt; configuration of the &lt;code&gt;:phoenix&lt;/code&gt; application. These are the defaults:</source>
          <target state="translated">このジェネレーターは、 &lt;code&gt;:phoenix&lt;/code&gt; アプリケーションの &lt;code&gt;:generators&lt;/code&gt; 設定で提供されるデフォルトのオプションを使用します。これらはデフォルトです：</target>
        </trans-unit>
        <trans-unit id="a8c79d64b76e704cc3305c267e9609ec954e0a9b" translate="yes" xml:space="preserve">
          <source>This generator uses default options provided in the &lt;code&gt;:generators&lt;/code&gt; configuration of your application. These are the defaults:</source>
          <target state="translated">このジェネレーターは、アプリケーションの &lt;code&gt;:generators&lt;/code&gt; 構成で提供されるデフォルトのオプションを使用します。これらはデフォルトです：</target>
        </trans-unit>
        <trans-unit id="ea9fd1bcd7395e4e765f0c8c83f634242ed59708" translate="yes" xml:space="preserve">
          <source>This generator will automatically open the config/config.exs after generation if you have &lt;code&gt;ECTO_EDITOR&lt;/code&gt; set in your environment variable.</source>
          <target state="translated">環境変数に &lt;code&gt;ECTO_EDITOR&lt;/code&gt; が設定されている場合、このジェネレーターは生成後にconfig / config.exsを自動的に開きます。</target>
        </trans-unit>
        <trans-unit id="351d79dff782082a2ce188e37bb0ce9252eef229" translate="yes" xml:space="preserve">
          <source>This inner representation allows us to render and compose templates easily. For example, if you want to render JSON data, we could do so by adding a &quot;show.json&quot; entry to &lt;code&gt;render/2&lt;/code&gt; in our view:</source>
          <target state="translated">This inner representation allows us to render and compose templates easily. For example, if you want to render JSON data, we could do so by adding a &quot;show.json&quot; entry to &lt;code&gt;render/2&lt;/code&gt; in our view:</target>
        </trans-unit>
        <trans-unit id="0ef1c03d35aad86fcc35b135848f7173bd9a0fa9" translate="yes" xml:space="preserve">
          <source>This inner representation allows us to render and compose templates easily. For example, if you want to render JSON data, we could do so by adding a &amp;ldquo;show.json&amp;rdquo; entry to &lt;code&gt;render/2&lt;/code&gt; in our view:</source>
          <target state="translated">この内部表現により、テンプレートを簡単にレンダリングおよび作成できます。たとえば、JSONデータをレンダリングする場合は、ビューの &lt;code&gt;render/2&lt;/code&gt; に「show.json」エントリを追加することで実現できます。</target>
        </trans-unit>
        <trans-unit id="9df51736f8af300b7e83be2bba6d0538a65eaf19" translate="yes" xml:space="preserve">
          <source>This is an implementation of EEx.Engine that guarantees templates are HTML Safe.</source>
          <target state="translated">テンプレートが HTML セーフであることを保証する EEx.Engine の実装です。</target>
        </trans-unit>
        <trans-unit id="22dfd0ec4ef3534510402dea1f9a067863780a64" translate="yes" xml:space="preserve">
          <source>This is available only inside subqueries.</source>
          <target state="translated">これはサブクエリ内でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="5329254754bcb5b1518f7c46c55cd4246cdc7b2b" translate="yes" xml:space="preserve">
          <source>This is best used in conjunction with &lt;code&gt;parent_as&lt;/code&gt; to correlate the subquery with the parent query to test some condition on related rows in a different table. In the above example the query returns posts which have at least one comment that has more than 5 replies.</source>
          <target state="translated">This is best used in conjunction with &lt;code&gt;parent_as&lt;/code&gt; to correlate the subquery with the parent query to test some condition on related rows in a different table. In the above example the query returns posts which have at least one comment that has more than 5 replies.</target>
        </trans-unit>
        <trans-unit id="dd363ee9be583e8940f3872abf411010d65f4b10" translate="yes" xml:space="preserve">
          <source>This is callback is invoked when a custom type is given to &lt;code&gt;field&lt;/code&gt; with the &lt;code&gt;:autogenerate&lt;/code&gt; flag.</source>
          <target state="translated">This is callback is invoked when a custom type is given to &lt;code&gt;field&lt;/code&gt; with the &lt;code&gt;:autogenerate&lt;/code&gt; flag.</target>
        </trans-unit>
        <trans-unit id="7a6276fd1995acb9d422ef5b0fccedcd0f49f563" translate="yes" xml:space="preserve">
          <source>This is configured in your application environment like:</source>
          <target state="translated">のようにアプリケーション環境で設定されています。</target>
        </trans-unit>
        <trans-unit id="543130ccea506a07596bda5da2eb43221176545d" translate="yes" xml:space="preserve">
          <source>This is done as a security measure to avoid attacks that attempt to traverse entries with nil columns. To check that value is &lt;code&gt;nil&lt;/code&gt;, use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#is_nil/1&quot;&gt;&lt;code&gt;is_nil/1&lt;/code&gt;&lt;/a&gt; instead:</source>
          <target state="translated">これは、nil列を持つエントリを走査しようとする攻撃を回避するためのセキュリティ対策として行われます。値が &lt;code&gt;nil&lt;/code&gt; であることを確認するには、代わりに&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#is_nil/1&quot;&gt; &lt;code&gt;is_nil/1&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="4067008cb24e88317e907e2f01cf3fea3ce7a290" translate="yes" xml:space="preserve">
          <source>This is done by regularly fetching the record from the database, then checking whether another user has made changes to the record &lt;em&gt;only when updating the record&lt;/em&gt;. This behaviour is ideal in situations where the chances of concurrent updates to the same record are low; if they&amp;rsquo;re not, pessimistic locking or other concurrency patterns may be more suited.</source>
          <target state="translated">これは、データベースから定期的にレコードをフェッチし、レコードを&lt;em&gt;更新するときにのみ&lt;/em&gt;、別のユーザーがレコードに変更を加えたかどうかを確認することで行われます。この動作は、同じレコードに対する同時更新の可能性が低い状況で理想的です。そうでない場合は、悲観的ロックまたは他の同時実行パターンの方が適している可能性があります。</target>
        </trans-unit>
        <trans-unit id="823d31394ade33b7711fd9d9b5d40e1240503c08" translate="yes" xml:space="preserve">
          <source>This is done by regularly fetching the record from the database, then checking whether another user has made changes to the record &lt;em&gt;only when updating the record&lt;/em&gt;. This behaviour is ideal in situations where the chances of concurrent updates to the same record are low; if they're not, pessimistic locking or other concurrency patterns may be more suited.</source>
          <target state="translated">This is done by regularly fetching the record from the database, then checking whether another user has made changes to the record &lt;em&gt;only when updating the record&lt;/em&gt;. This behaviour is ideal in situations where the chances of concurrent updates to the same record are low; if they're not, pessimistic locking or other concurrency patterns may be more suited.</target>
        </trans-unit>
        <trans-unit id="6e8026b3623dfa096a82605e21a4cd8c802a6f2c" translate="yes" xml:space="preserve">
          <source>This is equivalent to setting the status and the body and then calling &lt;a href=&quot;#send_resp/1&quot;&gt;&lt;code&gt;send_resp/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、ステータスと本文を設定してから&lt;a href=&quot;#send_resp/1&quot;&gt; &lt;code&gt;send_resp/1&lt;/code&gt; を&lt;/a&gt;呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="d9ba82c91234fa5021cfb3b5cb56f8799ec54310" translate="yes" xml:space="preserve">
          <source>This is especially useful when working with subqueries, where you may need to refer to a parent binding with &lt;code&gt;parent_as&lt;/code&gt;, which is not known when writing the subquery:</source>
          <target state="translated">This is especially useful when working with subqueries, where you may need to refer to a parent binding with &lt;code&gt;parent_as&lt;/code&gt; , which is not known when writing the subquery:</target>
        </trans-unit>
        <trans-unit id="66c9554f976f86ea7cfddef7a13a078b61322160" translate="yes" xml:space="preserve">
          <source>This is helpful when you are not testing joining the channel and just need the socket.</source>
          <target state="translated">これは、チャンネルへの接続テストを行わず、ソケットだけが必要な場合に便利です。</target>
        </trans-unit>
        <trans-unit id="e67b3c4ca838f0b073d784d2fa79097d1fe7dad2" translate="yes" xml:space="preserve">
          <source>This is invoked only once per socket regardless of the number of transports and should be responsible for setting up any process structure used exclusively by the socket regardless of transports.</source>
          <target state="translated">これは、トランスポートの数に関係なくソケットごとに一度だけ呼び出され、トランスポートに関係なくソケットでのみ使用されるプロセス構造体を設定する責任があります。</target>
        </trans-unit>
        <trans-unit id="2d0916f452cd067b42f99269461a6e8a22fcd085" translate="yes" xml:space="preserve">
          <source>This is particularly useful when used with &lt;a href=&quot;plug.builder#builder_opts/0&quot;&gt;&lt;code&gt;Plug.Builder.builder_opts/0&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;builder_opts/0&lt;/code&gt; allows us to pass options received when initializing &lt;code&gt;AppRouter&lt;/code&gt; to a specific plug, such as dispatch itself. So if instead of:</source>
          <target state="translated">This is particularly useful when used with &lt;a href=&quot;plug.builder#builder_opts/0&quot;&gt; &lt;code&gt;Plug.Builder.builder_opts/0&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;builder_opts/0&lt;/code&gt; allows us to pass options received when initializing &lt;code&gt;AppRouter&lt;/code&gt; to a specific plug, such as dispatch itself. So if instead of:</target>
        </trans-unit>
        <trans-unit id="13e4b6dd8b33a2972a835278b18e46ff4920ac2a" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#foreign_key_constraint/3&quot;&gt;&lt;code&gt;foreign_key_constraint/3&lt;/code&gt;&lt;/a&gt; except that the field is inferred from the association definition. This is useful to guarantee that a child will only be created if the parent exists in the database too. Therefore, it only applies to &lt;code&gt;belongs_to&lt;/code&gt; associations.</source>
          <target state="translated">これは、フィールドが関連定義から推測されることを除いて、&lt;a href=&quot;#foreign_key_constraint/3&quot;&gt; &lt;code&gt;foreign_key_constraint/3&lt;/code&gt; &lt;/a&gt;と同様です。これは、親がデータベースにも存在する場合にのみ子が作成されることを保証するのに役立ちます。したがって、これは &lt;code&gt;belongs_to&lt;/code&gt; アソシエーションにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="02210ecf6e704066e98f3f150578efab0c87344d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#foreign_key_constraint/3&quot;&gt;&lt;code&gt;foreign_key_constraint/3&lt;/code&gt;&lt;/a&gt; except that the field is inferred from the association definition. This is useful to guarantee that parent can only be deleted (or have its primary key changed) if no child exists in the database. Therefore, it only applies to &lt;code&gt;has_*&lt;/code&gt; associations.</source>
          <target state="translated">これは、フィールドが関連定義から推測されることを除いて、&lt;a href=&quot;#foreign_key_constraint/3&quot;&gt; &lt;code&gt;foreign_key_constraint/3&lt;/code&gt; &lt;/a&gt;と同様です。これは、データベースに子が存在しない場合にのみ親を削除できる（または主キーを変更できる）ことを保証するのに役立ちます。したがって、これは &lt;code&gt;has_*&lt;/code&gt; 関連付けにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="246766b43ac065cf7a6813d58181faa7501710d2" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;ecto.query#preload/3&quot;&gt;&lt;code&gt;Ecto.Query.preload/3&lt;/code&gt;&lt;/a&gt; except it allows you to preload structs after they have been fetched from the database.</source>
          <target state="translated">これは、データベースからフェッチされた後に構造体をプリロードできることを除いて、&lt;a href=&quot;ecto.query#preload/3&quot;&gt; &lt;code&gt;Ecto.Query.preload/3&lt;/code&gt; に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="e4eed9ef50790eac0932b578ea9d27bff84cfd58" translate="yes" xml:space="preserve">
          <source>This is the documentation for the Phoenix project.</source>
          <target state="translated">これはPhoenixプロジェクトのドキュメントです。</target>
        </trans-unit>
        <trans-unit id="1871b378b5a1fb4c4012fd59a4ce5d038f416585" translate="yes" xml:space="preserve">
          <source>This is useful for things like validation hints on form fields, e.g. an empty changeset for a new form. That changeset isn&amp;rsquo;t valid, but we don&amp;rsquo;t want to show errors until an actual user action has been performed.</source>
          <target state="translated">これは、フォームフィールドの検証ヒントなど、新しいフォームの空のチェンジセットなどに役立ちます。そのチェンジセットは有効ではありませんが、実際のユーザーアクションが実行されるまでエラーを表示したくありません。</target>
        </trans-unit>
        <trans-unit id="8eac94b23ec614fdc27f65b1253b4162ffa8a109" translate="yes" xml:space="preserve">
          <source>This is useful for things like validation hints on form fields, e.g. an empty changeset for a new form. That changeset isn't valid, but we don't want to show errors until an actual user action has been performed.</source>
          <target state="translated">これはフォームフィールドのバリデーションヒントのようなもの、例えば新しいフォームの空のチェンジセットのようなものに便利です。チェンジセットは有効ではありませんが、実際のユーザーアクションが実行されるまでエラーを表示したくはありません。</target>
        </trans-unit>
        <trans-unit id="b547124ded5a56cf030283e1096472422e728527" translate="yes" xml:space="preserve">
          <source>This is useful when a specific connection is required for testing a plug or a particular function.</source>
          <target state="translated">プラグや特定の機能をテストするために特定の接続が必要な場合に便利です。</target>
        </trans-unit>
        <trans-unit id="967c2f65e325112d9e81267fb5e803aaad342521" translate="yes" xml:space="preserve">
          <source>This is useful when building the select by hand. It expects all options and one or more select values.</source>
          <target state="translated">これはselectを手で作るときに便利です。これは、すべてのオプションと1つ以上のセレクト値を想定しています。</target>
        </trans-unit>
        <trans-unit id="cc164165494ed01035c2fea10f32c91cf135eaeb" translate="yes" xml:space="preserve">
          <source>This is useful when the whole dataset was already loaded or must be explicitly fetched from elsewhere. The IDs received by the preloading function and the result returned depends on the association type:</source>
          <target state="translated">これは、データセット全体が既にロードされている場合や、他の場所から明示的に取得しなければならない場合に便利です。プリロード関数が受け取ったIDと返される結果は、アソシエーション・タイプに依存します。</target>
        </trans-unit>
        <trans-unit id="c1ee8628cd73b8b7149d50d393fe7c8fa56a351b" translate="yes" xml:space="preserve">
          <source>This is useful when you are creating forms that are not backed by any kind of data from the data layer, like a search form.</source>
          <target state="translated">これは、検索フォームのように、データレイヤーからのデータに裏打ちされていないフォームを作成する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="0765c6b4474540e333d6f27c42f79680532d7ff2" translate="yes" xml:space="preserve">
          <source>This is useful when you are creating forms that are not backed by any kind of data layer. Let's assume that we're submitting a form to the &lt;code&gt;:new&lt;/code&gt; action in the &lt;code&gt;FooController&lt;/code&gt;:</source>
          <target state="translated">This is useful when you are creating forms that are not backed by any kind of data layer. Let's assume that we're submitting a form to the &lt;code&gt;:new&lt;/code&gt; action in the &lt;code&gt;FooController&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="557303ac218e1708373d1b4d8a6f4a9c23b313d1" translate="yes" xml:space="preserve">
          <source>This is useful, for example, to recompile modules that depend on external systems, such as directories, databases, etc. Note if you simply depend on external files, &lt;code&gt;@external_resource&lt;/code&gt; annotation should be used.</source>
          <target state="translated">This is useful, for example, to recompile modules that depend on external systems, such as directories, databases, etc. Note if you simply depend on external files, &lt;code&gt;@external_resource&lt;/code&gt; annotation should be used.</target>
        </trans-unit>
        <trans-unit id="f798383afb7474b032be11f12e76fdd26cfd9f6b" translate="yes" xml:space="preserve">
          <source>This layout is used by many parts of your application. However, there is a subsection of your application that wants to also add a sidebar. Let's call it &quot;blog.html&quot;. You can build on top of the existing layout in two steps. First, define the blog layout:</source>
          <target state="translated">このレイアウトはアプリケーションの多くの部分で使用されます。しかし、サイドバーを追加したいアプリケーションのサブセクションがあります。これを &quot;blog.html &quot;と呼びましょう。2つのステップで既存のレイアウトの上に構築することができます。まず、ブログのレイアウトを定義します。</target>
        </trans-unit>
        <trans-unit id="44a1ef9e37129dec0a33744ad55541c8ec1d1309" translate="yes" xml:space="preserve">
          <source>This macro accepts a set of options:</source>
          <target state="translated">このマクロは、オプションのセットを受け付けます。</target>
        </trans-unit>
        <trans-unit id="30cad0a3d348831413868904461ce3cb02695bb7" translate="yes" xml:space="preserve">
          <source>This macro also supports passing a nested block of route definitions. This is helpful for nesting children resources within their parents to generate nested routes.</source>
          <target state="translated">このマクロは、ルート定義のネストされたブロックを渡すこともサポートしています。これは、親の中に子リソースを入れ子にしてネストされたルートを生成するのに便利です。</target>
        </trans-unit>
        <trans-unit id="5272cc1708a897442f49d3861c8376d2c1684484" translate="yes" xml:space="preserve">
          <source>This macro doesn&amp;rsquo;t add any guards when adding the new plug to the pipeline; for more information about adding plugs with guards see &lt;code&gt;compile/1&lt;/code&gt;.</source>
          <target state="translated">このマクロは、新しいプラグインをパイプラインに追加するときにガードを追加しません。ガード付きのプラグの追加の詳細については、 &lt;code&gt;compile/1&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="84875e3a7e5339034bbbeafae9696406ba8d0be0" translate="yes" xml:space="preserve">
          <source>This macro doesn't add any guards when adding the new plug to the pipeline; for more information about adding plugs with guards see &lt;a href=&quot;#compile/3&quot;&gt;&lt;code&gt;compile/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This macro doesn't add any guards when adding the new plug to the pipeline; for more information about adding plugs with guards see &lt;a href=&quot;#compile/3&quot;&gt; &lt;code&gt;compile/3&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fa7e3fdecd39a60479ea64ca6e42ffb064952aa0" translate="yes" xml:space="preserve">
          <source>This macro is similar to &lt;a href=&quot;#select/3&quot;&gt;&lt;code&gt;select/3&lt;/code&gt;&lt;/a&gt; except it may be specified multiple times as long as every entry is a map. This is useful for merging and composing selects. For example:</source>
          <target state="translated">このマクロは、すべてのエントリがマップである限り複数回指定できることを除いて、&lt;a href=&quot;#select/3&quot;&gt; &lt;code&gt;select/3&lt;/code&gt; に&lt;/a&gt;似ています。これは、selectのマージと作成に役立ちます。例えば：</target>
        </trans-unit>
        <trans-unit id="80844b87a747d5e664d2490ade69aea11936ad23" translate="yes" xml:space="preserve">
          <source>This may also happen on redirects. If you have a POST request to &lt;code&gt;foo.example.com&lt;/code&gt; that redirects to &lt;code&gt;bar.example.com&lt;/code&gt; with status 307, the token will contain a different host than the one in the request.</source>
          <target state="translated">これはリダイレクトでも発生する可能性があります。 &lt;code&gt;foo.example.com&lt;/code&gt; へのPOSTリクエストがあり、ステータス307で &lt;code&gt;bar.example.com&lt;/code&gt; にリダイレクトする場合、トークンにはリクエスト内のホストとは異なるホストが含まれます。</target>
        </trans-unit>
        <trans-unit id="4a4f142c5563004d2613132e5bfe4d91c45a1a1d" translate="yes" xml:space="preserve">
          <source>This means guards can be given to &lt;code&gt;match&lt;/code&gt;:</source>
          <target state="translated">これは、ガードを &lt;code&gt;match&lt;/code&gt; せることができることを意味します。</target>
        </trans-unit>
        <trans-unit id="46fcd9b428f43bc3ceced700d0d499071542798d" translate="yes" xml:space="preserve">
          <source>This means that when working with changesets that are not meant to be persisted to the database, such as schemaless changesets, you may need to explicitly set the action to one specific value. Frameworks such as Phoenix use the action value to define how HTML forms should act.</source>
          <target state="translated">これは、スキーマレスのチェンジセットのようにデータベースに永続化されないチェンジセットを扱う場合、アクションを明示的に特定の値に設定する必要があるかもしれないことを意味します。Phoenix のようなフレームワークは、HTML フォームがどのように動作するかを定義するためにアクション値を使用します。</target>
        </trans-unit>
        <trans-unit id="ee54c80446b3760c6fb0a7486f59b47f284f3002" translate="yes" xml:space="preserve">
          <source>This mimics the behaviour existing in clients.</source>
          <target state="translated">これは、クライアントに存在する行動を模倣しています。</target>
        </trans-unit>
        <trans-unit id="c496c6a2b0bd7dfb1281705f319360c782f54b15" translate="yes" xml:space="preserve">
          <source>This module also provides functions to enable a secure environment on transports that, at some point, have access to a &lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールは、ある時点で&lt;a href=&quot;../plug/1.5.1/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; に&lt;/a&gt;アクセスできるトランスポートで安全な環境を有効にする機能も提供します。</target>
        </trans-unit>
        <trans-unit id="0f3ec12e95282c603be600f76b1efa0ba48fef74" translate="yes" xml:space="preserve">
          <source>This module also provides functions to enable a secure environment on transports that, at some point, have access to a &lt;a href=&quot;../plug/plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This module also provides functions to enable a secure environment on transports that, at some point, have access to a &lt;a href=&quot;../plug/plug.conn&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6ebb63837f361cbf03a3796451f4fe31cebbd7a9" translate="yes" xml:space="preserve">
          <source>This module also provides functions to simulate leaving and closing a channel. Once you leave or close a channel, because the channel is linked to the test process on join, it will crash the test process:</source>
          <target state="translated">このモジュールは、チャンネルの離脱や終了をシミュレートする機能も提供します。一度チャネルを残したり閉じたりすると、チャネルは結合時にテストプロセスにリンクされているため、テストプロセスをクラッシュさせてしまいます。</target>
        </trans-unit>
        <trans-unit id="85f9b5e0210ecd7fadc5d5b219e6eb2289448aaa" translate="yes" xml:space="preserve">
          <source>This module also specifies a behaviour that all the parsers to be used with Plug should adopt.</source>
          <target state="translated">このモジュールは、Plugで使用されるすべてのパーサが採用すべき動作も指定します。</target>
        </trans-unit>
        <trans-unit id="d9c3143248084cc9c9ababd5b063a0b53a122a9b" translate="yes" xml:space="preserve">
          <source>This module can be &lt;code&gt;use&lt;/code&gt;-d into a module in order to build a plug pipeline:</source>
          <target state="translated">このモジュールは、プラグインパイプラインを構築するために、モジュールに-dを &lt;code&gt;use&lt;/code&gt; できます。</target>
        </trans-unit>
        <trans-unit id="b51e359d7e48f146d0d1e937d9d0255d91dad914" translate="yes" xml:space="preserve">
          <source>This module can be used in your test cases, like this:</source>
          <target state="translated">このモジュールは、このようにテストケースで使用することができます。</target>
        </trans-unit>
        <trans-unit id="29fc81812b5b90ffe59423aab0c8bc729d76484f" translate="yes" xml:space="preserve">
          <source>This module defines a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct and the main functions for working with Plug connections.</source>
          <target state="translated">This module defines a &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt; struct and the main functions for working with Plug connections.</target>
        </trans-unit>
        <trans-unit id="070196252438bbce61c0f717094acdcf2e81b7f0" translate="yes" xml:space="preserve">
          <source>This module defines a &lt;a href=&quot;plug.conn#content&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct and the main functions for working with Plug connections.</source>
          <target state="translated">このモジュールは、&lt;a href=&quot;plug.conn#content&quot;&gt; &lt;code&gt;Plug.Conn&lt;/code&gt; &lt;/a&gt;構造体とプラグ接続を操作するための主な関数を定義します。</target>
        </trans-unit>
        <trans-unit id="3a8c2c7d59b4c13115d6ac023bd8ac70e7f55fc3" translate="yes" xml:space="preserve">
          <source>This module describes what is required to build a Phoenix transport. The transport sits between the socket and channels, forwarding client messages to channels and vice-versa.</source>
          <target state="translated">このモジュールでは、Phoenixトランスポートを構築するために必要なものを説明します。トランスポートはソケットとチャンネルの間に位置し、クライアントメッセージをチャンネルに転送します。</target>
        </trans-unit>
        <trans-unit id="1bf3d32030d6f8a66f143a02bbf8343a335a4b15" translate="yes" xml:space="preserve">
          <source>This module documents each of those macros, providing examples in both the keywords query and pipe expression formats.</source>
          <target state="translated">このモジュールでは、キーワードクエリとパイプ式の両方のフォーマットの例を提供して、これらのマクロのそれぞれを文書化します。</target>
        </trans-unit>
        <trans-unit id="a4abc0ee1ab071690365f6c903e68103b59a8146" translate="yes" xml:space="preserve">
          <source>This module is commonly used within a &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;plug.router&quot;&gt;&lt;code&gt;Plug.Router&lt;/code&gt;&lt;/a&gt; and it wraps the &lt;code&gt;call/2&lt;/code&gt; function.</source>
          <target state="translated">このモジュールは、一般内で使用され&lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;plug.router&quot;&gt; &lt;code&gt;Plug.Router&lt;/code&gt; &lt;/a&gt;それはラップ &lt;code&gt;call/2&lt;/code&gt; 機能。</target>
        </trans-unit>
        <trans-unit id="bf931afdfdb9158aece8ce5e671b27951b8f8dc7" translate="yes" xml:space="preserve">
          <source>This module is deprecated. To use Cowboy 1 With Plug please include &lt;code&gt;plug_cowboy&lt;/code&gt; version 1.0 or above in your &lt;code&gt;mix.exs&lt;/code&gt; file. It is recommended that you use the &lt;code&gt;Plug.Cowboy&lt;/code&gt; module directly instead of Plug.Adapters.Cowboy.</source>
          <target state="translated">このモジュールは非推奨です。カウボーイ1とプラグを使用するには、 &lt;code&gt;plug_cowboy&lt;/code&gt; バージョン1.0以上を &lt;code&gt;mix.exs&lt;/code&gt; ファイルに含めてください。 &lt;code&gt;Plug.Cowboy&lt;/code&gt; ではなく、Plug.Cowboyモジュールを直接使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4a03284231b4c9beab2d0b3147c2e873d6724e04" translate="yes" xml:space="preserve">
          <source>This module is deprecated. To use Cowboy 2 With Plug please include &lt;code&gt;plug_cowboy&lt;/code&gt; version 2.0 or above in your &lt;code&gt;mix.exs&lt;/code&gt; file. It is recommended that you use the &lt;code&gt;Plug.Cowboy&lt;/code&gt; module directly instead of Plug.Adapters.Cowboy2</source>
          <target state="translated">このモジュールは非推奨です。カウボーイ2プラグインを使用するには、 &lt;code&gt;plug_cowboy&lt;/code&gt; バージョン2.0以降を &lt;code&gt;mix.exs&lt;/code&gt; ファイルに含めてください。 &lt;code&gt;Plug.Cowboy&lt;/code&gt; 代わりにPlug.Cowboyモジュールを直接使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="b1128cd9517be1b80b829d37c77e14445123041b" translate="yes" xml:space="preserve">
          <source>This module is used by Phoenix pubsub adapters to handle their local node subscriptions and it is usually not accessed directly. See &lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt;&lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt;&lt;/a&gt; for an example integration.</source>
          <target state="translated">このモジュールは、Phoenix pubsubアダプターがローカルノードのサブスクリプションを処理するために使用し、通常は直接アクセスされません。統合の例については、&lt;a href=&quot;phoenix.pubsub.pg2&quot;&gt; &lt;code&gt;Phoenix.PubSub.PG2&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="18749daab402c4f9221f76b108eba5a09277b12b" translate="yes" xml:space="preserve">
          <source>This module is used to define the application&amp;rsquo;s main view, which serves as the base for all other views and templates.</source>
          <target state="translated">このモジュールは、他のすべてのビューおよびテンプレートのベースとして機能するアプリケーションのメインビューを定義するために使用されます。</target>
        </trans-unit>
        <trans-unit id="6bfcb71b5835a83213d4dfa6ee58017a4845f8d7" translate="yes" xml:space="preserve">
          <source>This module is used to define the application's main view, which serves as the base for all other views and templates.</source>
          <target state="translated">このモジュールは、アプリケーションのメインビューを定義するために使用され、他のすべてのビューやテンプレートのベースとして機能します。</target>
        </trans-unit>
        <trans-unit id="0cd0bbb57a64e46e86f20c8dc2b8b74868181cea" translate="yes" xml:space="preserve">
          <source>This module provides conveniences for reading all files from a particular directory and embedding them into a single module. Imagine you have a directory with templates:</source>
          <target state="translated">このモジュールは、特定のディレクトリからすべてのファイルを読み込み、単一のモジュールに埋め込むための便利な機能を提供します。テンプレートのあるディレクトリを想像してみてください。</target>
        </trans-unit>
        <trans-unit id="4237a22f395fffa8c90b7f272130e1f9c638e3db" translate="yes" xml:space="preserve">
          <source>This module specifies a behaviour that all sockets must implement. &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; is just one possible implementation of a socket that multiplexes events over multiple channels. Developers can implement their own sockets as long as they implement the behaviour outlined here.</source>
          <target state="translated">This module specifies a behaviour that all sockets must implement. &lt;a href=&quot;phoenix.socket&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; is just one possible implementation of a socket that multiplexes events over multiple channels. Developers can implement their own sockets as long as they implement the behaviour outlined here.</target>
        </trans-unit>
        <trans-unit id="e1f8c7a704d8b281a05ab2c2ee94c670ce893f15" translate="yes" xml:space="preserve">
          <source>This must be executed from the process that will effectively operate the socket.</source>
          <target state="translated">ソケットを効果的に動作させるプロセスから実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="a54461d29fcec4b636adb86f49d11ebedc8a4319" translate="yes" xml:space="preserve">
          <source>This operation uses the query cache if one is available.</source>
          <target state="translated">この操作は、クエリキャッシュがあればそれを使用します。</target>
        </trans-unit>
        <trans-unit id="2e6392283fe53096fd6723c6a52bb14c1fbe0eee" translate="yes" xml:space="preserve">
          <source>This operation will return the underlying data with changes regardless if the changeset is valid or not.</source>
          <target state="translated">この操作は、チェンジセットが有効かどうかに関わらず、変更を含む基礎データを返します。</target>
        </trans-unit>
        <trans-unit id="049c09158996c650e55b8f1ec4561fa180509070" translate="yes" xml:space="preserve">
          <source>This option assumes the project was generated with the &lt;code&gt;--binary-id&lt;/code&gt; option, that sets up models to use &lt;code&gt;binary_id&lt;/code&gt; by default. If that&amp;rsquo;s not the case you can still set all your models to use &lt;code&gt;binary_id&lt;/code&gt; by default, by adding the following to your &lt;code&gt;model&lt;/code&gt; function in &lt;code&gt;web/web.ex&lt;/code&gt; or before the &lt;code&gt;schema&lt;/code&gt; declaration:</source>
          <target state="translated">このオプションは、プロジェクトがデフォルトで &lt;code&gt;binary_id&lt;/code&gt; を使用するようにモデルを設定する &lt;code&gt;--binary-id&lt;/code&gt; オプションで生成されたと想定しています。そうでない場合でも、 &lt;code&gt;web/web.ex&lt;/code&gt; の &lt;code&gt;model&lt;/code&gt; 関数または &lt;code&gt;schema&lt;/code&gt; 宣言の前に以下を追加することで、デフォルトで &lt;code&gt;binary_id&lt;/code&gt; を使用するようにすべてのモデルを設定できます。</target>
        </trans-unit>
        <trans-unit id="e0391ffae92290b282aabdcb9895807452f2bfe1" translate="yes" xml:space="preserve">
          <source>This option is passed as the &lt;code&gt;:init_mode&lt;/code&gt; to &lt;a href=&quot;plug/plug.builder#compile/3&quot;&gt;&lt;code&gt;Plug.Builder.compile/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This option is passed as the &lt;code&gt;:init_mode&lt;/code&gt; to &lt;a href=&quot;plug/plug.builder#compile/3&quot;&gt; &lt;code&gt;Plug.Builder.compile/3&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="60fcee5e8373c0151773e4d41d75fd04ea48fab0" translate="yes" xml:space="preserve">
          <source>This plug also fetches query params in the connection through &lt;a href=&quot;plug.conn#fetch_query_params/2&quot;&gt;&lt;code&gt;Plug.Conn.fetch_query_params/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプラグインは、&lt;a href=&quot;plug.conn#fetch_query_params/2&quot;&gt; &lt;code&gt;Plug.Conn.fetch_query_params/2&lt;/code&gt; &lt;/a&gt;を介した接続でクエリパラメータもフェッチします。</target>
        </trans-unit>
        <trans-unit id="40a4f301d5fad92658d3d0724f2518201be2787a" translate="yes" xml:space="preserve">
          <source>This plug can be mounted in a &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; pipeline as follows:</source>
          <target state="translated">このプラグは、次のように&lt;a href=&quot;plug.builder&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt;パイプラインにマウントできます。</target>
        </trans-unit>
        <trans-unit id="f6cd45326cadd9e10a4b5dcc83af5b2968ec6084" translate="yes" xml:space="preserve">
          <source>This plug doesn&amp;rsquo;t accept any options.</source>
          <target state="translated">このプラグはオプションを受け入れません。</target>
        </trans-unit>
        <trans-unit id="50cd1542f80ce2c27c4180007ab1670d825bb257" translate="yes" xml:space="preserve">
          <source>This plug doesn't accept any options.</source>
          <target state="translated">このプラグはオプションを受け付けません。</target>
        </trans-unit>
        <trans-unit id="540542716621eaa96ff36e27e48730d06833088f" translate="yes" xml:space="preserve">
          <source>This plug expects the body parameters to be already parsed and fetched. Those can be fetched with &lt;a href=&quot;plug.parsers&quot;&gt;&lt;code&gt;Plug.Parsers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプラグは、本体のパラメーターが既に解析およびフェッチされていることを想定しています。これらは&lt;a href=&quot;plug.parsers&quot;&gt; &lt;code&gt;Plug.Parsers&lt;/code&gt; &lt;/a&gt;でフェッチできます。</target>
        </trans-unit>
        <trans-unit id="01da79a8a81b2988c34c2c491464c98d17827644" translate="yes" xml:space="preserve">
          <source>This plug only parses the body if the request method is one of the following:</source>
          <target state="translated">このプラグインは、リクエストメソッドが以下のいずれかである場合にのみボディを解析します。</target>
        </trans-unit>
        <trans-unit id="dbc4a6cf27af703236d09b35d3f5b453a3411f43" translate="yes" xml:space="preserve">
          <source>This plug overrides the request&amp;rsquo;s &lt;code&gt;POST&lt;/code&gt; method with the method defined in the &lt;code&gt;_method&lt;/code&gt; request parameter.</source>
          <target state="translated">このプラグインは、 &lt;code&gt;_method&lt;/code&gt; リクエストパラメータで定義されたメソッドでリクエストの &lt;code&gt;POST&lt;/code&gt; メソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="f9183cda5f0f143ddaa1b79b7dc207c527edb3d2" translate="yes" xml:space="preserve">
          <source>This plug overrides the request's &lt;code&gt;POST&lt;/code&gt; method with the method defined in the &lt;code&gt;_method&lt;/code&gt; request parameter.</source>
          <target state="translated">This plug overrides the request's &lt;code&gt;POST&lt;/code&gt; method with the method defined in the &lt;code&gt;_method&lt;/code&gt; request parameter.</target>
        </trans-unit>
        <trans-unit id="9cbb2239965b1d685814f5586def8ff4895965d5" translate="yes" xml:space="preserve">
          <source>This plug will raise &lt;a href=&quot;plug.parsers.unsupportedmediatypeerror&quot;&gt;&lt;code&gt;Plug.Parsers.UnsupportedMediaTypeError&lt;/code&gt;&lt;/a&gt; by default if the request cannot be parsed by any of the given types and the MIME type has not been explicitly accepted with the &lt;code&gt;:pass&lt;/code&gt; option.</source>
          <target state="translated">指定されたタイプのいずれかでリクエストを解析できず、MIMEタイプが &lt;code&gt;:pass&lt;/code&gt; オプションで明示的に受け入れられていない場合、このプラグインはデフォルトで&lt;a href=&quot;plug.parsers.unsupportedmediatypeerror&quot;&gt; &lt;code&gt;Plug.Parsers.UnsupportedMediaTypeError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="662ed6e00ff1f8efa3e545b88277587544f54665" translate="yes" xml:space="preserve">
          <source>This plug will raise &lt;a href=&quot;plug.parsers.unsupportedmediatypeerror&quot;&gt;&lt;code&gt;Plug.Parsers.UnsupportedMediaTypeError&lt;/code&gt;&lt;/a&gt; by default if the request cannot be parsed by any of the given types and the MIME type has not been explicity accepted with the &lt;code&gt;:pass&lt;/code&gt; option.</source>
          <target state="translated">指定されたタイプのいずれかでリクエストを解析できず、MIMEタイプが &lt;code&gt;:pass&lt;/code&gt; オプションで明示的に受け入れられていない場合、このプラグインはデフォルトで&lt;a href=&quot;plug.parsers.unsupportedmediatypeerror&quot;&gt; &lt;code&gt;Plug.Parsers.UnsupportedMediaTypeError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="20bad4ce825285978d82d9c5c3e6eb11442c40e0" translate="yes" xml:space="preserve">
          <source>This plug won&amp;rsquo;t generate tokens automatically. Instead, tokens will be generated only when required by calling &lt;a href=&quot;#get_csrf_token/0&quot;&gt;&lt;code&gt;get_csrf_token/0&lt;/code&gt;&lt;/a&gt;. In case you are generating the token for certain specific URL, you should use &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt;&lt;code&gt;get_csrf_token_for/1&lt;/code&gt;&lt;/a&gt; as that will avoid tokens from being leaked to other applications.</source>
          <target state="translated">このプラグはトークンを自動的に生成しません。代わりに、&lt;a href=&quot;#get_csrf_token/0&quot;&gt; &lt;code&gt;get_csrf_token/0&lt;/code&gt; を&lt;/a&gt;呼び出して必要な場合にのみトークンが生成されます。特定の特定のURLのトークンを生成する場合は、&lt;a href=&quot;#get_csrf_token_for/1&quot;&gt; &lt;code&gt;get_csrf_token_for/1&lt;/code&gt; &lt;/a&gt;を使用する必要があります。これにより、トークンが他のアプリケーションに漏洩するのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="ebbff7ffc8f75e2adf94800f3c930587cc10fe90" translate="yes" xml:space="preserve">
          <source>This plug won't generate tokens automatically. Instead, tokens will be generated only when required by calling &lt;a href=&quot;#get_csrf_token/0&quot;&gt;&lt;code&gt;get_csrf_token/0&lt;/code&gt;&lt;/a&gt;. In case you are generating the token for certain specific URL, you should use &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt;&lt;code&gt;get_csrf_token_for/1&lt;/code&gt;&lt;/a&gt; as that will avoid tokens from being leaked to other applications.</source>
          <target state="translated">This plug won't generate tokens automatically. Instead, tokens will be generated only when required by calling &lt;a href=&quot;#get_csrf_token/0&quot;&gt; &lt;code&gt;get_csrf_token/0&lt;/code&gt; &lt;/a&gt;. In case you are generating the token for certain specific URL, you should use &lt;a href=&quot;#get_csrf_token_for/1&quot;&gt; &lt;code&gt;get_csrf_token_for/1&lt;/code&gt; &lt;/a&gt; as that will avoid tokens from being leaked to other applications.</target>
        </trans-unit>
        <trans-unit id="9d38ed574d39239d3ce1ee54fa402c6b77436c31" translate="yes" xml:space="preserve">
          <source>This process is two-fold:</source>
          <target state="translated">このプロセスは2つあります。</target>
        </trans-unit>
        <trans-unit id="a867af678f59d04d7a0076e28e130a1a90e313f4" translate="yes" xml:space="preserve">
          <source>This protocol is used by URL helpers and other parts of the Phoenix stack. For example, when you write:</source>
          <target state="translated">このプロトコルは、URLヘルパーやPhoenixスタックの他の部分で使用されています。例えば、以下のように書くと</target>
        </trans-unit>
        <trans-unit id="b21ceddd638e1843ee72cb36616db0e5a04aafff" translate="yes" xml:space="preserve">
          <source>This storage is meant to be used by libraries and frameworks to avoid writing to the user storage (the &lt;code&gt;:assigns&lt;/code&gt; field). It is recommended for libraries/frameworks to prefix the keys with the library name.</source>
          <target state="translated">このストレージは、ユーザーストレージ（ &lt;code&gt;:assigns&lt;/code&gt; フィールド）への書き込みを回避するために、ライブラリとフレームワークによって使用されることを意図しています。ライブラリ/フレームワークでは、キーの前にライブラリ名を付けることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="bcee46e9d2a4acc15bb7cd9f93742faef542611d" translate="yes" xml:space="preserve">
          <source>This store does not create the ETS table; it expects that an existing named table with public properties is passed as an argument.</source>
          <target state="translated">このストアはETSテーブルを作成しません。</target>
        </trans-unit>
        <trans-unit id="625b9c2d872b70c5c1c2329e2373298bcd36763e" translate="yes" xml:space="preserve">
          <source>This store, however, can be used as an example for creating custom storages, based on Redis, Memcached, or a database itself.</source>
          <target state="translated">しかし、このストアは、Redis、Memcached、またはデータベース自体をベースにしたカスタムストアを作成するための例として使用することができます。</target>
        </trans-unit>
        <trans-unit id="caef9692752dfc364ac9616409959d533077b374" translate="yes" xml:space="preserve">
          <source>This task accepts the same command-line arguments as &lt;code&gt;run&lt;/code&gt;. For additional information, refer to the documentation for &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt;&lt;code&gt;Mix.Tasks.Run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このタスクは、 &lt;code&gt;run&lt;/code&gt; と同じコマンドライン引数を受け入れます。追加情報については、&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt; &lt;code&gt;Mix.Tasks.Run&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d5878eb3c414b2f8b0bc85b921219b0b8c00c144" translate="yes" xml:space="preserve">
          <source>This validation is used to check for one specific parameter being true and as such does not require the field to effectively exist in the schema or the data being validated.</source>
          <target state="translated">この検証は特定のパラメータが真であるかどうかをチェックするために使用され、スキーマや検証対象のデータにフィールドが効果的に存在する必要はありません。</target>
        </trans-unit>
        <trans-unit id="d696deb31d0b50d9d5193d12918eed93ff0a69c5" translate="yes" xml:space="preserve">
          <source>This will allow you to cast and update only the association for the given country. The important point for partial changes is that any addresses, which were not preloaded won&amp;rsquo;t be changed.</source>
          <target state="translated">これにより、特定の国の協会のみをキャストおよび更新できます。部分的な変更の重要な点は、プリロードされていないアドレスは変更されないことです。</target>
        </trans-unit>
        <trans-unit id="a25d158d0047cb15049aa3798895382c7cd6f354" translate="yes" xml:space="preserve">
          <source>This will allow you to cast and update only the association for the given country. The important point for partial changes is that any addresses, which were not preloaded won't be changed.</source>
          <target state="translated">これにより、指定した国のアソシエーションだけをキャストして更新することができます。部分的な変更のための重要なポイントは、プリロードされていないアドレスは変更されないということです。</target>
        </trans-unit>
        <trans-unit id="96c8ad2e97ff0533cdfdce33b58a986331978807" translate="yes" xml:space="preserve">
          <source>This will force the token to be deleted once the response is sent.</source>
          <target state="translated">これにより、応答が送信された時点でトークンが強制的に削除されます。</target>
        </trans-unit>
        <trans-unit id="c6845572f50f3240fbaa36674696b8cf400c3eda" translate="yes" xml:space="preserve">
          <source>This will result in a migration with an &lt;code&gt;:integer&lt;/code&gt; column of &lt;code&gt;:user_id&lt;/code&gt; and create an index.</source>
          <target state="translated">これにより、 &lt;code&gt;:user_id&lt;/code&gt; の &lt;code&gt;:integer&lt;/code&gt; 列を使用した移行が行われ、インデックスが作成されます。</target>
        </trans-unit>
        <trans-unit id="cde93bead76f590b8ac92f4411245903df6471af" translate="yes" xml:space="preserve">
          <source>This will result in a migration with an &lt;code&gt;:integer&lt;/code&gt; column of &lt;code&gt;:user_id&lt;/code&gt; and create an index. It will also generate the appropriate &lt;code&gt;belongs_to&lt;/code&gt; entry in the schema.</source>
          <target state="translated">これにより、 &lt;code&gt;:user_id&lt;/code&gt; の &lt;code&gt;:integer&lt;/code&gt; 列を使用した移行が行われ、インデックスが作成されます。また、スキーマに適切な &lt;code&gt;belongs_to&lt;/code&gt; エントリを生成します。</target>
        </trans-unit>
        <trans-unit id="36a1b1b32231c3e4ff53add950295c72883cbbfb" translate="yes" xml:space="preserve">
          <source>Those functions are imported from two modules:</source>
          <target state="translated">これらの関数は2つのモジュールからインポートされています。</target>
        </trans-unit>
        <trans-unit id="6208b0413cd71b1dcc6adedd2bd128dd9d87591a" translate="yes" xml:space="preserve">
          <source>Those guards work like regular Elixir guards and the only variables accessible in the guard are &lt;code&gt;conn&lt;/code&gt;, the &lt;code&gt;action&lt;/code&gt; as an atom and the &lt;code&gt;controller&lt;/code&gt; as an alias.</source>
          <target state="translated">これらのガードは通常のElixirガードのように機能し、ガードでアクセスできる変数は &lt;code&gt;conn&lt;/code&gt; 、アトムとしての &lt;code&gt;action&lt;/code&gt; 、エイリアスとしての &lt;code&gt;controller&lt;/code&gt; のみです。</target>
        </trans-unit>
        <trans-unit id="39d358d22755c113807898f4d747028acc84c714" translate="yes" xml:space="preserve">
          <source>Timeout while waiting for the request.</source>
          <target state="translated">リクエストを待つ間のタイムアウト。</target>
        </trans-unit>
        <trans-unit id="4909edd3c35b1902875bfd0c83e9c081850f71db" translate="yes" xml:space="preserve">
          <source>To allow the user to download contents that are in memory as a binary or string:</source>
          <target state="translated">メモリ内にあるコンテンツをバイナリまたは文字列としてダウンロードできるようにすること。</target>
        </trans-unit>
        <trans-unit id="e6a6975b062fa8a73779dc6d912719d7498131ee" translate="yes" xml:space="preserve">
          <source>To assert that your channel closes or errors asynchronously, you can monitor the channel process with the tools provided by Elixir, and wait for the &lt;code&gt;:DOWN&lt;/code&gt; message. Imagine an implementation of the &lt;code&gt;handle_info/2&lt;/code&gt; function that closes the channel when it receives &lt;code&gt;:some_message&lt;/code&gt;:</source>
          <target state="translated">チャネルが非同期に閉じるかエラーになることを表明するには、Elixirが提供するツールを使用してチャネルプロセスを監視し、 &lt;code&gt;:DOWN&lt;/code&gt; メッセージを待つことができます。 &lt;code&gt;:some_message&lt;/code&gt; を受け取ったときにチャネルを閉じる &lt;code&gt;handle_info/2&lt;/code&gt; 関数の実装を想像してください。</target>
        </trans-unit>
        <trans-unit id="53a832ff355a8bff56d545715860a666b9283a42" translate="yes" xml:space="preserve">
          <source>To authorize a socket in &lt;code&gt;join/3&lt;/code&gt;, return &lt;code&gt;{:ok, socket}&lt;/code&gt;. To refuse authorization in &lt;code&gt;join/3&lt;/code&gt;, return &lt;code&gt;{:error, reply}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;join/3&lt;/code&gt; でソケットを承認するには、 &lt;code&gt;{:ok, socket}&lt;/code&gt; 返します。 &lt;code&gt;join/3&lt;/code&gt; で認証を拒否するには、 &lt;code&gt;{:error, reply}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de3aa50e1fa13ab8540858290ff3bab5cc1ae7a1" translate="yes" xml:space="preserve">
          <source>To authorize a socket, return &lt;code&gt;{:ok, socket}&lt;/code&gt; or &lt;code&gt;{:ok, reply, socket}&lt;/code&gt;. To refuse authorization, return &lt;code&gt;{:error, reason}&lt;/code&gt;.</source>
          <target state="translated">To authorize a socket, return &lt;code&gt;{:ok, socket}&lt;/code&gt; or &lt;code&gt;{:ok, reply, socket}&lt;/code&gt; . To refuse authorization, return &lt;code&gt;{:error, reason}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68caf8123fc9000c1892d49a830e2a777c1a2f79" translate="yes" xml:space="preserve">
          <source>To avoid race conditions, all code reloads are funneled through a sequential call operation.</source>
          <target state="translated">競合状態を回避するために、すべてのコードのリロードはシーケンシャルコール操作を介してファンネルされます。</target>
        </trans-unit>
        <trans-unit id="8adf099970e8f40f42c4a78cc8072bacf109f61f" translate="yes" xml:space="preserve">
          <source>To avoid the repetition of always specifying the types, you may define an &lt;a href=&quot;ecto.schema&quot;&gt;&lt;code&gt;Ecto.Schema&lt;/code&gt;&lt;/a&gt;. In such cases, Ecto will analyze your queries and automatically cast the interpolated &quot;age&quot; when compared to the &lt;code&gt;u.age&lt;/code&gt; field, as long as the age field is defined with type &lt;code&gt;:integer&lt;/code&gt; in your schema:</source>
          <target state="translated">To avoid the repetition of always specifying the types, you may define an &lt;a href=&quot;ecto.schema&quot;&gt; &lt;code&gt;Ecto.Schema&lt;/code&gt; &lt;/a&gt;. In such cases, Ecto will analyze your queries and automatically cast the interpolated &quot;age&quot; when compared to the &lt;code&gt;u.age&lt;/code&gt; field, as long as the age field is defined with type &lt;code&gt;:integer&lt;/code&gt; in your schema:</target>
        </trans-unit>
        <trans-unit id="4da79393192b9d811f048b628589434c69cfc70f" translate="yes" xml:space="preserve">
          <source>To avoid the repetition of always specifying the types, you may define an &lt;a href=&quot;ecto.schema&quot;&gt;&lt;code&gt;Ecto.Schema&lt;/code&gt;&lt;/a&gt;. In such cases, Ecto will analyze your queries and automatically cast the interpolated &amp;ldquo;age&amp;rdquo; when compared to the &lt;code&gt;u.age&lt;/code&gt; field, as long as the age field is defined with type &lt;code&gt;:integer&lt;/code&gt; in your schema:</source>
          <target state="translated">常にタイプを指定する繰り返しを避けるために、&lt;a href=&quot;ecto.schema&quot;&gt; &lt;code&gt;Ecto.Schema&lt;/code&gt; を&lt;/a&gt;定義できます。そのような場合、Ectoはクエリを分析し、 &lt;code&gt;u.age&lt;/code&gt; フィールドと比較すると、スキーマで年齢フィールドがtype &lt;code&gt;:integer&lt;/code&gt; で定義されている限り、補間された「年齢」を自動的にキャストします。</target>
        </trans-unit>
        <trans-unit id="671a861e30e1350c320f440b81de252cf52633f6" translate="yes" xml:space="preserve">
          <source>To check if a given value is not nil use:</source>
          <target state="translated">与えられた値がnilでないかどうかをチェックするには、これを使用します。</target>
        </trans-unit>
        <trans-unit id="32b59c202fb3d6f550fc3db4a98cf2a4a434dded" translate="yes" xml:space="preserve">
          <source>To customize the JSON library, including the following in your &lt;code&gt;config/config.exs&lt;/code&gt;:</source>
          <target state="translated">To customize the JSON library, including the following in your &lt;code&gt;config/config.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bf7347e6fe2acbe195851637b64939807583f935" translate="yes" xml:space="preserve">
          <source>To deny connection, return &lt;code&gt;:error&lt;/code&gt;.</source>
          <target state="translated">接続を拒否するには、 &lt;code&gt;:error&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9c26c7d45e6051c71e7fe3c380da3a4f17f88bda" translate="yes" xml:space="preserve">
          <source>To dump the state from the current process and load into another one:</source>
          <target state="translated">現在のプロセスから状態をダンプして、別のプロセスにロードする。</target>
        </trans-unit>
        <trans-unit id="1756faaf0ba51188a497e41da02799505ffedbc4" translate="yes" xml:space="preserve">
          <source>To emulate this behaviour, this module provides the idea of recycling. The &lt;a href=&quot;#recycle/1&quot;&gt;&lt;code&gt;recycle/1&lt;/code&gt;&lt;/a&gt; function receives a connection and returns a new connection, similar to the one returned by &lt;a href=&quot;#build_conn/0&quot;&gt;&lt;code&gt;build_conn/0&lt;/code&gt;&lt;/a&gt; with all the response cookies from the previous connection defined as request headers. This is useful when testing multiple routes that require cookies or session to work.</source>
          <target state="translated">To emulate this behaviour, this module provides the idea of recycling. The &lt;a href=&quot;#recycle/1&quot;&gt; &lt;code&gt;recycle/1&lt;/code&gt; &lt;/a&gt; function receives a connection and returns a new connection, similar to the one returned by &lt;a href=&quot;#build_conn/0&quot;&gt; &lt;code&gt;build_conn/0&lt;/code&gt; &lt;/a&gt; with all the response cookies from the previous connection defined as request headers. This is useful when testing multiple routes that require cookies or session to work.</target>
        </trans-unit>
        <trans-unit id="384f423fceb68dce0e44059e7dc17f0229bd095a" translate="yes" xml:space="preserve">
          <source>To emulate this behaviour, this module provides the idea of recycling. The &lt;a href=&quot;#recycle/1&quot;&gt;&lt;code&gt;recycle/1&lt;/code&gt;&lt;/a&gt; function receives a connection and returns a new connection, similar to the one returned by &lt;a href=&quot;#conn/0&quot;&gt;&lt;code&gt;conn/0&lt;/code&gt;&lt;/a&gt; with all the response cookies from the previous connection defined as request headers. This is useful when testing multiple routes that require cookies or session to work.</source>
          <target state="translated">この動作をエミュレートするために、このモジュールはリサイクルのアイデアを提供します。&lt;a href=&quot;#recycle/1&quot;&gt; &lt;code&gt;recycle/1&lt;/code&gt; &lt;/a&gt;関数は、によって返されたものと同様の接続と戻り、新しい接続、受信&lt;a href=&quot;#conn/0&quot;&gt; &lt;code&gt;conn/0&lt;/code&gt; &lt;/a&gt;要求ヘッダーとして定義される前の接続からのすべての応答のクッキーとし。これは、Cookieまたはセッションが機能する必要がある複数のルートをテストするときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ce8e7a44c764d649b22d4767dfb19181500bc611" translate="yes" xml:space="preserve">
          <source>To encrypt, you would do:</source>
          <target state="translated">暗号化するには</target>
        </trans-unit>
        <trans-unit id="9add98f21666a54716c50850567b90f96e0b16a8" translate="yes" xml:space="preserve">
          <source>To generate a path to an image hosted in your application &quot;priv/static&quot;, with the &lt;code&gt;@conn&lt;/code&gt; endpoint, use &lt;code&gt;static_path/2&lt;/code&gt; to get a URL with cache control parameters:</source>
          <target state="translated">To generate a path to an image hosted in your application &quot;priv/static&quot;, with the &lt;code&gt;@conn&lt;/code&gt; endpoint, use &lt;code&gt;static_path/2&lt;/code&gt; to get a URL with cache control parameters:</target>
        </trans-unit>
        <trans-unit id="b31df5e294e6f54107ca6b36caf70de5a703ae9d" translate="yes" xml:space="preserve">
          <source>To generate a path to an image hosted in your application &amp;ldquo;priv/static&amp;rdquo;, use &lt;code&gt;static_path/1&lt;/code&gt; to get a URL with cache control parameters:</source>
          <target state="translated">アプリケーション「priv / static」でホストされている画像へのパスを生成するには、 &lt;code&gt;static_path/1&lt;/code&gt; を使用して、キャッシュ制御パラメーターを含むURLを取得します。</target>
        </trans-unit>
        <trans-unit id="166e05bfe8272abd2c663bb42e431b56b9c76ee6" translate="yes" xml:space="preserve">
          <source>To generate a path to an image hosted in your application &amp;ldquo;priv/static&amp;rdquo;, with the &lt;code&gt;@conn&lt;/code&gt; endpoint, use &lt;code&gt;static_path/2&lt;/code&gt; to get a URL with cache control parameters:</source>
          <target state="translated">&lt;code&gt;@conn&lt;/code&gt; エンドポイントを使用して、アプリケーション「priv / static」でホストされている画像へのパスを生成するには、 &lt;code&gt;static_path/2&lt;/code&gt; を使用して、キャッシュ制御パラメーターを持つURLを取得します。</target>
        </trans-unit>
        <trans-unit id="da5cf0c3b662f85cf689692d186e495d82685f37" translate="yes" xml:space="preserve">
          <source>To get started, define the module attribute &lt;code&gt;@endpoint&lt;/code&gt; in your test case pointing to your application endpoint.</source>
          <target state="translated">開始するには、アプリケーションエンドポイントを指すテストケースでモジュール属性 &lt;code&gt;@endpoint&lt;/code&gt; を定義します。</target>
        </trans-unit>
        <trans-unit id="0f00e2408e6e8f684d6ca6cbd6ebed088bfa8147" translate="yes" xml:space="preserve">
          <source>To get started, see our &lt;a href=&quot;phoenix/overview&quot;&gt;overview guides&lt;/a&gt;.</source>
          <target state="translated">To get started, see our &lt;a href=&quot;phoenix/overview&quot;&gt;overview guides&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2c017a576254a552f3b45b37a156813727bf60fc" translate="yes" xml:space="preserve">
          <source>To have coalesce/2 available, just import the module that defines it.</source>
          <target state="translated">coalesce/2を利用できるようにするには、それを定義しているモジュールをインポートするだけです。</target>
        </trans-unit>
        <trans-unit id="e75ef0e9c4fd7b13190431887d04db3dc76e0ef4" translate="yes" xml:space="preserve">
          <source>To hide a fields value from the inspect protocol of &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Changeset&lt;/code&gt;&lt;/a&gt;, mark the field as &lt;code&gt;redact: true&lt;/code&gt; in the schema, and it will display with the value &lt;code&gt;**redacted**&lt;/code&gt;.</source>
          <target state="translated">To hide a fields value from the inspect protocol of &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Ecto.Changeset&lt;/code&gt; &lt;/a&gt;, mark the field as &lt;code&gt;redact: true&lt;/code&gt; in the schema, and it will display with the value &lt;code&gt;**redacted**&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07ecc754901c9b7b1612b2347516e5e86c89fd01" translate="yes" xml:space="preserve">
          <source>To load data from non-database sources, use &lt;a href=&quot;ecto#embedded_load/3&quot;&gt;&lt;code&gt;Ecto.embedded_load/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To load data from non-database sources, use &lt;a href=&quot;ecto#embedded_load/3&quot;&gt; &lt;code&gt;Ecto.embedded_load/3&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b9c5bfde6fe357ce410561f8996b3ca30aa626e4" translate="yes" xml:space="preserve">
          <source>To log the status of requests being sent:</source>
          <target state="translated">送信されたリクエストのステータスをログに記録します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
