<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="julia">
    <body>
      <group id="julia">
        <trans-unit id="21b2be4216216eef63fc5bb828bd7f58c8b5fe91" translate="yes" xml:space="preserve">
          <source>Only values, not variables, have types &amp;ndash; variables are simply names bound to values.</source>
          <target state="translated">変数ではなく値だけが型を持っています。変数は単に値にバインドされた名前です。</target>
        </trans-unit>
        <trans-unit id="d97553895fe582daa8b11a4132b4c59d7d7a6098" translate="yes" xml:space="preserve">
          <source>Oops. Adding a &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; operator to Matlab wouldn't help, because saturation that occurs when adding &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;2n&lt;/code&gt; has already destroyed the information necessary to compute the correct midpoint.</source>
          <target state="translated">おっとっと。 &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 演算子をMatlabに追加しても効果はありません &lt;code&gt;n&lt;/code&gt; と &lt;code&gt;2n&lt;/code&gt; を追加するときに発生する飽和により、正しい中点を計算するために必要な情報がすでに破壊されているためです。</target>
        </trans-unit>
        <trans-unit id="406e4f0a56a5716867bbbdaa429f12887df5a44e" translate="yes" xml:space="preserve">
          <source>Open Book</source>
          <target state="translated">オープンブック</target>
        </trans-unit>
        <trans-unit id="febd72d5a0f70743184299e93e82b1271a88bc68" translate="yes" xml:space="preserve">
          <source>Open Box</source>
          <target state="translated">オープンボックス</target>
        </trans-unit>
        <trans-unit id="c34b416e0aabc7a83bd814267dec2bceb7820832" translate="yes" xml:space="preserve">
          <source>Open File Folder</source>
          <target state="translated">ファイルフォルダを開く</target>
        </trans-unit>
        <trans-unit id="570f6f57d565bf8540f0881deac6b1e5aaab0640" translate="yes" xml:space="preserve">
          <source>Open Hands Sign</source>
          <target state="translated">オープンハンズサイン</target>
        </trans-unit>
        <trans-unit id="5468961e7240ee7f0d33502664aa34aa45966978" translate="yes" xml:space="preserve">
          <source>Open Lock</source>
          <target state="translated">オープンロック</target>
        </trans-unit>
        <trans-unit id="d56fae21a8b4c42f3ddbf993f9f6189849fb4662" translate="yes" xml:space="preserve">
          <source>Open Mailbox With Lowered Flag</source>
          <target state="translated">下げられたフラグを持つオープンメールボックス</target>
        </trans-unit>
        <trans-unit id="4cd8dfeea777f97bde748d6c4492714eb41361d7" translate="yes" xml:space="preserve">
          <source>Open Mailbox With Raised Flag</source>
          <target state="translated">旗を掲げたオープンメールボックス</target>
        </trans-unit>
        <trans-unit id="c5437122a10ed7699fba87aa70335b78d772e41f" translate="yes" xml:space="preserve">
          <source>Open a TCP socket using libuv. If &lt;code&gt;delay&lt;/code&gt; is true, libuv delays creation of the socket's file descriptor till the first &lt;a href=&quot;#Base.bind&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; call. &lt;code&gt;TCPSocket&lt;/code&gt; has various fields to denote the state of the socket as well as its send/receive buffers.</source>
          <target state="translated">libuvを使用してTCPソケットを開きます。場合は &lt;code&gt;delay&lt;/code&gt; 真である、libuvは最初までソケットのファイルディスクリプタの作成を遅延&lt;a href=&quot;#Base.bind&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;呼び出し。 &lt;code&gt;TCPSocket&lt;/code&gt; には、ソケットの状態とその送信/受信バッファを示すさまざまなフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="08c669ce9e8c7f026f83710316844506366a7e81" translate="yes" xml:space="preserve">
          <source>Open a UDP socket using libuv. &lt;code&gt;UDPSocket&lt;/code&gt; has various fields to denote the state of the socket.</source>
          <target state="translated">libuvを使用してUDPソケットを開きます。 &lt;code&gt;UDPSocket&lt;/code&gt; には、ソケットの状態を示すさまざまなフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="52227891e75707f6a9cd180dec1ac02b43da23b0" translate="yes" xml:space="preserve">
          <source>Open a file and deserialize its contents.</source>
          <target state="translated">ファイルを開き、その内容をデシリアライズします。</target>
        </trans-unit>
        <trans-unit id="d8d0d276fcf9e878e3601e4f3ec11f282a81eeff" translate="yes" xml:space="preserve">
          <source>Open a file and read its contents. &lt;code&gt;args&lt;/code&gt; is passed to &lt;code&gt;read&lt;/code&gt;: this is equivalent to &lt;code&gt;open(io-&amp;gt;read(io, args...), filename)&lt;/code&gt;.</source>
          <target state="translated">ファイルを開き、その内容を読み取ります。 &lt;code&gt;args&lt;/code&gt; は &lt;code&gt;read&lt;/code&gt; に渡されます。これは &lt;code&gt;open(io-&amp;gt;read(io, args...), filename)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="253d17f9d0742c44928428f7a4404eb72b5d7aa3" translate="yes" xml:space="preserve">
          <source>Open a file and serialize the given value to it.</source>
          <target state="translated">ファイルを開き、与えられた値をシリアライズします。</target>
        </trans-unit>
        <trans-unit id="47c11e34672f0f08478d57e985476572168f78bc" translate="yes" xml:space="preserve">
          <source>Open a file in a mode specified by five boolean keyword arguments:</source>
          <target state="translated">5つのブーリアンキーワード引数で指定されたモードでファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="b60069cfc2b0cba6a24e60f4b0e11798b23031dc" translate="yes" xml:space="preserve">
          <source>Open a git repository at &lt;code&gt;path&lt;/code&gt; with extended controls (for instance, if the current user must be a member of a special access group to read &lt;code&gt;path&lt;/code&gt;).</source>
          <target state="translated">拡張コントロールのある &lt;code&gt;path&lt;/code&gt; でgitリポジトリを開きます（たとえば、現在のユーザーが &lt;code&gt;path&lt;/code&gt; を読み取るために特別なアクセスグループのメンバーである必要がある場合）。</target>
        </trans-unit>
        <trans-unit id="c21ae27cc36b37896e9299f5470a30ce05318357" translate="yes" xml:space="preserve">
          <source>Open a git repository at &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; gitリポジトリを開きます。</target>
        </trans-unit>
        <trans-unit id="a6bfd40f922aa7ca03128208dcd4d40013760ce0" translate="yes" xml:space="preserve">
          <source>Open a new git repository at &lt;code&gt;path&lt;/code&gt;. If &lt;code&gt;bare&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the working tree will be created in &lt;code&gt;path/.git&lt;/code&gt;. If &lt;code&gt;bare&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, no working directory will be created.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 新しいgitリポジトリを開きます。場合は &lt;code&gt;bare&lt;/code&gt; ある &lt;code&gt;false&lt;/code&gt; 、作業ツリーは内に作成されます &lt;code&gt;path/.git&lt;/code&gt; 。場合は &lt;code&gt;bare&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、何の作業ディレクトリが作成されません。</target>
        </trans-unit>
        <trans-unit id="6e32b68788e10f5efb73ae1c554923718ef6941a" translate="yes" xml:space="preserve">
          <source>Opening a file, doing something to its contents, and closing it again is a very common pattern. To make this easier, there exists another invocation of &lt;a href=&quot;../../base/io-network/index#Base.open&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; which takes a function as its first argument and filename as its second, opens the file, calls the function with the file as an argument, and then closes it again. For example, given a function:</source>
          <target state="translated">ファイルを開いたり、その内容に何かをしたり、もう一度閉じたりすることは、非常に一般的なパターンです。これを容易にするために、最初の引数として関数を、2番目の引数としてファイル名を取り、ファイルを開き、引数としてファイルを使用して関数を呼び出し、再度閉じる&lt;a href=&quot;../../base/io-network/index#Base.open&quot;&gt; &lt;code&gt;open&lt;/code&gt; の&lt;/a&gt;別の呼び出しが存在します。たとえば、次の関数があるとします。</target>
        </trans-unit>
        <trans-unit id="69c9721ab40980ac2c3f7fd14c50821efba985b5" translate="yes" xml:space="preserve">
          <source>Operating system word size (&lt;a href=&quot;../../base/numbers/index#Core.Int32&quot;&gt;&lt;code&gt;Int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt;) as well as path separator differences (&lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt;) will also affect the reproducibility of some doctests.</source>
          <target state="translated">オペレーティングシステムのワードサイズ（&lt;a href=&quot;../../base/numbers/index#Core.Int32&quot;&gt; &lt;code&gt;Int32&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; &lt;/a&gt;）およびパス区切り文字の違い（ &lt;code&gt;/&lt;/code&gt; または &lt;code&gt;\&lt;/code&gt; ）も、一部のdoctestの再現性に影響します。</target>
        </trans-unit>
        <trans-unit id="8d87b27bd5aedd5e01ab52666b185599e013766f" translate="yes" xml:space="preserve">
          <source>Operations on Types</source>
          <target state="translated">型の操作</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="53d6250055dd8231245476710d174685174b7d89" translate="yes" xml:space="preserve">
          <source>Operator Precedence and Associativity</source>
          <target state="translated">オペレータの優先順位と連想性</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="93b63dff42dcd53d0f12d4293741e66cb2b84321" translate="yes" xml:space="preserve">
          <source>Operators Are Functions</source>
          <target state="translated">オペレータは機能</target>
        </trans-unit>
        <trans-unit id="283f15e3371d872597560981f14b9a2f5e0a420b" translate="yes" xml:space="preserve">
          <source>Operators With Special Names</source>
          <target state="translated">特殊な名前のオペレータ</target>
        </trans-unit>
        <trans-unit id="f019a8b6a52539e15849e341f41e00db685f57e9" translate="yes" xml:space="preserve">
          <source>Operators like &lt;code&gt;+&lt;/code&gt; are also valid identifiers, but are parsed specially. In some contexts, operators can be used just like variables; for example &lt;code&gt;(+)&lt;/code&gt; refers to the addition function, and &lt;code&gt;(+) = f&lt;/code&gt; will reassign it. Most of the Unicode infix operators (in category Sm), such as &lt;code&gt;&amp;oplus;&lt;/code&gt;, are parsed as infix operators and are available for user-defined methods (e.g. you can use &lt;code&gt;const &amp;otimes; = kron&lt;/code&gt; to define &lt;code&gt;&amp;otimes;&lt;/code&gt; as an infix Kronecker product). Operators can also be suffixed with modifying marks, primes, and sub/superscripts, e.g. &lt;code&gt;+̂ₐ&amp;Prime;&lt;/code&gt; is parsed as an infix operator with the same precedence as &lt;code&gt;+&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; のような演算子も有効な識別子ですが、特別に解析されます。一部のコンテキストでは、演算子は変数と同じように使用できます。たとえば、 &lt;code&gt;(+)&lt;/code&gt; は加算関数を指し、 &lt;code&gt;(+) = f&lt;/code&gt; はそれを再割り当てします。以下のような、（カテゴリのSmで）Unicodeの中置演算子のほとんど &lt;code&gt;&amp;oplus;&lt;/code&gt; は、中置演算子として解析され、ユーザー定義のメソッドのために利用できます（たとえば、あなたが使用できる &lt;code&gt;const &amp;otimes; = kron&lt;/code&gt; 定義するために &lt;code&gt;&amp;otimes;&lt;/code&gt; 中置クロネッカー積として）。演算子には、修飾記号、素数、上付き/下付き文字を付けることもできます。たとえば、 &lt;code&gt;+̂ₐ&amp;Prime;&lt;/code&gt; は &lt;code&gt;+&lt;/code&gt; と同じ優先順位を持つ中置演算子として解析されます。</target>
        </trans-unit>
        <trans-unit id="977a00f3fb0022f9ead49744bbe4afa06cde1201" translate="yes" xml:space="preserve">
          <source>Ophiuchus</source>
          <target state="translated">Ophiuchus</target>
        </trans-unit>
        <trans-unit id="d2c649443c00279b2ab6db1f4eb3df011a9c205e" translate="yes" xml:space="preserve">
          <source>Optical Disc</source>
          <target state="translated">光ディスク</target>
        </trans-unit>
        <trans-unit id="bbe45d1200c2548054cd7105d981e5416cd548c2" translate="yes" xml:space="preserve">
          <source>Optimize network I/O during parallel execution</source>
          <target state="translated">並列実行時のネットワークI/Oの最適化</target>
        </trans-unit>
        <trans-unit id="7ee57de488e50e002c8d91e9ed122222d3621625" translate="yes" xml:space="preserve">
          <source>Optimizing generation with cached computation between calls</source>
          <target state="translated">呼び出し間のキャッシュ計算による生成の最適化</target>
        </trans-unit>
        <trans-unit id="28b9b9628dcf8cbfb41ac0e1a118c33a59e1c755" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;key&amp;ndash;value pairs&lt;/em&gt; allow arbitrary data to be attached to each event. Some keys have conventional meaning that can affect the way an event is interpreted (see &lt;a href=&quot;#Base.CoreLogging.@logmsg&quot;&gt;&lt;code&gt;@logmsg&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">オプションの&lt;em&gt;キーと値のペア&lt;/em&gt;により、任意のデータを各イベントに添付できます。一部のキーには、イベントの解釈方法に影響を与える可能性のある従来の意味があります（&lt;a href=&quot;#Base.CoreLogging.@logmsg&quot;&gt; &lt;code&gt;@logmsg&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d691ad463ac25297b3313f781ce7492928f99d06" translate="yes" xml:space="preserve">
          <source>Optional Arguments</source>
          <target state="translated">オプションの引数</target>
        </trans-unit>
        <trans-unit id="c156ad5dd399595345f3f0b1a62545c1d9461fea" translate="yes" xml:space="preserve">
          <source>Optional arguments are actually just a convenient syntax for writing multiple method definitions with different numbers of arguments (see &lt;a href=&quot;../methods/index#Note-on-Optional-and-keyword-Arguments-1&quot;&gt;Note on Optional and keyword Arguments&lt;/a&gt;). This can be checked for our &lt;code&gt;Date&lt;/code&gt; function example by calling &lt;code&gt;methods&lt;/code&gt; function.</source>
          <target state="translated">オプションの引数は、実際には、引数の数が異なる複数のメソッド定義を記述するための便利な構文にすぎません（「&lt;a href=&quot;../methods/index#Note-on-Optional-and-keyword-Arguments-1&quot;&gt;オプションとキーワードの引数に関する注意」を&lt;/a&gt;参照）。これは、 &lt;code&gt;methods&lt;/code&gt; 関数を呼び出すことで、 &lt;code&gt;Date&lt;/code&gt; 関数の例を確認できます。</target>
        </trans-unit>
        <trans-unit id="f672e593f5c2debc9f124a5145222ec3e7c5de62" translate="yes" xml:space="preserve">
          <source>Optionally, &lt;code&gt;AllowedType&lt;/code&gt; relaxes the test, by making it pass when either the type of &lt;code&gt;f(x)&lt;/code&gt; matches the inferred type modulo &lt;code&gt;AllowedType&lt;/code&gt;, or when the return type is a subtype of &lt;code&gt;AllowedType&lt;/code&gt;. This is useful when testing type stability of functions returning a small union such as &lt;code&gt;Union{Nothing, T}&lt;/code&gt; or &lt;code&gt;Union{Missing, T}&lt;/code&gt;.</source>
          <target state="translated">必要に応じて、 &lt;code&gt;AllowedType&lt;/code&gt; は、 &lt;code&gt;f(x)&lt;/code&gt; の型が推論された型 &lt;code&gt;AllowedType&lt;/code&gt; と一致する場合、または戻り値の型が &lt;code&gt;AllowedType&lt;/code&gt; のサブタイプである場合に合格することにより、テストを緩和します。これは、 &lt;code&gt;Union{Nothing, T}&lt;/code&gt; や &lt;code&gt;Union{Missing, T}&lt;/code&gt; などの小さな共用体を返す関数の型安定性をテストするときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="3ad55710ad0da179a2e07ff4ddd05386729e4605" translate="yes" xml:space="preserve">
          <source>Optionally, an &lt;a href=&quot;../../base/io-network/index#Base.IOStream&quot;&gt;&lt;code&gt;IOStream&lt;/code&gt;&lt;/a&gt; may be passed as the first argument to redirect output.</source>
          <target state="translated">オプションで、出力をリダイレクトする最初の引数として&lt;a href=&quot;../../base/io-network/index#Base.IOStream&quot;&gt; &lt;code&gt;IOStream&lt;/code&gt; を渡す&lt;/a&gt;ことができます。</target>
        </trans-unit>
        <trans-unit id="25e925eadfd24d6dcadbc98af889be63a7072a20" translate="yes" xml:space="preserve">
          <source>Optionally, with this form you can also specialize on the type of &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">オプションで、このフォームを使用して &lt;code&gt;dest&lt;/code&gt; のタイプに特化することもできます。</target>
        </trans-unit>
        <trans-unit id="df7538e747f40841380a56713e7d2787b0188307" translate="yes" xml:space="preserve">
          <source>Optionally, you can specify an offset (in bytes) if, for example, you want to skip over a header in the file. The default value for the offset is the current stream position for an &lt;code&gt;IOStream&lt;/code&gt;.</source>
          <target state="translated">オプションで、たとえば、ファイルのヘッダーをスキップする場合は、オフセット（バイト単位）を指定できます。オフセットのデフォルト値は、 &lt;code&gt;IOStream&lt;/code&gt; の現在のストリーム位置です。</target>
        </trans-unit>
        <trans-unit id="605701651cfa6ef7ed858d2bd4686cc27b775fbc" translate="yes" xml:space="preserve">
          <source>Optionally-generated functions</source>
          <target state="translated">オプションで生成された機能</target>
        </trans-unit>
        <trans-unit id="d7a89a6a7036867a56e048571964e7377e17b84b" translate="yes" xml:space="preserve">
          <source>Options for connecting through a proxy.</source>
          <target state="translated">プロキシ経由で接続するためのオプション。</target>
        </trans-unit>
        <trans-unit id="9956408533f9b356f2027c2af19ba734ff7eeffb" translate="yes" xml:space="preserve">
          <source>Options for controlling the display of profile results</source>
          <target state="translated">プロファイル結果の表示を制御するためのオプション</target>
        </trans-unit>
        <trans-unit id="5570f96fecf594a439501b253a2a052232a9fcb8" translate="yes" xml:space="preserve">
          <source>Options to control how &lt;code&gt;git_status_foreach_ext()&lt;/code&gt; will issue callbacks. Matches the &lt;a href=&quot;https://libgit2.org/libgit2/#HEAD/type/git_status_opt_t&quot;&gt;&lt;code&gt;git_status_opt_t&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">&lt;code&gt;git_status_foreach_ext()&lt;/code&gt; がコールバックを発行する方法を制御するオプション。&lt;a href=&quot;https://libgit2.org/libgit2/#HEAD/type/git_status_opt_t&quot;&gt; &lt;code&gt;git_status_opt_t&lt;/code&gt; &lt;/a&gt;構造体と一致します。</target>
        </trans-unit>
        <trans-unit id="09b7d446a14ffb508604e0dc10c5b7aa125df09d" translate="yes" xml:space="preserve">
          <source>Or for use with Julia's metaprogramming functionality:</source>
          <target state="translated">あるいはジュリアのメタプログラミング機能を使うために。</target>
        </trans-unit>
        <trans-unit id="b5d347e4a07542d29e6ad6bac37e10d945034f91" translate="yes" xml:space="preserve">
          <source>Or in reverse order by a transformation:</source>
          <target state="translated">または変換で逆順に。</target>
        </trans-unit>
        <trans-unit id="d6f1bff2e8ff8f63044d056dab4a7ec43a5bafb9" translate="yes" xml:space="preserve">
          <source>Or similary with with &lt;code&gt;perf&lt;/code&gt; :</source>
          <target state="translated">または &lt;code&gt;perf&lt;/code&gt; と同様に：</target>
        </trans-unit>
        <trans-unit id="643c06d525fb92f1d6423f6e6b9cceb50ab627c9" translate="yes" xml:space="preserve">
          <source>Or the short form notation:</source>
          <target state="translated">あるいは短縮形の表記。</target>
        </trans-unit>
        <trans-unit id="e325f042a4fdea4bb2bf26bcb172b85f8d8b398f" translate="yes" xml:space="preserve">
          <source>Or you could put that code into a script and run it:</source>
          <target state="translated">あるいは、そのコードをスクリプトに入れて実行することもできます。</target>
        </trans-unit>
        <trans-unit id="20dbfbec42bb9c9ae019f4de0fc6d751181ab4ba" translate="yes" xml:space="preserve">
          <source>Orange Book</source>
          <target state="translated">オレンジブック</target>
        </trans-unit>
        <trans-unit id="1f4f65818576f11a271c283501f9c9777a309c75" translate="yes" xml:space="preserve">
          <source>Order-Related Functions</source>
          <target state="translated">順番関連関数</target>
        </trans-unit>
        <trans-unit id="08958be0b6b4d59402e8c3539af8a1f6c4626498" translate="yes" xml:space="preserve">
          <source>Ordered lists are written by replacing the &quot;bullet&quot; character, either &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, or &lt;code&gt;-&lt;/code&gt;, with a positive integer followed by either &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;)&lt;/code&gt;.</source>
          <target state="translated">順序付きリストは、「箇条書き」文字（ &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、または &lt;code&gt;-&lt;/code&gt; ）を正の整数の後にのいずれかを続けたものに置き換えることによって記述されます &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ebecd2371b5b94b4b632a7345f2ed4969d932ab" translate="yes" xml:space="preserve">
          <source>OrdinalRange</source>
          <target state="translated">OrdinalRange</target>
        </trans-unit>
        <trans-unit id="110f685c533d15161bdb96f31c09d8e08a6ec5f5" translate="yes" xml:space="preserve">
          <source>Original Of</source>
          <target state="translated">オリジナル</target>
        </trans-unit>
        <trans-unit id="8a2c422f6e969a4ab0e509e76d2af5e57bbac8a6" translate="yes" xml:space="preserve">
          <source>Orthogonalize your design</source>
          <target state="translated">デザインを直交させる</target>
        </trans-unit>
        <trans-unit id="354c9b5e6f7e399ccafd2041e1f89b4ea9b2b78c" translate="yes" xml:space="preserve">
          <source>Other Test Macros</source>
          <target state="translated">その他のテストマクロ</target>
        </trans-unit>
        <trans-unit id="7f16299e775b6ed02c52fa3e91a6bae26c711f17" translate="yes" xml:space="preserve">
          <source>Other constructors:</source>
          <target state="translated">その他のコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="de3bc1f63e468cd0b128dfc49cf966142493ea71" translate="yes" xml:space="preserve">
          <source>Other functions with optimized methods</source>
          <target state="translated">最適化されたメソッドを持つ他の機能</target>
        </trans-unit>
        <trans-unit id="73004fc90947ff97722d45638ee7f61f1d20cbf1" translate="yes" xml:space="preserve">
          <source>Other known potential failure scenarios include:</source>
          <target state="translated">他にも、以下のような潜在的な故障シナリオが知られています。</target>
        </trans-unit>
        <trans-unit id="8180f53ba099ee9c2b3f9518b6c8ae95ee30562b" translate="yes" xml:space="preserve">
          <source>Other types of clusters can be supported by writing your own custom &lt;code&gt;ClusterManager&lt;/code&gt;, as described below in the &lt;a href=&quot;#ClusterManagers-1&quot;&gt;ClusterManagers&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;#ClusterManagers-1&quot;&gt;ClusterManagers&lt;/a&gt;セクションで後述するように、独自のカスタム &lt;code&gt;ClusterManager&lt;/code&gt; を作成することで、他のタイプのクラスターをサポートできます。</target>
        </trans-unit>
        <trans-unit id="652ffacf8747e46f58045bb41bbc2a406d21640f" translate="yes" xml:space="preserve">
          <source>Other types, of course, are not subtypes of it:</source>
          <target state="translated">他のタイプはもちろん、それのサブタイプではありません。</target>
        </trans-unit>
        <trans-unit id="68e4eead30d10cf40ff1bbd6f5b1c0db347b9736" translate="yes" xml:space="preserve">
          <source>Otherwise (if &lt;code&gt;Project.toml&lt;/code&gt; does not exist), then &lt;code&gt;uuid&lt;/code&gt; is the all-zero &lt;a href=&quot;https://en.wikipedia.org/wiki/Universally_unique_identifier#Nil_UUID&quot;&gt;nil UUID&lt;/a&gt;.</source>
          <target state="translated">それ以外の場合（ &lt;code&gt;Project.toml&lt;/code&gt; が存在しない場合）、 &lt;code&gt;uuid&lt;/code&gt; はすべてゼロの&lt;a href=&quot;https://en.wikipedia.org/wiki/Universally_unique_identifier#Nil_UUID&quot;&gt;nil UUID&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5236b13473338eac52a3d83cc71dc415eb79f9d1" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;uuid&lt;/code&gt; is mapped to &lt;code&gt;src/X.jl&lt;/code&gt; relative to the directory containing the project file.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;uuid&lt;/code&gt; はプロジェクトファイルを含むディレクトリを基準にして &lt;code&gt;src/X.jl&lt;/code&gt; にマップされます。</target>
        </trans-unit>
        <trans-unit id="ef055ec8e654e344c0f3b5dc5b8cfd61a75bef42" translate="yes" xml:space="preserve">
          <source>Outbox Tray</source>
          <target state="translated">アウトボックストレイ</target>
        </trans-unit>
        <trans-unit id="3ff2217f13f16e3a2f3e2f9350afe89aa44e92b7" translate="yes" xml:space="preserve">
          <source>Outer Constructor Methods</source>
          <target state="translated">外部コンストラクタメソッド</target>
        </trans-unit>
        <trans-unit id="18a9dae0112849893d83b6a46eb4e542574dae17" translate="yes" xml:space="preserve">
          <source>Outer-only constructors</source>
          <target state="translated">外部専用のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="fa0f32ceeb84c6000efdb1a0e7b98d2724e130d8" translate="yes" xml:space="preserve">
          <source>Output-type computation</source>
          <target state="translated">出力型計算</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="42f22d8be226368981d2c3e1a734e732105338ca" translate="yes" xml:space="preserve">
          <source>Outside of Julia parallelism there are plenty of external packages that should be mentioned. For example &lt;a href=&quot;https://github.com/JuliaParallel/MPI.jl&quot;&gt;MPI.jl&lt;/a&gt; is a Julia wrapper for the &lt;code&gt;MPI&lt;/code&gt; protocol, or &lt;a href=&quot;https://github.com/JuliaParallel/Distributedarrays.jl&quot;&gt;DistributedArrays.jl&lt;/a&gt;, as presented in &lt;a href=&quot;../../stdlib/sharedarrays/index#Shared-Arrays-1&quot;&gt;Shared Arrays&lt;/a&gt;. A mention must be made of Julia's GPU programming ecosystem, which includes:</source>
          <target state="translated">Juliaの並列処理以外にも、言及すべき外部パッケージがたくさんあります。例えば&lt;a href=&quot;https://github.com/JuliaParallel/MPI.jl&quot;&gt;MPI.jlは&lt;/a&gt;用ジュリアラッパーである &lt;code&gt;MPI&lt;/code&gt; のプロトコル、または&lt;a href=&quot;https://github.com/JuliaParallel/Distributedarrays.jl&quot;&gt;DistributedArrays.jl&lt;/a&gt;に提示されるように、&lt;a href=&quot;../../stdlib/sharedarrays/index#Shared-Arrays-1&quot;&gt;共有配列&lt;/a&gt;。JuliaのGPUプログラミングエコシステムについて言及する必要があります。</target>
        </trans-unit>
        <trans-unit id="5c8e44b3b3137f5eb2b2cc4ad0e598743617a203" translate="yes" xml:space="preserve">
          <source>Overall, we can tentatively conclude that generating the random numbers is approximately twice as expensive as finding the maximum element. We could increase our confidence in this result by collecting more samples:</source>
          <target state="translated">全体的に、乱数の生成は最大要素を見つけるのに比べて約2倍のコストがかかると暫定的に結論付けることができます。より多くのサンプルを収集することで、この結果の信頼性を高めることができます。</target>
        </trans-unit>
        <trans-unit id="91ff3d30af6aecf4f3bfff401ee0c4026a8aeafc" translate="yes" xml:space="preserve">
          <source>Overflow behavior</source>
          <target state="translated">オーバーフロー動作</target>
        </trans-unit>
        <trans-unit id="01ccdace035449cce233abc0eedf914e7a065c5c" translate="yes" xml:space="preserve">
          <source>Overloading &lt;a href=&quot;#Base.show-Tuple%7BAny%7D&quot;&gt;&lt;code&gt;show&lt;/code&gt;&lt;/a&gt; allows one to indicate arbitrary multimedia representations (keyed by standard MIME types) of user-defined types.</source>
          <target state="translated">&lt;a href=&quot;#Base.show-Tuple%7BAny%7D&quot;&gt; &lt;code&gt;show&lt;/code&gt; の&lt;/a&gt;オーバーロードにより、ユーザー定義タイプの任意のマルチメディア表現（標準MIMEタイプでキー設定）を示すことができます。</target>
        </trans-unit>
        <trans-unit id="e5b99107b2fa4a84df9853ee7cbb7e7a1d4667c8" translate="yes" xml:space="preserve">
          <source>Override the computation of the lazy broadcast's axes</source>
          <target state="translated">遅延ブロードキャストの軸の計算をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="b89ec3e78ed771bb36cbb59535a358f64b528673" translate="yes" xml:space="preserve">
          <source>Override the default lazy behavior within a fused expression</source>
          <target state="translated">フューズド式内のデフォルトの遅延動作をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="638a381102a06260fffa3157ac5f96a97404b4e1" translate="yes" xml:space="preserve">
          <source>Overrides the global variable &lt;a href=&quot;../../base/constants/index#Base.Sys.CPU_THREADS&quot;&gt;&lt;code&gt;Base.Sys.CPU_THREADS&lt;/code&gt;&lt;/a&gt;, the number of logical CPU cores available.</source>
          <target state="translated">グローバル変数&lt;a href=&quot;../../base/constants/index#Base.Sys.CPU_THREADS&quot;&gt; &lt;code&gt;Base.Sys.CPU_THREADS&lt;/code&gt; を&lt;/a&gt;オーバーライドします。これは、使用可能な論理CPUコアの数です。</target>
        </trans-unit>
        <trans-unit id="3f3195400edfa29b5f1b413f58e5bfb36e52e994" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;B&lt;/code&gt; with the solution to &lt;code&gt;A*X = alpha*B&lt;/code&gt; or one of the other three variants determined by &lt;a href=&quot;#stdlib-blas-side-1&quot;&gt;&lt;code&gt;side&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt;. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used. &lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt;&lt;code&gt;dA&lt;/code&gt;&lt;/a&gt; determines if the diagonal values are read or are assumed to be all ones. Returns the updated &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; を &lt;code&gt;A*X = alpha*B&lt;/code&gt; または&lt;a href=&quot;#stdlib-blas-side-1&quot;&gt; &lt;code&gt;side&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;によって決定される他の3つのバリアントのいずれかの解で上書きします。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。&lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt; &lt;code&gt;dA&lt;/code&gt; &lt;/a&gt;は、対角値が読み取られるか、すべて1であると見なされるかを決定します。更新された &lt;code&gt;B&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a6a6876b77eece288d4496fffa46aafd4b4fe6b9" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;X&lt;/code&gt; with &lt;code&gt;a*X&lt;/code&gt; for the first &lt;code&gt;n&lt;/code&gt; elements of array &lt;code&gt;X&lt;/code&gt; with stride &lt;code&gt;incx&lt;/code&gt;. Returns &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">ストライド &lt;code&gt;incx&lt;/code&gt; を使用して、配列 &lt;code&gt;X&lt;/code&gt; の最初の &lt;code&gt;n&lt;/code&gt; 要素の &lt;code&gt;X&lt;/code&gt; を &lt;code&gt;a*X&lt;/code&gt; で上書きします。 &lt;code&gt;X&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7c2359db5fceac9e0113b5b140f82b359eeca723" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;Y&lt;/code&gt; with &lt;code&gt;a*X + Y&lt;/code&gt;, where &lt;code&gt;a&lt;/code&gt; is a scalar. Return &lt;code&gt;Y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Y&lt;/code&gt; を &lt;code&gt;a*X + Y&lt;/code&gt; で上書きします。ここで &lt;code&gt;a&lt;/code&gt; はスカラーです。 &lt;code&gt;Y&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ffedffba82c5b0efac6910b2263daebb23e31d8b" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;b&lt;/code&gt; with the solution to &lt;code&gt;A*x = b&lt;/code&gt; or one of the other two variants determined by &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt;&lt;code&gt;dA&lt;/code&gt;&lt;/a&gt; determines if the diagonal values are read or are assumed to be all ones. Return the updated &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A*x = b&lt;/code&gt; の解、または&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;によって決定される他の2つのバリアントの1つで &lt;code&gt;b&lt;/code&gt; を上書きします。&lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt; &lt;code&gt;dA&lt;/code&gt; &lt;/a&gt;は、対角値が読み取られるか、すべて1であると見なされるかを決定します。更新された &lt;code&gt;b&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="25aba4b278b4fe77c4276c7487b91f75f59849aa" translate="yes" xml:space="preserve">
          <source>Overwrites &lt;code&gt;B&lt;/code&gt; with the solution &lt;code&gt;X&lt;/code&gt; and returns it.</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; を解 &lt;code&gt;X&lt;/code&gt; で上書きして返します。</target>
        </trans-unit>
        <trans-unit id="2e792f8dd9df05c062b1d194b39959185218ece9" translate="yes" xml:space="preserve">
          <source>Ox</source>
          <target state="translated">Ox</target>
        </trans-unit>
        <trans-unit id="1b43ca9254c9d4b4f1b4ba3af569a405d869de3a" translate="yes" xml:space="preserve">
          <source>PROGRAM_FILE</source>
          <target state="translated">PROGRAM_FILE</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="10bff7a089ddc4ddc1389cd86aaa33095236f47b" translate="yes" xml:space="preserve">
          <source>Package directories</source>
          <target state="translated">パッケージディレクトリ</target>
        </trans-unit>
        <trans-unit id="31f8ed72a8c4c1a2a46e9515f77db54591d9dcf8" translate="yes" xml:space="preserve">
          <source>Package directories provide &lt;strong&gt;convenience&lt;/strong&gt; when a full carefully-tracked project environment is unnecessary. They are useful when you want to put a set of packages somewhere and be able to directly use them, without needing to create a project environment for them.</source>
          <target state="translated">パッケージディレクトリは、注意深く追跡された完全なプロジェクト環境が不要な場合に&lt;strong&gt;便利&lt;/strong&gt;です。一連のパッケージをどこかに配置し、それらのプロジェクト環境を作成する必要なく、それらを直接使用できるようにする場合に便利です。</target>
        </trans-unit>
        <trans-unit id="de3ea8ab9c732a3f5f48c2773c246514ee29b670" translate="yes" xml:space="preserve">
          <source>Package directories provide a simpler kind of environment without the ability to handle name collisions. In a package directory, the set of top-level packages is the set of subdirectories that &quot;look like&quot; packages. A package &lt;code&gt;X&lt;/code&gt; is exists in a package directory if the directory contains one of the following &quot;entry point&quot; files:</source>
          <target state="translated">パッケージディレクトリは、名前の衝突を処理する機能のない、より単純な種類の環境を提供します。パッケージディレクトリでは、トップレベルパッケージのセットは、パッケージのように見えるサブディレクトリのセットです。パッケージ &lt;code&gt;X&lt;/code&gt; は、ディレクトリに次の「エントリポイント」ファイルのいずれかが含まれている場合、パッケージディレクトリに存在します。</target>
        </trans-unit>
        <trans-unit id="172120b04d569b91ab8c1fb3468849f7540c5126" translate="yes" xml:space="preserve">
          <source>Packages and Modules</source>
          <target state="translated">パッケージとモジュール</target>
        </trans-unit>
        <trans-unit id="ad023c9de89ae107abcd1c19067ab453ed27e3a7" translate="yes" xml:space="preserve">
          <source>Packages can create their own &lt;code&gt;AbstractTestSet&lt;/code&gt; subtypes by implementing the &lt;code&gt;record&lt;/code&gt; and &lt;code&gt;finish&lt;/code&gt; methods. The subtype should have a one-argument constructor taking a description string, with any options passed in as keyword arguments.</source>
          <target state="translated">パッケージは、 &lt;code&gt;record&lt;/code&gt; メソッドと &lt;code&gt;finish&lt;/code&gt; メソッドを実装することで、独自の &lt;code&gt;AbstractTestSet&lt;/code&gt; サブタイプを作成できます。サブタイプには、説明文字列を引数とする1つの引数のコンストラクターが必要です。オプションは、キーワード引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="1ff8db844cdbeeb7334e2124146cb48367d49aef" translate="yes" xml:space="preserve">
          <source>Packages in non-primary environments can end up using incompatible versions of their dependencies even if their own environments are entirely compatible. This can happen when one of their dependencies is shadowed by a version in an earlier environment in the stack (either by graph or path, or both).</source>
          <target state="translated">プライマリ環境以外の環境にあるパッケージは、たとえ自分の環境が完全に互換性があったとしても、 互換性のないバージョンの依存関係を使ってしまうことがあります。これは、その依存関係の一つがスタック内の以前の環境のバージョンによって影になっている場合に起こります (グラフやパス、あるいはその両方によって)。</target>
        </trans-unit>
        <trans-unit id="7716e623b5aa3956e1c06ab3a1c01962e077179b" translate="yes" xml:space="preserve">
          <source>Packed structs and union declarations are not supported by Julia.</source>
          <target state="translated">パックされた構造体とユニオン宣言は、Juliaではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="0250845792c6e0dbb4958d399035a47d2229b870" translate="yes" xml:space="preserve">
          <source>Page Facing Up</source>
          <target state="translated">ページを上に向けて</target>
        </trans-unit>
        <trans-unit id="378b43e81cad349a6990f82c53c59233f5070a88" translate="yes" xml:space="preserve">
          <source>Page With Curl</source>
          <target state="translated">カールのあるページ</target>
        </trans-unit>
        <trans-unit id="4a3666a9eb4b3ac7eee5f12d287f5fbaebfde879" translate="yes" xml:space="preserve">
          <source>Page-down, &lt;code&gt;meta-N&lt;/code&gt;</source>
          <target state="translated">ページダウン、 &lt;code&gt;meta-N&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47b2840d6a3e0f0f764afb754ab8af38be4af164" translate="yes" xml:space="preserve">
          <source>Page-up, &lt;code&gt;meta-P&lt;/code&gt;</source>
          <target state="translated">ページアップ、 &lt;code&gt;meta-P&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="536012190d3d4515a29641daf7aab6f7a81b0895" translate="yes" xml:space="preserve">
          <source>Pager</source>
          <target state="translated">Pager</target>
        </trans-unit>
        <trans-unit id="2537f88ac2f56246c757a78fd250fe571c25bb72" translate="yes" xml:space="preserve">
          <source>Pair</source>
          <target state="translated">Pair</target>
        </trans-unit>
        <trans-unit id="ac476f539c2a04928619f7e793029a0176590d89" translate="yes" xml:space="preserve">
          <source>Palm Tree</source>
          <target state="translated">ヤシの木</target>
        </trans-unit>
        <trans-unit id="2f82183a4c998d7d209e5e0441144f5ccca6f2a3" translate="yes" xml:space="preserve">
          <source>Panda Face</source>
          <target state="translated">パンダの顔</target>
        </trans-unit>
        <trans-unit id="f504c7a2df2d8cbb81b9026112079f5096a9f13a" translate="yes" xml:space="preserve">
          <source>Paperclip</source>
          <target state="translated">Paperclip</target>
        </trans-unit>
        <trans-unit id="f0e58faeee927874f83ee6ead86a7a19399b604e" translate="yes" xml:space="preserve">
          <source>Paragraphs</source>
          <target state="translated">Paragraphs</target>
        </trans-unit>
        <trans-unit id="ee8ab3c2f9a78fdf03e9c9261add2a1b5350bca3" translate="yes" xml:space="preserve">
          <source>Parallel Computing</source>
          <target state="translated">パラレルコンピューティング</target>
        </trans-unit>
        <trans-unit id="00183d757f8dec61b4a49af19aee2ec33292fe75" translate="yes" xml:space="preserve">
          <source>Parallel Map and Loops</source>
          <target state="translated">パラレルマップとループ</target>
        </trans-unit>
        <trans-unit id="1d25412dd01d52ee9a5f0e90bf1e48adbec86c91" translate="yes" xml:space="preserve">
          <source>Parallel To</source>
          <target state="translated">パラレル</target>
        </trans-unit>
        <trans-unit id="fb7f75a523427d81e3000ff59131b5a7d5e28db6" translate="yes" xml:space="preserve">
          <source>Parallelization</source>
          <target state="translated">Parallelization</target>
        </trans-unit>
        <trans-unit id="0eceb3dd78bb787e85503a8ee44e710345860ee2" translate="yes" xml:space="preserve">
          <source>Parametric Abstract Types</source>
          <target state="translated">パラメトリック抽象型</target>
        </trans-unit>
        <trans-unit id="a888b45b5a3607b8e11147e260904d6e139d07c0" translate="yes" xml:space="preserve">
          <source>Parametric Composite Types</source>
          <target state="translated">パラメトリック複合タイプ</target>
        </trans-unit>
        <trans-unit id="430bbc47d22a943384ea0aa2db5f6fcf04c9c070" translate="yes" xml:space="preserve">
          <source>Parametric Constructors</source>
          <target state="translated">パラメトリック コンストラクタ</target>
        </trans-unit>
        <trans-unit id="9dc2285290a7a7c3374b1308adad32234303aead" translate="yes" xml:space="preserve">
          <source>Parametric Methods</source>
          <target state="translated">パラメトリック手法</target>
        </trans-unit>
        <trans-unit id="19377f53ed9a19fa8a2030b8db891d7b8d76f700" translate="yes" xml:space="preserve">
          <source>Parametric Primitive Types</source>
          <target state="translated">パラメトリックプリミティブ型</target>
        </trans-unit>
        <trans-unit id="192490d70df0f23ba4624bb8a54a061cb783f3f8" translate="yes" xml:space="preserve">
          <source>Parametric Types</source>
          <target state="translated">パラメトリックタイプ</target>
        </trans-unit>
        <trans-unit id="460704fe4b96e9e0fa2ae0a0e72f3f2fc53c9313" translate="yes" xml:space="preserve">
          <source>Parametric abstract type declarations declare a collection of abstract types, in much the same way:</source>
          <target state="translated">パラメトリック抽象型宣言は、抽象型のコレクションを宣言します。</target>
        </trans-unit>
        <trans-unit id="d9955275a4d2eb39157ea5c922cc273d03b25ffa" translate="yes" xml:space="preserve">
          <source>Parametric abstract types are invariant, much as parametric composite types are:</source>
          <target state="translated">パラメトリック抽象型は,パラメトリック複合型と同様に不変です.</target>
        </trans-unit>
        <trans-unit id="2ad6e292b383e6f5de5979b73a9ad2b6a00a8d36" translate="yes" xml:space="preserve">
          <source>Parametric methods allow the same syntax as &lt;code&gt;where&lt;/code&gt; expressions used to write types (see &lt;a href=&quot;../types/index#UnionAll-Types-1&quot;&gt;UnionAll Types&lt;/a&gt;). If there is only a single parameter, the enclosing curly braces (in &lt;code&gt;where {T}&lt;/code&gt;) can be omitted, but are often preferred for clarity. Multiple parameters can be separated with commas, e.g. &lt;code&gt;where {T, S&amp;lt;:Real}&lt;/code&gt;, or written using nested &lt;code&gt;where&lt;/code&gt;, e.g. &lt;code&gt;where S&amp;lt;:Real where T&lt;/code&gt;.</source>
          <target state="translated">パラメトリックな方法は、同じ構文を許可する &lt;code&gt;where&lt;/code&gt; （参照式が書き込みタイプに使用&lt;a href=&quot;../types/index#UnionAll-Types-1&quot;&gt;UnionAllタイプ&lt;/a&gt;）。パラメータが1つしかない場合は &lt;code&gt;where {T}&lt;/code&gt; 囲まれた中括弧は省略できますが、多くの場合、わかりやすくするために優先されます。複数のパラメータは、例えば、コンマで分離することができる &lt;code&gt;where {T, S&amp;lt;:Real}&lt;/code&gt; 、またはネストが使用して書かれ、例えば &lt;code&gt;where S&amp;lt;:Real where T&lt;/code&gt; 。 &lt;code&gt;where&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e44de50255230c7d470aa39f8aaa73c61d1fb27c" translate="yes" xml:space="preserve">
          <source>Parametric types add a few wrinkles to the constructor story. Recall from &lt;a href=&quot;../types/index#Parametric-Types-1&quot;&gt;Parametric Types&lt;/a&gt; that, by default, instances of parametric composite types can be constructed either with explicitly given type parameters or with type parameters implied by the types of the arguments given to the constructor. Here are some examples:</source>
          <target state="translated">パラメトリックタイプは、コンストラクターストーリーにいくつかのしわを追加します。&lt;a href=&quot;../types/index#Parametric-Types-1&quot;&gt;パラメトリックタイプ&lt;/a&gt;から思い出してください。デフォルトでは、パラメトリック複合タイプのインスタンスは、明示的に指定された型パラメーター、またはコンストラクターに指定された引数の型によって暗黙的に指定された型パラメーターを使用して構築できます。ここではいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="0df2573a62f64aae949bd2fa3412bc7baad2b58d" translate="yes" xml:space="preserve">
          <source>Parametrically-constrained Varargs methods</source>
          <target state="translated">パラメトリックに拘束されたVarargs法</target>
        </trans-unit>
        <trans-unit id="56d72af4f256e39f4b61a30a9fa412220a44cd84" translate="yes" xml:space="preserve">
          <source>Parse &lt;code&gt;str&lt;/code&gt; as an IP address.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; をIPアドレスとして解析します。</target>
        </trans-unit>
        <trans-unit id="6c320d23c3be387cfbc6bb473ef349420b3e2d01" translate="yes" xml:space="preserve">
          <source>Parse a date from a date string &lt;code&gt;d&lt;/code&gt; using a &lt;code&gt;DateFormat&lt;/code&gt; object &lt;code&gt;df&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; オブジェクト &lt;code&gt;df&lt;/code&gt; を使用して、日付文字列 &lt;code&gt;d&lt;/code&gt; から日付を解析します。</target>
        </trans-unit>
        <trans-unit id="e04beafbdc58102d405f6333b5ad88b275c8e625" translate="yes" xml:space="preserve">
          <source>Parse a formatted time string into a &lt;code&gt;TmStruct&lt;/code&gt; giving the seconds, minute, hour, date, etc. Supported formats are the same as those in the standard C library. On some platforms, timezones will not be parsed correctly. If the result of this function will be passed to &lt;code&gt;time&lt;/code&gt; to convert it to seconds since the epoch, the &lt;code&gt;isdst&lt;/code&gt; field should be filled in manually. Setting it to &lt;code&gt;-1&lt;/code&gt; will tell the C library to use the current system settings to determine the timezone.</source>
          <target state="translated">書式設定された時間文字列を &lt;code&gt;TmStruct&lt;/code&gt; に解析して、秒、分、時間、日付などを指定します。サポートされている形式は、標準Cライブラリの形式と同じです。一部のプラットフォームでは、タイムゾーンが正しく解析されません。この関数の結果を &lt;code&gt;time&lt;/code&gt; に渡して、エポックから秒に変換する場合は、 &lt;code&gt;isdst&lt;/code&gt; フィールドに手動で入力する必要があります。これを &lt;code&gt;-1&lt;/code&gt; に設定すると、Cライブラリは現在のシステム設定を使用してタイムゾーンを決定するようになります。</target>
        </trans-unit>
        <trans-unit id="2833cebcbeae4f7b3d0977c3d3826ceadf052afd" translate="yes" xml:space="preserve">
          <source>Parse a string as a number. For &lt;code&gt;Integer&lt;/code&gt; types, a base can be specified (the default is 10). For floating-point types, the string is parsed as a decimal floating-point number. &lt;code&gt;Complex&lt;/code&gt; types are parsed from decimal strings of the form &lt;code&gt;&quot;R&amp;plusmn;Iim&quot;&lt;/code&gt; as a &lt;code&gt;Complex(R,I)&lt;/code&gt; of the requested type; &lt;code&gt;&quot;i&quot;&lt;/code&gt; or &lt;code&gt;&quot;j&quot;&lt;/code&gt; can also be used instead of &lt;code&gt;&quot;im&quot;&lt;/code&gt;, and &lt;code&gt;&quot;R&quot;&lt;/code&gt; or &lt;code&gt;&quot;Iim&quot;&lt;/code&gt; are also permitted. If the string does not contain a valid number, an error is raised.</source>
          <target state="translated">文字列を数値として解析します。以下のために &lt;code&gt;Integer&lt;/code&gt; 型、塩基（デフォルトは10である）に指定することができます。浮動小数点型の場合、文字列は10進浮動小数点数として解析されます。 &lt;code&gt;Complex&lt;/code&gt; 型は、 &lt;code&gt;&quot;R&amp;plusmn;Iim&quot;&lt;/code&gt; 形式の10進文字列から、要求された型の &lt;code&gt;Complex(R,I)&lt;/code&gt; として解析されます。 &lt;code&gt;&quot;i&quot;&lt;/code&gt; &lt;code&gt;&quot;im&quot;&lt;/code&gt; 代わりに「i」または &lt;code&gt;&quot;j&quot;&lt;/code&gt; も使用でき、 &lt;code&gt;&quot;R&quot;&lt;/code&gt; または &lt;code&gt;&quot;Iim&quot;&lt;/code&gt; も使用できます。文字列に有効な数値が含まれていない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="2abd0e4e45339df87ac7d7ec6a8cc759fbc8b9d9" translate="yes" xml:space="preserve">
          <source>Parse a string into a &lt;a href=&quot;#Base.GMP.BigInt&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#Base.MPFR.BigFloat&quot;&gt;&lt;code&gt;BigFloat&lt;/code&gt;&lt;/a&gt;, and throw an &lt;code&gt;ArgumentError&lt;/code&gt; if the string is not a valid number. For integers &lt;code&gt;_&lt;/code&gt; is allowed in the string as a separator.</source>
          <target state="translated">文字列を解析&lt;a href=&quot;#Base.GMP.BigInt&quot;&gt; &lt;code&gt;BigInt&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#Base.MPFR.BigFloat&quot;&gt; &lt;code&gt;BigFloat&lt;/code&gt; &lt;/a&gt;、そして投げる &lt;code&gt;ArgumentError&lt;/code&gt; 文字列が有効な数値ではない場合。整数の場合、区切り文字として &lt;code&gt;_&lt;/code&gt; を文字列で使用できます。</target>
        </trans-unit>
        <trans-unit id="c620b1fcbabcd17a9d72128acda7a6477e11dcf8" translate="yes" xml:space="preserve">
          <source>Parse the expression string and return an expression (which could later be passed to eval for execution). &lt;code&gt;start&lt;/code&gt; is the index of the first character to start parsing. If &lt;code&gt;greedy&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (default), &lt;code&gt;parse&lt;/code&gt; will try to consume as much input as it can; otherwise, it will stop as soon as it has parsed a valid expression. Incomplete but otherwise syntactically valid expressions will return &lt;code&gt;Expr(:incomplete, &quot;(error message)&quot;)&lt;/code&gt;. If &lt;code&gt;raise&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (default), syntax errors other than incomplete expressions will raise an error. If &lt;code&gt;raise&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;parse&lt;/code&gt; will return an expression that will raise an error upon evaluation. If &lt;code&gt;depwarn&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, deprecation warnings will be suppressed.</source>
          <target state="translated">式の文字列を解析して式を返します（後でevalに渡して実行できます）。 &lt;code&gt;start&lt;/code&gt; は、解析を開始する最初の文字のインデックスです。場合は &lt;code&gt;greedy&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; （デフォルト）、 &lt;code&gt;parse&lt;/code&gt; それができる限り多くの入力として消費しようとします。それ以外の場合は、有効な式を解析するとすぐに停止します。不完全ですが構文的に有効な式は &lt;code&gt;Expr(:incomplete, &quot;(error message)&quot;)&lt;/code&gt; を返します。場合は &lt;code&gt;raise&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; （デフォルト）、不完全な表現以外の構文エラーは、エラーが発生します。 &lt;code&gt;raise&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、 &lt;code&gt;parse&lt;/code&gt; 評価時にエラーを発生させる式を返します。 &lt;code&gt;depwarn&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、非推奨の警告は抑制されます。</target>
        </trans-unit>
        <trans-unit id="3e471ce25df56009d9c5cf77ad68d23d5f3eb1e0" translate="yes" xml:space="preserve">
          <source>Parse the expression string greedily, returning a single expression. An error is thrown if there are additional characters after the first expression. If &lt;code&gt;raise&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (default), syntax errors will raise an error; otherwise, &lt;code&gt;parse&lt;/code&gt; will return an expression that will raise an error upon evaluation. If &lt;code&gt;depwarn&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, deprecation warnings will be suppressed.</source>
          <target state="translated">式文字列を貪欲に解析し、単一の式を返します。最初の式の後に追加の文字がある場合、エラーがスローされます。場合は &lt;code&gt;raise&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; （デフォルト）、構文エラーは、エラーが発生します。それ以外の場合、 &lt;code&gt;parse&lt;/code&gt; は評価時にエラーを発生させる式を返します。 &lt;code&gt;depwarn&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、非推奨の警告は抑制されます。</target>
        </trans-unit>
        <trans-unit id="ec5d020050d38f46221de911dc66b742d0051665" translate="yes" xml:space="preserve">
          <source>Part Alternation Mark</source>
          <target state="translated">パーツオルタネーションマーク</target>
        </trans-unit>
        <trans-unit id="c80abf5a3b6a1957b9d2d3d8f8b9dabc234289b1" translate="yes" xml:space="preserve">
          <source>Partial Differential</source>
          <target state="translated">偏微分</target>
        </trans-unit>
        <trans-unit id="2ac7c54c94360d227a2d68603df3b1cf9fb8712a" translate="yes" xml:space="preserve">
          <source>Partially evaluate an expression at parse time.</source>
          <target state="translated">パース時に式を部分的に評価します。</target>
        </trans-unit>
        <trans-unit id="14a6d725b6f619ea924eeb9335e3f9c868672b11" translate="yes" xml:space="preserve">
          <source>Partially implemented by:</source>
          <target state="translated">一部実装されています。</target>
        </trans-unit>
        <trans-unit id="07c4314471aabefff059aa426085b412a9993013" translate="yes" xml:space="preserve">
          <source>Partially sort the vector &lt;code&gt;v&lt;/code&gt; in place, according to the order specified by &lt;code&gt;by&lt;/code&gt;, &lt;code&gt;lt&lt;/code&gt; and &lt;code&gt;rev&lt;/code&gt; so that the value at index &lt;code&gt;k&lt;/code&gt; (or range of adjacent values if &lt;code&gt;k&lt;/code&gt; is a range) occurs at the position where it would appear if the array were fully sorted via a non-stable algorithm. If &lt;code&gt;k&lt;/code&gt; is a single index, that value is returned; if &lt;code&gt;k&lt;/code&gt; is a range, an array of values at those indices is returned. Note that &lt;code&gt;partialsort!&lt;/code&gt; does not fully sort the input array.</source>
          <target state="translated">部分的にソートベクトル &lt;code&gt;v&lt;/code&gt; 場所では、で指定された順序に従って &lt;code&gt;by&lt;/code&gt; 、 &lt;code&gt;lt&lt;/code&gt; および &lt;code&gt;rev&lt;/code&gt; インデックスの値ように、 &lt;code&gt;k&lt;/code&gt; （または隣接する値の範囲ならば &lt;code&gt;k&lt;/code&gt; は範囲である）アレイであった場合、それが見える位置で起こります非安定アルゴリズムを介して完全にソートされます。場合 &lt;code&gt;k&lt;/code&gt; は単一指数であり、その値が返されます。場合 &lt;code&gt;k&lt;/code&gt; は範囲で、それらのインデックスで値の配列が返されます。その &lt;code&gt;partialsort!&lt;/code&gt; 入力配列を完全にはソートしません。</target>
        </trans-unit>
        <trans-unit id="5a2cb02cdd598572255344747df22f640ba7cbfc" translate="yes" xml:space="preserve">
          <source>Partly because of run-time type inference (augmented by optional type annotations), and partly because of a strong focus on performance from the inception of the project, Julia's computational efficiency exceeds that of other dynamic languages, and even rivals that of statically-compiled languages. For large scale numerical problems, speed always has been, continues to be, and probably always will be crucial: the amount of data being processed has easily kept pace with Moore's Law over the past decades.</source>
          <target state="translated">実行時の型推論(オプションの型アノテーションによって強化された)と、プロジェクトの開始時から性能を重視してきたこともあり、Juliaの計算効率は他の動的言語を凌駕し、静的にコンパイルされた言語に匹敵するものとなっています。大規模な数値問題では、速度は常に重要であり、今も昔も、そしてこれからも、そしておそらくこれからも重要です。</target>
        </trans-unit>
        <trans-unit id="5befd856fa83367f828ea0d9c2035798b16ebd9b" translate="yes" xml:space="preserve">
          <source>Party Popper</source>
          <target state="translated">パーティーポッパー</target>
        </trans-unit>
        <trans-unit id="e36ae7f19d38571dcfb733599deb6833852dfaeb" translate="yes" xml:space="preserve">
          <source>Passing Pointers for Modifying Inputs</source>
          <target state="translated">入力を変更するためのポインタの渡し方</target>
        </trans-unit>
        <trans-unit id="7d4f34f2c957ad48052028d1c6c4a5fbb4445e52" translate="yes" xml:space="preserve">
          <source>Passing a value to &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt; converts it to the corresponding argument type.</source>
          <target state="translated">値を&lt;a href=&quot;../../base/c/index#ccall&quot;&gt; &lt;code&gt;ccall&lt;/code&gt; に&lt;/a&gt;渡すと、対応する引数の型に変換されます。</target>
        </trans-unit>
        <trans-unit id="1e8d13da9d5984c9d73b36003695ef418dd5cf90" translate="yes" xml:space="preserve">
          <source>Passing arguments to functions is better style. It leads to more reusable code and clarifies what the inputs and outputs are.</source>
          <target state="translated">関数に引数を渡すのは、より良いスタイルです。それはより再利用可能なコードにつながり、入力と出力が何であるかを明確にします。</target>
        </trans-unit>
        <trans-unit id="edccc163ff22ba0c2d343158afdce9e745fca960" translate="yes" xml:space="preserve">
          <source>Passing functions as arguments to other functions is a powerful technique, but the syntax for it is not always convenient. Such calls are especially awkward to write when the function argument requires multiple lines. As an example, consider calling &lt;a href=&quot;../../base/collections/index#Base.map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; on a function with several cases:</source>
          <target state="translated">関数を引数として他の関数に渡すことは強力な手法ですが、その構文は必ずしも便利ではありません。このような呼び出しは、関数の引数に複数の行が必要な場合に特に書きにくくなります。例として、いくつかのケースで関数で&lt;a href=&quot;../../base/collections/index#Base.map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;を呼び出すことを検討してください：</target>
        </trans-unit>
        <trans-unit id="5c74b02d50b4f52f9bc9b9cec2e4a11d2ddc99be" translate="yes" xml:space="preserve">
          <source>Passing options to &lt;code&gt;julia&lt;/code&gt; in so-called shebang by, e.g., &lt;code&gt;#!/usr/bin/env julia --startup-file=no&lt;/code&gt; may not work in some platforms such as Linux. This is because argument parsing in shebang is platform-dependent and not well-specified. In a Unix-like environment, a reliable way to pass options to &lt;code&gt;julia&lt;/code&gt; in an executable script would be to start the script as a &lt;code&gt;bash&lt;/code&gt; script and use &lt;code&gt;exec&lt;/code&gt; to replace the process to &lt;code&gt;julia&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;#!/usr/bin/env julia --startup-file=no&lt;/code&gt; など、いわゆるシバンで &lt;code&gt;julia&lt;/code&gt; にオプションを渡すと、Linuxなどの一部のプラットフォームでは機能しない場合があります。これは、シバンでの引数の解析がプラットフォームに依存し、明確に指定されていないためです。Unixのような環境では、実行可能スクリプトで &lt;code&gt;julia&lt;/code&gt; にオプションを渡す信頼できる方法は、スクリプトを &lt;code&gt;bash&lt;/code&gt; スクリプトとして開始し、 &lt;code&gt;exec&lt;/code&gt; を使用してプロセスを &lt;code&gt;julia&lt;/code&gt; に置き換えることです。</target>
        </trans-unit>
        <trans-unit id="6a120ae0c76febd67f5b1deafd00ac639cdb236a" translate="yes" xml:space="preserve">
          <source>Passport Control</source>
          <target state="translated">パスポートコントロール</target>
        </trans-unit>
        <trans-unit id="09ae82c2b3c6aa305ff750aff3170d0098ae10a9" translate="yes" xml:space="preserve">
          <source>Paw Prints</source>
          <target state="translated">肉球プリント</target>
        </trans-unit>
        <trans-unit id="9d572da1024594cb0ffa3ca7f0e020f962f27a26" translate="yes" xml:space="preserve">
          <source>Peach</source>
          <target state="translated">Peach</target>
        </trans-unit>
        <trans-unit id="547a82ee0d8700eed69fd310f4138d46af5b2379" translate="yes" xml:space="preserve">
          <source>Pear</source>
          <target state="translated">Pear</target>
        </trans-unit>
        <trans-unit id="764cce368a8983c0d05feaec69dbbd46167b8741" translate="yes" xml:space="preserve">
          <source>Pedestrian</source>
          <target state="translated">Pedestrian</target>
        </trans-unit>
        <trans-unit id="5136ae1b5bfe9175a6ed64915e648bdc240443a7" translate="yes" xml:space="preserve">
          <source>Pencil</source>
          <target state="translated">Pencil</target>
        </trans-unit>
        <trans-unit id="e1df2eb673fedd053d5ce4d73b62bf10f7a48482" translate="yes" xml:space="preserve">
          <source>Penguin</source>
          <target state="translated">Penguin</target>
        </trans-unit>
        <trans-unit id="4694b1ae4b381d2459dc99d211fbef2f75d97507" translate="yes" xml:space="preserve">
          <source>Pensive Face</source>
          <target state="translated">沈痛な顔</target>
        </trans-unit>
        <trans-unit id="0939cb64ef6c56281207c753ef605df0fed01645" translate="yes" xml:space="preserve">
          <source>Per Mille Sign</source>
          <target state="translated">パー・ミル・サイン</target>
        </trans-unit>
        <trans-unit id="261892ef86b8d91b587d4e0670b0a5c4b1076015" translate="yes" xml:space="preserve">
          <source>Per Ten Thousand Sign</source>
          <target state="translated">万枚あたり</target>
        </trans-unit>
        <trans-unit id="bd700f06d4e70616665212d3b88a7ee2992e9a07" translate="yes" xml:space="preserve">
          <source>Perform &lt;code&gt;fetch(remotecall(...))&lt;/code&gt; in one message. Keyword arguments, if any, are passed through to &lt;code&gt;f&lt;/code&gt;. Any remote exceptions are captured in a &lt;a href=&quot;#Distributed.RemoteException&quot;&gt;&lt;code&gt;RemoteException&lt;/code&gt;&lt;/a&gt; and thrown.</source>
          <target state="translated">1つのメッセージで &lt;code&gt;fetch(remotecall(...))&lt;/code&gt; を実行します。キーワード引数があれば、それが &lt;code&gt;f&lt;/code&gt; に渡されます。リモート例外はすべて&lt;a href=&quot;#Distributed.RemoteException&quot;&gt; &lt;code&gt;RemoteException&lt;/code&gt; に&lt;/a&gt;キャプチャされ、スローされます。</target>
        </trans-unit>
        <trans-unit id="baabb7c6ee0a9d1ca99fc1f8bd6a94a1f9f87732" translate="yes" xml:space="preserve">
          <source>Perform a faster &lt;code&gt;wait(remotecall(...))&lt;/code&gt; in one message on the &lt;code&gt;Worker&lt;/code&gt; specified by worker id &lt;code&gt;id&lt;/code&gt;. Keyword arguments, if any, are passed through to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">ワーカーID &lt;code&gt;id&lt;/code&gt; で指定された &lt;code&gt;Worker&lt;/code&gt; 1つのメッセージで、より速い &lt;code&gt;wait(remotecall(...))&lt;/code&gt; を実行します。キーワード引数があれば、それが &lt;code&gt;f&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="6721f455b94b87bc07f339ad893b6272dfe063b2" translate="yes" xml:space="preserve">
          <source>Perform a git merge on the repository &lt;code&gt;repo&lt;/code&gt;, merging commits with diverging history into the current branch. Return &lt;code&gt;true&lt;/code&gt; if the merge succeeded, &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="translated">リポジトリにgitのマージを実行 &lt;code&gt;repo&lt;/code&gt; 現在のブランチに歴史を発散してコミットをマージします、。マージが成功した場合は &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;false&lt;/code&gt; 場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="1da111a23d3b46bff577ef70fb02c3229c9d32ea" translate="yes" xml:space="preserve">
          <source>Perform garbage collection.</source>
          <target state="translated">ガベージコレクションを実行します。</target>
        </trans-unit>
        <trans-unit id="1bf7a3fd968707c9bb8b3cb7c69e267d79aeedae" translate="yes" xml:space="preserve">
          <source>Performance Annotations</source>
          <target state="translated">パフォーマンスアノテーション</target>
        </trans-unit>
        <trans-unit id="6d4af32e4acc11996347bfaec82c71604728dd29" translate="yes" xml:space="preserve">
          <source>Performance Tips</source>
          <target state="translated">パフォーマンスのヒント</target>
        </trans-unit>
        <trans-unit id="a2f18ec09d9c4fd9b4206a367ec23ed4683ba0c2" translate="yes" xml:space="preserve">
          <source>Performance of captured variable</source>
          <target state="translated">キャプチャされた変数の性能</target>
        </trans-unit>
        <trans-unit id="55758345adfc66ff6ff629ecfb403fd24ebf1eb4" translate="yes" xml:space="preserve">
          <source>Performing Arts</source>
          <target state="translated">舞台芸術</target>
        </trans-unit>
        <trans-unit id="8c6c6476950d356d90795ab76e5dd3faae3febe4" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;x[] $= val&lt;/code&gt; atomically. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">&lt;code&gt;x[] $= val&lt;/code&gt; アトミックに実行します。&lt;strong&gt;古い&lt;/strong&gt;値を返します。</target>
        </trans-unit>
        <trans-unit id="a03c5c7ae97080b7c001d3b98286d7ee0e29f609" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;x[] &amp;amp;= val&lt;/code&gt; atomically. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">&lt;code&gt;x[] &amp;amp;= val&lt;/code&gt; アトミックに実行します。&lt;strong&gt;古い&lt;/strong&gt;値を返します。</target>
        </trans-unit>
        <trans-unit id="4beb85f6ff3644aa591c299215bd7be754c0a8dd" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;x[] += val&lt;/code&gt; atomically. Returns the &lt;strong&gt;old&lt;/strong&gt; value. Not defined for &lt;code&gt;Atomic{Bool}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x[] += val&lt;/code&gt; アトミックに実行します。&lt;strong&gt;古い&lt;/strong&gt;値を返します。 &lt;code&gt;Atomic{Bool}&lt;/code&gt; では定義されていません。</target>
        </trans-unit>
        <trans-unit id="b8ead34a1fd29305e79bd1bddfafbcb31e1c92fb" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;x[] -= val&lt;/code&gt; atomically. Returns the &lt;strong&gt;old&lt;/strong&gt; value. Not defined for &lt;code&gt;Atomic{Bool}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x[] -= val&lt;/code&gt; アトミックに実行します。&lt;strong&gt;古い&lt;/strong&gt;値を返します。 &lt;code&gt;Atomic{Bool}&lt;/code&gt; では定義されていません。</target>
        </trans-unit>
        <trans-unit id="eb892b9d1e3907e114a8d73c97437a94089c6958" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;x[] = max(x[], val)&lt;/code&gt; atomically. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">&lt;code&gt;x[] = max(x[], val)&lt;/code&gt; アトミックに実行します。&lt;strong&gt;古い&lt;/strong&gt;値を返します。</target>
        </trans-unit>
        <trans-unit id="817a258b3a9894e5ec32481c893fb6d8d60451c2" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;x[] = min(x[], val)&lt;/code&gt; atomically. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">&lt;code&gt;x[] = min(x[], val)&lt;/code&gt; アトミックに実行します。&lt;strong&gt;古い&lt;/strong&gt;値を返します。</target>
        </trans-unit>
        <trans-unit id="9e5b18a00169e1206113ab69eb26741aa2e9ab9e" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;x[] = ~(x[] &amp;amp; val)&lt;/code&gt; atomically. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">&lt;code&gt;x[] = ~(x[] &amp;amp; val)&lt;/code&gt; アトミックに実行します。&lt;strong&gt;古い&lt;/strong&gt;値を返します。</target>
        </trans-unit>
        <trans-unit id="46fb1c9c7b65a4da65ad40f60a6f2f92466e42c5" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;x[] |= val&lt;/code&gt; atomically. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">&lt;code&gt;x[] |= val&lt;/code&gt; アトミックに実行します。&lt;strong&gt;古い&lt;/strong&gt;値を返します。</target>
        </trans-unit>
        <trans-unit id="30e056e8b93c92fa2ec993175cb34a473ed76caf" translate="yes" xml:space="preserve">
          <source>Performs a reverse-lookup for IP address to return a hostname and service using the operating system's underlying &lt;code&gt;getnameinfo&lt;/code&gt; implementation.</source>
          <target state="translated">オペレーティングシステムの基礎となる &lt;code&gt;getnameinfo&lt;/code&gt; 実装を使用して、IPアドレスの逆ルックアップを実行し、ホスト名とサービスを返します。</target>
        </trans-unit>
        <trans-unit id="9d4ad3be6d79c0ccb00f7801374051814f9b0d7f" translate="yes" xml:space="preserve">
          <source>Perhaps even worse than the run-time impact is the compile-time impact: Julia will compile specialized functions for each different &lt;code&gt;Car{Make, Model}&lt;/code&gt;; if you have hundreds or thousands of such types, then every function that accepts such an object as a parameter (from a custom &lt;code&gt;get_year&lt;/code&gt; function you might write yourself, to the generic &lt;code&gt;push!&lt;/code&gt; function in Julia Base) will have hundreds or thousands of variants compiled for it. Each of these increases the size of the cache of compiled code, the length of internal lists of methods, etc. Excess enthusiasm for values-as-parameters can easily waste enormous resources.</source>
          <target state="translated">おそらく、実行時の影響よりもさらに悪いのは、コンパイル時の影響です。ジュリアは、異なる &lt;code&gt;Car{Make, Model}&lt;/code&gt; ごとに専用の関数をコンパイルします。そのようなタイプが数百または数千ある場合、そのようなオブジェクトをパラメーターとして受け入れるすべての関数（独自の &lt;code&gt;get_year&lt;/code&gt; 関数から、自分で記述したものから、Julia Baseの一般的な &lt;code&gt;push!&lt;/code&gt; 関数まで）には、数百または数千のバリアントがコンパイルされます。それのための。これらはそれぞれ、コンパイル済みコードのキャッシュのサイズ、メソッドの内部リストの長さなどを増やします。values-as-parametersに対する過度の熱意は、膨大なリソースを簡単に浪費する可能性があります。</target>
        </trans-unit>
        <trans-unit id="b244dfd5b0e279ec23386a417c8b1c7550803e65" translate="yes" xml:space="preserve">
          <source>Perhaps surprisingly, these behaviors are not hard-coded into the Julia parser or compiler. Instead, they are custom behaviors provided by a general mechanism that anyone can use: prefixed string literals are parsed as calls to specially-named macros. For example, the regular expression macro is just the following:</source>
          <target state="translated">おそらく驚くべきことに、これらの動作はJuliaパーサやコンパイラにハードコードされていません。その代わりに、誰もが使用できる一般的なメカニズムによって提供されるカスタムの動作です。例えば、正規表現マクロは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b0d1e8331a66f1b8f1191edfe241d6acc1a37d21" translate="yes" xml:space="preserve">
          <source>Perhaps the best way to tie all these pieces together is to present a real world example of a parametric composite type and its constructor methods. To that end, we implement our own rational number type &lt;code&gt;OurRational&lt;/code&gt;, similar to Julia's built-in &lt;a href=&quot;../../base/numbers/index#Base.Rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt; type, defined in &lt;a href=&quot;https://github.com/JuliaLang/julia/blob/master/base/rational.jl&quot;&gt;&lt;code&gt;rational.jl&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">おそらく、これらすべての要素を結び付ける最善の方法は、パラメトリック複合タイプとそのコンストラクターメソッドの実例を提示することです。そのため、&lt;a href=&quot;https://github.com/JuliaLang/julia/blob/master/base/rational.jl&quot;&gt; &lt;code&gt;rational.jl&lt;/code&gt; &lt;/a&gt;で定義された、Juliaの組み込み&lt;a href=&quot;../../base/numbers/index#Base.Rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt;型に似た、独自の有理数型 &lt;code&gt;OurRational&lt;/code&gt; を実装します。</target>
        </trans-unit>
        <trans-unit id="a040fb271a19fc77e17c63d660d6a85ba7f07727" translate="yes" xml:space="preserve">
          <source>Perhaps you've defined a type and then realize you need to add a new field. If you try this at the REPL, you get the error:</source>
          <target state="translated">おそらく、型を定義した後、新しいフィールドを追加する必要があることに気づいたのでしょう。これをREPLで試してみると、エラーが出ます。</target>
        </trans-unit>
        <trans-unit id="11fb021207cafef0e124fd0744eaf3ce56f43187" translate="yes" xml:space="preserve">
          <source>Period Types</source>
          <target state="translated">期間の種類</target>
        </trans-unit>
        <trans-unit id="d65472b09f4179ba7aa8e36b00d34479e0e15de4" translate="yes" xml:space="preserve">
          <source>Periods</source>
          <target state="translated">Periods</target>
        </trans-unit>
        <trans-unit id="dea9ad15002f8eee943e865c1f58ad5305c8ea0f" translate="yes" xml:space="preserve">
          <source>Periods are a human view of discrete, sometimes irregular durations of time. Consider 1 month; it could represent, in days, a value of 28, 29, 30, or 31 depending on the year and month context. Or a year could represent 365 or 366 days in the case of a leap year. &lt;a href=&quot;#Dates.Period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; types are simple &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt; wrappers and are constructed by wrapping any &lt;code&gt;Int64&lt;/code&gt; convertible type, i.e. &lt;code&gt;Year(1)&lt;/code&gt; or &lt;code&gt;Month(3.0)&lt;/code&gt;. Arithmetic between &lt;a href=&quot;#Dates.Period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; of the same type behave like integers, and limited &lt;code&gt;Period-Real&lt;/code&gt; arithmetic is available. You can extract the underlying integer with &lt;a href=&quot;#Dates.value&quot;&gt;&lt;code&gt;Dates.value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期間は、不連続な、時には不規則な期間の人間の見方です。 1か月と考えてください。年と月のコンテキストに応じて、28、29、30、または31の値を日数で表すことができます。または、うるう年の場合、1年は365日または366日を表すことができます。&lt;a href=&quot;#Dates.Period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt;タイプは単純な&lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; &lt;/a&gt;ラッパーであり、任意の &lt;code&gt;Int64&lt;/code&gt; 変換可能タイプ、つまり &lt;code&gt;Year(1)&lt;/code&gt; または &lt;code&gt;Month(3.0)&lt;/code&gt; をラップすることによって構築されます。同じタイプの&lt;a href=&quot;#Dates.Period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt;間の演算は整数のように動作し、限られた &lt;code&gt;Period-Real&lt;/code&gt; 演算が使用できます。&lt;a href=&quot;#Dates.value&quot;&gt; &lt;code&gt;Dates.value&lt;/code&gt; を&lt;/a&gt;使用して、基になる整数を抽出できます。</target>
        </trans-unit>
        <trans-unit id="5bbf293a2295e92877818067c4b025b8e0c853a0" translate="yes" xml:space="preserve">
          <source>Permanent Paper Sign</source>
          <target state="translated">パーマネント紙サイン</target>
        </trans-unit>
        <trans-unit id="972328b733e5cb68be5c48d2d6277ad85e9d57d1" translate="yes" xml:space="preserve">
          <source>Permute the dimensions of array &lt;code&gt;A&lt;/code&gt;. &lt;code&gt;perm&lt;/code&gt; is a vector specifying a permutation of length &lt;code&gt;ndims(A)&lt;/code&gt;.</source>
          <target state="translated">配列 &lt;code&gt;A&lt;/code&gt; の次元を並べ替えます。 &lt;code&gt;perm&lt;/code&gt; は、長さ &lt;code&gt;ndims(A)&lt;/code&gt; の順列を指定するベクトルです。</target>
        </trans-unit>
        <trans-unit id="41c7083384fde2aa7c579d30607391c9776b37b5" translate="yes" xml:space="preserve">
          <source>Permute the dimensions of array &lt;code&gt;src&lt;/code&gt; and store the result in the array &lt;code&gt;dest&lt;/code&gt;. &lt;code&gt;perm&lt;/code&gt; is a vector specifying a permutation of length &lt;code&gt;ndims(src)&lt;/code&gt;. The preallocated array &lt;code&gt;dest&lt;/code&gt; should have &lt;code&gt;size(dest) == size(src)[perm]&lt;/code&gt; and is completely overwritten. No in-place permutation is supported and unexpected results will happen if &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; have overlapping memory regions.</source>
          <target state="translated">配列 &lt;code&gt;src&lt;/code&gt; の次元を並べ替え、結果を配列 &lt;code&gt;dest&lt;/code&gt; に格納します。 &lt;code&gt;perm&lt;/code&gt; は、長さ &lt;code&gt;ndims(src)&lt;/code&gt; の順列を指定するベクトルです。事前割り当てされた配列 &lt;code&gt;dest&lt;/code&gt; は、 &lt;code&gt;size(dest) == size(src)[perm]&lt;/code&gt; である必要があり、完全に上書きされます。インプレース置換はサポートされておらず、 &lt;code&gt;src&lt;/code&gt; と &lt;code&gt;dest&lt;/code&gt; に重複するメモリ領域がある場合、予期しない結果が発生します。</target>
        </trans-unit>
        <trans-unit id="6e8221f25d9d58bd5d86712e88f3b465d606abd0" translate="yes" xml:space="preserve">
          <source>Permute the dimensions of the matrix &lt;code&gt;m&lt;/code&gt;, by flipping the elements across the diagonal of the matrix. Differs from &lt;code&gt;LinearAlgebra&lt;/code&gt;'s &lt;a href=&quot;../../stdlib/linearalgebra/index#Base.transpose&quot;&gt;&lt;code&gt;transpose&lt;/code&gt;&lt;/a&gt; in that the operation is not recursive.</source>
          <target state="translated">行列の対角線上で要素を反転させることにより、行列 &lt;code&gt;m&lt;/code&gt; の次元を並べ替えます。操作が再帰的ではない点で、 &lt;code&gt;LinearAlgebra&lt;/code&gt; の&lt;a href=&quot;../../stdlib/linearalgebra/index#Base.transpose&quot;&gt; &lt;code&gt;transpose&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="aa9bac58b87db1223ef3e3d50509c1ebad507108" translate="yes" xml:space="preserve">
          <source>Permute vector &lt;code&gt;v&lt;/code&gt; in-place, according to permutation &lt;code&gt;p&lt;/code&gt;. No checking is done to verify that &lt;code&gt;p&lt;/code&gt; is a permutation.</source>
          <target state="translated">順列 &lt;code&gt;p&lt;/code&gt; に従って、ベクトル &lt;code&gt;v&lt;/code&gt; をインプレースで並べ替えます。 &lt;code&gt;p&lt;/code&gt; が順列であることを確認するためのチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="098948ce34c80f7dfb8457111da43aa62e7e029a" translate="yes" xml:space="preserve">
          <source>PermutedDimsArrays.PermutedDimsArray</source>
          <target state="translated">PermutedDimsArrays.PermutedDimsArray</target>
        </trans-unit>
        <trans-unit id="83ba3ad2f8dd93b2743e8ada1da9a302f0a1d11f" translate="yes" xml:space="preserve">
          <source>Perpendicular</source>
          <target state="translated">Perpendicular</target>
        </trans-unit>
        <trans-unit id="4b5bca8fb4c040fe5002813eefda2e48be25b004" translate="yes" xml:space="preserve">
          <source>Persevering Face</source>
          <target state="translated">忍耐力のある顔</target>
        </trans-unit>
        <trans-unit id="0086ff6baf95cbc3b6f36b82606beb19a00ce8bc" translate="yes" xml:space="preserve">
          <source>Person Bowing Deeply</source>
          <target state="translated">深くお辞儀をする人</target>
        </trans-unit>
        <trans-unit id="cdc3619dd00968a8a710d45df7f35f4c1e174dfc" translate="yes" xml:space="preserve">
          <source>Person Frowning</source>
          <target state="translated">しかめっ面の人</target>
        </trans-unit>
        <trans-unit id="26a11072f58589263a56fb024e10b416cdf53530" translate="yes" xml:space="preserve">
          <source>Person Raising Both Hands In Celebration</source>
          <target state="translated">両手上げ</target>
        </trans-unit>
        <trans-unit id="16512c4d05b9023c393f2a84f9c0518864b0718b" translate="yes" xml:space="preserve">
          <source>Person With Blond Hair</source>
          <target state="translated">金髪の人</target>
        </trans-unit>
        <trans-unit id="31cb7f1311e5739277502d3bf3f023ccb25563dc" translate="yes" xml:space="preserve">
          <source>Person With Folded Hands</source>
          <target state="translated">手を折られた人</target>
        </trans-unit>
        <trans-unit id="bd607f9a913bba37b76ee30a97dfcbf12fdeba85" translate="yes" xml:space="preserve">
          <source>Person With Pouting Face</source>
          <target state="translated">吐き気のある顔の人</target>
        </trans-unit>
        <trans-unit id="b36efdfad52188e5b019d796dbca7ed4da07b2f9" translate="yes" xml:space="preserve">
          <source>Personal Computer</source>
          <target state="translated">パーソナルコンピュータ</target>
        </trans-unit>
        <trans-unit id="cc68ebe643f85c96f5462addce3008c2bdd34f05" translate="yes" xml:space="preserve">
          <source>Perspective</source>
          <target state="translated">Perspective</target>
        </trans-unit>
        <trans-unit id="19322dc7a0e07df0428b3353fea2b354606263af" translate="yes" xml:space="preserve">
          <source>Peseta Sign</source>
          <target state="translated">ペセタサイン</target>
        </trans-unit>
        <trans-unit id="91292891d45aa49b9a94db63ecb5481d941e0157" translate="yes" xml:space="preserve">
          <source>Pick a random element or array of random elements from the set of values specified by &lt;code&gt;S&lt;/code&gt;; &lt;code&gt;S&lt;/code&gt; can be</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; で指定された値のセットからランダム要素またはランダム要素の配列を選択します。 &lt;code&gt;S&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="768107c0b45576dab2a6b6a944e3f676b6310807" translate="yes" xml:space="preserve">
          <source>Pig</source>
          <target state="translated">Pig</target>
        </trans-unit>
        <trans-unit id="a99d953ac675e238995716d709c918c4792aa35c" translate="yes" xml:space="preserve">
          <source>Pig Face</source>
          <target state="translated">ピッグフェイス</target>
        </trans-unit>
        <trans-unit id="c12a3158561a62c4a2e5701212da95b02a609799" translate="yes" xml:space="preserve">
          <source>Pig Nose</source>
          <target state="translated">ブタの鼻</target>
        </trans-unit>
        <trans-unit id="783ea3d2b269c39a942f846a9b61d0339b9ed679" translate="yes" xml:space="preserve">
          <source>Pilcrow Sign / Paragraph Sign</source>
          <target state="translated">ピルクロウサイン・パラグラフサイン</target>
        </trans-unit>
        <trans-unit id="1e00035ff2d166a22ca47f7cdbdde7f2d0ec204b" translate="yes" xml:space="preserve">
          <source>Pile Of Poo</source>
          <target state="translated">Pile Of Poo</target>
        </trans-unit>
        <trans-unit id="38ea5ba8c928827a392ae9d524bfa5d99b282a90" translate="yes" xml:space="preserve">
          <source>Pill</source>
          <target state="translated">Pill</target>
        </trans-unit>
        <trans-unit id="6558c358049ca1d568fd5e7ec7b536745db028a4" translate="yes" xml:space="preserve">
          <source>Pine Decoration</source>
          <target state="translated">松の装飾</target>
        </trans-unit>
        <trans-unit id="347aecd593ec2bc501b2e5e751e16bedee81b5f8" translate="yes" xml:space="preserve">
          <source>Pineapple</source>
          <target state="translated">Pineapple</target>
        </trans-unit>
        <trans-unit id="8a6f5ccb1f0e26e6e7c0ec3e922c925f55bf867d" translate="yes" xml:space="preserve">
          <source>PipeBuffer()</source>
          <target state="translated">PipeBuffer()</target>
        </trans-unit>
        <trans-unit id="c5df1e14fdba13b1a3f9690f736bcb2aac132e72" translate="yes" xml:space="preserve">
          <source>Pipelines</source>
          <target state="translated">Pipelines</target>
        </trans-unit>
        <trans-unit id="da321110c6a600f829707be93da33cc1066e0008" translate="yes" xml:space="preserve">
          <source>Pisces</source>
          <target state="translated">Pisces</target>
        </trans-unit>
        <trans-unit id="188e8ee673d53a8b4a1c7ed213545c4065c27879" translate="yes" xml:space="preserve">
          <source>Pistol</source>
          <target state="translated">Pistol</target>
        </trans-unit>
        <trans-unit id="e9b6bbd367107c5e4b3787db359541a1d42aeaf0" translate="yes" xml:space="preserve">
          <source>Pitchfork</source>
          <target state="translated">Pitchfork</target>
        </trans-unit>
        <trans-unit id="6518a655936edc32b734ba755598dd2edd7c34aa" translate="yes" xml:space="preserve">
          <source>Pivoted &lt;a href=&quot;https://en.wikipedia.org/wiki/QR_decomposition&quot;&gt;QR factorization&lt;/a&gt;</source>
          <target state="translated">ピボット&lt;a href=&quot;https://en.wikipedia.org/wiki/QR_decomposition&quot;&gt;QR分解&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="194ac18983360f98a93b57c022d08b76decb0ef8" translate="yes" xml:space="preserve">
          <source>Pkg</source>
          <target state="translated">Pkg</target>
        </trans-unit>
        <trans-unit id="3b706948d833490a50feac354e04c7ae30b53822" translate="yes" xml:space="preserve">
          <source>Pkg comes with a REPL. Enter the Pkg REPL by pressing &lt;code&gt;]&lt;/code&gt; from the Julia REPL. To get back to the Julia REPL, press backspace or ^C.</source>
          <target state="translated">PkgにはREPLが付属しています。Julia REPLから &lt;code&gt;]&lt;/code&gt; を押して、Pkg REPLを入力します。Julia REPLに戻るには、Backspaceまたは^ Cを押します。</target>
        </trans-unit>
        <trans-unit id="dc5d0013376173b36d39274afa7ebeb88ae0be00" translate="yes" xml:space="preserve">
          <source>Pkg has also updated the REPL prompt in order to reflect the new active environment:</source>
          <target state="translated">また、Pkgは新しいアクティブな環境を反映させるためにREPLプロンプトを更新しました。</target>
        </trans-unit>
        <trans-unit id="c735b7c49533b448f5669239486019c33627bcc9" translate="yes" xml:space="preserve">
          <source>Pkg is Julia's builtin package manager, and handles operations such as installing, updating and removing packages.</source>
          <target state="translated">PkgはJuliaの組み込みパッケージマネージャで、パッケージのインストール、更新、削除などの操作を行います。</target>
        </trans-unit>
        <trans-unit id="ed4c22ddb8a20d64740bf830bb257555fbd7fbb8" translate="yes" xml:space="preserve">
          <source>Pkg lets us know we are creating a new environment and that this environment will be stored in the &lt;code&gt;/tmp/tutorial&lt;/code&gt; directory.</source>
          <target state="translated">Pkgは、新しい環境を作成中であり、この環境が &lt;code&gt;/tmp/tutorial&lt;/code&gt; ディレクトリに保存されることを知らせます。</target>
        </trans-unit>
        <trans-unit id="1e7730212a65b022268bdd761b85183184243bae" translate="yes" xml:space="preserve">
          <source>Place the starting and ending &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; characters on lines by themselves.</source>
          <target state="translated">開始と終了の &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 文字を単独で行に配置します。</target>
        </trans-unit>
        <trans-unit id="6992311c10eb75b0226d481d42d9296a304129c2" translate="yes" xml:space="preserve">
          <source>Planck Constant</source>
          <target state="translated">プランク定数</target>
        </trans-unit>
        <trans-unit id="40abf60f15619297835c93ffa9279a0275c98507" translate="yes" xml:space="preserve">
          <source>Planck Constant Over Two Pi / Planck Constant Over 2 Pi</source>
          <target state="translated">2π以上のプランク定数/2π以上のプランク定数</target>
        </trans-unit>
        <trans-unit id="e126e2454fdf3212992c5a38eed725d802fc7cf3" translate="yes" xml:space="preserve">
          <source>Playing Card Black Joker</source>
          <target state="translated">トランプブラックジョーカー</target>
        </trans-unit>
        <trans-unit id="093a8668e5f04af4527d4f0bdc090d9e24e92c79" translate="yes" xml:space="preserve">
          <source>Please read the &lt;a href=&quot;https://docs.julialang.org/en/v1.2.0/NEWS/&quot;&gt;release notes&lt;/a&gt; to see what has changed since the last release.</source>
          <target state="translated">前回のリリースからの変更点については、&lt;a href=&quot;https://docs.julialang.org/en/v1.2.0/NEWS/&quot;&gt;リリースノート&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="13a53df91f7c7afe63ae0fc34a94ad6fccb3dfd5" translate="yes" xml:space="preserve">
          <source>Please see the manual section on documentation for more information.</source>
          <target state="translated">詳しくはマニュアルの説明書の項をご覧ください。</target>
        </trans-unit>
        <trans-unit id="6e4b708fe03175b557191e566256edd0651ed302" translate="yes" xml:space="preserve">
          <source>Plus Sign Above Equals Sign</source>
          <target state="translated">上記プラス記号 イコール記号</target>
        </trans-unit>
        <trans-unit id="58b8e75d0b3a284f9ef3e9024a01c32d771cca40" translate="yes" xml:space="preserve">
          <source>Plus Sign In Left Half Circle</source>
          <target state="translated">プラスサイン左半円</target>
        </trans-unit>
        <trans-unit id="5f352f78e014a0da8c1549a07af1e35e944ccd72" translate="yes" xml:space="preserve">
          <source>Plus Sign In Right Half Circle</source>
          <target state="translated">プラスサイン 右半円</target>
        </trans-unit>
        <trans-unit id="6627d61f183670116b20ea34d76019d3ad737ee9" translate="yes" xml:space="preserve">
          <source>Plus Sign In Triangle</source>
          <target state="translated">プラスサインイントライアングル</target>
        </trans-unit>
        <trans-unit id="87e99bf536ea7e520ec4b440eef9ebe72aee5b39" translate="yes" xml:space="preserve">
          <source>Plus Sign With Black Triangle</source>
          <target state="translated">プラスサインと黒の三角形</target>
        </trans-unit>
        <trans-unit id="7d5774a5b1cd77991b4f38df432940389381684a" translate="yes" xml:space="preserve">
          <source>Plus Sign With Circumflex Accent Above</source>
          <target state="translated">上の円弧のアクセントが付いているプラスの印</target>
        </trans-unit>
        <trans-unit id="471ba0385a5fe4967721f2e7cfe48eb15c8bd1c6" translate="yes" xml:space="preserve">
          <source>Plus Sign With Dot Below</source>
          <target state="translated">プラスサインの下にドットが付いている</target>
        </trans-unit>
        <trans-unit id="b9f232e2e41123213fa6ec574d5f198a4a70fa67" translate="yes" xml:space="preserve">
          <source>Plus Sign With Small Circle Above</source>
          <target state="translated">上の小さな円が付いているプラスの印</target>
        </trans-unit>
        <trans-unit id="1f7dae43cd19f5a1db81ad5a9efc5ddbe0c41a85" translate="yes" xml:space="preserve">
          <source>Plus Sign With Subscript Two</source>
          <target state="translated">プラスサイン 添え字2</target>
        </trans-unit>
        <trans-unit id="3cf756669546a40080424049b963b26acbc0fd20" translate="yes" xml:space="preserve">
          <source>Plus Sign With Tilde Above</source>
          <target state="translated">上のTildeが付いているプラスの印</target>
        </trans-unit>
        <trans-unit id="2bf04b92d79377403feeabd97e51c58eaf0f5e29" translate="yes" xml:space="preserve">
          <source>Plus Sign With Tilde Below</source>
          <target state="translated">下のティルデとプラスサイン</target>
        </trans-unit>
        <trans-unit id="14326581862b25104d3b68017e39fb221a4203f8" translate="yes" xml:space="preserve">
          <source>Plus-Minus Sign / Plus-Or-Minus Sign</source>
          <target state="translated">プラスマイナスサイン/プラスマイナスサイン</target>
        </trans-unit>
        <trans-unit id="bce8c9aca4120776fad6b517874aa09c46405454" translate="yes" xml:space="preserve">
          <source>Pluto</source>
          <target state="translated">Pluto</target>
        </trans-unit>
        <trans-unit id="3ec25d1e20cf1a0e20c3d59870c0ff3328ee7bac" translate="yes" xml:space="preserve">
          <source>Police Car</source>
          <target state="translated">パトカー</target>
        </trans-unit>
        <trans-unit id="90dabcfb3bd8a429c5322800e5c63b6c52882548" translate="yes" xml:space="preserve">
          <source>Police Cars Revolving Light</source>
          <target state="translated">パトカーの回転灯</target>
        </trans-unit>
        <trans-unit id="a35f3c0224d77b05f29f401683e71f8959e6e5d7" translate="yes" xml:space="preserve">
          <source>Police Officer</source>
          <target state="translated">警察官</target>
        </trans-unit>
        <trans-unit id="4f76e25a4a399aef1f259d5bc4a1e6e0a8f90c89" translate="yes" xml:space="preserve">
          <source>Poodle</source>
          <target state="translated">Poodle</target>
        </trans-unit>
        <trans-unit id="27b3d4eddfe0dce0b794fd1ec73e0620d1b6f0f7" translate="yes" xml:space="preserve">
          <source>Pop the topmost backend off of the display-backend stack, or the topmost copy of &lt;code&gt;d&lt;/code&gt; in the second variant.</source>
          <target state="translated">ディスプレイバックエンドスタックの一番上のバックエンド、または2番目のバリアントの一番上の &lt;code&gt;d&lt;/code&gt; のコピーをポップします。</target>
        </trans-unit>
        <trans-unit id="fbf5b645d238729a755532289d15ec65d7cfe08b" translate="yes" xml:space="preserve">
          <source>Populate the array &lt;code&gt;A&lt;/code&gt; with random values. If &lt;code&gt;S&lt;/code&gt; is specified (&lt;code&gt;S&lt;/code&gt; can be a type or a collection, cf. &lt;a href=&quot;#Base.rand&quot;&gt;&lt;code&gt;rand&lt;/code&gt;&lt;/a&gt; for details), the values are picked randomly from &lt;code&gt;S&lt;/code&gt;. This is equivalent to &lt;code&gt;copyto!(A, rand(rng, S, size(A)))&lt;/code&gt; but without allocating a new array.</source>
          <target state="translated">配列 &lt;code&gt;A&lt;/code&gt; にランダムな値を入力します。 &lt;code&gt;S&lt;/code&gt; が指定されている場合（ &lt;code&gt;S&lt;/code&gt; はタイプまたはコレクションです。詳細は&lt;a href=&quot;#Base.rand&quot;&gt; &lt;code&gt;rand&lt;/code&gt; &lt;/a&gt;を参照してください）、値は &lt;code&gt;S&lt;/code&gt; からランダムに選択されます。これは &lt;code&gt;copyto!(A, rand(rng, S, size(A)))&lt;/code&gt; と同じですが、新しい配列を割り当てません。</target>
        </trans-unit>
        <trans-unit id="321ba64fba5c79c1ff1aac8f65070a35406fe75e" translate="yes" xml:space="preserve">
          <source>Positive infinity of type &lt;a href=&quot;#Core.Float16&quot;&gt;&lt;code&gt;Float16&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Core.Float16&quot;&gt; &lt;code&gt;Float16&lt;/code&gt; &lt;/a&gt;型の正の無限大。</target>
        </trans-unit>
        <trans-unit id="e4a4dbc1e8ec72ee3e03293546ba409419d1a01c" translate="yes" xml:space="preserve">
          <source>Positive infinity of type &lt;a href=&quot;#Core.Float32&quot;&gt;&lt;code&gt;Float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Core.Float32&quot;&gt; &lt;code&gt;Float32&lt;/code&gt; &lt;/a&gt;型の正の無限大。</target>
        </trans-unit>
        <trans-unit id="4fcf987ad5b5db61b053cd3ca356ed89bc6a9f40" translate="yes" xml:space="preserve">
          <source>Positive infinity of type &lt;a href=&quot;#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt;型の正の無限大。</target>
        </trans-unit>
        <trans-unit id="cf82cfe67ba814f93fe630a5c4389a75bd9ea08b" translate="yes" xml:space="preserve">
          <source>Positive zero is equal but not greater than negative zero.</source>
          <target state="translated">正のゼロは等しいが、負のゼロより大きくはない。</target>
        </trans-unit>
        <trans-unit id="4831f0667ff59cbc1e29f087a4f50172ff1829ed" translate="yes" xml:space="preserve">
          <source>Positive-definite</source>
          <target state="translated">Positive-definite</target>
        </trans-unit>
        <trans-unit id="9fff7aaa5fc7633378f8a9fb7adc827674e65a07" translate="yes" xml:space="preserve">
          <source>Postal Horn</source>
          <target state="translated">郵政角</target>
        </trans-unit>
        <trans-unit id="085bcf78eddd7e9a54ed271eafddb35a54582ff8" translate="yes" xml:space="preserve">
          <source>Postal Mark</source>
          <target state="translated">郵便マーク</target>
        </trans-unit>
        <trans-unit id="5366735e1b45ae828b5e3525bf8c287060de93d2" translate="yes" xml:space="preserve">
          <source>Postbox</source>
          <target state="translated">Postbox</target>
        </trans-unit>
        <trans-unit id="0d4bc911747465edd62e2e325dd60436b41285c7" translate="yes" xml:space="preserve">
          <source>Pot Of Food</source>
          <target state="translated">食品の鍋</target>
        </trans-unit>
        <trans-unit id="8a4e158fd250c68e9c1fb092847613d189dae6ed" translate="yes" xml:space="preserve">
          <source>Potable Water Symbol</source>
          <target state="translated">飲料水のシンボルマーク</target>
        </trans-unit>
        <trans-unit id="954d92a3f92894d00aa48f299b94593a79fd1df4" translate="yes" xml:space="preserve">
          <source>Pouch</source>
          <target state="translated">Pouch</target>
        </trans-unit>
        <trans-unit id="64b7d5a65b6c405c74ce30c00999fc1cc75af875" translate="yes" xml:space="preserve">
          <source>Poultry Leg</source>
          <target state="translated">鶏脚</target>
        </trans-unit>
        <trans-unit id="16c500c9526776c7dfc888d90851d9bde3d23648" translate="yes" xml:space="preserve">
          <source>Pound Sign</source>
          <target state="translated">パウンドサイン</target>
        </trans-unit>
        <trans-unit id="5ae99054f6a29a7cfe1b4da82fa2bb0843d36ea5" translate="yes" xml:space="preserve">
          <source>Pouting Cat Face</source>
          <target state="translated">吐き出す猫の顔</target>
        </trans-unit>
        <trans-unit id="c3dd7f8c153cc4caa27f5fa2a9f1863fe40a3957" translate="yes" xml:space="preserve">
          <source>Pouting Face</source>
          <target state="translated">吐き出す顔</target>
        </trans-unit>
        <trans-unit id="70d65a0977c622df78a70d52b2c5b31511e12197" translate="yes" xml:space="preserve">
          <source>Powerful shell-like capabilities for managing other processes</source>
          <target state="translated">他のプロセスを管理するための強力なシェルのような機能</target>
        </trans-unit>
        <trans-unit id="937ed6896a7e0f67f93ecf627a616d97b55d27d3" translate="yes" xml:space="preserve">
          <source>Powers, logs and roots</source>
          <target state="translated">力、丸太、根っこ</target>
        </trans-unit>
        <trans-unit id="7b30f09c18b9623b8d7f99046fe0799b4535f75c" translate="yes" xml:space="preserve">
          <source>Pre-allocating outputs</source>
          <target state="translated">出力の事前割り当て</target>
        </trans-unit>
        <trans-unit id="a72d46d801d5bb96501cfa41e567f78c25906966" translate="yes" xml:space="preserve">
          <source>Preallocation has other advantages, for example by allowing the caller to control the &quot;output&quot; type from an algorithm. In the example above, we could have passed a &lt;code&gt;SubArray&lt;/code&gt; rather than an &lt;a href=&quot;../../base/arrays/index#Core.Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, had we so desired.</source>
          <target state="translated">事前割り当てには他の利点もあります。たとえば、呼び出し元がアルゴリズムから「出力」タイプを制御できるようにすることです。上記の例では、必要に応じて、&lt;a href=&quot;../../base/arrays/index#Core.Array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;ではなく &lt;code&gt;SubArray&lt;/code&gt; を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="9cf875ceeb0c46da26982eaf8239c94fe43f887c" translate="yes" xml:space="preserve">
          <source>Precedence rules for mixing styles</source>
          <target state="translated">混合スタイルの優先順位のルール</target>
        </trans-unit>
        <trans-unit id="746253f76092d2436521d3da20825d06b5101a9f" translate="yes" xml:space="preserve">
          <source>Precedes</source>
          <target state="translated">Precedes</target>
        </trans-unit>
        <trans-unit id="43bb9a7c25a3481a00191f509d72700333a1fe57" translate="yes" xml:space="preserve">
          <source>Precedes Above Almost Equal To</source>
          <target state="translated">にほぼ等しい上に先行する</target>
        </trans-unit>
        <trans-unit id="f387452ec29571647e81fe0bd3b335064995838a" translate="yes" xml:space="preserve">
          <source>Precedes Above Equals Sign</source>
          <target state="translated">上に先行するイコールサイン</target>
        </trans-unit>
        <trans-unit id="0b1fcb30fd7a740f035792ab3b3b549215e665a9" translate="yes" xml:space="preserve">
          <source>Precedes Above Not Almost Equal To</source>
          <target state="translated">上に先行しているが、ほぼ同等ではない</target>
        </trans-unit>
        <trans-unit id="7cfd5089fe906ed24e85a07cb0ecad01e900af03" translate="yes" xml:space="preserve">
          <source>Precedes Above Not Equal To</source>
          <target state="translated">上に先行する</target>
        </trans-unit>
        <trans-unit id="355aa1be14ce78b455e0779c520270f56652c997" translate="yes" xml:space="preserve">
          <source>Precedes Above Single-Line Equals Sign</source>
          <target state="translated">単線の上に先行する等号</target>
        </trans-unit>
        <trans-unit id="5b2e7625690e144f0e44900bd9d8297bec7fdcbe" translate="yes" xml:space="preserve">
          <source>Precedes Above Single-Line Equals Sign + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">単一行等号の上に先行させる+ロングソリダスオーバーレイ/ノンスペーシングロングスラッシュオーバーレイを組み合わせる</target>
        </trans-unit>
        <trans-unit id="f18123eb73541e2688cb761ecad82eb84bab9fda" translate="yes" xml:space="preserve">
          <source>Precedes Above Single-Line Not Equal To</source>
          <target state="translated">単線の上に先行していますが、イコールではありません。</target>
        </trans-unit>
        <trans-unit id="46ef982ddc3726d08fd0a4d7ea925ca072220ec9" translate="yes" xml:space="preserve">
          <source>Precedes But Not Equivalent To</source>
          <target state="translated">先行するが同等ではない</target>
        </trans-unit>
        <trans-unit id="a7b2c1e4d0738b9fb651e130dd603b20ee89944b" translate="yes" xml:space="preserve">
          <source>Precedes Or Equal To</source>
          <target state="translated">先行または同等</target>
        </trans-unit>
        <trans-unit id="f39e98a49f5002445d1bbfbe3950271b4b4e6f74" translate="yes" xml:space="preserve">
          <source>Precedes Or Equivalent To</source>
          <target state="translated">に先行または相当する</target>
        </trans-unit>
        <trans-unit id="8cdf2a3b3ba5c66906c4929f58126996211e6d76" translate="yes" xml:space="preserve">
          <source>Precedes Or Equivalent To + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">前提または同等のもの+ロングソリッドスオーバーレイ/非スペーシングロングスラッシュオーバーレイの組み合わせ</target>
        </trans-unit>
        <trans-unit id="33ca8b7d303cd81a6393d96ba55e5d0cbf5a0663" translate="yes" xml:space="preserve">
          <source>Precedes Under Relation</source>
          <target state="translated">関係性の下で先行</target>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="translated">Precision</target>
        </trans-unit>
        <trans-unit id="de11d639cbb20b78057de77139846da924d03602" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS is a derivative of Apple Macintosh OS X or Darwin. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがApple Macintosh OS XまたはDarwinの派生物であるかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="724120c8b2dd3dc42f5eb4da2d310cffb9464796" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS is a derivative of BSD. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがBSDの派生物であるかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="639aba52bcd8af224189c8bbfc0c26cf37d4c8f9" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS is a derivative of DragonFly BSD. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがDragonFly BSDの派生物であるかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f64f8f2ee067910f69e4efbb7351e5a614fff92a" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS is a derivative of FreeBSD. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがFreeBSDの派生物であるかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5dc8ec9d37ee247c2d3321afec0857034320331d" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS is a derivative of Linux. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがLinuxの派生物であるかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="94365ca4f33f4f5cb13e71881a7e2f4a478f6878" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS is a derivative of Microsoft Windows NT. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがMicrosoft Windows NTの派生物であるかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="59e57103d89081c8dab7858aa0952c2c8bf46904" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS is a derivative of NetBSD. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがNetBSDの派生物であるかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="40515fd7c7a10a27394b99c8b7881b01871e41fd" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS is a derivative of OpenBSD. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがOpenBSDの派生物であるかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="919f69617c292e1674a00e80f24f06770d12ff4c" translate="yes" xml:space="preserve">
          <source>Predicate for testing if the OS provides a Unix-like interface. See documentation in &lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;Handling Operating System Variation&lt;/a&gt;.</source>
          <target state="translated">OSがUnixライクなインターフェースを提供しているかどうかをテストするための述語。&lt;a href=&quot;../../manual/handling-operating-system-variation/index#Handling-Operating-System-Variation-1&quot;&gt;オペレーティングシステムのバリエーションの処理の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1f23a21192fba53c0e271024e7810fbc2ef8c4ce" translate="yes" xml:space="preserve">
          <source>Predicate function negation: when the argument of &lt;code&gt;!&lt;/code&gt; is a function, it returns a function which computes the boolean negation of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">述語関数の否定： &lt;code&gt;!&lt;/code&gt; 関数の場合、 &lt;code&gt;f&lt;/code&gt; のブール否定を計算する関数を返します。</target>
        </trans-unit>
        <trans-unit id="088058a6e25e6f3d40c51284ef745bbe4eaebf6d" translate="yes" xml:space="preserve">
          <source>Predicate indicating whether the given index is the start of the encoding of a character in &lt;code&gt;s&lt;/code&gt; or not. If &lt;code&gt;isvalid(s, i)&lt;/code&gt; is true then &lt;code&gt;s[i]&lt;/code&gt; will return the character whose encoding starts at that index, if it's false, then &lt;code&gt;s[i]&lt;/code&gt; will raise an invalid index error or a bounds error depending on if &lt;code&gt;i&lt;/code&gt; is in bounds. In order for &lt;code&gt;isvalid(s, i)&lt;/code&gt; to be an O(1) function, the encoding of &lt;code&gt;s&lt;/code&gt; must be &lt;a href=&quot;https://en.wikipedia.org/wiki/Self-synchronizing_code&quot;&gt;self-synchronizing&lt;/a&gt; this is a basic assumption of Julia's generic string support.</source>
          <target state="translated">指定されたインデックスが &lt;code&gt;s&lt;/code&gt; 内の文字のエンコードの開始であるかどうかを示す述語。場合 &lt;code&gt;isvalid(s, i)&lt;/code&gt; 、その後真である &lt;code&gt;s[i]&lt;/code&gt; それの偽の、そして場合は、そのエンコードを開始し、そのインデックスの文字を返します &lt;code&gt;s[i]&lt;/code&gt; 場合によっては無効なインデックスエラーや境界エラーが発生します &lt;code&gt;i&lt;/code&gt; です境界。ためには &lt;code&gt;isvalid(s, i)&lt;/code&gt; O（1）関数と、のエンコーディング &lt;code&gt;s&lt;/code&gt; がでなければならない&lt;a href=&quot;https://en.wikipedia.org/wiki/Self-synchronizing_code&quot;&gt;自己同期&lt;/a&gt;これはジュリアの一般的な文字列のサポートの基本的な前提です。</target>
        </trans-unit>
        <trans-unit id="c3cce5b35e10e51f5d595dad1084cf540acae42d" translate="yes" xml:space="preserve">
          <source>Prescription Take</source>
          <target state="translated">処方箋を取る</target>
        </trans-unit>
        <trans-unit id="6f28b9e396de6e215b8f63d0049314e0ac5cd676" translate="yes" xml:space="preserve">
          <source>Prevents the compiler from inlining a function.</source>
          <target state="translated">コンパイラが関数をインライン化しないようにします。</target>
        </trans-unit>
        <trans-unit id="2533d6c74ece4f64b719ce0c4dd0cf2af0dfe36c" translate="yes" xml:space="preserve">
          <source>Prime</source>
          <target state="translated">Prime</target>
        </trans-unit>
        <trans-unit id="d8f0896601269b7c415369db5197a7aa8c4bfad4" translate="yes" xml:space="preserve">
          <source>Primitive Types</source>
          <target state="translated">原始型</target>
        </trans-unit>
        <trans-unit id="7989a97c2aad5db6498f6378083e04d2effda43a" translate="yes" xml:space="preserve">
          <source>Primitive type which wraps the native OS file descriptor. &lt;code&gt;RawFD&lt;/code&gt;s can be passed to methods like &lt;a href=&quot;#Base.stat&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; to discover information about the underlying file, and can also be used to open streams, with the &lt;code&gt;RawFD&lt;/code&gt; describing the OS file backing the stream.</source>
          <target state="translated">ネイティブOSファイル記述子をラップするプリミティブ型。 &lt;code&gt;RawFD&lt;/code&gt; を&lt;a href=&quot;#Base.stat&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;などのメソッドに渡して、基礎となるファイルに関する情報を検出したり、ストリームを開いたり、 &lt;code&gt;RawFD&lt;/code&gt; がストリームをサポートするOSファイルを記述したりするために使用できます。</target>
        </trans-unit>
        <trans-unit id="cae1d67061614e6e68235a99e099f815c1948965" translate="yes" xml:space="preserve">
          <source>Primitive types can also be declared parametrically. For example, pointers are represented as primitive types which would be declared in Julia like this:</source>
          <target state="translated">原始型はパラメトリックに宣言することもできます。例えば、ポインタはプリミティブ型として表現され、Juliaでは次のように宣言されます。</target>
        </trans-unit>
        <trans-unit id="ec65a740f5a00cafe7c7fb6de725fe369c87f0de" translate="yes" xml:space="preserve">
          <source>Princess</source>
          <target state="translated">Princess</target>
        </trans-unit>
        <trans-unit id="3de09746272a2bedea2f9b00be5ceb46c24b60d7" translate="yes" xml:space="preserve">
          <source>Print (using &lt;a href=&quot;#Base.print&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;) &lt;code&gt;xs&lt;/code&gt; followed by a newline. If &lt;code&gt;io&lt;/code&gt; is not supplied, prints to &lt;a href=&quot;#Base.stdout&quot;&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">（&lt;a href=&quot;#Base.print&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt;を使用して） &lt;code&gt;xs&lt;/code&gt; に続けて改行を印刷します。 &lt;code&gt;io&lt;/code&gt; が指定されていない場合、&lt;a href=&quot;#Base.stdout&quot;&gt; &lt;code&gt;stdout&lt;/code&gt; に出力し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="466ccdc9556b65394106ab9ca2e8e7918326cd51" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;args&lt;/code&gt; using C &lt;code&gt;printf&lt;/code&gt; style format specification string, with some caveats: &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; are printed consistently as &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; for flags &lt;code&gt;%a&lt;/code&gt;, &lt;code&gt;%A&lt;/code&gt;, &lt;code&gt;%e&lt;/code&gt;, &lt;code&gt;%E&lt;/code&gt;, &lt;code&gt;%f&lt;/code&gt;, &lt;code&gt;%F&lt;/code&gt;, &lt;code&gt;%g&lt;/code&gt;, and &lt;code&gt;%G&lt;/code&gt;. Furthermore, if a floating point number is equally close to the numeric values of two possible output strings, the output string further away from zero is chosen.</source>
          <target state="translated">印刷 &lt;code&gt;args&lt;/code&gt; C使用 &lt;code&gt;printf&lt;/code&gt; いくつかの警告と、スタイルフォーマット指定文字列を： &lt;code&gt;Inf&lt;/code&gt; のと &lt;code&gt;NaN&lt;/code&gt; はとして一貫して印刷され &lt;code&gt;Inf&lt;/code&gt; の及び &lt;code&gt;NaN&lt;/code&gt; のフラグを &lt;code&gt;%a&lt;/code&gt; 、 &lt;code&gt;%A&lt;/code&gt; 、 &lt;code&gt;%e&lt;/code&gt; 、 &lt;code&gt;%E&lt;/code&gt; 、 &lt;code&gt;%f&lt;/code&gt; 、 &lt;code&gt;%F&lt;/code&gt; 、 &lt;code&gt;%g&lt;/code&gt; 、および &lt;code&gt;%G&lt;/code&gt; 。さらに、浮動小数点数が2つの可能な出力文字列の数値に等しく近い場合、ゼロからさらに離れた出力文字列が選択されます。</target>
        </trans-unit>
        <trans-unit id="baa5144b37849d9188cd47fd809fe89518d10fa8" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;xs&lt;/code&gt; in a color specified as a symbol or integer, optionally in bold.</source>
          <target state="translated">シンボルまたは整数としてオプションで太字で指定された色で &lt;code&gt;xs&lt;/code&gt; を印刷します。</target>
        </trans-unit>
        <trans-unit id="e8b1acf3c9742cde4fdee751084ea4a64b0a31eb" translate="yes" xml:space="preserve">
          <source>Print information about the version of Julia in use. The output is controlled with boolean keyword arguments:</source>
          <target state="translated">使用中のJuliaのバージョンに関する情報を表示します。出力はブーリアンキーワード引数で制御されます。</target>
        </trans-unit>
        <trans-unit id="5bc32e9965eb75daafbf533abd187490a0cd8bf8" translate="yes" xml:space="preserve">
          <source>Print the shortest possible representation, with the minimum number of consecutive non-zero digits, of number &lt;code&gt;x&lt;/code&gt;, ensuring that it would parse to the exact same number.</source>
          <target state="translated">完全に同じ数に解析されるように、 &lt;code&gt;x&lt;/code&gt; の連続するゼロ以外の数字の最小数で可能な最短の表現を出力します。</target>
        </trans-unit>
        <trans-unit id="f079e11bf0eb9dd04b8f724d74ce3dfd9988d136" translate="yes" xml:space="preserve">
          <source>Print this message</source>
          <target state="translated">このメッセージを印刷する</target>
        </trans-unit>
        <trans-unit id="c65258234127c5931c1d9650614c394889a9603e" translate="yes" xml:space="preserve">
          <source>Print to a stream &lt;code&gt;io&lt;/code&gt;, or return a string &lt;code&gt;str&lt;/code&gt;, giving a brief description of a value. By default returns &lt;code&gt;string(typeof(x))&lt;/code&gt;, e.g. &lt;a href=&quot;../numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ストリーム &lt;code&gt;io&lt;/code&gt; に出力するか、文字列 &lt;code&gt;str&lt;/code&gt; を返し、値の簡単な説明を提供します。デフォルトでは &lt;code&gt;string(typeof(x))&lt;/code&gt; を返します（例：&lt;a href=&quot;../numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; )&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49c6710eb43a270c0d99f60d369594f6b1f09d42" translate="yes" xml:space="preserve">
          <source>Printf</source>
          <target state="translated">Printf</target>
        </trans-unit>
        <trans-unit id="7a00d274d29d51c272475f7893a60c10aabbdb67" translate="yes" xml:space="preserve">
          <source>Printing &lt;code&gt;nothing&lt;/code&gt; is not allowed and throws an error.</source>
          <target state="translated">&lt;code&gt;nothing&lt;/code&gt; 印刷できないため、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="917a4e5ab0ec0c6c9169e8af07ffb2e5bab64d3d" translate="yes" xml:space="preserve">
          <source>Prints lowered and type-inferred ASTs for the methods matching the given generic function and type signature to &lt;code&gt;io&lt;/code&gt; which defaults to &lt;code&gt;stdout&lt;/code&gt;. The ASTs are annotated in such a way as to cause &quot;non-leaf&quot; types to be emphasized (if color is available, displayed in red). This serves as a warning of potential type instability. Not all non-leaf types are particularly problematic for performance, so the results need to be used judiciously. In particular, unions containing either &lt;a href=&quot;../../base/base/index#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../base/constants/index#Core.nothing&quot;&gt;&lt;code&gt;nothing&lt;/code&gt;&lt;/a&gt; are displayed in yellow, since these are often intentional.</source>
          <target state="translated">指定されたジェネリック関数と型シグネチャに一致するメソッドの低下した型推論されたASTを、デフォルトで &lt;code&gt;stdout&lt;/code&gt; である &lt;code&gt;io&lt;/code&gt; に出力します。 ASTには、「非リーフ」タイプが強調されるように注釈が付けられます（色が利用可能な場合、赤で表示されます）。これは、型が不安定になる可能性の警告です。すべての非リーフタイプがパフォーマンスに特に問題があるわけではないため、結果は慎重に使用する必要があります。特に、&lt;a href=&quot;../../base/base/index#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../base/constants/index#Core.nothing&quot;&gt; &lt;code&gt;nothing&lt;/code&gt; &lt;/a&gt;も含まれていないユニオンは、意図的であることが多いため、黄色で表示されます。</target>
        </trans-unit>
        <trans-unit id="2e93b4220a5ead1092b73e40d2c1c6312b805101" translate="yes" xml:space="preserve">
          <source>Prints profiling results to &lt;code&gt;io&lt;/code&gt; (by default, &lt;code&gt;stdout&lt;/code&gt;). If you do not supply a &lt;code&gt;data&lt;/code&gt; vector, the internal buffer of accumulated backtraces will be used.</source>
          <target state="translated">プロファイリング結果を &lt;code&gt;io&lt;/code&gt; に &lt;code&gt;stdout&lt;/code&gt; します（デフォルトではstdout）。 &lt;code&gt;data&lt;/code&gt; ベクトルを指定しない場合、蓄積されたバックトレースの内部バッファーが使用されます。</target>
        </trans-unit>
        <trans-unit id="6e11e42762c9ec62fe84fbfcac52179154102bfb" translate="yes" xml:space="preserve">
          <source>Prints profiling results to &lt;code&gt;io&lt;/code&gt;. This variant is used to examine results exported by a previous call to &lt;a href=&quot;#Profile.retrieve&quot;&gt;&lt;code&gt;retrieve&lt;/code&gt;&lt;/a&gt;. Supply the vector &lt;code&gt;data&lt;/code&gt; of backtraces and a dictionary &lt;code&gt;lidict&lt;/code&gt; of line information.</source>
          <target state="translated">プロファイリング結果を &lt;code&gt;io&lt;/code&gt; に出力します。このバリアントは、前回の&lt;a href=&quot;#Profile.retrieve&quot;&gt; &lt;code&gt;retrieve&lt;/code&gt; の&lt;/a&gt;呼び出しでエクスポートされた結果を調べるために使用されます。バックトレースのベクター &lt;code&gt;data&lt;/code&gt; とライン情報のディクショナリ &lt;code&gt;lidict&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="dd19937d14097dc5cedeb2ddcc0046d7677b4861" translate="yes" xml:space="preserve">
          <source>Prints the LLVM bitcodes generated for running the method matching the given generic function and type signature to &lt;code&gt;io&lt;/code&gt;.</source>
          <target state="translated">指定されたジェネリック関数と型シグネチャに一致するメソッドを実行するために生成されたLLVMビットコードを &lt;code&gt;io&lt;/code&gt; に出力します。</target>
        </trans-unit>
        <trans-unit id="9ed15b7311dfeda635534f17924caf7b28c787d0" translate="yes" xml:space="preserve">
          <source>Prints the native assembly instructions generated for running the method matching the given generic function and type signature to &lt;code&gt;io&lt;/code&gt;. Switch assembly syntax using &lt;code&gt;syntax&lt;/code&gt; symbol parameter set to &lt;code&gt;:att&lt;/code&gt; for AT&amp;amp;T syntax or &lt;code&gt;:intel&lt;/code&gt; for Intel syntax. Keyword argument &lt;code&gt;debuginfo&lt;/code&gt; may be one of source (default) or none, to specify the verbosity of code comments.</source>
          <target state="translated">指定されたジェネリック関数と型シグネチャに一致するメソッドを実行するために生成されたネイティブアセンブリ命令を &lt;code&gt;io&lt;/code&gt; に出力します。AT＆T構文の場合は &lt;code&gt;:intel&lt;/code&gt; &lt;code&gt;:att&lt;/code&gt; に、Intel構文の場合は：intelに設定された &lt;code&gt;syntax&lt;/code&gt; シンボルパラメーターを使用してアセンブリ構文を切り替えます。キーワード引数 &lt;code&gt;debuginfo&lt;/code&gt; は、ソース（デフォルト）またはnoneのいずれかで、コードコメントの詳細度を指定します。</target>
        </trans-unit>
        <trans-unit id="5821c49d91326eba6c3cc8341f8830b829103c70" translate="yes" xml:space="preserve">
          <source>Prior to Julia 1.1, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;&amp;plusmn;Inf&lt;/code&gt; entries in &lt;code&gt;A&lt;/code&gt; were treated inconsistently.</source>
          <target state="translated">Julia 1.1より前は、 &lt;code&gt;A&lt;/code&gt; の &lt;code&gt;NaN&lt;/code&gt; および &lt;code&gt;&amp;plusmn;Inf&lt;/code&gt; エントリは一貫性のない方法で処理されていました。</target>
        </trans-unit>
        <trans-unit id="a6eb85b791c76af2e0001daa0833c451d061b84b" translate="yes" xml:space="preserve">
          <source>Prior to Julia 1.1, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;&amp;plusmn;Inf&lt;/code&gt; entries in &lt;code&gt;B&lt;/code&gt; were treated inconsistently.</source>
          <target state="translated">Julia 1.1以前は、 &lt;code&gt;B&lt;/code&gt; の &lt;code&gt;NaN&lt;/code&gt; および &lt;code&gt;&amp;plusmn;Inf&lt;/code&gt; エントリは一貫性のない方法で処理されていました。</target>
        </trans-unit>
        <trans-unit id="2e99568262e9c223ccd1536f5483dc5d089c33d1" translate="yes" xml:space="preserve">
          <source>Process 1 knew about the function &lt;code&gt;rand2&lt;/code&gt;, but process 2 did not.</source>
          <target state="translated">プロセス1は関数 &lt;code&gt;rand2&lt;/code&gt; を知っていましたが、プロセス2は知りませんでした。</target>
        </trans-unit>
        <trans-unit id="072e07fffe04049e674cf4594a9857aa10efdb36" translate="yes" xml:space="preserve">
          <source>ProcessFailedException</source>
          <target state="translated">ProcessFailedException</target>
        </trans-unit>
        <trans-unit id="847b2b1e980be5f3691091ca570ce94702e2e378" translate="yes" xml:space="preserve">
          <source>Processing events with AbstractLogger</source>
          <target state="translated">AbstractLogger でイベントを処理する</target>
        </trans-unit>
        <trans-unit id="180d062d29e391641bd4f444138c8bac8bf7661b" translate="yes" xml:space="preserve">
          <source>Processing log events</source>
          <target state="translated">ログイベントの処理</target>
        </trans-unit>
        <trans-unit id="b63923d9cf399142be3758c427b54b96f322aa95" translate="yes" xml:space="preserve">
          <source>Processing of events is performed by a &lt;em&gt;logger&lt;/em&gt;, which is the first piece of user configurable code to see the event. All loggers must be subtypes of &lt;a href=&quot;#Base.CoreLogging.AbstractLogger&quot;&gt;&lt;code&gt;AbstractLogger&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">イベントの処理は&lt;em&gt;ロガー&lt;/em&gt;によって実行されます。&lt;em&gt;ロガー&lt;/em&gt;は、イベントを確認するためのユーザー構成可能な最初のコードです。すべてのロガーは&lt;a href=&quot;#Base.CoreLogging.AbstractLogger&quot;&gt; &lt;code&gt;AbstractLogger&lt;/code&gt; の&lt;/a&gt;サブタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="328b233f3819b06964ffd32104ef381237e05e5e" translate="yes" xml:space="preserve">
          <source>Profile.@profile</source>
          <target state="translated">Profile.@profile</target>
        </trans-unit>
        <trans-unit id="b0511a881f26d87d6524199326dffa57780b707e" translate="yes" xml:space="preserve">
          <source>Profile.callers()</source>
          <target state="translated">Profile.callers()</target>
        </trans-unit>
        <trans-unit id="b96f691d0f2e169b71d3cd094bd8373a20d9a8a1" translate="yes" xml:space="preserve">
          <source>Profile.clear()</source>
          <target state="translated">Profile.clear()</target>
        </trans-unit>
        <trans-unit id="570dfef22de0a10782908887f6d179b9420b1507" translate="yes" xml:space="preserve">
          <source>Profile.clear_malloc_data()</source>
          <target state="translated">Profile.clear_malloc_data()</target>
        </trans-unit>
        <trans-unit id="043461f7208c6ed607932ec5680a053dc42f3e1b" translate="yes" xml:space="preserve">
          <source>Profile.fetch()</source>
          <target state="translated">Profile.fetch()</target>
        </trans-unit>
        <trans-unit id="e232a5a4623a1f66224599c2a220b86e7c9564c4" translate="yes" xml:space="preserve">
          <source>Profile.init()</source>
          <target state="translated">Profile.init()</target>
        </trans-unit>
        <trans-unit id="20ad785824a930b57a8093a64c483775ef59fa78" translate="yes" xml:space="preserve">
          <source>Profile.print()</source>
          <target state="translated">Profile.print()</target>
        </trans-unit>
        <trans-unit id="aea6f62a734ef1fbca7010e35963194758cdae6e" translate="yes" xml:space="preserve">
          <source>Profile.retrieve()</source>
          <target state="translated">Profile.retrieve()</target>
        </trans-unit>
        <trans-unit id="cea5295b78ec1b99a624dda73a7e6d10f18cdf3f" translate="yes" xml:space="preserve">
          <source>Profiling</source>
          <target state="translated">Profiling</target>
        </trans-unit>
        <trans-unit id="4648766cb458bfa40e8008c682998a212998b9be" translate="yes" xml:space="preserve">
          <source>Program representation</source>
          <target state="translated">プログラム表現</target>
        </trans-unit>
        <trans-unit id="3f750d85248e12d5eb40074ef5a79862f0f6e4d2" translate="yes" xml:space="preserve">
          <source>Project environments</source>
          <target state="translated">プロジェクト環境</target>
        </trans-unit>
        <trans-unit id="d890548f8e721f080954f7e97699947abfa45a76" translate="yes" xml:space="preserve">
          <source>Project environments provide &lt;strong&gt;reproducibility&lt;/strong&gt;. By checking a project environment into version control&amp;mdash;e.g. a git repository&amp;mdash;along with the rest of the project's source code, you can reproduce the exact state of the project and all of its dependencies. The manifest file, in particular, captures the exact version of every dependency, identified by a cryptographic hash of its source tree, which makes it possible for &lt;code&gt;Pkg&lt;/code&gt; to retrieve the correct versions and be sure that you are running the exact code that was recorded for all dependencies.</source>
          <target state="translated">プロジェクト環境は&lt;strong&gt;再現性を&lt;/strong&gt;提供&lt;strong&gt;し&lt;/strong&gt;ます。プロジェクト環境をバージョン管理（gitリポジトリなど）にチェックインすることにより、プロジェクトの残りのソースコードとともに、プロジェクトの正確な状態とそのすべての依存関係を再現できます。特にマニフェストファイルは、ソースツリーの暗号化ハッシュによって識別されるすべての依存関係の正確なバージョンをキャプチャします。これにより、 &lt;code&gt;Pkg&lt;/code&gt; が正しいバージョンを取得し、記録された正確なコードを実行していることを確認できます。すべての依存関係。</target>
        </trans-unit>
        <trans-unit id="bcab4b0c279ca4adda0fb7401eade75d1859b6f6" translate="yes" xml:space="preserve">
          <source>Projective</source>
          <target state="translated">Projective</target>
        </trans-unit>
        <trans-unit id="550ae25c2eeeb9636fbce6dc98229454c55c8b3a" translate="yes" xml:space="preserve">
          <source>Promotion</source>
          <target state="translated">Promotion</target>
        </trans-unit>
        <trans-unit id="c8df3ee251ca4e0004d82dcc9f4f912373def16a" translate="yes" xml:space="preserve">
          <source>Promotion refers to converting values of mixed types to a single common type. &lt;code&gt;promote_type&lt;/code&gt; represents the default promotion behavior in Julia when operators (usually mathematical) are given arguments of differing types. &lt;code&gt;promote_type&lt;/code&gt; generally tries to return a type which can at least approximate most values of either input type without excessively widening. Some loss is tolerated; for example, &lt;code&gt;promote_type(Int64, Float64)&lt;/code&gt; returns &lt;a href=&quot;../numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt; even though strictly, not all &lt;a href=&quot;../numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt; values can be represented exactly as &lt;code&gt;Float64&lt;/code&gt; values.</source>
          <target state="translated">昇格とは、混合タイプの値を単一の共通タイプに変換することを指します。 &lt;code&gt;promote_type&lt;/code&gt; は、演算子（通常は数学）に異なる型の引数が与えられた場合のJuliaのデフォルトのプロモーション動作を表します。 &lt;code&gt;promote_type&lt;/code&gt; 一般に、過度に拡大することなく、少なくともいずれかの入力タイプのほとんどの値を概算できるタイプを返そうとします。ある程度の損失は許容されます。たとえば、 &lt;code&gt;promote_type(Int64, Float64)&lt;/code&gt; は厳密には&lt;a href=&quot;../numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; を&lt;/a&gt;返しますが、厳密には、すべての&lt;a href=&quot;../numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; &lt;/a&gt;値が &lt;code&gt;Float64&lt;/code&gt; 値として正確に表現できるわけではありません。</target>
        </trans-unit>
        <trans-unit id="9cb42eecac3226b07e66f4c6fcac54ae71037829" translate="yes" xml:space="preserve">
          <source>Promotion refers to converting values of mixed types to a single common type. Although it is not strictly necessary, it is generally implied that the common type to which the values are converted can faithfully represent all of the original values. In this sense, the term &quot;promotion&quot; is appropriate since the values are converted to a &quot;greater&quot; type &amp;ndash; i.e. one which can represent all of the input values in a single common type. It is important, however, not to confuse this with object-oriented (structural) super-typing, or Julia's notion of abstract super-types: promotion has nothing to do with the type hierarchy, and everything to do with converting between alternate representations. For instance, although every &lt;a href=&quot;../../base/numbers/index#Core.Int32&quot;&gt;&lt;code&gt;Int32&lt;/code&gt;&lt;/a&gt; value can also be represented as a &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt; value, &lt;code&gt;Int32&lt;/code&gt; is not a subtype of &lt;code&gt;Float64&lt;/code&gt;.</source>
          <target state="translated">昇格とは、混合タイプの値を単一の共通タイプに変換することを指します。厳密に必要なわけではありませんが、値が変換される共通の型が元の値のすべてを忠実に表すことができることは一般的に暗示されています。この意味で、「プロモーション」という用語は、値が「より大きい」タイプ（つまり、すべての入力値を1つの共通のタイプで表すことができるタイプ）に変換されるため、適切です。ただし、これをオブジェクト指向（構造）スーパータイピング、またはジュリアの抽象スーパータイプの概念と混同しないことが重要です。プロモーションはタイプ階層とは関係がなく、代替表現間の変換とはすべて関係があります。たとえば、すべての&lt;a href=&quot;../../base/numbers/index#Core.Int32&quot;&gt; &lt;code&gt;Int32&lt;/code&gt; &lt;/a&gt;値は&lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt;値として表すこともできますが、 &lt;code&gt;Int32&lt;/code&gt; は &lt;code&gt;Float64&lt;/code&gt; のサブタイプではありません。</target>
        </trans-unit>
        <trans-unit id="5d4eba2b757850531d84c4acd246f2231fcb7b15" translate="yes" xml:space="preserve">
          <source>Promotion to a common &quot;greater&quot; type is performed in Julia by the &lt;a href=&quot;../../base/base/index#Base.promote&quot;&gt;&lt;code&gt;promote&lt;/code&gt;&lt;/a&gt; function, which takes any number of arguments, and returns a tuple of the same number of values, converted to a common type, or throws an exception if promotion is not possible. The most common use case for promotion is to convert numeric arguments to a common type:</source>
          <target state="translated">ジュリアでは一般的な「より大きい」タイプへの&lt;a href=&quot;../../base/base/index#Base.promote&quot;&gt; &lt;code&gt;promote&lt;/code&gt; &lt;/a&gt;は、任意の数の引数を取り、同じ数の値のタプルを返し、一般的なタイプに変換するか、昇格が不可能な場合に例外をスローするプロモート関数によってJuliaで実行されます。 。プロモーションの最も一般的な使用例は、数値引数を共通の型に変換することです。</target>
        </trans-unit>
        <trans-unit id="1d47c8cf231f97decf77b95f640c699913c3ff1d" translate="yes" xml:space="preserve">
          <source>Propagation of Missing Values</source>
          <target state="translated">欠損値の伝播</target>
        </trans-unit>
        <trans-unit id="a9dbc79587bf2a4ee43fe6543c35e9075ccebd79" translate="yes" xml:space="preserve">
          <source>Properties of &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; のプロパティ</target>
        </trans-unit>
        <trans-unit id="1588c397df6327df5c5ffc85f0bb5b03a4796828" translate="yes" xml:space="preserve">
          <source>Properties of Types</source>
          <target state="translated">型のプロパティ</target>
        </trans-unit>
        <trans-unit id="4c2448e8565be3f3b47976c7593c6fed88362ceb" translate="yes" xml:space="preserve">
          <source>Property Line</source>
          <target state="translated">プロパティライン</target>
        </trans-unit>
        <trans-unit id="f545d619319dec606f3270afba4fe442b8306e86" translate="yes" xml:space="preserve">
          <source>Proportion</source>
          <target state="translated">Proportion</target>
        </trans-unit>
        <trans-unit id="dd1e72139dd2183bde5f31513aa38cdcd8ca7340" translate="yes" xml:space="preserve">
          <source>Proportional To</source>
          <target state="translated">比例</target>
        </trans-unit>
        <trans-unit id="3bcce55c365e0954af5202cab54e9452b162caee" translate="yes" xml:space="preserve">
          <source>Provide hints to related functions.</source>
          <target state="translated">関連機能へのヒントを提供する。</target>
        </trans-unit>
        <trans-unit id="b047a3bd3488b37fdb57c14150aa545e79c55f0e" translate="yes" xml:space="preserve">
          <source>Provide information allowing custom types to implement the function in an &lt;code&gt;# Implementation&lt;/code&gt; section. These implementation details intended for developers rather than users, explaining e.g. which functions should be overridden and which functions automatically use appropriate fallbacks, are better kept separate from the main description of the function's behavior.</source>
          <target state="translated">&lt;code&gt;# Implementation&lt;/code&gt; セクションで、カスタム型が関数を実装できるようにする情報を提供します。ユーザーではなく開発者向けのこれらの実装の詳細、たとえば、オーバーライドする必要のある関数や、適切なフォールバックを自動的に使用する関数などを説明することは、関数の動作のメインの説明とは別にする方がよいでしょう。</target>
        </trans-unit>
        <trans-unit id="78f3d7ae0d654732f939af99fd5d657b68bdfaa6" translate="yes" xml:space="preserve">
          <source>Provide methods for retrieving information about hardware and the operating system.</source>
          <target state="translated">ハードウェアおよびオペレーティングシステムに関する情報を取得するための方法を提供する。</target>
        </trans-unit>
        <trans-unit id="021a77427667254a87edc039f4b86f5570f6e4f1" translate="yes" xml:space="preserve">
          <source>Provided there is enough memory for the copies, the cost of copying the view to an array is far outweighed by the speed boost from doing the matrix multiplication on a contiguous array.</source>
          <target state="translated">コピーするのに十分なメモリがあれば,ビューを配列にコピーするコストは,連続した配列上で行列の乗算を行うことによる速度の向上をはるかに上回ります.</target>
        </trans-unit>
        <trans-unit id="77567f5c656085a4057f468c2008ddfba40d9c29" translate="yes" xml:space="preserve">
          <source>Providing keyword argument names requires Julia 1.2 or later.</source>
          <target state="translated">キーワード引数名を提供するには、Julia 1.2以降が必要です。</target>
        </trans-unit>
        <trans-unit id="e0c8526a26e2cb9e8aa89d2fb24766087994f2e6" translate="yes" xml:space="preserve">
          <source>Providing the differences between the file as it exists in HEAD and the index, and providing the differences between the index and the working directory. Matches the &lt;code&gt;git_status_entry&lt;/code&gt; struct.</source>
          <target state="translated">HEADとインデックスに存在するファイルの違いを提供し、インデックスと作業ディレクトリの違いを提供します。 &lt;code&gt;git_status_entry&lt;/code&gt; 構造体と一致します。</target>
        </trans-unit>
        <trans-unit id="589d9694c9cf672bcf584e29bd406a2be2d905b9" translate="yes" xml:space="preserve">
          <source>Public Address Loudspeaker</source>
          <target state="translated">パブリックアドレス拡声器</target>
        </trans-unit>
        <trans-unit id="68fc7bd4bc44e3818645b5f17ee1089ffb95b680" translate="yes" xml:space="preserve">
          <source>Punctuation</source>
          <target state="translated">Punctuation</target>
        </trans-unit>
        <trans-unit id="e192e137c4125be6e9fd75c8ab8e836b1f1936a4" translate="yes" xml:space="preserve">
          <source>Purple Heart</source>
          <target state="translated">パープルハート</target>
        </trans-unit>
        <trans-unit id="801ad0d72deeba3090a99bed849a9538739f1726" translate="yes" xml:space="preserve">
          <source>Purse</source>
          <target state="translated">Purse</target>
        </trans-unit>
        <trans-unit id="c9c83a03b90806ea88169c98ede1cfc25b32f84d" translate="yes" xml:space="preserve">
          <source>Push the HEAD commit and its ancestors onto the &lt;a href=&quot;#LibGit2.GitRevWalker&quot;&gt;&lt;code&gt;GitRevWalker&lt;/code&gt;&lt;/a&gt;&lt;code&gt;w&lt;/code&gt;. This ensures that HEAD and all its ancestor commits will be encountered during the walk.</source>
          <target state="translated">HEADコミットとその祖先を&lt;a href=&quot;#LibGit2.GitRevWalker&quot;&gt; &lt;code&gt;GitRevWalker&lt;/code&gt; &lt;/a&gt; &lt;code&gt;w&lt;/code&gt; にプッシュします。これにより、ウォーク中にHEADとそのすべての祖先コミットが確実に検出されます。</target>
        </trans-unit>
        <trans-unit id="1c606672bfb5994d6873bebe8f2f8cdc455cfdc6" translate="yes" xml:space="preserve">
          <source>Push to the specified &lt;code&gt;rmt&lt;/code&gt; remote git repository, using &lt;code&gt;refspecs&lt;/code&gt; to determine which remote branch(es) to push to. The keyword arguments are:</source>
          <target state="translated">&lt;code&gt;refspecs&lt;/code&gt; を使用して、指定した &lt;code&gt;rmt&lt;/code&gt; リモートgitリポジトリにプッシュし、プッシュするリモートブランチを決定します。キーワード引数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c41b7f47e59b4a65a3372e37a0a98df7389b041d" translate="yes" xml:space="preserve">
          <source>Pushes a new display &lt;code&gt;d&lt;/code&gt; on top of the global display-backend stack. Calling &lt;code&gt;display(x)&lt;/code&gt; or &lt;code&gt;display(mime, x)&lt;/code&gt; will display &lt;code&gt;x&lt;/code&gt; on the topmost compatible backend in the stack (i.e., the topmost backend that does not throw a &lt;a href=&quot;../base/index#Core.MethodError&quot;&gt;&lt;code&gt;MethodError&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">新しいディスプレイ &lt;code&gt;d&lt;/code&gt; をグローバルディスプレイバックエンドスタックの上にプッシュします。呼び出し &lt;code&gt;display(x)&lt;/code&gt; または &lt;code&gt;display(mime, x)&lt;/code&gt; 表示される &lt;code&gt;x&lt;/code&gt; スタックの最上位互換のバックエンド（スローしませんつまり、一番上のバックエンドで&lt;a href=&quot;../base/index#Core.MethodError&quot;&gt; &lt;code&gt;MethodError&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0b86c6512857adc90a85b47d750e296a43e408b0" translate="yes" xml:space="preserve">
          <source>Pushes updates to an upstream of &lt;code&gt;repo&lt;/code&gt;.</source>
          <target state="translated">更新を &lt;code&gt;repo&lt;/code&gt; 上流にプッシュします。</target>
        </trans-unit>
        <trans-unit id="0b61ad9b562d7faab530b30abab1bede869128e7" translate="yes" xml:space="preserve">
          <source>Pushpin</source>
          <target state="translated">Pushpin</target>
        </trans-unit>
        <trans-unit id="224eeff5c03a006234b112c40dab57c73322a3a5" translate="yes" xml:space="preserve">
          <source>Put Litter In Its Place Symbol</source>
          <target state="translated">リターをその場所に置く シンボル</target>
        </trans-unit>
        <trans-unit id="af66a13cae9ccbe6a6185c1909095cead240a8c6" translate="yes" xml:space="preserve">
          <source>Put your code in a module somewhere on your load path. There are several options for achieving this, of which two recommended choices are:</source>
          <target state="translated">コードをロードパス上のどこかのモジュールに入れてください。これを実現するためにはいくつかのオプションがありますが、そのうちの2つのオプションをお勧めします。</target>
        </trans-unit>
        <trans-unit id="07f7dc34ffbea689a6ce2f9423dfd1ad3f5cd178" translate="yes" xml:space="preserve">
          <source>QR (see &lt;a href=&quot;#LinearAlgebra.qr&quot;&gt;&lt;code&gt;qr&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">QR（&lt;a href=&quot;#LinearAlgebra.qr&quot;&gt; &lt;code&gt;qr&lt;/code&gt; を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="a328c9f83c03dcc2f68da7e64cb0df3c225c0bf1" translate="yes" xml:space="preserve">
          <source>QR factorization</source>
          <target state="translated">QR因数分解</target>
        </trans-unit>
        <trans-unit id="c6aa11a31c0c87996a0bde8245cbf27bc735ebb9" translate="yes" xml:space="preserve">
          <source>Quadruple Integral Operator</source>
          <target state="translated">四重積分演算子</target>
        </trans-unit>
        <trans-unit id="4db305a72ce557bd20a20693c5971fde38c5622f" translate="yes" xml:space="preserve">
          <source>Quadruple Prime</source>
          <target state="translated">四倍長素数</target>
        </trans-unit>
        <trans-unit id="b3600a25053648eccc659de53af2aebc454445c9" translate="yes" xml:space="preserve">
          <source>Quantiles are computed via linear interpolation between the points &lt;code&gt;((k-1)/(n-1), v[k])&lt;/code&gt;, for &lt;code&gt;k = 1:n&lt;/code&gt; where &lt;code&gt;n = length(itr)&lt;/code&gt;. This corresponds to Definition 7 of Hyndman and Fan (1996), and is the same as the R default.</source>
          <target state="translated">分位点は、点間の線形補間によって計算されます &lt;code&gt;((k-1)/(n-1), v[k])&lt;/code&gt; 、 &lt;code&gt;k = 1:n&lt;/code&gt; 、ここで &lt;code&gt;n = length(itr)&lt;/code&gt; 。これは、Hyndman and Fan（1996）の定義7に対応し、Rのデフォルトと同じです。</target>
        </trans-unit>
        <trans-unit id="5b06c372e4d10f6fa928cc46ca42b3aa1bc6f32f" translate="yes" xml:space="preserve">
          <source>Quantiles are computed via linear interpolation between the points &lt;code&gt;((k-1)/(n-1), v[k])&lt;/code&gt;, for &lt;code&gt;k = 1:n&lt;/code&gt; where &lt;code&gt;n = length(v)&lt;/code&gt;. This corresponds to Definition 7 of Hyndman and Fan (1996), and is the same as the R default.</source>
          <target state="translated">クォンタイルは、ポイント間の線形補間によって計算されます &lt;code&gt;((k-1)/(n-1), v[k])&lt;/code&gt; （ &lt;code&gt;k = 1:n&lt;/code&gt; 、 &lt;code&gt;n = length(v)&lt;/code&gt; 。これは、Hyndman and Fan（1996）の定義7に対応し、Rのデフォルトと同じです。</target>
        </trans-unit>
        <trans-unit id="520f02095ecc4924b83654c1596facee53b2af2b" translate="yes" xml:space="preserve">
          <source>Quarter Note</source>
          <target state="translated">四季報</target>
        </trans-unit>
        <trans-unit id="12a51854b3099f964ccf149a644954fc44681f9d" translate="yes" xml:space="preserve">
          <source>Quaternion Integral Operator</source>
          <target state="translated">クオータニオン積分演算子</target>
        </trans-unit>
        <trans-unit id="1c0a76c63b7837def31b788ba80c433d6f2e365d" translate="yes" xml:space="preserve">
          <source>Query Functions</source>
          <target state="translated">クエリ関数</target>
        </trans-unit>
        <trans-unit id="f27dd6c473df053cb0f3b4522081c0b72025f044" translate="yes" xml:space="preserve">
          <source>Query functions provide calendrical information about a &lt;a href=&quot;#Dates.TimeType&quot;&gt;&lt;code&gt;TimeType&lt;/code&gt;&lt;/a&gt;. They include information about the day of the week:</source>
          <target state="translated">クエリ関数は、&lt;a href=&quot;#Dates.TimeType&quot;&gt; &lt;code&gt;TimeType&lt;/code&gt; &lt;/a&gt;に関するカレンダー情報を提供します。曜日に関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="d738e229a540e63ec6b1ca5ab73e42071d227c36" translate="yes" xml:space="preserve">
          <source>Questioned Equal To</source>
          <target state="translated">疑問視されたイコール</target>
        </trans-unit>
        <trans-unit id="d7ede6b6a0adbf8c2fd6a7854c024b78e51b8055" translate="yes" xml:space="preserve">
          <source>Quiet startup: no banner, suppress REPL warnings</source>
          <target state="translated">静かな起動:バナーなし、REPL警告の抑制</target>
        </trans-unit>
        <trans-unit id="0bd56abe68f4f5c82d0323323d9de8784d6837c8" translate="yes" xml:space="preserve">
          <source>QuoteNode</source>
          <target state="translated">QuoteNode</target>
        </trans-unit>
        <trans-unit id="60fefb29eda0237f92306cb85899330ca8b230ee" translate="yes" xml:space="preserve">
          <source>Quoting</source>
          <target state="translated">Quoting</target>
        </trans-unit>
        <trans-unit id="eadacdda0a50e23b60ae3f43146e4ec38a6ccce3" translate="yes" xml:space="preserve">
          <source>R (range)</source>
          <target state="translated">R(レンジ</target>
        </trans-unit>
        <trans-unit id="0b8b91a55bff2275cca46dff785ff1b22404f368" translate="yes" xml:space="preserve">
          <source>R Schreiber and C Van Loan, &quot;A storage-efficient WY representation for products of Householder transformations&quot;, SIAM J Sci Stat Comput 10 (1989), 53-57. &lt;a href=&quot;https://doi.org/10.1137/0910005&quot;&gt;doi:10.1137/0910005&lt;/a&gt;</source>
          <target state="translated">R SchreiberおよびC Van Loan、「住宅所有者変換の製品のストレージ効率の良いWY表現」、SIAM J Sci Stat Comput 10（1989）、53-57。&lt;a href=&quot;https://doi.org/10.1137/0910005&quot;&gt;doi：10.1137 / 0910005&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0050fd0081021d63ce15da5f8a0b7134e39d9dbf" translate="yes" xml:space="preserve">
          <source>REPL formatting</source>
          <target state="translated">REPLフォーマット</target>
        </trans-unit>
        <trans-unit id="dc2ca6467dc0fa813827486cc0c47bd6f4d1d86e" translate="yes" xml:space="preserve">
          <source>REPL-based workflow</source>
          <target state="translated">REPLベースのワークフロー</target>
        </trans-unit>
        <trans-unit id="29f716260a7733eb00cd1083b6e0d754c8d01ffc" translate="yes" xml:space="preserve">
          <source>Rabbit</source>
          <target state="translated">Rabbit</target>
        </trans-unit>
        <trans-unit id="887cacaacb80e0846c844e20d6552ba730185533" translate="yes" xml:space="preserve">
          <source>Rabbit Face</source>
          <target state="translated">ラビットフェイス</target>
        </trans-unit>
        <trans-unit id="1645b3332fe6d5e706dc21d529ce795209112561" translate="yes" xml:space="preserve">
          <source>Radical Symbol Bottom</source>
          <target state="translated">ラディカルシンボル下部</target>
        </trans-unit>
        <trans-unit id="b11bf19e3f65b4a1ada383e41f26dab5c503940e" translate="yes" xml:space="preserve">
          <source>Radio</source>
          <target state="translated">Radio</target>
        </trans-unit>
        <trans-unit id="e26abc17fd68ace0b9c7ecfbea284870967ddce1" translate="yes" xml:space="preserve">
          <source>Radio Button</source>
          <target state="translated">ラジオボタン</target>
        </trans-unit>
        <trans-unit id="45db5dfd84e7d890cc134a884a23ba18e507b879" translate="yes" xml:space="preserve">
          <source>RadioMenu</source>
          <target state="translated">RadioMenu</target>
        </trans-unit>
        <trans-unit id="c958c58bcd5c608ab0f837fbc7ce7e7f1a0f7dd4" translate="yes" xml:space="preserve">
          <source>Railway Car</source>
          <target state="translated">鉄道車両</target>
        </trans-unit>
        <trans-unit id="b4a9395d25398654fd5d000e4b82a1d8273339bd" translate="yes" xml:space="preserve">
          <source>Rainbow</source>
          <target state="translated">Rainbow</target>
        </trans-unit>
        <trans-unit id="5ff8acb07beb209b56e6b2c8fc9ba54a3ac70c2e" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;ErrorException&lt;/code&gt; with the given message.</source>
          <target state="translated">レイズ &lt;code&gt;ErrorException&lt;/code&gt; を与えられたメッセージを。</target>
        </trans-unit>
        <trans-unit id="0e956899f7af913caf81df212d75c5bb087b345f" translate="yes" xml:space="preserve">
          <source>Raised Fist</source>
          <target state="translated">レイズドフィスト</target>
        </trans-unit>
        <trans-unit id="aac0289649b68a739ce5622a310cfdde3721b308" translate="yes" xml:space="preserve">
          <source>Raised Hand</source>
          <target state="translated">レイズドハンド</target>
        </trans-unit>
        <trans-unit id="7c3be08d2353d95a6ee8e87097e238cb09c2b93d" translate="yes" xml:space="preserve">
          <source>Raises a &lt;code&gt;SystemError&lt;/code&gt; for &lt;code&gt;errno&lt;/code&gt; with the descriptive string &lt;code&gt;sysfunc&lt;/code&gt; if &lt;code&gt;iftrue&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">調達 &lt;code&gt;SystemError&lt;/code&gt; ため &lt;code&gt;errno&lt;/code&gt; 記述文字列で &lt;code&gt;sysfunc&lt;/code&gt; 場合 &lt;code&gt;iftrue&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c06b087876f86211ebe585cb033bc02e51206ab8" translate="yes" xml:space="preserve">
          <source>Ram</source>
          <target state="translated">Ram</target>
        </trans-unit>
        <trans-unit id="3061bd379d8f3565753f638c056b711fd4433107" translate="yes" xml:space="preserve">
          <source>Random Numbers</source>
          <target state="translated">乱数</target>
        </trans-unit>
        <trans-unit id="4afb5eabfaae4fdf21c9085ac24fb69910d1cf2d" translate="yes" xml:space="preserve">
          <source>Random generation functions</source>
          <target state="translated">ランダム生成機能</target>
        </trans-unit>
        <trans-unit id="e299b438115610a0763262eb715df976566e1027" translate="yes" xml:space="preserve">
          <source>Random number generation in Julia uses the &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/#dSFMT&quot;&gt;Mersenne Twister library&lt;/a&gt; via &lt;code&gt;MersenneTwister&lt;/code&gt; objects. Julia has a global RNG, which is used by default. Other RNG types can be plugged in by inheriting the &lt;code&gt;AbstractRNG&lt;/code&gt; type; they can then be used to have multiple streams of random numbers. Besides &lt;code&gt;MersenneTwister&lt;/code&gt;, Julia also provides the &lt;code&gt;RandomDevice&lt;/code&gt; RNG type, which is a wrapper over the OS provided entropy.</source>
          <target state="translated">Juliaでの乱数生成では、 &lt;code&gt;MersenneTwister&lt;/code&gt; オブジェクトを介して&lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/#dSFMT&quot;&gt;Mersenne Twisterライブラリ&lt;/a&gt;を使用します。Juliaには、デフォルトで使用されるグローバルRNGがあります。他のRNGタイプは、 &lt;code&gt;AbstractRNG&lt;/code&gt; タイプを継承することでプラグインできます。次に、乱数の複数のストリームを使用することができます。 &lt;code&gt;RandomDevice&lt;/code&gt; は &lt;code&gt;MersenneTwister&lt;/code&gt; に加えて、OSが提供するエントロピーのラッパーであるRandomDevice RNGタイプも提供します。</target>
        </trans-unit>
        <trans-unit id="a7b8833e499dbaa71b51c5c68a1ac16f9ec8789e" translate="yes" xml:space="preserve">
          <source>Random numbers module</source>
          <target state="translated">乱数モジュール</target>
        </trans-unit>
        <trans-unit id="28259ff960b514ef0a477cfd8d3fd07e7d9fad31" translate="yes" xml:space="preserve">
          <source>Random.AbstractRNG</source>
          <target state="translated">Random.AbstractRNG</target>
        </trans-unit>
        <trans-unit id="a702418e400bc47494bc4f67ee5a8511ad635f84" translate="yes" xml:space="preserve">
          <source>Random.MersenneTwister</source>
          <target state="translated">Random.MersenneTwister</target>
        </trans-unit>
        <trans-unit id="9fe0112e7037e44790c222e46ed68dd3866556b7" translate="yes" xml:space="preserve">
          <source>Random.Random</source>
          <target state="translated">Random.Random</target>
        </trans-unit>
        <trans-unit id="d528d667af1564d3d36d7eb2397c9b0d78c85ddc" translate="yes" xml:space="preserve">
          <source>Random.RandomDevice</source>
          <target state="translated">Random.RandomDevice</target>
        </trans-unit>
        <trans-unit id="10cac7a5831154926472fb7c098bb152163a739d" translate="yes" xml:space="preserve">
          <source>Random.bitrand()</source>
          <target state="translated">Random.bitrand()</target>
        </trans-unit>
        <trans-unit id="0fb0cb345f7b2d8213d37dd9d272f55af92342b6" translate="yes" xml:space="preserve">
          <source>Random.rand!()</source>
          <target state="translated">Random.rand!()</target>
        </trans-unit>
        <trans-unit id="e08e6ba83407584adab7afcd660768c3d540dc1a" translate="yes" xml:space="preserve">
          <source>Random.randcycle!()</source>
          <target state="translated">Random.randcycle!()</target>
        </trans-unit>
        <trans-unit id="18b048f3bb8d7f549c8de9fc78d13f3b36231c68" translate="yes" xml:space="preserve">
          <source>Random.randcycle()</source>
          <target state="translated">Random.randcycle()</target>
        </trans-unit>
        <trans-unit id="d8678dbe33b9ce1e6f3cb58943fa770285f720fb" translate="yes" xml:space="preserve">
          <source>Random.randexp!()</source>
          <target state="translated">Random.randexp!()</target>
        </trans-unit>
        <trans-unit id="eefb8c7f7650ba2b487ff7969e896c7a055b9d9a" translate="yes" xml:space="preserve">
          <source>Random.randexp()</source>
          <target state="translated">Random.randexp()</target>
        </trans-unit>
        <trans-unit id="bb64f158cf84467090a065c9286b2282614a3be0" translate="yes" xml:space="preserve">
          <source>Random.randn!()</source>
          <target state="translated">Random.randn!()</target>
        </trans-unit>
        <trans-unit id="39a2660e956361591d0fb563c60d8fd85fbe0799" translate="yes" xml:space="preserve">
          <source>Random.randperm!()</source>
          <target state="translated">Random.randperm!()</target>
        </trans-unit>
        <trans-unit id="ca78e024f9d6b3e8df45604ebb0a70220b1d8755" translate="yes" xml:space="preserve">
          <source>Random.randperm()</source>
          <target state="translated">Random.randperm()</target>
        </trans-unit>
        <trans-unit id="36b7d9aeabb6ca07f30014ce231af2e051503392" translate="yes" xml:space="preserve">
          <source>Random.randstring()</source>
          <target state="translated">Random.randstring()</target>
        </trans-unit>
        <trans-unit id="f2a70fd0c07078374403633dea9a6de60c590f66" translate="yes" xml:space="preserve">
          <source>Random.randsubseq!()</source>
          <target state="translated">Random.randsubseq!()</target>
        </trans-unit>
        <trans-unit id="0b159722e7613f82ae8c8db236677f35caaf4ef8" translate="yes" xml:space="preserve">
          <source>Random.randsubseq()</source>
          <target state="translated">Random.randsubseq()</target>
        </trans-unit>
        <trans-unit id="4bd8eaf8b57464959bd0a6a7e317b9060851baea" translate="yes" xml:space="preserve">
          <source>Random.seed!()</source>
          <target state="translated">Random.seed!()</target>
        </trans-unit>
        <trans-unit id="8cc332dbeeb10cf009e9b0b78fb47c29f54fe9e0" translate="yes" xml:space="preserve">
          <source>Random.shuffle!()</source>
          <target state="translated">Random.shuffle!()</target>
        </trans-unit>
        <trans-unit id="f3eb8a773ff63a83df388fc9e07d68dd20fbc199" translate="yes" xml:space="preserve">
          <source>Random.shuffle()</source>
          <target state="translated">Random.shuffle()</target>
        </trans-unit>
        <trans-unit id="50d57fcc4b77bae547c3dad2711c4195b791f932" translate="yes" xml:space="preserve">
          <source>Range indexing makes a copy of the selected part of the original string. Alternatively, it is possible to create a view into a string using the type &lt;a href=&quot;../../base/strings/index#Base.SubString&quot;&gt;&lt;code&gt;SubString&lt;/code&gt;&lt;/a&gt;, for example:</source>
          <target state="translated">範囲索引付けは、元の文字列の選択された部分のコピーを作成します。または、タイプ&lt;a href=&quot;../../base/strings/index#Base.SubString&quot;&gt; &lt;code&gt;SubString&lt;/code&gt; &lt;/a&gt;を使用して文字列にビューを作成することもできます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="136fdb6a0365dee359d3fd8d4f357eee74f5d3f0" translate="yes" xml:space="preserve">
          <source>Range operator. &lt;code&gt;a:b&lt;/code&gt; constructs a range from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; with a step size of 1 (a &lt;a href=&quot;../collections/index#Base.UnitRange&quot;&gt;&lt;code&gt;UnitRange&lt;/code&gt;&lt;/a&gt;) , and &lt;code&gt;a:s:b&lt;/code&gt; is similar but uses a step size of &lt;code&gt;s&lt;/code&gt; (a &lt;a href=&quot;../collections/index#Base.StepRange&quot;&gt;&lt;code&gt;StepRange&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">範囲演算子。 &lt;code&gt;a:b&lt;/code&gt; は &lt;code&gt;a&lt;/code&gt; から &lt;code&gt;b&lt;/code&gt; までのステップサイズ1（a &lt;a href=&quot;../collections/index#Base.UnitRange&quot;&gt; &lt;code&gt;UnitRange&lt;/code&gt; &lt;/a&gt;）の範囲を作成します。a &lt;code&gt;a:s:b&lt;/code&gt; も同様ですが、ステップサイズ &lt;code&gt;s&lt;/code&gt; （a &lt;a href=&quot;../collections/index#Base.StepRange&quot;&gt; &lt;code&gt;StepRange&lt;/code&gt; &lt;/a&gt;）を使用します。</target>
        </trans-unit>
        <trans-unit id="d872fec20a4aa5e1dce3415e4d06ff33c89f7184" translate="yes" xml:space="preserve">
          <source>Ranges in generators and comprehensions can depend on previous ranges by writing multiple &lt;code&gt;for&lt;/code&gt; keywords:</source>
          <target state="translated">ジェネレータと内包の範囲は &lt;code&gt;for&lt;/code&gt; キーワードに複数を記述することにより、以前の範囲に依存できます。</target>
        </trans-unit>
        <trans-unit id="2d64e75807a0bcf7c8e4c6424d6933531c01c6fd" translate="yes" xml:space="preserve">
          <source>Ranges like &lt;code&gt;a:c&lt;/code&gt; or &lt;code&gt;a:b:c&lt;/code&gt;, which select contiguous or strided subsections from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;c&lt;/code&gt; (inclusive)</source>
          <target state="translated">以下のような範囲 &lt;code&gt;a:c&lt;/code&gt; または &lt;code&gt;a:b:c&lt;/code&gt; から連続又はストライドのサブセクションを選択する &lt;code&gt;c&lt;/code&gt; （包括的） &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c353affc5bdb8caad4b540cd769d2486d3f5f78" translate="yes" xml:space="preserve">
          <source>Ranges with elements of type &lt;code&gt;T&lt;/code&gt; with spacing of type &lt;code&gt;S&lt;/code&gt;. The step between each element is constant, and the range is defined in terms of a &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; of type &lt;code&gt;T&lt;/code&gt; and a &lt;code&gt;step&lt;/code&gt; of type &lt;code&gt;S&lt;/code&gt;. Neither &lt;code&gt;T&lt;/code&gt; nor &lt;code&gt;S&lt;/code&gt; should be floating point types. The syntax &lt;code&gt;a:b:c&lt;/code&gt; with &lt;code&gt;b &amp;gt; 1&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; all integers creates a &lt;code&gt;StepRange&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 型の要素と &lt;code&gt;S&lt;/code&gt; 型の間隔を持つ要素の範囲。各要素間のステップは一定であり、範囲はタイプ &lt;code&gt;T&lt;/code&gt; の &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;stop&lt;/code&gt; 、およびタイプ &lt;code&gt;S&lt;/code&gt; の &lt;code&gt;step&lt;/code&gt; に関して定義されます。 &lt;code&gt;T&lt;/code&gt; も &lt;code&gt;S&lt;/code&gt; も浮動小数点型であってはなりません。構文 &lt;code&gt;a:b:c&lt;/code&gt; と &lt;code&gt;b &amp;gt; 1&lt;/code&gt; および &lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;c&lt;/code&gt; のすべての整数は、 &lt;code&gt;StepRange&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="2e4404f51059cf78656a77983fad5c43b0d9c714" translate="yes" xml:space="preserve">
          <source>Rank-1 update of the matrix &lt;code&gt;A&lt;/code&gt; with vectors &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; as &lt;code&gt;alpha*x*y' + A&lt;/code&gt;.</source>
          <target state="translated">ベクトル &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; が &lt;code&gt;alpha*x*y' + A&lt;/code&gt; である行列 &lt;code&gt;A&lt;/code&gt; のランク1更新。</target>
        </trans-unit>
        <trans-unit id="c6021dc16e1cbc1510f4cec43386d5d28ad5d623" translate="yes" xml:space="preserve">
          <source>Rank-1 update of the symmetric matrix &lt;code&gt;A&lt;/code&gt; with vector &lt;code&gt;x&lt;/code&gt; as &lt;code&gt;alpha*x*transpose(x) + A&lt;/code&gt;. &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;uplo&lt;/code&gt;&lt;/a&gt; controls which triangle of &lt;code&gt;A&lt;/code&gt; is updated. Returns &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">ベクトル &lt;code&gt;x&lt;/code&gt; が &lt;code&gt;alpha*x*transpose(x) + A&lt;/code&gt; である対称行列 &lt;code&gt;A&lt;/code&gt; のランク1更新。&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;uplo&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;A&lt;/code&gt; のどの三角形を更新するかを制御します。 &lt;code&gt;A&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a786d36cb8135a8f2b53c2a0f1c38bfbc21467be" translate="yes" xml:space="preserve">
          <source>Rank-k update of the symmetric matrix &lt;code&gt;C&lt;/code&gt; as &lt;code&gt;alpha*A*transpose(A) + beta*C&lt;/code&gt; or &lt;code&gt;alpha*transpose(A)*A + beta*C&lt;/code&gt; according to &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt;. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;uplo&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;C&lt;/code&gt; is used. Returns &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;trans&lt;/code&gt; &lt;/a&gt;に従い、 &lt;code&gt;alpha*A*transpose(A) + beta*C&lt;/code&gt; または &lt;code&gt;alpha*transpose(A)*A + beta*C&lt;/code&gt; としての対称行列 &lt;code&gt;C&lt;/code&gt; のランクk更新。のみ&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;uplo&lt;/code&gt; &lt;/a&gt;の三角形 &lt;code&gt;C&lt;/code&gt; が使用されます。 &lt;code&gt;C&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="34aefad9782a2a0bbf99538f72ea30d068aceacc" translate="yes" xml:space="preserve">
          <source>Rat</source>
          <target state="translated">Rat</target>
        </trans-unit>
        <trans-unit id="28f8f8c0856fcd5b648ff5e28234ee17ac5b1a2e" translate="yes" xml:space="preserve">
          <source>Rational</source>
          <target state="translated">Rational</target>
        </trans-unit>
        <trans-unit id="1716affaccbd0b5442364e3cd09d20bff381ef3b" translate="yes" xml:space="preserve">
          <source>Rational Numbers</source>
          <target state="translated">合理的な数字</target>
        </trans-unit>
        <trans-unit id="7a6435f8b4ca359f95af990ffbf6e4b9bb55d22e" translate="yes" xml:space="preserve">
          <source>Rational number type, with numerator and denominator of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">分子と分母がタイプ &lt;code&gt;T&lt;/code&gt; の有理数タイプ。</target>
        </trans-unit>
        <trans-unit id="bfbac382ae54dab2e699a530e419f319f613e169" translate="yes" xml:space="preserve">
          <source>Rationals can easily be converted to floating-point numbers:</source>
          <target state="translated">レーションは簡単に浮動小数点数に変換することができます。</target>
        </trans-unit>
        <trans-unit id="cbcb204578dbe345965d95c942d2e1493ba729d7" translate="yes" xml:space="preserve">
          <source>Raw String Literals</source>
          <target state="translated">生の文字列リテラル</target>
        </trans-unit>
        <trans-unit id="68d0320e370193f3b617aab4f932a09d8218d5a1" translate="yes" xml:space="preserve">
          <source>Raw strings without interpolation or unescaping can be expressed with non-standard string literals of the form &lt;code&gt;raw&quot;...&quot;&lt;/code&gt;. Raw string literals create ordinary &lt;code&gt;String&lt;/code&gt; objects which contain the enclosed contents exactly as entered with no interpolation or unescaping. This is useful for strings which contain code or markup in other languages which use &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; as special characters.</source>
          <target state="translated">補間やエスケープ解除のない生の文字列は、 &lt;code&gt;raw&quot;...&quot;&lt;/code&gt; という形式の非標準の文字列リテラルで表現できます。未加工の文字列リテラルは、補間やエスケープ解除なしで入力されたとおりの内容を含む通常の &lt;code&gt;String&lt;/code&gt; オブジェクトを作成します。これは、特殊文字として &lt;code&gt;$&lt;/code&gt; または &lt;code&gt;\&lt;/code&gt; を使用する他の言語のコードまたはマークアップを含む文字列に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e7fc3d42926d4bf7c18597d620decd9bea3192ef" translate="yes" xml:space="preserve">
          <source>Re-enable Ctrl-C handler during execution of a function. Temporarily reverses the effect of &lt;a href=&quot;#Base.disable_sigint&quot;&gt;&lt;code&gt;disable_sigint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関数の実行中にCtrl-Cハンドラーを再度有効にします。&lt;a href=&quot;#Base.disable_sigint&quot;&gt; &lt;code&gt;disable_sigint&lt;/code&gt; &lt;/a&gt;の効果を一時的に逆にします。</target>
        </trans-unit>
        <trans-unit id="761051333727e23313e72df297c8acd7ba12dc00" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;io&lt;/code&gt; until the end of the stream/file and count the number of lines. To specify a file pass the filename as the first argument. EOL markers other than &lt;code&gt;'\n'&lt;/code&gt; are supported by passing them as the second argument. The last non-empty line of &lt;code&gt;io&lt;/code&gt; is counted even if it does not end with the EOL, matching the length returned by &lt;a href=&quot;#Base.eachline&quot;&gt;&lt;code&gt;eachline&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.readlines&quot;&gt;&lt;code&gt;readlines&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ストリーム/ファイルの終わりまで &lt;code&gt;io&lt;/code&gt; を読み取り、行数をカウントします。ファイルを指定するには、最初の引数としてファイル名を渡します。 &lt;code&gt;'\n'&lt;/code&gt; 以外の EOLマーカーは、2番目の引数として渡すことでサポートされます。 &lt;code&gt;io&lt;/code&gt; の最後の空でない行は、EOLで終わっていなくてもカウントされ、&lt;a href=&quot;#Base.eachline&quot;&gt; &lt;code&gt;eachline&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#Base.readlines&quot;&gt; &lt;code&gt;readlines&lt;/code&gt; &lt;/a&gt;によって返される長さに一致します。</target>
        </trans-unit>
        <trans-unit id="a0c6d8966964c162012e2d4debf458b2878fb484" translate="yes" xml:space="preserve">
          <source>Read Permission</source>
          <target state="translated">許可を読む</target>
        </trans-unit>
        <trans-unit id="401146662906d78b007db25a862aa96999920af4" translate="yes" xml:space="preserve">
          <source>Read a UDP packet from the specified socket, and return the bytes received. This call blocks.</source>
          <target state="translated">指定したソケットからUDPパケットを読み込み、受信したバイト数を返す。この呼び出しはブロックします。</target>
        </trans-unit>
        <trans-unit id="765d84e0cfc2d01dff81742e819d119ce3c7974d" translate="yes" xml:space="preserve">
          <source>Read a UDP packet from the specified socket, returning a tuple of &lt;code&gt;(address, data)&lt;/code&gt;, where &lt;code&gt;address&lt;/code&gt; will be either IPv4 or IPv6 as appropriate.</source>
          <target state="translated">指定されたソケットからUDPパケットを読み取り、 &lt;code&gt;(address, data)&lt;/code&gt; タプルを返します。ここで、 &lt;code&gt;address&lt;/code&gt; はIPv4またはIPv6のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="b287be8521dad5de8d68e651b6cf2752817b8891" translate="yes" xml:space="preserve">
          <source>Read a matrix from the source where each line (separated by &lt;code&gt;eol&lt;/code&gt;) gives one row, with elements separated by the given delimiter. The source can be a text file, stream or byte array. Memory mapped files can be used by passing the byte array representation of the mapped segment as source.</source>
          <target state="translated">各行（ &lt;code&gt;eol&lt;/code&gt; で区切られている）が1つの行を提供するソースから行列を読み取ります。要素は指定された区切り文字で区切られています。ソースは、テキストファイル、ストリーム、またはバイト配列です。メモリマップファイルは、マップされたセグメントのバイト配列表現をソースとして渡すことで使用できます。</target>
        </trans-unit>
        <trans-unit id="27e947a09cb143cbb5f69b4bc3d714f06dd7d111" translate="yes" xml:space="preserve">
          <source>Read a single line of text from the given I/O stream or file (defaults to &lt;code&gt;stdin&lt;/code&gt;). When reading from a file, the text is assumed to be encoded in UTF-8. Lines in the input end with &lt;code&gt;'\n'&lt;/code&gt; or &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; or the end of an input stream. When &lt;code&gt;keep&lt;/code&gt; is false (as it is by default), these trailing newline characters are removed from the line before it is returned. When &lt;code&gt;keep&lt;/code&gt; is true, they are returned as part of the line.</source>
          <target state="translated">指定されたI / Oストリームまたはファイルから1行のテキストを読み取ります（デフォルトは &lt;code&gt;stdin&lt;/code&gt; ）。ファイルから読み取る場合、テキストはUTF-8でエンコードされていると想定されます。入力の行は &lt;code&gt;'\n'&lt;/code&gt; または &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; または入力ストリームの終わりで終わります。 &lt;code&gt;keep&lt;/code&gt; がfalseの場合（デフォルト）、これらの末尾の改行文字は、返される前に行から削除されます。とき &lt;code&gt;keep&lt;/code&gt; 真である、彼らはラインの一部として返されます。</target>
        </trans-unit>
        <trans-unit id="636866ab4a73e6bf1c1c7803dac31c3eeea6a408" translate="yes" xml:space="preserve">
          <source>Read a single value of type &lt;code&gt;T&lt;/code&gt; from &lt;code&gt;io&lt;/code&gt;, in canonical binary representation.</source>
          <target state="translated">型 &lt;code&gt;T&lt;/code&gt; の単一の値を、正規のバイナリ表現で &lt;code&gt;io&lt;/code&gt; から読み取ります。</target>
        </trans-unit>
        <trans-unit id="06b1667089a2042f02af1f96f5bede727a784e3f" translate="yes" xml:space="preserve">
          <source>Read a string from an I/O stream or a file, up to the given delimiter. The delimiter can be a &lt;code&gt;UInt8&lt;/code&gt;, &lt;code&gt;AbstractChar&lt;/code&gt;, string, or vector. Keyword argument &lt;code&gt;keep&lt;/code&gt; controls whether the delimiter is included in the result. The text is assumed to be encoded in UTF-8.</source>
          <target state="translated">I / Oストリームまたはファイルから、指定された区切り文字までの文字列を読み取ります。区切り文字は、 &lt;code&gt;UInt8&lt;/code&gt; 、 &lt;code&gt;AbstractChar&lt;/code&gt; 、文字列、またはベクターにすることができます。キーワード引数 &lt;code&gt;keep&lt;/code&gt; は、区切り文字を結果に含めるかどうかを制御します。テキストはUTF-8でエンコードされていると想定されます。</target>
        </trans-unit>
        <trans-unit id="98995575c599e1e6ec5f01994896ff6d5c949dec" translate="yes" xml:space="preserve">
          <source>Read a value written by &lt;a href=&quot;#Serialization.serialize&quot;&gt;&lt;code&gt;serialize&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;deserialize&lt;/code&gt; assumes the binary data read from &lt;code&gt;stream&lt;/code&gt; is correct and has been serialized by a compatible implementation of &lt;a href=&quot;#Serialization.serialize&quot;&gt;&lt;code&gt;serialize&lt;/code&gt;&lt;/a&gt;. It has been designed with simplicity and performance as a goal and does not validate the data read. Malformed data can result in process termination. The caller has to ensure the integrity and correctness of data read from &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Serialization.serialize&quot;&gt; &lt;code&gt;serialize&lt;/code&gt; &lt;/a&gt;によって書き込まれた値を読み取ります。 &lt;code&gt;deserialize&lt;/code&gt; は、 &lt;code&gt;stream&lt;/code&gt; から読み取られたバイナリデータが正しく、互換性のある&lt;a href=&quot;#Serialization.serialize&quot;&gt; &lt;code&gt;serialize&lt;/code&gt; の&lt;/a&gt;実装によってシリアル化されていることを前提としています。シンプルさとパフォーマンスを目標として設計されており、読み取られたデータを検証しません。不正な形式のデータは、プロセスを終了させる可能性があります。呼び出し元は、 &lt;code&gt;stream&lt;/code&gt; から読み取られたデータの整合性と正確さを保証する必要があります。</target>
        </trans-unit>
        <trans-unit id="3e523c01da95520668c47f8f742840cdfaf2398c" translate="yes" xml:space="preserve">
          <source>Read all available data on the stream, blocking the task only if no data is available. The result is a &lt;code&gt;Vector{UInt8,1}&lt;/code&gt;.</source>
          <target state="translated">ストリームで利用可能なすべてのデータを読み取り、利用可能なデータがない場合にのみタスクをブロックします。結果は &lt;code&gt;Vector{UInt8,1}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5cb61ee94cd213818d0e370a19662bee96e0bafb" translate="yes" xml:space="preserve">
          <source>Read all lines of an I/O stream or a file as a vector of strings. Behavior is equivalent to saving the result of reading &lt;a href=&quot;#Base.readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; repeatedly with the same arguments and saving the resulting lines as a vector of strings.</source>
          <target state="translated">I / Oストリームまたはファイルのすべての行を文字列のベクトルとして読み取ります。動作は、同じ引数を使用して&lt;a href=&quot;#Base.readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; を&lt;/a&gt;繰り返し読み取った結果を保存し、結果の行を文字列のベクトルとして保存することと同じです。</target>
        </trans-unit>
        <trans-unit id="0c130596f984cec32d36c3fbb8a16c41603df671" translate="yes" xml:space="preserve">
          <source>Read at most &lt;code&gt;nb&lt;/code&gt; bytes from &lt;code&gt;s&lt;/code&gt;, returning a &lt;code&gt;Vector{UInt8}&lt;/code&gt; of the bytes read.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; から最大で &lt;code&gt;nb&lt;/code&gt; バイトを読み取り、読み取ったバイトの &lt;code&gt;Vector{UInt8}&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7b69ff5b5950de60ee18c7374497d8dde30b3779" translate="yes" xml:space="preserve">
          <source>Read at most &lt;code&gt;nb&lt;/code&gt; bytes from &lt;code&gt;stream&lt;/code&gt; into &lt;code&gt;b&lt;/code&gt;, returning the number of bytes read. The size of &lt;code&gt;b&lt;/code&gt; will be increased if needed (i.e. if &lt;code&gt;nb&lt;/code&gt; is greater than &lt;code&gt;length(b)&lt;/code&gt; and enough bytes could be read), but it will never be decreased.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; から最大 &lt;code&gt;nb&lt;/code&gt; バイトを &lt;code&gt;b&lt;/code&gt; に読み取り、読み取ったバイト数を返します。 &lt;code&gt;b&lt;/code&gt; のサイズは必要に応じて（つまり、 &lt;code&gt;nb&lt;/code&gt; が &lt;code&gt;length(b)&lt;/code&gt; より大きく、十分なバイト数が読み取れる場合）増加しますが、決して減少することはありません。</target>
        </trans-unit>
        <trans-unit id="aa28e407425eb3dc674467f6f401cb706439f24a" translate="yes" xml:space="preserve">
          <source>Read binary data from an I/O stream or file, filling in &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">I / Oストリームまたはファイルからバイナリデータを読み取り、 &lt;code&gt;array&lt;/code&gt; に入力します。</target>
        </trans-unit>
        <trans-unit id="669eb65d74ac8800e9ce382015071fc895c4eb45" translate="yes" xml:space="preserve">
          <source>Read the entire contents of a file as a string.</source>
          <target state="translated">ファイルの内容全体を文字列として読み込みます。</target>
        </trans-unit>
        <trans-unit id="994c261239267f9b0c711e000660b975e0944e5d" translate="yes" xml:space="preserve">
          <source>Read the entirety of &lt;code&gt;io&lt;/code&gt;, as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;io&lt;/code&gt; 全体を &lt;code&gt;String&lt;/code&gt; として読み取ります。</target>
        </trans-unit>
        <trans-unit id="76e02e378364ecea256e2783357204b2160a3b60" translate="yes" xml:space="preserve">
          <source>Read the entirety of &lt;code&gt;x&lt;/code&gt; as a string and remove a single trailing newline if there is one. Equivalent to &lt;code&gt;chomp(read(x, String))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 全体を文字列として読み取り、末尾の改行がある場合はそれを削除します。 &lt;code&gt;chomp(read(x, String))&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="02230931cd30e3ddb20127f6f1463190d1f769e0" translate="yes" xml:space="preserve">
          <source>Read the file at &lt;code&gt;path&lt;/code&gt; and adds it to the object database of &lt;code&gt;repo&lt;/code&gt; as a loose blob. Return the &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt; of the resulting blob.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; あるファイルを読み取り、それを &lt;code&gt;repo&lt;/code&gt; としてリポジトリのオブジェクトデータベースに追加します。結果のblobの&lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="d014edd59105b5bf8daa5ead00dbaf505bdecc59" translate="yes" xml:space="preserve">
          <source>Read the tree &lt;code&gt;tree&lt;/code&gt; (or the tree pointed to by &lt;code&gt;treehash&lt;/code&gt; in the repository owned by &lt;code&gt;idx&lt;/code&gt;) into the index &lt;code&gt;idx&lt;/code&gt;. The current index contents will be replaced.</source>
          <target state="translated">ツリー &lt;code&gt;tree&lt;/code&gt; （または &lt;code&gt;idx&lt;/code&gt; が所有するリポジトリ内の &lt;code&gt;treehash&lt;/code&gt; が指すツリー）をインデックス &lt;code&gt;idx&lt;/code&gt; に読み込みます。現在のインデックスの内容が置き換えられます。</target>
        </trans-unit>
        <trans-unit id="98d9c825056acd63baca60344f6bb0d2adde525a" translate="yes" xml:space="preserve">
          <source>Read up to &lt;code&gt;nb&lt;/code&gt; bytes from &lt;code&gt;io&lt;/code&gt; and return the CRC-32c checksum, optionally mixed with a starting &lt;code&gt;crc&lt;/code&gt; integer. If &lt;code&gt;nb&lt;/code&gt; is not supplied, then &lt;code&gt;io&lt;/code&gt; will be read until the end of the stream.</source>
          <target state="translated">&lt;code&gt;io&lt;/code&gt; から最大 &lt;code&gt;nb&lt;/code&gt; バイトを読み取り、CRC-32cチェックサムを &lt;code&gt;crc&lt;/code&gt; 。オプションで、開始crc整数と混合されます。 &lt;code&gt;nb&lt;/code&gt; が指定されていない場合、ストリームの最後まで &lt;code&gt;io&lt;/code&gt; が読み取られます。</target>
        </trans-unit>
        <trans-unit id="45faff59dc4bf9c7cecf436265f50d812e42de18" translate="yes" xml:space="preserve">
          <source>Real applications will not just need to execute expressions, but also return their values to the host program. &lt;code&gt;jl_eval_string&lt;/code&gt; returns a &lt;code&gt;jl_value_t*&lt;/code&gt;, which is a pointer to a heap-allocated Julia object. Storing simple data types like &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt; in this way is called &lt;code&gt;boxing&lt;/code&gt;, and extracting the stored primitive data is called &lt;code&gt;unboxing&lt;/code&gt;. Our improved sample program that calculates the square root of 2 in Julia and reads back the result in C looks as follows:</source>
          <target state="translated">実際のアプリケーションでは、式を実行するだけでなく、その値をホストプログラムに返す必要があります。 &lt;code&gt;jl_eval_string&lt;/code&gt; は、ヒープに割り当てられたJuliaオブジェクトへのポインターである &lt;code&gt;jl_value_t*&lt;/code&gt; 返します。などの保存単純なデータ型&lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt;このようには呼ばれ &lt;code&gt;boxing&lt;/code&gt; 、および保存されたプリミティブデータを抽出することと呼ばれる &lt;code&gt;unboxing&lt;/code&gt; 。 Juliaで2の平方根を計算し、その結果をCで読み込む改良されたサンプルプログラムは、次のようになります。</target>
        </trans-unit>
        <trans-unit id="379971b5570514f99175eae63d15d9e86ca30d48" translate="yes" xml:space="preserve">
          <source>Recall from &lt;a href=&quot;../functions/index#man-functions-1&quot;&gt;Functions&lt;/a&gt; that a function is an object that maps a tuple of arguments to a return value, or throws an exception if no appropriate value can be returned. It is common for the same conceptual function or operation to be implemented quite differently for different types of arguments: adding two integers is very different from adding two floating-point numbers, both of which are distinct from adding an integer to a floating-point number. Despite their implementation differences, these operations all fall under the general concept of &quot;addition&quot;. Accordingly, in Julia, these behaviors all belong to a single object: the &lt;code&gt;+&lt;/code&gt; function.</source>
          <target state="translated">以下からのリコール&lt;a href=&quot;../functions/index#man-functions-1&quot;&gt;機能は、&lt;/a&gt;関数が戻り値に引数のタプルをマッピングし、あるいは全く適切な値を返すことができない場合に例外をスローするオブジェクトであること。同じ概念的な関数または操作が異なるタイプの引数に対してまったく異なる方法で実装されることはよくあります。2つの整数を追加することは、2つの浮動小数点数を追加することとは大きく異なります。どちらも、整数を浮動小数点数に追加することとは異なります。 。実装の違いにもかかわらず、これらの操作はすべて「追加」の一般概念に該当します。したがって、ジュリアでは、これらの動作はすべて単一のオブジェクト、つまり &lt;code&gt;+&lt;/code&gt; 関数に属しています。</target>
        </trans-unit>
        <trans-unit id="38284c89720ae8c7972fcf87950cb10b0093fe0d" translate="yes" xml:space="preserve">
          <source>Recall from &lt;a href=&quot;../strings/index#non-standard-string-literals-1&quot;&gt;Strings&lt;/a&gt; that string literals prefixed by an identifier are called non-standard string literals, and can have different semantics than un-prefixed string literals. For example:</source>
          <target state="translated">リコール&lt;a href=&quot;../strings/index#non-standard-string-literals-1&quot;&gt;文字列&lt;/a&gt;識別子で始まる文字列リテラルは、非標準の文字列リテラルと呼ばれ、非接頭辞文字列リテラルとは異なる意味を持つことができること。例えば：</target>
        </trans-unit>
        <trans-unit id="67056fa858ca0bc4cce80169e19c17a9954dded4" translate="yes" xml:space="preserve">
          <source>Recall that in &lt;a href=&quot;../integers-and-floating-point-numbers/index#Integers-and-Floating-Point-Numbers-1&quot;&gt;Integers and Floating-Point Numbers&lt;/a&gt;, we introduced a variety of concrete types of numeric values: &lt;a href=&quot;../../base/numbers/index#Core.Int8&quot;&gt;&lt;code&gt;Int8&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.UInt8&quot;&gt;&lt;code&gt;UInt8&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Int16&quot;&gt;&lt;code&gt;Int16&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.UInt16&quot;&gt;&lt;code&gt;UInt16&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Int32&quot;&gt;&lt;code&gt;Int32&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.UInt32&quot;&gt;&lt;code&gt;UInt32&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.UInt64&quot;&gt;&lt;code&gt;UInt64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Int128&quot;&gt;&lt;code&gt;Int128&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.UInt128&quot;&gt;&lt;code&gt;UInt128&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Float16&quot;&gt;&lt;code&gt;Float16&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt;&lt;code&gt;Float32&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt;. Although they have different representation sizes, &lt;code&gt;Int8&lt;/code&gt;, &lt;code&gt;Int16&lt;/code&gt;, &lt;code&gt;Int32&lt;/code&gt;, &lt;code&gt;Int64&lt;/code&gt; and &lt;code&gt;Int128&lt;/code&gt; all have in common that they are signed integer types. Likewise &lt;code&gt;UInt8&lt;/code&gt;, &lt;code&gt;UInt16&lt;/code&gt;, &lt;code&gt;UInt32&lt;/code&gt;, &lt;code&gt;UInt64&lt;/code&gt; and &lt;code&gt;UInt128&lt;/code&gt; are all unsigned integer types, while &lt;code&gt;Float16&lt;/code&gt;, &lt;code&gt;Float32&lt;/code&gt; and &lt;code&gt;Float64&lt;/code&gt; are distinct in being floating-point types rather than integers. It is common for a piece of code to make sense, for example, only if its arguments are some kind of integer, but not really depend on what particular &lt;em&gt;kind&lt;/em&gt; of integer. For example, the greatest common denominator algorithm works for all kinds of integers, but will not work for floating-point numbers. Abstract types allow the construction of a hierarchy of types, providing a context into which concrete types can fit. This allows you, for example, to easily program to any type that is an integer, without restricting an algorithm to a specific type of integer.</source>
          <target state="translated">&lt;a href=&quot;../integers-and-floating-point-numbers/index#Integers-and-Floating-Point-Numbers-1&quot;&gt;IntegersとFloating-Point Numbers&lt;/a&gt;で、さまざまな具体的な数値タイプを導入したことを思い出してください：&lt;a href=&quot;../../base/numbers/index#Core.Int8&quot;&gt; &lt;code&gt;Int8&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.UInt8&quot;&gt; &lt;code&gt;UInt8&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.Int16&quot;&gt; &lt;code&gt;Int16&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.UInt16&quot;&gt; &lt;code&gt;UInt16&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.Int32&quot;&gt; &lt;code&gt;Int32&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.UInt32&quot;&gt; &lt;code&gt;UInt32&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.UInt64&quot;&gt; &lt;code&gt;UInt64&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.Int128&quot;&gt; &lt;code&gt;Int128&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.UInt128&quot;&gt; &lt;code&gt;UInt128&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.Float16&quot;&gt; &lt;code&gt;Float16&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt; &lt;code&gt;Float32&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt;。表現サイズは異なりますが、 &lt;code&gt;Int8&lt;/code&gt; 、 &lt;code&gt;Int16&lt;/code&gt; 、 &lt;code&gt;Int32&lt;/code&gt; 、 &lt;code&gt;Int64&lt;/code&gt; 、 &lt;code&gt;Int128&lt;/code&gt; それらはすべて、符号付き整数型であるという共通点があります。同様に、 &lt;code&gt;UInt8&lt;/code&gt; 、 &lt;code&gt;UInt16&lt;/code&gt; 、 &lt;code&gt;UInt32&lt;/code&gt; 、 &lt;code&gt;UInt64&lt;/code&gt; 、および &lt;code&gt;UInt128&lt;/code&gt; はすべて符号なし整数型ですが、 &lt;code&gt;Float16&lt;/code&gt; 、 &lt;code&gt;Float32&lt;/code&gt; 、および &lt;code&gt;Float64&lt;/code&gt; は整数ではなく浮動小数点型です。たとえば、引数が何らかの整数であり、実際には特定の&lt;em&gt;種類に&lt;/em&gt;依存していない場合にのみ、コードが意味をなすことが一般的です&lt;em&gt;&lt;/em&gt;整数の。たとえば、最も一般的な分母アルゴリズムはすべての種類の整数で機能しますが、浮動小数点数では機能しません。抽象型は、型の階層の構築を可能にし、具象型が適合するコンテキストを提供します。これにより、たとえば、アルゴリズムを特定のタイプの整数に制限することなく、整数である任意のタイプに簡単にプログラムできます。</target>
        </trans-unit>
        <trans-unit id="eb32931f05e0c2ea055b91656b5946d3798f3490" translate="yes" xml:space="preserve">
          <source>Recall that the variable &lt;a href=&quot;../../base/base/index#ans&quot;&gt;&lt;code&gt;ans&lt;/code&gt;&lt;/a&gt; is set to the value of the last expression evaluated in an interactive session. This does not occur when Julia code is run in other ways.</source>
          <target state="translated">変数&lt;a href=&quot;../../base/base/index#ans&quot;&gt; &lt;code&gt;ans&lt;/code&gt; &lt;/a&gt;は、インタラクティブセッションで評価された最後の式の値に設定されていることを思い出してください。Juliaコードが他の方法で実行されている場合、これは発生しません。</target>
        </trans-unit>
        <trans-unit id="8ab3945b7ec83b7e202cb8bc1e71944c498c3f0a" translate="yes" xml:space="preserve">
          <source>Record a result to a testset. This function is called by the &lt;code&gt;@testset&lt;/code&gt; infrastructure each time a contained &lt;code&gt;@test&lt;/code&gt; macro completes, and is given the test result (which could be an &lt;code&gt;Error&lt;/code&gt;). This will also be called with an &lt;code&gt;Error&lt;/code&gt; if an exception is thrown inside the test block but outside of a &lt;code&gt;@test&lt;/code&gt; context.</source>
          <target state="translated">結果をテストセットに記録します。この関数は、含まれている &lt;code&gt;@test&lt;/code&gt; マクロが完了するたびに &lt;code&gt;@testset&lt;/code&gt; インフラストラクチャによって呼び出され、テスト結果（ &lt;code&gt;Error&lt;/code&gt; 可能性があります）が与えられます。これは、例外がテストブロックの内部で &lt;code&gt;@test&lt;/code&gt; コンテキストの外部でスローされた場合にも、 &lt;code&gt;Error&lt;/code&gt; 呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b8e57496a3f0096534ad6a0a35ce77471f3f66c1" translate="yes" xml:space="preserve">
          <source>Recreational Vehicle</source>
          <target state="translated">レクリエーション車両</target>
        </trans-unit>
        <trans-unit id="62015d09fff6b1e0c9f6a364687959d3b71931ec" translate="yes" xml:space="preserve">
          <source>Recursively computes the blocked &lt;code&gt;QR&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = QR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; のブロックされた &lt;code&gt;QR&lt;/code&gt; 分解、 &lt;code&gt;A = QR&lt;/code&gt; 再帰的に計算します。</target>
        </trans-unit>
        <trans-unit id="f71cc2f91de612a65ebc9b0bb32b1afe3acf580f" translate="yes" xml:space="preserve">
          <source>Recursively computes the blocked &lt;code&gt;QR&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = QR&lt;/code&gt;. &lt;code&gt;T&lt;/code&gt; contains upper triangular block reflectors which parameterize the elementary reflectors of the factorization. The first dimension of &lt;code&gt;T&lt;/code&gt; sets the block size and it must be between 1 and &lt;code&gt;n&lt;/code&gt;. The second dimension of &lt;code&gt;T&lt;/code&gt; must equal the smallest dimension of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; のブロックされた &lt;code&gt;QR&lt;/code&gt; 分解、 &lt;code&gt;A = QR&lt;/code&gt; 再帰的に計算します。 &lt;code&gt;T&lt;/code&gt; には、分解の基本リフレクターをパラメーター化する上三角ブロックリフレクターが含まれています。 &lt;code&gt;T&lt;/code&gt; の最初の次元はブロックサイズを設定し、1から &lt;code&gt;n&lt;/code&gt; の間でなければなりません。 &lt;code&gt;T&lt;/code&gt; の2番目の次元は、 &lt;code&gt;A&lt;/code&gt; の最小次元と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="f80a8844e1be64255f8c65d87e40bab146bdd509" translate="yes" xml:space="preserve">
          <source>Recursively peel &lt;code&gt;obj&lt;/code&gt; until an object of type &lt;code&gt;T&lt;/code&gt; is obtained. If no &lt;code&gt;T&lt;/code&gt; is provided, then &lt;code&gt;obj&lt;/code&gt; will be peeled until the type changes.</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; のオブジェクトが取得されるまで、 &lt;code&gt;obj&lt;/code&gt; を再帰的にピールします。 &lt;code&gt;T&lt;/code&gt; が指定されていない場合、 &lt;code&gt;obj&lt;/code&gt; はタイプが変更されるまでピールされます。</target>
        </trans-unit>
        <trans-unit id="ffc21fc0148e12d55c4becf25cb79e013dbe3944" translate="yes" xml:space="preserve">
          <source>Recursively peel &lt;code&gt;ref&lt;/code&gt; until an object of type &lt;code&gt;T&lt;/code&gt; is obtained. If no &lt;code&gt;T&lt;/code&gt; is provided, then &lt;code&gt;ref&lt;/code&gt; will be peeled until an object other than a &lt;a href=&quot;#LibGit2.GitTag&quot;&gt;&lt;code&gt;GitTag&lt;/code&gt;&lt;/a&gt; is obtained.</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; のオブジェクトが取得されるまで、 &lt;code&gt;ref&lt;/code&gt; を再帰的にピールします。 &lt;code&gt;T&lt;/code&gt; が指定されていない場合、&lt;a href=&quot;#LibGit2.GitTag&quot;&gt; &lt;code&gt;GitTag&lt;/code&gt; &lt;/a&gt;以外のオブジェクトが取得されるまで &lt;code&gt;ref&lt;/code&gt; がピーリングされます。</target>
        </trans-unit>
        <trans-unit id="1eef5fa651bb3620f36b9320aa983fc3c4f9b7c1" translate="yes" xml:space="preserve">
          <source>Red Apple</source>
          <target state="translated">あかりんご</target>
        </trans-unit>
        <trans-unit id="65fb5da75d97dd43ac737c12d84e566f806b074f" translate="yes" xml:space="preserve">
          <source>Redefining Methods</source>
          <target state="translated">メソッドの再定義</target>
        </trans-unit>
        <trans-unit id="60995163c77de91f92430a4c412b652329fb565d" translate="yes" xml:space="preserve">
          <source>Redirect I/O to or from the given &lt;code&gt;command&lt;/code&gt;. Keyword arguments specify which of the command's streams should be redirected. &lt;code&gt;append&lt;/code&gt; controls whether file output appends to the file. This is a more general version of the 2-argument &lt;code&gt;pipeline&lt;/code&gt; function. &lt;code&gt;pipeline(from, to)&lt;/code&gt; is equivalent to &lt;code&gt;pipeline(from, stdout=to)&lt;/code&gt; when &lt;code&gt;from&lt;/code&gt; is a command, and to &lt;code&gt;pipeline(to, stdin=from)&lt;/code&gt; when &lt;code&gt;from&lt;/code&gt; is another kind of data source.</source>
          <target state="translated">指定された &lt;code&gt;command&lt;/code&gt; との間でI / Oをリダイレクトします。キーワード引数は、リダイレクトされるコマンドのストリームを指定します。 &lt;code&gt;append&lt;/code&gt; は、ファイル出力をファイルに追加するかどうかを制御します。これは、2引数の &lt;code&gt;pipeline&lt;/code&gt; 関数のより一般的なバージョンです。 &lt;code&gt;pipeline(from, to)&lt;/code&gt; は、 &lt;code&gt;from&lt;/code&gt; がコマンドの場合 &lt;code&gt;pipeline(from, stdout=to)&lt;/code&gt; to）と同等で、 &lt;code&gt;from&lt;/code&gt; が別の種類のデータソースの場合 &lt;code&gt;pipeline(to, stdin=from)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="2b131004707e52140cdaf28f13d03c420954c076" translate="yes" xml:space="preserve">
          <source>Reduce &lt;code&gt;A&lt;/code&gt; in-place to bidiagonal form &lt;code&gt;A = QBP'&lt;/code&gt;. Returns &lt;code&gt;A&lt;/code&gt;, containing the bidiagonal matrix &lt;code&gt;B&lt;/code&gt;; &lt;code&gt;d&lt;/code&gt;, containing the diagonal elements of &lt;code&gt;B&lt;/code&gt;; &lt;code&gt;e&lt;/code&gt;, containing the off-diagonal elements of &lt;code&gt;B&lt;/code&gt;; &lt;code&gt;tauq&lt;/code&gt;, containing the elementary reflectors representing &lt;code&gt;Q&lt;/code&gt;; and &lt;code&gt;taup&lt;/code&gt;, containing the elementary reflectors representing &lt;code&gt;P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; をインプレースで2重対角形式 &lt;code&gt;A = QBP'&lt;/code&gt; 減らします。対角行列 &lt;code&gt;B&lt;/code&gt; を含む &lt;code&gt;A&lt;/code&gt; を返します。 &lt;code&gt;d&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; の対角要素を含みます。 &lt;code&gt;e&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; の非対角要素を含む。 &lt;code&gt;Q&lt;/code&gt; を表す基本反射器を含む &lt;code&gt;tauq&lt;/code&gt; 。そして &lt;code&gt;taup&lt;/code&gt; は、 &lt;code&gt;P&lt;/code&gt; を表す基本反射器を含みます。</target>
        </trans-unit>
        <trans-unit id="1bb497652ea42923fd46f4c26b2b40923c096a6f" translate="yes" xml:space="preserve">
          <source>Reduce the given collection &lt;code&gt;itr&lt;/code&gt; with the given binary operator &lt;code&gt;op&lt;/code&gt;. If provided, the initial value &lt;code&gt;init&lt;/code&gt; must be a neutral element for &lt;code&gt;op&lt;/code&gt; that will be returned for empty collections. It is unspecified whether &lt;code&gt;init&lt;/code&gt; is used for non-empty collections.</source>
          <target state="translated">与えられたコレクション &lt;code&gt;itr&lt;/code&gt; を与えられた二項演算子 &lt;code&gt;op&lt;/code&gt; で減らします。指定する場合、初期値 &lt;code&gt;init&lt;/code&gt; は、空のコレクションに対して返される &lt;code&gt;op&lt;/code&gt; のニュートラルエレメントである必要があります。空でないコレクションに &lt;code&gt;init&lt;/code&gt; が使用されるかどうかは指定されていません。</target>
        </trans-unit>
        <trans-unit id="7813329f3b3c4334a9e3e5bf28d7617cfe9f814d" translate="yes" xml:space="preserve">
          <source>Reductions for certain commonly-used operators may have special implementations, and should be used instead: &lt;code&gt;maximum(itr)&lt;/code&gt;, &lt;code&gt;minimum(itr)&lt;/code&gt;, &lt;code&gt;sum(itr)&lt;/code&gt;, &lt;code&gt;prod(itr)&lt;/code&gt;, &lt;code&gt;any(itr)&lt;/code&gt;, &lt;code&gt;all(itr)&lt;/code&gt;.</source>
          <target state="translated">特定の一般的に使用される演算子の削減には特別な実装があり、代わりに使用する必要があります： &lt;code&gt;maximum(itr)&lt;/code&gt; 、 &lt;code&gt;minimum(itr)&lt;/code&gt; 、 &lt;code&gt;sum(itr)&lt;/code&gt; 、 &lt;code&gt;prod(itr)&lt;/code&gt; 、 &lt;code&gt;any(itr)&lt;/code&gt; 、 &lt;code&gt;all(itr)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee713e02a318f2e10b8332ea62dfcdb8d7f8f898" translate="yes" xml:space="preserve">
          <source>ReentrantLock</source>
          <target state="translated">ReentrantLock</target>
        </trans-unit>
        <trans-unit id="0c6b5e185dd8f3c100c6e2f945ae5e0de921ae58" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;https://git-scm.com/docs/git-config#_syntax&quot;&gt;git config syntax documentation&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://git-scm.com/docs/git-config#_syntax&quot;&gt;git config構文のドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="b6d00a8b8dd2cdad221b6340c0f8723e3a4de188" translate="yes" xml:space="preserve">
          <source>Reference to the singleton &lt;code&gt;EnvDict&lt;/code&gt;, providing a dictionary interface to system environment variables.</source>
          <target state="translated">シングルトン &lt;code&gt;EnvDict&lt;/code&gt; への参照。システム環境変数への辞書インターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="fda05af620d8f7d239d3f6e8e81b4403108f221e" translate="yes" xml:space="preserve">
          <source>Reflection</source>
          <target state="translated">Reflection</target>
        </trans-unit>
        <trans-unit id="8664388e6cb247c31115af12d8d1d8bf7890158a" translate="yes" xml:space="preserve">
          <source>Register a function &lt;code&gt;f(x)&lt;/code&gt; to be called when there are no program-accessible references to &lt;code&gt;x&lt;/code&gt;, and return &lt;code&gt;x&lt;/code&gt;. The type of &lt;code&gt;x&lt;/code&gt; must be a &lt;code&gt;mutable struct&lt;/code&gt;, otherwise the behavior of this function is unpredictable.</source>
          <target state="translated">機能レジスタ &lt;code&gt;f(x)&lt;/code&gt; へのプログラム・アクセスの参照が存在しないときに呼び出される &lt;code&gt;x&lt;/code&gt; は、戻り &lt;code&gt;x&lt;/code&gt; 。 &lt;code&gt;x&lt;/code&gt; の型は &lt;code&gt;mutable struct&lt;/code&gt; でなければなりません。そうでない場合、この関数の動作は予測できません。</target>
        </trans-unit>
        <trans-unit id="95319090616a114dd21605a7848330eb4326df3e" translate="yes" xml:space="preserve">
          <source>Register a one-argument function to be called before the REPL interface is initialized in interactive sessions; this is useful to customize the interface. The argument of &lt;code&gt;f&lt;/code&gt; is the REPL object. This function should be called from within the &lt;code&gt;.julia/config/startup.jl&lt;/code&gt; initialization file.</source>
          <target state="translated">REPLインターフェースが対話式セッションで初期化される前に呼び出される引数が1つの関数を登録します。これはインターフェースをカスタマイズするのに役立ちます。 &lt;code&gt;f&lt;/code&gt; の引数はREPLオブジェクトです。この関数は、 &lt;code&gt;.julia/config/startup.jl&lt;/code&gt; 初期化ファイル内から呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="109bda73ea833d11f13ad210a8d12688b583d9ec" translate="yes" xml:space="preserve">
          <source>Register a zero-argument function &lt;code&gt;f()&lt;/code&gt; to be called at process exit. &lt;code&gt;atexit()&lt;/code&gt; hooks are called in last in first out (LIFO) order and run before object finalizers.</source>
          <target state="translated">プロセスの終了時に呼び出される引数のない関数 &lt;code&gt;f()&lt;/code&gt; を登録します。 &lt;code&gt;atexit()&lt;/code&gt; フックは、後入れ先出し（ LIFO）順で呼び出され、オブジェクトファイナライザの前に実行されます。</target>
        </trans-unit>
        <trans-unit id="963d445f4cd3f6048f6d29b84d1e629c9c017e6c" translate="yes" xml:space="preserve">
          <source>Registered Sign / Registered Trade Mark Sign</source>
          <target state="translated">登録サイン・登録商標サイン</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">正規表現</target>
        </trans-unit>
        <trans-unit id="803e617078cb6925738446d95c9e5c3e3e93476f" translate="yes" xml:space="preserve">
          <source>Relative and absolute module paths</source>
          <target state="translated">相対モジュールパスと絶対モジュールパス</target>
        </trans-unit>
        <trans-unit id="0a4e7e5ef533250ae92d35f2158a7312f1f1a5aa" translate="yes" xml:space="preserve">
          <source>Releases ownership of the &lt;code&gt;lock&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lock&lt;/code&gt; 所有権を解放します。</target>
        </trans-unit>
        <trans-unit id="562849534dfd2ad84810dc158915e19b5014ba2d" translate="yes" xml:space="preserve">
          <source>Relieved Face</source>
          <target state="translated">リリーフドフェイス</target>
        </trans-unit>
        <trans-unit id="9e612cbb329517b7ddd2f292341f1ca5a9bab93b" translate="yes" xml:space="preserve">
          <source>Remainder from Euclidean division, returning a value of the same sign as &lt;code&gt;x&lt;/code&gt;, and smaller in magnitude than &lt;code&gt;y&lt;/code&gt;. This value is always exact.</source>
          <target state="translated">ユークリッド除算の剰余 &lt;code&gt;x&lt;/code&gt; と同じ符号で、 &lt;code&gt;y&lt;/code&gt; よりも大きさが小さい値を返します。この値は常に正確です。</target>
        </trans-unit>
        <trans-unit id="d5baf687f4baf1301b65dd77e91ebbe5a402ba02" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;getindex(r,1,1)&lt;/code&gt; is &lt;a href=&quot;../arrays/index#man-array-indexing-1&quot;&gt;equivalent&lt;/a&gt; to &lt;code&gt;r[1,1]&lt;/code&gt;, so this call fetches the first element of the future &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">覚えている &lt;code&gt;getindex(r,1,1)&lt;/code&gt; であり、&lt;a href=&quot;../arrays/index#man-array-indexing-1&quot;&gt;同等&lt;/a&gt;の &lt;code&gt;r[1,1]&lt;/code&gt; ので、このコールは、将来の最初の要素フェッチ &lt;code&gt;r&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9c8908bffa76ebce64d6704b514563d14ac5d28" translate="yes" xml:space="preserve">
          <source>Remember that perf saves for each execution a &lt;code&gt;perf.data&lt;/code&gt; file that, even for small programs, can get quite large. Also the perf LLVM module saves temporarily debug objects in &lt;code&gt;~/.debug/jit&lt;/code&gt;, remember to clean that folder frequently.</source>
          <target state="translated">perfは実行ごとに &lt;code&gt;perf.data&lt;/code&gt; ファイルを保存することに注意してください。これは、小さなプログラムの場合でも、非常に大きくなる可能性があります。また、perf LLVMモジュールは、デバッグオブジェクトを一時的に &lt;code&gt;~/.debug/jit&lt;/code&gt; に保存します。そのフォルダーを頻繁にクリーンアップすることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="5af823bc0e507593684143db34b4fd416ef21b43" translate="yes" xml:space="preserve">
          <source>Remember when importing &lt;code&gt;DistributedArrays.jl&lt;/code&gt; to import it across all processes using &lt;a href=&quot;../../stdlib/distributed/index#Distributed.@everywhere&quot;&gt;&lt;code&gt;@everywhere&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../stdlib/distributed/index#Distributed.@everywhere&quot;&gt; &lt;code&gt;@everywhere&lt;/code&gt; &lt;/a&gt;を使用してすべてのプロセスにわたってインポートするために、 &lt;code&gt;DistributedArrays.jl&lt;/code&gt; をインポートするときに注意してください</target>
        </trans-unit>
        <trans-unit id="1dd6f4695f60f8366edc595cc0318ad17298d915" translate="yes" xml:space="preserve">
          <source>Remote References and AbstractChannels</source>
          <target state="translated">リモートリファレンスとAbstractChannels</target>
        </trans-unit>
        <trans-unit id="490583281de0bfd580c89d288581569682cc6b81" translate="yes" xml:space="preserve">
          <source>Remote References and Distributed Garbage Collection</source>
          <target state="translated">リモートリファレンスと分散型ゴミ収集</target>
        </trans-unit>
        <trans-unit id="b138b9f40d439b68a026760114e0e8a47b94d002" translate="yes" xml:space="preserve">
          <source>Remote references always refer to an implementation of an &lt;code&gt;AbstractChannel&lt;/code&gt;.</source>
          <target state="translated">リモート参照は常に &lt;code&gt;AbstractChannel&lt;/code&gt; の実装を参照します。</target>
        </trans-unit>
        <trans-unit id="1b75a4f160bbafa750cf046c11013ceaf563993b" translate="yes" xml:space="preserve">
          <source>Remote references come in two flavors: &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt;&lt;code&gt;RemoteChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リモート参照には、&lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt; &lt;code&gt;RemoteChannel&lt;/code&gt; の&lt;/a&gt; 2種類があります。</target>
        </trans-unit>
        <trans-unit id="eedcff73a1d733f32851789fbc6f4fb2f9c34e8f" translate="yes" xml:space="preserve">
          <source>Remove a mark from stream &lt;code&gt;s&lt;/code&gt;. Return &lt;code&gt;true&lt;/code&gt; if the stream was marked, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">ストリーム &lt;code&gt;s&lt;/code&gt; からマークを削除します。ストリームがマークされている場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="21cd0567babb24359d6a4ca7a499d003a2286d80" translate="yes" xml:space="preserve">
          <source>Remove a single trailing newline from a string.</source>
          <target state="translated">文字列から末尾の改行を1つ削除します。</target>
        </trans-unit>
        <trans-unit id="bd28961f452d1e9395fb2b74ff9bb43d3be8bf93" translate="yes" xml:space="preserve">
          <source>Remove all elements from a &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; からすべての要素を削除します。</target>
        </trans-unit>
        <trans-unit id="6f0ce9033d3eb0a333fcd3f16d102e0a25d07d25" translate="yes" xml:space="preserve">
          <source>Remove all the files with paths specified by &lt;code&gt;files&lt;/code&gt; in the index &lt;code&gt;idx&lt;/code&gt; (or the index of the &lt;code&gt;repo&lt;/code&gt;).</source>
          <target state="translated">インデックス &lt;code&gt;idx&lt;/code&gt; （または &lt;code&gt;repo&lt;/code&gt; インデックス）内の &lt;code&gt;files&lt;/code&gt; で指定されたパスを持つすべてのファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="41ff4d3c5065c0cd2a091c0f38f99bc232486571" translate="yes" xml:space="preserve">
          <source>Remove an item in &lt;code&gt;collection&lt;/code&gt; and return it. If &lt;code&gt;collection&lt;/code&gt; is an ordered container, the last item is returned.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; 内のアイテムを削除して返します。場合は &lt;code&gt;collection&lt;/code&gt; 注文したコンテナで、最後の項目が返されます。</target>
        </trans-unit>
        <trans-unit id="dfc15701890b3756dc8cb14f3358bbe5cdfbcf03" translate="yes" xml:space="preserve">
          <source>Remove and return a value from a &lt;a href=&quot;#Base.Channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. Blocks until data is available.</source>
          <target state="translated">&lt;a href=&quot;#Base.Channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;から値を削除して返します。データが利用可能になるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="57beb2786cf13c6923fac6596ceebab41f42a76c" translate="yes" xml:space="preserve">
          <source>Remove duplicate items as determined by &lt;a href=&quot;../base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt;, then return the modified &lt;code&gt;A&lt;/code&gt;. &lt;code&gt;unique!&lt;/code&gt; will return the elements of &lt;code&gt;A&lt;/code&gt; in the order that they occur. If you do not care about the order of the returned data, then calling &lt;code&gt;(sort!(A); unique!(A))&lt;/code&gt; will be much more efficient as long as the elements of &lt;code&gt;A&lt;/code&gt; can be sorted.</source>
          <target state="translated">&lt;a href=&quot;../base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt;で決定された重複アイテムを削除し、変更された &lt;code&gt;A&lt;/code&gt; を返します。 &lt;code&gt;unique!&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; の要素をそれらが出現する順番で返します。返されるデータの順序を気にしない場合は、 &lt;code&gt;A&lt;/code&gt; の要素を並べ替えることができる限り、 &lt;code&gt;(sort!(A); unique!(A))&lt;/code&gt; を呼び出す方がはるかに効率的です。</target>
        </trans-unit>
        <trans-unit id="85a3d03fa6a46b679cc0d5bbcbd431f71ace5b80" translate="yes" xml:space="preserve">
          <source>Remove from set &lt;code&gt;s&lt;/code&gt; (in-place) each element of each iterable from &lt;code&gt;itrs&lt;/code&gt;. Maintain order with arrays.</source>
          <target state="translated">セット &lt;code&gt;s&lt;/code&gt; （インプレース）から、 &lt;code&gt;itrs&lt;/code&gt; からの各反復可能オブジェクトの各要素を削除します。配列で順序を維持します。</target>
        </trans-unit>
        <trans-unit id="26bdde39c6a8c241c97f76778879b7df0d20883e" translate="yes" xml:space="preserve">
          <source>Remove items in the specified index range, and return a collection containing the removed items. Subsequent items are shifted left to fill the resulting gap. If specified, replacement values from an ordered collection will be spliced in place of the removed items.</source>
          <target state="translated">指定したインデックス範囲内の項目を削除し、削除した項目を含むコレクションを返します。それ以降の項目は、結果として生じるギャップを埋めるために左にシフトされます。指定された場合、注文されたコレクションからの置換値が、削除されたアイテムの代わりにスプライスされます。</target>
        </trans-unit>
        <trans-unit id="ca0c680c8bc50ae884fa75c2012bd36f2caf9ba2" translate="yes" xml:space="preserve">
          <source>Remove leading and trailing characters from &lt;code&gt;str&lt;/code&gt;, either those specified by &lt;code&gt;chars&lt;/code&gt; or those for which the function &lt;code&gt;pred&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chars&lt;/code&gt; 指定された文字、または関数 &lt;code&gt;pred&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返す文字のどちらかを、 &lt;code&gt;str&lt;/code&gt; から先頭と末尾の文字を削除します。</target>
        </trans-unit>
        <trans-unit id="dafb654078874a47788b16acb7da1b378f47a927" translate="yes" xml:space="preserve">
          <source>Remove leading characters from &lt;code&gt;str&lt;/code&gt;, either those specified by &lt;code&gt;chars&lt;/code&gt; or those for which the function &lt;code&gt;pred&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chars&lt;/code&gt; 指定された文字、または関数 &lt;code&gt;pred&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返す文字のいずれかを、 &lt;code&gt;str&lt;/code&gt; から先頭の文字を削除します。</target>
        </trans-unit>
        <trans-unit id="f32fd85ceb86f072bd01ef036b67f243bd666996" translate="yes" xml:space="preserve">
          <source>Remove the dimensions specified by &lt;code&gt;dims&lt;/code&gt; from array &lt;code&gt;A&lt;/code&gt;. Elements of &lt;code&gt;dims&lt;/code&gt; must be unique and within the range &lt;code&gt;1:ndims(A)&lt;/code&gt;. &lt;code&gt;size(A,i)&lt;/code&gt; must equal 1 for all &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;dims&lt;/code&gt;.</source>
          <target state="translated">配列 &lt;code&gt;A&lt;/code&gt; から &lt;code&gt;dims&lt;/code&gt; で指定された次元を削除します。要素 &lt;code&gt;dims&lt;/code&gt; ユニークと範囲内でなければならない &lt;code&gt;1:ndims(A)&lt;/code&gt; 。 &lt;code&gt;size(A,i)&lt;/code&gt; は、 &lt;code&gt;dims&lt;/code&gt; 内のすべての &lt;code&gt;i&lt;/code&gt; に対して1でなければなりません。</target>
        </trans-unit>
        <trans-unit id="4ed00bf332aa7e0fdc3936f29a94d2ea6a3025c2" translate="yes" xml:space="preserve">
          <source>Remove the first &lt;code&gt;head&lt;/code&gt; and the last &lt;code&gt;tail&lt;/code&gt; characters from &lt;code&gt;s&lt;/code&gt;. The call &lt;code&gt;chop(s)&lt;/code&gt; removes the last character from &lt;code&gt;s&lt;/code&gt;. If it is requested to remove more characters than &lt;code&gt;length(s)&lt;/code&gt; then an empty string is returned.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; の最初の &lt;code&gt;head&lt;/code&gt; と最後の &lt;code&gt;tail&lt;/code&gt; 文字を削除します。 &lt;code&gt;chop(s)&lt;/code&gt; を呼び出すと、最後の文字が &lt;code&gt;s&lt;/code&gt; から削除されます。 &lt;code&gt;length(s)&lt;/code&gt; より多くの文字を削除するように要求された場合、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="57687a7c5a3b9e0397a7130423a78a7b3c2aa393" translate="yes" xml:space="preserve">
          <source>Remove the first &lt;code&gt;item&lt;/code&gt; from &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; から最初の &lt;code&gt;item&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="1800eca407ba65286979ae94ed85b5e2875b777d" translate="yes" xml:space="preserve">
          <source>Remove the git tag &lt;code&gt;tag&lt;/code&gt; from the repository &lt;code&gt;repo&lt;/code&gt;.</source>
          <target state="translated">gitのタグ削除 &lt;code&gt;tag&lt;/code&gt; リポジトリから &lt;code&gt;repo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b987f92f8a0f5eb697994622eb8a01e9e95e928d" translate="yes" xml:space="preserve">
          <source>Remove the item at the given &lt;code&gt;i&lt;/code&gt; and return the modified &lt;code&gt;a&lt;/code&gt;. Subsequent items are shifted to fill the resulting gap.</source>
          <target state="translated">指定された &lt;code&gt;i&lt;/code&gt; のアイテムを削除し、変更され &lt;code&gt;a&lt;/code&gt; を返します。後続のアイテムは、結果のギャップを埋めるためにシフトされます。</target>
        </trans-unit>
        <trans-unit id="eb13d894d69aa68b615503a6aed540eb4fa66a24" translate="yes" xml:space="preserve">
          <source>Remove the item at the given index, and return the removed item. Subsequent items are shifted left to fill the resulting gap. If specified, replacement values from an ordered collection will be spliced in place of the removed item.</source>
          <target state="translated">指定したインデックスの項目を削除し、削除した項目を返します。それ以降の項目は、結果として生じる隙間を埋めるために左に移動されます。指定された場合、注文されたコレクションからの置換値が、削除された項目の代わりにスプライスされます。</target>
        </trans-unit>
        <trans-unit id="713600bc5ad3cc5662dcd3a58f9821e78fe05d42" translate="yes" xml:space="preserve">
          <source>Remove the items at the indices given by &lt;code&gt;inds&lt;/code&gt;, and return the modified &lt;code&gt;a&lt;/code&gt;. Subsequent items are shifted to fill the resulting gap.</source>
          <target state="translated">&lt;code&gt;inds&lt;/code&gt; で指定されたインデックスにある項目を削除し、変更され &lt;code&gt;a&lt;/code&gt; を返します。後続のアイテムは、結果のギャップを埋めるためにシフトされます。</target>
        </trans-unit>
        <trans-unit id="c0c6b0d6e9d484df88930ba89391ab62d917e998" translate="yes" xml:space="preserve">
          <source>Remove the specified workers. Note that only process 1 can add or remove workers.</source>
          <target state="translated">指定した作業員を削除します。なお、作業員の追加・削除ができるのはプロセス1のみです。</target>
        </trans-unit>
        <trans-unit id="3f5ce169f1892710844348e0ee04165a5e2f2a41" translate="yes" xml:space="preserve">
          <source>Remove trailing characters from &lt;code&gt;str&lt;/code&gt;, either those specified by &lt;code&gt;chars&lt;/code&gt; or those for which the function &lt;code&gt;pred&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chars&lt;/code&gt; 指定された文字、または関数 &lt;code&gt;pred&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返す文字のいずれかを &lt;code&gt;str&lt;/code&gt; から削除します。</target>
        </trans-unit>
        <trans-unit id="15dc9e37f5ccdad591672da47e04f2bf053158e5" translate="yes" xml:space="preserve">
          <source>Removes all cached functions from all participating workers.</source>
          <target state="translated">すべての参加ワーカーからすべてのキャッシュされた関数を削除します。</target>
        </trans-unit>
        <trans-unit id="94a3268c4725174f3f1b51ee9b838fa0bc6804e2" translate="yes" xml:space="preserve">
          <source>Removes stored numerical zeros from &lt;code&gt;A&lt;/code&gt;, optionally trimming resulting excess space from &lt;code&gt;A.rowval&lt;/code&gt; and &lt;code&gt;A.nzval&lt;/code&gt; when &lt;code&gt;trim&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">格納されている数値のゼロを &lt;code&gt;A&lt;/code&gt; から削除します。オプションで、 &lt;code&gt;trim&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;A.rowval&lt;/code&gt; および &lt;code&gt;A.nzval&lt;/code&gt; から余分なスペースを削除します。</target>
        </trans-unit>
        <trans-unit id="34399f7add4c90e8afcef76aa2b0fcc9f4f97ff1" translate="yes" xml:space="preserve">
          <source>Removes stored numerical zeros from &lt;code&gt;x&lt;/code&gt;, optionally trimming resulting excess space from &lt;code&gt;x.nzind&lt;/code&gt; and &lt;code&gt;x.nzval&lt;/code&gt; when &lt;code&gt;trim&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">保存されている数値ゼロを &lt;code&gt;x&lt;/code&gt; から削除します。オプションで、 &lt;code&gt;trim&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;x.nzind&lt;/code&gt; および &lt;code&gt;x.nzval&lt;/code&gt; から余分なスペースを削除します。</target>
        </trans-unit>
        <trans-unit id="464eb43b07a90c8e6b356aff59a500f67d890bec" translate="yes" xml:space="preserve">
          <source>Removes stored values from &lt;code&gt;A&lt;/code&gt; whose absolute value is less than or equal to &lt;code&gt;tol&lt;/code&gt;, optionally trimming resulting excess space from &lt;code&gt;A.rowval&lt;/code&gt; and &lt;code&gt;A.nzval&lt;/code&gt; when &lt;code&gt;trim&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">絶対値が &lt;code&gt;tol&lt;/code&gt; 以下の &lt;code&gt;A&lt;/code&gt; から格納された値を削除します。オプションで、 &lt;code&gt;trim&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;A.rowval&lt;/code&gt; および &lt;code&gt;A.nzval&lt;/code&gt; から余分なスペースをトリミングします。</target>
        </trans-unit>
        <trans-unit id="27a0224d2c02b093b4550218445fa4bb07dd10c8" translate="yes" xml:space="preserve">
          <source>Removes stored values from &lt;code&gt;x&lt;/code&gt; whose absolute value is less than or equal to &lt;code&gt;tol&lt;/code&gt;, optionally trimming resulting excess space from &lt;code&gt;A.rowval&lt;/code&gt; and &lt;code&gt;A.nzval&lt;/code&gt; when &lt;code&gt;trim&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">絶対値が &lt;code&gt;tol&lt;/code&gt; 以下の &lt;code&gt;x&lt;/code&gt; から格納された値を削除します。オプションで、 &lt;code&gt;trim&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;A.rowval&lt;/code&gt; および &lt;code&gt;A.nzval&lt;/code&gt; から余分なスペースをトリミングします。</target>
        </trans-unit>
        <trans-unit id="235df36df1ce437c7a81c3a34e3fc7c696a7597a" translate="yes" xml:space="preserve">
          <source>Reorder the Schur factorization of a matrix and optionally finds reciprocal condition numbers. If &lt;code&gt;job = N&lt;/code&gt;, no condition numbers are found. If &lt;code&gt;job = E&lt;/code&gt;, only the condition number for this cluster of eigenvalues is found. If &lt;code&gt;job = V&lt;/code&gt;, only the condition number for the invariant subspace is found. If &lt;code&gt;job = B&lt;/code&gt; then the condition numbers for the cluster and subspace are found. If &lt;code&gt;compq = V&lt;/code&gt; the Schur vectors &lt;code&gt;Q&lt;/code&gt; are updated. If &lt;code&gt;compq = N&lt;/code&gt; the Schur vectors are not modified. &lt;code&gt;select&lt;/code&gt; determines which eigenvalues are in the cluster.</source>
          <target state="translated">行列のSchur分解を並べ替え、オプションで逆条件番号を見つけます。 &lt;code&gt;job = N&lt;/code&gt; 場合、条件番号は見つかりません。 &lt;code&gt;job = E&lt;/code&gt; 場合、この固有値のクラスターの条件番号のみが見つかります。 &lt;code&gt;job = V&lt;/code&gt; 場合、不変部分空間の条件番号のみが見つかります。 &lt;code&gt;job = B&lt;/code&gt; 場合、クラスターとサブスペースの条件番号が見つかります。 &lt;code&gt;compq = V&lt;/code&gt; の場合、Schurベクトル &lt;code&gt;Q&lt;/code&gt; が更新されます。 &lt;code&gt;compq = N&lt;/code&gt; の場合、Schurベクトルは変更されません。 &lt;code&gt;select&lt;/code&gt; は、クラスターに含まれる固有値を決定します。</target>
        </trans-unit>
        <trans-unit id="55b3d3607da06f7a360270a2a3d470bb11b80c9d" translate="yes" xml:space="preserve">
          <source>Reorder the Schur factorization of a matrix. If &lt;code&gt;compq = V&lt;/code&gt;, the Schur vectors &lt;code&gt;Q&lt;/code&gt; are reordered. If &lt;code&gt;compq = N&lt;/code&gt; they are not modified. &lt;code&gt;ifst&lt;/code&gt; and &lt;code&gt;ilst&lt;/code&gt; specify the reordering of the vectors.</source>
          <target state="translated">行列のSchur分解を並べ替えます。場合 &lt;code&gt;compq = V&lt;/code&gt; 、シューアベクトル &lt;code&gt;Q&lt;/code&gt; を並べ替えています。 &lt;code&gt;compq = N&lt;/code&gt; 場合、変更されません。 &lt;code&gt;ifst&lt;/code&gt; と &lt;code&gt;ilst&lt;/code&gt; は、ベクトルの並べ替えを指定します。</target>
        </trans-unit>
        <trans-unit id="cd1aaf9ca8dda5cd93732f5efe7ca4de024eb7cc" translate="yes" xml:space="preserve">
          <source>Reorders the Generalized Schur factorization &lt;code&gt;F&lt;/code&gt; of a matrix pair &lt;code&gt;(A, B) = (Q*S*Z', Q*T*Z')&lt;/code&gt; according to the logical array &lt;code&gt;select&lt;/code&gt; and returns a GeneralizedSchur object &lt;code&gt;F&lt;/code&gt;. The selected eigenvalues appear in the leading diagonal of both &lt;code&gt;F.S&lt;/code&gt; and &lt;code&gt;F.T&lt;/code&gt;, and the left and right orthogonal/unitary Schur vectors are also reordered such that &lt;code&gt;(A, B) = F.Q*(F.S, F.T)*F.Z'&lt;/code&gt; still holds and the generalized eigenvalues of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; can still be obtained with &lt;code&gt;F.&amp;alpha;./F.&amp;beta;&lt;/code&gt;.</source>
          <target state="translated">論理配列 &lt;code&gt;select&lt;/code&gt; に従って行列ペア &lt;code&gt;(A, B) = (Q*S*Z', Q*T*Z')&lt;/code&gt; のGeneralized Schur分解 &lt;code&gt;F&lt;/code&gt; を並べ替え、GeneralizedSchurオブジェクト &lt;code&gt;F&lt;/code&gt; を返します。選択した固有値は &lt;code&gt;F.S&lt;/code&gt; と &lt;code&gt;F.T&lt;/code&gt; の両方の先行対角に表示され、左と右の直交/ユニタリーSchurベクトルも &lt;code&gt;(A, B) = F.Q*(F.S, F.T)*F.Z'&lt;/code&gt; が保持され、一般化されるように並べ替えられます &lt;code&gt;A&lt;/code&gt; および &lt;code&gt;B&lt;/code&gt; の固有値は、 &lt;code&gt;F.&amp;alpha;./F.&amp;beta;&lt;/code&gt; . /F.&amp;beta;でも取得できます。</target>
        </trans-unit>
        <trans-unit id="dc71a29ca32df1cc7e6a518dcd1eea5401f6972c" translate="yes" xml:space="preserve">
          <source>Reorders the Schur factorization &lt;code&gt;F&lt;/code&gt; of a matrix &lt;code&gt;A = Z*T*Z'&lt;/code&gt; according to the logical array &lt;code&gt;select&lt;/code&gt; returning the reordered factorization &lt;code&gt;F&lt;/code&gt; object. The selected eigenvalues appear in the leading diagonal of &lt;code&gt;F.Schur&lt;/code&gt; and the corresponding leading columns of &lt;code&gt;F.vectors&lt;/code&gt; form an orthogonal/unitary basis of the corresponding right invariant subspace. In the real case, a complex conjugate pair of eigenvalues must be either both included or both excluded via &lt;code&gt;select&lt;/code&gt;.</source>
          <target state="translated">並べ替えられた因数分解 &lt;code&gt;F&lt;/code&gt; オブジェクトを返す論理配列 &lt;code&gt;select&lt;/code&gt; に従って、行列 &lt;code&gt;A = Z*T*Z'&lt;/code&gt; のSchur因数分解 &lt;code&gt;F&lt;/code&gt; を並べ替えます。選択された固有値は、 &lt;code&gt;F.Schur&lt;/code&gt; の先行対角に表示され、対応する &lt;code&gt;F.vectors&lt;/code&gt; は、対応する右不変部分空間の直交/ユニタリー基底を形成します。実際の場合、固有値の複素共役ペアは、両方を含めるか、または &lt;code&gt;select&lt;/code&gt; を介して両方を除外する必要があります。</target>
        </trans-unit>
        <trans-unit id="9193dfb781a78c7a61a66411409320981bb31c7f" translate="yes" xml:space="preserve">
          <source>Reorders the vectors of a generalized Schur decomposition. &lt;code&gt;select&lt;/code&gt; specifies the eigenvalues in each cluster.</source>
          <target state="translated">一般化されたSchur分解のベクトルを並べ替えます。 &lt;code&gt;select&lt;/code&gt; は、各クラスターの固有値を指定します。</target>
        </trans-unit>
        <trans-unit id="0178bea378d200d7395a3ad31d73f868a131d9b8" translate="yes" xml:space="preserve">
          <source>Repeat a character &lt;code&gt;r&lt;/code&gt; times. This can equivalently be accomplished by calling &lt;a href=&quot;#Base.:%5E-Tuple%7BAbstractString,Integer%7D&quot;&gt;&lt;code&gt;c^r&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字を &lt;code&gt;r&lt;/code&gt; 回繰り返します。これは、&lt;a href=&quot;#Base.:%5E-Tuple%7BAbstractString,Integer%7D&quot;&gt; &lt;code&gt;c^r&lt;/code&gt; &lt;/a&gt;呼び出すことで同等に実行できます。</target>
        </trans-unit>
        <trans-unit id="e44fc152d028ff98dc48813ce3353e784048e146" translate="yes" xml:space="preserve">
          <source>Repeat a string &lt;code&gt;r&lt;/code&gt; times. This can be written as &lt;code&gt;s^r&lt;/code&gt;.</source>
          <target state="translated">文字列を &lt;code&gt;r&lt;/code&gt; 回繰り返します。これは &lt;code&gt;s^r&lt;/code&gt; と書くことができます。</target>
        </trans-unit>
        <trans-unit id="9003bf70eb179d1cb2e479113d3b5adcc0a3e6d0" translate="yes" xml:space="preserve">
          <source>Repeat a string or character &lt;code&gt;n&lt;/code&gt; times. This can also be written as &lt;code&gt;repeat(s, n)&lt;/code&gt;.</source>
          <target state="translated">文字列または文字を &lt;code&gt;n&lt;/code&gt; 回繰り返します。これは &lt;code&gt;repeat(s, n)&lt;/code&gt; と書くこともできます。</target>
        </trans-unit>
        <trans-unit id="407417e90c517e6255f8b29ccda044d03e5e6043" translate="yes" xml:space="preserve">
          <source>Repeated Evaluation: Loops</source>
          <target state="translated">評価を繰り返す。ループ</target>
        </trans-unit>
        <trans-unit id="9a5d1aa1c4465a81af99edb2c48ede7defbd298c" translate="yes" xml:space="preserve">
          <source>Replace a previously yanked text with an older entry from the kill ring</source>
          <target state="translated">以前に引っ張ってきたテキストをキルリングの古いエントリに置き換える</target>
        </trans-unit>
        <trans-unit id="5ea554ba26c6cdf4e55a238116d3b689d4b5e00b" translate="yes" xml:space="preserve">
          <source>Replace each element &lt;code&gt;x&lt;/code&gt; in collection &lt;code&gt;A&lt;/code&gt; by &lt;code&gt;new(x)&lt;/code&gt;. If &lt;code&gt;count&lt;/code&gt; is specified, then replace at most &lt;code&gt;count&lt;/code&gt; values in total (replacements being defined as &lt;code&gt;new(x) !== x&lt;/code&gt;).</source>
          <target state="translated">各要素の置き換え &lt;code&gt;x&lt;/code&gt; コレクションの中に &lt;code&gt;A&lt;/code&gt; をすることによって &lt;code&gt;new(x)&lt;/code&gt; 。 &lt;code&gt;count&lt;/code&gt; が指定されている場合、合計で最大で &lt;code&gt;count&lt;/code&gt; 個の値を置換します（置換は &lt;code&gt;new(x) !== x&lt;/code&gt; として定義されます）。</target>
        </trans-unit>
        <trans-unit id="8206a258838faab70a11b0cc9b2b329f5e9e0707" translate="yes" xml:space="preserve">
          <source>Replacing a module is a runtime error while doing an incremental precompile.</source>
          <target state="translated">モジュールの置き換えは、インクリメンタル・プリコンパイルを行っている間に実行時エラーとなります。</target>
        </trans-unit>
        <trans-unit id="8897437ee139b790b3c3b0c1b0891aa2855ad0d0" translate="yes" xml:space="preserve">
          <source>Replacing the default TCP/IP all-to-all socket connections with a custom transport layer is a little more involved. Each Julia process has as many communication tasks as the workers it is connected to. For example, consider a Julia cluster of 32 processes in an all-to-all mesh network:</source>
          <target state="translated">デフォルトの TCP/IP のすべてのソケット接続をカスタムのトランスポートレイヤーに置き換えるのは、もう少し複雑です。各Juliaプロセスは接続されているワーカーの数だけ通信タスクを持っています。例えば、32 プロセスからなる Julia クラスタをオールツーオールのメッシュネットワークで考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="c37d0a3a6c9e4209a1a466a4d31e289e70ebb071" translate="yes" xml:space="preserve">
          <source>Replacing the default transport requires the new implementation to set up connections to remote workers and to provide appropriate &lt;code&gt;IO&lt;/code&gt; objects that the message-processing loops can wait on. The manager-specific callbacks to be implemented are:</source>
          <target state="translated">デフォルトのトランスポートを置き換えるには、リモートワーカーへの接続をセットアップし、メッセージ処理ループが待機できる適切な &lt;code&gt;IO&lt;/code&gt; オブジェクトを提供するための新しい実装が必要です。実装されるマネージャ固有のコールバックは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="88c23e39da5099c9088be217a1e437e5dd0c1a94" translate="yes" xml:space="preserve">
          <source>Representation of the pointer to the execution context as returned by &lt;code&gt;backtrace&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;backtrace&lt;/code&gt; によって返される実行コンテキストへのポインターの表現。</target>
        </trans-unit>
        <trans-unit id="867fe60cedf706736aa92e1762b54de92a50887f" translate="yes" xml:space="preserve">
          <source>Required Methods</source>
          <target state="translated">必要な方法</target>
        </trans-unit>
        <trans-unit id="672ad5346d62dd6eb67f727712f3a58da5a155d2" translate="yes" xml:space="preserve">
          <source>Required methods</source>
          <target state="translated">必要なメソッド</target>
        </trans-unit>
        <trans-unit id="c30679323a2be9020e0d1cef6eda0599e0f2682b" translate="yes" xml:space="preserve">
          <source>Reseed the random number generator: &lt;code&gt;rng&lt;/code&gt; will give a reproducible sequence of numbers if and only if a &lt;code&gt;seed&lt;/code&gt; is provided. Some RNGs don't accept a seed, like &lt;code&gt;RandomDevice&lt;/code&gt;. After the call to &lt;code&gt;seed!&lt;/code&gt;, &lt;code&gt;rng&lt;/code&gt; is equivalent to a newly created object initialized with the same seed.</source>
          <target state="translated">乱数ジェネレータを再シード： &lt;code&gt;rng&lt;/code&gt; あれば数字の再現可能なシーケンスを与える場合にのみ &lt;code&gt;seed&lt;/code&gt; 提供されます。いくつかのRNGのような種子、受け付けません &lt;code&gt;RandomDevice&lt;/code&gt; を。 &lt;code&gt;seed!&lt;/code&gt; の呼び出し後！、 &lt;code&gt;rng&lt;/code&gt; は、同じシードで初期化された、新しく作成されたオブジェクトと同等です。</target>
        </trans-unit>
        <trans-unit id="1e4233178263047eff9047299fa2917fca63a9a6" translate="yes" xml:space="preserve">
          <source>Reset a stream &lt;code&gt;s&lt;/code&gt; to a previously marked position, and remove the mark. Return the previously marked position. Throw an error if the stream is not marked.</source>
          <target state="translated">ストリーム &lt;code&gt;s&lt;/code&gt; を以前にマークした位置にリセットし、マークを削除します。以前にマークした位置を返します。ストリームがマークされていない場合はエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="f1dd8a7cdcd4d3b8e24b3dbb31f33639019c5799" translate="yes" xml:space="preserve">
          <source>Reset the &lt;code&gt;payload&lt;/code&gt; state back to the initial values so that it can be used again within the credential callback. If a &lt;code&gt;config&lt;/code&gt; is provided the configuration will also be updated.</source>
          <target state="translated">&lt;code&gt;payload&lt;/code&gt; 状態を初期値にリセットして、資格情報コールバック内で再度使用できるようにします。場合は &lt;code&gt;config&lt;/code&gt; 提供された構成も更新されます。</target>
        </trans-unit>
        <trans-unit id="b6c1f83b6d5bd47f16adf342da850889f14a756e" translate="yes" xml:space="preserve">
          <source>Reset the repository &lt;code&gt;repo&lt;/code&gt; to its state at &lt;code&gt;id&lt;/code&gt;, using one of three modes set by &lt;code&gt;mode&lt;/code&gt;:</source>
          <target state="translated">リポジトリリセット &lt;code&gt;repo&lt;/code&gt; での状態に &lt;code&gt;id&lt;/code&gt; によって設定された3つのモードのいずれかを使用して、 &lt;code&gt;mode&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9121bfa37d90a49f7ce00dc2ce43c6017a63c1a4" translate="yes" xml:space="preserve">
          <source>Reset the specialization hint for an argument back to the default. For details, see &lt;a href=&quot;#Base.@nospecialize&quot;&gt;&lt;code&gt;@nospecialize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の特殊化のヒントをデフォルトにリセットします。詳細については、&lt;a href=&quot;#Base.@nospecialize&quot;&gt; &lt;code&gt;@nospecialize&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9112a621f5e0ee242e6ff189cf0e57bafe837403" translate="yes" xml:space="preserve">
          <source>Reshape the array &lt;code&gt;a&lt;/code&gt; as a one-dimensional column vector. Return &lt;code&gt;a&lt;/code&gt; if it is already an &lt;code&gt;AbstractVector&lt;/code&gt;. The resulting array shares the same underlying data as &lt;code&gt;a&lt;/code&gt;, so it will only be mutable if &lt;code&gt;a&lt;/code&gt; is mutable, in which case modifying one will also modify the other.</source>
          <target state="translated">配列 &lt;code&gt;a&lt;/code&gt; を1次元の列ベクトルとして再形成します。すでに &lt;code&gt;AbstractVector&lt;/code&gt; の場合は &lt;code&gt;a&lt;/code&gt; を返します。得られた配列を共有と同じ基本的なデータ、場合にのみ変更可能になるよう一方が、他を修正する修正この場合に、変更可能です。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30ebf608b80d712bf9198048786e28a20f405000" translate="yes" xml:space="preserve">
          <source>Reshape vector &lt;code&gt;v&lt;/code&gt; into a &lt;code&gt;1 &amp;times; length(v)&lt;/code&gt; row matrix. Differs from &lt;code&gt;LinearAlgebra&lt;/code&gt;'s &lt;a href=&quot;../../stdlib/linearalgebra/index#Base.transpose&quot;&gt;&lt;code&gt;transpose&lt;/code&gt;&lt;/a&gt; in that the operation is not recursive.</source>
          <target state="translated">ベクトル &lt;code&gt;v&lt;/code&gt; を &lt;code&gt;1 &amp;times; length(v)&lt;/code&gt; 行行列に再形成します。操作が再帰的ではない点で、 &lt;code&gt;LinearAlgebra&lt;/code&gt; の&lt;a href=&quot;../../stdlib/linearalgebra/index#Base.transpose&quot;&gt; &lt;code&gt;transpose&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="18aaf06295faa19dab9feb8148226aa5261133af" translate="yes" xml:space="preserve">
          <source>Resize &lt;code&gt;a&lt;/code&gt; to contain &lt;code&gt;n&lt;/code&gt; elements. If &lt;code&gt;n&lt;/code&gt; is smaller than the current collection length, the first &lt;code&gt;n&lt;/code&gt; elements will be retained. If &lt;code&gt;n&lt;/code&gt; is larger, the new elements are not guaranteed to be initialized.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 個の要素を含むように &lt;code&gt;a&lt;/code&gt; のサイズを変更します。 &lt;code&gt;n&lt;/code&gt; が現在のコレクションの長さよりも小さい場合、最初の &lt;code&gt;n&lt;/code&gt; 個の要素が保持されます。場合は &lt;code&gt;n&lt;/code&gt; 大きい場合、新しい要素が初期化されることが保証されていません。</target>
        </trans-unit>
        <trans-unit id="45459340193e480267d266ab08060eb7c5c19a12" translate="yes" xml:space="preserve">
          <source>Resize the file or buffer given by the first argument to exactly &lt;code&gt;n&lt;/code&gt; bytes, filling previously unallocated space with '\0' if the file or buffer is grown.</source>
          <target state="translated">最初の引数で指定されたファイルまたはバッファーのサイズをちょうど &lt;code&gt;n&lt;/code&gt; バイトに変更します。ファイルまたはバッファーが大きくなった場合は、以前に割り当てられていないスペースを '\ 0'で埋めます。</target>
        </trans-unit>
        <trans-unit id="0a8ec31d7a57c41b883695b10e1d19b4b5d59dce" translate="yes" xml:space="preserve">
          <source>Resolving IP Addresses</source>
          <target state="translated">IP アドレスの解決</target>
        </trans-unit>
        <trans-unit id="f18d2af1a5b6f171af6f36becf22351abe4161f7" translate="yes" xml:space="preserve">
          <source>Resource management helper function. Applies &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;obj&lt;/code&gt;, making sure to call &lt;code&gt;close&lt;/code&gt; on &lt;code&gt;obj&lt;/code&gt; after &lt;code&gt;f&lt;/code&gt; successfully returns or throws an error. Ensures that allocated git resources are finalized as soon as they are no longer needed.</source>
          <target state="translated">リソース管理ヘルパー関数。適用 &lt;code&gt;f&lt;/code&gt; への &lt;code&gt;obj&lt;/code&gt; 呼び出すことを確認して、 &lt;code&gt;close&lt;/code&gt; に &lt;code&gt;obj&lt;/code&gt; 後 &lt;code&gt;f&lt;/code&gt; に成功を返すか、エラーがスローされます。割り当てられたgitリソースが不要になったらすぐに確定されるようにします。</target>
        </trans-unit>
        <trans-unit id="321b877300d48b15cf831aa1eca5fb701f16a257" translate="yes" xml:space="preserve">
          <source>Resource management helper function. Apply &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;args&lt;/code&gt;, first constructing an instance of type &lt;code&gt;T&lt;/code&gt; from &lt;code&gt;args&lt;/code&gt;. Makes sure to call &lt;code&gt;close&lt;/code&gt; on the resulting object after &lt;code&gt;f&lt;/code&gt; successfully returns or throws an error. Ensures that allocated git resources are finalized as soon as they are no longer needed. If an error is thrown by &lt;code&gt;f&lt;/code&gt;, a warning is shown containing the error.</source>
          <target state="translated">リソース管理ヘルパー関数。適用 &lt;code&gt;f&lt;/code&gt; する &lt;code&gt;args&lt;/code&gt; 第一の型のインスタンスを構築する、 &lt;code&gt;T&lt;/code&gt; をより &lt;code&gt;args&lt;/code&gt; 。 &lt;code&gt;f&lt;/code&gt; が正常に戻るか、エラーをスローした後、結果のオブジェクトで &lt;code&gt;close&lt;/code&gt; を必ず呼び出します。割り当てられたgitリソースが不要になったらすぐに確定されるようにします。 &lt;code&gt;f&lt;/code&gt; によってエラーがスローされると、エラーを含む警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="e7a3457d4100a76c52e384588df17972cd7fb6f8" translate="yes" xml:space="preserve">
          <source>Respect the line length limit used in the surrounding code.</source>
          <target state="translated">周辺のコードで使用されている行数制限を尊重してください。</target>
        </trans-unit>
        <trans-unit id="c3297893448f0dd09ce4b69078470e6e8fd1e9f5" translate="yes" xml:space="preserve">
          <source>Restrict values in &lt;code&gt;array&lt;/code&gt; to the specified range, in-place. See also &lt;a href=&quot;#Base.Math.clamp&quot;&gt;&lt;code&gt;clamp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 値を指定された範囲内に制限します。&lt;a href=&quot;#Base.Math.clamp&quot;&gt; &lt;code&gt;clamp&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="8ff8e0f218497f3558dc18fce42062c20922b89c" translate="yes" xml:space="preserve">
          <source>Restroom</source>
          <target state="translated">Restroom</target>
        </trans-unit>
        <trans-unit id="27ccdd92021f3befcce82b95a8c19cbafe5fc682" translate="yes" xml:space="preserve">
          <source>Results from &lt;a href=&quot;../../stdlib/profile/index#Profile.@profile&quot;&gt;&lt;code&gt;@profile&lt;/code&gt;&lt;/a&gt; accumulate in a buffer; if you run multiple pieces of code under &lt;a href=&quot;../../stdlib/profile/index#Profile.@profile&quot;&gt;&lt;code&gt;@profile&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;../../stdlib/profile/index#Profile.print&quot;&gt;&lt;code&gt;Profile.print()&lt;/code&gt;&lt;/a&gt; will show you the combined results. This can be very useful, but sometimes you want to start fresh; you can do so with &lt;a href=&quot;../../stdlib/profile/index#Profile.clear&quot;&gt;&lt;code&gt;Profile.clear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../stdlib/profile/index#Profile.@profile&quot;&gt; &lt;code&gt;@profile&lt;/code&gt; の&lt;/a&gt;結果はバッファに蓄積されます。&lt;a href=&quot;../../stdlib/profile/index#Profile.@profile&quot;&gt; &lt;code&gt;@profile&lt;/code&gt; の&lt;/a&gt;下で複数のコードを実行すると、&lt;a href=&quot;../../stdlib/profile/index#Profile.print&quot;&gt; &lt;code&gt;Profile.print()&lt;/code&gt; &lt;/a&gt;は結合された結果を表示します。これは非常に便利ですが、最初からやり直したい場合もあります。これは&lt;a href=&quot;../../stdlib/profile/index#Profile.clear&quot;&gt; &lt;code&gt;Profile.clear()&lt;/code&gt; で&lt;/a&gt;行うことができます。</target>
        </trans-unit>
        <trans-unit id="0bf1c4ef6f7d8fb927fe1cf2bf701f118fc2f062" translate="yes" xml:space="preserve">
          <source>Retains the state between multiple calls to the credential callback for the same URL. A &lt;code&gt;CredentialPayload&lt;/code&gt; instance is expected to be &lt;code&gt;reset!&lt;/code&gt; whenever it will be used with a different URL.</source>
          <target state="translated">同じURLに対する資格情報コールバックへの複数の呼び出しの間の状態を保持します。 &lt;code&gt;CredentialPayload&lt;/code&gt; のインスタンスがあることが予想される &lt;code&gt;reset!&lt;/code&gt; 別のURLで使用される場合は常に。</target>
        </trans-unit>
        <trans-unit id="0e7d37b26e7f06065a76a64d5ccb8647bb501ccb" translate="yes" xml:space="preserve">
          <source>Retrieve the active test set from the task's local storage. If no test set is active, use the fallback default test set.</source>
          <target state="translated">タスクのローカル ストレージからアクティブなテスト セットを取得します。アクティブなテストセットがない場合は、フォールバックのデフォルトのテストセットを使用します。</target>
        </trans-unit>
        <trans-unit id="9bb447f38e6f573f933ed4e4ae6d8840cba48bab" translate="yes" xml:space="preserve">
          <source>Retrieve the value(s) stored at the given key or index within a collection. The syntax &lt;code&gt;a[i,j,...]&lt;/code&gt; is converted by the compiler to &lt;code&gt;getindex(a, i, j, ...)&lt;/code&gt;.</source>
          <target state="translated">コレクション内の特定のキーまたはインデックスに格納されている値を取得します。構文 &lt;code&gt;a[i,j,...]&lt;/code&gt; は、コンパイラによって &lt;code&gt;getindex(a, i, j, ...)&lt;/code&gt; 変換されます。</target>
        </trans-unit>
        <trans-unit id="0898d3b6eb5e6c9e604873894f7849cb74be05f5" translate="yes" xml:space="preserve">
          <source>Return $\exp(iz)$.</source>
          <target state="translated">Return $exp(iz)$.</target>
        </trans-unit>
        <trans-unit id="546a9810fb3b7f58f9550af2f45459722fe7b1b5" translate="yes" xml:space="preserve">
          <source>Return $\sqrt{x}$. Throws &lt;a href=&quot;../base/index#Core.DomainError&quot;&gt;&lt;code&gt;DomainError&lt;/code&gt;&lt;/a&gt; for negative &lt;a href=&quot;../numbers/index#Core.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt; arguments. Use complex negative arguments instead. The prefix operator &lt;code&gt;&amp;radic;&lt;/code&gt; is equivalent to &lt;code&gt;sqrt&lt;/code&gt;.</source>
          <target state="translated">$ \ sqrt {x} $を返します。例外&lt;a href=&quot;../base/index#Core.DomainError&quot;&gt; &lt;code&gt;DomainError&lt;/code&gt; は&lt;/a&gt;負のために&lt;a href=&quot;../numbers/index#Core.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt;引数。代わりに、複雑な負の引数を使用してください。プレフィックス演算子 &lt;code&gt;&amp;radic;&lt;/code&gt; は &lt;code&gt;sqrt&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="03aec44f818347adb619e7566b7dc2fa223f66ed" translate="yes" xml:space="preserve">
          <source>Return -1, 0, or 1 depending on whether &lt;code&gt;x&lt;/code&gt; is less than, equal to, or greater than &lt;code&gt;y&lt;/code&gt;, respectively. The first argument specifies a less-than comparison function to use.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が &lt;code&gt;y&lt;/code&gt; より小さいか、等しいか、大きいかによって、それぞれ-1、0、または1を返します。最初の引数は、使用する小なり比較関数を指定します。</target>
        </trans-unit>
        <trans-unit id="903abaa2637c07f4fa56a3f3a08728fa8bf52894" translate="yes" xml:space="preserve">
          <source>Return -1, 0, or 1 depending on whether &lt;code&gt;x&lt;/code&gt; is less than, equal to, or greater than &lt;code&gt;y&lt;/code&gt;, respectively. Uses the total order implemented by &lt;code&gt;isless&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が &lt;code&gt;y&lt;/code&gt; より小さいか、等しいか、大きいかによって、それぞれ-1、0、または1を返します。 &lt;code&gt;isless&lt;/code&gt; によって実装された合計順序を使用します。</target>
        </trans-unit>
        <trans-unit id="85be3dfc7c6ba2af788cd2380ce177eb784ec6a1" translate="yes" xml:space="preserve">
          <source>Return 366 if the year of &lt;code&gt;dt&lt;/code&gt; is a leap year, otherwise return 365.</source>
          <target state="translated">&lt;code&gt;dt&lt;/code&gt; の年がうるう年の場合は366を返し、それ以外の場合は365を返します。</target>
        </trans-unit>
        <trans-unit id="28eec90cad5552fba939690d53af96c766cba77d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;(fld1(x,y), mod1(x,y))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(fld1(x,y), mod1(x,y))&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="b7775e50918a224383355fb00e69e984f1e85000" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;(min(x,y), max(x,y))&lt;/code&gt;. See also: &lt;a href=&quot;../collections/index#Base.extrema&quot;&gt;&lt;code&gt;extrema&lt;/code&gt;&lt;/a&gt; that returns &lt;code&gt;(minimum(x), maximum(x))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(min(x,y), max(x,y))&lt;/code&gt; 返します。参照： &lt;code&gt;(minimum(x), maximum(x))&lt;/code&gt; を返す&lt;a href=&quot;../collections/index#Base.extrema&quot;&gt; &lt;code&gt;extrema&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b81cc4a7b5d1b1a70120dd8543ee470c799d6204" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;(path, io)&lt;/code&gt;, where &lt;code&gt;path&lt;/code&gt; is the path of a new temporary file in &lt;code&gt;parent&lt;/code&gt; and &lt;code&gt;io&lt;/code&gt; is an open file object for this path.</source>
          <target state="translated">Return &lt;code&gt;(path, io)&lt;/code&gt; 、ここで、 &lt;code&gt;path&lt;/code&gt; は &lt;code&gt;parent&lt;/code&gt; 新しい一時ファイルのパス、 &lt;code&gt;io&lt;/code&gt; はこのパスの開いているファイルオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="3f2ed1c476624326620b10c155e11ab922f80142" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;(x,exp)&lt;/code&gt; such that &lt;code&gt;x&lt;/code&gt; has a magnitude in the interval $[1/2, 1)$ or 0, and &lt;code&gt;val&lt;/code&gt; is equal to $x \times 2^{exp}$.</source>
          <target state="translated">リターン &lt;code&gt;(x,exp)&lt;/code&gt; ように、 &lt;code&gt;x&lt;/code&gt; が区間$ [1/2、1で大きさを有する）$または0であり、 &lt;code&gt;val&lt;/code&gt; は $ X \回2 ^ {EXP} $に等しいです。</target>
        </trans-unit>
        <trans-unit id="3d95ed747e8ef647cbccde65d80373b233ed6fcf" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;@printf&lt;/code&gt; formatted output as string.</source>
          <target state="translated">&lt;code&gt;@printf&lt;/code&gt; 形式の出力を文字列として返します。</target>
        </trans-unit>
        <trans-unit id="fbcaad29f666952d13689df6f8cad392dfe2d701" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;A*B&lt;/code&gt; or &lt;code&gt;B*A&lt;/code&gt; according to &lt;a href=&quot;#stdlib-blas-side-1&quot;&gt;&lt;code&gt;side&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;A&lt;/code&gt; is assumed to be symmetric. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used.</source>
          <target state="translated">&lt;a href=&quot;#stdlib-blas-side-1&quot;&gt; &lt;code&gt;side&lt;/code&gt; &lt;/a&gt;に従って &lt;code&gt;A*B&lt;/code&gt; または &lt;code&gt;B*A&lt;/code&gt; を返します。 &lt;code&gt;A&lt;/code&gt; は対称であると見なされます。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="38f714d6b797c7d26ba83c84282c30eba970e022" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;A*B&lt;/code&gt; or the other three variants according to &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;tB&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A*B&lt;/code&gt; または&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;tB&lt;/code&gt; に従って他の3つのバリアントを返します。</target>
        </trans-unit>
        <trans-unit id="6a15e947bb40275a53d457524650c975207b7d9c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;A*x&lt;/code&gt; or &lt;code&gt;A'x&lt;/code&gt; according to &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;に従って &lt;code&gt;A*x&lt;/code&gt; または &lt;code&gt;A'x&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f6f7b8a0a5d2060f42e31d07b3a0be9980ece118" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;A*x&lt;/code&gt; where &lt;code&gt;A&lt;/code&gt; is a symmetric band matrix of order &lt;code&gt;size(A,2)&lt;/code&gt; with &lt;code&gt;k&lt;/code&gt; super-diagonals stored in the argument &lt;code&gt;A&lt;/code&gt;. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;uplo&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used.</source>
          <target state="translated">リターン &lt;code&gt;A*x&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; は、オーダーの対称バンド行列である &lt;code&gt;size(A,2)&lt;/code&gt; を持つ &lt;code&gt;k&lt;/code&gt; 個の引数に格納されている超対角線 &lt;code&gt;A&lt;/code&gt; 。のみ&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;uplo&lt;/code&gt; の&lt;/a&gt;の三角形 &lt;code&gt;A&lt;/code&gt; が使用されています。</target>
        </trans-unit>
        <trans-unit id="63a8cfb7b7d7a4d514e769e13cebdf5b5337c30f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;A*x&lt;/code&gt;. &lt;code&gt;A&lt;/code&gt; is assumed to be symmetric. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;A*x&lt;/code&gt; を返します。 &lt;code&gt;A&lt;/code&gt; は対称であると見なされます。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="22a45b44f113c4645a916eccff1c547e6185b7c0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;Val{c}()&lt;/code&gt;, which contains no run-time data. Types like this can be used to pass the information between functions through the value &lt;code&gt;c&lt;/code&gt;, which must be an &lt;code&gt;isbits&lt;/code&gt; value. The intent of this construct is to be able to dispatch on constants directly (at compile time) without having to test the value of the constant at run time.</source>
          <target state="translated">実行時データを含まない &lt;code&gt;Val{c}()&lt;/code&gt; 返します。このようなタイプは、値 &lt;code&gt;c&lt;/code&gt; を介して関数間で情報を渡すために使用できます。値は &lt;code&gt;isbits&lt;/code&gt; 値でなければなりません。この構造の目的は、実行時に定数の値をテストする必要なく、定数を直接（コンパイル時に）ディスパッチできるようにすることです。</target>
        </trans-unit>
        <trans-unit id="ad79ae405e80415e6f9e697f341865c6fc4face0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;X&lt;/code&gt; scaled by &lt;code&gt;a&lt;/code&gt; for the first &lt;code&gt;n&lt;/code&gt; elements of array &lt;code&gt;X&lt;/code&gt; with stride &lt;code&gt;incx&lt;/code&gt;.</source>
          <target state="translated">ストライド &lt;code&gt;incx&lt;/code&gt; を使用して、配列 &lt;code&gt;X&lt;/code&gt; の最初の &lt;code&gt;n&lt;/code&gt; 要素に対して &lt;code&gt;a&lt;/code&gt; でスケーリングされた &lt;code&gt;X&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="884770fbaa1b7985fcf8b801ca5b5dca9477c5a1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;alpha*A*B&lt;/code&gt; or &lt;code&gt;alpha*B*A&lt;/code&gt; according to &lt;a href=&quot;#stdlib-blas-side-1&quot;&gt;&lt;code&gt;side&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;A&lt;/code&gt; is assumed to be symmetric. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used.</source>
          <target state="translated">&lt;a href=&quot;#stdlib-blas-side-1&quot;&gt; &lt;code&gt;side&lt;/code&gt; &lt;/a&gt;に従って &lt;code&gt;alpha*A*B&lt;/code&gt; または &lt;code&gt;alpha*B*A&lt;/code&gt; を返します。 &lt;code&gt;A&lt;/code&gt; は対称であると見なされます。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="7632e16f439776197d478e91d16bd0dbe681fdb4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;alpha*A*B&lt;/code&gt; or the other three variants according to &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;tB&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;alpha*A*B&lt;/code&gt; または&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;tB&lt;/code&gt; に従って他の3つのバリアントを返します。</target>
        </trans-unit>
        <trans-unit id="28ae9bfae097843622c962b7fc0d95d6b1479b19" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;alpha*A*x&lt;/code&gt; or &lt;code&gt;alpha*A'*x&lt;/code&gt; according to &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt;. The matrix &lt;code&gt;A&lt;/code&gt; is a general band matrix of dimension &lt;code&gt;m&lt;/code&gt; by &lt;code&gt;size(A,2)&lt;/code&gt; with &lt;code&gt;kl&lt;/code&gt; sub-diagonals and &lt;code&gt;ku&lt;/code&gt; super-diagonals, and &lt;code&gt;alpha&lt;/code&gt; is a scalar.</source>
          <target state="translated">&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;trans&lt;/code&gt; &lt;/a&gt;に従って &lt;code&gt;alpha*A*x&lt;/code&gt; または &lt;code&gt;alpha*A'*x&lt;/code&gt; 返します。行列 &lt;code&gt;A&lt;/code&gt; は、 &lt;code&gt;m&lt;/code&gt; が &lt;code&gt;size(A,2)&lt;/code&gt; の次元の一般的なバンド行列であり、 &lt;code&gt;kl&lt;/code&gt; は下対角、 &lt;code&gt;ku&lt;/code&gt; は上対角で、 &lt;code&gt;alpha&lt;/code&gt; はスカラーです。</target>
        </trans-unit>
        <trans-unit id="c28b6e323d9a7456a92ca37ab22fbb0356e118f1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;alpha*A*x&lt;/code&gt; or &lt;code&gt;alpha*A'x&lt;/code&gt; according to &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;alpha&lt;/code&gt; is a scalar.</source>
          <target state="translated">戻り &lt;code&gt;alpha*A*x&lt;/code&gt; または &lt;code&gt;alpha*A'x&lt;/code&gt; に応じ&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; の&lt;/a&gt;。 &lt;code&gt;alpha&lt;/code&gt; はスカラーです。</target>
        </trans-unit>
        <trans-unit id="97d2e6dfc7814ee482f770b7a20dc17f4ac7f352" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;alpha*A*x&lt;/code&gt; where &lt;code&gt;A&lt;/code&gt; is a symmetric band matrix of order &lt;code&gt;size(A,2)&lt;/code&gt; with &lt;code&gt;k&lt;/code&gt; super-diagonals stored in the argument &lt;code&gt;A&lt;/code&gt;. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;uplo&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used.</source>
          <target state="translated">リターン &lt;code&gt;alpha*A*x&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; は、オーダーの対称バンド行列である &lt;code&gt;size(A,2)&lt;/code&gt; を持つ &lt;code&gt;k&lt;/code&gt; 個の引数に格納されている超対角線 &lt;code&gt;A&lt;/code&gt; 。のみ&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;uplo&lt;/code&gt; の&lt;/a&gt;の三角形 &lt;code&gt;A&lt;/code&gt; が使用されています。</target>
        </trans-unit>
        <trans-unit id="4e369faf5092a83aa4f5ce64bd9b2122ce20c690" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;alpha*A*x&lt;/code&gt;. &lt;code&gt;A&lt;/code&gt; is assumed to be symmetric. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used. &lt;code&gt;alpha&lt;/code&gt; is a scalar.</source>
          <target state="translated">&lt;code&gt;alpha*A*x&lt;/code&gt; を返します。 &lt;code&gt;A&lt;/code&gt; は対称であると見なされます。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。 &lt;code&gt;alpha&lt;/code&gt; はスカラーです。</target>
        </trans-unit>
        <trans-unit id="cd3afacdb96be8c4355b9cc6bb9113e60bc891f7" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;false&lt;/code&gt; if operations on subnormal floating-point values (&quot;denormals&quot;) obey rules for IEEE arithmetic, and &lt;code&gt;true&lt;/code&gt; if they might be converted to zeros.</source>
          <target state="translated">非正規浮動小数点値（「非正規」）の演算がIEEE演算の規則に従っている場合は &lt;code&gt;false&lt;/code&gt; を返し、それらがゼロに変換される可能性が &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="08bc3d6d05649438ebfc3a7347e953baa0461ec2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;i&lt;/code&gt; only if &lt;code&gt;i&lt;/code&gt; is a valid index in &lt;code&gt;s&lt;/code&gt; or is equal to &lt;code&gt;0&lt;/code&gt;. Otherwise &lt;code&gt;StringIndexError&lt;/code&gt; or &lt;code&gt;BoundsError&lt;/code&gt; is thrown.</source>
          <target state="translated">戻る &lt;code&gt;i&lt;/code&gt; 場合にのみ &lt;code&gt;i&lt;/code&gt; 内に有効な指標である &lt;code&gt;s&lt;/code&gt; かに等しい &lt;code&gt;0&lt;/code&gt; 。それ以外の場合は、 &lt;code&gt;StringIndexError&lt;/code&gt; または &lt;code&gt;BoundsError&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="e2df76beeb53d6985073c1a138a0708fe56f10b1" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;i&lt;/code&gt; only if &lt;code&gt;i&lt;/code&gt; is a valid index in &lt;code&gt;str&lt;/code&gt; or is equal to &lt;code&gt;ncodeunits(str)+1&lt;/code&gt;. Otherwise &lt;code&gt;StringIndexError&lt;/code&gt; or &lt;code&gt;BoundsError&lt;/code&gt; is thrown.</source>
          <target state="translated">戻る &lt;code&gt;i&lt;/code&gt; 場合にのみ、 &lt;code&gt;i&lt;/code&gt; 、有効な指標である &lt;code&gt;str&lt;/code&gt; かに等しい &lt;code&gt;ncodeunits(str)+1&lt;/code&gt; 。それ以外の場合は、 &lt;code&gt;StringIndexError&lt;/code&gt; または &lt;code&gt;BoundsError&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="addc75c8ee16e75f9b97eb547bb83479b3e899b0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;op(A)*b&lt;/code&gt;, where &lt;code&gt;op&lt;/code&gt; is determined by &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt;. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used. &lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt;&lt;code&gt;dA&lt;/code&gt;&lt;/a&gt; determines if the diagonal values are read or are assumed to be all ones.</source>
          <target state="translated">&lt;code&gt;op(A)*b&lt;/code&gt; を返します。ここで、 &lt;code&gt;op&lt;/code&gt; は&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;によって決定されます。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。&lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt; &lt;code&gt;dA&lt;/code&gt; &lt;/a&gt;は、対角値が読み取られるか、すべて1であると見なされるかを決定します。</target>
        </trans-unit>
        <trans-unit id="f899f10ac90b3961989c2a64d29005fe21f1cfda" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;op(A)*b&lt;/code&gt;, where &lt;code&gt;op&lt;/code&gt; is determined by &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt;. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used. &lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt;&lt;code&gt;dA&lt;/code&gt;&lt;/a&gt; determines if the diagonal values are read or are assumed to be all ones. The multiplication occurs in-place on &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;op(A)*b&lt;/code&gt; を返します。ここで、 &lt;code&gt;op&lt;/code&gt; は&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;によって決定されます。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。&lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt; &lt;code&gt;dA&lt;/code&gt; &lt;/a&gt;は、対角値が読み取られるか、すべて1であると見なされるかを決定します。乗算は &lt;code&gt;b&lt;/code&gt; でインプレースで行われます。</target>
        </trans-unit>
        <trans-unit id="d7b3421c97c5e6941dda38dad776dcd7e0fcc81a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;s&lt;/code&gt; with all characters converted to lowercase.</source>
          <target state="translated">すべての文字を小文字に変換して &lt;code&gt;s&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="11301dd22f4650d1587dfc01c1d9e25d4b8a0e02" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;s&lt;/code&gt; with all characters converted to uppercase.</source>
          <target state="translated">すべての文字を大文字に変換して &lt;code&gt;s&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="99c1d42d86789bcba47c8b90cd87f4737909c0ba" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;s&lt;/code&gt; with the first character converted to lowercase.</source>
          <target state="translated">最初の文字を小文字に変換して &lt;code&gt;s&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f9070164e77a8b8a042b16ac52900d1bbae2b029" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;s&lt;/code&gt; with the first character converted to uppercase (technically &quot;title case&quot; for Unicode). See also &lt;a href=&quot;#Base.Unicode.titlecase&quot;&gt;&lt;code&gt;titlecase&lt;/code&gt;&lt;/a&gt; to capitalize the first character of every word in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">最初の文字を大文字に変換して &lt;code&gt;s&lt;/code&gt; を返します（技術的にはUnicodeの「タイトルケース」）。 &lt;code&gt;s&lt;/code&gt; のすべての単語の最初の文字を大文字にする&lt;a href=&quot;#Base.Unicode.titlecase&quot;&gt; &lt;code&gt;titlecase&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="286f7b7a99d0ace9878aa89a66ba3cb127408d91" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt;, a &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt; in string form, is an ancestor of &lt;code&gt;b&lt;/code&gt;, a &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt; in string form.</source>
          <target state="translated">戻り &lt;code&gt;true&lt;/code&gt; 場合、&lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; は、&lt;/a&gt;文字列形式で、の祖先である &lt;code&gt;b&lt;/code&gt; 、&lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; &lt;/a&gt;文字列形式では。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44a3c9b7d5f36fa4760c8ffc9ea6ee437ea07a0d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; has the setgid flag set, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; にsetgidフラグが設定されている場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="55af8b546678fc9048c70651432a6766601376c2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; has the setuid flag set, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; にsetuidフラグが設定されている場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2d891cf301f71abf201218c7b1a04f18724be41f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; has the sticky bit set, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; にスティッキービットが設定されている場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a4ae884043f92973a60bf5eeb991bea92524c15c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; is a FIFO, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; がFIFOの場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="05afefd7c7b9dd165f2601cf59a04aa74a6ac5b6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; is a block device, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; がブロックデバイスの場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d6663f7e510b9b7b81e2ebdcd9869a94d5e5235d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; is a character device, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; がキャラクタデバイスの場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="38f35cc2b7df68f9731ae73a6071c3ad01a11dd6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; is a directory, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; がディレクトリの場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="067a042ee0883abafe576970cebe05c5b1d1d0cf" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; is a mount point, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; がマウントポイントの場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ae87bc282aafde6da0f699f7915c10aba56d2e3d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; is a regular file, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が通常のファイルの場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="42da1f7a01ea8c3d4de9425970ee1d211594f341" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; is a socket, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; がソケットの場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7e928b6b8007a7fe44f109a5aca2ea56be48ce61" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; is a symbolic link, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; がシンボリックリンクの場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="34d9c0f5535def1c096f4502708154f94b4fa5e5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;s&lt;/code&gt; ends with &lt;code&gt;suffix&lt;/code&gt;. If &lt;code&gt;suffix&lt;/code&gt; is a vector or set of characters, test whether the last character of &lt;code&gt;s&lt;/code&gt; belongs to that set.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; が &lt;code&gt;suffix&lt;/code&gt; で終わる場合は &lt;code&gt;true&lt;/code&gt; を返します。 &lt;code&gt;suffix&lt;/code&gt; がベクトルまたは文字のセットの場合、 &lt;code&gt;s&lt;/code&gt; の最後の文字がそのセットに属しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="bbd61b2c8bba64530e08cd0347e2bef6b45cac1a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;s&lt;/code&gt; ends with the regex pattern, &lt;code&gt;suffix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; が正規表現パターン &lt;code&gt;suffix&lt;/code&gt; で終わる場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="38f664c7ac1357260c9b8921d6ba37738aa2db98" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;s&lt;/code&gt; starts with &lt;code&gt;prefix&lt;/code&gt;. If &lt;code&gt;prefix&lt;/code&gt; is a vector or set of characters, test whether the first character of &lt;code&gt;s&lt;/code&gt; belongs to that set.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; が &lt;code&gt;prefix&lt;/code&gt; で始まる場合は &lt;code&gt;true&lt;/code&gt; を返します。 &lt;code&gt;prefix&lt;/code&gt; がベクトルまたは文字のセットの場合、 &lt;code&gt;s&lt;/code&gt; の最初の文字がそのセットに属しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="eb8e97e1e1361ddb1603ba734ba244aad2e7970f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;s&lt;/code&gt; starts with the regex pattern, &lt;code&gt;prefix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; が正規表現パターン &lt;code&gt;prefix&lt;/code&gt; で始まる場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bffe1a2755951b7dde4368e48ea6e8b212a69fa9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;v&lt;/code&gt; is a valid permutation.</source>
          <target state="translated">戻り &lt;code&gt;true&lt;/code&gt; ならば &lt;code&gt;v&lt;/code&gt; 有効な順列です。</target>
        </trans-unit>
        <trans-unit id="7b10638ea70560e08073859c3757e7e2c6cb39ed" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;x == one(x)&lt;/code&gt;; if &lt;code&gt;x&lt;/code&gt; is an array, this checks whether &lt;code&gt;x&lt;/code&gt; is an identity matrix.</source>
          <target state="translated">&lt;code&gt;x == one(x)&lt;/code&gt; 場合、 &lt;code&gt;true&lt;/code&gt; を返します。 &lt;code&gt;x&lt;/code&gt; が配列の場合、これは &lt;code&gt;x&lt;/code&gt; が単位行列かどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="172e7a176e0cf47c80f42f5a4660bbb9311c739a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;x == zero(x)&lt;/code&gt;; if &lt;code&gt;x&lt;/code&gt; is an array, this checks whether all of the elements of &lt;code&gt;x&lt;/code&gt; are zero.</source>
          <target state="translated">&lt;code&gt;x == zero(x)&lt;/code&gt; 場合、 &lt;code&gt;true&lt;/code&gt; を返します。 &lt;code&gt;x&lt;/code&gt; が配列の場合、これは &lt;code&gt;x&lt;/code&gt; のすべての要素がゼロかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="c3689f38b45d6e8c14576697010f9249344de432" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;x === nothing&lt;/code&gt;, and return &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="translated">&lt;code&gt;x === nothing&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f061358d498c1557e70c82a35b81c9a51067fd14" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is an instance of an &lt;code&gt;isbitstype&lt;/code&gt; type.</source>
          <target state="translated">戻り &lt;code&gt;true&lt;/code&gt; 場合 &lt;code&gt;x&lt;/code&gt; のインスタンスである &lt;code&gt;isbitstype&lt;/code&gt; のタイプ。</target>
        </trans-unit>
        <trans-unit id="c8e18838311209b03f51beb0aa1b2c19921ff5dd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is odd (that is, not divisible by 2), and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が奇数の場合（つまり、2で割り切れない場合）は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ebb5d1e2bcb07eec466ea35722210d30dc9c34c6" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if a valid filesystem entity exists at &lt;code&gt;path&lt;/code&gt;, otherwise returns &lt;code&gt;false&lt;/code&gt;. This is the generalization of &lt;a href=&quot;#Base.Filesystem.isfile&quot;&gt;&lt;code&gt;isfile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.Filesystem.isdir&quot;&gt;&lt;code&gt;isdir&lt;/code&gt;&lt;/a&gt; etc.</source>
          <target state="translated">戻り &lt;code&gt;true&lt;/code&gt; 有効なファイルシステムの実体が存在する場合で &lt;code&gt;path&lt;/code&gt; それ以外を返し、 &lt;code&gt;false&lt;/code&gt; 。これは&lt;a href=&quot;#Base.Filesystem.isfile&quot;&gt; &lt;code&gt;isfile&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#Base.Filesystem.isdir&quot;&gt; &lt;code&gt;isdir&lt;/code&gt; &lt;/a&gt;などの一般化です。</target>
        </trans-unit>
        <trans-unit id="8d96cbf60998abf883e7c096a7125fb9083ee417" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if all values from &lt;code&gt;itr&lt;/code&gt; are distinct when compared with &lt;a href=&quot;../base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り &lt;code&gt;true&lt;/code&gt; からのすべての値ならば &lt;code&gt;itr&lt;/code&gt; と比較して異なっている&lt;a href=&quot;../base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c79771544933c3469416c8a84b84db73cfeed50" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if no tasks are waiting on the condition, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">条件で待機しているタスクがない場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c3883dcfb03ce23fdca1ba6d4a44ec1a09238714" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if stream &lt;code&gt;s&lt;/code&gt; is marked.</source>
          <target state="translated">ストリーム &lt;code&gt;s&lt;/code&gt; がマークされている場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="49fd0e1c8b7098d0100dea3d2f6efd669015a475" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;index&lt;/code&gt; is within the bounds of &lt;code&gt;inds&lt;/code&gt;. Custom types that would like to behave as indices for all arrays can extend this method in order to provide a specialized bounds checking implementation.</source>
          <target state="translated">指定された &lt;code&gt;index&lt;/code&gt; が &lt;code&gt;inds&lt;/code&gt; の境界内にある場合は &lt;code&gt;true&lt;/code&gt; を返します。すべての配列のインデックスとして動作するカスタム型は、このメソッドを拡張して、特殊な境界チェックの実装を提供できます。</target>
        </trans-unit>
        <trans-unit id="2468024b51414e5f8c16ce2b35280345df7ffa47" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the specified IO object is readable (if that can be determined).</source>
          <target state="translated">指定されたIOオブジェクトが読み取り可能な場合は &lt;code&gt;true&lt;/code&gt; を返します（読み取り可能な場合）。</target>
        </trans-unit>
        <trans-unit id="1389dfdd7b3209407e29fbfc1a903992099d5fac" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the specified IO object is writable (if that can be determined).</source>
          <target state="translated">指定されたIOオブジェクトが書き込み可能であれば（それが判別できる場合）、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d2d3b47313937c553008dc45e440691a6e45cbae" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the specified indices &lt;code&gt;I&lt;/code&gt; are in bounds for the given array &lt;code&gt;A&lt;/code&gt;. Subtypes of &lt;code&gt;AbstractArray&lt;/code&gt; should specialize this method if they need to provide custom bounds checking behaviors; however, in many cases one can rely on &lt;code&gt;A&lt;/code&gt;'s indices and &lt;a href=&quot;#Base.checkindex&quot;&gt;&lt;code&gt;checkindex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたインデックス &lt;code&gt;I&lt;/code&gt; が指定された配列 &lt;code&gt;A&lt;/code&gt; の範囲内に &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。 &lt;code&gt;AbstractArray&lt;/code&gt; のサブタイプは、カスタム境界チェック動作を提供する必要がある場合、このメソッドを特化する必要があります。ただし、多くの場合、 &lt;code&gt;A&lt;/code&gt; のインデックスと&lt;a href=&quot;#Base.checkindex&quot;&gt; &lt;code&gt;checkindex&lt;/code&gt; に&lt;/a&gt;依存できます。</target>
        </trans-unit>
        <trans-unit id="77e3dc1300a998508ef8ed0816357df991b1a355" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if the year of &lt;code&gt;dt&lt;/code&gt; is a leap year.</source>
          <target state="translated">&lt;code&gt;dt&lt;/code&gt; の年がうるう年で &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="12b43373f2712e420da24dad6a3c01c03710a882" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if type &lt;code&gt;T&lt;/code&gt; is a &quot;plain data&quot; type, meaning it is immutable and contains no references to other values, only &lt;code&gt;primitive&lt;/code&gt; types and other &lt;code&gt;isbitstype&lt;/code&gt; types. Typical examples are numeric types such as &lt;a href=&quot;../numbers/index#Core.UInt8&quot;&gt;&lt;code&gt;UInt8&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../numbers/index#Base.Complex&quot;&gt;&lt;code&gt;Complex{Float64}&lt;/code&gt;&lt;/a&gt;. This category of types is significant since they are valid as type parameters, may not track &lt;a href=&quot;#Core.isdefined&quot;&gt;&lt;code&gt;isdefined&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;../arrays/index#Base.isassigned&quot;&gt;&lt;code&gt;isassigned&lt;/code&gt;&lt;/a&gt; status, and have a defined layout that is compatible with C.</source>
          <target state="translated">タイプ &lt;code&gt;T&lt;/code&gt; が「プレーンデータ」タイプの場合、 &lt;code&gt;true&lt;/code&gt; を返します。つまり、不変であり、他の値への参照を含まず、 &lt;code&gt;primitive&lt;/code&gt; タイプと他の &lt;code&gt;isbitstype&lt;/code&gt; タイプのみを含みます。典型的な例は、&lt;a href=&quot;../numbers/index#Core.UInt8&quot;&gt; &lt;code&gt;UInt8&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../numbers/index#Base.Complex&quot;&gt; &lt;code&gt;Complex{Float64}&lt;/code&gt; &lt;/a&gt;などの数値型です。このタイプのカテゴリは、タイプパラメータとして有効であり、&lt;a href=&quot;#Core.isdefined&quot;&gt; &lt;code&gt;isdefined&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../arrays/index#Base.isassigned&quot;&gt; &lt;code&gt;isassigned&lt;/code&gt; &lt;/a&gt;ステータスを追跡できず、Cと互換性のあるレイアウトが定義されているため、重要です。</target>
        </trans-unit>
        <trans-unit id="3174b11d17cc1830f5357e9e9a83c64b16df7842" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; iff value &lt;code&gt;v&lt;/code&gt; is immutable. See &lt;a href=&quot;../../manual/types/index#Mutable-Composite-Types-1&quot;&gt;Mutable Composite Types&lt;/a&gt; for a discussion of immutability. Note that this function works on values, so if you give it a type, it will tell you that a value of &lt;code&gt;DataType&lt;/code&gt; is mutable.</source>
          <target state="translated">値 &lt;code&gt;v&lt;/code&gt; が不変で &lt;code&gt;true&lt;/code&gt; 場合に真の値を返します。不変性の説明については、「&lt;a href=&quot;../../manual/types/index#Mutable-Composite-Types-1&quot;&gt;可変複合タイプ」&lt;/a&gt;を参照してください。この関数は値に対して機能するため、型を指定すると、 &lt;code&gt;DataType&lt;/code&gt; の値が変更可能であることがわかります。</target>
        </trans-unit>
        <trans-unit id="26e238dc9478f20ec0c5a2110b9c4c92f5303f7f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; is &lt;code&gt;x&lt;/code&gt; is even (that is, divisible by 2), and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; があり &lt;code&gt;x&lt;/code&gt; （それが2で割り切れる、である）でもあり、そして &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="38a13fbe5c18ae4e4cf0959b1538d4a761e46380" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;condition&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, otherwise return &lt;code&gt;y&lt;/code&gt;. This differs from &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;if&lt;/code&gt; in that it is an ordinary function, so all the arguments are evaluated first. In some cases, using &lt;code&gt;ifelse&lt;/code&gt; instead of an &lt;code&gt;if&lt;/code&gt; statement can eliminate the branch in generated code and provide higher performance in tight loops.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; 場合は &lt;code&gt;x&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;y&lt;/code&gt; を返します。これは &lt;code&gt;?&lt;/code&gt; あるいは &lt;code&gt;if&lt;/code&gt; すべての引数が最初に評価されているので、それは、通常の関数であることを特徴とします。場合によっては、 &lt;code&gt;if&lt;/code&gt; ステートメントの代わりに &lt;code&gt;ifelse&lt;/code&gt; を使用すると、生成されたコードの分岐がなくなり、タイトループでのパフォーマンスが向上します。</target>
        </trans-unit>
        <trans-unit id="f51f7c6ad9dd4b6d04be26c2421f54e2c89d302c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;lo &amp;lt;= x &amp;lt;= hi&lt;/code&gt;. If &lt;code&gt;x &amp;gt; hi&lt;/code&gt;, return &lt;code&gt;hi&lt;/code&gt;. If &lt;code&gt;x &amp;lt; lo&lt;/code&gt;, return &lt;code&gt;lo&lt;/code&gt;. Arguments are promoted to a common type.</source>
          <target state="translated">&lt;code&gt;lo &amp;lt;= x &amp;lt;= hi&lt;/code&gt; 場合、 &lt;code&gt;x&lt;/code&gt; を返します。場合 &lt;code&gt;x &amp;gt; hi&lt;/code&gt; 、返し &lt;code&gt;hi&lt;/code&gt; 。場合 &lt;code&gt;x &amp;lt; lo&lt;/code&gt; 、返し &lt;code&gt;lo&lt;/code&gt; 。引数は一般的なタイプに昇格されます。</target>
        </trans-unit>
        <trans-unit id="1aa26f926e85f2e22eb2ccf3b2b63a6032204425" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; with its sign flipped if &lt;code&gt;y&lt;/code&gt; is negative. For example &lt;code&gt;abs(x) = flipsign(x,x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; が負の場合、符号を反転して &lt;code&gt;x&lt;/code&gt; を返します。たとえば、 &lt;code&gt;abs(x) = flipsign(x,x)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5188d655a202a184514805ce91f62bfc0c45a75e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;z&lt;/code&gt; which has the magnitude of &lt;code&gt;x&lt;/code&gt; and the same sign as &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">戻り &lt;code&gt;z&lt;/code&gt; の大き有する &lt;code&gt;x&lt;/code&gt; と同じ符号 &lt;code&gt;y&lt;/code&gt; は。</target>
        </trans-unit>
        <trans-unit id="39ae389b4c3c7a463cc51f3b9fbef8d08d992a0f" translate="yes" xml:space="preserve">
          <source>Return Symbol</source>
          <target state="translated">リターンシンボル</target>
        </trans-unit>
        <trans-unit id="1ad1a852f4aebf818afd233c472d51699fd6e701" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;Cint&lt;/code&gt; corresponding to the type of &lt;code&gt;ref&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; のタイプに対応する &lt;code&gt;Cint&lt;/code&gt; を返します：</target>
        </trans-unit>
        <trans-unit id="8afae18cceebfc149f272725665f30765e536fdd" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;DateTime&lt;/code&gt; corresponding to the user's system time as UTC/GMT.</source>
          <target state="translated">ユーザーのシステム時刻に対応する &lt;code&gt;DateTime&lt;/code&gt; をUTC / GMTとして返します。</target>
        </trans-unit>
        <trans-unit id="aff9b0f1e83ae193e15e81914ff37064d2bd88fb" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;DateTime&lt;/code&gt; corresponding to the user's system time including the system timezone locale.</source>
          <target state="translated">システムのタイムゾーンロケールを含む、ユーザーのシステム時間に対応する &lt;code&gt;DateTime&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0d02a7138aee79bb9b92867ee06462b14aadffe1" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;GitBlob&lt;/code&gt; object from &lt;code&gt;repo&lt;/code&gt; specified by &lt;code&gt;hash&lt;/code&gt;/&lt;code&gt;spec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; / &lt;code&gt;spec&lt;/code&gt; で指定された &lt;code&gt;repo&lt;/code&gt; から &lt;code&gt;GitBlob&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="79f8212859d55edd3944b87ab71d81d15ab8b374" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;GitCommit&lt;/code&gt; object from &lt;code&gt;repo&lt;/code&gt; specified by &lt;code&gt;hash&lt;/code&gt;/&lt;code&gt;spec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; / &lt;code&gt;spec&lt;/code&gt; で指定された &lt;code&gt;repo&lt;/code&gt; から &lt;code&gt;GitCommit&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="29cc266854a9ec7837608cd0220ea388c98f70ea" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;GitReference&lt;/code&gt; to the current HEAD of &lt;code&gt;repo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GitReference&lt;/code&gt; を &lt;code&gt;repo&lt;/code&gt; の現在のHEADに返します。</target>
        </trans-unit>
        <trans-unit id="d161880b9a24352a478ae0e86c1c6b7287b6cb9f" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;GitTag&lt;/code&gt; object from &lt;code&gt;repo&lt;/code&gt; specified by &lt;code&gt;hash&lt;/code&gt;/&lt;code&gt;spec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; / &lt;code&gt;spec&lt;/code&gt; で指定された &lt;code&gt;repo&lt;/code&gt; から &lt;code&gt;GitTag&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="d8512e7519668022a612fae26cf7f33969bb8340" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;GitTree&lt;/code&gt; object from &lt;code&gt;repo&lt;/code&gt; specified by &lt;code&gt;hash&lt;/code&gt;/&lt;code&gt;spec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; / &lt;code&gt;spec&lt;/code&gt; で指定された &lt;code&gt;repo&lt;/code&gt; から &lt;code&gt;GitTree&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="04df5861b7de47ea1b4fde69def0b6cc3200d256" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;LinearIndices&lt;/code&gt; array with the same shape and &lt;a href=&quot;#Base.axes-Tuple%7BAny%7D&quot;&gt;&lt;code&gt;axes&lt;/code&gt;&lt;/a&gt; as &lt;code&gt;A&lt;/code&gt;, holding the linear index of each entry in &lt;code&gt;A&lt;/code&gt;. Indexing this array with cartesian indices allows mapping them to linear indices.</source>
          <target state="translated">戻り &lt;code&gt;LinearIndices&lt;/code&gt; の同一形状としてアレイを&lt;a href=&quot;#Base.axes-Tuple%7BAny%7D&quot;&gt; &lt;code&gt;axes&lt;/code&gt; &lt;/a&gt;として &lt;code&gt;A&lt;/code&gt; 内の各エントリの線形インデックス保持 &lt;code&gt;A&lt;/code&gt; を。この配列にデカルトインデックスを使用してインデックスを付けると、それらを線形インデックスにマッピングできます。</target>
        </trans-unit>
        <trans-unit id="723f6540741c1e8543366e611c3eb0ee6a93dc1f" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;LinearIndices&lt;/code&gt; array with the specified shape or &lt;a href=&quot;#Base.axes-Tuple%7BAny%7D&quot;&gt;&lt;code&gt;axes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された形状または&lt;a href=&quot;#Base.axes-Tuple%7BAny%7D&quot;&gt; &lt;code&gt;axes&lt;/code&gt; &lt;/a&gt; &lt;code&gt;LinearIndices&lt;/code&gt; 配列を返します。</target>
        </trans-unit>
        <trans-unit id="37f235300d76c40cf8fcf05106084060120acf14" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;Tuple&lt;/code&gt; consisting of all but the first component of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の最初のコンポーネントを除くすべてで構成される &lt;code&gt;Tuple&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="ae2ad24523489ae5b889b4c20d079d7c7bd53c0e" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;Tuple&lt;/code&gt; consisting of all but the last component of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の最後のコンポーネントを除くすべてで構成される &lt;code&gt;Tuple&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="9c1d2d1f0f01adb085128bbef923c1f5da53a751" translate="yes" xml:space="preserve">
          <source>Return a boolean indicating whether &lt;code&gt;T&lt;/code&gt; has &lt;code&gt;name&lt;/code&gt; as one of its own fields.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; が独自のフィールドの1つとして &lt;code&gt;name&lt;/code&gt; を持っているかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="4786ddb57492a82f00b034f1de113ed8965f39de" translate="yes" xml:space="preserve">
          <source>Return a boolean indicating whether the object &lt;code&gt;x&lt;/code&gt; has &lt;code&gt;s&lt;/code&gt; as one of its own properties.</source>
          <target state="translated">オブジェクト &lt;code&gt;x&lt;/code&gt; が独自のプロパティの1つとして &lt;code&gt;s&lt;/code&gt; を持っているかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="b535b555080eb7a8fe1342a09577cf63ca0cbc34" translate="yes" xml:space="preserve">
          <source>Return a collection of all instances of the given type, if applicable. Mostly used for enumerated types (see &lt;code&gt;@enum&lt;/code&gt;).</source>
          <target state="translated">該当する場合、指定されたタイプのすべてのインスタンスのコレクションを返します。主に列挙型に使用されます（ &lt;code&gt;@enum&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="01fd3daebc39e90f403a65891e1cbc9eb748f1ca" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;code&gt;A&lt;/code&gt; where each value &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;A&lt;/code&gt; is replaced by &lt;code&gt;new(x)&lt;/code&gt; If &lt;code&gt;count&lt;/code&gt; is specified, then replace at most &lt;code&gt;count&lt;/code&gt; values in total (replacements being defined as &lt;code&gt;new(x) !== x&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の各値 &lt;code&gt;x&lt;/code&gt; が &lt;code&gt;new(x)&lt;/code&gt; に置き換えられた &lt;code&gt;A&lt;/code&gt; のコピーを返します &lt;code&gt;count&lt;/code&gt; が指定されている場合、合計で最大で &lt;code&gt;count&lt;/code&gt; 個の値を置き換えます（置換は &lt;code&gt;new(x) !== x&lt;/code&gt; として定義されます）。</target>
        </trans-unit>
        <trans-unit id="fa1443034ab0c8d6a4ec94bcc6bdaee293be72e4" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;code&gt;a&lt;/code&gt;, removing elements for which &lt;code&gt;f&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. The function &lt;code&gt;f&lt;/code&gt; is passed one argument.</source>
          <target state="translated">コピーを返します。そのための要素削除、 &lt;code&gt;f&lt;/code&gt; はある &lt;code&gt;false&lt;/code&gt; 。関数 &lt;code&gt;f&lt;/code&gt; には1つの引数が渡されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d99b97ce186eb30c21aab39f39bc00cb0a7ec5de" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;code&gt;d&lt;/code&gt;, removing elements for which &lt;code&gt;f&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. The function &lt;code&gt;f&lt;/code&gt; is passed &lt;code&gt;key=&amp;gt;value&lt;/code&gt; pairs.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; のコピーを返し、 &lt;code&gt;f&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; である要素を削除します。関数 &lt;code&gt;f&lt;/code&gt; には、 &lt;code&gt;key=&amp;gt;value&lt;/code&gt; ペアが渡されます。</target>
        </trans-unit>
        <trans-unit id="2bce92bee44559d3b3f412ee5014a1f40aabd4cf" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;code&gt;v&lt;/code&gt; reversed from start to stop. See also &lt;a href=&quot;../iterators/index#Base.Iterators.reverse&quot;&gt;&lt;code&gt;Iterators.reverse&lt;/code&gt;&lt;/a&gt; for reverse-order iteration without making a copy.</source>
          <target state="translated">開始から停止まで反転した &lt;code&gt;v&lt;/code&gt; のコピーを返します。コピーを作成せずに逆順の反復を行うには&lt;a href=&quot;../iterators/index#Base.Iterators.reverse&quot;&gt; &lt;code&gt;Iterators.reverse&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="d123df6db50f32c898b11f11203e3ca6ab83c228" translate="yes" xml:space="preserve">
          <source>Return a copy of collection &lt;code&gt;A&lt;/code&gt; where, for each pair &lt;code&gt;old=&amp;gt;new&lt;/code&gt; in &lt;code&gt;old_new&lt;/code&gt;, all occurrences of &lt;code&gt;old&lt;/code&gt; are replaced by &lt;code&gt;new&lt;/code&gt;. Equality is determined using &lt;a href=&quot;../base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;count&lt;/code&gt; is specified, then replace at most &lt;code&gt;count&lt;/code&gt; occurrences in total.</source>
          <target state="translated">コレクションのコピーを返します &lt;code&gt;A&lt;/code&gt; 各ペアのために、 &lt;code&gt;old=&amp;gt;new&lt;/code&gt; で &lt;code&gt;old_new&lt;/code&gt; 、のすべての出現 &lt;code&gt;old&lt;/code&gt; 置き換えられている &lt;code&gt;new&lt;/code&gt; 。等価は&lt;a href=&quot;../base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt;を使用して決定されます。 &lt;code&gt;count&lt;/code&gt; が指定されている場合は、合計で最大 &lt;code&gt;count&lt;/code&gt; 個のオカレンスを置き換えます。</target>
        </trans-unit>
        <trans-unit id="6bf904fd088d3b50f3398edfca86c47c38f05564" translate="yes" xml:space="preserve">
          <source>Return a list of all process identifiers on the same physical node. Specifically all workers bound to the same ip-address as &lt;code&gt;pid&lt;/code&gt; are returned.</source>
          <target state="translated">同じ物理ノード上のすべてのプロセス識別子のリストを返します。具体的には、 &lt;code&gt;pid&lt;/code&gt; と同じIPアドレスにバインドされているすべてのワーカーが返されます。</target>
        </trans-unit>
        <trans-unit id="a01a9d7a96a76cd5860ea30835c42c108506c3dc" translate="yes" xml:space="preserve">
          <source>Return a list of all process identifiers, including pid 1 (which is not included by &lt;a href=&quot;#Distributed.workers&quot;&gt;&lt;code&gt;workers()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">pid 1（&lt;a href=&quot;#Distributed.workers&quot;&gt; &lt;code&gt;workers()&lt;/code&gt; &lt;/a&gt;は含まれません）を含むすべてのプロセス識別子のリストを返します。</target>
        </trans-unit>
        <trans-unit id="702ac305266d4215a335edc3dac63c9f45353a0c" translate="yes" xml:space="preserve">
          <source>Return a list of all worker process identifiers.</source>
          <target state="translated">すべてのワーカープロセス識別子のリストを返します。</target>
        </trans-unit>
        <trans-unit id="661d40a56f5112231546fb992d27481345963bd4" translate="yes" xml:space="preserve">
          <source>Return a list of git features the current version of libgit2 supports, such as threading or using HTTPS or SSH.</source>
          <target state="translated">現在のバージョンの libgit2 がサポートしている git 機能の一覧を返します。</target>
        </trans-unit>
        <trans-unit id="2fb191238b99fdb4566221cf68cfd597f1f91480" translate="yes" xml:space="preserve">
          <source>Return a list of immediate subtypes of DataType &lt;code&gt;T&lt;/code&gt;. Note that all currently loaded subtypes are included, including those not visible in the current module.</source>
          <target state="translated">DataType &lt;code&gt;T&lt;/code&gt; の直接のサブタイプのリストを返します。現在ロードされているすべてのサブタイプが含まれていることに注意してください。現在のモジュールでは表示されないものも含まれます。</target>
        </trans-unit>
        <trans-unit id="68334c9cb10233a0925e4b05c38f44bfe43867ec" translate="yes" xml:space="preserve">
          <source>Return a markdown table giving information about exported global variables in a module, optionally restricted to those matching &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">モジュール内のエクスポートされたグローバル変数に関する情報を提供するマークダウンテーブルを返します。オプションで、一致する &lt;code&gt;pattern&lt;/code&gt; 制限されます。</target>
        </trans-unit>
        <trans-unit id="2252ae82162c73a48227126fb0de0d07be8ffbcb" translate="yes" xml:space="preserve">
          <source>Return a matrix &lt;code&gt;M&lt;/code&gt; whose columns are the eigenvectors of &lt;code&gt;A&lt;/code&gt;. (The &lt;code&gt;k&lt;/code&gt;th eigenvector can be obtained from the slice &lt;code&gt;M[:, k]&lt;/code&gt;.)</source>
          <target state="translated">列が &lt;code&gt;A&lt;/code&gt; の固有ベクトルである行列 &lt;code&gt;M&lt;/code&gt; を返します。（ &lt;code&gt;k&lt;/code&gt; 番目の固有ベクトルはスライス &lt;code&gt;M[:, k]&lt;/code&gt; から取得できます。）</target>
        </trans-unit>
        <trans-unit id="6cdbdd1374217fd16ab33f977cc2179a8147f901" translate="yes" xml:space="preserve">
          <source>Return a matrix &lt;code&gt;M&lt;/code&gt; whose columns are the eigenvectors of &lt;code&gt;A&lt;/code&gt;. (The &lt;code&gt;k&lt;/code&gt;th eigenvector can be obtained from the slice &lt;code&gt;M[:, k]&lt;/code&gt;.) The &lt;code&gt;permute&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt;, and &lt;code&gt;sortby&lt;/code&gt; keywords are the same as for &lt;a href=&quot;#LinearAlgebra.eigen&quot;&gt;&lt;code&gt;eigen&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">列が &lt;code&gt;A&lt;/code&gt; の固有ベクトルである行列 &lt;code&gt;M&lt;/code&gt; を返します。（ &lt;code&gt;k&lt;/code&gt; 固有ベクトル番目のスライスから得られる &lt;code&gt;M[:, k]&lt;/code&gt; ） &lt;code&gt;permute&lt;/code&gt; 、 &lt;code&gt;scale&lt;/code&gt; 、及び &lt;code&gt;sortby&lt;/code&gt; キーワードと同じである&lt;a href=&quot;#LinearAlgebra.eigen&quot;&gt; &lt;code&gt;eigen&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96494cbb4168a201b49087b55894de063bb84f27" translate="yes" xml:space="preserve">
          <source>Return a matrix &lt;code&gt;M&lt;/code&gt; whose columns are the generalized eigenvectors of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;. (The &lt;code&gt;k&lt;/code&gt;th eigenvector can be obtained from the slice &lt;code&gt;M[:, k]&lt;/code&gt;.)</source>
          <target state="translated">列が &lt;code&gt;A&lt;/code&gt; および &lt;code&gt;B&lt;/code&gt; の一般化された固有ベクトルである行列 &lt;code&gt;M&lt;/code&gt; を返します。（ &lt;code&gt;k&lt;/code&gt; 番目の固有ベクトルはスライス &lt;code&gt;M[:, k]&lt;/code&gt; から取得できます。）</target>
        </trans-unit>
        <trans-unit id="2d79bc49eaab8e76eeaf5650d7becb20d799912a" translate="yes" xml:space="preserve">
          <source>Return a multiplicative identity for &lt;code&gt;x&lt;/code&gt;: a value such that &lt;code&gt;one(x)*x == x*one(x) == x&lt;/code&gt;. Alternatively &lt;code&gt;one(T)&lt;/code&gt; can take a type &lt;code&gt;T&lt;/code&gt;, in which case &lt;code&gt;one&lt;/code&gt; returns a multiplicative identity for any &lt;code&gt;x&lt;/code&gt; of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の乗法的アイデンティティを返します： &lt;code&gt;one(x)*x == x*one(x) == x&lt;/code&gt; 。あるいは &lt;code&gt;one(T)&lt;/code&gt; 型取ることができる &lt;code&gt;T&lt;/code&gt; 場合には、 &lt;code&gt;one&lt;/code&gt; 戻り任意ため乗法同一 &lt;code&gt;x&lt;/code&gt; 型の &lt;code&gt;T&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b2e42a5972bcdc32fd9087602fca5538794993d2" translate="yes" xml:space="preserve">
          <source>Return a mutable array with the same element type and size &lt;em&gt;dims&lt;/em&gt;</source>
          <target state="translated">同じ要素タイプとサイズ&lt;em&gt;dimsを&lt;/em&gt;持つ可変配列を返します&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4533e2c4cf80e67fc8f66ae7dc23f074e485fe15" translate="yes" xml:space="preserve">
          <source>Return a mutable array with the same shape and element type</source>
          <target state="translated">同じ形状と要素型を持つ可変配列を返します。</target>
        </trans-unit>
        <trans-unit id="f98ec5b3723e35e3afcecd66a40c8b6f941baead" translate="yes" xml:space="preserve">
          <source>Return a mutable array with the same shape and the specified element type</source>
          <target state="translated">同じ形状で指定された要素型を持つ可変配列を返します。</target>
        </trans-unit>
        <trans-unit id="2140a83c97ee10b2632536559e3c344c42d25a9e" translate="yes" xml:space="preserve">
          <source>Return a mutable array with the specified element type and size</source>
          <target state="translated">指定された要素の型とサイズを持つ可変配列を返します。</target>
        </trans-unit>
        <trans-unit id="01d51a294a5d7a7d4c5bcf93d853014c413607ff" translate="yes" xml:space="preserve">
          <source>Return a mutable array with the specified indices &lt;code&gt;inds&lt;/code&gt; (see below)</source>
          <target state="translated">指定されたインデックス &lt;code&gt;inds&lt;/code&gt; を含む可変配列を返します（以下を参照）</target>
        </trans-unit>
        <trans-unit id="1315e3b27dcc5738fe24f032fc65542d8aa855b5" translate="yes" xml:space="preserve">
          <source>Return a new read-only I/O stream, which decodes base64-encoded data read from &lt;code&gt;istream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;istream&lt;/code&gt; から読み取られたbase64でエンコードされたデータをデコードする新しい読み取り専用I / Oストリームを返します。</target>
        </trans-unit>
        <trans-unit id="20579c8f0898667ee3bf1b4bd002ec7984bdd051" translate="yes" xml:space="preserve">
          <source>Return a new write-only I/O stream, which converts any bytes written to it into base64-encoded ASCII bytes written to &lt;code&gt;ostream&lt;/code&gt;. Calling &lt;a href=&quot;../../base/io-network/index#Base.close&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Base64EncodePipe&lt;/code&gt; stream is necessary to complete the encoding (but does not close &lt;code&gt;ostream&lt;/code&gt;).</source>
          <target state="translated">新しい書き込み専用I / Oストリームを返します。これは、書き込まれたバイトを、base64でエンコードされた &lt;code&gt;ostream&lt;/code&gt; に書き込まれたASCIIバイトに変換します。エンコードを完了するには、 &lt;code&gt;Base64EncodePipe&lt;/code&gt; ストリームで&lt;a href=&quot;../../base/io-network/index#Base.close&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;を呼び出す必要があります（ただし、 &lt;code&gt;ostream&lt;/code&gt; は閉じません）。</target>
        </trans-unit>
        <trans-unit id="c55c17bc506b4da25fe05bd34db4a7aec8c81e87" translate="yes" xml:space="preserve">
          <source>Return a partial permutation &lt;code&gt;I&lt;/code&gt; of the vector &lt;code&gt;v&lt;/code&gt;, so that &lt;code&gt;v[I]&lt;/code&gt; returns values of a fully sorted version of &lt;code&gt;v&lt;/code&gt; at index &lt;code&gt;k&lt;/code&gt;. If &lt;code&gt;k&lt;/code&gt; is a range, a vector of indices is returned; if &lt;code&gt;k&lt;/code&gt; is an integer, a single index is returned. The order is specified using the same keywords as &lt;code&gt;sort!&lt;/code&gt;. The permutation is stable, meaning that indices of equal elements appear in ascending order.</source>
          <target state="translated">ベクトル &lt;code&gt;v&lt;/code&gt; の部分置換 &lt;code&gt;I&lt;/code&gt; を返すため、 &lt;code&gt;v[I]&lt;/code&gt; はインデックス &lt;code&gt;k&lt;/code&gt; で &lt;code&gt;v&lt;/code&gt; の完全にソートされたバージョンの値を返します。 &lt;code&gt;k&lt;/code&gt; が範囲の場合、インデックスのベクトルが返されます。場合 &lt;code&gt;k&lt;/code&gt; 整数であり、単一のインデックスが返されます。順序は、 &lt;code&gt;sort!&lt;/code&gt; と同じキーワードを使用して指定されます。。順列は安定しています。つまり、等しい要素のインデックスは昇順で表示されます。</target>
        </trans-unit>
        <trans-unit id="a13a3e810484977955225282ce555ea8878481f3" translate="yes" xml:space="preserve">
          <source>Return a permutation vector &lt;code&gt;I&lt;/code&gt; that puts &lt;code&gt;v[I]&lt;/code&gt; in sorted order. The order is specified using the same keywords as &lt;a href=&quot;#Base.sort!&quot;&gt;&lt;code&gt;sort!&lt;/code&gt;&lt;/a&gt;. The permutation is guaranteed to be stable even if the sorting algorithm is unstable, meaning that indices of equal elements appear in ascending order.</source>
          <target state="translated">&lt;code&gt;v[I]&lt;/code&gt; をソート順に並べ替える順列ベクトル &lt;code&gt;I&lt;/code&gt; を返します。順序は、&lt;a href=&quot;#Base.sort!&quot;&gt; &lt;code&gt;sort!&lt;/code&gt; &lt;/a&gt;と同じキーワードを使用して指定されます。。並べ替えアルゴリズムが不安定な場合でも順列は安定していることが保証されています。つまり、等しい要素のインデックスは昇順で表示されます。</target>
        </trans-unit>
        <trans-unit id="082582ec276990eb3a7052ea4798e78f3da22a2f" translate="yes" xml:space="preserve">
          <source>Return a randomly permuted copy of &lt;code&gt;v&lt;/code&gt;. The optional &lt;code&gt;rng&lt;/code&gt; argument specifies a random number generator (see &lt;a href=&quot;#Random-Numbers-1&quot;&gt;Random Numbers&lt;/a&gt;). To permute &lt;code&gt;v&lt;/code&gt; in-place, see &lt;a href=&quot;#Random.shuffle!&quot;&gt;&lt;code&gt;shuffle!&lt;/code&gt;&lt;/a&gt;. To obtain randomly permuted indices, see &lt;a href=&quot;#Random.randperm&quot;&gt;&lt;code&gt;randperm&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; のランダムに並べ替えられたコピーを返します。オプションの &lt;code&gt;rng&lt;/code&gt; 引数は、乱数ジェネレーターを指定します（「&lt;a href=&quot;#Random-Numbers-1&quot;&gt;乱数&lt;/a&gt;」を参照）。 &lt;code&gt;v&lt;/code&gt; インプレースを並べ替えるには、&lt;a href=&quot;#Random.shuffle!&quot;&gt; &lt;code&gt;shuffle!&lt;/code&gt; &lt;/a&gt;参照してください！。ランダムに&lt;a href=&quot;#Random.randperm&quot;&gt; &lt;code&gt;randperm&lt;/code&gt; &lt;/a&gt;インデックスを取得するには、randpermを参照してください。</target>
        </trans-unit>
        <trans-unit id="7db433d5900aae509c9e7d0bba5efe62140cad94" translate="yes" xml:space="preserve">
          <source>Return a relative filepath to &lt;code&gt;path&lt;/code&gt; either from the current directory or from an optional start directory. This is a path computation: the filesystem is not accessed to confirm the existence or nature of &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;startpath&lt;/code&gt;.</source>
          <target state="translated">現在のディレクトリまたはオプションの開始ディレクトリから &lt;code&gt;path&lt;/code&gt; への相対ファイルパスを返します。これはパス計算です。 &lt;code&gt;path&lt;/code&gt; または &lt;code&gt;startpath&lt;/code&gt; の存在または性質を確認するためにファイルシステムにアクセスしません。</target>
        </trans-unit>
        <trans-unit id="084668168f87d317d42b8384264bed23ce594a2e" translate="yes" xml:space="preserve">
          <source>Return a repository &lt;code&gt;repo&lt;/code&gt; to a previous &lt;code&gt;State&lt;/code&gt;&lt;code&gt;s&lt;/code&gt;, for example the HEAD of a branch before a merge attempt. &lt;code&gt;s&lt;/code&gt; can be generated using the &lt;a href=&quot;#LibGit2.snapshot&quot;&gt;&lt;code&gt;snapshot&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">リポジトリの &lt;code&gt;repo&lt;/code&gt; を以前の &lt;code&gt;State&lt;/code&gt; &lt;code&gt;s&lt;/code&gt; に戻します。たとえば、マージを試みる前のブランチのHEADです。 &lt;code&gt;s&lt;/code&gt; は、&lt;a href=&quot;#LibGit2.snapshot&quot;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt;機能を使用して生成できます。</target>
        </trans-unit>
        <trans-unit id="9d92a2502827eb70c24f74de9aa5430dc3802c5e" translate="yes" xml:space="preserve">
          <source>Return a shortened version of the name of &lt;code&gt;ref&lt;/code&gt; that's &quot;human-readable&quot;.</source>
          <target state="translated">「人間が読める」 &lt;code&gt;ref&lt;/code&gt; の名前の短縮版を返します。</target>
        </trans-unit>
        <trans-unit id="47fb4d7e122d3ad27dd1e4d090c6459dfd25c8eb" translate="yes" xml:space="preserve">
          <source>Return a string with the contents of the operating system clipboard (&quot;paste&quot;).</source>
          <target state="translated">オペレーティングシステムのクリップボード(&quot;ペースト&quot;)の内容を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e814f7bebde0960aada4df04d860987fa24241d4" translate="yes" xml:space="preserve">
          <source>Return a subset of array &lt;code&gt;A&lt;/code&gt; as specified by &lt;code&gt;inds&lt;/code&gt;, where each &lt;code&gt;ind&lt;/code&gt; may be an &lt;code&gt;Int&lt;/code&gt;, an &lt;a href=&quot;../collections/index#Base.AbstractRange&quot;&gt;&lt;code&gt;AbstractRange&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;#Base.Vector&quot;&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/a&gt;. See the manual section on &lt;a href=&quot;../../manual/arrays/index#man-array-indexing-1&quot;&gt;array indexing&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;inds&lt;/code&gt; で指定された配列 &lt;code&gt;A&lt;/code&gt; のサブセットを返します。各 &lt;code&gt;ind&lt;/code&gt; は、 &lt;code&gt;Int&lt;/code&gt; 、&lt;a href=&quot;../collections/index#Base.AbstractRange&quot;&gt; &lt;code&gt;AbstractRange&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#Base.Vector&quot;&gt; &lt;code&gt;Vector&lt;/code&gt; &lt;/a&gt;です。詳細については、&lt;a href=&quot;../../manual/arrays/index#man-array-indexing-1&quot;&gt;配列のインデックス付け&lt;/a&gt;に関する手動セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="ea5f9b57b4a69e295eacad7da13367f65dd29401" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(I, J, V)&lt;/code&gt; where &lt;code&gt;I&lt;/code&gt; and &lt;code&gt;J&lt;/code&gt; are the row and column indices of the stored (&quot;structurally non-zero&quot;) values in sparse matrix &lt;code&gt;A&lt;/code&gt;, and &lt;code&gt;V&lt;/code&gt; is a vector of the values.</source>
          <target state="translated">タプル &lt;code&gt;(I, J, V)&lt;/code&gt; 返します。ここで、 &lt;code&gt;I&lt;/code&gt; と &lt;code&gt;J&lt;/code&gt; はスパース行列 &lt;code&gt;A&lt;/code&gt; に格納された（「構造的にゼロでない」）値の行と列のインデックスで、 &lt;code&gt;V&lt;/code&gt; は値のベクトルです。</target>
        </trans-unit>
        <trans-unit id="2eca6a0c985e14439b2271bebc0fc5434ad05841" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(fpart, ipart)&lt;/code&gt; of the fractional and integral parts of a number. Both parts have the same sign as the argument.</source>
          <target state="translated">数値の小数部と整数部のタプル &lt;code&gt;(fpart, ipart)&lt;/code&gt; を返します。どちらの部分も引数と同じ符号を持っています。</target>
        </trans-unit>
        <trans-unit id="672428aaaa7675883655cebca3213aad4a95cc05" translate="yes" xml:space="preserve">
          <source>Return a tuple containing the dimensions of &lt;code&gt;A&lt;/code&gt;. Optionally you can specify a dimension to just get the length of that dimension.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の次元を含むタプルを返します。オプションで、寸法を指定して、その寸法の長さだけを取得することもできます。</target>
        </trans-unit>
        <trans-unit id="97a73deb215fd09c18a3debe496194c3d39ee8b2" translate="yes" xml:space="preserve">
          <source>Return a tuple of the memory strides in each dimension.</source>
          <target state="translated">各次元のメモリ・ストライドのタプルを返します。</target>
        </trans-unit>
        <trans-unit id="98f005889bc8c762b500f0d267c364d4441386b2" translate="yes" xml:space="preserve">
          <source>Return a vector &lt;code&gt;I&lt;/code&gt; of the &lt;code&gt;true&lt;/code&gt; indices or keys of &lt;code&gt;A&lt;/code&gt;. If there are no such elements of &lt;code&gt;A&lt;/code&gt;, return an empty array. To search for other kinds of values, pass a predicate as the first argument.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の &lt;code&gt;true&lt;/code&gt; インデックスまたはキーのベクトル &lt;code&gt;I&lt;/code&gt; を返します。 &lt;code&gt;A&lt;/code&gt; のそのような要素がない場合は、空の配列を返します。他の種類の値を検索するには、最初の引数として述語を渡します。</target>
        </trans-unit>
        <trans-unit id="aca84321b1bfe8a7531d2fd8458cfc9f65039aae" translate="yes" xml:space="preserve">
          <source>Return a vector &lt;code&gt;I&lt;/code&gt; of the indices or keys of &lt;code&gt;A&lt;/code&gt; where &lt;code&gt;f(A[I])&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If there are no such elements of &lt;code&gt;A&lt;/code&gt;, return an empty array.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; のインデックスまたはキーのベクトル &lt;code&gt;I&lt;/code&gt; を返し &lt;code&gt;true&lt;/code&gt; 。ここで、 &lt;code&gt;f(A[I])&lt;/code&gt; はtrueを返します。 &lt;code&gt;A&lt;/code&gt; のそのような要素がない場合は、空の配列を返します。</target>
        </trans-unit>
        <trans-unit id="82d113ccd7fb6385ebd57c9b1d1e2bb607644c4b" translate="yes" xml:space="preserve">
          <source>Return a vector consisting of a random subsequence of the given array &lt;code&gt;A&lt;/code&gt;, where each element of &lt;code&gt;A&lt;/code&gt; is included (in order) with independent probability &lt;code&gt;p&lt;/code&gt;. (Complexity is linear in &lt;code&gt;p*length(A)&lt;/code&gt;, so this function is efficient even if &lt;code&gt;p&lt;/code&gt; is small and &lt;code&gt;A&lt;/code&gt; is large.) Technically, this process is known as &quot;Bernoulli sampling&quot; of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">所与のアレイのランダム部分配列からなるベクトルを返す &lt;code&gt;A&lt;/code&gt; の各元素、 &lt;code&gt;A&lt;/code&gt; は、（順番に）独立した確率に含まれる &lt;code&gt;p&lt;/code&gt; 。（複雑度は &lt;code&gt;p*length(A)&lt;/code&gt; で線形であるため、この関数は &lt;code&gt;p&lt;/code&gt; が小さく &lt;code&gt;A&lt;/code&gt; が大きい場合でも効率的です。）技術的には、このプロセスは &lt;code&gt;A&lt;/code&gt; の「ベルヌーイサンプリング」として知られています。</target>
        </trans-unit>
        <trans-unit id="c92c2470850bb5f599bb8dc02ceb3abe4ef7bebf" translate="yes" xml:space="preserve">
          <source>Return a vector of the names of the remotes of &lt;code&gt;repo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;repo&lt;/code&gt; のリモートの名前のベクトルを返します。</target>
        </trans-unit>
        <trans-unit id="fab624b74521ea57eafee9fda6e890eafa18a2bc" translate="yes" xml:space="preserve">
          <source>Return a vector of the row indices of &lt;code&gt;A&lt;/code&gt;. Any modifications to the returned vector will mutate &lt;code&gt;A&lt;/code&gt; as well. Providing access to how the row indices are stored internally can be useful in conjunction with iterating over structural nonzero values. See also &lt;a href=&quot;#SparseArrays.nonzeros&quot;&gt;&lt;code&gt;nonzeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#SparseArrays.nzrange&quot;&gt;&lt;code&gt;nzrange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の行インデックスのベクトルを返します。返されたベクトルに変更を加えると、 &lt;code&gt;A&lt;/code&gt; も変更されます。行インデックスが内部的に格納される方法へのアクセスを提供することは、構造的なゼロ以外の値を反復することと組み合わせて役立つことがあります。参照してください&lt;a href=&quot;#SparseArrays.nonzeros&quot;&gt; &lt;code&gt;nonzeros&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#SparseArrays.nzrange&quot;&gt; &lt;code&gt;nzrange&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2eb1e764240d79c7bc9de975ee3c698513618d1" translate="yes" xml:space="preserve">
          <source>Return a vector of the structural nonzero values in sparse array &lt;code&gt;A&lt;/code&gt;. This includes zeros that are explicitly stored in the sparse array. The returned vector points directly to the internal nonzero storage of &lt;code&gt;A&lt;/code&gt;, and any modifications to the returned vector will mutate &lt;code&gt;A&lt;/code&gt; as well. See &lt;a href=&quot;#SparseArrays.rowvals&quot;&gt;&lt;code&gt;rowvals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#SparseArrays.nzrange&quot;&gt;&lt;code&gt;nzrange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">スパース配列 &lt;code&gt;A&lt;/code&gt; の構造的非ゼロ値のベクトルを返します。これには、スパース配列に明示的に格納されているゼロが含まれます。直接の内部ゼロ以外のストレージに戻さベクトル点 &lt;code&gt;A&lt;/code&gt; 戻さベクターに、および任意の修飾が変異します &lt;code&gt;A&lt;/code&gt; をよくできます。&lt;a href=&quot;#SparseArrays.rowvals&quot;&gt; &lt;code&gt;rowvals&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#SparseArrays.nzrange&quot;&gt; &lt;code&gt;nzrange&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="887b4200ba0f1e146fc441539a0d07a1796ef671" translate="yes" xml:space="preserve">
          <source>Return a vector similar to the array wrapped by the given &lt;code&gt;SkipMissing&lt;/code&gt; iterator but with all missing elements and those for which &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; removed.</source>
          <target state="translated">指定された &lt;code&gt;SkipMissing&lt;/code&gt; イテレータでラップされた配列に似たベクトルを返しますが、すべての欠落している要素と、 &lt;code&gt;f&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す要素は削除されています。</target>
        </trans-unit>
        <trans-unit id="6489199798bf1c89110141b838c008cb7057cc9f" translate="yes" xml:space="preserve">
          <source>Return a view of all the data of &lt;code&gt;A&lt;/code&gt; where the index for dimension &lt;code&gt;d&lt;/code&gt; equals &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">次元 &lt;code&gt;d&lt;/code&gt; のインデックスが &lt;code&gt;i&lt;/code&gt; に等しい &lt;code&gt;A&lt;/code&gt; のすべてのデータのビューを返します。</target>
        </trans-unit>
        <trans-unit id="247403b6236abba86477cbc9623ac9c87da3a6fd" translate="yes" xml:space="preserve">
          <source>Return all authors of commits to the &lt;code&gt;repo&lt;/code&gt; repository.</source>
          <target state="translated">コミットのすべての著者を返す &lt;code&gt;repo&lt;/code&gt; リポジトリ。</target>
        </trans-unit>
        <trans-unit id="013db4b9a12f02a9a9464e0aca846fda6fd6d0a2" translate="yes" xml:space="preserve">
          <source>Return an &lt;code&gt;Array&lt;/code&gt; of all items in a collection or iterator. For dictionaries, returns &lt;code&gt;Pair{KeyType, ValType}&lt;/code&gt;. If the argument is array-like or is an iterator with the &lt;a href=&quot;#Base.IteratorSize&quot;&gt;&lt;code&gt;HasShape&lt;/code&gt;&lt;/a&gt; trait, the result will have the same shape and number of dimensions as the argument.</source>
          <target state="translated">コレクションまたはイテレータのすべてのアイテムの &lt;code&gt;Array&lt;/code&gt; を返します。辞書の場合、 &lt;code&gt;Pair{KeyType, ValType}&lt;/code&gt; 返します。引数が配列のようであるか、&lt;a href=&quot;#Base.IteratorSize&quot;&gt; &lt;code&gt;HasShape&lt;/code&gt; &lt;/a&gt;トレイトを持つイテレータである場合、結果は引数と同じ形状と次元数になります。</target>
        </trans-unit>
        <trans-unit id="0ffaed24582db3d6914e418fc134de13fa5b8458" translate="yes" xml:space="preserve">
          <source>Return an &lt;code&gt;Array&lt;/code&gt; with the given element type of all items in a collection or iterable. The result has the same shape and number of dimensions as &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">コレクションまたは反復可能なすべての項目の指定された要素型を持つ &lt;code&gt;Array&lt;/code&gt; を返します。結果は、 &lt;code&gt;collection&lt;/code&gt; と同じ形状と次元数になります。</target>
        </trans-unit>
        <trans-unit id="948c49131460d787ff32313aaad1e7ccf58ba789" translate="yes" xml:space="preserve">
          <source>Return an anonymous function that calls function &lt;code&gt;f&lt;/code&gt;. If an exception arises, &lt;code&gt;f&lt;/code&gt; is repeatedly called again, each time &lt;code&gt;check&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, after waiting the number of seconds specified in &lt;code&gt;delays&lt;/code&gt;. &lt;code&gt;check&lt;/code&gt; should input &lt;code&gt;delays&lt;/code&gt;'s current state and the &lt;code&gt;Exception&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; を呼び出す無名関数を返します。例外が発生すると、 &lt;code&gt;delays&lt;/code&gt; で指定された秒数だけ待機した後、 &lt;code&gt;check&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返すたびに &lt;code&gt;f&lt;/code&gt; が繰り返し呼び出されます。 &lt;code&gt;check&lt;/code&gt; は &lt;code&gt;delays&lt;/code&gt; の現在の状態と &lt;code&gt;Exception&lt;/code&gt; を入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="120c4135d0ea39a222138c38be5a71637f71c80f" translate="yes" xml:space="preserve">
          <source>Return an anonymous function that executes function &lt;code&gt;f&lt;/code&gt; on an available worker (drawn from &lt;a href=&quot;#Distributed.WorkerPool&quot;&gt;&lt;code&gt;WorkerPool&lt;/code&gt;&lt;/a&gt;&lt;code&gt;p&lt;/code&gt; if provided) using &lt;a href=&quot;#Distributed.remotecall_fetch-Tuple%7BAny,Integer,Vararg%7BAny,N%7D%20where%20N%7D&quot;&gt;&lt;code&gt;remotecall_fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Distributed.WorkerPool&quot;&gt; &lt;code&gt;WorkerPool&lt;/code&gt; &lt;/a&gt;使用して、利用可能なワーカー（提供されている場合はWorkerPool &lt;code&gt;p&lt;/code&gt; から描画）で関数 &lt;code&gt;f&lt;/code&gt; を実行する無名関数を&lt;a href=&quot;#Distributed.remotecall_fetch-Tuple%7BAny,Integer,Vararg%7BAny,N%7D%20where%20N%7D&quot;&gt; &lt;code&gt;remotecall_fetch&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7b05351fdcb507558decdaaec845e6213f0f2a59" translate="yes" xml:space="preserve">
          <source>Return an array containing only the unique elements of collection &lt;code&gt;itr&lt;/code&gt;, as determined by &lt;a href=&quot;../base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt;, in the order that the first of each set of equivalent elements originally appears. The element type of the input is preserved.</source>
          <target state="translated">コレクションの唯一のユニークな要素を含む配列戻り &lt;code&gt;itr&lt;/code&gt; することによって決定されるように、&lt;a href=&quot;../base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt;同等の要素の各セットの最初のが元々表示されていることために、。入力の要素タイプは保持されます。</target>
        </trans-unit>
        <trans-unit id="c1d53744318f8deb34e2f609c0a94cca4313167e" translate="yes" xml:space="preserve">
          <source>Return an array containing the first index in &lt;code&gt;b&lt;/code&gt; for each value in &lt;code&gt;a&lt;/code&gt; that is a member of &lt;code&gt;b&lt;/code&gt;. The output array contains &lt;code&gt;nothing&lt;/code&gt; wherever &lt;code&gt;a&lt;/code&gt; is not a member of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">最初のインデックスを含む配列を返す &lt;code&gt;b&lt;/code&gt; の各値のための部材である &lt;code&gt;b&lt;/code&gt; 。 &lt;code&gt;b&lt;/code&gt; がbのメンバーで &lt;code&gt;nothing&lt;/code&gt; 場合 &lt;code&gt;a&lt;/code&gt; 出力配列には何も含まれません。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b052f9d8dc2f8afbcce260cd5b1dff2251cc151" translate="yes" xml:space="preserve">
          <source>Return an array of methods with an argument of type &lt;code&gt;typ&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;typ&lt;/code&gt; 型の引数を持つメソッドの配列を返します。</target>
        </trans-unit>
        <trans-unit id="6da759413302279eeaa670186582ffbadfce40ca" translate="yes" xml:space="preserve">
          <source>Return an array of the lowered forms (IR) for the methods matching the given generic function and type signature.</source>
          <target state="translated">与えられた汎用関数と型シグネチャにマッチするメソッドの下位形式(IR)の配列を返します。</target>
        </trans-unit>
        <trans-unit id="ab44391134da3721043c6fb8c3e62db790d21641" translate="yes" xml:space="preserve">
          <source>Return an array similar to &lt;code&gt;T&lt;/code&gt; with the specified indices &lt;code&gt;inds&lt;/code&gt; (see below)</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; と同様の配列を指定されたインデックス &lt;code&gt;inds&lt;/code&gt; で返します（以下を参照）</target>
        </trans-unit>
        <trans-unit id="d14fee25de467d8c4b62e0218609284f4b6a93ec" translate="yes" xml:space="preserve">
          <source>Return an array with element type &lt;code&gt;T&lt;/code&gt; (default &lt;code&gt;Int&lt;/code&gt;) of the digits of &lt;code&gt;n&lt;/code&gt; in the given base, optionally padded with zeros to a specified size. More significant digits are at higher indices, such that &lt;code&gt;n == sum([digits[k]*base^(k-1) for k=1:length(digits)])&lt;/code&gt;.</source>
          <target state="translated">指定された基数の &lt;code&gt;n&lt;/code&gt; 桁の要素タイプ &lt;code&gt;T&lt;/code&gt; （デフォルト &lt;code&gt;Int&lt;/code&gt; ）の配列を返します。オプションで、指定されたサイズになるまでゼロが埋め込まれます。より重要な数字は、 &lt;code&gt;n == sum([digits[k]*base^(k-1) for k=1:length(digits)])&lt;/code&gt; ように、より高いインデックスにあります。</target>
        </trans-unit>
        <trans-unit id="949eb2832c188877c7715dd40a6c0f5d7a095330" translate="yes" xml:space="preserve">
          <source>Return an array with the same data as &lt;code&gt;A&lt;/code&gt;, but with different dimension sizes or number of dimensions. The two arrays share the same underlying data, so that the result is mutable if and only if &lt;code&gt;A&lt;/code&gt; is mutable, and setting elements of one alters the values of the other.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; と同じデータを持ち、次元サイズまたは次元数が異なる配列を返します。2つの配列は同じ基礎となるデータを共有するため、 &lt;code&gt;A&lt;/code&gt; が変更可能な場合にのみ結果が変更可能になり、一方の要素を設定すると他方の値が変更されます。</target>
        </trans-unit>
        <trans-unit id="d9d1955b50f401cac0d79210d397c29ebc4eb1f4" translate="yes" xml:space="preserve">
          <source>Return an iterator over &lt;code&gt;key =&amp;gt; value&lt;/code&gt; pairs for any collection that maps a set of keys to a set of values. This includes arrays, where the keys are the array indices.</source>
          <target state="translated">キーのセットを値のセットにマップするコレクションの &lt;code&gt;key =&amp;gt; value&lt;/code&gt; ペアのイテレータを返します。これには、キーが配列のインデックスである配列が含まれます。</target>
        </trans-unit>
        <trans-unit id="96c4acb9e698934e5feeabb55e1c633cb5551d8b" translate="yes" xml:space="preserve">
          <source>Return an iterator over all values in a collection. &lt;code&gt;collect(values(a))&lt;/code&gt; returns an array of values. Since the values are stored internally in a hash table, the order in which they are returned may vary. But &lt;code&gt;keys(a)&lt;/code&gt; and &lt;code&gt;values(a)&lt;/code&gt; both iterate &lt;code&gt;a&lt;/code&gt; and return the elements in the same order.</source>
          <target state="translated">コレクション内のすべての値のイテレータを返します。 &lt;code&gt;collect(values(a))&lt;/code&gt; は値の配列を返します。値はハッシュテーブルに内部的に格納されるため、返される順序は異なる場合があります。しかし、 &lt;code&gt;keys(a)&lt;/code&gt; と &lt;code&gt;values(a)&lt;/code&gt; はどちらも &lt;code&gt;a&lt;/code&gt; を反復し、同じ順序で要素を返します。</target>
        </trans-unit>
        <trans-unit id="32068b6260fa2047150051d97e35f73534208fbc" translate="yes" xml:space="preserve">
          <source>Return an iterator over the elements in &lt;code&gt;itr&lt;/code&gt; skipping &lt;a href=&quot;#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; values. The returned object can be indexed using indices of &lt;code&gt;itr&lt;/code&gt; if the latter is indexable. Indices corresponding to missing values are not valid: they are skipped by &lt;a href=&quot;../collections/index#Base.keys&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../arrays/index#Base.eachindex&quot;&gt;&lt;code&gt;eachindex&lt;/code&gt;&lt;/a&gt;, and a &lt;code&gt;MissingException&lt;/code&gt; is thrown when trying to use them.</source>
          <target state="translated">&lt;a href=&quot;#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt;ている値をスキップして &lt;code&gt;itr&lt;/code&gt; の要素の反復子を返します。返されるオブジェクトは、インデックスが可能である場合、 &lt;code&gt;itr&lt;/code&gt; のインデックスを使用してインデックスを付けることができます。欠損値に対応するインデックスは無効です。それらは&lt;a href=&quot;../collections/index#Base.keys&quot;&gt; &lt;code&gt;keys&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../arrays/index#Base.eachindex&quot;&gt; &lt;code&gt;eachindex&lt;/code&gt; &lt;/a&gt;によってスキップされ、それらを使用しようとすると &lt;code&gt;MissingException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="0427b3a2791e913a6f891c868f521fc18d0044b6" translate="yes" xml:space="preserve">
          <source>Return an iterator over the product of several iterators. Each generated element is a tuple whose &lt;code&gt;i&lt;/code&gt;th element comes from the &lt;code&gt;i&lt;/code&gt;th argument iterator. The first iterator changes the fastest.</source>
          <target state="translated">複数のイテレータの積に対してイテレータを返します。生成された各要素は、 &lt;code&gt;i&lt;/code&gt; 番目の要素が &lt;code&gt;i&lt;/code&gt; 番目の引数反復子から取得されるタプルです。最初の反復子が最も速く変化します。</target>
        </trans-unit>
        <trans-unit id="5c0e263e6ded494c64060b6994b0f2d9f4a868ea" translate="yes" xml:space="preserve">
          <source>Return an iterator that walks the directory tree of a directory. The iterator returns a tuple containing &lt;code&gt;(rootpath, dirs, files)&lt;/code&gt;. The directory tree can be traversed top-down or bottom-up. If &lt;code&gt;walkdir&lt;/code&gt; encounters a &lt;a href=&quot;../base/index#Base.SystemError&quot;&gt;&lt;code&gt;SystemError&lt;/code&gt;&lt;/a&gt; it will rethrow the error by default. A custom error handling function can be provided through &lt;code&gt;onerror&lt;/code&gt; keyword argument. &lt;code&gt;onerror&lt;/code&gt; is called with a &lt;code&gt;SystemError&lt;/code&gt; as argument.</source>
          <target state="translated">ディレクトリのディレクトリツリーをたどるイテレータを返します。イテレータは &lt;code&gt;(rootpath, dirs, files)&lt;/code&gt; を含むタプルを返します。ディレクトリツリーは、トップダウンまたはボトムアップでトラバースできます。場合 &lt;code&gt;walkdir&lt;/code&gt; が遭遇した&lt;a href=&quot;../base/index#Base.SystemError&quot;&gt; &lt;code&gt;SystemError&lt;/code&gt; &lt;/a&gt;それがデフォルトでエラーを再スローされます。カスタムエラー処理関数は、 &lt;code&gt;onerror&lt;/code&gt; キーワード引数を介して提供できます。 &lt;code&gt;onerror&lt;/code&gt; は、 &lt;code&gt;SystemError&lt;/code&gt; を引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cf8837c574181edb162989267a639a5601861648" translate="yes" xml:space="preserve">
          <source>Return both the real and imaginary parts of the complex number &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">複素数 &lt;code&gt;z&lt;/code&gt; の実数部と虚数部の両方を返します。</target>
        </trans-unit>
        <trans-unit id="04d4820b61e5994fda414bbcad58a7913246a731" translate="yes" xml:space="preserve">
          <source>Return current HEAD &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;pkg&lt;/code&gt; repo as a string.</source>
          <target state="translated">&lt;code&gt;pkg&lt;/code&gt; repoの現在のHEAD &lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; &lt;/a&gt;を文字列として返します。</target>
        </trans-unit>
        <trans-unit id="27db1365ceee493707811056fdf7a5719c529518" translate="yes" xml:space="preserve">
          <source>Return current state as int</source>
          <target state="translated">現在の状態を int で返します。</target>
        </trans-unit>
        <trans-unit id="ebe5f65701bc906c66a66ca2f92c7845f242fc23" translate="yes" xml:space="preserve">
          <source>Return either &lt;code&gt;x&lt;/code&gt; or an object like &lt;code&gt;x&lt;/code&gt; such that it supports &lt;a href=&quot;#Base.axes-Tuple%7BAny%7D&quot;&gt;&lt;code&gt;axes&lt;/code&gt;&lt;/a&gt;, indexing, and its type supports &lt;a href=&quot;#Base.ndims&quot;&gt;&lt;code&gt;ndims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; または &lt;code&gt;x&lt;/code&gt; のようなオブジェクトを返します。これは、&lt;a href=&quot;#Base.axes-Tuple%7BAny%7D&quot;&gt; &lt;code&gt;axes&lt;/code&gt; &lt;/a&gt;、インデックス、およびその型が&lt;a href=&quot;#Base.ndims&quot;&gt; &lt;code&gt;ndims&lt;/code&gt; を&lt;/a&gt;サポートするようにします。</target>
        </trans-unit>
        <trans-unit id="f6989aa756d0dfe1c8918ba4ad7ab49bfe0f7134" translate="yes" xml:space="preserve">
          <source>Return either a &lt;code&gt;GitReference&lt;/code&gt; to the requested branch if it exists, or &lt;a href=&quot;../../base/constants/index#Core.nothing&quot;&gt;&lt;code&gt;nothing&lt;/code&gt;&lt;/a&gt; if not.</source>
          <target state="translated">要求されたブランチが存在する場合は &lt;code&gt;GitReference&lt;/code&gt; を返し、存在し&lt;a href=&quot;../../base/constants/index#Core.nothing&quot;&gt; &lt;code&gt;nothing&lt;/code&gt; &lt;/a&gt;場合は何も返しません。</target>
        </trans-unit>
        <trans-unit id="1c98407790e7c2df205ef7095b967c8ac6b96069" translate="yes" xml:space="preserve">
          <source>Return either a &lt;code&gt;GitReference&lt;/code&gt; to the upstream branch if it exists, or &lt;a href=&quot;../../base/constants/index#Core.nothing&quot;&gt;&lt;code&gt;nothing&lt;/code&gt;&lt;/a&gt; if the requested branch does not have an upstream counterpart.</source>
          <target state="translated">上流のブランチが存在する場合は &lt;code&gt;GitReference&lt;/code&gt; を返し、要求されたブランチに上流のブランチがない場合は&lt;a href=&quot;../../base/constants/index#Core.nothing&quot;&gt; &lt;code&gt;nothing&lt;/code&gt; &lt;/a&gt;返しません。</target>
        </trans-unit>
        <trans-unit id="2d4f76a0820bba9e1e22f782fbe6e8f61483916a" translate="yes" xml:space="preserve">
          <source>Return equivalent expression with all macros removed (expanded).</source>
          <target state="translated">すべてのマクロを削除した(展開した)等価な式を返します。</target>
        </trans-unit>
        <trans-unit id="c40e188937f4102bac38bc0632814716420824af" translate="yes" xml:space="preserve">
          <source>Return lowered form of the expression &lt;code&gt;x&lt;/code&gt; in module &lt;code&gt;m&lt;/code&gt;. By default &lt;code&gt;m&lt;/code&gt; is the module in which the macro is called. See also &lt;a href=&quot;#Base.Meta.lower&quot;&gt;&lt;code&gt;lower&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュール &lt;code&gt;m&lt;/code&gt; の式 &lt;code&gt;x&lt;/code&gt; の省略形を返します。デフォルト &lt;code&gt;m&lt;/code&gt; は、mはマクロが呼び出されるモジュールです。&lt;a href=&quot;#Base.Meta.lower&quot;&gt; &lt;code&gt;lower&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="6dc94879886d1fcf86ab5f01972190e3c52f20ac" translate="yes" xml:space="preserve">
          <source>Return one permit to the pool, possibly allowing another task to acquire it and resume execution.</source>
          <target state="translated">1 つの許可証をプールに戻し、別のタスクが許可証を取得して実行を再開できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="c9344e5c48b5afebc06f5adac23907128a4638a8" translate="yes" xml:space="preserve">
          <source>Return only the &lt;em&gt;names&lt;/em&gt; of the files which have changed, &lt;em&gt;not&lt;/em&gt; their contents.</source>
          <target state="translated">内容で&lt;em&gt;はなく&lt;/em&gt;、変更されたファイルの&lt;em&gt;名前&lt;/em&gt;のみを返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00c5ba47d3e0951bd7572c36ff6142b9c525ba0d" translate="yes" xml:space="preserve">
          <source>Return signature object. Free it after use.</source>
          <target state="translated">シグネチャオブジェクトを返します。使用後に解放します。</target>
        </trans-unit>
        <trans-unit id="295de0b9edbb129d583337e9f4cdb386ee12af54" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt; of the object to which &lt;code&gt;te&lt;/code&gt; refers.</source>
          <target state="translated">&lt;code&gt;te&lt;/code&gt; が参照するオブジェクトの&lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="994b76195a14e2c5a03e19b9670c9f3d0e312183" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_week_date&quot;&gt;ISO week date&lt;/a&gt; of a &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; as an &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt;. Note that the first week of a year is the week that contains the first Thursday of the year, which can result in dates prior to January 4th being in the last week of the previous year. For example, &lt;code&gt;week(Date(2005, 1, 1))&lt;/code&gt; is the 53rd week of 2004.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; または &lt;code&gt;DateTime&lt;/code&gt; の&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_week_date&quot;&gt;ISO週の日付&lt;/a&gt;を&lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; &lt;/a&gt;として返します。年の最初の週は、その年の最初の木曜日を含む週であり、1月4日より前の日付が前年の最後の週になる可能性があることに注意してください。たとえば、 &lt;code&gt;week(Date(2005, 1, 1))&lt;/code&gt; 2005、1、1 ））は2004年の53週目です。</target>
        </trans-unit>
        <trans-unit id="cfa721357fed73869f97b0dfa1d248d6ecacf0fd" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;AbstractUnitRange&lt;/code&gt; of valid indices</source>
          <target state="translated">有効なインデックスの &lt;code&gt;AbstractUnitRange&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="c2640791e09b0b5acd3d1d6526e079b5c8c5a0b2" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; nearest to &lt;code&gt;dt&lt;/code&gt; at resolution &lt;code&gt;p&lt;/code&gt;. By default (&lt;code&gt;RoundNearestTiesUp&lt;/code&gt;), ties (e.g., rounding 9:30 to the nearest hour) will be rounded up.</source>
          <target state="translated">解像度 &lt;code&gt;p&lt;/code&gt; で &lt;code&gt;dt&lt;/code&gt; に最も近い &lt;code&gt;Date&lt;/code&gt; または &lt;code&gt;DateTime&lt;/code&gt; を返します。デフォルト（ &lt;code&gt;RoundNearestTiesUp&lt;/code&gt; ）では、引き分け（たとえば、9：30を最も近い時間に丸める）が切り上げられます。</target>
        </trans-unit>
        <trans-unit id="fae424368fe1b0ba7ebbbb2c7cf79d54e1866fab" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;Signature&lt;/code&gt; of the author of the commit &lt;code&gt;c&lt;/code&gt;. The author is the person who made changes to the relevant file(s). See also &lt;a href=&quot;#LibGit2.committer&quot;&gt;&lt;code&gt;committer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コミット &lt;code&gt;c&lt;/code&gt; の作者の &lt;code&gt;Signature&lt;/code&gt; を返します。作成者は、関連ファイルに変更を加えた人です。&lt;a href=&quot;#LibGit2.committer&quot;&gt; &lt;code&gt;committer&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="05553ca4da1c1e2f5c3b6cf7b2f4ecbf283701f1" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;Signature&lt;/code&gt; of the committer of the commit &lt;code&gt;c&lt;/code&gt;. The committer is the person who committed the changes originally authored by the &lt;a href=&quot;#LibGit2.author&quot;&gt;&lt;code&gt;author&lt;/code&gt;&lt;/a&gt;, but need not be the same as the &lt;code&gt;author&lt;/code&gt;, for example, if the &lt;code&gt;author&lt;/code&gt; emailed a patch to a &lt;code&gt;committer&lt;/code&gt; who committed it.</source>
          <target state="translated">コミット &lt;code&gt;c&lt;/code&gt; のコミッターの &lt;code&gt;Signature&lt;/code&gt; を返します。コミッターはもともとによって作成、変更犯した人である&lt;a href=&quot;#LibGit2.author&quot;&gt; &lt;code&gt;author&lt;/code&gt; &lt;/a&gt;が、同じである必要はなく、 &lt;code&gt;author&lt;/code&gt; 場合、例えば、 &lt;code&gt;author&lt;/code&gt; にパッチ電子メールで送信 &lt;code&gt;committer&lt;/code&gt; それを犯しました。</target>
        </trans-unit>
        <trans-unit id="4ab1063cc93667efdb5c372986c9950193763463" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;machine epsilon&lt;/em&gt; of the floating point type &lt;code&gt;T&lt;/code&gt; (&lt;code&gt;T = Float64&lt;/code&gt; by default). This is defined as the gap between 1 and the next largest value representable by &lt;code&gt;typeof(one(T))&lt;/code&gt;, and is equivalent to &lt;code&gt;eps(one(T))&lt;/code&gt;. (Since &lt;code&gt;eps(T)&lt;/code&gt; is a bound on the &lt;em&gt;relative error&lt;/em&gt; of &lt;code&gt;T&lt;/code&gt;, it is a &quot;dimensionless&quot; quantity like &lt;a href=&quot;../numbers/index#Base.one&quot;&gt;&lt;code&gt;one&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">浮動小数点型 &lt;code&gt;T&lt;/code&gt; （デフォルトでは &lt;code&gt;T = Float64&lt;/code&gt; ）の&lt;em&gt;マシンイプシロン&lt;/em&gt;を返します。これは1と &lt;code&gt;typeof(one(T))&lt;/code&gt; で表現できる次に大きい値の間のギャップとして定義され、 &lt;code&gt;eps(one(T))&lt;/code&gt; と同等です。 （以来 &lt;code&gt;eps(T)&lt;/code&gt; 上に結合されている&lt;em&gt;相対誤差&lt;/em&gt;の &lt;code&gt;T&lt;/code&gt; は、のような「次元」量である&lt;a href=&quot;../numbers/index#Base.one&quot;&gt; &lt;code&gt;one&lt;/code&gt; &lt;/a&gt;）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06cd1ea6abea2e1e1269666d0dacafc6cd400a2b" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;unit in last place&lt;/em&gt; (ulp) of &lt;code&gt;x&lt;/code&gt;. This is the distance between consecutive representable floating point values at &lt;code&gt;x&lt;/code&gt;. In most cases, if the distance on either side of &lt;code&gt;x&lt;/code&gt; is different, then the larger of the two is taken, that is</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の&lt;em&gt;最後の場所&lt;/em&gt;（ulp）の&lt;em&gt;単位を&lt;/em&gt;返します。これは、 &lt;code&gt;x&lt;/code&gt; での連続した表現可能な浮動小数点値間の距離です。ほとんどの場合、 &lt;code&gt;x&lt;/code&gt; のいずれかの側の距離が異なる場合、2つのうち大きい方が取得されます。</target>
        </trans-unit>
        <trans-unit id="5834bf0b27fbc6ed6c545c5c49b3d9a4c5b33d86" translate="yes" xml:space="preserve">
          <source>Return the UNIX filemode of the object on disk to which &lt;code&gt;te&lt;/code&gt; refers as an integer.</source>
          <target state="translated">&lt;code&gt;te&lt;/code&gt; が整数として参照するディスク上のオブジェクトのUNIXファイルモードを返します。</target>
        </trans-unit>
        <trans-unit id="632c267d7aa14275bac9f887a9a80dd70aaf5d66" translate="yes" xml:space="preserve">
          <source>Return the Unicode codepoint (an unsigned integer) corresponding to the character &lt;code&gt;c&lt;/code&gt; (or throw an exception if &lt;code&gt;c&lt;/code&gt; does not represent a valid character). For &lt;code&gt;Char&lt;/code&gt;, this is a &lt;code&gt;UInt32&lt;/code&gt; value, but &lt;code&gt;AbstractChar&lt;/code&gt; types that represent only a subset of Unicode may return a different-sized integer (e.g. &lt;code&gt;UInt8&lt;/code&gt;).</source>
          <target state="translated">文字 &lt;code&gt;c&lt;/code&gt; に対応するUnicodeコードポイント（符号なし整数）を返します（または &lt;code&gt;c&lt;/code&gt; が有効な文字を表していない場合は例外をスローします）。ため &lt;code&gt;Char&lt;/code&gt; 、これは &lt;code&gt;UInt32&lt;/code&gt; 型の値が、 &lt;code&gt;AbstractChar&lt;/code&gt; のユニコードのサブセットのみを表すタイプは、異なるサイズの整数（例えば、返すことができる &lt;code&gt;UInt8&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7056131823860c0865156db5bf3cf4c70f57a9dc" translate="yes" xml:space="preserve">
          <source>Return the abbreviated month name of the &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; in the given &lt;code&gt;locale&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;locale&lt;/code&gt; &lt;code&gt;Date&lt;/code&gt; または &lt;code&gt;DateTime&lt;/code&gt; の省略された月名を返します。</target>
        </trans-unit>
        <trans-unit id="6c14c9a8289d4edf4928b67a0a5717d0138b5cc7" translate="yes" xml:space="preserve">
          <source>Return the abbreviated name corresponding to the day of the week of the &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; in the given &lt;code&gt;locale&lt;/code&gt;.</source>
          <target state="translated">曜日に対応する略名を返します &lt;code&gt;Date&lt;/code&gt; または &lt;code&gt;DateTime&lt;/code&gt; の与えられたで &lt;code&gt;locale&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ecef3437c363967ad80d95d3860b05be05cf949" translate="yes" xml:space="preserve">
          <source>Return the base file path of the repository &lt;code&gt;repo&lt;/code&gt;.</source>
          <target state="translated">リポジトリのベースファイルのパスを返し &lt;code&gt;repo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78dc7b99b1060e502d64782eb718584c9086ca5c" translate="yes" xml:space="preserve">
          <source>Return the closest common ancestor of &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;S&lt;/code&gt;, i.e. the narrowest type from which they both inherit.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; と &lt;code&gt;S&lt;/code&gt; の最も近い共通の祖先、つまり両方が継承する最も狭い型を返します。</target>
        </trans-unit>
        <trans-unit id="05919c2f1a4830c50228fcfc6e3d75c7c63591d6" translate="yes" xml:space="preserve">
          <source>Return the cluster cookie.</source>
          <target state="translated">クラスタクッキーを返します。</target>
        </trans-unit>
        <trans-unit id="1066eebe59993cca5c8db09d82efc010b02689f1" translate="yes" xml:space="preserve">
          <source>Return the code unit type of the given string object. For ASCII, Latin-1, or UTF-8 encoded strings, this would be &lt;code&gt;UInt8&lt;/code&gt;; for UCS-2 and UTF-16 it would be &lt;code&gt;UInt16&lt;/code&gt;; for UTF-32 it would be &lt;code&gt;UInt32&lt;/code&gt;. The unit code type need not be limited to these three types, but it's hard to think of widely used string encodings that don't use one of these units. &lt;code&gt;codeunit(s)&lt;/code&gt; is the same as &lt;code&gt;typeof(codeunit(s,1))&lt;/code&gt; when &lt;code&gt;s&lt;/code&gt; is a non-empty string.</source>
          <target state="translated">指定された文字列オブジェクトのコードユニットタイプを返します。ASCII、Latin-1、またはUTF-8でエンコードされた文字列の場合、これは &lt;code&gt;UInt8&lt;/code&gt; になります。UCS-2およびUTF-16の場合は、 &lt;code&gt;UInt16&lt;/code&gt; になります。UTF-32の場合は &lt;code&gt;UInt32&lt;/code&gt; になります。ユニットコードタイプはこれらの3つのタイプに限定する必要はありませんが、これらのユニットのいずれかを使用しない、広く使用されている文字列エンコーディングを考えるのは困難です。 &lt;code&gt;codeunit(s)&lt;/code&gt; は、 &lt;code&gt;s&lt;/code&gt; が空でない文字列の場合 &lt;code&gt;typeof(codeunit(s,1))&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="13ea454207c583a606a4cc8a296c1ad1ff336d52" translate="yes" xml:space="preserve">
          <source>Return the code unit value in the string &lt;code&gt;s&lt;/code&gt; at index &lt;code&gt;i&lt;/code&gt;. Note that</source>
          <target state="translated">インデックス &lt;code&gt;i&lt;/code&gt; の文字列 &lt;code&gt;s&lt;/code&gt; のコード単位値を返します。ご了承ください</target>
        </trans-unit>
        <trans-unit id="070d0970a43562031445cb1b583e9070b5151b60" translate="yes" xml:space="preserve">
          <source>Return the commit message describing the changes made in commit &lt;code&gt;c&lt;/code&gt;. If &lt;code&gt;raw&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, return a slightly &quot;cleaned up&quot; message (which has any leading newlines removed). If &lt;code&gt;raw&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the message is not stripped of any such newlines.</source>
          <target state="translated">commit &lt;code&gt;c&lt;/code&gt; で行われた変更を説明するコミットメッセージを返します。 &lt;code&gt;raw&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、わずかに「クリーンアップされた」メッセージ（先頭の改行が削除されています）を返します。場合は &lt;code&gt;raw&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、メッセージはそのような改行を剥奪されていません。</target>
        </trans-unit>
        <trans-unit id="71d8c122ff6300cd526c212e7f0d7c18b0247843" translate="yes" xml:space="preserve">
          <source>Return the count of tasks woken up. Return 0 if no tasks are waiting on &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="translated">起こされたタスクの数を返します。 &lt;code&gt;condition&lt;/code&gt; 待機しているタスクがない場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="582ff270c3877129540a662a3f3ca4d295a99d18" translate="yes" xml:space="preserve">
          <source>Return the cube root of &lt;code&gt;x&lt;/code&gt;, i.e. $x^{1/3}$. Negative values are accepted (returning the negative real root when $x &amp;lt; 0$).</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の立方根、つまり$ x ^ {1/3} $を返します。負の値も受け入れられます（$ x &amp;lt;0 $の場合は負の実根を返します）。</target>
        </trans-unit>
        <trans-unit id="bc7c9276795e491632406de15001bfb358a35d15" translate="yes" xml:space="preserve">
          <source>Return the current user's home directory.</source>
          <target state="translated">現在のユーザのホームディレクトリを返します。</target>
        </trans-unit>
        <trans-unit id="4385da0807becc34e2107227e49c6766d15db7d5" translate="yes" xml:space="preserve">
          <source>Return the date portion of &lt;code&gt;now()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;now()&lt;/code&gt; の日付部分を返します。</target>
        </trans-unit>
        <trans-unit id="7bf3c84a1d3d7ad59b6ab5cfd0cc6d827064ebd2" translate="yes" xml:space="preserve">
          <source>Return the day of the current quarter of &lt;code&gt;dt&lt;/code&gt;. Range of value is 1:92.</source>
          <target state="translated">&lt;code&gt;dt&lt;/code&gt; の現在の四半期の日を返します。値の範囲は1:92です。</target>
        </trans-unit>
        <trans-unit id="d3eadb397cdf02de5394d24eb23e85d9552678b1" translate="yes" xml:space="preserve">
          <source>Return the day of the week as an &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;1 = Monday, 2 = Tuesday, etc.&lt;/code&gt;.</source>
          <target state="translated">曜日を返す&lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; 型&lt;/a&gt;と &lt;code&gt;1 = Monday, 2 = Tuesday, etc.&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fd2582d596f24c0e28e193da90536e7a7d0d877" translate="yes" xml:space="preserve">
          <source>Return the day of the year for &lt;code&gt;dt&lt;/code&gt; with January 1st being day 1.</source>
          <target state="translated">1月1日を1 日として、 &lt;code&gt;dt&lt;/code&gt; の年間通算日を返します。</target>
        </trans-unit>
        <trans-unit id="e804ac1b13cff13653da9875691902c1b136ccc4" translate="yes" xml:space="preserve">
          <source>Return the distance between successive array elements in dimension 1 in units of element size.</source>
          <target state="translated">1次元の連続する配列要素間の距離を,要素サイズの単位で返します.</target>
        </trans-unit>
        <trans-unit id="6082586091935a75df05b02c2a14e16f55f7c185" translate="yes" xml:space="preserve">
          <source>Return the distance in memory (in number of elements) between adjacent elements in dimension &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">次元 &lt;code&gt;k&lt;/code&gt; の隣接する要素間のメモリ内の距離（要素数）を返します。</target>
        </trans-unit>
        <trans-unit id="2c02c35441b8978ebf58ff65be3fdf7c7cc27dec" translate="yes" xml:space="preserve">
          <source>Return the distance in memory (in number of elements) between adjacent elements in dimension k.</source>
          <target state="translated">次元kの隣接する要素間の距離(要素数)をメモリ内に返します。</target>
        </trans-unit>
        <trans-unit id="ea1fbb1217762fd4bd052a462423d7fd01815e41" translate="yes" xml:space="preserve">
          <source>Return the distance in memory (in number of elements) between adjacent elements in each dimension as a tuple. If &lt;code&gt;A&lt;/code&gt; is an &lt;code&gt;AbstractArray{T,0}&lt;/code&gt;, this should return an empty tuple.</source>
          <target state="translated">各次元の隣接する要素間のメモリ内の距離（要素数）をタプルとして返します。場合 &lt;code&gt;A&lt;/code&gt; がある &lt;code&gt;AbstractArray{T,0}&lt;/code&gt; 、これは空のタプルを返すべきです。</target>
        </trans-unit>
        <trans-unit id="7a7f84d0cedfab1b683593728afea83a45f1694b" translate="yes" xml:space="preserve">
          <source>Return the eigenvalues of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の固有値を返します。</target>
        </trans-unit>
        <trans-unit id="ba41f0a2092b69836408df5d0a580dea592c0957" translate="yes" xml:space="preserve">
          <source>Return the file descriptor backing the stream or file. Note that this function only applies to synchronous &lt;code&gt;File&lt;/code&gt;'s and &lt;code&gt;IOStream&lt;/code&gt;'s not to any of the asynchronous streams.</source>
          <target state="translated">ストリームまたはファイルをバッキングするファイル記述子を返します。この関数は同期 &lt;code&gt;File&lt;/code&gt; と &lt;code&gt;IOStream&lt;/code&gt; にのみ適用され、非同期ストリームには適用されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="d05e202146730f66af265613b943566781c17a84" translate="yes" xml:space="preserve">
          <source>Return the filename of the object on disk to which &lt;code&gt;te&lt;/code&gt; refers.</source>
          <target state="translated">&lt;code&gt;te&lt;/code&gt; が参照するディスク上のオブジェクトのファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="a31e56bdd0aaf93b0c6bd0b13c88793635e81264" translate="yes" xml:space="preserve">
          <source>Return the files and directories in the directory &lt;code&gt;dir&lt;/code&gt; (or the current working directory if not given).</source>
          <target state="translated">ディレクトリ &lt;code&gt;dir&lt;/code&gt; （指定されていない場合は現在の作業ディレクトリ）内のファイルとディレクトリを返します。</target>
        </trans-unit>
        <trans-unit id="cea88d0a670e0b7d44d9c3a057d9e685adae44b8" translate="yes" xml:space="preserve">
          <source>Return the first index of &lt;code&gt;collection&lt;/code&gt;. If &lt;code&gt;d&lt;/code&gt; is given, return the first index of &lt;code&gt;collection&lt;/code&gt; along dimension &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; の最初のインデックスを返します。 &lt;code&gt;d&lt;/code&gt; が指定されている場合、次元 &lt;code&gt;d&lt;/code&gt; に沿った &lt;code&gt;collection&lt;/code&gt; の最初のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="11dd225974077f0d72dff63e313d6350a5dc0122" translate="yes" xml:space="preserve">
          <source>Return the first value in the arguments which is not equal to &lt;a href=&quot;#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt;, if any. Otherwise return &lt;code&gt;missing&lt;/code&gt;.</source>
          <target state="translated">もしあれば、&lt;a href=&quot;#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt;と等しくない引数の最初の値を返します。それ以外の場合は &lt;code&gt;missing&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="6554e79cfe7e76a7284df9b56591cc8ee27ada97" translate="yes" xml:space="preserve">
          <source>Return the first value in the arguments which is not equal to &lt;a href=&quot;../constants/index#Core.nothing&quot;&gt;&lt;code&gt;nothing&lt;/code&gt;&lt;/a&gt;, if any. Otherwise throw an error. Arguments of type &lt;a href=&quot;#Base.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt; are unwrapped.</source>
          <target state="translated">存在する場合、&lt;a href=&quot;../constants/index#Core.nothing&quot;&gt; &lt;code&gt;nothing&lt;/code&gt; &lt;/a&gt;と等しくない引数の最初の値を返します。それ以外の場合はエラーをスローします。タイプの引数&lt;a href=&quot;#Base.Some&quot;&gt; &lt;code&gt;Some&lt;/code&gt; &lt;/a&gt;はラップされていません。</target>
        </trans-unit>
        <trans-unit id="c4e6ea3a3305f6cb62f0d1a74c0adec72b2e13f8" translate="yes" xml:space="preserve">
          <source>Return the full day name corresponding to the day of the week of the &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; in the given &lt;code&gt;locale&lt;/code&gt;.</source>
          <target state="translated">曜日に対応する完全な曜日名を返します &lt;code&gt;Date&lt;/code&gt; または &lt;code&gt;DateTime&lt;/code&gt; の与えられたで &lt;code&gt;locale&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e9d9de593e3124197f8646f908a871d808af8ca" translate="yes" xml:space="preserve">
          <source>Return the full name of &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; の完全な名前を返します。</target>
        </trans-unit>
        <trans-unit id="7bee310393f847b59ec188d7b616ef011156cec7" translate="yes" xml:space="preserve">
          <source>Return the full name of the month of the &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; in the given &lt;code&gt;locale&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;locale&lt;/code&gt; での &lt;code&gt;Date&lt;/code&gt; または日付 &lt;code&gt;DateTime&lt;/code&gt; 月の完全な名前を返します。</target>
        </trans-unit>
        <trans-unit id="4fc76967eced03aaa3c5dfc5751ef9f89a45f8ba" translate="yes" xml:space="preserve">
          <source>Return the generalized singular values from the generalized singular value decomposition of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, saving space by overwriting &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;. See also &lt;a href=&quot;#LinearAlgebra.svd&quot;&gt;&lt;code&gt;svd&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#LinearAlgebra.svdvals&quot;&gt;&lt;code&gt;svdvals&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一般化特異値分解から一般化特異値を返します。 &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;B&lt;/code&gt; 上書きすることで、スペースを節約し、 &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;B&lt;/code&gt; を。&lt;a href=&quot;#LinearAlgebra.svd&quot;&gt; &lt;code&gt;svd&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#LinearAlgebra.svdvals&quot;&gt; &lt;code&gt;svdvals&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="a1e46aab5e2d644886d0aa7eb1004d7af1f4c9cf" translate="yes" xml:space="preserve">
          <source>Return the generalized singular values from the generalized singular value decomposition of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;. See also &lt;a href=&quot;#LinearAlgebra.svd&quot;&gt;&lt;code&gt;svd&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; および &lt;code&gt;B&lt;/code&gt; の一般化された特異値分解から一般化された特異値を返します。&lt;a href=&quot;#LinearAlgebra.svd&quot;&gt; &lt;code&gt;svd&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="f3ecb57cd45fc7edfdf4b7fa523b76a441d83f56" translate="yes" xml:space="preserve">
          <source>Return the global logger, used to receive messages when no specific logger exists for the current task.</source>
          <target state="translated">現在のタスクに特定のロガーが存在しない場合にメッセージを受信するために使用されるグローバルロガーを返します。</target>
        </trans-unit>
        <trans-unit id="1f960f9a52cd7ed91ec7459ba5b684a1faaa5410" translate="yes" xml:space="preserve">
          <source>Return the imaginary part of the complex number &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">複素数 &lt;code&gt;z&lt;/code&gt; の虚数部を返します。</target>
        </trans-unit>
        <trans-unit id="0a0274f49e04d32f45764cd76443d556fcf8c413" translate="yes" xml:space="preserve">
          <source>Return the index of the first value in &lt;code&gt;a&lt;/code&gt; greater than or equal to &lt;code&gt;x&lt;/code&gt;, according to the specified order. Return &lt;code&gt;length(a) + 1&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is greater than all values in &lt;code&gt;a&lt;/code&gt;. &lt;code&gt;a&lt;/code&gt; is assumed to be sorted.</source>
          <target state="translated">最初の値のインデックスを返すよりも大きいか等しい &lt;code&gt;x&lt;/code&gt; 指定された順序に従って、。 &lt;code&gt;x&lt;/code&gt; が &lt;code&gt;a&lt;/code&gt; のすべての値より大きい場合 &lt;code&gt;length(a) + 1&lt;/code&gt; 返します。 &lt;code&gt;a&lt;/code&gt; はソートされていると見なされます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="117419d6daac0a940b06a5226b45bdc1a3f4ae2b" translate="yes" xml:space="preserve">
          <source>Return the index of the last value in &lt;code&gt;a&lt;/code&gt; less than or equal to &lt;code&gt;x&lt;/code&gt;, according to the specified order. Return &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is less than all values in &lt;code&gt;a&lt;/code&gt;. &lt;code&gt;a&lt;/code&gt; is assumed to be sorted.</source>
          <target state="translated">最後の値のインデックスを返す以下に等しい &lt;code&gt;x&lt;/code&gt; 指定された順序に従って、。 &lt;code&gt;x&lt;/code&gt; が &lt;code&gt;a&lt;/code&gt; のすべての値より小さい場合は &lt;code&gt;0&lt;/code&gt; を返します。 &lt;code&gt;a&lt;/code&gt; はソートされていると見なされます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a7e6a6389df4c5e406906330da0af201bf8c57c" translate="yes" xml:space="preserve">
          <source>Return the index of the maximum element in a collection. If there are multiple maximal elements, then the first one will be returned.</source>
          <target state="translated">コレクション内の最大要素のインデックスを返します。複数の最大要素がある場合は、最初の要素が返されます。</target>
        </trans-unit>
        <trans-unit id="ffdb379a1bd6cfc16f41931f1939691fbe19d5eb" translate="yes" xml:space="preserve">
          <source>Return the index of the minimum element in a collection. If there are multiple minimal elements, then the first one will be returned.</source>
          <target state="translated">コレクション内の最小要素のインデックスを返します。最小要素が複数ある場合は、最初の要素が返されます。</target>
        </trans-unit>
        <trans-unit id="3f1b5e6c9a679e51c8c58c92cb3e8e2c5e93b40b" translate="yes" xml:space="preserve">
          <source>Return the index or key of the first &lt;code&gt;true&lt;/code&gt; value in &lt;code&gt;A&lt;/code&gt;. Return &lt;code&gt;nothing&lt;/code&gt; if no such value is found. To search for other kinds of values, pass a predicate as the first argument.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の最初の &lt;code&gt;true&lt;/code&gt; 値のインデックスまたはキーを返します。そのような値が見つから &lt;code&gt;nothing&lt;/code&gt; 場合は何も返しません。他の種類の値を検索するには、最初の引数として述語を渡します。</target>
        </trans-unit>
        <trans-unit id="1bcfb92132449b1204a2240f9e81635f69ad2146" translate="yes" xml:space="preserve">
          <source>Return the index or key of the first element of &lt;code&gt;A&lt;/code&gt; for which &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. Return &lt;code&gt;nothing&lt;/code&gt; if there is no such element.</source>
          <target state="translated">最初の要素のインデックスまたはReturnキー &lt;code&gt;A&lt;/code&gt; のための &lt;code&gt;predicate&lt;/code&gt; を返す &lt;code&gt;true&lt;/code&gt; 。そのような要素が &lt;code&gt;nothing&lt;/code&gt; 場合は何も返しません。</target>
        </trans-unit>
        <trans-unit id="9838bbfc0381a54dff51142d5f3866944e823ec0" translate="yes" xml:space="preserve">
          <source>Return the index or key of the last &lt;code&gt;true&lt;/code&gt; value in &lt;code&gt;A&lt;/code&gt;. Return &lt;code&gt;nothing&lt;/code&gt; if there is no &lt;code&gt;true&lt;/code&gt; value in &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の最後の &lt;code&gt;true&lt;/code&gt; 値のインデックスまたはキーを返します。 &lt;code&gt;A&lt;/code&gt; に &lt;code&gt;true&lt;/code&gt; 値が &lt;code&gt;nothing&lt;/code&gt; 場合は何も返しません。</target>
        </trans-unit>
        <trans-unit id="b6e6a37953a07f02b78da6e3dcc3f7088128b973" translate="yes" xml:space="preserve">
          <source>Return the index or key of the last element of &lt;code&gt;A&lt;/code&gt; for which &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. Return &lt;code&gt;nothing&lt;/code&gt; if there is no such element.</source>
          <target state="translated">最後の要素のインデックスまたはReturnキー &lt;code&gt;A&lt;/code&gt; そのため &lt;code&gt;predicate&lt;/code&gt; リターンが &lt;code&gt;true&lt;/code&gt; 。そのような要素が &lt;code&gt;nothing&lt;/code&gt; 場合は何も返しません。</target>
        </trans-unit>
        <trans-unit id="13d2fe5f105602c64349189ea12f9fa2b47b4d0a" translate="yes" xml:space="preserve">
          <source>Return the indices in the &lt;a href=&quot;#Base.parent&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; which correspond to the array view &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">配列ビュー &lt;code&gt;A&lt;/code&gt; に対応する&lt;a href=&quot;#Base.parent&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt;のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="fc94d7c96d40b2c4ea403eafbcd4f79b0327da97" translate="yes" xml:space="preserve">
          <source>Return the inverse permutation of &lt;code&gt;v&lt;/code&gt;. If &lt;code&gt;B = A[v]&lt;/code&gt;, then &lt;code&gt;A == B[invperm(v)]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; の逆順列を返します。もし &lt;code&gt;B = A[v]&lt;/code&gt; 、その後、 &lt;code&gt;A == B[invperm(v)]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c0abbaee6b579a436b746362d4215eb886bf927" translate="yes" xml:space="preserve">
          <source>Return the key matching argument &lt;code&gt;key&lt;/code&gt; if one exists in &lt;code&gt;collection&lt;/code&gt;, otherwise return &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; に存在する場合、引数keyに一致する &lt;code&gt;key&lt;/code&gt; 返し &lt;code&gt;default&lt;/code&gt; 。それ以外の場合、デフォルトを返します。</target>
        </trans-unit>
        <trans-unit id="ef729fdd86cf31769d84701221cab7040ec59062" translate="yes" xml:space="preserve">
          <source>Return the key type of an array. This is equal to the &lt;code&gt;eltype&lt;/code&gt; of the result of &lt;code&gt;keys(...)&lt;/code&gt;, and is provided mainly for compatibility with the dictionary interface.</source>
          <target state="translated">配列のキータイプを返します。これは &lt;code&gt;keys(...)&lt;/code&gt; の結果の &lt;code&gt;eltype&lt;/code&gt; に等しく、主に辞書インターフェースとの互換性のために提供されています。</target>
        </trans-unit>
        <trans-unit id="ff1b8cad588ae2cb6d1e0e1f33be3b265eb0fe0c" translate="yes" xml:space="preserve">
          <source>Return the largest eigenvalue of &lt;code&gt;A&lt;/code&gt;. The option &lt;code&gt;permute=true&lt;/code&gt; permutes the matrix to become closer to upper triangular, and &lt;code&gt;scale=true&lt;/code&gt; scales the matrix by its diagonal elements to make rows and columns more equal in norm. Note that if the eigenvalues of &lt;code&gt;A&lt;/code&gt; are complex, this method will fail, since complex numbers cannot be sorted.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の最大固有値を返します。オプション &lt;code&gt;permute=true&lt;/code&gt; は行列を上三角に近づけるように並べ替え、 &lt;code&gt;scale=true&lt;/code&gt; は行列を対角要素でスケーリングして、行と列のノルムをより等しくします。 &lt;code&gt;A&lt;/code&gt; の固有値が複素数の場合、複素数はソートできないため、このメソッドは失敗します。</target>
        </trans-unit>
        <trans-unit id="c8a74532ba721eb0df14840899d7bb0ed4a6eaa5" translate="yes" xml:space="preserve">
          <source>Return the largest floating point number &lt;code&gt;y&lt;/code&gt; of the same type as &lt;code&gt;x&lt;/code&gt; such &lt;code&gt;y &amp;lt; x&lt;/code&gt;. If no such &lt;code&gt;y&lt;/code&gt; exists (e.g. if &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;-Inf&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;), then return &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y &amp;lt; x&lt;/code&gt; ような &lt;code&gt;x&lt;/code&gt; と同じ型の最大の浮動小数点数 &lt;code&gt;y&lt;/code&gt; を返します。そのような &lt;code&gt;y&lt;/code&gt; が存在しない場合（たとえば、 &lt;code&gt;x&lt;/code&gt; が &lt;code&gt;-Inf&lt;/code&gt; または &lt;code&gt;NaN&lt;/code&gt; の場合）、 &lt;code&gt;x&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7ab8b851753eb7e24377dc2c4fc11131daaaf337" translate="yes" xml:space="preserve">
          <source>Return the last index of &lt;code&gt;collection&lt;/code&gt;. If &lt;code&gt;d&lt;/code&gt; is given, return the last index of &lt;code&gt;collection&lt;/code&gt; along dimension &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; の最後のインデックスを返します。 &lt;code&gt;d&lt;/code&gt; が指定されている場合、次元 &lt;code&gt;d&lt;/code&gt; に沿った &lt;code&gt;collection&lt;/code&gt; の最後のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="d81073cb8d270128fc581c8e56d24455b70670cd" translate="yes" xml:space="preserve">
          <source>Return the list of all the fetch heads for &lt;code&gt;repo&lt;/code&gt;, each represented as a &lt;a href=&quot;#LibGit2.FetchHead&quot;&gt;&lt;code&gt;FetchHead&lt;/code&gt;&lt;/a&gt;, including their names, URLs, and merge statuses.</source>
          <target state="translated">名前、URL、マージステータスを含む、それぞれが&lt;a href=&quot;#LibGit2.FetchHead&quot;&gt; &lt;code&gt;FetchHead&lt;/code&gt; &lt;/a&gt;として表される &lt;code&gt;repo&lt;/code&gt; のすべてのフェッチヘッドのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d3aaf5a932abeb92514868eb393efd0d2436aaf6" translate="yes" xml:space="preserve">
          <source>Return the location of the &quot;git&quot; files of &lt;code&gt;repo&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;repo&lt;/code&gt; の「git」ファイルの場所を返します。</target>
        </trans-unit>
        <trans-unit id="9fcebdd78b252e7a475997705bf6bbb0c05eadd2" translate="yes" xml:space="preserve">
          <source>Return the location of the working directory of &lt;code&gt;repo&lt;/code&gt;. This will throw an error for bare repositories.</source>
          <target state="translated">&lt;code&gt;repo&lt;/code&gt; の作業ディレクトリの場所を返します。これにより、ベアリポジトリに対してエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="79ef8dcfe988f4ab3eff140a28dd9c8be5ba265a" translate="yes" xml:space="preserve">
          <source>Return the logger for the current task, or the global logger if none is attached to the task.</source>
          <target state="translated">現在のタスクのロガーを返します。タスクにアタッチされていない場合はグローバルロガーを返します。</target>
        </trans-unit>
        <trans-unit id="6d6e3bd3a591d84153c8f572f54ffc17525b1eae" translate="yes" xml:space="preserve">
          <source>Return the lower triangle of &lt;code&gt;M&lt;/code&gt; starting from the &lt;code&gt;k&lt;/code&gt;th superdiagonal, overwriting &lt;code&gt;M&lt;/code&gt; in the process.</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; の下三角を &lt;code&gt;k&lt;/code&gt; 番目の上対角から開始して返し、その過程で &lt;code&gt;M&lt;/code&gt; を上書きします。</target>
        </trans-unit>
        <trans-unit id="a315e9b6fe69f35e17fc6b4cb526c9a3fbe8c6bd" translate="yes" xml:space="preserve">
          <source>Return the maximum disabled level for &lt;code&gt;logger&lt;/code&gt; for early filtering. That is, the log level below or equal to which all messages are filtered.</source>
          <target state="translated">早期フィルタリングのために &lt;code&gt;logger&lt;/code&gt; 最大無効レベルを返します。つまり、すべてのメッセージがフィルタリングされるログレベル以下です。</target>
        </trans-unit>
        <trans-unit id="682572348ef167a2bdbc084df5631a2fa725e76f" translate="yes" xml:space="preserve">
          <source>Return the maximum element of the collection &lt;code&gt;itr&lt;/code&gt; and its index. If there are multiple maximal elements, then the first one will be returned. If any data element is &lt;code&gt;NaN&lt;/code&gt;, this element is returned. The result is in line with &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">コレクション &lt;code&gt;itr&lt;/code&gt; とそのインデックスの最大要素を返します。最大要素が複数ある場合は、最初の要素が返されます。データ要素が &lt;code&gt;NaN&lt;/code&gt; の場合、この要素が返されます。結果は &lt;code&gt;max&lt;/code&gt; と一致しています。</target>
        </trans-unit>
        <trans-unit id="37e639e6821fc39eb3598184192ab727b5deda12" translate="yes" xml:space="preserve">
          <source>Return the maximum of the arguments. See also the &lt;a href=&quot;../collections/index#Base.maximum&quot;&gt;&lt;code&gt;maximum&lt;/code&gt;&lt;/a&gt; function to take the maximum element from a collection.</source>
          <target state="translated">引数の最大値を返します。コレクションから最大の要素を取得するための&lt;a href=&quot;../collections/index#Base.maximum&quot;&gt; &lt;code&gt;maximum&lt;/code&gt; &lt;/a&gt;関数も参照してください。</target>
        </trans-unit>
        <trans-unit id="ce77aaeaa5490d79a8ec8ba12070b8f1035ffbc5" translate="yes" xml:space="preserve">
          <source>Return the minimum element of the collection &lt;code&gt;itr&lt;/code&gt; and its index. If there are multiple minimal elements, then the first one will be returned. If any data element is &lt;code&gt;NaN&lt;/code&gt;, this element is returned. The result is in line with &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="translated">コレクション &lt;code&gt;itr&lt;/code&gt; とそのインデックスの最小要素を返します。複数の最小要素がある場合は、最初の要素が返されます。データ要素が &lt;code&gt;NaN&lt;/code&gt; の場合、この要素が返されます。結果は &lt;code&gt;min&lt;/code&gt; と一致します。</target>
        </trans-unit>
        <trans-unit id="35f322935d5bde73766b5664ae1180582a442e5d" translate="yes" xml:space="preserve">
          <source>Return the minimum of the arguments. See also the &lt;a href=&quot;../collections/index#Base.minimum&quot;&gt;&lt;code&gt;minimum&lt;/code&gt;&lt;/a&gt; function to take the minimum element from a collection.</source>
          <target state="translated">引数の最小値を返します。コレクションから最小要素を取得する&lt;a href=&quot;../collections/index#Base.minimum&quot;&gt; &lt;code&gt;minimum&lt;/code&gt; &lt;/a&gt;関数も参照してください。</target>
        </trans-unit>
        <trans-unit id="f511149aa8ecdf8fa32c73c669f6fce2dd957a73" translate="yes" xml:space="preserve">
          <source>Return the multiplicative inverse of &lt;code&gt;x&lt;/code&gt;, such that &lt;code&gt;x*inv(x)&lt;/code&gt; or &lt;code&gt;inv(x)*x&lt;/code&gt; yields &lt;a href=&quot;../numbers/index#Base.one&quot;&gt;&lt;code&gt;one(x)&lt;/code&gt;&lt;/a&gt; (the multiplicative identity) up to roundoff errors.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の乗法的逆数を返します。たとえば、 &lt;code&gt;x*inv(x)&lt;/code&gt; または &lt;code&gt;inv(x)*x&lt;/code&gt; は、丸め誤差まで&lt;a href=&quot;../numbers/index#Base.one&quot;&gt; &lt;code&gt;one(x)&lt;/code&gt; &lt;/a&gt;（乗法的同一性）を生成します。</target>
        </trans-unit>
        <trans-unit id="17ddff016c8a108263615c42be5b1245cb59e509" translate="yes" xml:space="preserve">
          <source>Return the name of the reference pointed to by the symbolic reference &lt;code&gt;ref&lt;/code&gt;. If &lt;code&gt;ref&lt;/code&gt; is not a symbolic reference, return an empty string.</source>
          <target state="translated">シンボリック参照 &lt;code&gt;ref&lt;/code&gt; が指す参照の名前を返します。 &lt;code&gt;ref&lt;/code&gt; がシンボリック参照でない場合、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="fbdc866cd42fbbbc582f435e585eae7b1d1a8530" translate="yes" xml:space="preserve">
          <source>Return the native address of an array.</source>
          <target state="translated">配列のネイティブアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="e28210f4e116ce61bfa7123bdf1b9ea5735393bb" translate="yes" xml:space="preserve">
          <source>Return the nearest &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; greater than or equal to &lt;code&gt;dt&lt;/code&gt; at resolution &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">解像度 &lt;code&gt;p&lt;/code&gt; で &lt;code&gt;dt&lt;/code&gt; 以上の最も近い &lt;code&gt;Date&lt;/code&gt; または日付 &lt;code&gt;DateTime&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="b796162e5b144a29e2f0549710f91cfbe4f5492e" translate="yes" xml:space="preserve">
          <source>Return the nearest &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt; less than or equal to &lt;code&gt;dt&lt;/code&gt; at resolution &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">解像度 &lt;code&gt;p&lt;/code&gt; で &lt;code&gt;dt&lt;/code&gt; 以下の最も近い &lt;code&gt;Date&lt;/code&gt; または日付 &lt;code&gt;DateTime&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="04b99574b0e24b7daf53288c6efcf0d052ad0936" translate="yes" xml:space="preserve">
          <source>Return the nearest integral value of the same type as the complex-valued &lt;code&gt;z&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt;, breaking ties using the specified &lt;a href=&quot;#Base.Rounding.RoundingMode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt;s. The first &lt;a href=&quot;#Base.Rounding.RoundingMode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; is used for rounding the real components while the second is used for rounding the imaginary components.</source>
          <target state="translated">複素数値 &lt;code&gt;z&lt;/code&gt; から &lt;code&gt;z&lt;/code&gt; と同じ型の最も近い整数値を返し、指定された&lt;a href=&quot;#Base.Rounding.RoundingMode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt;を使用して結合を解除します。最初の&lt;a href=&quot;#Base.Rounding.RoundingMode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt;は実数成分を丸めるために使用され、2番目は虚数成分を丸めるために使用されます。</target>
        </trans-unit>
        <trans-unit id="32dc9d9957db7d9c98f630820120be087776aa7a" translate="yes" xml:space="preserve">
          <source>Return the nearest integral value of type &lt;code&gt;T&lt;/code&gt; whose absolute value is less than or equal to &lt;code&gt;x&lt;/code&gt;. If the value is not representable by &lt;code&gt;T&lt;/code&gt;, an arbitrary value will be returned.</source>
          <target state="translated">絶対値が &lt;code&gt;x&lt;/code&gt; 以下の &lt;code&gt;T&lt;/code&gt; 型の最も近い整数値を返します。値が &lt;code&gt;T&lt;/code&gt; で表現できない場合、任意の値が返されます。</target>
        </trans-unit>
        <trans-unit id="a7f7f72b93cf4adca7e9366a22ca2af5b25a02b2" translate="yes" xml:space="preserve">
          <source>Return the nominal size of the screen that may be used for rendering output to this &lt;code&gt;IO&lt;/code&gt; object. If no input is provided, the environment variables &lt;code&gt;LINES&lt;/code&gt; and &lt;code&gt;COLUMNS&lt;/code&gt; are read. If those are not set, a default size of &lt;code&gt;(24, 80)&lt;/code&gt; is returned.</source>
          <target state="translated">この &lt;code&gt;IO&lt;/code&gt; オブジェクトへの出力のレンダリングに使用できる画面の公称サイズを返します。入力がない場合、環境変数 &lt;code&gt;LINES&lt;/code&gt; および &lt;code&gt;COLUMNS&lt;/code&gt; が読み取られます。これらが設定されていない場合、デフォルトのサイズ &lt;code&gt;(24, 80)&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="cb259a823a3b6479769232de70e1bbb1a22ded07" translate="yes" xml:space="preserve">
          <source>Return the number of Rata Die days since epoch from the given &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;DateTime&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Date&lt;/code&gt; または &lt;code&gt;DateTime&lt;/code&gt; からのエポック以降のRata Die日数を返します。</target>
        </trans-unit>
        <trans-unit id="24d85ea8b6a54df710dcaf965cdd09f906ada354" translate="yes" xml:space="preserve">
          <source>Return the number of bytes available for reading before a read from this stream or buffer will block.</source>
          <target state="translated">このストリームまたはバッファからの読み込みがブロックされる前に、読み込み可能なバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="c452ffd37c48599dedf0ab3b3f1093baf60893d4" translate="yes" xml:space="preserve">
          <source>Return the number of code units in a string. Indices that are in bounds to access this string must satisfy &lt;code&gt;1 &amp;le; i &amp;le;&amp;nbsp;ncodeunits(s)&lt;/code&gt;. Not all such indices are valid &amp;ndash; they may not be the start of a character, but they will return a code unit value when calling &lt;code&gt;codeunit(s,i)&lt;/code&gt;.</source>
          <target state="translated">文字列内のコード単位の数を返します。この文字列にアクセスするための境界内にあるインデックスは、 &lt;code&gt;1 &amp;le; i &amp;le;&amp;nbsp;ncodeunits(s)&lt;/code&gt; 満たす必要があります。そのようなすべてのインデックスが有効であるとは限りません。それらは文字の開始ではないかもしれませんが、 &lt;code&gt;codeunit(s,i)&lt;/code&gt; 呼び出すと、コードユニット値を返します。</target>
        </trans-unit>
        <trans-unit id="dbf220743a366c8e2a9a422d973097656e29a47b" translate="yes" xml:space="preserve">
          <source>Return the number of days in the month of &lt;code&gt;dt&lt;/code&gt;. Value will be 28, 29, 30, or 31.</source>
          <target state="translated">&lt;code&gt;dt&lt;/code&gt; の月の日数を返します。値は28、29、30、または31です。</target>
        </trans-unit>
        <trans-unit id="185e623104e1142b4be0e2efe7b423ccc5676042" translate="yes" xml:space="preserve">
          <source>Return the number of dimensions of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の次元数を返します。</target>
        </trans-unit>
        <trans-unit id="c1d734407ae0f46ffa41bb8bed95e6fa22f961f4" translate="yes" xml:space="preserve">
          <source>Return the number of distinct &quot;hunks&quot; with a file. A hunk may contain multiple lines. A hunk is usually a piece of a file that was added/changed/removed together, for example, a function added to a source file or an inner loop that was optimized out of that function later.</source>
          <target state="translated">ファイルを持つ明確な &quot;hunk &quot;の数を返します。ハンクは複数の行を含むことができます。例えば、ソースファイルに追加された関数や、後でその関数から最適化された内部ループなどです。</target>
        </trans-unit>
        <trans-unit id="01e31c99b6bb2ab7a4c837f22da8b3092fe8d698" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the array, defaults to &lt;code&gt;prod(size(A))&lt;/code&gt;.</source>
          <target state="translated">配列の要素数を返します。デフォルトは &lt;code&gt;prod(size(A))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="83021ad1010a1b764a9ec902df1c66313f9ca331" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the collection.</source>
          <target state="translated">コレクションの要素数を返します。</target>
        </trans-unit>
        <trans-unit id="b60a5958256ebdd96688bc9e71302246a60d6a85" translate="yes" xml:space="preserve">
          <source>Return the number one.</source>
          <target state="translated">1番を返します。</target>
        </trans-unit>
        <trans-unit id="e1d034bc6299e9b0579c9133a8afe21d79b65a02" translate="yes" xml:space="preserve">
          <source>Return the path of &lt;code&gt;m.jl&lt;/code&gt; file that was used to &lt;code&gt;import&lt;/code&gt; module &lt;code&gt;m&lt;/code&gt;, or &lt;code&gt;nothing&lt;/code&gt; if &lt;code&gt;m&lt;/code&gt; was not imported from a package.</source>
          <target state="translated">パスを返します &lt;code&gt;m.jl&lt;/code&gt; に使用されたファイル &lt;code&gt;import&lt;/code&gt; モジュール &lt;code&gt;m&lt;/code&gt; 、または &lt;code&gt;nothing&lt;/code&gt; あれば &lt;code&gt;m&lt;/code&gt; は、パッケージからインポートされませんでしたが。</target>
        </trans-unit>
        <trans-unit id="68359f3689919fb9dfede360026debf632be581a" translate="yes" xml:space="preserve">
          <source>Return the quarter that &lt;code&gt;dt&lt;/code&gt; resides in. Range of value is 1:4.</source>
          <target state="translated">&lt;code&gt;dt&lt;/code&gt; が存在する四半期を返します。値の範囲は1：4です。</target>
        </trans-unit>
        <trans-unit id="0df462e4b8f480008854243c8ba45146f4601ffc" translate="yes" xml:space="preserve">
          <source>Return the range of indices of &lt;code&gt;a&lt;/code&gt; which compare as equal to &lt;code&gt;x&lt;/code&gt; (using binary search) according to the order specified by the &lt;code&gt;by&lt;/code&gt;, &lt;code&gt;lt&lt;/code&gt; and &lt;code&gt;rev&lt;/code&gt; keywords, assuming that &lt;code&gt;a&lt;/code&gt; is already sorted in that order. Return an empty range located at the insertion point if &lt;code&gt;a&lt;/code&gt; does not contain values equal to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がすでにその順序でソートされていると仮定して、 &lt;code&gt;by&lt;/code&gt; 、 &lt;code&gt;lt&lt;/code&gt; 、および &lt;code&gt;rev&lt;/code&gt; キーワードで指定された順序に従って、 &lt;code&gt;x&lt;/code&gt; と等しい（バイナリ検索を使用して）と等しい &lt;code&gt;a&lt;/code&gt; のインデックスの範囲を返します。 &lt;code&gt;a&lt;/code&gt; に &lt;code&gt;x&lt;/code&gt; と等しい値が含まれていない場合、挿入ポイントにある空の範囲を返します。</target>
        </trans-unit>
        <trans-unit id="80710048e20176b63753300ea434985f39d5cfc5" translate="yes" xml:space="preserve">
          <source>Return the range of indices to the structural nonzero values of a sparse matrix column. In conjunction with &lt;a href=&quot;#SparseArrays.nonzeros&quot;&gt;&lt;code&gt;nonzeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#SparseArrays.rowvals&quot;&gt;&lt;code&gt;rowvals&lt;/code&gt;&lt;/a&gt;, this allows for convenient iterating over a sparse matrix :</source>
          <target state="translated">インデックスの範囲をスパース行列列の構造的な非ゼロ値に返します。一緒に&lt;a href=&quot;#SparseArrays.nonzeros&quot;&gt; &lt;code&gt;nonzeros&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#SparseArrays.rowvals&quot;&gt; &lt;code&gt;rowvals&lt;/code&gt; &lt;/a&gt;、これは疎行列上便利反復を可能にします。</target>
        </trans-unit>
        <trans-unit id="87df9644473e05442eec7227dd3921ac35bc42fe" translate="yes" xml:space="preserve">
          <source>Return the real part of the complex number &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">複素数 &lt;code&gt;z&lt;/code&gt; の実部を返します。</target>
        </trans-unit>
        <trans-unit id="69032834fc1126739ee23b5d8dcaf98edd277b8b" translate="yes" xml:space="preserve">
          <source>Return the singular values of &lt;code&gt;A&lt;/code&gt; in descending order.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の特異値を降順で返します。</target>
        </trans-unit>
        <trans-unit id="5af6fa261181c77d566ffdfd6e47eead6190545b" translate="yes" xml:space="preserve">
          <source>Return the singular values of &lt;code&gt;A&lt;/code&gt;, saving space by overwriting the input. See also &lt;a href=&quot;#LinearAlgebra.svdvals&quot;&gt;&lt;code&gt;svdvals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#LinearAlgebra.svd&quot;&gt;&lt;code&gt;svd&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の特異値を返し、入力を上書きしてスペースを節約します。&lt;a href=&quot;#LinearAlgebra.svdvals&quot;&gt; &lt;code&gt;svdvals&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#LinearAlgebra.svd&quot;&gt; &lt;code&gt;svd&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="82dc24cc3d4ce27567ffbca14f71dd28a5de595d" translate="yes" xml:space="preserve">
          <source>Return the smallest eigenvalue of &lt;code&gt;A&lt;/code&gt;. The option &lt;code&gt;permute=true&lt;/code&gt; permutes the matrix to become closer to upper triangular, and &lt;code&gt;scale=true&lt;/code&gt; scales the matrix by its diagonal elements to make rows and columns more equal in norm. Note that if the eigenvalues of &lt;code&gt;A&lt;/code&gt; are complex, this method will fail, since complex numbers cannot be sorted.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の最小固有値を返します。オプション &lt;code&gt;permute=true&lt;/code&gt; は行列を上三角に近づけるように並べ替え、 &lt;code&gt;scale=true&lt;/code&gt; は行列を対角要素でスケーリングして、行と列のノルムをより等しくします。 &lt;code&gt;A&lt;/code&gt; の固有値が複素数の場合、複素数はソートできないため、このメソッドは失敗します。</target>
        </trans-unit>
        <trans-unit id="fd46eac04ea18dfe71e8e2741edbc47720005aad" translate="yes" xml:space="preserve">
          <source>Return the smallest floating point number &lt;code&gt;y&lt;/code&gt; of the same type as &lt;code&gt;x&lt;/code&gt; such &lt;code&gt;x &amp;lt; y&lt;/code&gt;. If no such &lt;code&gt;y&lt;/code&gt; exists (e.g. if &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;Inf&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;), then return &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">最小の浮動小数点数を返す &lt;code&gt;y&lt;/code&gt; と同じタイプのを &lt;code&gt;x&lt;/code&gt; ような &lt;code&gt;x &amp;lt; y&lt;/code&gt; 。そのような &lt;code&gt;y&lt;/code&gt; が存在しない場合（たとえば、 &lt;code&gt;x&lt;/code&gt; が &lt;code&gt;Inf&lt;/code&gt; または &lt;code&gt;NaN&lt;/code&gt; の場合）、 &lt;code&gt;x&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1f23ece83c469216b7086694ee6aa58066962449" translate="yes" xml:space="preserve">
          <source>Return the solution to &lt;code&gt;A*X = alpha*B&lt;/code&gt; or one of the other three variants determined by determined by &lt;a href=&quot;#stdlib-blas-side-1&quot;&gt;&lt;code&gt;side&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt;. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used. &lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt;&lt;code&gt;dA&lt;/code&gt;&lt;/a&gt; determines if the diagonal values are read or are assumed to be all ones.</source>
          <target state="translated">解を &lt;code&gt;A*X = alpha*B&lt;/code&gt; または&lt;a href=&quot;#stdlib-blas-side-1&quot;&gt; &lt;code&gt;side&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;によって決定される他の3つのバリアントの1つに返します。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。&lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt; &lt;code&gt;dA&lt;/code&gt; &lt;/a&gt;は、対角値が読み取られるか、すべて1であると見なされるかを決定します。</target>
        </trans-unit>
        <trans-unit id="2e568452f2f3137267d4e39cd3cc1f4a0a28a450" translate="yes" xml:space="preserve">
          <source>Return the solution to &lt;code&gt;A*x = b&lt;/code&gt; or one of the other two variants determined by &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt;&lt;code&gt;dA&lt;/code&gt;&lt;/a&gt; determines if the diagonal values are read or are assumed to be all ones.</source>
          <target state="translated">&lt;code&gt;A*x = b&lt;/code&gt; または&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;によって決定される他の2つのバリアントの1つに対する解を返します。&lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt; &lt;code&gt;dA&lt;/code&gt; &lt;/a&gt;は、対角値が読み取られるか、すべて1であると見なされるかを決定します。</target>
        </trans-unit>
        <trans-unit id="b2ca2e13f8fcc18eed204984c4ad45db8884bf70" translate="yes" xml:space="preserve">
          <source>Return the specified object (&lt;a href=&quot;#LibGit2.GitCommit&quot;&gt;&lt;code&gt;GitCommit&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LibGit2.GitBlob&quot;&gt;&lt;code&gt;GitBlob&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LibGit2.GitTree&quot;&gt;&lt;code&gt;GitTree&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#LibGit2.GitTag&quot;&gt;&lt;code&gt;GitTag&lt;/code&gt;&lt;/a&gt;) from &lt;code&gt;repo&lt;/code&gt; specified by &lt;code&gt;hash&lt;/code&gt;/&lt;code&gt;spec&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクト（&lt;a href=&quot;#LibGit2.GitCommit&quot;&gt; &lt;code&gt;GitCommit&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#LibGit2.GitBlob&quot;&gt; &lt;code&gt;GitBlob&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#LibGit2.GitTree&quot;&gt; &lt;code&gt;GitTree&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;#LibGit2.GitTag&quot;&gt; &lt;code&gt;GitTag&lt;/code&gt; &lt;/a&gt;）を、 &lt;code&gt;hash&lt;/code&gt; / &lt;code&gt;spec&lt;/code&gt; で指定された &lt;code&gt;repo&lt;/code&gt; から返します。</target>
        </trans-unit>
        <trans-unit id="eb424f51f485a50a6198dce9f812c5c7c57fcb03" translate="yes" xml:space="preserve">
          <source>Return the supertype of DataType &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">DataType &lt;code&gt;T&lt;/code&gt; のスーパータイプを返します。</target>
        </trans-unit>
        <trans-unit id="406f300bbb0da9e7dbec98aa2a6c597b0c379936" translate="yes" xml:space="preserve">
          <source>Return the target location a symbolic link &lt;code&gt;path&lt;/code&gt; points to.</source>
          <target state="translated">シンボリックリンク &lt;code&gt;path&lt;/code&gt; 指すターゲットの場所を返します。</target>
        </trans-unit>
        <trans-unit id="7dd4937a17a5275e6c99c1a36172051ebe5cbe7e" translate="yes" xml:space="preserve">
          <source>Return the tuple of valid indices for array &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">配列 &lt;code&gt;A&lt;/code&gt; の有効なインデックスのタプルを返します。</target>
        </trans-unit>
        <trans-unit id="afafbf03bb9b12381dee2e3b076b849cd50c3804" translate="yes" xml:space="preserve">
          <source>Return the type corresponding to the enum value.</source>
          <target state="translated">enumの値に対応する型を返します。</target>
        </trans-unit>
        <trans-unit id="7704db10e2d8aaea52cafb3c718f9dda46f07371" translate="yes" xml:space="preserve">
          <source>Return the type of the object to which &lt;code&gt;te&lt;/code&gt; refers. The result will be one of the types which &lt;a href=&quot;#LibGit2.objtype&quot;&gt;&lt;code&gt;objtype&lt;/code&gt;&lt;/a&gt; returns, e.g. a &lt;code&gt;GitTree&lt;/code&gt; or &lt;code&gt;GitBlob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;te&lt;/code&gt; が参照するオブジェクトのタイプを返します。結果は、&lt;a href=&quot;#LibGit2.objtype&quot;&gt; &lt;code&gt;objtype&lt;/code&gt; &lt;/a&gt;が返すタイプの1つになります（例： &lt;code&gt;GitTree&lt;/code&gt; または &lt;code&gt;GitBlob&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="570b14e0351d8c26178a06f510fef888343b879e" translate="yes" xml:space="preserve">
          <source>Return the updated &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">更新された &lt;code&gt;y&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4894f9611c9d21f8e68b468fe028070edd816092" translate="yes" xml:space="preserve">
          <source>Return the upper triangle of &lt;code&gt;M&lt;/code&gt; starting from the &lt;code&gt;k&lt;/code&gt;th superdiagonal, overwriting &lt;code&gt;M&lt;/code&gt; in the process.</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; の上三角を &lt;code&gt;k&lt;/code&gt; 番目の上対角から開始して返し、その過程で &lt;code&gt;M&lt;/code&gt; を上書きします。</target>
        </trans-unit>
        <trans-unit id="5a71539c82cbbfa662dffde6d49e245c09b9a9ec" translate="yes" xml:space="preserve">
          <source>Return the valid range of indices for array &lt;code&gt;A&lt;/code&gt; along dimension &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">次元 &lt;code&gt;d&lt;/code&gt; に沿った配列 &lt;code&gt;A&lt;/code&gt; の有効なインデックスの範囲を返します。</target>
        </trans-unit>
        <trans-unit id="6aad1e04750689273bf120b1bd1554c90386561b" translate="yes" xml:space="preserve">
          <source>Return the value stored for the given key, or if no mapping for the key is present, return &lt;code&gt;f()&lt;/code&gt;. Use &lt;a href=&quot;#Base.get!-Tuple%7BAny,Any,Any%7D&quot;&gt;&lt;code&gt;get!&lt;/code&gt;&lt;/a&gt; to also store the default value in the dictionary.</source>
          <target state="translated">指定されたキーに格納されている値を返します。キーのマッピングが存在しない場合は、 &lt;code&gt;f()&lt;/code&gt; を返します。&lt;a href=&quot;#Base.get!-Tuple%7BAny,Any,Any%7D&quot;&gt; &lt;code&gt;get!&lt;/code&gt; &lt;/a&gt;使用してください！デフォルト値もディクショナリに格納します。</target>
        </trans-unit>
        <trans-unit id="27e0e0d9a60a27a900348575e37412c116da15b5" translate="yes" xml:space="preserve">
          <source>Return the value stored for the given key, or if no mapping for the key is present, store &lt;code&gt;key =&amp;gt; default&lt;/code&gt;, and return &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">指定されたキーに保存されている値を返し &lt;code&gt;default&lt;/code&gt; 。キーのマッピングが存在しない場合は、store &lt;code&gt;key =&amp;gt; default&lt;/code&gt; 保存して、defaultを返します。</target>
        </trans-unit>
        <trans-unit id="9a8758e40eafa2ebdc636202ec8ee5c2190eccfc" translate="yes" xml:space="preserve">
          <source>Return the value stored for the given key, or if no mapping for the key is present, store &lt;code&gt;key =&amp;gt; f()&lt;/code&gt;, and return &lt;code&gt;f()&lt;/code&gt;.</source>
          <target state="translated">指定されたキーの格納された値を返す、またはキーのマッピングが存在しない場合、ストア &lt;code&gt;key =&amp;gt; f()&lt;/code&gt; 、リターン &lt;code&gt;f()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ab81183b8cdf8cb053c6c69ecdd8d857db9a31a" translate="yes" xml:space="preserve">
          <source>Return the value stored for the given key, or the given default value if no mapping for the key is present.</source>
          <target state="translated">指定したキーに対して保存されている値を返します。</target>
        </trans-unit>
        <trans-unit id="ff7f9add8bb97f2c35929985f3dc74afd472ff49" translate="yes" xml:space="preserve">
          <source>Return the value type of an array. This is identical to &lt;code&gt;eltype&lt;/code&gt; and is provided mainly for compatibility with the dictionary interface.</source>
          <target state="translated">配列の値の型を返します。これは &lt;code&gt;eltype&lt;/code&gt; と同じで、主に辞書インターフェースとの互換性のために提供されています。</target>
        </trans-unit>
        <trans-unit id="f1202648c7feb12bab117b98320ce1f30d2db7dc" translate="yes" xml:space="preserve">
          <source>Return the version number for the Windows NT Kernel as a &lt;code&gt;VersionNumber&lt;/code&gt;, i.e. &lt;code&gt;v&quot;major.minor.build&quot;&lt;/code&gt;, or &lt;code&gt;v&quot;0.0.0&quot;&lt;/code&gt; if this is not running on Windows.</source>
          <target state="translated">Windows NTカーネルのバージョン番号を &lt;code&gt;VersionNumber&lt;/code&gt; として返します。つまり、 &lt;code&gt;v&quot;major.minor.build&quot;&lt;/code&gt; 、またはこれがWindowsで実行されていない場合は &lt;code&gt;v&quot;0.0.0&quot;&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="38d29539361a6f8ca26e98e1249be4a7a9edea53" translate="yes" xml:space="preserve">
          <source>Return the version of libgit2 in use, as a &lt;a href=&quot;../../manual/strings/index#man-version-number-literals-1&quot;&gt;&lt;code&gt;VersionNumber&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用中のlibgit2のバージョンをVersionNumberとして&lt;a href=&quot;../../manual/strings/index#man-version-number-literals-1&quot;&gt; &lt;code&gt;VersionNumber&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0070f8ff4c230c07ee4f31f59da6bda49c8baf08" translate="yes" xml:space="preserve">
          <source>Return true if the logger should catch exceptions which happen during log record construction. By default, messages are caught</source>
          <target state="translated">ログレコードの作成中に発生した例外をロガーがキャッチするかどうかを true で返します。デフォルトでは、メッセージは</target>
        </trans-unit>
        <trans-unit id="f5ae3d2d88c47ffc366f1eedc614e864dbddff5b" translate="yes" xml:space="preserve">
          <source>Return true when &lt;code&gt;logger&lt;/code&gt; accepts a message at &lt;code&gt;level&lt;/code&gt;, generated for &lt;code&gt;_module&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt; and with unique log identifier &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;logger&lt;/code&gt; 、 &lt;code&gt;_module&lt;/code&gt; 、 &lt;code&gt;group&lt;/code&gt; 、および一意のログ識別子 &lt;code&gt;id&lt;/code&gt; で生成された &lt;code&gt;level&lt;/code&gt; メッセージを受け入れる場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="184cda4c479ea90c571352fd5b30c1cf4384f553" translate="yes" xml:space="preserve">
          <source>Return two outputs, &lt;code&gt;analysis&lt;/code&gt; and &lt;code&gt;preference&lt;/code&gt;. &lt;code&gt;analysis&lt;/code&gt; has several possible values: * &lt;code&gt;MERGE_ANALYSIS_NONE&lt;/code&gt;: it is not possible to merge the elements of &lt;code&gt;anns&lt;/code&gt;. * &lt;code&gt;MERGE_ANALYSIS_NORMAL&lt;/code&gt;: a regular merge, when HEAD and the commits that the user wishes to merge have all diverged from a common ancestor. In this case the changes have to be resolved and conflicts may occur. * &lt;code&gt;MERGE_ANALYSIS_UP_TO_DATE&lt;/code&gt;: all the input commits the user wishes to merge can be reached from HEAD, so no merge needs to be performed. * &lt;code&gt;MERGE_ANALYSIS_FASTFORWARD&lt;/code&gt;: the input commit is a descendant of HEAD and so no merge needs to be performed - instead, the user can simply checkout the input commit(s). * &lt;code&gt;MERGE_ANALYSIS_UNBORN&lt;/code&gt;: the HEAD of the repository refers to a commit which does not exist. It is not possible to merge, but it may be possible to checkout the input commits. &lt;code&gt;preference&lt;/code&gt; also has several possible values: * &lt;code&gt;MERGE_PREFERENCE_NONE&lt;/code&gt;: the user has no preference. * &lt;code&gt;MERGE_PREFERENCE_NO_FASTFORWARD&lt;/code&gt;: do not allow any fast-forward merges. * &lt;code&gt;MERGE_PREFERENCE_FASTFORWARD_ONLY&lt;/code&gt;: allow only fast-forward merges and no other type (which may introduce conflicts). &lt;code&gt;preference&lt;/code&gt; can be controlled through the repository or global git configuration.</source>
          <target state="translated">&lt;code&gt;analysis&lt;/code&gt; と &lt;code&gt;preference&lt;/code&gt; 2つの出力を返します。 &lt;code&gt;analysis&lt;/code&gt; はいくつかの可能な値があります。* &lt;code&gt;MERGE_ANALYSIS_NONE&lt;/code&gt; ： &lt;code&gt;anns&lt;/code&gt; の要素をマージすることはできません。 * &lt;code&gt;MERGE_ANALYSIS_NORMAL&lt;/code&gt; ：通常のマージ。HEADおよびユーザーがマージしたいコミットがすべて共通の祖先から分岐している場合。この場合、変更を解決する必要があり、競合が発生する可能性があります。 * &lt;code&gt;MERGE_ANALYSIS_UP_TO_DATE&lt;/code&gt; ：ユーザーがマージしたいすべての入力コミットはHEADから到達できるため、マージを実行する必要はありません。 * &lt;code&gt;MERGE_ANALYSIS_FASTFORWARD&lt;/code&gt; ：入力コミットはHEADの子孫であるため、マージを実行する必要はありません。代わりに、ユーザーは入力コミットをチェックアウトできます。 * &lt;code&gt;MERGE_ANALYSIS_UNBORN&lt;/code&gt; ：リポジトリのHEADは、存在しないコミットを参照しています。マージすることはできませんが、入力コミットをチェックアウトできる可能性があります。 &lt;code&gt;preference&lt;/code&gt; には、いくつかの可能な値もあります。* &lt;code&gt;MERGE_PREFERENCE_NONE&lt;/code&gt; ：ユーザーにプリファレンスはありません。 * &lt;code&gt;MERGE_PREFERENCE_NO_FASTFORWARD&lt;/code&gt; ：早送りマージを許可しません。 * &lt;code&gt;MERGE_PREFERENCE_FASTFORWARD_ONLY&lt;/code&gt; ：早送りマージのみを許可し、他のタイプは許可しません（競合を引き起こす可能性があります）。 &lt;code&gt;preference&lt;/code&gt; は、リポジトリまたはグローバルgit構成を介して制御できます。</target>
        </trans-unit>
        <trans-unit id="41b1fb407b7fa442b77381701968fb175362cf78" translate="yes" xml:space="preserve">
          <source>Return type</source>
          <target state="translated">戻り値の種類</target>
        </trans-unit>
        <trans-unit id="5aab6db293617fa9e1af9a7089917b2d893fa1c3" translate="yes" xml:space="preserve">
          <source>Return type (see below for mapping the declared C type to Julia)</source>
          <target state="translated">戻り値の型 (宣言されたCの型をJuliaにマッピングするには以下を参照してください)</target>
        </trans-unit>
        <trans-unit id="b5ce0be409d3f667f7a956e4b34607bd7dba7e85" translate="yes" xml:space="preserve">
          <source>Return unique regions of &lt;code&gt;A&lt;/code&gt; along dimension &lt;code&gt;dims&lt;/code&gt;.</source>
          <target state="translated">次元 &lt;code&gt;dims&lt;/code&gt; に沿って &lt;code&gt;A&lt;/code&gt; の一意の領域を返します。</target>
        </trans-unit>
        <trans-unit id="066f1ab75e0cf497781b9b5909f0527de26da03f" translate="yes" xml:space="preserve">
          <source>Return whether instances of this type can contain references to gc-managed memory. Can be called on any &lt;code&gt;isconcretetype&lt;/code&gt;.</source>
          <target state="translated">このタイプのインスタンスがgc管理メモリへの参照を含むことができるかどうかを返します。 &lt;code&gt;isconcretetype&lt;/code&gt; で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="54a7e0d7d798c3e3c1183fdf7ec17fcfa6931686" translate="yes" xml:space="preserve">
          <source>Return whether the fields of instances of this type are packed in memory, with no intervening padding bytes. Can be called on any &lt;code&gt;isconcretetype&lt;/code&gt;.</source>
          <target state="translated">この型のインスタンスのフィールドがメモリにパックされているかどうかを返します。 &lt;code&gt;isconcretetype&lt;/code&gt; で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="3bdf55d81c5ccb1b40a015e853d23396c0007bc2" translate="yes" xml:space="preserve">
          <source>Return zero if &lt;code&gt;x==0&lt;/code&gt; and $x/|x|$ otherwise (i.e., &amp;plusmn;1 for real &lt;code&gt;x&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;x==0&lt;/code&gt; 場合はゼロを返し、それ以外の場合は$ x / | x | $を返します（つまり、実数 &lt;code&gt;x&lt;/code&gt; の場合は&amp;plusmn;1 ）。</target>
        </trans-unit>
        <trans-unit id="4f6385a520167dabfb00aff2d049f8b397fb6e21" translate="yes" xml:space="preserve">
          <source>Return/Enter, &lt;code&gt;^J&lt;/code&gt;</source>
          <target state="translated">Return / Enter、 &lt;code&gt;^J&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b844b576d62c6cdb70c97b4e3f3485bec5668cb" translate="yes" xml:space="preserve">
          <source>Returning from this function behaves just like an assignment to a variable with a declared type: the value is always converted to &lt;code&gt;Float64&lt;/code&gt;.</source>
          <target state="translated">この関数からの戻りは、宣言されたタイプの変数への代入と同じように動作し &lt;code&gt;Float64&lt;/code&gt; 。値は常にFloat64に変換されます。</target>
        </trans-unit>
        <trans-unit id="7ef8d7bd531598082391099e31467dce5f9d06af" translate="yes" xml:space="preserve">
          <source>Returning to the sequence of squares from above, we could instead define it as a subtype of an &lt;code&gt;AbstractArray{Int, 1}&lt;/code&gt;:</source>
          <target state="translated">上記の正方形のシーケンスに戻ると、代わりにそれを &lt;code&gt;AbstractArray{Int, 1}&lt;/code&gt; サブタイプとして定義できます。</target>
        </trans-unit>
        <trans-unit id="cd7f6c6e662da21250f74206aaac4036b49b096a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; modified in-place.</source>
          <target state="translated">インプレースで変更された &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;T&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fe13c45aa0f4cbf80dc6eeefb98b8f84f5012aa3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;jpvt&lt;/code&gt;, modified in-place, and &lt;code&gt;tau&lt;/code&gt;, which stores the elementary reflectors.</source>
          <target state="translated">&lt;code&gt;jpvt&lt;/code&gt; で変更された &lt;code&gt;A&lt;/code&gt; とjpvt、および基本リフレクターを格納する &lt;code&gt;tau&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="74c8bcbbcdefaa46b68911f8db650b31ba48a879" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;tau&lt;/code&gt; modified in-place.</source>
          <target state="translated">インプレースで変更された &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;tau&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8bd7b82968e8142a5509890551145aaa6b9181a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;vs&lt;/code&gt; containing the Schur vectors, and &lt;code&gt;w&lt;/code&gt;, containing the eigenvalues.</source>
          <target state="translated">Schurベクトルを含む &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;vs&lt;/code&gt; 、および固有値を含む &lt;code&gt;w&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3d8cfff216b77ffaa9456c87a31e2138ae3d4302" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt;, modified in-place, &lt;code&gt;ipiv&lt;/code&gt;, the pivoting information, and an &lt;code&gt;info&lt;/code&gt; code which indicates success (&lt;code&gt;info = 0&lt;/code&gt;), a singular value in &lt;code&gt;U&lt;/code&gt; (&lt;code&gt;info = i&lt;/code&gt;, in which case &lt;code&gt;U[i,i]&lt;/code&gt; is singular), or an error code (&lt;code&gt;info &amp;lt; 0&lt;/code&gt;).</source>
          <target state="translated">戻り値 &lt;code&gt;A&lt;/code&gt; インプレース変性、 &lt;code&gt;ipiv&lt;/code&gt; 、旋回情報、及び &lt;code&gt;info&lt;/code&gt; 成功（示すコード &lt;code&gt;info = 0&lt;/code&gt; ）に特異値 &lt;code&gt;U&lt;/code&gt; （ &lt;code&gt;info = i&lt;/code&gt; 、その場合、 &lt;code&gt;U[i,i]&lt;/code&gt; 特異です）、またはエラーコード（ &lt;code&gt;info &amp;lt; 0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7ddf45c6700d3cbad6930e2b490f43fb4b1e696e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt;, modified in-place, &lt;code&gt;jpvt&lt;/code&gt;, which represents the pivoting matrix &lt;code&gt;P&lt;/code&gt;, and &lt;code&gt;tau&lt;/code&gt;, which stores the elementary reflectors.</source>
          <target state="translated">戻り値 &lt;code&gt;A&lt;/code&gt; インプレース、変性、 &lt;code&gt;jpvt&lt;/code&gt; 旋回行列を表し、 &lt;code&gt;P&lt;/code&gt; 、および &lt;code&gt;tau&lt;/code&gt; 、記憶基本反射器。</target>
        </trans-unit>
        <trans-unit id="0395703b124babea33ee710619862fb05a6f3c69" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt;, modified in-place, and &lt;code&gt;T&lt;/code&gt;, which contains upper triangular block reflectors which parameterize the elementary reflectors of the factorization.</source>
          <target state="translated">分解されたインプレースの &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;T&lt;/code&gt; を返します。これには、分解の基本リフレクターをパラメーター化する上三角ブロックリフレクターが含まれています。</target>
        </trans-unit>
        <trans-unit id="2c022b63ce16e44f02dac265893897eccf7b3697" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt;, modified in-place, and &lt;code&gt;tau&lt;/code&gt;, which contains scalars which parameterize the elementary reflectors of the factorization.</source>
          <target state="translated">戻り値 &lt;code&gt;A&lt;/code&gt; インプレース変性、および &lt;code&gt;tau&lt;/code&gt; 、因数分解の基本反射をパラメータスカラを含んでいます。</target>
        </trans-unit>
        <trans-unit id="cc4a93ce08af11881b0310676a6064f917ec2db0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt;, overwritten by the factorization, a pivot vector &lt;code&gt;ipiv&lt;/code&gt;, and the error code &lt;code&gt;info&lt;/code&gt; which is a non-negative integer. If &lt;code&gt;info&lt;/code&gt; is positive the matrix is singular and the diagonal part of the factorization is exactly zero at position &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">因数分解、ピボットベクトル &lt;code&gt;ipiv&lt;/code&gt; 、および非負の整数であるエラーコード &lt;code&gt;info&lt;/code&gt; によって上書きされた &lt;code&gt;A&lt;/code&gt; を返します。 &lt;code&gt;info&lt;/code&gt; が正の場合、行列は特異であり、分解の対角部分は &lt;code&gt;info&lt;/code&gt; の位置で正確にゼロです。</target>
        </trans-unit>
        <trans-unit id="a40b47a3c0805b1ee6b0550dfdaed551da65f283" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;A&lt;/code&gt;, the pivots &lt;code&gt;piv&lt;/code&gt;, the rank of &lt;code&gt;A&lt;/code&gt;, and an &lt;code&gt;info&lt;/code&gt; code. If &lt;code&gt;info = 0&lt;/code&gt;, the factorization succeeded. If &lt;code&gt;info = i &amp;gt; 0&lt;/code&gt;, then &lt;code&gt;A&lt;/code&gt; is indefinite or rank-deficient.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 、ピボット &lt;code&gt;piv&lt;/code&gt; 、 &lt;code&gt;A&lt;/code&gt; のランク、および &lt;code&gt;info&lt;/code&gt; コードを返します。場合 &lt;code&gt;info = 0&lt;/code&gt; 、因数分解に成功しました。もし &lt;code&gt;info = i &amp;gt; 0&lt;/code&gt; 、そして &lt;code&gt;A&lt;/code&gt; は、不定またはランク不足です。</target>
        </trans-unit>
        <trans-unit id="0a3146eb782083bc513337e1e0a301d7ff953181" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Millisecond(1)&lt;/code&gt; for &lt;code&gt;DateTime&lt;/code&gt; values, &lt;code&gt;Day(1)&lt;/code&gt; for &lt;code&gt;Date&lt;/code&gt; values, and &lt;code&gt;Nanosecond(1)&lt;/code&gt; for &lt;code&gt;Time&lt;/code&gt; values.</source>
          <target state="translated">戻り値 &lt;code&gt;Millisecond(1)&lt;/code&gt; 用 &lt;code&gt;DateTime&lt;/code&gt; 値は、 &lt;code&gt;Day(1)&lt;/code&gt; のための &lt;code&gt;Date&lt;/code&gt; 値、および &lt;code&gt;Nanosecond(1)&lt;/code&gt; のための &lt;code&gt;Time&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="b9a22ee19568092ca8727aab1e4834551c1eac7c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;T(one(x))&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is either the type of the argument or (if a type is passed) the argument. This differs from &lt;a href=&quot;#Base.one&quot;&gt;&lt;code&gt;one&lt;/code&gt;&lt;/a&gt; for dimensionful quantities: &lt;code&gt;one&lt;/code&gt; is dimensionless (a multiplicative identity) while &lt;code&gt;oneunit&lt;/code&gt; is dimensionful (of the same type as &lt;code&gt;x&lt;/code&gt;, or of type &lt;code&gt;T&lt;/code&gt;).</source>
          <target state="translated">戻り値 &lt;code&gt;T(one(x))&lt;/code&gt; 、 &lt;code&gt;T&lt;/code&gt; は、（型が渡された場合）、引数の型のどちらかである引数。この異なる&lt;a href=&quot;#Base.one&quot;&gt; &lt;code&gt;one&lt;/code&gt; &lt;/a&gt; dimensionful量のために： &lt;code&gt;one&lt;/code&gt; 無次元である（乗法同一）しながら &lt;code&gt;oneunit&lt;/code&gt; が dimensionfulある（同じタイプのような &lt;code&gt;x&lt;/code&gt; 、またはタイプの &lt;code&gt;T&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5b84d88ba8ce2ac6f7f47aeab3cc26edb5be21c9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;Q&lt;/code&gt;, reordered eigenvalues in &lt;code&gt;w&lt;/code&gt;, the condition number of the cluster of eigenvalues &lt;code&gt;s&lt;/code&gt;, and the condition number of the invariant subspace &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 、 &lt;code&gt;Q&lt;/code&gt; 、 &lt;code&gt;w&lt;/code&gt; の並べ替えられた固有値、固有値 &lt;code&gt;s&lt;/code&gt; クラスターの条件番号s、および不変部分空間 &lt;code&gt;sep&lt;/code&gt; の条件番号を返します。</target>
        </trans-unit>
        <trans-unit id="49bb2762a37369ee4fa133a623dc82d0ad8589b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;U&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;, and &lt;code&gt;Vt&lt;/code&gt;, where &lt;code&gt;S&lt;/code&gt; are the singular values of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">戻り &lt;code&gt;U&lt;/code&gt; 、 &lt;code&gt;S&lt;/code&gt; 、および &lt;code&gt;Vt&lt;/code&gt; を、 &lt;code&gt;S&lt;/code&gt; は、の特異値である &lt;code&gt;A&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="744045555fadd3f7e376a720f9ec7be8175a5f94" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;X&lt;/code&gt; (overwriting &lt;code&gt;C&lt;/code&gt;) and &lt;code&gt;scale&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; （ &lt;code&gt;C&lt;/code&gt; を上書き）と &lt;code&gt;scale&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="04ecdf0f9fdbd8628e3a52306b0c56af851edc25" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;alpha*A*B&lt;/code&gt; or one of the other three variants determined by &lt;a href=&quot;#stdlib-blas-side-1&quot;&gt;&lt;code&gt;side&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;tA&lt;/code&gt;&lt;/a&gt;. Only the &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;ul&lt;/code&gt;&lt;/a&gt; triangle of &lt;code&gt;A&lt;/code&gt; is used. &lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt;&lt;code&gt;dA&lt;/code&gt;&lt;/a&gt; determines if the diagonal values are read or are assumed to be all ones.</source>
          <target state="translated">&lt;code&gt;alpha*A*B&lt;/code&gt; または&lt;a href=&quot;#stdlib-blas-side-1&quot;&gt; &lt;code&gt;side&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;tA&lt;/code&gt; &lt;/a&gt;によって決定される他の3つのバリアントの1つを返します。 &lt;code&gt;A&lt;/code&gt; の&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;ul&lt;/code&gt; &lt;/a&gt;三角形のみが使用されます。&lt;a href=&quot;#stdlib-blas-diag-1&quot;&gt; &lt;code&gt;dA&lt;/code&gt; &lt;/a&gt;は、対角値が読み取られるか、すべて1であると見なされるかを決定します。</target>
        </trans-unit>
        <trans-unit id="6336fea12097da4cfef26f0ca033d5de1e76dead" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;S&lt;/code&gt; is sparse, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; がスパースの場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="04dae928e4f93808b643275222f4af7f4dd4281e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given char or integer is an assigned Unicode code point.</source>
          <target state="translated">指定された文字または整数が割り当てられたUnicodeコードポイントの場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="45a8c917d181c935751bf2058dd0abcf27f632cd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given value is valid for its type, which currently can be either &lt;code&gt;AbstractChar&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;SubString{String}&lt;/code&gt;.</source>
          <target state="translated">指定された値がそのタイプに対して有効で &lt;code&gt;true&lt;/code&gt; 場合にtrueを返します。現在のタイプは、 &lt;code&gt;AbstractChar&lt;/code&gt; または &lt;code&gt;String&lt;/code&gt; または &lt;code&gt;SubString{String}&lt;/code&gt; いずれかです。</target>
        </trans-unit>
        <trans-unit id="9262aae10c0925cef285ca380d1af0d4881cf8b3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given value is valid for that type. Types currently can be either &lt;code&gt;AbstractChar&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;. Values for &lt;code&gt;AbstractChar&lt;/code&gt; can be of type &lt;code&gt;AbstractChar&lt;/code&gt; or &lt;a href=&quot;../numbers/index#Core.UInt32&quot;&gt;&lt;code&gt;UInt32&lt;/code&gt;&lt;/a&gt;. Values for &lt;code&gt;String&lt;/code&gt; can be of that type, or &lt;code&gt;Vector{UInt8}&lt;/code&gt; or &lt;code&gt;SubString{String}&lt;/code&gt;.</source>
          <target state="translated">指定された値がそのタイプで有効な場合は &lt;code&gt;true&lt;/code&gt; を返します。現在、タイプは &lt;code&gt;AbstractChar&lt;/code&gt; または &lt;code&gt;String&lt;/code&gt; のいずれかです。値 &lt;code&gt;AbstractChar&lt;/code&gt; は、タイプのものとすることができる &lt;code&gt;AbstractChar&lt;/code&gt; または&lt;a href=&quot;../numbers/index#Core.UInt32&quot;&gt; &lt;code&gt;UInt32&lt;/code&gt; 型&lt;/a&gt;。 &lt;code&gt;String&lt;/code&gt; の値は、そのタイプ、または &lt;code&gt;Vector{UInt8}&lt;/code&gt; または &lt;code&gt;SubString{String}&lt;/code&gt; することができます。</target>
        </trans-unit>
        <trans-unit id="d0f3098d428aea850cd709f1d5d6813a492e3bd3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value of the sign of &lt;code&gt;x&lt;/code&gt; is negative, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; の符号の値が負の場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="efb3c3dbb92ed871a8f17576e640a218a96fdc7f" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;TextDisplay &amp;lt;: AbstractDisplay&lt;/code&gt;, which displays any object as the text/plain MIME type (by default), writing the text representation to the given I/O stream. (This is how objects are printed in the Julia REPL.)</source>
          <target state="translated">&lt;code&gt;TextDisplay &amp;lt;: AbstractDisplay&lt;/code&gt; 返します。これは、任意のオブジェクトをtext / plain MIMEタイプ（デフォルト）として表示し、テキスト表現を指定されたI / Oストリームに書き込みます。（これは、Julia REPLでオブジェクトが印刷される方法です。）</target>
        </trans-unit>
        <trans-unit id="f83d9e79a5a5276675860860d00b9e1ea68cd3c5" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the object &lt;code&gt;x&lt;/code&gt; can be written as the given &lt;code&gt;mime&lt;/code&gt; type.</source>
          <target state="translated">オブジェクト &lt;code&gt;x&lt;/code&gt; を指定された &lt;code&gt;mime&lt;/code&gt; タイプとして書き込むことができるかどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="e471ba256085b82e59e9731813815ef107629ac4" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether the given &lt;code&gt;mime&lt;/code&gt; type (string) is displayable by any of the displays in the current display stack, or specifically by the display &lt;code&gt;d&lt;/code&gt; in the second variant.</source>
          <target state="translated">指定された &lt;code&gt;mime&lt;/code&gt; タイプ（文字列）が、現在のディスプレイスタック内のいずれかのディスプレイで表示可能かどうか、または2番目のバリアントのディスプレイ &lt;code&gt;d&lt;/code&gt; で表示可能かどうかを示すブール値を返します。</target>
        </trans-unit>
        <trans-unit id="0427cd79eda01f9b940d0b4235d1af3887b577c3" translate="yes" xml:space="preserve">
          <source>Returns a pair of status objects &lt;code&gt;(previous, current)&lt;/code&gt; when a change is detected. The &lt;code&gt;previous&lt;/code&gt; status is always a &lt;code&gt;StatStruct&lt;/code&gt;, but it may have all of the fields zeroed (indicating the file didn't previously exist, or wasn't previously accessible).</source>
          <target state="translated">変更が検出されると、ステータスオブジェクトのペア &lt;code&gt;(previous, current)&lt;/code&gt; 返します。 &lt;code&gt;previous&lt;/code&gt; 状態は常にある &lt;code&gt;StatStruct&lt;/code&gt; が、それは（以前に存在しなかったファイルを表示、または以前にアクセスできませんでした）ゼロにすべてのフィールドを有することができます。</target>
        </trans-unit>
        <trans-unit id="14598ded619af990be25b83b5d1a57bea6b0db70" translate="yes" xml:space="preserve">
          <source>Returns a range describing the &quot;default&quot; indices to be handled by the current process. This range should be interpreted in the sense of linear indexing, i.e., as a sub-range of &lt;code&gt;1:length(S)&lt;/code&gt;. In multi-process contexts, returns an empty range in the parent process (or any process for which &lt;a href=&quot;#SharedArrays.indexpids&quot;&gt;&lt;code&gt;indexpids&lt;/code&gt;&lt;/a&gt; returns 0).</source>
          <target state="translated">現在のプロセスで処理される「デフォルト」のインデックスを説明する範囲を返します。この範囲は、線形インデックスの意味で、つまり &lt;code&gt;1:length(S)&lt;/code&gt; のサブ範囲として解釈する必要があります。マルチプロセスコンテキストでは、親プロセス（または&lt;a href=&quot;#SharedArrays.indexpids&quot;&gt; &lt;code&gt;indexpids&lt;/code&gt; &lt;/a&gt;が0を返すプロセス）に空の範囲を返します。</target>
        </trans-unit>
        <trans-unit id="dd0cf3513afb9b0f767137f548720ef31bacd3f2" translate="yes" xml:space="preserve">
          <source>Returns a reference to the internal buffer of backtraces. Note that subsequent operations, like &lt;a href=&quot;#Profile.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;, can affect &lt;code&gt;data&lt;/code&gt; unless you first make a copy. Note that the values in &lt;code&gt;data&lt;/code&gt; have meaning only on this machine in the current session, because it depends on the exact memory addresses used in JIT-compiling. This function is primarily for internal use; &lt;a href=&quot;#Profile.retrieve&quot;&gt;&lt;code&gt;retrieve&lt;/code&gt;&lt;/a&gt; may be a better choice for most users.</source>
          <target state="translated">バックトレースの内部バッファへの参照を返します。&lt;a href=&quot;#Profile.clear&quot;&gt; &lt;code&gt;clear&lt;/code&gt; の&lt;/a&gt;ような後続の操作は、最初にコピーを作成しない限り、 &lt;code&gt;data&lt;/code&gt; 影響を与える可能性があることに注意してください。 &lt;code&gt;data&lt;/code&gt; の値は、JITコンパイルで使用される正確なメモリアドレスに依存するため、現在のセッションのこのマシンでのみ意味があることに注意してください。この関数は主に内部で使用するためのものです。ほとんどのユーザーにとって、&lt;a href=&quot;#Profile.retrieve&quot;&gt; &lt;code&gt;retrieve&lt;/code&gt; の&lt;/a&gt;方が適しています。</target>
        </trans-unit>
        <trans-unit id="2a157c8f2f74fd167cfcc3832c1aa73296994582" translate="yes" xml:space="preserve">
          <source>Returns a sensible &quot;default&quot; value for the input Period by returning &lt;code&gt;T(1)&lt;/code&gt; for Year, Month, and Day, and &lt;code&gt;T(0)&lt;/code&gt; for Hour, Minute, Second, and Millisecond.</source>
          <target state="translated">戻り値を返すことにより、入力期間のための賢明な「デフォルト」値 &lt;code&gt;T(1)&lt;/code&gt; 年、月、日、およびのための &lt;code&gt;T(0)&lt;/code&gt; の時、分、秒、ミリ秒のために。</target>
        </trans-unit>
        <trans-unit id="96604efadeba4d36964bb8402d375421ee22a4ae" translate="yes" xml:space="preserve">
          <source>Returns a stack trace in the form of a vector of &lt;code&gt;StackFrame&lt;/code&gt;s. (By default stacktrace doesn't return C functions, but this can be enabled.) When called without specifying a trace, &lt;code&gt;stacktrace&lt;/code&gt; first calls &lt;code&gt;backtrace&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StackFrame&lt;/code&gt; のベクトルの形式でスタックトレースを返します。（デフォルトのスタックトレースではC関数を返しませんが、これは有効にすることができます。）トレースを指定せずに呼び出されると、 &lt;code&gt;stacktrace&lt;/code&gt; 最初の呼び出しを &lt;code&gt;backtrace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bed51edeb795ae3c87af2bdffe23171407ad8e4f" translate="yes" xml:space="preserve">
          <source>Returns a structure whose fields contain information about the file. The fields of the structure are:</source>
          <target state="translated">そのフィールドがファイルに関する情報を含む構造体を返します。構造体のフィールドは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="fb44b0244cadc53d01886375f31d7ae69a2d2deb" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;(filename,line)&lt;/code&gt; giving the location of a &lt;code&gt;Method&lt;/code&gt; definition.</source>
          <target state="translated">&lt;code&gt;Method&lt;/code&gt; 定義の場所を示すタプル &lt;code&gt;(filename,line)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3c0a1bf7e374f7303d5aa8915fde5acc20055a48" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;(filename,line)&lt;/code&gt; giving the location of a generic &lt;code&gt;Function&lt;/code&gt; definition.</source>
          <target state="translated">一般的な &lt;code&gt;Function&lt;/code&gt; 定義の場所を示すタプル &lt;code&gt;(filename,line)&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="134a9dec227a6480cf7e99af21cbeb7c6eed32f4" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the dimensions of &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の次元を含むタプルを返します</target>
        </trans-unit>
        <trans-unit id="06d180e36ba38b9667cd8f95a3b8acc45b01f80b" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AbstractString&lt;/code&gt; containing the representation of &lt;code&gt;x&lt;/code&gt; in the requested &lt;code&gt;mime&lt;/code&gt; type. This is similar to &lt;code&gt;repr(mime, x)&lt;/code&gt; except that binary data is base64-encoded as an ASCII string.</source>
          <target state="translated">要求された &lt;code&gt;mime&lt;/code&gt; タイプの &lt;code&gt;x&lt;/code&gt; の表現を含む &lt;code&gt;AbstractString&lt;/code&gt; を返します。これは、バイナリデータがASCII文字列としてbase64でエンコードされることを除いて &lt;code&gt;repr(mime, x)&lt;/code&gt; と同様です。</target>
        </trans-unit>
        <trans-unit id="09e0c366cc6e70eda4f1381e7db09b6b620f71cc" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AbstractString&lt;/code&gt; or &lt;code&gt;Vector{UInt8}&lt;/code&gt; containing the representation of &lt;code&gt;x&lt;/code&gt; in the requested &lt;code&gt;mime&lt;/code&gt; type, as written by &lt;a href=&quot;#Base.show-Tuple%7BAny,Any,Any%7D&quot;&gt;&lt;code&gt;show(io, mime, x)&lt;/code&gt;&lt;/a&gt; (throwing a &lt;a href=&quot;../base/index#Core.MethodError&quot;&gt;&lt;code&gt;MethodError&lt;/code&gt;&lt;/a&gt; if no appropriate &lt;code&gt;show&lt;/code&gt; is available). An &lt;code&gt;AbstractString&lt;/code&gt; is returned for MIME types with textual representations (such as &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; or &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;), whereas binary data is returned as &lt;code&gt;Vector{UInt8}&lt;/code&gt;. (The function &lt;code&gt;istextmime(mime)&lt;/code&gt; returns whether or not Julia treats a given &lt;code&gt;mime&lt;/code&gt; type as text.)</source>
          <target state="translated">&lt;a href=&quot;#Base.show-Tuple%7BAny,Any,Any%7D&quot;&gt; &lt;code&gt;show(io, mime, x)&lt;/code&gt; &lt;/a&gt;によって書き込まれた、要求された &lt;code&gt;mime&lt;/code&gt; タイプの &lt;code&gt;x&lt;/code&gt; の表現を含む &lt;code&gt;AbstractString&lt;/code&gt; または &lt;code&gt;Vector{UInt8}&lt;/code&gt; を返します（適切な &lt;code&gt;show&lt;/code&gt; がない場合は、&lt;a href=&quot;../base/index#Core.MethodError&quot;&gt; &lt;code&gt;MethodError&lt;/code&gt; を&lt;/a&gt;スローします）。 AN &lt;code&gt;AbstractString&lt;/code&gt; は、（例えば、テキスト表現とMIMEタイプに戻される &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; または &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; バイナリデータは次のように返され、一方、） &lt;code&gt;Vector{UInt8}&lt;/code&gt; 。（関数 &lt;code&gt;istextmime(mime)&lt;/code&gt; は、Juliaが指定された &lt;code&gt;mime&lt;/code&gt; タイプをテキストとして扱うかどうかを返します。）</target>
        </trans-unit>
        <trans-unit id="6fb35ceb0dd9f76502cd2f76ac6295dfbb4f6bb3" translate="yes" xml:space="preserve">
          <source>Returns an IPv4 object from ip address &lt;code&gt;host&lt;/code&gt; formatted as an &lt;a href=&quot;../../base/numbers/index#Core.Integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../base/numbers/index#Core.Integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;としてフォーマットされたIPアドレス &lt;code&gt;host&lt;/code&gt; からIPv4オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="828dccd53aea81f4625e5589509b5d7c1c17c8ad" translate="yes" xml:space="preserve">
          <source>Returns an IPv6 object from ip address &lt;code&gt;host&lt;/code&gt; formatted as an &lt;a href=&quot;../../base/numbers/index#Core.Integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../base/numbers/index#Core.Integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;としてフォーマットされたIPアドレス &lt;code&gt;host&lt;/code&gt; からIPv6オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="28ff83adec7619a502e4931b7e80323938405e74" translate="yes" xml:space="preserve">
          <source>Returns an array containing one value from &lt;code&gt;itr&lt;/code&gt; for each unique value produced by &lt;code&gt;f&lt;/code&gt; applied to elements of &lt;code&gt;itr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;itr&lt;/code&gt; の要素に適用された &lt;code&gt;f&lt;/code&gt; によって生成された一意の値ごとに、 &lt;code&gt;itr&lt;/code&gt; から1つの値を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="d70e12a9af77e3680e53c503a7e729447736e0c5" translate="yes" xml:space="preserve">
          <source>Returns an array of type-inferred lowered form (IR) for the methods matching the given generic function and type signature. The keyword argument &lt;code&gt;optimize&lt;/code&gt; controls whether additional optimizations, such as inlining, are also applied. The keyword &lt;code&gt;debuginfo&lt;/code&gt; controls the amount of code metadata present in the output, possible options are &lt;code&gt;:source&lt;/code&gt; or &lt;code&gt;:none&lt;/code&gt;.</source>
          <target state="translated">指定されたジェネリック関数と型シグネチャに一致するメソッドの型推論の縮約形式（IR）の配列を返します。キーワード引数 &lt;code&gt;optimize&lt;/code&gt; は、インライン化などの追加の最適化も適用するかどうかを制御します。キーワード &lt;code&gt;debuginfo&lt;/code&gt; は、出力に含まれるコードメタデータの量を制御します。可能なオプションは &lt;code&gt;:source&lt;/code&gt; または &lt;code&gt;:none&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="81528e5e30460964d5f056689279c64a9f0125e8" translate="yes" xml:space="preserve">
          <source>Returns an iterator over substrings of &lt;code&gt;s&lt;/code&gt; that correspond to the extended graphemes in the string, as defined by Unicode UAX #29. (Roughly, these are what users would perceive as single characters, even though they may contain more than one codepoint; for example a letter combined with an accent mark is a single grapheme.)</source>
          <target state="translated">Unicode UAX＃29で定義されている、文字列の拡張書記素に対応する &lt;code&gt;s&lt;/code&gt; の部分文字列の反復子を返します。（おおよそ、これらは、複数のコードポイントが含まれている場合でも、ユーザーが単一の文字として認識するものです。たとえば、アクセント記号と組み合わせた文字は単一の書記素です。）</target>
        </trans-unit>
        <trans-unit id="7a0f23f2d6405e7bca5ec324c695f865780cc0fd" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;IndexLinear()&lt;/code&gt; or &lt;code&gt;IndexCartesian()&lt;/code&gt;. See the description below.</source>
          <target state="translated">&lt;code&gt;IndexLinear()&lt;/code&gt; または &lt;code&gt;IndexCartesian()&lt;/code&gt; を返します。以下の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="8fde4e28bcb1e8cfeff8ba0b17d8379e3e1d1ff5" translate="yes" xml:space="preserve">
          <source>Returns either a tuple of the first item and initial state or &lt;a href=&quot;../../base/constants/index#Core.nothing&quot;&gt;&lt;code&gt;nothing&lt;/code&gt;&lt;/a&gt; if empty</source>
          <target state="translated">最初のアイテムと初期状態のタプルを返すか、空の場合は&lt;a href=&quot;../../base/constants/index#Core.nothing&quot;&gt; &lt;code&gt;nothing&lt;/code&gt; &lt;/a&gt;返しません</target>
        </trans-unit>
        <trans-unit id="091662552264e813b66465560fef1f64ea201706" translate="yes" xml:space="preserve">
          <source>Returns either a tuple of the next item and next state or &lt;code&gt;nothing&lt;/code&gt; if no items remain</source>
          <target state="translated">次のアイテムと次の状態のタプルを返すか、アイテムが残ってい &lt;code&gt;nothing&lt;/code&gt; 場合は何も返さない</target>
        </trans-unit>
        <trans-unit id="73a490eb9e3f6442637bc1d5ff160da948ea0135" translate="yes" xml:space="preserve">
          <source>Returns either the upper triangle or the lower triangle of &lt;code&gt;A&lt;/code&gt;, according to &lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt;&lt;code&gt;uplo&lt;/code&gt;&lt;/a&gt;, of &lt;code&gt;alpha*A*transpose(A)&lt;/code&gt; or &lt;code&gt;alpha*transpose(A)*A&lt;/code&gt;, according to &lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り上三角または下三角いずれか &lt;code&gt;A&lt;/code&gt; に従って、&lt;a href=&quot;#stdlib-blas-uplo-1&quot;&gt; &lt;code&gt;uplo&lt;/code&gt; &lt;/a&gt;の、 &lt;code&gt;alpha*A*transpose(A)&lt;/code&gt; 又は &lt;code&gt;alpha*transpose(A)*A&lt;/code&gt; によれば、&lt;a href=&quot;#stdlib-blas-trans-1&quot;&gt; &lt;code&gt;trans&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a2abe16eb46f6cdc4f8d46d423762a1263acd60" translate="yes" xml:space="preserve">
          <source>Returns the &quot;parent array&quot; of an array view type (e.g., &lt;code&gt;SubArray&lt;/code&gt;), or the array itself if it is not a view.</source>
          <target state="translated">配列のビュータイプ（ &lt;code&gt;SubArray&lt;/code&gt; など）の「親配列」を返します。ビューでない場合は配列自体を返します。</target>
        </trans-unit>
        <trans-unit id="72c6fce05282097c0713385f70e34521c5e43f56" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;StackTrace&lt;/code&gt; with all &lt;code&gt;StackFrame&lt;/code&gt;s from the provided &lt;code&gt;Module&lt;/code&gt; removed.</source>
          <target state="translated">指定された &lt;code&gt;Module&lt;/code&gt; からすべての &lt;code&gt;StackFrame&lt;/code&gt; を削除した &lt;code&gt;StackTrace&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ba4a4607b68e87fc2e2c53984e46f5f9a04e611c" translate="yes" xml:space="preserve">
          <source>Returns the actual &lt;code&gt;Array&lt;/code&gt; object backing &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; をバッキングする実際の &lt;code&gt;Array&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f943451f7ab2047268ef6e6e4ee1832d78b3cde9" translate="yes" xml:space="preserve">
          <source>Returns the current worker's index in the list of workers mapping the &lt;code&gt;SharedArray&lt;/code&gt; (i.e. in the same list returned by &lt;code&gt;procs(S)&lt;/code&gt;), or 0 if the &lt;code&gt;SharedArray&lt;/code&gt; is not mapped locally.</source>
          <target state="translated">&lt;code&gt;SharedArray&lt;/code&gt; をマッピングするワーカーのリスト（つまり、 &lt;code&gt;procs(S)&lt;/code&gt; によって返される同じリスト）の現在のワーカーのインデックスを返します &lt;code&gt;SharedArray&lt;/code&gt; がローカルにマッピングされていない場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="cf93c9cb3aec019cfb27714a8152cb406e23dbd3" translate="yes" xml:space="preserve">
          <source>Returns the eigenvalues of &lt;code&gt;A&lt;/code&gt;. It is possible to calculate only a subset of the eigenvalues by specifying a &lt;code&gt;UnitRange&lt;/code&gt;&lt;code&gt;irange&lt;/code&gt; covering indices of the sorted eigenvalues, e.g. the 2nd to 8th eigenvalues.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の固有値を返します。ソートされた固有値のインデックスをカバーする &lt;code&gt;UnitRange&lt;/code&gt; &lt;code&gt;irange&lt;/code&gt; を指定することにより、固有値のサブセットのみを計算することが可能です（例：2番目から8番目の固有値）。</target>
        </trans-unit>
        <trans-unit id="36c3616f47576ffe88a1a9f034f848980fe6eab9" translate="yes" xml:space="preserve">
          <source>Returns the eigenvalues of &lt;code&gt;A&lt;/code&gt;. It is possible to calculate only a subset of the eigenvalues by specifying a pair &lt;code&gt;vl&lt;/code&gt; and &lt;code&gt;vu&lt;/code&gt; for the lower and upper boundaries of the eigenvalues.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; の固有値を返します。固有値の下限と上限に &lt;code&gt;vl&lt;/code&gt; と &lt;code&gt;vu&lt;/code&gt; のペアを指定することで、固有値のサブセットのみを計算することができます。</target>
        </trans-unit>
        <trans-unit id="7e85b87c037605b4a9b4f7056040c38a8ad67493" translate="yes" xml:space="preserve">
          <source>Returns the filename of the downloaded file.</source>
          <target state="translated">ダウンロードしたファイルのファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="dc9a63bc1b90ee7c116dcb0a796957b9639a4b19" translate="yes" xml:space="preserve">
          <source>Returns the largest element in a collection.</source>
          <target state="translated">コレクション内の最大の要素を返します。</target>
        </trans-unit>
        <trans-unit id="ff6fc6993de1a37525784d8c32a5312acbcd8dc4" translate="yes" xml:space="preserve">
          <source>Returns the largest result of calling function &lt;code&gt;f&lt;/code&gt; on each element of &lt;code&gt;itr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;itr&lt;/code&gt; の各要素で関数 &lt;code&gt;f&lt;/code&gt; を呼び出した最大の結果を返します。</target>
        </trans-unit>
        <trans-unit id="5325737585ed72b0149984b896e3245f889e1259" translate="yes" xml:space="preserve">
          <source>Returns the lower triangle of &lt;code&gt;M&lt;/code&gt; starting from the &lt;code&gt;k&lt;/code&gt;th superdiagonal.</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; 番目の下三角を &lt;code&gt;k&lt;/code&gt; 番目の上三角から開始して返します。</target>
        </trans-unit>
        <trans-unit id="580f9394ec0e115882be518b564fec264d3267e3" translate="yes" xml:space="preserve">
          <source>Returns the method of &lt;code&gt;f&lt;/code&gt; (a &lt;code&gt;Method&lt;/code&gt; object) that would be called for arguments of the given &lt;code&gt;types&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;types&lt;/code&gt; 引数に対して呼び出される &lt;code&gt;f&lt;/code&gt; の &lt;code&gt;Method&lt;/code&gt; （メソッドオブジェクト）を返します。</target>
        </trans-unit>
        <trans-unit id="e971837c6856be08006b27f93ad7cfdfedfaa117" translate="yes" xml:space="preserve">
          <source>Returns the method table for &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; のメソッドテーブルを返します。</target>
        </trans-unit>
        <trans-unit id="6588b7871d96e8676c18cc8a6a992a4645264b2c" translate="yes" xml:space="preserve">
          <source>Returns the number of active test sets, not including the default test set</source>
          <target state="translated">アクティブなテストセットの数を返します。</target>
        </trans-unit>
        <trans-unit id="42513f683aa5cbaba4eb85e68e9674354ae00605" translate="yes" xml:space="preserve">
          <source>Returns the number of stored (filled) elements in a sparse array.</source>
          <target state="translated">疎な配列に格納されている(埋められている)要素の数を返します。</target>
        </trans-unit>
        <trans-unit id="c5ca796b2ce84c51b4b42b5873672c54d21d2b7a" translate="yes" xml:space="preserve">
          <source>Returns the product of &lt;code&gt;f&lt;/code&gt; applied to each element of &lt;code&gt;itr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;itr&lt;/code&gt; の各要素に適用された &lt;code&gt;f&lt;/code&gt; の積を返します。</target>
        </trans-unit>
        <trans-unit id="049d936ab452e4b28c0b48858360970b3f52c1dd" translate="yes" xml:space="preserve">
          <source>Returns the product of all elements of a collection.</source>
          <target state="translated">コレクションのすべての要素の積を返します。</target>
        </trans-unit>
        <trans-unit id="75b86916dd3130b62421ce36b49aebe08d35a03e" translate="yes" xml:space="preserve">
          <source>Returns the singular values in &lt;code&gt;d&lt;/code&gt;, and if &lt;code&gt;compq = P&lt;/code&gt;, the compact singular vectors in &lt;code&gt;iq&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; に特異値を返し、 &lt;code&gt;compq = P&lt;/code&gt; 場合は &lt;code&gt;iq&lt;/code&gt; にコンパクト特異ベクトルを返します。</target>
        </trans-unit>
        <trans-unit id="ade97543c56a2673bc04af1ba5dd9ad3bdb8b88d" translate="yes" xml:space="preserve">
          <source>Returns the singular values in &lt;code&gt;d&lt;/code&gt;, and the matrix &lt;code&gt;C&lt;/code&gt; overwritten with &lt;code&gt;Q' * C&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; の特異値と &lt;code&gt;Q' * C&lt;/code&gt; 上書きされた行列 &lt;code&gt;C&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="579c8c7bcaa808fbf99ed86c3b6826f7f3636289" translate="yes" xml:space="preserve">
          <source>Returns the smallest element in a collection.</source>
          <target state="translated">コレクション内の最小の要素を返します。</target>
        </trans-unit>
        <trans-unit id="6aee70e279cf8b72df497debabcf8f014b96f720" translate="yes" xml:space="preserve">
          <source>Returns the smallest result of calling function &lt;code&gt;f&lt;/code&gt; on each element of &lt;code&gt;itr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;itr&lt;/code&gt; の各要素で関数 &lt;code&gt;f&lt;/code&gt; を呼び出した結果の最小値を返します。</target>
        </trans-unit>
        <trans-unit id="1a24023ca19c84f1b80bd138a4ab95f164cf09b6" translate="yes" xml:space="preserve">
          <source>Returns the solution &lt;code&gt;X&lt;/code&gt;; &lt;code&gt;equed&lt;/code&gt;, which is an output if &lt;code&gt;fact&lt;/code&gt; is not &lt;code&gt;N&lt;/code&gt;, and describes the equilibration that was performed; &lt;code&gt;R&lt;/code&gt;, the row equilibration diagonal; &lt;code&gt;C&lt;/code&gt;, the column equilibration diagonal; &lt;code&gt;B&lt;/code&gt;, which may be overwritten with its equilibrated form &lt;code&gt;Diagonal(R)*B&lt;/code&gt; (if &lt;code&gt;trans = N&lt;/code&gt; and &lt;code&gt;equed = R,B&lt;/code&gt;) or &lt;code&gt;Diagonal(C)*B&lt;/code&gt; (if &lt;code&gt;trans = T,C&lt;/code&gt; and &lt;code&gt;equed = C,B&lt;/code&gt;); &lt;code&gt;rcond&lt;/code&gt;, the reciprocal condition number of &lt;code&gt;A&lt;/code&gt; after equilbrating; &lt;code&gt;ferr&lt;/code&gt;, the forward error bound for each solution vector in &lt;code&gt;X&lt;/code&gt;; &lt;code&gt;berr&lt;/code&gt;, the forward error bound for each solution vector in &lt;code&gt;X&lt;/code&gt;; and &lt;code&gt;work&lt;/code&gt;, the reciprocal pivot growth factor.</source>
          <target state="translated">解 &lt;code&gt;X&lt;/code&gt; を返します。 &lt;code&gt;equed&lt;/code&gt; は、 &lt;code&gt;fact&lt;/code&gt; が &lt;code&gt;N&lt;/code&gt; でない場合の出力であり、実行された平衡化を示します。 &lt;code&gt;R&lt;/code&gt; 、行平衡対角線。 &lt;code&gt;C&lt;/code&gt; 、列平衡対角線。 &lt;code&gt;B&lt;/code&gt; は、平衡化された形式 &lt;code&gt;Diagonal(R)*B&lt;/code&gt; （ &lt;code&gt;trans = N&lt;/code&gt; および &lt;code&gt;equed = R,B&lt;/code&gt; ）または &lt;code&gt;Diagonal(C)*B&lt;/code&gt; （ &lt;code&gt;trans = T,C&lt;/code&gt; および &lt;code&gt;equed = C,B&lt;/code&gt; ）で上書きされます。 &lt;code&gt;rcond&lt;/code&gt; 、平衡化後の &lt;code&gt;A&lt;/code&gt; の相互条件数。 &lt;code&gt;ferr&lt;/code&gt; 、 &lt;code&gt;X&lt;/code&gt; の各解ベクトルの前方誤差限界。 &lt;code&gt;berr&lt;/code&gt; 、 &lt;code&gt;X&lt;/code&gt; の各解ベクトルの前方誤差限界。そして、 &lt;code&gt;work&lt;/code&gt; 、相互のピボット成長因子。</target>
        </trans-unit>
        <trans-unit id="123b0abe70bae2d3a4d336a895ec438b2165090f" translate="yes" xml:space="preserve">
          <source>Returns the sum of all elements in a collection.</source>
          <target state="translated">コレクション内のすべての要素の合計を返します。</target>
        </trans-unit>
        <trans-unit id="af5e6be27979633e96f756d78e6061afb5eb5cb9" translate="yes" xml:space="preserve">
          <source>Returns the upper triangle of &lt;code&gt;M&lt;/code&gt; starting from the &lt;code&gt;k&lt;/code&gt;th superdiagonal.</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; 番目の上三角を &lt;code&gt;k&lt;/code&gt; 番目の上対角から開始して返します。</target>
        </trans-unit>
        <trans-unit id="40afec3ec96d0706d8f8a53b3547e265a2c1b023" translate="yes" xml:space="preserve">
          <source>Returns year of 1996, 0096</source>
          <target state="translated">1996年、0096年の年号を返します。</target>
        </trans-unit>
        <trans-unit id="062cb447f4fe596f07b0e89603ec490829543429" translate="yes" xml:space="preserve">
          <source>Returns year of 1996, 0096. Equivalent to &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">1996年の0096を返します &lt;code&gt;y&lt;/code&gt; と同じ</target>
        </trans-unit>
        <trans-unit id="b48292145a20e3197e11b51b6c387f46681d1653" translate="yes" xml:space="preserve">
          <source>Reverse &lt;code&gt;A&lt;/code&gt; in dimension &lt;code&gt;dims&lt;/code&gt;.</source>
          <target state="translated">リバース &lt;code&gt;A&lt;/code&gt; 寸法で &lt;code&gt;dims&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a5dadf925385f1285d9e513f6b0b266fb2edd6b" translate="yes" xml:space="preserve">
          <source>Reverse Solidus Preceding Subset</source>
          <target state="translated">逆ソリッドス先行サブセット</target>
        </trans-unit>
        <trans-unit id="7201e0595f923ff1e13a917984177621111afaa8" translate="yes" xml:space="preserve">
          <source>Reverse Solidus With Horizontal Stroke</source>
          <target state="translated">水平方向のストロークを持つリバースソリダス</target>
        </trans-unit>
        <trans-unit id="99e58a4e4f29850986a50e621ba412e74c2d5e4a" translate="yes" xml:space="preserve">
          <source>Reverse Tilde Operator Above Leftwards Arrow</source>
          <target state="translated">左向き矢印の上の逆ティルデ演算子</target>
        </trans-unit>
        <trans-unit id="95878297127ec8ff5caaa87eaf30d880acae4c71" translate="yes" xml:space="preserve">
          <source>Reverse Tilde Operator Above Rightwards Arrow</source>
          <target state="translated">右矢印の上の逆ティルデ演算子</target>
        </trans-unit>
        <trans-unit id="c1851b55f1a21f33edf4b1d46f09dd646e078bd5" translate="yes" xml:space="preserve">
          <source>Reverse the byte order of &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; のバイト順序を逆にします。</target>
        </trans-unit>
        <trans-unit id="3f42201a8483b4932a0419bb37ef5c8ef80d308f" translate="yes" xml:space="preserve">
          <source>Reversed Angle</source>
          <target state="translated">逆角度</target>
        </trans-unit>
        <trans-unit id="c138b3fec070ad2c708f1df6df504472988f74e7" translate="yes" xml:space="preserve">
          <source>Reversed Angle With Underbar</source>
          <target state="translated">アンダーバーと逆アングル</target>
        </trans-unit>
        <trans-unit id="57321b3462d209f757bc5a7dd5c1dcd8ca158046" translate="yes" xml:space="preserve">
          <source>Reversed Double Prime</source>
          <target state="translated">逆二重素数</target>
        </trans-unit>
        <trans-unit id="a91c4d55c676a97ab2ca7ebe246a0b783be5a7bf" translate="yes" xml:space="preserve">
          <source>Reversed Empty Set</source>
          <target state="translated">逆空セット</target>
        </trans-unit>
        <trans-unit id="3995614141031e8184a50bef72c6419be37429c2" translate="yes" xml:space="preserve">
          <source>Reversed Not Sign</source>
          <target state="translated">逆転していない符号</target>
        </trans-unit>
        <trans-unit id="656a432972ce7ba2786e8e8a3e41bfdef9c1b23d" translate="yes" xml:space="preserve">
          <source>Reversed Prime</source>
          <target state="translated">逆プライム</target>
        </trans-unit>
        <trans-unit id="009efadd9666a2c35939e8b2550ca2d73229be18" translate="yes" xml:space="preserve">
          <source>Reversed Sans-Serif Capital L</source>
          <target state="translated">サンセリフを反転させたキャピタルL</target>
        </trans-unit>
        <trans-unit id="a69585b74de638ac9246ea7479830001463c91ad" translate="yes" xml:space="preserve">
          <source>Reversed Tilde</source>
          <target state="translated">逆ティルデ</target>
        </trans-unit>
        <trans-unit id="b2314fa6fa020ac2d0e0451b515b022911d9332b" translate="yes" xml:space="preserve">
          <source>Reversed Tilde Equals</source>
          <target state="translated">逆ティルデ・イコール</target>
        </trans-unit>
        <trans-unit id="0c593371d8880070f4cd9dd75c39002aafe682fe" translate="yes" xml:space="preserve">
          <source>Reversed Triple Prime</source>
          <target state="translated">逆三位一体</target>
        </trans-unit>
        <trans-unit id="0bcdd7c8b3f0b0ed4349f4671114f0454395c7d2" translate="yes" xml:space="preserve">
          <source>Reverses a string. Technically, this function reverses the codepoints in a string and its main utility is for reversed-order string processing, especially for reversed regular-expression searches. See also &lt;a href=&quot;../arrays/index#Base.reverseind&quot;&gt;&lt;code&gt;reverseind&lt;/code&gt;&lt;/a&gt; to convert indices in &lt;code&gt;s&lt;/code&gt; to indices in &lt;code&gt;reverse(s)&lt;/code&gt; and vice-versa, and &lt;code&gt;graphemes&lt;/code&gt; from module &lt;code&gt;Unicode&lt;/code&gt; to operate on user-visible &quot;characters&quot; (graphemes) rather than codepoints. See also &lt;a href=&quot;../iterators/index#Base.Iterators.reverse&quot;&gt;&lt;code&gt;Iterators.reverse&lt;/code&gt;&lt;/a&gt; for reverse-order iteration without making a copy. Custom string types must implement the &lt;code&gt;reverse&lt;/code&gt; function themselves and should typically return a string with the same type and encoding. If they return a string with a different encoding, they must also override &lt;code&gt;reverseind&lt;/code&gt; for that string type to satisfy &lt;code&gt;s[reverseind(s,i)] == reverse(s)[i]&lt;/code&gt;.</source>
          <target state="translated">文字列を逆にします。技術的には、この関数は文字列内のコードポイントを逆にします。その主なユーティリティは、逆順の文字列処理、特に逆正規表現検索用です。参照&lt;a href=&quot;../arrays/index#Base.reverseind&quot;&gt; &lt;code&gt;reverseind&lt;/code&gt; &lt;/a&gt;コンバートにおけるインデックスに &lt;code&gt;s&lt;/code&gt; 内のインデックスに &lt;code&gt;reverse(s)&lt;/code&gt; とその逆、及び &lt;code&gt;graphemes&lt;/code&gt; モジュールから &lt;code&gt;Unicode&lt;/code&gt; ユーザに見える「文字」（書記素）よりもむしろコードポイント上で動作します。コピーを作成せずに逆順の反復を行うには&lt;a href=&quot;../iterators/index#Base.Iterators.reverse&quot;&gt; &lt;code&gt;Iterators.reverse&lt;/code&gt; &lt;/a&gt;も参照してください。カスタム文字列型は &lt;code&gt;reverse&lt;/code&gt; 実装する必要があります関数自体であり、通常は同じタイプとエンコーディングの文字列を返します。異なるエンコーディングの文字列を返す場合、その文字列タイプが &lt;code&gt;s[reverseind(s,i)] == reverse(s)[i]&lt;/code&gt; を満たすように、 &lt;code&gt;reverseind&lt;/code&gt; もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="187e1678cc907a44a7445720e1b06305b95fb0e2" translate="yes" xml:space="preserve">
          <source>Revise-based workflows</source>
          <target state="translated">リバイスベースのワークフロー</target>
        </trans-unit>
        <trans-unit id="60cd9466fda190233e3dbce1b323ac198c68d6fd" translate="yes" xml:space="preserve">
          <source>Revolving Hearts</source>
          <target state="translated">リボルビングハート</target>
        </trans-unit>
        <trans-unit id="ae48c34ae743bac50bb39c42a8697b01fe22b774" translate="yes" xml:space="preserve">
          <source>Ribbon</source>
          <target state="translated">Ribbon</target>
        </trans-unit>
        <trans-unit id="83282c7da25c4627032e324948c061e5ccfb00c5" translate="yes" xml:space="preserve">
          <source>Rice Ball</source>
          <target state="translated">おにぎり</target>
        </trans-unit>
        <trans-unit id="c8cb68c70653c77e9783dd2e47f6b540c769c9ad" translate="yes" xml:space="preserve">
          <source>Rice Cracker</source>
          <target state="translated">米菓</target>
        </trans-unit>
        <trans-unit id="954daa8b00335c66e262106e01f7dc22b19a4372" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Right</target>
        </trans-unit>
        <trans-unit id="35a69238d258f5a97a609b7306545118c63ed63c" translate="yes" xml:space="preserve">
          <source>Right Angle</source>
          <target state="translated">直角</target>
        </trans-unit>
        <trans-unit id="cb7dc393c8843f0d61336446946adbc3bca5c819" translate="yes" xml:space="preserve">
          <source>Right Angle Variant With Square</source>
          <target state="translated">四角い直角のバリエーション</target>
        </trans-unit>
        <trans-unit id="20a1bb75684dc0ce5fda819a0f72f04737aab297" translate="yes" xml:space="preserve">
          <source>Right Angle With Arc</source>
          <target state="translated">アークと直角</target>
        </trans-unit>
        <trans-unit id="487033690f0d989160fa3a1c8ec6b16344d4c91e" translate="yes" xml:space="preserve">
          <source>Right Arrow With Small Circle</source>
          <target state="translated">小さな円で右矢印</target>
        </trans-unit>
        <trans-unit id="d6b588284a5074a08844e856ca658e89e52afb2d" translate="yes" xml:space="preserve">
          <source>Right Ceiling</source>
          <target state="translated">右天井</target>
        </trans-unit>
        <trans-unit id="9345d111d62d33e6306399281ef80c50ad4cf787" translate="yes" xml:space="preserve">
          <source>Right Double Arrow With Rounded Head</source>
          <target state="translated">丸みを帯びた頭を持つ右の二重矢</target>
        </trans-unit>
        <trans-unit id="79aa72234001c17be38b3c30aa6f142dfa5963b0" translate="yes" xml:space="preserve">
          <source>Right Double Quotation Mark / Double Comma Quotation Mark</source>
          <target state="translated">右ダブルクォーテーションマーク/ダブルカンマ引用符</target>
        </trans-unit>
        <trans-unit id="68f643b3585dddeb2eea8defd7da11a692fc02c9" translate="yes" xml:space="preserve">
          <source>Right Floor</source>
          <target state="translated">右側のフロア</target>
        </trans-unit>
        <trans-unit id="928c44292bc9352627221ecb23a59d24882c8953" translate="yes" xml:space="preserve">
          <source>Right Half Black Circle</source>
          <target state="translated">右半分ブラックサークル</target>
        </trans-unit>
        <trans-unit id="7ff701fa3180fa41f9899eaf510c21255e76e6a3" translate="yes" xml:space="preserve">
          <source>Right Half Block</source>
          <target state="translated">右ハーフブロック</target>
        </trans-unit>
        <trans-unit id="36d176daaaeefbc2def02b5e5350ba470dd4957a" translate="yes" xml:space="preserve">
          <source>Right Normal Factor Semidirect Product</source>
          <target state="translated">右正規因子半間接製品</target>
        </trans-unit>
        <trans-unit id="d42a26cd4fb5eeb456c5ddb2570b17b53a06e577" translate="yes" xml:space="preserve">
          <source>Right Outer Join</source>
          <target state="translated">右外側接合部</target>
        </trans-unit>
        <trans-unit id="72ff204ee10711410e0ce48b2e3d983ff9addd73" translate="yes" xml:space="preserve">
          <source>Right Semidirect Product</source>
          <target state="translated">右半間接製品</target>
        </trans-unit>
        <trans-unit id="73b1945c7cd6c311efefebafe2723f2ae3761587" translate="yes" xml:space="preserve">
          <source>Right Single Quotation Mark / Single Comma Quotation Mark</source>
          <target state="translated">右シングル引用符/シングルカンマ引用符</target>
        </trans-unit>
        <trans-unit id="0564ac24548af72bc88adb8f5101977a0bdca104" translate="yes" xml:space="preserve">
          <source>Right Tack</source>
          <target state="translated">右タック</target>
        </trans-unit>
        <trans-unit id="613a9f8f5695ed94698c82133eb2135d712c72b8" translate="yes" xml:space="preserve">
          <source>Right Triangle</source>
          <target state="translated">直角三角形</target>
        </trans-unit>
        <trans-unit id="9d10fb4475277dc642a7edf45dfedb424fd47892" translate="yes" xml:space="preserve">
          <source>Right Vertical Box Line</source>
          <target state="translated">右の縦長のボックスライン</target>
        </trans-unit>
        <trans-unit id="481e0130ee573dd4e00224d9177b00ce7c3b024d" translate="yes" xml:space="preserve">
          <source>Right White Parenthesis</source>
          <target state="translated">右の白カッコ</target>
        </trans-unit>
        <trans-unit id="e67d28c149d7b5daa7a3b1f0b7d9ade1549b7b43" translate="yes" xml:space="preserve">
          <source>Right arrow, &lt;code&gt;^F&lt;/code&gt;</source>
          <target state="translated">右矢印、 &lt;code&gt;^F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96d07be5240077c0c5b012e0ca69c2537c371eea" translate="yes" xml:space="preserve">
          <source>Right bit shift operator, &lt;code&gt;B &amp;gt;&amp;gt; n&lt;/code&gt;. For &lt;code&gt;n &amp;gt;= 0&lt;/code&gt;, the result is &lt;code&gt;B&lt;/code&gt; with elements shifted &lt;code&gt;n&lt;/code&gt; positions forward, filling with &lt;code&gt;false&lt;/code&gt; values. If &lt;code&gt;n &amp;lt; 0&lt;/code&gt;, elements are shifted backwards. Equivalent to &lt;code&gt;B &amp;lt;&amp;lt; -n&lt;/code&gt;.</source>
          <target state="translated">右ビットシフト演算子、 &lt;code&gt;B &amp;gt;&amp;gt; n&lt;/code&gt; 。以下のために &lt;code&gt;n &amp;gt;= 0&lt;/code&gt; 、結果は &lt;code&gt;B&lt;/code&gt; の要素がシフトして &lt;code&gt;n&lt;/code&gt; 個の充填、前方に位置する &lt;code&gt;false&lt;/code&gt; の値。 &lt;code&gt;n &amp;lt; 0&lt;/code&gt; 場合、要素は後方にシフトされます。同等の &lt;code&gt;B &amp;lt;&amp;lt; -n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51b52885a52960a7f3a47de0a75bd65524aa0722" translate="yes" xml:space="preserve">
          <source>Right bit shift operator, &lt;code&gt;x &amp;gt;&amp;gt; n&lt;/code&gt;. For &lt;code&gt;n &amp;gt;= 0&lt;/code&gt;, the result is &lt;code&gt;x&lt;/code&gt; shifted right by &lt;code&gt;n&lt;/code&gt; bits, where &lt;code&gt;n &amp;gt;= 0&lt;/code&gt;, filling with &lt;code&gt;0&lt;/code&gt;s if &lt;code&gt;x &amp;gt;= 0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;s if &lt;code&gt;x &amp;lt; 0&lt;/code&gt;, preserving the sign of &lt;code&gt;x&lt;/code&gt;. This is equivalent to &lt;code&gt;fld(x, 2^n)&lt;/code&gt;. For &lt;code&gt;n &amp;lt; 0&lt;/code&gt;, this is equivalent to &lt;code&gt;x &amp;lt;&amp;lt; -n&lt;/code&gt;.</source>
          <target state="translated">右ビットシフト演算子、 &lt;code&gt;x &amp;gt;&amp;gt; n&lt;/code&gt; 。以下のために &lt;code&gt;n &amp;gt;= 0&lt;/code&gt; 、結果は &lt;code&gt;x&lt;/code&gt; 右にシフト &lt;code&gt;n&lt;/code&gt; ビット、 &lt;code&gt;n &amp;gt;= 0&lt;/code&gt; 、充填 &lt;code&gt;0&lt;/code&gt; の場合 &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; 秒であれば &lt;code&gt;x &amp;lt; 0&lt;/code&gt; の符号保存、 &lt;code&gt;x&lt;/code&gt; 。これは &lt;code&gt;fld(x, 2^n)&lt;/code&gt; と同等です。以下のために &lt;code&gt;n &amp;lt; 0&lt;/code&gt; 、これは、と等価である &lt;code&gt;x &amp;lt;&amp;lt; -n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="145ac3e6cb491c6058bb5e0d4ae165330027b6b7" translate="yes" xml:space="preserve">
          <source>Right division operator: multiplication of &lt;code&gt;x&lt;/code&gt; by the inverse of &lt;code&gt;y&lt;/code&gt; on the right. Gives floating-point results for integer arguments.</source>
          <target state="translated">右除算演算子：右の &lt;code&gt;y&lt;/code&gt; の逆数による &lt;code&gt;x&lt;/code&gt; の乗算。整数の引数に対して浮動小数点の結果を返します。</target>
        </trans-unit>
        <trans-unit id="f16a76946a2f1a5c89d96236df6e32a4cc7e1570" translate="yes" xml:space="preserve">
          <source>Right-Pointing Magnifying Glass</source>
          <target state="translated">右向き拡大鏡</target>
        </trans-unit>
        <trans-unit id="2b36bee47480e4b4cd3252c18a979fcf72fa3d75" translate="yes" xml:space="preserve">
          <source>Right-rotate matrix &lt;code&gt;A&lt;/code&gt; 90 degrees clockwise an integer &lt;code&gt;k&lt;/code&gt; number of times. If &lt;code&gt;k&lt;/code&gt; is a multiple of four (including zero), this is equivalent to a &lt;code&gt;copy&lt;/code&gt;.</source>
          <target state="translated">右回転行列 &lt;code&gt;A&lt;/code&gt; を時計回りに90度整数 &lt;code&gt;k&lt;/code&gt; 回回転させます。場合 &lt;code&gt;k&lt;/code&gt; は（ゼロを含む）4の倍数であり、これは、と等価である &lt;code&gt;copy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f61dffc59a3ea03f58667f73c83d64b0c62c93c" translate="yes" xml:space="preserve">
          <source>Right&lt;a href=&quot;#footnote-1&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">Right&lt;a href=&quot;#footnote-1&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9679d52665870b7a0954b45cac6191bdf922126f" translate="yes" xml:space="preserve">
          <source>Righthand Interior Product</source>
          <target state="translated">右手のインテリア製品</target>
        </trans-unit>
        <trans-unit id="d72a5065d1df04d57564768d4b001c8bdc894eb7" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow / Right Arrow</source>
          <target state="translated">右矢印/右矢印</target>
        </trans-unit>
        <trans-unit id="a6fcc795f35d2614f9ca3e3a7e223c4961dffb58" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow Above Reverse Almost Equal To</source>
          <target state="translated">右矢印の上のリバースとほぼ同じ</target>
        </trans-unit>
        <trans-unit id="292b1f701fb0aa3cb9f589a4cf82c3d80cd06400" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow Above Reverse Tilde Operator</source>
          <target state="translated">逆ティルデ演算子の上に右向き矢印</target>
        </trans-unit>
        <trans-unit id="1f535e2b71418ca109ab0d1066a12f426e3fc7d1" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow Above Short Leftwards Arrow</source>
          <target state="translated">右向き矢印 上記ショート 左向き矢印</target>
        </trans-unit>
        <trans-unit id="35fa6fe0c92e066e008c49f3a59311e8656afd25" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow From Bar / Right Arrow From Bar</source>
          <target state="translated">バーから右矢印/バーから右矢印</target>
        </trans-unit>
        <trans-unit id="a1e11e00b0b90ef8b26a9fdb7d26ca08a0a33e33" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow From Bar To Black Diamond</source>
          <target state="translated">バーからブラックダイヤモンドへの右向き矢印</target>
        </trans-unit>
        <trans-unit id="cf5e8117c49bd14073dd501a7b41786046aa5439" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow Over Leftwards Arrow / Right Arrow Over Left Arrow</source>
          <target state="translated">左矢印の上に右矢印/左矢印の上に右矢印</target>
        </trans-unit>
        <trans-unit id="544829c907ec92c6dda0147aa5a5d08bb9a246ea" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow Through Greater-Than</source>
          <target state="translated">グレータースルー右向き矢印</target>
        </trans-unit>
        <trans-unit id="ad586ae1371dbe61383af813492b451ec760d6b2" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow Through Superset</source>
          <target state="translated">スーパーセットを介して右向き矢印</target>
        </trans-unit>
        <trans-unit id="ba1a5d37a4ab1467928a3480d42f494acdb97a07" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow Through X</source>
          <target state="translated">Xを通した右向き矢印</target>
        </trans-unit>
        <trans-unit id="ced8079a2d31a8f585e679aa0ac0ced72032782f" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow To Bar / Right Arrow To Bar</source>
          <target state="translated">バーへの右矢印/バーへの右矢印</target>
        </trans-unit>
        <trans-unit id="3f14d3fc12cf35d7143dd8c334c794e394d8b59f" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow To Black Diamond</source>
          <target state="translated">ブラックダイヤモンドへの右向き矢印</target>
        </trans-unit>
        <trans-unit id="832899cba3915edd6958c4d5bd0a8ff33e15b643" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Corner Downwards / Right Arrow With Corner Down</source>
          <target state="translated">角が付いている右方向の矢は下方に/角が付いている右矢印</target>
        </trans-unit>
        <trans-unit id="f4255818e87d919fccfa934a020f6404df139589" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Dotted Stem</source>
          <target state="translated">点線の茎を持つ右向きの矢印</target>
        </trans-unit>
        <trans-unit id="8682949a5f8e0d59d51a777b1abb9fe763460c35" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Double Vertical Stroke</source>
          <target state="translated">ダブル垂直方向のストロークを持つ右方向の矢印</target>
        </trans-unit>
        <trans-unit id="22e446f1ecda1ee3348f0afe4b3d1795a87513e7" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Hook / Right Arrow With Hook</source>
          <target state="translated">フック付き右矢印/フック付き右矢印</target>
        </trans-unit>
        <trans-unit id="67691d526b8b042fef16480b91f902c577920416" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Loop / Right Arrow With Loop</source>
          <target state="translated">ループ付き右矢印/ループ付き右矢印</target>
        </trans-unit>
        <trans-unit id="86c27810ec963e14a33021c1430a5f828c7ef0d9" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Plus Below</source>
          <target state="translated">プラスの下にある右矢印</target>
        </trans-unit>
        <trans-unit id="17fa8ab8ed4e3c21c0ddf4929d065fb5d74831fe" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Stroke / Right Arrow With Stroke</source>
          <target state="translated">ストローク付き右矢印/ストローク付き右矢印</target>
        </trans-unit>
        <trans-unit id="6ed2c7b240c5e6b420b6c821298981253cfb1155" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Tail / Right Arrow With Tail</source>
          <target state="translated">テール付き右矢印/テール付き右矢印</target>
        </trans-unit>
        <trans-unit id="cdab876189f8f47ff37a050725f8924be0e1a3f6" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Tail With Double Vertical Stroke</source>
          <target state="translated">テールと二重の垂直ストロークを持つ右向きの矢印</target>
        </trans-unit>
        <trans-unit id="ce95152b937732660c35c19f9ae29cdb60b1389a" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Tail With Vertical Stroke</source>
          <target state="translated">テールと垂直ストロークを持つ右向き矢印</target>
        </trans-unit>
        <trans-unit id="3da2bd3d2cb5e9760ddcfcc247a4b75891b2b873" translate="yes" xml:space="preserve">
          <source>Rightwards Arrow With Vertical Stroke</source>
          <target state="translated">垂直方向のストロークを持つ右方向の矢印</target>
        </trans-unit>
        <trans-unit id="301fe453910c76aeb4d3b8ac73e6c057b6459ea0" translate="yes" xml:space="preserve">
          <source>Rightwards Dashed Arrow / Right Dashed Arrow</source>
          <target state="translated">右方向破線矢印/右方向破線矢印</target>
        </trans-unit>
        <trans-unit id="a181e06ed3d937975cf54182cde2d06a19a0a326" translate="yes" xml:space="preserve">
          <source>Rightwards Double Arrow / Right Double Arrow</source>
          <target state="translated">右方向二重矢印/右方向二重矢印</target>
        </trans-unit>
        <trans-unit id="ad4796a5aa42e495e424703b202972ac779147e7" translate="yes" xml:space="preserve">
          <source>Rightwards Double Arrow From Bar</source>
          <target state="translated">バーから右方向に二重矢印</target>
        </trans-unit>
        <trans-unit id="de4ab9b924b0022f4ece1035ff8e7eee104e0ea4" translate="yes" xml:space="preserve">
          <source>Rightwards Double Arrow With Stroke / Right Double Arrow With Stroke</source>
          <target state="translated">ストロークとストローク/右ダブルアローと右方向の二重矢印</target>
        </trans-unit>
        <trans-unit id="1928e5d629c3d16e7f18e8ced6c2d2bc9e299d35" translate="yes" xml:space="preserve">
          <source>Rightwards Double Arrow With Vertical Stroke</source>
          <target state="translated">垂直方向のストロークを持つ右方向の二重矢印</target>
        </trans-unit>
        <trans-unit id="09c0938150d3a0e33127756124f9c912f95393be" translate="yes" xml:space="preserve">
          <source>Rightwards Double Dash Arrow</source>
          <target state="translated">右向きダブルダッシュ矢印</target>
        </trans-unit>
        <trans-unit id="a9ed6a7eaf6bd5603adb529c08dd9067dd7bfc2f" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon Over Leftwards Harpoon / Right Harpoon Over Left Harpoon</source>
          <target state="translated">右ハープーンオーバー左ハープーン/右ハープーンオーバー左ハープーン</target>
        </trans-unit>
        <trans-unit id="75df3264c5931906eed6918462d3edec644c4cc1" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Down Above Leftwards Harpoon With Barb Down</source>
          <target state="translated">上の下のバーブを持つ右方向の銛 左方向の銛 下のバーブを持つ左方向の銛</target>
        </trans-unit>
        <trans-unit id="2d99f5030f529dfaa2fd218a7935dab0476fea05" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Down Below Long Dash</source>
          <target state="translated">ロングダッシュの下にバーブを下げた右向きの銛</target>
        </trans-unit>
        <trans-unit id="dae4564fdbeedeb8933fd578d34a9649932931c6" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Down From Bar</source>
          <target state="translated">バーブをバーから下にした右向きの銛</target>
        </trans-unit>
        <trans-unit id="d4f8611a67f782394afa7a7204c12ff8253e8c8b" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Down To Bar</source>
          <target state="translated">右向きハープーン ウィズ バーブ ダウン トゥ バー</target>
        </trans-unit>
        <trans-unit id="6db2f4cec0ad023bc22ecb7794974ac3009a638e" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Downwards / Right Harpoon With Barb Down</source>
          <target state="translated">右向きハープーンとバーブ下向き/右向きハープーンとバーブ下向き</target>
        </trans-unit>
        <trans-unit id="0b51f722dfce8516de36dcfec80f8ffc5b4cc371" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up Above Leftwards Harpoon With Barb Up</source>
          <target state="translated">上にバーブを持つ右向きの銛 上にバーブを持つ左向きの銛</target>
        </trans-unit>
        <trans-unit id="ba431701d8a6e27291777916f15b8f77ab91f55f" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up Above Long Dash</source>
          <target state="translated">ロングダッシュの上にバーブを上げた右向きの銛</target>
        </trans-unit>
        <trans-unit id="5d6ce9f461d2f951f89337147843b15cfe50c6e7" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up Above Rightwards Harpoon With Barb Down</source>
          <target state="translated">上のバーブを持つ右方向の銛 上のバーブを持つ右方向の銛 下のバーブを持つ右方向の銛</target>
        </trans-unit>
        <trans-unit id="c45513314496daea73d719f5c3963f9c532ceba5" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up From Bar</source>
          <target state="translated">バーブからのバーブアップで右向きの銛</target>
        </trans-unit>
        <trans-unit id="a66bfebb113e097a9c49d09031c2b3acb9c7085d" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Up To Bar</source>
          <target state="translated">右向きの銛とバーブでバーまで</target>
        </trans-unit>
        <trans-unit id="04254b05f1f060955dda6698031e697ac372e0d2" translate="yes" xml:space="preserve">
          <source>Rightwards Harpoon With Barb Upwards / Right Harpoon With Barb Up</source>
          <target state="translated">上向きバーブ付き右銛/上向きバーブ付き右銛</target>
        </trans-unit>
        <trans-unit id="843a20471b077f2ef514a43897c0128f2a3f6410" translate="yes" xml:space="preserve">
          <source>Rightwards Open-Headed Arrow</source>
          <target state="translated">右開き矢印</target>
        </trans-unit>
        <trans-unit id="b064062cfd79b6ded44126ee26943f26d0417f46" translate="yes" xml:space="preserve">
          <source>Rightwards Paired Arrows / Right Paired Arrows</source>
          <target state="translated">右向きペアの矢/右向きペアの矢</target>
        </trans-unit>
        <trans-unit id="acf92aac94ba36ca648ddc9a256aff667197b54f" translate="yes" xml:space="preserve">
          <source>Rightwards Quadruple Arrow</source>
          <target state="translated">右向き四重矢印</target>
        </trans-unit>
        <trans-unit id="d87d0e8164a3a4dfded656a0c357781059024b9e" translate="yes" xml:space="preserve">
          <source>Rightwards Squiggle Arrow / Right Squiggle Arrow</source>
          <target state="translated">右向きスクイグルアロー/右スクイグルアロー</target>
        </trans-unit>
        <trans-unit id="470367d73ca3663400f9cb6a52c762a4a6fe5e87" translate="yes" xml:space="preserve">
          <source>Rightwards Triple Arrow / Right Triple Arrow</source>
          <target state="translated">右向きトリプルアロー/右向きトリプルアロー</target>
        </trans-unit>
        <trans-unit id="279dd4654466e0f218185af34ebc1583f8324761" translate="yes" xml:space="preserve">
          <source>Rightwards Triple Dash Arrow</source>
          <target state="translated">右向きトリプルダッシュアロー</target>
        </trans-unit>
        <trans-unit id="0785b8c12a4de05b0fadb51c335ce582b5309224" translate="yes" xml:space="preserve">
          <source>Rightwards Two Headed Arrow / Right Two Headed Arrow</source>
          <target state="translated">右向き二頭立て矢印/右向き二頭立て矢印</target>
        </trans-unit>
        <trans-unit id="3d51c9695706ee23d584f810f90267d8caa104be" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow From Bar</source>
          <target state="translated">バーから右方向の両頭矢印</target>
        </trans-unit>
        <trans-unit id="c497c5b820a9c9619055a9aebc23e8696d63f237" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Double Vertical Stroke</source>
          <target state="translated">二重の垂直ストロークを持つ右方向の双頭の矢</target>
        </trans-unit>
        <trans-unit id="1029fd16cafe3d978872faf099961bd949804b1a" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Tail</source>
          <target state="translated">尾付き右向き双頭矢</target>
        </trans-unit>
        <trans-unit id="a7da1db773e4d482a1f010437f7bd2cdd72ce30a" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Tail With Double Vertical Stroke</source>
          <target state="translated">テールと二重の垂直ストロークを持つ右向きの双頭の矢</target>
        </trans-unit>
        <trans-unit id="f4d1eccfd2f971c3bb730c0368343f894f305fdb" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Tail With Vertical Stroke</source>
          <target state="translated">垂直ストロークとテールと右方向の双頭の矢</target>
        </trans-unit>
        <trans-unit id="31449fb707efa49945de17df30dc4de7330b2a84" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Arrow With Vertical Stroke</source>
          <target state="translated">垂直方向のストロークを持つ右方向の双頭の矢印</target>
        </trans-unit>
        <trans-unit id="fa38080e0282683d391f6c3199d6264c767b7629" translate="yes" xml:space="preserve">
          <source>Rightwards Two-Headed Triple Dash Arrow</source>
          <target state="translated">右向き双頭三連ダッシュアロー</target>
        </trans-unit>
        <trans-unit id="15d09bc27e5ed6869c20f03706c8876ca5ec8a1c" translate="yes" xml:space="preserve">
          <source>Rightwards Wave Arrow / Right Wave Arrow</source>
          <target state="translated">右方向の波動矢印/右方向の波動矢印</target>
        </trans-unit>
        <trans-unit id="182bdee55e0d7c0389500718b91bae24ab57bcb7" translate="yes" xml:space="preserve">
          <source>Rightwards White Arrow / White Right Arrow</source>
          <target state="translated">右向き白矢印/白右矢印</target>
        </trans-unit>
        <trans-unit id="96ddaccf581f483cbbf4d46e00691e51a167fc55" translate="yes" xml:space="preserve">
          <source>Ring</source>
          <target state="translated">Ring</target>
        </trans-unit>
        <trans-unit id="2d1c92041c181eeb844c0d4e96d93e11c7bb8523" translate="yes" xml:space="preserve">
          <source>Ring Equal To</source>
          <target state="translated">リング イコール トゥー</target>
        </trans-unit>
        <trans-unit id="67717ba5a31c3a1f64e0f143b9a5235d3a690d1b" translate="yes" xml:space="preserve">
          <source>Ring In Equal To</source>
          <target state="translated">リング・イン・イコール・トゥー</target>
        </trans-unit>
        <trans-unit id="9c238e94bdb612e16c030b4945e29b3d065265a4" translate="yes" xml:space="preserve">
          <source>Ring Operator</source>
          <target state="translated">リングオペレータ</target>
        </trans-unit>
        <trans-unit id="ee4f41ef9745b375075cf992e8f24940c54fcca6" translate="yes" xml:space="preserve">
          <source>Rising Diagonal Crossing Falling Diagonal</source>
          <target state="translated">ライジングダイアゴナルクロッシング フォールディングダイアゴナル</target>
        </trans-unit>
        <trans-unit id="7484bc1d387b463f00c398af682e635c032fd5cc" translate="yes" xml:space="preserve">
          <source>Rising Diagonal Crossing South East Arrow</source>
          <target state="translated">ライジングダイアゴナルクロッシングサウスイーストアロー</target>
        </trans-unit>
        <trans-unit id="af2a305fefcf6c7e976e5833a5a3644ac4e76e4f" translate="yes" xml:space="preserve">
          <source>Roasted Sweet Potato</source>
          <target state="translated">サツマイモのロースト</target>
        </trans-unit>
        <trans-unit id="186cd74009911bf433778c1fafff6ce90dd47b69" translate="yes" xml:space="preserve">
          <source>Rocket</source>
          <target state="translated">Rocket</target>
        </trans-unit>
        <trans-unit id="da63574fe23c87c62405c97a966e8ba06b040460" translate="yes" xml:space="preserve">
          <source>Roller Coaster</source>
          <target state="translated">ローラーコースター</target>
        </trans-unit>
        <trans-unit id="8fe188f9ee5b7784aebae57ac346a119941036f0" translate="yes" xml:space="preserve">
          <source>Rooster</source>
          <target state="translated">Rooster</target>
        </trans-unit>
        <trans-unit id="51ad0eae3f66ecd3c72bfac9373650513d6f6603" translate="yes" xml:space="preserve">
          <source>Rose</source>
          <target state="translated">Rose</target>
        </trans-unit>
        <trans-unit id="19c66eab822c804bb4fed13ba638206347060ca7" translate="yes" xml:space="preserve">
          <source>Rotate matrix &lt;code&gt;A&lt;/code&gt; 180 degrees an integer &lt;code&gt;k&lt;/code&gt; number of times. If &lt;code&gt;k&lt;/code&gt; is even, this is equivalent to a &lt;code&gt;copy&lt;/code&gt;.</source>
          <target state="translated">行列 &lt;code&gt;A&lt;/code&gt; を整数 &lt;code&gt;k&lt;/code&gt; 回180度回転します。 &lt;code&gt;k&lt;/code&gt; が偶数の場合、これは &lt;code&gt;copy&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="6df04166a9ce877c0e306030444bd5ca0e4aaa8a" translate="yes" xml:space="preserve">
          <source>Rotate matrix &lt;code&gt;A&lt;/code&gt; 180 degrees.</source>
          <target state="translated">行列 &lt;code&gt;A&lt;/code&gt; を 180度回転します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
