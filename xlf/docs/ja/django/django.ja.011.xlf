<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="19494074e0ce6b931ea15036d66465f2093b1be8" translate="yes" xml:space="preserve">
          <source>Now, open up &lt;code&gt;mysite/settings.py&lt;/code&gt;. It&amp;rsquo;s a normal Python module with module-level variables representing Django settings.</source>
          <target state="translated">次に、 &lt;code&gt;mysite/settings.py&lt;/code&gt; を開きます。これは、Djangoの設定を表すモジュールレベルの変数を持つ通常のPythonモジュールです。</target>
        </trans-unit>
        <trans-unit id="98eda674a05d556734adf8bf7b9aad9a8c246679" translate="yes" xml:space="preserve">
          <source>Now, our &lt;code&gt;my_callback&lt;/code&gt; function will be called each time a request finishes.</source>
          <target state="translated">これで、 &lt;code&gt;my_callback&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="23d68917d434ad1e2573241b966e9bc0d51a64c4" translate="yes" xml:space="preserve">
          <source>Now, run &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; again to create those model tables in your database:</source>
          <target state="translated">次に、&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; を&lt;/a&gt;再度実行して、データベースにこれらのモデルテーブルを作成します。</target>
        </trans-unit>
        <trans-unit id="f6a08d106d707a8e05cb59e3d025bf0cc3bf4b7b" translate="yes" xml:space="preserve">
          <source>Now, the queryset &lt;code&gt;Author.objects.filter(name__upper=&quot;doe&quot;)&lt;/code&gt; will generate a case insensitive query like this:</source>
          <target state="translated">これで、 &lt;code&gt;Author.objects.filter(name__upper=&quot;doe&quot;)&lt;/code&gt; は、次のような大文字と小文字を区別しないクエリを生成します。</target>
        </trans-unit>
        <trans-unit id="019b413f09c92b059447ea74193178d9efd7b8c3" translate="yes" xml:space="preserve">
          <source>Now, try logging in with the superuser account you created in the previous step. You should see the Django admin index page:</source>
          <target state="translated">さて、前のステップで作成したスーパーユーザーアカウントでログインしてみてください。Django admin インデックスページが表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="32c93024bff623c4289921c3b56bd9587350c8d3" translate="yes" xml:space="preserve">
          <source>Number of Arguments</source>
          <target state="translated">引数数</target>
        </trans-unit>
        <trans-unit id="116820b9b73509743abf48a1acbf4dddd83206b7" translate="yes" xml:space="preserve">
          <source>Number of days in the given month.</source>
          <target state="translated">指定された月の日数。</target>
        </trans-unit>
        <trans-unit id="b04cb777db62302a02b9d216b8670b547ad281d0" translate="yes" xml:space="preserve">
          <source>Number of digits grouped together on the integer part of a number.</source>
          <target state="translated">数字の整数部でグループ化された桁数。</target>
        </trans-unit>
        <trans-unit id="95f9d371df5b0ffd2cc6176a1143927d2193cd4f" translate="yes" xml:space="preserve">
          <source>Numeric index lookup</source>
          <target state="translated">数値インデックス検索</target>
        </trans-unit>
        <trans-unit id="fb91068c51189c866a8e510b38ba4dfebf5d32bc" translate="yes" xml:space="preserve">
          <source>ODBC</source>
          <target state="translated">ODBC</target>
        </trans-unit>
        <trans-unit id="662cf8bb9e3967038266eb1080ea6e4e8ea74f98" translate="yes" xml:space="preserve">
          <source>OGC Well Known Text (WKT) (a string)</source>
          <target state="translated">OGC よく知られたテキスト(WKT)(文字列</target>
        </trans-unit>
        <trans-unit id="290c05886911d59cc8d674f70d003a43dc32e88b" translate="yes" xml:space="preserve">
          <source>OGR Geometries</source>
          <target state="translated">OGR ジオメトリ</target>
        </trans-unit>
        <trans-unit id="5c43e7d2987cbaac40255a43821f767dd0fadb67" translate="yes" xml:space="preserve">
          <source>OGR Inspection</source>
          <target state="translated">OGR検査</target>
        </trans-unit>
        <trans-unit id="a58dcb8d2f4fd78a7f09ddeec7fda1d4d46d2e33" translate="yes" xml:space="preserve">
          <source>OK, we have our Question admin page, but a &lt;code&gt;Question&lt;/code&gt; has multiple &lt;code&gt;Choice&lt;/code&gt;s, and the admin page doesn&amp;rsquo;t display choices.</source>
          <target state="translated">OK、質問管理ページがありますが、 &lt;code&gt;Question&lt;/code&gt; は複数の &lt;code&gt;Choice&lt;/code&gt; があり、管理ページには選択肢が表示されません。</target>
        </trans-unit>
        <trans-unit id="1cca936963e1216accc3c85fd19f87c15dacffe3" translate="yes" xml:space="preserve">
          <source>OR (&lt;code&gt;|&lt;/code&gt;)</source>
          <target state="translated">または（ &lt;code&gt;|&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8399256020378bed8c3d8bb2e9c6938a2d24c39c" translate="yes" xml:space="preserve">
          <source>OSGeo4W</source>
          <target state="translated">OSGeo4W</target>
        </trans-unit>
        <trans-unit id="60967688a30a09eb09743791c704681612911e27" translate="yes" xml:space="preserve">
          <source>Object identity. Tests if two values are the same object. Example:</source>
          <target state="translated">オブジェクトの同一性。2つの値が同じオブジェクトであるかどうかをテストします。例。</target>
        </trans-unit>
        <trans-unit id="1138c91041e87452fb65f50c02a6263c018cceb2" translate="yes" xml:space="preserve">
          <source>Object oriented techniques such as mixins (multiple inheritance) can be used to factor code into reusable components.</source>
          <target state="translated">ミキシン(複数継承)のようなオブジェクト指向技術は、コードを再利用可能なコンポーネントに分解するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="3c3732315e88d1732eac3020ab7ae166984c473a" translate="yes" xml:space="preserve">
          <source>Object-level permissions</source>
          <target state="translated">オブジェクトレベルのパーミッション</target>
        </trans-unit>
        <trans-unit id="30cbdb8ef956e08ea0a8a7249b15ecf177cfcdce" translate="yes" xml:space="preserve">
          <source>Objects of protected types are preserved as-is when passed to &lt;code&gt;force_str(strings_only=True)&lt;/code&gt;.</source>
          <target state="translated">保護されたタイプのオブジェクトは、 &lt;code&gt;force_str(strings_only=True)&lt;/code&gt; に渡されたときにそのまま保持されます。</target>
        </trans-unit>
        <trans-unit id="89bdb07bfaaf9bcd97ef26d457c9af59af02d739" translate="yes" xml:space="preserve">
          <source>Obtaining an instance of an email backend</source>
          <target state="translated">メールバックエンドのインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="0ee2fe4c89c33b784169dc3bdcf688393360399b" translate="yes" xml:space="preserve">
          <source>Obtaining sufficient privileges</source>
          <target state="translated">十分な特典の獲得</target>
        </trans-unit>
        <trans-unit id="2c1bf815eac71da64c2550da0f9bbeb63ce8fbb8" translate="yes" xml:space="preserve">
          <source>Occasionally you may want to turn off this feature for other reasons, and tell the template system to leave a variable uncalled no matter what. To do so, set a &lt;code&gt;do_not_call_in_templates&lt;/code&gt; attribute on the callable with the value &lt;code&gt;True&lt;/code&gt;. The template system then will act as if your variable is not callable (allowing you to access attributes of the callable, for example).</source>
          <target state="translated">場合によっては、他の理由でこの機能をオフにし、テンプレートシステムに変数を呼び出さないでおくように指示することもできます。これを行うには、callableに &lt;code&gt;do_not_call_in_templates&lt;/code&gt; 属性を値 &lt;code&gt;True&lt;/code&gt; で設定します。その後、テンプレートシステムは、変数が呼び出し可能ではないかのように動作します（たとえば、呼び出し可能の属性にアクセスできます）。</target>
        </trans-unit>
        <trans-unit id="dc14009bad7130e19f5888d5db446a5a88ed6bba" translate="yes" xml:space="preserve">
          <source>Of course the &lt;code&gt;{% static %}&lt;/code&gt; template tag is not available for use in static files like your stylesheet which aren&amp;rsquo;t generated by Django. You should always use &lt;strong&gt;relative paths&lt;/strong&gt; to link your static files between each other, because then you can change &lt;a href=&quot;../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; (used by the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-static&quot;&gt;&lt;code&gt;static&lt;/code&gt;&lt;/a&gt; template tag to generate its URLs) without having to modify a bunch of paths in your static files as well.</source>
          <target state="translated">もちろん、 &lt;code&gt;{% static %}&lt;/code&gt; テンプレートタグは、Djangoによって生成されないスタイルシートなどの静的ファイルでは使用できません。静的ファイルを相互にリンクするには、常に&lt;strong&gt;相対パス&lt;/strong&gt;を使用する必要があります。静的ファイル内の&lt;a href=&quot;../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;のパスを変更することなく、STATIC_URL（&lt;a href=&quot;../ref/templates/builtins#std:templatetag-static&quot;&gt; &lt;code&gt;static&lt;/code&gt; &lt;/a&gt;テンプレートタグがそのURLを生成するために使用）を変更できるためです。</target>
        </trans-unit>
        <trans-unit id="1bfb2ce81e6431b7c29d4d51f74af68b25c65c1b" translate="yes" xml:space="preserve">
          <source>Of course, as with all deployment tasks, the devil&amp;rsquo;s in the details. Every production setup will be a bit different, so you&amp;rsquo;ll need to adapt the basic outline to fit your needs. Below are a few common patterns that might help.</source>
          <target state="translated">もちろん、すべての展開タスクと同様に、詳細は悪魔です。すべてのプロダクション設定は少し異なるため、ニーズに合わせて基本的なアウトラインを調整する必要があります。以下に役立ついくつかの一般的なパターンを示します。</target>
        </trans-unit>
        <trans-unit id="3138d541751c54ebe3947e00d873e0cb999fdf5a" translate="yes" xml:space="preserve">
          <source>Of course, because &lt;code&gt;get_queryset()&lt;/code&gt; returns a &lt;code&gt;QuerySet&lt;/code&gt; object, you can use &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;exclude()&lt;/code&gt; and all the other &lt;code&gt;QuerySet&lt;/code&gt; methods on it. So these statements are all legal:</source>
          <target state="translated">もちろんので、 &lt;code&gt;get_queryset()&lt;/code&gt; を返す &lt;code&gt;QuerySet&lt;/code&gt; オブジェクトを、あなたが使用することができ &lt;code&gt;filter()&lt;/code&gt; （ &lt;code&gt;exclude()&lt;/code&gt; および他のすべての &lt;code&gt;QuerySet&lt;/code&gt; それのメソッド。したがって、これらのステートメントはすべて合法です。</target>
        </trans-unit>
        <trans-unit id="339c185649670de6cadadffe96de30e0ea152c7b" translate="yes" xml:space="preserve">
          <source>Of course, if you don&amp;rsquo;t add the &lt;code&gt;related_query_name&lt;/code&gt;, you can do the same types of lookups manually:</source>
          <target state="translated">もちろん、 &lt;code&gt;related_query_name&lt;/code&gt; を追加しない場合は、同じタイプの検索を手動で行うことができます。</target>
        </trans-unit>
        <trans-unit id="5ace8e5a78b0b07e276c3f79bec3e8c57d8d2cf9" translate="yes" xml:space="preserve">
          <source>Of course, if you don&amp;rsquo;t use the database cache backend, you don&amp;rsquo;t need to worry about providing routing instructions for the database cache model.</source>
          <target state="translated">もちろん、データベースキャッシュバックエンドを使用しない場合は、データベースキャッシュモデルにルーティング命令を提供することについて心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="527c38a6fe862bcf884025c788e8189ecf445b95" translate="yes" xml:space="preserve">
          <source>Of course, it isn&amp;rsquo;t enough to just put logging calls into your code. You also need to configure the loggers, handlers, filters and formatters to ensure that logging output is output in a useful way.</source>
          <target state="translated">もちろん、ロギング呼び出しをコードに入れるだけでは十分ではありません。また、ロガー、ハンドラー、フィルター、フォーマッターを構成して、ログ出力が確実に有効な方法で出力されるようにする必要もあります。</target>
        </trans-unit>
        <trans-unit id="fcc549ed333af5c6dc1f30c1549598ffa992a9e4" translate="yes" xml:space="preserve">
          <source>Of course, it&amp;rsquo;s ugly to hard-code the site IDs like that. This sort of hard-coding is best for hackish fixes that you need done quickly. The cleaner way of accomplishing the same thing is to check the current site&amp;rsquo;s domain:</source>
          <target state="translated">もちろん、そのようなサイトIDをハードコードするのは醜いです。この種のハードコーディングは、迅速に行う必要があるハックな修正に最適です。同じことを実行するよりきれいな方法は、現在のサイトのドメインを確認することです：</target>
        </trans-unit>
        <trans-unit id="30da449e73eca2c680c3454cfd47b5e1c988d5a8" translate="yes" xml:space="preserve">
          <source>Of course, specifying a custom reverse manager also enables you to call its custom methods:</source>
          <target state="translated">もちろん、カスタムリバースマネージャーを指定することで、そのカスタムメソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="3559c4a540af23819f57c71ccbe9f2efbc63b105" translate="yes" xml:space="preserve">
          <source>Of course, the &lt;code&gt;best_pizza&lt;/code&gt; relationship could also be fetched using &lt;code&gt;select_related&lt;/code&gt; to reduce the query count to 2:</source>
          <target state="translated">もちろん、 &lt;code&gt;best_pizza&lt;/code&gt; リレーションシップを &lt;code&gt;select_related&lt;/code&gt; を使用してフェッチして、クエリ数を2に減らすこともできます。</target>
        </trans-unit>
        <trans-unit id="f2e2608c2269e9abaf6c0d87ce7cd4ef673445a8" translate="yes" xml:space="preserve">
          <source>Of course, the price of this flexibility is more work. Until now we haven&amp;rsquo;t had to worry about how to display form errors, because that&amp;rsquo;s taken care of for us. In this example we have had to make sure we take care of any errors for each field and any errors for the form as a whole. Note &lt;code&gt;{{ form.non_field_errors
}}&lt;/code&gt; at the top of the form and the template lookup for errors on each field.</source>
          <target state="translated">もちろん、この柔軟性の代償はより多くの仕事です。これまでは、フォームエラーの表示方法を気にする必要がありませんでした。この例では、各フィールドのエラーとフォーム全体のエラーに注意する必要があります。フォームの上部にある &lt;code&gt;{{ form.non_field_errors }}&lt;/code&gt; と、各フィールドのエラーのテンプレート検索に注意してください。</target>
        </trans-unit>
        <trans-unit id="0b051c52844da773f0bf17768634155ead973ec0" translate="yes" xml:space="preserve">
          <source>Of course, these arguments can be used together.</source>
          <target state="translated">もちろん、これらの引数は一緒に使うことができます。</target>
        </trans-unit>
        <trans-unit id="b45a927f98e4c7ad1501b4da064e9694f24affbf" translate="yes" xml:space="preserve">
          <source>Of course, this example isn&amp;rsquo;t very exciting &amp;ndash; it&amp;rsquo;s exactly the same as running &lt;code&gt;Person.objects.all()&lt;/code&gt;. However, &lt;code&gt;raw()&lt;/code&gt; has a bunch of other options that make it very powerful.</source>
          <target state="translated">もちろん、この例はそれほどエキサイティングではありません &lt;code&gt;Person.objects.all()&lt;/code&gt; を実行するのとまったく同じです。ただし、 &lt;code&gt;raw()&lt;/code&gt; には他にも非常に強力なオプションがたくさんあります。</target>
        </trans-unit>
        <trans-unit id="cdb127b59fbd7b604d617baf8fd8c288a7b18b4d" translate="yes" xml:space="preserve">
          <source>Of course, you can also tell your users to put &lt;code&gt;'rock_n_roll.apps.RockNRollConfig'&lt;/code&gt; in their &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting. You can even provide several different &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; subclasses with different behaviors and allow your users to choose one via their &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">もちろん、&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;設定に &lt;code&gt;'rock_n_roll.apps.RockNRollConfig'&lt;/code&gt; を含めるようにユーザーに指示することもできます。動作が異なる&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;サブクラスをいくつか提供して、ユーザーが&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;設定を介して1つを選択できるようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="f16c3b04076cad0a812a7a10dc4a605fc752bf57" translate="yes" xml:space="preserve">
          <source>Often it is expensive (that is, resource-hungry and slow) to compute a value, so there can be huge benefit in saving the value to a quickly accessible cache, ready for the next time it&amp;rsquo;s required.</source>
          <target state="translated">多くの場合、値の計算にはコストがかかります（つまり、リソースを大量に消費し、処理速度が遅くなります）。そのため、値がすぐにアクセス可能なキャッシュに保存され、次に必要になったときに備えて大きなメリットが得られます。</target>
        </trans-unit>
        <trans-unit id="8b78e944a624797ce2f6db948d2279c2ab3117b8" translate="yes" xml:space="preserve">
          <source>Often you need to present some extra information beyond that provided by the generic view. For example, think of showing a list of all the books on each publisher detail page. The &lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; generic view provides the publisher to the context, but how do we get additional information in that template?</source>
          <target state="translated">多くの場合、一般的なビューで提供される情報を超える追加情報を提示する必要があります。たとえば、各出版社の詳細ページにすべての本のリストを表示するとします。&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;汎用ビューはコンテキストに出版社を提供していますが、どのように我々は、そのテンプレートに追加の情報を得るのですか？</target>
        </trans-unit>
        <trans-unit id="6179c551e66fb1509d096aba5f29780dd1197fb9" translate="yes" xml:space="preserve">
          <source>Often you want the search engine crawlers to index views which are neither object detail pages nor flatpages. The solution is to explicitly list URL names for these views in &lt;code&gt;items&lt;/code&gt; and call &lt;a href=&quot;../urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;location&lt;/code&gt; method of the sitemap. For example:</source>
          <target state="translated">多くの場合、検索エンジンクローラーに、オブジェクトの詳細ページでもフラットページでもないビューのインデックスを作成させます。ソリューションは、これらのビューのために明示的にリストのURL名にある &lt;code&gt;items&lt;/code&gt; とコール&lt;a href=&quot;../urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;内 &lt;code&gt;location&lt;/code&gt; マップの方法。例えば：</target>
        </trans-unit>
        <trans-unit id="f81feb967d1e47b1a7a307eacaa07cfd1652c9e4" translate="yes" xml:space="preserve">
          <source>Often, you will just want to use the parent class to hold information that you don&amp;rsquo;t want to have to type out for each child model. This class isn&amp;rsquo;t going to ever be used in isolation, so &lt;a href=&quot;#abstract-base-classes&quot;&gt;Abstract base classes&lt;/a&gt; are what you&amp;rsquo;re after.</source>
          <target state="translated">多くの場合、親クラスを使用して、子モデルごとに入力する必要のない情報を保持します。このクラスは単独で使用されることはないので、&lt;a href=&quot;#abstract-base-classes&quot;&gt;抽象基本クラス&lt;/a&gt;が目的です。</target>
        </trans-unit>
        <trans-unit id="b05a5f2fb24b871d13e27678513c61dfb1f55427" translate="yes" xml:space="preserve">
          <source>Oh, and one more thing: making humans edit XML is sadistic!</source>
          <target state="translated">ああ、そしてもう一つ、人間にXMLを編集させるのはサディスティックです。</target>
        </trans-unit>
        <trans-unit id="eca5f76268f199f0b3cfebb0d68b71bb23c8d38a" translate="yes" xml:space="preserve">
          <source>Older version of Django will eventually no longer receive security updates. (see &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/release-process/#supported-versions-policy&quot;&gt;Supported versions&lt;/a&gt;).</source>
          <target state="translated">古いバージョンのDjangoは、最終的にセキュリティアップデートを受信しなくなります。（&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/release-process/#supported-versions-policy&quot;&gt;サポートされるバージョンを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c0945ccd1e691623fde3146f823ee60bd1301c4e" translate="yes" xml:space="preserve">
          <source>Older version of Django will eventually no longer receive security updates. (see &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/release-process/#supported-versions-policy&quot;&gt;Supported versions&lt;/a&gt;).</source>
          <target state="translated">Older version of Django will eventually no longer receive security updates. (see &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/release-process/#supported-versions-policy&quot;&gt;Supported versions&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="87b1b047909da2fb1a82bf3394d62da9dc8ee40a" translate="yes" xml:space="preserve">
          <source>Older versions don&amp;rsquo;t display model properties.</source>
          <target state="translated">古いバージョンではモデルのプロパティが表示されません。</target>
        </trans-unit>
        <trans-unit id="1236aef81022c4e6ffb10318683fd9a5227e19ab" translate="yes" xml:space="preserve">
          <source>Older versions of Django require the &lt;code&gt;name&lt;/code&gt; argument for all versions of Python.</source>
          <target state="translated">古いバージョンのDjango では、すべてのバージョンのPythonで &lt;code&gt;name&lt;/code&gt; 引数が必要です。</target>
        </trans-unit>
        <trans-unit id="10ec9d5b7946a13c106294a63c16870358b0e25b" translate="yes" xml:space="preserve">
          <source>Omits the primary key in the serialized data of this object since it can be calculated during deserialization.</source>
          <target state="translated">このオブジェクトのシリアライズされたデータの主キーは、デシリアライズ時に計算される可能性があるため、このオブジェクトのシリアライズされたデータの主キーを省略します。</target>
        </trans-unit>
        <trans-unit id="b9826f39dc51cb2574613e0058661470274d2713" translate="yes" xml:space="preserve">
          <source>On Debian/Ubuntu, you are advised to install the following packages which will install, directly or by dependency, the required geospatial libraries:</source>
          <target state="translated">Debian/Ubuntuでは、以下のパッケージをインストールすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="3fd4a5308445d55b19d8fb010b7fb03ba7766bfa" translate="yes" xml:space="preserve">
          <source>On Debian/Ubuntu, you are advised to install the following packages: postgresql-x.x, postgresql-x.x-postgis, postgresql-server-dev-x.x, python-psycopg2 (x.x matching the PostgreSQL version you want to install). Alternately, you can &lt;a href=&quot;https://postgis.net/docs/postgis_installation.html#install_short_version&quot;&gt;build from source&lt;/a&gt;. Consult the platform-specific instructions if you are on &lt;a href=&quot;index#macos&quot;&gt;macOS&lt;/a&gt; or &lt;a href=&quot;index#windows&quot;&gt;Windows&lt;/a&gt;.</source>
          <target state="translated">Debian / Ubuntuでは、次のパッケージをインストールすることをお勧めします：postgresql-xx、postgresql-xx-postgis、postgresql-server-dev-xx、python-psycopg2（インストールするPostgreSQLバージョンに一致するxx）。または、&lt;a href=&quot;https://postgis.net/docs/postgis_installation.html#install_short_version&quot;&gt;ソースからビルドする&lt;/a&gt;こともできます。&lt;a href=&quot;index#macos&quot;&gt;macOS&lt;/a&gt;または&lt;a href=&quot;index#windows&quot;&gt;Windows&lt;/a&gt;を使用している場合は、プラットフォーム固有の手順を参照してください。</target>
        </trans-unit>
        <trans-unit id="a82dbf3165cbd0a452eb5b7752d0d864094e5ff4" translate="yes" xml:space="preserve">
          <source>On GNU/Linux systems, there is typically a file in &lt;code&gt;/etc/ld.so.conf&lt;/code&gt;, which may include additional paths from files in another directory, such as &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt;. As the root user, add the custom library path (like &lt;code&gt;/usr/local/lib&lt;/code&gt;) on a new line in &lt;code&gt;ld.so.conf&lt;/code&gt;. This is &lt;em&gt;one&lt;/em&gt; example of how to do so:</source>
          <target state="translated">GNU / Linuxシステムでは、通常 &lt;code&gt;/etc/ld.so.conf&lt;/code&gt; にファイルがあり、これには &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt; などの別のディレクトリにあるファイルからの追加パスが含まれる場合があります。rootユーザーとして、 &lt;code&gt;ld.so.conf&lt;/code&gt; の新しい行にカスタムライブラリパス（ &lt;code&gt;/usr/local/lib&lt;/code&gt; など）を追加します。これは、その方法の&lt;em&gt;一&lt;/em&gt;例です。</target>
        </trans-unit>
        <trans-unit id="c469cf17feb53e87d1d7993315a9037108c1435c" translate="yes" xml:space="preserve">
          <source>On Lawrence.com, this email has the subject line &amp;ldquo;Thanks for subscribing to lawrence.com alerts.&amp;rdquo; On LJWorld.com, the email has the subject &amp;ldquo;Thanks for subscribing to LJWorld.com alerts.&amp;rdquo; Same goes for the email&amp;rsquo;s message body.</source>
          <target state="translated">Lawrence.comでは、このメールの件名は「lawrence.comアラートにご登録いただきありがとうございます」です。LJWorld.comでは、メールの件名は「LJWorld.comアラートにご登録いただきありがとうございます」です。メールのメッセージ本文も同様です。</target>
        </trans-unit>
        <trans-unit id="09825e1bf4715078c02662b5c1463d166eb2bd68" translate="yes" xml:space="preserve">
          <source>On Linux platforms, it may be necessary to run the &lt;code&gt;ldconfig&lt;/code&gt; command after installing each library. For example:</source>
          <target state="translated">Linuxプラットフォームでは、各ライブラリをインストールした後に &lt;code&gt;ldconfig&lt;/code&gt; コマンドを実行する必要がある場合があります。例えば：</target>
        </trans-unit>
        <trans-unit id="68c9a7d6a07dfaa9252e84592341dcc10e40abe1" translate="yes" xml:space="preserve">
          <source>On MySQL and MariaDB, setting the &lt;code&gt;ignore_conflicts&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt; turns certain types of errors, other than duplicate key, into warnings. Even with Strict Mode. For example: invalid values or non-nullable violations. See the &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-mode.html#ignore-strict-comparison&quot;&gt;MySQL documentation&lt;/a&gt; and &lt;a href=&quot;https://mariadb.com/kb/en/ignore/&quot;&gt;MariaDB documentation&lt;/a&gt; for more details.</source>
          <target state="translated">On MySQL and MariaDB, setting the &lt;code&gt;ignore_conflicts&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt; turns certain types of errors, other than duplicate key, into warnings. Even with Strict Mode. For example: invalid values or non-nullable violations. See the &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/sql-mode.html#ignore-strict-comparison&quot;&gt;MySQL documentation&lt;/a&gt; and &lt;a href=&quot;https://mariadb.com/kb/en/ignore/&quot;&gt;MariaDB documentation&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="5b7489f228770df5c4f89793fb295c0eb5f80335" translate="yes" xml:space="preserve">
          <source>On MySQL, returns &lt;code&gt;None&lt;/code&gt; for any non-&lt;code&gt;LINESTRING&lt;/code&gt; geometry.</source>
          <target state="translated">MySQLでは、 &lt;code&gt;LINESTRING&lt;/code&gt; 以外のジオメトリに対して &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c479465cf9d6eb8433e919653828b13ecb2fedc6" translate="yes" xml:space="preserve">
          <source>On MySQL, returns &lt;code&gt;None&lt;/code&gt; for single geometries.</source>
          <target state="translated">MySQLでは、単一のジオメトリに対して &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e42d27b72686357ddcf4048a330596ac0bb41f8b" translate="yes" xml:space="preserve">
          <source>On MySQL/MariaDB, you can do this with the &lt;code&gt;mysql&lt;/code&gt; command&amp;rsquo;s &lt;code&gt;-e&lt;/code&gt; flag:</source>
          <target state="translated">On MySQL/MariaDB, you can do this with the &lt;code&gt;mysql&lt;/code&gt; command&amp;rsquo;s &lt;code&gt;-e&lt;/code&gt; flag:</target>
        </trans-unit>
        <trans-unit id="5b810a68b24d6713ef0102f6c0c4096a6482b3c0" translate="yes" xml:space="preserve">
          <source>On Oracle Database, using &lt;code&gt;None&lt;/code&gt; as the lookup value in an &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt;&lt;code&gt;exclude()&lt;/code&gt;&lt;/a&gt; query will return objects that do not have &lt;code&gt;null&lt;/code&gt; as the value at the given path, including objects that do not have the path. On other database backends, the query will return objects that have the path and the value is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">On Oracle Database, using &lt;code&gt;None&lt;/code&gt; as the lookup value in an &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt; &lt;code&gt;exclude()&lt;/code&gt; &lt;/a&gt; query will return objects that do not have &lt;code&gt;null&lt;/code&gt; as the value at the given path, including objects that do not have the path. On other database backends, the query will return objects that have the path and the value is not &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9423ea6ae9f5742f7782982188883a7624b6df11" translate="yes" xml:space="preserve">
          <source>On PostGIS and SpatiaLite, when the coordinates are geodetic (angular), you can specify if the calculation should be based on a simple sphere (less accurate, less resource-intensive) or on a spheroid (more accurate, more resource-intensive) with the &lt;code&gt;spheroid&lt;/code&gt; keyword argument.</source>
          <target state="translated">PostGISとSpatiaLiteでは、座標が測地（角度）である場合、計算を単純な球体（精度が低く、リソース集約型ではない）に基づくか、回転楕円体（精度が高く、リソース集約型）に基づくかを指定できます。 &lt;code&gt;spheroid&lt;/code&gt; キーワード引数。</target>
        </trans-unit>
        <trans-unit id="3dc26522300c3b3567224b251bae8b6aa0820df5" translate="yes" xml:space="preserve">
          <source>On PostgreSQL and SQLite, only use &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;COMMIT&lt;/code&gt; in your SQL in &lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;non-atomic migrations&lt;/a&gt;, to avoid breaking Django&amp;rsquo;s transaction state.</source>
          <target state="translated">On PostgreSQL and SQLite, only use &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;COMMIT&lt;/code&gt; in your SQL in &lt;a href=&quot;../howto/writing-migrations#non-atomic-migrations&quot;&gt;non-atomic migrations&lt;/a&gt;, to avoid breaking Django&amp;rsquo;s transaction state.</target>
        </trans-unit>
        <trans-unit id="e7bc6aa4387e8af5e72d849e5f9186d63d8f8b76" translate="yes" xml:space="preserve">
          <source>On PostgreSQL only, you can pass positional arguments (&lt;code&gt;*fields&lt;/code&gt;) in order to specify the names of fields to which the &lt;code&gt;DISTINCT&lt;/code&gt; should apply. This translates to a &lt;code&gt;SELECT DISTINCT ON&lt;/code&gt; SQL query. Here&amp;rsquo;s the difference. For a normal &lt;code&gt;distinct()&lt;/code&gt; call, the database compares &lt;em&gt;each&lt;/em&gt; field in each row when determining which rows are distinct. For a &lt;code&gt;distinct()&lt;/code&gt; call with specified field names, the database will only compare the specified field names.</source>
          <target state="translated">PostgreSQLでのみ、 &lt;code&gt;DISTINCT&lt;/code&gt; を適用するフィールドの名前を指定するために、位置引数（ &lt;code&gt;*fields&lt;/code&gt; ）を渡すことができます。これは、 &lt;code&gt;SELECT DISTINCT ON&lt;/code&gt; SQLクエリに変換されます。これが違いです。通常の &lt;code&gt;distinct()&lt;/code&gt; 呼び出しの場合、データベースは、どの行が異なるかを判別するときに、各行の&lt;em&gt;各&lt;/em&gt;フィールドを比較します。指定されたフィールド名を使用した &lt;code&gt;distinct()&lt;/code&gt; 呼び出しの場合、データベースは指定されたフィールド名のみを比較します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3ed2b681cc5211a1b79d3ad34cfeacc6f5daf13" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, &lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt; will also need read access to the built-in &lt;code&gt;postgres&lt;/code&gt; database.</source>
          <target state="translated">PostgreSQLでは、&lt;a href=&quot;../../ref/settings#std:setting-USER&quot;&gt; &lt;code&gt;USER&lt;/code&gt; &lt;/a&gt;は組み込みの &lt;code&gt;postgres&lt;/code&gt; データベースへの読み取りアクセスも必要です。</target>
        </trans-unit>
        <trans-unit id="f3f0b404b988634a050f0281b8e24352e741c57e" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, if only one key or index is used, the SQL operator &lt;code&gt;-&amp;gt;&lt;/code&gt; is used. If multiple operators are used then the &lt;code&gt;#&amp;gt;&lt;/code&gt; operator is used.</source>
          <target state="translated">On PostgreSQL, if only one key or index is used, the SQL operator &lt;code&gt;-&amp;gt;&lt;/code&gt; is used. If multiple operators are used then the &lt;code&gt;#&amp;gt;&lt;/code&gt; operator is used.</target>
        </trans-unit>
        <trans-unit id="e720f29b1479551b262a1c817ee9afc76e69cbd5" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, server-side cursors will only be used when the &lt;a href=&quot;../settings#std:setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS&quot;&gt;&lt;code&gt;DISABLE_SERVER_SIDE_CURSORS&lt;/code&gt;&lt;/a&gt; setting is &lt;code&gt;False&lt;/code&gt;. Read &lt;a href=&quot;../databases#transaction-pooling-server-side-cursors&quot;&gt;Transaction pooling and server-side cursors&lt;/a&gt; if you&amp;rsquo;re using a connection pooler configured in transaction pooling mode. When server-side cursors are disabled, the behavior is the same as databases that don&amp;rsquo;t support server-side cursors.</source>
          <target state="translated">PostgreSQLでは、サーバー側カーソルは&lt;a href=&quot;../settings#std:setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS&quot;&gt; &lt;code&gt;DISABLE_SERVER_SIDE_CURSORS&lt;/code&gt; &lt;/a&gt;設定が &lt;code&gt;False&lt;/code&gt; の場合にのみ使用されます。読み取り&lt;a href=&quot;../databases#transaction-pooling-server-side-cursors&quot;&gt;トランザクションプールとサーバー側カーソルを&lt;/a&gt;使用すると、トランザクション・プーリング・モードで構成された接続プーラーを使用している場合。サーバー側カーソルが無効になっている場合の動作は、サーバー側カーソルをサポートしていないデータベースと同じです。</target>
        </trans-unit>
        <trans-unit id="231d27d56a450bb1d7a023aede748b738f5350bc" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, the &lt;code&gt;'spheroid'&lt;/code&gt; option uses &lt;a href=&quot;https://postgis.net/docs/ST_Distance_Spheroid.html&quot;&gt;ST_DistanceSpheroid&lt;/a&gt; instead of &lt;a href=&quot;https://postgis.net/docs/ST_DistanceSphere.html&quot;&gt;ST_DistanceSphere&lt;/a&gt;. The simpler &lt;a href=&quot;https://postgis.net/docs/ST_Distance.html&quot;&gt;ST_Distance&lt;/a&gt; function is used with projected coordinate systems. Rasters are converted to geometries for spheroid based lookups.</source>
          <target state="translated">PostgreSQLでは、 &lt;code&gt;'spheroid'&lt;/code&gt; オプションは&lt;a href=&quot;https://postgis.net/docs/ST_Distance_Spheroid.html&quot;&gt;ST_DistanceSphere&lt;/a&gt;ではなく&lt;a href=&quot;https://postgis.net/docs/ST_DistanceSphere.html&quot;&gt;ST_DistanceSpheroidを&lt;/a&gt;使用します。より単純な&lt;a href=&quot;https://postgis.net/docs/ST_Distance.html&quot;&gt;ST_Distance&lt;/a&gt;関数は、投影座標系で使用されます。ラスターは、回転楕円体ベースのルックアップのためにジオメトリに変換されます。</target>
        </trans-unit>
        <trans-unit id="feadeca3b502e38c5e7a1bb0d3cdda7e166c150a" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, the SQL &lt;code&gt;CURRENT_TIMESTAMP&lt;/code&gt; returns the time that the current transaction started. Therefore for cross-database compatibility, &lt;code&gt;Now()&lt;/code&gt; uses &lt;code&gt;STATEMENT_TIMESTAMP&lt;/code&gt; instead. If you need the transaction timestamp, use &lt;a href=&quot;../contrib/postgres/functions#django.contrib.postgres.functions.TransactionNow&quot;&gt;&lt;code&gt;django.contrib.postgres.functions.TransactionNow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">PostgreSQLでは、SQL &lt;code&gt;CURRENT_TIMESTAMP&lt;/code&gt; は現在のトランザクションが開始した時刻を返します。したがって、データベース間の互換性のために、 &lt;code&gt;Now()&lt;/code&gt; は代わりに &lt;code&gt;STATEMENT_TIMESTAMP&lt;/code&gt; を使用します。トランザクションのタイムスタンプが必要な場合は、&lt;a href=&quot;../contrib/postgres/functions#django.contrib.postgres.functions.TransactionNow&quot;&gt; &lt;code&gt;django.contrib.postgres.functions.TransactionNow&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="171a834e14bec4fef794bc5172bffac81b861f95" translate="yes" xml:space="preserve">
          <source>On PostgreSQL, the SQL looks like:</source>
          <target state="translated">PostgreSQL上では、SQLは次のようになります。</target>
        </trans-unit>
        <trans-unit id="6d1a678530b7cbd46006434001f4f57bbb5211cd" translate="yes" xml:space="preserve">
          <source>On Unix environments (where &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.tzset&quot;&gt;&lt;code&gt;time.tzset()&lt;/code&gt;&lt;/a&gt; is implemented), Django sets the &lt;code&gt;os.environ['TZ']&lt;/code&gt; variable to the time zone you specify in the &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; setting. Thus, all your views and models will automatically operate in this time zone. However, Django won&amp;rsquo;t set the &lt;code&gt;TZ&lt;/code&gt; environment variable if you&amp;rsquo;re using the manual configuration option as described in &lt;a href=&quot;../topics/settings#settings-without-django-settings-module&quot;&gt;manually configuring settings&lt;/a&gt;. If Django doesn&amp;rsquo;t set the &lt;code&gt;TZ&lt;/code&gt; environment variable, it&amp;rsquo;s up to you to ensure your processes are running in the correct environment.</source>
          <target state="translated">Unix環境（&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.tzset&quot;&gt; &lt;code&gt;time.tzset()&lt;/code&gt; &lt;/a&gt;が実装されている）では、Djangoは &lt;code&gt;os.environ['TZ']&lt;/code&gt; 変数を&lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;設定で指定したタイムゾーンに設定します。したがって、すべてのビューとモデルはこのタイムゾーンで自動的に動作します。ただし、&lt;a href=&quot;../topics/settings#settings-without-django-settings-module&quot;&gt;手動設定の&lt;/a&gt;説明にある手動設定オプションを使用している場合、Djangoは &lt;code&gt;TZ&lt;/code&gt; 環境変数を設定しません。Djangoが &lt;code&gt;TZ&lt;/code&gt; 環境変数を設定しない場合、プロセスが正しい環境で実行されていることを確認するのはあなた次第です。</target>
        </trans-unit>
        <trans-unit id="9d87034675bfeb09dc1e05ad5ad92358405b48c9" translate="yes" xml:space="preserve">
          <source>On Windows platforms you can use the pgAdmin III utility to add superuser privileges to your database user.</source>
          <target state="translated">Windowsプラットフォームでは、pgAdmin IIIユーティリティを使用して、データベースユーザにスーパーユーザ権限を追加することができます。</target>
        </trans-unit>
        <trans-unit id="54cfe6ffa00bf56c62bc2f9682a4ade18bfc9dbc" translate="yes" xml:space="preserve">
          <source>On Windows, the REPL is output due to implementation limits of &lt;a href=&quot;https://docs.python.org/3/library/select.html#select.select&quot;&gt;&lt;code&gt;select.select()&lt;/code&gt;&lt;/a&gt; on that platform.</source>
          <target state="translated">Windowsでは、そのプラットフォームでの&lt;a href=&quot;https://docs.python.org/3/library/select.html#select.select&quot;&gt; &lt;code&gt;select.select()&lt;/code&gt; の&lt;/a&gt;実装制限により、REPLが出力されます。</target>
        </trans-unit>
        <trans-unit id="98e35620cab04b96e3ed65990cf570def39684a2" translate="yes" xml:space="preserve">
          <source>On a real Web page, you probably don&amp;rsquo;t want every widget to look the same. You might want a larger input element for the comment, and you might want the &amp;lsquo;name&amp;rsquo; widget to have some special CSS class. It is also possible to specify the &amp;lsquo;type&amp;rsquo; attribute to take advantage of the new HTML5 input types. To do this, you use the &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;Widget.attrs&lt;/code&gt;&lt;/a&gt; argument when creating the widget:</source>
          <target state="translated">実際のWebページでは、すべてのウィジェットを同じように見せたくないでしょう。コメントの入力要素を大きくしたり、「名前」ウィジェットに特別なCSSクラスを持たせたりすることができます。'type'属性を指定して、新しいHTML5入力タイプを利用することもできます。これを行うには、ウィジェットを作成するときに&lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt; &lt;code&gt;Widget.attrs&lt;/code&gt; &lt;/a&gt;引数を使用します。</target>
        </trans-unit>
        <trans-unit id="e383a68178353fa8decc814cdf26f0a58017ac20" translate="yes" xml:space="preserve">
          <source>On a similar note, you might want to customize the look and feel of the Django admin index page.</source>
          <target state="translated">同様の注意点として、Django admin インデックスページのルックアンドフィールをカスタマイズしたいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="e3513645906e49f967649384ce2aae2d3029c45e" translate="yes" xml:space="preserve">
          <source>On backends that support distance calculation on geodetic coordinates, the proper backend function is automatically chosen depending on the SRID value of the geometries (e.g. &lt;a href=&quot;https://postgis.net/docs/ST_DistanceSphere.html&quot;&gt;ST_DistanceSphere&lt;/a&gt; on PostGIS).</source>
          <target state="translated">測地座標の距離計算をサポートするバックエンドでは、ジオメトリのSRID値（PostGISの&lt;a href=&quot;https://postgis.net/docs/ST_DistanceSphere.html&quot;&gt;ST_DistanceSphereなど&lt;/a&gt;）に応じて適切なバックエンド関数が自動的に選択されます。</target>
        </trans-unit>
        <trans-unit id="5b43d185bfcf98e3e0ff7e26ab187ce7f129ec1c" translate="yes" xml:space="preserve">
          <source>On databases that do support DDL transactions (SQLite and PostgreSQL), &lt;code&gt;RunPython&lt;/code&gt; operations do not have any transactions automatically added besides the transactions created for each migration. Thus, on PostgreSQL, for example, you should avoid combining schema changes and &lt;code&gt;RunPython&lt;/code&gt; operations in the same migration or you may hit errors like &lt;code&gt;OperationalError: cannot
ALTER TABLE &quot;mytable&quot; because it has pending trigger events&lt;/code&gt;.</source>
          <target state="translated">DDLトランザクションをサポートするデータベース（SQLiteおよびPostgreSQL）では、 &lt;code&gt;RunPython&lt;/code&gt; 操作には、各移行用に作成されたトランザクション以外に自動的に追加されるトランザクションはありません。したがって、PostgreSQLでは、たとえば、同じ移行でスキーマの変更と &lt;code&gt;RunPython&lt;/code&gt; 操作を組み合わせないようにする必要があり &lt;code&gt;OperationalError: cannot ALTER TABLE &quot;mytable&quot; because it has pending trigger events&lt;/code&gt; ようなエラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="463a022c88308a9d32d13a4ba75565f6f8f97989" translate="yes" xml:space="preserve">
          <source>On databases that support DDL transactions (SQLite and PostgreSQL), all migration operations will run inside a single transaction by default. In contrast, if a database doesn&amp;rsquo;t support DDL transactions (e.g. MySQL, Oracle) then all operations will run without a transaction.</source>
          <target state="translated">On databases that support DDL transactions (SQLite and PostgreSQL), all migration operations will run inside a single transaction by default. In contrast, if a database doesn&amp;rsquo;t support DDL transactions (e.g. MySQL, Oracle) then all operations will run without a transaction.</target>
        </trans-unit>
        <trans-unit id="11d4ca34e4865526ed3bab65d895985c1d8c7e06" translate="yes" xml:space="preserve">
          <source>On databases that support DDL transactions (SQLite and PostgreSQL), migrations will run inside a transaction by default. For use cases such as performing data migrations on large tables, you may want to prevent a migration from running in a transaction by setting the &lt;code&gt;atomic&lt;/code&gt; attribute to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">DDLトランザクションをサポートするデータベース（SQLiteおよびPostgreSQL）では、移行はデフォルトでトランザクション内で実行されます。大きなテーブルでデータ移行を実行する場合などの使用例では、 &lt;code&gt;atomic&lt;/code&gt; 属性を &lt;code&gt;False&lt;/code&gt; に設定して、移行がトランザクションで実行されないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="ca5b4e07c53341abd3017356f8a7dc9ef7ae499a" translate="yes" xml:space="preserve">
          <source>On databases that support it (all but Oracle), setting the &lt;code&gt;ignore_conflicts&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt; tells the database to ignore failure to insert any rows that fail constraints such as duplicate unique values. Enabling this parameter disables setting the primary key on each model instance (if the database normally supports it).</source>
          <target state="translated">これをサポートするデータベース（Oracleを除くすべて）で、 &lt;code&gt;ignore_conflicts&lt;/code&gt; パラメータを &lt;code&gt;True&lt;/code&gt; に設定すると、重複する一意の値などの制約を満たさない行の挿入の失敗を無視するようにデータベースに指示します。このパラメーターを有効にすると、各データベースでの主キーの設定が無効になります（データベースで通常サポートされている場合）。</target>
        </trans-unit>
        <trans-unit id="df2a46b8e1aeddaad78520b882b9cdecf3e5c347" translate="yes" xml:space="preserve">
          <source>On every distance lookup except &lt;a href=&quot;#std:fieldlookup-dwithin&quot;&gt;&lt;code&gt;dwithin&lt;/code&gt;&lt;/a&gt;, an optional element, &lt;code&gt;'spheroid'&lt;/code&gt;, may be included to use the more accurate spheroid distance calculation functions on fields with a geodetic coordinate system.</source>
          <target state="translated">&lt;a href=&quot;#std:fieldlookup-dwithin&quot;&gt; &lt;code&gt;dwithin&lt;/code&gt; &lt;/a&gt;を除くすべての距離ルックアップでは、測地座標系を持つフィールドでより正確な回転楕円体距離計算関数を使用するために、オプションの要素 &lt;code&gt;'spheroid'&lt;/code&gt; を含めることができます。</target>
        </trans-unit>
        <trans-unit id="5c16f183cbe43a1d74cb296d07073bd34180fa90" translate="yes" xml:space="preserve">
          <source>On occasions it may be useful to require or restrict the keys which are valid for a given field. This can be done using the &lt;a href=&quot;validators#django.contrib.postgres.validators.KeysValidator&quot;&gt;&lt;code&gt;KeysValidator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定のフィールドで有効なキーを要求または制限すると便利な場合があります。これは、&lt;a href=&quot;validators#django.contrib.postgres.validators.KeysValidator&quot;&gt; &lt;code&gt;KeysValidator&lt;/code&gt; &lt;/a&gt;を使用して行うことができます。</target>
        </trans-unit>
        <trans-unit id="3135ae21a09a7d5963484b5886ed97c37f9aee36" translate="yes" xml:space="preserve">
          <source>On older databases, adding a field with a default value may cause a full rewrite of the table. This happens even for nullable fields and may have a negative performance impact. To avoid that, the following steps should be taken.</source>
          <target state="translated">古いデータベースでは、デフォルト値を持つフィールドを追加すると、テーブルが完全に書き換えられてしまうことがあります。これはヌル可能なフィールドであっても発生し、パフォーマンスに悪影響を及ぼす可能性があります。これを回避するには、以下の手順を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="7a602592df2f82b3d4e98221e99e6bdd1a6c483c" translate="yes" xml:space="preserve">
          <source>On other databases, this is emulated using a &lt;code&gt;CASE&lt;/code&gt; statement:</source>
          <target state="translated">他のデータベースでは、これは &lt;code&gt;CASE&lt;/code&gt; ステートメントを使用してエミュレートされます。</target>
        </trans-unit>
        <trans-unit id="78d0d5f86c0751b63e02578856d36bc3a65a179a" translate="yes" xml:space="preserve">
          <source>On some databases, flags may cause the query to be executed which could have adverse effects on your database. For example, PostgreSQL&amp;rsquo;s &lt;code&gt;ANALYZE&lt;/code&gt; flag could result in changes to data if there are triggers or if a function is called, even for a &lt;code&gt;SELECT&lt;/code&gt; query.</source>
          <target state="translated">一部のデータベースでは、フラグによってクエリが実行され、データベースに悪影響を及ぼす可能性があります。たとえば、PostgreSQLの &lt;code&gt;ANALYZE&lt;/code&gt; フラグは、トリガーがある場合や、 &lt;code&gt;SELECT&lt;/code&gt; クエリの場合でも関数が呼び出された場合に、データを変更する可能性があります。</target>
        </trans-unit>
        <trans-unit id="37ae77b6bff1b6729e6bdb760bb7c8c52d3c1ea8" translate="yes" xml:space="preserve">
          <source>On some databases, flags may cause the query to be executed which could have adverse effects on your database. For example, the &lt;code&gt;ANALYZE&lt;/code&gt; flag supported by MariaDB, MySQL 8.0.18+, and PostgreSQL could result in changes to data if there are triggers or if a function is called, even for a &lt;code&gt;SELECT&lt;/code&gt; query.</source>
          <target state="translated">On some databases, flags may cause the query to be executed which could have adverse effects on your database. For example, the &lt;code&gt;ANALYZE&lt;/code&gt; flag supported by MariaDB, MySQL 8.0.18+, and PostgreSQL could result in changes to data if there are triggers or if a function is called, even for a &lt;code&gt;SELECT&lt;/code&gt; query.</target>
        </trans-unit>
        <trans-unit id="002dcb5bc58a7582b107d7e7d9659347ad64dcf4" translate="yes" xml:space="preserve">
          <source>On subsequent &lt;code&gt;collectstatic&lt;/code&gt; runs (if &lt;code&gt;STATIC_ROOT&lt;/code&gt; isn&amp;rsquo;t empty), files are copied only if they have a modified timestamp greater than the timestamp of the file in &lt;code&gt;STATIC_ROOT&lt;/code&gt;. Therefore if you remove an application from &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, it&amp;rsquo;s a good idea to use the &lt;a href=&quot;#cmdoption-collectstatic-clear&quot;&gt;&lt;code&gt;collectstatic
--clear&lt;/code&gt;&lt;/a&gt; option in order to remove stale static files.</source>
          <target state="translated">それ以降に &lt;code&gt;collectstatic&lt;/code&gt; （あれば実行 &lt;code&gt;STATIC_ROOT&lt;/code&gt; が空でない）、彼らは内のファイルのタイムスタンプより修正タイムスタンプ大きい持っている場合にのみ、ファイルがコピーされ &lt;code&gt;STATIC_ROOT&lt;/code&gt; を。したがって、&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;からアプリケーションを削除する場合は、古い静的ファイルを削除するために&lt;a href=&quot;#cmdoption-collectstatic-clear&quot;&gt; &lt;code&gt;collectstatic --clear&lt;/code&gt; &lt;/a&gt;オプションを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="26454cc1ad8a1430d9c48c7d5cb25125f3c45cef" translate="yes" xml:space="preserve">
          <source>On supported backends (memcached), &lt;code&gt;set_many()&lt;/code&gt; returns a list of keys that failed to be inserted.</source>
          <target state="translated">サポートされているバックエンド（memcached）では、 &lt;code&gt;set_many()&lt;/code&gt; は挿入に失敗したキーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="4b4ebcf96010e5ee4bcc0f23b425a4b14b45545e" translate="yes" xml:space="preserve">
          <source>On the left hand side of the example, &lt;code&gt;rast&lt;/code&gt; is the geographic raster field and &lt;a href=&quot;geoquerysets#std:fieldlookup-gis-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; is the spatial lookup type. On the right hand side, &lt;code&gt;geom&lt;/code&gt; is a geometry input and &lt;code&gt;rst&lt;/code&gt; is a &lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; object. The band index defaults to &lt;code&gt;0&lt;/code&gt; in the first two queries and is set to &lt;code&gt;1&lt;/code&gt; on the others.</source>
          <target state="translated">例の左側の &lt;code&gt;rast&lt;/code&gt; は地理的ラスターフィールドで、&lt;a href=&quot;geoquerysets#std:fieldlookup-gis-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;は空間ルックアップタイプです。右側では、 &lt;code&gt;geom&lt;/code&gt; はジオメトリ入力であり、 &lt;code&gt;rst&lt;/code&gt; は&lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt;オブジェクトです。バンドインデックスは、最初の2つのクエリではデフォルトで &lt;code&gt;0&lt;/code&gt; になり、他のクエリでは &lt;code&gt;1&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="da0ebe59862835efe42e9523305ea8c0bd6a5461" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;a href=&quot;../ref/models/querysets#when-querysets-are-evaluated&quot;&gt;certain operations will force the evaluation of a QuerySet&lt;/a&gt;. Avoiding the premature evaluation of a &lt;code&gt;QuerySet&lt;/code&gt; can save making an expensive and unnecessary trip to the database.</source>
          <target state="translated">一方、&lt;a href=&quot;../ref/models/querysets#when-querysets-are-evaluated&quot;&gt;特定の操作はQuerySetの評価を強制し&lt;/a&gt;ます。早期評価避ける &lt;code&gt;QuerySet&lt;/code&gt; データベースに高価で不必要な旅行を作り保存することができます。</target>
        </trans-unit>
        <trans-unit id="3d160b683bea44fcb1e91d7c5b1f06dc5559f378" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;GET&lt;/code&gt; is suitable for things like a web search form, because the URLs that represent a &lt;code&gt;GET&lt;/code&gt; request can easily be bookmarked, shared, or resubmitted.</source>
          <target state="translated">一方、 &lt;code&gt;GET&lt;/code&gt; は表現したURLから、ウェブ検索フォームのようなものに適している &lt;code&gt;GET&lt;/code&gt; リクエストを簡単に、ブックマーク共有、または再送信することができます。</target>
        </trans-unit>
        <trans-unit id="6f7a7c5801c7d1a1d3369cd7df4b42ee61e93288" translate="yes" xml:space="preserve">
          <source>On the other hand, bugs caused by the lack of time zone support are much harder to prevent, diagnose and fix. Anything that involves scheduled tasks or datetime arithmetic is a candidate for subtle bugs that will bite you only once or twice a year.</source>
          <target state="translated">一方、タイムゾーンに対応していないことが原因のバグは、予防、診断、修正がはるかに困難です。スケジュールされたタスクや日時の演算を伴うものは、年に一度か二度しか発生しない微妙なバグの候補になります。</target>
        </trans-unit>
        <trans-unit id="42997296bab7b08f1ceb56e2afd964aad5014fa4" translate="yes" xml:space="preserve">
          <source>On the other hand, by setting the &lt;code&gt;--verbosity&lt;/code&gt; flag to 2, you can get all the directories which were searched:</source>
          <target state="translated">一方、 &lt;code&gt;--verbosity&lt;/code&gt; フラグを2に設定すると、検索されたすべてのディレクトリを取得できます。</target>
        </trans-unit>
        <trans-unit id="327d8b70bf9dd3f89730d860563313020b6f5624" translate="yes" xml:space="preserve">
          <source>On the other hand, if you are using a plain &lt;code&gt;FormSet&lt;/code&gt;, it&amp;rsquo;s up to you to handle &lt;code&gt;formset.deleted_forms&lt;/code&gt;, perhaps in your formset&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method, as there&amp;rsquo;s no general notion of what it means to delete a form.</source>
          <target state="translated">一方、プレーンな &lt;code&gt;FormSet&lt;/code&gt; を使用している場合、フォームの削除が何を意味するかについての一般的な概念がない &lt;code&gt;save()&lt;/code&gt; 、おそらくformsetのsave（）メソッドで &lt;code&gt;formset.deleted_forms&lt;/code&gt; を処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="b4d82efd4f41e1694a1ff4a96d13777aeea9b652" translate="yes" xml:space="preserve">
          <source>On the other hand, proxy models are intended to behave exactly like the model they are proxying for. They are always in sync with the parent model since they directly inherit its fields and managers.</source>
          <target state="translated">一方、プロキシモデルは、プロキシしているモデルとまったく同じように振る舞うことを意図しています。プロキシモデルは親モデルのフィールドとマネージャを直接継承するので、常に親モデルと同期しています。</target>
        </trans-unit>
        <trans-unit id="9d9eb41739d72afbd8898888fd10f2dab6d9d4e3" translate="yes" xml:space="preserve">
          <source>On the other hand, when a savepoint is rolled back (due to an exception being raised), the inner callable will not be called:</source>
          <target state="translated">一方、(例外が発生したために)セーブポイントがロールバックされた場合、内部の呼び出し可能な関数は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="2a4daf554ed077861bb378c80a8f4c5b4b8037da" translate="yes" xml:space="preserve">
          <source>On the server (&lt;code&gt;mod_wsgi&lt;/code&gt;)</source>
          <target state="translated">サーバー上（ &lt;code&gt;mod_wsgi&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cecf61e7e09516497b38938fd37f1bddd24dfa26" translate="yes" xml:space="preserve">
          <source>On the server, run &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; to copy all the static files into &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サーバーで、&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt;実行&lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;て、すべての静的ファイルをSTATIC_ROOTにコピーします。</target>
        </trans-unit>
        <trans-unit id="8018b894c78df10ce0e2fab04879f59541601d51" translate="yes" xml:space="preserve">
          <source>On these spatial backends the intersection pattern is a string comprising nine characters, which define intersections between the interior, boundary, and exterior of the geometry field and the lookup geometry. The intersection pattern matrix may only use the following characters: &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt;. This lookup type allows users to &amp;ldquo;fine tune&amp;rdquo; a specific geometric relationship consistent with the DE-9IM model. &lt;a href=&quot;#fnde9im&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">これらの空間バックエンドでは、交差パターンは9つの文字で構成される文字列であり、ジオメトリフィールドの内部、境界、および外部とルックアップジオメトリの間の交差を定義します。交差点パターン行列は、次の文字のみを使用することができる： &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;2&lt;/code&gt; 、 &lt;code&gt;T&lt;/code&gt; 、 &lt;code&gt;F&lt;/code&gt; 、または &lt;code&gt;*&lt;/code&gt; 。このルックアップタイプを使用すると、DE-9IMモデルと一致する特定の幾何学的関係を「微調整」できます。&lt;a href=&quot;#fnde9im&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe2da8c6b3beffe86c43d4ad3b331e4d1ab5aed7" translate="yes" xml:space="preserve">
          <source>On-commit functions for a given transaction are executed in the order they were registered.</source>
          <target state="translated">指定されたトランザクションのオンコミット関数は、登録された順に実行されます。</target>
        </trans-unit>
        <trans-unit id="5b56a6bf63627728f31e434c106869807d7bf4d8" translate="yes" xml:space="preserve">
          <source>On-commit functions only work with &lt;a href=&quot;#managing-autocommit&quot;&gt;autocommit mode&lt;/a&gt; and the &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ATOMIC_REQUESTS&quot;&gt;&lt;code&gt;ATOMIC_REQUESTS&lt;/code&gt;&lt;/a&gt;) transaction API. Calling &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt; when autocommit is disabled and you are not within an atomic block will result in an error.</source>
          <target state="translated">オンコミット関数は、&lt;a href=&quot;#managing-autocommit&quot;&gt;自動コミットモード&lt;/a&gt;と&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ATOMIC_REQUESTS&quot;&gt; &lt;code&gt;ATOMIC_REQUESTS&lt;/code&gt; &lt;/a&gt;）トランザクションAPIでのみ機能します。自動コミットが無効で、アトミックブロック内にいないときに&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; を&lt;/a&gt;呼び出すと、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="ea953980477f23ceaa27913413963b194a15f9cb" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;LocaleMiddleware&lt;/code&gt; determines the user&amp;rsquo;s preference, it makes this preference available as &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt; for each &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;. Feel free to read this value in your view code. Here&amp;rsquo;s an example:</source>
          <target state="translated">いったん &lt;code&gt;LocaleMiddleware&lt;/code&gt; は、ユーザの嗜好を判断し、それは、この優先順位を利用できるようになり &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt; それぞれについて&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;。この値をビューコードで自由に読んでください。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="45bad62da27ce3b983be7a3066691f1ee9b247b1" translate="yes" xml:space="preserve">
          <source>Once a logger has determined that a message needs to be processed, it is passed to a &lt;em&gt;Handler&lt;/em&gt;.</source>
          <target state="translated">ロガーがメッセージを処理する必要があると判断すると、そのメッセージは&lt;em&gt;Handlerに&lt;/em&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="4892907ad7249904f6f00c6f41012b6dc82795ed" translate="yes" xml:space="preserve">
          <source>Once a node is parsed, its &lt;code&gt;render&lt;/code&gt; method may be called any number of times. Since Django is sometimes run in multi-threaded environments, a single node may be simultaneously rendering with different contexts in response to two separate requests. Therefore, it&amp;rsquo;s important to make sure your template tags are thread safe.</source>
          <target state="translated">ノードが解析されると、その &lt;code&gt;render&lt;/code&gt; メソッドは何度でも呼び出されます。Djangoはマルチスレッド環境で実行される場合があるため、1つのノードが2つの別々のリクエストに応じて異なるコンテキストで同時にレンダリングしている場合があります。したがって、テンプレートタグがスレッドセーフであることを確認することが重要です。</target>
        </trans-unit>
        <trans-unit id="4b7a48f914d876adbccaa3adc73eedab94ce96c4" translate="yes" xml:space="preserve">
          <source>Once a subclass of &lt;code&gt;File&lt;/code&gt; is created, the new &lt;code&gt;FileField&lt;/code&gt; subclass must be told to use it. To do so, assign the new &lt;code&gt;File&lt;/code&gt; subclass to the special &lt;code&gt;attr_class&lt;/code&gt; attribute of the &lt;code&gt;FileField&lt;/code&gt; subclass.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; のサブクラスが作成されたら、新しい &lt;code&gt;FileField&lt;/code&gt; サブクラスにそれを使用するように指示する必要があります。そのためには、新しい &lt;code&gt;File&lt;/code&gt; サブクラスを &lt;code&gt;FileField&lt;/code&gt; サブクラスの特別な &lt;code&gt;attr_class&lt;/code&gt; 属性に割り当てます。</target>
        </trans-unit>
        <trans-unit id="7fa4afcebb8e9a2e720375d04ee811c5c1d53d5f" translate="yes" xml:space="preserve">
          <source>Once a user has authenticated, Django stores which backend was used to authenticate the user in the user&amp;rsquo;s session, and re-uses the same backend for the duration of that session whenever access to the currently authenticated user is needed. This effectively means that authentication sources are cached on a per-session basis, so if you change &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt;, you&amp;rsquo;ll need to clear out session data if you need to force users to re-authenticate using different methods. A simple way to do that is to execute &lt;code&gt;Session.objects.all().delete()&lt;/code&gt;.</source>
          <target state="translated">ユーザーが認証されると、Djangoはユーザーのセッションでユーザーの認証に使用されたバックエンドを保存し、現在認証されているユーザーへのアクセスが必要なときはいつでも、そのセッションの期間中同じバックエンドを再利用します。つまり、認証ソースはセッションごとにキャッシュされるため、&lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;を変更した場合、ユーザーにさまざまな方法で再認証を強制する必要がある場合は、セッションデータを消去する必要があります。これを行う簡単な方法は、 &lt;code&gt;Session.objects.all().delete()&lt;/code&gt; を実行することです。</target>
        </trans-unit>
        <trans-unit id="47cc039fbcb18a971f6b9e295950ac28d3bbc3d6" translate="yes" xml:space="preserve">
          <source>Once one of the URL patterns matches, Django calls the given view, which is a Python function. Each view gets passed a request object &amp;ndash; which contains request metadata &amp;ndash; and the values captured in the pattern.</source>
          <target state="translated">URLパターンの1つが一致すると、Djangoは指定されたビュー（Python関数）を呼び出します。各ビューには、リクエストメタデータを含むリクエストオブジェクトと、パターンでキャプチャされた値が渡されます。</target>
        </trans-unit>
        <trans-unit id="8afce1673f10a3038aee77d9942248ca3461e349" translate="yes" xml:space="preserve">
          <source>Once one of the URL patterns matches, Django imports and calls the given view, which is a Python function (or a &lt;a href=&quot;../class-based-views/index&quot;&gt;class-based view&lt;/a&gt;). The view gets passed the following arguments:</source>
          <target state="translated">URLパターンの1つが一致すると、Djangoは指定されたビュー（Python関数（または&lt;a href=&quot;../class-based-views/index&quot;&gt;クラスベースのビュー&lt;/a&gt;））をインポートして呼び出します。ビューには次の引数が渡されます。</target>
        </trans-unit>
        <trans-unit id="8d3f70853ffe17be01ce6b6b1b1ad3963fb68cb3" translate="yes" xml:space="preserve">
          <source>Once that&amp;rsquo;s done, all you have to do is run &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; and your static files would be pushed through your storage package up to S3. If you later needed to switch to a different storage provider, you may only have to change your &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt;&lt;code&gt;STATICFILES_STORAGE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">それを行うのならば、あなたがしなければならないすべては、実行され&lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;とあなたの静的ファイルはS3までのストレージパッケージを介してプッシュされるだろう。後で別のストレージプロバイダーに切り替える必要が生じた場合は、&lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_STORAGE&quot;&gt; &lt;code&gt;STATICFILES_STORAGE&lt;/code&gt; &lt;/a&gt;設定を変更するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="cfd518f7c02dab56b7fa7099e9ab5f115d40d4af" translate="yes" xml:space="preserve">
          <source>Once that&amp;rsquo;s done, we can run &lt;code&gt;python manage.py migrate&lt;/code&gt; as normal and the data migration will run in place alongside other migrations.</source>
          <target state="translated">これが完了 &lt;code&gt;python manage.py migrate&lt;/code&gt; 、通常どおりpython manage.py migrateを実行でき、データの移行は他の移行と一緒に実行されます。</target>
        </trans-unit>
        <trans-unit id="7d80a9630a5667fa5b1bf5e0b53bb9c33fc0955a" translate="yes" xml:space="preserve">
          <source>Once the cache is set up, the simplest way to use caching is to cache your entire site. You&amp;rsquo;ll need to add &lt;code&gt;'django.middleware.cache.UpdateCacheMiddleware'&lt;/code&gt; and &lt;code&gt;'django.middleware.cache.FetchFromCacheMiddleware'&lt;/code&gt; to your &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting, as in this example:</source>
          <target state="translated">キャッシュを設定したら、キャッシュを使用する最も簡単な方法は、サイト全体をキャッシュすることです。次の例のように、 &lt;code&gt;'django.middleware.cache.UpdateCacheMiddleware'&lt;/code&gt; と &lt;code&gt;'django.middleware.cache.FetchFromCacheMiddleware'&lt;/code&gt; を&lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;設定に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="099066c054cd7e4194c8ae65b8e3741ea951ec11" translate="yes" xml:space="preserve">
          <source>Once the migration is applied, commit the migration and the models change to your version control system as a single commit - that way, when other developers (or your production servers) check out the code, they&amp;rsquo;ll get both the changes to your models and the accompanying migration at the same time.</source>
          <target state="translated">移行が適用されたら、移行をコミットし、モデルを単一のコミットとしてバージョン管理システムに変更します。これにより、他の開発者（または本番サーバー）がコードをチェックアウトすると、モデルへの両方の変更が反映されます。それに伴う移行も同時に。</target>
        </trans-unit>
        <trans-unit id="9aac27c3870fec649b441a68d9801e0cfc37bac9" translate="yes" xml:space="preserve">
          <source>Once the operation sequence has been reduced as much as possible - the amount possible depends on how closely intertwined your models are and if you have any &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; operations (which can&amp;rsquo;t be optimized through unless they are marked as &lt;code&gt;elidable&lt;/code&gt;) - Django will then write it back out into a new set of migration files.</source>
          <target state="translated">操作シーケンスが可能な限り削減されたら-可能な量は、モデルがどれほど密接に絡み合っているか、および&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;操作があるかどうかに依存します（それらが &lt;code&gt;elidable&lt;/code&gt; としてマークされていない限り、最適化できません）-Djangoは次に、それを新しい移行ファイルのセットに書き戻します。</target>
        </trans-unit>
        <trans-unit id="ed3b976c0a650bb7fc905a8f0966094dff0cf52a" translate="yes" xml:space="preserve">
          <source>Once the sitemaps application is added to your project, you may also ping Google using the &lt;code&gt;ping_google&lt;/code&gt; management command:</source>
          <target state="translated">サイトマップアプリケーションをプロジェクトに追加したら、 &lt;code&gt;ping_google&lt;/code&gt; 管理コマンドを使用してGoogleにpingすることもできます。</target>
        </trans-unit>
        <trans-unit id="f6b49e146a7a6f8208bd2db324b466d09add24fd" translate="yes" xml:space="preserve">
          <source>Once the string literals of an application have been tagged for later translation, the translation themselves need to be written (or obtained). Here&amp;rsquo;s how that works.</source>
          <target state="translated">アプリケーションの文字列リテラルが後の翻訳のためにタグ付けされたら、翻訳自体を書き込む（または取得する）必要があります。これがどのように機能するかです。</target>
        </trans-unit>
        <trans-unit id="f206c7b7afb4f63e3142f262b4b4485c255b7031" translate="yes" xml:space="preserve">
          <source>Once the test database has been created, Django will run your tests. If everything goes well, you&amp;rsquo;ll see something like this:</source>
          <target state="translated">テストデータベースが作成されると、Djangoはテストを実行します。すべてがうまくいくと、次のようなものが表示されます。</target>
        </trans-unit>
        <trans-unit id="c49b2de11a260f313eebb5acb8de8bd12ea04b7c" translate="yes" xml:space="preserve">
          <source>Once the tests complete, you should be greeted with a message informing you whether the test suite passed or failed. Since you haven&amp;rsquo;t yet made any changes to Django&amp;rsquo;s code, the entire test suite &lt;strong&gt;should&lt;/strong&gt; pass. If you get failures or errors make sure you&amp;rsquo;ve followed all of the previous steps properly. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests&quot;&gt;Running the unit tests&lt;/a&gt; for more information.</source>
          <target state="translated">テストが完了すると、テストスイートが成功したか失敗したかを通知するメッセージが表示されます。Djangoのコードにまだ変更を加えていないので、テストスイート全体&lt;strong&gt;が&lt;/strong&gt;パスする&lt;strong&gt;はず&lt;/strong&gt;です。失敗またはエラーが発生した場合は、前の手順をすべて正しく実行したことを確認してください。詳細について&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests&quot;&gt;は、単体テストの実行を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="53cb2d9fc1f9efe41bdafd33beb455b148fb4232" translate="yes" xml:space="preserve">
          <source>Once the tests complete, you should be greeted with a message informing you whether the test suite passed or failed. Since you haven&amp;rsquo;t yet made any changes to Django&amp;rsquo;s code, the entire test suite &lt;strong&gt;should&lt;/strong&gt; pass. If you get failures or errors make sure you&amp;rsquo;ve followed all of the previous steps properly. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests&quot;&gt;Running the unit tests&lt;/a&gt; for more information.</source>
          <target state="translated">Once the tests complete, you should be greeted with a message informing you whether the test suite passed or failed. Since you haven&amp;rsquo;t yet made any changes to Django&amp;rsquo;s code, the entire test suite &lt;strong&gt;should&lt;/strong&gt; pass. If you get failures or errors make sure you&amp;rsquo;ve followed all of the previous steps properly. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests&quot;&gt;Running the unit tests&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="08bca7ec8b63ac1bbbb86e71cc804f726025bfcc" translate="yes" xml:space="preserve">
          <source>Once this is done, Django takes care of translating Web apps on the fly in each available language, according to users&amp;rsquo; language preferences.</source>
          <target state="translated">これが完了すると、Djangoはユーザーの言語設定に従って、利用可能な各言語でWebアプリケーションを即座に翻訳します。</target>
        </trans-unit>
        <trans-unit id="beac49f82b1bb9504998712c3c8cf268da1ee652" translate="yes" xml:space="preserve">
          <source>Once this stage completes, APIs that operate on application configurations such as &lt;a href=&quot;#django.apps.apps.get_app_config&quot;&gt;&lt;code&gt;get_app_config()&lt;/code&gt;&lt;/a&gt; become usable.</source>
          <target state="translated">この段階が完了すると、&lt;a href=&quot;#django.apps.apps.get_app_config&quot;&gt; &lt;code&gt;get_app_config()&lt;/code&gt; &lt;/a&gt;などのアプリケーション構成で動作するAPI が使用可能になります。</target>
        </trans-unit>
        <trans-unit id="6d1164058a89f4747e93310f35287594ad610bd0" translate="yes" xml:space="preserve">
          <source>Once this stage completes, APIs that operate on models such as &lt;a href=&quot;#django.apps.apps.get_model&quot;&gt;&lt;code&gt;get_model()&lt;/code&gt;&lt;/a&gt; become usable.</source>
          <target state="translated">このステージが完了すると、&lt;a href=&quot;#django.apps.apps.get_model&quot;&gt; &lt;code&gt;get_model()&lt;/code&gt; &lt;/a&gt;などのモデルで動作するAPI が使用可能になります。</target>
        </trans-unit>
        <trans-unit id="2953f2561ce177f56af024f2dd92e1f59d25403c" translate="yes" xml:space="preserve">
          <source>Once those steps are complete, you can start browsing the documentation by going to your admin interface and clicking the &amp;ldquo;Documentation&amp;rdquo; link in the upper right of the page.</source>
          <target state="translated">これらの手順が完了したら、管理インターフェイスに移動し、ページの右上にある[ドキュメント]リンクをクリックして、ドキュメントの閲覧を開始できます。</target>
        </trans-unit>
        <trans-unit id="1239ce07e292603a287e3a01f0eb30465810a2ec" translate="yes" xml:space="preserve">
          <source>Once you have &lt;code&gt;MytypeField&lt;/code&gt;, you can use it in any model, just like any other &lt;code&gt;Field&lt;/code&gt; type:</source>
          <target state="translated">あなたが持ってたら &lt;code&gt;MytypeField&lt;/code&gt; を、あなたは他のと同じように、すべてのモデルで使用することができます &lt;code&gt;Field&lt;/code&gt; タイプ：</target>
        </trans-unit>
        <trans-unit id="b3891fc58305b0a5a423532b9868592dc59f7e43" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;code&gt;Client&lt;/code&gt; instance, you can call any of the following methods:</source>
          <target state="translated">あなたが持ってたら &lt;code&gt;Client&lt;/code&gt; インスタンスを、次の方法のいずれかを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d52a875481cca2d8c66414f94d375f0c665ec6c2" translate="yes" xml:space="preserve">
          <source>Once you have a compiled &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object, you can render a context with it. You can reuse the same template to render it several times with different contexts.</source>
          <target state="translated">コンパイル済みの&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;オブジェクトを取得したら、それを使用してコンテキストをレンダリングできます。同じテンプレートを再利用して、異なるコンテキストで数回レンダリングできます。</target>
        </trans-unit>
        <trans-unit id="3b7c2b14858900752e7f2ec09ad28d32ec131ad8" translate="yes" xml:space="preserve">
          <source>Once you have configured your installation, run &lt;code&gt;manage.py migrate&lt;/code&gt; to install the single database table that stores session data.</source>
          <target state="translated">インストールを構成したら、 &lt;code&gt;manage.py migrate&lt;/code&gt; を実行して、セッションデータを格納する単一のデータベーステーブルをインストールします。</target>
        </trans-unit>
        <trans-unit id="4e3f8d55fa3db6648c5321fd5704f17bc2706d5f" translate="yes" xml:space="preserve">
          <source>Once you have configured your loggers, handlers, filters and formatters, you need to place logging calls into your code. Using the logging framework works like this:</source>
          <target state="translated">ロガー、ハンドラ、フィルタ、フォーマッタを設定したら、コードにロギングコールを配置する必要があります。ロギングフレームワークを使用すると、次のように動作します。</target>
        </trans-unit>
        <trans-unit id="06625db7449c235ed03be7a56ab284c2fd23316a" translate="yes" xml:space="preserve">
          <source>Once you have defined your models, you need to tell Django you&amp;rsquo;re going to &lt;em&gt;use&lt;/em&gt; those models. Do this by editing your settings file and changing the &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting to add the name of the module that contains your &lt;code&gt;models.py&lt;/code&gt;.</source>
          <target state="translated">モデルを定義したら、それらのモデルを&lt;em&gt;使用&lt;/em&gt;することをDjangoに伝える必要があります。これを行うには、設定ファイルを編集し、&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;設定を変更して、 &lt;code&gt;models.py&lt;/code&gt; を含むモジュールの名前を追加します。</target>
        </trans-unit>
        <trans-unit id="b7449018ba0036e62aa7a8073bea808f1634e08d" translate="yes" xml:space="preserve">
          <source>Once you have established the many-to-many relationships, you can issue queries. Just as with normal many-to-many relationships, you can query using the attributes of the many-to-many-related model:</source>
          <target state="translated">多対多のリレーションシップを確立したら、クエリを発行することができます。通常の多対多のリレーションシップと同様に、多対多に関連するモデルの属性を使用してクエリを発行することができます。</target>
        </trans-unit>
        <trans-unit id="767d3c1c5b235cde245b661bd7ecf4af97258d00" translate="yes" xml:space="preserve">
          <source>Once you have your new migration files, you should apply them to your database to make sure they work as expected:</source>
          <target state="translated">新しい移行ファイルを用意したら、それらをデータベースに適用して、期待通りに動作することを確認してください。</target>
        </trans-unit>
        <trans-unit id="31d824ef7fe4e79e96012a6f5d6b173e1c8aa4d9" translate="yes" xml:space="preserve">
          <source>Once you turn autocommit off, you get the default behavior of your database adapter, and Django won&amp;rsquo;t help you. Although that behavior is specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;, implementations of adapters aren&amp;rsquo;t always consistent with one another. Review the documentation of the adapter you&amp;rsquo;re using carefully.</source>
          <target state="translated">自動コミットをオフにすると、データベースアダプターのデフォルトの動作が得られ、Djangoは役に立ちません。その動作は&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;で指定されていますが、アダプターの実装は常に互いに一貫しているとは限りません。使用しているアダプタのドキュメントをよく確認してください。</target>
        </trans-unit>
        <trans-unit id="70514e68968e05bdbca4da60663cee7e48cbe4c6" translate="yes" xml:space="preserve">
          <source>Once you turn autocommit off, you get the default behavior of your database adapter, and Django won&amp;rsquo;t help you. Although that behavior is specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;, implementations of adapters aren&amp;rsquo;t always consistent with one another. Review the documentation of the adapter you&amp;rsquo;re using carefully.</source>
          <target state="translated">Once you turn autocommit off, you get the default behavior of your database adapter, and Django won&amp;rsquo;t help you. Although that behavior is specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;, implementations of adapters aren&amp;rsquo;t always consistent with one another. Review the documentation of the adapter you&amp;rsquo;re using carefully.</target>
        </trans-unit>
        <trans-unit id="c2aa97694ea5a295cf72f827c19c4c4b345fc129" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re done with the tutorial, you can look through the rest of &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/index/&quot;&gt;Django&amp;rsquo;s documentation on contributing&lt;/a&gt;. It contains lots of great information and is a must read for anyone who&amp;rsquo;d like to become a regular contributor to Django. If you&amp;rsquo;ve got questions, it&amp;rsquo;s probably got the answers.</source>
          <target state="translated">チュートリアルが終了したら&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/index/&quot;&gt;、貢献に関するDjangoの&lt;/a&gt;残りのドキュメントを確認できます。たくさんのすばらしい情報が含まれていて、Djangoへの定期的な貢献者になりたい人は必読です。質問がある場合は、おそらく答えがあります。</target>
        </trans-unit>
        <trans-unit id="8e568fb70b21c8fd63c7f04987964ee004b22af7" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re done with the tutorial, you can look through the rest of &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/index/&quot;&gt;Django&amp;rsquo;s documentation on contributing&lt;/a&gt;. It contains lots of great information and is a must read for anyone who&amp;rsquo;d like to become a regular contributor to Django. If you&amp;rsquo;ve got questions, it&amp;rsquo;s probably got the answers.</source>
          <target state="translated">Once you&amp;rsquo;re done with the tutorial, you can look through the rest of &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/index/&quot;&gt;Django&amp;rsquo;s documentation on contributing&lt;/a&gt;. It contains lots of great information and is a must read for anyone who&amp;rsquo;d like to become a regular contributor to Django. If you&amp;rsquo;ve got questions, it&amp;rsquo;s probably got the answers.</target>
        </trans-unit>
        <trans-unit id="94bfb4f8d2f6bac07ddde9a443c7b4ad253d96dc" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re in a transaction, you can choose either to apply the changes you&amp;rsquo;ve performed until this point with &lt;a href=&quot;#django.db.transaction.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;, or to cancel them with &lt;a href=&quot;#django.db.transaction.rollback&quot;&gt;&lt;code&gt;rollback()&lt;/code&gt;&lt;/a&gt;. These functions are defined in &lt;a href=&quot;#module-django.db.transaction&quot;&gt;&lt;code&gt;django.db.transaction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">トランザクションに入ると、&lt;a href=&quot;#django.db.transaction.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt;でこの時点までに行った変更を適用するか、&lt;a href=&quot;#django.db.transaction.rollback&quot;&gt; &lt;code&gt;rollback()&lt;/code&gt; で&lt;/a&gt;それらをキャンセルするかを選択できます。これらの関数は&lt;a href=&quot;#module-django.db.transaction&quot;&gt; &lt;code&gt;django.db.transaction&lt;/code&gt; で&lt;/a&gt;定義されています。</target>
        </trans-unit>
        <trans-unit id="6fc30a8ed1ee54ee2a8ad8fe75695abc03a12eee" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re in the shell, explore the &lt;a href=&quot;../topics/db/queries&quot;&gt;database API&lt;/a&gt;:</source>
          <target state="translated">シェルに入ったら、&lt;a href=&quot;../topics/db/queries&quot;&gt;データベースAPIを&lt;/a&gt;探索します。</target>
        </trans-unit>
        <trans-unit id="b2d2e5917827940324544b1fdd9370ee3bee88f3" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re ready, it is time to &lt;a href=&quot;../topics/install&quot;&gt;install the new Django version&lt;/a&gt;. If you are using &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt; and it is a major upgrade, you might want to set up a new environment with all the dependencies first.</source>
          <target state="translated">準備ができたら、&lt;a href=&quot;../topics/install&quot;&gt;新しいDjangoバージョン&lt;/a&gt;をインストールします。&lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;を使用していて、それがメジャーアップグレードである場合は、すべての依存関係を備えた新しい環境を最初にセットアップすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8c76020cbbbd7de9f7a65a250fca1df664bf7051" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re ready, it is time to &lt;a href=&quot;../topics/install&quot;&gt;install the new Django version&lt;/a&gt;. If you are using a &lt;a href=&quot;https://docs.python.org/3/library/venv.html#module-venv&quot;&gt;&lt;code&gt;virtual environment&lt;/code&gt;&lt;/a&gt; and it is a major upgrade, you might want to set up a new environment with all the dependencies first.</source>
          <target state="translated">Once you&amp;rsquo;re ready, it is time to &lt;a href=&quot;../topics/install&quot;&gt;install the new Django version&lt;/a&gt;. If you are using a &lt;a href=&quot;https://docs.python.org/3/library/venv.html#module-venv&quot;&gt; &lt;code&gt;virtual environment&lt;/code&gt; &lt;/a&gt; and it is a major upgrade, you might want to set up a new environment with all the dependencies first.</target>
        </trans-unit>
        <trans-unit id="3601b6f980a5ed721dd3f6813d175eff6425690c" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve cleaned up your models, name the file &lt;code&gt;models.py&lt;/code&gt; and put it in the Python package that holds your app. Then add the app to your &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">モデルをクリーンアップしたら、 &lt;code&gt;models.py&lt;/code&gt; ファイルに名前を付け、アプリを保持するPythonパッケージに入れます。次に、アプリを&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;設定に追加します。</target>
        </trans-unit>
        <trans-unit id="dddb377d8f9821df9e564ad3cdd2743cd7bb459c" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created a &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance with a set of data and validated it, you can access the clean data via its &lt;code&gt;cleaned_data&lt;/code&gt; attribute:</source>
          <target state="translated">一連のデータを含む&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;インスタンスを作成して検証したら、 &lt;code&gt;cleaned_data&lt;/code&gt; 属性を介してクリーンなデータにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="c7fd70ea6a4e1deee0b3f0def90a2d54bbf639bb" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created a fixture and placed it in a &lt;code&gt;fixtures&lt;/code&gt; directory in one of your &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, you can use it in your unit tests by specifying a &lt;code&gt;fixtures&lt;/code&gt; class attribute on your &lt;a href=&quot;#django.test.TestCase&quot;&gt;&lt;code&gt;django.test.TestCase&lt;/code&gt;&lt;/a&gt; subclass:</source>
          <target state="translated">フィクスチャを作成して&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; の&lt;/a&gt; 1つの &lt;code&gt;fixtures&lt;/code&gt; ディレクトリに配置したら、&lt;a href=&quot;#django.test.TestCase&quot;&gt; &lt;code&gt;django.test.TestCase&lt;/code&gt; &lt;/a&gt;サブクラスで &lt;code&gt;fixtures&lt;/code&gt; クラス属性を指定することにより、ユニットテストで使用できます。</target>
        </trans-unit>
        <trans-unit id="b490d3d98321be447b59796b137ee29f847904c0" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; subclass, you might consider overriding a few standard methods, depending on your field&amp;rsquo;s behavior. The list of methods below is in approximately decreasing order of importance, so start from the top.</source>
          <target state="translated">&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;サブクラスを作成したら、フィールドの動作に応じて、いくつかの標準メソッドをオーバーライドすることを検討できます。以下のメソッドのリストは、重要度の高いものから順に並べられているため、上から始めます。</target>
        </trans-unit>
        <trans-unit id="197b7b0e6149f4e2e6712d214786714045eb3c1f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your &lt;a href=&quot;models&quot;&gt;data models&lt;/a&gt;, Django automatically gives you a database-abstraction API that lets you create, retrieve, update and delete objects. This document explains how to use this API. Refer to the &lt;a href=&quot;../../ref/models/index&quot;&gt;data model reference&lt;/a&gt; for full details of all the various model lookup options.</source>
          <target state="translated">&lt;a href=&quot;models&quot;&gt;データモデル&lt;/a&gt;を作成すると、Djangoは自動的にデータベース抽象化APIを提供し、オブジェクトを作成、取得、更新、削除できます。このドキュメントでは、このAPIの使用方法について説明します。さまざまなモデルルックアップオプションの詳細については、&lt;a href=&quot;../../ref/models/index&quot;&gt;データモデルリファレンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="88aa93333b5daf9d68ee1cfd8a3f1aa27dcc950e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your &lt;code&gt;DataSource&lt;/code&gt;, you can find out how many layers of data it contains by accessing the &lt;a href=&quot;#django.contrib.gis.gdal.DataSource.layer_count&quot;&gt;&lt;code&gt;layer_count&lt;/code&gt;&lt;/a&gt; property, or (equivalently) by using the &lt;code&gt;len()&lt;/code&gt; function. For information on accessing the layers of data themselves, see the next section:</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; を作成したら、&lt;a href=&quot;#django.contrib.gis.gdal.DataSource.layer_count&quot;&gt; &lt;code&gt;layer_count&lt;/code&gt; &lt;/a&gt;プロパティにアクセスするか、（同等に） &lt;code&gt;len()&lt;/code&gt; 関数を使用して、そこに含まれるデータのレイヤー数を確認できます。データのレイヤー自体へのアクセスについては、次のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="703ec67080b97801ea35faae3735f4dec7ffed77" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve done that, rows will be given &lt;code&gt;&quot;error&quot;&lt;/code&gt; and/or &lt;code&gt;&quot;required&quot;&lt;/code&gt; classes, as needed. The HTML will look something like:</source>
          <target state="translated">これを実行すると、必要に応じて、行に &lt;code&gt;&quot;error&quot;&lt;/code&gt; または &lt;code&gt;&quot;required&quot;&lt;/code&gt; クラスが与えられます。HTMLは次のようになります。</target>
        </trans-unit>
        <trans-unit id="dff17ab7c2df9ca6a63551eb8b689e7637d33a02" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve done the above, that action will no longer be available site-wide.</source>
          <target state="translated">上記を実行すると、そのアクションはサイト全体で使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="fbbfd787ddca57ffde3e7f85fbc478dfaccd6e48" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve got Django set up, you&amp;rsquo;ll follow this general process to integrate with an existing database.</source>
          <target state="translated">Djangoをセットアップしたら、この一般的なプロセスに従って、既存のデータベースと統合します。</target>
        </trans-unit>
        <trans-unit id="797b332432d36066025b180960c38cbc2da0d493" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve got mod_wsgi installed and activated, edit your Apache server&amp;rsquo;s &lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;httpd.conf&lt;/a&gt; file and add the following.</source>
          <target state="translated">Once you&amp;rsquo;ve got mod_wsgi installed and activated, edit your Apache server&amp;rsquo;s &lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;httpd.conf&lt;/a&gt; file and add the following.</target>
        </trans-unit>
        <trans-unit id="2f5c9fbb1a2d3eba9e116b1f222d33cd90b8f048" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve got mod_wsgi installed and activated, edit your Apache server&amp;rsquo;s &lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;httpd.conf&lt;/a&gt; file and add the following. If you are using a version of Apache older than 2.4, replace &lt;code&gt;Require all granted&lt;/code&gt; with &lt;code&gt;Allow from all&lt;/code&gt; and also add the line &lt;code&gt;Order deny,allow&lt;/code&gt; above it.</source>
          <target state="translated">mod_wsgiをインストールしてアクティブ化したら、Apacheサーバーの&lt;a href=&quot;https://wiki.apache.org/httpd/DistrosDefaultLayout&quot;&gt;httpd.conf&lt;/a&gt;ファイルを編集して、以下を追加します。あなたが2.4よりも古いバージョンのApacheを使用している場合は、交換してください &lt;code&gt;Require all granted&lt;/code&gt; に &lt;code&gt;Allow from all&lt;/code&gt; の行を追加します。またと &lt;code&gt;Order deny,allow&lt;/code&gt; 、それを超えます。</target>
        </trans-unit>
        <trans-unit id="7ea2962dc3da1b2a4e7f20b94682599e9793c872" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve looked through some of that information, you&amp;rsquo;ll be ready to go out and find a ticket of your own to write a patch for. Pay special attention to tickets with the &amp;ldquo;easy pickings&amp;rdquo; criterion. These tickets are often much simpler in nature and are great for first time contributors. Once you&amp;rsquo;re familiar with contributing to Django, you can move on to writing patches for more difficult and complicated tickets.</source>
          <target state="translated">その情報のいくつかを調べたら、外に出てパッチを書くための自分のチケットを見つける準備ができています。「かんたんピッキング」基準のチケットに特に注意してください。これらのチケットは、性質がはるかに単純であることが多く、初めての寄稿者に最適です。Djangoへの貢献に慣れたら、より困難で複雑なチケットのパッチの作成に進むことができます。</target>
        </trans-unit>
        <trans-unit id="b1583459c98b69257fec18665dd137de13c329bb" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve prepared your translations &amp;ndash; or, if you want to use the translations that come with Django &amp;ndash; you&amp;rsquo;ll need to activate translation for your app.</source>
          <target state="translated">翻訳を準備したら、またはDjangoに付属している翻訳を使用したい場合は、アプリの翻訳を有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="3ad0717e6526c6287ba99f236bd12fe3752678e2" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve set up HTTPS, enable the following settings.</source>
          <target state="translated">HTTPSを設定したら、次の設定を有効にします。</target>
        </trans-unit>
        <trans-unit id="433e15e0611bc8ef3ad131e1aaf3db8eb32d5b0a" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve squashed a migration, you should not then re-squash that squashed migration until you have fully transitioned it to a normal migration.</source>
          <target state="translated">移行を潰した後は、通常の移行に完全に移行するまで、その潰した移行を再度潰してはいけません。</target>
        </trans-unit>
        <trans-unit id="5cdecad320333138fd82d8195736190509b2a0ed" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve squashed your migration, you should then commit it alongside the migrations it replaces and distribute this change to all running instances of your application, making sure that they run &lt;code&gt;migrate&lt;/code&gt; to store the change in their database.</source>
          <target state="translated">移行を抑制した後、それを、置き換えられる移行と一緒にコミットして、この変更をアプリケーションの実行中のすべてのインスタンスに配布し、それらが &lt;code&gt;migrate&lt;/code&gt; を実行してデータベースに変更を保存していることを確認します。</target>
        </trans-unit>
        <trans-unit id="1349fa263311d97d35f37c2c1a842df10861817d" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve verified that your patch and your test are working correctly, it&amp;rsquo;s a good idea to run the entire Django test suite to verify that your change hasn&amp;rsquo;t introduced any bugs into other areas of Django. While successfully passing the entire test suite doesn&amp;rsquo;t guarantee your code is bug free, it does help identify many bugs and regressions that might otherwise go unnoticed.</source>
          <target state="translated">パッチとテストが正しく機能していることを確認したら、Djangoテストスイート全体を実行して、変更によってDjangoの他の領域にバグが発生していないことを確認することをお勧めします。テストスイート全体に合格しても、コードにバグがないことは保証されませんが、他の方法では気付かれない可能性のある多くのバグやリグレッションを特定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="9cfdfebb993364de477eb12a7abb4fc259f77346" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve written tests, run them using the &lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; command of your project&amp;rsquo;s &lt;code&gt;manage.py&lt;/code&gt; utility:</source>
          <target state="translated">テストを作成したら、プロジェクトの &lt;code&gt;manage.py&lt;/code&gt; ユーティリティの&lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;コマンドを使用してテストを実行します。</target>
        </trans-unit>
        <trans-unit id="854eafd257c13871740ebcffeae796127fc7faaf" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve written your filter definition, you need to register it with your &lt;code&gt;Library&lt;/code&gt; instance, to make it available to Django&amp;rsquo;s template language:</source>
          <target state="translated">フィルター定義を作成したら、それを &lt;code&gt;Library&lt;/code&gt; インスタンスに登録して、Djangoのテンプレート言語で使用できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="1dc74ddc71ef956145231d8e56d23a70390692ec" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve written your model admin definitions, they can be registered with any &lt;code&gt;Admin&lt;/code&gt; instance:</source>
          <target state="translated">モデル管理定義を作成したら、それらを任意の &lt;code&gt;Admin&lt;/code&gt; インスタンスに登録できます。</target>
        </trans-unit>
        <trans-unit id="d5f3273b9d64e8fc4a352c674738831de3f6ba4d" translate="yes" xml:space="preserve">
          <source>Once your cache is configured, you&amp;rsquo;ve got two choices for how to store data in the cache:</source>
          <target state="translated">キャッシュを構成したら、キャッシュにデータを保存する方法を2つ選択できます。</target>
        </trans-unit>
        <trans-unit id="1e94ea20a9162ba0f7f32f56c3b82565f3d3e459" translate="yes" xml:space="preserve">
          <source>Once your models are defined, Django can automatically create a professional, production ready &lt;a href=&quot;../ref/contrib/admin/index&quot;&gt;administrative interface&lt;/a&gt; &amp;ndash; a website that lets authenticated users add, change and delete objects. The only step required is to register your model in the admin site:</source>
          <target state="translated">モデルが定義されると、Djangoは自動的にプロフェッショナルでプロダクション対応の&lt;a href=&quot;../ref/contrib/admin/index&quot;&gt;管理インターフェース（&lt;/a&gt;認証されたユーザーがオブジェクトを追加、変更、削除できるWebサイト）を作成できます。必要な手順は、モデルを管理サイトに登録することだけです。</target>
        </trans-unit>
        <trans-unit id="5381ea3412869876f5aedc5f6a12e33628d362ab" translate="yes" xml:space="preserve">
          <source>One bookmarklet is available from the &lt;code&gt;admindocs&lt;/code&gt; page:</source>
          <target state="translated">1つのブックマークレットが &lt;code&gt;admindocs&lt;/code&gt; ページから入手できます。</target>
        </trans-unit>
        <trans-unit id="3b8655d015723e3ffff545c6f5985e5282ef053b" translate="yes" xml:space="preserve">
          <source>One class of attacks can be prevented by always serving user uploaded content from a distinct top-level or second-level domain. This prevents any exploit blocked by &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt; protections such as cross site scripting. For example, if your site runs on &lt;code&gt;example.com&lt;/code&gt;, you would want to serve uploaded content (the &lt;a href=&quot;../ref/settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; setting) from something like &lt;code&gt;usercontent-example.com&lt;/code&gt;. It&amp;rsquo;s &lt;em&gt;not&lt;/em&gt; sufficient to serve content from a subdomain like &lt;code&gt;usercontent.example.com&lt;/code&gt;.</source>
          <target state="translated">あるトップクラスまたはセカンドレベルのドメインからユーザーがアップロードしたコンテンツを常に提供することにより、1つのクラスの攻撃を防ぐことができます。これにより、クロスサイトスクリプティングなどの&lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;同じ発信元のポリシー&lt;/a&gt;保護によってブロックされるエクスプロイトが防止されます。たとえば、サイトが &lt;code&gt;example.com&lt;/code&gt; で実行されている場合、&lt;a href=&quot;../ref/settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;アップロードされたコンテンツ（MEDIA_URL設定）を提供する &lt;code&gt;usercontent-example.com&lt;/code&gt; ます。それはだ&lt;em&gt;ではない&lt;/em&gt;ようなサブドメインからのコンテンツを提供するのに十分な &lt;code&gt;usercontent.example.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d35da2cb46849f2d42b8f4c677498c5a2d6f7139" translate="yes" xml:space="preserve">
          <source>One common reason for overriding these methods is to augment the context data that is provided to the template that renders the view. In the following example, the change view is overridden so that the rendered template is provided some extra mapping data that would not otherwise be available:</source>
          <target state="translated">これらのメソッドをオーバーライドする一般的な理由は、ビューをレンダリングするテンプレートに提供されるコンテキストデータを拡張するためです。次の例では、変更ビューをオーバーライドして、レンダリングされたテンプレートに、他の方法では利用できない追加のマッピングデータを提供するようにしています。</target>
        </trans-unit>
        <trans-unit id="6f73d920aa2ddf0ff594a6ef8ce772d924c15bd9" translate="yes" xml:space="preserve">
          <source>One difference is in the attribute naming: The model that defines the &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; uses the attribute name of that field itself, whereas the &amp;ldquo;reverse&amp;rdquo; model uses the lowercased model name of the original model, plus &lt;code&gt;'_set'&lt;/code&gt; (just like reverse one-to-many relationships).</source>
          <target state="translated">1つの違いは属性の名前付けです&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;を定義するモデルはそのフィールド自体の属性名を使用しますが、「リバース」モデルは元のモデルの小文字のモデル名と &lt;code&gt;'_set'&lt;/code&gt; を使用します（reverse one-toのように） -多くの関係）。</target>
        </trans-unit>
        <trans-unit id="52fbd495f92e2902784ac9baa74b04fcd17f36e9" translate="yes" xml:space="preserve">
          <source>One difference to note when using &lt;code&gt;prefetch_related&lt;/code&gt; is that objects created by a query can be shared between the different objects that they are related to i.e. a single Python model instance can appear at more than one point in the tree of objects that are returned. This will normally happen with foreign key relationships. Typically this behavior will not be a problem, and will in fact save both memory and CPU time.</source>
          <target state="translated">&lt;code&gt;prefetch_related&lt;/code&gt; を使用するときに注意すべき1つの違いは、クエリによって作成されたオブジェクトは、関連する異なるオブジェクト間で共有できることです。つまり、単一のPythonモデルインスタンスが、返されるオブジェクトのツリーの複数のポイントに表示される可能性があります。これは通常、外部キーの関係で発生します。通常、この動作は問題にならず、実際にはメモリとCPU時間の両方を節約できます。</target>
        </trans-unit>
        <trans-unit id="fcc69356192552c22d0ee8a7f4168cdb22150eb7" translate="yes" xml:space="preserve">
          <source>One excellent feature of Memcached is its ability to share a cache over multiple servers. This means you can run Memcached daemons on multiple machines, and the program will treat the group of machines as a &lt;em&gt;single&lt;/em&gt; cache, without the need to duplicate cache values on each machine. To take advantage of this feature, include all server addresses in &lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt;, either as a semicolon or comma delimited string, or as a list.</source>
          <target state="translated">Memcachedの優れた機能の1つは、複数のサーバーでキャッシュを共有できることです。つまり、Memcachedデーモンを複数のマシンで実行でき、プログラムはマシンのグループを&lt;em&gt;単一の&lt;/em&gt;キャッシュとして扱います。各マシンでキャッシュ値を複製する必要はありません。この機能を利用するには、すべてのサーバーアドレスを&lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt; &lt;code&gt;LOCATION&lt;/code&gt; &lt;/a&gt;にセミコロンまたはカンマ区切りの文字列として、またはリストとして含めます。</target>
        </trans-unit>
        <trans-unit id="a0c4a4a0c4be81cbd7b437378f9e85751aa6b578" translate="yes" xml:space="preserve">
          <source>One finder is disabled by default: &lt;code&gt;django.contrib.staticfiles.finders.DefaultStorageFinder&lt;/code&gt;. If added to your &lt;a href=&quot;#std:setting-STATICFILES_FINDERS&quot;&gt;&lt;code&gt;STATICFILES_FINDERS&lt;/code&gt;&lt;/a&gt; setting, it will look for static files in the default file storage as defined by the &lt;a href=&quot;#std:setting-DEFAULT_FILE_STORAGE&quot;&gt;&lt;code&gt;DEFAULT_FILE_STORAGE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">1つのファインダーはデフォルトで無効になっています： &lt;code&gt;django.contrib.staticfiles.finders.DefaultStorageFinder&lt;/code&gt; 。&lt;a href=&quot;#std:setting-STATICFILES_FINDERS&quot;&gt; &lt;code&gt;STATICFILES_FINDERS&lt;/code&gt; &lt;/a&gt;設定に追加すると、&lt;a href=&quot;#std:setting-DEFAULT_FILE_STORAGE&quot;&gt; &lt;code&gt;DEFAULT_FILE_STORAGE&lt;/code&gt; &lt;/a&gt;設定で定義されているデフォルトのファイルストレージで静的ファイルを検索します。</target>
        </trans-unit>
        <trans-unit id="8796608c8ed158d52b85b7539105298913a9d7eb" translate="yes" xml:space="preserve">
          <source>One limitation of custom user models is that installing a custom user model will break any proxy model extending &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;. Proxy models must be based on a concrete base class; by defining a custom user model, you remove the ability of Django to reliably identify the base class.</source>
          <target state="translated">カスタムユーザーモデルの1つの制限は、カスタムユーザーモデルをインストールすると、&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; を&lt;/a&gt;拡張するすべてのプロキシモデルが壊れることです。プロキシモデルは具体的な基本クラスに基づいている必要があります。カスタムユーザーモデルを定義することで、基本クラスを確実に識別するDjangoの機能を削除できます。</target>
        </trans-unit>
        <trans-unit id="8252f91a0142e0f1f7810c559eb6eeff09a7e40a" translate="yes" xml:space="preserve">
          <source>One of the main features of debug mode is the display of detailed error pages. If your app raises an exception when &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, Django will display a detailed traceback, including a lot of metadata about your environment, such as all the currently defined Django settings (from &lt;code&gt;settings.py&lt;/code&gt;).</source>
          <target state="translated">デバッグモードの主な機能の1つは、詳細なエラーページの表示です。&lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;True&lt;/code&gt; のときにアプリで例外が発生した場合、Djangoは、現在設定されているすべてのDjango設定（ &lt;code&gt;settings.py&lt;/code&gt; から）など、環境に関する多くのメタデータを含む詳細なトレースバックを表示します。</target>
        </trans-unit>
        <trans-unit id="a7af099253a75c3b7896229949ed8b4d0dfb3dfb" translate="yes" xml:space="preserve">
          <source>One of the most powerful parts of Django is the automatic admin interface. It reads metadata from your models to provide a quick, model-centric interface where trusted users can manage content on your site. The admin&amp;rsquo;s recommended use is limited to an organization&amp;rsquo;s internal management tool. It&amp;rsquo;s not intended for building your entire front end around.</source>
          <target state="translated">Djangoの最も強力な部分の1つは、自動管理インターフェースです。モデルからメタデータを読み取り、信頼できるユーザーがサイトのコンテンツを管理できるモデル中心の迅速なインターフェースを提供します。管理者の推奨用途は、組織の内部管理ツールに限定されています。フロントエンド全体を構築するためのものではありません。</target>
        </trans-unit>
        <trans-unit id="325b632f60776937fe0278c6d5b74af921fc4d83" translate="yes" xml:space="preserve">
          <source>One of the topmost, after &lt;code&gt;SessionMiddleware&lt;/code&gt; (uses session data) and &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; (modifies &lt;code&gt;Vary&lt;/code&gt; header).</source>
          <target state="translated">最上位の1つであり、 &lt;code&gt;SessionMiddleware&lt;/code&gt; （セッションデータを使用）および &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; （ &lt;code&gt;Vary&lt;/code&gt; ヘッダーを変更）に続く。</target>
        </trans-unit>
        <trans-unit id="2b4130a908f3b1b3021bf422aaa436600226ba47" translate="yes" xml:space="preserve">
          <source>One place Django uses &lt;code&gt;get_absolute_url()&lt;/code&gt; is in the admin app. If an object defines this method, the object-editing page will have a &amp;ldquo;View on site&amp;rdquo; link that will jump you directly to the object&amp;rsquo;s public view, as given by &lt;code&gt;get_absolute_url()&lt;/code&gt;.</source>
          <target state="translated">Djangoが &lt;code&gt;get_absolute_url()&lt;/code&gt; を使用する1つの場所は、管理アプリ内です。オブジェクトがこのメソッドを定義している場合、オブジェクト編集ページには「 &lt;code&gt;get_absolute_url()&lt;/code&gt; 指定されているように、オブジェクトのパブリックビューに直接移動する「サイトに表示」リンクがあります。</target>
        </trans-unit>
        <trans-unit id="3f1cb2de20a0dd60228e6a239c6ba2218e20e8d9" translate="yes" xml:space="preserve">
          <source>One positional argument is required: the class to which the model will be related. This works exactly the same as it does for &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, including all the options regarding &lt;a href=&quot;#recursive-relationships&quot;&gt;recursive&lt;/a&gt; and &lt;a href=&quot;#lazy-relationships&quot;&gt;lazy&lt;/a&gt; relationships.</source>
          <target state="translated">1つの位置引数が必要です。モデルが関連付けられるクラスです。これは、&lt;a href=&quot;#recursive-relationships&quot;&gt;再帰&lt;/a&gt;および&lt;a href=&quot;#lazy-relationships&quot;&gt;遅延&lt;/a&gt;関係に関するすべてのオプションを含め、&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; の&lt;/a&gt;場合とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="fc925b117affa0ade4bdd69f5aabf69f1242debe" translate="yes" xml:space="preserve">
          <source>One possible use of &lt;a href=&quot;#django.urls.resolve&quot;&gt;&lt;code&gt;resolve()&lt;/code&gt;&lt;/a&gt; would be to test whether a view would raise a &lt;code&gt;Http404&lt;/code&gt; error before redirecting to it:</source>
          <target state="translated">&lt;a href=&quot;#django.urls.resolve&quot;&gt; &lt;code&gt;resolve()&lt;/code&gt; の&lt;/a&gt;使用例の1つは、ビューがリダイレクトする前に &lt;code&gt;Http404&lt;/code&gt; エラーが発生するかどうかをテストすることです。</target>
        </trans-unit>
        <trans-unit id="17affb526021724b56b79a75409ec922fe1ee514" translate="yes" xml:space="preserve">
          <source>One small problem, though. It takes a lot of screen space to display all the fields for entering related &lt;code&gt;Choice&lt;/code&gt; objects. For that reason, Django offers a tabular way of displaying inline related objects. To use it, change the &lt;code&gt;ChoiceInline&lt;/code&gt; declaration to read:</source>
          <target state="translated">ただし、小さな問題が1つあります。関連する &lt;code&gt;Choice&lt;/code&gt; オブジェクトを入力するためのすべてのフィールドを表示するには、多くの画面スペースが必要です。そのため、Djangoはインライン関連オブジェクトを表形式で表示する方法を提供しています。これを使用するには、 &lt;code&gt;ChoiceInline&lt;/code&gt; 宣言を次のように変更します。</target>
        </trans-unit>
        <trans-unit id="463e554d2cf1d72ee789f287bd7cfb00f6a89d54" translate="yes" xml:space="preserve">
          <source>One solution is to disable server-side cursors for a connection in &lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; by setting &lt;a href=&quot;settings#std:setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS&quot;&gt;&lt;code&gt;DISABLE_SERVER_SIDE_CURSORS&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">1つの解決策は、&lt;a href=&quot;settings#std:setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS&quot;&gt; &lt;code&gt;DISABLE_SERVER_SIDE_CURSORS&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;True&lt;/code&gt; に設定して、&lt;a href=&quot;settings#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; の&lt;/a&gt;接続のサーバー側カーソルを無効にすることです。</target>
        </trans-unit>
        <trans-unit id="92c378607313029c98f29e172485bb93294cfa11" translate="yes" xml:space="preserve">
          <source>One thing is left to do. In an RSS feed, each &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; has a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt;. We need to tell the framework what data to put into those elements.</source>
          <target state="translated">やるべきことはあと1つです。RSSフィードでは、各 &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; に &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 、および &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; があります。これらの要素に入れるデータをフレームワークに伝える必要があります。</target>
        </trans-unit>
        <trans-unit id="64761a4b2513c0fea467c008774b2e8d461a2beb" translate="yes" xml:space="preserve">
          <source>One typical workflow in creating Django apps is to create models and get the admin sites up and running as fast as possible, so your staff (or clients) can start populating data. Then, develop the way data is presented to the public.</source>
          <target state="translated">Django アプリを作成する際の典型的なワークフローの一つは、モデルを作成し、できるだけ早く管理サイトを立ち上げ、スタッフ(またはクライアント)がデータの入力を開始できるようにすることです。次に、データを公開する方法を開発します。</target>
        </trans-unit>
        <trans-unit id="62b2c3ff1937b4b7f9fd3bcb172889cfa14560c7" translate="yes" xml:space="preserve">
          <source>One useful way to call &lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt;&lt;code&gt;ping_google()&lt;/code&gt;&lt;/a&gt; is from a model&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method:</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt; &lt;code&gt;ping_google()&lt;/code&gt; &lt;/a&gt;を呼び出す便利な方法の1つは、モデルの &lt;code&gt;save()&lt;/code&gt; メソッドからです。</target>
        </trans-unit>
        <trans-unit id="17eb63729cb4ca1e9175bfce2cb9b9d88cdf1052" translate="yes" xml:space="preserve">
          <source>One way to do this is to combine &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, so that the queryset for the paginated list of books can hang off the publisher found as the single object. In order to do this, we need to have two different querysets:</source>
          <target state="translated">これを行う1つの方法は、&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;と組み合わせて、ページ付けされた本のリストのクエリセットが単一のオブジェクトとして見つかった出版社からハングアップするようにすることです。これを行うには、2つの異なるクエリセットが必要です。</target>
        </trans-unit>
        <trans-unit id="0a1cc9054977d0a023d4d3b5f485eb8e86742a4b" translate="yes" xml:space="preserve">
          <source>One way to do this is to combine &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, so that the queryset for the paginated list of books can hang off the publisher found as the single object. In order to do this, we need to have two different querysets:</source>
          <target state="translated">One way to do this is to combine &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/ref/class-based-views/flattened-index/#ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt; with &lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;, so that the queryset for the paginated list of books can hang off the publisher found as the single object. In order to do this, we need to have two different querysets:</target>
        </trans-unit>
        <trans-unit id="41f303fa2fa76a8d5b84fa7acb2f90143da403df" translate="yes" xml:space="preserve">
          <source>One, you can make sure to run each untrusted variable through the &lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; filter (documented below), which converts potentially harmful HTML characters to unharmful ones. This was the default solution in Django for its first few years, but the problem is that it puts the onus on &lt;em&gt;you&lt;/em&gt;, the developer / template author, to ensure you&amp;rsquo;re escaping everything. It&amp;rsquo;s easy to forget to escape data.</source>
          <target state="translated">1つは、信頼できない変数を&lt;a href=&quot;builtins#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;フィルター（下記に記載）を介して実行し、有害な可能性のあるHTML文字を有害な文字に変換することです。これは最初の数年間のDjangoのデフォルトソリューションでしたが、問題は、すべてをエスケープすることを保証するために、開発者/テンプレートの作成者である&lt;em&gt;あなた&lt;/em&gt;に負担をかけることです。データをエスケープすることは忘れがちです。</target>
        </trans-unit>
        <trans-unit id="5e552a2e648dcc45b50e74d0e4c89fd9b2d22ab3" translate="yes" xml:space="preserve">
          <source>One-to-many relationships</source>
          <target state="translated">一対多の関係</target>
        </trans-unit>
        <trans-unit id="20ec6acfe79375c3d49a487621b6f11703727d27" translate="yes" xml:space="preserve">
          <source>One-to-one relationships</source>
          <target state="translated">一対一の関係</target>
        </trans-unit>
        <trans-unit id="4b68ab7517c53fd87db0b3a6835784386aa78fb7" translate="yes" xml:space="preserve">
          <source>One-to-one relationships are very similar to many-to-one relationships. If you define a &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; on your model, instances of that model will have access to the related object via an attribute of the model.</source>
          <target state="translated">1対1の関係は、多対1の関係とよく似ています。モデルに&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;を定義すると、そのモデルのインスタンスは、モデルの属性を介して関連オブジェクトにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="97b3481d82cdab92ba77fee20f5da98da43ecd1b" translate="yes" xml:space="preserve">
          <source>Only Python modules and packages are included in the package by default. To include additional files, we&amp;rsquo;ll need to create a &lt;code&gt;MANIFEST.in&lt;/code&gt; file. The setuptools docs referred to in the previous step discuss this file in more details. To include the templates, the &lt;code&gt;README.rst&lt;/code&gt; and our &lt;code&gt;LICENSE&lt;/code&gt; file, create a file &lt;code&gt;django-polls/MANIFEST.in&lt;/code&gt; with the following contents:</source>
          <target state="translated">デフォルトでは、Pythonモジュールとパッケージのみがパッケージに含まれています。追加のファイルを含めるには、 &lt;code&gt;MANIFEST.in&lt;/code&gt; ファイルを作成する必要があります。前の手順で参照したsetuptoolsのドキュメントでは、このファイルについて詳しく説明しています。テンプレート、 &lt;code&gt;README.rst&lt;/code&gt; 、および &lt;code&gt;LICENSE&lt;/code&gt; ファイルを含めるには、次の内容で &lt;code&gt;django-polls/MANIFEST.in&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="1fce148cd28a6d831801c9e33d3b8a3831a5e379" translate="yes" xml:space="preserve">
          <source>Only a few keys are required in the &lt;code&gt;ds_input&lt;/code&gt; dictionary to create a raster: &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;srid&lt;/code&gt;. All other parameters have default values (see the table below). The list of keys that can be passed in the &lt;code&gt;ds_input&lt;/code&gt; dictionary is closely related but not identical to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; properties. Many of the parameters are mapped directly to those properties; the others are described below.</source>
          <target state="translated">ラスターを作成するために &lt;code&gt;ds_input&lt;/code&gt; ディクショナリに必要なキーは、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;height&lt;/code&gt; 、および &lt;code&gt;srid&lt;/code&gt; のみです。他のすべてのパラメーターにはデフォルト値があります（以下の表を参照）。 &lt;code&gt;ds_input&lt;/code&gt; 辞書で渡すことができるキーのリストは密接に関連していますが、&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt;プロパティとは異なります。パラメータの多くはそれらのプロパティに直接マップされます。その他については以下で説明します。</target>
        </trans-unit>
        <trans-unit id="e7d519722edd8f91aa9627c3bc9de76db3f17444" translate="yes" xml:space="preserve">
          <source>Only commutative operators can be used in exclusion constraints.</source>
          <target state="translated">除外制約では、可換演算子のみを使用することができます。</target>
        </trans-unit>
        <trans-unit id="118c204498e41611d1aa64a9174ae0deab8590fa" translate="yes" xml:space="preserve">
          <source>Only fields of the model are reloaded from the database. Other database-dependent values such as annotations aren&amp;rsquo;t reloaded. Any &lt;a href=&quot;../utils#django.utils.functional.cached_property&quot;&gt;&lt;code&gt;@cached_property&lt;/code&gt;&lt;/a&gt; attributes aren&amp;rsquo;t cleared either.</source>
          <target state="translated">モデルのフィールドのみがデータベースからリロードされます。注釈など、データベースに依存する他の値は再ロードされません。どれ&lt;a href=&quot;../utils#django.utils.functional.cached_property&quot;&gt; &lt;code&gt;@cached_property&lt;/code&gt; の&lt;/a&gt;属性はどちらかクリアされません。</target>
        </trans-unit>
        <trans-unit id="81f771fd27be6e788932e7308fcda610d615c10d" translate="yes" xml:space="preserve">
          <source>Only languages listed in the &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting can be selected. If you want to restrict the language selection to a subset of provided languages (because your application doesn&amp;rsquo;t provide all those languages), set &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; to a list of languages. For example:</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;設定にリストされている言語のみを選択できます。言語の選択を提供された言語のサブセットに制限したい場合（アプリケーションがそれらのすべての言語を提供していないため）、&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt;を言語のリストに設定します。例えば：</target>
        </trans-unit>
        <trans-unit id="598d1d19ae95d2cec14e6d3d02561fe81bd52fae" translate="yes" xml:space="preserve">
          <source>Only one more thing to do: we need to tell the admin that &lt;code&gt;Question&lt;/code&gt; objects have an admin interface. To do this, open the &lt;code&gt;polls/admin.py&lt;/code&gt; file, and edit it to look like this:</source>
          <target state="translated">あともう1つだけ： &lt;code&gt;Question&lt;/code&gt; オブジェクトに管理インターフェースがあることを管理者に伝える必要があります。これを行うには、 &lt;code&gt;polls/admin.py&lt;/code&gt; ファイルを開き、次のように編集します。</target>
        </trans-unit>
        <trans-unit id="d187541e5c50bb85bbf53e7de2e2b853a43bb4df" translate="yes" xml:space="preserve">
          <source>Only set it to &lt;code&gt;False&lt;/code&gt; if you&amp;rsquo;re rendering non-HTML templates!</source>
          <target state="translated">HTML以外のテンプレートをレンダリングする場合のみ、 &lt;code&gt;False&lt;/code&gt; に設定してください！</target>
        </trans-unit>
        <trans-unit id="02223d043024f670b97c33914336f2eb06bc17fd" translate="yes" xml:space="preserve">
          <source>Only space between &lt;em&gt;tags&lt;/em&gt; is removed &amp;ndash; not space between tags and text. In this example, the space around &lt;code&gt;Hello&lt;/code&gt; won&amp;rsquo;t be stripped:</source>
          <target state="translated">&lt;em&gt;タグ&lt;/em&gt;間のスペースのみが削除され、タグとテキスト間のスペースは削除されません。この例では、 &lt;code&gt;Hello&lt;/code&gt; の周りのスペースは削除されません。</target>
        </trans-unit>
        <trans-unit id="cf315a07b04a81601a60855f71141828daa89ad4" translate="yes" xml:space="preserve">
          <source>Only support for PostgreSQL is implemented.</source>
          <target state="translated">PostgreSQLのみのサポートを実装しています。</target>
        </trans-unit>
        <trans-unit id="8a7ec474d6e2d23ebc63b6c63bb988c49dc019ef" translate="yes" xml:space="preserve">
          <source>Only supported for the &lt;code&gt;mysql&lt;/code&gt; backend (see the &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-charsets.html&quot;&gt;MySQL manual&lt;/a&gt; for details).</source>
          <target state="translated">&lt;code&gt;mysql&lt;/code&gt; バックエンドでのみサポートされます（詳細については、&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-charsets.html&quot;&gt;MySQLのマニュアル&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="7c0d14d34ab8a7955c088997331af3fa6a9e7049" translate="yes" xml:space="preserve">
          <source>Only used in the definition of ManyToManyFields on self. Consider the following model:</source>
          <target state="translated">selfのManyToManyFieldsの定義でのみ使用されます。以下のモデルを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="4acf1510b1d98d5e3adcf9076d95b782cf93d327" translate="yes" xml:space="preserve">
          <source>Only used when a custom intermediary model is specified. Django will normally determine which fields of the intermediary model to use in order to establish a many-to-many relationship automatically. However, consider the following models:</source>
          <target state="translated">カスタムの仲介モデルが指定されている場合にのみ使用されます。Django は通常、多対多の関係を自動的に構築するために、仲介モデルのどのフィールドを使用するかを決定します。しかし、以下のモデルを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="9254969541b35d72fc959e9b7fe870bcb83c672e" translate="yes" xml:space="preserve">
          <source>Open Geospatial Consortium, Inc., &lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;OpenGIS Simple Feature Specification For SQL&lt;/a&gt;.</source>
          <target state="translated">Open Geospatial Consortium、Inc.、&lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;OpenGIS Simple Feature Specification For SQL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="abacb099ec5118e6e55042c66b29d2709c4e6df5" translate="yes" xml:space="preserve">
          <source>Open or reopen the file (which also does &lt;code&gt;File.seek(0)&lt;/code&gt;). The &lt;code&gt;mode&lt;/code&gt; argument allows the same values as Python&amp;rsquo;s built-in &lt;a href=&quot;https://docs.python.org/3/library/functions.html#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイルを開くか、 &lt;code&gt;File.seek(0)&lt;/code&gt; 開きます（これによりFile.seek（0）も実行されます）。 &lt;code&gt;mode&lt;/code&gt; 引数は同じ値を許可するPythonの組み込みの&lt;a href=&quot;https://docs.python.org/3/library/functions.html#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3832cd1bf27026789b46ef8c2cbece9d54caa9de" translate="yes" xml:space="preserve">
          <source>Open transactions have a performance cost for your database server. To minimize this overhead, keep your transactions as short as possible. This is especially important if you&amp;rsquo;re using &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; in long-running processes, outside of Django&amp;rsquo;s request / response cycle.</source>
          <target state="translated">オープントランザクションには、データベースサーバーのパフォーマンスコストがあります。このオーバーヘッドを最小限に抑えるには、トランザクションをできるだけ短くしてください。これは、Djangoのリクエスト/レスポンスサイクル以外で、長時間実行されるプロセスで&lt;a href=&quot;#django.db.transaction.atomic&quot;&gt; &lt;code&gt;atomic()&lt;/code&gt; &lt;/a&gt;を使用している場合に特に重要です。</target>
        </trans-unit>
        <trans-unit id="32793e991ad0f2475e18136d291c51ab1d339516" translate="yes" xml:space="preserve">
          <source>Open your settings file (&lt;code&gt;mysite/settings.py&lt;/code&gt;, remember) and add a &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; option in the &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">設定ファイル（ &lt;code&gt;mysite/settings.py&lt;/code&gt; を覚えておいてください）を&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;設定にDIRSオプションを追加します。</target>
        </trans-unit>
        <trans-unit id="6434fe05c72675fd05c47cdbb933de7e31125e90" translate="yes" xml:space="preserve">
          <source>OpenGIS Consortium, Inc., &lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;Simple Feature Specification For SQL&lt;/a&gt;.</source>
          <target state="translated">OpenGIS Consortium、Inc.、&lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;SQLのシンプルな機能仕様&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9badfbd517d8be4261428821d0d24138f988f1ee" translate="yes" xml:space="preserve">
          <source>Opens or reopens the file associated with this instance in the specified &lt;code&gt;mode&lt;/code&gt;. Unlike the standard Python &lt;code&gt;open()&lt;/code&gt; method, it doesn&amp;rsquo;t return a file descriptor.</source>
          <target state="translated">このインスタンスに関連付けられているファイルを指定された &lt;code&gt;mode&lt;/code&gt; 開くか、再度開きます。標準のPython &lt;code&gt;open()&lt;/code&gt; メソッドとは異なり、ファイル記述子を返しません。</target>
        </trans-unit>
        <trans-unit id="0323b5e451ddf487ae0f9edb7081ee29301ba290" translate="yes" xml:space="preserve">
          <source>Opens the file given by &lt;code&gt;name&lt;/code&gt;. Note that although the returned file is guaranteed to be a &lt;code&gt;File&lt;/code&gt; object, it might actually be some subclass. In the case of remote file storage this means that reading/writing could be quite slow, so be warned.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; で指定されたファイルを開きます。返されるファイルは &lt;code&gt;File&lt;/code&gt; オブジェクトであることが保証されていますが、実際には一部のサブクラスである場合があります。リモートファイルストレージの場合、これは読み取り/書き込みがかなり遅くなる可能性があることを意味するため、警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="103728613a9cc06c0578fcde7fc71050f537ea45" translate="yes" xml:space="preserve">
          <source>Opera 10.5+</source>
          <target state="translated">オペラ10.5以上</target>
        </trans-unit>
        <trans-unit id="a1fdaa6b2a846c8fcf18d414bf8c61db610eda6a" translate="yes" xml:space="preserve">
          <source>Operations</source>
          <target state="translated">Operations</target>
        </trans-unit>
        <trans-unit id="03c6a5370c606a7007cc455f9ad4f55be771bfe8" translate="yes" xml:space="preserve">
          <source>Operations have a relatively simple API, and they&amp;rsquo;re designed so that you can easily write your own to supplement the built-in Django ones. The basic structure of an &lt;code&gt;Operation&lt;/code&gt; looks like this:</source>
          <target state="translated">オペレーションは比較的シンプルなAPIであり、組み込みのDjangoを補完する独自のAPIを簡単に作成できるように設計されています。 &lt;code&gt;Operation&lt;/code&gt; の基本構造は次のようになります。</target>
        </trans-unit>
        <trans-unit id="0242933f1377922941730d3a9a935c73e4996c91" translate="yes" xml:space="preserve">
          <source>Operators that return new &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">新しい返す演算子 &lt;code&gt;QuerySet&lt;/code&gt; Sを</target>
        </trans-unit>
        <trans-unit id="900a4c57a6781dc8aa8c7a72e161410e12278326" translate="yes" xml:space="preserve">
          <source>Optimizing PostgreSQL&amp;rsquo;s configuration</source>
          <target state="translated">PostgreSQLの構成の最適化</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="475f499a740fe5799b1c67d8e4e26cb243d985a8" translate="yes" xml:space="preserve">
          <source>Optional (&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;). 150 characters or fewer.</source>
          <target state="translated">オプション（&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt;）。150文字以下。</target>
        </trans-unit>
        <trans-unit id="e66aff119da5b74c8ec06d905b22607e760e1684" translate="yes" xml:space="preserve">
          <source>Optional (&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;). 30 characters or fewer.</source>
          <target state="translated">オプション（&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt;）。30文字以下。</target>
        </trans-unit>
        <trans-unit id="10e30e11eaa8f36beb627e1a0f319f0e7d46a4e7" translate="yes" xml:space="preserve">
          <source>Optional (&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank=True&lt;/code&gt;&lt;/a&gt;). Email address.</source>
          <target state="translated">オプション（&lt;a href=&quot;../models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank=True&lt;/code&gt; &lt;/a&gt;）。電子メールアドレス。</target>
        </trans-unit>
        <trans-unit id="f0d8694ad53a2924ebd7f6ff587227e39c0eaa32" translate="yes" xml:space="preserve">
          <source>Optional arguments</source>
          <target state="translated">オプションの引数</target>
        </trans-unit>
        <trans-unit id="9b6ba92e748f3335310f550931483cf88fec0fdb" translate="yes" xml:space="preserve">
          <source>Optional keyword arguments are:</source>
          <target state="translated">オプションのキーワード引数は</target>
        </trans-unit>
        <trans-unit id="742b85c136c1ca04e82668422d5efca1b119f047" translate="yes" xml:space="preserve">
          <source>Optional methods</source>
          <target state="translated">オプションのメソッド</target>
        </trans-unit>
        <trans-unit id="08ad86a9f1de732a056ed6b271a3dd4a1a66436a" translate="yes" xml:space="preserve">
          <source>Optional string. A unique identifier for the issue. Identifiers should follow the pattern &lt;code&gt;applabel.X001&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt; is one of the letters &lt;code&gt;CEWID&lt;/code&gt;, indicating the message severity (&lt;code&gt;C&lt;/code&gt; for criticals, &lt;code&gt;E&lt;/code&gt; for errors and so). The number can be allocated by the application, but should be unique within that application.</source>
          <target state="translated">オプションの文字列。問題の一意の識別子。識別子は、パターンに従う必要 &lt;code&gt;applabel.X001&lt;/code&gt; 、 &lt;code&gt;X&lt;/code&gt; は文字の一つである &lt;code&gt;CEWID&lt;/code&gt; をメッセージの重大度（示し、 &lt;code&gt;C&lt;/code&gt; クリティカルため、 &lt;code&gt;E&lt;/code&gt; エラーのためなどの）。番号はアプリケーションによって割り当てることができますが、そのアプリケーション内で一意である必要があります。</target>
        </trans-unit>
        <trans-unit id="b66038a3c02f9a96da2de4ad83dde3b6fd772cf3" translate="yes" xml:space="preserve">
          <source>Optional. A longer formal identifier for the user such as their full name. If implemented, this appears alongside the username in an object&amp;rsquo;s history in &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプション。フルネームなど、ユーザーの長い正式な識別子。実装されている場合、これは&lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; の&lt;/a&gt;オブジェクトの履歴でユーザー名と一緒に表示されます。</target>
        </trans-unit>
        <trans-unit id="061866f2e6c0cdfec2a4982a7d90d650093a48e7" translate="yes" xml:space="preserve">
          <source>Optional. A regular expression, as a string, that &lt;a href=&quot;#django.db.models.FilePathField&quot;&gt;&lt;code&gt;FilePathField&lt;/code&gt;&lt;/a&gt; will use to filter filenames. Note that the regex will be applied to the base filename, not the full path. Example: &lt;code&gt;&quot;foo.*\.txt$&quot;&lt;/code&gt;, which will match a file called &lt;code&gt;foo23.txt&lt;/code&gt; but not &lt;code&gt;bar.txt&lt;/code&gt; or &lt;code&gt;foo23.png&lt;/code&gt;.</source>
          <target state="translated">オプション。&lt;a href=&quot;#django.db.models.FilePathField&quot;&gt; &lt;code&gt;FilePathField&lt;/code&gt; &lt;/a&gt;がファイル名のフィルタリングに使用する文字列としての正規表現。正規表現はフルパスではなくベースファイル名に適用されることに注意してください。例： &lt;code&gt;&quot;foo.*\.txt$&quot;&lt;/code&gt; 、これは &lt;code&gt;foo23.txt&lt;/code&gt; というファイルに一致しますが、 &lt;code&gt;bar.txt&lt;/code&gt; または &lt;code&gt;foo23.png&lt;/code&gt; には一致しません。</target>
        </trans-unit>
        <trans-unit id="3e29ee6bb955883371605aef97a8811a60e6c87c" translate="yes" xml:space="preserve">
          <source>Optional. A short, informal identifier for the user such as their first name. If implemented, this replaces the username in the greeting to the user in the header of &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オプション。名など、ユーザーの短い非公式の識別子。実装されている場合、これは&lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;のヘッダーにあるユーザーへの挨拶のユーザー名を置き換えます。</target>
        </trans-unit>
        <trans-unit id="51a658020e63dbe321aa155cd99501c0cf557082" translate="yes" xml:space="preserve">
          <source>Optional. An object providing context for the message (for example, the model where the problem was discovered). The object should be a model, field, or manager or any other object that defines a &lt;code&gt;__str__()&lt;/code&gt; method. The method is used while reporting all messages and its result precedes the message.</source>
          <target state="translated">オプション。メッセージのコンテキストを提供するオブジェクト（たとえば、問題が発見されたモデル）。オブジェクトは、モデル、フィールド、マネージャー、または &lt;code&gt;__str__()&lt;/code&gt; メソッドを定義するその他のオブジェクトである必要があります。このメソッドは、すべてのメッセージを報告するときに使用され、その結果はメッセージの前になります。</target>
        </trans-unit>
        <trans-unit id="1936ff6bbb449f848f49c6ae78c3aa3aa37a355e" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;False&lt;/code&gt;. Specifies whether all subdirectories of &lt;a href=&quot;#django.db.models.FilePathField.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; should be included</source>
          <target state="translated">オプション。 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; のいずれか。デフォルトは &lt;code&gt;False&lt;/code&gt; です。&lt;a href=&quot;#django.db.models.FilePathField.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;すべてのサブディレクトリを含めるかどうかを指定します</target>
        </trans-unit>
        <trans-unit id="c6efc47fa95924bfdc447bff456d7202911619d1" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;False&lt;/code&gt;. Specifies whether folders in the specified location should be included. Either this or &lt;a href=&quot;#django.db.models.FilePathField.allow_files&quot;&gt;&lt;code&gt;allow_files&lt;/code&gt;&lt;/a&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">オプション。 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; のいずれか。デフォルトは &lt;code&gt;False&lt;/code&gt; です。指定した場所のフォルダを含めるかどうかを指定します。thisまたは&lt;a href=&quot;#django.db.models.FilePathField.allow_files&quot;&gt; &lt;code&gt;allow_files&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;True&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="859a13f143ebceeae06636e103999ba77f0b08f3" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;False&lt;/code&gt;. Specifies whether folders in the specified location should be included. Either this or &lt;a href=&quot;#django.forms.FilePathField.allow_files&quot;&gt;&lt;code&gt;allow_files&lt;/code&gt;&lt;/a&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">オプション。 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; のいずれか。デフォルトは &lt;code&gt;False&lt;/code&gt; です。指定した場所のフォルダを含めるかどうかを指定します。thisまたは&lt;a href=&quot;#django.forms.FilePathField.allow_files&quot;&gt; &lt;code&gt;allow_files&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;True&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="4c8bf189c542c692617e3001bd9a6dfe770462db" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;True&lt;/code&gt;. Specifies whether files in the specified location should be included. Either this or &lt;a href=&quot;#django.db.models.FilePathField.allow_folders&quot;&gt;&lt;code&gt;allow_folders&lt;/code&gt;&lt;/a&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">オプション。 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; のいずれか。デフォルトは &lt;code&gt;True&lt;/code&gt; です。指定した場所にあるファイルを含めるかどうかを指定します。 thisまたは&lt;a href=&quot;#django.db.models.FilePathField.allow_folders&quot;&gt; &lt;code&gt;allow_folders&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;True&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f6a3952c4ecfc5610a215c9e91c6fd5fd72b1ac0" translate="yes" xml:space="preserve">
          <source>Optional. Either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Default is &lt;code&gt;True&lt;/code&gt;. Specifies whether files in the specified location should be included. Either this or &lt;a href=&quot;#django.forms.FilePathField.allow_folders&quot;&gt;&lt;code&gt;allow_folders&lt;/code&gt;&lt;/a&gt; must be &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">オプション。 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; のいずれか。デフォルトは &lt;code&gt;True&lt;/code&gt; です。指定した場所にあるファイルを含めるかどうかを指定します。 thisまたは&lt;a href=&quot;#django.forms.FilePathField.allow_folders&quot;&gt; &lt;code&gt;allow_folders&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;True&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="fb4e88563898cfc6b1e24fe4d3ab342226f2930f" translate="yes" xml:space="preserve">
          <source>Optional. Use this when you don&amp;rsquo;t want to have a last page with very few items. If the last page would normally have a number of items less than or equal to &lt;code&gt;orphans&lt;/code&gt;, then those items will be added to the previous page (which becomes the last page) instead of leaving the items on a page by themselves. For example, with 23 items, &lt;code&gt;per_page=10&lt;/code&gt;, and &lt;code&gt;orphans=3&lt;/code&gt;, there will be two pages; the first page with 10 items and the second (and last) page with 13 items. &lt;code&gt;orphans&lt;/code&gt; defaults to zero, which means pages are never combined and the last page may have one item.</source>
          <target state="translated">オプション。アイテムの少ない最終ページが必要ない場合に使用します。通常、最後のページに &lt;code&gt;orphans&lt;/code&gt; 以下の数のアイテムがある場合、それらのアイテムは、ページ上にアイテムを残すのではなく、前のページ（最後のページ）に追加されます。たとえば、23項目、 &lt;code&gt;per_page=10&lt;/code&gt; 、および &lt;code&gt;orphans=3&lt;/code&gt; の場合、2ページになります。最初のページは10アイテム、2番目（および最後）のページは13アイテムです。 &lt;code&gt;orphans&lt;/code&gt; のデフォルトは0です。これは、ページが結合されることはなく、最後のページに1つのアイテムがある場合があることを意味します。</target>
        </trans-unit>
        <trans-unit id="14c1bff36682bc530c11e77aee6ae2707c4b47f6" translate="yes" xml:space="preserve">
          <source>Optional. Whether or not the first page is allowed to be empty. If &lt;code&gt;False&lt;/code&gt; and &lt;code&gt;object_list&lt;/code&gt; is empty, then an &lt;code&gt;EmptyPage&lt;/code&gt; error will be raised.</source>
          <target state="translated">オプション。最初のページを空にするかどうか。場合 &lt;code&gt;False&lt;/code&gt; と &lt;code&gt;object_list&lt;/code&gt; 空である、そして &lt;code&gt;EmptyPage&lt;/code&gt; のエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="0f0162cab2f0f669c986db914fb247821cb1ec00" translate="yes" xml:space="preserve">
          <source>Or ask for the average rating of all the books written by author(s) we have on file:</source>
          <target state="translated">または、私たちがファイルに保存しているすべての著者が書いた本の平均的な評価をお尋ねください。</target>
        </trans-unit>
        <trans-unit id="3e165d6eeab75c3a82d3fe0f1d27fa4aa66617e4" translate="yes" xml:space="preserve">
          <source>Or if &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;staticfiles&lt;/code&gt;&lt;/a&gt; is configured using the &lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">または、&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;staticfiles&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;../../ref/contrib/staticfiles#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt; &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; &lt;/a&gt;を使用して構成されている場合：</target>
        </trans-unit>
        <trans-unit id="25621e679324af50dad4ec149022a79ed2b71273" translate="yes" xml:space="preserve">
          <source>Or if only some variables should be escaped, you can use:</source>
          <target state="translated">あるいは、一部の変数だけをエスケープする必要がある場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="c0c61c22e60e27ae3fc6d5b7070d0cf89978aee2" translate="yes" xml:space="preserve">
          <source>Or if the field isn&amp;rsquo;t declared directly on the form (such as model form fields), you can use the &lt;a href=&quot;api#django.forms.Form.fields&quot;&gt;&lt;code&gt;Form.fields&lt;/code&gt;&lt;/a&gt; attribute:</source>
          <target state="translated">または、フィールドがフォームで直接宣言されていない場合（モデルフォームフィールドなど）、&lt;a href=&quot;api#django.forms.Form.fields&quot;&gt; &lt;code&gt;Form.fields&lt;/code&gt; &lt;/a&gt;属性を使用できます。</target>
        </trans-unit>
        <trans-unit id="8a5c20782dc46697c9459b8ca83e94d56d6e36da" translate="yes" xml:space="preserve">
          <source>Or in Python code:</source>
          <target state="translated">もしくはPythonのコードで。</target>
        </trans-unit>
        <trans-unit id="51f1927e73396518f1297b2575004e5095f6b52c" translate="yes" xml:space="preserve">
          <source>Or it can be written as a class whose instances are callable, like this:</source>
          <target state="translated">あるいは、このようにインスタンスが呼び出し可能なクラスとして書くこともできます。</target>
        </trans-unit>
        <trans-unit id="628dfe73ba7840dc380d070dd15676af902666dd" translate="yes" xml:space="preserve">
          <source>Or on a field level:</source>
          <target state="translated">もしくは現場レベルで。</target>
        </trans-unit>
        <trans-unit id="a93f0f9fb53a117410c2e9ad2f200b2f307fcf27" translate="yes" xml:space="preserve">
          <source>Or to allow only some active users to log in:</source>
          <target state="translated">もしくは、一部のアクティブユーザーだけがログインできるようにする。</target>
        </trans-unit>
        <trans-unit id="95e5d3f75703413a8b79b401fe7d0d695c3cda3c" translate="yes" xml:space="preserve">
          <source>Or to call &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; when applicable to reduce the number of queries even further:</source>
          <target state="translated">または、必要に&lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;を呼び出して、クエリの数をさらに削減します。</target>
        </trans-unit>
        <trans-unit id="96e4c7d2f9d2a2b030616fa913c4e00422de6f1d" translate="yes" xml:space="preserve">
          <source>Or to run fast tests and the core one (even though it&amp;rsquo;s slow):</source>
          <target state="translated">または、高速なテストと主要なテストを実行するには（低速ですが）：</target>
        </trans-unit>
        <trans-unit id="93b807bbd527363221a89cbd863d6640212fda60" translate="yes" xml:space="preserve">
          <source>Or use a common ancestor to hold the &lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt;. This requires using an explicit &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; from each parent model to the common ancestor to avoid a clash between the fields that are automatically generated and inherited by the child:</source>
          <target state="translated">または、共通の祖先を使用して&lt;a href=&quot;../../ref/models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;を保持します。これには、各親モデルから共通の祖先に明示的な&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;を使用して、子によって自動的に生成および継承されるフィールド間の衝突を回避する必要があります。</target>
        </trans-unit>
        <trans-unit id="1b076f6cdc8de07a4839942de5e78d29d923fbf6" translate="yes" xml:space="preserve">
          <source>Or you can construct one from a Python string like this:</source>
          <target state="translated">あるいは、以下のようにPythonの文字列から構築することもできます。</target>
        </trans-unit>
        <trans-unit id="d2aeed12399e9670e50e9f1d89661b30754da3a5" translate="yes" xml:space="preserve">
          <source>Or you can use &lt;code&gt;no-python-format&lt;/code&gt; so that all percent signs are treated as literals:</source>
          <target state="translated">または、すべてのパーセント記号がリテラルとして扱われるように、 &lt;code&gt;no-python-format&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="789685f9c51dad66c9d22df1380fb36080ed3822" translate="yes" xml:space="preserve">
          <source>Or you could run it directly on a production or staging deployment to verify that the correct settings are in use (omitting &lt;code&gt;--settings&lt;/code&gt;). You could even make it part of your integration test suite.</source>
          <target state="translated">または、本番環境またはステージングデプロイメントで直接実行して、正しい設定が使用されていることを確認することもできます（ &lt;code&gt;--settings&lt;/code&gt; を省略）。統合テストスイートの一部にすることもできます。</target>
        </trans-unit>
        <trans-unit id="b617cd1ba98d84e1130d043eaeefe7d8402eb25f" translate="yes" xml:space="preserve">
          <source>Or you may alter the user&amp;rsquo;s role from the SQL shell (assuming this is done from an existing superuser account):</source>
          <target state="translated">または、SQLシェルからユーザーの役割を変更することもできます（これが既存のスーパーユーザーアカウントから行われていると仮定）。</target>
        </trans-unit>
        <trans-unit id="05b1d66bf715e37c24910768d027c42362464ed6" translate="yes" xml:space="preserve">
          <source>Or, if &lt;code&gt;country&lt;/code&gt; is a field with &lt;code&gt;choices&lt;/code&gt;, it will have a &lt;a href=&quot;../models/instances#django.db.models.Model.get_FOO_display&quot;&gt;&lt;code&gt;get_FOO_display()&lt;/code&gt;&lt;/a&gt; method available as an attribute, allowing you to group on the display string rather than the &lt;code&gt;choices&lt;/code&gt; key:</source>
          <target state="translated">場合は、 &lt;code&gt;country&lt;/code&gt; 持つフィールドで &lt;code&gt;choices&lt;/code&gt; 、それはあります&lt;a href=&quot;../models/instances#django.db.models.Model.get_FOO_display&quot;&gt; &lt;code&gt;get_FOO_display()&lt;/code&gt; &lt;/a&gt;表示文字列ではなく、上のグループにあなたをできるように、属性として利用できる方法を &lt;code&gt;choices&lt;/code&gt; キー：</target>
        </trans-unit>
        <trans-unit id="ce3b6a8261b1b6c88c0c24b29441ab053c10b703" translate="yes" xml:space="preserve">
          <source>Or, more succinctly, you can decorate the class instead and pass the name of the method to be decorated as the keyword argument &lt;code&gt;name&lt;/code&gt;:</source>
          <target state="translated">または、もっと簡単に言うと、代わりにクラスを装飾して、装飾するメソッドの名前をキーワード引数 &lt;code&gt;name&lt;/code&gt; として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="8a1681e612a2025087b703fdf1f8f617e506b053" translate="yes" xml:space="preserve">
          <source>Oracle</source>
          <target state="translated">Oracle</target>
        </trans-unit>
        <trans-unit id="bd1334b0d5dcd9f25f6b9dd58e5744953cdbce11" translate="yes" xml:space="preserve">
          <source>Oracle Database does not support storing JSON scalar values. Only JSON objects and arrays (represented in Python using &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;) are supported.</source>
          <target state="translated">Oracle Database does not support storing JSON scalar values. Only JSON objects and arrays (represented in Python using &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;) are supported.</target>
        </trans-unit>
        <trans-unit id="24c906abad94128562e1df0b2509b20fb80ebc90" translate="yes" xml:space="preserve">
          <source>Oracle SQL equivalent:</source>
          <target state="translated">Oracle SQLに相当する。</target>
        </trans-unit>
        <trans-unit id="3b4a2c983578c980d5fb7441f41c11a4556cc78d" translate="yes" xml:space="preserve">
          <source>Oracle and &lt;a href=&quot;../databases#postgresql-server-side-cursors&quot;&gt;PostgreSQL&lt;/a&gt; use server-side cursors to stream results from the database without loading the entire result set into memory.</source>
          <target state="translated">Oracleと&lt;a href=&quot;../databases#postgresql-server-side-cursors&quot;&gt;PostgreSQL&lt;/a&gt;は、サーバー側カーソルを使用して、結果セット全体をメモリにロードせずにデータベースから結果をストリーミングします。</target>
        </trans-unit>
        <trans-unit id="9484b2a00b52ee8efc0908b6cfa8ca325dba0bd8" translate="yes" xml:space="preserve">
          <source>Oracle and SQLite</source>
          <target state="translated">オラクルとSQLite</target>
        </trans-unit>
        <trans-unit id="b7cec2eeafd5ab234afeacc8d167e821f3308189" translate="yes" xml:space="preserve">
          <source>Oracle does not support partial indexes. Instead, partial indexes can be emulated using functional indexes. Use a &lt;a href=&quot;../../topics/migrations&quot;&gt;migration&lt;/a&gt; to add the index using &lt;a href=&quot;../migration-operations#django.db.migrations.operations.RunSQL&quot;&gt;&lt;code&gt;RunSQL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Oracleは部分インデックスをサポートしていません。代わりに、部分インデックスは、機能インデックスを使用してエミュレートできます。&lt;a href=&quot;../../topics/migrations&quot;&gt;移行&lt;/a&gt;を使用し、&lt;a href=&quot;../migration-operations#django.db.migrations.operations.RunSQL&quot;&gt; &lt;code&gt;RunSQL&lt;/code&gt; &lt;/a&gt;を使用してインデックスを追加します。</target>
        </trans-unit>
        <trans-unit id="9f60ec0d1bb6250568212204c04dc28c3ae6c5b7" translate="yes" xml:space="preserve">
          <source>Oracle doesn&amp;rsquo;t support bitwise XOR operation.</source>
          <target state="translated">Oracle doesn&amp;rsquo;t support bitwise XOR operation.</target>
        </trans-unit>
        <trans-unit id="2bb858c0c3c56c066673baa7ce0106b1b7e5aa94" translate="yes" xml:space="preserve">
          <source>Oracle doesn&amp;rsquo;t support the &lt;code&gt;SHA224&lt;/code&gt; function.</source>
          <target state="translated">Oracleは &lt;code&gt;SHA224&lt;/code&gt; 機能をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="560221169f9cab89c0441238ad0defe5bfa95fb8" translate="yes" xml:space="preserve">
          <source>Oracle imposes a name length limit of 30 characters. To accommodate this, the backend truncates database identifiers to fit, replacing the final four characters of the truncated name with a repeatable MD5 hash value. Additionally, the backend turns database identifiers to all-uppercase.</source>
          <target state="translated">オラクルは名前の長さを30文字に制限しています。これに対応するために、バックエンドはデータベースの識別子を切り詰め、切り詰められた名前の最後の4文字を繰り返し可能なMD5ハッシュ値で置き換えます。さらに、バックエンドはデータベースの識別子をすべて大文字に変換します。</target>
        </trans-unit>
        <trans-unit id="c0d228d153ffc5d5fa61bcb753bb50f0393cd1ea" translate="yes" xml:space="preserve">
          <source>Oracle notes</source>
          <target state="translated">オラクルノート</target>
        </trans-unit>
        <trans-unit id="33a07706252bf9e24da2916db3db3060aab7c186" translate="yes" xml:space="preserve">
          <source>Oracle support was added.</source>
          <target state="translated">オラクルのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="fad4910fc509879ef081d844fda3726f6b14c55c" translate="yes" xml:space="preserve">
          <source>Oracle users</source>
          <target state="translated">オラクルユーザー</target>
        </trans-unit>
        <trans-unit id="3507f061e1f240a2a4bc257e26a155bc7a8a45a2" translate="yes" xml:space="preserve">
          <source>Oracle users, refer to the &lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/index.html&quot;&gt;Oracle manual&lt;/a&gt; for details on how to set (&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/choosing-character-set.html&quot;&gt;section 2&lt;/a&gt;) or alter (&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/character-set-migration.html&quot;&gt;section 11&lt;/a&gt;) the database character set encoding.</source>
          <target state="translated">Oracleユーザーの場合、データベースの文字セットエンコーディングを設定（&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/choosing-character-set.html&quot;&gt;セクション2&lt;/a&gt;）または変更（&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/character-set-migration.html&quot;&gt;セクション11&lt;/a&gt;）する方法の詳細については、&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/index.html&quot;&gt;Oracleのマニュアル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="296a5959a53a3acc498b705e649dc5c5ed628ae7" translate="yes" xml:space="preserve">
          <source>Oracle: no requirements (see &lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/datetime-data-types-and-time-zone-support.html#GUID-805AB986-DE12-4FEA-AF56-5AABCD2132DF&quot;&gt;Choosing a Time Zone File&lt;/a&gt;).</source>
          <target state="translated">Oracle：要件なし（&lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/nlspg/datetime-data-types-and-time-zone-support.html#GUID-805AB986-DE12-4FEA-AF56-5AABCD2132DF&quot;&gt;タイムゾーンファイルの選択を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="30d87136b62cc92241cf688437d6474a9f92bac6" translate="yes" xml:space="preserve">
          <source>Order in which tests are executed</source>
          <target state="translated">テストを実行する順序</target>
        </trans-unit>
        <trans-unit id="420c74ea5a94142dc2e8ddc45403f850816df75c" translate="yes" xml:space="preserve">
          <source>Order of &lt;code&gt;MIDDLEWARE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MIDDLEWARE&lt;/code&gt; 注文</target>
        </trans-unit>
        <trans-unit id="55995aea917745e5b9c1538926b64f813438d41b" translate="yes" xml:space="preserve">
          <source>Order of &lt;code&gt;annotate()&lt;/code&gt; and &lt;code&gt;filter()&lt;/code&gt; clauses</source>
          <target state="translated">&lt;code&gt;annotate()&lt;/code&gt; および &lt;code&gt;filter()&lt;/code&gt; 句の順序</target>
        </trans-unit>
        <trans-unit id="7d2f7827be2e56452ab9e1eae8df3e8b6144bea7" translate="yes" xml:space="preserve">
          <source>Order of &lt;code&gt;annotate()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; clauses</source>
          <target state="translated">&lt;code&gt;annotate()&lt;/code&gt; および &lt;code&gt;values()&lt;/code&gt; 句の順序</target>
        </trans-unit>
        <trans-unit id="8e3feffbf3af227c58c043b37683f4707ea88216" translate="yes" xml:space="preserve">
          <source>Order of assets</source>
          <target state="translated">資産の順番</target>
        </trans-unit>
        <trans-unit id="991d0fbf1a20045f117c183786a7bc2bd16ca132" translate="yes" xml:space="preserve">
          <source>Order of execution</source>
          <target state="translated">執行順序</target>
        </trans-unit>
        <trans-unit id="db6e3d6df8111bad6222030723cf15a80b8e40d6" translate="yes" xml:space="preserve">
          <source>Ordering and pagination of the results are controlled by the related &lt;code&gt;ModelAdmin&lt;/code&gt;&amp;rsquo;s &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_ordering&quot;&gt;&lt;code&gt;get_ordering()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_paginator&quot;&gt;&lt;code&gt;get_paginator()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">結果の順序付けとページ付けは、関連する &lt;code&gt;ModelAdmin&lt;/code&gt; の&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_ordering&quot;&gt; &lt;code&gt;get_ordering()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_paginator&quot;&gt; &lt;code&gt;get_paginator()&lt;/code&gt; &lt;/a&gt;メソッドによって制御されます。</target>
        </trans-unit>
        <trans-unit id="005de91ef7aac968fb5cac1b25907b93799f647f" translate="yes" xml:space="preserve">
          <source>Ordering is not a free operation. Each field you add to the ordering incurs a cost to your database. Each foreign key you add will implicitly include all of its default orderings as well.</source>
          <target state="translated">発注は自由な操作ではありません。発注に追加する各フィールドは、データベースにコストがかかります。あなたが追加した各外部キーには、暗黙のうちにすべてのデフォルトの順序付けも含まれます。</target>
        </trans-unit>
        <trans-unit id="8b5102222646eeb276b5e810050c372aa24580a7" translate="yes" xml:space="preserve">
          <source>Ordering is not free; each field to order by is an operation the database must perform. If a model has a default ordering (&lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;Meta.ordering&lt;/code&gt;&lt;/a&gt;) and you don&amp;rsquo;t need it, remove it on a &lt;code&gt;QuerySet&lt;/code&gt; by calling &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; with no parameters.</source>
          <target state="translated">注文は無料ではありません。並べ替える各フィールドは、データベースが実行する必要のある操作です。モデルは、デフォルトの順序（ある場合は&lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;Meta.ordering&lt;/code&gt; を&lt;/a&gt;）、あなたがそれを必要としない、でそれを削除する &lt;code&gt;QuerySet&lt;/code&gt; を呼び出すことによって&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;パラメータなしで。</target>
        </trans-unit>
        <trans-unit id="53af4c39205242aabe13f143571457f5791a2efe" translate="yes" xml:space="preserve">
          <source>Ordering using &lt;a href=&quot;#django.contrib.admin.ModelAdmin.ordering&quot;&gt;&lt;code&gt;ModelAdmin.ordering&lt;/code&gt;&lt;/a&gt; may cause performance problems as sorting on a large queryset will be slow.</source>
          <target state="translated">大規模な&lt;a href=&quot;#django.contrib.admin.ModelAdmin.ordering&quot;&gt; &lt;code&gt;ModelAdmin.ordering&lt;/code&gt; &lt;/a&gt;並べ替えは低速になるため、ModelAdmin.orderingを使用して順序付けすると、パフォーマンスの問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="170b53da47c53a430863bf01d78e2bd103f629f3" translate="yes" xml:space="preserve">
          <source>Ordinarily, annotations are generated on a per-object basis - an annotated &lt;code&gt;QuerySet&lt;/code&gt; will return one result for each object in the original &lt;code&gt;QuerySet&lt;/code&gt;. However, when a &lt;code&gt;values()&lt;/code&gt; clause is used to constrain the columns that are returned in the result set, the method for evaluating annotations is slightly different. Instead of returning an annotated result for each result in the original &lt;code&gt;QuerySet&lt;/code&gt;, the original results are grouped according to the unique combinations of the fields specified in the &lt;code&gt;values()&lt;/code&gt; clause. An annotation is then provided for each unique group; the annotation is computed over all members of the group.</source>
          <target state="translated">通常、アノテーションはオブジェクトごとに生成されます。アノテーション付きの &lt;code&gt;QuerySet&lt;/code&gt; は、元の &lt;code&gt;QuerySet&lt;/code&gt; のオブジェクトごとに1つの結果を返します。ただし、 &lt;code&gt;values()&lt;/code&gt; 句を使用して結果セットで返される列を制約する場合、注釈を評価する方法は少し異なります。元の &lt;code&gt;QuerySet&lt;/code&gt; の結果ごとに注釈付きの結果を返す代わりに、 &lt;code&gt;values()&lt;/code&gt; 句で指定されたフィールドの一意の組み合わせに従って元の結果がグループ化されます。次に、一意のグループごとに注釈が提供されます。アノテーションはグループのすべてのメンバーに対して計算されます。</target>
        </trans-unit>
        <trans-unit id="3f10f78534f7589d00e4f60b98f5edf1e048c4d4" translate="yes" xml:space="preserve">
          <source>Ordinarily, serialized data for &lt;code&gt;Book&lt;/code&gt; would use an integer to refer to the author. For example, in JSON, a Book might be serialized as:</source>
          <target state="translated">通常、 &lt;code&gt;Book&lt;/code&gt; のシリアル化されたデータは、作成者を参照するために整数を使用します。たとえば、JSONでは、Bookは次のようにシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="16141546793a331563f3f2fdc4d7dcbc40757661" translate="yes" xml:space="preserve">
          <source>Organization of code related to specific HTTP methods (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc.) can be addressed by separate methods instead of conditional branching.</source>
          <target state="translated">特定のHTTPメソッド（ &lt;code&gt;GET&lt;/code&gt; 、 &lt;code&gt;POST&lt;/code&gt; など）に関連するコードの編成は、条件付き分岐の代わりに個別のメソッドで対処できます。</target>
        </trans-unit>
        <trans-unit id="6d31d09863416a43257272008777412de3dc0343" translate="yes" xml:space="preserve">
          <source>Organizing models in a package</source>
          <target state="translated">モデルをパッケージで整理する</target>
        </trans-unit>
        <trans-unit id="55da83428e96e3bf49eebf44fdc2f8c182ddbf21" translate="yes" xml:space="preserve">
          <source>Organizing templates</source>
          <target state="translated">整理テンプレート</target>
        </trans-unit>
        <trans-unit id="14447665d4c2d8f9f315b725d8b973ebb151e2c5" translate="yes" xml:space="preserve">
          <source>Origin API and 3rd-party integration</source>
          <target state="translated">Origin APIとサードパーティの統合</target>
        </trans-unit>
        <trans-unit id="6cf7b1361d8726852a7325f31ec28d0d2e4f7221" translate="yes" xml:space="preserve">
          <source>Origin only: send only the &amp;ldquo;origin&amp;rdquo; in the referrer. The origin consists of the scheme, host and (optionally) port number. For example, if the user is visiting &lt;code&gt;https://example.com/page.html&lt;/code&gt;, the origin would be &lt;code&gt;https://example.com/&lt;/code&gt;.</source>
          <target state="translated">オリジンのみ：リファラーの「オリジン」のみを送信します。オリジンは、スキーム、ホスト、および（オプションで）ポート番号で構成されます。たとえば、ユーザーが &lt;code&gt;https://example.com/page.html&lt;/code&gt; にアクセスしている場合、オリジンは &lt;code&gt;https://example.com/&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="f6c8bcec7b648c9760b1a9ea6708ae59737c716c" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;QuerySet&lt;/code&gt; methods</source>
          <target state="translated">その他の &lt;code&gt;QuerySet&lt;/code&gt; メソッド</target>
        </trans-unit>
        <trans-unit id="65f29d4c86bb4f978641051185ab0c5b61b9d448" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;django.security&lt;/code&gt; loggers not based on &lt;code&gt;SuspiciousOperation&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;SuspiciousOperation&lt;/code&gt; に基づいていない他の &lt;code&gt;django.security&lt;/code&gt; ロガーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d1ef4006e149656d7817ee292efc3130a7537e8a" translate="yes" xml:space="preserve">
          <source>Other Helpers</source>
          <target state="translated">その他のヘルパー</target>
        </trans-unit>
        <trans-unit id="db3716ee8a50c03cd8e126dc59e145dc9267c1af" translate="yes" xml:space="preserve">
          <source>Other Properties &amp;amp; Methods</source>
          <target state="translated">その他のプロパティとメソッド</target>
        </trans-unit>
        <trans-unit id="6e2191d6b97ca844ba9c5454d6d85c08f1e9f2b8" translate="yes" xml:space="preserve">
          <source>Other add-ons</source>
          <target state="translated">その他のアドオン</target>
        </trans-unit>
        <trans-unit id="d042bb243a9d93f7d217c6e5a0c1a49c971c43e7" translate="yes" xml:space="preserve">
          <source>Other attributes</source>
          <target state="translated">その他の属性</target>
        </trans-unit>
        <trans-unit id="8f0808417c4e94d8894a482d97d0418503902abe" translate="yes" xml:space="preserve">
          <source>Other authentication sources</source>
          <target state="translated">その他の認証ソース</target>
        </trans-unit>
        <trans-unit id="ef306d3af22afdd366097a5c56a90706f4ac8bb7" translate="yes" xml:space="preserve">
          <source>Other backends store datetimes without time zone information. If you switch from &lt;code&gt;USE_TZ = False&lt;/code&gt; to &lt;code&gt;USE_TZ = True&lt;/code&gt;, you must convert your data from local time to UTC &amp;ndash; which isn&amp;rsquo;t deterministic if your local time has DST.</source>
          <target state="translated">他のバックエンドはタイムゾーン情報なしで日時を保存します。 &lt;code&gt;USE_TZ = False&lt;/code&gt; から &lt;code&gt;USE_TZ = True&lt;/code&gt; に切り替える場合は、データを現地時間からUTCに変換する必要があります。これは、現地時間がDSTの場合は確定的ではありません。</target>
        </trans-unit>
        <trans-unit id="aa6d8caad589ade3266bf1e83ffb4c334fa9991d" translate="yes" xml:space="preserve">
          <source>Other block tags (for example &lt;code&gt;{% for %}&lt;/code&gt; or &lt;code&gt;{% if %}&lt;/code&gt;) are not allowed inside a &lt;code&gt;blocktrans&lt;/code&gt; tag.</source>
          <target state="translated">他のブロックタグ（たとえば、 &lt;code&gt;{% for %}&lt;/code&gt; または &lt;code&gt;{% if %}&lt;/code&gt; ）は、 &lt;code&gt;blocktrans&lt;/code&gt; タグ内では許可されません。</target>
        </trans-unit>
        <trans-unit id="9544b314eb0862d13316242019544705bef53896" translate="yes" xml:space="preserve">
          <source>Other block tags (for example &lt;code&gt;{% for %}&lt;/code&gt; or &lt;code&gt;{% if %}&lt;/code&gt;) are not allowed inside a &lt;code&gt;blocktranslate&lt;/code&gt; tag.</source>
          <target state="translated">Other block tags (for example &lt;code&gt;{% for %}&lt;/code&gt; or &lt;code&gt;{% if %}&lt;/code&gt; ) are not allowed inside a &lt;code&gt;blocktranslate&lt;/code&gt; tag.</target>
        </trans-unit>
        <trans-unit id="30f251e729d16aef2e5e61a11c227d160c9e8d9d" translate="yes" xml:space="preserve">
          <source>Other core functionalities</source>
          <target state="translated">その他のコア機能</target>
        </trans-unit>
        <trans-unit id="4bed2e8111f71065df59141e43a29a4b8f0bc963" translate="yes" xml:space="preserve">
          <source>Other database-related tips</source>
          <target state="translated">その他のデータベース関連のヒント</target>
        </trans-unit>
        <trans-unit id="5cb93deb997e7cfed93f5fb4038b0d930039d6e9" translate="yes" xml:space="preserve">
          <source>Other databases</source>
          <target state="translated">その他のデータベース</target>
        </trans-unit>
        <trans-unit id="ad24dd8dd4de3a366dfa2226270e532f5785c056" translate="yes" xml:space="preserve">
          <source>Other formats</source>
          <target state="translated">その他のフォーマット</target>
        </trans-unit>
        <trans-unit id="ea910b17053e23533d815464a56b475af947b4f3" translate="yes" xml:space="preserve">
          <source>Other methods</source>
          <target state="translated">その他の方法</target>
        </trans-unit>
        <trans-unit id="1a080dcddf2ba764e5db781600567fddeadb8e52" translate="yes" xml:space="preserve">
          <source>Other middleware hooks</source>
          <target state="translated">その他のミドルウェアフック</target>
        </trans-unit>
        <trans-unit id="ed57bc8d21ee8cb372b5d9ff1936640dbca10641" translate="yes" xml:space="preserve">
          <source>Other model instance methods</source>
          <target state="translated">その他のモデルインスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="4c15f8b2bc73ab95c0934e87b1a87123a60c7ee2" translate="yes" xml:space="preserve">
          <source>Other object-relational mappers require you to define relationships on both sides. The Django developers believe this is a violation of the DRY (Don&amp;rsquo;t Repeat Yourself) principle, so Django only requires you to define the relationship on one end.</source>
          <target state="translated">他のオブジェクトリレーショナルマッパーでは、両側で関係を定義する必要があります。Djangoの開発者は、これはDRY（Do n't Repeat Yourself）の原則に違反していると考えているため、Djangoは一方の関係を定義するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="74883f3f28ff75cbfd0b1e676bda3af8304d204b" translate="yes" xml:space="preserve">
          <source>Other problems with caching are the privacy of data and the question of where data should be stored in a cascade of caches.</source>
          <target state="translated">キャッシングの他の問題点としては、データのプライバシーの問題や、キャッシュのカスケードのどこにデータを保存すべきかという問題があります。</target>
        </trans-unit>
        <trans-unit id="07f0c8a819b057b97bd83b3e8e3832bd6eeea145" translate="yes" xml:space="preserve">
          <source>Other tags</source>
          <target state="translated">その他のタグ</target>
        </trans-unit>
        <trans-unit id="30b651a2617dab8f49f0fe838e2180168a76de91" translate="yes" xml:space="preserve">
          <source>Other tags and filters libraries</source>
          <target state="translated">その他のタグとフィルタのライブラリ</target>
        </trans-unit>
        <trans-unit id="4a35752ab9f4b364c50ff15dd9e36c30daa57fc5" translate="yes" xml:space="preserve">
          <source>Other test conditions</source>
          <target state="translated">その他の試験条件</target>
        </trans-unit>
        <trans-unit id="740307b6495ba5e98cdc9cd0ee6c245866224b54" translate="yes" xml:space="preserve">
          <source>Other text-based formats</source>
          <target state="translated">その他のテキストベースのフォーマット</target>
        </trans-unit>
        <trans-unit id="f7a5be2bc9ddbbd8c9fdf6a6ffac21f5ac820287" translate="yes" xml:space="preserve">
          <source>Other than the &lt;code&gt;save()&lt;/code&gt; and &lt;code&gt;save_m2m()&lt;/code&gt; methods, a &lt;code&gt;ModelForm&lt;/code&gt; works exactly the same way as any other &lt;code&gt;forms&lt;/code&gt; form. For example, the &lt;code&gt;is_valid()&lt;/code&gt; method is used to check for validity, the &lt;code&gt;is_multipart()&lt;/code&gt; method is used to determine whether a form requires multipart file upload (and hence whether &lt;code&gt;request.FILES&lt;/code&gt; must be passed to the form), etc. See &lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;Binding uploaded files to a form&lt;/a&gt; for more information.</source>
          <target state="translated">以外 &lt;code&gt;save()&lt;/code&gt; と &lt;code&gt;save_m2m()&lt;/code&gt; メソッド、 &lt;code&gt;ModelForm&lt;/code&gt; 、他のとまったく同じように機能 &lt;code&gt;forms&lt;/code&gt; フォームを。例えば、 &lt;code&gt;is_valid()&lt;/code&gt; メソッドは、妥当性を確認するために使用され、 &lt;code&gt;is_multipart()&lt;/code&gt; メソッドは、フォームがマルチパートファイルアップロードを必要とするかどうか（したがってかどうかを決定するために使用される &lt;code&gt;request.FILES&lt;/code&gt; は、等参照フォームに渡さなければならない）&lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;バインディング&lt;/a&gt;詳細については、フォームにファイルをアップロードしました。</target>
        </trans-unit>
        <trans-unit id="d7c4b57295a40e5f3e757610ef1f4a955b58ae43" translate="yes" xml:space="preserve">
          <source>Other topics</source>
          <target state="translated">その他のトピック</target>
        </trans-unit>
        <trans-unit id="f2253ba92e11ef33d967c8e37bf8f95e5d5af2b1" translate="yes" xml:space="preserve">
          <source>Other uses of lazy in delayed translations</source>
          <target state="translated">遅延翻訳での怠け者の他の使い方</target>
        </trans-unit>
        <trans-unit id="a29b5726b1cc15826ea9d1a05ed4d0ac7b40ef27" translate="yes" xml:space="preserve">
          <source>Otherwise, raise an exception.</source>
          <target state="translated">それ以外の場合は例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="0df0011def0634465c8c760cf06ab96ff5bdcfb7" translate="yes" xml:space="preserve">
          <source>Otherwise, the request will be redirected to the URL specified by the &lt;code&gt;login_url&lt;/code&gt; parameter, with the originally requested path in a query string variable specified by &lt;code&gt;redirect_field_name&lt;/code&gt;. For example: &lt;code&gt;/admin/login/?next=/admin/polls/question/3/&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合、リクエストは、最初にリクエストされたパスを &lt;code&gt;redirect_field_name&lt;/code&gt; で指定されたクエリ文字列変数に &lt;code&gt;login_url&lt;/code&gt; て、login_urlパラメータで指定されたURLにリダイレクトされます。例： &lt;code&gt;/admin/login/?next=/admin/polls/question/3/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0050fbc0f9f82e9a5a5b89786cc9c3c5d3f52e45" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;HandField&lt;/code&gt; accepts most of the standard field options (see the list below), but we ensure it has a fixed length, since it only needs to hold 52 card values plus their suits; 104 characters in total.</source>
          <target state="translated">私たちの &lt;code&gt;HandField&lt;/code&gt; は、ほとんどの標準フィールドオプション（下のリストを参照）を受け入れますが、52のカード値とそのスーツだけを保持する必要があるため、固定長であることを保証します。合計104文字。</target>
        </trans-unit>
        <trans-unit id="db06c72d2934d67a03d3f0f3a2a745ee6d03f280" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;current_time&lt;/code&gt; function could thus be written like this:</source>
          <target state="translated">私たちの &lt;code&gt;current_time&lt;/code&gt; 機能は、このように、このように書くことができます：</target>
        </trans-unit>
        <trans-unit id="dff6ab8adb93a46ee3c6e3bd3ed49ff4ebd8ab39" translate="yes" xml:space="preserve">
          <source>Our earlier form used a single field, &lt;code&gt;your_name&lt;/code&gt;, a &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;. In this case, our form has four fields: &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;sender&lt;/code&gt; and &lt;code&gt;cc_myself&lt;/code&gt;. &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt;&lt;code&gt;EmailField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/forms/fields#django.forms.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt; are just three of the available field types; a full list can be found in &lt;a href=&quot;../../ref/forms/fields&quot;&gt;Form fields&lt;/a&gt;.</source>
          <target state="translated">以前のフォームでは、単一のフィールド &lt;code&gt;your_name&lt;/code&gt; 、&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; を使用していました&lt;/a&gt;。この場合、フォームには、 &lt;code&gt;subject&lt;/code&gt; 、 &lt;code&gt;message&lt;/code&gt; 、 &lt;code&gt;sender&lt;/code&gt; 、 &lt;code&gt;cc_myself&lt;/code&gt; の 4つのフィールドがあります。&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../ref/forms/fields#django.forms.EmailField&quot;&gt; &lt;code&gt;EmailField&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../ref/forms/fields#django.forms.BooleanField&quot;&gt; &lt;code&gt;BooleanField&lt;/code&gt; &lt;/a&gt;は、使用可能なフィールドタイプの3つにすぎません。完全なリストは&lt;a href=&quot;../../ref/forms/fields&quot;&gt;フォームフィールドにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ffa06db831290132ff3c584882aede3e5800c0f" translate="yes" xml:space="preserve">
          <source>Our example object</source>
          <target state="translated">例のオブジェクト</target>
        </trans-unit>
        <trans-unit id="0627352608ac4e2e19335c97ffa41d6265f59e8d" translate="yes" xml:space="preserve">
          <source>Our new &lt;code&gt;AuthorDetail&lt;/code&gt; looks like this:</source>
          <target state="translated">新しい &lt;code&gt;AuthorDetail&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="1f8e1dd2e4de2f81be39a90d9ea2dedca52e113d" translate="yes" xml:space="preserve">
          <source>Our poll application is not very complex and doesn&amp;rsquo;t need custom admin templates. But if it grew more sophisticated and required modification of Django&amp;rsquo;s standard admin templates for some of its functionality, it would be more sensible to modify the &lt;em&gt;application&amp;rsquo;s&lt;/em&gt; templates, rather than those in the &lt;em&gt;project&lt;/em&gt;. That way, you could include the polls application in any new project and be assured that it would find the custom templates it needed.</source>
          <target state="translated">私たちの投票アプリケーションはそれほど複雑ではなく、カスタム管理テンプレートを必要としません。ただし、Djangoの標準管理テンプレートの一部の機能をより洗練され、必要に応じて変更する必要がある場合は、&lt;em&gt;プロジェクト&lt;/em&gt;&lt;em&gt;の&lt;/em&gt;テンプレートではなく、&lt;em&gt;アプリケーションの&lt;/em&gt;テンプレートを変更する方が賢明です。そうすれば、新しいアプリケーションに投票アプリケーションを含め、必要なカスタムテンプレートを確実に見つけることができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94262ed90ad185998a5f246db31ae553a069776c" translate="yes" xml:space="preserve">
          <source>Our publish-these-articles function won&amp;rsquo;t need the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; or the request object, but we will use the queryset:</source>
          <target state="translated">publish-these-articles関数は&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;やリクエストオブジェクトを必要としませんが、クエリセットを使用します。</target>
        </trans-unit>
        <trans-unit id="8bf7102d00ad0d0a1a4d16b6ef4507a65f16f2b8" translate="yes" xml:space="preserve">
          <source>Outdim Value</source>
          <target state="translated">アウトディム値</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="5ff63679199d65dfb0c6db045e65af9d0751d7e2" translate="yes" xml:space="preserve">
          <source>Output 3D WKB.</source>
          <target state="translated">3D WKBを出力します。</target>
        </trans-unit>
        <trans-unit id="43209554279e71a6edbe8bb7ebb6fdeecbe79ba6" translate="yes" xml:space="preserve">
          <source>Output Properties</source>
          <target state="translated">出力プロパティ</target>
        </trans-unit>
        <trans-unit id="c03f08a8f205e4568e916e3cfaa50c6a48749706" translate="yes" xml:space="preserve">
          <source>Output format</source>
          <target state="translated">出力形式</target>
        </trans-unit>
        <trans-unit id="bb8145bf62edbc420c2b0cf4c732bd403b67f7e7" translate="yes" xml:space="preserve">
          <source>Output in case of error can be customized with the &lt;code&gt;msg&lt;/code&gt; argument.</source>
          <target state="translated">エラーの場合の出力は、 &lt;code&gt;msg&lt;/code&gt; 引数でカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="c664efd5b3e4b44ce5bc39e691c6e2565216beef" translate="yes" xml:space="preserve">
          <source>Output of the applied datetimes at verbosity 2 and above was added.</source>
          <target state="translated">冗長度2以上で適用された日付時間の出力を追加しました。</target>
        </trans-unit>
        <trans-unit id="03e1aee184126121c6a71ebdabaa3bfe9cc944a7" translate="yes" xml:space="preserve">
          <source>Output redirection</source>
          <target state="translated">出力リダイレクト</target>
        </trans-unit>
        <trans-unit id="7835db447bc76230b5b0d736b2d78c671d7100a1" translate="yes" xml:space="preserve">
          <source>Outputs</source>
          <target state="translated">Outputs</target>
        </trans-unit>
        <trans-unit id="e10f22272a52d06137d232f9827cac0615b426c9" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; containing any validation errors corresponding to this field. You can customize the presentation of the errors with a &lt;code&gt;{% for error in field.errors %}&lt;/code&gt; loop. In this case, each object in the loop is a string containing the error message.</source>
          <target state="translated">このフィールドに対応する検証エラーを含む &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; を出力します。エラーの表示は、 &lt;code&gt;{% for error in field.errors %}&lt;/code&gt; ループでカスタマイズできます。この場合、ループ内の各オブジェクトは、エラーメッセージを含む文字列です。</target>
        </trans-unit>
        <trans-unit id="7333f4a7bf31ccfdbb5dc18e2179555f50ce400e" translate="yes" xml:space="preserve">
          <source>Outputs a string in the format &lt;code&gt;Wdy, DD Mon YYYY HH:MM:SS GMT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Wdy, DD Mon YYYY HH:MM:SS GMT&lt;/code&gt; の形式で文字列を出力します。</target>
        </trans-unit>
        <trans-unit id="a6f5e4808bedbab831b1bb9c7c9c21be9a0e5910" translate="yes" xml:space="preserve">
          <source>Outputs a whole load of debugging information, including the current context and imported modules.</source>
          <target state="translated">現在のコンテキストやインポートされたモジュールなどのデバッグ情報を出力します。</target>
        </trans-unit>
        <trans-unit id="73525538b3d957fd8f1b877e665683002b2e3665" translate="yes" xml:space="preserve">
          <source>Outputs an empty migration for the specified apps, for manual editing. This is for advanced users and should not be used unless you are familiar with the migration format, migration operations, and the dependencies between your migrations.</source>
          <target state="translated">手動編集用に、指定したアプリの空のマイグレーションを出力します。これは上級者向けであり、移行フォーマット、移行操作、移行間の依存関係に精通していない限り、使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="e13110426e6548f4f6d99430014198a4aff088e3" translate="yes" xml:space="preserve">
          <source>Outputs one of the syntax characters used to compose template tags.</source>
          <target state="translated">テンプレートタグを構成するために使用される構文文字のいずれかを出力します。</target>
        </trans-unit>
        <trans-unit id="1b0ee9d22ffd2b84beb646b9a42cfb1a6de46213" translate="yes" xml:space="preserve">
          <source>Outputs only the objects specified by a comma separated list of primary keys. This is only available when dumping one model. By default, all the records of the model are output.</source>
          <target state="translated">主キーのカンマ区切りリストで指定されたオブジェクトのみを出力します。これは1つのモデルをダンプする場合にのみ有効です。デフォルトでは、モデルのすべてのレコードが出力されます。</target>
        </trans-unit>
        <trans-unit id="a2fb19bf9e041d6bac4abe0f868835a6e7118c10" translate="yes" xml:space="preserve">
          <source>Outputs the feed in the given encoding to &lt;code&gt;outfile&lt;/code&gt;, which is a file-like object. Subclasses should override this.</source>
          <target state="translated">指定されたエンコーディングでフィードをファイルのようなオブジェクトである &lt;code&gt;outfile&lt;/code&gt; に出力します。サブクラスはこれをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="b1d86c371b153e0d5a8e04bf4843d2b1c82764bd" translate="yes" xml:space="preserve">
          <source>Outputs the feed in the given encoding to outfile, which is a file-like object.</source>
          <target state="translated">与えられたエンコーディングのフィードをファイルライクなオブジェクトである outfile に出力します。</target>
        </trans-unit>
        <trans-unit id="3a8df3db84756400ab5f34f1a3a8eeb89a2d6d30" translate="yes" xml:space="preserve">
          <source>Outputs the first argument variable that is not &amp;ldquo;false&amp;rdquo; (i.e. exists, is not empty, is not a false boolean value, and is not a zero numeric value). Outputs nothing if all the passed variables are &amp;ldquo;false&amp;rdquo;.</source>
          <target state="translated">「false」ではない（つまり、存在する、空ではない、falseのブール値ではない、ゼロの数値ではない）最初の引数変数を出力します。渡されたすべての変数が「false」の場合、何も出力しません。</target>
        </trans-unit>
        <trans-unit id="5bcad65f84e50e07aa9fc40899f541aa8811c827" translate="yes" xml:space="preserve">
          <source>Outputs to standard output all data in the database associated with the named application(s).</source>
          <target state="translated">指定されたアプリケーションに関連付けられたデータベース内のすべてのデータを標準出力に出力します。</target>
        </trans-unit>
        <trans-unit id="a07c2209b8bfd7ff7088211321dd90df2f4ee620" translate="yes" xml:space="preserve">
          <source>Outputting CSV with Django</source>
          <target state="translated">DjangoでCSVを出力する</target>
        </trans-unit>
        <trans-unit id="6bdeb471d5cc647c2c535dd532c5a68d71c980eb" translate="yes" xml:space="preserve">
          <source>Outputting PDFs with Django</source>
          <target state="translated">DjangoでPDFを出力する</target>
        </trans-unit>
        <trans-unit id="bfead61450a1bd4702affa28ce6ae7a44cf9aac3" translate="yes" xml:space="preserve">
          <source>Outputting forms as HTML</source>
          <target state="translated">フォームをHTMLとして出力する</target>
        </trans-unit>
        <trans-unit id="ff49716ffa83140e43327e6b1d6b0a707b986f35" translate="yes" xml:space="preserve">
          <source>Overridden model methods are not called on bulk operations</source>
          <target state="translated">オーバーライドされたモデルメソッドは、バルク操作では呼び出されません。</target>
        </trans-unit>
        <trans-unit id="89d709369fdcd6212bf5ccd14fc13db032b3b30a" translate="yes" xml:space="preserve">
          <source>Overridden settings</source>
          <target state="translated">上書きされた設定</target>
        </trans-unit>
        <trans-unit id="035501ec3a242aa3e857c79b2e79a8403eb1c67a" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;get_ordering_widget()&lt;/code&gt; if you need to provide a widget instance for use with &lt;code&gt;can_order&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;get_ordering_widget()&lt;/code&gt; で使用するウィジェットインスタンスを提供する必要がある場合は、get_ordering_widget（）をオーバーライドし &lt;code&gt;can_order&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66913097817c449f24ca2f4e0a17beb7a1288aca" translate="yes" xml:space="preserve">
          <source>Override the template used to generate the JavaScript slippy map. Default is &lt;code&gt;'gis/admin/openlayers.html'&lt;/code&gt;.</source>
          <target state="translated">JavaScriptスリッピーマップの生成に使用されるテンプレートをオーバーライドします。デフォルトは &lt;code&gt;'gis/admin/openlayers.html'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="37aaab92c3e9edc5da33aa21afe333e610896754" translate="yes" xml:space="preserve">
          <source>Override this class method to add custom arguments accepted by the &lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; management command. See &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;argparse.ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt; for details about adding arguments to a parser.</source>
          <target state="translated">このクラスメソッドをオーバーライドして、&lt;a href=&quot;../../ref/django-admin#django-admin-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;管理コマンドで受け入れられるカスタム引数を追加します。参照&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;argparse.ArgumentParser.add_argument()&lt;/code&gt; &lt;/a&gt;パーサーに引数を追加の詳細については。</target>
        </trans-unit>
        <trans-unit id="d12a4bd05a8c968e3b8465eece0297c044b668fa" translate="yes" xml:space="preserve">
          <source>Override this method in custom widgets that aren&amp;rsquo;t compatible with browser validation. For example, a WSYSIWG text editor widget backed by a hidden &lt;code&gt;textarea&lt;/code&gt; element may want to always return &lt;code&gt;False&lt;/code&gt; to avoid browser validation on the hidden field.</source>
          <target state="translated">ブラウザ検証と互換性のないカスタムウィジェットでこのメソッドをオーバーライドします。例えば、隠さに裏打ちされたウィジェットWSYSIWGテキストエディタ &lt;code&gt;textarea&lt;/code&gt; 要素は常に戻りたいことがあり &lt;code&gt;False&lt;/code&gt; の隠しフィールドのブラウザ検証を避けるために。</target>
        </trans-unit>
        <trans-unit id="dc563379c597beff2c355e9c43b5ce5092ed10eb" translate="yes" xml:space="preserve">
          <source>Override this method in order to customize template loading.</source>
          <target state="translated">テンプレートの読み込みをカスタマイズするために、このメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="1edb92cd9420ce4f36c8b1147f33da7b34cfcb35" translate="yes" xml:space="preserve">
          <source>Override this method in order to customize the context.</source>
          <target state="translated">コンテキストをカスタマイズするには、このメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="ff8c2e9164239343752ee6d0f93598934f05a1be" translate="yes" xml:space="preserve">
          <source>Override this method to customize the lookups permitted for your &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">このメソッドをオーバーライドして、&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;サブクラスで許可されるルックアップをカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="087100e8f13a40d6b39a5b10f146cf8a7e2290bd" translate="yes" xml:space="preserve">
          <source>Override this method to programmatically determine the maximum number of inline forms. For example, this may be based on the model instance (passed as the keyword argument &lt;code&gt;obj&lt;/code&gt;):</source>
          <target state="translated">このメソッドをオーバーライドして、インラインフォームの最大数をプログラムで決定します。たとえば、これはモデルインスタンスに基づいている場合があります（キーワード引数 &lt;code&gt;obj&lt;/code&gt; として渡されます）。</target>
        </trans-unit>
        <trans-unit id="843de265883c0b6c28f62f1497d04b114f460694" translate="yes" xml:space="preserve">
          <source>Override this method to programmatically determine the minimum number of inline forms. For example, this may be based on the model instance (passed as the keyword argument &lt;code&gt;obj&lt;/code&gt;).</source>
          <target state="translated">このメソッドをオーバーライドして、インラインフォームの最小数をプログラムで決定します。たとえば、これはモデルインスタンスに基づく場合があります（キーワード引数 &lt;code&gt;obj&lt;/code&gt; として渡されます）。</target>
        </trans-unit>
        <trans-unit id="feb44a6cc063864441d2898f84d3a6a1c8e295a0" translate="yes" xml:space="preserve">
          <source>Override this method to programmatically determine the number of extra inline forms. For example, this may be based on the model instance (passed as the keyword argument &lt;code&gt;obj&lt;/code&gt;):</source>
          <target state="translated">このメソッドをオーバーライドして、追加のインラインフォームの数をプログラムで決定します。たとえば、これはモデルインスタンスに基づいている場合があります（キーワード引数 &lt;code&gt;obj&lt;/code&gt; として渡されます）。</target>
        </trans-unit>
        <trans-unit id="b3bc9b7fa0583dc0d7816f97efe6238a8a7d0bdd" translate="yes" xml:space="preserve">
          <source>Override this method to return a custom session model if you need one.</source>
          <target state="translated">カスタムセッションモデルが必要な場合は、このメソッドをオーバーライドして、カスタムセッションモデルを返します。</target>
        </trans-unit>
        <trans-unit id="69caf77a19dbf07a315c7cad38827e71389d7d4d" translate="yes" xml:space="preserve">
          <source>Overrides the core &lt;a href=&quot;../django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command if the &lt;code&gt;staticfiles&lt;/code&gt; app is &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; and adds automatic serving of static files. File serving doesn&amp;rsquo;t run through &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;staticfiles&lt;/code&gt; アプリが&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt;場合、コア&lt;a href=&quot;../django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;コマンドをオーバーライドし、静的ファイルの自動提供を追加します。ファイルサービスは&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;を介して実行されません。</target>
        </trans-unit>
        <trans-unit id="7fd821b1d08d73b122a6705bea6d2acf9f48415c" translate="yes" xml:space="preserve">
          <source>Overriding &lt;code&gt;clean()&lt;/code&gt; on a &lt;code&gt;ModelFormSet&lt;/code&gt;</source>
          <target state="translated">オーバーライド &lt;code&gt;clean()&lt;/code&gt; に &lt;code&gt;ModelFormSet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dbe275b12e6b131bd5fa586a00fa885792a625f" translate="yes" xml:space="preserve">
          <source>Overriding admin templates</source>
          <target state="translated">管理テンプレートの上書き</target>
        </trans-unit>
        <trans-unit id="9d2c7bf1e34177cfe3761f91d4d3744f7f20c177" translate="yes" xml:space="preserve">
          <source>Overriding built-in widget templates</source>
          <target state="translated">組み込みのウィジェットテンプレートをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="4b77dbb64d3ddce7b029d8a7f94456a8966798f7" translate="yes" xml:space="preserve">
          <source>Overriding commands</source>
          <target state="translated">コマンドのオーバーライド</target>
        </trans-unit>
        <trans-unit id="5c0cd00ef62c0bf0fe417d52cbf1fa9ba89a2b50" translate="yes" xml:space="preserve">
          <source>Overriding extra instance methods</source>
          <target state="translated">追加のインスタンスメソッドをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="c415121e5c9b1cf52fe819b5e91d79873486b23a" translate="yes" xml:space="preserve">
          <source>Overriding fields in a parent model leads to difficulties in areas such as initializing new instances (specifying which field is being initialized in &lt;code&gt;Model.__init__&lt;/code&gt;) and serialization. These are features which normal Python class inheritance doesn&amp;rsquo;t have to deal with in quite the same way, so the difference between Django model inheritance and Python class inheritance isn&amp;rsquo;t arbitrary.</source>
          <target state="translated">親モデルのフィールドをオーバーライドすると、新しいインスタンスの初期化（ &lt;code&gt;Model.__init__&lt;/code&gt; で初期化されるフィールドの指定）やシリアル化などの領域で問題が発生します。これらは通常のPythonクラスの継承がまったく同じ方法で処理する必要がない機能であるため、Djangoモデルの継承とPythonクラスの継承の違いは恣意的ではありません。</target>
        </trans-unit>
        <trans-unit id="77d8038605b2fca489407ed088db1ceea011b7c8" translate="yes" xml:space="preserve">
          <source>Overriding from an app&amp;rsquo;s template directory</source>
          <target state="translated">アプリのテンプレートディレクトリからのオーバーライド</target>
        </trans-unit>
        <trans-unit id="f001aea88bb9e65ee9b4dc4471475534873ba06f" translate="yes" xml:space="preserve">
          <source>Overriding from the project&amp;rsquo;s templates directory</source>
          <target state="translated">プロジェクトのテンプレートディレクトリからのオーバーライド</target>
        </trans-unit>
        <trans-unit id="3a3805c2ae70eb5cb4212efd0a99dd2d9a9443e4" translate="yes" xml:space="preserve">
          <source>Overriding methods on an &lt;code&gt;InlineFormSet&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InlineFormSet&lt;/code&gt; のメソッドのオーバーライド</target>
        </trans-unit>
        <trans-unit id="9c9c3a166212376bd13fb2b3e01f65a0fc27be26" translate="yes" xml:space="preserve">
          <source>Overriding predefined model methods</source>
          <target state="translated">定義済みのモデルメソッドをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="e10ea40ee84dbb4909b38e93509627b1fa56998f" translate="yes" xml:space="preserve">
          <source>Overriding settings</source>
          <target state="translated">設定を上書きする</target>
        </trans-unit>
        <trans-unit id="ed374ca602e69830c442fb16e8fb1a1ae0414a53" translate="yes" xml:space="preserve">
          <source>Overriding templates</source>
          <target state="translated">テンプレートを上書きする</target>
        </trans-unit>
        <trans-unit id="2397f08bfac55b9388cd6502b4efe24cb9bef22b" translate="yes" xml:space="preserve">
          <source>Overriding the clean() method</source>
          <target state="translated">clean()メソッドをオーバーライドする</target>
        </trans-unit>
        <trans-unit id="4441238c478d169181967bbd91e1d68e28320c76" translate="yes" xml:space="preserve">
          <source>Overriding the default admin site</source>
          <target state="translated">デフォルトの管理サイトを上書きする</target>
        </trans-unit>
        <trans-unit id="785ec6b460a9a580366254f7cd31a754f6257d4c" translate="yes" xml:space="preserve">
          <source>Overriding the default fields</source>
          <target state="translated">デフォルトのフィールドを上書きする</target>
        </trans-unit>
        <trans-unit id="1d41bd1399dd356573d969d293bfdbd01fcff8fd" translate="yes" xml:space="preserve">
          <source>Overriding this method allows mixins to setup instance attributes for reuse in child classes. When overriding this method, you must call &lt;code&gt;super()&lt;/code&gt;.</source>
          <target state="translated">このメソッドをオーバーライドすると、mixinがインスタンス属性を設定して子クラスで再利用できるようになります。このメソッドをオーバーライドするときは、 &lt;code&gt;super()&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="e8ce33c66b4853973572b69adb9d506516b80aab" translate="yes" xml:space="preserve">
          <source>Overriding this method provides the ability to modify session model data before it&amp;rsquo;s saved to database.</source>
          <target state="translated">このメソッドをオーバーライドすると、データベースに保存する前にセッションモデルデータを変更できます。</target>
        </trans-unit>
        <trans-unit id="b7b8a25c5d31e6f7580233bf7d54b9ce41735815" translate="yes" xml:space="preserve">
          <source>Overriding vs. replacing an admin template</source>
          <target state="translated">管理テンプレートの上書きと置き換え</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="92cb27d6d1803adc296b9c4279b80fa353e15573" translate="yes" xml:space="preserve">
          <source>Overview and a quick example</source>
          <target state="translated">概要と簡単な例</target>
        </trans-unit>
        <trans-unit id="20156e9875f7da34802f85b44394c55cbb9a5f1b" translate="yes" xml:space="preserve">
          <source>PBKDF2 and bcrypt</source>
          <target state="translated">PBKDF2とbcrypt</target>
        </trans-unit>
        <trans-unit id="b343828bbf7d960e58d0a4ca891c7d1b51085027" translate="yes" xml:space="preserve">
          <source>PGRaster</source>
          <target state="translated">PGRaster</target>
        </trans-unit>
        <trans-unit id="6eb27d4d79f559d61d621cf0080cfccf437ac896" translate="yes" xml:space="preserve">
          <source>POST with invalid data (typically redisplay form with errors)</source>
          <target state="translated">無効なデータを持つ POST (通常はエラーのある再表示フォーム)</target>
        </trans-unit>
        <trans-unit id="294d17ead46c3e6fc07b57af85f32dcdd8ca9251" translate="yes" xml:space="preserve">
          <source>POST with valid data (process the data and typically redirect)</source>
          <target state="translated">有効なデータでPOST (データを処理し、通常はリダイレクト)</target>
        </trans-unit>
        <trans-unit id="0963d5c6b9415810b661524f7d28705a56affa59" translate="yes" xml:space="preserve">
          <source>PROJ</source>
          <target state="translated">PROJ</target>
        </trans-unit>
        <trans-unit id="474485b21e48b6e355a5bd7d43b0dcccf85d5fc9" translate="yes" xml:space="preserve">
          <source>PROJ.4</source>
          <target state="translated">PROJ.4</target>
        </trans-unit>
        <trans-unit id="c8598d7514c7ab48be8762685bf2ae515f08ef7f" translate="yes" xml:space="preserve">
          <source>PROJ.4 string</source>
          <target state="translated">PROJ.4文字列</target>
        </trans-unit>
        <trans-unit id="990257c6f86c20190b34ad65ebbfce57b12ac007" translate="yes" xml:space="preserve">
          <source>Package? App?</source>
          <target state="translated">パッケージ? アプリ?</target>
        </trans-unit>
        <trans-unit id="83b51fffd5af70659c944e65a24a3fc7795b640c" translate="yes" xml:space="preserve">
          <source>Packaging your app</source>
          <target state="translated">アプリのパッケージ化</target>
        </trans-unit>
        <trans-unit id="fb06270f7c212baabc8749ffc36e49dc8f321548" translate="yes" xml:space="preserve">
          <source>Page</source>
          <target state="translated">Page</target>
        </trans-unit>
        <trans-unit id="7b0468ed348a7d65dd776d4abfc8e3474cc611b5" translate="yes" xml:space="preserve">
          <source>Page not found?</source>
          <target state="translated">ページが見つかりませんでしたか?</target>
        </trans-unit>
        <trans-unit id="f9da63ed84d3f9029e123e169b354d8b685d5524" translate="yes" xml:space="preserve">
          <source>Page uses AJAX without any HTML form</source>
          <target state="translated">ページはHTMLフォームなしでAJAXを使用しています</target>
        </trans-unit>
        <trans-unit id="73be4714f17a88adb73ee8ec0ea70e3fc4fbe59f" translate="yes" xml:space="preserve">
          <source>Paginating a &lt;code&gt;ListView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ListView&lt;/code&gt; のページネーション</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="24533236e88c1d36ff37cc521374f5302ab40560" translate="yes" xml:space="preserve">
          <source>Paginator</source>
          <target state="translated">Paginator</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="38aa618f069cd612474bdf8ae436523f7aac024f" translate="yes" xml:space="preserve">
          <source>Parses a string and returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列を解析し、&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.date&quot;&gt; &lt;code&gt;datetime.date&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="98c7984221adfb3491e17bb4d79c15079bcd1909" translate="yes" xml:space="preserve">
          <source>Parses a string and returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列を解析して、&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="e9c57985d10f102269be4dfc290ec569bb9c2439" translate="yes" xml:space="preserve">
          <source>Parses a string and returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt;&lt;code&gt;datetime.time&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列を解析し、&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt; &lt;code&gt;datetime.time&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="bcfafbf568bd9f3c5acfb3a5945e8adb847df2c2" translate="yes" xml:space="preserve">
          <source>Parses a string and returns a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;datetime.timedelta&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列を解析し、&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;datetime.timedelta&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="d78e9c7e2e0111470599d2080e66d8472ca42075" translate="yes" xml:space="preserve">
          <source>Parsing until another block tag</source>
          <target state="translated">別のブロックタグまで解析</target>
        </trans-unit>
        <trans-unit id="dd29a98e2f867432ac16b8458dbae0a86ebb6f7d" translate="yes" xml:space="preserve">
          <source>Parsing until another block tag, and saving contents</source>
          <target state="translated">別のブロックタグまで解析し、内容を保存する</target>
        </trans-unit>
        <trans-unit id="edc6c4de665cd0969b267054f0bc15952c64a141" translate="yes" xml:space="preserve">
          <source>Partial indexes in abstract base classes</source>
          <target state="translated">抽象基底クラスの部分インデックス</target>
        </trans-unit>
        <trans-unit id="2e57cb42086ecd22d3778798ec47f16bab4305df" translate="yes" xml:space="preserve">
          <source>Particularly useful is passing 0 (zero) as the argument which will round the float to the nearest integer.</source>
          <target state="translated">特に便利なのは、引数に 0 (ゼロ)を渡すと、float を最も近い整数に丸めることができます。</target>
        </trans-unit>
        <trans-unit id="83106ebfb559316a40d0b624ad764b8f2c4fbdbe" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;commit=False&lt;/code&gt; to return the unsaved model instances:</source>
          <target state="translated">&lt;code&gt;commit=False&lt;/code&gt; を渡して、保存されていないモデルインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="a5907b5e14985eae2d17793f5fdff70061f9d381" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;configure()&lt;/code&gt; as many keyword arguments as you&amp;rsquo;d like, with each keyword argument representing a setting and its value. Each argument name should be all uppercase, with the same name as the settings described above. If a particular setting is not passed to &lt;code&gt;configure()&lt;/code&gt; and is needed at some later point, Django will use the default setting value.</source>
          <target state="translated">&lt;code&gt;configure()&lt;/code&gt; に必要な数のキーワード引数を渡します。各キーワード引数は設定とその値を表します。各引数名はすべて大文字で、上記の設定と同じ名前にする必要があります。特定の設定が &lt;code&gt;configure()&lt;/code&gt; に渡されず、後で必要になる場合、Djangoはデフォルトの設定値を使用します。</target>
        </trans-unit>
        <trans-unit id="3375ac34bc5b07b3abb647071876612620aa29e7" translate="yes" xml:space="preserve">
          <source>Pass an iterable of model instances (must all be of the same class) and the lookups or &lt;a href=&quot;#django.db.models.Prefetch&quot;&gt;&lt;code&gt;Prefetch&lt;/code&gt;&lt;/a&gt; objects you want to prefetch for. For example:</source>
          <target state="translated">モデルインスタンスの反復可能オブジェクト（すべてが同じクラスである必要があります）と、&lt;a href=&quot;#django.db.models.Prefetch&quot;&gt; &lt;code&gt;Prefetch&lt;/code&gt; &lt;/a&gt;するルックアップまたはプリフェッチオブジェクトを渡します。例えば：</target>
        </trans-unit>
        <trans-unit id="0bc1e5a920414c3a7a617932bfa1cb74ddf33ca8" translate="yes" xml:space="preserve">
          <source>Pass any function (that takes no arguments) to &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">（引数を取らない）関数を&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;に渡します。</target>
        </trans-unit>
        <trans-unit id="dff14d3715358315559de87e93047676754ed230" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;RunPython.noop&lt;/code&gt; method to &lt;code&gt;code&lt;/code&gt; or &lt;code&gt;reverse_code&lt;/code&gt; when you want the operation not to do anything in the given direction. This is especially useful in making the operation reversible.</source>
          <target state="translated">渡し &lt;code&gt;RunPython.noop&lt;/code&gt; のに方法 &lt;code&gt;code&lt;/code&gt; や &lt;code&gt;reverse_code&lt;/code&gt; を使用すると、特定の方向に何かをしないように操作したいとき。これは、操作を元に戻すのに特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="22714a0e2f564fdc8bb2133e6f31fe4f021d1013" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;RunSQL.noop&lt;/code&gt; attribute to &lt;code&gt;sql&lt;/code&gt; or &lt;code&gt;reverse_sql&lt;/code&gt; when you want the operation not to do anything in the given direction. This is especially useful in making the operation reversible.</source>
          <target state="translated">渡し &lt;code&gt;RunSQL.noop&lt;/code&gt; のに属性 &lt;code&gt;sql&lt;/code&gt; または &lt;code&gt;reverse_sql&lt;/code&gt; を使用すると、特定の方向に何かをしないように操作したいとき。これは、操作を元に戻すのに特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="cd27a54101bdeb3a00cc6b1e71a3a6c154544800" translate="yes" xml:space="preserve">
          <source>Pass the page number via the &lt;code&gt;page&lt;/code&gt; query-string parameter. For example, a URL would look like this:</source>
          <target state="translated">&lt;code&gt;page&lt;/code&gt; query-stringパラメータを介してページ番号を渡します。たとえば、URLは次のようになります。</target>
        </trans-unit>
        <trans-unit id="ebbdcfc4d351bffe1099929547cfbf663c8041d6" translate="yes" xml:space="preserve">
          <source>Passed to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.data&quot;&gt;&lt;code&gt;data()&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.gdal.GDALBand.data&quot;&gt; &lt;code&gt;data()&lt;/code&gt; &lt;/a&gt;メソッドに渡される</target>
        </trans-unit>
        <trans-unit id="867c510983ef9ee90b94d79234302035e0ceebda" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;Value(None)&lt;/code&gt; to &lt;code&gt;expression1&lt;/code&gt; is prohibited on Oracle since Oracle doesn&amp;rsquo;t accept &lt;code&gt;NULL&lt;/code&gt; as the first argument.</source>
          <target state="translated">渡す &lt;code&gt;Value(None)&lt;/code&gt; する &lt;code&gt;expression1&lt;/code&gt; 受け付けませんので、オラクルのOracle上禁止されている &lt;code&gt;NULL&lt;/code&gt; を最初の引数として。</target>
        </trans-unit>
        <trans-unit id="a499daa7841f330b02ab40e38530ebc188948246" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;nowait=True&lt;/code&gt;, &lt;code&gt;skip_locked=True&lt;/code&gt;, or &lt;code&gt;of&lt;/code&gt; to &lt;code&gt;select_for_update()&lt;/code&gt; using database backends that do not support these options, such as MySQL, raises a &lt;a href=&quot;../exceptions#django.db.NotSupportedError&quot;&gt;&lt;code&gt;NotSupportedError&lt;/code&gt;&lt;/a&gt;. This prevents code from unexpectedly blocking.</source>
          <target state="translated">渡す &lt;code&gt;nowait=True&lt;/code&gt; 、 &lt;code&gt;skip_locked=True&lt;/code&gt; 、または &lt;code&gt;of&lt;/code&gt; に &lt;code&gt;select_for_update()&lt;/code&gt; MySQLのようなこれらのオプションをサポートしていないデータベースバックエンド、提起使用&lt;a href=&quot;../exceptions#django.db.NotSupportedError&quot;&gt; &lt;code&gt;NotSupportedError&lt;/code&gt; を&lt;/a&gt;。これにより、コードが予期せずブロックされるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="d2adeb387e4441046ff1e9c147e8419b6f1c14e6" translate="yes" xml:space="preserve">
          <source>Passing custom parameters to formset forms</source>
          <target state="translated">カスタムパラメータをフォームセットフォームに渡す</target>
        </trans-unit>
        <trans-unit id="e4bc883064fdec73117f9dc706643b24af16c727" translate="yes" xml:space="preserve">
          <source>Passing extra options to &lt;code&gt;include()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;include()&lt;/code&gt; に追加オプションを渡す</target>
        </trans-unit>
        <trans-unit id="60efd02f5ed0f44b53a44ad3313f510fedaad832" translate="yes" xml:space="preserve">
          <source>Passing extra options to view functions</source>
          <target state="translated">関数を表示するために余分なオプションを渡す</target>
        </trans-unit>
        <trans-unit id="7bc32ea8b1ae65cd9736e4019f349cc45bac8346" translate="yes" xml:space="preserve">
          <source>Passing iterators</source>
          <target state="translated">イテレータを渡す</target>
        </trans-unit>
        <trans-unit id="dc11d2c496ab8e7196b236f460f54cc548ef4e7f" translate="yes" xml:space="preserve">
          <source>Passing parameters into &lt;code&gt;raw()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;raw()&lt;/code&gt; にパラメーターを渡す</target>
        </trans-unit>
        <trans-unit id="26826b46bf6032bb6290da65c715fbb888d4e9b7" translate="yes" xml:space="preserve">
          <source>Passing strings</source>
          <target state="translated">文字列を渡す</target>
        </trans-unit>
        <trans-unit id="42021a29f4d390299499ad18ee376fba89d46f3c" translate="yes" xml:space="preserve">
          <source>Passing template variables to the tag</source>
          <target state="translated">テンプレート変数をタグに渡す</target>
        </trans-unit>
        <trans-unit id="cb1d265a07df179d0e372c15df3fbfebc633fcb8" translate="yes" xml:space="preserve">
          <source>Password change</source>
          <target state="translated">パスワード変更</target>
        </trans-unit>
        <trans-unit id="53d05af070a4f337a22391045ae28e52feb0c7fc" translate="yes" xml:space="preserve">
          <source>Password change done</source>
          <target state="translated">パスワード変更完了</target>
        </trans-unit>
        <trans-unit id="b9af60b418a51c6c11205cb77e92e77ac8901139" translate="yes" xml:space="preserve">
          <source>Password hashing</source>
          <target state="translated">パスワードハッシュ</target>
        </trans-unit>
        <trans-unit id="fdbf90a060dfba26686234af55512f4b78dc775c" translate="yes" xml:space="preserve">
          <source>Password management in Django</source>
          <target state="translated">Django でのパスワード管理</target>
        </trans-unit>
        <trans-unit id="97938456acff794b32791967276a916c34ef7479" translate="yes" xml:space="preserve">
          <source>Password management is something that should generally not be reinvented unnecessarily, and Django endeavors to provide a secure and flexible set of tools for managing user passwords. This document describes how Django stores passwords, how the storage hashing can be configured, and some utilities to work with hashed passwords.</source>
          <target state="translated">パスワード管理は一般的に不必要に再発明されるべきものではなく、Django はユーザーのパスワードを管理するための安全で柔軟なツールのセットを提供するよう努めています。このドキュメントでは、Django がどのようにパスワードを保存するか、ストレージのハッシュ化をどのように設定するか、そしてハッシュ化されたパスワードを扱うためのいくつかのユーティリティについて説明します。</target>
        </trans-unit>
        <trans-unit id="42747c3134a14a08e853bd9298741b02f392325d" translate="yes" xml:space="preserve">
          <source>Password strength checking</source>
          <target state="translated">パスワードの強度チェック</target>
        </trans-unit>
        <trans-unit id="72e845c3a0535ba2a4b8b38cd50be31dfab9b536" translate="yes" xml:space="preserve">
          <source>Password to use for the SMTP server defined in &lt;a href=&quot;#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt;. This setting is used in conjunction with &lt;a href=&quot;#std:setting-EMAIL_HOST_USER&quot;&gt;&lt;code&gt;EMAIL_HOST_USER&lt;/code&gt;&lt;/a&gt; when authenticating to the SMTP server. If either of these settings is empty, Django won&amp;rsquo;t attempt authentication.</source>
          <target state="translated">&lt;a href=&quot;#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; で&lt;/a&gt;定義されたSMTPサーバーに使用するパスワード。この設定は、SMTPサーバーへの認証時に&lt;a href=&quot;#std:setting-EMAIL_HOST_USER&quot;&gt; &lt;code&gt;EMAIL_HOST_USER&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​されます。これらの設定のいずれかが空の場合、Djangoは認証を試みません。</target>
        </trans-unit>
        <trans-unit id="f78b3350a7bcdb589a957e23ff81fad31b3e2773" translate="yes" xml:space="preserve">
          <source>Password upgrading</source>
          <target state="translated">パスワードのアップグレード</target>
        </trans-unit>
        <trans-unit id="82bfb41a774975db54411718143f0e70ce9a7688" translate="yes" xml:space="preserve">
          <source>Password upgrading without requiring a login</source>
          <target state="translated">ログインを必要としないパスワードのアップグレード</target>
        </trans-unit>
        <trans-unit id="cfb75c3a8b84a83f1313ca1c5eb4ad97afb6c789" translate="yes" xml:space="preserve">
          <source>Password validation</source>
          <target state="translated">パスワードの検証</target>
        </trans-unit>
        <trans-unit id="f63d7362dbbfa3509b73dc229d682d018ee48cc6" translate="yes" xml:space="preserve">
          <source>Password validation can prevent the use of many types of weak passwords. However, the fact that a password passes all the validators doesn&amp;rsquo;t guarantee that it is a strong password. There are many factors that can weaken a password that are not detectable by even the most advanced password validators.</source>
          <target state="translated">パスワード検証により、多くのタイプの脆弱なパスワードの使用を防ぐことができます。ただし、パスワードがすべてのバリデーターを通過するという事実は、それが強力なパスワードであることを保証するものではありません。最も高度なパスワード検証ツールでさえ検出できない、パスワードを弱める可能性のある多くの要因があります。</target>
        </trans-unit>
        <trans-unit id="030ddae36a366a4e884ba702f1f24e629d2fafa4" translate="yes" xml:space="preserve">
          <source>Password validation is configured in the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt;&lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">パスワード検証は、&lt;a href=&quot;../../ref/settings#std:setting-AUTH_PASSWORD_VALIDATORS&quot;&gt; &lt;code&gt;AUTH_PASSWORD_VALIDATORS&lt;/code&gt; &lt;/a&gt;設定で構成されます。</target>
        </trans-unit>
        <trans-unit id="3dd8163758541d100df9ffeb599a921e907953ed" translate="yes" xml:space="preserve">
          <source>Path converters</source>
          <target state="translated">パスコンバータ</target>
        </trans-unit>
        <trans-unit id="d3f7215820c20d73fb1520647a2cfe9ae2d19c59" translate="yes" xml:space="preserve">
          <source>Path matching was added.</source>
          <target state="translated">パスマッチングを追加しました。</target>
        </trans-unit>
        <trans-unit id="1c611af2558850679a78f47f5579ae407fea6cdb" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site app index view.</source>
          <target state="translated">管理サイトのアプリインデックスビューで使用されるカスタムテンプレートへのパスです。</target>
        </trans-unit>
        <trans-unit id="a3c17c88e105eb850a5ad023c10109e7c8f035c4" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site login view.</source>
          <target state="translated">管理サイトのログインビューで使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="0a6b4a4caccef224659a85c6f9f94574b9f64e63" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site logout view.</source>
          <target state="translated">管理サイトのログアウトビューで使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="af6ee8fc926db110165f33c61aa6ff661bccdf24" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site main index view.</source>
          <target state="translated">管理サイトのメインインデックスビューで使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="b0a61f6a8b7ef4c17116725efb1139996550e882" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site password change done view.</source>
          <target state="translated">管理者サイトのパスワード変更済みビューで使用されるカスタムテンプレートへのパスです。</target>
        </trans-unit>
        <trans-unit id="f95c10d6eac86f86888cc76f83fcea345c83bd8b" translate="yes" xml:space="preserve">
          <source>Path to a custom template that will be used by the admin site password change view.</source>
          <target state="translated">管理サイトのパスワード変更ビューで使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="4ecf349cf4d3adf10399fee85596d3bb4c52d469" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.add_view&quot;&gt;&lt;code&gt;add_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.add_view&quot;&gt; &lt;code&gt;add_view()&lt;/code&gt; &lt;/a&gt;によって使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="88f3bb0e37e80c6a1bcc036d5e5fdf3dea300ed8" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.change_view&quot;&gt;&lt;code&gt;change_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.change_view&quot;&gt; &lt;code&gt;change_view()&lt;/code&gt; &lt;/a&gt;で使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="2c7220fce158453823a1b66b37aca5acee702105" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.changelist_view&quot;&gt;&lt;code&gt;changelist_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.changelist_view&quot;&gt; &lt;code&gt;changelist_view()&lt;/code&gt; &lt;/a&gt;で使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="5f591d246cfdef823abf87f8a77ea702e1c10bd2" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt;&lt;code&gt;delete_view()&lt;/code&gt;&lt;/a&gt; for displaying a confirmation page when deleting one or more objects.</source>
          <target state="translated">1つ以上のオブジェクトを削除するときに確認ページを表示するために&lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt; &lt;code&gt;delete_view()&lt;/code&gt; &lt;/a&gt;によって使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="0c2e8f0a12128c3ab584505f6c0757977a466d7d" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.history_view&quot;&gt;&lt;code&gt;history_view()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.history_view&quot;&gt; &lt;code&gt;history_view()&lt;/code&gt; &lt;/a&gt;で使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="6c63c61822ce8565bbff9ba9c14ec706fad15416" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by &lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_add&quot;&gt;&lt;code&gt;response_add()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_change&quot;&gt;&lt;code&gt;response_change()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_delete&quot;&gt;&lt;code&gt;response_delete()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_add&quot;&gt; &lt;code&gt;response_add()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_change&quot;&gt; &lt;code&gt;response_change()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#django.contrib.admin.ModelAdmin.response_delete&quot;&gt; &lt;code&gt;response_delete()&lt;/code&gt; &lt;/a&gt;によって使用されるカスタムテンプレートへのパス。</target>
        </trans-unit>
        <trans-unit id="84e2190f2c73e7f762bcc09f1d74e0a065af6f13" translate="yes" xml:space="preserve">
          <source>Path to a custom template, used by the &lt;code&gt;delete_selected&lt;/code&gt; action method for displaying a confirmation page when deleting one or more objects. See the &lt;a href=&quot;actions&quot;&gt;actions documentation&lt;/a&gt;.</source>
          <target state="translated">1つ以上のオブジェクトを削除するときに確認ページを表示するために &lt;code&gt;delete_selected&lt;/code&gt; アクションメソッドによって使用されるカスタムテンプレートへのパス。&lt;a href=&quot;actions&quot;&gt;アクションのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f95dfae2a5316331007fb6a8e1f5453be2d906e0" translate="yes" xml:space="preserve">
          <source>Paths in asset definitions</source>
          <target state="translated">資産の定義におけるパス</target>
        </trans-unit>
        <trans-unit id="53abecb8bf2af146e43fc25704616a8595335af7" translate="yes" xml:space="preserve">
          <source>Paths used to specify assets can be either relative or absolute. If a path starts with &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;, it will be interpreted as an absolute path, and left as-is. All other paths will be prepended with the value of the appropriate prefix. If the &lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt; app is installed, it will be used to serve assets.</source>
          <target state="translated">アセットの指定に使用されるパスは、相対パスでも絶対パスでもかまいません。パスが &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;http://&lt;/code&gt; または &lt;code&gt;https://&lt;/code&gt; で始まる場合、それは絶対パスとして解釈され、そのまま残されます。他のすべてのパスには、適切なプレフィックスの値が付加されます。&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; &lt;/a&gt;アプリがインストールされている場合、アセットを提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e2feeb9a8c48b959a84dc56a27e5d342951587fd" translate="yes" xml:space="preserve">
          <source>Patterns don&amp;rsquo;t search GET and POST parameters, or the domain name. For example, in a request to &lt;code&gt;https://www.example.com/myapp/&lt;/code&gt;, the URLconf will look for &lt;code&gt;myapp/&lt;/code&gt;. In a request to &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt;, the URLconf will also look for &lt;code&gt;myapp/&lt;/code&gt;.</source>
          <target state="translated">パターンは、GETおよびPOSTパラメーター、またはドメイン名を検索しません。たとえば、 &lt;code&gt;https://www.example.com/myapp/&lt;/code&gt; //www.example.com/myapp/ へのリクエストでは、URLconfは &lt;code&gt;myapp/&lt;/code&gt; を探します。 &lt;code&gt;https://www.example.com/myapp/?page=3&lt;/code&gt; へのリクエストでは、URLconfは &lt;code&gt;myapp/&lt;/code&gt; も探します。</target>
        </trans-unit>
        <trans-unit id="2b78a58c376655ac544fdd20d4725693c93da7d0" translate="yes" xml:space="preserve">
          <source>Pay extra attention if you set new default values for arguments in the &lt;code&gt;Field&lt;/code&gt; superclass; you want to make sure they&amp;rsquo;re always included, rather than disappearing if they take on the old default value.</source>
          <target state="translated">&lt;code&gt;Field&lt;/code&gt; スーパークラスの引数に新しいデフォルト値を設定する場合は特に注意してください。それらが古いデフォルト値をとる場合に消えるのではなく、それらが常に含まれるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="594c442547cc35487cd009181ae20319c80c5a71" translate="yes" xml:space="preserve">
          <source>Pay particular attention to backwards incompatible changes to get a clear idea of what will be needed for a successful upgrade.</source>
          <target state="translated">成功したアップグレードに必要なものの明確なアイデアを得るために、後方互換性のない変更に特に注意してください。</target>
        </trans-unit>
        <trans-unit id="e398f12507cb84c1ebf8a01e1677802a0e657315" translate="yes" xml:space="preserve">
          <source>Per-object summaries can be generated using the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; clause. When an &lt;code&gt;annotate()&lt;/code&gt; clause is specified, each object in the &lt;code&gt;QuerySet&lt;/code&gt; will be annotated with the specified values.</source>
          <target state="translated">オブジェクトごとの要約は、&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt;句を使用して生成できます。場合 &lt;code&gt;annotate()&lt;/code&gt; 句が指定され、各オブジェクト &lt;code&gt;QuerySet&lt;/code&gt; 指定された値で注釈されるであろう。</target>
        </trans-unit>
        <trans-unit id="b8c281fc601c15be7b044f13ee8e38598899e21d" translate="yes" xml:space="preserve">
          <source>Per-request transactions and streaming responses</source>
          <target state="translated">リクエストごとのトランザクションとストリーミング応答</target>
        </trans-unit>
        <trans-unit id="67f3db8d0939383b7e5120b105c86c3bd6dbf1be" translate="yes" xml:space="preserve">
          <source>Percent Rank</source>
          <target state="translated">割合ランク</target>
        </trans-unit>
        <trans-unit id="f99f33983bd0aae5f91d07dd7ab8345f193cc3e5" translate="yes" xml:space="preserve">
          <source>Perform the command&amp;rsquo;s actions for &lt;code&gt;app_config&lt;/code&gt;, which will be an &lt;a href=&quot;../ref/applications#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; instance corresponding to an application label given on the command line.</source>
          <target state="translated">&lt;a href=&quot;../ref/applications#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; に&lt;/a&gt;なるコマンドのアクションを実行し &lt;code&gt;app_config&lt;/code&gt; 。これはAppConfigになります。コマンドラインで指定されたアプリケーションラベルに対応インスタンスます。</target>
        </trans-unit>
        <trans-unit id="d095abe3a9010ab49f3950b5b1561b6615ba109b" translate="yes" xml:space="preserve">
          <source>Perform the command&amp;rsquo;s actions for &lt;code&gt;label&lt;/code&gt;, which will be the string as given on the command line.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; に対してコマンドのアクションを実行するます。これは、コマンドラインで指定された文字列になります。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="2b80df3bed690b3128861d9e152f675ea8826d81" translate="yes" xml:space="preserve">
          <source>Performance and optimization</source>
          <target state="translated">パフォーマンスと最適化</target>
        </trans-unit>
        <trans-unit id="bcd699a0cdae62872f3edfba9239ab5f07470457" translate="yes" xml:space="preserve">
          <source>Performance and optimization overview</source>
          <target state="translated">パフォーマンスと最適化の概要</target>
        </trans-unit>
        <trans-unit id="87b4f4b3bfcd6886b8193c17c86c824cb40213a8" translate="yes" xml:space="preserve">
          <source>Performance benchmarking</source>
          <target state="translated">パフォーマンスベンチマーク</target>
        </trans-unit>
        <trans-unit id="0cb883fc85b1fd84aaebb7319c682c586a065641" translate="yes" xml:space="preserve">
          <source>Performance considerations</source>
          <target state="translated">パフォーマンスの考慮事項</target>
        </trans-unit>
        <trans-unit id="ae714eedb21d7ab1528a4ae82422cec5289d2845" translate="yes" xml:space="preserve">
          <source>Performance considerations for large datasets</source>
          <target state="translated">大規模データセットのパフォーマンスに関する考察</target>
        </trans-unit>
        <trans-unit id="8ee3b2dc04e0215d9a974d428a5be7af6d478312" translate="yes" xml:space="preserve">
          <source>Performance considerations with ordering and sorting</source>
          <target state="translated">順序付けと並べ替えでの性能面での考慮点</target>
        </trans-unit>
        <trans-unit id="57eb76df8c228a52fa0a32fe3f7d805858d345f1" translate="yes" xml:space="preserve">
          <source>Performance issues paginating large &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">大規模な &lt;code&gt;QuerySet&lt;/code&gt; のページ付けに関するパフォーマンスの問題の</target>
        </trans-unit>
        <trans-unit id="7ceaba33d5069dbda23239422436b2c95b3fbf96" translate="yes" xml:space="preserve">
          <source>Performance optimizations</source>
          <target state="translated">パフォーマンスの最適化</target>
        </trans-unit>
        <trans-unit id="5becd8e661b6a97e9458257ed85b17fc0d3e0068" translate="yes" xml:space="preserve">
          <source>Performance optimizations are another category of trade-offs with convenience. For instance, caching is useful in production, less so for local development. Error reporting needs are also widely different.</source>
          <target state="translated">パフォーマンスの最適化は、利便性とのトレードオフの別のカテゴリーです。例えば、キャッシングはプロダクションでは便利ですが、ローカル開発ではあまり便利ではありません。また、エラー報告のニーズも大きく異なります。</target>
        </trans-unit>
        <trans-unit id="158f80dec0b85939f0f5846ccb6bc0da934a4aff" translate="yes" xml:space="preserve">
          <source>Performing actions after commit</source>
          <target state="translated">コミット後のアクションの実行</target>
        </trans-unit>
        <trans-unit id="cd0fb10828b82b902b570a4024cf081d37128641" translate="yes" xml:space="preserve">
          <source>Performing extra work</source>
          <target state="translated">余分な作業を行う</target>
        </trans-unit>
        <trans-unit id="350310b0607f1d6331a0ddbcedd2fc32ffb465f7" translate="yes" xml:space="preserve">
          <source>Performing global post-test teardown.</source>
          <target state="translated">グローバルなテスト後のティアダウンを実行します。</target>
        </trans-unit>
        <trans-unit id="cc61a8f27b7c24e7cb629cf9d4b96984b5a39b6d" translate="yes" xml:space="preserve">
          <source>Performing global pre-test setup.</source>
          <target state="translated">グローバルな事前テストのセットアップを実行します。</target>
        </trans-unit>
        <trans-unit id="71e37d0adb6adfac736d37bfa52a53ea1e3bf6e1" translate="yes" xml:space="preserve">
          <source>Performing raw SQL queries</source>
          <target state="translated">生のSQLクエリの実行</target>
        </trans-unit>
        <trans-unit id="cad75e52264fcd20385b958231648b076610e84b" translate="yes" xml:space="preserve">
          <source>Performing raw queries</source>
          <target state="translated">生のクエリを実行する</target>
        </trans-unit>
        <trans-unit id="cc3b1021e9a86a3acfa73ba992dd59266658de10" translate="yes" xml:space="preserve">
          <source>Performs URL rewriting based on the &lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt;&lt;code&gt;PREPEND_WWW&lt;/code&gt;&lt;/a&gt; settings.</source>
          <target state="translated">&lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt; &lt;code&gt;PREPEND_WWW&lt;/code&gt; に&lt;/a&gt;基づいてURL書き換えを実行します設定にます。</target>
        </trans-unit>
        <trans-unit id="d29a15d48c3ff7247ebc6f6ef2b637ea97801d97" translate="yes" xml:space="preserve">
          <source>Performs an SQL delete query on all rows in the &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; and returns the number of objects deleted and a dictionary with the number of deletions per object type.</source>
          <target state="translated">実行中のすべての行に対してSQL削除クエリ&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;を返すオブジェクトの数が削除され、オブジェクトタイプごとの欠失の数と辞書。</target>
        </trans-unit>
        <trans-unit id="c114706f49d4f5dc002f7814b9df80c8a2ed84f2" translate="yes" xml:space="preserve">
          <source>Performs an SQL update query for the specified fields, and returns the number of rows matched (which may not be equal to the number of rows updated if some rows already have the new value).</source>
          <target state="translated">指定されたフィールドに対してSQL更新クエリを実行し、マッチした行の数を返します(すでに新しい値を持つ行がある場合は、更新された行の数とは一致しない場合があります)。</target>
        </trans-unit>
        <trans-unit id="b48ee18bc781dc21a08722b397a52297df32eff1" translate="yes" xml:space="preserve">
          <source>Performs any cleaning on the &lt;code&gt;username&lt;/code&gt; (e.g. stripping LDAP DN information) prior to using it to get or create a user object. Returns the cleaned username.</source>
          <target state="translated">のクリーニングを実行します &lt;code&gt;username&lt;/code&gt; ユーザーオブジェクトを取得または作成するために使用する前ユーザー名の（LDAP DN情報の除去など）を実行します。クリーンアップされたユーザー名を返します。</target>
        </trans-unit>
        <trans-unit id="246a818df13cbbbbfc866f12a62fd447eac03353" translate="yes" xml:space="preserve">
          <source>Performs global post-test teardown, such as removing instrumentation from the template system and restoring normal email services.</source>
          <target state="translated">テンプレートシステムから機器を削除し、通常の電子メールサービスを復元するなど、グローバルなテスト後のティアダウンを実行します。</target>
        </trans-unit>
        <trans-unit id="a8b30211935a430f6cdf20f168e2eba4f87d8bb3" translate="yes" xml:space="preserve">
          <source>Performs global pre-test setup, such as installing instrumentation for the template rendering system and setting up the dummy email outbox.</source>
          <target state="translated">テンプレートレンダリングシステムのインスツルメンテーションのインストールや、ダミーのメール送信ボックスの設定など、グローバルなテスト前のセットアップを実行します。</target>
        </trans-unit>
        <trans-unit id="6177b018c2496ca26af918351b468dc1f146b310" translate="yes" xml:space="preserve">
          <source>Performs key view initialization prior to &lt;a href=&quot;#django.views.generic.base.View.dispatch&quot;&gt;&lt;code&gt;dispatch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Performs key view initialization prior to &lt;a href=&quot;#django.views.generic.base.View.dispatch&quot;&gt; &lt;code&gt;dispatch()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7b4fe6ff4dcae7c6f94c35e727b63487f7fdb00c" translate="yes" xml:space="preserve">
          <source>Perhaps logged-in admin users should be allowed to see unpublished &lt;code&gt;Questions&lt;/code&gt;, but not ordinary visitors. Again: whatever needs to be added to the software to accomplish this should be accompanied by a test, whether you write the test first and then make the code pass the test, or work out the logic in your code first and then write a test to prove it.</source>
          <target state="translated">おそらく、ログインした管理ユーザーは、未公開の &lt;code&gt;Questions&lt;/code&gt; を表示できるようにする必要があります、が、通常の訪問者は表示できません。繰り返しますが、これを実現するためにソフトウェアに追加する必要があるものには、テストを伴う必要があります。最初にテストを記述してからコードにテストを通過させるか、最初にコードのロジックを調べてからテストを記述します証明する。</target>
        </trans-unit>
        <trans-unit id="0e9fe7d5a36abc41d023282aff0764ffd9a1e922" translate="yes" xml:space="preserve">
          <source>Perhaps, for instance, your site includes a view whose results depend on several expensive queries, the results of which change at different intervals. In this case, it would not be ideal to use the full-page caching that the per-site or per-view cache strategies offer, because you wouldn&amp;rsquo;t want to cache the entire result (since some of the data changes often), but you&amp;rsquo;d still want to cache the results that rarely change.</source>
          <target state="translated">たとえば、サイトに、結果が複数の高価なクエリに依存するビューが含まれていて、その結果が異なる間隔で変化する場合があります。この場合、サイトごとまたはビューごとのキャッシュ戦略が提供する全ページキャッシュを使用することは理想的ではありません。なぜなら、データ全体が頻繁に変更されるため、結果全体をキャッシュしたくないからです。ただし、ほとんど変更されない結果をキャッシュする必要があります。</target>
        </trans-unit>
        <trans-unit id="8faebcc441548e3c376bd0355caeb12cebb88eba" translate="yes" xml:space="preserve">
          <source>Permission caching</source>
          <target state="translated">パーミッションキャッシング</target>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="5d919afbd469ebf76a8be7e58815187b8fe8bc59" translate="yes" xml:space="preserve">
          <source>Permissions and Authorization</source>
          <target state="translated">許可と認可</target>
        </trans-unit>
        <trans-unit id="a47f3fd0644dda3ff0b65116c2c9135682fd4f23" translate="yes" xml:space="preserve">
          <source>Permissions and authorization</source>
          <target state="translated">許可と認可</target>
        </trans-unit>
        <trans-unit id="6042a22bc7d97a7cd78da919ef0f626d92138bbf" translate="yes" xml:space="preserve">
          <source>Permissions can be set not only per type of object, but also per specific object instance. By using the &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_view_permission&quot;&gt;&lt;code&gt;has_view_permission()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_add_permission&quot;&gt;&lt;code&gt;has_add_permission()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt;&lt;code&gt;has_change_permission()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_delete_permission&quot;&gt;&lt;code&gt;has_delete_permission()&lt;/code&gt;&lt;/a&gt; methods provided by the &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; class, it is possible to customize permissions for different object instances of the same type.</source>
          <target state="translated">アクセス許可は、オブジェクトの種類ごとだけでなく、特定のオブジェクトインスタンスごとにも設定できます。使用して&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_view_permission&quot;&gt; &lt;code&gt;has_view_permission()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_add_permission&quot;&gt; &lt;code&gt;has_add_permission()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt; &lt;code&gt;has_change_permission()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.has_delete_permission&quot;&gt; &lt;code&gt;has_delete_permission()&lt;/code&gt; &lt;/a&gt;によって提供される方法&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; のの&lt;/a&gt;クラスを、同じタイプの異なるオブジェクトインスタンスのアクセス許可をカスタマイズすることが可能です。</target>
        </trans-unit>
        <trans-unit id="fbff237369de06d317a0b658feaf770230fade6a" translate="yes" xml:space="preserve">
          <source>Permissions: Binary (yes/no) flags designating whether a user may perform a certain task.</source>
          <target state="translated">パーミッション。ユーザーが特定のタスクを実行できるかどうかを指定するバイナリ (yes/no)フラグ。</target>
        </trans-unit>
        <trans-unit id="7a346cd10ffe699546f235f362a53bac9f81fa99" translate="yes" xml:space="preserve">
          <source>Persistent connections</source>
          <target state="translated">持続的な接続</target>
        </trans-unit>
        <trans-unit id="5527c702a1226ed849c17bf8545ec1a197d478da" translate="yes" xml:space="preserve">
          <source>Persistent connections avoid the overhead of re-establishing a connection to the database in each request. They&amp;rsquo;re controlled by the &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt;&lt;code&gt;CONN_MAX_AGE&lt;/code&gt;&lt;/a&gt; parameter which defines the maximum lifetime of a connection. It can be set independently for each database.</source>
          <target state="translated">永続的な接続により、各要求でデータベースへの接続を再確立するオーバーヘッドが回避されます。それらは、接続の最大存続期間を定義する&lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt; &lt;code&gt;CONN_MAX_AGE&lt;/code&gt; &lt;/a&gt;パラメーターによって制御されます。データベースごとに個別に設定できます。</target>
        </trans-unit>
        <trans-unit id="ecc8fd07befe6d71a839208418ee04d9af0cdb35" translate="yes" xml:space="preserve">
          <source>Persistent state</source>
          <target state="translated">永続的な状態</target>
        </trans-unit>
        <trans-unit id="496e9438ab65557e3360c256d99d6d71460da8a3" translate="yes" xml:space="preserve">
          <source>Philosophy</source>
          <target state="translated">Philosophy</target>
        </trans-unit>
        <trans-unit id="35cc717a3ea48a92f26c8b257f8b5c3c987027a3" translate="yes" xml:space="preserve">
          <source>Pickles of &lt;code&gt;QuerySets&lt;/code&gt; are only valid for the version of Django that was used to generate them. If you generate a pickle using Django version N, there is no guarantee that pickle will be readable with Django version N+1. Pickles should not be used as part of a long-term archival strategy.</source>
          <target state="translated">ピクルス &lt;code&gt;QuerySets&lt;/code&gt; それらを生成するために使用されたのDjangoのバージョンでのみ有効です。DjangoバージョンNを使用してピクルを生成する場合、DjangoバージョンN + 1でピクルが読み取り可能である保証はありません。ピクルスを長期アーカイブ戦略の一部として使用しないでください。</target>
        </trans-unit>
        <trans-unit id="6d0148232e25209752fd250046d1e1e5365c0bf9" translate="yes" xml:space="preserve">
          <source>Pickles of models are only valid for the version of Django that was used to generate them. If you generate a pickle using Django version N, there is no guarantee that pickle will be readable with Django version N+1. Pickles should not be used as part of a long-term archival strategy.</source>
          <target state="translated">モデルのピックルは、その生成に使用した Django のバージョンでのみ有効です。Django のバージョン N を使ってピックルを生成した場合、Django のバージョン N+1 でピックルが読める保証はありません。ピックルは長期的なアーカイブ戦略の一環として使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="e0e5d5560b715f0a73b38d639394514dc7764164" translate="yes" xml:space="preserve">
          <source>Pickling &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">酸洗 &lt;code&gt;QuerySet&lt;/code&gt; S</target>
        </trans-unit>
        <trans-unit id="3e577e5c97a799fa16a538451be3f3460858c9f4" translate="yes" xml:space="preserve">
          <source>Pickling objects</source>
          <target state="translated">ピックリングオブジェクト</target>
        </trans-unit>
        <trans-unit id="c9b609a7a0071985e1b196bfdacc310b8ce76780" translate="yes" xml:space="preserve">
          <source>Pinging Google</source>
          <target state="translated">Googleにpingする</target>
        </trans-unit>
        <trans-unit id="1aec9f7d616f37a87712e020c021c06578d6d716" translate="yes" xml:space="preserve">
          <source>Pinging Google via &lt;code&gt;manage.py&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;manage.py&lt;/code&gt; を介してGoogleにpingする</target>
        </trans-unit>
        <trans-unit id="2f1d58b998875409d1483ed8145f5535f153c8c0" translate="yes" xml:space="preserve">
          <source>Pixel width and height used for georeferencing the raster, as a point object with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members. See &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.geotransform&quot;&gt;&lt;code&gt;geotransform&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; メンバーを持つポイントオブジェクトとして、ラスターの地理参照に使用されるピクセルの幅と高さ。詳細については、&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.geotransform&quot;&gt; &lt;code&gt;geotransform&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="bc8a879aac31b9d6eb482c7dc9001a8e5a26ed67" translate="yes" xml:space="preserve">
          <source>Place.objects.all() returns all Places, regardless of whether they have Restaurants:</source>
          <target state="translated">Place.objects.all()は、レストランがあるかどうかに関わらず、すべての場所を返します。</target>
        </trans-unit>
        <trans-unit id="1472be598dad008e8b7e6176694c3682d869a694" translate="yes" xml:space="preserve">
          <source>Platform-specific instructions</source>
          <target state="translated">プラットフォーム固有の指示</target>
        </trans-unit>
        <trans-unit id="aff897904900c56f2ce8b62f77e12c92a2ed20e4" translate="yes" xml:space="preserve">
          <source>Playing with &lt;code&gt;Context&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;Context&lt;/code&gt; オブジェクトで遊ぶ</target>
        </trans-unit>
        <trans-unit id="6ac31ef33df4860a5777ea446d2c00537722d098" translate="yes" xml:space="preserve">
          <source>Playing with the API</source>
          <target state="translated">APIで遊ぶ</target>
        </trans-unit>
        <trans-unit id="945144904d116a346215bedd2ad08e4f4c3b1716" translate="yes" xml:space="preserve">
          <source>Please also consult platform-specific instructions if you are on &lt;a href=&quot;index#macos&quot;&gt;macOS&lt;/a&gt; or &lt;a href=&quot;index#windows&quot;&gt;Windows&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;index#macos&quot;&gt;macOS&lt;/a&gt;または&lt;a href=&quot;index#windows&quot;&gt;Windows&lt;/a&gt;を使用している場合は、プラットフォーム固有の手順も参照してください。</target>
        </trans-unit>
        <trans-unit id="a3063da44afe6d9259ba01aec843c1f12d20e110" translate="yes" xml:space="preserve">
          <source>Please also see the &lt;a href=&quot;#render-warning&quot;&gt;rendering warning&lt;/a&gt; as mentioned for &lt;a href=&quot;#django-admin-startapp&quot;&gt;&lt;code&gt;startapp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django-admin-startapp&quot;&gt; &lt;code&gt;startapp&lt;/code&gt; &lt;/a&gt;について述べたように、&lt;a href=&quot;#render-warning&quot;&gt;レンダリングの警告&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="f4b0dee64fbb0daeb99d6f6433dd16d0f3ea7666" translate="yes" xml:space="preserve">
          <source>Please don&amp;rsquo;t do it for this tutorial, but on the next page that displays a preview of the patch, you would click &amp;ldquo;Create pull request&amp;rdquo;.</source>
          <target state="translated">このチュートリアルでは行わないでください。パッチのプレビューを表示する次のページで、「プルリクエストの作成」をクリックします。</target>
        </trans-unit>
        <trans-unit id="dd3c3fcd9d54b9d240b3a7b691e97c29668e1d7d" translate="yes" xml:space="preserve">
          <source>Please note that according to &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-unicode-sets.html&quot;&gt;MySQL Unicode Character Sets&lt;/a&gt;, comparisons for the &lt;code&gt;utf8_general_ci&lt;/code&gt; collation are faster, but slightly less correct, than comparisons for &lt;code&gt;utf8_unicode_ci&lt;/code&gt;. If this is acceptable for your application, you should use &lt;code&gt;utf8_general_ci&lt;/code&gt; because it is faster. If this is not acceptable (for example, if you require German dictionary order), use &lt;code&gt;utf8_unicode_ci&lt;/code&gt; because it is more accurate.</source>
          <target state="translated">応じますのでご注意ください&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-unicode-sets.html&quot;&gt;MySQLのUnicode文字セット&lt;/a&gt;、のための比較 &lt;code&gt;utf8_general_ci&lt;/code&gt; の照合のための比較よりも、より高速ですが、わずかに少なく、正しい &lt;code&gt;utf8_unicode_ci&lt;/code&gt; 内。これがアプリケーションで許容できる場合は、 &lt;code&gt;utf8_general_ci&lt;/code&gt; を使用するほうが高速です。これが受け入れられない場合（たとえば、ドイツ語の辞書順が必要な場合）、より正確な &lt;code&gt;utf8_unicode_ci&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="61c9c7d6201e4421ab2907f232155b7d7af62fbc" translate="yes" xml:space="preserve">
          <source>Please note that the presence of this setting does not imply that Django&amp;rsquo;s CSRF protection is safe from cross-subdomain attacks by default - please see the &lt;a href=&quot;csrf#csrf-limitations&quot;&gt;CSRF limitations&lt;/a&gt; section.</source>
          <target state="translated">この設定の存在は、DjangoのCSRF保護がデフォルトでクロスサブドメイン攻撃から安全であることを意味しないことに注意してください&lt;a href=&quot;csrf#csrf-limitations&quot;&gt;-CSRF制限の&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f555e10e4c64d8e62d16b2b5b7c678648b4ff894" translate="yes" xml:space="preserve">
          <source>Please note the caveats under &lt;a href=&quot;../ref/settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt;&lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt;&lt;/a&gt;. For the case of a reverse proxy, it may be easier or more secure to configure the main Web server to do the redirect to HTTPS.</source>
          <target state="translated">&lt;a href=&quot;../ref/settings#std:setting-SECURE_PROXY_SSL_HEADER&quot;&gt; &lt;code&gt;SECURE_PROXY_SSL_HEADER&lt;/code&gt; &lt;/a&gt;の警告に注意してください。リバースプロキシの場合、メインWebサーバーを構成してHTTPSにリダイレクトする方が簡単または安全です。</target>
        </trans-unit>
        <trans-unit id="b25cb094d1d27b01e27c9afab7e6b1a51bce03d7" translate="yes" xml:space="preserve">
          <source>Please refer to its &lt;a href=&quot;contrib/gis/commands#django-admin-ogrinspect&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; in the GeoDjango documentation.</source>
          <target state="translated">GeoDjangoのドキュメントで&lt;a href=&quot;contrib/gis/commands#django-admin-ogrinspect&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d92355eefed916d708a8f8c8821d784a6d817613" translate="yes" xml:space="preserve">
          <source>Please refer to its &lt;a href=&quot;contrib/sitemaps#django-admin-ping_google&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; in the Sitemaps documentation.</source>
          <target state="translated">サイトマップのドキュメントで&lt;a href=&quot;contrib/sitemaps#django-admin-ping_google&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8f8a4e796321a065679280200da41cb9ae57915f" translate="yes" xml:space="preserve">
          <source>Please refer to its &lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfilesの&lt;/a&gt;ドキュメントの&lt;a href=&quot;contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="27545fdc451a436172a6796515d9ff68fee772aa" translate="yes" xml:space="preserve">
          <source>Please refer to its &lt;a href=&quot;contrib/staticfiles#django-admin-findstatic&quot;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfiles&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;contrib/staticfiles&quot;&gt;staticfilesの&lt;/a&gt;ドキュメントの&lt;a href=&quot;contrib/staticfiles#django-admin-findstatic&quot;&gt; &lt;code&gt;description&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fcc1657655e13b26336a1f918bea2362b8beb8ad" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_Geography&quot;&gt;PostGIS Geography Type&lt;/a&gt; documentation for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#PostGIS_Geography&quot;&gt;PostGIS地理タイプの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="eee66bf135a104e85862ac181583cbf6e6096e0b" translate="yes" xml:space="preserve">
          <source>Please refer to the notes about &lt;a href=&quot;#historical-models&quot;&gt;Historical models&lt;/a&gt; in migrations to see the implications that come along.</source>
          <target state="translated">移行の影響を確認するには、移行における&lt;a href=&quot;#historical-models&quot;&gt;履歴モデル&lt;/a&gt;に関する注意事項を参照してください。</target>
        </trans-unit>
        <trans-unit id="7b5132a644191e3e0c1bd4c851f5a29784f9272a" translate="yes" xml:space="preserve">
          <source>Plural form and po files</source>
          <target state="translated">複数形とpoファイル</target>
        </trans-unit>
        <trans-unit id="deece46c22e64f44a14fe2209222289025573b98" translate="yes" xml:space="preserve">
          <source>Pluralization</source>
          <target state="translated">Pluralization</target>
        </trans-unit>
        <trans-unit id="bfb18c81f7d12bc77bce9d95a4e7bbce79d43c94" translate="yes" xml:space="preserve">
          <source>Points to the model the field relates to. For example, &lt;code&gt;Author&lt;/code&gt; in &lt;code&gt;ForeignKey(Author, on_delete=models.CASCADE)&lt;/code&gt;. The &lt;code&gt;related_model&lt;/code&gt; for a &lt;code&gt;GenericForeignKey&lt;/code&gt; is always &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">フィールドが関連するモデルを指します。たとえば、 &lt;code&gt;Author&lt;/code&gt; in &lt;code&gt;ForeignKey(Author, on_delete=models.CASCADE)&lt;/code&gt; です。 &lt;code&gt;related_model&lt;/code&gt; ため &lt;code&gt;GenericForeignKey&lt;/code&gt; は、常にではありません &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71bb200b0c8a940ce59c402fc6398215220da8df" translate="yes" xml:space="preserve">
          <source>Populate the test database with fixture data from the given fixtures. (For more on fixtures, see the documentation for &lt;a href=&quot;#django-admin-loaddata&quot;&gt;&lt;code&gt;loaddata&lt;/code&gt;&lt;/a&gt; above.)</source>
          <target state="translated">指定したフィクスチャからのフィクスチャデータをテストデータベースに入力します。（フィクスチャの詳細については、上記の&lt;a href=&quot;#django-admin-loaddata&quot;&gt; &lt;code&gt;loaddata&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。）</target>
        </trans-unit>
        <trans-unit id="3a2edcda15f5ffb120fc20f1479582ba5b5f36fb" translate="yes" xml:space="preserve">
          <source>Populated (through &lt;a href=&quot;mixins-simple#django.views.generic.base.ContextMixin&quot;&gt;&lt;code&gt;ContextMixin&lt;/code&gt;&lt;/a&gt;) with the keyword arguments captured from the URL pattern that served the view.</source>
          <target state="translated">ビューを提供したURLパターンからキャプチャされたキーワード引数が（&lt;a href=&quot;mixins-simple#django.views.generic.base.ContextMixin&quot;&gt; &lt;code&gt;ContextMixin&lt;/code&gt; &lt;/a&gt;を介して）入力されます。</target>
        </trans-unit>
        <trans-unit id="d728346840abef332d96fd01dccf493e5038300e" translate="yes" xml:space="preserve">
          <source>Port 7000 on IP address &lt;code&gt;1.2.3.4&lt;/code&gt;:</source>
          <target state="translated">IPアドレス &lt;code&gt;1.2.3.4&lt;/code&gt; のポート7000 ：</target>
        </trans-unit>
        <trans-unit id="607d0c9b35e92f6cc376ca90f2895ba371a84f2b" translate="yes" xml:space="preserve">
          <source>Port 7000 on IP address &lt;code&gt;127.0.0.1&lt;/code&gt;:</source>
          <target state="translated">IPアドレス &lt;code&gt;127.0.0.1&lt;/code&gt; のポート7000 ：</target>
        </trans-unit>
        <trans-unit id="b46d886ce6b0db58100d9b5030cbdd743f26cf41" translate="yes" xml:space="preserve">
          <source>Port 7000 on IPv6 address &lt;code&gt;2001:0db8:1234:5678::9&lt;/code&gt;:</source>
          <target state="translated">IPv6アドレス &lt;code&gt;2001:0db8:1234:5678::9&lt;/code&gt; ポート7000 ：</target>
        </trans-unit>
        <trans-unit id="6e9c9cca16d90fd52eacd273a38fa72a12f667fc" translate="yes" xml:space="preserve">
          <source>Port 7000 on IPv6 address &lt;code&gt;::1&lt;/code&gt;:</source>
          <target state="translated">IPv6アドレスのポート7000 &lt;code&gt;::1&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="742e76e604364aedcc1fa967a72420adbbbae2a0" translate="yes" xml:space="preserve">
          <source>Port 8000 on IP address &lt;code&gt;1.2.3.4&lt;/code&gt;:</source>
          <target state="translated">IPアドレス &lt;code&gt;1.2.3.4&lt;/code&gt; のポート8000 ：</target>
        </trans-unit>
        <trans-unit id="bc2f03cb30b616fe88f752d7e01d955bfe250071" translate="yes" xml:space="preserve">
          <source>Port 8000 on IP address &lt;code&gt;127.0.0.1&lt;/code&gt;:</source>
          <target state="translated">IPアドレス &lt;code&gt;127.0.0.1&lt;/code&gt; のポート8000 ：</target>
        </trans-unit>
        <trans-unit id="4de2c8eb6aa5980c388083ab1f0fafcbfac5918f" translate="yes" xml:space="preserve">
          <source>Port 8000 on IPv4 address of host &lt;code&gt;localhost&lt;/code&gt;:</source>
          <target state="translated">ホスト &lt;code&gt;localhost&lt;/code&gt; の IPv4アドレスのポート8000 ：</target>
        </trans-unit>
        <trans-unit id="573ccc065de8b4c79dd9da36bc7dcb461a3d1be2" translate="yes" xml:space="preserve">
          <source>Port 8000 on IPv6 address &lt;code&gt;::1&lt;/code&gt;:</source>
          <target state="translated">IPv6アドレス &lt;code&gt;::1&lt;/code&gt; のポート8000 ：</target>
        </trans-unit>
        <trans-unit id="4da741a13093553d24e793918995988b42ce5ef5" translate="yes" xml:space="preserve">
          <source>Port 8000 on IPv6 address of host &lt;code&gt;localhost&lt;/code&gt;:</source>
          <target state="translated">ホスト &lt;code&gt;localhost&lt;/code&gt; の IPv6アドレスのポート8000 ：</target>
        </trans-unit>
        <trans-unit id="11572a96cabaee01b8320ac115b9990aee7241f0" translate="yes" xml:space="preserve">
          <source>Port to use for the SMTP server defined in &lt;a href=&quot;#std:setting-EMAIL_HOST&quot;&gt;&lt;code&gt;EMAIL_HOST&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#std:setting-EMAIL_HOST&quot;&gt; &lt;code&gt;EMAIL_HOST&lt;/code&gt; で&lt;/a&gt;定義されたSMTPサーバーに使用するポート。</target>
        </trans-unit>
        <trans-unit id="0990635d6e89d26c7cf1ecf413e1a3ce967ed2db" translate="yes" xml:space="preserve">
          <source>Portions of the earth&amp;rsquo;s surface may projected onto a two-dimensional, or Cartesian, plane. Projected coordinate systems are especially convenient for region-specific applications, e.g., if you know that your database will only cover geometries in &lt;a href=&quot;https://www.spatialreference.org/ref/epsg/2796/&quot;&gt;North Kansas&lt;/a&gt;, then you may consider using projection system specific to that region. Moreover, projected coordinate systems are defined in Cartesian units (such as meters or feet), easing distance calculations.</source>
          <target state="translated">地球の表面の一部は、2次元の平面またはデカルト平面に投影されます。投影座標系は、地域固有のアプリケーションに特に便利です。たとえば、データベースが&lt;a href=&quot;https://www.spatialreference.org/ref/epsg/2796/&quot;&gt;ノースカンザスの&lt;/a&gt;ジオメトリのみをカバーすることがわかっている場合は、その地域固有の投影システムの使用を検討できます。さらに、投影された座標系はデカルト単位（メートルやフィートなど）で定義され、距離の計算が容易になります。</target>
        </trans-unit>
        <trans-unit id="18762e8d6ba5f2c5db546d95048bef0d942060a9" translate="yes" xml:space="preserve">
          <source>Positional arguments can be expressions or Python values. Strings are assumed to be column references and will be wrapped in &lt;code&gt;F()&lt;/code&gt; expressions while other values will be wrapped in &lt;code&gt;Value()&lt;/code&gt; expressions.</source>
          <target state="translated">位置引数は、式またはPython値にすることができます。文字列は列参照と見なされ、 &lt;code&gt;F()&lt;/code&gt; 式でラップされますが、他の値は &lt;code&gt;Value()&lt;/code&gt; 式でラップされます。</target>
        </trans-unit>
        <trans-unit id="57aa2fd441e9ebdf27ee5187b667b9235ac71fa2" translate="yes" xml:space="preserve">
          <source>Positional interpolation: &lt;code&gt;obj&lt;/code&gt; contains a JavaScript Array object whose elements values are then sequentially interpolated in their corresponding &lt;code&gt;fmt&lt;/code&gt; placeholders in the same order they appear. For example:</source>
          <target state="translated">位置補間： &lt;code&gt;obj&lt;/code&gt; にはJavaScript配列オブジェクトが含まれ、その要素の値は、対応する &lt;code&gt;fmt&lt;/code&gt; プレースホルダーに、それらが出現するのと同じ順序で順次補間されます。例えば：</target>
        </trans-unit>
        <trans-unit id="681e79c0db6a401f4ddd7a4987052826179fc670" translate="yes" xml:space="preserve">
          <source>Possible values for &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt;&lt;code&gt;changefreq&lt;/code&gt;&lt;/a&gt;, whether you use a method or attribute, are:</source>
          <target state="translated">メソッドと属性のどちらを使用するかに&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt; &lt;code&gt;changefreq&lt;/code&gt; &lt;/a&gt;、changefreqに可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b490ea1c022fa91521273862fbe582512a00d2ba" translate="yes" xml:space="preserve">
          <source>Possible values for the setting are:</source>
          <target state="translated">設定可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7001a7b3fe9633e217615d8ec116930191433437" translate="yes" xml:space="preserve">
          <source>Post the package on a public repository, such as &lt;a href=&quot;https://pypi.org/&quot;&gt;the Python Package Index (PyPI)&lt;/a&gt;. &lt;a href=&quot;https://packaging.python.org&quot;&gt;packaging.python.org&lt;/a&gt; has &lt;a href=&quot;https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives&quot;&gt;a good tutorial&lt;/a&gt; for doing this.</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/&quot;&gt;Python Package Index（PyPI）&lt;/a&gt;などの公開リポジトリにパッケージを投稿します。&lt;a href=&quot;https://packaging.python.org&quot;&gt;Packaging.python.orgに&lt;/a&gt;は&lt;a href=&quot;https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives&quot;&gt;、&lt;/a&gt;これを行うための優れたチュートリアルがあります。</target>
        </trans-unit>
        <trans-unit id="678cbf7009afee05403a9a11e9851a53710762e8" translate="yes" xml:space="preserve">
          <source>Post-installation</source>
          <target state="translated">Post-installation</target>
        </trans-unit>
        <trans-unit id="f075ac1284323276cbb4295a60cdc325f91d79a0" translate="yes" xml:space="preserve">
          <source>Post-render callbacks</source>
          <target state="translated">レンダリング後のコールバック</target>
        </trans-unit>
        <trans-unit id="f6b2ee5af0705015c0259810547be11a12a12e56" translate="yes" xml:space="preserve">
          <source>PostGIS</source>
          <target state="translated">PostGIS</target>
        </trans-unit>
        <trans-unit id="2bea93831effd0e3ad7df53d76be03e00ff5b6cd" translate="yes" xml:space="preserve">
          <source>PostGIS &amp;amp; SpatiaLite</source>
          <target state="translated">PostGISとSpatiaLite</target>
        </trans-unit>
        <trans-unit id="11a4e4e05809d4f14d8be13109be6db393559bcb" translate="yes" xml:space="preserve">
          <source>PostGIS 2 includes an extension for PostgreSQL that&amp;rsquo;s used to enable spatial functionality:</source>
          <target state="translated">PostGIS 2には、空間機能を有効にするために使用されるPostgreSQLの拡張機能が含まれています。</target>
        </trans-unit>
        <trans-unit id="73a99390678212628538dd514696cce25b495507" translate="yes" xml:space="preserve">
          <source>PostGIS SQL equivalent:</source>
          <target state="translated">PostGISのSQLに相当するもの。</target>
        </trans-unit>
        <trans-unit id="7848491139f3962711791f73256bcd5da2e52827" translate="yes" xml:space="preserve">
          <source>PostGIS and MariaDB SQL equivalent:</source>
          <target state="translated">PostGISとMariaDBのSQLに相当する。</target>
        </trans-unit>
        <trans-unit id="1d1da10b3da9b356a1f4a1d6e8a8cdfb730bd398" translate="yes" xml:space="preserve">
          <source>PostGIS equivalent:</source>
          <target state="translated">PostGISに相当する。</target>
        </trans-unit>
        <trans-unit id="196b10bf3f4d00049cab5694548312b77ddc43e2" translate="yes" xml:space="preserve">
          <source>PostGIS is recommended, because it is the most mature and feature-rich open source spatial database.</source>
          <target state="translated">PostGIS は最も成熟しており、機能が豊富なオープンソースの空間データベースであるため、お勧めです。</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="bbd25fc89254dfdc1a222d745bb12b7ccc57b2be" translate="yes" xml:space="preserve">
          <source>PostgreSQL (with PostGIS), MySQL (mostly with MyISAM engine), Oracle, and SQLite (with SpatiaLite) are the spatial databases currently supported.</source>
          <target state="translated">現在サポートされている空間データベースは、PostgreSQL(PostGISを含む)、MySQL(主にMyISAMエンジンを含む)、Oracle、SQLite(SpatiaLiteを含む)である。</target>
        </trans-unit>
        <trans-unit id="2f5ea5c978e41d98e9cd9501d91ecdc32ecfb799" translate="yes" xml:space="preserve">
          <source>PostgreSQL allows the definition of custom range types. Django&amp;rsquo;s model and form field implementations use base classes below, and psycopg2 provides a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.register_range&quot;&gt;&lt;code&gt;register_range()&lt;/code&gt;&lt;/a&gt; to allow use of custom range types.</source>
          <target state="translated">PostgreSQLでは、カスタム範囲タイプを定義できます。Djangoのモデルとフォームフィールドの実装は、以下の基本クラスを使用します。psycopg2は、カスタムの範囲型を使用できるようにする&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.register_range&quot;&gt; &lt;code&gt;register_range()&lt;/code&gt; &lt;/a&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="fe4d770eb0d9650370218a8fa878b7a5b483ebc7" translate="yes" xml:space="preserve">
          <source>PostgreSQL and Oracle support tablespaces. SQLite, MariaDB and MySQL don&amp;rsquo;t.</source>
          <target state="translated">PostgreSQLとOracleはテーブルスペースをサポートしています。SQLite、MariaDB、およびMySQLではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="05f4ec56f55ff923cb4b3d56ae07f61bd20228d1" translate="yes" xml:space="preserve">
          <source>PostgreSQL connection settings</source>
          <target state="translated">PostgreSQLの接続設定</target>
        </trans-unit>
        <trans-unit id="f412ef2862c42e4812ecbb9665bab0d6019d9370" translate="yes" xml:space="preserve">
          <source>PostgreSQL considerations</source>
          <target state="translated">PostgreSQL の考察</target>
        </trans-unit>
        <trans-unit id="c655c4fb326b838552c931062ac52582724f272b" translate="yes" xml:space="preserve">
          <source>PostgreSQL doesn&amp;rsquo;t support &lt;code&gt;select_for_update()&lt;/code&gt; with &lt;a href=&quot;expressions#django.db.models.expressions.Window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; expressions.</source>
          <target state="translated">PostgreSQLは、&lt;a href=&quot;expressions#django.db.models.expressions.Window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;式での &lt;code&gt;select_for_update()&lt;/code&gt; をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="c867fef8faa5874e85b172667e33557340e635c7" translate="yes" xml:space="preserve">
          <source>PostgreSQL has a number of features which are not shared by the other databases Django supports. This optional module contains model fields and form fields for a number of PostgreSQL specific data types.</source>
          <target state="translated">PostgreSQL は、Django がサポートする他のデータベースでは共有されていない多くの機能を持っています。このオプションモジュールには、PostgreSQL の特定のデータ型のモデルフィールドとフォームフィールドが含まれています。</target>
        </trans-unit>
        <trans-unit id="bb7e67fcf426788e20ae1eb3f7197518890ae1e2" translate="yes" xml:space="preserve">
          <source>PostgreSQL has its own full text search implementation built-in. While not as powerful as some other search engines, it has the advantage of being inside your database and so can easily be combined with other relational queries such as categorization.</source>
          <target state="translated">PostgreSQLには独自の全文検索の実装が組み込まれています。他の検索エンジンほど強力ではありませんが、データベース内にあるという利点があるため、カテゴリ化などの他のリレーショナルクエリと簡単に組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="3ef98aade0e8da7a08e5531509a27a327b441abe" translate="yes" xml:space="preserve">
          <source>PostgreSQL has limited support for &lt;code&gt;ValueRange&lt;/code&gt; and only supports use of the standard start and end points, such as &lt;code&gt;CURRENT ROW&lt;/code&gt; and &lt;code&gt;UNBOUNDED
FOLLOWING&lt;/code&gt;.</source>
          <target state="translated">PostgreSQLは &lt;code&gt;ValueRange&lt;/code&gt; のサポートに制限があり、 &lt;code&gt;CURRENT ROW&lt;/code&gt; や &lt;code&gt;UNBOUNDED FOLLOWING&lt;/code&gt; などの標準の開始点と終了点の使用のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="3643545450f0b1060eaf31855775f5e742665810" translate="yes" xml:space="preserve">
          <source>PostgreSQL has some rather esoteric behavior when using indexes and slices on multidimensional arrays. It will always work to use indexes to reach down to the final underlying data, but most other slices behave strangely at the database level and cannot be supported in a logical, consistent fashion by Django.</source>
          <target state="translated">PostgreSQL には、多次元配列上でインデックスやスライスを使用する際に、かなり難解な振る舞いがあります。最終的な基礎となるデータに到達するためにインデックスを使用することは常に機能しますが、他のほとんどのスライスはデータベースレベルで奇妙な振る舞いをし、Djangoでは論理的で一貫性のある方法でサポートすることができません。</target>
        </trans-unit>
        <trans-unit id="168c98d4a0d8ebe6230bc3c052e4fdd2ba25b19e" translate="yes" xml:space="preserve">
          <source>PostgreSQL has two native JSON based data types: &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt;. The main difference between them is how they are stored and how they can be queried. PostgreSQL&amp;rsquo;s &lt;code&gt;json&lt;/code&gt; field is stored as the original string representation of the JSON and must be decoded on the fly when queried based on keys. The &lt;code&gt;jsonb&lt;/code&gt; field is stored based on the actual structure of the JSON which allows indexing. The trade-off is a small additional cost on writing to the &lt;code&gt;jsonb&lt;/code&gt; field. &lt;code&gt;JSONField&lt;/code&gt; uses &lt;code&gt;jsonb&lt;/code&gt;.</source>
          <target state="translated">PostgreSQLには、 &lt;code&gt;json&lt;/code&gt; と &lt;code&gt;jsonb&lt;/code&gt; という 2つのネイティブJSONベースのデータ型があります。それらの主な違いは、それらがどのように格納され、どのように照会できるかです。 PostgreSQLの &lt;code&gt;json&lt;/code&gt; フィールドは、JSONの元の文字列表現として保存され、キーに基づいてクエリされたときにその場でデコードする必要があります。 &lt;code&gt;jsonb&lt;/code&gt; フィールドは、索引付けを可能にするJSONの実際の構造に基づいて格納されています。トレードオフは、 &lt;code&gt;jsonb&lt;/code&gt; フィールドへの書き込みのわずかな追加コストです。 &lt;code&gt;JSONField&lt;/code&gt; はjsonbを使用し &lt;code&gt;jsonb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0657db99aab825991981ffd509a6318950c7ef93" translate="yes" xml:space="preserve">
          <source>PostgreSQL is the most capable of all the databases here in terms of schema support.</source>
          <target state="translated">PostgreSQLはスキーマのサポートという点では、ここにあるすべてのデータベースの中で最も能力があります。</target>
        </trans-unit>
        <trans-unit id="55dd5c922f681934365cca704f104392d442ece2" translate="yes" xml:space="preserve">
          <source>PostgreSQL notes</source>
          <target state="translated">PostgreSQLノート</target>
        </trans-unit>
        <trans-unit id="cdd6eae37307f69a33d4850f1814d7cc40ca27df" translate="yes" xml:space="preserve">
          <source>PostgreSQL provides a set of SQL operators that can be used together with the range data types (see &lt;a href=&quot;https://www.postgresql.org/docs/current/functions-range.html#RANGE-OPERATORS-TABLE&quot;&gt;the PostgreSQL documentation for the full details of range operators&lt;/a&gt;). This class is meant as a convenient method to avoid typos. The operator names overlap with the names of corresponding lookups.</source>
          <target state="translated">PostgreSQLは、範囲データ型と一緒に使用できるSQL演算子のセットを提供します（&lt;a href=&quot;https://www.postgresql.org/docs/current/functions-range.html#RANGE-OPERATORS-TABLE&quot;&gt;範囲演算子の詳細については、PostgreSQLのドキュメントを参照してください&lt;/a&gt;）。このクラスは、タイプミスを回避するための便利なメソッドとして意図されています。演算子名は、対応するルックアップの名前と重複しています。</target>
        </trans-unit>
        <trans-unit id="1b9fdd15f79f970458f34ca1a3022486efe7c590" translate="yes" xml:space="preserve">
          <source>PostgreSQL requires functions referenced in the condition to be marked as IMMUTABLE. Django doesn&amp;rsquo;t validate this but PostgreSQL will error. This means that functions such as &lt;a href=&quot;database-functions#date-functions&quot;&gt;Date functions&lt;/a&gt; and &lt;a href=&quot;database-functions#django.db.models.functions.Concat&quot;&gt;&lt;code&gt;Concat&lt;/code&gt;&lt;/a&gt; aren&amp;rsquo;t accepted. If you store dates in &lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;, comparison to &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects may require the &lt;code&gt;tzinfo&lt;/code&gt; argument to be provided because otherwise the comparison could result in a mutable function due to the casting Django does for &lt;a href=&quot;querysets#field-lookups&quot;&gt;lookups&lt;/a&gt;.</source>
          <target state="translated">PostgreSQLでは、条件で参照される関数をIMMUTABLEとしてマークする必要があります。Djangoはこれを検証しませんが、PostgreSQLはエラーになります。つまり、&lt;a href=&quot;database-functions#date-functions&quot;&gt;Date関数&lt;/a&gt;や&lt;a href=&quot;database-functions#django.db.models.functions.Concat&quot;&gt; &lt;code&gt;Concat&lt;/code&gt; &lt;/a&gt;などの関数は受け入れられません。&lt;a href=&quot;fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; &lt;/a&gt;に日付を格納する場合、&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;オブジェクトとの比較では &lt;code&gt;tzinfo&lt;/code&gt; 引数を指定する必要がある場合があり&lt;a href=&quot;querysets#field-lookups&quot;&gt;ます&lt;/a&gt;。それ以外の場合、Djangoがルックアップのためにキャストするため、比較により変更可能な関数が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a085e76da94d3489a9588f510cd24ea971e32f8b" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific aggregation functions</source>
          <target state="translated">PostgreSQL固有の集計関数</target>
        </trans-unit>
        <trans-unit id="17d23c73509ab198a20410e4a6424d0513c56222" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific database constraints</source>
          <target state="translated">PostgreSQL特有のデータベース制約</target>
        </trans-unit>
        <trans-unit id="821a2053b711fd6c472f917be0d74de35f6e9b4e" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific database functions</source>
          <target state="translated">PostgreSQL固有のデータベース機能</target>
        </trans-unit>
        <trans-unit id="5309ed46b34a6d7276f1b802d8aa991ba94fedef" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific form fields and widgets</source>
          <target state="translated">PostgreSQL特有のフォームフィールドとウィジェット</target>
        </trans-unit>
        <trans-unit id="e93190dcec5536d34ee763e854fad91df855c274" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific lookups</source>
          <target state="translated">PostgreSQL固有の検索</target>
        </trans-unit>
        <trans-unit id="70834072f4b64529a787c3ea195778e0df214157" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific model fields</source>
          <target state="translated">PostgreSQL固有のモデルフィールド</target>
        </trans-unit>
        <trans-unit id="12c585a6756725c70222f1410fdd60f0c5a75626" translate="yes" xml:space="preserve">
          <source>PostgreSQL specific model indexes</source>
          <target state="translated">PostgreSQL固有のモデルインデックス</target>
        </trans-unit>
        <trans-unit id="f0c4bc5c32a46fb3a181291fa84618678666babd" translate="yes" xml:space="preserve">
          <source>PostgreSQL support</source>
          <target state="translated">PostgreSQL サポート</target>
        </trans-unit>
        <trans-unit id="0eef3b53c86498212ac385626e52ac7c316ecaf6" translate="yes" xml:space="preserve">
          <source>PostgreSQL supports additional data integrity constraints available from the &lt;code&gt;django.contrib.postgres.constraints&lt;/code&gt; module. They are added in the model &lt;a href=&quot;../../models/options#django.db.models.Options.constraints&quot;&gt;&lt;code&gt;Meta.constraints&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">PostgreSQLは、 &lt;code&gt;django.contrib.postgres.constraints&lt;/code&gt; モジュールから利用可能な追加のデータ整合性制約をサポートしています。それらはモデルの&lt;a href=&quot;../../models/options#django.db.models.Options.constraints&quot;&gt; &lt;code&gt;Meta.constraints&lt;/code&gt; &lt;/a&gt;オプションに追加されます。</target>
        </trans-unit>
        <trans-unit id="25d283cdcf63fd5991436c1209f908667770d60e" translate="yes" xml:space="preserve">
          <source>PostgreSQL supports the &lt;code&gt;CONCURRENTLY&lt;/code&gt; option to &lt;code&gt;CREATE INDEX&lt;/code&gt; and &lt;code&gt;DROP INDEX&lt;/code&gt; statements to add and remove indexes without locking out writes. This option is useful for adding or removing an index in a live production database.</source>
          <target state="translated">PostgreSQLは、書き込みをロックアウトせずにインデックスを追加および削除するための &lt;code&gt;CREATE INDEX&lt;/code&gt; および &lt;code&gt;DROP INDEX&lt;/code&gt; ステートメントの &lt;code&gt;CONCURRENTLY&lt;/code&gt; オプションをサポートしています。このオプションは、稼働中の本番データベースでインデックスを追加または削除する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="6453afab7ab6ba96fb054939ada93afed76c9400" translate="yes" xml:space="preserve">
          <source>PostgreSQL users</source>
          <target state="translated">PostgreSQL利用者</target>
        </trans-unit>
        <trans-unit id="6a96fa582734cacd75112dd8c6e708395b968e6d" translate="yes" xml:space="preserve">
          <source>PostgreSQL users, refer to the &lt;a href=&quot;https://www.postgresql.org/docs/current/multibyte.html&quot;&gt;PostgreSQL manual&lt;/a&gt; (section 22.3.2 in PostgreSQL 9) for details on creating databases with the correct encoding.</source>
          <target state="translated">PostgreSQLユーザーの場合、正しいエンコードでデータベースを作成する方法の詳細については、&lt;a href=&quot;https://www.postgresql.org/docs/current/multibyte.html&quot;&gt;PostgreSQLのマニュアル&lt;/a&gt;（PostgreSQL 9のセクション22.3.2）を参照してください。</target>
        </trans-unit>
        <trans-unit id="99c3be427ccc82c1f56376a400dc28af2dd57965" translate="yes" xml:space="preserve">
          <source>PostgreSQL uses 1-based indexing for array fields when writing raw SQL. However these indexes and those used in &lt;a href=&quot;#std:fieldlookup-arrayfield.slice&quot;&gt;&lt;code&gt;slices&lt;/code&gt;&lt;/a&gt; use 0-based indexing to be consistent with Python.</source>
          <target state="translated">PostgreSQLは、生のSQLを書き込むときに配列フィールドに1ベースのインデックスを使用します。ただし、これらのインデックスと&lt;a href=&quot;#std:fieldlookup-arrayfield.slice&quot;&gt; &lt;code&gt;slices&lt;/code&gt; &lt;/a&gt;使用されるインデックスは、Pythonとの一貫性を保つために0ベースのインデックスを使用します。</target>
        </trans-unit>
        <trans-unit id="a4329b4028fdbd21bc77a3aac453280324b61e4c" translate="yes" xml:space="preserve">
          <source>PostgreSQL uses 1-based indexing for array fields when writing raw SQL. However these slices and those used in &lt;a href=&quot;#std:fieldlookup-arrayfield.index&quot;&gt;&lt;code&gt;indexes&lt;/code&gt;&lt;/a&gt; use 0-based indexing to be consistent with Python.</source>
          <target state="translated">PostgreSQLは、生のSQLを書き込むときに配列フィールドに1ベースのインデックスを使用します。ただし、これらのスライスと&lt;a href=&quot;#std:fieldlookup-arrayfield.index&quot;&gt; &lt;code&gt;indexes&lt;/code&gt; &lt;/a&gt;使用されるスライスは、Pythonとの一貫性を保つために0ベースのインデックスを使用します。</target>
        </trans-unit>
        <trans-unit id="ed068c3d2667549ee11391e449bacfc1b001022c" translate="yes" xml:space="preserve">
          <source>PostgreSQL: &lt;code&gt;Greatest&lt;/code&gt; will return the largest non-null expression, or &lt;code&gt;null&lt;/code&gt; if all expressions are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">PostgreSQLは： &lt;code&gt;Greatest&lt;/code&gt; 最大の非ヌルの表現を返し、またはだろう &lt;code&gt;null&lt;/code&gt; すべての式がある場合 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f655593cd1eb913446d7c92b93bcc2a048ac139" translate="yes" xml:space="preserve">
          <source>PostgreSQL: &lt;code&gt;Least&lt;/code&gt; will return the smallest non-null expression, or &lt;code&gt;null&lt;/code&gt; if all expressions are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">PostgreSQLは： &lt;code&gt;Least&lt;/code&gt; 最小のnull以外の表現を返し、またはだろう &lt;code&gt;null&lt;/code&gt; すべての式がある場合 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e9bddaf93ff070867c9370e73d30d3f1a143b9a" translate="yes" xml:space="preserve">
          <source>PostgreSQL: no requirements (see &lt;a href=&quot;https://www.postgresql.org/docs/current/datatype-datetime.html#DATATYPE-TIMEZONES&quot;&gt;Time Zones&lt;/a&gt;).</source>
          <target state="translated">PostgreSQL：要件はありません（&lt;a href=&quot;https://www.postgresql.org/docs/current/datatype-datetime.html#DATATYPE-TIMEZONES&quot;&gt;タイムゾーンを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c20ce7c612af9190f6bcf94ead500a92e2ea214d" translate="yes" xml:space="preserve">
          <source>Postgres.app</source>
          <target state="translated">Postgres.app</target>
        </trans-unit>
        <trans-unit id="523059071cfa07b7c0f18a203eb1612067f7be33" translate="yes" xml:space="preserve">
          <source>Prefer using &lt;code&gt;dependencies&lt;/code&gt; over &lt;code&gt;run_before&lt;/code&gt; when possible. You should only use &lt;code&gt;run_before&lt;/code&gt; if it is undesirable or impractical to specify &lt;code&gt;dependencies&lt;/code&gt; in the migration which you want to run after the one you are writing.</source>
          <target state="translated">&lt;code&gt;run_before&lt;/code&gt; 、run_beforeよりも &lt;code&gt;dependencies&lt;/code&gt; を使用することをお勧めします。 &lt;code&gt;run_before&lt;/code&gt; を使用するのは、作成中のマイグレーションの後に実行したいマイグレーションに &lt;code&gt;dependencies&lt;/code&gt; を指定することが望ましくないか実用的でない場合のみにしてください。</target>
        </trans-unit>
        <trans-unit id="f97a5478b5bba7828765ab369cbe0478c04066f4" translate="yes" xml:space="preserve">
          <source>Prefetches the given lookups on an iterable of model instances. This is useful in code that receives a list of model instances as opposed to a &lt;code&gt;QuerySet&lt;/code&gt;; for example, when fetching models from a cache or instantiating them manually.</source>
          <target state="translated">モデルインスタンスのイテラブルで指定されたルックアップをプリフェッチします。これは、 &lt;code&gt;QuerySet&lt;/code&gt; ではなく、モデルインスタンスのリストを受け取るコードで役立ちます。たとえば、キャッシュからモデルをフェッチしたり、手動でインスタンス化したりする場合。</target>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Prefix</target>
        </trans-unit>
        <trans-unit id="115927d84d6eb90b2707da9a9f235e3d14a2a76d" translate="yes" xml:space="preserve">
          <source>Prefixes (optional)</source>
          <target state="translated">接頭辞(オプション</target>
        </trans-unit>
        <trans-unit id="6dca0e059b22a6cfdd560c923d98583c63598a89" translate="yes" xml:space="preserve">
          <source>Prefixes for forms</source>
          <target state="translated">フォームの接頭辞</target>
        </trans-unit>
        <trans-unit id="ad118ef82fcc3c54b6d51992f8c272b56add11d6" translate="yes" xml:space="preserve">
          <source>Prepared Geometries</source>
          <target state="translated">用意された幾何学</target>
        </trans-unit>
        <trans-unit id="ff321486de056243480d955524cf120c975fc0b0" translate="yes" xml:space="preserve">
          <source>Preparing the software for localization. Usually done by developers.</source>
          <target state="translated">ソフトウェアをローカライズするための準備をすること。通常は開発者が行う。</target>
        </trans-unit>
        <trans-unit id="e4c8443407ed08814844976bdb433740cda7b90f" translate="yes" xml:space="preserve">
          <source>Prepopulated fields aren&amp;rsquo;t modified by JavaScript after a value has been saved. It&amp;rsquo;s usually undesired that slugs change (which would cause an object&amp;rsquo;s URL to change if the slug is used in it).</source>
          <target state="translated">値が保存された後、事前入力されたフィールドはJavaScriptによって変更されません。通常、スラッグが変更されることは望ましくありません（スラッグが使用されている場合、オブジェクトのURLが変更されます）。</target>
        </trans-unit>
        <trans-unit id="854812af4e2b3c438cb6a06192eef07b305b60dd" translate="yes" xml:space="preserve">
          <source>Preprocesses context data that will be used for rendering a template. Accepts a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; of context data. By default, returns the same &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">テンプレートのレンダリングに使用されるコンテキストデータを前処理します。コンテキストデータの&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;を受け入れます。デフォルトでは、同じ&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="6090228bf8ad81ac4558889d4268c8ed63d5bd4f" translate="yes" xml:space="preserve">
          <source>Preprocessing values before saving</source>
          <target state="translated">保存前の値の前処理</target>
        </trans-unit>
        <trans-unit id="63ecfb2b12c0053474378d6a25321470acb87657" translate="yes" xml:space="preserve">
          <source>Prerequisite: uWSGI</source>
          <target state="translated">前提条件:uWSGI</target>
        </trans-unit>
        <trans-unit id="8ebe16f4fda75e7db8792297762ca8fc8c47daa2" translate="yes" xml:space="preserve">
          <source>Present date-based objects in year/month/day archive pages, associated detail, and &amp;ldquo;latest&amp;rdquo; pages.</source>
          <target state="translated">年/月/日のアーカイブページ、関連する詳細、および「最新」ページに日付ベースのオブジェクトを表示します。</target>
        </trans-unit>
        <trans-unit id="fe9922db7f8818e55a4f63a4c438eac414d5121e" translate="yes" xml:space="preserve">
          <source>Presents a form for entering a new password.</source>
          <target state="translated">新しいパスワードを入力するためのフォームを提示します。</target>
        </trans-unit>
        <trans-unit id="95263d920ccc7b877fb77950cfacbe298bbdc8c2" translate="yes" xml:space="preserve">
          <source>Presents a view which informs the user that the password has been successfully changed.</source>
          <target state="translated">パスワードが正常に変更されたことをユーザーに通知するビューを表示します。</target>
        </trans-unit>
        <trans-unit id="b0f04b4930f7ab4066429f8a65023b692cff21f6" translate="yes" xml:space="preserve">
          <source>Preserves the test database between test runs. This has the advantage of skipping both the create and destroy actions which can greatly decrease the time to run tests, especially those in a large test suite. If the test database does not exist, it will be created on the first run and then preserved for each subsequent run. Any unapplied migrations will also be applied to the test database before running the test suite.</source>
          <target state="translated">テスト実行の間にテストデータベースを保持します。これは、特に大規模なテストスイートでは、テストの実行時間を大幅に短縮することができる create と destroy の両方のアクションをスキップするという利点があります。テストデータベースが存在しない場合、最初の実行時に作成され、その後の各実行時に保存されます。適用されていない移行は、テストスイートを実行する前にテストデータベースにも適用されます。</target>
        </trans-unit>
        <trans-unit id="8737fc5545c509024758feaeb115427390749ff2" translate="yes" xml:space="preserve">
          <source>Preserves the test database between test runs. This has the advantage of skipping both the create and destroy actions which can greatly decrease the time to run tests, especially those in a large test suite. If the test database does not exist, it will be created on the first run and then preserved for each subsequent run. Unless the &lt;a href=&quot;settings#std:setting-TEST_MIGRATE&quot;&gt;&lt;code&gt;MIGRATE&lt;/code&gt;&lt;/a&gt; test setting is &lt;code&gt;False&lt;/code&gt;, any unapplied migrations will also be applied to the test database before running the test suite.</source>
          <target state="translated">Preserves the test database between test runs. This has the advantage of skipping both the create and destroy actions which can greatly decrease the time to run tests, especially those in a large test suite. If the test database does not exist, it will be created on the first run and then preserved for each subsequent run. Unless the &lt;a href=&quot;settings#std:setting-TEST_MIGRATE&quot;&gt; &lt;code&gt;MIGRATE&lt;/code&gt; &lt;/a&gt; test setting is &lt;code&gt;False&lt;/code&gt; , any unapplied migrations will also be applied to the test database before running the test suite.</target>
        </trans-unit>
        <trans-unit id="44c0d9efff4e1dd08f3a8f202f1ed9af96de27c8" translate="yes" xml:space="preserve">
          <source>Preserving the test database</source>
          <target state="translated">テストデータベースの保存</target>
        </trans-unit>
        <trans-unit id="027a0b03c04a3561860ebf6a28cdaa5f9495d276" translate="yes" xml:space="preserve">
          <source>Press [TAB] to see all available options.</source>
          <target state="translated">TAB]を押すと、利用可能なすべてのオプションが表示されます。</target>
        </trans-unit>
        <trans-unit id="0e492bbbbf55bd53cc9ac57b239a141a023fbf86" translate="yes" xml:space="preserve">
          <source>Prevent deletion of the referenced object by raising &lt;a href=&quot;../exceptions#django.db.models.ProtectedError&quot;&gt;&lt;code&gt;ProtectedError&lt;/code&gt;&lt;/a&gt;, a subclass of &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;django.db.IntegrityError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;django.db.IntegrityError&lt;/code&gt; の&lt;/a&gt;サブクラスである&lt;a href=&quot;../exceptions#django.db.models.ProtectedError&quot;&gt; &lt;code&gt;ProtectedError&lt;/code&gt; を発生&lt;/a&gt;させることにより、参照オブジェクトの削除を防ぎます。</target>
        </trans-unit>
        <trans-unit id="a2793e847f9131a7c4afdf597b4fa39bf675d9f1" translate="yes" xml:space="preserve">
          <source>Prevent deletion of the referenced object by raising &lt;a href=&quot;../exceptions#django.db.models.RestrictedError&quot;&gt;&lt;code&gt;RestrictedError&lt;/code&gt;&lt;/a&gt; (a subclass of &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;django.db.IntegrityError&lt;/code&gt;&lt;/a&gt;). Unlike &lt;a href=&quot;#django.db.models.PROTECT&quot;&gt;&lt;code&gt;PROTECT&lt;/code&gt;&lt;/a&gt;, deletion of the referenced object is allowed if it also references a different object that is being deleted in the same operation, but via a &lt;a href=&quot;#django.db.models.CASCADE&quot;&gt;&lt;code&gt;CASCADE&lt;/code&gt;&lt;/a&gt; relationship.</source>
          <target state="translated">Prevent deletion of the referenced object by raising &lt;a href=&quot;../exceptions#django.db.models.RestrictedError&quot;&gt; &lt;code&gt;RestrictedError&lt;/code&gt; &lt;/a&gt; (a subclass of &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;django.db.IntegrityError&lt;/code&gt; &lt;/a&gt;). Unlike &lt;a href=&quot;#django.db.models.PROTECT&quot;&gt; &lt;code&gt;PROTECT&lt;/code&gt; &lt;/a&gt;, deletion of the referenced object is allowed if it also references a different object that is being deleted in the same operation, but via a &lt;a href=&quot;#django.db.models.CASCADE&quot;&gt; &lt;code&gt;CASCADE&lt;/code&gt; &lt;/a&gt; relationship.</target>
        </trans-unit>
        <trans-unit id="b9f9f23aa624c2de9d0358a0ae6fff5bf1557a95" translate="yes" xml:space="preserve">
          <source>Preventing clickjacking</source>
          <target state="translated">クリックジャッキングの防止</target>
        </trans-unit>
        <trans-unit id="511c81c16793858ca2ece2ae2e8234d3972a01c1" translate="yes" xml:space="preserve">
          <source>Preventing duplicate signals</source>
          <target state="translated">重複信号の防止</target>
        </trans-unit>
        <trans-unit id="67c644023e370d9dc7aac34e432d53b5826aaa6e" translate="yes" xml:space="preserve">
          <source>Preventing header injection</source>
          <target state="translated">ヘッダー注入の防止</target>
        </trans-unit>
        <trans-unit id="165f911940c6e164a716a8fcc974dd7cb43ad967" translate="yes" xml:space="preserve">
          <source>Prevents deleting the temporary &lt;code&gt;.pot&lt;/code&gt; files generated before creating the &lt;code&gt;.po&lt;/code&gt; file. This is useful for debugging errors which may prevent the final language files from being created.</source>
          <target state="translated">&lt;code&gt;.po&lt;/code&gt; ファイルを作成する前に生成された一時的な &lt;code&gt;.pot&lt;/code&gt; ファイルを削除しないようにします。これは、最終的な言語ファイルの作成を妨げる可能性があるエラーのデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ba291d0888026cf59268d79dfc8b464694ef680e" translate="yes" xml:space="preserve">
          <source>Prevents specific applications or models (specified in the form of &lt;code&gt;app_label.ModelName&lt;/code&gt;) from being dumped. If you specify a model name, the output will be restricted to that model, rather than the entire application. You can also mix application names and model names.</source>
          <target state="translated">特定のアプリケーションまたはモデル（ &lt;code&gt;app_label.ModelName&lt;/code&gt; の形式で指定）がダンプされないようにします。モデル名を指定すると、出力はアプリケーション全体ではなく、そのモデルに制限されます。アプリケーション名とモデル名を混在させることもできます。</target>
        </trans-unit>
        <trans-unit id="4264a4a72226a36691ccc5dac4c6de245da90be9" translate="yes" xml:space="preserve">
          <source>Previewing your changes</source>
          <target state="translated">変更点のプレビュー</target>
        </trans-unit>
        <trans-unit id="cbb8f40b05c3587bf2c1a05a6668d89d83c3d4ea" translate="yes" xml:space="preserve">
          <source>Previous versions of this document recommended configuring your web server to ensure it validates incoming HTTP &lt;code&gt;Host&lt;/code&gt; headers. While this is still recommended, in many common web servers a configuration that seems to validate the &lt;code&gt;Host&lt;/code&gt; header may not in fact do so. For instance, even if Apache is configured such that your Django site is served from a non-default virtual host with the &lt;code&gt;ServerName&lt;/code&gt; set, it is still possible for an HTTP request to match this virtual host and supply a fake &lt;code&gt;Host&lt;/code&gt; header. Thus, Django now requires that you set &lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; explicitly rather than relying on web server configuration.</source>
          <target state="translated">このドキュメントの以前のバージョンでは、着信HTTP &lt;code&gt;Host&lt;/code&gt; ヘッダーを確実に検証するようにWebサーバーを構成することを推奨していました。これは依然として推奨されますが、多くの一般的なWebサーバーでは、 &lt;code&gt;Host&lt;/code&gt; ヘッダーを検証するように見える構成でも実際にはそうではない場合があります。たとえば、Djangoサイトが &lt;code&gt;ServerName&lt;/code&gt; が設定されたデフォルト以外の仮想ホストから提供されるようにApacheが設定されている場合でも、HTTPリクエストがこの仮想ホストと一致し、偽の &lt;code&gt;Host&lt;/code&gt; ヘッダーを提供する可能性があります。したがって、Django では、Webサーバーの設定に依存するのではなく、&lt;a href=&quot;../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; を&lt;/a&gt;明示的に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0c4b272cedf3b2a30ec92ffb3f4fe6f988f414f0" translate="yes" xml:space="preserve">
          <source>Primary key type compatibility</source>
          <target state="translated">主キータイプの互換性</target>
        </trans-unit>
        <trans-unit id="80ad1d57736398f642f8004c5db582207ce0e4fd" translate="yes" xml:space="preserve">
          <source>Primary key. The field itself may contain up to 40 characters. The current implementation generates a 32-character string (a random sequence of digits and lowercase ASCII letters).</source>
          <target state="translated">主キー。フィールド自体には最大40文字まで含めることができます。現在の実装では、32文字の文字列(数字と小文字のASCII文字のランダムなシーケンス)を生成します。</target>
        </trans-unit>
        <trans-unit id="a83b9b74713a9bc6fedf5bf52b2475564747f9a4" translate="yes" xml:space="preserve">
          <source>Primary keys (IDs) are added automatically. (You can override this, too.)</source>
          <target state="translated">主キー(ID)は自動的に追加されます。(これをオーバーライドすることもできます)。</target>
        </trans-unit>
        <trans-unit id="f8fe05b86b7da452505028e1291f37fb70eb92a8" translate="yes" xml:space="preserve">
          <source>Prints the SQL for the named migration. This requires an active database connection, which it will use to resolve constraint names; this means you must generate the SQL against a copy of the database you wish to later apply it on.</source>
          <target state="translated">指定された移行用のSQLを出力します。これは、制約名を解決するために使用するアクティブなデータベース接続が必要です。</target>
        </trans-unit>
        <trans-unit id="2445461abe594d458d1e5396533b20215a328c4b" translate="yes" xml:space="preserve">
          <source>Prints the SQL statements for resetting sequences for the given app name(s).</source>
          <target state="translated">指定されたアプリ名のシーケンスをリセットするためのSQL文を表示します。</target>
        </trans-unit>
        <trans-unit id="b5febeb88e08835ef8f5fc78e15810ce8069e06d" translate="yes" xml:space="preserve">
          <source>Prints the SQL statements that would be executed for the &lt;a href=&quot;#django-admin-flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;#django-admin-flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;コマンドで実行されるSQLステートメントを出力します。</target>
        </trans-unit>
        <trans-unit id="2fdde26164c9b8824994ca762eafe5f2b785de86" translate="yes" xml:space="preserve">
          <source>Prints the SQL that would be run without actually running it, so you can customize it or use the migrations framework.</source>
          <target state="translated">実際に実行しなくても実行されるであろうSQLを印刷するので、カスタマイズしたり、マイグレーションフレームワークを使用したりすることができます。</target>
        </trans-unit>
        <trans-unit id="29dd119e2c8b27aca03440cf36558b8e7d7bbb23" translate="yes" xml:space="preserve">
          <source>Private methods (starting with an underscore) are not copied by default.</source>
          <target state="translated">プライベートメソッド(アンダースコアで始まる)はデフォルトではコピーされません。</target>
        </trans-unit>
        <trans-unit id="e3dc1d824db7fefcbe324103abda6b046bd33b6a" translate="yes" xml:space="preserve">
          <source>Proceed through the following sections sequentially in order to install GeoDjango on Windows.</source>
          <target state="translated">Windows に GeoDjango をインストールするには、以下のセクションを順次進めてください。</target>
        </trans-unit>
        <trans-unit id="c3b508775ae9d399320291714a2ea946942b4d35" translate="yes" xml:space="preserve">
          <source>Proceed through the following sections sequentially in order to install GeoDjango on Windows. In this tutorial we will install 64 bit versions of each application.</source>
          <target state="translated">Windows に GeoDjango をインストールするために、以下のセクションを順次進めてください。このチュートリアルでは、各アプリケーションの 64 ビット版をインストールします。</target>
        </trans-unit>
        <trans-unit id="69d016f6cb5948c7b35a01afe262153e986cf104" translate="yes" xml:space="preserve">
          <source>Proceed through the tutorial sections sequentially for step-by-step instructions.</source>
          <target state="translated">チュートリアルのセクションを順次進めていくことで、ステップバイステップの指示を得ることができます。</target>
        </trans-unit>
        <trans-unit id="a942f23e9c9082b53d2c70151316fd978ffa1115" translate="yes" xml:space="preserve">
          <source>Produces one of its arguments each time this tag is encountered. The first argument is produced on the first encounter, the second argument on the second encounter, and so forth. Once all arguments are exhausted, the tag cycles to the first argument and produces it again.</source>
          <target state="translated">このタグに遭遇するたびに、その引数のうちの1つを生成します。最初の引数は最初の遭遇時に生成され、2回目の遭遇時には2番目の引数が生成されます。すべての引数を使い切ると、タグは最初の引数にサイクルし、再びそれを生成します。</target>
        </trans-unit>
        <trans-unit id="e7c5627e57d7bec52b8e244d25cd541ec4c9cbb7" translate="yes" xml:space="preserve">
          <source>Profile first</source>
          <target state="translated">最初のプロフィール</target>
        </trans-unit>
        <trans-unit id="9d68007b0763cb230f9034ec96f52b39d03ad630" translate="yes" xml:space="preserve">
          <source>Program</source>
          <target state="translated">Program</target>
        </trans-unit>
        <trans-unit id="aa5214f5abf2dffdfb9c38209fec6cb15d0ff4aa" translate="yes" xml:space="preserve">
          <source>Programmatically creating permissions</source>
          <target state="translated">プログラムでパーミッションを作成する</target>
        </trans-unit>
        <trans-unit id="c58878042f64124bf69f272265174f4139135371" translate="yes" xml:space="preserve">
          <source>Projects and applications</source>
          <target state="translated">プロジェクトとアプリケーション</target>
        </trans-unit>
        <trans-unit id="f79ed9384f9e86f2c9c58306a052b68419b0065c" translate="yes" xml:space="preserve">
          <source>Projects that support multitenancy or otherwise alter business logic based on the request&amp;rsquo;s host and use custom host names in tests must include those hosts in &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マルチ&lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt;をサポートするプロジェクト、またはリクエストのホストに基づいてビジネスロジックを変更し、テストでカスタムホスト名を使用するプロジェクトは、それらのホストをALLOWED_HOSTSに含める必要があります。</target>
        </trans-unit>
        <trans-unit id="99a31e358cffb03fe05f2dbc4d4231069cedeb24" translate="yes" xml:space="preserve">
          <source>Projects vs. apps</source>
          <target state="translated">プロジェクトとアプリ</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="c5015eaf27a2c3bf8250d743ff8fa8b5f1ad4b86" translate="yes" xml:space="preserve">
          <source>Property that may be used to retrieve or set a spatial filter for this layer. A spatial filter can only be set with an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; instance, a 4-tuple extent, or &lt;code&gt;None&lt;/code&gt;. When set with something other than &lt;code&gt;None&lt;/code&gt;, only features that intersect the filter will be returned when iterating over the layer:</source>
          <target state="translated">このレイヤーの空間フィルターを取得または設定するために使用できるプロパティ。空間フィルターは、&lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt; &lt;code&gt;OGRGeometry&lt;/code&gt; &lt;/a&gt;インスタンス、4タプルの範囲、または &lt;code&gt;None&lt;/code&gt; でのみ設定できます。 &lt;code&gt;None&lt;/code&gt; 以外の値を設定すると、レイヤーを反復処理するときに、フィルターと交差する機能のみが返されます。</target>
        </trans-unit>
        <trans-unit id="0bdd9e48cb8289c624ed76251b8b66f1f1ebd5a6" translate="yes" xml:space="preserve">
          <source>Property that may be used to retrieve or set the SRID associated with the geometry. For example:</source>
          <target state="translated">ジオメトリに関連付けられた SRID の取得または設定に使用できるプロパティ。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="6f91f24895595d0be0e68dff39c934b00f655fff" translate="yes" xml:space="preserve">
          <source>Property that returns the &lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt; associated with this layer:</source>
          <target state="translated">このレイヤーに関連付けられている&lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference&quot;&gt; &lt;code&gt;SpatialReference&lt;/code&gt; &lt;/a&gt;を返すプロパティ：</target>
        </trans-unit>
        <trans-unit id="4e7745325509888c73a358af0046b765db273266" translate="yes" xml:space="preserve">
          <source>Protecting complex data structures</source>
          <target state="translated">複雑なデータ構造の保護</target>
        </trans-unit>
        <trans-unit id="f6d5d48be5fd9b054d275c493f56eee39042a9a1" translate="yes" xml:space="preserve">
          <source>Protecting sensitive areas such as the user account or the admin isn&amp;rsquo;t sufficient, because the same session cookie is used for HTTP and HTTPS. Your web server must redirect all HTTP traffic to HTTPS, and only transmit HTTPS requests to Django.</source>
          <target state="translated">HTTPとHTTPSに同じセッションCookieが使用されるため、ユーザーアカウントや管理者などの機密領域を保護するだけでは不十分です。ウェブサーバーはすべてのHTTPトラフィックをHTTPSにリダイレクトし、HTTPSリクエストのみをDjangoに送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="4db91616733b4b7e15646c353e9a98bf0f4ea473" translate="yes" xml:space="preserve">
          <source>Protecting the &lt;code&gt;SECRET_KEY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SECRET_KEY&lt;/code&gt; の保護</target>
        </trans-unit>
        <trans-unit id="f3ac2fba3ec304ab5f17d935fd9b06f7f08805b5" translate="yes" xml:space="preserve">
          <source>Protocol downgrade: a downgrade occurs if the page containing the link is served via HTTPS, but the page being linked to is not served via HTTPS.</source>
          <target state="translated">プロトコルのダウングレード:リンクを含むページは HTTPS で提供されているが、リンク先のページは HTTPS で提供されていない場合にダウングレードが発生します。</target>
        </trans-unit>
        <trans-unit id="528565edbcbb71b3ec096df647c3d688589eb6bf" translate="yes" xml:space="preserve">
          <source>Provide a descriptive error &lt;code&gt;code&lt;/code&gt; to the constructor:</source>
          <target state="translated">説明的なエラー &lt;code&gt;code&lt;/code&gt; をコンストラクターに提供します。</target>
        </trans-unit>
        <trans-unit id="fbe5d11af10c81727ad303e1a81314d5c6cca503" translate="yes" xml:space="preserve">
          <source>Provide a non-zero integer value to the &lt;code&gt;max_fragments&lt;/code&gt; to set the maximum number of fragments to display. That&amp;rsquo;s disabled by default in PostgreSQL.</source>
          <target state="translated">Provide a non-zero integer value to the &lt;code&gt;max_fragments&lt;/code&gt; to set the maximum number of fragments to display. That&amp;rsquo;s disabled by default in PostgreSQL.</target>
        </trans-unit>
        <trans-unit id="6ff17b6a012e550dde2ae944f2859bd60709e44d" translate="yes" xml:space="preserve">
          <source>Provide an integer number of bits from 1 to 4096 to the &lt;code&gt;length&lt;/code&gt; parameter to specify the length of each index entry. PostgreSQL&amp;rsquo;s default is 80.</source>
          <target state="translated">Provide an integer number of bits from 1 to 4096 to the &lt;code&gt;length&lt;/code&gt; parameter to specify the length of each index entry. PostgreSQL&amp;rsquo;s default is 80.</target>
        </trans-unit>
        <trans-unit id="d27a7615da14529ecc11577700c5a39ff1ea519f" translate="yes" xml:space="preserve">
          <source>Provide an integer number of bytes to the &lt;a href=&quot;https://www.postgresql.org/docs/current/runtime-config-client.html#GUC-GIN-PENDING-LIST-LIMIT&quot;&gt;gin_pending_list_limit&lt;/a&gt; parameter to tune the maximum size of the GIN pending list which is used when &lt;code&gt;fastupdate&lt;/code&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/runtime-config-client.html#GUC-GIN-PENDING-LIST-LIMIT&quot;&gt;gin_pending_list_limit&lt;/a&gt;パラメータに整数のバイト数を指定して、 &lt;code&gt;fastupdate&lt;/code&gt; が有効な場合に使用されるGIN保留リストの最大サイズを調整します。</target>
        </trans-unit>
        <trans-unit id="6050c63957ee0b13e00adc73109acd2e645df740" translate="yes" xml:space="preserve">
          <source>Provide an integer to the &lt;code&gt;normalization&lt;/code&gt; parameter to control rank normalization. This integer is a bit mask, so you can combine multiple behaviors:</source>
          <target state="translated">Provide an integer to the &lt;code&gt;normalization&lt;/code&gt; parameter to control rank normalization. This integer is a bit mask, so you can combine multiple behaviors:</target>
        </trans-unit>
        <trans-unit id="f521a106483229aa0f9ae9885780cc1929d1204b" translate="yes" xml:space="preserve">
          <source>Provide an integer value from 10 to 100 to the &lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-STORAGE-PARAMETERS&quot;&gt;fillfactor&lt;/a&gt; parameter to tune how packed the index pages will be. PostgreSQL&amp;rsquo;s default is 90.</source>
          <target state="translated">インデックスページがどのようにパックされるかを調整するには、10〜100の整数値を&lt;a href=&quot;https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-STORAGE-PARAMETERS&quot;&gt;fillfactor&lt;/a&gt;パラメータに指定します。PostgreSQLのデフォルトは90です。</target>
        </trans-unit>
        <trans-unit id="50cf217a6bbe1f115b9afec936d7fd651a3fccf4" translate="yes" xml:space="preserve">
          <source>Provide an integer value to the &lt;code&gt;short_word&lt;/code&gt; parameter to discard words of this length or less in each headline. PostgreSQL&amp;rsquo;s default is 3.</source>
          <target state="translated">Provide an integer value to the &lt;code&gt;short_word&lt;/code&gt; parameter to discard words of this length or less in each headline. PostgreSQL&amp;rsquo;s default is 3.</target>
        </trans-unit>
        <trans-unit id="e4fc6b334c34c68deb0b72af0d473ef635965d86" translate="yes" xml:space="preserve">
          <source>Provide integer values to the &lt;code&gt;max_words&lt;/code&gt; and &lt;code&gt;min_words&lt;/code&gt; parameters to determine the longest and shortest headlines. PostgreSQL&amp;rsquo;s defaults are 35 and 15.</source>
          <target state="translated">Provide integer values to the &lt;code&gt;max_words&lt;/code&gt; and &lt;code&gt;min_words&lt;/code&gt; parameters to determine the longest and shortest headlines. PostgreSQL&amp;rsquo;s defaults are 35 and 15.</target>
        </trans-unit>
        <trans-unit id="d5a9dbaa6a4cbd13cf1e1202225c968c6711e450" translate="yes" xml:space="preserve">
          <source>Provided test case classes</source>
          <target state="translated">提供されたテストケースクラス</target>
        </trans-unit>
        <trans-unit id="83563921a64bb5a23ec520c7f1c9ad644a076b33" translate="yes" xml:space="preserve">
          <source>Provides a mechanism for looking up an object associated with the current HTTP request.</source>
          <target state="translated">現在の HTTP リクエストに関連付けられたオブジェクトを検索するメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="d7d091d9b262a73f5b9087a61ee9e70f430a659f" translate="yes" xml:space="preserve">
          <source>Provides a mechanism to construct a &lt;a href=&quot;../template-response#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt;, given suitable context. The template to use is configurable and can be further customized by subclasses.</source>
          <target state="translated">適切なコンテキストを指定して、&lt;a href=&quot;../template-response#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; &lt;/a&gt;を構築するメカニズムを提供します。使用するテンプレートは構成可能で、サブクラスでさらにカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="39650b96a09f55e8ecda48574b51b40d2d21c19d" translate="yes" xml:space="preserve">
          <source>Provides the chance to do any pre-processing or validation of the expression before it&amp;rsquo;s added to the query. &lt;code&gt;resolve_expression()&lt;/code&gt; must also be called on any nested expressions. A &lt;code&gt;copy()&lt;/code&gt; of &lt;code&gt;self&lt;/code&gt; should be returned with any necessary transformations.</source>
          <target state="translated">クエリに追加する前に、式の前処理または検証を行う機会を提供します。 &lt;code&gt;resolve_expression()&lt;/code&gt; は、ネストされた式でも呼び出す必要があります。 &lt;code&gt;copy()&lt;/code&gt; の &lt;code&gt;self&lt;/code&gt; 任意の必要な変換して戻さなければなりません。</target>
        </trans-unit>
        <trans-unit id="1cd9b330ec5d096fbfe3aab4b0e69575b495d59a" translate="yes" xml:space="preserve">
          <source>Provides the path to a directory with a custom app template file, or a path to an uncompressed archive (&lt;code&gt;.tar&lt;/code&gt;) or a compressed archive (&lt;code&gt;.tar.gz&lt;/code&gt;, &lt;code&gt;.tar.bz2&lt;/code&gt;, &lt;code&gt;.tar.xz&lt;/code&gt;, &lt;code&gt;.tar.lzma&lt;/code&gt;, &lt;code&gt;.tgz&lt;/code&gt;, &lt;code&gt;.tbz2&lt;/code&gt;, &lt;code&gt;.txz&lt;/code&gt;, &lt;code&gt;.tlz&lt;/code&gt;, &lt;code&gt;.zip&lt;/code&gt;) containing the app template files.</source>
          <target state="translated">カスタムアプリテンプレートファイルのあるディレクトリへのパス、または圧縮されていないアーカイブ（ &lt;code&gt;.tar&lt;/code&gt; ）または圧縮されたアーカイブ（ &lt;code&gt;.tar.gz&lt;/code&gt; 、 &lt;code&gt;.tar.bz2&lt;/code&gt; 、 &lt;code&gt;.tar.xz&lt;/code&gt; 、 &lt;code&gt;.tar.lzma&lt;/code&gt; 、 &lt;code&gt;.tgz&lt;/code&gt; 、 &lt;code&gt;.tbz2&lt;/code&gt; 、 &lt;code&gt;.txz&lt;/code&gt; 、 &lt;code&gt;.tlz&lt;/code&gt; 、 &lt;code&gt;.zip&lt;/code&gt; ）アプリテンプレートファイルを含みます。</target>
        </trans-unit>
        <trans-unit id="33550ed53a4b76c89a93f72587a138522a6d0a46" translate="yes" xml:space="preserve">
          <source>Providing a useful &lt;code&gt;context_object_name&lt;/code&gt; is always a good idea. Your coworkers who design templates will thank you.</source>
          <target state="translated">有用な &lt;code&gt;context_object_name&lt;/code&gt; を提供することは常に良い考えです。テンプレートをデザインする同僚はあなたに感謝します。</target>
        </trans-unit>
        <trans-unit id="241255dc719c7fd8c6010c3454aa15997fe59662" translate="yes" xml:space="preserve">
          <source>Providing data with fixtures</source>
          <target state="translated">フィクスチャによるデータの提供</target>
        </trans-unit>
        <trans-unit id="7f433c914bee78855dfa641ac952c102155829f3" translate="yes" xml:space="preserve">
          <source>Providing initial data for models</source>
          <target state="translated">モデルへの初期データの提供</target>
        </trans-unit>
        <trans-unit id="36d626c700019f7f9e1c6d1295aba5248dfb359d" translate="yes" xml:space="preserve">
          <source>Providing initial data with migrations</source>
          <target state="translated">移行に伴う初期データの提供</target>
        </trans-unit>
        <trans-unit id="312dad7e87c0b4b590970f55e7bcbfdb9b50b77d" translate="yes" xml:space="preserve">
          <source>Providing initial values</source>
          <target state="translated">初期値の提供</target>
        </trans-unit>
        <trans-unit id="73c0e9dd8326d0acce61508ac7dfe0f3b182c96e" translate="yes" xml:space="preserve">
          <source>Providing one or more app names as arguments will limit the migrations created to the app(s) specified and any dependencies needed (the table at the other end of a &lt;code&gt;ForeignKey&lt;/code&gt;, for example).</source>
          <target state="translated">引数として1つ以上のアプリ名を指定すると、作成された移行が指定されたアプリと必要な依存関係（ &lt;code&gt;ForeignKey&lt;/code&gt; の反対側にあるテーブルなど）に制限されます。</target>
        </trans-unit>
        <trans-unit id="964b76551df709154f170559493bdd68ccda08d2" translate="yes" xml:space="preserve">
          <source>Proxy model inheritance might look fairly similar to creating an unmanaged model, using the &lt;a href=&quot;../../ref/models/options#django.db.models.Options.managed&quot;&gt;&lt;code&gt;managed&lt;/code&gt;&lt;/a&gt; attribute on a model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="translated">プロキシモデルの継承は、モデルの &lt;code&gt;Meta&lt;/code&gt; &lt;a href=&quot;../../ref/models/options#django.db.models.Options.managed&quot;&gt; &lt;code&gt;managed&lt;/code&gt; &lt;/a&gt;属性を使用して、非管理対象モデルを作成する場合とかなり似ている可能性があります。</target>
        </trans-unit>
        <trans-unit id="8d37de63fd7824ac46ae5d4a2cd688c3d71412f9" translate="yes" xml:space="preserve">
          <source>Proxy model managers</source>
          <target state="translated">プロキシモデルマネージャー</target>
        </trans-unit>
        <trans-unit id="2020dc851cb76f0e4b785c288f27da235ffad07e" translate="yes" xml:space="preserve">
          <source>Proxy models</source>
          <target state="translated">プロキシモデル</target>
        </trans-unit>
        <trans-unit id="7f051748527fa7e7754343af73d5f76969084a0d" translate="yes" xml:space="preserve">
          <source>Proxy models are declared like normal models. You tell Django that it&amp;rsquo;s a proxy model by setting the &lt;a href=&quot;../../ref/models/options#django.db.models.Options.proxy&quot;&gt;&lt;code&gt;proxy&lt;/code&gt;&lt;/a&gt; attribute of the &lt;code&gt;Meta&lt;/code&gt; class to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">プロキシモデルは、通常のモデルと同様に宣言されます。 &lt;code&gt;Meta&lt;/code&gt; クラスの&lt;a href=&quot;../../ref/models/options#django.db.models.Options.proxy&quot;&gt; &lt;code&gt;proxy&lt;/code&gt; &lt;/a&gt;属性を &lt;code&gt;True&lt;/code&gt; に設定することで、それがプロキシモデルであることをDjangoに伝えます。</target>
        </trans-unit>
        <trans-unit id="c98076e453af6e51d57dfdd2552aaab7b420794e" translate="yes" xml:space="preserve">
          <source>Proxy models inherit &lt;code&gt;Meta&lt;/code&gt; attributes &lt;a href=&quot;#meta-and-multi-table-inheritance&quot;&gt;in the same way as regular models&lt;/a&gt;.</source>
          <target state="translated">プロキシモデル&lt;a href=&quot;#meta-and-multi-table-inheritance&quot;&gt;は、通常のモデルと同じ方法で&lt;/a&gt; &lt;code&gt;Meta&lt;/code&gt; 属性を継承します。</target>
        </trans-unit>
        <trans-unit id="7f4703f9a257610de77d71c05797144d73589af4" translate="yes" xml:space="preserve">
          <source>Proxy models need their own content type</source>
          <target state="translated">プロキシモデルはそれ自身のコンテンツタイプを必要とします。</target>
        </trans-unit>
        <trans-unit id="2d9d012e2312b562e6428b6a35777b59361bd26d" translate="yes" xml:space="preserve">
          <source>Proxy models work exactly the same way as concrete models. Permissions are created using the own content type of the proxy model. Proxy models don&amp;rsquo;t inherit the permissions of the concrete model they subclass:</source>
          <target state="translated">プロキシモデルは、具象モデルとまったく同じように機能します。権限は、プロキシモデルの独自のコンテンツタイプを使用して作成されます。プロキシモデルは、サブクラスである具象モデルの権限を継承しません。</target>
        </trans-unit>
        <trans-unit id="2aacbb36241a1ca6f72f612f18db7ea69dae8382" translate="yes" xml:space="preserve">
          <source>Public methods are copied by default.</source>
          <target state="translated">パブリックメソッドはデフォルトでコピーされます。</target>
        </trans-unit>
        <trans-unit id="50c28f4af947776f8d77a5d5338903599a1de0a6" translate="yes" xml:space="preserve">
          <source>Publisher A has two books with ratings 4 and 5.</source>
          <target state="translated">出版社Aには、評価が4と5の2冊の本があります。</target>
        </trans-unit>
        <trans-unit id="f45d70d91077f59d49811da65ee0fa398ffda9f3" translate="yes" xml:space="preserve">
          <source>Publisher B has two books with ratings 1 and 4.</source>
          <target state="translated">出版社Bは、評価が1と4の2冊を持っています。</target>
        </trans-unit>
        <trans-unit id="ef7db3bbd0f99e7b0edf7bd2e43df08344c70553" translate="yes" xml:space="preserve">
          <source>Publisher C has one book with rating 1.</source>
          <target state="translated">出版社Cは評価1の本を1冊持っています。</target>
        </trans-unit>
        <trans-unit id="05dd0794c936de6d3ad4c09cb8e57df73a0945a8" translate="yes" xml:space="preserve">
          <source>Publishing Atom and RSS feeds in tandem</source>
          <target state="translated">AtomとRSSフィードを連動させて公開</target>
        </trans-unit>
        <trans-unit id="68487fe0cee1b6ceedccc629b38fa03159c3945c" translate="yes" xml:space="preserve">
          <source>Publishing your app</source>
          <target state="translated">アプリの公開</target>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="eba1f9367c8e8c568022a61b9b369082b4cfd561" translate="yes" xml:space="preserve">
          <source>Push your code up to the deployment server.</source>
          <target state="translated">コードをデプロイメントサーバーにプッシュします。</target>
        </trans-unit>
        <trans-unit id="fadb047592cfe37dd011002bf7e2639bda1fcceb" translate="yes" xml:space="preserve">
          <source>Push your local &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; up to the static file server into the directory that&amp;rsquo;s being served. &lt;a href=&quot;https://rsync.samba.org/&quot;&gt;rsync&lt;/a&gt; is a common choice for this step since it only needs to transfer the bits of static files that have changed.</source>
          <target state="translated">ローカルの&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt;を静的ファイルサーバーまで、提供されているディレクトリにプッシュします。&lt;a href=&quot;https://rsync.samba.org/&quot;&gt;rsync&lt;/a&gt;は、変更された静的ファイルのビットを転送するだけでよいため、このステップでは一般的な選択です。</target>
        </trans-unit>
        <trans-unit id="1b01d9d8afd5c1419255a78b21d4c8564dfd79f1" translate="yes" xml:space="preserve">
          <source>Pushing the commit and making a pull request</source>
          <target state="translated">コミットをプッシュしてプルリクエストを行う</target>
        </trans-unit>
        <trans-unit id="21d1895ad0608b1b5bbae01ca3636f2b6dc0f35b" translate="yes" xml:space="preserve">
          <source>Put a &lt;code&gt;__str__()&lt;/code&gt; method on the class you&amp;rsquo;re wrapping up as a field. There are a lot of places where the default behavior of the field code is to call &lt;code&gt;str()&lt;/code&gt; on the value. (In our examples in this document, &lt;code&gt;value&lt;/code&gt; would be a &lt;code&gt;Hand&lt;/code&gt; instance, not a &lt;code&gt;HandField&lt;/code&gt;). So if your &lt;code&gt;__str__()&lt;/code&gt; method automatically converts to the string form of your Python object, you can save yourself a lot of work.</source>
          <target state="translated">入れ &lt;code&gt;__str__()&lt;/code&gt; 使用すると、フィールドとしてアップラップしているクラスのメソッド。フィールドコードのデフォルトの動作で、値に対して &lt;code&gt;str()&lt;/code&gt; を呼び出す場所はたくさんあります。（このドキュメントの例では、 &lt;code&gt;value&lt;/code&gt; は &lt;code&gt;HandField&lt;/code&gt; ではなく &lt;code&gt;Hand&lt;/code&gt; インスタンスになります）。したがって、 &lt;code&gt;__str__()&lt;/code&gt; str __（）メソッドがPythonオブジェクトの文字列形式に自動的に変換される場合、多くの作業を省くことができます。</target>
        </trans-unit>
        <trans-unit id="fdc3697fd74ad800cdb65b95ed1256b265978ffe" translate="yes" xml:space="preserve">
          <source>Put another way, these two statements are equivalent:</source>
          <target state="translated">別の言い方をすれば、この二つの文は等価です。</target>
        </trans-unit>
        <trans-unit id="113aa8400909bb8025f22528466cef0ded59dd97" translate="yes" xml:space="preserve">
          <source>Put the following code in that stylesheet (&lt;code&gt;polls/static/polls/style.css&lt;/code&gt;):</source>
          <target state="translated">そのスタイルシートに次のコードを挿入します（ &lt;code&gt;polls/static/polls/style.css&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="411a91560b7663acac9ce076ccc85f4c4d1c21dc" translate="yes" xml:space="preserve">
          <source>Put the following code in that template:</source>
          <target state="translated">そのテンプレートに以下のコードを入れます。</target>
        </trans-unit>
        <trans-unit id="fb93e1d98a2d503a0ae31bf0a3fd07958d6299c7" translate="yes" xml:space="preserve">
          <source>Put the following in the &lt;code&gt;tests.py&lt;/code&gt; file in the &lt;code&gt;polls&lt;/code&gt; application:</source>
          <target state="translated">以下を &lt;code&gt;polls&lt;/code&gt; アプリケーションの &lt;code&gt;tests.py&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="b503384f9953d15e50e60d91e7f9e83267b6920b" translate="yes" xml:space="preserve">
          <source>Put your code in some directory &lt;strong&gt;outside&lt;/strong&gt; of the document root, such as &lt;code&gt;/home/mycode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/home/mycode&lt;/code&gt; など、ドキュメントルート&lt;strong&gt;以外&lt;/strong&gt;のディレクトリにコードを配置します。</target>
        </trans-unit>
        <trans-unit id="129940d6c9b56347fe5777f9d82e5c74abcd55d2" translate="yes" xml:space="preserve">
          <source>Putting a prefix on your URL names, perhaps derived from the application name (such as &lt;code&gt;myapp-comment&lt;/code&gt; instead of &lt;code&gt;comment&lt;/code&gt;), decreases the chance of collision.</source>
          <target state="translated">おそらく（のようなアプリケーション名から派生したURL名、上のプレフィックスを置く &lt;code&gt;myapp-comment&lt;/code&gt; の代わりに、 &lt;code&gt;comment&lt;/code&gt; ）、衝突の可能性を減少させます。</target>
        </trans-unit>
        <trans-unit id="48cd77981f9800d0e2d8ef2d7e04afe5159a340e" translate="yes" xml:space="preserve">
          <source>Putting it all together:</source>
          <target state="translated">まとめてみました。</target>
        </trans-unit>
        <trans-unit id="b4bb0163032196a7943a56c85925ce7d0c607748" translate="yes" xml:space="preserve">
          <source>Putting your data on the map</source>
          <target state="translated">データを地図上に配置する</target>
        </trans-unit>
        <trans-unit id="33e72da85f21769ca9a8ee3181ea9def0321f98f" translate="yes" xml:space="preserve">
          <source>PyPI</source>
          <target state="translated">PyPI</target>
        </trans-unit>
        <trans-unit id="2421f489b5b7558f687867e88178a61e4b70c292" translate="yes" xml:space="preserve">
          <source>PyPy</source>
          <target state="translated">PyPy</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="e9a8abd9c67edee408fd2abe078b7be5cc8f58b5" translate="yes" xml:space="preserve">
          <source>Python 3 required!</source>
          <target state="translated">Python3必須!</target>
        </trans-unit>
        <trans-unit id="3c66795b172fd0d01757fe62e8fe6e5cf650329a" translate="yes" xml:space="preserve">
          <source>Python 3.7 and later</source>
          <target state="translated">Python 3.7 以降</target>
        </trans-unit>
        <trans-unit id="f51273002ed21b7ecefc2d0178e6808a4b6287b1" translate="yes" xml:space="preserve">
          <source>Python &lt;em&gt;packaging&lt;/em&gt; refers to preparing your app in a specific format that can be easily installed and used. Django itself is packaged very much like this. For a small app like polls, this process isn&amp;rsquo;t too difficult.</source>
          <target state="translated">Python &lt;em&gt;パッケージ&lt;/em&gt;とは、簡単にインストールして使用できる特定の形式でアプリを準備することを指します。Django自体は、このようにパッケージ化されています。投票のような小さなアプリの場合、このプロセスはそれほど難しくありません。</target>
        </trans-unit>
        <trans-unit id="10c44ed7f0b589594e5ddb71913c583217eb063c" translate="yes" xml:space="preserve">
          <source>Python Exceptions</source>
          <target state="translated">Python の例外</target>
        </trans-unit>
        <trans-unit id="d366800e94a11a3195a317bc4a3f1eff4b53dcb8" translate="yes" xml:space="preserve">
          <source>Python and Django</source>
          <target state="translated">パイソンとジャンゴ</target>
        </trans-unit>
        <trans-unit id="06a555890788b420e7f254eabb4e050cd775cac7" translate="yes" xml:space="preserve">
          <source>Python comes with a CSV library, &lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;. The key to using it with Django is that the &lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s CSV-creation capability acts on file-like objects, and Django&amp;rsquo;s &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects are file-like objects.</source>
          <target state="translated">PythonにはCSVライブラリ&lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;が付属しています。Djangoで使用する際の鍵は、&lt;a href=&quot;https://docs.python.org/3/library/csv.html#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;モジュールのCSV作成機能がファイルのようなオブジェクトに作用し、Djangoの&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;オブジェクトがファイルのようなオブジェクトであることです。</target>
        </trans-unit>
        <trans-unit id="34d7ca2263f1691e91452f9c27c51c80c4de7456" translate="yes" xml:space="preserve">
          <source>Python has the ability to define functions that accept arbitrary name-value arguments whose names and values are evaluated at runtime. For more information, see &lt;a href=&quot;https://docs.python.org/3/tutorial/controlflow.html#tut-keywordargs&quot;&gt;Keyword Arguments&lt;/a&gt; in the official Python tutorial.</source>
          <target state="translated">Pythonには、実行時に名前と値が評価される任意の名前と値の引数を受け入れる関数を定義する機能があります。詳細については、公式のPythonチュートリアルの&lt;a href=&quot;https://docs.python.org/3/tutorial/controlflow.html#tut-keywordargs&quot;&gt;キーワード引数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c7d5a072cff1e19cc4cd60f5e5754b02d85b8189" translate="yes" xml:space="preserve">
          <source>Python on Windows</source>
          <target state="translated">WindowsでのPython</target>
        </trans-unit>
        <trans-unit id="24ce9115b32b5ef3afe9404baebb6181290dd713" translate="yes" xml:space="preserve">
          <source>Python packages without an &lt;code&gt;__init__.py&lt;/code&gt; file are known as &amp;ldquo;namespace packages&amp;rdquo; and may be spread across multiple directories at different locations on &lt;code&gt;sys.path&lt;/code&gt; (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0420&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 420&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;__init__.py&lt;/code&gt; ファイルのないPythonパッケージは「名前空間パッケージ」と呼ばれ、 &lt;code&gt;sys.path&lt;/code&gt; のさまざまな場所にある複数のディレクトリに分散される場合があります（&lt;a href=&quot;https://www.python.org/dev/peps/pep-0420&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 420を&lt;/strong&gt;&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="0ae88734e5a2cd666ca3daddd0e40270c9dd251c" translate="yes" xml:space="preserve">
          <source>Python provides a number of tools for lazy evaluation, particularly through the &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator-expression&quot;&gt;generator expression&lt;/a&gt; constructs. It&amp;rsquo;s worth reading up on laziness in Python to discover opportunities for making use of lazy patterns in your code.</source>
          <target state="translated">Pythonは、特に&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator&quot;&gt;ジェネレーター&lt;/a&gt;および&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-generator-expression&quot;&gt;ジェネレーター式の&lt;/a&gt;構成要素を介して、遅延評価のための多数のツールを提供します。コードで遅延パターンを利用する機会を見つけるには、Pythonの遅延について読む価値があります。</target>
        </trans-unit>
        <trans-unit id="63faae04590c53c82f8c5a100d4276b9e3d9c75e" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; objects have a &lt;code&gt;tzinfo&lt;/code&gt; attribute that can be used to store time zone information, represented as an instance of a subclass of &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt;. When this attribute is set and describes an offset, a datetime object is &lt;strong&gt;aware&lt;/strong&gt;. Otherwise, it&amp;rsquo;s &lt;strong&gt;naive&lt;/strong&gt;.</source>
          <target state="translated">Pythonの&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;オブジェクトには、タイムゾーン情報を格納するために使用できる &lt;code&gt;tzinfo&lt;/code&gt; 属性があり、&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;datetime.tzinfo&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスとして表されます。この属性が設定され、オフセットを記述すると、日時オブジェクトが&lt;strong&gt;認識され&lt;/strong&gt;ます。そうでなければ、それは&lt;strong&gt;素朴&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="0456c6124c4fb4655ebc249cf3f323e5b2d1a6c3" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt;&lt;code&gt;datetime.time&lt;/code&gt;&lt;/a&gt; objects also feature a &lt;code&gt;tzinfo&lt;/code&gt; attribute, and PostgreSQL has a matching &lt;code&gt;time with time zone&lt;/code&gt; type. However, as PostgreSQL&amp;rsquo;s docs put it, this type &amp;ldquo;exhibits properties which lead to questionable usefulness&amp;rdquo;.</source>
          <target state="translated">Pythonの&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.time&quot;&gt; &lt;code&gt;datetime.time&lt;/code&gt; &lt;/a&gt;オブジェクトも &lt;code&gt;tzinfo&lt;/code&gt; 属性を備えており、PostgreSQLには &lt;code&gt;time with time zone&lt;/code&gt; タイプと一致する時刻があります。ただし、PostgreSQLのドキュメントにあるように、このタイプは「問題のある有用性につながるプロパティを示します」。</target>
        </trans-unit>
        <trans-unit id="14ce56bdfe4df4b5551633626f36ed72e5572ee2" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; method will not work when either the &lt;code&gt;format_string&lt;/code&gt; or any of the arguments to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; contains lazy translation objects. Instead, you can use &lt;a href=&quot;../../ref/utils#django.utils.text.format_lazy&quot;&gt;&lt;code&gt;django.utils.text.format_lazy()&lt;/code&gt;&lt;/a&gt;, which creates a lazy object that runs the &lt;code&gt;str.format()&lt;/code&gt; method only when the result is included in a string. For example:</source>
          <target state="translated">Pythonの&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;メソッドは、 &lt;code&gt;format_string&lt;/code&gt; または&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; の&lt;/a&gt;引数のいずれかに遅延翻訳オブジェクトが含まれている場合は機能しません。代わりに、&lt;a href=&quot;../../ref/utils#django.utils.text.format_lazy&quot;&gt; &lt;code&gt;django.utils.text.format_lazy()&lt;/code&gt; &lt;/a&gt;を使用できます。これにより、結果が文字列に含まれている場合にのみ &lt;code&gt;str.format()&lt;/code&gt; メソッドを実行する遅延オブジェクトが作成されます。例えば：</target>
        </trans-unit>
        <trans-unit id="f3cda289fa0103a368b46f9e968f484f38fd47d2" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s SQLite wrapper has a default timeout value that determines how long the second thread is allowed to wait on the lock before it times out and raises the &lt;code&gt;OperationalError: database
is locked&lt;/code&gt; error.</source>
          <target state="translated">PythonのSQLiteラッパーには、2番目のスレッドがタイムアウトになるまでの待機時間を決定し、 &lt;code&gt;OperationalError: database is locked&lt;/code&gt; エラーを発生させるデフォルトのタイムアウト値があります。</target>
        </trans-unit>
        <trans-unit id="2733ab8036d0e7f4e3e4ecfd45f0a5f88b05d893" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s logging library provides several techniques to configure logging, ranging from a programmatic interface to configuration files. By default, Django uses the &lt;a href=&quot;https://docs.python.org/3/library/logging.config.html#logging-config-dictschema&quot;&gt;dictConfig format&lt;/a&gt;.</source>
          <target state="translated">Pythonのロギングライブラリは、プログラムインターフェイスから構成ファイルに至るまで、ロギングを構成するためのいくつかの手法を提供します。デフォルトでは、Djangoは&lt;a href=&quot;https://docs.python.org/3/library/logging.config.html#logging-config-dictschema&quot;&gt;dictConfig形式を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="81ee3afa06e521729fd119cd707ef680dd89b9e4" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s standard library &lt;code&gt;gettext&lt;/code&gt; module installs &lt;code&gt;_()&lt;/code&gt; into the global namespace, as an alias for &lt;code&gt;gettext()&lt;/code&gt;. In Django, we have chosen not to follow this practice, for a couple of reasons:</source>
          <target state="translated">Pythonの標準ライブラリ &lt;code&gt;gettext&lt;/code&gt; モジュールは、 &lt;code&gt;gettext()&lt;/code&gt; のエイリアスとして &lt;code&gt;_()&lt;/code&gt; をグローバル名前空間にインストールします。Djangoでは、次の2つの理由により、この方法を採用しないことにしました。</target>
        </trans-unit>
        <trans-unit id="aba4cd2ea8501f396bfcbb27fe321f2f84528870" translate="yes" xml:space="preserve">
          <source>Queries against databases not in &lt;code&gt;databases&lt;/code&gt; will give assertion errors to prevent state leaking between tests.</source>
          <target state="translated">データベース内にない &lt;code&gt;databases&lt;/code&gt; に対するクエリは、アサーションエラーを発生させ、テスト間の状態リークを防ぎます。</target>
        </trans-unit>
        <trans-unit id="44655b1fa5c553428d342551c2c421c536aafafe" translate="yes" xml:space="preserve">
          <source>Queries can go round in circles:</source>
          <target state="translated">クエリーは一周することができます。</target>
        </trans-unit>
        <trans-unit id="4731bf6d8aafebf282a3e3dade1f842730b4a108" translate="yes" xml:space="preserve">
          <source>Queries involving related objects follow the same rules as queries involving normal value fields. When specifying the value for a query to match, you may use either an object instance itself, or the primary key value for the object.</source>
          <target state="translated">関連オブジェクトを含むクエリは、通常の値フィールドを含むクエリと同じルールに従います。マッチするクエリの値を指定する際には、オブジェクトのインスタンス自体を使用するか、オブジェクトの主キー値を使用することができます。</target>
        </trans-unit>
        <trans-unit id="212fb49028291f1f1c70f560b39ee81a05db8015" translate="yes" xml:space="preserve">
          <source>Queries over related objects</source>
          <target state="translated">関連オブジェクトに対するクエリ</target>
        </trans-unit>
        <trans-unit id="b6e87700050ec435ea87a17702967522960ce303" translate="yes" xml:space="preserve">
          <source>Query Expressions</source>
          <target state="translated">クエリ式</target>
        </trans-unit>
        <trans-unit id="473c11e88675e622d9cfcd9003597281d792f48a" translate="yes" xml:space="preserve">
          <source>Query expressions describe a value or a computation that can be used as part of an update, create, filter, order by, annotation, or aggregate. When an expression outputs a boolean value, it may be used directly in filters. There are a number of built-in expressions (documented below) that can be used to help you write queries. Expressions can be combined, or in some cases nested, to form more complex computations.</source>
          <target state="translated">クエリ式は、更新、作成、フィルタ、順序指定、注釈、集約の一部として使用できる値または計算を記述します。式がブール値を出力する場合は、フィルタで直接使用することができます。クエリを書くのに役立つ組み込みの式がいくつかあります(以下に説明します)。式を組み合わせたり、場合によっては入れ子にしたりして、より複雑な計算を行うことができます。</target>
        </trans-unit>
        <trans-unit id="497a7998b02dc74fadc391e8d23af39ca9cd6d6a" translate="yes" xml:space="preserve">
          <source>Query expressions implement the &lt;a href=&quot;lookups#query-expression&quot;&gt;query expression API&lt;/a&gt;, but also expose a number of extra methods and attributes listed below. All query expressions must inherit from &lt;code&gt;Expression()&lt;/code&gt; or a relevant subclass.</source>
          <target state="translated">クエリ式は、&lt;a href=&quot;lookups#query-expression&quot;&gt;クエリ式APIを&lt;/a&gt;実装しますが、以下にリストする多くの追加のメソッドと属性も公開します。すべてのクエリ式は、 &lt;code&gt;Expression()&lt;/code&gt; または関連するサブクラスから継承する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ee721f6f1413a6c01f961727164d45a4ef46144" translate="yes" xml:space="preserve">
          <source>Query the waiters:</source>
          <target state="translated">ウェイターに問い合わせてみてください。</target>
        </trans-unit>
        <trans-unit id="4b0d4771f1ddfe0e4138f1cc38f09372efe54063" translate="yes" xml:space="preserve">
          <source>Query twice over the related field. This translates to an AND condition in the WHERE clause:</source>
          <target state="translated">関連するフィールドに対して 2 回クエリを実行します。これは、WHERE句のAND条件に変換されます。</target>
        </trans-unit>
        <trans-unit id="7da95f94862e13f37c0c0ff8764a058ab794fb3a" translate="yes" xml:space="preserve">
          <source>Query-related tools</source>
          <target state="translated">クエリ関連ツール</target>
        </trans-unit>
        <trans-unit id="507982dac0c0a407f01bf53943a125c2bc6715d5" translate="yes" xml:space="preserve">
          <source>QuerySet API reference</source>
          <target state="translated">QuerySet API リファレンス</target>
        </trans-unit>
        <trans-unit id="cc6835ce045ca407e1aa42cf034a40b2dc968c7d" translate="yes" xml:space="preserve">
          <source>Querying</source>
          <target state="translated">Querying</target>
        </trans-unit>
        <trans-unit id="cf86208e0578fb1f6839fae37450bcc0b6572941" translate="yes" xml:space="preserve">
          <source>Querying &lt;code&gt;ArrayField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ArrayField&lt;/code&gt; のクエリ</target>
        </trans-unit>
        <trans-unit id="9409813bd6aaf05d9c06ef59bb7f710d0d41847e" translate="yes" xml:space="preserve">
          <source>Querying &lt;code&gt;HStoreField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HStoreField&lt;/code&gt; のクエリ</target>
        </trans-unit>
        <trans-unit id="045ae4b0426977c5c7a9843d499c63f7234b07e5" translate="yes" xml:space="preserve">
          <source>Querying &lt;code&gt;JSONField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JSONField&lt;/code&gt; のクエリ</target>
        </trans-unit>
        <trans-unit id="69dd9b02fe3130e8e9ac516aa4bc690c99a60dff" translate="yes" xml:space="preserve">
          <source>Querying Range Fields</source>
          <target state="translated">レンジフィールドの問い合わせ</target>
        </trans-unit>
        <trans-unit id="029d873faabd75383407878dcd5f138977cc1244" translate="yes" xml:space="preserve">
          <source>Querying in the opposite direction:</source>
          <target state="translated">逆方向に問い合わせをすること。</target>
        </trans-unit>
        <trans-unit id="03f0b7f0b8df9e93d31729e2375d554ec08f9665" translate="yes" xml:space="preserve">
          <source>Querying using the bounds</source>
          <target state="translated">境界線を使用した問い合わせ</target>
        </trans-unit>
        <trans-unit id="9d8860465ae3b9ad083fec1668e42e6612aa1804" translate="yes" xml:space="preserve">
          <source>Querysets do not always cache their results. When evaluating only &lt;em&gt;part&lt;/em&gt; of the queryset, the cache is checked, but if it is not populated then the items returned by the subsequent query are not cached. Specifically, this means that &lt;a href=&quot;#limiting-querysets&quot;&gt;limiting the queryset&lt;/a&gt; using an array slice or an index will not populate the cache.</source>
          <target state="translated">クエリセットは常に結果をキャッシュするとは限りません。クエリセットの&lt;em&gt;一部&lt;/em&gt;のみを評価する場合、キャッシュがチェックされますが、値が設定されていない場合、後続のクエリによって返されるアイテムはキャッシュされません。具体的には、これは、配列スライスまたはインデックスを使用し&lt;a href=&quot;#limiting-querysets&quot;&gt;てクエリセット&lt;/a&gt;を制限しても、キャッシュが読み込まれないことを意味します。</target>
        </trans-unit>
        <trans-unit id="6790c30718ed4e8fc908c43ae184a48781ef4834" translate="yes" xml:space="preserve">
          <source>Question &amp;ldquo;detail&amp;rdquo; page &amp;ndash; displays a question text, with no results but with a form to vote.</source>
          <target state="translated">質問の「詳細」ページ&amp;ndash;質問テキストが表示されますが、結果はありませんが、投票フォームが表示されます。</target>
        </trans-unit>
        <trans-unit id="a9118d91dfc55f167899afb2295629e230e62b11" translate="yes" xml:space="preserve">
          <source>Question &amp;ldquo;index&amp;rdquo; page &amp;ndash; displays the latest few questions.</source>
          <target state="translated">質問の「インデックス」ページ-最新のいくつかの質問を表示します。</target>
        </trans-unit>
        <trans-unit id="8a1468ba44381b2d39d41837efbe8b1c1f795af5" translate="yes" xml:space="preserve">
          <source>Question &amp;ldquo;results&amp;rdquo; page &amp;ndash; displays results for a particular question.</source>
          <target state="translated">質問の「結果」ページ&amp;ndash;特定の質問の結果を表示します。</target>
        </trans-unit>
        <trans-unit id="8f1e1ff9d000b44617e8ef8f0ce02e30146ecaef" translate="yes" xml:space="preserve">
          <source>Quick example</source>
          <target state="translated">簡単な例</target>
        </trans-unit>
        <trans-unit id="0c01de4ee3e982a6b351e8ac7d0030c470530550" translate="yes" xml:space="preserve">
          <source>Quick install guide</source>
          <target state="translated">クイックインストールガイド</target>
        </trans-unit>
        <trans-unit id="f962d2087e6fa3b649f147531a425d3b9a32ec80" translate="yes" xml:space="preserve">
          <source>Quick overview</source>
          <target state="translated">簡単な概要</target>
        </trans-unit>
        <trans-unit id="ae9cb3c23abff64abba434bcd7cfc9f890e1c8ff" translate="yes" xml:space="preserve">
          <source>Quite commonly in web applications, you need to display a one-time notification message (also known as &amp;ldquo;flash message&amp;rdquo;) to the user after processing a form or some other types of user input.</source>
          <target state="translated">Webアプリケーションではごく一般的に、フォームやその他のタイプのユーザー入力を処理した後、ユーザーに1回限りの通知メッセージ（「フラッシュメッセージ」とも呼ばれる）を表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="f8afb6809cb55d199c973aba152f8c15757581ae" translate="yes" xml:space="preserve">
          <source>Quoted names can also be used with Django&amp;rsquo;s other supported database backends; except for Oracle, however, the quotes have no effect.</source>
          <target state="translated">引用符で囲まれた名前は、Djangoの他のサポートされているデータベースバックエンドでも使用できます。ただし、Oracleを除き、引用符は無効です。</target>
        </trans-unit>
        <trans-unit id="383257f8e6a65c71a71920945d197e9c162b6e88" translate="yes" xml:space="preserve">
          <source>Raised to prevent deletion of referenced objects when using &lt;a href=&quot;models/fields#django.db.models.PROTECT&quot;&gt;&lt;code&gt;django.db.models.PROTECT&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.ProtectedError&quot;&gt;&lt;code&gt;models.ProtectedError&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;models/fields#django.db.models.PROTECT&quot;&gt; &lt;code&gt;django.db.models.PROTECT&lt;/code&gt; の&lt;/a&gt;使用時に参照オブジェクトの削除を防ぐために発生します。&lt;a href=&quot;#django.db.models.ProtectedError&quot;&gt; &lt;code&gt;models.ProtectedError&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="63e162f9b8e3a4f0ee58107f72a155c2776f9d77" translate="yes" xml:space="preserve">
          <source>Raised to prevent deletion of referenced objects when using &lt;a href=&quot;models/fields#django.db.models.RESTRICT&quot;&gt;&lt;code&gt;django.db.models.RESTRICT&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.db.models.RestrictedError&quot;&gt;&lt;code&gt;models.RestrictedError&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Raised to prevent deletion of referenced objects when using &lt;a href=&quot;models/fields#django.db.models.RESTRICT&quot;&gt; &lt;code&gt;django.db.models.RESTRICT&lt;/code&gt; &lt;/a&gt;. &lt;a href=&quot;#django.db.models.RestrictedError&quot;&gt; &lt;code&gt;models.RestrictedError&lt;/code&gt; &lt;/a&gt; is a subclass of &lt;a href=&quot;#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a39438285dbf48724191bfe029e6417ec166a07e" translate="yes" xml:space="preserve">
          <source>Raised when &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt;&lt;code&gt;page()&lt;/code&gt;&lt;/a&gt; is given a valid value but no objects exist on that page.</source>
          <target state="translated">発生したときに&lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt; &lt;code&gt;page()&lt;/code&gt; &lt;/a&gt;有効な値が与えられたが、何のオブジェクトは、そのページ上に存在していません。</target>
        </trans-unit>
        <trans-unit id="79867f095a9654e94ebbd2d4c674cdb67fc0b11b" translate="yes" xml:space="preserve">
          <source>Raised when &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt;&lt;code&gt;page()&lt;/code&gt;&lt;/a&gt; is given a value that isn&amp;rsquo;t an integer.</source>
          <target state="translated">&lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt; &lt;code&gt;page()&lt;/code&gt; に&lt;/a&gt;整数ではない値が与えられたときに発生します。</target>
        </trans-unit>
        <trans-unit id="f230db9e7e8de1d6826196c899489f43c17e9464" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#django.contrib.gis.geos.GEOSException&quot;&gt;&lt;code&gt;GEOSException&lt;/code&gt;&lt;/a&gt; if GDAL is not available or if the geometry&amp;rsquo;s SRID is &lt;code&gt;None&lt;/code&gt; or less than 0. It doesn&amp;rsquo;t impose any constraints on the geometry&amp;rsquo;s SRID if called with a &lt;a href=&quot;gdal#django.contrib.gis.gdal.CoordTransform&quot;&gt;&lt;code&gt;CoordTransform&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">発生させ&lt;a href=&quot;#django.contrib.gis.geos.GEOSException&quot;&gt; &lt;code&gt;GEOSException&lt;/code&gt; は&lt;/a&gt; GDALが利用できない場合や、ジオメトリのSRIDがない場合は &lt;code&gt;None&lt;/code&gt; かで呼び出された場合それは、ジオメトリのSRIDに制約を課していない0より少ない&lt;a href=&quot;gdal#django.contrib.gis.gdal.CoordTransform&quot;&gt; &lt;code&gt;CoordTransform&lt;/code&gt; の&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f659bbf960b6910e347b834071c181c09d51237f" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;../../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; if a model is abstract. and &lt;code&gt;django.contrib.admin.sites.AlreadyRegistered&lt;/code&gt; if a model is already registered.</source>
          <target state="translated">昇給は&lt;a href=&quot;../../exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;モデルが抽象的である場合。モデルがすでに登録されている場合は、 &lt;code&gt;django.contrib.admin.sites.AlreadyRegistered&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fedb9f428a9b0ce90303a37a58495eebb2a69bd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with the following codes:</source>
          <target state="translated">発生させ&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;、次のコードで：</target>
        </trans-unit>
        <trans-unit id="52b87134b19d3578fc7beb6e8fbd3e1b2ed4af51" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; if no such application or model exists. Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when called with a single argument that doesn&amp;rsquo;t contain exactly one dot.</source>
          <target state="translated">発生させ&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; がを&lt;/a&gt;そのようなアプリケーションやモデルが存在しない場合。発生させます&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;正確に1つのドットが含まれていない単一の引数で呼び出されたとき。</target>
        </trans-unit>
        <trans-unit id="38eef04a03bc1e0f873207b67fea1d8a6a730ac1" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; if no such model exists in this application.</source>
          <target state="translated">発生させ&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; がは&lt;/a&gt;そのようなモデルは、このアプリケーションに存在しない場合。</target>
        </trans-unit>
        <trans-unit id="bbdb5a4f46a36bde51f26f38a7305bab8579f262" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; if nothing is found.</source>
          <target state="translated">発生させ&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; がは&lt;/a&gt;何も見つからなかった場合。</target>
        </trans-unit>
        <trans-unit id="6b7971a2a67760d202f90683b27e699220b4993b" translate="yes" xml:space="preserve">
          <source>Raises a 404 if no valid day specification can be found.</source>
          <target state="translated">有効な曜日指定が見つからない場合、404 を発生させます。</target>
        </trans-unit>
        <trans-unit id="ef25c25cfb26446f34abd61eae1c1b877d53be3f" translate="yes" xml:space="preserve">
          <source>Raises a 404 if no valid month specification can be found.</source>
          <target state="translated">有効な月の指定が見つからない場合、404 を発生させます。</target>
        </trans-unit>
        <trans-unit id="649efa18a29e771511c524364f4dc70abd5766a2" translate="yes" xml:space="preserve">
          <source>Raises a 404 if no valid week specification can be found.</source>
          <target state="translated">有効な週の指定が見つからない場合、404を発生させます。</target>
        </trans-unit>
        <trans-unit id="02dec23dea64208ebea927e272c3b8ced92abc02" translate="yes" xml:space="preserve">
          <source>Raises a 404 if no valid year specification can be found.</source>
          <target state="translated">有効な年指定が見つからない場合、404 を発生させます。</target>
        </trans-unit>
        <trans-unit id="e38db0b689edecc0505589f5aa472122022302e7" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;str(value)&lt;/code&gt; contains one or more nulls characters (&lt;code&gt;'\x00'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;str(value)&lt;/code&gt; に1つ以上のnull文字（ &lt;code&gt;'\x00'&lt;/code&gt; ）が含まれている場合、&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; を発生させ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c4c1ada2c7df70aec4fd0243ab804db85e3019ee" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'invalid_extension'&lt;/code&gt; if the extension of &lt;code&gt;value.name&lt;/code&gt; (&lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;files/file#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;) isn&amp;rsquo;t found in &lt;code&gt;allowed_extensions&lt;/code&gt;. The extension is compared case-insensitively with &lt;code&gt;allowed_extensions&lt;/code&gt;.</source>
          <target state="translated">発生させ&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;のコードで &lt;code&gt;'invalid_extension'&lt;/code&gt; の拡張子場合 &lt;code&gt;value.name&lt;/code&gt; が（ &lt;code&gt;value&lt;/code&gt; ある&lt;a href=&quot;files/file#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;）で発見されていません &lt;code&gt;allowed_extensions&lt;/code&gt; 。拡張機能は、 &lt;code&gt;allowed_extensions&lt;/code&gt; と大文字小文字を区別せずに比較されます。</target>
        </trans-unit>
        <trans-unit id="e0a7bffce2432be91a504d7fdced39b3b28aae7c" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'max_length'&lt;/code&gt; if the length of &lt;code&gt;value&lt;/code&gt; is greater than &lt;code&gt;limit_value&lt;/code&gt;, which may be a callable.</source>
          <target state="translated">発生させ&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; をする&lt;/a&gt;のコードと &lt;code&gt;'max_length'&lt;/code&gt; の長さあれば &lt;code&gt;value&lt;/code&gt; より大きい &lt;code&gt;limit_value&lt;/code&gt; 呼び出し可能であってもよいです。</target>
        </trans-unit>
        <trans-unit id="7812698f0072d025934ecf7b060543cfa6e91091" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'max_value'&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is greater than &lt;code&gt;limit_value&lt;/code&gt;, which may be a callable.</source>
          <target state="translated">発生させ&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; をする&lt;/a&gt;のコードと &lt;code&gt;'max_value'&lt;/code&gt; あれば &lt;code&gt;value&lt;/code&gt; より大きい &lt;code&gt;limit_value&lt;/code&gt; 呼び出し可能であってもよいです。</target>
        </trans-unit>
        <trans-unit id="2f28a9211155e5f89025bedc40d8d7d8590bbae1" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'min_length'&lt;/code&gt; if the length of &lt;code&gt;value&lt;/code&gt; is less than &lt;code&gt;limit_value&lt;/code&gt;, which may be a callable.</source>
          <target state="translated">発生させ&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; をする&lt;/a&gt;のコードと &lt;code&gt;'min_length'&lt;/code&gt; の長さあれば &lt;code&gt;value&lt;/code&gt; より小さい &lt;code&gt;limit_value&lt;/code&gt; 呼び出し可能であってもよいです。</target>
        </trans-unit>
        <trans-unit id="4ca1cec135750585f008ee0a9b754d0a262950d0" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; with a code of &lt;code&gt;'min_value'&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is less than &lt;code&gt;limit_value&lt;/code&gt;, which may be a callable.</source>
          <target state="translated">発生させ&lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; をする&lt;/a&gt;のコードと &lt;code&gt;'min_value'&lt;/code&gt; あれば &lt;code&gt;value&lt;/code&gt; 未満である &lt;code&gt;limit_value&lt;/code&gt; 呼び出し可能であってもよいです。</target>
        </trans-unit>
        <trans-unit id="e197db816c81423c73c86abab2ef9616c7449393" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#django.core.paginator.EmptyPage&quot;&gt;&lt;code&gt;EmptyPage&lt;/code&gt;&lt;/a&gt; exception only if you specify &lt;code&gt;Paginator(..., allow_empty_first_page=False)&lt;/code&gt; and the &lt;code&gt;object_list&lt;/code&gt; is empty.</source>
          <target state="translated">&lt;code&gt;Paginator(..., allow_empty_first_page=False)&lt;/code&gt; を指定し、 &lt;code&gt;object_list&lt;/code&gt; が空の場合にのみ、&lt;a href=&quot;#django.core.paginator.EmptyPage&quot;&gt; &lt;code&gt;EmptyPage&lt;/code&gt; &lt;/a&gt;例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="d36f9c49b1796d7a8400dc46e0a1779727aaff9e" translate="yes" xml:space="preserve">
          <source>Raising &lt;code&gt;ValidationError&lt;/code&gt;</source>
          <target state="translated">レイジング &lt;code&gt;ValidationError&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="3f8c1749ce91a95970b30e696f91a5d6ec760256" translate="yes" xml:space="preserve">
          <source>Raising a 404 error</source>
          <target state="translated">404エラーの発生</target>
        </trans-unit>
        <trans-unit id="ec449d6fe8c144585e34f5fb114395c6f40c76a6" translate="yes" xml:space="preserve">
          <source>Raising multiple errors</source>
          <target state="translated">複数のエラーを発生させる</target>
        </trans-unit>
        <trans-unit id="67f112e1c0ba7cca4f0e6c1b8ba6e509c3cebac8" translate="yes" xml:space="preserve">
          <source>Range Fields</source>
          <target state="translated">レンジフィールド</target>
        </trans-unit>
        <trans-unit id="cf6a6b9ca40d94f48e61d5f8c3ffacdbe97b6fe9" translate="yes" xml:space="preserve">
          <source>Range fields support the standard lookups: &lt;a href=&quot;../../models/querysets#std:fieldlookup-lt&quot;&gt;&lt;code&gt;lt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/querysets#std:fieldlookup-gt&quot;&gt;&lt;code&gt;gt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/querysets#std:fieldlookup-lte&quot;&gt;&lt;code&gt;lte&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../models/querysets#std:fieldlookup-gte&quot;&gt;&lt;code&gt;gte&lt;/code&gt;&lt;/a&gt;. These are not particularly helpful - they compare the lower bounds first and then the upper bounds only if necessary. This is also the strategy used to order by a range field. It is better to use the specific range comparison operators.</source>
          <target state="translated">範囲フィールドは標準の検索をサポートします：&lt;a href=&quot;../../models/querysets#std:fieldlookup-lt&quot;&gt; &lt;code&gt;lt&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../models/querysets#std:fieldlookup-gt&quot;&gt; &lt;code&gt;gt&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../models/querysets#std:fieldlookup-lte&quot;&gt; &lt;code&gt;lte&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../models/querysets#std:fieldlookup-gte&quot;&gt; &lt;code&gt;gte&lt;/code&gt; &lt;/a&gt;。これらは特に役に立ちません-必要に応じて、まず下限を比較し、次に上限を比較します。これは、範囲フィールドによる順序付けに使用される戦略でもあります。特定の範囲比較演算子を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="e873d159d1885f4b07c2220c8cb41bb19655266b" translate="yes" xml:space="preserve">
          <source>Range operators</source>
          <target state="translated">レンジオペレータ</target>
        </trans-unit>
        <trans-unit id="f78952f921b40a31e3a91af2b9dccfb751b218e8" translate="yes" xml:space="preserve">
          <source>Range test (inclusive).</source>
          <target state="translated">レンジテスト(含む)。</target>
        </trans-unit>
        <trans-unit id="405b08374dfc6e7aeeeee19a9c1c2e740c8f9808" translate="yes" xml:space="preserve">
          <source>Range validators</source>
          <target state="translated">レンジバリデータ</target>
        </trans-unit>
        <trans-unit id="005502336f497500bcb0670a263dab868e7a34a8" translate="yes" xml:space="preserve">
          <source>RangeBoundary() expressions</source>
          <target state="translated">RangeBoundary()式</target>
        </trans-unit>
        <trans-unit id="dd48a1149548f0b07ddec97e040571c91978fbab" translate="yes" xml:space="preserve">
          <source>Rank</source>
          <target state="translated">Rank</target>
        </trans-unit>
        <trans-unit id="5208946e0b1be2a3371538152a05d1233496f7a6" translate="yes" xml:space="preserve">
          <source>Raster Data Objects</source>
          <target state="translated">ラスタデータオブジェクト</target>
        </trans-unit>
        <trans-unit id="5ef1ef57d994a18bfacffb776bdab1b33f4e20b8" translate="yes" xml:space="preserve">
          <source>Raster Lookups</source>
          <target state="translated">ラスタールックアップ</target>
        </trans-unit>
        <trans-unit id="63c47badb7cf59b2ce34cfb0119ccdc92d59f8ae" translate="yes" xml:space="preserve">
          <source>Raster Support</source>
          <target state="translated">ラスタサポート</target>
        </trans-unit>
        <trans-unit id="c8b43a0325aa66c5ca3506dbe7d78c6506d34130" translate="yes" xml:space="preserve">
          <source>Raster example:</source>
          <target state="translated">ラスターの例。</target>
        </trans-unit>
        <trans-unit id="500faaef6575e52d000a49a0c111655fcca1467f" translate="yes" xml:space="preserve">
          <source>Raster queries work the same way by replacing the geometry field &lt;code&gt;point&lt;/code&gt; with a raster field, or the &lt;code&gt;pnt&lt;/code&gt; object with a raster object, or both. To specify the band index of a raster input on the right hand side, a 3-tuple can be passed to the lookup as follows:</source>
          <target state="translated">ラスタークエリは、ジオメトリフィールド &lt;code&gt;point&lt;/code&gt; をラスターフィールドに、または &lt;code&gt;pnt&lt;/code&gt; オブジェクトをラスターオブジェクトに、あるいはその両方に置き換えることにより、同じように機能します。右側のラスター入力のバンドインデックスを指定するには、次のように3タプルをルックアップに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="05f7285acfbea0cccac185fc68fe33ee4e964164" translate="yes" xml:space="preserve">
          <source>Rather than adding &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; as a blanket protection, you can use the &lt;code&gt;csrf_protect&lt;/code&gt; decorator, which has exactly the same functionality, on particular views that need the protection. It must be used &lt;strong&gt;both&lt;/strong&gt; on views that insert the CSRF token in the output, and on those that accept the POST form data. (These are often the same view function, but not always).</source>
          <target state="translated">&lt;code&gt;CsrfViewMiddleware&lt;/code&gt; を全面的な保護として追加するのではなく、保護が必要な特定のビューで、まったく同じ機能を持つ &lt;code&gt;csrf_protect&lt;/code&gt; デコレーターを使用できます。CSRFトークンを出力に挿入するビューと、POSTフォームデータを受け入れるビューの&lt;strong&gt;両方&lt;/strong&gt;で使用する必要があります。（これらは多くの場合、同じビュー関数ですが、常にではありません）。</target>
        </trans-unit>
        <trans-unit id="242f65df6b815c78c86f006f111f9d6a8de1c45f" translate="yes" xml:space="preserve">
          <source>Rather than implementing &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt;, subclasses must implement &lt;a href=&quot;#django.core.management.AppCommand.handle_app_config&quot;&gt;&lt;code&gt;handle_app_config()&lt;/code&gt;&lt;/a&gt;, which will be called once for each application.</source>
          <target state="translated">サブクラスは、&lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; を&lt;/a&gt;実装するのではなく、アプリケーションごとに1回呼び出される&lt;a href=&quot;#django.core.management.AppCommand.handle_app_config&quot;&gt; &lt;code&gt;handle_app_config()&lt;/code&gt; を&lt;/a&gt;実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="fd5131e1bcf6f25659f7d4b5cc8c1f5e806ee470" translate="yes" xml:space="preserve">
          <source>Rather than implementing &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt;, subclasses must implement &lt;a href=&quot;#django.core.management.LabelCommand.handle_label&quot;&gt;&lt;code&gt;handle_label()&lt;/code&gt;&lt;/a&gt;, which will be called once for each label.</source>
          <target state="translated">サブクラスは、&lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; を&lt;/a&gt;実装するのではなく、ラベルごとに1回呼び出される&lt;a href=&quot;#django.core.management.LabelCommand.handle_label&quot;&gt; &lt;code&gt;handle_label()&lt;/code&gt; を&lt;/a&gt;実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="c46a377b544a8428af14e79b21f9306dc49c26cb" translate="yes" xml:space="preserve">
          <source>Rather than introduce potential compatibility issues with this code, we instead opted to add this mode so that all existing Django sync code runs in the same thread and thus is fully compatible with async mode. Note that sync code will always be in a &lt;em&gt;different&lt;/em&gt; thread to any async code that is calling it, so you should avoid passing raw database handles or other thread-sensitive references around.</source>
          <target state="translated">Rather than introduce potential compatibility issues with this code, we instead opted to add this mode so that all existing Django sync code runs in the same thread and thus is fully compatible with async mode. Note that sync code will always be in a &lt;em&gt;different&lt;/em&gt; thread to any async code that is calling it, so you should avoid passing raw database handles or other thread-sensitive references around.</target>
        </trans-unit>
        <trans-unit id="b7b4472c459e5ea6dd92936ae2d6cadc3eac5048" translate="yes" xml:space="preserve">
          <source>Rather than retrieve a load of objects, set some values, and save them individual, use a bulk SQL UPDATE statement, via &lt;a href=&quot;queries#topics-db-queries-update&quot;&gt;QuerySet.update()&lt;/a&gt;. Similarly, do &lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;bulk deletes&lt;/a&gt; where possible.</source>
          <target state="translated">オブジェクトのロードを取得し、いくつかの値を設定して個別に保存するのではなく、&lt;a href=&quot;queries#topics-db-queries-update&quot;&gt;QuerySet.update（）を&lt;/a&gt;介してバルクSQL UPDATEステートメントを使用します。同様に、可能な場合は&lt;a href=&quot;queries#topics-db-queries-delete&quot;&gt;一括削除を実行&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="0a65c4362f80f15c986dcb6ac6e5d9e6546fb00a" translate="yes" xml:space="preserve">
          <source>Raw SQL expressions</source>
          <target state="translated">生のSQL式</target>
        </trans-unit>
        <trans-unit id="9f5ef9cd3f272e59c3c26c12902db3ba7d565d10" translate="yes" xml:space="preserve">
          <source>Raw queries</source>
          <target state="translated">生のクエリ</target>
        </trans-unit>
        <trans-unit id="18ea065526a8ad321c70048cf3baa719811f99b3" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;../ref/forms/renderers#overriding-built-in-widget-templates&quot;&gt;Overriding built-in widget templates&lt;/a&gt; if you&amp;rsquo;re looking to do that.</source>
          <target state="translated">&lt;a href=&quot;../ref/forms/renderers#overriding-built-in-widget-templates&quot;&gt;組み込みウィジェットテンプレート&lt;/a&gt;をオーバーライドする場合は、そのオーバーライドをお読みください。</target>
        </trans-unit>
        <trans-unit id="ce700edc75ecc91e22a139a6e8d305167cd1e41e" translate="yes" xml:space="preserve">
          <source>Read on for details.</source>
          <target state="translated">詳細を読んでみてください。</target>
        </trans-unit>
        <trans-unit id="5cdc0d9e694b2eaa98c7c096f7b00e0bb6395bda" translate="yes" xml:space="preserve">
          <source>Read on to find out how to add your own actions to this list.</source>
          <target state="translated">このリストに自分のアクションを追加する方法を見つけるために読んでください。</target>
        </trans-unit>
        <trans-unit id="4ed57f54e247286a3dd772aca25e863acafcf68f" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;../howto/deployment/wsgi/modwsgi&quot;&gt;Django mod_wsgi documentation&lt;/a&gt; for more information and other common elements to a Django WSGI application.</source>
          <target state="translated">Django WSGIアプリケーションの詳細やその他の一般的な要素については、&lt;a href=&quot;../howto/deployment/wsgi/modwsgi&quot;&gt;Django mod_wsgiのドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="ba94d92ea0fc0108fb5111a8778616ce9ce343be" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;../ref/django-admin&quot;&gt;django-admin documentation&lt;/a&gt; for full information on what the &lt;code&gt;manage.py&lt;/code&gt; utility can do.</source>
          <target state="translated">&lt;code&gt;manage.py&lt;/code&gt; ユーティリティでできることの詳細については、&lt;a href=&quot;../ref/django-admin&quot;&gt;django-adminのドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="fa61ec2d4a4a4ad9f3c5532bcc9a01eaf9b3ea6d" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/releases/index/&quot;&gt;release notes&lt;/a&gt; for each &amp;lsquo;final&amp;rsquo; release from the one after your current Django version, up to and including the version to which you plan to upgrade.</source>
          <target state="translated">現在のDjangoバージョンの後からアップグレードするバージョンまでの各「最終」リリースの&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/releases/index/&quot;&gt;リリースノート&lt;/a&gt;をお読みください。</target>
        </trans-unit>
        <trans-unit id="2a82904be74564d2cd1b36db6bd9c4ed0066700d" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/releases/index/&quot;&gt;release notes&lt;/a&gt; for each &amp;lsquo;final&amp;rsquo; release from the one after your current Django version, up to and including the version to which you plan to upgrade.</source>
          <target state="translated">Read the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/releases/index/&quot;&gt;release notes&lt;/a&gt; for each &amp;lsquo;final&amp;rsquo; release from the one after your current Django version, up to and including the version to which you plan to upgrade.</target>
        </trans-unit>
        <trans-unit id="1ad0cb3cd1c5777c98648badf13385f628fcb4ed" translate="yes" xml:space="preserve">
          <source>Read the entire uploaded data from the file. Be careful with this method: if the uploaded file is huge it can overwhelm your system if you try to read it into memory. You&amp;rsquo;ll probably want to use &lt;code&gt;chunks()&lt;/code&gt; instead; see below.</source>
          <target state="translated">アップロードされたデータ全体をファイルから読み取ります。この方法には注意してください。アップロードされたファイルが巨大な場合、メモリに読み取ろうとするとシステムに負荷がかかる可能性があります。おそらく代わりに &lt;code&gt;chunks()&lt;/code&gt; を使いたいでしょう。下記参照。</target>
        </trans-unit>
        <trans-unit id="9eea83bf0ccf3ef4c4086e96388d7810576a979a" translate="yes" xml:space="preserve">
          <source>Read-only &lt;code&gt;Meta&lt;/code&gt; attributes</source>
          <target state="translated">読み取り専用の &lt;code&gt;Meta&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="41532e3bd7a65aef2b9a472825897a3bac62683c" translate="yes" xml:space="preserve">
          <source>Read-only attribute which is always &lt;code&gt;False&lt;/code&gt;. This is a way of differentiating &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt; objects. Generally, you should prefer using &lt;a href=&quot;#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt; to this attribute.</source>
          <target state="translated">常に &lt;code&gt;False&lt;/code&gt; である読み取り専用属性。これは、&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt;オブジェクトを区別する方法です。通常、この属性には&lt;a href=&quot;#django.contrib.auth.models.User.is_authenticated&quot;&gt; &lt;code&gt;is_authenticated&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0a7a05ed8f28ec3b82aff591fe46e85b8ceb2118" translate="yes" xml:space="preserve">
          <source>Read-only attribute which is always &lt;code&gt;False&lt;/code&gt;. This is a way of differentiating &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;AnonymousUser&lt;/code&gt;&lt;/a&gt; objects. Generally, you should prefer using &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt; to this attribute.</source>
          <target state="translated">常に &lt;code&gt;False&lt;/code&gt; である読み取り専用属性。これは、&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.AnonymousUser&quot;&gt; &lt;code&gt;AnonymousUser&lt;/code&gt; &lt;/a&gt;オブジェクトを区別する方法です。通常、この属性には&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_authenticated&quot;&gt; &lt;code&gt;is_authenticated&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="914b9efb519b462eef0203b30e71768a9011e6ef" translate="yes" xml:space="preserve">
          <source>Read-only attribute which is always &lt;code&gt;True&lt;/code&gt; (as opposed to &lt;code&gt;AnonymousUser.is_authenticated&lt;/code&gt; which is always &lt;code&gt;False&lt;/code&gt;). This is a way to tell if the user has been authenticated. This does not imply any permissions and doesn&amp;rsquo;t check if the user is active or has a valid session. Even though normally you will check this attribute on &lt;code&gt;request.user&lt;/code&gt; to find out whether it has been populated by the &lt;a href=&quot;../../ref/middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; (representing the currently logged-in user), you should know this attribute is &lt;code&gt;True&lt;/code&gt; for any &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">常に &lt;code&gt;True&lt;/code&gt; である読み取り専用属性（常に &lt;code&gt;False&lt;/code&gt; である &lt;code&gt;AnonymousUser.is_authenticated&lt;/code&gt; とは対照的）。これは、ユーザーが認証されたかどうかを確認する方法です。これは、権限を意味するものではなく、ユーザーがアクティブであるか、有効なセッションを持っているかどうかはチェックしません。通常は &lt;code&gt;request.user&lt;/code&gt; でこの属性をチェックして、&lt;a href=&quot;../../ref/middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt;（現在ログインしているユーザーを表す）によって入力されているかどうかを確認しますが、どの&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;インスタンスでもこの属性が &lt;code&gt;True&lt;/code&gt; であることを知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="c0e895729ad7f475f5b2bf1748aaa4fb5d2a87ed" translate="yes" xml:space="preserve">
          <source>Read-only attribute which is always &lt;code&gt;True&lt;/code&gt; (as opposed to &lt;code&gt;AnonymousUser.is_authenticated&lt;/code&gt; which is always &lt;code&gt;False&lt;/code&gt;). This is a way to tell if the user has been authenticated. This does not imply any permissions and doesn&amp;rsquo;t check if the user is active or has a valid session. Even though normally you will check this attribute on &lt;code&gt;request.user&lt;/code&gt; to find out whether it has been populated by the &lt;a href=&quot;../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; (representing the currently logged-in user), you should know this attribute is &lt;code&gt;True&lt;/code&gt; for any &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">常に &lt;code&gt;True&lt;/code&gt; である読み取り専用属性（常に &lt;code&gt;False&lt;/code&gt; である &lt;code&gt;AnonymousUser.is_authenticated&lt;/code&gt; とは対照的）。これは、ユーザーが認証されたかどうかを確認する方法です。これは、権限を意味するものではなく、ユーザーがアクティブであるか、有効なセッションを持っているかどうかはチェックしません。通常は &lt;code&gt;request.user&lt;/code&gt; でこの属性をチェックして、&lt;a href=&quot;../middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt;（現在ログインしているユーザーを表す）によって入力されているかどうかを確認しますが、どの&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;インスタンスでもこの属性が &lt;code&gt;True&lt;/code&gt; であることを知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="56007e3139edd3163cf05ca41bfc84d5000b7f0b" translate="yes" xml:space="preserve">
          <source>Read-only attributes</source>
          <target state="translated">読み取り専用属性</target>
        </trans-unit>
        <trans-unit id="c1db1af1a77800e199d231211e0ee56c94656a50" translate="yes" xml:space="preserve">
          <source>Reader Objects</source>
          <target state="translated">読者オブジェクト</target>
        </trans-unit>
        <trans-unit id="415b604313f8d8d16e114afcdd1371c7dcc8d397" translate="yes" xml:space="preserve">
          <source>Reading a session is not considered activity for expiration purposes. Session expiration is computed from the last time the session was &lt;em&gt;modified&lt;/em&gt;.</source>
          <target state="translated">セッションの読み取りは、有効期限の目的のアクティビティとは見なされません。セッションの有効期限は、セッションが最後に&lt;em&gt;変更された&lt;/em&gt;ときから計算さ&lt;em&gt;れ&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d540a305997ed8ff2cf78c613de37cd46b92ba00" translate="yes" xml:space="preserve">
          <source>Receiver functions</source>
          <target state="translated">レシーバ機能</target>
        </trans-unit>
        <trans-unit id="5dd676dcf1b0d740d5b2ca2e8e2a7f76c69f1781" translate="yes" xml:space="preserve">
          <source>Receives a &amp;ldquo;chunk&amp;rdquo; of data from the file upload.</source>
          <target state="translated">ファイルのアップロードからデータの「チャンク」を受け取ります。</target>
        </trans-unit>
        <trans-unit id="15cba3e481f7f613efb8e8dd9e72a1071a82d171" translate="yes" xml:space="preserve">
          <source>Recreate the &lt;code&gt;Article&lt;/code&gt; and &lt;code&gt;Publication&lt;/code&gt; we have deleted:</source>
          <target state="translated">削除した &lt;code&gt;Article&lt;/code&gt; と &lt;code&gt;Publication&lt;/code&gt; を再作成します。</target>
        </trans-unit>
        <trans-unit id="219d012f3326715d16934176de803d1f48e3f839" translate="yes" xml:space="preserve">
          <source>Recursive relationships using an intermediary model and defined as symmetrical (that is, with &lt;a href=&quot;#django.db.models.ManyToManyField.symmetrical&quot;&gt;&lt;code&gt;symmetrical=True&lt;/code&gt;&lt;/a&gt;, which is the default) can&amp;rsquo;t determine the reverse accessors names, as they would be the same. You need to set a &lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt; to at least one of them. If you&amp;rsquo;d prefer Django not to create a backwards relation, set &lt;code&gt;related_name&lt;/code&gt; to &lt;code&gt;'+'&lt;/code&gt;.</source>
          <target state="translated">中間モデルを使用して対称（つまり、&lt;a href=&quot;#django.db.models.ManyToManyField.symmetrical&quot;&gt; &lt;code&gt;symmetrical=True&lt;/code&gt; &lt;/a&gt;がデフォルト）として定義された再帰的な関係は、リバースアクセサー名が同じであるため、それらを決定できません。&lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt; &lt;code&gt;related_name&lt;/code&gt; &lt;/a&gt;を少なくとも1つに設定する必要があります。Djangoが逆方向の関係を作成しないようにしたい場合は、 &lt;code&gt;related_name&lt;/code&gt; を &lt;code&gt;'+'&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="bdac757a55e328fce5f9ea84cb1f4c52b693ae20" translate="yes" xml:space="preserve">
          <source>Recursively takes a self-nested list and returns an HTML unordered list &amp;ndash; WITHOUT opening and closing &amp;lt;ul&amp;gt; tags.</source>
          <target state="translated">自己ネストしたリストを再帰的に取得し、&amp;lt;ul&amp;gt;タグの開始と終了なしで、HTMLの順序なしリストを返します。</target>
        </trans-unit>
        <trans-unit id="5f0b9d25f251da505e0f259b62f97279df6c7721" translate="yes" xml:space="preserve">
          <source>Redirect to object&amp;rsquo;s page</source>
          <target state="translated">オブジェクトのページにリダイレクト</target>
        </trans-unit>
        <trans-unit id="c1082c179fcf127055950f87347c117ccb88695f" translate="yes" xml:space="preserve">
          <source>Redirecting unauthorized requests in class-based views</source>
          <target state="translated">クラスベースのビューで許可されていないリクエストをリダイレクトする</target>
        </trans-unit>
        <trans-unit id="fcf937319f333e7df4ec12406025be63bde6549b" translate="yes" xml:space="preserve">
          <source>Redirects</source>
          <target state="translated">Redirects</target>
        </trans-unit>
        <trans-unit id="99a0f0c42b6c80fb7d4ddc5625fdef0e2634a980" translate="yes" xml:space="preserve">
          <source>Redirects are represented by a standard &lt;a href=&quot;../../topics/db/models&quot;&gt;Django model&lt;/a&gt;, which lives in &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/redirects/models.py&quot;&gt;django/contrib/redirects/models.py&lt;/a&gt;. You can access redirect objects via the &lt;a href=&quot;../../topics/db/queries&quot;&gt;Django database API&lt;/a&gt;.</source>
          <target state="translated">リダイレクトは、&lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/redirects/models.py&quot;&gt;django / contrib / redirects / models.pyに&lt;/a&gt;ある標準の&lt;a href=&quot;../../topics/db/models&quot;&gt;Djangoモデル&lt;/a&gt;で表されます。&lt;a href=&quot;../../topics/db/queries&quot;&gt;DjangoデータベースAPIを&lt;/a&gt;介してリダイレクトオブジェクトにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="91a327b753697fc97e1a71d0bb422a6908532561" translate="yes" xml:space="preserve">
          <source>Redirects are represented by a standard &lt;a href=&quot;../../topics/db/models&quot;&gt;Django model&lt;/a&gt;, which lives in &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/redirects/models.py&quot;&gt;django/contrib/redirects/models.py&lt;/a&gt;. You can access redirect objects via the &lt;a href=&quot;../../topics/db/queries&quot;&gt;Django database API&lt;/a&gt;. For example:</source>
          <target state="translated">Redirects are represented by a standard &lt;a href=&quot;../../topics/db/models&quot;&gt;Django model&lt;/a&gt;, which lives in &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/redirects/models.py&quot;&gt;django/contrib/redirects/models.py&lt;/a&gt;. You can access redirect objects via the &lt;a href=&quot;../../topics/db/queries&quot;&gt;Django database API&lt;/a&gt;. For example:</target>
        </trans-unit>
        <trans-unit id="635f8ba8a6b7756ce0a998b1d814136c3037b994" translate="yes" xml:space="preserve">
          <source>Redirects to &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_success_url&quot;&gt;&lt;code&gt;get_success_url()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.views.generic.edit.FormMixin.get_success_url&quot;&gt; &lt;code&gt;get_success_url()&lt;/code&gt; に&lt;/a&gt;リダイレクトします。</target>
        </trans-unit>
        <trans-unit id="6685e75b7bdd069645601bbf986a1036c61fc1a3" translate="yes" xml:space="preserve">
          <source>Redirects to a given URL.</source>
          <target state="translated">指定した URL にリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="cee4d5d609c5c9337422fb70f81f259094d9abb9" translate="yes" xml:space="preserve">
          <source>Redirects to the login page, and then back to another URL after a successful login.</source>
          <target state="translated">ログインページにリダイレクトし、ログインに成功した後に別のURLに戻ります。</target>
        </trans-unit>
        <trans-unit id="81309e36ebc2777a2d2971ea4526663c08571bed" translate="yes" xml:space="preserve">
          <source>Reducing the value of this timeout doesn&amp;rsquo;t make any difference to the ability of an attacker to brute-force a password reset token. Tokens are designed to be safe from brute-forcing without any timeout.</source>
          <target state="translated">Reducing the value of this timeout doesn&amp;rsquo;t make any difference to the ability of an attacker to brute-force a password reset token. Tokens are designed to be safe from brute-forcing without any timeout.</target>
        </trans-unit>
        <trans-unit id="90773f350cdc5206a4d248f2aebd691a9d73b770" translate="yes" xml:space="preserve">
          <source>Refer &lt;a href=&quot;#mysql-spatial-limitations&quot;&gt;MySQL Spatial Limitations&lt;/a&gt; section for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#mysql-spatial-limitations&quot;&gt;MySQL空間制限&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="5e0ec3a1898930aa62748f205436d3a1bae8429f" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;settings&quot;&gt;settings documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;settings&quot;&gt;設定ドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="34ef02ec65bb35fc151543cc3283f96c3ff66d6b" translate="yes" xml:space="preserve">
          <source>References to functions in field options such as &lt;code&gt;upload_to&lt;/code&gt; and &lt;code&gt;limit_choices_to&lt;/code&gt; and model manager declarations with managers having &lt;code&gt;use_in_migrations = True&lt;/code&gt; are serialized in migrations, so the functions and classes will need to be kept around for as long as there is a migration referencing them. Any &lt;a href=&quot;../howto/custom-model-fields&quot;&gt;custom model fields&lt;/a&gt; will also need to be kept, since these are imported directly by migrations.</source>
          <target state="translated">&lt;code&gt;upload_to&lt;/code&gt; や &lt;code&gt;limit_choices_to&lt;/code&gt; などのフィールドオプション内の関数への参照と、 &lt;code&gt;use_in_migrations = True&lt;/code&gt; マネージャーを使用したモデルマネージャー宣言は、移行時にシリアル化されるため、関数とクラスは、それらを参照する移行がある限り維持する必要があります。任意の&lt;a href=&quot;../howto/custom-model-fields&quot;&gt;カスタムモデルフィールドは、&lt;/a&gt;これらの移行により直接インポートされるためにも、保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="276ab3a41713a17fad1f1a0b209cbee45742aeee" translate="yes" xml:space="preserve">
          <source>Referencing built-in constraints</source>
          <target state="translated">組み込み制約の参照</target>
        </trans-unit>
        <trans-unit id="0e9b8d42d37f279ddf603e896c63abbad3f86c9a" translate="yes" xml:space="preserve">
          <source>Referencing built-in indexes</source>
          <target state="translated">組み込みインデックスの参照</target>
        </trans-unit>
        <trans-unit id="c7b51a7cf9d21479475aeccd50db9c14080cef2b" translate="yes" xml:space="preserve">
          <source>Referencing columns from the outer queryset</source>
          <target state="translated">外部のクエリセットからカラムを参照する</target>
        </trans-unit>
        <trans-unit id="2d946defa09525bc6e693928e987dffed69eb391" translate="yes" xml:space="preserve">
          <source>Referencing the &lt;code&gt;User&lt;/code&gt; model</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; モデルの参照</target>
        </trans-unit>
        <trans-unit id="5601323cf623f0f478b4fdf72ca5d8dc6972bd9a" translate="yes" xml:space="preserve">
          <source>Referential fields are again represented by the PK or sequence of PKs.</source>
          <target state="translated">参照フィールドは、再び PK または PK のシーケンスで表されます。</target>
        </trans-unit>
        <trans-unit id="e9085bde7a7780a48ca2a79ea2ef1b8e36c397ae" translate="yes" xml:space="preserve">
          <source>Referrer Policy</source>
          <target state="translated">リファラーポリシー</target>
        </trans-unit>
        <trans-unit id="59ec56dfdbf84b16f4ab15d7a7e20276cd1c71d6" translate="yes" xml:space="preserve">
          <source>Referrer policy</source>
          <target state="translated">リファラーポリシー</target>
        </trans-unit>
        <trans-unit id="75d2291a8b37aa0271103fe6b52cc8a23f719e80" translate="yes" xml:space="preserve">
          <source>Refreshing objects from database</source>
          <target state="translated">データベースからのオブジェクトの更新</target>
        </trans-unit>
        <trans-unit id="d4df310c061d0e7e3adb44cae53677e334ad7017" translate="yes" xml:space="preserve">
          <source>Regardless of &lt;code&gt;validate_max&lt;/code&gt;, if the number of forms in a data set exceeds &lt;code&gt;max_num&lt;/code&gt; by more than 1000, then the form will fail to validate as if &lt;code&gt;validate_max&lt;/code&gt; were set, and additionally only the first 1000 forms above &lt;code&gt;max_num&lt;/code&gt; will be validated. The remainder will be truncated entirely. This is to protect against memory exhaustion attacks using forged POST requests.</source>
          <target state="translated">&lt;code&gt;validate_max&lt;/code&gt; に関係なく、データセット内のフォームの数が &lt;code&gt;max_num&lt;/code&gt; を1000 を超えて超えると、フォームは &lt;code&gt;validate_max&lt;/code&gt; が設定されているかのように検証に失敗し、さらに &lt;code&gt;max_num&lt;/code&gt; より上の最初の1000フォームのみが検証されます。残りは完全に切り捨てられます。これは、偽造されたPOSTリクエストを使用したメモリ枯渇攻撃から保護するためです。</target>
        </trans-unit>
        <trans-unit id="8d122a243aaaf7db085d5a39e1926de802b785eb" translate="yes" xml:space="preserve">
          <source>Regardless of &lt;code&gt;validate_min&lt;/code&gt;, if a formset contains no data, then &lt;code&gt;extra + min_num&lt;/code&gt; empty forms will be displayed.</source>
          <target state="translated">Regardless of &lt;code&gt;validate_min&lt;/code&gt; , if a formset contains no data, then &lt;code&gt;extra + min_num&lt;/code&gt; empty forms will be displayed.</target>
        </trans-unit>
        <trans-unit id="cea39d3a1fa585ece95391cca7120d336be58608" translate="yes" xml:space="preserve">
          <source>Regardless of the bounds specified when saving the data, PostgreSQL always returns a range in a canonical form that includes the lower bound and excludes the upper bound, that is &lt;code&gt;[)&lt;/code&gt;.</source>
          <target state="translated">Regardless of the bounds specified when saving the data, PostgreSQL always returns a range in a canonical form that includes the lower bound and excludes the upper bound, that is &lt;code&gt;[)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ae0a24f6ed88591a811cce9f6a394284d521979" translate="yes" xml:space="preserve">
          <source>Regardless of the bounds specified when saving the data, PostgreSQL always returns a range in a canonical form that includes the lower bound and excludes the upper bound; that is &lt;code&gt;[)&lt;/code&gt;.</source>
          <target state="translated">データを保存するときに指定された範囲に関係なく、PostgreSQLは常に下限を含み、上限を除外した標準形式で範囲を返します。それは &lt;code&gt;[)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="99d7c5a4bf73f7b54502ceed61f48e727412d9cb" translate="yes" xml:space="preserve">
          <source>Regardless of the number of templates used during rendering, you can retrieve context values using the &lt;code&gt;[]&lt;/code&gt; operator. For example, the context variable &lt;code&gt;name&lt;/code&gt; could be retrieved using:</source>
          <target state="translated">レンダリング中に使用されるテンプレートの数に関係なく、 &lt;code&gt;[]&lt;/code&gt; 演算子を使用してコンテキスト値を取得できます。たとえば、コンテキスト変数 &lt;code&gt;name&lt;/code&gt; は次のようにして取得できます。</target>
        </trans-unit>
        <trans-unit id="4f83c6e8910b69f0e02c032fb512f7f8643c71ee" translate="yes" xml:space="preserve">
          <source>Regardless of the value of the &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting in your configuration file, all Django tests run with &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt;=False. This is to ensure that the observed output of your code matches what will be seen in a production setting.</source>
          <target state="translated">構成ファイルの&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;設定の値に関係なく、すべてのDjangoテストは&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; = Falseで実行されます。これは、コードの観察された出力が、プロダクション設定で表示されるものと一致することを保証するためです。</target>
        </trans-unit>
        <trans-unit id="fea13858c65d8d1656c501831f13733dbd4ef8c3" translate="yes" xml:space="preserve">
          <source>Regardless of whether the tests pass or fail, the test databases are destroyed when all the tests have been executed.</source>
          <target state="translated">テストの合否にかかわらず、すべてのテストが実行された時点でテストデータベースは破棄されます。</target>
        </trans-unit>
        <trans-unit id="3fc3facce78bf62706623b190c662b474a07e993" translate="yes" xml:space="preserve">
          <source>Regardless of whether you define a &lt;code&gt;media&lt;/code&gt; declaration, &lt;em&gt;all&lt;/em&gt; Form objects have a &lt;code&gt;media&lt;/code&gt; property. The default value for this property is the result of adding the &lt;code&gt;media&lt;/code&gt; definitions for all widgets that are part of the form:</source>
          <target state="translated">&lt;code&gt;media&lt;/code&gt; 宣言を定義するかどうかに関係なく、&lt;em&gt;すべての&lt;/em&gt; Formオブジェクトには &lt;code&gt;media&lt;/code&gt; プロパティがあります。このプロパティのデフォルト値は、フォームの一部であるすべてのウィジェットの &lt;code&gt;media&lt;/code&gt; 定義を追加した結果です。</target>
        </trans-unit>
        <trans-unit id="8fdb1abcfc2cccc01f8beaa1e9517a91f7ba37d2" translate="yes" xml:space="preserve">
          <source>Regardless of whether you define a primary key field yourself, or let Django supply one for you, each model will have a property called &lt;code&gt;pk&lt;/code&gt;. It behaves like a normal attribute on the model, but is actually an alias for whichever attribute is the primary key field for the model. You can read and set this value, just as you would for any other attribute, and it will update the correct field in the model.</source>
          <target state="translated">自分で主キーフィールドを定義するか、Djangoに提供するかどうかに関係なく、各モデルには &lt;code&gt;pk&lt;/code&gt; というプロパティがあります。これはモデルの通常の属性のように動作しますが、実際には、モデルの主キーフィールドである属性のエイリアスです。他の属性の場合と同じように、この値を読み取って設定でき、モデルの正しいフィールドを更新します。</target>
        </trans-unit>
        <trans-unit id="fc51848ad0442371d20c40163eb94aafe5c0ea02" translate="yes" xml:space="preserve">
          <source>Register custom converter classes in your URLconf using &lt;a href=&quot;../../ref/urls#django.urls.register_converter&quot;&gt;&lt;code&gt;register_converter()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/urls#django.urls.register_converter&quot;&gt; &lt;code&gt;register_converter()&lt;/code&gt; &lt;/a&gt;を使用して、カスタムコンバータクラスをURLconfに登録します。</target>
        </trans-unit>
        <trans-unit id="46e27d91e3eab975e7b640fdbd934e41e8413b3d" translate="yes" xml:space="preserve">
          <source>Register with Google first!</source>
          <target state="translated">まずはGoogleに登録しましょう</target>
        </trans-unit>
        <trans-unit id="5dff0eb6797a9d6b53ff5fa684cc0436c221bf7b" translate="yes" xml:space="preserve">
          <source>Registering and fetching lookups</source>
          <target state="translated">ルックアップの登録と取得</target>
        </trans-unit>
        <trans-unit id="f51d9cda2b0d34328b131091ec0c3ea09eac6385" translate="yes" xml:space="preserve">
          <source>Registering and labeling checks</source>
          <target state="translated">チェックの登録とラベリング</target>
        </trans-unit>
        <trans-unit id="5b6fa09dedc7250877272e6b1b23698480dbdfc6" translate="yes" xml:space="preserve">
          <source>Registering custom filters</source>
          <target state="translated">カスタムフィルタの登録</target>
        </trans-unit>
        <trans-unit id="928a16e3f50ffd8a5ae8c237f473df9f44693c2a" translate="yes" xml:space="preserve">
          <source>Registering custom path converters</source>
          <target state="translated">カスタムパスコンバータの登録</target>
        </trans-unit>
        <trans-unit id="4af918966b14a758d09d261b9ef75259d658d2ca" translate="yes" xml:space="preserve">
          <source>Registering the tag</source>
          <target state="translated">タグの登録</target>
        </trans-unit>
        <trans-unit id="d36ce0f66d74b6c119c0a55fefdb441e3cf123cb" translate="yes" xml:space="preserve">
          <source>Registers a new lookup in the class. For example &lt;code&gt;DateField.register_lookup(YearExact)&lt;/code&gt; will register &lt;code&gt;YearExact&lt;/code&gt; lookup on &lt;code&gt;DateField&lt;/code&gt;. It overrides a lookup that already exists with the same name. &lt;code&gt;lookup_name&lt;/code&gt; will be used for this lookup if provided, otherwise &lt;code&gt;lookup.lookup_name&lt;/code&gt; will be used.</source>
          <target state="translated">クラスに新しいルックアップを登録します。たとえば、 &lt;code&gt;DateField.register_lookup(YearExact)&lt;/code&gt; は、 &lt;code&gt;DateField&lt;/code&gt; で &lt;code&gt;YearExact&lt;/code&gt; ルックアップを登録します。同じ名前の既存の検索を上書きします。 &lt;code&gt;lookup_name&lt;/code&gt; が指定されている場合、このルックアップに使用されます。それ以外の場合は、 &lt;code&gt;lookup.lookup_name&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="38d4bc4c25cdb28e029c4332704ec2908a7ffaa5" translate="yes" xml:space="preserve">
          <source>Registers the given model class (or iterable of classes) with the given &lt;code&gt;admin_class&lt;/code&gt;. &lt;code&gt;admin_class&lt;/code&gt; defaults to &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; (the default admin options). If keyword arguments are given &amp;ndash; e.g. &lt;code&gt;list_display&lt;/code&gt; &amp;ndash; they&amp;rsquo;ll be applied as options to the admin class.</source>
          <target state="translated">指定されたモデルクラス（またはクラスの反復可能オブジェクト）を指定された &lt;code&gt;admin_class&lt;/code&gt; に登録します。 &lt;code&gt;admin_class&lt;/code&gt; のデフォルトは&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;（デフォルトの管理オプション）です。 &lt;code&gt;list_display&lt;/code&gt; などのキーワード引数が指定されている場合、それらはオプションとして管理クラスに適用されます。</target>
        </trans-unit>
        <trans-unit id="f169484488e44716e96ed1c45fb600472f0644ab" translate="yes" xml:space="preserve">
          <source>Registration API</source>
          <target state="translated">登録API</target>
        </trans-unit>
        <trans-unit id="727971b46e8c135e01c73b9932d62092cf2fb313" translate="yes" xml:space="preserve">
          <source>Regroups a list of alike objects by a common attribute.</source>
          <target state="translated">似たようなオブジェクトのリストを共通の属性で再グループ化します。</target>
        </trans-unit>
        <trans-unit id="b57e0217a5166194203d573ef157860b55fec143" translate="yes" xml:space="preserve">
          <source>Regular expressions allow nested arguments, and Django will resolve them and pass them to the view. When reversing, Django will try to fill in all outer captured arguments, ignoring any nested captured arguments. Consider the following URL patterns which optionally take a page argument:</source>
          <target state="translated">正規表現は入れ子になった引数を許可し、Django はそれらを解決してビューに渡します。逆引きの際、Django はネストされたキャプチャされた引数を無視して、すべての外側のキャプチャされた引数を埋めようとします。オプションでページ引数を取る以下の URL パターンを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="0efb7797b34f8df40e596b7b6c369800006cf5e0" translate="yes" xml:space="preserve">
          <source>Rejected requests</source>
          <target state="translated">リクエストの却下</target>
        </trans-unit>
        <trans-unit id="c7a3e682e46e2711bab1cb0df359280bad9695e1" translate="yes" xml:space="preserve">
          <source>Related fields</source>
          <target state="translated">関連分野</target>
        </trans-unit>
        <trans-unit id="b119479f585d76d63b7140c5fdf6ecc37026fd0f" translate="yes" xml:space="preserve">
          <source>Related managers support field lookups as well. The API automatically follows relationships as far as you need. Use double underscores to separate relationships. This works as many levels deep as you want. There&amp;rsquo;s no limit. For example:</source>
          <target state="translated">関連するマネージャーはフィールド検索もサポートしています。APIは、必要な範囲で関係を自動的に追跡します。二重のアンダースコアを使用して関係を分離します。これは、必要なだけ多くのレベルで機能します。制限はありません。例えば：</target>
        </trans-unit>
        <trans-unit id="d2e9a5d07ff63a1e4d3ac3e13ff70657fe596c34" translate="yes" xml:space="preserve">
          <source>Related objects</source>
          <target state="translated">関連オブジェクト</target>
        </trans-unit>
        <trans-unit id="ea791d82ad3c066aab672ce1c828d7c43a2d611a" translate="yes" xml:space="preserve">
          <source>Related objects can be added, removed, or created with the field&amp;rsquo;s &lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager&quot;&gt;&lt;code&gt;RelatedManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関連オブジェクトは、フィールドの&lt;a href=&quot;relations#django.db.models.fields.related.RelatedManager&quot;&gt; &lt;code&gt;RelatedManager&lt;/code&gt; &lt;/a&gt;で追加、削除、または作成できます。</target>
        </trans-unit>
        <trans-unit id="68f78f018ff04fc34d87112505d3493ceee5bc2d" translate="yes" xml:space="preserve">
          <source>Related objects reference</source>
          <target state="translated">関連オブジェクトの参照</target>
        </trans-unit>
        <trans-unit id="7ec56d8720a6c99c9f90e1af0562c7c93797fbe2" translate="yes" xml:space="preserve">
          <source>Relation sets can be cleared:</source>
          <target state="translated">リレーションセットをクリアすることができます。</target>
        </trans-unit>
        <trans-unit id="647f7b787282a018597eeb618e28696c2e5a1bf5" translate="yes" xml:space="preserve">
          <source>Relation sets can be set:</source>
          <target state="translated">関係セットを設定することができます。</target>
        </trans-unit>
        <trans-unit id="7f37e30ad51df52be939ec9bc920e5d0851e4bf2" translate="yes" xml:space="preserve">
          <source>Relations between your models and &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; can also be used to enable &amp;ldquo;generic&amp;rdquo; relationships between an instance of one of your models and instances of any model you have installed.</source>
          <target state="translated">モデルと&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; の&lt;/a&gt;間の関係を使用して、モデルの1つのインスタンスとインストールしたモデルのインスタンスの間の「一般的な」関係を有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="d7f91febf44bd093f21d7a1ef8ac0c2a27a3ed8f" translate="yes" xml:space="preserve">
          <source>Relationship fields</source>
          <target state="translated">関係フィールド</target>
        </trans-unit>
        <trans-unit id="229981dd1dc44fcc3bf72493583bb63fa236cecf" translate="yes" xml:space="preserve">
          <source>Relationships</source>
          <target state="translated">Relationships</target>
        </trans-unit>
        <trans-unit id="d4c57b638c2a82c2ee8a3d3c322f5a6d24592f07" translate="yes" xml:space="preserve">
          <source>Relationships defined this way on &lt;a href=&quot;../../topics/db/models#abstract-base-classes&quot;&gt;abstract models&lt;/a&gt; are resolved when the model is subclassed as a concrete model and are not relative to the abstract model&amp;rsquo;s &lt;code&gt;app_label&lt;/code&gt;:</source>
          <target state="translated">このように&lt;a href=&quot;../../topics/db/models#abstract-base-classes&quot;&gt;抽象モデルで&lt;/a&gt;定義された関係は、モデルが具象モデルとしてサブクラス化され、抽象モデルの &lt;code&gt;app_label&lt;/code&gt; に関連していない場合に解決されます。</target>
        </trans-unit>
        <trans-unit id="7a1d7be2174dcdbe8837f3234b11454daf6c4b0e" translate="yes" xml:space="preserve">
          <source>Releases savepoint &lt;code&gt;sid&lt;/code&gt;. The changes performed since the savepoint was created become part of the transaction.</source>
          <target state="translated">セーブポイント &lt;code&gt;sid&lt;/code&gt; を解放します。セーブポイントの作成後に実行された変更は、トランザクションの一部になります。</target>
        </trans-unit>
        <trans-unit id="130a2ff9b0b315a79408d3fa4b84253fcd9e7d3f" translate="yes" xml:space="preserve">
          <source>Reload &lt;code&gt;http://localhost:8000/polls/&lt;/code&gt; and you should see that the question links are green (Django style!) which means that your stylesheet was properly loaded.</source>
          <target state="translated">&lt;code&gt;http://localhost:8000/polls/&lt;/code&gt; をリロードすると、質問のリンクが緑色（Djangoスタイル！）であることがわかります。これは、スタイルシートが適切にロードされたことを意味します。</target>
        </trans-unit>
        <trans-unit id="24ec2643661160eb82db76840c96c374ea9d6b7d" translate="yes" xml:space="preserve">
          <source>Reload &lt;code&gt;http://localhost:8000/polls/&lt;/code&gt; and you should see the background loaded in the top left of the screen.</source>
          <target state="translated">&lt;code&gt;http://localhost:8000/polls/&lt;/code&gt; をリロードすると、画面の左上にロードされた背景が表示されます。</target>
        </trans-unit>
        <trans-unit id="ed16c1e4ce77f729e040f36fb0370f8e7223bc87" translate="yes" xml:space="preserve">
          <source>Remember that the conditions are evaluated in order, so in the above example we get the correct result even though the second condition matches both Jane Doe and Jack Black. This works just like an &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; statement in &lt;code&gt;Python&lt;/code&gt;.</source>
          <target state="translated">条件は順番に評価されることに注意してください。したがって、上記の例では、2番目の条件がJane DoeとJack Blackの両方に一致しても、正しい結果が得られます。これは、 &lt;code&gt;Python&lt;/code&gt; の&lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt; &lt;code&gt;elif&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt; &lt;code&gt;else&lt;/code&gt; &lt;/a&gt;ステートメントのように機能します。</target>
        </trans-unit>
        <trans-unit id="04bb2ce82e24290d61cadc024c3a3401217064aa" translate="yes" xml:space="preserve">
          <source>Remember that you may be optimizing for speed or memory or both, depending on your requirements. Sometimes optimizing for one will be detrimental to the other, but sometimes they will help each other. Also, work that is done by the database process might not have the same cost (to you) as the same amount of work done in your Python process. It is up to you to decide what your priorities are, where the balance must lie, and profile all of these as required since this will depend on your application and server.</source>
          <target state="translated">要件に応じて、速度やメモリ、またはその両方に最適化することがあることを覚えておいてください。片方を最適化するともう片方に不利になることもありますが、お互いに助け合うこともあります。また、データベースプロセスで行われている作業は、Pythonプロセスで行われている作業と同じ量の作業とは(あなたにとって)同じコストではないかもしれません。優先順位は何か、バランスはどこにあるのか、そして必要に応じてこれらのすべてをプロファイリングするのはあなた次第です。</target>
        </trans-unit>
        <trans-unit id="c07a82f1b611e9c4dee18b82042ae112b0479249" translate="yes" xml:space="preserve">
          <source>Remember that you&amp;rsquo;re allowed to change this list of arguments at any time, so getting the API right on the first try isn&amp;rsquo;t necessary.</source>
          <target state="translated">この引数のリストはいつでも変更できるため、最初の試行でAPIを正しく設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="ca8a8e67e6bbe0350c124fb23567f9488608eb7c" translate="yes" xml:space="preserve">
          <source>Remember that, as always with &lt;code&gt;QuerySets&lt;/code&gt;, any subsequent chained methods which imply a different database query will ignore previously cached results, and retrieve data using a fresh database query. So, if you write the following:</source>
          <target state="translated">いつものように、ことに注意してください &lt;code&gt;QuerySets&lt;/code&gt; 、異なるデータベースクエリを意味するものでは後続連鎖の方法は、以前にキャッシュされた結果を無視して、新鮮なデータベースクエリを使用してデータを取得します。したがって、次のように記述した場合：</target>
        </trans-unit>
        <trans-unit id="0648ad4c810dd53994bf04bf0125b62b9faf05e4" translate="yes" xml:space="preserve">
          <source>Remember, when we wrote the link to a question in the &lt;code&gt;polls/index.html&lt;/code&gt; template, the link was partially hardcoded like this:</source>
          <target state="translated">質問へのリンクを &lt;code&gt;polls/index.html&lt;/code&gt; テンプレートに書き込んだとき、リンクは次のように部分的にハードコーディングされていたことを思い出してください。</target>
        </trans-unit>
        <trans-unit id="5135e0a935e58bed79364ff26f03ec7ac7319276" translate="yes" xml:space="preserve">
          <source>Remove in bulk</source>
          <target state="translated">一括削除</target>
        </trans-unit>
        <trans-unit id="45f84bb089770ecd1f5d32438c6d4d9aab68d990" translate="yes" xml:space="preserve">
          <source>Remove the &lt;code&gt;register()&lt;/code&gt; call for the &lt;code&gt;Choice&lt;/code&gt; model. Then, edit the &lt;code&gt;Question&lt;/code&gt; registration code to read:</source>
          <target state="translated">&lt;code&gt;Choice&lt;/code&gt; モデルの &lt;code&gt;register()&lt;/code&gt; 呼び出しを削除します。次に、 &lt;code&gt;Question&lt;/code&gt; 登録コードを編集して以下を読み取ります。</target>
        </trans-unit>
        <trans-unit id="3eeb5c1e65e4d92fb1c5f089a45d318674fcb9b1" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;constraint&lt;/code&gt; from &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; のテーブルから &lt;code&gt;constraint&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="768dc339cc5eead92975d666b5fa8824ffd11f06" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;index&lt;/code&gt; from &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; のテーブルから &lt;code&gt;index&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="583cefeeb9162d5d5d6db19d9b31c527f2b06ae4" translate="yes" xml:space="preserve">
          <source>Removes a field from a model.</source>
          <target state="translated">モデルからフィールドを削除します。</target>
        </trans-unit>
        <trans-unit id="e9b0c05b3ca9657894ffa84e94aaa3cfabb169ca" translate="yes" xml:space="preserve">
          <source>Removes all data from the database and re-executes any post-synchronization handlers. The table of which migrations have been applied is not cleared.</source>
          <target state="translated">データベースからすべてのデータを削除し、すべての同期後ハンドラを再実行します。移行が適用されたテーブルはクリアされません。</target>
        </trans-unit>
        <trans-unit id="6c27d007db1fb7616b6f48bae7b79d7185c690cd" translate="yes" xml:space="preserve">
          <source>Removes all objects from the related object set.</source>
          <target state="translated">関連するオブジェクトセットからすべてのオブジェクトを削除します。</target>
        </trans-unit>
        <trans-unit id="73e76021d47b3d0e9fa33e9e37b51a7ff2945eba" translate="yes" xml:space="preserve">
          <source>Removes all objects from the related object set:</source>
          <target state="translated">関連するオブジェクトセットからすべてのオブジェクトを削除します。</target>
        </trans-unit>
        <trans-unit id="dc347d2171f0c6653163f4320aab80c390f59de1" translate="yes" xml:space="preserve">
          <source>Removes all values of arg from the given string.</source>
          <target state="translated">与えられた文字列からargのすべての値を削除します。</target>
        </trans-unit>
        <trans-unit id="2ef1450bb558a69cdedac1828f44599b75d1a1b6" translate="yes" xml:space="preserve">
          <source>Removes an arbitrary member of the dictionary (since there&amp;rsquo;s no concept of ordering), and returns a two value tuple containing the key and a list of all values for the key. Raises &lt;code&gt;KeyError&lt;/code&gt; when called on an empty dictionary. For example:</source>
          <target state="translated">辞書の任意のメンバーを削除し（順序付けの概念がないため）、キーとキーのすべての値のリストを含む2つの値のタプルを返します。発生させ &lt;code&gt;KeyError&lt;/code&gt; 例外は空の辞書に呼び出されたとき。例えば：</target>
        </trans-unit>
        <trans-unit id="9f1f751adff5eb905b32cb9ceefa88d716e210a1" translate="yes" xml:space="preserve">
          <source>Removes expired sessions from the session store. This class method is called by &lt;a href=&quot;../../ref/django-admin#django-admin-clearsessions&quot;&gt;&lt;code&gt;clearsessions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期限切れのセッションをセッションストアから削除します。このクラスメソッドは、&lt;a href=&quot;../../ref/django-admin#django-admin-clearsessions&quot;&gt; &lt;code&gt;clearsessions&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="11607e9f71cebcb1712d012372fa17813dd472d1" translate="yes" xml:space="preserve">
          <source>Removes the column(s) representing the field from the model&amp;rsquo;s table, along with any unique constraints, foreign key constraints, or indexes caused by that field.</source>
          <target state="translated">モデルのテーブルからフィールドを表す列を、そのフィールドによって引き起こされた一意の制約、外部キー制約、またはインデックスとともに削除します。</target>
        </trans-unit>
        <trans-unit id="b8e284ffdd0024c1c64a5b25462ced99f4bb8969" translate="yes" xml:space="preserve">
          <source>Removes the constraint named &lt;code&gt;name&lt;/code&gt; from the model with &lt;code&gt;model_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;model_name&lt;/code&gt; を使用して、 &lt;code&gt;name&lt;/code&gt; という名前の制約をモデルから削除します。</target>
        </trans-unit>
        <trans-unit id="71868f049dcfd4d937b3560794a32115cd1d6841" translate="yes" xml:space="preserve">
          <source>Removes the file from the model instance and deletes the underlying file. If &lt;code&gt;save&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the model&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method will be called once the file is deleted.</source>
          <target state="translated">モデルインスタンスからファイルを削除し、基になるファイルを削除します。 &lt;code&gt;save&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、ファイルが削除されるとモデルの &lt;code&gt;save()&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="acab399eaeb08911cc2ded336df8defe265be5f6" translate="yes" xml:space="preserve">
          <source>Removes the index named &lt;code&gt;name&lt;/code&gt; from the model with &lt;code&gt;model_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;model_name&lt;/code&gt; を使用して、名前付きインデックス &lt;code&gt;name&lt;/code&gt; をモデルから削除します。</target>
        </trans-unit>
        <trans-unit id="fa83a3e51e27351289cefaaf6295f73f0aab2454" translate="yes" xml:space="preserve">
          <source>Removes the specified model objects from the related object set.</source>
          <target state="translated">指定されたモデルオブジェクトを関連オブジェクトセットから削除します。</target>
        </trans-unit>
        <trans-unit id="6610881a20538353e36867a2ed9aa1f28fc5e12f" translate="yes" xml:space="preserve">
          <source>Removes the specified model objects from the related object set:</source>
          <target state="translated">指定されたモデルオブジェクトを関連オブジェクトセットから削除します。</target>
        </trans-unit>
        <trans-unit id="1961a8967f8b64321eb56c162195eb92971034bc" translate="yes" xml:space="preserve">
          <source>Removes whitespace between HTML tags. This includes tab characters and newlines.</source>
          <target state="translated">HTML タグ間の空白を削除します。これにはタブ文字や改行も含まれます。</target>
        </trans-unit>
        <trans-unit id="b2d30e033b72a8383af6db3ec7bd4efc44e60ca6" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;Publication&lt;/code&gt; from an &lt;code&gt;Article&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Article&lt;/code&gt; からの &lt;code&gt;Publication&lt;/code&gt; 削除：</target>
        </trans-unit>
        <trans-unit id="2e3d5a442a032797ad5dab1a2ddaacf74d04f5e2" translate="yes" xml:space="preserve">
          <source>Removing characters that aren&amp;rsquo;t alphanumerics, underscores, hyphens, or whitespace.</source>
          <target state="translated">英数字、アンダースコア、ハイフン、空白以外の文字を削除する。</target>
        </trans-unit>
        <trans-unit id="a30eddecb1f5677d80a03c9dfba5fd63a8f10e58" translate="yes" xml:space="preserve">
          <source>Removing hardcoded URLs in templates</source>
          <target state="translated">テンプレート内のハードコードされたURLを削除する</target>
        </trans-unit>
        <trans-unit id="b672adfc502a3a7bc8c59d0116b92750211923a0" translate="yes" xml:space="preserve">
          <source>Removing leading and trailing whitespace.</source>
          <target state="translated">先頭と末尾の空白を削除します。</target>
        </trans-unit>
        <trans-unit id="032551ae5664470a7a647a557513f321a7dc28be" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;Referer&lt;/code&gt; header</source>
          <target state="translated">&lt;code&gt;Referer&lt;/code&gt; ヘッダーの削除</target>
        </trans-unit>
        <trans-unit id="824a4cd9f9aa4c63a483c0b59f733da307872142" translate="yes" xml:space="preserve">
          <source>Removing the &lt;code&gt;replaces&lt;/code&gt; attribute in the &lt;code&gt;Migration&lt;/code&gt; class of the squashed migration (this is how Django tells that it is a squashed migration).</source>
          <target state="translated">スカッシュされたマイグレーションの &lt;code&gt;Migration&lt;/code&gt; クラスの &lt;code&gt;replaces&lt;/code&gt; 属性を削除します（これは、Djangoがスカッシュされたマイグレーションであることを示す方法です）。</target>
        </trans-unit>
        <trans-unit id="e16c8c695b3ed89e3634a55288553edf77dd5c1e" translate="yes" xml:space="preserve">
          <source>Renames the model from an old name to a new one.</source>
          <target state="translated">古い名前のモデルを新しい名前に変更します。</target>
        </trans-unit>
        <trans-unit id="a04e0c7b4fa4bdb80660ca557601245947ce112f" translate="yes" xml:space="preserve">
          <source>Renames the model&amp;rsquo;s table from &lt;code&gt;old_db_table&lt;/code&gt; to &lt;code&gt;new_db_table&lt;/code&gt;.</source>
          <target state="translated">モデルのテーブルの &lt;code&gt;old_db_table&lt;/code&gt; を &lt;code&gt;new_db_table&lt;/code&gt; からnew_db_tableに変更します。</target>
        </trans-unit>
        <trans-unit id="25cb124c37629d3c4a84cfbc765066350d2fe0e0" translate="yes" xml:space="preserve">
          <source>Renaming the new table to match the original name</source>
          <target state="translated">新しいテーブルの名前を元の名前に合わせて変更する</target>
        </trans-unit>
        <trans-unit id="98e1a7f8c318c94539687d44fce9c7991dceee3e" translate="yes" xml:space="preserve">
          <source>Rendering a context</source>
          <target state="translated">コンテキストのレンダリング</target>
        </trans-unit>
        <trans-unit id="027bef23921d06a2497849839ca801dd4c87d805" translate="yes" xml:space="preserve">
          <source>Rendering a form in a template involves nearly the same work as rendering any other kind of object, but there are some key differences.</source>
          <target state="translated">テンプレート内のフォームをレンダリングする作業は、他の種類のオブジェクトをレンダリングするのとほぼ同じですが、いくつかの重要な違いがあります。</target>
        </trans-unit>
        <trans-unit id="136000babdea15be499c3f212dfc94b6c5f4f283" translate="yes" xml:space="preserve">
          <source>Rendering an attractive and easy-to-use Web form requires more than just HTML - it also requires CSS stylesheets, and if you want to use fancy &amp;ldquo;Web2.0&amp;rdquo; widgets, you may also need to include some JavaScript on each page. The exact combination of CSS and JavaScript that is required for any given page will depend upon the widgets that are in use on that page.</source>
          <target state="translated">魅力的で使いやすいWebフォームをレンダリングするには、HTMLだけでなくCSSスタイルシートも必要です。また、ファンシーな「Web2.0」ウィジェットを使用したい場合は、各ページにJavaScriptを含める必要がある場合もあります。特定のページに必要なCSSとJavaScriptの正確な組み合わせは、そのページで使用されているウィジェットによって異なります。</target>
        </trans-unit>
        <trans-unit id="5399393e62334e4b0ed76b7b53146225e05fee5d" translate="yes" xml:space="preserve">
          <source>Rendering fields manually</source>
          <target state="translated">フィールドを手動でレンダリングする</target>
        </trans-unit>
        <trans-unit id="5c5caac98fc85fed419cf5423872151e43434e24" translate="yes" xml:space="preserve">
          <source>Rendering form error messages</source>
          <target state="translated">フォームのエラーメッセージのレンダリング</target>
        </trans-unit>
        <trans-unit id="7905759ec4065d91065c48b72c65fe38138b580c" translate="yes" xml:space="preserve">
          <source>Renders a given template, with the context containing parameters captured in the URL.</source>
          <target state="translated">与えられたテンプレートを、URLにキャプチャされたパラメータを含むコンテキストでレンダリングします。</target>
        </trans-unit>
        <trans-unit id="ae753c436c489717d9fd3197ab51f2ea36d6fcdd" translate="yes" xml:space="preserve">
          <source>Renders a response using a context created with &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_context_data&quot;&gt;&lt;code&gt;get_context_data()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.views.generic.edit.FormMixin.get_context_data&quot;&gt; &lt;code&gt;get_context_data()&lt;/code&gt; で&lt;/a&gt;作成されたコンテキストを使用して応答をレンダリングします。</target>
        </trans-unit>
        <trans-unit id="16592f143c9b46e336ff00978991b5c9912c1755" translate="yes" xml:space="preserve">
          <source>Renders a response, providing the invalid form as context.</source>
          <target state="translated">レスポンスをレンダリングし、無効なフォームをコンテキストとして提供します。</target>
        </trans-unit>
        <trans-unit id="90af18eef3de255327d413547ce0410f46029052" translate="yes" xml:space="preserve">
          <source>Renders a widget to HTML using the given renderer. If &lt;code&gt;renderer&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the renderer from the &lt;a href=&quot;../settings#std:setting-FORM_RENDERER&quot;&gt;&lt;code&gt;FORM_RENDERER&lt;/code&gt;&lt;/a&gt; setting is used.</source>
          <target state="translated">指定されたレンダラーを使用してウィジェットをHTMLにレンダリングします。 &lt;code&gt;renderer&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;../settings#std:setting-FORM_RENDERER&quot;&gt; &lt;code&gt;FORM_RENDERER&lt;/code&gt; &lt;/a&gt;設定のレンダラーが使用されます。</target>
        </trans-unit>
        <trans-unit id="fa9134b57ad3286fb14a0ccb98988a3252c1b2fb" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">次のようにレンダリング： &lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f82973b7ac32fa2a8e47287cdd06b9580e0ed1a1" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;email&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">レンダリング： &lt;code&gt;&amp;lt;input type=&quot;email&quot; ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1e48ba21244665c1f446a827bbea0fa4ecce90e" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;file&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">次のようにレンダリング： &lt;code&gt;&amp;lt;input type=&quot;file&quot; ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55344549fc6b061a5279a22c7ca2abed4af75d18" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;file&quot; ...&amp;gt;&lt;/code&gt; with an additional checkbox input to clear the field&amp;rsquo;s value, if the field is not required and has initial data.</source>
          <target state="translated">&lt;code&gt;&amp;lt;input type=&quot;file&quot; ...&amp;gt;&lt;/code&gt; としてレンダリングされます。フィールドが不要で初期データがある場合、フィールドの値をクリアするための追加のチェックボックス入力が含まれます。</target>
        </trans-unit>
        <trans-unit id="84ef164d5bff9e43c06e0c2c1cfca531dfab120d" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;hidden&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">レンダリング： &lt;code&gt;&amp;lt;input type=&quot;hidden&quot; ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffba107edff202d0502dea7e7ec4ed96f8c63068" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;number&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">次のようにレンダリング： &lt;code&gt;&amp;lt;input type=&quot;number&quot; ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbad1dca40d839cee64f9796837dfc793ce00eb2" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;password&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">レンダリング： &lt;code&gt;&amp;lt;input type=&quot;password&quot; ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9fab9338cafc4508aa66ee4ea6af809ec0a44447" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;text&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">次のようにレンダリング： &lt;code&gt;&amp;lt;input type=&quot;text&quot; ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba0c7ef1b840a7c4e2b94ce7f468b5e525716480" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;input type=&quot;url&quot; ...&amp;gt;&lt;/code&gt;</source>
          <target state="translated">次のようにレンダリング： &lt;code&gt;&amp;lt;input type=&quot;url&quot; ...&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d03b2cdd83d03a4a5c974cfc3adf2c3e8839b12" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;select&amp;gt;&amp;lt;option ...&amp;gt;...&amp;lt;/select&amp;gt;&lt;/code&gt;</source>
          <target state="translated">次としてレンダリング： &lt;code&gt;&amp;lt;select&amp;gt;&amp;lt;option ...&amp;gt;...&amp;lt;/select&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d4c7a4636bfad48ebaf7226ecf51f860c337c36" translate="yes" xml:space="preserve">
          <source>Renders as: &lt;code&gt;&amp;lt;textarea&amp;gt;...&amp;lt;/textarea&amp;gt;&lt;/code&gt;</source>
          <target state="translated">次のようにレンダリング： &lt;code&gt;&amp;lt;textarea&amp;gt;...&amp;lt;/textarea&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbeba578a21f5b5a70755568096ad08238d25355" translate="yes" xml:space="preserve">
          <source>Renders as: multiple &lt;code&gt;&amp;lt;input type=&quot;hidden&quot; ...&amp;gt;&lt;/code&gt; tags</source>
          <target state="translated">レンダリング：複数の &lt;code&gt;&amp;lt;input type=&quot;hidden&quot; ...&amp;gt;&lt;/code&gt; タグ</target>
        </trans-unit>
        <trans-unit id="e0222918833e3787b3c65b0c621307ff6076b249" translate="yes" xml:space="preserve">
          <source>Renders the field by rendering the passed widget, adding any HTML attributes passed as &lt;code&gt;attrs&lt;/code&gt;. If no widget is specified, then the field&amp;rsquo;s default widget will be used.</source>
          <target state="translated">渡されたウィジェットをレンダリングし、 &lt;code&gt;attrs&lt;/code&gt; として渡されたHTML属性を追加して、フィールドをレンダリングします。ウィジェットが指定されていない場合、フィールドのデフォルトのウィジェットが使用されます。</target>
        </trans-unit>
        <trans-unit id="a8614be2b1273e22dcae1bc31f1609ad35bee133" translate="yes" xml:space="preserve">
          <source>Renders this template with a given context.</source>
          <target state="translated">与えられたコンテキストでこのテンプレートをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="9271a15cfc5fcc700b391cb86963e91246c1a9e8" translate="yes" xml:space="preserve">
          <source>Replace the set of related objects.</source>
          <target state="translated">関連するオブジェクトの集合を置換します。</target>
        </trans-unit>
        <trans-unit id="2bc74cf3f9dbe78eaad4942681935fa66409f0dd" translate="yes" xml:space="preserve">
          <source>Replace the set of related objects:</source>
          <target state="translated">関連するオブジェクトの集合を置換します。</target>
        </trans-unit>
        <trans-unit id="6e0d73009aa12f5c9ccad864726c2702b9ce217c" translate="yes" xml:space="preserve">
          <source>Replaces all occurrences of &lt;code&gt;text&lt;/code&gt; with &lt;code&gt;replacement&lt;/code&gt; in &lt;code&gt;expression&lt;/code&gt;. The default replacement text is the empty string. The arguments to the function are case-sensitive.</source>
          <target state="translated">出現するすべての &lt;code&gt;text&lt;/code&gt; を &lt;code&gt;expression&lt;/code&gt; の &lt;code&gt;replacement&lt;/code&gt; で置き換えます。デフォルトの置換テキストは空の文字列です。関数の引数では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="4f672cf5e8b9f8a1ecfc7b749bdade5fc14ba9fd" translate="yes" xml:space="preserve">
          <source>Replaces line breaks in plain text with appropriate HTML; a single newline becomes an HTML line break (&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;) and a new line followed by a blank line becomes a paragraph break (&lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">プレーンテキストの改行を適切なHTMLに置き換えます。単一の改行はHTMLの改行（ &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; ）になり、空白行が続く改行は段落の改行（ &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; ）になります。</target>
        </trans-unit>
        <trans-unit id="d7de53ab13c0395d4a7babbd2e27a410a6cb4d2a" translate="yes" xml:space="preserve">
          <source>Replacing any whitespace or repeated dashes with single dashes.</source>
          <target state="translated">空白や繰り返しのダッシュを1つのダッシュで置き換えます。</target>
        </trans-unit>
        <trans-unit id="9da41ef4783943cc20f027ff0b080b869ef03892" translate="yes" xml:space="preserve">
          <source>Report bugs with Django in our &lt;a href=&quot;https://code.djangoproject.com/&quot;&gt;ticket tracker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://code.djangoproject.com/&quot;&gt;チケットトラッカー&lt;/a&gt;でDjangoのバグを報告してください。</target>
        </trans-unit>
        <trans-unit id="cabe8b7cbd36261e537bd2f96894acc0ba19e91e" translate="yes" xml:space="preserve">
          <source>ReportLab is not thread-safe. Some of our users have reported odd issues with building PDF-generating Django views that are accessed by many people at the same time.</source>
          <target state="translated">ReportLab はスレッドセーフではありません。一部のユーザーからは、多くの人が同時にアクセスする PDF 生成 Django ビューの構築に関する奇妙な問題が報告されています。</target>
        </trans-unit>
        <trans-unit id="454bbc05efdd703764976d8e54a1b14b371e6f97" translate="yes" xml:space="preserve">
          <source>Representation of the model, returns &lt;code&gt;app_label.model_name&lt;/code&gt;, e.g. &lt;code&gt;'polls.question'&lt;/code&gt;.</source>
          <target state="translated">モデルの &lt;code&gt;app_label.model_name&lt;/code&gt; 返します（例： &lt;code&gt;'polls.question'&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="76e8edfcf5f55bad8b5c8cad8279d89aa02200a9" translate="yes" xml:space="preserve">
          <source>Representation of the object, returns &lt;code&gt;app_label.object_name&lt;/code&gt;, e.g. &lt;code&gt;'polls.Question'&lt;/code&gt;.</source>
          <target state="translated">オブジェクトの &lt;code&gt;app_label.object_name&lt;/code&gt; 返します（例： &lt;code&gt;'polls.Question'&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="fe9e3232b59e4eda049a9874e7389108e2396b58" translate="yes" xml:space="preserve">
          <source>Represents a coordinate system transform. It is initialized with two &lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt;, representing the source and target coordinate systems, respectively. These objects should be used when performing the same coordinate transformation repeatedly on different geometries:</source>
          <target state="translated">座標系変換を表します。ソースとターゲットの座標系をそれぞれ表す2つの&lt;a href=&quot;#django.contrib.gis.gdal.SpatialReference&quot;&gt; &lt;code&gt;SpatialReference&lt;/code&gt; &lt;/a&gt;で初期化されます。これらのオブジェクトは、異なるジオメトリで同じ座標変換を繰り返し実行するときに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="912bd34dfdba19e2c0c74db8804d0b099f03785e" translate="yes" xml:space="preserve">
          <source>Represents an OGR Envelope structure that contains the minimum and maximum X, Y coordinates for a rectangle bounding box. The naming of the variables is compatible with the OGR Envelope C structure.</source>
          <target state="translated">OGR Envelope構造体を表し、矩形の外接箱のX,Y座標の最小値と最大値を格納します。変数の命名は、OGR Envelope C構造体と互換性があります。</target>
        </trans-unit>
        <trans-unit id="f6eaf1b4ae6a6b72685a059f396297ca22755171" translate="yes" xml:space="preserve">
          <source>Represents an RSS enclosure</source>
          <target state="translated">RSSの囲みを表します。</target>
        </trans-unit>
        <trans-unit id="6db08503ac83e133821e3bcbd14353d8ec92d4c5" translate="yes" xml:space="preserve">
          <source>Represents the name of a language. Browsers send the names of the languages they accept in the &lt;code&gt;Accept-Language&lt;/code&gt; HTTP header using this format. Examples: &lt;code&gt;it&lt;/code&gt;, &lt;code&gt;de-at&lt;/code&gt;, &lt;code&gt;es&lt;/code&gt;, &lt;code&gt;pt-br&lt;/code&gt;. Language codes are generally represented in lowercase, but the HTTP &lt;code&gt;Accept-Language&lt;/code&gt; header is case-insensitive. The separator is a dash.</source>
          <target state="translated">言語の名前を表します。ブラウザは、この形式を使用して &lt;code&gt;Accept-Language&lt;/code&gt; HTTPヘッダーで受け入れる言語の名前を送信します。例： &lt;code&gt;it&lt;/code&gt; 、 &lt;code&gt;de-at&lt;/code&gt; 、 &lt;code&gt;es&lt;/code&gt; 、 &lt;code&gt;pt-br&lt;/code&gt; 。言語コードは通常小文字で表されますが、HTTP &lt;code&gt;Accept-Language&lt;/code&gt; ヘッダーは大文字と小文字を区別しません。区切り文字はダッシュです。</target>
        </trans-unit>
        <trans-unit id="0da6b0616d139307f3ef0f7c30d257b1b3196c91" translate="yes" xml:space="preserve">
          <source>Request and response objects</source>
          <target state="translated">リクエストオブジェクトとレスポンスオブジェクト</target>
        </trans-unit>
        <trans-unit id="fc1c72bff89a681d6557489cf4844ca376896d28" translate="yes" xml:space="preserve">
          <source>Request/response signals</source>
          <target state="translated">リクエスト/レスポンス信号</target>
        </trans-unit>
        <trans-unit id="189351e8eaeefafdc539f6bd7e3fb3418346b9fb" translate="yes" xml:space="preserve">
          <source>Requests beginning with &lt;code&gt;/secret/&lt;/code&gt; will now require a user to authenticate.</source>
          <target state="translated">&lt;code&gt;/secret/&lt;/code&gt; 始まるリクエストでは、ユーザーの認証が必要になります。</target>
        </trans-unit>
        <trans-unit id="1b5f5cf68c3ad7b4e7d378f07c1f993b95fec1fb" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;/secret/&lt;/code&gt; will now also require user to be a member of the &amp;ldquo;secret-agents&amp;rdquo; group.</source>
          <target state="translated">&lt;code&gt;/secret/&lt;/code&gt; リクエストでも、ユーザーは「secret-agents」グループのメンバーである必要があります。</target>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="translated">Required</target>
        </trans-unit>
        <trans-unit id="2a20547ac129608d96c2abd4e71c2c3c752a1a65" translate="yes" xml:space="preserve">
          <source>Required Reading</source>
          <target state="translated">必読</target>
        </trans-unit>
        <trans-unit id="9373cb02a682b7d98a6af6ab7efc1d309c55e47e" translate="yes" xml:space="preserve">
          <source>Required argument. Needs to be a string.</source>
          <target state="translated">必須引数です。文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="063bc1d47f6d34d8950e45fa10a77dcb9a83430a" translate="yes" xml:space="preserve">
          <source>Required arguments</source>
          <target state="translated">必要な引数</target>
        </trans-unit>
        <trans-unit id="4fd8ecc238687099c308060e8703f3437d058c4b" translate="yes" xml:space="preserve">
          <source>Required keyword arguments are:</source>
          <target state="translated">必須のキーワード引数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="672ad5346d62dd6eb67f727712f3a58da5a155d2" translate="yes" xml:space="preserve">
          <source>Required methods</source>
          <target state="translated">必要なメソッド</target>
        </trans-unit>
        <trans-unit id="92dab952894db35e5f1aa3df870f6e3a7dc59dce" translate="yes" xml:space="preserve">
          <source>Required. 100 characters or fewer. Example: &lt;code&gt;'can_vote'&lt;/code&gt;.</source>
          <target state="translated">必須。100文字以下。例： &lt;code&gt;'can_vote'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae8db7e96a1366fc21d1dd698986d1c2b93fe8b6" translate="yes" xml:space="preserve">
          <source>Required. 150 characters or fewer. Any characters are permitted. Example: &lt;code&gt;'Awesome Users'&lt;/code&gt;.</source>
          <target state="translated">必須。150文字以下。任意の文字が許可されています。例： &lt;code&gt;'Awesome Users'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49495c2ed09a73a61954db6d00f0d62617ecf621" translate="yes" xml:space="preserve">
          <source>Required. 150 characters or fewer. Usernames may contain alphanumeric, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; characters.</source>
          <target state="translated">必須。150文字以下。ユーザー名には、英数字、 &lt;code&gt;_&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;.&lt;/code&gt; を含めることができます。および &lt;code&gt;-&lt;/code&gt; 文字。</target>
        </trans-unit>
        <trans-unit id="90a597a0bce7f0a7cba1f19322f3893c98ae3f09" translate="yes" xml:space="preserve">
          <source>Required. 255 characters or fewer. Example: &lt;code&gt;'Can vote'&lt;/code&gt;.</source>
          <target state="translated">必須。255文字以下。例： &lt;code&gt;'Can vote'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f57b9b99ec411ac9c3993a29d9bb2c4fd279cc8" translate="yes" xml:space="preserve">
          <source>Required. A hash of, and metadata about, the password. (Django doesn&amp;rsquo;t store the raw password.) Raw passwords can be arbitrarily long and can contain any character. See the &lt;a href=&quot;../../topics/auth/passwords&quot;&gt;password documentation&lt;/a&gt;.</source>
          <target state="translated">必須。パスワードのハッシュとメタデータ。（Djangoは未加工のパスワードを保存しません。）未加工のパスワードは任意の長さにすることができ、任意の文字を含めることができます。&lt;a href=&quot;../../topics/auth/passwords&quot;&gt;パスワードのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7898e9cfac0ed2099777c23c5aedcdf673333f28" translate="yes" xml:space="preserve">
          <source>Required. A list, tuple, &lt;code&gt;QuerySet&lt;/code&gt;, or other sliceable object with a &lt;code&gt;count()&lt;/code&gt; or &lt;code&gt;__len__()&lt;/code&gt; method. For consistent pagination, &lt;code&gt;QuerySet&lt;/code&gt;s should be ordered, e.g. with an &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; clause or with a default &lt;a href=&quot;models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; on the model.</source>
          <target state="translated">必須。リスト、タプル、 &lt;code&gt;QuerySet&lt;/code&gt; を持つ、または他のスライス可能なオブジェクト &lt;code&gt;count()&lt;/code&gt; または &lt;code&gt;__len__()&lt;/code&gt; メソッド。一貫性のあるページ分割を行うには、 &lt;code&gt;QuerySet&lt;/code&gt; を順序付けする必要があります。たとえば、&lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;句を使用するか、モデルのデフォルトの&lt;a href=&quot;models/options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="94811d0096e8b0c7d398bb9f23f7b39e64b05e15" translate="yes" xml:space="preserve">
          <source>Required. A reference to the &lt;code&gt;django_content_type&lt;/code&gt; database table, which contains a record for each installed model.</source>
          <target state="translated">必須。インストールされている各モデルのレコードが含まれている &lt;code&gt;django_content_type&lt;/code&gt; データベーステーブルへの参照。</target>
        </trans-unit>
        <trans-unit id="5445ec505863ce23d459709bb104249b07dfae2d" translate="yes" xml:space="preserve">
          <source>Required. The absolute filesystem path to a directory from which this &lt;a href=&quot;#django.db.models.FilePathField&quot;&gt;&lt;code&gt;FilePathField&lt;/code&gt;&lt;/a&gt; should get its choices. Example: &lt;code&gt;&quot;/home/images&quot;&lt;/code&gt;.</source>
          <target state="translated">必須。この&lt;a href=&quot;#django.db.models.FilePathField&quot;&gt; &lt;code&gt;FilePathField&lt;/code&gt; &lt;/a&gt;が選択肢を取得するディレクトリへの絶対ファイルシステムパス。例： &lt;code&gt;&quot;/home/images&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79b14d7e4905d0b352dc758f5c4a8bb7a4a85d40" translate="yes" xml:space="preserve">
          <source>Required. The maximum number of items to include on a page, not including orphans (see the &lt;a href=&quot;#django.core.paginator.Paginator.orphans&quot;&gt;&lt;code&gt;orphans&lt;/code&gt;&lt;/a&gt; optional argument below).</source>
          <target state="translated">必須。孤立を含まない、ページに含めるアイテムの最大数（以下の&lt;a href=&quot;#django.core.paginator.Paginator.orphans&quot;&gt; &lt;code&gt;orphans&lt;/code&gt; &lt;/a&gt;オプション引数を参照）。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="01479ee677c5bed4a751195a875379f475cac353" translate="yes" xml:space="preserve">
          <source>Requires &lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja2&lt;/a&gt; to be installed:</source>
          <target state="translated">&lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja2&lt;/a&gt;をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="7e58f0d21fcebacdc046a1f42d094f5641a1a4d7" translate="yes" xml:space="preserve">
          <source>Requires &lt;a href=&quot;https://jinja.palletsprojects.com/&quot;&gt;Jinja2&lt;/a&gt; to be installed:</source>
          <target state="translated">Requires &lt;a href=&quot;https://jinja.palletsprojects.com/&quot;&gt;Jinja2&lt;/a&gt; to be installed:</target>
        </trans-unit>
        <trans-unit id="6ea2019b402d30d69ea2961444c9aabfa03dd383" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;gettext&lt;/code&gt; 0.19 or newer.</source>
          <target state="translated">&lt;code&gt;gettext&lt;/code&gt; 0.19以降が必要です。</target>
        </trans-unit>
        <trans-unit id="61689b4cf61f94a300e95b848e1318780f5da6eb" translate="yes" xml:space="preserve">
          <source>Requires PostGIS.</source>
          <target state="translated">PostGISが必要です。</target>
        </trans-unit>
        <trans-unit id="31477357aed10831acdc4c0ea9afc4b1767ae2b5" translate="yes" xml:space="preserve">
          <source>Requires SpatiaLite 4.3+</source>
          <target state="translated">SpatiaLite 4.3+が必要です。</target>
        </trans-unit>
        <trans-unit id="05fda19811cc2cbc0b8d6196e7d61758a202c153" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;#auth&quot;&gt;auth&lt;/a&gt; and &lt;a href=&quot;#contenttypes&quot;&gt;contenttypes&lt;/a&gt; contrib packages to be installed.</source>
          <target state="translated">&lt;a href=&quot;#auth&quot;&gt;auth&lt;/a&gt;および&lt;a href=&quot;#contenttypes&quot;&gt;contenttypes&lt;/a&gt; contribパッケージをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="3782dd60524c764b86c32c3f276c579c1518410a" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;#sites&quot;&gt;sites&lt;/a&gt; contrib package to be installed as well.</source>
          <target state="translated">&lt;a href=&quot;#sites&quot;&gt;サイトの&lt;/a&gt; contribパッケージもインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="c94bbd4d18cd346ada4be005be4f2729399e93fe" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;https://pillow.readthedocs.io/en/latest/&quot;&gt;Pillow&lt;/a&gt; library.</source>
          <target state="translated">&lt;a href=&quot;https://pillow.readthedocs.io/en/latest/&quot;&gt;枕&lt;/a&gt;ライブラリが必要です。</target>
        </trans-unit>
        <trans-unit id="2dec7f55dc3f3c93210924451f5e5bd0cb433039" translate="yes" xml:space="preserve">
          <source>Requires the app registry to be fully populated unless the &lt;code&gt;require_ready&lt;/code&gt; argument is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require_ready&lt;/code&gt; 引数が &lt;code&gt;False&lt;/code&gt; に設定されていない限り、アプリレジストリに完全に入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c0363dae913924071cb62b890c1d088b5c47599" translate="yes" xml:space="preserve">
          <source>Requires the app registry to be fully populated unless the &lt;code&gt;require_ready&lt;/code&gt; argument is set to &lt;code&gt;False&lt;/code&gt;. &lt;code&gt;require_ready&lt;/code&gt; behaves exactly as in &lt;a href=&quot;#django.apps.apps.get_model&quot;&gt;&lt;code&gt;apps.get_model()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;require_ready&lt;/code&gt; 引数が &lt;code&gt;False&lt;/code&gt; に設定されていない限り、アプリレジストリに完全に入力する必要があります。 &lt;code&gt;require_ready&lt;/code&gt; は、&lt;a href=&quot;#django.apps.apps.get_model&quot;&gt; &lt;code&gt;apps.get_model()&lt;/code&gt; と&lt;/a&gt;まったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="202974d9ba6aa4b490cf83a204e99d0d3662fdb9" translate="yes" xml:space="preserve">
          <source>Requires the app registry to be fully populated.</source>
          <target state="translated">アプリのレジストリが完全に入力されている必要があります。</target>
        </trans-unit>
        <trans-unit id="a0a7a23208ed2ca6b5bcda4a44cb765ab55c5f0e" translate="yes" xml:space="preserve">
          <source>Resets a previous &lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt; so that it restarts from its first item at its next encounter. Without arguments, &lt;code&gt;{% resetcycle %}&lt;/code&gt; will reset the last &lt;code&gt;{% cycle %}&lt;/code&gt; defined in the template.</source>
          <target state="translated">前の&lt;a href=&quot;#cycle&quot;&gt;サイクルを&lt;/a&gt;リセットして、次の遭遇時に最初のアイテムから再開するようにします。引数がない場合、 &lt;code&gt;{% resetcycle %}&lt;/code&gt; は、テンプレートで定義されている最後の &lt;code&gt;{% cycle %}&lt;/code&gt; をリセットします。</target>
        </trans-unit>
        <trans-unit id="c70a410f32fa60ab589188f741673774db14cbfa" translate="yes" xml:space="preserve">
          <source>Resets the counter used to generate unique savepoint IDs.</source>
          <target state="translated">一意のセーブポイントIDを生成するために使用されるカウンタをリセットします。</target>
        </trans-unit>
        <trans-unit id="2b56a752feec47aa262bcc7283634671804beeba" translate="yes" xml:space="preserve">
          <source>Resetting the database to a known state at the beginning of each test to ease testing and using the ORM.</source>
          <target state="translated">各テストの最初にデータベースを既知の状態にリセットすることで、テストを容易にし、ORMを使用することができます。</target>
        </trans-unit>
        <trans-unit id="125530f0717509e49abc4243e581e7e7b86fe61c" translate="yes" xml:space="preserve">
          <source>Resolve any deprecation warnings with your current version of Django before continuing the upgrade process.</source>
          <target state="translated">アップグレードプロセスを続ける前に、現在のバージョンの Django で非推奨の警告を解決してください。</target>
        </trans-unit>
        <trans-unit id="c2261b50edb72eb78e13028f969cad71ee998c80" translate="yes" xml:space="preserve">
          <source>Resolves the template instance to use for rendering. Accepts a backend-dependent template object (such as those returned by &lt;a href=&quot;../topics/templates#django.template.loader.get_template&quot;&gt;&lt;code&gt;get_template()&lt;/code&gt;&lt;/a&gt;), the name of a template, or a list of template names.</source>
          <target state="translated">レンダリングに使用するテンプレートインスタンスを解決します。バックエンドに依存するテンプレートオブジェクト（&lt;a href=&quot;../topics/templates#django.template.loader.get_template&quot;&gt; &lt;code&gt;get_template()&lt;/code&gt; &lt;/a&gt;によって返されるものなど）、テンプレートの名前、またはテンプレート名のリストを受け入れます。</target>
        </trans-unit>
        <trans-unit id="81c30e209ac2a757ff481fd44acf2d0c0d35f091" translate="yes" xml:space="preserve">
          <source>Resolving deprecation warnings</source>
          <target state="translated">非推奨の警告の解決</target>
        </trans-unit>
        <trans-unit id="a4554ddb33e4f5d0cc8ff3c69c9e14fd701dea6c" translate="yes" xml:space="preserve">
          <source>Responsible for producing the query string and parameters for the expression. The &lt;code&gt;compiler&lt;/code&gt; is an &lt;code&gt;SQLCompiler&lt;/code&gt; object, which has a &lt;code&gt;compile()&lt;/code&gt; method that can be used to compile other expressions. The &lt;code&gt;connection&lt;/code&gt; is the connection used to execute the query.</source>
          <target state="translated">式のクエリ文字列とパラメータを生成します。 &lt;code&gt;compiler&lt;/code&gt; ある &lt;code&gt;SQLCompiler&lt;/code&gt; を有するオブジェクト、 &lt;code&gt;compile()&lt;/code&gt; 他の式をコンパイルするために使用することができる方法。 &lt;code&gt;connection&lt;/code&gt; 、クエリを実行するために使用される接続です。</target>
        </trans-unit>
        <trans-unit id="15cda354481fab99d23a71ef74e49c915e603ddd" translate="yes" xml:space="preserve">
          <source>Responsible for returning the list of columns references by this expression. &lt;code&gt;get_group_by_cols()&lt;/code&gt; should be called on any nested expressions. &lt;code&gt;F()&lt;/code&gt; objects, in particular, hold a reference to a column. The &lt;code&gt;alias&lt;/code&gt; parameter will be &lt;code&gt;None&lt;/code&gt; unless the expression has been annotated and is used for grouping.</source>
          <target state="translated">この式による列参照のリストを返す責任があります。 &lt;code&gt;get_group_by_cols()&lt;/code&gt; は、ネストされた式で呼び出す必要があります。特に、 &lt;code&gt;F()&lt;/code&gt; オブジェクトは列への参照を保持します。 &lt;code&gt;alias&lt;/code&gt; パラメータができなくなります &lt;code&gt;None&lt;/code&gt; 式が注釈を付けたとグループ化するために使用されていない限り。</target>
        </trans-unit>
        <trans-unit id="d16dd54844e73220400176772b3e81df81f1c5bc" translate="yes" xml:space="preserve">
          <source>Restaurant.objects.all() returns the Restaurants, not the Places. Note that there are two restaurants - Ace Hardware the Restaurant was created in the call to r.place = p2:</source>
          <target state="translated">Restaurant.objects.all()はレストランを返しますが、場所は返しません。レストランは2つあることに注意してください-Ace Hardwareレストランはr.place=p2の呼び出しで作成されました。</target>
        </trans-unit>
        <trans-unit id="c986890c5d7176db9450afbdeb5648bfebfdc0aa" translate="yes" xml:space="preserve">
          <source>Restores the pre-test environment.</source>
          <target state="translated">テスト前の環境を復元します。</target>
        </trans-unit>
        <trans-unit id="2678185382b6889ba038d7918ae2f5e0aa506742" translate="yes" xml:space="preserve">
          <source>Restrictions on PostgreSQL</source>
          <target state="translated">PostgreSQLの制限</target>
        </trans-unit>
        <trans-unit id="b5a81964500ab947d9006dffa252591003edf269" translate="yes" xml:space="preserve">
          <source>Restrictions on SQLite</source>
          <target state="translated">SQLiteの制限</target>
        </trans-unit>
        <trans-unit id="3f5e25c425d8bb83db2e1872ce15e7f20ecba5e3" translate="yes" xml:space="preserve">
          <source>Restrictions on operators.</source>
          <target state="translated">事業者の制限。</target>
        </trans-unit>
        <trans-unit id="2dddb9e7eacbe3771905f0ade00ac4e71b37ba20" translate="yes" xml:space="preserve">
          <source>Result from &lt;code&gt;flatten()&lt;/code&gt; can be useful in unit tests to compare &lt;code&gt;Context&lt;/code&gt; against &lt;code&gt;dict&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;flatten()&lt;/code&gt; の結果は、単体テストで &lt;code&gt;Context&lt;/code&gt; と &lt;code&gt;dict&lt;/code&gt; を比較するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d34039137848b54504eb0a3fa43cc38fc03285b4" translate="yes" xml:space="preserve">
          <source>Retrieve a single field instance of a model by name</source>
          <target state="translated">モデルの単一フィールドインスタンスを名前で取得する</target>
        </trans-unit>
        <trans-unit id="cac5ade0b4280c04f07f433adb98aa53f8667b29" translate="yes" xml:space="preserve">
          <source>Retrieve all field instances of a model</source>
          <target state="translated">モデルのすべてのフィールドインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="bb15fc8bcba8a9e4be4fad291a5a5da5ee0f7ebd" translate="yes" xml:space="preserve">
          <source>Retrieve everything at once if you know you will need it</source>
          <target state="translated">必要になるとわかっている場合は、一度にすべてのものを取得します。</target>
        </trans-unit>
        <trans-unit id="5b537573b41579adb8a7e7da0366a045f04c0246" translate="yes" xml:space="preserve">
          <source>Retrieve individual objects using a unique, indexed column</source>
          <target state="translated">一意のインデックス付きカラムを使用して、個々のオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="a6a045442db3a85b73bb9f0ff19e169c752f3b12" translate="yes" xml:space="preserve">
          <source>Retrieve initial data for the form. By default, returns a copy of &lt;a href=&quot;#django.views.generic.edit.FormMixin.initial&quot;&gt;&lt;code&gt;initial&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォームの初期データを取得します。デフォルトでは、&lt;a href=&quot;#django.views.generic.edit.FormMixin.initial&quot;&gt; &lt;code&gt;initial&lt;/code&gt; &lt;/a&gt;コピーを返します。</target>
        </trans-unit>
        <trans-unit id="e83b11fb627f0023cfb79c29c2adea58658712b7" translate="yes" xml:space="preserve">
          <source>Retrieve the form class to instantiate. By default &lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インスタンス化するフォームクラスを取得します。デフォルトでは&lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9235d63e9c2f677e55364cdced160a4f10016b84" translate="yes" xml:space="preserve">
          <source>Retrieve the form class to instantiate. If &lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt;&lt;code&gt;form_class&lt;/code&gt;&lt;/a&gt; is provided, that class will be used. Otherwise, a &lt;code&gt;ModelForm&lt;/code&gt; will be instantiated using the model associated with the &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt;&lt;code&gt;queryset&lt;/code&gt;&lt;/a&gt;, or with the &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt;, depending on which attribute is provided.</source>
          <target state="translated">インスタンス化するフォームクラスを取得します。場合&lt;a href=&quot;#django.views.generic.edit.FormMixin.form_class&quot;&gt; &lt;code&gt;form_class&lt;/code&gt; が&lt;/a&gt;提供され、そのクラスが使用されます。そうでなければ、 &lt;code&gt;ModelForm&lt;/code&gt; サブクラスは、関連付けられたモデルを使用してインスタンス化される&lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt; &lt;code&gt;queryset&lt;/code&gt; &lt;/a&gt;、または有する&lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.model&quot;&gt; &lt;code&gt;model&lt;/code&gt; &lt;/a&gt;属性が提供されるかに応じて、。</target>
        </trans-unit>
        <trans-unit id="5bee26f317df2d0d6e8066d0e7a67fbab7d1d8ef" translate="yes" xml:space="preserve">
          <source>Retrieves a user instance using the contents of the field nominated by &lt;code&gt;USERNAME_FIELD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;USERNAME_FIELD&lt;/code&gt; で指定されたフィールドの内容を使用してユーザーインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="93eb4e34a04c1ba17168d9f9b3967288255bc3ec" translate="yes" xml:space="preserve">
          <source>Retrieves the target object and calls its &lt;code&gt;delete()&lt;/code&gt; method, then redirects to the success URL.</source>
          <target state="translated">ターゲットオブジェクトを取得し、その &lt;code&gt;delete()&lt;/code&gt; メソッドを呼び出して、成功URLにリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="04b3e7413ea116dec7cf2aae8bc9af8715d483f9" translate="yes" xml:space="preserve">
          <source>Retrieving a single field instance of a model by name</source>
          <target state="translated">モデルの単一フィールドインスタンスを名前で取得する</target>
        </trans-unit>
        <trans-unit id="72c7275ac9b596bcc4a9fb3dc7f550ecebd02c9d" translate="yes" xml:space="preserve">
          <source>Retrieving a single object with &lt;code&gt;get()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;get()&lt;/code&gt; を使用して単一のオブジェクトを取得する</target>
        </trans-unit>
        <trans-unit id="f1f0375bda8b13d9b12e176b9110fb61f50ee89f" translate="yes" xml:space="preserve">
          <source>Retrieving all field instances of a model</source>
          <target state="translated">モデルのすべてのフィールドインスタンスを取得する</target>
        </trans-unit>
        <trans-unit id="22df6c96c919d965e91c8e08d508fd3114d1912f" translate="yes" xml:space="preserve">
          <source>Retrieving all objects</source>
          <target state="translated">すべてのオブジェクトの取得</target>
        </trans-unit>
        <trans-unit id="ee3d1e28b2e16520160eba770204e9d1ade821d9" translate="yes" xml:space="preserve">
          <source>Retrieving objects</source>
          <target state="translated">オブジェクトの取得</target>
        </trans-unit>
        <trans-unit id="34e4d6095c00da0d7f4134f9ed3559a7b808d12d" translate="yes" xml:space="preserve">
          <source>Retrieving specific objects with filters</source>
          <target state="translated">フィルタを使用した特定のオブジェクトの取得</target>
        </trans-unit>
        <trans-unit id="020879717215eb03d46aabe78b325c366a9e211f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;None&lt;/code&gt; from &lt;code&gt;receive_data_chunk&lt;/code&gt; to short-circuit remaining upload handlers from getting this chunk. This is useful if you&amp;rsquo;re storing the uploaded data yourself and don&amp;rsquo;t want future handlers to store a copy of the data.</source>
          <target state="translated">&lt;code&gt;receive_data_chunk&lt;/code&gt; から &lt;code&gt;None&lt;/code&gt; を返し、残りのアップロードハンドラがこのチャンクを取得しないようにします。これは、アップロードしたデータを自分で保存し、将来のハンドラーにデータのコピーを保存させたくない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="95f646cd13a1799a748d9cea77d6d0e67a5669c2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;None&lt;/code&gt; if you want upload handling to continue, or a tuple of &lt;code&gt;(POST, FILES)&lt;/code&gt; if you want to return the new data structures suitable for the request directly.</source>
          <target state="translated">戻り値 &lt;code&gt;None&lt;/code&gt; あなたが継続して取り扱い、アップロードしたい場合、またはのタプル &lt;code&gt;(POST, FILES)&lt;/code&gt; あなたが直接要求に適した新しいデータ構造を返すようにしたい場合。</target>
        </trans-unit>
        <trans-unit id="b560a1b538008b47e50eacf79eff6943ef3c8355" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if a relation between &lt;code&gt;obj1&lt;/code&gt; and &lt;code&gt;obj2&lt;/code&gt; should be allowed, &lt;code&gt;False&lt;/code&gt; if the relation should be prevented, or &lt;code&gt;None&lt;/code&gt; if the router has no opinion. This is purely a validation operation, used by foreign key and many to many operations to determine if a relation should be allowed between two objects.</source>
          <target state="translated">&lt;code&gt;obj1&lt;/code&gt; と &lt;code&gt;obj2&lt;/code&gt; の間の関係を許可する必要がある場合は &lt;code&gt;True&lt;/code&gt; を返し、関係を防止する必要がある場合は &lt;code&gt;False&lt;/code&gt; を返し、ルーターに意見がない場合は &lt;code&gt;None&lt;/code&gt; を返します。これは純粋に検証操作であり、2つのオブジェクト間の関係を許可するかどうかを決定するために、外部キーや多対多の操作で使用されます。</target>
        </trans-unit>
        <trans-unit id="fab978b759c57af0ed40cc56475b7681b7cbc90d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;value&lt;/code&gt; as a string to be rendered in HTML.</source>
          <target state="translated">Return &lt;code&gt;value&lt;/code&gt; as a string to be rendered in HTML.</target>
        </trans-unit>
        <trans-unit id="1b5deb61fd1a95ed0ba182d1b91967b9740ff384" translate="yes" xml:space="preserve">
          <source>Return HTML version of exception report.</source>
          <target state="translated">例外レポートのHTML版を返します。</target>
        </trans-unit>
        <trans-unit id="5f6074419c85f0673cf502ba596e74538dabfb05" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;dict&lt;/code&gt; of attributes to add to each item (&lt;code&gt;item&lt;/code&gt;/&lt;code&gt;entry&lt;/code&gt;) element. The argument, &lt;code&gt;item&lt;/code&gt;, is a dictionary of all the data passed to &lt;code&gt;SyndicationFeed.add_item()&lt;/code&gt;.</source>
          <target state="translated">各項目（ &lt;code&gt;item&lt;/code&gt; / &lt;code&gt;entry&lt;/code&gt; ）要素に追加する属性の &lt;code&gt;dict&lt;/code&gt; を返します。引数 &lt;code&gt;item&lt;/code&gt; は、 &lt;code&gt;SyndicationFeed.add_item()&lt;/code&gt; に渡されるすべてのデータの辞書です。</target>
        </trans-unit>
        <trans-unit id="630a9ad67b707660094ca2dcb83a172b61ba1ea1" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;dict&lt;/code&gt; of attributes to add to the root feed element (&lt;code&gt;feed&lt;/code&gt;/&lt;code&gt;channel&lt;/code&gt;).</source>
          <target state="translated">ルートフィード要素（ &lt;code&gt;feed&lt;/code&gt; / &lt;code&gt;channel&lt;/code&gt; ）に追加する属性の &lt;code&gt;dict&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4e8b260f3e770ab44f7581128c3be0648454e6e1" translate="yes" xml:space="preserve">
          <source>Return a boolean specifying whether to display the page if no objects are available. If this method returns &lt;code&gt;False&lt;/code&gt; and no objects are available, the view will raise a 404 instead of displaying an empty page. By default, this is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">使用可能なオブジェクトがない場合にページを表示するかどうかを指定するブール値を返します。このメソッドが &lt;code&gt;False&lt;/code&gt; を返し、使用可能なオブジェクトがない場合、ビューは空のページを表示する代わりに404を発生させます。デフォルトでは、これは &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4fcdd48bc87f30481097cf6d89ba40dc9644f309" translate="yes" xml:space="preserve">
          <source>Return a dictionary containing traceback information.</source>
          <target state="translated">トレースバック情報を含む辞書を返します。</target>
        </trans-unit>
        <trans-unit id="1ef096e638a6b41f12723c0d12984666d276a0f8" translate="yes" xml:space="preserve">
          <source>Return extra attributes to place on each item (i.e. item/entry) element.</source>
          <target state="translated">各項目 (すなわち item/entry)要素に配置するための追加属性を返します。</target>
        </trans-unit>
        <trans-unit id="fa364780ba6e0f3ea03043b52597cb0fa34b82f2" translate="yes" xml:space="preserve">
          <source>Return extra attributes to place on the root (i.e. feed/channel) element. Called from &lt;code&gt;write()&lt;/code&gt;.</source>
          <target state="translated">ルート（フィード/チャネル）要素に配置する追加の属性を返します。 &lt;code&gt;write()&lt;/code&gt; から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8f6c5dae4c7c9dbf5eb5b516561a39f4ac7bd1b1" translate="yes" xml:space="preserve">
          <source>Return plain text version of exception report.</source>
          <target state="translated">例外レポートのプレーンテキスト版を返します。</target>
        </trans-unit>
        <trans-unit id="736ec423104bfd6a8fa13c76be5315392d1defbe" translate="yes" xml:space="preserve">
          <source>Return the EWKB representation of this Geometry as a Python buffer. This is an extension of the WKB specification that includes any SRID value that are a part of this geometry.</source>
          <target state="translated">このジオメトリのEWKB表現をPythonバッファとして返します。これは、このジオメトリの一部である SRID 値を含む WKB 仕様の拡張です。</target>
        </trans-unit>
        <trans-unit id="42af9892ec38501a8937e0af546c1b60b030a53c" translate="yes" xml:space="preserve">
          <source>Return the context variable name that will be used to contain the data that this view is manipulating. If &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.context_object_name&quot;&gt;&lt;code&gt;context_object_name&lt;/code&gt;&lt;/a&gt; is not set, the context name will be constructed from the &lt;code&gt;model_name&lt;/code&gt; of the model that the queryset is composed from. For example, the model &lt;code&gt;Article&lt;/code&gt; would have context object named &lt;code&gt;'article'&lt;/code&gt;.</source>
          <target state="translated">このビューが操作しているデータを含めるために使用されるコンテキスト変数名を返します。&lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.context_object_name&quot;&gt; &lt;code&gt;context_object_name&lt;/code&gt; &lt;/a&gt;が設定されていない場合、コンテキスト名は、クエリセットが構成されているモデルの &lt;code&gt;model_name&lt;/code&gt; から構築されます。たとえば、モデル &lt;code&gt;Article&lt;/code&gt; には &lt;code&gt;'article'&lt;/code&gt; という名前のコンテキストオブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="bbe07d612b5dc8218d6f214b33a0578323ac3ba1" translate="yes" xml:space="preserve">
          <source>Return the context variable name that will be used to contain the list of data that this view is manipulating. If &lt;code&gt;object_list&lt;/code&gt; is a queryset of Django objects and &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.context_object_name&quot;&gt;&lt;code&gt;context_object_name&lt;/code&gt;&lt;/a&gt; is not set, the context name will be the &lt;code&gt;model_name&lt;/code&gt; of the model that the queryset is composed from, with postfix &lt;code&gt;'_list'&lt;/code&gt; appended. For example, the model &lt;code&gt;Article&lt;/code&gt; would have a context object named &lt;code&gt;article_list&lt;/code&gt;.</source>
          <target state="translated">このビューが操作しているデータのリストを含めるために使用されるコンテキスト変数名を返します。場合 &lt;code&gt;object_list&lt;/code&gt; ジャンゴのクエリセットであるオブジェクトと&lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.context_object_name&quot;&gt; &lt;code&gt;context_object_name&lt;/code&gt; が&lt;/a&gt;設定されていない場合、コンテキスト名は次のようになります &lt;code&gt;model_name&lt;/code&gt; 接尾と、クエリセットをから構成されていることがモデルの &lt;code&gt;'_list'&lt;/code&gt; 追加します。たとえば、モデル &lt;code&gt;Article&lt;/code&gt; には、 &lt;code&gt;article_list&lt;/code&gt; という名前のコンテキストオブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="8246453c6e901bbc2e4288b43a47949404da068a" translate="yes" xml:space="preserve">
          <source>Return type:</source>
          <target state="translated">戻り値のタイプ。</target>
        </trans-unit>
        <trans-unit id="07bd1e71618b84c910837df50d00485bde4708dd" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;float&lt;/code&gt; if input is &lt;code&gt;int&lt;/code&gt;, otherwise same as input field, or &lt;code&gt;output_field&lt;/code&gt; if supplied</source>
          <target state="translated">戻り値の型： &lt;code&gt;float&lt;/code&gt; 型は、入力された場合 &lt;code&gt;int&lt;/code&gt; 、入力フィールドとして、またはそうでなければ同じ &lt;code&gt;output_field&lt;/code&gt; 提供されている場合</target>
        </trans-unit>
        <trans-unit id="ccd2aef4e4644db8d3572d2b60b5474addd70554" translate="yes" xml:space="preserve">
          <source>Return type: &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">戻り値の型： &lt;code&gt;int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a9d70e74c9e14b650dd5b0bfa236e3b694e8efe" translate="yes" xml:space="preserve">
          <source>Return type: same as input field, or &lt;code&gt;output_field&lt;/code&gt; if supplied</source>
          <target state="translated">戻り値の型：入力フィールドと同じ、または指定されている場合は &lt;code&gt;output_field&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d144d353038e014eb72a664bb0c163a5363adfe5" translate="yes" xml:space="preserve">
          <source>Returned objects are empty ranges. Can be chained to valid lookups for a &lt;a href=&quot;../../models/fields#django.db.models.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたオブジェクトは空の範囲です。&lt;a href=&quot;../../models/fields#django.db.models.BooleanField&quot;&gt; &lt;code&gt;BooleanField&lt;/code&gt; の&lt;/a&gt;有効なルックアップにチェーンできます。</target>
        </trans-unit>
        <trans-unit id="06bd16d77e981832b002ce119a0e884cb3b16bde" translate="yes" xml:space="preserve">
          <source>Returned objects have the given lower bound. Can be chained to valid lookups for the base field.</source>
          <target state="translated">返されるオブジェクトは、与えられた下界を持ちます。ベースフィールドの有効なルックアップに連結することができます。</target>
        </trans-unit>
        <trans-unit id="38d253a6b808941a6d5ba1a28edfc923dbb6867c" translate="yes" xml:space="preserve">
          <source>Returned objects have the given upper bound. Can be chained to valid lookups for the base field.</source>
          <target state="translated">返されるオブジェクトは、与えられた上限値を持ちます。ベースフィールドの有効なルックアップに連結することができます。</target>
        </trans-unit>
        <trans-unit id="0fb366d00a6a439510944a0acbdf4865e7ef3cfd" translate="yes" xml:space="preserve">
          <source>Returning errors</source>
          <target state="translated">エラーを返す</target>
        </trans-unit>
        <trans-unit id="7095e5771eaf071182623b8cf6a49a64c9eba107" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">デフォルトで&lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="1092e63f98742ffa56c537ab72b7a40ee87c664d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;False&lt;/code&gt; if &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.set_unusable_password&quot;&gt;&lt;code&gt;set_unusable_password()&lt;/code&gt;&lt;/a&gt; has been called for this user.</source>
          <target state="translated">このユーザーに対して&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.set_unusable_password&quot;&gt; &lt;code&gt;set_unusable_password()&lt;/code&gt; &lt;/a&gt;が呼び出された場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0e677794a528a5aa8153071c3a65b95c3e25f184" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;False&lt;/code&gt; if &lt;a href=&quot;#django.contrib.auth.models.User.set_unusable_password&quot;&gt;&lt;code&gt;set_unusable_password()&lt;/code&gt;&lt;/a&gt; has been called for this user.</source>
          <target state="translated">このユーザーに対して&lt;a href=&quot;#django.contrib.auth.models.User.set_unusable_password&quot;&gt; &lt;code&gt;set_unusable_password()&lt;/code&gt; &lt;/a&gt;が呼び出された場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1a98b310ac45a54756232d0cddc7b27f06ae41bb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;False&lt;/code&gt; if the password is a result of &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_unusable_password&quot;&gt;&lt;code&gt;User.set_unusable_password()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パスワードが&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.set_unusable_password&quot;&gt; &lt;code&gt;User.set_unusable_password()&lt;/code&gt; の&lt;/a&gt;結果である場合は、 &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="08487b10e572b361292fbbd2036a6fa8419a4e6d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#django.contrib.auth.backends.RemoteUserBackend.create_unknown_user&quot;&gt;&lt;code&gt;create_unknown_user&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt; and a &lt;code&gt;User&lt;/code&gt; object with the given username is not found in the database.</source>
          <target state="translated">戻り値の &lt;code&gt;None&lt;/code&gt; かの&lt;a href=&quot;#django.contrib.auth.backends.RemoteUserBackend.create_unknown_user&quot;&gt; &lt;code&gt;create_unknown_user&lt;/code&gt; は&lt;/a&gt;ありません &lt;code&gt;False&lt;/code&gt; と &lt;code&gt;User&lt;/code&gt; 指定されたユーザー名を持つオブジェクトがデータベース内に見つかりません。</target>
        </trans-unit>
        <trans-unit id="6f92312a02b985adef5b319c8895a576823f384b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;None&lt;/code&gt; if there is no suggestion.</source>
          <target state="translated">提案がない場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="15d97ec59755d608144e34737e5bfaf6e49f62e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.disjoint&quot;&gt;&lt;code&gt;GEOSGeometry.disjoint()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.disjoint&quot;&gt; &lt;code&gt;GEOSGeometry.disjoint()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9627596d0dd58d51bdb410092d5f1f3053bb8e15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.within&quot;&gt;&lt;code&gt;other.within(this)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;True&lt;/code&gt; の場合&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.within&quot;&gt; &lt;code&gt;other.within(this)&lt;/code&gt; &lt;/a&gt;返します &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b581b3914a5d050d69d5762d31de07c1682c3d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is aware, &lt;code&gt;False&lt;/code&gt; if it is naive. This function assumes that &lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;True&lt;/code&gt; の場合 &lt;code&gt;value&lt;/code&gt; 、認識している &lt;code&gt;False&lt;/code&gt; それはナイーブである場合。この関数は、 &lt;code&gt;value&lt;/code&gt; が&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; である&lt;/a&gt;ことを前提としています。</target>
        </trans-unit>
        <trans-unit id="07ee4077e37c02ef9a6377b3f5889cf0e80ff538" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is naive, &lt;code&gt;False&lt;/code&gt; if it is aware. This function assumes that &lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; がナイーブの場合は &lt;code&gt;True&lt;/code&gt; を、認識している場合は &lt;code&gt;False&lt;/code&gt; を返します。この関数は、 &lt;code&gt;value&lt;/code&gt; が&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; である&lt;/a&gt;ことを前提としています。</target>
        </trans-unit>
        <trans-unit id="18e3685f44b92cdfc280453cf13c75eec24b4a73" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if a file referenced by the given name already exists in the storage system, or &lt;code&gt;False&lt;/code&gt; if the name is available for a new file.</source>
          <target state="translated">指定された名前で参照されるファイルがストレージシステムにすでに存在する場合は &lt;code&gt;True&lt;/code&gt; を返し、名前が新しいファイルで使用できる場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4ee7578ce7acc9ab5cf150f7bcbfb78b9112875b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if and only if all elements are closed. Requires GEOS 3.5.</source>
          <target state="translated">すべての要素が閉じている場合にのみ &lt;code&gt;True&lt;/code&gt; を返します。GEOS 3.5が必要です。</target>
        </trans-unit>
        <trans-unit id="81b18813bc602858d4a2a0158b3e61be2a37b803" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if at least one input value is true, &lt;code&gt;None&lt;/code&gt; if all values are null or if there are no values, otherwise &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">少なくとも1つの入力値がtrueの場合は &lt;code&gt;True&lt;/code&gt; を返し、すべての値がnullの場合または値がない場合は &lt;code&gt;None&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bbc8fe08675d5a8863527050e072394b78b97133" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; contains any results, and &lt;code&gt;False&lt;/code&gt; if not. This tries to perform the query in the simplest and fastest way possible, but it &lt;em&gt;does&lt;/em&gt; execute nearly the same query as a normal &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;に結果が含まれている場合は &lt;code&gt;True&lt;/code&gt; を、含まれていない場合は &lt;code&gt;False&lt;/code&gt; を返します。この試みは、可能な最も簡単かつ最速の方法でクエリを実行するために、それは&lt;em&gt;ない&lt;/em&gt;、通常とほぼ同じクエリを実行する&lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;クエリ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="904b4aa45e01a31d68b44d38d64e4e743dde9a2e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two Geometries is &lt;code&gt;T*T******&lt;/code&gt; (for a point and a curve,a point and an area or a line and an area) &lt;code&gt;0********&lt;/code&gt; (for two curves).</source>
          <target state="translated">2つの形状のDE-9IM交差行列が &lt;code&gt;T*T******&lt;/code&gt; （点と曲線、点と領域、または線と領域の場合） &lt;code&gt;0********&lt;/code&gt; 場合、 &lt;code&gt;True&lt;/code&gt; を返します。 **（2つの曲線の場合）。</target>
        </trans-unit>
        <trans-unit id="1679cbb23dcbc50cd824271aab873a88e7894184" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;FF*FF****&lt;/code&gt;.</source>
          <target state="translated">2つのジオメトリのDE-9IM交差行列が &lt;code&gt;FF*FF****&lt;/code&gt; 場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b1b945e0e8a9cf4720bdf5e9ee506bae6a95f82f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;FT*******&lt;/code&gt;, &lt;code&gt;F**T*****&lt;/code&gt; or &lt;code&gt;F***T****&lt;/code&gt;.</source>
          <target state="translated">2つのジオメトリのDE-9IM交差行列が &lt;code&gt;FT*******&lt;/code&gt; 、 &lt;code&gt;F**T*****&lt;/code&gt; または &lt;code&gt;F***T****&lt;/code&gt; 場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e9e020c7b2dca31dbf34dba2c137fae9c9a1a3c7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;T*F**F***&lt;/code&gt;.</source>
          <target state="translated">2つのジオメトリのDE-9IM交差行列が &lt;code&gt;T*F**F***&lt;/code&gt; 場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7c269d8bb8356ba54a83f19794a9da02bd6abdcd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the DE-9IM intersection matrix for the two geometries is &lt;code&gt;T*F**FFF*&lt;/code&gt;.</source>
          <target state="translated">2つのジオメトリのDE-9IM交差行列が &lt;code&gt;T*F**FFF*&lt;/code&gt; 場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f6f8d07aaf246cbf7cdb39524f0b6d55493ab6c3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the elements in the DE-9IM intersection matrix for this geometry and the other matches the given &lt;code&gt;pattern&lt;/code&gt; &amp;ndash; a string of nine characters from the alphabet: {&lt;code&gt;T&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;}.</source>
          <target state="translated">このジオメトリのDE-9IM交差行列の要素と他の要素が指定された &lt;code&gt;pattern&lt;/code&gt; アルファベットの9文字の文字列：{ &lt;code&gt;T&lt;/code&gt; 、 &lt;code&gt;F&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; }）に一致する場合、 &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ed75482457f97c5c4474ee309fe4eac1a54c1663" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the file is large enough to require multiple chunks to access all of its content give some &lt;code&gt;chunk_size&lt;/code&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;True&lt;/code&gt; ファイルがいくつか与えて、そのすべてのコンテンツのアクセスに複数のチャンクを必要とするために十分な大きさであれば &lt;code&gt;chunk_size&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
