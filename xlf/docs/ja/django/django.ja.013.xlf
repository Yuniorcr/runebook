<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="a1afaa5ba0e096bb9e50f1962733863c9b09641f" translate="yes" xml:space="preserve">
          <source>Set up a database</source>
          <target state="translated">データベースの設定</target>
        </trans-unit>
        <trans-unit id="97fd13194fd3cb22c1cbd4ed2eac0a25c0b52e7c" translate="yes" xml:space="preserve">
          <source>Set up the hstore extension in PostgreSQL before the first &lt;code&gt;CreateModel&lt;/code&gt; or &lt;code&gt;AddField&lt;/code&gt; operation that involves &lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt; by adding a migration with the &lt;a href=&quot;#django.contrib.postgres.operations.HStoreExtension&quot;&gt;&lt;code&gt;HStoreExtension&lt;/code&gt;&lt;/a&gt; operation. For example:</source>
          <target state="translated">最初の前に、PostgreSQLのhstoreの拡張子を設定し &lt;code&gt;CreateModel&lt;/code&gt; か &lt;code&gt;AddField&lt;/code&gt; 関係操作&lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt; &lt;code&gt;HStoreField&lt;/code&gt; を&lt;/a&gt;して移行を追加することにより、&lt;a href=&quot;#django.contrib.postgres.operations.HStoreExtension&quot;&gt; &lt;code&gt;HStoreExtension&lt;/code&gt; の&lt;/a&gt;操作。例えば：</target>
        </trans-unit>
        <trans-unit id="3ded3d55f3eb7df61ff40480cf0a0bce477f5009" translate="yes" xml:space="preserve">
          <source>Set up your projects admin template directories</source>
          <target state="translated">プロジェクトの管理テンプレートディレクトリを設定する</target>
        </trans-unit>
        <trans-unit id="b49bcb26884abafb26569f6f7f16bd2ccec66a27" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;response.content&lt;/code&gt; to the result obtained by &lt;a href=&quot;#django.template.response.SimpleTemplateResponse.rendered_content&quot;&gt;&lt;code&gt;SimpleTemplateResponse.rendered_content&lt;/code&gt;&lt;/a&gt;, runs all post-rendering callbacks, and returns the resulting response object.</source>
          <target state="translated">&lt;code&gt;response.content&lt;/code&gt; を&lt;a href=&quot;#django.template.response.SimpleTemplateResponse.rendered_content&quot;&gt; &lt;code&gt;SimpleTemplateResponse.rendered_content&lt;/code&gt; &lt;/a&gt;で取得した結果に設定し、すべてのポストレンダリングコールバックを実行して、結果の応答オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="408f40a5fe43edc715efa57f014cfbad947dd030" translate="yes" xml:space="preserve">
          <source>Sets a cookie. The parameters are the same as in the &lt;a href=&quot;https://docs.python.org/3/library/http.cookies.html#http.cookies.Morsel&quot;&gt;&lt;code&gt;Morsel&lt;/code&gt;&lt;/a&gt; cookie object in the Python standard library.</source>
          <target state="translated">クッキーを設定します。パラメータは、Python標準ライブラリの&lt;a href=&quot;https://docs.python.org/3/library/http.cookies.html#http.cookies.Morsel&quot;&gt; &lt;code&gt;Morsel&lt;/code&gt; &lt;/a&gt; cookieオブジェクトと同じです。</target>
        </trans-unit>
        <trans-unit id="3c515046f01771f4526378b421d8ba5b4e169a1a" translate="yes" xml:space="preserve">
          <source>Sets a header unless it has already been set.</source>
          <target state="translated">すでに設定されていない限り、ヘッダを設定します。</target>
        </trans-unit>
        <trans-unit id="bdca6cc895cc30c955b0b950fec5e8bc6259cf4e" translate="yes" xml:space="preserve">
          <source>Sets a limit to the available choices for this field when this field is rendered using a &lt;code&gt;ModelForm&lt;/code&gt; or the admin (by default, all objects in the queryset are available to choose). Either a dictionary, a &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; object, or a callable returning a dictionary or &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; object can be used.</source>
          <target state="translated">このフィールドが &lt;code&gt;ModelForm&lt;/code&gt; またはadmin を使用してレンダリングされるときに、このフィールドで使用可能な選択肢に制限を設定します（デフォルトでは、クエリセット内のすべてのオブジェクトを選択できます）。辞書、&lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; &lt;/a&gt;オブジェクト、または辞書または&lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; &lt;/a&gt;オブジェクトを返す呼び出し可能オブジェクトを使用できます。</target>
        </trans-unit>
        <trans-unit id="632eb1f0531c26082b7a79d32dce48d5b6201736" translate="yes" xml:space="preserve">
          <source>Sets a test cookie to determine whether the user&amp;rsquo;s browser supports cookies. Due to the way cookies work, you won&amp;rsquo;t be able to test this until the user&amp;rsquo;s next page request. See &lt;a href=&quot;#setting-test-cookies&quot;&gt;Setting test cookies&lt;/a&gt; below for more information.</source>
          <target state="translated">テストCookieを設定して、ユーザーのブラウザーがCookieをサポートしているかどうかを判別します。Cookieの仕組みにより、ユーザーが次のページをリクエストするまで、これをテストすることはできません。詳細については、以下の&lt;a href=&quot;#setting-test-cookies&quot;&gt;テストCookieの設定を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f05dfa7fb6cebcdcf2beabb0f70373bd1aa5b659" translate="yes" xml:space="preserve">
          <source>Sets of field names that, taken together, are indexed:</source>
          <target state="translated">フィールド名のセットは、まとめてインデックス化されます。</target>
        </trans-unit>
        <trans-unit id="52667eddca77089fbc28d755e7e76e0f1f77ed69" translate="yes" xml:space="preserve">
          <source>Sets of field names that, taken together, must be unique:</source>
          <target state="translated">フィールド名のセットで、まとめて使用する場合は一意でなければなりません。</target>
        </trans-unit>
        <trans-unit id="73f4a00cf7b87c9b1063afa4aa8e1c3526dc91b6" translate="yes" xml:space="preserve">
          <source>Sets or unsets the current time zone in the contained block. When the current time zone is unset, the default time zone applies.</source>
          <target state="translated">含まれるブロック内の現在のタイムゾーンを設定または解除します。現在のタイムゾーンを解除すると、デフォルトのタイムゾーンが適用されます。</target>
        </trans-unit>
        <trans-unit id="e0ac40eb546b24145147ae03b91ddebbb99aa2dd" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;. The &lt;code&gt;timezone&lt;/code&gt; argument must be an instance of a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass or a time zone name.</source>
          <target state="translated">&lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;現在のタイムゾーンを&lt;/a&gt;設定します。 &lt;code&gt;timezone&lt;/code&gt; 引数は、のインスタンスでなければならない&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; のの&lt;/a&gt;サブクラスまたはタイムゾーン名。</target>
        </trans-unit>
        <trans-unit id="5103c5d452e2f6cb5c1933a10c95972e5d3cc950" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt; prior to running tests. This may help troubleshoot test failures.</source>
          <target state="translated">テストを実行する前に、&lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;設定を &lt;code&gt;True&lt;/code&gt; に設定します。これは、テストの失敗のトラブルシューティングに役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="1e4d668d536d53ad93385f03b5371b98dec15212" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Cache-Control&lt;/code&gt; header to give a max age for the page &amp;ndash; again, from the &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">セット &lt;code&gt;Cache-Control&lt;/code&gt; ヘッダは、ページの最大年齢を与えるために-再び、から&lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt; &lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt; の&lt;/a&gt;設定。</target>
        </trans-unit>
        <trans-unit id="ae603b6fc6618cf488705a1cf96cb00d25aa2b57" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Content-Length&lt;/code&gt; header for non-streaming responses.</source>
          <target state="translated">非ストリーミング応答の &lt;code&gt;Content-Length&lt;/code&gt; ヘッダーを設定します。</target>
        </trans-unit>
        <trans-unit id="e1a2f13363ee41cab9583db5e0dc1cca7f30503c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Expires&lt;/code&gt; header to the current date/time plus the defined &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">設定 &lt;code&gt;Expires&lt;/code&gt; 、現在の日付/時間と定義さにヘッダを&lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt; &lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5bdf74ce6ca2ff8945590cd20a859da89bea6a09" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;domain&lt;/code&gt; attributes to the value of &lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;get_host()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;domain&lt;/code&gt; 属性を&lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;get_host()&lt;/code&gt; の&lt;/a&gt;値に設定します。</target>
        </trans-unit>
        <trans-unit id="5819809ad73328e684b62f25daab602449fa6adc" translate="yes" xml:space="preserve">
          <source>Sets the SRID &lt;a href=&quot;#fnogcsrid&quot; id=&quot;id4&quot;&gt;[2]&lt;/a&gt; (Spatial Reference System Identity) of the geometry field to the given value. Defaults to 4326 (also known as &lt;a href=&quot;https://en.wikipedia.org/wiki/WGS84&quot;&gt;WGS84&lt;/a&gt;, units are in degrees of longitude and latitude).</source>
          <target state="translated">ジオメトリフィールドのSRID &lt;a href=&quot;#fnogcsrid&quot; id=&quot;id4&quot;&gt;[2]&lt;/a&gt;（空間参照システムアイデンティティ）を指定された値に設定します。デフォルトは4326です（&lt;a href=&quot;https://en.wikipedia.org/wiki/WGS84&quot;&gt;WGS84&lt;/a&gt;とも呼ばれ、単位は経度と緯度です）。</target>
        </trans-unit>
        <trans-unit id="f2b9274a804d2ecaa3195367f00bea7a434591d9" translate="yes" xml:space="preserve">
          <source>Sets the database to use when importing spatial data. Default is &lt;code&gt;'default'&lt;/code&gt;.</source>
          <target state="translated">空間データをインポートするときに使用するデータベースを設定します。デフォルトは &lt;code&gt;'default'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8bf2eddb5b4b6ffe46fd95be0ac3e4d7ba5c02c3" translate="yes" xml:space="preserve">
          <source>Sets the expiration time for the session. You can pass a number of different values:</source>
          <target state="translated">セッションの有効期限を設定します。いくつかの異なる値を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b1f24dd079f20b79ef103229f1172344d814ef67" translate="yes" xml:space="preserve">
          <source>Sets the given header name to the given value. Both &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; should be strings.</source>
          <target state="translated">指定されたヘッダー名を指定された値に設定します。 &lt;code&gt;header&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 両方が文字列である必要があります。</target>
        </trans-unit>
        <trans-unit id="1b777c3f2c50ed5c7082c4ab62fc65aaf0472676" translate="yes" xml:space="preserve">
          <source>Sets the given key to &lt;code&gt;[value]&lt;/code&gt; (a list whose single element is &lt;code&gt;value&lt;/code&gt;). Note that this, as other dictionary functions that have side effects, can only be called on a mutable &lt;code&gt;QueryDict&lt;/code&gt; (such as one that was created via &lt;a href=&quot;#django.http.QueryDict.copy&quot;&gt;&lt;code&gt;QueryDict.copy()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">指定されたキーを &lt;code&gt;[value]&lt;/code&gt; （単一の要素が &lt;code&gt;value&lt;/code&gt; であるリスト）に設定します。これは、副作用のある他のディクショナリ関数と同様に、変更可能な &lt;code&gt;QueryDict&lt;/code&gt; （&lt;a href=&quot;#django.http.QueryDict.copy&quot;&gt; &lt;code&gt;QueryDict.copy()&lt;/code&gt; を&lt;/a&gt;介して作成されたものなど）でのみ呼び出すことができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f5053eaffe55e888ce89c031af21019fd33faef0" translate="yes" xml:space="preserve">
          <source>Sets the given key to &lt;code&gt;list_&lt;/code&gt; (unlike &lt;a href=&quot;#django.http.QueryDict.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">指定されたキーを &lt;code&gt;list_&lt;/code&gt; に設定します（&lt;a href=&quot;#django.http.QueryDict.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;とは異なります）。</target>
        </trans-unit>
        <trans-unit id="ce195a23bd246795f71fd859aa4ec89b77eda722" translate="yes" xml:space="preserve">
          <source>Sets the minimum message level that will be recorded by the messages framework. See &lt;a href=&quot;contrib/messages#message-level&quot;&gt;message levels&lt;/a&gt; for more details.</source>
          <target state="translated">メッセージフレームワークによって記録される最小メッセージレベルを設定します。詳細については、&lt;a href=&quot;contrib/messages#message-level&quot;&gt;メッセージレベル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="31a038be4a7757c10e533982c76c04d85a95d5e0" translate="yes" xml:space="preserve">
          <source>Sets the name of the squashed migration. When omitted, the name is based on the first and last migration, with &lt;code&gt;_squashed_&lt;/code&gt; in between.</source>
          <target state="translated">押しつぶされたマイグレーションの名前を設定します。省略した場合、名前は最初と最後の移行に基づいており、 &lt;code&gt;_squashed_&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="a97697aace2f54293e7b5eda11c35e1cb9a00cc3" translate="yes" xml:space="preserve">
          <source>Sets the user&amp;rsquo;s password to the given raw string, taking care of the password hashing. Doesn&amp;rsquo;t save the &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ユーザーのパスワードを指定された生の文字列に設定し、パスワードハッシュを処理します。&lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt; &lt;code&gt;AbstractBaseUser&lt;/code&gt; &lt;/a&gt;オブジェクトを保存しません。</target>
        </trans-unit>
        <trans-unit id="8459b281517c48c462475bb38a8d73ff61f3e723" translate="yes" xml:space="preserve">
          <source>Sets the user&amp;rsquo;s password to the given raw string, taking care of the password hashing. Doesn&amp;rsquo;t save the &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ユーザーのパスワードを指定された生の文字列に設定し、パスワードハッシュを処理します。&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;オブジェクトを保存しません。</target>
        </trans-unit>
        <trans-unit id="66d36ff09f5d81122453523551e0e8c1881c667c" translate="yes" xml:space="preserve">
          <source>Sets up the test environment by calling &lt;a href=&quot;#django.test.utils.setup_test_environment&quot;&gt;&lt;code&gt;setup_test_environment()&lt;/code&gt;&lt;/a&gt; and setting &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;self.debug_mode&lt;/code&gt; (defaults to &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;#django.test.utils.setup_test_environment&quot;&gt; &lt;code&gt;setup_test_environment()&lt;/code&gt; &lt;/a&gt;を呼び出し、&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;self.debug_mode&lt;/code&gt; に設定することでテスト環境をセットアップします（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="59b0dc8f8ae1e494dded947c788c0e119c198d3b" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG = False&lt;/code&gt;&lt;/a&gt; disables several features that are only useful in development. In addition, you can tune the following settings.</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG = False&lt;/code&gt; &lt;/a&gt;設定すると、開発でのみ役立ついくつかの機能が無効になります。さらに、次の設定を調整できます。</target>
        </trans-unit>
        <trans-unit id="e72e1b603af5cb3db44f699b632c99146b328773" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt; only means that the automatic configuration process is disabled, not logging itself. If you disable the configuration process, Django will still make logging calls, falling back to whatever default logging behavior is defined.</source>
          <target state="translated">&lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;None&lt;/code&gt; に設定すると、自動構成プロセスが無効になり、それ自体はログに記録されません。設定プロセスを無効にしても、Djangoは引き続きログ呼び出しを行い、定義されているデフォルトのログ動作にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="c39c94023e1f094fcd48abe8fb31ff3e14bc6a7d" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;CSRF_COOKIE_SAMESITE = 'None'&lt;/code&gt; was allowed.</source>
          <target state="translated">Setting &lt;code&gt;CSRF_COOKIE_SAMESITE = 'None'&lt;/code&gt; was allowed.</target>
        </trans-unit>
        <trans-unit id="675b845f9e121dbf59d1b91af502a429ef0d7f90" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;LANGUAGE_COOKIE_SAMESITE = 'None'&lt;/code&gt; was allowed.</source>
          <target state="translated">Setting &lt;code&gt;LANGUAGE_COOKIE_SAMESITE = 'None'&lt;/code&gt; was allowed.</target>
        </trans-unit>
        <trans-unit id="e2f5b9aec1328b20d53c71c32acf5f6a71cced2a" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;SESSION_COOKIE_SAMESITE = 'None'&lt;/code&gt; was allowed.</source>
          <target state="translated">Setting &lt;code&gt;SESSION_COOKIE_SAMESITE = 'None'&lt;/code&gt; was allowed.</target>
        </trans-unit>
        <trans-unit id="7ed8f7cc38fbdaf331556f24d21c45a87ad324e8" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;X-Frame-Options&lt;/code&gt; for all responses</source>
          <target state="translated">すべての応答の &lt;code&gt;X-Frame-Options&lt;/code&gt; 設定</target>
        </trans-unit>
        <trans-unit id="132cfd6ffe75ccd5777a9a7d34096f2d17428788" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;X-Frame-Options&lt;/code&gt; per view</source>
          <target state="translated">ビューごとの &lt;code&gt;X-Frame-Options&lt;/code&gt; 設定</target>
        </trans-unit>
        <trans-unit id="93ed55d48126fe1990ba39c9f35de2f232ddcc3d" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;available_apps&lt;/code&gt; to a list of applications instructs Django to behave as if only the models from these applications were available. The behavior of &lt;code&gt;TransactionTestCase&lt;/code&gt; changes as follows:</source>
          <target state="translated">&lt;code&gt;available_apps&lt;/code&gt; をアプリケーションのリストに設定すると、Djangoはこれらのアプリケーションのモデルのみが利用可能であるかのように動作します。 &lt;code&gt;TransactionTestCase&lt;/code&gt; の動作は次のように変更されます。</target>
        </trans-unit>
        <trans-unit id="3ce871192d2e417ae6155e5820ab972d31ff0f39" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;fail_silently=True&lt;/code&gt; only hides the &lt;code&gt;MessageFailure&lt;/code&gt; that would otherwise occur when the messages framework disabled and one attempts to use one of the &lt;code&gt;add_message&lt;/code&gt; family of methods. It does not hide failures that may occur for other reasons.</source>
          <target state="translated">&lt;code&gt;fail_silently=True&lt;/code&gt; を設定すると、メッセージフレームワークが無効になっていて、 &lt;code&gt;add_message&lt;/code&gt; ファミリのメソッドの1つを使用しようとしたときに発生する &lt;code&gt;MessageFailure&lt;/code&gt; のみが非表示になります。他の理由で発生する可能性のある障害は隠されません。</target>
        </trans-unit>
        <trans-unit id="47c661eb59e52123e31e3dd1e9702fcb6598bd93" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;prefix_default_language&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; removes the prefix from the default language (&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt;). This can be useful when adding translations to existing site so that the current URLs won&amp;rsquo;t change.</source>
          <target state="translated">&lt;code&gt;prefix_default_language&lt;/code&gt; を &lt;code&gt;False&lt;/code&gt; に設定すると、デフォルト言語（&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt;）から接頭辞が削除されます。これは、既存のサイトに翻訳を追加して、現在のURLが変更されないようにする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="0056c667576e354a5e663c95d62e7ef9927b4dc0" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;require_ready&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; allows looking up models &lt;a href=&quot;#app-loading-process&quot;&gt;while the app registry is being populated&lt;/a&gt;, specifically during the second phase where it imports models. Then &lt;code&gt;get_model()&lt;/code&gt; has the same effect as importing the model. The main use case is to configure model classes with settings, such as &lt;a href=&quot;settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">設定 &lt;code&gt;require_ready&lt;/code&gt; のに &lt;code&gt;False&lt;/code&gt; モデルを検索可能にする&lt;a href=&quot;#app-loading-process&quot;&gt;アプリレジストリが移入されている間、&lt;/a&gt;具体的には、モデルをインポートして第二段階の間に、。次に、 &lt;code&gt;get_model()&lt;/code&gt; はモデルのインポートと同じ効果があります。主な使用例は、&lt;a href=&quot;settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;などの設定でモデルクラスを構成することです。</target>
        </trans-unit>
        <trans-unit id="c0cd66f01495f08ccc8d10eee1e9d67c79c5a014" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;reset_sequences = True&lt;/code&gt; on a &lt;code&gt;TransactionTestCase&lt;/code&gt; will make sure sequences are always reset before the test run:</source>
          <target state="translated">設定 &lt;code&gt;reset_sequences = True&lt;/code&gt; の &lt;code&gt;TransactionTestCase&lt;/code&gt; は必ずシーケンスは常にテスト実行前にリセットされているようになります。</target>
        </trans-unit>
        <trans-unit id="50918ec9532aeb7cd1ec5da9ce08113b71e778fa" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;sql_mode&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sql_mode&lt;/code&gt; の設定</target>
        </trans-unit>
        <trans-unit id="d60b0890a431be3750d67b0f7fe70b5f3af16d7e" translate="yes" xml:space="preserve">
          <source>Setting Up</source>
          <target state="translated">設定</target>
        </trans-unit>
        <trans-unit id="6b965bcdec8a51f70c2f569e92d9a8f7ea73b181" translate="yes" xml:space="preserve">
          <source>Setting a variable in the context</source>
          <target state="translated">コンテキストに変数を設定する</target>
        </trans-unit>
        <trans-unit id="66e5d8afa8668590f57e7c54ac4454a2ade5fb02" translate="yes" xml:space="preserve">
          <source>Setting arguments for widgets</source>
          <target state="translated">ウィジェットの引数設定</target>
        </trans-unit>
        <trans-unit id="fe0f8c19188f8ce734dd718293260407a61b792f" translate="yes" xml:space="preserve">
          <source>Setting header fields</source>
          <target state="translated">ヘッダーフィールドの設定</target>
        </trans-unit>
        <trans-unit id="945bafd68150779ab45819d6a28e6ddb2de1192f" translate="yes" xml:space="preserve">
          <source>Setting it to &lt;code&gt;False&lt;/code&gt; does not mean you can reference a swappable model even if it is swapped out - &lt;code&gt;False&lt;/code&gt; means that the migrations made with this ForeignKey will always reference the exact model you specify (so it will fail hard if the user tries to run with a User model you don&amp;rsquo;t support, for example).</source>
          <target state="translated">設定する &lt;code&gt;False&lt;/code&gt; にすると、あなたはそれがスワップアウトされた場合でも、スワップ可能なモデルを参照することができるという意味ではありません- &lt;code&gt;False&lt;/code&gt; の手段をユーザーが使用して実行しようとすると、それは難しい失敗しますので、これのForeignKeyで作られた移行は、常にあなたが（指定した正確なモデルを参照することたとえば、サポートしていないUserモデル）。</target>
        </trans-unit>
        <trans-unit id="28cacd8745a95fc18ae94161435322089b4163e2" translate="yes" xml:space="preserve">
          <source>Setting it to &lt;code&gt;False&lt;/code&gt; prevents such a rollback. Before doing that, make sure you&amp;rsquo;ve rolled back the transaction to a known-good savepoint within the current atomic block! Otherwise you&amp;rsquo;re breaking atomicity and data corruption may occur.</source>
          <target state="translated">&lt;code&gt;False&lt;/code&gt; に設定すると、そのようなロールバックが防止されます。その前に、トランザクションを現在のアトミックブロック内の既知の正常なセーブポイントにロールバックしたことを確認してください。そうしないと、原子性が損なわれ、データの破損が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="075bb4f28dadb7ff8ce20dda53f6efb8f30916a5" translate="yes" xml:space="preserve">
          <source>Setting names must be all uppercase.</source>
          <target state="translated">設定名はすべて大文字でなければなりません。</target>
        </trans-unit>
        <trans-unit id="16631f78efae0a8d74d4a2455f07a2e3a307f5c6" translate="yes" xml:space="preserve">
          <source>Setting permissions for actions</source>
          <target state="translated">アクションの許可設定</target>
        </trans-unit>
        <trans-unit id="9ac1ac2c549326e91452b0a30530bce65a21c002" translate="yes" xml:space="preserve">
          <source>Setting system library path</source>
          <target state="translated">システムライブラリのパス設定</target>
        </trans-unit>
        <trans-unit id="59535a2469317a361527e1e129868541fc3a4b8b" translate="yes" xml:space="preserve">
          <source>Setting test cookies</source>
          <target state="translated">テストクッキーの設定</target>
        </trans-unit>
        <trans-unit id="fac5905f3c39f20c6f85ca274a70117415678188" translate="yes" xml:space="preserve">
          <source>Setting the language</source>
          <target state="translated">言語の設定</target>
        </trans-unit>
        <trans-unit id="a1d46f3f9862beae150f7ad035e6575bc712481a" translate="yes" xml:space="preserve">
          <source>Setting the rollback flag to &lt;code&gt;True&lt;/code&gt; forces a rollback when exiting the innermost atomic block. This may be useful to trigger a rollback without raising an exception.</source>
          <target state="translated">ロールバックフラグを &lt;code&gt;True&lt;/code&gt; に設定すると、最も内側のアトミックブロックを終了するときに強制的にロールバックされます。これは、例外を発生させずにロールバックをトリガーするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="087c72314f40c858cc65ce0acac1fbe17e4d3ed1" translate="yes" xml:space="preserve">
          <source>Setting the time zone of the database connection may be useful for running raw SQL queries involving date/time functions provided by the database, such as &lt;code&gt;date_trunc&lt;/code&gt;, because their results depend on the time zone.</source>
          <target state="translated">データベース接続のタイムゾーンの設定は、 &lt;code&gt;date_trunc&lt;/code&gt; などのデータベースによって提供される日付/時刻関数を含む生のSQLクエリを実行する場合に役立つことがあります。これは、結果がタイムゾーンに依存するためです。</target>
        </trans-unit>
        <trans-unit id="95ecbb5620ff188d342ecdd844e0404486de01a1" translate="yes" xml:space="preserve">
          <source>Setting the token on the AJAX request</source>
          <target state="translated">AJAXリクエストにトークンを設定する</target>
        </trans-unit>
        <trans-unit id="08b9fd67626d43b20cb5a622d42c5adf6141a940" translate="yes" xml:space="preserve">
          <source>Setting this incorrectly can irreversibly (for some time) break your site. Read the &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt; documentation first.</source>
          <target state="translated">これを誤って設定すると、（しばらくの間）不可逆的にサイトが破損する可能性があります。最初に&lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Securityの&lt;/a&gt;ドキュメントを読んでください。</target>
        </trans-unit>
        <trans-unit id="af04376bd1a36ea4fac76faf5ab993ad605c69a8" translate="yes" xml:space="preserve">
          <source>Setting this incorrectly can irreversibly (for the value of &lt;a href=&quot;#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt;) break your site. Read the &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt; documentation first.</source>
          <target state="translated">これを誤って設定すると、不可逆的に（&lt;a href=&quot;#std:setting-SECURE_HSTS_SECONDS&quot;&gt; &lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt; &lt;/a&gt;の値で）サイトが破損する可能性があります。最初に&lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Securityの&lt;/a&gt;ドキュメントを読んでください。</target>
        </trans-unit>
        <trans-unit id="b4b7f49bbe9dcb41865c13c13332d926ce70da09" translate="yes" xml:space="preserve">
          <source>Setting this to False will disable coordinate transformations. In other words, geometries will be inserted into the database unmodified from their original state in the data source.</source>
          <target state="translated">これを False に設定すると、座標変換が無効になります。つまり、ジオメトリはデータソースの元の状態から変更されずにデータベースに挿入されます。</target>
        </trans-unit>
        <trans-unit id="148cc51328a7c1446f08657b5d9544259408be88" translate="yes" xml:space="preserve">
          <source>Setting this to the name, or a tuple of names, from the given model will create models unique only to the given name(s). Geometries from each feature will be added into the collection associated with the unique model. Forces the transaction mode to be &lt;code&gt;'autocommit'&lt;/code&gt;.</source>
          <target state="translated">これを特定のモデルの名前または名前のタプルに設定すると、特定の名前にのみ固有のモデルが作成されます。各フィーチャのジオメトリは、一意のモデルに関連付けられたコレクションに追加されます。トランザクションモードを強制的に &lt;code&gt;'autocommit'&lt;/code&gt; にします。</target>
        </trans-unit>
        <trans-unit id="a9169b7dd339849688ef82a19859825695a184a3" translate="yes" xml:space="preserve">
          <source>Setting up a virtual environment</source>
          <target state="translated">仮想環境の設定</target>
        </trans-unit>
        <trans-unit id="cb7f0e00827512ade25b17b60478ebe5400744db" translate="yes" xml:space="preserve">
          <source>Setting up logging.</source>
          <target state="translated">ロギングの設定。</target>
        </trans-unit>
        <trans-unit id="70141fb124d4755c0506b6893cb2bad35ead79df" translate="yes" xml:space="preserve">
          <source>Setting up the cache</source>
          <target state="translated">キャッシュの設定</target>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">Settings</target>
        </trans-unit>
        <trans-unit id="1ef6431fd00945acd25e4e17cf80b8b03b331864" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; の&lt;/a&gt;設定。</target>
        </trans-unit>
        <trans-unit id="5ab8f58b8730735a29f68a2c21df9be9e9a29e58" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; の&lt;/a&gt;設定。</target>
        </trans-unit>
        <trans-unit id="bcc769e0a9c1072115af5f7676a8bd4ed0375aa6" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;contrib/messages#module-django.contrib.messages&quot;&gt;&lt;code&gt;django.contrib.messages&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;contrib/messages#module-django.contrib.messages&quot;&gt; &lt;code&gt;django.contrib.messages&lt;/code&gt; の&lt;/a&gt;設定。</target>
        </trans-unit>
        <trans-unit id="bb73d4327a78b5f90d8b1f65e2a61bff79df67c3" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;contrib/sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;django.contrib.sites&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;contrib/sites#module-django.contrib.sites&quot;&gt; &lt;code&gt;django.contrib.sites&lt;/code&gt; の&lt;/a&gt;設定。</target>
        </trans-unit>
        <trans-unit id="578f88ca202f7c652ff375f57c0322bb9446bbe8" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt; &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; の&lt;/a&gt;設定。</target>
        </trans-unit>
        <trans-unit id="6ed7bddfc1f699043942baf70a668acdd2fa1c1b" translate="yes" xml:space="preserve">
          <source>Settings that don&amp;rsquo;t appear in the defaults are followed by &lt;code&gt;&quot;###&quot;&lt;/code&gt;. For example, the default settings don&amp;rsquo;t define &lt;a href=&quot;settings#std:setting-ROOT_URLCONF&quot;&gt;&lt;code&gt;ROOT_URLCONF&lt;/code&gt;&lt;/a&gt;, so &lt;a href=&quot;settings#std:setting-ROOT_URLCONF&quot;&gt;&lt;code&gt;ROOT_URLCONF&lt;/code&gt;&lt;/a&gt; is followed by &lt;code&gt;&quot;###&quot;&lt;/code&gt; in the output of &lt;code&gt;diffsettings&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは表示されない設定の後には &lt;code&gt;&quot;###&quot;&lt;/code&gt; が続きます。たとえば、デフォルト設定が定義されていません&lt;a href=&quot;settings#std:setting-ROOT_URLCONF&quot;&gt; &lt;code&gt;ROOT_URLCONF&lt;/code&gt; を&lt;/a&gt;ので、&lt;a href=&quot;settings#std:setting-ROOT_URLCONF&quot;&gt; &lt;code&gt;ROOT_URLCONF&lt;/code&gt; が&lt;/a&gt;続いている &lt;code&gt;&quot;###&quot;&lt;/code&gt; の出力に &lt;code&gt;diffsettings&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="9284281561d520bb05e937f00e6da0fc53291db0" translate="yes" xml:space="preserve">
          <source>Several contrib apps include models, and some apps depend on others. Since cross-database relationships are impossible, this creates some restrictions on how you can split these models across databases:</source>
          <target state="translated">いくつかのcontribアプリにはモデルが含まれており、いくつかのアプリは他のアプリに依存しています。データベース間の相互関係は不可能なので、データベース間でこれらのモデルを分割する方法にはいくつかの制限があります。</target>
        </trans-unit>
        <trans-unit id="9344a6ba50482b25203bdb67214a869e99f0a167" translate="yes" xml:space="preserve">
          <source>Several fields that use the mixin are provided:</source>
          <target state="translated">ミキシンを使用するいくつかのフィールドが用意されています。</target>
        </trans-unit>
        <trans-unit id="4e844c425e4a9e83822ecbff02e9457714cca273" translate="yes" xml:space="preserve">
          <source>Several of Django&amp;rsquo;s built-in views are documented in &lt;a href=&quot;../topics/http/views&quot;&gt;Writing views&lt;/a&gt; as well as elsewhere in the documentation.</source>
          <target state="translated">Djangoの組み込みビューのいくつかは、ドキュメントの他の場所と同様に、&lt;a href=&quot;../topics/http/views&quot;&gt;「書き込みビュー&lt;/a&gt;」に記載されています。</target>
        </trans-unit>
        <trans-unit id="5ae897ad3c8b4b666503f4ed61afc4672e9f08f9" translate="yes" xml:space="preserve">
          <source>Several of Django&amp;rsquo;s bundled applications make use of the latter technique. For example, &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;the permissions system&lt;/code&gt;&lt;/a&gt; in Django&amp;rsquo;s authentication framework uses a &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; model with a foreign key to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt;; this lets &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; represent concepts like &amp;ldquo;can add blog entry&amp;rdquo; or &amp;ldquo;can delete news story&amp;rdquo;.</source>
          <target state="translated">Djangoにバンドルされているアプリケーションのいくつかは、後者の手法を利用しています。たとえば、Djangoの認証フレームワークの&lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;the permissions system&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;への外部キーを持つ&lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;モデルを使用しています。これにより、「ブログエントリを追加できる」や「ニュースストーリーを削除できる」などの概念を&lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;表すことができます。</target>
        </trans-unit>
        <trans-unit id="4ecfeb649f2d8e778a6c97c427db59adfa0b8bb9" translate="yes" xml:space="preserve">
          <source>Several other &lt;a href=&quot;https://mysqlclient.readthedocs.io/user_guide.html#functions-and-attributes&quot;&gt;MySQLdb connection options&lt;/a&gt; may be useful, such as &lt;code&gt;ssl&lt;/code&gt;, &lt;code&gt;init_command&lt;/code&gt;, and &lt;code&gt;sql_mode&lt;/code&gt;.</source>
          <target state="translated">いくつかの他&lt;a href=&quot;https://mysqlclient.readthedocs.io/user_guide.html#functions-and-attributes&quot;&gt;のMySQLdbの接続オプションは、&lt;/a&gt;このように、有用であり得る &lt;code&gt;ssl&lt;/code&gt; 、 &lt;code&gt;init_command&lt;/code&gt; 、及び &lt;code&gt;sql_mode&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="f32021c108dc863de8f4807de237ca3983104f57" translate="yes" xml:space="preserve">
          <source>Several third-party Django tools and packages provide the ability to &amp;ldquo;minify&amp;rdquo; HTML, CSS, and JavaScript. They remove unnecessary whitespace, newlines, and comments, and shorten variable names, and thus reduce the size of the documents that your site publishes.</source>
          <target state="translated">いくつかのサードパーティのDjangoツールおよびパッケージは、HTML、CSS、およびJavaScriptを「縮小」する機能を提供します。不要な空白、改行、コメントを削除し、変数名を短くして、サイトが公開するドキュメントのサイズを縮小します。</target>
        </trans-unit>
        <trans-unit id="f638a2e71c40d289aafac60d9b3cfbda0652523f" translate="yes" xml:space="preserve">
          <source>Short name for the application, e.g. &lt;code&gt;'admin'&lt;/code&gt;</source>
          <target state="translated">アプリケーションの短い名前、たとえば &lt;code&gt;'admin'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90c93523ff95f6469ea7fab8ffa47ed0ddc9bc0c" translate="yes" xml:space="preserve">
          <source>Shortcuts</source>
          <target state="translated">Shortcuts</target>
        </trans-unit>
        <trans-unit id="8f1975142f502df3e8d09b55af4cb0a330b81e73" translate="yes" xml:space="preserve">
          <source>Shortcuts for only computing one value</source>
          <target state="translated">1つの値のみを計算するショートカット</target>
        </trans-unit>
        <trans-unit id="9cca6eb63a90d0ef9133a6ca8e703b4fb9e07052" translate="yes" xml:space="preserve">
          <source>Should be near the bottom as it&amp;rsquo;s a last-resort type of middleware.</source>
          <target state="translated">これは、最後の手段であるミドルウェアであるため、下部にある必要があります。</target>
        </trans-unit>
        <trans-unit id="a61b6acb4a934e58af44ca35a08d08e5dd4ce1ff" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if adding an inline object is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. &lt;code&gt;obj&lt;/code&gt; is the parent object being edited or &lt;code&gt;None&lt;/code&gt; when adding a new parent.</source>
          <target state="translated">インラインオブジェクトの追加が許可されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。 &lt;code&gt;obj&lt;/code&gt; は編集中の親オブジェクト、または新しい親を追加する場合は &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4161c2b557a65c3863b16566bb470eb3ee69270a" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if adding an object is permitted, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">オブジェクトの追加が許可されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ed7867ab59f158050fb9450af380050acc73703f" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if deleting &lt;code&gt;obj&lt;/code&gt; is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. If &lt;code&gt;obj&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, should return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to indicate whether deleting objects of this type is permitted in general (e.g., &lt;code&gt;False&lt;/code&gt; will be interpreted as meaning that the current user is not permitted to delete any object of this type).</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; の削除が許可されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。 &lt;code&gt;obj&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; を返して、このタイプのオブジェクトの削除が一般的に許可されているかどうかを示します（たとえば、 &lt;code&gt;False&lt;/code&gt; は、現在のユーザーがこのタイプのオブジェクトの削除を許可されていないことを意味します）。</target>
        </trans-unit>
        <trans-unit id="39d6973541351798d6dd56aa7140384c0a5b4263" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if deleting an inline object is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. &lt;code&gt;obj&lt;/code&gt; is the parent object being edited.</source>
          <target state="translated">インラインオブジェクトの削除が許可されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。 &lt;code&gt;obj&lt;/code&gt; は編集中の親オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="86247f2a73736ffe3ef50a6443204e9742e03c0c" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if displaying the module on the admin index page and accessing the module&amp;rsquo;s index page is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. Uses &lt;a href=&quot;../auth#django.contrib.auth.models.User.has_module_perms&quot;&gt;&lt;code&gt;User.has_module_perms()&lt;/code&gt;&lt;/a&gt; by default. Overriding it does not restrict access to the view, add, change, or delete views, &lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_view_permission&quot;&gt;&lt;code&gt;has_view_permission()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_add_permission&quot;&gt;&lt;code&gt;has_add_permission()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt;&lt;code&gt;has_change_permission()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_delete_permission&quot;&gt;&lt;code&gt;has_delete_permission()&lt;/code&gt;&lt;/a&gt; should be used for that.</source>
          <target state="translated">モジュールを管理インデックスページに表示し、モジュールのインデックスページへのアクセスが許可されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。デフォルトで&lt;a href=&quot;../auth#django.contrib.auth.models.User.has_module_perms&quot;&gt; &lt;code&gt;User.has_module_perms()&lt;/code&gt; を&lt;/a&gt;使用します。これをオーバーライドしても、ビューへのアクセスは制限されず、ビューの追加、変更、削除は行われません&lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_view_permission&quot;&gt; &lt;code&gt;has_view_permission()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_add_permission&quot;&gt; &lt;code&gt;has_add_permission()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt; &lt;code&gt;has_change_permission()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_delete_permission&quot;&gt; &lt;code&gt;has_delete_permission()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="30dea5b0ad1fc4b04533c7581b96ecf171094fb5" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if editing &lt;code&gt;obj&lt;/code&gt; is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. If &lt;code&gt;obj&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, should return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to indicate whether editing of objects of this type is permitted in general (e.g., &lt;code&gt;False&lt;/code&gt; will be interpreted as meaning that the current user is not permitted to edit any object of this type).</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; の編集が許可されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。 &lt;code&gt;obj&lt;/code&gt; が &lt;code&gt;None&lt;/code&gt; の場合、 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; を返して、このタイプのオブジェクトの編集が一般的に許可されているかどうかを示します（たとえば、 &lt;code&gt;False&lt;/code&gt; は、現在のユーザーがこのタイプのオブジェクトの編集を許可されていないことを意味します）。</target>
        </trans-unit>
        <trans-unit id="ee4a81ea29e04f0e25ec548b0a554497342f5d50" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if editing an inline object is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. &lt;code&gt;obj&lt;/code&gt; is the parent object being edited.</source>
          <target state="translated">インラインオブジェクトの編集が許可されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。 &lt;code&gt;obj&lt;/code&gt; は編集中の親オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="4ab07be1e4a2f63b3d2ade3c3148c1caefa546bf" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if viewing &lt;code&gt;obj&lt;/code&gt; is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. If obj is &lt;code&gt;None&lt;/code&gt;, should return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to indicate whether viewing of objects of this type is permitted in general (e.g., &lt;code&gt;False&lt;/code&gt; will be interpreted as meaning that the current user is not permitted to view any object of this type).</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; の表示が許可されている場合は &lt;code&gt;True&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。objが &lt;code&gt;None&lt;/code&gt; の場合、このタイプのオブジェクトの表示が一般に許可されているかどうかを示すために &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; を返す必要があります（たとえば、 &lt;code&gt;False&lt;/code&gt; は、現在のユーザーがこのタイプのオブジェクトの表示を許可されていないことを意味します）。</target>
        </trans-unit>
        <trans-unit id="fa999095c9fda3e450c8cbc18a32ed1b7f128f04" translate="yes" xml:space="preserve">
          <source>Should return the actual name of name of the file saved (usually the &lt;code&gt;name&lt;/code&gt; passed in, but if the storage needs to change the file name return the new name instead).</source>
          <target state="translated">保存されたファイルの実際の名前を返す必要があります（通常は渡された &lt;code&gt;name&lt;/code&gt; ですが、ストレージでファイル名を変更する必要がある場合は、代わりに新しい名前を返します）。</target>
        </trans-unit>
        <trans-unit id="f070afee584e5151c2354a21e0889d6ff2160373" translate="yes" xml:space="preserve">
          <source>Shows all migrations in a project. You can choose from one of two formats:</source>
          <target state="translated">プロジェクト内のすべての移行を表示します。2つのフォーマットのいずれかを選択することができます。</target>
        </trans-unit>
        <trans-unit id="0c814ac75a94960d602836460f27363550ae680c" translate="yes" xml:space="preserve">
          <source>Shows the migration operations that will be performed for the given &lt;code&gt;migrate&lt;/code&gt; command.</source>
          <target state="translated">特定の &lt;code&gt;migrate&lt;/code&gt; コマンドに対して実行される移行操作を表示します。</target>
        </trans-unit>
        <trans-unit id="d2c59cc942c1446e47f0fc9957da215e262e5780" translate="yes" xml:space="preserve">
          <source>Shows the migration plan Django will follow to apply migrations. Like &lt;code&gt;--list&lt;/code&gt;, applied migrations are marked by an &lt;code&gt;[X]&lt;/code&gt;. For a &lt;code&gt;--verbosity&lt;/code&gt; of 2 and above, all dependencies of a migration will also be shown.</source>
          <target state="translated">Djangoが移行を適用するために従う移行計画を示します。 &lt;code&gt;--list&lt;/code&gt; と同様に、適用された移行は &lt;code&gt;[X]&lt;/code&gt; でマークされます。ため &lt;code&gt;--verbosity&lt;/code&gt; 2以上の、マイグレーションのすべての依存関係も示されます。</target>
        </trans-unit>
        <trans-unit id="0ecb559f1ca7e99d214210982e365a773ac40a6f" translate="yes" xml:space="preserve">
          <source>Shows what migrations would be made without actually writing any migrations files to disk. Using this option along with &lt;code&gt;--verbosity 3&lt;/code&gt; will also show the complete migrations files that would be written.</source>
          <target state="translated">実際に移行ファイルをディスクに書き込まずに行われる移行を示します。このオプションを &lt;code&gt;--verbosity 3&lt;/code&gt; とともに使用すると、書き込まれる完全な移行ファイルも表示されます。</target>
        </trans-unit>
        <trans-unit id="19a52875b93c94a58094975a230f4221b31a518b" translate="yes" xml:space="preserve">
          <source>Sign &lt;code&gt;value&lt;/code&gt; and append current timestamp to it.</source>
          <target state="translated">サイン &lt;code&gt;value&lt;/code&gt; とそれに現在のタイムスタンプを付加します。</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="2179f2424b312cba799925391bd4015c33e1c8a2" translate="yes" xml:space="preserve">
          <source>Signals are implicit function calls which make debugging harder. If the sender and receiver of your custom signal are both within your project, you&amp;rsquo;re better off using an explicit function call.</source>
          <target state="translated">シグナルは、デバッグを困難にする暗黙的な関数呼び出しです。カスタム信号の送信側と受信側の両方がプロジェクト内にある場合は、明示的な関数呼び出しを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ab2bb138d6a55597db887035bb3f8637617ba2c3" translate="yes" xml:space="preserve">
          <source>Signals only sent when &lt;a href=&quot;../topics/testing/overview#running-tests&quot;&gt;running tests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../topics/testing/overview#running-tests&quot;&gt;テストの実行&lt;/a&gt;時にのみ送信されるシグナル。</target>
        </trans-unit>
        <trans-unit id="40ca6cebaeaf523355bf260955031f58782457c6" translate="yes" xml:space="preserve">
          <source>Signals sent by &lt;a href=&quot;django-admin&quot;&gt;django-admin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;django-admin&quot;&gt;django-admin&lt;/a&gt;によって送信されるシグナル。</target>
        </trans-unit>
        <trans-unit id="2cb189a181447a9630bb12cea3a86802f018eb0f" translate="yes" xml:space="preserve">
          <source>Signals sent by the core framework when processing a request.</source>
          <target state="translated">リクエストを処理する際にコアフレームワークから送られるシグナル。</target>
        </trans-unit>
        <trans-unit id="f5ccd48fbffe6c12334095e4eac6e84f519cc03a" translate="yes" xml:space="preserve">
          <source>Signals sent by the database wrapper when a database connection is initiated.</source>
          <target state="translated">データベース接続が開始された際に、データベースラッパーによって送信されるシグナル。</target>
        </trans-unit>
        <trans-unit id="9c43d93addd3410bda3aefd8f9311efccc69e2e9" translate="yes" xml:space="preserve">
          <source>Signals that this template extends a parent template.</source>
          <target state="translated">このテンプレートが親テンプレートを拡張していることを示します。</target>
        </trans-unit>
        <trans-unit id="a8debf91f8821ef2f21b92447ce37ac3cdc5fb83" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;e.save()&lt;/code&gt; is called in the example above to perform the update. Using &lt;code&gt;remove()&lt;/code&gt; with a many-to-many relationship, however, will delete the relationships using &lt;a href=&quot;querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;QuerySet.delete()&lt;/code&gt;&lt;/a&gt; which means no model &lt;code&gt;save()&lt;/code&gt; methods are called; listen to the &lt;a href=&quot;../signals#django.db.models.signals.m2m_changed&quot;&gt;&lt;code&gt;m2m_changed&lt;/code&gt;&lt;/a&gt; signal if you wish to execute custom code when a relationship is deleted.</source>
          <target state="translated">類似&lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;e.save()&lt;/code&gt; 更新を実行するために、上記の例で呼び出されます。ただし、多対多の関係で &lt;code&gt;remove()&lt;/code&gt; を使用すると、&lt;a href=&quot;querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;QuerySet.delete()&lt;/code&gt; &lt;/a&gt;を使用して関係が削除されます。つまり、モデルの &lt;code&gt;save()&lt;/code&gt; メソッドは呼び出されません。リレーションシップが削除されたときにカスタムコードを実行する場合は、&lt;a href=&quot;../signals#django.db.models.signals.m2m_changed&quot;&gt; &lt;code&gt;m2m_changed&lt;/code&gt; &lt;/a&gt;シグナルをリッスンします。</target>
        </trans-unit>
        <trans-unit id="fa1cbf3c161c5c409bf7e9181b4519e9321e704f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.db.models.functions.LPad&quot;&gt;&lt;code&gt;LPad&lt;/code&gt;&lt;/a&gt;, but pads on the right side.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.functions.LPad&quot;&gt; &lt;code&gt;LPad&lt;/code&gt; &lt;/a&gt;に似ていますが、右側にパッドがあります。</target>
        </trans-unit>
        <trans-unit id="2f2d7cb87f39f717cf02e7843db92d0976389fd2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.db.models.functions.Trim&quot;&gt;&lt;code&gt;Trim&lt;/code&gt;&lt;/a&gt;, but removes only leading spaces.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.functions.Trim&quot;&gt; &lt;code&gt;Trim&lt;/code&gt; &lt;/a&gt;に似ていますが、先頭のスペースのみが削除されます。</target>
        </trans-unit>
        <trans-unit id="74cc060a0095d828a58c4ef3bb02b411b26a1f7f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.db.models.functions.Trim&quot;&gt;&lt;code&gt;Trim&lt;/code&gt;&lt;/a&gt;, but removes only trailing spaces.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.functions.Trim&quot;&gt; &lt;code&gt;Trim&lt;/code&gt; &lt;/a&gt;に似ていますが、末尾のスペースのみが削除されます。</target>
        </trans-unit>
        <trans-unit id="2a3fa8a9e5b4fc529d30ed1b2ec46931f0eca728" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.DateInput.format&quot;&gt;&lt;code&gt;DateInput.format&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#django.forms.DateInput.format&quot;&gt; &lt;code&gt;DateInput.format&lt;/code&gt; &lt;/a&gt;と同様</target>
        </trans-unit>
        <trans-unit id="86687c835c38a6983c5066e56cabaa07e7ea44ab" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;, but allows multiple selection: &lt;code&gt;&amp;lt;select multiple&amp;gt;...&amp;lt;/select&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;に似ていますが、複数選択が可能です： &lt;code&gt;&amp;lt;select multiple&amp;gt;...&amp;lt;/select&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44e9cf94c8a839ec893eae0ef20a63cf8b7f914d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;, but rendered as a list of radio buttons within &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tags:</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;に似ていますが、 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; タグ内のラジオボタンのリストとしてレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="83da217ea4ec6e2adc48b3c174609e5bc260d551" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.SelectMultiple&quot;&gt;&lt;code&gt;SelectMultiple&lt;/code&gt;&lt;/a&gt;, but rendered as a list of checkboxes:</source>
          <target state="translated">&lt;a href=&quot;#django.forms.SelectMultiple&quot;&gt; &lt;code&gt;SelectMultiple&lt;/code&gt; &lt;/a&gt;に似ていますが、チェックボックスのリストとしてレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="8be6852b789da8d905da912f5699d62ec9bec4f0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.SplitDateTimeWidget&quot;&gt;&lt;code&gt;SplitDateTimeWidget&lt;/code&gt;&lt;/a&gt;, but uses &lt;a href=&quot;#django.forms.HiddenInput&quot;&gt;&lt;code&gt;HiddenInput&lt;/code&gt;&lt;/a&gt; for both date and time.</source>
          <target state="translated">&lt;a href=&quot;#django.forms.SplitDateTimeWidget&quot;&gt; &lt;code&gt;SplitDateTimeWidget&lt;/code&gt; &lt;/a&gt;に似ていますが、日付と時刻の両方に&lt;a href=&quot;#django.forms.HiddenInput&quot;&gt; &lt;code&gt;HiddenInput&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="f12c7f51ba93d84b2fbfff1bd2dcd7a8dcefc91a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.TimeInput.format&quot;&gt;&lt;code&gt;TimeInput.format&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#django.forms.TimeInput.format&quot;&gt; &lt;code&gt;TimeInput.format&lt;/code&gt; &lt;/a&gt;と同様</target>
        </trans-unit>
        <trans-unit id="9e62068127fd9d1a565ef9278774b259ed68a379" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;Widget.attrs&lt;/code&gt;&lt;/a&gt;. A dictionary containing HTML attributes to be set on the rendered &lt;a href=&quot;#django.forms.DateInput&quot;&gt;&lt;code&gt;DateInput&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.TimeInput&quot;&gt;&lt;code&gt;TimeInput&lt;/code&gt;&lt;/a&gt; widgets, respectively. If these attributes aren&amp;rsquo;t set, &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;Widget.attrs&lt;/code&gt;&lt;/a&gt; is used instead.</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt; &lt;code&gt;Widget.attrs&lt;/code&gt; に&lt;/a&gt;似ています。HTMLを含む辞書は、レンダリングに設定する属性の&lt;a href=&quot;#django.forms.DateInput&quot;&gt; &lt;code&gt;DateInput&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#django.forms.TimeInput&quot;&gt; &lt;code&gt;TimeInput&lt;/code&gt; &lt;/a&gt;それぞれ、ウィジェット。これらの属性が設定されていない場合は、代わりに&lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt; &lt;code&gt;Widget.attrs&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="57babeca1dfc7f2b59a3076547e7ae730ba3f841" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#std:templatefilter-truncatechars&quot;&gt;&lt;code&gt;truncatechars&lt;/code&gt;&lt;/a&gt;, except that it is aware of HTML tags. Any tags that are opened in the string and not closed before the truncation point are closed immediately after the truncation.</source>
          <target state="translated">HTMLタグを認識することを除いて、&lt;a href=&quot;#std:templatefilter-truncatechars&quot;&gt; &lt;code&gt;truncatechars&lt;/code&gt; &lt;/a&gt;に似ています。文字列内で開かれ、切り捨てポイントの前に閉じられていないタグは、切り捨て直後に閉じられます。</target>
        </trans-unit>
        <trans-unit id="8d60844f62a755c9e5814d485768ecd7d6f7071c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#std:templatefilter-truncatewords&quot;&gt;&lt;code&gt;truncatewords&lt;/code&gt;&lt;/a&gt;, except that it is aware of HTML tags. Any tags that are opened in the string and not closed before the truncation point, are closed immediately after the truncation.</source>
          <target state="translated">&lt;a href=&quot;#std:templatefilter-truncatewords&quot;&gt; &lt;code&gt;truncatewords&lt;/code&gt; &lt;/a&gt;に似ていますが、HTMLタグを認識する点が異なります。文字列内で開かれ、切り捨てポイントの前に閉じられていないタグは、切り捨て直後に閉じられます。</target>
        </trans-unit>
        <trans-unit id="af4aca60f57e036c2360483d6887e744d8a4ec27" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot;&gt;&lt;code&gt;@classmethod&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;@classproperty&lt;/code&gt; decorator converts the result of a method with a single &lt;code&gt;cls&lt;/code&gt; argument into a property that can be accessed directly from the class.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/functions.html#classmethod&quot;&gt; &lt;code&gt;@classmethod&lt;/code&gt; &lt;/a&gt;と同様に、 &lt;code&gt;@classproperty&lt;/code&gt; デコレータは、単一の &lt;code&gt;cls&lt;/code&gt; 引数を持つメソッドの結果を、クラスから直接アクセスできるプロパティに変換します。</target>
        </trans-unit>
        <trans-unit id="c43734047a0f7462617df980c5b9d963c1c2bac7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;can_order&lt;/code&gt; this adds a new field to each form named &lt;code&gt;DELETE&lt;/code&gt; and is a &lt;code&gt;forms.BooleanField&lt;/code&gt;. When data comes through marking any of the delete fields you can access them with &lt;code&gt;deleted_forms&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;can_order&lt;/code&gt; と同様に、これは &lt;code&gt;DELETE&lt;/code&gt; という名前の各フォームに新しいフィールドを追加し、 &lt;code&gt;forms.BooleanField&lt;/code&gt; です。データが削除フィールドのいずれかをマークすることで &lt;code&gt;deleted_forms&lt;/code&gt; と、deleted_formsでそれらにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="e7c0b6c216844d97be2d95b352619e1d1253a278" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;escape()&lt;/code&gt;, except that it doesn&amp;rsquo;t operate on pre-escaped strings, so it will not double escape.</source>
          <target state="translated">&lt;code&gt;escape()&lt;/code&gt; に似ていますが、事前にエスケープされた文字列を操作しないため、ダブルエスケープしません。</target>
        </trans-unit>
        <trans-unit id="675cbd53aa99e7bee2d89a46281338c2599a64e5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;smart_bytes&lt;/code&gt;, except that lazy instances are resolved to bytestrings, rather than kept as lazy objects.</source>
          <target state="translated">遅延インスタンスが遅延オブジェクトとして保持されるのではなく、バイト文字列に解決されることを除いて、 &lt;code&gt;smart_bytes&lt;/code&gt; と同様です。</target>
        </trans-unit>
        <trans-unit id="104947765387dcd948510330bf9e19346561b89d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;smart_str()&lt;/code&gt;, except that lazy instances are resolved to strings, rather than kept as lazy objects.</source>
          <target state="translated">&lt;code&gt;smart_str()&lt;/code&gt; と同様ですが、遅延インスタンスは遅延オブジェクトとして保持されるのではなく、文字列に解決されます。</target>
        </trans-unit>
        <trans-unit id="a9d81697914896bfa780cd919e1bbbcfbf5563b7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;timesince&lt;/code&gt;, except that it measures the time from now until the given date or datetime. For example, if today is 1 June 2006 and &lt;code&gt;conference_date&lt;/code&gt; is a date instance holding 29 June 2006, then &lt;code&gt;{{ conference_date|timeuntil }}&lt;/code&gt; will return &amp;ldquo;4 weeks&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;timesince&lt;/code&gt; と同様ですが、現在から指定された日付または日時までの時間を測定する点が異なります。たとえば、今日が2006年6月1日で、 &lt;code&gt;conference_date&lt;/code&gt; が2006年6月29日を保持する日付インスタンスである場合、 &lt;code&gt;{{ conference_date|timeuntil }}&lt;/code&gt; は「4週間」を返します。</target>
        </trans-unit>
        <trans-unit id="8e3ebafc9aa514a1a16623ae6016856389dcbe23" translate="yes" xml:space="preserve">
          <source>Similar to the &amp;ldquo;references to historical functions&amp;rdquo; considerations described in the previous section, removing custom model fields from your project or third-party app will cause a problem if they are referenced in old migrations.</source>
          <target state="translated">前のセクションで説明した「履歴関数への参照」の考慮事項と同様に、プロジェクトまたはサードパーティアプリからカスタムモデルフィールドを削除すると、それらが古い移行で参照されている場合に問題が発生します。</target>
        </trans-unit>
        <trans-unit id="cab700196b96532cbd0627273bb50c3753e69207" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#std:templatetag-get_static_prefix&quot;&gt;&lt;code&gt;get_static_prefix&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;get_media_prefix&lt;/code&gt; populates a template variable with the media prefix &lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt;, e.g.:</source>
          <target state="translated">同様に&lt;a href=&quot;#std:templatetag-get_static_prefix&quot;&gt; &lt;code&gt;get_static_prefix&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;get_media_prefix&lt;/code&gt; メディアプレフィックス移入さAテンプレート変数&lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;、例えば：</target>
        </trans-unit>
        <trans-unit id="04e23fd6396b222e17a5d7007a450f9ef70e78a6" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;../ref/csrf#csrf-limitations&quot;&gt;CSRF limitations&lt;/a&gt; requiring a site to be deployed such that untrusted users don&amp;rsquo;t have access to any subdomains, &lt;a href=&quot;http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt; also has limitations. See &lt;a href=&quot;http/sessions#topics-session-security&quot;&gt;the session topic guide section on security&lt;/a&gt; for details.</source>
          <target state="translated">信頼できないユーザーがサブドメインにアクセスできないようにサイトをデプロイする必要がある&lt;a href=&quot;../ref/csrf#csrf-limitations&quot;&gt;CSRFの制限&lt;/a&gt;と同様に、&lt;a href=&quot;http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; に&lt;/a&gt;も制限があります。詳細について&lt;a href=&quot;http/sessions#topics-session-security&quot;&gt;は、セキュリティに関するセッショントピックガイドのセクション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fe72a5c5994b330128a039d3b6c0b3fe40f9753f" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;remove()&lt;/code&gt; also accepts the field the relation points to as an argument. The above example can be rewritten as &lt;code&gt;b.entry_set.remove(234)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;と同様に、 &lt;code&gt;remove()&lt;/code&gt; も、関係が指すフィールドを引数として受け入れます。上記の例は、 &lt;code&gt;b.entry_set.remove(234)&lt;/code&gt; として書き直すことができます。</target>
        </trans-unit>
        <trans-unit id="9553ed920ea1657b2512210340abf2c38973a382" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;set()&lt;/code&gt; also accepts the field the relation points to as an argument. The above example can be rewritten as &lt;code&gt;e.related_set.set([obj1.pk, obj2.pk, obj3.pk])&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;と同様に、 &lt;code&gt;set()&lt;/code&gt; は、関係が指すフィールドを引数として受け入れます。上記の例は、 &lt;code&gt;e.related_set.set([obj1.pk, obj2.pk, obj3.pk])&lt;/code&gt; ように書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="58082351132ca5fbd7c5b85008ef996f6c70f3bf" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;a href=&quot;../models/querysets&quot;&gt;QuerySets&lt;/a&gt; provide a &lt;code&gt;count()&lt;/code&gt; method to count the number of objects they contain. Therefore, you can obtain a count of all comments related to the current task with:</source>
          <target state="translated">同様に、&lt;a href=&quot;../models/querysets&quot;&gt;QuerySetに&lt;/a&gt;は、含まれているオブジェクトの数をカウントする &lt;code&gt;count()&lt;/code&gt; メソッドが用意されています。したがって、次のコマンドを使用すると、現在のタスクに関連するすべてのコメントの数を取得できます。</target>
        </trans-unit>
        <trans-unit id="ab42ac8e63f0adecab040af094dd1273f9a98206" translate="yes" xml:space="preserve">
          <source>Similarly, Django executes special-case behavior in the case of runtime errors in view code. If a view results in an exception, Django will, by default, call the view &lt;code&gt;django.views.defaults.server_error&lt;/code&gt;, which either produces a &amp;ldquo;Server Error&amp;rdquo; message or loads and renders the template &lt;code&gt;500.html&lt;/code&gt; if you created it in your root template directory.</source>
          <target state="translated">同様に、Djangoはビューコードでランタイムエラーが発生した場合に、特殊なケースの動作を実行します。ビューで例外が発生した場合、Djangoはデフォルトでビュー &lt;code&gt;django.views.defaults.server_error&lt;/code&gt; を呼び出します。これにより、「サーバーエラー」メッセージが生成されるか、ルートに作成した場合はテンプレート &lt;code&gt;500.html&lt;/code&gt; が読み込まれてレンダリングされます。テンプレートディレクトリ。</target>
        </trans-unit>
        <trans-unit id="7309a92ee9e1847fd539b0dc080e4438970672c6" translate="yes" xml:space="preserve">
          <source>Similarly, Django provides &lt;a href=&quot;utils#django.utils.encoding.uri_to_iri&quot;&gt;&lt;code&gt;django.utils.encoding.uri_to_iri()&lt;/code&gt;&lt;/a&gt; which implements the conversion from URI to IRI as per &lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.2&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3987#section-3.2&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">同様に、Djangoは&lt;a href=&quot;utils#django.utils.encoding.uri_to_iri&quot;&gt; &lt;code&gt;django.utils.encoding.uri_to_iri()&lt;/code&gt; &lt;/a&gt;を提供します。これは、&lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.2&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3987＃section-3.2&lt;/strong&gt;&lt;/a&gt;に従ってURIからIRIへの変換を実装します。</target>
        </trans-unit>
        <trans-unit id="9b46683a15d3fc53bd17f3bbea3cbbdfdba9c0a5" translate="yes" xml:space="preserve">
          <source>Similarly, Django provides &lt;a href=&quot;utils#django.utils.encoding.uri_to_iri&quot;&gt;&lt;code&gt;django.utils.encoding.uri_to_iri()&lt;/code&gt;&lt;/a&gt; which implements the conversion from URI to IRI as per &lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.2&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 3987#section-3.2&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">同様に、Djangoは、&lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.2&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 3987＃section-3.2&lt;/strong&gt;&lt;/a&gt;に従ってURIからIRIへの変換を実装する&lt;a href=&quot;utils#django.utils.encoding.uri_to_iri&quot;&gt; &lt;code&gt;django.utils.encoding.uri_to_iri()&lt;/code&gt; &lt;/a&gt;を提供します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0370e41c8b95e4467e55ee8c314289169a65fe99" translate="yes" xml:space="preserve">
          <source>Similarly, Django will complain if more than one item matches the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; query. In this case, it will raise &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt;&lt;code&gt;MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt;, which again is an attribute of the model class itself.</source>
          <target state="translated">同様に、Djangoは複数のアイテムが&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;クエリに一致する場合に文句を言います。この場合、モデルクラス自体の属性である&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt; &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="863cdc071865bede461e047fe7e658383bf41fc8" translate="yes" xml:space="preserve">
          <source>Similarly, a couple of other bits of Django, such as the &lt;a href=&quot;../contrib/syndication&quot;&gt;syndication feed framework&lt;/a&gt;, use &lt;code&gt;get_absolute_url()&lt;/code&gt; when it is defined. If it makes sense for your model&amp;rsquo;s instances to each have a unique URL, you should define &lt;code&gt;get_absolute_url()&lt;/code&gt;.</source>
          <target state="translated">同様に、&lt;a href=&quot;../contrib/syndication&quot;&gt;シンジケーションフィードフレームワーク&lt;/a&gt;など、Djangoの他のいくつかのビットは、定義時に &lt;code&gt;get_absolute_url()&lt;/code&gt; を使用します。モデルのインスタンスがそれぞれ一意のURLを持つことが理にかなっている場合は、 &lt;code&gt;get_absolute_url()&lt;/code&gt; を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="2462d3488df835366d0db331efbf07cddf80050a" translate="yes" xml:space="preserve">
          <source>Similarly, data that can&amp;rsquo;t be encoded in JSON, such as non-UTF8 bytes like &lt;code&gt;'\xd9'&lt;/code&gt; (which raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#UnicodeDecodeError&quot;&gt;&lt;code&gt;UnicodeDecodeError&lt;/code&gt;&lt;/a&gt;), can&amp;rsquo;t be stored.</source>
          <target state="translated">同様に、 &lt;code&gt;'\xd9'&lt;/code&gt; （&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#UnicodeDecodeError&quot;&gt; &lt;code&gt;UnicodeDecodeError&lt;/code&gt; が発生する&lt;/a&gt;）などの非UTF8バイトなど、JSONでエンコードできないデータは保存できません。</target>
        </trans-unit>
        <trans-unit id="31549e7b497ca81d9266efabccd6ec6cb1627e42" translate="yes" xml:space="preserve">
          <source>Similarly, fields defined declaratively do not draw their attributes like &lt;code&gt;max_length&lt;/code&gt; or &lt;code&gt;required&lt;/code&gt; from the corresponding model. If you want to maintain the behavior specified in the model, you must set the relevant arguments explicitly when declaring the form field.</source>
          <target state="translated">同様に、宣言的に定義されたフィールドは、 &lt;code&gt;max_length&lt;/code&gt; のような属性や、対応するモデルからの &lt;code&gt;required&lt;/code&gt; 属性を描画しません。モデルで指定された動作を維持したい場合は、フォームフィールドを宣言するときに、関連する引数を明示的に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="3df71fc13d5b3c7c28086a01df560e69297478d0" translate="yes" xml:space="preserve">
          <source>Similarly, if the formset has the ability to order (&lt;code&gt;can_order=True&lt;/code&gt;), it is possible to render it with &lt;code&gt;{{ form.ORDER }}&lt;/code&gt;.</source>
          <target state="translated">同様に、 &lt;code&gt;can_order=True&lt;/code&gt; 機能（can_order = True）がある場合は、 &lt;code&gt;{{ form.ORDER }}&lt;/code&gt; を使用してレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="e9c1cf066eef5d91c3032554bf1a989ef032d3e0" translate="yes" xml:space="preserve">
          <source>Similarly, if you use a &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; query to restrict the columns selected, the columns used in any &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; (or default model ordering) will still be involved and may affect uniqueness of the results.</source>
          <target state="translated">同様に、&lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;クエリを使用して選択した列を制限する場合、&lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt;（またはデフォルトのモデルの順序）で使用される列は引き続き関与し、結果の一意性に影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="16b6163ccb8f756325cb9dd4a0f11f0685539186" translate="yes" xml:space="preserve">
          <source>Similarly, on Red Hat and CentOS systems:</source>
          <target state="translated">同様に、Red HatやCentOSシステムでも。</target>
        </trans-unit>
        <trans-unit id="36d7d9012aa3409f16056b841d47286ba62926f1" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; generic view uses a default template called &lt;code&gt;&amp;lt;app name&amp;gt;/&amp;lt;model
name&amp;gt;_list.html&lt;/code&gt;; we use &lt;code&gt;template_name&lt;/code&gt; to tell &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; to use our existing &lt;code&gt;&quot;polls/index.html&quot;&lt;/code&gt; template.</source>
          <target state="translated">同様に、&lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;ジェネリックビューは、 &lt;code&gt;&amp;lt;app name&amp;gt;/&amp;lt;model name&amp;gt;_list.html&lt;/code&gt; というデフォルトのテンプレートを使用します。 &lt;code&gt;template_name&lt;/code&gt; を使用して、既存の &lt;code&gt;&quot;polls/index.html&quot;&lt;/code&gt; テンプレートを使用するように&lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;ListView&lt;/code&gt; &lt;/a&gt;に指示します。</target>
        </trans-unit>
        <trans-unit id="87e7d0bbf6a707473314126f03169984f6a24c7e" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;expires&lt;/code&gt; part of a session cookie is updated each time the session cookie is sent.</source>
          <target state="translated">同様に、セッションCookieの &lt;code&gt;expires&lt;/code&gt; 部分は、セッションCookieが送信されるたびに更新されます。</target>
        </trans-unit>
        <trans-unit id="cffac2418d6640b3199498de3b14a18222fe7de6" translate="yes" xml:space="preserve">
          <source>Similarly, the current effective level can be retrieved with &lt;code&gt;get_level&lt;/code&gt;:</source>
          <target state="translated">同様に、現在の有効レベルは &lt;code&gt;get_level&lt;/code&gt; で取得できます。</target>
        </trans-unit>
        <trans-unit id="40e6c77873921e5941f690411854f1258bcf763d" translate="yes" xml:space="preserve">
          <source>Similarly, what if the name contained a &lt;code&gt;'&amp;lt;'&lt;/code&gt; symbol, like this?</source>
          <target state="translated">同様に、名前に &lt;code&gt;'&amp;lt;'&lt;/code&gt; 記号が含まれている場合はどうなりますか？</target>
        </trans-unit>
        <trans-unit id="e5855f571b87eeca52e71d5d3cdfe1be2b4b7077" translate="yes" xml:space="preserve">
          <source>Similarly, when querying a reverse foreign key, &lt;code&gt;None&lt;/code&gt; appears for entries not having any author:</source>
          <target state="translated">同様に、逆外部キーをクエリする場合、作成者がいないエントリには &lt;code&gt;None&lt;/code&gt; が表示されます。</target>
        </trans-unit>
        <trans-unit id="29662e616beed5aff4427d7439c1d3cc2f18696d" translate="yes" xml:space="preserve">
          <source>Similarly, you can associate a model to the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; model in a many-to-one relationship, using &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">同様に、&lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;を使用して、多対1の関係でモデルを&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;モデルに関連付けることができます。</target>
        </trans-unit>
        <trans-unit id="f4740361937f4c5fe6f7b908f9d221f12c914f70" translate="yes" xml:space="preserve">
          <source>Similarly, you can pass extra options to &lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; and each line in the included URLconf will be passed the extra options.</source>
          <target state="translated">同様に、&lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; に&lt;/a&gt;追加のオプションを渡すことができ、インクルードされたURLconfの各行に追加のオプションが渡されます。</target>
        </trans-unit>
        <trans-unit id="8fcdd1bd18644200f83cfc979025b7ab1f51e135" translate="yes" xml:space="preserve">
          <source>Similarly, you can specify the &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;help_texts&lt;/code&gt; and &lt;code&gt;error_messages&lt;/code&gt; attributes of the inner &lt;code&gt;Meta&lt;/code&gt; class if you want to further customize a field.</source>
          <target state="translated">同様に、フィールドをさらにカスタマイズする場合は、内部 &lt;code&gt;Meta&lt;/code&gt; クラスの &lt;code&gt;labels&lt;/code&gt; 、 &lt;code&gt;help_texts&lt;/code&gt; 、および &lt;code&gt;error_messages&lt;/code&gt; 属性を指定できます。</target>
        </trans-unit>
        <trans-unit id="760873c6c6dd35108a40595027a1a2bd00967ac7" translate="yes" xml:space="preserve">
          <source>Similarly, you may also use a &lt;a href=&quot;geos&quot;&gt;GEOS geometry object&lt;/a&gt;. Here, you can combine the &lt;code&gt;intersects&lt;/code&gt; spatial lookup with the &lt;code&gt;get&lt;/code&gt; method to retrieve only the &lt;code&gt;WorldBorder&lt;/code&gt; instance for San Marino instead of a queryset:</source>
          <target state="translated">同様に、&lt;a href=&quot;geos&quot;&gt;GEOSジオメトリオブジェクト&lt;/a&gt;も使用できます。ここでは、 &lt;code&gt;intersects&lt;/code&gt; 空間ルックアップを &lt;code&gt;get&lt;/code&gt; メソッドと組み合わせて、 &lt;code&gt;WorldBorder&lt;/code&gt; 代わりにSan MarinoのWorldBorderインスタンスのみを取得できます。</target>
        </trans-unit>
        <trans-unit id="192f4c5f953da1f0bc1388e180060f223750055d" translate="yes" xml:space="preserve">
          <source>Simple &lt;a href=&quot;clickjacking&quot;&gt;clickjacking protection via the X-Frame-Options header&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;clickjacking&quot;&gt;X-Frame-Optionsヘッダーによる&lt;/a&gt;単純なクリックジャッキング保護。</target>
        </trans-unit>
        <trans-unit id="035bc3518e9f7fc7ce3973464ef2da2d5821df05" translate="yes" xml:space="preserve">
          <source>Simple generic views</source>
          <target state="translated">シンプルな汎用ビュー</target>
        </trans-unit>
        <trans-unit id="f2ea1bd98e1f60def5d83b35553729cf8dd4d635" translate="yes" xml:space="preserve">
          <source>Simple mixins</source>
          <target state="translated">シンプルなミックスイン</target>
        </trans-unit>
        <trans-unit id="15e2b2dfed090dfaf7096a0e39ab3255342015ba" translate="yes" xml:space="preserve">
          <source>Simple tags</source>
          <target state="translated">シンプルなタグ</target>
        </trans-unit>
        <trans-unit id="779b02c0b6d50c53e776d75100e90b8e12bff632" translate="yes" xml:space="preserve">
          <source>Simplistically, it defines the look-and-feel of the site (with the site&amp;rsquo;s logo), and provides &amp;ldquo;holes&amp;rdquo; for child templates to fill. This means that a site redesign can be done by changing a single file &amp;ndash; the base template.</source>
          <target state="translated">簡単に言えば、サイトのルックアンドフィール（サイトのロゴを含む）を定義し、子テンプレートを埋めるための「穴」を提供します。つまり、単一のファイル（基本テンプレート）を変更することで、サイトの再設計を行うことができます。</target>
        </trans-unit>
        <trans-unit id="0315b60e56c0c1db548469ca700923652642fead" translate="yes" xml:space="preserve">
          <source>Simply printing the queryset will not populate the cache. This is because the call to &lt;code&gt;__repr__()&lt;/code&gt; only returns a slice of the entire queryset.</source>
          <target state="translated">クエリセットを印刷するだけでは、キャッシュは読み込まれません。これは、 &lt;code&gt;__repr__()&lt;/code&gt; への呼び出しがクエリセット全体のスライスのみを返すためです。</target>
        </trans-unit>
        <trans-unit id="2b93436ff6e66c39bf0d060498ee85041461a83b" translate="yes" xml:space="preserve">
          <source>Simulate GET and POST requests on a URL and observe the response &amp;ndash; everything from low-level HTTP (result headers and status codes) to page content.</source>
          <target state="translated">URLでGETおよびPOSTリクエストをシミュレートし、低レベルのHTTP（結果ヘッダーとステータスコード）からページコンテンツまでのすべての応答を観察します。</target>
        </trans-unit>
        <trans-unit id="8b1c153b32cf49009a13cff0456fb3b53310f701" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t emitted after flushing the database, its state after a &lt;code&gt;TransactionTestCase&lt;/code&gt; isn&amp;rsquo;t the same as after a &lt;code&gt;TestCase&lt;/code&gt;: it&amp;rsquo;s missing the rows created by listeners to &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt;. Considering the &lt;a href=&quot;overview#order-of-tests&quot;&gt;order in which tests are executed&lt;/a&gt;, this isn&amp;rsquo;t an issue, provided either all &lt;code&gt;TransactionTestCase&lt;/code&gt; in a given test suite declare &lt;code&gt;available_apps&lt;/code&gt;, or none of them.</source>
          <target state="translated">データベースをフラッシュした後は&lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; &lt;/a&gt;が発行されないため、 &lt;code&gt;TransactionTestCase&lt;/code&gt; の後の状態は &lt;code&gt;TestCase&lt;/code&gt; の後と同じではなく、&lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; の&lt;/a&gt;リスナーによって作成された行が欠落しています。&lt;a href=&quot;overview#order-of-tests&quot;&gt;テストが実行される順序を&lt;/a&gt;考えると、これは問題ではありません。特定のテストスイートのすべての &lt;code&gt;TransactionTestCase&lt;/code&gt; で &lt;code&gt;available_apps&lt;/code&gt; が宣言されているか、どれも宣言されていない場合に限ります。</target>
        </trans-unit>
        <trans-unit id="3a1e67dbe24ebfa3b05906bfbd247b2bf8d3c8a2" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;../topics/i18n/translation&quot;&gt;translation&lt;/a&gt; is turned on by default, if you set &lt;a href=&quot;../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt;, the login screen will be displayed in the given language (if Django has appropriate translations).</source>
          <target state="translated">&lt;a href=&quot;../topics/i18n/translation&quot;&gt;翻訳&lt;/a&gt;はデフォルトでオンになっているため、&lt;a href=&quot;../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt;を設定すると、ログイン画面が指定された言語で表示されます（Djangoに適切な翻訳がある場合）。</target>
        </trans-unit>
        <trans-unit id="faa3f22f5bc395edb16aad24d86e0bb910f57102" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;../topics/i18n/translation&quot;&gt;translation&lt;/a&gt; is turned on by default, the login screen may be displayed in your own language, depending on your browser&amp;rsquo;s settings and if Django has a translation for this language.</source>
          <target state="translated">&lt;a href=&quot;../topics/i18n/translation&quot;&gt;翻訳&lt;/a&gt;はデフォルトでオンになっているため、ブラウザの設定やDjangoがこの言語の翻訳を持っているかどうかによっては、ログイン画面があなたの言語で表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="73ec3997a306a3a984f277646297741715a71fc3" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt; is based on &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;, updating your site to use a new secret will invalidate all existing sessions.</source>
          <target state="translated">以来&lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt; &lt;code&gt;get_session_auth_hash()&lt;/code&gt; &lt;/a&gt;に基づいています&lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;、すべての既存のセッションを無効にする新しい秘密を使用するようにあなたのサイトを更新し、。</target>
        </trans-unit>
        <trans-unit id="ad1238e3c1f23afc0fbbb564862f28d3935d589b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Aggregate&lt;/code&gt;s are expressions and wrap expressions, you can represent some complex computations:</source>
          <target state="translated">以来 &lt;code&gt;Aggregate&lt;/code&gt; sが表現やラップ式があり、あなたはいくつかの複雑な計算を表すことができます。</target>
        </trans-unit>
        <trans-unit id="5cb9645e3feabbc26190192e8ba50904e0bdb5cd" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;DateField&lt;/code&gt;s don&amp;rsquo;t have a time component, only &lt;code&gt;Extract&lt;/code&gt; subclasses that deal with date-parts can be used with &lt;code&gt;DateField&lt;/code&gt;:</source>
          <target state="translated">以来 &lt;code&gt;DateField&lt;/code&gt; Sは時間コンポーネントを持っていない、唯一の &lt;code&gt;Extract&lt;/code&gt; 日付部品との契約をして使用することができることを、サブクラス &lt;code&gt;DateField&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b1a21a54714a8c3fb4ec990884dc6dbb8e0b0066" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;DateField&lt;/code&gt;s don&amp;rsquo;t have a time component, only &lt;code&gt;Trunc&lt;/code&gt; subclasses that deal with date-parts can be used with &lt;code&gt;DateField&lt;/code&gt;:</source>
          <target state="translated">以来 &lt;code&gt;DateField&lt;/code&gt; sが、唯一の時間コンポーネントを持たない &lt;code&gt;Trunc&lt;/code&gt; 日付部分との契約をして使用することができることを、サブクラス &lt;code&gt;DateField&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d1ab2ba6f0139da4e0475599769ce4cacb2d3377" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;TimeField&lt;/code&gt;s don&amp;rsquo;t have a date component, only &lt;code&gt;Trunc&lt;/code&gt; subclasses that deal with time-parts can be used with &lt;code&gt;TimeField&lt;/code&gt;:</source>
          <target state="translated">以来 &lt;code&gt;TimeField&lt;/code&gt; sが、唯一の日付コンポーネントを持たない &lt;code&gt;Trunc&lt;/code&gt; 時間-部品との契約をして使用することができることをサブクラス &lt;code&gt;TimeField&lt;/code&gt; を：</target>
        </trans-unit>
        <trans-unit id="daef13f67a99d7a878cec548548eac1ff57e9ae4" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;defer()&lt;/code&gt; acts incrementally (adding fields to the deferred list), you can combine calls to &lt;code&gt;only()&lt;/code&gt; and &lt;code&gt;defer()&lt;/code&gt; and things will behave logically:</source>
          <target state="translated">&lt;code&gt;defer()&lt;/code&gt; は段階的に機能するため（遅延リストにフィールドを追加）、 &lt;code&gt;only()&lt;/code&gt; と &lt;code&gt;defer()&lt;/code&gt; への呼び出しを組み合わせることができ、物事は論理的に動作します。</target>
        </trans-unit>
        <trans-unit id="240288c7b51585d5a2ecc74a808eea5e72ff479d" translate="yes" xml:space="preserve">
          <source>Since Django was first released with the &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;'America/Chicago'&lt;/code&gt;, the global setting (used if nothing is defined in your project&amp;rsquo;s &lt;code&gt;settings.py&lt;/code&gt;) remains &lt;code&gt;'America/Chicago'&lt;/code&gt; for backwards compatibility. New project templates default to &lt;code&gt;'UTC'&lt;/code&gt;.</source>
          <target state="translated">Djangoは最初に&lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;'America/Chicago'&lt;/code&gt; に設定してリリースされたため、グローバル設定（プロジェクトの &lt;code&gt;settings.py&lt;/code&gt; で何も定義されていない場合に使用）は、下位互換性 &lt;code&gt;'America/Chicago'&lt;/code&gt; ために'America / Chicago'のままです。新しいプロジェクトテンプレートのデフォルトは &lt;code&gt;'UTC'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dd79b65f2ad2a31c4a51930692e7147f5912aa23" translate="yes" xml:space="preserve">
          <source>Since QuerySets are lazy, this does no database queries if &amp;lsquo;display_inbox&amp;rsquo; is False.</source>
          <target state="translated">QuerySetは遅延しているため、「display_inbox」がFalseの場合、データベースクエリは実行されません。</target>
        </trans-unit>
        <trans-unit id="172c0c3e99cfb346c9d365d3563bea027f83d597" translate="yes" xml:space="preserve">
          <source>Since a &lt;code&gt;Func&lt;/code&gt;&amp;rsquo;s keyword arguments for &lt;code&gt;__init__()&lt;/code&gt; (&lt;code&gt;**extra&lt;/code&gt;) and &lt;code&gt;as_sql()&lt;/code&gt; (&lt;code&gt;**extra_context&lt;/code&gt;) are interpolated into the SQL string rather than passed as query parameters (where the database driver would escape them), they must not contain untrusted user input.</source>
          <target state="translated">以来 &lt;code&gt;Func&lt;/code&gt; のためのキーワード引数 &lt;code&gt;__init__()&lt;/code&gt; （ &lt;code&gt;**extra&lt;/code&gt; ）と &lt;code&gt;as_sql()&lt;/code&gt; （ &lt;code&gt;**extra_context&lt;/code&gt; の値が）SQL文字列に補間ではなく、（データベースドライバがそれらをエスケープする場所）クエリパラメータとして渡され、彼らはいけません信頼できないユーザー入力を含む。</target>
        </trans-unit>
        <trans-unit id="e5f69f717fb88e9e7d2709ab3c11438829844e07" translate="yes" xml:space="preserve">
          <source>Since all &lt;code&gt;Field&lt;/code&gt; subclasses have &lt;code&gt;required=True&lt;/code&gt; by default, the validation condition here is important. If you want to include a boolean in your form that can be either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; (e.g. a checked or unchecked checkbox), you must remember to pass in &lt;code&gt;required=False&lt;/code&gt; when creating the &lt;code&gt;BooleanField&lt;/code&gt;.</source>
          <target state="translated">すべての &lt;code&gt;Field&lt;/code&gt; サブクラスにはデフォルトで &lt;code&gt;required=True&lt;/code&gt; があるため、ここでの検証条件は重要です。 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; にすることができるブール値（たとえば、チェック済みまたは未チェックのチェックボックス）を &lt;code&gt;BooleanField&lt;/code&gt; 場合は、BooleanFieldを作成するときに &lt;code&gt;required=False&lt;/code&gt; を渡すことを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="dc54ca6f45a12fcedfe3d52590e22a728a1bd717" translate="yes" xml:space="preserve">
          <source>Since any string could be a key in a JSON object, any lookup other than those listed below will be interpreted as a key lookup. No errors are raised. Be extra careful for typing mistakes, and always check your queries work as you intend.</source>
          <target state="translated">JSONオブジェクト内の任意の文字列がキーになる可能性があるため、以下にリストアップされたもの以外のルックアップはキールックアップと解釈されます。エラーは発生しません。入力ミスには特に注意し、常に意図した通りにクエリが動作することを確認してください。</target>
        </trans-unit>
        <trans-unit id="621a1c621f0bbe09a57200c015bf93156fd04e22" translate="yes" xml:space="preserve">
          <source>Since any string could be a key in a hstore value, any lookup other than those listed below will be interpreted as a key lookup. No errors are raised. Be extra careful for typing mistakes, and always check your queries work as you intend.</source>
          <target state="translated">どんな文字列でもhstore値のキーになり得るので、以下にリストアップされたもの以外のルックアップはキールックアップと解釈されます。エラーは発生しません。入力ミスには特に注意し、常に意図した通りにクエリが動作することを確認してください。</target>
        </trans-unit>
        <trans-unit id="267b191c4f9ae19b2d34ad0481c1fb674cfebe65" translate="yes" xml:space="preserve">
          <source>Since creating the MD5 hash can be a performance burden to your website during runtime, &lt;code&gt;staticfiles&lt;/code&gt; will automatically store the mapping with hashed names for all processed files in a file called &lt;code&gt;staticfiles.json&lt;/code&gt;. This happens once when you run the &lt;a href=&quot;#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command.</source>
          <target state="translated">MD5ハッシュを作成すると、実行時にWebサイトのパフォーマンスが低下する可能性があるため、 &lt;code&gt;staticfiles&lt;/code&gt; はすべての処理済みファイルのハッシュ名を含むマッピングを &lt;code&gt;staticfiles.json&lt;/code&gt; というファイルに自動的に保存します。これは、&lt;a href=&quot;#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;管理コマンドを実行すると1回発生します。</target>
        </trans-unit>
        <trans-unit id="53586df0fd0f1952173d60b0a403ff1c0c6ad92b" translate="yes" xml:space="preserve">
          <source>Since each thread maintains its own connection, your database must support at least as many simultaneous connections as you have worker threads.</source>
          <target state="translated">各スレッドが独自の接続を保持しているので、データベースはワーカースレッドと同じくらいの数の同時接続をサポートしなければなりません。</target>
        </trans-unit>
        <trans-unit id="e3b3be76ab62b3ee1076c3dc6523e940a85a35e9" translate="yes" xml:space="preserve">
          <source>Since environment variables are process-wide, this doesn&amp;rsquo;t work when you run multiple Django sites in the same process. This happens with mod_wsgi.</source>
          <target state="translated">環境変数はプロセス全体にわたるため、同じプロセスで複数のDjangoサイトを実行する場合、これは機能しません。これはmod_wsgiで発生します。</target>
        </trans-unit>
        <trans-unit id="65e11fb951839a00a6f59ef404c6085b7b62928e" translate="yes" xml:space="preserve">
          <source>Since it can become a bit cumbersome to define this URL pattern, Django ships with a small URL helper function &lt;a href=&quot;urls#django.conf.urls.static.static&quot;&gt;&lt;code&gt;static()&lt;/code&gt;&lt;/a&gt; that takes as parameters the prefix such as &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; and a dotted path to a view, such as &lt;code&gt;'django.views.static.serve'&lt;/code&gt;. Any other function parameter will be transparently passed to the view.</source>
          <target state="translated">このURLパターンを定義するのは少し面倒になる可能性があるため、Djangoには、&lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;などのプレフィックスと &lt;code&gt;'django.views.static.serve'&lt;/code&gt; などのビューへのドット付きパスをパラメーターとして取る小さなURLヘルパー関数&lt;a href=&quot;urls#django.conf.urls.static.static&quot;&gt; &lt;code&gt;static()&lt;/code&gt; &lt;/a&gt;が付属しています。サーブ」。その他の関数パラメーターは、ビューに透過的に渡されます。</target>
        </trans-unit>
        <trans-unit id="e3694b6589835e6030ff9bac5e64cc188f769b05" translate="yes" xml:space="preserve">
          <source>Since keeping multiple authentication databases in sync is a common problem when dealing with Apache, you can configure Apache to authenticate against Django&amp;rsquo;s &lt;a href=&quot;../../../topics/auth/index&quot;&gt;authentication system&lt;/a&gt; directly. This requires Apache version &amp;gt;= 2.2 and mod_wsgi &amp;gt;= 2.0. For example, you could:</source>
          <target state="translated">複数の認証データベースの同期を維持することは、Apacheを扱う際の一般的な問題であるため、Djangoの&lt;a href=&quot;../../../topics/auth/index&quot;&gt;認証システム&lt;/a&gt;に対して直接認証するようにApacheを構成できます。これには、Apacheバージョン&amp;gt; = 2.2およびmod_wsgi&amp;gt; = 2.0が必要です。たとえば、次のことができます。</target>
        </trans-unit>
        <trans-unit id="033dea3e6e8d5dd2bfdb7785be7eb322d915dce9" translate="yes" xml:space="preserve">
          <source>Since most engines load templates from files, the top-level configuration for each engine contains two common settings:</source>
          <target state="translated">ほとんどのエンジンはファイルからテンプレートをロードするため、各エンジンのトップレベル設定には2つの共通の設定が含まれています。</target>
        </trans-unit>
        <trans-unit id="97f81aa179db91abb18c1735c1b2d764c37b593d" translate="yes" xml:space="preserve">
          <source>Since ordering is delegated to the database, results on fields that allow null values may be ordered differently if you use different databases. For example, PostgreSQL and MySQL sort null values as if they are higher than non-null values, while SQLite does the opposite.</source>
          <target state="translated">順序はデータベースに委譲されているため、異なるデータベースを使用している場合、NULL値を許可しているフィールドの結果は異なる順序になる可能性があります。例えば、PostgreSQLとMySQLはNULL値を非NULL値よりも高い値であるかのようにソートしますが、SQLiteはその逆を行います。</target>
        </trans-unit>
        <trans-unit id="b3785fd34b88aa8550a180686f7e7f2fe6ae8096" translate="yes" xml:space="preserve">
          <source>Since pickle compatibility errors can be difficult to diagnose, such as silently corrupted objects, a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised when you try to unpickle a model in a Django version that is different than the one in which it was pickled.</source>
          <target state="translated">静かに破損したオブジェクトなどのピクル互換性エラーは診断が難しい場合があるため、Djangoバージョンでピクルされたモデルとは異なるモデルをピックル解除しようとすると、 &lt;code&gt;RuntimeWarning&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="602f88f12af1580252ee95f973928f4ffb892234" translate="yes" xml:space="preserve">
          <source>Since pickle compatibility errors can be difficult to diagnose, such as silently corrupted objects, a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised when you try to unpickle a queryset in a Django version that is different than the one in which it was pickled.</source>
          <target state="translated">静かに破損したオブジェクトなどのピクル互換性エラーは診断が難しい場合があるため、Djangoバージョンでピクルされたバージョンとは異なるバージョンのクエリセットをアンピックルしようとすると、 &lt;code&gt;RuntimeWarning&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="6b259318075cca37cf94d413ec2884ef4b3ae2b1" translate="yes" xml:space="preserve">
          <source>Since static files might reference other static files that need to have their paths replaced, multiple passes of replacing paths may be needed until the file hashes converge. To prevent an infinite loop due to hashes not converging (for example, if &lt;code&gt;'foo.css'&lt;/code&gt; references &lt;code&gt;'bar.css'&lt;/code&gt; which references &lt;code&gt;'foo.css'&lt;/code&gt;) there is a maximum number of passes before post-processing is abandoned. In cases with a large number of references, a higher number of passes might be needed. Increase the maximum number of passes by subclassing &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; and setting the &lt;code&gt;max_post_process_passes&lt;/code&gt; attribute. It defaults to 5.</source>
          <target state="translated">静的ファイルは、パスを置き換える必要がある他の静的ファイルを参照する可能性があるため、ファイルのハッシュが収束するまで、パスを置き換える複数のパスが必要になる場合があります。ハッシュが収束しないように無限ループを防ぐために（例えば、もし &lt;code&gt;'foo.css'&lt;/code&gt; 参照 &lt;code&gt;'bar.css'&lt;/code&gt; 参照 &lt;code&gt;'foo.css'&lt;/code&gt; ）後処理が放棄される前に、パスの最大数があります。参照の数が多い場合は、より多くのパスが必要になることがあります。 &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; をサブクラス化し、 &lt;code&gt;max_post_process_passes&lt;/code&gt; 属性を設定して、パスの最大数を増やします。デフォルトは5です。</target>
        </trans-unit>
        <trans-unit id="3ee52d198c62fb7fea17d51bd3898d1fb8798f93" translate="yes" xml:space="preserve">
          <source>Since string extraction is done by the &lt;code&gt;xgettext&lt;/code&gt; command, only syntaxes supported by &lt;code&gt;gettext&lt;/code&gt; are supported by Django. In particular, Python &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#f-strings&quot;&gt;f-strings&lt;/a&gt; are not yet supported by &lt;code&gt;xgettext&lt;/code&gt;, and JavaScript template strings need &lt;code&gt;gettext&lt;/code&gt; 0.21+.</source>
          <target state="translated">文字列の抽出は &lt;code&gt;xgettext&lt;/code&gt; コマンドによって行われるため、Djangoでは &lt;code&gt;gettext&lt;/code&gt; でサポートされている構文のみがサポートされています。具体的には、Pythonの&lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#f-strings&quot;&gt;F-文字列は&lt;/a&gt;まだでサポートされていない &lt;code&gt;xgettext&lt;/code&gt; 、およびJavaScriptのテンプレート文字列が必要 &lt;code&gt;gettext&lt;/code&gt; の0.21+を。</target>
        </trans-unit>
        <trans-unit id="24e8a55f499e4e88c7af09bba2b408f084a615c9" translate="yes" xml:space="preserve">
          <source>Since string extraction is done by the &lt;code&gt;xgettext&lt;/code&gt; command, only syntaxes supported by &lt;code&gt;gettext&lt;/code&gt; are supported by Django. Python &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#f-strings&quot;&gt;f-strings&lt;/a&gt; and &lt;a href=&quot;https://savannah.gnu.org/bugs/?50920&quot;&gt;JavaScript template strings&lt;/a&gt; are not yet supported by &lt;code&gt;xgettext&lt;/code&gt;.</source>
          <target state="translated">文字列の抽出は &lt;code&gt;xgettext&lt;/code&gt; コマンドで行われるため、Djangoでは &lt;code&gt;gettext&lt;/code&gt; でサポートされている構文のみがサポートされています。Pythonの&lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#f-strings&quot;&gt;f文字列&lt;/a&gt;と&lt;a href=&quot;https://savannah.gnu.org/bugs/?50920&quot;&gt;JavaScriptテンプレート文字列&lt;/a&gt;は、 &lt;code&gt;xgettext&lt;/code&gt; ではまだサポートされていません。</target>
        </trans-unit>
        <trans-unit id="89c0ffa4efff3f9d6045b602f97fbbf0afe758d5" translate="yes" xml:space="preserve">
          <source>Since that&amp;rsquo;s a bit abstract, let&amp;rsquo;s look at a concrete example. The most common use of &lt;code&gt;formfield_overrides&lt;/code&gt; is to add a custom widget for a certain type of field. So, imagine we&amp;rsquo;ve written a &lt;code&gt;RichTextEditorWidget&lt;/code&gt; that we&amp;rsquo;d like to use for large text fields instead of the default &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;. Here&amp;rsquo;s how we&amp;rsquo;d do that:</source>
          <target state="translated">これは少し抽象的であるため、具体的な例を見てみましょう。 &lt;code&gt;formfield_overrides&lt;/code&gt; の最も一般的な使用法は、特定のタイプのフィールドにカスタムウィジェットを追加することです。したがって、デフォルトの &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; の代わりに大きなテキストフィールドに使用する &lt;code&gt;RichTextEditorWidget&lt;/code&gt; を作成したとします。その方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9c462c09bbc7f45fb51780a896bd0e6b27044953" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;views#error-views&quot;&gt;default error views&lt;/a&gt; require the CSRF token, &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt;&lt;code&gt;SessionMiddleware&lt;/code&gt;&lt;/a&gt; must appear in &lt;a href=&quot;#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; before any middleware that may raise an exception to trigger an error view (such as &lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;) if you&amp;rsquo;re using &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;. See &lt;a href=&quot;middleware#middleware-ordering&quot;&gt;Middleware ordering&lt;/a&gt;.</source>
          <target state="translated">以来&lt;a href=&quot;views#error-views&quot;&gt;、デフォルトのエラー・ビューは&lt;/a&gt; CSRFトークンを必要とし、&lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt; &lt;code&gt;SessionMiddleware&lt;/code&gt; のは&lt;/a&gt;で表示されなければなりません&lt;a href=&quot;#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt;（のようなエラービュートリガする例外上げることができる任意のミドルウェア前&lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; を&lt;/a&gt;使用している場合） &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; を。&lt;a href=&quot;middleware#middleware-ordering&quot;&gt;ミドルウェアの注文を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3680c70751a4259e89baeed5c2f2f5f28c9a23a3" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;Author&lt;/code&gt; model has the 3 fields &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;birth_date&lt;/code&gt;, this will result in the fields &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;birth_date&lt;/code&gt; being present on the form.</source>
          <target state="translated">以来 &lt;code&gt;Author&lt;/code&gt; モデルは3つのフィールドの持つ &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;title&lt;/code&gt; や &lt;code&gt;birth_date&lt;/code&gt; 、これはフィールドになります &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;birth_date&lt;/code&gt; 、フォーム上に存在します。</target>
        </trans-unit>
        <trans-unit id="e8d452aef8debbe23356a70033afef2753cb14e5" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;RemoteUserBackend&lt;/code&gt; inherits from &lt;code&gt;ModelBackend&lt;/code&gt;, you will still have all of the same permissions checking that is implemented in &lt;code&gt;ModelBackend&lt;/code&gt;.</source>
          <target state="translated">以来 &lt;code&gt;RemoteUserBackend&lt;/code&gt; のから継承 &lt;code&gt;ModelBackend&lt;/code&gt; 、あなたはまだ実装されていることを確認し、同じ権限のすべてがあります &lt;code&gt;ModelBackend&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="bdbb68b33c6d311502916cc7184838f9f5e8ae17" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;then&lt;/code&gt; keyword argument is reserved for the result of the &lt;code&gt;When()&lt;/code&gt;, there is a potential conflict if a &lt;a href=&quot;instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; has a field named &lt;code&gt;then&lt;/code&gt;. This can be resolved in two ways:</source>
          <target state="translated">以来 &lt;code&gt;then&lt;/code&gt; のキーワード引数は結果のために予約され &lt;code&gt;When()&lt;/code&gt; あれば、潜在的な競合がある&lt;a href=&quot;instances#django.db.models.Model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;名前のフィールドがある &lt;code&gt;then&lt;/code&gt; 。これは2つの方法で解決できます。</target>
        </trans-unit>
        <trans-unit id="6618e989db2273bbc1f3c54308050a36bea8f7d7" translate="yes" xml:space="preserve">
          <source>Since the &lt;em&gt;tests&lt;/em&gt; package is included in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; when running your tests, you can define test-only models in its &lt;code&gt;models.py&lt;/code&gt; file.</source>
          <target state="translated">&lt;em&gt;テストを&lt;/em&gt;実行すると、&lt;em&gt;テスト&lt;/em&gt;パッケージが&lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;に含まれるため、 &lt;code&gt;models.py&lt;/code&gt; ファイルでテスト専用モデルを定義できます。</target>
        </trans-unit>
        <trans-unit id="182f25b8a48332fd0cfbbc4244db09a814c6d976" translate="yes" xml:space="preserve">
          <source>Since the Author model only has three fields, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, and &lt;code&gt;birth_date&lt;/code&gt;, the forms resulting from the above declarations will contain exactly the same fields.</source>
          <target state="translated">Authorモデルには &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;title&lt;/code&gt; 、および &lt;code&gt;birth_date&lt;/code&gt; の 3つのフィールドしかないため、上記の宣言から生成されるフォームにはまったく同じフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="2ba476890856fa0063dbc5286fec4c773b2be9ea" translate="yes" xml:space="preserve">
          <source>Since the case where the enum values need to be integers is extremely common, Django provides an &lt;code&gt;IntegerChoices&lt;/code&gt; class. For example:</source>
          <target state="translated">enum値が整数である必要があるケースは非常に一般的であるため、Djangoは &lt;code&gt;IntegerChoices&lt;/code&gt; クラスを提供します。例えば：</target>
        </trans-unit>
        <trans-unit id="5ddb3180871881fcfae61f580859f414abfcece9" translate="yes" xml:space="preserve">
          <source>Since the database isn&amp;rsquo;t fully flushed, if a test creates instances of models not included in &lt;code&gt;available_apps&lt;/code&gt;, they will leak and they may cause unrelated tests to fail. Be careful with tests that use sessions; the default session engine stores them in the database.</source>
          <target state="translated">データベースが完全にフラッシュされないため、テストが &lt;code&gt;available_apps&lt;/code&gt; に含まれていないモデルのインスタンスを作成すると、それらがリークし、無関係なテストが失敗する可能性があります。セッションを使用するテストには注意してください。デフォルトのセッションエンジンはそれらをデータベースに保存します。</target>
        </trans-unit>
        <trans-unit id="7d3df5c0a0844a50893192052cdcd2089b4fc644" translate="yes" xml:space="preserve">
          <source>Since the field validation methods have been run by the time &lt;code&gt;clean()&lt;/code&gt; is called, you also have access to the form&amp;rsquo;s &lt;code&gt;errors&lt;/code&gt; attribute which contains all the errors raised by cleaning of individual fields.</source>
          <target state="translated">&lt;code&gt;clean()&lt;/code&gt; が呼び出されるまでにフィールド検証メソッドが実行されているため、個々のフィールドのクリーニングによって発生したすべてのエラーを含むフォームの &lt;code&gt;errors&lt;/code&gt; 属性にもアクセスできます。</target>
        </trans-unit>
        <trans-unit id="bee7b32523a98739c39993323ca126b1ab6f12b1" translate="yes" xml:space="preserve">
          <source>Since the prefetch is executed after the main query (which includes the joins needed by &lt;code&gt;select_related&lt;/code&gt;), it is able to detect that the &lt;code&gt;best_pizza&lt;/code&gt; objects have already been fetched, and it will skip fetching them again.</source>
          <target state="translated">プリフェッチはメインクエリ（ &lt;code&gt;select_related&lt;/code&gt; で必要な結合を含む）の後に実行されるため、 &lt;code&gt;best_pizza&lt;/code&gt; オブジェクトが既にフェッチされていることを検出でき、それらのオブジェクトの再フェッチはスキップされます。</target>
        </trans-unit>
        <trans-unit id="6e894456a6ae804c6a8bd8eaccaaea486170048d" translate="yes" xml:space="preserve">
          <source>Since the template language doesn&amp;rsquo;t provide exception handling, any exception raised from a template filter will be exposed as a server error. Thus, filter functions should avoid raising exceptions if there is a reasonable fallback value to return. In case of input that represents a clear bug in a template, raising an exception may still be better than silent failure which hides the bug.</source>
          <target state="translated">テンプレート言語は例外処理を提供しないため、テンプレートフィルターから発生した例外はサーバーエラーとして公開されます。したがって、フィルター関数は、返す妥当なフォールバック値がある場合、例外の発生を回避する必要があります。テンプレートの明確なバグを表す入力の場合、例外を発生させることは、バグを隠すサイレント障害よりも優れている場合があります。</target>
        </trans-unit>
        <trans-unit id="f54bd5c48a829c41f37d160efc395674c13b0816" translate="yes" xml:space="preserve">
          <source>Since the template system has no concept of &amp;ldquo;escaping&amp;rdquo;, to display one of the bits used in template tags, you must use the &lt;code&gt;{% templatetag %}&lt;/code&gt; tag.</source>
          <target state="translated">テンプレートシステムには「エスケープ」の概念がないため、テンプレートタグで使用されるビットの1つを表示するには、 &lt;code&gt;{% templatetag %}&lt;/code&gt; タグを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8102763f7cdc49ed64d110ebdc10ec98644b74ef" translate="yes" xml:space="preserve">
          <source>Since the underlying file is opened implicitly when accessing it, it may be unnecessary to call this method except to reset the pointer to the underlying file or to change the &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">基になるファイルはアクセス時に暗黙的に開かれるため、基になるファイルへのポインターをリセットするか、 &lt;code&gt;mode&lt;/code&gt; を変更する場合を除いて、このメソッドを呼び出す必要がない場合があります。</target>
        </trans-unit>
        <trans-unit id="08f6474d73677fd0c7d0495951ca9562af720155" translate="yes" xml:space="preserve">
          <source>Since things in the future are not &amp;lsquo;recent&amp;rsquo;, this is clearly wrong.</source>
          <target state="translated">将来のものは「最近」ではないので、これは明らかに間違っています。</target>
        </trans-unit>
        <trans-unit id="44f004032c76f1b45110354f5c8f2c8d9174dd49" translate="yes" xml:space="preserve">
          <source>Since this is a bit finicky, there&amp;rsquo;s also a helper function that&amp;rsquo;ll do this for you:</source>
          <target state="translated">これは少し厄介なので、これを行うヘルパー関数もあります：</target>
        </trans-unit>
        <trans-unit id="f2a9a7c1dcff132243a3afb77a83dc9f53136bce" translate="yes" xml:space="preserve">
          <source>Since this is a subclass of &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, instances of this mixin have access to the &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt;&lt;code&gt;queryset&lt;/code&gt;&lt;/a&gt; attributes, describing the type of object that the &lt;code&gt;ModelForm&lt;/code&gt; is manipulating.</source>
          <target state="translated">これはのサブクラスであるため&lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt; &lt;code&gt;SingleObjectMixin&lt;/code&gt; &lt;/a&gt;、このミックスインのインスタンスがアクセス有し&lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.model&quot;&gt; &lt;code&gt;model&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt; &lt;code&gt;queryset&lt;/code&gt; &lt;/a&gt;そのオブジェクトのタイプ記述、属性 &lt;code&gt;ModelForm&lt;/code&gt; 操作されます。</target>
        </trans-unit>
        <trans-unit id="8b836e3b2be807beecd8bb58d4c3d7119ec00e5a" translate="yes" xml:space="preserve">
          <source>Since this is usually not what you want, Django provides a convenience wrapper to check permissions and mark the view as non-cacheable. This wrapper is &lt;code&gt;AdminSite.admin_view()&lt;/code&gt; (i.e. &lt;code&gt;self.admin_site.admin_view&lt;/code&gt; inside a &lt;code&gt;ModelAdmin&lt;/code&gt; instance); use it like so:</source>
          <target state="translated">これは通常必要なものではないため、Djangoには、権限を確認してビューをキャッシュ不可としてマークするための便利なラッパーが用意されています。このラッパーは、 &lt;code&gt;AdminSite.admin_view()&lt;/code&gt; （すなわち &lt;code&gt;self.admin_site.admin_view&lt;/code&gt; 内部 &lt;code&gt;ModelAdmin&lt;/code&gt; ののインスタンス）。次のように使用します。</target>
        </trans-unit>
        <trans-unit id="ce280ef1e65769fe1562be2510357317b2198d19" translate="yes" xml:space="preserve">
          <source>Since this new feature will be in an upcoming release it is also added to the release notes for the next version of Django. Open the release notes for the latest version in &lt;code&gt;docs/releases/&lt;/code&gt;, which at time of writing is &lt;code&gt;2.2.txt&lt;/code&gt;. Add a note under the &amp;ldquo;Minor Features&amp;rdquo; header:</source>
          <target state="translated">この新機能は次のリリースで提供されるため、Djangoの次のバージョンのリリースノートにも追加されます。 &lt;code&gt;docs/releases/&lt;/code&gt; で最新バージョンのリリースノートを開きます。このドキュメントの執筆時点では &lt;code&gt;2.2.txt&lt;/code&gt; です。「マイナー機能」ヘッダーの下にメモを追加します。</target>
        </trans-unit>
        <trans-unit id="e2e1007acfcc38bed3a58e1d177253ed96b3b170" translate="yes" xml:space="preserve">
          <source>Since this signal is sent during the app registry population process, and &lt;a href=&quot;applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;AppConfig.ready()&lt;/code&gt;&lt;/a&gt; runs after the app registry is fully populated, receivers cannot be connected in that method. One possibility is to connect them &lt;code&gt;AppConfig.__init__()&lt;/code&gt; instead, taking care not to import models or trigger calls to the app registry.</source>
          <target state="translated">この信号はアプリレジストリの作成プロセス中に送信され、アプリレジストリが完全に入力された後に&lt;a href=&quot;applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;AppConfig.ready()&lt;/code&gt; &lt;/a&gt;が実行されるため、そのメソッドでレシーバーを接続することはできません。1つの可能性は、代わりに &lt;code&gt;AppConfig.__init__()&lt;/code&gt; を接続して、モデルをインポートしたり、アプリレジストリへの呼び出しをトリガーしたりしないように注意することです。</target>
        </trans-unit>
        <trans-unit id="a86ca2fbc6ea755af8f5f6612e77aed753ca20a7" translate="yes" xml:space="preserve">
          <source>Since translation deactivation requires access to configured settings, the decorator can&amp;rsquo;t be used for commands that work without configured settings.</source>
          <target state="translated">翻訳の非アクティブ化には構成済みの設定へのアクセスが必要なため、設定なしで機能するコマンドにデコレーターを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="82ea9edabdd611c6751c736c86602f3cb7f1278f" translate="yes" xml:space="preserve">
          <source>Since using a database requires conversion in both ways, if you override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.from_db_value&quot;&gt;&lt;code&gt;from_db_value()&lt;/code&gt;&lt;/a&gt; you also have to override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; to convert Python objects back to query values.</source>
          <target state="translated">あなたが上書きしている場合は、データベースを使用しているので、両方の方法で変換する必要が&lt;a href=&quot;../ref/models/fields#django.db.models.Field.from_db_value&quot;&gt; &lt;code&gt;from_db_value()&lt;/code&gt; &lt;/a&gt;あなたもオーバーライドする必要があり&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt;Pythonがバッククエリ値にオブジェクトを変換すること。</target>
        </trans-unit>
        <trans-unit id="9fa717881c11bde35b0145dff4b5c09425edae91" translate="yes" xml:space="preserve">
          <source>Since using a database requires conversion in both ways, if you override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt;&lt;code&gt;to_python()&lt;/code&gt;&lt;/a&gt; you also have to override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; to convert Python objects back to query values.</source>
          <target state="translated">データベースを使用するには両方の方法で変換が必要なため、&lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt; &lt;code&gt;to_python()&lt;/code&gt; &lt;/a&gt;をオーバーライドする場合は、Pythonオブジェクトをクエリ値に戻すために&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt;もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="3a0b9c31f60423d805f6522b383f5998b304606d" translate="yes" xml:space="preserve">
          <source>Since we have access to the &lt;code&gt;Publisher&lt;/code&gt; whose books we want to list, we override &lt;code&gt;get_queryset()&lt;/code&gt; and use the &lt;code&gt;Publisher&lt;/code&gt;&amp;rsquo;s &lt;a href=&quot;../db/queries#backwards-related-objects&quot;&gt;reverse foreign key manager&lt;/a&gt;.</source>
          <target state="translated">リストする書籍の &lt;code&gt;Publisher&lt;/code&gt; アクセスできるため、 &lt;code&gt;get_queryset()&lt;/code&gt; をオーバーライドし、 &lt;code&gt;Publisher&lt;/code&gt; の&lt;a href=&quot;../db/queries#backwards-related-objects&quot;&gt;リバース外部キーマネージャを使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="83cb27b5980fec2422e18c05c4b1e792946c4f43" translate="yes" xml:space="preserve">
          <source>Since we haven&amp;rsquo;t made any modifications to &lt;code&gt;django.shortcuts&lt;/code&gt; yet, our test should fail. Let&amp;rsquo;s run all the tests in the &lt;code&gt;shortcuts&lt;/code&gt; folder to make sure that&amp;rsquo;s really what happens. &lt;code&gt;cd&lt;/code&gt; to the Django &lt;code&gt;tests/&lt;/code&gt; directory and run:</source>
          <target state="translated">&lt;code&gt;django.shortcuts&lt;/code&gt; にはまだ変更を加えていないため、テストは失敗するはずです。 &lt;code&gt;shortcuts&lt;/code&gt; フォルダーですべてのテストを実行して、それが実際に行われることを確認します。Djangoの &lt;code&gt;tests/&lt;/code&gt; ディレクトリに &lt;code&gt;cd&lt;/code&gt; して実行します。</target>
        </trans-unit>
        <trans-unit id="d74aaa0c05af691e500eb421f55175b31a2b3c64" translate="yes" xml:space="preserve">
          <source>Since we moved the &lt;code&gt;polls&lt;/code&gt; directory out of the project, it&amp;rsquo;s no longer working. We&amp;rsquo;ll now fix this by installing our new &lt;code&gt;django-polls&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;polls&lt;/code&gt; ディレクトリをプロジェクトの外に移動したため、機能しなくなりました。新しい &lt;code&gt;django-polls&lt;/code&gt; パッケージをインストールすることでこれを修正します。</target>
        </trans-unit>
        <trans-unit id="2cca87da26dab748a65a3d865fe2eecf9090771b" translate="yes" xml:space="preserve">
          <source>Since we&amp;rsquo;re creating a POST form (which can have the effect of modifying data), we need to worry about Cross Site Request Forgeries. Thankfully, you don&amp;rsquo;t have to worry too hard, because Django comes with a helpful system for protecting against it. In short, all POST forms that are targeted at internal URLs should use the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;{% csrf_token %}&lt;/code&gt;&lt;/a&gt; template tag.</source>
          <target state="translated">ここではPOSTフォーム（データの変更に影響する可能性があります）を作成しているので、クロスサイトリクエストフォージェリを心配する必要があります。ありがたいことに、DjangoにはDjangoを保護するための便利なシステムが付属しているので、それほど心配する必要はありません。つまり、内部URLをターゲットとするすべてのPOSTフォームは、&lt;a href=&quot;../ref/templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;{% csrf_token %}&lt;/code&gt; &lt;/a&gt;テンプレートタグを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ad37d97bd6f0098fd77a93b928c99a690af8225" translate="yes" xml:space="preserve">
          <source>Since you&amp;rsquo;re already entering raw HTML into the admin page for a flatpage, both &lt;code&gt;flatpage.title&lt;/code&gt; and &lt;code&gt;flatpage.content&lt;/code&gt; are marked as &lt;strong&gt;not&lt;/strong&gt; requiring &lt;a href=&quot;../templates/language#automatic-html-escaping&quot;&gt;automatic HTML escaping&lt;/a&gt; in the template.</source>
          <target state="translated">フラットページの管理ページに未加工のHTMLをすでに入力しているため、 &lt;code&gt;flatpage.title&lt;/code&gt; と &lt;code&gt;flatpage.content&lt;/code&gt; の両方が、テンプレートで&lt;a href=&quot;../templates/language#automatic-html-escaping&quot;&gt;HTMLの自動エスケープ&lt;/a&gt;を必要とし&lt;strong&gt;ない&lt;/strong&gt;とマークされて&lt;strong&gt;い&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6eb819bf4cfb2932ee65634e73d63261d48b4ff0" translate="yes" xml:space="preserve">
          <source>Since you&amp;rsquo;re overriding templates located outside of one of your project&amp;rsquo;s apps, it&amp;rsquo;s more common to use the first method and put template overrides in a project&amp;rsquo;s templates folder. If you prefer, however, it&amp;rsquo;s also possible to put the overrides in an app&amp;rsquo;s template directory.</source>
          <target state="translated">プロジェクトのいずれかのアプリの外部にあるテンプレートを上書きするため、最初の方法を使用してプロジェクトのテンプレートフォルダーにテンプレートの上書きを配置するのがより一般的です。ただし、必要に応じて、アプリのテンプレートディレクトリにオーバーライドを配置することもできます。</target>
        </trans-unit>
        <trans-unit id="b0afd134835f007c574a20ffac22a88bef83653b" translate="yes" xml:space="preserve">
          <source>Since your static file server won&amp;rsquo;t be running Django, you&amp;rsquo;ll need to modify the deployment strategy to look something like:</source>
          <target state="translated">静的ファイルサーバーはDjangoを実行しないため、次のように展開戦略を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="a758a9b96f0a0cb1c9df99cb7fcf0a0f5ab2e0b3" translate="yes" xml:space="preserve">
          <source>Single object mixins</source>
          <target state="translated">シングルオブジェクト ミキシング</target>
        </trans-unit>
        <trans-unit id="d4279b6f4a158808f3065d3c5f9f2a8fbbc9fae1" translate="yes" xml:space="preserve">
          <source>Site middleware</source>
          <target state="translated">サイトミドルウェア</target>
        </trans-unit>
        <trans-unit id="84ec3e71d2c9d85aaaf417a243c8e7d9f42135fc" translate="yes" xml:space="preserve">
          <source>Sitemap</source>
          <target state="translated">Sitemap</target>
        </trans-unit>
        <trans-unit id="519aa036bc82c5ea1d73d3993e032cfb72fb484f" translate="yes" xml:space="preserve">
          <source>Sitemap for static views</source>
          <target state="translated">静的表示のためのサイトマップ</target>
        </trans-unit>
        <trans-unit id="2764eabb8749c77d247a8a75752a9ecde7eb5597" translate="yes" xml:space="preserve">
          <source>Sitemaps</source>
          <target state="translated">Sitemaps</target>
        </trans-unit>
        <trans-unit id="5cae88ddf5336e6a23091c01317b646467eb857e" translate="yes" xml:space="preserve">
          <source>Sites</source>
          <target state="translated">Sites</target>
        </trans-unit>
        <trans-unit id="67e61f4409b1fb54be195bdc07794c772323f4db" translate="yes" xml:space="preserve">
          <source>Sixteen bit signed integer</source>
          <target state="translated">16ビット符号付き整数</target>
        </trans-unit>
        <trans-unit id="0446b596265d74a5e393db2060d6318b0e4d5dda" translate="yes" xml:space="preserve">
          <source>Sixteen bit unsigned integer</source>
          <target state="translated">16ビット符号なし整数</target>
        </trans-unit>
        <trans-unit id="a41f42e02f52f797b4047cc88bef99a9e7759ac5" translate="yes" xml:space="preserve">
          <source>Sixty-four bit floating point</source>
          <target state="translated">64ビット浮動小数点</target>
        </trans-unit>
        <trans-unit id="54ee68a599b7e2021a429bed896ed452a76885eb" translate="yes" xml:space="preserve">
          <source>Size, in bytes, of the &amp;ldquo;chunks&amp;rdquo; Django should store into memory and feed into the handler. That is, this attribute controls the size of chunks fed into &lt;code&gt;FileUploadHandler.receive_data_chunk&lt;/code&gt;.</source>
          <target state="translated">Djangoが「チャンク」のサイズをバイト単位でメモリに格納し、ハンドラにフィードする必要があります。つまり、この属性は、 &lt;code&gt;FileUploadHandler.receive_data_chunk&lt;/code&gt; に供給されるチャンクのサイズを制御します。</target>
        </trans-unit>
        <trans-unit id="d331e555aa18cca5864ec6dade9b1177eb6ce280" translate="yes" xml:space="preserve">
          <source>Skew coefficients used to georeference the raster, as a point object with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members. In case of north up images, these coefficients are both &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; メンバーを持つポイントオブジェクトとしてラスターを地理参照するために使用されるスキュー係数。真北の画像の場合、これらの係数は両方とも &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="03ebf353dabdb492babc0f780261c7124f7b9c0c" translate="yes" xml:space="preserve">
          <source>Skip the decorated test or &lt;code&gt;TestCase&lt;/code&gt; if all of the named database features are supported.</source>
          <target state="translated">名前付きデータベースの機能がすべてサポートされている場合は、装飾されたテストまたは &lt;code&gt;TestCase&lt;/code&gt; をスキップします。</target>
        </trans-unit>
        <trans-unit id="ee27085f15e9cddd87759168c0488fcd2cd99629" translate="yes" xml:space="preserve">
          <source>Skip the decorated test or &lt;code&gt;TestCase&lt;/code&gt; if any of the named database features are &lt;em&gt;not&lt;/em&gt; supported.</source>
          <target state="translated">指定されたデータベース機能のいずれかがサポートされて&lt;em&gt;いない&lt;/em&gt;場合は、装飾されたテストまたは &lt;code&gt;TestCase&lt;/code&gt; をスキップします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b12e4c720acefa1432f876e9447d079b2ec2431" translate="yes" xml:space="preserve">
          <source>Skipped tests are typically due to missing external libraries required to run the test; see &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-dependencies&quot;&gt;Running all the tests&lt;/a&gt; for a list of dependencies and be sure to install any for tests related to the changes you are making (we won&amp;rsquo;t need any for this tutorial). Some tests are specific to a particular database backend and will be skipped if not testing with that backend. SQLite is the database backend for the default settings. To run the tests using a different backend, see &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;Using another settings module&lt;/a&gt;.</source>
          <target state="translated">通常、テストがスキップされるのは、テストを実行するために必要な外部ライブラリがないためです。依存関係のリスト&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-dependencies&quot;&gt;について&lt;/a&gt;は、すべてのテストの実行を参照してください。加えている変更に関連するテストについては、必ずインストールしてください（このチュートリアルでは何も必要ありません）。一部のテストは特定のデータベースバックエンドに固有であり、そのバックエンドでテストしない場合はスキップされます。SQLiteは、デフォルト設定のデータベースバックエンドです。別のバックエンドを使用してテストを実行するには、&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;別の設定モジュールの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a20c7ecbdb8e8aaa611f1dfcf29c862e3b7454f7" translate="yes" xml:space="preserve">
          <source>Skipped tests are typically due to missing external libraries required to run the test; see &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests-dependencies&quot;&gt;Running all the tests&lt;/a&gt; for a list of dependencies and be sure to install any for tests related to the changes you are making (we won&amp;rsquo;t need any for this tutorial). Some tests are specific to a particular database backend and will be skipped if not testing with that backend. SQLite is the database backend for the default settings. To run the tests using a different backend, see &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;Using another settings module&lt;/a&gt;.</source>
          <target state="translated">スキップされたテストは通常​​、テストの実行に必要な外部ライブラリが欠落していることが原因です。依存関係のリスト&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests-dependencies&quot;&gt;について&lt;/a&gt;は、すべてのテストの実行を参照してください。また、行っている変更に関連するテストについては、必ずインストールしてください（このチュートリアルでは必要ありません）。一部のテストは特定のデータベースバックエンドに固有であり、そのバックエンドでテストしない場合はスキップされます。SQLiteは、デフォルト設定のデータベースバックエンドです。別のバックエンドを使用してテストを実行するには、&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;別の設定モジュールの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a516a3ce4b9fd1e3a2a9186564fe4ca0d9da8218" translate="yes" xml:space="preserve">
          <source>Skipping tests</source>
          <target state="translated">テストのスキップ</target>
        </trans-unit>
        <trans-unit id="8989d491cc86145811a20ac193d7ccbc68aad3ce" translate="yes" xml:space="preserve">
          <source>Skips running system checks prior to running the command. This option is only available if the &lt;a href=&quot;../howto/custom-management-commands#django.core.management.BaseCommand.requires_system_checks&quot;&gt;&lt;code&gt;requires_system_checks&lt;/code&gt;&lt;/a&gt; command attribute is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">コマンドを実行する前に実行中のシステムチェックをスキップします。このオプションは、&lt;a href=&quot;../howto/custom-management-commands#django.core.management.BaseCommand.requires_system_checks&quot;&gt; &lt;code&gt;requires_system_checks&lt;/code&gt; &lt;/a&gt;コマンド属性が &lt;code&gt;True&lt;/code&gt; に設定されている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="4311442b14df158474972aefe316fe0015216940" translate="yes" xml:space="preserve">
          <source>Slice transforms</source>
          <target state="translated">スライス変換</target>
        </trans-unit>
        <trans-unit id="5c17b90ab78d86e62c72c3dbcd8cb199edcf89a0" translate="yes" xml:space="preserve">
          <source>Slice transforms take a slice of the array. Any two non-negative integers can be used, separated by a single underscore. The lookups available after the transform do not change. For example:</source>
          <target state="translated">スライス変換は,配列のスライスを取ります.2つの非負の整数を使用することができ、1つのアンダースコアで区切ることができます。変換後に利用できるルックアップは変更されません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="6cd11852ab5f872acf123cf810b3e4452375ff0b" translate="yes" xml:space="preserve">
          <source>Slightly complex built-in &lt;code&gt;Field&lt;/code&gt; classes</source>
          <target state="translated">やや複雑な組み込み &lt;code&gt;Field&lt;/code&gt; クラス</target>
        </trans-unit>
        <trans-unit id="8406bd88e7e3a01d4e4da0fc3d9fe43a26302684" translate="yes" xml:space="preserve">
          <source>So - if you wanted to get a reference to the Change view for a particular &lt;code&gt;Choice&lt;/code&gt; object (from the polls application) in the default admin, you would call:</source>
          <target state="translated">したがって、デフォルトのadminで（pollsアプリケーションから）特定の &lt;code&gt;Choice&lt;/code&gt; オブジェクトのChangeビューへの参照を取得したい場合は、次のように呼び出します。</target>
        </trans-unit>
        <trans-unit id="f561932be65722b9d44a8be0c2d5b554e4294e2c" translate="yes" xml:space="preserve">
          <source>So - what does this mean in practice? Let&amp;rsquo;s consider another sample configuration. This one will have several databases: one for the &lt;code&gt;auth&lt;/code&gt; application, and all other apps using a primary/replica setup with two read replicas. Here are the settings specifying these databases:</source>
          <target state="translated">だから-これは実際にはどういう意味ですか？別のサンプル構成を考えてみましょう。これには複数のデータベースが含まれます。1つは &lt;code&gt;auth&lt;/code&gt; アプリケーション用で、他のすべてのアプリは2つのリードレプリカでプライマリ/レプリカ設定を使用しています。これらのデータベースを指定する設定は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="598d09837c274e79aa4ceb6e5cdf49a6beb84930" translate="yes" xml:space="preserve">
          <source>So a child model does not have access to its parent&amp;rsquo;s &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class. However, there are a few limited cases where the child inherits behavior from the parent: if the child does not specify an &lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; attribute or a &lt;a href=&quot;../../ref/models/options#django.db.models.Options.get_latest_by&quot;&gt;&lt;code&gt;get_latest_by&lt;/code&gt;&lt;/a&gt; attribute, it will inherit these from its parent.</source>
          <target state="translated">したがって、子モデルはその親の&lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;クラスにアクセスできません。ただし、子が親から動作を継承する&lt;a href=&quot;../../ref/models/options#django.db.models.Options.get_latest_by&quot;&gt; &lt;code&gt;get_latest_by&lt;/code&gt; &lt;/a&gt;限られたケースがあります。子が&lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt; &lt;code&gt;ordering&lt;/code&gt; &lt;/a&gt;属性またはget_latest_by属性を指定しない場合、子はこれらを親から継承します。</target>
        </trans-unit>
        <trans-unit id="233051ddd7bf751229384544c29d3b1075d67834" translate="yes" xml:space="preserve">
          <source>So far, this document has focused on caching your &lt;em&gt;own&lt;/em&gt; data. But another type of caching is relevant to Web development, too: caching performed by &amp;ldquo;downstream&amp;rdquo; caches. These are systems that cache pages for users even before the request reaches your website.</source>
          <target state="translated">これまでのところ、このドキュメントは&lt;em&gt;独自の&lt;/em&gt;データのキャッシュに焦点を当てて&lt;em&gt;い&lt;/em&gt;ます。しかし、別のタイプのキャッシングもWeb開発に関連しています。「ダウンストリーム」キャッシュによって実行されるキャッシングです。これらは、リクエストがWebサイトに到達する前でも、ユーザーのページをキャッシュするシステムです。</target>
        </trans-unit>
        <trans-unit id="683cf4990b5e54a0c5cac35fb823156284b118a2" translate="yes" xml:space="preserve">
          <source>So far, we have dealt with aggregates over fields that belong to the model being queried. However, sometimes the value you want to aggregate will belong to a model that is related to the model you are querying.</source>
          <target state="translated">これまでのところ、クエリされているモデルに属するフィールドの集約を扱いました。しかし、集約したい値が問い合わせ先のモデルに関連するモデルに属している場合もあります。</target>
        </trans-unit>
        <trans-unit id="c8ad77851902fd991b08e548de03986e08bfe07e" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve returned the results for which any match between the vector and the query are possible. It&amp;rsquo;s likely you may wish to order the results by some sort of relevancy. PostgreSQL provides a ranking function which takes into account how often the query terms appear in the document, how close together the terms are in the document, and how important the part of the document is where they occur. The better the match, the higher the value of the rank. To order by relevancy:</source>
          <target state="translated">これまでのところ、ベクトルとクエリの間のすべての一致が可能な結果を​​返してきました。何らかの関連性で結果を並べ替えることができます。PostgreSQLは、クエリ用語がドキュメントに出現する頻度、用語がドキュメント内でどのくらい接近しているか、およびドキュメントの一部が出現する場所の重要性を考慮に入れるランキング関数を提供します。一致率が高いほど、ランクの値が高くなります。関連性の高い順に並べるには：</target>
        </trans-unit>
        <trans-unit id="e76d28a93a56412c9079f8f2a2fb2b4ef88241ab" translate="yes" xml:space="preserve">
          <source>So how do you get Django to emit a natural key when serializing an object? Firstly, you need to add another method &amp;ndash; this time to the model itself:</source>
          <target state="translated">では、オブジェクトをシリアル化するときに、Djangoに自然キーを発行させるにはどうすればよいでしょうか。まず、別のメソッドを追加する必要があります。今回はモデル自体に追加します。</target>
        </trans-unit>
        <trans-unit id="10d46b4cdce588dddd936913fdf44c2259f1e789" translate="yes" xml:space="preserve">
          <source>So let&amp;rsquo;s do that right away.</source>
          <target state="translated">すぐにやってみましょう。</target>
        </trans-unit>
        <trans-unit id="9fdecc262c1629f88b66330834aca08d30051882" translate="yes" xml:space="preserve">
          <source>So the second step is to refactor your code wherever you instantiate datetime objects to make them aware. This can be done incrementally. &lt;a href=&quot;../../ref/utils#module-django.utils.timezone&quot;&gt;&lt;code&gt;django.utils.timezone&lt;/code&gt;&lt;/a&gt; defines some handy helpers for compatibility code: &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_aware&quot;&gt;&lt;code&gt;is_aware()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_naive&quot;&gt;&lt;code&gt;is_naive()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/utils#django.utils.timezone.make_aware&quot;&gt;&lt;code&gt;make_aware()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../ref/utils#django.utils.timezone.make_naive&quot;&gt;&lt;code&gt;make_naive()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">したがって、2番目のステップは、日時オブジェクトをインスタンス化する場所にコードをリファクタリングして、それらを認識させることです。これは段階的に行うことができます。&lt;a href=&quot;../../ref/utils#module-django.utils.timezone&quot;&gt; &lt;code&gt;django.utils.timezone&lt;/code&gt; &lt;/a&gt;は、互換性コードの便利なヘルパーをいくつか定義しています：&lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../ref/utils#django.utils.timezone.is_aware&quot;&gt; &lt;code&gt;is_aware()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../ref/utils#django.utils.timezone.is_naive&quot;&gt; &lt;code&gt;is_naive()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../ref/utils#django.utils.timezone.make_aware&quot;&gt; &lt;code&gt;make_aware()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../ref/utils#django.utils.timezone.make_naive&quot;&gt; &lt;code&gt;make_naive()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9fa6df1030c681f4b653cab38b34c79d168b905" translate="yes" xml:space="preserve">
          <source>So using the &lt;a href=&quot;queries#queryset-model-example&quot;&gt;example Weblog models&lt;/a&gt;:</source>
          <target state="translated">したがって、&lt;a href=&quot;queries#queryset-model-example&quot;&gt;サンプルのウェブログモデル&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="ebd952b0234203e118fc3c69ff6ebaa6773f713b" translate="yes" xml:space="preserve">
          <source>So we would like &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; to generate the following SQL:</source>
          <target state="translated">したがって、 &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; で次のSQLを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="d4ebec154fa5a5260976679b0d14ca66b0cb2923" translate="yes" xml:space="preserve">
          <source>So when we handle a model instance in a view, we typically retrieve it from the database. When we&amp;rsquo;re dealing with a form we typically instantiate it in the view.</source>
          <target state="translated">したがって、ビューでモデルインスタンスを処理する場合、通常はデータベースから取得します。フォームを処理する場合、通常はビューでインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="d128cae741730115b6ac893458e0f8b757ebd154" translate="yes" xml:space="preserve">
          <source>So where the code to handle HTTP &lt;code&gt;GET&lt;/code&gt; in a view function would look something like:</source>
          <target state="translated">したがって、ビュー関数でHTTP &lt;code&gt;GET&lt;/code&gt; を処理するコードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="73a3b13f9aeeb915283db7cd3bc96f1339924480" translate="yes" xml:space="preserve">
          <source>So why create tests, and why now?</source>
          <target state="translated">では、なぜ今、テストを作成するのか?</target>
        </trans-unit>
        <trans-unit id="43f33483d117b1be82e626da94e988a40efc3f88" translate="yes" xml:space="preserve">
          <source>So you can safely call it multiple times on the same URI/IRI without risking double-quoting problems.</source>
          <target state="translated">そのため、二重引用の問題を危険にさらすことなく、安全に同じURI/IRI上で複数回呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="24b3d1927c58bb77b286261f38b39d20d0eaa5aa" translate="yes" xml:space="preserve">
          <source>So, instead of writing:</source>
          <target state="translated">だから、書く代わりに</target>
        </trans-unit>
        <trans-unit id="25747342519ffca33e4647ec8682177965a6348a" translate="yes" xml:space="preserve">
          <source>So, to handle situations like this, the Django authentication system lets you plug in other authentication sources. You can override Django&amp;rsquo;s default database-based scheme, or you can use the default system in tandem with other systems.</source>
          <target state="translated">したがって、このような状況を処理するために、Django認証システムでは他の認証ソースをプラグインできます。Djangoのデフォルトのデータベースベースのスキームを上書きしたり、デフォルトのシステムを他のシステムと組み合わせて使用​​したりできます。</target>
        </trans-unit>
        <trans-unit id="a2b08f406111951f741efe38048a503154b1311b" translate="yes" xml:space="preserve">
          <source>So, to recap, this view function returns an HTML page that includes the current date and time. To display this view at a particular URL, you&amp;rsquo;ll need to create a &lt;em&gt;URLconf&lt;/em&gt;; see &lt;a href=&quot;urls&quot;&gt;URL dispatcher&lt;/a&gt; for instructions.</source>
          <target state="translated">したがって、要約すると、このビュー関数は現在の日付と時刻を含むHTMLページを返します。このビューを特定のURLで表示するには、&lt;em&gt;URLconf&lt;/em&gt;を作成する必要があります。手順については、&lt;a href=&quot;urls&quot;&gt;URLディスパッチャー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ce78f441b208d6b519ed2450af0dd83db6051131" translate="yes" xml:space="preserve">
          <source>So, you need to know what performance improvements you are aiming for, and you also need to know that you have a good reason for aiming in that direction - and for that you need:</source>
          <target state="translated">そのため、どのようなパフォーマンス向上を目指しているのかを知る必要があり、また、その方向を目指すにはそれなりの理由があることを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="cdc0c6df181b92cda0ef2f0658e79cb1f18ed57d" translate="yes" xml:space="preserve">
          <source>Solution: rather than disabling the middleware and applying &lt;code&gt;csrf_protect&lt;/code&gt; to all the views that need it, enable the middleware and use &lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解決策：ミドルウェアを無効にしてそれを必要とするすべてのビューに &lt;code&gt;csrf_protect&lt;/code&gt; を適用するのではなく、ミドルウェアを有効にして&lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt; &lt;code&gt;csrf_exempt()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="1732f301ddac16a7401bb484115a6a9de2fb56b4" translate="yes" xml:space="preserve">
          <source>Solution: use &lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;#django.views.decorators.csrf.requires_csrf_token&quot;&gt;&lt;code&gt;requires_csrf_token()&lt;/code&gt;&lt;/a&gt;. (i.e. &lt;code&gt;requires_csrf_token&lt;/code&gt; should be the innermost decorator).</source>
          <target state="translated">解決策：使用&lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt; &lt;code&gt;csrf_exempt()&lt;/code&gt; &lt;/a&gt;に続いて&lt;a href=&quot;#django.views.decorators.csrf.requires_csrf_token&quot;&gt; &lt;code&gt;requires_csrf_token()&lt;/code&gt; &lt;/a&gt;。（つまり、 &lt;code&gt;requires_csrf_token&lt;/code&gt; が最も内側のデコレータである必要があります）。</target>
        </trans-unit>
        <trans-unit id="d7259ee02aa1d277b0913c286a1aca5a960d7047" translate="yes" xml:space="preserve">
          <source>Solution: use &lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt; for the whole view function, and &lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt;&lt;code&gt;csrf_protect()&lt;/code&gt;&lt;/a&gt; for the path within it that needs protection. Example:</source>
          <target state="translated">解決策：ビュー関数全体に&lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt; &lt;code&gt;csrf_exempt()&lt;/code&gt; &lt;/a&gt;を使用し、保護が必要なパス内のパスに&lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt; &lt;code&gt;csrf_protect()&lt;/code&gt; &lt;/a&gt;を使用します。例：</target>
        </trans-unit>
        <trans-unit id="606449e793ebc99c4d94ce3bbff5cc3c7a91a9a5" translate="yes" xml:space="preserve">
          <source>Solution: use &lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt;&lt;code&gt;ensure_csrf_cookie()&lt;/code&gt;&lt;/a&gt; on the view that sends the page.</source>
          <target state="translated">解決策：ページを送信するビューで&lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt; &lt;code&gt;ensure_csrf_cookie()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="8a88f55173c70a5542600ba64028d2c57e930304" translate="yes" xml:space="preserve">
          <source>Solution: use &lt;a href=&quot;#django.views.decorators.csrf.requires_csrf_token&quot;&gt;&lt;code&gt;requires_csrf_token()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">解決策：&lt;a href=&quot;#django.views.decorators.csrf.requires_csrf_token&quot;&gt; &lt;code&gt;requires_csrf_token()&lt;/code&gt; &lt;/a&gt;使用します</target>
        </trans-unit>
        <trans-unit id="33814f0df41ae834316457d8c08ab73721260bbb" translate="yes" xml:space="preserve">
          <source>Some (older) shortcuts for specifying a field lookup are also available. You can prefix a field in &lt;code&gt;search_fields&lt;/code&gt; with the following characters and it&amp;rsquo;s equivalent to adding &lt;code&gt;__&amp;lt;lookup&amp;gt;&lt;/code&gt; to the field:</source>
          <target state="translated">フィールド検索を指定するためのいくつかの（古い）ショートカットも利用できます。 &lt;code&gt;search_fields&lt;/code&gt; のフィールドの前に次の文字を付けることができます。これは、フィールドに &lt;code&gt;__&amp;lt;lookup&amp;gt;&lt;/code&gt; を追加することと同じです。</target>
        </trans-unit>
        <trans-unit id="78ee08374bb6fe16779c8ca5e3e0522d2fc7572c" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; classes have required arguments. &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, for example, requires that you give it a &lt;a href=&quot;../ref/models/fields#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt;. That&amp;rsquo;s used not only in the database schema, but in validation, as we&amp;rsquo;ll soon see.</source>
          <target state="translated">一部の&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;クラスには必須の引数があります。たとえば、&lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt;では、&lt;a href=&quot;../ref/models/fields#django.db.models.CharField.max_length&quot;&gt; &lt;code&gt;max_length&lt;/code&gt; &lt;/a&gt;を指定する必要があります。これはデータベーススキーマだけでなく、検証でも使用されます。</target>
        </trans-unit>
        <trans-unit id="8ad23bdf1898c6566dc19368d531825cc233dc88" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;index&quot;&gt;django.contrib&lt;/a&gt; applications take advantage of the sites framework but are architected in a way that doesn&amp;rsquo;t &lt;em&gt;require&lt;/em&gt; the sites framework to be installed in your database. (Some people don&amp;rsquo;t want to, or just aren&amp;rsquo;t &lt;em&gt;able&lt;/em&gt; to install the extra database table that the sites framework requires.) For those cases, the framework provides a &lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt;&lt;code&gt;django.contrib.sites.requests.RequestSite&lt;/code&gt;&lt;/a&gt; class, which can be used as a fallback when the database-backed sites framework is not available.</source>
          <target state="translated">一部の&lt;a href=&quot;index&quot;&gt;django.contrib&lt;/a&gt;アプリケーションは、サイトフレームワークを利用してい&lt;em&gt;ますが&lt;/em&gt;、サイトフレームワークをデータベースにインストール&lt;em&gt;する必要&lt;/em&gt;がないように設計されています。（一部の人々はしたくない、またはちょうどではないん&lt;em&gt;可能な&lt;/em&gt;サイトのフレームワークが必要とする追加のデータベーステーブルをインストールする。）このような場合のために、フレームワークが提供&lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt; &lt;code&gt;django.contrib.sites.requests.RequestSite&lt;/code&gt; の&lt;/a&gt;クラスとすることができますデータベースを利用したサイトフレームワークが利用できない場合のフォールバックとして使用されます。</target>
        </trans-unit>
        <trans-unit id="2f9ec2fcd24e83e4cbf05ef25ff3d184e319a8ca" translate="yes" xml:space="preserve">
          <source>Some Django templates context processors return a fixed value. For Jinja2 templates, this layer of indirection isn&amp;rsquo;t necessary since you can add constants directly in &lt;code&gt;jinja2.Environment&lt;/code&gt;.</source>
          <target state="translated">一部のDjangoテンプレートコンテキストプロセッサは、固定値を返します。Jinja2テンプレートの場合、定数を &lt;code&gt;jinja2.Environment&lt;/code&gt; に直接追加できるため、この間接層は不要です。</target>
        </trans-unit>
        <trans-unit id="9beeac4fefe22b2ac7a5959e4c79700f9e5ab3c0" translate="yes" xml:space="preserve">
          <source>Some Python libraries are also implemented in C, and can be much faster. They aim to offer the same APIs. Note that compatibility issues and behavior differences are not unknown (and not always immediately evident).</source>
          <target state="translated">Pythonのライブラリの中には、C言語で実装されているものもあり、より高速化することができます。これらは同じAPIを提供することを目的としています。互換性の問題や動作の違いは未知のものではないことに注意してください (また、すぐに明らかになるとは限りません)。</target>
        </trans-unit>
        <trans-unit id="dc6004eaaf1dfc5fe3224f697cb779bde6a25056" translate="yes" xml:space="preserve">
          <source>Some actions are best if they&amp;rsquo;re made available to &lt;em&gt;any&lt;/em&gt; object in the admin site &amp;ndash; the export action defined above would be a good candidate. You can make an action globally available using &lt;a href=&quot;#django.contrib.admin.AdminSite.add_action&quot;&gt;&lt;code&gt;AdminSite.add_action()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">一部のアクションは、管理サイトの&lt;em&gt;任意の&lt;/em&gt;オブジェクトで使用できるようにする場合に最適です。上で定義したエクスポートアクションが適切な候補になります。&lt;a href=&quot;#django.contrib.admin.AdminSite.add_action&quot;&gt; &lt;code&gt;AdminSite.add_action()&lt;/code&gt; &lt;/a&gt;を使用して、アクションをグローバルに利用できるようにすることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="860276ec0a952cfccbad6fa70ecb9e9d0ae63381" translate="yes" xml:space="preserve">
          <source>Some attributes won&amp;rsquo;t make sense to include in the &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class of an abstract base class. For example, including &lt;code&gt;db_table&lt;/code&gt; would mean that all the child classes (the ones that don&amp;rsquo;t specify their own &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;) would use the same database table, which is almost certainly not what you want.</source>
          <target state="translated">一部の属性は、抽象基本クラスの&lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;クラスに含める意味がありません。たとえば、 &lt;code&gt;db_table&lt;/code&gt; を含めると、すべての子クラス（独自の&lt;a href=&quot;#meta-options&quot;&gt;Metaを&lt;/a&gt;指定しないクラス）が同じデータベーステーブルを使用することになります。</target>
        </trans-unit>
        <trans-unit id="48ddac3ff9ee3fffde3bc9983055377483a00c3d" translate="yes" xml:space="preserve">
          <source>Some browsers (Chrome, for example) provide settings that allow users to continue browsing sessions after closing and re-opening the browser. In some cases, this can interfere with the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt;&lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt;&lt;/a&gt; setting and prevent sessions from expiring on browser close. Please be aware of this while testing Django applications which have the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt;&lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt;&lt;/a&gt; setting enabled.</source>
          <target state="translated">一部のブラウザー（Chromeなど）には、ユーザーがブラウザーを閉じて再度開いた後もセッションの閲覧を続行できる設定があります。場合によっては、これが&lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt; &lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt; &lt;/a&gt;設定に干渉し、ブラウザを閉じるときにセッションが期限切れになるのを防ぐことができます。&lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt; &lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt; &lt;/a&gt;設定が有効になっているDjangoアプリケーションをテストするときは、これに注意してください。</target>
        </trans-unit>
        <trans-unit id="e343a5d579ed723e961eec44f99895b796fa4c79" translate="yes" xml:space="preserve">
          <source>Some browsers (specifically Internet Explorer) can disallow the use of persistent cookies or can have the indexes to the cookie jar corrupted on disk, thereby causing CSRF protection checks to (sometimes intermittently) fail. Change this setting to &lt;code&gt;None&lt;/code&gt; to use session-based CSRF cookies, which keep the cookies in-memory instead of on persistent storage.</source>
          <target state="translated">一部のブラウザー（特にInternet Explorer）は、永続的なCookieの使用を許可しないか、ディスク上のCookie jarへのインデックスが破損しているため、CSRF保護チェックが（断続的に）失敗することがあります。この設定を「 &lt;code&gt;None&lt;/code&gt; に変更して、セッションベースのCSRF Coo​​kieを使用します。これにより、永続的なストレージではなく、メモリ内にCookieが保持されます。</target>
        </trans-unit>
        <trans-unit id="b38e44e93652ea2e6cea516bd33630476f164097" translate="yes" xml:space="preserve">
          <source>Some browsers have the ability to accept hints about whether they should send the HTTP &lt;code&gt;Referer&lt;/code&gt; header when a user clicks a link; this hint is provided via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy&quot;&gt;the Referrer-Policy header&lt;/a&gt;. This header can suggest any of three behaviors to browsers:</source>
          <target state="translated">一部のブラウザは、ユーザーがリンクをクリックしたときにHTTP &lt;code&gt;Referer&lt;/code&gt; ヘッダーを送信する必要があるかどうかについてのヒントを受け入れる機能を備えています。このヒントは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy&quot;&gt;、Referrer-Policyヘッダー&lt;/a&gt;を介して提供されます。このヘッダーは、ブラウザに次の3つの動作のいずれかを提案できます。</target>
        </trans-unit>
        <trans-unit id="94f17d1dcbe8751b34f3b9eba967a1bd70fe65e6" translate="yes" xml:space="preserve">
          <source>Some browsers have the ability to block content that appears to be an &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS attack&lt;/a&gt;. They work by looking for JavaScript content in the GET or POST parameters of a page. If the JavaScript is replayed in the server&amp;rsquo;s response, the page is blocked from rendering and an error page is shown instead.</source>
          <target state="translated">一部のブラウザには、&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS攻撃の&lt;/a&gt;ように見えるコンテンツをブロックする機能があります。それらは、ページのGETまたはPOSTパラメーターでJavaScriptコンテンツを探すことによって機能します。サーバーの応答でJavaScriptが再生されると、ページのレンダリングがブロックされ、代わりにエラーページが表示されます。</target>
        </trans-unit>
        <trans-unit id="6c9928877027204c843d4efa084c546dc20bc25e" translate="yes" xml:space="preserve">
          <source>Some browsers will try to guess the content types of the assets that they fetch, overriding the &lt;code&gt;Content-Type&lt;/code&gt; header. While this can help display sites with improperly configured servers, it can also pose a security risk.</source>
          <target state="translated">一部のブラウザーは、取得するアセットのコンテンツタイプを推測し、 &lt;code&gt;Content-Type&lt;/code&gt; ヘッダーを上書きします。これは、サーバーが正しく構成されていないサイトを表示するのに役立ちますが、セキュリティ上のリスクをもたらす可能性もあります。</target>
        </trans-unit>
        <trans-unit id="5947ef1c3ff79affc0a0f315b61caf1ca05b732d" translate="yes" xml:space="preserve">
          <source>Some checks may be registered with multiple tags.</source>
          <target state="translated">チェックによっては複数のタグで登録されている場合があります。</target>
        </trans-unit>
        <trans-unit id="819f9354118a97dfea48164b3aac077a84091237" translate="yes" xml:space="preserve">
          <source>Some command options have different names when using &lt;code&gt;call_command()&lt;/code&gt; instead of &lt;code&gt;django-admin&lt;/code&gt; or &lt;code&gt;manage.py&lt;/code&gt;. For example, &lt;code&gt;django-admin
createsuperuser --no-input&lt;/code&gt; translates to &lt;code&gt;call_command('createsuperuser',
interactive=False)&lt;/code&gt;. To find what keyword argument name to use for &lt;code&gt;call_command()&lt;/code&gt;, check the command&amp;rsquo;s source code for the &lt;code&gt;dest&lt;/code&gt; argument passed to &lt;code&gt;parser.add_argument()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;django-admin&lt;/code&gt; または &lt;code&gt;manage.py&lt;/code&gt; の代わりに &lt;code&gt;call_command()&lt;/code&gt; を使用すると、一部のコマンドオプションの名前が異なります。たとえば、 &lt;code&gt;django-admin createsuperuser --no-input&lt;/code&gt; は &lt;code&gt;call_command('createsuperuser', interactive=False)&lt;/code&gt; 変換されます。 &lt;code&gt;call_command()&lt;/code&gt; に使用するキーワード引数名​​を見つけるには、コマンドのソースコードで &lt;code&gt;parser.add_argument()&lt;/code&gt; に渡された &lt;code&gt;dest&lt;/code&gt; 引数を確認します。</target>
        </trans-unit>
        <trans-unit id="40ed5069719ca706a052b71ed888fb914044b4bd" translate="yes" xml:space="preserve">
          <source>Some commands are only available when the &lt;code&gt;django.contrib&lt;/code&gt; application that &lt;a href=&quot;../howto/custom-management-commands&quot;&gt;implements&lt;/a&gt; them has been &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt;. This section describes them grouped by their application.</source>
          <target state="translated">一部のコマンドは、それらを&lt;a href=&quot;../howto/custom-management-commands&quot;&gt;実装&lt;/a&gt;する &lt;code&gt;django.contrib&lt;/code&gt; アプリケーションが&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/a&gt;ている場合にのみ使用できます。このセクションでは、アプリケーションごとにグループ化して説明します。</target>
        </trans-unit>
        <trans-unit id="5025f5d674e485b55f68ce091f6acfa0c0ba68ec" translate="yes" xml:space="preserve">
          <source>Some commonly used options are:</source>
          <target state="translated">一般的に使用されているオプションはいくつかあります。</target>
        </trans-unit>
        <trans-unit id="47ee5f1aba7a690b33d96780b096a0051bbc6b17" translate="yes" xml:space="preserve">
          <source>Some data types (for example, dates) need to be in a specific format before they can be used by a database backend. &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_value&quot;&gt;&lt;code&gt;get_db_prep_value()&lt;/code&gt;&lt;/a&gt; is the method where those conversions should be made. The specific connection that will be used for the query is passed as the &lt;code&gt;connection&lt;/code&gt; parameter. This allows you to use backend-specific conversion logic if it is required.</source>
          <target state="translated">一部のデータ型（日付など）は、データベースバックエンドで使用する前に特定の形式にする必要があります。&lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_value&quot;&gt; &lt;code&gt;get_db_prep_value()&lt;/code&gt; &lt;/a&gt;は、これらの変換を行う必要があるメソッドです。クエリに使用される特定の接続は、 &lt;code&gt;connection&lt;/code&gt; パラメーターとして渡されます。これにより、必要に応じてバックエンド固有の変換ロジックを使用できます。</target>
        </trans-unit>
        <trans-unit id="0e4eb09639ac8f304e3c1a27ef0ae0e9f9e76a12" translate="yes" xml:space="preserve">
          <source>Some database column types accept parameters, such as &lt;code&gt;CHAR(25)&lt;/code&gt;, where the parameter &lt;code&gt;25&lt;/code&gt; represents the maximum column length. In cases like these, it&amp;rsquo;s more flexible if the parameter is specified in the model rather than being hard-coded in the &lt;code&gt;db_type()&lt;/code&gt; method. For example, it wouldn&amp;rsquo;t make much sense to have a &lt;code&gt;CharMaxlength25Field&lt;/code&gt;, shown here:</source>
          <target state="translated">一部のデータベース列タイプは &lt;code&gt;CHAR(25)&lt;/code&gt; などのパラメーターを受け入れます。パラメーター &lt;code&gt;25&lt;/code&gt; は列の最大長を表します。このような場合、パラメーターが &lt;code&gt;db_type()&lt;/code&gt; メソッドでハードコーディングされるのではなく、モデルで指定された方がより柔軟です。たとえば、次に示すように &lt;code&gt;CharMaxlength25Field&lt;/code&gt; を持つことはあまり意味がありません。</target>
        </trans-unit>
        <trans-unit id="2afc9560a0399a1863719f5c344bff8cf0e6311f" translate="yes" xml:space="preserve">
          <source>Some databases accept flags that can return more information about the query. Pass these flags as keyword arguments. For example, when using PostgreSQL:</source>
          <target state="translated">データベースの中には、クエリに関するより多くの情報を返すフラグを受け付けるものがあります。これらのフラグをキーワード引数として渡します。例えば、PostgreSQLを使用する場合。</target>
        </trans-unit>
        <trans-unit id="d12081cb143936f05d46d555968708fe3567a874" translate="yes" xml:space="preserve">
          <source>Some databases may handle a nonexistent nth-value differently. For example, Oracle returns an empty string rather than &lt;code&gt;None&lt;/code&gt; for character-based expressions. Django doesn&amp;rsquo;t do any conversions in these cases.</source>
          <target state="translated">一部のデータベースでは、存在しないn番目の値を異なる方法で処理する場合があります。たとえば、Oracleは文字ベースの式に対して &lt;code&gt;None&lt;/code&gt; ではなく空の文字列を返します。これらの場合、Djangoは変換を行いません。</target>
        </trans-unit>
        <trans-unit id="ee0da3ba10c0561259c61cc02d3e3cfd1503233c" translate="yes" xml:space="preserve">
          <source>Some developers like to make available both Atom &lt;em&gt;and&lt;/em&gt; RSS versions of their feeds. To do that, you can create a subclass of your &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class and set the &lt;code&gt;feed_type&lt;/code&gt; to something different. Then update your URLconf to add the extra versions.</source>
          <target state="translated">一部の開発者は、フィードのAtom バージョン&lt;em&gt;と&lt;/em&gt; RSSバージョンの両方を利用可能にすること&lt;em&gt;を&lt;/em&gt;望んでいます。これを行うには、&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt;クラスのサブクラスを作成し、 &lt;code&gt;feed_type&lt;/code&gt; を別の値に設定します。次に、URLconfを更新して、追加のバージョンを追加します。</target>
        </trans-unit>
        <trans-unit id="76b15ddd9bbae2a42a5c96bc2b644d8162ba90e8" translate="yes" xml:space="preserve">
          <source>Some examples</source>
          <target state="translated">いくつかの例</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="2907c1539c155d2d06cf7124339feb9815ef8918" translate="yes" xml:space="preserve">
          <source>Some field types need some extra handling. For example, files that are uploaded using a form need to be handled differently (they can be retrieved from &lt;code&gt;request.FILES&lt;/code&gt;, rather than &lt;code&gt;request.POST&lt;/code&gt;). For details of how to handle file uploads with your form, see &lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;Binding uploaded files to a form&lt;/a&gt;.</source>
          <target state="translated">一部のフィールドタイプでは、追加の処理が必要です。たとえば、フォームの必要性を使用してアップロードされたファイルは、（彼らはから取得することができます異なる方法で処理する &lt;code&gt;request.FILES&lt;/code&gt; のではなく、 &lt;code&gt;request.POST&lt;/code&gt; ）。フォームでファイルのアップロードを処理する方法の詳細については、&lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;アップロードしたファイルをフォームにバインド&lt;/a&gt;するを参照してください。</target>
        </trans-unit>
        <trans-unit id="7066db4e492a0be3a6b4063c837dd4af308da5ad" translate="yes" xml:space="preserve">
          <source>Some fields define extra attributes on the model, e.g. a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; defines an extra attribute with &lt;code&gt;_id&lt;/code&gt; appended to the field name, as well as &lt;code&gt;related_name&lt;/code&gt; and &lt;code&gt;related_query_name&lt;/code&gt; on the foreign model.</source>
          <target state="translated">一部のフィールドは、モデルの追加の属性を定義します。たとえば、&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;は、フィールド名に &lt;code&gt;_id&lt;/code&gt; が追加された追加の属性、および外部モデルの &lt;code&gt;related_name&lt;/code&gt; と &lt;code&gt;related_query_name&lt;/code&gt; を定義します。</target>
        </trans-unit>
        <trans-unit id="e5793debf164ca6cec38def668a248ae75d3483b" translate="yes" xml:space="preserve">
          <source>Some fields in a model won&amp;rsquo;t be deferred, even if you ask for them. You can never defer the loading of the primary key. If you are using &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; to retrieve related models, you shouldn&amp;rsquo;t defer the loading of the field that connects from the primary model to the related one, doing so will result in an error.</source>
          <target state="translated">モデルの一部のフィールドは、要求しても延期されません。主キーのロードを遅らせることはできません。あなたが使用している場合&lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;関連のモデルを取得するには、フィールドの読み込み延期いけない関連するものに主要モデルからコネクトは、そうすると、エラーになりますことを。</target>
        </trans-unit>
        <trans-unit id="6387aa2204d8874bbb172b741895ccb637353b5f" translate="yes" xml:space="preserve">
          <source>Some filters take an argument:</source>
          <target state="translated">一部のフィルタは引数を取ります。</target>
        </trans-unit>
        <trans-unit id="337ae5df2b22204a5e03939b03b67510bbb5e057" translate="yes" xml:space="preserve">
          <source>Some filters take arguments. A filter argument looks like this: &lt;code&gt;{{
bio|truncatewords:30 }}&lt;/code&gt;. This will display the first 30 words of the &lt;code&gt;bio&lt;/code&gt; variable.</source>
          <target state="translated">一部のフィルターは引数を取ります。フィルター引数は次のようになります： &lt;code&gt;{{ bio|truncatewords:30 }}&lt;/code&gt; 。これにより、 &lt;code&gt;bio&lt;/code&gt; 変数の最初の30ワードが表示されます。</target>
        </trans-unit>
        <trans-unit id="f0991310fccbc2fc5417e6fc0c6b37dc5d602987" translate="yes" xml:space="preserve">
          <source>Some general advice</source>
          <target state="translated">一般的なアドバイス</target>
        </trans-unit>
        <trans-unit id="9394ce57d7c6767a48bd5d52816526aefde5f6c8" translate="yes" xml:space="preserve">
          <source>Some information on available parameters can be found in the &lt;a href=&quot;../topics/cache#cache-arguments&quot;&gt;cache arguments&lt;/a&gt; documentation. For more information, consult your backend module&amp;rsquo;s own documentation.</source>
          <target state="translated">使用可能なパラメーターに関するいくつかの情報は、&lt;a href=&quot;../topics/cache#cache-arguments&quot;&gt;キャッシュ引数の&lt;/a&gt;ドキュメントにあります。詳細については、バックエンドモジュールの独自のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7d6a2765c22e184a074a9229f28efcd48fbd37ba" translate="yes" xml:space="preserve">
          <source>Some information on available parameters can be found in the &lt;a href=&quot;databases&quot;&gt;Database Backends&lt;/a&gt; documentation. For more information, consult your backend module&amp;rsquo;s own documentation.</source>
          <target state="translated">使用可能なパラメーターに関するいくつかの情報は、&lt;a href=&quot;databases&quot;&gt;データベースバックエンドの&lt;/a&gt;ドキュメントに記載されています。詳細については、バックエンドモジュールの独自のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5868ed7c92929805cff3172e912f66f09e2b60ed" translate="yes" xml:space="preserve">
          <source>Some kinds of projects may have authentication requirements for which Django&amp;rsquo;s built-in &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model is not always appropriate. For instance, on some sites it makes more sense to use an email address as your identification token instead of a username.</source>
          <target state="translated">プロジェクトの種類によっては、Djangoの組み込みの&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;モデルが必ずしも適切ではない認証要件がある場合があります。たとえば、一部のサイトでは、ユーザー名の代わりに電子メールアドレスを識別トークンとして使用する方が理にかなっています。</target>
        </trans-unit>
        <trans-unit id="57b5eb4bf16aee0330b0131fc6ed82a084a86536" translate="yes" xml:space="preserve">
          <source>Some locales use context-sensitive formats for numbers, which Django&amp;rsquo;s localization system cannot handle automatically.</source>
          <target state="translated">一部のロケールは、Djangoのローカリゼーションシステムが自動的に処理できない、数値にコンテキスト依存の形式を使用します。</target>
        </trans-unit>
        <trans-unit id="1d1097822e6fb12b7ad28d75f598d30c339f9629" translate="yes" xml:space="preserve">
          <source>Some locales use non-uniform digit grouping, e.g. &lt;code&gt;10,00,00,000&lt;/code&gt; in &lt;code&gt;en_IN&lt;/code&gt;. For this case, you can provide a sequence with the number of digit group sizes to be applied. The first number defines the size of the group preceding the decimal delimiter, and each number that follows defines the size of preceding groups. If the sequence is terminated with &lt;code&gt;-1&lt;/code&gt;, no further grouping is performed. If the sequence terminates with a &lt;code&gt;0&lt;/code&gt;, the last group size is used for the remainder of the number.</source>
          <target state="translated">いくつかのロケールでは、不均一な桁区切り、例えば使用 &lt;code&gt;10,00,00,000&lt;/code&gt; をして &lt;code&gt;en_IN&lt;/code&gt; 。この場合、適用される数字グループのサイズの数を含むシーケンスを提供できます。最初の数値は、小数点の前のグループのサイズを定義し、その後の各数値は、先行するグループのサイズを定義します。シーケンスが &lt;code&gt;-1&lt;/code&gt; で終了する場合、それ以上のグループ化は実行されません。シーケンスが &lt;code&gt;0&lt;/code&gt; で終了する場合、最後のグループサイズが残りの数に使用されます。</target>
        </trans-unit>
        <trans-unit id="2c14b638974672a908e07dee2bd01d9b9a080929" translate="yes" xml:space="preserve">
          <source>Some of the admin templates, such as &lt;code&gt;change_list_results.html&lt;/code&gt; are used to render custom inclusion tags. These may be overridden, but in such cases you are probably better off creating your own version of the tag in question and giving it a different name. That way you can use it selectively.</source>
          <target state="translated">&lt;code&gt;change_list_results.html&lt;/code&gt; などの一部の管理テンプレートは、カスタム包含タグのレンダリングに使用されます。これらはオーバーライドされる可能性がありますが、そのような場合は、問題のタグの独自のバージョンを作成し、別の名前を付けることをお勧めします。そうすれば、それを選択的に使用できます。</target>
        </trans-unit>
        <trans-unit id="6101ff172eb911dcde2b1ca593f435b77a080069" translate="yes" xml:space="preserve">
          <source>Some of the checks described below can be automated using the &lt;a href=&quot;../../ref/django-admin#cmdoption-check-deploy&quot;&gt;&lt;code&gt;check
--deploy&lt;/code&gt;&lt;/a&gt; option. Be sure to run it against your production settings file as described in the option&amp;rsquo;s documentation.</source>
          <target state="translated">以下で説明するチェックの一部は、&lt;a href=&quot;../../ref/django-admin#cmdoption-check-deploy&quot;&gt; &lt;code&gt;check --deploy&lt;/code&gt; &lt;/a&gt;オプションを使用して自動化できます。オプションのドキュメントに記載されているように、必ず本番設定ファイルに対して実行してください。</target>
        </trans-unit>
        <trans-unit id="da331f17e98722c8e0b5969c1ecc015cb60ddb68" translate="yes" xml:space="preserve">
          <source>Some of the examples on this page assume that an &lt;code&gt;Article&lt;/code&gt; model has been defined as follows in &lt;code&gt;myapp/models.py&lt;/code&gt;:</source>
          <target state="translated">このページの例のいくつかは、 &lt;code&gt;Article&lt;/code&gt; モデルが &lt;code&gt;myapp/models.py&lt;/code&gt; で次のように定義されていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="2c6083ebf6de6ba95038ffc54f98581c39955816" translate="yes" xml:space="preserve">
          <source>Some of the examples on this page assume that an &lt;code&gt;Author&lt;/code&gt; model has been defined as follows in &lt;code&gt;myapp/models.py&lt;/code&gt;:</source>
          <target state="translated">このページのいくつかの例では、 &lt;code&gt;Author&lt;/code&gt; モデルが &lt;code&gt;myapp/models.py&lt;/code&gt; で次のように定義されていると想定しています。</target>
        </trans-unit>
        <trans-unit id="d6de71cf9c1db874e223b4d1991e96b3757e16f1" translate="yes" xml:space="preserve">
          <source>Some of the middleware included in Django&amp;rsquo;s contrib apps set attributes on the request. If you don&amp;rsquo;t see the attribute on a request, be sure the appropriate middleware class is listed in &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Djangoのcontribアプリに含まれるミドルウェアの一部は、リクエストに属性を設定します。リクエストに属性が表示されない場合は、適切なミドルウェアクラスが&lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; に&lt;/a&gt;リストされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="55cdcaa17b2d4ef686332c95d1abb29cd60ee8ab" translate="yes" xml:space="preserve">
          <source>Some of the things you can do with the test client are:</source>
          <target state="translated">テストクライアントでできることはいくつかあります。</target>
        </trans-unit>
        <trans-unit id="48a7428f49f7906d462e795f9dbcbf65b483414f" translate="yes" xml:space="preserve">
          <source>Some of these applications make use of at least one database table, though, so we need to create the tables in the database before we can use them. To do that, run the following command:</source>
          <target state="translated">しかし、これらのアプリケーションの中には、少なくとも1つのデータベーステーブルを利用しているものもありますので、それらを利用する前にデータベース内のテーブルを作成する必要があります。そのためには、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="d3eab720e146373ff52bed04b0d67143a12e7505" translate="yes" xml:space="preserve">
          <source>Some of these checks may not be appropriate for your particular deployment configuration. For instance, if you do your HTTP to HTTPS redirection in a load balancer, it&amp;rsquo;d be irritating to be constantly warned about not having enabled &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;settings#std:setting-SILENCED_SYSTEM_CHECKS&quot;&gt;&lt;code&gt;SILENCED_SYSTEM_CHECKS&lt;/code&gt;&lt;/a&gt; to silence unneeded checks.</source>
          <target state="translated">これらのチェックの一部は、特定のデプロイメント構成には適切でない場合があります。たとえば、ロードバランサーでHTTPからHTTPSへのリダイレクトを行う場合、&lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; &lt;/a&gt;が有効になっていないことを常に警告されるのは苛立たしいことです。&lt;a href=&quot;settings#std:setting-SILENCED_SYSTEM_CHECKS&quot;&gt; &lt;code&gt;SILENCED_SYSTEM_CHECKS&lt;/code&gt; &lt;/a&gt;を使用して、不要なチェックを停止します。</target>
        </trans-unit>
        <trans-unit id="85ad33065f8090538b0c6acc0863627699aea233" translate="yes" xml:space="preserve">
          <source>Some of these form interface elements - text input or checkboxes - are built into HTML itself. Others are much more complex; an interface that pops up a date picker or allows you to move a slider or manipulate controls will typically use JavaScript and CSS as well as HTML form &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements to achieve these effects.</source>
          <target state="translated">これらのフォームインターフェイス要素の一部（テキスト入力またはチェックボックス）は、HTML自体に組み込まれています。他のものははるかに複雑です。日付ピッカーをポップアップしたり、スライダーを移動したり、コントロールを操作したりできるインターフェイスは、通常、JavaScriptとCSS、およびHTMLフォームの &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 要素を使用して、これらの効果を実現します。</target>
        </trans-unit>
        <trans-unit id="19eb1b5065405427669f495e58ed9b1ea0e2fbf3" translate="yes" xml:space="preserve">
          <source>Some of these other loaders are disabled by default, but you can activate them by adding a &lt;code&gt;'loaders'&lt;/code&gt; option to your &lt;code&gt;DjangoTemplates&lt;/code&gt; backend in the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting or passing a &lt;code&gt;loaders&lt;/code&gt; argument to &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;loaders&lt;/code&gt; should be a list of strings or tuples, where each represents a template loader class. Here are the template loaders that come with Django:</source>
          <target state="translated">これらの他のローダーの一部はデフォルトで無効になっていますが、&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;設定で &lt;code&gt;DjangoTemplates&lt;/code&gt; バックエンドに &lt;code&gt;'loaders'&lt;/code&gt; オプションを追加するか、 &lt;code&gt;loaders&lt;/code&gt; 引数を&lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; に&lt;/a&gt;渡すことで、ローダーをアクティブ化できます。 &lt;code&gt;loaders&lt;/code&gt; は文字列またはタプルのリストである必要があり、それぞれがテンプレートローダークラスを表します。Djangoに付属するテンプレートローダーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="daaa65d31ecc6474b926e6dcd6aeb65b14ea78a0" translate="yes" xml:space="preserve">
          <source>Some operations &amp;ndash; such as caching &amp;ndash; cannot be performed on an unrendered template. They must be performed on a fully complete and rendered response.</source>
          <target state="translated">キャッシュなどの一部の操作は、レンダリングされていないテンプレートでは実行できません。完全にレンダリングされた応答に対して実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="4a1da87e8fdc5d580d29ea9aa687bd55e4bebdb5" translate="yes" xml:space="preserve">
          <source>Some possible workarounds for this are &lt;a href=&quot;https://www.sqlite.org/faq.html#q18&quot;&gt;documented at sqlite.org&lt;/a&gt;, but they aren&amp;rsquo;t utilized by the default SQLite backend in Django, as incorporating them would be fairly difficult to do robustly. Thus, Django exposes the default SQLite behavior and you should be aware of this when doing case-insensitive or substring filtering.</source>
          <target state="translated">これに対するいくつかの可能な回避策&lt;a href=&quot;https://www.sqlite.org/faq.html#q18&quot;&gt;はsqlite.org&lt;/a&gt;に文書化されていますが、それらを組み込むことは堅牢に行うのがかなり難しいため、DjangoのデフォルトのSQLiteバックエンドでは利用されていません。したがって、DjangoはデフォルトのSQLiteの動作を公開します。大文字と小文字を区別しない、または部分文字列のフィルタリングを行う場合は、このことに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="caa794be9052acadd3135f0e7a395d9862ddc995" translate="yes" xml:space="preserve">
          <source>Some programmers follow a discipline called &amp;ldquo;&lt;a href=&quot;https://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;test-driven development&lt;/a&gt;&amp;rdquo;; they actually write their tests before they write their code. This might seem counter-intuitive, but in fact it&amp;rsquo;s similar to what most people will often do anyway: they describe a problem, then create some code to solve it. Test-driven development formalizes the problem in a Python test case.</source>
          <target state="translated">一部のプログラマーは、「&lt;a href=&quot;https://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;テスト駆動開発&lt;/a&gt;」と呼ばれる規律に従っています。彼らはコードを書く前に実際にテストを書いています。これは直感に反するように見えるかもしれませんが、実際にはほとんどの人がとにかくよくすることと似ています。問題を説明し、それを解決するためのコードを作成します。テスト駆動開発は、Pythonテストケースで問題を形式化します。</target>
        </trans-unit>
        <trans-unit id="160314f52a6a38c580552266e868afa1e35e8519" translate="yes" xml:space="preserve">
          <source>Some security audit tools flag this as a problem but as mentioned before, an attacker cannot steal a user&amp;rsquo;s browser&amp;rsquo;s CSRF cookie. &amp;ldquo;Stealing&amp;rdquo; or modifying &lt;em&gt;your own&lt;/em&gt; token using Firebug, Chrome dev tools, etc. isn&amp;rsquo;t a vulnerability.</source>
          <target state="translated">一部のセキュリティ監査ツールはこれを問題として報告しますが、前述のように、攻撃者はユーザーのブラウザーのCSRF Coo​​kieを盗むことはできません。Firebug、Chrome開発ツールなどを使用し&lt;em&gt;て独自の&lt;/em&gt;トークンを「盗む」または変更&lt;em&gt;すること&lt;/em&gt;は、脆弱性ではありません。</target>
        </trans-unit>
        <trans-unit id="0a681b2e5d2e7e7655f4c07a14fa98678dcaaec7" translate="yes" xml:space="preserve">
          <source>Some shortcut methods provide a standard way to add messages with commonly used tags (which are usually represented as HTML classes for the message):</source>
          <target state="translated">いくつかのショートカットメソッドは、一般的に使用されるタグ(通常はメッセージのHTMLクラスとして表現されます)を使ってメッセージを追加する標準的な方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="469d634137a4321a22b10566961e6bc83fc140ad" translate="yes" xml:space="preserve">
          <source>Some signals get sent many times, but you&amp;rsquo;ll only be interested in receiving a certain subset of those signals. For example, consider the &lt;a href=&quot;../ref/signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;django.db.models.signals.pre_save&lt;/code&gt;&lt;/a&gt; signal sent before a model gets saved. Most of the time, you don&amp;rsquo;t need to know when &lt;em&gt;any&lt;/em&gt; model gets saved &amp;ndash; just when one &lt;em&gt;specific&lt;/em&gt; model is saved.</source>
          <target state="translated">一部の信号は何度も送信されますが、それらの信号の特定のサブセットのみを受信することに関心があります。たとえば、モデルが保存される前に送信される&lt;a href=&quot;../ref/signals#django.db.models.signals.pre_save&quot;&gt; &lt;code&gt;django.db.models.signals.pre_save&lt;/code&gt; &lt;/a&gt;シグナルを考えてみましょう。ほとんどの場合&lt;em&gt;、&lt;/em&gt;モデルが保存されるタイミングを知る必要はありません。&lt;em&gt;特定の&lt;/em&gt;モデルが保存されるときだけです。</target>
        </trans-unit>
        <trans-unit id="7c9dc530f5e119144034e346e1c5031a908f66bf" translate="yes" xml:space="preserve">
          <source>Some subclasses of &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt;&lt;code&gt;ContentFile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../models/fields#django.db.models.fields.files.FieldFile&quot;&gt;&lt;code&gt;FieldFile&lt;/code&gt;&lt;/a&gt;, may replace this attribute with an object other than a Python &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. In these cases, this attribute may itself be a &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; subclass (and not necessarily the same subclass). Whenever possible, use the attributes and methods of the subclass itself rather than the those of the subclass&amp;rsquo;s &lt;code&gt;file&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt; &lt;code&gt;ContentFile&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../models/fields#django.db.models.fields.files.FieldFile&quot;&gt; &lt;code&gt;FieldFile&lt;/code&gt; &lt;/a&gt;を含む&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; の&lt;/a&gt;一部のサブクラスは、この属性をPython &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;以外のオブジェクトに置き換えます。このような場合、この属性自体が&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;サブクラスである可能性があります（必ずしも同じサブクラスである必要はありません）。可能な限り、サブクラスの &lt;code&gt;file&lt;/code&gt; 属性の属性とメソッドではなく、サブクラス自体の属性とメソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="00a04e5275baf7095708209a494fbc4d87835cd2" translate="yes" xml:space="preserve">
          <source>Some tags require beginning and ending tags (i.e. &lt;code&gt;{% tag %} ... tag contents
... {% endtag %}&lt;/code&gt;).</source>
          <target state="translated">一部のタグには、開始タグと終了タグが必要です（例： &lt;code&gt;{% tag %} ... tag contents ... {% endtag %}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cdd96e5a38db9a96308e6d8caf3aa4dd6af8f598" translate="yes" xml:space="preserve">
          <source>Some tags require beginning and ending tags:</source>
          <target state="translated">タグの中には、開始タグと終了タグが必要なものがあります。</target>
        </trans-unit>
        <trans-unit id="430149e5ab7c3968616c46d76026b790f7cfc545" translate="yes" xml:space="preserve">
          <source>Some technical notes:</source>
          <target state="translated">いくつかの技術的な注意事項。</target>
        </trans-unit>
        <trans-unit id="0f21d6d9133d637f625350d6411381df7986c52b" translate="yes" xml:space="preserve">
          <source>Some test suites also create views or materialized views; to run these, the user also needs &lt;code&gt;CREATE VIEW WITH ADMIN OPTION&lt;/code&gt; and &lt;code&gt;CREATE MATERIALIZED VIEW WITH ADMIN OPTION&lt;/code&gt; privileges. In particular, this is needed for Django&amp;rsquo;s own test suite.</source>
          <target state="translated">一部のテストスイートは、ビューまたはマテリアライズドビューも作成します。これらを実行するには、ユーザーは &lt;code&gt;CREATE VIEW WITH ADMIN OPTION&lt;/code&gt; および &lt;code&gt;CREATE MATERIALIZED VIEW WITH ADMIN OPTION&lt;/code&gt; 特権も必要です。特に、これはDjango自身のテストスイートに必要です。</target>
        </trans-unit>
        <trans-unit id="fe91dbd517e1619f524c6cc3d78de6f788ca2326" translate="yes" xml:space="preserve">
          <source>Some things to note:</source>
          <target state="translated">注意すべき点がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="be9bc95dd99725fed830e73ca2e14abbf0af76b7" translate="yes" xml:space="preserve">
          <source>Some useful assertions like:</source>
          <target state="translated">のような便利なアサーションもあります。</target>
        </trans-unit>
        <trans-unit id="d363e5b683aba5c83e7ca29c9b1204532c6e0484" translate="yes" xml:space="preserve">
          <source>Some widgets add further information to the context. For instance, all widgets that subclass &lt;code&gt;Input&lt;/code&gt; defines &lt;code&gt;widget['type']&lt;/code&gt; and &lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt; defines &lt;code&gt;widget['subwidgets']&lt;/code&gt; for looping purposes.</source>
          <target state="translated">一部のウィジェットは、コンテキストにさらに情報を追加します。たとえば、 &lt;code&gt;Input&lt;/code&gt; をサブクラス化するすべてのウィジェットは &lt;code&gt;widget['type']&lt;/code&gt; を定義し、&lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt;はループ目的で &lt;code&gt;widget['subwidgets']&lt;/code&gt; を定義します。</target>
        </trans-unit>
        <trans-unit id="917b7e7494ef688e0cf340247848548709210a81" translate="yes" xml:space="preserve">
          <source>Some work in optimization involves tackling performance shortcomings, but some of the work can be built-in to what you&amp;rsquo;d do anyway, as part of the good practices you should adopt even before you start thinking about improving performance.</source>
          <target state="translated">最適化の一部の作業には、パフォーマンスの欠点への取り組みが含まれますが、一部の作業は、パフォーマンスの改善を検討する前に採用する必要がある優れた実践の一部として、とにかく行うことを組み込むことができます。</target>
        </trans-unit>
        <trans-unit id="593fefe39e764d82f69ff407a66000a957c3ce7e" translate="yes" xml:space="preserve">
          <source>Sometimes (in fact, quite often) you can create functions to rapidly compute the &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3&quot;&gt;ETag&lt;/a&gt; value or the last-modified time for a resource, &lt;strong&gt;without&lt;/strong&gt; needing to do all the computations needed to construct the full view. Django can then use these functions to provide an &amp;ldquo;early bailout&amp;rdquo; option for the view processing. Telling the client that the content has not been modified since the last request, perhaps.</source>
          <target state="translated">完全なビューを構築するために必要なすべての計算を行わ&lt;strong&gt;なくても&lt;/strong&gt;、リソースの&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3&quot;&gt;ETag&lt;/a&gt;値または最終変更時刻を迅速に計算する関数を作成できる場合があります（実際、かなり頻繁に）。 Djangoはこれらの関数を使用して、ビュー処理の「早期救済」オプションを提供できます。おそらく最後のリクエスト以降、コンテンツが変更されていないことをクライアントに伝えます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="673c13bcd5af7f99ea336abb1b149140c4d91a59" translate="yes" xml:space="preserve">
          <source>Sometimes a database won&amp;rsquo;t be accessed by the majority of your views, for example because it&amp;rsquo;s the database of an external system, or thanks to caching. In such cases, you should set &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt;&lt;code&gt;CONN_MAX_AGE&lt;/code&gt;&lt;/a&gt; to a low value or even &lt;code&gt;0&lt;/code&gt;, because it doesn&amp;rsquo;t make sense to maintain a connection that&amp;rsquo;s unlikely to be reused. This will help keep the number of simultaneous connections to this database small.</source>
          <target state="translated">たとえば、外部システムのデータベースであったり、キャッシュのために、データベースがビューの大部分からアクセスされない場合があります。そのような場合、再利用される可能性が低い接続を維持することは意味がないため、&lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt; &lt;code&gt;CONN_MAX_AGE&lt;/code&gt; &lt;/a&gt;を低い値または &lt;code&gt;0&lt;/code&gt; に設定する必要があります。これにより、このデータベースへの同時接続数を少なく保つことができます。</target>
        </trans-unit>
        <trans-unit id="da1aaa7fc81491501b0570c47f9e07109364ee57" translate="yes" xml:space="preserve">
          <source>Sometimes database expressions can&amp;rsquo;t easily express a complex &lt;code&gt;WHERE&lt;/code&gt; clause. In these edge cases, use the &lt;code&gt;RawSQL&lt;/code&gt; expression. For example:</source>
          <target state="translated">データベース式では、複雑な &lt;code&gt;WHERE&lt;/code&gt; 句を簡単に表現できない場合があります。これらのエッジケースでは、 &lt;code&gt;RawSQL&lt;/code&gt; 式を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="8f8777603f8fd0ff4e4efc9d8fe66e90a1639a32" translate="yes" xml:space="preserve">
          <source>Sometimes different database vendors require different SQL for the same operation. For this example we will rewrite a custom implementation for MySQL for the NotEqual operator. Instead of &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; we will be using &lt;code&gt;!=&lt;/code&gt; operator. (Note that in reality almost all databases support both, including all the official databases supported by Django).</source>
          <target state="translated">異なるデータベースベンダーが、同じ操作に対して異なるSQLを必要とする場合があります。この例では、MySQLのカスタム実装をNotEqual演算子用に書き換えます。 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; の代わりに、 &lt;code&gt;!=&lt;/code&gt; 演算子を使用します。（実際には、Djangoがサポートするすべての公式データベースを含め、ほとんどすべてのデータベースが両方をサポートしていることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="0f3bc1e56efc0b2a0c8f199ec05380d6c2a61d7e" translate="yes" xml:space="preserve">
          <source>Sometimes even &lt;a href=&quot;#django.db.models.Manager.raw&quot;&gt;&lt;code&gt;Manager.raw()&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t quite enough: you might need to perform queries that don&amp;rsquo;t map cleanly to models, or directly execute &lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; queries.</source>
          <target state="translated">場合によっては、&lt;a href=&quot;#django.db.models.Manager.raw&quot;&gt; &lt;code&gt;Manager.raw()&lt;/code&gt; &lt;/a&gt;でも十分ではないことがあります。モデルに完全にマッピングされていないクエリを実行するか、直接 &lt;code&gt;UPDATE&lt;/code&gt; 、 &lt;code&gt;INSERT&lt;/code&gt; 、または &lt;code&gt;DELETE&lt;/code&gt; クエリを実行する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="bc36a41eeb518efe23ce133cd1acb02e33245cb1" translate="yes" xml:space="preserve">
          <source>Sometimes it may seem a chore to tear yourself away from your productive, creative programming work to face the unglamorous and unexciting business of writing tests, particularly when you know your code is working properly.</source>
          <target state="translated">時には、生産的で創造的なプログラミングの仕事から、テストを書くという見栄えの悪い、ワクワクしない仕事に向き合うことが雑に思えることもあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="2cf403f88d3d392ed9216f02e8c43f5789050770" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s difficult to figure out where to get started with writing tests. If you have written several thousand lines of Python, choosing something to test might not be easy. In such a case, it&amp;rsquo;s fruitful to write your first test the next time you make a change, either when you add a new feature or fix a bug.</source>
          <target state="translated">テストの作成をどこから始めればよいかを理解するのが難しい場合があります。Pythonを数千行書いた場合、テストするものを選択するのは簡単ではないかもしれません。そのような場合、新しい機能を追加したり、バグを修正したりするときに、次に変更を加えるときに最初のテストを書くことは有益です。</target>
        </trans-unit>
        <trans-unit id="229736a5fc6ef7c561080e9933dc735533c69f6b" translate="yes" xml:space="preserve">
          <source>Sometimes particular views require different upload behavior. In these cases, you can override upload handlers on a per-request basis by modifying &lt;code&gt;request.upload_handlers&lt;/code&gt;. By default, this list will contain the upload handlers given by &lt;a href=&quot;../../ref/settings#std:setting-FILE_UPLOAD_HANDLERS&quot;&gt;&lt;code&gt;FILE_UPLOAD_HANDLERS&lt;/code&gt;&lt;/a&gt;, but you can modify the list as you would any other list.</source>
          <target state="translated">特定のビューでは、異なるアップロード動作が必要になる場合があります。これらの場合、 &lt;code&gt;request.upload_handlers&lt;/code&gt; を変更することで、リクエストごとにアップロードハンドラーをオーバーライドできます。デフォルトでは、このリストには&lt;a href=&quot;../../ref/settings#std:setting-FILE_UPLOAD_HANDLERS&quot;&gt; &lt;code&gt;FILE_UPLOAD_HANDLERS&lt;/code&gt; &lt;/a&gt;で指定されたアップロードハンドラが含まれますが、他のリストと同じようにリストを変更できます。</target>
        </trans-unit>
        <trans-unit id="7dd6b92ca1138a34dc6738b6b0dd2d8a474e6e9c" translate="yes" xml:space="preserve">
          <source>Sometimes tests will need to be updated. Suppose that we amend our views so that only &lt;code&gt;Questions&lt;/code&gt; with &lt;code&gt;Choices&lt;/code&gt; are published. In that case, many of our existing tests will fail - &lt;em&gt;telling us exactly which tests need to be amended to bring them up to date&lt;/em&gt;, so to that extent tests help look after themselves.</source>
          <target state="translated">テストを更新する必要がある場合があります。それだけので、私たちは私たちの見解を改正することを想定 &lt;code&gt;Questions&lt;/code&gt; と &lt;code&gt;Choices&lt;/code&gt; 公開されています。その場合、既存のテストの多くは失敗&lt;em&gt;します。それらを最新&lt;/em&gt;にするためにどのテストを&lt;em&gt;修正する必要があるかを正確に通知します&lt;/em&gt;。そのため、テストは自分の面倒を見るのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="fd12f80384af1fa7e96b2e203d80d64f7e5c7f08" translate="yes" xml:space="preserve">
          <source>Sometimes the basic features for custom template tag creation aren&amp;rsquo;t enough. Don&amp;rsquo;t worry, Django gives you complete access to the internals required to build a template tag from the ground up.</source>
          <target state="translated">カスタムテンプレートタグを作成するための基本的な機能では不十分な場合があります。心配する必要はありません。Djangoを使用すると、テンプレートタグをゼロから構築するために必要な内部構造に完全にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="ae6e7ec53c4bc63d7b2948ab07efa15d50fcaf1d" translate="yes" xml:space="preserve">
          <source>Sometimes when you use &lt;a href=&quot;#topics-serialization-natural-keys&quot;&gt;natural foreign keys&lt;/a&gt; you&amp;rsquo;ll need to deserialize data where an object has a foreign key referencing another object that hasn&amp;rsquo;t yet been deserialized. This is called a &amp;ldquo;forward reference&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;#topics-serialization-natural-keys&quot;&gt;自然な外部キー&lt;/a&gt;を使用する場合、オブジェクトが、まだ逆シリアル化されていない別のオブジェクトを参照する外部キーを持つデータを逆シリアル化する必要がある場合があります。これは「前方参照」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="d24133e3cc375ed07684dff074d4f0110dc671a7" translate="yes" xml:space="preserve">
          <source>Sometimes with &lt;a href=&quot;../../topics/db/models#multi-table-inheritance&quot;&gt;multi-table inheritance&lt;/a&gt; you may want to delete only a child model&amp;rsquo;s data. Specifying &lt;code&gt;keep_parents=True&lt;/code&gt; will keep the parent model&amp;rsquo;s data.</source>
          <target state="translated">時々で&lt;a href=&quot;../../topics/db/models#multi-table-inheritance&quot;&gt;マルチテーブル継承&lt;/a&gt;あなただけの子モデルのデータを削除することがあります。 &lt;code&gt;keep_parents=True&lt;/code&gt; を指定すると、親モデルのデータが保持されます。</target>
        </trans-unit>
        <trans-unit id="4806a1a7b873a8447eee39bc86f71e23772ad650" translate="yes" xml:space="preserve">
          <source>Sometimes words have several meanings, such as &lt;code&gt;&quot;May&quot;&lt;/code&gt; in English, which refers to a month name and to a verb. To enable translators to translate these words correctly in different contexts, you can use the &lt;a href=&quot;../../ref/utils#django.utils.translation.pgettext&quot;&gt;&lt;code&gt;django.utils.translation.pgettext()&lt;/code&gt;&lt;/a&gt; function, or the &lt;a href=&quot;../../ref/utils#django.utils.translation.npgettext&quot;&gt;&lt;code&gt;django.utils.translation.npgettext()&lt;/code&gt;&lt;/a&gt; function if the string needs pluralization. Both take a context string as the first variable.</source>
          <target state="translated">単語には、月の名前や動詞を指す英語の &lt;code&gt;&quot;May&quot;&lt;/code&gt; など、いくつかの意味がある場合があります。翻訳者がこれらの単語をさまざまなコンテキストで正しく翻訳できるようにするには、&lt;a href=&quot;../../ref/utils#django.utils.translation.pgettext&quot;&gt; &lt;code&gt;django.utils.translation.pgettext()&lt;/code&gt; &lt;/a&gt;関数、または文字列が複数化が必要な場合は&lt;a href=&quot;../../ref/utils#django.utils.translation.npgettext&quot;&gt; &lt;code&gt;django.utils.translation.npgettext()&lt;/code&gt; &lt;/a&gt;関数を使用できます。どちらも最初の変数としてコンテキスト文字列を取ります。</target>
        </trans-unit>
        <trans-unit id="2a867b8b6ca6927331226f683223505e5b2ac7c7" translate="yes" xml:space="preserve">
          <source>Sometimes you might want to cache multiple copies of a fragment depending on some dynamic data that appears inside the fragment. For example, you might want a separate cached copy of the sidebar used in the previous example for every user of your site. Do this by passing one or more additional arguments, which may be variables with or without filters, to the &lt;code&gt;{% cache %}&lt;/code&gt; template tag to uniquely identify the cache fragment:</source>
          <target state="translated">フラグメント内に表示される動的データによっては、フラグメントの複数のコピーをキャッシュしたい場合があります。たとえば、サイトのすべてのユーザーに対して、前の例で使用したサイドバーの個別のキャッシュコピーが必要になる場合があります。これを行うには、1つ以上の追加の引数（フィルターありまたはなしの変数）を &lt;code&gt;{% cache %}&lt;/code&gt; テンプレートタグに渡して、キャッシュフラグメントを一意に識別します。</target>
        </trans-unit>
        <trans-unit id="8046e8375a5dfd646993146d2dd96622032c132a" translate="yes" xml:space="preserve">
          <source>Sometimes you need to disable certain actions &amp;ndash; especially those &lt;a href=&quot;#adminsite-actions&quot;&gt;registered site-wide&lt;/a&gt; &amp;ndash; for particular objects. There&amp;rsquo;s a few ways you can disable actions:</source>
          <target state="translated">特定のオブジェクトに対して、特定のアクション（特に&lt;a href=&quot;#adminsite-actions&quot;&gt;サイト全体に登録されている&lt;/a&gt;アクション）を無効にする必要がある場合があります。アクションを無効にする方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="7a377fda803bd1771bdf0ac49923ce88acdc92be" translate="yes" xml:space="preserve">
          <source>Sometimes you need to perform an action related to the current database transaction, but only if the transaction successfully commits. Examples might include a &lt;a href=&quot;http://www.celeryproject.org/&quot;&gt;Celery&lt;/a&gt; task, an email notification, or a cache invalidation.</source>
          <target state="translated">トランザクションが正常にコミットされた場合にのみ、現在のデータベーストランザクションに関連するアクションを実行する必要がある場合があります。例としては、&lt;a href=&quot;http://www.celeryproject.org/&quot;&gt;Celery&lt;/a&gt;タスク、電子メール通知、キャッシュの無効化などがあります。</target>
        </trans-unit>
        <trans-unit id="a8e34eb88412dd3f08c356a80a94469a3f2d93d8" translate="yes" xml:space="preserve">
          <source>Sometimes you need to perform an action related to the current database transaction, but only if the transaction successfully commits. Examples might include a &lt;a href=&quot;https://pypi.org/project/celery/&quot;&gt;Celery&lt;/a&gt; task, an email notification, or a cache invalidation.</source>
          <target state="translated">現在のデータベーストランザクションに関連するアクションを実行する必要がある場合がありますが、トランザクションが正常にコミットされた場合に限ります。例としては、&lt;a href=&quot;https://pypi.org/project/celery/&quot;&gt;Celery&lt;/a&gt;タスク、電子メール通知、キャッシュの無効化などがあります。</target>
        </trans-unit>
        <trans-unit id="acd13259a23274369029b7cb69af3d5b3f160796" translate="yes" xml:space="preserve">
          <source>Sometimes you want to set a field to a particular value for all the objects in a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;. You can do this with the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; method. For example:</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; の&lt;/a&gt;すべてのオブジェクトの特定の値にフィールドを設定したい場合があります。これは&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.update&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt;メソッドで行うことができます。例えば：</target>
        </trans-unit>
        <trans-unit id="65d75093d31032f3432361c13b408b08a86773dd" translate="yes" xml:space="preserve">
          <source>Sometimes you&amp;rsquo;ll need to perform a simple arithmetic task on a field, such as incrementing or decrementing the current value. One way of achieving this is doing the arithmetic in Python like:</source>
          <target state="translated">現在の値をインクリメントまたはデクリメントするなど、フィールドに対して単純な算術タスクを実行する必要がある場合があります。これを実現する1つの方法は、Pythonで次のように計算を行うことです。</target>
        </trans-unit>
        <trans-unit id="97058f74ecdfb489bcf45ff09ce6be5952379609" translate="yes" xml:space="preserve">
          <source>Sometimes you&amp;rsquo;ll need to perform a simple arithmetic task on a field, such as incrementing or decrementing the current value. The obvious way to achieve this is to do something like:</source>
          <target state="translated">場合によっては、現在の値の増分や減分など、フィールドに対して単純な算術タスクを実行する必要があります。これを実現する明白な方法は、次のようなことです。</target>
        </trans-unit>
        <trans-unit id="2bea8249cb764a1960aae8e009b2ea180fd9cce7" translate="yes" xml:space="preserve">
          <source>Sometimes you&amp;rsquo;ll need to work with &lt;code&gt;jQuery&lt;/code&gt; plugins that are not registered in the &lt;code&gt;django.jQuery&lt;/code&gt; namespace. To do that, change how the code listens for events. Instead of wrapping the listener in the &lt;code&gt;django.jQuery&lt;/code&gt; namespace, listen to the event triggered from there. For example:</source>
          <target state="translated">&lt;code&gt;django.jQuery&lt;/code&gt; 名前空間に登録されていない &lt;code&gt;jQuery&lt;/code&gt; プラグインを使用する必要がある場合があります。これを行うには、コードがイベントをリッスンする方法を変更します。 &lt;code&gt;django.jQuery&lt;/code&gt; 名前空間でリスナーをラップする代わりに、そこからトリガーされたイベントをリッスンします。例えば：</target>
        </trans-unit>
        <trans-unit id="36239ea3abc95625c5eaec86d5a3809bd9cd1018" translate="yes" xml:space="preserve">
          <source>Sometimes your form class takes custom parameters, like &lt;code&gt;MyArticleForm&lt;/code&gt;. You can pass this parameter when instantiating the formset:</source>
          <target state="translated">&lt;code&gt;MyArticleForm&lt;/code&gt; のように、フォームクラスがカスタムパラメータを取る場合があります。formsetをインスタンス化するときにこのパラメーターを渡すことができます：</target>
        </trans-unit>
        <trans-unit id="3e7bfc08f48d8ee6c80bbec98ccd11323f967d18" translate="yes" xml:space="preserve">
          <source>Sometimes, caching an entire rendered page doesn&amp;rsquo;t gain you very much and is, in fact, inconvenient overkill.</source>
          <target state="translated">ときどき、レンダリングされたページ全体をキャッシュしてもあまり効果がなく、実際には不便です。</target>
        </trans-unit>
        <trans-unit id="a19ff2ac49541f752a132fe0594daacb39ba675c" translate="yes" xml:space="preserve">
          <source>Sometimes, the Django query syntax by itself can&amp;rsquo;t easily express a complex &lt;code&gt;WHERE&lt;/code&gt; clause. For these edge cases, Django provides the &lt;code&gt;extra()&lt;/code&gt;&lt;code&gt;QuerySet&lt;/code&gt; modifier &amp;mdash; a hook for injecting specific clauses into the SQL generated by a &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">Djangoクエリ構文だけでは、複雑な &lt;code&gt;WHERE&lt;/code&gt; 句を簡単に表現できない場合があります。これらのエッジケースに対して、Djangoは &lt;code&gt;extra()&lt;/code&gt; &lt;code&gt;QuerySet&lt;/code&gt; 修飾子を提供します&amp;mdash; &lt;code&gt;QuerySet&lt;/code&gt; によって生成されたSQLに特定の句を挿入するためのフックです。</target>
        </trans-unit>
        <trans-unit id="06d03cff398dcbb052de3496e18b3de306ed05da" translate="yes" xml:space="preserve">
          <source>Sometimes, you should use &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; as the default translation method for a particular file. Without &lt;code&gt;_()&lt;/code&gt; in the global namespace, the developer has to think about which is the most appropriate translation function.</source>
          <target state="translated">場合によっては、特定のファイルのデフォルトの変換メソッドとして&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt; &lt;code&gt;gettext_lazy()&lt;/code&gt; &lt;/a&gt;を使用する必要があります。グローバル名前空間に &lt;code&gt;_()&lt;/code&gt; がない場合、開発者はどちらが最も適切な変換関数であるかを考える必要があります。</target>
        </trans-unit>
        <trans-unit id="a2c4b6e86117f9d35aa0277b6ff8d228083a3634" translate="yes" xml:space="preserve">
          <source>Sometimes, your inclusion tags might require a large number of arguments, making it a pain for template authors to pass in all the arguments and remember their order. To solve this, Django provides a &lt;code&gt;takes_context&lt;/code&gt; option for inclusion tags. If you specify &lt;code&gt;takes_context&lt;/code&gt; in creating a template tag, the tag will have no required arguments, and the underlying Python function will have one argument &amp;ndash; the template context as of when the tag was called.</source>
          <target state="translated">場合によっては、インクルードタグに多数の引数が必要になることがあり、テンプレートの作成者がすべての引数を渡してその順序を覚えるのが面倒になります。これを解決するために、Djangoは包含タグ用の &lt;code&gt;takes_context&lt;/code&gt; オプションを提供しています。テンプレートタグの作成時に &lt;code&gt;takes_context&lt;/code&gt; を指定した場合、タグには必要な引数がなく、基になるPython関数には1つの引数があります。タグが呼び出されたときのテンプレートコンテキストです。</target>
        </trans-unit>
        <trans-unit id="d338a5b259fae6b52e8c644b2b8e266907c1369d" translate="yes" xml:space="preserve">
          <source>Sorts test cases in the opposite execution order. This may help in debugging the side effects of tests that aren&amp;rsquo;t properly isolated. &lt;a href=&quot;../topics/testing/overview#order-of-tests&quot;&gt;Grouping by test class&lt;/a&gt; is preserved when using this option.</source>
          <target state="translated">テストケースを逆の実行順序で並べ替えます。これは、適切に分離されていないテストの副作用をデバッグするのに役立ちます。このオプションを使用すると&lt;a href=&quot;../topics/testing/overview#order-of-tests&quot;&gt;、テストクラスによるグループ化&lt;/a&gt;が保持されます。</target>
        </trans-unit>
        <trans-unit id="999f57baf74de2235e3d5c10a7ccf14d3748dfff" translate="yes" xml:space="preserve">
          <source>Spanning multi-valued relationships</source>
          <target state="translated">多値関係のスパン化</target>
        </trans-unit>
        <trans-unit id="6b0c0dcc3e191d8a93422ad4b030723534089c62" translate="yes" xml:space="preserve">
          <source>SpatiaLite</source>
          <target state="translated">SpatiaLite</target>
        </trans-unit>
        <trans-unit id="a0bf42a4203bdb2eb6cb9e8dfca7a195f6f4e262" translate="yes" xml:space="preserve">
          <source>SpatiaLite SQL equivalent:</source>
          <target state="translated">SpatiaLiteのSQLに相当する。</target>
        </trans-unit>
        <trans-unit id="c731895f2558175b7f77799d0a7195615ebc03d8" translate="yes" xml:space="preserve">
          <source>SpatiaLite library (&lt;code&gt;libspatialite&lt;/code&gt;)</source>
          <target state="translated">SpatiaLiteライブラリ（ &lt;code&gt;libspatialite&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3f4c5bceea9ab6d6f201bfeb88af85e4166e6f5b" translate="yes" xml:space="preserve">
          <source>SpatiaLite support was added.</source>
          <target state="translated">SpatiaLiteのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="7d6e5b63edebeb8c17c1a18226130e0a59fabe9d" translate="yes" xml:space="preserve">
          <source>SpatiaLite users should consult the &lt;a href=&quot;spatialite#spatialite-macos&quot;&gt;macOS-specific instructions&lt;/a&gt; section after installing the packages for additional instructions.</source>
          <target state="translated">SpatiaLiteユーザーは、パッケージのインストール後に&lt;a href=&quot;spatialite#spatialite-macos&quot;&gt;macOS固有の手順&lt;/a&gt;セクションを参照して、追加の手順を確認してください。</target>
        </trans-unit>
        <trans-unit id="26f8e81ae936d109e58e11c2773983818de0bd3a" translate="yes" xml:space="preserve">
          <source>Spatial Backends</source>
          <target state="translated">空間バックエンド</target>
        </trans-unit>
        <trans-unit id="8134c4967477dfc6180c1d4a9fe5b671e01954ed" translate="yes" xml:space="preserve">
          <source>Spatial Field Options</source>
          <target state="translated">空間フィールドオプション</target>
        </trans-unit>
        <trans-unit id="1b86133559f30918fd72d1881e5b112fe0e1990a" translate="yes" xml:space="preserve">
          <source>Spatial Field Types</source>
          <target state="translated">空間フィールドの種類</target>
        </trans-unit>
        <trans-unit id="01310c097041114df38abc77c165f1a1fd56f8d8" translate="yes" xml:space="preserve">
          <source>Spatial Lookups</source>
          <target state="translated">空間ルックアップ</target>
        </trans-unit>
        <trans-unit id="f7f544fcb4fbf18009d10a543a8406f74be97b76" translate="yes" xml:space="preserve">
          <source>Spatial Predicate Methods</source>
          <target state="translated">空間的述語法</target>
        </trans-unit>
        <trans-unit id="d3d66fc49d73c443d063d0f9390e82234d813dbf" translate="yes" xml:space="preserve">
          <source>Spatial Queries</source>
          <target state="translated">空間クエリ</target>
        </trans-unit>
        <trans-unit id="3886585aa8470409bca6927fe20745d221fea9d7" translate="yes" xml:space="preserve">
          <source>Spatial database</source>
          <target state="translated">空間データベース</target>
        </trans-unit>
        <trans-unit id="580964ad4fc4de556472d96347fbb4442183520d" translate="yes" xml:space="preserve">
          <source>Spatial extensions for PostgreSQL</source>
          <target state="translated">PostgreSQLの空間拡張</target>
        </trans-unit>
        <trans-unit id="3dd2390a488102412e0af2137a1174126b490943" translate="yes" xml:space="preserve">
          <source>Spatial extensions for SQLite</source>
          <target state="translated">SQLite の空間拡張</target>
        </trans-unit>
        <trans-unit id="57dfa97e2f6cb0877e6ce2eea9d011572f6d7282" translate="yes" xml:space="preserve">
          <source>Spatial fields consist of a series of geometry field types and one raster field type. Each of the geometry field types correspond to the OpenGIS Simple Features specification &lt;a href=&quot;#fnogc&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;. There is no such standard for raster data.</source>
          <target state="translated">空間フィールドは、一連のジオメトリフィールドタイプと1つのラスターフィールドタイプで構成されます。各ジオメトリフィールドタイプは、OpenGIS Simple Features仕様&lt;a href=&quot;#fnogc&quot; id=&quot;id3&quot;&gt;[1]に&lt;/a&gt;対応しています。ラスターデータにはそのような標準はありません。</target>
        </trans-unit>
        <trans-unit id="1e374a2ef4fb224b69d678dcfddc73d007a3bcc8" translate="yes" xml:space="preserve">
          <source>Spatial lookups with rasters are only supported for PostGIS backends (denominated as PGRaster in this section).</source>
          <target state="translated">ラスタを使用した空間検索は、PostGIS バックエンドでのみサポートされている(このセクションでは PGRaster と表記されている)。</target>
        </trans-unit>
        <trans-unit id="e43a324fcf99e23a7aca4ca95358433f9a177ede" translate="yes" xml:space="preserve">
          <source>Spatial reference objects are initialized on the given &lt;code&gt;srs_input&lt;/code&gt;, which may be one of the following:</source>
          <target state="translated">空間参照オブジェクトは、指定された &lt;code&gt;srs_input&lt;/code&gt; で初期化されます。これは次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="f10869e91382c502cbeb84ebb87e8d3b9b624cb4" translate="yes" xml:space="preserve">
          <source>Spawns a &lt;code&gt;pdb&lt;/code&gt; debugger at each test error or failure. If you have it installed, &lt;code&gt;ipdb&lt;/code&gt; is used instead.</source>
          <target state="translated">テストエラーまたはエラーが発生するたびに &lt;code&gt;pdb&lt;/code&gt; デバッガーを起動します。インストールされている場合は、代わりに &lt;code&gt;ipdb&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="28c5f7e173a2fc47b01340a8a38b381221fe6bb5" translate="yes" xml:space="preserve">
          <source>Spec: &lt;a href=&quot;http://backend.userland.com/rss091&quot;&gt;http://backend.userland.com/rss091&lt;/a&gt;</source>
          <target state="translated">仕様：&lt;a href=&quot;http://backend.userland.com/rss091&quot;&gt;http&lt;/a&gt; : //backend.userland.com/rss091</target>
        </trans-unit>
        <trans-unit id="4aec49fb9c99ddb1e17bc247a08802d46724c365" translate="yes" xml:space="preserve">
          <source>Spec: &lt;a href=&quot;https://cyber.harvard.edu/rss/rss.html&quot;&gt;https://cyber.harvard.edu/rss/rss.html&lt;/a&gt;</source>
          <target state="translated">仕様：&lt;a href=&quot;https://cyber.harvard.edu/rss/rss.html&quot;&gt;https&lt;/a&gt; : //cyber.harvard.edu/rss/rss.html</target>
        </trans-unit>
        <trans-unit id="c7b93691db88baa92ebec95ff7d87fd353a26193" translate="yes" xml:space="preserve">
          <source>Spec: &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;https://tools.ietf.org/html/rfc4287&lt;/a&gt;</source>
          <target state="translated">仕様：&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;https&lt;/a&gt; : //tools.ietf.org/html/rfc4287</target>
        </trans-unit>
        <trans-unit id="95abab8476cfa74f5d882c8a81c219980465b63a" translate="yes" xml:space="preserve">
          <source>Spec: &lt;a href=&quot;https://tools.ietf.org/html/rfc4287.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4287&lt;/strong&gt;&lt;/a&gt;</source>
          <target state="translated">仕様：&lt;a href=&quot;https://tools.ietf.org/html/rfc4287.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4287&lt;/strong&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74c45887169f3ae3db5a92c036ed072db90f4474" translate="yes" xml:space="preserve">
          <source>Special Operations</source>
          <target state="translated">特殊作戦</target>
        </trans-unit>
        <trans-unit id="4ae998898b87b3e37c14d2da66ae2816638dd53d" translate="yes" xml:space="preserve">
          <source>Special cases are &lt;a href=&quot;#django.forms.CheckboxInput&quot;&gt;&lt;code&gt;CheckboxInput&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.forms.CheckboxSelectMultiple&quot;&gt;&lt;code&gt;CheckboxSelectMultiple&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.forms.SelectMultiple&quot;&gt;&lt;code&gt;SelectMultiple&lt;/code&gt;&lt;/a&gt;, which always return &lt;code&gt;False&lt;/code&gt; because an unchecked checkbox and unselected &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; don&amp;rsquo;t appear in the data of an HTML form submission, so it&amp;rsquo;s unknown whether or not the user submitted a value.</source>
          <target state="translated">特別なケースは&lt;a href=&quot;#django.forms.CheckboxInput&quot;&gt; &lt;code&gt;CheckboxInput&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#django.forms.CheckboxSelectMultiple&quot;&gt; &lt;code&gt;CheckboxSelectMultiple&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#django.forms.SelectMultiple&quot;&gt; &lt;code&gt;SelectMultiple&lt;/code&gt; です&lt;/a&gt;。これらは、チェックされていないチェックボックスと選択されていない &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; がHTMLフォーム送信のデータに表示されないため、ユーザーが値を送信したかどうかは不明であるため、常に &lt;code&gt;False&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="84500c51f943f4daf36fc10d49e539cedf015c2f" translate="yes" xml:space="preserve">
          <source>Special database configuration isn&amp;rsquo;t necessary to use any of these functions, however, if you&amp;rsquo;re searching more than a few hundred records, you&amp;rsquo;re likely to run into performance problems. Full text search is a more intensive process than comparing the size of an integer, for example.</source>
          <target state="translated">これらの関数を使用するために特別なデータベース構成は必要ありませんが、数百を超えるレコードを検索する場合、パフォーマンスの問題が発生する可能性があります。全文検索は、たとえば整数のサイズを比較するよりも集中的なプロセスです。</target>
        </trans-unit>
        <trans-unit id="b83ef37d9bf2abff03f45932aed3d496f9e2a22c" translate="yes" xml:space="preserve">
          <source>Special thanks to Bj&amp;oslash;rn Sandvik of &lt;a href=&quot;https://thematicmapping.org/&quot;&gt;thematicmapping.org&lt;/a&gt; for providing and maintaining this dataset.</source>
          <target state="translated">このデータセットの提供と保守について、&lt;a href=&quot;https://thematicmapping.org/&quot;&gt;thematicmapping.orgの&lt;/a&gt; Bj&amp;oslash;rnSandvikに感謝します。</target>
        </trans-unit>
        <trans-unit id="bbd1e4adbd79840eaf0af8a2ff9d3c44255e3cb8" translate="yes" xml:space="preserve">
          <source>Specialized test case to support &amp;lsquo;live testing&amp;rsquo;</source>
          <target state="translated">「ライブテスト」をサポートする特殊なテストケース</target>
        </trans-unit>
        <trans-unit id="2c64fba74a9d3b9ab170c799c06e2e7e0cb9eb72" translate="yes" xml:space="preserve">
          <source>Specialties of Django translation</source>
          <target state="translated">Django翻訳の特技</target>
        </trans-unit>
        <trans-unit id="035d4728ce083e0adad0e402f1a673ae38015d6b" translate="yes" xml:space="preserve">
          <source>Specifically, GeoDjango provides support for the &lt;a href=&quot;https://gdal.org/user/vector_data_model.html&quot;&gt;OGR&lt;/a&gt; library, a component of GDAL.</source>
          <target state="translated">具体的には、GeoDjangoは、GDALのコンポーネントである&lt;a href=&quot;https://gdal.org/user/vector_data_model.html&quot;&gt;OGR&lt;/a&gt;ライブラリのサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="4ae4543b983317276738e348924cf9cb4005ea73" translate="yes" xml:space="preserve">
          <source>Specifically, a &lt;code&gt;Response&lt;/code&gt; object has the following attributes:</source>
          <target state="translated">具体的には、 &lt;code&gt;Response&lt;/code&gt; オブジェクトには次の属性があります。</target>
        </trans-unit>
        <trans-unit id="1ccf5d25dfedda0749e3abb6685b56a5fed8013a" translate="yes" xml:space="preserve">
          <source>Specification</source>
          <target state="translated">Specification</target>
        </trans-unit>
        <trans-unit id="9c73e4568c9f81581ed13506319670ca87c6a1b9" translate="yes" xml:space="preserve">
          <source>Specifies a different port, or IP address and port, from the default of &lt;code&gt;127.0.0.1:8000&lt;/code&gt;. This value follows exactly the same format and serves exactly the same function as the argument to the &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">デフォルトの &lt;code&gt;127.0.0.1:8000&lt;/code&gt; とは異なるポート、またはIPアドレスとポートを指定します。この値は、&lt;a href=&quot;#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;コマンドの引数とまったく同じ形式で、同じ機能を果たします。</target>
        </trans-unit>
        <trans-unit id="6cf725613a31639e889942ed7be19a30b4952db4" translate="yes" xml:space="preserve">
          <source>Specifies a directory, file path, or URL of a custom project template. See the &lt;a href=&quot;#cmdoption-startapp-template&quot;&gt;&lt;code&gt;startapp --template&lt;/code&gt;&lt;/a&gt; documentation for examples and usage.</source>
          <target state="translated">カスタムプロジェクトテンプレートのディレクトリ、ファイルパス、またはURLを指定します。例と使用法については、&lt;a href=&quot;#cmdoption-startapp-template&quot;&gt; &lt;code&gt;startapp --template&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4e7e957372db350176d463124ad26d80d04f33e6" translate="yes" xml:space="preserve">
          <source>Specifies a file to write the serialized data to. By default, the data goes to standard output.</source>
          <target state="translated">シリアライズされたデータを書き込むファイルを指定します。デフォルトでは、データは標準出力に出力されます。</target>
        </trans-unit>
        <trans-unit id="72d9783494550604f721f0332d9b4cdbfcaaae99" translate="yes" xml:space="preserve">
          <source>Specifies a list of file extensions to examine (default: &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;txt&lt;/code&gt;, &lt;code&gt;py&lt;/code&gt; or &lt;code&gt;js&lt;/code&gt; if &lt;a href=&quot;#cmdoption-makemessages-domain&quot;&gt;&lt;code&gt;--domain&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;js&lt;/code&gt;).</source>
          <target state="translated">指定したファイル拡張子のリストを検討する（デフォルト： &lt;code&gt;html&lt;/code&gt; 、 &lt;code&gt;txt&lt;/code&gt; 、 &lt;code&gt;py&lt;/code&gt; や &lt;code&gt;js&lt;/code&gt; 場合&lt;a href=&quot;#cmdoption-makemessages-domain&quot;&gt; &lt;code&gt;--domain&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;js&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="02028d9b62993c3e8d3ea3e6bc8d7d65dff7d839" translate="yes" xml:space="preserve">
          <source>Specifies a single app to look for fixtures in rather than looking in all apps.</source>
          <target state="translated">すべてのアプリを探すのではなく、1つのアプリでフィクスチャを探すことを指定します。</target>
        </trans-unit>
        <trans-unit id="be23bd60a710b4ed4b20363f65e8d8e45651e1cd" translate="yes" xml:space="preserve">
          <source>Specifies a timeout in seconds for blocking operations like the connection attempt.</source>
          <target state="translated">接続試行などの操作をブロックするためのタイムアウトを秒単位で指定します。</target>
        </trans-unit>
        <trans-unit id="1bbdf19eb95698275c554e18da430738f54d0735" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;a href=&quot;../topics/serialization#serialization-formats&quot;&gt;serialization format&lt;/a&gt; (e.g., &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;xml&lt;/code&gt;) for fixtures &lt;a href=&quot;#loading-fixtures-stdin&quot;&gt;read from stdin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#loading-fixtures-stdin&quot;&gt;stdinから読み取った&lt;/a&gt;フィクスチャの&lt;a href=&quot;../topics/serialization#serialization-formats&quot;&gt;シリアル化形式&lt;/a&gt;（ &lt;code&gt;json&lt;/code&gt; や &lt;code&gt;xml&lt;/code&gt; など）を指定します。</target>
        </trans-unit>
        <trans-unit id="ea229d9172fbde0eaba2a431e32e46e506b01a26" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;a href=&quot;renderers&quot;&gt;renderer&lt;/a&gt; to use for the form. Defaults to &lt;code&gt;None&lt;/code&gt; which means to use the default renderer specified by the &lt;a href=&quot;../settings#std:setting-FORM_RENDERER&quot;&gt;&lt;code&gt;FORM_RENDERER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">フォームに使用する&lt;a href=&quot;renderers&quot;&gt;レンダラー&lt;/a&gt;を指定します。デフォルトは &lt;code&gt;None&lt;/code&gt; で、&lt;a href=&quot;../settings#std:setting-FORM_RENDERER&quot;&gt; &lt;code&gt;FORM_RENDERER&lt;/code&gt; &lt;/a&gt;設定で指定されたデフォルトのレンダラーを使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="47bd66d8c3b6e638bc5303da0bd1763c4a8c18c5" translate="yes" xml:space="preserve">
          <source>Specifies the GML version to use: 2 (default) or 3.</source>
          <target state="translated">使用する GML のバージョンを指定します。2(デフォルト)または3を指定します。</target>
        </trans-unit>
        <trans-unit id="cf4934cc864dc927dc44d3d097b4ef9dbc58ffc6" translate="yes" xml:space="preserve">
          <source>Specifies the amount of notification and debug information that a command should print to the console.</source>
          <target state="translated">コマンドがコンソールに表示する通知およびデバッグ情報の量を指定します。</target>
        </trans-unit>
        <trans-unit id="5dec095c5c7b648fcb931ffcb935dd4764f736b1" translate="yes" xml:space="preserve">
          <source>Specifies the character set encoding of the strings in the OGR data source. For example, &lt;code&gt;'latin-1'&lt;/code&gt;, &lt;code&gt;'utf-8'&lt;/code&gt;, and &lt;code&gt;'cp437'&lt;/code&gt; are all valid encoding parameters.</source>
          <target state="translated">OGRデータソース内の文字列の文字セットエンコーディングを指定します。たとえば、 &lt;code&gt;'latin-1'&lt;/code&gt; 、 &lt;code&gt;'utf-8'&lt;/code&gt; 、および &lt;code&gt;'cp437'&lt;/code&gt; はすべて有効なエンコーディングパラメータです。</target>
        </trans-unit>
        <trans-unit id="8f6092ac1611ff5ba9664b1521fda789c3fc1797" translate="yes" xml:space="preserve">
          <source>Specifies the database for which to generate the SQL. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">SQLを生成するデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="040af291fbdf9f9d644a2f78f9c2be3d16b1a378" translate="yes" xml:space="preserve">
          <source>Specifies the database for which to print the SQL. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">SQLを印刷するデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="102273d708a8470ec808016316626c4390b04a82" translate="yes" xml:space="preserve">
          <source>Specifies the database from which data will be dumped. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">データのダンプ元となるデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eb9c4570decee757ee29074ffa870486a1669f12" translate="yes" xml:space="preserve">
          <source>Specifies the database in which the cache table(s) will be created. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">キャッシュテーブルが作成されるデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d789cfeb1b1342b6b8d3b77d1a2f70d27caf4f63" translate="yes" xml:space="preserve">
          <source>Specifies the database into which the data will be loaded. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">データがロードされるデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cd063dbe43e887f05153b8d79add2a3e72154d60" translate="yes" xml:space="preserve">
          <source>Specifies the database into which the superuser object will be saved.</source>
          <target state="translated">スーパーユーザーオブジェクトが保存されるデータベースを指定します。</target>
        </trans-unit>
        <trans-unit id="d7d4b5a4010a7a70875a0bd65fa72586906a4a62" translate="yes" xml:space="preserve">
          <source>Specifies the database onto which to open a shell. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">シェルを開くデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bfc6d270292d4cac84a4a7d5376699a3abb4547f" translate="yes" xml:space="preserve">
          <source>Specifies the database to examine. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">調べるデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6d3e33d8e3776f33a65a93cf1b7c4a031706a54b" translate="yes" xml:space="preserve">
          <source>Specifies the database to flush. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">フラッシュするデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7c1f733cf845fc9e76db6090ec33a3c19c73345f" translate="yes" xml:space="preserve">
          <source>Specifies the database to introspect. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">イントロスペクトするデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="be57b9404ad364746974e651c6beb6159362f509" translate="yes" xml:space="preserve">
          <source>Specifies the database to migrate. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">移行するデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2b174068613fe7c88c96e814746911e831a64217" translate="yes" xml:space="preserve">
          <source>Specifies the database to query for the user. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">ユーザーを照会するデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="27100309cfc7be5e75d84fdd87aaf92d36a4096c" translate="yes" xml:space="preserve">
          <source>Specifies the database to run checks requiring database access:</source>
          <target state="translated">データベースへのアクセスが必要な検査を実行するデータベースを指定します。</target>
        </trans-unit>
        <trans-unit id="40f335506359d8651e422577573b15084d03688d" translate="yes" xml:space="preserve">
          <source>Specifies the database to use. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">使用するデータベースを指定します。デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="136575feb2ce3743594fd8b00d285618491adccc" translate="yes" xml:space="preserve">
          <source>Specifies the domain of the messages files. Supported options are:</source>
          <target state="translated">メッセージファイルのドメインを指定します。サポートされているオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="78b6b96b4c24a2617eeaf4f590be5bae9700abc0" translate="yes" xml:space="preserve">
          <source>Specifies the locale(s) to exclude from processing. If not provided, no locales are excluded.</source>
          <target state="translated">処理から除外するロケールを指定します。指定しない場合、ロケールは除外されません。</target>
        </trans-unit>
        <trans-unit id="e1f48bdfae462918c17be822a81783874f02096f" translate="yes" xml:space="preserve">
          <source>Specifies the locale(s) to process.</source>
          <target state="translated">処理するロケールを指定します。</target>
        </trans-unit>
        <trans-unit id="8df49b8fb9f05c8ab1e87ff57b35d2d16eb6ead1" translate="yes" xml:space="preserve">
          <source>Specifies the locale(s) to process. If not provided, all locales are processed.</source>
          <target state="translated">処理するロケールを指定します。指定しない場合は、すべてのロケールが処理されます。</target>
        </trans-unit>
        <trans-unit id="3ec01d9de708430f11be16a5b2143d525ee7e1dc" translate="yes" xml:space="preserve">
          <source>Specifies the message level that will cause the command to exit with a non-zero status. Default is &lt;code&gt;ERROR&lt;/code&gt;.</source>
          <target state="translated">コマンドをゼロ以外のステータスで終了させるメッセージレベルを指定します。デフォルトは &lt;code&gt;ERROR&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c742627bb8cdcd3e2d64eee9a53f3c8880efd7c8" translate="yes" xml:space="preserve">
          <source>Specifies the model attribute name to use for the geometry field. Defaults to &lt;code&gt;'geom'&lt;/code&gt;.</source>
          <target state="translated">ジオメトリフィールドに使用するモデル属性名を指定します。デフォルトは &lt;code&gt;'geom'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="69e16e8a45666393a05c228d25d9e8b3e8348cd0" translate="yes" xml:space="preserve">
          <source>Specifies the number of indentation spaces to use in the output. Defaults to &lt;code&gt;None&lt;/code&gt; which displays all data on single line.</source>
          <target state="translated">出力で使用するインデントスペースの数を指定します。デフォルトは &lt;code&gt;None&lt;/code&gt; で、すべてのデータが1行で表示されます。</target>
        </trans-unit>
        <trans-unit id="cbcaa5032127345f09bbe34dead9122fd88159e6" translate="yes" xml:space="preserve">
          <source>Specifies the number of significant digits for the coordinates in the GML representation &amp;ndash; the default value is 8. Ignored on Oracle.</source>
          <target state="translated">GML表現の座標の有効桁数を指定します。デフォルト値は8です。Oracleでは無視されます。</target>
        </trans-unit>
        <trans-unit id="513026a367fd36f728406b29911ccc38d5dded81" translate="yes" xml:space="preserve">
          <source>Specifies the output format. Available values are &lt;code&gt;hash&lt;/code&gt; and &lt;code&gt;unified&lt;/code&gt;. &lt;code&gt;hash&lt;/code&gt; is the default mode that displays the output that&amp;rsquo;s described above. &lt;code&gt;unified&lt;/code&gt; displays the output similar to &lt;code&gt;diff -u&lt;/code&gt;. Default settings are prefixed with a minus sign, followed by the changed setting prefixed with a plus sign.</source>
          <target state="translated">出力フォーマットを指定します。使用可能な値は &lt;code&gt;hash&lt;/code&gt; と &lt;code&gt;unified&lt;/code&gt; です。 &lt;code&gt;hash&lt;/code&gt; は、上記の出力を表示するデフォルトのモードです。 &lt;code&gt;unified&lt;/code&gt; は、 &lt;code&gt;diff -u&lt;/code&gt; と同様の出力を表示します。デフォルト設定の前にはマイナス記号が付いており、その後に変更された設定の前にプラス記号が付いています。</target>
        </trans-unit>
        <trans-unit id="84ba2d961cf71c98d1d9c466c966a0a80fcff3b3" translate="yes" xml:space="preserve">
          <source>Specifies the serialization format of the output. Defaults to JSON. Supported formats are listed in &lt;a href=&quot;../topics/serialization#serialization-formats&quot;&gt;Serialization formats&lt;/a&gt;.</source>
          <target state="translated">出力のシリアル化形式を指定します。デフォルトはJSONです。サポートされている形式は、&lt;a href=&quot;../topics/serialization#serialization-formats&quot;&gt;シリアル化形式に&lt;/a&gt;リストされています。</target>
        </trans-unit>
        <trans-unit id="1959720b6b3bc5b663d148384d2eaabbf26c6ab3" translate="yes" xml:space="preserve">
          <source>Specifies the settings module to use. The settings module should be in Python package syntax, e.g. &lt;code&gt;mysite.settings&lt;/code&gt;. If this isn&amp;rsquo;t provided, &lt;code&gt;django-admin&lt;/code&gt; will use the &lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">使用する設定モジュールを指定します。設定モジュールは、 &lt;code&gt;mysite.settings&lt;/code&gt; などのPythonパッケージ構文である必要があります。これが提供されていない場合、 &lt;code&gt;django-admin&lt;/code&gt; は&lt;a href=&quot;../topics/settings#envvar-DJANGO_SETTINGS_MODULE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; &lt;/a&gt;環境変数を使用します。</target>
        </trans-unit>
        <trans-unit id="23cab68bfd2acaa1233320ecc705be1628e0e43b" translate="yes" xml:space="preserve">
          <source>Specifies the settings module to use. The settings module should be in Python package syntax, e.g. &lt;code&gt;mysite.settings&lt;/code&gt;. If this isn&amp;rsquo;t provided, &lt;code&gt;django-admin&lt;/code&gt; will use the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable.</source>
          <target state="translated">使用する設定モジュールを指定します。設定モジュールは、 &lt;code&gt;mysite.settings&lt;/code&gt; などの Pythonパッケージ構文である必要があります。これが提供されない場合、 &lt;code&gt;django-admin&lt;/code&gt; は &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; 環境変数を使用します。</target>
        </trans-unit>
        <trans-unit id="56a0076920d8fc848faec0f83c816d8ec4427a1e" translate="yes" xml:space="preserve">
          <source>Specifies the shell to use. By default, Django will use &lt;a href=&quot;https://ipython.org/&quot;&gt;IPython&lt;/a&gt; or &lt;a href=&quot;https://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt; if either is installed. If both are installed, specify which one you want like so:</source>
          <target state="translated">使用するシェルを指定します。デフォルトでは、Djangoは&lt;a href=&quot;https://ipython.org/&quot;&gt;IPython&lt;/a&gt;または&lt;a href=&quot;https://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt;がインストールされている場合はそれらを使用します。両方がインストールされている場合は、どちらを使用するかを指定します。</target>
        </trans-unit>
        <trans-unit id="f0a1bca43465aaeca153da4ee738966841008ad5" translate="yes" xml:space="preserve">
          <source>Specifies the underlying data type and behavior for the array. It should be an instance of a subclass of &lt;a href=&quot;../../models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;. For example, it could be an &lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../../models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;. Most field types are permitted, with the exception of those handling relational data (&lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">配列の基になるデータ型と動作を指定します。これは、&lt;a href=&quot;../../models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスである必要があります。たとえば、&lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; の場合があり&lt;/a&gt;ます。リレーショナルデータを処理するフィールド（&lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../models/fields#django.db.models.OneToOneField&quot;&gt; &lt;code&gt;OneToOneField&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;）を除いて、ほとんどのフィールドタイプが許可されます。</target>
        </trans-unit>
        <trans-unit id="0478399c16e5a36924413257ca1edfab3f336361" translate="yes" xml:space="preserve">
          <source>Specifies whether or not inline objects can be deleted in the inline. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">インラインでインラインオブジェクトを削除できるかどうかを指定します。デフォルトは &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b1537fb21d812507dc96bbbb1f5a8899c347f0b3" translate="yes" xml:space="preserve">
          <source>Specifies whether or not inline objects that can be changed in the admin have a link to the change form. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">管理者で変更できるインラインオブジェクトに変更フォームへのリンクがあるかどうかを指定します。デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="497afe699651aac553ab1ccf098c0965d0635868" translate="yes" xml:space="preserve">
          <source>Specifies which file extensions in the app template should be rendered with the template engine. Defaults to &lt;code&gt;py&lt;/code&gt;.</source>
          <target state="translated">テンプレートエンジンでレンダリングするアプリテンプレートのファイル拡張子を指定します。デフォルトは &lt;code&gt;py&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="db65966f0c3b6641a173b5b3edd351900c1c9eda" translate="yes" xml:space="preserve">
          <source>Specifies which file extensions in the project template should be rendered with the template engine. Defaults to &lt;code&gt;py&lt;/code&gt;.</source>
          <target state="translated">プロジェクトテンプレートのどのファイル拡張子をテンプレートエンジンでレンダリングするかを指定します。デフォルトは &lt;code&gt;py&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="025a27df0442583f1645339e20c6b8d00208535f" translate="yes" xml:space="preserve">
          <source>Specifies which files in the app template (in addition to those matching &lt;code&gt;--extension&lt;/code&gt;) should be rendered with the template engine. Defaults to an empty list.</source>
          <target state="translated">（ &lt;code&gt;--extension&lt;/code&gt; に一致するファイルに加えて）アプリテンプレート内のどのファイルをテンプレートエンジンでレンダリングするかを指定します。デフォルトは空のリストです。</target>
        </trans-unit>
        <trans-unit id="be179dd56e79e32cb59be753f949c5e698e146b1" translate="yes" xml:space="preserve">
          <source>Specifies which files in the project template (in addition to those matching &lt;code&gt;--extension&lt;/code&gt;) should be rendered with the template engine. Defaults to an empty list.</source>
          <target state="translated">（ &lt;code&gt;--extension&lt;/code&gt; に一致するファイルに加えて）プロジェクトテンプレート内のどのファイルをテンプレートエンジンでレンダリングするかを指定します。デフォルトは空のリストです。</target>
        </trans-unit>
        <trans-unit id="684dff5b6bdc4c33909328c7a828709feb80f29f" translate="yes" xml:space="preserve">
          <source>Specify a translation string by using the function &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;. It&amp;rsquo;s convention to import this as a shorter alias, &lt;code&gt;_&lt;/code&gt;, to save typing.</source>
          <target state="translated">関数&lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;を使用して翻訳文字列を指定します。入力を節約するために、これを短いエイリアス &lt;code&gt;_&lt;/code&gt; としてインポートするのが慣例です。</target>
        </trans-unit>
        <trans-unit id="ef4c3372859c9a20edbd005d85668631f1d99785" translate="yes" xml:space="preserve">
          <source>Specify both the singular and plural forms separating them with the &lt;code&gt;{% plural %}&lt;/code&gt; tag within the &lt;code&gt;{% blocktrans %}&lt;/code&gt; and &lt;code&gt;{% endblocktrans %}&lt;/code&gt; tags.</source>
          <target state="translated">それらを分離する単数形と複数形の両方を指定 &lt;code&gt;{% plural %}&lt;/code&gt; 内タグ &lt;code&gt;{% blocktrans %}&lt;/code&gt; と &lt;code&gt;{% endblocktrans %}&lt;/code&gt; タグ。</target>
        </trans-unit>
        <trans-unit id="710e6f112fb8dd0d1c7de817661329a64e19d728" translate="yes" xml:space="preserve">
          <source>Specify both the singular and plural forms separating them with the &lt;code&gt;{% plural %}&lt;/code&gt; tag within the &lt;code&gt;{% blocktranslate %}&lt;/code&gt; and &lt;code&gt;{% endblocktranslate %}&lt;/code&gt; tags.</source>
          <target state="translated">それらを分離する単数形と複数形の両方を指定 &lt;code&gt;{% plural %}&lt;/code&gt; 内のタグ &lt;code&gt;{% blocktranslate %}&lt;/code&gt; と &lt;code&gt;{% endblocktranslate %}&lt;/code&gt; タグ。</target>
        </trans-unit>
        <trans-unit id="ab24ca02aaad2bf4d48268fccf9889ff02fac662" translate="yes" xml:space="preserve">
          <source>Specify one or more of &lt;code&gt;params&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt; or &lt;code&gt;tables&lt;/code&gt;. None of the arguments is required, but you should use at least one of them.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; を 1つ以上指定し、 &lt;code&gt;select&lt;/code&gt; 、 &lt;code&gt;where&lt;/code&gt; 、 &lt;code&gt;tables&lt;/code&gt; を選択します。引数は不要ですが、少なくとも1つは使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4aca3e2503d7d682e22fe6da77f704584fbd9b94" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;model = Publisher&lt;/code&gt; is shorthand for saying &lt;code&gt;queryset =
Publisher.objects.all()&lt;/code&gt;. However, by using &lt;code&gt;queryset&lt;/code&gt; to define a filtered list of objects you can be more specific about the objects that will be visible in the view (see &lt;a href=&quot;../db/queries&quot;&gt;Making queries&lt;/a&gt; for more information about &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; objects, and see the &lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;class-based views reference&lt;/a&gt; for the complete details).</source>
          <target state="translated">&lt;code&gt;model = Publisher&lt;/code&gt; 指定は、 &lt;code&gt;queryset = Publisher.objects.all()&lt;/code&gt; と言うことの省略形です。ただし、 &lt;code&gt;queryset&lt;/code&gt; を使用してフィルターされたオブジェクトのリストを定義することで、ビューに表示されるオブジェクトをより詳細に指定できます（&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;オブジェクトの詳細については、クエリの&lt;a href=&quot;../db/queries&quot;&gt;作成&lt;/a&gt;を参照してください。詳細については、&lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;クラスベースのビューのリファレンス&lt;/a&gt;を参照してください） ）。</target>
        </trans-unit>
        <trans-unit id="eddf90d9bdd080567f5c16c49e26ef8355f7a4a3" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;symmetrical=True&lt;/code&gt; for recursive many-to-many relationships using an intermediary model was allowed.</source>
          <target state="translated">中間モデルを使用して再帰的な多対多の関係に &lt;code&gt;symmetrical=True&lt;/code&gt; を指定することが許可されました。</target>
        </trans-unit>
        <trans-unit id="8ad7cdad3351a181796ef3482e01a1a48b8f9169" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;update_fields&lt;/code&gt; will force an update.</source>
          <target state="translated">&lt;code&gt;update_fields&lt;/code&gt; を指定すると、強制的に更新されます。</target>
        </trans-unit>
        <trans-unit id="6656fd3365703a2a2a112873932b360f1753279b" translate="yes" xml:space="preserve">
          <source>Specifying a custom reverse manager also enables you to call its custom methods:</source>
          <target state="translated">カスタムリバースマネージャを指定すると、そのカスタムメソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="64c05e64c70090e0361a1831495143cfd6750c0d" translate="yes" xml:space="preserve">
          <source>Specifying a custom user model</source>
          <target state="translated">カスタムユーザーモデルの指定</target>
        </trans-unit>
        <trans-unit id="fa36dd0d4d3098ca9746ef874f118b35d1e6a776" translate="yes" xml:space="preserve">
          <source>Specifying authentication backends</source>
          <target state="translated">認証バックエンドの指定</target>
        </trans-unit>
        <trans-unit id="b192380f1aec51686c1c607d55e21300c0f01680" translate="yes" xml:space="preserve">
          <source>Specifying defaults for view arguments</source>
          <target state="translated">ビュー引数のデフォルトを指定する</target>
        </trans-unit>
        <trans-unit id="0b92e0f67db69f307a8d123f470bbee82d943143" translate="yes" xml:space="preserve">
          <source>Specifying per-view cache in the URLconf</source>
          <target state="translated">URLconf でビューごとのキャッシュを指定する</target>
        </trans-unit>
        <trans-unit id="bbdd950f05266fd92b26516b493f91a156c4e270" translate="yes" xml:space="preserve">
          <source>Specifying the form field for a model field</source>
          <target state="translated">モデルフィールドのフォームフィールドの指定</target>
        </trans-unit>
        <trans-unit id="d7533cbfe534c73a0817a3887816418293857d0c" translate="yes" xml:space="preserve">
          <source>Specifying the parent link field</source>
          <target state="translated">親リンクフィールドの指定</target>
        </trans-unit>
        <trans-unit id="4580f1184f9d7faed109bf18b53b8f2430280b14" translate="yes" xml:space="preserve">
          <source>Specifying the type of feed</source>
          <target state="translated">飼料の種類を指定する</target>
        </trans-unit>
        <trans-unit id="053dc293beb27f7736035f74eb034bc9d8000f9e" translate="yes" xml:space="preserve">
          <source>Specifying which fields to save</source>
          <target state="translated">保存するフィールドを指定する</target>
        </trans-unit>
        <trans-unit id="dbedaf851bb22303fcfe72276f8ead9d0d61127f" translate="yes" xml:space="preserve">
          <source>Specifying widgets</source>
          <target state="translated">ウィジェットの指定</target>
        </trans-unit>
        <trans-unit id="3bcb4249c4a552b91351e2cacb57f86f10a74f9d" translate="yes" xml:space="preserve">
          <source>Specifying widgets to use in the form with &lt;code&gt;widgets&lt;/code&gt;</source>
          <target state="translated">フォームで使用するウィジェットを指定する &lt;code&gt;widgets&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c6b4b415846f22333672619fc18998ffff60e25" translate="yes" xml:space="preserve">
          <source>Specifying widgets to use in the inline form</source>
          <target state="translated">インラインフォームで使用するウィジェットの指定</target>
        </trans-unit>
        <trans-unit id="e3b918622bed127b25593a5419b3321abd3d957a" translate="yes" xml:space="preserve">
          <source>Speeding up test execution with non-durable settings</source>
          <target state="translated">耐久性のない設定でテスト実行を高速化</target>
        </trans-unit>
        <trans-unit id="c9d8970cf679c2386c36f097290a16fc16246aea" translate="yes" xml:space="preserve">
          <source>Speeding up the tests</source>
          <target state="translated">テストのスピードアップ</target>
        </trans-unit>
        <trans-unit id="b0769dd62bb8bd1c586f460234ebaed5ff85a966" translate="yes" xml:space="preserve">
          <source>Squashes the migrations for &lt;code&gt;app_label&lt;/code&gt; up to and including &lt;code&gt;migration_name&lt;/code&gt; down into fewer migrations, if possible. The resulting squashed migrations can live alongside the unsquashed ones safely. For more information, please read &lt;a href=&quot;../topics/migrations#migration-squashing&quot;&gt;Squashing migrations&lt;/a&gt;.</source>
          <target state="translated">カボチャのための移行 &lt;code&gt;app_label&lt;/code&gt; までを含む &lt;code&gt;migration_name&lt;/code&gt; を可能な場合は、少数の移行にダウン。結果として生じる押しつぶされたマイグレーションは、押しつぶされていないマイグレーションと安全に共存できます。詳細については、&lt;a href=&quot;../topics/migrations#migration-squashing&quot;&gt;Squashingの移行&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="5f58f40fcc14ad733a045210687dd09b0ebab59a" translate="yes" xml:space="preserve">
          <source>Squashing is the act of reducing an existing set of many migrations down to one (or sometimes a few) migrations which still represent the same changes.</source>
          <target state="translated">スカッシングとは、既存の多数の移行のセットを、同じ変更を表す移行を1つ(時には数個)に減らす行為です。</target>
        </trans-unit>
        <trans-unit id="d0d13de0a8b9d8e41667b56366813b78e468894f" translate="yes" xml:space="preserve">
          <source>Squashing migrations</source>
          <target state="translated">移行をスカッシュする</target>
        </trans-unit>
        <trans-unit id="fa220b2aedb00e1775d18b724fdf45a025232941" translate="yes" xml:space="preserve">
          <source>Stacking &lt;code&gt;UserPassesTestMixin&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UserPassesTestMixin&lt;/code&gt; のスタッキング</target>
        </trans-unit>
        <trans-unit id="afaba89802bd2ded3004deadc4950f729b566880" translate="yes" xml:space="preserve">
          <source>Standalone scripts</source>
          <target state="translated">スタンドアロンスクリプト</target>
        </trans-unit>
        <trans-unit id="72a5a3b8ff69038ebe02a48488fb72e5c00418a6" translate="yes" xml:space="preserve">
          <source>Standard &lt;a href=&quot;request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects are static structures. They are provided with a block of pre-rendered content at time of construction, and while that content can be modified, it isn&amp;rsquo;t in a form that makes it easy to perform modifications.</source>
          <target state="translated">標準の&lt;a href=&quot;request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;オブジェクトは静的構造です。作成時に事前にレンダリングされたコンテンツのブロックが提供され、そのコンテンツは変更できますが、変更を簡単に実行できる形式ではありません。</target>
        </trans-unit>
        <trans-unit id="0fcf6f2b778cffcd496bc580f2e0e7fac09fbd2c" translate="yes" xml:space="preserve">
          <source>Standard database operations stop being a useful approach when you start considering large blocks of text. Whereas the examples above can be thought of as operations on a string of characters, full text search looks at the actual words. Depending on the system used, it&amp;rsquo;s likely to use some of the following ideas:</source>
          <target state="translated">大きなテキストブロックを検討し始めると、標準のデータベース操作は有用なアプローチではなくなります。上記の例は文字列の操作と考えることができますが、全文検索では実際の単語を調べます。使用するシステムに応じて、以下のアイデアのいくつかを使用する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2b59b89d6a68dbca952a92af58029daaaa05fb2b" translate="yes" xml:space="preserve">
          <source>Standard textual queries</source>
          <target state="translated">標準的なテキストクエリ</target>
        </trans-unit>
        <trans-unit id="ab5b05772bdbb8a11ef1436312a851d8acf661fb" translate="yes" xml:space="preserve">
          <source>Standard translation</source>
          <target state="translated">標準翻訳</target>
        </trans-unit>
        <trans-unit id="298edc8a2fdf4fdab865c1fb56cbd4f13f1394d5" translate="yes" xml:space="preserve">
          <source>Start the development server</source>
          <target state="translated">開発サーバーの起動</target>
        </trans-unit>
        <trans-unit id="71e2b89ef9291060b979126c686b3c89edd9a6fc" translate="yes" xml:space="preserve">
          <source>Start the server (or restart it if it&amp;rsquo;s already running):</source>
          <target state="translated">サーバーを起動します（すでに実行されている場合は再起動します）。</target>
        </trans-unit>
        <trans-unit id="36a823a7956e6cd9f21924a0ba72a774b7b8ef9c" translate="yes" xml:space="preserve">
          <source>Starting with a URL requested by the user/browser, it calls the right Django view providing any arguments it might need with their values as extracted from the URL.</source>
          <target state="translated">ユーザー/ブラウザが要求した URL から始まり、必要な引数を URL から抽出した値で提供し、適切な Django ビューを呼び出します。</target>
        </trans-unit>
        <trans-unit id="2d4e16b43d77310c34e452f4744346499fa03ee1" translate="yes" xml:space="preserve">
          <source>Starting with the identification of the corresponding Django view plus the values of arguments that would be passed to it, obtain the associated URL.</source>
          <target state="translated">対応する Django ビューの識別と、それに渡される引数の値から、関連する URL を取得します。</target>
        </trans-unit>
        <trans-unit id="c8f6dd81b785d0304fc0cf63ac1a45a6b5d1c38a" translate="yes" xml:space="preserve">
          <source>Starts a lightweight development Web server on the local machine. By default, the server runs on port 8000 on the IP address &lt;code&gt;127.0.0.1&lt;/code&gt;. You can pass in an IP address and port number explicitly.</source>
          <target state="translated">ローカルマシンで軽量開発Webサーバーを起動します。デフォルトでは、サーバーはIPアドレス &lt;code&gt;127.0.0.1&lt;/code&gt; のポート8000​​で実行されます。IPアドレスとポート番号を明示的に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e55b00cf79640336955f6a15915752ea03e1a31c" translate="yes" xml:space="preserve">
          <source>Starts the Python interactive interpreter.</source>
          <target state="translated">Python の対話型インタプリタを起動します。</target>
        </trans-unit>
        <trans-unit id="1311d086ffc80574fdac4b47d1554d6837801f56" translate="yes" xml:space="preserve">
          <source>Starts-with and ends-with search, respectively. There are also case-insensitive versions called &lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-istartswith&quot;&gt;&lt;code&gt;istartswith&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-iendswith&quot;&gt;&lt;code&gt;iendswith&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Starts-with検索とEnds-with検索。&lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-istartswith&quot;&gt; &lt;code&gt;istartswith&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-iendswith&quot;&gt; &lt;code&gt;iendswith&lt;/code&gt; &lt;/a&gt;と呼ばれる、大文字と小文字を区別しないバージョンもあります。</target>
        </trans-unit>
        <trans-unit id="a1c031153c642e8130ab037b056c28c991496c45" translate="yes" xml:space="preserve">
          <source>Static Files</source>
          <target state="translated">静的ファイル</target>
        </trans-unit>
        <trans-unit id="724c3fdcb1fa9db153cf0da4805f683eea9d882f" translate="yes" xml:space="preserve">
          <source>Static file development view</source>
          <target state="translated">静的ファイル開発ビュー</target>
        </trans-unit>
        <trans-unit id="debb4f3d06504b322041b5f31ffe50abc8366b79" translate="yes" xml:space="preserve">
          <source>Static file finders are currently considered a private interface, and this interface is thus undocumented.</source>
          <target state="translated">静的ファイルファインダは現在のところプライベートインターフェイスと考えられており、このインターフェイスはドキュメント化されていません。</target>
        </trans-unit>
        <trans-unit id="34f98c53e58f76b16d184481e3d220bb1ced41c7" translate="yes" xml:space="preserve">
          <source>Static file namespacing</source>
          <target state="translated">静的なファイルの名前空間</target>
        </trans-unit>
        <trans-unit id="c67b41072f6be9918effb94b462d59a413773f62" translate="yes" xml:space="preserve">
          <source>Static files</source>
          <target state="translated">静的ファイル</target>
        </trans-unit>
        <trans-unit id="55c6a23bcbb02c6bc5b7baeb4d46204aae98ef57" translate="yes" xml:space="preserve">
          <source>Static files are automatically served by the development server. In production, you must define a &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; directory where &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; will copy them.</source>
          <target state="translated">静的ファイルは、開発サーバーによって自動的に提供されます。本番&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;、collectstaticがそれらをコピーするSTATIC_ROOTディレクトリを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="ea50b68a12ea4bffd77d98cfe32c34e31ef4556d" translate="yes" xml:space="preserve">
          <source>Static files management</source>
          <target state="translated">静的ファイルの管理</target>
        </trans-unit>
        <trans-unit id="468b015716ba67db5c5137a15fe96453744f97cb" translate="yes" xml:space="preserve">
          <source>Static files, which by definition are not dynamic, make an excellent target for optimization gains.</source>
          <target state="translated">静的ファイルは、定義上は動的ではないので、最適化のための優れたターゲットとなります。</target>
        </trans-unit>
        <trans-unit id="dbb55501b6182a55d5ef0bb9d8983448c1e4000b" translate="yes" xml:space="preserve">
          <source>Status information will be written to this file handle. Defaults to using &lt;code&gt;sys.stdout&lt;/code&gt;, but any object with a &lt;code&gt;write&lt;/code&gt; method is supported.</source>
          <target state="translated">ステータス情報はこのファイルハンドルに書き込まれます。デフォルトでは &lt;code&gt;sys.stdout&lt;/code&gt; を使用しますが、 &lt;code&gt;write&lt;/code&gt; メソッドを持つすべてのオブジェクトがサポートされています。</target>
        </trans-unit>
        <trans-unit id="7f4f785a32aeb81e0a7ff919e91121617ede171c" translate="yes" xml:space="preserve">
          <source>Stemming words, so that &amp;ldquo;pony&amp;rdquo; and &amp;ldquo;ponies&amp;rdquo; are considered similar.</source>
          <target state="translated">「ポニー」と「ポニー」は類似していると見なされるように単語をステミングします。</target>
        </trans-unit>
        <trans-unit id="474ca822a4222d269a95e4e93701c49d8054ad74" translate="yes" xml:space="preserve">
          <source>Still, note that there are always going to be sections of your debug output that are inappropriate for public consumption. File paths, configuration options and the like all give attackers extra information about your server.</source>
          <target state="translated">しかし、デバッグ出力の中には、公開するには不適切なセクションが常に存在することに注意してください。ファイルパスや設定オプションなどは、攻撃者にサーバに関する余分な情報を与えてしまいます。</target>
        </trans-unit>
        <trans-unit id="d8ee0e5ac1d56dbf0d06477a93bc5d14e01359b9" translate="yes" xml:space="preserve">
          <source>Stops running tests and reports the failure immediately after a test fails.</source>
          <target state="translated">テストの実行を停止し、テストが失敗した直後に失敗を報告します。</target>
        </trans-unit>
        <trans-unit id="12b75a63f772a6610a2d1a1c30a7c6f8c7c6bc7f" translate="yes" xml:space="preserve">
          <source>Stops the template engine from rendering the contents of this block tag.</source>
          <target state="translated">テンプレートエンジンがこのブロックタグの内容をレンダリングするのを停止します。</target>
        </trans-unit>
        <trans-unit id="ab1557ec70d1b0010ae03328efc7140e3d7014fd" translate="yes" xml:space="preserve">
          <source>Storage backends</source>
          <target state="translated">ストレージバックエンド</target>
        </trans-unit>
        <trans-unit id="567ce2a52a8dc37c3d7c374479ee12ec4da2a5b5" translate="yes" xml:space="preserve">
          <source>Storage engines</source>
          <target state="translated">ストレージエンジン</target>
        </trans-unit>
        <trans-unit id="8690ab496342e3b23e722655f434e9d599df2ebd" translate="yes" xml:space="preserve">
          <source>Storage objects</source>
          <target state="translated">ストレージオブジェクト</target>
        </trans-unit>
        <trans-unit id="687c6980fa4b88314893c4d3905f3cafb0bfe1ce" translate="yes" xml:space="preserve">
          <source>Storages</source>
          <target state="translated">Storages</target>
        </trans-unit>
        <trans-unit id="b0f1f8c9c2dcba9655d70d26929b8b1d0e48ddcd" translate="yes" xml:space="preserve">
          <source>Store your static files in a folder called &lt;code&gt;static&lt;/code&gt; in your app. For example &lt;code&gt;my_app/static/my_app/example.jpg&lt;/code&gt;.</source>
          <target state="translated">静的ファイルをアプリの &lt;code&gt;static&lt;/code&gt; というフォルダーに保存します。たとえば、 &lt;code&gt;my_app/static/my_app/example.jpg&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="073bbbf48c6eb83a2852f4678919ceac4595d300" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">店舗&lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a6daa5c20d23f84881e9fa95fa1893b088841b2" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.GeometryCollection&quot;&gt;&lt;code&gt;GeometryCollection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">店舗&lt;a href=&quot;geos#django.contrib.gis.geos.GeometryCollection&quot;&gt; &lt;code&gt;GeometryCollection&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="315308ae7944998b72975dc9466019d314cc79c5" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">店舗&lt;a href=&quot;geos#django.contrib.gis.geos.LineString&quot;&gt; &lt;code&gt;LineString&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed6d1e5283b30474c1c0300f9f460481be4e65e0" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.MultiLineString&quot;&gt;&lt;code&gt;MultiLineString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">店舗&lt;a href=&quot;geos#django.contrib.gis.geos.MultiLineString&quot;&gt; &lt;code&gt;MultiLineString&lt;/code&gt; の&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a78b908bf6cde5510284e225461ad89380678f0c" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.MultiPoint&quot;&gt;&lt;code&gt;MultiPoint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">店舗&lt;a href=&quot;geos#django.contrib.gis.geos.MultiPoint&quot;&gt; &lt;code&gt;MultiPoint&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="519189173bec278630442b11bfe8e42391c667f9" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.MultiPolygon&quot;&gt;&lt;code&gt;MultiPolygon&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">店舗&lt;a href=&quot;geos#django.contrib.gis.geos.MultiPolygon&quot;&gt; &lt;code&gt;MultiPolygon&lt;/code&gt; の&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1e5d386e8b193cbae72ddbdf0df69e07d8cd6be" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">店舗&lt;a href=&quot;geos#django.contrib.gis.geos.Point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b20d820edd4ee8d8aaa6faeceda245bf3d15f4bb" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">店舗&lt;a href=&quot;geos#django.contrib.gis.geos.Polygon&quot;&gt; &lt;code&gt;Polygon&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="442fdb9b3e170ac8a03783b7cc6d935563aba9c2" translate="yes" xml:space="preserve">
          <source>Stores a range of dates. Based on a &lt;a href=&quot;../../models/fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;. Represented by a &lt;code&gt;daterange&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateRange&quot;&gt;&lt;code&gt;DateRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="translated">日付の範囲を格納します。&lt;a href=&quot;../../models/fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; に&lt;/a&gt;基づいています。で表される &lt;code&gt;daterange&lt;/code&gt; データベースと&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateRange&quot;&gt; &lt;code&gt;DateRange&lt;/code&gt; &lt;/a&gt;のPythonインチ</target>
        </trans-unit>
        <trans-unit id="10f1dbb79b52ddd161446eb05b9d70feab70ce79" translate="yes" xml:space="preserve">
          <source>Stores a range of floating point values. Based on a &lt;a href=&quot;../../models/fields#django.db.models.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt;. Represented by a &lt;code&gt;numrange&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="translated">浮動小数点値の範囲を格納します。&lt;a href=&quot;../../models/fields#django.db.models.DecimalField&quot;&gt; &lt;code&gt;DecimalField&lt;/code&gt; に&lt;/a&gt;基づいています。で表さ &lt;code&gt;numrange&lt;/code&gt; データベースと&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt;パイソンインチ</target>
        </trans-unit>
        <trans-unit id="6d6ab479b0af5a4f83f7e297e862610934953058" translate="yes" xml:space="preserve">
          <source>Stores a range of floating point values. Based on a &lt;a href=&quot;../../models/fields#django.db.models.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt;. Represented by a &lt;code&gt;numrange&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="translated">浮動小数点値の範囲を格納します。&lt;a href=&quot;../../models/fields#django.db.models.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; に&lt;/a&gt;基づいています。で表さ &lt;code&gt;numrange&lt;/code&gt; データベースとAで&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt;パイソンインチ</target>
        </trans-unit>
        <trans-unit id="d974c9ba76aa3ebf85128823bcb263bcad904b18" translate="yes" xml:space="preserve">
          <source>Stores a range of integers. Based on an &lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;. Represented by an &lt;code&gt;int4range&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="translated">整数の範囲を格納します。&lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; に&lt;/a&gt;基づいています。で表さ &lt;code&gt;int4range&lt;/code&gt; データベースとAで&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt;パイソンインチ</target>
        </trans-unit>
        <trans-unit id="f7fc9f68a40c2bb5262ed6710268e98141687b4b" translate="yes" xml:space="preserve">
          <source>Stores a range of large integers. Based on a &lt;a href=&quot;../../models/fields#django.db.models.BigIntegerField&quot;&gt;&lt;code&gt;BigIntegerField&lt;/code&gt;&lt;/a&gt;. Represented by an &lt;code&gt;int8range&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="translated">大きな整数の範囲を格納します。&lt;a href=&quot;../../models/fields#django.db.models.BigIntegerField&quot;&gt; &lt;code&gt;BigIntegerField&lt;/code&gt; に&lt;/a&gt;基づいています。で表さ &lt;code&gt;int8range&lt;/code&gt; データベースとAで&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt; &lt;code&gt;NumericRange&lt;/code&gt; &lt;/a&gt;パイソンインチ</target>
        </trans-unit>
        <trans-unit id="24d2fd4ba60083f3af9475d6bedf8c5e0b57cf7f" translate="yes" xml:space="preserve">
          <source>Stores a range of timestamps. Based on a &lt;a href=&quot;../../models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;. Represented by a &lt;code&gt;tstzrange&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateTimeTZRange&quot;&gt;&lt;code&gt;DateTimeTZRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="translated">タイムスタンプの範囲を格納します。&lt;a href=&quot;../../models/fields#django.db.models.DateTimeField&quot;&gt; &lt;code&gt;DateTimeField&lt;/code&gt; に&lt;/a&gt;基づいています。で表さ &lt;code&gt;tstzrange&lt;/code&gt; データベースとAで&lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateTimeTZRange&quot;&gt; &lt;code&gt;DateTimeTZRange&lt;/code&gt; &lt;/a&gt;パイソンインチ</target>
        </trans-unit>
        <trans-unit id="85fefa25af8ac03aed394db3aa8716969e73a82a" translate="yes" xml:space="preserve">
          <source>Stores changes to miscellaneous model options (settings on a model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt;) like &lt;code&gt;permissions&lt;/code&gt; and &lt;code&gt;verbose_name&lt;/code&gt;. Does not affect the database, but persists these changes for &lt;a href=&quot;#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; instances to use. &lt;code&gt;options&lt;/code&gt; should be a dictionary mapping option names to values.</source>
          <target state="translated">&lt;code&gt;permissions&lt;/code&gt; や &lt;code&gt;verbose_name&lt;/code&gt; などのその他のモデルオプション（モデルの &lt;code&gt;Meta&lt;/code&gt; の設定）への変更を保存します。データベースには影響しませんが、&lt;a href=&quot;#django.db.migrations.operations.RunPython&quot;&gt; &lt;code&gt;RunPython&lt;/code&gt; &lt;/a&gt;インスタンスが使用するこれらの変更を永続化します。 &lt;code&gt;options&lt;/code&gt; は、オプション名を値にマッピングする辞書でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7f6013803e5d64bbb493438a1fa858558549e9f3" translate="yes" xml:space="preserve">
          <source>Storing JSON scalar &lt;code&gt;null&lt;/code&gt; does not violate &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt;&lt;code&gt;null=False&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JSONスカラー &lt;code&gt;null&lt;/code&gt; を保存しても、&lt;a href=&quot;../../ref/models/fields#django.db.models.Field.null&quot;&gt; &lt;code&gt;null=False&lt;/code&gt; に&lt;/a&gt;違反しません。</target>
        </trans-unit>
        <trans-unit id="17ca0f7fd17717b77e98351c126613bbe7ba06e6" translate="yes" xml:space="preserve">
          <source>Storing and querying for &lt;code&gt;None&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 保存とクエリ</target>
        </trans-unit>
        <trans-unit id="b26d85acdc9c1382a17178263f16f66529e2935f" translate="yes" xml:space="preserve">
          <source>Storing the CSRF token in a cookie (Django&amp;rsquo;s default) is safe, but storing it in the session is common practice in other web frameworks and therefore sometimes demanded by security auditors.</source>
          <target state="translated">CSRFトークンをCookie（Djangoのデフォルト）に格納することは安全ですが、セッションに格納することは他のWebフレームワークでは一般的な方法であるため、セキュリティ監査人から要求されることがあります。</target>
        </trans-unit>
        <trans-unit id="53bd973c8e9ec072b83032a646a616c6e1d937c5" translate="yes" xml:space="preserve">
          <source>Streaming large CSV files</source>
          <target state="translated">大容量CSVファイルのストリーミング</target>
        </trans-unit>
        <trans-unit id="9a1d81db2bbbab8255afb828704753d2e3a5742c" translate="yes" xml:space="preserve">
          <source>Strictly speaking, &lt;code&gt;filesizeformat&lt;/code&gt; does not conform to the International System of Units which recommends using KiB, MiB, GiB, etc. when byte sizes are calculated in powers of 1024 (which is the case here). Instead, Django uses traditional unit names (KB, MB, GB, etc.) corresponding to names that are more commonly used.</source>
          <target state="translated">厳密に言えば、 &lt;code&gt;filesizeformat&lt;/code&gt; は、バイトサイズが1024の累乗で計算される場合にKiB、MiB、GiBなどを使用することを推奨する国際単位系に準拠していません（この場合）。代わりに、Djangoは、より一般的に使用される名前に対応する従来のユニット名（KB、MB、GBなど）を使用します。</target>
        </trans-unit>
        <trans-unit id="95041f41349683b64a22765014d2875f3ec50b39" translate="yes" xml:space="preserve">
          <source>Strictly speaking, Django allows importing models once their application configuration is loaded. However, in order to avoid needless constraints on the order of &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, it&amp;rsquo;s strongly recommended not import any models at this stage.</source>
          <target state="translated">厳密に言うと、Djangoでは、アプリケーション構成が読み込まれた後、モデルをインポートできます。ただし、&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;の順序に対する不要な制約を回避するために、この段階ではモデルをインポートしないことを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="be6d28eafa6bafa726940b259dfd49f021cc9df3" translate="yes" xml:space="preserve">
          <source>Strictly speaking, signal handling and registration code can live anywhere you like, although it&amp;rsquo;s recommended to avoid the application&amp;rsquo;s root module and its &lt;code&gt;models&lt;/code&gt; module to minimize side-effects of importing code.</source>
          <target state="translated">厳密に言えば、信号処理と登録コードは好きな場所に配置できますが、アプリケーションのルートモジュールとその &lt;code&gt;models&lt;/code&gt; モジュールを避けて、コードのインポートによる副作用を最小限に抑えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5d48c7c680a0f2ebf70d8ae1b79309ebb93d71c7" translate="yes" xml:space="preserve">
          <source>String literals and automatic escaping</source>
          <target state="translated">文字列リテラルと自動エスケープ</target>
        </trans-unit>
        <trans-unit id="2ce5220f1291fc968b8a624034f3ec2f95fc3951" translate="yes" xml:space="preserve">
          <source>String literals passed to tags and filters</source>
          <target state="translated">タグやフィルタに渡される文字列リテラル</target>
        </trans-unit>
        <trans-unit id="5aaa087b298e0e5411ed543eaab495db54cb115f" translate="yes" xml:space="preserve">
          <source>String marked safe will become unsafe again if modified. For example:</source>
          <target state="translated">safeとマークされた文字列は、変更されると再び安全でないものになります。例えば</target>
        </trans-unit>
        <trans-unit id="df60868121cc45b530430369578cf2586acf3487" translate="yes" xml:space="preserve">
          <source>String representing the name of the raster. When creating a file-based raster, this parameter must be the file path for the new raster. If the name starts with &lt;code&gt;/vsimem/&lt;/code&gt;, the raster is created in GDAL&amp;rsquo;s virtual filesystem.</source>
          <target state="translated">ラスターの名前を表す文字列。ファイルベースのラスターを作成する場合、このパラメーターは新しいラスターのファイルパスである必要があります。名前が &lt;code&gt;/vsimem/&lt;/code&gt; で始まる場合、ラスターはGDALの仮想ファイルシステムに作成されます。</target>
        </trans-unit>
        <trans-unit id="e4b2dc6cae3949b7f2226b9d18544755ac711dd8" translate="yes" xml:space="preserve">
          <source>Strings for setting both keys and values will be converted from &lt;code&gt;encoding&lt;/code&gt; to &lt;code&gt;str&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is not set, it defaults to &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キーと値の両方を設定 &lt;code&gt;encoding&lt;/code&gt; ための &lt;code&gt;str&lt;/code&gt; 、エンコーディングからstrに変換されます。 &lt;code&gt;encoding&lt;/code&gt; が設定されていない場合、デフォルトは&lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt; &lt;code&gt;DEFAULT_CHARSET&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="6af15dcaf8028884a9c1a0a95b1d40fa996014cc" translate="yes" xml:space="preserve">
          <source>Strings that can be coerced to integers will be &lt;strong&gt;summed&lt;/strong&gt;, not concatenated, as in the first example above.</source>
          <target state="translated">上記の最初の例のように、整数に強制変換できる文字列は連結されずに&lt;strong&gt;合計&lt;/strong&gt;されます。</target>
        </trans-unit>
        <trans-unit id="c7f2950d019840cc87935eabaf5673f9a0cf7c77" translate="yes" xml:space="preserve">
          <source>Strings that reference fields on the model, or &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt;.</source>
          <target state="translated">モデルのフィールドを参照する文字列、または&lt;a href=&quot;expressions&quot;&gt;クエリ式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f3fe26cc5b643b13d9bd40452d1189e59da23e8" translate="yes" xml:space="preserve">
          <source>Styling required or erroneous form rows</source>
          <target state="translated">スタイリングが必要な場合やフォームの行に誤りがある場合</target>
        </trans-unit>
        <trans-unit id="2c18baa1aff6f31add9fe33da98e6b67f5bf6ff5" translate="yes" xml:space="preserve">
          <source>Styling widget classes</source>
          <target state="translated">ウィジェットクラスのスタイリング</target>
        </trans-unit>
        <trans-unit id="44b7fa0469dcbcc7c3f97ccad782bda65e0fa25f" translate="yes" xml:space="preserve">
          <source>Styling widget instances</source>
          <target state="translated">ウィジェットインスタンスのスタイリング</target>
        </trans-unit>
        <trans-unit id="7f6e828c93be239a620d004062d68ac259f58e47" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;../../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm&quot;&gt;&lt;code&gt;AuthenticationForm&lt;/code&gt;&lt;/a&gt; that will be used by the admin site login view.</source>
          <target state="translated">管理サイトのログインビューで使用される&lt;a href=&quot;../../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm&quot;&gt; &lt;code&gt;AuthenticationForm&lt;/code&gt; の&lt;/a&gt;サブクラス。</target>
        </trans-unit>
        <trans-unit id="ec350404dede323315e21592094d0f2e748f1e9b" translate="yes" xml:space="preserve">
          <source>Subclasses can override this method to perform initialization tasks such as registering signals. It is called as soon as the registry is fully populated.</source>
          <target state="translated">サブクラスはこのメソッドをオーバーライドして、シグナルの登録などの初期化タスクを実行することができます。このメソッドは、レジストリが完全に埋め尽くされるとすぐに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="409849940f59d8ed41a8b1565b740b8e430ff459" translate="yes" xml:space="preserve">
          <source>Subclasses inherit tags from superclasses, and methods inherit tags from their class. Given:</source>
          <target state="translated">サブクラスはスーパークラスからタグを継承し、メソッドはそのクラスからタグを継承します。与えられた</target>
        </trans-unit>
        <trans-unit id="ca2be9a5594c630d47fb4f2c94d9ca7bceb92f66" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt;&lt;code&gt;GenericInlineModelAdmin&lt;/code&gt;&lt;/a&gt; with stacked and tabular layouts, respectively.</source>
          <target state="translated">スタックレイアウトとテーブルレイアウトをそれぞれ備えた&lt;a href=&quot;#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt; &lt;code&gt;GenericInlineModelAdmin&lt;/code&gt; の&lt;/a&gt;サブクラス。</target>
        </trans-unit>
        <trans-unit id="aaa977c146c2071b4ce342e125028f8b620e4d46" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;UploadedFile&lt;/code&gt; include:</source>
          <target state="translated">&lt;code&gt;UploadedFile&lt;/code&gt; のサブクラスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7a399f95cfb14652c6e13e8e042ddd17077f31cc" translate="yes" xml:space="preserve">
          <source>Subclassing forms</source>
          <target state="translated">フォームのサブクラス化</target>
        </trans-unit>
        <trans-unit id="ed922813c03a5685e87c852ef9fd8374f089b6ef" translate="yes" xml:space="preserve">
          <source>Subclassing generic views</source>
          <target state="translated">汎用ビューのサブクラス化</target>
        </trans-unit>
        <trans-unit id="d55e035efba5af0a6b8a554cd827ae4af8fde6b4" translate="yes" xml:space="preserve">
          <source>Subclassing the &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt; class requires that you implement the &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt; &lt;code&gt;BaseCommand&lt;/code&gt; &lt;/a&gt;クラスをサブクラス化するには、&lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="0bcbc67121fea319355279cd6b26ffb2db342c49" translate="yes" xml:space="preserve">
          <source>Subclassing the built-in database backends</source>
          <target state="translated">組み込みのデータベースバックエンドのサブクラス化</target>
        </trans-unit>
        <trans-unit id="468cbafbc734999dafb4d52cc18cff7be6d5c802" translate="yes" xml:space="preserve">
          <source>Subdomains within a site are able to set cookies on the client for the whole domain. This makes session fixation possible if cookies are permitted from subdomains not controlled by trusted users.</source>
          <target state="translated">サイト内のサブドメインは、ドメイン全体のクライアントにクッキーを設定することができます。これにより、信頼できるユーザーが管理していないサブドメインからクッキーを許可した場合、セッション固定化が可能になります。</target>
        </trans-unit>
        <trans-unit id="0c42d70326da53bf6f6e18301737e29bdacbf370" translate="yes" xml:space="preserve">
          <source>Subdomains within a site will be able to set cookies on the client for the whole domain. By setting the cookie and using a corresponding token, subdomains will be able to circumvent the CSRF protection. The only way to avoid this is to ensure that subdomains are controlled by trusted users (or, are at least unable to set cookies). Note that even without CSRF, there are other vulnerabilities, such as session fixation, that make giving subdomains to untrusted parties a bad idea, and these vulnerabilities cannot easily be fixed with current browsers.</source>
          <target state="translated">サイト内のサブドメインは、ドメイン全体のクライアントにクッキーを設定することができます。クッキーを設定し、対応するトークンを使用することで、サブドメインは CSRF 保護を回避することができます。これを回避する唯一の方法は、サブドメインが信頼されたユーザーによって管理されていることを確認することです(または、少なくともクッキーを設定できないようにすることです)。CSRF がなくても、セッションの固定化など、サブドメインを信頼されていない相手に与えることを良くないことになる脆弱性があり、これらの脆弱性は現在のブラウザでは簡単には修正できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="43a930fe006f9385062109a10f98bb67877b6896" translate="yes" xml:space="preserve">
          <source>Subject-line prefix for email messages sent with &lt;code&gt;django.core.mail.mail_admins&lt;/code&gt; or &lt;code&gt;django.core.mail.mail_managers&lt;/code&gt;. You&amp;rsquo;ll probably want to include the trailing space.</source>
          <target state="translated">&lt;code&gt;django.core.mail.mail_admins&lt;/code&gt; または &lt;code&gt;django.core.mail.mail_managers&lt;/code&gt; で送信された電子メールメッセージの件名行のプレフィックス。末尾のスペースを含めることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="112e5633557aabe0554412178f18993f469e9d1b" translate="yes" xml:space="preserve">
          <source>Submitting a pull request.</source>
          <target state="translated">プルリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="7943280a77a00e447d4b61749b26ff5f2447c28a" translate="yes" xml:space="preserve">
          <source>Submitting files is a special case. To POST a file, you need only provide the file field name as a key, and a file handle to the file you wish to upload as a value. For example:</source>
          <target state="translated">ファイルの送信は特殊なケースです。ファイルをPOSTするには、ファイルフィールド名をキーとして、アップロードしたいファイルのファイルハンドルを値として指定するだけです。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b4fb6812fd7c01babca42c65c2c4494d98213946" translate="yes" xml:space="preserve">
          <source>Subset of fields</source>
          <target state="translated">フィールドのサブセット</target>
        </trans-unit>
        <trans-unit id="0c0efeebd93696e01321323568fe6cd5ea45e10f" translate="yes" xml:space="preserve">
          <source>Subsets of assets</source>
          <target state="translated">資産のサブセット</target>
        </trans-unit>
        <trans-unit id="8256727b4c81539d429b19dfe0af74a32fcf9fb2" translate="yes" xml:space="preserve">
          <source>Substituting a custom &lt;code&gt;User&lt;/code&gt; model</source>
          <target state="translated">カスタム &lt;code&gt;User&lt;/code&gt; モデルの置き換え</target>
        </trans-unit>
        <trans-unit id="43b529dd20b16ee9e09835fb0f297059f2a13c8a" translate="yes" xml:space="preserve">
          <source>Substring matching and case sensitivity</source>
          <target state="translated">サブストリングマッチングと大文字小文字の区別</target>
        </trans-unit>
        <trans-unit id="f1c0370b9a90b04b716ca152c18e0f8fcf868699" translate="yes" xml:space="preserve">
          <source>Such quoted names can also be used with Django&amp;rsquo;s other supported database backends; except for Oracle, however, the quotes have no effect. See the &lt;a href=&quot;../databases#oracle-notes&quot;&gt;Oracle notes&lt;/a&gt; for more details.</source>
          <target state="translated">このような引用符で囲まれた名前は、Djangoの他のサポートされているデータベースバックエンドでも使用できます。ただし、Oracleを除き、引用符は無効です。詳細については、&lt;a href=&quot;../databases#oracle-notes&quot;&gt;Oracleのノート&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="351320823415fa40986a1e879a6ec65e8b8f599d" translate="yes" xml:space="preserve">
          <source>Such values can be set in your root URLconf. Setting these variables in any other URLconf will have no effect.</source>
          <target state="translated">これらの値はルート URLconf で設定することができます。これらの変数を他の URLconf に設定しても何の影響もありません。</target>
        </trans-unit>
        <trans-unit id="dc6b73d601ef3e2b985989c69ec5e52240b57ae4" translate="yes" xml:space="preserve">
          <source>Suggest the database that should be used for read operations for objects of type &lt;code&gt;model&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;model&lt;/code&gt; のオブジェクトの読み取り操作に使用するデータベースを提案します。</target>
        </trans-unit>
        <trans-unit id="8a7c037012cda74dc2316e0500df4b0164373f35" translate="yes" xml:space="preserve">
          <source>Suggest the database that should be used for writes of objects of type Model.</source>
          <target state="translated">モデル型のオブジェクトの書き込みに使用されるべきデータベースを提案します。</target>
        </trans-unit>
        <trans-unit id="6ed816d75e1c95434823496141b81fdcea2cbda9" translate="yes" xml:space="preserve">
          <source>Summary:</source>
          <target state="translated">Summary:</target>
        </trans-unit>
        <trans-unit id="9f06efd8c7862ea5c86a8b85b5a0ee6bc97a378c" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;../../models/fields#django.db.models.SmallAutoField&quot;&gt;&lt;code&gt;SmallAutoField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.BigAutoField&quot;&gt;&lt;code&gt;BigAutoField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.SmallIntegerField&quot;&gt;&lt;code&gt;SmallIntegerField&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../models/fields#django.db.models.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt; was added.</source>
          <target state="translated">サポート&lt;a href=&quot;../../models/fields#django.db.models.SmallAutoField&quot;&gt; &lt;code&gt;SmallAutoField&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../models/fields#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../models/fields#django.db.models.BigAutoField&quot;&gt; &lt;code&gt;BigAutoField&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../models/fields#django.db.models.SmallIntegerField&quot;&gt; &lt;code&gt;SmallIntegerField&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../models/fields#django.db.models.DecimalField&quot;&gt; &lt;code&gt;DecimalField&lt;/code&gt; はが&lt;/a&gt;追加されました。</target>
        </trans-unit>
        <trans-unit id="7d72a5e69d4c257eb6181e5e9a23762b5032e8c5" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;../contrib/postgres/fields#django.contrib.postgres.fields.ArrayField&quot;&gt;&lt;code&gt;ArrayField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../contrib/postgres/fields#django.contrib.postgres.fields.RangeField&quot;&gt;&lt;code&gt;RangeField&lt;/code&gt;&lt;/a&gt; was added.</source>
          <target state="translated">&lt;a href=&quot;../contrib/postgres/fields#django.contrib.postgres.fields.ArrayField&quot;&gt; &lt;code&gt;ArrayField&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../contrib/postgres/fields#django.contrib.postgres.fields.RangeField&quot;&gt; &lt;code&gt;RangeField&lt;/code&gt; の&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="5215d0a372761942d9420b11f95e73ea820aa464" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; was added to the &lt;code&gt;FileSystemStorage.save()&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; の&lt;/a&gt;サポートが &lt;code&gt;FileSystemStorage.save()&lt;/code&gt; メソッドに追加されました。</target>
        </trans-unit>
        <trans-unit id="9848450458cb5c40feea2458c5eb4cf7c5176c8f" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; was added.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; の&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="a9bf703bfc47555aef6e042d642d910d9c517ef9" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt;&lt;code&gt;path&lt;/code&gt; was added.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt; &lt;code&gt;path&lt;/code&gt; サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="4603fd8e4ae188addeb3efab4fb7f63e693f58ff" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; was added.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; の&lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="5bda4a0b159c10056a1215103f251b0060d8ba92" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt;&lt;code&gt;content&lt;/code&gt; was added.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt; &lt;code&gt;content&lt;/code&gt; サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="c7521078cbd379b658af074d0f5b7938c6202ded" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;'websearch'&lt;/code&gt; search type and query expressions in &lt;code&gt;SearchQuery.value&lt;/code&gt; were added.</source>
          <target state="translated">サポート &lt;code&gt;'websearch'&lt;/code&gt; で検索タイプとクエリ式 &lt;code&gt;SearchQuery.value&lt;/code&gt; が追加されました。</target>
        </trans-unit>
        <trans-unit id="e5d0baf1f5fdc2a622a66934881b52e4935c9a82" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;.bitxor()&lt;/code&gt; was added.</source>
          <target state="translated">&lt;code&gt;.bitxor()&lt;/code&gt; のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="a206d05bd0f1154f56b420532c7d2a40a5891c00" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;distinct=True&lt;/code&gt; was added.</source>
          <target state="translated">&lt;code&gt;distinct=True&lt;/code&gt; のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="4cc6dfa4be48dabf74116a7c3586623a2e10b48f" translate="yes" xml:space="preserve">
          <source>Support for ISO 8601 date string parsing (including optional timezone) was added.</source>
          <target state="translated">ISO 8601 日付文字列解析のサポート(オプションのタイムゾーンを含む)が追加されました。</target>
        </trans-unit>
        <trans-unit id="3f583f36c813f3b5984dd58c4e32bb0e469ecf17" translate="yes" xml:space="preserve">
          <source>Support for XZ archives (&lt;code&gt;.tar.xz&lt;/code&gt;, &lt;code&gt;.txz&lt;/code&gt;) and LZMA archives (&lt;code&gt;.tar.lzma&lt;/code&gt;, &lt;code&gt;.tlz&lt;/code&gt;) was added.</source>
          <target state="translated">XZアーカイブ（ &lt;code&gt;.tar.xz&lt;/code&gt; 、 &lt;code&gt;.txz&lt;/code&gt; ）およびLZMAアーカイブ（ &lt;code&gt;.tar.lzma&lt;/code&gt; 、 &lt;code&gt;.tlz&lt;/code&gt; ）のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="720a5532bb83c82319471c4a3118a691b1a21d5f" translate="yes" xml:space="preserve">
          <source>Support for async views was added.</source>
          <target state="translated">非同期ビューのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="5be31ff675a5ee69ea382dec4ab7b181ba4ace38" translate="yes" xml:space="preserve">
          <source>Support for asynchronous requests was added to the &lt;code&gt;MiddlewareMixin&lt;/code&gt;.</source>
          <target state="translated">非同期リクエストのサポートが &lt;code&gt;MiddlewareMixin&lt;/code&gt; に追加されました。</target>
        </trans-unit>
        <trans-unit id="704980d755ccbecf222ba838fbca85ee13a9273c" translate="yes" xml:space="preserve">
          <source>Support for boolean &lt;a href=&quot;expressions#django.db.models.Expression&quot;&gt;&lt;code&gt;Expression&lt;/code&gt;&lt;/a&gt; was added.</source>
          <target state="translated">ブール&lt;a href=&quot;expressions#django.db.models.Expression&quot;&gt; &lt;code&gt;Expression&lt;/code&gt; &lt;/a&gt;サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="4e3e4165e576828131a28535a68c964264f18465" translate="yes" xml:space="preserve">
          <source>Support for comma separators for decimal fractions in the ISO 8601 format and for the format &lt;code&gt;&quot;DD HH:MM:SS,uuuuuu&quot;&lt;/code&gt; was added.</source>
          <target state="translated">ISO8601形式および &lt;code&gt;&quot;DD HH:MM:SS,uuuuuu&quot;&lt;/code&gt; 形式の小数点のコンマ区切り文字のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="2aee3dcc44a2e2275706ce09454081fc81c0474b" translate="yes" xml:space="preserve">
          <source>Support for comma separators for milliseconds was added.</source>
          <target state="translated">ミリ秒のカンマ区切りのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="e8ee9bdac5921499c4a394030c41ffd3312c5030" translate="yes" xml:space="preserve">
          <source>Support for foreign tables and materialized views was added.</source>
          <target state="translated">外部テーブルとマテリアライズされたビューのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="2bf9d10097cb7af7bfd464554325eafd3399e77a" translate="yes" xml:space="preserve">
          <source>Support for iterables of template names was added.</source>
          <target state="translated">テンプレート名のイテラーブルのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="ac4123436c5a85d234e5dd971dc1495d3ca2c577" translate="yes" xml:space="preserve">
          <source>Support for iterating over &lt;code&gt;Paginator&lt;/code&gt; was added.</source>
          <target state="translated">&lt;code&gt;Paginator&lt;/code&gt; の反復のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="2ed202a5e38310e8d01322d85eca3458b1995133" translate="yes" xml:space="preserve">
          <source>Support for lookups using underscores was added.</source>
          <target state="translated">アンダースコアを使用したルックアップのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="500e2c503298701af3f81a2d6a28faa5f319f592" translate="yes" xml:space="preserve">
          <source>Support for multiple field names in the &lt;code&gt;no-cache&lt;/code&gt; directive was added.</source>
          <target state="translated">&lt;code&gt;no-cache&lt;/code&gt; ディレクティブでの複数のフィールド名のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="9c969caa1b22c01fea2e5586d96ce33da005a674" translate="yes" xml:space="preserve">
          <source>Support for negative integers was added.</source>
          <target state="translated">負の整数のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="c8ca7eda9b556742d5dd8ff5bdfcc513af556c8a" translate="yes" xml:space="preserve">
          <source>Support for query expressions was added.</source>
          <target state="translated">クエリ式のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="c87d5b920556335c42c045aaf3845bd6e91f6c51" translate="yes" xml:space="preserve">
          <source>Support for raising &lt;code&gt;ValueError&lt;/code&gt; to indicate no match was added.</source>
          <target state="translated">一致が追加されなかったことを示すために &lt;code&gt;ValueError&lt;/code&gt; を発生させるためのサポート。</target>
        </trans-unit>
        <trans-unit id="1339102540db71df212442f1ca38a1006f890c34" translate="yes" xml:space="preserve">
          <source>Support for result streaming on SQLite was added.</source>
          <target state="translated">SQLite上での結果ストリーミングのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="4d608e6c62c528f19f377e69aeccc67385f59ec4" translate="yes" xml:space="preserve">
          <source>Support for spatial functions operating on real geometries was added.</source>
          <target state="translated">実在する幾何学上で動作する空間関数のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="e81f78b6f449055d90229a296946393c606b9703" translate="yes" xml:space="preserve">
          <source>Support for template engines</source>
          <target state="translated">テンプレートエンジンのサポート</target>
        </trans-unit>
        <trans-unit id="ab63f538629225ce40f7d7128bf5d9202158484e" translate="yes" xml:space="preserve">
          <source>Support for the &lt;code&gt;'TREE'&lt;/code&gt; format on MySQL 8.0.16+ and &lt;code&gt;analyze&lt;/code&gt; option on MariaDB and MySQL 8.0.18+ were added.</source>
          <target state="translated">MySQL8.0.16以降での &lt;code&gt;'TREE'&lt;/code&gt; 形式のサポートとMariaDBおよびMySQL8.0.18以降での &lt;code&gt;analyze&lt;/code&gt; オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="35ae6e41bfe9903b21210702c0442e71fd2624f6" translate="yes" xml:space="preserve">
          <source>Support for the fetching primary key attributes on MariaDB 10.5+ was added.</source>
          <target state="translated">MariaDB 10.5+での主キー属性のフェッチのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="27cb2500c403fd473b374e87a1641b025be1072f" translate="yes" xml:space="preserve">
          <source>Support for using &lt;code&gt;DJANGO_SUPERUSER_PASSWORD&lt;/code&gt; and &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; environment variables was added.</source>
          <target state="translated">&lt;code&gt;DJANGO_SUPERUSER_PASSWORD&lt;/code&gt; および &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; 環境変数の使用のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="27688c5327abb2b73ea437b43fa29c356a128ee7" translate="yes" xml:space="preserve">
          <source>Supported Versions</source>
          <target state="translated">サポートされているバージョン</target>
        </trans-unit>
        <trans-unit id="3bc57d2f52439e55baace17d6c6a93606a82454c" translate="yes" xml:space="preserve">
          <source>Supported arithmetic</source>
          <target state="translated">サポートされている算術</target>
        </trans-unit>
        <trans-unit id="b115db32505ae0ddc8de5c0903011b4132418629" translate="yes" xml:space="preserve">
          <source>Supported by the &lt;a href=&quot;https://www.postgresql.org/docs/current/multibyte.html&quot;&gt;PostgreSQL&lt;/a&gt; (&lt;code&gt;postgresql&lt;/code&gt;) and &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-charsets.html&quot;&gt;MySQL&lt;/a&gt; (&lt;code&gt;mysql&lt;/code&gt;) backends.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/multibyte.html&quot;&gt;PostgreSQL&lt;/a&gt;（ &lt;code&gt;postgresql&lt;/code&gt; ）および&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-charsets.html&quot;&gt;MySQL&lt;/a&gt;（ &lt;code&gt;mysql&lt;/code&gt; ）バックエンドでサポートされています。</target>
        </trans-unit>
        <trans-unit id="7acd741312970e521a1a939cb8b7d591ee9a9233" translate="yes" xml:space="preserve">
          <source>Supported units</source>
          <target state="translated">対応ユニット</target>
        </trans-unit>
        <trans-unit id="4a98e56c9beb231c7293acbc09df596c4291da6e" translate="yes" xml:space="preserve">
          <source>Supporting multiple Django versions</source>
          <target state="translated">複数の Django バージョンをサポート</target>
        </trans-unit>
        <trans-unit id="687b4e67fa6a60b5c3ea388a9c2f304d1d874599" translate="yes" xml:space="preserve">
          <source>Supporting other HTTP methods</source>
          <target state="translated">他のHTTPメソッドをサポート</target>
        </trans-unit>
        <trans-unit id="3cbfd1d44320b9ad6da14e0f21c3ff11cba7de09" translate="yes" xml:space="preserve">
          <source>Supports arbitrary Python objects, but, as described above, can lead to a remote code execution vulnerability if &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; becomes known by an attacker.</source>
          <target state="translated">任意のPythonオブジェクトをサポートしますが、上記のように、&lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;が攻撃者に知られると、リモートでコードが実行される脆弱性につながる可能性があります。</target>
        </trans-unit>
        <trans-unit id="56da4ebdd2d382907acc67f7a1adf557d5e94cc1" translate="yes" xml:space="preserve">
          <source>Suppose an online store has a page where a logged in user can click &amp;ldquo;Buy Now&amp;rdquo; to purchase an item. A user has chosen to stay logged into the store all the time for convenience. An attacker site might create an &amp;ldquo;I Like Ponies&amp;rdquo; button on one of their own pages, and load the store&amp;rsquo;s page in a transparent iframe such that the &amp;ldquo;Buy Now&amp;rdquo; button is invisibly overlaid on the &amp;ldquo;I Like Ponies&amp;rdquo; button. If the user visits the attacker&amp;rsquo;s site, clicking &amp;ldquo;I Like Ponies&amp;rdquo; will cause an inadvertent click on the &amp;ldquo;Buy Now&amp;rdquo; button and an unknowing purchase of the item.</source>
          <target state="translated">オンラインストアに、ログインしているユーザーが[今すぐ購入]をクリックしてアイテムを購入できるページがあるとします。ユーザーは、便宜上、常にストアにログインしたままにすることを選択しました。攻撃者のサイトでは、自分のページの1つに「Iポニーが好き」ボタンを作成し、「今すぐ購入」ボタンが「Iポニーが好き」ボタンの上に見えないようにオーバーレイされるように、ストアのページを透明なiframeに読み込みます。ユーザーが攻撃者のサイトにアクセスした場合、「ポニーが好き」をクリックすると、「今すぐ購入」ボタンが誤ってクリックされ、知らないうちにアイテムが購入されます。</target>
        </trans-unit>
        <trans-unit id="91d53f6916ad3f530795e0ddf3f219a32b3b3e6c" translate="yes" xml:space="preserve">
          <source>Suppose somebody wants to access our book library over HTTP using the views as an API. The API client would connect every now and then and download book data for the books published since last visit. But if no new books appeared since then, it is a waste of CPU time and bandwidth to fetch the books from the database, render a full response and send it to the client. It might be preferable to ask the API when the most recent book was published.</source>
          <target state="translated">誰かがAPIとしてビューを使用してHTTPでブックライブラリにアクセスしたいとします。APIクライアントは、時々接続して、最後の訪問以来発行された書籍の書籍データをダウンロードします。しかし、それ以降新しい本が出てこなかった場合、データベースから本を取得し、完全なレスポンスをレンダリングしてクライアントに送信するのは、CPU時間と帯域幅の浪費になります。最新の書籍がいつ出版されたかをAPIに問い合わせるのが望ましいかもしれません。</target>
        </trans-unit>
        <trans-unit id="b6ba09f6a9abc8fab10e50155241dfe9e94d114e" translate="yes" xml:space="preserve">
          <source>Suppose there is only one blog that had both entries containing &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; and entries from 2008, but that none of the entries from 2008 contained &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt;. The first query would not return any blogs, but the second query would return that one blog.</source>
          <target state="translated">そこ含む両方のエントリ持っていた唯一のブログあるとし&lt;em&gt;、「レノン」&lt;/em&gt; 2008年からとエントリは、しかし、2008年からのエントリのいずれも含まれていないことを&lt;em&gt;「レノン」&lt;/em&gt;。最初のクエリはブログを返しませんが、2番目のクエリはその1つのブログを返します。</target>
        </trans-unit>
        <trans-unit id="e01c1bd98cbad17b9e751a239ba2a890d43c3da2" translate="yes" xml:space="preserve">
          <source>Suppose we add another requirement to our contact form: if the &lt;code&gt;cc_myself&lt;/code&gt; field is &lt;code&gt;True&lt;/code&gt;, the &lt;code&gt;subject&lt;/code&gt; must contain the word &lt;code&gt;&quot;help&quot;&lt;/code&gt;. We are performing validation on more than one field at a time, so the form&amp;rsquo;s &lt;a href=&quot;api#django.forms.Form.clean&quot;&gt;&lt;code&gt;clean()&lt;/code&gt;&lt;/a&gt; method is a good spot to do this. Notice that we are talking about the &lt;code&gt;clean()&lt;/code&gt; method on the form here, whereas earlier we were writing a &lt;code&gt;clean()&lt;/code&gt; method on a field. It&amp;rsquo;s important to keep the field and form difference clear when working out where to validate things. Fields are single data points, forms are a collection of fields.</source>
          <target state="translated">お問い合わせフォームに別の要件を追加するとします &lt;code&gt;cc_myself&lt;/code&gt; フィールドが &lt;code&gt;True&lt;/code&gt; の場合、 &lt;code&gt;subject&lt;/code&gt; は &lt;code&gt;&quot;help&quot;&lt;/code&gt; という単語が含まれている必要があります。一度に複数のフィールドで検証を実行しているので、フォームの&lt;a href=&quot;api#django.forms.Form.clean&quot;&gt; &lt;code&gt;clean()&lt;/code&gt; &lt;/a&gt;メソッドはこれを行うのに適した場所です。ここではフォームの &lt;code&gt;clean()&lt;/code&gt; メソッドについて話していることに注意してください。以前はフィールドに &lt;code&gt;clean()&lt;/code&gt; メソッドを記述していました。検証する場所を決めるときは、フィールドとフォームの違いを明確にしておくことが重要です。フィールドは単一のデータポイントであり、フォームはフィールドのコレクションです。</target>
        </trans-unit>
        <trans-unit id="0cc928eeefb324a7e3109ea15428221b799b26b5" translate="yes" xml:space="preserve">
          <source>Suppose we have the following models:</source>
          <target state="translated">以下のようなモデルがあるとします。</target>
        </trans-unit>
        <trans-unit id="5d28bd5e458f4fc4b481360c8060508c95dab2f7" translate="yes" xml:space="preserve">
          <source>Suppose you have a model with fields &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;biography&lt;/code&gt;. The following two querysets are the same, in terms of deferred fields:</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;age&lt;/code&gt; 、 &lt;code&gt;biography&lt;/code&gt; フィールドを持つモデルがあるとします。次の2つのクエリセットは、遅延フィールドに関して同じです。</target>
        </trans-unit>
        <trans-unit id="a46407ba998152b94352cb74fcd3d95c0fd34b4f" translate="yes" xml:space="preserve">
          <source>Suppose you want to create a simple form on your website, in order to obtain the user&amp;rsquo;s name. You&amp;rsquo;d need something like this in your template:</source>
          <target state="translated">ユーザーの名前を取得するために、Webサイトに簡単なフォームを作成するとします。テンプレートには次のようなものが必要です。</target>
        </trans-unit>
        <trans-unit id="5ae86ce9c555b820767bdbe11b09caabe5b466aa" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts.</source>
          <target state="translated">すべてのユーザープロンプトを抑制します。</target>
        </trans-unit>
        <trans-unit id="ef93342aeaf01b703522c1350c01c4fb9f8959c8" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts. A typical prompt is a warning about deleting an existing test database.</source>
          <target state="translated">すべてのユーザープロンプトを抑制します。典型的なプロンプトは、既存のテストデータベースの削除に関する警告です。</target>
        </trans-unit>
        <trans-unit id="b525332492769ffca01746b65e231df41abb2136" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts. An example prompt is asking about removing stale content types.</source>
          <target state="translated">すべてのユーザー プロンプトを抑制します。プロンプトの例としては、古いコンテンツタイプの削除についての質問があります。</target>
        </trans-unit>
        <trans-unit id="eebf312595aa5fa3dc78321993514dd4d7680393" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts. If a suppressed prompt cannot be resolved automatically, the command will exit with error code 1.</source>
          <target state="translated">すべてのユーザープロンプトを抑制します。抑制されたプロンプトを自動的に解決できない場合、コマンドはエラーコード 1 で終了します。</target>
        </trans-unit>
        <trans-unit id="928ad51e23b59101e44e31f76917df83badad38b" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts. If a suppressed prompt cannot be resolved automatically, the command will exit with error code 3.</source>
          <target state="translated">すべてのユーザープロンプトを抑制します。抑制されたプロンプトを自動的に解決できない場合、コマンドはエラーコード 3 で終了します。</target>
        </trans-unit>
        <trans-unit id="06f17570fb14c4f5cd50be20ab61869fc4b72522" translate="yes" xml:space="preserve">
          <source>Suppresses the &lt;code&gt;from django.contrib.gis.db import models&lt;/code&gt; import statement.</source>
          <target state="translated">&lt;code&gt;from django.contrib.gis.db import models&lt;/code&gt; importステートメントを抑制します。</target>
        </trans-unit>
        <trans-unit id="6fe7d55e7b6b312edd8850a405798196f79b8e4c" translate="yes" xml:space="preserve">
          <source>Suppresses writing &amp;lsquo;&lt;code&gt;#: filename:line&lt;/code&gt;&amp;rsquo; comment lines in language files. Using this option makes it harder for technically skilled translators to understand each message&amp;rsquo;s context.</source>
          <target state="translated">言語ファイルの' &lt;code&gt;#: filename:line&lt;/code&gt; 'コメント行の書き込みを抑制します。このオプションを使用すると、技術的なスキルを持つ翻訳者が各メッセージのコンテキストを理解することが難しくなります。</target>
        </trans-unit>
        <trans-unit id="9a4bdcd9c81927fdbcfdf37ea974fafdcd6320d5" translate="yes" xml:space="preserve">
          <source>Switching language in templates</source>
          <target state="translated">テンプレートで言語を切り替える</target>
        </trans-unit>
        <trans-unit id="50109e8663c4559272b873c515087a9b7e816ee9" translate="yes" xml:space="preserve">
          <source>Switching to another database backend. At a certain point SQLite becomes too &amp;ldquo;lite&amp;rdquo; for real-world applications, and these sorts of concurrency errors indicate you&amp;rsquo;ve reached that point.</source>
          <target state="translated">別のデータベースバックエンドに切り替えます。ある時点で、SQLiteは実際のアプリケーションでは「ライト」になりすぎます。この種の同時実行エラーは、その時点に到達したことを示しています。</target>
        </trans-unit>
        <trans-unit id="2379d0a4e286f32090f139f1c2d5d244f32bf44a" translate="yes" xml:space="preserve">
          <source>Switzerland (German)</source>
          <target state="translated">スイス</target>
        </trans-unit>
        <trans-unit id="ec8d7db43aeddf9ec631edd2c6a8c1dcb701b9c0" translate="yes" xml:space="preserve">
          <source>Sync functions tend to be written assuming they all run in the main thread, so &lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt;&lt;code&gt;sync_to_async()&lt;/code&gt;&lt;/a&gt; has two threading modes:</source>
          <target state="translated">同期関数は、すべてメインスレッドで実行されると想定して記述される傾向があるため、&lt;a href=&quot;#asgiref.sync.sync_to_async&quot;&gt; &lt;code&gt;sync_to_async()&lt;/code&gt; に&lt;/a&gt;は2つのスレッドモードがあります。</target>
        </trans-unit>
        <trans-unit id="00065594c7228bd19c1b7ee623c8e3ce49c2ffa0" translate="yes" xml:space="preserve">
          <source>Synchronizes the database state with the current set of models and migrations. Migrations, their relationship with apps and more are covered in depth in &lt;a href=&quot;../topics/migrations&quot;&gt;the migrations documentation&lt;/a&gt;.</source>
          <target state="translated">データベースの状態を現在のモデルと移行のセットと同期します。移行、アプリとの関係などについては&lt;a href=&quot;../topics/migrations&quot;&gt;、移行のドキュメント&lt;/a&gt;で詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="38a8010f64d5599164ae371796a865cce9ca670f" translate="yes" xml:space="preserve">
          <source>Synchronizing your databases</source>
          <target state="translated">データベースの同期化</target>
        </trans-unit>
        <trans-unit id="175d4ce98df6f28483bb30a64e8ebbeebb41943d" translate="yes" xml:space="preserve">
          <source>Syndication feeds (RSS/Atom)</source>
          <target state="translated">シンジケーションフィード(RSS/Atom</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="e9ffe4e6d9f053f0a17fa96bbf4ba07178030465" translate="yes" xml:space="preserve">
          <source>Syntax coloring</source>
          <target state="translated">シンタックスカラーリング</target>
        </trans-unit>
        <trans-unit id="f3f6f77ce0df4f07a260813db5935a76e8cae2d4" translate="yes" xml:space="preserve">
          <source>Syntax of the &lt;code&gt;urlpatterns&lt;/code&gt; variable</source>
          <target state="translated">&lt;code&gt;urlpatterns&lt;/code&gt; 変数の構文</target>
        </trans-unit>
        <trans-unit id="aa98ba039441a09bbd5eacca40ae266b04b91ccd" translate="yes" xml:space="preserve">
          <source>System check framework</source>
          <target state="translated">システムチェックフレームワーク</target>
        </trans-unit>
        <trans-unit id="cdcf532ac8bec837e8835ecab27f3cd87f17d118" translate="yes" xml:space="preserve">
          <source>TEMPLATES</source>
          <target state="translated">TEMPLATES</target>
        </trans-unit>
        <trans-unit id="8e2aa60817a7263a0b4974318b101f20823f482e" translate="yes" xml:space="preserve">
          <source>Table name quoting for Oracle</source>
          <target state="translated">オラクルのテーブル名の引用</target>
        </trans-unit>
        <trans-unit id="b76d55fc89e815be76269a01255c85581f68714c" translate="yes" xml:space="preserve">
          <source>Table names</source>
          <target state="translated">テーブル名</target>
        </trans-unit>
        <trans-unit id="b1f3f5d18e18715cfca8bf0aaef8d2d81fdf3063" translate="yes" xml:space="preserve">
          <source>Table names are automatically generated by combining the name of the app (&lt;code&gt;polls&lt;/code&gt;) and the lowercase name of the model &amp;ndash; &lt;code&gt;question&lt;/code&gt; and &lt;code&gt;choice&lt;/code&gt;. (You can override this behavior.)</source>
          <target state="translated">テーブル名は、アプリの名前（ &lt;code&gt;polls&lt;/code&gt; ）とモデルの小文字の名前（ &lt;code&gt;question&lt;/code&gt; と &lt;code&gt;choice&lt;/code&gt; ）を組み合わせて自動的に生成されます。（この動作はオーバーライドできます。）</target>
        </trans-unit>
        <trans-unit id="ff5b9ddf2dd81525ac5b0fb5fcd732fc5c174692" translate="yes" xml:space="preserve">
          <source>Tablespaces</source>
          <target state="translated">Tablespaces</target>
        </trans-unit>
        <trans-unit id="982963c1c41cbed8cab073724749592fe35c532b" translate="yes" xml:space="preserve">
          <source>Tag</source>
          <target state="translated">Tag</target>
        </trans-unit>
        <trans-unit id="f7fe4cb5179d77ce0ec4f4db1fa1fab652691e69" translate="yes" xml:space="preserve">
          <source>Tagging tests</source>
          <target state="translated">タギングテスト</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="7c3bfddeb3549c2531c880fed0b852bebd802527" translate="yes" xml:space="preserve">
          <source>Tags and filters from built-in libraries can be used without first calling the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">組み込みライブラリのタグとフィルタは、最初に&lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt; &lt;code&gt;{% load %}&lt;/code&gt; &lt;/a&gt;タグを呼び出さなくても使用できます。</target>
        </trans-unit>
        <trans-unit id="8d4d3be07ce9fd4a171e28067e2660cb089ff5e5" translate="yes" xml:space="preserve">
          <source>Tags and filters from built-in libraries can be used without first calling the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="translated">組み込みライブラリのタグとフィルタは、最初に&lt;a href=&quot;builtins#std:templatetag-load&quot;&gt; &lt;code&gt;{% load %}&lt;/code&gt; &lt;/a&gt;タグを呼び出さなくても使用できます。</target>
        </trans-unit>
        <trans-unit id="0cf8e113e4c51396f927e3d31dbb96dcc5b9ef76" translate="yes" xml:space="preserve">
          <source>Tags are more complex than filters, because tags can do anything. Django provides a number of shortcuts that make writing most types of tags easier. First we&amp;rsquo;ll explore those shortcuts, then explain how to write a tag from scratch for those cases when the shortcuts aren&amp;rsquo;t powerful enough.</source>
          <target state="translated">タグは何でもできるため、タグはフィルターよりも複雑です。Djangoは、ほとんどのタイプのタグを簡単に作成できるようにする多くのショートカットを提供します。最初にそれらのショートカットを探索し、次にショートカットが十分に強力でない場合のために一からタグを書く方法を説明します。</target>
        </trans-unit>
        <trans-unit id="ed1e439784d27f3c08c2bef976fea5a0afd4e4da" translate="yes" xml:space="preserve">
          <source>Tags are surrounded by &lt;code&gt;{%&lt;/code&gt; and &lt;code&gt;%}&lt;/code&gt; like this:</source>
          <target state="translated">タグは次のように &lt;code&gt;{%&lt;/code&gt; および &lt;code&gt;%}&lt;/code&gt; で囲まれています。</target>
        </trans-unit>
        <trans-unit id="ac5d91c5febf69739b24c08f67bad4993c7c13d0" translate="yes" xml:space="preserve">
          <source>Tags look like this: &lt;code&gt;{% tag %}&lt;/code&gt;. Tags are more complex than variables: Some create text in the output, some control flow by performing loops or logic, and some load external information into the template to be used by later variables.</source>
          <target state="translated">タグは次のようになります： &lt;code&gt;{% tag %}&lt;/code&gt; 。タグは変数よりも複雑です。出力にテキストを作成するもの、ループまたはロジックを実行して制御フローを作成するもの、外部情報をテンプレートにロードして後の変数で使用するものなどがあります。</target>
        </trans-unit>
        <trans-unit id="dc90860252a4e1f64d21cd685b1c5f06893b7a4b" translate="yes" xml:space="preserve">
          <source>Tags provide arbitrary logic in the rendering process.</source>
          <target state="translated">タグは、レンダリングプロセスで任意のロジックを提供します。</target>
        </trans-unit>
        <trans-unit id="b87cf5eff2f4f56cec19fc3303368fa96684ba61" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;https://docs.python.org/3/tutorial/venv.html&quot;&gt;venv&lt;/a&gt;. This tool provides isolated Python environments, which are more practical than installing packages systemwide. It also allows installing packages without administrator privileges. The &lt;a href=&quot;../intro/contributing&quot;&gt;contributing tutorial&lt;/a&gt; walks through how to create a virtual environment.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/tutorial/venv.html&quot;&gt;venvを&lt;/a&gt;見てください。このツールは、システム全体にパッケージをインストールするよりも実用的な、分離されたPython環境を提供します。また、管理者権限なしでパッケージをインストールすることもできます。&lt;a href=&quot;../intro/contributing&quot;&gt;貢献チュートリアルでは、&lt;/a&gt;仮想環境を作成する方法をウォークスルー。</target>
        </trans-unit>
        <trans-unit id="b65d13c8fdc902282ebd08b7480b7e90e1642741" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt; and &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt;. These tools provide isolated Python environments, which are more practical than installing packages systemwide. They also allow installing packages without administrator privileges. The &lt;a href=&quot;../intro/contributing&quot;&gt;contributing tutorial&lt;/a&gt; walks through how to create a virtualenv.</source>
          <target state="translated">&lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt;と&lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapperを&lt;/a&gt;見てください。これらのツールは、システム全体にパッケージをインストールするよりも実用的な分離されたPython環境を提供します。また、管理者権限なしでパッケージをインストールすることもできます。&lt;a href=&quot;../intro/contributing&quot;&gt;貢献チュートリアルでは&lt;/a&gt; virtualenvの作成方法をウォークスルー。</target>
        </trans-unit>
        <trans-unit id="eef266a5e0785b16e209941ce7a2619f358aedac" translate="yes" xml:space="preserve">
          <source>Take a look at the Open Web Application Security Project (OWASP) &lt;a href=&quot;https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/&quot;&gt;Top 10 list&lt;/a&gt; which identifies some common vulnerabilities in web applications. While Django has tools to address some of the issues, other issues must be accounted for in the design of your project.</source>
          <target state="translated">Webアプリケーションの一般的な脆弱性を特定するOpenWeb Application Security Project（OWASP）の&lt;a href=&quot;https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/&quot;&gt;トップ10リスト&lt;/a&gt;をご覧ください。Djangoにはいくつかの問題に対処するためのツールがありますが、プロジェクトの設計では他の問題を考慮する必要があります。</target>
        </trans-unit>
        <trans-unit id="a4faec5f0e219f4fc22e2e2f7caf14dc2730bd45" translate="yes" xml:space="preserve">
          <source>Take a look at the Open Web Application Security Project (OWASP) &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_Top_10&quot;&gt;Top 10 list&lt;/a&gt; which identifies some common vulnerabilities in web applications. While Django has tools to address some of the issues, other issues must be accounted for in the design of your project.</source>
          <target state="translated">Open Web Application Security Project（OWASP）の&lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_Top_10&quot;&gt;トップ10リスト&lt;/a&gt;をご覧ください。このリストには、Webアプリケーションの一般的な脆弱性がいくつか示されています。Djangoにはいくつかの問題に対処するためのツールがありますが、プロジェクトの設計では他の問題も考慮する必要があります。</target>
        </trans-unit>
        <trans-unit id="0b6294a1321c911bfb38483cba894223ac9e435c" translate="yes" xml:space="preserve">
          <source>Take a look in your browser, at &amp;ldquo;/polls/34/&amp;rdquo;. It&amp;rsquo;ll run the &lt;code&gt;detail()&lt;/code&gt; method and display whatever ID you provide in the URL. Try &amp;ldquo;/polls/34/results/&amp;rdquo; and &amp;ldquo;/polls/34/vote/&amp;rdquo; too &amp;ndash; these will display the placeholder results and voting pages.</source>
          <target state="translated">ブラウザの「/ polls / 34 /」を見てください。これは、 &lt;code&gt;detail()&lt;/code&gt; メソッドを実行し、URLで指定したIDを表示します。「/ polls / 34 / results /」と「/ polls / 34 / vote /」も試してください。これらはプレースホルダーの結果と投票ページを表示します。</target>
        </trans-unit>
        <trans-unit id="8d019029719dc60edf4660a8b6eb87c5b5912ddf" translate="yes" xml:space="preserve">
          <source>Take care with any &lt;a href=&quot;../ref/models/fields#file-upload-security&quot;&gt;user uploaded files&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/models/fields#file-upload-security&quot;&gt;ユーザーがアップロードしたファイルには&lt;/a&gt;注意してください。</target>
        </trans-unit>
        <trans-unit id="191fc7c119ac28233aad3cc77d7c63f0416f8009" translate="yes" xml:space="preserve">
          <source>Take no action. If your database backend enforces referential integrity, this will cause an &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt; unless you manually add an SQL &lt;code&gt;ON DELETE&lt;/code&gt; constraint to the database field.</source>
          <target state="translated">何もするな。データベースバックエンドが参照整合性を適用する場合、SQL &lt;code&gt;ON DELETE&lt;/code&gt; 制約をデータベースフィールドに手動で追加しない限り、これにより&lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="f66262efd388801bee844148c0ce1d9b7a3e60b3" translate="yes" xml:space="preserve">
          <source>Take the following examples:</source>
          <target state="translated">以下の例を参考にしてください。</target>
        </trans-unit>
        <trans-unit id="b94d65a923911eebf16ede6b0fef0fa3840270cd" translate="yes" xml:space="preserve">
          <source>Taken together, these views provide interfaces to perform the most common tasks developers encounter.</source>
          <target state="translated">これらのビューは、開発者が遭遇する最も一般的なタスクを実行するためのインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="ebe10636e4e70a5eb624d50bcf55958f7401fe06" translate="yes" xml:space="preserve">
          <source>Takes &lt;code&gt;request&lt;/code&gt; as its first positional argument, which is stored on the form instance for use by sub-classes.</source>
          <target state="translated">サブクラスで使用するためにフォームインスタンスに格納される最初の位置引数として &lt;code&gt;request&lt;/code&gt; を受け取ります。</target>
        </trans-unit>
        <trans-unit id="cdf8f600e1883c0bd723b884b10c6801c5305d85" translate="yes" xml:space="preserve">
          <source>Takes a URI in ASCII bytes and returns a string containing the encoded result.</source>
          <target state="translated">URIをASCIIバイトで受け取り、エンコードされた結果を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="45c05e38a3969bc67faad8c6d523e7e1f9e517f3" translate="yes" xml:space="preserve">
          <source>Takes a list of dictionaries and returns that list sorted by the key given in the argument.</source>
          <target state="translated">辞書のリストを受け取り、引数で与えられたキーでソートされたリストを返します。</target>
        </trans-unit>
        <trans-unit id="4fcc46eddee03c18098e6d160eca2f8008c60b1a" translate="yes" xml:space="preserve">
          <source>Takes a list of dictionaries and returns that list sorted in reverse order by the key given in the argument. This works exactly the same as the above filter, but the returned value will be in reverse order.</source>
          <target state="translated">辞書のリストを受け取り、引数で与えられたキーで逆順に並べたリストを返します。これは上のフィルタとまったく同じ動作をしますが、 返される値は逆順になります。</target>
        </trans-unit>
        <trans-unit id="4fbbaede70e8d2c6ed298781e7dad342da2445f6" translate="yes" xml:space="preserve">
          <source>Takes a list of expressions and stores them such that &lt;code&gt;get_source_expressions()&lt;/code&gt; can return them.</source>
          <target state="translated">式のリストを &lt;code&gt;get_source_expressions()&lt;/code&gt; 、get_source_expressions（）がそれらを返すことができるようにそれらを格納します。</target>
        </trans-unit>
        <trans-unit id="0772fc4149778cd71fa4898784aa9e5cf303f431" translate="yes" xml:space="preserve">
          <source>Takes a list of field values (&lt;code&gt;id_list&lt;/code&gt;) and the &lt;code&gt;field_name&lt;/code&gt; for those values, and returns a dictionary mapping each value to an instance of the object with the given field value. If &lt;code&gt;id_list&lt;/code&gt; isn&amp;rsquo;t provided, all objects in the queryset are returned. &lt;code&gt;field_name&lt;/code&gt; must be a unique field, and it defaults to the primary key.</source>
          <target state="translated">フィールド値のリスト（ &lt;code&gt;id_list&lt;/code&gt; ）とそれらの値の &lt;code&gt;field_name&lt;/code&gt; を取得し、各値を、指定されたフィールド値を持つオブジェクトのインスタンスにマッピングする辞書を返します。 &lt;code&gt;id_list&lt;/code&gt; が指定されていない場合、クエリセット内のすべてのオブジェクトが返されます。 &lt;code&gt;field_name&lt;/code&gt; は一意のフィールドである必要があり、デフォルトで主キーになります。</target>
        </trans-unit>
        <trans-unit id="0d008c0090616a0ba91686c3c083c7576d94eac1" translate="yes" xml:space="preserve">
          <source>Takes a list of valid values and returns a &amp;ldquo;compressed&amp;rdquo; version of those values &amp;ndash; in a single value. For example, &lt;a href=&quot;#django.forms.SplitDateTimeField&quot;&gt;&lt;code&gt;SplitDateTimeField&lt;/code&gt;&lt;/a&gt; is a subclass which combines a time field and a date field into a &lt;code&gt;datetime&lt;/code&gt; object.</source>
          <target state="translated">有効な値のリストを受け取り、それらの値の「圧縮」バージョンを単一の値で返します。たとえば、&lt;a href=&quot;#django.forms.SplitDateTimeField&quot;&gt; &lt;code&gt;SplitDateTimeField&lt;/code&gt; &lt;/a&gt;は、時刻フィールドと日付フィールドを組み合わせて &lt;code&gt;datetime&lt;/code&gt; オブジェクトにするサブクラスです。</target>
        </trans-unit>
        <trans-unit id="7419d8c59a8aced5be5a7d4acd033a9525bd7452" translate="yes" xml:space="preserve">
          <source>Takes a raw SQL query, executes it, and returns a &lt;code&gt;django.db.models.query.RawQuerySet&lt;/code&gt; instance. This &lt;code&gt;RawQuerySet&lt;/code&gt; instance can be iterated over just like a normal &lt;code&gt;QuerySet&lt;/code&gt; to provide object instances.</source>
          <target state="translated">生のSQLクエリを &lt;code&gt;django.db.models.query.RawQuerySet&lt;/code&gt; 実行し、django.db.models.query.RawQuerySetインスタンスを返します。この &lt;code&gt;RawQuerySet&lt;/code&gt; のインスタンスは、通常のように巡回できない &lt;code&gt;QuerySet&lt;/code&gt; オブジェクトのインスタンスを提供します。</target>
        </trans-unit>
        <trans-unit id="f5d019ff8451d64f492cbb17f3d499a07d7b1d22" translate="yes" xml:space="preserve">
          <source>Takes a set of valid &lt;a href=&quot;../../topics/db/queries#field-lookups-intro&quot;&gt;lookup arguments&lt;/a&gt; for the model the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; represents, and does &lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;a get() lookup&lt;/code&gt;&lt;/a&gt; on that model, returning the corresponding object.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; が&lt;/a&gt;表すモデルの有効な&lt;a href=&quot;../../topics/db/queries#field-lookups-intro&quot;&gt;ルックアップ引数の&lt;/a&gt;セットを&lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;a get() lookup&lt;/code&gt; &lt;/a&gt;し、そのモデルでget（）ルックアップを実行して、対応するオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="6643458700ae6aef4b4449b082a1e8d9f73c821e" translate="yes" xml:space="preserve">
          <source>Takes a single &amp;ldquo;compressed&amp;rdquo; value of a field, for example a &lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt;&lt;code&gt;DateRangeField&lt;/code&gt;&lt;/a&gt;, and returns a tuple representing a lower and upper bound.</source>
          <target state="translated">たとえば&lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt; &lt;code&gt;DateRangeField&lt;/code&gt; &lt;/a&gt;など、フィールドの単一の「圧縮された」値を取得し、下限と上限を表すタプルを返します。</target>
        </trans-unit>
        <trans-unit id="c142e1735e7935ff6dddc231c2aafe4d90365183" translate="yes" xml:space="preserve">
          <source>Takes a single &amp;ldquo;compressed&amp;rdquo; value of a field, for example a &lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt;&lt;code&gt;DateRangeField&lt;/code&gt;&lt;/a&gt;, and returns a tuple representing and lower and upper bound.</source>
          <target state="translated">たとえば&lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt; &lt;code&gt;DateRangeField&lt;/code&gt; &lt;/a&gt;など、フィールドの単一の「圧縮」値を取り、下限と上限を表すタプルを返します。</target>
        </trans-unit>
        <trans-unit id="752c4fd591d271a39a480a0838d69e5be216f9e8" translate="yes" xml:space="preserve">
          <source>Takes a sync function and returns an async function that wraps it. Can be used as either a direct wrapper or a decorator:</source>
          <target state="translated">同期関数を受け取り、それをラップした非同期関数を返します。直接のラッパーとしてもデコレータとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="30ed7078b176cb4bea35270c3a1eefa335556b3b" translate="yes" xml:space="preserve">
          <source>Takes a variadic number of model classes, and returns a dictionary mapping the model classes to the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instances representing them. &lt;code&gt;for_concrete_models=False&lt;/code&gt; allows fetching the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; of proxy models.</source>
          <target state="translated">可変数のモデルクラスを受け取り、モデルクラスを表す&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;インスタンスにモデルクラスをマッピングする辞書を返します。 &lt;code&gt;for_concrete_models=False&lt;/code&gt; を使用すると、プロキシモデルの&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;をフェッチできます。</target>
        </trans-unit>
        <trans-unit id="505a3fd6681ea65d8ffba8c7322b5d052e91991a" translate="yes" xml:space="preserve">
          <source>Takes an &lt;code&gt;expression&lt;/code&gt; representing a &lt;code&gt;DateField&lt;/code&gt;, &lt;code&gt;DateTimeField&lt;/code&gt;, &lt;code&gt;TimeField&lt;/code&gt;, or &lt;code&gt;DurationField&lt;/code&gt; and a &lt;code&gt;lookup_name&lt;/code&gt;, and returns the part of the date referenced by &lt;code&gt;lookup_name&lt;/code&gt; as an &lt;code&gt;IntegerField&lt;/code&gt;. Django usually uses the databases&amp;rsquo; extract function, so you may use any &lt;code&gt;lookup_name&lt;/code&gt; that your database supports. A &lt;code&gt;tzinfo&lt;/code&gt; subclass, usually provided by &lt;code&gt;pytz&lt;/code&gt;, can be passed to extract a value in a specific timezone.</source>
          <target state="translated">かかる &lt;code&gt;expression&lt;/code&gt; 表す &lt;code&gt;DateField&lt;/code&gt; 、 &lt;code&gt;DateTimeField&lt;/code&gt; 型、 &lt;code&gt;TimeField&lt;/code&gt; 、又は &lt;code&gt;DurationField&lt;/code&gt; と &lt;code&gt;lookup_name&lt;/code&gt; を、およびで参照日付の一部返し &lt;code&gt;lookup_name&lt;/code&gt; として &lt;code&gt;IntegerField&lt;/code&gt; とします。 Djangoは通常、データベースの抽出関数を使用するため、データベースがサポートする任意の &lt;code&gt;lookup_name&lt;/code&gt; を使用できます。 &lt;code&gt;tzinfo&lt;/code&gt; のが通常によって提供サブクラス、 &lt;code&gt;pytz&lt;/code&gt; は、特定のタイムゾーンの値を抽出するために渡すことができます。</target>
        </trans-unit>
        <trans-unit id="245870f1389bd9da9e034ecec14be4f9d3c4cf6a" translate="yes" xml:space="preserve">
          <source>Takes an IRI (string or UTF-8 bytes) and returns a string containing the encoded result.</source>
          <target state="translated">IRI(文字列またはUTF-8バイト)を受け取り、エンコードされた結果を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="8671880447afb073cc4cb188d3b9f114dad78c3d" translate="yes" xml:space="preserve">
          <source>Takes an async function and returns a sync function that wraps it. Can be used as either a direct wrapper or a decorator:</source>
          <target state="translated">非同期関数を受け取り、それをラップした同期関数を返します。直接のラッパーとしてもデコレータとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="cc3004275b133f125d6531613f3f026744487bbf" translate="yes" xml:space="preserve">
          <source>Takes an instance of &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; and the name of the field. The return value will be used when accessing the field in a template. Most likely it will be an instance of a subclass of &lt;a href=&quot;#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;のインスタンスとフィールドの名前を受け取ります。戻り値は、テンプレートのフィールドにアクセスするときに使用されます。ほとんどの場合、それは&lt;a href=&quot;#django.forms.BoundField&quot;&gt; &lt;code&gt;BoundField&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスになります。</target>
        </trans-unit>
        <trans-unit id="0d3a8786c79fc01b6128106748b4687d1f9b0782" translate="yes" xml:space="preserve">
          <source>Takes an integer value representing the day of the week from 1 (Monday) to 7 (Sunday).</source>
          <target state="translated">1 (月曜日)から 7 (日曜日)までの曜日を表す整数値を取ります。</target>
        </trans-unit>
        <trans-unit id="ce6380a827a9d575613b46bbcee1f6db0a03fb1a" translate="yes" xml:space="preserve">
          <source>Takes an integer value representing the day of week from 1 (Sunday) to 7 (Saturday).</source>
          <target state="translated">1(日)から7(土)までの曜日を表す整数値を取ります。</target>
        </trans-unit>
        <trans-unit id="0f0069ac37a50df7f0a013b4b27a33abe9a00e60" translate="yes" xml:space="preserve">
          <source>Takes an optional argument that is a variable containing the date to use as the comparison point (instead of &lt;em&gt;now&lt;/em&gt;). If &lt;code&gt;from_date&lt;/code&gt; contains 22 June 2006, then the following will return &amp;ldquo;1 week&amp;rdquo;:</source>
          <target state="translated">（&lt;em&gt;now&lt;/em&gt;ではなく）比較ポイントとして使用する日付を含む変数であるオプションの引数を取ります。 &lt;code&gt;from_date&lt;/code&gt; に2006年6月22日が含まれている場合、以下は「1週間」を返します。</target>
        </trans-unit>
        <trans-unit id="3cef8bba1ccc6cbfd938895cba722338e9153756" translate="yes" xml:space="preserve">
          <source>Takes an optional argument that is a variable containing the date to use as the comparison point (without the argument, the comparison point is &lt;em&gt;now&lt;/em&gt;). For example, if &lt;code&gt;blog_date&lt;/code&gt; is a date instance representing midnight on 1 June 2006, and &lt;code&gt;comment_date&lt;/code&gt; is a date instance for 08:00 on 1 June 2006, then the following would return &amp;ldquo;8 hours&amp;rdquo;:</source>
          <target state="translated">比較ポイントとして使用する日付を含む変数であるオプションの引数を取ります（引数がない場合、比較ポイントはになり&lt;em&gt;ます&lt;/em&gt;）。たとえば、 &lt;code&gt;blog_date&lt;/code&gt; が2006年6月1日の午前0時を表す日付インスタンスであり、 &lt;code&gt;comment_date&lt;/code&gt; が2006年6月1日の08:00の日付インスタンスである場合、次は「8時間」を返します。</target>
        </trans-unit>
        <trans-unit id="39ed1c0e05d4f8f576e6b5df26f1a3950f9494fa" translate="yes" xml:space="preserve">
          <source>Takes an optional parameter:</source>
          <target state="translated">オプションのパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="8a62fc3414ff9705f2873fea34271b19b2b102ad" translate="yes" xml:space="preserve">
          <source>Takes either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, which correspond to SQL queries of &lt;code&gt;IS NULL&lt;/code&gt; and &lt;code&gt;IS NOT NULL&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;IS NULL&lt;/code&gt; および &lt;code&gt;IS NOT NULL&lt;/code&gt; の SQLクエリにそれぞれ対応する &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; を取ります。</target>
        </trans-unit>
        <trans-unit id="8bfbc1249983c45c2299b3046840a38d798bbcb5" translate="yes" xml:space="preserve">
          <source>Takes either a &lt;code&gt;QueryDict&lt;/code&gt; or a dictionary. Like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt;, except it &lt;em&gt;appends&lt;/em&gt; to the current dictionary items rather than replacing them. For example:</source>
          <target state="translated">&lt;code&gt;QueryDict&lt;/code&gt; または辞書のいずれかを取ります。&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt;と同様ですが、現在のディクショナリ項目を置き換えるのではなく、&lt;em&gt;追加&lt;/em&gt;する点が異なります。例えば：</target>
        </trans-unit>
        <trans-unit id="7218393cd985e921c1c82534bbd52d1a6a83ffb9" translate="yes" xml:space="preserve">
          <source>Takes either a model class or an instance of a model, and returns the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instance representing that model. &lt;code&gt;for_concrete_model=False&lt;/code&gt; allows fetching the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; of a proxy model.</source>
          <target state="translated">モデルクラスまたはモデルのインスタンスを&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;、そのモデルを表すContentTypeインスタンスを返します。 &lt;code&gt;for_concrete_model=False&lt;/code&gt; を使用すると、プロキシモデルの&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;をフェッチできます。</target>
        </trans-unit>
        <trans-unit id="21b3736f83090aa055c0337fb2baadaba089837e" translate="yes" xml:space="preserve">
          <source>Takes extra arguments:</source>
          <target state="translated">余分な引数を取ります。</target>
        </trans-unit>
        <trans-unit id="4bf8e0548f45c96f56b8769d4835546d28c82775" translate="yes" xml:space="preserve">
          <source>Takes four optional arguments:</source>
          <target state="translated">4つのオプションの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="0f14b8de543ac30132d25179d65b567705d0a76a" translate="yes" xml:space="preserve">
          <source>Takes one extra argument:</source>
          <target state="translated">1つの余分な引数を取ります。</target>
        </trans-unit>
        <trans-unit id="321aa30338bb8bf0f59c48270355b07b1053e09b" translate="yes" xml:space="preserve">
          <source>Takes one extra required argument, &lt;code&gt;choices&lt;/code&gt;, as for &lt;a href=&quot;#django.forms.ChoiceField&quot;&gt;&lt;code&gt;ChoiceField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.forms.ChoiceField&quot;&gt; &lt;code&gt;ChoiceField&lt;/code&gt; の&lt;/a&gt;場合と同様に、1つの追加の必須引数 &lt;code&gt;choices&lt;/code&gt; を取ります。</target>
        </trans-unit>
        <trans-unit id="650c7950ea6a2401c787901f18b8f2e94f374fb7" translate="yes" xml:space="preserve">
          <source>Takes one extra required argument:</source>
          <target state="translated">必要な引数を1つ余分に取ります。</target>
        </trans-unit>
        <trans-unit id="84f66680d9d77c696dd1378c37850e0576e4aa67" translate="yes" xml:space="preserve">
          <source>Takes one optional argument:</source>
          <target state="translated">オプションの引数を1つ取ります。</target>
        </trans-unit>
        <trans-unit id="3b5f3b3f2b6ea232f73220192ff4ff00fce37a45" translate="yes" xml:space="preserve">
          <source>Takes one required argument:</source>
          <target state="translated">必要な引数を1つ取ります。</target>
        </trans-unit>
        <trans-unit id="04daa827f5193f9b9854fa1f430af5c42f31c427" translate="yes" xml:space="preserve">
          <source>Takes same arguments as &lt;a href=&quot;#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;, with one more optional argument:</source>
          <target state="translated">&lt;a href=&quot;#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;と同じ引数を取り、オプションの引数をもう1つ追加します。</target>
        </trans-unit>
        <trans-unit id="0656ede68eb556db5d234f7a75a23d80bdfb1091" translate="yes" xml:space="preserve">
          <source>Takes several optional arguments:</source>
          <target state="translated">いくつかのオプションの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="2be25f7140cc5d2a971e13110785f791f9f70df3" translate="yes" xml:space="preserve">
          <source>Takes the &lt;code&gt;user&lt;/code&gt; as the first positional argument.</source>
          <target state="translated">最初の位置引数として &lt;code&gt;user&lt;/code&gt; を取ります。</target>
        </trans-unit>
        <trans-unit id="9f5424a9095c6735126a0b7bf4ef95f3655b2e02" translate="yes" xml:space="preserve">
          <source>Takes the following optional arguments:</source>
          <target state="translated">以下のオプションの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="e63ba5f2f2be04d40eb23c4f4113adb89498890b" translate="yes" xml:space="preserve">
          <source>Takes the object returned by &lt;code&gt;get_object()&lt;/code&gt; and returns the &lt;em&gt;feed&amp;rsquo;s&lt;/em&gt; geometry. Typically this is a &lt;code&gt;GEOSGeometry&lt;/code&gt; instance, or can be a tuple to represent a point or a box. For example:</source>
          <target state="translated">&lt;code&gt;get_object()&lt;/code&gt; によって返されたオブジェクトを受け取り、&lt;em&gt;フィードの&lt;/em&gt;ジオメトリを返します。通常、これは &lt;code&gt;GEOSGeometry&lt;/code&gt; インスタンスであるか、ポイントまたはボックスを表すタプルにすることができます。例えば：</target>
        </trans-unit>
        <trans-unit id="cbdc2eaefea783dd7d355fbfaaec35b90ed521b1" translate="yes" xml:space="preserve">
          <source>Takes two extra arguments, &lt;code&gt;coerce&lt;/code&gt; and &lt;code&gt;empty_value&lt;/code&gt;, as for &lt;a href=&quot;#django.forms.TypedChoiceField&quot;&gt;&lt;code&gt;TypedChoiceField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの追加の引数、取り &lt;code&gt;coerce&lt;/code&gt; や &lt;code&gt;empty_value&lt;/code&gt; のためとして、&lt;a href=&quot;#django.forms.TypedChoiceField&quot;&gt; &lt;code&gt;TypedChoiceField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e9b2e3c0b8b7c322151289fa866294c36904c47" translate="yes" xml:space="preserve">
          <source>Takes two optional arguments for validation, &lt;code&gt;max_value&lt;/code&gt; and &lt;code&gt;min_value&lt;/code&gt;. These control the range of values permitted in the field.</source>
          <target state="translated">検証のために2つのオプションの引数、 &lt;code&gt;max_value&lt;/code&gt; と &lt;code&gt;min_value&lt;/code&gt; を取ります。これらは、フィールドで許可される値の範囲を制御します。</target>
        </trans-unit>
        <trans-unit id="100c4e7181d3c6b555d4f733684d380b0f1ebdb8" translate="yes" xml:space="preserve">
          <source>Takes two optional arguments for validation:</source>
          <target state="translated">検証のための2つのオプションの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="1d66a9e2de3cdba016edc3d652c9fef0578a91f9" translate="yes" xml:space="preserve">
          <source>Takes two optional arguments:</source>
          <target state="translated">2つのオプションの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="f52b15975746d98bb5f7cc27294650be8fad6530" translate="yes" xml:space="preserve">
          <source>Takes two optional parameters:</source>
          <target state="translated">2つのオプションのパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="a0d3062aaa21504f429afb4b4225dbbf3f7da854" translate="yes" xml:space="preserve">
          <source>Takes two required arguments: &lt;code&gt;name&lt;/code&gt; which is the name of the file, and &lt;code&gt;content&lt;/code&gt; which is an object containing the file&amp;rsquo;s contents. The optional &lt;code&gt;save&lt;/code&gt; argument controls whether or not the model instance is saved after the file associated with this field has been altered. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">2つの必須の引数を取ります。 &lt;code&gt;name&lt;/code&gt; のファイルの名前、およびある &lt;code&gt;content&lt;/code&gt; ファイルの内容を含むオブジェクトです。オプションの &lt;code&gt;save&lt;/code&gt; 引数は、このフィールドに関連付けられたファイルが変更された後にモデルインスタンスを保存するかどうかを制御します。デフォルトは &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="92a112afd1dc67ec8b3ed4ddfd9176d3e694f6b6" translate="yes" xml:space="preserve">
          <source>Taking PBKDF2 as example, if &lt;code&gt;encoded&lt;/code&gt; contains 20,000 iterations and the hasher&amp;rsquo;s default &lt;code&gt;iterations&lt;/code&gt; is 30,000, the method should run &lt;code&gt;password&lt;/code&gt; through another 10,000 iterations of PBKDF2.</source>
          <target state="translated">PBKDF2を例にとると、 &lt;code&gt;encoded&lt;/code&gt; に20,000回の反復が含まれ、ハッシャーのデフォルトの &lt;code&gt;iterations&lt;/code&gt; が30,000 回である場合、メソッドはPBKDF2の別の10,000回の反復を通じて &lt;code&gt;password&lt;/code&gt; を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="e5d778426248899286cd4912493a7e582a2d9607" translate="yes" xml:space="preserve">
          <source>Taking a closer look at the implementation, the first required attribute is &lt;code&gt;lookup_name&lt;/code&gt;. This allows the ORM to understand how to interpret &lt;code&gt;name__ne&lt;/code&gt; and use &lt;code&gt;NotEqual&lt;/code&gt; to generate the SQL. By convention, these names are always lowercase strings containing only letters, but the only hard requirement is that it must not contain the string &lt;code&gt;__&lt;/code&gt;.</source>
          <target state="translated">実装を詳しく見てみると、最初に必要な属性は &lt;code&gt;lookup_name&lt;/code&gt; です。これは、ORMが解釈する方法を理解することができます &lt;code&gt;name__ne&lt;/code&gt; をし、使用 &lt;code&gt;NotEqual&lt;/code&gt; SQLを生成します。慣例により、これらの名前は常に文字のみを含む小文字の文字列ですが、唯一の難しい要件は、文字列 &lt;code&gt;__&lt;/code&gt; を含めないことです。</target>
        </trans-unit>
        <trans-unit id="8d2e85de9cb4375cec8e7adc7a55781656f283ab" translate="yes" xml:space="preserve">
          <source>Taking care in &lt;code&gt;get_absolute_url()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;get_absolute_url()&lt;/code&gt; に注意する</target>
        </trans-unit>
        <trans-unit id="73047412313ab9e8d476860fb3b307189c059c83" translate="yes" xml:space="preserve">
          <source>Technical Information</source>
          <target state="translated">技術情報</target>
        </trans-unit>
        <trans-unit id="4be37be90bfccb09eab627d2a5d3f9b1c85287e5" translate="yes" xml:space="preserve">
          <source>Technical details</source>
          <target state="translated">技術的な詳細</target>
        </trans-unit>
        <trans-unit id="d4f71867f00e589bc7de57848f25b9a00414170a" translate="yes" xml:space="preserve">
          <source>Technicality</source>
          <target state="translated">Technicality</target>
        </trans-unit>
        <trans-unit id="e0a1c8bb9b89f4d9041bc74b2adb1607502e6b3b" translate="yes" xml:space="preserve">
          <source>Technically, it isn&amp;rsquo;t correct to say that &lt;code&gt;iri_to_uri()&lt;/code&gt; implements the full algorithm in the IRI specification. It doesn&amp;rsquo;t (yet) perform the international domain name encoding portion of the algorithm.</source>
          <target state="translated">技術的には、 &lt;code&gt;iri_to_uri()&lt;/code&gt; がIRI仕様の完全なアルゴリズムを実装していると言うのは正しくありません。アルゴリズムの国際ドメイン名エンコード部分は（まだ）実行されません。</target>
        </trans-unit>
        <trans-unit id="7de6a3d17023f841806590b868af528694e6e5d8" translate="yes" xml:space="preserve">
          <source>Technically, these models are defined in &lt;a href=&quot;#module-django.db.models.fields&quot;&gt;&lt;code&gt;django.db.models.fields&lt;/code&gt;&lt;/a&gt;, but for convenience they&amp;rsquo;re imported into &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt;&lt;code&gt;django.db.models&lt;/code&gt;&lt;/a&gt;; the standard convention is to use &lt;code&gt;from django.db import models&lt;/code&gt; and refer to fields as &lt;code&gt;models.&amp;lt;Foo&amp;gt;Field&lt;/code&gt;.</source>
          <target state="translated">技術的には、これらのモデルは&lt;a href=&quot;#module-django.db.models.fields&quot;&gt; &lt;code&gt;django.db.models.fields&lt;/code&gt; &lt;/a&gt;で定義されていますが、便宜上&lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt; &lt;code&gt;django.db.models&lt;/code&gt; に&lt;/a&gt;インポートされています。標準的な慣習では &lt;code&gt;from django.db import models&lt;/code&gt; 使用し、フィールドを &lt;code&gt;models.&amp;lt;Foo&amp;gt;Field&lt;/code&gt; として参照します。</target>
        </trans-unit>
        <trans-unit id="74376d78871f7f5ba72b35fbe8f98e3c1307a3e2" translate="yes" xml:space="preserve">
          <source>Technically, these variables are only made available in the template context if you use &lt;a href=&quot;../../ref/templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;'django.contrib.auth.context_processors.auth'&lt;/code&gt; context processor is enabled. It is in the default generated settings file. For more, see the &lt;a href=&quot;../../ref/templates/api#subclassing-context-requestcontext&quot;&gt;RequestContext docs&lt;/a&gt;.</source>
          <target state="translated">技術的には、これらの変数は、&lt;a href=&quot;../../ref/templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; &lt;/a&gt;を使用し、 &lt;code&gt;'django.contrib.auth.context_processors.auth'&lt;/code&gt; コンテキストプロセッサが有効になっている場合にのみ、テンプレートコンテキストで使用可能になります。デフォルトで生成された設定ファイルにあります。詳しくは、&lt;a href=&quot;../../ref/templates/api#subclassing-context-requestcontext&quot;&gt;RequestContext docsを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="383b13c1ac0b179247b0ee1a75193a5051b04366" translate="yes" xml:space="preserve">
          <source>Technically, when the template system encounters a dot, it tries the following lookups, in this order:</source>
          <target state="translated">技術的には、テンプレートシステムがドットに遭遇した場合、以下の順に検索を試みます。</target>
        </trans-unit>
        <trans-unit id="37fbae78ab80347d0c18f97d10a3ab53bee66425" translate="yes" xml:space="preserve">
          <source>Tell Django what your template directories are by using the &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; option in the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting in your settings file &amp;mdash; or the &lt;code&gt;dirs&lt;/code&gt; argument of &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;. This should be set to a list of strings that contain full paths to your template directories:</source>
          <target state="translated">設定ファイルの&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;設定の&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;オプション、または&lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;dirs&lt;/code&gt; 引数を使用して、テンプレートディレクトリが何であるかをDjangoに伝えます。これは、テンプレートディレクトリへのフルパスを含む文字列のリストに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="12617a938f0ea192637de7a721d7781bb1f0197d" translate="yes" xml:space="preserve">
          <source>Telling the browser to treat the response as a file attachment</source>
          <target state="translated">レスポンスをファイルの添付ファイルとして扱うようにブラウザに指示する</target>
        </trans-unit>
        <trans-unit id="dfed652b299fe7de04b4b3878c0cb5ae6194c2f3" translate="yes" xml:space="preserve">
          <source>Tells Django that this expression can be referenced in &lt;a href=&quot;querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;QuerySet.filter()&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">この式は&lt;a href=&quot;querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;QuerySet.filter()&lt;/code&gt; で&lt;/a&gt;参照できることをDjangoに伝えます。デフォルトは &lt;code&gt;True&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="00464f24457b083ea8b971654d3f458f7a7d5b88" translate="yes" xml:space="preserve">
          <source>Tells Django that this expression can be used as the source expression in &lt;a href=&quot;#django.db.models.expressions.Window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">この式を&lt;a href=&quot;#django.db.models.expressions.Window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; の&lt;/a&gt;ソース式として使用できることをDjangoに伝えます。デフォルトは &lt;code&gt;False&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9e8bd508a7310ab1a3f7a19b29110d2d829c51f" translate="yes" xml:space="preserve">
          <source>Tells Django that this expression contains a &lt;a href=&quot;#django.db.models.expressions.Window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; expression. It&amp;rsquo;s used, for example, to disallow window function expressions in queries that modify data.</source>
          <target state="translated">この式に&lt;a href=&quot;#django.db.models.expressions.Window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;式が含まれていることをDjangoに伝えます。これは、たとえば、データを変更するクエリでウィンドウ関数式を禁止するために使用されます。</target>
        </trans-unit>
        <trans-unit id="fe6cdd0ac9468de4f270919d5d81bce20e896652" translate="yes" xml:space="preserve">
          <source>Tells Django that this expression contains an aggregate and that a &lt;code&gt;GROUP BY&lt;/code&gt; clause needs to be added to the query.</source>
          <target state="translated">この式には集約が含まれており、 &lt;code&gt;GROUP BY&lt;/code&gt; 句をクエリに追加する必要があることをDjangoに伝えます。</target>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="08f1c8a78b50829c28f568e876e1fe89a15bb0f2" translate="yes" xml:space="preserve">
          <source>Template customization</source>
          <target state="translated">テンプレートのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="a46a15fcb23f0c85101ef7ca0d97f009d73b42f5" translate="yes" xml:space="preserve">
          <source>Template engines</source>
          <target state="translated">テンプレートエンジン</target>
        </trans-unit>
        <trans-unit id="503b40392c29384af177b8f9f130a2b903114424" translate="yes" xml:space="preserve">
          <source>Template engines are available in &lt;code&gt;django.template.engines&lt;/code&gt;:</source>
          <target state="translated">テンプレートエンジンは &lt;code&gt;django.template.engines&lt;/code&gt; で利用できます：</target>
        </trans-unit>
        <trans-unit id="0392e1a0044d6e8dcf79e5002812eecc51f97c34" translate="yes" xml:space="preserve">
          <source>Template filter code falls into one of two situations:</source>
          <target state="translated">テンプレートフィルターのコードは、2つの状況のいずれかに該当します。</target>
        </trans-unit>
        <trans-unit id="870c1047b3b1c95e6bc52bdd54b9c3d2448447f8" translate="yes" xml:space="preserve">
          <source>Template filters</source>
          <target state="translated">テンプレートフィルタ</target>
        </trans-unit>
        <trans-unit id="06e8babef15a0e42a0ac73aa90f02e159dbfc308" translate="yes" xml:space="preserve">
          <source>Template filters that expect strings</source>
          <target state="translated">文字列を期待するテンプレートフィルタ</target>
        </trans-unit>
        <trans-unit id="aff256beb841687416f1ad08d1bafc4a0d9153d7" translate="yes" xml:space="preserve">
          <source>Template fragment caching</source>
          <target state="translated">テンプレートフラグメントのキャッシング</target>
        </trans-unit>
        <trans-unit id="bcfb14bc4c658ec14316f1306282663640732cce" translate="yes" xml:space="preserve">
          <source>Template inheritance</source>
          <target state="translated">テンプレートの継承</target>
        </trans-unit>
        <trans-unit id="8e25064c8de5ef7f805d6501e8c52fcf85fa8d69" translate="yes" xml:space="preserve">
          <source>Template loaders are responsible for locating templates, loading them, and returning &lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">テンプレートローダーは、テンプレートの検索、ロード、および&lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;オブジェクトの返却を担当します。</target>
        </trans-unit>
        <trans-unit id="275493e1e3c651550a0e312841edc8286090591e" translate="yes" xml:space="preserve">
          <source>Template namespacing</source>
          <target state="translated">テンプレートの名前のスペーシング</target>
        </trans-unit>
        <trans-unit id="d7f9f1f6f770c8fc7ec2b0095dd3a883ac1bc7d8" translate="yes" xml:space="preserve">
          <source>Template origin</source>
          <target state="translated">テンプレートの起源</target>
        </trans-unit>
        <trans-unit id="5ffe744c9da607d4e089d6d95e399795d91def00" translate="yes" xml:space="preserve">
          <source>Template performance</source>
          <target state="translated">テンプレートの性能</target>
        </trans-unit>
        <trans-unit id="2c2d75f14614834905c25e03493f93168c937ee7" translate="yes" xml:space="preserve">
          <source>Template postmortem</source>
          <target state="translated">テンプレートの死後</target>
        </trans-unit>
        <trans-unit id="d63c1da80c73b121a86202e8f2560b0cfeb4561c" translate="yes" xml:space="preserve">
          <source>Template reference</source>
          <target state="translated">テンプレート参照</target>
        </trans-unit>
        <trans-unit id="ecbe2eec65ab0457fbc5a438c5eebda868ca8bac" translate="yes" xml:space="preserve">
          <source>Template tags</source>
          <target state="translated">テンプレートタグ</target>
        </trans-unit>
        <trans-unit id="c1ecd681b7d7c3385c0d156a844441f0ab708044" translate="yes" xml:space="preserve">
          <source>Template tags and filters</source>
          <target state="translated">テンプレートタグとフィルター</target>
        </trans-unit>
        <trans-unit id="93d7a6a3b3fb3ebfb6f68bdf31818ff1d1a697fb" translate="yes" xml:space="preserve">
          <source>Template tags and filters reference</source>
          <target state="translated">テンプレートタグとフィルターの参照</target>
        </trans-unit>
        <trans-unit id="4de39a2f979afac3a22fb6e2b91978381849ffb4" translate="yes" xml:space="preserve">
          <source>Template tags can work in tandem. For instance, the standard &lt;a href=&quot;../ref/templates/builtins#std:templatetag-comment&quot;&gt;&lt;code&gt;{% comment %}&lt;/code&gt;&lt;/a&gt; tag hides everything until &lt;code&gt;{% endcomment %}&lt;/code&gt;. To create a template tag such as this, use &lt;code&gt;parser.parse()&lt;/code&gt; in your compilation function.</source>
          <target state="translated">テンプレートタグは連携して機能します。たとえば、標準の&lt;a href=&quot;../ref/templates/builtins#std:templatetag-comment&quot;&gt; &lt;code&gt;{% comment %}&lt;/code&gt; &lt;/a&gt;タグは、 &lt;code&gt;{% endcomment %}&lt;/code&gt; まですべてを非表示にします。このようなテンプレートタグを作成するには、コンパイル関数で &lt;code&gt;parser.parse()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="7d0db7be1461de15be97b4fcf849f0ce026908fa" translate="yes" xml:space="preserve">
          <source>Template:</source>
          <target state="translated">Template:</target>
        </trans-unit>
        <trans-unit id="3e2df858e707eddad231b69c21944cd664c3965b" translate="yes" xml:space="preserve">
          <source>TemplateResponse and SimpleTemplateResponse</source>
          <target state="translated">TemplateResponseとSimpleTemplateResponse</target>
        </trans-unit>
        <trans-unit id="00bda0abce0d98bf01bf42aa1cbc75f8a33fb7b4" translate="yes" xml:space="preserve">
          <source>TemplateResponse provides a way to do just that. Unlike basic &lt;a href=&quot;request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects, TemplateResponse objects retain the details of the template and context that was provided by the view to compute the response. The final output of the response is not computed until it is needed, later in the response process.</source>
          <target state="translated">TemplateResponseはそれを行う方法を提供します。基本的な&lt;a href=&quot;request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;オブジェクトとは異なり、TemplateResponseオブジェクトは、応答を計算するためにビューによって提供されたテンプレートとコンテキストの詳細を保持します。応答の最終出力は、後で応答プロセスで必要になるまで計算されません。</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="ee5de2a0afdca73e751c62979aed7a83e28fc3b9" translate="yes" xml:space="preserve">
          <source>Templates can override or extend base admin templates as described in &lt;a href=&quot;#admin-overriding-templates&quot;&gt;Overriding admin templates&lt;/a&gt;.</source>
          <target state="translated">テンプレートは、&lt;a href=&quot;#admin-overriding-templates&quot;&gt;管理テンプレートのオーバーライドで&lt;/a&gt;説明されているように、基本管理テンプレートをオーバーライドまたは拡張できます。</target>
        </trans-unit>
        <trans-unit id="837a4a4336cf75d30df4024f4f3ad20a083163f7" translate="yes" xml:space="preserve">
          <source>Templates engines are configured with the &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting. It&amp;rsquo;s a list of configurations, one for each engine. The default value is empty. The &lt;code&gt;settings.py&lt;/code&gt; generated by the &lt;a href=&quot;../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt; command defines a more useful value:</source>
          <target state="translated">テンプレートエンジンは、&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;設定で構成されます。これは、各エンジンに1つずつ、構成のリストです。デフォルト値は空です。 &lt;code&gt;settings.py&lt;/code&gt; によって生成&lt;a href=&quot;../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; の&lt;/a&gt;コマンドは、より有用な値を定義します。</target>
        </trans-unit>
        <trans-unit id="57677a5a4bc0d7b93c6b0e7344167b9efc12f914" translate="yes" xml:space="preserve">
          <source>Templates have an &lt;code&gt;origin&lt;/code&gt; containing attributes depending on the source they are loaded from.</source>
          <target state="translated">テンプレートには、ロード元のソースに応じた属性を含む &lt;code&gt;origin&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="4b12ed220f1f137ab20bc8189bf5d2b4027b98db" translate="yes" xml:space="preserve">
          <source>Templates which may be overridden per app or model</source>
          <target state="translated">アプリやモデルごとにオーバーライドできるテンプレート</target>
        </trans-unit>
        <trans-unit id="79d9878f5100d0480b508daffd45aca154046fde" translate="yes" xml:space="preserve">
          <source>Terry A. Slocum, Robert B. McMaster, Fritz C. Kessler, &amp;amp; Hugh H. Howard, &lt;em&gt;Thematic Cartography and Geographic Visualization&lt;/em&gt; (Prentice Hall, 2nd edition), at Ch. 7.1.3.</source>
          <target state="translated">Terry A. Slocum、Robert B. McMaster、Fritz C. Kessler、およびHugh H. Howard、&lt;em&gt;Thematic Cartography and Geographic Visualization&lt;/em&gt;（Prentice Hall、2nd edition）、Ch。7.1.3。</target>
        </trans-unit>
        <trans-unit id="b54928633e8f7d5711d9314a8072c27ac84de32b" translate="yes" xml:space="preserve">
          <source>Test &lt;a href=&quot;#skipping-tests&quot;&gt;skipping based on database backend features&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#skipping-tests&quot;&gt;データベースのバックエンド機能に基づいてスキップを&lt;/a&gt;テストします。</target>
        </trans-unit>
        <trans-unit id="c6da5565855f37d08c530e95452e7e72020da6ec" translate="yes" xml:space="preserve">
          <source>Test a view</source>
          <target state="translated">ビューをテストする</target>
        </trans-unit>
        <trans-unit id="18739c3aec8fb9af2219621b209b83b2e73543bd" translate="yes" xml:space="preserve">
          <source>Test and tweak</source>
          <target state="translated">テストと調整</target>
        </trans-unit>
        <trans-unit id="b0b06394156d352ffb8c4177aec079b081a5b940" translate="yes" xml:space="preserve">
          <source>Test cases features</source>
          <target state="translated">テストケースの特徴</target>
        </trans-unit>
        <trans-unit id="ef625477f09969d2f6ca5084c4d11d06ee7e5668" translate="yes" xml:space="preserve">
          <source>Test database templates</source>
          <target state="translated">データベースのテンプレートをテストする</target>
        </trans-unit>
        <trans-unit id="08934ffbb3b1105d0b3b67d00c046e179772cd8f" translate="yes" xml:space="preserve">
          <source>Test discovery is based on the unittest module&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest-test-discovery&quot;&gt;built-in test discovery&lt;/a&gt;. By default, this will discover tests in any file named &amp;ldquo;test*.py&amp;rdquo; under the current working directory.</source>
          <target state="translated">テスト検出は、unittestモジュールの&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest-test-discovery&quot;&gt;組み込み&lt;/a&gt;テスト検出に基づいています。デフォルトでは、現在の作業ディレクトリの下にある「test * .py」という名前のファイル内のテストが検出されます。</target>
        </trans-unit>
        <trans-unit id="5d53505398a3c5ad8a027d0a8074a1ca538a563c" translate="yes" xml:space="preserve">
          <source>Test runner options</source>
          <target state="translated">テストランナーのオプション</target>
        </trans-unit>
        <trans-unit id="f7afb236ad48d9f7cb2d795fcd1de1b79a5e779e" translate="yes" xml:space="preserve">
          <source>Test signals</source>
          <target state="translated">テスト信号</target>
        </trans-unit>
        <trans-unit id="44dc477d5b5165b3c359fa1c3cd92391ab84b1fe" translate="yes" xml:space="preserve">
          <source>Test that a given request is rendered by a given Django template, with a template context that contains certain values.</source>
          <target state="translated">与えられたリクエストが、特定の値を含むテンプレートコンテキストで、与えられた Django テンプレートによってレンダリングされることをテストします。</target>
        </trans-unit>
        <trans-unit id="f199f6e63adef5356b4300a7349bbb4f565039c2" translate="yes" xml:space="preserve">
          <source>Test with warnings enabled</source>
          <target state="translated">警告を有効にしてテスト</target>
        </trans-unit>
        <trans-unit id="5b03058aa647d29d24e264f61eeb7755159268e9" translate="yes" xml:space="preserve">
          <source>Test your installation by importing it in the Python interactive interpreter:</source>
          <target state="translated">Python インタラクティブインタプリタにインポートしてインストールをテストします。</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="30da1610721c5a77e11b77c05aac051d5571f9a6" translate="yes" xml:space="preserve">
          <source>Testing &lt;a href=&quot;#django.test.SimpleTestCase.assertContains&quot;&gt;&lt;code&gt;HTML responses for the presence/lack of a given fragment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.test.SimpleTestCase.assertContains&quot;&gt; &lt;code&gt;HTML responses for the presence/lack of a given fragment&lt;/code&gt; &lt;/a&gt;テストします。</target>
        </trans-unit>
        <trans-unit id="1a40bce67dddb6fb767cfb952b87305913c9ca16" translate="yes" xml:space="preserve">
          <source>Testing Framework Exceptions</source>
          <target state="translated">テストフレームワークの例外</target>
        </trans-unit>
        <trans-unit id="10df3a3bb8dbd3c97fe17e0a5df7ee88fbcb58aa" translate="yes" xml:space="preserve">
          <source>Testing GeoDjango apps</source>
          <target state="translated">GeoDjango アプリのテスト</target>
        </trans-unit>
        <trans-unit id="2cbeb84e0b5bbc826263bbb80a5a0826ced7cab6" translate="yes" xml:space="preserve">
          <source>Testing a Web application is a complex task, because a Web application is made of several layers of logic &amp;ndash; from HTTP-level request handling, to form validation and processing, to template rendering. With Django&amp;rsquo;s test-execution framework and assorted utilities, you can simulate requests, insert test data, inspect your application&amp;rsquo;s output and generally verify your code is doing what it should be doing.</source>
          <target state="translated">Webアプリケーションは、HTTPレベルのリクエスト処理からフォームの検証と処理、テンプレートのレンダリングに至るまで、ロジックの複数のレイヤーで構成されているため、Webアプリケーションのテストは複雑なタスクです。Djangoのテスト実行フレームワークと各種ユーティリティを使用すると、リクエストをシミュレートし、テストデータを挿入し、アプリケーションの出力を検査して、通常、コードが本来の動作をしていることを確認できます。</target>
        </trans-unit>
        <trans-unit id="436ba3c1d533fcda1dbeb2dab22f4c2a7d01de0c" translate="yes" xml:space="preserve">
          <source>Testing asynchronous code</source>
          <target state="translated">非同期コードのテスト</target>
        </trans-unit>
        <trans-unit id="81c487303ebe08511551142a3176c39d553469d8" translate="yes" xml:space="preserve">
          <source>Testing class-based views</source>
          <target state="translated">クラスベースのビューのテスト</target>
        </trans-unit>
        <trans-unit id="86ebd52789fcbddb1bf223135422d1fa99ffa6a2" translate="yes" xml:space="preserve">
          <source>Testing custom error views</source>
          <target state="translated">カスタムエラービューのテスト</target>
        </trans-unit>
        <trans-unit id="46789c25f9937fae8e84995b643f9f3d3b619419" translate="yes" xml:space="preserve">
          <source>Testing for multipart forms</source>
          <target state="translated">マルチパートフォームのテスト</target>
        </trans-unit>
        <trans-unit id="8a9cd3554eda0d0c14cbdab4f3bfe98e0aded844" translate="yes" xml:space="preserve">
          <source>Testing form field &lt;a href=&quot;#django.test.SimpleTestCase.assertFieldOutput&quot;&gt;&lt;code&gt;rendering and error treatment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォームフィールドの&lt;a href=&quot;#django.test.SimpleTestCase.assertFieldOutput&quot;&gt; &lt;code&gt;rendering and error treatment&lt;/code&gt; &lt;/a&gt;テスト。</target>
        </trans-unit>
        <trans-unit id="a5e51a30cc66d4bfcb4289dbe9807bb19ba80ebc" translate="yes" xml:space="preserve">
          <source>Testing in Django</source>
          <target state="translated">Django でのテスト</target>
        </trans-unit>
        <trans-unit id="1f871e679b11d199935fbbef02730cc6b7b25a92" translate="yes" xml:space="preserve">
          <source>Testing operates at different levels. Some tests might apply to a tiny detail (&lt;em&gt;does a particular model method return values as expected?&lt;/em&gt;) while others examine the overall operation of the software (&lt;em&gt;does a sequence of user inputs on the site produce the desired result?&lt;/em&gt;). That&amp;rsquo;s no different from the kind of testing you did earlier in &lt;a href=&quot;tutorial02&quot;&gt;Tutorial 2&lt;/a&gt;, using the &lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt; to examine the behavior of a method, or running the application and entering data to check how it behaves.</source>
          <target state="translated">テストはさまざまなレベルで動作します。一部のテストは小さな詳細に適用される場合があります（&lt;em&gt;特定のモデルメソッドは期待どおりに値を返しますか？&lt;/em&gt;）一方で、ソフトウェアの全体的な操作を調べます（&lt;em&gt;サイトでの一連のユーザー入力により、望ましい結果が得られますか？&lt;/em&gt;）。これは、&lt;a href=&quot;tutorial02&quot;&gt;チュートリアル2&lt;/a&gt;で以前に行った種類のテストと同じです。&lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt; &lt;code&gt;shell&lt;/code&gt; &lt;/a&gt;を使用してメソッドの動作を調べたり、アプリケーションを実行してデータを入力したりして、動作を確認します。</target>
        </trans-unit>
        <trans-unit id="4419ce5b690d20e39e613abbba7da1488f9816bb" translate="yes" xml:space="preserve">
          <source>Testing our new view</source>
          <target state="translated">新しいビューのテスト</target>
        </trans-unit>
        <trans-unit id="5e72b5e121198f50570492a55809dbef6ebc08a0" translate="yes" xml:space="preserve">
          <source>Testing primary/replica configurations</source>
          <target state="translated">プライマリ/レプリカ構成のテスト</target>
        </trans-unit>
        <trans-unit id="802b52725b6569631bb94335fbd56065e721f791" translate="yes" xml:space="preserve">
          <source>Testing responses</source>
          <target state="translated">テスト対応</target>
        </trans-unit>
        <trans-unit id="e5c93522fa833711d269c91b7f26d492d378b5b5" translate="yes" xml:space="preserve">
          <source>Testing the &lt;code&gt;DetailView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DetailView&lt;/code&gt; のテスト</target>
        </trans-unit>
        <trans-unit id="3d3998625037d01c3f0c18b46c8e2f6a0db08edf" translate="yes" xml:space="preserve">
          <source>Testing tools</source>
          <target state="translated">テストツール</target>
        </trans-unit>
        <trans-unit id="c8a45f98b9d3f2e344cf639e0d00f51996bca921" translate="yes" xml:space="preserve">
          <source>Testing utilities</source>
          <target state="translated">ユーティリティのテスト</target>
        </trans-unit>
        <trans-unit id="7fea12ddfcb669dc82c604d27efcb7b00c360587" translate="yes" xml:space="preserve">
          <source>Testing your patch.</source>
          <target state="translated">あなたのパッチをテストします。</target>
        </trans-unit>
        <trans-unit id="e765931ce076de9d50bb9363cdb3fef81c853c1b" translate="yes" xml:space="preserve">
          <source>Tests and multiple databases</source>
          <target state="translated">テストと複数のデータベース</target>
        </trans-unit>
        <trans-unit id="d142901c5c92e69912ce0487e74a18801198fd82" translate="yes" xml:space="preserve">
          <source>Tests and multiple host names</source>
          <target state="translated">テストと複数のホスト名</target>
        </trans-unit>
        <trans-unit id="529cc1e0384bfb82fc3b78a96d4ceba233e4dfd6" translate="yes" xml:space="preserve">
          <source>Tests are routines that check the operation of your code.</source>
          <target state="translated">テストは、コードの動作をチェックするルーチンです。</target>
        </trans-unit>
        <trans-unit id="6f13b48a42e5a6876e4ded23dcb1354f85763309" translate="yes" xml:space="preserve">
          <source>Tests change that; they light up your code from the inside, and when something goes wrong, they focus light on the part that has gone wrong - &lt;em&gt;even if you hadn&amp;rsquo;t even realized it had gone wrong&lt;/em&gt;.</source>
          <target state="translated">テストはそれを変えます。彼らはあなたのコードを内側から照らします、そして、何かがうまくいかないとき、彼らは&lt;em&gt;、あなたがそれが間違っていたことに気づいていなかったとしても、&lt;/em&gt;間違っている部分に光を集中させ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e4217747096e24b37b05b1b58a8db268a7a3cd26" translate="yes" xml:space="preserve">
          <source>Tests don&amp;rsquo;t just identify problems, they prevent them</source>
          <target state="translated">テストは問題を特定するだけでなく、問題を防ぎます</target>
        </trans-unit>
        <trans-unit id="fe2e646919fc0d3be94d4e8a0b5f1b868385e7c6" translate="yes" xml:space="preserve">
          <source>Tests help teams work together</source>
          <target state="translated">テストはチームの共同作業を支援します。</target>
        </trans-unit>
        <trans-unit id="5586c33813dfd5cd6a910124a2bb8f00a2f92184" translate="yes" xml:space="preserve">
          <source>Tests if no point in the geometry field is outside the lookup geometry. &lt;a href=&quot;#fncovers&quot; id=&quot;id2&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">ジオメトリフィールドのどのポイントもルックアップジオメトリの外にないかどうかをテストします。&lt;a href=&quot;#fncovers&quot; id=&quot;id2&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aef5fa36e2dc07740896aff38e4448ed7cb76091" translate="yes" xml:space="preserve">
          <source>Tests if no point in the lookup geometry is outside the geometry field. &lt;a href=&quot;#fncovers&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="translated">ルックアップジオメトリのどのポイントもジオメトリフィールドの外にないかどうかをテストします。&lt;a href=&quot;#fncovers&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33044edb75457057684cf0c14862e24d3efa84c8" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field is &amp;ldquo;equal&amp;rdquo; to the lookup geometry. On Oracle, MySQL, and SpatiaLite, it tests spatial equality, while on PostGIS it tests equality of bounding boxes.</source>
          <target state="translated">ジオメトリフィールドがルックアップジオメトリと「等しい」かどうかをテストします。Oracle、MySQL、およびSpatiaLiteでは、空間的な同等性をテストしますが、PostGISでは、境界ボックスの同等性をテストします。</target>
        </trans-unit>
        <trans-unit id="dfc59d48d68f87422ad9e9e987261672a675ee44" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field is spatially disjoint from the lookup geometry.</source>
          <target state="translated">ジオメトリフィールドがルックアップジオメトリから空間的に分離しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="ef616e014573f56f07d09650f80cf7143b12d73b" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field is spatially equal to the lookup geometry.</source>
          <target state="translated">ジオメトリフィールドがルックアップジオメトリと空間的に等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="f4ef0e979ecf53f78388994e4eee8bbb4e0869e0" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field is spatially related to the lookup geometry by the values given in the given pattern. This lookup requires a tuple parameter, &lt;code&gt;(geom, pattern)&lt;/code&gt;; the form of &lt;code&gt;pattern&lt;/code&gt; will depend on the spatial backend:</source>
          <target state="translated">指定されたパターンで指定された値によって、geometryフィールドがルックアップジオメトリに空間的に関連しているかどうかをテストします。このルックアップには、タプルパラメータ &lt;code&gt;(geom, pattern)&lt;/code&gt; です。 &lt;code&gt;pattern&lt;/code&gt; の形式は、空間バックエンドに依存します。</target>
        </trans-unit>
        <trans-unit id="08684b75128f222389bd1ef9ea857766dbb18be7" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field is spatially within the lookup geometry.</source>
          <target state="translated">ジオメトリフィールドがルックアップジオメトリ内に空間的に存在するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a1c17e97d2e7b46642cbcac5b28db6d4f7409338" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field spatially contains the lookup geometry.</source>
          <target state="translated">ジオメトリフィールドにルックアップジオメトリが空間的に含まれているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="c7bfee25407fa380777aa39b211b28473e014885" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field spatially crosses the lookup geometry.</source>
          <target state="translated">ジオメトリフィールドがルックアップジオメトリと空間的に交差しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="91ff40cdb8b37d72d110b8df9b31eaa4d711bf2b" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field spatially intersects the lookup geometry.</source>
          <target state="translated">ジオメトリフィールドがルックアップジオメトリと空間的に交差するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="041f30ff101e07970819f76c88c29091a8e92442" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field spatially overlaps the lookup geometry.</source>
          <target state="translated">ジオメトリフィールドがルックアップジオメトリと空間的に重なっているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b7b32839d0968186ac615e9a90f7b28ffe9ebc8e" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field spatially touches the lookup geometry.</source>
          <target state="translated">ジオメトリフィールドがルックアップジオメトリに空間的に接触しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1079f0bdf2d5a0f6a77c8cb65ffc6df4adf53512" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box is completely contained by the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドの境界ボックスがルックアップジオメトリの境界ボックスに完全に含まれているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="226b256e835dc81984974ebb79c7fd39d11fc252" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box is strictly above the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドの境界ボックスがルックアップジオメトリの境界ボックスの上にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="78b2cefd2d9e99895a032d0cd6cfaccd3bf21d19" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box is strictly below the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドのバウンディングボックスがルックアップジオメトリのバウンディングボックスの真下にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b018f50ff926ea0d82843dfdb8618ef439330bd4" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box is strictly to the left of the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドの境界ボックスが、ルックアップジオメトリの境界ボックスの左側にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="de460f890aa9ea192b9ee4a1f48adb9f1297d188" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box is strictly to the right of the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドの境界ボックスが、ルックアップジオメトリの境界ボックスの右側にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2616aa38fac34dc4d19b5f484a83275678b61014" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box overlaps or is above the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドのバウンディングボックスがルックアップジオメトリのバウンディングボックスとオーバーラップしているか、または上にあるかをテストします。</target>
        </trans-unit>
        <trans-unit id="ba7590ef62b0a758878fe2a4b5816b64a25fc5a8" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box overlaps or is below the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドのバウンディングボックスが、ルックアップジオメトリのバウンディングボックスと重なるか、または下にあるかをテストします。</target>
        </trans-unit>
        <trans-unit id="09be52c0a55b6715e5b5ee30b3d56ddcafdffa7a" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box overlaps or is to the left of the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドのバウンディングボックスがルックアップジオメトリのバウンディングボックスと重複するか、左側にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="ccb9de8e529f38bdbaf2204233736f82b9c587e4" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box overlaps or is to the right of the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドのバウンディングボックスが、ルックアップジオメトリのバウンディングボックスと重複するか、右側にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e9920c6c2e21c644b40b32a85072450b1e6a5fd7" translate="yes" xml:space="preserve">
          <source>Tests if the geometry field&amp;rsquo;s bounding box overlaps the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリフィールドのバウンディングボックスがルックアップジオメトリのバウンディングボックスと重なっているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="bae91c2489c982532e3e968218fb4e5c40b52bd7" translate="yes" xml:space="preserve">
          <source>Tests if the geometry is valid.</source>
          <target state="translated">ジオメトリが有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="f6a509828a43af80b33c5ac468b85e5168d7b241" translate="yes" xml:space="preserve">
          <source>Tests if the geometry or raster field&amp;rsquo;s bounding box completely contains the lookup geometry&amp;rsquo;s bounding box.</source>
          <target state="translated">ジオメトリまたはラスターフィールドの境界ボックスに、ルックアップジオメトリの境界ボックスが完全に含まれているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="604606740adeb57a13777ca1ee0b14d7487c2248" translate="yes" xml:space="preserve">
          <source>Tests make your code more attractive</source>
          <target state="translated">テストはコードをより魅力的にします</target>
        </trans-unit>
        <trans-unit id="ce94a04b7009315562b1dc4852c7d4e6dc62aa4c" translate="yes" xml:space="preserve">
          <source>Tests that require a database (namely, model tests) will not use your &amp;ldquo;real&amp;rdquo; (production) database. Separate, blank databases are created for the tests.</source>
          <target state="translated">データベースを必要とするテスト（つまり、モデルテスト）では、「実際の」（本番）データベースを使用しません。テスト用に、別個の空のデータベースが作成されます。</target>
        </trans-unit>
        <trans-unit id="29a59794ddaaf43fd62c0e6cb68b77b8974a4205" translate="yes" xml:space="preserve">
          <source>Tests will save you time</source>
          <target state="translated">テストは時間の節約になります</target>
        </trans-unit>
        <trans-unit id="f1cfe6dce5e3be3c973c8f3f7449cb1af82c9073" translate="yes" xml:space="preserve">
          <source>Text functions</source>
          <target state="translated">テキスト機能</target>
        </trans-unit>
        <trans-unit id="fb4a089572d0dd369d8d37436891839b17c03c3a" translate="yes" xml:space="preserve">
          <source>Text, character references, and entity references that refer to the same character are equivalent.</source>
          <target state="translated">同じ文字を参照するテキスト、文字参照、実体参照は等価です。</target>
        </trans-unit>
        <trans-unit id="eeb7a3ffc2c50e82898b58929bfd77acc7f78d6e" translate="yes" xml:space="preserve">
          <source>Text-based fields have a selection of matching operations. For example, you may wish to allow lookup up an author like so:</source>
          <target state="translated">テキストベースのフィールドには、マッチング操作の選択肢があります。例えば、このように著者を検索できるようにしたい場合があります。</target>
        </trans-unit>
        <trans-unit id="6a0b8351f71fed3e6cc6c710e971182aa5e68dfb" translate="yes" xml:space="preserve">
          <source>That adds a &amp;ldquo;Filter&amp;rdquo; sidebar that lets people filter the change list by the &lt;code&gt;pub_date&lt;/code&gt; field:</source>
          <target state="translated">これにより、変更リストを &lt;code&gt;pub_date&lt;/code&gt; フィールドでフィルタリングできる「フィルター」サイドバーが追加されます。</target>
        </trans-unit>
        <trans-unit id="bfa1f191e17363324ace8750451c12ed4afbd586" translate="yes" xml:space="preserve">
          <source>That adds a search box at the top of the change list. When somebody enters search terms, Django will search the &lt;code&gt;question_text&lt;/code&gt; field. You can use as many fields as you&amp;rsquo;d like &amp;ndash; although because it uses a &lt;code&gt;LIKE&lt;/code&gt; query behind the scenes, limiting the number of search fields to a reasonable number will make it easier for your database to do the search.</source>
          <target state="translated">これにより、変更リストの上部に検索ボックスが追加されます。誰かが検索語を入力すると、Djangoは &lt;code&gt;question_text&lt;/code&gt; フィールドを検索します。好きなだけフィールドを使用できます。ただし、 &lt;code&gt;LIKE&lt;/code&gt; クエリがバックグラウンドで使用されるため、検索フィールドの数を適切な数に制限すると、データベースでの検索が容易になります。</target>
        </trans-unit>
        <trans-unit id="53b1bd1611ab04066e302e63e9681e124ce34bee" translate="yes" xml:space="preserve">
          <source>That code loads the template called &lt;code&gt;polls/index.html&lt;/code&gt; and passes it a context. The context is a dictionary mapping template variable names to Python objects.</source>
          <target state="translated">このコードは、 &lt;code&gt;polls/index.html&lt;/code&gt; というテンプレートをロードして、コンテキストに渡します。コンテキストは、テンプレート変数名をPythonオブジェクトにマッピングする辞書です。</target>
        </trans-unit>
        <trans-unit id="48da30043b968a63979b4407e5ce8ec5983be9c4" translate="yes" xml:space="preserve">
          <source>That code will give us an admin change list that looks something like this:</source>
          <target state="translated">このコードは、以下のような管理者変更リストを提供してくれます。</target>
        </trans-unit>
        <trans-unit id="c544ddf945e341dc2ec8e9fa59cf81c9ae7e6b05" translate="yes" xml:space="preserve">
          <source>That in-memory structure is also used to work out what the differences are between your models and the current state of your migrations; Django runs through all the changes, in order, on an in-memory set of models to come up with the state of your models last time you ran &lt;code&gt;makemigrations&lt;/code&gt;. It then uses these models to compare against the ones in your &lt;code&gt;models.py&lt;/code&gt; files to work out what you have changed.</source>
          <target state="translated">そのインメモリ構造は、モデルと移行の現在の状態の違いを明らかにするためにも使用されます。Djangoは、メモリ内のモデルセットに対してすべての変更を順番に実行して、前回 &lt;code&gt;makemigrations&lt;/code&gt; を実行したときのモデルの状態を表示します。次に、これらのモデルを使用して、 &lt;code&gt;models.py&lt;/code&gt; ファイル内のモデルと比較し、変更内容を確認します。</target>
        </trans-unit>
        <trans-unit id="071a4f0e999eb82664a30c3a9612714d7cbb38eb" translate="yes" xml:space="preserve">
          <source>That included the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags. To get more granular, you can use each radio button&amp;rsquo;s &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;choice_label&lt;/code&gt; and &lt;code&gt;id_for_label&lt;/code&gt; attributes. For example, this template&amp;hellip;</source>
          <target state="translated">&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; タグが含まれています。さらに細かくするには、各ラジオボタンの &lt;code&gt;tag&lt;/code&gt; 、 &lt;code&gt;choice_label&lt;/code&gt; 、 &lt;code&gt;id_for_label&lt;/code&gt; 属性を使用できます。たとえば、このテンプレート&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="289dc239d96a218a0a9144dbea0ff8bfadbac7a3" translate="yes" xml:space="preserve">
          <source>That is, all the relevant toppings will have been fetched in a single query, and used to make &lt;code&gt;QuerySets&lt;/code&gt; that have a pre-filled cache of the relevant results; these &lt;code&gt;QuerySets&lt;/code&gt; are then used in the &lt;code&gt;self.toppings.all()&lt;/code&gt; calls.</source>
          <target state="translated">つまり、関連するすべてのトッピングが単一のクエリでフェッチされ、関連する結果の事前に満たされたキャッシュを持つ &lt;code&gt;QuerySets&lt;/code&gt; を作成するために使用されます。これらの &lt;code&gt;QuerySets&lt;/code&gt; 、その後に使用されている &lt;code&gt;self.toppings.all()&lt;/code&gt; の呼び出し。</target>
        </trans-unit>
        <trans-unit id="5aa23348e5696dee385c18dc4e8dccbe7cd90d4e" translate="yes" xml:space="preserve">
          <source>That is, the database can typically do things faster than Python can, which can do them faster than the template language can:</source>
          <target state="translated">つまり、データベースは通常、Pythonができることよりも、テンプレート言語ができることよりも速く物事を行うことができます。</target>
        </trans-unit>
        <trans-unit id="1bcf07749fa0e5b0650c8d97b67c9b33e4c09165" translate="yes" xml:space="preserve">
          <source>That may sound a bit confusing, so hopefully an example will clarify. To select all blogs that contain entries with both &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; in the headline and that were published in 2008 (the same entry satisfying both conditions), we would write:</source>
          <target state="translated">それは少し混乱するように聞こえるかもしれませんので、うまくいけば、例が明確になるでしょう。見出しに&lt;em&gt;「Lennon」の&lt;/em&gt;両方が含まれ、2008年に公開されたすべてのブログ（両方の条件を満たす同じエントリー）を選択するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="efe034055f31a009c043a950555deab45463315f" translate="yes" xml:space="preserve">
          <source>That means the same database query will be executed twice, effectively doubling your database load. Also, there&amp;rsquo;s a possibility the two lists may not include the same database records, because an &lt;code&gt;Entry&lt;/code&gt; may have been added or deleted in the split second between the two requests.</source>
          <target state="translated">つまり、同じデータベースクエリが2回実行され、データベースの負荷が事実上2倍になります。また、2つのリクエスト間の1秒間に &lt;code&gt;Entry&lt;/code&gt; が追加または削除された可能性があるため、2つのリストに同じデータベースレコードが含まれていない可能性もあります。</target>
        </trans-unit>
        <trans-unit id="fa0735a4426dd841891a46317d94e2793cbd4563" translate="yes" xml:space="preserve">
          <source>That method should always return a natural key tuple &amp;ndash; in this example, &lt;code&gt;(first name, last name)&lt;/code&gt;. Then, when you call &lt;code&gt;serializers.serialize()&lt;/code&gt;, you provide &lt;code&gt;use_natural_foreign_keys=True&lt;/code&gt; or &lt;code&gt;use_natural_primary_keys=True&lt;/code&gt; arguments:</source>
          <target state="translated">このメソッドは常に自然なキータプルを返す必要があります。この例では、 &lt;code&gt;(first name, last name)&lt;/code&gt; です。次に、 &lt;code&gt;serializers.serialize()&lt;/code&gt; を呼び出すときに、 &lt;code&gt;use_natural_foreign_keys=True&lt;/code&gt; または &lt;code&gt;use_natural_primary_keys=True&lt;/code&gt; 引数を指定します。</target>
        </trans-unit>
        <trans-unit id="65dd16f1ec104548ec7701aae2503e9f4b454448" translate="yes" xml:space="preserve">
          <source>That other developers want to see tests in your software before they take it seriously is yet another reason for you to start writing tests.</source>
          <target state="translated">他の開発者が真剣に取り組む前に、あなたのソフトウェアのテストを見たいと思っていることは、あなたがテストを書き始めるもう一つの理由です。</target>
        </trans-unit>
        <trans-unit id="adb1db80b8ce0c45dae224e951fae821d27e99d5" translate="yes" xml:space="preserve">
          <source>That said, generic views will have a limit. If you find you&amp;rsquo;re struggling to implement your view as a subclass of a generic view, then you may find it more effective to write just the code you need, using your own class-based or functional views.</source>
          <target state="translated">つまり、一般的なビューには制限があります。ジェネリックビューのサブクラスとしてビューを実装するのに苦労していることがわかった場合は、独自のクラスベースビューまたは機能ビューを使用して、必要なコードだけを記述する方が効果的であると感じるかもしれません。</target>
        </trans-unit>
        <trans-unit id="5dbbec81f2e874f8570f268c854b02ab7b667a94" translate="yes" xml:space="preserve">
          <source>That small bit of model code gives Django a lot of information. With it, Django is able to:</source>
          <target state="translated">この小さなモデルコードは、Django に多くの情報を与えます。それによって Django は以下のことができるようになります。</target>
        </trans-unit>
        <trans-unit id="bffd048ee5d42a28e6af58ccee988aee06a54311" translate="yes" xml:space="preserve">
          <source>That will cause &lt;code&gt;RockNRollConfig&lt;/code&gt; to be used when &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; contains &lt;code&gt;'rock_n_roll'&lt;/code&gt;. This allows you to make use of &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; features without requiring your users to update their &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting. Besides this use case, it&amp;rsquo;s best to avoid using &lt;code&gt;default_app_config&lt;/code&gt; and instead specify the app config class in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; as described next.</source>
          <target state="translated">これにより、&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;に &lt;code&gt;'rock_n_roll'&lt;/code&gt; が含まれている場合に &lt;code&gt;RockNRollConfig&lt;/code&gt; が使用されます。これにより、ユーザーが&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;設定を更新しなくても&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; &lt;/a&gt;機能を利用できるようになります。この使用例に加えて、 &lt;code&gt;default_app_config&lt;/code&gt; の使用を避け、代わりに、次に説明するように、&lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; で&lt;/a&gt;アプリ構成クラスを指定するのが最善です。</target>
        </trans-unit>
        <trans-unit id="82358bc304b59adb1ce477f15ec4d947957f7e4c" translate="yes" xml:space="preserve">
          <source>That would result in a rendered template like this:</source>
          <target state="translated">その結果、このようなレンダリングされたテンプレートになります。</target>
        </trans-unit>
        <trans-unit id="800ac4c0b21ad6254608419b69aaf1e330a8c347" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;ll create a directory &lt;code&gt;polls&lt;/code&gt;, which is laid out like this:</source>
          <target state="translated">これにより、次のように配置されたディレクトリ &lt;code&gt;polls&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="c390e4d250f269cd7cc6cc5a6cf7b4cce799a767" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s a pretty minimal example, but it illustrates the idea nicely. Of course, you&amp;rsquo;ll usually want to do more than just reorder objects. If you want to present a list of books by a particular publisher, you can use the same technique:</source>
          <target state="translated">これはかなり最小限の例ですが、アイデアをうまく​​示しています。もちろん、通常は単にオブジェクトを並べ替えるだけではありません。特定の出版社による書籍のリストを提示したい場合は、同じ手法を使用できます。</target>
        </trans-unit>
        <trans-unit id="d31c753d4cbaf73cda1d28d43de3f946ce9afaa5" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s a pretty minimal example, but it illustrates the idea nicely. You&amp;rsquo;ll usually want to do more than just reorder objects. If you want to present a list of books by a particular publisher, you can use the same technique:</source>
          <target state="translated">これはごくわずかな例ですが、アイデアをうまく​​示しています。通常、オブジェクトを並べ替えるだけでは不十分です。特定の出版社の本のリストを提示したい場合は、同じ手法を使用できます。</target>
        </trans-unit>
        <trans-unit id="64da3894500efeef67df0244845ff37f66a37a6d" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s actually all there is to writing an action! However, we&amp;rsquo;ll take one more optional-but-useful step and give the action a &amp;ldquo;nice&amp;rdquo; title in the admin. By default, this action would appear in the action list as &amp;ldquo;Make published&amp;rdquo; &amp;ndash; the function name, with underscores replaced by spaces. That&amp;rsquo;s fine, but we can provide a better, more human-friendly name by giving the &lt;code&gt;make_published&lt;/code&gt; function a &lt;code&gt;short_description&lt;/code&gt; attribute:</source>
          <target state="translated">アクションを書くために必要なのはこれだけです！ただし、オプションではあるが便利なもう1つの手順を実行し、管理者のアクションに「素敵な」タイトルを付けます。デフォルトでは、このアクションはアクションリストに「Make published」として表示されます。これは、アンダースコアがスペースに置き換えられた関数名です。これで問題ありませんが、 &lt;code&gt;make_published&lt;/code&gt; 関数に &lt;code&gt;short_description&lt;/code&gt; 属性を指定することで、よりわかりやすく、よりわかりやすい名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="bbcb4669308c0fc548b8d6cf52271da06f3d632e" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all the Python code we need to write. We still need to write a template, however. We could explicitly tell the view which template to use by adding a &lt;code&gt;template_name&lt;/code&gt; attribute to the view, but in the absence of an explicit template Django will infer one from the object&amp;rsquo;s name. In this case, the inferred template will be &lt;code&gt;&quot;books/publisher_list.html&quot;&lt;/code&gt; &amp;ndash; the &amp;ldquo;books&amp;rdquo; part comes from the name of the app that defines the model, while the &amp;ldquo;publisher&amp;rdquo; bit is the lowercased version of the model&amp;rsquo;s name.</source>
          <target state="translated">これで、記述する必要があるPythonコードはすべてです。ただし、テンプレートを作成する必要があります。私たちは、明示的にテンプレートを追加することで、使用するビュー言うことができる &lt;code&gt;template_name&lt;/code&gt; ビューに属性を、明示的なテンプレートが存在しない場合にDjangoは、オブジェクトの名前から1を推測します。この場合、推定されるテンプレートは &lt;code&gt;&quot;books/publisher_list.html&quot;&lt;/code&gt; なります。「books」の部分はモデルを定義するアプリの名前に由来し、「publisher」ビットはモデル名の小文字バージョンです。</target>
        </trans-unit>
        <trans-unit id="7cdd2c9d53596117569f6f3457397de9dba7594c" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to do for development.</source>
          <target state="translated">開発に必要なのはこれだけです。</target>
        </trans-unit>
        <trans-unit id="b475ad9547603552f728fc11fc51feba721041c7" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to get started, but the forms framework puts a lot more at your fingertips. Once you understand the basics of the process described above, you should be prepared to understand other features of the forms system and ready to learn a bit more about the underlying machinery.</source>
          <target state="translated">始めるのに必要なのはこれだけですが、フォームフレームワークを使用すると、さらに多くのことを指先で行うことができます。上記のプロセスの基本を理解したら、フォームシステムの他の機能を理解する準備が整い、基礎となる機構についてもう少し学ぶ準備ができているはずです。</target>
        </trans-unit>
        <trans-unit id="c689359d3ba5ee9b9ac46428d1e42a374db404f1" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s because this view is &lt;strong&gt;grossly inefficient&lt;/strong&gt; and probably &lt;strong&gt;insecure&lt;/strong&gt;. This is only intended for local development, and should &lt;strong&gt;never be used in production&lt;/strong&gt;.</source>
          <target state="translated">これは、このビューが&lt;strong&gt;著しく非効率的で&lt;/strong&gt;あり、おそらく&lt;strong&gt;安全ではないため&lt;/strong&gt;です。これはローカルでの開発のみを目的としており&lt;strong&gt;、本番環境では使用しないで&lt;/strong&gt;ください。</target>
        </trans-unit>
        <trans-unit id="07ab28316c8c0e4463f7f1e0bdad9265bb11fa25" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s especially true when automated tests could do this for you in seconds. If something&amp;rsquo;s gone wrong, tests will also assist in identifying the code that&amp;rsquo;s causing the unexpected behavior.</source>
          <target state="translated">自動テストが数秒でこれを実行できる場合は特にそうです。何かがうまくいかない場合、テストは予期しない動作を引き起こしているコードの特定にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="6c507dacfa36a6fb4a0685368ff0d2a258d13a5a" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it &amp;ndash; now your Django install will use Bcrypt as the default storage algorithm.</source>
          <target state="translated">これで完了です。Djangoのインストールでは、デフォルトのストレージアルゴリズムとしてBcryptが使用されます。</target>
        </trans-unit>
        <trans-unit id="41e38b5ea86c7d70cc2fbbb5b84e6d748b15b992" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it &amp;ndash; now your Django install will use more iterations when it stores passwords using PBKDF2.</source>
          <target state="translated">これで完了です。Djangoのインストールでは、PBKDF2を使用してパスワードを保存するときに、より多くの反復が使用されます。</target>
        </trans-unit>
        <trans-unit id="1ea2d6826dd656c26e6a86836a3d9c6a79b1bb14" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it &amp;ndash; you can now &lt;a href=&quot;tutorial01&quot;&gt;move onto the tutorial&lt;/a&gt;.</source>
          <target state="translated">それだけです&amp;ndash;これで&lt;a href=&quot;tutorial01&quot;&gt;チュートリアルに進む&lt;/a&gt;ことができます。</target>
        </trans-unit>
        <trans-unit id="6185938d5bae5d8cc7ee477134ef950f601066fb" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it!</source>
          <target state="translated">それでおしまい！</target>
        </trans-unit>
        <trans-unit id="ce81fa2071e09c61a45e1968c92b799e7f415413" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it. Your translations are ready for use.</source>
          <target state="translated">それでおしまい。翻訳が使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="454d41e6971fa418b635ea4096beaae7dafdd130" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s really all there is to it! If you&amp;rsquo;re itching to write your own actions, you now know enough to get started. The rest of this document covers more advanced techniques.</source>
          <target state="translated">それだけです。独自のアクションを作成するのがむずかしい場合は、今すぐ開始するのに十分な知識があります。このドキュメントの残りの部分では、より高度なテクニックについて説明します。</target>
        </trans-unit>
        <trans-unit id="42920953b658a28d4415f72cd4d0a697f68d9c2d" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s really all there is to it. All the cool features of generic views come from changing the attributes set on the generic view. The &lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;generic views reference&lt;/a&gt; documents all the generic views and their options in detail; the rest of this document will consider some of the common ways you might customize and extend generic views.</source>
          <target state="translated">これですべてです。ジェネリックビューの優れた機能はすべて、ジェネリックビューに設定された属性を変更することから生まれます。&lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;汎用ビューが参照する&lt;/a&gt;文書のすべてを詳細に汎用ビューとそのオプションを。このドキュメントの残りの部分では、一般的なビューをカスタマイズおよび拡張する一般的な方法のいくつかを検討します。</target>
        </trans-unit>
        <trans-unit id="ed003d8ad16a4f03c4ed2b1baba5db5367744573" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s the basic authentication backend that checks the Django users database and queries the built-in permissions. It does not provide protection against brute force attacks via any rate limiting mechanism. You may either implement your own rate limiting mechanism in a custom auth backend, or use the mechanisms provided by most Web servers.</source>
          <target state="translated">これは、Djangoユーザーデータベースをチェックし、組み込みのアクセス許可を照会する基本認証バックエンドです。レート制限メカニズムを介したブルートフォース攻撃に対する保護は提供されません。カスタム認証バックエンドに独自のレート制限メカニズムを実装するか、ほとんどのWebサーバーが提供するメカニズムを使用できます。</target>
        </trans-unit>
        <trans-unit id="44c6875fd2da14e4e48039740c2e68b864eca0b3" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s what &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; is for: it collects static files from each of your applications (and any other places you specify) into a single location that can easily be served in production.</source>
          <target state="translated">これが &lt;code&gt;django.contrib.staticfiles&lt;/code&gt; の目的です。アプリケーション（および指定した他の場所）のそれぞれから静的ファイルを収集して、本番環境で簡単に提供できる単一の場所に集めます。</target>
        </trans-unit>
        <trans-unit id="70a5c41ad0a3b7b943000f801f0941f8b67bb0ca" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s where caching comes in.</source>
          <target state="translated">そこでキャッシングが登場します。</target>
        </trans-unit>
        <trans-unit id="9816316502bb06e8337dbdb06d1fe4edf689f03e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;From:&amp;rdquo; header of the email will be the value of the &lt;a href=&quot;../ref/settings#std:setting-SERVER_EMAIL&quot;&gt;&lt;code&gt;SERVER_EMAIL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">電子メールの「From：」ヘッダーは、&lt;a href=&quot;../ref/settings#std:setting-SERVER_EMAIL&quot;&gt; &lt;code&gt;SERVER_EMAIL&lt;/code&gt; &lt;/a&gt;設定の値になります。</target>
        </trans-unit>
        <trans-unit id="bde6550e7be8abcd02e5140d58371f7e8cb6332b" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;delete selected objects&amp;rdquo; action uses &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;QuerySet.delete()&lt;/code&gt;&lt;/a&gt; for efficiency reasons, which has an important caveat: your model&amp;rsquo;s &lt;code&gt;delete()&lt;/code&gt; method will not be called.</source>
          <target state="translated">「選択したオブジェクトの削除」アクションは、効率上の理由から&lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.delete&quot;&gt; &lt;code&gt;QuerySet.delete()&lt;/code&gt; &lt;/a&gt;を使用しますが、これには重要な警告があります。モデルの &lt;code&gt;delete()&lt;/code&gt; メソッドは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="5058b9e1433099269d84054706fcaefa73ff701c" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;initial migrations&amp;rdquo; for an app are the migrations that create the first version of that app&amp;rsquo;s tables. Usually an app will have one initial migration, but in some cases of complex model interdependencies it may have two or more.</source>
          <target state="translated">アプリの「初期移行」は、そのアプリのテーブルの最初のバージョンを作成する移行です。通常、アプリには最初の移行が1つありますが、複雑なモデルの相互依存関係の場合には、2つ以上の移行がある場合があります。</target>
        </trans-unit>
        <trans-unit id="663a6a8180e11211d8df5754d07dec4cee8071d2" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;no data&amp;rdquo; value for a band is generally a special marker value used to mark pixels that are not valid data. Such pixels should generally not be displayed, nor contribute to analysis operations.</source>
          <target state="translated">バンドの「データなし」の値は、通常、有効なデータではないピクセルをマークするために使用される特別なマーカー値です。そのようなピクセルは一般的に表示されるべきではなく、分析操作に寄与すべきではありません。</target>
        </trans-unit>
        <trans-unit id="070336a12c43e48880c5f6128ef8b5f50b9d218d" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;object_id&amp;rdquo; field doesn&amp;rsquo;t have to be the same type as the primary key fields on the related models, but their primary key values must be coercible to the same type as the &amp;ldquo;object_id&amp;rdquo; field by its &lt;a href=&quot;../models/fields#django.db.models.Field.get_db_prep_value&quot;&gt;&lt;code&gt;get_db_prep_value()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">「object_id」フィールドは、関連モデルの主キーフィールドと同じタイプである必要はありませんが、その主キー値は、&lt;a href=&quot;../models/fields#django.db.models.Field.get_db_prep_value&quot;&gt; &lt;code&gt;get_db_prep_value()&lt;/code&gt; &lt;/a&gt;メソッドによって「object_id」フィールドと同じタイプに強制的に変換できる必要があります。</target>
        </trans-unit>
        <trans-unit id="5aa4ebf307e26a41dd3054650df3b70a6946d53e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;other side&amp;rdquo; of a &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; relation. That is:</source>
          <target state="translated">&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;関係の「反対側」。あれは：</target>
        </trans-unit>
        <trans-unit id="20f1d4d80d9d416c35bc77d26f605a694a944d39" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;sites&amp;rdquo; framework</source>
          <target state="translated">「サイト」フレームワーク</target>
        </trans-unit>
        <trans-unit id="dbd01796ededee1d43c8a7a56fa1b333797d54ef" translate="yes" xml:space="preserve">
          <source>The 1-based page number for this page.</source>
          <target state="translated">このページの1ベースのページ番号です。</target>
        </trans-unit>
        <trans-unit id="8ceaa234e93148fdb419fcf63809ee112c32e852" translate="yes" xml:space="preserve">
          <source>The 400 (bad request) view</source>
          <target state="translated">400(悪い要求)の見方</target>
        </trans-unit>
        <trans-unit id="9b5a2ee1ce8018db9a7ab39626a920ede7dc260f" translate="yes" xml:space="preserve">
          <source>The 403 (HTTP Forbidden) view</source>
          <target state="translated">403 (HTTP Forbidden)ビュー</target>
        </trans-unit>
        <trans-unit id="f6fc38ea70a8d7612bb7c8f76e591f75cfbc5ea0" translate="yes" xml:space="preserve">
          <source>The 404 (page not found) view</source>
          <target state="translated">404 (ページが見つからない)ビュー</target>
        </trans-unit>
        <trans-unit id="225218fd277cf55ba683aa0252a36ee431de2158" translate="yes" xml:space="preserve">
          <source>The 404 view is also called if Django doesn&amp;rsquo;t find a match after checking every regular expression in the URLconf.</source>
          <target state="translated">404ビューは、DjangoがURLconf内のすべての正規表現をチェックしても一致が見つからない場合にも呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2f004c5f0621cf5d2c07ccc7c5a7960b66241433" translate="yes" xml:space="preserve">
          <source>The 404 view is passed a &lt;a href=&quot;templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; and will have access to variables supplied by your template context processors (e.g. &lt;code&gt;MEDIA_URL&lt;/code&gt;).</source>
          <target state="translated">404ビューが渡されます&lt;a href=&quot;templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; の&lt;/a&gt;とテンプレートのコンテキストプロセッサ（例えばにより供給された変数へのアクセスがあります &lt;code&gt;MEDIA_URL&lt;/code&gt; を）。</target>
        </trans-unit>
        <trans-unit id="233a9dc1ed1bfdad61414d358748edd894d6580c" translate="yes" xml:space="preserve">
          <source>The 500 (server error) view</source>
          <target state="translated">500 (サーバーエラー)ビュー</target>
        </trans-unit>
        <trans-unit id="3d5d68a6b5f194b8ab8610b8281f0d1e8bc9628c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#admin-overriding-templates&quot;&gt;Overriding admin templates&lt;/a&gt; section describes how to override or extend the default admin templates. Use the following options to override the default templates used by the &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; views:</source>
          <target state="translated">「&lt;a href=&quot;#admin-overriding-templates&quot;&gt;管理テンプレートの&lt;/a&gt;上書き」セクションでは、デフォルトの管理テンプレートを上書きまたは拡張する方法について説明します。次のオプションを使用して、&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt;ビューで使用されるデフォルトのテンプレートを上書きします。</target>
        </trans-unit>
        <trans-unit id="e7bcbf10c633d318f5275b1616c827fcd901be2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command calls the &lt;a href=&quot;#django.contrib.staticfiles.storage.StaticFilesStorage.post_process&quot;&gt;&lt;code&gt;post_process()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../settings#std:setting-STATICFILES_STORAGE&quot;&gt;&lt;code&gt;STATICFILES_STORAGE&lt;/code&gt;&lt;/a&gt; after each run and passes a list of paths that have been found by the management command. It also receives all command line options of &lt;a href=&quot;#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt;. This is used by the &lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">&lt;a href=&quot;#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;管理コマンドは、呼び出し&lt;a href=&quot;#django.contrib.staticfiles.storage.StaticFilesStorage.post_process&quot;&gt; &lt;code&gt;post_process()&lt;/code&gt; &lt;/a&gt;のメソッド&lt;a href=&quot;../settings#std:setting-STATICFILES_STORAGE&quot;&gt; &lt;code&gt;STATICFILES_STORAGE&lt;/code&gt; を&lt;/a&gt;それぞれ実行した後、管理コマンドによって発見された経路のリストを渡します。それはまた、すべてのコマンドラインオプション受ける&lt;a href=&quot;#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; を&lt;/a&gt;。これは、デフォルトで&lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt; &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; &lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="6c18aac331e3d27e374da3e6934267353557b292" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django-admin-dumpdata&quot;&gt;&lt;code&gt;dumpdata&lt;/code&gt;&lt;/a&gt; command can be used to generate input for &lt;code&gt;loaddata&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django-admin-dumpdata&quot;&gt; &lt;code&gt;dumpdata&lt;/code&gt; の&lt;/a&gt;コマンドが入力を生成するために使用することができ &lt;code&gt;loaddata&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="77fb9e8fa77f6bd9569778a70c5f0d9126b3860d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django-server-logger&quot;&gt;django.server&lt;/a&gt; logger sends messages at the &lt;code&gt;INFO&lt;/code&gt; level or higher to the console.</source>
          <target state="translated">&lt;a href=&quot;#django-server-logger&quot;&gt;django.serverの&lt;/a&gt;ロガーはでメッセージを送信 &lt;code&gt;INFO&lt;/code&gt; のコンソールにレベル以上。</target>
        </trans-unit>
        <trans-unit id="205fe6f0886e01afcabc444b9dfbce747b6e7755" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.apps.AppConfig&quot;&gt;&lt;code&gt;AppConfig&lt;/code&gt;&lt;/a&gt; class used to configure the application has a &lt;a href=&quot;#django.apps.AppConfig.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; class attribute, which is the absolute directory path Django will use as the single base path for the application.</source>
          <target state="translated">&lt;a href=&quot;#django.apps.AppConfig&quot;&gt; &lt;code&gt;AppConfig&lt;/code&gt; の&lt;/a&gt;アプリケーションを構成するために使用されるクラスが有する&lt;a href=&quot;#django.apps.AppConfig.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt; Djangoはアプリケーションのための単一のベースパスとして使用する絶対ディレクトリパスであるクラス属性を、。</target>
        </trans-unit>
        <trans-unit id="c75e85febd79e1123be7fcefdb5b29a58ca50a7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; provides the following named URL patterns:</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; は、&lt;/a&gt;次の名前付きURLパターンが用意されています。</target>
        </trans-unit>
        <trans-unit id="24ff1f105c4ea53b3a40674800427a57a5c461e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; class requires jQuery by default, so there is no need to add jQuery to your &lt;code&gt;ModelAdmin&lt;/code&gt;&amp;rsquo;s list of media resources unless you have a specific need. For example, if you require the jQuery library to be in the global namespace (for example when using third-party jQuery plugins) or if you need a newer version of jQuery, you will have to include your own copy.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; のの&lt;/a&gt;クラスは、デフォルトではjQueryを必要とするので、あなたにはjQueryを追加する必要はありません &lt;code&gt;ModelAdmin&lt;/code&gt; の特定のニーズを持っていない限り、メディアリソースののリストが。たとえば、jQueryライブラリをグローバル名前空間に含める必要がある場合（サードパーティのjQueryプラグインを使用する場合など）、または新しいバージョンのjQueryが必要な場合は、独自のコピーを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="58fcb0270a7eef62d1435ce84e6b4090b60feb5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model has a custom manager that has the following helper methods (in addition to the methods provided by &lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.BaseUserManager&quot;&gt;&lt;code&gt;BaseUserManager&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;モデルは（によって提供された方法に加えて、以下のヘルパーメソッド持つカスタムマネージャー持つ&lt;a href=&quot;../../topics/auth/customizing#django.contrib.auth.models.BaseUserManager&quot;&gt; &lt;code&gt;BaseUserManager&lt;/code&gt; を&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="70d66b6896e1917b11974971bf2ef497d078305b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.auth.models.User.username&quot;&gt;&lt;code&gt;username&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.auth.models.User.password&quot;&gt;&lt;code&gt;password&lt;/code&gt;&lt;/a&gt; are set as given. The domain portion of &lt;a href=&quot;#django.contrib.auth.models.User.email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; is automatically converted to lowercase, and the returned &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; object will have &lt;a href=&quot;#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.models.User.username&quot;&gt; &lt;code&gt;username&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#django.contrib.auth.models.User.password&quot;&gt; &lt;code&gt;password&lt;/code&gt; &lt;/a&gt;与えられるように設定されています。&lt;a href=&quot;#django.contrib.auth.models.User.email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;のドメイン部分は自動的に小文字に変換され、返される&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;オブジェクトは&lt;a href=&quot;#django.contrib.auth.models.User.is_active&quot;&gt; &lt;code&gt;is_active&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;True&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="1569586e8a6dd5e32f78dc8440682f6b0d6efcac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt;&lt;code&gt;GenericInlineModelAdmin&lt;/code&gt;&lt;/a&gt; class inherits all properties from an &lt;a href=&quot;admin/index#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt; class. However, it adds a couple of its own for working with the generic relation:</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt; &lt;code&gt;GenericInlineModelAdmin&lt;/code&gt; の&lt;/a&gt;クラスからすべてのプロパティを継承し&lt;a href=&quot;admin/index#django.contrib.admin.InlineModelAdmin&quot;&gt; &lt;code&gt;InlineModelAdmin&lt;/code&gt; の&lt;/a&gt;クラス。ただし、一般的な関係を操作するために独自のものがいくつか追加されます。</target>
        </trans-unit>
        <trans-unit id="930d94452068a4e7093d8b29b29db44c3180bfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt;&lt;code&gt;get_for_model()&lt;/code&gt;&lt;/a&gt; method is especially useful when you know you need to work with a &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; but don&amp;rsquo;t want to go to the trouble of obtaining the model&amp;rsquo;s metadata to perform a manual lookup:</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager.get_for_model&quot;&gt; &lt;code&gt;get_for_model()&lt;/code&gt; &lt;/a&gt;あなたがで作業する必要が知っているときの方法は、特に便利です&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; を&lt;/a&gt;しかし、手動検索を実行するために、モデルのメタデータを取得するトラブルに行きたくありません。</target>
        </trans-unit>
        <trans-unit id="8fbf50cafd75c6ab7df5bd52bc8658fadc09a916" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt; can do all of the work.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt; &lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt; は、&lt;/a&gt;すべての作業を行うことができます。</target>
        </trans-unit>
        <trans-unit id="b1a58f7e3a08213f1099f37460cb022f19ed3b6a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.flatpages.sitemaps.FlatPageSitemap&quot;&gt;&lt;code&gt;sitemaps.FlatPageSitemap&lt;/code&gt;&lt;/a&gt; class looks at all publicly visible &lt;a href=&quot;#module-django.contrib.flatpages&quot;&gt;&lt;code&gt;flatpages&lt;/code&gt;&lt;/a&gt; defined for the current &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; (see the &lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;sites documentation&lt;/code&gt;&lt;/a&gt;) and creates an entry in the sitemap. These entries include only the &lt;a href=&quot;sitemaps#django.contrib.sitemaps.Sitemap.location&quot;&gt;&lt;code&gt;location&lt;/code&gt;&lt;/a&gt; attribute &amp;ndash; not &lt;a href=&quot;sitemaps#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt;&lt;code&gt;lastmod&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sitemaps#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt;&lt;code&gt;changefreq&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sitemaps#django.contrib.sitemaps.Sitemap.priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.flatpages.sitemaps.FlatPageSitemap&quot;&gt; &lt;code&gt;sitemaps.FlatPageSitemap&lt;/code&gt; の&lt;/a&gt;すべて公開さでクラスのルックス&lt;a href=&quot;#module-django.contrib.flatpages&quot;&gt; &lt;code&gt;flatpages&lt;/code&gt; &lt;/a&gt;現在のために定義された&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;（参照&lt;a href=&quot;sites#module-django.contrib.sites&quot;&gt; &lt;code&gt;sites documentation&lt;/code&gt; &lt;/a&gt;）し、サイトマップにエントリを作成します。これらのエントリには、&lt;a href=&quot;sitemaps#django.contrib.sitemaps.Sitemap.location&quot;&gt; &lt;code&gt;location&lt;/code&gt; &lt;/a&gt;属性のみが含まれます&lt;a href=&quot;sitemaps#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt; &lt;code&gt;lastmod&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;sitemaps#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt; &lt;code&gt;changefreq&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;sitemaps#django.contrib.sitemaps.Sitemap.priority&quot;&gt; &lt;code&gt;priority&lt;/code&gt; &lt;/a&gt;は含まれません。</target>
        </trans-unit>
        <trans-unit id="976d6231fac29a2fdd43b178fbafb53b71ee57cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.gis.forms.widgets.OpenLayersWidget&quot;&gt;&lt;code&gt;OpenLayersWidget&lt;/code&gt;&lt;/a&gt; note about JavaScript file hosting above also applies here. See also this &lt;a href=&quot;https://help.openstreetmap.org/questions/10920/how-to-embed-a-map-in-my-https-site&quot;&gt;FAQ answer&lt;/a&gt; about &lt;code&gt;https&lt;/code&gt; access to map tiles.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.forms.widgets.OpenLayersWidget&quot;&gt; &lt;code&gt;OpenLayersWidget&lt;/code&gt; の&lt;/a&gt; JavaScriptファイルは、上記のホスティングに関する注意事項もここに適用されます。マップタイルへの &lt;code&gt;https&lt;/code&gt; アクセスに関するこの&lt;a href=&quot;https://help.openstreetmap.org/questions/10920/how-to-embed-a-map-in-my-https-site&quot;&gt;FAQ回答&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="1b03baba97f3c3395a00e87a3bc24195c0cf7d4c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt;&lt;code&gt;GeoIP2&lt;/code&gt;&lt;/a&gt; object is a wrapper for the &lt;a href=&quot;https://geoip2.readthedocs.io/&quot;&gt;MaxMind geoip2 Python library&lt;/a&gt;. &lt;a href=&quot;#id6&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt; &lt;code&gt;GeoIP2&lt;/code&gt; の&lt;/a&gt;オブジェクトがラッパーです&lt;a href=&quot;https://geoip2.readthedocs.io/&quot;&gt;MaxMind geoip2 Pythonライブラリ&lt;/a&gt;。&lt;a href=&quot;#id6&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad08113baee47b140a517c91fe0b90cde3ca8fd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; equality operator uses &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.equals_exact&quot;&gt;&lt;code&gt;equals_exact()&lt;/code&gt;&lt;/a&gt;, not &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.equals&quot;&gt;&lt;code&gt;equals()&lt;/code&gt;&lt;/a&gt;, i.e. it requires the compared geometries to have the same coordinates in the same positions with the same SRIDs:</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; の&lt;/a&gt;等価オペレータ用途は&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.equals_exact&quot;&gt; &lt;code&gt;equals_exact()&lt;/code&gt; &lt;/a&gt;、ない&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.equals&quot;&gt; &lt;code&gt;equals()&lt;/code&gt; &lt;/a&gt;、即ち、それは同じのSRIDと同じ位置で同じ座標を有するように比べジオメトリを必要とします。</target>
        </trans-unit>
        <trans-unit id="1d8ec629be5671a5dde8dcc4820b65f0294d3080" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt; class provides a way to map the contents of vector spatial data files (e.g. shapefiles) into GeoDjango models.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; &lt;/a&gt;クラスはGeoDjangoモデルにベクトル空間データファイル（例えばシェープファイル）の内容をマッピングする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="1bf1944b981263db019523c1922b581d0c5ce335" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt;&lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt;&lt;/a&gt; does all of the work. Each time any Django application raises a 404 error, this middleware checks the redirects database for the requested URL as a last resort. Specifically, it checks for a redirect with the given &lt;code&gt;old_path&lt;/code&gt; with a site ID that corresponds to the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.redirects.middleware.RedirectFallbackMiddleware&quot;&gt; &lt;code&gt;RedirectFallbackMiddleware&lt;/code&gt; は、&lt;/a&gt;すべての作業を行います。 Djangoアプリケーションで404エラーが発生するたびに、このミドルウェアはリダイレクトデータベースをチェックして、最後の手段として要求されたURLを探します。具体的には、&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt;設定に対応するサイトIDを持つ指定された &lt;code&gt;old_path&lt;/code&gt; のリダイレクトをチェックします。</target>
        </trans-unit>
        <trans-unit id="8d25fe9e16904d30a9d1e8ade5a35554db949683" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.sitemaps.GenericSitemap&quot;&gt;&lt;code&gt;django.contrib.sitemaps.GenericSitemap&lt;/code&gt;&lt;/a&gt; class allows you to create a sitemap by passing it a dictionary which has to contain at least a &lt;code&gt;queryset&lt;/code&gt; entry. This queryset will be used to generate the items of the sitemap. It may also have a &lt;code&gt;date_field&lt;/code&gt; entry that specifies a date field for objects retrieved from the &lt;code&gt;queryset&lt;/code&gt;. This will be used for the &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt;&lt;code&gt;lastmod&lt;/code&gt;&lt;/a&gt; attribute in the generated sitemap.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.sitemaps.GenericSitemap&quot;&gt; &lt;code&gt;django.contrib.sitemaps.GenericSitemap&lt;/code&gt; の&lt;/a&gt;クラスは、少なくとも含有しなければならない辞書を渡すことで、サイトマップを作成することができます &lt;code&gt;queryset&lt;/code&gt; エントリを。このクエリセットは、サイトマップのアイテムを生成するために使用されます。また、 &lt;code&gt;queryset&lt;/code&gt; から取得したオブジェクトの日付フィールドを指定する &lt;code&gt;date_field&lt;/code&gt; エントリがある場合もあります。これは、生成されたサイトマップの&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt; &lt;code&gt;lastmod&lt;/code&gt; &lt;/a&gt;属性に使用されます。</target>
        </trans-unit>
        <trans-unit id="c6855c901496386e03eb1c169232e64b97e3e0bf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt;&lt;code&gt;changefreq&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt; keyword arguments allow specifying these attributes for all URLs.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.priority&quot;&gt; &lt;code&gt;priority&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt; &lt;code&gt;changefreq&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.protocol&quot;&gt; &lt;code&gt;protocol&lt;/code&gt; &lt;/a&gt;キーワード引数は、すべてのURLのためにこれらの属性を指定することができます。</target>
        </trans-unit>
        <trans-unit id="3c9d2e5c8919fbc45132133f27dfd99f249e7506" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt;&lt;code&gt;ping_google()&lt;/code&gt;&lt;/a&gt; command only works if you have registered your site with &lt;a href=&quot;https://www.google.com/webmasters/tools/&quot;&gt;Google Webmaster Tools&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt; &lt;code&gt;ping_google()&lt;/code&gt; &lt;/a&gt;コマンドは、あなたとあなたのサイトを登録している場合は動作します&lt;a href=&quot;https://www.google.com/webmasters/tools/&quot;&gt;Googleのウェブマスターツール&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ec9c02de90f46acb26d3cf0c5fe5eacf431a9ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.sitemaps.views.sitemap&quot;&gt;&lt;code&gt;django.contrib.sitemaps.views.sitemap()&lt;/code&gt;&lt;/a&gt; view should take a &lt;code&gt;section&lt;/code&gt; keyword argument.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.sitemaps.views.sitemap&quot;&gt; &lt;code&gt;django.contrib.sitemaps.views.sitemap()&lt;/code&gt; &lt;/a&gt;ビューが取るべき &lt;code&gt;section&lt;/code&gt; キーワード引数を。</target>
        </trans-unit>
        <trans-unit id="00461ba935e4732ff4f725c4a3fb38788dd254be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt; uses this behind the scenes to replace the paths with their hashed counterparts and update the cache appropriately.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt; &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; は、&lt;/a&gt;彼らのハッシュ化されたカウンターパートとパスを交換し、適切にキャッシュを更新するために舞台裏でこれを使用しています。</target>
        </trans-unit>
        <trans-unit id="5807ef893b888da390ced00f3be8ad423d972066" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.FieldError&quot;&gt;&lt;code&gt;FieldError&lt;/code&gt;&lt;/a&gt; exception is raised when there is a problem with a model field. This can happen for several reasons:</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.FieldError&quot;&gt; &lt;code&gt;FieldError&lt;/code&gt; の&lt;/a&gt;モデルフィールドに問題がある場合に例外が発生します。これにはいくつかの理由が考えられます。</target>
        </trans-unit>
        <trans-unit id="08eb59e15ba839910537a780ef53d936d8656497" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception is raised when Django is somehow improperly configured &amp;ndash; for example, if a value in &lt;code&gt;settings.py&lt;/code&gt; is incorrect or unparseable.</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.ImproperlyConfigured&quot;&gt; &lt;code&gt;ImproperlyConfigured&lt;/code&gt; &lt;/a&gt;例えばの値ならば、 -ジャンゴが何とか不適切に設定されている場合に例外が発生し &lt;code&gt;settings.py&lt;/code&gt; が正しくないか、解析できないです。</target>
        </trans-unit>
        <trans-unit id="c4d856f27fc274b9c94fa28e6c5f4e32834f477c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.MiddlewareNotUsed&quot;&gt;&lt;code&gt;MiddlewareNotUsed&lt;/code&gt;&lt;/a&gt; exception is raised when a middleware is not used in the server configuration.</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.MiddlewareNotUsed&quot;&gt; &lt;code&gt;MiddlewareNotUsed&lt;/code&gt; の&lt;/a&gt;ミドルウェアは、サーバー構成で使用されていない場合に例外が発生します。</target>
        </trans-unit>
        <trans-unit id="2aea3bcd201c6c300edfdae4bce2881f6f70110a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.MultipleObjectsReturned&quot;&gt;&lt;code&gt;MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt; exception is raised by a query if only one object is expected, but multiple objects are returned. A base version of this exception is provided in &lt;a href=&quot;#module-django.core.exceptions&quot;&gt;&lt;code&gt;django.core.exceptions&lt;/code&gt;&lt;/a&gt;; each model class contains a subclassed version that can be used to identify the specific object type that has returned multiple objects.</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.MultipleObjectsReturned&quot;&gt; &lt;code&gt;MultipleObjectsReturned&lt;/code&gt; の&lt;/a&gt; 1つのオブジェクトのみが期待されている場合は例外が、クエリによって提起されたが、複数のオブジェクトが返されます。この例外の基本バージョンは&lt;a href=&quot;#module-django.core.exceptions&quot;&gt; &lt;code&gt;django.core.exceptions&lt;/code&gt; &lt;/a&gt;で提供されています。各モデルクラスには、複数のオブジェクトを返した特定のオブジェクトタイプを識別するために使用できるサブクラスバージョンが含まれています。</target>
        </trans-unit>
        <trans-unit id="2df4f0dea240ffa2556f1307d0618d99f64ee9f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt; exception is raised when a user does not have permission to perform the action requested.</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.PermissionDenied&quot;&gt; &lt;code&gt;PermissionDenied&lt;/code&gt; の&lt;/a&gt;ユーザーが要求されたアクションを実行する権限を持っていない時に例外が発生します。</target>
        </trans-unit>
        <trans-unit id="5236e890510771e6c65be5d890bb2fc46dc88206" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.RequestAborted&quot;&gt;&lt;code&gt;RequestAborted&lt;/code&gt;&lt;/a&gt; exception is raised when a HTTP body being read in by the handler is cut off midstream and the client connection closes, or when the client does not send data and hits a timeout where the server closes the connection.</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.RequestAborted&quot;&gt; &lt;code&gt;RequestAborted&lt;/code&gt; の&lt;/a&gt; HTTP本体が中流とクライアントの接続が閉じ切断され、またはクライアントがデータを送信し、サーバーは接続を閉じ、タイムアウトにヒットしない場合にハンドラによってで読まれたときに例外が発生します。</target>
        </trans-unit>
        <trans-unit id="48bdd0cc14b0cbaacbe1147257c65cc55302c144" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.SuspiciousOperation&quot;&gt;&lt;code&gt;SuspiciousOperation&lt;/code&gt;&lt;/a&gt; exception is raised when a user has performed an operation that should be considered suspicious from a security perspective, such as tampering with a session cookie. Subclasses of &lt;code&gt;SuspiciousOperation&lt;/code&gt; include:</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.SuspiciousOperation&quot;&gt; &lt;code&gt;SuspiciousOperation&lt;/code&gt; の&lt;/a&gt;ユーザは、セッション・クッキーの改ざんとして、セキュリティの観点から、不審な考慮すべき操作を行ったときに例外が発生します。 &lt;code&gt;SuspiciousOperation&lt;/code&gt; のサブクラスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="63869f0c1b3cd05cde2274e43d9fa6ad163310a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.SynchronousOnlyOperation&quot;&gt;&lt;code&gt;SynchronousOnlyOperation&lt;/code&gt;&lt;/a&gt; exception is raised when code that is only allowed in synchronous Python code is called from an asynchronous context (a thread with a running asynchronous event loop). These parts of Django are generally heavily reliant on thread-safety to function and don&amp;rsquo;t work correctly under coroutines sharing the same thread.</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.SynchronousOnlyOperation&quot;&gt; &lt;code&gt;SynchronousOnlyOperation&lt;/code&gt; に&lt;/a&gt;のみ同期Pythonコードで許可されているコードは、非同期コンテキスト（実行非同期イベントループとスレッド）から呼び出されたときに例外が発生します。Djangoのこれらの部分は、一般に機能するためにスレッドセーフに大きく依存しており、同じスレッドを共有するコルーチンでは正しく機能しません。</target>
        </trans-unit>
        <trans-unit id="c0df17795b1a187f135b818ffb0610f92d8e948f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; exception is raised when data fails form or model field validation. For more information about validation, see &lt;a href=&quot;forms/validation&quot;&gt;Form and Field Validation&lt;/a&gt;, &lt;a href=&quot;models/instances#validating-objects&quot;&gt;Model Field Validation&lt;/a&gt; and the &lt;a href=&quot;validators&quot;&gt;Validator Reference&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; をの&lt;/a&gt;データがフォームまたはモデルフィールド検証を失敗したときに例外が発生します。検証の詳細については、「&lt;a href=&quot;forms/validation&quot;&gt;フォームとフィールドの検証」&lt;/a&gt;、「&lt;a href=&quot;models/instances#validating-objects&quot;&gt;モデルフィールドの検証」&lt;/a&gt;、および「&lt;a href=&quot;validators&quot;&gt;バリデーターリファレンス」を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ac200645906bbdbf891599c7e44ef5c649d1cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.exceptions.ViewDoesNotExist&quot;&gt;&lt;code&gt;ViewDoesNotExist&lt;/code&gt;&lt;/a&gt; exception is raised by &lt;a href=&quot;urlresolvers#module-django.urls&quot;&gt;&lt;code&gt;django.urls&lt;/code&gt;&lt;/a&gt; when a requested view does not exist.</source>
          <target state="translated">&lt;a href=&quot;#django.core.exceptions.ViewDoesNotExist&quot;&gt; &lt;code&gt;ViewDoesNotExist&lt;/code&gt; の&lt;/a&gt;例外がで発生し&lt;a href=&quot;urlresolvers#module-django.urls&quot;&gt; &lt;code&gt;django.urls&lt;/code&gt; &lt;/a&gt;要求されたビューが存在しないとき。</target>
        </trans-unit>
        <trans-unit id="bf0d82f2103c79bef15a3b0eadc8ff87e72b63c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class is a thin wrapper around a Python &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; with some Django-specific additions. Internally, Django uses this class when it needs to represent a file.</source>
          <target state="translated">&lt;a href=&quot;#django.core.files.File&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;クラスはPythonの薄いラッパで&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;いくつかのDjangoの固有の追加と。内部的には、Djangoはファイルを表す必要があるときにこのクラスを使用します。</target>
        </trans-unit>
        <trans-unit id="92713ac6d542470f46874a5de111377028709f07" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.files.storage.FileSystemStorage&quot;&gt;&lt;code&gt;FileSystemStorage&lt;/code&gt;&lt;/a&gt; class implements basic file storage on a local filesystem. It inherits from &lt;a href=&quot;#django.core.files.storage.Storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; and provides implementations for all the public methods thereof.</source>
          <target state="translated">&lt;a href=&quot;#django.core.files.storage.FileSystemStorage&quot;&gt; &lt;code&gt;FileSystemStorage&lt;/code&gt; の&lt;/a&gt;クラスには、ローカルのファイルシステム上の基本的なファイルストレージを実装しています。&lt;a href=&quot;#django.core.files.storage.Storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;を継承し、すべてのパブリックメソッドの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="3c01be0471569c57192a09a290d29e6abceb94cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.files.storage.Storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; class provides a standardized API for storing files, along with a set of default behaviors that all other storage systems can inherit or override as necessary.</source>
          <target state="translated">&lt;a href=&quot;#django.core.files.storage.Storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;クラスは、他のすべてのストレージシステムが継承するか、必要に応じてオーバーライドできるデフォルトの動作のセットと一緒に、ファイルを保存するための標準化されたAPIを提供します。</target>
        </trans-unit>
        <trans-unit id="226678acd63129786ca8c149aba197b2e61e9fda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class is initialized with the following parameters (in the given order, if positional arguments are used). All parameters are optional and can be set at any time prior to calling the &lt;code&gt;send()&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のの&lt;/a&gt;（固定引数が使用される場合、所定の順序で）クラスは、以下のパラメータで初期化されます。すべてのパラメーターはオプションであり、 &lt;code&gt;send()&lt;/code&gt; メソッドを呼び出す前にいつでも設定できます。</target>
        </trans-unit>
        <trans-unit id="20da1e692ed9acff011d3343808b92ab6c7d63f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.mail.get_connection&quot;&gt;&lt;code&gt;get_connection()&lt;/code&gt;&lt;/a&gt; function in &lt;code&gt;django.core.mail&lt;/code&gt; returns an instance of the email backend that you can use.</source>
          <target state="translated">&lt;a href=&quot;#django.core.mail.get_connection&quot;&gt; &lt;code&gt;get_connection()&lt;/code&gt; &lt;/a&gt;関数 &lt;code&gt;django.core.mail&lt;/code&gt; は、あなたが使用できる電子メールのバックエンドのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="9564fa1d77014b7f9adc23d66cb5bd3f6cfaaf4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt;&lt;code&gt;Paginator.page()&lt;/code&gt;&lt;/a&gt; method raises an exception if the requested page is invalid (i.e. not an integer) or contains no objects. Generally, it&amp;rsquo;s enough to catch the &lt;code&gt;InvalidPage&lt;/code&gt; exception, but if you&amp;rsquo;d like more granularity, you can catch either of the following exceptions:</source>
          <target state="translated">&lt;a href=&quot;#django.core.paginator.Paginator.page&quot;&gt; &lt;code&gt;Paginator.page()&lt;/code&gt; &lt;/a&gt;メソッドは、要求されたページ（すなわちない整数）無効である場合に例外を発生させたりオブジェクトが含まれていません。通常は、 &lt;code&gt;InvalidPage&lt;/code&gt; 例外をキャッチするだけで十分ですが、さらに細かく設定したい場合は、次のいずれかの例外をキャッチできます。</target>
        </trans-unit>
        <trans-unit id="f3fc92a7a2c6b68344defb9b4e4f2f12916e79a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.db.models.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt; class is sometimes mixed up with the &lt;a href=&quot;#django.db.models.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt; class. Although they both represent real numbers, they represent those numbers differently. &lt;code&gt;FloatField&lt;/code&gt; uses Python&amp;rsquo;s &lt;code&gt;float&lt;/code&gt; type internally, while &lt;code&gt;DecimalField&lt;/code&gt; uses Python&amp;rsquo;s &lt;code&gt;Decimal&lt;/code&gt; type. For information on the difference between the two, see Python&amp;rsquo;s documentation for the &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#module-decimal&quot;&gt;&lt;code&gt;decimal&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.FloatField&quot;&gt; &lt;code&gt;FloatField&lt;/code&gt; の&lt;/a&gt;クラスは時々と混同され&lt;a href=&quot;#django.db.models.DecimalField&quot;&gt; &lt;code&gt;DecimalField&lt;/code&gt; はの&lt;/a&gt;クラス。どちらも実数を表しますが、それらの数値の表現は異なります。 &lt;code&gt;FloatField&lt;/code&gt; は内部でPythonの &lt;code&gt;float&lt;/code&gt; 型を使用し、 &lt;code&gt;DecimalField&lt;/code&gt; はPythonの &lt;code&gt;Decimal&lt;/code&gt; 型を使用します。2つの違いについては、&lt;a href=&quot;https://docs.python.org/3/library/decimal.html#module-decimal&quot;&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;/a&gt;モジュールに関するPythonのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="eb5df204d3a3efe15a2c4337ecaf3fd465128cf0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class has a couple of hooks you can use to add &lt;code&gt;class&lt;/code&gt; attributes to required rows or to rows with errors: set the &lt;a href=&quot;#django.forms.Form.error_css_class&quot;&gt;&lt;code&gt;Form.error_css_class&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#django.forms.Form.required_css_class&quot;&gt;&lt;code&gt;Form.required_css_class&lt;/code&gt;&lt;/a&gt; attributes:</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;クラスには、追加するために使用できるフックのカップル持っている &lt;code&gt;class&lt;/code&gt; 設定：必要な行またはエラーのある行に属性を&lt;a href=&quot;#django.forms.Form.error_css_class&quot;&gt; &lt;code&gt;Form.error_css_class&lt;/code&gt; &lt;/a&gt;および/または&lt;a href=&quot;#django.forms.Form.required_css_class&quot;&gt; &lt;code&gt;Form.required_css_class&lt;/code&gt; の&lt;/a&gt;属性：</target>
        </trans-unit>
        <trans-unit id="477219541e8b5ef1bad9d48455cc48b523adff1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance this &lt;a href=&quot;#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt; is bound to.</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;このインスタンス&lt;a href=&quot;#django.forms.BoundField&quot;&gt; &lt;code&gt;BoundField&lt;/code&gt; が&lt;/a&gt;にバインドされています。</target>
        </trans-unit>
        <trans-unit id="29898159e2999eec714ab514a40da926c951a35e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;get_host()&lt;/code&gt;&lt;/a&gt; method fails when the host is behind multiple proxies. One solution is to use middleware to rewrite the proxy headers, as in the following example:</source>
          <target state="translated">&lt;a href=&quot;#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;get_host()&lt;/code&gt; &lt;/a&gt;ホストが複数のプロキシの背後にあるとき、メソッドは失敗します。1つの解決策は、次の例のように、ミドルウェアを使用してプロキシヘッダーを書き換えることです。</target>
        </trans-unit>
        <trans-unit id="24cd4c851fa510d8a50b1b76eccb28d5a7a77244" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; class lives in the &lt;a href=&quot;#module-django.http&quot;&gt;&lt;code&gt;django.http&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;クラスはに住んでいる&lt;a href=&quot;#module-django.http&quot;&gt; &lt;code&gt;django.http&lt;/code&gt; の&lt;/a&gt;モジュール。</target>
        </trans-unit>
        <trans-unit id="698d841d696044287e9d236392beed58387a7363" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt;&lt;code&gt;StreamingHttpResponse&lt;/code&gt;&lt;/a&gt; class is used to stream a response from Django to the browser. You might want to do this if generating the response takes too long or uses too much memory. For instance, it&amp;rsquo;s useful for &lt;a href=&quot;../howto/outputting-csv#streaming-csv-files&quot;&gt;generating large CSV files&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt; &lt;code&gt;StreamingHttpResponse&lt;/code&gt; の&lt;/a&gt;クラスは、ブラウザへのジャンゴからの応答をストリーミングするために使用されています。応答の生成に時間がかかりすぎたり、メモリを使いすぎたりする場合は、これを行うことができます。たとえば、&lt;a href=&quot;../howto/outputting-csv#streaming-csv-files&quot;&gt;大きなCSVファイル&lt;/a&gt;を生成する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="0ad7ebee4630a8893a5335c04b34c9cba99fa0e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt;&lt;code&gt;StreamingHttpResponse&lt;/code&gt;&lt;/a&gt; is not a subclass of &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;, because it features a slightly different API. However, it is almost identical, with the following notable differences:</source>
          <target state="translated">&lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt; &lt;code&gt;StreamingHttpResponse&lt;/code&gt; は&lt;/a&gt;のサブクラスではない&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;それがわずかに異なるAPIを備えているため、。ただし、ほとんど同じですが、以下の顕著な違いがあります。</target>
        </trans-unit>
        <trans-unit id="9254138a38ccc6ad98b4948423cdbeb0d7296f3b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.test.RequestFactory&quot;&gt;&lt;code&gt;RequestFactory&lt;/code&gt;&lt;/a&gt; shares the same API as the test client. However, instead of behaving like a browser, the RequestFactory provides a way to generate a request instance that can be used as the first argument to any view. This means you can test a view function the same way as you would test any other function &amp;ndash; as a black box, with exactly known inputs, testing for specific outputs.</source>
          <target state="translated">&lt;a href=&quot;#django.test.RequestFactory&quot;&gt; &lt;code&gt;RequestFactory&lt;/code&gt; は、&lt;/a&gt;テストクライアントと同じAPIを共有します。ただし、ブラウザのように動作する代わりに、RequestFactoryは、任意のビューの最初の引数として使用できる要求インスタンスを生成する方法を提供します。これは、他の関数をテストするのと同じ方法でビュー関数をテストできることを意味します&amp;ndash;入力が正確にわかっているブラックボックスとして、特定の出力をテストします。</target>
        </trans-unit>
        <trans-unit id="5a659cb228f9d18f981afdc5f1e65fa5d151a3b7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.urls.NoReverseMatch&quot;&gt;&lt;code&gt;NoReverseMatch&lt;/code&gt;&lt;/a&gt; exception is raised by &lt;a href=&quot;urlresolvers#module-django.urls&quot;&gt;&lt;code&gt;django.urls&lt;/code&gt;&lt;/a&gt; when a matching URL in your URLconf cannot be identified based on the parameters supplied.</source>
          <target state="translated">&lt;a href=&quot;#django.urls.NoReverseMatch&quot;&gt; &lt;code&gt;NoReverseMatch&lt;/code&gt; の&lt;/a&gt;例外がで発生し&lt;a href=&quot;urlresolvers#module-django.urls&quot;&gt; &lt;code&gt;django.urls&lt;/code&gt; &lt;/a&gt;あなたのURLconfに一致するURLが指定されたパラメータに基づいて特定することができないとき。</target>
        </trans-unit>
        <trans-unit id="5445342482c6c1f9fc2c82bfe445151fa315cc57" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#django.urls.Resolver404&quot;&gt;&lt;code&gt;Resolver404&lt;/code&gt;&lt;/a&gt; exception is raised by &lt;a href=&quot;urlresolvers#django.urls.resolve&quot;&gt;&lt;code&gt;resolve()&lt;/code&gt;&lt;/a&gt; if the path passed to &lt;code&gt;resolve()&lt;/code&gt; doesn&amp;rsquo;t map to a view. It&amp;rsquo;s a subclass of &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;django.http.Http404&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.urls.Resolver404&quot;&gt; &lt;code&gt;Resolver404&lt;/code&gt; の&lt;/a&gt;例外がだけ上昇する&lt;a href=&quot;urlresolvers#django.urls.resolve&quot;&gt; &lt;code&gt;resolve()&lt;/code&gt; &lt;/a&gt;パスがに渡された場合 &lt;code&gt;resolve()&lt;/code&gt; ビューにマッピングされません。これは&lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;django.http.Http404&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="e26c4d47db539cf9d763bb5eaa6448b6312b90a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-django.contrib.auth.hashers&quot;&gt;&lt;code&gt;django.contrib.auth.hashers&lt;/code&gt;&lt;/a&gt; module provides a set of functions to create and validate hashed passwords. You can use them independently from the &lt;code&gt;User&lt;/code&gt; model.</source>
          <target state="translated">&lt;a href=&quot;#module-django.contrib.auth.hashers&quot;&gt; &lt;code&gt;django.contrib.auth.hashers&lt;/code&gt; の&lt;/a&gt;モジュールが作成する機能のセットを提供し、検証ハッシュされたパスワード。これらは、 &lt;code&gt;User&lt;/code&gt; モデルとは独立して使用できます。</target>
        </trans-unit>
        <trans-unit id="0f0c7d0ba816142512178d8f6cf8efe20d549850" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-django.contrib.contenttypes.admin&quot;&gt;&lt;code&gt;django.contrib.contenttypes.admin&lt;/code&gt;&lt;/a&gt; module provides &lt;a href=&quot;#django.contrib.contenttypes.admin.GenericTabularInline&quot;&gt;&lt;code&gt;GenericTabularInline&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.contenttypes.admin.GenericStackedInline&quot;&gt;&lt;code&gt;GenericStackedInline&lt;/code&gt;&lt;/a&gt; (subclasses of &lt;a href=&quot;#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt;&lt;code&gt;GenericInlineModelAdmin&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;#module-django.contrib.contenttypes.admin&quot;&gt; &lt;code&gt;django.contrib.contenttypes.admin&lt;/code&gt; の&lt;/a&gt;モジュールが提供&lt;a href=&quot;#django.contrib.contenttypes.admin.GenericTabularInline&quot;&gt; &lt;code&gt;GenericTabularInline&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#django.contrib.contenttypes.admin.GenericStackedInline&quot;&gt; &lt;code&gt;GenericStackedInline&lt;/code&gt; &lt;/a&gt;（のサブクラス&lt;a href=&quot;#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt; &lt;code&gt;GenericInlineModelAdmin&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b6e270634783f248270b85ce4243fb8fd0ac5d68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-django.contrib.contenttypes.forms&quot;&gt;&lt;code&gt;django.contrib.contenttypes.forms&lt;/code&gt;&lt;/a&gt; module provides:</source>
          <target state="translated">&lt;a href=&quot;#module-django.contrib.contenttypes.forms&quot;&gt; &lt;code&gt;django.contrib.contenttypes.forms&lt;/code&gt; の&lt;/a&gt;モジュールが用意されています。</target>
        </trans-unit>
        <trans-unit id="163f921ddd0c94af5494b1fd9a9c0750c1cdacf1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-django.contrib.gis.measure&quot;&gt;&lt;code&gt;django.contrib.gis.measure&lt;/code&gt;&lt;/a&gt; module contains objects that allow for convenient representation of distance and area units of measure. &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; Specifically, it implements two objects, &lt;a href=&quot;#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.gis.measure.Area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; &amp;ndash; both of which may be accessed via the &lt;a href=&quot;#django.contrib.gis.measure.D&quot;&gt;&lt;code&gt;D&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.gis.measure.A&quot;&gt;&lt;code&gt;A&lt;/code&gt;&lt;/a&gt; convenience aliases, respectively.</source>
          <target state="translated">&lt;a href=&quot;#module-django.contrib.gis.measure&quot;&gt; &lt;code&gt;django.contrib.gis.measure&lt;/code&gt; の&lt;/a&gt;モジュールは、メジャーの距離及び面積単位の便利な表現を可能にするオブジェクトが含まれています。&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;具体的には、&lt;a href=&quot;#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#django.contrib.gis.measure.Area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; の&lt;/a&gt; 2つのオブジェクトを実装します。これらは両方とも、それぞれ&lt;a href=&quot;#django.contrib.gis.measure.D&quot;&gt; &lt;code&gt;D&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#django.contrib.gis.measure.A&quot;&gt; &lt;code&gt;A&lt;/code&gt; の&lt;/a&gt;便利なエイリアスを介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="accd6534121979e444368f34eaf06eeb42040b64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-django.contrib.gis.utils&quot;&gt;&lt;code&gt;django.contrib.gis.utils&lt;/code&gt;&lt;/a&gt; module contains various utilities that are useful in creating geospatial Web applications.</source>
          <target state="translated">&lt;a href=&quot;#module-django.contrib.gis.utils&quot;&gt; &lt;code&gt;django.contrib.gis.utils&lt;/code&gt; の&lt;/a&gt;モジュールは、地理空間Webアプリケーションを作成するのに有用である各種ユーティリティが含まれています。</target>
        </trans-unit>
        <trans-unit id="f11e362e49d313325b8f40f7525fc910c0da9eb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-django.core.validators&quot;&gt;&lt;code&gt;django.core.validators&lt;/code&gt;&lt;/a&gt; module contains a collection of callable validators for use with model and form fields. They&amp;rsquo;re used internally but are available for use with your own fields, too. They can be used in addition to, or in lieu of custom &lt;code&gt;field.clean()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;#module-django.core.validators&quot;&gt; &lt;code&gt;django.core.validators&lt;/code&gt; の&lt;/a&gt;モジュールには、モデルとフォームフィールドで使用するための呼び出し可能なバリデータのコレクションが含まれています。これらは内部で使用されますが、独自のフィールドで使用することもできます。カスタム &lt;code&gt;field.clean()&lt;/code&gt; メソッドに加えて、またはその代わりに使用できます。</target>
        </trans-unit>
        <trans-unit id="fc7a94d330b8c67e954234c657e1b5f9a3342f0c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-django.db.models.signals&quot;&gt;&lt;code&gt;django.db.models.signals&lt;/code&gt;&lt;/a&gt; module defines a set of signals sent by the model system.</source>
          <target state="translated">&lt;a href=&quot;#module-django.db.models.signals&quot;&gt; &lt;code&gt;django.db.models.signals&lt;/code&gt; は&lt;/a&gt;信号の集合は、モデルシステムによって送信された定義をモジュール。</target>
        </trans-unit>
        <trans-unit id="0d4d4d3f98b6d6dc09d3a52d2a103bc94f86ed79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; setting is only used if &lt;a href=&quot;middleware#django.middleware.common.CommonMiddleware&quot;&gt;&lt;code&gt;CommonMiddleware&lt;/code&gt;&lt;/a&gt; is installed (see &lt;a href=&quot;../topics/http/middleware&quot;&gt;Middleware&lt;/a&gt;). See also &lt;a href=&quot;#std:setting-PREPEND_WWW&quot;&gt;&lt;code&gt;PREPEND_WWW&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; の&lt;/a&gt;場合は設定のみが使用されて&lt;a href=&quot;middleware#django.middleware.common.CommonMiddleware&quot;&gt; &lt;code&gt;CommonMiddleware&lt;/code&gt; &lt;/a&gt;インストールされている（参照&lt;a href=&quot;../topics/http/middleware&quot;&gt;ミドルウェア&lt;/a&gt;）。&lt;a href=&quot;#std:setting-PREPEND_WWW&quot;&gt; &lt;code&gt;PREPEND_WWW&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="67b94d2b6a3e6f5c491d9a1456fbdfb38fddb2c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting must configure a &lt;code&gt;default&lt;/code&gt; cache; any number of additional caches may also be specified. If you are using a cache backend other than the local memory cache, or you need to define multiple caches, other options will be required. The following cache options are available.</source>
          <target state="translated">&lt;a href=&quot;#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt;の設定は、設定する必要があり &lt;code&gt;default&lt;/code&gt; キャッシュを、追加のキャッシュもいくつでも指定できます。ローカルメモリキャッシュ以外のキャッシュバックエンドを使用している場合、または複数のキャッシュを定義する必要がある場合は、他のオプションが必要になります。次のキャッシュオプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="17f7a54f49535d3f7869bf36f357e45a4a54a52e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting must configure a &lt;code&gt;default&lt;/code&gt; database; any number of additional databases may also be specified.</source>
          <target state="translated">&lt;a href=&quot;#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt;の設定は、設定する必要があり &lt;code&gt;default&lt;/code&gt; データベースを、追加のデータベースもいくつでも指定できます。</target>
        </trans-unit>
        <trans-unit id="1831f4a987916b7d91d7c65556738230fb06b3ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#std:templatefilter-escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:templatefilter-safe&quot;&gt;&lt;code&gt;safe&lt;/code&gt;&lt;/a&gt; filters are not acceptable arguments. Instead, use the &lt;a href=&quot;#std:templatetag-autoescape&quot;&gt;&lt;code&gt;autoescape&lt;/code&gt;&lt;/a&gt; tag to manage autoescaping for blocks of template code.</source>
          <target state="translated">&lt;a href=&quot;#std:templatefilter-escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#std:templatefilter-safe&quot;&gt; &lt;code&gt;safe&lt;/code&gt; &lt;/a&gt;フィルタが許容引数ではありません。代わりに、&lt;a href=&quot;#std:templatetag-autoescape&quot;&gt; &lt;code&gt;autoescape&lt;/code&gt; &lt;/a&gt;タグを使用して、テンプレートコードのブロックの自動エスケープを管理します。</target>
        </trans-unit>
        <trans-unit id="8b86a7b6db34865b79af83efc1f5afa8412a7a1c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#std:templatetag-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt; tag should be considered as an implementation of &amp;ldquo;render this subtemplate and include the HTML&amp;rdquo;, not as &amp;ldquo;parse this subtemplate and include its contents as if it were part of the parent&amp;rdquo;. This means that there is no shared state between included templates &amp;ndash; each include is a completely independent rendering process.</source>
          <target state="translated">&lt;a href=&quot;#std:templatetag-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt;タグが「このサブテンプレートを解析し、それは親の一部であるかのようにその内容を含まない」として、「このサブテンプレートをレンダリングし、HTMLを含める」の実装として考えるべきです。つまり、インクルードされたテンプレート間で状態が共有されることはありません。各インクルードは完全に独立したレンダリングプロセスです。</target>
        </trans-unit>
        <trans-unit id="c66a321361237415a417770a0f5a7eff2b67019e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#std:templatetag-language&quot;&gt;&lt;code&gt;language&lt;/code&gt;&lt;/a&gt; tag expects the language code as the only argument.</source>
          <target state="translated">&lt;a href=&quot;#std:templatetag-language&quot;&gt; &lt;code&gt;language&lt;/code&gt; &lt;/a&gt;タグは、唯一の引数として言語コードを期待しています。</target>
        </trans-unit>
        <trans-unit id="f95b2551722ca1b18b1ea4badb2a3188470ecb73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#topic-email-file-backend&quot;&gt;file&lt;/a&gt; email backend can also be useful during development &amp;ndash; this backend dumps the contents of every SMTP connection to a file that can be inspected at your leisure.</source>
          <target state="translated">&lt;a href=&quot;#topic-email-file-backend&quot;&gt;ファイル&lt;/a&gt;のメールバックエンドはまた、開発中に役立つことができます-このバックエンドは、あなたのレジャーで検査することができ、ファイルへのすべてのSMTP接続の内容をダンプします。</target>
        </trans-unit>
        <trans-unit id="0ea7eabfa1b8ff15ca93bd8743138d1cfc5d2549" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt; command creates a file &lt;code&gt;&amp;lt;project_name&amp;gt;/asgi.py&lt;/code&gt; that contains such an &lt;code&gt;application&lt;/code&gt; callable.</source>
          <target state="translated">&lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; のの&lt;/a&gt;コマンドは、ファイル作成 &lt;code&gt;&amp;lt;project_name&amp;gt;/asgi.py&lt;/code&gt; などが含まれ &lt;code&gt;application&lt;/code&gt; 呼び出し可能に。</target>
        </trans-unit>
        <trans-unit id="00a9c11f2202c87e000fea2f9526698e61754d07" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;startproject&lt;/code&gt;&lt;/a&gt; command creates a file &lt;code&gt;&amp;lt;project_name&amp;gt;/wsgi.py&lt;/code&gt; that contains such an &lt;code&gt;application&lt;/code&gt; callable.</source>
          <target state="translated">&lt;a href=&quot;../../../ref/django-admin#django-admin-startproject&quot;&gt; &lt;code&gt;startproject&lt;/code&gt; のの&lt;/a&gt;コマンドは、ファイル作成 &lt;code&gt;&amp;lt;project_name&amp;gt;/wsgi.py&lt;/code&gt; などが含まれ &lt;code&gt;application&lt;/code&gt; 呼び出し可能に。</target>
        </trans-unit>
        <trans-unit id="fb3cf3ba680c541d9bc47c4db402537ad89c3bf6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet.count&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; function respects &lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet.distinct&quot;&gt;&lt;code&gt;distinct()&lt;/code&gt;&lt;/a&gt; as well:</source>
          <target state="translated">&lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet.count&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;関数の点&lt;a href=&quot;../../../ref/models/querysets#django.db.models.query.QuerySet.distinct&quot;&gt; &lt;code&gt;distinct()&lt;/code&gt; &lt;/a&gt;にも：</target>
        </trans-unit>
        <trans-unit id="412643b59ff0c4fcc6cde0d8b870920dc5e60631" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../topics/serialization#subset-of-fields&quot;&gt;fields&lt;/a&gt; option can be used to limit fields that will be present in the &lt;code&gt;properties&lt;/code&gt; key, as it works with all other serializers.</source>
          <target state="translated">&lt;a href=&quot;../../../topics/serialization#subset-of-fields&quot;&gt;フィールドの&lt;/a&gt;オプションが中に存在する制限分野に使用することができます &lt;code&gt;properties&lt;/code&gt; 、それは他のすべてのシリアライザと連携して、キーを押します。</target>
        </trans-unit>
        <trans-unit id="973a4aa75429c48168d6a9eff902a9ac14e0a4a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../intro/tutorial05&quot;&gt;testing tutorial&lt;/a&gt;, the &lt;a href=&quot;tools&quot;&gt;testing tools reference&lt;/a&gt;, and the &lt;a href=&quot;advanced&quot;&gt;advanced testing topics&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../intro/tutorial05&quot;&gt;テストチュートリアル&lt;/a&gt;、&lt;a href=&quot;tools&quot;&gt;テストツールの参照&lt;/a&gt;、および&lt;a href=&quot;advanced&quot;&gt;高度な試験のトピック&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b14d5f8a9d02d40aa954beac5b67b90aeb5e6256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../models/querysets#std:fieldlookup-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; lookup is overridden on &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt;&lt;code&gt;ArrayField&lt;/code&gt;&lt;/a&gt;. The returned objects will be those where the values passed are a subset of the data. It uses the SQL operator &lt;code&gt;@&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;../../models/querysets#std:fieldlookup-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;に上書きされたルックアップ&lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt; &lt;code&gt;ArrayField&lt;/code&gt; &lt;/a&gt;。返されるオブジェクトは、渡された値がデータのサブセットであるオブジェクトです。SQL演算子 &lt;code&gt;@&amp;gt;&lt;/code&gt; を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="9f542d9d2a2f32b30653d2f7c6f1224726333e87" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../models/querysets#std:fieldlookup-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; lookup is overridden on &lt;a href=&quot;#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt;. The returned objects are those where the given &lt;code&gt;dict&lt;/code&gt; of key-value pairs are all contained in the field. It uses the SQL operator &lt;code&gt;@&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;../../models/querysets#std:fieldlookup-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;に上書きされたルックアップ&lt;a href=&quot;#django.contrib.postgres.fields.HStoreField&quot;&gt; &lt;code&gt;HStoreField&lt;/code&gt; &lt;/a&gt;。返されるオブジェクトは、キーと値のペアの特定の &lt;code&gt;dict&lt;/code&gt; がすべてフィールドに含まれているオブジェクトです。SQL演算子 &lt;code&gt;@&amp;gt;&lt;/code&gt; を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="4fe10717ccf59b7da696b2f194748021154fc8ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt;&lt;code&gt;ModelBackend&lt;/code&gt;&lt;/a&gt; caches permissions on the user object after the first time they need to be fetched for a permissions check. This is typically fine for the request-response cycle since permissions aren&amp;rsquo;t typically checked immediately after they are added (in the admin, for example). If you are adding permissions and checking them immediately afterward, in a test or view for example, the easiest solution is to re-fetch the user from the database. For example:</source>
          <target state="translated">&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.ModelBackend&quot;&gt; &lt;code&gt;ModelBackend&lt;/code&gt; は&lt;/a&gt;、彼らが権限チェックのためにフェッチする必要がある最初の時間の後にユーザーオブジェクトのアクセス許可をキャッシュします。通常、権限は追加された直後（管理者など）にチェックされないため、要求と応答のサイクルでは問題ありません。パーミッションを追加してすぐにチェックする場合、たとえばテストまたはビューで、最も簡単な解決策は、データベースからユーザーを再フェッチすることです。例えば：</target>
        </trans-unit>
        <trans-unit id="31147efcb3b8049c47461d791d153c67c75059e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; model is rarely accessed directly.</source>
          <target state="translated">&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;モデルはめったに直接アクセスされていません。</target>
        </trans-unit>
        <trans-unit id="d5460a1148be3180db2c5f7a2c596455a33f2980" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.password&quot;&gt;&lt;code&gt;password&lt;/code&gt;&lt;/a&gt; attribute of a &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; object is a string in this format:</source>
          <target state="translated">&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.password&quot;&gt; &lt;code&gt;password&lt;/code&gt; &lt;/a&gt;属性は、次の形式の文字列です。</target>
        </trans-unit>
        <trans-unit id="e513e50d7844b561cd562f906f6ad47b8a9a32ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/contrib/postgres/index#module-django.contrib.postgres&quot;&gt;&lt;code&gt;django.contrib.postgres&lt;/code&gt;&lt;/a&gt; module provides some helpers to make these queries. For example, a query might select all the blog entries which mention &amp;ldquo;cheese&amp;rdquo;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/contrib/postgres/index#module-django.contrib.postgres&quot;&gt; &lt;code&gt;django.contrib.postgres&lt;/code&gt; の&lt;/a&gt;モジュールは、これらのクエリを作るために、いくつかのヘルパーを提供します。たとえば、クエリで「チーズ」に言及するすべてのブログエントリを選択する場合があります。</target>
        </trans-unit>
        <trans-unit id="039deb52bc18bda120ab4e45fc166f991870e5fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/django-admin#cmdoption-test-keepdb&quot;&gt;&lt;code&gt;test --keepdb&lt;/code&gt;&lt;/a&gt; option preserves the test database between test runs. It skips the create and destroy actions which can greatly decrease the time to run tests.</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#cmdoption-test-keepdb&quot;&gt; &lt;code&gt;test --keepdb&lt;/code&gt; &lt;/a&gt;オプションは、テスト実行の間にテスト・データベースを保存します。テストの実行時間を大幅に短縮できる作成アクションと破棄アクションをスキップします。</target>
        </trans-unit>
        <trans-unit id="c94a4ccc924cfb05b8980ab5ec604a69587489d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; management command operates on one database at a time. By default, it operates on the &lt;code&gt;default&lt;/code&gt; database, but by providing the &lt;a href=&quot;../../ref/django-admin#cmdoption-migrate-database&quot;&gt;&lt;code&gt;--database&lt;/code&gt;&lt;/a&gt; option, you can tell it to synchronize a different database. So, to synchronize all models onto all databases in the first example above, you would need to call:</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;管理コマンドは、一度に1つのデータベース上で動作します。デフォルトでは、 &lt;code&gt;default&lt;/code&gt; データベースで動作しますが、&lt;a href=&quot;../../ref/django-admin#cmdoption-migrate-database&quot;&gt; &lt;code&gt;--database&lt;/code&gt; &lt;/a&gt;オプションを指定することで、別のデータベースを同期するように指示できます。したがって、上記の最初の例ですべてのモデルをすべてのデータベースに同期するには、次を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2a2bf38d72e0b95325c24b68103d4024e98d6680" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/django-admin#django-admin-startapp&quot;&gt;&lt;code&gt;manage.py startapp&lt;/code&gt;&lt;/a&gt; command creates an application structure that includes a &lt;code&gt;models.py&lt;/code&gt; file. If you have many models, organizing them in separate files may be useful.</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#django-admin-startapp&quot;&gt; &lt;code&gt;manage.py startapp&lt;/code&gt; のの&lt;/a&gt;コマンドは、アプリケーションの構造を作成 &lt;code&gt;models.py&lt;/code&gt; ファイルを。多くのモデルがある場合は、モデルを別々のファイルに整理すると便利です。</target>
        </trans-unit>
        <trans-unit id="429ce54838efb7a78e791741b233de1be516da38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt;クラス</target>
        </trans-unit>
        <trans-unit id="f6673f801657e0eff74ea02d7291c905f165b73c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/forms/fields#django.forms.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; instance from the form class that this &lt;a href=&quot;../../ref/forms/api#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt; wraps. You can use it to access &lt;a href=&quot;../../ref/forms/fields#django.forms.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; attributes, e.g. &lt;code&gt;{{ char_field.field.max_length }}&lt;/code&gt;.</source>
          <target state="translated">この&lt;a href=&quot;../../ref/forms/api#django.forms.BoundField&quot;&gt; &lt;code&gt;BoundField&lt;/code&gt; &lt;/a&gt;がラップするフォームクラスの&lt;a href=&quot;../../ref/forms/fields#django.forms.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;インスタンス。これを使用して、&lt;a href=&quot;../../ref/forms/fields#django.forms.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;属性にアクセスできます（例： &lt;code&gt;{{ char_field.field.max_length }}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38f3bfe5d38f8c3444cb42d8f969c1fd86600649" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt; provides two optional parameters &lt;code&gt;can_order&lt;/code&gt; and &lt;code&gt;can_delete&lt;/code&gt; to help with ordering of forms in formsets and deletion of forms from a formset.</source>
          <target state="translated">&lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; は&lt;/a&gt; 2つのオプションのパラメータを提供し &lt;code&gt;can_order&lt;/code&gt; と &lt;code&gt;can_delete&lt;/code&gt; をフォームセットからフォームセットのフォームの順序とフォームの削除を支援します。</target>
        </trans-unit>
        <trans-unit id="b3501b6aafd3595f1e23b024b160a77b71c622af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/middleware#django.middleware.csrf.CsrfViewMiddleware&quot;&gt;&lt;code&gt;CsrfViewMiddleware&lt;/code&gt;&lt;/a&gt; class can be considered an exception, as it provides the &lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_protect&quot;&gt;&lt;code&gt;csrf_protect()&lt;/code&gt;&lt;/a&gt; decorators which allow views to explicitly control at what point the CSRF validation should occur.</source>
          <target state="translated">&lt;a href=&quot;../../ref/middleware#django.middleware.csrf.CsrfViewMiddleware&quot;&gt; &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; の&lt;/a&gt;それが提供するように、クラスは、例外と考えることができる&lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_exempt&quot;&gt; &lt;code&gt;csrf_exempt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../ref/csrf#django.views.decorators.csrf.csrf_protect&quot;&gt; &lt;code&gt;csrf_protect()&lt;/code&gt; &lt;/a&gt;ビューが明示的にCSRFの検証が発生したポイント何に制御することを可能にするデコレータ。</target>
        </trans-unit>
        <trans-unit id="264716e89ae71fc8db5a254a431eb759ebdf4008" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/models/instances&quot;&gt;model instance reference&lt;/a&gt; has a complete list of &lt;a href=&quot;../../ref/models/instances#model-instance-methods&quot;&gt;methods automatically given to each model&lt;/a&gt;. You can override most of these &amp;ndash; see &lt;a href=&quot;#overriding-predefined-model-methods&quot;&gt;overriding predefined model methods&lt;/a&gt;, below &amp;ndash; but there are a couple that you&amp;rsquo;ll almost always want to define:</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/instances&quot;&gt;モデルインスタンスリファレンスは&lt;/a&gt;完全なリスト有して&lt;a href=&quot;../../ref/models/instances#model-instance-methods&quot;&gt;自動的に各モデルに与えられた方法を&lt;/a&gt;。これらのほとんどをオーバーライドできます（以下の&lt;a href=&quot;#overriding-predefined-model-methods&quot;&gt;定義済みモデルメソッドのオーバーライドを&lt;/a&gt;参照）。しかし、ほとんど常に定義する必要があるものがあります。</target>
        </trans-unit>
        <trans-unit id="27dfb49d7cfdb95fca428138c73af436a2b91f12" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method has no return value.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt;メソッドは、戻り値はありません。</target>
        </trans-unit>
        <trans-unit id="149c4af8cc6df767ce93fdc28beb0c697723a7b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/models/querysets&quot;&gt;QuerySet API&lt;/a&gt; is extensive.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/querysets&quot;&gt;クエリセットAPIは&lt;/a&gt;広範です。</target>
        </trans-unit>
        <trans-unit id="119264d7b4280d74674bc4674e5637ee1d922ef7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt;&lt;code&gt;all()&lt;/code&gt;&lt;/a&gt; describes all objects in the database table. Usually, though, you&amp;rsquo;ll need to select only a subset of the complete set of objects.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;で返さ&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt; &lt;code&gt;all()&lt;/code&gt; &lt;/a&gt;データベーステーブル内のすべてのオブジェクトについて説明します。ただし、通常は、オブジェクトの完全なセットのサブセットのみを選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="ef723cdd077f2c5fedc7841b524437ce4dac5442" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt;&lt;code&gt;all()&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; of all the objects in the database.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.all&quot;&gt; &lt;code&gt;all()&lt;/code&gt; &lt;/a&gt;メソッドは、戻り&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;、データベース内のすべてのオブジェクトの。</target>
        </trans-unit>
        <trans-unit id="93a7fd47c950d4a78ce2d6a526ba1dcd51ecc4bf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; lookup is overridden on &lt;code&gt;JSONField&lt;/code&gt;. The returned objects are those where the given &lt;code&gt;dict&lt;/code&gt; of key-value pairs are all contained in the top-level of the field. For example:</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;に上書きされたルックアップ &lt;code&gt;JSONField&lt;/code&gt; 。返されるオブジェクトは、キーと値のペアの指定された &lt;code&gt;dict&lt;/code&gt; がすべてフィールドのトップレベルに含まれているオブジェクトです。例えば：</target>
        </trans-unit>
        <trans-unit id="8fee952ffde9035fa49be88069f8173f8badc83e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method can be used to remove all many-to-many relationships for an instance:</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager.clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;メソッドは、インスタンスのすべての多対多のリレーションシップを削除するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="91404cb0b5843baa63376ec872449151955016d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; setting is validated when running tests. This allows the test client to differentiate between internal and external URLs.</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt;テストを実行するときに設定が検証されます。これにより、テストクライアントは内部URLと外部URLを区別できます。</target>
        </trans-unit>
        <trans-unit id="7261be04f1a034aa5bbc7c513896edd9fbc39c10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt; also accepts view function names and &lt;a href=&quot;../http/urls#naming-url-patterns&quot;&gt;named URL patterns&lt;/a&gt;. This allows you to freely remap your login view within your URLconf without having to update the setting.</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; は&lt;/a&gt;、ビュー関数名および受け入れ&lt;a href=&quot;../http/urls#naming-url-patterns&quot;&gt;という名前のURLパターンを&lt;/a&gt;。これにより、設定を更新しなくても、URLconf内でログインビューを自由に再マッピングできます。</target>
        </trans-unit>
        <trans-unit id="e57398f2da88b58ffa2355a9d31fc60c7d4b5c95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; of a template engine to use for loading the template.</source>
          <target state="translated">テンプレートの読み込みに使用するテンプレートエンジンの&lt;a href=&quot;../../ref/settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fcacb20c061053b55607ccf9cf2fe150962dcda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop iterates over the already filled cache.</source>
          <target state="translated">&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;、すでに満たされたキャッシュを超えるループ反復します。</target>
        </trans-unit>
        <trans-unit id="964b44f7ab91f2bf9eca34ab511e391a4bdfe639" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag uses the namespace of the currently resolved view as the current application in a &lt;a href=&quot;../../ref/templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt;. You can override this default by setting the current application on the &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.current_app&quot;&gt;&lt;code&gt;request.current_app&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">&lt;a href=&quot;../../ref/templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;テンプレートタグは、現在のアプリケーションのように、現在解決ビューの名前空間使用&lt;a href=&quot;../../ref/templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; のを&lt;/a&gt;。&lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.current_app&quot;&gt; &lt;code&gt;request.current_app&lt;/code&gt; &lt;/a&gt;属性で現在のアプリケーションを設定することにより、このデフォルトを上書きできます。</target>
        </trans-unit>
        <trans-unit id="59441964ea94a5651b1d7b010a50f9741376107e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; function can take an optional third argument which should be a dictionary of extra keyword arguments to pass to the view function.</source>
          <target state="translated">&lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt;関数は、ビュー関数に渡す余分なキーワード引数の辞書でなければならない任意の第三の引数を取ることができます。</target>
        </trans-unit>
        <trans-unit id="896a6214ca4e3563bb385668e52c374ce8e50d69" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/views#django.views.defaults.bad_request&quot;&gt;&lt;code&gt;bad_request()&lt;/code&gt;&lt;/a&gt; view is overridden by &lt;a href=&quot;../../ref/urls#django.conf.urls.handler400&quot;&gt;&lt;code&gt;handler400&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/views#django.views.defaults.bad_request&quot;&gt; &lt;code&gt;bad_request()&lt;/code&gt; &lt;/a&gt;ビューがによって上書きされ&lt;a href=&quot;../../ref/urls#django.conf.urls.handler400&quot;&gt; &lt;code&gt;handler400&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9b16166cf47fc23f21870f39234de51f84f45d7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/views#django.views.defaults.page_not_found&quot;&gt;&lt;code&gt;page_not_found()&lt;/code&gt;&lt;/a&gt; view is overridden by &lt;a href=&quot;../../ref/urls#django.conf.urls.handler404&quot;&gt;&lt;code&gt;handler404&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/views#django.views.defaults.page_not_found&quot;&gt; &lt;code&gt;page_not_found()&lt;/code&gt; &lt;/a&gt;ビューがによって上書きされ&lt;a href=&quot;../../ref/urls#django.conf.urls.handler404&quot;&gt; &lt;code&gt;handler404&lt;/code&gt; の&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="aff93100bc995ea4b2d03d6efecc3c1663298361" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/views#django.views.defaults.permission_denied&quot;&gt;&lt;code&gt;permission_denied()&lt;/code&gt;&lt;/a&gt; view is overridden by &lt;a href=&quot;../../ref/urls#django.conf.urls.handler403&quot;&gt;&lt;code&gt;handler403&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/views#django.views.defaults.permission_denied&quot;&gt; &lt;code&gt;permission_denied()&lt;/code&gt; &lt;/a&gt;ビューがによって上書きされ&lt;a href=&quot;../../ref/urls#django.conf.urls.handler403&quot;&gt; &lt;code&gt;handler403&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a4d20b4ce9453bc509e5c9828d331cd367fead70" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../ref/views#django.views.defaults.server_error&quot;&gt;&lt;code&gt;server_error()&lt;/code&gt;&lt;/a&gt; view is overridden by &lt;a href=&quot;../../ref/urls#django.conf.urls.handler500&quot;&gt;&lt;code&gt;handler500&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/views#django.views.defaults.server_error&quot;&gt; &lt;code&gt;server_error()&lt;/code&gt; &lt;/a&gt;ビューがによって上書きされ&lt;a href=&quot;../../ref/urls#django.conf.urls.handler500&quot;&gt; &lt;code&gt;handler500&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="de80b843a61bcccf5f58879e73d872e2652b04af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../topics/templates#module-django.template.loader&quot;&gt;&lt;code&gt;django.template.loader&lt;/code&gt;&lt;/a&gt; module provides functions such as &lt;a href=&quot;../../topics/templates#django.template.loader.get_template&quot;&gt;&lt;code&gt;get_template()&lt;/code&gt;&lt;/a&gt; for loading templates. They return a &lt;code&gt;django.template.backends.django.Template&lt;/code&gt; which wraps the actual &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;django.template.Template&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../topics/templates#module-django.template.loader&quot;&gt; &lt;code&gt;django.template.loader&lt;/code&gt; にする&lt;/a&gt;モジュールは、次のような機能を提供&lt;a href=&quot;../../topics/templates#django.template.loader.get_template&quot;&gt; &lt;code&gt;get_template()&lt;/code&gt; を&lt;/a&gt;ローディングテンプレートに。実際の&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;django.template.Template&lt;/code&gt; &lt;/a&gt;をラップする &lt;code&gt;django.template.backends.django.Template&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5bcb50e3cd212240efd2a9719388ef22d056b498" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../contenttypes#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; field is not supported.</source>
          <target state="translated">&lt;a href=&quot;../contenttypes#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; の&lt;/a&gt;フィールドがサポートされていません。</target>
        </trans-unit>
        <trans-unit id="d73c9915386a86141171ec8a8ae6920b42110ee7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../contenttypes#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; of the modified object.</source>
          <target state="translated">変更されたオブジェクトの&lt;a href=&quot;../contenttypes#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bcb253b5cb570dee84c8559b60a0d0b87ee4c96a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../contrib/messages&quot;&gt;messages framework&lt;/a&gt; contains &lt;a href=&quot;../contrib/messages#django.contrib.messages.views.SuccessMessageMixin&quot;&gt;&lt;code&gt;SuccessMessageMixin&lt;/code&gt;&lt;/a&gt;, which facilitates presenting messages about successful form submissions.</source>
          <target state="translated">&lt;a href=&quot;../contrib/messages&quot;&gt;メッセージフレームワークは&lt;/a&gt;含まれてい&lt;a href=&quot;../contrib/messages#django.contrib.messages.views.SuccessMessageMixin&quot;&gt; &lt;code&gt;SuccessMessageMixin&lt;/code&gt; &lt;/a&gt;成功したフォームの提出についてのメッセージを提示促進します、。</target>
        </trans-unit>
        <trans-unit id="ba20f69e5c02b749ec34853d1acdd12aa0c965a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../forms/api#django.forms.Form.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; for the generated form.</source>
          <target state="translated">生成されたフォームの&lt;a href=&quot;../forms/api#django.forms.Form.prefix&quot;&gt; &lt;code&gt;prefix&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7627bcf56e6546e4c503ee1e68e42f31da8f0ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; method may be executed more than once during testing, so you may want to &lt;a href=&quot;#preventing-duplicate-signals&quot;&gt;guard your signals from duplication&lt;/a&gt;, especially if you&amp;rsquo;re planning to send them within tests.</source>
          <target state="translated">&lt;a href=&quot;../ref/applications#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt;あなたがしたいことがありので、この方法は、テスト中に複数回実行することができる&lt;a href=&quot;#preventing-duplicate-signals&quot;&gt;重複からあなたの信号を守る&lt;/a&gt;、あなたがしている計画のテスト内でそれらを送信する場合は特に、。</target>
        </trans-unit>
        <trans-unit id="9da5b5badc253456cd3bcc72b4d4198fdf96c2dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; generic view expects the primary key value captured from the URL to be called &lt;code&gt;&quot;pk&quot;&lt;/code&gt;, so we&amp;rsquo;ve changed &lt;code&gt;question_id&lt;/code&gt; to &lt;code&gt;pk&lt;/code&gt; for the generic views.</source>
          <target state="translated">&lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;汎用ビューはURLからキャプチャ主キーの値が呼ばれることを期待する &lt;code&gt;&quot;pk&quot;&lt;/code&gt; 我々は変更したので、 &lt;code&gt;question_id&lt;/code&gt; をする &lt;code&gt;pk&lt;/code&gt; 汎用ビューのために。</target>
        </trans-unit>
        <trans-unit id="c47610ef1ed3075b2b476ab99241cb6c07862dd0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command looks at all your available models and creates migrations for whichever tables don&amp;rsquo;t already exist. &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; runs the migrations and creates tables in your database, as well as optionally providing &lt;a href=&quot;../topics/migrations&quot;&gt;much richer schema control&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; は、&lt;/a&gt;すべての利用可能なモデルのルックスを指揮し、表がすでに存在していない方のためにマイグレーションを作成します。&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;は、マイグレーションを実行し、データベースにテーブルを作成します。オプションで、&lt;a href=&quot;../topics/migrations&quot;&gt;より高度なスキーマ制御を&lt;/a&gt;提供します。</target>
        </trans-unit>
        <trans-unit id="67de547583c031def9d5e5dcd2d85917b4ea9eaf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command looks at the &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and creates any necessary database tables according to the database settings in your &lt;code&gt;mysite/settings.py&lt;/code&gt; file and the database migrations shipped with the app (we&amp;rsquo;ll cover those later). You&amp;rsquo;ll see a message for each migration it applies. If you&amp;rsquo;re interested, run the command-line client for your database and type &lt;code&gt;\dt&lt;/code&gt; (PostgreSQL), &lt;code&gt;SHOW TABLES;&lt;/code&gt; (MariaDB, MySQL), &lt;code&gt;.schema&lt;/code&gt; (SQLite), or &lt;code&gt;SELECT TABLE_NAME FROM USER_TABLES;&lt;/code&gt; (Oracle) to display the tables Django created.</source>
          <target state="translated">&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;のコマンドルックス&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; の&lt;/a&gt;設定や、あなたの中のデータベースの設定に応じて、必要なデータベーステーブルを作成し、 &lt;code&gt;mysite/settings.py&lt;/code&gt; ファイルとアプリに同梱されたデータベースの移行（私たちは、後でそれらをカバーします）。適用される移行ごとにメッセージが表示されます。興味がある場合は、データベースのコマンドラインクライアントを実行し、 &lt;code&gt;\dt&lt;/code&gt; （PostgreSQL）、 &lt;code&gt;SHOW TABLES;&lt;/code&gt; と入力してください。（MariaDB、MySQL） &lt;code&gt;.schema&lt;/code&gt; （SQLite）、または &lt;code&gt;SELECT TABLE_NAME FROM USER_TABLES;&lt;/code&gt; （Oracle）Djangoが作成したテーブルを表示します。</target>
        </trans-unit>
        <trans-unit id="3ea5e6d719d8a3d342c1e2e6ce5174aac069a1d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command takes all the migrations that haven&amp;rsquo;t been applied (Django tracks which ones are applied using a special table in your database called &lt;code&gt;django_migrations&lt;/code&gt;) and runs them against your database - essentially, synchronizing the changes you made to your models with the schema in the database.</source>
          <target state="translated">&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;コマンドが適用されていないすべてのマイグレーション（どれが呼ばれるデータベース内のテーブルの特別な使用して適用されているDjangoのトラックとる &lt;code&gt;django_migrations&lt;/code&gt; を、スキーマを使用してモデルに加えられた変更を同期、本質的- ）と、データベースに対してそれらを実行しますデータベース内。</target>
        </trans-unit>
        <trans-unit id="216b8f279c466507f5045a9856c458e2491c8412" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/django-admin#django-admin-sqlmigrate&quot;&gt;&lt;code&gt;sqlmigrate&lt;/code&gt;&lt;/a&gt; command doesn&amp;rsquo;t actually run the migration on your database - instead, it prints it to the screen so that you can see what SQL Django thinks is required. It&amp;rsquo;s useful for checking what Django is going to do or if you have database administrators who require SQL scripts for changes.</source>
          <target state="translated">&lt;a href=&quot;../ref/django-admin#django-admin-sqlmigrate&quot;&gt; &lt;code&gt;sqlmigrate&lt;/code&gt; &lt;/a&gt;コマンドは、実際にデータベース上で移行を実行していない-あなたはSQL Djangoが必要とされると考えてものを見ることができるように代わり、それはそれを画面に出力します。これは、Djangoが何をするかを確認する場合や、変更のためにSQLスクリプトを必要とするデータベース管理者がいる場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="a8d6aac513f345c03739d3a700e537c1e24d395c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/models/fields#django.db.models.Field.rel_db_type&quot;&gt;&lt;code&gt;rel_db_type()&lt;/code&gt;&lt;/a&gt; methods are called by Django when the framework constructs the &lt;code&gt;CREATE TABLE&lt;/code&gt; statements for your application &amp;ndash; that is, when you first create your tables. The methods are also called when constructing a &lt;code&gt;WHERE&lt;/code&gt; clause that includes the model field &amp;ndash; that is, when you retrieve data using QuerySet methods like &lt;code&gt;get()&lt;/code&gt;, &lt;code&gt;filter()&lt;/code&gt;, and &lt;code&gt;exclude()&lt;/code&gt; and have the model field as an argument. They are not called at any other time, so it can afford to execute slightly complex code, such as the &lt;code&gt;connection.settings_dict&lt;/code&gt; check in the above example.</source>
          <target state="translated">&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt; &lt;code&gt;db_type()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../ref/models/fields#django.db.models.Field.rel_db_type&quot;&gt; &lt;code&gt;rel_db_type()&lt;/code&gt; &lt;/a&gt;の枠組みが構築する際の方法は、ジャンゴによって呼び出され &lt;code&gt;CREATE TABLE&lt;/code&gt; あなたが最初にテーブルを作成するときに、ある-アプリケーションのステートメントを。これらのメソッドは、モデルフィールドを含む &lt;code&gt;WHERE&lt;/code&gt; 句を作成する場合にも呼び出されます。つまり、 &lt;code&gt;get()&lt;/code&gt; 、 &lt;code&gt;filter()&lt;/code&gt; 、 &lt;code&gt;exclude()&lt;/code&gt; などのQuerySetメソッドを使用してデータを取得し、モデルフィールドを引数として持つ場合にも呼び出されます。これらは他の時点では呼び出されないため、上記の例の &lt;code&gt;connection.settings_dict&lt;/code&gt; チェックなどの少し複雑なコードを実行する余裕があります。</target>
        </trans-unit>
        <trans-unit id="7e01694611a7b883f6fd755b932fb16470e4447c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/models/fields#django.db.models.Field.rel_db_type&quot;&gt;&lt;code&gt;rel_db_type()&lt;/code&gt;&lt;/a&gt; method is called by fields such as &lt;code&gt;ForeignKey&lt;/code&gt; and &lt;code&gt;OneToOneField&lt;/code&gt; that point to another field to determine their database column data types. For example, if you have an &lt;code&gt;UnsignedAutoField&lt;/code&gt;, you also need the foreign keys that point to that field to use the same data type:</source>
          <target state="translated">&lt;a href=&quot;../ref/models/fields#django.db.models.Field.rel_db_type&quot;&gt; &lt;code&gt;rel_db_type()&lt;/code&gt; &lt;/a&gt;メソッドは、次のようなフィールドによって呼び出される &lt;code&gt;ForeignKey&lt;/code&gt; と &lt;code&gt;OneToOneField&lt;/code&gt; 別のフィールドをポイントは、それらのデータベース列のデータタイプを決定すること。たとえば、 &lt;code&gt;UnsignedAutoField&lt;/code&gt; がある場合、同じデータ型を使用するには、そのフィールドを指す外部キーも必要です。</target>
        </trans-unit>
        <trans-unit id="7999d99f4be7ddf4dd4b33a3f5ba97fff1d24c72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/settings#std:setting-CACHES-KEY_FUNCTION&quot;&gt;&lt;code&gt;KEY_FUNCTION&lt;/code&gt;&lt;/a&gt; cache setting specifies a dotted-path to a function matching the prototype of &lt;code&gt;make_key()&lt;/code&gt; above. If provided, this custom key function will be used instead of the default key combining function.</source>
          <target state="translated">&lt;a href=&quot;../ref/settings#std:setting-CACHES-KEY_FUNCTION&quot;&gt; &lt;code&gt;KEY_FUNCTION&lt;/code&gt; の&lt;/a&gt;キャッシュ設定は、プロトタイプマッチング関数に点線の経路を指定 &lt;code&gt;make_key()&lt;/code&gt; 上記。指定した場合、デフォルトのキー結合関数の代わりにこのカスタムキー関数が使用されます。</target>
        </trans-unit>
        <trans-unit id="fd84b25c033d62563180e15d253028070779de0f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; setting defines the callable that will be used to configure Django&amp;rsquo;s loggers. By default, it points at Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig&quot;&gt;&lt;code&gt;logging.config.dictConfig()&lt;/code&gt;&lt;/a&gt; function. However, if you want to use a different configuration process, you can use any other callable that takes a single argument. The contents of &lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt;&lt;code&gt;LOGGING&lt;/code&gt;&lt;/a&gt; will be provided as the value of that argument when logging is configured.</source>
          <target state="translated">&lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; の&lt;/a&gt;設定は、Djangoのロガーを設定するために使用されることを呼び出し可能な定義されています。デフォルトでは、Pythonの&lt;a href=&quot;https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig&quot;&gt; &lt;code&gt;logging.config.dictConfig()&lt;/code&gt; &lt;/a&gt;関数を指しています。ただし、別の構成プロセスを使用する場合は、単一の引数を取る他の呼び出し可能オブジェクトを使用できます。&lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt; &lt;code&gt;LOGGING&lt;/code&gt; &lt;/a&gt;の内容は、ロギングの構成時にその引数の値として提供されます。</target>
        </trans-unit>
        <trans-unit id="7771d7ac53bb74b4c68fa0c1b76197c32ebf2673" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting and &lt;code&gt;BASE_DIR&lt;/code&gt; will already exist if you created your project using the default project template. The setting that needs to be modified is &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;設定と &lt;code&gt;BASE_DIR&lt;/code&gt; は、デフォルトのプロジェクトテンプレートを使用してプロジェクトを作成した場合、既に存在します。変更が必要な設定は&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="1fd528a5d653627e3ac3503e380a3b3879db401a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/templates/language&quot;&gt;Django template language&lt;/a&gt; is Django&amp;rsquo;s own template system. Until Django 1.8 it was the only built-in option available. It&amp;rsquo;s a good template library even though it&amp;rsquo;s fairly opinionated and sports a few idiosyncrasies. If you don&amp;rsquo;t have a pressing reason to choose another backend, you should use the DTL, especially if you&amp;rsquo;re writing a pluggable application and you intend to distribute templates. Django&amp;rsquo;s contrib apps that include templates, like &lt;a href=&quot;../ref/contrib/admin/index&quot;&gt;django.contrib.admin&lt;/a&gt;, use the DTL.</source>
          <target state="translated">&lt;a href=&quot;../ref/templates/language&quot;&gt;Djangoテンプレート言語は、&lt;/a&gt; Djangoの独自のテンプレートシステムです。Django 1.8までは、これが利用可能な唯一の組み込みオプションでした。かなりの意見があり、いくつかの特異性を備えていますが、これは優れたテンプレートライブラリです。別のバックエンドを選択する差し迫った理由がない場合は、特にプラグ可能なアプリケーションを作成していて、テンプレートを配布する場合は、DTLを使用する必要があります。以下のように、テンプレートが含まれDjangoのcontribのアプリケーション&lt;a href=&quot;../ref/contrib/admin/index&quot;&gt;django.contrib.adminは&lt;/a&gt;、DTLを使用しています。</target>
        </trans-unit>
        <trans-unit id="62c88188053755d16e739992dfe1eacfe679a595" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; function allows referencing other URLconfs. Whenever Django encounters &lt;a href=&quot;../ref/urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt;, it chops off whatever part of the URL matched up to that point and sends the remaining string to the included URLconf for further processing.</source>
          <target state="translated">&lt;a href=&quot;../ref/urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;関数は、他のURLconfのを参照することができます。Djangoが&lt;a href=&quot;../ref/urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt;に遭遇するたびに、Djangoはその時点までに一致したURLの部分を切り取り、残りの文字列を含まれているURLconfに送信してさらに処理します。</target>
        </trans-unit>
        <trans-unit id="7ee191c04667f4d39a4549723e2bf960d27b4a64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; function is passed four arguments, two required: &lt;code&gt;route&lt;/code&gt; and &lt;code&gt;view&lt;/code&gt;, and two optional: &lt;code&gt;kwargs&lt;/code&gt;, and &lt;code&gt;name&lt;/code&gt;. At this point, it&amp;rsquo;s worth reviewing what these arguments are for.</source>
          <target state="translated">&lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt;：関数は、4つの引数は、2つの必須渡される &lt;code&gt;route&lt;/code&gt; と &lt;code&gt;view&lt;/code&gt; 、及び2つのオプション： &lt;code&gt;kwargs&lt;/code&gt; から、および &lt;code&gt;name&lt;/code&gt; 。この時点で、これらの引数の目的を確認する価値があります。</target>
        </trans-unit>
        <trans-unit id="bfe8d9a37e6e878cdfde94b3487a096a61803769" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object, if one was provided to &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.authenticate&quot;&gt;&lt;code&gt;authenticate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;オブジェクト、1がに提供された場合、&lt;a href=&quot;../../topics/auth/default#django.contrib.auth.authenticate&quot;&gt; &lt;code&gt;authenticate()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0091db1fa11aaecfad9ca6d8a7522261198cec5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; class that handles the redirect.</source>
          <target state="translated">&lt;a href=&quot;../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; に&lt;/a&gt;リダイレクトを処理するクラス。</target>
        </trans-unit>
        <trans-unit id="edcf485a2ebdbc3c042fdd727d5d08f81c66e958" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; class used when a &lt;a href=&quot;#django.contrib.redirects.models.Redirect&quot;&gt;&lt;code&gt;Redirect&lt;/code&gt;&lt;/a&gt; is not found for the requested path or has a blank &lt;code&gt;new_path&lt;/code&gt; value.</source>
          <target state="translated">&lt;a href=&quot;../request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;時にクラスが使用&lt;a href=&quot;#django.contrib.redirects.models.Redirect&quot;&gt; &lt;code&gt;Redirect&lt;/code&gt; &lt;/a&gt;要求されたパスが見つかりまたはブランクがあるされていない &lt;code&gt;new_path&lt;/code&gt; の値を。</target>
        </trans-unit>
        <trans-unit id="8010271cf7bdf5f4d7cfff4a18302b043a2a41b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../settings#std:setting-MESSAGE_LEVEL&quot;&gt;&lt;code&gt;MESSAGE_LEVEL&lt;/code&gt;&lt;/a&gt; setting can be used to change the minimum recorded level (or it can be &lt;a href=&quot;#changing-the-minimum-recorded-level-per-request&quot;&gt;changed per request&lt;/a&gt;). Attempts to add messages of a level less than this will be ignored.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-MESSAGE_LEVEL&quot;&gt; &lt;code&gt;MESSAGE_LEVEL&lt;/code&gt; の&lt;/a&gt;設定は、最小記録レベルを変更するために使用することができる（または、それがすることができる&lt;a href=&quot;#changing-the-minimum-recorded-level-per-request&quot;&gt;要求ごとに変更します&lt;/a&gt;）。これより低いレベルのメッセージを追加しようとしても無視されます。</target>
        </trans-unit>
        <trans-unit id="b599e1214b0aed211c5d57026cb4582375496c64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting specifies the database ID of the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object associated with that particular settings file. If the setting is omitted, the &lt;a href=&quot;#django.contrib.sites.shortcuts.get_current_site&quot;&gt;&lt;code&gt;get_current_site()&lt;/code&gt;&lt;/a&gt; function will try to get the current site by comparing the &lt;a href=&quot;#django.contrib.sites.models.Site.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; with the host name from the &lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;request.get_host()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; の&lt;/a&gt;設定は、データベースのIDを指定する&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt;その特定の設定ファイルに関連付けられているオブジェクトを。設定を省略した場合、&lt;a href=&quot;#django.contrib.sites.shortcuts.get_current_site&quot;&gt; &lt;code&gt;get_current_site()&lt;/code&gt; &lt;/a&gt;関数は、&lt;a href=&quot;#django.contrib.sites.models.Site.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;request.get_host()&lt;/code&gt; &lt;/a&gt;メソッドからのホスト名と比較して、現在のサイトを取得しようとします。</target>
        </trans-unit>
        <trans-unit id="7cae1946283bce012ebb4a1b409cf39af5896452" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; option</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; の&lt;/a&gt;オプション</target>
        </trans-unit>
        <trans-unit id="6595ffe0ec0351b3d22571b44e35b0ca2d0ebbc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; of a template engine to use for loading the template. &lt;code&gt;template_engine&lt;/code&gt; is passed as the &lt;code&gt;using&lt;/code&gt; keyword argument to &lt;code&gt;response_class&lt;/code&gt;. Default is &lt;code&gt;None&lt;/code&gt;, which tells Django to search for the template in all configured engines.</source>
          <target state="translated">テンプレートの読み込みに使用するテンプレートエンジンの&lt;a href=&quot;../settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;template_engine&lt;/code&gt; は、 &lt;code&gt;using&lt;/code&gt; キーワード引数として &lt;code&gt;response_class&lt;/code&gt; に渡されます。デフォルトは &lt;code&gt;None&lt;/code&gt; で、設定されたすべてのエンジンでテンプレートを検索するようにDjangoに指示します。</target>
        </trans-unit>
        <trans-unit id="b2cfd30a79e871c2a72fdcee436ec46bc717a476" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../staticfiles&quot;&gt;staticfiles app&lt;/a&gt; prepends &lt;a href=&quot;../../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../../settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;../../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;) to any asset paths. The same rules apply as &lt;a href=&quot;../../../topics/forms/media#form-asset-paths&quot;&gt;regular asset definitions on forms&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../staticfiles&quot;&gt;staticfilesアプリ&lt;/a&gt;プリペンド&lt;a href=&quot;../../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;../../settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; を&lt;/a&gt;場合&lt;a href=&quot;../../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; は&lt;/a&gt;しない &lt;code&gt;None&lt;/code&gt; ）任意資産パスに。&lt;a href=&quot;../../../topics/forms/media#form-asset-paths&quot;&gt;フォームの通常のアセット定義&lt;/a&gt;と同じ規則が適用されます。</target>
        </trans-unit>
        <trans-unit id="8e031d58f4c9538d1e3468234e80f92f62a0d6f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../templates/api#django.template.context_processors.static&quot;&gt;&lt;code&gt;django.template.context_processors.static()&lt;/code&gt;&lt;/a&gt; context processor which adds &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; to every template context rendered with &lt;a href=&quot;../templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; contexts.</source>
          <target state="translated">&lt;a href=&quot;../templates/api#django.template.context_processors.static&quot;&gt; &lt;code&gt;django.template.context_processors.static()&lt;/code&gt; &lt;/a&gt;追加コンテキストプロセッサ&lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; を&lt;/a&gt;用いてレンダリングされたすべてのテンプレートコンテキストに&lt;a href=&quot;../templates/api#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; のの&lt;/a&gt;コンテキスト。</target>
        </trans-unit>
        <trans-unit id="f5e610bf78eb2858f2dd80f44e1279b16091bbb1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../topics/auth/index&quot;&gt;authentication framework&lt;/a&gt; sends &lt;a href=&quot;contrib/auth#topics-auth-signals&quot;&gt;signals when a user is logged in / out&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../topics/auth/index&quot;&gt;認証フレームワークは、&lt;/a&gt;送信&lt;a href=&quot;contrib/auth#topics-auth-signals&quot;&gt;ユーザーが/ログアウトされたときに信号を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c7796a62e6051e2b684637e0ce067f7b0bc2bff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../topics/db/models&quot;&gt;data-model syntax&lt;/a&gt; offers many rich ways of representing your models &amp;ndash; so far, it&amp;rsquo;s been solving many years&amp;rsquo; worth of database-schema problems. Here&amp;rsquo;s a quick example:</source>
          <target state="translated">&lt;a href=&quot;../topics/db/models&quot;&gt;データ・モデルの構文&lt;/a&gt;の提供モデルを表現するための多くの豊かな方法は-これまでのところ、それはデータベース・スキーマの問題の多くの年分を解決されています。ここに簡単な例があります：</target>
        </trans-unit>
        <trans-unit id="ec4214008fa49c3a992ffd9dfeaab4ae9d18dd27" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../topics/db/models&quot;&gt;model reference&lt;/a&gt; documentation explains how to use Django&amp;rsquo;s standard field classes &amp;ndash; &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/models/fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;, etc. For many purposes, those classes are all you&amp;rsquo;ll need. Sometimes, though, the Django version won&amp;rsquo;t meet your precise requirements, or you&amp;rsquo;ll want to use a field that is entirely different from those shipped with Django.</source>
          <target state="translated">&lt;a href=&quot;../topics/db/models&quot;&gt;モデル参照&lt;/a&gt;ドキュメントは、Djangoの標準のフィールドクラスの使用方法を説明します- &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; です&lt;/a&gt;、&lt;a href=&quot;../ref/models/fields#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; の&lt;/a&gt;多くの目的のために、など、これらのクラスは、あなたが必要とするすべてです。ただし、Djangoのバージョンが正確な要件を満たさない場合や、Djangoに付属しているフィールドとは完全に異なるフィールドを使用したい場合があります。</target>
        </trans-unit>
        <trans-unit id="408e2a28c9451544ef0d6152f6d8e045a3cf02a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.get_object_or_404&quot;&gt;&lt;code&gt;get_object_or_404()&lt;/code&gt;&lt;/a&gt; function takes a Django model as its first argument and an arbitrary number of keyword arguments, which it passes to the &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; function of the model&amp;rsquo;s manager. It raises &lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; if the object doesn&amp;rsquo;t exist.</source>
          <target state="translated">&lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.get_object_or_404&quot;&gt; &lt;code&gt;get_object_or_404()&lt;/code&gt; &lt;/a&gt;関数は、最初の引数と、それはに渡すキーワード引数の任意の数、とDjangoのモデルを取る&lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;モデルのマネージャの機能。オブジェクトが存在しない場合は、&lt;a href=&quot;../topics/http/views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; &lt;/a&gt;を発生させます。</target>
        </trans-unit>
        <trans-unit id="18a1d7eeda36afc9100a19b4d6fefeb12bacb996" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/a&gt; function takes the request object as its first argument, a template name as its second argument and a dictionary as its optional third argument. It returns an &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object of the given template rendered with the given context.</source>
          <target state="translated">&lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt; &lt;code&gt;render()&lt;/code&gt; &lt;/a&gt;関数は、最初の引数、第2引数としてテンプレート名とそのオプションの第三引数として辞書として要求オブジェクトを取ります。特定のコンテキストでレンダリングされた特定のテンプレートの&lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="580ce6b10ac2a0c92b57d7c73a3e2f70fd1f8ca3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../utils#module-django.utils.feedgenerator&quot;&gt;&lt;code&gt;feedgenerator&lt;/code&gt;&lt;/a&gt; module contains a base class:</source>
          <target state="translated">&lt;a href=&quot;../utils#module-django.utils.feedgenerator&quot;&gt; &lt;code&gt;feedgenerator&lt;/code&gt; の&lt;/a&gt;モジュールは、基本クラスが含まれています。</target>
        </trans-unit>
        <trans-unit id="b6621f4a24c707a16569057b5b6777c1e4a249b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;advanced#topics-testing-advanced-multidb&quot;&gt;advanced multi-db testing topics&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;advanced#topics-testing-advanced-multidb&quot;&gt;高度なマルチデシベルテストトピック&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f2659e394bde50d340599288781dbfd555de7cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;api#django.forms.Form.errors.as_data&quot;&gt;&lt;code&gt;Form.errors.as_data()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api#django.forms.Form.errors.as_json&quot;&gt;&lt;code&gt;Form.errors.as_json()&lt;/code&gt;&lt;/a&gt; methods greatly benefit from fully featured &lt;code&gt;ValidationError&lt;/code&gt;s (with a &lt;code&gt;code&lt;/code&gt; name and a &lt;code&gt;params&lt;/code&gt; dictionary).</source>
          <target state="translated">&lt;a href=&quot;api#django.forms.Form.errors.as_data&quot;&gt; &lt;code&gt;Form.errors.as_data()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;api#django.forms.Form.errors.as_json&quot;&gt; &lt;code&gt;Form.errors.as_json()&lt;/code&gt; &lt;/a&gt;メソッドが大きく完全な機能の恩恵を受ける &lt;code&gt;ValidationError&lt;/code&gt; を S（と &lt;code&gt;code&lt;/code&gt; 名と &lt;code&gt;params&lt;/code&gt; が辞書）。</target>
        </trans-unit>
        <trans-unit id="869070c99f089b4d6d96517a57bfd02376d17feb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;builtins#std:templatetag-autoescape&quot;&gt;&lt;code&gt;autoescape&lt;/code&gt;&lt;/a&gt; tag takes either &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; as its argument. At times, you might want to force auto-escaping when it would otherwise be disabled. Here is an example template:</source>
          <target state="translated">&lt;a href=&quot;builtins#std:templatetag-autoescape&quot;&gt; &lt;code&gt;autoescape&lt;/code&gt; の&lt;/a&gt;タグがいずれかのかかる &lt;code&gt;on&lt;/code&gt; または &lt;code&gt;off&lt;/code&gt; 引数として。場合によっては、自動エスケープを強制しないと無効になることがあります。次にテンプレートの例を示します。</target>
        </trans-unit>
        <trans-unit id="dccd44c9dbb0c76173a89c135e63b0eff8abda7b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;builtins#std:templatetag-extends&quot;&gt;&lt;code&gt;extends&lt;/code&gt;&lt;/a&gt; tag is the key here. It tells the template engine that this template &amp;ldquo;extends&amp;rdquo; another template. When the template system evaluates this template, first it locates the parent &amp;ndash; in this case, &amp;ldquo;base.html&amp;rdquo;.</source>
          <target state="translated">ここで&lt;a href=&quot;builtins#std:templatetag-extends&quot;&gt; &lt;code&gt;extends&lt;/code&gt; &lt;/a&gt;タグが重要です。これは、このテンプレートが別のテンプレートを「拡張」することをテンプレートエンジンに通知します。テンプレートシステムがこのテンプレートを評価するとき、最初に親（この場合は「base.html」）を見つけます。</target>
        </trans-unit>
        <trans-unit id="c2266b60b20aacf6e8ae67cefd2ae581ebe66da4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; tag can take multiple library names, separated by spaces. Example:</source>
          <target state="translated">&lt;a href=&quot;builtins#std:templatetag-load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;タグは、スペースで区切られた複数のライブラリ名を、取ることができます。例：</target>
        </trans-unit>
        <trans-unit id="2ffe8a890d11774d8daf462a01e6192a170bc951" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fields#django.forms.Field.help_text&quot;&gt;&lt;code&gt;help_text&lt;/code&gt;&lt;/a&gt; of the field.</source>
          <target state="translated">フィールドの&lt;a href=&quot;fields#django.forms.Field.help_text&quot;&gt; &lt;code&gt;help_text&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4fc72a496212ae6625d553b8e35aa0bbd0d9dfa6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fields#django.forms.Field.label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt; of the field. This is used in &lt;a href=&quot;#django.forms.BoundField.label_tag&quot;&gt;&lt;code&gt;label_tag()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの&lt;a href=&quot;fields#django.forms.Field.label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt;。これは&lt;a href=&quot;#django.forms.BoundField.label_tag&quot;&gt; &lt;code&gt;label_tag()&lt;/code&gt; で&lt;/a&gt;使用されます。</target>
        </trans-unit>
        <trans-unit id="8fa595e917321e569f99ce72f122bd8c95237b43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gdal#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; may also have a spatial reference system associated with it. If it does, the &lt;code&gt;srs&lt;/code&gt; attribute will return a &lt;a href=&quot;gdal#django.contrib.gis.gdal.SpatialReference&quot;&gt;&lt;code&gt;SpatialReference&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">&lt;a href=&quot;gdal#django.contrib.gis.gdal.Layer&quot;&gt; &lt;code&gt;Layer&lt;/code&gt; &lt;/a&gt;また、それに関連付けられた空間参照システムを有することができます。存在する場合、 &lt;code&gt;srs&lt;/code&gt; 属性は&lt;a href=&quot;gdal#django.contrib.gis.gdal.SpatialReference&quot;&gt; &lt;code&gt;SpatialReference&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="46d2c1f411e331df06665a051c9f8267f1b57d1c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.ljworld.com/&quot;&gt;LJWorld.com&lt;/a&gt; and &lt;a href=&quot;http://www.lawrence.com/&quot;&gt;Lawrence.com&lt;/a&gt; sites are operated by the same news organization &amp;ndash; the Lawrence Journal-World newspaper in Lawrence, Kansas. LJWorld.com focused on news, while Lawrence.com focused on local entertainment. But sometimes editors wanted to publish an article on &lt;em&gt;both&lt;/em&gt; sites.</source>
          <target state="translated">&lt;a href=&quot;http://www.ljworld.com/&quot;&gt;LJWorld.com&lt;/a&gt;と&lt;a href=&quot;http://www.lawrence.com/&quot;&gt;Lawrence.com&lt;/a&gt;ローレンス、カンザス州ローレンスジャーナル世界の新聞-サイトが同じ報道機関によって運営されています。LJWorld.comはニュースに重点を置き、Lawrence.comは地域の娯楽に重点を置いていました。しかし、編集者は&lt;em&gt;両方の&lt;/em&gt;サイトで記事を公開したいと思ったことがあります。</target>
        </trans-unit>
        <trans-unit id="39e47b3150ffa6125fec66e427fe8e5e7c3e54ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection&quot;&gt;X-XSS-Protection header&lt;/a&gt; is used to control the operation of the XSS filter.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection&quot;&gt;X-XSS保護ヘッダは、&lt;/a&gt; XSSフィルタの動作を制御するために使用されます。</target>
        </trans-unit>
        <trans-unit id="04160b6835735d30b56441dfbdd05b5fa3110fbd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/design-philosophies/#cache-design-philosophy&quot;&gt;Cache Framework design philosophy&lt;/a&gt; explains a few of the design decisions of the framework.</source>
          <target state="translated">&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/design-philosophies/#cache-design-philosophy&quot;&gt;キャッシュフレームワークの設計思想は、&lt;/a&gt;フレームワークの設計上の決定のいくつかを説明します。</target>
        </trans-unit>
        <trans-unit id="c40f41e8d20781704e243004091b5544dbf7e8de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/design-philosophies/#cache-design-philosophy&quot;&gt;Cache Framework design philosophy&lt;/a&gt; explains a few of the design decisions of the framework.</source>
          <target state="translated">&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/design-philosophies/#cache-design-philosophy&quot;&gt;キャッシュフレームワークの設計思想は、&lt;/a&gt;フレームワークの設計上の決定のいくつかを説明します。</target>
        </trans-unit>
        <trans-unit id="cbfb8762a3e0c97516b4f631b3f6e129f617f99f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3/library/re.html#contents-of-module-re&quot;&gt;regex flags&lt;/a&gt; used when compiling the regular expression string &lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/a&gt;. If &lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/a&gt; is a pre-compiled regular expression, and &lt;a href=&quot;#django.core.validators.RegexValidator.flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; is overridden, &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/re.html#contents-of-module-re&quot;&gt;正規表現フラグ&lt;/a&gt;正規表現文字列をコンパイルするときに使用する&lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt; &lt;code&gt;regex&lt;/code&gt; &lt;/a&gt;。場合は&lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt; &lt;code&gt;regex&lt;/code&gt; &lt;/a&gt;、プリコンパイル済みの正規表現で、&lt;a href=&quot;#django.core.validators.RegexValidator.flags&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;上書きされ、&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;発生します。デフォルトは &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b38962c826c92739a2b1db0513bddd357840ffce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format to use when parsing the day. By default, this is &lt;code&gt;'%d'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;を使用する形式の日を解析します。デフォルトでは、これは &lt;code&gt;'%d'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="245a021f4f9e1210abdd5027892c53b7b8914911" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format to use when parsing the month. By default, this is &lt;code&gt;'%b'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;を使用する形式の月の解析。デフォルトでは、これは &lt;code&gt;'%b'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="781abafe6628164da9bdfbd00dd812c7fa785313" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format to use when parsing the week. By default, this is &lt;code&gt;'%U'&lt;/code&gt;, which means the week starts on Sunday. Set it to &lt;code&gt;'%W'&lt;/code&gt; if your week starts on Monday.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;を使用する形式の週を解析します。デフォルトでは、これは &lt;code&gt;'%U'&lt;/code&gt; です。つまり、週は日曜日に始まります。週が月曜日に始まる場合は、 &lt;code&gt;'%W'&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="ed18dc4cf7bbde7b22759fff408e4b8786d8fdcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; format to use when parsing the year. By default, this is &lt;code&gt;'%Y'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/time.html#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;を使用する形式の年の解析。デフォルトでは、これは &lt;code&gt;'%Y'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cf393b28089ff4bb876b10c8319f80ff81350f59" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote&quot;&gt;&lt;code&gt;urllib.parse.quote()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus&quot;&gt;&lt;code&gt;urllib.parse.quote_plus()&lt;/code&gt;&lt;/a&gt; functions from Python&amp;rsquo;s standard library.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote&quot;&gt; &lt;code&gt;urllib.parse.quote()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus&quot;&gt; &lt;code&gt;urllib.parse.quote_plus()&lt;/code&gt; &lt;/a&gt;関数Pythonの標準ライブラリから。</target>
        </trans-unit>
        <trans-unit id="183db66ced876a91cc1b3f41de387e0cf2822977" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/django/django/blob/master/tests/or_lookups/tests.py&quot;&gt;OR lookups examples&lt;/a&gt; in Django&amp;rsquo;s unit tests show some possible uses of &lt;code&gt;Q&lt;/code&gt;.</source>
          <target state="translated">Djangoのユニットテストの&lt;a href=&quot;https://github.com/django/django/blob/master/tests/or_lookups/tests.py&quot;&gt;ORルックアップの例&lt;/a&gt;は、 &lt;code&gt;Q&lt;/code&gt; のいくつかの可能な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="ed5525c40deae8c16ec4372e54fae598bc7f28d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://modwsgi.readthedocs.io/&quot;&gt;official mod_wsgi documentation&lt;/a&gt; is your source for all the details about how to use mod_wsgi. You&amp;rsquo;ll probably want to start with the &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/installation.html&quot;&gt;installation and configuration documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://modwsgi.readthedocs.io/&quot;&gt;公式のmod_wsgiのドキュメントには、&lt;/a&gt; mod_wsgiの使用方法に関するすべての詳細のためのあなたの源です。&lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/installation.html&quot;&gt;インストールと構成のドキュメント&lt;/a&gt;から始めるとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="0ab9307902cfe11f507182ed10454b42f250a63f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-6&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;HTTP status code&lt;/strong&gt;&lt;/a&gt; for the response.</source>
          <target state="translated">応答の&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-6&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;HTTPステータスコード&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd0e74805de6be0cc269b40b896300da0fb6e0cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-6&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;HTTP status code&lt;/strong&gt;&lt;/a&gt; for the response.</source>
          <target state="translated">応答の&lt;a href=&quot;https://tools.ietf.org/html/rfc7231.html#section-6&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;HTTPステータスコード&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e2d1b2519752291652a27e46080d6d0ba3c43b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://trac.osgeo.org/osgeo4w/&quot;&gt;OSGeo4W installer&lt;/a&gt; helps to install the PROJ, GDAL, and GEOS libraries required by GeoDjango. First, download the &lt;a href=&quot;https://trac.osgeo.org/osgeo4w/&quot;&gt;OSGeo4W installer&lt;/a&gt; (64bit), and run it. Select Express Web-GIS Install and click next. In the &amp;lsquo;Select Packages&amp;rsquo; list, ensure that GDAL is selected; MapServer is also enabled by default, but is not required by GeoDjango and may be unchecked safely. After clicking next and accepting the license agreements, the packages will be automatically downloaded and installed, after which you may exit the installer.</source>
          <target state="translated">&lt;a href=&quot;https://trac.osgeo.org/osgeo4w/&quot;&gt;OSGeo4Wインストーラは&lt;/a&gt;GeoDjangoで必要とされるPROJ、GDAL、及びGEOSライブラリをインストールするのに役立ちます。まず、&lt;a href=&quot;https://trac.osgeo.org/osgeo4w/&quot;&gt;OSGeo4Wインストーラー&lt;/a&gt;（64ビット）をダウンロードして実行します。Express Web-GIS Installを選択し、Nextをクリックします。[パッケージの選択]リストで、GDALが選択されていることを確認します。MapServerもデフォルトで有効になっていますが、GeoDjangoでは必須ではなく、安全にチェックを外すことができます。[次へ]をクリックして使用許諾契約に同意すると、パッケージが自動的にダウンロードおよびインストールされます。その後、インストーラーを終了できます。</target>
        </trans-unit>
        <trans-unit id="2d35d394e7d80eabb80fb912d4d26b4c8dd7acd6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://trac.osgeo.org/osgeo4w/&quot;&gt;OSGeo4W installer&lt;/a&gt; helps to install the PROJ.4, GDAL, and GEOS libraries required by GeoDjango. First, download the &lt;a href=&quot;https://trac.osgeo.org/osgeo4w/&quot;&gt;OSGeo4W installer&lt;/a&gt;, and run it. Select Express Web-GIS Install and click next. In the &amp;lsquo;Select Packages&amp;rsquo; list, ensure that GDAL is selected; MapServer and Apache are also enabled by default, but are not required by GeoDjango and may be unchecked safely. After clicking next, the packages will be automatically downloaded and installed, after which you may exit the installer.</source>
          <target state="translated">&lt;a href=&quot;https://trac.osgeo.org/osgeo4w/&quot;&gt;OSGeo4Wインストーラは&lt;/a&gt; PROJ.4、GDAL、およびGeoDjangoで必要とされるGEOSライブラリをインストールするのに役立ちます。まず、&lt;a href=&quot;https://trac.osgeo.org/osgeo4w/&quot;&gt;OSGeo4Wインストーラーを&lt;/a&gt;ダウンロードして実行します。Express Web-GISインストールを選択し、次へをクリックします。「パッケージの選択」リストで、GDALが選択されていることを確認します。MapServerとApacheもデフォルトで有効になっていますが、GeoDjangoには必要なく、安全にチェックを外すことができます。次をクリックすると、パッケージが自動的にダウンロードおよびインストールされます。その後、インストーラーを終了できます。</target>
        </trans-unit>
        <trans-unit id="9f6454ae09c72c5571f12c70580e2a467d729a69" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.djangoproject.com/community/&quot;&gt;Django community aggregator&lt;/a&gt;, where we aggregate content from the global Django community. Many writers in the aggregator write this sort of how-to material.</source>
          <target state="translated">&lt;a href=&quot;https://www.djangoproject.com/community/&quot;&gt;Djangoのコミュニティアグリゲータ&lt;/a&gt;我々はグローバルなDjangoのコミュニティからコンテンツを集約し、。アグリゲーターの多くのライターは、この種のハウツー資料を書いています。</target>
        </trans-unit>
        <trans-unit id="42527043454a88e2fea76e1585e04e60f58fe585" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.postgresql.org/docs/current/pgcrypto.html&quot;&gt;pgcrypto extension&lt;/a&gt; must be installed. You can use the &lt;a href=&quot;../contrib/postgres/operations#django.contrib.postgres.operations.CryptoExtension&quot;&gt;&lt;code&gt;CryptoExtension&lt;/code&gt;&lt;/a&gt; migration operation to install it.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/pgcrypto.html&quot;&gt;pgcryptoの拡張機能が&lt;/a&gt;インストールされている必要があります。&lt;a href=&quot;../contrib/postgres/operations#django.contrib.postgres.operations.CryptoExtension&quot;&gt; &lt;code&gt;CryptoExtension&lt;/code&gt; &lt;/a&gt;移行操作を使用してインストールできます。</target>
        </trans-unit>
        <trans-unit id="30dafa4d380e3023ca1b8e0fa639579fc6705be8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.postgresql.org/docs/current/pgcrypto.html&quot;&gt;pgcrypto extension&lt;/a&gt; must be installed. You can use the &lt;a href=&quot;operations#django.contrib.postgres.operations.CryptoExtension&quot;&gt;&lt;code&gt;CryptoExtension&lt;/code&gt;&lt;/a&gt; migration operation to install it.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/pgcrypto.html&quot;&gt;pgcryptoの拡張機能が&lt;/a&gt;インストールされている必要があります。&lt;a href=&quot;operations#django.contrib.postgres.operations.CryptoExtension&quot;&gt; &lt;code&gt;CryptoExtension&lt;/code&gt; &lt;/a&gt;移行操作を使用してインストールできます。</target>
        </trans-unit>
        <trans-unit id="1314fcd7ac8a446606eeadd06a0748b931fbce44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.psycopg.org/&quot;&gt;psycopg2&lt;/a&gt; module is required for use as the database adapter when using GeoDjango with PostGIS.</source>
          <target state="translated">PostGISでGeoDjangoを使用するときにデータベースアダプターとして使用するには、&lt;a href=&quot;https://www.psycopg.org/&quot;&gt;psycopg2&lt;/a&gt;モジュールが必要です。</target>
        </trans-unit>
        <trans-unit id="c45e78d917a2af1cf1250a2b27008b3aecdd31cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;index#module-django.core.files&quot;&gt;&lt;code&gt;django.core.files&lt;/code&gt;&lt;/a&gt; module and its submodules contain built-in classes for basic file handling in Django.</source>
          <target state="translated">&lt;a href=&quot;index#module-django.core.files&quot;&gt; &lt;code&gt;django.core.files&lt;/code&gt; は&lt;/a&gt;モジュールとそのサブモジュールが内蔵され含むジャンゴでの基本的なファイル操作のためのクラス。</target>
        </trans-unit>
        <trans-unit id="ef1d15b10b1e4758bc73488819aab37aeea690b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception inherits from &lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt;, so you can target multiple &lt;a href=&quot;instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions. Example:</source>
          <target state="translated">&lt;a href=&quot;instances#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; の&lt;/a&gt;から、例外継承&lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt; &lt;/a&gt;ので、あなたは、複数のターゲットにすることができます&lt;a href=&quot;instances#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;例外を。例：</target>
        </trans-unit>
        <trans-unit id="a879ec7dd34500940e7f64bbbb72b67b5bd5a1b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;instances#ref-models-force-insert&quot;&gt;force_insert&lt;/a&gt; parameter is documented elsewhere, but all it means is that a new object will always be created. Normally you won&amp;rsquo;t need to worry about this. However, if your model contains a manual primary key value that you set and if that value already exists in the database, a call to &lt;code&gt;create()&lt;/code&gt; will fail with an &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt; since primary keys must be unique. Be prepared to handle the exception if you are using manual primary keys.</source>
          <target state="translated">&lt;a href=&quot;instances#ref-models-force-insert&quot;&gt;force_insert&lt;/a&gt;パラメータは、他の場所で文書化されているが、それが意味し、すべての新しいオブジェクトが常に作成されることです。通常、これについて心配する必要はありません。ただし、モデルに設定した手動の主キー値が含まれていて、その値がデータベースにすでに存在する場合、主キーは一意でなければならないため、 &lt;code&gt;create()&lt;/code&gt; の呼び出しは&lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt; &lt;code&gt;IntegrityError&lt;/code&gt; で&lt;/a&gt;失敗します。手動の主キーを使用している場合は、例外を処理する準備をしてください。</target>
        </trans-unit>
        <trans-unit id="9d361e741a458827fc5d7d8e45bdb9fc155597d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; is the main source of &lt;code&gt;QuerySets&lt;/code&gt; for a model. For example, &lt;code&gt;Blog.objects.all()&lt;/code&gt; returns a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; that contains all &lt;code&gt;Blog&lt;/code&gt; objects in the database.</source>
          <target state="translated">&lt;a href=&quot;managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt;の主な情報源である &lt;code&gt;QuerySets&lt;/code&gt; モデル用。例えば、 &lt;code&gt;Blog.objects.all()&lt;/code&gt; 戻り&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt;全て含ま &lt;code&gt;Blog&lt;/code&gt; データベース内のオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="17471bb8906283313c701f95217938d9ad7b2693" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; の&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="9f8e6114bfa24b3ebf21e60985199085122a2a96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt; setting controls the encoding of rendered templates. This is set to UTF-8 by default.</source>
          <target state="translated">&lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt; &lt;code&gt;DEFAULT_CHARSET&lt;/code&gt; の&lt;/a&gt;設定は、レンダリングされたテンプレートのエンコーディングを制御します。これはデフォルトでUTF-8に設定されています。</target>
        </trans-unit>
        <trans-unit id="36c2a358420d12d0c839aead7004e6480eac6e99" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;settings#std:setting-TEMPLATES-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; of a template engine to use for loading the template.</source>
          <target state="translated">テンプレートの読み込みに使用するテンプレートエンジンの&lt;a href=&quot;settings#std:setting-TEMPLATES-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1acac94db3bfcd977465244fca2d8b24621c0a10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templates/api#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; with which the template was rendered.</source>
          <target state="translated">&lt;a href=&quot;templates/api#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;テンプレートのレンダリングに使用されました。</target>
        </trans-unit>
        <trans-unit id="b8911594f98e9e9318b10f6b8b27fa489d912ff4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templates/api#django.template.Context&quot;&gt;&lt;code&gt;template context&lt;/code&gt;&lt;/a&gt; used for all matching files is:</source>
          <target state="translated">&lt;a href=&quot;templates/api#django.template.Context&quot;&gt; &lt;code&gt;template context&lt;/code&gt; &lt;/a&gt;一致するすべてのファイルに使用は、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="40052579dc8aced12bc01a23ab84e082c2199346" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templates/api#django.template.Context&quot;&gt;&lt;code&gt;template context&lt;/code&gt;&lt;/a&gt; used is:</source>
          <target state="translated">&lt;a href=&quot;templates/api#django.template.Context&quot;&gt; &lt;code&gt;template context&lt;/code&gt; &lt;/a&gt;で使用は、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0f8c10edabba9c836ae9d4c6dd214d207e595a77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templates/api#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object which was rendered.</source>
          <target state="translated">&lt;a href=&quot;templates/api#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;レンダリングされたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0f5d37dd2d2228083dd9cfef008cd9360d4ce037" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templates/builtins#std:templatetag-url&quot;&gt;&lt;code&gt;url&lt;/code&gt;&lt;/a&gt; template tag will use its value as the &lt;code&gt;current_app&lt;/code&gt; argument to &lt;a href=&quot;urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;templates/builtins#std:templatetag-url&quot;&gt; &lt;code&gt;url&lt;/code&gt; &lt;/a&gt;テンプレートタグのようにその値を使用します &lt;code&gt;current_app&lt;/code&gt; ために引数を&lt;a href=&quot;urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="feeca2b7eaace009ee76a4a318d0d13f06258f2b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;utils#django.utils.encoding.iri_to_uri&quot;&gt;&lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt;&lt;/a&gt; function, which implements the conversion from IRI to URI as required by &lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3987#section-3.1&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;utils#django.utils.encoding.iri_to_uri&quot;&gt; &lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt; &lt;/a&gt;によって要求されるURIへのIRIからの変換を実現する機能、&lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.1&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3987＃セクション3.1&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e767e4fa253ad3812a547db94109f1eff5547842" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;utils#django.utils.encoding.iri_to_uri&quot;&gt;&lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt;&lt;/a&gt; function, which implements the conversion from IRI to URI as required by &lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.1&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 3987#section-3.1&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;utils#django.utils.encoding.iri_to_uri&quot;&gt; &lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt; &lt;/a&gt;によって要求されるURIへのIRIからの変換を実現する機能、&lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.1&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 3987＃セクション3.1&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06131b94965565a8e840b931a8a14a6743ccff6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; piece ensures that Apache can access your &lt;code&gt;wsgi.py&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; Apacheはあなたにアクセスできることをピース性を保証 &lt;code&gt;wsgi.py&lt;/code&gt; ファイルを。</target>
        </trans-unit>
        <trans-unit id="11eb614c532487c7a17d85c1fbf9f993ea1b521a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'context_processors'&lt;/code&gt; option of the &lt;code&gt;DjangoTemplates&lt;/code&gt; backend defined in your &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting contains &lt;code&gt;'django.contrib.messages.context_processors.messages'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;設定で定義された &lt;code&gt;DjangoTemplates&lt;/code&gt; バックエンドの &lt;code&gt;'context_processors'&lt;/code&gt; オプションには、' django.contrib.messages.context_processors.messages &lt;code&gt;'django.contrib.messages.context_processors.messages'&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="6c39e261d9c42bc3f77656ffb46f566f9763f459" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'locmem'&lt;/code&gt; backend stores messages in a special attribute of the &lt;code&gt;django.core.mail&lt;/code&gt; module. The &lt;code&gt;outbox&lt;/code&gt; attribute is created when the first message is sent. It&amp;rsquo;s a list with an &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instance for each message that would be sent.</source>
          <target state="translated">&lt;code&gt;'locmem'&lt;/code&gt; の特別な属性でバックエンドにメッセージが保存される &lt;code&gt;django.core.mail&lt;/code&gt; のモジュール。 &lt;code&gt;outbox&lt;/code&gt; 最初のメッセージが送信されたとき、属性が作成されます。これは、&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;れる各メッセージのEmailMessageインスタンスを含むリストです。</target>
        </trans-unit>
        <trans-unit id="b9a27656fab1b3d74a97e1726bf25b1fd5860871" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;**extra&lt;/code&gt; kwargs are &lt;code&gt;key=value&lt;/code&gt; pairs that can be interpolated into the &lt;code&gt;template&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;**extra&lt;/code&gt; kwargsからは &lt;code&gt;key=value&lt;/code&gt; に補間することができるペア &lt;code&gt;template&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="d60401363afbfb3108087b66ea5d2db365e69a98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;**extra&lt;/code&gt; kwargs are &lt;code&gt;key=value&lt;/code&gt; pairs that can be interpolated into the &lt;code&gt;template&lt;/code&gt; attribute. To avoid a SQL injection vulnerability, &lt;code&gt;extra&lt;/code&gt;&lt;a href=&quot;#avoiding-sql-injection-in-query-expressions&quot;&gt;must not contain untrusted user input&lt;/a&gt; as these values are interpolated into the SQL string rather than passed as query parameters, where the database driver would escape them.</source>
          <target state="translated">&lt;code&gt;**extra&lt;/code&gt; kwargsからは &lt;code&gt;key=value&lt;/code&gt; に補間することができるペア &lt;code&gt;template&lt;/code&gt; 属性。SQLインジェクションの脆弱性を回避するために、 &lt;code&gt;extra&lt;/code&gt; に&lt;a href=&quot;#avoiding-sql-injection-in-query-expressions&quot;&gt;は信頼できないユーザー入力&lt;/a&gt;を含めないでください。これらの値は、データベースドライバーがエスケープするクエリパラメーターとして渡されるのではなく、SQL文字列に補間されます。</target>
        </trans-unit>
        <trans-unit id="082f3d432a304047edbe20172c0676f0b29bf5fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;**extra&lt;/code&gt; kwargs are &lt;code&gt;key=value&lt;/code&gt; pairs that can be interpolated into the &lt;code&gt;template&lt;/code&gt; attribute. To avoid an SQL injection vulnerability, &lt;code&gt;extra&lt;/code&gt;&lt;a href=&quot;#avoiding-sql-injection-in-query-expressions&quot;&gt;must not contain untrusted user input&lt;/a&gt; as these values are interpolated into the SQL string rather than passed as query parameters, where the database driver would escape them.</source>
          <target state="translated">&lt;code&gt;**extra&lt;/code&gt; kwargsからは &lt;code&gt;key=value&lt;/code&gt; に補間することができるペア &lt;code&gt;template&lt;/code&gt; 属性。SQLインジェクションの脆弱性を回避するには、これらの値がクエリパラメータとして渡されるのではなく、SQL文字列に補間され、データベースドライバがそれらをエスケープするため、 &lt;code&gt;extra&lt;/code&gt; に&lt;a href=&quot;#avoiding-sql-injection-in-query-expressions&quot;&gt;信頼できないユーザー入力&lt;/a&gt;を含めないでください。</target>
        </trans-unit>
        <trans-unit id="ba36680589c2ddf4996d9e48ef3a15afdc4d26d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*expressions&lt;/code&gt; argument is a list of positional expressions that the function will be applied to. The expressions will be converted to strings, joined together with &lt;code&gt;arg_joiner&lt;/code&gt;, and then interpolated into the &lt;code&gt;template&lt;/code&gt; as the &lt;code&gt;expressions&lt;/code&gt; placeholder.</source>
          <target state="translated">&lt;code&gt;*expressions&lt;/code&gt; 引数は、関数が適用されることを、位置式のリストです。式は文字列に変換され、 &lt;code&gt;arg_joiner&lt;/code&gt; で結合された後、 &lt;code&gt;expressions&lt;/code&gt; プレースホルダーとして &lt;code&gt;template&lt;/code&gt; 挿入されます。</target>
        </trans-unit>
        <trans-unit id="23d6f96dd81bd59a17f8766b4a8dba490781c37a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mapping&lt;/code&gt; option tells &lt;code&gt;ogrinspect&lt;/code&gt; to also generate a mapping dictionary for use with &lt;a href=&quot;layermapping#django.contrib.gis.utils.LayerMapping&quot;&gt;&lt;code&gt;LayerMapping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--mapping&lt;/code&gt; オプションが伝え &lt;code&gt;ogrinspect&lt;/code&gt; もで使用するためのマッピング辞書を生成する&lt;a href=&quot;layermapping#django.contrib.gis.utils.LayerMapping&quot;&gt; &lt;code&gt;LayerMapping&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="514c0fe665aa66e5f1c403b0d1b56739a7059f08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--multi&lt;/code&gt; option is specified so that the geographic field is a &lt;a href=&quot;model-api#django.contrib.gis.db.models.MultiPolygonField&quot;&gt;&lt;code&gt;MultiPolygonField&lt;/code&gt;&lt;/a&gt; instead of just a &lt;a href=&quot;model-api#django.contrib.gis.db.models.PolygonField&quot;&gt;&lt;code&gt;PolygonField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--multi&lt;/code&gt; 地理分野があるようにオプションが指定されている&lt;a href=&quot;model-api#django.contrib.gis.db.models.MultiPolygonField&quot;&gt; &lt;code&gt;MultiPolygonField&lt;/code&gt; &lt;/a&gt;だけではなく&lt;a href=&quot;model-api#django.contrib.gis.db.models.PolygonField&quot;&gt; &lt;code&gt;PolygonField&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b1ce123e100519ac5e4cdcd775c2f9a89fd8de3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--srid=4326&lt;/code&gt; option sets the SRID for the geographic field.</source>
          <target state="translated">&lt;code&gt;--srid=4326&lt;/code&gt; オプションは、地理的なフィールドのSRIDを設定します。</target>
        </trans-unit>
        <trans-unit id="3c3253223306341836902087f75711571de391af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-R -S&lt;/code&gt; flags indicate that we do not want the user to have the ability to create additional users (roles) or to be a superuser, respectively.</source>
          <target state="translated">&lt;code&gt;-R -S&lt;/code&gt; フラグは、我々は、ユーザーが追加のユーザー（役割）を作成したり、それぞれ、スーパーユーザである能力を持ってしたくないことを示しています。</target>
        </trans-unit>
        <trans-unit id="0170b330ee4a778153047fd5048d4226967130ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@cached_property&lt;/code&gt; decorator caches the result of a method with a single &lt;code&gt;self&lt;/code&gt; argument as a property. The cached result will persist as long as the instance does, so if the instance is passed around and the function subsequently invoked, the cached result will be returned.</source>
          <target state="translated">&lt;code&gt;@cached_property&lt;/code&gt; のデコレータは単一と方法の結果キャッシュ &lt;code&gt;self&lt;/code&gt; プロパティとして引数。キャッシュされた結果はインスタンスが存続する限り存続するため、インスタンスが渡されて関数がその後呼び出された場合、キャッシュされた結果が返されます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
