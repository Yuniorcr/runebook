<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="4e49d6c01119504d3fdf8c01c48b0c6efd480cb8" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Django has a very flexible model of deciding which language should be used &amp;ndash; installation-wide, for a particular user, or both.</source>
          <target state="translated">舞台裏では、Djangoは使用する言語を決定する非常に柔軟なモデルを持っています&amp;ndash;インストール全体、特定のユーザー、またはその両方に対して。</target>
        </trans-unit>
        <trans-unit id="0ba868d3f6818c8124d167f978b5d1a635fee7c3" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Django maintains a list of &amp;ldquo;authentication backends&amp;rdquo; that it checks for authentication. When somebody calls &lt;a href=&quot;default#django.contrib.auth.authenticate&quot;&gt;&lt;code&gt;django.contrib.auth.authenticate()&lt;/code&gt;&lt;/a&gt; &amp;ndash; as described in &lt;a href=&quot;default#how-to-log-a-user-in&quot;&gt;How to log a user in&lt;/a&gt; &amp;ndash; Django tries authenticating across all of its authentication backends. If the first authentication method fails, Django tries the second one, and so on, until all backends have been attempted.</source>
          <target state="translated">Djangoは背後で、認証をチェックする「認証バックエンド」のリストを保持しています。だれかが&lt;a href=&quot;default#django.contrib.auth.authenticate&quot;&gt; &lt;code&gt;django.contrib.auth.authenticate()&lt;/code&gt; を&lt;/a&gt;呼び出すと、&lt;a href=&quot;default#how-to-log-a-user-in&quot;&gt;「ユーザーをログインさせる方法」で&lt;/a&gt;説明されているように、 Djangoはすべての認証バックエンドで認証を試みます。最初の認証方法が失敗した場合、Djangoは2番目の認証方法を試行し、すべてのバックエンドが試行されるまで続けます。</target>
        </trans-unit>
        <trans-unit id="8ae796c8f967944cf5b3b9586a675409c7bce0a0" translate="yes" xml:space="preserve">
          <source>Behind the scenes, the high-level RSS framework uses a lower-level framework for generating feeds&amp;rsquo; XML. This framework lives in a single module: &lt;a href=&quot;https://github.com/django/django/blob/master/django/utils/feedgenerator.py&quot;&gt;django/utils/feedgenerator.py&lt;/a&gt;.</source>
          <target state="translated">背後では、高レベルのRSSフレームワークが、フィードのXMLを生成するために低レベルのフレームワークを使用しています。このフレームワークは、&lt;a href=&quot;https://github.com/django/django/blob/master/django/utils/feedgenerator.py&quot;&gt;django / utils / feedgenerator.pyの&lt;/a&gt;単一モジュールにあります。</target>
        </trans-unit>
        <trans-unit id="de607bb55bcbba294aab6e11baba773b851c22de" translate="yes" xml:space="preserve">
          <source>Being a Python Web framework, Django requires Python. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/install/#faq-python-version-support&quot;&gt;What Python version can I use with Django?&lt;/a&gt; for details. Python includes a lightweight database called &lt;a href=&quot;https://sqlite.org/&quot;&gt;SQLite&lt;/a&gt; so you won&amp;rsquo;t need to set up a database just yet.</source>
          <target state="translated">Python Webフレームワークであるため、DjangoにはPythonが必要です。&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/faq/install/#faq-python-version-support&quot;&gt;Djangoで使用できるPythonのバージョンを&lt;/a&gt;参照してください。詳細については。 Pythonには&lt;a href=&quot;https://sqlite.org/&quot;&gt;SQLite&lt;/a&gt;と呼ばれる軽量のデータベースが含まれているため、まだデータベースを設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="8d6f976ab5f60cd3cc8685d1ab69af7b33490c4e" translate="yes" xml:space="preserve">
          <source>Being a Python Web framework, Django requires Python. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/install/#faq-python-version-support&quot;&gt;What Python version can I use with Django?&lt;/a&gt; for details. Python includes a lightweight database called &lt;a href=&quot;https://sqlite.org/&quot;&gt;SQLite&lt;/a&gt; so you won&amp;rsquo;t need to set up a database just yet.</source>
          <target state="translated">Python Webフレームワークであるため、DjangoにはPythonが必要です。&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/faq/install/#faq-python-version-support&quot;&gt;Djangoで使用できるPythonのバージョンを確認して&lt;/a&gt;ください。詳細については。Pythonには&lt;a href=&quot;https://sqlite.org/&quot;&gt;SQLite&lt;/a&gt;と呼ばれる軽量のデータベースが含まれているため、まだデータベースを設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="9faca6de7aa94d2253e5d5df9f103d69e6f90b79" translate="yes" xml:space="preserve">
          <source>Being a web framework, Django needs a convenient way to generate HTML dynamically. The most common approach relies on templates. A template contains the static parts of the desired HTML output as well as some special syntax describing how dynamic content will be inserted. For a hands-on example of creating HTML pages with templates, see &lt;a href=&quot;../intro/tutorial03&quot;&gt;Tutorial 3&lt;/a&gt;.</source>
          <target state="translated">DjangoはWebフレームワークであるため、HTMLを動的に生成する便利な方法が必要です。最も一般的なアプローチはテンプレートに依存しています。テンプレートには、目的のHTML出力の静的な部分と、動的コンテンツの挿入方法を説明する特別な構文が含まれています。テンプレートを使用してHTMLページを作成する実践的な例については、&lt;a href=&quot;../intro/tutorial03&quot;&gt;チュートリアル3を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="29847749d7d87d002cedf859b42e3c8ea2340133" translate="yes" xml:space="preserve">
          <source>Being the following models:</source>
          <target state="translated">以下のモデルであること。</target>
        </trans-unit>
        <trans-unit id="29ba9999347feeefaf6721511a130a94485610f8" translate="yes" xml:space="preserve">
          <source>Below is a minimal template that illustrates a few basics. Each element will be explained later in this document.</source>
          <target state="translated">以下は、いくつかの基本的なことを説明する最小限のテンプレートです。各要素については後ほど説明します。</target>
        </trans-unit>
        <trans-unit id="a7732e0f628d85310bcf1bb1d2ad558c746163ee" translate="yes" xml:space="preserve">
          <source>Below is an example showing how to record the initial values of fields that are loaded from the database:</source>
          <target state="translated">以下は、データベースから読み込まれたフィールドの初期値を記録する方法を示す例です。</target>
        </trans-unit>
        <trans-unit id="2aea67d5c4a3a061a6414eb0357c40f0719003ce" translate="yes" xml:space="preserve">
          <source>Below you&amp;rsquo;ll find technical implementation details that may be useful to library authors. The technical API and examples below will help with creating generic query expressions that can extend the built-in functionality that Django provides.</source>
          <target state="translated">以下に、ライブラリの作成者に役立つ技術的な実装の詳細を示します。以下の技術APIと例は、Djangoが提供する組み込み機能を拡張できる汎用クエリ式の作成に役立ちます。</target>
        </trans-unit>
        <trans-unit id="2d6d722e58731054a35fb11344c7ffa69bc490f5" translate="yes" xml:space="preserve">
          <source>Besides saving to the database, the field also needs to know how to serialize its value:</source>
          <target state="translated">データベースに保存するだけでなく、フィールドはその値をシリアライズする方法を知る必要があります。</target>
        </trans-unit>
        <trans-unit id="aea0ab0cd2f5ec049be1d62ac0d001c18183b1b4" translate="yes" xml:space="preserve">
          <source>Besides the basic request/response middleware pattern described earlier, you can add three other special methods to class-based middleware:</source>
          <target state="translated">先に説明した基本的なリクエスト/レスポンスミドルウェアのパターンの他に、クラスベースのミドルウェアに3つの特別なメソッドを追加することができます。</target>
        </trans-unit>
        <trans-unit id="f0a22402c5a7a0d8715b7dff47f4a27e90de161a" translate="yes" xml:space="preserve">
          <source>Beware not to alter the &lt;code&gt;base_fields&lt;/code&gt; attribute because this modification will influence all subsequent &lt;code&gt;ContactForm&lt;/code&gt; instances within the same Python process:</source>
          <target state="translated">この変更は同じPythonプロセス内の後続のすべての &lt;code&gt;ContactForm&lt;/code&gt; インスタンスに影響を与えるため、 &lt;code&gt;base_fields&lt;/code&gt; 属性を変更しないように注意してください。</target>
        </trans-unit>
        <trans-unit id="10aa69e316ddf2acb7e875ea988e8d27d57c7274" translate="yes" xml:space="preserve">
          <source>Beware that because query terms are split and ANDed as described earlier, searching with &lt;a href=&quot;../../models/querysets#std:fieldlookup-exact&quot;&gt;&lt;code&gt;exact&lt;/code&gt;&lt;/a&gt; only works with a single search word since two or more words can&amp;rsquo;t all be an exact match unless all words are the same.</source>
          <target state="translated">で検索、前述のようにクエリ用語が分割と論理ANDされていることに注意してください&lt;a href=&quot;../../models/querysets#std:fieldlookup-exact&quot;&gt; &lt;code&gt;exact&lt;/code&gt; &lt;/a&gt;すべての単語が同じでない限り、二つ以上の単語がすべて完全に一致することはできませんので、唯一つの検索語に対応しています。</target>
        </trans-unit>
        <trans-unit id="622c66e4edc1ad0f6a4ad5d57013bbd82948702d" translate="yes" xml:space="preserve">
          <source>Beware that not all browsers support entering localized numbers in &lt;code&gt;number&lt;/code&gt; input types. Django itself avoids using them for fields having their &lt;a href=&quot;fields#django.forms.Field.localize&quot;&gt;&lt;code&gt;localize&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">すべてのブラウザが &lt;code&gt;number&lt;/code&gt; 入力タイプでローカライズされた数値の入力をサポートしているわけではないことに注意してください。Django自体は、&lt;a href=&quot;fields#django.forms.Field.localize&quot;&gt; &lt;code&gt;localize&lt;/code&gt; &lt;/a&gt;プロパティが &lt;code&gt;True&lt;/code&gt; に設定されているフィールドにそれらを使用することを避けます。</target>
        </trans-unit>
        <trans-unit id="5dbfe08480fdd4580be353bc61b70fd49eefec07" translate="yes" xml:space="preserve">
          <source>Beyond permissions, groups are a convenient way to categorize users to give them some label, or extended functionality. For example, you could create a group &lt;code&gt;'Special users'&lt;/code&gt;, and you could write code that could, say, give them access to a members-only portion of your site, or send them members-only email messages.</source>
          <target state="translated">権限以外にも、グループは、ユーザーを分類してラベルや拡張機能を付与する便利な方法です。たとえば、 &lt;code&gt;'Special users'&lt;/code&gt; というグループを作成し、サイトのメンバー限定の部分へのアクセスを許可したり、メンバー限定のメールメッセージを送信したりできるコードを作成できます。</target>
        </trans-unit>
        <trans-unit id="bad9f444ad58807c326f38080929be257574dbe5" translate="yes" xml:space="preserve">
          <source>Beyond this, applications may choose to define a list of allowable file extensions for user uploaded files and configure the web server to only serve such files.</source>
          <target state="translated">これ以外にも、アプリケーションは、ユーザーがアップロードしたファイルに対して許可されるファイル拡張子のリストを定義し、そのようなファイルのみを提供するようにウェブサーバーを設定することもできます。</target>
        </trans-unit>
        <trans-unit id="af83e688fe9b2eb0c89238fbcc88dde3fe5b201d" translate="yes" xml:space="preserve">
          <source>Beyond this, applications may choose to define a whitelist of allowable file extensions for user uploaded files and configure the web server to only serve such files.</source>
          <target state="translated">これ以外にも、アプリケーションは、ユーザーがアップロードしたファイルに対して許可されたファイル拡張子のホワイトリストを定義し、そのようなファイルのみを提供するようにウェブサーバーを設定することもできます。</target>
        </trans-unit>
        <trans-unit id="43fc195cfd349a4a1f123ea11403f4010e985e12" translate="yes" xml:space="preserve">
          <source>Big Endian (e.g., compatible with RISC systems)</source>
          <target state="translated">ビッグエンディアン</target>
        </trans-unit>
        <trans-unit id="cc19b486bb1ddeed173efe877d3c44a522132c1b" translate="yes" xml:space="preserve">
          <source>Bilateral raster support &lt;code&gt;B&lt;/code&gt;: the operator supports rasters only if both sides of the lookup receive raster inputs. Raster data is automatically converted to geometries for mixed lookups.</source>
          <target state="translated">双方向ラスターサポート &lt;code&gt;B&lt;/code&gt; ：演算子は、ルックアップの両側がラスター入力を受け取った場合にのみラスターをサポートします。ラスタデータは、混合ルックアップ用のジオメトリに自動的に変換されます。</target>
        </trans-unit>
        <trans-unit id="88d606ed7a6ca8c7e0fdb1bb58c5b0ff94fdcc6a" translate="yes" xml:space="preserve">
          <source>Binding uploaded files to a form</source>
          <target state="translated">アップロードされたファイルをフォームにバインドする</target>
        </trans-unit>
        <trans-unit id="5b3017a81a16b3859294e63ebb0dcf3214b0c029" translate="yes" xml:space="preserve">
          <source>Blocks are evaluated &lt;em&gt;before&lt;/em&gt; they are included. This means that a template that includes blocks from another will contain blocks that have &lt;em&gt;already been evaluated and rendered&lt;/em&gt; - not blocks that can be overridden by, for example, an extending template.</source>
          <target state="translated">ブロックは含まれる&lt;em&gt;前&lt;/em&gt;に評価されます。つまり、別のブロックのテンプレートを含むテンプレートには、&lt;em&gt;既に評価およびレンダリングさ&lt;/em&gt;れたブロックが含まれます。たとえば、拡張テンプレートで上書きできるブロックは含ま&lt;em&gt;れ&lt;/em&gt;ません。</target>
        </trans-unit>
        <trans-unit id="19b79bd29901fecdcff5f9b55665749238a8f4d6" translate="yes" xml:space="preserve">
          <source>Blog homepage &amp;ndash; displays the latest few entries.</source>
          <target state="translated">ブログのホームページ&amp;ndash;最新のいくつかのエントリを表示します。</target>
        </trans-unit>
        <trans-unit id="0c586081e94278f4ab3f8651a00d240f20483118" translate="yes" xml:space="preserve">
          <source>Boolean attribute that is set to &lt;code&gt;True&lt;/code&gt; after the registry is fully populated and all &lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;AppConfig.ready()&lt;/code&gt;&lt;/a&gt; methods are called.</source>
          <target state="translated">レジストリが完全に入力され、すべての&lt;a href=&quot;#django.apps.AppConfig.ready&quot;&gt; &lt;code&gt;AppConfig.ready()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出された後に &lt;code&gt;True&lt;/code&gt; に設定されるブール属性。</target>
        </trans-unit>
        <trans-unit id="c57ed60ca047811d1eb4219526ceb9e03a84d622" translate="yes" xml:space="preserve">
          <source>Boolean flag that indicates if a field contains references to one or more other models for its functionality (e.g. &lt;code&gt;ForeignKey&lt;/code&gt;, &lt;code&gt;ManyToManyField&lt;/code&gt;, &lt;code&gt;OneToOneField&lt;/code&gt;, etc.).</source>
          <target state="translated">フィールドにその機能に関する1つ以上の他のモデルへの参照が含まれているかどうかを示すブールフラグ（ &lt;code&gt;ForeignKey&lt;/code&gt; 、 &lt;code&gt;ManyToManyField&lt;/code&gt; 、 &lt;code&gt;OneToOneField&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="a491e8508ab7beeda7e08d5b2926368c7f3f7d60" translate="yes" xml:space="preserve">
          <source>Boolean flag that indicates if a field is used to back another non-hidden field&amp;rsquo;s functionality (e.g. the &lt;code&gt;content_type&lt;/code&gt; and &lt;code&gt;object_id&lt;/code&gt; fields that make up a &lt;code&gt;GenericForeignKey&lt;/code&gt;). The &lt;code&gt;hidden&lt;/code&gt; flag is used to distinguish what constitutes the public subset of fields on the model from all the fields on the model.</source>
          <target state="translated">フィールドが非表示ではない別のフィールドの機能（たとえば、 &lt;code&gt;content_type&lt;/code&gt; を構成するcontent_typeおよび &lt;code&gt;object_id&lt;/code&gt; フィールド）を &lt;code&gt;GenericForeignKey&lt;/code&gt; するために使用されるかどうかを示すブールフラグ。 &lt;code&gt;hidden&lt;/code&gt; フラグは、モデル上のすべてのフィールドからのモデルのフィールドの公開サブセットを構成するものを区別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b400fa2047b32604313a17a1b9dcadb1289ba348" translate="yes" xml:space="preserve">
          <source>Boolean flag that indicates if the field has a database column associated with it.</source>
          <target state="translated">フィールドにデータベースカラムが関連付けられているかどうかを示すブール値フラグ。</target>
        </trans-unit>
        <trans-unit id="31248d2fa09fc5fa8737d35cf40775f786ef09c8" translate="yes" xml:space="preserve">
          <source>Boolean flag that indicates if the field was automatically created, such as the &lt;code&gt;OneToOneField&lt;/code&gt; used by model inheritance.</source>
          <target state="translated">モデルの継承で使用される &lt;code&gt;OneToOneField&lt;/code&gt; など、フィールドが自動的に作成されたかどうかを示すブールフラグ。</target>
        </trans-unit>
        <trans-unit id="24e9d47bbb22d3a1ea6015b1ce3ed95e3bff9524" translate="yes" xml:space="preserve">
          <source>Boolean flag that is &lt;code&gt;True&lt;/code&gt; if the field has a many-to-many relation; &lt;code&gt;False&lt;/code&gt; otherwise. The only field included with Django where this is &lt;code&gt;True&lt;/code&gt; is &lt;code&gt;ManyToManyField&lt;/code&gt;.</source>
          <target state="translated">フィールドに多対多の関係がある場合に &lt;code&gt;True&lt;/code&gt; となるブールフラグ。それ以外の場合は &lt;code&gt;False&lt;/code&gt; 。これが &lt;code&gt;True&lt;/code&gt; であるDjangoに含まれている唯一のフィールドは、 &lt;code&gt;ManyToManyField&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="09e5deb8255bc876a423901b827f061382f2e909" translate="yes" xml:space="preserve">
          <source>Boolean flag that is &lt;code&gt;True&lt;/code&gt; if the field has a many-to-one relation, such as a &lt;code&gt;ForeignKey&lt;/code&gt;; &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">フィールドに &lt;code&gt;ForeignKey&lt;/code&gt; などの多対1の関係がある場合に &lt;code&gt;True&lt;/code&gt; となるブールフラグ。それ以外の場合は &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d99a68cdaba34987d54b364ba1eee856d540243e" translate="yes" xml:space="preserve">
          <source>Boolean flag that is &lt;code&gt;True&lt;/code&gt; if the field has a one-to-many relation, such as a &lt;code&gt;GenericRelation&lt;/code&gt; or the reverse of a &lt;code&gt;ForeignKey&lt;/code&gt;; &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">フィールドに &lt;code&gt;GenericRelation&lt;/code&gt; や &lt;code&gt;ForeignKey&lt;/code&gt; の逆など、1 対多の関係がある場合に &lt;code&gt;True&lt;/code&gt; となるブールフラグ。それ以外の場合は &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbd87de469961b6cd397262e9a12019cbd2d048c" translate="yes" xml:space="preserve">
          <source>Boolean flag that is &lt;code&gt;True&lt;/code&gt; if the field has a one-to-one relation, such as a &lt;code&gt;OneToOneField&lt;/code&gt;; &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">フィールドに &lt;code&gt;OneToOneField&lt;/code&gt; などの1対1の関係がある場合に &lt;code&gt;True&lt;/code&gt; となるブールフラグ。それ以外の場合は &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2fa624072564a810746530375d41bc96fee0481" translate="yes" xml:space="preserve">
          <source>Boolean for whether it&amp;rsquo;s a leap year.</source>
          <target state="translated">うるう年かどうかのブール値。</target>
        </trans-unit>
        <trans-unit id="02774d2bd49b309c70bcbf1cd2d7f51fdc3d2b2f" translate="yes" xml:space="preserve">
          <source>Boolean operators</source>
          <target state="translated">ブール演算子</target>
        </trans-unit>
        <trans-unit id="19ad5fb707718293b132cdce1022b9dd006b360a" translate="yes" xml:space="preserve">
          <source>Boolean value specifying if a textarea input showing the serialized representation of the current geometry is visible, mainly for debugging purposes (default is &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">主にデバッグ目的で、現在のジオメトリのシリアル化された表現を示すtextarea入力が表示されるかどうかを指定するブール値（デフォルトは &lt;code&gt;False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="61eebf1faa58cb7fd72d8d980915192a9a1883b2" translate="yes" xml:space="preserve">
          <source>Boolean value to control whether or not the default test runner serializes the database into an in-memory JSON string before running tests (used to restore the database state between tests if you don&amp;rsquo;t have transactions). You can set this to &lt;code&gt;False&lt;/code&gt; to speed up creation time if you don&amp;rsquo;t have any test classes with &lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;serialized_rollback=True&lt;/a&gt;.</source>
          <target state="translated">デフォルトのテストランナーがテストを実行する前にデータベースをメモリ内のJSON文字列にシリアル化するかどうかを制御するブール値（トランザクションがない場合にテスト間でデータベースの状態を復元するために使用されます）。&lt;a href=&quot;../topics/testing/overview#test-case-serialized-rollback&quot;&gt;serialized_rollback = Trueの&lt;/a&gt;テストクラスがない場合は、これを &lt;code&gt;False&lt;/code&gt; に設定して作成時間を短縮できます。</target>
        </trans-unit>
        <trans-unit id="bbc03b8abef8fb163417b4b62cd1a4b71bca7f80" translate="yes" xml:space="preserve">
          <source>Boolean. Designates that this user has all permissions without explicitly assigning them.</source>
          <target state="translated">論理値です。明示的に割り当てなくても、このユーザーがすべての権限を持っていることを指定します。</target>
        </trans-unit>
        <trans-unit id="479c9baa82213a601019a64be0aae91f03bd41ef" translate="yes" xml:space="preserve">
          <source>Boolean. Designates whether this user account should be considered active. We recommend that you set this flag to &lt;code&gt;False&lt;/code&gt; instead of deleting accounts; that way, if your applications have any foreign keys to users, the foreign keys won&amp;rsquo;t break.</source>
          <target state="translated">ブール。このユーザーアカウントをアクティブと見なすかどうかを指定します。アカウントを削除する代わりに、このフラグを &lt;code&gt;False&lt;/code&gt; に設定することをお勧めします。そうすれば、アプリケーションにユーザーへの外部キーがある場合でも、外部キーが壊れることはありません。</target>
        </trans-unit>
        <trans-unit id="91bc55a48db5f039c7f21820089fa5b15e7ea20a" translate="yes" xml:space="preserve">
          <source>Boolean. Designates whether this user can access the admin site.</source>
          <target state="translated">ブール値。このユーザーが管理サイトにアクセスできるかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="8da8e8c9d12f4610c88b82536a9fcda263519bc0" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;ModelChoiceField&lt;/code&gt; and &lt;code&gt;ModelMultipleChoiceField&lt;/code&gt; have an &lt;code&gt;iterator&lt;/code&gt; attribute which specifies the class used to iterate over the queryset when generating choices. See &lt;a href=&quot;#iterating-relationship-choices&quot;&gt;Iterating relationship choices&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;ModelChoiceField&lt;/code&gt; と &lt;code&gt;ModelMultipleChoiceField&lt;/code&gt; の両方に、選択肢を生成するときにクエリセットを反復処理するために使用されるクラスを指定する &lt;code&gt;iterator&lt;/code&gt; 属性があります。詳細については、&lt;a href=&quot;#iterating-relationship-choices&quot;&gt;関係の選択の反復&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="12100cf35e7460f4cf60e199f11b03115bf48115" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;iri_to_uri()&lt;/code&gt; and &lt;code&gt;uri_to_iri()&lt;/code&gt; functions are idempotent, which means the following is always true:</source>
          <target state="translated">&lt;code&gt;uri_to_iri()&lt;/code&gt; 関数とuri_to_iri（）関数はどちらも &lt;code&gt;iri_to_uri()&lt;/code&gt; 等です。つまり、次のことが常に当てはまります。</target>
        </trans-unit>
        <trans-unit id="4a6859c01d14fc75c8473aed8539e31a0bb9d064" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;send()&lt;/code&gt; and &lt;code&gt;send_robust()&lt;/code&gt; return a list of tuple pairs &lt;code&gt;[(receiver, response), ... ]&lt;/code&gt;, representing the list of called receiver functions and their response values.</source>
          <target state="translated">&lt;code&gt;send()&lt;/code&gt; と &lt;code&gt;send_robust()&lt;/code&gt; はどちらも、呼び出されたレシーバー関数とその応答値のリストを表すタプルペア &lt;code&gt;[(receiver, response), ... ]&lt;/code&gt; リストを返します。</target>
        </trans-unit>
        <trans-unit id="3f32e4a3e6adae83ca09fa4768da096bde0fcc84" translate="yes" xml:space="preserve">
          <source>Both a domain and a port may be returned by &lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;request.get_host()&lt;/code&gt;&lt;/a&gt; when the Host header has a port explicitly specified, e.g. &lt;code&gt;example.com:80&lt;/code&gt;. In such cases, if the lookup fails because the host does not match a record in the database, the port is stripped and the lookup is retried with the domain part only. This does not apply to &lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt;&lt;code&gt;RequestSite&lt;/code&gt;&lt;/a&gt; which will always use the unmodified host.</source>
          <target state="translated">ホストヘッダーに明示的に指定されたポート（例： &lt;code&gt;example.com:80&lt;/code&gt; : 80 &lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;request.get_host()&lt;/code&gt; &lt;/a&gt;場合、ドメインとポートの両方がrequest.get_host（）によって返されます。このような場合、ホストがデータベースのレコードと一致しないために検索が失敗すると、ポートが削除され、検索はドメイン部分のみで再試行されます。これは、常に変更されていないホストを使用する&lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt; &lt;code&gt;RequestSite&lt;/code&gt; に&lt;/a&gt;は適用されません。</target>
        </trans-unit>
        <trans-unit id="42d7aaf353ff186a2edd9f7c4dd2ff8f1a8aa9fb" translate="yes" xml:space="preserve">
          <source>Both classes return SQL with the template:</source>
          <target state="translated">どちらのクラスもテンプレートを使ってSQLを返します。</target>
        </trans-unit>
        <trans-unit id="acd8b8f2ced06e6045d9801d6449d0f0128815b7" translate="yes" xml:space="preserve">
          <source>Both ends of a many-to-many relationship get automatic API access to the other end. The API works similar to a &amp;ldquo;backward&amp;rdquo; one-to-many relationship, above.</source>
          <target state="translated">多対多の関係の両端は、もう一方の端への自動APIアクセスを取得します。APIは、上記の「後方」の1対多の関係と同様に機能します。</target>
        </trans-unit>
        <trans-unit id="c3f1e4df24e414c20facb4ae64fef56a0d425b5c" translate="yes" xml:space="preserve">
          <source>Both of the exceptions are subclasses of &lt;a href=&quot;#django.core.paginator.InvalidPage&quot;&gt;&lt;code&gt;InvalidPage&lt;/code&gt;&lt;/a&gt;, so you can handle them both with &lt;code&gt;except InvalidPage&lt;/code&gt;.</source>
          <target state="translated">どちらの例外も&lt;a href=&quot;#django.core.paginator.InvalidPage&quot;&gt; &lt;code&gt;InvalidPage&lt;/code&gt; の&lt;/a&gt;サブクラスであるため、InvalidPageを &lt;code&gt;except InvalidPage&lt;/code&gt; て両方を処理できます。</target>
        </trans-unit>
        <trans-unit id="99d6855a06959ae137281d00c142ba20aba534d4" translate="yes" xml:space="preserve">
          <source>Both of these methods will perform their queries using the default manager for the model. If you need to emulate filtering used by a custom manager, or want to perform one-off custom filtering, both methods also accept optional keyword arguments, which should be in the format described in &lt;a href=&quot;querysets#field-lookups&quot;&gt;Field lookups&lt;/a&gt;.</source>
          <target state="translated">これらのメソッドはどちらも、モデルのデフォルトマネージャーを使用してクエリを実行します。カスタムマネージャーが使用するフィルタリングをエミュレートする必要がある場合、または1回限りのカスタムフィルタリングを実行する場合は、両方のメソッドがオプションのキーワード引数も受け入れ&lt;a href=&quot;querysets#field-lookups&quot;&gt;ます&lt;/a&gt;。これは、フィールドルックアップで説明されている形式である必要があります。</target>
        </trans-unit>
        <trans-unit id="71ccddc398be9491bbc09cb407c8d0178fb35981" translate="yes" xml:space="preserve">
          <source>Both of these options are meant to normalize URLs. The philosophy is that each URL should exist in one, and only one, place. Technically a URL &lt;code&gt;foo.com/bar&lt;/code&gt; is distinct from &lt;code&gt;foo.com/bar/&lt;/code&gt; &amp;ndash; a search-engine indexer would treat them as separate URLs &amp;ndash; so it&amp;rsquo;s best practice to normalize URLs.</source>
          <target state="translated">これらのオプションはどちらも、URLを正規化するためのものです。哲学は、各URLは1つだけの場所に存在する必要があるということです。技術的にはURLの &lt;code&gt;foo.com/bar&lt;/code&gt; は区別され &lt;code&gt;foo.com/bar/&lt;/code&gt; -検索エンジンのインデクサは、別のURLとして扱うだろう-それは正規のURLへの最善の方法ですので。</target>
        </trans-unit>
        <trans-unit id="e610620f9dfb80553f706cbec4671b3dfbcc8a64" translate="yes" xml:space="preserve">
          <source>Both patterns use nested arguments and will resolve: for example, &lt;code&gt;blog/page-2/&lt;/code&gt; will result in a match to &lt;code&gt;blog_articles&lt;/code&gt; with two positional arguments: &lt;code&gt;page-2/&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;. The second pattern for &lt;code&gt;comments&lt;/code&gt; will match &lt;code&gt;comments/page-2/&lt;/code&gt; with keyword argument &lt;code&gt;page_number&lt;/code&gt; set to 2. The outer argument in this case is a non-capturing argument &lt;code&gt;(?:...)&lt;/code&gt;.</source>
          <target state="translated">両方のパターンはネストされた引数を使用し、解決します。たとえば、 &lt;code&gt;blog/page-2/&lt;/code&gt; は、2つの位置引数（ &lt;code&gt;page-2/&lt;/code&gt; と &lt;code&gt;2&lt;/code&gt; )を持つ &lt;code&gt;blog_articles&lt;/code&gt; に一致します。 &lt;code&gt;comments&lt;/code&gt; の2番目のパターンは、comments &lt;code&gt;comments/page-2/&lt;/code&gt; 一致し、キーワード引数 &lt;code&gt;page_number&lt;/code&gt; は2に設定されます。この場合の外部引数は、非キャプチャー引数 &lt;code&gt;(?:...)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3743f3696dbe043adb8aa03f4c03181ff9c5c72e" translate="yes" xml:space="preserve">
          <source>Both queries return a list of publishers that have at least one book with a rating exceeding 3.0, hence publisher C is excluded.</source>
          <target state="translated">どちらのクエリも、評価が3.0を超える本を少なくとも1冊持っている出版社のリストを返しますので、C出版社は除外されます。</target>
        </trans-unit>
        <trans-unit id="d97c990f9f7ab50a3461446f82ab6fef4ca78133" translate="yes" xml:space="preserve">
          <source>Both session stores are quite fast, but the simple cache is faster because it disregards persistence. In most cases, the &lt;code&gt;cached_db&lt;/code&gt; backend will be fast enough, but if you need that last bit of performance, and are willing to let session data be expunged from time to time, the &lt;code&gt;cache&lt;/code&gt; backend is for you.</source>
          <target state="translated">どちらのセッションストアも非常に高速ですが、永続性を無視するため、単純なキャッシュの方が高速です。ほとんどの場合、 &lt;code&gt;cached_db&lt;/code&gt; バックエンドは十分高速ですが、パフォーマンスの最後のビットが必要で、セッションデータを時々消去できる &lt;code&gt;cache&lt;/code&gt; は、キャッシュバックエンドが適しています。</target>
        </trans-unit>
        <trans-unit id="1bae8be7a054de22b21b2c2ad0a3ad76499d8599" translate="yes" xml:space="preserve">
          <source>Both sides of a &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; relation:</source>
          <target state="translated">&lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;リレーションの両側：</target>
        </trans-unit>
        <trans-unit id="8a6cceefce0f8210367eb73d0138c56d8b39b044" translate="yes" xml:space="preserve">
          <source>Both the Django ORM and MySQL (when using the InnoDB &lt;a href=&quot;#mysql-storage-engines&quot;&gt;storage engine&lt;/a&gt;) support database &lt;a href=&quot;../topics/db/transactions#topics-db-transactions-savepoints&quot;&gt;savepoints&lt;/a&gt;.</source>
          <target state="translated">Django ORMとMySQL（InnoDB &lt;a href=&quot;#mysql-storage-engines&quot;&gt;ストレージエンジン&lt;/a&gt;を使用している場合）はどちらもデータベース&lt;a href=&quot;../topics/db/transactions#topics-db-transactions-savepoints&quot;&gt;セーブポイントを&lt;/a&gt;サポートしています。</target>
        </trans-unit>
        <trans-unit id="9b9c0a81accd21d0f61c97f00b3ec60c72bb0902" translate="yes" xml:space="preserve">
          <source>Both these exception classes are attributes of the model class, and specific to that model. If you want to handle such exceptions from several &lt;code&gt;get()&lt;/code&gt; calls for different models, you can use their generic base classes. For example, you can use &lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt; to handle &lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions from multiple models:</source>
          <target state="translated">これらの例外クラスは両方ともモデルクラスの属性であり、そのモデルに固有です。異なるモデルに対する複数の &lt;code&gt;get()&lt;/code&gt; 呼び出しからのこのような例外を処理する場合は、それらの汎用基本クラスを使用できます。たとえば、あなたが使用することができます&lt;a href=&quot;../exceptions#django.core.exceptions.ObjectDoesNotExist&quot;&gt; &lt;code&gt;django.core.exceptions.ObjectDoesNotExist&lt;/code&gt; を&lt;/a&gt;処理するため&lt;a href=&quot;class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;複数のモデルからの例外を：</target>
        </trans-unit>
        <trans-unit id="8832043234b86b4b4c61f7a25dbd37e888c4ed91" translate="yes" xml:space="preserve">
          <source>Bound and unbound form instances</source>
          <target state="translated">束縛されたフォームインスタンスと束縛されていないフォームインスタンス</target>
        </trans-unit>
        <trans-unit id="fee2a37bc6ae6c3be9ba2395925beb828979f93b" translate="yes" xml:space="preserve">
          <source>Bound and unbound forms</source>
          <target state="translated">束縛された形と束縛されていない形</target>
        </trans-unit>
        <trans-unit id="ae9335d6b2cceffabf51455e2150c204c4de13e8" translate="yes" xml:space="preserve">
          <source>Boundary geometries may be exported as WKT and GeoJSON:</source>
          <target state="translated">境界形状は、WKTとGeoJSONとしてエクスポートすることができます。</target>
        </trans-unit>
        <trans-unit id="44d29dfb08a346485e2a7faab9c37191666de3dd" translate="yes" xml:space="preserve">
          <source>British chain (Benoit 1895 B)</source>
          <target state="translated">英国チェーン(ブノワ1895 B</target>
        </trans-unit>
        <trans-unit id="bb9b1548d029b52e63c45098b3e4b382f1c345d7" translate="yes" xml:space="preserve">
          <source>British chain (Sears 1922 truncated)</source>
          <target state="translated">イギリスチェーン</target>
        </trans-unit>
        <trans-unit id="a3b47fc7d264802e61b608afa5fc13e1a4a0666c" translate="yes" xml:space="preserve">
          <source>British chain (Sears 1922)</source>
          <target state="translated">イギリスチェーン</target>
        </trans-unit>
        <trans-unit id="c832b47382ee35ce02018d224b87da6b8e8d32f1" translate="yes" xml:space="preserve">
          <source>British foot (Sears 1922)</source>
          <target state="translated">イギリス足</target>
        </trans-unit>
        <trans-unit id="e2be18390fee4d6f980764e91b7b6316577e071a" translate="yes" xml:space="preserve">
          <source>British yard (Sears 1922)</source>
          <target state="translated">イギリスヤード</target>
        </trans-unit>
        <trans-unit id="ae9284e75c69a8ace06b4c17a4b8aa1d4c8ce2a0" translate="yes" xml:space="preserve">
          <source>Browser-length sessions vs. persistent sessions</source>
          <target state="translated">ブラウザ長のセッションと永続的なセッション</target>
        </trans-unit>
        <trans-unit id="00cf37314d677742b22b839a33a7a79037f8f83f" translate="yes" xml:space="preserve">
          <source>Browsers properly respecting the HSTS header will refuse to allow users to bypass warnings and connect to a site with an expired, self-signed, or otherwise invalid SSL certificate. If you use HSTS, make sure your certificates are in good shape and stay that way!</source>
          <target state="translated">HSTSヘッダを適切に尊重するブラウザは、ユーザーが警告を回避して、有効期限が切れている、自己署名されている、または無効なSSL証明書を持つサイトに接続することを拒否します。HSTS を使用している場合は、証明書の状態が良好であることを確認して、その状態を維持してください。</target>
        </trans-unit>
        <trans-unit id="3966d5b1a06d6426db8194be0c8cb2e845d459a2" translate="yes" xml:space="preserve">
          <source>Browsers that support &lt;code&gt;X-Frame-Options&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;X-Frame-Options&lt;/code&gt; をサポートするブラウザー</target>
        </trans-unit>
        <trans-unit id="bff21794c75ce5c0b47aee10ec62091dbe075b3c" translate="yes" xml:space="preserve">
          <source>Browsers use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer&quot;&gt;the Referer header&lt;/a&gt; as a way to send information to a site about how users got there. When a user clicks a link, the browser will send the full URL of the linking page as the referrer. While this can be useful for some purposes &amp;ndash; like figuring out who&amp;rsquo;s linking to your site &amp;ndash; it also can cause privacy concerns by informing one site that a user was visiting another site.</source>
          <target state="translated">ブラウザは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer&quot;&gt;、&lt;/a&gt;ユーザーがアクセスした方法に関する情報をサイトに送信する方法として、Refererヘッダーを使用します。ユーザーがリンクをクリックすると、ブラウザはリンク元ページの完全なURLを参照元として送信します。これは、サイトにリンクしているユーザーを特定するなど、一部の目的には役立ちますが、ユーザーが別のサイトにアクセスしていることをサイトに通知することにより、プライバシーの問題を引き起こす可能性もあります。</target>
        </trans-unit>
        <trans-unit id="36bb926a81174dc836269f018cacaa9ddb032971" translate="yes" xml:space="preserve">
          <source>Browsers use the &lt;code&gt;Referer&lt;/code&gt; header as a way to send information to a site about how users got there. By setting a &lt;em&gt;Referrer Policy&lt;/em&gt; you can help to protect the privacy of your users, restricting under which circumstances the &lt;code&gt;Referer&lt;/code&gt; header is set. See &lt;a href=&quot;../ref/middleware#referrer-policy&quot;&gt;the referrer policy section of the security middleware reference&lt;/a&gt; for details.</source>
          <target state="translated">ブラウザは、ユーザーがアクセスした方法に関する情報をサイトに送信する方法として、 &lt;code&gt;Referer&lt;/code&gt; ヘッダーを使用します。設定することで、&lt;em&gt;参照元のポリシーを&lt;/em&gt;、あなたはどのような状況の下で制限し、ユーザーのプライバシーを保護するために助けることができる &lt;code&gt;Referer&lt;/code&gt; ヘッダが設定されています。詳細について&lt;a href=&quot;../ref/middleware#referrer-policy&quot;&gt;は、セキュリティミドルウェアリファレンスのリファラーポリシーのセクション&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="6f52d68a1f34947d06eef6f08c481a9dad277bb1" translate="yes" xml:space="preserve">
          <source>Bugs are fixed.</source>
          <target state="translated">バグは修正されています。</target>
        </trans-unit>
        <trans-unit id="ff039448f0a19f651133a8f20db33c0b32b356f4" translate="yes" xml:space="preserve">
          <source>Build the keyword arguments required to instantiate the form.</source>
          <target state="translated">フォームのインスタンス化に必要なキーワード引数を構築します。</target>
        </trans-unit>
        <trans-unit id="4c32b4c0475aa1d3c17d443976396036e0bec114" translate="yes" xml:space="preserve">
          <source>Building a form</source>
          <target state="translated">フォームの構築</target>
        </trans-unit>
        <trans-unit id="efba0068ecb38a741e9fe95691bfca9f00ef2211" translate="yes" xml:space="preserve">
          <source>Building a form in Django</source>
          <target state="translated">Django でフォームを構築する</target>
        </trans-unit>
        <trans-unit id="8cd56ee99256f6026c82a35e18d75551094d8936" translate="yes" xml:space="preserve">
          <source>Building from source</source>
          <target state="translated">ソースからの構築</target>
        </trans-unit>
        <trans-unit id="fb83f3e89a9115c5f9727e9debcc0ec154d7f9c1" translate="yes" xml:space="preserve">
          <source>Building up Django&amp;rsquo;s generic class-based views</source>
          <target state="translated">Djangoの一般的なクラスベースのビューを構築する</target>
        </trans-unit>
        <trans-unit id="abfb756f1960f2a68e3831b83e6578fb94d59131" translate="yes" xml:space="preserve">
          <source>Building your own</source>
          <target state="translated">自分の建物を建てる</target>
        </trans-unit>
        <trans-unit id="5a2e2711854025997e1bea31255f325c45d238b5" translate="yes" xml:space="preserve">
          <source>Built-in &lt;code&gt;Field&lt;/code&gt; classes</source>
          <target state="translated">組み込み &lt;code&gt;Field&lt;/code&gt; クラス</target>
        </trans-unit>
        <trans-unit id="3431b3da19de9cdec7e1c4e704fd582c17cbdfca" translate="yes" xml:space="preserve">
          <source>Built-in Expressions</source>
          <target state="translated">組込み式</target>
        </trans-unit>
        <trans-unit id="3b1bf6558c61898cd1ba91e374db1fd1c5275cf0" translate="yes" xml:space="preserve">
          <source>Built-in Views</source>
          <target state="translated">ビルトインビュー</target>
        </trans-unit>
        <trans-unit id="d46393a64dbe8b8f5ed2a192064e0dd5bdb933ee" translate="yes" xml:space="preserve">
          <source>Built-in backends</source>
          <target state="translated">ビルトインバックエンド</target>
        </trans-unit>
        <trans-unit id="abd2d2ba6bc6351f5d33bec56744bfc9e580bedd" translate="yes" xml:space="preserve">
          <source>Built-in class-based generic views</source>
          <target state="translated">クラスベースの汎用ビューを内蔵</target>
        </trans-unit>
        <trans-unit id="1a9306a7fdf022ff047c4dfb202dab7a00b06175" translate="yes" xml:space="preserve">
          <source>Built-in class-based views API</source>
          <target state="translated">ビルトインのクラスベースのビュー API</target>
        </trans-unit>
        <trans-unit id="4f20ddc74b40574bc30f602019a0bac7988651d9" translate="yes" xml:space="preserve">
          <source>Built-in filter reference</source>
          <target state="translated">内蔵フィルターリファレンス</target>
        </trans-unit>
        <trans-unit id="5f0d3d822c4b0fee49fa41ac9fdefa5098291d6d" translate="yes" xml:space="preserve">
          <source>Built-in forms</source>
          <target state="translated">ビルトインフォーム</target>
        </trans-unit>
        <trans-unit id="d6f9f7ef35fc2e617b477e67d6061e7260c90e32" translate="yes" xml:space="preserve">
          <source>Built-in tag reference</source>
          <target state="translated">内蔵タグ参照</target>
        </trans-unit>
        <trans-unit id="e37629fd03730fe9ec1c35fa1b442835f61c0a1c" translate="yes" xml:space="preserve">
          <source>Built-in template context processors</source>
          <target state="translated">組み込みのテンプレートコンテキストプロセッサ</target>
        </trans-unit>
        <trans-unit id="d157a68954f4d33e9dd01a84397acf6ccb6634eb" translate="yes" xml:space="preserve">
          <source>Built-in template tags and filters</source>
          <target state="translated">組み込みのテンプレートタグとフィルタ</target>
        </trans-unit>
        <trans-unit id="3b0baaf1c76bb24ba5453ea99b63a9fee40f1ccd" translate="yes" xml:space="preserve">
          <source>Built-in upload handlers</source>
          <target state="translated">組み込みのアップロードハンドラ</target>
        </trans-unit>
        <trans-unit id="853adbe6a9c9185cf38b20fec800da9b6c47bf4a" translate="yes" xml:space="preserve">
          <source>Built-in validators</source>
          <target state="translated">内蔵バリデータ</target>
        </trans-unit>
        <trans-unit id="f346e66e328aed1c2cf792169078744901d465ee" translate="yes" xml:space="preserve">
          <source>Built-in variables</source>
          <target state="translated">内蔵変数</target>
        </trans-unit>
        <trans-unit id="98ba7b671f23dab9f34d2f8ae9ea6a550bd27607" translate="yes" xml:space="preserve">
          <source>Built-in widgets</source>
          <target state="translated">内蔵ウィジェット</target>
        </trans-unit>
        <trans-unit id="c618b84834bda232d4a74573f63d885a24657384" translate="yes" xml:space="preserve">
          <source>Built-in-template form renderers</source>
          <target state="translated">組み込みのテンプレートフォームレンダラ</target>
        </trans-unit>
        <trans-unit id="2de65647893a05f4aebec02d34419686bb84c5fd" translate="yes" xml:space="preserve">
          <source>Builtin tags</source>
          <target state="translated">ビルトインタグ</target>
        </trans-unit>
        <trans-unit id="31d6613c73b953d8d865da15d64e9bacf91155de" translate="yes" xml:space="preserve">
          <source>Bulk delete some &lt;code&gt;Publications&lt;/code&gt; - references to deleted publications should go:</source>
          <target state="translated">一部の &lt;code&gt;Publications&lt;/code&gt; 一括削除-削除されたパブリケーションへの参照は次のようになります。</target>
        </trans-unit>
        <trans-unit id="d4eb7338477ed5baba9c088537c4a1c8a9a6d6ec" translate="yes" xml:space="preserve">
          <source>Bulk delete some articles - references to deleted objects should go:</source>
          <target state="translated">一部の記事を一括削除-削除されたオブジェクトへの参照は削除されるべきです。</target>
        </trans-unit>
        <trans-unit id="43ec9d792d7de6f7125957e047e69342c821effb" translate="yes" xml:space="preserve">
          <source>Bundled serializers</source>
          <target state="translated">バンドルされたシリアライザ</target>
        </trans-unit>
        <trans-unit id="ce1a69446d0c672b58fb0530613c60a9efa3e876" translate="yes" xml:space="preserve">
          <source>But both cases will result in a queryset where each model is annotated with an extra attribute &lt;code&gt;field_lower&lt;/code&gt; produced, roughly, from the following SQL:</source>
          <target state="translated">ただし、どちらの場合も、大まかに次のSQLから生成された追加の属性 &lt;code&gt;field_lower&lt;/code&gt; で各モデルに注釈が付けられたクエリセットになります。</target>
        </trans-unit>
        <trans-unit id="cdd5ec48453857bbdf3fe2e5c18bb890c739f864" translate="yes" xml:space="preserve">
          <source>But first we need to tell our project that the &lt;code&gt;polls&lt;/code&gt; app is installed.</source>
          <target state="translated">ただし、最初にプロジェクトに &lt;code&gt;polls&lt;/code&gt; アプリがインストールされていることを通知する必要があります。</target>
        </trans-unit>
        <trans-unit id="5753035110de1edd2e59a272326ee1a6bd2f5f14" translate="yes" xml:space="preserve">
          <source>But given the fact that it makes use of the &lt;a href=&quot;#django.contrib.staticfiles.views.serve&quot;&gt;&lt;code&gt;django.contrib.staticfiles.views.serve()&lt;/code&gt;&lt;/a&gt; view described above, it can transparently overlay at test execution-time the assets provided by the &lt;code&gt;staticfiles&lt;/code&gt; finders. This means you don&amp;rsquo;t need to run &lt;a href=&quot;#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; before or as a part of your tests setup.</source>
          <target state="translated">しかし、上記の &lt;code&gt;staticfiles&lt;/code&gt; &lt;a href=&quot;#django.contrib.staticfiles.views.serve&quot;&gt; &lt;code&gt;django.contrib.staticfiles.views.serve()&lt;/code&gt; &lt;/a&gt;ビューを利用するという事実を踏まえると、静的ファイルファインダーによって提供されるアセットを、テスト実行時に透過的にオーバーレイできます。つまり、テストセットアップの前またはその一部として&lt;a href=&quot;#django-admin-collectstatic&quot;&gt; &lt;code&gt;collectstatic&lt;/code&gt; &lt;/a&gt;を実行する必要はありません。</target>
        </trans-unit>
        <trans-unit id="271ed46e914dc0e2a6b956959129204e40b78817" translate="yes" xml:space="preserve">
          <source>But how is this possible, given that a model class doesn&amp;rsquo;t know which other model classes are related to it until those other model classes are loaded?</source>
          <target state="translated">しかし、モデルクラスが他のどのモデルクラスがロードされるまで、それに関連する他のモデルクラスを認識していない場合、これはどのように可能ですか？</target>
        </trans-unit>
        <trans-unit id="2d3b87b96c617efee7554c67154e6e2d789c302f" translate="yes" xml:space="preserve">
          <source>But if &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;'http://static.example.com/'&lt;/code&gt;:</source>
          <target state="translated">しかし、&lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'http://static.example.com/'&lt;/code&gt; の場合：</target>
        </trans-unit>
        <trans-unit id="5d8dcf12056db2b6fbc7eb04370da7b125c9a98e" translate="yes" xml:space="preserve">
          <source>But if you want to add content incrementally, you can use &lt;code&gt;response&lt;/code&gt; as a file-like object:</source>
          <target state="translated">ただし、コンテンツを段階的に追加する場合は、ファイルのようなオブジェクトとして &lt;code&gt;response&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="83b3069ac39c0cba44bbc451a1af61871751efd3" translate="yes" xml:space="preserve">
          <source>But in general, callable attributes cause DB lookups every time:</source>
          <target state="translated">しかし、一般的には、呼び出し可能な属性は毎回DBのルックアップを発生させます。</target>
        </trans-unit>
        <trans-unit id="56434ede0f21c5685ad9ee8c7618d6c97bbfe5e5" translate="yes" xml:space="preserve">
          <source>But it could also authenticate a token, like so:</source>
          <target state="translated">しかし、このようにトークンを認証することもできます。</target>
        </trans-unit>
        <trans-unit id="1783fb3605ffe7744e2f0fa6f6997964ffb0c644" translate="yes" xml:space="preserve">
          <source>But the common case is to read templates from the filesystem. If your template files are not stored with a UTF-8 encoding, adjust the &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting. The built-in &lt;a href=&quot;../topics/templates#module-django.template.backends.django&quot;&gt;&lt;code&gt;django&lt;/code&gt;&lt;/a&gt; backend provides the &lt;code&gt;'file_charset'&lt;/code&gt; option to change the encoding used to read files from disk.</source>
          <target state="translated">しかし、一般的なケースは、ファイルシステムからテンプレートを読み取ることです。テンプレートファイルがUTF-8エンコーディングで保存されていない場合は、&lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;設定を調整します。組み込みの&lt;a href=&quot;../topics/templates#module-django.template.backends.django&quot;&gt; &lt;code&gt;django&lt;/code&gt; &lt;/a&gt;バックエンドは、ディスクからファイルを読み取るために使用されるエンコーディングを変更するための &lt;code&gt;'file_charset'&lt;/code&gt; オプションを提供します。</target>
        </trans-unit>
        <trans-unit id="ed19ac65e72f0848620202faf2b7776586f7554b" translate="yes" xml:space="preserve">
          <source>But there is a solution: instead of doing something during the atomic block (transaction) and then undoing it if the transaction fails, use &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt; to delay doing it in the first place until after the transaction succeeds. It&amp;rsquo;s a lot easier to undo something you never did in the first place!</source>
          <target state="translated">しかし、解決策があります。アトミックブロック（トランザクション）の間に何かを実行し、トランザクションが失敗した場合に元に戻すのではなく、&lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt; &lt;code&gt;on_commit()&lt;/code&gt; &lt;/a&gt;を使用して、最初にトランザクションが成功するまでそれを遅らせます。元々やったことがないことを元に戻す方がずっと簡単です！</target>
        </trans-unit>
        <trans-unit id="4fb76733fed315bb70ba8a5197a05cf7d9d269f1" translate="yes" xml:space="preserve">
          <source>But this testing thing looks kinda hard&amp;hellip;</source>
          <target state="translated">しかし、このテストはちょっと難しいようです&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="995464aec11d3775483f73b3e3198e51f5f9435c" translate="yes" xml:space="preserve">
          <source>But where&amp;rsquo;s our poll app? It&amp;rsquo;s not displayed on the admin index page.</source>
          <target state="translated">しかし、投票アプリはどこにありますか？管理索引ページには表示されません。</target>
        </trans-unit>
        <trans-unit id="2202cd3e9d759b197b3d583981e4c9ded5099f1f" translate="yes" xml:space="preserve">
          <source>But with &lt;code&gt;ArticleFormset(prefix='article')&lt;/code&gt; that becomes:</source>
          <target state="translated">ただし、 &lt;code&gt;ArticleFormset(prefix='article')&lt;/code&gt; を使用すると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="c6aa1c618c20f2f5550cf9ffdc2fe0d9015e8305" translate="yes" xml:space="preserve">
          <source>But, don&amp;rsquo;t do that. It&amp;rsquo;s silly.</source>
          <target state="translated">しかし、それをしないでください。ばかげている。</target>
        </trans-unit>
        <trans-unit id="b90ee8a334b2c076d6d7dd057c7630c1fb36218d" translate="yes" xml:space="preserve">
          <source>But, really, this is an inefficient way of adding &lt;code&gt;Choice&lt;/code&gt; objects to the system. It&amp;rsquo;d be better if you could add a bunch of Choices directly when you create the &lt;code&gt;Question&lt;/code&gt; object. Let&amp;rsquo;s make that happen.</source>
          <target state="translated">しかし、これは実際には、 &lt;code&gt;Choice&lt;/code&gt; オブジェクトをシステムに追加する非効率的な方法です。 &lt;code&gt;Question&lt;/code&gt; オブジェクトを作成するときに、一連の選択肢を直接追加できればより良いでしょう。それを実現しましょう。</target>
        </trans-unit>
        <trans-unit id="8ec7007553f17b8a87dc51c4e5d190a629ec94b2" translate="yes" xml:space="preserve">
          <source>But, suppose we have two templates rendering the template snippet from above at the same time:</source>
          <target state="translated">しかし、上から見たテンプレートスニペットを2つのテンプレートで同時にレンダリングしているとします。</target>
        </trans-unit>
        <trans-unit id="ae11cf1c68f0d41091e3883e5a07294053388ce7" translate="yes" xml:space="preserve">
          <source>But, there&amp;rsquo;s a problem with &lt;code&gt;CurrentTimeNode2&lt;/code&gt;: The variable name &lt;code&gt;current_time&lt;/code&gt; is hard-coded. This means you&amp;rsquo;ll need to make sure your template doesn&amp;rsquo;t use &lt;code&gt;{{ current_time }}&lt;/code&gt; anywhere else, because the &lt;code&gt;{% current_time %}&lt;/code&gt; will blindly overwrite that variable&amp;rsquo;s value. A cleaner solution is to make the template tag specify the name of the output variable, like so:</source>
          <target state="translated">ただし、 &lt;code&gt;CurrentTimeNode2&lt;/code&gt; には問題があります。変数名 &lt;code&gt;current_time&lt;/code&gt; はハードコードされています。つまり、 &lt;code&gt;{% current_time %}&lt;/code&gt; がその変数の値を盲目的に上書きするため、テンプレートが他の場所で &lt;code&gt;{{ current_time }}&lt;/code&gt; 使用しないようにする必要があります。より明確な解決策は、テンプレートタグに次のように出力変数の名前を指定させることです。</target>
        </trans-unit>
        <trans-unit id="af714f981e3d0837ea96ccaa766e31ed322e29d1" translate="yes" xml:space="preserve">
          <source>But:</source>
          <target state="translated">But:</target>
        </trans-unit>
        <trans-unit id="c9e38d8918fd75c2b7850a802ea1152efd6d8fdd" translate="yes" xml:space="preserve">
          <source>By convention, Django appends &lt;code&gt;&quot;_id&quot;&lt;/code&gt; to the foreign key field name. (Yes, you can override this, as well.)</source>
          <target state="translated">慣例により、Djangoは外部キーフィールド名に &lt;code&gt;&quot;_id&quot;&lt;/code&gt; を追加します。（はい、これをオーバーライドすることもできます。）</target>
        </trans-unit>
        <trans-unit id="c24d074a6e8f2705c0835ca4d3bd1c296feeb47d" translate="yes" xml:space="preserve">
          <source>By convention, the logger name is usually &lt;code&gt;__name__&lt;/code&gt;, the name of the Python module that contains the logger. This allows you to filter and handle logging calls on a per-module basis. However, if you have some other way of organizing your logging messages, you can provide any dot-separated name to identify your logger:</source>
          <target state="translated">慣例により、ロガーの名前は通常 &lt;code&gt;__name__&lt;/code&gt; です。これは、ロガーを含むPythonモジュールの名前です。これにより、モジュールごとにロギング呼び出しをフィルタリングして処理できます。ただし、ロギングメッセージを整理する他の方法がある場合は、ロガーを識別するためにドットで区切られた名前を指定できます。</target>
        </trans-unit>
        <trans-unit id="9d0f7390794176de87ead84711c5da8d6a4134f8" translate="yes" xml:space="preserve">
          <source>By default (when &lt;a href=&quot;../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;), the template system reads and compiles your templates every time they&amp;rsquo;re rendered. While the Django template system is quite fast, the overhead from reading and compiling templates can add up.</source>
          <target state="translated">デフォルトでは（&lt;a href=&quot;../settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;True&lt;/code&gt; の場合）、テンプレートシステムはレンダリングされるたびにテンプレートを読み取り、コンパイルします。Djangoテンプレートシステムは非常に高速ですが、テンプレートの読み取りとコンパイルによるオーバーヘッドが増える可能性があります。</target>
        </trans-unit>
        <trans-unit id="5cea576a06f7095919010d4c370cb3e14411cc8a" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;django-admin makemessages&lt;/code&gt;&lt;/a&gt; examines every file that has the &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt; or &lt;code&gt;.py&lt;/code&gt; file extension. If you want to override that default, use the &lt;a href=&quot;../../ref/django-admin#cmdoption-makemessages-extension&quot;&gt;&lt;code&gt;--extension&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;-e&lt;/code&gt; option to specify the file extensions to examine:</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt; &lt;code&gt;django-admin makemessages&lt;/code&gt; &lt;/a&gt;は、ファイル拡張子が &lt;code&gt;.html&lt;/code&gt; 、 &lt;code&gt;.txt&lt;/code&gt; 、または &lt;code&gt;.py&lt;/code&gt; のすべてのファイルを調べます。そのデフォルトを上書きする場合は、&lt;a href=&quot;../../ref/django-admin#cmdoption-makemessages-extension&quot;&gt; &lt;code&gt;--extension&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;-e&lt;/code&gt; オプションを使用して、調査するファイル拡張子を指定します。</target>
        </trans-unit>
        <trans-unit id="7435d77f9850047b183880f9c769fa9e9d75538d" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;--parallel&lt;/code&gt; runs one process per core according to &lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count&quot;&gt;&lt;code&gt;multiprocessing.cpu_count()&lt;/code&gt;&lt;/a&gt;. You can adjust the number of processes either by providing it as the option&amp;rsquo;s value, e.g. &lt;code&gt;--parallel=4&lt;/code&gt;, or by setting the &lt;a href=&quot;#envvar-DJANGO_TEST_PROCESSES&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;DJANGO_TEST_PROCESSES&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;--parallel&lt;/code&gt; は&lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count&quot;&gt; &lt;code&gt;multiprocessing.cpu_count()&lt;/code&gt; &lt;/a&gt;に従ってコアごとに1つのプロセスを実行します。プロセスの数は、オプションの値（ &lt;code&gt;--parallel=4&lt;/code&gt; など)として指定するか、&lt;a href=&quot;#envvar-DJANGO_TEST_PROCESSES&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;DJANGO_TEST_PROCESSES&lt;/code&gt; &lt;/a&gt;環境変数を設定することで調整できます。</target>
        </trans-unit>
        <trans-unit id="69d02a00a5ac758fbc8b68701447435660af8c4d" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;--parallel&lt;/code&gt; runs one process per core according to &lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count&quot;&gt;&lt;code&gt;multiprocessing.cpu_count()&lt;/code&gt;&lt;/a&gt;. You can adjust the number of processes either by providing it as the option&amp;rsquo;s value, e.g. &lt;code&gt;--parallel=4&lt;/code&gt;, or by setting the &lt;code&gt;DJANGO_TEST_PROCESSES&lt;/code&gt; environment variable.</source>
          <target state="translated">デフォルトでは、-- &lt;code&gt;--parallel&lt;/code&gt; は&lt;a href=&quot;https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count&quot;&gt; &lt;code&gt;multiprocessing.cpu_count()&lt;/code&gt; &lt;/a&gt;に従ってコアごとに1つのプロセスを実行します。プロセスの数を調整するには、オプションの値として &lt;code&gt;--parallel=4&lt;/code&gt; などを指定するか、 &lt;code&gt;DJANGO_TEST_PROCESSES&lt;/code&gt; 環境変数を設定します。</target>
        </trans-unit>
        <trans-unit id="0aa337c075d5be61fd7c91e2cc57ba6b377ffc38" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;CovarPop&lt;/code&gt; returns the general population covariance. However, if &lt;code&gt;sample=True&lt;/code&gt;, the return value will be the sample population covariance.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;CovarPop&lt;/code&gt; は一般的な母共分散を返します。ただし、 &lt;code&gt;sample=True&lt;/code&gt; の場合、戻り値は標本母集団の共分散になります。</target>
        </trans-unit>
        <trans-unit id="18fd94d22755789d17780e34a12e7968e3d6d722" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;Form.field_order=None&lt;/code&gt;, which retains the order in which you define the fields in your form class. If &lt;code&gt;field_order&lt;/code&gt; is a list of field names, the fields are ordered as specified by the list and remaining fields are appended according to the default order. Unknown field names in the list are ignored. This makes it possible to disable a field in a subclass by setting it to &lt;code&gt;None&lt;/code&gt; without having to redefine ordering.</source>
          <target state="translated">デフォルトでは &lt;code&gt;Form.field_order=None&lt;/code&gt; で、フォームクラスでフィールドを定義する順序を保持します。 &lt;code&gt;field_order&lt;/code&gt; がフィールド名のリストである場合、フィールドはリストで指定された順序で並べられ、残りのフィールドはデフォルトの順序に従って追加されます。リスト内の不明なフィールド名は無視されます。これにより、順序を再定義しなくても、サブクラスのフィールドを &lt;code&gt;None&lt;/code&gt; に設定して無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="bfcee9ee7ed21ddfad1a6afd1892727054140197" translate="yes" xml:space="preserve">
          <source>By default a &lt;code&gt;ModelForm&lt;/code&gt; is dynamically created for your model. It is used to create the form presented on both the add/change pages. You can easily provide your own &lt;code&gt;ModelForm&lt;/code&gt; to override any default form behavior on the add/change pages. Alternatively, you can customize the default form rather than specifying an entirely new one by using the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_form&quot;&gt;&lt;code&gt;ModelAdmin.get_form()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ModelForm&lt;/code&gt; はモデルに対して動的に作成されます。追加/変更ページの両方に表示されるフォームを作成するために使用されます。独自の &lt;code&gt;ModelForm&lt;/code&gt; を簡単に提供して、追加/変更ページのデフォルトのフォーム動作をオーバーライドできます。または、&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_form&quot;&gt; &lt;code&gt;ModelAdmin.get_form()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、まったく新しいフォームを指定するのではなく、デフォルトのフォームをカスタマイズすることもできます。</target>
        </trans-unit>
        <trans-unit id="3ccd12cc74731b1c18cb89643a8bbb1417580bbf" translate="yes" xml:space="preserve">
          <source>By default constraints are not deferred. A deferred constraint will not be enforced until the end of the transaction. An immediate constraint will be enforced immediately after every command.</source>
          <target state="translated">デフォルトでは、制約は延期されません。deferred 制約は、トランザクションが終了するまで適用されません。即時制約は、すべてのコマンドの直後に適用されます。</target>
        </trans-unit>
        <trans-unit id="5939a5d0bc618026ccbf5e18bdb3e2bc19fb342f" translate="yes" xml:space="preserve">
          <source>By default in Django, every template automatically escapes the output of every variable tag. Specifically, these five characters are escaped:</source>
          <target state="translated">Django のデフォルトでは、すべてのテンプレートは、すべての変数タグの出力を自動的にエスケープします。具体的には、以下の5文字がエスケープされます。</target>
        </trans-unit>
        <trans-unit id="fafae4d5763192abf1c9ad7ff88730985cedd451" translate="yes" xml:space="preserve">
          <source>By default issues a temporary redirect; pass &lt;code&gt;permanent=True&lt;/code&gt; to issue a permanent redirect.</source>
          <target state="translated">デフォルトでは一時的なリダイレクトを発行します。永続的なリダイレクトを発行するには、 &lt;code&gt;permanent=True&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="a5b75a4d068c5067cc38ef5bf367a80d02610906" translate="yes" xml:space="preserve">
          <source>By default nothing is returned and the geometry is transformed in-place. However, if the &lt;code&gt;clone&lt;/code&gt; keyword is set to &lt;code&gt;True&lt;/code&gt; then a transformed clone of this geometry is returned instead.</source>
          <target state="translated">デフォルトでは何も返されず、ジオメトリはインプレースで変換されます。ただし、 &lt;code&gt;clone&lt;/code&gt; キーワードが &lt;code&gt;True&lt;/code&gt; に設定されている場合は、代わりにこのジオメトリの変換されたクローンが返されます。</target>
        </trans-unit>
        <trans-unit id="55efc2041b009f8f926e0e3e415382ab48cc7e66" translate="yes" xml:space="preserve">
          <source>By default the &lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager&quot;&gt;&lt;code&gt;RelatedManager&lt;/code&gt;&lt;/a&gt; used for reverse relations is a subclass of the &lt;a href=&quot;managers#manager-names&quot;&gt;default manager&lt;/a&gt; for that model. If you would like to specify a different manager for a given query you can use the following syntax:</source>
          <target state="translated">デフォルトでは、逆関係に使用される&lt;a href=&quot;../../ref/models/relations#django.db.models.fields.related.RelatedManager&quot;&gt; &lt;code&gt;RelatedManager&lt;/code&gt; &lt;/a&gt;は、そのモデルの&lt;a href=&quot;managers#manager-names&quot;&gt;デフォルトマネージャーの&lt;/a&gt;サブクラスです。特定のクエリに別のマネージャーを指定する場合は、次の構文を使用できます。</target>
        </trans-unit>
        <trans-unit id="95c37119c82de2229d9b8fc60036a51677dedd3a" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; widget used by &lt;code&gt;ModelChoiceField&lt;/code&gt; will have an empty choice at the top of the list. You can change the text of this label (which is &lt;code&gt;&quot;---------&quot;&lt;/code&gt; by default) with the &lt;code&gt;empty_label&lt;/code&gt; attribute, or you can disable the empty label entirely by setting &lt;code&gt;empty_label&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ModelChoiceField&lt;/code&gt; で使用される &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; ウィジェットには、リストの上部に空の選択肢があります。 &lt;code&gt;empty_label&lt;/code&gt; 属性を使用して、このラベルのテキスト（デフォルトでは &lt;code&gt;&quot;---------&quot;&lt;/code&gt; ）を変更するか、 &lt;code&gt;empty_label&lt;/code&gt; を &lt;code&gt;None&lt;/code&gt; に設定して空のラベルを完全に無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="5e014d15d73fb9275e22fe13eeab9712bdb04f75" translate="yes" xml:space="preserve">
          <source>By default the admin shows all fields as editable. Any fields in this option (which should be a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt;) will display its data as-is and non-editable; they are also excluded from the &lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; used for creating and editing. Note that when specifying &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt;&lt;code&gt;ModelAdmin.fields&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt;&lt;code&gt;ModelAdmin.fieldsets&lt;/code&gt;&lt;/a&gt; the read-only fields must be present to be shown (they are ignored otherwise).</source>
          <target state="translated">デフォルトでは、管理者はすべてのフィールドを編集可能として表示します。このオプションのすべてのフィールド（ &lt;code&gt;list&lt;/code&gt; または &lt;code&gt;tuple&lt;/code&gt; ある必要があります）は、データをそのまま表示し、編集できません。また、作成および編集に使用される&lt;a href=&quot;../../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;からも除外されます。&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fields&quot;&gt; &lt;code&gt;ModelAdmin.fields&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt; &lt;code&gt;ModelAdmin.fieldsets&lt;/code&gt; を&lt;/a&gt;指定する場合、表示するには読み取り専用フィールドが存在する必要があります（それ以外の場合は無視されます）。</target>
        </trans-unit>
        <trans-unit id="e6c7d127962a25170a1cec4d15d7a05ab5ed600d" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#django.forms.ModelChoiceField&quot;&gt;&lt;code&gt;ModelChoiceField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.ModelMultipleChoiceField&quot;&gt;&lt;code&gt;ModelMultipleChoiceField&lt;/code&gt;&lt;/a&gt; use &lt;a href=&quot;#django.forms.ModelChoiceIterator&quot;&gt;&lt;code&gt;ModelChoiceIterator&lt;/code&gt;&lt;/a&gt; to generate their field &lt;code&gt;choices&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;#django.forms.ModelChoiceField&quot;&gt; &lt;code&gt;ModelChoiceField&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#django.forms.ModelMultipleChoiceField&quot;&gt; &lt;code&gt;ModelMultipleChoiceField&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#django.forms.ModelChoiceIterator&quot;&gt; &lt;code&gt;ModelChoiceIterator&lt;/code&gt; &lt;/a&gt;を使用してフィールドの &lt;code&gt;choices&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="c7ac984e0ce45c3fcdb8a79ddcf48daf83e51dc4" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#django.shortcuts.redirect&quot;&gt;&lt;code&gt;redirect()&lt;/code&gt;&lt;/a&gt; returns a temporary redirect. All of the above forms accept a &lt;code&gt;permanent&lt;/code&gt; argument; if set to &lt;code&gt;True&lt;/code&gt; a permanent redirect will be returned:</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;#django.shortcuts.redirect&quot;&gt; &lt;code&gt;redirect()&lt;/code&gt; &lt;/a&gt;は一時的なリダイレクトを返します。上記のフォームはすべて &lt;code&gt;permanent&lt;/code&gt; 引数を受け入れます。 &lt;code&gt;True&lt;/code&gt; に設定すると、永続的なリダイレクトが返されます。</target>
        </trans-unit>
        <trans-unit id="6bf87a19b2a79208dd00c23461b41f3400b812bc" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt;&lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;&lt;/a&gt; is set to:</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../../ref/settings#std:setting-AUTHENTICATION_BACKENDS&quot;&gt; &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt; &lt;/a&gt;は次のように設定されています。</target>
        </trans-unit>
        <trans-unit id="b374dcc5ef3445d664229d8deaf877912163088d" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt;&lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;False&lt;/code&gt;, which means session cookies will be stored in users&amp;rsquo; browsers for as long as &lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt;&lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt;&lt;/a&gt;. Use this if you don&amp;rsquo;t want people to have to log in every time they open a browser.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt; &lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;False&lt;/code&gt; に設定されています。これは、セッションCookieが&lt;a href=&quot;../../ref/settings#std:setting-SESSION_COOKIE_AGE&quot;&gt; &lt;code&gt;SESSION_COOKIE_AGE&lt;/code&gt; の&lt;/a&gt;間、ユーザーのブラウザに保存されることを意味します。ブラウザーを開くたびにログインする必要がないようにするには、これを使用します。</target>
        </trans-unit>
        <trans-unit id="e597adc1b942c4024654e35e3af6f395093eb327" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;../ref/django-admin#django-admin-inspectdb&quot;&gt;&lt;code&gt;inspectdb&lt;/code&gt;&lt;/a&gt; creates unmanaged models. That is, &lt;code&gt;managed = False&lt;/code&gt; in the model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt; class tells Django not to manage each table&amp;rsquo;s creation, modification, and deletion:</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../ref/django-admin#django-admin-inspectdb&quot;&gt; &lt;code&gt;inspectdb&lt;/code&gt; &lt;/a&gt;は非管理モデルを作成します。つまり、モデルの &lt;code&gt;Meta&lt;/code&gt; クラスの &lt;code&gt;managed = False&lt;/code&gt; は、Djangoに各テーブルの作成、変更、削除を管理しないように指示します。</target>
        </trans-unit>
        <trans-unit id="e7c9b01007ed5d3f2b59fc441a13fa67ed6bc16e" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; contains the following apps, all of which come with Django:</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;には次のアプリが含まれており、すべてDjangoに付属しています。</target>
        </trans-unit>
        <trans-unit id="763c7b8e04451adc9a4904f68068f804e1c2cc21" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/app_template&quot;&gt;the new directory&lt;/a&gt; contains a &lt;code&gt;models.py&lt;/code&gt; file and other app template files. If only the app name is given, the app directory will be created in the current working directory.</source>
          <target state="translated">デフォルトで&lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/app_template&quot;&gt;は、新しいディレクトリ&lt;/a&gt;には &lt;code&gt;models.py&lt;/code&gt; ファイルと他のアプリテンプレートファイルが含まれています。アプリ名のみを指定した場合、アプリディレクトリは現在の作業ディレクトリに作成されます。</target>
        </trans-unit>
        <trans-unit id="796ca62db9b760fe1ade79ed8c372b41694ae671" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/project_template&quot;&gt;the new directory&lt;/a&gt; contains &lt;code&gt;manage.py&lt;/code&gt; and a project package (containing a &lt;code&gt;settings.py&lt;/code&gt; and other files).</source>
          <target state="translated">デフォルトで&lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/project_template&quot;&gt;は、新しいディレクトリに&lt;/a&gt;は、 &lt;code&gt;manage.py&lt;/code&gt; とプロジェクトパッケージ（ &lt;code&gt;settings.py&lt;/code&gt; およびその他のファイルを含む）が含まれています。</target>
        </trans-unit>
        <trans-unit id="fba45fef5bf8c2ca4a5e57fa55d79ff5a3e0c592" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;AuthenticationForm&lt;/code&gt; rejects users whose &lt;code&gt;is_active&lt;/code&gt; flag is set to &lt;code&gt;False&lt;/code&gt;. You may override this behavior with a custom policy to determine which users can log in. Do this with a custom form that subclasses &lt;code&gt;AuthenticationForm&lt;/code&gt; and overrides the &lt;code&gt;confirm_login_allowed()&lt;/code&gt; method. This method should raise a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if the given user may not log in.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;AuthenticationForm&lt;/code&gt; は、 &lt;code&gt;is_active&lt;/code&gt; フラグが &lt;code&gt;False&lt;/code&gt; に設定されているユーザーを拒否します。この動作をカスタムポリシーでオーバーライドして、ログインできるユーザーを決定できます。これは、 &lt;code&gt;AuthenticationForm&lt;/code&gt; をサブクラス化し、 &lt;code&gt;confirm_login_allowed()&lt;/code&gt; メソッドをオーバーライドするカスタムフォームで行います。指定されたユーザーがログインできない場合、このメソッドは&lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;を発生させるはずです。</target>
        </trans-unit>
        <trans-unit id="3355e177bd174c2b8232cf042eb4b27741bada09" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;BinaryField&lt;/code&gt; sets &lt;a href=&quot;#django.db.models.Field.editable&quot;&gt;&lt;code&gt;editable&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;, in which case it can&amp;rsquo;t be included in a &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;BinaryField&lt;/code&gt; は&lt;a href=&quot;#django.db.models.Field.editable&quot;&gt; &lt;code&gt;editable&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;False&lt;/code&gt; に設定し&lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt;。この場合、ModelFormに含めることはできません。</target>
        </trans-unit>
        <trans-unit id="a3438b5135d6b792aacfce1c22f9e18dcf874a67" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;RunPython&lt;/code&gt; will run its contents inside a transaction on databases that do not support DDL transactions (for example, MySQL and Oracle). This should be safe, but may cause a crash if you attempt to use the &lt;code&gt;schema_editor&lt;/code&gt; provided on these backends; in this case, pass &lt;code&gt;atomic=False&lt;/code&gt; to the &lt;code&gt;RunPython&lt;/code&gt; operation.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;RunPython&lt;/code&gt; はDDLトランザクションをサポートしていないデータベース（MySQLやOracleなど）のトランザクション内でコンテンツを実行します。これは安全なはずですが、これらのバックエンドで提供されている &lt;code&gt;schema_editor&lt;/code&gt; を使用しようとするとクラッシュする可能性があります。この場合は、 &lt;code&gt;atomic=False&lt;/code&gt; を &lt;code&gt;RunPython&lt;/code&gt; 操作に渡します。</target>
        </trans-unit>
        <trans-unit id="31df2bf359b650c9c5953940281eed7e9d6d323b" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;StdDev&lt;/code&gt; returns the population standard deviation. However, if &lt;code&gt;sample=True&lt;/code&gt;, the return value will be the sample standard deviation.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;StdDev&lt;/code&gt; は母標準偏差を返します。ただし、 &lt;code&gt;sample=True&lt;/code&gt; の場合、戻り値はサンプルの標準偏差になります。</target>
        </trans-unit>
        <trans-unit id="d2c0c1d78fc29f2ea80a080baf027d3a3258e7a0" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;Variance&lt;/code&gt; returns the population variance. However, if &lt;code&gt;sample=True&lt;/code&gt;, the return value will be the sample variance.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Variance&lt;/code&gt; は母分散を返します。ただし、 &lt;code&gt;sample=True&lt;/code&gt; の場合、戻り値は標本分散になります。</target>
        </trans-unit>
        <trans-unit id="1b5b27ae0340c785d0509ecbeb0a2141dc2f00a8" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;as_json()&lt;/code&gt; does not escape its output. If you are using it for something like AJAX requests to a form view where the client interprets the response and inserts errors into the page, you&amp;rsquo;ll want to be sure to escape the results on the client-side to avoid the possibility of a cross-site scripting attack. You can do this in JavaScript with &lt;code&gt;element.textContent = errorText&lt;/code&gt; or with jQuery&amp;rsquo;s &lt;code&gt;$(el).text(errorText)&lt;/code&gt; (rather than its &lt;code&gt;.html()&lt;/code&gt; function).</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;as_json()&lt;/code&gt; はその出力をエスケープしません。クライアントが応答を解釈してページにエラーを挿入するフォームビューへのAJAXリクエストのようなものにそれを使用している場合は、クロスの可能性を回避するために、クライアント側で結果をエスケープする必要があります。 -サイトスクリプティング攻撃。 &lt;code&gt;element.textContent = errorText&lt;/code&gt; またはjQueryの &lt;code&gt;$(el).text(errorText)&lt;/code&gt; （. &lt;code&gt;.html()&lt;/code&gt; 関数ではなく）を使用して、JavaScriptでこれを行うことができます。</target>
        </trans-unit>
        <trans-unit id="39e3d645e797319de56f1af001219394cd2cc3a9" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;auto_id&lt;/code&gt; is set to the string &lt;code&gt;'id_%s'&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;auto_id&lt;/code&gt; は文字列 &lt;code&gt;'id_%s'&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="b7e9c1fe4227e00f6c96e5ab6773325194881ac8" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;available_apps&lt;/code&gt; is set to &lt;code&gt;None&lt;/code&gt;. After each test, Django calls &lt;a href=&quot;../../ref/django-admin#django-admin-flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; to reset the database state. This empties all tables and emits the &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; signal, which recreates one content type and four permissions for each model. This operation gets expensive proportionally to the number of models.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;available_apps&lt;/code&gt; は &lt;code&gt;None&lt;/code&gt; に設定されています。各テストの後、Djangoは&lt;a href=&quot;../../ref/django-admin#django-admin-flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;を呼び出してデータベースの状態をリセットします。これにより、すべてのテーブルが空になり、&lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt; &lt;code&gt;post_migrate&lt;/code&gt; &lt;/a&gt;シグナルが発行されます。これにより、モデルごとに1つのコンテンツタイプと4つの権限が再作成されます。この操作は、モデルの数に比例して高価になります。</target>
        </trans-unit>
        <trans-unit id="6d257f37a44bbdabb09f52d07d65972f0af1c01b" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;inspectdb&lt;/code&gt; creates unmanaged models. That is, &lt;code&gt;managed = False&lt;/code&gt; in the model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt; class tells Django not to manage each table&amp;rsquo;s creation, modification, and deletion. If you do want to allow Django to manage the table&amp;rsquo;s lifecycle, you&amp;rsquo;ll need to change the &lt;a href=&quot;models/options#django.db.models.Options.managed&quot;&gt;&lt;code&gt;managed&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;True&lt;/code&gt; (or remove it because &lt;code&gt;True&lt;/code&gt; is its default value).</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;inspectdb&lt;/code&gt; は非管理モデルを作成します。つまり、モデルの &lt;code&gt;Meta&lt;/code&gt; クラスの &lt;code&gt;managed = False&lt;/code&gt; は、Djangoに各テーブルの作成、変更、削除を管理しないように指示します。Djangoがテーブルのライフサイクルを管理することを許可したい場合は、&lt;a href=&quot;models/options#django.db.models.Options.managed&quot;&gt; &lt;code&gt;managed&lt;/code&gt; &lt;/a&gt;オプションを &lt;code&gt;True&lt;/code&gt; に変更する必要があります（または &lt;code&gt;True&lt;/code&gt; がデフォルト値であるため削除します）。</target>
        </trans-unit>
        <trans-unit id="0a16208c9970ab3b20072e917cd324f2924c2c83" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;is_safe&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, and you can omit it from any filters where it isn&amp;rsquo;t required.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;is_safe&lt;/code&gt; は &lt;code&gt;False&lt;/code&gt; であり、必要のないフィルターからは省略できます。</target>
        </trans-unit>
        <trans-unit id="0f707503a34a0b1f695e68eae89c4aa403264257" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;is_secure()&lt;/code&gt; determines if a request is secure by confirming that a requested URL uses &lt;code&gt;https://&lt;/code&gt;. This method is important for Django&amp;rsquo;s CSRF protection, and it may be used by your own code or third-party apps.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;is_secure()&lt;/code&gt; は、リクエストされたURLが &lt;code&gt;https://&lt;/code&gt; を使用していることを確認することにより、リクエストが安全かどうかを判断します。この方法はDjangoのCSRF保護にとって重要であり、独自のコードやサードパーティのアプリで使用される場合があります。</target>
        </trans-unit>
        <trans-unit id="1c60e61b4d57d0279b6aaa3d91afc2731459b7de" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;lookup_allowed()&lt;/code&gt; allows access to a model&amp;rsquo;s local fields, field paths used in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_filter&quot;&gt;&lt;code&gt;list_filter&lt;/code&gt;&lt;/a&gt; (but not paths from &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_filter&quot;&gt;&lt;code&gt;get_list_filter()&lt;/code&gt;&lt;/a&gt;), and lookups required for &lt;a href=&quot;../../models/fields#django.db.models.ForeignKey.limit_choices_to&quot;&gt;&lt;code&gt;limit_choices_to&lt;/code&gt;&lt;/a&gt; to function correctly in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.raw_id_fields&quot;&gt;&lt;code&gt;raw_id_fields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;lookup_allowed()&lt;/code&gt; モデルのローカルフィールドへのアクセスを可能にする、で使用されるフィールドパス&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_filter&quot;&gt; &lt;code&gt;list_filter&lt;/code&gt; &lt;/a&gt;（ではないからパス&lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_list_filter&quot;&gt; &lt;code&gt;get_list_filter()&lt;/code&gt; &lt;/a&gt;）、およびのために必要な検索&lt;a href=&quot;../../models/fields#django.db.models.ForeignKey.limit_choices_to&quot;&gt; &lt;code&gt;limit_choices_to&lt;/code&gt; &lt;/a&gt;で正しく機能し&lt;a href=&quot;#django.contrib.admin.ModelAdmin.raw_id_fields&quot;&gt; &lt;code&gt;raw_id_fields&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b5839ea5bcb8e808e1acee60c72db972a736644" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;max_num&lt;/code&gt; only affects how many forms are displayed and does not affect validation. If &lt;code&gt;validate_max=True&lt;/code&gt; is passed to the &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;max_num&lt;/code&gt; will affect validation. See &lt;a href=&quot;#validate-max&quot;&gt;validate_max&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;max_num&lt;/code&gt; は表示されるフォームの数にのみ影響し、検証には影響しません。場合 &lt;code&gt;validate_max=True&lt;/code&gt; のがに渡され&lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt; &lt;code&gt;formset_factory()&lt;/code&gt; &lt;/a&gt;、そして &lt;code&gt;max_num&lt;/code&gt; 、検証に影響を与えます。&lt;a href=&quot;#validate-max&quot;&gt;validate_maxを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d4db2d65717ec90fd6c19b009eef8a476e142a64" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;save()&lt;/code&gt; populates the &lt;code&gt;context&lt;/code&gt; with the same variables that &lt;a href=&quot;#django.contrib.auth.views.PasswordResetView&quot;&gt;&lt;code&gt;PasswordResetView&lt;/code&gt;&lt;/a&gt; passes to its email context.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;save()&lt;/code&gt; は&lt;a href=&quot;#django.contrib.auth.views.PasswordResetView&quot;&gt; &lt;code&gt;PasswordResetView&lt;/code&gt; &lt;/a&gt;が電子メールコンテキストに渡すのと同じ変数を &lt;code&gt;context&lt;/code&gt; 入力します。</target>
        </trans-unit>
        <trans-unit id="a1cadc59a100b071402a4c6f0ce408b53a93b64e" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;save_as&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;save_as&lt;/code&gt; は &lt;code&gt;False&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="f7131eb9d215a63ebdf9efd75cc05fe2f15a2258" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;save_as_continue&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;save_as_continue&lt;/code&gt; は &lt;code&gt;True&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="751722daaab98724ff464d77f93ca2177e2c3301" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;save_on_top&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;save_on_top&lt;/code&gt; は &lt;code&gt;False&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="1039e2fb966e8e902075281a6f4bcd0ead5b3c2a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;select_for_update()&lt;/code&gt; locks all rows that are selected by the query. For example, rows of related objects specified in &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; are locked in addition to rows of the queryset&amp;rsquo;s model. If this isn&amp;rsquo;t desired, specify the related objects you want to lock in &lt;code&gt;select_for_update(of=(...))&lt;/code&gt; using the same fields syntax as &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt;. Use the value &lt;code&gt;'self'&lt;/code&gt; to refer to the queryset&amp;rsquo;s model.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;select_for_update()&lt;/code&gt; はクエリによって選択されたすべての行をロックします。たとえば、&lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; で&lt;/a&gt;指定された関連オブジェクトの行は、クエリセットのモデルの行に加えてロックされます。これが必要ない場合は、&lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;と同じフィールド構文を使用して、ロックする関連オブジェクトを &lt;code&gt;select_for_update(of=(...))&lt;/code&gt; します。クエリセットのモデルを参照するには、値 &lt;code&gt;'self'&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="89a2a077095cdc823e533145146c1d321447822c" translate="yes" xml:space="preserve">
          <source>By default, Django adds a &lt;code&gt;Manager&lt;/code&gt; with the name &lt;code&gt;objects&lt;/code&gt; to every Django model class. However, if you want to use &lt;code&gt;objects&lt;/code&gt; as a field name, or if you want to use a name other than &lt;code&gt;objects&lt;/code&gt; for the &lt;code&gt;Manager&lt;/code&gt;, you can rename it on a per-model basis. To rename the &lt;code&gt;Manager&lt;/code&gt; for a given class, define a class attribute of type &lt;code&gt;models.Manager()&lt;/code&gt; on that model. For example:</source>
          <target state="translated">デフォルトでは、DjangoはすべてのDjangoモデルクラスに &lt;code&gt;objects&lt;/code&gt; という名前の &lt;code&gt;Manager&lt;/code&gt; を追加します。しかし、あなたが使用したい場合は &lt;code&gt;objects&lt;/code&gt; フィールド名として、またはあなたが以外の名前を使用したい場合は &lt;code&gt;objects&lt;/code&gt; のための &lt;code&gt;Manager&lt;/code&gt; 、あなたのモデルを基本単位にその名前を変更することができます。特定のクラスの &lt;code&gt;Manager&lt;/code&gt; の名前を変更するには、そのモデルで &lt;code&gt;models.Manager()&lt;/code&gt; タイプのクラス属性を定義します。例えば：</target>
        </trans-unit>
        <trans-unit id="2c783b622537d686e5cb7e198a2b95d67da47380" translate="yes" xml:space="preserve">
          <source>By default, Django assumes that your middleware is capable of handling only synchronous requests. To change these assumptions, set the following attributes on your middleware factory function or class:</source>
          <target state="translated">デフォルトでは、Django はミドルウェアが同期リクエストのみを処理できることを前提としています。これらの仮定を変更するには、以下の属性をミドルウェアのファクトリ関数またはクラスに設定します。</target>
        </trans-unit>
        <trans-unit id="e3c98bef4586da244addd6c04c7a757ef07d5422" translate="yes" xml:space="preserve">
          <source>By default, Django configures the following logging:</source>
          <target state="translated">デフォルトでは、Django は以下のようなロギングを設定しています。</target>
        </trans-unit>
        <trans-unit id="f4fa8cf870695b473dc00ee9fd66e5e90e008bcf" translate="yes" xml:space="preserve">
          <source>By default, Django displays the &lt;code&gt;str()&lt;/code&gt; of each object. But sometimes it&amp;rsquo;d be more helpful if we could display individual fields. To do that, use the &lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;list_display&lt;/code&gt;&lt;/a&gt; admin option, which is a tuple of field names to display, as columns, on the change list page for the object:</source>
          <target state="translated">デフォルトでは、Django は各オブジェクトの &lt;code&gt;str()&lt;/code&gt; を表示します。しかし、個別のフィールドを表示できれば、さらに役立つことがあります。これを行うには、オブジェクトの変更リストページで列として表示するフィールド名のタプルである&lt;a href=&quot;../ref/contrib/admin/index#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;list_display&lt;/code&gt; &lt;/a&gt;管理オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="4523cea84040a5ecbce055a731ff0103e2e1367f" translate="yes" xml:space="preserve">
          <source>By default, Django figures out a database table name by joining the model&amp;rsquo;s &amp;ldquo;app label&amp;rdquo; &amp;ndash; the name you used in &lt;code&gt;manage.py startapp&lt;/code&gt; &amp;ndash; to the model&amp;rsquo;s class name, with an underscore between them. In the example we&amp;rsquo;ve assumed that the &lt;code&gt;Person&lt;/code&gt; model lives in an app named &lt;code&gt;myapp&lt;/code&gt;, so its table would be &lt;code&gt;myapp_person&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、Djangoはモデルの「アプリラベル」（ &lt;code&gt;manage.py startapp&lt;/code&gt; で使用した名前）をモデルのクラス名に、下線を付けて結合することにより、データベーステーブル名を計算します。この例では、 &lt;code&gt;Person&lt;/code&gt; モデルは &lt;code&gt;myapp&lt;/code&gt; という名前のアプリにあると想定しているため、そのテーブルは &lt;code&gt;myapp_person&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="66bb6b1e06547b1878e5d828b3f013d4ca0606ff" translate="yes" xml:space="preserve">
          <source>By default, Django gives each model the following field:</source>
          <target state="translated">デフォルトでは、Django は各モデルに以下のフィールドを与えます。</target>
        </trans-unit>
        <trans-unit id="14fdca39f334e6cb2e8dbfba9d9e6db0a1d40b6f" translate="yes" xml:space="preserve">
          <source>By default, Django looks in the &lt;code&gt;fixtures&lt;/code&gt; directory inside each app for fixtures. You can set the &lt;a href=&quot;../ref/settings#std:setting-FIXTURE_DIRS&quot;&gt;&lt;code&gt;FIXTURE_DIRS&lt;/code&gt;&lt;/a&gt; setting to a list of additional directories where Django should look.</source>
          <target state="translated">デフォルトでは、Djangoは各アプリ内の &lt;code&gt;fixtures&lt;/code&gt; ディレクトリでフィクスチャを探します。&lt;a href=&quot;../ref/settings#std:setting-FIXTURE_DIRS&quot;&gt; &lt;code&gt;FIXTURE_DIRS&lt;/code&gt; &lt;/a&gt;設定を、Djangoが探すべき追加のディレクトリのリストに設定できます。</target>
        </trans-unit>
        <trans-unit id="8f65d06e293864e5fb6e7a70cdcf86c2e313abed" translate="yes" xml:space="preserve">
          <source>By default, Django only saves to the session database when the session has been modified &amp;ndash; that is if any of its dictionary values have been assigned or deleted:</source>
          <target state="translated">デフォルトでは、Djangoはセッションが変更されたときにのみセッションデータベースに保存します。つまり、ディクショナリ値のいずれかが割り当てまたは削除された場合です。</target>
        </trans-unit>
        <trans-unit id="2431d8ad8d3f578c6fd489c2c79ed71958fe3bf1" translate="yes" xml:space="preserve">
          <source>By default, Django sends email from &lt;a href=&quot;mailto:webmaster%40localhost&quot;&gt;webmaster@localhost&lt;/a&gt; and &lt;a href=&quot;mailto:root%40localhost&quot;&gt;root@localhost&lt;/a&gt;. However, some mail providers reject email from these addresses. To use different sender addresses, modify the &lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_FROM_EMAIL&quot;&gt;&lt;code&gt;DEFAULT_FROM_EMAIL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/settings#std:setting-SERVER_EMAIL&quot;&gt;&lt;code&gt;SERVER_EMAIL&lt;/code&gt;&lt;/a&gt; settings.</source>
          <target state="translated">デフォルトでは、Djangoは&lt;a href=&quot;mailto:webmaster%40localhost&quot;&gt;webmaster @ localhost&lt;/a&gt;および&lt;a href=&quot;mailto:root%40localhost&quot;&gt;root @ localhost&lt;/a&gt;からメールを送信します。ただし、一部のメールプロバイダーはこれらのアドレスからのメールを拒否します。別の送信者アドレスを使用するには、&lt;a href=&quot;../../ref/settings#std:setting-DEFAULT_FROM_EMAIL&quot;&gt; &lt;code&gt;DEFAULT_FROM_EMAIL&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../ref/settings#std:setting-SERVER_EMAIL&quot;&gt; &lt;code&gt;SERVER_EMAIL&lt;/code&gt; &lt;/a&gt;設定を変更します。</target>
        </trans-unit>
        <trans-unit id="8db9d3a9be8d19a6b2f2bf780986e3120a2f3b1e" translate="yes" xml:space="preserve">
          <source>By default, Django serializes session data using JSON. You can use the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_SERIALIZER&quot;&gt;&lt;code&gt;SESSION_SERIALIZER&lt;/code&gt;&lt;/a&gt; setting to customize the session serialization format. Even with the caveats described in &lt;a href=&quot;#custom-serializers&quot;&gt;Write your own serializer&lt;/a&gt;, we highly recommend sticking with JSON serialization &lt;em&gt;especially if you are using the cookie backend&lt;/em&gt;.</source>
          <target state="translated">デフォルトでは、DjangoはJSONを使用してセッションデータをシリアル化します。&lt;a href=&quot;../../ref/settings#std:setting-SESSION_SERIALIZER&quot;&gt; &lt;code&gt;SESSION_SERIALIZER&lt;/code&gt; &lt;/a&gt;設定を使用して、セッションのシリアル化形式をカスタマイズできます。&lt;a href=&quot;#custom-serializers&quot;&gt;独自のシリアライザの&lt;/a&gt;記述で説明されている警告があっても、&lt;em&gt;特にCookieバックエンドを使用している場合は&lt;/em&gt;、JSONシリアライゼーション&lt;em&gt;を使用すること&lt;/em&gt;を強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="f6aac2f971616a532d8fcf9c5ead885d7ee8d507" translate="yes" xml:space="preserve">
          <source>By default, Django stores files locally, using the &lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; settings. The examples below assume that you&amp;rsquo;re using these defaults.</source>
          <target state="translated">デフォルトでは、Djangoは&lt;a href=&quot;../ref/settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../ref/settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;設定を使用してファイルをローカルに保存します。以下の例では、これらのデフォルトを使用していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="83e96daab66ce2c8db85e901a32da6d8c175e10f" translate="yes" xml:space="preserve">
          <source>By default, Django stores sessions in your database (using the model &lt;code&gt;django.contrib.sessions.models.Session&lt;/code&gt;). Though this is convenient, in some setups it&amp;rsquo;s faster to store session data elsewhere, so Django can be configured to store session data on your filesystem or in your cache.</source>
          <target state="translated">デフォルトでは、Djangoはデータベースにセッションを格納します（モデル &lt;code&gt;django.contrib.sessions.models.Session&lt;/code&gt; を使用）。これは便利ですが、一部の設定ではセッションデータを他の場所に保存する方が高速なので、Djangoはファイルシステムまたはキャッシュにセッションデータを保存するように構成できます。</target>
        </trans-unit>
        <trans-unit id="43b76a73f32b0191f0b7a16b050fdff8ae887047" translate="yes" xml:space="preserve">
          <source>By default, Django uses a filesystem-based template loader, but Django comes with a few other template loaders, which know how to load templates from other sources.</source>
          <target state="translated">デフォルトでは、Django はファイルシステムベースのテンプレートローダーを使用しますが、Django には他にもいくつかのテンプレートローダーが付属しており、他のソースからテンプレートをロードする方法を知っています。</target>
        </trans-unit>
        <trans-unit id="50132fad56367cfcf6ca1c6f25897ec22d538343" translate="yes" xml:space="preserve">
          <source>By default, Django uses an instance of the &lt;code&gt;Model._base_manager&lt;/code&gt; manager class when accessing related objects (i.e. &lt;code&gt;choice.question&lt;/code&gt;), not the &lt;code&gt;_default_manager&lt;/code&gt; on the related object. This is because Django needs to be able to retrieve the related object, even if it would otherwise be filtered out (and hence be inaccessible) by the default manager.</source>
          <target state="translated">デフォルトでは、Djangoは関連オブジェクトの &lt;code&gt;_default_manager&lt;/code&gt; ではなく、関連オブジェクト（つまり、 &lt;code&gt;choice.question&lt;/code&gt; ）にアクセスするときに &lt;code&gt;Model._base_manager&lt;/code&gt; マネージャークラスのインスタンスを使用します。これは、Djangoが関連するオブジェクトを取得できるようにする必要があるためです。これは、デフォルトのマネージャーによってフィルターされていない（したがってアクセスできない）場合でも同様です。</target>
        </trans-unit>
        <trans-unit id="c13445dbe2ebefb07541aa101fbacfdda1100b1a" translate="yes" xml:space="preserve">
          <source>By default, Django uses the &lt;a href=&quot;https://en.wikipedia.org/wiki/PBKDF2&quot;&gt;PBKDF2&lt;/a&gt; algorithm with a SHA256 hash, a password stretching mechanism recommended by &lt;a href=&quot;https://dx.doi.org/10.6028/NIST.SP.800-132&quot;&gt;NIST&lt;/a&gt;. This should be sufficient for most users: it&amp;rsquo;s quite secure, requiring massive amounts of computing time to break.</source>
          <target state="translated">デフォルトでは、Djangoは&lt;a href=&quot;https://dx.doi.org/10.6028/NIST.SP.800-132&quot;&gt;NISTが&lt;/a&gt;推奨するパスワード拡張メカニズムであるSHA256ハッシュを使用した&lt;a href=&quot;https://en.wikipedia.org/wiki/PBKDF2&quot;&gt;PBKDF2&lt;/a&gt;アルゴリズムを使用します。これはほとんどのユーザーにとって十分なはずです。非常に安全であり、壊れるまでに大量の計算時間が必要です。</target>
        </trans-unit>
        <trans-unit id="62cc122acf0974f8c7b6e199128915e27d8300dd" translate="yes" xml:space="preserve">
          <source>By default, Django will assume all databases depend on the &lt;code&gt;default&lt;/code&gt; database and therefore always create the &lt;code&gt;default&lt;/code&gt; database first. However, no guarantees are made on the creation order of any other databases in your test setup.</source>
          <target state="translated">デフォルトでは、Djangoはすべてのデータベースが &lt;code&gt;default&lt;/code&gt; データベースに依存していると想定するため、常に &lt;code&gt;default&lt;/code&gt; データベースを最初に作成します。ただし、テストセットアップでの他のデータベースの作成順序は保証されません。</target>
        </trans-unit>
        <trans-unit id="52d6fd8840fd6f8d869f41583fc3813fcfa7f8d2" translate="yes" xml:space="preserve">
          <source>By default, Django will send email from &lt;a href=&quot;mailto:root%40localhost&quot;&gt;root@localhost&lt;/a&gt;. However, some mail providers reject all email from this address. To use a different sender address, modify the &lt;a href=&quot;../ref/settings#std:setting-SERVER_EMAIL&quot;&gt;&lt;code&gt;SERVER_EMAIL&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">デフォルトでは、Djangoは&lt;a href=&quot;mailto:root%40localhost&quot;&gt;root @ localhost&lt;/a&gt;からメールを送信します。ただし、一部のメールプロバイダーは、このアドレスからのすべてのメールを拒否します。別の送信者アドレスを使用するには、&lt;a href=&quot;../ref/settings#std:setting-SERVER_EMAIL&quot;&gt; &lt;code&gt;SERVER_EMAIL&lt;/code&gt; &lt;/a&gt;設定を変更します。</target>
        </trans-unit>
        <trans-unit id="a719a3d5d6a53e07ee4805a64f9f531534a713b2" translate="yes" xml:space="preserve">
          <source>By default, Django&amp;rsquo;s &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; emulates the SQL constraint &lt;code&gt;ON DELETE CASCADE&lt;/code&gt; &amp;mdash; in other words, any objects with foreign keys pointing at the objects to be deleted will be deleted along with them. For example:</source>
          <target state="translated">デフォルトでは、Djangoの&lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;はSQL制約 &lt;code&gt;ON DELETE CASCADE&lt;/code&gt; をエミュレートします。つまり、削除するオブジェクトを指す外部キーを持つオブジェクトは、それらとともに削除されます。例えば：</target>
        </trans-unit>
        <trans-unit id="ee238cb006e049549c22fc61d2ea0ce06238c18f" translate="yes" xml:space="preserve">
          <source>By default, Django&amp;rsquo;s admin uses a select-box interface (&amp;lt;select&amp;gt;) for fields that are &lt;code&gt;ForeignKey&lt;/code&gt; or have &lt;code&gt;choices&lt;/code&gt; set. If a field is present in &lt;code&gt;radio_fields&lt;/code&gt;, Django will use a radio-button interface instead. Assuming &lt;code&gt;group&lt;/code&gt; is a &lt;code&gt;ForeignKey&lt;/code&gt; on the &lt;code&gt;Person&lt;/code&gt; model:</source>
          <target state="translated">デフォルトでは、Djangoの管理者は、 &lt;code&gt;ForeignKey&lt;/code&gt; であるフィールドまたは &lt;code&gt;choices&lt;/code&gt; 設定されているフィールドに選択ボックスインターフェイス（&amp;lt;select&amp;gt;）を使用します。 &lt;code&gt;radio_fields&lt;/code&gt; にフィールドが存在する場合、Djangoは代わりにラジオボタンインターフェースを使用します。 &lt;code&gt;group&lt;/code&gt; が &lt;code&gt;Person&lt;/code&gt; モデルの &lt;code&gt;ForeignKey&lt;/code&gt; であると想定します。</target>
        </trans-unit>
        <trans-unit id="241b0dcffeb732299248f8a27799d8cea1154d91" translate="yes" xml:space="preserve">
          <source>By default, Django&amp;rsquo;s admin uses a select-box interface (&amp;lt;select&amp;gt;) for fields that are &lt;code&gt;ForeignKey&lt;/code&gt;. Sometimes you don&amp;rsquo;t want to incur the overhead of having to select all the related instances to display in the drop-down.</source>
          <target state="translated">デフォルトでは、Djangoの管理者は、 &lt;code&gt;ForeignKey&lt;/code&gt; であるフィールドに選択ボックスインターフェイス（&amp;lt;select&amp;gt;）を使用します。ドロップダウンに表示するすべての関連インスタンスを選択する必要があるというオーバーヘッドが発生したくない場合があります。</target>
        </trans-unit>
        <trans-unit id="25a3c3fc1a785fb5e5a60500f146d20a0e203d8f" translate="yes" xml:space="preserve">
          <source>By default, Django&amp;rsquo;s cache system creates its cache keys using the requested fully-qualified URL &amp;ndash; e.g., &lt;code&gt;&quot;https://www.example.com/stories/2005/?order_by=author&quot;&lt;/code&gt;. This means every request to that URL will use the same cached version, regardless of user-agent differences such as cookies or language preferences. However, if this page produces different content based on some difference in request headers &amp;ndash; such as a cookie, or a language, or a user-agent &amp;ndash; you&amp;rsquo;ll need to use the &lt;code&gt;Vary&lt;/code&gt; header to tell caching mechanisms that the page output depends on those things.</source>
          <target state="translated">デフォルトでは、Djangoのキャッシュシステムは、リクエストされた完全修飾URL（例： &lt;code&gt;&quot;https://www.example.com/stories/2005/?order_by=author&quot;&lt;/code&gt; )を使用してキャッシュキーを作成します。つまり、Cookieや言語設定などのユーザーエージェントの違いに関係なく、そのURLへのすべてのリクエストは同じキャッシュバージョンを使用します。ただし、Cookie、言語、ユーザーエージェントなど、リクエストヘッダーの違いに基づいてこのページが異なるコンテンツを生成する場合は、 &lt;code&gt;Vary&lt;/code&gt; ヘッダーを使用して、ページ出力が依存することをキャッシュメカニズムに通知する必要がありますそれらのもの。</target>
        </trans-unit>
        <trans-unit id="047cc3f39eda62ed2b989307ca9e95b2025696de" translate="yes" xml:space="preserve">
          <source>By default, a &amp;lsquo;403 Forbidden&amp;rsquo; response is sent to the user if an incoming request fails the checks performed by &lt;code&gt;CsrfViewMiddleware&lt;/code&gt;. This should usually only be seen when there is a genuine Cross Site Request Forgery, or when, due to a programming error, the CSRF token has not been included with a POST form.</source>
          <target state="translated">デフォルトでは、着信リクエストが &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; によって実行されるチェックに失敗した場合、「403 Forbidden」応答がユーザーに送信されます。これは通常、本物のクロスサイトリクエストフォージェリがある場合、またはプログラミングエラーが原因でCSRFトークンがPOSTフォームに含まれていない場合にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="099aed6c6c75f6dafea1ba3efd1db8b7348db65a" translate="yes" xml:space="preserve">
          <source>By default, a &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is displayed in the admin site with a &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt;. However, multiple-select boxes can be difficult to use when selecting many items. Adding a &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; to this list will instead use a nifty unobtrusive JavaScript &amp;ldquo;filter&amp;rdquo; interface that allows searching within the options. The unselected and selected options appear in two boxes side by side. See &lt;a href=&quot;#django.contrib.admin.ModelAdmin.filter_vertical&quot;&gt;&lt;code&gt;filter_vertical&lt;/code&gt;&lt;/a&gt; to use a vertical interface.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; とともに管理サイトに表示されます。ただし、複数選択ボックスは、多くのアイテムを選択するときに使用するのが難しい場合があります。&lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;をこのリストに追加すると、代わりに、オプション内を検索できる、気の利いた控えめなJavaScriptの「フィルター」インターフェースが使用されます。選択されていないオプションと選択されたオプションが2つのボックスに並んで表示されます。垂直インターフェースを使用するには、&lt;a href=&quot;#django.contrib.admin.ModelAdmin.filter_vertical&quot;&gt; &lt;code&gt;filter_vertical&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ffee4a96e934b7be37c85bf6953bfafb1516419d" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;HEAD&lt;/code&gt; request will be delegated to &lt;code&gt;get()&lt;/code&gt;. If you need to handle &lt;code&gt;HEAD&lt;/code&gt; requests in a different way than &lt;code&gt;GET&lt;/code&gt;, you can override the &lt;code&gt;head()&lt;/code&gt; method. See &lt;a href=&quot;../../topics/class-based-views/index#supporting-other-http-methods&quot;&gt;Supporting other HTTP methods&lt;/a&gt; for an example.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;HEAD&lt;/code&gt; リクエストは &lt;code&gt;get()&lt;/code&gt; に委任されます。 &lt;code&gt;GET&lt;/code&gt; とは異なる方法で &lt;code&gt;HEAD&lt;/code&gt; リクエストを処理する必要がある場合は、 &lt;code&gt;head()&lt;/code&gt; メソッドをオーバーライドできます。例については、&lt;a href=&quot;../../topics/class-based-views/index#supporting-other-http-methods&quot;&gt;他のHTTPメソッドのサポートを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3ab85f179f87b7e9059c5a2d8e97db2555d7d9d1" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;QuerySet&lt;/code&gt; will not eliminate duplicate rows. In practice, this is rarely a problem, because simple queries such as &lt;code&gt;Blog.objects.all()&lt;/code&gt; don&amp;rsquo;t introduce the possibility of duplicate result rows. However, if your query spans multiple tables, it&amp;rsquo;s possible to get duplicate results when a &lt;code&gt;QuerySet&lt;/code&gt; is evaluated. That&amp;rsquo;s when you&amp;rsquo;d use &lt;code&gt;distinct()&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;QuerySet&lt;/code&gt; は重複行を排除しません。 &lt;code&gt;Blog.objects.all()&lt;/code&gt; などの単純なクエリでは結果行が重複する可能性がないため、実際にはこれが問題になることはほとんどありません。ただし、クエリが複数のテーブルにまたがっている場合、 &lt;code&gt;QuerySet&lt;/code&gt; の評価時に重複した結果が得られる可能性があります。そのときは、 &lt;code&gt;distinct()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="1ee67621be09152cc7085f4ab857502f91a2d6f6" translate="yes" xml:space="preserve">
          <source>By default, a call to &lt;code&gt;get_connection()&lt;/code&gt; will return an instance of the email backend specified in &lt;a href=&quot;../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt;&lt;code&gt;EMAIL_BACKEND&lt;/code&gt;&lt;/a&gt;. If you specify the &lt;code&gt;backend&lt;/code&gt; argument, an instance of that backend will be instantiated.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;get_connection()&lt;/code&gt; を呼び出すと、EMAIL_BACKENDで指定されたメールバックエンドのインスタンスが返され&lt;a href=&quot;../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt; &lt;code&gt;EMAIL_BACKEND&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;backend&lt;/code&gt; 引数を指定すると、そのバックエンドのインスタンスがインスタンス化されます。</target>
        </trans-unit>
        <trans-unit id="3832b1492479c9c292aedc644abbdd13b8162655" translate="yes" xml:space="preserve">
          <source>By default, a call to delete an existing object will be executed on the same database that was used to retrieve the object in the first place:</source>
          <target state="translated">デフォルトでは、既存のオブジェクトを削除するための呼び出しは、最初にオブジェクトを取得するために使用されたのと同じデータベース上で実行されます。</target>
        </trans-unit>
        <trans-unit id="660e9c2bec7bd66769c17f1d2bab7dbc9f47a5c5" translate="yes" xml:space="preserve">
          <source>By default, admin widgets for many-to-many relations will be displayed on whichever model contains the actual reference to the &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;. Depending on your &lt;code&gt;ModelAdmin&lt;/code&gt; definition, each many-to-many field in your model will be represented by a standard HTML &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt;, a horizontal or vertical filter, or a &lt;code&gt;raw_id_admin&lt;/code&gt; widget. However, it is also possible to replace these widgets with inlines.</source>
          <target state="translated">デフォルトでは、多対多のリレーションの管理ウィジェットは、&lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;への実際の参照を含むモデルに表示されます。 &lt;code&gt;ModelAdmin&lt;/code&gt; 定義に応じて、モデル内の各多対多フィールドは、標準のHTML &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; 、水平または垂直フィルター、または &lt;code&gt;raw_id_admin&lt;/code&gt; ウィジェットによって表されます。ただし、これらのウィジェットをインラインで置き換えることもできます。</target>
        </trans-unit>
        <trans-unit id="a124ee7c24bef6658434d9dc955d2e48dd9a375e" translate="yes" xml:space="preserve">
          <source>By default, after an action is performed the user is redirected back to the original change list page. However, some actions, especially more complex ones, will need to return intermediate pages. For example, the built-in delete action asks for confirmation before deleting the selected objects.</source>
          <target state="translated">デフォルトでは、アクションが実行された後、ユーザーは元の変更リストページにリダイレクトされます。しかし、いくつかのアクション、特により複雑なものは、中間ページを返す必要があります。例えば、ビルトインの削除アクションは、選択したオブジェクトを削除する前に確認を求めます。</target>
        </trans-unit>
        <trans-unit id="69c36def4e619cd2bfa968a8266ad7a530f1817f" translate="yes" xml:space="preserve">
          <source>By default, all apps will be checked. You can check a subset of apps by providing a list of app labels as arguments:</source>
          <target state="translated">デフォルトでは、すべてのアプリがチェックされます。引数としてアプリのラベルのリストを指定することで、アプリのサブセットをチェックすることができます。</target>
        </trans-unit>
        <trans-unit id="64b97b34dd35ba558901be5203051f1364c73092" translate="yes" xml:space="preserve">
          <source>By default, all matching locations are found. To only return the first match for each relative path, use the &lt;code&gt;--first&lt;/code&gt; option:</source>
          <target state="translated">デフォルトでは、一致するすべての場所が検索されます。各相対パスの最初の一致のみを返すには、 &lt;code&gt;--first&lt;/code&gt; オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="8e24a7a8f3cec0088e1993cf71a0c6faf39464ad" translate="yes" xml:space="preserve">
          <source>By default, an instance of the email backend specified in &lt;a href=&quot;../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt;&lt;code&gt;EMAIL_BACKEND&lt;/code&gt;&lt;/a&gt; will be used.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt; &lt;code&gt;EMAIL_BACKEND&lt;/code&gt; で&lt;/a&gt;指定されたメールバックエンドのインスタンスが使用されます。</target>
        </trans-unit>
        <trans-unit id="4095135a9ecffea85258cf1ddc177eaca8597a9c" translate="yes" xml:space="preserve">
          <source>By default, any key request will automatically include the site default cache key version. However, the primitive cache functions all include a &lt;code&gt;version&lt;/code&gt; argument, so you can specify a particular cache key version to set or get. For example:</source>
          <target state="translated">デフォルトでは、すべてのキーリクエストにサイトのデフォルトのキャッシュキーバージョンが自動的に含まれます。ただし、プリミティブキャッシュ関数にはすべて &lt;code&gt;version&lt;/code&gt; 引数が含まれているため、設定または取得する特定のキャッシュキーバージョンを指定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="9e5d75d1b984eeb57834a5db618a90cbee5c793b" translate="yes" xml:space="preserve">
          <source>By default, any log message that meets log level requirements will be handled. However, by installing a filter, you can place additional criteria on the logging process. For example, you could install a filter that only allows &lt;code&gt;ERROR&lt;/code&gt; messages from a particular source to be emitted.</source>
          <target state="translated">デフォルトでは、ログレベルの要件を満たすログメッセージが処理されます。ただし、フィルターをインストールすることにより、ロギングプロセスに追加の基準を設定できます。たとえば、特定のソースからの &lt;code&gt;ERROR&lt;/code&gt; メッセージの送信のみを許可するフィルターをインストールできます。</target>
        </trans-unit>
        <trans-unit id="3ed6d08d4bdc2598ddc552cb3b82f26f4033a0a3" translate="yes" xml:space="preserve">
          <source>By default, any object using a static &lt;code&gt;Media&lt;/code&gt; definition will inherit all the assets associated with the parent widget. This occurs regardless of how the parent defines its own requirements. For example, if we were to extend our basic Calendar widget from the example above:</source>
          <target state="translated">デフォルトでは、静的 &lt;code&gt;Media&lt;/code&gt; 定義を使用するオブジェクトは、親ウィジェットに関連付けられているすべてのアセットを継承します。これは、親が独自の要件を定義する方法に関係なく発生します。たとえば、上の例から基本的なカレンダーウィジェットを拡張するとします。</target>
        </trans-unit>
        <trans-unit id="a0bb47d47138f8dc23910e6c56924290ca85313e" translate="yes" xml:space="preserve">
          <source>By default, applied filters are preserved on the list view after creating, editing, or deleting an object. You can have filters cleared by setting this attribute to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、適用されたフィルターは、オブジェクトを作成、編集、または削除した後、リストビューに保持されます。この属性を &lt;code&gt;False&lt;/code&gt; に設定すると、フィルターをクリアできます。</target>
        </trans-unit>
        <trans-unit id="dc74fce2ded58569d277ca1ac0b3bce0c7e390a6" translate="yes" xml:space="preserve">
          <source>By default, collected files receive permissions from &lt;a href=&quot;../settings#std:setting-FILE_UPLOAD_PERMISSIONS&quot;&gt;&lt;code&gt;FILE_UPLOAD_PERMISSIONS&lt;/code&gt;&lt;/a&gt; and collected directories receive permissions from &lt;a href=&quot;../settings#std:setting-FILE_UPLOAD_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;FILE_UPLOAD_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt;. If you would like different permissions for these files and/or directories, you can subclass either of the &lt;a href=&quot;#staticfiles-storages&quot;&gt;static files storage classes&lt;/a&gt; and specify the &lt;code&gt;file_permissions_mode&lt;/code&gt; and/or &lt;code&gt;directory_permissions_mode&lt;/code&gt; parameters, respectively. For example:</source>
          <target state="translated">デフォルトでは、収集されたファイルは&lt;a href=&quot;../settings#std:setting-FILE_UPLOAD_PERMISSIONS&quot;&gt; &lt;code&gt;FILE_UPLOAD_PERMISSIONS&lt;/code&gt; &lt;/a&gt;から権限を受け取り、収集されたディレクトリは&lt;a href=&quot;../settings#std:setting-FILE_UPLOAD_DIRECTORY_PERMISSIONS&quot;&gt; &lt;code&gt;FILE_UPLOAD_DIRECTORY_PERMISSIONS&lt;/code&gt; &lt;/a&gt;から権限を受け取ります。これらのファイルおよび/またはディレクトリの異なるアクセス許可をご希望の場合は、いずれかのサブクラス化できる&lt;a href=&quot;#staticfiles-storages&quot;&gt;静的なファイル・ストレージ・クラス&lt;/a&gt;と指定 &lt;code&gt;file_permissions_mode&lt;/code&gt; および/または &lt;code&gt;directory_permissions_mode&lt;/code&gt; のそれぞれのパラメータを。例えば：</target>
        </trans-unit>
        <trans-unit id="3b7a0dcd80b8cdff2b90ee60a88853b994ee1d25" translate="yes" xml:space="preserve">
          <source>By default, each &lt;code&gt;Field&lt;/code&gt; class assumes the value is required, so if you pass an empty value &amp;ndash; either &lt;code&gt;None&lt;/code&gt; or the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) &amp;ndash; then &lt;code&gt;clean()&lt;/code&gt; will raise a &lt;code&gt;ValidationError&lt;/code&gt; exception:</source>
          <target state="translated">デフォルトでは、各 &lt;code&gt;Field&lt;/code&gt; クラスは値が必要であると想定しているため、 &lt;code&gt;None&lt;/code&gt; または空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）のいずれかの空の値を渡すと、 &lt;code&gt;clean()&lt;/code&gt; は &lt;code&gt;ValidationError&lt;/code&gt; 例外を発生させます。</target>
        </trans-unit>
        <trans-unit id="aff43728c24d95c555a12771c6f1637c955b36ca" translate="yes" xml:space="preserve">
          <source>By default, feeds produced in this framework use RSS 2.0.</source>
          <target state="translated">デフォルトでは、このフレームワークで生成されるフィードはRSS 2.0を使用します。</target>
        </trans-unit>
        <trans-unit id="bad5dcbca8a4e7babba3e817398b7347bd1c46d0" translate="yes" xml:space="preserve">
          <source>By default, fixtures are only loaded into the &lt;code&gt;default&lt;/code&gt; database. If you are using multiple databases and set &lt;a href=&quot;#django.test.TransactionTestCase.databases&quot;&gt;&lt;code&gt;TransactionTestCase.databases&lt;/code&gt;&lt;/a&gt;, fixtures will be loaded into all specified databases.</source>
          <target state="translated">デフォルトでは、フィクスチャーは &lt;code&gt;default&lt;/code&gt; データベースにのみロードされます。複数のデータベースを使用していて、&lt;a href=&quot;#django.test.TransactionTestCase.databases&quot;&gt; &lt;code&gt;TransactionTestCase.databases&lt;/code&gt; &lt;/a&gt;を設定している場合、フィクスチャは指定されたすべてのデータベースにロードされます。</target>
        </trans-unit>
        <trans-unit id="5ea67f185a46403f05b66ef175b8dd27f7f9e75a" translate="yes" xml:space="preserve">
          <source>By default, flatpages are rendered via the template &lt;code&gt;flatpages/default.html&lt;/code&gt;, but you can override that for a particular flatpage: in the admin, a collapsed fieldset titled &amp;ldquo;Advanced options&amp;rdquo; (clicking will expand it) contains a field for specifying a template name. If you&amp;rsquo;re creating a flat page via the Python API you can set the template name as the field &lt;code&gt;template_name&lt;/code&gt; on the &lt;code&gt;FlatPage&lt;/code&gt; object.</source>
          <target state="translated">デフォルトでは、フラットページはテンプレート &lt;code&gt;flatpages/default.html&lt;/code&gt; を介してレンダリングされますが、特定のフラットページに対してそれを上書きできます。管理者では、「詳細オプション」というタイトルの折りたたまれたフィールドセット（クリックすると展開されます）にテンプレートを指定するためのフィールドが含まれています名前。あなたがPythonのAPIを介してフラットページを作成している場合は、フィールドとして、テンプレート名を設定することができます &lt;code&gt;template_name&lt;/code&gt; の &lt;code&gt;FlatPage&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="ffa64f0dc535a3e6328b636928d139b03aef4a86" translate="yes" xml:space="preserve">
          <source>By default, forms use &lt;code&gt;django.forms.utils.ErrorList&lt;/code&gt; to format validation errors. If you&amp;rsquo;d like to use an alternate class for displaying errors, you can pass that in at construction time:</source>
          <target state="translated">デフォルトでは、フォームは &lt;code&gt;django.forms.utils.ErrorList&lt;/code&gt; を使用して検証エラーをフォーマットします。エラーを表示するために別のクラスを使用したい場合は、構築時にそれを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="79b8cb197e9ad200179d59e6fcd76fe9a7f86f82" translate="yes" xml:space="preserve">
          <source>By default, if an uploaded file is smaller than 2.5 megabytes, Django will hold the entire contents of the upload in memory. This means that saving the file involves only a read from memory and a write to disk and thus is very fast.</source>
          <target state="translated">デフォルトでは、アップロードされたファイルが 2.5 メガバイトよりも小さい場合、Django はアップロードされたファイルの全内容をメモリに保持します。つまり、ファイルの保存はメモリからの読み込みとディスクへの書き込みだけで済むので、非常に高速です。</target>
        </trans-unit>
        <trans-unit id="b304d0eaef1bfcde05509e4432d0cfba116239c8" translate="yes" xml:space="preserve">
          <source>By default, if both &lt;code&gt;form_class&lt;/code&gt; and &lt;code&gt;choices_form_class&lt;/code&gt; are &lt;code&gt;None&lt;/code&gt;, it uses &lt;a href=&quot;../forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;. If the field has &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;choices_form_class&lt;/code&gt; isn&amp;rsquo;t specified, it uses &lt;a href=&quot;../forms/fields#django.forms.TypedChoiceField&quot;&gt;&lt;code&gt;TypedChoiceField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;form_class&lt;/code&gt; と &lt;code&gt;choices_form_class&lt;/code&gt; の両方が &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;../forms/fields#django.forms.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; を&lt;/a&gt;使用します。フィールドに&lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt;あり、 &lt;code&gt;choices_form_class&lt;/code&gt; が指定されていない場合は、&lt;a href=&quot;../forms/fields#django.forms.TypedChoiceField&quot;&gt; &lt;code&gt;TypedChoiceField&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="640277932876e1f5e964e545945a1d3243bacf42" translate="yes" xml:space="preserve">
          <source>By default, indexes are created with an ascending order for each column. To define an index with a descending order for a column, add a hyphen before the field&amp;rsquo;s name.</source>
          <target state="translated">デフォルトでは、インデックスは列ごとに昇順で作成されます。列の降順でインデックスを定義するには、フィールド名の前にハイフンを追加します。</target>
        </trans-unit>
        <trans-unit id="10d56c35bf9e30223bbe68e3953921129582299d" translate="yes" xml:space="preserve">
          <source>By default, it displays all the apps in &lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; that have been registered with the admin application, in alphabetical order. You may want to make significant changes to the layout. After all, the index is probably the most important page of the admin, and it should be easy to use.</source>
          <target state="translated">デフォルトでは、管理アプリケーションに登録されている&lt;a href=&quot;../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;内のすべてのアプリがアルファベット順に表示されます。レイアウトを大幅に変更したい場合があります。結局のところ、インデックスはおそらく管理者にとって最も重要なページであり、使いやすいはずです。</target>
        </trans-unit>
        <trans-unit id="e73b5b8a0aeda43bc28c2cd88abfd1e2851d04e7" translate="yes" xml:space="preserve">
          <source>By default, management commands are executed with the current active locale.</source>
          <target state="translated">デフォルトでは、管理コマンドは現在のアクティブなロケールで実行されます。</target>
        </trans-unit>
        <trans-unit id="3d6c0354b373c788a2ffee3e4e7504ef01726e3f" translate="yes" xml:space="preserve">
          <source>By default, non-fatal error notifications are printed to &lt;code&gt;sys.stdout&lt;/code&gt;, but this keyword may be set to disable these notifications.</source>
          <target state="translated">デフォルトでは、致命的でないエラー通知は &lt;code&gt;sys.stdout&lt;/code&gt; に出力されますが、このキーワードはこれらの通知を無効にするように設定できます。</target>
        </trans-unit>
        <trans-unit id="3d9714230ce9793bba7e47fea39a4acdc5e5b5be" translate="yes" xml:space="preserve">
          <source>By default, only the &lt;code&gt;default&lt;/code&gt; database will be wrapped in a transaction during a &lt;code&gt;TestCase&lt;/code&gt;&amp;rsquo;s execution and attempts to query other databases will result in assertion errors to prevent state leaking between tests.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;default&lt;/code&gt; データベースのみが &lt;code&gt;TestCase&lt;/code&gt; の実行中にトランザクションにラップされ、他のデータベースにクエリを実行しようとすると、アサーションエラーが発生し、テスト間の状態リークが防止されます。</target>
        </trans-unit>
        <trans-unit id="59a817490e730f892b43cd4e00000ea6313a56ee" translate="yes" xml:space="preserve">
          <source>By default, results returned by a &lt;code&gt;QuerySet&lt;/code&gt; are ordered by the ordering tuple given by the &lt;code&gt;ordering&lt;/code&gt; option in the model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt;. You can override this on a per-&lt;code&gt;QuerySet&lt;/code&gt; basis by using the &lt;code&gt;order_by&lt;/code&gt; method.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;QuerySet&lt;/code&gt; によって返される結果は、モデルの &lt;code&gt;Meta&lt;/code&gt; の &lt;code&gt;ordering&lt;/code&gt; オプションで指定された順序付けタプルによって順序付けされます。あなたはパーでこれを無効にすることができます &lt;code&gt;QuerySet&lt;/code&gt; 使用により、基礎 &lt;code&gt;order_by&lt;/code&gt; 方法を。</target>
        </trans-unit>
        <trans-unit id="7a1f4daeaf09cb1e740e1ce47725d9bddcb66e9f" translate="yes" xml:space="preserve">
          <source>By default, returns &lt;code&gt;False&lt;/code&gt; for hidden widgets and &lt;code&gt;True&lt;/code&gt; otherwise. Special cases are &lt;a href=&quot;#django.forms.ClearableFileInput&quot;&gt;&lt;code&gt;ClearableFileInput&lt;/code&gt;&lt;/a&gt;, which returns &lt;code&gt;False&lt;/code&gt; when &lt;code&gt;initial&lt;/code&gt; is set, and &lt;a href=&quot;#django.forms.CheckboxSelectMultiple&quot;&gt;&lt;code&gt;CheckboxSelectMultiple&lt;/code&gt;&lt;/a&gt;, which always returns &lt;code&gt;False&lt;/code&gt; because browser validation would require all checkboxes to be checked instead of at least one.</source>
          <target state="translated">デフォルトでは、非表示のウィジェットの場合は &lt;code&gt;False&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;True&lt;/code&gt; を返します。特別なケースは、 &lt;code&gt;initial&lt;/code&gt; 設定時に &lt;code&gt;False&lt;/code&gt; を返す&lt;a href=&quot;#django.forms.ClearableFileInput&quot;&gt; &lt;code&gt;ClearableFileInput&lt;/code&gt; と&lt;/a&gt;、ブラウザーの検証で少なくとも1つではなくすべてのチェックボックスをオンにする必要があるため常に &lt;code&gt;False&lt;/code&gt; を返す&lt;a href=&quot;#django.forms.CheckboxSelectMultiple&quot;&gt; &lt;code&gt;CheckboxSelectMultiple&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="12937c2e8f92ca25826128cf099d0757d95ce112" translate="yes" xml:space="preserve">
          <source>By default, returns &lt;code&gt;False&lt;/code&gt; for hidden widgets and &lt;code&gt;True&lt;/code&gt; otherwise. Special cases are &lt;a href=&quot;#django.forms.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.ClearableFileInput&quot;&gt;&lt;code&gt;ClearableFileInput&lt;/code&gt;&lt;/a&gt;, which return &lt;code&gt;False&lt;/code&gt; when &lt;code&gt;initial&lt;/code&gt; is set, and &lt;a href=&quot;#django.forms.CheckboxSelectMultiple&quot;&gt;&lt;code&gt;CheckboxSelectMultiple&lt;/code&gt;&lt;/a&gt;, which always returns &lt;code&gt;False&lt;/code&gt; because browser validation would require all checkboxes to be checked instead of at least one.</source>
          <target state="translated">デフォルトでは、非表示のウィジェットの場合は &lt;code&gt;False&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;True&lt;/code&gt; を返します。特殊なケースは、 &lt;code&gt;initial&lt;/code&gt; 設定時に &lt;code&gt;False&lt;/code&gt; を返す&lt;a href=&quot;#django.forms.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#django.forms.ClearableFileInput&quot;&gt; &lt;code&gt;ClearableFileInput&lt;/code&gt; &lt;/a&gt;、およびブラウザーの検証では少なくとも1つではなくすべてのチェックボックスをチェックする必要があるため、常に &lt;code&gt;False&lt;/code&gt; を返す&lt;a href=&quot;#django.forms.CheckboxSelectMultiple&quot;&gt; &lt;code&gt;CheckboxSelectMultiple&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="c6634d8c32e80a484be41d7d16cb9bfe5e83c108" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt;&lt;code&gt;get_flatpages&lt;/code&gt;&lt;/a&gt; template tag will only show flatpages that are marked &lt;code&gt;registration_required = False&lt;/code&gt;. If you want to display registration-protected flatpages, you need to specify an authenticated user using a &lt;code&gt;for&lt;/code&gt; clause.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;#std:templatetag-get_flatpages&quot;&gt; &lt;code&gt;get_flatpages&lt;/code&gt; &lt;/a&gt;テンプレートタグは、 &lt;code&gt;registration_required = False&lt;/code&gt; マークされているフラットページのみを表示します。登録保護されたフラットページを表示する場合は、 &lt;code&gt;for&lt;/code&gt; 句を使用して認証済みユーザーを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="4d944f37a8346d7136a820d62a17bf0802066a0e" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; generic view uses a template called &lt;code&gt;&amp;lt;app name&amp;gt;/&amp;lt;model name&amp;gt;_detail.html&lt;/code&gt;. In our case, it would use the template &lt;code&gt;&quot;polls/question_detail.html&quot;&lt;/code&gt;. The &lt;code&gt;template_name&lt;/code&gt; attribute is used to tell Django to use a specific template name instead of the autogenerated default template name. We also specify the &lt;code&gt;template_name&lt;/code&gt; for the &lt;code&gt;results&lt;/code&gt; list view &amp;ndash; this ensures that the results view and the detail view have a different appearance when rendered, even though they&amp;rsquo;re both a &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt;&lt;code&gt;DetailView&lt;/code&gt;&lt;/a&gt; behind the scenes.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;汎用ビューは &lt;code&gt;&amp;lt;app name&amp;gt;/&amp;lt;model name&amp;gt;_detail.html&lt;/code&gt; というテンプレートを使用します。この例では、テンプレート &lt;code&gt;&quot;polls/question_detail.html&quot;&lt;/code&gt; を使用します。 &lt;code&gt;template_name&lt;/code&gt; 属性は、特定のテンプレート名の代わりに、自動生成されたデフォルトのテンプレート名を使用するようにDjangoに伝えるために使用されています。また、 &lt;code&gt;results&lt;/code&gt; リストビューの &lt;code&gt;template_name&lt;/code&gt; を指定します。これにより、結果ビューと詳細ビューの両方が&lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.detail.DetailView&quot;&gt; &lt;code&gt;DetailView&lt;/code&gt; &lt;/a&gt;であっても、レンダリング時に外観が異なるようになります。</target>
        </trans-unit>
        <trans-unit id="620d51650e80bad341e31d8237c208818c37e19c" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command starts the development server on the internal IP at port 8000.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;コマンドは、ポート8000​​の内部IPで開発サーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="731f12531f1d77897db3cb12a8abd0c64e27b70b" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt;&lt;code&gt;LOGGING&lt;/code&gt;&lt;/a&gt; setting is merged with &lt;a href=&quot;#default-logging-configuration&quot;&gt;Django&amp;rsquo;s default logging configuration&lt;/a&gt; using the following scheme.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;../ref/settings#std:setting-LOGGING&quot;&gt; &lt;code&gt;LOGGING&lt;/code&gt; &lt;/a&gt;設定は次のスキームを使用して&lt;a href=&quot;#default-logging-configuration&quot;&gt;Djangoのデフォルトのロギング&lt;/a&gt;設定とマージされます。</target>
        </trans-unit>
        <trans-unit id="1d881d13c27be262c330be0f2b538abac4a5f2d2" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt; setting is used as the assumed encoding for form data. If you need to change this for a particular form, you can set the &lt;code&gt;encoding&lt;/code&gt; attribute on an &lt;code&gt;HttpRequest&lt;/code&gt; instance. For example:</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt; &lt;code&gt;DEFAULT_CHARSET&lt;/code&gt; &lt;/a&gt;設定がフォームデータの想定エンコーディングとして使用されます。特定のフォームでこれを変更する必要がある場合は、 &lt;code&gt;HttpRequest&lt;/code&gt; インスタンスに &lt;code&gt;encoding&lt;/code&gt; 属性を設定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="3a9c62f322b4338c7957f84443f6b57a434afcca" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Signer&lt;/code&gt; class uses the &lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; setting to generate signatures. You can use a different secret by passing it to the &lt;code&gt;Signer&lt;/code&gt; constructor:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;Signer&lt;/code&gt; クラスは&lt;a href=&quot;../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; &lt;/a&gt;設定を使用して署名を生成します。 &lt;code&gt;Signer&lt;/code&gt; コンストラクターに渡すことで、別のシークレットを使用できます。</target>
        </trans-unit>
        <trans-unit id="029202ec108453b92fc0f661e53d449b64d142cf" translate="yes" xml:space="preserve">
          <source>By default, the MIME type of the &lt;code&gt;body&lt;/code&gt; parameter in an &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;. It is good practice to leave this alone, because it guarantees that any recipient will be able to read the email, regardless of their mail client. However, if you are confident that your recipients can handle an alternative content type, you can use the &lt;code&gt;content_subtype&lt;/code&gt; attribute on the &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class to change the main content type. The major type will always be &lt;code&gt;&quot;text&quot;&lt;/code&gt;, but you can change the subtype. For example:</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;body&lt;/code&gt; パラメーターのMIMEタイプは &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; です。メールクライアントに関係なく、すべての受信者がメールを読むことができることが保証されるため、これはそのままにしておくことをお勧めします。ただし、受信者が代替コンテンツタイプを処理できると確信している場合は、&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;クラスの &lt;code&gt;content_subtype&lt;/code&gt; 属性を使用してメインコンテンツタイプを変更できます。主なタイプは常に &lt;code&gt;&quot;text&quot;&lt;/code&gt; ですが、サブタイプは変更できます。例えば：</target>
        </trans-unit>
        <trans-unit id="e2975ada45be6c550edeb43c254b0bd4341da731" translate="yes" xml:space="preserve">
          <source>By default, the Oracle backend uses a &lt;code&gt;RETURNING INTO&lt;/code&gt; clause to efficiently retrieve the value of an &lt;code&gt;AutoField&lt;/code&gt; when inserting new rows. This behavior may result in a &lt;code&gt;DatabaseError&lt;/code&gt; in certain unusual setups, such as when inserting into a remote table, or into a view with an &lt;code&gt;INSTEAD OF&lt;/code&gt; trigger. The &lt;code&gt;RETURNING INTO&lt;/code&gt; clause can be disabled by setting the &lt;code&gt;use_returning_into&lt;/code&gt; option of the database configuration to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">デフォルトでは、Oracleバックエンドは &lt;code&gt;RETURNING INTO&lt;/code&gt; 句を使用して、新しい行を挿入するときに &lt;code&gt;AutoField&lt;/code&gt; の値を効率的に取得します。この動作により、リモートテーブルや &lt;code&gt;INSTEAD OF&lt;/code&gt; トリガーのあるビューに挿入する場合など、特定の異常な設定で &lt;code&gt;DatabaseError&lt;/code&gt; が発生する場合があります。 &lt;code&gt;RETURNING INTO&lt;/code&gt; の句を設定することで無効にすることができる &lt;code&gt;use_returning_into&lt;/code&gt; のにデータベース構成のオプション &lt;code&gt;False&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="10bcf238e4c2c0929a750f612eba603fdd7cd108" translate="yes" xml:space="preserve">
          <source>By default, the PostGIS installer on Windows includes a template spatial database entitled &lt;code&gt;template_postgis&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、Windows上のPostGISインストーラーには、template_postgisという名前の &lt;code&gt;template_postgis&lt;/code&gt; 空間データベースが含まれています。</target>
        </trans-unit>
        <trans-unit id="c95b26306f63e8210b753a104e04be5ef76d60a2" translate="yes" xml:space="preserve">
          <source>By default, the Python DB API will return results without their field names, which means you end up with a &lt;code&gt;list&lt;/code&gt; of values, rather than a &lt;code&gt;dict&lt;/code&gt;. At a small performance and memory cost, you can return results as a &lt;code&gt;dict&lt;/code&gt; by using something like this:</source>
          <target state="translated">デフォルトでは、Python DB APIはフィールド名なしで結果を返します。つまり、 &lt;code&gt;dict&lt;/code&gt; ではなく値の &lt;code&gt;list&lt;/code&gt; が返されます。小さなパフォーマンスとメモリコストで、次のようなものを使用して結果を &lt;code&gt;dict&lt;/code&gt; として返すことができます。</target>
        </trans-unit>
        <trans-unit id="dcd62cbe9226d5a82908a114072a806156c631be" translate="yes" xml:space="preserve">
          <source>By default, the admin uses a select-box interface (&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;) for those fields. Sometimes you don&amp;rsquo;t want to incur the overhead of selecting all the related instances to display in the dropdown.</source>
          <target state="translated">デフォルトでは、管理者はこれらのフィールドに &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; ボックスインターフェイス（&amp;lt;select&amp;gt;）を使用します。ドロップダウンに表示するすべての関連インスタンスを選択するオーバーヘッドが発生したくない場合があります。</target>
        </trans-unit>
        <trans-unit id="e03dc211d8b2ed013dd2ba41b2af67a4aa8e556b" translate="yes" xml:space="preserve">
          <source>By default, the cache tag will try to use the cache called &amp;ldquo;template_fragments&amp;rdquo;. If no such cache exists, it will fall back to using the default cache. You may select an alternate cache backend to use with the &lt;code&gt;using&lt;/code&gt; keyword argument, which must be the last argument to the tag.</source>
          <target state="translated">デフォルトでは、キャッシュタグは「template_fragments」と呼ばれるキャッシュを使用しようとします。そのようなキャッシュが存在しない場合、デフォルトのキャッシュの使用にフォールバックします。 &lt;code&gt;using&lt;/code&gt; キーワード引数で使用する代替キャッシュバックエンドを選択できます。これはタグの最後の引数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="39f73968f384cdab8be97039a6628c4fffd3c0cf" translate="yes" xml:space="preserve">
          <source>By default, the change list page allows sorting by all model fields (and callables that have the &lt;code&gt;admin_order_field&lt;/code&gt; property) specified in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;list_display&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、リストの変更ページでは、 &lt;code&gt;admin_order_field&lt;/code&gt; 指定されたすべてのモデルフィールド（およびadmin_order_fieldプロパティを持つ呼び出し可能オブジェクト）で&lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;list_display&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0b1947ebba5353b1443839d253e5cab1e4417bed" translate="yes" xml:space="preserve">
          <source>By default, the change list page will link the first column &amp;ndash; the first field specified in &lt;code&gt;list_display&lt;/code&gt; &amp;ndash; to the change page for each item. But &lt;code&gt;list_display_links&lt;/code&gt; lets you change this:</source>
          <target state="translated">デフォルトでは、変更リストページは最初の列（ &lt;code&gt;list_display&lt;/code&gt; で指定された最初のフィールド）を各アイテムの変更ページにリンクします。しかし、 &lt;code&gt;list_display_links&lt;/code&gt; ではこれを変更できます。</target>
        </trans-unit>
        <trans-unit id="70cebcccd9e4de08a9bdda825103487c596787e6" translate="yes" xml:space="preserve">
          <source>By default, the comparison is also ordering dependent. If &lt;code&gt;qs&lt;/code&gt; doesn&amp;rsquo;t provide an implicit ordering, you can set the &lt;code&gt;ordered&lt;/code&gt; parameter to &lt;code&gt;False&lt;/code&gt;, which turns the comparison into a &lt;code&gt;collections.Counter&lt;/code&gt; comparison. If the order is undefined (if the given &lt;code&gt;qs&lt;/code&gt; isn&amp;rsquo;t ordered and the comparison is against more than one ordered values), a &lt;code&gt;ValueError&lt;/code&gt; is raised.</source>
          <target state="translated">デフォルトでは、比較は順序にも依存します。 &lt;code&gt;qs&lt;/code&gt; が暗黙的な順序付けを提供しない場合、 &lt;code&gt;ordered&lt;/code&gt; パラメーターを &lt;code&gt;False&lt;/code&gt; に設定して、比較を &lt;code&gt;collections.Counter&lt;/code&gt; 比較に変えることができます。順序が定義されていない場合（指定された &lt;code&gt;qs&lt;/code&gt; が順序付けされておらず、順序付けされた複数の値に対する比較の場合）、 &lt;code&gt;ValueError&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="cc7c0a91c830ec3b2833f4277ed815b0784816db" translate="yes" xml:space="preserve">
          <source>By default, the configuration uses SQLite. If you&amp;rsquo;re new to databases, or you&amp;rsquo;re just interested in trying Django, this is the easiest choice. SQLite is included in Python, so you won&amp;rsquo;t need to install anything else to support your database. When starting your first real project, however, you may want to use a more scalable database like PostgreSQL, to avoid database-switching headaches down the road.</source>
          <target state="translated">デフォルトでは、設定はSQLiteを使用します。データベースが初めての場合、またはDjangoを試すことに興味がある場合は、これが最も簡単な選択です。SQLiteはPythonに含まれているため、データベースをサポートするために他に何もインストールする必要はありません。ただし、最初の実際のプロジェクトを開始するときは、PostgreSQLのようなよりスケーラブルなデータベースを使用して、将来のデータベース切り替えの問題を回避することができます。</target>
        </trans-unit>
        <trans-unit id="9aa0bfe9713f717ec0a3c773a4b5a81a940b8e8e" translate="yes" xml:space="preserve">
          <source>By default, the development server doesn&amp;rsquo;t serve any static files for your site (such as CSS files, images, things under &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; and so forth). If you want to configure Django to serve static media, read &lt;a href=&quot;../howto/static-files/index&quot;&gt;Managing static files (e.g. images, JavaScript, CSS)&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、開発サーバーはサイトの静的ファイル（CSSファイル、画像、&lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt;にあるものなど）を提供しません。静的メディアを提供するようにDjangoを設定する場合は、&lt;a href=&quot;../howto/static-files/index&quot;&gt;静的ファイル（画像、JavaScript、CSSなど）の管理をお&lt;/a&gt;読みください。</target>
        </trans-unit>
        <trans-unit id="f58e3dd0ee4655dafce5b8858db422df970dd622" translate="yes" xml:space="preserve">
          <source>By default, the driver of the source raster is used and the name of the raster is the original name appended with &lt;code&gt;'_copy' + source_driver_name&lt;/code&gt;. A different driver or name can be specified with the &lt;code&gt;driver&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; arguments.</source>
          <target state="translated">デフォルトでは、ソースラスタのドライバが使用され、ラスタの名前は &lt;code&gt;'_copy' + source_driver_name&lt;/code&gt; 追加された元の名前です。別のドライバーまたは名前を、 &lt;code&gt;driver&lt;/code&gt; および &lt;code&gt;name&lt;/code&gt; 引数で指定できます。</target>
        </trans-unit>
        <trans-unit id="b19da54ae6331a8a2bf381559a183e56db701f7f" translate="yes" xml:space="preserve">
          <source>By default, the fields in a &lt;code&gt;ModelForm&lt;/code&gt; will not localize their data. To enable localization for fields, you can use the &lt;code&gt;localized_fields&lt;/code&gt; attribute on the &lt;code&gt;Meta&lt;/code&gt; class.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;ModelForm&lt;/code&gt; のフィールドはデータをローカライズしません。フィールドのローカライズを有効にするには、 &lt;code&gt;Meta&lt;/code&gt; クラスの &lt;code&gt;localized_fields&lt;/code&gt; 属性を使用できます。</target>
        </trans-unit>
        <trans-unit id="f321e8127d9ac658d4b1949cc1490de438d01f32" translate="yes" xml:space="preserve">
          <source>By default, the following methods raise &lt;code&gt;NotImplementedError&lt;/code&gt; and will typically have to be overridden:</source>
          <target state="translated">デフォルトでは、次のメソッドは &lt;code&gt;NotImplementedError&lt;/code&gt; を発生させ、通常はオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="ca2bffb5221d5f05b126cb02c1e20561e1923fbf" translate="yes" xml:space="preserve">
          <source>By default, the form rendering methods include:</source>
          <target state="translated">デフォルトでは、フォームのレンダリングメソッドには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="b6c82cab571b8304e1b1b7e936f353a02a4240bb" translate="yes" xml:space="preserve">
          <source>By default, the microseconds part of the time value is always set to &lt;code&gt;0&lt;/code&gt;. If microseconds are required, use a subclass with the &lt;a href=&quot;#django.forms.Widget.supports_microseconds&quot;&gt;&lt;code&gt;supports_microseconds&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、時間値のマイクロ秒の部分は常に &lt;code&gt;0&lt;/code&gt; に設定されています。マイクロ秒が必要な場合は、&lt;a href=&quot;#django.forms.Widget.supports_microseconds&quot;&gt; &lt;code&gt;supports_microseconds&lt;/code&gt; &lt;/a&gt;属性を &lt;code&gt;True&lt;/code&gt; に設定したサブクラスを使用します。</target>
        </trans-unit>
        <trans-unit id="d3a6b68e955078c44c9dcd820229284496e89bde" translate="yes" xml:space="preserve">
          <source>By default, the middleware will set the &lt;code&gt;X-Frame-Options&lt;/code&gt; header to &lt;code&gt;DENY&lt;/code&gt; for every outgoing &lt;code&gt;HttpResponse&lt;/code&gt;. If you want any other value for this header instead, set the &lt;a href=&quot;settings#std:setting-X_FRAME_OPTIONS&quot;&gt;&lt;code&gt;X_FRAME_OPTIONS&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="translated">デフォルトでは、ミドルウェアはすべての発信 &lt;code&gt;HttpResponse&lt;/code&gt; に対して &lt;code&gt;X-Frame-Options&lt;/code&gt; ヘッダーを &lt;code&gt;DENY&lt;/code&gt; に設定します。このヘッダーの他の値が必要な場合は、&lt;a href=&quot;settings#std:setting-X_FRAME_OPTIONS&quot;&gt; &lt;code&gt;X_FRAME_OPTIONS&lt;/code&gt; &lt;/a&gt;設定を設定します。</target>
        </trans-unit>
        <trans-unit id="29fcae8b59f0e0174123704e7fb3ff407a446248" translate="yes" xml:space="preserve">
          <source>By default, the path that the user should be redirected to upon successful authentication is stored in a query string parameter called &lt;code&gt;&quot;next&quot;&lt;/code&gt;. If you would prefer to use a different name for this parameter, &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; takes an optional &lt;code&gt;redirect_field_name&lt;/code&gt; parameter:</source>
          <target state="translated">デフォルトでは、認証が成功したときにユーザーがリダイレクトされるパスは、 &lt;code&gt;&quot;next&quot;&lt;/code&gt; と呼ばれるクエリ文字列パラメーターに格納されます。このパラメーターに別の名前を使用したい場合、&lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt; &lt;code&gt;login_required()&lt;/code&gt; &lt;/a&gt;はオプションの &lt;code&gt;redirect_field_name&lt;/code&gt; パラメーターを取ります。</target>
        </trans-unit>
        <trans-unit id="d69c2cc747e1098ea4727b5082d05171bad864aa" translate="yes" xml:space="preserve">
          <source>By default, the test client will disable any CSRF checks performed by your site.</source>
          <target state="translated">デフォルトでは、テストクライアントはサイトで実行される CSRF チェックを無効にします。</target>
        </trans-unit>
        <trans-unit id="32ef3d7bec141ea4c91ac4b2829652c3c772e23f" translate="yes" xml:space="preserve">
          <source>By default, the warp functions keeps most parameters equal to the values of the original source raster, so only parameters that should be changed need to be specified. Note that this includes the driver, so for file-based rasters the warp function will create a new raster on disk.</source>
          <target state="translated">デフォルトでは、ワープ関数はほとんどのパラメータを元のソースラスタの値と同じに保つので、変更すべきパラメータだけを指定する必要があります。これにはドライバも含まれているので、ファイルベースのラスタの場合、ワープ関数はディスク上に新しいラスタを作成します。</target>
        </trans-unit>
        <trans-unit id="dc92d2c2bb23a2ee972e5ac3d9588241377ad7a8" translate="yes" xml:space="preserve">
          <source>By default, these checks will not be run.</source>
          <target state="translated">デフォルトでは、これらのチェックは実行されません。</target>
        </trans-unit>
        <trans-unit id="69ff8f5f15e325f2ab63add63c8e185070bfd198" translate="yes" xml:space="preserve">
          <source>By default, this config only sends messages of level &lt;code&gt;INFO&lt;/code&gt; or higher to the console (same as Django&amp;rsquo;s default logging config, except that the default only displays log records when &lt;code&gt;DEBUG=True&lt;/code&gt;). Django does not log many such messages. With this config, however, you can also set the environment variable &lt;code&gt;DJANGO_LOG_LEVEL=DEBUG&lt;/code&gt; to see all of Django&amp;rsquo;s debug logging which is very verbose as it includes all database queries:</source>
          <target state="translated">デフォルトでは、この構成は &lt;code&gt;INFO&lt;/code&gt; 以上のレベルのメッセージのみをコンソールに送信します（デフォルトは &lt;code&gt;DEBUG=True&lt;/code&gt; の場合にのみログレコードを表示することを除いて、Djangoのデフォルトのロギング構成と同じです）。Djangoはそのようなメッセージをあまりログに記録しません。ただし、この構成では、環境変数 &lt;code&gt;DJANGO_LOG_LEVEL=DEBUG&lt;/code&gt; を設定して、すべてのデータベースクエリを含むため、非常に冗長な Djangoのデバッグログをすべて表示できます。</target>
        </trans-unit>
        <trans-unit id="ae73f1e3adbfd12ed20d74feaf8562ade8f9898d" translate="yes" xml:space="preserve">
          <source>By default, this config sends messages from the &lt;code&gt;django&lt;/code&gt; logger of level &lt;code&gt;INFO&lt;/code&gt; or higher to the console. This is the same level as Django&amp;rsquo;s default logging config, except that the default config only displays log records when &lt;code&gt;DEBUG=True&lt;/code&gt;. Django does not log many such &lt;code&gt;INFO&lt;/code&gt; level messages. With this config, however, you can also set the environment variable &lt;code&gt;DJANGO_LOG_LEVEL=DEBUG&lt;/code&gt; to see all of Django&amp;rsquo;s debug logging which is very verbose as it includes all database queries.</source>
          <target state="translated">デフォルトでは、この設定はレベル &lt;code&gt;INFO&lt;/code&gt; 以上の &lt;code&gt;django&lt;/code&gt; ロガーからコンソールにメッセージを送信します。これは、Djangoのデフォルトのログ設定と同じレベルですが、デフォルトの設定では、 &lt;code&gt;DEBUG=True&lt;/code&gt; の場合にのみログレコードが表示されます。 Djangoはそのような &lt;code&gt;INFO&lt;/code&gt; レベルのメッセージをあまりログに記録しません。ただし、この構成では、環境変数 &lt;code&gt;DJANGO_LOG_LEVEL=DEBUG&lt;/code&gt; を設定して、すべてのデータベースクエリが含まれているため非常に冗長なDjangoのすべてのデバッグログを表示することもできます。</target>
        </trans-unit>
        <trans-unit id="8936f3b8626007e68d17bdde77929a62946954af" translate="yes" xml:space="preserve">
          <source>By default, this function does not preserve topology. For example, &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; objects can be split, be collapsed into lines, or disappear. &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; holes can be created or disappear, and lines may cross. By specifying &lt;code&gt;preserve_topology=True&lt;/code&gt;, the result will have the same dimension and number of components as the input; this is significantly slower, however.</source>
          <target state="translated">デフォルトでは、この機能はトポロジーを保持しません。たとえば、&lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt; &lt;code&gt;Polygon&lt;/code&gt; &lt;/a&gt;オブジェクトは分割したり、線に折りたたんだり、非表示にしたりできます。&lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt; &lt;code&gt;Polygon&lt;/code&gt; &lt;/a&gt;穴が作成または非表示になり、線が交差する場合があります。 &lt;code&gt;preserve_topology=True&lt;/code&gt; を指定すると、結果は入力と同じ次元とコンポーネント数になります。ただし、これは大幅に遅くなります。</target>
        </trans-unit>
        <trans-unit id="bca9facc8f3a7a02739246fa4f33411469509d03" translate="yes" xml:space="preserve">
          <source>By default, this is &lt;a href=&quot;views#django.views.defaults.bad_request&quot;&gt;&lt;code&gt;django.views.defaults.bad_request()&lt;/code&gt;&lt;/a&gt;. If you implement a custom view, be sure it accepts &lt;code&gt;request&lt;/code&gt; and &lt;code&gt;exception&lt;/code&gt; arguments and returns an &lt;a href=&quot;request-response#django.http.HttpResponseBadRequest&quot;&gt;&lt;code&gt;HttpResponseBadRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、これは&lt;a href=&quot;views#django.views.defaults.bad_request&quot;&gt; &lt;code&gt;django.views.defaults.bad_request()&lt;/code&gt; &lt;/a&gt;です。カスタムビューを実装する場合は、 &lt;code&gt;request&lt;/code&gt; と &lt;code&gt;exception&lt;/code&gt; 引数を受け入れ、&lt;a href=&quot;request-response#django.http.HttpResponseBadRequest&quot;&gt; &lt;code&gt;HttpResponseBadRequest&lt;/code&gt; &lt;/a&gt;を返すようにしてください。</target>
        </trans-unit>
        <trans-unit id="9d871d6917fd6adc4f716f1d8dd826642b8d0f4a" translate="yes" xml:space="preserve">
          <source>By default, this is &lt;a href=&quot;views#django.views.defaults.page_not_found&quot;&gt;&lt;code&gt;django.views.defaults.page_not_found()&lt;/code&gt;&lt;/a&gt;. If you implement a custom view, be sure it accepts &lt;code&gt;request&lt;/code&gt; and &lt;code&gt;exception&lt;/code&gt; arguments and returns an &lt;a href=&quot;request-response#django.http.HttpResponseNotFound&quot;&gt;&lt;code&gt;HttpResponseNotFound&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、これは&lt;a href=&quot;views#django.views.defaults.page_not_found&quot;&gt; &lt;code&gt;django.views.defaults.page_not_found()&lt;/code&gt; &lt;/a&gt;です。カスタムビューを実装する場合は、 &lt;code&gt;request&lt;/code&gt; と &lt;code&gt;exception&lt;/code&gt; 引数を受け入れ、&lt;a href=&quot;request-response#django.http.HttpResponseNotFound&quot;&gt; &lt;code&gt;HttpResponseNotFound&lt;/code&gt; &lt;/a&gt;を返すようにしてください。</target>
        </trans-unit>
        <trans-unit id="2d0a3321b10650c4b923bda4022a187e8881c185" translate="yes" xml:space="preserve">
          <source>By default, this is &lt;a href=&quot;views#django.views.defaults.permission_denied&quot;&gt;&lt;code&gt;django.views.defaults.permission_denied()&lt;/code&gt;&lt;/a&gt;. If you implement a custom view, be sure it accepts &lt;code&gt;request&lt;/code&gt; and &lt;code&gt;exception&lt;/code&gt; arguments and returns an &lt;a href=&quot;request-response#django.http.HttpResponseForbidden&quot;&gt;&lt;code&gt;HttpResponseForbidden&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、これは&lt;a href=&quot;views#django.views.defaults.permission_denied&quot;&gt; &lt;code&gt;django.views.defaults.permission_denied()&lt;/code&gt; &lt;/a&gt;です。カスタムビューを実装する場合は、 &lt;code&gt;request&lt;/code&gt; と &lt;code&gt;exception&lt;/code&gt; 引数を受け入れ、&lt;a href=&quot;request-response#django.http.HttpResponseForbidden&quot;&gt; &lt;code&gt;HttpResponseForbidden&lt;/code&gt; &lt;/a&gt;を返すようにしてください。</target>
        </trans-unit>
        <trans-unit id="a1420cf9b26544fb28a25be612f8701df833400f" translate="yes" xml:space="preserve">
          <source>By default, this is &lt;a href=&quot;views#django.views.defaults.server_error&quot;&gt;&lt;code&gt;django.views.defaults.server_error()&lt;/code&gt;&lt;/a&gt;. If you implement a custom view, be sure it accepts a &lt;code&gt;request&lt;/code&gt; argument and returns an &lt;a href=&quot;request-response#django.http.HttpResponseServerError&quot;&gt;&lt;code&gt;HttpResponseServerError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、これは&lt;a href=&quot;views#django.views.defaults.server_error&quot;&gt; &lt;code&gt;django.views.defaults.server_error()&lt;/code&gt; &lt;/a&gt;です。カスタムビューを実装する場合は、 &lt;code&gt;request&lt;/code&gt; ビューを受け入れて&lt;a href=&quot;request-response#django.http.HttpResponseServerError&quot;&gt; &lt;code&gt;HttpResponseServerError&lt;/code&gt; &lt;/a&gt;を返すようにしてください。</target>
        </trans-unit>
        <trans-unit id="4e95538e33c1c66fcd085f85924c4523f442dff3" translate="yes" xml:space="preserve">
          <source>By default, this is set to &lt;code&gt;False&lt;/code&gt;. When &lt;code&gt;False&lt;/code&gt;, each value from the repeated fields is stored. When set to &lt;code&gt;True&lt;/code&gt;, any trailing values which are blank will be stripped from the result. If the underlying field has &lt;code&gt;required=True&lt;/code&gt;, but &lt;code&gt;remove_trailing_nulls&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, then null values are only allowed at the end, and will be stripped.</source>
          <target state="translated">デフォルトでは、これは &lt;code&gt;False&lt;/code&gt; に設定されています。 &lt;code&gt;False&lt;/code&gt; の場合、繰り返しフィールドの各値が保存されます。 &lt;code&gt;True&lt;/code&gt; に設定すると、空白の後続値は結果から削除されます。基になるフィールドに &lt;code&gt;required=True&lt;/code&gt; があるが、 &lt;code&gt;remove_trailing_nulls&lt;/code&gt; が &lt;code&gt;True&lt;/code&gt; の場合、null値は最後にのみ許可され、削除されます。</target>
        </trans-unit>
        <trans-unit id="0f6e346f836e87a1c31da41e33c533b26435c8cf" translate="yes" xml:space="preserve">
          <source>By default, this will be the field&amp;rsquo;s name prefixed by &lt;code&gt;id_&lt;/code&gt; (&amp;ldquo;&lt;code&gt;id_my_field&lt;/code&gt;&amp;rdquo; for the example above). You may modify the ID by setting &lt;a href=&quot;widgets#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt; on the field&amp;rsquo;s widget. For example, declaring a field like this:</source>
          <target state="translated">デフォルトでは、これはフィールド名の前に &lt;code&gt;id_&lt;/code&gt; を付けたものになります（上記の例では「 &lt;code&gt;id_my_field&lt;/code&gt; 」）。フィールドのウィジェットで&lt;a href=&quot;widgets#django.forms.Widget.attrs&quot;&gt; &lt;code&gt;attrs&lt;/code&gt; &lt;/a&gt;を設定して、IDを変更できます。たとえば、次のようなフィールドを宣言します。</target>
        </trans-unit>
        <trans-unit id="dac32222e1bc8ec7c8c991f8ad6c18f46b9b4bda" translate="yes" xml:space="preserve">
          <source>By default, validators are used in the forms to reset or change passwords and in the &lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt;&lt;code&gt;createsuperuser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/django-admin#django-admin-changepassword&quot;&gt;&lt;code&gt;changepassword&lt;/code&gt;&lt;/a&gt; management commands. Validators aren&amp;rsquo;t applied at the model level, for example in &lt;code&gt;User.objects.create_user()&lt;/code&gt; and &lt;code&gt;create_superuser()&lt;/code&gt;, because we assume that developers, not users, interact with Django at that level and also because model validation doesn&amp;rsquo;t automatically run as part of creating models.</source>
          <target state="translated">デフォルトでは、パスワードをリセットまたは変更する&lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt; &lt;code&gt;createsuperuser&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../ref/django-admin#django-admin-changepassword&quot;&gt; &lt;code&gt;changepassword&lt;/code&gt; &lt;/a&gt;コマンドとchangepassword管理コマンドでバリデーターが使用されます。バリデーターはモデルレベル、たとえば &lt;code&gt;User.objects.create_user()&lt;/code&gt; や &lt;code&gt;create_superuser()&lt;/code&gt; などでは適用されません。ユーザーではなく開発者がそのレベルでDjangoを操作すると想定しているため、モデルの検証が自動的に実行されないためです。モデル作成の一部として。</target>
        </trans-unit>
        <trans-unit id="066e359739b47403283251fad4aed92c61c4920e" translate="yes" xml:space="preserve">
          <source>By default, when you create a formset from a model, the formset will use a queryset that includes all objects in the model (e.g., &lt;code&gt;Author.objects.all()&lt;/code&gt;). You can override this behavior by using the &lt;code&gt;queryset&lt;/code&gt; argument:</source>
          <target state="translated">デフォルトでは、モデルから &lt;code&gt;Author.objects.all()&lt;/code&gt; 、フォームセットはモデル内のすべてのオブジェクトを含むクエリセットを使用します（例：Author.objects.all（））。 &lt;code&gt;queryset&lt;/code&gt; 引数を使用して、この動作をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="26f00cf8c6097bc1f1a223f1fb303483b4162693" translate="yes" xml:space="preserve">
          <source>By default, when you use &lt;code&gt;modelformset_factory&lt;/code&gt;, a model form will be created using &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelform_factory&quot;&gt;&lt;code&gt;modelform_factory()&lt;/code&gt;&lt;/a&gt;. Often, it can be useful to specify a custom model form. For example, you can create a custom model form that has custom validation:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;modelformset_factory&lt;/code&gt; を使用すると、&lt;a href=&quot;../../ref/forms/models#django.forms.models.modelform_factory&quot;&gt; &lt;code&gt;modelform_factory()&lt;/code&gt; &lt;/a&gt;を使用してモデルフォームが作成されます。多くの場合、カスタムモデルフォームを指定すると便利です。たとえば、カスタム検証を持つカスタムモデルフォームを作成できます。</target>
        </trans-unit>
        <trans-unit id="1ca1536f7a03b8bdd2425a35c3fd0822d351fe0d" translate="yes" xml:space="preserve">
          <source>By default, when you use the &lt;code&gt;as&lt;/code&gt; keyword with the cycle tag, the usage of &lt;code&gt;{% cycle %}&lt;/code&gt; that initiates the cycle will itself produce the first value in the cycle. This could be a problem if you want to use the value in a nested loop or an included template. If you only want to declare the cycle but not produce the first value, you can add a &lt;code&gt;silent&lt;/code&gt; keyword as the last keyword in the tag. For example:</source>
          <target state="translated">デフォルトでは、サイクルキーワードで &lt;code&gt;as&lt;/code&gt; キーワードを使用する場合、サイクルを開始する &lt;code&gt;{% cycle %}&lt;/code&gt; を使用すると、それ自体がサイクルの最初の値を生成します。ネストされたループまたは含まれているテンプレートで値を使用する場合、これは問題になる可能性があります。サイクルを宣言するだけで最初の値を生成したくない場合は、 &lt;code&gt;silent&lt;/code&gt; キーワードをタグの最後のキーワードとして追加できます。例えば：</target>
        </trans-unit>
        <trans-unit id="617bf421f9811653cfb1d1684975aa07e423d0b7" translate="yes" xml:space="preserve">
          <source>By default, with a UTF-8 database, MySQL will use the &lt;code&gt;utf8_general_ci&lt;/code&gt; collation. This results in all string equality comparisons being done in a &lt;em&gt;case-insensitive&lt;/em&gt; manner. That is, &lt;code&gt;&quot;Fred&quot;&lt;/code&gt; and &lt;code&gt;&quot;freD&quot;&lt;/code&gt; are considered equal at the database level. If you have a unique constraint on a field, it would be illegal to try to insert both &lt;code&gt;&quot;aa&quot;&lt;/code&gt; and &lt;code&gt;&quot;AA&quot;&lt;/code&gt; into the same column, since they compare as equal (and, hence, non-unique) with the default collation. If you want case-sensitive comparisons on a particular column or table, change the column or table to use the &lt;code&gt;utf8_bin&lt;/code&gt; collation.</source>
          <target state="translated">デフォルトでは、UTF-8データベースでは、MySQLは &lt;code&gt;utf8_general_ci&lt;/code&gt; 照合を使用します。これにより、すべての文字列の等価比較が&lt;em&gt;大文字と小文字を区別しない&lt;/em&gt;方法で行われます。つまり、 &lt;code&gt;&quot;Fred&quot;&lt;/code&gt; と &lt;code&gt;&quot;freD&quot;&lt;/code&gt; はデータベースレベルで等しいと見なされます。フィールドに一意の制約がある場合、 &lt;code&gt;&quot;aa&quot;&lt;/code&gt; と &lt;code&gt;&quot;AA&quot;&lt;/code&gt; の両方を同じ列に挿入しようとすることは違法です。なぜなら、これらはデフォルトの照合と等しい（したがって、一意ではない）と比較されるためです。特定の列またはテーブルで大文字と小文字を区別する比較が必要な場合は、 &lt;code&gt;utf8_bin&lt;/code&gt; 照合を使用するように列またはテーブルを変更します。</target>
        </trans-unit>
        <trans-unit id="467033616921a80b8937e8371ddac7a34223bb6e" translate="yes" xml:space="preserve">
          <source>By definition, these extra lookups may not be portable to different database engines (because you&amp;rsquo;re explicitly writing SQL code) and violate the DRY principle, so you should avoid them if possible.</source>
          <target state="translated">定義により、これらの追加のルックアップは異なるデータベースエンジンに移植できない場合があり（SQLコードを明示的に記述しているため）、DRYの原則に違反しているため、可能であればそれらを回避する必要があります。</target>
        </trans-unit>
        <trans-unit id="d7144ebfb5d375c533eb02e491b7e5c4749d3b7b" translate="yes" xml:space="preserve">
          <source>By ensuring each Django instance has a different &lt;a href=&quot;../ref/settings#std:setting-CACHES-KEY_PREFIX&quot;&gt;&lt;code&gt;KEY_PREFIX&lt;/code&gt;&lt;/a&gt;, you can ensure that there will be no collisions in cache values.</source>
          <target state="translated">各Djangoインスタンスが異なる&lt;a href=&quot;../ref/settings#std:setting-CACHES-KEY_PREFIX&quot;&gt; &lt;code&gt;KEY_PREFIX&lt;/code&gt; を&lt;/a&gt;持っていることを確認することにより、キャッシュ値に衝突がないことを確認できます。</target>
        </trans-unit>
        <trans-unit id="2c77e47a70a2f837729449c2a4c0200d34048646" translate="yes" xml:space="preserve">
          <source>By far, the most common problem when installing GeoDjango is that the external shared libraries (e.g., for GEOS and GDAL) cannot be located. &lt;a href=&quot;#id25&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; Typically, the cause of this problem is that the operating system isn&amp;rsquo;t aware of the directory where the libraries built from source were installed.</source>
          <target state="translated">GeoDjangoをインストールする際の最も一般的な問題は、外部共有ライブラリ（GEOSやGDALなど）が見つからないことです。&lt;a href=&quot;#id25&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt;通常、この問題の原因は、ソースから構築されたライブラリがインストールされたディレクトリをオペレーティングシステムが認識していないことです。</target>
        </trans-unit>
        <trans-unit id="9c6928581df2a3d4e734facfdeb19244a874b86c" translate="yes" xml:space="preserve">
          <source>By far, the most common problem when installing GeoDjango is that the external shared libraries (e.g., for GEOS and GDAL) cannot be located. &lt;a href=&quot;#id27&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; Typically, the cause of this problem is that the operating system isn&amp;rsquo;t aware of the directory where the libraries built from source were installed.</source>
          <target state="translated">はるかに、GeoDjangoをインストールする際の最も一般的な問題は、外部共有ライブラリ（GEOSやGDALなど）が見つからないことです。&lt;a href=&quot;#id27&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt;通常、この問題の原因は、オペレーティングシステムがソースからビルドされたライブラリがインストールされたディレクトリを認識していないことです。</target>
        </trans-unit>
        <trans-unit id="9eadae5b875107d64f4a9dbdd96b5eae7b15360d" translate="yes" xml:space="preserve">
          <source>By passing a hardcoded URL to redirect to:</source>
          <target state="translated">リダイレクト先のハードコードされたURLを渡すことで</target>
        </trans-unit>
        <trans-unit id="410f3140d832540e34b1f703f5f9780637017818" translate="yes" xml:space="preserve">
          <source>By passing some object; that object&amp;rsquo;s &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method will be called to figure out the redirect URL:</source>
          <target state="translated">オブジェクトを渡すことにより、そのオブジェクトの&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、リダイレクトURLがわかります。</target>
        </trans-unit>
        <trans-unit id="9f790aaa211799b67e9734bb44b20520139b5705" translate="yes" xml:space="preserve">
          <source>By passing the name of a view and optionally some positional or keyword arguments; the URL will be reverse resolved using the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">ビューの名前と、オプションで位置引数またはキーワード引数を渡す。URLは、&lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt;メソッドを使用して逆解決されます。</target>
        </trans-unit>
        <trans-unit id="bf44349a57bf99a3da9cd7ed7be76a4a791e4da9" translate="yes" xml:space="preserve">
          <source>By registering the &lt;code&gt;Question&lt;/code&gt; model with &lt;code&gt;admin.site.register(Question)&lt;/code&gt;, Django was able to construct a default form representation. Often, you&amp;rsquo;ll want to customize how the admin form looks and works. You&amp;rsquo;ll do this by telling Django the options you want when you register the object.</source>
          <target state="translated">&lt;code&gt;Question&lt;/code&gt; モデルを &lt;code&gt;admin.site.register(Question)&lt;/code&gt; に登録することにより、Djangoはデフォルトのフォーム表現を構築することができました。多くの場合、管理フォームの外観と動作をカスタマイズする必要があります。これを行うには、オブジェクトを登録するときに必要なオプションをDjangoに通知します。</target>
        </trans-unit>
        <trans-unit id="1a72150f0151c29d8e88726ab81f5d4a3c72e587" translate="yes" xml:space="preserve">
          <source>By running &lt;code&gt;makemigrations&lt;/code&gt;, you&amp;rsquo;re telling Django that you&amp;rsquo;ve made some changes to your models (in this case, you&amp;rsquo;ve made new ones) and that you&amp;rsquo;d like the changes to be stored as a &lt;em&gt;migration&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;makemigrations&lt;/code&gt; を実行することで、Djangoにモデルに変更を加えた（この場合は新しい変更を加えた）ことと、変更を&lt;em&gt;マイグレーション&lt;/em&gt;として保存することを伝えています。</target>
        </trans-unit>
        <trans-unit id="a2698e53410edfde0b255f7364f15c404526b514" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;--verbosity&lt;/code&gt; flag to 0, you can suppress the extra output and just get the path names:</source>
          <target state="translated">&lt;code&gt;--verbosity&lt;/code&gt; フラグを0に設定すると、余分な出力を抑制して、パス名のみを取得できます。</target>
        </trans-unit>
        <trans-unit id="bafa080a33e73f9455d05b423e3fd1169f60cf32" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;email_backend&lt;/code&gt; argument of &lt;code&gt;AdminEmailHandler&lt;/code&gt;, the &lt;a href=&quot;email#topic-email-backends&quot;&gt;email backend&lt;/a&gt; that is being used by the handler can be overridden, like this:</source>
          <target state="translated">設定することで &lt;code&gt;email_backend&lt;/code&gt; の引数 &lt;code&gt;AdminEmailHandler&lt;/code&gt; を、&lt;a href=&quot;email#topic-email-backends&quot;&gt;電子メールのバックエンド&lt;/a&gt;ハンドラによって使用されている。このように、上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="c5f540514d2bf110bb1b873c082ed4fb4d5e8add" translate="yes" xml:space="preserve">
          <source>By storing the value in a data attribute, we ensure it&amp;rsquo;s escaped appropriately if we want to use it in a JavaScript context.</source>
          <target state="translated">値をデータ属性に格納することにより、JavaScriptコンテキストで使用する場合に適切にエスケープされます。</target>
        </trans-unit>
        <trans-unit id="60057f3f688d8b06da7a58f3308af4491f7ae488" translate="yes" xml:space="preserve">
          <source>By taking advantage of web browsers&amp;rsquo; caching abilities, you can eliminate network hits entirely for a given file after the initial download.</source>
          <target state="translated">Webブラウザーのキャッシング機能を利用することで、最初のダウンロード後の特定のファイルに対するネットワークヒットを完全に排除できます。</target>
        </trans-unit>
        <trans-unit id="ed287a0e379d778a3eeb942d9ca8ae389a30184d" translate="yes" xml:space="preserve">
          <source>By the time the form&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method is called, all the individual field clean methods will have been run (the previous two sections), so &lt;code&gt;self.cleaned_data&lt;/code&gt; will be populated with any data that has survived so far. So you also need to remember to allow for the fact that the fields you are wanting to validate might not have survived the initial individual field checks.</source>
          <target state="translated">フォームの &lt;code&gt;clean()&lt;/code&gt; メソッドが呼び出されるまでに、個々のフィールドのすべてのcleanメソッドが実行されているため（前の2つのセクション）、 &lt;code&gt;self.cleaned_data&lt;/code&gt; には、これまでに残っているデータが入力されます。したがって、検証したいフィールドが最初の個々のフィールドチェックを完了できなかった可能性があることを考慮に入れておく必要もあります。</target>
        </trans-unit>
        <trans-unit id="cf54b3c3a704ac37d2ee3e37fc7b15c423932c4f" translate="yes" xml:space="preserve">
          <source>By the time you push your code to production, it&amp;rsquo;s hopefully robust, but you can&amp;rsquo;t rule out unexpected errors. Thankfully, Django can capture errors and notify you accordingly.</source>
          <target state="translated">コードを本番環境にプッシュするまでに、コードは堅牢であると期待されますが、予期しないエラーを除外することはできません。ありがたいことに、Djangoはエラーをキャプチャし、それに応じて通知することができます。</target>
        </trans-unit>
        <trans-unit id="21e38ac8e1886700d5dfead1203995c19d9446fc" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;Transform&lt;/code&gt; instead of &lt;code&gt;Lookup&lt;/code&gt; it means we are able to chain further lookups afterwards. So &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; will generate the following SQL:</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; の代わりに &lt;code&gt;Transform&lt;/code&gt; を使用することで、後でさらにルックアップをチェーンできるようになります。したがって、 &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; は次のSQLを生成します。</target>
        </trans-unit>
        <trans-unit id="4a6da94170b6d7247db67e6cac43616cc97fbefb" translate="yes" xml:space="preserve">
          <source>By using a keyword argument to specify the aggregate function, you can control the name of the aggregation value that is returned:</source>
          <target state="translated">キーワード引数を使用して集約関数を指定することで、返される集約値の名前を制御することができます。</target>
        </trans-unit>
        <trans-unit id="d3d38fbdaf2d9c98cd4d59fd5d1c7cd350da8b18" translate="yes" xml:space="preserve">
          <source>By using the same template name as you are inheriting from, &lt;a href=&quot;builtins#std:templatetag-extends&quot;&gt;&lt;code&gt;{% extends %}&lt;/code&gt;&lt;/a&gt; can be used to inherit a template at the same time as overriding it. Combined with &lt;code&gt;{{ block.super }}&lt;/code&gt;, this can be a powerful way to make small customizations. See &lt;a href=&quot;../../howto/overriding-templates#extending-an-overridden-template&quot;&gt;Extending an overridden template&lt;/a&gt; in the &lt;em&gt;Overriding templates&lt;/em&gt; How-to for a full example.</source>
          <target state="translated">継承元と同じテンプレート名を使用することで、&lt;a href=&quot;builtins#std:templatetag-extends&quot;&gt; &lt;code&gt;{% extends %}&lt;/code&gt; &lt;/a&gt;を使用して、テンプレートをオーバーライドすると同時にテンプレートを継承できます。 &lt;code&gt;{{ block.super }}&lt;/code&gt; と組み合わせると、これは小さなカスタマイズを行うための強力な方法になります。参照&lt;a href=&quot;../../howto/overriding-templates#extending-an-overridden-template&quot;&gt;オーバーライドされたテンプレートを拡張&lt;/a&gt;して&lt;em&gt;上書きテンプレート&lt;/em&gt;完全な例についてはどのよう-に。</target>
        </trans-unit>
        <trans-unit id="31f619095dd110fa3a816f8da1850b9188ef840d" translate="yes" xml:space="preserve">
          <source>By way of example, if listing the contents of certain storage backends turns out to be expensive, you might decide not to implement &lt;code&gt;Storage.listdir()&lt;/code&gt;.</source>
          <target state="translated">例として、特定のストレージバックエンドのコンテンツを一覧表示するのに費用がかかることが判明した場合は、 &lt;code&gt;Storage.listdir()&lt;/code&gt; を実装しないことを決定できます。</target>
        </trans-unit>
        <trans-unit id="507169571631561d324c277b834f130fa24c7eaa" translate="yes" xml:space="preserve">
          <source>By way of example, if listing the contents of certain storage backends turns out to be expensive, you might decide not to implement &lt;code&gt;Storage.listdir&lt;/code&gt;.</source>
          <target state="translated">例として、特定のストレージバックエンドの内容を一覧表示するのに &lt;code&gt;Storage.listdir&lt;/code&gt; がかかることが判明した場合は、Storage.listdirを実装しないことを決定できます。</target>
        </trans-unit>
        <trans-unit id="64ce43fd9c6c913bf7d30b60ac1976d42220e456" translate="yes" xml:space="preserve">
          <source>By way of example, suppose you have a model like this:</source>
          <target state="translated">例えば、こんなモデルがあったとします。</target>
        </trans-unit>
        <trans-unit id="d75db2961ab787d0a3b41b3a6b0e65b06693ce81" translate="yes" xml:space="preserve">
          <source>Byteorder Value</source>
          <target state="translated">バイトオーダー値</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="0d741550bd4db8a752d46cf9c9f6951ed99a3357" translate="yes" xml:space="preserve">
          <source>C implementations of Python libraries</source>
          <target state="translated">PythonライブラリのC言語実装</target>
        </trans-unit>
        <trans-unit id="5860ddd6f84a4601d3b785cd1f80dc27ce224e43" translate="yes" xml:space="preserve">
          <source>CGI specification</source>
          <target state="translated">CGI仕様</target>
        </trans-unit>
        <trans-unit id="12fa5fcaba8eae05abcc1e5b1cc620eaf6dc3ada" translate="yes" xml:space="preserve">
          <source>CREATE PROCEDURE</source>
          <target state="translated">CREATE PROCEDURE</target>
        </trans-unit>
        <trans-unit id="738e5f467ba3a4254f467b31bb3c8da33459bfb4" translate="yes" xml:space="preserve">
          <source>CREATE PROCEDURE WITH ADMIN OPTION</source>
          <target state="translated">ADMINオプションを使用したプロセスの作成</target>
        </trans-unit>
        <trans-unit id="bf7598785b07ca70f266afcf7d0a8eb1cf4d0316" translate="yes" xml:space="preserve">
          <source>CREATE SEQUENCE</source>
          <target state="translated">クリエイトシーケンス</target>
        </trans-unit>
        <trans-unit id="66f37c36c9c8b6cca22b6df3d46330385564e152" translate="yes" xml:space="preserve">
          <source>CREATE SEQUENCE WITH ADMIN OPTION</source>
          <target state="translated">ADMINオプションでシーケンスを作成する</target>
        </trans-unit>
        <trans-unit id="1aed7c8bada16418abc44db5943b30cf4691b235" translate="yes" xml:space="preserve">
          <source>CREATE SESSION WITH ADMIN OPTION</source>
          <target state="translated">ADMINオプションでセッションを作成</target>
        </trans-unit>
        <trans-unit id="979ae29e43d609d39c91f43b7d2c9c6f0170c84c" translate="yes" xml:space="preserve">
          <source>CREATE TABLE</source>
          <target state="translated">クリエイトテーブル</target>
        </trans-unit>
        <trans-unit id="f194afde4946790548e145f558322252a26886ac" translate="yes" xml:space="preserve">
          <source>CREATE TABLE WITH ADMIN OPTION</source>
          <target state="translated">CREATE TABLE WITH ADMIN OPTION</target>
        </trans-unit>
        <trans-unit id="eb3911ee759f233a5280c04fb3873a55053eecf0" translate="yes" xml:space="preserve">
          <source>CREATE TABLESPACE</source>
          <target state="translated">CREATE TABLESPACE</target>
        </trans-unit>
        <trans-unit id="cf6418466d171e86053f358e78bdbbeb775f1f4f" translate="yes" xml:space="preserve">
          <source>CREATE TRIGGER</source>
          <target state="translated">CREATE TRIGGER</target>
        </trans-unit>
        <trans-unit id="2a195c132ace2fa09c2eb3a61cf6904ec2099374" translate="yes" xml:space="preserve">
          <source>CREATE TRIGGER WITH ADMIN OPTION</source>
          <target state="translated">ADMINオプションでトリガーを作成する</target>
        </trans-unit>
        <trans-unit id="b9b4f23af8e09b7f85cfa3af0d06b6b261d9ae23" translate="yes" xml:space="preserve">
          <source>CREATE USER</source>
          <target state="translated">クリエイトユーザ</target>
        </trans-unit>
        <trans-unit id="cf9be80b96f1c5890989a051c13fd3642245b655" translate="yes" xml:space="preserve">
          <source>CSRF attacks allow a malicious user to execute actions using the credentials of another user without that user&amp;rsquo;s knowledge or consent.</source>
          <target state="translated">CSRF攻撃により、悪意のあるユーザーは、そのユーザーの知識や同意なしに、別のユーザーの資格情報を使用してアクションを実行できます。</target>
        </trans-unit>
        <trans-unit id="fe8fff30013a75a4ad1868cf3fddb4aedfce3cc2" translate="yes" xml:space="preserve">
          <source>CSRF failures are logged as warnings to the &lt;a href=&quot;../topics/logging#django-security-logger&quot;&gt;django.security.csrf&lt;/a&gt; logger.</source>
          <target state="translated">CSRFの失敗は、&lt;a href=&quot;../topics/logging#django-security-logger&quot;&gt;django.security.csrf&lt;/a&gt;ロガーへの警告としてログに記録されます。</target>
        </trans-unit>
        <trans-unit id="86dad4bef1b0b5153b2a3801ffbf7c3d5383891d" translate="yes" xml:space="preserve">
          <source>CSRF protection middleware</source>
          <target state="translated">CSRF保護ミドルウェア</target>
        </trans-unit>
        <trans-unit id="183d7d8966580df0e0abbeda4c15dbaa378da0d2" translate="yes" xml:space="preserve">
          <source>CSRF protection should be disabled for just a few views</source>
          <target state="translated">CSRFの保護を無効にすべきなのは、ほんの少しの見解</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="acbda0fec2fe82da82e9502df8ab30f811055067" translate="yes" xml:space="preserve">
          <source>Cache arguments</source>
          <target state="translated">キャッシュ引数</target>
        </trans-unit>
        <trans-unit id="f548eceb4063ed512d026604f0cc6f4b79062cfc" translate="yes" xml:space="preserve">
          <source>Cache backends that implement their own culling strategy (i.e., the &lt;code&gt;locmem&lt;/code&gt;, &lt;code&gt;filesystem&lt;/code&gt; and &lt;code&gt;database&lt;/code&gt; backends) will honor the following options:</source>
          <target state="translated">独自のカリング戦略を実装するキャッシュバックエンド（つまり、 &lt;code&gt;locmem&lt;/code&gt; 、 &lt;code&gt;filesystem&lt;/code&gt; 、および &lt;code&gt;database&lt;/code&gt; バックエンド）は、次のオプションを受け入れます。</target>
        </trans-unit>
        <trans-unit id="2519e25400cafc71c27e79ee0ed8da52808ca8aa" translate="yes" xml:space="preserve">
          <source>Cache file attributes wherever possible. Since files may be stored in remote storage systems, retrieving them may cost extra time, or even money, that isn&amp;rsquo;t always necessary. Once a file is retrieved to obtain some data about its content, cache as much of that data as possible to reduce the number of times the file must be retrieved on subsequent calls for that information.</source>
          <target state="translated">可能な限りファイル属性をキャッシュします。ファイルはリモートストレージシステムに保存される可能性があるため、ファイルを取得するには余分な時間や費用がかかる可能性がありますが、必ずしもそうである必要はありません。ファイルの内容に関するデータを取得するためにファイルを取得したら、その情報の後続の呼び出しでファイルを取得する必要がある回数を減らすために、可能な限り多くのデータをキャッシュします。</target>
        </trans-unit>
        <trans-unit id="0724677c8042ae24853c8d056aea6ae292f3236f" translate="yes" xml:space="preserve">
          <source>Cache key prefixing</source>
          <target state="translated">キャッシュキーのプレフィックス</target>
        </trans-unit>
        <trans-unit id="568bcc7904029d3838fc97291bee4ee2e3c4513f" translate="yes" xml:space="preserve">
          <source>Cache key transformation</source>
          <target state="translated">キャッシュキーの変換</target>
        </trans-unit>
        <trans-unit id="9cabdad5f5926a49b8e27093eb56c22e273fb879" translate="yes" xml:space="preserve">
          <source>Cache key warnings</source>
          <target state="translated">キャッシュキーの警告</target>
        </trans-unit>
        <trans-unit id="89bfbc1460a5989b3328d1d08cb4d7bcd07309ed" translate="yes" xml:space="preserve">
          <source>Cache keys also include the active &lt;a href=&quot;i18n/index#term-language-code&quot;&gt;language&lt;/a&gt; when &lt;a href=&quot;../ref/settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; and the &lt;a href=&quot;i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt; when &lt;a href=&quot;../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">キャッシュキーもアクティブ含める&lt;a href=&quot;i18n/index#term-language-code&quot;&gt;言語&lt;/a&gt;&lt;a href=&quot;../ref/settings#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; が&lt;/a&gt;に設定されている &lt;code&gt;True&lt;/code&gt; と&lt;a href=&quot;i18n/timezones#default-current-time-zone&quot;&gt;現在のタイムゾーン&lt;/a&gt;とき&lt;a href=&quot;../ref/settings#std:setting-USE_TZ&quot;&gt; &lt;code&gt;USE_TZ&lt;/code&gt; が&lt;/a&gt;に設定されている &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75ea82be45e2ca1387bce6858d4a1e2278852e0f" translate="yes" xml:space="preserve">
          <source>Cache middleware</source>
          <target state="translated">キャッシュミドルウェア</target>
        </trans-unit>
        <trans-unit id="e8253b0803e92653e15146f8e14ecfbff84d772d" translate="yes" xml:space="preserve">
          <source>Cache servers often have weak authentication. Make sure they only accept connections from your application servers.</source>
          <target state="translated">キャッシュサーバは、認証が弱いことが多いです。アプリケーションサーバからの接続のみを受け付けていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="8062cdd3cff6bd5b28b528db9eb86faf48b14891" translate="yes" xml:space="preserve">
          <source>Cache versioning</source>
          <target state="translated">キャッシュのバージョニング</target>
        </trans-unit>
        <trans-unit id="26d1d6e68e2efb43040f5747213a436e201ddbd2" translate="yes" xml:space="preserve">
          <source>Caches</source>
          <target state="translated">Caches</target>
        </trans-unit>
        <trans-unit id="da8a8950b5b6043f06280dde3cc19998826fb05d" translate="yes" xml:space="preserve">
          <source>Caches a complex variable under a simpler name. This is useful when accessing an &amp;ldquo;expensive&amp;rdquo; method (e.g., one that hits the database) multiple times.</source>
          <target state="translated">複雑な変数をより単純な名前でキャッシュします。これは、「高価な」メソッド（データベースにアクセスするメソッドなど）に複数回アクセスする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e20488b0aaf8b9a76e5105c29315d29b9fb58149" translate="yes" xml:space="preserve">
          <source>Caches are not cleared after each test, and running &amp;ldquo;manage.py test fooapp&amp;rdquo; can insert data from the tests into the cache of a live system if you run your tests in production because, unlike databases, a separate &amp;ldquo;test cache&amp;rdquo; is not used. This behavior &lt;a href=&quot;https://code.djangoproject.com/ticket/11505&quot;&gt;may change&lt;/a&gt; in the future.</source>
          <target state="translated">キャッシュは各テスト後にクリアされず、「manage.py test fooapp」を実行すると、本番環境でテストを実行すると、テストからライブシステムのキャッシュにデータを挿入できます。これは、データベースとは異なり、個別の「テストキャッシュ」が中古。この動作&lt;a href=&quot;https://code.djangoproject.com/ticket/11505&quot;&gt;は&lt;/a&gt;将来変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="98c1f85303f94c49ac9e6485f441d2186f4c7ea1" translate="yes" xml:space="preserve">
          <source>Caching and &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="translated">キャッシュと &lt;code&gt;QuerySet&lt;/code&gt; S</target>
        </trans-unit>
        <trans-unit id="158fd07571b063993f6c4fc9390a346d5fc0c3c9" translate="yes" xml:space="preserve">
          <source>Caching the current &lt;code&gt;Site&lt;/code&gt; object</source>
          <target state="translated">現在の &lt;code&gt;Site&lt;/code&gt; オブジェクトのキャッシュ</target>
        </trans-unit>
        <trans-unit id="1f61e98f71915665b89d8779a5f8ed0542e38090" translate="yes" xml:space="preserve">
          <source>Calculates a partition for each of the rows in the frame clause, distributing numbers as evenly as possible between 1 and &lt;code&gt;num_buckets&lt;/code&gt;. If the rows don&amp;rsquo;t divide evenly into a number of buckets, one or more buckets will be represented more frequently.</source>
          <target state="translated">frame句の各行のパーティションを計算し、1から &lt;code&gt;num_buckets&lt;/code&gt; まで可能な限り均等に数値を分配します。行がいくつかのバケットに均等に分割されない場合、1つ以上のバケットがより頻繁に表されます。</target>
        </trans-unit>
        <trans-unit id="9f4718dace470988d41014b2afc03b8d10dda878" translate="yes" xml:space="preserve">
          <source>Calculates the cumulative distribution of a value within a window or partition. The cumulative distribution is defined as the number of rows preceding or peered with the current row divided by the total number of rows in the frame.</source>
          <target state="translated">ウィンドウまたはパーティション内の値の累積分布を計算します。累積分布は、現在の行に先行する行、または現在の行とピアリングされている行の数をフレーム内の総行数で割ったものとして定義されます。</target>
        </trans-unit>
        <trans-unit id="4b029943b59c24a8bfb62e9149a4a3c1fe2238e8" translate="yes" xml:space="preserve">
          <source>Calculates the leading value in a given &lt;a href=&quot;expressions#window-frames&quot;&gt;frame&lt;/a&gt;. Both &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; are evaluated with respect to the current row.</source>
          <target state="translated">指定された&lt;a href=&quot;expressions#window-frames&quot;&gt;フレームの&lt;/a&gt;先行値を計算します。現在の行に関して、 &lt;code&gt;offset&lt;/code&gt; と &lt;code&gt;default&lt;/code&gt; 両方が評価されます。</target>
        </trans-unit>
        <trans-unit id="a4a72235190570bfe5057824d4e0f99c75bd3ff4" translate="yes" xml:space="preserve">
          <source>Calculates the value offset by &lt;code&gt;offset&lt;/code&gt;, and if no row exists there, returns &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">offsetで &lt;code&gt;offset&lt;/code&gt; 値を計算し、そこに行が存在しない場合は &lt;code&gt;default&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dc6751bd6532a841494c31d2cb271a6c23434bcc" translate="yes" xml:space="preserve">
          <source>Calculation</source>
          <target state="translated">Calculation</target>
        </trans-unit>
        <trans-unit id="7549f08dfa01f0c01fbea6def77fa44bb0e854b6" translate="yes" xml:space="preserve">
          <source>Calcutta: 15,000,000</source>
          <target state="translated">カルカッタ 15,000,000</target>
        </trans-unit>
        <trans-unit id="04bfbc1bb89e39593bc448d487ef9451871d2d5b" translate="yes" xml:space="preserve">
          <source>Call the &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s &lt;code&gt;render()&lt;/code&gt; method with a &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; to &amp;ldquo;fill&amp;rdquo; the template:</source>
          <target state="translated">&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;オブジェクトの &lt;code&gt;render()&lt;/code&gt; メソッドを&lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;呼び出し、テンプレートを「塗りつぶし」ます。</target>
        </trans-unit>
        <trans-unit id="f1e01593380533bdbbb15c2c90eaee274eae0fe2" translate="yes" xml:space="preserve">
          <source>Callable variables are slightly more complex than variables which only require straight lookups. Here are some things to keep in mind:</source>
          <target state="translated">呼び出し可能な変数は、直線的なルックアップのみを必要とする変数よりもやや複雑です。ここでは、覚えておくべきことをいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="7ce46ba0adc2acc2f59611a6bb874f9af1ff6a7b" translate="yes" xml:space="preserve">
          <source>Callback signaling that a new file upload is starting. This is called before any data has been fed to any upload handlers.</source>
          <target state="translated">新しいファイルのアップロードが開始されたことを知らせるコールバック。これは、アップロードハンドラにデータが供給される前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fa90af3954b4ce6550e00d167939f1aac96f5800" translate="yes" xml:space="preserve">
          <source>Callback signaling that the entire upload (all files) has completed.</source>
          <target state="translated">全体のアップロード(すべてのファイル)が完了したことを示すコールバック。</target>
        </trans-unit>
        <trans-unit id="4661219d7bd825b0ab199b164d8f3f95684ead45" translate="yes" xml:space="preserve">
          <source>Callback to add elements inside the root feed element (&lt;code&gt;feed&lt;/code&gt;/&lt;code&gt;channel&lt;/code&gt;). &lt;code&gt;handler&lt;/code&gt; is an &lt;a href=&quot;https://docs.python.org/3/library/xml.sax.utils.html#xml.sax.saxutils.XMLGenerator&quot;&gt;&lt;code&gt;XMLGenerator&lt;/code&gt;&lt;/a&gt; from Python&amp;rsquo;s built-in SAX library; you&amp;rsquo;ll call methods on it to add to the XML document in process.</source>
          <target state="translated">ルートフィード要素（ &lt;code&gt;feed&lt;/code&gt; / &lt;code&gt;channel&lt;/code&gt; ）内に要素を追加するためのコールバック。 &lt;code&gt;handler&lt;/code&gt; は、Pythonの組み込みSAXライブラリーの&lt;a href=&quot;https://docs.python.org/3/library/xml.sax.utils.html#xml.sax.saxutils.XMLGenerator&quot;&gt; &lt;code&gt;XMLGenerator&lt;/code&gt; &lt;/a&gt;です。その上でメソッドを呼び出して、処理中のXMLドキュメントに追加します。</target>
        </trans-unit>
        <trans-unit id="7b265d6c16bf2b98f52dcc9cf31ad13945b3698f" translate="yes" xml:space="preserve">
          <source>Callback to add elements to each item (&lt;code&gt;item&lt;/code&gt;/&lt;code&gt;entry&lt;/code&gt;) element. &lt;code&gt;handler&lt;/code&gt; and &lt;code&gt;item&lt;/code&gt; are as above.</source>
          <target state="translated">各アイテム（ &lt;code&gt;item&lt;/code&gt; / &lt;code&gt;entry&lt;/code&gt; ）要素に要素を追加するためのコールバック。 &lt;code&gt;handler&lt;/code&gt; と &lt;code&gt;item&lt;/code&gt; は上記のとおりです。</target>
        </trans-unit>
        <trans-unit id="e02e8544c5084a0867d6ab3bc3adf5ec30f430f8" translate="yes" xml:space="preserve">
          <source>Callbacks are not run until autocommit is restored on the connection following the commit (because otherwise any queries done in a callback would open an implicit transaction, preventing the connection from going back into autocommit mode).</source>
          <target state="translated">コミット後の接続でオートコミットが回復するまでは、コールバックは実行されません (そうしないと、コールバックで実行されたクエリが暗黙のトランザクションを開いてしまい、接続がオートコミットモードに戻ることができなくなるからです)。</target>
        </trans-unit>
        <trans-unit id="2533e53842ba6e01a2778c3617175b7973804acc" translate="yes" xml:space="preserve">
          <source>Called by &lt;code&gt;Storage.open()&lt;/code&gt;, this is the actual mechanism the storage class uses to open the file. This must return a &lt;code&gt;File&lt;/code&gt; object, though in most cases, you&amp;rsquo;ll want to return some subclass here that implements logic specific to the backend storage system.</source>
          <target state="translated">&lt;code&gt;Storage.open()&lt;/code&gt; によって呼び出されます。これは、ストレージクラスがファイルを開くために使用する実際のメカニズムです。これは &lt;code&gt;File&lt;/code&gt; オブジェクトを返す必要がありますが、ほとんどの場合、バックエンドストレージシステムに固有のロジックを実装するサブクラスをここで返す必要があります。</target>
        </trans-unit>
        <trans-unit id="04d0f1fdb5703c461487c46188c40aa995a81d75" translate="yes" xml:space="preserve">
          <source>Called by &lt;code&gt;Storage.save()&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; will already have gone through &lt;code&gt;get_valid_name()&lt;/code&gt; and &lt;code&gt;get_available_name()&lt;/code&gt;, and the &lt;code&gt;content&lt;/code&gt; will be a &lt;code&gt;File&lt;/code&gt; object itself.</source>
          <target state="translated">&lt;code&gt;Storage.save()&lt;/code&gt; によって呼び出されます。 &lt;code&gt;name&lt;/code&gt; すでに通過しただろう &lt;code&gt;get_valid_name()&lt;/code&gt; と &lt;code&gt;get_available_name()&lt;/code&gt; 、および &lt;code&gt;content&lt;/code&gt; なり &lt;code&gt;File&lt;/code&gt; オブジェクトそのもの。</target>
        </trans-unit>
        <trans-unit id="2a199450f538b19c8c1bfacc04eac998316aa504" translate="yes" xml:space="preserve">
          <source>Called when a file has finished uploading.</source>
          <target state="translated">ファイルのアップロードが終了したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2b314529747427ae5357f76f444f113cd8fe54d8" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#django.core.serializers.get_serializer&quot;&gt;&lt;code&gt;get_serializer()&lt;/code&gt;&lt;/a&gt; with an unknown &lt;a href=&quot;#serialization-formats&quot;&gt;format&lt;/a&gt; will raise a &lt;code&gt;django.core.serializers.SerializerDoesNotExist&lt;/code&gt; exception.</source>
          <target state="translated">呼び出し&lt;a href=&quot;#django.core.serializers.get_serializer&quot;&gt; &lt;code&gt;get_serializer()&lt;/code&gt; &lt;/a&gt;不明で&lt;a href=&quot;#serialization-formats&quot;&gt;フォーマットすると&lt;/a&gt;発生します &lt;code&gt;django.core.serializers.SerializerDoesNotExist&lt;/code&gt; の例外を。</target>
        </trans-unit>
        <trans-unit id="9062822e071ddc2708cc58d82fd89d3807fde227" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt;&lt;code&gt;only()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;defer()&lt;/code&gt;&lt;/a&gt; after &lt;code&gt;values()&lt;/code&gt; doesn&amp;rsquo;t make sense, so doing so will raise a &lt;code&gt;NotImplementedError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;values()&lt;/code&gt; &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;defer()&lt;/code&gt; &lt;/a&gt;後に&lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt; &lt;code&gt;only()&lt;/code&gt; &lt;/a&gt;とdefer（）を呼び出しても意味がありません。 &lt;code&gt;NotImplementedError&lt;/code&gt; 、NotImplementedErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="02d0df0a4f1af9ea5bd3a90c44e0b557512c6bd4" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt;&lt;code&gt;only()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;defer()&lt;/code&gt;&lt;/a&gt; after &lt;code&gt;values()&lt;/code&gt; doesn&amp;rsquo;t make sense, so doing so will raise a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;values()&lt;/code&gt; &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt; &lt;code&gt;defer()&lt;/code&gt; &lt;/a&gt;後に&lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt; &lt;code&gt;only()&lt;/code&gt; &lt;/a&gt;とdefer（）を呼び出すことは意味がないため、そうすると &lt;code&gt;TypeError&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="225255f5717a035a5dbfcccbd85b49715a6d8371" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;DeserializedObject.save()&lt;/code&gt; saves the object to the database.</source>
          <target state="translated">&lt;code&gt;DeserializedObject.save()&lt;/code&gt; を呼び出すと、オブジェクトがデータベースに保存されます。</target>
        </trans-unit>
        <trans-unit id="8d5f536dc82f70cbd8c3fdea012232b4c2e39d8c" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;django.setup()&lt;/code&gt; is required for &amp;ldquo;standalone&amp;rdquo; Django usage</source>
          <target state="translated">「スタンドアロン」のDjangoを使用するには、 &lt;code&gt;django.setup()&lt;/code&gt; を呼び出す必要があります</target>
        </trans-unit>
        <trans-unit id="5be7efc33d36e293c98563570bb597c994ff2a3f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;expression.as_sql()&lt;/code&gt; is usually incorrect - instead &lt;code&gt;compiler.compile(expression)&lt;/code&gt; should be used. The &lt;code&gt;compiler.compile()&lt;/code&gt; method will take care of calling vendor-specific methods of the expression.</source>
          <target state="translated">通常、 &lt;code&gt;expression.as_sql()&lt;/code&gt; の呼び出しは正しくありません。代わりに、 &lt;code&gt;compiler.compile(expression)&lt;/code&gt; を使用する必要があります。 &lt;code&gt;compiler.compile()&lt;/code&gt; メソッドは、式のベンダー固有のメソッドを呼び出すの世話をします。</target>
        </trans-unit>
        <trans-unit id="48d16ea3138b13ed44461144ff40a1a3f1265f71" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;save_m2m()&lt;/code&gt; is only required if you use &lt;code&gt;save(commit=False)&lt;/code&gt;. When you use a &lt;code&gt;save()&lt;/code&gt; on a form, all data &amp;ndash; including many-to-many data &amp;ndash; is saved without the need for any additional method calls. For example:</source>
          <target state="translated">&lt;code&gt;save_m2m()&lt;/code&gt; の呼び出しは、 &lt;code&gt;save(commit=False)&lt;/code&gt; を使用する場合にのみ必要です。フォームで &lt;code&gt;save()&lt;/code&gt; を使用すると、追加のメソッド呼び出しを必要とせずに、多対多のデー​​タを含むすべてのデータが保存されます。例えば：</target>
        </trans-unit>
        <trans-unit id="3b5b54109f1437cbeae3a6e4feec88fde3db559f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;transaction.rollback()&lt;/code&gt; rolls back the entire transaction. Any uncommitted database operations will be lost. In this example, the changes made by &lt;code&gt;a.save()&lt;/code&gt; would be lost, even though that operation raised no error itself.</source>
          <target state="translated">&lt;code&gt;transaction.rollback()&lt;/code&gt; を呼び出すと、トランザクション全体がロールバックされます。コミットされていないデータベース操作はすべて失われます。この例では、 &lt;code&gt;a.save()&lt;/code&gt; によって行われた変更は失われますが、その操作自体ではエラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="6cd97bce2d410cc2be245b31441f9fd4522c9ee5" translate="yes" xml:space="preserve">
          <source>Calling a management command in your code</source>
          <target state="translated">コード内の管理コマンドの呼び出し</target>
        </trans-unit>
        <trans-unit id="80e08c5db744ae893282c27182426ac3bf421bd0" translate="yes" xml:space="preserve">
          <source>Calling custom &lt;code&gt;QuerySet&lt;/code&gt; methods from the manager</source>
          <target state="translated">マネージャーからカスタム &lt;code&gt;QuerySet&lt;/code&gt; メソッドを呼び出す</target>
        </trans-unit>
        <trans-unit id="290de1b2f9412ab31c14212febd8764907d2a18e" translate="yes" xml:space="preserve">
          <source>Calling none() will create a queryset that never returns any objects and no query will be executed when accessing the results. A qs.none() queryset is an instance of &lt;code&gt;EmptyQuerySet&lt;/code&gt;.</source>
          <target state="translated">none（）を呼び出すと、オブジェクトを返さないクエリセットが作成され、結果にアクセスするときにクエリが実行されません。qs.none（）クエリセットは、 &lt;code&gt;EmptyQuerySet&lt;/code&gt; のインスタンスです。</target>
        </trans-unit>
        <trans-unit id="50d377f3ae921804afcb89876990ce854705a425" translate="yes" xml:space="preserve">
          <source>Calling stored procedures</source>
          <target state="translated">ストアドプロシージャの呼び出し</target>
        </trans-unit>
        <trans-unit id="70fbb8db9b9b7c8797750d7521b26b6012ce94ea" translate="yes" xml:space="preserve">
          <source>Calling this function with the value &lt;code&gt;'de'&lt;/code&gt; will give you &lt;code&gt;&quot;Willkommen&quot;&lt;/code&gt;, regardless of &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; and language set by middleware.</source>
          <target state="translated">この関数を値 &lt;code&gt;'de'&lt;/code&gt; で呼び出すと、&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt;やミドルウェアによって設定された言語に関係なく、 &lt;code&gt;&quot;Willkommen&quot;&lt;/code&gt; が得られます。</target>
        </trans-unit>
        <trans-unit id="d5c856e91fc9af620e934945645127d4ce162a82" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.get_template_names&quot;&gt;&lt;code&gt;get_template_names()&lt;/code&gt;&lt;/a&gt; to obtain the list of template names that will be searched looking for an existent template.</source>
          <target state="translated">&lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.get_template_names&quot;&gt; &lt;code&gt;get_template_names()&lt;/code&gt; &lt;/a&gt;を呼び出して、既存のテンプレートを探すために検索されるテンプレート名のリストを取得します。</target>
        </trans-unit>
        <trans-unit id="205a3fba438d8b924883caa5e99258ff7619b586" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form&quot;&gt;&lt;code&gt;get_form()&lt;/code&gt;&lt;/a&gt; and adds the result to the context data with the name &amp;lsquo;form&amp;rsquo;.</source>
          <target state="translated">&lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form&quot;&gt; &lt;code&gt;get_form()&lt;/code&gt; &lt;/a&gt;を呼び出し、結果を 'form'という名前のコンテキストデータに追加します。</target>
        </trans-unit>
        <trans-unit id="657e6b5c293522ca2427e0c652cc653af1a624f3" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; on a given model manager, but it raises &lt;a href=&quot;views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; instead of the model&amp;rsquo;s &lt;a href=&quot;../../ref/models/class#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">コールは、&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; は&lt;/a&gt;与えられたモデル管理上、それが提起&lt;a href=&quot;views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; を&lt;/a&gt;代わりに、モデルのの&lt;a href=&quot;../../ref/models/class#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;例外。</target>
        </trans-unit>
        <trans-unit id="bc917339e3060f94eb46e37a73db6fe792c06394" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; on a given model manager, but it raises &lt;a href=&quot;views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; instead of the model&amp;rsquo;s &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">コールは、&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; は&lt;/a&gt;与えられたモデル管理上、それが提起&lt;a href=&quot;views#django.http.Http404&quot;&gt; &lt;code&gt;Http404&lt;/code&gt; を&lt;/a&gt;代わりに、モデルのの&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.DoesNotExist&quot;&gt; &lt;code&gt;DoesNotExist&lt;/code&gt; &lt;/a&gt;例外。</target>
        </trans-unit>
        <trans-unit id="c3817fa4274b76c50a1ea835fa0948e0dd429206" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.get_response(request)&lt;/code&gt; to get the response from later middleware and the view.</source>
          <target state="translated">&lt;code&gt;self.get_response(request)&lt;/code&gt; を呼び出して、後のミドルウェアとビューから応答を取得します。</target>
        </trans-unit>
        <trans-unit id="f2b7bfc7fca2285243c57ea1c4e38419161e5e62" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.process_request(request)&lt;/code&gt; (if defined).</source>
          <target state="translated">&lt;code&gt;self.process_request(request)&lt;/code&gt; を呼び出します（定義されている場合）。</target>
        </trans-unit>
        <trans-unit id="8c4ba89b2a8ada97487233f628173f811b841f5f" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.process_response(request, response)&lt;/code&gt; (if defined).</source>
          <target state="translated">&lt;code&gt;self.process_response(request, response)&lt;/code&gt; 呼び出します（定義されている場合）。</target>
        </trans-unit>
        <trans-unit id="6edbc64e696501a6c087d5e657ab2e11f291d4a2" translate="yes" xml:space="preserve">
          <source>Calls a database stored procedure with the given name. A sequence (&lt;code&gt;params&lt;/code&gt;) or dictionary (&lt;code&gt;kparams&lt;/code&gt;) of input parameters may be provided. Most databases don&amp;rsquo;t support &lt;code&gt;kparams&lt;/code&gt;. Of Django&amp;rsquo;s built-in backends, only Oracle supports it.</source>
          <target state="translated">指定された名前でデータベースストアドプロシージャを呼び出します。入力パラメーターのシーケンス（ &lt;code&gt;params&lt;/code&gt; ）または辞書（ &lt;code&gt;kparams&lt;/code&gt; ）を提供できます。ほとんどのデータベースは &lt;code&gt;kparams&lt;/code&gt; をサポートしていません。Djangoの組み込みバックエンドのうち、Oracleのみがサポートしています。</target>
        </trans-unit>
        <trans-unit id="c86a8c1f3d2b9fe28ced9ca98ed7331cd00f6222" translate="yes" xml:space="preserve">
          <source>Calls to update can also use &lt;a href=&quot;../../ref/models/expressions#django.db.models.F&quot;&gt;&lt;code&gt;F expressions&lt;/code&gt;&lt;/a&gt; to update one field based on the value of another field in the model. This is especially useful for incrementing counters based upon their current value. For example, to increment the pingback count for every entry in the blog:</source>
          <target state="translated">updateの呼び出しでは、&lt;a href=&quot;../../ref/models/expressions#django.db.models.F&quot;&gt; &lt;code&gt;F expressions&lt;/code&gt; &lt;/a&gt;を使用して、モデル内の別のフィールドの値に基づいて1つのフィールドを更新することもできます。これは、現在の値に基づいてカウンターをインクリメントする場合に特に便利です。たとえば、ブログのすべてのエントリのpingbackカウントを増やすには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="1377b4153726db706d088e89d58fe38d78a1c4ae" translate="yes" xml:space="preserve">
          <source>Can also be used as a decorator.</source>
          <target state="translated">デコレーターとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="dc8c496228d2e8578cd02ba4adc44a8b32d30105" translate="yes" xml:space="preserve">
          <source>Can be called multiple times on a single string.</source>
          <target state="translated">1つの文字列に対して複数回呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="9003c0b87f6d4ccd4ebc6feacd9ab4291bb8431a" translate="yes" xml:space="preserve">
          <source>Can be run as a cron job or directly to clean out expired sessions.</source>
          <target state="translated">クローンジョブとして、または直接実行して、期限切れのセッションをクリーンアウトすることができます。</target>
        </trans-unit>
        <trans-unit id="10da83c08c4a1138fdc03b07a422c389e67b0765" translate="yes" xml:space="preserve">
          <source>Can use the &lt;a href=&quot;contrib/admin/admindocs#admindocs-bookmarklets&quot;&gt;admindocs bookmarklets&lt;/a&gt; even if not logged in as a staff user.</source>
          <target state="translated">スタッフユーザーとしてログインしていなくても、&lt;a href=&quot;contrib/admin/admindocs#admindocs-bookmarklets&quot;&gt;admindocsブックマークレットを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="c987df332492e001e2d3789c0251ae7f9c7305c4" translate="yes" xml:space="preserve">
          <source>Can validate that non-empty file data has been bound to the form.</source>
          <target state="translated">空でないファイルデータがフォームにバインドされていることを検証できます。</target>
        </trans-unit>
        <trans-unit id="0b52c8f82215da5093e92eb4e9e72651d008a682" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t find GDAL library</source>
          <target state="translated">GDALライブラリが見つかりません</target>
        </trans-unit>
        <trans-unit id="4bde5803bc78173238d1a3e76ed6f0a8e16dc840" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t find GEOS library</source>
          <target state="translated">GEOSライブラリが見つかりません</target>
        </trans-unit>
        <trans-unit id="d54f11270dd47daf2e0f21c920b9fe97d8d6f53c" translate="yes" xml:space="preserve">
          <source>Capitalizes the first character of the value. If the first character is not a letter, this filter has no effect.</source>
          <target state="translated">値の最初の文字を大文字にします。最初の文字が文字でない場合、このフィルタは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="643aff8a663babf6c7c6871f88058cc7f7ec318b" translate="yes" xml:space="preserve">
          <source>Captured parameters</source>
          <target state="translated">キャプチャされたパラメータ</target>
        </trans-unit>
        <trans-unit id="ce5fc41408434f90f41bd5bf5ff6e7346c566867" translate="yes" xml:space="preserve">
          <source>Captured values can optionally include a converter type. For example, use &lt;code&gt;&amp;lt;int:name&amp;gt;&lt;/code&gt; to capture an integer parameter. If a converter isn&amp;rsquo;t included, any string, excluding a &lt;code&gt;/&lt;/code&gt; character, is matched.</source>
          <target state="translated">キャプチャされた値には、オプションでコンバータータイプを含めることができます。たとえば、 &lt;code&gt;&amp;lt;int:name&amp;gt;&lt;/code&gt; を使用して整数パラメーターをキャプチャします。コンバータが含まれていない場合、 &lt;code&gt;/&lt;/code&gt; 文字を除くすべての文字列が一致します。</target>
        </trans-unit>
        <trans-unit id="83b89a53170cf2cbb22f8d7105e72efe86e419b2" translate="yes" xml:space="preserve">
          <source>Cartographic Projections library</source>
          <target state="translated">地図投影ライブラリ</target>
        </trans-unit>
        <trans-unit id="effff00e7a692538669e4cf735c030e54ad8e6b3" translate="yes" xml:space="preserve">
          <source>Cascade deletes. Django emulates the behavior of the SQL constraint ON DELETE CASCADE and also deletes the object containing the ForeignKey.</source>
          <target state="translated">カスケード削除 Django は SQL 制約の ON DELETE CASCADE の動作をエミュレートし、ForeignKey を含むオブジェクトも削除します。</target>
        </trans-unit>
        <trans-unit id="9254c4bba00f5ff69304a7921d3118fcbac7e6b8" translate="yes" xml:space="preserve">
          <source>Case</source>
          <target state="translated">Case</target>
        </trans-unit>
        <trans-unit id="e7507a4a6841ce2fda611ea4fccd77d38161b45b" translate="yes" xml:space="preserve">
          <source>Case-insensitive containment test.</source>
          <target state="translated">ケース感受性のない封じ込め試験。</target>
        </trans-unit>
        <trans-unit id="1f9313b4678937a757cac748207904bc5de19606" translate="yes" xml:space="preserve">
          <source>Case-insensitive ends-with.</source>
          <target state="translated">大文字小文字を区別しない ends-with.</target>
        </trans-unit>
        <trans-unit id="0d0362149611a5ec0998f155187f49291496bc75" translate="yes" xml:space="preserve">
          <source>Case-insensitive exact match. If the value provided for comparison is &lt;code&gt;None&lt;/code&gt;, it will be interpreted as an SQL &lt;code&gt;NULL&lt;/code&gt; (see &lt;a href=&quot;#std:fieldlookup-isnull&quot;&gt;&lt;code&gt;isnull&lt;/code&gt;&lt;/a&gt; for more details).</source>
          <target state="translated">大文字と小文字を区別しない完全一致。比較のために提供された値が &lt;code&gt;None&lt;/code&gt; の場合、SQL &lt;code&gt;NULL&lt;/code&gt; として解釈されます（詳細については、&lt;a href=&quot;#std:fieldlookup-isnull&quot;&gt; &lt;code&gt;isnull&lt;/code&gt; &lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="7634f69eb8a3e4eff4652ba8684a95370739003e" translate="yes" xml:space="preserve">
          <source>Case-insensitive regular expression match.</source>
          <target state="translated">大文字小文字を区別しない正規表現一致。</target>
        </trans-unit>
        <trans-unit id="77942bdff97295d7b996673b8cbd912e09e179d7" translate="yes" xml:space="preserve">
          <source>Case-insensitive starts-with.</source>
          <target state="translated">大文字小文字を区別しない start-with。</target>
        </trans-unit>
        <trans-unit id="b7e7ffa2290b08368430a3bb66eb35d1d5525705" translate="yes" xml:space="preserve">
          <source>Case-sensitive containment test.</source>
          <target state="translated">ケースセンシティブな封じ込め試験。</target>
        </trans-unit>
        <trans-unit id="0f39d0d9dc8009adf803b95a8e052064e59c3422" translate="yes" xml:space="preserve">
          <source>Case-sensitive containment test. For example:</source>
          <target state="translated">大文字小文字を区別する封じ込めテスト。例えば</target>
        </trans-unit>
        <trans-unit id="5a13d13f6844d51bd79413f5aa96642a027f98e9" translate="yes" xml:space="preserve">
          <source>Case-sensitive ends-with.</source>
          <target state="translated">大文字小文字を区別するエンドウィズ。</target>
        </trans-unit>
        <trans-unit id="8db5fb150086d944b8dccae77af44e814044f1b0" translate="yes" xml:space="preserve">
          <source>Case-sensitive regular expression match.</source>
          <target state="translated">大文字小文字を区別して正規表現にマッチします。</target>
        </trans-unit>
        <trans-unit id="2810f50cccc5f39df11fe3f8ce275a8e25efc745" translate="yes" xml:space="preserve">
          <source>Case-sensitive starts-with.</source>
          <target state="translated">大文字小文字を区別する start-with。</target>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="32b9ed6be0f1d41f1c5b1a9ba236378547abd75d" translate="yes" xml:space="preserve">
          <source>Caveats on Oracle</source>
          <target state="translated">オラクルに関する注意事項</target>
        </trans-unit>
        <trans-unit id="698b2aa739a5adac275a1b1c1b14ec3c80549813" translate="yes" xml:space="preserve">
          <source>Centers the value in a field of a given width.</source>
          <target state="translated">指定した幅のフィールド内の値をセンタリングします。</target>
        </trans-unit>
        <trans-unit id="9cab1c70b10c72b3dc8fc42049f8e0e2303757a9" translate="yes" xml:space="preserve">
          <source>Centimeter</source>
          <target state="translated">Centimeter</target>
        </trans-unit>
        <trans-unit id="fb989a28d9c65cf81739440b610163e2621f4326" translate="yes" xml:space="preserve">
          <source>Certain Django components also have their own caching functionality; these are discussed below in the sections related to those components.</source>
          <target state="translated">一部の Django コンポーネントは独自のキャッシュ機能を持っています。</target>
        </trans-unit>
        <trans-unit id="b2bcd6122f6e191d31074ecd7a8a7b69b7db9820" translate="yes" xml:space="preserve">
          <source>Certain applications provide custom tag and filter libraries. To access them in a template, ensure the application is in &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; (we&amp;rsquo;d add &lt;code&gt;'django.contrib.humanize'&lt;/code&gt; for this example), and then use the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; tag in a template:</source>
          <target state="translated">特定のアプリケーションは、カスタムタグとフィルターライブラリを提供します。テンプレートでそれらにアクセスするには、アプリケーションが&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; にある&lt;/a&gt;ことを確認し（この例では &lt;code&gt;'django.contrib.humanize'&lt;/code&gt; を追加します）、テンプレートで&lt;a href=&quot;builtins#std:templatetag-load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;タグを使用します。</target>
        </trans-unit>
        <trans-unit id="b81f5be1e9b8b7d9f762cf7cce4a566d424505a6" translate="yes" xml:space="preserve">
          <source>Certain expressions may not be supported</source>
          <target state="translated">一部の表現はサポートされていない場合があります。</target>
        </trans-unit>
        <trans-unit id="4f38d5c6c041c5c47ed04016ae3c0206a26684e8" translate="yes" xml:space="preserve">
          <source>Certain key parts of Django are not able to operate safely in an async environment, as they have global state that is not coroutine-aware. These parts of Django are classified as &amp;ldquo;async-unsafe&amp;rdquo;, and are protected from execution in an async environment. The ORM is the main example, but there are other parts that are also protected in this way.</source>
          <target state="translated">Djangoの特定の重要な部分は、コルーチンに対応していないグローバル状態であるため、非同期環境で安全に動作できません。Djangoのこれらの部分は「async-unsafe」として分類され、非同期環境での実行から保護されています。ORMが主な例ですが、この方法で保護されている他の部分もあります。</target>
        </trans-unit>
        <trans-unit id="c2a227e8810bacd3c29b9501fefb520e6c0cab4e" translate="yes" xml:space="preserve">
          <source>Certain key parts of Django are not able to operate safely in an asynchronous environment, as they have global state that is not coroutine-aware. These parts of Django are classified as &amp;ldquo;async-unsafe&amp;rdquo;, and are protected from execution in an asynchronous environment. The ORM is the main example, but there are other parts that are also protected in this way.</source>
          <target state="translated">Djangoの特定の重要な部分は、コルーチンに対応していないグローバル状態を持っているため、非同期環境では安全に動作できません。Djangoのこれらの部分は「非同期で安全でない」として分類され、非同期環境での実行から保護されています。ORMが主な例ですが、この方法でも保護される他の部分があります。</target>
        </trans-unit>
        <trans-unit id="e401d2cd529d75cfa2ea6150c3b9e4c5df0518b6" translate="yes" xml:space="preserve">
          <source>Certain views can have unusual requirements that mean they don&amp;rsquo;t fit the normal pattern envisaged here. A number of utilities can be useful in these situations. The scenarios they might be needed in are described in the following section.</source>
          <target state="translated">特定のビューには、ここで想定されている通常のパターンに適合しないという異常な要件がある場合があります。このような状況では、いくつかのユーティリティが役立ちます。それらが必要となるシナリオについては、次のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="d81f3692d7cd234a9b91ed4f4582f15dd8290d89" translate="yes" xml:space="preserve">
          <source>Chain</source>
          <target state="translated">Chain</target>
        </trans-unit>
        <trans-unit id="3c6171c87113422a3f3429146ba5738e8a314ad4" translate="yes" xml:space="preserve">
          <source>Chain (Benoit)</source>
          <target state="translated">チェーン(ブノワ</target>
        </trans-unit>
        <trans-unit id="0d7397da9f2bf5c7f48571b6f5af8fbd61d90308" translate="yes" xml:space="preserve">
          <source>Chain (Sears)</source>
          <target state="translated">チェーン(シアーズ</target>
        </trans-unit>
        <trans-unit id="ce02335f52c1bd189c9e1d30838e8a4f3330eb39" translate="yes" xml:space="preserve">
          <source>Chaining &lt;code&gt;prefetch_related&lt;/code&gt; calls will accumulate the lookups that are prefetched. To clear any &lt;code&gt;prefetch_related&lt;/code&gt; behavior, pass &lt;code&gt;None&lt;/code&gt; as a parameter:</source>
          <target state="translated">&lt;code&gt;prefetch_related&lt;/code&gt; 呼び出しをチェーンすると、プリフェッチされたルックアップが蓄積されます。 &lt;code&gt;prefetch_related&lt;/code&gt; の動作をクリアするには、パラメーターとして &lt;code&gt;None&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="9fe8b203548770ce24b9b586fd1e9fc34d9754e0" translate="yes" xml:space="preserve">
          <source>Chaining &lt;code&gt;select_related&lt;/code&gt; calls works in a similar way to other methods - that is that &lt;code&gt;select_related('foo', 'bar')&lt;/code&gt; is equivalent to &lt;code&gt;select_related('foo').select_related('bar')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;select_related&lt;/code&gt; 呼び出しの連鎖は他のメソッドと同様に機能します。つまり、 &lt;code&gt;select_related('foo', 'bar')&lt;/code&gt; は &lt;code&gt;select_related('foo').select_related('bar')&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="e179f06aac87666a61d48cc71ea619e11edbe952" translate="yes" xml:space="preserve">
          <source>Chaining filters</source>
          <target state="translated">チェイニングフィルタ</target>
        </trans-unit>
        <trans-unit id="64fbd995d3b6b156ee26ae3c03e6516434c34c12" translate="yes" xml:space="preserve">
          <source>Change</source>
          <target state="translated">Change</target>
        </trans-unit>
        <trans-unit id="978219bf935dfccbf5fcff03ad903965b477b672" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;unique=True&lt;/code&gt; to &lt;code&gt;null=True&lt;/code&gt; &amp;ndash; this will create the intermediary null field and defer creating the unique constraint until we&amp;rsquo;ve populated unique values on all the rows.</source>
          <target state="translated">&lt;code&gt;unique=True&lt;/code&gt; を &lt;code&gt;null=True&lt;/code&gt; = Trueに変更します。これにより、中間のnullフィールドが作成され、すべての行に一意の値が入力されるまで、一意の制約の作成が延期されます。</target>
        </trans-unit>
        <trans-unit id="bda4cbf2941e0428aa185caa42229a5ca77c5913" translate="yes" xml:space="preserve">
          <source>Change the &amp;ldquo;Date published&amp;rdquo; by clicking the &amp;ldquo;Today&amp;rdquo; and &amp;ldquo;Now&amp;rdquo; shortcuts. Then click &amp;ldquo;Save and continue editing.&amp;rdquo; Then click &amp;ldquo;History&amp;rdquo; in the upper right. You&amp;rsquo;ll see a page listing all changes made to this object via the Django admin, with the timestamp and username of the person who made the change:</source>
          <target state="translated">「今日」と「今」のショートカットをクリックして、「公開日」を変更します。次に、[保存して編集を続行]をクリックします。次に、右上の「履歴」をクリックします。Django adminを介してこのオブジェクトに加えられたすべての変更をリストするページが表示され、変更を行った人のタイムスタンプとユーザー名が示されます。</target>
        </trans-unit>
        <trans-unit id="b028b85847edd8e58a1c36a90e6542beee48073f" translate="yes" xml:space="preserve">
          <source>Change your models (in &lt;code&gt;models.py&lt;/code&gt;).</source>
          <target state="translated">モデルを変更します（ &lt;code&gt;models.py&lt;/code&gt; 内）。</target>
        </trans-unit>
        <trans-unit id="0b35461f9a953bb315d61cee0ccd323035ee757e" translate="yes" xml:space="preserve">
          <source>Changed in Django 2.2.15:</source>
          <target state="translated">Django 2.2.15で変更。</target>
        </trans-unit>
        <trans-unit id="a1f3b40b52c856af8cb400c2497f03119720801a" translate="yes" xml:space="preserve">
          <source>Changed in Django 2.2:</source>
          <target state="translated">Django 2.2で変更。</target>
        </trans-unit>
        <trans-unit id="9703c03e2e64f0540e022cd7df2d556655339d53" translate="yes" xml:space="preserve">
          <source>Changed in Django 3.0:</source>
          <target state="translated">Django 3.0で変更。</target>
        </trans-unit>
        <trans-unit id="87c9584a0e87806d1764b0d62b40ba7c1096d688" translate="yes" xml:space="preserve">
          <source>Changed in Django 3.1:</source>
          <target state="translated">Django 3.1で変更。</target>
        </trans-unit>
        <trans-unit id="8ba236a483f165d2bfc9b10507d610b6bde6a8ba" translate="yes" xml:space="preserve">
          <source>Changelist</source>
          <target state="translated">Changelist</target>
        </trans-unit>
        <trans-unit id="2d4ed11e371947075aa36af2d8a347a98dbd1273" translate="yes" xml:space="preserve">
          <source>Changes a field&amp;rsquo;s name (and, unless &lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt;&lt;code&gt;db_column&lt;/code&gt;&lt;/a&gt; is set, its column name).</source>
          <target state="translated">フィールドの名前を変更します（&lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt; &lt;code&gt;db_column&lt;/code&gt; &lt;/a&gt;が設定されていない限り、その列名）。</target>
        </trans-unit>
        <trans-unit id="d0ea6d097b2dc289bac2a18b72d49cac8196d782" translate="yes" xml:space="preserve">
          <source>Changes a model&amp;rsquo;s &lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt;&lt;code&gt;index_together&lt;/code&gt;&lt;/a&gt; value; this will add or remove indexes from the model&amp;rsquo;s table until they match the new value.</source>
          <target state="translated">モデルの&lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt; &lt;code&gt;index_together&lt;/code&gt; &lt;/a&gt;値を変更します。これにより、新しい値に一致するまで、モデルのテーブルにインデックスが追加または削除されます。</target>
        </trans-unit>
        <trans-unit id="74a4e9438f880955e4130b40bee89afb35895b44" translate="yes" xml:space="preserve">
          <source>Changes a model&amp;rsquo;s &lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; value; this will add or remove unique constraints from the model&amp;rsquo;s table until they match the new value.</source>
          <target state="translated">モデルの&lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt; &lt;code&gt;unique_together&lt;/code&gt; &lt;/a&gt;値を変更します。これにより、新しい値に一致するまで、モデルのテーブルに一意の制約が追加または削除されます。</target>
        </trans-unit>
        <trans-unit id="7c816ec7a7c05ade3722606532f92e7248dafee3" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s set of custom indexes (the &lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt;&lt;code&gt;index_together&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="translated">モデルのカスタムインデックスのセットを変更します（ &lt;code&gt;Meta&lt;/code&gt; サブクラスの&lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt; &lt;code&gt;index_together&lt;/code&gt; &lt;/a&gt;オプション）。</target>
        </trans-unit>
        <trans-unit id="6612a11308cfb1dd512fbc343dcdd0ddbb3c811a" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s set of unique constraints (the &lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="translated">モデルの一意制約のセットを変更します（ &lt;code&gt;Meta&lt;/code&gt; サブクラスの&lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt; &lt;code&gt;unique_together&lt;/code&gt; &lt;/a&gt;オプション）。</target>
        </trans-unit>
        <trans-unit id="5a972fd27237d2164984b1ba9831df10c0e460b8" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s table name (the &lt;a href=&quot;models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="translated">モデルのテーブル名を変更します（ &lt;code&gt;Meta&lt;/code&gt; サブクラスの&lt;a href=&quot;models/options#django.db.models.Options.db_table&quot;&gt; &lt;code&gt;db_table&lt;/code&gt; &lt;/a&gt;オプション）。</target>
        </trans-unit>
        <trans-unit id="db747fb627126a359d7def659dd0352e3919bb1e" translate="yes" xml:space="preserve">
          <source>Changing &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; after you&amp;rsquo;ve created database tables is significantly more difficult since it affects foreign keys and many-to-many relationships, for example.</source>
          <target state="translated">データベーステーブルの作成後に&lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt; &lt;code&gt;AUTH_USER_MODEL&lt;/code&gt; &lt;/a&gt;を変更することは、外部キーや多対多の関係などに影響を与えるため、非常に困難です。</target>
        </trans-unit>
        <trans-unit id="8fb40c96d620b0b220afe31f4b0710bbe53eca0b" translate="yes" xml:space="preserve">
          <source>Changing &lt;code&gt;order_with_respect_to&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;order_with_respect_to&lt;/code&gt; の変更</target>
        </trans-unit>
        <trans-unit id="a31b060968ebb63b9a2eb0e70b06cabc63363ef1" translate="yes" xml:space="preserve">
          <source>Changing a &lt;code&gt;ManyToManyField&lt;/code&gt; to use a &lt;code&gt;through&lt;/code&gt; model</source>
          <target state="translated">&lt;code&gt;through&lt;/code&gt; モデルを使用するように &lt;code&gt;ManyToManyField&lt;/code&gt; を変更する</target>
        </trans-unit>
        <trans-unit id="de980bdcf73cbcdbd24cf453e0709c2a81363f4c" translate="yes" xml:space="preserve">
          <source>Changing a custom field&amp;rsquo;s base class</source>
          <target state="translated">カスタムフィールドの基本クラスを変更する</target>
        </trans-unit>
        <trans-unit id="4fe72aecd4476f1f731e064961c53e87770d63b2" translate="yes" xml:space="preserve">
          <source>Changing a user&amp;rsquo;s password will log out all their sessions. See &lt;a href=&quot;#session-invalidation-on-password-change&quot;&gt;Session invalidation on password change&lt;/a&gt; for details.</source>
          <target state="translated">ユーザーのパスワードを変更すると、すべてのセッションがログアウトされます。詳細については&lt;a href=&quot;#session-invalidation-on-password-change&quot;&gt;、パスワード変更時のセッションの無効化&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c0d2465f16195c825347a20b5ab68dd74cc9fd0f" translate="yes" xml:space="preserve">
          <source>Changing an unmanaged model to managed</source>
          <target state="translated">アンマネージドモデルからマネージドモデルへの変更</target>
        </trans-unit>
        <trans-unit id="60e1198ccb053cf32349285143b660dfd72bf502" translate="yes" xml:space="preserve">
          <source>Changing passwords</source>
          <target state="translated">パスワードの変更</target>
        </trans-unit>
        <trans-unit id="ea7a10ab54d73f30ec0da8d0087667e12fa6515d" translate="yes" xml:space="preserve">
          <source>Changing the connection time zone changes how datetimes are read from and written to the database.</source>
          <target state="translated">接続のタイムゾーンを変更すると、データベースからのデータタイムの読み書きの方法が変わります。</target>
        </trans-unit>
        <trans-unit id="d648a588beccf21b2a5977a3f45276864409d1dd" translate="yes" xml:space="preserve">
          <source>Changing the default JSON encoder</source>
          <target state="translated">デフォルトのJSONエンコーダを変更する</target>
        </trans-unit>
        <trans-unit id="59297060cd88ff50798e1200607bda6e3c7a64e9" translate="yes" xml:space="preserve">
          <source>Changing the form</source>
          <target state="translated">フォームの変更</target>
        </trans-unit>
        <trans-unit id="e4edcda30ad2cbc66ef258692394cc6897559ba3" translate="yes" xml:space="preserve">
          <source>Changing the minimum recorded level per-request</source>
          <target state="translated">リクエストごとの最小記録レベルの変更</target>
        </trans-unit>
        <trans-unit id="27863b4c17612256cbade1c8a5daae517bb6c0b2" translate="yes" xml:space="preserve">
          <source>Changing the port</source>
          <target state="translated">ポートの変更</target>
        </trans-unit>
        <trans-unit id="1ff5487fda52cb16cd2f83bcd748322df3795601" translate="yes" xml:space="preserve">
          <source>Changing the queryset</source>
          <target state="translated">クエリーセットの変更</target>
        </trans-unit>
        <trans-unit id="b5b19472e5b1f82485078fea4153a94cb28bc023" translate="yes" xml:space="preserve">
          <source>Changing the search configuration</source>
          <target state="translated">検索設定を変更する</target>
        </trans-unit>
        <trans-unit id="128e55b0e9498129809151adeb2a56e0ded3a0be" translate="yes" xml:space="preserve">
          <source>Changing to a custom user model mid-project</source>
          <target state="translated">プロジェクトの途中でカスタムユーザーモデルへの変更</target>
        </trans-unit>
        <trans-unit id="5058f50eb235013db83478b4c09b9d85b50f9654" translate="yes" xml:space="preserve">
          <source>Changing upload handler behavior</source>
          <target state="translated">アップロードハンドラの動作を変更する</target>
        </trans-unit>
        <trans-unit id="a13cc96b75836987bfdbff1a81233adc38420cd1" translate="yes" xml:space="preserve">
          <source>Character fields</source>
          <target state="translated">文字フィールド</target>
        </trans-unit>
        <trans-unit id="99957d5920a0c408d447b33739a6c587076d7c4c" translate="yes" xml:space="preserve">
          <source>Cheat sheet</source>
          <target state="translated">チートシート</target>
        </trans-unit>
        <trans-unit id="9bb80438ab17d883d1ed6cdd6f67a81ed2e82a1e" translate="yes" xml:space="preserve">
          <source>Check first if SQLite is compiled with the &lt;a href=&quot;https://www.sqlite.org/rtree.html&quot;&gt;R*Tree module&lt;/a&gt;. Run the sqlite3 command line interface and enter the following query:</source>
          <target state="translated">SQLiteが&lt;a href=&quot;https://www.sqlite.org/rtree.html&quot;&gt;R * Treeモジュールで&lt;/a&gt;コンパイルされているかどうかを最初に確認します。sqlite3コマンドラインインターフェースを実行し、次のクエリを入力します。</target>
        </trans-unit>
        <trans-unit id="b8664c61a6d5af3170e77d9a9fefed1000d60d34" translate="yes" xml:space="preserve">
          <source>Check for duplicate flatpage URLs.</source>
          <target state="translated">フラットページのURLが重複していないかチェックします。</target>
        </trans-unit>
        <trans-unit id="3bc89e15ccb324f637c49e8c84907a45925b079f" translate="yes" xml:space="preserve">
          <source>Check if a value has changed from the last iteration of a loop.</source>
          <target state="translated">ループの最後の繰り返しから値が変更されたかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="6bde1461372979f085dc0503dc0a112a68fa7282" translate="yes" xml:space="preserve">
          <source>Check out Django&amp;rsquo;s main development branch like so:</source>
          <target state="translated">Djangoのメインの開発ブランチを次のようにチェックしてください。</target>
        </trans-unit>
        <trans-unit id="f04b3c8da9374a5791c1d92a606c401c41193076" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;../serialization&quot;&gt;Serializing Django objects&lt;/a&gt; documentation for more information on how to correctly transform Django models and querysets into JSON.</source>
          <target state="translated">DjangoモデルとクエリセットをJSONに正しく変換する方法の詳細については、&lt;a href=&quot;../serialization&quot;&gt;Djangoオブジェクト&lt;/a&gt;のシリアライズのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="e9380d6f6c73e9fa1638d5cd5ae16b2c81814c9e" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/distributions/&quot;&gt;distribution specific notes&lt;/a&gt; to see if your platform/distribution provides official Django packages/installers. Distribution-provided packages will typically allow for automatic installation of dependencies and supported upgrade paths; however, these packages will rarely contain the latest release of Django.</source>
          <target state="translated">チェック&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/distributions/&quot;&gt;配布特定のノートを&lt;/a&gt;お使いのプラットフォーム/ディストリビューションは、公式のDjangoパッケージ/インストーラを提供してかどうかを確認します。ディストリビューションが提供するパッケージでは、通常、依存関係とサポートされているアップグレードパスの自動インストールが可能です。ただし、これらのパッケージにDjangoの最新リリースが含まれることはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="f2754bbff02a7b148c9d7546a5991862992469cc" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/distributions/&quot;&gt;distribution specific notes&lt;/a&gt; to see if your platform/distribution provides official Django packages/installers. Distribution-provided packages will typically allow for automatic installation of dependencies and supported upgrade paths; however, these packages will rarely contain the latest release of Django.</source>
          <target state="translated">&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/misc/distributions/&quot;&gt;ディストリビューション固有のメモ&lt;/a&gt;をチェックして、プラットフォーム/ディストリビューションが公式のDjangoパッケージ/インストーラーを提供しているかどうかを確認してください。配布提供のパッケージでは、通常、依存関係とサポートされているアップグレードパスを自動的にインストールできます。ただし、これらのパッケージにDjangoの最新リリースが含まれることはめったにありません。</target>
        </trans-unit>
        <trans-unit id="7b228c9603969f0a96a2bfe0a7bd2082b55a65af" translate="yes" xml:space="preserve">
          <source>Checking for the required number of arguments, etc., has already been done by the time our function is called, so we don&amp;rsquo;t need to do that.</source>
          <target state="translated">必要な引数の数などのチェックは、関数が呼び出される時点ですでに行われているため、その必要はありません。</target>
        </trans-unit>
        <trans-unit id="7733f2b8fa6f97ff9ec622e9349eda3ee076841c" translate="yes" xml:space="preserve">
          <source>Checking if the field data has changed</source>
          <target state="translated">フィールドデータが変更されたかどうかの確認</target>
        </trans-unit>
        <trans-unit id="22079bec1c73c4523422968d5a18eab2a6a42e29" translate="yes" xml:space="preserve">
          <source>Checking that a callable &lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt;&lt;code&gt;raises a certain exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出し可能オブジェクト&lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt; &lt;code&gt;raises a certain exception&lt;/code&gt; &lt;/a&gt;ことを確認します。</target>
        </trans-unit>
        <trans-unit id="8e666f124c7e64aa56434fa6bd2fed4502f7c542" translate="yes" xml:space="preserve">
          <source>Checking that a callable &lt;a href=&quot;#django.test.SimpleTestCase.assertWarnsMessage&quot;&gt;&lt;code&gt;triggers a certain warning&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出し可能オブジェクト&lt;a href=&quot;#django.test.SimpleTestCase.assertWarnsMessage&quot;&gt; &lt;code&gt;triggers a certain warning&lt;/code&gt; &lt;/a&gt;ことを確認します。</target>
        </trans-unit>
        <trans-unit id="7125d8c0ad65ef9bccd1cbc0d286e7dbfa9f28b0" translate="yes" xml:space="preserve">
          <source>Checking which form data has changed</source>
          <target state="translated">どのフォームデータが変更されたかの確認</target>
        </trans-unit>
        <trans-unit id="ab9b712b6c4ea74deeb6970fa4db291756f30ffc" translate="yes" xml:space="preserve">
          <source>Checks can be triggered explicitly via the &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; command. Checks are triggered implicitly before most commands, including &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;. For performance reasons, checks are not run as part of the WSGI stack that is used in deployment. If you need to run system checks on your deployment server, trigger them explicitly using &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">チェックは、&lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;コマンドを使用して明示的にトリガーできます。チェックは、&lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt; &lt;code&gt;runserver&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;を含むほとんどのコマンドの前に暗黙的にトリガーされます。パフォーマンス上の理由から、展開で使用されるWSGIスタックの一部としてチェックは実行されません。デプロイメントサーバーでシステムチェックを実行する必要がある場合は、&lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;を使用して明示的にトリガーします。</target>
        </trans-unit>
        <trans-unit id="9835dee24c04098e686b60c1c7515fa889dcbbcf" translate="yes" xml:space="preserve">
          <source>Checks deferrable database constraints at the end of each test.</source>
          <target state="translated">各テストの最後に、遅延可能なデータベース制約をチェックします。</target>
        </trans-unit>
        <trans-unit id="384145617d037279a5df2a22a564a2b7db5ab02c" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;value&lt;/code&gt; was signed less than &lt;code&gt;max_age&lt;/code&gt; seconds ago, otherwise raises &lt;code&gt;SignatureExpired&lt;/code&gt;. The &lt;code&gt;max_age&lt;/code&gt; parameter can accept an integer or a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;datetime.timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; が &lt;code&gt;max_age&lt;/code&gt; 秒前に署名されたかどうかをチェックし、そうでない場合は &lt;code&gt;SignatureExpired&lt;/code&gt; を発生させます。 &lt;code&gt;max_age&lt;/code&gt; ののパラメータは、整数または受け入れることができる&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;datetime.timedelta&lt;/code&gt; の&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f9127410ac9fb01c7fdd9f1334829066a7cd7a78" translate="yes" xml:space="preserve">
          <source>Checks its own rendered contents against its previous state and only displays the content if it has changed. For example, this displays a list of days, only displaying the month if it changes:</source>
          <target state="translated">レンダリングされた内容を以前の状態と照らし合わせてチェックし、変更があった場合にのみ内容を表示します。例えば、これは日のリストを表示し、変更があった場合は月だけを表示します。</target>
        </trans-unit>
        <trans-unit id="80225fb6301c03594549c53729c7642fc6a6f51b" translate="yes" xml:space="preserve">
          <source>Checks to see if the given spatial reference is valid, if not an exception will be raised.</source>
          <target state="translated">与えられた空間参照が有効かどうかをチェックし、有効でない場合は例外が発生します。</target>
        </trans-unit>
        <trans-unit id="72b374afc96e757e6e2a31fcb267590bb38fa939" translate="yes" xml:space="preserve">
          <source>Checks whether an application with the given name exists in the registry. &lt;code&gt;app_name&lt;/code&gt; is the full name of the app, e.g. &lt;code&gt;'django.contrib.admin'&lt;/code&gt;.</source>
          <target state="translated">指定された名前のアプリケーションがレジストリに存在するかどうかを確認します。 &lt;code&gt;app_name&lt;/code&gt; はアプリの完全な名前です（例： &lt;code&gt;'django.contrib.admin'&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="5cc62e66b338709aefc667cb29a3043e09cfe052" translate="yes" xml:space="preserve">
          <source>Checks whether there is a global language file for the given language code (e.g. &amp;lsquo;fr&amp;rsquo;, &amp;lsquo;pt_BR&amp;rsquo;). This is used to decide whether a user-provided language is available.</source>
          <target state="translated">指定された言語コード（たとえば、「fr」、「pt_BR」）のグローバル言語ファイルがあるかどうかを確認します。これは、ユーザーが指定した言語を使用できるかどうかを決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="44266bb61b2d032bb13f445f6e03021d4e83fa22" translate="yes" xml:space="preserve">
          <source>Chicago: 7,000,000</source>
          <target state="translated">シカゴ:7,000,000,000</target>
        </trans-unit>
        <trans-unit id="5996882c70257eb82d8a4bc0e2a61f7768540178" translate="yes" xml:space="preserve">
          <source>Choose &lt;code&gt;memory_cost&lt;/code&gt; to be the KiB of memory you can spare.</source>
          <target state="translated">スペアできるメモリのKiBになるように &lt;code&gt;memory_cost&lt;/code&gt; を選択します。</target>
        </trans-unit>
        <trans-unit id="1c9ec0a34dcb893c5c2bc08c1df83fe4ef574db1" translate="yes" xml:space="preserve">
          <source>Choose &lt;code&gt;parallelism&lt;/code&gt; to be the number of threads you can spare computing the hash.</source>
          <target state="translated">ハッシュを計算する余裕のあるスレッドの数になるように &lt;code&gt;parallelism&lt;/code&gt; を選択します。</target>
        </trans-unit>
        <trans-unit id="e2f88b4b283c432bab61dfe12fb72d23f6e082dd" translate="yes" xml:space="preserve">
          <source>Choosing a name for your app</source>
          <target state="translated">アプリの名前を選ぶ</target>
        </trans-unit>
        <trans-unit id="bba2aad3491667b89109b80cd83a4d44b2507dfa" translate="yes" xml:space="preserve">
          <source>Choosing an appropriate SRID for your model is an important decision that the developer should consider carefully. The SRID is an integer specifier that corresponds to the projection system that will be used to interpret the data in the spatial database. &lt;a href=&quot;#fnsrid&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; Projection systems give the context to the coordinates that specify a location. Although the details of &lt;a href=&quot;https://en.wikipedia.org/wiki/Geodesy&quot;&gt;geodesy&lt;/a&gt; are beyond the scope of this documentation, the general problem is that the earth is spherical and representations of the earth (e.g., paper maps, Web maps) are not.</source>
          <target state="translated">モデルに適切なSRIDを選択することは、開発者が注意深く検討する必要がある重要な決定です。SRIDは、空間データベースのデータを解釈するために使用される投影システムに対応する整数指定子です。&lt;a href=&quot;#fnsrid&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;投影システムは、場所を指定する座標にコンテキストを提供します。&lt;a href=&quot;https://en.wikipedia.org/wiki/Geodesy&quot;&gt;測地学&lt;/a&gt;の詳細はこのドキュメントの範囲を超えていますが、一般的な問題は、地球は球形であり、地球の表現（たとえば、紙の地図、Webマップ）は球形ではないということです。</target>
        </trans-unit>
        <trans-unit id="fc76dbb40513db48ba2a74315571cc7cfd36629b" translate="yes" xml:space="preserve">
          <source>Choosing between &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;QuerySet.filter()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; と &lt;code&gt;QuerySet.filter()&lt;/code&gt; のどちらかを選択する</target>
        </trans-unit>
        <trans-unit id="b4c2a6a459b482dba9ac2e1abe53f471939a3cc5" translate="yes" xml:space="preserve">
          <source>Chrome 4.1+</source>
          <target state="translated">クローム4.1以上</target>
        </trans-unit>
        <trans-unit id="dd6692bb58d9c44d5350d7632ea1fbe7e5f7c485" translate="yes" xml:space="preserve">
          <source>Clarke&amp;rsquo;s Foot</source>
          <target state="translated">クラークの足</target>
        </trans-unit>
        <trans-unit id="1484fef9b4abc05c0979965e3ea49d9ea6b34ba4" translate="yes" xml:space="preserve">
          <source>Clarke&amp;rsquo;s link</source>
          <target state="translated">クラークのリンク</target>
        </trans-unit>
        <trans-unit id="dae2ba46cfe4af8b889075e7a1960f5189a765cf" translate="yes" xml:space="preserve">
          <source>Class method that returns an instance of &lt;a href=&quot;../../topics/db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; with a copy of the &lt;code&gt;QuerySet&lt;/code&gt;&amp;rsquo;s methods. See &lt;a href=&quot;../../topics/db/managers#create-manager-with-queryset-methods&quot;&gt;Creating a manager with QuerySet methods&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;QuerySet&lt;/code&gt; のメソッドのコピーを含む&lt;a href=&quot;../../topics/db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; の&lt;/a&gt;インスタンスを返すクラスメソッド。詳細については&lt;a href=&quot;../../topics/db/managers#create-manager-with-queryset-methods&quot;&gt;、QuerySetメソッド&lt;/a&gt;を使用したマネージャーの作成を参照してください。</target>
        </trans-unit>
        <trans-unit id="d3586c1c64a914d530f0b0442a85112f3759cde5" translate="yes" xml:space="preserve">
          <source>Class-based generic views - flattened index</source>
          <target state="translated">クラスベースの汎用ビュー-フラット化されたインデックス</target>
        </trans-unit>
        <trans-unit id="9913e499f783b1e205ead17714ccb61c43398bb9" translate="yes" xml:space="preserve">
          <source>Class-based generic views were created with the same objective as function-based generic views, to make view development easier. However, the way the solution is implemented, through the use of mixins, provides a toolkit that results in class-based generic views being more extensible and flexible than their function-based counterparts.</source>
          <target state="translated">クラスベースのジェネリック・ビューは、関数ベースのジェネリック・ビューと同じ目的で作成され、ビューの開発を容易にします。しかし、このソリューションの実装方法では、ミックスインを使用することで、クラスベースのジェネリックビューが関数ベースのものよりも拡張性と柔軟性に優れたツールキットを提供しています。</target>
        </trans-unit>
        <trans-unit id="8fdc8cf046fdef508e7b5c3a88652e0095f6155f" translate="yes" xml:space="preserve">
          <source>Class-based views</source>
          <target state="translated">クラスベースのビュー</target>
        </trans-unit>
        <trans-unit id="cb4a4e7b7f57dd45b621369dc0ca0ce23b32c09a" translate="yes" xml:space="preserve">
          <source>Class-based views API reference. For introductory material, see &lt;a href=&quot;../../topics/class-based-views/mixins&quot;&gt;Using mixins with class-based views&lt;/a&gt;.</source>
          <target state="translated">クラスベースのビューAPIリファレンス。入門資料については&lt;a href=&quot;../../topics/class-based-views/mixins&quot;&gt;、クラスベースのビューでのミックスインの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="935b328a33ab7f3fe7d394d5bba191897050ca57" translate="yes" xml:space="preserve">
          <source>Class-based views API reference. For introductory material, see the &lt;a href=&quot;../../topics/class-based-views/index&quot;&gt;Class-based views&lt;/a&gt; topic guide.</source>
          <target state="translated">クラスベースのビューAPIリファレンス。入門資料については、&lt;a href=&quot;../../topics/class-based-views/index&quot;&gt;クラスベースビューの&lt;/a&gt;トピックガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="c09a0fdba70b5b44149adcd6897aa653fb564a5a" translate="yes" xml:space="preserve">
          <source>Class-based views mixins</source>
          <target state="translated">クラスベースのビュー ミキシン</target>
        </trans-unit>
        <trans-unit id="a689200f6a54407a59f2a1448947a87c0f2af763" translate="yes" xml:space="preserve">
          <source>Class-based views provide an alternative way to implement views as Python objects instead of functions. They do not replace function-based views, but have certain differences and advantages when compared to function-based views:</source>
          <target state="translated">クラスベースのビューは、関数の代わりにPythonオブジェクトとしてビューを実装する代替方法を提供します。クラスベースのビューは関数ベースのビューを置き換えるものではありませんが、関数ベースのビューと比較した場合の違いや利点があります。</target>
        </trans-unit>
        <trans-unit id="c1fbe3806fe4fa85be709cd683d3a0ce016bfe3f" translate="yes" xml:space="preserve">
          <source>Cleaning a specific field attribute</source>
          <target state="translated">特定のフィールド属性のクリーニング</target>
        </trans-unit>
        <trans-unit id="e3c15e64e7f592352145ea138a3f45fe5b83a297" translate="yes" xml:space="preserve">
          <source>Cleaning and validating fields that depend on each other</source>
          <target state="translated">互いに依存するフィールドのクリーニングと検証</target>
        </trans-unit>
        <trans-unit id="9871435a7dab83176cbc6b4ea940ec5d9753dc54" translate="yes" xml:space="preserve">
          <source>Cleans and returns a value for use in the widget template. &lt;code&gt;value&lt;/code&gt; isn&amp;rsquo;t guaranteed to be valid input, therefore subclass implementations should program defensively.</source>
          <target state="translated">ウィジェットテンプレートで使用する値を消去して返します。 &lt;code&gt;value&lt;/code&gt; は有効な入力であることが保証されていないため、サブクラスの実装は防御的にプログラムする必要があります。</target>
        </trans-unit>
        <trans-unit id="35e2550a68d3f04ff9456e17a1d332e94ce526ea" translate="yes" xml:space="preserve">
          <source>Clear the existing files before trying to copy or link the original file.</source>
          <target state="translated">元のファイルをコピーしたりリンクしたりする前に、既存のファイルをクリアしてください。</target>
        </trans-unit>
        <trans-unit id="52fce0185a260e1bdf205bebb2f5ca4969dbc5c9" translate="yes" xml:space="preserve">
          <source>Clearing the session store</source>
          <target state="translated">セッションストアのクリア</target>
        </trans-unit>
        <trans-unit id="8871f6cf793cd5b46adb118c7a6bf5094d8c3fc9" translate="yes" xml:space="preserve">
          <source>Clearly, &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; is not the only Python testing framework. While Django doesn&amp;rsquo;t provide explicit support for alternative frameworks, it does provide a way to invoke tests constructed for an alternative framework as if they were normal Django tests.</source>
          <target state="translated">明らかに、&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;が唯一のPythonテストフレームワークではありません。Djangoは代替フレームワークを明示的にサポートしていませんが、代替フレームワーク用に作成されたテストを、通常のDjangoテストのように呼び出す方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="e16b0c294394f27e0ac5749d235078e550604ac2" translate="yes" xml:space="preserve">
          <source>Clearly, having &amp;ldquo;Django administration&amp;rdquo; at the top of each admin page is ridiculous. It&amp;rsquo;s just placeholder text.</source>
          <target state="translated">明らかに、各管理ページの上部に「Django管理」があることはばかげています。これは単なるプレースホルダーテキストです。</target>
        </trans-unit>
        <trans-unit id="7718e31552b0112a1a2ec941c597349546a14c1b" translate="yes" xml:space="preserve">
          <source>Clearly, the power of relational databases lies in relating tables to each other. Django offers ways to define the three most common types of database relationships: many-to-one, many-to-many and one-to-one.</source>
          <target state="translated">明らかに、リレーショナルデータベースの力はテーブル同士の関係性にあります。Django は、多対多、多対多、一対一という 3 つの最も一般的なデータベースのリレーションシップを定義する方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="2e6838b7a69e395c2bf15ebc5a8c592bf3526981" translate="yes" xml:space="preserve">
          <source>Clearly, user-submitted data shouldn&amp;rsquo;t be trusted blindly and inserted directly into your Web pages, because a malicious user could use this kind of hole to do potentially bad things. This type of security exploit is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;Cross Site Scripting&lt;/a&gt; (XSS) attack.</source>
          <target state="translated">明らかに、悪意のあるユーザーがこの種の穴を利用して悪意のある行為を行う可能性があるため、ユーザーが送信したデータを盲目的に信頼してWebページに直接挿入しないでください。このタイプのセキュリティエクスプロイトは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;クロスサイトスクリプティング&lt;/a&gt;（XSS）攻撃と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="cb813cacbd2922039a79ce85d2ae6074cdfcf7c4" translate="yes" xml:space="preserve">
          <source>Clears an internal cache used by &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; to keep track of models for which it has created &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instances. You probably won&amp;rsquo;t ever need to call this method yourself; Django will call it automatically when it&amp;rsquo;s needed.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;が作成した&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt;インスタンスのモデルを追跡するためにContentTypeが使用する内部キャッシュをクリアします。このメソッドを自分で呼び出す必要はおそらくないでしょう。Djangoは必要なときにそれを自動的に呼び出します。</target>
        </trans-unit>
        <trans-unit id="ae2c7de5484059aff894ad9b7e2f035faa95adb5" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Questions&amp;rdquo;. Now you&amp;rsquo;re at the &amp;ldquo;change list&amp;rdquo; page for questions. This page displays all the questions in the database and lets you choose one to change it. There&amp;rsquo;s the &amp;ldquo;What&amp;rsquo;s up?&amp;rdquo; question we created earlier:</source>
          <target state="translated">「質問」をクリックします。これで、質問の「変更リスト」ページが表示されます。このページには、データベース内のすべての質問が表示され、変更する質問を1つ選択できます。「元気？」があります 以前に作成した質問：</target>
        </trans-unit>
        <trans-unit id="71e12a102575e2c837ef35120ea9f6301b62a3aa" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;What&amp;rsquo;s up?&amp;rdquo; question to edit it:</source>
          <target state="translated">「元気？」をクリックします それを編集するための質問：</target>
        </trans-unit>
        <trans-unit id="b164ea79f51a3226a2f1ba2d64c19601a36e89fb" translate="yes" xml:space="preserve">
          <source>Clickjacking Protection</source>
          <target state="translated">クリックジャッキングの保護</target>
        </trans-unit>
        <trans-unit id="49e6f9818aff9cfa621bb73a0138b945c072ae28" translate="yes" xml:space="preserve">
          <source>Clickjacking is a type of attack where a malicious site wraps another site in a frame. This attack can result in an unsuspecting user being tricked into performing unintended actions on the target site.</source>
          <target state="translated">クリックジャッキングは、悪意のあるサイトが他のサイトをフレームで包み込む攻撃の一種です。この攻撃により、疑っていないユーザーが騙されてターゲットサイトで意図しないアクションを実行させられる可能性があります。</target>
        </trans-unit>
        <trans-unit id="32111326fd6c48d78974ec40a35a7768a07184d3" translate="yes" xml:space="preserve">
          <source>Clickjacking protection</source>
          <target state="translated">クリックジャッキングの保護</target>
        </trans-unit>
        <trans-unit id="3d764d75fcf6e80a9de83e6bffcae22e86d8a4af" translate="yes" xml:space="preserve">
          <source>Client requests &lt;code&gt;/foo/&lt;/code&gt;.</source>
          <target state="translated">クライアントは &lt;code&gt;/foo/&lt;/code&gt; 要求します。</target>
        </trans-unit>
        <trans-unit id="fcc71b46bf4ac05f5a39c0205973031dc31d9ab1" translate="yes" xml:space="preserve">
          <source>Client sends a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/foo/&lt;/code&gt;, after receiving a 412 response, to retrieve an updated version of the content before updating it.</source>
          <target state="translated">クライアントは、412応答を受信した後、コンテンツの更新前にコンテンツの更新バージョンを取得するために、 &lt;code&gt;GET&lt;/code&gt; 要求を &lt;code&gt;/foo/&lt;/code&gt; に送信します。</target>
        </trans-unit>
        <trans-unit id="f9390959736f66ef4250430fc366308771f97cf5" translate="yes" xml:space="preserve">
          <source>Client sends an HTTP &lt;code&gt;PUT&lt;/code&gt; request to &lt;code&gt;/foo/&lt;/code&gt; to update the resource. It also sends an &lt;code&gt;If-Match: &quot;abcd1234&quot;&lt;/code&gt; header to specify the version it is trying to update.</source>
          <target state="translated">クライアントは、HTTP &lt;code&gt;PUT&lt;/code&gt; リクエストを &lt;code&gt;/foo/&lt;/code&gt; に送信してリソースを更新します。また、更新しようとしているバージョンを指定するために、 &lt;code&gt;If-Match: &quot;abcd1234&quot;&lt;/code&gt; ヘッダーを送信します。</target>
        </trans-unit>
        <trans-unit id="ff4e5bc602307ed4ab1eddecc70e4b7c73dbafb1" translate="yes" xml:space="preserve">
          <source>Client-side caching will save bandwidth and make your site load faster. If you&amp;rsquo;re using ETags (&lt;a href=&quot;../../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt;&lt;code&gt;ConditionalGetMiddleware&lt;/code&gt;&lt;/a&gt;), you&amp;rsquo;re already covered. Otherwise, you can apply &lt;a href=&quot;../conditional-view-processing#conditional-decorators&quot;&gt;conditional decorators&lt;/a&gt;. In the following example, the cache is invalidated whenever you restart your application server:</source>
          <target state="translated">クライアント側のキャッシュにより、帯域幅が節約され、サイトの読み込みが速くなります。ETag（&lt;a href=&quot;../../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt; &lt;code&gt;ConditionalGetMiddleware&lt;/code&gt; &lt;/a&gt;）を使用している場合は、すでにカバーされています。それ以外の場合は、&lt;a href=&quot;../conditional-view-processing#conditional-decorators&quot;&gt;条件付きデコレータ&lt;/a&gt;を適用できます。次の例では、アプリケーションサーバーを再起動するたびにキャッシュが無効になります。</target>
        </trans-unit>
        <trans-unit id="e2c115451ace317c65803db8091eb1e55ebeda50" translate="yes" xml:space="preserve">
          <source>Close the file.</source>
          <target state="translated">ファイルを閉じます。</target>
        </trans-unit>
        <trans-unit id="303cb26080c8d48af2e98b700a7a4b017d40ec37" translate="yes" xml:space="preserve">
          <source>Close to the top: it redirects when &lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt;&lt;code&gt;PREPEND_WWW&lt;/code&gt;&lt;/a&gt; are set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">先頭に近い：&lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt; &lt;code&gt;APPEND_SLASH&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt; &lt;code&gt;PREPEND_WWW&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;True&lt;/code&gt; に設定されている場合、リダイレクトします。</target>
        </trans-unit>
        <trans-unit id="4d39b59d4d25e5ad71bcf2d3fb9014da0acb6d75" translate="yes" xml:space="preserve">
          <source>Closing files is especially important when accessing file fields in a loop over a large number of objects. If files are not manually closed after accessing them, the risk of running out of file descriptors may arise. This may lead to the following error:</source>
          <target state="translated">ファイルを閉じることは、多数のオブジェクトにまたがってループでファイルフィールドにアクセスする場合に特に重要です。ファイルにアクセスした後に手動でファイルを閉じないと、ファイル記述子が不足するリスクが発生する可能性があります。そのため、以下のようなエラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="37d9564f3992894a28cf846c405e80eca169463c" translate="yes" xml:space="preserve">
          <source>CockroachDB</source>
          <target state="translated">CockroachDB</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="0fccd67a1d6d2011197e3b86591b54f93278c8e4" translate="yes" xml:space="preserve">
          <source>Code and templates calling &lt;code&gt;get_absolute_url()&lt;/code&gt; should be able to use the result directly without any further processing. You may wish to use the &lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt; function to help with this if you are using strings containing characters outside the ASCII range.</source>
          <target state="translated">&lt;code&gt;get_absolute_url()&lt;/code&gt; を呼び出すコードとテンプレートは、それ以上処理せずに結果を直接使用できる必要があります。ASCII範囲外の文字を含む文字列を使用している場合は、 &lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt; 関数を使用してこれを支援することができます。</target>
        </trans-unit>
        <trans-unit id="8c556450c442de5568b2ca61b59c3676e128741e" translate="yes" xml:space="preserve">
          <source>Code coverage describes how much source code has been tested. It shows which parts of your code are being exercised by tests and which are not. It&amp;rsquo;s an important part of testing applications, so it&amp;rsquo;s strongly recommended to check the coverage of your tests.</source>
          <target state="translated">コードカバレッジは、テストされたソースコードの量を示します。コードのどの部分がテストによって実行され、どの部分が実行されていないかを示します。これはアプリケーションのテストの重要な部分なので、テストの範囲を確認することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="5750b940d6720029e34eee8586abacc31ac208d7" translate="yes" xml:space="preserve">
          <source>Code layout</source>
          <target state="translated">コードレイアウト</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">行動規範</target>
        </trans-unit>
        <trans-unit id="8c7a63bb17eb1d76f8c9b5adc889523e705db12b" translate="yes" xml:space="preserve">
          <source>Collation settings</source>
          <target state="translated">照合設定</target>
        </trans-unit>
        <trans-unit id="6ae48f5d8e796a9281d732e0b6c3ab8ef31d8a1d" translate="yes" xml:space="preserve">
          <source>Collects the static files into &lt;a href=&quot;../settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">静的ファイルを&lt;a href=&quot;../settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; に&lt;/a&gt;収集します。</target>
        </trans-unit>
        <trans-unit id="df066a374fafe32bc0ce1847a456e1e438ce57f1" translate="yes" xml:space="preserve">
          <source>Colors can also be specified by extending a base palette. If you put a palette name in a color specification, all the colors implied by that palette will be loaded. So:</source>
          <target state="translated">色は、ベースとなるパレットを拡張して指定することもできます。色指定の中にパレット名を入れると、そのパレットで指定された色がすべて読み込まれます。ということで、次のようになります。</target>
        </trans-unit>
        <trans-unit id="739dddeb1d3e0548df06fdaf615608f23f48ac27" translate="yes" xml:space="preserve">
          <source>Combined querysets must use the same model.</source>
          <target state="translated">結合されたクエリセットは、同じモデルを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b28b1879e8268f5a29264171deb92278bb15ce9" translate="yes" xml:space="preserve">
          <source>Combines a given template with a given context dictionary and returns an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object with that rendered text.</source>
          <target state="translated">特定のテンプレートを特定のコンテキストディクショナリと組み合わせ、レンダリングされたテキストを含む&lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="0bf88bd402a2a3c10adade912df67db04d6a14f8" translate="yes" xml:space="preserve">
          <source>Combines two &lt;code&gt;QuerySet&lt;/code&gt;s using the SQL &lt;code&gt;AND&lt;/code&gt; operator.</source>
          <target state="translated">SQL &lt;code&gt;AND&lt;/code&gt; 演算子を使用して2つの &lt;code&gt;QuerySet&lt;/code&gt; を結合します。</target>
        </trans-unit>
        <trans-unit id="86c57c30c1d0f3c3cdabf58605f794fdbe31d85d" translate="yes" xml:space="preserve">
          <source>Combines two &lt;code&gt;QuerySet&lt;/code&gt;s using the SQL &lt;code&gt;OR&lt;/code&gt; operator.</source>
          <target state="translated">SQL &lt;code&gt;OR&lt;/code&gt; 演算子を使用して2つの &lt;code&gt;QuerySet&lt;/code&gt; を結合します。</target>
        </trans-unit>
        <trans-unit id="298b25acc069de0daa59c3ef8592b259f9e8263e" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;Media&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;Media&lt;/code&gt; オブジェクトを組み合わせる</target>
        </trans-unit>
        <trans-unit id="4c4cc55611b5c720e74fca17f0c34bce34c1b111" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;Media&lt;/code&gt; objects with assets in a conflicting order results in a &lt;code&gt;MediaOrderConflictWarning&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Media&lt;/code&gt; オブジェクトとアセットを競合する順序で組み合わせると、 &lt;code&gt;MediaOrderConflictWarning&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="bb23073a36f1b9643eacab1ec8054110b00017fc" translate="yes" xml:space="preserve">
          <source>Combining multiple aggregations</source>
          <target state="translated">複数の集合体を組み合わせる</target>
        </trans-unit>
        <trans-unit id="b2868a85184050150c21dc4574f3c38bb0d731e6" translate="yes" xml:space="preserve">
          <source>Combining multiple aggregations with &lt;code&gt;annotate()&lt;/code&gt; will &lt;a href=&quot;https://code.djangoproject.com/ticket/10060&quot;&gt;yield the wrong results&lt;/a&gt; because joins are used instead of subqueries:</source>
          <target state="translated">複数の集計を &lt;code&gt;annotate()&lt;/code&gt; と組み合わせると、サブクエリの代わりに結合が使用されるため&lt;a href=&quot;https://code.djangoproject.com/ticket/10060&quot;&gt;、誤った結果が生じます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f7c0f377739588d036f10407e3dbd3ae092857a" translate="yes" xml:space="preserve">
          <source>Combining transforms and aggregates requires the use of two &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; calls, either explicitly or as keyword arguments to &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;. As above, if the transform has been registered on the relevant field type the first &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; can be omitted, thus the following examples are equivalent:</source>
          <target state="translated">変換と集計を組み合わせるには、明示的に、または&lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; の&lt;/a&gt;キーワード引数として、2つの&lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt;呼び出しを使用する必要があります。上記のように、関連するフィールドタイプに変換が登録されている場合、最初の&lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt; &lt;code&gt;annotate()&lt;/code&gt; &lt;/a&gt;は省略できるため、次の例は同等です。</target>
        </trans-unit>
        <trans-unit id="062f06af390fd741afa99a084678b15ff848b32b" translate="yes" xml:space="preserve">
          <source>Command exceptions</source>
          <target state="translated">コマンドの例外</target>
        </trans-unit>
        <trans-unit id="72d57144ac6945b09d5de4731f8c00fe9c8dab71" translate="yes" xml:space="preserve">
          <source>Command objects</source>
          <target state="translated">コマンドオブジェクト</target>
        </trans-unit>
        <trans-unit id="5b1162b250f65b6790cb6c722277534bece1295b" translate="yes" xml:space="preserve">
          <source>Command options which take multiple options are passed a list:</source>
          <target state="translated">複数のオプションを取るコマンドオプションにはリストが渡されます。</target>
        </trans-unit>
        <trans-unit id="3abf877682cac812884ab957e7211e54caef5ae8" translate="yes" xml:space="preserve">
          <source>Commands provided by applications</source>
          <target state="translated">アプリケーションから提供されるコマンド</target>
        </trans-unit>
        <trans-unit id="783c87224075a79bd8b537cf05a2b53f1d940875" translate="yes" xml:space="preserve">
          <source>Comment action &amp;ndash; handles posting comments to a given entry.</source>
          <target state="translated">コメントアクション&amp;ndash;特定のエントリへのコメント投稿を処理します。</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="6641306a3633f32bdedfa4054c5b08150fba84fc" translate="yes" xml:space="preserve">
          <source>Comments for translators</source>
          <target state="translated">翻訳者へのコメント</target>
        </trans-unit>
        <trans-unit id="d5a2381c3fdb3c0c5a2f43150e4e650259c6c328" translate="yes" xml:space="preserve">
          <source>Comments for translators in templates</source>
          <target state="translated">テンプレート内の翻訳者へのコメント</target>
        </trans-unit>
        <trans-unit id="237397d108c7882411e5f1ddd54d93a731a473f7" translate="yes" xml:space="preserve">
          <source>Comments look like this:</source>
          <target state="translated">コメントはこんな感じです。</target>
        </trans-unit>
        <trans-unit id="1076a4b29562467018597272c6d896f5bc5227a5" translate="yes" xml:space="preserve">
          <source>Committing the changes in the patch</source>
          <target state="translated">パッチの変更をコミットする</target>
        </trans-unit>
        <trans-unit id="d1f4ee0012b5a9243c01295a17fad4ea4fe13d46" translate="yes" xml:space="preserve">
          <source>Common Web application tools</source>
          <target state="translated">一般的なWebアプリケーションツール</target>
        </trans-unit>
        <trans-unit id="af04fb2fa2de3c20f43f5e3967f22434e12a290c" translate="yes" xml:space="preserve">
          <source>Common aggregate options</source>
          <target state="translated">共通アグリゲートオプション</target>
        </trans-unit>
        <trans-unit id="f00ac15e60bc2dbbc5a5e9b995a6071cb6c5d758" translate="yes" xml:space="preserve">
          <source>Common cases such as validating against an email or a regular expression can be handled using existing validator classes available in Django. For example, &lt;code&gt;validators.validate_slug&lt;/code&gt; is an instance of a &lt;a href=&quot;../validators#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; constructed with the first argument being the pattern: &lt;code&gt;^[-a-zA-Z0-9_]+$&lt;/code&gt;. See the section on &lt;a href=&quot;../validators&quot;&gt;writing validators&lt;/a&gt; to see a list of what is already available and for an example of how to write a validator.</source>
          <target state="translated">電子メールや正規表現に対する検証などの一般的なケースは、Djangoで利用可能な既存のバリデータークラスを使用して処理できます。たとえば、 &lt;code&gt;validators.validate_slug&lt;/code&gt; は、最初の引数がパターン &lt;code&gt;^[-a-zA-Z0-9_]+$&lt;/code&gt; &lt;a href=&quot;../validators#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt; -zA-Z0-9 _] + $で構築されたRegexValidatorのインスタンスです。&lt;a href=&quot;../validators&quot;&gt;バリデータの作成&lt;/a&gt;に関するセクションを参照して、すでに利用可能なもののリストと、バリデータの作成方法の例を確認してください。</target>
        </trans-unit>
        <trans-unit id="3598d7d42bce6e5debb8491d044313a6d4391ec5" translate="yes" xml:space="preserve">
          <source>Common pitfalls</source>
          <target state="translated">よくある落とし穴</target>
        </trans-unit>
        <trans-unit id="24ec277c0ef20da052bfc2eb2c8a1f67cd237755" translate="yes" xml:space="preserve">
          <source>Common use is to display a thousand separator. If this setting is &lt;code&gt;0&lt;/code&gt;, then no grouping will be applied to the number. If this setting is greater than &lt;code&gt;0&lt;/code&gt;, then &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; will be used as the separator between those groups.</source>
          <target state="translated">一般的な使用法は、千の区切りを表示することです。この設定が &lt;code&gt;0&lt;/code&gt; の場合、グループ化は番号に適用されません。この設定が &lt;code&gt;0&lt;/code&gt; より大きい場合、これらのグループ間の区切り文字として&lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt; &lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="90e2fa048671ba1782ceac817166728db935c047" translate="yes" xml:space="preserve">
          <source>Comparable to &lt;a href=&quot;#django.db.models.functions.FirstValue&quot;&gt;&lt;code&gt;FirstValue&lt;/code&gt;&lt;/a&gt;, it calculates the last value in a given frame clause.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.functions.FirstValue&quot;&gt; &lt;code&gt;FirstValue&lt;/code&gt; &lt;/a&gt;と比較して、指定されたフレーム句の最後の値を計算します。</target>
        </trans-unit>
        <trans-unit id="013a952e852568e07ecb48992072b7b1e509b117" translate="yes" xml:space="preserve">
          <source>Comparable to &lt;code&gt;RowNumber&lt;/code&gt;, this function ranks rows in the window. The computed rank contains gaps. Use &lt;a href=&quot;#django.db.models.functions.DenseRank&quot;&gt;&lt;code&gt;DenseRank&lt;/code&gt;&lt;/a&gt; to compute rank without gaps.</source>
          <target state="translated">匹敵する &lt;code&gt;RowNumber&lt;/code&gt; 関数、この関数は、ウィンドウ内の行をランク付けします。計算されたランクにはギャップが含まれています。&lt;a href=&quot;#django.db.models.functions.DenseRank&quot;&gt; &lt;code&gt;DenseRank&lt;/code&gt; &lt;/a&gt;を使用して、ギャップのないランクを計算します。</target>
        </trans-unit>
        <trans-unit id="85e3bae39864c8eaadbaa52201cd3400ed3c7268" translate="yes" xml:space="preserve">
          <source>Comparing Polygons</source>
          <target state="translated">ポリゴンの比較</target>
        </trans-unit>
        <trans-unit id="3e9a07241ecb7fd5c1f83975cd62cd490f5c7b13" translate="yes" xml:space="preserve">
          <source>Comparing objects</source>
          <target state="translated">オブジェクトの比較</target>
        </trans-unit>
        <trans-unit id="15eebb89cf64b1215fecc2b913d44d9bd81a2ffd" translate="yes" xml:space="preserve">
          <source>Comparing offset-naive and offset-aware datetimes will return an empty string.</source>
          <target state="translated">offset-naiveとoffset-aware datetimesを比較すると、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="8f8a9f334334957255e73f6d04d7cdf5cb4e1d87" translate="yes" xml:space="preserve">
          <source>Comparison and conversion functions</source>
          <target state="translated">比較・変換機能</target>
        </trans-unit>
        <trans-unit id="b25204cbd4bfc02484e2851632d991b06eb495ce" translate="yes" xml:space="preserve">
          <source>Comparison functions</source>
          <target state="translated">比較機能</target>
        </trans-unit>
        <trans-unit id="69c2a4d72da244fd42ae3a97b091ca45e31993a0" translate="yes" xml:space="preserve">
          <source>Comparison with middleware conditional processing</source>
          <target state="translated">ミドルウェアの条件処理との比較</target>
        </trans-unit>
        <trans-unit id="c1ee9d9d9a9e3ffcaef93431da80743ebd1d119c" translate="yes" xml:space="preserve">
          <source>Compatibility Tables</source>
          <target state="translated">互換性のあるテーブル</target>
        </trans-unit>
        <trans-unit id="d75384cdd59f5a26056087afb915a33aa701204f" translate="yes" xml:space="preserve">
          <source>Compatibility checks warn of potential problems that might occur after upgrading Django.</source>
          <target state="translated">互換性チェックでは、Django のアップグレード後に発生する可能性のある問題を警告しています。</target>
        </trans-unit>
        <trans-unit id="966b80fafe70e64691aed39ff4ed52c57620abe6" translate="yes" xml:space="preserve">
          <source>Compiles &lt;code&gt;.po&lt;/code&gt; files created by &lt;a href=&quot;#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;.mo&lt;/code&gt; files for use with the built-in gettext support. See &lt;a href=&quot;../topics/i18n/index&quot;&gt;Internationalization and localization&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django-admin-makemessages&quot;&gt; &lt;code&gt;makemessages&lt;/code&gt; で&lt;/a&gt;作成された &lt;code&gt;.po&lt;/code&gt; ファイルを &lt;code&gt;.mo&lt;/code&gt; ファイルにコンパイルして、組み込みのgettextサポートで使用します。&lt;a href=&quot;../topics/i18n/index&quot;&gt;国際化とローカリゼーションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="93e905651a34f4047baa4fb287c63cd2f1a5e771" translate="yes" xml:space="preserve">
          <source>Compiles the given template code and returns a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指定されたテンプレートコードをコンパイルし、&lt;a href=&quot;#django.template.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="30ce2330406ed290a82010d978c0c56ca93b445a" translate="yes" xml:space="preserve">
          <source>Compiling message files</source>
          <target state="translated">メッセージファイルのコンパイル</target>
        </trans-unit>
        <trans-unit id="0059eb732e810f5e37b107fcba91c62825c59cc1" translate="yes" xml:space="preserve">
          <source>Complete &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements can also be generated using the &lt;a href=&quot;../../ref/forms/api#django.forms.BoundField.label_tag&quot;&gt;&lt;code&gt;label_tag()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">完全な &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 要素は、&lt;a href=&quot;../../ref/forms/api#django.forms.BoundField.label_tag&quot;&gt; &lt;code&gt;label_tag()&lt;/code&gt; &lt;/a&gt;を使用して生成することもできます。例えば：</target>
        </trans-unit>
        <trans-unit id="f1913a1fa57f5232142d7bd96f33c2c65642a19a" translate="yes" xml:space="preserve">
          <source>Complex expressions</source>
          <target state="translated">複雑な表現</target>
        </trans-unit>
        <trans-unit id="c4efdb00b051a421feb4019cc39c46fbafabeea1" translate="yes" xml:space="preserve">
          <source>Complex lookups with &lt;code&gt;Q&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;Q&lt;/code&gt; オブジェクトを使用した複雑な検索</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="fab38ef91b6ace3bd587ad488096f8252e1e3b83" translate="yes" xml:space="preserve">
          <source>Composite widgets</source>
          <target state="translated">複合ウィジェット</target>
        </trans-unit>
        <trans-unit id="20c9c53630c638b1f7e13d41f5e544d61320f791" translate="yes" xml:space="preserve">
          <source>Compressed fixtures</source>
          <target state="translated">圧縮治具</target>
        </trans-unit>
        <trans-unit id="8b919ab47536ad948ad059b28f52abc7202eb7da" translate="yes" xml:space="preserve">
          <source>Compresses responses for all modern browsers, saving bandwidth and transfer time. Note that GZipMiddleware is currently considered a security risk, and is vulnerable to attacks that nullify the protection provided by TLS/SSL. See the warning in &lt;a href=&quot;../ref/middleware#django.middleware.gzip.GZipMiddleware&quot;&gt;&lt;code&gt;GZipMiddleware&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">すべての最新ブラウザーの応答を圧縮し、帯域幅と転送時間を節約します。GZipMiddlewareは現在セキュリティリスクと見なされており、TLS / SSLによって提供される保護を無効にする攻撃に対して脆弱であることに注意してください。詳細については、&lt;a href=&quot;../ref/middleware#django.middleware.gzip.GZipMiddleware&quot;&gt; &lt;code&gt;GZipMiddleware&lt;/code&gt; &lt;/a&gt;の警告を参照してください。</target>
        </trans-unit>
        <trans-unit id="68df5f1aa66f7f803e95695e64e17380eccdcd96" translate="yes" xml:space="preserve">
          <source>Compute statistics on the pixel values of this band. The return value is a tuple with the following structure: &lt;code&gt;(minimum, maximum, mean, standard deviation)&lt;/code&gt;.</source>
          <target state="translated">このバンドのピクセル値の統計を計算します。戻り値は、 &lt;code&gt;(minimum, maximum, mean, standard deviation)&lt;/code&gt; 構造を持つタプルです。</target>
        </trans-unit>
        <trans-unit id="2a71649f7a2bce3581b4512f70d6c0d66ec8189b" translate="yes" xml:space="preserve">
          <source>Computes and returns a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; guaranteed to be on the interior of this geometry.</source>
          <target state="translated">このジオメトリの内部にあることが保証された&lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; を&lt;/a&gt;計算して返します。</target>
        </trans-unit>
        <trans-unit id="49b98ecc517c58a811d5c20ab7bb36e95df0c85c" translate="yes" xml:space="preserve">
          <source>Computes and returns a return code based on a test suite, and the result from that test suite.</source>
          <target state="translated">テストスイートに基づいたリターンコードと、そのテストスイートの結果を計算して返します。</target>
        </trans-unit>
        <trans-unit id="d9364f46c2cda5209aaab7715e4f92f41b2f35e0" translate="yes" xml:space="preserve">
          <source>Computes the percentile rank of the rows in the frame clause. This computation is equivalent to evaluating:</source>
          <target state="translated">frame節内の行のパーセンタイル・ランクを計算します。この計算は評価と同等です。</target>
        </trans-unit>
        <trans-unit id="ba348e281d3a1b3d56d22212bc1c06e8d44cd1a2" translate="yes" xml:space="preserve">
          <source>Computes the row number according to the ordering of either the frame clause or the ordering of the whole query if there is no partitioning of the &lt;a href=&quot;expressions#window-frames&quot;&gt;window frame&lt;/a&gt;.</source>
          <target state="translated">フレーム句の順序または&lt;a href=&quot;expressions#window-frames&quot;&gt;ウィンドウフレームの&lt;/a&gt;分割がない場合はクエリ全体の順序に従って行番号を計算します。</target>
        </trans-unit>
        <trans-unit id="976abda7d25dd0dfc1c9d9662da5f4c425bdf9f0" translate="yes" xml:space="preserve">
          <source>Computes the row relative to the offset &lt;code&gt;nth&lt;/code&gt; (must be a positive value) within the window. Returns &lt;code&gt;None&lt;/code&gt; if no row exists.</source>
          <target state="translated">ウィンドウ内のオフセット &lt;code&gt;nth&lt;/code&gt; （正の値である必要があります）を基準にして行を計算します。行が存在しない場合は &lt;code&gt;None&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="27c3b5b1e7cd50f8eaaee1c91c319908604703bd" translate="yes" xml:space="preserve">
          <source>Computes the sum of all values of the given expression.</source>
          <target state="translated">指定された式のすべての値の合計を計算します。</target>
        </trans-unit>
        <trans-unit id="2b13c0c14f5454f62d6b6a1576e053d30f8d170b" translate="yes" xml:space="preserve">
          <source>Computes the union of all the elements of this geometry.</source>
          <target state="translated">このジオメトリのすべての要素の和を計算します。</target>
        </trans-unit>
        <trans-unit id="6f58d263f33944384921df8405fd4a36e06175e2" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">Concepts</target>
        </trans-unit>
        <trans-unit id="d2c0a3c68697830d38897eb9d23f0882e38f17e9" translate="yes" xml:space="preserve">
          <source>Concurrent index operations</source>
          <target state="translated">同時並行インデックス演算</target>
        </trans-unit>
        <trans-unit id="8a0d63179619b501ad5800876cf0df368b27a390" translate="yes" xml:space="preserve">
          <source>Conditional Expressions</source>
          <target state="translated">条件式</target>
        </trans-unit>
        <trans-unit id="51201a4ffb69f5fef436bea1d53b660564da92b2" translate="yes" xml:space="preserve">
          <source>Conditional GET middleware</source>
          <target state="translated">条件付き GET ミドルウェア</target>
        </trans-unit>
        <trans-unit id="84610f50040959e21038dc91d808569b8b6c878d" translate="yes" xml:space="preserve">
          <source>Conditional View Processing</source>
          <target state="translated">条件付きビュー処理</target>
        </trans-unit>
        <trans-unit id="a9a65ce1ccd4b4ea18beb9a287cffd3226a29b18" translate="yes" xml:space="preserve">
          <source>Conditional aggregation</source>
          <target state="translated">条件付き集合体</target>
        </trans-unit>
        <trans-unit id="ec3a5684fef13806f283dbcf73d3e65b3768503e" translate="yes" xml:space="preserve">
          <source>Conditional content processing</source>
          <target state="translated">条件付きコンテンツ処理</target>
        </trans-unit>
        <trans-unit id="e428c12fd355944b5e6b7023bd80dd3c17b5aee5" translate="yes" xml:space="preserve">
          <source>Conditional expressions</source>
          <target state="translated">条件式</target>
        </trans-unit>
        <trans-unit id="a45c9f8d76c7c10737f779703b3c7b190d208b8a" translate="yes" xml:space="preserve">
          <source>Conditional expressions allow you to use &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; logic in queries. Django natively supports SQL &lt;code&gt;CASE&lt;/code&gt; expressions. For more details see &lt;a href=&quot;conditional-expressions&quot;&gt;Conditional Expressions&lt;/a&gt;.</source>
          <target state="translated">条件式を使用すると、クエリで&lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt; &lt;code&gt;elif&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt; &lt;code&gt;else&lt;/code&gt; &lt;/a&gt;ロジックを使用できます。DjangoはSQL &lt;code&gt;CASE&lt;/code&gt; 式をネイティブでサポートしています。詳細については、&lt;a href=&quot;conditional-expressions&quot;&gt;条件式を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="86c9e719109c7265189423688e4cce31f68c4b2c" translate="yes" xml:space="preserve">
          <source>Conditional expressions can be used in annotations, aggregations, filters, lookups, and updates. They can also be combined and nested with other expressions. This allows you to make powerful conditional queries.</source>
          <target state="translated">条件式は、アノテーション、集約、フィルタ、ルックアップ、および更新で使用することができます。また、他の式と組み合わせたり、入れ子にしたりすることもできます。これにより、強力な条件付きクエリを作成することができます。</target>
        </trans-unit>
        <trans-unit id="bef384a3da302114339742bb2d330728087ede27" translate="yes" xml:space="preserve">
          <source>Conditional expressions let you use &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; logic within filters, annotations, aggregations, and updates. A conditional expression evaluates a series of conditions for each row of a table and returns the matching result expression. Conditional expressions can also be combined and nested like other &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt;.</source>
          <target state="translated">条件式を使用すると&lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt; &lt;code&gt;elif&lt;/code&gt; &lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt; &lt;code&gt;else&lt;/code&gt; &lt;/a&gt;フィルター内のロジック、注釈、集計、および更新を使用できます。条件式は、テーブルの各行の一連の条件を評価し、一致する結果式を返します。条件式は、他の&lt;a href=&quot;expressions&quot;&gt;式&lt;/a&gt;と同様に組み合わせたりネストしたりすることもできます。</target>
        </trans-unit>
        <trans-unit id="60685b8618223463a1213478b5912b07b255960a" translate="yes" xml:space="preserve">
          <source>Conditional filter</source>
          <target state="translated">条件付きフィルタ</target>
        </trans-unit>
        <trans-unit id="12fc2f5ba876364a8762b74c54215eafe75db00b" translate="yes" xml:space="preserve">
          <source>Conditional update</source>
          <target state="translated">条件付き更新</target>
        </trans-unit>
        <trans-unit id="9dcf55a9190afa7734274d1ddfba86a6f59deba2" translate="yes" xml:space="preserve">
          <source>Conditional view processing</source>
          <target state="translated">条件付きビュー処理</target>
        </trans-unit>
        <trans-unit id="8a1b7b24ee2d25c7e1fdcf4448522c537af9f7f1" translate="yes" xml:space="preserve">
          <source>Conditionally enabling or disabling actions</source>
          <target state="translated">条件付きでアクションを有効または無効にする</target>
        </trans-unit>
        <trans-unit id="b6a0de49479646f82acca96a3b96147d92a823b1" translate="yes" xml:space="preserve">
          <source>Conditions that span relational fields. For example:</source>
          <target state="translated">リレーショナル・フィールドにまたがる条件。例えば</target>
        </trans-unit>
        <trans-unit id="f081a03e38b9f2ce94b3f290434e89b874cfbe18" translate="yes" xml:space="preserve">
          <source>Configurable attributes</source>
          <target state="translated">構成可能な属性</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="2b6c31d8647bdbb2028b97fcd3605cc88d0c8ef1" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;settings.py&lt;/code&gt;</source>
          <target state="translated">構成し &lt;code&gt;settings.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19576e379b1455d39fea388e4831958b5fde4e20" translate="yes" xml:space="preserve">
          <source>Configure a &lt;a href=&quot;../../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; backend in your &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting with &lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt; and &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; in the &lt;code&gt;'context_processors'&lt;/code&gt; option of &lt;a href=&quot;../../settings#std:setting-TEMPLATES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">設定&lt;a href=&quot;../../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; が&lt;/a&gt;あなたのバックエンド&lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;で設定 &lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt; と &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; で &lt;code&gt;'context_processors'&lt;/code&gt; のオプション&lt;a href=&quot;../../settings#std:setting-TEMPLATES-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b7f789bd54790b49062af39ee787a7b26073f3c" translate="yes" xml:space="preserve">
          <source>Configure a &lt;a href=&quot;../../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; backend in your &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting with &lt;code&gt;django.template.context_processors.request&lt;/code&gt;, &lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt;, and &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; in the &lt;code&gt;'context_processors'&lt;/code&gt; option of &lt;a href=&quot;../../settings#std:setting-TEMPLATES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">設定&lt;a href=&quot;../../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; が&lt;/a&gt;あなたのバックエンド&lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;で設定 &lt;code&gt;django.template.context_processors.request&lt;/code&gt; 、 &lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt; 、および &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; に &lt;code&gt;'context_processors'&lt;/code&gt; のオプション&lt;a href=&quot;../../settings#std:setting-TEMPLATES-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d3b04cea17e28c67f71fed6f96b07d523b18de1" translate="yes" xml:space="preserve">
          <source>Configure your web server to serve the files in &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; under the URL &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt;. For example, here&amp;rsquo;s &lt;a href=&quot;../deployment/wsgi/modwsgi#serving-files&quot;&gt;how to do this with Apache and mod_wsgi&lt;/a&gt;.</source>
          <target state="translated">URL &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; の&lt;/a&gt;下の&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt;内のファイルを提供するようにWebサーバーを構成します。たとえば&lt;a href=&quot;../deployment/wsgi/modwsgi#serving-files&quot;&gt;、Apacheとmod_wsgiでこれを行う方法は次のとおり&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="503e91de84f91208b728c191e6f3ed197e5d413b" translate="yes" xml:space="preserve">
          <source>Configure, make and install:</source>
          <target state="translated">設定、作成、インストールを行います。</target>
        </trans-unit>
        <trans-unit id="184f5022536e583eabec108d9706fbe79627f797" translate="yes" xml:space="preserve">
          <source>Configures Django by:</source>
          <target state="translated">でDjangoを設定します。</target>
        </trans-unit>
        <trans-unit id="3ba19abb1d165db639c4a564906edfeb16a0a29d" translate="yes" xml:space="preserve">
          <source>Configures a newly created user. This method is called immediately after a new user is created, and can be used to perform custom setup actions, such as setting the user&amp;rsquo;s groups based on attributes in an LDAP directory. Returns the user object.</source>
          <target state="translated">新しく作成されたユーザーを構成します。このメソッドは、新しいユーザーが作成された直後に呼び出され、LDAPディレクトリの属性に基づいてユーザーのグループを設定するなど、カスタムセットアップアクションを実行するために使用できます。ユーザーオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="9af468c991e56e22e41dec7452937a15cb317f13" translate="yes" xml:space="preserve">
          <source>Configures three loggers:</source>
          <target state="translated">3 つのロガーを設定します。</target>
        </trans-unit>
        <trans-unit id="485cc663bb970ccb9c99a838c0f5a04115489124" translate="yes" xml:space="preserve">
          <source>Configuring Django in this fashion is mostly necessary &amp;ndash; and, indeed, recommended &amp;ndash; when you&amp;rsquo;re using a piece of the framework inside a larger application.</source>
          <target state="translated">この方法でDjangoを構成することは、大規模なアプリケーション内でフレームワークの一部を使用している場合に、ほとんどの場合必要であり、実際に推奨されます。</target>
        </trans-unit>
        <trans-unit id="76b38a4978760216c72304cd269e9d8e57f7db4d" translate="yes" xml:space="preserve">
          <source>Configuring an engine</source>
          <target state="translated">エンジンの設定</target>
        </trans-unit>
        <trans-unit id="4a0159a42419a7407b045bec82aed244724be873" translate="yes" xml:space="preserve">
          <source>Configuring and starting the uWSGI server for Django</source>
          <target state="translated">Django 用 uWSGI サーバーの設定と起動</target>
        </trans-unit>
        <trans-unit id="399b54fd8f642e78380d5fce3b076f86d97da4e8" translate="yes" xml:space="preserve">
          <source>Configuring applications</source>
          <target state="translated">アプリケーションの設定</target>
        </trans-unit>
        <trans-unit id="79235b7e3284ed1a0ee69b93dc85fffe62a078f3" translate="yes" xml:space="preserve">
          <source>Configuring email for development</source>
          <target state="translated">開発用メールの設定</target>
        </trans-unit>
        <trans-unit id="c64c5c6a6cb52da59668af10fafaac8249a4f623" translate="yes" xml:space="preserve">
          <source>Configuring form elements&amp;rsquo; HTML &lt;code&gt;id&lt;/code&gt; attributes and &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags</source>
          <target state="translated">フォーム要素のHTML &lt;code&gt;id&lt;/code&gt; 属性と &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; タグの構成</target>
        </trans-unit>
        <trans-unit id="8c337c488d4a759a6eb0d55f602e54b6c630596b" translate="yes" xml:space="preserve">
          <source>Configuring logging</source>
          <target state="translated">ロギングの設定</target>
        </trans-unit>
        <trans-unit id="722745be73ea61714ad4ab330460a1449b423ce0" translate="yes" xml:space="preserve">
          <source>Configuring static files</source>
          <target state="translated">静的ファイルの設定</target>
        </trans-unit>
        <trans-unit id="204565212ff116d3cf1b1065c865c959dbde3456" translate="yes" xml:space="preserve">
          <source>Configuring the message engine</source>
          <target state="translated">メッセージエンジンの設定</target>
        </trans-unit>
        <trans-unit id="07b1e8f062ef7113523bf799b6668696a0806bcf" translate="yes" xml:space="preserve">
          <source>Configuring the rendering of a form&amp;rsquo;s widgets</source>
          <target state="translated">フォームのウィジェットのレンダリングを構成する</target>
        </trans-unit>
        <trans-unit id="9af41083fea57cddecb86fb3bf45008f94aabe64" translate="yes" xml:space="preserve">
          <source>Configuring the session engine</source>
          <target state="translated">セッションエンジンの設定</target>
        </trans-unit>
        <trans-unit id="4035740826101b046a1e4bff2c0739fa6aaed0d9" translate="yes" xml:space="preserve">
          <source>Configuring the settings module</source>
          <target state="translated">設定モジュールの設定</target>
        </trans-unit>
        <trans-unit id="fd325343ebe91309a2a788b620ad9f4a5c51fae6" translate="yes" xml:space="preserve">
          <source>Configuring these servers is out of scope of this document; check each server&amp;rsquo;s respective documentation for instructions.</source>
          <target state="translated">これらのサーバーの構成は、このドキュメントの範囲外です。手順については、各サーバーのそれぞれのドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="5d0f7b1c340243357fe9239425729d88aa6a2c45" translate="yes" xml:space="preserve">
          <source>Confirm the bug by using the &lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt; to check the method on a question whose date lies in the future:</source>
          <target state="translated">&lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt; &lt;code&gt;shell&lt;/code&gt; &lt;/a&gt;を使用してバグを確認し、日付が未来の質問のメソッドを確認します。</target>
        </trans-unit>
        <trans-unit id="c4eb5164cf4479c415eb2d005ae2e4fac51710db" translate="yes" xml:space="preserve">
          <source>Congratulations, you&amp;rsquo;ve learned how to make a pull request to Django! Details of more advanced techniques you may need are in &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/working-with-git/&quot;&gt;Working with Git and GitHub&lt;/a&gt;.</source>
          <target state="translated">おめでとうございます。Djangoにプルリクエストを送信する方法を学びました。必要になる可能性のあるより高度なテクニックの詳細は&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/working-with-git/&quot;&gt;、GitとGitHubの操作にあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e178cf5143b599e9feb371dd911c6a23dee3ae51" translate="yes" xml:space="preserve">
          <source>Congratulations, you&amp;rsquo;ve learned how to make a pull request to Django! Details of more advanced techniques you may need are in &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/working-with-git/&quot;&gt;Working with Git and GitHub&lt;/a&gt;.</source>
          <target state="translated">おめでとうございます。Djangoにプルリクエストを送信する方法を学びました。必要になる可能性のあるより高度なテクニックの詳細は&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/internals/contributing/writing-code/working-with-git/&quot;&gt;、GitとGitHubの操作にあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d403fbfd19b67a206b7298bca03432d7c2ea2ce" translate="yes" xml:space="preserve">
          <source>Connecting receiver functions</source>
          <target state="translated">受信機機能の接続</target>
        </trans-unit>
        <trans-unit id="e5bdf07a77312f53ea2d4719544dbd5407ca884f" translate="yes" xml:space="preserve">
          <source>Connecting to signals sent by specific senders</source>
          <target state="translated">特定の送信者が送信する信号に接続する</target>
        </trans-unit>
        <trans-unit id="af53bacbeb9ba4944f6b9f266fabc80be94aba0c" translate="yes" xml:space="preserve">
          <source>Connecting to the database</source>
          <target state="translated">データベースへの接続</target>
        </trans-unit>
        <trans-unit id="07f35038b27fc876a57591119e37327c7b80eb76" translate="yes" xml:space="preserve">
          <source>Connection management</source>
          <target state="translated">接続管理</target>
        </trans-unit>
        <trans-unit id="9519b982a0870cfa8eaaa9ffdb2113e333074ee0" translate="yes" xml:space="preserve">
          <source>Connection settings are used in this order:</source>
          <target state="translated">接続設定はこの順番で使用します。</target>
        </trans-unit>
        <trans-unit id="5b328cde6e35e516d82cee79dfdc66644770025e" translate="yes" xml:space="preserve">
          <source>Connections and cursors</source>
          <target state="translated">接続とカーソル</target>
        </trans-unit>
        <trans-unit id="b1a00f8956bd3074b46c457b5fc7f951d07cffcb" translate="yes" xml:space="preserve">
          <source>Consequently, when configured via &lt;code&gt;settings.configure()&lt;/code&gt;, Django will not make any modifications to the process environment variables (see the documentation of &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; for why this would normally occur). It&amp;rsquo;s assumed that you&amp;rsquo;re already in full control of your environment in these cases.</source>
          <target state="translated">その結果、 &lt;code&gt;settings.configure()&lt;/code&gt; を介して設定された場合、Djangoはプロセス環境変数に変更を加えません（通常、これが発生する理由については、&lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください）。これらのケースでは、すでに環境を完全に制御していると想定されています。</target>
        </trans-unit>
        <trans-unit id="723e6f92743d4882ba199f3bce595df23c649696" translate="yes" xml:space="preserve">
          <source>Consider &lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;serving static files from a cloud service or CDN&lt;/a&gt; to avoid some of these issues.</source>
          <target state="translated">これらの問題の一部を回避するために&lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;、クラウドサービスまたはCDNから静的ファイル&lt;/a&gt;を提供することを検討してください。</target>
        </trans-unit>
        <trans-unit id="1dcf5d703d3f6569aaf8b5b1cb51f1023404c956" translate="yes" xml:space="preserve">
          <source>Consider a form containing a &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt;を含むフォームを考えてみましょう：</target>
        </trans-unit>
        <trans-unit id="f86230a2ac93ffe6536b5566b296e6c21dec433f" translate="yes" xml:space="preserve">
          <source>Consider a more useful form than our minimal example above, which we could use to implement &amp;ldquo;contact me&amp;rdquo; functionality on a personal website:</source>
          <target state="translated">上記の最小限の例よりも便利なフォームを検討してください。これを使用して、個人のWebサイトに「連絡」機能を実装できます。</target>
        </trans-unit>
        <trans-unit id="6670df00166ba856b2846c093a362aeefbb7eadf" translate="yes" xml:space="preserve">
          <source>Consider a typical case, where a view might need to call a model&amp;rsquo;s method to perform some computation, before placing the model instance into the context, where the template might invoke the method once more:</source>
          <target state="translated">モデルインスタンスをコンテキストに配置する前に、ビューがモデルのメソッドを呼び出していくつかの計算を実行する必要があり、テンプレートがもう一度メソッドを呼び出すという典型的なケースを考えます。</target>
        </trans-unit>
        <trans-unit id="0105b3c78814a97f1529301cab6c2210c49eaf36" translate="yes" xml:space="preserve">
          <source>Consider again this URLconf entry:</source>
          <target state="translated">このURLconfのエントリをもう一度考えてみてください。</target>
        </trans-unit>
        <trans-unit id="d813ff8a4ab210b4832d5705e367f6f3c7f128ae" translate="yes" xml:space="preserve">
          <source>Consider an example where you are implementing a custom field named &lt;code&gt;RangedIntegerField&lt;/code&gt;. This field adds &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; arguments to the constructor of &lt;code&gt;IntegerField&lt;/code&gt;. You may want to add a check to ensure that users provide a min value that is less than or equal to the max value. The following code snippet shows how you can implement this check:</source>
          <target state="translated">&lt;code&gt;RangedIntegerField&lt;/code&gt; という名前のカスタムフィールドを実装する例を考えてみます。このフィールドは、 &lt;code&gt;IntegerField&lt;/code&gt; のコンストラクターに &lt;code&gt;min&lt;/code&gt; および &lt;code&gt;max&lt;/code&gt; 引数を追加します。ユーザーが最大値以下の最小値を提供していることを確認するためのチェックを追加することができます。次のコードスニペットは、このチェックを実装する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c4ecdcec2f2b786a86469126a2024472b5ec67b9" translate="yes" xml:space="preserve">
          <source>Consider converting to local time explicitly with &lt;code&gt;AT TIME ZONE&lt;/code&gt; in raw SQL queries instead of setting the &lt;code&gt;TIME_ZONE&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;TIME_ZONE&lt;/code&gt; オプションを設定する代わりに、生のSQLクエリで &lt;code&gt;AT TIME ZONE&lt;/code&gt; TIMEZONEを使用して明示的に現地時間に変換することを検討してください。</target>
        </trans-unit>
        <trans-unit id="c7def0b3f29a8fc3f1e8dca782d283a5c0a71a0a" translate="yes" xml:space="preserve">
          <source>Consider the case of a list of objects that have a foreign key referencing &lt;a href=&quot;../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt;. If you&amp;rsquo;re going to serialize an object that refers to a content type, then you need to have a way to refer to that content type to begin with. Since &lt;code&gt;ContentType&lt;/code&gt; objects are automatically created by Django during the database synchronization process, the primary key of a given content type isn&amp;rsquo;t easy to predict; it will depend on how and when &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; was executed. This is true for all models which automatically generate objects, notably including &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; を&lt;/a&gt;参照する外部キーを持つオブジェクトのリストの場合を考えます。コンテンツタイプを参照するオブジェクトをシリアル化する場合は、最初にそのコンテンツタイプを参照する方法が必要です。ため &lt;code&gt;ContentType&lt;/code&gt; オブジェクトは自動的にデータベース同期処理中にジャンゴによって作成され、特定のコンテンツタイプの主キーを予測することは容易ではありません。&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt; &lt;code&gt;migrate&lt;/code&gt; &lt;/a&gt;がいつどのように実行されたかによって異なります。これは、特に&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; &lt;/a&gt;を含む、オブジェクトを自動的に生成するすべてのモデルに当てはまります。</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">次のような例を考えてみてください。</target>
        </trans-unit>
        <trans-unit id="6ec3d6fc8e2778acd98b6b9a74478cbb3ac532f2" translate="yes" xml:space="preserve">
          <source>Consider the following model, using an &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; to store a photo:</source>
          <target state="translated">&lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt;を使用して写真を保存する次のモデルを考えます。</target>
        </trans-unit>
        <trans-unit id="a9f0ad7c11ed74758926263473b6fcdd5c68904d" translate="yes" xml:space="preserve">
          <source>Consider the following two models:</source>
          <target state="translated">次の2つのモデルを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="b55e14cd00af1671d3acaeb6797a2f1a1d1cfe56" translate="yes" xml:space="preserve">
          <source>Consider this case:</source>
          <target state="translated">今回のケースを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="e6fa5fb83466f5cb81ad8dc4eb230c1e627bee82" translate="yes" xml:space="preserve">
          <source>Consider this set of models:</source>
          <target state="translated">このモデルのセットを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="3b2fae745ff0f5bdef936eb329d888f2cdd49003" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;../../topics/http/sessions#cached-sessions-backend&quot;&gt;cached sessions&lt;/a&gt; to improve performance.</source>
          <target state="translated">パフォーマンスを向上させるために、&lt;a href=&quot;../../topics/http/sessions#cached-sessions-backend&quot;&gt;キャッシュされたセッションの&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="69d80b05f0a3f520081f1af1f6b4b6a85d5f6f34" translate="yes" xml:space="preserve">
          <source>Consider using an error monitoring system such as &lt;a href=&quot;https://docs.sentry.io/&quot;&gt;Sentry&lt;/a&gt; before your inbox is flooded by reports. Sentry can also aggregate logs.</source>
          <target state="translated">受信トレイがレポートで&lt;a href=&quot;https://docs.sentry.io/&quot;&gt;いっぱいになる&lt;/a&gt;前に、Sentryなどのエラー監視システムの使用を検討してください。Sentryはログを集約することもできます。</target>
        </trans-unit>
        <trans-unit id="bac4e95735f7b9ee2aeac0a541fc2fbb47d3773a" translate="yes" xml:space="preserve">
          <source>Consider, for example, that you need to change a single database feature. First, you have to create a new directory with a &lt;code&gt;base&lt;/code&gt; module in it. For example:</source>
          <target state="translated">たとえば、単一のデータベース機能を変更する必要があることを考慮してください。まず、 &lt;code&gt;base&lt;/code&gt; モジュールを含む新しいディレクトリを作成する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="bac7b250a9feea25e1a60fbc0ce1d2f28db31ae2" translate="yes" xml:space="preserve">
          <source>Considerations regarding model&amp;rsquo;s &lt;code&gt;error_messages&lt;/code&gt;</source>
          <target state="translated">モデルの &lt;code&gt;error_messages&lt;/code&gt; に関する考慮事項</target>
        </trans-unit>
        <trans-unit id="fad5caa2de30e036189b4b06ccc83a823846c06f" translate="yes" xml:space="preserve">
          <source>Considerations when removing model fields</source>
          <target state="translated">モデルフィールドを削除する際の考慮事項</target>
        </trans-unit>
        <trans-unit id="39cbdd33812e96a59909005452966168ffe901bd" translate="yes" xml:space="preserve">
          <source>Console backend</source>
          <target state="translated">コンソールバックエンド</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="d2bb772775f2449a9d77b0f2111e8563197228e7" translate="yes" xml:space="preserve">
          <source>Constraints are defined in &lt;code&gt;django.db.models.constraints&lt;/code&gt;, but for convenience they&amp;rsquo;re imported into &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt;&lt;code&gt;django.db.models&lt;/code&gt;&lt;/a&gt;. The standard convention is to use &lt;code&gt;from django.db import models&lt;/code&gt; and refer to the constraints as &lt;code&gt;models.&amp;lt;Foo&amp;gt;Constraint&lt;/code&gt;.</source>
          <target state="translated">制約は &lt;code&gt;django.db.models.constraints&lt;/code&gt; で定義されていますが、便宜上&lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt; &lt;code&gt;django.db.models&lt;/code&gt; に&lt;/a&gt;インポートされています。標準的な慣習では &lt;code&gt;from django.db import models&lt;/code&gt; 使用し、制約を &lt;code&gt;models.&amp;lt;Foo&amp;gt;Constraint&lt;/code&gt; として参照します。</target>
        </trans-unit>
        <trans-unit id="89c5e5d778784e530c7a73d09a7b6e47b0b6dbcc" translate="yes" xml:space="preserve">
          <source>Constraints in abstract base classes</source>
          <target state="translated">抽象基底クラスの制約</target>
        </trans-unit>
        <trans-unit id="1705fea1fec1fa4ac3b10f2d3cfa4a70220a459d" translate="yes" xml:space="preserve">
          <source>Constraints reference</source>
          <target state="translated">制約の参照</target>
        </trans-unit>
        <trans-unit id="b0a9544fc5f74416b59886dcf88258ecc14145b9" translate="yes" xml:space="preserve">
          <source>Constructed by paginating &lt;code&gt;queryset&lt;/code&gt; into pages of size &lt;code&gt;page_size&lt;/code&gt;. If the request contains a &lt;code&gt;page&lt;/code&gt; argument, either as a captured URL argument or as a GET argument, &lt;code&gt;object_list&lt;/code&gt; will correspond to the objects from that page.</source>
          <target state="translated">ページ付けによって構築 &lt;code&gt;queryset&lt;/code&gt; サイズのページに &lt;code&gt;page_size&lt;/code&gt; 。リクエストに、キャプチャされたURL引数またはGET引数として &lt;code&gt;page&lt;/code&gt; 引数が含まれている場合、 &lt;code&gt;object_list&lt;/code&gt; はそのページのオブジェクトに対応します。</target>
        </trans-unit>
        <trans-unit id="843aa9f358e7373aa764b1a65c9105e0cdcfffaf" translate="yes" xml:space="preserve">
          <source>Constructing an unbound form is the same as always &amp;ndash; omit both form data &lt;em&gt;and&lt;/em&gt; file data:</source>
          <target state="translated">バインドされていないフォームの作成は通常と同じです。フォームデータ&lt;em&gt;と&lt;/em&gt;ファイルデータの両方を省略&lt;em&gt;し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ad04bd63e469988c66f8a3b4fe65a042e0e7a4c2" translate="yes" xml:space="preserve">
          <source>Constructor arguments are:</source>
          <target state="translated">コンストラクタの引数は</target>
        </trans-unit>
        <trans-unit id="0c178a0518cca80f0ef53db97c1d23d11b0c437d" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; from the given bounding-box (a 4-tuple).</source>
          <target state="translated">指定されたバウンディングボックス（4タプル）から&lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt; &lt;code&gt;Polygon&lt;/code&gt; &lt;/a&gt;を構築します。</target>
        </trans-unit>
        <trans-unit id="b01313c178df0437bd242d3dc19fe189331e205f" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; from the given GML string.</source>
          <target state="translated">指定されたGML文字列から&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; &lt;/a&gt;を構築します。</target>
        </trans-unit>
        <trans-unit id="4182e609339c912b6a2b55fb04b1948dc8fa25a3" translate="yes" xml:space="preserve">
          <source>Constructs a form, checks the form for validity, and handles it accordingly.</source>
          <target state="translated">フォームを構築し、フォームの有効性をチェックし、それに応じて処理します。</target>
        </trans-unit>
        <trans-unit id="c25a4d6a608627e8ee7fbb0590daad81bfdf43f7" translate="yes" xml:space="preserve">
          <source>Constructs a test suite that matches the test labels provided.</source>
          <target state="translated">指定されたテストラベルにマッチするテストスイートを構築します。</target>
        </trans-unit>
        <trans-unit id="8b659b37f4f2e24b2ad4c7dc596d71c179972c4e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; from the given GML string.</source>
          <target state="translated">指定されたGML文字列から&lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt; &lt;code&gt;OGRGeometry&lt;/code&gt; &lt;/a&gt;を構築します。</target>
        </trans-unit>
        <trans-unit id="cdcb9a98e37a51c3b607e0bab427f0a3e73904bd" translate="yes" xml:space="preserve">
          <source>Constructs the target URL for redirection.</source>
          <target state="translated">リダイレクト先のURLを構築します。</target>
        </trans-unit>
        <trans-unit id="91d6543469ef40166278b437bd62f964375e7652" translate="yes" xml:space="preserve">
          <source>Contained within. This operator is supported by many Python containers to test whether the given value is in the container. The following are some examples of how &lt;code&gt;x in y&lt;/code&gt; will be interpreted:</source>
          <target state="translated">内に含まれています。この演算子は、指定された値がコンテナー内にあるかどうかをテストするために、多くのPythonコンテナーでサポートされています。以下は &lt;code&gt;x in y&lt;/code&gt; 解釈方法の例です。</target>
        </trans-unit>
        <trans-unit id="9687cdda7eb74c04c61d45de65991365823be6c3" translate="yes" xml:space="preserve">
          <source>Containment and key lookups</source>
          <target state="translated">封じ込めとキー検索</target>
        </trans-unit>
        <trans-unit id="89d2ab91daa8570eacf6a6c4a05409536ee1c6a9" translate="yes" xml:space="preserve">
          <source>Containment and key operations</source>
          <target state="translated">封じ込めとキー操作</target>
        </trans-unit>
        <trans-unit id="4391727be29f60ee6dfbc6fd8ef4ac397cf112d6" translate="yes" xml:space="preserve">
          <source>Containment functions</source>
          <target state="translated">封じ込め機能</target>
        </trans-unit>
        <trans-unit id="6b100d40ac5a33d89caf83b3c3f6ff6daf77433b" translate="yes" xml:space="preserve">
          <source>Contains the complete list of core and contrib app settings.</source>
          <target state="translated">コアアプリとcontribアプリの設定の完全なリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="d01f8c75db11afd4218b46f3e2fa049433029511" translate="yes" xml:space="preserve">
          <source>Content negotiation example</source>
          <target state="translated">内容交渉例</target>
        </trans-unit>
        <trans-unit id="4683f6ec63cb87bdf57e377dbff2cca050de9197" translate="yes" xml:space="preserve">
          <source>Content types and generic relations</source>
          <target state="translated">コンテンツの種類と一般的な関係</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="59bbe6057a4273131904b6f9404ed85f706992d4" translate="yes" xml:space="preserve">
          <source>Context and template responses</source>
          <target state="translated">コンテキストとテンプレートの対応</target>
        </trans-unit>
        <trans-unit id="c6c53e2b775a20fe1a0e933400d064d167505dae" translate="yes" xml:space="preserve">
          <source>Context available in widget templates</source>
          <target state="translated">ウィジェットテンプレートで利用可能なコンテキスト</target>
        </trans-unit>
        <trans-unit id="17ed0085f13911ebc5a2d12f4fc504a3182b3ed1" translate="yes" xml:space="preserve">
          <source>Context processors</source>
          <target state="translated">コンテキストプロセッサ</target>
        </trans-unit>
        <trans-unit id="5901a49232dbef577cda0060c889044257f6fbb8" translate="yes" xml:space="preserve">
          <source>Context processors are applied on top of context data. This means that a context processor may overwrite variables you&amp;rsquo;ve supplied to your &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt;, so take care to avoid variable names that overlap with those supplied by your context processors.</source>
          <target state="translated">コンテキストプロセッサは、コンテキストデータの上に適用されます。これは、コンテキストプロセッサが&lt;a href=&quot;#django.template.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#django.template.RequestContext&quot;&gt; &lt;code&gt;RequestContext&lt;/code&gt; に&lt;/a&gt;提供した変数を上書きする可能性があることを意味します。そのため、コンテキストプロセッサによって提供された変数名と重複しないように注意してください。</target>
        </trans-unit>
        <trans-unit id="bc05c7c5de0522d2d85d1b6e2fce9c6303049e04" translate="yes" xml:space="preserve">
          <source>Context processors are functions that receive the current &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; as an argument and return a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; of data to be added to the rendering context.</source>
          <target state="translated">コンテキストプロセッサは、現在の&lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;を引数として受け取り、レンダリングコンテキストに追加するデータの&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;を返す関数です。</target>
        </trans-unit>
        <trans-unit id="967bdc0eee5ec3c4217bafc26bea045765883071" translate="yes" xml:space="preserve">
          <source>Context processors are useful with Django templates because Django templates don&amp;rsquo;t support calling functions with arguments. Since Jinja2 doesn&amp;rsquo;t have that limitation, it&amp;rsquo;s recommended to put the function that you would use as a context processor in the global variables available to the template using &lt;code&gt;jinja2.Environment&lt;/code&gt; as described below. You can then call that function in the template:</source>
          <target state="translated">Djangoテンプレートは引数付きの関数の呼び出しをサポートしていないため、コンテキストプロセッサはDjangoテンプレートで役立ちます。Jinja2にはその制限がないため、以下で説明するように、 &lt;code&gt;jinja2.Environment&lt;/code&gt; を使用して、テンプレートで使用可能なグローバル変数にコンテキストプロセッサとして使用する関数を配置することをお勧めします。その後、テンプレートでその関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="a81ca58a2d33854d7dad7ec7988eec151557124f" translate="yes" xml:space="preserve">
          <source>Context variables</source>
          <target state="translated">コンテキスト変数</target>
        </trans-unit>
        <trans-unit id="bfdc9b0c3ef7fa9d319e35db5e3432f41737cfe7" translate="yes" xml:space="preserve">
          <source>Context variables override values from template context processors</source>
          <target state="translated">コンテキスト変数は、テンプレートのコンテキストプロセッサからの値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="3cc335d8b69e1b609577d3e39cfa36ec0f7fac1a" translate="yes" xml:space="preserve">
          <source>Context: variable &lt;code&gt;person&lt;/code&gt; is set to &lt;code&gt;&quot;John&quot;&lt;/code&gt; and variable &lt;code&gt;greeting&lt;/code&gt; is set to &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;.</source>
          <target state="translated">コンテキスト：変数 &lt;code&gt;person&lt;/code&gt; は &lt;code&gt;&quot;John&quot;&lt;/code&gt; に設定され、変数 &lt;code&gt;greeting&lt;/code&gt; は &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="c257f4238337560d78d4a4163014eafe278ff120" translate="yes" xml:space="preserve">
          <source>Contextual line information</source>
          <target state="translated">文脈に沿ったライン情報</target>
        </trans-unit>
        <trans-unit id="334884395d29b2523e74a230fda97118c3630209" translate="yes" xml:space="preserve">
          <source>Contextual markers</source>
          <target state="translated">文脈に応じたマーカー</target>
        </trans-unit>
        <trans-unit id="b46f1a2f098ccaca572a905f2bdf7cbbbfc6c89d" translate="yes" xml:space="preserve">
          <source>Contextual markers are also supported by the &lt;a href=&quot;#std:templatetag-trans&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;blocktrans&lt;/code&gt;&lt;/a&gt; template tags.</source>
          <target state="translated">コンテキストマーカーは、&lt;a href=&quot;#std:templatetag-trans&quot;&gt; &lt;code&gt;trans&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt; &lt;code&gt;blocktrans&lt;/code&gt; &lt;/a&gt;テンプレートタグでもサポートされています。</target>
        </trans-unit>
        <trans-unit id="05d83a5d835a96e138c740cb8ac38633cd4f850b" translate="yes" xml:space="preserve">
          <source>Contextual markers are also supported by the &lt;a href=&quot;#std:templatetag-translate&quot;&gt;&lt;code&gt;translate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:templatetag-blocktranslate&quot;&gt;&lt;code&gt;blocktranslate&lt;/code&gt;&lt;/a&gt; template tags.</source>
          <target state="translated">コンテキストマーカーは、&lt;a href=&quot;#std:templatetag-translate&quot;&gt; &lt;code&gt;translate&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#std:templatetag-blocktranslate&quot;&gt; &lt;code&gt;blocktranslate&lt;/code&gt; &lt;/a&gt;テンプレートタグでもサポートされています。</target>
        </trans-unit>
        <trans-unit id="9f09c07c68096594da883f5a23969df19412ff1f" translate="yes" xml:space="preserve">
          <source>Continuing on from the previous example, suppose that in our &lt;code&gt;ContactForm&lt;/code&gt;, we want to make sure that the &lt;code&gt;recipients&lt;/code&gt; field always contains the address &lt;code&gt;&quot;fred@example.com&quot;&lt;/code&gt;. This is validation that is specific to our form, so we don&amp;rsquo;t want to put it into the general &lt;code&gt;MultiEmailField&lt;/code&gt; class. Instead, we write a cleaning method that operates on the &lt;code&gt;recipients&lt;/code&gt; field, like so:</source>
          <target state="translated">前の例から続けて、 &lt;code&gt;ContactForm&lt;/code&gt; で、 &lt;code&gt;recipients&lt;/code&gt; フィールドに常にアドレス &lt;code&gt;&quot;fred@example.com&quot;&lt;/code&gt; が含まれていることを確認したいとします。これはフォームに固有の検証であるため、一般的な &lt;code&gt;MultiEmailField&lt;/code&gt; クラスには入れません。代わりに、次のように &lt;code&gt;recipients&lt;/code&gt; フィールドを操作するクリーニングメソッドを記述します。</target>
        </trans-unit>
        <trans-unit id="aceb61eb4351dad879dda9b2731200ebcbce06e2" translate="yes" xml:space="preserve">
          <source>Continuing our example from above, you could change the default manager used when you query the &lt;code&gt;Person&lt;/code&gt; model like this:</source>
          <target state="translated">上記の例を続けると、次のように &lt;code&gt;Person&lt;/code&gt; モデルをクエリするときに使用されるデフォルトのマネージャーを変更できます。</target>
        </trans-unit>
        <trans-unit id="de7c9e50892f4db2ac9af5a082e27a7139717e30" translate="yes" xml:space="preserve">
          <source>Continuing our ongoing example, we can write the &lt;a href=&quot;../ref/models/fields#django.db.models.Field.formfield&quot;&gt;&lt;code&gt;formfield()&lt;/code&gt;&lt;/a&gt; method as:</source>
          <target state="translated">継続的な例を続けると、&lt;a href=&quot;../ref/models/fields#django.db.models.Field.formfield&quot;&gt; &lt;code&gt;formfield()&lt;/code&gt; &lt;/a&gt;メソッドを次のように書くことができます：</target>
        </trans-unit>
        <trans-unit id="4405502bfbd98671211d09306e81c9df25477cd4" translate="yes" xml:space="preserve">
          <source>Continuing the above example, we need to define &lt;code&gt;CurrentTimeNode&lt;/code&gt;:</source>
          <target state="translated">上記の例を続けて、 &lt;code&gt;CurrentTimeNode&lt;/code&gt; を定義する必要があります：</target>
        </trans-unit>
        <trans-unit id="187e8fa995249b524a5096b2858c0f31b6eb0e75" translate="yes" xml:space="preserve">
          <source>Contrarily to the &lt;a href=&quot;#std:templatetag-trans&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt; tag, the &lt;code&gt;blocktrans&lt;/code&gt; tag allows you to mark complex sentences consisting of literals and variable content for translation by making use of placeholders:</source>
          <target state="translated">逆に&lt;a href=&quot;#std:templatetag-trans&quot;&gt; &lt;code&gt;trans&lt;/code&gt; &lt;/a&gt;タグ、 &lt;code&gt;blocktrans&lt;/code&gt; のタグを使用するには、プレースホルダを使用することによってリテラルおよび翻訳のための変数の内容からなる複雑な文章をマークすることができます：</target>
        </trans-unit>
        <trans-unit id="3c7ddfaae193253667937fca0c20969d06cd38f5" translate="yes" xml:space="preserve">
          <source>Contrarily to the &lt;a href=&quot;#std:templatetag-translate&quot;&gt;&lt;code&gt;translate&lt;/code&gt;&lt;/a&gt; tag, the &lt;code&gt;blocktranslate&lt;/code&gt; tag allows you to mark complex sentences consisting of literals and variable content for translation by making use of placeholders:</source>
          <target state="translated">逆に&lt;a href=&quot;#std:templatetag-translate&quot;&gt; &lt;code&gt;translate&lt;/code&gt; &lt;/a&gt;、タグ、 &lt;code&gt;blocktranslate&lt;/code&gt; タグは、プレースホルダを使用することによってリテラルおよび翻訳のための変数の内容からなる複雑な文章をマークすることができます：</target>
        </trans-unit>
        <trans-unit id="3296398180a962f1c4599ecb5770b2a81fc18db0" translate="yes" xml:space="preserve">
          <source>Contrib and reusable apps</source>
          <target state="translated">コントリビューションと再利用可能なアプリ</target>
        </trans-unit>
        <trans-unit id="ed3240e8665bc40b2d6222b1e3c5ce26beecf640" translate="yes" xml:space="preserve">
          <source>Contributing back to Django itself is the best way to see your own concerns addressed. This may seem daunting at first, but it&amp;rsquo;s a well-traveled path with documentation, tooling, and a community to support you. We&amp;rsquo;ll walk you through the entire process, so you can learn by example.</source>
          <target state="translated">Django自体に貢献することは、自分の懸念事項に対処するための最良の方法です。これは最初は気が遠くなるように思えるかもしれませんが、ドキュメント、ツール、およびあなたをサポートするコミュニティを備えた、よく旅された道です。プロセス全体を順を追って説明するので、例を使って学ぶことができます。</target>
        </trans-unit>
        <trans-unit id="bce115b0c925643288d6d66089149032ada8c603" translate="yes" xml:space="preserve">
          <source>Control characters</source>
          <target state="translated">制御文字</target>
        </trans-unit>
        <trans-unit id="b154e4edab7aebc0af47c2562667941ef91db649" translate="yes" xml:space="preserve">
          <source>Controlling cache: Using other headers</source>
          <target state="translated">キャッシュの制御 他のヘッダの使用</target>
        </trans-unit>
        <trans-unit id="f35880afc483938e0a826ea644109cd0ca08b484" translate="yes" xml:space="preserve">
          <source>Controlling creation order for test databases</source>
          <target state="translated">テストデータベースの作成順序の制御</target>
        </trans-unit>
        <trans-unit id="7ac4ae3a9579cbec5691358ce474c0b0df2695e3" translate="yes" xml:space="preserve">
          <source>Controlling localization in templates</source>
          <target state="translated">テンプレートでのローカリゼーションの制御</target>
        </trans-unit>
        <trans-unit id="2c98a788da67114af3a0e49ab46a0ae821e68bb5" translate="yes" xml:space="preserve">
          <source>Controlling the order of migrations</source>
          <target state="translated">移行の順番を制御する</target>
        </trans-unit>
        <trans-unit id="6574c3053a419a2444932d417f95327aff549414" translate="yes" xml:space="preserve">
          <source>Controlling transactions explicitly</source>
          <target state="translated">明示的にトランザクションを制御する</target>
        </trans-unit>
        <trans-unit id="6d6b7cfbba43adbe608690d2bba0e22a0e13e5ec" translate="yes" xml:space="preserve">
          <source>Controls &lt;code&gt;#: filename:line&lt;/code&gt; comment lines in language files. If the option is:</source>
          <target state="translated">コントロール &lt;code&gt;#: filename:line&lt;/code&gt; 言語ファイルのコメント行。オプションが次の場合：</target>
        </trans-unit>
        <trans-unit id="c4b7f71be578959fd6d23d2bbd5ba9bb07c414cf" translate="yes" xml:space="preserve">
          <source>Controls the current auto-escaping behavior. This tag takes either &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; as an argument and that determines whether auto-escaping is in effect inside the block. The block is closed with an &lt;code&gt;endautoescape&lt;/code&gt; ending tag.</source>
          <target state="translated">現在の自動エスケープ動作を制御します。このタグは、引数として &lt;code&gt;on&lt;/code&gt; または &lt;code&gt;off&lt;/code&gt; いずれかを取り、ブロック内で自動エスケープが有効かどうかを決定します。ブロックは &lt;code&gt;endautoescape&lt;/code&gt; 終了タグで閉じられています。</target>
        </trans-unit>
        <trans-unit id="b9d1f63c0dfa11d252b1ab38a64e01627e4e3b0d" translate="yes" xml:space="preserve">
          <source>Controls the migration framework&amp;rsquo;s reaction if this &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; is pointing at a swappable model. If it is &lt;code&gt;True&lt;/code&gt; - the default - then if the &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; is pointing at a model which matches the current value of &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; (or another swappable model setting) the relationship will be stored in the migration using a reference to the setting, not to the model directly.</source>
          <target state="translated">この&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;がスワップ可能なモデルを指している場合の移行フレームワークの反応を制御します。 &lt;code&gt;True&lt;/code&gt; の場合（デフォルト）、&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; （または別のスワップ可能なモデル設定）の現在の値と一致するモデルを指している場合、関係は設定への参照を使用して移行に保存されます。直接モデル。</target>
        </trans-unit>
        <trans-unit id="7e5fe6453afeb245d890f34dc50aaf9282f5e1b4" translate="yes" xml:space="preserve">
          <source>Controls the migration framework&amp;rsquo;s reaction if this &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is pointing at a swappable model. If it is &lt;code&gt;True&lt;/code&gt; - the default - then if the &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is pointing at a model which matches the current value of &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; (or another swappable model setting) the relationship will be stored in the migration using a reference to the setting, not to the model directly.</source>
          <target state="translated">この&lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;がスワップ可能なモデルを指している場合の移行フレームワークの反応を制御します。もしそうであれば &lt;code&gt;True&lt;/code&gt; -デフォルト-た場合、その後&lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt;、現在の値と一致するモデルを指している &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; （または他のスワップ可能なモデル設定）関係がないように、設定への参照を使用して、移行中に格納されます直接モデル。</target>
        </trans-unit>
        <trans-unit id="96447b99d7e9abc6ce4b3abc13d4f488a8b1386b" translate="yes" xml:space="preserve">
          <source>Controls the test runner class that is used to execute tests. This value overrides the value provided by the &lt;a href=&quot;settings#std:setting-TEST_RUNNER&quot;&gt;&lt;code&gt;TEST_RUNNER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">テストの実行に使用されるテストランナークラスを制御します。この値は、&lt;a href=&quot;settings#std:setting-TEST_RUNNER&quot;&gt; &lt;code&gt;TEST_RUNNER&lt;/code&gt; &lt;/a&gt;設定によって提供される値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="db523bd92e8d56b60d8ceccede6318428181fa50" translate="yes" xml:space="preserve">
          <source>Controls where Django stores message data. Valid values are:</source>
          <target state="translated">Django がメッセージデータを保存する場所を制御します。有効な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1dcdc7bebe7773531a558a1c056859dbf3cdff7f" translate="yes" xml:space="preserve">
          <source>Controls where Django stores session data. Included engines are:</source>
          <target state="translated">Django がセッションデータを保存する場所を制御します。含まれるエンジンは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="c7d7b257968400dc7ed02b7e6eeaa22323ece797" translate="yes" xml:space="preserve">
          <source>Controls where on the page the actions bar appears. By default, the admin changelist displays actions at the top of the page (&lt;code&gt;actions_on_top = True;
actions_on_bottom = False&lt;/code&gt;).</source>
          <target state="translated">ページのどこにアクションバーを表示するかを制御します。デフォルトでは、管理者チェンジリストはページの上部にアクションを表示します（ &lt;code&gt;actions_on_top = True; actions_on_bottom = False&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e5925bed528d2d1afb2ff84897cdc886191f6161" translate="yes" xml:space="preserve">
          <source>Controls whether a selection counter is displayed next to the action dropdown. By default, the admin changelist will display it (&lt;code&gt;actions_selection_counter = True&lt;/code&gt;).</source>
          <target state="translated">選択カウンタをアクションドロップダウンの横に表示するかどうかを制御します。デフォルトでは、管理者変更リストに表示されます（ &lt;code&gt;actions_selection_counter = True&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e488b00f6003e3487cf3f6ea18fe1dbdb084857c" translate="yes" xml:space="preserve">
          <source>Controls whether or not a constraint should be created in the database for this foreign key. The default is &lt;code&gt;True&lt;/code&gt;, and that&amp;rsquo;s almost certainly what you want; setting this to &lt;code&gt;False&lt;/code&gt; can be very bad for data integrity. That said, here are some scenarios where you might want to do this:</source>
          <target state="translated">この外部キーのデータベースに制約を作成するかどうかを制御します。デフォルトは &lt;code&gt;True&lt;/code&gt; ですが、ほとんどの場合、これで十分です。これを &lt;code&gt;False&lt;/code&gt; に設定すると、データの整合性が著しく損なわれる可能性があります。そうは言っても、これがあなたがこれをしたいかもしれないいくつかのシナリオです：</target>
        </trans-unit>
        <trans-unit id="9df07e9c9d2ef71a7e2e53a925a500dda80d56c9" translate="yes" xml:space="preserve">
          <source>Controls whether or not constraints should be created in the database for the foreign keys in the intermediary table. The default is &lt;code&gt;True&lt;/code&gt;, and that&amp;rsquo;s almost certainly what you want; setting this to &lt;code&gt;False&lt;/code&gt; can be very bad for data integrity. That said, here are some scenarios where you might want to do this:</source>
          <target state="translated">中間テーブルの外部キーのデータベースに制約を作成するかどうかを制御します。デフォルトは &lt;code&gt;True&lt;/code&gt; ですが、ほとんどの場合、これで十分です。これを &lt;code&gt;False&lt;/code&gt; に設定すると、データの整合性が著しく損なわれる可能性があります。そうは言っても、これがあなたがこれをしたいかもしれないいくつかのシナリオです：</target>
        </trans-unit>
        <trans-unit id="9494d96246d9e4b07c2935a61d2709b70980f091" translate="yes" xml:space="preserve">
          <source>Conversely, if (for some strange reason) you want Django to output natural keys during serialization, but &lt;em&gt;not&lt;/em&gt; be able to load those key values, just don&amp;rsquo;t define the &lt;code&gt;get_by_natural_key()&lt;/code&gt; method.</source>
          <target state="translated">逆に、（奇妙な理由で）シリアライズ中にDjangoに自然キーを出力させたいが、それらのキー値をロードでき&lt;em&gt;ない&lt;/em&gt;ようにしたい場合は、 &lt;code&gt;get_by_natural_key()&lt;/code&gt; メソッドを定義しないでください。</target>
        </trans-unit>
        <trans-unit id="8944328622412e4c50234bcd60eb29184d97f2d2" translate="yes" xml:space="preserve">
          <source>Conversion functions</source>
          <target state="translated">変換機能</target>
        </trans-unit>
        <trans-unit id="190ebbb02c1204703af9a12541fd89c32a534f48" translate="yes" xml:space="preserve">
          <source>Conversion to local time isn&amp;rsquo;t always appropriate &amp;ndash; you may be generating output for computers rather than for humans. The following filters and tags, provided by the &lt;code&gt;tz&lt;/code&gt; template tag library, allow you to control the time zone conversions.</source>
          <target state="translated">現地時間への変換は常に適切であるとは限りません。人間ではなくコンピュータの出力を生成している可能性があります。 &lt;code&gt;tz&lt;/code&gt; テンプレートタグライブラリによって提供される次のフィルターとタグを使用すると、タイムゾーン変換を制御できます。</target>
        </trans-unit>
        <trans-unit id="bf9ee11ef37c5bf3a42a21bffdc8cdd4cabb0b98" translate="yes" xml:space="preserve">
          <source>Convert a file system path to a URI portion that is suitable for inclusion in a URL. The path is assumed to be either UTF-8 bytes or string.</source>
          <target state="translated">ファイルシステムのパスを、URLに含めるのに適したURI部分に変換します。パスはUTF-8バイトまたは文字列を想定しています。</target>
        </trans-unit>
        <trans-unit id="405c6eeb51486dacb7727c0bb5a09cd804c694d7" translate="yes" xml:space="preserve">
          <source>Convert a file system path to a URI portion that is suitable for inclusion in a URL. The path is assumed to be either UTF-8 bytes, string, or a &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイルシステムパスを、URLに含めるのに適したURI部分に変換します。パスは、UTF-8バイト、文字列、または&lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;いずれかであると見なされます。</target>
        </trans-unit>
        <trans-unit id="c14aadc6f430aec0f5b89fd139372539991eba2a" translate="yes" xml:space="preserve">
          <source>Convert an Internationalized Resource Identifier (IRI) portion to a URI portion that is suitable for inclusion in a URL.</source>
          <target state="translated">国際化されたリソース識別子(IRI)の部分を、URLに含めるのに適したURIの部分に変換します。</target>
        </trans-unit>
        <trans-unit id="59c8520e24cd282ffd2c300af62902a5fb2a771e" translate="yes" xml:space="preserve">
          <source>Convert the URLconf.</source>
          <target state="translated">URLconfを変換します。</target>
        </trans-unit>
        <trans-unit id="877d071a083df4941810c83461727b6498800fe5" translate="yes" xml:space="preserve">
          <source>Converting Python objects to query values</source>
          <target state="translated">Python オブジェクトをクエリ値に変換する</target>
        </trans-unit>
        <trans-unit id="946fe91972de9e63b56258bac7bd01d9e7040979" translate="yes" xml:space="preserve">
          <source>Converting field data for serialization</source>
          <target state="translated">フィールドデータをシリアル化するための変換</target>
        </trans-unit>
        <trans-unit id="e31453473f160b9159b4c71f0570be3844679c73" translate="yes" xml:space="preserve">
          <source>Converting query values to database values</source>
          <target state="translated">クエリ値をデータベース値に変換する</target>
        </trans-unit>
        <trans-unit id="7856c753afe0cd24cd03cfa58759f394e4cb11b3" translate="yes" xml:space="preserve">
          <source>Converting to ASCII if &lt;code&gt;allow_unicode&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; (the default).</source>
          <target state="translated">&lt;code&gt;allow_unicode&lt;/code&gt; が &lt;code&gt;False&lt;/code&gt; （デフォルト）の場合、ASCIIに変換します。</target>
        </trans-unit>
        <trans-unit id="99f1111f3091d1d7534cc3a81f16babd8ab75df0" translate="yes" xml:space="preserve">
          <source>Converting to lowercase.</source>
          <target state="translated">小文字に変換します。</target>
        </trans-unit>
        <trans-unit id="14370b561d154884d95603823bcf09249b64b4d1" translate="yes" xml:space="preserve">
          <source>Converting values to Python objects</source>
          <target state="translated">値をPythonオブジェクトに変換する</target>
        </trans-unit>
        <trans-unit id="9b1cce06f41ce11386663380c98bec1f00c59b42" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;obj&lt;/code&gt; to a string. Used to serialize the value of the field.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; を文字列に変換します。フィールドの値をシリアル化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="41c755c5b20ef8849e03ee59aaf45f1dbe488321" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;value&lt;/code&gt; to a backend-specific value. By default it returns &lt;code&gt;value&lt;/code&gt; if &lt;code&gt;prepared=True&lt;/code&gt; and &lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; if is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; をバックエンド固有の値に変換します。デフォルトでは、&lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;prepared=True&lt;/code&gt; 場合は &lt;code&gt;value&lt;/code&gt; 返し、 &lt;code&gt;False&lt;/code&gt; の場合はget_prep_value（）を返します。</target>
        </trans-unit>
        <trans-unit id="10c888f74331d7656347f7a04df7c5cb54e286c8" translate="yes" xml:space="preserve">
          <source>Converts URLs and email addresses in text into clickable links.</source>
          <target state="translated">テキスト内のURLとメールアドレスをクリック可能なリンクに変換します。</target>
        </trans-unit>
        <trans-unit id="d847ac56760c372bb5b94f78f62438ea26896715" translate="yes" xml:space="preserve">
          <source>Converts URLs and email addresses into clickable links just like &lt;a href=&quot;#urlize&quot;&gt;urlize&lt;/a&gt;, but truncates URLs longer than the given character limit.</source>
          <target state="translated">URLと電子メールアドレスを、&lt;a href=&quot;#urlize&quot;&gt;urlize&lt;/a&gt;と同じようにクリック可能なリンクに変換しますが、指定された文字制限よりも長いURLを切り捨てます。</target>
        </trans-unit>
        <trans-unit id="751a9da24aca474705b5c4e3e7b28fb048fee25f" translate="yes" xml:space="preserve">
          <source>Converts a Uniform Resource Identifier into an Internationalized Resource Identifier.</source>
          <target state="translated">統一されたリソース識別子を国際化されたリソース識別子に変換します。</target>
        </trans-unit>
        <trans-unit id="f1982b3dcc1ede0fbfcf2f2b99d326751d14c87b" translate="yes" xml:space="preserve">
          <source>Converts a base 36 string to an integer.</source>
          <target state="translated">ベース36の文字列を整数に変換します。</target>
        </trans-unit>
        <trans-unit id="71f93e7e3f308d74df45af186ef9bea1f8e5a4e2" translate="yes" xml:space="preserve">
          <source>Converts a function decorator into a method decorator. It can be used to decorate methods or classes; in the latter case, &lt;code&gt;name&lt;/code&gt; is the name of the method to be decorated and is required.</source>
          <target state="translated">関数デコレータをメソッドデコレータに変換します。メソッドやクラスの装飾に使用できます。後者の場合、 &lt;code&gt;name&lt;/code&gt; は装飾するメソッドの名前であり、必須です。</target>
        </trans-unit>
        <trans-unit id="a3ff663b74bd4920025fcbb882fe213137b6b205" translate="yes" xml:space="preserve">
          <source>Converts a large integer (or a string representation of an integer) to a friendly text representation. Translates &lt;code&gt;1.0&lt;/code&gt; as a singular phrase and all other numeric values as plural, this may be incorrect for some languages. Works best for numbers over 1 million.</source>
          <target state="translated">長整数（または整数の文字列表現）をわかりやすいテキスト表現に変換します。 &lt;code&gt;1.0&lt;/code&gt; を単数句として翻訳し、他のすべての数値を複数として翻訳します。これは、一部の言語では正しくない場合があります。100万を超える数値に最適です。</target>
        </trans-unit>
        <trans-unit id="7c9551376de4074e9ca7c4dd6bfeea4e6cd76d89" translate="yes" xml:space="preserve">
          <source>Converts a numeric field or expression from degrees to radians.</source>
          <target state="translated">数値フィールドまたは式を度からラジアンに変換します。</target>
        </trans-unit>
        <trans-unit id="4f2319f1c30478b4232e670273c40e44ebf9f05c" translate="yes" xml:space="preserve">
          <source>Converts a numeric field or expression from radians to degrees.</source>
          <target state="translated">数値フィールドまたは式をラジアンから度数に変換します。</target>
        </trans-unit>
        <trans-unit id="6d2618a28e846fb11c7628bfca859ef19787afd6" translate="yes" xml:space="preserve">
          <source>Converts a phone number (possibly containing letters) to its numerical equivalent.</source>
          <target state="translated">電話番号 (文字を含む可能性があるもの)を数値に変換します。</target>
        </trans-unit>
        <trans-unit id="577743ec7452c0285cd1f9ee850658b64049a5fb" translate="yes" xml:space="preserve">
          <source>Converts a positive integer to a base 36 string.</source>
          <target state="translated">正の整数を基数36の文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="6176ccd3f9c61f695f20d4d3c989543ba3906ed8" translate="yes" xml:space="preserve">
          <source>Converts a string into all lowercase.</source>
          <target state="translated">文字列をすべて小文字に変換します。</target>
        </trans-unit>
        <trans-unit id="88a8344fd2e4b3cb087ff90b842c79148cc94371" translate="yes" xml:space="preserve">
          <source>Converts a string into all uppercase.</source>
          <target state="translated">文字列をすべて大文字に変換します。</target>
        </trans-unit>
        <trans-unit id="d55d52a8a6c062c508ef151ae8a79d0dad7a1d2c" translate="yes" xml:space="preserve">
          <source>Converts a string into titlecase by making words start with an uppercase character and the remaining characters lowercase. This tag makes no effort to keep &amp;ldquo;trivial words&amp;rdquo; in lowercase.</source>
          <target state="translated">単語を大文字で始め、残りの文字を小文字にすることで、文字列をタイトルケースに変換します。このタグは、「些細な単語」を小文字に保つ努力をしません。</target>
        </trans-unit>
        <trans-unit id="dda103d7b6e149b66f5daf5c97e9e68dedee4d62" translate="yes" xml:space="preserve">
          <source>Converts a string to a URL slug by:</source>
          <target state="translated">文字列をURLスラッグに変換します。</target>
        </trans-unit>
        <trans-unit id="9b02d783cffedff30f7c0486752888ac67c9dce0" translate="yes" xml:space="preserve">
          <source>Converts a value as returned by the database to a Python object. It is the reverse of &lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データベースから返された値をPythonオブジェクトに変換します。これは&lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt; &lt;code&gt;get_prep_value()&lt;/code&gt; の&lt;/a&gt;逆です。</target>
        </trans-unit>
        <trans-unit id="6cc08b0cc0ce67195f91918da27fb75121e9c300" translate="yes" xml:space="preserve">
          <source>Converts all newlines in a piece of plain text to HTML line breaks (&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">プレーンテキストの一部のすべての改行をHTML改行（ &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; ）に変換します。</target>
        </trans-unit>
        <trans-unit id="63102052e724046b4c7cfc712d45726581d79095" translate="yes" xml:space="preserve">
          <source>Converts an IRI (Internationalized Resource Identifier) to a string that is suitable for including in a URL. This is necessary if you&amp;rsquo;re trying to use strings containing non-ASCII characters in a URL.</source>
          <target state="translated">IRI（Internationalized Resource Identifier）をURLに含めるのに適した文字列に変換します。これは、URLで非ASCII文字を含む文字列を使用する場合に必要です。</target>
        </trans-unit>
        <trans-unit id="c065bc0735425120d0f70837c91d785bc012dad9" translate="yes" xml:space="preserve">
          <source>Converts an aware &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; to a different time zone, by default the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;.</source>
          <target state="translated">対応する&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;を別のタイムゾーンに変換します。デフォルトでは&lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;現在のタイムゾーン&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="24f58866c9ad2f0e5b48d3a41964a61f6805e6d2" translate="yes" xml:space="preserve">
          <source>Converts an integer or float (or a string representation of either) to a string containing commas every three digits.</source>
          <target state="translated">整数または浮動小数点数(または文字列表現)を、3桁ごとにカンマを含む文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="d77e5c76b3715d860b42b33499f84db56abe1350" translate="yes" xml:space="preserve">
          <source>Converts an integer to its ordinal as a string.</source>
          <target state="translated">整数を文字列として序数に変換します。</target>
        </trans-unit>
        <trans-unit id="fe150d1e0f5f7fb120999c3b0f99edafb6daa81b" translate="yes" xml:space="preserve">
          <source>Converts the value into the correct Python object. It acts as the reverse of &lt;a href=&quot;#django.db.models.Field.value_to_string&quot;&gt;&lt;code&gt;value_to_string()&lt;/code&gt;&lt;/a&gt;, and is also called in &lt;a href=&quot;instances#django.db.models.Model.clean&quot;&gt;&lt;code&gt;clean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値を正しいPythonオブジェクトに変換します。&lt;a href=&quot;#django.db.models.Field.value_to_string&quot;&gt; &lt;code&gt;value_to_string()&lt;/code&gt; の&lt;/a&gt;逆として機能し、&lt;a href=&quot;instances#django.db.models.Model.clean&quot;&gt; &lt;code&gt;clean()&lt;/code&gt; &lt;/a&gt;でも呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ad1df7b5a7e49ff77c91cc2a5edd4b7412912653" translate="yes" xml:space="preserve">
          <source>Converts this geometry to canonical form:</source>
          <target state="translated">このジオメトリをカノニカル形式に変換します。</target>
        </trans-unit>
        <trans-unit id="5609a3d54449e54a1186321cbbae77971c7f0b88" translate="yes" xml:space="preserve">
          <source>Converts to ASCII. Converts spaces to hyphens. Removes characters that aren&amp;rsquo;t alphanumerics, underscores, or hyphens. Converts to lowercase. Also strips leading and trailing whitespace.</source>
          <target state="translated">ASCIIに変換します。スペースをハイフンに変換します。英数字、アンダースコア、ハイフン以外の文字を削除します。小文字に変換します。また、先頭と末尾の空白を削除します。</target>
        </trans-unit>
        <trans-unit id="3c899c354a18cb19ad6d8b51fc4b5f91ac62c334" translate="yes" xml:space="preserve">
          <source>Coordinate Retrieval</source>
          <target state="translated">座標検索</target>
        </trans-unit>
        <trans-unit id="a7403995ddabd0bb442686cb413956962db613f4" translate="yes" xml:space="preserve">
          <source>Coordinate System Objects</source>
          <target state="translated">座標系オブジェクト</target>
        </trans-unit>
        <trans-unit id="8662f261b71825c211e5fdfa612126122f90357e" translate="yes" xml:space="preserve">
          <source>Coordinates of the top left origin of the raster in the spatial reference system of the source, as a point object with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members.</source>
          <target state="translated">ソースの空間参照系におけるラスターの左上の原点の座標 &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; メンバーを持つポイントオブジェクトとして。</target>
        </trans-unit>
        <trans-unit id="20a70e2212ed651a12300fa7f69b3920ae57340f" translate="yes" xml:space="preserve">
          <source>Copy the &lt;code&gt;AddField&lt;/code&gt; operation from the auto-generated migration (the first of the three new files) to the last migration, change &lt;code&gt;AddField&lt;/code&gt; to &lt;code&gt;AlterField&lt;/code&gt;, and add imports of &lt;code&gt;uuid&lt;/code&gt; and &lt;code&gt;models&lt;/code&gt;. For example:</source>
          <target state="translated">コピー &lt;code&gt;AddField&lt;/code&gt; 最後の移動、変更に自動生成された移行（3つの新規ファイルの最初）からの操作を &lt;code&gt;AddField&lt;/code&gt; に &lt;code&gt;AlterField&lt;/code&gt; 、との輸入を追加 &lt;code&gt;uuid&lt;/code&gt; と &lt;code&gt;models&lt;/code&gt; 。例えば：</target>
        </trans-unit>
        <trans-unit id="788fd368b693b80faee754d2935c349108572591" translate="yes" xml:space="preserve">
          <source>Copy the admin static files so that they live within your Apache document root.</source>
          <target state="translated">admin の静的ファイルをコピーして、Apache ドキュメントルート内で動作するようにします。</target>
        </trans-unit>
        <trans-unit id="1d14efc430d4c9769a3ab6b2653575f46529a76b" translate="yes" xml:space="preserve">
          <source>Copying model instances</source>
          <target state="translated">モデルインスタンスのコピー</target>
        </trans-unit>
        <trans-unit id="4f4c0c82a62b49bfdcecec04410c6ce9b6600f87" translate="yes" xml:space="preserve">
          <source>Copying the data across</source>
          <target state="translated">データを横断的にコピーする</target>
        </trans-unit>
        <trans-unit id="e342de6e92ac926565fd339c2f3c30925c376803" translate="yes" xml:space="preserve">
          <source>Core Settings</source>
          <target state="translated">コア設定</target>
        </trans-unit>
        <trans-unit id="0973170c5ea97231549e5e3fd104575d8b0565e1" translate="yes" xml:space="preserve">
          <source>Core Settings Topical Index</source>
          <target state="translated">コア設定トピカルインデックス</target>
        </trans-unit>
        <trans-unit id="3b5cd72f2450459ecb150f3e1de55a5c656262b9" translate="yes" xml:space="preserve">
          <source>Core field arguments</source>
          <target state="translated">コアフィールド引数</target>
        </trans-unit>
        <trans-unit id="fc69874cbbf2b688bae436665cf59c2abb826f24" translate="yes" xml:space="preserve">
          <source>Core system checks</source>
          <target state="translated">基幹システムのチェック</target>
        </trans-unit>
        <trans-unit id="d0f588fcafb5874172dc936c72cc314dd639e0b2" translate="yes" xml:space="preserve">
          <source>Counting in the opposite direction works in conjunction with distinct():</source>
          <target state="translated">逆方向のカウントは distinct()と連動して動作します。</target>
        </trans-unit>
        <trans-unit id="655362dd6b3d43b1a50bdb4f16f4cb510ef4b75d" translate="yes" xml:space="preserve">
          <source>Covers all the model related APIs including model fields, related objects, and &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">モデルフィールド、関連オブジェクト、 &lt;code&gt;QuerySet&lt;/code&gt; など、モデルに関連するすべてのAPIについて説明します。</target>
        </trans-unit>
        <trans-unit id="8499ec39682b6d56c9aa94e4012d898e367a3005" translate="yes" xml:space="preserve">
          <source>Covers built-in tags, built-in filters, using an alternative template language, and more.</source>
          <target state="translated">組み込みのタグ、組み込みのフィルタ、代替テンプレート言語の使用などをカバーしています。</target>
        </trans-unit>
        <trans-unit id="ec53b2c8ed1d8e7f9a3b2bf5c554b068c0e49b96" translate="yes" xml:space="preserve">
          <source>Covers built-in tags, built-in filters, using an alternative template, language, and more.</source>
          <target state="translated">組み込みのタグ、組み込みのフィルタ、代替テンプレートの使用、言語などをカバーしています。</target>
        </trans-unit>
        <trans-unit id="0610776ae159e53430f541c68b1ccbb538f36fcd" translate="yes" xml:space="preserve">
          <source>Covers the full API reference, including form fields, form widgets, and form and field validation.</source>
          <target state="translated">フォームフィールド、フォームウィジェット、フォームとフィールドの検証を含むAPIリファレンスを完全にカバーしています。</target>
        </trans-unit>
        <trans-unit id="05d685caebaa4b6f75f7658512436b86c05cd4ba" translate="yes" xml:space="preserve">
          <source>Covers the schema operations API, special operations, and writing your own operations.</source>
          <target state="translated">スキーマ操作API、特殊操作、独自の操作の記述をカバーしています。</target>
        </trans-unit>
        <trans-unit id="67adc58703a9da20e63462f7e347e781289f5b6b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;base.html&lt;/code&gt; template that holds the main look-and-feel of your site.</source>
          <target state="translated">サイトのメインのルックアンドフィールを保持する &lt;code&gt;base.html&lt;/code&gt; テンプレートを作成します。</target>
        </trans-unit>
        <trans-unit id="a8fbf7b36e8022314a4790339f2543f3fbf3f923" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;base_SECTIONNAME.html&lt;/code&gt; template for each &amp;ldquo;section&amp;rdquo; of your site. For example, &lt;code&gt;base_news.html&lt;/code&gt;, &lt;code&gt;base_sports.html&lt;/code&gt;. These templates all extend &lt;code&gt;base.html&lt;/code&gt; and include section-specific styles/design.</source>
          <target state="translated">サイトの「セクション」ごとに &lt;code&gt;base_SECTIONNAME.html&lt;/code&gt; テンプレートを作成します。たとえば、 &lt;code&gt;base_news.html&lt;/code&gt; 、 &lt;code&gt;base_sports.html&lt;/code&gt; 。これらのテンプレートはすべて &lt;code&gt;base.html&lt;/code&gt; を拡張し、セクション固有のスタイル/デザインを含みます。</target>
        </trans-unit>
        <trans-unit id="cc749cd3971dbe897724bd6dd8564d3ddcf6f67c" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;django-polls/LICENSE&lt;/code&gt; file. Choosing a license is beyond the scope of this tutorial, but suffice it to say that code released publicly without a license is &lt;em&gt;useless&lt;/em&gt;. Django and many Django-compatible apps are distributed under the BSD license; however, you&amp;rsquo;re free to pick your own license. Just be aware that your licensing choice will affect who is able to use your code.</source>
          <target state="translated">&lt;code&gt;django-polls/LICENSE&lt;/code&gt; ファイルを作成します。ライセンスの選択はこのチュートリアルの範囲外ですが、ライセンスなしで公開されたコードは&lt;em&gt;役に立た&lt;/em&gt;ないと言っても十分です。Djangoおよび多くのDjango互換アプリはBSDライセンスの下で配布されています。ただし、自分のライセンスを自由に選択できます。ライセンスの選択は、コードを使用できるユーザーに影響することに注意してください。</target>
        </trans-unit>
        <trans-unit id="72e2bad0947a098145039bda8135653551af8fc5" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;templates&lt;/code&gt; directory in your project directory (the one that contains &lt;code&gt;manage.py&lt;/code&gt;). Templates can live anywhere on your filesystem that Django can access. (Django runs as whatever user your server runs.) However, keeping your templates within the project is a good convention to follow.</source>
          <target state="translated">プロジェクトディレクトリ（ &lt;code&gt;manage.py&lt;/code&gt; を含むディレクトリ）に &lt;code&gt;templates&lt;/code&gt; ディレクトリを作成します。テンプレートは、Djangoがアクセスできるファイルシステムのどこにでも置くことができます。（Djangoはサーバーが実行するすべてのユーザーとして実行されます。）ただし、テンプレートをプロジェクト内に保持することは、従うのに適した規則です。</target>
        </trans-unit>
        <trans-unit id="8591541ba0c61f55fbd6a67ce8d050b87767b7b5" translate="yes" xml:space="preserve">
          <source>Create a New Project</source>
          <target state="translated">新規プロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="60dcc14e8d90fd94874dc780b8a0352d4414ebcf" translate="yes" xml:space="preserve">
          <source>Create a Python database-access API for accessing &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Choice&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Question&lt;/code&gt; オブジェクトと &lt;code&gt;Choice&lt;/code&gt; オブジェクトにアクセスするためのPythonデータベースアクセスAPIを作成します。</target>
        </trans-unit>
        <trans-unit id="27acc7753e14e1c49cb3a3ea94cbe167c5ba53e5" translate="yes" xml:space="preserve">
          <source>Create a Restaurant. Pass the &amp;ldquo;parent&amp;rdquo; object as this object&amp;rsquo;s primary key:</source>
          <target state="translated">レストランを作成します。「親」オブジェクトをこのオブジェクトの主キーとして渡します。</target>
        </trans-unit>
        <trans-unit id="43f4729d746052323bea080e3291aec1bad94b49" translate="yes" xml:space="preserve">
          <source>Create a Restaurant. Pass the ID of the &amp;ldquo;parent&amp;rdquo; object as this object&amp;rsquo;s ID:</source>
          <target state="translated">レストランを作成します。「親」オブジェクトのIDをこのオブジェクトのIDとして渡します。</target>
        </trans-unit>
        <trans-unit id="836dff9f23282905fc38c81755a6f798c674bb12" translate="yes" xml:space="preserve">
          <source>Create a Spatial Database</source>
          <target state="translated">空間データベースの作成</target>
        </trans-unit>
        <trans-unit id="852d14595eb7534a3b7c4dd3e6b61e01f0ddc46b" translate="yes" xml:space="preserve">
          <source>Create a couple of Places:</source>
          <target state="translated">プレイスのカップルを作成します。</target>
        </trans-unit>
        <trans-unit id="7ad262f4aaf5e201de7e9d7e8303a9b32e7d21d2" translate="yes" xml:space="preserve">
          <source>Create a database schema (&lt;code&gt;CREATE TABLE&lt;/code&gt; statements) for this app.</source>
          <target state="translated">このアプリのデータベーススキーマ（ &lt;code&gt;CREATE TABLE&lt;/code&gt; ステートメント）を作成します。</target>
        </trans-unit>
        <trans-unit id="5c1281cb56285a7b07dc433a65ef11706d09c808" translate="yes" xml:space="preserve">
          <source>Create a few &lt;code&gt;Publications&lt;/code&gt;:</source>
          <target state="translated">いくつかの &lt;code&gt;Publications&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="2c77fdc7f75b9f396d557578b69ed93e72fdfce5" translate="yes" xml:space="preserve">
          <source>Create a few Reporters:</source>
          <target state="translated">数人の報告者を作成します。</target>
        </trans-unit>
        <trans-unit id="d7cb094b62d7a2aec00d853cc276175047b6ecc1" translate="yes" xml:space="preserve">
          <source>Create a file &lt;code&gt;django-polls/README.rst&lt;/code&gt; with the following contents:</source>
          <target state="translated">次の内容で &lt;code&gt;django-polls/README.rst&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="c2a14ba9ac0e0b05614c2104e006d32373be6b90" translate="yes" xml:space="preserve">
          <source>Create a new article:</source>
          <target state="translated">新しい記事を作成します。</target>
        </trans-unit>
        <trans-unit id="3ac21fa26bcebb273cb8fb212beed3074ac542ac" translate="yes" xml:space="preserve">
          <source>Create a new virtual environment by running:</source>
          <target state="translated">を実行して新しい仮想環境を作成します。</target>
        </trans-unit>
        <trans-unit id="5db3963994f9c87b261747170405214fe69ce219" translate="yes" xml:space="preserve">
          <source>Create a subclass of &lt;code&gt;django.contrib.auth.hashers.PBKDF2PasswordHasher&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;django.contrib.auth.hashers.PBKDF2PasswordHasher&lt;/code&gt; のサブクラスを作成します。</target>
        </trans-unit>
        <trans-unit id="b752c6e084b6efe17f993fbe10934f428ec7656e" translate="yes" xml:space="preserve">
          <source>Create a symbolic link to each file instead of copying.</source>
          <target state="translated">コピーではなく、各ファイルへのシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="b08cabfe70f421bd36807a1a99bc3b26ff7e9ce3" translate="yes" xml:space="preserve">
          <source>Create a symbolic link to the admin static files from within your document root (this may require &lt;code&gt;+FollowSymLinks&lt;/code&gt; in your Apache configuration).</source>
          <target state="translated">ドキュメントルート内からadmin静的ファイルへのシンボリックリンクを作成します（これには、Apache構成で &lt;code&gt;+FollowSymLinks&lt;/code&gt; が必要になる場合があります）。</target>
        </trans-unit>
        <trans-unit id="6c3fb40d22a3a9a6c121f6cc44971a526dffb546" translate="yes" xml:space="preserve">
          <source>Create a test database, as described in &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;The test database&lt;/a&gt;.</source>
          <target state="translated">テストデータベースの説明に従って、テストデータベースを作成し&lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8593879fbb8fbdaa981c410607b1834b6196de0b" translate="yes" xml:space="preserve">
          <source>Create a test to expose the bug</source>
          <target state="translated">バグを公開するためのテストを作成する</target>
        </trans-unit>
        <trans-unit id="a8c5a3c03ddfcf8c589b3f218a2a3ff0c9214390" translate="yes" xml:space="preserve">
          <source>Create a view that can set the current timezone:</source>
          <target state="translated">現在のタイムゾーンを設定できるビューを作成します。</target>
        </trans-unit>
        <trans-unit id="a4537affcd2696306e2ca6cd704323f72090d7e6" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;Article&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Article&lt;/code&gt; 作成：</target>
        </trans-unit>
        <trans-unit id="77283d7b31a87604678318131c2e4fd7ade2e321" translate="yes" xml:space="preserve">
          <source>Create an Article via the Reporter object:</source>
          <target state="translated">Reporterオブジェクトを介して記事を作成します。</target>
        </trans-unit>
        <trans-unit id="1f090dffea140d5e0d0950a1320f5ed657c94aed" translate="yes" xml:space="preserve">
          <source>Create an Article:</source>
          <target state="translated">記事を作成します。</target>
        </trans-unit>
        <trans-unit id="158833a98ff083701681b6601c3740425dc98258" translate="yes" xml:space="preserve">
          <source>Create an admin user:</source>
          <target state="translated">管理者ユーザーを作成します。</target>
        </trans-unit>
        <trans-unit id="8357f0e20d9e4d86bb2f611b84223b374e8ad2e3" translate="yes" xml:space="preserve">
          <source>Create and add a &lt;code&gt;Publication&lt;/code&gt; to an &lt;code&gt;Article&lt;/code&gt; in one step using &lt;a href=&quot;../../../ref/models/relations#django.db.models.fields.related.RelatedManager.create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../../ref/models/relations#django.db.models.fields.related.RelatedManager.create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; &lt;/a&gt;を使用して、1ステップで &lt;code&gt;Publication&lt;/code&gt; を作成して &lt;code&gt;Article&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="b5961a59feb5d12c74a29c20edc10106800d8f25" translate="yes" xml:space="preserve">
          <source>Create another &lt;code&gt;Article&lt;/code&gt;, and set it to appear in the &lt;code&gt;Publications&lt;/code&gt;:</source>
          <target state="translated">別の &lt;code&gt;Article&lt;/code&gt; を作成し、 &lt;code&gt;Publications&lt;/code&gt; に表示されるように設定します。</target>
        </trans-unit>
        <trans-unit id="d6fb6c99afc76608b4ddc291508c26a6a9320973" translate="yes" xml:space="preserve">
          <source>Create database superuser</source>
          <target state="translated">データベースのスーパーユーザーを作成します。</target>
        </trans-unit>
        <trans-unit id="d45c5127fd242961eee62589553d6b669c2161d9" translate="yes" xml:space="preserve">
          <source>Create database user</source>
          <target state="translated">データベースユーザーの作成</target>
        </trans-unit>
        <trans-unit id="1be69eeb874428a25d75295cd26ea503f3fc7a7b" translate="yes" xml:space="preserve">
          <source>Create in bulk</source>
          <target state="translated">一括で作成</target>
        </trans-unit>
        <trans-unit id="78c764ce09f8a1a32911dbbad5dfb8948ccf8554" translate="yes" xml:space="preserve">
          <source>Create individual templates for each type of page, such as a news article or blog entry. These templates extend the appropriate section template.</source>
          <target state="translated">ニュース記事やブログ記事など、ページの種類ごとに個別のテンプレートを作成します。これらのテンプレートは、適切なセクションテンプレートを拡張します。</target>
        </trans-unit>
        <trans-unit id="9be508244621c4025257d5c4ed57c32bd6843783" translate="yes" xml:space="preserve">
          <source>Create superusers using the &lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt;&lt;code&gt;createsuperuser&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt; &lt;code&gt;createsuperuser&lt;/code&gt; &lt;/a&gt;コマンドを使用してスーパーユーザーを作成します。</target>
        </trans-unit>
        <trans-unit id="75cbf1a3d6d218d92d7da86aa0786bb48f474c27" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/bloom.html&quot;&gt;bloom&lt;/a&gt; index.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/bloom.html&quot;&gt;ブルーム&lt;/a&gt;インデックスを作成します。</target>
        </trans-unit>
        <trans-unit id="9548c88189467bc8e5d27c2ff0b7c5841f632284" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/brin-intro.html&quot;&gt;BRIN index&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/brin-intro.html&quot;&gt;BRINインデックスを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="f381aed2b93a22cb8a31f90056580c567d6680e6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/gin.html&quot;&gt;gin index&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/gin.html&quot;&gt;ジンインデックスを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="cd0d8c421e33b77e8d1b0b52ca02f611c0e6a0db" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiST index&lt;/a&gt;. These indexes are automatically created on spatial fields with &lt;a href=&quot;../gis/model-api#django.contrib.gis.db.models.BaseSpatialField.spatial_index&quot;&gt;&lt;code&gt;spatial_index=True&lt;/code&gt;&lt;/a&gt;. They&amp;rsquo;re also useful on other types, such as &lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;fields#range-fields&quot;&gt;range fields&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiSTインデックスを&lt;/a&gt;作成します。これらのインデックスは、&lt;a href=&quot;../gis/model-api#django.contrib.gis.db.models.BaseSpatialField.spatial_index&quot;&gt; &lt;code&gt;spatial_index=True&lt;/code&gt; の&lt;/a&gt;空間フィールドに自動的に作成されます。また、&lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt; &lt;code&gt;HStoreField&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;fields#range-fields&quot;&gt;範囲フィールド&lt;/a&gt;などの他のタイプでも役立ちます。</target>
        </trans-unit>
        <trans-unit id="b02dbfc61b7341045f04743484e677bc6dcec207" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;models/constraints&quot;&gt;constraint&lt;/a&gt; in the database table for the model with &lt;code&gt;model_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;model_name&lt;/code&gt; を持つモデルのデータベーステーブルに&lt;a href=&quot;models/constraints&quot;&gt;制約&lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="5eb14c736a29cc2dbf86895673bfd6d47e4dc735" translate="yes" xml:space="preserve">
          <source>Creates a B-Tree index.</source>
          <target state="translated">B-Treeインデックスを作成します。</target>
        </trans-unit>
        <trans-unit id="2a7c7f84568f72db3fea6457ea22d98854b80373" translate="yes" xml:space="preserve">
          <source>Creates a Django app directory structure for the given app name in the current directory or the given destination.</source>
          <target state="translated">カレントディレクトリまたは指定した宛先に、指定したアプリ名の Django アプリのディレクトリ構造を作成します。</target>
        </trans-unit>
        <trans-unit id="f32bd7032c626239ea32443c559faef167069770" translate="yes" xml:space="preserve">
          <source>Creates a Django project directory structure for the given project name in the current directory or the given destination.</source>
          <target state="translated">カレントディレクトリまたは指定した宛先に、指定したプロジェクト名の Django プロジェクトディレクトリ構造体を作成します。</target>
        </trans-unit>
        <trans-unit id="45d99ffeb785883294c3f3203a3da5bce039607d" translate="yes" xml:space="preserve">
          <source>Creates a TagURI.</source>
          <target state="translated">TagURIを作成します。</target>
        </trans-unit>
        <trans-unit id="9f78e51b846cf73a7aaa147eeba963c89d7cc72c" translate="yes" xml:space="preserve">
          <source>Creates a check constraint in the database.</source>
          <target state="translated">データベースにチェック制約を作成します。</target>
        </trans-unit>
        <trans-unit id="12bb29704eded64208661d06e4cebe63fc65c39b" translate="yes" xml:space="preserve">
          <source>Creates a hash index.</source>
          <target state="translated">ハッシュインデックスを作成します。</target>
        </trans-unit>
        <trans-unit id="1e260254fcc4aef5a236d5db7dd145e94b64f7ee" translate="yes" xml:space="preserve">
          <source>Creates a hashed password in the format used by this application. It takes one mandatory argument: the password in plain-text (string or bytes). Optionally, you can provide a salt and a hashing algorithm to use, if you don&amp;rsquo;t want to use the defaults (first entry of &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; setting). See &lt;a href=&quot;#auth-included-hashers&quot;&gt;Included hashers&lt;/a&gt; for the algorithm name of each hasher. If the password argument is &lt;code&gt;None&lt;/code&gt;, an unusable password is returned (one that will never be accepted by &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このアプリケーションで使用される形式でハッシュ化されたパスワードを作成します。必須の引数が1つあります。プレーンテキスト（文字列またはバイト）のパスワードです。オプションで、デフォルト（ &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; 設定の最初のエントリ）を使用したくない場合は、使用するソルトとハッシュアルゴリズムを提供できます。各ハッシャーのアルゴリズム名については、&lt;a href=&quot;#auth-included-hashers&quot;&gt;含まれているハッシャー&lt;/a&gt;を参照してください。 password引数が &lt;code&gt;None&lt;/code&gt; の場合、使用できないパスワードが返されます（&lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; &lt;/a&gt;によって受け入れられることはありません）。</target>
        </trans-unit>
        <trans-unit id="fb6aa02cf5c64f9d47682d2c2901e941da826eac" translate="yes" xml:space="preserve">
          <source>Creates a hashed password in the format used by this application. It takes one mandatory argument: the password in plain-text. Optionally, you can provide a salt and a hashing algorithm to use, if you don&amp;rsquo;t want to use the defaults (first entry of &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; setting). See &lt;a href=&quot;#auth-included-hashers&quot;&gt;Included hashers&lt;/a&gt; for the algorithm name of each hasher. If the password argument is &lt;code&gt;None&lt;/code&gt;, an unusable password is returned (one that will never be accepted by &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このアプリケーションで使用される形式でハッシュされたパスワードを作成します。必須の引数は1つです。プレーンテキストのパスワードです。オプションで、デフォルト（ &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; 設定の最初のエントリ）を使用したくない場合は、使用するソルトおよびハッシュアルゴリズムを指定できます。各ハッシュのアルゴリズム名については、&lt;a href=&quot;#auth-included-hashers&quot;&gt;含まれるハッシュ&lt;/a&gt;を参照してください。password引数が &lt;code&gt;None&lt;/code&gt; の場合、使用できないパスワードが返されます（&lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt; &lt;code&gt;check_password()&lt;/code&gt; で&lt;/a&gt;受け入れられないパスワード）。</target>
        </trans-unit>
        <trans-unit id="b78e89aaeca64ba3da457955f23f3a3a928f2b14" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;QueryDict&lt;/code&gt; with keys from &lt;code&gt;iterable&lt;/code&gt; and each value equal to &lt;code&gt;value&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; のキーと各値がvalueに等しい新しい &lt;code&gt;QueryDict&lt;/code&gt; を作成し &lt;code&gt;value&lt;/code&gt; 。例えば：</target>
        </trans-unit>
        <trans-unit id="4ae9fbfa0e913cc0db15894d0bd21272e2b5eac7" translate="yes" xml:space="preserve">
          <source>Creates a new model in the project history and a corresponding table in the database to match it.</source>
          <target state="translated">プロジェクト履歴に新しいモデルを作成し、それに対応するテーブルをデータベースに作成します。</target>
        </trans-unit>
        <trans-unit id="4f177e523cbd1e4a967daf61de327fffe500db83" translate="yes" xml:space="preserve">
          <source>Creates a new object, saves it and puts it in the related object set. Returns the newly created object.</source>
          <target state="translated">新しいオブジェクトを作成して保存し、関連するオブジェクトセットに配置します。新しく作成したオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="7cb4efef3a42d0671353d7b10e9ca6a2f48171d4" translate="yes" xml:space="preserve">
          <source>Creates a new object, saves it and puts it in the related object set. Returns the newly created object:</source>
          <target state="translated">新しいオブジェクトを作成して保存し、関連するオブジェクトセットに配置します。新しく作成したオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="aa4538cd027e6ee8ee6a7b1d8fbc1183d5bca011" translate="yes" xml:space="preserve">
          <source>Creates a new savepoint. This marks a point in the transaction that is known to be in a &amp;ldquo;good&amp;rdquo; state. Returns the savepoint ID (&lt;code&gt;sid&lt;/code&gt;).</source>
          <target state="translated">新しいセーブポイントを作成します。これは、「良好」な状態であることがわかっているトランザクションのポイントを示します。セーブポイントID（ &lt;code&gt;sid&lt;/code&gt; ）を返します。</target>
        </trans-unit>
        <trans-unit id="f013a1612ce6541c295c9ae15dc5c5c204a8074e" translate="yes" xml:space="preserve">
          <source>Creates a new session key while retaining the current session data. &lt;a href=&quot;../auth/default#django.contrib.auth.login&quot;&gt;&lt;code&gt;django.contrib.auth.login()&lt;/code&gt;&lt;/a&gt; calls this method to mitigate against session fixation.</source>
          <target state="translated">現在のセッションデータを保持しながら、新しいセッションキーを作成します。&lt;a href=&quot;../auth/default#django.contrib.auth.login&quot;&gt; &lt;code&gt;django.contrib.auth.login()&lt;/code&gt; &lt;/a&gt;はこのメソッドを呼び出して、セッションの固定を軽減します。</target>
        </trans-unit>
        <trans-unit id="4485653708a9a212a2a670464db8bd58b5f9235f" translate="yes" xml:space="preserve">
          <source>Creates a new table in the database for the provided model, along with any unique constraints or indexes it requires.</source>
          <target state="translated">提供されたモデルのデータベース内に、必要な一意の制約やインデックスとともに新しいテーブルを作成します。</target>
        </trans-unit>
        <trans-unit id="690894dd489984a4e9e7d1a6b1183f1002394336" translate="yes" xml:space="preserve">
          <source>Creates a new test database and runs &lt;code&gt;migrate&lt;/code&gt; against it.</source>
          <target state="translated">新しいテストデータベースを作成し、それに対して &lt;code&gt;migrate&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="9b93852da7c8fc97833695d125f0f3f933e545a1" translate="yes" xml:space="preserve">
          <source>Creates a superuser account (a user who has all permissions). This is useful if you need to create an initial superuser account or if you need to programmatically generate superuser accounts for your site(s).</source>
          <target state="translated">スーパーユーザーアカウント(すべての権限を持つユーザー)を作成します。これは、初期のスーパーユーザーアカウントを作成する必要がある場合や、サイトのスーパーユーザーアカウントをプログラムで生成する必要がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="c6171d2295e7c0ed48e71dd0870d4e2cbd8166d2" translate="yes" xml:space="preserve">
          <source>Creates a unique constraint in the database.</source>
          <target state="translated">データベース内に一意の制約を作成します。</target>
        </trans-unit>
        <trans-unit id="0432bace35ccd073e6bfa597655a54d9a70552cf" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;https://www.postgresql.org/docs/current/spgist.html&quot;&gt;SP-GiST index&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/spgist.html&quot;&gt;SP-GiSTインデックスを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="6255ebbbe9adb4991648c436b550cb9a2e8659e9" translate="yes" xml:space="preserve">
          <source>Creates an exclusion constraint in the database. Internally, PostgreSQL implements exclusion constraints using indexes. The default index type is &lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiST&lt;/a&gt;. To use them, you need to activate the &lt;a href=&quot;https://www.postgresql.org/docs/current/btree-gist.html&quot;&gt;btree_gist extension&lt;/a&gt; on PostgreSQL. You can install it using the &lt;a href=&quot;operations#django.contrib.postgres.operations.BtreeGistExtension&quot;&gt;&lt;code&gt;BtreeGistExtension&lt;/code&gt;&lt;/a&gt; migration operation.</source>
          <target state="translated">データベースに除外制約を作成します。内部的には、PostgreSQLはインデックスを使用して除外制約を実装しています。デフォルトのインデックスタイプは&lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiST&lt;/a&gt;です。それらを使用するには、PostgreSQLで&lt;a href=&quot;https://www.postgresql.org/docs/current/btree-gist.html&quot;&gt;btree_gist拡張機能&lt;/a&gt;をアクティブにする必要があります。&lt;a href=&quot;operations#django.contrib.postgres.operations.BtreeGistExtension&quot;&gt; &lt;code&gt;BtreeGistExtension&lt;/code&gt; &lt;/a&gt;移行操作を使用してインストールできます。</target>
        </trans-unit>
        <trans-unit id="3ca67befda87ce2fda3dd3950101215522015c64" translate="yes" xml:space="preserve">
          <source>Creates an index (B-Tree) in the database.</source>
          <target state="translated">データベースにインデックス(B-Tree)を作成します。</target>
        </trans-unit>
        <trans-unit id="d8b3cc3f024f4e12818a480c9e9785fdcf0107b1" translate="yes" xml:space="preserve">
          <source>Creates an index in the database table for the model with &lt;code&gt;model_name&lt;/code&gt;. &lt;code&gt;index&lt;/code&gt; is an instance of the &lt;a href=&quot;models/indexes#django.db.models.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;model_name&lt;/code&gt; を持つモデルのデータベーステーブルにインデックスを作成します。 &lt;code&gt;index&lt;/code&gt; は&lt;a href=&quot;models/indexes#django.db.models.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt;クラスのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="22dc22ec0c579bf515148241adf4483ee78f0136" translate="yes" xml:space="preserve">
          <source>Creates new migrations based on the changes detected to your models. Migrations, their relationship with apps and more are covered in depth in &lt;a href=&quot;../topics/migrations&quot;&gt;the migrations documentation&lt;/a&gt;.</source>
          <target state="translated">モデルに対して検出された変更に基づいて、新しい移行を作成します。移行、アプリとの関係などは&lt;a href=&quot;../topics/migrations&quot;&gt;、移行のドキュメント&lt;/a&gt;で詳しく説明されています。</target>
        </trans-unit>
        <trans-unit id="e44c7ea385ebbd1c0a0c07cca93a77a36329518e" translate="yes" xml:space="preserve">
          <source>Creates the cache tables for use with the database cache backend using the information from your settings file. See &lt;a href=&quot;../topics/cache&quot;&gt;Django&amp;rsquo;s cache framework&lt;/a&gt; for more information.</source>
          <target state="translated">設定ファイルの情報を使用して、データベースキャッシュバックエンドで使用するキャッシュテーブルを作成します。詳細については、&lt;a href=&quot;../topics/cache&quot;&gt;Djangoのキャッシュフレームワーク&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="665cbad6c4bddc0850c0907d819287e4f9d308cc" translate="yes" xml:space="preserve">
          <source>Creates the test databases by calling &lt;a href=&quot;#django.test.utils.setup_databases&quot;&gt;&lt;code&gt;setup_databases()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.test.utils.setup_databases&quot;&gt; &lt;code&gt;setup_databases()&lt;/code&gt; を&lt;/a&gt;呼び出して、テストデータベースを作成します。</target>
        </trans-unit>
        <trans-unit id="dc5f8bf67baa52fb48d7ca9908450a8e72262521" translate="yes" xml:space="preserve">
          <source>Creates the test databases.</source>
          <target state="translated">テストデータベースを作成します。</target>
        </trans-unit>
        <trans-unit id="0cf695e3de3dd650d5db2268e0ef4baac788c0d1" translate="yes" xml:space="preserve">
          <source>Creates, saves and returns a &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt; &lt;code&gt;User&lt;/code&gt; を&lt;/a&gt;作成、保存、および返します。</target>
        </trans-unit>
        <trans-unit id="88c041c8a70d85777d315ae6afd1da67e5a999b3" translate="yes" xml:space="preserve">
          <source>Creating a Geometry</source>
          <target state="translated">ジオメトリの作成</target>
        </trans-unit>
        <trans-unit id="a012943df6a903338b4bce23d7744d51b328aab1" translate="yes" xml:space="preserve">
          <source>Creating a branch for your patch</source>
          <target state="translated">パッチ用のブランチを作成する</target>
        </trans-unit>
        <trans-unit id="e3ac0bbfeabf829a00d633027731ed91312a2d0b" translate="yes" xml:space="preserve">
          <source>Creating a custom database-backed session engine built upon those included in Django (namely &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;cached_db&lt;/code&gt;) may be done by inheriting &lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession&quot;&gt;&lt;code&gt;AbstractBaseSession&lt;/code&gt;&lt;/a&gt; and either &lt;code&gt;SessionStore&lt;/code&gt; class.</source>
          <target state="translated">Djangoに含まれているもの（つまり &lt;code&gt;db&lt;/code&gt; と &lt;code&gt;cached_db&lt;/code&gt; ）に基づいて構築された、データベースに基づくカスタムのセッションエンジンを作成するには、&lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession&quot;&gt; &lt;code&gt;AbstractBaseSession&lt;/code&gt; &lt;/a&gt;といずれかの &lt;code&gt;SessionStore&lt;/code&gt; クラスを継承します。</target>
        </trans-unit>
        <trans-unit id="b334b10ec50ac715d436250767c44b095c5a98f5" translate="yes" xml:space="preserve">
          <source>Creating a manager with &lt;code&gt;QuerySet&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;QuerySet&lt;/code&gt; メソッドでマネージャーを作成する</target>
        </trans-unit>
        <trans-unit id="5939e7cb6944753c61d1e6772b8d56e4ad2da782" translate="yes" xml:space="preserve">
          <source>Creating a new table with the new schema</source>
          <target state="translated">新しいスキーマで新しいテーブルを作成する</target>
        </trans-unit>
        <trans-unit id="91b3670f50a7235a62e631529cda3b62ff015b13" translate="yes" xml:space="preserve">
          <source>Creating a project</source>
          <target state="translated">プロジェクトの作成</target>
        </trans-unit>
        <trans-unit id="ae3507fab0949d23f3a095d2878623ff305932dd" translate="yes" xml:space="preserve">
          <source>Creating a sitemap index</source>
          <target state="translated">サイトマップインデックスの作成</target>
        </trans-unit>
        <trans-unit id="9c7399a4c6eb88ee627587c0862477cf8a4228ed" translate="yes" xml:space="preserve">
          <source>Creating a spatial database</source>
          <target state="translated">空間データベースの作成</target>
        </trans-unit>
        <trans-unit id="e0f0a5eead71b6037196acbef32fb4ac3bc05e90" translate="yes" xml:space="preserve">
          <source>Creating an admin user</source>
          <target state="translated">管理者ユーザーの作成</target>
        </trans-unit>
        <trans-unit id="954917ae5dbe89de69077e2886f8434619b628a6" translate="yes" xml:space="preserve">
          <source>Creating and Saving Models with Geometry Fields</source>
          <target state="translated">ジオメトリフィールドを使用したモデルの作成と保存</target>
        </trans-unit>
        <trans-unit id="9f5cdb3bb448987a114553188202f13903780b1d" translate="yes" xml:space="preserve">
          <source>Creating and Saving Models with Raster Fields</source>
          <target state="translated">ラスターフィールドを使用したモデルの作成と保存</target>
        </trans-unit>
        <trans-unit id="72003e01f0de72fbeb595f21b715e4efdeac07ef" translate="yes" xml:space="preserve">
          <source>Creating custom fields</source>
          <target state="translated">カスタムフィールドの作成</target>
        </trans-unit>
        <trans-unit id="ce541594802bd28d7639b5d94a81fb523b07d71f" translate="yes" xml:space="preserve">
          <source>Creating custom fields requires a bit of attention to detail. To make things easier to follow, we&amp;rsquo;ll use a consistent example throughout this document: wrapping a Python object representing the deal of cards in a hand of &lt;a href=&quot;https://en.wikipedia.org/wiki/Contract_bridge&quot;&gt;Bridge&lt;/a&gt;. Don&amp;rsquo;t worry, you don&amp;rsquo;t have to know how to play Bridge to follow this example. You only need to know that 52 cards are dealt out equally to four players, who are traditionally called &lt;em&gt;north&lt;/em&gt;, &lt;em&gt;east&lt;/em&gt;, &lt;em&gt;south&lt;/em&gt; and &lt;em&gt;west&lt;/em&gt;. Our class looks something like this:</source>
          <target state="translated">カスタムフィールドを作成するには、細部に注意を払う必要があります。わかりやすくするために、このドキュメントでは一貫した例を使用します。つまり、&lt;a href=&quot;https://en.wikipedia.org/wiki/Contract_bridge&quot;&gt;Bridgeの&lt;/a&gt;手札でカードの配りを表すPythonオブジェクトをラップします。心配しないでください。この例に従うためにBridgeをプレイする方法を知っている必要はありません。52枚のカードが4人のプレイヤーに均等に配られることを知っておく必要があるだけです。これは、伝統的に&lt;em&gt;North&lt;/em&gt;、&lt;em&gt;East&lt;/em&gt;、&lt;em&gt;South&lt;/em&gt;、&lt;em&gt;West&lt;/em&gt;と呼ばれています。クラスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="acbeb8134b5a6061594f1df56020a10612b04b71" translate="yes" xml:space="preserve">
          <source>Creating custom format files</source>
          <target state="translated">カスタムフォーマットファイルの作成</target>
        </trans-unit>
        <trans-unit id="ca77bb5dfa9f39d7a4e9411a577a470573f94838" translate="yes" xml:space="preserve">
          <source>Creating custom message levels</source>
          <target state="translated">カスタムメッセージレベルの作成</target>
        </trans-unit>
        <trans-unit id="e7feb970cca7b1f942f20a158ae612616deab8db" translate="yes" xml:space="preserve">
          <source>Creating extension using migrations</source>
          <target state="translated">マイグレーションを使った拡張機能の作成</target>
        </trans-unit>
        <trans-unit id="4a56e9cf3ae3d2cdb8bd07958069bd475dccd3b1" translate="yes" xml:space="preserve">
          <source>Creating forms from models</source>
          <target state="translated">モデルからフォームを作成する</target>
        </trans-unit>
        <trans-unit id="969eec4f6cf8a8c1e4c5617688c5ad7be4f5510d" translate="yes" xml:space="preserve">
          <source>Creating message files from JavaScript source code</source>
          <target state="translated">JavaScriptのソースコードからメッセージファイルを作成する</target>
        </trans-unit>
        <trans-unit id="9dd203b744dc0d8a93e73770a9a6ac69a6431673" translate="yes" xml:space="preserve">
          <source>Creating models</source>
          <target state="translated">モデルの作成</target>
        </trans-unit>
        <trans-unit id="d8dd4d67f3136087378e105e7c5e653955a5db29" translate="yes" xml:space="preserve">
          <source>Creating objects</source>
          <target state="translated">オブジェクトの作成</target>
        </trans-unit>
        <trans-unit id="17e81bea9a3bc4d898b37eb16f1adfe3db7dd89b" translate="yes" xml:space="preserve">
          <source>Creating projects with a local copy of Django</source>
          <target state="translated">Django のローカルコピーでプロジェクトを作成する</target>
        </trans-unit>
        <trans-unit id="48b66b7011f4bde37feb7c9d332a71f93e6e15fd" translate="yes" xml:space="preserve">
          <source>Creating rasters from data</source>
          <target state="translated">データからラスタを作成する</target>
        </trans-unit>
        <trans-unit id="b3e2c12e9d256bf5bb2adfdc8ac559faebf19c45" translate="yes" xml:space="preserve">
          <source>Creating superusers</source>
          <target state="translated">スーパーユーザの作成</target>
        </trans-unit>
        <trans-unit id="316db80e3c8f8c069308c64646646d3c1ed208c4" translate="yes" xml:space="preserve">
          <source>Creating the &lt;code&gt;flatpages/default.html&lt;/code&gt; template is your responsibility; in your template directory, create a &lt;code&gt;flatpages&lt;/code&gt; directory containing a file &lt;code&gt;default.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;flatpages/default.html&lt;/code&gt; テンプレートを作成するのはあなたの責任です。テンプレートディレクトリに、ファイル &lt;code&gt;default.html&lt;/code&gt; を含む &lt;code&gt;flatpages&lt;/code&gt; ディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="a24db0799c6388c618a6772dcb8b0e502ce12b18" translate="yes" xml:space="preserve">
          <source>Creating the Polls app</source>
          <target state="translated">Pollsアプリの作成</target>
        </trans-unit>
        <trans-unit id="a424e3061938a1c7264e464015df539f5f35a479" translate="yes" xml:space="preserve">
          <source>Creating the cache table</source>
          <target state="translated">キャッシュテーブルの作成</target>
        </trans-unit>
        <trans-unit id="76c1964da47d78a7495311d193f8a06d10455d63" translate="yes" xml:space="preserve">
          <source>Creating the database</source>
          <target state="translated">データベースの作成</target>
        </trans-unit>
        <trans-unit id="5b7d1516d4d52631df2921a31867c57b01d73cb0" translate="yes" xml:space="preserve">
          <source>Creating the extension requires a database user with superuser privileges. If the Django database user doesn&amp;rsquo;t have superuser privileges, you&amp;rsquo;ll have to create the extension outside of Django migrations with a user that has the appropriate privileges. In that case, connect to your Django database and run the query &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt;.</source>
          <target state="translated">拡張機能を作成するには、スーパーユーザー権限を持つデータベースユーザーが必要です。Djangoデータベースユーザーにスーパーユーザー権限がない場合は、適切な権限を持つユーザーを使用して、Django移行の外部で拡張機能を作成する必要があります。その場合、Djangoデータベースに接続し、クエリ &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt; を実行します。。</target>
        </trans-unit>
        <trans-unit id="1474add844b8d610df5ac31c608f7496f6713b64" translate="yes" xml:space="preserve">
          <source>Creating the test databases.</source>
          <target state="translated">テストデータベースの作成</target>
        </trans-unit>
        <trans-unit id="02c7734d51f5945b8a2dd287727468112306b2af" translate="yes" xml:space="preserve">
          <source>Creating users</source>
          <target state="translated">ユーザーの作成</target>
        </trans-unit>
        <trans-unit id="2a52fdb554c0b801da7c3eae7c4f5265155f4b3b" translate="yes" xml:space="preserve">
          <source>Creating your database</source>
          <target state="translated">データベースの作成</target>
        </trans-unit>
        <trans-unit id="c1014cd317ecbb2fec70d0fa6ce28f5d56cbb36e" translate="yes" xml:space="preserve">
          <source>Creating your own Aggregate Functions</source>
          <target state="translated">独自の集計関数の作成</target>
        </trans-unit>
        <trans-unit id="2e9d7c32120688686aa04670ec6251c31650a1e7" translate="yes" xml:space="preserve">
          <source>Creating your own settings</source>
          <target state="translated">独自の設定を作成する</target>
        </trans-unit>
        <trans-unit id="6744d9ba1de7954fd781114b86522f4b93adb12c" translate="yes" xml:space="preserve">
          <source>Creating your tables</source>
          <target state="translated">テーブルの作成</target>
        </trans-unit>
        <trans-unit id="eff357cce9a0a5f5bff4688a6da86e63d71eea13" translate="yes" xml:space="preserve">
          <source>Critical settings</source>
          <target state="translated">重要な設定</target>
        </trans-unit>
        <trans-unit id="077e062460ee115e1c2f6aac42d1ad832a11e84f" translate="yes" xml:space="preserve">
          <source>Cross Site Request Forgery Protection</source>
          <target state="translated">クロスサイトリクエストの偽造防止</target>
        </trans-unit>
        <trans-unit id="5f70d1cefbd406afc170b973d0f71da95cb60e55" translate="yes" xml:space="preserve">
          <source>Cross Site Request Forgery protection</source>
          <target state="translated">クロスサイトリクエストの偽造防止</target>
        </trans-unit>
        <trans-unit id="ca769b18247e31e844721a8791a9053580f01c16" translate="yes" xml:space="preserve">
          <source>Cross site request forgery (CSRF) protection</source>
          <target state="translated">クロスサイトリクエストフォージェリ(CSRF)の保護</target>
        </trans-unit>
        <trans-unit id="ba1afa128e239ede5b334a8b340909ae6a93eef4" translate="yes" xml:space="preserve">
          <source>Cross site scripting (XSS) protection</source>
          <target state="translated">クロスサイトスクリプティング(XSS)対策</target>
        </trans-unit>
        <trans-unit id="1e8ae290d91743bf028b94ada9cc33cd9e885b0b" translate="yes" xml:space="preserve">
          <source>Cross-database relations</source>
          <target state="translated">データベース間の関係</target>
        </trans-unit>
        <trans-unit id="01c20fd9203e69e49f5ffc0e43b4b3ae080a2987" translate="yes" xml:space="preserve">
          <source>Cross-platform and tested; compatible with Windows, Linux, Solaris, and macOS platforms.</source>
          <target state="translated">Windows、Linux、Solaris、macOSプラットフォームと互換性があります。</target>
        </trans-unit>
        <trans-unit id="af448d9ae67fe20d525b6963a44b285d81fa8961" translate="yes" xml:space="preserve">
          <source>Cryptographic signing</source>
          <target state="translated">暗号署名</target>
        </trans-unit>
        <trans-unit id="48ad5ed46b83e98b1f48496c5dbaba78ccf3fc52" translate="yes" xml:space="preserve">
          <source>CsrfViewMiddleware.process_view not used</source>
          <target state="translated">CsrfViewMiddleware.process_viewが使用されていません。</target>
        </trans-unit>
        <trans-unit id="d5fbebf6e67e3e1ae730183343a6393734e72929" translate="yes" xml:space="preserve">
          <source>Currently available feed types are:</source>
          <target state="translated">現在利用可能な飼料の種類は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="95d2f57cbe72d8a6d36d4f4a4aaeca0e841b4270" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;, and &lt;code&gt;mysql&lt;/code&gt; database backends support &lt;code&gt;select_for_update()&lt;/code&gt;. However, MariaDB 10.3+ supports only the &lt;code&gt;nowait&lt;/code&gt; argument and MySQL 8.0.1+ supports the &lt;code&gt;nowait&lt;/code&gt; and &lt;code&gt;skip_locked&lt;/code&gt; arguments. MySQL and MariaDB don&amp;rsquo;t support the &lt;code&gt;of&lt;/code&gt; argument.</source>
          <target state="translated">現在、 &lt;code&gt;postgresql&lt;/code&gt; 、 &lt;code&gt;oracle&lt;/code&gt; 、および &lt;code&gt;mysql&lt;/code&gt; データベースのバックエンドは &lt;code&gt;select_for_update()&lt;/code&gt; をサポートしています。ただし、MariaDB 10.3+は &lt;code&gt;nowait&lt;/code&gt; 引数のみをサポートし、MySQL 8.0.1+はnowait引数と &lt;code&gt;skip_locked&lt;/code&gt; 引数をサポートし &lt;code&gt;nowait&lt;/code&gt; 。MySQLとMariaDBは &lt;code&gt;of&lt;/code&gt; 引数をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="a5a651f190cc76355c6140c82a3b0a49ea508064" translate="yes" xml:space="preserve">
          <source>Custom Lookups</source>
          <target state="translated">カスタムルックアップ</target>
        </trans-unit>
        <trans-unit id="fb55fd2a8a225de55cc2a7c151116ab885d289d0" translate="yes" xml:space="preserve">
          <source>Custom auth backends can provide their own permissions.</source>
          <target state="translated">カスタムauthバックエンドは、独自のパーミッションを提供することができます。</target>
        </trans-unit>
        <trans-unit id="e3fd71a31afaaf057b0fedc28ba72336f1780a64" translate="yes" xml:space="preserve">
          <source>Custom backends</source>
          <target state="translated">カスタムバックエンド</target>
        </trans-unit>
        <trans-unit id="2be73c4a40287493a1331f1847137608f03f7db5" translate="yes" xml:space="preserve">
          <source>Custom context processors can live anywhere in your code base. All Django cares about is that your custom context processors are pointed to by the &lt;code&gt;'context_processors'&lt;/code&gt; option in your &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting &amp;mdash; or the &lt;code&gt;context_processors&lt;/code&gt; argument of &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;re using it directly.</source>
          <target state="translated">カスタムコンテキストプロセッサは、コードベースのどこにでも置くことができます。Djangoが気にしているのは、カスタムコンテキストプロセッサが&lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;'context_processors'&lt;/code&gt; オプションによってポイントされることです。設定または直接使用している場合は&lt;a href=&quot;#django.template.Engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;context_processors&lt;/code&gt; 引数ことです。</target>
        </trans-unit>
        <trans-unit id="ee37c1354dec1629641a646e6a662a26d2fe7fa4" translate="yes" xml:space="preserve">
          <source>Custom database types</source>
          <target state="translated">カスタムデータベースの種類</target>
        </trans-unit>
        <trans-unit id="1535f11e4ce90f2db54547b4056b8064b713c8a8" translate="yes" xml:space="preserve">
          <source>Custom default settings</source>
          <target state="translated">カスタムデフォルト設定</target>
        </trans-unit>
        <trans-unit id="1ef9e92f379d2757660afc779e0b3d8dbe9b82f8" translate="yes" xml:space="preserve">
          <source>Custom email backends should subclass &lt;code&gt;BaseEmailBackend&lt;/code&gt; that is located in the &lt;code&gt;django.core.mail.backends.base&lt;/code&gt; module. A custom email backend must implement the &lt;code&gt;send_messages(email_messages)&lt;/code&gt; method. This method receives a list of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instances and returns the number of successfully delivered messages. If your backend has any concept of a persistent session or connection, you should also implement the &lt;code&gt;open()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; methods. Refer to &lt;code&gt;smtp.EmailBackend&lt;/code&gt; for a reference implementation.</source>
          <target state="translated">カスタムメールバックエンドは、サブクラス化しなければならない &lt;code&gt;BaseEmailBackend&lt;/code&gt; に位置しています &lt;code&gt;django.core.mail.backends.base&lt;/code&gt; モジュールを。カスタムのメールバックエンドは、 &lt;code&gt;send_messages(email_messages)&lt;/code&gt; メソッドを実装する必要があります。このメソッドは、&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;インスタンスのリストを受け取り、正常に配信されたメッセージの数を返します。バックエンドに永続的なセッションまたは接続の概念がある場合は、 &lt;code&gt;open()&lt;/code&gt; も実装する必要がありますおよび &lt;code&gt;close()&lt;/code&gt; メソッドます。リファレンス実装については、 &lt;code&gt;smtp.EmailBackend&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="18f6c9004a0f58c43e2c76676784d271eb1f76cc" translate="yes" xml:space="preserve">
          <source>Custom engines can populate the postmortem by passing the &lt;code&gt;backend&lt;/code&gt; and &lt;code&gt;tried&lt;/code&gt; arguments when raising &lt;a href=&quot;#django.template.TemplateDoesNotExist&quot;&gt;&lt;code&gt;TemplateDoesNotExist&lt;/code&gt;&lt;/a&gt;. Backends that use the postmortem &lt;a href=&quot;#template-origin-api&quot;&gt;should specify an origin&lt;/a&gt; on the template object.</source>
          <target state="translated">カスタムエンジンは、 &lt;code&gt;backend&lt;/code&gt; を渡すことで事後分析を行い、発生時に引数を &lt;code&gt;tried&lt;/code&gt; ことができます&lt;a href=&quot;#django.template.TemplateDoesNotExist&quot;&gt; &lt;code&gt;TemplateDoesNotExist&lt;/code&gt; を&lt;/a&gt;ます。事後分析を使用するバックエンドは、テンプレートオブジェクトの&lt;a href=&quot;#template-origin-api&quot;&gt;起点&lt;/a&gt;を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="81a25a8e6aed9a2925206061255c86b1de388d39" translate="yes" xml:space="preserve">
          <source>Custom engines can populate the postmortem by passing the &lt;code&gt;backend&lt;/code&gt; and &lt;code&gt;tried&lt;/code&gt; arguments when raising &lt;a href=&quot;../topics/templates#django.template.TemplateDoesNotExist&quot;&gt;&lt;code&gt;TemplateDoesNotExist&lt;/code&gt;&lt;/a&gt;. Backends that use the postmortem &lt;a href=&quot;#template-origin-api&quot;&gt;should specify an origin&lt;/a&gt; on the template object.</source>
          <target state="translated">カスタムエンジンは、&lt;a href=&quot;../topics/templates#django.template.TemplateDoesNotExist&quot;&gt; &lt;code&gt;TemplateDoesNotExist&lt;/code&gt; を&lt;/a&gt;発生させるときに &lt;code&gt;backend&lt;/code&gt; と &lt;code&gt;tried&lt;/code&gt; 引数を渡すことにより、事後分析を行うことができます。事後分析を使用するバックエンドは、テンプレートオブジェクトの&lt;a href=&quot;#template-origin-api&quot;&gt;起点&lt;/a&gt;を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d6ac55b9a3d90687c34195d8b70d4cf69a5febea" translate="yes" xml:space="preserve">
          <source>Custom engines can populate this information by setting a &lt;code&gt;template_debug&lt;/code&gt; attribute on exceptions raised during parsing and rendering. This attribute is a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; with the following values:</source>
          <target state="translated">カスタムエンジンは、 &lt;code&gt;template_debug&lt;/code&gt; を設定してこの情報を入力できます解析およびレンダリング中に発生した例外に属性をます。この属性は、次の値を持つ&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="05f55c6087b7d0fc860401a848392486f9b03383" translate="yes" xml:space="preserve">
          <source>Custom engines can provide their own &lt;code&gt;template.origin&lt;/code&gt; information by creating an object that specifies the following attributes:</source>
          <target state="translated">カスタムエンジンは、次の属性を指定するオブジェクトを作成することにより、独自の &lt;code&gt;template.origin&lt;/code&gt; 情報を提供できます。</target>
        </trans-unit>
        <trans-unit id="5c58b5a78913f05fa5d6ac67ed7e5e59a11f36b5" translate="yes" xml:space="preserve">
          <source>Custom error reports</source>
          <target state="translated">カスタムエラーレポート</target>
        </trans-unit>
        <trans-unit id="30bee706b2d9ec29c0ffddaa871393f8bddb224e" translate="yes" xml:space="preserve">
          <source>Custom feed generators</source>
          <target state="translated">カスタムフィードジェネレーター</target>
        </trans-unit>
        <trans-unit id="0a85f7cef3e205a4fbccb0b642f3559efc61e223" translate="yes" xml:space="preserve">
          <source>Custom field types</source>
          <target state="translated">カスタムフィールドの種類</target>
        </trans-unit>
        <trans-unit id="d1f86d5227e987ad9feec36387a01f71ac50987e" translate="yes" xml:space="preserve">
          <source>Custom fields</source>
          <target state="translated">カスタムフィールド</target>
        </trans-unit>
        <trans-unit id="e221cc8d1a9e92d6aaa4eb1a13752833406d8e36" translate="yes" xml:space="preserve">
          <source>Custom file upload handlers &lt;strong&gt;must&lt;/strong&gt; define the following methods:</source>
          <target state="translated">カスタムファイルアップロードハンドラー &lt;strong&gt;は&lt;/strong&gt;、次のメソッドを定義する&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3507087d35d153b74458d38f43020e6a1205c49a" translate="yes" xml:space="preserve">
          <source>Custom filters are Python functions that take one or two arguments:</source>
          <target state="translated">カスタムフィルタは、1つまたは2つの引数を取るPythonの関数です。</target>
        </trans-unit>
        <trans-unit id="c8f15c93f34d7ec5419aeb82c99cce621b3938cc" translate="yes" xml:space="preserve">
          <source>Custom formset validation</source>
          <target state="translated">カスタムフォームセットの検証</target>
        </trans-unit>
        <trans-unit id="0f9115d0af9c57a289022b399c4e423ec502f5f7" translate="yes" xml:space="preserve">
          <source>Custom keyword arguments may be defined on this method if it&amp;rsquo;s likely that &lt;code&gt;as_vendorname()&lt;/code&gt; methods or subclasses will need to supply data to override the generation of the SQL string. See &lt;a href=&quot;expressions#django.db.models.Func.as_sql&quot;&gt;&lt;code&gt;Func.as_sql()&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="translated">&lt;code&gt;as_vendorname()&lt;/code&gt; メソッドまたはサブクラスがSQL文字列の生成をオーバーライドするためにデータを提供する必要がある可能性がある場合は、このメソッドでカスタムキーワード引数を定義できます。見る&lt;a href=&quot;expressions#django.db.models.Func.as_sql&quot;&gt; &lt;code&gt;Func.as_sql()&lt;/code&gt; &lt;/a&gt;使用例 Func.as_sql（）を。</target>
        </trans-unit>
        <trans-unit id="b0b11a4419497bb0e675cb189e1117988dca84c3" translate="yes" xml:space="preserve">
          <source>Custom libraries and template inheritance</source>
          <target state="translated">カスタムライブラリとテンプレートの継承</target>
        </trans-unit>
        <trans-unit id="ad60e6ef93acdf368b01f33eba1a92718aa542bf" translate="yes" xml:space="preserve">
          <source>Custom loaders</source>
          <target state="translated">カスタムローダー</target>
        </trans-unit>
        <trans-unit id="b88824670ecea4ff8e6f4960a2c9988b136992f4" translate="yes" xml:space="preserve">
          <source>Custom logging configuration</source>
          <target state="translated">カスタムロギング設定</target>
        </trans-unit>
        <trans-unit id="b4bdeb3e6f85e8f055ed8b15db2b73e9d8da8842" translate="yes" xml:space="preserve">
          <source>Custom management commands are especially useful for running standalone scripts or for scripts that are periodically executed from the UNIX crontab or from Windows scheduled tasks control panel.</source>
          <target state="translated">カスタム管理コマンドは、スタンドアロンのスクリプトを実行したり、UNIXのフロントタブやWindowsのスケジュールされたタスクコントロールパネルから定期的に実行されるスクリプトを実行する場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="2822eba7bc80f4ec79b68e44cabc44c607f7b494" translate="yes" xml:space="preserve">
          <source>Custom managers</source>
          <target state="translated">カスタムマネージャー</target>
        </trans-unit>
        <trans-unit id="0229e5fe0e5e381a67fad47ed67e29a333a67bbc" translate="yes" xml:space="preserve">
          <source>Custom managers and model inheritance</source>
          <target state="translated">カスタムマネージャとモデルの継承</target>
        </trans-unit>
        <trans-unit id="0ac0aaaaa8bf55e8fcc051ed1bc33ea819de9179" translate="yes" xml:space="preserve">
          <source>Custom permissions</source>
          <target state="translated">カスタムパーミッション</target>
        </trans-unit>
        <trans-unit id="a6ce10dca02502825ea353d8ad2a72922bc1dbe0" translate="yes" xml:space="preserve">
          <source>Custom prefetching also works with single related relations like forward &lt;code&gt;ForeignKey&lt;/code&gt; or &lt;code&gt;OneToOneField&lt;/code&gt;. Generally you&amp;rsquo;ll want to use &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; for these relations, but there are a number of cases where prefetching with a custom &lt;code&gt;QuerySet&lt;/code&gt; is useful:</source>
          <target state="translated">カスタムプリフェッチは、Forward &lt;code&gt;ForeignKey&lt;/code&gt; や &lt;code&gt;OneToOneField&lt;/code&gt; などの単一の関連リレーションでも機能します。通常は、&lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt; &lt;code&gt;select_related()&lt;/code&gt; &lt;/a&gt;を使用しますこれらの関係のために、しかし、カスタムでプリフェッチ例数がある &lt;code&gt;QuerySet&lt;/code&gt; 便利ですが。</target>
        </trans-unit>
        <trans-unit id="37c5481ba8c25b2841bd54c8e789627babfd6a75" translate="yes" xml:space="preserve">
          <source>Custom response classes</source>
          <target state="translated">カスタムレスポンスクラス</target>
        </trans-unit>
        <trans-unit id="d978bae51d9a07ba9a42f06526b5a0e62deff5b6" translate="yes" xml:space="preserve">
          <source>Custom serializers</source>
          <target state="translated">カスタムシリアライザ</target>
        </trans-unit>
        <trans-unit id="a4d5db0e64d43c816841af4760b3503a8df014b9" translate="yes" xml:space="preserve">
          <source>Custom tag and filter libraries</source>
          <target state="translated">カスタムタグとフィルタライブラリ</target>
        </trans-unit>
        <trans-unit id="bd37afb2eedb12da6144e437b6cfa81eb00b094a" translate="yes" xml:space="preserve">
          <source>Custom template backend</source>
          <target state="translated">カスタムテンプレートのバックエンド</target>
        </trans-unit>
        <trans-unit id="0b909eaa372de99b1bfa2ec89ef400ce7a00ff1a" translate="yes" xml:space="preserve">
          <source>Custom template options</source>
          <target state="translated">カスタムテンプレートオプション</target>
        </trans-unit>
        <trans-unit id="5fa307fdb7131d857af40e2eddcc4de4e06ac8d1" translate="yes" xml:space="preserve">
          <source>Custom template tags and filters</source>
          <target state="translated">カスタムテンプレートのタグとフィルター</target>
        </trans-unit>
        <trans-unit id="c61a6605f4811cc9d97090149fc5df69abce0c7c" translate="yes" xml:space="preserve">
          <source>Custom upload handlers may also define any of the following optional methods or attributes:</source>
          <target state="translated">カスタムアップロードハンドラは、以下のオプションのメソッドまたは属性のいずれかを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="162a6a573415c3572f32590bdc2ec6573f0dbe8b" translate="yes" xml:space="preserve">
          <source>Custom users and &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">カスタムユーザーと &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt; &lt;code&gt;django.contrib.admin&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e32d43732aede79902b22cb4b27558172a2252b1" translate="yes" xml:space="preserve">
          <source>Custom users and permissions</source>
          <target state="translated">カスタムユーザーとパーミッション</target>
        </trans-unit>
        <trans-unit id="9aeca53bc2d2a116fcf245c569267f8484a653b7" translate="yes" xml:space="preserve">
          <source>Custom users and proxy models</source>
          <target state="translated">カスタムユーザーとプロキシモデル</target>
        </trans-unit>
        <trans-unit id="56a51a00699194fce94c928643545fc65dcccbfb" translate="yes" xml:space="preserve">
          <source>Custom users and the built-in auth forms</source>
          <target state="translated">カスタムユーザーと組み込みの認証フォーム</target>
        </trans-unit>
        <trans-unit id="fabd75b6cca0fd38a9ecdc0aea6ae5fd1fe885c8" translate="yes" xml:space="preserve">
          <source>Customization of &lt;code&gt;SessionStore&lt;/code&gt; classes is achieved by overriding methods and properties described below:</source>
          <target state="translated">のカスタマイズ &lt;code&gt;SessionStore&lt;/code&gt; クラスの以下で説明するメソッドとプロパティをオーバーライドすることによって実現されます。</target>
        </trans-unit>
        <trans-unit id="1dad078a37ad8bef94e0172271b5ec7a4f3608af" translate="yes" xml:space="preserve">
          <source>Customize the admin change list</source>
          <target state="translated">管理者変更リストのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="7130d4a0e533172c317c2b9e89ef7b4b3b5bd137" translate="yes" xml:space="preserve">
          <source>Customize the admin form</source>
          <target state="translated">管理画面のカスタマイズ</target>
        </trans-unit>
        <trans-unit id="933af945151e4ceedf9bb41ecde47a78fbebc2e4" translate="yes" xml:space="preserve">
          <source>Customize the admin index page</source>
          <target state="translated">管理者用インデックスページのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="591b656041b888797bfae9fb2fe8a882053f1550" translate="yes" xml:space="preserve">
          <source>Customize the admin look and feel</source>
          <target state="translated">管理者の見た目をカスタマイズする</target>
        </trans-unit>
        <trans-unit id="810838565e0457955a945c498139dfb6b6259a32" translate="yes" xml:space="preserve">
          <source>Customize the default error views</source>
          <target state="translated">デフォルトのエラー表示をカスタマイズする</target>
        </trans-unit>
        <trans-unit id="a3898444d3f84c9e669d871893e8fe7f9620f4c7" translate="yes" xml:space="preserve">
          <source>Customize your &lt;em&gt;app&amp;rsquo;s&lt;/em&gt; look and feel</source>
          <target state="translated">あなたのカスタマイズ &lt;em&gt;アプリの&lt;/em&gt;ルックアンドフィールを</target>
        </trans-unit>
        <trans-unit id="efa94e4fe64bcbe8907e8328b5d0d0f6a8d3eb52" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;BoundField&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BoundField&lt;/code&gt; のカスタマイズ</target>
        </trans-unit>
        <trans-unit id="d115e75e975b1a0fd0f4b1efe3c73b6a0fc7d5c7" translate="yes" xml:space="preserve">
          <source>Customizing Users and authentication</source>
          <target state="translated">ユーザーと認証のカスタマイズ</target>
        </trans-unit>
        <trans-unit id="78638351f2fdd04348732962a65dc250d8123e75" translate="yes" xml:space="preserve">
          <source>Customizing a formset&amp;rsquo;s prefix</source>
          <target state="translated">フォームセットのプレフィックスをカスタマイズする</target>
        </trans-unit>
        <trans-unit id="70436842c132d679ef9f3442db4a8be0781fc782" translate="yes" xml:space="preserve">
          <source>Customizing authentication in Django</source>
          <target state="translated">Django で認証をカスタマイズする</target>
        </trans-unit>
        <trans-unit id="46e1cf12ebd31e82bfa9a678aa4d83140cda8997" translate="yes" xml:space="preserve">
          <source>Customizing error views</source>
          <target state="translated">エラービューのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="1fc6ccecbaf8812fa1f442eeccfa0c013bfa8fcf" translate="yes" xml:space="preserve">
          <source>Customizing model loading</source>
          <target state="translated">モデルの読み込みをカスタマイズする</target>
        </trans-unit>
        <trans-unit id="f4a9bb9c7797c50c59d72bee233376f82a02c53a" translate="yes" xml:space="preserve">
          <source>Customizing the &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt; &lt;code&gt;AdminSite&lt;/code&gt; &lt;/a&gt;クラスのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="1cd4da01000ae81211d191ad888550dec8aa9357" translate="yes" xml:space="preserve">
          <source>Customizing the &lt;code&gt;makemessages&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;makemessages&lt;/code&gt; コマンドのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="debfa4bf14660e4e23669d971a0ff79fbdf1d16f" translate="yes" xml:space="preserve">
          <source>Customizing the error list format</source>
          <target state="translated">エラーリストのフォーマットをカスタマイズする</target>
        </trans-unit>
        <trans-unit id="fe6e7e4cd7c08dea08ed324a1b20112279fb97b3" translate="yes" xml:space="preserve">
          <source>Customizing the ignored pattern list</source>
          <target state="translated">無視されるパターンリストのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="a448ad85fc5db0253551ec0018d98ee240b4e95b" translate="yes" xml:space="preserve">
          <source>Customizing the test client</source>
          <target state="translated">テストクライアントのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="dd1425ebd232b0843c39c03e60e1a5e1eedd84dc" translate="yes" xml:space="preserve">
          <source>Customizing widget instances</source>
          <target state="translated">ウィジェットインスタンスのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="3eca7c367c653950368edc8799d8278f19c04299" translate="yes" xml:space="preserve">
          <source>Customizing your &lt;em&gt;application&amp;rsquo;s&lt;/em&gt; templates</source>
          <target state="translated">&lt;em&gt;アプリケーションの&lt;/em&gt;テンプレートをカスタマイズする</target>
        </trans-unit>
        <trans-unit id="8db51360adc406f3c536825e4a81671a75d5c8cf" translate="yes" xml:space="preserve">
          <source>Customizing your &lt;em&gt;project&amp;rsquo;s&lt;/em&gt; templates</source>
          <target state="translated">&lt;em&gt;プロジェクトの&lt;/em&gt;テンプレートをカスタマイズする</target>
        </trans-unit>
        <trans-unit id="987f411227cd62e1d9d2747e9d01bc6388c54944" translate="yes" xml:space="preserve">
          <source>DATA_UPLOAD_MAX_MEMORY_SIZE</source>
          <target state="translated">DATA_UPLOAD_MAX_MEMORY_SIZE</target>
        </trans-unit>
        <trans-unit id="5750f2d08e40bca98a28bf2a9b714836e0fe00a7" translate="yes" xml:space="preserve">
          <source>DATA_UPLOAD_MAX_NUMBER_FIELDS</source>
          <target state="translated">DATA_UPLOAD_MAX_NUMBER_FIELDS</target>
        </trans-unit>
        <trans-unit id="a987cc1f335205c5c000f01b405ca5783de2344b" translate="yes" xml:space="preserve">
          <source>DO NOT USE THIS SERVER IN A PRODUCTION SETTING. It has not gone through security audits or performance tests. (And that&amp;rsquo;s how it&amp;rsquo;s gonna stay. We&amp;rsquo;re in the business of making Web frameworks, not Web servers, so improving this server to be able to handle a production environment is outside the scope of Django.)</source>
          <target state="translated">このサーバーを運用環境で使用しないでください。セキュリティ監査やパフォーマンステストは実施されていません。（そして、それが今のままです。私たちはWebサーバーではなくWebフレームワークを作成するビジネスに従事しているので、本番環境を処理できるようにこのサーバーを改善することは、Djangoの範囲外です。）</target>
        </trans-unit>
        <trans-unit id="6b58f5eaa2a826388da846448a415bd3b556b444" translate="yes" xml:space="preserve">
          <source>DROP TABLESPACE</source>
          <target state="translated">テーブルスペースのドロップ</target>
        </trans-unit>
        <trans-unit id="11cf63e97fca8f5739f4d40bb716551c534d305c" translate="yes" xml:space="preserve">
          <source>DROP USER</source>
          <target state="translated">ドロップユーザ</target>
        </trans-unit>
        <trans-unit id="a812312e430870167fa53943a7ddb12f6f0e7ef7" translate="yes" xml:space="preserve">
          <source>Data Migrations</source>
          <target state="translated">データの移行</target>
        </trans-unit>
        <trans-unit id="ff838532a17a9bf53f2dd50827a7cf7490286eb4" translate="yes" xml:space="preserve">
          <source>Data is written to the &lt;code&gt;GDALBand&lt;/code&gt; if the &lt;code&gt;data&lt;/code&gt; parameter is provided. The input can be of one of the following types - packed string, buffer, list, array, and NumPy array. The number of items in the input should normally correspond to the total number of pixels in the band, or to the number of pixels for a specific block of pixel values if the &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters are provided.</source>
          <target state="translated">データパラメータが指定されている場合、 &lt;code&gt;data&lt;/code&gt; は &lt;code&gt;GDALBand&lt;/code&gt; に書き込まれます。入力は、パックされた文字列、バッファ、リスト、配列、およびNumPy配列のいずれかのタイプになります。入力の項目数は、通常、バンドのピクセルの総数、または &lt;code&gt;offset&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメーターが指定されている場合は特定のピクセル値のブロックのピクセル数に対応している必要があります。</target>
        </trans-unit>
        <trans-unit id="5fcb2efcf8f2609249be0f201f623f9a4d68b9b5" translate="yes" xml:space="preserve">
          <source>Data migrations and multiple databases</source>
          <target state="translated">データ移行と複数のデータベース</target>
        </trans-unit>
        <trans-unit id="81b7c9d512743003a90c2ad0d1f8f6a570fd978c" translate="yes" xml:space="preserve">
          <source>Data reset</source>
          <target state="translated">データリセット</target>
        </trans-unit>
        <trans-unit id="b32db47328d8772b22ceb0af8cd5675ba31ec819" translate="yes" xml:space="preserve">
          <source>Data source objects can have different layers of geospatial features; however, shapefiles are only allowed to have one layer:</source>
          <target state="translated">データソースオブジェクトは、地理空間フィーチャの異なるレイヤーを持つことができますが、シェイプファイルは1つのレイヤーしか持つことができません。</target>
        </trans-unit>
        <trans-unit id="ac512b2277dc12fb253b90cadeff4b79f7f0c52d" translate="yes" xml:space="preserve">
          <source>Data validation</source>
          <target state="translated">データの検証</target>
        </trans-unit>
        <trans-unit id="61074f1c958d6cdd32dad889b3d58a2d0704cbe3" translate="yes" xml:space="preserve">
          <source>Database</source>
          <target state="translated">Database</target>
        </trans-unit>
        <trans-unit id="84e4359569b343c221776e64428717c072c28795" translate="yes" xml:space="preserve">
          <source>Database &lt;a href=&quot;#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;fixtures&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データベース&lt;a href=&quot;#django.test.TransactionTestCase.fixtures&quot;&gt; &lt;code&gt;fixtures&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bac23f66394de8fde26d23dbcd9da3059e8c61ac" translate="yes" xml:space="preserve">
          <source>Database Exceptions</source>
          <target state="translated">データベースの例外</target>
        </trans-unit>
        <trans-unit id="aba115d9062bb7b2f8814ed825125ddb7a3c96c0" translate="yes" xml:space="preserve">
          <source>Database Functions</source>
          <target state="translated">データベース機能</target>
        </trans-unit>
        <trans-unit id="cdc81aa36ed554aeb50f5d23e1a57ea70956e182" translate="yes" xml:space="preserve">
          <source>Database Representation</source>
          <target state="translated">データベース表現</target>
        </trans-unit>
        <trans-unit id="d6066bdddff4236d40fda0df2e79d644f6b86600" translate="yes" xml:space="preserve">
          <source>Database Wrappers</source>
          <target state="translated">データベースラッパー</target>
        </trans-unit>
        <trans-unit id="139d853c40c2761d9a187500ec19678b9d1407bf" translate="yes" xml:space="preserve">
          <source>Database access optimization</source>
          <target state="translated">データベースアクセスの最適化</target>
        </trans-unit>
        <trans-unit id="29408e56b0a4999d99c270efbe0ec050a118eceb" translate="yes" xml:space="preserve">
          <source>Database caching</source>
          <target state="translated">データベースのキャッシング</target>
        </trans-unit>
        <trans-unit id="aa5f2437b66f2d6da0600c1896ec4baef76e4c08" translate="yes" xml:space="preserve">
          <source>Database connection parameters are probably different in development and in production.</source>
          <target state="translated">データベースの接続パラメータは、開発時と本番時ではおそらく異なります。</target>
        </trans-unit>
        <trans-unit id="c0aa4c1f52dca8c803a9f74c78b22b38aa0a5f27" translate="yes" xml:space="preserve">
          <source>Database exceptions may be imported from &lt;code&gt;django.db&lt;/code&gt;.</source>
          <target state="translated">データベースの例外は &lt;code&gt;django.db&lt;/code&gt; からインポートできます。</target>
        </trans-unit>
        <trans-unit id="4fd856a5b46cdf9a80702df4bc303ec320caa529" translate="yes" xml:space="preserve">
          <source>Database functions</source>
          <target state="translated">データベース機能</target>
        </trans-unit>
        <trans-unit id="2abde0154d38dc69279d63ae5d700f37d56cb8f6" translate="yes" xml:space="preserve">
          <source>Database installation</source>
          <target state="translated">データベースのインストール</target>
        </trans-unit>
        <trans-unit id="0252e25f7f905b6ee26062252e349dd4a604862c" translate="yes" xml:space="preserve">
          <source>Database instrumentation</source>
          <target state="translated">データベースの計装</target>
        </trans-unit>
        <trans-unit id="c7c76dbb51befa2b17f875f1d802153ea0d11dd7" translate="yes" xml:space="preserve">
          <source>Database migration operations</source>
          <target state="translated">データベース移行作業</target>
        </trans-unit>
        <trans-unit id="9f880b9e5e4723468be0ca6c5c7d681c4aa5f505" translate="yes" xml:space="preserve">
          <source>Database optimization</source>
          <target state="translated">データベースの最適化</target>
        </trans-unit>
        <trans-unit id="b8e88cc3a57ce147729af4249a83f5ab24a3e875" translate="yes" xml:space="preserve">
          <source>Database passwords are very sensitive. You should protect them exactly like &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データベースのパスワードは非常に機密です。&lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; と&lt;/a&gt;まったく同じように保護する必要があります。</target>
        </trans-unit>
        <trans-unit id="37e14fd7699801130697b1a440f51ad1ca1ba384" translate="yes" xml:space="preserve">
          <source>Database routers</source>
          <target state="translated">データベースルータ</target>
        </trans-unit>
        <trans-unit id="9014ac5cdd6d1e3f5253983d1008f07819f2c347" translate="yes" xml:space="preserve">
          <source>Database routers are installed using the &lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt;&lt;code&gt;DATABASE_ROUTERS&lt;/code&gt;&lt;/a&gt; setting. This setting defines a list of class names, each specifying a router that should be used by the master router (&lt;code&gt;django.db.router&lt;/code&gt;).</source>
          <target state="translated">データベースルーターは、&lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt; &lt;code&gt;DATABASE_ROUTERS&lt;/code&gt; &lt;/a&gt;設定を使用してインストールされます。この設定はクラス名のリストを定義し、それぞれがマスタールーター（ &lt;code&gt;django.db.router&lt;/code&gt; ）が使用するルーターを指定します。</target>
        </trans-unit>
        <trans-unit id="8e5e801029bb1ea439ed37b472f1040dda983357" translate="yes" xml:space="preserve">
          <source>Database setup</source>
          <target state="translated">データベースの設定</target>
        </trans-unit>
        <trans-unit id="31dfaa1204a605086f8fa0fc6782bceb0f80d633" translate="yes" xml:space="preserve">
          <source>Database storage</source>
          <target state="translated">データベースストレージ</target>
        </trans-unit>
        <trans-unit id="254201a1cd6b53ffb45f6e76fbc025f80039c274" translate="yes" xml:space="preserve">
          <source>Database support</source>
          <target state="translated">データベースサポート</target>
        </trans-unit>
        <trans-unit id="de63e8d097b4f4a0634d0fb814107a54e3b34258" translate="yes" xml:space="preserve">
          <source>Database transactions</source>
          <target state="translated">データベーストランザクション</target>
        </trans-unit>
        <trans-unit id="03fadeac0d68486e07c4ee9405b6335d13f52505" translate="yes" xml:space="preserve">
          <source>Database-specific fixtures</source>
          <target state="translated">データベース固有のフィクスチャ</target>
        </trans-unit>
        <trans-unit id="d3363d01cf150e94ab392893f862d8912e00e815" translate="yes" xml:space="preserve">
          <source>Database-specific notes</source>
          <target state="translated">データベース固有のメモ</target>
        </trans-unit>
        <trans-unit id="3b86ef0c86ec30b96def201de4b90737947c4f05" translate="yes" xml:space="preserve">
          <source>Database: &lt;a href=&quot;#std:setting-DATABASE-TEST&quot;&gt;&lt;code&gt;TEST&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">データベース：&lt;a href=&quot;#std:setting-DATABASE-TEST&quot;&gt; &lt;code&gt;TEST&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9df769b266c487f912c433c67364fc569bb2078" translate="yes" xml:space="preserve">
          <source>Databases</source>
          <target state="translated">Databases</target>
        </trans-unit>
        <trans-unit id="556659043954d5da31cc2609356e020369c828d9" translate="yes" xml:space="preserve">
          <source>Databases can have any alias you choose. However, the alias &lt;code&gt;default&lt;/code&gt; has special significance. Django uses the database with the alias of &lt;code&gt;default&lt;/code&gt; when no other database has been selected.</source>
          <target state="translated">データベースには、任意のエイリアスを選択できます。ただし、エイリアスの &lt;code&gt;default&lt;/code&gt; は特別な意味があります。他のデータベースが選択されていない場合、Djangoは &lt;code&gt;default&lt;/code&gt; のエイリアスを持つデータベースを使用します。</target>
        </trans-unit>
        <trans-unit id="13c3f652b5771ee2eca91ff8e23a77ac196a7c18" translate="yes" xml:space="preserve">
          <source>Databases timezone</source>
          <target state="translated">データベースのタイムゾーン</target>
        </trans-unit>
        <trans-unit id="b958a8c281531157c9f0c685ef5f87dc2bb49c4a" translate="yes" xml:space="preserve">
          <source>Date functions</source>
          <target state="translated">日付機能</target>
        </trans-unit>
        <trans-unit id="722e02eb4754ac850e59c24add2024f3104621a9" translate="yes" xml:space="preserve">
          <source>Date-based generic views, provided in &lt;a href=&quot;#module-django.views.generic.dates&quot;&gt;&lt;code&gt;django.views.generic.dates&lt;/code&gt;&lt;/a&gt;, are views for displaying drilldown pages for date-based data.</source>
          <target state="translated">&lt;a href=&quot;#module-django.views.generic.dates&quot;&gt; &lt;code&gt;django.views.generic.dates&lt;/code&gt; &lt;/a&gt;で提供される日付ベースの汎用ビューは、日付ベースのデータのドリルダウンページを表示するためのビューです。</target>
        </trans-unit>
        <trans-unit id="cc1cc70f02e495d4e6ff10b231493be79279e537" translate="yes" xml:space="preserve">
          <source>Date-based mixins</source>
          <target state="translated">日付ベースのミックスイン</target>
        </trans-unit>
        <trans-unit id="cb1ffdd5723c9c074a2c27bcd8a7723fe2f52f65" translate="yes" xml:space="preserve">
          <source>Date-based views</source>
          <target state="translated">データベースのビュー</target>
        </trans-unit>
        <trans-unit id="8e078bbb68dd3331035b940f947c4a5719704861" translate="yes" xml:space="preserve">
          <source>Day of the month without leading zeros.</source>
          <target state="translated">先頭のゼロがない月の日。</target>
        </trans-unit>
        <trans-unit id="b807017dea44363d85cc772768a88a0eabd8fdc2" translate="yes" xml:space="preserve">
          <source>Day of the month, 2 digits with leading zeros.</source>
          <target state="translated">月の日、2桁の数字で、先頭にゼロを付けます。</target>
        </trans-unit>
        <trans-unit id="55d62f5c366cf10a550473d88dce2a8d8ebc13fb" translate="yes" xml:space="preserve">
          <source>Day of the week, digits without leading zeros.</source>
          <target state="translated">曜日、先頭のゼロを含まない数字。</target>
        </trans-unit>
        <trans-unit id="eb83669585b40f30731fa803eeb62366ad3de470" translate="yes" xml:space="preserve">
          <source>Day of the week, textual, 3 letters.</source>
          <target state="translated">曜日、テキスト、3文字。</target>
        </trans-unit>
        <trans-unit id="ed8cb970427579b8db2c4d5c57a0060c0319253e" translate="yes" xml:space="preserve">
          <source>Day of the week, textual, long.</source>
          <target state="translated">曜日、テキスト、長い。</target>
        </trans-unit>
        <trans-unit id="9d217acf15d9c91018c040a87e1a6703ff4783db" translate="yes" xml:space="preserve">
          <source>Day of the year.</source>
          <target state="translated">一年のうちの一日。</target>
        </trans-unit>
        <trans-unit id="51f65709e1fa200146c24178ae25721f4965a72b" translate="yes" xml:space="preserve">
          <source>Day-based archive page &amp;ndash; displays all entries in the given day.</source>
          <target state="translated">日ベースのアーカイブページ&amp;ndash;特定の日のすべてのエントリを表示します。</target>
        </trans-unit>
        <trans-unit id="cf376db74e48db2de7a580650158c8e131860084" translate="yes" xml:space="preserve">
          <source>Daylight Savings Time, whether it&amp;rsquo;s in effect or not.</source>
          <target state="translated">有効かどうかに関係なく、夏時間。</target>
        </trans-unit>
        <trans-unit id="e2269848e603601cacee606bc27a4cecca3cf161" translate="yes" xml:space="preserve">
          <source>Deactivates the currently active translation object so that further _ calls will resolve against the default translation object, again.</source>
          <target state="translated">現在アクティブな翻訳オブジェクトを非アクティブにして、_の呼び出しがデフォルトの翻訳オブジェクトに対して解決されるようにします。</target>
        </trans-unit>
        <trans-unit id="b1cbf2732fefc0bef13dd4d4df04fdfa0d736ebd" translate="yes" xml:space="preserve">
          <source>Deactivating transaction management</source>
          <target state="translated">トランザクション管理の非アクティブ化</target>
        </trans-unit>
        <trans-unit id="5cd4b6926376e0aec947ef8f062c7452118e99af" translate="yes" xml:space="preserve">
          <source>Dealing with aware datetime objects isn&amp;rsquo;t always intuitive. For instance, the &lt;code&gt;tzinfo&lt;/code&gt; argument of the standard datetime constructor doesn&amp;rsquo;t work reliably for time zones with DST. Using UTC is generally safe; if you&amp;rsquo;re using other time zones, you should review the &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; documentation carefully.</source>
          <target state="translated">認識されている日時オブジェクトの処理は、常に直感的であるとは限りません。たとえば、標準の日時コンストラクタの &lt;code&gt;tzinfo&lt;/code&gt; 引数は、DSTを使用するタイムゾーンでは確実に機能しません。UTCの使用は一般的に安全です。他のタイムゾーンを使用している場合は、&lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytzの&lt;/a&gt;ドキュメントをよく確認してください。</target>
        </trans-unit>
        <trans-unit id="52a3bbdf305e5eee2989a426b9bc475e127fd785" translate="yes" xml:space="preserve">
          <source>Dealing with conflicts</source>
          <target state="translated">葛藤への対応</target>
        </trans-unit>
        <trans-unit id="3ff864b9048671a9eba40ddeb105557bfb77fe4e" translate="yes" xml:space="preserve">
          <source>Dealing with forms that have &lt;code&gt;FileField&lt;/code&gt; and &lt;code&gt;ImageField&lt;/code&gt; fields is a little more complicated than a normal form.</source>
          <target state="translated">&lt;code&gt;FileField&lt;/code&gt; および &lt;code&gt;ImageField&lt;/code&gt; フィールドを持つフォームの処理は、通常のフォームよりも少し複雑です。</target>
        </trans-unit>
        <trans-unit id="31974ede893790b6091543eb2ad457264207da69" translate="yes" xml:space="preserve">
          <source>Dealing with ordering and deletion of forms</source>
          <target state="translated">帳票の発注・削除に対応</target>
        </trans-unit>
        <trans-unit id="617b08e20f97d4dbfa8241cf495eb982b9ba2ca3" translate="yes" xml:space="preserve">
          <source>Dealing with streaming responses</source>
          <target state="translated">ストリーミング応答への対応</target>
        </trans-unit>
        <trans-unit id="e3afa8dd01711103e96589a90b95ce9fc84b48ee" translate="yes" xml:space="preserve">
          <source>Debug integration for custom engines</source>
          <target state="translated">カスタムエンジンのデバッグ統合</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="0f569ab827cea4307fb56e4d259c3fb468135b4c" translate="yes" xml:space="preserve">
          <source>Decimal handling</source>
          <target state="translated">10進数処理</target>
        </trans-unit>
        <trans-unit id="e477488866d963ac8a2e2a726cd08a51d3e7f0af" translate="yes" xml:space="preserve">
          <source>Declaring tablespaces for indexes</source>
          <target state="translated">インデックスのテーブル空間の宣言</target>
        </trans-unit>
        <trans-unit id="3ca53cee65ec35cdc69d4aa4faa1f9ae01c2323a" translate="yes" xml:space="preserve">
          <source>Declaring tablespaces for tables</source>
          <target state="translated">テーブルのテーブルスペースの宣言</target>
        </trans-unit>
        <trans-unit id="c59fb0bb941962f005be45aac075ea6b6506029d" translate="yes" xml:space="preserve">
          <source>Decodes a base64 encoded string, adding back any trailing equal signs that might have been stripped.</source>
          <target state="translated">base64でエンコードされた文字列をデコードし、最後の等号が取り除かれている可能性がある場合はそれを追加します。</target>
        </trans-unit>
        <trans-unit id="7f1057027db663ad03628a7e9b7e58b2eed4218b" translate="yes" xml:space="preserve">
          <source>Decoding is performed by the session store class.</source>
          <target state="translated">デコードはセッションストアクラスによって行われます。</target>
        </trans-unit>
        <trans-unit id="82408e489aa5a6b0f0d4cec1f18c6b2a57031709" translate="yes" xml:space="preserve">
          <source>Decorating class-based views</source>
          <target state="translated">クラス別ビューのデコレーション</target>
        </trans-unit>
        <trans-unit id="6bef610601777b9150d1e821dfed27022cdf98a2" translate="yes" xml:space="preserve">
          <source>Decorating in URLconf</source>
          <target state="translated">URLconfでのデコレーション</target>
        </trans-unit>
        <trans-unit id="67ec55df0349b8b264b29b9e73078a50c7ebe91f" translate="yes" xml:space="preserve">
          <source>Decorating the class</source>
          <target state="translated">クラスの飾り付け</target>
        </trans-unit>
        <trans-unit id="8d0cd2fea7b605a0b9b931e6db6412863ba912e9" translate="yes" xml:space="preserve">
          <source>Decorator that provides the protection of &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; to a view.</source>
          <target state="translated">&lt;code&gt;CsrfViewMiddleware&lt;/code&gt; の保護をビューに提供するデコレーター。</target>
        </trans-unit>
        <trans-unit id="972f8e67f89bd5e0ee7eb2a48682855b93e80882" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts particular request methods. Usage:</source>
          <target state="translated">ビューが特定のリクエストメソッドのみを受け入れるように要求するためのデコレータです。使用法。</target>
        </trans-unit>
        <trans-unit id="3c9fd7a0d9a26379b735568c0936722ca89e1544" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the GET and HEAD methods. These methods are commonly considered &amp;ldquo;safe&amp;rdquo; because they should not have the significance of taking an action other than retrieving the requested resource.</source>
          <target state="translated">ビューがGETメソッドとHEADメソッドのみを受け入れることを要求するデコレーター。これらのメソッドは、要求されたリソースを取得する以外のアクションを実行する意味を持たないため、一般に「安全」と見なされます。</target>
        </trans-unit>
        <trans-unit id="1ca9b58e5c658446309b8f4617d734c96d8a5221" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the GET method.</source>
          <target state="translated">ビューがGETメソッドのみを受け入れることを要求するためのデコレータです。</target>
        </trans-unit>
        <trans-unit id="f63237f3cde011215cbd36f39fc19a2e6569920b" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the POST method.</source>
          <target state="translated">ビューがPOSTメソッドのみを受け入れることを要求するためのデコレータです。</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="3b0fe449d57e268a242fe7327c25ad202ce29960" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__avg&lt;/code&gt;</source>
          <target state="translated">デフォルトのエイリアス： &lt;code&gt;&amp;lt;field&amp;gt;__avg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3eaf6c75d4bd5d8d352ce896722d2d60a3da505a" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__count&lt;/code&gt;</source>
          <target state="translated">デフォルトのエイリアス： &lt;code&gt;&amp;lt;field&amp;gt;__count&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bf958307ec625f89e7e98794f1ef83fb00e2434" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__max&lt;/code&gt;</source>
          <target state="translated">デフォルトのエイリアス： &lt;code&gt;&amp;lt;field&amp;gt;__max&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81a2b03f6caf151b5d73c09404079f4f6445cf5b" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__min&lt;/code&gt;</source>
          <target state="translated">デフォルトのエイリアス： &lt;code&gt;&amp;lt;field&amp;gt;__min&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="501c6641474c76547a2948547e923a6fe357c5bc" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__stddev&lt;/code&gt;</source>
          <target state="translated">デフォルトのエイリアス： &lt;code&gt;&amp;lt;field&amp;gt;__stddev&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1135bbbe27a179415d3e4f2ab9055f804ee1d624" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__sum&lt;/code&gt;</source>
          <target state="translated">デフォルトのエイリアス： &lt;code&gt;&amp;lt;field&amp;gt;__sum&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe72e50aa6157456761eaa0a11e54b0cbf5b1c11" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__variance&lt;/code&gt;</source>
          <target state="translated">デフォルトのエイリアス： &lt;code&gt;&amp;lt;field&amp;gt;__variance&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24d84a2eb70fb18836de40a22e38c9de9ff0c038" translate="yes" xml:space="preserve">
          <source>Default charset to use for all &lt;code&gt;HttpResponse&lt;/code&gt; objects, if a MIME type isn&amp;rsquo;t manually specified. Used when constructing the &lt;code&gt;Content-Type&lt;/code&gt; header.</source>
          <target state="translated">MIMEタイプが手動で指定されていない場合、すべての &lt;code&gt;HttpResponse&lt;/code&gt; オブジェクトに使用するデフォルトの文字セット。 &lt;code&gt;Content-Type&lt;/code&gt; ヘッダーを作成するときに使用されます。</target>
        </trans-unit>
        <trans-unit id="e65e7dabc01b374a999316b09f6e602c1a427c4e" translate="yes" xml:space="preserve">
          <source>Default decimal separator used when formatting decimal numbers.</source>
          <target state="translated">10進数をフォーマットする際に使用されるデフォルトの10進数セパレータ。</target>
        </trans-unit>
        <trans-unit id="6b13cc3341a4dd79a6a1c1eb5801aae744b7f3c9" translate="yes" xml:space="preserve">
          <source>Default email address to use for various automated correspondence from the site manager(s). This doesn&amp;rsquo;t include error messages sent to &lt;a href=&quot;#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt;; for that, see &lt;a href=&quot;#std:setting-SERVER_EMAIL&quot;&gt;&lt;code&gt;SERVER_EMAIL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サイト管理者からのさまざまな自動通信に使用するデフォルトの電子メールアドレス。これには、&lt;a href=&quot;#std:setting-ADMINS&quot;&gt; &lt;code&gt;ADMINS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#std:setting-MANAGERS&quot;&gt; &lt;code&gt;MANAGERS&lt;/code&gt; に&lt;/a&gt;送信されたエラーメッセージは含まれません。これについては、&lt;a href=&quot;#std:setting-SERVER_EMAIL&quot;&gt; &lt;code&gt;SERVER_EMAIL&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e784ec9feff7e590e947c70f059ab1c6fd9698ae" translate="yes" xml:space="preserve">
          <source>Default exception reporter class to be used if none has been assigned to the &lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; instance yet. See &lt;a href=&quot;../howto/error-reporting#custom-error-reports&quot;&gt;Custom error reports&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;インスタンスにまだ何も割り当てられていない場合に使用されるデフォルトの例外レポータークラス。&lt;a href=&quot;../howto/error-reporting#custom-error-reports&quot;&gt;カスタムエラーレポートを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5fb44ecfff41fd115c1b6e966af813aa712ecb3d" translate="yes" xml:space="preserve">
          <source>Default exception reporter filter class to be used if none has been assigned to the &lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; instance yet. See &lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;Filtering error reports&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;インスタンスにまだ何も割り当てられていない場合に使用されるデフォルトの例外レポーターフィルタークラス。&lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;エラーレポートのフィルタリングを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9f6bd7c5b8f99d4c3287ab161141ae82712f34c6" translate="yes" xml:space="preserve">
          <source>Default file storage</source>
          <target state="translated">デフォルトのファイルストレージ</target>
        </trans-unit>
        <trans-unit id="6d6d27203a47ff3eb307b6d6007ca286fb0acfeb" translate="yes" xml:space="preserve">
          <source>Default file storage class to be used for any file-related operations that don&amp;rsquo;t specify a particular storage system. See &lt;a href=&quot;../topics/files&quot;&gt;Managing files&lt;/a&gt;.</source>
          <target state="translated">特定のストレージシステムを指定しないファイル関連の操作に使用されるデフォルトのファイルストレージクラス。&lt;a href=&quot;../topics/files&quot;&gt;ファイルの管理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f4463d75db6a34c6075628c864050dff637de2d2" translate="yes" xml:space="preserve">
          <source>Default hashing algorithm to use for encoding cookies, password reset tokens in the admin site, user sessions, and signatures created by &lt;a href=&quot;../topics/signing#django.core.signing.Signer&quot;&gt;&lt;code&gt;django.core.signing.Signer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../topics/signing#django.core.signing.dumps&quot;&gt;&lt;code&gt;django.core.signing.dumps()&lt;/code&gt;&lt;/a&gt;. Algorithm must be &lt;code&gt;'sha1'&lt;/code&gt; or &lt;code&gt;'sha256'&lt;/code&gt;. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.1/releases/3.1/#default-hashing-algorithm-usage&quot;&gt;release notes&lt;/a&gt; for usage details.</source>
          <target state="translated">Cookieのエンコード、管理サイトでのパスワードリセットトークン、ユーザーセッション、および&lt;a href=&quot;../topics/signing#django.core.signing.Signer&quot;&gt; &lt;code&gt;django.core.signing.Signer&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../topics/signing#django.core.signing.dumps&quot;&gt; &lt;code&gt;django.core.signing.dumps()&lt;/code&gt; &lt;/a&gt;によって作成された署名に使用するデフォルトのハッシュアルゴリズム。アルゴリズムは &lt;code&gt;'sha1'&lt;/code&gt; または &lt;code&gt;'sha256'&lt;/code&gt; 必要があります。参照してください。&lt;a href=&quot;https://docs.djangoproject.com/en/3.1/releases/3.1/#default-hashing-algorithm-usage&quot;&gt;リリースノートを&lt;/a&gt;使用方法の詳細については。</target>
        </trans-unit>
        <trans-unit id="50a0916ed3f84c51b602042d09ce4dddbd8c564b" translate="yes" xml:space="preserve">
          <source>Default managers</source>
          <target state="translated">デフォルトマネージャ</target>
        </trans-unit>
        <trans-unit id="3756df3c62f47f45ddc117d75f48aa29a7d1dddb" translate="yes" xml:space="preserve">
          <source>Default options</source>
          <target state="translated">デフォルトのオプション</target>
        </trans-unit>
        <trans-unit id="996c921f2aac61858015eef2b97cb09b1e41b64e" translate="yes" xml:space="preserve">
          <source>Default ordering also affects &lt;a href=&quot;../../topics/db/aggregation#aggregation-ordering-interaction&quot;&gt;aggregation queries&lt;/a&gt; but this won&amp;rsquo;t be the case starting in Django 3.1.</source>
          <target state="translated">デフォルトの順序は&lt;a href=&quot;../../topics/db/aggregation#aggregation-ordering-interaction&quot;&gt;集約クエリに&lt;/a&gt;も影響しますが、Django 3.1以降ではそうなりません。</target>
        </trans-unit>
        <trans-unit id="cec06182adb9ef48485b8098e33a5cb872878965" translate="yes" xml:space="preserve">
          <source>Default permissions</source>
          <target state="translated">デフォルトのパーミッション</target>
        </trans-unit>
        <trans-unit id="82a7c50e5936d25255d8f80258ec7514452c02fd" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt;&lt;code&gt;get_login_url()&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;None&lt;/code&gt; in which case &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt;&lt;code&gt;get_login_url()&lt;/code&gt;&lt;/a&gt; falls back to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt; &lt;code&gt;get_login_url()&lt;/code&gt; の&lt;/a&gt;デフォルトの戻り値。デフォルトは &lt;code&gt;None&lt;/code&gt; で、この場合&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt; &lt;code&gt;get_login_url()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt; &lt;code&gt;settings.LOGIN_URL&lt;/code&gt; に&lt;/a&gt;フォールバックします。</target>
        </trans-unit>
        <trans-unit id="ca3f7bd4f5652d2aafd39eed12ef8ded4b329415" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_permission_denied_message&quot;&gt;&lt;code&gt;get_permission_denied_message()&lt;/code&gt;&lt;/a&gt;. Defaults to an empty string.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_permission_denied_message&quot;&gt; &lt;code&gt;get_permission_denied_message()&lt;/code&gt; の&lt;/a&gt;デフォルトの戻り値。デフォルトは空の文字列です。</target>
        </trans-unit>
        <trans-unit id="ec3964d878af62515ab9444a067c3f00ef457bdb" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_redirect_field_name&quot;&gt;&lt;code&gt;get_redirect_field_name()&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;&quot;next&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_redirect_field_name&quot;&gt; &lt;code&gt;get_redirect_field_name()&lt;/code&gt; の&lt;/a&gt;デフォルトの戻り値。デフォルトは &lt;code&gt;&quot;next&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="57afbebd04d4d02458682eb7fa90339a9d41caac" translate="yes" xml:space="preserve">
          <source>Default settings</source>
          <target state="translated">デフォルト設定</target>
        </trans-unit>
        <trans-unit id="be4415a1ce985191113c4bb5cb2500ff02b89f6a" translate="yes" xml:space="preserve">
          <source>Default tablespace to use for indexes on fields that don&amp;rsquo;t specify one, if the backend supports it (see &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;Tablespaces&lt;/a&gt;).</source>
          <target state="translated">バックエンドがサポートしている場合、指定されていないフィールドのインデックスに使用するデフォルトのテーブルスペース（&lt;a href=&quot;../topics/db/tablespaces&quot;&gt;テーブルスペースを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="6da8375a64a743aeebdcbfc4d9587db3ab1fde74" translate="yes" xml:space="preserve">
          <source>Default tablespace to use for models that don&amp;rsquo;t specify one, if the backend supports it (see &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;Tablespaces&lt;/a&gt;).</source>
          <target state="translated">バックエンドがサポートしている場合、指定しないモデルに使用するデフォルトのテーブルスペース（&lt;a href=&quot;../topics/db/tablespaces&quot;&gt;テーブルスペースを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="3c990d8a53e39e8b302130b171d6366213cbb402" translate="yes" xml:space="preserve">
          <source>Default test client</source>
          <target state="translated">デフォルトのテストクライアント</target>
        </trans-unit>
        <trans-unit id="dfd09f8fd9cf2c070c82bec7a1d8ebc98a5ef611" translate="yes" xml:space="preserve">
          <source>Default thousand separator used when formatting numbers. This setting is used only when &lt;a href=&quot;#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;USE_THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; and &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt;&lt;code&gt;NUMBER_GROUPING&lt;/code&gt;&lt;/a&gt; is greater than &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">数値をフォーマットするときに使用されるデフォルトの桁区切り記号。この設定は、&lt;a href=&quot;#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt; &lt;code&gt;USE_THOUSAND_SEPARATOR&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;True&lt;/code&gt; で、&lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt; &lt;code&gt;NUMBER_GROUPING&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;0&lt;/code&gt; より大きい場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="60101bb52e0eb77d1dffe8d347f02222b3adc952" translate="yes" xml:space="preserve">
          <source>Default time zone and current time zone</source>
          <target state="translated">デフォルトのタイムゾーンと現在のタイムゾーン</target>
        </trans-unit>
        <trans-unit id="30dcd9266de46024c5550a95bf06e6551c891c06" translate="yes" xml:space="preserve">
          <source>Default translation and loaded translations</source>
          <target state="translated">デフォルトの翻訳とロードされた翻訳</target>
        </trans-unit>
        <trans-unit id="358f756060b88e7ac6c296590e4f9a6dfd4562ca" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.CheckboxInput&quot;&gt;&lt;code&gt;CheckboxInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.CheckboxInput&quot;&gt; &lt;code&gt;CheckboxInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="089fe43d0305a75b72b2fc9fd0c7a2cfadbdd100" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.ClearableFileInput&quot;&gt;&lt;code&gt;ClearableFileInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.ClearableFileInput&quot;&gt; &lt;code&gt;ClearableFileInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="973eef6613272c16ce8ff919da8800344eed11b3" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.DateInput&quot;&gt;&lt;code&gt;DateInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.DateInput&quot;&gt; &lt;code&gt;DateInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="010317b0fbc21e70bbdc610a64db58fbe24a1058" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.DateTimeInput&quot;&gt;&lt;code&gt;DateTimeInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.DateTimeInput&quot;&gt; &lt;code&gt;DateTimeInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e289b2a85750f2010538e3332df07cbca51a421e" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.EmailInput&quot;&gt;&lt;code&gt;EmailInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.EmailInput&quot;&gt; &lt;code&gt;EmailInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77d144f985bd591ee2a97487b8be2a1c6e9ee0f3" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.NullBooleanSelect&quot;&gt;&lt;code&gt;NullBooleanSelect&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.NullBooleanSelect&quot;&gt; &lt;code&gt;NullBooleanSelect&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c2869b87f6e3bd55fdd1fa60a76bde3b1f910c8" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.NumberInput&quot;&gt;&lt;code&gt;NumberInput&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#django.forms.Field.localize&quot;&gt;&lt;code&gt;Field.localize&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, else &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.NumberInput&quot;&gt; &lt;code&gt;NumberInput&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;False&lt;/code&gt; の場合は&lt;a href=&quot;#django.forms.Field.localize&quot;&gt; &lt;code&gt;Field.localize&lt;/code&gt; &lt;/a&gt;、それ以外の場合は&lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9b9563d18b281e60f2309788320e1b53668806a" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.Select&quot;&gt; &lt;code&gt;Select&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="534d27365a71daaeb4057cacfa758a7494188dae" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.SelectMultiple&quot;&gt;&lt;code&gt;SelectMultiple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.SelectMultiple&quot;&gt; &lt;code&gt;SelectMultiple&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="032ac55edbf5e8dd3296d97c892ee0be45509407" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.SplitDateTimeWidget&quot;&gt;&lt;code&gt;SplitDateTimeWidget&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.SplitDateTimeWidget&quot;&gt; &lt;code&gt;SplitDateTimeWidget&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee64ba75c25272a4b678ec490759a45df9fea43c" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08f34f7d2ecc54f60587b4fdcc614ed903aadffc" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.Textarea&quot;&gt;&lt;code&gt;Textarea&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">デフォルトのウィジェット：&lt;a href=&quot;widgets#django.forms.Textarea&quot;&gt; &lt;code&gt;Textarea&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
